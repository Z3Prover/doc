(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun P_2 () Int)
(declare-fun P_3 () Int)
(declare-fun P_4 () Bool)
(declare-fun P_5 () Bool)
(declare-fun P_6 () Int)
(declare-fun P_7 () Int)
(declare-fun P_8 () Bool)
(declare-fun P_9 () Bool)
(assert (<= (* 8 (- 1)) P_2))
(assert (<= P_2 7))
(assert (<= (* 2 (- 1)) P_3))
(assert (<= P_3 1))
(assert (<= (* 8 (- 1)) P_6))
(assert (<= P_6 7))
(assert (<= (* 2 (- 1)) P_7))
(assert (<= P_7 1))
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_0 (< P_2 0)) (?v_1 (< P_3 0)) (?v_2 (< P_6 0)) (?v_3 (< P_7 0))) (let ((?v_4 (* (ite (not (or (and (not ?v_0) (or ?v_1 P_4)) (and ?v_0 (or (not ?v_1) P_5)))) (* P_3 16) 0) (ite (not (or (and (not ?v_2) (or ?v_3 P_8)) (and ?v_2 (or (not ?v_3) P_9)))) (* P_7 16) 0)))) (= (+ (* 4294967296 dz) rz) (- ?v_4 (ite (>= ?v_4 0) ?v_4 (+ ?v_4 4096)))))))
(assert (> rz 0))
(assert (< rz 4294967296))
(check-sat)
(exit)
