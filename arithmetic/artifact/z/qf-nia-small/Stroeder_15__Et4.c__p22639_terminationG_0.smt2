(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun Nl2main_a1 () Int)
(declare-fun Nl2main_b1 () Int)
(declare-fun Nl2main_c1 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam0n3 () Int)
(declare-fun Nl2CT1 () Int)
(declare-fun lam0n2 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam2n4 () Int)
(declare-fun main_a () Int)
(declare-fun main_b () Int)
(declare-fun main_c () Int)
(declare-fun undef5 () Int)
(declare-fun undef6 () Int)
(declare-fun undef7 () Int)
(declare-fun lam6n0 () Int)
(declare-fun lam6n1 () Int)
(declare-fun lam6n3 () Int)
(declare-fun RFN1_CT () Int)
(declare-fun RFN1_main_a () Int)
(declare-fun RFN1_main_b () Int)
(declare-fun RFN1_main_c () Int)
(declare-fun lam6n2 () Int)
(declare-fun lam4n0 () Int)
(declare-fun lam4n1 () Int)
(declare-fun lam4n3 () Int)
(declare-fun lam4n2 () Int)
(declare-fun lam5n0 () Int)
(declare-fun lam5n1 () Int)
(declare-fun lam5n3 () Int)
(declare-fun lam5n2 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam3n3 () Int)
(declare-fun lam3n2 () Int)
(assert ( and ( <= ( - 10 ) Nl2main_a1 ) ( <= Nl2main_a1 10 ) ( <= ( - 10 ) Nl2main_b1 ) ( <= Nl2main_b1 10 ) ( <= ( - 10 ) Nl2main_c1 ) ( <= Nl2main_c1 10 ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n3 0 ) ( > ( + ( * 1 lam0n0 ) ( * 1 lam0n1 ) ( * Nl2CT1 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * 1 lam0n2 ) ( * Nl2main_a1 lam0n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * ( - 1 ) lam0n1 ) ( * Nl2main_b1 lam0n3 ) ) 0 ) ( = ( + ( * 1 lam0n1 ) ( * ( - 1 ) lam0n2 ) ( * Nl2main_c1 lam0n3 ) ) 0 ) ) ( and ( >= lam1n0 0 ) ( >= lam1n1 0 ) ( >= lam1n3 0 ) ( > ( + ( * 1 lam1n0 ) ( * 1 lam1n1 ) ( * Nl2CT1 lam1n3 ) ( - 1 ( + ( + ( + Nl2CT1 ( * Nl2main_a1 1 ) ) ( * Nl2main_b1 10 ) ) ( * Nl2main_c1 1 ) ) ) ) 0 ) ( = ( + ( * 1 lam1n0 ) ( * 1 lam1n2 ) ( * Nl2main_a1 lam1n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n0 ) ( * ( - 1 ) lam1n1 ) ( * Nl2main_b1 lam1n3 ) ) 0 ) ( = ( + ( * 1 lam1n1 ) ( * ( - 1 ) lam1n2 ) ( * Nl2main_c1 lam1n3 ) ( - ( + ( + 0 ( * Nl2main_a1 1 ) ) ( * Nl2main_c1 1 ) ) ) ) 0 ) ( = ( - ( + ( + 0 ( * Nl2main_a1 1 ) ) ( * Nl2main_c1 1 ) ) ) 0 ) ) ))
(assert ( and ( not ( <= ( + ( * ( - 1 ) main_a ) main_b ) 0 ) ) ( = ( + main_a ( * ( - 1 ) main_c ) ) 0 ) ( = ( + main_a ( * ( - 1 ) undef5 ) ) 0 ) ( = ( + main_b ( * ( - 1 ) undef6 ) ) 0 ) ( = ( + main_c ( * ( - 1 ) undef7 ) ) 0 ) ( <= ( + Nl2CT1 ( * ( + 0 Nl2main_a1 ) main_a ) ( * ( + 0 Nl2main_b1 ) main_b ) ( * ( + 0 Nl2main_c1 ) main_c ) ) 0 ) ))
(assert ( or ( and ( and ( >= lam6n0 0 ) ( >= lam6n1 0 ) ( >= lam6n3 0 ) ( > ( + ( * 1 lam6n0 ) ( * 1 lam6n1 ) ( * Nl2CT1 lam6n3 ) ( - 1 ( - ( + ( + ( + RFN1_CT ( * RFN1_main_a 1 ) ) ( * RFN1_main_b 10 ) ) ( * RFN1_main_c 1 ) ) RFN1_CT ) ) ) 0 ) ( = ( + ( * 1 lam6n0 ) ( * 1 lam6n2 ) ( * Nl2main_a1 lam6n3 ) ( - ( - RFN1_main_a ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n0 ) ( * ( - 1 ) lam6n1 ) ( * Nl2main_b1 lam6n3 ) ( - ( - RFN1_main_b ) ) ) 0 ) ( = ( + ( * 1 lam6n1 ) ( * ( - 1 ) lam6n2 ) ( * Nl2main_c1 lam6n3 ) ( - ( - ( + ( + 0 ( * RFN1_main_a 1 ) ) ( * RFN1_main_c 1 ) ) RFN1_main_c ) ) ) 0 ) ( = ( - ( + ( + 0 ( * RFN1_main_a 1 ) ) ( * RFN1_main_c 1 ) ) ) 0 ) ) ( and ( and ( >= lam4n0 0 ) ( >= lam4n1 0 ) ( >= lam4n3 0 ) ( > ( + ( * 1 lam4n0 ) ( * 1 lam4n1 ) ( * Nl2CT1 lam4n3 ) ( - 1 ( - RFN1_CT ) ) ) 0 ) ( = ( + ( * 1 lam4n0 ) ( * 1 lam4n2 ) ( * Nl2main_a1 lam4n3 ) ( - ( - RFN1_main_a ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam4n0 ) ( * ( - 1 ) lam4n1 ) ( * Nl2main_b1 lam4n3 ) ( - ( - RFN1_main_b ) ) ) 0 ) ( = ( + ( * 1 lam4n1 ) ( * ( - 1 ) lam4n2 ) ( * Nl2main_c1 lam4n3 ) ( - ( - RFN1_main_c ) ) ) 0 ) ) ( and ( >= lam5n0 0 ) ( >= lam5n1 0 ) ( >= lam5n3 0 ) ( > ( + ( * 1 lam5n0 ) ( * 1 lam5n1 ) ( * Nl2CT1 lam5n3 ) ( - 1 ( + ( - ( + ( + ( + RFN1_CT ( * RFN1_main_a 1 ) ) ( * RFN1_main_b 10 ) ) ( * RFN1_main_c 1 ) ) RFN1_CT ) 1 ) ) ) 0 ) ( = ( + ( * 1 lam5n0 ) ( * 1 lam5n2 ) ( * Nl2main_a1 lam5n3 ) ( - ( - RFN1_main_a ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam5n0 ) ( * ( - 1 ) lam5n1 ) ( * Nl2main_b1 lam5n3 ) ( - ( - RFN1_main_b ) ) ) 0 ) ( = ( + ( * 1 lam5n1 ) ( * ( - 1 ) lam5n2 ) ( * Nl2main_c1 lam5n3 ) ( - ( - ( + ( + 0 ( * RFN1_main_a 1 ) ) ( * RFN1_main_c 1 ) ) RFN1_main_c ) ) ) 0 ) ( = ( - ( + ( + 0 ( * RFN1_main_a 1 ) ) ( * RFN1_main_c 1 ) ) ) 0 ) ) ) ) ( and ( >= lam3n0 0 ) ( >= lam3n1 0 ) ( >= lam3n3 0 ) ( > ( + ( * 1 lam3n0 ) ( * 1 lam3n1 ) ( * Nl2CT1 lam3n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam3n0 ) ( * 1 lam3n2 ) ( * Nl2main_a1 lam3n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n0 ) ( * ( - 1 ) lam3n1 ) ( * Nl2main_b1 lam3n3 ) ) 0 ) ( = ( + ( * 1 lam3n1 ) ( * ( - 1 ) lam3n2 ) ( * Nl2main_c1 lam3n3 ) ) 0 ) ) ))
(check-sat)
(exit)
