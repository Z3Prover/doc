(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun P_2 () Bool)
(declare-fun P_3 () Bool)
(declare-fun P_4 () Int)
(declare-fun P_5 () Int)
(declare-fun P_6 () Int)
(declare-fun P_7 () Bool)
(declare-fun P_8 () Bool)
(assert (<= 0 P_4))
(assert (<= P_4 65535))
(assert (<= 0 P_5))
(assert (<= P_5 65535))
(assert (<= 0 P_6))
(assert (<= P_6 65535))
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_0 (* P_6 P_6))) (= (+ (* 65536 dz) rz) (- ?v_0 (ite (not (not (not (= (ite (not (and P_2 (not P_3))) 0 (ite (not (= P_4 3)) (ite (not (= P_4 4)) 0 P_5) 0)) 0)))) (+ P_6 (ite (ite (not P_7) P_8 false) 1 0)) ?v_0)))))
(assert (> rz 0))
(assert (< rz 65536))
(check-sat)
(exit)
