(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun P_2 () Bool)
(declare-fun P_3 () Int)
(declare-fun P_4 () Bool)
(declare-fun P_5 () Int)
(assert (<= 0 P_3))
(assert (<= P_3 127))
(assert (<= 0 P_5))
(assert (<= P_5 127))
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_0 (- P_3 P_5))) (= (+ (* 256 dz) rz) (- ?v_0 (ite (not (and (= (+ (ite P_2 128 0) P_3) 238) (= (+ (ite P_4 128 0) P_5) 17))) ?v_0 (* P_3 P_5))))))
(assert (> rz 0))
(assert (< rz 256))
(check-sat)
(exit)
