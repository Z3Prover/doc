(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun Nl2main_x1 () Int)
(declare-fun Nl2main_x2 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n2 () Int)
(declare-fun lam0n3 () Int)
(declare-fun lam0n4 () Int)
(declare-fun UndefCntr0_CT () Int)
(declare-fun Nl2CT1 () Int)
(declare-fun Nl2CT2 () Int)
(declare-fun UndefCntr0_main_x () Int)
(declare-fun lam0n1 () Int)
(declare-fun UndefCntr0_undef4 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam1n4 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam2n4 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam3n3 () Int)
(declare-fun lam3n4 () Int)
(declare-fun lam3n1 () Int)
(declare-fun UndefCntr1_CT () Int)
(declare-fun UndefCntr1_main_x () Int)
(declare-fun UndefCntr1_undef4 () Int)
(declare-fun lam4n0 () Int)
(declare-fun lam4n2 () Int)
(declare-fun lam4n3 () Int)
(declare-fun lam4n4 () Int)
(declare-fun lam4n1 () Int)
(declare-fun lam5n0 () Int)
(declare-fun lam5n2 () Int)
(declare-fun lam5n3 () Int)
(declare-fun lam5n4 () Int)
(declare-fun lam5n1 () Int)
(declare-fun lam6n0 () Int)
(declare-fun lam7n0 () Int)
(declare-fun main_x () Int)
(declare-fun undef3 () Int)
(declare-fun FV_main_x_2 () Int)
(declare-fun FV_undef4_0 () Int)
(declare-fun FV_main_x_0 () Int)
(declare-fun FV_undef4_1 () Int)
(declare-fun FV_main_x_1 () Int)
(declare-fun lam8n0 () Int)
(declare-fun lam8n1 () Int)
(declare-fun lam8n2 () Int)
(declare-fun FV_main_x_3 () Int)
(declare-fun FV_undef4_3 () Int)
(assert ( and ( <= ( - 3 ) Nl2main_x1 ) ( <= Nl2main_x1 3 ) ( <= ( - 3 ) Nl2main_x2 ) ( <= Nl2main_x2 3 ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( >= lam0n4 0 ) ( > ( + ( * ( - 100 ) lam0n0 ) ( * UndefCntr0_CT lam0n2 ) ( * Nl2CT1 lam0n3 ) ( * Nl2CT2 lam0n4 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * UndefCntr0_main_x lam0n2 ) ( * Nl2main_x1 lam0n3 ) ( * Nl2main_x2 lam0n4 ) ) 0 ) ( = ( + ( * 1 lam0n1 ) ( * UndefCntr0_undef4 lam0n2 ) ) 0 ) ) ( and ( >= lam1n0 0 ) ( >= lam1n2 0 ) ( >= lam1n3 0 ) ( >= lam1n4 0 ) ( > ( + ( * ( - 100 ) lam1n0 ) ( * UndefCntr0_CT lam1n2 ) ( * Nl2CT1 lam1n3 ) ( * Nl2CT2 lam1n4 ) ( - 1 ( + Nl2CT1 ( * Nl2main_x1 ( - 2 ) ) ) ) ) 0 ) ( = ( + ( * 1 lam1n0 ) ( * UndefCntr0_main_x lam1n2 ) ( * Nl2main_x1 lam1n3 ) ( * Nl2main_x2 lam1n4 ) ( - ( + 0 ( * Nl2main_x1 ( - 3 ) ) ) ) ) 0 ) ( = ( + ( * 1 lam1n1 ) ( * UndefCntr0_undef4 lam1n2 ) ) 0 ) ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( >= lam0n4 0 ) ( > ( + ( * ( - 100 ) lam0n0 ) ( * UndefCntr0_CT lam0n2 ) ( * Nl2CT1 lam0n3 ) ( * Nl2CT2 lam0n4 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * UndefCntr0_main_x lam0n2 ) ( * Nl2main_x1 lam0n3 ) ( * Nl2main_x2 lam0n4 ) ) 0 ) ( = ( + ( * 1 lam0n1 ) ( * UndefCntr0_undef4 lam0n2 ) ) 0 ) ) ( and ( >= lam2n0 0 ) ( >= lam2n2 0 ) ( >= lam2n3 0 ) ( >= lam2n4 0 ) ( > ( + ( * ( - 100 ) lam2n0 ) ( * UndefCntr0_CT lam2n2 ) ( * Nl2CT1 lam2n3 ) ( * Nl2CT2 lam2n4 ) ( - 1 ( + Nl2CT2 ( * Nl2main_x2 ( - 2 ) ) ) ) ) 0 ) ( = ( + ( * 1 lam2n0 ) ( * UndefCntr0_main_x lam2n2 ) ( * Nl2main_x1 lam2n3 ) ( * Nl2main_x2 lam2n4 ) ( - ( + 0 ( * Nl2main_x2 ( - 3 ) ) ) ) ) 0 ) ( = ( + ( * 1 lam2n1 ) ( * UndefCntr0_undef4 lam2n2 ) ) 0 ) ) ))
(assert ( or ( and ( >= lam3n0 0 ) ( >= lam3n2 0 ) ( >= lam3n3 0 ) ( >= lam3n4 0 ) ( > ( + ( * ( - 100 ) lam3n0 ) ( * ( - 1 ) lam3n1 ) ( * UndefCntr1_CT lam3n2 ) ( * Nl2CT1 lam3n3 ) ( * Nl2CT2 lam3n4 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam3n0 ) ( * UndefCntr1_main_x lam3n2 ) ( * Nl2main_x1 lam3n3 ) ( * Nl2main_x2 lam3n4 ) ) 0 ) ( = ( + ( * 1 lam3n1 ) ( * UndefCntr1_undef4 lam3n2 ) ) 0 ) ) ( and ( >= lam4n0 0 ) ( >= lam4n2 0 ) ( >= lam4n3 0 ) ( >= lam4n4 0 ) ( > ( + ( * ( - 100 ) lam4n0 ) ( * ( - 1 ) lam4n1 ) ( * UndefCntr1_CT lam4n2 ) ( * Nl2CT1 lam4n3 ) ( * Nl2CT2 lam4n4 ) ( - 1 ( + Nl2CT1 ( * Nl2main_x1 2 ) ) ) ) 0 ) ( = ( + ( * 1 lam4n0 ) ( * UndefCntr1_main_x lam4n2 ) ( * Nl2main_x1 lam4n3 ) ( * Nl2main_x2 lam4n4 ) ( - ( + 0 ( * Nl2main_x1 ( - 2 ) ) ) ) ) 0 ) ( = ( + ( * 1 lam4n1 ) ( * UndefCntr1_undef4 lam4n2 ) ) 0 ) ) ))
(assert ( or ( and ( >= lam3n0 0 ) ( >= lam3n2 0 ) ( >= lam3n3 0 ) ( >= lam3n4 0 ) ( > ( + ( * ( - 100 ) lam3n0 ) ( * ( - 1 ) lam3n1 ) ( * UndefCntr1_CT lam3n2 ) ( * Nl2CT1 lam3n3 ) ( * Nl2CT2 lam3n4 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam3n0 ) ( * UndefCntr1_main_x lam3n2 ) ( * Nl2main_x1 lam3n3 ) ( * Nl2main_x2 lam3n4 ) ) 0 ) ( = ( + ( * 1 lam3n1 ) ( * UndefCntr1_undef4 lam3n2 ) ) 0 ) ) ( and ( >= lam5n0 0 ) ( >= lam5n2 0 ) ( >= lam5n3 0 ) ( >= lam5n4 0 ) ( > ( + ( * ( - 100 ) lam5n0 ) ( * ( - 1 ) lam5n1 ) ( * UndefCntr1_CT lam5n2 ) ( * Nl2CT1 lam5n3 ) ( * Nl2CT2 lam5n4 ) ( - 1 ( + Nl2CT2 ( * Nl2main_x2 2 ) ) ) ) 0 ) ( = ( + ( * 1 lam5n0 ) ( * UndefCntr1_main_x lam5n2 ) ( * Nl2main_x1 lam5n3 ) ( * Nl2main_x2 lam5n4 ) ( - ( + 0 ( * Nl2main_x2 ( - 2 ) ) ) ) ) 0 ) ( = ( + ( * 1 lam5n1 ) ( * UndefCntr1_undef4 lam5n2 ) ) 0 ) ) ))
(assert ( and ( <= ( + Nl2CT1 ( * Nl2main_x1 FV_main_x_2 ) ) 0 ) ( <= ( + Nl2CT2 ( * Nl2main_x2 FV_main_x_2 ) ) 0 ) ))
(assert ( or ( not ( = UndefCntr0_main_x 0 ) ) ( not ( = UndefCntr0_undef4 0 ) ) ( = UndefCntr0_CT 0 ) ))
(assert ( or ( = UndefCntr0_main_x 0 ) ( not ( = UndefCntr0_undef4 0 ) ) ))
(assert ( or ( not ( = UndefCntr1_main_x 0 ) ) ( not ( = UndefCntr1_undef4 0 ) ) ( = UndefCntr1_CT 0 ) ))
(assert ( or ( = UndefCntr1_main_x 0 ) ( not ( = UndefCntr1_undef4 0 ) ) ))
(assert ( or ( = UndefCntr0_undef4 0 ) ( and ( = UndefCntr0_main_x 0 ) ( or ( and ( = FV_undef4_0 0 ) ( <= ( + UndefCntr0_CT ( * UndefCntr0_undef4 FV_undef4_0 ) ( * UndefCntr0_main_x FV_main_x_0 ) ) 0 ) ) ( and ( and ( = UndefCntr0_undef4 UndefCntr1_undef4 ) ( = UndefCntr0_CT UndefCntr1_CT ) ) ( or ( and ( = FV_undef4_0 0 ) ( <= ( + UndefCntr0_CT ( * UndefCntr0_undef4 FV_undef4_0 ) ( * UndefCntr0_main_x FV_main_x_0 ) ) 0 ) ) ( and ( = ( + ( - 1 ) FV_undef4_1 ) 0 ) ( <= ( + UndefCntr1_CT ( * UndefCntr1_undef4 FV_undef4_1 ) ( * UndefCntr1_main_x FV_main_x_1 ) ) 0 ) ) ) ) ) ) ))
(assert ( or ( = UndefCntr1_undef4 0 ) ( and ( = UndefCntr1_main_x 0 ) ( or ( and ( = ( + ( - 1 ) FV_undef4_1 ) 0 ) ( <= ( + UndefCntr1_CT ( * UndefCntr1_undef4 FV_undef4_1 ) ( * UndefCntr1_main_x FV_main_x_1 ) ) 0 ) ) ( and ( and ( = UndefCntr0_undef4 UndefCntr1_undef4 ) ( = UndefCntr0_CT UndefCntr1_CT ) ) ( or ( and ( = FV_undef4_0 0 ) ( <= ( + UndefCntr0_CT ( * UndefCntr0_undef4 FV_undef4_0 ) ( * UndefCntr0_main_x FV_main_x_0 ) ) 0 ) ) ( and ( = ( + ( - 1 ) FV_undef4_1 ) 0 ) ( <= ( + UndefCntr1_CT ( * UndefCntr1_undef4 FV_undef4_1 ) ( * UndefCntr1_main_x FV_main_x_1 ) ) 0 ) ) ) ) ) ) ))
(assert ( and ( >= lam8n0 0 ) ( >= lam8n1 0 ) ( >= lam8n2 0 ) ( > ( + ( * 101 lam8n0 ) ( * Nl2CT1 lam8n1 ) ( * Nl2CT2 lam8n2 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam8n0 ) ( * Nl2main_x1 lam8n1 ) ( * Nl2main_x2 lam8n2 ) ) 0 ) ))
(assert ( and ( and ( <= ( + Nl2CT1 ( * Nl2main_x1 FV_main_x_3 ) ) 0 ) ( <= ( + Nl2CT2 ( * Nl2main_x2 FV_main_x_3 ) ) 0 ) ) ( or ( and ( <= ( + ( - 100 ) FV_main_x_3 ) 0 ) ( = FV_undef4_3 0 ) ) ( and ( <= ( + ( - 100 ) FV_main_x_3 ) 0 ) ( = ( + ( - 1 ) FV_undef4_3 ) 0 ) ) ) ))
(check-sat)
(exit)
