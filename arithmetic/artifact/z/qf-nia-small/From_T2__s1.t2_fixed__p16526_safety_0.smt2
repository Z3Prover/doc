(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun Nl50a!1052^01 () Int)
(declare-fun Nl50a!244^01 () Int)
(declare-fun Nl50head!16^01 () Int)
(declare-fun Nl50sdv_CALLSITE_RETURN_1!14^01 () Int)
(declare-fun Nl50sel_r!543_Flink!24^01 () Int)
(declare-fun Nl50x!15^01 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam0n2 () Int)
(declare-fun lam0n3 () Int)
(declare-fun lam0n4 () Int)
(declare-fun lam0n5 () Int)
(declare-fun lam0n6 () Int)
(declare-fun lam0n7 () Int)
(declare-fun lam0n8 () Int)
(declare-fun lam0n9 () Int)
(declare-fun Nl50CT1 () Int)
(declare-fun lam0n10 () Int)
(declare-fun lam0n11 () Int)
(declare-fun lam0n12 () Int)
(declare-fun lam0n13 () Int)
(declare-fun i!29^0 () Int)
(declare-fun length!28^0 () Int)
(declare-fun a!511^0 () Int)
(declare-fun undef6303 () Int)
(declare-fun undef9245 () Int)
(declare-fun undef9240 () Int)
(declare-fun sdv_CALLSITE_RETURN_1!14^0 () Int)
(declare-fun undef6273 () Int)
(declare-fun a!1052^0 () Int)
(declare-fun head!31^0 () Int)
(declare-fun undef9276 () Int)
(declare-fun sel_r!543_Flink!24^0 () Int)
(declare-fun undef9275 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam1n4 () Int)
(declare-fun lam1n5 () Int)
(declare-fun lam1n6 () Int)
(declare-fun lam1n8 () Int)
(declare-fun lam1n7 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam2n4 () Int)
(declare-fun lam2n5 () Int)
(declare-fun lam2n6 () Int)
(declare-fun lam2n8 () Int)
(declare-fun lam2n7 () Int)
(assert ( and ( <= ( - 1 ) Nl50a!1052^01 ) ( <= Nl50a!1052^01 1 ) ( <= ( - 1 ) Nl50a!244^01 ) ( <= Nl50a!244^01 1 ) ( <= ( - 1 ) Nl50head!16^01 ) ( <= Nl50head!16^01 1 ) ( <= ( - 1 ) Nl50sdv_CALLSITE_RETURN_1!14^01 ) ( <= Nl50sdv_CALLSITE_RETURN_1!14^01 1 ) ( <= ( - 1 ) Nl50sel_r!543_Flink!24^01 ) ( <= Nl50sel_r!543_Flink!24^01 1 ) ( <= ( - 1 ) Nl50x!15^01 ) ( <= Nl50x!15^01 1 ) ))
(assert ( and ( <= ( + ( * ( - 1 ) i!29^0 ) length!28^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) a!511^0 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) undef6303 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) undef6303 ) undef9245 ) 0 ) ( <= ( + 1 ( * ( - 1 ) undef9240 ) ) 0 ) ( <= ( + 2 ( * ( - 1 ) sdv_CALLSITE_RETURN_1!14^0 ) ) 0 ) ( <= ( + 2 ( * ( - 1 ) undef6273 ) ) 0 ) ( <= ( + 2 ( * ( - 1 ) undef9245 ) ) 0 ) ( not ( <= ( + ( - 2 ) a!1052^0 undef9245 ) 0 ) ) ( <= ( + 5 ( * ( - 1 ) a!1052^0 ) ( * ( - 1 ) sdv_CALLSITE_RETURN_1!14^0 ) ( * ( - 1 ) undef9245 ) ) 0 ) ( = ( + head!31^0 ( * ( - 1 ) undef9276 ) ) 0 ) ( = ( + sel_r!543_Flink!24^0 ( * ( - 1 ) undef6303 ) ) 0 ) ( = ( + undef9245 ( * ( - 1 ) undef9275 ) ) 0 ) ( = ( + undef9275 ( * ( - 1 ) undef9276 ) ) 0 ) ( <= ( + ( + ( + ( + Nl50CT1 ( * Nl50a!244^01 0 ) ) ( * Nl50head!16^01 0 ) ) ( * Nl50x!15^01 0 ) ) ( * ( + 0 Nl50a!1052^01 ) a!1052^0 ) ( * ( + 0 Nl50sdv_CALLSITE_RETURN_1!14^01 ) sdv_CALLSITE_RETURN_1!14^0 ) ( * ( + 0 Nl50sel_r!543_Flink!24^01 ) sel_r!543_Flink!24^0 ) ( * ( + 0 ( * Nl50a!244^01 1 ) ) undef6273 ) ( * ( + 0 ( * Nl50x!15^01 1 ) ) undef6303 ) ( * ( + 0 ( * Nl50head!16^01 1 ) ) undef9245 ) ) 0 ) ))
(assert ( or ( or ( and ( >= lam1n0 0 ) ( >= lam1n1 0 ) ( >= lam1n2 0 ) ( >= lam1n3 0 ) ( >= lam1n4 0 ) ( >= lam1n5 0 ) ( >= lam1n6 0 ) ( >= lam1n8 0 ) ( > ( + ( * 1 lam1n0 ) ( * 1 lam1n1 ) ( * 2 lam1n2 ) ( * 2 lam1n3 ) ( * 2 lam1n4 ) ( * 2 lam1n5 ) ( * 5 lam1n6 ) ( * Nl50CT1 lam1n8 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n6 ) ( * Nl50a!1052^01 lam1n8 ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n2 ) ( * Nl50a!244^01 lam1n8 ) ) 0 ) ( = ( + ( * 1 lam1n0 ) ( * ( - 1 ) lam1n3 ) ( * ( - 1 ) lam1n6 ) ( * Nl50head!16^01 lam1n8 ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n4 ) ( * ( - 1 ) lam1n6 ) ( * Nl50sdv_CALLSITE_RETURN_1!14^01 lam1n8 ) ) 0 ) ( = ( + ( * 1 lam1n7 ) ( * Nl50sel_r!543_Flink!24^01 lam1n8 ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n0 ) ( * ( - 1 ) lam1n1 ) ( * ( - 1 ) lam1n7 ) ( * Nl50x!15^01 lam1n8 ) ) 0 ) ( = ( * ( - 1 ) lam1n5 ) 0 ) ) ( and ( >= lam2n0 0 ) ( >= lam2n1 0 ) ( >= lam2n2 0 ) ( >= lam2n3 0 ) ( >= lam2n4 0 ) ( >= lam2n5 0 ) ( >= lam2n6 0 ) ( >= lam2n8 0 ) ( > ( + ( * 1 lam2n0 ) ( * 1 lam2n1 ) ( * 2 lam2n2 ) ( * 2 lam2n3 ) ( * 2 lam2n4 ) ( * 2 lam2n5 ) ( * 5 lam2n6 ) ( * Nl50CT1 lam2n8 ) 3 ) 0 ) ( = ( + ( * ( - 1 ) lam2n6 ) ( * Nl50a!1052^01 lam2n8 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n2 ) ( * Nl50a!244^01 lam2n8 ) ) 0 ) ( = ( + ( * 1 lam2n0 ) ( * ( - 1 ) lam2n3 ) ( * ( - 1 ) lam2n6 ) ( * Nl50head!16^01 lam2n8 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n4 ) ( * ( - 1 ) lam2n6 ) ( * Nl50sdv_CALLSITE_RETURN_1!14^01 lam2n8 ) ) 0 ) ( = ( + ( * 1 lam2n7 ) ( * Nl50sel_r!543_Flink!24^01 lam2n8 ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n0 ) ( * ( - 1 ) lam2n1 ) ( * ( - 1 ) lam2n7 ) ( * Nl50x!15^01 lam2n8 ) ) 0 ) ( = ( * ( - 1 ) lam2n5 ) 0 ) ) ) ( and ( and ( <= ( + ( * ( - 1 ) i!29^0 ) length!28^0 ) 0 ) ( <= ( + 1 ( * ( - 1 ) a!511^0 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) undef6303 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) undef6303 ) undef9245 ) 0 ) ( <= ( + 1 ( * ( - 1 ) undef9240 ) ) 0 ) ( <= ( + 2 ( * ( - 1 ) sdv_CALLSITE_RETURN_1!14^0 ) ) 0 ) ( <= ( + 2 ( * ( - 1 ) undef6273 ) ) 0 ) ( <= ( + 2 ( * ( - 1 ) undef9245 ) ) 0 ) ( not ( <= ( + ( - 2 ) a!1052^0 undef9245 ) 0 ) ) ( <= ( + 5 ( * ( - 1 ) a!1052^0 ) ( * ( - 1 ) sdv_CALLSITE_RETURN_1!14^0 ) ( * ( - 1 ) undef9245 ) ) 0 ) ( = ( + head!31^0 ( * ( - 1 ) undef9276 ) ) 0 ) ( = ( + sel_r!543_Flink!24^0 ( * ( - 1 ) undef6303 ) ) 0 ) ( = ( + undef9245 ( * ( - 1 ) undef9275 ) ) 0 ) ( = ( + undef9275 ( * ( - 1 ) undef9276 ) ) 0 ) ( <= ( + ( + ( + ( + Nl50CT1 ( * Nl50a!244^01 0 ) ) ( * Nl50head!16^01 0 ) ) ( * Nl50x!15^01 0 ) ) ( * ( + 0 Nl50a!1052^01 ) a!1052^0 ) ( * ( + 0 Nl50sdv_CALLSITE_RETURN_1!14^01 ) sdv_CALLSITE_RETURN_1!14^0 ) ( * ( + 0 Nl50sel_r!543_Flink!24^01 ) sel_r!543_Flink!24^0 ) ( * ( + 0 ( * Nl50a!244^01 1 ) ) undef6273 ) ( * ( + 0 ( * Nl50x!15^01 1 ) ) undef6303 ) ( * ( + 0 ( * Nl50head!16^01 1 ) ) undef9245 ) ) 0 ) ) false ) ))
(check-sat)
(exit)
