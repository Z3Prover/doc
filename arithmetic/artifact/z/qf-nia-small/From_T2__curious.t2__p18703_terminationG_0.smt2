(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun Nl1__disjvr_0^01 () Int)
(declare-fun Nl1b^01 () Int)
(declare-fun Nl1__disjvr_0^02 () Int)
(declare-fun Nl1b^02 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n2 () Int)
(declare-fun lam0n3 () Int)
(declare-fun Nl1CT1 () Int)
(declare-fun Nl1CT2 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam4n0 () Int)
(declare-fun b^0 () Int)
(declare-fun __disjvr_0^0 () Int)
(declare-fun lam8n0 () Int)
(declare-fun lam8n2 () Int)
(declare-fun lam8n3 () Int)
(declare-fun RFN1_CT () Int)
(declare-fun RFN1___disjvr_0^0 () Int)
(declare-fun RFN1_b^0 () Int)
(declare-fun lam8n1 () Int)
(declare-fun lam6n0 () Int)
(declare-fun lam6n2 () Int)
(declare-fun lam6n3 () Int)
(declare-fun lam6n1 () Int)
(declare-fun lam7n0 () Int)
(declare-fun lam7n2 () Int)
(declare-fun lam7n3 () Int)
(declare-fun lam7n1 () Int)
(declare-fun lam5n0 () Int)
(declare-fun lam5n2 () Int)
(declare-fun lam5n3 () Int)
(declare-fun lam5n1 () Int)
(assert ( and ( <= ( - 1 ) Nl1__disjvr_0^01 ) ( <= Nl1__disjvr_0^01 1 ) ( <= ( - 1 ) Nl1b^01 ) ( <= Nl1b^01 1 ) ( <= ( - 1 ) Nl1__disjvr_0^02 ) ( <= Nl1__disjvr_0^02 1 ) ( <= ( - 1 ) Nl1b^02 ) ( <= Nl1b^02 1 ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( > ( + ( * Nl1CT1 lam0n2 ) ( * Nl1CT2 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam0n1 ) ( * Nl1__disjvr_0^01 lam0n2 ) ( * Nl1__disjvr_0^02 lam0n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * Nl1b^01 lam0n2 ) ( * Nl1b^02 lam0n3 ) ) 0 ) ( = ( * ( - 1 ) lam0n1 ) 0 ) ) ( and ( >= lam1n0 0 ) ( >= lam1n2 0 ) ( >= lam1n3 0 ) ( > ( + ( * Nl1CT1 lam1n2 ) ( * Nl1CT2 lam1n3 ) ( - 1 ( + ( + Nl1CT1 ( * Nl1__disjvr_0^01 0 ) ) ( * Nl1b^01 0 ) ) ) ) 0 ) ( = ( + ( * 1 lam1n1 ) ( * Nl1__disjvr_0^01 lam1n2 ) ( * Nl1__disjvr_0^02 lam1n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n0 ) ( * Nl1b^01 lam1n2 ) ( * Nl1b^02 lam1n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n1 ) ( - ( + 0 ( * Nl1__disjvr_0^01 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( > ( + ( * Nl1CT1 lam0n2 ) ( * Nl1CT2 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam0n1 ) ( * Nl1__disjvr_0^01 lam0n2 ) ( * Nl1__disjvr_0^02 lam0n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * Nl1b^01 lam0n2 ) ( * Nl1b^02 lam0n3 ) ) 0 ) ( = ( * ( - 1 ) lam0n1 ) 0 ) ) ( and ( >= lam2n0 0 ) ( >= lam2n2 0 ) ( >= lam2n3 0 ) ( > ( + ( * Nl1CT1 lam2n2 ) ( * Nl1CT2 lam2n3 ) ( - 1 ( + ( + Nl1CT2 ( * Nl1__disjvr_0^02 0 ) ) ( * Nl1b^02 0 ) ) ) ) 0 ) ( = ( + ( * 1 lam2n1 ) ( * Nl1__disjvr_0^01 lam2n2 ) ( * Nl1__disjvr_0^02 lam2n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n0 ) ( * Nl1b^01 lam2n2 ) ( * Nl1b^02 lam2n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n1 ) ( - ( + 0 ( * Nl1__disjvr_0^02 1 ) ) ) ) 0 ) ) ))
(assert ( and ( not ( <= ( + 1 b^0 ) 0 ) ) ( <= ( + Nl1CT1 ( * ( + 0 Nl1__disjvr_0^01 ) __disjvr_0^0 ) ( * ( + 0 Nl1b^01 ) b^0 ) ) 0 ) ( <= ( + Nl1CT2 ( * ( + 0 Nl1__disjvr_0^02 ) __disjvr_0^0 ) ( * ( + 0 Nl1b^02 ) b^0 ) ) 0 ) ))
(assert ( or ( and ( and ( >= lam8n0 0 ) ( >= lam8n2 0 ) ( >= lam8n3 0 ) ( > ( + ( * Nl1CT1 lam8n2 ) ( * Nl1CT2 lam8n3 ) ( - 1 ( - ( + ( + RFN1_CT ( * RFN1___disjvr_0^0 0 ) ) ( * RFN1_b^0 0 ) ) RFN1_CT ) ) ) 0 ) ( = ( + ( * 1 lam8n1 ) ( * Nl1__disjvr_0^01 lam8n2 ) ( * Nl1__disjvr_0^02 lam8n3 ) ( - ( - RFN1___disjvr_0^0 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam8n0 ) ( * Nl1b^01 lam8n2 ) ( * Nl1b^02 lam8n3 ) ( - ( - RFN1_b^0 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam8n1 ) ( - ( + 0 ( * RFN1___disjvr_0^0 1 ) ) ) ) 0 ) ) ( and ( and ( >= lam6n0 0 ) ( >= lam6n2 0 ) ( >= lam6n3 0 ) ( > ( + ( * Nl1CT1 lam6n2 ) ( * Nl1CT2 lam6n3 ) ( - 1 ( - RFN1_CT ) ) ) 0 ) ( = ( + ( * 1 lam6n1 ) ( * Nl1__disjvr_0^01 lam6n2 ) ( * Nl1__disjvr_0^02 lam6n3 ) ( - ( - RFN1___disjvr_0^0 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n0 ) ( * Nl1b^01 lam6n2 ) ( * Nl1b^02 lam6n3 ) ( - ( - RFN1_b^0 ) ) ) 0 ) ( = ( * ( - 1 ) lam6n1 ) 0 ) ) ( and ( >= lam7n0 0 ) ( >= lam7n2 0 ) ( >= lam7n3 0 ) ( > ( + ( * Nl1CT1 lam7n2 ) ( * Nl1CT2 lam7n3 ) ( - 1 ( + ( - ( + ( + RFN1_CT ( * RFN1___disjvr_0^0 0 ) ) ( * RFN1_b^0 0 ) ) RFN1_CT ) 1 ) ) ) 0 ) ( = ( + ( * 1 lam7n1 ) ( * Nl1__disjvr_0^01 lam7n2 ) ( * Nl1__disjvr_0^02 lam7n3 ) ( - ( - RFN1___disjvr_0^0 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n0 ) ( * Nl1b^01 lam7n2 ) ( * Nl1b^02 lam7n3 ) ( - ( - RFN1_b^0 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n1 ) ( - ( + 0 ( * RFN1___disjvr_0^0 1 ) ) ) ) 0 ) ) ) ) ( and ( >= lam5n0 0 ) ( >= lam5n2 0 ) ( >= lam5n3 0 ) ( > ( + ( * Nl1CT1 lam5n2 ) ( * Nl1CT2 lam5n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam5n1 ) ( * Nl1__disjvr_0^01 lam5n2 ) ( * Nl1__disjvr_0^02 lam5n3 ) ) 0 ) ( = ( + ( * ( - 1 ) lam5n0 ) ( * Nl1b^01 lam5n2 ) ( * Nl1b^02 lam5n3 ) ) 0 ) ( = ( * ( - 1 ) lam5n1 ) 0 ) ) ))
(check-sat)
(exit)
