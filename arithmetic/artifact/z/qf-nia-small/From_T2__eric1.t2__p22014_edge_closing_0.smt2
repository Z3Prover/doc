(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun Nl3op1^01 () Int)
(declare-fun Nl3op2^01 () Int)
(declare-fun Nl5op1^01 () Int)
(declare-fun Nl5op2^01 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun Nl3CT1 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam3n2 () Int)
(declare-fun Nl5CT1 () Int)
(declare-fun lam4n0 () Int)
(declare-fun lam4n1 () Int)
(declare-fun lam5n0 () Int)
(declare-fun lam5n1 () Int)
(declare-fun lam6n0 () Int)
(declare-fun lam6n1 () Int)
(declare-fun lam6n2 () Int)
(declare-fun lam7n0 () Int)
(declare-fun lam7n1 () Int)
(declare-fun lam7n2 () Int)
(declare-fun lam8n0 () Int)
(declare-fun lam8n1 () Int)
(declare-fun op1^0 () Int)
(declare-fun op2^0 () Int)
(declare-fun FV_op1^0_4 () Int)
(declare-fun FV_op2^0_4 () Int)
(declare-fun lam9n0 () Int)
(declare-fun lam9n2 () Int)
(declare-fun lam9n1 () Int)
(declare-fun FV_op2^0_5 () Int)
(declare-fun FV_op1^0_5 () Int)
(declare-fun FV_op2^0_6 () Int)
(declare-fun FV_op1^0_6 () Int)
(assert ( and ( <= ( - 1 ) Nl3op1^01 ) ( <= Nl3op1^01 1 ) ( <= ( - 1 ) Nl3op2^01 ) ( <= Nl3op2^01 1 ) ( <= ( - 1 ) Nl5op1^01 ) ( <= Nl5op1^01 1 ) ( <= ( - 1 ) Nl5op2^01 ) ( <= Nl5op2^01 1 ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( > ( + ( * 1 lam0n0 ) ( * Nl3CT1 lam0n1 ) ( - 1 ) ) 0 ) ( = ( * Nl3op1^01 lam0n1 ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * Nl3op2^01 lam0n1 ) ) 0 ) ) ( and ( >= lam1n0 0 ) ( >= lam1n1 0 ) ( > ( + ( * 1 lam1n0 ) ( * Nl3CT1 lam1n1 ) ( - 1 ( + ( + Nl3CT1 ( * Nl3op1^01 1 ) ) ( * Nl3op2^01 ( - 1 ) ) ) ) ) 0 ) ( = ( + ( * Nl3op1^01 lam1n1 ) ( - ( + 0 ( * Nl3op1^01 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n0 ) ( * Nl3op2^01 lam1n1 ) ( - ( + 0 ( * Nl3op2^01 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam2n0 0 ) ( >= lam2n1 0 ) ( >= lam2n2 0 ) ( > ( + ( * 1 lam2n1 ) ( * Nl3CT1 lam2n2 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n1 ) ( * Nl3op1^01 lam2n2 ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n0 ) ( * Nl3op2^01 lam2n2 ) ) 0 ) ) ( and ( >= lam3n0 0 ) ( >= lam3n1 0 ) ( >= lam3n2 0 ) ( > ( + ( * 1 lam3n1 ) ( * Nl3CT1 lam3n2 ) ( - 1 ( + ( + Nl5CT1 ( * Nl5op1^01 ( - 1 ) ) ) ( * Nl5op2^01 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n1 ) ( * Nl3op1^01 lam3n2 ) ( - ( + 0 ( * Nl5op1^01 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n0 ) ( * Nl3op2^01 lam3n2 ) ( - ( + 0 ( * Nl5op2^01 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam4n0 0 ) ( >= lam4n1 0 ) ( > ( + ( * 1 lam4n0 ) ( * Nl5CT1 lam4n1 ) ( - 1 ) ) 0 ) ( = ( * Nl5op1^01 lam4n1 ) 0 ) ( = ( + ( * ( - 1 ) lam4n0 ) ( * Nl5op2^01 lam4n1 ) ) 0 ) ) ( and ( >= lam5n0 0 ) ( >= lam5n1 0 ) ( > ( + ( * 1 lam5n0 ) ( * Nl5CT1 lam5n1 ) ( - 1 ( + Nl3CT1 ( * Nl3op2^01 ( - 1 ) ) ) ) ) 0 ) ( = ( + ( * Nl5op1^01 lam5n1 ) ( - ( + 0 Nl3op1^01 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam5n0 ) ( * Nl5op2^01 lam5n1 ) ( - ( + 0 ( * Nl3op2^01 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam6n0 0 ) ( >= lam6n1 0 ) ( >= lam6n2 0 ) ( > ( + ( * 1 lam6n0 ) ( * 1 lam6n1 ) ( * Nl5CT1 lam6n2 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n0 ) ( * Nl5op1^01 lam6n2 ) ) 0 ) ( = ( + ( * ( - 1 ) lam6n1 ) ( * Nl5op2^01 lam6n2 ) ) 0 ) ) ( and ( >= lam7n0 0 ) ( >= lam7n1 0 ) ( >= lam7n2 0 ) ( > ( + ( * 1 lam7n0 ) ( * 1 lam7n1 ) ( * Nl5CT1 lam7n2 ) ( - 1 ( + ( + Nl5CT1 ( * Nl5op1^01 ( - 1 ) ) ) ( * Nl5op2^01 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n0 ) ( * Nl5op1^01 lam7n2 ) ( - ( + 0 ( * Nl5op1^01 1 ) ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam7n1 ) ( * Nl5op2^01 lam7n2 ) ( - ( + 0 ( * Nl5op2^01 1 ) ) ) ) 0 ) ) ))
(assert ( and ( <= ( + Nl5CT1 ( * Nl5op1^01 FV_op1^0_4 ) ( * Nl5op2^01 FV_op2^0_4 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) FV_op2^0_4 ) ) 0 ) ))
(assert ( and ( >= lam9n0 0 ) ( >= lam9n2 0 ) ( > ( + ( * Nl3CT1 lam9n2 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam9n0 ) ( * Nl3op1^01 lam9n2 ) ) 0 ) ( = ( + ( * 1 lam9n1 ) ( * Nl3op2^01 lam9n2 ) ) 0 ) ))
(assert ( and ( <= ( + Nl3CT1 ( * Nl3op2^01 FV_op2^0_5 ) ( * Nl3op1^01 FV_op1^0_5 ) ) 0 ) ( or ( <= ( + 1 ( * ( - 1 ) FV_op2^0_5 ) ) 0 ) ( and ( <= ( * ( - 1 ) FV_op2^0_5 ) 0 ) ( <= ( + 1 ( * ( - 1 ) FV_op1^0_5 ) ) 0 ) ) ) ))
(assert ( and ( <= ( + Nl5CT1 ( * Nl5op2^01 FV_op2^0_6 ) ( * Nl5op1^01 FV_op1^0_6 ) ) 0 ) ( or ( <= ( + 1 ( * ( - 1 ) FV_op2^0_6 ) ) 0 ) ( and ( <= ( + 1 ( * ( - 1 ) FV_op1^0_6 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) FV_op2^0_6 ) ) 0 ) ) ) ))
(check-sat)
(exit)
