(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun Nl4arg11 () Int)
(declare-fun Nl4arg12 () Int)
(declare-fun Nl4arg13 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam0n2 () Int)
(declare-fun lam0n3 () Int)
(declare-fun Nl4CT1 () Int)
(declare-fun Nl4CT2 () Int)
(declare-fun Nl4CT3 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam3n3 () Int)
(declare-fun lam4n0 () Int)
(declare-fun lam4n1 () Int)
(declare-fun lam4n2 () Int)
(declare-fun lam4n3 () Int)
(declare-fun lam4n4 () Int)
(declare-fun lam4n5 () Int)
(declare-fun lam4n6 () Int)
(declare-fun lam4n7 () Int)
(declare-fun lam5n0 () Int)
(declare-fun lam5n1 () Int)
(declare-fun lam5n2 () Int)
(declare-fun lam5n3 () Int)
(declare-fun lam5n4 () Int)
(declare-fun lam5n5 () Int)
(declare-fun lam5n6 () Int)
(declare-fun lam5n7 () Int)
(declare-fun lam6n0 () Int)
(declare-fun lam6n1 () Int)
(declare-fun lam6n2 () Int)
(declare-fun lam6n3 () Int)
(declare-fun lam6n4 () Int)
(declare-fun lam6n5 () Int)
(declare-fun lam6n6 () Int)
(declare-fun lam6n7 () Int)
(declare-fun lam7n0 () Int)
(declare-fun lam7n1 () Int)
(declare-fun lam7n2 () Int)
(declare-fun lam7n3 () Int)
(declare-fun lam7n4 () Int)
(declare-fun lam7n5 () Int)
(declare-fun lam7n6 () Int)
(declare-fun lam7n7 () Int)
(declare-fun lam8n0 () Int)
(declare-fun lam8n1 () Int)
(declare-fun lam8n2 () Int)
(declare-fun lam8n3 () Int)
(declare-fun lam8n4 () Int)
(declare-fun lam8n5 () Int)
(declare-fun lam8n6 () Int)
(declare-fun lam8n7 () Int)
(declare-fun lam9n0 () Int)
(declare-fun lam9n1 () Int)
(declare-fun lam9n2 () Int)
(declare-fun lam9n3 () Int)
(declare-fun lam9n4 () Int)
(declare-fun lam9n5 () Int)
(declare-fun lam9n6 () Int)
(declare-fun lam9n7 () Int)
(declare-fun undef19 () Int)
(declare-fun undef26 () Int)
(declare-fun undef27 () Int)
(declare-fun undef3 () Int)
(declare-fun undef4 () Int)
(declare-fun undef20 () Int)
(declare-fun undef5 () Int)
(declare-fun undef21 () Int)
(declare-fun undef14 () Int)
(declare-fun undef15 () Int)
(declare-fun undef16 () Int)
(declare-fun lam13n0 () Int)
(declare-fun lam13n1 () Int)
(declare-fun lam13n2 () Int)
(declare-fun lam13n3 () Int)
(declare-fun RFN1_CT () Int)
(declare-fun RFN1_arg1 () Int)
(declare-fun lam11n0 () Int)
(declare-fun lam11n1 () Int)
(declare-fun lam11n2 () Int)
(declare-fun lam11n3 () Int)
(declare-fun lam12n0 () Int)
(declare-fun lam12n1 () Int)
(declare-fun lam12n2 () Int)
(declare-fun lam12n3 () Int)
(declare-fun lam10n0 () Int)
(declare-fun lam10n1 () Int)
(declare-fun lam10n2 () Int)
(declare-fun lam10n3 () Int)
(assert ( and ( <= ( - 2 ) Nl4arg11 ) ( <= Nl4arg11 2 ) ( <= ( - 2 ) Nl4arg12 ) ( <= Nl4arg12 2 ) ( <= ( - 2 ) Nl4arg13 ) ( <= Nl4arg13 2 ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( > ( + ( * 1 lam0n0 ) ( * Nl4CT1 lam0n1 ) ( * Nl4CT2 lam0n2 ) ( * Nl4CT3 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * Nl4arg11 lam0n1 ) ( * Nl4arg12 lam0n2 ) ( * Nl4arg13 lam0n3 ) ) 0 ) ) ( and ( >= lam1n0 0 ) ( >= lam1n1 0 ) ( >= lam1n2 0 ) ( >= lam1n3 0 ) ( > ( + ( * 1 lam1n0 ) ( * Nl4CT1 lam1n1 ) ( * Nl4CT2 lam1n2 ) ( * Nl4CT3 lam1n3 ) ( - 1 ( + Nl4CT1 ( * Nl4arg11 ( - 2 ) ) ) ) ) 0 ) ( = ( + ( * 1 lam1n0 ) ( * Nl4arg11 lam1n1 ) ( * Nl4arg12 lam1n2 ) ( * Nl4arg13 lam1n3 ) ( - ( + 0 ( * Nl4arg11 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( > ( + ( * 1 lam0n0 ) ( * Nl4CT1 lam0n1 ) ( * Nl4CT2 lam0n2 ) ( * Nl4CT3 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * Nl4arg11 lam0n1 ) ( * Nl4arg12 lam0n2 ) ( * Nl4arg13 lam0n3 ) ) 0 ) ) ( and ( >= lam2n0 0 ) ( >= lam2n1 0 ) ( >= lam2n2 0 ) ( >= lam2n3 0 ) ( > ( + ( * 1 lam2n0 ) ( * Nl4CT1 lam2n1 ) ( * Nl4CT2 lam2n2 ) ( * Nl4CT3 lam2n3 ) ( - 1 ( + Nl4CT2 ( * Nl4arg12 ( - 2 ) ) ) ) ) 0 ) ( = ( + ( * 1 lam2n0 ) ( * Nl4arg11 lam2n1 ) ( * Nl4arg12 lam2n2 ) ( * Nl4arg13 lam2n3 ) ( - ( + 0 ( * Nl4arg12 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( > ( + ( * 1 lam0n0 ) ( * Nl4CT1 lam0n1 ) ( * Nl4CT2 lam0n2 ) ( * Nl4CT3 lam0n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam0n0 ) ( * Nl4arg11 lam0n1 ) ( * Nl4arg12 lam0n2 ) ( * Nl4arg13 lam0n3 ) ) 0 ) ) ( and ( >= lam3n0 0 ) ( >= lam3n1 0 ) ( >= lam3n2 0 ) ( >= lam3n3 0 ) ( > ( + ( * 1 lam3n0 ) ( * Nl4CT1 lam3n1 ) ( * Nl4CT2 lam3n2 ) ( * Nl4CT3 lam3n3 ) ( - 1 ( + Nl4CT3 ( * Nl4arg13 ( - 2 ) ) ) ) ) 0 ) ( = ( + ( * 1 lam3n0 ) ( * Nl4arg11 lam3n1 ) ( * Nl4arg12 lam3n2 ) ( * Nl4arg13 lam3n3 ) ( - ( + 0 ( * Nl4arg13 1 ) ) ) ) 0 ) ) ))
(assert ( or ( and ( not ( <= undef19 0 ) ) ( <= ( + 1 ( * ( - 1 ) undef26 ) ) 0 ) ( <= ( + 2 ( * ( - 1 ) undef27 ) ) 0 ) ( <= ( * ( - 1 ) undef3 ) 0 ) ( <= ( * ( - 1 ) undef4 ) 0 ) ( <= ( * ( - 1 ) undef20 ) 0 ) ( = ( + ( - 1 ) undef4 ( * ( - 2 ) undef5 ) ) 0 ) ( = ( + undef20 ( * ( - 2 ) undef21 ) ) 0 ) ( <= ( + ( + Nl4CT1 ( * Nl4arg11 0 ) ) ( * ( + 0 ( * Nl4arg11 ( - 1 ) ) ) undef19 ) ) 0 ) ( <= ( + ( + Nl4CT2 ( * Nl4arg12 0 ) ) ( * ( + 0 ( * Nl4arg12 ( - 1 ) ) ) undef19 ) ) 0 ) ( <= ( + ( + Nl4CT3 ( * Nl4arg13 0 ) ) ( * ( + 0 ( * Nl4arg13 ( - 1 ) ) ) undef19 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) undef19 ) ) 0 ) ) ( and ( not ( <= undef19 0 ) ) ( <= ( + 1 ( * ( - 1 ) undef26 ) ) 0 ) ( <= ( + 2 ( * ( - 1 ) undef27 ) ) 0 ) ( <= ( * ( - 1 ) undef14 ) 0 ) ( <= ( * ( - 1 ) undef15 ) 0 ) ( <= ( * ( - 1 ) undef20 ) 0 ) ( = ( + undef15 ( * ( - 2 ) undef16 ) ) 0 ) ( = ( + undef20 ( * ( - 2 ) undef21 ) ) 0 ) ( <= ( + ( + Nl4CT1 ( * Nl4arg11 0 ) ) ( * ( + 0 ( * Nl4arg11 ( - 1 ) ) ) undef19 ) ) 0 ) ( <= ( + ( + Nl4CT2 ( * Nl4arg12 0 ) ) ( * ( + 0 ( * Nl4arg12 ( - 1 ) ) ) undef19 ) ) 0 ) ( <= ( + ( + Nl4CT3 ( * Nl4arg13 0 ) ) ( * ( + 0 ( * Nl4arg13 ( - 1 ) ) ) undef19 ) ) 0 ) ( <= ( + 1 ( * ( - 1 ) undef19 ) ) 0 ) ) ))
(assert ( or ( and ( and ( >= lam13n0 0 ) ( >= lam13n1 0 ) ( >= lam13n2 0 ) ( >= lam13n3 0 ) ( > ( + ( * 50001 lam13n0 ) ( * Nl4CT1 lam13n1 ) ( * Nl4CT2 lam13n2 ) ( * Nl4CT3 lam13n3 ) ( - 1 ( - ( + RFN1_CT ( * RFN1_arg1 ( - 2 ) ) ) RFN1_CT ) ) ) 0 ) ( = ( + ( * 1 lam13n0 ) ( * Nl4arg11 lam13n1 ) ( * Nl4arg12 lam13n2 ) ( * Nl4arg13 lam13n3 ) ( - ( - ( + 0 ( * RFN1_arg1 1 ) ) RFN1_arg1 ) ) ) 0 ) ) ( and ( and ( >= lam11n0 0 ) ( >= lam11n1 0 ) ( >= lam11n2 0 ) ( >= lam11n3 0 ) ( > ( + ( * 50001 lam11n0 ) ( * Nl4CT1 lam11n1 ) ( * Nl4CT2 lam11n2 ) ( * Nl4CT3 lam11n3 ) ( - 1 ( - RFN1_CT ) ) ) 0 ) ( = ( + ( * 1 lam11n0 ) ( * Nl4arg11 lam11n1 ) ( * Nl4arg12 lam11n2 ) ( * Nl4arg13 lam11n3 ) ( - ( - RFN1_arg1 ) ) ) 0 ) ) ( and ( >= lam12n0 0 ) ( >= lam12n1 0 ) ( >= lam12n2 0 ) ( >= lam12n3 0 ) ( > ( + ( * 50001 lam12n0 ) ( * Nl4CT1 lam12n1 ) ( * Nl4CT2 lam12n2 ) ( * Nl4CT3 lam12n3 ) ( - 1 ( + ( - ( + RFN1_CT ( * RFN1_arg1 ( - 2 ) ) ) RFN1_CT ) 1 ) ) ) 0 ) ( = ( + ( * 1 lam12n0 ) ( * Nl4arg11 lam12n1 ) ( * Nl4arg12 lam12n2 ) ( * Nl4arg13 lam12n3 ) ( - ( - ( + 0 ( * RFN1_arg1 1 ) ) RFN1_arg1 ) ) ) 0 ) ) ) ) ( and ( >= lam10n0 0 ) ( >= lam10n1 0 ) ( >= lam10n2 0 ) ( >= lam10n3 0 ) ( > ( + ( * 50001 lam10n0 ) ( * Nl4CT1 lam10n1 ) ( * Nl4CT2 lam10n2 ) ( * Nl4CT3 lam10n3 ) ( - 1 ) ) 0 ) ( = ( + ( * 1 lam10n0 ) ( * Nl4arg11 lam10n1 ) ( * Nl4arg12 lam10n2 ) ( * Nl4arg13 lam10n3 ) ) 0 ) ) ))
(check-sat)
(exit)
