(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
Generated by: Cristina Borralleras, Daniel Larraz, Albert Oliveras, Enric Rodriguez-Carbonell, Albert Rubio
Generated on: 2017-04-27
Generator: VeryMax
Application: Termination proving
Target solver: barcelogic
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun Nl40a!1052^01 () Int)
(declare-fun Nl40head!16^01 () Int)
(declare-fun Nl40sdv_CALLSITE_RETURN_1!14^01 () Int)
(declare-fun Nl40x!15^01 () Int)
(declare-fun Nl40a!1052^02 () Int)
(declare-fun Nl40head!16^02 () Int)
(declare-fun Nl40sdv_CALLSITE_RETURN_1!14^02 () Int)
(declare-fun Nl40x!15^02 () Int)
(declare-fun lam0n0 () Int)
(declare-fun lam0n1 () Int)
(declare-fun lam0n2 () Int)
(declare-fun lam0n3 () Int)
(declare-fun lam0n4 () Int)
(declare-fun lam0n5 () Int)
(declare-fun lam0n6 () Int)
(declare-fun lam0n9 () Int)
(declare-fun Nl40CT1 () Int)
(declare-fun lam0n7 () Int)
(declare-fun lam0n8 () Int)
(declare-fun lam1n0 () Int)
(declare-fun lam1n1 () Int)
(declare-fun lam1n2 () Int)
(declare-fun lam1n3 () Int)
(declare-fun lam1n4 () Int)
(declare-fun lam1n5 () Int)
(declare-fun lam1n6 () Int)
(declare-fun lam1n9 () Int)
(declare-fun Nl40CT2 () Int)
(declare-fun lam1n7 () Int)
(declare-fun lam1n8 () Int)
(declare-fun a!1052^0 () Int)
(declare-fun head!16^0 () Int)
(declare-fun x!15^0 () Int)
(declare-fun a!244^0 () Int)
(declare-fun sdv_CALLSITE_RETURN_1!14^0 () Int)
(declare-fun sel_r!543_Flink!24^0 () Int)
(declare-fun undef4401 () Int)
(declare-fun undef4374 () Int)
(declare-fun lam2n0 () Int)
(declare-fun lam2n1 () Int)
(declare-fun lam2n2 () Int)
(declare-fun lam2n3 () Int)
(declare-fun lam2n6 () Int)
(declare-fun lam2n7 () Int)
(declare-fun lam2n5 () Int)
(declare-fun lam2n4 () Int)
(declare-fun lam3n0 () Int)
(declare-fun lam3n1 () Int)
(declare-fun lam3n2 () Int)
(declare-fun lam3n3 () Int)
(declare-fun lam3n6 () Int)
(declare-fun lam3n7 () Int)
(declare-fun lam3n5 () Int)
(declare-fun lam3n4 () Int)
(assert ( and ( <= ( - 1 ) Nl40a!1052^01 ) ( <= Nl40a!1052^01 1 ) ( <= ( - 1 ) Nl40head!16^01 ) ( <= Nl40head!16^01 1 ) ( <= ( - 1 ) Nl40sdv_CALLSITE_RETURN_1!14^01 ) ( <= Nl40sdv_CALLSITE_RETURN_1!14^01 1 ) ( <= ( - 1 ) Nl40x!15^01 ) ( <= Nl40x!15^01 1 ) ( <= ( - 1 ) Nl40a!1052^02 ) ( <= Nl40a!1052^02 1 ) ( <= ( - 1 ) Nl40head!16^02 ) ( <= Nl40head!16^02 1 ) ( <= ( - 1 ) Nl40sdv_CALLSITE_RETURN_1!14^02 ) ( <= Nl40sdv_CALLSITE_RETURN_1!14^02 1 ) ( <= ( - 1 ) Nl40x!15^02 ) ( <= Nl40x!15^02 1 ) ))
(assert ( and ( not ( <= a!1052^0 0 ) ) ( <= ( + 1 ( * ( - 1 ) head!16^0 ) x!15^0 ) 0 ) ( <= ( + 1 x!15^0 ) 0 ) ( <= ( + 2 ( * ( - 1 ) a!244^0 ) ) 0 ) ( not ( <= ( + ( - 1 ) head!16^0 ) 0 ) ) ( <= ( + 2 ( * ( - 1 ) sdv_CALLSITE_RETURN_1!14^0 ) ) 0 ) ( not ( <= ( + ( - 3 ) a!1052^0 head!16^0 ( * ( - 1 ) x!15^0 ) ) 0 ) ) ( = ( + ( * ( - 1 ) sel_r!543_Flink!24^0 ) x!15^0 ) 0 ) ( = undef4401 0 ) ( = ( + ( - 1 ) undef4374 ) 0 ) ( <= ( + Nl40CT1 ( * ( + 0 Nl40a!1052^01 ) a!1052^0 ) ( * ( + 0 Nl40head!16^01 ) head!16^0 ) ( * ( + 0 Nl40sdv_CALLSITE_RETURN_1!14^01 ) sdv_CALLSITE_RETURN_1!14^0 ) ( * ( + 0 Nl40x!15^01 ) x!15^0 ) ) 0 ) ( <= ( + Nl40CT2 ( * ( + 0 Nl40a!1052^02 ) a!1052^0 ) ( * ( + 0 Nl40head!16^02 ) head!16^0 ) ( * ( + 0 Nl40sdv_CALLSITE_RETURN_1!14^02 ) sdv_CALLSITE_RETURN_1!14^0 ) ( * ( + 0 Nl40x!15^02 ) x!15^0 ) ) 0 ) ))
(assert ( or ( or ( and ( >= lam2n0 0 ) ( >= lam2n1 0 ) ( >= lam2n2 0 ) ( >= lam2n3 0 ) ( >= lam2n6 0 ) ( >= lam2n7 0 ) ( > ( + ( * 1 lam2n0 ) ( * 1 lam2n1 ) ( * 1 lam2n2 ) ( * 2 lam2n3 ) ( * ( - 1 ) lam2n5 ) ( * Nl40CT1 lam2n6 ) ( * Nl40CT2 lam2n7 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n0 ) ( * Nl40a!1052^01 lam2n6 ) ( * Nl40a!1052^02 lam2n7 ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n1 ) ( * Nl40head!16^01 lam2n6 ) ( * Nl40head!16^02 lam2n7 ) ) 0 ) ( = ( + ( * ( - 1 ) lam2n3 ) ( * Nl40sdv_CALLSITE_RETURN_1!14^01 lam2n6 ) ( * Nl40sdv_CALLSITE_RETURN_1!14^02 lam2n7 ) ) 0 ) ( = ( + ( * 1 lam2n2 ) ( * Nl40x!15^01 lam2n6 ) ( * Nl40x!15^02 lam2n7 ) ) 0 ) ( = ( * 1 lam2n5 ) 0 ) ( = ( * 1 lam2n4 ) 0 ) ) ( and ( >= lam3n0 0 ) ( >= lam3n1 0 ) ( >= lam3n2 0 ) ( >= lam3n3 0 ) ( >= lam3n6 0 ) ( >= lam3n7 0 ) ( > ( + ( * 1 lam3n0 ) ( * 1 lam3n1 ) ( * 1 lam3n2 ) ( * 2 lam3n3 ) ( * ( - 1 ) lam3n5 ) ( * Nl40CT1 lam3n6 ) ( * Nl40CT2 lam3n7 ) 2 ) 0 ) ( = ( + ( * ( - 1 ) lam3n0 ) ( * Nl40a!1052^01 lam3n6 ) ( * Nl40a!1052^02 lam3n7 ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n1 ) ( * Nl40head!16^01 lam3n6 ) ( * Nl40head!16^02 lam3n7 ) ( - 1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam3n3 ) ( * Nl40sdv_CALLSITE_RETURN_1!14^01 lam3n6 ) ( * Nl40sdv_CALLSITE_RETURN_1!14^02 lam3n7 ) ) 0 ) ( = ( + ( * 1 lam3n2 ) ( * Nl40x!15^01 lam3n6 ) ( * Nl40x!15^02 lam3n7 ) ) 0 ) ( = ( * 1 lam3n5 ) 0 ) ( = ( * 1 lam3n4 ) 0 ) ) ) ( and ( and ( and ( >= lam0n0 0 ) ( >= lam0n1 0 ) ( >= lam0n2 0 ) ( >= lam0n3 0 ) ( >= lam0n4 0 ) ( >= lam0n5 0 ) ( >= lam0n6 0 ) ( > ( + ( * 1 lam0n0 ) ( * 1 lam0n1 ) ( * 1 lam0n2 ) ( * 2 lam0n3 ) ( * 2 lam0n4 ) ( * 2 lam0n5 ) ( * 4 lam0n6 ) ( * ( - 1 ) lam0n9 ) ( - 1 Nl40CT1 ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n0 ) ( * ( - 1 ) lam0n6 ) ( - ( + 0 Nl40a!1052^01 ) ) ) 0 ) ( = ( * ( - 1 ) lam0n3 ) 0 ) ( = ( + ( * ( - 1 ) lam0n1 ) ( * ( - 1 ) lam0n4 ) ( * ( - 1 ) lam0n6 ) ( - ( + 0 Nl40head!16^01 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam0n5 ) ( - ( + 0 Nl40sdv_CALLSITE_RETURN_1!14^01 ) ) ) 0 ) ( = ( * 1 lam0n7 ) 0 ) ( = ( + ( * 1 lam0n1 ) ( * 1 lam0n2 ) ( * 1 lam0n6 ) ( * ( - 1 ) lam0n7 ) ( - ( + 0 Nl40x!15^01 ) ) ) 0 ) ( = ( * 1 lam0n9 ) 0 ) ( = ( * 1 lam0n8 ) 0 ) ) ( and ( >= lam1n0 0 ) ( >= lam1n1 0 ) ( >= lam1n2 0 ) ( >= lam1n3 0 ) ( >= lam1n4 0 ) ( >= lam1n5 0 ) ( >= lam1n6 0 ) ( > ( + ( * 1 lam1n0 ) ( * 1 lam1n1 ) ( * 1 lam1n2 ) ( * 2 lam1n3 ) ( * 2 lam1n4 ) ( * 2 lam1n5 ) ( * 4 lam1n6 ) ( * ( - 1 ) lam1n9 ) ( - 1 Nl40CT2 ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n0 ) ( * ( - 1 ) lam1n6 ) ( - ( + 0 Nl40a!1052^02 ) ) ) 0 ) ( = ( * ( - 1 ) lam1n3 ) 0 ) ( = ( + ( * ( - 1 ) lam1n1 ) ( * ( - 1 ) lam1n4 ) ( * ( - 1 ) lam1n6 ) ( - ( + 0 Nl40head!16^02 ) ) ) 0 ) ( = ( + ( * ( - 1 ) lam1n5 ) ( - ( + 0 Nl40sdv_CALLSITE_RETURN_1!14^02 ) ) ) 0 ) ( = ( * 1 lam1n7 ) 0 ) ( = ( + ( * 1 lam1n1 ) ( * 1 lam1n2 ) ( * 1 lam1n6 ) ( * ( - 1 ) lam1n7 ) ( - ( + 0 Nl40x!15^02 ) ) ) 0 ) ( = ( * 1 lam1n9 ) 0 ) ( = ( * 1 lam1n8 ) 0 ) ) ) false ) ))
(check-sat)
(exit)
