(set-info :smt-lib-version 2.6)
(set-logic QF_NIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun P_2 () Int)
(declare-fun P_3 () Int)
(declare-fun P_4 () Int)
(declare-fun P_5 () Int)
(declare-fun P_6 () Int)
(declare-fun P_7 () Int)
(declare-fun P_8 () Int)
(declare-fun P_9 () Int)
(declare-fun P_10 () Int)
(declare-fun P_11 () Int)
(declare-fun P_12 () Int)
(declare-fun P_13 () Int)
(declare-fun P_14 () Int)
(declare-fun P_15 () Int)
(assert (<= 0 P_2))
(assert (<= P_2 3))
(assert (<= 0 P_3))
(assert (<= P_3 255))
(assert (<= 0 P_4))
(assert (<= P_4 255))
(assert (<= 0 P_5))
(assert (<= P_5 255))
(assert (<= 0 P_6))
(assert (<= P_6 255))
(assert (<= 0 P_7))
(assert (<= P_7 255))
(assert (<= 0 P_8))
(assert (<= P_8 3))
(assert (<= 0 P_9))
(assert (<= P_9 255))
(assert (<= 0 P_10))
(assert (<= P_10 255))
(assert (<= 0 P_11))
(assert (<= P_11 255))
(assert (<= 0 P_12))
(assert (<= P_12 255))
(assert (<= 0 P_13))
(assert (<= P_13 255))
(assert (<= 0 P_14))
(assert (<= P_14 3))
(assert (<= 0 P_15))
(assert (<= P_15 255))
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_1 (+ P_3 P_4)) (?v_3 (= P_2 2)) (?v_2 (= P_2 1)) (?v_0 (= P_2 0))) (let ((?v_4 (+ (ite ?v_0 ?v_1 (ite ?v_2 ?v_1 (ite ?v_3 ?v_1 P_5))) (ite ?v_0 P_6 (ite ?v_2 P_6 (ite ?v_3 P_6 P_7))))) (?v_5 (+ P_5 P_7)) (?v_10 (= P_8 2)) (?v_9 (= P_8 1)) (?v_8 (= P_8 0))) (let ((?v_12 (ite ?v_8 ?v_5 (ite ?v_9 ?v_5 (ite ?v_10 ?v_5 P_9)))) (?v_6 (- P_10 P_11))) (let ((?v_7 (ite ?v_0 ?v_6 (ite ?v_2 ?v_6 (ite ?v_3 ?v_6 P_12)))) (?v_13 (ite ?v_8 P_12 (ite ?v_9 P_12 (ite ?v_10 P_12 P_13))))) (let ((?v_11 (* (ite ?v_0 ?v_4 (ite ?v_2 ?v_4 (ite ?v_3 ?v_4 ?v_12))) (ite ?v_0 ?v_7 (ite ?v_2 ?v_7 (ite ?v_3 ?v_7 ?v_13))))) (?v_14 (* ?v_12 ?v_13)) (?v_15 (* P_9 P_13))) (= (+ (* 256 dz) rz) (- (ite ?v_0 ?v_11 (ite ?v_2 ?v_11 (ite ?v_3 ?v_11 (ite ?v_8 ?v_14 (ite ?v_9 ?v_14 (ite ?v_10 ?v_14 (ite (= P_14 0) ?v_15 (ite (= P_14 1) ?v_15 (ite (= P_14 2) ?v_15 P_15))))))))) ?v_11))))))))
(assert (> rz 0))
(assert (< rz 256))
(check-sat)
(exit)
