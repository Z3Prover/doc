(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Alberto Griggio

|)
(set-info :category "random")
(set-info :status sat)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(assert (let ((?v_2 (* 45 x7)) (?v_3 (* 76 x9)) (?v_6 (* 60 x5)) (?v_7 (* 76 x5)) (?v_0 (* (- 38) x8)) (?v_1 (* (- 10) x6)) (?v_5 (* (- 56) x0)) (?v_8 (* (- 24) x1)) (?v_4 (* (- 4) x1))) (and (<= (+ (* 6 x8) (* 45 x5) (* 23 x0) (* 64 x7) (* (- 57) x7) (* (- 32) x4) (* (- 24) x9) (* 17 x1) (* 50 x1) (* (- 52) x8)) (- 79)) (<= (+ (* 57 x0) (* 54 x2) (* (- 56) x6) (* (- 74) x9) (* (- 51) x5) ?v_0 (* (- 49) x1) ?v_1 (* (- 41) x5) (* (- 51) x9)) 34) (<= (+ (* 77 x3) (* (- 29) x2) (* (- 75) x0) (* (- 26) x0) (* (- 73) x5) (* (- 22) x1) ?v_2 (* 53 x4) (* 69 x4) (* (- 50) x9)) (- 11)) (<= (+ (* 55 x4) (* 69 x8) (* (- 79) x8) (* 21 x4) (* (- 48) x3) (* (- 49) x3) (* (- 27) x6) (* 33 x0) (* (- 67) x1) (* 58 x7)) 62) (<= (+ (* 38 x9) (* (- 28) x0) (* 37 x4) (* 53 x5) (* 47 x9) (* 60 x0) (* (- 6) x9) (* 16 x0) (* (- 30) x2) (* (- 27) x2)) (- 54)) (<= (+ (* 25 x0) (* 15 x1) (* (- 1) x0) (* 6 x9) (* (- 27) x7) ?v_0 (* (- 59) x6) (* 61 x5) (* 55 x5) (* (- 17) x6)) 0) (<= (+ (* 50 x3) (* (- 13) x4) (* (- 33) x3) (* (- 65) x3) (* (- 22) x0) (* (- 3) x5) (* 9 x0) (* (- 36) x4) (* 2 x3) (* 40 x8)) 67) (<= (+ (* 72 x3) (* (- 76) x5) (* 31 x5) (* (- 45) x5) (* 75 x4) ?v_1 (* 72 x4) (* (- 16) x9) (* (- 41) x6) (* (- 12) x3)) 23) (<= (+ (* 28 x0) (* 33 x1) (* 51 x6) (* (- 6) x4) (* 23 x1) (* 1 x7) ?v_2 ?v_3 (* 62 x8) (* 37 x9)) (- 14)) (<= (+ (* 75 x2) (* 76 x0) (* (- 72) x5) (* 66 x0) (* (- 19) x9) (* 49 x4) (* 28 x3) (* 78 x4) ?v_5 (* 68 x2)) 29) (<= (+ (* 3 x2) (* 35 x9) (* 40 x1) ?v_6 (* (- 39) x6) (* 25 x3) (* (- 29) x5) (* (- 45) x7) (* (- 66) x3) (* (- 70) x4)) (- 12)) (<= (+ (* 55 x6) ?v_7 (* 20 x5) (* 15 x7) (* (- 43) x7) (* (- 36) x7) (* 74 x5) (* (- 1) x4) ?v_8 (* 10 x4)) (- 3)) (<= (+ (* 59 x7) (* 36 x6) (* 33 x5) (* (- 20) x7) (* 9 x2) (* 78 x2) ?v_3 (* (- 70) x0) (* (- 41) x3) (* (- 25) x4)) (- 57)) (<= (+ (* 16 x8) (* (- 42) x4) (* (- 47) x3) (* (- 56) x8) (* (- 18) x0) (* (- 43) x4) ?v_4 ?v_4 (* (- 7) x3) (* 21 x7)) (- 42)) (<= (+ (* 42 x2) (* 36 x8) (* (- 51) x6) (* 12 x3) (* 72 x5) ?v_5 (* (- 69) x6) (* (- 41) x9) (* (- 6) x2) (* 55 x0)) (- 33)) (<= (+ (* 37 x0) (* 8 x7) (* (- 34) x2) (* (- 67) x3) (* (- 55) x7) (* 67 x4) (* (- 33) x0) (* 74 x7) (* 8 x9) (* 59 x4)) (- 12)) (<= (+ (* 44 x1) (* (- 51) x8) (* (- 36) x8) (* (- 41) x7) (* 38 x8) (* (- 64) x9) (* 14 x1) (* 54 x6) (* (- 65) x8) (* 59 x8)) (- 8)) (<= (+ (* 12 x1) (* 2 x5) (* 2 x6) (* (- 22) x2) (* 50 x5) (* 31 x2) (* (- 52) x0) (* (- 40) x7) (* 29 x9) (* 7 x3)) 16) (<= (+ (* 57 x8) (* 54 x4) (* (- 30) x1) ?v_4 (* (- 9) x7) (* 23 x9) (* (- 24) x6) (* (- 21) x5) ?v_6 (* 25 x4)) (- 48)) (<= (+ (* 68 x6) (* (- 62) x6) (* (- 54) x6) (* (- 27) x9) ?v_7 (* (- 15) x2) (* (- 53) x7) (* (- 59) x0) ?v_8 (* (- 40) x9)) (- 30)))))
(check-sat)
(exit)
