(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Alberto Griggio

|)
(set-info :category "random")
(set-info :status unsat)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(assert (let ((?v_3 (* 7 x9)) (?v_0 (* 0 x5)) (?v_2 (* 55 x6)) (?v_1 (* 40 x7)) (?v_6 (* 55 x7)) (?v_7 (* 76 x1)) (?v_8 (* 44 x6)) (?v_5 (* (- 73) x6)) (?v_4 (* (- 77) x7))) (and (<= (+ (* 8 x0) (* 54 x0) ?v_3 (* 55 x2) (* 51 x0) (* 9 x1) (* 2 x8) (* 94 x5) ?v_0 (* 23 x3)) 60) (<= (+ (* 72 x0) (* 14 x9) (* (- 13) x1) (* 18 x8) (* (- 78) x7) (* 31 x6) (* 32 x1) (* 77 x4) (* (- 4) x9) (* 38 x4)) (- 96)) (<= (+ (* 66 x3) (* (- 58) x1) (* (- 9) x7) (* (- 49) x5) (* (- 96) x4) (* 52 x0) ?v_2 (* (- 81) x5) (* 43 x4) (* 47 x8)) (- 53)) (<= (+ (* 18 x1) (* (- 99) x3) (* 99 x7) (* (- 26) x2) (* (- 82) x0) (* (- 62) x4) (* 18 x5) ?v_5 (* 40 x4) (* 38 x0)) (- 87)) (<= (+ (* 48 x9) (* (- 43) x1) (* 50 x3) (* 53 x7) (* 83 x8) (* (- 69) x2) (* (- 17) x8) (* (- 15) x3) (* (- 9) x3) (* (- 69) x1)) (- 5)) (<= (+ (* 74 x0) ?v_4 (* (- 10) x7) (* 29 x9) (* (- 89) x1) (* (- 72) x9) (* 20 x5) (* (- 85) x4) (* (- 68) x0) (* 39 x4)) 3) (<= (+ (* 5 x9) (* 73 x4) ?v_1 (* 21 x1) (* (- 82) x4) (* (- 2) x0) (* (- 19) x0) (* 25 x0) ?v_6 (* 62 x8)) 88) (<= (+ (* 37 x7) (* (- 14) x8) (* (- 53) x8) ?v_7 ?v_0 (* (- 92) x5) (* 63 x2) (* 85 x3) (* (- 12) x7) (* (- 70) x7)) (- 38)) (<= (+ (* 77 x6) (* (- 65) x3) (* 43 x3) (* 84 x5) (* 12 x1) (* (- 7) x0) (* 41 x6) (* (- 55) x5) (* (- 54) x4) (* (- 41) x0)) 93) (<= (+ (* 1 x0) (* (- 34) x4) (* (- 28) x7) (* (- 35) x3) (* (- 76) x2) (* 76 x8) (* 95 x6) (* (- 90) x7) (* (- 6) x7) (* (- 28) x5)) (- 23)) (<= (+ (* 96 x3) (* (- 70) x8) (* (- 97) x2) (* (- 71) x4) (* (- 53) x9) (* 34 x1) (* (- 20) x7) (* (- 39) x7) (* (- 29) x8) (* (- 14) x2)) (- 63)) (<= (+ (* 69 x9) (* (- 67) x3) (* 69 x6) (* (- 35) x5) (* (- 54) x1) (* (- 37) x9) (* (- 87) x3) (* (- 44) x5) (* 55 x1) (* 19 x5)) 72) (<= (+ (* 42 x1) (* (- 67) x5) (* (- 73) x3) ?v_1 (* (- 63) x4) (* 32 x0) (* (- 5) x7) (* 63 x6) (* (- 76) x0) (* 42 x6)) (- 33)) (<= (+ ?v_8 (* 50 x4) ?v_2 (* 95 x9) (* 89 x0) (* 81 x5) (* 48 x7) (* (- 4) x0) (* (- 16) x4) (* (- 54) x2)) (- 81)) (<= (+ (* 69 x1) (* (- 3) x4) (* (- 41) x3) (* 21 x5) (* (- 33) x4) (* 18 x6) (* 87 x6) ?v_3 (* 4 x5) (* (- 18) x7)) (- 18)) (<= (+ (* 29 x0) (* (- 96) x5) (* 29 x1) (* (- 66) x6) (* 60 x1) (* 78 x2) (* (- 45) x9) (* (- 54) x3) (* (- 91) x8) (* (- 48) x3)) (- 80)) (<= (+ (* 90 x2) ?v_4 (* (- 30) x2) (* (- 78) x0) (* 69 x4) (* 11 x8) ?v_5 (* (- 56) x5) (* 95 x2) (* (- 58) x0)) 1) (<= (+ (* 13 x3) (* (- 20) x5) (* 55 x0) (* 35 x4) (* 99 x4) (* (- 8) x9) (* 16 x4) (* (- 43) x0) ?v_6 (* 86 x4)) 83) (<= (+ ?v_7 (* (- 83) x9) (* 66 x6) (* (- 2) x6) (* 36 x2) (* 27 x2) (* (- 14) x1) ?v_8 (* 51 x4) (* 77 x7)) (- 52)) (<= (+ (* 53 x8) (* 12 x2) (* 50 x6) (* 27 x1) (* (- 71) x3) (* 35 x9) (* 66 x0) (* (- 74) x1) (* 8 x5) (* 85 x7)) (- 27)))))
(check-sat)
(exit)
