(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Alberto Griggio

|)
(set-info :category "random")
(set-info :status unsat)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(assert (let ((?v_2 (* 6 x8)) (?v_6 (* 0 x6)) (?v_0 (* 53 x3)) (?v_8 (* 29 x9)) (?v_5 (* 51 x6)) (?v_4 (* 7 x8)) (?v_11 (* 14 x9)) (?v_7 (* (- 15) x5)) (?v_1 (* (- 7) x4)) (?v_9 (* (- 18) x7)) (?v_3 (* (- 55) x5)) (?v_10 (* (- 59) x2))) (and (<= (+ (* 13 x6) (* (- 25) x4) (* (- 57) x5) (* 39 x9) (* 58 x3) (* (- 47) x4) (* 50 x7) (* 59 x4) (* 43 x0) (* 35 x1)) (- 47)) (<= (+ (* 16 x4) (* 40 x9) (* (- 55) x0) (* (- 26) x6) (* (- 52) x5) (* 6 x9) (* 55 x2) (* (- 21) x5) (* 52 x8) (* (- 55) x4)) (- 9)) (<= (+ (* 13 x9) (* (- 22) x1) (* (- 3) x3) (* (- 39) x0) (* (- 27) x1) (* (- 16) x0) (* (- 28) x5) (* 44 x4) (* 34 x2) (* 28 x8)) 27) (<= (+ (* 36 x6) (* 20 x7) (* (- 43) x9) (* (- 26) x8) (* 17 x4) (* 17 x3) (* 45 x5) (* 39 x2) (* 23 x8) (* 21 x9)) 5) (<= (+ (* 32 x3) (* 51 x5) (* (- 10) x4) (* (- 20) x9) (* (- 16) x6) (* 20 x8) ?v_7 (* 49 x1) (* (- 27) x7) ?v_2) 0) (<= (+ (* 5 x0) (* 0 x2) (* (- 4) x4) (* 33 x4) (* 32 x0) ?v_6 ?v_1 (* 30 x4) (* (- 28) x9) (* (- 28) x0)) (- 52)) (<= (+ (* 22 x2) (* 16 x7) (* 1 x1) (* 37 x4) (* 57 x7) (* 33 x6) (* (- 48) x5) (* 2 x1) (* 13 x0) ?v_0) 45) (<= (+ (* 59 x7) (* (- 57) x2) (* 30 x7) (* (- 6) x6) ?v_0 (* 32 x2) ?v_8 (* 50 x4) (* (- 13) x4) (* 58 x5)) 6) (<= (+ (* 25 x6) (* (- 38) x6) ?v_1 (* 54 x3) (* (- 49) x4) (* (- 31) x7) (* 12 x5) (* (- 36) x6) (* 20 x4) (* 38 x9)) (- 53)) (<= (+ (* 52 x2) ?v_9 (* (- 2) x6) (* (- 37) x6) ?v_5 (* (- 30) x8) ?v_3 (* (- 51) x8) (* 55 x9) (* 7 x5)) (- 15)) (<= (+ (* 49 x4) (* 57 x4) (* 23 x3) (* 31 x5) (* (- 59) x1) (* 37 x3) (* (- 14) x6) (* (- 12) x7) (* 13 x4) ?v_10) 51) (<= (+ (* 57 x3) (* (- 11) x4) ?v_2 (* (- 13) x3) (* (- 44) x4) ?v_4 (* (- 36) x7) (* (- 3) x6) (* (- 59) x9) (* 24 x4)) 35) (<= (+ (* 20 x3) (* (- 16) x4) (* (- 7) x2) (* 30 x9) (* 14 x3) (* (- 54) x0) (* (- 42) x2) (* (- 20) x5) (* 11 x9) (* 6 x2)) 44) (<= (+ (* 30 x8) (* (- 54) x3) (* 48 x2) (* 57 x0) (* (- 13) x5) ?v_3 (* (- 17) x4) (* (- 2) x0) (* (- 53) x3) (* (- 55) x8)) (- 3)) (<= (+ (* 31 x1) (* (- 16) x3) (* (- 10) x1) (* (- 20) x3) ?v_4 (* (- 42) x4) (* 49 x2) ?v_5 (* (- 16) x7) (* 24 x7)) 17) (<= (+ ?v_6 (* 13 x8) (* 54 x5) (* 58 x7) (* 58 x0) (* 22 x5) ?v_7 (* 33 x0) (* 10 x8) (* (- 28) x1)) 12) (<= (+ (* 18 x7) ?v_8 (* 4 x8) (* 44 x3) (* 44 x8) (* (- 52) x3) (* 7 x7) ?v_9 (* 18 x6) (* 40 x5)) 38) (<= (+ (* 8 x0) (* (- 29) x7) (* 49 x5) (* 42 x5) (* 50 x2) (* 56 x2) (* 15 x3) (* 4 x6) (* 32 x1) (* 47 x5)) (- 40)) (<= (+ (* 20 x0) (* 37 x5) (* (- 14) x7) (* (- 49) x0) (* 21 x1) (* 24 x2) ?v_10 (* (- 36) x9) (* (- 9) x9) ?v_11) 56) (<= (+ (* 26 x6) ?v_11 (* 11 x4) (* 1 x7) (* (- 45) x3) (* (- 47) x7) (* (- 19) x1) (* (- 1) x4) (* 22 x0) (* (- 32) x5)) (- 50)))))
(check-sat)
(exit)
