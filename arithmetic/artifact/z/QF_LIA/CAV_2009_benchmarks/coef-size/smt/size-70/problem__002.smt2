(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Alberto Griggio

|)
(set-info :category "random")
(set-info :status sat)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(assert (let ((?v_9 (* 4 x1)) (?v_0 (* 11 x4)) (?v_1 (* 26 x3)) (?v_10 (* 51 x0)) (?v_2 (* 36 x6)) (?v_6 (* 20 x7)) (?v_8 (* 22 x4)) (?v_12 (* 11 x2)) (?v_3 (* (- 22) x8)) (?v_7 (* (- 15) x8)) (?v_5 (* (- 16) x8)) (?v_4 (* (- 45) x4)) (?v_11 (* (- 27) x4))) (and (<= (+ (* 11 x1) (* 26 x8) (* 52 x6) ?v_9 (* 19 x9) (* 32 x1) (* (- 62) x6) (* (- 55) x7) (* 15 x9) (* (- 29) x7)) 39) (<= (+ (* 62 x2) (* 43 x5) (* (- 19) x6) (* (- 32) x4) ?v_0 (* 14 x4) (* 30 x1) (* (- 7) x7) (* 18 x5) (* 5 x6)) 8) (<= (+ (* 52 x5) (* (- 57) x3) (* 36 x0) (* (- 30) x1) (* 46 x4) (* (- 32) x5) (* (- 35) x0) (* (- 53) x7) (* (- 60) x6) (* (- 56) x7)) (- 9)) (<= (+ (* 67 x0) (* 10 x2) ?v_0 (* 54 x2) (* 39 x0) (* 44 x6) ?v_1 (* (- 4) x7) (* (- 40) x9) (* (- 69) x3)) (- 64)) (<= (+ (* 56 x6) (* 9 x7) (* (- 15) x5) (* (- 7) x6) (* 27 x3) ?v_1 (* (- 21) x5) (* (- 18) x3) (* (- 37) x3) (* 2 x9)) 28) (<= (+ (* 36 x8) (* (- 44) x5) ?v_10 (* (- 7) x2) (* (- 43) x2) (* (- 46) x6) (* 44 x2) (* 67 x7) ?v_3 (* (- 34) x7)) 42) (<= (+ (* 13 x3) (* 58 x8) (* (- 18) x2) (* 32 x0) (* (- 44) x3) (* 0 x2) (* 22 x2) (* (- 51) x2) ?v_0 (* 29 x1)) (- 9)) (<= (+ (* 24 x8) (* (- 24) x2) ?v_2 (* 28 x1) (* (- 21) x0) (* (- 33) x7) (* 67 x8) (* (- 31) x5) (* (- 36) x4) (* 59 x7)) (- 64)) (<= (+ (* 54 x8) (* 26 x2) (* 23 x2) (* (- 56) x4) (* 7 x9) ?v_2 (* (- 26) x6) (* (- 11) x7) (* (- 57) x5) (* 14 x9)) (- 34)) (<= (+ (* 64 x6) (* (- 68) x0) ?v_6 ?v_7 (* 16 x9) (* 64 x1) (* 30 x9) (* (- 37) x6) (* 24 x0) ?v_5) (- 36)) (<= (+ (* 64 x2) (* 46 x0) (* 4 x5) (* (- 64) x6) (* 15 x5) (* 16 x5) ?v_4 (* 22 x8) ?v_3 (* (- 42) x3)) 14) (<= (+ (* 68 x5) (* 38 x8) (* 25 x9) (* (- 41) x4) (* 8 x2) (* (- 65) x0) (* 60 x4) (* 30 x4) (* 69 x2) (* 54 x7)) (- 54)) (<= (+ (* 19 x2) (* 59 x4) (* (- 38) x0) ?v_4 (* (- 39) x3) (* (- 59) x7) (* (- 13) x4) (* (- 69) x4) (* 42 x0) (* 31 x4)) 48) (<= (+ (* 63 x0) (* (- 57) x4) (* 59 x6) (* (- 15) x6) (* 41 x6) (* 30 x7) (* (- 4) x8) (* (- 30) x6) (* (- 52) x5) (* 57 x6)) 48) (<= (+ (* 40 x0) ?v_5 (* (- 43) x5) ?v_0 (* (- 28) x9) (* (- 7) x3) (* 5 x3) (* 31 x2) (* (- 69) x2) (* 67 x5)) (- 16)) (<= (+ (* 48 x2) (* (- 56) x1) ?v_8 (* 28 x4) (* 7 x3) (* (- 52) x1) (* 65 x3) (* 20 x4) (* (- 22) x5) ?v_6) (- 58)) (<= (+ (* 22 x1) (* 55 x8) (* 59 x3) (* 64 x5) (* 39 x5) (* 50 x8) (* 45 x2) (* 11 x3) (* 9 x3) (* 66 x2)) 14) (<= (+ (* 48 x6) (* 26 x5) (* (- 60) x2) ?v_11 (* (- 62) x3) (* (- 22) x2) (* (- 46) x5) (* 62 x7) ?v_7 (* 49 x4)) 68) (<= (+ (* 36 x5) (* (- 52) x2) (* (- 6) x8) ?v_8 (* (- 37) x0) (* (- 59) x0) (* 65 x6) ?v_9 (* (- 4) x5) (* (- 18) x4)) 43) (<= (+ ?v_12 (* 43 x8) ?v_10 ?v_11 (* 18 x7) (* 58 x2) (* (- 16) x3) (* (- 30) x5) (* (- 55) x5) ?v_12) 66))))
(check-sat)
(exit)
