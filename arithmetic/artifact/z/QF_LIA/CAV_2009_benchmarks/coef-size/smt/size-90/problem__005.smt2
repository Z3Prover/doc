(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Alberto Griggio

|)
(set-info :category "random")
(set-info :status unsat)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(assert (let ((?v_5 (* 36 x2)) (?v_4 (* 21 x8)) (?v_1 (* 68 x1)) (?v_3 (* 65 x2)) (?v_0 (* 28 x1)) (?v_7 (* 43 x1)) (?v_2 (* (- 88) x1)) (?v_6 (* (- 44) x9))) (and (<= (+ (* 22 x5) (* 43 x7) ?v_2 ?v_5 (* (- 12) x1) (* (- 56) x1) ?v_4 (* (- 62) x3) (* 18 x9) (* 30 x2)) (- 41)) (<= (+ (* 56 x8) (* 45 x1) (* 66 x4) (* 61 x0) (* 52 x8) (* 76 x6) (* 46 x1) (* 69 x7) (* 11 x9) (* (- 53) x3)) (- 37)) (<= (+ (* 25 x4) (* 39 x1) (* (- 75) x1) (* 27 x6) (* 55 x3) (* 12 x7) (* (- 35) x8) (* 22 x0) (* (- 83) x6) (* (- 8) x8)) 73) (<= (+ (* 57 x5) (* (- 10) x2) (* 21 x4) (* (- 18) x3) (* (- 73) x9) (* (- 32) x7) (* 41 x5) (* (- 53) x9) (* 59 x3) (* (- 39) x2)) (- 77)) (<= (+ (* 72 x9) (* (- 87) x1) (* (- 83) x1) (* (- 46) x5) (* 38 x7) (* (- 37) x1) (* 54 x8) (* (- 16) x6) (* (- 49) x7) (* 51 x5)) 75) (<= (+ (* 54 x0) (* (- 67) x2) (* 81 x9) ?v_1 ?v_3 (* (- 18) x9) (* 87 x5) (* 75 x2) (* (- 43) x7) (* 60 x6)) (- 86)) (<= (+ ?v_0 (* 70 x0) (* (- 82) x8) (* 43 x2) (* (- 48) x3) (* 59 x0) (* (- 84) x8) (* 48 x7) (* (- 15) x3) (* 71 x5)) (- 33)) (<= (+ (* 36 x9) (* (- 37) x0) (* (- 35) x9) (* (- 29) x6) (* (- 23) x4) (* 45 x5) (* 4 x0) (* 53 x7) (* 89 x0) (* (- 74) x4)) (- 1)) (<= (+ (* 41 x9) (* 43 x3) (* (- 74) x5) (* (- 62) x6) (* 56 x5) (* (- 42) x1) (* (- 24) x4) (* (- 11) x8) (* 13 x6) (* 60 x3)) (- 41)) (<= (+ (* 0 x5) (* 34 x3) (* (- 61) x6) (* (- 38) x6) (* 75 x1) ?v_0 (* 2 x0) (* (- 31) x5) (* 19 x2) (* 42 x2)) 9) (<= (+ (* 44 x8) (* 87 x0) (* (- 85) x9) (* (- 31) x2) (* (- 72) x9) (* (- 43) x9) (* 85 x3) (* (- 41) x8) (* 53 x5) (* (- 88) x2)) 8) (<= (+ ?v_1 (* (- 8) x6) (* 80 x8) (* (- 54) x8) (* 84 x1) (* (- 65) x5) ?v_2 (* 47 x9) (* (- 72) x6) (* (- 36) x9)) (- 63)) (<= (+ (* 86 x6) (* 2 x4) (* 42 x5) (* 41 x4) (* 52 x6) (* 70 x3) (* 61 x3) (* (- 82) x4) (* (- 38) x2) (* (- 39) x1)) (- 30)) (<= (+ (* 6 x7) (* (- 12) x0) (* 18 x0) (* (- 42) x3) (* (- 80) x8) (* (- 45) x1) (* 28 x7) (* 4 x2) (* 57 x9) (* (- 50) x3)) (- 68)) (<= (+ (* 77 x5) (* 27 x9) (* 17 x7) (* 22 x6) (* 3 x5) ?v_6 (* (- 13) x2) (* 75 x5) (* (- 37) x7) (* (- 22) x8)) 86) (<= (+ (* 53 x2) (* (- 2) x9) (* (- 52) x6) (* (- 40) x0) ?v_3 (* 6 x1) (* 29 x7) (* (- 44) x5) ?v_7 (* (- 71) x6)) (- 12)) (<= (+ (* 64 x3) (* (- 13) x7) (* (- 81) x9) (* (- 81) x2) (* (- 56) x3) (* (- 47) x0) (* 37 x3) (* 22 x9) (* 34 x4) (* (- 20) x0)) 61) (<= (+ (* 84 x7) (* 74 x1) (* (- 33) x3) (* (- 57) x4) (* (- 71) x3) (* 21 x1) (* (- 86) x0) (* 6 x2) (* 60 x5) (* 32 x7)) 14) (<= (+ ?v_4 (* 3 x8) (* (- 38) x4) (* (- 82) x0) ?v_5 (* (- 47) x7) (* (- 69) x8) (* (- 31) x0) (* (- 89) x7) (* (- 36) x8)) (- 28)) (<= (+ (* 18 x8) (* 37 x8) (* (- 11) x1) (* (- 3) x7) (* (- 36) x0) (* 55 x8) ?v_6 (* (- 36) x3) (* 3 x0) ?v_7) 89))))
(check-sat)
(exit)
