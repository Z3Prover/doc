(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Alberto Griggio

|)
(set-info :category "random")
(set-info :status sat)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(assert (let ((?v_3 (* 25 x1)) (?v_9 (* 39 x9)) (?v_2 (* 61 x3)) (?v_5 (* 88 x5)) (?v_6 (* 2 x7)) (?v_7 (* 2 x6)) (?v_10 (* 73 x0)) (?v_11 (* 77 x3)) (?v_4 (* (- 77) x9)) (?v_8 (* (- 66) x8)) (?v_0 (* (- 31) x8)) (?v_1 (* (- 9) x9))) (and (<= (+ (* 16 x6) (* (- 24) x7) (* (- 8) x4) (* 63 x3) (* (- 9) x5) ?v_4 (* (- 29) x8) ?v_3 (* (- 17) x5) (* (- 31) x4)) 69) (<= (+ (* 5 x6) (* 64 x0) (* 39 x6) (* (- 24) x6) (* (- 31) x6) (* 83 x1) (* 71 x0) (* (- 74) x4) (* 42 x3) ?v_8) (- 22)) (<= (+ (* 88 x7) (* 70 x9) (* (- 66) x1) (* (- 42) x3) (* 80 x6) (* (- 62) x6) (* (- 44) x4) (* (- 20) x4) (* (- 53) x4) ?v_0) 68) (<= (+ (* 45 x3) (* 25 x9) (* (- 16) x1) (* (- 21) x3) (* 17 x9) (* 44 x2) (* 28 x6) (* 52 x7) (* (- 6) x1) (* 37 x4)) 28) (<= (+ (* 72 x0) (* (- 63) x4) (* (- 34) x3) (* (- 68) x4) (* 69 x1) (* 61 x8) (* 10 x8) (* (- 57) x9) (* (- 58) x1) (* 65 x8)) (- 43)) (<= (+ (* 73 x4) (* 69 x8) (* (- 23) x2) ?v_1 (* 21 x7) ?v_9 (* 28 x7) (* (- 69) x5) (* 0 x1) (* 60 x9)) 42) (<= (+ (* 29 x0) (* 79 x8) ?v_0 (* 71 x9) (* (- 60) x2) (* (- 89) x4) (* (- 36) x4) (* 81 x0) (* (- 72) x0) (* (- 43) x6)) (- 6)) (<= (+ (* 8 x9) (* 67 x6) (* 85 x7) (* (- 86) x7) (* (- 28) x7) (* 72 x8) (* 58 x2) (* 0 x5) (* 83 x4) (* 19 x2)) 20) (<= (+ (* 19 x8) (* (- 77) x0) (* 74 x4) (* 63 x7) (* 72 x9) (* 81 x2) (* (- 13) x9) (* (- 20) x2) (* 16 x1) (* (- 68) x9)) 38) (<= (+ (* 8 x7) (* 51 x6) (* 7 x6) (* 5 x7) (* 56 x9) (* (- 10) x2) (* (- 81) x7) (* (- 44) x2) (* 45 x6) (* 56 x4)) (- 54)) (<= (+ (* 71 x6) (* 79 x9) (* (- 55) x5) (* 33 x3) (* 32 x5) (* 16 x2) (* 54 x5) (* 36 x6) (* (- 34) x8) (* 68 x8)) (- 87)) (<= (+ (* 24 x1) (* 83 x7) (* 68 x0) (* (- 22) x4) ?v_1 (* 13 x0) (* 88 x6) (* 85 x1) (* 3 x0) (* (- 83) x4)) 54) (<= (+ (* 65 x5) (* 84 x9) (* 77 x7) (* 53 x2) (* 42 x1) (* (- 12) x8) (* 60 x2) (* (- 12) x4) (* 24 x3) (* (- 79) x9)) 37) (<= (+ (* 44 x7) (* (- 5) x1) (* 42 x4) (* (- 7) x2) (* (- 80) x1) (* (- 81) x5) (* (- 43) x4) (* (- 87) x6) (* 82 x4) (* (- 53) x0)) 31) (<= (+ ?v_2 (* (- 22) x5) (* (- 28) x3) (* 40 x3) (* (- 72) x5) (* 79 x2) (* (- 14) x5) (* 62 x7) (* 9 x8) ?v_2) 85) (<= (+ (* 68 x7) ?v_3 ?v_5 (* (- 13) x0) (* (- 40) x0) ?v_6 (* 27 x0) (* (- 66) x5) (* 14 x6) (* (- 19) x5)) 72) (<= (+ (* 12 x0) (* (- 25) x2) (* (- 50) x0) ?v_7 (* 14 x9) (* (- 83) x5) ?v_10 (* (- 1) x6) ?v_4 (* (- 2) x2)) (- 83)) (<= (+ (* 64 x6) ?v_5 (* 49 x7) ?v_11 (* 6 x8) (* (- 42) x0) (* (- 12) x7) (* 31 x5) (* (- 2) x7) (* (- 85) x2)) (- 85)) (<= (+ ?v_6 (* (- 27) x4) (* 36 x4) ?v_0 ?v_7 (* 52 x5) (* 31 x3) (* (- 86) x4) (* 34 x8) ?v_8) 41) (<= (+ (* 48 x4) (* 13 x8) ?v_9 (* 29 x4) (* 6 x2) ?v_10 ?v_11 (* 71 x1) (* 11 x5) (* 89 x0)) 47))))
(check-sat)
(exit)
