(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Alberto Griggio

|)
(set-info :category "random")
(set-info :status sat)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(assert (let ((?v_3 (* 32 x4)) (?v_2 (* 68 x6)) (?v_4 (* 51 x9)) (?v_1 (* 19 x0)) (?v_5 (* (- 10) x0)) (?v_0 (* (- 3) x2))) (and (<= (+ (* 85 x7) (* (- 39) x7) (* (- 81) x1) (* 75 x1) (* (- 37) x6) (* 49 x2) (* (- 8) x3) (* 7 x2) (* 65 x5) (* (- 9) x9)) 5) (<= (+ (* 34 x3) (* (- 23) x2) (* 14 x7) (* (- 35) x4) (* 64 x3) (* (- 48) x0) (* 82 x9) (* (- 26) x7) (* 33 x7) ?v_3) (- 43)) (<= (+ (* 29 x0) (* 11 x5) (* 8 x8) (* 75 x3) ?v_2 (* 60 x8) (* 50 x5) (* 19 x4) (* (- 29) x8) (* (- 73) x8)) 26) (<= (+ (* 7 x1) (* (- 52) x8) (* 32 x1) (* (- 87) x2) (* (- 45) x8) (* (- 3) x9) (* (- 41) x4) (* (- 25) x2) (* 14 x6) (* (- 54) x9)) (- 66)) (<= (+ (* 39 x1) (* (- 9) x1) (* (- 2) x1) (* (- 14) x1) (* 14 x4) (* 14 x8) (* (- 60) x1) (* 42 x9) (* 71 x6) (* (- 32) x8)) 66) (<= (+ (* 29 x7) (* (- 20) x5) (* (- 83) x0) (* (- 47) x9) ?v_4 (* 39 x7) (* 2 x8) (* 51 x6) ?v_5 (* 88 x7)) 45) (<= (+ (* 54 x1) (* 9 x8) (* 59 x7) (* (- 29) x2) (* 10 x7) (* (- 67) x6) (* (- 48) x9) (* 44 x2) (* 47 x3) (* (- 4) x6)) 30) (<= (+ (* 73 x9) (* (- 21) x5) (* 30 x4) (* (- 24) x2) (* 63 x2) (* (- 10) x5) (* (- 1) x9) (* 3 x1) (* (- 58) x2) (* (- 17) x7)) (- 79)) (<= (+ (* 58 x6) (* 15 x3) (* (- 39) x0) (* (- 41) x6) (* (- 75) x3) (* (- 50) x4) (* 29 x4) (* (- 62) x2) (* (- 66) x9) (* 43 x1)) (- 54)) (<= (+ (* 83 x2) (* 16 x3) (* (- 6) x9) (* 44 x5) (* (- 37) x2) (* 43 x6) (* (- 19) x6) (* 22 x6) (* 43 x4) (* 14 x3)) (- 22)) (<= (+ (* 85 x1) (* (- 8) x0) (* (- 49) x3) (* 24 x8) (* (- 38) x4) (* (- 4) x3) (* 32 x9) (* 50 x8) (* (- 85) x3) (* (- 28) x2)) (- 36)) (<= (+ (* 59 x1) (* (- 10) x8) (* 15 x4) (* 73 x4) (* 47 x6) (* 1 x9) (* 52 x8) (* (- 12) x0) (* 25 x7) (* 9 x9)) 18) (<= (+ ?v_1 (* 19 x7) ?v_0 (* 30 x1) (* (- 28) x5) (* 57 x9) (* 47 x8) (* 88 x9) (* 87 x4) (* (- 27) x1)) 18) (<= (+ (* 21 x0) (* (- 58) x7) ?v_0 (* (- 24) x1) (* (- 41) x1) (* 0 x4) (* 0 x5) (* 69 x8) (* (- 26) x8) ?v_1) 8) (<= (+ (* 20 x0) (* 40 x8) (* (- 24) x4) (* 25 x8) (* (- 58) x3) (* 83 x4) (* 10 x6) ?v_2 (* 57 x4) (* (- 9) x7)) 33) (<= (+ (* 44 x3) ?v_3 (* 27 x6) (* (- 47) x1) (* 50 x7) (* (- 86) x4) (* (- 62) x9) (* 20 x3) (* (- 54) x6) (* 71 x3)) (- 2)) (<= (+ (* 67 x9) (* 21 x5) (* (- 9) x0) (* 33 x0) (* 2 x9) (* 38 x8) (* 77 x6) (* (- 10) x3) (* (- 78) x3) (* (- 31) x0)) 51) (<= (+ (* 20 x7) (* (- 16) x2) (* 58 x7) (* (- 89) x0) (* (- 80) x7) (* (- 48) x5) (* 26 x8) (* (- 9) x6) (* (- 44) x6) (* (- 86) x3)) (- 77)) (<= (+ (* 44 x4) (* (- 86) x9) (* (- 73) x5) (* 15 x0) (* 13 x3) (* 48 x9) (* 48 x4) (* (- 46) x2) (* 82 x1) (* 57 x3)) 30) (<= (+ (* 77 x2) (* (- 36) x1) ?v_4 (* 33 x8) (* (- 59) x4) ?v_5 (* 4 x3) (* 48 x3) (* 0 x2) (* 35 x3)) 29))))
(check-sat)
(exit)
