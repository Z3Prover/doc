(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Generated by: Martin Bromberger
Generated on: 2018-01-06
Generator: https://www.mpi-inf.mpg.de/fileadmin/inf/rg1/Documents/RandomUnboundedSageScript.tar.gz
Application: This is a satisfiable problem with bounded and unbounded directions and, therefore, a good test for the termination/completeness of branch-and-bound solvers.
Publications: M. Bromberger. A Reduction from Unbounded Linear Mixed Arithmetic Problems into Bounded Problems. (Work in progress.)

The benchmarks in this class were randomly generated by a sagemath script and by way of construction they are all satisfiable.
Target solver: CVC4 Mathsat SPASS-IQ YICES Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status sat)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(declare-fun x10 () Int)
(declare-fun x11 () Int)
(declare-fun x12 () Int)
(declare-fun x13 () Int)
(declare-fun x14 () Int)
(declare-fun x15 () Int)
(declare-fun x16 () Int)
(declare-fun x17 () Int)
(declare-fun x18 () Int)
(declare-fun x19 () Int)
(declare-fun x20 () Int)
(declare-fun x21 () Int)
(declare-fun x22 () Int)
(declare-fun x23 () Int)
(declare-fun x24 () Int)

(assert (and 
(<= 1 (+ (* (- 1) x1) (+ (* 1 x6) (+ (* 2 x7) (+ (* (- 2) x8) (+ (* (- 2) x9) (+ (* (- 2) x11) (+ (* 1 x12) (+ (* (- 1) x16) (+ (* 1 x17) (+ (* 2 x19) (+ (* (- 1) x20) (+ (* (- 1) x22) (+ (* (- 2) x23) (* 1 x24) )))))))))))))) 
(<= 2 (+ (* (- 1) x0) (+ (* 1 x1) (+ (* (- 1) x3) (+ (* 1 x4) (+ (* 1 x6) (+ (* (- 1) x7) (+ (* 1 x8) (+ (* 1 x12) (+ (* 2 x14) (+ (* 1 x15) (+ (* 2 x16) (+ (* (- 1) x17) (+ (* 2 x19) (+ (* (- 2) x20) (+ (* (- 2) x21) (* 2 x23) )))))))))))))))) 
(<= 5 (+ (* (- 1) x2) (+ (* 2 x3) (+ (* 1 x7) (+ (* 1 x8) (+ (* 2 x10) (+ (* (- 2) x11) (+ (* 1 x12) (+ (* (- 1) x14) (+ (* (- 2) x15) (+ (* 1 x17) (+ (* (- 2) x18) (+ (* (- 2) x20) (+ (* (- 1) x21) (+ (* (- 1) x22) (+ (* 1 x23) (* 1 x24) )))))))))))))))) 
(<= 3 (+ (* (- 1) x0) (+ (* (- 1) x1) (+ (* 1 x2) (+ (* (- 1) x3) (+ (* 1 x4) (+ (* 1 x5) (+ (* 1 x6) (+ (* 1 x8) (+ (* 2 x9) (+ (* 2 x10) (+ (* 1 x13) (+ (* (- 1) x14) (+ (* 1 x16) (+ (* 1 x21) (+ (* 1 x23) (* 2 x24) )))))))))))))))) 
(<= 16 (+ (* (- 1) x1) (+ (* (- 2) x2) (+ (* (- 1) x3) (+ (* (- 2) x4) (+ (* 2 x5) (+ (* (- 1) x6) (+ (* 2 x7) (+ (* (- 2) x8) (+ (* 1 x9) (+ (* (- 2) x10) (+ (* 1 x11) (+ (* (- 2) x13) (+ (* 2 x14) (+ (* (- 1) x17) (+ (* (- 1) x20) (+ (* (- 1) x21) (+ (* (- 1) x22) (+ (* 2 x23) (* (- 1) x24) ))))))))))))))))))) 
(<= 27 (+ (* (- 1) x0) (+ (* (- 2) x3) (+ (* 2 x5) (+ (* (- 1) x7) (+ (* (- 2) x8) (+ (* 2 x10) (+ (* 1 x12) (+ (* 2 x13) (+ (* 2 x14) (+ (* 2 x15) (+ (* 2 x16) (+ (* (- 2) x17) (+ (* (- 1) x18) (+ (* 2 x20) (+ (* (- 1) x21) (+ (* (- 1) x22) (* 1 x24) ))))))))))))))))) 
(<= (- 30) (+ (* 2 x0) (+ (* (- 1) x2) (+ (* (- 1) x5) (+ (* (- 1) x7) (+ (* 1 x8) (+ (* 2 x9) (+ (* (- 2) x10) (+ (* 2 x12) (+ (* 1 x13) (+ (* 1 x14) (+ (* (- 2) x15) (+ (* (- 2) x16) (+ (* 2 x17) (+ (* 2 x18) (+ (* 1 x19) (+ (* (- 1) x21) (+ (* (- 2) x22) (+ (* 1 x23) (* 1 x24) ))))))))))))))))))) 
(<= 10 (+ (* (- 1) x3) (+ (* (- 2) x4) (+ (* 1 x5) (+ (* (- 2) x7) (+ (* (- 1) x9) (+ (* 2 x10) (+ (* (- 2) x13) (+ (* (- 1) x14) (+ (* 2 x16) (+ (* 2 x17) (+ (* (- 2) x18) (+ (* (- 1) x20) (+ (* (- 1) x21) (* (- 2) x22) )))))))))))))) 
(<= (- 2) (+ (* 1 x0) (+ (* (- 2) x2) (+ (* 1 x3) (+ (* 1 x5) (+ (* (- 2) x7) (+ (* 2 x10) (+ (* 2 x11) (+ (* 1 x16) (+ (* 2 x17) (+ (* 1 x18) (+ (* 1 x19) (+ (* (- 1) x20) (+ (* (- 2) x22) (* (- 2) x24) )))))))))))))) 
(<= (- 1) (+ (* 2 x0) (+ (* 2 x2) (+ (* (- 2) x3) (+ (* (- 1) x4) (+ (* 2 x7) (+ (* 2 x8) (+ (* (- 2) x9) (+ (* 1 x13) (+ (* 1 x15) (+ (* 1 x16) (+ (* (- 1) x18) (+ (* 1 x19) (+ (* 2 x21) (+ (* (- 1) x23) (* (- 1) x24) ))))))))))))))) 
(<= (- 8) (+ (* (- 1) x0) (+ (* (- 2) x2) (+ (* 1 x3) (+ (* 1 x6) (+ (* 2 x8) (+ (* (- 2) x9) (+ (* (- 1) x10) (+ (* (- 1) x11) (+ (* 2 x14) (+ (* (- 1) x16) (+ (* 1 x18) (+ (* 1 x22) (* 2 x24) ))))))))))))) 
(<= 5 (+ (* 2 x2) (+ (* (- 2) x4) (+ (* 2 x5) (+ (* (- 2) x6) (+ (* (- 1) x8) (+ (* (- 2) x9) (+ (* (- 2) x11) (+ (* (- 1) x13) (+ (* (- 2) x15) (+ (* 1 x16) (+ (* 2 x17) (+ (* (- 2) x18) (+ (* 1 x20) (+ (* (- 1) x21) (* 2 x22) ))))))))))))))) 
(<= (- 1) (+ (* (- 1) x0) (+ (* (- 1) x2) (+ (* 2 x3) (+ (* (- 1) x5) (+ (* 1 x7) (+ (* 1 x10) (+ (* (- 1) x11) (+ (* 1 x13) (+ (* (- 1) x17) (+ (* 1 x18) (+ (* 1 x19) (+ (* 2 x20) (+ (* (- 1) x21) (+ (* 1 x22) (* (- 2) x23) ))))))))))))))) 
(<= (- 6) (+ (* (- 1) x5) (+ (* 2 x6) (+ (* 1 x9) (+ (* (- 2) x10) (+ (* (- 2) x11) (+ (* (- 2) x12) (+ (* 1 x13) (+ (* (- 2) x14) (+ (* (- 2) x15) (+ (* (- 1) x17) (+ (* (- 2) x18) (+ (* (- 1) x20) (* 2 x21) ))))))))))))) 
(<= 12 (+ (* (- 2) x1) (+ (* (- 2) x2) (+ (* (- 2) x3) (+ (* (- 1) x4) (+ (* (- 1) x5) (+ (* 1 x6) (+ (* (- 1) x7) (+ (* 2 x8) (+ (* (- 2) x9) (+ (* 1 x13) (+ (* 1 x14) (+ (* 2 x15) (+ (* (- 1) x18) (+ (* 1 x19) (+ (* 2 x22) (* 2 x24) )))))))))))))))) 
(<= 8 (+ (* 2 x0) (+ (* 2 x1) (+ (* (- 1) x2) (+ (* 1 x4) (+ (* 1 x5) (+ (* (- 1) x9) (+ (* 1 x10) (+ (* (- 1) x12) (+ (* 1 x13) (+ (* 2 x15) (+ (* (- 2) x16) (+ (* (- 2) x18) (+ (* 2 x20) (* (- 1) x24) )))))))))))))) 
(<= (- 7) (+ (* (- 1) x0) (+ (* 2 x1) (+ (* 2 x2) (+ (* (- 1) x3) (+ (* (- 1) x5) (+ (* 1 x6) (+ (* (- 2) x9) (+ (* 1 x10) (+ (* (- 2) x11) (+ (* (- 2) x12) (+ (* 2 x13) (+ (* (- 1) x14) (+ (* (- 1) x15) (+ (* (- 1) x16) (+ (* 2 x17) (+ (* (- 2) x18) (+ (* 1 x19) (+ (* 2 x22) (+ (* 1 x23) (* 1 x24) )))))))))))))))))))) 
(<= 0 (+ (* 1 x0) (+ (* (- 1) x1) (+ (* (- 1) x2) (+ (* 1 x5) (+ (* 2 x8) (+ (* 1 x11) (+ (* (- 1) x16) (+ (* 1 x17) (+ (* 1 x19) (+ (* (- 1) x20) (+ (* 2 x21) (+ (* 1 x22) (+ (* (- 2) x23) (* 1 x24) )))))))))))))) 
(<= (- 11) (+ (* 2 x1) (+ (* 2 x4) (+ (* (- 2) x6) (+ (* 2 x8) (+ (* 2 x9) (+ (* 2 x11) (+ (* (- 2) x12) (+ (* (- 1) x13) (+ (* 1 x15) (+ (* 1 x17) (+ (* (- 1) x21) (+ (* (- 2) x22) (* (- 1) x23) ))))))))))))) 
(<= 2 (+ (* 2 x0) (+ (* 2 x2) (+ (* 1 x4) (+ (* 1 x5) (+ (* (- 2) x6) (+ (* 1 x7) (+ (* 2 x8) (+ (* (- 2) x11) (+ (* 1 x12) (+ (* (- 2) x13) (+ (* 1 x14) (+ (* (- 2) x15) (+ (* (- 2) x18) (+ (* 2 x20) (* 2 x21) ))))))))))))))) 
(<= 8 (+ (* (- 1) x0) (+ (* (- 1) x1) (+ (* 1 x3) (+ (* (- 2) x4) (+ (* 1 x5) (+ (* 1 x6) (+ (* (- 2) x7) (+ (* (- 1) x9) (+ (* 2 x10) (+ (* 2 x11) (+ (* 1 x12) (+ (* 2 x15) (+ (* (- 1) x19) (+ (* (- 1) x20) (+ (* 2 x21) (+ (* (- 1) x22) (* (- 2) x24) ))))))))))))))))) 
(<= 8 (+ (* (- 2) x0) (+ (* 1 x1) (+ (* 2 x2) (+ (* 2 x5) (+ (* (- 2) x6) (+ (* (- 1) x8) (+ (* 1 x11) (+ (* 1 x12) (+ (* (- 1) x13) (+ (* (- 2) x14) (+ (* 1 x16) (+ (* 2 x17) (+ (* 1 x19) (+ (* (- 1) x22) (* 2 x24) ))))))))))))))) 
(<= 13 (+ (* (- 2) x0) (+ (* (- 2) x1) (+ (* (- 2) x3) (+ (* 1 x4) (+ (* (- 2) x6) (+ (* 1 x9) (+ (* 2 x10) (+ (* (- 1) x12) (+ (* 2 x13) (+ (* (- 1) x14) (+ (* 1 x19) (+ (* (- 1) x22) (* 1 x23) ))))))))))))) 
(<= (- 14) (+ (* 2 x0) (+ (* 1 x1) (+ (* (- 2) x3) (+ (* 1 x4) (+ (* 2 x6) (+ (* 2 x7) (+ (* 2 x9) (+ (* (- 1) x10) (+ (* (- 2) x12) (+ (* 1 x13) (+ (* (- 2) x18) (+ (* 2 x20) (+ (* (- 2) x21) (* 2 x23) )))))))))))))) 
(<= (- 224) (+ (* (- 6) x0) (+ (* 7 x1) (+ (* 7 x2) (+ (* 22 x3) (+ (* 2 x4) (+ (* (- 26) x5) (+ (* 1 x6) (+ (* (- 21) x7) (+ (* (- 8) x8) (+ (* 17 x9) (+ (* (- 16) x10) (+ (* 16 x11) (+ (* (- 1) x12) (+ (* (- 9) x13) (+ (* (- 5) x14) (+ (* (- 9) x15) (+ (* (- 4) x16) (+ (* (- 12) x17) (+ (* 32 x18) (+ (* (- 25) x19) (+ (* (- 14) x20) (+ (* 8 x22) (+ (* (- 4) x23) (* (- 22) x24) )))))))))))))))))))))))) 
(<= 867 (+ (* 22 x0) (+ (* (- 40) x1) (+ (* (- 32) x2) (+ (* (- 71) x3) (+ (* (- 4) x4) (+ (* 86 x5) (+ (* 3 x6) (+ (* 79 x7) (+ (* 18 x8) (+ (* (- 62) x9) (+ (* 60 x10) (+ (* (- 51) x11) (+ (* 12 x12) (+ (* 38 x13) (+ (* 2 x14) (+ (* 43 x15) (+ (* 10 x16) (+ (* 30 x17) (+ (* (- 99) x18) (+ (* 81 x19) (+ (* 56 x20) (+ (* 15 x21) (+ (* (- 27) x22) (+ (* (- 4) x23) (* 83 x24) ))))))))))))))))))))))))) 
(<= 826 (+ (* 21 x0) (+ (* (- 28) x1) (+ (* (- 23) x2) (+ (* (- 65) x3) (+ (* 85 x5) (+ (* (- 4) x6) (+ (* 81 x7) (+ (* 9 x8) (+ (* (- 55) x9) (+ (* 52 x10) (+ (* (- 56) x11) (+ (* 10 x12) (+ (* 31 x13) (+ (* 14 x14) (+ (* 32 x15) (+ (* 4 x16) (+ (* 24 x17) (+ (* (- 99) x18) (+ (* 67 x19) (+ (* 53 x20) (+ (* 10 x21) (+ (* (- 23) x22) (+ (* 10 x23) (* 76 x24) )))))))))))))))))))))))) 
(<= (- 831) (+ (* (- 21) x0) (+ (* 41 x1) (+ (* 25 x2) (+ (* 55 x3) (+ (* 3 x4) (+ (* (- 80) x5) (+ (* (- 2) x6) (+ (* (- 83) x7) (+ (* 54 x9) (+ (* (- 56) x10) (+ (* 56 x11) (+ (* (- 10) x12) (+ (* (- 43) x13) (+ (* 3 x14) (+ (* (- 31) x15) (+ (* (- 5) x16) (+ (* (- 15) x17) (+ (* 90 x18) (+ (* (- 62) x19) (+ (* (- 67) x20) (+ (* (- 26) x21) (+ (* 22 x22) (+ (* 13 x23) (* (- 72) x24) )))))))))))))))))))))))) 
(<= (- 615) (+ (* (- 21) x0) (+ (* 9 x1) (+ (* 3 x2) (+ (* 66 x3) (+ (* (- 3) x4) (+ (* (- 77) x5) (+ (* 8 x6) (+ (* (- 57) x7) (+ (* (- 27) x8) (+ (* 36 x9) (+ (* (- 49) x10) (+ (* 51 x11) (+ (* (- 6) x12) (+ (* (- 29) x13) (+ (* 1 x14) (+ (* (- 8) x15) (+ (* (- 10) x16) (+ (* (- 43) x17) (+ (* 99 x18) (+ (* (- 70) x19) (+ (* (- 27) x20) (+ (* (- 18) x21) (+ (* 39 x22) (+ (* (- 21) x23) (* (- 71) x24) ))))))))))))))))))))))))) 
(<= 204 (+ (* 13 x0) (+ (* 16 x1) (+ (* 43 x2) (+ (* (- 55) x3) (+ (* 1 x4) (+ (* 49 x5) (+ (* (- 18) x6) (+ (* 10 x7) (+ (* 58 x8) (+ (* (- 2) x9) (+ (* 50 x10) (+ (* (- 49) x11) (+ (* (- 4) x12) (+ (* 39 x13) (+ (* (- 43) x14) (+ (* (- 43) x15) (+ (* 22 x16) (+ (* 62 x17) (+ (* (- 91) x18) (+ (* 63 x19) (+ (* 7 x20) (+ (* 48 x21) (+ (* (- 57) x22) (+ (* 28 x23) (* 48 x24) )))))))))))))))))))))))))))
(check-sat)
(exit)