(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Generated by: Martin Bromberger
Generated on: 2018-01-06
Generator: https://www.mpi-inf.mpg.de/fileadmin/inf/rg1/Documents/RandomUnboundedSageScript.tar.gz
Application: This is a satisfiable problem with bounded and unbounded directions and, therefore, a good test for the termination/completeness of branch-and-bound solvers.
Publications: M. Bromberger. A Reduction from Unbounded Linear Mixed Arithmetic Problems into Bounded Problems. (Work in progress.)

The benchmarks in this class were randomly generated by a sagemath script and by way of construction they are all satisfiable.
Target solver: CVC4 Mathsat SPASS-IQ YICES Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status sat)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(declare-fun x10 () Int)
(declare-fun x11 () Int)
(declare-fun x12 () Int)
(declare-fun x13 () Int)
(declare-fun x14 () Int)
(declare-fun x15 () Int)
(declare-fun x16 () Int)
(declare-fun x17 () Int)
(declare-fun x18 () Int)
(declare-fun x19 () Int)
(declare-fun x20 () Int)
(declare-fun x21 () Int)
(declare-fun x22 () Int)
(declare-fun x23 () Int)
(declare-fun x24 () Int)

(assert (and 
(<= (- 17) (+ (* 2 x1) (+ (* 1 x3) (+ (* 2 x4) (+ (* (- 1) x6) (+ (* 1 x8) (+ (* 1 x10) (+ (* 1 x11) (+ (* (- 2) x12) (+ (* 1 x13) (+ (* (- 2) x15) (+ (* 1 x16) (+ (* 1 x17) (+ (* (- 2) x20) (+ (* (- 1) x21) (+ (* 2 x23) (* 1 x24) )))))))))))))))) 
(<= 18 (+ (* 1 x1) (+ (* (- 2) x2) (+ (* 2 x3) (+ (* (- 1) x4) (+ (* (- 2) x6) (+ (* (- 1) x7) (+ (* (- 1) x8) (+ (* (- 1) x10) (+ (* 1 x11) (+ (* 2 x13) (+ (* (- 1) x16) (+ (* 1 x18) (+ (* (- 2) x19) (+ (* 1 x23) (* 1 x24) ))))))))))))))) 
(<= 20 (+ (* 2 x0) (+ (* 1 x1) (+ (* (- 1) x4) (+ (* 1 x5) (+ (* 2 x6) (+ (* 2 x7) (+ (* (- 2) x8) (+ (* 1 x10) (+ (* 1 x11) (+ (* (- 1) x18) (+ (* (- 2) x19) (+ (* (- 2) x21) (+ (* (- 1) x23) (* 1 x24) )))))))))))))) 
(<= 17 (+ (* 2 x0) (+ (* (- 1) x1) (+ (* 2 x6) (+ (* 2 x7) (+ (* 1 x8) (+ (* 1 x10) (+ (* 2 x12) (+ (* 1 x13) (+ (* (- 2) x15) (+ (* (- 1) x17) (+ (* (- 2) x18) (+ (* (- 2) x19) (+ (* (- 2) x23) (* 2 x24) )))))))))))))) 
(<= (- 7) (+ (* (- 1) x1) (+ (* 1 x2) (+ (* (- 1) x3) (+ (* (- 1) x5) (+ (* (- 2) x6) (+ (* (- 1) x8) (+ (* (- 1) x9) (+ (* 1 x11) (+ (* (- 2) x12) (+ (* (- 1) x14) (+ (* 2 x15) (+ (* 1 x19) (+ (* 2 x23) (* (- 1) x24) )))))))))))))) 
(<= 6 (+ (* 1 x1) (+ (* (- 2) x2) (+ (* (- 2) x3) (+ (* 2 x4) (+ (* (- 2) x6) (+ (* 2 x7) (+ (* 1 x12) (+ (* (- 2) x13) (+ (* 2 x15) (+ (* (- 1) x16) (+ (* 1 x18) (+ (* (- 2) x19) (+ (* (- 1) x21) (+ (* 1 x22) (* (- 1) x24) ))))))))))))))) 
(<= 15 (+ (* 1 x0) (+ (* 1 x2) (+ (* 2 x3) (+ (* (- 1) x5) (+ (* 1 x8) (+ (* 2 x9) (+ (* 1 x13) (+ (* 2 x17) (+ (* 1 x18) (+ (* 2 x20) (+ (* (- 1) x21) (+ (* 1 x23) (* (- 2) x24) ))))))))))))) 
(<= (- 4) (+ (* 1 x0) (+ (* 2 x2) (+ (* 2 x4) (+ (* 1 x6) (+ (* (- 2) x7) (+ (* (- 1) x9) (+ (* 2 x10) (+ (* 1 x11) (+ (* 2 x13) (+ (* (- 1) x15) (+ (* (- 2) x16) (+ (* 1 x17) (+ (* (- 2) x20) (+ (* 2 x21) (+ (* 2 x22) (+ (* (- 2) x23) (* (- 2) x24) ))))))))))))))))) 
(<= 16 (+ (* (- 1) x0) (+ (* 2 x1) (+ (* (- 1) x2) (+ (* 2 x4) (+ (* 2 x6) (+ (* 1 x8) (+ (* 1 x9) (+ (* 2 x10) (+ (* 2 x11) (+ (* 2 x12) (+ (* 1 x14) (+ (* 2 x17) (+ (* (- 2) x19) (+ (* (- 1) x21) (+ (* 2 x22) (* (- 1) x24) )))))))))))))))) 
(<= (- 1) (+ (* 1 x0) (+ (* (- 1) x3) (+ (* 1 x5) (+ (* 2 x9) (+ (* (- 2) x10) (+ (* (- 2) x11) (+ (* 2 x13) (+ (* 2 x14) (+ (* 2 x15) (+ (* (- 2) x16) (+ (* 2 x17) (+ (* 1 x18) (+ (* 1 x19) (+ (* 2 x22) (+ (* (- 2) x23) (* 1 x24) )))))))))))))))) 
(<= 9 (+ (* (- 2) x0) (+ (* (- 1) x1) (+ (* (- 1) x2) (+ (* 2 x3) (+ (* 2 x6) (+ (* (- 1) x7) (+ (* 2 x8) (+ (* 1 x17) (+ (* (- 2) x18) (+ (* (- 1) x20) (+ (* 2 x21) (* 2 x24) )))))))))))) 
(<= 17 (+ (* (- 2) x0) (+ (* (- 1) x2) (+ (* 2 x5) (+ (* 1 x6) (+ (* (- 2) x7) (+ (* 1 x8) (+ (* (- 2) x10) (+ (* (- 2) x12) (+ (* (- 2) x14) (+ (* 2 x15) (+ (* 1 x16) (+ (* 1 x17) (+ (* (- 1) x18) (+ (* (- 2) x19) (+ (* (- 2) x20) (+ (* 2 x21) (* 2 x22) ))))))))))))))))) 
(<= (- 14) (+ (* 2 x0) (+ (* (- 2) x2) (+ (* (- 2) x3) (+ (* 1 x4) (+ (* 1 x5) (+ (* (- 2) x7) (+ (* 1 x8) (+ (* (- 2) x9) (+ (* (- 1) x10) (+ (* (- 2) x11) (+ (* (- 1) x15) (+ (* (- 2) x17) (+ (* (- 2) x18) (+ (* (- 1) x20) (+ (* (- 1) x21) (+ (* (- 2) x22) (* 2 x24) ))))))))))))))))) 
(<= 8 (+ (* 1 x1) (+ (* (- 2) x5) (+ (* (- 2) x8) (+ (* (- 2) x12) (+ (* (- 2) x13) (+ (* 2 x15) (+ (* (- 2) x16) (+ (* (- 1) x17) (+ (* (- 2) x18) (+ (* (- 2) x21) (+ (* (- 1) x23) (* 1 x24) )))))))))))) 
(<= (- 2) (+ (* 1 x0) (+ (* 2 x1) (+ (* (- 2) x9) (+ (* (- 2) x10) (+ (* 1 x11) (+ (* 1 x14) (+ (* 1 x15) (+ (* (- 2) x16) (+ (* (- 1) x17) (+ (* 2 x18) (+ (* (- 1) x19) (+ (* (- 1) x21) (* 2 x22) ))))))))))))) 
(<= 2 (+ (* (- 2) x0) (+ (* 1 x2) (+ (* (- 1) x3) (+ (* 1 x4) (+ (* 2 x5) (+ (* 1 x7) (+ (* 2 x8) (+ (* 1 x9) (+ (* (- 1) x14) (+ (* (- 2) x15) (+ (* (- 2) x16) (+ (* 2 x17) (+ (* 1 x18) (+ (* 1 x20) (* 1 x22) ))))))))))))))) 
(<= (- 7) (+ (* (- 1) x5) (+ (* (- 1) x9) (+ (* 1 x10) (+ (* 2 x11) (+ (* 2 x12) (+ (* (- 2) x13) (+ (* (- 1) x16) (+ (* 1 x18) (+ (* 2 x19) (+ (* (- 2) x20) (+ (* (- 2) x22) (* (- 2) x23) )))))))))))) 
(<= 23 (+ (* (- 2) x7) (+ (* 2 x9) (+ (* 2 x11) (+ (* (- 2) x14) (+ (* 1 x15) (+ (* 1 x16) (+ (* (- 1) x17) (+ (* (- 1) x18) (+ (* (- 1) x19) (+ (* 1 x20) (+ (* 1 x22) (* (- 2) x24) )))))))))))) 
(<= 4 (+ (* (- 1) x1) (+ (* 1 x2) (+ (* 1 x3) (+ (* (- 1) x5) (+ (* 2 x6) (+ (* (- 2) x7) (+ (* (- 1) x9) (+ (* (- 2) x11) (+ (* 2 x12) (+ (* (- 1) x14) (+ (* (- 1) x15) (+ (* (- 2) x16) (+ (* (- 1) x19) (+ (* 2 x21) (+ (* 1 x22) (* 1 x23) )))))))))))))))) 
(<= 16 (+ (* 1 x0) (+ (* (- 1) x1) (+ (* 1 x2) (+ (* 1 x3) (+ (* (- 2) x4) (+ (* 1 x6) (+ (* 1 x7) (+ (* 2 x8) (+ (* 1 x10) (+ (* 1 x12) (+ (* (- 2) x14) (+ (* 2 x16) (+ (* 2 x17) (+ (* (- 1) x20) (+ (* 1 x21) (+ (* 1 x22) (+ (* 1 x23) (* (- 1) x24) )))))))))))))))))) 
(<= 27 (+ (* (- 2) x2) (+ (* 1 x4) (+ (* 2 x5) (+ (* 2 x7) (+ (* 2 x11) (+ (* (- 2) x12) (+ (* 2 x13) (+ (* (- 1) x14) (+ (* 2 x15) (+ (* 1 x16) (+ (* 2 x17) (+ (* (- 2) x18) (+ (* (- 2) x19) (+ (* 2 x20) (+ (* (- 2) x22) (+ (* 2 x23) (* (- 2) x24) ))))))))))))))))) 
(<= 10 (+ (* (- 1) x0) (+ (* (- 2) x1) (+ (* (- 2) x5) (+ (* 1 x7) (+ (* (- 2) x8) (+ (* 2 x9) (+ (* 2 x10) (+ (* 1 x11) (+ (* 1 x12) (+ (* 2 x13) (+ (* 1 x14) (+ (* 1 x16) (+ (* (- 1) x19) (+ (* 1 x20) (* 2 x23) ))))))))))))))) 
(<= (- 6) (+ (* (- 1) x0) (+ (* (- 1) x1) (+ (* 1 x2) (+ (* (- 1) x3) (+ (* 1 x4) (+ (* (- 1) x5) (+ (* (- 2) x6) (+ (* 2 x7) (+ (* 2 x11) (+ (* 2 x15) (+ (* 2 x19) (+ (* 2 x20) (+ (* (- 1) x21) (* 1 x24) )))))))))))))) 
(<= 13 (+ (* (- 2) x0) (+ (* 1 x1) (+ (* (- 1) x3) (+ (* (- 2) x4) (+ (* (- 1) x5) (+ (* 2 x6) (+ (* 1 x7) (+ (* (- 2) x8) (+ (* 2 x9) (+ (* (- 2) x10) (+ (* (- 2) x12) (+ (* (- 2) x14) (* (- 2) x16) ))))))))))))) 
(<= (- 334) (+ (* 10 x0) (+ (* 2 x1) (+ (* 9 x2) (+ (* 5 x3) (+ (* (- 22) x4) (+ (* 2 x5) (+ (* (- 14) x6) (+ (* 10 x7) (+ (* (- 10) x8) (+ (* (- 4) x9) (+ (* (- 5) x10) (+ (* (- 28) x11) (+ (* 7 x12) (+ (* (- 20) x13) (+ (* 21 x14) (+ (* (- 17) x15) (+ (* 16 x16) (+ (* (- 19) x17) (+ (* 26 x18) (+ (* 19 x19) (+ (* 4 x20) (+ (* (- 8) x21) (+ (* (- 14) x22) (+ (* (- 7) x23) (* 3 x24) ))))))))))))))))))))))))) 
(<= 392 (+ (* (- 5) x0) (+ (* (- 20) x1) (+ (* (- 12) x2) (+ (* (- 14) x3) (+ (* 38 x4) (+ (* (- 9) x5) (+ (* 14 x6) (+ (* (- 10) x7) (+ (* 18 x8) (+ (* (- 2) x9) (+ (* 20 x10) (+ (* 40 x11) (+ (* (- 10) x12) (+ (* 27 x13) (+ (* (- 20) x14) (+ (* 41 x15) (+ (* (- 4) x16) (+ (* 25 x17) (+ (* (- 54) x18) (+ (* (- 11) x19) (+ (* 4 x20) (+ (* 12 x21) (+ (* 6 x22) (+ (* 8 x23) (* (- 14) x24) ))))))))))))))))))))))))) 
(<= (- 800) (+ (* 16 x0) (+ (* 6 x1) (+ (* 31 x2) (+ (* 21 x3) (+ (* (- 37) x4) (+ (* 20 x5) (+ (* (- 22) x6) (+ (* 16 x7) (+ (* 4 x8) (+ (* (- 10) x9) (+ (* (- 2) x10) (+ (* (- 58) x11) (+ (* 16 x12) (+ (* (- 23) x13) (+ (* 34 x14) (+ (* (- 82) x15) (+ (* 41 x16) (+ (* (- 32) x17) (+ (* 58 x18) (+ (* 38 x19) (+ (* 8 x20) (+ (* (- 6) x21) (+ (* (- 30) x22) (+ (* (- 2) x23) (* 7 x24) ))))))))))))))))))))))))) 
(<= (- 549) (+ (* (- 9) x0) (+ (* 46 x1) (+ (* 24 x2) (+ (* 23 x3) (+ (* (- 60) x4) (+ (* 18 x5) (+ (* (- 3) x6) (+ (* (- 3) x7) (+ (* (- 26) x8) (+ (* 10 x9) (+ (* (- 41) x10) (+ (* (- 50) x11) (+ (* 22 x12) (+ (* (- 33) x13) (+ (* 15 x14) (+ (* (- 98) x15) (+ (* (- 21) x16) (+ (* (- 43) x17) (+ (* 99 x18) (+ (* 6 x19) (+ (* (- 23) x20) (+ (* (- 13) x21) (+ (* 6 x22) (+ (* (- 20) x23) (* 35 x24) ))))))))))))))))))))))))) 
(<= 840 (+ (* (- 20) x0) (+ (* 11 x1) (+ (* (- 17) x2) (+ (* 1 x3) (+ (* 15 x4) (+ (* (- 11) x5) (+ (* 29 x6) (+ (* (- 19) x7) (+ (* (- 17) x8) (+ (* 21 x9) (+ (* (- 4) x10) (+ (* 39 x11) (+ (* (- 19) x12) (+ (* 25 x13) (+ (* (- 44) x14) (+ (* 58 x15) (+ (* (- 52) x16) (+ (* 48 x17) (+ (* (- 29) x18) (+ (* (- 56) x19) (+ (* (- 24) x20) (+ (* 15 x21) (+ (* 52 x22) (+ (* 13 x23) (* (- 7) x24) ))))))))))))))))))))))))) 
(<= (- 648) (+ (* (- 5) x0) (+ (* (- 33) x1) (+ (* 7 x2) (+ (* (- 29) x3) (+ (* 45 x4) (+ (* 5 x5) (+ (* (- 10) x6) (+ (* 2 x7) (+ (* 56 x8) (+ (* (- 33) x9) (+ (* 38 x10) (+ (* 29 x11) (+ (* 15 x12) (+ (* 6 x13) (+ (* 11 x14) (+ (* (- 54) x15) (+ (* 64 x16) (+ (* (- 45) x17) (+ (* (- 40) x18) (+ (* 63 x19) (+ (* 39 x20) (+ (* 2 x21) (+ (* (- 70) x22) (+ (* (- 5) x23) (* (- 11) x24) )))))))))))))))))))))))))))
(check-sat)
(exit)