(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Generated by: Martin Bromberger
Generated on: 2018-01-06
Application: This is a problem with unbounded directions and, therefore, a good test for the termination/completeness of branch-and-bound solvers.
Publications: M. Bromberger. A Reduction from Unbounded Linear Mixed Arithmetic Problems into Bounded Problems. (Work in progress.)

The benchmarks in this class are based on the problems from SMT-LIB/QF_LIA/CAV_2009 and SMT-LIB/QF_LIA/cut_lemmas.
I just replaced all variables x with x_+ - x_-, where x_+ and x_- are two new variables such that x_+, x_- >= 0.
This transformation is equisatisfiable.
The new variables and an unsatisfiable status guarantee that there are bounded and unbounded directions.
Target solver: CVC4 Mathsat SPASS-IQ YICES Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "crafted")
(set-info :status sat)
(declare-fun x8_plus () Int)
(declare-fun x8_minus () Int)
(declare-fun x6_plus () Int)
(declare-fun x6_minus () Int)
(declare-fun x5_plus () Int)
(declare-fun x5_minus () Int)
(declare-fun x4_plus () Int)
(declare-fun x4_minus () Int)
(declare-fun x3_plus () Int)
(declare-fun x3_minus () Int)
(declare-fun x2_plus () Int)
(declare-fun x2_minus () Int)
(declare-fun x1_plus () Int)
(declare-fun x1_minus () Int)
(declare-fun x0_plus () Int)
(declare-fun x0_minus () Int)
(declare-fun x7_plus () Int)
(declare-fun x7_minus () Int)
(declare-fun x9_plus () Int)
(declare-fun x9_minus () Int)
(assert (>= x8_plus 0))
(assert (>= x8_minus 0))
(assert (>= x6_plus 0))
(assert (>= x6_minus 0))
(assert (>= x5_plus 0))
(assert (>= x5_minus 0))
(assert (>= x4_plus 0))
(assert (>= x4_minus 0))
(assert (>= x3_plus 0))
(assert (>= x3_minus 0))
(assert (>= x2_plus 0))
(assert (>= x2_minus 0))
(assert (>= x1_plus 0))
(assert (>= x1_minus 0))
(assert (>= x0_plus 0))
(assert (>= x0_minus 0))
(assert (>= x7_plus 0))
(assert (>= x7_minus 0))
(assert (>= x9_plus 0))
(assert (>= x9_minus 0))
(assert (<= (+ (* 90 x8_plus) (* (- 90) x8_minus) (* 49 x6_plus) (* (- 49) x6_minus) (* 40 x5_plus) (* (- 40) x5_minus) (* 31 x4_plus) (* (- 31) x4_minus) (* 50 x3_plus) (* (- 50) x3_minus) (* 67 x2_plus) (* (- 67) x2_minus) (* 53 x1_plus) (* (- 53) x1_minus) (* (- 74) x0_plus) (* 74 x0_minus) ) 74 ) )
(assert (<= (+ (* 3 x8_plus) (* (- 3) x8_minus) (* 85 x7_plus) (* (- 85) x7_minus) (* 21 x5_plus) (* (- 21) x5_minus) (* (- 27) x4_plus) (* 27 x4_minus) (* 49 x3_plus) (* (- 49) x3_minus) (* 43 x2_plus) (* (- 43) x2_minus) (* 28 x1_plus) (* (- 28) x1_minus) (* (- 93) x0_plus) (* 93 x0_minus) ) (- 14) ) )
(assert (<= (+ (* 38 x6_plus) (* (- 38) x6_minus) (* 97 x5_plus) (* (- 97) x5_minus) (* (- 101) x4_plus) (* 101 x4_minus) (* 17 x3_plus) (* (- 17) x3_minus) (* (- 22) x2_plus) (* 22 x2_minus) (* 86 x1_plus) (* (- 86) x1_minus) (* (- 2) x0_plus) (* 2 x0_minus) ) (- 76) ) )
(assert (<= (+ (* 75 x9_plus) (* (- 75) x9_minus) (* (- 9) x7_plus) (* 9 x7_minus) (* 88 x6_plus) (* (- 88) x6_minus) (* (- 79) x5_plus) (* 79 x5_minus) (* (- 50) x4_plus) (* 50 x4_minus) x3_plus (* (- 1) x3_minus) (* (- 46) x1_plus) (* 46 x1_minus) ) 54 ) )
(assert (<= (+ (* 6 x9_plus) (* (- 6) x9_minus) (* (- 8) x7_plus) (* 8 x7_minus) (* 35 x4_plus) (* (- 35) x4_minus) (* (- 180) x3_plus) (* 180 x3_minus) (* 2 x2_plus) (* (- 2) x2_minus) (* 72 x1_plus) (* (- 72) x1_minus) (* 20 x0_plus) (* (- 20) x0_minus) ) (- 77) ) )
(assert (<= (+ (* 48 x8_plus) (* (- 48) x8_minus) (* (- 89) x7_plus) (* 89 x7_minus) (* 153 x6_plus) (* (- 153) x6_minus) (* (- 93) x4_plus) (* 93 x4_minus) (* 75 x3_plus) (* (- 75) x3_minus) (* 83 x2_plus) (* (- 83) x2_minus) (* 11 x1_plus) (* (- 11) x1_minus) ) (- 16) ) )
(assert (<= (+ (* 42 x8_plus) (* (- 42) x8_minus) (* 136 x7_plus) (* (- 136) x7_minus) (* (- 87) x6_plus) (* 87 x6_minus) (* (- 10) x5_plus) (* 10 x5_minus) (* 15 x4_plus) (* (- 15) x4_minus) (* 96 x2_plus) (* (- 96) x2_minus) (* (- 26) x0_plus) (* 26 x0_minus) ) 79 ) )
(assert (<= (+ (* 78 x9_plus) (* (- 78) x9_minus) (* 36 x7_plus) (* (- 36) x7_minus) (* 26 x6_plus) (* (- 26) x6_minus) (* (- 21) x5_plus) (* 21 x5_minus) (* (- 73) x4_plus) (* 73 x4_minus) (* (- 54) x2_plus) (* 54 x2_minus) (* (- 50) x1_plus) (* 50 x1_minus) ) 70 ) )
(assert (<= (+ (* 75 x9_plus) (* (- 75) x9_minus) (* 104 x7_plus) (* (- 104) x7_minus) (* 25 x6_plus) (* (- 25) x6_minus) (* 60 x3_plus) (* (- 60) x3_minus) (* 24 x2_plus) (* (- 24) x2_minus) (* (- 36) x1_plus) (* 36 x1_minus) ) 5 ) )
(assert (<= (+ (* 14 x9_plus) (* (- 14) x9_minus) (* (- 39) x7_plus) (* 39 x7_minus) (* (- 2) x6_plus) (* 2 x6_minus) (* (- 75) x4_plus) (* 75 x4_minus) (* 196 x0_plus) (* (- 196) x0_minus) ) (- 81) ) )
(assert (>= (+ (* 62 x9_plus) (* (- 62) x9_minus) (* (- 7) x8_plus) (* 7 x8_minus) (* 94 x6_plus) (* (- 94) x6_minus) (* 68 x5_plus) (* (- 68) x5_minus) (* (- 54) x4_plus) (* 54 x4_minus) (* (- 57) x2_plus) (* 57 x2_minus) (* 89 x1_plus) (* (- 89) x1_minus) (* (- 83) x0_plus) (* 83 x0_minus) ) 57 ) )
(assert (>= (+ (* 18 x9_plus) (* (- 18) x9_minus) (* 28 x8_plus) (* (- 28) x8_minus) (* 108 x7_plus) (* (- 108) x7_minus) (* 67 x6_plus) (* (- 67) x6_minus) (* 26 x4_plus) (* (- 26) x4_minus) (* 24 x3_plus) (* (- 24) x3_minus) (* (- 99) x2_plus) (* 99 x2_minus) (* 32 x1_plus) (* (- 32) x1_minus) ) (- 99) ) )
(assert (>= (+ (* 92 x8_plus) (* (- 92) x8_minus) (* (- 86) x6_plus) (* 86 x6_minus) (* 51 x5_plus) (* (- 51) x5_minus) (* 67 x4_plus) (* (- 67) x4_minus) (* 40 x3_plus) (* (- 40) x3_minus) (* 49 x2_plus) (* (- 49) x2_minus) (* (- 15) x0_plus) (* 15 x0_minus) ) 22 ) )
(assert (>= (+ (* 18 x9_plus) (* (- 18) x9_minus) (* 32 x7_plus) (* (- 32) x7_minus) (* (- 58) x6_plus) (* 58 x6_minus) (* (- 65) x3_plus) (* 65 x3_minus) (* 32 x2_plus) (* (- 32) x2_minus) (* (- 31) x1_plus) (* 31 x1_minus) (* 36 x0_plus) (* (- 36) x0_minus) ) (- 25) ) )
(assert (>= (+ (* 17 x8_plus) (* (- 17) x8_minus) (* 62 x7_plus) (* (- 62) x7_minus) (* (- 95) x6_plus) (* 95 x6_minus) x4_plus (* (- 1) x4_minus) (* (- 1) x3_plus) x3_minus (* (- 89) x2_plus) (* 89 x2_minus) (* (- 88) x1_plus) (* 88 x1_minus) ) (- 14) ) )
(assert (>= (+ (* 19 x9_plus) (* (- 19) x9_minus) (* (- 90) x8_plus) (* 90 x8_minus) (* (- 21) x5_plus) (* 21 x5_minus) (* (- 84) x4_plus) (* 84 x4_minus) (* 73 x3_plus) (* (- 73) x3_minus) (* (- 55) x1_plus) (* 55 x1_minus) (* 237 x0_plus) (* (- 237) x0_minus) ) (- 57) ) )
(assert (>= (+ (* 14 x7_plus) (* (- 14) x7_minus) (* 93 x5_plus) (* (- 93) x5_minus) (* 38 x4_plus) (* (- 38) x4_minus) (* 50 x3_plus) (* (- 50) x3_minus) (* 99 x2_plus) (* (- 99) x2_minus) (* 86 x1_plus) (* (- 86) x1_minus) (* (- 15) x0_plus) (* 15 x0_minus) ) (- 16) ) )
(assert (>= (+ (* 43 x9_plus) (* (- 43) x9_minus) (* (- 24) x8_plus) (* 24 x8_minus) (* (- 75) x6_plus) (* 75 x6_minus) (* (- 87) x4_plus) (* 87 x4_minus) (* 81 x3_plus) (* (- 81) x3_minus) (* (- 91) x2_plus) (* 91 x2_minus) (* (- 28) x1_plus) (* 28 x1_minus) ) 88 ) )
(assert (>= (+ (* 70 x8_plus) (* (- 70) x8_minus) (* 30 x7_plus) (* (- 30) x7_minus) (* (- 86) x6_plus) (* 86 x6_minus) (* 48 x5_plus) (* (- 48) x5_minus) (* (- 48) x3_plus) (* 48 x3_minus) (* (- 27) x2_plus) (* 27 x2_minus) (* (- 95) x0_plus) (* 95 x0_minus) ) (- 42) ) )
(assert (>= (+ (* 87 x9_plus) (* (- 87) x9_minus) (* (- 100) x7_plus) (* 100 x7_minus) (* (- 56) x4_plus) (* 56 x4_minus) (* 60 x2_plus) (* (- 60) x2_minus) (* (- 19) x1_plus) (* 19 x1_minus) ) (- 80) ) )
(check-sat)
(exit)
