(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Generated by: Martin Bromberger
Generated on: 2018-01-06
Application: This is a problem with unbounded directions and, therefore, a good test for the termination/completeness of branch-and-bound solvers.
Publications: M. Bromberger. A Reduction from Unbounded Linear Mixed Arithmetic Problems into Bounded Problems. (Work in progress.)

The benchmarks in this class are based on the problems from SMT-LIB/QF_LIA/CAV_2009 and SMT-LIB/QF_LIA/cut_lemmas.
I just replaced all variables x with x_+ - x_-, where x_+ and x_- are two new variables such that x_+, x_- >= 0.
This transformation is equisatisfiable.
The new variables and an unsatisfiable status guarantee that there are bounded and unbounded directions.
Target solver: CVC4 Mathsat SPASS-IQ YICES Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "crafted")
(set-info :status sat)
(declare-fun x9_plus () Int)
(declare-fun x9_minus () Int)
(declare-fun x8_plus () Int)
(declare-fun x8_minus () Int)
(declare-fun x7_plus () Int)
(declare-fun x7_minus () Int)
(declare-fun x6_plus () Int)
(declare-fun x6_minus () Int)
(declare-fun x3_plus () Int)
(declare-fun x3_minus () Int)
(declare-fun x2_plus () Int)
(declare-fun x2_minus () Int)
(declare-fun x1_plus () Int)
(declare-fun x1_minus () Int)
(declare-fun x0_plus () Int)
(declare-fun x0_minus () Int)
(declare-fun x5_plus () Int)
(declare-fun x5_minus () Int)
(declare-fun x4_plus () Int)
(declare-fun x4_minus () Int)
(assert (>= x9_plus 0))
(assert (>= x9_minus 0))
(assert (>= x8_plus 0))
(assert (>= x8_minus 0))
(assert (>= x7_plus 0))
(assert (>= x7_minus 0))
(assert (>= x6_plus 0))
(assert (>= x6_minus 0))
(assert (>= x3_plus 0))
(assert (>= x3_minus 0))
(assert (>= x2_plus 0))
(assert (>= x2_minus 0))
(assert (>= x1_plus 0))
(assert (>= x1_minus 0))
(assert (>= x0_plus 0))
(assert (>= x0_minus 0))
(assert (>= x5_plus 0))
(assert (>= x5_minus 0))
(assert (>= x4_plus 0))
(assert (>= x4_minus 0))
(assert (<= (+ (* 37 x9_plus) (* (- 37) x9_minus) (* (- 36) x8_plus) (* 36 x8_minus) (* (- 23) x7_plus) (* 23 x7_minus) (* (- 7) x6_plus) (* 7 x6_minus) (* 13 x3_plus) (* (- 13) x3_minus) (* 20 x2_plus) (* (- 20) x2_minus) (* 37 x1_plus) (* (- 37) x1_minus) (* (- 38) x0_plus) (* 38 x0_minus) ) (- 14) ) )
(assert (<= (+ (* 15 x9_plus) (* (- 15) x9_minus) (* (- 13) x8_plus) (* 13 x8_minus) (* 14 x6_plus) (* (- 14) x6_minus) (* 14 x5_plus) (* (- 14) x5_minus) (* (- 4) x4_plus) (* 4 x4_minus) (* 7 x2_plus) (* (- 7) x2_minus) (* 8 x1_plus) (* (- 8) x1_minus) ) (- 20) ) )
(assert (<= (+ (* 14 x9_plus) (* (- 14) x9_minus) (* (- 38) x8_plus) (* 38 x8_minus) (* 22 x7_plus) (* (- 22) x7_minus) (* 5 x6_plus) (* (- 5) x6_minus) (* (- 8) x2_plus) (* 8 x2_minus) (* (- 36) x1_plus) (* 36 x1_minus) (* 29 x0_plus) (* (- 29) x0_minus) ) 10 ) )
(assert (<= (+ (* 34 x8_plus) (* (- 34) x8_minus) (* 33 x6_plus) (* (- 33) x6_minus) (* (- 32) x5_plus) (* 32 x5_minus) (* (- 23) x4_plus) (* 23 x4_minus) (* 32 x2_plus) (* (- 32) x2_minus) (* 19 x1_plus) (* (- 19) x1_minus) (* (- 38) x0_plus) (* 38 x0_minus) ) (- 9) ) )
(assert (<= (+ (* 34 x8_plus) (* (- 34) x8_minus) (* (- 13) x7_plus) (* 13 x7_minus) (* 2 x6_plus) (* (- 2) x6_minus) (* 3 x5_plus) (* (- 3) x5_minus) (* 36 x4_plus) (* (- 36) x4_minus) (* 25 x2_plus) (* (- 25) x2_minus) ) (- 4) ) )
(assert (<= (+ (* 16 x6_plus) (* (- 16) x6_minus) (* (- 8) x5_plus) (* 8 x5_minus) (* (- 27) x4_plus) (* 27 x4_minus) (* (- 14) x3_plus) (* 14 x3_minus) x1_plus (* (- 1) x1_minus) (* (- 13) x0_plus) (* 13 x0_minus) ) 6 ) )
(assert (<= (+ (* 6 x7_plus) (* (- 6) x7_minus) (* (- 3) x5_plus) (* 3 x5_minus) (* (- 18) x4_plus) (* 18 x4_minus) (* 14 x3_plus) (* (- 14) x3_minus) x1_plus (* (- 1) x1_minus) (* (- 6) x0_plus) (* 6 x0_minus) ) (- 29) ) )
(assert (>= (+ (* 29 x9_plus) (* (- 29) x9_minus) (* (- 25) x8_plus) (* 25 x8_minus) (* (- 7) x7_plus) (* 7 x7_minus) (* (- 10) x4_plus) (* 10 x4_minus) (* (- 6) x3_plus) (* 6 x3_minus) x2_plus (* (- 1) x2_minus) (* (- 22) x1_plus) (* 22 x1_minus) (* 38 x0_plus) (* (- 38) x0_minus) ) 25 ) )
(assert (>= (+ (* 37 x8_plus) (* (- 37) x8_minus) (* (- 37) x7_plus) (* 37 x7_minus) (* 31 x6_plus) (* (- 31) x6_minus) (* 6 x5_plus) (* (- 6) x5_minus) (* 36 x4_plus) (* (- 36) x4_minus) (* 6 x3_plus) (* (- 6) x3_minus) (* 16 x1_plus) (* (- 16) x1_minus) (* (- 23) x0_plus) (* 23 x0_minus) ) 15 ) )
(assert (>= (+ (* 10 x9_plus) (* (- 10) x9_minus) (* 37 x7_plus) (* (- 37) x7_minus) (* (- 29) x6_plus) (* 29 x6_minus) (* (- 26) x5_plus) (* 26 x5_minus) (* (- 36) x4_plus) (* 36 x4_minus) (* (- 23) x3_plus) (* 23 x3_minus) (* (- 50) x2_plus) (* 50 x2_minus) (* 2 x0_plus) (* (- 2) x0_minus) ) (- 16) ) )
(assert (>= (+ (* 11 x9_plus) (* (- 11) x9_minus) (* 37 x7_plus) (* (- 37) x7_minus) (* 12 x6_plus) (* (- 12) x6_minus) (* (- 43) x5_plus) (* 43 x5_minus) (* (- 7) x4_plus) (* 7 x4_minus) (* 25 x3_plus) (* (- 25) x3_minus) (* (- 36) x2_plus) (* 36 x2_minus) (* 66 x0_plus) (* (- 66) x0_minus) ) 33 ) )
(assert (>= (+ (* 28 x9_plus) (* (- 28) x9_minus) (* (- 37) x7_plus) (* 37 x7_minus) (* (- 36) x6_plus) (* 36 x6_minus) (* (- 18) x4_plus) (* 18 x4_minus) (* (- 27) x2_plus) (* 27 x2_minus) (* (- 10) x1_plus) (* 10 x1_minus) (* (- 8) x0_plus) (* 8 x0_minus) ) 39 ) )
(assert (>= (+ (* 24 x9_plus) (* (- 24) x9_minus) (* 18 x8_plus) (* (- 18) x8_minus) (* (- 3) x7_plus) (* 3 x7_minus) (* (- 2) x5_plus) (* 2 x5_minus) (* 32 x4_plus) (* (- 32) x4_minus) (* (- 7) x2_plus) (* 7 x2_minus) (* (- 3) x1_plus) (* 3 x1_minus) ) 39 ) )
(assert (>= (+ (* 39 x9_plus) (* (- 39) x9_minus) (* (- 15) x8_plus) (* 15 x8_minus) (* (- 29) x5_plus) (* 29 x5_minus) (* 3 x4_plus) (* (- 3) x4_minus) (* (- 6) x3_plus) (* 6 x3_minus) (* (- 11) x2_plus) (* 11 x2_minus) (* (- 24) x1_plus) (* 24 x1_minus) ) 13 ) )
(assert (>= (+ (* 11 x9_plus) (* (- 11) x9_minus) (* (- 10) x5_plus) (* 10 x5_minus) (* (- 8) x4_plus) (* 8 x4_minus) (* 22 x3_plus) (* (- 22) x3_minus) (* (- 60) x2_plus) (* 60 x2_minus) (* 4 x1_plus) (* (- 4) x1_minus) (* 28 x0_plus) (* (- 28) x0_minus) ) 24 ) )
(assert (>= (+ (* 19 x9_plus) (* (- 19) x9_minus) (* (- 39) x5_plus) (* 39 x5_minus) (* 13 x4_plus) (* (- 13) x4_minus) (* 31 x2_plus) (* (- 31) x2_minus) (* (- 37) x1_plus) (* 37 x1_minus) (* 26 x0_plus) (* (- 26) x0_minus) ) 12 ) )
(assert (>= (+ (* 11 x9_plus) (* (- 11) x9_minus) (* (- 29) x8_plus) (* 29 x8_minus) (* 25 x6_plus) (* (- 25) x6_minus) (* 28 x5_plus) (* (- 28) x5_minus) (* 14 x3_plus) (* (- 14) x3_minus) (* 35 x1_plus) (* (- 35) x1_minus) ) (- 35) ) )
(assert (>= (+ (* 38 x9_plus) (* (- 38) x9_minus) (* 42 x7_plus) (* (- 42) x7_minus) (* (- 5) x6_plus) (* 5 x6_minus) (* (- 31) x5_plus) (* 31 x5_minus) (* 26 x1_plus) (* (- 26) x1_minus) ) (- 35) ) )
(assert (>= (+ (* 17 x9_plus) (* (- 17) x9_minus) (* (- 37) x6_plus) (* 37 x6_minus) (* (- 3) x4_plus) (* 3 x4_minus) (* (- 11) x3_plus) (* 11 x3_minus) (* (- 49) x1_plus) (* 49 x1_minus) ) 37 ) )
(assert (>= (+ (* 21 x9_plus) (* (- 21) x9_minus) (* (- 30) x6_plus) (* 30 x6_minus) (* (- 62) x5_plus) (* 62 x5_minus) (* (- 16) x4_plus) (* 16 x4_minus) (* 46 x3_plus) (* (- 46) x3_minus) ) 9 ) )
(check-sat)
(exit)
