(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Generated by: Martin Bromberger
Generated on: 2018-01-06
Application: This is a problem with unbounded directions and, therefore, a good test for the termination/completeness of branch-and-bound solvers.
Publications: M. Bromberger. A Reduction from Unbounded Linear Mixed Arithmetic Problems into Bounded Problems. (Work in progress.)

The benchmarks in this class are based on the problems from SMT-LIB/QF_LIA/CAV_2009 and SMT-LIB/QF_LIA/cut_lemmas.
I just replaced all variables x with x_+ - x_-, where x_+ and x_- are two new variables such that x_+, x_- >= 0.
This transformation is equisatisfiable.
The new variables and an unsatisfiable status guarantee that there are bounded and unbounded directions.
Target solver: CVC4 Mathsat SPASS-IQ YICES Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "crafted")
(set-info :status sat)
(declare-fun x9_plus () Int)
(declare-fun x9_minus () Int)
(declare-fun x6_plus () Int)
(declare-fun x6_minus () Int)
(declare-fun x5_plus () Int)
(declare-fun x5_minus () Int)
(declare-fun x4_plus () Int)
(declare-fun x4_minus () Int)
(declare-fun x3_plus () Int)
(declare-fun x3_minus () Int)
(declare-fun x2_plus () Int)
(declare-fun x2_minus () Int)
(declare-fun x0_plus () Int)
(declare-fun x0_minus () Int)
(declare-fun x8_plus () Int)
(declare-fun x8_minus () Int)
(declare-fun x1_plus () Int)
(declare-fun x1_minus () Int)
(declare-fun x7_plus () Int)
(declare-fun x7_minus () Int)
(assert (>= x9_plus 0))
(assert (>= x9_minus 0))
(assert (>= x6_plus 0))
(assert (>= x6_minus 0))
(assert (>= x5_plus 0))
(assert (>= x5_minus 0))
(assert (>= x4_plus 0))
(assert (>= x4_minus 0))
(assert (>= x3_plus 0))
(assert (>= x3_minus 0))
(assert (>= x2_plus 0))
(assert (>= x2_minus 0))
(assert (>= x0_plus 0))
(assert (>= x0_minus 0))
(assert (>= x8_plus 0))
(assert (>= x8_minus 0))
(assert (>= x1_plus 0))
(assert (>= x1_minus 0))
(assert (>= x7_plus 0))
(assert (>= x7_minus 0))
(assert (<= (+ (* 28 x9_plus) (* (- 28) x9_minus) (* (- 36) x6_plus) (* 36 x6_minus) (* 37 x5_plus) (* (- 37) x5_minus) (* 32 x4_plus) (* (- 32) x4_minus) (* (- 29) x3_plus) (* 29 x3_minus) (* (- 17) x2_plus) (* 17 x2_minus) (* 2 x0_plus) (* (- 2) x0_minus) ) 36 ) )
(assert (<= (+ (* 37 x8_plus) (* (- 37) x8_minus) (* (- 33) x6_plus) (* 33 x6_minus) (* (- 49) x5_plus) (* 49 x5_minus) (* (- 26) x3_plus) (* 26 x3_minus) (* 9 x2_plus) (* (- 9) x2_minus) (* (- 27) x1_plus) (* 27 x1_minus) (* (- 33) x0_plus) (* 33 x0_minus) ) (- 37) ) )
(assert (<= (+ (* 24 x7_plus) (* (- 24) x7_minus) (* 7 x6_plus) (* (- 7) x6_minus) (* 49 x5_plus) (* (- 49) x5_minus) (* 22 x4_plus) (* (- 22) x4_minus) (* (- 31) x3_plus) (* 31 x3_minus) (* (- 3) x2_plus) (* 3 x2_minus) (* 19 x1_plus) (* (- 19) x1_minus) ) (- 6) ) )
(assert (<= (+ (* 35 x9_plus) (* (- 35) x9_minus) (* (- 34) x6_plus) (* 34 x6_minus) (* 26 x4_plus) (* (- 26) x4_minus) (* (- 34) x3_plus) (* 34 x3_minus) (* 17 x2_plus) (* (- 17) x2_minus) (* 18 x1_plus) (* (- 18) x1_minus) (* 35 x0_plus) (* (- 35) x0_minus) ) 25 ) )
(assert (<= (+ (* 23 x9_plus) (* (- 23) x9_minus) (* (- 34) x8_plus) (* 34 x8_minus) (* 20 x7_plus) (* (- 20) x7_minus) (* 49 x6_plus) (* (- 49) x6_minus) (* 15 x5_plus) (* (- 15) x5_minus) (* (- 8) x3_plus) (* 8 x3_minus) (* (- 5) x0_plus) (* 5 x0_minus) ) 8 ) )
(assert (<= (+ (* 12 x9_plus) (* (- 12) x9_minus) (* 34 x8_plus) (* (- 34) x8_minus) (* (- 24) x6_plus) (* 24 x6_minus) (* (- 44) x4_plus) (* 44 x4_minus) (* (- 3) x3_plus) (* 3 x3_minus) (* 32 x2_plus) (* (- 32) x2_minus) ) (- 39) ) )
(assert (<= (+ (* 30 x9_plus) (* (- 30) x9_minus) (* 4 x8_plus) (* (- 4) x8_minus) (* (- 14) x7_plus) (* 14 x7_minus) (* (- 39) x6_plus) (* 39 x6_minus) (* (- 9) x5_plus) (* 9 x5_minus) (* 34 x2_plus) (* (- 34) x2_minus) ) (- 9) ) )
(assert (<= (+ (* 17 x9_plus) (* (- 17) x9_minus) (* 11 x7_plus) (* (- 11) x7_minus) (* 38 x6_plus) (* (- 38) x6_minus) (* (- 14) x4_plus) (* 14 x4_minus) (* (- 18) x1_plus) (* 18 x1_minus) (* (- 54) x0_plus) (* 54 x0_minus) ) (- 34) ) )
(assert (<= (+ (* 45 x9_plus) (* (- 45) x9_minus) (* 17 x7_plus) (* (- 17) x7_minus) (* (- 8) x6_plus) (* 8 x6_minus) (* (- 12) x3_plus) (* 12 x3_minus) (* 18 x2_plus) (* (- 18) x2_minus) (* (- 3) x1_plus) (* 3 x1_minus) ) 9 ) )
(assert (<= (+ (* 44 x9_plus) (* (- 44) x9_minus) (* 34 x8_plus) (* (- 34) x8_minus) (* 10 x6_plus) (* (- 10) x6_minus) (* 13 x4_plus) (* (- 13) x4_minus) (* (- 23) x2_plus) (* 23 x2_minus) (* (- 5) x1_plus) (* 5 x1_minus) ) 14 ) )
(assert (<= (+ (* 12 x9_plus) (* (- 12) x9_minus) (* 11 x8_plus) (* (- 11) x8_minus) (* (- 33) x6_plus) (* 33 x6_minus) (* (- 34) x5_plus) (* 34 x5_minus) (* (- 14) x1_plus) (* 14 x1_minus) (* (- 17) x0_plus) (* 17 x0_minus) ) (- 3) ) )
(assert (<= (+ (* 27 x9_plus) (* (- 27) x9_minus) (* (- 30) x3_plus) (* 30 x3_minus) (* (- 9) x2_plus) (* 9 x2_minus) (* 12 x1_plus) (* (- 12) x1_minus) (* 65 x0_plus) (* (- 65) x0_minus) ) 19 ) )
(assert (>= (+ (* 5 x7_plus) (* (- 5) x7_minus) (* (- 19) x6_plus) (* 19 x6_minus) (* (- 29) x5_plus) (* 29 x5_minus) (* (- 25) x4_plus) (* 25 x4_minus) (* 19 x3_plus) (* (- 19) x3_minus) (* (- 55) x2_plus) (* 55 x2_minus) (* (- 3) x0_plus) (* 3 x0_minus) ) 0 ) )
(assert (>= (+ (* 39 x9_plus) (* (- 39) x9_minus) (* (- 34) x8_plus) (* 34 x8_minus) (* (- 13) x7_plus) (* 13 x7_minus) (* 4 x6_plus) (* (- 4) x6_minus) (* (- 18) x2_plus) (* 18 x2_minus) (* 36 x1_plus) (* (- 36) x1_minus) (* (- 15) x0_plus) (* 15 x0_minus) ) (- 10) ) )
(assert (>= (+ (* 8 x8_plus) (* (- 8) x8_minus) (* (- 47) x7_plus) (* 47 x7_minus) (* 17 x5_plus) (* (- 17) x5_minus) (* 14 x4_plus) (* (- 14) x4_minus) (* 75 x2_plus) (* (- 75) x2_minus) (* (- 29) x0_plus) (* 29 x0_minus) ) 26 ) )
(assert (>= (+ (* 27 x9_plus) (* (- 27) x9_minus) (* (- 16) x8_plus) (* 16 x8_minus) (* (- 24) x7_plus) (* 24 x7_minus) (* (- 41) x6_plus) (* 41 x6_minus) (* (- 28) x4_plus) (* 28 x4_minus) (* (- 12) x2_plus) (* 12 x2_minus) ) (- 5) ) )
(assert (>= (+ (* 2 x6_plus) (* (- 2) x6_minus) (* (- 26) x5_plus) (* 26 x5_minus) (* 8 x3_plus) (* (- 8) x3_minus) (* (- 9) x2_plus) (* 9 x2_minus) (* 72 x1_plus) (* (- 72) x1_minus) (* 39 x0_plus) (* (- 39) x0_minus) ) (- 27) ) )
(assert (>= (+ (* 30 x8_plus) (* (- 30) x8_minus) (* 5 x6_plus) (* (- 5) x6_minus) (* (- 4) x4_plus) (* 4 x4_minus) (* 26 x3_plus) (* (- 26) x3_minus) (* (- 7) x2_plus) (* 7 x2_minus) (* (- 27) x1_plus) (* 27 x1_minus) ) (- 1) ) )
(assert (>= (+ (* 39 x8_plus) (* (- 39) x8_minus) (* 22 x7_plus) (* (- 22) x7_minus) (* 17 x3_plus) (* (- 17) x3_minus) (* 6 x2_plus) (* (- 6) x2_minus) (* (- 57) x1_plus) (* 57 x1_minus) (* (- 25) x0_plus) (* 25 x0_minus) ) (- 22) ) )
(assert (>= (+ (* 9 x9_plus) (* (- 9) x9_minus) (* (- 38) x7_plus) (* 38 x7_minus) (* 8 x5_plus) (* (- 8) x5_minus) (* (- 42) x3_plus) (* 42 x3_minus) (* 36 x1_plus) (* (- 36) x1_minus) ) (- 27) ) )
(check-sat)
(exit)
