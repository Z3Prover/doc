(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Generated by: Martin Bromberger
Generated on: 2018-01-06
Application: This is a problem with unbounded directions and, therefore, a good test for the termination/completeness of branch-and-bound solvers.
Publications: M. Bromberger. A Reduction from Unbounded Linear Mixed Arithmetic Problems into Bounded Problems. (Work in progress.)

The benchmarks in this class are based on the problems from SMT-LIB/QF_LIA/CAV_2009 and SMT-LIB/QF_LIA/cut_lemmas.
I just replaced all variables x with x_+ - x_-, where x_+ and x_- are two new variables such that x_+, x_- >= 0.
This transformation is equisatisfiable.
The new variables and an unsatisfiable status guarantee that there are bounded and unbounded directions.
Target solver: CVC4 Mathsat SPASS-IQ YICES Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun x9_plus () Int)
(declare-fun x9_minus () Int)
(declare-fun x8_plus () Int)
(declare-fun x8_minus () Int)
(declare-fun x6_plus () Int)
(declare-fun x6_minus () Int)
(declare-fun x5_plus () Int)
(declare-fun x5_minus () Int)
(declare-fun x3_plus () Int)
(declare-fun x3_minus () Int)
(declare-fun x2_plus () Int)
(declare-fun x2_minus () Int)
(declare-fun x1_plus () Int)
(declare-fun x1_minus () Int)
(declare-fun x7_plus () Int)
(declare-fun x7_minus () Int)
(declare-fun x4_plus () Int)
(declare-fun x4_minus () Int)
(declare-fun x0_plus () Int)
(declare-fun x0_minus () Int)
(assert (>= x9_plus 0))
(assert (>= x9_minus 0))
(assert (>= x8_plus 0))
(assert (>= x8_minus 0))
(assert (>= x6_plus 0))
(assert (>= x6_minus 0))
(assert (>= x5_plus 0))
(assert (>= x5_minus 0))
(assert (>= x3_plus 0))
(assert (>= x3_minus 0))
(assert (>= x2_plus 0))
(assert (>= x2_minus 0))
(assert (>= x1_plus 0))
(assert (>= x1_minus 0))
(assert (>= x7_plus 0))
(assert (>= x7_minus 0))
(assert (>= x4_plus 0))
(assert (>= x4_minus 0))
(assert (>= x0_plus 0))
(assert (>= x0_minus 0))
(assert (<= (+ (* 10 x9_plus) (* (- 10) x9_minus) (* 14 x8_plus) (* (- 14) x8_minus) (* (- 17) x6_plus) (* 17 x6_minus) (* (- 38) x5_plus) (* 38 x5_minus) (* 3 x3_plus) (* (- 3) x3_minus) (* (- 25) x2_plus) (* 25 x2_minus) (* (- 16) x1_plus) (* 16 x1_minus) ) 3 ) )
(assert (<= (+ (* 4 x9_plus) (* (- 4) x9_minus) (* (- 17) x8_plus) (* 17 x8_minus) (* 33 x7_plus) (* (- 33) x7_minus) (* 12 x5_plus) (* (- 12) x5_minus) (* (- 30) x4_plus) (* 30 x4_minus) (* (- 4) x3_plus) (* 4 x3_minus) (* 11 x1_plus) (* (- 11) x1_minus) ) 21 ) )
(assert (<= (+ (* 17 x9_plus) (* (- 17) x9_minus) (* (- 15) x7_plus) (* 15 x7_minus) (* (- 2) x6_plus) (* 2 x6_minus) (* 26 x5_plus) (* (- 26) x5_minus) (* 7 x4_plus) (* (- 7) x4_minus) (* (- 25) x3_plus) (* 25 x3_minus) (* 14 x0_plus) (* (- 14) x0_minus) ) (- 25) ) )
(assert (<= (+ (* 7 x9_plus) (* (- 7) x9_minus) (* (- 4) x8_plus) (* 4 x8_minus) (* 18 x7_plus) (* (- 18) x7_minus) (* 24 x5_plus) (* (- 24) x5_minus) (* (- 44) x4_plus) (* 44 x4_minus) (* 3 x2_plus) (* (- 3) x2_minus) (* (- 11) x0_plus) (* 11 x0_minus) ) 18 ) )
(assert (<= (+ (* 30 x6_plus) (* (- 30) x6_minus) (* 14 x5_plus) (* (- 14) x5_minus) (* 27 x4_plus) (* (- 27) x4_minus) (* (- 24) x3_plus) (* 24 x3_minus) (* (- 26) x2_plus) (* 26 x2_minus) (* 10 x0_plus) (* (- 10) x0_minus) ) (- 7) ) )
(assert (<= (+ (* 3 x7_plus) (* (- 3) x7_minus) (* 29 x6_plus) (* (- 29) x6_minus) (* (- 1) x5_plus) x5_minus (* (- 7) x3_plus) (* 7 x3_minus) (* 15 x1_plus) (* (- 15) x1_minus) (* 17 x0_plus) (* (- 17) x0_minus) ) 22 ) )
(assert (<= (+ (* 23 x7_plus) (* (- 23) x7_minus) (* (- 28) x6_plus) (* 28 x6_minus) (* 15 x5_plus) (* (- 15) x5_minus) (* (- 51) x4_plus) (* 51 x4_minus) (* (- 23) x2_plus) (* 23 x2_minus) (* 14 x0_plus) (* (- 14) x0_minus) ) 3 ) )
(assert (<= (+ (* 5 x9_plus) (* (- 5) x9_minus) (* (- 52) x4_plus) (* 52 x4_minus) (* 22 x3_plus) (* (- 22) x3_minus) (* 10 x2_plus) (* (- 10) x2_minus) (* (- 22) x1_plus) (* 22 x1_minus) (* (- 26) x0_plus) (* 26 x0_minus) ) 26 ) )
(assert (<= (+ (* 36 x7_plus) (* (- 36) x7_minus) (* (- 10) x6_plus) (* 10 x6_minus) (* 7 x5_plus) (* (- 7) x5_minus) (* (- 9) x3_plus) (* 9 x3_minus) (* 17 x2_plus) (* (- 17) x2_minus) (* 25 x1_plus) (* (- 25) x1_minus) ) (- 11) ) )
(assert (<= (+ (* 29 x9_plus) (* (- 29) x9_minus) (* (- 20) x5_plus) (* 20 x5_minus) (* 37 x3_plus) (* (- 37) x3_minus) (* 10 x2_plus) (* (- 10) x2_minus) (* 8 x1_plus) (* (- 8) x1_minus) (* 4 x0_plus) (* (- 4) x0_minus) ) 29 ) )
(assert (<= (+ (* 24 x9_plus) (* (- 24) x9_minus) (* (- 15) x7_plus) (* 15 x7_minus) (* 29 x6_plus) (* (- 29) x6_minus) (* 4 x3_plus) (* (- 4) x3_minus) (* (- 11) x1_plus) (* 11 x1_minus) ) 11 ) )
(assert (<= (+ (* 26 x9_plus) (* (- 26) x9_minus) (* (- 7) x7_plus) (* 7 x7_minus) (* 48 x5_plus) (* (- 48) x5_minus) (* (- 18) x3_plus) (* 18 x3_minus) (* 22 x0_plus) (* (- 22) x0_minus) ) (- 18) ) )
(assert (>= (+ (* 19 x9_plus) (* (- 19) x9_minus) (* (- 7) x8_plus) (* 7 x8_minus) (* (- 20) x7_plus) (* 20 x7_minus) (* (- 15) x4_plus) (* 15 x4_minus) (* (- 1) x2_plus) x2_minus (* 21 x0_plus) (* (- 21) x0_minus) ) 11 ) )
(assert (>= (+ (* 13 x7_plus) (* (- 13) x7_minus) (* 24 x6_plus) (* (- 24) x6_minus) (* 4 x5_plus) (* (- 4) x5_minus) (* (- 9) x4_plus) (* 9 x4_minus) (* 14 x3_plus) (* (- 14) x3_minus) (* (- 6) x2_plus) (* 6 x2_minus) ) (- 17) ) )
(assert (>= (+ (* 19 x9_plus) (* (- 19) x9_minus) (* (- 20) x8_plus) (* 20 x8_minus) (* (- 12) x7_plus) (* 12 x7_minus) (* (- 12) x4_plus) (* 12 x4_minus) (* (- 15) x3_plus) (* 15 x3_minus) x2_plus (* (- 1) x2_minus) ) 27 ) )
(assert (>= (+ (* 24 x8_plus) (* (- 24) x8_minus) (* 45 x7_plus) (* (- 45) x7_minus) (* (- 17) x6_plus) (* 17 x6_minus) (* (- 23) x5_plus) (* 23 x5_minus) x4_plus (* (- 1) x4_minus) (* (- 25) x2_plus) (* 25 x2_minus) ) 25 ) )
(assert (>= (+ (* 12 x9_plus) (* (- 12) x9_minus) (* (- 22) x8_plus) (* 22 x8_minus) (* (- 6) x7_plus) (* 6 x7_minus) (* (- 21) x6_plus) (* 21 x6_minus) (* (- 5) x1_plus) (* 5 x1_minus) (* 24 x0_plus) (* (- 24) x0_minus) ) (- 2) ) )
(assert (>= (+ (* 14 x9_plus) (* (- 14) x9_minus) (* (- 23) x8_plus) (* 23 x8_minus) (* (- 7) x7_plus) (* 7 x7_minus) (* 14 x6_plus) (* (- 14) x6_minus) (* (- 31) x5_plus) (* 31 x5_minus) (* 35 x4_plus) (* (- 35) x4_minus) ) (- 29) ) )
(assert (>= (+ (* 5 x9_plus) (* (- 5) x9_minus) (* 16 x8_plus) (* (- 16) x8_minus) (* (- 7) x7_plus) (* 7 x7_minus) (* (- 22) x4_plus) (* 22 x4_minus) x1_plus (* (- 1) x1_minus) ) 19 ) )
(assert (>= (+ (* 3 x9_plus) (* (- 3) x9_minus) (* (- 8) x6_plus) (* 8 x6_minus) (* 5 x4_plus) (* (- 5) x4_minus) (* (- 27) x3_plus) (* 27 x3_minus) (* 22 x1_plus) (* (- 22) x1_minus) ) (- 18) ) )
(check-sat)
(exit)
