(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Generated by: Martin Bromberger
Generated on: 2018-01-06
Application: This is a problem with unbounded directions and, therefore, a good test for the termination/completeness of branch-and-bound solvers.
Publications: M. Bromberger. A Reduction from Unbounded Linear Mixed Arithmetic Problems into Bounded Problems. (Work in progress.)

The benchmarks in this class are based on the problems from SMT-LIB/QF_LIA/CAV_2009 and SMT-LIB/QF_LIA/cut_lemmas.
I just replaced all variables x with x_+ - x_-, where x_+ and x_- are two new variables such that x_+, x_- >= 0.
This transformation is equisatisfiable.
The new variables and an unsatisfiable status guarantee that there are bounded and unbounded directions.
Target solver: CVC4 Mathsat SPASS-IQ YICES Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "crafted")
(set-info :status sat)
(declare-fun x8_plus () Int)
(declare-fun x8_minus () Int)
(declare-fun x6_plus () Int)
(declare-fun x6_minus () Int)
(declare-fun x5_plus () Int)
(declare-fun x5_minus () Int)
(declare-fun x4_plus () Int)
(declare-fun x4_minus () Int)
(declare-fun x3_plus () Int)
(declare-fun x3_minus () Int)
(declare-fun x2_plus () Int)
(declare-fun x2_minus () Int)
(declare-fun x1_plus () Int)
(declare-fun x1_minus () Int)
(declare-fun x0_plus () Int)
(declare-fun x0_minus () Int)
(declare-fun x7_plus () Int)
(declare-fun x7_minus () Int)
(declare-fun x9_plus () Int)
(declare-fun x9_minus () Int)
(assert (>= x8_plus 0))
(assert (>= x8_minus 0))
(assert (>= x6_plus 0))
(assert (>= x6_minus 0))
(assert (>= x5_plus 0))
(assert (>= x5_minus 0))
(assert (>= x4_plus 0))
(assert (>= x4_minus 0))
(assert (>= x3_plus 0))
(assert (>= x3_minus 0))
(assert (>= x2_plus 0))
(assert (>= x2_minus 0))
(assert (>= x1_plus 0))
(assert (>= x1_minus 0))
(assert (>= x0_plus 0))
(assert (>= x0_minus 0))
(assert (>= x7_plus 0))
(assert (>= x7_minus 0))
(assert (>= x9_plus 0))
(assert (>= x9_minus 0))
(assert (<= (+ (* 19 x8_plus) (* (- 19) x8_minus) (* 10 x6_plus) (* (- 10) x6_minus) (* 24 x5_plus) (* (- 24) x5_minus) x4_plus (* (- 1) x4_minus) (* (- 1) x3_plus) x3_minus (* (- 3) x2_plus) (* 3 x2_minus) (* (- 26) x1_plus) (* 26 x1_minus) (* (- 12) x0_plus) (* 12 x0_minus) ) 14 ) )
(assert (<= (+ x8_plus (* (- 1) x8_minus) (* (- 29) x6_plus) (* 29 x6_minus) (* 12 x5_plus) (* (- 12) x5_minus) (* 25 x4_plus) (* (- 25) x4_minus) (* 16 x3_plus) (* (- 16) x3_minus) (* 35 x2_plus) (* (- 35) x2_minus) (* (- 37) x1_plus) (* 37 x1_minus) (* 15 x0_plus) (* (- 15) x0_minus) ) 26 ) )
(assert (<= (+ (* 43 x8_plus) (* (- 43) x8_minus) (* 2 x7_plus) (* (- 2) x7_minus) (* (- 6) x6_plus) (* 6 x6_minus) (* (- 15) x5_plus) (* 15 x5_minus) (* 2 x3_plus) (* (- 2) x3_minus) (* 38 x2_plus) (* (- 38) x2_minus) (* (- 15) x1_plus) (* 15 x1_minus) (* (- 6) x0_plus) (* 6 x0_minus) ) (- 17) ) )
(assert (<= (+ (* 21 x8_plus) (* (- 21) x8_minus) (* 2 x7_plus) (* (- 2) x7_minus) (* 4 x6_plus) (* (- 4) x6_minus) (* 37 x5_plus) (* (- 37) x5_minus) (* 33 x3_plus) (* (- 33) x3_minus) (* 32 x2_plus) (* (- 32) x2_minus) (* 24 x1_plus) (* (- 24) x1_minus) ) (- 35) ) )
(assert (<= (+ (* 13 x7_plus) (* (- 13) x7_minus) (* 4 x6_plus) (* (- 4) x6_minus) (* 9 x5_plus) (* (- 9) x5_minus) (* (- 35) x3_plus) (* 35 x3_minus) (* (- 4) x2_plus) (* 4 x2_minus) (* 32 x1_plus) (* (- 32) x1_minus) (* (- 10) x0_plus) (* 10 x0_minus) ) 0 ) )
(assert (<= (+ x9_plus (* (- 1) x9_minus) (* 4 x6_plus) (* (- 4) x6_minus) (* 36 x5_plus) (* (- 36) x5_minus) (* (- 36) x4_plus) (* 36 x4_minus) x3_plus (* (- 1) x3_minus) (* 31 x1_plus) (* (- 31) x1_minus) (* 33 x0_plus) (* (- 33) x0_minus) ) 33 ) )
(assert (<= (+ (* 22 x9_plus) (* (- 22) x9_minus) (* 34 x7_plus) (* (- 34) x7_minus) (* (- 6) x6_plus) (* 6 x6_minus) (* 23 x5_plus) (* (- 23) x5_minus) (* (- 40) x4_plus) (* 40 x4_minus) (* (- 6) x2_plus) (* 6 x2_minus) (* 35 x0_plus) (* (- 35) x0_minus) ) 24 ) )
(assert (<= (+ (* 31 x8_plus) (* (- 31) x8_minus) (* 85 x7_plus) (* (- 85) x7_minus) (* 22 x5_plus) (* (- 22) x5_minus) (* 14 x3_plus) (* (- 14) x3_minus) (* (- 17) x2_plus) (* 17 x2_minus) (* (- 10) x1_plus) (* 10 x1_minus) ) 37 ) )
(assert (<= (+ (* 26 x9_plus) (* (- 26) x9_minus) (* 3 x8_plus) (* (- 3) x8_minus) (* 12 x6_plus) (* (- 12) x6_minus) (* 36 x4_plus) (* (- 36) x4_minus) (* (- 8) x3_plus) (* 8 x3_minus) (* (- 29) x1_plus) (* 29 x1_minus) ) 29 ) )
(assert (<= (+ (* 14 x8_plus) (* (- 14) x8_minus) (* 36 x7_plus) (* (- 36) x7_minus) (* (- 7) x4_plus) (* 7 x4_minus) (* 35 x2_plus) (* (- 35) x2_minus) (* (- 10) x1_plus) (* 10 x1_minus) ) 23 ) )
(assert (<= (+ (* 30 x8_plus) (* (- 30) x8_minus) (* (- 29) x7_plus) (* 29 x7_minus) (* (- 21) x5_plus) (* 21 x5_minus) x4_plus (* (- 1) x4_minus) (* 11 x3_plus) (* (- 11) x3_minus) ) 36 ) )
(assert (<= (+ (* 21 x9_plus) (* (- 21) x9_minus) (* 14 x8_plus) (* (- 14) x8_minus) (* (- 28) x7_plus) (* 28 x7_minus) (* (- 29) x6_plus) (* 29 x6_minus) (* (- 43) x4_plus) (* 43 x4_minus) ) 31 ) )
(assert (<= (+ (* 52 x6_plus) (* (- 52) x6_minus) (* (- 16) x5_plus) (* 16 x5_minus) (* 11 x3_plus) (* (- 11) x3_minus) (* 77 x2_plus) (* (- 77) x2_minus) (* (- 36) x0_plus) (* 36 x0_minus) ) 27 ) )
(assert (<= (+ (* 47 x7_plus) (* (- 47) x7_minus) (* 39 x3_plus) (* (- 39) x3_minus) (* 55 x2_plus) (* (- 55) x2_minus) (* (- 30) x1_plus) (* 30 x1_minus) ) 18 ) )
(assert (>= (+ (* 5 x9_plus) (* (- 5) x9_minus) (* (- 11) x6_plus) (* 11 x6_minus) (* 25 x5_plus) (* (- 25) x5_minus) (* (- 21) x3_plus) (* 21 x3_minus) (* 36 x2_plus) (* (- 36) x2_minus) (* (- 6) x1_plus) (* 6 x1_minus) (* 36 x0_plus) (* (- 36) x0_minus) ) (- 39) ) )
(assert (>= (+ (* 5 x9_plus) (* (- 5) x9_minus) (* (- 36) x7_plus) (* 36 x7_minus) (* 6 x6_plus) (* (- 6) x6_minus) (* (- 37) x5_plus) (* 37 x5_minus) (* (- 24) x4_plus) (* 24 x4_minus) (* (- 23) x3_plus) (* 23 x3_minus) (* (- 19) x2_plus) (* 19 x2_minus) ) (- 10) ) )
(assert (>= (+ (* 28 x9_plus) (* (- 28) x9_minus) (* (- 25) x8_plus) (* 25 x8_minus) (* 22 x7_plus) (* (- 22) x7_minus) (* (- 17) x6_plus) (* 17 x6_minus) (* (- 6) x5_plus) (* 6 x5_minus) (* (- 21) x0_plus) (* 21 x0_minus) ) (- 23) ) )
(assert (>= (+ (* 11 x9_plus) (* (- 11) x9_minus) (* (- 32) x8_plus) (* 32 x8_minus) (* (- 53) x7_plus) (* 53 x7_minus) (* (- 16) x5_plus) (* 16 x5_minus) (* (- 29) x4_plus) (* 29 x4_minus) (* (- 30) x2_plus) (* 30 x2_minus) ) (- 38) ) )
(assert (>= (+ (* 9 x8_plus) (* (- 9) x8_minus) (* (- 1) x7_plus) x7_minus (* 17 x6_plus) (* (- 17) x6_minus) (* 22 x5_plus) (* (- 22) x5_minus) (* 17 x2_plus) (* (- 17) x2_minus) (* (- 32) x1_plus) (* 32 x1_minus) ) (- 37) ) )
(assert (>= (+ (* 12 x6_plus) (* (- 12) x6_minus) (* (- 4) x3_plus) (* 4 x3_minus) (* (- 21) x1_plus) (* 21 x1_minus) (* 3 x0_plus) (* (- 3) x0_minus) ) 17 ) )
(check-sat)
(exit)
