(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Generated by: Martin Bromberger
Generated on: 2018-01-06
Application: This is a problem with unbounded directions and, therefore, a good test for the termination/completeness of branch-and-bound solvers.
Publications: M. Bromberger. A Reduction from Unbounded Linear Mixed Arithmetic Problems into Bounded Problems. (Work in progress.)

The benchmarks in this class are based on the problems from SMT-LIB/QF_LIA/CAV_2009 and SMT-LIB/QF_LIA/cut_lemmas.
I just replaced all variables x with x_+ - x_-, where x_+ and x_- are two new variables such that x_+, x_- >= 0.
This transformation is equisatisfiable.
The new variables and an unsatisfiable status guarantee that there are bounded and unbounded directions.
Target solver: CVC4 Mathsat SPASS-IQ YICES Z3
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "crafted")
(set-info :status sat)
(declare-fun x8_plus () Int)
(declare-fun x8_minus () Int)
(declare-fun x6_plus () Int)
(declare-fun x6_minus () Int)
(declare-fun x5_plus () Int)
(declare-fun x5_minus () Int)
(declare-fun x4_plus () Int)
(declare-fun x4_minus () Int)
(declare-fun x3_plus () Int)
(declare-fun x3_minus () Int)
(declare-fun x2_plus () Int)
(declare-fun x2_minus () Int)
(declare-fun x1_plus () Int)
(declare-fun x1_minus () Int)
(declare-fun x0_plus () Int)
(declare-fun x0_minus () Int)
(declare-fun x9_plus () Int)
(declare-fun x9_minus () Int)
(declare-fun x7_plus () Int)
(declare-fun x7_minus () Int)
(assert (>= x8_plus 0))
(assert (>= x8_minus 0))
(assert (>= x6_plus 0))
(assert (>= x6_minus 0))
(assert (>= x5_plus 0))
(assert (>= x5_minus 0))
(assert (>= x4_plus 0))
(assert (>= x4_minus 0))
(assert (>= x3_plus 0))
(assert (>= x3_minus 0))
(assert (>= x2_plus 0))
(assert (>= x2_minus 0))
(assert (>= x1_plus 0))
(assert (>= x1_minus 0))
(assert (>= x0_plus 0))
(assert (>= x0_minus 0))
(assert (>= x9_plus 0))
(assert (>= x9_minus 0))
(assert (>= x7_plus 0))
(assert (>= x7_minus 0))
(assert (<= (+ (* 44 x8_plus) (* (- 44) x8_minus) (* (- 17) x6_plus) (* 17 x6_minus) (* 46 x5_plus) (* (- 46) x5_minus) (* 19 x4_plus) (* (- 19) x4_minus) (* 27 x3_plus) (* (- 27) x3_minus) (* 87 x2_plus) (* (- 87) x2_minus) (* 37 x1_plus) (* (- 37) x1_minus) (* (- 4) x0_plus) (* 4 x0_minus) ) 37 ) )
(assert (<= (+ (* 12 x9_plus) (* (- 12) x9_minus) (* (- 4) x8_plus) (* 4 x8_minus) (* (- 6) x7_plus) (* 6 x7_minus) (* (- 4) x6_plus) (* 4 x6_minus) (* 49 x4_plus) (* (- 49) x4_minus) (* (- 37) x3_plus) (* 37 x3_minus) (* (- 39) x2_plus) (* 39 x2_minus) (* 32 x1_plus) (* (- 32) x1_minus) ) (- 16) ) )
(assert (<= (+ (* 27 x9_plus) (* (- 27) x9_minus) (* 27 x8_plus) (* (- 27) x8_minus) (* 33 x7_plus) (* (- 33) x7_minus) (* (- 1) x4_plus) x4_minus (* (- 35) x3_plus) (* 35 x3_minus) (* 2 x2_plus) (* (- 2) x2_minus) (* 49 x0_plus) (* (- 49) x0_minus) ) (- 41) ) )
(assert (<= (+ (* 55 x9_plus) (* (- 55) x9_minus) (* 6 x8_plus) (* (- 6) x8_minus) (* 42 x7_plus) (* (- 42) x7_minus) (* 45 x6_plus) (* (- 45) x6_minus) (* (- 24) x3_plus) (* 24 x3_minus) (* 15 x2_plus) (* (- 15) x2_minus) (* (- 20) x1_plus) (* 20 x1_minus) ) 41 ) )
(assert (<= (+ (* 8 x9_plus) (* (- 8) x9_minus) (* 32 x7_plus) (* (- 32) x7_minus) (* 48 x6_plus) (* (- 48) x6_minus) (* 26 x5_plus) (* (- 26) x5_minus) (* (- 53) x3_plus) (* 53 x3_minus) (* 69 x1_plus) (* (- 69) x1_minus) (* 11 x0_plus) (* (- 11) x0_minus) ) 37 ) )
(assert (<= (+ (* 39 x8_plus) (* (- 39) x8_minus) (* (- 19) x7_plus) (* 19 x7_minus) (* (- 3) x5_plus) (* 3 x5_minus) (* 17 x4_plus) (* (- 17) x4_minus) (* 43 x2_plus) (* (- 43) x2_minus) (* 83 x1_plus) (* (- 83) x1_minus) (* (- 8) x0_plus) (* 8 x0_minus) ) (- 25) ) )
(assert (<= (+ (* 36 x9_plus) (* (- 36) x9_minus) (* 24 x7_plus) (* (- 24) x7_minus) (* (- 32) x6_plus) (* 32 x6_minus) (* 41 x5_plus) (* (- 41) x5_minus) (* 15 x2_plus) (* (- 15) x2_minus) (* 33 x1_plus) (* (- 33) x1_minus) (* 47 x0_plus) (* (- 47) x0_minus) ) (- 37) ) )
(assert (<= (+ (* 5 x8_plus) (* (- 5) x8_minus) (* (- 48) x7_plus) (* 48 x7_minus) (* (- 15) x6_plus) (* 15 x6_minus) (* (- 18) x5_plus) (* 18 x5_minus) (* 41 x4_plus) (* (- 41) x4_minus) (* 23 x2_plus) (* (- 23) x2_minus) (* (- 20) x1_plus) (* 20 x1_minus) ) (- 14) ) )
(assert (<= (+ (* 36 x7_plus) (* (- 36) x7_minus) (* 40 x5_plus) (* (- 40) x5_minus) (* (- 39) x4_plus) (* 39 x4_minus) (* 7 x3_plus) (* (- 7) x3_minus) (* 70 x2_plus) (* (- 70) x2_minus) (* 12 x1_plus) (* (- 12) x1_minus) ) 31 ) )
(assert (<= (+ (* 4 x9_plus) (* (- 4) x9_minus) (* 74 x8_plus) (* (- 74) x8_minus) (* (- 17) x7_plus) (* 17 x7_minus) (* 10 x5_plus) (* (- 10) x5_minus) (* (- 17) x2_plus) (* 17 x2_minus) (* 19 x0_plus) (* (- 19) x0_minus) ) 40 ) )
(assert (<= (+ (* 29 x9_plus) (* (- 29) x9_minus) (* (- 4) x8_plus) (* 4 x8_minus) (* (- 48) x3_plus) (* 48 x3_minus) (* (- 21) x2_plus) (* 21 x2_minus) (* 5 x1_plus) (* (- 5) x1_minus) (* 50 x0_plus) (* (- 50) x0_minus) ) (- 3) ) )
(assert (<= (+ (* 12 x9_plus) (* (- 12) x9_minus) (* (- 7) x8_plus) (* 7 x8_minus) (* (- 57) x7_plus) (* 57 x7_minus) (* 55 x6_plus) (* (- 55) x6_minus) (* (- 22) x3_plus) (* 22 x3_minus) (* (- 1) x2_plus) x2_minus ) (- 12) ) )
(assert (<= (+ (* 7 x8_plus) (* (- 7) x8_minus) (* 36 x7_plus) (* (- 36) x7_minus) (* 34 x4_plus) (* (- 34) x4_minus) (* 4 x3_plus) (* (- 4) x3_minus) (* (- 2) x2_plus) (* 2 x2_minus) (* (- 4) x0_plus) (* 4 x0_minus) ) (- 41) ) )
(assert (<= (+ (* 44 x8_plus) (* (- 44) x8_minus) (* (- 18) x7_plus) (* 18 x7_minus) (* (- 6) x6_plus) (* 6 x6_minus) (* 12 x4_plus) (* (- 12) x4_minus) (* 67 x3_plus) (* (- 67) x3_minus) (* (- 7) x1_plus) (* 7 x1_minus) ) 12 ) )
(assert (<= (+ (* 4 x9_plus) (* (- 4) x9_minus) (* 71 x8_plus) (* (- 71) x8_minus) (* (- 30) x1_plus) (* 30 x1_minus) (* 20 x0_plus) (* (- 20) x0_minus) ) 34 ) )
(assert (>= (+ (* 28 x9_plus) (* (- 28) x9_minus) (* 31 x8_plus) (* (- 31) x8_minus) (* (- 50) x7_plus) (* 50 x7_minus) (* 36 x6_plus) (* (- 36) x6_minus) (* (- 43) x4_plus) (* 43 x4_minus) (* (- 19) x2_plus) (* 19 x2_minus) (* 7 x1_plus) (* (- 7) x1_minus) (* (- 16) x0_plus) (* 16 x0_minus) ) 41 ) )
(assert (>= (+ (* 16 x8_plus) (* (- 16) x8_minus) (* (- 12) x7_plus) (* 12 x7_minus) (* (- 74) x6_plus) (* 74 x6_minus) (* (- 7) x5_plus) (* 7 x5_minus) (* 31 x1_plus) (* (- 31) x1_minus) (* (- 7) x0_plus) (* 7 x0_minus) ) (- 49) ) )
(assert (>= (+ (* 48 x9_plus) (* (- 48) x9_minus) (* (- 28) x6_plus) (* 28 x6_minus) (* (- 41) x4_plus) (* 41 x4_minus) (* (- 36) x2_plus) (* 36 x2_minus) (* (- 2) x1_plus) (* 2 x1_minus) (* 27 x0_plus) (* (- 27) x0_minus) ) 43 ) )
(assert (>= (+ (* 34 x8_plus) (* (- 34) x8_minus) (* 47 x7_plus) (* (- 47) x7_minus) (* 8 x5_plus) (* (- 8) x5_minus) (* (- 33) x3_plus) (* 33 x3_minus) (* 42 x2_plus) (* (- 42) x2_minus) (* (- 9) x0_plus) (* 9 x0_minus) ) (- 41) ) )
(assert (>= (+ (* 35 x9_plus) (* (- 35) x9_minus) (* 23 x8_plus) (* (- 23) x8_minus) (* (- 40) x7_plus) (* 40 x7_minus) (* (- 57) x3_plus) (* 57 x3_minus) (* 8 x0_plus) (* (- 8) x0_minus) ) (- 17) ) )
(check-sat)
(exit)
