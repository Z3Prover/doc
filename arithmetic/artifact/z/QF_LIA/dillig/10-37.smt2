(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun x2 () Int)
(declare-fun x3 () Int)
(declare-fun x4 () Int)
(declare-fun x5 () Int)
(declare-fun x6 () Int)
(declare-fun x7 () Int)
(declare-fun x8 () Int)
(declare-fun x9 () Int)
(assert (let ((?v_11 (* 0 x5)) (?v_17 (* 0 x6)) (?v_1 (* 1 x1)) (?v_3 (* 1 x7)) (?v_6 (* 0 x2)) (?v_8 (* 0 x4)) (?v_4 (* 0 x8)) (?v_10 (* 0 x0)) (?v_5 (* 0 x1)) (?v_19 (* 0 x9)) (?v_12 (* 2 x0)) (?v_20 (* 1 x3)) (?v_13 (* 1 x6)) (?v_16 (* 0 x3)) (?v_18 (* 2 x4)) (?v_23 (* 2 x6)) (?v_24 (* 1 x9))) (let ((?v_21 (+ ?v_4 ?v_19)) (?v_25 (* 1 x8)) (?v_0 (* (- 1) x0)) (?v_2 (* (- 1) x3)) (?v_9 (* (- 1) x2)) (?v_7 (* (- 1) x5)) (?v_14 (* (- 1) x6)) (?v_22 (* (- 1) x7)) (?v_15 (* (- 1) x8))) (and (<= (+ ?v_0 (+ ?v_11 (+ ?v_17 (+ ?v_1 (+ (* 1 x4) ?v_3))))) 1) (<= (+ ?v_0 (+ ?v_1 (+ ?v_6 (+ ?v_2 (+ ?v_8 (+ (* 1 x5) ?v_4)))))) (- 1)) (<= (+ ?v_9 (+ ?v_10 (+ ?v_5 (+ ?v_2 (+ ?v_3 ?v_4))))) 0) (<= (+ ?v_0 (+ (* (- 1) x1) (+ ?v_2 (+ (* 2 x5) ?v_19)))) 0) (<= (+ ?v_5 (+ ?v_6 (+ ?v_12 (+ ?v_2 (+ ?v_7 (+ ?v_14 (+ ?v_3 (* 2 x8)))))))) (- 1)) (<= (+ ?v_0 (+ ?v_7 (+ ?v_22 (+ ?v_6 (+ ?v_8 (+ ?v_20 (+ ?v_13 (+ (* (- 1) x9) ?v_4)))))))) 0) (<= (+ ?v_9 (+ ?v_10 (+ ?v_11 (+ ?v_1 ?v_15)))) 0) (<= (+ ?v_5 (+ (* 1 x2) (+ ?v_12 (+ ?v_16 (+ ?v_11 (+ ?v_13 ?v_18)))))) 1) (<= (+ ?v_0 (+ ?v_14 (+ ?v_1 (+ ?v_8 (+ ?v_3 ?v_15))))) (- 1)) (<= (+ ?v_5 (+ ?v_16 (+ ?v_8 (+ ?v_23 (+ ?v_3 (+ ?v_4 ?v_24)))))) 0) (<= (+ ?v_7 (+ ?v_16 (+ ?v_17 (+ ?v_18 ?v_21)))) (- 1)) (<= (+ ?v_10 (+ ?v_5 (+ ?v_17 (+ (* 0 x7) (+ ?v_20 ?v_21))))) 0) (<= (+ ?v_22 (+ ?v_8 (+ ?v_23 (+ ?v_19 ?v_25)))) (- 1)) (<= (+ ?v_10 (+ ?v_5 (+ ?v_8 (+ ?v_11 (+ ?v_20 (+ ?v_3 ?v_24)))))) 0) (<= (+ (* (- 2) x1) (+ ?v_10 (+ ?v_8 (+ ?v_25 ?v_24)))) 0)))))
(check-sat)
(exit)
