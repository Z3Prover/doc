(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
show equivalence of the following terms:
(((4 * v2 + 8 * v3) + (16 * v4 + 32 * v5)) + ((64 * v6 + 128 * v7) + (256 * v8 + (1 * v0 + 2 * v1))))

v0 + 2 * (v1 + 2 * (v2 + 2 * (v3 + 2 * (v4 + 2 * (v5 + 2 * (v6 + 2 * (v7 + 2 * (v8))))))))

in arithmetic modulo 2exp10
STATUS: unsat

generated by: Alberto Griggio <alberto.griggio@disi.unitn.it>
|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun v0 () Int)
(declare-fun v1 () Int)
(declare-fun v2 () Int)
(declare-fun v3 () Int)
(declare-fun v4 () Int)
(declare-fun v5 () Int)
(declare-fun v6 () Int)
(declare-fun v7 () Int)
(declare-fun v8 () Int)
(declare-fun o_0 () Int)
(declare-fun s_1 () Int)
(declare-fun s_2 () Int)
(declare-fun o_1 () Int)
(declare-fun s_3 () Int)
(declare-fun s_4 () Int)
(declare-fun o_2 () Int)
(declare-fun s_5 () Int)
(declare-fun s_6 () Int)
(declare-fun o_3 () Int)
(declare-fun s_7 () Int)
(declare-fun o_4 () Int)
(declare-fun o_5 () Int)
(declare-fun o_6 () Int)
(declare-fun o_7 () Int)
(declare-fun o_8 () Int)
(declare-fun o_9 () Int)
(declare-fun s_10 () Int)
(declare-fun o_10 () Int)
(declare-fun s_11 () Int)
(declare-fun o_11 () Int)
(declare-fun s_12 () Int)
(declare-fun o_12 () Int)
(declare-fun s_13 () Int)
(declare-fun o_13 () Int)
(declare-fun s_14 () Int)
(declare-fun o_14 () Int)
(declare-fun s_15 () Int)
(declare-fun o_15 () Int)
(assert (let ((?v_0 (* v8 2))) (let ((?v_2 (< ?v_0 1024)) (?v_3 (< ?v_0 2048))) (let ((?v_46 (+ (ite ?v_2 ?v_0 (ite ?v_3 (- ?v_0 1024) (- ?v_0 2048))) v7))) (let ((?v_47 (- ?v_46 (* o_8 1024))) (?v_56 (* v8 256))) (let ((?v_57 (- ?v_56 (* s_7 1024))) (?v_7 (* v1 2))) (let ((?v_76 (+ (ite (< ?v_7 1024) ?v_7 (ite (< ?v_7 2048) (- ?v_7 1024) (- ?v_7 2048))) v0))) (let ((?v_77 (- ?v_76 (* o_0 1024)))) (let ((?v_54 (+ ?v_57 ?v_77))) (let ((?v_55 (- ?v_54 (* o_4 1024))) (?v_60 (* v7 128))) (let ((?v_61 (- ?v_60 (* s_6 1024))) (?v_62 (* v6 64))) (let ((?v_63 (- ?v_62 (* s_5 1024)))) (let ((?v_58 (+ ?v_61 ?v_63))) (let ((?v_59 (- ?v_58 (* o_3 1024)))) (let ((?v_50 (+ ?v_55 ?v_59))) (let ((?v_51 (- ?v_50 (* o_6 1024))) (?v_66 (* v5 32))) (let ((?v_67 (- ?v_66 (* s_4 1024))) (?v_68 (* v4 16))) (let ((?v_69 (- ?v_68 (* s_3 1024)))) (let ((?v_64 (+ ?v_67 ?v_69))) (let ((?v_65 (- ?v_64 (* o_2 1024))) (?v_72 (* v3 8))) (let ((?v_73 (- ?v_72 (* s_2 1024))) (?v_74 (* v2 4))) (let ((?v_75 (- ?v_74 (* s_1 1024)))) (let ((?v_70 (+ ?v_73 ?v_75))) (let ((?v_71 (- ?v_70 (* o_1 1024)))) (let ((?v_52 (+ ?v_65 ?v_71))) (let ((?v_53 (- ?v_52 (* o_5 1024)))) (let ((?v_48 (+ ?v_51 ?v_53))) (let ((?v_49 (- ?v_48 (* o_7 1024))) (?v_1 (* 4 v8))) (let ((?v_5 (- (+ (ite ?v_2 ?v_1 (ite ?v_3 (- ?v_1 2048) (- ?v_1 4096))) (* 2 v7)) (* 2048 o_8)))) (let ((?v_12 (< ?v_5 1024)) (?v_14 (< ?v_5 2048))) (let ((?v_44 (+ (ite ?v_12 ?v_5 (ite ?v_14 (- ?v_5 1024) (- ?v_5 2048))) v6))) (let ((?v_45 (- ?v_44 (* o_9 1024))) (?v_38 (* 8 v8))) (let ((?v_39 (- (+ (ite ?v_2 ?v_38 (ite ?v_3 (- ?v_38 4096) (- ?v_38 8192))) (* 4 v7)) (* 4096 o_8)))) (let ((?v_42 (- (+ (ite ?v_12 ?v_39 (ite ?v_14 (- ?v_39 2048) (- ?v_39 4096))) (* 2 v6)) (* 2048 o_9)))) (let ((?v_43 (- ?v_42 (* s_10 1024)))) (let ((?v_40 (+ ?v_43 v5))) (let ((?v_41 (- ?v_40 (* o_10 1024))) (?v_32 (* 16 v8))) (let ((?v_33 (- (+ (ite ?v_2 ?v_32 (ite ?v_3 (- ?v_32 8192) (- ?v_32 16384))) (* 8 v7)) (* 8192 o_8)))) (let ((?v_36 (- (+ (- (- (+ (ite ?v_12 ?v_33 (ite ?v_14 (- ?v_33 4096) (- ?v_33 8192))) (* 4 v6)) (* 4096 o_9)) (* 2048 s_10)) (* 2 v5)) (* 2048 o_10)))) (let ((?v_37 (- ?v_36 (* s_11 1024)))) (let ((?v_34 (+ ?v_37 v4))) (let ((?v_35 (- ?v_34 (* o_11 1024))) (?v_26 (* 32 v8))) (let ((?v_27 (- (+ (ite ?v_2 ?v_26 (ite ?v_3 (- ?v_26 16384) (- ?v_26 32768))) (* 16 v7)) (* 16384 o_8)))) (let ((?v_30 (- (+ (- (- (+ (- (- (+ (ite ?v_12 ?v_27 (ite ?v_14 (- ?v_27 8192) (- ?v_27 16384))) (* 8 v6)) (* 8192 o_9)) (* 4096 s_10)) (* 4 v5)) (* 4096 o_10)) (* 2048 s_11)) (* 2 v4)) (* 2048 o_11)))) (let ((?v_31 (- ?v_30 (* s_12 1024)))) (let ((?v_28 (+ ?v_31 v3))) (let ((?v_29 (- ?v_28 (* o_12 1024))) (?v_20 (* 64 v8))) (let ((?v_21 (- (+ (ite ?v_2 ?v_20 (ite ?v_3 (- ?v_20 32768) (- ?v_20 65536))) (* 32 v7)) (* 32768 o_8)))) (let ((?v_24 (- (+ (- (- (+ (- (- (+ (- (- (+ (ite ?v_12 ?v_21 (ite ?v_14 (- ?v_21 16384) (- ?v_21 32768))) (* 16 v6)) (* 16384 o_9)) (* 8192 s_10)) (* 8 v5)) (* 8192 o_10)) (* 4096 s_11)) (* 4 v4)) (* 4096 o_11)) (* 2048 s_12)) (* 2 v3)) (* 2048 o_12)))) (let ((?v_25 (- ?v_24 (* s_13 1024)))) (let ((?v_22 (+ ?v_25 v2))) (let ((?v_23 (- ?v_22 (* o_13 1024))) (?v_13 (* 128 v8))) (let ((?v_15 (- (+ (ite ?v_2 ?v_13 (ite ?v_3 (- ?v_13 65536) (- ?v_13 131072))) (* 64 v7)) (* 65536 o_8)))) (let ((?v_18 (- (+ (- (- (+ (- (- (+ (- (- (+ (- (- (+ (ite ?v_12 ?v_15 (ite ?v_14 (- ?v_15 32768) (- ?v_15 65536))) (* 32 v6)) (* 32768 o_9)) (* 16384 s_10)) (* 16 v5)) (* 16384 o_10)) (* 8192 s_11)) (* 8 v4)) (* 8192 o_11)) (* 4096 s_12)) (* 4 v3)) (* 4096 o_12)) (* 2048 s_13)) (* 2 v2)) (* 2048 o_13)))) (let ((?v_19 (- ?v_18 (* s_14 1024)))) (let ((?v_16 (+ ?v_19 v1))) (let ((?v_17 (- ?v_16 (* o_14 1024))) (?v_4 (* 256 v8))) (let ((?v_6 (- (+ (ite ?v_2 ?v_4 (ite ?v_3 (- ?v_4 131072) (- ?v_4 262144))) (* 128 v7)) (* 131072 o_8)))) (let ((?v_10 (- (+ (- (- (+ (- (- (+ (- (- (+ (- (- (+ (- (- (+ (ite ?v_12 ?v_6 (ite ?v_14 (- ?v_6 65536) (- ?v_6 131072))) (* 64 v6)) (* 65536 o_9)) (* 32768 s_10)) (* 32 v5)) (* 32768 o_10)) (* 16384 s_11)) (* 16 v4)) (* 16384 o_11)) (* 8192 s_12)) (* 8 v3)) (* 8192 o_12)) (* 4096 s_13)) (* 4 v2)) (* 4096 o_13)) (* 2048 s_14)) (* 2 v1)) (* 2048 o_14)))) (let ((?v_11 (- ?v_10 (* s_15 1024)))) (let ((?v_8 (+ ?v_11 v0))) (let ((?v_9 (- ?v_8 (* o_15 1024)))) (and (not (= ?v_9 ?v_49)) (and (= (> ?v_8 1024) (= o_15 1)) (and (and (< ?v_9 1024) (<= 0 ?v_9)) (and (and (<= o_15 1) (<= 0 o_15)) (and (= (> ?v_10 1024) (>= s_15 1)) (and (and (< ?v_11 1024) (<= 0 ?v_11)) (and (and (< s_15 2) (<= 0 s_15)) (and (= (> ?v_16 1024) (= o_14 1)) (and (and (< ?v_17 1024) (<= 0 ?v_17)) (and (and (<= o_14 1) (<= 0 o_14)) (and (= (> ?v_18 1024) (>= s_14 1)) (and (and (< ?v_19 1024) (<= 0 ?v_19)) (and (and (< s_14 2) (<= 0 s_14)) (and (= (> ?v_22 1024) (= o_13 1)) (and (and (< ?v_23 1024) (<= 0 ?v_23)) (and (and (<= o_13 1) (<= 0 o_13)) (and (= (> ?v_24 1024) (>= s_13 1)) (and (and (< ?v_25 1024) (<= 0 ?v_25)) (and (and (< s_13 2) (<= 0 s_13)) (and (= (> ?v_28 1024) (= o_12 1)) (and (and (< ?v_29 1024) (<= 0 ?v_29)) (and (and (<= o_12 1) (<= 0 o_12)) (and (= (> ?v_30 1024) (>= s_12 1)) (and (and (< ?v_31 1024) (<= 0 ?v_31)) (and (and (< s_12 2) (<= 0 s_12)) (and (= (> ?v_34 1024) (= o_11 1)) (and (and (< ?v_35 1024) (<= 0 ?v_35)) (and (and (<= o_11 1) (<= 0 o_11)) (and (= (> ?v_36 1024) (>= s_11 1)) (and (and (< ?v_37 1024) (<= 0 ?v_37)) (and (and (< s_11 2) (<= 0 s_11)) (and (= (> ?v_40 1024) (= o_10 1)) (and (and (< ?v_41 1024) (<= 0 ?v_41)) (and (and (<= o_10 1) (<= 0 o_10)) (and (= (> ?v_42 1024) (>= s_10 1)) (and (and (< ?v_43 1024) (<= 0 ?v_43)) (and (and (< s_10 2) (<= 0 s_10)) (and (= (> ?v_44 1024) (= o_9 1)) (and (and (< ?v_45 1024) (<= 0 ?v_45)) (and (and (<= o_9 1) (<= 0 o_9)) (and (= (> ?v_46 1024) (= o_8 1)) (and (and (< ?v_47 1024) (<= 0 ?v_47)) (and (and (<= o_8 1) (<= 0 o_8)) (and (= (> ?v_48 1024) (= o_7 1)) (and (and (< ?v_49 1024) (<= 0 ?v_49)) (and (and (<= o_7 1) (<= 0 o_7)) (and (= (> ?v_50 1024) (= o_6 1)) (and (and (< ?v_51 1024) (<= 0 ?v_51)) (and (and (<= o_6 1) (<= 0 o_6)) (and (= (> ?v_52 1024) (= o_5 1)) (and (and (< ?v_53 1024) (<= 0 ?v_53)) (and (and (<= o_5 1) (<= 0 o_5)) (and (= (> ?v_54 1024) (= o_4 1)) (and (and (< ?v_55 1024) (<= 0 ?v_55)) (and (and (<= o_4 1) (<= 0 o_4)) (and (= (> ?v_56 1024) (>= s_7 1)) (and (and (< ?v_57 1024) (<= 0 ?v_57)) (and (and (< s_7 256) (<= 0 s_7)) (and (= (> ?v_58 1024) (= o_3 1)) (and (and (< ?v_59 1024) (<= 0 ?v_59)) (and (and (<= o_3 1) (<= 0 o_3)) (and (= (> ?v_60 1024) (>= s_6 1)) (and (and (< ?v_61 1024) (<= 0 ?v_61)) (and (and (< s_6 128) (<= 0 s_6)) (and (= (> ?v_62 1024) (>= s_5 1)) (and (and (< ?v_63 1024) (<= 0 ?v_63)) (and (and (< s_5 64) (<= 0 s_5)) (and (= (> ?v_64 1024) (= o_2 1)) (and (and (< ?v_65 1024) (<= 0 ?v_65)) (and (and (<= o_2 1) (<= 0 o_2)) (and (= (> ?v_66 1024) (>= s_4 1)) (and (and (< ?v_67 1024) (<= 0 ?v_67)) (and (and (< s_4 32) (<= 0 s_4)) (and (= (> ?v_68 1024) (>= s_3 1)) (and (and (< ?v_69 1024) (<= 0 ?v_69)) (and (and (< s_3 16) (<= 0 s_3)) (and (= (> ?v_70 1024) (= o_1 1)) (and (and (< ?v_71 1024) (<= 0 ?v_71)) (and (and (<= o_1 1) (<= 0 o_1)) (and (= (> ?v_72 1024) (>= s_2 1)) (and (and (< ?v_73 1024) (<= 0 ?v_73)) (and (and (< s_2 8) (<= 0 s_2)) (and (= (> ?v_74 1024) (>= s_1 1)) (and (and (< ?v_75 1024) (<= 0 ?v_75)) (and (and (< s_1 4) (<= 0 s_1)) (and (= (> ?v_76 1024) (= o_0 1)) (and (and (< ?v_77 1024) (<= 0 ?v_77)) (and (and (<= o_0 1) (<= 0 o_0)) (and (and (< v8 1024) (>= v8 0)) (and (and (< v7 1024) (>= v7 0)) (and (and (< v6 1024) (>= v6 0)) (and (and (< v5 1024) (>= v5 0)) (and (and (< v4 1024) (>= v4 0)) (and (and (< v3 1024) (>= v3 0)) (and (and (< v2 1024) (>= v2 0)) (and (and (< v1 1024) (>= v1 0)) (and (< v0 1024) (>= v0 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
