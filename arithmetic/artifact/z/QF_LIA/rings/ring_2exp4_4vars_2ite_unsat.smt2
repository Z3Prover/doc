(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
show equivalence of the following terms:
((1 * v0 + 2 * v1) + (4 * v2 + 8 * v3))

v0 + 2 * (v1 + 2 * (v2 + 2 * (v3)))

in arithmetic modulo 2exp4
STATUS: unsat

generated by: Alberto Griggio <alberto.griggio@disi.unitn.it>
|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun v0 () Int)
(declare-fun v1 () Int)
(declare-fun v2 () Int)
(declare-fun v3 () Int)
(declare-fun o_0 () Int)
(declare-fun s_1 () Int)
(declare-fun s_2 () Int)
(declare-fun o_1 () Int)
(declare-fun o_2 () Int)
(declare-fun o_3 () Int)
(declare-fun s_4 () Int)
(declare-fun o_4 () Int)
(declare-fun s_5 () Int)
(declare-fun o_5 () Int)
(assert (let ((?v_0 (* v3 2))) (let ((?v_7 (< ?v_0 16)) (?v_8 (< ?v_0 32))) (let ((?v_14 (+ (ite ?v_7 ?v_0 (ite ?v_8 (- ?v_0 16) (- ?v_0 32))) v2))) (let ((?v_15 (- ?v_14 (* o_3 16))) (?v_20 (* v3 8))) (let ((?v_21 (- ?v_20 (* s_2 16))) (?v_22 (* v2 4))) (let ((?v_23 (- ?v_22 (* s_1 16)))) (let ((?v_18 (+ ?v_21 ?v_23))) (let ((?v_19 (- ?v_18 (* o_1 16))) (?v_2 (* v1 2))) (let ((?v_24 (+ (ite (< ?v_2 16) ?v_2 (ite (< ?v_2 32) (- ?v_2 16) (- ?v_2 32))) v0))) (let ((?v_25 (- ?v_24 (* o_0 16)))) (let ((?v_16 (+ ?v_19 ?v_25))) (let ((?v_17 (- ?v_16 (* o_2 16))) (?v_9 (* 4 v3))) (let ((?v_12 (- (+ (ite ?v_7 ?v_9 (ite ?v_8 (- ?v_9 32) (- ?v_9 64))) (* 2 v2)) (* 32 o_3)))) (let ((?v_13 (- ?v_12 (* s_4 16)))) (let ((?v_10 (+ ?v_13 v1))) (let ((?v_11 (- ?v_10 (* o_4 16))) (?v_1 (* 8 v3))) (let ((?v_5 (- (+ (- (- (+ (ite ?v_7 ?v_1 (ite ?v_8 (- ?v_1 64) (- ?v_1 128))) (* 4 v2)) (* 64 o_3)) (* 32 s_4)) (* 2 v1)) (* 32 o_4)))) (let ((?v_6 (- ?v_5 (* s_5 16)))) (let ((?v_3 (+ ?v_6 v0))) (let ((?v_4 (- ?v_3 (* o_5 16)))) (and (not (= ?v_4 ?v_17)) (and (= (> ?v_3 16) (= o_5 1)) (and (and (< ?v_4 16) (<= 0 ?v_4)) (and (and (<= o_5 1) (<= 0 o_5)) (and (= (> ?v_5 16) (>= s_5 1)) (and (and (< ?v_6 16) (<= 0 ?v_6)) (and (and (< s_5 2) (<= 0 s_5)) (and (= (> ?v_10 16) (= o_4 1)) (and (and (< ?v_11 16) (<= 0 ?v_11)) (and (and (<= o_4 1) (<= 0 o_4)) (and (= (> ?v_12 16) (>= s_4 1)) (and (and (< ?v_13 16) (<= 0 ?v_13)) (and (and (< s_4 2) (<= 0 s_4)) (and (= (> ?v_14 16) (= o_3 1)) (and (and (< ?v_15 16) (<= 0 ?v_15)) (and (and (<= o_3 1) (<= 0 o_3)) (and (= (> ?v_16 16) (= o_2 1)) (and (and (< ?v_17 16) (<= 0 ?v_17)) (and (and (<= o_2 1) (<= 0 o_2)) (and (= (> ?v_18 16) (= o_1 1)) (and (and (< ?v_19 16) (<= 0 ?v_19)) (and (and (<= o_1 1) (<= 0 o_1)) (and (= (> ?v_20 16) (>= s_2 1)) (and (and (< ?v_21 16) (<= 0 ?v_21)) (and (and (< s_2 8) (<= 0 s_2)) (and (= (> ?v_22 16) (>= s_1 1)) (and (and (< ?v_23 16) (<= 0 ?v_23)) (and (and (< s_1 4) (<= 0 s_1)) (and (= (> ?v_24 16) (= o_0 1)) (and (and (< ?v_25 16) (<= 0 ?v_25)) (and (and (<= o_0 1) (<= 0 o_0)) (and (and (< v3 16) (>= v3 0)) (and (and (< v2 16) (>= v2 0)) (and (and (< v1 16) (>= v1 0)) (and (< v0 16) (>= v0 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
