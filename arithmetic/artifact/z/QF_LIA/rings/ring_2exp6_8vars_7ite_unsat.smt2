(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
show equivalence of the following terms:
(((1 * v0 + 2 * v1) + (4 * v2 + 8 * v3)) + ((16 * v4 + 32 * v5) + (64 * v6 + 128 * v7)))

v0 + 2 * (v1 + 2 * (v2 + 2 * (v3 + 2 * (v4 + 2 * (v5 + 2 * (v6 + 2 * (v7)))))))

in arithmetic modulo 2exp6
STATUS: unsat

generated by: Alberto Griggio <alberto.griggio@disi.unitn.it>
|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun v0 () Int)
(declare-fun v1 () Int)
(declare-fun v2 () Int)
(declare-fun v3 () Int)
(declare-fun v4 () Int)
(declare-fun v5 () Int)
(declare-fun v6 () Int)
(declare-fun v7 () Int)
(declare-fun o_0 () Int)
(declare-fun o_1 () Int)
(declare-fun s_3 () Int)
(declare-fun s_4 () Int)
(declare-fun o_2 () Int)
(declare-fun s_5 () Int)
(declare-fun s_6 () Int)
(declare-fun o_3 () Int)
(declare-fun o_4 () Int)
(declare-fun o_5 () Int)
(declare-fun o_6 () Int)
(declare-fun o_7 () Int)
(declare-fun o_8 () Int)
(declare-fun o_9 () Int)
(declare-fun o_10 () Int)
(declare-fun s_11 () Int)
(declare-fun o_11 () Int)
(declare-fun s_12 () Int)
(declare-fun o_12 () Int)
(declare-fun s_13 () Int)
(declare-fun o_13 () Int)
(assert (let ((?v_0 (* v7 2))) (let ((?v_2 (< ?v_0 64)) (?v_3 (< ?v_0 128))) (let ((?v_51 (+ (ite ?v_2 ?v_0 (ite ?v_3 (- ?v_0 64) (- ?v_0 128))) v6))) (let ((?v_52 (- ?v_51 (* o_7 64))) (?v_61 (* v7 128))) (let ((?v_62 (- ?v_61 (* s_6 64))) (?v_63 (* v6 64))) (let ((?v_64 (- ?v_63 (* s_5 64)))) (let ((?v_59 (+ ?v_62 ?v_64))) (let ((?v_60 (- ?v_59 (* o_3 64))) (?v_67 (* v5 32))) (let ((?v_68 (- ?v_67 (* s_4 64))) (?v_69 (* v4 16))) (let ((?v_70 (- ?v_69 (* s_3 64)))) (let ((?v_65 (+ ?v_68 ?v_70))) (let ((?v_66 (- ?v_65 (* o_2 64)))) (let ((?v_55 (+ ?v_60 ?v_66))) (let ((?v_56 (- ?v_55 (* o_5 64))) (?v_20 (* v3 8)) (?v_21 (* v2 4))) (let ((?v_71 (+ (ite (< ?v_20 64) ?v_20 (ite (< ?v_20 128) (- ?v_20 64) (ite (< ?v_20 192) (- ?v_20 128) (ite (< ?v_20 256) (- ?v_20 192) (ite (< ?v_20 320) (- ?v_20 256) (ite (< ?v_20 384) (- ?v_20 320) (ite (< ?v_20 448) (- ?v_20 384) (ite (< ?v_20 512) (- ?v_20 448) (- ?v_20 512))))))))) (ite (< ?v_21 64) ?v_21 (ite (< ?v_21 128) (- ?v_21 64) (ite (< ?v_21 192) (- ?v_21 128) (ite (< ?v_21 256) (- ?v_21 192) (- ?v_21 256)))))))) (let ((?v_72 (- ?v_71 (* o_1 64))) (?v_22 (* v1 2))) (let ((?v_73 (+ (ite (< ?v_22 64) ?v_22 (ite (< ?v_22 128) (- ?v_22 64) (- ?v_22 128))) v0))) (let ((?v_74 (- ?v_73 (* o_0 64)))) (let ((?v_57 (+ ?v_72 ?v_74))) (let ((?v_58 (- ?v_57 (* o_4 64)))) (let ((?v_53 (+ ?v_56 ?v_58))) (let ((?v_54 (- ?v_53 (* o_6 64))) (?v_1 (* 4 v7))) (let ((?v_5 (- (+ (ite ?v_2 ?v_1 (ite ?v_3 (- ?v_1 128) (- ?v_1 256))) (* 2 v6)) (* 128 o_7)))) (let ((?v_7 (< ?v_5 64)) (?v_9 (< ?v_5 128))) (let ((?v_49 (+ (ite ?v_7 ?v_5 (ite ?v_9 (- ?v_5 64) (- ?v_5 128))) v5))) (let ((?v_50 (- ?v_49 (* o_8 64))) (?v_4 (* 8 v7))) (let ((?v_6 (- (+ (ite ?v_2 ?v_4 (ite ?v_3 (- ?v_4 256) (- ?v_4 512))) (* 4 v6)) (* 256 o_7)))) (let ((?v_11 (- (+ (ite ?v_7 ?v_6 (ite ?v_9 (- ?v_6 128) (- ?v_6 256))) (* 2 v5)) (* 128 o_8)))) (let ((?v_13 (< ?v_11 64)) (?v_16 (< ?v_11 128))) (let ((?v_47 (+ (ite ?v_13 ?v_11 (ite ?v_16 (- ?v_11 64) (- ?v_11 128))) v4))) (let ((?v_48 (- ?v_47 (* o_9 64))) (?v_8 (* 16 v7))) (let ((?v_10 (- (+ (ite ?v_2 ?v_8 (ite ?v_3 (- ?v_8 512) (- ?v_8 1024))) (* 8 v6)) (* 512 o_7)))) (let ((?v_12 (- (+ (ite ?v_7 ?v_10 (ite ?v_9 (- ?v_10 256) (- ?v_10 512))) (* 4 v5)) (* 256 o_8)))) (let ((?v_18 (- (+ (ite ?v_13 ?v_12 (ite ?v_16 (- ?v_12 128) (- ?v_12 256))) (* 2 v4)) (* 128 o_9)))) (let ((?v_27 (< ?v_18 64)) (?v_31 (< ?v_18 128))) (let ((?v_45 (+ (ite ?v_27 ?v_18 (ite ?v_31 (- ?v_18 64) (- ?v_18 128))) v3))) (let ((?v_46 (- ?v_45 (* o_10 64))) (?v_37 (* 32 v7))) (let ((?v_38 (- (+ (ite ?v_2 ?v_37 (ite ?v_3 (- ?v_37 1024) (- ?v_37 2048))) (* 16 v6)) (* 1024 o_7)))) (let ((?v_39 (- (+ (ite ?v_7 ?v_38 (ite ?v_9 (- ?v_38 512) (- ?v_38 1024))) (* 8 v5)) (* 512 o_8)))) (let ((?v_40 (- (+ (ite ?v_13 ?v_39 (ite ?v_16 (- ?v_39 256) (- ?v_39 512))) (* 4 v4)) (* 256 o_9)))) (let ((?v_43 (- (+ (ite ?v_27 ?v_40 (ite ?v_31 (- ?v_40 128) (- ?v_40 256))) (* 2 v3)) (* 128 o_10)))) (let ((?v_44 (- ?v_43 (* s_11 64)))) (let ((?v_41 (+ ?v_44 v2))) (let ((?v_42 (- ?v_41 (* o_11 64))) (?v_28 (* 64 v7))) (let ((?v_29 (- (+ (ite ?v_2 ?v_28 (ite ?v_3 (- ?v_28 2048) (- ?v_28 4096))) (* 32 v6)) (* 2048 o_7)))) (let ((?v_30 (- (+ (ite ?v_7 ?v_29 (ite ?v_9 (- ?v_29 1024) (- ?v_29 2048))) (* 16 v5)) (* 1024 o_8)))) (let ((?v_32 (- (+ (ite ?v_13 ?v_30 (ite ?v_16 (- ?v_30 512) (- ?v_30 1024))) (* 8 v4)) (* 512 o_9)))) (let ((?v_35 (- (+ (- (- (+ (ite ?v_27 ?v_32 (ite ?v_31 (- ?v_32 256) (- ?v_32 512))) (* 4 v3)) (* 256 o_10)) (* 128 s_11)) (* 2 v2)) (* 128 o_11)))) (let ((?v_36 (- ?v_35 (* s_12 64)))) (let ((?v_33 (+ ?v_36 v1))) (let ((?v_34 (- ?v_33 (* o_12 64))) (?v_14 (* 128 v7))) (let ((?v_15 (- (+ (ite ?v_2 ?v_14 (ite ?v_3 (- ?v_14 4096) (- ?v_14 8192))) (* 64 v6)) (* 4096 o_7)))) (let ((?v_17 (- (+ (ite ?v_7 ?v_15 (ite ?v_9 (- ?v_15 2048) (- ?v_15 4096))) (* 32 v5)) (* 2048 o_8)))) (let ((?v_19 (- (+ (ite ?v_13 ?v_17 (ite ?v_16 (- ?v_17 1024) (- ?v_17 2048))) (* 16 v4)) (* 1024 o_9)))) (let ((?v_25 (- (+ (- (- (+ (- (- (+ (ite ?v_27 ?v_19 (ite ?v_31 (- ?v_19 512) (- ?v_19 1024))) (* 8 v3)) (* 512 o_10)) (* 256 s_11)) (* 4 v2)) (* 256 o_11)) (* 128 s_12)) (* 2 v1)) (* 128 o_12)))) (let ((?v_26 (- ?v_25 (* s_13 64)))) (let ((?v_23 (+ ?v_26 v0))) (let ((?v_24 (- ?v_23 (* o_13 64)))) (and (not (= ?v_24 ?v_54)) (and (= (> ?v_23 64) (= o_13 1)) (and (and (< ?v_24 64) (<= 0 ?v_24)) (and (and (<= o_13 1) (<= 0 o_13)) (and (= (> ?v_25 64) (>= s_13 1)) (and (and (< ?v_26 64) (<= 0 ?v_26)) (and (and (< s_13 2) (<= 0 s_13)) (and (= (> ?v_33 64) (= o_12 1)) (and (and (< ?v_34 64) (<= 0 ?v_34)) (and (and (<= o_12 1) (<= 0 o_12)) (and (= (> ?v_35 64) (>= s_12 1)) (and (and (< ?v_36 64) (<= 0 ?v_36)) (and (and (< s_12 2) (<= 0 s_12)) (and (= (> ?v_41 64) (= o_11 1)) (and (and (< ?v_42 64) (<= 0 ?v_42)) (and (and (<= o_11 1) (<= 0 o_11)) (and (= (> ?v_43 64) (>= s_11 1)) (and (and (< ?v_44 64) (<= 0 ?v_44)) (and (and (< s_11 2) (<= 0 s_11)) (and (= (> ?v_45 64) (= o_10 1)) (and (and (< ?v_46 64) (<= 0 ?v_46)) (and (and (<= o_10 1) (<= 0 o_10)) (and (= (> ?v_47 64) (= o_9 1)) (and (and (< ?v_48 64) (<= 0 ?v_48)) (and (and (<= o_9 1) (<= 0 o_9)) (and (= (> ?v_49 64) (= o_8 1)) (and (and (< ?v_50 64) (<= 0 ?v_50)) (and (and (<= o_8 1) (<= 0 o_8)) (and (= (> ?v_51 64) (= o_7 1)) (and (and (< ?v_52 64) (<= 0 ?v_52)) (and (and (<= o_7 1) (<= 0 o_7)) (and (= (> ?v_53 64) (= o_6 1)) (and (and (< ?v_54 64) (<= 0 ?v_54)) (and (and (<= o_6 1) (<= 0 o_6)) (and (= (> ?v_55 64) (= o_5 1)) (and (and (< ?v_56 64) (<= 0 ?v_56)) (and (and (<= o_5 1) (<= 0 o_5)) (and (= (> ?v_57 64) (= o_4 1)) (and (and (< ?v_58 64) (<= 0 ?v_58)) (and (and (<= o_4 1) (<= 0 o_4)) (and (= (> ?v_59 64) (= o_3 1)) (and (and (< ?v_60 64) (<= 0 ?v_60)) (and (and (<= o_3 1) (<= 0 o_3)) (and (= (> ?v_61 64) (>= s_6 1)) (and (and (< ?v_62 64) (<= 0 ?v_62)) (and (and (< s_6 128) (<= 0 s_6)) (and (= (> ?v_63 64) (>= s_5 1)) (and (and (< ?v_64 64) (<= 0 ?v_64)) (and (and (< s_5 64) (<= 0 s_5)) (and (= (> ?v_65 64) (= o_2 1)) (and (and (< ?v_66 64) (<= 0 ?v_66)) (and (and (<= o_2 1) (<= 0 o_2)) (and (= (> ?v_67 64) (>= s_4 1)) (and (and (< ?v_68 64) (<= 0 ?v_68)) (and (and (< s_4 32) (<= 0 s_4)) (and (= (> ?v_69 64) (>= s_3 1)) (and (and (< ?v_70 64) (<= 0 ?v_70)) (and (and (< s_3 16) (<= 0 s_3)) (and (= (> ?v_71 64) (= o_1 1)) (and (and (< ?v_72 64) (<= 0 ?v_72)) (and (and (<= o_1 1) (<= 0 o_1)) (and (= (> ?v_73 64) (= o_0 1)) (and (and (< ?v_74 64) (<= 0 ?v_74)) (and (and (<= o_0 1) (<= 0 o_0)) (and (and (< v7 64) (>= v7 0)) (and (and (< v6 64) (>= v6 0)) (and (and (< v5 64) (>= v5 0)) (and (and (< v4 64) (>= v4 0)) (and (and (< v3 64) (>= v3 0)) (and (and (< v2 64) (>= v2 0)) (and (and (< v1 64) (>= v1 0)) (and (< v0 64) (>= v0 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
