(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
show equivalence of the following terms:
((4 * v2 + 8 * v3) + (16 * v4 + (1 * v0 + 2 * v1)))

v0 + 2 * (v1 + 2 * (v2 + 2 * (v3 + 2 * (v4))))

in arithmetic modulo 2exp12
STATUS: unsat

generated by: Alberto Griggio <alberto.griggio@disi.unitn.it>
|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun v0 () Int)
(declare-fun v1 () Int)
(declare-fun v2 () Int)
(declare-fun v3 () Int)
(declare-fun v4 () Int)
(declare-fun o_0 () Int)
(declare-fun s_2 () Int)
(declare-fun o_1 () Int)
(declare-fun s_3 () Int)
(declare-fun o_2 () Int)
(declare-fun o_3 () Int)
(declare-fun o_4 () Int)
(declare-fun o_5 () Int)
(declare-fun s_6 () Int)
(declare-fun o_6 () Int)
(declare-fun s_7 () Int)
(declare-fun o_7 () Int)
(assert (let ((?v_0 (* v4 2))) (let ((?v_2 (< ?v_0 4096)) (?v_3 (< ?v_0 8192))) (let ((?v_23 (+ (ite ?v_2 ?v_0 (ite ?v_3 (- ?v_0 4096) (- ?v_0 8192))) v3))) (let ((?v_24 (- ?v_23 (* o_4 4096))) (?v_29 (* v4 16))) (let ((?v_30 (- ?v_29 (* s_3 4096))) (?v_7 (* v1 2))) (let ((?v_35 (+ (ite (< ?v_7 4096) ?v_7 (ite (< ?v_7 8192) (- ?v_7 4096) (- ?v_7 8192))) v0))) (let ((?v_36 (- ?v_35 (* o_0 4096)))) (let ((?v_27 (+ ?v_30 ?v_36))) (let ((?v_28 (- ?v_27 (* o_2 4096))) (?v_33 (* v3 8))) (let ((?v_34 (- ?v_33 (* s_2 4096))) (?v_8 (* v2 4))) (let ((?v_31 (+ ?v_34 (ite (< ?v_8 4096) ?v_8 (ite (< ?v_8 8192) (- ?v_8 4096) (ite (< ?v_8 12288) (- ?v_8 8192) (ite (< ?v_8 16384) (- ?v_8 12288) (- ?v_8 16384)))))))) (let ((?v_32 (- ?v_31 (* o_1 4096)))) (let ((?v_25 (+ ?v_28 ?v_32))) (let ((?v_26 (- ?v_25 (* o_3 4096))) (?v_1 (* 4 v4))) (let ((?v_5 (- (+ (ite ?v_2 ?v_1 (ite ?v_3 (- ?v_1 8192) (- ?v_1 16384))) (* 2 v3)) (* 8192 o_4)))) (let ((?v_13 (< ?v_5 4096)) (?v_15 (< ?v_5 8192))) (let ((?v_21 (+ (ite ?v_13 ?v_5 (ite ?v_15 (- ?v_5 4096) (- ?v_5 8192))) v2))) (let ((?v_22 (- ?v_21 (* o_5 4096))) (?v_14 (* 8 v4))) (let ((?v_16 (- (+ (ite ?v_2 ?v_14 (ite ?v_3 (- ?v_14 16384) (- ?v_14 32768))) (* 4 v3)) (* 16384 o_4)))) (let ((?v_19 (- (+ (ite ?v_13 ?v_16 (ite ?v_15 (- ?v_16 8192) (- ?v_16 16384))) (* 2 v2)) (* 8192 o_5)))) (let ((?v_20 (- ?v_19 (* s_6 4096)))) (let ((?v_17 (+ ?v_20 v1))) (let ((?v_18 (- ?v_17 (* o_6 4096))) (?v_4 (* 16 v4))) (let ((?v_6 (- (+ (ite ?v_2 ?v_4 (ite ?v_3 (- ?v_4 32768) (- ?v_4 65536))) (* 8 v3)) (* 32768 o_4)))) (let ((?v_11 (- (+ (- (- (+ (ite ?v_13 ?v_6 (ite ?v_15 (- ?v_6 16384) (- ?v_6 32768))) (* 4 v2)) (* 16384 o_5)) (* 8192 s_6)) (* 2 v1)) (* 8192 o_6)))) (let ((?v_12 (- ?v_11 (* s_7 4096)))) (let ((?v_9 (+ ?v_12 v0))) (let ((?v_10 (- ?v_9 (* o_7 4096)))) (and (not (= ?v_10 ?v_26)) (and (= (> ?v_9 4096) (= o_7 1)) (and (and (< ?v_10 4096) (<= 0 ?v_10)) (and (and (<= o_7 1) (<= 0 o_7)) (and (= (> ?v_11 4096) (>= s_7 1)) (and (and (< ?v_12 4096) (<= 0 ?v_12)) (and (and (< s_7 2) (<= 0 s_7)) (and (= (> ?v_17 4096) (= o_6 1)) (and (and (< ?v_18 4096) (<= 0 ?v_18)) (and (and (<= o_6 1) (<= 0 o_6)) (and (= (> ?v_19 4096) (>= s_6 1)) (and (and (< ?v_20 4096) (<= 0 ?v_20)) (and (and (< s_6 2) (<= 0 s_6)) (and (= (> ?v_21 4096) (= o_5 1)) (and (and (< ?v_22 4096) (<= 0 ?v_22)) (and (and (<= o_5 1) (<= 0 o_5)) (and (= (> ?v_23 4096) (= o_4 1)) (and (and (< ?v_24 4096) (<= 0 ?v_24)) (and (and (<= o_4 1) (<= 0 o_4)) (and (= (> ?v_25 4096) (= o_3 1)) (and (and (< ?v_26 4096) (<= 0 ?v_26)) (and (and (<= o_3 1) (<= 0 o_3)) (and (= (> ?v_27 4096) (= o_2 1)) (and (and (< ?v_28 4096) (<= 0 ?v_28)) (and (and (<= o_2 1) (<= 0 o_2)) (and (= (> ?v_29 4096) (>= s_3 1)) (and (and (< ?v_30 4096) (<= 0 ?v_30)) (and (and (< s_3 16) (<= 0 s_3)) (and (= (> ?v_31 4096) (= o_1 1)) (and (and (< ?v_32 4096) (<= 0 ?v_32)) (and (and (<= o_1 1) (<= 0 o_1)) (and (= (> ?v_33 4096) (>= s_2 1)) (and (and (< ?v_34 4096) (<= 0 ?v_34)) (and (and (< s_2 8) (<= 0 s_2)) (and (= (> ?v_35 4096) (= o_0 1)) (and (and (< ?v_36 4096) (<= 0 ?v_36)) (and (and (<= o_0 1) (<= 0 o_0)) (and (and (< v4 4096) (>= v4 0)) (and (and (< v3 4096) (>= v3 0)) (and (and (< v2 4096) (>= v2 0)) (and (and (< v1 4096) (>= v1 0)) (and (< v0 4096) (>= v0 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
