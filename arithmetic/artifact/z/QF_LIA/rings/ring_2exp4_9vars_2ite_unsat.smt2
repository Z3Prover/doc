(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
show equivalence of the following terms:
(((4 * v2 + 8 * v3) + (16 * v4 + 32 * v5)) + ((64 * v6 + 128 * v7) + (256 * v8 + (1 * v0 + 2 * v1))))

v0 + 2 * (v1 + 2 * (v2 + 2 * (v3 + 2 * (v4 + 2 * (v5 + 2 * (v6 + 2 * (v7 + 2 * (v8))))))))

in arithmetic modulo 2exp4
STATUS: unsat

generated by: Alberto Griggio <alberto.griggio@disi.unitn.it>
|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun v0 () Int)
(declare-fun v1 () Int)
(declare-fun v2 () Int)
(declare-fun v3 () Int)
(declare-fun v4 () Int)
(declare-fun v5 () Int)
(declare-fun v6 () Int)
(declare-fun v7 () Int)
(declare-fun v8 () Int)
(declare-fun o_0 () Int)
(declare-fun s_1 () Int)
(declare-fun s_2 () Int)
(declare-fun o_1 () Int)
(declare-fun s_3 () Int)
(declare-fun s_4 () Int)
(declare-fun o_2 () Int)
(declare-fun s_5 () Int)
(declare-fun s_6 () Int)
(declare-fun o_3 () Int)
(declare-fun s_7 () Int)
(declare-fun o_4 () Int)
(declare-fun o_5 () Int)
(declare-fun o_6 () Int)
(declare-fun o_7 () Int)
(declare-fun o_8 () Int)
(declare-fun s_9 () Int)
(declare-fun o_9 () Int)
(declare-fun s_10 () Int)
(declare-fun o_10 () Int)
(declare-fun s_11 () Int)
(declare-fun o_11 () Int)
(declare-fun s_12 () Int)
(declare-fun o_12 () Int)
(declare-fun s_13 () Int)
(declare-fun o_13 () Int)
(declare-fun s_14 () Int)
(declare-fun o_14 () Int)
(declare-fun s_15 () Int)
(declare-fun o_15 () Int)
(assert (let ((?v_0 (* v8 2))) (let ((?v_7 (< ?v_0 16)) (?v_8 (< ?v_0 32))) (let ((?v_39 (+ (ite ?v_7 ?v_0 (ite ?v_8 (- ?v_0 16) (- ?v_0 32))) v7))) (let ((?v_40 (- ?v_39 (* o_8 16))) (?v_49 (* v8 256))) (let ((?v_50 (- ?v_49 (* s_7 16))) (?v_2 (* v1 2))) (let ((?v_69 (+ (ite (< ?v_2 16) ?v_2 (ite (< ?v_2 32) (- ?v_2 16) (- ?v_2 32))) v0))) (let ((?v_70 (- ?v_69 (* o_0 16)))) (let ((?v_47 (+ ?v_50 ?v_70))) (let ((?v_48 (- ?v_47 (* o_4 16))) (?v_53 (* v7 128))) (let ((?v_54 (- ?v_53 (* s_6 16))) (?v_55 (* v6 64))) (let ((?v_56 (- ?v_55 (* s_5 16)))) (let ((?v_51 (+ ?v_54 ?v_56))) (let ((?v_52 (- ?v_51 (* o_3 16)))) (let ((?v_43 (+ ?v_48 ?v_52))) (let ((?v_44 (- ?v_43 (* o_6 16))) (?v_59 (* v5 32))) (let ((?v_60 (- ?v_59 (* s_4 16))) (?v_61 (* v4 16))) (let ((?v_62 (- ?v_61 (* s_3 16)))) (let ((?v_57 (+ ?v_60 ?v_62))) (let ((?v_58 (- ?v_57 (* o_2 16))) (?v_65 (* v3 8))) (let ((?v_66 (- ?v_65 (* s_2 16))) (?v_67 (* v2 4))) (let ((?v_68 (- ?v_67 (* s_1 16)))) (let ((?v_63 (+ ?v_66 ?v_68))) (let ((?v_64 (- ?v_63 (* o_1 16)))) (let ((?v_45 (+ ?v_58 ?v_64))) (let ((?v_46 (- ?v_45 (* o_5 16)))) (let ((?v_41 (+ ?v_44 ?v_46))) (let ((?v_42 (- ?v_41 (* o_7 16))) (?v_34 (* 4 v8))) (let ((?v_37 (- (+ (ite ?v_7 ?v_34 (ite ?v_8 (- ?v_34 32) (- ?v_34 64))) (* 2 v7)) (* 32 o_8)))) (let ((?v_38 (- ?v_37 (* s_9 16)))) (let ((?v_35 (+ ?v_38 v6))) (let ((?v_36 (- ?v_35 (* o_9 16))) (?v_29 (* 8 v8))) (let ((?v_32 (- (+ (- (- (+ (ite ?v_7 ?v_29 (ite ?v_8 (- ?v_29 64) (- ?v_29 128))) (* 4 v7)) (* 64 o_8)) (* 32 s_9)) (* 2 v6)) (* 32 o_9)))) (let ((?v_33 (- ?v_32 (* s_10 16)))) (let ((?v_30 (+ ?v_33 v5))) (let ((?v_31 (- ?v_30 (* o_10 16))) (?v_24 (* 16 v8))) (let ((?v_27 (- (+ (- (- (+ (- (- (+ (ite ?v_7 ?v_24 (ite ?v_8 (- ?v_24 128) (- ?v_24 256))) (* 8 v7)) (* 128 o_8)) (* 64 s_9)) (* 4 v6)) (* 64 o_9)) (* 32 s_10)) (* 2 v5)) (* 32 o_10)))) (let ((?v_28 (- ?v_27 (* s_11 16)))) (let ((?v_25 (+ ?v_28 v4))) (let ((?v_26 (- ?v_25 (* o_11 16))) (?v_19 (* 32 v8))) (let ((?v_22 (- (+ (- (- (+ (- (- (+ (- (- (+ (ite ?v_7 ?v_19 (ite ?v_8 (- ?v_19 256) (- ?v_19 512))) (* 16 v7)) (* 256 o_8)) (* 128 s_9)) (* 8 v6)) (* 128 o_9)) (* 64 s_10)) (* 4 v5)) (* 64 o_10)) (* 32 s_11)) (* 2 v4)) (* 32 o_11)))) (let ((?v_23 (- ?v_22 (* s_12 16)))) (let ((?v_20 (+ ?v_23 v3))) (let ((?v_21 (- ?v_20 (* o_12 16))) (?v_14 (* 64 v8))) (let ((?v_17 (- (+ (- (- (+ (- (- (+ (- (- (+ (- (- (+ (ite ?v_7 ?v_14 (ite ?v_8 (- ?v_14 512) (- ?v_14 1024))) (* 32 v7)) (* 512 o_8)) (* 256 s_9)) (* 16 v6)) (* 256 o_9)) (* 128 s_10)) (* 8 v5)) (* 128 o_10)) (* 64 s_11)) (* 4 v4)) (* 64 o_11)) (* 32 s_12)) (* 2 v3)) (* 32 o_12)))) (let ((?v_18 (- ?v_17 (* s_13 16)))) (let ((?v_15 (+ ?v_18 v2))) (let ((?v_16 (- ?v_15 (* o_13 16))) (?v_9 (* 128 v8))) (let ((?v_12 (- (+ (- (- (+ (- (- (+ (- (- (+ (- (- (+ (- (- (+ (ite ?v_7 ?v_9 (ite ?v_8 (- ?v_9 1024) (- ?v_9 2048))) (* 64 v7)) (* 1024 o_8)) (* 512 s_9)) (* 32 v6)) (* 512 o_9)) (* 256 s_10)) (* 16 v5)) (* 256 o_10)) (* 128 s_11)) (* 8 v4)) (* 128 o_11)) (* 64 s_12)) (* 4 v3)) (* 64 o_12)) (* 32 s_13)) (* 2 v2)) (* 32 o_13)))) (let ((?v_13 (- ?v_12 (* s_14 16)))) (let ((?v_10 (+ ?v_13 v1))) (let ((?v_11 (- ?v_10 (* o_14 16))) (?v_1 (* 256 v8))) (let ((?v_5 (- (+ (- (- (+ (- (- (+ (- (- (+ (- (- (+ (- (- (+ (- (- (+ (ite ?v_7 ?v_1 (ite ?v_8 (- ?v_1 2048) (- ?v_1 4096))) (* 128 v7)) (* 2048 o_8)) (* 1024 s_9)) (* 64 v6)) (* 1024 o_9)) (* 512 s_10)) (* 32 v5)) (* 512 o_10)) (* 256 s_11)) (* 16 v4)) (* 256 o_11)) (* 128 s_12)) (* 8 v3)) (* 128 o_12)) (* 64 s_13)) (* 4 v2)) (* 64 o_13)) (* 32 s_14)) (* 2 v1)) (* 32 o_14)))) (let ((?v_6 (- ?v_5 (* s_15 16)))) (let ((?v_3 (+ ?v_6 v0))) (let ((?v_4 (- ?v_3 (* o_15 16)))) (and (not (= ?v_4 ?v_42)) (and (= (> ?v_3 16) (= o_15 1)) (and (and (< ?v_4 16) (<= 0 ?v_4)) (and (and (<= o_15 1) (<= 0 o_15)) (and (= (> ?v_5 16) (>= s_15 1)) (and (and (< ?v_6 16) (<= 0 ?v_6)) (and (and (< s_15 2) (<= 0 s_15)) (and (= (> ?v_10 16) (= o_14 1)) (and (and (< ?v_11 16) (<= 0 ?v_11)) (and (and (<= o_14 1) (<= 0 o_14)) (and (= (> ?v_12 16) (>= s_14 1)) (and (and (< ?v_13 16) (<= 0 ?v_13)) (and (and (< s_14 2) (<= 0 s_14)) (and (= (> ?v_15 16) (= o_13 1)) (and (and (< ?v_16 16) (<= 0 ?v_16)) (and (and (<= o_13 1) (<= 0 o_13)) (and (= (> ?v_17 16) (>= s_13 1)) (and (and (< ?v_18 16) (<= 0 ?v_18)) (and (and (< s_13 2) (<= 0 s_13)) (and (= (> ?v_20 16) (= o_12 1)) (and (and (< ?v_21 16) (<= 0 ?v_21)) (and (and (<= o_12 1) (<= 0 o_12)) (and (= (> ?v_22 16) (>= s_12 1)) (and (and (< ?v_23 16) (<= 0 ?v_23)) (and (and (< s_12 2) (<= 0 s_12)) (and (= (> ?v_25 16) (= o_11 1)) (and (and (< ?v_26 16) (<= 0 ?v_26)) (and (and (<= o_11 1) (<= 0 o_11)) (and (= (> ?v_27 16) (>= s_11 1)) (and (and (< ?v_28 16) (<= 0 ?v_28)) (and (and (< s_11 2) (<= 0 s_11)) (and (= (> ?v_30 16) (= o_10 1)) (and (and (< ?v_31 16) (<= 0 ?v_31)) (and (and (<= o_10 1) (<= 0 o_10)) (and (= (> ?v_32 16) (>= s_10 1)) (and (and (< ?v_33 16) (<= 0 ?v_33)) (and (and (< s_10 2) (<= 0 s_10)) (and (= (> ?v_35 16) (= o_9 1)) (and (and (< ?v_36 16) (<= 0 ?v_36)) (and (and (<= o_9 1) (<= 0 o_9)) (and (= (> ?v_37 16) (>= s_9 1)) (and (and (< ?v_38 16) (<= 0 ?v_38)) (and (and (< s_9 2) (<= 0 s_9)) (and (= (> ?v_39 16) (= o_8 1)) (and (and (< ?v_40 16) (<= 0 ?v_40)) (and (and (<= o_8 1) (<= 0 o_8)) (and (= (> ?v_41 16) (= o_7 1)) (and (and (< ?v_42 16) (<= 0 ?v_42)) (and (and (<= o_7 1) (<= 0 o_7)) (and (= (> ?v_43 16) (= o_6 1)) (and (and (< ?v_44 16) (<= 0 ?v_44)) (and (and (<= o_6 1) (<= 0 o_6)) (and (= (> ?v_45 16) (= o_5 1)) (and (and (< ?v_46 16) (<= 0 ?v_46)) (and (and (<= o_5 1) (<= 0 o_5)) (and (= (> ?v_47 16) (= o_4 1)) (and (and (< ?v_48 16) (<= 0 ?v_48)) (and (and (<= o_4 1) (<= 0 o_4)) (and (= (> ?v_49 16) (>= s_7 1)) (and (and (< ?v_50 16) (<= 0 ?v_50)) (and (and (< s_7 256) (<= 0 s_7)) (and (= (> ?v_51 16) (= o_3 1)) (and (and (< ?v_52 16) (<= 0 ?v_52)) (and (and (<= o_3 1) (<= 0 o_3)) (and (= (> ?v_53 16) (>= s_6 1)) (and (and (< ?v_54 16) (<= 0 ?v_54)) (and (and (< s_6 128) (<= 0 s_6)) (and (= (> ?v_55 16) (>= s_5 1)) (and (and (< ?v_56 16) (<= 0 ?v_56)) (and (and (< s_5 64) (<= 0 s_5)) (and (= (> ?v_57 16) (= o_2 1)) (and (and (< ?v_58 16) (<= 0 ?v_58)) (and (and (<= o_2 1) (<= 0 o_2)) (and (= (> ?v_59 16) (>= s_4 1)) (and (and (< ?v_60 16) (<= 0 ?v_60)) (and (and (< s_4 32) (<= 0 s_4)) (and (= (> ?v_61 16) (>= s_3 1)) (and (and (< ?v_62 16) (<= 0 ?v_62)) (and (and (< s_3 16) (<= 0 s_3)) (and (= (> ?v_63 16) (= o_1 1)) (and (and (< ?v_64 16) (<= 0 ?v_64)) (and (and (<= o_1 1) (<= 0 o_1)) (and (= (> ?v_65 16) (>= s_2 1)) (and (and (< ?v_66 16) (<= 0 ?v_66)) (and (and (< s_2 8) (<= 0 s_2)) (and (= (> ?v_67 16) (>= s_1 1)) (and (and (< ?v_68 16) (<= 0 ?v_68)) (and (and (< s_1 4) (<= 0 s_1)) (and (= (> ?v_69 16) (= o_0 1)) (and (and (< ?v_70 16) (<= 0 ?v_70)) (and (and (<= o_0 1) (<= 0 o_0)) (and (and (< v8 16) (>= v8 0)) (and (and (< v7 16) (>= v7 0)) (and (and (< v6 16) (>= v6 0)) (and (and (< v5 16) (>= v5 0)) (and (and (< v4 16) (>= v4 0)) (and (and (< v3 16) (>= v3 0)) (and (and (< v2 16) (>= v2 0)) (and (and (< v1 16) (>= v1 0)) (and (< v0 16) (>= v0 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
