(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun P_2 () Int)
(declare-fun P_3 () Int)
(declare-fun P_4 () Int)
(declare-fun P_5 () Int)
(declare-fun P_6 () Int)
(declare-fun P_7 () Int)
(declare-fun P_8 () Int)
(declare-fun P_9 () Int)
(declare-fun P_10 () Int)
(declare-fun P_11 () Int)
(declare-fun P_12 () Int)
(declare-fun P_13 () Int)
(declare-fun P_14 () Int)
(declare-fun P_15 () Int)
(declare-fun P_16 () Int)
(declare-fun P_17 () Int)
(declare-fun P_18 () Int)
(declare-fun P_19 () Int)
(declare-fun P_20 () Int)
(declare-fun P_21 () Int)
(declare-fun P_22 () Int)
(declare-fun P_23 () Int)
(declare-fun P_24 () Int)
(declare-fun P_25 () Int)
(declare-fun P_26 () Int)
(declare-fun P_27 () Int)
(declare-fun P_28 () Int)
(declare-fun P_29 () Int)
(declare-fun P_30 () Int)
(declare-fun P_31 () Int)
(declare-fun P_32 () Int)
(declare-fun P_33 () Int)
(declare-fun P_34 () Int)
(declare-fun P_35 () Int)
(declare-fun P_36 () Int)
(declare-fun P_37 () Int)
(declare-fun P_38 () Int)
(declare-fun P_39 () Int)
(declare-fun P_40 () Int)
(declare-fun P_41 () Int)
(declare-fun P_42 () Int)
(declare-fun P_43 () Int)
(declare-fun P_44 () Int)
(declare-fun P_45 () Int)
(declare-fun P_46 () Int)
(declare-fun P_47 () Int)
(declare-fun P_48 () Int)
(declare-fun P_49 () Int)
(declare-fun P_50 () Int)
(declare-fun P_51 () Int)
(declare-fun P_52 () Int)
(declare-fun P_53 () Int)
(declare-fun P_54 () Int)
(declare-fun P_55 () Int)
(declare-fun P_56 () Int)
(declare-fun P_57 () Int)
(declare-fun P_58 () Int)
(declare-fun P_59 () Int)
(declare-fun P_60 () Int)
(declare-fun P_61 () Int)
(declare-fun P_62 () Int)
(declare-fun P_63 () Int)
(declare-fun P_64 () Int)
(declare-fun P_65 () Int)
(declare-fun P_66 () Int)
(declare-fun P_67 () Int)
(declare-fun P_68 () Int)
(declare-fun P_69 () Int)
(declare-fun P_70 () Int)
(declare-fun P_71 () Int)
(declare-fun P_72 () Int)
(declare-fun P_73 () Int)
(assert (<= 0 P_2))
(assert (<= P_2 15))
(assert (<= 0 P_3))
(assert (<= P_3 15))
(assert (<= 0 P_4))
(assert (<= P_4 15))
(assert (<= 0 P_5))
(assert (<= P_5 15))
(assert (<= 0 P_6))
(assert (<= P_6 15))
(assert (<= 0 P_7))
(assert (<= P_7 15))
(assert (<= 0 P_8))
(assert (<= P_8 15))
(assert (<= 0 P_9))
(assert (<= P_9 15))
(assert (<= 0 P_10))
(assert (<= P_10 15))
(assert (<= 0 P_11))
(assert (<= P_11 15))
(assert (<= 0 P_12))
(assert (<= P_12 15))
(assert (<= 0 P_13))
(assert (<= P_13 15))
(assert (<= 0 P_14))
(assert (<= P_14 15))
(assert (<= 0 P_15))
(assert (<= P_15 15))
(assert (<= 0 P_16))
(assert (<= P_16 15))
(assert (<= 0 P_17))
(assert (<= P_17 15))
(assert (<= 0 P_18))
(assert (<= P_18 15))
(assert (<= 0 P_19))
(assert (<= P_19 15))
(assert (<= 0 P_20))
(assert (<= P_20 15))
(assert (<= 0 P_21))
(assert (<= P_21 15))
(assert (<= 0 P_22))
(assert (<= P_22 15))
(assert (<= 0 P_23))
(assert (<= P_23 15))
(assert (<= 0 P_24))
(assert (<= P_24 15))
(assert (<= 0 P_25))
(assert (<= P_25 15))
(assert (<= 0 P_26))
(assert (<= P_26 15))
(assert (<= 0 P_27))
(assert (<= P_27 15))
(assert (<= 0 P_28))
(assert (<= P_28 15))
(assert (<= 0 P_29))
(assert (<= P_29 15))
(assert (<= 0 P_30))
(assert (<= P_30 15))
(assert (<= 0 P_31))
(assert (<= P_31 15))
(assert (<= 0 P_32))
(assert (<= P_32 15))
(assert (<= 0 P_33))
(assert (<= P_33 15))
(assert (<= 0 P_34))
(assert (<= P_34 15))
(assert (<= 0 P_35))
(assert (<= P_35 15))
(assert (<= 0 P_36))
(assert (<= P_36 15))
(assert (<= 0 P_37))
(assert (<= P_37 15))
(assert (<= 0 P_38))
(assert (<= P_38 15))
(assert (<= 0 P_39))
(assert (<= P_39 15))
(assert (<= 0 P_40))
(assert (<= P_40 15))
(assert (<= 0 P_41))
(assert (<= P_41 15))
(assert (<= 0 P_42))
(assert (<= P_42 15))
(assert (<= 0 P_43))
(assert (<= P_43 15))
(assert (<= 0 P_44))
(assert (<= P_44 15))
(assert (<= 0 P_45))
(assert (<= P_45 15))
(assert (<= 0 P_46))
(assert (<= P_46 15))
(assert (<= 0 P_47))
(assert (<= P_47 15))
(assert (<= 0 P_48))
(assert (<= P_48 15))
(assert (<= 0 P_49))
(assert (<= P_49 15))
(assert (<= 0 P_50))
(assert (<= P_50 15))
(assert (<= 0 P_51))
(assert (<= P_51 15))
(assert (<= 0 P_52))
(assert (<= P_52 15))
(assert (<= 0 P_53))
(assert (<= P_53 15))
(assert (<= 0 P_54))
(assert (<= P_54 15))
(assert (<= 0 P_55))
(assert (<= P_55 15))
(assert (<= 0 P_56))
(assert (<= P_56 15))
(assert (<= 0 P_57))
(assert (<= P_57 15))
(assert (<= 0 P_58))
(assert (<= P_58 15))
(assert (<= 0 P_59))
(assert (<= P_59 15))
(assert (<= 0 P_60))
(assert (<= P_60 15))
(assert (<= 0 P_61))
(assert (<= P_61 15))
(assert (<= 0 P_62))
(assert (<= P_62 15))
(assert (<= 0 P_63))
(assert (<= P_63 15))
(assert (<= 0 P_64))
(assert (<= P_64 15))
(assert (<= 0 P_65))
(assert (<= P_65 15))
(assert (<= 0 P_66))
(assert (<= P_66 15))
(assert (<= 0 P_67))
(assert (<= P_67 15))
(assert (<= 0 P_68))
(assert (<= P_68 15))
(assert (<= 0 P_69))
(assert (<= P_69 15))
(assert (<= 0 P_70))
(assert (<= P_70 15))
(assert (<= 0 P_71))
(assert (<= P_71 15))
(assert (<= 0 P_72))
(assert (<= P_72 15))
(assert (<= 0 P_73))
(assert (<= P_73 15))
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (= (+ (* 65536 dz) rz) (- (ite (not (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (> P_38 3) (or (= P_38 0) (not (= P_39 0)))) (or (< P_40 4) (> P_40 7))) (or (= P_40 0) (not (= P_41 0)))) (or (< P_42 8) (> P_42 11))) (or (= P_42 0) (not (= P_43 0)))) (< P_44 12)) (and (or (= P_45 0) (not (= P_46 0))) (not (= P_44 0)))) (and (or (= P_47 0) (not (= P_48 0))) (not (= P_49 0)))) (< P_49 12)) (or (= P_50 0) (not (= P_51 0)))) (or (< P_50 8) (> P_50 11))) (or (= P_52 0) (not (= P_53 0)))) (or (< P_52 4) (> P_52 7))) (or (= P_54 0) (not (= P_55 0)))) (> P_54 3)) (and (or (= P_56 0) (not (= P_57 0))) (not (= P_58 0)))) (< P_58 12)) (or (= P_59 0) (not (= P_60 0)))) (or (< P_59 8) (> P_59 11))) (or (= P_61 0) (not (= P_62 0)))) (or (< P_61 4) (> P_61 7))) (or (= P_63 0) (not (= P_64 0)))) (> P_63 3)) (and (or (= P_65 0) (not (= P_66 0))) (not (= P_67 0)))) (< P_67 12)) (or (= P_68 0) (not (= P_69 0)))) (or (< P_68 8) (> P_68 11))) (or (= P_70 0) (not (= P_71 0)))) (or (< P_70 4) (> P_70 7))) (or (= P_72 0) (not (= P_73 0)))) (> P_72 3))) (+ (* P_63 4096) (+ (* P_61 256) (+ (* P_59 16) P_58))) 9357) (ite (not (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (> P_2 3) (or (= P_2 0) (not (= P_3 0)))) (or (< P_4 4) (> P_4 7))) (or (= P_4 0) (not (= P_5 0)))) (or (< P_6 8) (> P_6 11))) (or (= P_6 0) (not (= P_7 0)))) (< P_8 12)) (and (or (= P_9 0) (not (= P_10 0))) (not (= P_8 0)))) (and (or (= P_11 0) (not (= P_12 0))) (not (= P_13 0)))) (< P_13 12)) (or (= P_14 0) (not (= P_15 0)))) (or (< P_14 8) (> P_14 11))) (or (= P_16 0) (not (= P_17 0)))) (or (< P_16 4) (> P_16 7))) (or (= P_18 0) (not (= P_19 0)))) (> P_18 3)) (and (or (= P_20 0) (not (= P_21 0))) (not (= P_22 0)))) (< P_22 12)) (or (= P_23 0) (not (= P_24 0)))) (or (< P_23 8) (> P_23 11))) (or (= P_25 0) (not (= P_26 0)))) (or (< P_25 4) (> P_25 7))) (or (= P_27 0) (not (= P_28 0)))) (> P_27 3)) (and (or (= P_29 0) (not (= P_30 0))) (not (= P_31 0)))) (< P_31 12)) (or (= P_32 0) (not (= P_33 0)))) (or (< P_32 8) (> P_32 11))) (or (= P_34 0) (not (= P_35 0)))) (or (< P_34 4) (> P_34 7))) (or (= P_36 0) (not (= P_37 0)))) (> P_36 3))) (+ (* P_27 4096) (+ (* P_25 256) (+ (* P_23 16) P_22))) 9357))))
(assert (> rz 0))
(assert (< rz 65536))
(check-sat)
(exit)
