(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun P_2 () Bool)
(declare-fun P_3 () Bool)
(declare-fun P_4 () Bool)
(declare-fun P_5 () Bool)
(declare-fun P_6 () Bool)
(declare-fun P_7 () Bool)
(declare-fun P_8 () Bool)
(declare-fun P_9 () Bool)
(declare-fun P_10 () Bool)
(declare-fun P_11 () Bool)
(declare-fun P_12 () Bool)
(declare-fun P_13 () Bool)
(declare-fun P_14 () Bool)
(declare-fun P_15 () Bool)
(declare-fun P_16 () Bool)
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_32 (not P_4)) (?v_17 (not P_3))) (let ((?v_55 (ite ?v_17 (ite ?v_32 P_5 true) P_5)) (?v_3 (not P_7))) (let ((?v_54 (ite ?v_3 true false)) (?v_2 (not P_6)) (?v_1 (not (not ?v_55)))) (let ((?v_53 (ite ?v_1 false (ite ?v_2 ?v_54 true))) (?v_5 (not P_9))) (let ((?v_52 (ite ?v_5 true false)) (?v_4 (not P_8)) (?v_0 (not ?v_53))) (let ((?v_51 (ite ?v_0 false (ite ?v_4 ?v_52 true))) (?v_23 (not P_5)) (?v_33 (ite P_5 1 0))) (let ((?v_34 (+ ?v_33 1))) (let ((?v_6 (ite ?v_1 ?v_34 (ite (ite ?v_2 (ite ?v_3 P_5 false) P_5) 1 0)))) (let ((?v_21 (+ ?v_6 1))) (let ((?v_10 (ite ?v_0 ?v_21 (ite ?v_4 (ite ?v_5 ?v_6 0) ?v_6)))) (let ((?v_7 (+ ?v_10 1)) (?v_9 (not P_11)) (?v_8 (not P_10)) (?v_12 (not ?v_23)) (?v_11 (not ?v_51))) (let ((?v_107 (ite ?v_11 (ite ?v_12 (ite ?v_8 (ite ?v_9 ?v_7 0) ?v_7) ?v_7) (ite ?v_8 (ite ?v_9 ?v_10 0) ?v_10)))) (let ((?v_14 (+ ?v_107 1))) (let ((?v_27 (= ?v_14 2)) (?v_26 (= ?v_7 2)) (?v_50 (ite ?v_9 true false))) (let ((?v_13 (ite ?v_8 ?v_50 true))) (let ((?v_22 (ite ?v_11 (ite ?v_12 ?v_13 false) ?v_13)) (?v_31 (not P_13))) (let ((?v_64 (ite ?v_31 true false)) (?v_16 (not P_12))) (let ((?v_15 (ite ?v_16 ?v_64 true)) (?v_30 (not (< ?v_14 4))) (?v_29 (not ?v_22))) (let ((?v_106 (ite ?v_29 (ite ?v_30 ?v_15 false) ?v_15))) (let ((?v_18 (not (or ?v_26 ?v_106))) (?v_19 (not P_14)) (?v_20 (or P_15 (ite ?v_16 (ite ?v_8 (ite ?v_4 (ite ?v_2 (ite ?v_17 P_5 false) false) false) false) false)))) (let ((?v_96 (or P_14 (or ?v_20 ?v_18)))) (let ((?v_101 (not ?v_96)) (?v_25 (= ?v_21 2))) (let ((?v_76 (not (or ?v_25 ?v_22))) (?v_24 (and ?v_11 ?v_23))) (let ((?v_49 (and (or ?v_24 (not (ite ?v_8 P_11 false))) (not ?v_24)))) (let ((?v_61 (not ?v_49))) (let ((?v_48 (and ?v_61 (not ?v_25)))) (let ((?v_63 (not ?v_48))) (let ((?v_75 (and (or ?v_76 (not (ite ?v_16 P_13 false))) ?v_63))) (let ((?v_85 (not ?v_75))) (let ((?v_47 (and ?v_85 (not ?v_26)))) (let ((?v_83 (not ?v_47))) (let ((?v_95 (and (or ?v_18 (or (not ?v_20) P_14)) ?v_83)) (?v_103 (not ?v_27))) (let ((?v_28 (and (not ?v_95) ?v_103))) (let ((?v_104 (not ?v_28)) (?v_105 (not P_2)) (?v_35 (ite ?v_32 ?v_33 ?v_34))) (let ((?v_36 (ite ?v_12 ?v_35 (ite ?v_17 ?v_35 0)))) (let ((?v_37 (ite ?v_3 ?v_36 (+ ?v_36 1)))) (let ((?v_38 (ite ?v_1 ?v_37 (ite ?v_2 ?v_37 0)))) (let ((?v_39 (ite ?v_5 ?v_38 (+ ?v_38 1)))) (let ((?v_40 (ite ?v_0 ?v_39 (ite ?v_4 ?v_39 0)))) (let ((?v_41 (ite ?v_9 ?v_40 (+ ?v_40 1)))) (let ((?v_42 (ite ?v_8 ?v_41 0))) (let ((?v_43 (ite ?v_11 (ite ?v_12 ?v_42 ?v_41) ?v_42))) (let ((?v_44 (ite ?v_31 ?v_43 (+ ?v_43 1)))) (let ((?v_45 (ite ?v_16 ?v_44 0))) (let ((?v_46 (ite ?v_29 (ite ?v_30 ?v_45 ?v_44) ?v_45)) (?v_56 (not (or ?v_53 ?v_54))) (?v_57 (not (ite ?v_12 (ite ?v_32 P_5 false) ?v_55)))) (let ((?v_58 (not (or (and ?v_56 ?v_57) (not (or ?v_56 ?v_57)))))) (let ((?v_59 (or (and (not (or ?v_51 ?v_52)) ?v_58) (not (or ?v_58 (not (and ?v_11 ?v_52))))))) (let ((?v_60 (not ?v_59)) (?v_70 (not (or ?v_24 ?v_8)))) (let ((?v_62 (or (and (not (or ?v_49 ?v_50)) ?v_60) (or (and ?v_59 ?v_70) (not (or ?v_60 (not (and ?v_61 ?v_50))))))) (?v_72 (not (or P_10 (or P_11 ?v_24))))) (let ((?v_87 (not (and (not (and ?v_25 ?v_62)) (not (and ?v_72 (and P_5 ?v_59))))))) (let ((?v_84 (and (not (and ?v_48 ?v_62)) (not (and ?v_87 ?v_63))))) (let ((?v_73 (not (or ?v_84 ?v_64))) (?v_67 (not (or ?v_60 ?v_50))) (?v_65 (not (or ?v_58 ?v_52))) (?v_66 (not (or (not (or ?v_57 ?v_54)) (not (or ?v_23 ?v_32)))))) (let ((?v_69 (or (and ?v_65 ?v_66) (not (or ?v_65 ?v_66))))) (let ((?v_68 (not ?v_69))) (let ((?v_71 (not (and (or (not (or (and ?v_67 ?v_68) (not (or ?v_67 ?v_68)))) ?v_49) (not (and ?v_69 ?v_70))))) (?v_78 (and ?v_72 (and P_5 ?v_69)))) (let ((?v_81 (not (and (not (and ?v_25 ?v_71)) (not (and ?v_78 ?v_72)))))) (let ((?v_74 (and (not (and ?v_48 ?v_71)) (not (and ?v_81 ?v_63)))) (?v_80 (or P_12 (or P_13 ?v_76)))) (let ((?v_79 (and ?v_75 ?v_80))) (let ((?v_77 (not (and (or (not (or (and ?v_73 ?v_74) (not (or ?v_73 ?v_74)))) ?v_75) (not (and ?v_71 ?v_79))))) (?v_82 (not ?v_80)) (?v_86 (or (and (not (or ?v_75 ?v_64)) ?v_84) (or (and ?v_62 ?v_79) (not (or ?v_84 (not (and ?v_85 ?v_64))))))) (?v_108 (not P_15))) (let ((?v_88 (and (not (and (not (and ?v_47 ?v_77)) (not (and (not (and (not (and ?v_26 ?v_77)) (not (and (not (and (not (and ?v_78 ?v_79)) (not (and ?v_82 ?v_81)))) ?v_82)))) ?v_83)))) (not (or (and (not (and ?v_47 ?v_86)) (not (and (not (and (not (and ?v_26 ?v_86)) (not (and ?v_82 ?v_87)))) ?v_83))) ?v_108)))) (?v_89 (< (ite (< ?v_40 4) ?v_40 (- ?v_40 8)) 0))) (let ((?v_90 (not (and (or (and (not ?v_89) (not (and ?v_69 ?v_67))) ?v_49) (not (and ?v_89 ?v_70))))) (?v_98 (and ?v_72 ?v_89))) (let ((?v_94 (not (and (not (and ?v_25 ?v_90)) (not ?v_98))))) (let ((?v_92 (and (not (and ?v_48 ?v_90)) (not (and ?v_94 ?v_63)))) (?v_91 (and (not ?v_74) ?v_73))) (let ((?v_93 (not (and (or (and (not (and (not ?v_92) (not ?v_91))) (not (and ?v_91 ?v_92))) ?v_75) (not (and ?v_90 ?v_79))))) (?v_99 (not (and ?v_82 ?v_94)))) (let ((?v_102 (not (and (not (and ?v_26 ?v_93)) ?v_99))) (?v_100 (and ?v_95 ?v_96))) (let ((?v_97 (not (and (or (and (not (and (< (ite (< ?v_46 4) ?v_46 (- ?v_46 8)) 0) (not ?v_88))) (not (and ?v_88 (and (not (and ?v_47 ?v_93)) (not (and ?v_102 ?v_83)))))) ?v_95) (not (and ?v_93 ?v_100))))) (?v_109 (ite ?v_108 ?v_46 (+ ?v_46 1)))) (let ((?v_110 (ite ?v_19 ?v_109 0))) (let ((?v_111 (ite (not ?v_106) (ite (not (< (+ (ite ?v_29 (ite ?v_30 (ite ?v_16 (ite ?v_31 ?v_14 0) ?v_14) ?v_14) (ite ?v_16 (ite ?v_31 ?v_107 0) ?v_107)) 1) 4)) ?v_110 ?v_109) ?v_110))) (= (+ (* 128 dz) rz) (- (ite (not (or (or (and (or (not (or ?v_27 (or (not (or ?v_18 ?v_19)) ?v_101))) (or (not (or P_2 (ite ?v_19 (ite ?v_16 (ite ?v_8 (ite ?v_4 (ite ?v_2 (ite ?v_17 P_4 false) false) false) false) false) false))) P_16)) ?v_104) ?v_105) (and (not (and ?v_28 ?v_97)) (not (and (not (and (not (and ?v_27 ?v_97)) (not (and (not (and (not (and (not (and (not (and ?v_98 ?v_79)) ?v_99)) ?v_100)) (not (and ?v_101 ?v_102)))) (and ?v_101 ?v_103))))) ?v_104))))) 1 0) (ite (ite ?v_105 false (< (ite (< ?v_111 4) ?v_111 (- ?v_111 8)) 0)) 1 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (> rz 0))
(assert (< rz 128))
(check-sat)
(exit)
