(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun P_2 () Bool)
(declare-fun P_3 () Bool)
(declare-fun P_4 () Bool)
(declare-fun P_5 () Bool)
(declare-fun P_6 () Bool)
(declare-fun P_7 () Bool)
(declare-fun P_8 () Bool)
(declare-fun P_9 () Bool)
(declare-fun P_10 () Bool)
(declare-fun P_11 () Bool)
(declare-fun P_12 () Bool)
(declare-fun P_13 () Bool)
(declare-fun P_14 () Bool)
(declare-fun P_15 () Bool)
(declare-fun P_16 () Bool)
(declare-fun P_17 () Bool)
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_0 (ite (not P_4) P_5 false)) (?v_33 (not P_3)) (?v_18 (not P_2))) (let ((?v_56 (ite ?v_18 (ite ?v_33 ?v_0 true) ?v_0)) (?v_4 (not P_7))) (let ((?v_55 (ite ?v_4 true false)) (?v_3 (not P_6)) (?v_2 (not (not ?v_56)))) (let ((?v_54 (ite ?v_2 false (ite ?v_3 ?v_55 true))) (?v_6 (not P_9))) (let ((?v_53 (ite ?v_6 true false)) (?v_5 (not P_8)) (?v_1 (not ?v_54))) (let ((?v_52 (ite ?v_1 false (ite ?v_5 ?v_53 true))) (?v_24 (not ?v_0)) (?v_34 (ite ?v_0 1 0))) (let ((?v_35 (+ ?v_34 1))) (let ((?v_7 (ite ?v_2 ?v_35 (ite (ite ?v_3 (ite ?v_4 ?v_0 false) ?v_0) 1 0)))) (let ((?v_22 (+ ?v_7 1))) (let ((?v_11 (ite ?v_1 ?v_22 (ite ?v_5 (ite ?v_6 ?v_7 0) ?v_7)))) (let ((?v_8 (+ ?v_11 1)) (?v_10 (not P_11)) (?v_9 (not P_10)) (?v_13 (not ?v_24)) (?v_12 (not ?v_52))) (let ((?v_107 (ite ?v_12 (ite ?v_13 (ite ?v_9 (ite ?v_10 ?v_8 0) ?v_8) ?v_8) (ite ?v_9 (ite ?v_10 ?v_11 0) ?v_11)))) (let ((?v_15 (+ ?v_107 1))) (let ((?v_28 (= ?v_15 2)) (?v_27 (= ?v_8 2)) (?v_51 (ite ?v_10 true false))) (let ((?v_14 (ite ?v_9 ?v_51 true))) (let ((?v_23 (ite ?v_12 (ite ?v_13 ?v_14 false) ?v_14)) (?v_32 (not P_13))) (let ((?v_65 (ite ?v_32 true false)) (?v_17 (not P_12))) (let ((?v_16 (ite ?v_17 ?v_65 true)) (?v_31 (not (< ?v_15 4))) (?v_30 (not ?v_23))) (let ((?v_106 (ite ?v_30 (ite ?v_31 ?v_16 false) ?v_16))) (let ((?v_19 (not (or ?v_27 ?v_106))) (?v_20 (not P_14)) (?v_21 (or P_15 (ite ?v_17 (ite ?v_9 (ite ?v_5 (ite ?v_3 (ite ?v_18 ?v_0 false) false) false) false) false)))) (let ((?v_97 (or P_14 (or ?v_21 ?v_19)))) (let ((?v_102 (not ?v_97)) (?v_111 (not (or P_17 (ite ?v_20 (ite ?v_17 (ite ?v_9 (ite ?v_5 (ite ?v_3 (ite ?v_18 P_3 false) false) false) false) false) false)))) (?v_108 (not ?v_21)) (?v_26 (= ?v_22 2))) (let ((?v_77 (not (or ?v_26 ?v_23))) (?v_25 (and ?v_12 ?v_24))) (let ((?v_50 (and (or ?v_25 (not (ite ?v_9 P_11 false))) (not ?v_25)))) (let ((?v_62 (not ?v_50))) (let ((?v_49 (and ?v_62 (not ?v_26)))) (let ((?v_64 (not ?v_49))) (let ((?v_76 (and (or ?v_77 (not (ite ?v_17 P_13 false))) ?v_64))) (let ((?v_86 (not ?v_76))) (let ((?v_48 (and ?v_86 (not ?v_27)))) (let ((?v_84 (not ?v_48))) (let ((?v_96 (and (or ?v_19 (or ?v_108 P_14)) ?v_84)) (?v_104 (not ?v_28))) (let ((?v_29 (and (not ?v_96) ?v_104))) (let ((?v_105 (not ?v_29)) (?v_117 (not P_17)) (?v_36 (ite ?v_33 ?v_34 ?v_35))) (let ((?v_37 (ite ?v_13 ?v_36 (ite ?v_18 ?v_36 0)))) (let ((?v_38 (ite ?v_4 ?v_37 (+ ?v_37 1)))) (let ((?v_39 (ite ?v_2 ?v_38 (ite ?v_3 ?v_38 0)))) (let ((?v_40 (ite ?v_6 ?v_39 (+ ?v_39 1)))) (let ((?v_41 (ite ?v_1 ?v_40 (ite ?v_5 ?v_40 0)))) (let ((?v_42 (ite ?v_10 ?v_41 (+ ?v_41 1)))) (let ((?v_43 (ite ?v_9 ?v_42 0))) (let ((?v_44 (ite ?v_12 (ite ?v_13 ?v_43 ?v_42) ?v_43))) (let ((?v_45 (ite ?v_32 ?v_44 (+ ?v_44 1)))) (let ((?v_46 (ite ?v_17 ?v_45 0))) (let ((?v_47 (ite ?v_30 (ite ?v_31 ?v_46 ?v_45) ?v_46))) (let ((?v_115 (< (ite (< ?v_47 4) ?v_47 (- ?v_47 8)) 0)) (?v_57 (not (or ?v_54 ?v_55))) (?v_58 (not (ite ?v_13 (ite ?v_33 ?v_0 false) ?v_56)))) (let ((?v_59 (not (or (and ?v_57 ?v_58) (not (or ?v_57 ?v_58)))))) (let ((?v_60 (or (and (not (or ?v_52 ?v_53)) ?v_59) (not (or ?v_59 (not (and ?v_12 ?v_53))))))) (let ((?v_61 (not ?v_60)) (?v_71 (not (or ?v_25 ?v_9)))) (let ((?v_63 (or (and (not (or ?v_50 ?v_51)) ?v_61) (or (and ?v_60 ?v_71) (not (or ?v_61 (not (and ?v_62 ?v_51))))))) (?v_73 (not (or P_10 (or P_11 ?v_25))))) (let ((?v_88 (not (and (not (and ?v_26 ?v_63)) (not (and ?v_73 (and ?v_0 ?v_60))))))) (let ((?v_85 (and (not (and ?v_49 ?v_63)) (not (and ?v_88 ?v_64))))) (let ((?v_74 (not (or ?v_85 ?v_65))) (?v_68 (not (or ?v_61 ?v_51))) (?v_66 (not (or ?v_59 ?v_53))) (?v_67 (not (or (not (or ?v_58 ?v_55)) (not (or ?v_24 ?v_33)))))) (let ((?v_70 (or (and ?v_66 ?v_67) (not (or ?v_66 ?v_67))))) (let ((?v_69 (not ?v_70))) (let ((?v_72 (not (and (or (not (or (and ?v_68 ?v_69) (not (or ?v_68 ?v_69)))) ?v_50) (not (and ?v_70 ?v_71))))) (?v_79 (and ?v_73 (and ?v_0 ?v_70)))) (let ((?v_82 (not (and (not (and ?v_26 ?v_72)) (not (and ?v_79 ?v_73)))))) (let ((?v_75 (and (not (and ?v_49 ?v_72)) (not (and ?v_82 ?v_64)))) (?v_81 (or P_12 (or P_13 ?v_77)))) (let ((?v_80 (and ?v_76 ?v_81))) (let ((?v_78 (not (and (or (not (or (and ?v_74 ?v_75) (not (or ?v_74 ?v_75)))) ?v_76) (not (and ?v_72 ?v_80))))) (?v_83 (not ?v_81)) (?v_113 (or ?v_76 ?v_65))) (let ((?v_87 (or (and (not ?v_113) ?v_85) (or (and ?v_63 ?v_80) (not (or ?v_85 (not (and ?v_86 ?v_65))))))) (?v_114 (not P_15))) (let ((?v_89 (and (not (and (not (and ?v_48 ?v_78)) (not (and (not (and (not (and ?v_27 ?v_78)) (not (and (not (and (not (and ?v_79 ?v_80)) (not (and ?v_83 ?v_82)))) ?v_83)))) ?v_84)))) (not (or (and (not (and ?v_48 ?v_87)) (not (and (not (and (not (and ?v_27 ?v_87)) (not (and ?v_83 ?v_88)))) ?v_84))) ?v_114)))) (?v_90 (< (ite (< ?v_41 4) ?v_41 (- ?v_41 8)) 0))) (let ((?v_91 (not (and (or (and (not ?v_90) (not (and ?v_70 ?v_68))) ?v_50) (not (and ?v_90 ?v_71))))) (?v_99 (and ?v_73 ?v_90))) (let ((?v_95 (not (and (not (and ?v_26 ?v_91)) (not ?v_99))))) (let ((?v_93 (and (not (and ?v_49 ?v_91)) (not (and ?v_95 ?v_64)))) (?v_92 (and (not ?v_75) ?v_74))) (let ((?v_94 (not (and (or (and (not (and (not ?v_93) (not ?v_92))) (not (and ?v_92 ?v_93))) ?v_76) (not (and ?v_91 ?v_80))))) (?v_100 (not (and ?v_83 ?v_95)))) (let ((?v_103 (not (and (not (and ?v_27 ?v_94)) ?v_100))) (?v_101 (and ?v_96 ?v_97))) (let ((?v_98 (not (and (or (and (not (and ?v_115 (not ?v_89))) (not (and ?v_89 (and (not (and ?v_48 ?v_94)) (not (and ?v_103 ?v_84)))))) ?v_96) (not (and ?v_94 ?v_101))))) (?v_110 (ite ?v_30 (ite ?v_31 (ite ?v_17 (ite ?v_32 ?v_15 0) ?v_15) ?v_15) (ite ?v_17 (ite ?v_32 ?v_107 0) ?v_107)))) (let ((?v_109 (+ ?v_110 1))) (let ((?v_112 (not (< ?v_109 4))) (?v_118 (not ?v_106)) (?v_116 (ite ?v_114 false ?v_115)) (?v_119 (ite ?v_114 ?v_47 (+ ?v_47 1)))) (let ((?v_120 (ite ?v_20 ?v_119 0))) (let ((?v_121 (ite ?v_118 (ite ?v_112 ?v_120 ?v_119) ?v_120))) (let ((?v_122 (ite ?v_117 false (< (ite (< ?v_121 4) ?v_121 (- ?v_121 8)) 0)))) (= (+ (* 128 dz) rz) (- (ite (not (or (or (and (or (not (or ?v_28 (or (not (or ?v_19 ?v_20)) ?v_102))) (or ?v_111 P_16)) ?v_105) ?v_117) (and (not (and ?v_29 ?v_98)) (not (and (not (and (not (and ?v_28 ?v_98)) (not (and (not (and (not (and (not (and (not (and ?v_99 ?v_80)) ?v_100)) ?v_101)) (not (and ?v_102 ?v_103)))) (and ?v_102 ?v_104))))) ?v_105))))) 1 0) (ite (ite (not (< (+ (ite ?v_118 (ite ?v_112 (ite ?v_20 (ite ?v_108 ?v_109 0) ?v_109) ?v_109) (ite ?v_20 (ite ?v_108 ?v_110 0) ?v_110)) 1) 4)) (ite (not P_16) (ite ?v_111 (ite ?v_112 (ite ?v_20 (ite ?v_108 (not (or ?v_113 ?v_93)) ?v_116) false) ?v_116) ?v_122) false) ?v_122) 1 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (> rz 0))
(assert (< rz 128))
(check-sat)
(exit)
