(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun P_2 () Bool)
(declare-fun P_3 () Bool)
(declare-fun P_4 () Bool)
(declare-fun P_5 () Bool)
(declare-fun P_6 () Bool)
(declare-fun P_7 () Bool)
(declare-fun P_8 () Bool)
(declare-fun P_9 () Bool)
(declare-fun P_10 () Bool)
(declare-fun P_11 () Bool)
(declare-fun P_12 () Bool)
(declare-fun P_13 () Bool)
(declare-fun P_14 () Bool)
(declare-fun P_15 () Bool)
(declare-fun P_16 () Bool)
(declare-fun P_17 () Bool)
(declare-fun P_18 () Bool)
(declare-fun P_19 () Bool)
(declare-fun P_20 () Bool)
(declare-fun P_21 () Bool)
(declare-fun P_22 () Bool)
(declare-fun P_23 () Bool)
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_0 (not P_14))) (let ((?v_27 (and ?v_0 P_16)) (?v_1 (ite ?v_0 P_17 false))) (let ((?v_43 (not ?v_27)) (?v_2 (not P_12))) (let ((?v_66 (ite ?v_2 (ite ?v_43 ?v_1 true) ?v_1)) (?v_4 (ite ?v_2 (ite (not P_13) P_14 false) true))) (let ((?v_9 (not (and (not ?v_4) P_18)))) (let ((?v_65 (ite ?v_9 true false)) (?v_3 (not P_10)) (?v_8 (not (not ?v_66)))) (let ((?v_64 (ite ?v_8 false (ite ?v_3 ?v_65 true))) (?v_6 (ite ?v_3 (ite (not P_11) ?v_4 false) true))) (let ((?v_10 (not (and (not ?v_6) P_19)))) (let ((?v_63 (ite ?v_10 true false)) (?v_5 (not P_8)) (?v_7 (not ?v_64))) (let ((?v_62 (ite ?v_7 false (ite ?v_5 ?v_63 true))) (?v_32 (not ?v_1)) (?v_20 (ite ?v_5 (ite (not P_9) ?v_6 false) true))) (let ((?v_33 (and (not ?v_20) P_20)) (?v_44 (ite ?v_1 1 0))) (let ((?v_45 (+ ?v_44 1))) (let ((?v_11 (ite ?v_8 ?v_45 (ite (ite ?v_3 (ite ?v_9 ?v_1 false) ?v_1) 1 0)))) (let ((?v_29 (+ ?v_11 1))) (let ((?v_15 (ite ?v_7 ?v_29 (ite ?v_5 (ite ?v_10 ?v_11 0) ?v_11)))) (let ((?v_12 (+ ?v_15 1)) (?v_14 (not ?v_33)) (?v_13 (not P_6)) (?v_17 (not ?v_32)) (?v_16 (not ?v_62))) (let ((?v_119 (ite ?v_16 (ite ?v_17 (ite ?v_13 (ite ?v_14 ?v_12 0) ?v_12) ?v_12) (ite ?v_13 (ite ?v_14 ?v_15 0) ?v_15)))) (let ((?v_19 (+ ?v_119 1))) (let ((?v_37 (= ?v_19 2)) (?v_36 (= ?v_12 2)) (?v_61 (ite ?v_14 true false))) (let ((?v_18 (ite ?v_13 ?v_61 true))) (let ((?v_30 (ite ?v_16 (ite ?v_17 ?v_18 false) ?v_18)) (?v_23 (ite ?v_13 (ite (not P_7) ?v_20 false) true))) (let ((?v_31 (and (not ?v_23) P_21))) (let ((?v_42 (not ?v_31))) (let ((?v_75 (ite ?v_42 true false)) (?v_22 (not P_4))) (let ((?v_21 (ite ?v_22 ?v_75 true)) (?v_41 (not (< ?v_19 4))) (?v_40 (not ?v_30))) (let ((?v_118 (ite ?v_40 (ite ?v_41 ?v_21 false) ?v_21))) (let ((?v_24 (not (or ?v_36 ?v_118))) (?v_25 (not P_2)) (?v_26 (ite ?v_22 (ite (not P_5) ?v_23 false) true))) (let ((?v_99 (and (not ?v_26) P_22))) (let ((?v_28 (or ?v_99 (ite ?v_22 (ite ?v_13 (ite ?v_5 (ite ?v_3 (ite ?v_2 ?v_1 false) false) false) false) false)))) (let ((?v_108 (or P_2 (or ?v_28 ?v_24)))) (let ((?v_113 (not ?v_108)) (?v_38 (and (not (ite ?v_25 (ite (not P_3) ?v_26 false) true)) P_15)) (?v_35 (= ?v_29 2))) (let ((?v_87 (not (or ?v_35 ?v_30))) (?v_34 (and ?v_16 ?v_32))) (let ((?v_60 (and (or ?v_34 (not (ite ?v_13 ?v_33 false))) (not ?v_34)))) (let ((?v_72 (not ?v_60))) (let ((?v_59 (and ?v_72 (not ?v_35)))) (let ((?v_74 (not ?v_59))) (let ((?v_86 (and (or ?v_87 (not (ite ?v_22 ?v_31 false))) ?v_74))) (let ((?v_96 (not ?v_86))) (let ((?v_58 (and ?v_96 (not ?v_36)))) (let ((?v_94 (not ?v_58))) (let ((?v_107 (and (or ?v_24 (or (not ?v_28) P_2)) ?v_94)) (?v_115 (not ?v_37))) (let ((?v_39 (and (not ?v_107) ?v_115))) (let ((?v_116 (not ?v_39)) (?v_117 (not ?v_38)) (?v_46 (ite ?v_43 ?v_44 ?v_45))) (let ((?v_47 (ite ?v_17 ?v_46 (ite ?v_2 ?v_46 0)))) (let ((?v_48 (ite ?v_9 ?v_47 (+ ?v_47 1)))) (let ((?v_49 (ite ?v_8 ?v_48 (ite ?v_3 ?v_48 0)))) (let ((?v_50 (ite ?v_10 ?v_49 (+ ?v_49 1)))) (let ((?v_51 (ite ?v_7 ?v_50 (ite ?v_5 ?v_50 0)))) (let ((?v_52 (ite ?v_14 ?v_51 (+ ?v_51 1)))) (let ((?v_53 (ite ?v_13 ?v_52 0))) (let ((?v_54 (ite ?v_16 (ite ?v_17 ?v_53 ?v_52) ?v_53))) (let ((?v_55 (ite ?v_42 ?v_54 (+ ?v_54 1)))) (let ((?v_56 (ite ?v_22 ?v_55 0))) (let ((?v_57 (ite ?v_40 (ite ?v_41 ?v_56 ?v_55) ?v_56)) (?v_67 (not (or ?v_64 ?v_65))) (?v_68 (not (ite ?v_17 (ite ?v_43 ?v_1 false) ?v_66)))) (let ((?v_69 (not (or (and ?v_67 ?v_68) (not (or ?v_67 ?v_68)))))) (let ((?v_70 (or (and (not (or ?v_62 ?v_63)) ?v_69) (not (or ?v_69 (not (and ?v_16 ?v_63))))))) (let ((?v_71 (not ?v_70)) (?v_81 (not (or ?v_34 ?v_13)))) (let ((?v_73 (or (and (not (or ?v_60 ?v_61)) ?v_71) (or (and ?v_70 ?v_81) (not (or ?v_71 (not (and ?v_72 ?v_61))))))) (?v_83 (not (or P_6 (or ?v_33 ?v_34))))) (let ((?v_98 (not (and (not (and ?v_35 ?v_73)) (not (and ?v_83 (and ?v_1 ?v_70))))))) (let ((?v_95 (and (not (and ?v_59 ?v_73)) (not (and ?v_98 ?v_74))))) (let ((?v_84 (not (or ?v_95 ?v_75))) (?v_78 (not (or ?v_71 ?v_61))) (?v_76 (not (or ?v_69 ?v_63))) (?v_77 (not (or (not (or ?v_68 ?v_65)) (not (or ?v_32 ?v_43)))))) (let ((?v_80 (or (and ?v_76 ?v_77) (not (or ?v_76 ?v_77))))) (let ((?v_79 (not ?v_80))) (let ((?v_82 (not (and (or (not (or (and ?v_78 ?v_79) (not (or ?v_78 ?v_79)))) ?v_60) (not (and ?v_80 ?v_81))))) (?v_89 (and ?v_83 (and ?v_1 ?v_80)))) (let ((?v_92 (not (and (not (and ?v_35 ?v_82)) (not (and ?v_89 ?v_83)))))) (let ((?v_85 (and (not (and ?v_59 ?v_82)) (not (and ?v_92 ?v_74)))) (?v_91 (or P_4 (or ?v_31 ?v_87)))) (let ((?v_90 (and ?v_86 ?v_91))) (let ((?v_88 (not (and (or (not (or (and ?v_84 ?v_85) (not (or ?v_84 ?v_85)))) ?v_86) (not (and ?v_82 ?v_90))))) (?v_93 (not ?v_91)) (?v_97 (or (and (not (or ?v_86 ?v_75)) ?v_95) (or (and ?v_73 ?v_90) (not (or ?v_95 (not (and ?v_96 ?v_75))))))) (?v_120 (not ?v_99))) (let ((?v_100 (and (not (and (not (and ?v_58 ?v_88)) (not (and (not (and (not (and ?v_36 ?v_88)) (not (and (not (and (not (and ?v_89 ?v_90)) (not (and ?v_93 ?v_92)))) ?v_93)))) ?v_94)))) (not (or (and (not (and ?v_58 ?v_97)) (not (and (not (and (not (and ?v_36 ?v_97)) (not (and ?v_93 ?v_98)))) ?v_94))) ?v_120)))) (?v_101 (< (ite (< ?v_51 4) ?v_51 (- ?v_51 8)) 0))) (let ((?v_102 (not (and (or (and (not ?v_101) (not (and ?v_80 ?v_78))) ?v_60) (not (and ?v_101 ?v_81))))) (?v_110 (and ?v_83 ?v_101))) (let ((?v_106 (not (and (not (and ?v_35 ?v_102)) (not ?v_110))))) (let ((?v_104 (and (not (and ?v_59 ?v_102)) (not (and ?v_106 ?v_74)))) (?v_103 (and (not ?v_85) ?v_84))) (let ((?v_105 (not (and (or (and (not (and (not ?v_104) (not ?v_103))) (not (and ?v_103 ?v_104))) ?v_86) (not (and ?v_102 ?v_90))))) (?v_111 (not (and ?v_93 ?v_106)))) (let ((?v_114 (not (and (not (and ?v_36 ?v_105)) ?v_111))) (?v_112 (and ?v_107 ?v_108))) (let ((?v_109 (not (and (or (and (not (and (< (ite (< ?v_57 4) ?v_57 (- ?v_57 8)) 0) (not ?v_100))) (not (and ?v_100 (and (not (and ?v_58 ?v_105)) (not (and ?v_114 ?v_94)))))) ?v_107) (not (and ?v_105 ?v_112))))) (?v_121 (ite ?v_120 ?v_57 (+ ?v_57 1)))) (let ((?v_122 (ite ?v_25 ?v_121 0))) (let ((?v_123 (ite (not ?v_118) (ite (not (< (+ (ite ?v_40 (ite ?v_41 (ite ?v_22 (ite ?v_42 ?v_19 0) ?v_19) ?v_19) (ite ?v_22 (ite ?v_42 ?v_119 0) ?v_119)) 1) 4)) ?v_122 ?v_121) ?v_122))) (= (+ (* 128 dz) rz) (- (ite (not (or (or (and (or (not (or ?v_37 (or (not (or ?v_24 ?v_25)) ?v_113))) (or (not (or ?v_38 (ite ?v_25 (ite ?v_22 (ite ?v_13 (ite ?v_5 (ite ?v_3 (ite ?v_2 ?v_27 false) false) false) false) false) false))) P_23)) ?v_116) ?v_117) (and (not (and ?v_39 ?v_109)) (not (and (not (and (not (and ?v_37 ?v_109)) (not (and (not (and (not (and (not (and (not (and ?v_110 ?v_90)) ?v_111)) ?v_112)) (not (and ?v_113 ?v_114)))) (and ?v_113 ?v_115))))) ?v_116))))) 1 0) (ite (ite ?v_117 false (< (ite (< ?v_123 4) ?v_123 (- ?v_123 8)) 0)) 1 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (> rz 0))
(assert (< rz 128))
(check-sat)
(exit)
