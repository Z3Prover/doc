(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun P_2 () Bool)
(declare-fun P_3 () Int)
(declare-fun P_4 () Bool)
(declare-fun P_5 () Bool)
(declare-fun P_6 () Bool)
(declare-fun P_7 () Bool)
(declare-fun P_8 () Bool)
(declare-fun P_9 () Int)
(declare-fun P_10 () Bool)
(declare-fun P_11 () Int)
(declare-fun P_12 () Bool)
(declare-fun P_13 () Int)
(declare-fun P_14 () Int)
(declare-fun P_15 () Int)
(declare-fun P_16 () Bool)
(declare-fun P_17 () Bool)
(declare-fun P_18 () Int)
(declare-fun P_19 () Int)
(declare-fun P_20 () Int)
(declare-fun P_21 () Int)
(declare-fun P_22 () Int)
(declare-fun P_23 () Int)
(declare-fun P_24 () Int)
(declare-fun P_25 () Int)
(declare-fun P_26 () Int)
(assert (<= 0 P_3))
(assert (<= P_3 127))
(assert (<= 0 P_9))
(assert (<= P_9 127))
(assert (<= 0 P_11))
(assert (<= P_11 127))
(assert (<= 0 P_13))
(assert (<= P_13 127))
(assert (<= 0 P_14))
(assert (<= P_14 4294967295))
(assert (<= 0 P_15))
(assert (<= P_15 4294967295))
(assert (<= 0 P_18))
(assert (<= P_18 4294967295))
(assert (<= 0 P_19))
(assert (<= P_19 4294967295))
(assert (<= 0 P_20))
(assert (<= P_20 4294967295))
(assert (<= 0 P_21))
(assert (<= P_21 4294967295))
(assert (<= 0 P_22))
(assert (<= P_22 4294967295))
(assert (<= 0 P_23))
(assert (<= P_23 4294967295))
(assert (<= 0 P_24))
(assert (<= P_24 4294967295))
(assert (<= 0 P_25))
(assert (<= P_25 4294967295))
(assert (<= 0 P_26))
(assert (<= P_26 4294967295))
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_0 (- 64 P_3))) (let ((?v_1 (ite (not (and P_2 (>= (ite (>= ?v_0 0) ?v_0 (+ ?v_0 256)) 32))) P_2 false))) (let ((?v_17 (ite (not ?v_1) P_4 false))) (let ((?v_2 (or ?v_17 ?v_1))) (let ((?v_3 (ite (not (and ?v_2 P_5)) ?v_2 false))) (let ((?v_16 (ite (not ?v_3) P_6 false))) (let ((?v_4 (or ?v_16 ?v_3))) (let ((?v_15 (not (and ?v_4 P_7)))) (let ((?v_5 (ite ?v_15 ?v_4 false))) (let ((?v_24 (ite (not ?v_5) P_8 false))) (let ((?v_7 (or ?v_24 ?v_5)) (?v_6 (- 64 P_9))) (let ((?v_14 (not (and ?v_7 (>= (ite (>= ?v_6 0) ?v_6 (+ ?v_6 256)) 32))))) (let ((?v_8 (ite ?v_14 ?v_7 false))) (let ((?v_30 (ite (not ?v_8) P_10 false))) (let ((?v_10 (or ?v_30 ?v_8)) (?v_9 (- 64 P_11))) (let ((?v_13 (not (and ?v_10 (>= (ite (>= ?v_9 0) ?v_9 (+ ?v_9 256)) 32))))) (let ((?v_11 (ite ?v_13 ?v_10 false))) (let ((?v_32 (ite (not ?v_11) P_12 false)) (?v_12 (- 64 P_13))) (let ((?v_38 (not (and (or ?v_32 ?v_11) (>= (ite (>= ?v_12 0) ?v_12 (+ ?v_12 256)) 32)))) (?v_23 (not P_17)) (?v_22 (not P_16)) (?v_21 (not P_2)) (?v_20 (not ?v_17)) (?v_19 (not ?v_16))) (let ((?v_35 (ite ?v_19 (ite ?v_20 (ite ?v_21 (ite ?v_22 (ite ?v_23 0 P_18) P_19) P_20) P_21) P_22)) (?v_28 (not ?v_24))) (let ((?v_37 (ite ?v_28 ?v_35 P_23)) (?v_33 (not ?v_30))) (let ((?v_42 (ite ?v_33 ?v_37 P_24)) (?v_41 (not ?v_32)) (?v_18 (* 18446744073709551616 P_15)) (?v_25 (ite ?v_19 (ite ?v_20 (ite ?v_21 (ite ?v_22 (ite ?v_23 0 (* 4294967296 P_18)) (* 4294967296 P_19)) (* 4294967296 P_20)) (* 4294967296 P_21)) (* 4294967296 P_22)))) (let ((?v_34 (ite ?v_15 (+ (* 18446744073709551616 P_14) (* 4294967296 P_15)) (+ ?v_18 ?v_25))) (?v_27 (* 79228162514264337593543950336 P_15)) (?v_29 (ite ?v_19 (ite ?v_20 (ite ?v_21 (ite ?v_22 (ite ?v_23 0 (* 18446744073709551616 P_18)) (* 18446744073709551616 P_19)) (* 18446744073709551616 P_20)) (* 18446744073709551616 P_21)) (* 18446744073709551616 P_22)))) (let ((?v_26 (ite ?v_15 (+ (* 79228162514264337593543950336 P_14) ?v_18) (+ ?v_27 ?v_29))) (?v_31 (ite ?v_28 ?v_25 (* 4294967296 P_23)))) (let ((?v_36 (ite ?v_14 ?v_34 (+ ?v_26 ?v_31)))) (let ((?v_39 (ite ?v_13 (ite ?v_14 (ite ?v_15 (+ (* P_14 4294967296) P_15) (+ (* P_15 4294967296) ?v_35)) (+ ?v_34 ?v_37)) (+ ?v_36 ?v_42))) (?v_40 (ite ?v_13 ?v_36 (+ (ite ?v_14 ?v_26 (+ (ite ?v_15 (+ (* 340282366920938463463374607431768211456 P_14) ?v_27) (+ (* 340282366920938463463374607431768211456 P_15) (ite ?v_19 (ite ?v_20 (ite ?v_21 (ite ?v_22 (ite ?v_23 0 (* 79228162514264337593543950336 P_18)) (* 79228162514264337593543950336 P_19)) (* 79228162514264337593543950336 P_20)) (* 79228162514264337593543950336 P_21)) (* 79228162514264337593543950336 P_22)))) (ite ?v_28 ?v_29 (* 18446744073709551616 P_23)))) (ite ?v_33 ?v_31 (* 4294967296 P_24)))))) (= (+ (* 18446744073709551616 dz) rz) (- (ite (not ?v_38) (+ ?v_40 (ite (not ?v_41) P_25 (ite (not ?v_33) P_24 (ite (not ?v_28) P_23 (ite (not ?v_19) P_22 (ite (not ?v_20) P_21 (ite (not ?v_21) P_20 (ite (not ?v_22) P_19 (ite ?v_23 P_26 P_18))))))))) ?v_39) (ite ?v_38 ?v_39 (+ ?v_40 (ite ?v_41 ?v_42 P_25))))))))))))))))))))))))))))))))
(assert (> rz 0))
(assert (< rz 18446744073709551616))
(check-sat)
(exit)
