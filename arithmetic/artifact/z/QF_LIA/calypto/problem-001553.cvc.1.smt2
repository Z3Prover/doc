(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :category "industrial")
(set-info :status unsat)
(declare-fun P_2 () Bool)
(declare-fun P_3 () Bool)
(declare-fun P_4 () Bool)
(declare-fun P_5 () Bool)
(declare-fun P_6 () Bool)
(declare-fun P_7 () Bool)
(declare-fun P_8 () Bool)
(declare-fun P_9 () Bool)
(declare-fun P_10 () Bool)
(declare-fun P_11 () Bool)
(declare-fun P_12 () Bool)
(declare-fun P_13 () Bool)
(declare-fun P_14 () Bool)
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_27 (not P_3)) (?v_16 (not P_2))) (let ((?v_50 (ite ?v_16 (ite ?v_27 P_4 true) P_4)) (?v_2 (not P_6))) (let ((?v_49 (ite ?v_2 true false)) (?v_1 (not P_5)) (?v_0 (not (not ?v_50)))) (let ((?v_48 (ite ?v_0 false (ite ?v_1 ?v_49 true))) (?v_28 (ite P_4 1 0))) (let ((?v_29 (+ ?v_28 1))) (let ((?v_3 (ite ?v_0 ?v_29 (ite (ite ?v_1 (ite ?v_2 P_4 false) P_4) 1 0)))) (let ((?v_17 (+ ?v_3 1)) (?v_6 (not P_8)) (?v_5 (not P_7)) (?v_4 (not ?v_48))) (let ((?v_13 (ite ?v_4 ?v_17 (ite ?v_5 (ite ?v_6 ?v_3 0) ?v_3)))) (let ((?v_12 (+ ?v_13 1))) (let ((?v_22 (= ?v_12 2)) (?v_47 (ite ?v_6 true false))) (let ((?v_46 (ite ?v_4 false (ite ?v_5 ?v_47 true))) (?v_19 (not P_4)) (?v_11 (not P_10))) (let ((?v_45 (ite ?v_11 true false)) (?v_10 (not P_9))) (let ((?v_7 (ite ?v_10 ?v_45 true)) (?v_9 (not ?v_19)) (?v_8 (not ?v_46))) (let ((?v_18 (ite ?v_8 (ite ?v_9 ?v_7 false) ?v_7)) (?v_104 (ite ?v_8 (ite ?v_9 (ite ?v_10 (ite ?v_11 ?v_12 0) ?v_12) ?v_12) (ite ?v_10 (ite ?v_11 ?v_13 0) ?v_13)))) (let ((?v_23 (+ ?v_104 1)) (?v_26 (not P_12))) (let ((?v_59 (ite ?v_26 true false)) (?v_15 (not P_11))) (let ((?v_14 (ite ?v_15 ?v_59 true)) (?v_25 (not (< ?v_23 4))) (?v_24 (not ?v_18))) (let ((?v_103 (ite ?v_24 (ite ?v_25 ?v_14 false) ?v_14))) (let ((?v_92 (not (or ?v_22 ?v_103))) (?v_91 (or P_14 (ite ?v_15 (ite ?v_10 (ite ?v_5 (ite ?v_1 (ite ?v_16 P_4 false) false) false) false) false))) (?v_21 (= ?v_17 2))) (let ((?v_71 (not (or ?v_21 ?v_18))) (?v_20 (and ?v_8 ?v_19))) (let ((?v_44 (and (or ?v_20 (not (ite ?v_10 P_10 false))) (not ?v_20)))) (let ((?v_56 (not ?v_44))) (let ((?v_43 (and ?v_56 (not ?v_21)))) (let ((?v_58 (not ?v_43))) (let ((?v_70 (and (or ?v_71 (not (ite ?v_15 P_12 false))) ?v_58))) (let ((?v_80 (not ?v_70))) (let ((?v_42 (and ?v_80 (not ?v_22)))) (let ((?v_78 (not ?v_42))) (let ((?v_90 (and (or ?v_92 (or (not ?v_91) P_13)) ?v_78)) (?v_93 (= ?v_23 2))) (let ((?v_101 (not ?v_93))) (let ((?v_102 (and (not ?v_90) ?v_101)) (?v_30 (ite ?v_27 ?v_28 ?v_29))) (let ((?v_31 (ite ?v_9 ?v_30 (ite ?v_16 ?v_30 0)))) (let ((?v_32 (ite ?v_2 ?v_31 (+ ?v_31 1)))) (let ((?v_33 (ite ?v_0 ?v_32 (ite ?v_1 ?v_32 0)))) (let ((?v_34 (ite ?v_6 ?v_33 (+ ?v_33 1)))) (let ((?v_35 (ite ?v_4 ?v_34 (ite ?v_5 ?v_34 0)))) (let ((?v_36 (ite ?v_11 ?v_35 (+ ?v_35 1)))) (let ((?v_37 (ite ?v_10 ?v_36 0))) (let ((?v_38 (ite ?v_8 (ite ?v_9 ?v_37 ?v_36) ?v_37))) (let ((?v_39 (ite ?v_26 ?v_38 (+ ?v_38 1)))) (let ((?v_40 (ite ?v_15 ?v_39 0))) (let ((?v_41 (ite ?v_24 (ite ?v_25 ?v_40 ?v_39) ?v_40)) (?v_51 (not (or ?v_48 ?v_49))) (?v_52 (not (ite ?v_9 (ite ?v_27 P_4 false) ?v_50)))) (let ((?v_53 (not (or (and ?v_51 ?v_52) (not (or ?v_51 ?v_52)))))) (let ((?v_54 (or (and (not (or ?v_46 ?v_47)) ?v_53) (not (or ?v_53 (not (and ?v_8 ?v_47))))))) (let ((?v_55 (not ?v_54)) (?v_65 (not (or ?v_20 ?v_10)))) (let ((?v_57 (or (and (not (or ?v_44 ?v_45)) ?v_55) (or (and ?v_54 ?v_65) (not (or ?v_55 (not (and ?v_56 ?v_45))))))) (?v_67 (not (or P_9 (or P_10 ?v_20))))) (let ((?v_82 (not (and (not (and ?v_21 ?v_57)) (not (and ?v_67 (and P_4 ?v_54))))))) (let ((?v_79 (and (not (and ?v_43 ?v_57)) (not (and ?v_82 ?v_58))))) (let ((?v_68 (not (or ?v_79 ?v_59))) (?v_62 (not (or ?v_55 ?v_45))) (?v_60 (not (or ?v_53 ?v_47))) (?v_61 (not (or (not (or ?v_52 ?v_49)) (not (or ?v_19 ?v_27)))))) (let ((?v_64 (or (and ?v_60 ?v_61) (not (or ?v_60 ?v_61))))) (let ((?v_63 (not ?v_64))) (let ((?v_66 (not (and (or (not (or (and ?v_62 ?v_63) (not (or ?v_62 ?v_63)))) ?v_44) (not (and ?v_64 ?v_65))))) (?v_73 (and ?v_67 (and P_4 ?v_64)))) (let ((?v_76 (not (and (not (and ?v_21 ?v_66)) (not (and ?v_73 ?v_67)))))) (let ((?v_69 (and (not (and ?v_43 ?v_66)) (not (and ?v_76 ?v_58)))) (?v_75 (or P_11 (or P_12 ?v_71)))) (let ((?v_74 (and ?v_70 ?v_75))) (let ((?v_72 (not (and (or (not (or (and ?v_68 ?v_69) (not (or ?v_68 ?v_69)))) ?v_70) (not (and ?v_66 ?v_74))))) (?v_77 (not ?v_75)) (?v_81 (or (and (not (or ?v_70 ?v_59)) ?v_79) (or (and ?v_57 ?v_74) (not (or ?v_79 (not (and ?v_80 ?v_59))))))) (?v_105 (not P_14))) (let ((?v_83 (and (not (and (not (and ?v_42 ?v_72)) (not (and (not (and (not (and ?v_22 ?v_72)) (not (and (not (and (not (and ?v_73 ?v_74)) (not (and ?v_77 ?v_76)))) ?v_77)))) ?v_78)))) (not (or (and (not (and ?v_42 ?v_81)) (not (and (not (and (not (and ?v_22 ?v_81)) (not (and ?v_77 ?v_82)))) ?v_78))) ?v_105)))) (?v_84 (< (ite (< ?v_35 4) ?v_35 (- ?v_35 8)) 0))) (let ((?v_85 (not (and (or (and (not ?v_84) (not (and ?v_64 ?v_62))) ?v_44) (not (and ?v_84 ?v_65))))) (?v_95 (and ?v_67 ?v_84))) (let ((?v_89 (not (and (not (and ?v_21 ?v_85)) (not ?v_95))))) (let ((?v_87 (and (not (and ?v_43 ?v_85)) (not (and ?v_89 ?v_58)))) (?v_86 (and (not ?v_69) ?v_68))) (let ((?v_88 (not (and (or (and (not (and (not ?v_87) (not ?v_86))) (not (and ?v_86 ?v_87))) ?v_70) (not (and ?v_85 ?v_74))))) (?v_96 (not (and ?v_77 ?v_89)))) (let ((?v_99 (not (and (not (and ?v_22 ?v_88)) ?v_96))) (?v_98 (or P_13 (or ?v_91 ?v_92)))) (let ((?v_97 (and ?v_90 ?v_98))) (let ((?v_94 (not (and (or (and (not (and (< (ite (< ?v_41 4) ?v_41 (- ?v_41 8)) 0) (not ?v_83))) (not (and ?v_83 (and (not (and ?v_42 ?v_88)) (not (and ?v_99 ?v_78)))))) ?v_90) (not (and ?v_88 ?v_97))))) (?v_100 (not ?v_98)) (?v_106 (ite ?v_105 ?v_41 (+ ?v_41 1)))) (let ((?v_107 (ite (not P_13) ?v_106 0))) (let ((?v_108 (ite (not ?v_103) (ite (not (< (+ (ite ?v_24 (ite ?v_25 (ite ?v_15 (ite ?v_26 ?v_23 0) ?v_23) ?v_23) (ite ?v_15 (ite ?v_26 ?v_104 0) ?v_104)) 1) 4)) ?v_107 ?v_106) ?v_107))) (= (+ (* 4 dz) rz) (- (ite (not (and (not (and ?v_102 ?v_94)) (not (and (not (and (not (and ?v_93 ?v_94)) (not (and (not (and (not (and (not (and (not (and ?v_95 ?v_74)) ?v_96)) ?v_97)) (not (and ?v_100 ?v_99)))) (and ?v_100 ?v_101))))) (not ?v_102))))) 1 0) (ite (< (ite (< ?v_108 4) ?v_108 (- ?v_108 8)) 0) 1 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (> rz 0))
(assert (< rz 4))
(check-sat)
(exit)
