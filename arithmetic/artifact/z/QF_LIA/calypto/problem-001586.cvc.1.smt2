(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
    Sequential equivalence checking.
    Calypto Design Systems, Inc. <www.calypto.com>
  |)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun P_2 () Bool)
(declare-fun P_3 () Bool)
(declare-fun P_4 () Bool)
(declare-fun P_5 () Bool)
(declare-fun P_6 () Bool)
(declare-fun P_7 () Bool)
(declare-fun P_8 () Bool)
(declare-fun P_9 () Bool)
(declare-fun P_10 () Bool)
(declare-fun P_11 () Bool)
(declare-fun P_12 () Bool)
(declare-fun P_13 () Bool)
(declare-fun P_14 () Bool)
(declare-fun P_15 () Bool)
(declare-fun P_16 () Bool)
(declare-fun P_17 () Bool)
(declare-fun P_18 () Bool)
(declare-fun P_19 () Bool)
(declare-fun P_20 () Bool)
(declare-fun P_21 () Bool)
(declare-fun P_22 () Bool)
(declare-fun P_23 () Bool)
(declare-fun dz () Int)
(declare-fun rz () Int)
(assert (let ((?v_0 (not P_5))) (let ((?v_22 (and ?v_0 P_6)) (?v_1 (ite ?v_0 P_7 false))) (let ((?v_38 (not ?v_22)) (?v_19 (not P_4))) (let ((?v_61 (ite ?v_19 (ite ?v_38 ?v_1 true) ?v_1)) (?v_5 (not (and P_9 P_10)))) (let ((?v_60 (ite ?v_5 true false)) (?v_4 (not P_8)) (?v_3 (not (not ?v_61)))) (let ((?v_59 (ite ?v_3 false (ite ?v_4 ?v_60 true))) (?v_7 (not (and P_12 P_13)))) (let ((?v_58 (ite ?v_7 true false)) (?v_6 (not P_11)) (?v_2 (not ?v_59))) (let ((?v_57 (ite ?v_2 false (ite ?v_6 ?v_58 true))) (?v_27 (not ?v_1)) (?v_28 (and P_15 P_16)) (?v_39 (ite ?v_1 1 0))) (let ((?v_40 (+ ?v_39 1))) (let ((?v_8 (ite ?v_3 ?v_40 (ite (ite ?v_4 (ite ?v_5 ?v_1 false) ?v_1) 1 0)))) (let ((?v_24 (+ ?v_8 1))) (let ((?v_12 (ite ?v_2 ?v_24 (ite ?v_6 (ite ?v_7 ?v_8 0) ?v_8)))) (let ((?v_9 (+ ?v_12 1)) (?v_11 (not ?v_28)) (?v_10 (not P_14)) (?v_14 (not ?v_27)) (?v_13 (not ?v_57))) (let ((?v_114 (ite ?v_13 (ite ?v_14 (ite ?v_10 (ite ?v_11 ?v_9 0) ?v_9) ?v_9) (ite ?v_10 (ite ?v_11 ?v_12 0) ?v_12)))) (let ((?v_16 (+ ?v_114 1))) (let ((?v_32 (= ?v_16 2)) (?v_31 (= ?v_9 2)) (?v_56 (ite ?v_11 true false))) (let ((?v_15 (ite ?v_10 ?v_56 true))) (let ((?v_25 (ite ?v_13 (ite ?v_14 ?v_15 false) ?v_15)) (?v_26 (and P_18 P_19))) (let ((?v_37 (not ?v_26))) (let ((?v_70 (ite ?v_37 true false)) (?v_18 (not P_17))) (let ((?v_17 (ite ?v_18 ?v_70 true)) (?v_36 (not (< ?v_16 4))) (?v_35 (not ?v_25))) (let ((?v_113 (ite ?v_35 (ite ?v_36 ?v_17 false) ?v_17))) (let ((?v_20 (not (or ?v_31 ?v_113))) (?v_21 (not P_20)) (?v_94 (and P_21 P_22))) (let ((?v_23 (or ?v_94 (ite ?v_18 (ite ?v_10 (ite ?v_6 (ite ?v_4 (ite ?v_19 ?v_1 false) false) false) false) false)))) (let ((?v_103 (or P_20 (or ?v_23 ?v_20)))) (let ((?v_108 (not ?v_103)) (?v_33 (and P_2 P_3)) (?v_30 (= ?v_24 2))) (let ((?v_82 (not (or ?v_30 ?v_25))) (?v_29 (and ?v_13 ?v_27))) (let ((?v_55 (and (or ?v_29 (not (ite ?v_10 ?v_28 false))) (not ?v_29)))) (let ((?v_67 (not ?v_55))) (let ((?v_54 (and ?v_67 (not ?v_30)))) (let ((?v_69 (not ?v_54))) (let ((?v_81 (and (or ?v_82 (not (ite ?v_18 ?v_26 false))) ?v_69))) (let ((?v_91 (not ?v_81))) (let ((?v_53 (and ?v_91 (not ?v_31)))) (let ((?v_89 (not ?v_53))) (let ((?v_102 (and (or ?v_20 (or (not ?v_23) P_20)) ?v_89)) (?v_110 (not ?v_32))) (let ((?v_34 (and (not ?v_102) ?v_110))) (let ((?v_111 (not ?v_34)) (?v_112 (not ?v_33)) (?v_41 (ite ?v_38 ?v_39 ?v_40))) (let ((?v_42 (ite ?v_14 ?v_41 (ite ?v_19 ?v_41 0)))) (let ((?v_43 (ite ?v_5 ?v_42 (+ ?v_42 1)))) (let ((?v_44 (ite ?v_3 ?v_43 (ite ?v_4 ?v_43 0)))) (let ((?v_45 (ite ?v_7 ?v_44 (+ ?v_44 1)))) (let ((?v_46 (ite ?v_2 ?v_45 (ite ?v_6 ?v_45 0)))) (let ((?v_47 (ite ?v_11 ?v_46 (+ ?v_46 1)))) (let ((?v_48 (ite ?v_10 ?v_47 0))) (let ((?v_49 (ite ?v_13 (ite ?v_14 ?v_48 ?v_47) ?v_48))) (let ((?v_50 (ite ?v_37 ?v_49 (+ ?v_49 1)))) (let ((?v_51 (ite ?v_18 ?v_50 0))) (let ((?v_52 (ite ?v_35 (ite ?v_36 ?v_51 ?v_50) ?v_51)) (?v_62 (not (or ?v_59 ?v_60))) (?v_63 (not (ite ?v_14 (ite ?v_38 ?v_1 false) ?v_61)))) (let ((?v_64 (not (or (and ?v_62 ?v_63) (not (or ?v_62 ?v_63)))))) (let ((?v_65 (or (and (not (or ?v_57 ?v_58)) ?v_64) (not (or ?v_64 (not (and ?v_13 ?v_58))))))) (let ((?v_66 (not ?v_65)) (?v_76 (not (or ?v_29 ?v_10)))) (let ((?v_68 (or (and (not (or ?v_55 ?v_56)) ?v_66) (or (and ?v_65 ?v_76) (not (or ?v_66 (not (and ?v_67 ?v_56))))))) (?v_78 (not (or P_14 (or ?v_28 ?v_29))))) (let ((?v_93 (not (and (not (and ?v_30 ?v_68)) (not (and ?v_78 (and ?v_1 ?v_65))))))) (let ((?v_90 (and (not (and ?v_54 ?v_68)) (not (and ?v_93 ?v_69))))) (let ((?v_79 (not (or ?v_90 ?v_70))) (?v_73 (not (or ?v_66 ?v_56))) (?v_71 (not (or ?v_64 ?v_58))) (?v_72 (not (or (not (or ?v_63 ?v_60)) (not (or ?v_27 ?v_38)))))) (let ((?v_75 (or (and ?v_71 ?v_72) (not (or ?v_71 ?v_72))))) (let ((?v_74 (not ?v_75))) (let ((?v_77 (not (and (or (not (or (and ?v_73 ?v_74) (not (or ?v_73 ?v_74)))) ?v_55) (not (and ?v_75 ?v_76))))) (?v_84 (and ?v_78 (and ?v_1 ?v_75)))) (let ((?v_87 (not (and (not (and ?v_30 ?v_77)) (not (and ?v_84 ?v_78)))))) (let ((?v_80 (and (not (and ?v_54 ?v_77)) (not (and ?v_87 ?v_69)))) (?v_86 (or P_17 (or ?v_26 ?v_82)))) (let ((?v_85 (and ?v_81 ?v_86))) (let ((?v_83 (not (and (or (not (or (and ?v_79 ?v_80) (not (or ?v_79 ?v_80)))) ?v_81) (not (and ?v_77 ?v_85))))) (?v_88 (not ?v_86)) (?v_92 (or (and (not (or ?v_81 ?v_70)) ?v_90) (or (and ?v_68 ?v_85) (not (or ?v_90 (not (and ?v_91 ?v_70))))))) (?v_115 (not ?v_94))) (let ((?v_95 (and (not (and (not (and ?v_53 ?v_83)) (not (and (not (and (not (and ?v_31 ?v_83)) (not (and (not (and (not (and ?v_84 ?v_85)) (not (and ?v_88 ?v_87)))) ?v_88)))) ?v_89)))) (not (or (and (not (and ?v_53 ?v_92)) (not (and (not (and (not (and ?v_31 ?v_92)) (not (and ?v_88 ?v_93)))) ?v_89))) ?v_115)))) (?v_96 (< (ite (< ?v_46 4) ?v_46 (- ?v_46 8)) 0))) (let ((?v_97 (not (and (or (and (not ?v_96) (not (and ?v_75 ?v_73))) ?v_55) (not (and ?v_96 ?v_76))))) (?v_105 (and ?v_78 ?v_96))) (let ((?v_101 (not (and (not (and ?v_30 ?v_97)) (not ?v_105))))) (let ((?v_99 (and (not (and ?v_54 ?v_97)) (not (and ?v_101 ?v_69)))) (?v_98 (and (not ?v_80) ?v_79))) (let ((?v_100 (not (and (or (and (not (and (not ?v_99) (not ?v_98))) (not (and ?v_98 ?v_99))) ?v_81) (not (and ?v_97 ?v_85))))) (?v_106 (not (and ?v_88 ?v_101)))) (let ((?v_109 (not (and (not (and ?v_31 ?v_100)) ?v_106))) (?v_107 (and ?v_102 ?v_103))) (let ((?v_104 (not (and (or (and (not (and (< (ite (< ?v_52 4) ?v_52 (- ?v_52 8)) 0) (not ?v_95))) (not (and ?v_95 (and (not (and ?v_53 ?v_100)) (not (and ?v_109 ?v_89)))))) ?v_102) (not (and ?v_100 ?v_107))))) (?v_116 (ite ?v_115 ?v_52 (+ ?v_52 1)))) (let ((?v_117 (ite ?v_21 ?v_116 0))) (let ((?v_118 (ite (not ?v_113) (ite (not (< (+ (ite ?v_35 (ite ?v_36 (ite ?v_18 (ite ?v_37 ?v_16 0) ?v_16) ?v_16) (ite ?v_18 (ite ?v_37 ?v_114 0) ?v_114)) 1) 4)) ?v_117 ?v_116) ?v_117))) (= (+ (* 128 dz) rz) (- (ite (not (or (or (and (or (not (or ?v_32 (or (not (or ?v_20 ?v_21)) ?v_108))) (or (not (or ?v_33 (ite ?v_21 (ite ?v_18 (ite ?v_10 (ite ?v_6 (ite ?v_4 (ite ?v_19 ?v_22 false) false) false) false) false) false))) P_23)) ?v_111) ?v_112) (and (not (and ?v_34 ?v_104)) (not (and (not (and (not (and ?v_32 ?v_104)) (not (and (not (and (not (and (not (and (not (and ?v_105 ?v_85)) ?v_106)) ?v_107)) (not (and ?v_108 ?v_109)))) (and ?v_108 ?v_110))))) ?v_111))))) 1 0) (ite (ite ?v_112 false (< (ite (< ?v_118 4) ?v_118 (- ?v_118 8)) 0)) 1 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(assert (> rz 0))
(assert (< rz 128))
(check-sat)
(exit)
