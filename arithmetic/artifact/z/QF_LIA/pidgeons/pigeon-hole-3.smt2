(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun p_0_0 () Int)
(declare-fun p_0_1 () Int)
(declare-fun p_0_2 () Int)
(declare-fun p_1_0 () Int)
(declare-fun p_1_1 () Int)
(declare-fun p_1_2 () Int)
(declare-fun p_2_0 () Int)
(declare-fun p_2_1 () Int)
(declare-fun p_2_2 () Int)
(declare-fun p_3_0 () Int)
(declare-fun p_3_1 () Int)
(declare-fun p_3_2 () Int)
(assert (>= p_0_0 0))
(assert (<= p_0_0 1))
(assert (>= p_0_1 0))
(assert (<= p_0_1 1))
(assert (>= p_0_2 0))
(assert (<= p_0_2 1))
(assert (>= p_1_0 0))
(assert (<= p_1_0 1))
(assert (>= p_1_1 0))
(assert (<= p_1_1 1))
(assert (>= p_1_2 0))
(assert (<= p_1_2 1))
(assert (>= p_2_0 0))
(assert (<= p_2_0 1))
(assert (>= p_2_1 0))
(assert (<= p_2_1 1))
(assert (>= p_2_2 0))
(assert (<= p_2_2 1))
(assert (>= p_3_0 0))
(assert (<= p_3_0 1))
(assert (>= p_3_1 0))
(assert (<= p_3_1 1))
(assert (>= p_3_2 0))
(assert (<= p_3_2 1))
(assert (>= (+ p_0_0 p_0_1 p_0_2) 1))
(assert (>= (+ p_1_0 p_1_1 p_1_2) 1))
(assert (>= (+ p_2_0 p_2_1 p_2_2) 1))
(assert (>= (+ p_3_0 p_3_1 p_3_2) 1))
(assert (<= (+ p_0_0 p_1_0 p_2_0 p_3_0) 1))
(assert (<= (+ p_0_1 p_1_1 p_2_1 p_3_1) 1))
(assert (<= (+ p_0_2 p_1_2 p_2_2 p_3_2) 1))
(check-sat)
(exit)
