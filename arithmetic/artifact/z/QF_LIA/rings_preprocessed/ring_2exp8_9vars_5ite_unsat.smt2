(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Alberto Griggio

|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun v0 () Int)
(declare-fun v1 () Int)
(declare-fun v2 () Int)
(declare-fun v3 () Int)
(declare-fun v4 () Int)
(declare-fun v5 () Int)
(declare-fun v6 () Int)
(declare-fun v7 () Int)
(declare-fun v8 () Int)
(declare-fun o_0 () Int)
(declare-fun s_2 () Int)
(declare-fun o_1 () Int)
(declare-fun s_3 () Int)
(declare-fun s_4 () Int)
(declare-fun o_2 () Int)
(declare-fun s_5 () Int)
(declare-fun s_6 () Int)
(declare-fun o_3 () Int)
(declare-fun s_7 () Int)
(declare-fun o_4 () Int)
(declare-fun o_5 () Int)
(declare-fun o_6 () Int)
(declare-fun o_7 () Int)
(declare-fun o_8 () Int)
(declare-fun o_9 () Int)
(declare-fun o_10 () Int)
(declare-fun s_11 () Int)
(declare-fun o_11 () Int)
(declare-fun s_12 () Int)
(declare-fun o_12 () Int)
(declare-fun s_13 () Int)
(declare-fun o_13 () Int)
(declare-fun s_14 () Int)
(declare-fun o_14 () Int)
(declare-fun s_15 () Int)
(declare-fun o_15 () Int)
(declare-fun A_itev1 () Int)
(declare-fun A_itev2 () Int)
(declare-fun A_itev3 () Int)
(declare-fun A_itev4 () Int)
(declare-fun A_itev5 () Int)
(declare-fun A_itev6 () Int)
(declare-fun A_itev7 () Int)
(declare-fun A_itev8 () Int)
(declare-fun A_itev9 () Int)
(declare-fun A_itev10 () Int)
(declare-fun A_itev11 () Int)
(declare-fun A_itev12 () Int)
(assert (let ((?v_74 (* v8 256))) (let ((?v_79 (+ (+ (* v7 128) ?v_74) (* v6 64))) (?v_120 (* A_itev6 32)) (?v_30 (* v1 2)) (?v_38 (* v2 4)) (?v_69 (* v3 8)) (?v_81 (* v4 16)) (?v_80 (* v5 32)) (?v_115 (* A_itev6 16)) (?v_110 (* A_itev6 8)) (?v_105 (* A_itev6 4)) (?v_100 (* A_itev6 2)) (?v_97 (* v5 2)) (?v_62 (* v7 2)) (?v_1 (<= 256 v8))) (let ((?v_50 (not ?v_1)) (?v_35 (<= 256 v2))) (let ((?v_49 (not ?v_35)) (?v_27 (<= 256 v1))) (let ((?v_48 (not ?v_27)) (?v_47 (= A_itev12 A_itev11)) (?v_46 (= (+ (- A_itev12) ?v_38) 0)) (?v_45 (<= 64 v2)) (?v_44 (= A_itev11 A_itev10)) (?v_43 (= (+ (- A_itev11) ?v_38) 256)) (?v_42 (<= 128 v2)) (?v_41 (= A_itev10 A_itev9)) (?v_40 (= (+ (- A_itev10) ?v_38) 512)) (?v_39 (<= 192 v2)) (?v_34 (+ (- A_itev9) ?v_38))) (let ((?v_37 (= ?v_34 768)) (?v_36 (= ?v_34 1024)) (?v_33 (= A_itev8 A_itev7)) (?v_32 (= (+ (- A_itev8) ?v_30) 0)) (?v_31 (<= 128 v1)) (?v_26 (+ (- A_itev7) ?v_30))) (let ((?v_29 (= ?v_26 256)) (?v_28 (= ?v_26 512)) (?v_25 (= A_itev6 A_itev5)) (?v_16 (= A_itev4 A_itev3)) (?v_7 (= A_itev2 A_itev1)) (?v_4 (* v8 2))) (let ((?v_6 (= (+ (- A_itev2) ?v_4) 0)) (?v_5 (<= 128 v8)) (?v_0 (+ (- A_itev1) ?v_4))) (let ((?v_3 (= ?v_0 256)) (?v_2 (= ?v_0 512)) (?v_13 (+ (+ (* o_8 (- 512)) ?v_62) (* A_itev2 2)))) (let ((?v_8 (+ (- A_itev3) ?v_13))) (let ((?v_11 (= ?v_8 256)) (?v_12 (+ (+ (* o_8 (- 256)) v7) A_itev2))) (let ((?v_9 (<= 256 ?v_12)) (?v_10 (= ?v_8 512))) (let ((?v_92 (not ?v_9)) (?v_14 (<= 128 ?v_12)) (?v_15 (= (+ ?v_13 (- A_itev4)) 0)) (?v_22 (+ (+ (* o_9 (- 512)) (* v6 2)) (* A_itev4 2)))) (let ((?v_17 (+ (- A_itev5) ?v_22))) (let ((?v_20 (= ?v_17 256)) (?v_21 (+ (+ (* o_9 (- 256)) v6) A_itev4))) (let ((?v_18 (<= 256 ?v_21)) (?v_19 (= ?v_17 512))) (let ((?v_93 (not ?v_18)) (?v_23 (<= 128 ?v_21)) (?v_24 (= (+ ?v_22 (- A_itev6)) 0)) (?v_66 (* o_0 (- 256)))) (let ((?v_51 (+ (+ ?v_66 v0) A_itev8)) (?v_52 (+ (* s_2 (- 32)) v3)) (?v_70 (* s_2 (- 256)))) (let ((?v_54 (+ ?v_70 ?v_69)) (?v_71 (* o_1 (- 256)))) (let ((?v_53 (+ (+ ?v_54 ?v_71) A_itev12)) (?v_57 (* s_3 (- 16)))) (let ((?v_55 (+ ?v_57 v4)) (?v_56 (+ (* s_4 (- 8)) v5)) (?v_59 (+ (+ (+ ?v_97 v4) (* s_4 (- 16))) ?v_57))) (let ((?v_58 (+ (* o_2 (- 16)) ?v_59)) (?v_63 (* s_5 (- 4)))) (let ((?v_60 (+ ?v_63 v6)) (?v_61 (+ (* s_6 (- 2)) v7)) (?v_65 (+ (+ (+ ?v_62 v6) (* s_6 (- 4))) ?v_63))) (let ((?v_64 (+ (* o_3 (- 4)) ?v_65)) (?v_75 (* s_7 (- 256)))) (let ((?v_68 (+ (+ (+ ?v_74 v0) ?v_75) ?v_66)) (?v_76 (* o_4 (- 256)))) (let ((?v_67 (+ (+ ?v_68 ?v_76) A_itev8)) (?v_86 (* s_4 (- 256))) (?v_87 (* s_3 (- 256))) (?v_88 (* o_2 (- 256)))) (let ((?v_73 (+ (+ (+ (+ (+ (+ (+ ?v_81 ?v_80) ?v_69) ?v_86) ?v_87) ?v_88) ?v_70) ?v_71)) (?v_89 (* o_5 (- 256)))) (let ((?v_72 (+ (+ ?v_73 ?v_89) A_itev12)) (?v_82 (* s_6 (- 256))) (?v_83 (* s_5 (- 256))) (?v_84 (* o_3 (- 256)))) (let ((?v_78 (+ (+ (+ (+ (+ (+ (+ ?v_79 v0) ?v_75) ?v_66) ?v_76) ?v_82) ?v_83) ?v_84)) (?v_85 (* o_6 (- 256)))) (let ((?v_77 (+ (+ ?v_78 ?v_85) A_itev8)) (?v_91 (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ ?v_79 ?v_80) ?v_81) ?v_69) v0) ?v_75) ?v_66) ?v_76) ?v_82) ?v_83) ?v_84) ?v_85) ?v_86) ?v_87) ?v_88) ?v_70) ?v_71) ?v_89)) (?v_121 (* o_7 (- 256)))) (let ((?v_90 (+ (+ (+ ?v_91 ?v_121) A_itev8) A_itev12)) (?v_95 (+ (* o_10 (- 256)) v5))) (let ((?v_94 (+ ?v_95 A_itev6)) (?v_96 (+ (+ (* s_11 (- 128)) ?v_95) A_itev6)) (?v_99 (+ (+ (+ (* o_10 (- 512)) ?v_97) (* s_11 (- 256))) v4))) (let ((?v_101 (+ ?v_99 (* o_11 (- 256))))) (let ((?v_98 (+ ?v_101 ?v_100)) (?v_102 (+ (+ (* s_12 (- 128)) ?v_101) ?v_100)) (?v_104 (+ (+ (+ (+ (+ (+ (* o_10 (- 1024)) (* v5 4)) (* s_11 (- 512))) (* v4 2)) (* o_11 (- 512))) (* s_12 (- 256))) v3))) (let ((?v_106 (+ ?v_104 (* o_12 (- 256))))) (let ((?v_103 (+ ?v_106 ?v_105)) (?v_107 (+ (+ (* s_13 (- 128)) ?v_106) ?v_105)) (?v_109 (+ (+ (+ (+ (+ (+ (+ (+ (+ (* o_10 (- 2048)) (* v5 8)) (* s_11 (- 1024))) (* v4 4)) (* o_11 (- 1024))) (* s_12 (- 512))) (* v3 2)) (* o_12 (- 512))) (* s_13 (- 256))) v2))) (let ((?v_111 (+ ?v_109 (* o_13 (- 256))))) (let ((?v_108 (+ ?v_111 ?v_110)) (?v_112 (+ (+ (* s_14 (- 128)) ?v_111) ?v_110)) (?v_114 (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (* o_10 (- 4096)) (* v5 16)) (* s_11 (- 2048))) (* v4 8)) (* o_11 (- 2048))) (* s_12 (- 1024))) (* v3 4)) (* o_12 (- 1024))) (* s_13 (- 512))) (* v2 2)) (* o_13 (- 512))) (* s_14 (- 256))) v1))) (let ((?v_116 (+ ?v_114 (* o_14 (- 256))))) (let ((?v_113 (+ ?v_116 ?v_115)) (?v_117 (+ (+ (* s_15 (- 128)) ?v_116) ?v_115)) (?v_119 (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (* o_10 (- 8192)) ?v_80) (* s_11 (- 4096))) ?v_81) (* o_11 (- 4096))) (* s_12 (- 2048))) ?v_69) (* o_12 (- 2048))) (* s_13 (- 1024))) ?v_38) (* o_13 (- 1024))) (* s_14 (- 512))) ?v_30) (* o_14 (- 512))) (* s_15 (- 256))) v0))) (let ((?v_118 (+ (+ (* o_15 (- 256)) ?v_119) ?v_120))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (or ?v_2 ?v_50) (or ?v_3 ?v_1)) (or ?v_2 ?v_3)) (or ?v_5 ?v_6)) (or (not ?v_5) ?v_7)) (or ?v_6 ?v_7)) (or ?v_11 ?v_9)) (or ?v_10 ?v_92)) (or ?v_10 ?v_11)) (or ?v_14 ?v_15)) (or (not ?v_14) ?v_16)) (or ?v_15 ?v_16)) (or ?v_20 ?v_18)) (or ?v_19 ?v_93)) (or ?v_19 ?v_20)) (or ?v_23 ?v_24)) (or (not ?v_23) ?v_25)) (or ?v_24 ?v_25)) (or ?v_29 ?v_27)) (or ?v_28 ?v_48)) (or ?v_28 ?v_29)) (or ?v_31 ?v_32)) (or (not ?v_31) ?v_33)) (or ?v_32 ?v_33)) (or ?v_37 ?v_35)) (or ?v_36 ?v_49)) (or ?v_36 ?v_37)) (or ?v_39 ?v_40)) (or (not ?v_39) ?v_41)) (or ?v_40 ?v_41)) (or ?v_42 ?v_43)) (or (not ?v_42) ?v_44)) (or ?v_43 ?v_44)) (or ?v_45 ?v_46)) (or (not ?v_45) ?v_47)) (or ?v_46 ?v_47)) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (<= 0 v0) (not (<= 256 v0))) (and (<= 0 v1) ?v_48)) (and (<= 0 v2) ?v_49)) (and (<= 0 v3) (not (<= 256 v3)))) (and (<= 0 v4) (not (<= 256 v4)))) (and (<= 0 v5) (not (<= 256 v5)))) (and (<= 0 v6) (not (<= 256 v6)))) (and (<= 0 v7) (not (<= 256 v7)))) (and (<= 0 v8) ?v_50)) (and (<= 0 o_0) (<= o_0 1))) (and (<= 0 ?v_51) (not (<= 256 ?v_51)))) (= (not (<= (+ A_itev8 v0) 256)) (= o_0 1))) (and (not (<= 8 s_2)) (<= 0 s_2))) (and (<= 0 ?v_52) (not (<= 32 ?v_52)))) (= (<= 1 s_2) (not (<= v3 32)))) (and (<= 0 o_1) (<= o_1 1))) (and (<= 0 ?v_53) (not (<= 256 ?v_53)))) (= (not (<= (+ ?v_54 A_itev12) 256)) (= o_1 1))) (and (not (<= 16 s_3)) (<= 0 s_3))) (and (<= 0 ?v_55) (not (<= 16 ?v_55)))) (= (<= 1 s_3) (not (<= v4 16)))) (and (not (<= 32 s_4)) (<= 0 s_4))) (and (<= 0 ?v_56) (not (<= 8 ?v_56)))) (= (<= 1 s_4) (not (<= v5 8)))) (and (<= 0 o_2) (<= o_2 1))) (and (<= 0 ?v_58) (not (<= 16 ?v_58)))) (= (not (<= ?v_59 16)) (= o_2 1))) (and (not (<= 64 s_5)) (<= 0 s_5))) (and (<= 0 ?v_60) (not (<= 4 ?v_60)))) (= (<= 1 s_5) (not (<= v6 4)))) (and (not (<= 128 s_6)) (<= 0 s_6))) (and (<= 0 ?v_61) (not (<= 2 ?v_61)))) (= (<= 1 s_6) (not (<= v7 2)))) (and (<= 0 o_3) (<= o_3 1))) (and (<= 0 ?v_64) (not (<= 4 ?v_64)))) (= (not (<= ?v_65 4)) (= o_3 1))) (and (not (<= 256 s_7)) (<= 0 s_7))) (and (<= s_7 v8) (not (<= 1 (- v8 s_7))))) (= (<= 1 s_7) (not (<= v8 1)))) (and (<= 0 o_4) (<= o_4 1))) (and (<= 0 ?v_67) (not (<= 256 ?v_67)))) (= (not (<= (+ ?v_68 A_itev8) 256)) (= o_4 1))) (and (<= 0 o_5) (<= o_5 1))) (and (<= 0 ?v_72) (not (<= 256 ?v_72)))) (= (not (<= (+ ?v_73 A_itev12) 256)) (= o_5 1))) (and (<= 0 o_6) (<= o_6 1))) (and (<= 0 ?v_77) (not (<= 256 ?v_77)))) (= (not (<= (+ ?v_78 A_itev8) 256)) (= o_6 1))) (and (<= 0 o_7) (<= o_7 1))) (and (<= 0 ?v_90) (not (<= 256 ?v_90)))) (= (not (<= (+ (+ ?v_91 A_itev8) A_itev12) 256)) (= o_7 1))) (and (<= 0 o_8) (<= o_8 1))) (and (<= 0 ?v_12) ?v_92)) (= (not (<= (+ A_itev2 v7) 256)) (= o_8 1))) (and (<= 0 o_9) (<= o_9 1))) (and (<= 0 ?v_21) ?v_93)) (= (not (<= (+ A_itev4 v6) 256)) (= o_9 1))) (and (<= 0 o_10) (<= o_10 1))) (and (<= 0 ?v_94) (not (<= 256 ?v_94)))) (= (not (<= (+ A_itev6 v5) 256)) (= o_10 1))) (and (not (<= 2 s_11)) (<= 0 s_11))) (and (<= 0 ?v_96) (not (<= 128 ?v_96)))) (= (<= 1 s_11) (not (<= ?v_94 128)))) (and (<= 0 o_11) (<= o_11 1))) (and (<= 0 ?v_98) (not (<= 256 ?v_98)))) (= (not (<= (+ ?v_99 ?v_100) 256)) (= o_11 1))) (and (not (<= 2 s_12)) (<= 0 s_12))) (and (<= 0 ?v_102) (not (<= 128 ?v_102)))) (= (<= 1 s_12) (not (<= ?v_98 128)))) (and (<= 0 o_12) (<= o_12 1))) (and (<= 0 ?v_103) (not (<= 256 ?v_103)))) (= (not (<= (+ ?v_104 ?v_105) 256)) (= o_12 1))) (and (not (<= 2 s_13)) (<= 0 s_13))) (and (<= 0 ?v_107) (not (<= 128 ?v_107)))) (= (<= 1 s_13) (not (<= ?v_103 128)))) (and (<= 0 o_13) (<= o_13 1))) (and (<= 0 ?v_108) (not (<= 256 ?v_108)))) (= (not (<= (+ ?v_109 ?v_110) 256)) (= o_13 1))) (and (not (<= 2 s_14)) (<= 0 s_14))) (and (<= 0 ?v_112) (not (<= 128 ?v_112)))) (= (<= 1 s_14) (not (<= ?v_108 128)))) (and (<= 0 o_14) (<= o_14 1))) (and (<= 0 ?v_113) (not (<= 256 ?v_113)))) (= (not (<= (+ ?v_114 ?v_115) 256)) (= o_14 1))) (and (not (<= 2 s_15)) (<= 0 s_15))) (and (<= 0 ?v_117) (not (<= 128 ?v_117)))) (= (<= 1 s_15) (not (<= ?v_113 128)))) (and (<= 0 o_15) (<= o_15 1))) (and (<= 0 ?v_118) (not (<= 256 ?v_118)))) (= (not (<= (+ ?v_119 ?v_120) 256)) (= o_15 1))) (not (= (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ ?v_79 (* o_10 8192)) (* s_11 4096)) (* o_11 4096)) (* s_12 2048)) (* o_12 2048)) (* s_13 1024)) (* v2 (- 4))) (* o_13 1024)) (* s_14 512)) (* v1 (- 2))) (* o_14 512)) (* s_15 256)) (* o_15 256)) ?v_75) ?v_66) ?v_76) ?v_82) ?v_83) ?v_84) ?v_85) ?v_86) ?v_87) ?v_88) ?v_70) ?v_71) ?v_89) ?v_121) (* A_itev6 (- 32))) A_itev8) A_itev12) 0))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
