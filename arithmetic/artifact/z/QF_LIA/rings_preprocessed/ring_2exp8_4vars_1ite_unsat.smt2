(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Alberto Griggio

|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun v0 () Int)
(declare-fun v1 () Int)
(declare-fun v2 () Int)
(declare-fun v3 () Int)
(declare-fun s_0 () Int)
(declare-fun o_0 () Int)
(declare-fun s_1 () Int)
(declare-fun s_2 () Int)
(declare-fun o_1 () Int)
(declare-fun o_2 () Int)
(declare-fun o_3 () Int)
(declare-fun s_4 () Int)
(declare-fun o_4 () Int)
(declare-fun s_5 () Int)
(declare-fun o_5 () Int)
(declare-fun A_itev1 () Int)
(declare-fun A_itev2 () Int)
(assert (let ((?v_36 (- A_itev2)) (?v_4 (* v3 2)) (?v_33 (* A_itev2 4)) (?v_17 (* v1 2)) (?v_30 (* v2 4)) (?v_27 (* A_itev2 2)) (?v_1 (<= 256 v3))) (let ((?v_8 (not ?v_1)) (?v_7 (= A_itev2 A_itev1)) (?v_6 (= (+ ?v_36 ?v_4) 0)) (?v_5 (<= 128 v3)) (?v_0 (+ (- A_itev1) ?v_4))) (let ((?v_3 (= ?v_0 256)) (?v_2 (= ?v_0 512)) (?v_9 (+ (* s_0 (- 128)) v1)) (?v_18 (* s_0 (- 256)))) (let ((?v_11 (+ (+ ?v_17 v0) ?v_18)) (?v_19 (* o_0 (- 256)))) (let ((?v_10 (+ ?v_11 ?v_19)) (?v_14 (* s_1 (- 64)))) (let ((?v_12 (+ ?v_14 v2)) (?v_13 (+ (* s_2 (- 32)) v3)) (?v_34 (* s_2 (- 64)))) (let ((?v_16 (+ (+ (+ v2 ?v_4) ?v_34) ?v_14)) (?v_35 (* o_1 (- 64)))) (let ((?v_15 (+ ?v_16 ?v_35)) (?v_21 (+ (+ (+ (+ (+ (+ (+ (+ ?v_30 (* v3 8)) ?v_17) v0) (* s_2 (- 256))) (* s_1 (- 256))) (* o_1 (- 256))) ?v_18) ?v_19))) (let ((?v_20 (+ (* o_2 (- 256)) ?v_21)) (?v_23 (+ (* o_3 (- 256)) v2))) (let ((?v_22 (+ ?v_23 A_itev2)) (?v_24 (+ (+ (* s_4 (- 128)) ?v_23) A_itev2)) (?v_26 (+ (+ (+ (* o_3 (- 512)) (* v2 2)) (* s_4 (- 256))) v1))) (let ((?v_28 (+ ?v_26 (* o_4 (- 256))))) (let ((?v_25 (+ ?v_28 ?v_27)) (?v_29 (+ (+ (* s_5 (- 128)) ?v_28) ?v_27)) (?v_32 (+ (+ (+ (+ (+ (+ (* o_3 (- 1024)) ?v_30) (* s_4 (- 512))) ?v_17) (* o_4 (- 512))) (* s_5 (- 256))) v0))) (let ((?v_31 (+ (+ (* o_5 (- 256)) ?v_32) ?v_33))) (and (and (and (and (and (and (or ?v_2 ?v_8) (or ?v_3 ?v_1)) (or ?v_2 ?v_3)) (or ?v_5 ?v_6)) (or (not ?v_5) ?v_7)) (or ?v_6 ?v_7)) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (<= 0 v0) (not (<= 256 v0))) (and (<= 0 v1) (not (<= 256 v1)))) (and (<= 0 v2) (not (<= 256 v2)))) (and (<= 0 v3) ?v_8)) (and (not (<= 2 s_0)) (<= 0 s_0))) (and (<= 0 ?v_9) (not (<= 128 ?v_9)))) (= (<= 1 s_0) (not (<= v1 128)))) (and (<= 0 o_0) (<= o_0 1))) (and (<= 0 ?v_10) (not (<= 256 ?v_10)))) (= (not (<= ?v_11 256)) (= o_0 1))) (and (not (<= 4 s_1)) (<= 0 s_1))) (and (<= 0 ?v_12) (not (<= 64 ?v_12)))) (= (<= 1 s_1) (not (<= v2 64)))) (and (not (<= 8 s_2)) (<= 0 s_2))) (and (<= 0 ?v_13) (not (<= 32 ?v_13)))) (= (<= 1 s_2) (not (<= v3 32)))) (and (<= 0 o_1) (<= o_1 1))) (and (<= 0 ?v_15) (not (<= 64 ?v_15)))) (= (not (<= ?v_16 64)) (= o_1 1))) (and (<= 0 o_2) (<= o_2 1))) (and (<= 0 ?v_20) (not (<= 256 ?v_20)))) (= (not (<= ?v_21 256)) (= o_2 1))) (and (<= 0 o_3) (<= o_3 1))) (and (<= 0 ?v_22) (not (<= 256 ?v_22)))) (= (not (<= (+ A_itev2 v2) 256)) (= o_3 1))) (and (not (<= 2 s_4)) (<= 0 s_4))) (and (<= 0 ?v_24) (not (<= 128 ?v_24)))) (= (<= 1 s_4) (not (<= ?v_22 128)))) (and (<= 0 o_4) (<= o_4 1))) (and (<= 0 ?v_25) (not (<= 256 ?v_25)))) (= (not (<= (+ ?v_26 ?v_27) 256)) (= o_4 1))) (and (not (<= 2 s_5)) (<= 0 s_5))) (and (<= 0 ?v_29) (not (<= 128 ?v_29)))) (= (<= 1 s_5) (not (<= ?v_25 128)))) (and (<= 0 o_5) (<= o_5 1))) (and (<= 0 ?v_31) (not (<= 256 ?v_31)))) (= (not (<= (+ ?v_32 ?v_33) 256)) (= o_5 1))) (not (= (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (* o_3 256) ?v_4) (* s_4 128)) (* o_4 128)) (* s_5 64)) (* o_5 64)) ?v_34) ?v_14) ?v_35) (* s_0 (- 64))) (* o_0 (- 64))) (* o_2 (- 64))) ?v_36) 0))))))))))))))))))
(check-sat)
(exit)
