(set-info :smt-lib-version 2.6)
(set-logic QF_LIA)
(set-info :source |
Alberto Griggio

|)
(set-info :category "crafted")
(set-info :status unsat)
(declare-fun v0 () Int)
(declare-fun v1 () Int)
(declare-fun v2 () Int)
(declare-fun v3 () Int)
(declare-fun v4 () Int)
(declare-fun v5 () Int)
(declare-fun o_0 () Int)
(declare-fun s_2 () Int)
(declare-fun o_1 () Int)
(declare-fun s_3 () Int)
(declare-fun s_4 () Int)
(declare-fun o_2 () Int)
(declare-fun o_3 () Int)
(declare-fun o_4 () Int)
(declare-fun o_5 () Int)
(declare-fun o_6 () Int)
(declare-fun o_7 () Int)
(declare-fun s_8 () Int)
(declare-fun o_8 () Int)
(declare-fun s_9 () Int)
(declare-fun o_9 () Int)
(declare-fun A_itev1 () Int)
(declare-fun A_itev2 () Int)
(declare-fun A_itev3 () Int)
(declare-fun A_itev4 () Int)
(declare-fun A_itev5 () Int)
(declare-fun A_itev6 () Int)
(declare-fun A_itev7 () Int)
(declare-fun A_itev8 () Int)
(declare-fun A_itev9 () Int)
(declare-fun A_itev10 () Int)
(declare-fun A_itev11 () Int)
(declare-fun A_itev12 () Int)
(assert (let ((?v_60 (* v3 8))) (let ((?v_82 (+ (+ (* v4 16) (* v5 32)) ?v_60)) (?v_81 (* A_itev6 4)) (?v_44 (* v1 2)) (?v_30 (* v2 4)) (?v_76 (* A_itev6 2)) (?v_4 (* v5 2)) (?v_1 (<= 4096 v5))) (let ((?v_50 (not ?v_1)) (?v_27 (<= 4096 v2))) (let ((?v_49 (not ?v_27)) (?v_41 (<= 4096 v1))) (let ((?v_48 (not ?v_41)) (?v_47 (= A_itev12 A_itev11)) (?v_46 (= (+ (- A_itev12) ?v_44) 0)) (?v_45 (<= 2048 v1)) (?v_40 (+ (- A_itev11) ?v_44))) (let ((?v_43 (= ?v_40 4096)) (?v_42 (= ?v_40 8192)) (?v_39 (= A_itev10 A_itev9)) (?v_38 (= (+ (- A_itev10) ?v_30) 0)) (?v_37 (<= 1024 v2)) (?v_36 (= A_itev9 A_itev8)) (?v_35 (= (+ (- A_itev9) ?v_30) 4096)) (?v_34 (<= 2048 v2)) (?v_33 (= A_itev8 A_itev7)) (?v_32 (= (+ (- A_itev8) ?v_30) 8192)) (?v_31 (<= 3072 v2)) (?v_26 (+ (- A_itev7) ?v_30))) (let ((?v_29 (= ?v_26 12288)) (?v_28 (= ?v_26 16384)) (?v_25 (= A_itev6 A_itev5)) (?v_16 (= A_itev4 A_itev3)) (?v_7 (= A_itev2 A_itev1)) (?v_6 (= (+ (- A_itev2) ?v_4) 0)) (?v_5 (<= 2048 v5)) (?v_0 (+ (- A_itev1) ?v_4))) (let ((?v_3 (= ?v_0 4096)) (?v_2 (= ?v_0 8192)) (?v_13 (+ (+ (* o_5 (- 8192)) (* v4 2)) (* A_itev2 2)))) (let ((?v_8 (+ (- A_itev3) ?v_13))) (let ((?v_11 (= ?v_8 4096)) (?v_12 (+ (+ (* o_5 (- 4096)) v4) A_itev2))) (let ((?v_9 (<= 4096 ?v_12)) (?v_10 (= ?v_8 8192))) (let ((?v_69 (not ?v_9)) (?v_14 (<= 2048 ?v_12)) (?v_15 (= (+ ?v_13 (- A_itev4)) 0)) (?v_22 (+ (+ (* o_6 (- 8192)) (* v3 2)) (* A_itev4 2)))) (let ((?v_17 (+ (- A_itev5) ?v_22))) (let ((?v_20 (= ?v_17 4096)) (?v_21 (+ (+ (* o_6 (- 4096)) v3) A_itev4))) (let ((?v_18 (<= 4096 ?v_21)) (?v_19 (= ?v_17 8192))) (let ((?v_70 (not ?v_18)) (?v_23 (<= 2048 ?v_21)) (?v_24 (= (+ ?v_22 (- A_itev6)) 0)) (?v_63 (* o_0 (- 4096)))) (let ((?v_51 (+ (+ ?v_63 v0) A_itev12)) (?v_52 (+ (* s_2 (- 512)) v3)) (?v_61 (* s_2 (- 4096)))) (let ((?v_54 (+ ?v_61 ?v_60)) (?v_62 (* o_1 (- 4096)))) (let ((?v_53 (+ (+ ?v_54 ?v_62) A_itev10)) (?v_57 (* s_3 (- 256)))) (let ((?v_55 (+ ?v_57 v4)) (?v_56 (+ (* s_4 (- 128)) v5)) (?v_59 (+ (+ (+ v4 ?v_4) (* s_4 (- 256))) ?v_57))) (let ((?v_58 (+ (* o_2 (- 256)) ?v_59)) (?v_65 (+ (+ (+ (+ ?v_60 v0) ?v_61) ?v_62) ?v_63)) (?v_66 (* o_3 (- 4096)))) (let ((?v_64 (+ (+ (+ ?v_65 ?v_66) A_itev10) A_itev12)) (?v_83 (* s_4 (- 4096))) (?v_84 (* s_3 (- 4096))) (?v_85 (* o_2 (- 4096)))) (let ((?v_68 (+ (+ (+ (+ (+ (+ (+ (+ ?v_82 v0) ?v_61) ?v_62) ?v_63) ?v_66) ?v_83) ?v_84) ?v_85)) (?v_86 (* o_4 (- 4096)))) (let ((?v_67 (+ (+ (+ ?v_68 ?v_86) A_itev10) A_itev12)) (?v_72 (+ (* o_7 (- 4096)) v2))) (let ((?v_71 (+ ?v_72 A_itev6)) (?v_73 (+ (+ (* s_8 (- 2048)) ?v_72) A_itev6)) (?v_75 (+ (+ (+ (* o_7 (- 8192)) (* v2 2)) (* s_8 (- 4096))) v1))) (let ((?v_77 (+ ?v_75 (* o_8 (- 4096))))) (let ((?v_74 (+ ?v_77 ?v_76)) (?v_78 (+ (+ (* s_9 (- 2048)) ?v_77) ?v_76)) (?v_80 (+ (+ (+ (+ (+ (+ (* o_7 (- 16384)) ?v_30) (* s_8 (- 8192))) ?v_44) (* o_8 (- 8192))) (* s_9 (- 4096))) v0))) (let ((?v_79 (+ (+ (* o_9 (- 4096)) ?v_80) ?v_81))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (or ?v_2 ?v_50) (or ?v_3 ?v_1)) (or ?v_2 ?v_3)) (or ?v_5 ?v_6)) (or (not ?v_5) ?v_7)) (or ?v_6 ?v_7)) (or ?v_11 ?v_9)) (or ?v_10 ?v_69)) (or ?v_10 ?v_11)) (or ?v_14 ?v_15)) (or (not ?v_14) ?v_16)) (or ?v_15 ?v_16)) (or ?v_20 ?v_18)) (or ?v_19 ?v_70)) (or ?v_19 ?v_20)) (or ?v_23 ?v_24)) (or (not ?v_23) ?v_25)) (or ?v_24 ?v_25)) (or ?v_29 ?v_27)) (or ?v_28 ?v_49)) (or ?v_28 ?v_29)) (or ?v_31 ?v_32)) (or (not ?v_31) ?v_33)) (or ?v_32 ?v_33)) (or ?v_34 ?v_35)) (or (not ?v_34) ?v_36)) (or ?v_35 ?v_36)) (or ?v_37 ?v_38)) (or (not ?v_37) ?v_39)) (or ?v_38 ?v_39)) (or ?v_43 ?v_41)) (or ?v_42 ?v_48)) (or ?v_42 ?v_43)) (or ?v_45 ?v_46)) (or (not ?v_45) ?v_47)) (or ?v_46 ?v_47)) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (<= 0 v0) (not (<= 4096 v0))) (and (<= 0 v1) ?v_48)) (and (<= 0 v2) ?v_49)) (and (<= 0 v3) (not (<= 4096 v3)))) (and (<= 0 v4) (not (<= 4096 v4)))) (and (<= 0 v5) ?v_50)) (and (<= 0 o_0) (<= o_0 1))) (and (<= 0 ?v_51) (not (<= 4096 ?v_51)))) (= (not (<= (+ A_itev12 v0) 4096)) (= o_0 1))) (and (not (<= 8 s_2)) (<= 0 s_2))) (and (<= 0 ?v_52) (not (<= 512 ?v_52)))) (= (<= 1 s_2) (not (<= v3 512)))) (and (<= 0 o_1) (<= o_1 1))) (and (<= 0 ?v_53) (not (<= 4096 ?v_53)))) (= (not (<= (+ ?v_54 A_itev10) 4096)) (= o_1 1))) (and (not (<= 16 s_3)) (<= 0 s_3))) (and (<= 0 ?v_55) (not (<= 256 ?v_55)))) (= (<= 1 s_3) (not (<= v4 256)))) (and (not (<= 32 s_4)) (<= 0 s_4))) (and (<= 0 ?v_56) (not (<= 128 ?v_56)))) (= (<= 1 s_4) (not (<= v5 128)))) (and (<= 0 o_2) (<= o_2 1))) (and (<= 0 ?v_58) (not (<= 256 ?v_58)))) (= (not (<= ?v_59 256)) (= o_2 1))) (and (<= 0 o_3) (<= o_3 1))) (and (<= 0 ?v_64) (not (<= 4096 ?v_64)))) (= (not (<= (+ (+ ?v_65 A_itev10) A_itev12) 4096)) (= o_3 1))) (and (<= 0 o_4) (<= o_4 1))) (and (<= 0 ?v_67) (not (<= 4096 ?v_67)))) (= (not (<= (+ (+ ?v_68 A_itev10) A_itev12) 4096)) (= o_4 1))) (and (<= 0 o_5) (<= o_5 1))) (and (<= 0 ?v_12) ?v_69)) (= (not (<= (+ A_itev2 v4) 4096)) (= o_5 1))) (and (<= 0 o_6) (<= o_6 1))) (and (<= 0 ?v_21) ?v_70)) (= (not (<= (+ A_itev4 v3) 4096)) (= o_6 1))) (and (<= 0 o_7) (<= o_7 1))) (and (<= 0 ?v_71) (not (<= 4096 ?v_71)))) (= (not (<= (+ A_itev6 v2) 4096)) (= o_7 1))) (and (not (<= 2 s_8)) (<= 0 s_8))) (and (<= 0 ?v_73) (not (<= 2048 ?v_73)))) (= (<= 1 s_8) (not (<= ?v_71 2048)))) (and (<= 0 o_8) (<= o_8 1))) (and (<= 0 ?v_74) (not (<= 4096 ?v_74)))) (= (not (<= (+ ?v_75 ?v_76) 4096)) (= o_8 1))) (and (not (<= 2 s_9)) (<= 0 s_9))) (and (<= 0 ?v_78) (not (<= 2048 ?v_78)))) (= (<= 1 s_9) (not (<= ?v_74 2048)))) (and (<= 0 o_9) (<= o_9 1))) (and (<= 0 ?v_79) (not (<= 4096 ?v_79)))) (= (not (<= (+ ?v_80 ?v_81) 4096)) (= o_9 1))) (not (= (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ ?v_82 (* v2 (- 4))) (* o_7 16384)) (* s_8 8192)) (* v1 (- 2))) (* o_8 8192)) (* s_9 4096)) (* o_9 4096)) ?v_61) ?v_62) ?v_63) ?v_66) ?v_83) ?v_84) ?v_85) ?v_86) (* A_itev6 (- 4))) A_itev10) A_itev12) 0)))))))))))))))))))))))))))))))))
(check-sat)
(exit)
