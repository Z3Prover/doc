(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x27 () Bool)
(declare-fun x251 () Int)
(declare-fun x55 () Int)
(declare-fun x166 () Bool)
(declare-fun x229 () Bool)
(declare-fun x84 () Int)
(declare-fun x82 () Int)
(declare-fun x263 () Int)
(declare-fun x259 () Int)
(declare-fun x54 () Int)
(declare-fun x96 () Bool)
(declare-fun x51 () Int)
(declare-fun x70 () Int)
(declare-fun x207 () Bool)
(declare-fun x124 () Int)
(declare-fun x240 () Int)
(declare-fun x261 () Bool)
(declare-fun x44 () Int)
(declare-fun x42 () Int)
(declare-fun x132 () Int)
(declare-fun x31 () Bool)
(declare-fun x266 () Bool)
(declare-fun x174 () Int)
(declare-fun x36 () Int)
(declare-fun x212 () Int)
(declare-fun x280 () Bool)
(declare-fun x147 (Int) Int)
(declare-fun x83 () Int)
(declare-fun x68 () Bool)
(declare-fun x125 () Int)
(declare-fun x80 () Bool)
(declare-fun x156 () Int)
(declare-fun x278 () Int)
(declare-fun x194 (Int) Int)
(declare-fun x143 () Int)
(declare-fun x296 () Bool)
(declare-fun x291 () Bool)
(declare-fun x136 () Bool)
(declare-fun x106 () Bool)
(declare-fun x120 () Int)
(declare-fun x289 (Int) Int)
(declare-fun x127 () Int)
(declare-fun x4 () Int)
(declare-fun x238 (Int) Int)
(declare-fun x208 () Int)
(declare-fun x148 () Bool)
(declare-fun x62 () Bool)
(declare-fun x154 () Int)
(declare-fun x271 () Int)
(declare-fun x149 () Int)
(declare-fun x225 () Int)
(declare-fun x142 () Int)
(declare-fun x32 () Bool)
(declare-fun x163 () Int)
(declare-fun x260 () Bool)
(declare-fun x283 () Bool)
(declare-fun x303 () Int)
(declare-fun x265 (Int) Int)
(declare-fun x3 () Bool)
(declare-fun x153 () Int)
(declare-fun x60 () Int)
(declare-fun x184 () Int)
(declare-fun x76 () Int)
(declare-fun x14 () Bool)
(declare-fun x252 () Int)
(declare-fun x43 () Int)
(declare-fun x99 (Int Int) Int)
(declare-fun x222 () Bool)
(declare-fun x217 () Int)
(declare-fun x85 () Bool)
(declare-fun x213 () Bool)
(declare-fun x20 () Int)
(declare-fun x40 () Int)
(declare-fun x273 () Int)
(declare-fun x202 () Int)
(declare-fun x237 () Bool)
(declare-fun x221 () Int)
(declare-fun x279 () Int)
(declare-fun x198 () Int)
(declare-fun x187 () Int)
(declare-fun x146 () Int)
(declare-fun x114 () Int)
(declare-fun x30 () Int)
(declare-fun x24 () Int)
(declare-fun x305 () Bool)
(declare-fun x86 () Int)
(declare-fun x47 () Int)
(declare-fun x190 () Bool)
(declare-fun x293 () Bool)
(declare-fun x45 () Int)
(declare-fun x56 () Int)
(declare-fun x121 () Int)
(declare-fun x244 () Bool)
(declare-fun x145 (Int) Int)
(declare-fun x294 () Int)
(declare-fun x112 () Bool)
(declare-fun x15 () Bool)
(declare-fun x69 () Int)
(declare-fun x50 () Int)
(declare-fun x6 () Bool)
(declare-fun x29 () Int)
(declare-fun x129 () Bool)
(declare-fun x33 () Bool)
(declare-fun x292 () Bool)
(declare-fun x235 () Int)
(declare-fun x301 () Bool)
(declare-fun x41 () Int)
(declare-fun x199 () Int)
(declare-fun x137 () Bool)
(declare-fun x181 () Int)
(declare-fun x113 () Int)
(declare-fun x220 (Int Int) Int)
(declare-fun x52 () Bool)
(declare-fun x22 () Int)
(declare-fun x182 () Int)
(declare-fun x204 () Int)
(declare-fun x77 () Int)
(declare-fun x209 () Bool)
(declare-fun x253 () Int)
(declare-fun x218 () Bool)
(declare-fun x116 () Int)
(declare-fun x126 () Int)
(declare-fun x66 () Int)
(declare-fun x75 () Int)
(declare-fun x25 () Int)
(declare-fun x239 () Int)
(declare-fun x298 () Bool)
(declare-fun x161 () Int)
(declare-fun x211 () Int)
(declare-fun x9 () Bool)
(declare-fun x297 () Bool)
(declare-fun x277 () Int)
(declare-fun x186 () Int)
(declare-fun x97 () Int)
(declare-fun x104 () Int)
(declare-fun x285 () Bool)
(declare-fun x71 () Int)
(declare-fun x210 () Int)
(declare-fun x165 () Bool)
(declare-fun x64 () Int)
(declare-fun x122 () Int)
(declare-fun x140 () Int)
(declare-fun x286 () Bool)
(declare-fun x144 () Int)
(declare-fun x191 () Int)
(declare-fun x268 () Int)
(declare-fun x177 () Bool)
(declare-fun x249 () Int)
(declare-fun x195 () Int)
(declare-fun x171 () Int)
(declare-fun x169 () Bool)
(declare-fun x135 () Bool)
(declare-fun x133 () Int)
(declare-fun x274 () Int)
(declare-fun x21 () Int)
(declare-fun x28 () Int)
(declare-fun x1 () Int)
(declare-fun x91 (Int) Int)
(declare-fun x281 () Int)
(declare-fun x231 () Bool)
(declare-fun x214 () Bool)
(declare-fun x164 () Int)
(declare-fun x219 () Int)
(declare-fun x95 () Bool)
(declare-fun x282 () Bool)
(declare-fun x180 () Int)
(declare-fun x167 () Bool)
(declare-fun x267 () Bool)
(declare-fun x175 () Bool)
(declare-fun x307 () Int)
(declare-fun x109 () Bool)
(declare-fun x290 () Int)
(declare-fun x295 () Int)
(declare-fun x270 (Int) Int)
(declare-fun x308 () Int)
(declare-fun x151 () Int)
(declare-fun x130 () Int)
(declare-fun x176 () Int)
(declare-fun x254 () Int)
(declare-fun x57 () Bool)
(declare-fun x197 () Int)
(declare-fun x189 () Bool)
(declare-fun x35 () Bool)
(declare-fun x67 () Bool)
(declare-fun x65 () Bool)
(declare-fun x58 () Bool)
(declare-fun x168 () Int)
(declare-fun x232 () Int)
(declare-fun x59 () Int)
(declare-fun x103 () Int)
(declare-fun x119 () Bool)
(declare-fun x299 () Int)
(declare-fun x48 () Int)
(declare-fun x304 () Int)
(declare-fun x246 () Int)
(declare-fun x138 () Int)
(declare-fun x49 () Int)
(declare-fun x2 () Int)
(declare-fun x37 () Bool)
(declare-fun x227 () Bool)
(declare-fun x150 () Int)
(declare-fun x90 () Bool)
(declare-fun x206 () Bool)
(declare-fun x201 () Int)
(declare-fun x264 () Bool)
(declare-fun x188 () Bool)
(declare-fun x94 () Bool)
(declare-fun x284 () Int)
(declare-fun x309 () Int)
(declare-fun x111 () Int)
(declare-fun x63 () Int)
(declare-fun x98 () Bool)
(declare-fun x11 () Bool)
(declare-fun x258 () Bool)
(declare-fun x92 () Bool)
(declare-fun x123 () Bool)
(declare-fun x288 (Int) Int)
(declare-fun x170 () Int)
(declare-fun x141 () Int)
(declare-fun x247 () Int)
(declare-fun x53 () Bool)
(declare-fun x105 () Int)
(declare-fun x74 () Int)
(declare-fun x242 () Int)
(declare-fun x276 (Int Int) Int)
(declare-fun x250 () Int)
(declare-fun x287 () Int)
(declare-fun x172 () Bool)
(declare-fun x7 () Int)
(declare-fun x302 () Int)
(declare-fun x81 () Bool)
(declare-fun x272 () Int)
(declare-fun x131 () Int)
(declare-fun x87 () Int)
(declare-fun x226 () Int)
(declare-fun x73 (Int Int) Int)
(declare-fun x233 () Int)
(declare-fun x110 () Int)
(declare-fun x245 () Bool)
(declare-fun x183 () Int)
(declare-fun x8 () Int)
(declare-fun x228 () Int)
(declare-fun x275 () Int)
(declare-fun x230 () Int)
(declare-fun x158 () Int)
(declare-fun x262 () Int)
(declare-fun x179 () Int)
(declare-fun x255 () Int)
(declare-fun x23 () Int)
(declare-fun x16 () Int)
(declare-fun x5 () Int)
(declare-fun x13 () Int)
(declare-fun x160 () Int)
(declare-fun x128 () Bool)
(declare-fun x46 () Int)
(declare-fun x257 () Int)
(declare-fun x17 () Int)
(declare-fun x10 () Bool)
(declare-fun x152 () Bool)
(declare-fun x162 () Int)
(declare-fun x159 () Bool)
(declare-fun x88 () Int)
(declare-fun x100 () Int)
(declare-fun x39 () Int)
(declare-fun x134 () Bool)
(declare-fun x224 () Int)
(define-fun x223 ((x241 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241) (>= x241 0)) x241 (- x241 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x78 ((x241 Int)) Int (ite (and (> 0 x241) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x241)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x241) x241))
(define-fun x139 ((x115 Int)) Bool (and (< x115 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x115)))
(define-fun x192 ((x115 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x115) (>= x115 0)))
(define-fun x196 ((x115 Int)) Bool (and (= (x73 x115 115792089237316195423570985008687907853269984665640564039457584007913129639935) x115) (= x115 (x73 115792089237316195423570985008687907853269984665640564039457584007913129639935 x115))))
(define-fun x306 ((x115 Int)) Bool (and (= 0 (x73 x115 0)) (= 0 (x73 0 x115))))
(define-fun x34 ((x115 Int)) Bool (= x115 (x73 x115 x115)))
(define-fun x155 ((x115 Int)) Bool (and (x34 x115) (x306 x115) (x196 x115)))
(define-fun x118 ((x115 Int) (x79 Int)) Bool (= (x73 x79 x115) (x73 x115 x79)))
(define-fun x157 ((x115 Int) (x79 Int)) Bool (and (=> (<= 0 x79) (<= (x73 x115 x79) x79)) (=> (>= x115 0) (>= x115 (x73 x115 x79))) (>= (x73 x115 x79) 0)))
(define-fun x108 ((x115 Int) (x79 Int)) Bool (and (x118 x115 x79) (x157 x115 x79)))
(define-fun x26 ((x115 Int)) Bool (= (mod x115 1461501637330902918203684832716283019655932542976) (x73 x115 1461501637330902918203684832716283019655932542975)))
(define-fun x269 ((x115 Int)) Bool (and (x108 x115 1461501637330902918203684832716283019655932542975) (x26 x115)))
(define-fun x185 ((x115 Int)) Bool (and (= (x220 115792089237316195423570985008687907853269984665640564039457584007913129639935 x115) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x220 x115 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x215 ((x115 Int)) Bool (and (= x115 (x220 x115 0)) (= (x220 0 x115) x115)))
(define-fun x236 ((x115 Int)) Bool (= (x220 x115 x115) x115))
(define-fun x12 ((x115 Int)) Bool (and (x185 x115) (x236 x115) (x215 x115)))
(define-fun x193 ((x115 Int) (x79 Int)) Bool (= (x220 x115 x79) (x220 x79 x115)))
(define-fun x72 ((x115 Int) (x79 Int)) Bool (and (=> (<= 0 x79) (>= (x220 x115 x79) x79)) (>= (+ x115 x79) (x220 x115 x79)) (=> (<= 0 x115) (>= (x220 x115 x79) x115))))
(define-fun x178 ((x115 Int) (x79 Int)) Bool (and (x72 x115 x79) (x193 x115 x79)))
(define-fun x243 ((x248 Int)) Int (ite (= x113 x248) x268 (x265 x248)))
(define-fun x102 ((x248 Int)) Int (ite (= x22 x248) x122 (x243 x248)))
(define-fun x93 ((x248 Int)) Int (ite x166 (x265 x248) (x102 x248)))
(define-fun x173 ((x248 Int)) Int (ite (= x30 x248) x64 (x93 x248)))
(define-fun x18 ((x248 Int)) Int (ite (= x56 x248) x130 (x173 x248)))
(define-fun x61 ((x248 Int)) Int (ite x258 (x93 x248) (ite x14 (x93 x248) (x18 x248))))
(define-fun x205 ((x248 Int)) Int (x147 x248))
(define-fun x216 ((x248 Int)) Int (x194 x248))
(define-fun x203 ((x248 Int)) Int (ite (= x162 x248) x131 (x205 x248)))
(define-fun x256 ((x248 Int)) Int (ite (= 128 x248) x164 (x91 x248)))
(define-fun x107 ((x248 Int)) Int (ite (= 128 x248) x247 (x256 x248)))
(define-fun x117 ((x248 Int)) Int (ite (= x248 160) x164 (x107 x248)))
(define-fun x300 ((x248 Int)) Int (ite (= 128 x248) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x117 x248)))
(define-fun x234 ((x248 Int)) Int (ite (= x248 132) x197 (x300 x248)))
(define-fun x101 ((x248 Int)) Int (ite (= 164 x248) x247 (x234 x248)))
(define-fun x200 ((x248 Int)) Int (ite (= 128 x248) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x289 x248)))
(define-fun x19 ((x248 Int)) Int (ite (= x248 132) x48 (x200 x248)))
(define-fun x38 ((x248 Int)) Int (ite (= x248 164) x171 (x19 x248)))
(define-fun x89 ((x248 Int)) Int (ite (= x248 196) x110 (x38 x248)))
(assert (=> (>= 10000 x23) (not (= (x276 x171 x304) x23))))
(assert (not (= 3 (x276 x48 x151))))
(assert (not (= 1851080549 (x276 x278 1))))
(assert (=> (<= x278 10000) (not (= (x276 x48 x151) x278))))
(assert (x192 x168))
(assert (not (= 599290589 (x276 x8 4))))
(assert (x12 x121))
(assert (not (= 1 (x276 x233 2))))
(assert (x192 x121))
(assert (not (= 3337024914 (x276 x8 4))))
(assert (not (= 330252341 (x276 x233 1))))
(assert (x192 x158))
(assert (not (= (x276 x277 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= (x276 x233 1) 1889567281)))
(assert (=> (>= 10000 x23) (not (= x23 (x276 x48 x151)))))
(assert (not (= (x276 x48 x151) 330252341)))
(assert (not (= (x276 x48 x151) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x192 x240))
(assert (not (= 1 (x276 x278 1))))
(assert (=> (>= 10000 x75) (not (= (x276 x8 4) x75))))
(assert (x192 x13))
(assert (=> (<= x23 10000) (not (= (x276 x278 1) x23))))
(assert (= x280 true))
(assert (x192 x242))
(assert (=> (= (x276 x278 1) (x276 x48 x151)) (and (= x151 1) (= x278 x48))))
(assert (x192 x88))
(assert (= (or x261 x166) x136))
(assert (x192 x63))
(assert (x192 x279))
(assert (=> (>= 10000 x8) (not (= x8 (x276 x233 2)))))
(assert (= (and x264 x95) x189))
(assert (x139 x23))
(assert (x192 x69))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x276 x75 3))))
(assert (=> (= (x276 x277 1) (x276 x171 x304)) (and (= x277 x171) (= 1 x304))))
(assert (x192 x46))
(assert (= (and (not x27) x98) x135))
(assert (not (= 2514000705 (x276 x8 4))))
(assert (x192 x55))
(assert (not (= (x276 x278 1) 1889567281)))
(assert (x192 x184))
(assert (x192 x199))
(assert (=> (= (x276 x171 x304) (x276 x8 4)) (and (= x171 x8) (= 4 x304))))
(assert (x192 x28))
(assert (not (= (x276 x75 3) 599290589)))
(assert (x192 x191))
(assert (=> (<= x8 10000) (not (= x8 (x276 x48 x151)))))
(assert (=> (= (x276 x48 x151) (x276 x277 1)) (and (= x277 x48) (= 1 x151))))
(assert (not (= 1889567281 (x276 x171 x304))))
(assert (= (and x165 x213) x209))
(assert (not (= 1851080549 (x276 x233 2))))
(assert (=> (<= x171 10000) (not (= x171 (x276 x171 1)))))
(assert (not (= (x276 x75 3) (x276 x233 1))))
(assert (=> (= (x276 x75 3) (x276 x48 x151)) (and (= 3 x151) (= x48 x75))))
(assert (x108 x262 x201))
(assert (=> (>= 10000 x63) (not (= x63 (x276 x233 1)))))
(assert (x192 x180))
(assert (not (= 1289409798 (x276 x8 4))))
(assert (= x123 (=> (and (= x13 x5) (= x142 0)) x92)))
(assert (= (=> (and (or x128 (not x128)) (= x128 (= x2 0))) x96) x37))
(assert (not (= (x276 x277 1) 1289409798)))
(assert (= x14 (and x137 x35)))
(assert (not (= (x276 x48 x151) 2)))
(assert (x192 x262))
(assert (not (= 2376452955 (x276 x171 x304))))
(assert (x139 x278))
(assert (not (= 2835717307 (x276 x75 3))))
(assert (not (= 3 (x276 x75 3))))
(assert (not (= 1 (x276 x75 3))))
(assert (not (= (x276 x75 3) 3026235284)))
(assert (= (and x3 (not x152)) x112))
(assert (=> (<= x277 10000) (not (= x277 (x276 x63 3)))))
(assert (not (= 3026235284 (x276 x278 1))))
(assert (x192 x179))
(assert (not (= (x276 x75 3) (x276 x277 1))))
(assert (not (= 826074471 (x276 x63 3))))
(assert (= (=> (and (= x60 (x238 x23)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x230) (= x277 x197) (not (= 0 x247)) (= 2835717307 x39) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x132) (= x161 (x78 (- x253 4))) (= x212 (x78 (- x104 x247))) (>= x224 0) (>= x230 0) (<= x104 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x63 (x73 1461501637330902918203684832716283019655932542975 x240)) (= x290 (x276 x63 3)) (not (< x39 826074471)) (not (= x39 1889567281)) (<= x224 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> x164 x224)) (<= 0 x104) (not (= x39 826074471)) (not (= x39 2514000705)) (= (x78 (- x224 x164)) x25) (= x180 x247) (= x137 (or (and (= true (<= x161 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x161 64)) (> x161 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x203 x290) x224) (not (> 4 x253)) (= 68 x253) (= 128 x303) (= (x78 (- x230 x164)) x307) (> x60 0) (not (< x104 x247))) (and (=> (and (and (= 0 x142) (= x5 x13)) x137) x92) (=> (and (and (= x277 x141) (= x207 (= x277 x197))) (not x137)) (and (=> (not x207) x123) (=> (and x207 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x176) (= (< x176 x247) x90) (= x138 (x276 x171 1)) (= x180 x274) (>= x176 0) (= x176 (x93 x138)))) (and (=> x90 x123) (=> (and (= x27 (> x180 x176)) (not x90)) (and (=> x27 x123) (=> (and (not x27) (and (= (> x7 x149) x9) (<= 0 x7) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7) (= x183 (x276 x277 1)) (= (x78 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x180)) x149) (= x30 (x276 x171 1)) (= x64 (x78 (- x176 x180))) (= x7 (x173 x183)))) (and (=> (and (and (= x130 (x223 (+ x7 x180))) (= (< x130 x7) x119)) (not x9)) (and (=> x119 x123) (=> (and (and (= x56 (x276 x277 1)) (= x13 32) (= x142 1)) (not x119)) x92))) (=> x9 x123))))))))))) x188))
(assert (= x148 (or x10 (and (not x6) x301))))
(assert (=> (>= 10000 x233) (not (= x233 (x276 x171 x304)))))
(assert (not (= (x276 x278 1) 3121116754)))
(assert (=> (>= 10000 x23) (not (= x23 (x276 x171 1)))))
(assert (x178 x121 x54))
(assert (x192 x24))
(assert (x192 x249))
(assert (not (= (x276 x8 4) 3017275065)))
(assert (=> (<= x8 10000) (not (= (x276 x8 4) x8))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x276 x48 x151))))
(assert (not (= (x276 x278 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 3337024914 (x276 x277 1))))
(assert (x192 x164))
(assert (not (= 2835717307 (x276 x277 1))))
(assert (=> (= (x276 x277 1) (x276 x171 1)) (= x277 x171)))
(assert (not (= 1289409798 (x276 x75 3))))
(assert (=> (>= 10000 x23) (not (= x23 (x276 x75 3)))))
(assert (x192 x54))
(assert (not (= (x276 x233 2) (x276 x233 1))))
(assert (=> (<= x233 10000) (not (= (x276 x278 1) x233))))
(assert (= x58 (=> (and (and (<= 0 x230) (<= x230 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x230) x169)) (or (and x169 (= x164 x247)) (and (not x169) (and (= x283 (= x230 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x104) (< 0 x97) (= x271 (ite (not x283) 1 0)) (= (mod (* x164 x104) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x47) (= x190 (= x104 x219)) (= (x73 x271 x217) x97) (= (= x164 0) x57) (<= 0 x104) (= x247 x242) (= x217 (ite (or x190 x57) 1 0)) (= (div x47 x164) x219) (= x242 (div x47 x230)))))) x188)))
(assert (= (or x231 x222) x31))
(assert (x192 x299))
(assert (=> (>= 10000 x277) (not (= x277 (x276 x233 1)))))
(assert (not (= 404098525 (x276 x8 4))))
(assert (= (and x159 x207) x62))
(assert (x192 x111))
(assert (=> (= (x276 x171 x304) (x276 x278 1)) (and (= x171 x278) (= 1 x304))))
(assert (not (= (x276 x233 2) 3)))
(assert (not (= (x276 x277 1) 157198259)))
(assert (= x33 (=> (and (= x278 x171) (not (> 4 x133)) (not (= x250 157198259)) (> 826074471 x250) (= (or (> x146 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x146 96) (= true (<= x146 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x293) (= x250 599290589) (= (x78 (- x133 4)) x146) (> x82 0) (not (= x250 404098525)) (= x272 x233) (not (= x250 117300739)) (not (= x41 0)) (= x150 x110) (= 128 x168) (= 100 x133) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x273) (= x82 (x238 x23))) (and (=> x293 x206) (=> (and (not x293) (and (= x233 x114) (= x15 true))) (and (=> (not x15) x206) (=> (and x15 (and (= x67 true) (= x278 x182))) (and (=> (and (and (= (x276 x233 1) x77) (= (< x28 x110) x109) (<= 0 x28) (= x150 x116) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x28) (= (x265 x77) x28)) x67) (and (=> (and (not x109) (= x213 (< x28 x150))) (and (=> (and (not x213) (and (= x292 (< x70 x195)) (= (x78 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x150)) x70) (<= 0 x195) (= (x243 x221) x195) (= x221 (x276 x278 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x195) (= x268 (x78 (- x28 x150))) (= x113 (x276 x233 1)))) (and (=> x292 x206) (=> (and (not x292) (and (= (x223 (+ x195 x150)) x122) (= x152 (< x122 x195)))) (and (=> (and (not x152) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174) (= (x288 x50) x174) (= (< x174 x150) x175) (= (x276 x171 x304) x50) (<= 0 x174) (= x22 (x276 x278 1)) (= (x276 x233 2) x304))) (and (=> (and (= x264 (> x150 x174)) (not x175)) (and (=> x264 x206) (=> (and (not x264) (and (= 1 x2) (= x24 (x78 (- x174 x150))) (= 32 x208) (= x255 x127) (= x181 x156))) x37))) (=> x175 x206))) (=> x152 x206))))) (=> x213 x206))) (=> x109 x206))) (=> (not x67) x206)))))))))
(assert (x192 x59))
(assert (x192 x124))
(assert (x108 x86 x2))
(assert (=> (>= 10000 x8) (not (= x8 (x276 x278 1)))))
(assert (x192 x195))
(assert (not (= 3121116754 (x276 x63 3))))
(assert (x192 x235))
(assert (x192 x47))
(assert (x192 x272))
(assert (x192 x29))
(assert (x192 x171))
(assert (=> (<= x75 10000) (not (= (x276 x278 1) x75))))
(assert (=> (= (x276 x171 1) (x276 x233 1)) (= x171 x233)))
(assert (not (= (x276 x233 1) 1851080549)))
(assert (not (= (x276 x171 1) 3)))
(assert (x192 x210))
(assert (not (= 3017275065 (x276 x48 x151))))
(assert (x192 x44))
(assert (x192 x116))
(assert (not (= 2514000705 (x276 x278 1))))
(assert (=> (>= 10000 x8) (not (= x8 (x276 x75 3)))))
(assert (=> (>= 10000 x277) (not (= x277 (x276 x75 3)))))
(assert (= x305 (and x227 (not x119))))
(assert (=> (= (x276 x63 3) (x276 x75 3)) (= x63 x75)))
(assert (x192 x259))
(assert (x139 x304))
(assert (=> (>= 10000 x278) (not (= x278 (x276 x63 3)))))
(assert (x192 x45))
(assert (x192 x274))
(assert (x269 x309))
(assert (= (and x128 x136) x267))
(assert (= x222 (and x52 x280)))
(assert (not (= 3 (x276 x63 3))))
(assert (=> (>= 10000 x63) (not (= x63 (x276 x171 1)))))
(assert (not (= 3121116754 (x276 x233 1))))
(assert (not (= (x276 x233 2) (x276 x277 1))))
(assert (x178 x29 x210))
(assert (not (= (x276 x171 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x276 x171 x304))))
(assert (= (or x229 x172) x35))
(assert (=> (= (x276 x75 3) (x276 x171 x304)) (and (= 3 x304) (= x171 x75))))
(assert (=> (<= x233 10000) (not (= (x276 x75 3) x233))))
(assert (=> (= (x276 x171 x304) (x276 x233 1)) (and (= x304 1) (= x171 x233))))
(assert (not (= (x276 x277 1) 117300739)))
(assert (not (= 1889567281 (x276 x75 3))))
(assert (not (= (x276 x233 1) 2514000705)))
(assert (not (= (x276 x233 2) 3121116754)))
(assert (not (= 826074471 (x276 x8 4))))
(assert (x192 x174))
(assert (x192 x71))
(assert (=> (>= 10000 x233) (not (= x233 (x276 x48 x151)))))
(assert (x192 x255))
(assert (x192 x110))
(assert (x12 x210))
(assert (not (= 157198259 (x276 x233 2))))
(assert (x192 x82))
(assert (x192 x66))
(assert (x192 x133))
(assert (not (= (x276 x48 x151) 1)))
(assert (x192 x20))
(assert (not (= (x276 x171 1) 2)))
(assert (x139 x63))
(assert (not (= (x276 x233 2) 599290589)))
(assert (x192 x257))
(assert (x192 x51))
(assert (=> (>= 10000 x233) (not (= x233 (x276 x233 1)))))
(assert (not (= (x276 x48 x151) 4)))
(assert (not (= (x276 x171 x304) 2)))
(assert (not (= (x276 x63 3) 1289409798)))
(assert (not (= 2835717307 (x276 x278 1))))
(assert (not (= (x276 x63 3) 157198259)))
(assert (x192 x225))
(assert (= x11 (and x67 x80)))
(assert (not (= (x276 x171 1) 4)))
(assert (not (= 2 (x276 x277 1))))
(assert (x192 x308))
(assert (x108 x271 x217))
(assert (not (= (x276 x171 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x192 x153))
(assert (not (= (x276 x8 4) (x276 x63 3))))
(assert (x192 x42))
(assert (not (= (x276 x171 1) 404098525)))
(assert (not (= 3026235284 (x276 x8 4))))
(assert (= x291 (and (not x213) x165)))
(assert (not (= (x276 x171 1) 826074471)))
(assert (x192 x49))
(assert (=> (<= x23 10000) (not (= x23 (x276 x63 3)))))
(assert (x192 x7))
(assert (not (= 2514000705 (x276 x171 x304))))
(assert (x192 x8))
(assert (not (= (x276 x8 4) 330252341)))
(assert (= (=> (and (and (= (x205 x162) x263) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x181) (= (+ x255 x110) x43) (= x254 (+ x181 x41)) (<= 0 x255) (= x308 x43) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x263) (= x43 x104) (<= x255 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (ite (= x211 1) 1 0) x103) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x255 x110)) (= x153 (x73 x86 x2)) (= (x73 x103 x275) x29) (= (x220 x29 x210) x86) (<= 0 x181) (>= x263 0) (= x210 (ite (= x208 0) 1 0)) (= x75 (x73 1461501637330902918203684832716283019655932542975 x309)) (= x254 x4) (> x153 0) (= x162 (x276 x75 3)) (= (x223 (+ x41 x263)) x131) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x41 x181)) (= x228 x41) (= x254 x230) (= (ite (< 31 x208) 1 0) x275)) (and (not (< x69 3017275065)) (>= x74 0) (= x163 x197) (= 3121116754 x69) (= x239 x186) (= x237 (= x48 x240)) (not (> 2376452955 x69)) (>= 1461501637330902918203684832716283019655932542975 x154) (> 3337024914 x69) (= x59 (x238 x171)) (>= 1461501637330902918203684832716283019655932542975 x197) (= x228 x170) (= x251 x240) (= x125 x251) (>= x154 0) (<= x74 1461501637330902918203684832716283019655932542975) (<= 0 x204) (= x48 x154) (< 0 x59) (= 0 x239) (not (= 3026235284 x69)) (not (= 3017275065 x69)) (= x240 x302) (= x74 x71) (>= 1461501637330902918203684832716283019655932542975 x204) (= x164 x170) (= x71 x83) (<= x240 1461501637330902918203684832716283019655932542975))) (and (=> (and (not x237) (and (and (= (x276 x48 x151) x295) (= (x276 x8 4) x151) (= x8 (x73 1461501637330902918203684832716283019655932542975 x240)) (<= x120 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x120) x298) (= x120 (x216 x295)) (<= 0 x120)) (or (and (and (= x126 (x78 (- x120 x164))) (= (x73 1461501637330902918203684832716283019655932542975 x240) x1) (not (< x120 x164))) (not x298)) x298))) x53) (=> x237 x58))) x96))
(assert (not (= 599290589 (x276 x63 3))))
(assert (x139 x233))
(assert (x192 x125))
(assert (not (= (x276 x171 x304) 1)))
(assert (=> (<= x278 10000) (not (= (x276 x171 1) x278))))
(assert (not (= 826074471 (x276 x233 2))))
(assert (x192 x104))
(assert (not (= (x276 x8 4) 3121116754)))
(assert (x192 x140))
(assert (not (= 4 (x276 x63 3))))
(assert (= (and x15 x32) x80))
(assert (not (= (x276 x278 1) 157198259)))
(assert (not (= (x276 x8 4) 4)))
(assert (not (= 3026235284 (x276 x233 1))))
(assert (not (= (x276 x63 3) (x276 x171 1))))
(assert (x192 x271))
(assert (not (= (x276 x233 2) 170435703)))
(assert (not (= (x276 x171 x304) 2835717307)))
(assert (not (= 3017275065 (x276 x75 3))))
(assert (=> (= (x276 x171 1) (x276 x278 1)) (= x278 x171)))
(assert (not (= 3026235284 (x276 x63 3))))
(assert (=> (>= 10000 x8) (not (= x8 (x276 x277 1)))))
(assert (x192 x132))
(assert (=> (>= 10000 x278) (not (= x278 (x276 x8 4)))))
(assert (x192 x263))
(assert (x192 x48))
(assert (x192 x154))
(assert (x192 x224))
(assert (= (and x62 (not x90)) x98))
(assert (= (and x31 (not x293)) x32))
(assert (not (= 3337024914 (x276 x171 1))))
(assert (x192 x84))
(assert (not (= (x276 x278 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= 2835717307 (x276 x48 x151))))
(assert (=> (= (x276 x171 1) (x276 x171 x304)) (= 1 x304)))
(assert (not (= (x276 x75 3) 2514000705)))
(assert (x192 x281))
(assert (not (= 2 (x276 x63 3))))
(assert (not (= 826074471 (x276 x48 x151))))
(assert (x192 x176))
(assert (x192 x127))
(assert (not (= 170435703 (x276 x8 4))))
(assert (=> (>= 10000 x171) (not (= x171 (x276 x171 x304)))))
(assert (=> (>= 10000 x277) (not (= x277 (x276 x8 4)))))
(assert (x155 x309))
(assert (not (= (x276 x75 3) 330252341)))
(assert (= x227 (and x135 (not x9))))
(assert (=> (<= x23 10000) (not (= (x276 x277 1) x23))))
(assert (= (or x297 x218) x282))
(assert (not (= 3017275065 (x276 x63 3))))
(assert (not (= 3017275065 (x276 x233 2))))
(assert (not (= (x276 x48 x151) 1851080549)))
(assert (x192 x120))
(assert (not (= 2835717307 (x276 x171 1))))
(assert (=> (<= x48 10000) (not (= (x276 x278 1) x48))))
(assert (x192 x142))
(assert (x192 x41))
(assert (=> (= (x276 x171 x304) (x276 x63 3)) (and (= x63 x171) (= 3 x304))))
(assert (not (= (x276 x278 1) (x276 x75 3))))
(assert (x192 x2))
(assert (x108 x103 x275))
(assert (not (= 3026235284 (x276 x233 2))))
(assert (not (= (x276 x233 2) (x276 x75 3))))
(assert (not (= (x276 x8 4) (x276 x233 1))))
(assert (not (= (x276 x278 1) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (=> (>= 10000 x171) (not (= (x276 x63 3) x171))))
(assert (x139 x75))
(assert (not (= (x276 x75 3) 1851080549)))
(assert (= x244 (and x27 x98)))
(assert (not (= 1289409798 (x276 x233 2))))
(assert (= x229 (and x129 (not x169))))
(assert (x192 x251))
(assert (x155 x240))
(assert (not (= (x276 x233 1) 1289409798)))
(assert (=> (<= x63 10000) (not (= (x276 x8 4) x63))))
(assert (not (= (x276 x233 1) 1461501637330902918203684832716283019655932542975)))
(assert (x139 x151))
(assert (=> (>= 10000 x171) (not (= (x276 x75 3) x171))))
(assert (x192 x302))
(assert (not (= 157198259 (x276 x48 x151))))
(assert (not (= (x276 x171 x304) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (not (= (x276 x171 1) 3026235284)))
(assert (=> (= (x276 x48 x151) (x276 x8 4)) (and (= x48 x8) (= 4 x151))))
(assert (=> (>= 10000 x233) (not (= x233 (x276 x233 2)))))
(assert (not (= (x276 x171 x304) 1851080549)))
(assert (= (=> (and (= x127 x255) (= x156 x181) (= x84 x208) (= x2 0)) x37) x206))
(assert (x192 x21))
(assert (not (= (x276 x233 2) 330252341)))
(assert (x192 x4))
(assert (not (= 2376452955 (x276 x233 1))))
(assert (x192 x187))
(assert (not (= (x276 x48 x151) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= (x276 x171 x304) 1289409798)))
(assert (not (= (x276 x171 x304) 4)))
(assert (=> (>= 10000 x75) (not (= x75 (x276 x171 1)))))
(assert (not (= 826074471 (x276 x278 1))))
(assert (not (= (x276 x277 1) 3017275065)))
(assert (not (= 3337024914 (x276 x75 3))))
(assert (not (= 826074471 (x276 x171 x304))))
(assert (=> (>= 10000 x277) (not (= x277 (x276 x48 x151)))))
(assert (not (= 1289409798 (x276 x48 x151))))
(assert (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x276 x63 3))))
(assert (=> (<= x63 10000) (not (= (x276 x171 x304) x63))))
(assert (=> (>= 10000 x23) (not (= x23 (x276 x233 2)))))
(assert (not (= 3017275065 (x276 x171 1))))
(assert (=> (<= x63 10000) (not (= x63 (x276 x277 1)))))
(assert (not (= 170435703 (x276 x63 3))))
(assert (not (= 170435703 (x276 x233 1))))
(assert (x192 x87))
(assert (=> (= (x276 x171 1) (x276 x48 x151)) (and (= x171 x48) (= 1 x151))))
(assert (= (and x214 (not x237)) x68))
(assert (x192 x228))
(assert (=> (<= x8 10000) (not (= x8 (x276 x171 1)))))
(assert (=> (>= 10000 x48) (not (= (x276 x75 3) x48))))
(assert (= x134 (and x214 x237)))
(assert (x192 x170))
(assert (not (= 117300739 (x276 x278 1))))
(assert (x192 x144))
(assert (x139 x8))
(assert (not (= (x276 x277 1) 3121116754)))
(assert (not (= 3 (x276 x277 1))))
(assert (not (= (x276 x63 3) 2376452955)))
(assert (not (= (x276 x277 1) 2376452955)))
(assert (not (= (x276 x277 1) 1)))
(assert (not (= (x276 x63 3) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (and x35 (not x137)) x159))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x276 x63 3))))
(assert (not (= (x276 x63 3) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x155 x142))
(assert (not (= 1851080549 (x276 x171 1))))
(assert (not (= (x276 x277 1) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (not (= (x276 x277 1) (x276 x63 3))))
(assert (=> (<= x48 10000) (not (= x48 (x276 x171 x304)))))
(assert (x155 x201))
(assert (=> (<= x277 10000) (not (= x277 (x276 x278 1)))))
(assert (not (= (x276 x171 1) (x276 x75 3))))
(assert (not (= (x276 x48 x151) 170435703)))
(assert (x192 x143))
(assert (=> (>= 10000 x48) (not (= x48 (x276 x171 1)))))
(assert (x192 x268))
(assert (not (= (x276 x75 3) 1461501637330902918203684832716283019655932542975)))
(assert (x192 x103))
(assert (not (= 117300739 (x276 x171 1))))
(assert (not (= (x276 x277 1) 599290589)))
(assert (not (= 170435703 (x276 x171 1))))
(assert (x269 x240))
(assert (not (= 1851080549 (x276 x277 1))))
(assert (not (= 117300739 (x276 x171 x304))))
(assert (not (= (x276 x278 1) 3337024914)))
(assert (not (= (x276 x171 1) (x276 x8 4))))
(assert (=> (<= x171 10000) (not (= (x276 x278 1) x171))))
(assert (not (= 170435703 (x276 x278 1))))
(assert (not (= (x276 x278 1) (x276 x233 2))))
(assert (not (= (x276 x233 1) 4)))
(assert (not (= 3026235284 (x276 x277 1))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x276 x171 x304))))
(assert (x192 x36))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x276 x8 4))))
(assert (= x172 (and x129 x169)))
(assert (not (= (x276 x233 2) 2376452955)))
(assert (=> (= (x276 x277 1) (x276 x233 1)) (= x233 x277)))
(assert (not (= (x276 x75 3) (x276 x8 4))))
(assert (not (= 404098525 (x276 x278 1))))
(assert (not (= (x276 x277 1) 404098525)))
(assert (x192 x186))
(assert (=> (<= x8 10000) (not (= (x276 x63 3) x8))))
(assert (not (= (x276 x75 3) 2376452955)))
(assert (x155 x217))
(assert (not (= (x276 x233 1) 1)))
(assert (x192 x284))
(assert (x155 x2))
(assert (x192 x294))
(assert (x192 x277))
(assert (=> (= (x276 x233 2) (x276 x171 x304)) (and (= 2 x304) (= x171 x233))))
(assert (x192 x253))
(assert (=> (<= x171 10000) (not (= x171 (x276 x8 4)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x276 x233 2))))
(assert (not (= (x276 x171 x304) 170435703)))
(assert (x192 x202))
(assert (not (= (x276 x171 x304) 1461501637330902918203684832716283019655932542975)))
(assert (= (and x292 x291) x266))
(assert (not (= (x276 x8 4) (x276 x277 1))))
(assert (=> (>= 10000 x8) (not (= x8 (x276 x171 x304)))))
(assert (x192 x309))
(assert (not (= (x276 x233 2) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (=> (>= 10000 x75) (not (= x75 (x276 x171 x304)))))
(assert (= (and (not x175) x112) x95))
(assert (not (= 4 (x276 x277 1))))
(assert (x12 x54))
(assert (x155 x198))
(assert (not (= (x276 x171 x304) 404098525)))
(assert (not (= (x276 x48 x151) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (not (= (x276 x171 1) 2514000705)))
(assert (not (= 3026235284 (x276 x48 x151))))
(assert (not (= 1 (x276 x171 1))))
(assert (=> (>= 10000 x233) (not (= x233 (x276 x8 4)))))
(assert (=> (<= x48 10000) (not (= x48 (x276 x233 2)))))
(assert (=> (= (x276 x48 x151) (x276 x233 1)) (and (= 1 x151) (= x48 x233))))
(assert (=> (>= 10000 x171) (not (= x171 (x276 x233 2)))))
(assert (x139 x171))
(assert (x155 x262))
(assert (not (= 2376452955 (x276 x8 4))))
(assert (x192 x273))
(assert (not (= (x276 x278 1) 599290589)))
(assert (not (= (x276 x8 4) (x276 x278 1))))
(assert (not (= 3017275065 (x276 x278 1))))
(assert (x192 x307))
(assert (not (= 2 (x276 x233 2))))
(assert (x155 x103))
(assert (x192 x160))
(assert (=> (>= 10000 x233) (not (= x233 (x276 x171 1)))))
(assert (=> (>= 10000 x278) (not (= (x276 x233 2) x278))))
(assert (not (= 2 (x276 x75 3))))
(assert (not (= 330252341 (x276 x171 x304))))
(assert (=> (<= x277 10000) (not (= (x276 x277 1) x277))))
(assert (not (= 599290589 (x276 x48 x151))))
(assert (x192 x217))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x276 x75 3))))
(assert (x192 x100))
(assert (=> (<= x75 10000) (not (= x75 (x276 x63 3)))))
(assert (x192 x60))
(assert (x155 x275))
(assert (=> (= (x276 x277 1) (x276 x278 1)) (= x277 x278)))
(assert (not (= (x276 x8 4) 157198259)))
(assert (=> (>= 10000 x278) (not (= (x276 x233 1) x278))))
(assert (not (= 117300739 (x276 x233 1))))
(assert (=> (= (x276 x233 1) (x276 x278 1)) (= x233 x278)))
(assert (x12 x29))
(assert (not (= 3121116754 (x276 x171 x304))))
(assert (x108 x187 x142))
(assert (not (= (x276 x278 1) 4)))
(assert (x192 x233))
(assert (= x231 (and (not x52) x280)))
(assert (x192 x39))
(assert (x192 x114))
(assert (not (= (x276 x171 1) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x139 x277))
(assert (= (and x298 x68) x297))
(assert (x192 x5))
(assert (=> (>= 10000 x63) (not (= (x276 x278 1) x63))))
(assert (not (= (x276 x233 2) 1461501637330902918203684832716283019655932542975)))
(assert (=> (>= 10000 x63) (not (= (x276 x48 x151) x63))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x276 x233 1))))
(assert (x192 x232))
(assert (x192 x16))
(assert (not (= (x276 x63 3) (x276 x233 2))))
(assert (=> (<= x233 10000) (not (= x233 (x276 x63 3)))))
(assert (not (= (x276 x233 2) 2835717307)))
(assert (=> (= (x276 x48 x151) (x276 x233 2)) (and (= 2 x151) (= x233 x48))))
(assert (not (= 3121116754 (x276 x48 x151))))
(assert (x192 x130))
(assert (x192 x208))
(assert (not (= 3121116754 (x276 x171 1))))
(assert (x192 x212))
(assert (x192 x197))
(assert (x192 x219))
(assert (not (= (x276 x48 x151) 2514000705)))
(assert (x192 x201))
(assert (= (=> (and (= x6 (= 0 x142)) (or (not x6) x6)) x81) x92))
(assert (=> (>= 10000 x278) (not (= x278 (x276 x277 1)))))
(assert (not (= 1 (x276 x8 4))))
(assert (x155 x140))
(assert (x155 x271))
(assert (= (or x14 x258 x305) x301))
(assert (=> (>= 10000 x277) (not (= (x276 x171 1) x277))))
(assert (not (= 3337024914 (x276 x233 2))))
(assert (not (= (x276 x278 1) 1461501637330902918203684832716283019655932542975)))
(assert (x192 x122))
(assert (not (= (x276 x233 1) 2)))
(assert (not (= (x276 x48 x151) 3337024914)))
(assert (x192 x211))
(assert (=> (>= 10000 x171) (not (= x171 (x276 x277 1)))))
(assert (=> (<= x278 10000) (not (= (x276 x171 x304) x278))))
(assert (x192 x64))
(assert (not (= 1889567281 (x276 x171 1))))
(assert (=> (<= x48 10000) (not (= x48 (x276 x277 1)))))
(assert (not (= 599290589 (x276 x233 1))))
(assert (not (= (x276 x171 x304) 3017275065)))
(assert (not (= (x276 x278 1) 3)))
(assert (= x258 (or (and x159 (not x207)) (and x90 x62) x245 x244 (and x119 x227))))
(assert (x192 x275))
(assert (not (= (x276 x171 1) 1289409798)))
(assert (not (= (x276 x233 2) 404098525)))
(assert (=> (= (x276 x171 x304) (x276 x48 x151)) (and (= x304 x151) (= x171 x48))))
(assert (=> (<= x278 10000) (not (= (x276 x278 1) x278))))
(assert (not (= 117300739 (x276 x8 4))))
(assert (x192 x97))
(assert (not (= (x276 x171 1) 1461501637330902918203684832716283019655932542975)))
(assert (x192 x204))
(assert (not (= (x276 x233 2) (x276 x8 4))))
(assert (not (= 599290589 (x276 x171 1))))
(assert (not (= 117300739 (x276 x48 x151))))
(assert (x155 x86))
(assert (not (= (x276 x277 1) 2514000705)))
(assert (not (= 4 (x276 x75 3))))
(assert (x192 x226))
(assert (x192 x86))
(assert (not (= (x276 x75 3) 826074471)))
(assert (not (= (x276 x277 1) 826074471)))
(assert (not (= (x276 x48 x151) 1889567281)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x276 x233 1))))
(assert (not x285))
(assert (not (= 157198259 (x276 x171 1))))
(assert (not (= 2514000705 (x276 x233 2))))
(assert (x192 x161))
(assert (not (= (x276 x75 3) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x192 x250))
(assert (not (= 826074471 (x276 x233 1))))
(assert (not (= (x276 x278 1) 330252341)))
(assert (= x245 (and x9 x135)))
(assert (not (= (x276 x278 1) 2)))
(assert (not (= (x276 x63 3) 117300739)))
(assert (x192 x126))
(assert (not (= 599290589 (x276 x171 x304))))
(assert (not (= (x276 x233 2) (x276 x171 1))))
(assert (not (= (x276 x8 4) 3)))
(assert (x192 x230))
(assert (not (= (x276 x277 1) 1461501637330902918203684832716283019655932542975)))
(assert (= (or x266 x209 (and x152 x3) (and (not x15) x32) x189 (and x80 (not x67)) (and x293 x31) (and x11 x109) (and x112 x175)) x166))
(assert (not (= (x276 x63 3) 330252341)))
(assert (x108 x198 x140))
(assert (=> (>= 10000 x48) (not (= (x276 x233 1) x48))))
(assert (=> (>= 10000 x23) (not (= (x276 x8 4) x23))))
(assert (= (or x267 (and x136 (not x128))) x214))
(assert (not (= (x276 x75 3) 170435703)))
(assert (= x285 (=> (and (and (and (or (and x52 (= x110 x41)) (and (and (= x106 (= 0 x127)) (>= x127 0) (= x296 (= x110 0)) (= x179 (x73 x262 x201)) (< 0 x179) (= x167 (= x156 x40)) (= (ite (not x106) 1 0) x262) (= (ite (or x167 x296) 1 0) x201) (= (div x199 x110) x40) (= x41 x287) (= (mod (* x110 x156) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x199) (= x287 (div x199 x127)) (<= x127 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x52))) (and (<= 0 x143) (= x294 0) (>= x156 0) (not (= 1289409798 x249)) (> x225 0) (>= x124 0) (= x143 x44) (<= x272 1461501637330902918203684832716283019655932542975) (<= x156 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x249 2376452955) (<= x124 1461501637330902918203684832716283019655932542975) (<= 0 x272) (<= x143 1461501637330902918203684832716283019655932542975) (= x110 x100) (= x309 x163) (<= x309 1461501637330902918203684832716283019655932542975) (= x191 x259) (not (< x249 826074471)) (= x48 x272) (= 1851080549 x249) (= x52 (= x156 0)) (= (x238 x171) x225) (= x294 x186) (not (< x249 1289409798)) (= x83 x44))) (and x177 (> x42 0) (= x177 (not (= x20 0))) (<= 0 x21) (= x42 (x238 x23)) (<= x171 1461501637330902918203684832716283019655932542975) (= x202 x20) (not (= x66 826074471)) (= x16 0) (= x21 (x265 x17)) (= x66 1889567281) (<= x21 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x17 (x276 x171 1)) (= x21 x259) (not (< x66 826074471)))) (and (= x286 (< 0 (x238 x23))) (<= 0 x160) (< x232 826074471) (= (x238 x171) x46) (> x171 0) (= (x270 x23) x246) (not (= 330252341 x232)) (< 0 x23) (not (> 170435703 x232)) (<= 0 x76) (<= 0 x55) (<= 0 x51) (>= x125 0) x260 (= x163 x36) (<= x156 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x270 x171) x76) (< x232 2376452955) (= x171 x87) (= x171 x49) (= x48 x45) (not (= 170435703 x232)) x286 (= 404098525 x232) (>= x156 0) (= x65 (> (x238 x171) 0)) (>= 1461501637330902918203684832716283019655932542975 x125) (>= 1461501637330902918203684832716283019655932542975 x51) (= x94 (not (= x36 x49))) x65 (not (= x171 x23)) (= x55 x48) (= x160 x184) (= x260 (not (= x87 x45))) (>= 1461501637330902918203684832716283019655932542975 x160) (<= 0 x246) (<= x163 1461501637330902918203684832716283019655932542975) (< 0 x46) (= x202 x156) (<= x23 1461501637330902918203684832716283019655932542975) (<= x55 1461501637330902918203684832716283019655932542975) (<= x171 1461501637330902918203684832716283019655932542975) x94 (>= x163 0))) x33)))
(assert (x192 x23))
(assert (not (= 1 (x276 x63 3))))
(assert (not (= (x276 x75 3) 117300739)))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x276 x233 2))))
(assert (x192 x76))
(assert (not (= (x276 x278 1) 2376452955)))
(assert (not (= 2514000705 (x276 x63 3))))
(assert (x192 x131))
(assert (x192 x74))
(assert (=> (>= 10000 x277) (not (= x277 (x276 x171 x304)))))
(assert (not (= (x276 x233 1) 157198259)))
(assert (=> (<= x75 10000) (not (= (x276 x277 1) x75))))
(assert (x192 x83))
(assert (not (= (x276 x8 4) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (not (= 2376452955 (x276 x171 1))))
(assert (= x53 x58))
(assert (x192 x163))
(assert (not (= 2 (x276 x8 4))))
(assert (=> (<= x277 10000) (not (= (x276 x233 2) x277))))
(assert (x139 x48))
(assert (not (= (x276 x63 3) 1889567281)))
(assert (=> (<= x23 10000) (not (= (x276 x233 1) x23))))
(assert (=> (<= x48 10000) (not (= (x276 x63 3) x48))))
(assert (x192 x70))
(assert (not (= (x276 x233 1) 404098525)))
(assert (x192 x182))
(assert (x192 x303))
(assert (x192 x1))
(assert (not (= (x276 x277 1) 1889567281)))
(assert (not (= (x276 x233 1) 3337024914)))
(assert (x192 x141))
(assert (x192 x40))
(assert (x155 1461501637330902918203684832716283019655932542975))
(assert (x192 x105))
(assert (not (= 157198259 (x276 x75 3))))
(assert (not (= 404098525 (x276 x75 3))))
(assert (x192 x25))
(assert (not (= (x276 x8 4) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (and (not x298) x68) x218))
(assert (=> (<= x171 10000) (not (= (x276 x233 1) x171))))
(assert (x192 x149))
(assert (not (= (x276 x233 1) 2835717307)))
(assert (x192 x287))
(assert (= (and x291 (not x292)) x3))
(assert (=> (<= x278 10000) (not (= (x276 x75 3) x278))))
(assert (=> (= (x276 x48 x151) (x276 x63 3)) (and (= x63 x48) (= 3 x151))))
(assert (not (= 2835717307 (x276 x8 4))))
(assert (not (= 4 (x276 x233 2))))
(assert (=> (<= x75 10000) (not (= (x276 x233 1) x75))))
(assert (=> (<= x75 10000) (not (= x75 (x276 x48 x151)))))
(assert (=> (<= x75 10000) (not (= x75 (x276 x75 3)))))
(assert (x192 x156))
(assert (x155 x187))
(assert (x192 x247))
(assert (not (= 3337024914 (x276 x171 x304))))
(assert (x192 x278))
(assert (not (= (x276 x63 3) (x276 x278 1))))
(assert (=> (<= x48 10000) (not (= (x276 x48 x151) x48))))
(assert (=> (<= x233 10000) (not (= x233 (x276 x277 1)))))
(assert (not (= 3026235284 (x276 x171 x304))))
(assert (not (= (x276 x277 1) 330252341)))
(assert (not (= 117300739 (x276 x233 2))))
(assert (= (and x301 x6) x10))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x276 x277 1))))
(assert (not (= (x276 x8 4) 1889567281)))
(assert (not (= (x276 x63 3) 404098525)))
(assert (not (= 3 (x276 x233 1))))
(assert (not (= 2835717307 (x276 x63 3))))
(assert (x192 x246))
(assert (=> (<= x63 10000) (not (= x63 (x276 x75 3)))))
(assert (=> (>= 10000 x63) (not (= x63 (x276 x233 2)))))
(assert (=> (>= 10000 x171) (not (= x171 (x276 x48 x151)))))
(assert (x192 x198))
(assert (x192 x146))
(assert (not (= 2376452955 (x276 x48 x151))))
(assert (not (= (x276 x48 x151) 404098525)))
(assert (=> (>= 10000 x8) (not (= x8 (x276 x233 1)))))
(assert (x192 x75))
(assert (not (= 1851080549 (x276 x8 4))))
(assert (x192 x181))
(assert (=> (>= 10000 x63) (not (= x63 (x276 x63 3)))))
(assert (= (or x134 x282) x129))
(assert (= (and (not x264) x95) x261))
(assert (=> (>= 10000 x48) (not (= x48 (x276 x8 4)))))
(assert (=> (>= 10000 x75) (not (= x75 (x276 x233 2)))))
(assert (not (= 170435703 (x276 x277 1))))
(assert (not (= (x276 x233 1) 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x192 x239))
(assert (not (= (x276 x75 3) 3121116754)))
(assert (not (= (x276 x233 1) (x276 x63 3))))
(assert (= x165 (and x11 (not x109))))
(assert (not (= 3337024914 (x276 x63 3))))
(assert (not (= 3017275065 (x276 x233 1))))
(assert (not (= 1889567281 (x276 x233 2))))
(assert (not (= (x276 x278 1) 1289409798)))
(assert (x192 x150))
(assert (not (= 157198259 (x276 x171 x304))))
(assert (not (= 1851080549 (x276 x63 3))))
(assert (not (= (x276 x8 4) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (=> (and (and (and (= x191 x111) (= x279 x257) (= (>= x279 x111) x85) (= x257 x281)) (and (<= x105 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 826074471 x88)) (= x105 x281) (= x144 x158) (< 0 x299) (<= 0 x105) (= 1889567281 x88) (= (x238 x23) x299) (= (x61 x252) x105) (= (x276 x171 1) x252) (not (< x88 826074471)) (<= x171 1461501637330902918203684832716283019655932542975))) (and (> x235 0) (= (x220 x121 x54) x187) (= x235 (x73 x187 x142)) (= (x73 x198 x140) x121) (= x144 x247) (= (ite (> x13 31) 1 0) x140) (= x54 (ite (= 0 x13) 1 0)) (= (ite (= x63 1) 1 0) x198))) x85) x81))
(assert (not (= 3 (x276 x171 x304))))
(assert (not (= 330252341 (x276 x171 1))))
(check-sat)
(exit)