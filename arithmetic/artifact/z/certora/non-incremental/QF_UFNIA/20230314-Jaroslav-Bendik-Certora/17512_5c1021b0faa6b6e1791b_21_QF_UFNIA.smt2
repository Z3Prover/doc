(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x327 () Int)
(declare-fun x678 () Bool)
(declare-fun x524 () Bool)
(declare-fun x344 () Int)
(declare-fun x730 () Int)
(declare-fun x101 () Int)
(declare-fun x416 () Int)
(declare-fun x696 () Int)
(declare-fun x211 () Int)
(declare-fun x386 () Bool)
(declare-fun x23 () Bool)
(declare-fun x482 () Int)
(declare-fun x619 () Bool)
(declare-fun x708 (Int) Int)
(declare-fun x410 () Int)
(declare-fun x558 () Bool)
(declare-fun x494 () Int)
(declare-fun x335 () Int)
(declare-fun x657 () Int)
(declare-fun x253 () Int)
(declare-fun x73 () Int)
(declare-fun x302 () Bool)
(declare-fun x188 () Int)
(declare-fun x738 () Int)
(declare-fun x568 () Bool)
(declare-fun x571 () Int)
(declare-fun x54 () Int)
(declare-fun x247 () Bool)
(declare-fun x643 () Int)
(declare-fun x334 () Int)
(declare-fun x207 () Int)
(declare-fun x431 () Int)
(declare-fun x732 () Int)
(declare-fun x593 () Int)
(declare-fun x295 () Int)
(declare-fun x506 () Int)
(declare-fun x110 () Int)
(declare-fun x257 () Int)
(declare-fun x147 () Int)
(declare-fun x142 () Bool)
(declare-fun x394 () Int)
(declare-fun x729 () Int)
(declare-fun x656 () Int)
(declare-fun x160 () Bool)
(declare-fun x223 () Int)
(declare-fun x231 () Int)
(declare-fun x504 () Bool)
(declare-fun x540 () Bool)
(declare-fun x712 (Int Int) Int)
(declare-fun x755 () Int)
(declare-fun x448 () Int)
(declare-fun x255 () Bool)
(declare-fun x590 () Int)
(declare-fun x560 () Bool)
(declare-fun x355 () Int)
(declare-fun x328 () Int)
(declare-fun x326 () Int)
(declare-fun x310 () Bool)
(declare-fun x109 () Bool)
(declare-fun x607 () Int)
(declare-fun x703 () Int)
(declare-fun x229 () Bool)
(declare-fun x632 () Int)
(declare-fun x718 () Int)
(declare-fun x521 () Int)
(declare-fun x426 () Int)
(declare-fun x166 () Bool)
(declare-fun x293 () Int)
(declare-fun x213 () Int)
(declare-fun x406 () Int)
(declare-fun x323 () Int)
(declare-fun x433 () Int)
(declare-fun x562 () Bool)
(declare-fun x193 () Int)
(declare-fun x476 () Int)
(declare-fun x180 () Bool)
(declare-fun x192 () Bool)
(declare-fun x244 (Int Int) Int)
(declare-fun x510 () Bool)
(declare-fun x248 () Int)
(declare-fun x68 () Bool)
(declare-fun x653 () Bool)
(declare-fun x535 () Int)
(declare-fun x751 () Int)
(declare-fun x683 () Int)
(declare-fun x346 () Int)
(declare-fun x297 () Int)
(declare-fun x403 () Int)
(declare-fun x30 () Int)
(declare-fun x200 () Int)
(declare-fun x408 () Bool)
(declare-fun x452 () Int)
(declare-fun x354 () Bool)
(declare-fun x118 () Int)
(declare-fun x467 (Int) Int)
(declare-fun x298 () Int)
(declare-fun x296 () Bool)
(declare-fun x736 () Int)
(declare-fun x119 () Bool)
(declare-fun x481 () Int)
(declare-fun x26 () Bool)
(declare-fun x205 () Int)
(declare-fun x18 () Bool)
(declare-fun x458 () Bool)
(declare-fun x587 () Bool)
(declare-fun x734 () Bool)
(declare-fun x351 () Int)
(declare-fun x585 () Int)
(declare-fun x318 () Int)
(declare-fun x181 () Int)
(declare-fun x258 () Bool)
(declare-fun x596 () Int)
(declare-fun x459 () Int)
(declare-fun x135 () Bool)
(declare-fun x438 () Bool)
(declare-fun x522 () Int)
(declare-fun x609 () Int)
(declare-fun x195 () Int)
(declare-fun x640 () Int)
(declare-fun x348 () Bool)
(declare-fun x274 () Bool)
(declare-fun x17 () Int)
(declare-fun x741 () Int)
(declare-fun x331 () Int)
(declare-fun x676 () Bool)
(declare-fun x512 () Bool)
(declare-fun x695 () Int)
(declare-fun x64 () Bool)
(declare-fun x385 () Int)
(declare-fun x384 () Bool)
(declare-fun x79 () Int)
(declare-fun x352 () Int)
(declare-fun x420 () Int)
(declare-fun x345 () Int)
(declare-fun x46 () Bool)
(declare-fun x116 () Bool)
(declare-fun x20 () Bool)
(declare-fun x469 () Int)
(declare-fun x66 () Int)
(declare-fun x620 () Int)
(declare-fun x97 () Int)
(declare-fun x639 () Bool)
(declare-fun x673 () Int)
(declare-fun x256 () Bool)
(declare-fun x152 () Int)
(declare-fun x463 () Bool)
(declare-fun x381 () Int)
(declare-fun x182 () Int)
(declare-fun x495 () Int)
(declare-fun x502 () Int)
(declare-fun x169 () Int)
(declare-fun x630 () Int)
(declare-fun x161 () Int)
(declare-fun x184 () Int)
(declare-fun x143 () Int)
(declare-fun x353 () Int)
(declare-fun x396 () Bool)
(declare-fun x631 () Bool)
(declare-fun x487 () Int)
(declare-fun x740 () Bool)
(declare-fun x508 () Bool)
(declare-fun x664 () Int)
(declare-fun x702 () Int)
(declare-fun x460 () Int)
(declare-fun x457 () Bool)
(declare-fun x663 () Bool)
(declare-fun x747 () Bool)
(declare-fun x126 () Int)
(declare-fun x58 () Int)
(declare-fun x283 () Int)
(declare-fun x442 () Int)
(declare-fun x752 (Int) Int)
(declare-fun x407 () Int)
(declare-fun x365 () Bool)
(declare-fun x383 () Int)
(declare-fun x536 () Int)
(declare-fun x685 () Int)
(declare-fun x370 () Bool)
(declare-fun x225 () Bool)
(declare-fun x701 () Bool)
(declare-fun x203 () Bool)
(declare-fun x444 () Bool)
(declare-fun x9 () Bool)
(declare-fun x707 () Int)
(declare-fun x432 () Int)
(declare-fun x735 () Int)
(declare-fun x121 () Int)
(declare-fun x216 () Bool)
(declare-fun x575 () Bool)
(declare-fun x373 () Bool)
(declare-fun x692 () Bool)
(declare-fun x589 () Int)
(declare-fun x566 () Int)
(declare-fun x122 () Int)
(declare-fun x301 () Bool)
(declare-fun x40 () Int)
(declare-fun x1 () Bool)
(declare-fun x88 () Int)
(declare-fun x711 () Int)
(declare-fun x164 (Int) Int)
(declare-fun x233 () Bool)
(declare-fun x340 () Int)
(declare-fun x299 () Bool)
(declare-fun x493 () Int)
(declare-fun x85 () Bool)
(declare-fun x665 () Bool)
(declare-fun x584 () Int)
(declare-fun x234 () Int)
(declare-fun x261 () Int)
(declare-fun x33 () Int)
(declare-fun x456 () Int)
(declare-fun x717 () Bool)
(declare-fun x548 () Int)
(declare-fun x603 () Int)
(declare-fun x137 () Int)
(declare-fun x170 () Int)
(declare-fun x176 () Bool)
(declare-fun x694 () Bool)
(declare-fun x102 () Int)
(declare-fun x709 () Int)
(declare-fun x651 () Int)
(declare-fun x155 () Int)
(declare-fun x746 () Int)
(declare-fun x236 () Bool)
(declare-fun x379 () Int)
(declare-fun x291 () Bool)
(declare-fun x319 () Bool)
(declare-fun x113 () Int)
(declare-fun x43 () Int)
(declare-fun x324 () Int)
(declare-fun x320 () Int)
(declare-fun x411 () Bool)
(declare-fun x387 () Int)
(declare-fun x55 () Int)
(declare-fun x187 () Int)
(declare-fun x682 () Int)
(declare-fun x162 () Int)
(declare-fun x697 () Int)
(declare-fun x78 () Int)
(declare-fun x483 () Int)
(declare-fun x27 () Int)
(declare-fun x608 () Bool)
(declare-fun x668 () Int)
(declare-fun x642 () Int)
(declare-fun x611 () Int)
(declare-fun x226 () Int)
(declare-fun x260 () Bool)
(declare-fun x179 () Bool)
(declare-fun x49 () Int)
(declare-fun x24 () Int)
(declare-fun x114 () Bool)
(declare-fun x62 () Int)
(declare-fun x690 () Int)
(declare-fun x198 () Int)
(declare-fun x547 () Bool)
(declare-fun x91 () Bool)
(declare-fun x500 () Int)
(declare-fun x103 () Bool)
(declare-fun x7 () Int)
(declare-fun x553 () Int)
(declare-fun x227 () Int)
(declare-fun x139 () Int)
(declare-fun x627 (Int) Int)
(declare-fun x556 () Bool)
(declare-fun x724 () Int)
(declare-fun x530 () Bool)
(declare-fun x245 () Bool)
(declare-fun x650 () Int)
(declare-fun x204 () Bool)
(declare-fun x315 () Int)
(declare-fun x489 () Int)
(declare-fun x450 () Bool)
(declare-fun x479 () Int)
(declare-fun x185 () Int)
(declare-fun x212 () Bool)
(declare-fun x412 () Int)
(declare-fun x314 (Int) Int)
(declare-fun x742 () Bool)
(declare-fun x439 () Int)
(declare-fun x693 () Int)
(declare-fun x42 () Int)
(declare-fun x10 () Int)
(declare-fun x716 () Bool)
(declare-fun x36 () Int)
(declare-fun x598 () Int)
(declare-fun x343 () Int)
(declare-fun x136 () Int)
(declare-fun x623 () Bool)
(declare-fun x745 () Int)
(declare-fun x219 () Int)
(declare-fun x80 () Int)
(declare-fun x445 () Int)
(declare-fun x644 () Int)
(declare-fun x497 () Int)
(declare-fun x270 () Int)
(declare-fun x230 () Int)
(declare-fun x545 () Int)
(declare-fun x277 () Int)
(declare-fun x240 () Int)
(declare-fun x8 () Bool)
(declare-fun x750 () Int)
(declare-fun x531 () Int)
(declare-fun x511 () Int)
(declare-fun x586 () Int)
(declare-fun x461 () Int)
(declare-fun x364 () Int)
(declare-fun x250 () Int)
(declare-fun x286 () Int)
(declare-fun x615 () Int)
(declare-fun x306 () Bool)
(declare-fun x555 () Bool)
(declare-fun x82 () Int)
(declare-fun x243 () Int)
(declare-fun x466 () Int)
(declare-fun x19 () Int)
(declare-fun x628 () Int)
(declare-fun x427 () Int)
(declare-fun x3 () Int)
(declare-fun x159 () Bool)
(declare-fun x37 () Int)
(declare-fun x163 () Bool)
(declare-fun x579 () Bool)
(declare-fun x380 () Bool)
(declare-fun x117 () Bool)
(declare-fun x405 () Int)
(declare-fun x722 () Int)
(declare-fun x86 () Int)
(declare-fun x577 () Bool)
(declare-fun x168 (Int) Int)
(declare-fun x337 () Int)
(declare-fun x127 () Bool)
(declare-fun x591 () Int)
(declare-fun x475 () Bool)
(declare-fun x409 () Int)
(declare-fun x374 () Bool)
(declare-fun x292 () Int)
(declare-fun x488 () Bool)
(declare-fun x749 () Bool)
(declare-fun x539 () Int)
(declare-fun x390 () Bool)
(declare-fun x622 () Bool)
(declare-fun x14 () Int)
(declare-fun x125 () Int)
(declare-fun x710 () Int)
(declare-fun x285 () Int)
(declare-fun x569 () Bool)
(declare-fun x473 () Int)
(declare-fun x218 () Int)
(declare-fun x679 () Bool)
(declare-fun x167 () Bool)
(declare-fun x602 () Bool)
(declare-fun x618 () Bool)
(declare-fun x132 () Int)
(declare-fun x698 () Int)
(declare-fun x440 () Int)
(declare-fun x705 () Bool)
(declare-fun x115 () Bool)
(declare-fun x98 () Int)
(declare-fun x537 () Int)
(declare-fun x290 () Int)
(declare-fun x338 () Int)
(declare-fun x554 () Int)
(declare-fun x480 () Bool)
(declare-fun x470 () Int)
(declare-fun x532 () Bool)
(declare-fun x513 () Bool)
(declare-fun x687 () Int)
(declare-fun x544 () Int)
(declare-fun x647 () Bool)
(declare-fun x105 (Int) Int)
(declare-fun x550 () Int)
(declare-fun x342 () Int)
(declare-fun x87 () Int)
(declare-fun x573 () Int)
(declare-fun x626 () Bool)
(declare-fun x753 () Int)
(declare-fun x667 () Int)
(declare-fun x59 () Int)
(declare-fun x669 () Int)
(declare-fun x670 () Int)
(declare-fun x557 () Bool)
(declare-fun x29 () Int)
(declare-fun x453 () Int)
(declare-fun x141 () Bool)
(declare-fun x210 () Int)
(declare-fun x441 () Int)
(declare-fun x361 () Int)
(declare-fun x516 () Int)
(declare-fun x594 () Bool)
(declare-fun x436 () Int)
(declare-fun x549 () Int)
(declare-fun x123 () Int)
(declare-fun x128 () Bool)
(declare-fun x583 () Bool)
(declare-fun x462 () Int)
(declare-fun x658 () Bool)
(declare-fun x496 () Bool)
(declare-fun x726 () Int)
(declare-fun x358 () Int)
(declare-fun x392 () Int)
(declare-fun x447 () Int)
(declare-fun x263 () Int)
(declare-fun x743 () Int)
(declare-fun x570 () Bool)
(declare-fun x264 () Bool)
(declare-fun x317 () Bool)
(declare-fun x688 () Bool)
(declare-fun x249 () Int)
(declare-fun x190 () Int)
(declare-fun x173 () Bool)
(declare-fun x372 () Int)
(declare-fun x281 () Bool)
(declare-fun x507 () Int)
(declare-fun x12 () Bool)
(declare-fun x565 () Int)
(declare-fun x552 () Bool)
(declare-fun x15 () Int)
(declare-fun x194 () Int)
(declare-fun x616 () Int)
(declare-fun x303 () Int)
(declare-fun x684 () Int)
(declare-fun x282 () Int)
(declare-fun x276 () Int)
(declare-fun x414 () Int)
(declare-fun x471 () Int)
(declare-fun x81 (Int) Int)
(declare-fun x529 () Int)
(declare-fun x259 () Int)
(declare-fun x472 () Int)
(declare-fun x633 () Int)
(declare-fun x144 () Int)
(declare-fun x107 () Int)
(declare-fun x465 () Int)
(declare-fun x106 () Bool)
(declare-fun x588 () Int)
(declare-fun x659 () Int)
(declare-fun x592 () Int)
(declare-fun x47 () Bool)
(declare-fun x39 () Int)
(declare-fun x22 () Int)
(declare-fun x491 () Int)
(declare-fun x224 () Bool)
(declare-fun x389 () Bool)
(declare-fun x41 () Bool)
(declare-fun x689 () Int)
(declare-fun x288 () Int)
(declare-fun x468 () Int)
(declare-fun x505 () Int)
(declare-fun x366 () Int)
(declare-fun x206 () Bool)
(declare-fun x686 () Int)
(declare-fun x16 () Bool)
(declare-fun x581 () Bool)
(declare-fun x509 (Int) Int)
(declare-fun x580 () Int)
(declare-fun x100 () Int)
(declare-fun x638 () Int)
(declare-fun x728 () Bool)
(declare-fun x183 () Int)
(declare-fun x446 () Bool)
(declare-fun x156 () Int)
(declare-fun x514 () Bool)
(declare-fun x739 () Int)
(declare-fun x197 () Int)
(declare-fun x400 () Int)
(declare-fun x95 () Bool)
(declare-fun x189 () Int)
(declare-fun x674 () Int)
(declare-fun x604 () Int)
(declare-fun x415 () Int)
(declare-fun x454 () Bool)
(declare-fun x525 () Int)
(declare-fun x34 () Bool)
(declare-fun x237 () Bool)
(declare-fun x209 () Int)
(declare-fun x53 () Bool)
(declare-fun x269 () Bool)
(declare-fun x382 () Int)
(declare-fun x251 () Int)
(declare-fun x232 () Bool)
(declare-fun x719 () Int)
(declare-fun x706 () Bool)
(declare-fun x357 () Bool)
(declare-fun x140 () Bool)
(declare-fun x526 () Int)
(declare-fun x272 () Bool)
(declare-fun x395 () Int)
(declare-fun x13 () Int)
(declare-fun x70 () Bool)
(declare-fun x50 () Int)
(declare-fun x744 () Int)
(declare-fun x341 () Int)
(declare-fun x398 () Int)
(declare-fun x275 () Int)
(declare-fun x133 () Int)
(declare-fun x38 () Int)
(declare-fun x157 () Int)
(declare-fun x527 () Bool)
(declare-fun x455 () Int)
(declare-fun x4 () Int)
(declare-fun x129 () Int)
(declare-fun x300 () Int)
(declare-fun x32 () Int)
(declare-fun x561 () Bool)
(declare-fun x652 () Int)
(declare-fun x546 () Bool)
(declare-fun x120 () Bool)
(declare-fun x485 () Bool)
(declare-fun x518 () Bool)
(declare-fun x606 () Bool)
(declare-fun x208 () Bool)
(declare-fun x551 (Int Int) Int)
(declare-fun x451 () Bool)
(declare-fun x501 () Int)
(declare-fun x322 () Bool)
(declare-fun x559 () Int)
(declare-fun x499 () Bool)
(declare-fun x265 () Int)
(declare-fun x359 () Int)
(declare-fun x754 () Int)
(declare-fun x235 () Int)
(declare-fun x629 () Int)
(declare-fun x666 () Int)
(declare-fun x304 (Int) Int)
(declare-fun x534 () Bool)
(declare-fun x313 () Int)
(declare-fun x635 () Int)
(declare-fun x478 () Bool)
(declare-fun x305 () Bool)
(declare-fun x523 () Int)
(declare-fun x721 () Int)
(declare-fun x649 () Int)
(declare-fun x134 () Int)
(declare-fun x336 () Int)
(declare-fun x56 () Int)
(declare-fun x238 () Int)
(declare-fun x356 () Int)
(declare-fun x515 () Int)
(declare-fun x474 () Int)
(declare-fun x171 () Int)
(declare-fun x273 () Int)
(declare-fun x307 () Int)
(declare-fun x151 (Int) Int)
(declare-fun x25 () Bool)
(declare-fun x325 () Int)
(declare-fun x399 () Int)
(declare-fun x252 () Int)
(declare-fun x368 () Int)
(declare-fun x191 () Int)
(declare-fun x362 () Int)
(declare-fun x75 () Bool)
(declare-fun x614 () Int)
(declare-fun x28 () Int)
(declare-fun x371 () Int)
(declare-fun x612 () Int)
(declare-fun x124 () Int)
(declare-fun x271 () Bool)
(declare-fun x246 () Int)
(declare-fun x329 () Int)
(declare-fun x158 () Bool)
(declare-fun x239 () Int)
(declare-fun x280 () Int)
(declare-fun x241 () Bool)
(declare-fun x720 () Int)
(declare-fun x196 () Int)
(declare-fun x401 () Int)
(declare-fun x376 () Int)
(declare-fun x393 () Int)
(declare-fun x130 () Int)
(declare-fun x375 () Bool)
(declare-fun x660 () Int)
(declare-fun x617 () Int)
(declare-fun x634 () Int)
(declare-fun x332 (Int) Int)
(declare-fun x254 () Bool)
(declare-fun x621 () Bool)
(declare-fun x449 () Int)
(declare-fun x84 () Int)
(declare-fun x498 () Int)
(declare-fun x174 () Int)
(declare-fun x154 () Int)
(declare-fun x279 () Bool)
(declare-fun x138 (Int) Int)
(declare-fun x52 () Bool)
(declare-fun x699 () Int)
(declare-fun x321 () Bool)
(declare-fun x428 () Bool)
(declare-fun x597 () Int)
(declare-fun x35 () Int)
(declare-fun x150 () Int)
(declare-fun x67 () Int)
(declare-fun x601 () Int)
(declare-fun x94 () Int)
(declare-fun x486 () Bool)
(declare-fun x624 () Int)
(declare-fun x637 () Int)
(declare-fun x599 () Int)
(declare-fun x71 () Int)
(declare-fun x421 () Int)
(declare-fun x146 () Bool)
(declare-fun x96 () Int)
(declare-fun x564 () Int)
(declare-fun x542 () Bool)
(declare-fun x595 () Int)
(declare-fun x149 () Bool)
(declare-fun x625 () Int)
(declare-fun x186 () Bool)
(declare-fun x723 () Int)
(declare-fun x576 () Bool)
(declare-fun x57 () Int)
(declare-fun x262 () Int)
(declare-fun x48 () Bool)
(declare-fun x89 () Int)
(declare-fun x662 () Int)
(declare-fun x543 () Int)
(declare-fun x165 () Int)
(declare-fun x435 () Int)
(declare-fun x700 () Int)
(declare-fun x404 () Int)
(declare-fun x83 () Bool)
(declare-fun x308 () Int)
(declare-fun x582 () Int)
(declare-fun x347 () Int)
(declare-fun x172 () Int)
(declare-fun x422 () Bool)
(declare-fun x645 () Bool)
(declare-fun x443 () Int)
(declare-fun x402 () Int)
(declare-fun x675 () Bool)
(declare-fun x538 () Bool)
(declare-fun x424 () Bool)
(declare-fun x312 () Int)
(declare-fun x714 () Int)
(declare-fun x221 () Int)
(declare-fun x715 () Int)
(declare-fun x574 () Int)
(declare-fun x397 () Int)
(declare-fun x417 () Int)
(declare-fun x178 () Int)
(declare-fun x201 () Int)
(declare-fun x242 () Bool)
(declare-fun x153 () Bool)
(define-fun x563 ((x217 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x217) (<= 0 x217)) x217 (- x217 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x691 ((x217 Int)) Int (ite (and (> 0 x217) (>= x217 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x217) x217))
(define-fun x350 ((x90 Int)) Bool (and (<= 0 x90) (< x90 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x419 ((x90 Int)) Bool (and (>= x90 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x90)))
(define-fun x377 ((x90 Int)) Bool (and (= x90 (x551 x90 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x90 (x551 115792089237316195423570985008687907853269984665640564039457584007913129639935 x90))))
(define-fun x44 ((x90 Int)) Bool (and (= 0 (x551 0 x90)) (= 0 (x551 x90 0))))
(define-fun x74 ((x90 Int)) Bool (= (x551 x90 x90) x90))
(define-fun x369 ((x90 Int)) Bool (and (x74 x90) (x44 x90) (x377 x90)))
(define-fun x425 ((x90 Int) (x737 Int)) Bool (= (x551 x737 x90) (x551 x90 x737)))
(define-fun x93 ((x90 Int) (x737 Int)) Bool (and (=> (>= x90 0) (>= x90 (x551 x90 x737))) (>= (x551 x90 x737) 0) (=> (>= x737 0) (>= x737 (x551 x90 x737)))))
(define-fun x367 ((x90 Int) (x737 Int)) Bool (and (x93 x90 x737) (x425 x90 x737)))
(define-fun x636 ((x90 Int)) Bool (= (x551 x90 1461501637330902918203684832716283019655932542975) (mod x90 1461501637330902918203684832716283019655932542976)))
(define-fun x5 ((x90 Int)) Bool (and (x367 x90 1461501637330902918203684832716283019655932542975) (x636 x90)))
(define-fun x108 ((x90 Int)) Bool (= (mod x90 340282366920938463463374607431768211456) (x551 x90 340282366920938463463374607431768211455)))
(define-fun x112 ((x90 Int)) Bool (and (x367 x90 340282366920938463463374607431768211455) (x108 x90)))
(define-fun x430 ((x360 Int)) Int (ite (= 128 x360) 2 (x168 x360)))
(define-fun x222 ((x360 Int)) Int (ite (= x360 160) 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x430 x360)))
(define-fun x490 ((x360 Int)) Int (ite (= 192 x360) 2 (x222 x360)))
(define-fun x289 ((x360 Int)) Int (ite (= x360 224) 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x490 x360)))
(define-fun x605 ((x360 Int)) Int (ite (= x360 256) 2 (x289 x360)))
(define-fun x661 ((x360 Int)) Int (ite (= x360 288) 22711052170661352172463706074549474602446478010439206087695126111415334600704 (x605 x360)))
(define-fun x11 ((x360 Int)) Int (ite (= x360 x474) 1000000000000000000000000000 (x81 x360)))
(define-fun x748 ((x360 Int)) Int (ite (= x230 x360) x640 (x138 x360)))
(define-fun x60 ((x360 Int)) Int (ite (= 320 x360) 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x661 x360)))
(define-fun x363 ((x360 Int)) Int (ite (= 324 x360) x239 (x60 x360)))
(define-fun x76 ((x360 Int)) Int (ite (= x360 356) x150 (x363 x360)))
(define-fun x437 ((x360 Int)) Int (ite (= 388 x360) x156 (x76 x360)))
(define-fun x681 ((x360 Int)) Int (ite (= 128 x360) 2 (x151 x360)))
(define-fun x517 ((x360 Int)) Int (ite (= x360 160) 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x681 x360)))
(define-fun x199 ((x360 Int)) Int (ite (= 192 x360) 2 (x517 x360)))
(define-fun x572 ((x360 Int)) Int (ite (= x360 224) 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x199 x360)))
(define-fun x294 ((x360 Int)) Int (ite (= x360 256) 2 (x572 x360)))
(define-fun x202 ((x360 Int)) Int (ite (= x360 288) 22711052170661352172463706074549474602446478010439206087695126111415334600704 (x294 x360)))
(define-fun x287 ((x360 Int)) Int (ite (= x3 x360) x447 (x138 x360)))
(define-fun x646 ((x360 Int)) Int (ite (= x360 320) 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x202 x360)))
(define-fun x92 ((x360 Int)) Int (ite (= 324 x360) x400 (x646 x360)))
(define-fun x339 ((x360 Int)) Int (ite (= 356 x360) x150 (x92 x360)))
(define-fun x429 ((x360 Int)) Int (ite (= x360 388) x30 (x339 x360)))
(define-fun x61 ((x360 Int)) Int (x11 x360))
(define-fun x725 ((x360 Int)) Int (ite (= x360 x635) x659 (x627 x360)))
(define-fun x228 ((x360 Int)) Int (ite (= x431 x360) x481 (x725 x360)))
(define-fun x284 ((x360 Int)) Int (ite x114 (x627 x360) (ite x587 (x627 x360) (x228 x360))))
(define-fun x6 ((x360 Int)) Int (x748 x360))
(define-fun x214 ((x360 Int)) Int (ite (= x360 128) 2 (x708 x360)))
(define-fun x278 ((x360 Int)) Int (ite (= x360 160) 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x214 x360)))
(define-fun x733 ((x360 Int)) Int (ite (= x360 192) 2 (x278 x360)))
(define-fun x704 ((x360 Int)) Int (ite (= x360 224) 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x733 x360)))
(define-fun x349 ((x360 Int)) Int (ite (= x360 256) 2 (x704 x360)))
(define-fun x145 ((x360 Int)) Int (ite (= 288 x360) 22711052170661352172463706074549474602446478010439206087695126111415334600704 (x349 x360)))
(define-fun x220 ((x360 Int)) Int (ite (= x360 x435) x544 (x6 x360)))
(define-fun x268 ((x360 Int)) Int (ite (= x360 320) 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x145 x360)))
(define-fun x309 ((x360 Int)) Int (ite (= x360 324) x660 (x268 x360)))
(define-fun x519 ((x360 Int)) Int (ite (= x360 356) x498 (x309 x360)))
(define-fun x177 ((x360 Int)) Int (ite (= 388 x360) x465 (x519 x360)))
(define-fun x671 ((x360 Int)) Int (ite (= x360 x442) x407 (x284 x360)))
(define-fun x492 ((x360 Int)) Int (ite (= x473 x360) x432 (x671 x360)))
(define-fun x677 ((x360 Int)) Int (ite x524 (x284 x360) (ite x271 (x284 x360) (x492 x360))))
(define-fun x727 ((x360 Int)) Int (x220 x360))
(define-fun x378 ((x360 Int)) Int (ite (= 128 x360) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x314 x360)))
(define-fun x391 ((x360 Int)) Int (ite (= 132 x360) x632 (x378 x360)))
(define-fun x541 ((x360 Int)) Int (ite (= 128 x360) x35 (x391 x360)))
(define-fun x528 ((x360 Int)) Int (ite (= x360 x516) x251 (x627 x360)))
(define-fun x388 ((x360 Int)) Int (ite (= x360 x394) x207 (x528 x360)))
(define-fun x413 ((x360 Int)) Int (ite x562 (x627 x360) (ite x256 (x627 x360) (ite x354 (x627 x360) (x388 x360)))))
(define-fun x503 ((x360 Int)) Int (x287 x360))
(define-fun x215 ((x360 Int)) Int (ite (= 128 x360) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x164 x360)))
(define-fun x655 ((x360 Int)) Int (ite (= 132 x360) x456 (x215 x360)))
(define-fun x641 ((x360 Int)) Int (ite (= 128 x360) x506 (x655 x360)))
(define-fun x31 ((x360 Int)) Int (ite x740 (x661 x360) (x437 x360)))
(define-fun x434 ((x360 Int)) Int (ite (= 320 x360) x358 (x31 x360)))
(define-fun x333 ((x360 Int)) Int (ite (= x360 320) x358 (x434 x360)))
(define-fun x680 ((x360 Int)) Int (ite (= 352 x360) x78 (x333 x360)))
(define-fun x69 ((x360 Int)) Int (ite (= 384 x360) 1000000000000000000000000000 (x680 x360)))
(define-fun x311 ((x360 Int)) Int (ite (= 320 x360) x277 (x31 x360)))
(define-fun x654 ((x360 Int)) Int (ite (= x360 320) x277 (x311 x360)))
(define-fun x464 ((x360 Int)) Int (ite (= 352 x360) x78 (x654 x360)))
(define-fun x2 ((x360 Int)) Int (ite (= x360 384) 1000000000000000000000000000 (x464 x360)))
(define-fun x578 ((x360 Int)) Int (ite x734 (x69 x360) (x2 x360)))
(define-fun x600 ((x360 Int)) Int (ite (= 320 x360) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x578 x360)))
(define-fun x99 ((x360 Int)) Int (ite (= x360 324) x599 (x600 x360)))
(define-fun x45 ((x360 Int)) Int (ite (= x360 356) x107 (x99 x360)))
(define-fun x731 ((x360 Int)) Int (ite (= 0 x360) 1 (x509 x360)))
(define-fun x520 ((x360 Int)) Int (ite x192 (x145 x360) (x177 x360)))
(define-fun x484 ((x360 Int)) Int (ite (= 320 x360) x526 (x520 x360)))
(define-fun x613 ((x360 Int)) Int (ite (= x360 320) x526 (x484 x360)))
(define-fun x65 ((x360 Int)) Int (ite (= 352 x360) x714 (x613 x360)))
(define-fun x111 ((x360 Int)) Int (ite (= x360 384) 1000000000000000000000000000 (x65 x360)))
(define-fun x266 ((x360 Int)) Int (ite (= x360 320) x352 (x520 x360)))
(define-fun x713 ((x360 Int)) Int (ite (= 320 x360) x352 (x266 x360)))
(define-fun x316 ((x360 Int)) Int (ite (= x360 352) x714 (x713 x360)))
(define-fun x51 ((x360 Int)) Int (ite (= 384 x360) 1000000000000000000000000000 (x316 x360)))
(define-fun x175 ((x360 Int)) Int (ite x538 (x111 x360) (x51 x360)))
(define-fun x418 ((x360 Int)) Int (ite (= 320 x360) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x175 x360)))
(define-fun x131 ((x360 Int)) Int (ite (= 324 x360) x334 (x418 x360)))
(define-fun x104 ((x360 Int)) Int (ite (= 356 x360) x313 (x131 x360)))
(define-fun x672 ((x360 Int)) Int (ite (= x360 0) 1 (x105 x360)))
(define-fun x423 ((x360 Int)) Int (ite x546 (x202 x360) (x429 x360)))
(define-fun x756 ((x360 Int)) Int (ite (= x360 320) x379 (x423 x360)))
(define-fun x63 ((x360 Int)) Int (ite (= x360 320) x379 (x756 x360)))
(define-fun x267 ((x360 Int)) Int (ite (= x360 352) x13 (x63 x360)))
(define-fun x77 ((x360 Int)) Int (ite (= 384 x360) 1000000000000000000000000000 (x267 x360)))
(define-fun x567 ((x360 Int)) Int (ite (= 320 x360) x152 (x423 x360)))
(define-fun x72 ((x360 Int)) Int (ite (= 320 x360) x152 (x567 x360)))
(define-fun x21 ((x360 Int)) Int (ite (= x360 352) x13 (x72 x360)))
(define-fun x533 ((x360 Int)) Int (ite (= x360 384) 1000000000000000000000000000 (x21 x360)))
(define-fun x148 ((x360 Int)) Int (ite x258 (x77 x360) (x533 x360)))
(define-fun x477 ((x360 Int)) Int (ite (= x360 320) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x148 x360)))
(define-fun x330 ((x360 Int)) Int (ite (= 324 x360) x398 (x477 x360)))
(define-fun x648 ((x360 Int)) Int (ite (= x360 356) x628 (x330 x360)))
(define-fun x610 ((x360 Int)) Int (ite (= x360 0) 1 (x467 x360)))
(assert (not (= 115792089237316195423570985008687907853269984665640 (x712 x400 52))))
(assert (x419 x684))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x712 x171 1))))
(assert (not (= (x712 x598 52) 1)))
(assert (not (= 404098525 (x712 x171 1))))
(assert (x419 x553))
(assert (not (= (x712 x494 1) (x712 x129 52))))
(assert (x419 x181))
(assert (=> (<= x624 10000) (not (= x624 (x712 x603 1)))))
(assert (= x301 (or x255 x546)))
(assert (=> (>= 10000 x171) (not (= x171 (x712 x603 1)))))
(assert (x419 x209))
(assert (x419 x122))
(assert (not (= 2113256763 (x712 x15 52))))
(assert (x419 x313))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x712 x400 52))))
(assert (=> (>= 10000 x400) (not (= (x712 x494 1) x400))))
(assert (not (= (x712 x603 1) 340282366920938463463374607431768211456)))
(assert (x419 x137))
(assert (x350 x334))
(assert (x419 x565))
(assert (not (= 1889567281 (x712 x398 1))))
(assert (= (=> (and (or (and (not x115) (and (= (x691 (- x107 x78)) x358) (not (> x78 x107)))) (and x115 (and (= x277 (x691 (- x78 x107))) (not (> x107 x78))))) (= (> x78 x107) x115)) x705) x438))
(assert (x419 x379))
(assert (=> (>= 10000 x724) (not (= x724 (x712 x398 1)))))
(assert (x419 x651))
(assert (x419 x246))
(assert (= (and x48 x530) x322))
(assert (not (= (x712 x400 52) 157198259)))
(assert (x419 x476))
(assert (not (= 157198259 (x712 x660 52))))
(assert (= (and x665 x281) x546))
(assert (x419 x634))
(assert (=> (<= x624 10000) (not (= (x712 x334 1) x624))))
(assert (= x496 (and x706 x301)))
(assert (not (= 2835717307 (x712 x15 52))))
(assert (x419 x39))
(assert (x419 x710))
(assert (= (and x583 (not x319)) x260))
(assert (=> (>= 10000 x129) (not (= x129 (x712 x98 1)))))
(assert (= (and x606 x128) x478))
(assert (not (= 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x712 x129 52))))
(assert (=> (<= x121 10000) (not (= (x712 x660 52) x121))))
(assert (=> (<= x466 10000) (not (= (x712 x598 52) x466))))
(assert (=> (<= x98 10000) (not (= x98 (x712 x598 52)))))
(assert (x419 x35))
(assert (x419 x736))
(assert (x419 x603))
(assert (not (= (x712 x400 52) 22707518476531795403804539479547988765414823042645454849778882899012749361152)))
(assert (not (= (x712 x598 52) 52)))
(assert (x419 x466))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x712 x598 52))))
(assert (x419 x714))
(assert (x419 x667))
(assert (x419 x320))
(assert (not (= (x712 x98 1) 3607235850)))
(assert (not (= (x712 x603 1) 1461501637330902918203684832716283019655932542976)))
(assert (x419 x481))
(assert (not (= (x712 x334 1) 1461501637330902918203684832716283019655932542976)))
(assert (not (= 404098525 (x712 x129 52))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x712 x171 1))))
(assert (=> (>= 10000 x724) (not (= (x712 x660 52) x724))))
(assert (=> (>= 10000 x129) (not (= (x712 x171 1) x129))))
(assert (x419 x479))
(assert (= (or x734 x688) x374))
(assert (= x128 (or x354 x256 x639)))
(assert (x419 x376))
(assert (=> (<= x400 10000) (not (= (x712 x334 1) x400))))
(assert (x419 x387))
(assert (x419 x155))
(assert (=> (>= 10000 x400) (not (= x400 (x712 x15 52)))))
(assert (=> (>= 10000 x598) (not (= (x712 x129 52) x598))))
(assert (not (= (x712 x334 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x419 x554))
(assert (not (= (x712 x334 1) 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (not (= 497176382 (x712 x15 52))))
(assert (x419 x19))
(assert (not (= (x712 x129 52) 500000000000000000000000000)))
(assert (not (= (x712 x603 1) 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (not (= (x712 x98 1) 2113256763)))
(assert (x419 x257))
(assert (not (= (x712 x334 1) 599290589)))
(assert (x419 x29))
(assert (=> (<= x171 10000) (not (= x171 (x712 x334 1)))))
(assert (= (and x301 (not x706)) x258))
(assert (not (= 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x712 x400 52))))
(assert (x419 x126))
(assert (=> (<= x494 10000) (not (= x494 (x712 x98 1)))))
(assert (not (= (x712 x494 1) 22707518476531795403804539479547988765414823042645454849778882899012749361152)))
(assert (x419 x342))
(assert (not (= 157198259 (x712 x129 52))))
(assert (x419 x531))
(assert (not (= (x712 x660 52) (x712 x494 1))))
(assert (x419 x7))
(assert (=> (<= x624 10000) (not (= (x712 x171 1) x624))))
(assert (x419 x690))
(assert (not (= (x712 x660 52) (x712 x98 1))))
(assert (x419 x590))
(assert (not (= 2835717307 (x712 x129 52))))
(assert (not (= (x712 x598 52) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 340282366920938463463374607431768211456 (x712 x494 1))))
(assert (x419 x399))
(assert (=> (>= 10000 x129) (not (= (x712 x15 52) x129))))
(assert (= x688 (and x115 x570)))
(assert (= (and x694 x568) x203))
(assert (not (= 340282366920938463463374607431768211455 (x712 x171 1))))
(assert (=> (<= x87 10000) (not (= (x712 x400 52) x87))))
(assert (not (= (x712 x598 52) 22711052170661352172463706074549474602446478010439206087695126111415334600704)))
(assert (not (= (x712 x494 1) 826074471)))
(assert (x419 x308))
(assert (x419 x315))
(assert (not (= 340282366920938463463374607431768211455 (x712 x603 1))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x712 x494 1))))
(assert (= 1000000000000000000000000000 x101))
(assert (x419 x84))
(assert (x419 x295))
(assert (x419 x421))
(assert (x419 x453))
(assert (= (and x279 (not x742)) x46))
(assert (=> (>= 10000 x603) (not (= x603 (x712 x660 52)))))
(assert (x419 x625))
(assert (x5 x700))
(assert (x350 x660))
(assert (not (= (x712 x15 52) 340282366920938463463374607431768211455)))
(assert (=> (>= 10000 x660) (not (= x660 (x712 x15 52)))))
(assert (=> (= (x712 x98 1) (x712 x334 1)) (= x98 x334)))
(assert (=> (<= x398 10000) (not (= x398 (x712 x660 52)))))
(assert (=> (>= 10000 x15) (not (= (x712 x398 1) x15))))
(assert (= (and x260 x647) x354))
(assert (x419 x324))
(assert (x419 x219))
(assert (= (or (and x475 x47) (and x204 (not x504)) x237 (and x135 x602) (and x141 x75) x186) x271))
(assert (x369 x549))
(assert (not (= (x712 x398 1) 1461501637330902918203684832716283019655932542976)))
(assert (= x444 (and x560 (not x229))))
(assert (x419 x325))
(assert (=> (<= x660 10000) (not (= x660 (x712 x98 1)))))
(assert (x419 x393))
(assert (=> (<= x334 10000) (not (= (x712 x15 52) x334))))
(assert (x419 x607))
(assert (not (= 2113256763 (x712 x660 52))))
(assert (= 1000000000000000000000000000 x487))
(assert (=> (>= 10000 x334) (not (= x334 (x712 x98 1)))))
(assert (x419 x361))
(assert (not x428))
(assert (not (= 826074471 (x712 x98 1))))
(assert (=> (>= 10000 x603) (not (= (x712 x129 52) x603))))
(assert (=> (>= 10000 x334) (not (= (x712 x603 1) x334))))
(assert (=> (= (x712 x398 1) (x712 x334 1)) (= x334 x398)))
(assert (x419 x125))
(assert (x419 x709))
(assert (not (= 3018967357 (x712 x334 1))))
(assert (not (= (x712 x98 1) (x712 x15 52))))
(assert (x419 x754))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x712 x15 52))))
(assert (x419 x62))
(assert (=> (>= 10000 x603) (not (= x603 (x712 x98 1)))))
(assert (=> (= (x712 x494 1) (x712 x603 1)) (= x494 x603)))
(assert (= x119 (=> (and (= x87 x280) (= x79 x466) (= x497 x482) (< 0 x197) (= x126 x498) (= x590 x100)) x457)))
(assert (=> (>= 10000 x660) (not (= (x712 x400 52) x660))))
(assert (=> (<= x15 10000) (not (= x15 (x712 x494 1)))))
(assert (not (= (x712 x598 52) 2835717307)))
(assert (not (= (x712 x603 1) 22711052170661352172463706074549474602446478010439206087695126111415334600704)))
(assert (=> (<= x400 10000) (not (= (x712 x603 1) x400))))
(assert (x419 x273))
(assert (x419 x337))
(assert (x419 x383))
(assert (not (= (x712 x171 1) 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (x419 x539))
(assert (x419 x409))
(assert (not (= (x712 x400 52) 500000000000000000000000000)))
(assert (=> (>= 10000 x129) (not (= x129 (x712 x400 52)))))
(assert (x419 x33))
(assert (x419 x312))
(assert (x419 x696))
(assert (=> (>= 10000 x87) (not (= (x712 x15 52) x87))))
(assert (not (= 3607235850 (x712 x15 52))))
(assert (not (= 1 (x712 x98 1))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x712 x400 52))))
(assert (x419 x327))
(assert (not (= (x712 x398 1) (x712 x129 52))))
(assert (x419 x535))
(assert (x419 x595))
(assert (not (= (x712 x400 52) (x712 x334 1))))
(assert (x5 x62))
(assert (=> (<= x624 10000) (not (= x624 (x712 x398 1)))))
(assert (= x106 (=> (and (= x590 x101) (= x643 x738) (= x617 x736) (= x738 (x691 (- x498 x634))) (= x543 x87) (= x751 0)) x53)))
(assert (= x306 (and x83 (not x120))))
(assert (x419 x711))
(assert (x419 x410))
(assert (x419 x356))
(assert (x350 x598))
(assert (=> (= (x712 x15 52) (x712 x400 52)) (= x400 x15)))
(assert (= x186 (and x247 x180)))
(assert (=> (>= 10000 x400) (not (= x400 (x712 x660 52)))))
(assert (x419 x637))
(assert (x419 x171))
(assert (x419 x614))
(assert (x419 x729))
(assert (not (= (x712 x603 1) (x712 x129 52))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x712 x660 52))))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x712 x603 1))))
(assert (=> (<= x398 10000) (not (= (x712 x400 52) x398))))
(assert (=> (>= 10000 x87) (not (= x87 (x712 x660 52)))))
(assert (x419 x402))
(assert (x419 x448))
(assert (=> (<= x121 10000) (not (= (x712 x334 1) x121))))
(assert (x419 x55))
(assert (=> (>= 10000 x724) (not (= x724 (x712 x15 52)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x712 x660 52))))
(assert (not (= (x712 x98 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= (x712 x660 52) 497176382)))
(assert (x419 x88))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x712 x98 1))))
(assert (not (= (x712 x15 52) 340282366920938463463374607431768211456)))
(assert (x419 x185))
(assert (=> (>= 10000 x724) (not (= x724 (x712 x603 1)))))
(assert (=> (>= 10000 x603) (not (= (x712 x15 52) x603))))
(assert (x419 x98))
(assert (not (= (x712 x494 1) 404098525)))
(assert (=> (>= 10000 x660) (not (= (x712 x603 1) x660))))
(assert (= (and x291 x365) x540))
(assert (x419 x143))
(assert (not (= (x712 x129 52) 94699471215667416670508682402181198833950827816622411988269365108481485438976)))
(assert (not (= (x712 x98 1) 52)))
(assert (x419 x682))
(assert (x369 x66))
(assert (not (= (x712 x98 1) 22707518476531795403804539479547988765414823042645454849778882899012749361152)))
(assert (=> (>= 10000 x15) (not (= (x712 x15 52) x15))))
(assert (=> (<= x466 10000) (not (= (x712 x400 52) x466))))
(assert (not (= 500000000000000000000000000 (x712 x98 1))))
(assert (=> (>= 10000 x624) (not (= (x712 x660 52) x624))))
(assert (x350 x121))
(assert (=> (= (x712 x398 1) (x712 x98 1)) (= x398 x98)))
(assert (x419 x102))
(assert (not (= 340282366920938463463374607431768211456 (x712 x598 52))))
(assert (= x575 (and x18 x233)))
(assert (not (= (x712 x15 52) 52)))
(assert (= (and x514 x480) x68))
(assert (not (= 497176382 (x712 x334 1))))
(assert (not (= 2113256763 (x712 x171 1))))
(assert (x419 x249))
(assert (=> (>= 10000 x660) (not (= x660 (x712 x494 1)))))
(assert (x419 x695))
(assert (not (= (x712 x171 1) 500000000000000000000000000)))
(assert (not (= 497176382 (x712 x171 1))))
(assert (not (= 2113256763 (x712 x334 1))))
(assert (= (or x587 x510) x568))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x712 x129 52))))
(assert (= x705 (=> (and (= (= x98 x393) x296) (= (x551 1461501637330902918203684832716283019655932542975 x511) x393)) (and (=> (and (and (not (= x743 404098525)) (< 0 x601) (= (x691 (- x67 4)) x732) (= x84 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 4 x67)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x732) (and (> 64 x732) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x732)))) x742) (= x599 x603) (= x743 2835717307) (>= x624 0) (not (= x743 599290589)) (= x402 320) (<= x624 1461501637330902918203684832716283019655932542975) (not (= 157198259 x743)) (not (= 1889567281 x743)) (= x298 x107) (= x599 (x551 1461501637330902918203684832716283019655932542975 x511)) (= x67 68) (< x624 1461501637330902918203684832716283019655932542976) (= x601 (x332 x121))) (not x296)) (and (=> x742 x142) (=> (and (and (= x71 x603) (= x581 true)) (not x742)) (and (=> (not x581) x142) (=> (and (and (= (x712 x98 1) x42) (>= x421 0) (= x421 (x627 x42)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x421) (= (> x107 x421) x547) (= x298 x187)) x581) (and (=> x547 x142) (=> (and (not x547) (= (< x421 x298) x120)) (and (=> (and (and (= (x725 x702) x614) (= (< x479 x614) x486) (>= x614 0) (= x659 (x691 (- x421 x298))) (<= x614 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x712 x98 1) x635) (= (x691 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x298)) x479) (= x702 (x712 x603 1))) (not x120)) (and (=> (and (not x486) (and (= x481 (x563 (+ x298 x614))) (= x678 (< x481 x614)))) (and (=> (and (not x678) (and (= x724 x79) (= x730 x126) (= x711 32) (= x431 (x712 x603 1)) (= x741 1) (= x100 x693) (= x49 x482) (= x624 x280))) x561) (=> x678 x142))) (=> x486 x142))) (=> x120 x142))))))))) (=> (and x296 (and (= x693 x590) (= x466 x724) (= x87 x624) (= x730 x498) (= x49 x497))) x457)))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x712 x494 1))))
(assert (x419 x604))
(assert (not (= (x712 x494 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x419 x178))
(assert (not (= 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x712 x129 52))))
(assert (=> (>= 10000 x15) (not (= x15 (x712 x171 1)))))
(assert (not (= 826074471 (x712 x603 1))))
(assert (=> (<= x598 10000) (not (= (x712 x660 52) x598))))
(assert (not (= (x712 x398 1) 2113256763)))
(assert (=> (>= 10000 x398) (not (= (x712 x129 52) x398))))
(assert (= x570 (or x444 x740)))
(assert (x419 x515))
(assert (x419 x497))
(assert (not (= 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x712 x660 52))))
(assert (=> (<= x624 10000) (not (= (x712 x494 1) x624))))
(assert (=> (<= x400 10000) (not (= (x712 x171 1) x400))))
(assert (x419 x664))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x712 x598 52))))
(assert (not (= (x712 x598 52) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x419 x49))
(assert (x350 x466))
(assert (not (= 157198259 (x712 x334 1))))
(assert (x419 x529))
(assert (= (and x180 (not x247)) x141))
(assert (=> (>= 10000 x334) (not (= (x712 x660 52) x334))))
(assert (not (= (x712 x15 52) (x712 x398 1))))
(assert (x350 x98))
(assert (x419 x162))
(assert (not (= 22711052170661352172463706074549474602446478010439206087695126111415334600704 (x712 x660 52))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x712 x171 1))))
(assert (x419 x566))
(assert (= (and x747 (not x9)) x135))
(assert (x419 x338))
(assert (= (=> (and (= x292 x643) (< 0 x651) (= x632 x543) (= x101 x35)) x140) x85))
(assert (x419 x71))
(assert (not (= (x712 x171 1) 115792089237316195423570985008687907853269984665640)))
(assert (=> (>= 10000 x398) (not (= (x712 x15 52) x398))))
(assert (x419 x395))
(assert (x419 x426))
(assert (=> (<= x87 10000) (not (= x87 (x712 x398 1)))))
(assert (=> (>= 10000 x598) (not (= (x712 x598 52) x598))))
(assert (x419 x465))
(assert (=> (>= 10000 x121) (not (= x121 (x712 x603 1)))))
(assert (x419 x586))
(assert (=> (= (x712 x129 52) (x712 x660 52)) (= x129 x660)))
(assert (= x693 1000000000000000000000000000))
(assert (not (= (x712 x171 1) (x712 x598 52))))
(assert (=> (= (x712 x398 1) (x712 x494 1)) (= x494 x398)))
(assert (= (and x716 x25) x679))
(assert (x419 x262))
(assert (x419 x745))
(assert (= x142 (=> (and (= x693 x100) (= (x691 (- x150 x210)) x650) (= x79 x724) (= 0 x741) (= x482 x49) (= x126 x650) (= x280 x624) (= x436 x711)) x561)))
(assert (x419 x372))
(assert (x419 x643))
(assert (not (= 115792089237316195423570985008687907853269984665640 (x712 x660 52))))
(assert (not (= (x712 x171 1) 1000000000000000000000000000)))
(assert (not (= 826074471 (x712 x660 52))))
(assert (x419 x303))
(assert (=> (>= 10000 x724) (not (= x724 (x712 x129 52)))))
(assert (x419 x147))
(assert (x419 x506))
(assert (=> (>= 10000 x624) (not (= x624 (x712 x98 1)))))
(assert (not (= (x712 x598 52) (x712 x398 1))))
(assert (not (= (x712 x334 1) 340282366920938463463374607431768211455)))
(assert (= (or x676 x68) x408))
(assert (x419 x501))
(assert (= (and x583 x319) x562))
(assert (not (= 340282366920938463463374607431768211455 (x712 x598 52))))
(assert (x419 x292))
(assert (= (=> (and (and (< x550 340282366920938463463374607431768211456) (>= 1461501637330902918203684832716283019655932542975 x443) (>= 1461501637330902918203684832716283019655932542975 x598) (= x123 x550) (= x699 x700) (= x376 497176382) (> x406 0) (= (x712 x598 52) x238) (> 2113256763 x376) (<= x550 340282366920938463463374607431768211455) (= x340 x523) (= x550 (x503 x238)) (<= 0 x699) (= 0 x703) (<= 0 x550) (= x703 x336) (>= x443 0) (not (= 404098525 x376)) (< x376 826074471) (>= x625 0) (= x523 x625) (= x406 (x332 x98)) (<= x625 1461501637330902918203684832716283019655932542975) (not (> 404098525 x376)) (>= 1461501637330902918203684832716283019655932542975 x699) (= x137 x598)) (and (and (and (>= 1461501637330902918203684832716283019655932542975 x276) (= x290 x336) (>= 1461501637330902918203684832716283019655932542975 x190) (= x190 x700) (= 0 x290) (>= x554 0) (= (x712 x98 1) x392) (<= x554 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x276 0) (>= 1461501637330902918203684832716283019655932542975 x154) (>= x154 0) (= x124 x276) (not (= x405 404098525)) (<= x98 1461501637330902918203684832716283019655932542975) (= 1889567281 x405) (<= 0 x190) (= x545 (x332 x121)) (= x597 x554) (= (x413 x392) x554) (not (= x405 599290589)) (= x124 x340) (< 0 x545) (= x670 x157) (not (= 157198259 x405))) (and (or (and (not x365) (and (= x355 (div x476 1000000000000000000000000000)) (= (mod (* x211 x604) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x249) (= x476 (x563 (+ x249 500000000000000000000000000))) (= x208 (= x211 0)) (= (div 115792089237316195423570985008687907853269984665640064039457584007913129639935 x211) x10) (= x173 (< x10 x604)) (= (x641 128) x211) (< x456 1461501637330902918203684832716283019655932542976) (= (not x173) x534) (<= 0 x456) (< 0 x630) (= x355 x649) (= x630 (ite x26 1 0)) (<= x456 1461501637330902918203684832716283019655932542975) (= x26 (or x208 x534)))) (and (= x649 0) x365)) (and (>= x695 0) (<= x604 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x29) (<= 0 x29) (= x710 404098525) (>= x604 0) (= x589 0) (= x700 x695) (= (x332 x98) x588) (<= x426 1461501637330902918203684832716283019655932542975) (< x710 2113256763) (> 826074471 x710) (<= 0 x426) (= x597 x683) (= x340 x696) (= x589 x336) (< 0 x588) (>= 1461501637330902918203684832716283019655932542975 x695) (= x365 (= x604 0)) (= x696 x426) (not (< x710 404098525))))) (and (= x171 x525) (not (= 404098525 x382)) (= x123 x439) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x548) (not (= x382 599290589)) (>= 1461501637330902918203684832716283019655932542975 x171) (<= 0 x612) (= 0 x582) (= x382 1889567281) (<= x209 1461501637330902918203684832716283019655932542975) (= x670 x548) (<= 0 x162) (<= x612 1461501637330902918203684832716283019655932542975) (= (x332 x121) x720) (<= 0 x548) (< 0 x720) (= x340 x573) (= (x712 x171 1) x136) (<= 0 x209) (not (= 157198259 x382)) (= x700 x209) (= (x413 x136) x548) (= x336 x582) (>= 1461501637330902918203684832716283019655932542975 x162) (= x612 x573)))) x206) x163))
(assert (x419 x101))
(assert (=> (>= 10000 x398) (not (= x398 (x712 x398 1)))))
(assert (= x538 (and (not x608) x321)))
(assert (x419 x259))
(assert (= (or x380 x271) x556))
(assert (x419 x154))
(assert (x419 x78))
(assert (not (= 599290589 (x712 x98 1))))
(assert (x419 x689))
(assert (x419 x751))
(assert (= (and x619 (not x547)) x83))
(assert (x419 x669))
(assert (=> (<= x98 10000) (not (= (x712 x15 52) x98))))
(assert (not (= (x712 x15 52) 1)))
(assert (x419 x340))
(assert (=> (>= 10000 x129) (not (= (x712 x129 52) x129))))
(assert (x419 x630))
(assert (=> (<= x724 10000) (not (= (x712 x494 1) x724))))
(assert (x419 x67))
(assert (not (= 22711052170661352172463706074549474602446478010439206087695126111415334600704 (x712 x334 1))))
(assert (x419 x589))
(assert (not (= (x712 x15 52) 22711052170661352172463706074549474602446478010439206087695126111415334600704)))
(assert (= x583 (or x258 x496)))
(assert (= x428 (=> (and (and (> x502 0) (= x315 x137) (< 0 x121) (= x386 (> x107 115792089237316195423570985008687907853269984665640)) (>= 1461501637330902918203684832716283019655932542975 x584) (< x156 340282366920938463463374607431768211456) (= (div x580 1000000000000000000000000000) x210) (not (> x210 x156)) (= (ite x317 1 0) x502) (= (x691 (- x150 x210)) x730) (>= x501 0) (= x212 x631) (<= x43 340282366920938463463374607431768211455) (= x89 (x81 x196)) (>= x724 0) (not (< x7 2113256763)) (= (x551 1461501637330902918203684832716283019655932542975 x700) x521) (<= 0 x188) (>= 1461501637330902918203684832716283019655932542975 x307) x274 (<= x359 1461501637330902918203684832716283019655932542975) (= x458 (not (= x315 x483))) (= (div x453 1000000000000000000000000000) x657) (not (< 340282366920938463463374607431768211455 x210)) (= x7 3607235850) (= x15 x137) (= x719 (x551 1461501637330902918203684832716283019655932542975 x62)) (>= x89 0) (= (= x89 0) x527) (= (div x709 1000000000000000000000000000) x184) (= x4 1000000000000000000000000000) (= (or x701 x527) x317) x458 (= (- x707 x43) x14) (= x483 x98) (= x709 x455) (= x574 (mod (* x188 1000000000000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= x122 255) (= x107 x667) (>= 1461501637330902918203684832716283019655932542975 x525) (= x584 x642) (= (x551 340282366920938463463374607431768211455 x549) x640) (not (> x210 x150)) (>= 1461501637330902918203684832716283019655932542975 x137) (= x700 x73) (>= 1461501637330902918203684832716283019655932542975 x121) (= x718 1000000000000000000000000000) (= (x138 x230) x43) (< x89 340282366920938463463374607431768211456) (>= x226 0) (= x188 (x138 x489)) (= x511 x525) (= (div 115792089237316195423570985008687907853269984665640064039457584007913129639935 x89) x686) (= x489 (x712 x15 52)) x717 (= x127 (not x622)) (not (> x657 x285)) (< 0 x98) (< x724 1461501637330902918203684832716283019655932542976) (= x668 (ite x212 1 0)) (= (div x88 1000000000000000000000000000) x285) (= x121 x624) (<= x511 1461501637330902918203684832716283019655932542975) (<= x724 1461501637330902918203684832716283019655932542975) (= x86 x719) (<= x73 1461501637330902918203684832716283019655932542975) (= x755 x359) (not (= 0 x210)) (= (= x14 x49) x274) (<= x150 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x7 3018967357)) (>= 340282366920938463463374607431768211455 x156) (= x668 0) (= x455 x693) (>= x359 0) (<= 0 x73) (= (x691 (- x156 x210)) x549) (< 0 x200) (not (= x98 x121)) (= (not x386) x488) (= x701 (not x621)) (= x200 (ite x532 1 0)) (= x717 (< 0 (x332 x121))) (>= x32 0) (<= x624 1461501637330902918203684832716283019655932542975) (= (x551 1461501637330902918203684832716283019655932542975 x62) x345) x241 (= x707 (+ x283 x640)) (= x455 x462) (>= x724 0) (= (mod (* x188 x89) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x593) (> x414 0) (not (< x7 3607235850)) (>= x624 0) (= x86 (x551 1461501637330902918203684832716283019655932542975 x700)) (= (> x188 x686) x621) (<= 0 x307) (>= x122 0) (= x521 x345) (<= 0 x80) (= (x304 x98) x226) (= x88 (x563 (+ 500000000000000000000000000 x574))) (>= 255 x445) (= x532 x127) (>= 1461501637330902918203684832716283019655932542975 x15) (<= 0 x584) (= (x712 x15 52) x196) (>= 1461501637330902918203684832716283019655932542975 x98) (= (x712 x15 52) x230) (= (not x488) x631) (= x125 (x691 (- x150 x210))) (= x307 x700) (= x78 (x691 (- x285 x657))) (<= 0 x150) (= (x138 x750) x156) (= x501 (x304 x121)) (>= x137 0) (<= x32 1461501637330902918203684832716283019655932542975) (>= 340282366920938463463374607431768211455 x89) (= x257 0) (<= x188 340282366920938463463374607431768211455) (= (x563 (+ x593 500000000000000000000000000)) x453) (= x414 (x332 x98)) (= (= x724 0) x229) (< x188 340282366920938463463374607431768211456) (<= 0 x525) (= x750 (x712 x15 52)) (= x622 (< 115792089237316195423570985008687907853269984665640 x188)) (>= x156 0) (>= x445 0) (= (x712 x15 52) x474) (<= x80 1461501637330902918203684832716283019655932542975) (= (mod (* x107 1000000000000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x219) (= x257 x336) (>= x43 0) (= x340 x755) (= (x563 (+ x219 500000000000000000000000000)) x580) (>= 1461501637330902918203684832716283019655932542975 x724) (= (> (x332 x98) 0) x241) (= x337 1000000000000000000000000000)) (or (and (not x229) (and (= x239 (x551 1461501637330902918203684832716283019655932542975 x15)) (= x55 (x332 x724)) (not (= 0 x55)))) x229)) x438)))
(assert (=> (>= 10000 x466) (not (= (x712 x15 52) x466))))
(assert (not (= (x712 x398 1) 52)))
(assert (x419 x650))
(assert (= x370 (and x728 x518)))
(assert (not (= (x712 x171 1) (x712 x400 52))))
(assert (x419 x549))
(assert (not (= (x712 x334 1) (x712 x598 52))))
(assert (x419 x744))
(assert (=> (>= 10000 x398) (not (= x398 (x712 x598 52)))))
(assert (x369 x62))
(assert (x419 x226))
(assert (x419 x123))
(assert (=> (>= 10000 x121) (not (= x121 (x712 x15 52)))))
(assert (x419 x66))
(assert (x419 x190))
(assert (not (= 340282366920938463463374607431768211455 (x712 x660 52))))
(assert (not (= (x712 x598 52) 115792089237316195423570985008687907853269984665640)))
(assert (not (= 3018967357 (x712 x400 52))))
(assert (not (= 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x712 x98 1))))
(assert (x419 x32))
(assert (x419 x456))
(assert (= (and x233 (not x18)) x302))
(assert (x419 x341))
(assert (not (= (x712 x129 52) 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (x419 x211))
(assert (x419 x735))
(assert (x419 x564))
(assert (x419 x191))
(assert (x419 x715))
(assert (=> (>= 10000 x129) (not (= x129 (x712 x660 52)))))
(assert (not (= 3018967357 (x712 x660 52))))
(assert (= x114 (and x296 x374)))
(assert (=> (<= x98 10000) (not (= x98 (x712 x400 52)))))
(assert (=> (>= 10000 x466) (not (= (x712 x660 52) x466))))
(assert (x419 x124))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (x712 x15 52))))
(assert (x419 x194))
(assert (x419 x218))
(assert (= (=> (= x319 (= x398 x98)) (and (=> (and x319 (and (= x624 x456) (= x693 x506) (= x39 x604))) x163) (=> (and (not x319) (and (>= x624 0) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x744) (not (= x564 599290589)) (not (= x564 1889567281)) (not (= x564 157198259)) (> x673 0) (not (> 4 x235)) (>= 1461501637330902918203684832716283019655932542975 x624) (= x235 68) (= x682 x628) (not (= 404098525 x564)) (= (x332 x121) x673) (= 2835717307 x564) (= x223 x398) (= x320 (x691 (- x235 4))) (= x452 320) (> 1461501637330902918203684832716283019655932542976 x624) (= x647 (or (and (= (<= x320 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x320 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x320))))) (and (=> (and (and (= x529 (x691 (- x150 x155))) (= x194 x624) (= x182 0) (= x529 x318) (= x399 x693) (= x381 x185)) x647) x64) (=> (and (not x647) (= x446 true)) (and (=> (not x446) x20) (=> (and (and (= (x627 x638) x401) (= x638 (x712 x98 1)) (= (> x628 x401) x663) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x401) (= x682 x629) (<= 0 x401)) x446) (and (=> x663 x20) (=> (and (not x663) (= (> x682 x401) x18)) (and (=> x18 x20) (=> (and (and (= x500 (x712 x398 1)) (<= 0 x248) (= x251 (x691 (- x401 x682))) (= (x528 x500) x248) (= (< x539 x248) x159) (= x516 (x712 x98 1)) (<= x248 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x691 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x682)) x539)) (not x18)) (and (=> x159 x20) (=> (and (and (= (< x207 x248) x411) (= x207 (x563 (+ x682 x248)))) (not x159)) (and (=> x411 x20) (=> (and (and (= 32 x185) (= x693 x399) (= x182 1) (= x194 x624) (= x394 (x712 x398 1)) (= x318 x39)) (not x411)) x64))))))))))))))) x264))
(assert (not (= (x712 x603 1) 2835717307)))
(assert (x419 x253))
(assert (not (= (x712 x398 1) 599290589)))
(assert (x419 x152))
(assert (=> (>= 10000 x398) (not (= x398 (x712 x98 1)))))
(assert (not (= 3018967357 (x712 x15 52))))
(assert (not (= 2113256763 (x712 x603 1))))
(assert (not (= (x712 x98 1) 404098525)))
(assert (=> (<= x466 10000) (not (= x466 (x712 x494 1)))))
(assert (not (= (x712 x660 52) 1461501637330902918203684832716283019655932542976)))
(assert (= true x560))
(assert (x419 x412))
(assert (x419 x471))
(assert (x419 x525))
(assert (=> (<= x603 10000) (not (= (x712 x398 1) x603))))
(assert (x419 x502))
(assert (=> (<= x334 10000) (not (= x334 (x712 x494 1)))))
(assert (=> (<= x334 10000) (not (= (x712 x400 52) x334))))
(assert (x419 x265))
(assert (= x587 (or (and x619 x547) (and x46 (not x581)) x225 (and x245 x678) (and x742 x279) x16)))
(assert (not (= (x712 x98 1) 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (x419 x491))
(assert (not (= (x712 x400 52) 52)))
(assert (= (and x47 (not x475)) x1))
(assert (=> (<= x98 10000) (not (= x98 (x712 x603 1)))))
(assert (x419 x584))
(assert (x112 x440))
(assert (not (= (x712 x494 1) 94699471215667416670508682402181198833950827816622411988269365108481485438976)))
(assert (not (= (x712 x398 1) 1461501637330902918203684832716283019655932542975)))
(assert (= x305 (=> (and (and (< 0 x182) (= x48 (= 0 x185))) (or (and (not x48) (and (= x579 (= 0 x400)) (= (not x579) x8) (= 32 x185) (= x721 (ite x8 1 0)))) (and (and (< 0 x262) (= (x332 x624) x262) (= x721 1)) x48))) x451)))
(assert (not (= 826074471 (x712 x15 52))))
(assert (x419 x462))
(assert (x419 x345))
(assert (x419 x687))
(assert (not (= (x712 x660 52) 3607235850)))
(assert (= x645 (and x530 (not x48))))
(assert (=> (>= 10000 x466) (not (= (x712 x98 1) x466))))
(assert (x419 x38))
(assert (x419 x121))
(assert (not (= (x712 x603 1) 157198259)))
(assert (x419 x723))
(assert (x419 x251))
(assert (x419 x307))
(assert (not (= 826074471 (x712 x171 1))))
(assert (=> (>= 10000 x121) (not (= (x712 x171 1) x121))))
(assert (=> (>= 10000 x15) (not (= (x712 x660 52) x15))))
(assert (x419 x57))
(assert (not (= 340282366920938463463374607431768211456 (x712 x400 52))))
(assert (= (=> (and (or (and (and (= (x332 x466) x312) (not (= 0 x312))) (not x95)) x95) (and (= x371 x161) (= (div x286 1000000000000000000000000000) x143) (= x95 (= x466 0)) (= x253 x455) (= x97 (mod (* x57 x28) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x332 x98) x263) (= x137 x660) (= x328 x493) (= (ite x272 1 0) x664) (>= 340282366920938463463374607431768211455 x28) (>= x57 0) (<= x57 340282366920938463463374607431768211455) (= (x551 1461501637330902918203684832716283019655932542975 x62) x356) (= (x712 x660 52) x329) (not (< x633 2113256763)) (< x465 340282366920938463463374607431768211456) (>= 1461501637330902918203684832716283019655932542975 x660) (<= x334 1461501637330902918203684832716283019655932542975) (> x263 0) (<= x466 1461501637330902918203684832716283019655932542975) (= (x551 1461501637330902918203684832716283019655932542975 x62) x328) (= x433 1000000000000000000000000000) (>= x465 0) (= (x6 x435) x697) (= (ite x557 1 0) x205) (= x491 x700) (< x57 340282366920938463463374607431768211456) (>= 340282366920938463463374607431768211455 x697) (>= x491 0) (<= x448 1461501637330902918203684832716283019655932542975) (= x221 (div x362 1000000000000000000000000000)) (= (x551 1461501637330902918203684832716283019655932542975 x700) x493) (= (not x375) x179) (= x272 x179) (<= x498 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x712 x660 52) x404) (<= 0 x498) (not (< x143 x221)) (= x714 (x691 (- x143 x221))) (= x544 (x551 340282366920938463463374607431768211455 x66)) (= x615 (- x537 x697)) (not (> 3018967357 x633)) (= x160 x555) (= x422 (> x313 115792089237316195423570985008687907853269984665640)) (> 1461501637330902918203684832716283019655932542976 x466) (< 0 x656) (not (> x634 x498)) (= x633 3607235850) (= x17 0) (= (= x28 0) x513) (= x286 (x563 (+ x690 500000000000000000000000000))) (= x656 (ite x160 1 0)) (>= 1461501637330902918203684832716283019655932542975 x491) (= x33 (x551 1461501637330902918203684832716283019655932542975 x700)) (= (x61 x505) x28) (= x371 x340) (= x525 x334) (not (> x634 x465)) (= x313 x415) (> 340282366920938463463374607431768211456 x28) (>= x466 0) (>= 1461501637330902918203684832716283019655932542975 x161) (= (x563 (+ 500000000000000000000000000 x172)) x366) (= x690 (mod (* x57 1000000000000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< 0 x205) (= x634 (div x366 1000000000000000000000000000)) (= (> x57 115792089237316195423570985008687907853269984665640) x577) (= x375 (not x422)) (<= 0 x28) (= (x6 x404) x465) (= (not x749) x508) (<= x465 340282366920938463463374607431768211455) (not (= 0 x634)) (= x441 (x691 (- x498 x634))) (>= x161 0) (= (x712 x660 52) x505) (= x102 (div 115792089237316195423570985008687907853269984665640064039457584007913129639935 x28)) (= x664 0) (= x57 (x6 x329)) (= x356 x33) (= x17 x336) (not (> x634 340282366920938463463374607431768211455)) (= (or x508 x513) x557) (>= x448 0) (= (x691 (- x465 x634)) x66) (= 1000000000000000000000000000 x246) (= (> x57 x102) x749) (not (> 3607235850 x633)) (= x362 (x563 (+ x97 500000000000000000000000000))) (= x555 (not x577)) (= (mod (* x313 1000000000000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x172) (= x537 (+ x497 x544)) (>= x697 0) (= (= x553 x615) x34) x34 (= x435 (x712 x660 52)) (= (x691 (- x498 x634)) x609))) x254) x457))
(assert (x419 x130))
(assert (x419 x366))
(assert (x419 x400))
(assert (not (= 157198259 (x712 x15 52))))
(assert (x419 x592))
(assert (=> (<= x660 10000) (not (= x660 (x712 x660 52)))))
(assert (not (= 22711052170661352172463706074549474602446478010439206087695126111415334600704 (x712 x400 52))))
(assert (x419 x97))
(assert (=> (>= 10000 x87) (not (= (x712 x129 52) x87))))
(assert (=> (>= 10000 x398) (not (= x398 (x712 x603 1)))))
(assert (not (= (x712 x334 1) (x712 x129 52))))
(assert (=> (<= x87 10000) (not (= x87 (x712 x598 52)))))
(assert (not (= (x712 x660 52) 500000000000000000000000000)))
(assert (=> (<= x398 10000) (not (= x398 (x712 x171 1)))))
(assert (=> (>= 10000 x87) (not (= (x712 x603 1) x87))))
(assert (not (= (x712 x398 1) 340282366920938463463374607431768211456)))
(assert (= (=> (and (and (= x480 (= x711 0)) (< 0 x741)) (or (and (and (= x103 (not x594)) (= (= x15 0) x594) (= x711 32) (= (ite x103 1 0) x197)) (not x480)) (and x480 (and (= 1 x197) (< 0 x531) (= x531 (x332 x624)))))) x119) x357))
(assert (x419 x205))
(assert (not (= (x712 x494 1) 2113256763)))
(assert (not (= 1000000000000000000000000000 (x712 x660 52))))
(assert (not (= (x712 x398 1) 2835717307)))
(assert (not (= (x712 x494 1) 497176382)))
(assert (x419 x668))
(assert (= x233 (and (not x663) x70)))
(assert (x369 x440))
(assert (x419 x523))
(assert (not (= 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x712 x334 1))))
(assert (= (and (not x647) x260) x23))
(assert (=> (>= 10000 x400) (not (= (x712 x129 52) x400))))
(assert (not (= (x712 x494 1) 1)))
(assert (=> (<= x603 10000) (not (= (x712 x400 52) x603))))
(assert (=> (= (x712 x603 1) (x712 x171 1)) (= x603 x171)))
(assert (=> (>= 10000 x98) (not (= x98 (x712 x494 1)))))
(assert (not (= 500000000000000000000000000 (x712 x15 52))))
(assert (not (= (x712 x603 1) 497176382)))
(assert (x350 x171))
(assert (x419 x406))
(assert (x350 x624))
(assert (not (= 1 (x712 x129 52))))
(assert (x419 x43))
(assert (=> (>= 10000 x660) (not (= x660 (x712 x398 1)))))
(assert (= x399 1000000000000000000000000000))
(assert (not (= 115792089237316195423570985008687907853269984665640 (x712 x334 1))))
(assert (=> (>= 10000 x494) (not (= x494 (x712 x660 52)))))
(assert (x350 x398))
(assert (not (= (x712 x129 52) (x712 x98 1))))
(assert (not (= (x712 x603 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x419 x200))
(assert (not (= 115792089237316195423570985008687907853269984665640 (x712 x15 52))))
(assert (=> (>= 10000 x398) (not (= x398 (x712 x334 1)))))
(assert (x419 x156))
(assert (x419 x398))
(assert (not (= (x712 x98 1) 2835717307)))
(assert (not (= 157198259 (x712 x171 1))))
(assert (not (= 497176382 (x712 x398 1))))
(assert (x419 x288))
(assert (=> (<= x400 10000) (not (= x400 (x712 x598 52)))))
(assert (x419 x673))
(assert (x369 x511))
(assert (not (= (x712 x400 52) (x712 x603 1))))
(assert (not (= 22711052170661352172463706074549474602446478010439206087695126111415334600704 (x712 x98 1))))
(assert (not (= 599290589 (x712 x660 52))))
(assert (= x676 (and x514 (not x480))))
(assert (x419 x56))
(assert (=> (>= 10000 x98) (not (= x98 (x712 x334 1)))))
(assert (not (= 2835717307 (x712 x494 1))))
(assert (x419 x498))
(assert (= (and x374 (not x296)) x279))
(assert (= (=> (and (and (> 340282366920938463463374607431768211456 x723) (<= 0 x273) (>= 1461501637330902918203684832716283019655932542975 x427) (= x611 (x332 x98)) (= (x712 x129 52) x275) (= x351 x427) (= x336 x637) (= (x727 x275) x723) (<= x129 1461501637330902918203684832716283019655932542975) (= x270 x700) (= x449 x723) (<= x270 1461501637330902918203684832716283019655932542975) (>= x427 0) (> 826074471 x344) (<= x273 1461501637330902918203684832716283019655932542975) (not (< x344 404098525)) (<= 0 x723) (>= 340282366920938463463374607431768211455 x723) (< x344 2113256763) (= x344 497176382) (>= x270 0) (= x637 0) (< 0 x611) (= x351 x340) (= x129 x137) (not (= x344 404098525))) (and (and (and (or (and x25 (= 0 x147)) (and (and (= x12 (not x542)) (< x632 1461501637330902918203684832716283019655932542976) (= x176 (or x299 x12)) (= x685 (mod (* x165 x292) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x586 x147) (= x586 (div x195 1000000000000000000000000000)) (<= x632 1461501637330902918203684832716283019655932542975) (= x542 (< x193 x292)) (> x259 0) (= x259 (ite x176 1 0)) (<= 0 x632) (= (= x165 0) x299) (= x193 (div 115792089237316195423570985008687907853269984665640064039457584007913129639935 x165)) (= (x563 (+ 500000000000000000000000000 x685)) x195) (= x165 (x541 128))) (not x25))) (and (< x110 826074471) (>= x687 0) (= x110 404098525) (<= x387 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x687) (= x739 x753) (< x110 2113256763) (= x616 (x332 x98)) (= x687 x700) (>= x387 0) (< 0 x616) (= x592 x340) (= x336 x417) (>= x292 0) (= (= 0 x292) x25) (<= 0 x144) (= 0 x417) (<= x144 1461501637330902918203684832716283019655932542975) (not (> 404098525 x110)) (= x592 x144) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x292))) (and (>= x183 0) (>= 1461501637330902918203684832716283019655932542975 x98) (= x297 (x332 x121)) (= x170 (x677 x397)) (>= x37 0) (not (= x372 404098525)) (= x397 (x712 x98 1)) (>= x218 0) (= 0 x410) (= x118 x340) (>= 1461501637330902918203684832716283019655932542975 x218) (= x372 1889567281) (<= x170 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x336 x410) (= x698 x19) (>= x170 0) (not (= 157198259 x372)) (= x183 x118) (< 0 x297) (<= x37 1461501637330902918203684832716283019655932542975) (not (= 599290589 x372)) (= x37 x700) (>= 1461501637330902918203684832716283019655932542975 x183) (= x739 x170))) (and (<= x494 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x94) (= x525 x494) (= x746 (x712 x494 1)) (< 0 x662) (<= x132 1461501637330902918203684832716283019655932542975) (not (= 157198259 x472)) (>= x40 0) (>= 1461501637330902918203684832716283019655932542975 x40) (not (= 599290589 x472)) (= x662 (x332 x121)) (= x472 1889567281) (= x698 x461) (not (= 404098525 x472)) (<= 0 x132) (= (x677 x746) x461) (= x726 0) (= x449 x689) (<= 0 x94) (= x700 x132) (= x726 x336) (= x94 x38) (= x340 x38) (>= x461 0) (<= x461 115792089237316195423570985008687907853269984665640564039457584007913129639935)))) x569) x140))
(assert (x419 x420))
(assert (x419 x753))
(assert (=> (>= 10000 x121) (not (= (x712 x400 52) x121))))
(assert (x419 x628))
(assert (=> (>= 10000 x334) (not (= x334 (x712 x598 52)))))
(assert (x419 x526))
(assert (=> (>= 10000 x494) (not (= x494 (x712 x171 1)))))
(assert (=> (<= x334 10000) (not (= x334 (x712 x171 1)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x712 x129 52))))
(assert (= x237 (and x499 x1)))
(assert (not (= 3607235850 (x712 x603 1))))
(assert (x419 x548))
(assert (x419 x132))
(assert (x419 x174))
(assert (x419 x720))
(assert (= (and (not x115) x570) x734))
(assert (x419 x382))
(assert (x350 x15))
(assert (x419 x739))
(assert (= (and x291 (not x365)) x626))
(assert (not (= 1889567281 (x712 x494 1))))
(assert (not (= (x712 x598 52) 599290589)))
(assert (not (= 3607235850 (x712 x171 1))))
(assert (x419 x652))
(assert (x419 x494))
(assert (x419 x318))
(assert (=> (<= x98 10000) (not (= (x712 x398 1) x98))))
(assert (not (= (x712 x98 1) 340282366920938463463374607431768211456)))
(assert (x419 x40))
(assert (x419 x30))
(assert (=> (>= 10000 x624) (not (= (x712 x15 52) x624))))
(assert (x419 x231))
(assert (=> (<= x171 10000) (not (= x171 (x712 x660 52)))))
(assert (= x514 (or (and (not x694) x568) x203)))
(assert (x419 x536))
(assert (x419 x693))
(assert (x419 x172))
(assert (= (and (not x499) x1) x180))
(assert (=> (<= x98 10000) (not (= (x712 x660 52) x98))))
(assert (= x561 (=> (and (= x694 (= 0 x741)) (or x694 (not x694))) x357)))
(assert (not (= 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x712 x398 1))))
(assert (=> (<= x98 10000) (not (= x98 (x712 x129 52)))))
(assert (x419 x144))
(assert (=> (= (x712 x398 1) (x712 x603 1)) (= x603 x398)))
(assert (x419 x483))
(assert (x419 x277))
(assert (not (= (x712 x334 1) 52)))
(assert (x419 x544))
(assert (x419 x649))
(assert (=> (>= 10000 x400) (not (= (x712 x98 1) x400))))
(assert (= (or x242 x679) x665))
(assert (not (= 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x712 x494 1))))
(assert (x419 x459))
(assert (= 1000000000000000000000000000 x35))
(assert (x419 x724))
(assert (=> (<= x171 10000) (not (= (x712 x129 52) x171))))
(assert (not (= 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x712 x400 52))))
(assert (not (= (x712 x129 52) 497176382)))
(assert (not (= (x712 x334 1) 1000000000000000000000000000)))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (x712 x598 52))))
(assert (= (and x560 x229) x740))
(assert (= (=> (and (or x692 (not x692)) (= (= x751 0) x692)) x91) x53))
(assert (x419 x290))
(assert (x419 x730))
(assert (x419 x697))
(assert (=> (>= 10000 x598) (not (= x598 (x712 x334 1)))))
(assert (not (= (x712 x129 52) 3018967357)))
(assert (x419 x624))
(assert (= x576 (or x370 x454)))
(assert (x419 x297))
(assert (not (= (x712 x15 52) 1889567281)))
(assert (x419 x616))
(assert (not (= (x712 x398 1) 500000000000000000000000000)))
(assert (not (= 340282366920938463463374607431768211455 (x712 x400 52))))
(assert (x419 x343))
(assert (=> (>= 10000 x724) (not (= x724 (x712 x334 1)))))
(assert (x419 x187))
(assert (=> (<= x660 10000) (not (= (x712 x129 52) x660))))
(assert (x419 x685))
(assert (not (= 2835717307 (x712 x400 52))))
(assert (not (= (x712 x494 1) 599290589)))
(assert (x419 x447))
(assert (x112 x66))
(assert (not (= 115792089237316195423570985008687907853269984665640 (x712 x603 1))))
(assert (x419 x407))
(assert (=> (<= x660 10000) (not (= (x712 x334 1) x660))))
(assert (x419 x436))
(assert (x419 x283))
(assert (x419 x10))
(assert (= x524 (and x747 x9)))
(assert (=> (<= x15 10000) (not (= (x712 x129 52) x15))))
(assert (not (= 22711052170661352172463706074549474602446478010439206087695126111415334600704 (x712 x129 52))))
(assert (=> (<= x598 10000) (not (= x598 (x712 x98 1)))))
(assert (x419 x326))
(assert (not (= (x712 x400 52) (x712 x398 1))))
(assert (=> (>= 10000 x494) (not (= (x712 x129 52) x494))))
(assert (not (= (x712 x660 52) 1)))
(assert (not (= 3018967357 (x712 x494 1))))
(assert (not (= (x712 x98 1) 1461501637330902918203684832716283019655932542976)))
(assert (not (= (x712 x398 1) 1000000000000000000000000000)))
(assert (x419 x100))
(assert (x419 x662))
(assert (= (and x141 (not x75)) x380))
(assert (not (= (x712 x494 1) 1000000000000000000000000000)))
(assert (x419 x633))
(assert (= x245 (and (not x486) x306)))
(assert (x419 x507))
(assert (x419 x213))
(assert (x419 x263))
(assert (not (= (x712 x129 52) 340282366920938463463374607431768211456)))
(assert (not (= 157198259 (x712 x598 52))))
(assert (not (= 115792089237316195423570985008687907853269984665640 (x712 x129 52))))
(assert (=> (>= 10000 x98) (not (= x98 (x712 x171 1)))))
(assert (not (= 3018967357 (x712 x398 1))))
(assert (x419 x469))
(assert (not (= (x712 x603 1) 1461501637330902918203684832716283019655932542975)))
(assert (x419 x385))
(assert (=> (= (x712 x334 1) (x712 x171 1)) (= x171 x334)))
(assert (not (= (x712 x171 1) (x712 x660 52))))
(assert (x419 x362))
(assert (not (= 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x712 x15 52))))
(assert (x5 x15))
(assert (not (= (x712 x603 1) (x712 x15 52))))
(assert (not (= (x712 x334 1) 826074471)))
(assert (=> (= (x712 x398 1) (x712 x171 1)) (= x398 x171)))
(assert (=> (>= 10000 x121) (not (= x121 (x712 x398 1)))))
(assert (x419 x161))
(assert (= (and (not x411) x390) x639))
(assert (x419 x573))
(assert (not (= 404098525 (x712 x660 52))))
(assert (= x506 1000000000000000000000000000))
(assert (x419 x286))
(assert (not (= 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x712 x171 1))))
(assert (x419 x640))
(assert (not (= (x712 x334 1) 1)))
(assert (not (= (x712 x398 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= (x712 x15 52) (x712 x334 1))))
(assert (not (= 1889567281 (x712 x400 52))))
(assert (=> (= (x712 x598 52) (x712 x400 52)) (= x400 x598)))
(assert (x419 x699))
(assert (not (= (x712 x603 1) 3018967357)))
(assert (not (= (x712 x15 52) (x712 x494 1))))
(assert (x419 x165))
(assert (x419 x79))
(assert (not (= (x712 x603 1) 94699471215667416670508682402181198833950827816622411988269365108481485438976)))
(assert (= x254 (=> (and (= x608 (> x714 x313)) (or (and (and (= x352 (x691 (- x714 x313))) (not (< x714 x313))) x608) (and (and (= x526 (x691 (- x313 x714))) (not (< x313 x714))) (not x608)))) x310)))
(assert (=> (>= 10000 x121) (not (= x121 (x712 x494 1)))))
(assert (x419 x427))
(assert (not (= (x712 x334 1) 1461501637330902918203684832716283019655932542975)))
(assert (x419 x700))
(assert (x419 x4))
(assert (x419 x94))
(assert (=> (<= x603 10000) (not (= x603 (x712 x603 1)))))
(assert (x419 x443))
(assert (=> (= (x712 x660 52) (x712 x400 52)) (= x400 x660)))
(assert (not (= 500000000000000000000000000 (x712 x334 1))))
(assert (x419 x741))
(assert (x350 x400))
(assert (=> (= (x712 x660 52) (x712 x15 52)) (= x660 x15)))
(assert (x419 x240))
(assert (=> (>= 10000 x171) (not (= x171 (x712 x400 52)))))
(assert (not (= 115792089237316195423570985008687907853269984665640 (x712 x494 1))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x712 x171 1))))
(assert (= x70 (and x23 x446)))
(assert (x419 x54))
(assert (not (= (x712 x494 1) 22711052170661352172463706074549474602446478010439206087695126111415334600704)))
(assert (not (= (x712 x494 1) (x712 x598 52))))
(assert (x419 x666))
(assert (not (= (x712 x15 52) 599290589)))
(assert (not (= (x712 x400 52) 3607235850)))
(assert (not (= 826074471 (x712 x398 1))))
(assert (x419 x726))
(assert (=> (<= x15 10000) (not (= (x712 x598 52) x15))))
(assert (= x658 (and x302 x159)))
(assert (=> (>= 10000 x87) (not (= x87 (x712 x334 1)))))
(assert (= (=> (= (= x334 x98) x9) (and (=> (and (not x9) (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x261) (= x213 x313) (= (x332 x121) x347) (>= 1461501637330902918203684832716283019655932542975 x87) (= 68 x282) (not (= 157198259 x288)) (= x288 2835717307) (> 1461501637330902918203684832716283019655932542976 x87) (= x383 320) (not (= x288 1889567281)) (not (= x288 404098525)) (not (> 4 x282)) (= (x691 (- x282 4)) x507) (> x347 0) (= x334 x338) (not (= x288 599290589)) (>= x87 0) (= x602 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x507)) (< x507 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x507))))) (and (=> (and (= x504 true) (not x602)) (and (=> (not x504) x106) (=> (and (and (>= x669 0) (= (> x313 x669) x475) (<= x669 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x213 x54) (= x596 (x712 x98 1)) (= x669 (x284 x596))) x504) (and (=> x475 x106) (=> (and (not x475) (= (> x213 x669) x499)) (and (=> (and (not x499) (and (= (< x342 x735) x247) (<= x735 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x671 x323) x735) (= x407 (x691 (- x669 x213))) (<= 0 x735) (= x342 (x691 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x213))) (= x323 (x712 x334 1)) (= x442 (x712 x98 1)))) (and (=> (and (not x247) (and (= x75 (> x735 x432)) (= x432 (x563 (+ x213 x735))))) (and (=> (and (not x75) (and (= 32 x736) (= x101 x590) (= x441 x643) (= x543 x87) (= x473 (x712 x334 1)) (= 1 x751))) x53) (=> x75 x106))) (=> x247 x106))) (=> x499 x106))))))) (=> x602 x106))) (=> (and x9 (and (= x441 x292) (= x35 x590) (= x632 x87))) x140))) x310))
(assert (x419 x221))
(assert (x369 x15))
(assert (x419 x545))
(assert (=> (<= x598 10000) (not (= (x712 x171 1) x598))))
(assert (=> (<= x334 10000) (not (= (x712 x334 1) x334))))
(assert (not (= (x712 x398 1) 1)))
(assert (not (= 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x712 x15 52))))
(assert (x419 x82))
(assert (x419 x611))
(assert (= x747 (or x538 x224)))
(assert (=> (>= 10000 x466) (not (= (x712 x129 52) x466))))
(assert (x419 x433))
(assert (x350 x724))
(assert (x419 x129))
(assert (not (= (x712 x598 52) 94699471215667416670508682402181198833950827816622411988269365108481485438976)))
(assert (not (= 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x712 x603 1))))
(assert (=> (>= 10000 x724) (not (= x724 (x712 x98 1)))))
(assert (=> (<= x334 10000) (not (= (x712 x129 52) x334))))
(assert (x419 x207))
(assert (= x619 (and x581 x46)))
(assert (x369 x700))
(assert (not (= (x712 x334 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= x291 (or x562 x348)))
(assert (x419 x223))
(assert (=> (<= x603 10000) (not (= x603 (x712 x334 1)))))
(assert (=> (<= x87 10000) (not (= (x712 x98 1) x87))))
(assert (= (or x322 x645) x348))
(assert (x419 x110))
(assert (not (= 599290589 (x712 x171 1))))
(assert (not (= 3607235850 (x712 x598 52))))
(assert (=> (<= x494 10000) (not (= x494 (x712 x598 52)))))
(assert (x419 x364))
(assert (=> (<= x624 10000) (not (= (x712 x400 52) x624))))
(assert (x419 x620))
(assert (x419 x73))
(assert (x419 x250))
(assert (not (= (x712 x598 52) (x712 x603 1))))
(assert (x419 x738))
(assert (x419 x371))
(assert (x419 x352))
(assert (not (= (x712 x660 52) 2835717307)))
(assert (=> (>= 10000 x171) (not (= (x712 x598 52) x171))))
(assert (x419 x243))
(assert (x419 x455))
(assert (x419 x718))
(assert (x419 x89))
(assert (=> (>= 10000 x171) (not (= x171 (x712 x98 1)))))
(assert (not (= (x712 x598 52) 22707518476531795403804539479547988765414823042645454849778882899012749361152)))
(assert (not (= 340282366920938463463374607431768211456 (x712 x660 52))))
(assert (x419 x417))
(assert (= x16 (and x120 x83)))
(assert (x419 x612))
(assert (=> (>= 10000 x598) (not (= (x712 x15 52) x598))))
(assert (x419 x580))
(assert (not (= 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x712 x660 52))))
(assert (=> (>= 10000 x466) (not (= x466 (x712 x334 1)))))
(assert (=> (<= x334 10000) (not (= (x712 x398 1) x334))))
(assert (not (= (x712 x171 1) (x712 x129 52))))
(assert (=> (<= x598 10000) (not (= x598 (x712 x398 1)))))
(assert (= x558 (or x408 x114)))
(assert (x419 x157))
(assert (x419 x660))
(assert (= x321 (or x192 x552)))
(assert (= x256 (or x658 (and x663 x70) (and x411 x390) (and x23 (not x446)) x575)))
(assert (x419 x401))
(assert (x419 x571))
(assert (not (= 599290589 (x712 x603 1))))
(assert (x419 x703))
(assert (x419 x493))
(assert (x419 x300))
(assert (not (= (x712 x660 52) 22707518476531795403804539479547988765414823042645454849778882899012749361152)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x712 x400 52))))
(assert (not (= 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x712 x334 1))))
(assert (=> (= (x712 x171 1) (x712 x98 1)) (= x98 x171)))
(assert (=> (<= x129 10000) (not (= (x712 x494 1) x129))))
(assert (x419 x657))
(assert (not (= 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x712 x171 1))))
(assert (= x225 (and x486 x306)))
(assert (not (= 1889567281 (x712 x171 1))))
(assert (=> (>= 10000 x724) (not (= (x712 x171 1) x724))))
(assert (x419 x22))
(assert (x419 x248))
(assert (x419 x440))
(assert (x419 x593))
(assert (not (= 404098525 (x712 x400 52))))
(assert (=> (= (x712 x598 52) (x712 x660 52)) (= x598 x660)))
(assert (x419 x118))
(assert (=> (<= x624 10000) (not (= x624 (x712 x129 52)))))
(assert (not (= 340282366920938463463374607431768211455 (x712 x129 52))))
(assert (not (= 2113256763 (x712 x400 52))))
(assert (x419 x282))
(assert (x419 x28))
(assert (not (= (x712 x171 1) 340282366920938463463374607431768211456)))
(assert (=> (<= x603 10000) (not (= x603 (x712 x171 1)))))
(assert (x419 x113))
(assert (not (= 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x712 x98 1))))
(assert (x419 x632))
(assert (x419 x414))
(assert (x419 x87))
(assert (x350 x494))
(assert (x419 x150))
(assert (not (= 1889567281 (x712 x98 1))))
(assert (x419 x280))
(assert (not (= (x712 x598 52) 500000000000000000000000000)))
(assert (not (= 52 (x712 x494 1))))
(assert (=> (<= x398 10000) (not (= x398 (x712 x494 1)))))
(assert (x419 x472))
(assert (not (= 1000000000000000000000000000 (x712 x98 1))))
(assert (x419 x170))
(assert (not (= (x712 x603 1) 1889567281)))
(assert (not (= (x712 x398 1) 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (x419 x732))
(assert (= x91 (=> (and (or (and (not x728) (and (= x736 32) (= x153 (= x660 0)) (= (ite x485 1 0) x651) (= x485 (not x153)))) (and x728 (and (= x234 (x332 x87)) (< 0 x234) (= 1 x651)))) (and (< 0 x751) (= x728 (= x736 0)))) x85)))
(assert (x419 x193))
(assert (not (= (x712 x15 52) 404098525)))
(assert (= 1000000000000000000000000000 x100))
(assert (not (= 497176382 (x712 x400 52))))
(assert (not (= (x712 x398 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (= (x712 x129 52) (x712 x400 52)) (= x129 x400)))
(assert (not (= (x712 x334 1) 340282366920938463463374607431768211456)))
(assert (x419 x15))
(assert (=> (>= 10000 x494) (not (= x494 (x712 x494 1)))))
(assert (=> (<= x466 10000) (not (= (x712 x603 1) x466))))
(assert (=> (>= 10000 x598) (not (= x598 (x712 x400 52)))))
(assert (x419 x415))
(assert (=> (<= x87 10000) (not (= (x712 x171 1) x87))))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (x712 x494 1))))
(assert (x419 x598))
(assert (x419 x644))
(assert (=> (>= 10000 x171) (not (= (x712 x15 52) x171))))
(assert (=> (>= 10000 x660) (not (= x660 (x712 x598 52)))))
(assert (= (or (and (not x606) x128) x478) x530))
(assert (x419 x347))
(assert (not (= (x712 x598 52) 404098525)))
(assert (x419 x355))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x712 x15 52))))
(assert (not (= 22711052170661352172463706074549474602446478010439206087695126111415334600704 (x712 x171 1))))
(assert (x419 x617))
(assert (not (= (x712 x15 52) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x419 x234))
(assert (x350 x603))
(assert (not (= (x712 x400 52) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= (x712 x171 1) 1)))
(assert (x419 x353))
(assert (not (= 1000000000000000000000000000 (x712 x400 52))))
(assert (x419 x197))
(assert (not (= 500000000000000000000000000 (x712 x494 1))))
(assert (=> (<= x121 10000) (not (= x121 (x712 x129 52)))))
(assert (= x52 (=> (and (or (and (and (= x152 (x691 (- x13 x628))) (not (< x13 x628))) x706) (and (and (= (x691 (- x628 x13)) x379) (not (< x628 x13))) (not x706))) (= x706 (< x628 x13))) x264)))
(assert (not (= 1889567281 (x712 x129 52))))
(assert (x419 x629))
(assert (=> (= (x712 x603 1) (x712 x98 1)) (= x98 x603)))
(assert (x419 x449))
(assert (not (= (x712 x603 1) 22707518476531795403804539479547988765414823042645454849778882899012749361152)))
(assert (not (= 1 (x712 x603 1))))
(assert (not (= 157198259 (x712 x494 1))))
(assert (not (= (x712 x598 52) 497176382)))
(assert (x419 x403))
(assert (= (=> (and (= x381 x185) (= (x691 (- x150 x155)) x459) (= x194 x624) (= x459 x318) (= x399 x693) (= x182 0)) x64) x20))
(assert (not (= 340282366920938463463374607431768211455 (x712 x98 1))))
(assert (=> (>= 10000 x494) (not (= (x712 x603 1) x494))))
(assert (=> (<= x660 10000) (not (= x660 (x712 x171 1)))))
(assert (x419 x107))
(assert (=> (>= 10000 x15) (not (= x15 (x712 x603 1)))))
(assert (x419 x439))
(assert (=> (= (x712 x15 52) (x712 x129 52)) (= x15 x129)))
(assert (=> (>= 10000 x494) (not (= (x712 x15 52) x494))))
(assert (x419 x550))
(assert (x419 x543))
(assert (x419 x334))
(assert (not (= 404098525 (x712 x334 1))))
(assert (=> (= (x712 x603 1) (x712 x334 1)) (= x334 x603)))
(assert (not (= (x712 x660 52) 52)))
(assert (x419 x468))
(assert (not (= (x712 x494 1) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x419 x521))
(assert (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x712 x129 52))))
(assert (=> (>= 10000 x129) (not (= (x712 x398 1) x129))))
(assert (not (= (x712 x171 1) (x712 x15 52))))
(assert (not (= (x712 x334 1) 1889567281)))
(assert (= (=> (and (= x399 x506) (= x194 x456) (= x604 x318) (< 0 x721)) x163) x451))
(assert (x419 x698))
(assert (not (= 3607235850 (x712 x398 1))))
(assert (not (= (x712 x398 1) 22711052170661352172463706074549474602446478010439206087695126111415334600704)))
(assert (not (= 3018967357 (x712 x598 52))))
(assert (=> (>= 10000 x15) (not (= (x712 x334 1) x15))))
(assert (=> (= (x712 x129 52) (x712 x598 52)) (= x598 x129)))
(assert (=> (<= x129 10000) (not (= x129 (x712 x603 1)))))
(assert (x419 x13))
(assert (not (= (x712 x603 1) 52)))
(assert (not (= 115792089237316195423570985008687907853269984665640 (x712 x398 1))))
(assert (not (= 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x712 x15 52))))
(assert (=> (<= x15 10000) (not (= x15 (x712 x400 52)))))
(assert (not (= (x712 x398 1) 94699471215667416670508682402181198833950827816622411988269365108481485438976)))
(assert (not (= (x712 x98 1) 157198259)))
(assert (=> (<= x603 10000) (not (= x603 (x712 x598 52)))))
(assert (not (= (x712 x129 52) 3607235850)))
(assert (=> (>= 10000 x624) (not (= (x712 x598 52) x624))))
(assert (not (= (x712 x129 52) 1000000000000000000000000000)))
(assert (x419 x227))
(assert (not (= 1889567281 (x712 x598 52))))
(assert (x419 x522))
(assert (x419 x368))
(assert (x419 x683))
(assert (=> (= (x712 x494 1) (x712 x98 1)) (= x98 x494)))
(assert (x419 x582))
(assert (x419 x293))
(assert (x419 x597))
(assert (x419 x189))
(assert (= x716 (or x576 x524)))
(assert (=> (>= 10000 x171) (not (= (x712 x494 1) x171))))
(assert (x419 x235))
(assert (not (= (x712 x398 1) 157198259)))
(assert (not (= 340282366920938463463374607431768211455 (x712 x494 1))))
(assert (=> (= (x712 x598 52) (x712 x15 52)) (= x598 x15)))
(assert (not (= (x712 x334 1) 22707518476531795403804539479547988765414823042645454849778882899012749361152)))
(assert (=> (>= 10000 x598) (not (= x598 (x712 x603 1)))))
(assert (x419 x574))
(assert (x419 x182))
(assert (=> (>= 10000 x724) (not (= x724 (x712 x598 52)))))
(assert (x419 x670))
(assert (x419 x511))
(assert (x419 x659))
(assert (not (= (x712 x171 1) 3018967357)))
(assert (x419 x686))
(assert (=> (<= x494 10000) (not (= x494 (x712 x334 1)))))
(assert (x419 x188))
(assert (x419 x195))
(assert (x419 x59))
(assert (x419 x405))
(assert (not (= (x712 x598 52) 826074471)))
(assert (not (= 826074471 (x712 x129 52))))
(assert (= x192 (and x95 x558)))
(assert (x419 x261))
(assert (= x64 (=> (and (or x606 (not x606)) (= x606 (= 0 x182))) x305)))
(assert (=> (<= x466 10000) (not (= (x712 x171 1) x466))))
(assert (not (= (x712 x660 52) (x712 x334 1))))
(assert (not (= 1000000000000000000000000000 (x712 x598 52))))
(assert (not (= (x712 x603 1) 404098525)))
(assert (x419 x359))
(assert (not (= (x712 x494 1) (x712 x400 52))))
(assert (not (= (x712 x660 52) 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (not (= 2835717307 (x712 x334 1))))
(assert (not (= (x712 x400 52) 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (not (= (x712 x129 52) 52)))
(assert (not (= (x712 x98 1) 115792089237316195423570985008687907853269984665640)))
(assert (not (= (x712 x400 52) 1)))
(assert (x419 x559))
(assert (=> (>= 10000 x121) (not (= (x712 x98 1) x121))))
(assert (x419 x80))
(assert (= (and x556 x692) x149))
(assert (not (= (x712 x129 52) 2113256763)))
(assert (x419 x599))
(assert (= 1000000000000000000000000000 x590))
(assert (not (= 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x712 x398 1))))
(assert (x419 x452))
(assert (not (= 22707518476531795403804539479547988765414823042645454849778882899012749361152 (x712 x171 1))))
(assert (x419 x270))
(assert (x419 x461))
(assert (x419 x381))
(assert (= (or (and x556 (not x692)) x149) x518))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x712 x98 1))))
(assert (= x255 (and x665 (not x281))))
(assert (not (= (x712 x15 52) 1000000000000000000000000000)))
(assert (= x454 (and (not x728) x518)))
(assert (x419 x755))
(assert (not (= (x712 x598 52) (x712 x98 1))))
(assert (x419 x336))
(assert (x419 x601))
(assert (x369 340282366920938463463374607431768211455))
(assert (x419 x298))
(assert (not (= (x712 x598 52) 22402283082756182618670880521465619040657731284550890770856599233457073160192)))
(assert (not (= 1000000000000000000000000000 (x712 x603 1))))
(assert (not (= 826074471 (x712 x400 52))))
(assert (x419 x609))
(assert (x419 x588))
(assert (=> (>= 10000 x724) (not (= (x712 x400 52) x724))))
(assert (=> (>= 10000 x598) (not (= x598 (x712 x494 1)))))
(assert (not (= (x712 x400 52) (x712 x98 1))))
(assert (=> (= (x712 x171 1) (x712 x494 1)) (= x171 x494)))
(assert (=> (<= x129 10000) (not (= (x712 x334 1) x129))))
(assert (x419 x441))
(assert (x419 x656))
(assert (=> (>= 10000 x603) (not (= x603 (x712 x494 1)))))
(assert (x419 x96))
(assert (x419 x17))
(assert (not (= (x712 x98 1) 3018967357)))
(assert (= x47 (and x204 x504)))
(assert (=> (<= x171 10000) (not (= x171 (x712 x398 1)))))
(assert (= (and x608 x321) x224))
(assert (not (= 404098525 (x712 x398 1))))
(assert (=> (<= x400 10000) (not (= x400 (x712 x398 1)))))
(assert (x5 x511))
(assert (x419 x482))
(assert (not (= (x712 x98 1) 497176382)))
(assert (= (and (not x678) x245) x510))
(assert (= x206 (=> (and (= x649 x471) (and (= x396 (and x450 x675)) (= 3 x385) (= x753 x620) (= (+ x59 x201) x335) (= (* 3 x198) x722) (= (+ x559 x585) x36) (= x184 x470) (= x184 x674) (= x471 x174) (= (+ x536 x722) x331) (= x395 x439) (= (and x269 x384) x116) (= x683 x559) (= x252 (* 3 x460)) (= x139 (+ x565 x252)) (= (>= x133 x327) x675) (= x585 (* x50 3)) (= x325 3) (= x460 x184) (= x41 (<= x395 x331)) (= x19 x565) (= x753 x468) (= x416 x184) (= (* 3 x674) x201) (= x157 x308) (= x607 3) (= x184 x198) (= (<= x96 x335) x166) (= x236 (<= x326 x24)) (= (and x396 x618) x384) (= x689 x536) (= x50 x184) (= x439 x59) (= x535 3) (= x232 (>= x36 x620)) (= x24 (+ x468 x169)) (= x689 x96) (= x133 (+ x308 x27)) (= (* 3 x470) x27) (= x683 x326) (= x327 x19) (= x618 (and x166 x41)) (= x231 3) (= 3 x178) (= x450 (<= x666 x139)) (= x157 x666) (= (* x416 3) x169) (= (and x236 x232) x269))) x116)))
(assert (x419 x276))
(assert (not (= (x712 x334 1) 3607235850)))
(assert (x419 x432))
(assert (=> (>= 10000 x15) (not (= x15 (x712 x98 1)))))
(assert (=> (<= x400 10000) (not (= (x712 x400 52) x400))))
(assert (=> (>= 10000 x171) (not (= x171 (x712 x171 1)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x712 x129 52))))
(assert (x419 x239))
(assert (not (= 1889567281 (x712 x660 52))))
(assert (not (= (x712 x15 52) 1461501637330902918203684832716283019655932542976)))
(assert (x419 x719))
(assert (x419 x721))
(assert (x350 x87))
(assert (not (= (x712 x400 52) 599290589)))
(assert (x369 1461501637330902918203684832716283019655932542975))
(assert (=> (<= x129 10000) (not (= (x712 x598 52) x129))))
(assert (x350 x129))
(assert (x419 x183))
(assert (=> (<= x466 10000) (not (= x466 (x712 x398 1)))))
(assert (not (= 52 (x712 x171 1))))
(assert (= x552 (and (not x95) x558)))
(assert (x419 x351))
(assert (x419 x445))
(assert (=> (<= x121 10000) (not (= x121 (x712 x598 52)))))
(assert (x419 x344))
(assert (x419 x285))
(assert (not (= (x712 x398 1) (x712 x660 52))))
(assert (= x390 (and (not x159) x302)))
(assert (=> (>= 10000 x87) (not (= x87 (x712 x494 1)))))
(assert (x419 x210))
(assert (x419 x37))
(assert (x419 x86))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (x712 x660 52))))
(assert (=> (>= 10000 x98) (not (= x98 (x712 x98 1)))))
(assert (not (= 3607235850 (x712 x494 1))))
(assert (x112 x549))
(assert (x419 x743))
(assert (=> (<= x494 10000) (not (= x494 (x712 x398 1)))))
(assert (= (and (not x25) x716) x242))
(assert (x419 x328))
(assert (not (= (x712 x171 1) 2835717307)))
(assert (not (= (x712 x603 1) (x712 x660 52))))
(assert (x419 x642))
(assert (not (= (x712 x603 1) 500000000000000000000000000)))
(assert (not (= 599290589 (x712 x129 52))))
(assert (= x569 (=> (and (= x729 x147) (and (or (and (not x281) (and (not (= 0 x189)) (= x189 (x332 x724)))) x281) (and (= x729 x295) (= x343 (x563 (+ x293 500000000000000000000000000))) (= (x563 (+ 500000000000000000000000000 x403)) x566) (<= x82 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x400) (= x265 (mod (* x754 x409) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= 1461501637330902918203684832716283019655932542975 x398) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x150) (= 0 x684) (= x684 x336) (>= 340282366920938463463374607431768211455 x30) (= x158 (not x463)) (>= 1461501637330902918203684832716283019655932542975 x515) (= (x332 x98) x130) (= x522 x667) (= x137 x400) (= (or x146 x117) x373) (= (x712 x400 52) x58) (= x340 x181) (= x56 1000000000000000000000000000) (>= 340282366920938463463374607431768211455 x409) (= x113 (x551 1461501637330902918203684832716283019655932542975 x62)) (= (x712 x400 52) x3) (= (- x495 x250) x591) (= (div x343 1000000000000000000000000000) x155) (= x424 x158) (= x745 (div x420 1000000000000000000000000000)) (= x455 x595) (< x754 340282366920938463463374607431768211456) (= x341 0) (= 3607235850 x412) (= x146 (not x167)) (not (> 3018967357 x412)) (= x409 (x138 x134)) (= (= x724 0) x281) (= x754 (x81 x346)) (= (> x628 115792089237316195423570985008687907853269984665640) x623) (= (x691 (- x150 x155)) x39) (>= 1461501637330902918203684832716283019655932542975 x240) (= (x563 (+ x522 x22)) x628) (= x653 (> x409 115792089237316195423570985008687907853269984665640)) (> 1461501637330902918203684832716283019655932542976 x724) (= (x712 x400 52) x346) (= (= 0 x754) x117) (= x341 (ite x424 1 0)) (= (not x623) x463) (= (div 115792089237316195423570985008687907853269984665640064039457584007913129639935 x754) x715) (>= x150 0) (<= x754 340282366920938463463374607431768211455) (= x364 (x551 1461501637330902918203684832716283019655932542975 x62)) (>= x754 0) (= x293 (mod (* x628 1000000000000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (<= x250 340282366920938463463374607431768211455) (<= 0 x515) (<= 0 x30) (= x303 (div x566 1000000000000000000000000000)) (>= 1461501637330902918203684832716283019655932542975 x724) (<= 0 x250) (= x398 x525) (<= 0 x240) (= x415 x22) (not (< x303 x745)) (= (ite x373 1 0) x361) (= x700 x82) (= (ite x512 1 0) x368) (< 0 x368) (= (x691 (- x150 x155)) x191) (= x240 x181) (>= x724 0) (= (mod (* x409 1000000000000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x403) (= x440 (x691 (- x30 x155))) (<= 0 x409) (> x130 0) (= (x138 x3) x250) x389 (= x512 x216) (= x243 x364) (<= 0 x82) (= x447 (x551 340282366920938463463374607431768211455 x440)) (= x243 (x551 1461501637330902918203684832716283019655932542975 x700)) (= x300 (x551 1461501637330902918203684832716283019655932542975 x700)) (= (+ x447 x283) x495) (= (x691 (- x303 x745)) x13) (not (< x412 2113256763)) (< x30 340282366920938463463374607431768211456) (< x409 340282366920938463463374607431768211456) (= 1000000000000000000000000000 x644) (= (x712 x400 52) x134) (= (not x653) x216) (= (= x227 x591) x389) (= x113 x300) (not (< x30 x155)) (> x361 0) (= x30 (x138 x58)) (not (> x155 340282366920938463463374607431768211455)) (not (= x155 0)) (not (< x150 x155)) (not (> 3607235850 x412)) (= x420 (x563 (+ x265 500000000000000000000000000))) (= (< x715 x409) x167)))) x52)))
(assert (x419 x358))
(assert (not (= 2113256763 (x712 x598 52))))
(assert (not (= 340282366920938463463374607431768211455 (x712 x398 1))))
(assert (=> (= (x712 x334 1) (x712 x494 1)) (= x494 x334)))
(assert (x419 x487))
(assert (=> (<= x494 10000) (not (= x494 (x712 x400 52)))))
(assert (= x109 (or x540 x626)))
(assert (= x204 (and x135 (not x602))))
(check-sat)
(exit)