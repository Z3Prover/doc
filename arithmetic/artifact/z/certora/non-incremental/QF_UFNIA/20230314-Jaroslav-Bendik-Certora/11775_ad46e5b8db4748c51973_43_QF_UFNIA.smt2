(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x148 () Int)
(declare-fun x115 () Bool)
(declare-fun x543 () Bool)
(declare-fun x430 () Bool)
(declare-fun x470 () Int)
(declare-fun x272 () Bool)
(declare-fun x509 () Int)
(declare-fun x437 () Int)
(declare-fun x253 () Bool)
(declare-fun x312 () Int)
(declare-fun x589 () Int)
(declare-fun x584 () Int)
(declare-fun x574 () Bool)
(declare-fun x49 () Int)
(declare-fun x486 () Int)
(declare-fun x20 () Int)
(declare-fun x386 () Int)
(declare-fun x407 () Int)
(declare-fun x620 () Bool)
(declare-fun x25 () Bool)
(declare-fun x421 () Int)
(declare-fun x80 () Int)
(declare-fun x506 () Int)
(declare-fun x449 () Int)
(declare-fun x96 () Bool)
(declare-fun x140 () Int)
(declare-fun x155 () Bool)
(declare-fun x435 () Int)
(declare-fun x414 () Bool)
(declare-fun x265 () Int)
(declare-fun x340 () Int)
(declare-fun x131 () Bool)
(declare-fun x89 () Bool)
(declare-fun x150 () Int)
(declare-fun x285 () Bool)
(declare-fun x481 () Int)
(declare-fun x327 () Int)
(declare-fun x279 () Bool)
(declare-fun x298 () Int)
(declare-fun x501 () Int)
(declare-fun x212 () Bool)
(declare-fun x186 () Bool)
(declare-fun x183 () Int)
(declare-fun x494 () Int)
(declare-fun x36 () Int)
(declare-fun x256 () Bool)
(declare-fun x614 () Int)
(declare-fun x498 () Bool)
(declare-fun x168 () Bool)
(declare-fun x465 () Int)
(declare-fun x578 () Int)
(declare-fun x188 () Int)
(declare-fun x600 () Bool)
(declare-fun x64 () Int)
(declare-fun x538 () Int)
(declare-fun x69 () Int)
(declare-fun x249 () Int)
(declare-fun x530 () Int)
(declare-fun x515 () Int)
(declare-fun x129 () Bool)
(declare-fun x534 () Int)
(declare-fun x210 () Int)
(declare-fun x275 () Int)
(declare-fun x318 () Int)
(declare-fun x50 () Bool)
(declare-fun x209 () Int)
(declare-fun x525 () Int)
(declare-fun x479 () Bool)
(declare-fun x119 () Int)
(declare-fun x367 () Int)
(declare-fun x547 () Bool)
(declare-fun x499 () Int)
(declare-fun x28 () Int)
(declare-fun x44 () Int)
(declare-fun x464 () Bool)
(declare-fun x156 () Bool)
(declare-fun x331 () Bool)
(declare-fun x425 () Bool)
(declare-fun x571 () Int)
(declare-fun x87 () Int)
(declare-fun x408 () Bool)
(declare-fun x180 () Int)
(declare-fun x341 () Int)
(declare-fun x230 () Bool)
(declare-fun x242 () Int)
(declare-fun x332 () Int)
(declare-fun x535 () Int)
(declare-fun x335 () Bool)
(declare-fun x391 () Bool)
(declare-fun x38 () Int)
(declare-fun x389 (Int) Int)
(declare-fun x268 () Int)
(declare-fun x98 () Int)
(declare-fun x177 () Int)
(declare-fun x120 () Bool)
(declare-fun x103 () Int)
(declare-fun x174 () Int)
(declare-fun x244 () Int)
(declare-fun x461 () Int)
(declare-fun x136 () Int)
(declare-fun x111 () Int)
(declare-fun x455 () Int)
(declare-fun x21 () Int)
(declare-fun x416 () Bool)
(declare-fun x2 () Int)
(declare-fun x266 () Int)
(declare-fun x364 () Int)
(declare-fun x42 () Bool)
(declare-fun x39 () Int)
(declare-fun x558 () Int)
(declare-fun x9 () Bool)
(declare-fun x582 () Bool)
(declare-fun x617 () Int)
(declare-fun x35 () Int)
(declare-fun x500 () Int)
(declare-fun x615 () Int)
(declare-fun x392 () Int)
(declare-fun x176 () Bool)
(declare-fun x198 () Int)
(declare-fun x601 (Int) Int)
(declare-fun x40 () Bool)
(declare-fun x167 () Int)
(declare-fun x125 () Int)
(declare-fun x43 () Int)
(declare-fun x351 () Int)
(declare-fun x194 () Bool)
(declare-fun x385 () Int)
(declare-fun x399 () Int)
(declare-fun x257 () Bool)
(declare-fun x117 () Int)
(declare-fun x250 () Int)
(declare-fun x605 () Int)
(declare-fun x240 () Int)
(declare-fun x197 () Bool)
(declare-fun x394 () Int)
(declare-fun x97 () Int)
(declare-fun x353 () Int)
(declare-fun x355 () Bool)
(declare-fun x141 (Int Int) Int)
(declare-fun x356 () Int)
(declare-fun x404 () Int)
(declare-fun x232 () Bool)
(declare-fun x610 () Bool)
(declare-fun x300 () Int)
(declare-fun x611 () Int)
(declare-fun x58 () Int)
(declare-fun x301 () Int)
(declare-fun x83 () Int)
(declare-fun x462 () Bool)
(declare-fun x549 () Int)
(declare-fun x417 () Int)
(declare-fun x192 () Int)
(declare-fun x573 () Bool)
(declare-fun x145 () Bool)
(declare-fun x368 () Int)
(declare-fun x370 () Bool)
(declare-fun x169 () Bool)
(declare-fun x60 () Int)
(declare-fun x243 () Int)
(declare-fun x278 () Int)
(declare-fun x34 () Int)
(declare-fun x258 () Int)
(declare-fun x269 () Int)
(declare-fun x47 () Int)
(declare-fun x166 () Bool)
(declare-fun x439 () Int)
(declare-fun x213 () Int)
(declare-fun x572 () Int)
(declare-fun x26 () Int)
(declare-fun x436 () Int)
(declare-fun x603 () Int)
(declare-fun x570 () Int)
(declare-fun x292 () Int)
(declare-fun x70 () Int)
(declare-fun x289 () Int)
(declare-fun x536 () Bool)
(declare-fun x577 () Int)
(declare-fun x99 () Bool)
(declare-fun x30 () Bool)
(declare-fun x71 () Int)
(declare-fun x55 () Int)
(declare-fun x513 () Int)
(declare-fun x612 () Bool)
(declare-fun x532 () Bool)
(declare-fun x112 () Int)
(declare-fun x492 () Int)
(declare-fun x101 () Bool)
(declare-fun x233 () Int)
(declare-fun x284 () Int)
(declare-fun x545 () Int)
(declare-fun x190 () Int)
(declare-fun x411 () Bool)
(declare-fun x293 () Int)
(declare-fun x282 (Int) Int)
(declare-fun x381 () Int)
(declare-fun x171 () Bool)
(declare-fun x193 () Bool)
(declare-fun x133 () Bool)
(declare-fun x139 () Int)
(declare-fun x446 () Int)
(declare-fun x343 () Int)
(declare-fun x514 () Int)
(declare-fun x113 () Int)
(declare-fun x252 () Int)
(declare-fun x371 () Int)
(declare-fun x604 () Int)
(declare-fun x523 () Int)
(declare-fun x548 () Int)
(declare-fun x320 () Int)
(declare-fun x239 () Int)
(declare-fun x466 () Int)
(declare-fun x477 () Bool)
(declare-fun x458 () Int)
(declare-fun x555 () Int)
(declare-fun x310 () Int)
(declare-fun x173 () Int)
(declare-fun x325 () Int)
(declare-fun x281 () Int)
(declare-fun x127 () Bool)
(declare-fun x7 () Int)
(declare-fun x235 () Int)
(declare-fun x75 () Int)
(declare-fun x14 () Int)
(declare-fun x433 () Int)
(declare-fun x428 () Int)
(declare-fun x406 () Bool)
(declare-fun x90 () Int)
(declare-fun x153 () Bool)
(declare-fun x521 () Int)
(declare-fun x116 () Int)
(declare-fun x474 () Int)
(declare-fun x493 () Int)
(declare-fun x431 () Bool)
(declare-fun x444 () Int)
(declare-fun x539 () Int)
(declare-fun x453 () Int)
(declare-fun x161 () Int)
(declare-fun x522 () Int)
(declare-fun x618 (Int) Int)
(declare-fun x526 () Int)
(declare-fun x316 () Int)
(declare-fun x94 () Int)
(declare-fun x223 () Bool)
(declare-fun x199 () Bool)
(declare-fun x602 () Int)
(declare-fun x324 () Int)
(declare-fun x206 () Int)
(declare-fun x76 (Int) Int)
(declare-fun x365 () Int)
(declare-fun x569 () Int)
(declare-fun x165 () Bool)
(declare-fun x552 (Int) Int)
(declare-fun x208 () Int)
(declare-fun x390 () Int)
(declare-fun x237 () Int)
(declare-fun x563 () Bool)
(declare-fun x308 () Bool)
(declare-fun x379 () Int)
(declare-fun x195 () Int)
(declare-fun x100 () Bool)
(declare-fun x33 () Int)
(declare-fun x484 () Int)
(declare-fun x179 () Int)
(declare-fun x533 () Int)
(declare-fun x592 () Int)
(declare-fun x551 () Int)
(declare-fun x273 () Bool)
(declare-fun x159 () Int)
(declare-fun x41 () Int)
(declare-fun x354 () Int)
(declare-fun x144 () Int)
(declare-fun x497 () Bool)
(declare-fun x505 () Int)
(declare-fun x593 () Int)
(declare-fun x352 () Int)
(declare-fun x426 () Int)
(declare-fun x597 () Int)
(declare-fun x231 () Bool)
(declare-fun x222 () Bool)
(declare-fun x568 () Int)
(declare-fun x95 () Int)
(declare-fun x10 () Bool)
(declare-fun x447 () Int)
(declare-fun x251 () Bool)
(declare-fun x434 () Bool)
(declare-fun x303 () Int)
(declare-fun x387 () Int)
(declare-fun x104 (Int) Int)
(declare-fun x149 () Bool)
(declare-fun x344 () Int)
(declare-fun x583 () Int)
(declare-fun x321 () Int)
(declare-fun x290 () Int)
(declare-fun x373 () Int)
(declare-fun x585 () Int)
(declare-fun x72 () Bool)
(declare-fun x122 () Bool)
(declare-fun x107 () Int)
(declare-fun x130 () Bool)
(declare-fun x22 () Int)
(declare-fun x562 () Int)
(declare-fun x59 () Bool)
(declare-fun x427 () Int)
(declare-fun x163 () Int)
(declare-fun x567 () Int)
(declare-fun x518 (Int) Int)
(declare-fun x345 () Int)
(declare-fun x575 () Int)
(declare-fun x147 () Bool)
(declare-fun x61 () Bool)
(declare-fun x358 () Int)
(declare-fun x48 () Int)
(declare-fun x302 () Bool)
(declare-fun x62 () Int)
(declare-fun x376 () Bool)
(declare-fun x229 () Int)
(declare-fun x154 () Int)
(declare-fun x295 () Bool)
(declare-fun x32 () Int)
(declare-fun x211 () Int)
(declare-fun x319 () Int)
(declare-fun x306 () Int)
(declare-fun x326 () Int)
(declare-fun x361 () Int)
(declare-fun x114 () Int)
(declare-fun x224 () Bool)
(declare-fun x496 () Int)
(declare-fun x309 () Bool)
(declare-fun x475 () Bool)
(declare-fun x554 () Int)
(declare-fun x422 () Bool)
(declare-fun x225 () Int)
(declare-fun x118 () Int)
(declare-fun x467 () Bool)
(declare-fun x402 () Int)
(declare-fun x201 () Int)
(declare-fun x79 () Int)
(declare-fun x219 () Int)
(declare-fun x565 () Int)
(declare-fun x330 () Int)
(declare-fun x67 () Bool)
(declare-fun x445 () Int)
(declare-fun x77 () Int)
(declare-fun x305 () Int)
(declare-fun x456 () Int)
(declare-fun x401 () Bool)
(declare-fun x595 () Int)
(declare-fun x395 () Bool)
(declare-fun x349 () Bool)
(declare-fun x23 () Int)
(declare-fun x108 () Int)
(declare-fun x488 () Bool)
(declare-fun x557 () Int)
(declare-fun x328 () Bool)
(declare-fun x82 () Bool)
(declare-fun x622 () Bool)
(declare-fun x215 () Int)
(declare-fun x53 () Int)
(declare-fun x380 () Int)
(declare-fun x566 () Int)
(declare-fun x218 () Int)
(declare-fun x146 () Bool)
(declare-fun x424 () Int)
(declare-fun x576 () Int)
(declare-fun x313 () Bool)
(declare-fun x375 () Int)
(declare-fun x65 () Bool)
(declare-fun x84 () Int)
(declare-fun x196 () Int)
(declare-fun x204 () Bool)
(declare-fun x288 () Int)
(declare-fun x546 () Bool)
(declare-fun x483 () Int)
(declare-fun x438 () Bool)
(declare-fun x175 () Int)
(declare-fun x591 () Int)
(declare-fun x478 () Int)
(declare-fun x561 () Int)
(declare-fun x18 () Int)
(declare-fun x245 () Int)
(declare-fun x485 (Int Int) Int)
(declare-fun x263 () Int)
(declare-fun x4 () Bool)
(declare-fun x187 () Int)
(declare-fun x334 () Int)
(declare-fun x152 () Int)
(declare-fun x586 () Int)
(declare-fun x541 () Bool)
(declare-fun x419 () Int)
(declare-fun x297 () Int)
(declare-fun x299 () Bool)
(declare-fun x227 () Int)
(declare-fun x260 () Int)
(declare-fun x126 () Bool)
(declare-fun x92 () Int)
(declare-fun x164 () Int)
(declare-fun x246 () Int)
(declare-fun x267 () Bool)
(declare-fun x12 () Int)
(declare-fun x109 () Bool)
(declare-fun x440 () Bool)
(declare-fun x110 () Bool)
(declare-fun x66 () Int)
(declare-fun x121 () Bool)
(declare-fun x1 () Bool)
(declare-fun x556 () Int)
(declare-fun x45 () Int)
(declare-fun x137 () Int)
(declare-fun x189 () Int)
(declare-fun x520 () Bool)
(declare-fun x550 () Int)
(declare-fun x16 () Bool)
(declare-fun x11 () Bool)
(declare-fun x366 () Int)
(declare-fun x473 () Int)
(declare-fun x46 () Int)
(declare-fun x415 () Int)
(declare-fun x489 () Int)
(declare-fun x307 () Int)
(declare-fun x516 () Int)
(declare-fun x400 () Int)
(declare-fun x128 () Int)
(declare-fun x459 () Int)
(declare-fun x314 () Int)
(declare-fun x350 () Int)
(declare-fun x613 () Int)
(declare-fun x348 () Int)
(declare-fun x29 () Bool)
(declare-fun x359 () Bool)
(declare-fun x56 () Int)
(declare-fun x616 () Bool)
(declare-fun x418 () Bool)
(declare-fun x412 () Int)
(declare-fun x291 () Bool)
(declare-fun x202 () Int)
(declare-fun x185 () Int)
(declare-fun x333 () Int)
(declare-fun x51 () Bool)
(declare-fun x143 () Bool)
(declare-fun x5 () Bool)
(declare-fun x8 () Int)
(declare-fun x510 () Int)
(declare-fun x619 () Int)
(declare-fun x372 () Int)
(declare-fun x304 () Bool)
(declare-fun x388 () Bool)
(declare-fun x276 () Int)
(declare-fun x105 () Bool)
(declare-fun x608 () Int)
(declare-fun x88 () Int)
(declare-fun x413 () Bool)
(declare-fun x393 () Int)
(declare-fun x3 () Bool)
(declare-fun x442 () Int)
(declare-fun x142 () Bool)
(declare-fun x429 () Int)
(declare-fun x207 () Int)
(declare-fun x220 () Bool)
(declare-fun x54 () Int)
(declare-fun x588 () Int)
(declare-fun x598 () Bool)
(declare-fun x162 (Int) Int)
(declare-fun x181 () Int)
(declare-fun x544 () Int)
(declare-fun x15 () Int)
(declare-fun x248 () Bool)
(declare-fun x31 () Bool)
(declare-fun x78 () Bool)
(declare-fun x338 () Int)
(declare-fun x360 () Bool)
(declare-fun x24 () Bool)
(declare-fun x410 () Bool)
(declare-fun x134 () Int)
(declare-fun x57 () Int)
(declare-fun x221 () Bool)
(declare-fun x277 () Bool)
(declare-fun x454 () Int)
(declare-fun x398 () Int)
(declare-fun x73 () Int)
(declare-fun x472 () Int)
(declare-fun x178 () Int)
(declare-fun x37 () Int)
(declare-fun x482 () Bool)
(declare-fun x460 () Int)
(declare-fun x135 () Int)
(declare-fun x621 () Int)
(declare-fun x378 () Int)
(declare-fun x27 () Int)
(declare-fun x487 () Int)
(declare-fun x91 () Int)
(declare-fun x517 () Int)
(declare-fun x443 (Int) Int)
(declare-fun x93 () Int)
(declare-fun x158 () Bool)
(declare-fun x228 () Int)
(declare-fun x409 () Int)
(declare-fun x495 () Int)
(declare-fun x226 () Int)
(declare-fun x502 () Int)
(declare-fun x528 () Bool)
(declare-fun x151 () Int)
(declare-fun x384 () Int)
(declare-fun x52 (Int) Int)
(declare-fun x311 () Int)
(declare-fun x451 () Int)
(declare-fun x254 () Int)
(declare-fun x452 () Int)
(declare-fun x102 () Int)
(declare-fun x405 () Int)
(declare-fun x420 () Int)
(declare-fun x609 () Int)
(declare-fun x81 () Bool)
(declare-fun x511 () Int)
(declare-fun x457 () Bool)
(declare-fun x432 () Int)
(declare-fun x403 () Int)
(declare-fun x329 () Int)
(declare-fun x205 () Int)
(declare-fun x346 () Int)
(declare-fun x448 () Int)
(declare-fun x241 () Int)
(declare-fun x68 () Int)
(declare-fun x262 () Int)
(declare-fun x512 () Int)
(declare-fun x264 () Int)
(declare-fun x261 (Int) Int)
(declare-fun x519 () Bool)
(declare-fun x347 () Int)
(declare-fun x587 () Int)
(declare-fun x74 () Int)
(declare-fun x423 () Int)
(declare-fun x182 () Bool)
(declare-fun x296 () Bool)
(declare-fun x471 () Bool)
(declare-fun x86 () Int)
(declare-fun x123 () Bool)
(declare-fun x560 () Int)
(declare-fun x596 () Int)
(declare-fun x542 () Int)
(declare-fun x234 () Int)
(declare-fun x382 () Int)
(declare-fun x581 () Int)
(declare-fun x214 () Int)
(declare-fun x339 () Bool)
(declare-fun x540 () Int)
(declare-fun x13 () Int)
(declare-fun x559 () Bool)
(declare-fun x594 () Bool)
(declare-fun x200 () Bool)
(declare-fun x203 () Bool)
(declare-fun x579 () Int)
(declare-fun x469 () Int)
(declare-fun x315 () Int)
(declare-fun x271 () Int)
(declare-fun x191 () Int)
(declare-fun x564 () Int)
(declare-fun x216 (Int) Int)
(declare-fun x476 () Bool)
(declare-fun x317 () Int)
(declare-fun x357 () Bool)
(define-fun x184 ((x170 Int)) Int (ite (and (<= 0 x170) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x170)) x170 (- x170 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x336 ((x170 Int)) Int (ite (and (> 0 x170) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x170)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x170) x170))
(define-fun x238 ((x255 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x255) (<= 0 x255)))
(define-fun x527 ((x255 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x255) (<= 0 x255)))
(define-fun x396 ((x255 Int)) Bool (and (= (x485 x255 115792089237316195423570985008687907853269984665640564039457584007913129639935) x255) (= (x485 115792089237316195423570985008687907853269984665640564039457584007913129639935 x255) x255)))
(define-fun x450 ((x255 Int)) Bool (and (= 0 (x485 x255 0)) (= (x485 0 x255) 0)))
(define-fun x63 ((x255 Int)) Bool (= (x485 x255 x255) x255))
(define-fun x508 ((x255 Int)) Bool (and (x63 x255) (x450 x255) (x396 x255)))
(define-fun x491 ((x255 Int) (x270 Int)) Bool (= (x485 x270 x255) (x485 x255 x270)))
(define-fun x132 ((x255 Int) (x270 Int)) Bool (and (=> (<= 0 x255) (>= x255 (x485 x255 x270))) (>= (x485 x255 x270) 0) (=> (>= x270 0) (<= (x485 x255 x270) x270))))
(define-fun x524 ((x255 Int) (x270 Int)) Bool (and (x132 x255 x270) (x491 x255 x270)))
(define-fun x274 ((x255 Int)) Bool (= (mod x255 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (mod x255 32) (x485 x255 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x138 ((x255 Int)) Bool (and (x274 x255) (x524 x255 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x377 ((x255 Int)) Bool (= (x485 x255 1461501637330902918203684832716283019655932542975) (mod x255 1461501637330902918203684832716283019655932542976)))
(define-fun x363 ((x255 Int)) Bool (and (x377 x255) (x524 x255 1461501637330902918203684832716283019655932542975)))
(define-fun x283 ((x6 Int)) Int (x76 x6))
(define-fun x504 ((x6 Int)) Int (ite (= x6 x150) x382 (x518 x6)))
(define-fun x85 ((x6 Int)) Int (ite (= x341 x6) x177 (x504 x6)))
(define-fun x590 ((x6 Int)) Int (ite (= 128 x6) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x104 x6)))
(define-fun x259 ((x6 Int)) Int (ite (= 132 x6) x320 (x590 x6)))
(define-fun x280 ((x6 Int)) Int (ite (= 0 x6) x533 (x552 x6)))
(define-fun x531 ((x6 Int)) Int (ite (= 128 x6) x533 (x259 x6)))
(define-fun x553 ((x6 Int)) Int (ite (= x6 0) x345 (x552 x6)))
(define-fun x323 ((x6 Int)) Int (ite (= x6 128) x345 (x259 x6)))
(define-fun x124 ((x6 Int)) Int (ite (= 0 x6) x565 (x552 x6)))
(define-fun x247 ((x6 Int)) Int (ite (= 128 x6) x565 (x259 x6)))
(define-fun x160 ((x6 Int)) Int (ite x109 (ite x360 (x259 x6) (x531 x6)) (ite x176 (ite x193 (x259 x6) (x323 x6)) (ite x331 (x259 x6) (x247 x6)))))
(define-fun x480 ((x6 Int)) Int (ite (= x420 x6) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x160 x6)))
(define-fun x294 ((x6 Int)) Int (ite (= x6 x384) x320 (x480 x6)))
(define-fun x322 ((x6 Int)) Int (ite (= 0 x6) x28 (x443 x6)))
(define-fun x287 ((x6 Int)) Int (ite (= x420 x6) x28 (x294 x6)))
(define-fun x463 ((x6 Int)) Int (ite (= 0 x6) x13 (x443 x6)))
(define-fun x503 ((x6 Int)) Int (ite (= x6 x420) x13 (x294 x6)))
(define-fun x397 ((x6 Int)) Int (ite (= x6 0) x326 (x443 x6)))
(define-fun x383 ((x6 Int)) Int (ite (= x420 x6) x326 (x294 x6)))
(define-fun x529 ((x6 Int)) Int (ite (= 128 x6) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x216 x6)))
(define-fun x607 ((x6 Int)) Int (ite (= x6 132) x320 (x529 x6)))
(define-fun x537 ((x6 Int)) Int (ite (= x6 128) x522 (x607 x6)))
(define-fun x172 ((x6 Int)) Int (ite (= x6 128) x542 (x607 x6)))
(define-fun x369 ((x6 Int)) Int (ite (= x6 128) x92 (x607 x6)))
(define-fun x599 ((x6 Int)) Int (ite x9 (ite x359 (x607 x6) (x537 x6)) (ite x498 (ite x11 (x607 x6) (x172 x6)) (ite x406 (x607 x6) (x369 x6)))))
(define-fun x106 ((x6 Int)) Int (ite (= x6 x495) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x599 x6)))
(define-fun x362 ((x6 Int)) Int (ite (= x6 x551) x320 (x106 x6)))
(define-fun x507 ((x6 Int)) Int (ite (= x6 0) x187 (x282 x6)))
(define-fun x17 ((x6 Int)) Int (ite (= x495 x6) x187 (x362 x6)))
(define-fun x441 ((x6 Int)) Int (ite (= x6 x306) x426 (x518 x6)))
(define-fun x490 ((x6 Int)) Int (ite (= x578 x6) x367 (x441 x6)))
(define-fun x580 ((x6 Int)) Int (ite (= x6 0) x379 (x282 x6)))
(define-fun x19 ((x6 Int)) Int (ite (= x6 x495) x379 (x362 x6)))
(define-fun x337 ((x6 Int)) Int (ite (= x6 0) x70 (x282 x6)))
(define-fun x374 ((x6 Int)) Int (ite (= x495 x6) x70 (x362 x6)))
(define-fun x286 ((x6 Int)) Int (ite x248 (ite x612 (x294 x6) (x287 x6)) (ite x186 (ite x50 (x294 x6) (x503 x6)) (ite x519 (x294 x6) (x383 x6)))))
(define-fun x217 ((x6 Int)) Int (ite (= x6 x611) x523 (x261 x6)))
(define-fun x342 ((x6 Int)) Int (ite (= 0 x6) x522 (x601 x6)))
(define-fun x236 ((x6 Int)) Int (ite (= 0 x6) x542 (x601 x6)))
(define-fun x157 ((x6 Int)) Int (ite (= 0 x6) x92 (x601 x6)))
(define-fun x468 ((x6 Int)) Int (ite x357 (ite x203 (x362 x6) (x17 x6)) (ite x477 (ite x434 (x362 x6) (x19 x6)) (ite x200 (x362 x6) (x374 x6)))))
(define-fun x606 ((x6 Int)) Int (ite (= x6 x83) x87 (x261 x6)))
(assert (=> (>= 10000 x575) (not (= x575 (x141 x549 0)))))
(assert (not (= (x141 x320 1) 1989257563)))
(assert (not (= 2514000705 (x141 x237 0))))
(assert (=> (>= 10000 x207) (not (= x207 (x141 x549 0)))))
(assert (=> (<= x449 10000) (not (= x449 (x141 x86 0)))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x141 x449 1))))
(assert (not (= (x141 x234 1) (x141 x378 0))))
(assert (=> (= (x141 x205 0) (x141 x493 0)) (= x205 x493)))
(assert (x527 x27))
(assert (not (= 2569101039 (x141 x237 0))))
(assert (not (= (x141 x237 0) (x141 x584 1))))
(assert (=> (>= 10000 x493) (not (= x493 (x141 x64 0)))))
(assert (x527 x281))
(assert (not (= 2430363622 (x141 x378 0))))
(assert (= (and x67 x476) x479))
(assert (=> (<= x179 10000) (not (= (x141 0 0) x179))))
(assert (=> (<= x62 10000) (not (= (x141 x181 1) x62))))
(assert (= x355 (and x277 (not x273))))
(assert (not (= 2835717307 (x141 x597 1))))
(assert (=> (<= x597 10000) (not (= (x141 x493 0) x597))))
(assert (x527 x135))
(assert (x527 x447))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x141 x237 0))))
(assert (not (= (x141 x584 1) 1784838210)))
(assert (not (= (x141 x549 0) (x141 x234 1))))
(assert (not (= 826074471 (x141 x234 1))))
(assert (x527 x576))
(assert (= x349 (and x414 x121)))
(assert (x527 x412))
(assert (=> (>= 10000 x549) (not (= x549 (x141 x181 1)))))
(assert (=> (<= x449 10000) (not (= (x141 x597 1) x449))))
(assert (x527 x343))
(assert (=> (<= x46 10000) (not (= (x141 x179 1) x46))))
(assert (x527 x515))
(assert (= (or x11 x130) x498))
(assert (x527 x387))
(assert (x527 x93))
(assert (x527 x74))
(assert (=> (>= 10000 x378) (not (= x378 (x141 x64 0)))))
(assert (not (= (x141 x237 0) 1461501637330902918203684832716283019655932542975)))
(assert (not (= 1989257563 (x141 x205 0))))
(assert (=> (>= 10000 x164) (not (= x164 (x141 x344 1)))))
(assert (=> (<= x46 10000) (not (= x46 (x141 x586 1)))))
(assert (not (= (x141 x181 1) 1461501637330902918203684832716283019655932542976)))
(assert (=> (<= x575 10000) (not (= (x141 x473 0) x575))))
(assert (not (= (x141 x86 0) 2569101039)))
(assert (x527 x449))
(assert (x527 x44))
(assert (not (= (x141 x586 1) 234755713)))
(assert (=> (<= x205 10000) (not (= x205 (x141 x344 1)))))
(assert (x527 x614))
(assert (=> (<= x207 10000) (not (= x207 (x141 x473 0)))))
(assert (not (= 826074471 (x141 x549 0))))
(assert (x527 x585))
(assert (= (=> (and (= x79 x252) (= x506 x77)) x24) x532))
(assert (=> (<= x62 10000) (not (= x62 (x141 x586 1)))))
(assert (x527 x493))
(assert (not (= (x141 x86 0) 1461501637330902918203684832716283019655932542976)))
(assert (=> (>= 10000 x179) (not (= x179 (x141 x164 1)))))
(assert (not (= 826074471 (x141 x493 0))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x141 x597 1))))
(assert (=> (<= x205 10000) (not (= x205 (x141 x493 0)))))
(assert (x527 x94))
(assert (=> (>= 10000 x62) (not (= (x141 0 0) x62))))
(assert (not (= (x141 x181 1) 1952775229)))
(assert (x527 x326))
(assert (x527 x290))
(assert (not (= (x141 x473 0) (x141 x164 1))))
(assert (=> (>= 10000 x244) (not (= x244 (x141 x584 1)))))
(assert (not (= (x141 x493 0) 234755713)))
(assert (not (= 2569101039 (x141 x179 1))))
(assert (x527 x237))
(assert (not (= (x141 x449 1) (x141 x549 0))))
(assert (=> (>= 10000 x205) (not (= x205 (x141 x473 0)))))
(assert (not (= 2835717307 (x141 0 0))))
(assert (not (= 2569101039 (x141 x473 0))))
(assert (not (= (x141 x549 0) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x141 x320 1) 2569101039)))
(assert (x527 x554))
(assert (x527 x469))
(assert (x527 x234))
(assert (=> (<= x320 10000) (not (= x320 (x141 x549 0)))))
(assert (=> (>= 10000 x320) (not (= x320 (x141 x179 1)))))
(assert (not (= 404098525 (x141 x86 0))))
(assert (not (= (x141 x237 0) 826074471)))
(assert (not (= 1889567281 (x141 x473 0))))
(assert (not (= (x141 x584 1) 2757214935)))
(assert (not (= (x141 x586 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (>= 10000 x493) (not (= (x141 x86 0) x493))))
(assert (x527 x317))
(assert (x527 x603))
(assert (not (= (x141 x449 1) 404098525)))
(assert (=> (>= 10000 x234) (not (= (x141 x181 1) x234))))
(assert (not (= (x141 x62 0) (x141 x584 1))))
(assert (x527 x284))
(assert (x527 x214))
(assert (x527 x47))
(assert (not (= 1889567281 (x141 0 0))))
(assert (not (= 1 (x141 x473 0))))
(assert (x527 x68))
(assert (=> (= (x141 x586 1) (x141 x320 1)) (= x586 x320)))
(assert (not (= (x141 x320 1) 3524403367)))
(assert (not (= 961581905 (x141 x378 0))))
(assert (= (or x171 x193) x176))
(assert (not (= 404098525 (x141 x597 1))))
(assert (=> (>= 10000 x473) (not (= x473 (x141 x320 1)))))
(assert (not (= 3524403367 (x141 x549 0))))
(assert (=> (= (x141 x584 1) (x141 x449 1)) (= x584 x449)))
(assert (not (= (x141 x234 1) (x141 x205 0))))
(assert (=> (<= x586 10000) (not (= (x141 x181 1) x586))))
(assert (= (or x31 x359) x9))
(assert (not (= 234755713 (x141 x584 1))))
(assert (not (= 2757214935 (x141 x473 0))))
(assert (x238 x181))
(assert (not (= (x141 x584 1) 2430363622)))
(assert (not (= (x141 x64 0) 1)))
(assert (not (= (x141 x205 0) 2430363622)))
(assert (not (= (x141 x181 1) 2569101039)))
(assert (x527 x565))
(assert (not (= (x141 x493 0) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= 1784838210 (x141 x320 1))))
(assert (not (= (x141 x205 0) 1461501637330902918203684832716283019655932542975)))
(assert (x238 x207))
(assert (not (= (x141 x234 1) (x141 x493 0))))
(assert (x527 x544))
(assert (not (= (x141 x586 1) (x141 x493 0))))
(assert (=> (<= x207 10000) (not (= x207 (x141 x597 1)))))
(assert (not (= 3524403367 (x141 x597 1))))
(assert (not (= (x141 x164 1) 157198259)))
(assert (x527 x13))
(assert (x527 x64))
(assert (not (= (x141 x493 0) 1461501637330902918203684832716283019655932542976)))
(assert (x527 x526))
(assert (=> (= (x141 x586 1) (x141 x584 1)) (= x584 x586)))
(assert (=> (>= 10000 x62) (not (= (x141 x86 0) x62))))
(assert (not (= (x141 x86 0) 1889567281)))
(assert (x527 x501))
(assert (x238 x449))
(assert (x508 x513))
(assert (x527 x409))
(assert (not (= (x141 x586 1) 2514000705)))
(assert (x527 x218))
(assert (not (= (x141 x205 0) (x141 x586 1))))
(assert (not (= 0 (x141 x493 0))))
(assert (x527 x545))
(assert (x527 x107))
(assert (not (= 1889567281 (x141 x493 0))))
(assert (=> (>= 10000 x237) (not (= (x141 x549 0) x237))))
(assert (x527 x424))
(assert (= x199 (=> (and (= x393 x134) (= x254 x447)) x411)))
(assert (x527 x140))
(assert (not (= (x141 x62 0) (x141 x586 1))))
(assert (=> (<= x181 10000) (not (= (x141 x164 1) x181))))
(assert (=> (<= x575 10000) (not (= x575 (x141 x179 1)))))
(assert (= (or (and (not x59) x355) (and x273 x277)) x406))
(assert (not (= 1 (x141 x597 1))))
(assert (=> (>= 10000 x64) (not (= x64 (x141 x62 0)))))
(assert (=> (>= 10000 x62) (not (= (x141 x237 0) x62))))
(assert (=> (<= x234 10000) (not (= x234 (x141 x320 1)))))
(assert (= (and x123 x573) x520))
(assert (not (= (x141 x584 1) 826074471)))
(assert (not (= (x141 x237 0) (x141 x179 1))))
(assert (=> (>= 10000 x181) (not (= (x141 x179 1) x181))))
(assert (x527 x46))
(assert (not (= (x141 0 0) 826074471)))
(assert (=> (>= 10000 x86) (not (= (x141 x473 0) x86))))
(assert (=> (>= 10000 x179) (not (= x179 (x141 x86 0)))))
(assert (not (= 1889567281 (x141 x344 1))))
(assert (not (= (x141 x597 1) (x141 x549 0))))
(assert (not (= (x141 x64 0) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= (x141 x493 0) (x141 x449 1))))
(assert (x238 x575))
(assert (x527 x473))
(assert (=> (= (x141 x181 1) (x141 x344 1)) (= x181 x344)))
(assert (not (= 2430363622 (x141 x179 1))))
(assert (not (= (x141 x549 0) 2430363622)))
(assert (not (= (x141 x205 0) 1)))
(assert (x527 x495))
(assert (not (= (x141 x586 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x527 x266))
(assert (not (= (x141 x449 1) 2430363622)))
(assert (=> (>= 10000 x320) (not (= (x141 x62 0) x320))))
(assert (=> (>= 10000 x234) (not (= (x141 x549 0) x234))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x141 0 0))))
(assert (=> (>= 10000 x64) (not (= x64 (x141 x473 0)))))
(assert (not (= (x141 x164 1) 1952775229)))
(assert (x527 x316))
(assert (=> (>= 10000 x575) (not (= (x141 x62 0) x575))))
(assert (x238 x549))
(assert (x527 x608))
(assert (not (= (x141 x64 0) 2757214935)))
(assert (= (and (not x559) x479) x123))
(assert (=> (>= 10000 x586) (not (= x586 (x141 x164 1)))))
(assert (not (= (x141 x597 1) (x141 0 0))))
(assert (=> (= (x141 0 0) (x141 x205 0)) (= 0 x205)))
(assert (not (= (x141 x179 1) 1989257563)))
(assert (x527 x26))
(assert (not (= (x141 x234 1) 234755713)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x141 x181 1))))
(assert (x527 x461))
(assert (=> (>= 10000 x86) (not (= x86 (x141 x62 0)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x141 x86 0))))
(assert (= (and x622 (not x230)) x5))
(assert (=> (<= x62 10000) (not (= (x141 x344 1) x62))))
(assert (x527 x368))
(assert (not (= 961581905 (x141 x549 0))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x141 x62 0))))
(assert (not (= (x141 x181 1) 234755713)))
(assert (=> (<= x473 10000) (not (= x473 (x141 x493 0)))))
(assert (=> (>= 10000 x181) (not (= x181 (x141 x344 1)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x141 x449 1))))
(assert (=> (>= 10000 x344) (not (= x344 (x141 x164 1)))))
(assert (not (= (x141 x205 0) (x141 x320 1))))
(assert (=> (<= x320 10000) (not (= x320 (x141 x234 1)))))
(assert (not (= 2569101039 (x141 x64 0))))
(assert (x527 x91))
(assert (not (= (x141 x164 1) 0)))
(assert (not (= (x141 x237 0) 2757214935)))
(assert (=> (>= 10000 x205) (not (= (x141 x181 1) x205))))
(assert (x527 x249))
(assert (=> (<= x237 10000) (not (= (x141 x234 1) x237))))
(assert (x527 x426))
(assert (not (= (x141 x344 1) 0)))
(assert (=> (<= x320 10000) (not (= x320 (x141 x378 0)))))
(assert (not (= 1989257563 (x141 x597 1))))
(assert (x527 x364))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x141 x234 1))))
(assert (not (= (x141 x179 1) (x141 x64 0))))
(assert (=> (>= 10000 x181) (not (= (x141 x86 0) x181))))
(assert (=> (<= x207 10000) (not (= (x141 x62 0) x207))))
(assert (not (= 404098525 (x141 x237 0))))
(assert (=> (>= 10000 x179) (not (= (x141 x205 0) x179))))
(assert (not (= 0 (x141 x584 1))))
(assert (=> (= (x141 x64 0) (x141 x86 0)) (= x64 x86)))
(assert (= (=> (and (= x233 x511) (= x353 x245)) x401) x388))
(assert (x527 x581))
(assert (not (= 826074471 (x141 x449 1))))
(assert (=> (>= 10000 x449) (not (= x449 (x141 x320 1)))))
(assert (=> (>= 10000 x237) (not (= (x141 x237 0) x237))))
(assert (=> (<= x575 10000) (not (= x575 (x141 x234 1)))))
(assert (x527 x500))
(assert (not (= 2757214935 (x141 x86 0))))
(assert (=> (>= 10000 x179) (not (= (x141 x62 0) x179))))
(assert (x527 x240))
(assert (=> (<= x179 10000) (not (= (x141 x344 1) x179))))
(assert (=> (<= x205 10000) (not (= x205 (x141 x378 0)))))
(assert (=> (>= 10000 x493) (not (= x493 (x141 x179 1)))))
(assert (not (= (x141 x181 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (=> (<= x449 10000) (not (= (x141 x205 0) x449))))
(assert (not (= (x141 x234 1) 1889567281)))
(assert (not (= (x141 x586 1) (x141 x473 0))))
(assert (not (= (x141 x378 0) 1989257563)))
(assert (=> (<= x86 10000) (not (= x86 (x141 x164 1)))))
(assert (=> (<= x575 10000) (not (= (x141 x586 1) x575))))
(assert (not (= (x141 x584 1) (x141 x86 0))))
(assert (=> (>= 10000 x62) (not (= (x141 x164 1) x62))))
(assert (=> (<= x86 10000) (not (= x86 (x141 x64 0)))))
(assert (not (= 1784838210 (x141 x234 1))))
(assert (=> (= (x141 x62 0) (x141 x237 0)) (= x62 x237)))
(assert (x508 x621))
(assert (not (= 1 (x141 x62 0))))
(assert (=> (<= x586 10000) (not (= (x141 x86 0) x586))))
(assert (x527 x510))
(assert (x527 x535))
(assert (=> (>= 10000 x493) (not (= (x141 x586 1) x493))))
(assert (=> (>= 10000 x344) (not (= (x141 x597 1) x344))))
(assert (=> (>= 10000 x164) (not (= (x141 x205 0) x164))))
(assert (x527 x417))
(assert (not (= (x141 x473 0) (x141 x584 1))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x141 x164 1))))
(assert (not (= (x141 x164 1) (x141 0 0))))
(assert (=> (<= x586 10000) (not (= x586 (x141 x378 0)))))
(assert (x527 x384))
(assert (=> (>= 10000 x344) (not (= (x141 x473 0) x344))))
(assert (not (= 0 (x141 x597 1))))
(assert (=> (>= 10000 x493) (not (= (x141 x205 0) x493))))
(assert (=> (>= 10000 x181) (not (= x181 (x141 x586 1)))))
(assert (=> (>= 10000 x62) (not (= (x141 x493 0) x62))))
(assert (=> (<= x378 10000) (not (= x378 (x141 x181 1)))))
(assert (not (= (x141 x378 0) 3524403367)))
(assert (x527 x206))
(assert (x238 x473))
(assert (=> (<= x586 10000) (not (= x586 (x141 x64 0)))))
(assert (=> (<= x234 10000) (not (= x234 (x141 x493 0)))))
(assert (= (=> (and (= x447 0) (= x134 x292)) x199) x339))
(assert (=> (<= x549 10000) (not (= x549 (x141 x597 1)))))
(assert (x527 x321))
(assert (not (= (x141 x378 0) 2569101039)))
(assert (not (= (x141 x62 0) (x141 x449 1))))
(assert (=> (<= x575 10000) (not (= x575 (x141 x597 1)))))
(assert (not (= (x141 x597 1) 826074471)))
(assert (not (= (x141 x344 1) (x141 x549 0))))
(assert (not (= (x141 x378 0) 1784838210)))
(assert (not (= 1 (x141 x449 1))))
(assert (=> (>= 10000 x46) (not (= (x141 x234 1) x46))))
(assert (=> (<= x586 10000) (not (= (x141 x179 1) x586))))
(assert (not (= 1784838210 (x141 x549 0))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x141 x164 1))))
(assert (x527 x347))
(assert (x527 x300))
(assert (not (= (x141 x86 0) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (=> (<= x584 10000) (not (= (x141 x586 1) x584))))
(assert (x527 x84))
(assert (= (and x147 (not x16)) x414))
(assert (x527 x569))
(assert (=> (<= x575 10000) (not (= x575 (x141 x64 0)))))
(assert (not (= (x141 x378 0) 2757214935)))
(assert (= (and x594 x78) x295))
(assert (x527 x293))
(assert (=> (<= x86 10000) (not (= (x141 x234 1) x86))))
(assert (=> (= (x141 x344 1) (x141 x584 1)) (= x584 x344)))
(assert (not (= 1 (x141 x344 1))))
(assert (=> (<= x344 10000) (not (= x344 (x141 x62 0)))))
(assert (not (= (x141 x584 1) (x141 0 0))))
(assert (=> (= (x141 x237 0) (x141 x86 0)) (= x237 x86)))
(assert (x527 x260))
(assert (=> (>= 10000 x584) (not (= x584 (x141 0 0)))))
(assert (= (or x109 x176 x253) x224))
(assert (=> (<= x237 10000) (not (= (x141 0 0) x237))))
(assert (x527 x568))
(assert (= (or x331 x308) x253))
(assert (not (= 1784838210 (x141 x179 1))))
(assert (=> (<= x549 10000) (not (= (x141 x344 1) x549))))
(assert (not (= 404098525 (x141 x344 1))))
(assert (not (= 2569101039 (x141 x62 0))))
(assert (=> (>= 10000 x549) (not (= x549 (x141 x584 1)))))
(assert (x527 x185))
(assert (= (and (not x146) x425) x101))
(assert (= x251 (=> (and (= x242 x77) (= x252 x226)) x24)))
(assert (=> (= (x141 x320 1) (x141 x179 1)) (= x320 x179)))
(assert (x527 x499))
(assert (x527 x452))
(assert (x238 x586))
(assert (not (= (x141 x378 0) 2514000705)))
(assert (=> (>= 10000 x449) (not (= (x141 x586 1) x449))))
(assert (x527 x148))
(assert (=> (<= x584 10000) (not (= x584 (x141 x62 0)))))
(assert (=> (<= x473 10000) (not (= x473 (x141 x586 1)))))
(assert (not (= (x141 x205 0) 157198259)))
(assert (=> (<= x597 10000) (not (= x597 (x141 x584 1)))))
(assert (x527 x229))
(assert (x527 x589))
(assert (not (= (x141 x234 1) (x141 x62 0))))
(assert (not (= (x141 x205 0) (x141 x584 1))))
(assert (=> (= (x141 x62 0) (x141 x205 0)) (= x62 x205)))
(assert (=> (<= x64 10000) (not (= x64 (x141 x181 1)))))
(assert (not (= (x141 x86 0) 3524403367)))
(assert (not (= (x141 x64 0) 2514000705)))
(assert (=> (<= x584 10000) (not (= x584 (x141 x597 1)))))
(assert (x238 x179))
(assert (=> (>= 10000 x64) (not (= (x141 x320 1) x64))))
(assert (= x476 (and x309 (not x471))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x141 x493 0))))
(assert (not (= (x141 x62 0) (x141 x181 1))))
(assert (=> (>= 10000 x86) (not (= x86 (x141 x179 1)))))
(assert (not (= 961581905 (x141 x234 1))))
(assert (= (=> (and (= x278 x517) (= x496 x572)) x143) x99))
(assert (x527 x108))
(assert (=> (>= 10000 x320) (not (= (x141 x584 1) x320))))
(assert (x527 x381))
(assert (x527 x183))
(assert (not (= (x141 x597 1) (x141 x473 0))))
(assert (=> (>= 10000 x181) (not (= (x141 x62 0) x181))))
(assert (= x488 (=> (and (= 0 x79) (= x368 x506)) x532)))
(assert (not (= (x141 x320 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 2835717307 (x141 x237 0))))
(assert (=> (>= 10000 x164) (not (= x164 (x141 x234 1)))))
(assert (=> (<= x320 10000) (not (= (x141 x237 0) x320))))
(assert (=> (<= x244 10000) (not (= x244 (x141 x586 1)))))
(assert (=> (>= 10000 x205) (not (= (x141 x205 0) x205))))
(assert (not (= (x141 x237 0) 2430363622)))
(assert (=> (>= 10000 x244) (not (= (x141 x549 0) x244))))
(assert (=> (>= 10000 x378) (not (= (x141 x62 0) x378))))
(assert (x527 x579))
(assert (=> (>= 10000 x164) (not (= x164 (x141 x320 1)))))
(assert (=> (<= x181 10000) (not (= x181 (x141 x378 0)))))
(assert (= (=> (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x338 x290)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x591) (>= x290 0) (< (+ x284 x591) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< (+ x290 x284) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x86 (x485 1461501637330902918203684832716283019655932542975 x392)) (<= x290 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 0 x290)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x228) (= x330 x284) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x245) (and (= (<= x245 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x245)))) (not (= 0 x436)) (<= 0 x469) (= x436 (x485 1461501637330902918203684832716283019655932542975 x392)) (= (+ x301 x330) x523) (not (> x20 x18)) (<= 0 x591) (<= 0 x228) (= x284 x512) (= x457 (> x347 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x284 (div x136 x228)) (= x516 (+ x174 x512)) (< (* x18 x347) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (= 0 x284)) (> x228 0) (not (= x511 0)) (>= x290 0) (= (x141 x86 0) x611) (not (< x347 x510)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x290) (= (x336 (- x35 x228)) x338) (= x208 x284) (= x38 (* x347 x18)) (not (< x35 x228)) (= x591 x301) (= (* x290 x338) x136) (= x38 x35) (= (x261 x611) x469) (not x457) (= (x286 x420) x18) (= x591 (x261 x611)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x469) (= x174 x290)) (and (and (and (<= x375 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x334 0) (= x375 (x518 x538)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x400 x334)) (not (< x375 x400)) (= (x141 x320 1) x557) (= x185 0) (= x185 x534) (>= x375 0) (<= 0 x167) (>= 1461501637330902918203684832716283019655932542975 x298) (= x584 x478) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x400 x334))) (>= 1461501637330902918203684832716283019655932542975 x320) (= x400 x568) (< 0 x372) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x334) (= (x141 x584 1) x538) (= x400 x456) (= x459 x334) (not (= 1889567281 x617)) (= 1 x515) (= (x441 x557) x334) (= (+ x456 x459) x367) (= x167 x340) (not (= 826074471 x617)) (= (x618 x207) x372) (= (x336 (- x375 x400)) x426) (>= x298 0) (not (> 826074471 x617)) (not (= 2514000705 x617)) (= (x141 x320 1) x578) (not (> x400 x375)) (>= x478 0) (<= x167 1461501637330902918203684832716283019655932542975) (= x356 x214) (<= x478 1461501637330902918203684832716283019655932542975) (= x305 x340) (= (x141 x584 1) x306) (= x617 2835717307)) (and (= x444 x47) (>= 1461501637330902918203684832716283019655932542975 x293) (<= x445 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x321 (x618 x46)) (= (= x575 x46) x16) (not (= x91 826074471)) (= x439 128) (not (= x321 0)) (<= x510 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x91 1889567281) (= (x618 x320) x178) (= x74 x608) (< x46 1461501637330902918203684832716283019655932542976) (not (= x91 961581905)) (>= x74 0) (= x444 x260) (>= x293 0) (not (> 826074471 x91)) (= 1784838210 x91) (<= 0 x20) (= 1 x445) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x20) (>= x46 0) (>= 1461501637330902918203684832716283019655932542975 x62) (>= x445 0) (= x94 x107) (<= 0 x510) (= x69 x62) (<= x47 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x74) (< 0 x178) (>= 1461501637330902918203684832716283019655932542975 x46) (>= x47 0) (= x94 0))) (and (not (> 1889567281 x97)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x333) (= x484 (x141 x237 0)) (<= x237 1461501637330902918203684832716283019655932542975) (= x208 x399) (= x333 (x217 x484)) (< 0 x240) (>= x333 0) (= x333 x214) (= x237 x69) (> 2569101039 x97) (= 1889567281 x97) (= x240 (x618 x320))))) (and (=> (and x16 (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x173) (and (< x173 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x173) true))) x1) (> x55 0) (= x219 1889567281) (= x164 x320) (not (= x219 826074471)) (not (< x219 826074471)) (= 36 x213) (= x55 (x618 x575)) (not (< x213 4)) (= x173 (x336 (- x213 4))) (= 36 x213) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x7))) (and (=> x1 x547) (=> (and (not x1) (and (= (= x164 x320) x29) (= x164 x587))) (and (=> (and (and (= (x141 x164 1) x271) (= (x162 x271) x522) (= x210 1) (= x581 32) (<= x522 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x522)) x29) x285) (=> (not x29) x547))))) (=> (and (not x16) (= (= x207 x46) x121)) (and (=> (and x121 (and (= (x618 x207) x202) (= (or (> x466 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x466 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x466 32))) x127) (not (= x60 826074471)) (= x316 36) (< 0 x202) (= x344 x320) (= 1889567281 x60) (= x316 36) (not (> 826074471 x60)) (= (x336 (- x316 4)) x466) (= x398 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (< x316 4)))) (and (=> (and (not x127) (and (= x27 x344) (= x467 (= x344 x320)))) (and (=> (and (and (= 1 x447) (= x494 (x141 x344 1)) (<= 0 x542) (= (x490 x494) x542) (<= x542 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 32 x134)) x467) x199) (=> (not x467) x339))) (=> x127 x339))) (=> (and (not x121) (and (= (= x320 x46) x610) (and x610 (and (< x530 2569101039) (= x243 (x336 (- x386 4))) (= 36 x386) (not (> 4 x386)) (not (< x530 1889567281)) (= x386 36) (= (x618 x320) x454) (= x64 x320) (= 1889567281 x530) (= x437 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x273 (or (> x243 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x243) true) (< x243 32)))) (< 0 x454))))) (and (=> x273 x40) (=> (and (not x273) (and (= x64 x215) (= (= x64 x320) x59))) (and (=> (and (and (= x92 (x261 x474)) (<= 0 x92) (= 1 x263) (= 32 x229) (<= x92 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x141 x64 0) x474)) x59) x272) (=> (not x59) x40))))))))) x401))
(assert (=> (= (x141 x181 1) (x141 x597 1)) (= x181 x597)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x141 x473 0))))
(assert (=> (>= 10000 x234) (not (= (x141 x378 0) x234))))
(assert (not (= 2835717307 (x141 x473 0))))
(assert (=> (>= 10000 x584) (not (= (x141 x179 1) x584))))
(assert (not (= 2514000705 (x141 x181 1))))
(assert (= (and x42 (not x610)) x110))
(assert (not (= 2514000705 (x141 x584 1))))
(assert (x527 x35))
(assert (not (= 404098525 (x141 x549 0))))
(assert (not (= (x141 x493 0) 1989257563)))
(assert (x527 x325))
(assert (=> (>= 10000 x586) (not (= (x141 x62 0) x586))))
(assert (x527 x228))
(assert (=> (>= 10000 x575) (not (= (x141 x205 0) x575))))
(assert (not (= 1 (x141 0 0))))
(assert (= x133 (or x335 x406)))
(assert (not (= (x141 x181 1) 1)))
(assert (=> (>= 10000 x62) (not (= (x141 x62 0) x62))))
(assert (not (= 1 (x141 x493 0))))
(assert (x527 x584))
(assert (not (= (x141 x237 0) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x527 x514))
(assert (=> (<= x449 10000) (not (= x449 (x141 x234 1)))))
(assert (x527 x73))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x141 x320 1))))
(assert (x527 x88))
(assert (x527 x448))
(assert (=> (<= x378 10000) (not (= (x141 x586 1) x378))))
(assert (x527 x564))
(assert (not (= (x141 0 0) (x141 x449 1))))
(assert (not (= (x141 x205 0) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (=> (= (x141 x86 0) (x141 0 0)) (= 0 x86)))
(assert (=> (= (x141 x449 1) (x141 x234 1)) (= x449 x234)))
(assert (not (= 1952775229 (x141 x64 0))))
(assert (=> (<= x64 10000) (not (= x64 (x141 x584 1)))))
(assert (not (= (x141 x237 0) (x141 x344 1))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x141 x179 1))))
(assert (not (= 157198259 (x141 x344 1))))
(assert (=> (<= x493 10000) (not (= x493 (x141 x344 1)))))
(assert (=> (>= 10000 x62) (not (= x62 (x141 x205 0)))))
(assert (not (= (x141 x164 1) (x141 x62 0))))
(assert (=> (>= 10000 x234) (not (= (x141 x344 1) x234))))
(assert (not (= (x141 x586 1) 1989257563)))
(assert (=> (>= 10000 x234) (not (= x234 (x141 x597 1)))))
(assert (x527 x187))
(assert (not (= (x141 x344 1) 1952775229)))
(assert (=> (<= x46 10000) (not (= x46 (x141 x64 0)))))
(assert (=> (>= 10000 x179) (not (= x179 (x141 x449 1)))))
(assert (=> (= (x141 x584 1) (x141 x164 1)) (= x164 x584)))
(assert (x527 x334))
(assert (not (= (x141 x597 1) 961581905)))
(assert (x527 x522))
(assert (not (= (x141 x586 1) 1889567281)))
(assert (not (= (x141 x62 0) (x141 x344 1))))
(assert (not (= (x141 x597 1) 2569101039)))
(assert (x527 x597))
(assert (not (= (x141 x320 1) 404098525)))
(assert (= x302 (and x475 x482)))
(assert (=> (<= x586 10000) (not (= (x141 x493 0) x586))))
(assert (not (= (x141 x493 0) (x141 x584 1))))
(assert (not (= 1 (x141 x378 0))))
(assert (=> (>= 10000 x164) (not (= (x141 x586 1) x164))))
(assert (not (= (x141 x320 1) 234755713)))
(assert (=> (<= x64 10000) (not (= x64 (x141 x586 1)))))
(assert (not (= (x141 x64 0) 1461501637330902918203684832716283019655932542975)))
(assert (x527 x320))
(assert (not (= (x141 x549 0) 2569101039)))
(assert (=> (<= x62 10000) (not (= x62 (x141 x234 1)))))
(assert (x527 x87))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x141 x449 1))))
(assert (=> (>= 10000 x549) (not (= x549 (x141 x586 1)))))
(assert (not (= 1952775229 (x141 x86 0))))
(assert (=> (<= x244 10000) (not (= x244 (x141 x378 0)))))
(assert (=> (= (x141 x584 1) (x141 x181 1)) (= x181 x584)))
(assert (not (= (x141 x234 1) 2835717307)))
(assert (x238 x234))
(assert (= x203 (or (and x598 x279) (and (not x563) x212))))
(assert (x527 x298))
(assert (x527 x570))
(assert (=> (>= 10000 x46) (not (= x46 (x141 x549 0)))))
(assert (x527 x393))
(assert (= (and x467 x582) x130))
(assert (x527 x356))
(assert (=> (>= 10000 x46) (not (= x46 (x141 x62 0)))))
(assert (x527 x378))
(assert (=> (>= 10000 x234) (not (= (x141 x234 1) x234))))
(assert (not (= 1952775229 (x141 x237 0))))
(assert (x527 x8))
(assert (= (=> (and (= x361 x517) (= 0 x572)) x99) x299))
(assert (x527 x318))
(assert (x527 x617))
(assert (not (= (x141 x179 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x141 x584 1))))
(assert (=> (= (x141 x449 1) (x141 x597 1)) (= x597 x449)))
(assert (not (= (x141 x586 1) (x141 x378 0))))
(assert (not (= (x141 x164 1) 2569101039)))
(assert (x527 x20))
(assert (=> (<= x46 10000) (not (= x46 (x141 x378 0)))))
(assert (=> (= (x141 x378 0) (x141 0 0)) (= 0 x378)))
(assert (not (= (x141 0 0) (x141 x181 1))))
(assert (x527 x154))
(assert (not (= 1784838210 (x141 x449 1))))
(assert (x527 x319))
(assert (x527 x264))
(assert (not (= (x141 x234 1) (x141 x237 0))))
(assert (=> (<= x449 10000) (not (= x449 (x141 x378 0)))))
(assert (=> (>= 10000 x549) (not (= x549 (x141 x179 1)))))
(assert (x527 x446))
(assert (x527 x340))
(assert (not (= (x141 x179 1) (x141 x86 0))))
(assert (=> (<= x237 10000) (not (= (x141 x62 0) x237))))
(assert (x527 x402))
(assert (x527 x432))
(assert (x527 x398))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x141 x234 1))))
(assert (=> (>= 10000 x344) (not (= x344 (x141 x234 1)))))
(assert (not (= (x141 0 0) (x141 x344 1))))
(assert (not (= (x141 x205 0) (x141 x344 1))))
(assert (not (= (x141 x320 1) 1)))
(assert (= x285 (=> (and (= x581 x393) (= x210 x254)) x411)))
(assert (= x126 (and x147 x16)))
(assert (=> (<= x207 10000) (not (= x207 (x141 x237 0)))))
(assert (not (= (x141 x64 0) 2835717307)))
(assert (not (= 0 (x141 x205 0))))
(assert (x527 x33))
(assert (=> (<= x584 10000) (not (= (x141 x493 0) x584))))
(assert (=> (<= x493 10000) (not (= (x141 x597 1) x493))))
(assert (=> (>= 10000 x207) (not (= x207 (x141 x378 0)))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x141 x378 0))))
(assert (= (and x149 x156) x231))
(assert (x527 x178))
(assert (=> (<= x64 10000) (not (= (x141 x234 1) x64))))
(assert (=> (<= x46 10000) (not (= x46 (x141 x181 1)))))
(assert (=> (>= 10000 x234) (not (= x234 (x141 0 0)))))
(assert (=> (<= x62 10000) (not (= x62 (x141 x449 1)))))
(assert (=> (<= x244 10000) (not (= (x141 0 0) x244))))
(assert (=> (<= x378 10000) (not (= x378 (x141 x549 0)))))
(assert (=> (<= x473 10000) (not (= x473 (x141 x179 1)))))
(assert (=> (<= x449 10000) (not (= x449 (x141 x181 1)))))
(assert (=> (<= x237 10000) (not (= (x141 x181 1) x237))))
(assert (x527 x209))
(assert (=> (<= x64 10000) (not (= x64 (x141 x164 1)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x141 x449 1))))
(assert (=> (<= x584 10000) (not (= x584 (x141 x473 0)))))
(assert (not (= (x141 x86 0) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= (x141 x86 0) (x141 x181 1))))
(assert (=> (= (x141 x584 1) (x141 x597 1)) (= x584 x597)))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x141 x62 0))))
(assert (x527 x210))
(assert (not (= 0 (x141 x237 0))))
(assert (=> (>= 10000 x493) (not (= (x141 x549 0) x493))))
(assert (x527 x502))
(assert (=> (>= 10000 x378) (not (= x378 (x141 x473 0)))))
(assert (=> (= (x141 x584 1) (x141 x179 1)) (= x584 x179)))
(assert (x527 x37))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x141 x320 1))))
(assert (=> (<= x64 10000) (not (= x64 (x141 x378 0)))))
(assert (x527 x619))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x141 0 0))))
(assert (=> (= (x141 x164 1) (x141 x597 1)) (= x597 x164)))
(assert (x238 x493))
(assert (not (= (x141 x586 1) 404098525)))
(assert (not (= (x141 x86 0) 2835717307)))
(assert (x527 x472))
(assert (not (= 157198259 (x141 x586 1))))
(assert (=> (<= x64 10000) (not (= (x141 x64 0) x64))))
(assert (=> (>= 10000 x179) (not (= x179 (x141 x597 1)))))
(assert (not (= (x141 x181 1) 1889567281)))
(assert (=> (>= 10000 x62) (not (= (x141 x179 1) x62))))
(assert (not (= 2430363622 (x141 x597 1))))
(assert (= x4 (=> (and (= x525 x550) (= 0 x350)) x10)))
(assert (=> (>= 10000 x205) (not (= (x141 x234 1) x205))))
(assert (not (= (x141 x179 1) 1952775229)))
(assert (x527 x243))
(assert (=> (>= 10000 x62) (not (= (x141 x473 0) x62))))
(assert (=> (<= x584 10000) (not (= (x141 x378 0) x584))))
(assert (not (= 3524403367 (x141 x205 0))))
(assert (=> (>= 10000 x473) (not (= (x141 x344 1) x473))))
(assert (not (= (x141 x586 1) 1461501637330902918203684832716283019655932542976)))
(assert (x527 x348))
(assert (not (= (x141 x64 0) 826074471)))
(assert (= x440 (=> (and (and (and (and x122 (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x352) (<= 0 x352) (= x540 (x141 0 0)) (= x258 (x618 x320)) (= x266 x509) (= x376 (= x509 1000)) (= (or x422 x376) x122) (= 1000 x556) (not (< x583 1889567281)) (= 1889567281 x583) (> x258 0) (= x58 x352) (= 0 x23) (= x352 (x261 x540)) (< x583 2569101039)) (and (and (<= 0 x417) (< x346 2569101039) (not (< x346 1889567281)) (= x161 x417) (= x346 1889567281) (= (x261 x57) x417) (< 0 x371) (<= x473 1461501637330902918203684832716283019655932542975) (= (x618 x320) x371) (= x264 x58) (= x473 x289) (= x57 (x141 x473 0)) (<= x417 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (and (= x54 404098525) (< x54 826074471) (> 1889567281 x54) (not (= 234755713 x54)) (= x381 x290) (= x288 (+ x264 x135)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x290) (= x90 (x618 x320)) (> x90 0) (>= x290 0) (not (= x54 157198259)) (= x135 x161)) (and (and x105 (<= 0 x46) (< 0 x39) (< x604 1889567281) (not (= x604 157198259)) (= x604 234755713) (> 826074471 x604) (= x46 x570) (>= 1461501637330902918203684832716283019655932542975 x46) (= x39 (x618 x320)) (= x381 x49) (= (<= x288 x49) x105) (< x46 1461501637330902918203684832716283019655932542976) (= x207 x311)) (and (and (not (> 1889567281 x365)) (not (= 2757214935 x365)) (= x189 (x618 x320)) (> x189 0) (not (= x365 2835717307)) (<= x244 1461501637330902918203684832716283019655932542975) (>= x244 0) (not (= x365 2569101039)) (= (= x351 x311) x438) x438 (= x351 x570) (= x244 x593) (not (< x365 2569101039)) (= x458 x575) (< x244 1461501637330902918203684832716283019655932542976) (= 3524403367 x365)) (and (and (and (and (and (> x195 0) (not (= 1889567281 x188)) (not (= 1952775229 x188)) (= 2430363622 x188) (not (> 1889567281 x188)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x20) (< x188 2569101039) (= x195 (x618 x320)) (>= x20 0) (= x22 0) (not (= x188 1989257563)) (= x166 (= 0 x545)) (= x20 x535) (= x429 x545)) (and (and (= 0 x613) (= 1 x489) (>= x281 0) (<= x403 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x281 (x504 x390)) (= (+ x163 x275) x177) (<= 0 x112) (= x69 x412) (= x568 x487) (= x584 x427) (= x435 (x141 x584 1)) (= x528 (= 0 x409)) x431 (= x150 (x141 x584 1)) (not (= x71 2514000705)) (= (x618 x207) x36) (= x620 (= x166 x528)) (= x403 (x518 x435)) (not (> x310 x403)) (= 0 x73) (>= 1461501637330902918203684832716283019655932542975 x249) (>= x249 0) (= x281 x275) (= x108 x249) (<= x281 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x100 (< x487 x424)) (= x409 x535) (= x310 x84) (not (> x310 x403)) (not (< x71 826074471)) x51 (>= x403 0) (>= 1461501637330902918203684832716283019655932542975 x112) (> x36 0) x100 (= x424 x84) (<= x320 1461501637330902918203684832716283019655932542975) (= x305 x108) (not (= 1889567281 x71)) (= x51 (not (= x412 x588))) (= x534 x613) (= x431 (and x182 x620)) (= x588 x320) (= (x336 (- x403 x310)) x382) (<= 0 x427) (not (>= (+ x310 x281) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= 2835717307 x71) (<= x427 1461501637330902918203684832716283019655932542975) (not (= x71 826074471)) (< (+ x310 x281) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x341 (x141 x320 1)) (= (x141 x320 1) x390) (= x310 x163)) (and (= x608 x481) (>= 1461501637330902918203684832716283019655932542975 x481) (<= x442 1461501637330902918203684832716283019655932542975) (< x46 1461501637330902918203684832716283019655932542976) (= x589 x44) (>= x442 0) (= 128 x14) (> 1889567281 x385) (not (= x385 826074471)) (= x44 x260) (not (< x385 826074471)) (>= x20 0) (>= 1461501637330902918203684832716283019655932542975 x589) (= x78 (= x575 x46)) (not (= 0 x364)) (= x69 x392) (= (x618 x46) x364) (= x596 0) (>= 1461501637330902918203684832716283019655932542975 x46) (>= x589 0) (= (x618 x320) x526) (<= x392 1461501637330902918203684832716283019655932542975) (<= 0 x46) (not (= 961581905 x385)) (= 1 x445) (= x596 x107) (<= x20 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x385 1784838210) (>= x445 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x510) (< 0 x526) (<= 0 x481) (<= x445 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x510)))) (and (= x268 x211) (= x75 (x618 x320)) (> 826074471 x225) (not (= x225 234755713)) (= x536 (= 0 x268)) (= x225 404098525) (> 1889567281 x225) (= x290 x429) (= x609 0) (< 0 x75) (= x182 (= x536 x232)) (not (= 157198259 x225)) (>= x290 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x290))) (and (not (< x53 1889567281)) (= x603 x137) (= x211 x510) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x510) (= (= 0 x603) x232) (not (> 2569101039 x53)) (>= x510 0) (= x53 2569101039) (= x564 0) (> x373 0) (= (x618 x320) x373))) (and (< x114 1889567281) (= x137 x290) (< 0 x180) (not (= 157198259 x114)) (= (= x458 x319) x131) x131 (= x593 x319) (not (= 234755713 x114)) (<= 0 x290) (= x114 404098525) (<= x290 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x180 (x618 x320)) (< x114 826074471)))))))) (and (= x151 0) (= x318 x66) (= x453 x266) (>= x453 0) (< 0 x571) (not (< x148 1889567281)) (= (= 0 x66) x422) (= x148 1889567281) (= x43 (x141 0 0)) (= (x618 x320) x571) (> 2569101039 x148) (<= x453 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x453 (x261 x43)) (= x191 0))) (and (= (x389 x207) x26) (<= x102 1461501637330902918203684832716283019655932542975) (= (x389 x575) x154) (not (= x575 x320)) (>= x69 0) (= x128 x348) (= x190 x595) (= x413 (> (x618 x575) 0)) (>= x154 0) (not (= 157198259 x577)) (>= x290 0) (= 404098525 x577) (< 0 x207) (>= 1461501637330902918203684832716283019655932542975 x69) (= x269 x300) (>= 1461501637330902918203684832716283019655932542975 x576) (< x577 826074471) (not (= x320 x207)) (>= x88 0) (= x354 x56) (< 0 x320) (not (= x575 x207)) (<= 0 x46) (= x80 x472) (> x116 0) (<= 0 x26) (<= x46 1461501637330902918203684832716283019655932542975) (<= 0 x102) (not (= x577 234755713)) (= x318 x290) (= x260 x15) (= x584 x470) (= x608 x88) (>= x576 0) (= x102 x56) (>= x514 0) (= x21 x107) (= (> (x618 x207) 0) x158) (>= x244 0) (>= 1461501637330902918203684832716283019655932542975 x244) (> x575 0) (= x380 x576) (= x329 0) (= x558 x41) (<= x290 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x470) (= x289 x608) (>= 1461501637330902918203684832716283019655932542975 x575) (= (x389 x320) x514) x462 (>= 1461501637330902918203684832716283019655932542975 x320) (<= 0 x470) (>= 1461501637330902918203684832716283019655932542975 x207) (< x577 1889567281) (= x34 1000) x413 x158 (= (x618 x320) x116) (= (> (x618 x320) 0) x462) (>= 1461501637330902918203684832716283019655932542975 x88))) (and (=> (and x78 (and (> x33 0) (= 36 x387) (= x416 (or (> x246 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x246 32) (= (<= x246 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not (> 826074471 x183)) (= x33 (x618 x575)) (not (= 826074471 x183)) (not (> 4 x387)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x405) (= x246 (x336 (- x387 4))) (= x181 x320) (= x183 1889567281) (= x387 36))) (and (=> x416 x488) (=> (and (and (= x181 x12) (= x543 (= x181 x320))) (not x416)) (and (=> (not x543) x488) (=> (and (and (= x533 (x162 x539)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x533) (<= 0 x533) (= 32 x506) (= x79 1) (= x539 (x141 x181 1))) x543) x532))))) (=> (and (not x78) (= x464 (= x207 x46))) (and (=> (and (and (and (and (= x579 1889567281) (not (< x579 1889567281)) (not (< x421 4)) (= x192 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x358 (x336 (- x421 4))) (= x378 x320) (< 0 x343) (< x579 2569101039) (= (x618 x320) x343) (= x421 36) (= x153 (or (and (< x358 32) (= (<= x358 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x358))) (= 36 x421)) x169) (= x169 (= x320 x46))) (not x464)) (and (=> x153 x120) (=> (and (and (= (= x378 x320) x391) (= x378 x505)) (not x153)) (and (=> (and x391 (and (<= x565 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x565 (x261 x262)) (<= 0 x565) (= 32 x45) (= 1 x324) (= (x141 x378 0) x262))) x145) (=> (not x391) x120))))) (=> (and x464 (and (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x499) (= x320 x449) (not (= 826074471 x235)) (not (> 826074471 x235)) (= (x618 x207) x521) (= (x336 (- x239 4)) x446) (not (< x239 4)) (= 36 x239) (= 1889567281 x235) (= x239 36) (> x521 0) (= (or (> x446 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x446) true) (> 32 x446))) x115))) (and (=> (and (and (= x142 (= x320 x449)) (= x449 x544)) (not x115)) (and (=> (not x142) x430) (=> (and x142 (and (= x483 (x141 x449 1)) (= 1 x226) (>= x345 0) (= x242 32) (= (x85 x483) x345) (<= x345 115792089237316195423570985008687907853269984665640564039457584007913129639935))) x251))) (=> x115 x430)))))))))
(assert (=> (<= x586 10000) (not (= x586 (x141 x473 0)))))
(assert (=> (>= 10000 x207) (not (= x207 (x141 x584 1)))))
(assert (not (= (x141 x234 1) (x141 x86 0))))
(assert (not (= 157198259 (x141 0 0))))
(assert (x527 x436))
(assert (=> (>= 10000 x344) (not (= x344 (x141 x586 1)))))
(assert (=> (<= x597 10000) (not (= (x141 x181 1) x597))))
(assert (= x616 (and (not x418) x370)))
(assert (x527 x615))
(assert (not (= (x141 x64 0) 0)))
(assert (=> (= (x141 0 0) (x141 x549 0)) (= x549 0)))
(assert (x527 x458))
(assert (=> (<= x449 10000) (not (= (x141 x449 1) x449))))
(assert (x527 x111))
(assert (not (= (x141 x320 1) (x141 x64 0))))
(assert (= x193 (or (and x220 (not x142)) (and x296 x115))))
(assert (=> (<= x234 10000) (not (= x234 (x141 x473 0)))))
(assert (not (= 1784838210 (x141 x473 0))))
(assert (x527 x367))
(assert (x527 x572))
(assert (not (= 2514000705 (x141 x320 1))))
(assert (not (= 2757214935 (x141 x234 1))))
(assert (=> (>= 10000 x86) (not (= x86 (x141 x320 1)))))
(assert (not (= (x141 x449 1) (x141 x473 0))))
(assert (not (= (x141 0 0) 1461501637330902918203684832716283019655932542976)))
(assert (not (= 1952775229 (x141 x493 0))))
(assert (x527 x7))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x141 x549 0))))
(assert (x527 x119))
(assert (=> (>= 10000 x234) (not (= x234 (x141 x86 0)))))
(assert (=> (= (x141 x164 1) (x141 x586 1)) (= x164 x586)))
(assert (=> (<= x586 10000) (not (= x586 (x141 0 0)))))
(assert (=> (<= x205 10000) (not (= (x141 x586 1) x205))))
(assert (not (= (x141 x181 1) (x141 x237 0))))
(assert (=> (>= 10000 x378) (not (= x378 (x141 0 0)))))
(assert (=> (<= x205 10000) (not (= x205 (x141 x62 0)))))
(assert (not (= 2514000705 (x141 x493 0))))
(assert (x527 x53))
(assert (=> (<= x179 10000) (not (= (x141 x64 0) x179))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x141 x62 0))))
(assert (=> (<= x64 10000) (not (= x64 (x141 0 0)))))
(assert (x527 x226))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x141 x549 0))))
(assert (=> (<= x207 10000) (not (= (x141 x181 1) x207))))
(assert (=> (<= x378 10000) (not (= x378 (x141 x234 1)))))
(assert (=> (<= x207 10000) (not (= x207 (x141 x449 1)))))
(assert (= x574 (or x200 x302)))
(assert (x527 x167))
(assert (not (= 1784838210 (x141 x62 0))))
(assert (not (= (x141 x449 1) 3524403367)))
(assert (=> (<= x320 10000) (not (= (x141 x205 0) x320))))
(assert (not (= (x141 x62 0) 2430363622)))
(assert (=> (>= 10000 x207) (not (= x207 (x141 x86 0)))))
(assert (not (= (x141 x205 0) 1889567281)))
(assert (not (= 404098525 (x141 x62 0))))
(assert (not (= (x141 x237 0) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x508 1461501637330902918203684832716283019655932542975))
(assert (=> (= (x141 x378 0) (x141 x549 0)) (= x549 x378)))
(assert (not (= (x141 x237 0) 1)))
(assert (=> (<= x179 10000) (not (= (x141 x320 1) x179))))
(assert (x527 x117))
(assert (not (= (x141 x181 1) 157198259)))
(assert (=> (<= x207 10000) (not (= (x141 x205 0) x207))))
(assert (not (= (x141 x86 0) 2514000705)))
(assert (=> (>= 10000 x378) (not (= (x141 x378 0) x378))))
(assert (=> (<= x584 10000) (not (= x584 (x141 x237 0)))))
(assert (= x309 (or x498 x9 x133)))
(assert (not (= (x141 x586 1) 1)))
(assert (not (= (x141 x237 0) 1989257563)))
(assert (x527 x21))
(assert (x527 x278))
(assert (=> (<= x586 10000) (not (= x586 (x141 x449 1)))))
(assert (x527 x521))
(assert (not (= 404098525 (x141 x584 1))))
(assert (=> (<= x237 10000) (not (= x237 (x141 x597 1)))))
(assert (not (= (x141 x597 1) 157198259)))
(assert (not (= (x141 x205 0) (x141 x179 1))))
(assert (=> (>= 10000 x207) (not (= (x141 x493 0) x207))))
(assert (= (and x309 x471) x279))
(assert (=> (>= 10000 x46) (not (= (x141 x320 1) x46))))
(assert (x527 x90))
(assert (not (= 2430363622 (x141 x64 0))))
(assert (=> (>= 10000 x449) (not (= (x141 x344 1) x449))))
(assert (not (= (x141 x62 0) 1952775229)))
(assert (not (= (x141 x586 1) (x141 x549 0))))
(assert (not (= 826074471 (x141 x473 0))))
(assert (not (= 2757214935 (x141 x586 1))))
(assert (=> (<= x164 10000) (not (= x164 (x141 x473 0)))))
(assert (=> (= (x141 x64 0) (x141 x205 0)) (= x64 x205)))
(assert (=> (<= x46 10000) (not (= x46 (x141 x164 1)))))
(assert (x138 x621))
(assert (=> (<= x64 10000) (not (= (x141 x237 0) x64))))
(assert (x363 x392))
(assert (x527 x23))
(assert (=> (<= x449 10000) (not (= x449 (x141 x473 0)))))
(assert (x527 x254))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x141 x344 1))))
(assert (= x582 (and (not x127) x349)))
(assert (not (= (x141 x549 0) (x141 x181 1))))
(assert (x527 x60))
(assert (not (= (x141 x584 1) 3524403367)))
(assert (x527 x71))
(assert (=> (<= x86 10000) (not (= (x141 x378 0) x86))))
(assert (x527 x489))
(assert (=> (= (x141 x449 1) (x141 x586 1)) (= x586 x449)))
(assert (=> (<= x320 10000) (not (= (x141 x320 1) x320))))
(assert (=> (<= x179 10000) (not (= (x141 x549 0) x179))))
(assert (=> (= (x141 x181 1) (x141 x320 1)) (= x320 x181)))
(assert (not (= 0 (x141 x234 1))))
(assert (=> (= (x141 x344 1) (x141 x234 1)) (= x344 x234)))
(assert (=> (<= x46 10000) (not (= (x141 0 0) x46))))
(assert (not (= (x141 x549 0) 1)))
(assert (x527 x103))
(assert (x527 x517))
(assert (not (= 826074471 (x141 x378 0))))
(assert (=> (<= x86 10000) (not (= x86 (x141 x181 1)))))
(assert (not (= 2514000705 (x141 x449 1))))
(assert (not (= (x141 x164 1) (x141 x493 0))))
(assert (not (= (x141 x584 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= (x141 x586 1) (x141 x86 0))))
(assert (x527 x215))
(assert (=> (>= 10000 x597) (not (= x597 (x141 x237 0)))))
(assert (=> (<= x473 10000) (not (= (x141 x449 1) x473))))
(assert (not (= (x141 x181 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (>= 10000 x234) (not (= x234 (x141 x237 0)))))
(assert (= (and x610 x42) x277))
(assert (not (= 1989257563 (x141 x181 1))))
(assert (=> (<= x244 10000) (not (= x244 (x141 x473 0)))))
(assert (= (or (and x230 x622) (and (not x82) x5)) x50))
(assert (= x200 (or (and x267 x223) (and x475 (not x482)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x141 x62 0))))
(assert (x527 x189))
(assert (not (= 404098525 (x141 x473 0))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x141 x584 1))))
(assert (=> (= (x141 x181 1) (x141 x164 1)) (= x164 x181)))
(assert (not (= 1989257563 (x141 x164 1))))
(assert (not (= 2430363622 (x141 x473 0))))
(assert (=> (>= 10000 x244) (not (= x244 (x141 x64 0)))))
(assert (=> (>= 10000 x62) (not (= (x141 x320 1) x62))))
(assert (x527 x344))
(assert (not (= (x141 x597 1) (x141 x86 0))))
(assert (not (= 2569101039 (x141 x344 1))))
(assert (=> (<= x320 10000) (not (= (x141 x493 0) x320))))
(assert (=> (>= 10000 x493) (not (= (x141 x234 1) x493))))
(assert (=> (<= x86 10000) (not (= (x141 x205 0) x86))))
(assert (x527 x164))
(assert (=> (<= x473 10000) (not (= x473 (x141 x64 0)))))
(assert (not (= 1989257563 (x141 x449 1))))
(assert (not (= (x141 x179 1) (x141 0 0))))
(assert (not (= (x141 x493 0) 961581905)))
(assert (not (= 404098525 (x141 x205 0))))
(assert (not (= (x141 x320 1) (x141 x549 0))))
(assert (=> (= (x141 x378 0) (x141 x473 0)) (= x473 x378)))
(assert (=> (= (x141 x179 1) (x141 x344 1)) (= x344 x179)))
(assert (not (= (x141 0 0) 404098525)))
(assert (x527 x292))
(assert (=> (<= x584 10000) (not (= x584 (x141 x344 1)))))
(assert (=> (>= 10000 x207) (not (= (x141 x179 1) x207))))
(assert (=> (<= x164 10000) (not (= x164 (x141 x237 0)))))
(assert (= (=> (and (and (and (= x562 x569) (= x356 x614) (= x111 x569) (= (<= x562 x614) x221)) (and (= (x618 x320) x452) (= (x141 x549 0) x196) (<= x549 1461501637330902918203684832716283019655932542975) (= x407 (x606 x196)) (> x452 0) (<= 0 x407) (not (< x486 1889567281)) (< x486 2569101039) (= x486 1889567281) (= x209 x117) (<= x407 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x111 x407) (= x549 x69))) (and (= x428 (x261 x83)) (< (* x2 x125) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x468 x495) x2) (> x228 0) (= x615 x404) (< (* x290 x461) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x228 0) (= x615 x592) (<= x290 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x228 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x615 0)) (= x615 (div x433 x228)) (< (+ x615 x103) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x433 (* x290 x461)) (not (< x125 x510)) (= x615 x117) (<= 0 x290) (not (= x290 0)) (= x87 (+ x297 x404)) (not (= x62 0)) (not (= x496 0)) (<= 0 x290) (not (< x2 x20)) (= x461 (x336 (- x95 x228))) (>= x428 0) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 x125) x257) (<= x290 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x297 x103) (= x314 (* x2 x125)) (< (+ x290 x615) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (or (> x278 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x278 32) (= (<= x278 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not x257) (= (+ x592 x175) x32) (<= 0 x103) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x428) (<= x103 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x95 x314) (not (> x228 x95)) (= (x261 x83) x103) (= x290 x175) (= x83 (x141 x62 0)))) x221) x143))
(assert (=> (= (x141 x493 0) (x141 x549 0)) (= x549 x493)))
(assert (=> (= (x141 x378 0) (x141 x205 0)) (= x378 x205)))
(assert (x527 x399))
(assert (not (= (x141 x549 0) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (<= x549 10000) (not (= x549 (x141 x164 1)))))
(assert (x527 x358))
(assert (=> (>= 10000 x164) (not (= (x141 x493 0) x164))))
(assert (not (= (x141 x597 1) (x141 x62 0))))
(assert (not (= 1889567281 (x141 x179 1))))
(assert (not (= 2430363622 (x141 x586 1))))
(assert (not (= (x141 x205 0) (x141 x449 1))))
(assert (x527 x92))
(assert (x527 x39))
(assert (not (= (x141 x164 1) 1784838210)))
(assert (=> (>= 10000 x237) (not (= (x141 x205 0) x237))))
(assert (x527 x583))
(assert (not (= 0 (x141 x86 0))))
(assert (= (and (not x96) x168) x156))
(assert (not (= (x141 x181 1) (x141 x378 0))))
(assert (= (and x89 x464) x296))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x141 x344 1))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x141 x237 0))))
(assert (x527 x80))
(assert (x527 x420))
(assert (=> (= (x141 x549 0) (x141 x62 0)) (= x549 x62)))
(assert (x527 x276))
(assert (not (= (x141 x378 0) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= (x141 0 0) (x141 x586 1))))
(assert (x508 x392))
(assert (=> (<= x493 10000) (not (= (x141 x493 0) x493))))
(assert (= (and (not x3) x224) x291))
(assert (=> (<= x234 10000) (not (= x234 (x141 x205 0)))))
(assert (x527 x361))
(assert (=> (<= x449 10000) (not (= (x141 x164 1) x449))))
(assert (not (= (x141 x179 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (>= 10000 x449) (not (= (x141 x179 1) x449))))
(assert (=> (= (x141 x205 0) (x141 x86 0)) (= x86 x205)))
(assert (x527 x195))
(assert (= (or x612 x165) x248))
(assert (not (= 2757214935 (x141 x179 1))))
(assert (x527 x305))
(assert (=> (>= 10000 x320) (not (= (x141 x597 1) x320))))
(assert (=> (<= x86 10000) (not (= x86 (x141 x549 0)))))
(assert (=> (<= x586 10000) (not (= x586 (x141 x597 1)))))
(assert (x527 x371))
(assert (=> (= (x141 x181 1) (x141 x179 1)) (= x181 x179)))
(assert (not (= (x141 x181 1) 2757214935)))
(assert (not (= 1952775229 (x141 x549 0))))
(assert (= (or x360 x30) x109))
(assert (=> (<= x205 10000) (not (= x205 (x141 x64 0)))))
(assert (x527 x429))
(assert (x527 x265))
(assert (x527 x533))
(assert (not (= (x141 x164 1) 2430363622)))
(assert (=> (>= 10000 x237) (not (= x237 (x141 x449 1)))))
(assert (not (= (x141 x64 0) 1889567281)))
(assert (not (= 0 (x141 x62 0))))
(assert (x527 x66))
(assert (=> (<= x234 10000) (not (= x234 (x141 x586 1)))))
(assert (x527 x353))
(assert (not x440))
(assert (x238 x378))
(assert (not (= (x141 x64 0) (x141 x586 1))))
(assert (=> (= (x141 x586 1) (x141 x597 1)) (= x597 x586)))
(assert (not (= (x141 x473 0) (x141 x181 1))))
(assert (=> (>= 10000 x597) (not (= (x141 x549 0) x597))))
(assert (x527 x244))
(assert (x527 x445))
(assert (=> (<= x584 10000) (not (= x584 (x141 x164 1)))))
(assert (=> (>= 10000 x597) (not (= (x141 x234 1) x597))))
(assert (=> (>= 10000 x237) (not (= (x141 x86 0) x237))))
(assert (x527 x380))
(assert (x527 x593))
(assert (=> (>= 10000 x493) (not (= x493 (x141 x320 1)))))
(assert (=> (<= x181 10000) (not (= (x141 x549 0) x181))))
(assert (=> (= (x141 x597 1) (x141 x179 1)) (= x597 x179)))
(assert (=> (>= 10000 x164) (not (= x164 (x141 x584 1)))))
(assert (not (= 157198259 (x141 x320 1))))
(assert (not (= (x141 x62 0) (x141 x179 1))))
(assert (=> (>= 10000 x86) (not (= x86 (x141 0 0)))))
(assert (not (= (x141 x493 0) 2430363622)))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x141 x64 0))))
(assert (=> (= (x141 0 0) (x141 x473 0)) (= x473 0)))
(assert (=> (= (x141 x237 0) (x141 x493 0)) (= x493 x237)))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x141 x473 0))))
(assert (x527 x86))
(assert (not (= (x141 x449 1) 0)))
(assert (x527 x241))
(assert (= (and x291 (not x497)) x61))
(assert (not (= (x141 x64 0) 961581905)))
(assert (x527 x56))
(assert (not (= (x141 x449 1) 1952775229)))
(assert (=> (>= 10000 x378) (not (= (x141 x179 1) x378))))
(assert (not (= (x141 0 0) 234755713)))
(assert (not (= (x141 x164 1) (x141 x86 0))))
(assert (not (= (x141 x237 0) (x141 x597 1))))
(assert (not (= 234755713 (x141 x237 0))))
(assert (= (=> (and (= 0 x566) (= x525 x265)) x65) x129))
(assert (=> (>= 10000 x237) (not (= (x141 x320 1) x237))))
(assert (x527 x549))
(assert (not (= 1989257563 (x141 x549 0))))
(assert (x238 x584))
(assert (x527 x34))
(assert (=> (>= 10000 x344) (not (= x344 (x141 0 0)))))
(assert (x527 x375))
(assert (not (= (x141 0 0) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= 157198259 (x141 x64 0))))
(assert (=> (>= 10000 x378) (not (= x378 (x141 x493 0)))))
(assert (not (= (x141 x320 1) (x141 x237 0))))
(assert (=> (<= x205 10000) (not (= (x141 x86 0) x205))))
(assert (x527 x525))
(assert (=> (>= 10000 x549) (not (= (x141 x237 0) x549))))
(assert (=> (<= x86 10000) (not (= x86 (x141 x344 1)))))
(assert (x527 x263))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x141 x344 1))))
(assert (not (= (x141 x205 0) 961581905)))
(assert (not (= (x141 x179 1) (x141 x493 0))))
(assert (=> (>= 10000 x344) (not (= (x141 x179 1) x344))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x141 x378 0))))
(assert (not (= (x141 x164 1) 1889567281)))
(assert (not (= (x141 x86 0) 157198259)))
(assert (not (= (x141 x64 0) 1784838210)))
(assert (not (= (x141 x493 0) 157198259)))
(assert (not (= (x141 x344 1) 1989257563)))
(assert (not (= (x141 x234 1) 404098525)))
(assert (not (= (x141 x234 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (>= 10000 x64) (not (= (x141 x549 0) x64))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x141 x586 1))))
(assert (not (= (x141 x493 0) (x141 x344 1))))
(assert (x527 x609))
(assert (not (= (x141 x597 1) 234755713)))
(assert (not (= (x141 x549 0) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x527 x269))
(assert (not (= (x141 x344 1) (x141 x378 0))))
(assert (=> (<= x449 10000) (not (= x449 (x141 x493 0)))))
(assert (not (= (x141 x234 1) 2514000705)))
(assert (=> (<= x575 10000) (not (= x575 (x141 x378 0)))))
(assert (=> (>= 10000 x244) (not (= (x141 x234 1) x244))))
(assert (=> (<= x244 10000) (not (= (x141 x237 0) x244))))
(assert (=> (<= x244 10000) (not (= (x141 x493 0) x244))))
(assert (=> (>= 10000 x378) (not (= x378 (x141 x164 1)))))
(assert (x527 x79))
(assert (not (= (x141 x549 0) 0)))
(assert (=> (<= x586 10000) (not (= x586 (x141 x237 0)))))
(assert (x527 x180))
(assert (=> (>= 10000 x320) (not (= (x141 x586 1) x320))))
(assert (x527 x225))
(assert (x527 x198))
(assert (= (and x414 (not x121)) x42))
(assert (= (or (and (not x467) x582) (and x349 x127)) x11))
(assert (=> (<= x378 10000) (not (= x378 (x141 x344 1)))))
(assert (not (= 2757214935 (x141 x205 0))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x141 x584 1))))
(assert (= x65 (=> (and (= x245 x265) (= x511 x566)) x401)))
(assert (=> (<= x597 10000) (not (= x597 (x141 x62 0)))))
(assert (= x145 (=> (and (= x252 x324) (= x77 x45)) x24)))
(assert (=> (<= x320 10000) (not (= (x141 x473 0) x320))))
(assert (not (= (x141 0 0) 1784838210)))
(assert (=> (>= 10000 x207) (not (= (x141 x234 1) x207))))
(assert (=> (<= x473 10000) (not (= (x141 x549 0) x473))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x141 x449 1))))
(assert (not (= 826074471 (x141 x164 1))))
(assert (=> (>= 10000 x586) (not (= (x141 x344 1) x586))))
(assert (x527 x454))
(assert (not (= 2757214935 (x141 0 0))))
(assert (x527 x315))
(assert (not (= 0 (x141 x586 1))))
(assert (=> (<= x473 10000) (not (= x473 (x141 0 0)))))
(assert (=> (<= x597 10000) (not (= x597 (x141 x64 0)))))
(assert (=> (= (x141 x584 1) (x141 x234 1)) (= x234 x584)))
(assert (=> (>= 10000 x320) (not (= x320 (x141 x64 0)))))
(assert (=> (>= 10000 x179) (not (= x179 (x141 x378 0)))))
(assert (=> (= (x141 x549 0) (x141 x473 0)) (= x549 x473)))
(assert (not (= (x141 x181 1) (x141 x205 0))))
(assert (=> (<= x586 10000) (not (= (x141 x586 1) x586))))
(assert (not (= (x141 x62 0) 2835717307)))
(assert (not (= (x141 x64 0) (x141 x597 1))))
(assert (=> (>= 10000 x378) (not (= x378 (x141 x584 1)))))
(assert (=> (= (x141 x344 1) (x141 x597 1)) (= x344 x597)))
(assert (not (= (x141 x473 0) 0)))
(assert (not (= (x141 x179 1) (x141 x473 0))))
(assert (=> (= (x141 x62 0) (x141 x64 0)) (= x64 x62)))
(assert (x527 x487))
(assert (not (= 0 (x141 0 0))))
(assert (=> (<= x344 10000) (not (= x344 (x141 x86 0)))))
(assert (=> (<= x179 10000) (not (= (x141 x584 1) x179))))
(assert (=> (>= 10000 x244) (not (= (x141 x205 0) x244))))
(assert (= x411 (=> (and (= (x184 (+ 128 x144)) x495) (= x471 (= x244 x575)) (>= 1461501637330902918203684832716283019655932542975 x244) (= (x599 128) x125) (not (= x254 0)) (= (x184 (+ x551 32)) x602) (not (or (and (< x393 32) (= true (<= x393 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x393))) (= (x485 115792089237316195423570985008687907853269984665640564039457584007913129639904 x621) x144) (> 1461501637330902918203684832716283019655932542976 x244) (= x460 (x336 (- x602 x495))) (= x551 (x184 (+ 4 x495))) (not (= 0 x276)) (= (x184 (+ x393 31)) x621) (<= 0 x244) (= (x618 x244) x276)) (and (=> (and x471 (and (= x567 (x336 (- x332 4))) (not (< x206 826074471)) (= x119 (x618 x575)) (not (> 4 x332)) (not (= 826074471 x206)) (= x320 x234) (> x119 0) (= x332 x460) (= x332 36) (= (or (and (> 32 x567) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x567) true)) (> x567 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x598) (= x206 1889567281) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x402))) (and (=> (and (not x598) (and (= x563 (= x320 x234)) (= x315 x234))) (and (=> (and (and (= x465 (x141 x234 1)) (<= 0 x187) (= x572 1) (= (x162 x465) x187) (= x517 32) (<= x187 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x563) x99) (=> (not x563) x299))) (=> x598 x299))) (=> (and (= (= x207 x244) x67) (not x471)) (and (=> (and (and (not (= 826074471 x159)) (not (< x325 4)) (= x460 x325) (= x320 x179) (= 1889567281 x159) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x448) (= (x618 x207) x93) (= x394 (x336 (- x325 4))) (= 36 x325) (> x93 0) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x394)) (< x394 32)) (> x394 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x559) (not (< x159 826074471))) x67) (and (=> x559 x328) (=> (and (and (= x152 x179) (= x573 (= x320 x179))) (not x559)) (and (=> (not x573) x328) (=> (and (and (= 32 x227) (= (x141 x179 1) x560) (<= x379 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x379) (= 1 x555) (= (x490 x560) x379)) x573) x313))))) (=> (and (not x67) (and (= x146 (= x320 x244)) (and x146 (and (< x451 2569101039) (= (x618 x320) x327) (= x267 (or (and (> 32 x501) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x501))) (> x501 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (< x451 1889567281)) (= x619 36) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x317) (< 0 x327) (not (< x619 4)) (= x451 1889567281) (= (x336 (- x619 4)) x501) (= x619 x460) (= x205 x320))))) (and (=> x267 x72) (=> (and (and (= x482 (= x205 x320)) (= x205 x585)) (not x267)) (and (=> (and x482 (and (= x423 32) (>= x70 0) (= 1 x118) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x70) (= (x141 x205 0) x303) (= x70 (x261 x303)))) x408) (=> (not x482) x72)))))))))))
(assert (=> (>= 10000 x46) (not (= (x141 x473 0) x46))))
(assert (=> (<= x181 10000) (not (= (x141 x320 1) x181))))
(assert (not (= (x141 x181 1) 2835717307)))
(assert (x527 x128))
(assert (=> (<= x493 10000) (not (= (x141 x181 1) x493))))
(assert (=> (>= 10000 x181) (not (= (x141 x234 1) x181))))
(assert (=> (>= 10000 x597) (not (= x597 (x141 x597 1)))))
(assert (=> (>= 10000 x62) (not (= (x141 x64 0) x62))))
(assert (not (= 234755713 (x141 x344 1))))
(assert (x527 x95))
(assert (x527 x201))
(assert (not (= (x141 x205 0) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (>= 10000 x320) (not (= (x141 0 0) x320))))
(assert (=> (>= 10000 x586) (not (= (x141 x549 0) x586))))
(assert (= x308 (and x395 x391)))
(assert (x527 x551))
(assert (= (and x355 x59) x335))
(assert (x527 x28))
(assert (=> (>= 10000 x344) (not (= x344 (x141 x205 0)))))
(assert (=> (<= x164 10000) (not (= (x141 x181 1) x164))))
(assert (x527 x511))
(assert (=> (<= x164 10000) (not (= (x141 x378 0) x164))))
(assert (=> (>= 10000 x64) (not (= (x141 x179 1) x64))))
(assert (not (= (x141 x164 1) (x141 x64 0))))
(assert (x527 x227))
(assert (=> (>= 10000 x237) (not (= x237 (x141 x64 0)))))
(assert (not (= (x141 x179 1) 157198259)))
(assert (not (= 1784838210 (x141 x586 1))))
(assert (=> (<= x586 10000) (not (= x586 (x141 x320 1)))))
(assert (x527 x366))
(assert (x527 x324))
(assert (=> (<= x320 10000) (not (= x320 (x141 x449 1)))))
(assert (=> (>= 10000 x234) (not (= x234 (x141 x62 0)))))
(assert (=> (>= 10000 x473) (not (= (x141 x473 0) x473))))
(assert (not (= (x141 x344 1) 2835717307)))
(assert (=> (>= 10000 x473) (not (= x473 (x141 x205 0)))))
(assert (=> (>= 10000 x449) (not (= (x141 x62 0) x449))))
(assert (=> (>= 10000 x597) (not (= x597 (x141 x86 0)))))
(assert (=> (<= x493 10000) (not (= x493 (x141 x584 1)))))
(assert (x527 x310))
(assert (=> (<= x164 10000) (not (= (x141 x179 1) x164))))
(assert (=> (>= 10000 x473) (not (= x473 (x141 x164 1)))))
(assert (=> (>= 10000 x64) (not (= x64 (x141 x449 1)))))
(assert (=> (= (x141 x586 1) (x141 x344 1)) (= x344 x586)))
(assert (not (= 2757214935 (x141 x344 1))))
(assert (x527 x345))
(assert (x527 x55))
(assert (x527 x97))
(assert (not (= (x141 x473 0) (x141 x234 1))))
(assert (=> (<= x46 10000) (not (= (x141 x237 0) x46))))
(assert (=> (>= 10000 x205) (not (= x205 (x141 x179 1)))))
(assert (=> (<= x549 10000) (not (= (x141 x205 0) x549))))
(assert (not (= 234755713 (x141 x179 1))))
(assert (not (= (x141 x473 0) (x141 x320 1))))
(assert (not (= (x141 0 0) (x141 x234 1))))
(assert (not (= (x141 x493 0) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (=> (<= x597 10000) (not (= (x141 x320 1) x597))))
(assert (=> (>= 10000 x584) (not (= (x141 x181 1) x584))))
(assert (x527 x70))
(assert (=> (<= x179 10000) (not (= (x141 x473 0) x179))))
(assert (not (= 961581905 (x141 x179 1))))
(assert (=> (<= x46 10000) (not (= (x141 x205 0) x46))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x141 x205 0))))
(assert (not (= (x141 x378 0) 404098525)))
(assert (not (= (x141 x164 1) (x141 x549 0))))
(assert (not (= 3524403367 (x141 x237 0))))
(assert (=> (<= x584 10000) (not (= (x141 x449 1) x584))))
(assert (not (= (x141 x344 1) 1784838210)))
(assert (x527 x159))
(assert (=> (<= x164 10000) (not (= (x141 x449 1) x164))))
(assert (=> (>= 10000 x234) (not (= (x141 x449 1) x234))))
(assert (not (= (x141 x62 0) (x141 x320 1))))
(assert (x527 x567))
(assert (x527 x602))
(assert (=> (<= x493 10000) (not (= x493 (x141 x449 1)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x141 x473 0))))
(assert (=> (<= x473 10000) (not (= (x141 x181 1) x473))))
(assert (not (= 3524403367 (x141 x344 1))))
(assert (x527 x192))
(assert (x527 x566))
(assert (not (= (x141 x473 0) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= x10 (=> (and (= x550 x245) (= x511 x350)) x401)))
(assert (=> (= (x141 x237 0) (x141 x205 0)) (= x205 x237)))
(assert (x527 x351))
(assert (not (= (x141 x584 1) 961581905)))
(assert (x527 x250))
(assert (=> (<= x64 10000) (not (= (x141 x86 0) x64))))
(assert (=> (= (x141 x64 0) (x141 x378 0)) (= x64 x378)))
(assert (x238 x205))
(assert (x527 x466))
(assert (not (= (x141 x473 0) 1952775229)))
(assert (x527 x32))
(assert (x527 x213))
(assert (not (= 1952775229 (x141 x584 1))))
(assert (x527 x394))
(assert (x527 x506))
(assert (not (= (x141 x237 0) (x141 x449 1))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x141 x320 1))))
(assert (=> (<= x207 10000) (not (= (x141 x320 1) x207))))
(assert (=> (<= x181 10000) (not (= x181 (x141 x597 1)))))
(assert (=> (>= 10000 x549) (not (= x549 (x141 x549 0)))))
(assert (not (= (x141 x205 0) 1461501637330902918203684832716283019655932542976)))
(assert (=> (>= 10000 x344) (not (= (x141 x584 1) x344))))
(assert (= x272 (=> (and (= x263 x254) (= x393 x229)) x411)))
(assert (= (and x541 x61) x168))
(assert (not (= 1784838210 (x141 x181 1))))
(assert (x527 x332))
(assert (not (= 961581905 (x141 x320 1))))
(assert (x527 x152))
(assert (x527 x245))
(assert (not (= (x141 x234 1) 2430363622)))
(assert (not (= 826074471 (x141 x320 1))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x141 x86 0))))
(assert (x527 x555))
(assert (=> (<= x181 10000) (not (= (x141 x181 1) x181))))
(assert (not (= (x141 x597 1) 1952775229)))
(assert (=> (<= x64 10000) (not (= x64 (x141 x344 1)))))
(assert (not (= (x141 x164 1) (x141 x237 0))))
(assert (x527 x478))
(assert (not (= (x141 x597 1) (x141 x378 0))))
(assert (x527 x246))
(assert (x527 x586))
(assert (=> (= (x141 x344 1) (x141 x320 1)) (= x344 x320)))
(assert (=> (>= 10000 x597) (not (= (x141 x473 0) x597))))
(assert (=> (>= 10000 x320) (not (= x320 (x141 x344 1)))))
(assert (=> (>= 10000 x46) (not (= (x141 x493 0) x46))))
(assert (=> (<= x181 10000) (not (= x181 (x141 x449 1)))))
(assert (x527 x604))
(assert (not (= (x141 x64 0) (x141 x234 1))))
(assert (not (= 157198259 (x141 x549 0))))
(assert (not (= (x141 x62 0) 234755713)))
(assert (not (= (x141 x449 1) 961581905)))
(assert (x527 x54))
(assert (=> (<= x473 10000) (not (= x473 (x141 x237 0)))))
(assert (x527 x161))
(assert (not (= (x141 x378 0) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 826074471 (x141 x86 0))))
(assert (x527 x405))
(assert (not (= 3524403367 (x141 x234 1))))
(assert (= (and x410 x169) x256))
(assert (=> (>= 10000 x575) (not (= (x141 x237 0) x575))))
(assert (not (= 826074471 (x141 x205 0))))
(assert (not (= (x141 x179 1) (x141 x378 0))))
(assert (not (= (x141 x62 0) 2514000705)))
(assert (=> (>= 10000 x575) (not (= x575 (x141 x493 0)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x141 x344 1))))
(assert (=> (<= x344 10000) (not (= (x141 x378 0) x344))))
(assert (x527 x268))
(assert (x527 x542))
(assert (=> (<= x244 10000) (not (= (x141 x164 1) x244))))
(assert (x527 x400))
(assert (x527 x252))
(assert (=> (<= x344 10000) (not (= x344 (x141 x237 0)))))
(assert (= x72 (=> (and (= 0 x118) (= x361 x423)) x408)))
(assert (not (= (x141 x473 0) 3524403367)))
(assert (not (= (x141 x584 1) 2569101039)))
(assert (not (= 1784838210 (x141 x597 1))))
(assert (=> (= (x141 x179 1) (x141 x164 1)) (= x164 x179)))
(assert (=> (= (x141 x493 0) (x141 x378 0)) (= x493 x378)))
(assert (x527 x144))
(assert (not (= 0 (x141 x179 1))))
(assert (not (= (x141 0 0) 1461501637330902918203684832716283019655932542975)))
(assert (x527 x613))
(assert (=> (>= 10000 x597) (not (= x597 (x141 x449 1)))))
(assert (= x477 (or x434 x520)))
(assert (not (= 3524403367 (x141 x586 1))))
(assert (not (= (x141 x586 1) 826074471)))
(assert (=> (= (x141 x597 1) (x141 x320 1)) (= x320 x597)))
(assert (x527 x219))
(assert (x527 x36))
(assert (x527 x575))
(assert (=> (<= x64 10000) (not (= (x141 x493 0) x64))))
(assert (=> (>= 10000 x237) (not (= x237 (x141 x179 1)))))
(assert (not (= 961581905 (x141 x586 1))))
(assert (x527 x562))
(assert (x527 x233))
(assert (not (= (x141 x234 1) 2569101039)))
(assert (=> (>= 10000 x575) (not (= x575 (x141 x164 1)))))
(assert (= (or x155 x203) x357))
(assert (=> (>= 10000 x244) (not (= (x141 x86 0) x244))))
(assert (x527 x571))
(assert (x527 x386))
(assert (=> (>= 10000 x493) (not (= (x141 x473 0) x493))))
(assert (=> (>= 10000 x378) (not (= (x141 x597 1) x378))))
(assert (not (= 157198259 (x141 x449 1))))
(assert (=> (>= 10000 x344) (not (= x344 (x141 x549 0)))))
(assert (not (= (x141 x179 1) 2514000705)))
(assert (not (= 3524403367 (x141 x64 0))))
(assert (=> (= (x141 x181 1) (x141 x234 1)) (= x181 x234)))
(assert (=> (= (x141 x549 0) (x141 x205 0)) (= x549 x205)))
(assert (not (= (x141 x378 0) 0)))
(assert (x527 x202))
(assert (not (= (x141 x449 1) (x141 x86 0))))
(assert (=> (>= 10000 x62) (not (= (x141 x378 0) x62))))
(assert (x238 x64))
(assert (not (= (x141 x164 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= (x141 x549 0) 1889567281)))
(assert (x527 x113))
(assert (not (= 1989257563 (x141 x86 0))))
(assert (not (= 1989257563 (x141 0 0))))
(assert (not (= (x141 x473 0) 961581905)))
(assert (not (= 2514000705 (x141 0 0))))
(assert (x238 x164))
(assert (=> (>= 10000 x597) (not (= (x141 x164 1) x597))))
(assert (x527 x382))
(assert (x527 x112))
(assert (x527 x427))
(assert (not (= (x141 x320 1) 1952775229)))
(assert (x527 x352))
(assert (not (= (x141 x473 0) 234755713)))
(assert (not (= 961581905 (x141 0 0))))
(assert (x527 x530))
(assert (=> (>= 10000 x181) (not (= (x141 x584 1) x181))))
(assert (not (= (x141 x181 1) 0)))
(assert (=> (<= x46 10000) (not (= (x141 x344 1) x46))))
(assert (x238 x46))
(assert (not (= (x141 x378 0) 157198259)))
(assert (not (= (x141 x584 1) (x141 x64 0))))
(assert (not (= (x141 x320 1) (x141 x493 0))))
(assert (x527 x191))
(assert (=> (>= 10000 x86) (not (= x86 (x141 x449 1)))))
(assert (= x220 (and x296 (not x115))))
(assert (not (= (x141 x181 1) 3524403367)))
(assert (not (= 2835717307 (x141 x586 1))))
(assert (x527 x58))
(assert (=> (= (x141 x62 0) (x141 x493 0)) (= x493 x62)))
(assert (=> (<= x46 10000) (not (= (x141 x449 1) x46))))
(assert (=> (>= 10000 x64) (not (= (x141 x205 0) x64))))
(assert (= (and (not x78) x594) x89))
(assert (not (= (x141 x237 0) 1784838210)))
(assert (x238 x597))
(assert (=> (<= x179 10000) (not (= x179 (x141 x234 1)))))
(assert (x527 x75))
(assert (=> (= (x141 x164 1) (x141 x344 1)) (= x164 x344)))
(assert (x527 x379))
(assert (not (= 1989257563 (x141 x584 1))))
(assert (not (= (x141 x205 0) 2514000705)))
(assert (x527 x372))
(assert (=> (<= x207 10000) (not (= x207 (x141 x164 1)))))
(assert (= x328 (=> (and (= x555 0) (= x361 x227)) x313)))
(assert (=> (<= x575 10000) (not (= (x141 x320 1) x575))))
(assert (x527 x188))
(assert (not (= (x141 x584 1) 2835717307)))
(assert (not (= (x141 x234 1) 1989257563)))
(assert (x527 x505))
(assert (=> (>= 10000 x179) (not (= x179 (x141 x179 1)))))
(assert (x238 x320))
(assert (x527 x550))
(assert (= x360 (or (and x295 x416) (and x194 (not x543)))))
(assert (=> (<= x493 10000) (not (= (x141 x164 1) x493))))
(assert (=> (<= x164 10000) (not (= x164 (x141 x62 0)))))
(assert (x527 x173))
(assert (not (= (x141 x597 1) 2757214935)))
(assert (not (= (x141 x164 1) 2757214935)))
(assert (=> (<= x181 10000) (not (= (x141 x493 0) x181))))
(assert (x527 x207))
(assert (not (= 1889567281 (x141 x62 0))))
(assert (= x622 (and x291 x497)))
(assert (=> (<= x244 10000) (not (= (x141 x449 1) x244))))
(assert (x527 x211))
(assert (=> (>= 10000 x575) (not (= (x141 0 0) x575))))
(assert (=> (= (x141 x320 1) (x141 x449 1)) (= x320 x449)))
(assert (=> (= (x141 x449 1) (x141 x179 1)) (= x179 x449)))
(assert (x527 x509))
(assert (=> (= (x141 x320 1) (x141 x234 1)) (= x234 x320)))
(assert (=> (<= x586 10000) (not (= x586 (x141 x584 1)))))
(assert (not (= (x141 x320 1) 1889567281)))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x141 x597 1))))
(assert (x527 x125))
(assert (not (= 961581905 (x141 x164 1))))
(assert (=> (<= x449 10000) (not (= x449 (x141 0 0)))))
(assert (x527 x442))
(assert (=> (<= x164 10000) (not (= (x141 x164 1) x164))))
(assert (= x197 (and x82 x5)))
(assert (not (= (x141 x64 0) 1989257563)))
(assert (=> (>= 10000 x473) (not (= (x141 x378 0) x473))))
(assert (=> (>= 10000 x344) (not (= (x141 x344 1) x344))))
(assert (not (= 404098525 (x141 x181 1))))
(assert (not (= (x141 x344 1) 961581905)))
(assert (=> (<= x86 10000) (not (= x86 (x141 x597 1)))))
(assert (=> (<= x584 10000) (not (= (x141 x549 0) x584))))
(assert (=> (<= x344 10000) (not (= (x141 x449 1) x344))))
(assert (=> (>= 10000 x473) (not (= x473 (x141 x584 1)))))
(assert (x138 x513))
(assert (=> (= (x141 x64 0) (x141 x493 0)) (= x64 x493)))
(assert (= (or (and x153 x256) (and x395 (not x391))) x331))
(assert (= (and (not x464) x89) x410))
(assert (x527 x333))
(assert (= (or (and x96 x168) (and (not x149) x156)) x519))
(assert (not (= 3524403367 (x141 0 0))))
(assert (=> (<= x493 10000) (not (= (x141 x378 0) x493))))
(assert (= (and x3 x224) x370))
(assert (x527 x415))
(assert (not (= (x141 x493 0) 2569101039)))
(assert (x238 x237))
(assert (x527 x14))
(assert (=> (>= 10000 x181) (not (= (x141 x473 0) x181))))
(assert (= x425 (and x476 (not x67))))
(assert (not (= (x141 x493 0) 404098525)))
(assert (not (= (x141 x473 0) 1989257563)))
(assert (x527 x179))
(assert (=> (= (x141 x549 0) (x141 x64 0)) (= x64 x549)))
(assert (=> (>= 10000 x597) (not (= (x141 0 0) x597))))
(assert (=> (>= 10000 x449) (not (= (x141 x584 1) x449))))
(assert (not (= 234755713 (x141 x64 0))))
(assert (=> (= (x141 0 0) (x141 x237 0)) (= x237 0)))
(assert (=> (>= 10000 x344) (not (= x344 (x141 x64 0)))))
(assert (=> (= (x141 x234 1) (x141 x164 1)) (= x164 x234)))
(assert (=> (<= x179 10000) (not (= (x141 x493 0) x179))))
(assert (not (= 826074471 (x141 x344 1))))
(assert (=> (= (x141 x586 1) (x141 x181 1)) (= x181 x586)))
(assert (not (= (x141 0 0) 1952775229)))
(assert (not (= (x141 x237 0) 157198259)))
(assert (=> (= (x141 x493 0) (x141 0 0)) (= x493 0)))
(assert (=> (<= x205 10000) (not (= x205 (x141 x597 1)))))
(assert (x527 x558))
(assert (=> (<= x237 10000) (not (= x237 (x141 x344 1)))))
(assert (not (= 2569101039 (x141 x586 1))))
(assert (=> (>= 10000 x179) (not (= x179 (x141 x237 0)))))
(assert (= x304 (and (not x1) x126)))
(assert (=> (>= 10000 x378) (not (= x378 (x141 x86 0)))))
(assert (= (=> (and (= x324 0) (= x368 x45)) x145) x120))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x141 x234 1))))
(assert (not (= (x141 x344 1) 2430363622)))
(assert (=> (>= 10000 x181) (not (= x181 (x141 x205 0)))))
(assert (not (= (x141 x164 1) 3524403367)))
(assert (x527 x151))
(assert (not (= 3524403367 (x141 x62 0))))
(assert (x527 x41))
(assert (x527 x588))
(assert (=> (= (x141 x237 0) (x141 x549 0)) (= x549 x237)))
(assert (=> (<= x584 10000) (not (= (x141 x320 1) x584))))
(assert (=> (>= 10000 x586) (not (= (x141 x205 0) x586))))
(assert (not (= (x141 x449 1) 2835717307)))
(assert (x527 x190))
(assert (x527 x486))
(assert (not (= 2514000705 (x141 x164 1))))
(assert (not (= (x141 x64 0) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x527 x22))
(assert (not (= 157198259 (x141 x62 0))))
(assert (x527 x134))
(assert (x527 x496))
(assert (=> (<= x205 10000) (not (= (x141 x449 1) x205))))
(assert (not (= (x141 x205 0) 2569101039)))
(assert (= x171 (and x220 x142)))
(assert (not (= (x141 x86 0) 1784838210)))
(assert (not (= (x141 x205 0) 1952775229)))
(assert (=> (<= x378 10000) (not (= x378 (x141 x237 0)))))
(assert (=> (= (x141 x64 0) (x141 0 0)) (= x64 0)))
(assert (not (= (x141 x584 1) 1889567281)))
(assert (=> (<= x179 10000) (not (= (x141 x181 1) x179))))
(assert (not (= 2430363622 (x141 x86 0))))
(assert (=> (<= x164 10000) (not (= x164 (x141 x64 0)))))
(assert (= (or x574 x477 x357) x600))
(assert (x527 x2))
(assert (not (= (x141 x320 1) (x141 0 0))))
(assert (x527 x327))
(assert (x527 x15))
(assert (not (= (x141 x205 0) 2835717307)))
(assert (= x194 (and x295 (not x416))))
(assert (=> (<= x46 10000) (not (= (x141 x584 1) x46))))
(assert (not (= 234755713 (x141 x378 0))))
(assert (not (= (x141 x584 1) 1)))
(assert (=> (>= 10000 x237) (not (= (x141 x493 0) x237))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x141 x473 0))))
(assert (x527 x561))
(assert (x527 x481))
(assert (not (= (x141 x344 1) (x141 x473 0))))
(assert (not (= (x141 x597 1) (x141 x205 0))))
(assert (=> (>= 10000 x575) (not (= (x141 x86 0) x575))))
(assert (not (= 2835717307 (x141 x378 0))))
(assert (= x547 (=> (and (= x292 x581) (= 0 x210)) x285)))
(assert (not (= 3524403367 (x141 x493 0))))
(assert (x527 x534))
(assert (=> (= (x141 x86 0) (x141 x378 0)) (= x86 x378)))
(assert (=> (= (x141 x179 1) (x141 x586 1)) (= x179 x586)))
(assert (not (= 2514000705 (x141 x597 1))))
(assert (not (= 2835717307 (x141 x164 1))))
(assert (x527 x587))
(assert (=> (<= x86 10000) (not (= x86 (x141 x237 0)))))
(assert (x527 x523))
(assert (not (= 961581905 (x141 x62 0))))
(assert (x527 x392))
(assert (=> (<= x597 10000) (not (= x597 (x141 x205 0)))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x141 x597 1))))
(assert (not (= (x141 x493 0) 2757214935)))
(assert (not (= (x141 x181 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x527 x556))
(assert (=> (>= 10000 x244) (not (= (x141 x179 1) x244))))
(assert (x527 x516))
(assert (=> (>= 10000 x46) (not (= (x141 x597 1) x46))))
(assert (x527 x453))
(assert (x527 x595))
(assert (=> (>= 10000 x586) (not (= (x141 x234 1) x586))))
(assert (=> (= (x141 x473 0) (x141 x62 0)) (= x473 x62)))
(assert (x527 x235))
(assert (not (= (x141 x344 1) (x141 x64 0))))
(assert (x238 x344))
(assert (= (and x146 x425) x223))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x141 x62 0))))
(assert (= x395 (and (not x153) x256)))
(assert (x527 x439))
(assert (= (and x410 (not x169)) x546))
(assert (not (= 1784838210 (x141 x205 0))))
(assert (=> (= (x141 0 0) (x141 x62 0)) (= 0 x62)))
(assert (not (= 2514000705 (x141 x549 0))))
(assert (x527 x114))
(assert (=> (<= x473 10000) (not (= x473 (x141 x86 0)))))
(assert (not (= (x141 x237 0) (x141 x586 1))))
(assert (=> (= (x141 x234 1) (x141 x597 1)) (= x597 x234)))
(assert (not (= (x141 x320 1) 2430363622)))
(assert (not (= 234755713 (x141 x449 1))))
(assert (=> (<= x584 10000) (not (= (x141 x86 0) x584))))
(assert (not (= 2757214935 (x141 x549 0))))
(assert (not (= (x141 x179 1) 1)))
(assert (x527 x596))
(assert (x527 x621))
(assert (not (= (x141 x584 1) (x141 x378 0))))
(assert (=> (<= x86 10000) (not (= (x141 x86 0) x86))))
(assert (not (= (x141 x493 0) (x141 x597 1))))
(assert (not (= 157198259 (x141 x584 1))))
(assert (=> (= (x141 x86 0) (x141 x549 0)) (= x549 x86)))
(assert (x527 x470))
(assert (not (= (x141 x164 1) 404098525)))
(assert (x527 x451))
(assert (not (= (x141 x179 1) (x141 x549 0))))
(assert (not (= 2835717307 (x141 x493 0))))
(assert (=> (>= 10000 x449) (not (= x449 (x141 x64 0)))))
(assert (x527 x77))
(assert (not (= (x141 x237 0) 961581905)))
(assert (not (= (x141 x449 1) (x141 x64 0))))
(assert (not (= (x141 x449 1) 1889567281)))
(assert (x527 x513))
(assert (=> (>= 10000 x237) (not (= (x141 x473 0) x237))))
(assert (not (= (x141 x586 1) 1952775229)))
(assert (=> (<= x584 10000) (not (= (x141 x584 1) x584))))
(assert (=> (>= 10000 x378) (not (= (x141 x449 1) x378))))
(assert (not (= (x141 x586 1) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x141 x64 0) (x141 x181 1))))
(assert (x527 x605))
(assert (x527 x289))
(assert (not (= (x141 x179 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= x212 (and (not x598) x279)))
(assert (=> (<= x46 10000) (not (= (x141 x86 0) x46))))
(assert (x527 x307))
(assert (=> (= (x141 x493 0) (x141 x473 0)) (= x473 x493)))
(assert (=> (<= x378 10000) (not (= x378 (x141 x320 1)))))
(assert (not (= (x141 x493 0) 1461501637330902918203684832716283019655932542975)))
(assert (=> (= (x141 x473 0) (x141 x64 0)) (= x473 x64)))
(assert (=> (<= x205 10000) (not (= x205 (x141 x320 1)))))
(assert (= x204 (and (not x541) x61)))
(assert (=> (= (x141 x449 1) (x141 x181 1)) (= x181 x449)))
(assert (=> (<= x575 10000) (not (= x575 (x141 x181 1)))))
(assert (= (=> (and (= (x618 x244) x68) (= x384 (x184 (+ x420 4))) (>= x244 0) (= x420 (x184 (+ 128 x307))) (not (or (and (= true (<= x77 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x77 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x77))) (= x307 (x485 115792089237316195423570985008687907853269984665640564039457584007913129639904 x513)) (not (= x68 0)) (= (= x244 x575) x3) (= (x336 (- x561 x420)) x198) (not (= x252 0)) (= (x160 128) x347) (> 1461501637330902918203684832716283019655932542976 x244) (<= x244 1461501637330902918203684832716283019655932542975) (= x513 (x184 (+ 31 x77))) (= x561 (x184 (+ 32 x384)))) (and (=> (and x3 (and (= x198 x250) (= x554 (x618 x575)) (= x250 36) (< 0 x554) (not (> 4 x250)) (= (or (and (< x455 32) (= (<= x455 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x455 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x418) (not (> 826074471 x605)) (= (x336 (- x250 4)) x455) (= 1889567281 x605) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x548) (= x320 x586) (not (= 826074471 x605)))) (and (=> x418 x129) (=> (and (and (= x222 (= x320 x586)) (= x586 x140)) (not x418)) (and (=> (not x222) x129) (=> (and x222 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x28) (= x28 (x162 x98)) (= x98 (x141 x586 1)) (= 32 x265) (= x566 1) (>= x28 0))) x65))))) (=> (and (= x497 (= x244 x207)) (not x3)) (and (=> (and (and (= (x618 x207) x48) (not (> 4 x502)) (= x502 x198) (not (= x218 826074471)) (not (< x218 826074471)) (> x48 0) (= x230 (or (and (= true (<= x201 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x201)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x201))) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x8) (= (x336 (- x502 4)) x201) (= x597 x320) (= x502 36) (= x218 1889567281)) x497) (and (=> x230 x4) (=> (and (not x230) (and (= (= x597 x320) x82) (= x366 x597))) (and (=> (not x82) x4) (=> (and (and (<= 0 x13) (= x550 32) (= 1 x350) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x13) (= (x141 x597 1) x139) (= x13 (x85 x139))) x82) x10))))) (=> (and (and (= (= x320 x244) x541) (and (and (= x415 1889567281) (= x312 (x336 (- x241 4))) (= x320 x493) (= x432 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x241 36) (= x241 x198) (> x37 0) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x312) (and (< x312 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x312) true))) x96) (not (> 1889567281 x415)) (not (< x241 4)) (= (x618 x320) x37) (< x415 2569101039)) x541)) (not x497)) (and (=> x96 x25) (=> (and (and (= (= x320 x493) x149) (= x493 x500)) (not x96)) (and (=> (not x149) x25) (=> (and (and (= (x261 x419) x326) (= (x141 x493 0) x419) (>= x326 0) (= x353 32) (= x233 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x326)) x149) x388))))))))) x24))
(assert (x527 x69))
(assert (not (= (x141 x549 0) 2835717307)))
(assert (not (= 1 (x141 x86 0))))
(assert (= x40 (=> (and (= 0 x263) (= x229 x292)) x272)))
(assert (not (= 3524403367 (x141 x179 1))))
(assert (=> (<= x549 10000) (not (= x549 (x141 x320 1)))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x141 x344 1))))
(assert (= (or (and (not x222) x616) (and x370 x418)) x612))
(assert (=> (>= 10000 x164) (not (= (x141 x549 0) x164))))
(assert (not (= (x141 x86 0) 234755713)))
(assert (not (= (x141 x164 1) (x141 x205 0))))
(assert (=> (= (x141 x449 1) (x141 x164 1)) (= x449 x164)))
(assert (x527 x239))
(assert (x527 x548))
(assert (=> (= (x141 x237 0) (x141 x378 0)) (= x378 x237)))
(assert (x527 x312))
(assert (=> (<= x179 10000) (not (= (x141 x586 1) x179))))
(assert (not (= 2569101039 (x141 x449 1))))
(assert (x527 x460))
(assert (=> (= (x141 x493 0) (x141 x86 0)) (= x493 x86)))
(assert (=> (<= x244 10000) (not (= (x141 x62 0) x244))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x141 x179 1))))
(assert (=> (<= x549 10000) (not (= x549 (x141 x473 0)))))
(assert (=> (<= x64 10000) (not (= (x141 x597 1) x64))))
(assert (=> (= (x141 x234 1) (x141 x179 1)) (= x179 x234)))
(assert (= x313 (=> (and (= x555 x496) (= x278 x227)) x143)))
(assert (x527 x492))
(assert (=> (<= x234 10000) (not (= x234 (x141 x64 0)))))
(assert (= (and x29 x304) x31))
(assert (=> (= (x141 x237 0) (x141 x64 0)) (= x237 x64)))
(assert (=> (<= x575 10000) (not (= x575 (x141 x344 1)))))
(assert (=> (>= 10000 x237) (not (= (x141 x584 1) x237))))
(assert (=> (= (x141 x473 0) (x141 x86 0)) (= x473 x86)))
(assert (x527 x62))
(assert (x527 x577))
(assert (=> (>= 10000 x493) (not (= x493 (x141 0 0)))))
(assert (not (= (x141 x62 0) 2757214935)))
(assert (not (= 1989257563 (x141 x62 0))))
(assert (x527 x591))
(assert (=> (<= x320 10000) (not (= x320 (x141 x164 1)))))
(assert (not (= (x141 x493 0) 1784838210)))
(assert (=> (<= x237 10000) (not (= x237 (x141 x586 1)))))
(assert (=> (>= 10000 x597) (not (= x597 (x141 x179 1)))))
(assert (x527 x338))
(assert (not (= (x141 x449 1) (x141 x378 0))))
(assert (not (= (x141 x234 1) 1952775229)))
(assert (= x359 (or (and x1 x126) (and x304 (not x29)))))
(assert (=> (<= x549 10000) (not (= (x141 x64 0) x549))))
(assert (x527 x311))
(assert (=> (>= 10000 x597) (not (= (x141 x344 1) x597))))
(assert (not (= (x141 x378 0) 1889567281)))
(assert (=> (<= x207 10000) (not (= (x141 x586 1) x207))))
(assert (not (= (x141 x64 0) 1461501637330902918203684832716283019655932542976)))
(assert (=> (= (x141 x473 0) (x141 x237 0)) (= x473 x237)))
(assert (= (and x212 x563) x155))
(assert (=> (>= 10000 x164) (not (= x164 (x141 x86 0)))))
(assert (x508 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (or x81 x248 x186) x147))
(assert (x527 x423))
(assert (x527 x205))
(assert (=> (>= 10000 x320) (not (= (x141 x86 0) x320))))
(assert (x527 x403))
(assert (=> (>= 10000 x378) (not (= x378 (x141 x205 0)))))
(assert (not (= (x141 x179 1) 2835717307)))
(assert (= x186 (or x197 x50)))
(assert (x527 x258))
(assert (not (= (x141 x181 1) (x141 x493 0))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x141 x584 1))))
(assert (not (= (x141 0 0) 2569101039)))
(assert (=> (<= x344 10000) (not (= (x141 x320 1) x344))))
(assert (not (= 826074471 (x141 x181 1))))
(assert (not (= 2430363622 (x141 0 0))))
(assert (x527 x385))
(assert (=> (= (x141 x62 0) (x141 x86 0)) (= x86 x62)))
(assert (not (= 961581905 (x141 x86 0))))
(assert (=> (>= 10000 x549) (not (= (x141 0 0) x549))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x141 x378 0))))
(assert (=> (<= x597 10000) (not (= (x141 x586 1) x597))))
(assert (not (= (x141 x549 0) 234755713)))
(assert (x527 x350))
(assert (=> (= (x141 x473 0) (x141 x205 0)) (= x205 x473)))
(assert (=> (<= x205 10000) (not (= x205 (x141 x584 1)))))
(assert (not (= (x141 x320 1) 0)))
(assert (=> (<= x207 10000) (not (= (x141 0 0) x207))))
(assert (x527 x455))
(assert (x527 x437))
(assert (=> (>= 10000 x449) (not (= (x141 x549 0) x449))))
(assert (=> (>= 10000 x493) (not (= x493 (x141 x237 0)))))
(assert (=> (>= 10000 x164) (not (= x164 (x141 0 0)))))
(assert (=> (>= 10000 x549) (not (= (x141 x378 0) x549))))
(assert (x527 x177))
(assert (=> (<= x549 10000) (not (= x549 (x141 x449 1)))))
(assert (x527 x208))
(assert (x527 x373))
(assert (=> (<= x584 10000) (not (= x584 (x141 x64 0)))))
(assert (x238 x86))
(assert (=> (>= 10000 x205) (not (= (x141 x164 1) x205))))
(assert (=> (>= 10000 x244) (not (= (x141 x320 1) x244))))
(assert (x527 x137))
(assert (not (= (x141 x584 1) (x141 x549 0))))
(assert (= (and (not x267) x223) x475))
(assert (=> (<= x62 10000) (not (= x62 (x141 x549 0)))))
(assert (not (= 826074471 (x141 x179 1))))
(assert (=> (>= 10000 x237) (not (= x237 (x141 x378 0)))))
(assert (x527 x242))
(assert (=> (= (x141 x62 0) (x141 x378 0)) (= x378 x62)))
(assert (=> (<= x181 10000) (not (= x181 (x141 0 0)))))
(assert (=> (>= 10000 x207) (not (= x207 (x141 x64 0)))))
(assert (x527 x365))
(assert (= true x594))
(assert (=> (<= x473 10000) (not (= x473 (x141 x234 1)))))
(assert (not (= 1889567281 (x141 x597 1))))
(assert (x238 x244))
(assert (=> (>= 10000 x181) (not (= x181 (x141 x237 0)))))
(assert (=> (>= 10000 x181) (not (= x181 (x141 x64 0)))))
(assert (not (= (x141 x320 1) 1461501637330902918203684832716283019655932542976)))
(assert (not (= (x141 x164 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x527 x329))
(assert (=> (>= 10000 x234) (not (= x234 (x141 x179 1)))))
(assert (not (= (x141 x378 0) (x141 x320 1))))
(assert (not (= (x141 x234 1) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= (x141 x62 0) 826074471)))
(assert (x527 x346))
(assert (not (= (x141 x164 1) 1)))
(assert (= (=> (and (= 0 x226) (= x368 x242)) x251) x430))
(assert (x527 x118))
(assert (= x81 (or x231 x519)))
(assert (x527 x116))
(assert (x527 x18))
(assert (x527 x48))
(assert (not (= (x141 x181 1) 2430363622)))
(assert (not (= 2835717307 (x141 x320 1))))
(assert (=> (>= 10000 x320) (not (= x320 (x141 x181 1)))))
(assert (=> (>= 10000 x62) (not (= x62 (x141 x597 1)))))
(assert (=> (>= 10000 x207) (not (= (x141 x344 1) x207))))
(assert (=> (>= 10000 x234) (not (= x234 (x141 x164 1)))))
(assert (=> (>= 10000 x549) (not (= x549 (x141 x493 0)))))
(assert (not (= (x141 x234 1) 157198259)))
(assert (= x25 (=> (and (= x233 0) (= x353 x525)) x388)))
(assert (x527 x102))
(assert (=> (>= 10000 x549) (not (= (x141 x86 0) x549))))
(assert (not (= (x141 x164 1) 1461501637330902918203684832716283019655932542976)))
(assert (not (= (x141 x181 1) 961581905)))
(assert (x527 x181))
(assert (= x408 (=> (and (= x423 x278) (= x118 x496)) x143)))
(assert (not (= 157198259 (x141 x473 0))))
(assert (x527 x407))
(assert (=> (>= 10000 x205) (not (= (x141 x549 0) x205))))
(assert (not (= (x141 x378 0) 1952775229)))
(assert (=> (>= 10000 x344) (not (= (x141 x493 0) x344))))
(assert (not (= 404098525 (x141 x179 1))))
(assert (= x30 (and x194 x543)))
(assert (=> (<= x205 10000) (not (= (x141 x237 0) x205))))
(assert (not (= 404098525 (x141 x64 0))))
(assert (x527 x428))
(assert (=> (>= 10000 x244) (not (= x244 (x141 x597 1)))))
(assert (=> (>= 10000 x549) (not (= x549 (x141 x62 0)))))
(assert (not (= 2514000705 (x141 x344 1))))
(assert (=> (>= 10000 x237) (not (= x237 (x141 x164 1)))))
(assert (x527 x354))
(assert (not (= 2757214935 (x141 x320 1))))
(assert (= (or (and x479 x559) (and x123 (not x573))) x434))
(assert (not (= (x141 x86 0) (x141 x344 1))))
(assert (=> (>= 10000 x205) (not (= x205 (x141 0 0)))))
(assert (not (= (x141 x164 1) (x141 x378 0))))
(assert (not (= (x141 x597 1) 1461501637330902918203684832716283019655932542976)))
(assert (=> (<= x493 10000) (not (= x493 (x141 x62 0)))))
(assert (not (= (x141 x597 1) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x527 x444))
(assert (not (= (x141 x234 1) 1)))
(assert (=> (<= x344 10000) (not (= x344 (x141 x181 1)))))
(assert (=> (<= x244 10000) (not (= (x141 x181 1) x244))))
(assert (=> (= (x141 x320 1) (x141 x584 1)) (= x584 x320)))
(assert (=> (= (x141 x344 1) (x141 x449 1)) (= x344 x449)))
(assert (=> (>= 10000 x244) (not (= (x141 x344 1) x244))))
(assert (=> (= (x141 x164 1) (x141 x320 1)) (= x320 x164)))
(assert (=> (>= 10000 x234) (not (= x234 (x141 x584 1)))))
(assert (not (= 2514000705 (x141 x473 0))))
(assert (not (= 1889567281 (x141 x237 0))))
(assert (=> (<= x575 10000) (not (= (x141 x584 1) x575))))
(assert (= (and x616 x222) x165))
(assert (=> (>= 10000 x575) (not (= x575 (x141 x449 1)))))
(assert (not (= 2757214935 (x141 x449 1))))
(assert (=> (>= 10000 x597) (not (= x597 (x141 x378 0)))))
(assert (x527 x12))
(assert (=> (>= 10000 x584) (not (= (x141 x234 1) x584))))
(assert (=> (<= x86 10000) (not (= x86 (x141 x493 0)))))
(assert (=> (<= x473 10000) (not (= (x141 x597 1) x473))))
(assert (not (= (x141 x320 1) (x141 x86 0))))
(assert (=> (>= 10000 x86) (not (= (x141 x584 1) x86))))
(assert (=> (>= 10000 x549) (not (= (x141 x234 1) x549))))
(assert (not (= 234755713 (x141 x205 0))))
(assert (=> (>= 10000 x473) (not (= x473 (x141 x62 0)))))
(assert (=> (<= x164 10000) (not (= (x141 x597 1) x164))))
(assert (=> (<= x62 10000) (not (= (x141 x584 1) x62))))
(assert (x527 x45))
(assert (x527 x421))
(assert (x238 x62))
(assert (=> (<= x86 10000) (not (= x86 (x141 x586 1)))))
(assert (=> (>= 10000 x584) (not (= x584 (x141 x205 0)))))
(assert (not (= 234755713 (x141 x164 1))))
(assert (=> (>= 10000 x449) (not (= (x141 x237 0) x449))))
(assert (=> (= (x141 x234 1) (x141 x586 1)) (= x234 x586)))
(check-sat)
(exit)