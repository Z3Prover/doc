(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x216 () Int)
(declare-fun x182 () Bool)
(declare-fun x58 () Bool)
(declare-fun x34 () Int)
(declare-fun x177 () Int)
(declare-fun x185 () Bool)
(declare-fun x271 () Int)
(declare-fun x172 () Int)
(declare-fun x180 () Int)
(declare-fun x273 (Int) Int)
(declare-fun x46 () Int)
(declare-fun x77 () Bool)
(declare-fun x54 () Int)
(declare-fun x240 () Int)
(declare-fun x124 () Bool)
(declare-fun x67 () Int)
(declare-fun x47 () Int)
(declare-fun x229 () Int)
(declare-fun x106 () Bool)
(declare-fun x50 () Int)
(declare-fun x125 () Int)
(declare-fun x283 () Int)
(declare-fun x89 () Bool)
(declare-fun x35 () Int)
(declare-fun x114 () Int)
(declare-fun x219 () Int)
(declare-fun x61 () Int)
(declare-fun x62 () Bool)
(declare-fun x135 () Int)
(declare-fun x247 () Int)
(declare-fun x147 () Bool)
(declare-fun x254 () Int)
(declare-fun x86 () Bool)
(declare-fun x210 (Int) Int)
(declare-fun x7 () Int)
(declare-fun x5 () Int)
(declare-fun x287 () Bool)
(declare-fun x156 () Int)
(declare-fun x75 () Int)
(declare-fun x226 () Int)
(declare-fun x169 () Bool)
(declare-fun x181 () Int)
(declare-fun x200 () Int)
(declare-fun x198 () Int)
(declare-fun x116 () Int)
(declare-fun x142 () Int)
(declare-fun x33 () Int)
(declare-fun x275 () Bool)
(declare-fun x133 (Int Int) Int)
(declare-fun x78 () Int)
(declare-fun x39 () Int)
(declare-fun x220 () Int)
(declare-fun x37 () Bool)
(declare-fun x71 (Int) Int)
(declare-fun x202 () Int)
(declare-fun x176 () Bool)
(declare-fun x134 () Int)
(declare-fun x225 () Bool)
(declare-fun x55 () Int)
(declare-fun x261 () Int)
(declare-fun x144 (Int) Int)
(declare-fun x174 () Int)
(declare-fun x154 () Int)
(declare-fun x270 () Int)
(declare-fun x252 () Int)
(declare-fun x228 () Int)
(declare-fun x2 () Int)
(declare-fun x14 () Int)
(declare-fun x284 () Int)
(declare-fun x233 () Int)
(declare-fun x87 () Int)
(declare-fun x140 () Bool)
(declare-fun x129 () Int)
(declare-fun x223 () Bool)
(declare-fun x145 () Bool)
(declare-fun x274 () Int)
(declare-fun x92 () Bool)
(declare-fun x194 () Int)
(declare-fun x98 () Int)
(declare-fun x31 () Int)
(declare-fun x80 () Int)
(declare-fun x99 () Int)
(declare-fun x6 () Int)
(declare-fun x93 (Int) Int)
(declare-fun x65 () Int)
(declare-fun x122 () Int)
(declare-fun x84 () Int)
(declare-fun x74 () Bool)
(declare-fun x127 () Int)
(declare-fun x235 () Int)
(declare-fun x256 (Int Int) Int)
(declare-fun x246 (Int) Int)
(declare-fun x167 () Int)
(declare-fun x280 () Int)
(declare-fun x104 () Bool)
(declare-fun x94 () Int)
(declare-fun x291 () Int)
(declare-fun x286 () Bool)
(declare-fun x13 () Bool)
(declare-fun x53 () Int)
(declare-fun x72 () Int)
(declare-fun x95 () Int)
(declare-fun x192 () Int)
(declare-fun x239 (Int) Int)
(declare-fun x206 () Bool)
(declare-fun x157 () Bool)
(declare-fun x292 () Int)
(declare-fun x10 () Int)
(declare-fun x188 () Int)
(declare-fun x146 () Int)
(declare-fun x293 () Bool)
(declare-fun x265 () Int)
(declare-fun x203 () Int)
(declare-fun x290 () Bool)
(declare-fun x45 () Int)
(declare-fun x164 () Int)
(declare-fun x190 () Int)
(declare-fun x161 () Bool)
(declare-fun x213 () Int)
(declare-fun x266 () Int)
(declare-fun x3 () Int)
(declare-fun x184 () Int)
(declare-fun x251 () Int)
(declare-fun x170 () Int)
(declare-fun x117 () Bool)
(declare-fun x51 () Int)
(declare-fun x22 () Int)
(declare-fun x118 () Int)
(declare-fun x276 () Bool)
(declare-fun x136 () Int)
(declare-fun x160 () Int)
(declare-fun x205 () Int)
(declare-fun x199 () Int)
(declare-fun x30 () Bool)
(declare-fun x165 () Int)
(declare-fun x294 () Bool)
(declare-fun x278 () Bool)
(declare-fun x128 () Int)
(declare-fun x25 () Bool)
(declare-fun x222 () Int)
(declare-fun x207 () Int)
(declare-fun x173 () Int)
(declare-fun x230 () Int)
(declare-fun x48 (Int Int) Int)
(declare-fun x26 () Int)
(declare-fun x40 () Int)
(declare-fun x17 () Int)
(declare-fun x63 () Int)
(declare-fun x151 () Int)
(declare-fun x288 () Int)
(declare-fun x179 () Bool)
(declare-fun x193 () Int)
(declare-fun x257 () Int)
(declare-fun x97 () Int)
(declare-fun x20 () Int)
(declare-fun x109 () Int)
(declare-fun x285 () Int)
(declare-fun x249 () Int)
(declare-fun x18 () Int)
(declare-fun x9 () Int)
(declare-fun x255 () Bool)
(declare-fun x248 () Bool)
(declare-fun x79 () Bool)
(declare-fun x217 () Int)
(declare-fun x189 () Int)
(declare-fun x112 () Int)
(declare-fun x23 () Int)
(declare-fun x148 () Int)
(declare-fun x166 () Int)
(declare-fun x70 () Int)
(declare-fun x152 () Int)
(declare-fun x175 () Int)
(declare-fun x150 () Int)
(declare-fun x44 (Int Int) Int)
(declare-fun x139 () Bool)
(declare-fun x82 () Bool)
(declare-fun x115 () Int)
(declare-fun x242 () Bool)
(declare-fun x279 () Int)
(declare-fun x201 () Int)
(declare-fun x212 () Int)
(declare-fun x267 () Int)
(declare-fun x83 (Int) Int)
(declare-fun x38 () Bool)
(declare-fun x187 () Int)
(declare-fun x119 () Int)
(declare-fun x11 () Bool)
(declare-fun x183 () Int)
(declare-fun x263 () Int)
(declare-fun x108 () Bool)
(declare-fun x41 () Int)
(declare-fun x162 (Int) Int)
(declare-fun x29 () Int)
(declare-fun x107 () Int)
(declare-fun x227 () Int)
(declare-fun x100 () Int)
(declare-fun x130 () Int)
(declare-fun x138 () Bool)
(declare-fun x218 () Int)
(declare-fun x8 () Int)
(declare-fun x260 (Int) Int)
(declare-fun x90 () Int)
(declare-fun x237 () Int)
(declare-fun x43 () Int)
(declare-fun x111 () Int)
(declare-fun x282 () Int)
(declare-fun x186 () Int)
(declare-fun x277 () Int)
(declare-fun x159 () Int)
(declare-fun x16 () Int)
(declare-fun x19 () Int)
(declare-fun x66 () Bool)
(declare-fun x36 () Int)
(declare-fun x42 () Int)
(declare-fun x102 () Bool)
(declare-fun x91 (Int) Int)
(declare-fun x245 () Int)
(declare-fun x88 () Int)
(declare-fun x49 () Int)
(declare-fun x208 () Int)
(declare-fun x96 () Int)
(declare-fun x1 () Int)
(declare-fun x28 () Int)
(declare-fun x258 () Int)
(declare-fun x211 () Int)
(declare-fun x57 () Int)
(declare-fun x264 () Bool)
(declare-fun x105 () Bool)
(declare-fun x32 () Int)
(declare-fun x268 () Int)
(declare-fun x123 () Int)
(declare-fun x250 (Int) Int)
(declare-fun x68 () Bool)
(declare-fun x244 () Int)
(declare-fun x243 () Int)
(declare-fun x69 (Int) Int)
(declare-fun x131 () Int)
(declare-fun x191 () Int)
(declare-fun x272 () Int)
(declare-fun x197 () Int)
(declare-fun x59 () Int)
(declare-fun x73 () Int)
(declare-fun x141 () Int)
(declare-fun x81 () Int)
(declare-fun x126 () Bool)
(declare-fun x259 () Int)
(declare-fun x101 () Int)
(declare-fun x21 () Int)
(declare-fun x262 () Int)
(declare-fun x214 () Int)
(declare-fun x56 () Int)
(declare-fun x120 () Bool)
(declare-fun x85 () Int)
(declare-fun x64 (Int) Int)
(declare-fun x103 () Int)
(declare-fun x52 () Int)
(declare-fun x236 () Int)
(declare-fun x24 () Int)
(declare-fun x196 () Int)
(declare-fun x143 () Int)
(declare-fun x232 () Int)
(declare-fun x289 () Int)
(declare-fun x163 () Int)
(declare-fun x195 () Int)
(declare-fun x224 () Int)
(declare-fun x113 () Int)
(declare-fun x137 () Bool)
(declare-fun x110 () Int)
(declare-fun x76 () Int)
(declare-fun x171 (Int) Int)
(declare-fun x132 () Int)
(define-fun x27 ((x234 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x234) (>= x234 0)) x234 (- x234 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x121 ((x234 Int)) Int (ite (and (> 0 x234) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x234)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x234) x234))
(define-fun x269 ((x155 Int)) Bool (and (< x155 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x155)))
(define-fun x4 ((x155 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x155) (>= x155 0)))
(define-fun x15 ((x155 Int)) Bool (and (= (x44 x155 115792089237316195423570985008687907853269984665640564039457584007913129639935) x155) (= x155 (x44 115792089237316195423570985008687907853269984665640564039457584007913129639935 x155))))
(define-fun x168 ((x155 Int)) Bool (and (= 0 (x44 x155 0)) (= 0 (x44 0 x155))))
(define-fun x158 ((x155 Int)) Bool (= x155 (x44 x155 x155)))
(define-fun x231 ((x155 Int)) Bool (and (x158 x155) (x168 x155) (x15 x155)))
(define-fun x204 ((x155 Int) (x209 Int)) Bool (= (x44 x209 x155) (x44 x155 x209)))
(define-fun x238 ((x155 Int) (x209 Int)) Bool (and (=> (<= 0 x209) (<= (x44 x155 x209) x209)) (=> (>= x155 0) (>= x155 (x44 x155 x209))) (>= (x44 x155 x209) 0)))
(define-fun x153 ((x155 Int) (x209 Int)) Bool (and (x204 x155 x209) (x238 x155 x209)))
(define-fun x241 ((x155 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x256 115792089237316195423570985008687907853269984665640564039457584007913129639935 x155)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x256 x155 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x221 ((x155 Int)) Bool (and (= x155 (x256 x155 0)) (= x155 (x256 0 x155))))
(define-fun x215 ((x155 Int)) Bool (= x155 (x256 x155 x155)))
(define-fun x60 ((x155 Int)) Bool (and (x215 x155) (x221 x155) (x241 x155)))
(define-fun x253 ((x155 Int) (x209 Int)) Bool (= (x256 x155 x209) (x256 x209 x155)))
(define-fun x281 ((x155 Int) (x209 Int)) Bool (and (=> (<= 0 x209) (<= x209 (x256 x155 x209))) (>= (+ x155 x209) (x256 x155 x209)) (=> (<= 0 x155) (<= x155 (x256 x155 x209)))))
(define-fun x12 ((x155 Int) (x209 Int)) Bool (and (x253 x155 x209) (x281 x155 x209)))
(define-fun x178 ((x155 Int)) Bool (= (mod x155 1461501637330902918203684832716283019655932542976) (x44 x155 1461501637330902918203684832716283019655932542975)))
(define-fun x149 ((x155 Int)) Bool (and (x153 x155 1461501637330902918203684832716283019655932542975) (x178 x155)))
(assert (not (= 1763987465 (+ x190 4))))
(assert (x4 x35))
(assert (=> (>= 10000 x214) (not (= x214 (x133 x135 3)))))
(assert (not (= (x133 x265 x20) 1710941022)))
(assert (x4 x32))
(assert (=> (>= 10000 x265) (not (= x265 (x133 x289 x280)))))
(assert (=> (>= 10000 x81) (not (= x81 (+ 2 x208)))))
(assert (x269 x265))
(assert (=> (= (x133 x265 x20) (x133 x213 5)) (and (= x20 5) (= x265 x213))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x133 x170 1))))
(assert (not (= (+ x184 1) (+ x263 3))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x133 x289 x7))))
(assert (x60 x33))
(assert (x231 x97))
(assert (not (= 2 (+ x190 4))))
(assert (=> (>= 10000 x220) (not (= (x133 x289 x7) x220))))
(assert (not (= (x133 x135 3) (+ x190 4))))
(assert (not (= (+ x190 4) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x133 x135 4) 1980270339)))
(assert (not (= (x133 x289 x280) (+ x111 1))))
(assert (not (= (x133 x81 1) (+ x184 1))))
(assert (x4 x61))
(assert (x4 x114))
(assert (x4 x70))
(assert (=> (<= x220 10000) (not (= x220 (+ 4 x190)))))
(assert (not (= (x133 x135 2) 2)))
(assert (=> (= (x133 x289 x175) (x133 x289 x280)) (= x280 x175)))
(assert (x4 x193))
(assert (=> (>= 10000 x135) (not (= (+ 4 x190) x135))))
(assert (x4 x50))
(assert (x4 x19))
(assert (not (= 1161348331 (x133 x213 5))))
(assert (not (= 1 (x133 x289 x175))))
(assert (not (= (x133 x135 3) (+ x111 1))))
(assert (x4 x244))
(assert (=> (<= x213 10000) (not (= x213 (+ x263 3)))))
(assert (=> (<= x214 10000) (not (= x214 (+ x208 2)))))
(assert (not (= (x133 x289 x175) 2)))
(assert (not (= (x133 x220 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x4 x283))
(assert (=> (= (x133 x265 x20) (x133 x81 1)) (and (= x81 x265) (= 1 x20))))
(assert (not (= (x133 x135 4) 1710941022)))
(assert (not (= (x133 x220 1) 2)))
(assert (=> (= (x133 x289 x7) (x133 x214 x53)) (and (= x214 x289) (= x53 x7))))
(assert (not (= (x133 x289 x280) 1763987465)))
(assert (=> (>= 10000 x213) (not (= x213 (+ 4 x190)))))
(assert (=> (= (x133 x289 x7) (x133 x289 x175)) (= x7 x175)))
(assert (not (= 1161348331 (+ x111 1))))
(assert (not (= (x133 x220 1) 1461501637330902918203684832716283019655932542975)))
(assert (=> (<= x81 10000) (not (= x81 (x133 x213 5)))))
(assert (=> (>= 10000 x1) (not (= x1 (+ x111 1)))))
(assert (=> (<= x135 10000) (not (= (x133 x289 x280) x135))))
(assert (x4 x160))
(assert (=> (<= x265 10000) (not (= x265 (x133 x289 x175)))))
(assert (not (= (+ 3 x263) 1814410054)))
(assert (not (= (x133 x289 x7) 5)))
(assert (not (= (+ 1 x111) (x133 x265 x20))))
(assert (x4 x288))
(assert (not (= (x133 x214 x53) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (not (= (x133 x220 1) (+ x263 3))))
(assert (not (= (x133 x265 x20) 2)))
(assert (not (= (x133 x265 x20) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (not (= (x133 x214 x53) (+ 1 x111))))
(assert (=> (= (x133 x135 4) (x133 x289 x280)) (and (= x280 4) (= x135 x289))))
(assert (not (= 1710941022 (x133 x135 2))))
(assert (not (= (x133 x213 5) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x133 x289 x280) 5)))
(assert (=> (<= x214 10000) (not (= x214 (x133 x214 x53)))))
(assert (not (= 1 (x133 x135 3))))
(assert (not (= 4 (x133 x289 x7))))
(assert (x269 x20))
(assert (x4 x205))
(assert (x4 x59))
(assert (not (= (+ 3 x263) (x133 x170 1))))
(assert (not (= (+ x190 4) 1161348331)))
(assert (=> (>= 10000 x265) (not (= (x133 x220 1) x265))))
(assert (x153 x118 x200))
(assert (=> (<= x81 10000) (not (= x81 (x133 x135 4)))))
(assert (x4 x90))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x133 x135 3))))
(assert (not (= 4 (x133 x135 3))))
(assert (not (= 231365057 (x133 x213 5))))
(assert (x4 x251))
(assert (=> (>= 10000 x265) (not (= x265 (x133 x289 x7)))))
(assert (x4 x40))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x133 x214 x53))))
(assert (not (= (x133 x81 1) 1814410054)))
(assert (not (= (x133 x289 x175) 1161348331)))
(assert (=> (<= x81 10000) (not (= x81 (x133 x289 x7)))))
(assert (x60 x43))
(assert (x4 x115))
(assert (not (= (x133 x170 1) (+ x184 1))))
(assert (not (= (+ x184 1) (x133 x213 5))))
(assert (not (= (+ x208 2) (x133 x220 1))))
(assert (x4 x267))
(assert (not (= (x133 x135 3) (+ x208 2))))
(assert (x269 x220))
(assert (=> (<= x170 10000) (not (= (x133 x135 4) x170))))
(assert (=> (<= x213 10000) (not (= x213 (x133 x81 1)))))
(assert (not (= 5 (x133 x265 x20))))
(assert (not (= (x133 x289 x175) 3)))
(assert (x4 x152))
(assert (not (= (x133 x289 x7) 2)))
(assert (x60 x110))
(assert (x4 x128))
(assert (not (= (+ 4 x190) (x133 x214 x53))))
(assert (x4 x165))
(assert (not (= 1710941022 (x133 x220 1))))
(assert (=> (= (x133 x214 x53) (x133 x135 3)) (and (= 3 x53) (= x135 x214))))
(assert (=> (= (x133 x135 3) (x133 x289 x175)) (and (= x135 x289) (= 3 x175))))
(assert (x4 x229))
(assert (not (= (x133 x81 1) 1980270339)))
(assert (x4 x98))
(assert (not (= (x133 x135 2) 1461501637330902918203684832716283019655932542975)))
(assert (=> (<= x289 10000) (not (= (+ x263 3) x289))))
(assert (=> (= (x133 x220 1) (x133 x265 x20)) (and (= x265 x220) (= 1 x20))))
(assert (=> (>= 10000 x135) (not (= x135 (x133 x265 x20)))))
(assert (not (= (+ 1 x184) 5)))
(assert (=> (= (x133 x289 x7) (x133 x135 4)) (and (= 4 x7) (= x289 x135))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (+ 1 x111))))
(assert (not (= 699302164 (x133 x214 x53))))
(assert (x4 x156))
(assert (not (= 1161348331 (x133 x170 1))))
(assert (x4 x220))
(assert (not (= 1161348331 (x133 x220 1))))
(assert (x231 x245))
(assert (not (= (x133 x135 4) 1161348331)))
(assert (not (= 761373525 (x133 x289 x7))))
(assert (not (= (x133 x289 x280) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x4 x173))
(assert (x4 x188))
(assert (=> (>= 10000 x265) (not (= (x133 x135 2) x265))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x133 x81 1))))
(assert (not (= 3 (+ x111 1))))
(assert (not x79))
(assert (=> (>= 10000 x81) (not (= x81 (+ x190 4)))))
(assert (=> (= (x133 x170 1) (x133 x289 x7)) (and (= x170 x289) (= x7 1))))
(assert (not (= (+ x263 3) 1710941022)))
(assert (not (= (x133 x214 x53) 1763987465)))
(assert (not (= 1814410054 (+ 4 x190))))
(assert (x4 x73))
(assert (not (= (x133 x265 x20) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (>= 10000 x213) (not (= (+ 1 x184) x213))))
(assert (not (= 2094874590 (+ 1 x184))))
(assert (not (= 2094874590 (+ 3 x263))))
(assert (not (= 231365057 (+ 2 x208))))
(assert (not (= (x133 x170 1) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x4 x16))
(assert (not (= 1763987465 (+ x184 1))))
(assert (not (= (+ x190 4) (+ x208 2))))
(assert (not (= (x133 x289 x175) (+ x184 1))))
(assert (not (= 5 (+ 1 x111))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x133 x289 x175))))
(assert (x4 x164))
(assert (not (= (x133 x135 3) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (not (= (x133 x135 2) 231365057)))
(assert (not (= (+ x208 2) 1763987465)))
(assert (x4 x54))
(assert (x269 x184))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x133 x289 x280))))
(assert (x4 x141))
(assert (not (= (x133 x213 5) (+ 4 x190))))
(assert (=> (>= 10000 x213) (not (= x213 (x133 x289 x7)))))
(assert (x4 x194))
(assert (=> (>= 10000 x289) (not (= x289 (x133 x265 x20)))))
(assert (x4 x236))
(assert (x231 x202))
(assert (=> (<= x289 10000) (not (= (+ 2 x208) x289))))
(assert (x231 x172))
(assert (=> (= (x133 x265 x20) (x133 x135 3)) (and (= 3 x20) (= x265 x135))))
(assert (x4 x134))
(assert (=> (>= 10000 x170) (not (= x170 (x133 x170 1)))))
(assert (=> (<= x170 10000) (not (= (x133 x213 5) x170))))
(assert (x4 x214))
(assert (not (= 699302164 (x133 x135 4))))
(assert (not (= 1710941022 (x133 x289 x175))))
(assert (=> (<= x214 10000) (not (= (x133 x220 1) x214))))
(assert (x231 1461501637330902918203684832716283019655932542975))
(assert (x4 x211))
(assert (not (= (x133 x81 1) 1710941022)))
(assert (x12 x243 x33))
(assert (not (= (x133 x135 2) 1763987465)))
(assert (=> (= (x133 x289 x280) (x133 x265 x20)) (and (= x289 x265) (= x280 x20))))
(assert (=> (>= 10000 x170) (not (= x170 (+ x263 3)))))
(assert (not (= (x133 x135 4) 1814410054)))
(assert (not (= 1710941022 (x133 x170 1))))
(assert (not (= (+ x208 2) 1710941022)))
(assert (not (= (+ x190 4) (x133 x135 4))))
(assert (not (= (x133 x289 x7) 1461501637330902918203684832716283019655932542975)))
(assert (x269 x135))
(assert (not (= (x133 x213 5) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (not (= 4 (x133 x170 1))))
(assert (x60 x243))
(assert (x4 x195))
(assert (=> (<= x214 10000) (not (= (x133 x170 1) x214))))
(assert (not (= (+ x263 3) 761373525)))
(assert (x4 x199))
(assert (not (= (x133 x135 4) (x133 x135 2))))
(assert (x231 x142))
(assert (=> (= (x133 x214 x53) (x133 x81 1)) (and (= x81 x214) (= x53 1))))
(assert (not (= (+ 1 x111) 1814410054)))
(assert (x60 x45))
(assert (=> (<= x220 10000) (not (= (x133 x213 5) x220))))
(assert (not (= (x133 x135 2) 4)))
(assert (not (= (x133 x213 5) (x133 x135 2))))
(assert (=> (>= 10000 x214) (not (= (x133 x81 1) x214))))
(assert (=> (>= 10000 x135) (not (= (+ 3 x263) x135))))
(assert (=> (>= 10000 x135) (not (= x135 (x133 x214 x53)))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x133 x135 2))))
(assert (x4 x146))
(assert (x4 x243))
(assert (=> (<= x81 10000) (not (= (x133 x289 x175) x81))))
(assert (=> (<= x289 10000) (not (= (x133 x289 x175) x289))))
(assert (x4 x18))
(assert (not (= 1161348331 (x133 x289 x7))))
(assert (x269 x1))
(assert (not (= (x133 x289 x175) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (not (= (+ 2 x208) (x133 x289 x280))))
(assert (=> (>= 10000 x170) (not (= (x133 x81 1) x170))))
(assert (not (= (x133 x214 x53) 1710941022)))
(assert (x231 x125))
(assert (=> (>= 10000 x135) (not (= x135 (x133 x81 1)))))
(assert (not (= 1763987465 (+ 3 x263))))
(assert (not (= (x133 x135 4) (+ x184 1))))
(assert (not (= (+ 1 x184) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (=> (<= x1 10000) (not (= (x133 x220 1) x1))))
(assert (x231 x73))
(assert (=> (<= x135 10000) (not (= x135 (x133 x170 1)))))
(assert (x4 x261))
(assert (not (= (x133 x213 5) (x133 x135 3))))
(assert (not (= (x133 x289 x280) 2)))
(assert (x4 x33))
(assert (=> (<= x1 10000) (not (= (x133 x135 4) x1))))
(assert (x4 x143))
(assert (not (= 1763987465 (x133 x213 5))))
(assert (x153 x73 x70))
(assert (=> (>= 10000 x1) (not (= (x133 x170 1) x1))))
(assert (x269 x208))
(assert (x231 x200))
(assert (not (= (x133 x265 x20) 1461501637330902918203684832716283019655932542975)))
(assert (=> (<= x265 10000) (not (= x265 (+ x263 3)))))
(assert (not (= (+ 1 x111) 1710941022)))
(assert (=> (= (x133 x170 1) (x133 x81 1)) (= x81 x170)))
(assert (not (= (x133 x213 5) 1)))
(assert (not (= (+ 1 x111) 4)))
(assert (x4 x101))
(assert (not (= (+ 1 x111) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (not (= 5 (x133 x135 3))))
(assert (not (= (+ x184 1) 761373525)))
(assert (=> (<= x1 10000) (not (= x1 (+ x184 1)))))
(assert (=> (= (x133 x265 x20) (x133 x135 2)) (and (= x20 2) (= x135 x265))))
(assert (not (= 4 (x133 x213 5))))
(assert (x4 x112))
(assert (x4 x113))
(assert (not (= 2 (x133 x135 3))))
(assert (=> (>= 10000 x170) (not (= (x133 x289 x280) x170))))
(assert (not (= (x133 x81 1) (x133 x213 5))))
(assert (x4 x174))
(assert (=> (= (x133 x220 1) (x133 x289 x280)) (and (= x220 x289) (= 1 x280))))
(assert (=> (>= 10000 x213) (not (= x213 (x133 x135 3)))))
(assert (not (= (+ 4 x190) (x133 x220 1))))
(assert (=> (>= 10000 x265) (not (= (x133 x214 x53) x265))))
(assert (=> (>= 10000 x135) (not (= (+ 1 x184) x135))))
(assert (x4 x268))
(assert (x4 x17))
(assert (x4 x123))
(assert (x269 x175))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x133 x213 5))))
(assert (x231 x205))
(assert (not (= (x133 x265 x20) (+ x184 1))))
(assert (=> (>= 10000 x81) (not (= x81 (x133 x265 x20)))))
(assert (=> (<= x289 10000) (not (= (+ x184 1) x289))))
(assert (x4 x10))
(assert (not (= 231365057 (+ x190 4))))
(assert (=> (>= 10000 x135) (not (= x135 (x133 x289 x175)))))
(assert (=> (<= x1 10000) (not (= (x133 x213 5) x1))))
(assert (not (= (+ x184 1) 1814410054)))
(assert (x149 x151))
(assert (not (= 761373525 (x133 x265 x20))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x133 x135 3))))
(assert (x4 x118))
(assert (x12 x43 x110))
(assert (x4 x240))
(assert (not (= 1710941022 (x133 x213 5))))
(assert (x4 x151))
(assert (x4 x189))
(assert (not (= 2 (x133 x170 1))))
(assert (not (= (x133 x220 1) 3)))
(assert (not (= 699302164 (x133 x135 3))))
(assert (x4 x9))
(assert (not (= (+ x190 4) 2094874590)))
(assert (x231 x150))
(assert (not (= (x133 x135 2) 1)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (x133 x135 4))))
(assert (x4 x23))
(assert (=> (>= 10000 x220) (not (= (x133 x289 x175) x220))))
(assert (=> (= (x133 x81 1) (x133 x220 1)) (= x81 x220)))
(assert (=> (>= 10000 x1) (not (= (x133 x214 x53) x1))))
(assert (x231 x88))
(assert (=> (>= 10000 x289) (not (= (x133 x214 x53) x289))))
(assert (not (= (+ x190 4) (x133 x170 1))))
(assert (not (= 1980270339 (+ 1 x111))))
(assert (x149 x265))
(assert (not (= (x133 x135 2) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= (x133 x220 1) 5)))
(assert (not (= (x133 x135 2) 1814410054)))
(assert (not (= 3 (x133 x135 2))))
(assert (not (= (+ 4 x190) (x133 x289 x175))))
(assert (not (= 1980270339 (+ x263 3))))
(assert (x4 x96))
(assert (not (= 1814410054 (x133 x289 x175))))
(assert (not (= (+ 3 x263) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (not (= (x133 x289 x175) 5)))
(assert (not (= 1980270339 (x133 x213 5))))
(assert (=> (>= 10000 x214) (not (= (x133 x265 x20) x214))))
(assert (x4 x277))
(assert (=> (>= 10000 x265) (not (= (x133 x81 1) x265))))
(assert (=> (<= x135 10000) (not (= x135 (x133 x135 4)))))
(assert (not (= (x133 x135 3) 1763987465)))
(assert (=> (>= 10000 x289) (not (= x289 (x133 x213 5)))))
(assert (x4 x6))
(assert (not (= (x133 x135 4) 231365057)))
(assert (x4 x107))
(assert (=> (>= 10000 x170) (not (= x170 (x133 x214 x53)))))
(assert (not (= (x133 x265 x20) 1980270339)))
(assert (not (= (+ x184 1) (x133 x135 2))))
(assert (not (= (+ x184 1) (x133 x135 3))))
(assert (not (= (x133 x289 x7) 3)))
(assert (not (= (x133 x81 1) (x133 x135 3))))
(assert (x231 x118))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x133 x265 x20))))
(assert (not (= 5 (x133 x214 x53))))
(assert (x269 x190))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ x263 3))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (+ 4 x190))))
(assert (=> (<= x213 10000) (not (= (x133 x220 1) x213))))
(assert (not (= (+ 1 x111) (x133 x170 1))))
(assert (x4 x87))
(assert (not (= 761373525 (+ x190 4))))
(assert (not (= 1814410054 (x133 x289 x280))))
(assert (x4 x78))
(assert (not (= 1980270339 (x133 x289 x280))))
(assert (not (= (+ x111 1) 231365057)))
(assert (not (= 1710941022 (x133 x289 x280))))
(assert (not (= (x133 x214 x53) 2)))
(assert (not (= (x133 x220 1) (x133 x213 5))))
(assert (x4 x63))
(assert (=> (<= x170 10000) (not (= x170 (+ x208 2)))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x133 x214 x53))))
(assert (=> (= (x133 x289 x7) (x133 x81 1)) (and (= x81 x289) (= 1 x7))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x133 x81 1))))
(assert (x4 x76))
(assert (x4 x21))
(assert (x231 x32))
(assert (x4 x129))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (+ 4 x190))))
(assert (x4 x116))
(assert (not (= (x133 x81 1) 699302164)))
(assert (=> (<= x289 10000) (not (= (x133 x220 1) x289))))
(assert (not (= (x133 x135 4) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (not (= (x133 x135 4) 2)))
(assert (not (= (+ x190 4) (+ 1 x111))))
(assert (not (= (x133 x214 x53) 1)))
(assert (not (= (x133 x289 x7) 1)))
(assert (=> (= (x133 x214 x53) (x133 x135 2)) (and (= x135 x214) (= 2 x53))))
(assert (x4 x67))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (+ x208 2))))
(assert (=> (= (x133 x170 1) (x133 x289 x280)) (and (= x170 x289) (= x280 1))))
(assert (x4 x142))
(assert (=> (>= 10000 x289) (not (= (x133 x135 2) x289))))
(assert (x269 x289))
(assert (x4 x170))
(assert (x4 x212))
(assert (not (= (x133 x289 x280) 1161348331)))
(assert (x153 x90 x129))
(assert (x60 x123))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x133 x213 5))))
(assert (=> (= (x133 x135 4) (x133 x214 x53)) (and (= x53 4) (= x135 x214))))
(assert (not (= 231365057 (x133 x214 x53))))
(assert (not (= (x133 x135 2) (x133 x135 3))))
(assert (x4 x249))
(assert (not (= (x133 x220 1) 231365057)))
(assert (not (= 2094874590 (x133 x289 x280))))
(assert (x153 x205 x202))
(assert (not (= 2094874590 (+ 2 x208))))
(assert (not (= (x133 x220 1) 2094874590)))
(assert (not (= (x133 x265 x20) (+ x190 4))))
(assert (x269 x170))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x133 x289 x280))))
(assert (not (= 761373525 (x133 x135 4))))
(assert (x4 x177))
(assert (not (= (x133 x213 5) 699302164)))
(assert (=> (<= x213 10000) (not (= x213 (x133 x214 x53)))))
(assert (not (= 1763987465 (x133 x220 1))))
(assert (x4 x150))
(assert (x231 x10))
(assert (not (= 761373525 (x133 x289 x175))))
(assert (not (= (x133 x289 x175) 1980270339)))
(assert (=> (= (x133 x265 x20) (x133 x289 x175)) (and (= x175 x20) (= x289 x265))))
(assert (x12 x165 x45))
(assert (x4 x99))
(assert (x60 x164))
(assert (x4 x181))
(assert (not (= 2094874590 (x133 x265 x20))))
(assert (not (= (+ x111 1) (x133 x289 x7))))
(assert (not (= (+ 3 x263) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (=> (>= 10000 x214) (not (= x214 (+ 1 x111)))))
(assert (=> (>= 10000 x81) (not (= x81 (x133 x220 1)))))
(assert (not (= (x133 x265 x20) 1161348331)))
(assert (not (= (x133 x81 1) 231365057)))
(assert (=> (>= 10000 x213) (not (= x213 (x133 x135 4)))))
(assert (not (= (+ x184 1) 231365057)))
(assert (not (= (x133 x135 3) 761373525)))
(assert (=> (>= 10000 x213) (not (= (x133 x289 x280) x213))))
(assert (not (= (+ x190 4) 4)))
(assert (not (= (x133 x289 x175) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (= (x133 x265 x20) (x133 x170 1)) (and (= x20 1) (= x170 x265))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x133 x289 x7))))
(assert (x60 x165))
(assert (x4 x88))
(assert (=> (<= x214 10000) (not (= x214 (x133 x135 2)))))
(assert (x269 x213))
(assert (not (= (+ x111 1) 761373525)))
(assert (not (= (x133 x135 2) (x133 x81 1))))
(assert (x4 x103))
(assert (x4 x227))
(assert (x153 x125 x109))
(assert (not (= (x133 x170 1) 761373525)))
(assert (=> (<= x170 10000) (not (= x170 (x133 x220 1)))))
(assert (x4 x198))
(assert (not (= (x133 x265 x20) (+ x208 2))))
(assert (x4 x219))
(assert (not (= (x133 x135 2) 1980270339)))
(assert (=> (>= 10000 x1) (not (= (+ x190 4) x1))))
(assert (not (= 1980270339 (+ 4 x190))))
(assert (not (= (+ 2 x208) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= 1161348331 (x133 x135 3))))
(assert (not (= 3 (+ x184 1))))
(assert (=> (= (x133 x220 1) (x133 x214 x53)) (and (= 1 x53) (= x220 x214))))
(assert (not (= 2094874590 (x133 x213 5))))
(assert (x4 x131))
(assert (x4 x26))
(assert (not (= 2094874590 (x133 x170 1))))
(assert (=> (>= 10000 x220) (not (= (x133 x81 1) x220))))
(assert (=> (>= 10000 x220) (not (= x220 (+ x111 1)))))
(assert (x269 x53))
(assert (not (= (x133 x135 3) 1980270339)))
(assert (x231 x19))
(assert (=> (<= x214 10000) (not (= x214 (x133 x289 x280)))))
(assert (x269 x7))
(assert (x4 x136))
(assert (=> (>= 10000 x214) (not (= (x133 x289 x7) x214))))
(assert (=> (<= x213 10000) (not (= (x133 x289 x175) x213))))
(assert (=> (= (x133 x289 x280) (x133 x289 x7)) (= x7 x280)))
(assert (=> (<= x213 10000) (not (= (x133 x213 5) x213))))
(assert (x4 x254))
(assert (not (= (x133 x81 1) 761373525)))
(assert (not (= 1 (x133 x289 x280))))
(assert (= true x242))
(assert (=> (>= 10000 x214) (not (= (+ 3 x263) x214))))
(assert (not (= (x133 x289 x7) 231365057)))
(assert (not (= (+ x208 2) (x133 x289 x7))))
(assert (not (= 1161348331 (+ x208 2))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x133 x170 1))))
(assert (not (= (+ x111 1) (x133 x81 1))))
(assert (not (= (x133 x214 x53) 1461501637330902918203684832716283019655932542975)))
(assert (x4 x258))
(assert (not (= 4 (x133 x289 x280))))
(assert (not (= (+ 3 x263) (+ 4 x190))))
(assert (not (= (+ 3 x263) (x133 x214 x53))))
(assert (not (= 1980270339 (+ 1 x184))))
(assert (x4 x272))
(assert (not (= (x133 x170 1) (x133 x135 3))))
(assert (not (= 2094874590 (x133 x214 x53))))
(assert (not (= (+ 2 x208) (+ 3 x263))))
(assert (not (= (x133 x135 4) (x133 x135 3))))
(assert (x4 x274))
(assert (=> (= (x133 x170 1) (x133 x289 x175)) (and (= x175 1) (= x170 x289))))
(assert (not (= (x133 x265 x20) 3)))
(assert (x231 x181))
(assert (=> (>= 10000 x265) (not (= (x133 x265 x20) x265))))
(assert (not (= (+ x184 1) (+ x208 2))))
(assert (x231 x90))
(assert (x4 x183))
(assert (x231 x129))
(assert (=> (<= x170 10000) (not (= (+ 1 x111) x170))))
(assert (not (= (x133 x289 x7) (+ 1 x184))))
(assert (not (= (x133 x220 1) 1814410054)))
(assert (not (= (+ 4 x190) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (not (= (x133 x289 x7) 2094874590)))
(assert (=> (>= 10000 x220) (not (= x220 (+ 2 x208)))))
(assert (not (= 1 (x133 x220 1))))
(assert (=> (>= 10000 x81) (not (= (+ x184 1) x81))))
(assert (not (= (x133 x81 1) 1161348331)))
(assert (not (= (+ 2 x208) (x133 x214 x53))))
(assert (=> (>= 10000 x265) (not (= (+ 1 x111) x265))))
(assert (not (= (x133 x81 1) (+ x208 2))))
(assert (not (= 231365057 (x133 x289 x280))))
(assert (not (= 699302164 (+ 1 x111))))
(assert (x4 x109))
(assert (x4 x213))
(assert (not (= 2 (+ x111 1))))
(assert (not (= (+ 3 x263) (x133 x265 x20))))
(assert (not (= (+ x111 1) 2094874590)))
(assert (not (= (+ 1 x184) 2)))
(assert (not (= (+ 1 x111) (+ 3 x263))))
(assert (x4 x94))
(assert (not (= (x133 x135 2) 761373525)))
(assert (not (= (+ 3 x263) (x133 x135 3))))
(assert (=> (= (x133 x135 4) (x133 x289 x175)) (and (= x289 x135) (= x175 4))))
(assert (=> (>= 10000 x213) (not (= x213 (+ 2 x208)))))
(assert (not (= (x133 x135 4) 1763987465)))
(assert (not (= (+ x190 4) (x133 x289 x7))))
(assert (not (= (x133 x220 1) 4)))
(assert (x4 x245))
(assert (x12 x94 x123))
(assert (not (= 1814410054 (x133 x214 x53))))
(assert (x4 x34))
(assert (=> (= (+ x111 1) (+ x184 1)) (and (= x135 x265) (= x20 2))))
(assert (=> (<= x265 10000) (not (= (+ 4 x190) x265))))
(assert (x4 x167))
(assert (x60 x152))
(assert (=> (= (x133 x170 1) (x133 x220 1)) (= x220 x170)))
(assert (not (= (+ 2 x208) (x133 x289 x175))))
(assert (x4 x3))
(assert (not (= 4 (x133 x214 x53))))
(assert (x231 x146))
(assert (not (= 1 (+ x208 2))))
(assert (x231 x109))
(assert (not (= 2094874590 (x133 x135 3))))
(assert (not (= 5 (+ x208 2))))
(assert (=> (<= x289 10000) (not (= x289 (+ 1 x111)))))
(assert (x4 x95))
(assert (=> (= (x133 x289 x7) (x133 x135 3)) (and (= 3 x7) (= x135 x289))))
(assert (not (= (x133 x81 1) (x133 x135 4))))
(assert (x231 x173))
(assert (x4 x41))
(assert (x4 x197))
(assert (=> (<= x81 10000) (not (= x81 (+ 3 x263)))))
(assert (=> (>= 10000 x220) (not (= x220 (x133 x214 x53)))))
(assert (x4 x72))
(assert (=> (= (x133 x135 4) (x133 x265 x20)) (and (= x265 x135) (= 4 x20))))
(assert (x4 x56))
(assert (=> (>= 10000 x1) (not (= (x133 x135 2) x1))))
(assert (x4 x130))
(assert (=> (<= x220 10000) (not (= (x133 x135 2) x220))))
(assert (=> (<= x170 10000) (not (= (x133 x265 x20) x170))))
(assert (not (= 4 (+ x208 2))))
(assert (x4 x125))
(assert (=> (>= 10000 x289) (not (= (x133 x289 x280) x289))))
(assert (=> (<= x220 10000) (not (= x220 (+ x263 3)))))
(assert (=> (<= x170 10000) (not (= x170 (x133 x289 x7)))))
(assert (not (= 1161348331 (+ x184 1))))
(assert (=> (>= 10000 x213) (not (= (x133 x170 1) x213))))
(assert (not (= (x133 x265 x20) 699302164)))
(assert (x4 x122))
(assert (not (= (+ x208 2) 3)))
(assert (not (= 699302164 (x133 x170 1))))
(assert (=> (>= 10000 x81) (not (= x81 (x133 x214 x53)))))
(assert (not (= (x133 x81 1) 1)))
(assert (not (= (+ 4 x190) 3)))
(assert (=> (= (x133 x81 1) (x133 x289 x175)) (and (= 1 x175) (= x81 x289))))
(assert (not (= (+ x111 1) (x133 x220 1))))
(assert (=> (>= 10000 x214) (not (= x214 (+ 4 x190)))))
(assert (=> (<= x1 10000) (not (= x1 (x133 x265 x20)))))
(assert (x4 x252))
(assert (x269 x214))
(assert (not (= (+ x111 1) 1)))
(assert (=> (<= x135 10000) (not (= x135 (x133 x135 2)))))
(assert (=> (>= 10000 x135) (not (= x135 (+ 1 x111)))))
(assert (=> (<= x220 10000) (not (= x220 (x133 x220 1)))))
(assert (not (= (x133 x135 4) 5)))
(assert (not (= (x133 x81 1) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (+ 1 x184) 1)))
(assert (=> (= (x133 x213 5) (x133 x289 x280)) (and (= x280 5) (= x213 x289))))
(assert (=> (>= 10000 x1) (not (= (+ x208 2) x1))))
(assert (not (= (+ 1 x184) (x133 x220 1))))
(assert (=> (<= x289 10000) (not (= (x133 x289 x7) x289))))
(assert (=> (= (x133 x289 x280) (x133 x214 x53)) (and (= x53 x280) (= x289 x214))))
(assert (not (= (+ 4 x190) (x133 x81 1))))
(assert (=> (>= 10000 x214) (not (= x214 (x133 x213 5)))))
(assert (x231 x70))
(assert (x269 x280))
(assert (x4 x110))
(assert (x153 x88 x5))
(assert (not (= 1763987465 (x133 x265 x20))))
(assert (not (= 761373525 (+ 2 x208))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x133 x135 4))))
(assert (not (= 761373525 (x133 x289 x280))))
(assert (not (= (x133 x135 3) 231365057)))
(assert (=> (<= x1 10000) (not (= x1 (x133 x289 x175)))))
(assert (not (= (x133 x220 1) (x133 x135 2))))
(assert (not (= (+ 4 x190) (x133 x289 x280))))
(assert (=> (= (x133 x213 5) (x133 x289 x175)) (and (= x175 5) (= x289 x213))))
(assert (x269 x263))
(assert (x4 x148))
(assert (x4 x39))
(assert (not (= 699302164 (+ 2 x208))))
(assert (=> (>= 10000 x220) (not (= (x133 x265 x20) x220))))
(assert (=> (<= x289 10000) (not (= x289 (x133 x135 3)))))
(assert (x153 x172 x142))
(assert (not (= (+ 2 x208) 1980270339)))
(assert (not (= (x133 x220 1) 699302164)))
(assert (=> (= (x133 x213 5) (x133 x289 x7)) (and (= x7 5) (= x289 x213))))
(assert (x153 x146 x150))
(assert (not (= (x133 x213 5) 761373525)))
(assert (=> (>= 10000 x220) (not (= (x133 x170 1) x220))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ 1 x184))))
(assert (x231 x5))
(assert (not (= 1814410054 (x133 x289 x7))))
(assert (=> (>= 10000 x1) (not (= x1 (x133 x135 3)))))
(assert (not (= (x133 x289 x280) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x133 x135 2) (+ x190 4))))
(assert (=> (= (x133 x214 x53) (x133 x170 1)) (and (= x170 x214) (= 1 x53))))
(assert (=> (>= 10000 x170) (not (= x170 (+ 1 x184)))))
(assert (x4 x289))
(assert (x4 x237))
(assert (=> (= (x133 x213 5) (x133 x214 x53)) (and (= x213 x214) (= x53 5))))
(assert (=> (<= x81 10000) (not (= x81 (+ x111 1)))))
(assert (x4 x52))
(assert (=> (= (x133 x289 x280) (x133 x81 1)) (and (= 1 x280) (= x81 x289))))
(assert (=> (<= x265 10000) (not (= x265 (x133 x135 4)))))
(assert (not (= (+ x263 3) 1461501637330902918203684832716283019655932542975)))
(assert (not (= (x133 x289 x7) 1980270339)))
(assert (x4 x291))
(assert (not (= (+ 4 x190) 699302164)))
(assert (not (= 3 (x133 x135 3))))
(assert (=> (= (x133 x289 x280) (x133 x135 3)) (and (= x289 x135) (= 3 x280))))
(assert (x269 x111))
(assert (x4 x45))
(assert (x4 x119))
(assert (x4 x202))
(assert (not (= 1710941022 (+ x184 1))))
(assert (=> (= (x133 x289 x7) (x133 x220 1)) (and (= x7 1) (= x289 x220))))
(assert (=> (<= x213 10000) (not (= x213 (x133 x265 x20)))))
(assert (not (= 1 (+ x190 4))))
(assert (not (= 1814410054 (x133 x170 1))))
(assert (=> (>= 10000 x265) (not (= (x133 x213 5) x265))))
(assert (=> (<= x220 10000) (not (= (x133 x135 4) x220))))
(assert (not (= (x133 x135 2) (+ x111 1))))
(assert (x4 x1))
(assert (not (= 2 (+ x263 3))))
(assert (x269 x81))
(assert (not (= (x133 x135 4) (x133 x220 1))))
(assert (x4 x49))
(assert (not (= (x133 x220 1) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (not (= (+ 3 x263) (x133 x289 x175))))
(assert (not (= (+ x184 1) 699302164)))
(assert (x153 x97 x19))
(assert (not (= (+ x263 3) (x133 x213 5))))
(assert (not (= 699302164 (x133 x289 x175))))
(assert (not (= 1 (+ x263 3))))
(assert (x4 x43))
(assert (x4 x65))
(assert (=> (>= 10000 x213) (not (= (+ x111 1) x213))))
(assert (=> (<= x220 10000) (not (= (+ x184 1) x220))))
(assert (not (= 1980270339 (x133 x170 1))))
(assert (not (= (+ x184 1) (+ 4 x190))))
(assert (x4 x247))
(assert (=> (>= 10000 x81) (not (= (x133 x289 x280) x81))))
(assert (=> (<= x170 10000) (not (= x170 (x133 x135 2)))))
(assert (not (= 5 (x133 x213 5))))
(assert (not (= 2094874590 (x133 x289 x175))))
(assert (x4 x159))
(assert (x149 x173))
(assert (not (= (x133 x135 2) (+ 2 x208))))
(assert (=> (>= 10000 x1) (not (= x1 (x133 x289 x280)))))
(assert (=> (= (x133 x289 x7) (x133 x135 2)) (and (= x135 x289) (= x7 2))))
(assert (x4 x100))
(assert (x4 x201))
(assert (not (= (+ 4 x190) 1710941022)))
(assert (x4 x5))
(assert (x4 x57))
(assert (not (= (x133 x213 5) 2)))
(assert (=> (= (x133 x135 2) (x133 x289 x280)) (and (= x289 x135) (= x280 2))))
(assert (not (= (x133 x289 x175) 1461501637330902918203684832716283019655932542975)))
(assert (x4 x84))
(assert (=> (<= x214 10000) (not (= (+ x184 1) x214))))
(assert (not (= 1814410054 (+ x208 2))))
(assert (not (= (x133 x213 5) (+ x208 2))))
(assert (not (= 1763987465 (x133 x289 x175))))
(assert (x4 x31))
(assert (not (= (x133 x135 2) 2094874590)))
(assert (not (= (x133 x213 5) (+ 1 x111))))
(assert (not (= (+ 3 x263) (x133 x81 1))))
(assert (not (= 1 (x133 x135 4))))
(assert (x4 x166))
(assert (not (= 1980270339 (x133 x214 x53))))
(assert (=> (<= x265 10000) (not (= (x133 x135 3) x265))))
(assert (not (= 5 (x133 x170 1))))
(assert (not (= 4 (+ 3 x263))))
(assert (not (= (+ 1 x111) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (<= x220 10000) (not (= x220 (x133 x289 x280)))))
(assert (x4 x262))
(assert (x4 x222))
(assert (not (= (x133 x81 1) 2094874590)))
(assert (x4 x51))
(assert (not (= (x133 x214 x53) 3)))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (+ 1 x184))))
(assert (=> (>= 10000 x289) (not (= x289 (x133 x81 1)))))
(assert (=> (<= x135 10000) (not (= x135 (x133 x213 5)))))
(assert (not (= 1 (x133 x265 x20))))
(assert (not (= (+ 3 x263) (x133 x289 x280))))
(assert (=> (<= x81 10000) (not (= x81 (x133 x170 1)))))
(assert (x4 x135))
(assert (not (= 231365057 (x133 x289 x175))))
(assert (=> (<= x170 10000) (not (= x170 (+ 4 x190)))))
(assert (x4 x127))
(assert (not (= (x133 x214 x53) 761373525)))
(assert (=> (>= 10000 x170) (not (= (x133 x135 3) x170))))
(assert (x4 x132))
(assert (x153 x32 x10))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x133 x81 1))))
(assert (=> (>= 10000 x1) (not (= x1 (x133 x289 x7)))))
(assert (not (= (x133 x135 4) 4)))
(assert (not (= (+ 1 x111) (x133 x135 4))))
(assert (not (= (x133 x135 2) 1161348331)))
(assert (x4 x55))
(assert (x4 x29))
(assert (not (= 1710941022 (x133 x289 x7))))
(assert (not (= 1980270339 (x133 x220 1))))
(assert (x4 x180))
(assert (x4 x75))
(assert (not (= 761373525 (x133 x220 1))))
(assert (not (= (x133 x81 1) 1763987465)))
(assert (=> (= (x133 x214 x53) (x133 x265 x20)) (and (= x20 x53) (= x265 x214))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x184 1))))
(assert (not (= (+ x111 1) (+ 2 x208))))
(assert (not (= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x133 x220 1))))
(assert (not (= (x133 x81 1) 2)))
(assert (x4 x224))
(assert (=> (>= 10000 x265) (not (= (x133 x170 1) x265))))
(assert (not (= (+ x263 3) 699302164)))
(assert (not (= (x133 x214 x53) (+ x184 1))))
(assert (x4 x233))
(assert (not (= (x133 x135 4) (x133 x170 1))))
(assert (=> (>= 10000 x1) (not (= (x133 x81 1) x1))))
(assert (=> (<= x265 10000) (not (= x265 (+ x208 2)))))
(assert (not (= 4 (+ x184 1))))
(assert (not (= (x133 x135 4) 3)))
(assert (=> (<= x135 10000) (not (= (x133 x289 x7) x135))))
(assert (not (= 5 (+ 4 x190))))
(assert (not (= 5 (+ x263 3))))
(assert (not (= (x133 x170 1) 1)))
(assert (x4 x259))
(assert (=> (= (x133 x289 x7) (x133 x265 x20)) (and (= x289 x265) (= x7 x20))))
(assert (=> (<= x135 10000) (not (= x135 (+ 2 x208)))))
(assert (=> (>= 10000 x213) (not (= x213 (x133 x135 2)))))
(assert (x4 x85))
(assert (x4 x22))
(assert (x4 x42))
(assert (not (= (x133 x135 4) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (>= 10000 x135) (not (= x135 (x133 x135 3)))))
(assert (not (= (x133 x135 2) 5)))
(assert (not (= 1763987465 (+ 1 x111))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x133 x135 3))))
(assert (not (= (x133 x289 x175) 4)))
(assert (=> (<= x170 10000) (not (= x170 (x133 x289 x175)))))
(assert (x4 x270))
(assert (x4 x230))
(assert (not (= (+ x263 3) 1161348331)))
(assert (not (= (+ x263 3) 231365057)))
(assert (not (= (x133 x265 x20) 1814410054)))
(assert (x4 x8))
(assert (=> (= (x133 x135 2) (x133 x289 x175)) (and (= x135 x289) (= 2 x175))))
(assert (not (= (x133 x170 1) 1461501637330902918203684832716283019655932542975)))
(assert (x4 x200))
(assert (x12 x164 x152))
(assert (=> (<= x265 10000) (not (= x265 (+ 1 x184)))))
(assert (not (= (x133 x289 x280) 3)))
(assert (=> (= (x133 x214 x53) (x133 x289 x175)) (and (= x289 x214) (= x53 x175))))
(assert (not (= (+ x263 3) (x133 x135 2))))
(assert (x4 x97))
(assert (not (= (x133 x265 x20) 231365057)))
(assert (not (= (x133 x265 x20) 4)))
(assert (not (= (+ 3 x263) 3)))
(assert (not (= 3 (x133 x81 1))))
(assert (x4 x2))
(assert (not (= (x133 x135 4) 2094874590)))
(assert (=> (= (x133 x289 x175) (x133 x220 1)) (and (= x220 x289) (= 1 x175))))
(assert (not (= 3 (x133 x213 5))))
(assert (x4 x265))
(assert (x231 x151))
(assert (x153 x245 x181))
(assert (= x79 (=> (and (and (and (> 1161348331 x212) (= x212 761373525) (<= x199 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x236) (= x236 (x260 x1)) (> 2094874590 x212) (not (< x212 699302164)) (= x266 x61) (= x26 x199) (not (= x212 699302164)) (>= x199 0)) (and (and (and (= x290 (= x14 x282)) (= x258 x128) (= x282 (+ x258 x115)) (= x119 x115)) (and (< 0 x141) (= 761373525 x201) (not (= x201 699302164)) (<= 0 x199) (> 2094874590 x201) (< x201 1161348331) (= (x260 x1) x141) (not (> 699302164 x201)) (= x14 x84) (= x119 x199) (<= x199 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (= x186 x268) (= x232 (x69 x187)) (= x23 (x44 1461501637330902918203684832716283019655932542975 x151)) (= (x273 x28) x131) (= (x44 x172 x142) x243) (= (and (< 0 x103) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x103) true)) x104) x66 (= (not x77) x108) (= x180 (x121 (- x244 x98))) (= (not x161) x106) (= x223 (= x122 x289)) (= (x133 x289 x280) x24) (= x278 (and (< 0 x103) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x103) true))) (= x96 (x260 x1)) (= x159 (x27 (+ x288 x95))) (= (x246 x72) x42) (= (x256 x94 x123) x237) (= x74 (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x95)) (> x95 0))) (= (and (< 0 x103) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x103))) x157) (>= x288 0) (= (x256 x243 x33) x18) (= x203 (- x235 x292)) (= x286 (not x293)) (= (x260 x1) x262) (= (ite (not x86) 1 0) x43) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x219) (= (x44 1461501637330902918203684832716283019655932542975 x265) x267) (= (ite (or (> x49 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x49 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x49 0))) 1 0) x125) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x49) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x49) true) (> 0 x49)))) (= (and (> x103 0) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x103))) x137) (ite x106 x106 (not (> x63 x47))) (= x213 (x44 1461501637330902918203684832716283019655932542975 x173)) (= (x256 x164 x152) x277) (= (+ x284 x233) x235) (= x122 (x44 1461501637330902918203684832716283019655932542975 x173)) (= x224 x196) (= x85 x151) (= (x133 x81 1) x280) (>= 1461501637330902918203684832716283019655932542975 x265) (= x95 (mod (* x49 x261) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x135 x16) (= x123 (ite (or x58 x275) 1 0)) (= x53 (x133 x135 4)) (= (= x2 x101) x124) (<= 0 x116) (= x49 (x93 x163)) (= x294 (or (and (= (<= x57 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x57)) (> x57 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x288) (= x214 (x44 1461501637330902918203684832716283019655932542975 x151)) (= (ite (not x13) 1 0) x142) (> x18 0) (= (not x68) x145) (= x177 x265) (= (x133 x135 3) x20) (= x240 x135) (= x154 (x27 (+ x288 x95))) (= (* x47 x249) x217) (= (= x203 x39) x66) (= (+ x111 1) x28) (<= 0 x244) (= x35 0) (= (ite (= x103 0) 0 (ite (= false (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x103)) (div 57896044618658097711785492504343953926634992332820282019728792003956564819968 (ite (< x103 57896044618658097711785492504343953926634992332820282019728792003956564819968) x103 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x121 (- x103 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (mod (- (div 57896044618658097711785492504343953926634992332820282019728792003956564819968 (ite (< x103 57896044618658097711785492504343953926634992332820282019728792003956564819968) x103 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x121 (- x103 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x252) (= (x44 x88 x5) x73) (= x5 (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x103) (and (< x103 0) (= true (<= x103 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) 1 0)) (= x55 x261) (= x217 x188) (>= x132 0) (= x135 x112) (<= 0 x67) (= (ite (< x195 x49) 1 0) x150) (= (ite (or x138 x223) 1 0) x110) (= (div 57896044618658097711785492504343953926634992332820282019728792003956564819967 x261) x195) (= x257 (+ x208 2)) (>= x63 0) (= (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x57) true) (< 0 x57)) x38) (= x41 x285) (= (x133 x289 x7) x226) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x49 x29)) (= (* x59 x17) x284) (= x271 (ite x276 1 0)) (>= x167 0) (= x172 (ite (not x137) 1 0)) (= 0 x194) (= (< x87 x41) x225) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x98) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x98) true) (< x98 0))) x182) (= x285 (* x49 x189)) (= (x83 x191) x116) (= 0 x52) (= x156 231365057) (= x228 (+ 3 x263)) (= (< x167 x154) x264) (ite x179 x179 (not (> x244 x180))) (= (ite (not x294) 1 0) x19) (= x101 x116) (not (= 1814410054 x134)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6) (>= 1461501637330902918203684832716283019655932542975 x173) (= x80 (+ x224 x259)) (>= x54 0) (= 0 x31) (= x196 x233) (= x198 x265) (= x291 x166) (= x57 x98) (= x59 (x246 x34)) (= (x44 x90 x129) x75) (<= 0 x197) (= x179 (not x176)) (= (x133 x220 1) x175) (= x9 x222) (not (< x134 1710941022)) (= x270 (ite x138 1 0)) (= (x44 x32 x10) x45) (= (x44 1461501637330902918203684832716283019655932542975 x173) x81) (= x186 (* x49 x29)) (= x187 (x133 x213 5)) (= x254 x135) (= (ite (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x113) (> x103 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x113 x103) (= (<= x113 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x103)))) 1 0) x70) (= (or (and (> 0 x103) (= true (<= x103 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x103 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x86) (= (x171 x112) x2) (= (x44 x245 x181) x146) (= x135 x34) (= x151 x272) (>= x6 0) (= x50 (ite x275 1 0)) (ite x286 x286 (not (> x154 x288))) (= x293 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x95) (and (= true (<= x95 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 0 x95)))) (= x163 (+ x184 1)) (= (ite (not x92) 1 0) x165) (= (ite (or x105 x276) 1 0) x152) (not (= 1763987465 x134)) (= (x133 x135 2) x190) (< 0 x277) (= (x162 x228) x87) (= (not x37) x89) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x49) (= x261 x103) (< (* x249 x47) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< 0 x148) (= x173 x160) (= x94 (ite (not x62) 1 0)) x147 (= (x91 x207) x197) (= x194 (x44 x73 x70)) (= x105 (= x289 x267)) (= x161 (and (> x57 0) (= (<= x57 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) (= (x256 x43 x110) x283) (= (or (> x103 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 0 x103) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x103)))) x77) (= (x133 x135 2) x191) (<= x54 1461501637330902918203684832716283019655932542975) x255 (= (= x219 1) x276) (= (= x266 x80) x147) (= (x44 1461501637330902918203684832716283019655932542975 x151) x220) x124 (= (x133 x135 2) x184) (= x35 x127) (= (= x67 1) x138) (< 0 x211) (= (* x291 x42) x292) (= 1980270339 x134) (= x32 (ite (not x225) 1 0)) (= x216 (x133 x214 x53)) (>= x159 0) (< x134 2094874590) (= x102 (not x157)) (= x275 (= x197 1)) (= (x144 x257) x249) (= (x27 (+ x63 x78)) x47) (= x72 x135) (= (x133 x289 x175) x207) (= x289 x132) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x87) (>= x9 0) (= (x44 x97 x19) x164) (= (not x126) x287) (= (x44 x146 x150) x52) (= x248 (not x38)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x67) (= x159 x84) (= x170 (x44 1461501637330902918203684832716283019655932542975 x265)) (= (x27 (+ x95 x232)) x193) (= (ite (or (and (> x252 x49) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x49) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x252))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x49) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x252))) 1 0) x129) (= x90 (x44 x125 x109)) (ite x89 x89 (not (< x232 x193))) (>= x87 0) (= (x256 x165 x45) x211) (ite x145 x145 (not (< x131 x29))) (= x139 (not x278)) (> x96 0) (<= 0 x219) (<= 0 x249) (= x148 (ite (or x25 x11) 1 0)) (= x120 (< x188 x268)) (ite x102 x102 (not (< x189 x116))) (= x88 (ite (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x49) true) (> x49 0)) 1 0)) (= x17 x189) (= (x133 x170 1) x7) (>= 1461501637330902918203684832716283019655932542975 x151) (= (not x74) x117) (= x99 (ite x58 1 0)) (= (= x29 0) x25) (= x107 x49) (= (ite (= x49 0) 0 (ite (= (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x49) false) (div 57896044618658097711785492504343953926634992332820282019728792003956564819968 (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x49) x49 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x121 (- x49 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (mod (- (div 57896044618658097711785492504343953926634992332820282019728792003956564819968 (ite (< x49 57896044618658097711785492504343953926634992332820282019728792003956564819968) x49 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x121 (- x49 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x113) (<= x232 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (ite (and (< 0 x49) (= true (<= x49 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x245) (= x128 x39) (< x156 1161348331) (= x255 (= x251 x107)) (>= 1461501637330902918203684832716283019655932542975 x132) (= x166 (x83 x192)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x189 x49)) (= x176 (or (and (> 0 x57) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x57))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x57))) (< x156 699302164) (= (ite (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x49) (<= x279 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x279 x49) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x279) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x49)))) 1 0) x202) (not (= x134 1710941022)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x197) (= (ite (and (= (<= x103 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x103 0)) 1 0) x181) (ite x139 x139 (not (< x29 x131))) (= (or (and (= (<= x57 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x57 0)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x57)) x13) (= x10 (ite (not x264) 1 0)) (< 0 x262) (<= 0 x21) (ite x117 x117 (not (> x232 x193))) (= x31 (x44 x205 x202)) (= (ite (or (and (> 0 x103) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x103) true)) (> x103 57896044618658097711785492504343953926634992332820282019728792003956564819967)) 1 0) x200) (= x6 (x239 x218)) (= (x133 x135 2) x208) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x21) (not (> 4 x230)) (= (ite (and (< 0 x103) (= true (<= x103 57896044618658097711785492504343953926634992332820282019728792003956564819967))) 1 0) x109) (= x29 (x27 (+ x131 x261))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x167) (= x174 (ite x223 1 0)) (= (x133 x135 2) x263) (= (x44 1461501637330902918203684832716283019655932542975 x173) x136) (not (= 0 x49)) (= x65 (ite x25 1 0)) (ite x248 x248 (not (< x244 x180))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x166) (> x283 0) (<= x9 1461501637330902918203684832716283019655932542975) (= x185 (not x182)) (<= 0 x131) (= (x44 x118 x200) x205) (ite x287 x287 (not (< x154 x288))) (= (x210 x216) x244) (ite x185 x185 (not (< x63 x47))) (<= x244 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x173 x130) (= x265 x274) (= 1 x21) (= x143 x222) (< x156 2094874590) (= x192 (x133 x135 2)) (>= x232 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x63) (= x240 x183) (= 0 x75) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x40) (and (= true (<= x40 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 192 x40)))) (and (> x230 195) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x230) true)) (= (ite (not x120) 1 0) x33) (= x97 (ite (not x104) 1 0)) (not (< x134 1161348331)) (ite x108 x108 (not (> x189 x116))) (= x78 x98) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x103) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x103)) (> 0 x103))) x68) (= (+ x190 4) x218) (= x63 (x71 x111)) (= x58 (= x23 x289)) (= x251 (x246 x183)) (= (x91 x226) x219) (= x51 (x44 1461501637330902918203684832716283019655932542975 x151)) (= (ite (= x103 0) 0 (ite (= true (< x103 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (div 57896044618658097711785492504343953926634992332820282019728792003956564819967 (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x103) x103 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x121 (- x103 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (mod (- (div 57896044618658097711785492504343953926634992332820282019728792003956564819967 (ite (< x103 57896044618658097711785492504343953926634992332820282019728792003956564819968) x103 (mod (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x121 (- x103 1))) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x279) (= (and (> x95 0) (= (<= x95 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) x126) (> x237 0) (= x92 (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x103)) (< 0 x103))) (= (ite x105 1 0) x114) (= x189 (x27 (+ x116 x261))) (= x229 x189) (= (not (< x268 x6)) x11) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x131) (= x247 (ite x11 1 0)) (= (x44 1461501637330902918203684832716283019655932542975 x265) x8) (= (x91 x24) x67) (= x62 (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x57) true) (< 0 x57))) (= x259 x26) (>= x166 0) (= (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x49) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x49) true) (< x49 0))) 1 0) x118) (<= x249 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x133 x265 x20) x111) (<= 0 x49) (= x37 (or (and (= (<= x95 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 0 x95)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x95))) (= x40 (x121 (- x230 4))) (<= x159 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x116)))) (and (>= 1461501637330902918203684832716283019655932542975 x56) (= false x82) (<= x3 1461501637330902918203684832716283019655932542975) (>= x288 0) (= x61 x288) (= false x169) (<= x288 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x76 x56) (= 6 x46) (>= x3 0) x30 (>= 1461501637330902918203684832716283019655932542975 x1) (= 231365057 x22) (= false x206) (= (x64 x1) x36) (= (x260 x1) x227) (= x30 (> (x260 x1) 0)) (< 0 x1) (= x289 x3) (<= 0 x36) (= x100 1980270339) (<= 0 x56) (> x227 0) (< x22 2094874590) (> 699302164 x22) (= false x140) (< x22 1161348331))) x290)))
(assert (not (= (x133 x289 x7) 699302164)))
(assert (not (= 699302164 (x133 x289 x280))))
(assert (x60 x94))
(assert (x4 x172))
(assert (x4 x271))
(assert (not (= 1161348331 (x133 x214 x53))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ 2 x208))))
(assert (not (= (x133 x135 3) 1814410054)))
(assert (=> (>= 10000 x214) (not (= (x133 x289 x175) x214))))
(assert (x4 x81))
(assert (not (= 699302164 (x133 x135 2))))
(assert (not (= (x133 x135 4) (+ 3 x263))))
(assert (x4 x47))
(assert (not (= (x133 x289 x175) (+ x111 1))))
(assert (=> (<= x135 10000) (not (= x135 (x133 x220 1)))))
(assert (not (= (+ 1 x184) (x133 x289 x280))))
(assert (not (= (x133 x170 1) (x133 x213 5))))
(assert (=> (<= x214 10000) (not (= x214 (x133 x135 4)))))
(assert (=> (<= x220 10000) (not (= x220 (x133 x135 3)))))
(assert (x231 x265))
(assert (=> (>= 10000 x81) (not (= x81 (x133 x135 3)))))
(assert (=> (<= x289 10000) (not (= x289 (+ x190 4)))))
(assert (=> (<= x81 10000) (not (= x81 (x133 x135 2)))))
(assert (not (= (x133 x81 1) 4)))
(assert (not (= (x133 x170 1) 3)))
(assert (not (= (x133 x289 x7) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x4 x279))
(assert (not (= (x133 x170 1) 1763987465)))
(assert (x4 x36))
(assert (not (= (+ x263 3) (x133 x289 x7))))
(assert (not (= 1710941022 (x133 x135 3))))
(assert (=> (<= x1 10000) (not (= (+ 3 x263) x1))))
(assert (not (= (x133 x170 1) (+ x208 2))))
(assert (x4 x196))
(assert (=> (>= 10000 x289) (not (= x289 (x133 x170 1)))))
(assert (not (= (+ 2 x208) (x133 x135 4))))
(assert (not (= (+ 2 x208) 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x4 x232))
(assert (not (= (x133 x135 2) 57896044618658097711785492504343953926634992332820282019728792003956564819967)))
(assert (x4 x154))
(assert (not (= (x133 x135 4) (x133 x213 5))))
(assert (not (= (x133 x81 1) 5)))
(assert (not (= (x133 x135 2) (x133 x170 1))))
(assert (x4 x46))
(assert (not (= (+ 2 x208) 2)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x111 1))))
(assert (=> (<= x289 10000) (not (= x289 (x133 x135 4)))))
(assert (=> (>= 10000 x81) (not (= (x133 x81 1) x81))))
(assert (not (= (x133 x289 x7) 1763987465)))
(assert (not (= (x133 x220 1) (x133 x135 3))))
(assert (not (= (x133 x170 1) 231365057)))
(assert (not (= 1814410054 (x133 x213 5))))
(check-sat)
(exit)