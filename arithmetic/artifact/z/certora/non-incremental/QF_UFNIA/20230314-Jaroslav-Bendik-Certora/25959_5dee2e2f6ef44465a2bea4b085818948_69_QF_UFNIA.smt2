(set-info :smt-lib-version 2.6)
(set-logic QF_UFNIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x646 () Int)
(declare-fun x300 () Int)
(declare-fun x79 () Bool)
(declare-fun x15 () Int)
(declare-fun x447 () Int)
(declare-fun x165 (Int) Int)
(declare-fun x323 () Bool)
(declare-fun x389 () Int)
(declare-fun x81 () Int)
(declare-fun x619 () Int)
(declare-fun x582 () Int)
(declare-fun x691 () Int)
(declare-fun x8 () Int)
(declare-fun x172 () Bool)
(declare-fun x577 () Bool)
(declare-fun x46 (Int) Int)
(declare-fun x95 () Bool)
(declare-fun x75 () Int)
(declare-fun x293 () Int)
(declare-fun x674 () Bool)
(declare-fun x244 () Int)
(declare-fun x210 () Bool)
(declare-fun x39 () Int)
(declare-fun x201 () Bool)
(declare-fun x361 () Bool)
(declare-fun x521 () Bool)
(declare-fun x65 (Int) Int)
(declare-fun x227 () Bool)
(declare-fun x206 () Int)
(declare-fun x351 () Bool)
(declare-fun x503 () Int)
(declare-fun x698 () Bool)
(declare-fun x442 () Bool)
(declare-fun x730 () Int)
(declare-fun x589 () Int)
(declare-fun x376 () Int)
(declare-fun x184 () Int)
(declare-fun x71 () Int)
(declare-fun x69 () Int)
(declare-fun x106 () Int)
(declare-fun x425 () Int)
(declare-fun x42 () Bool)
(declare-fun x467 () Int)
(declare-fun x415 () Int)
(declare-fun x340 () Bool)
(declare-fun x572 () Bool)
(declare-fun x349 () Bool)
(declare-fun x665 () Int)
(declare-fun x54 () Int)
(declare-fun x627 () Bool)
(declare-fun x722 () Int)
(declare-fun x188 () Int)
(declare-fun x386 () Int)
(declare-fun x531 () Int)
(declare-fun x271 (Int) Int)
(declare-fun x83 () Int)
(declare-fun x319 () Bool)
(declare-fun x369 () Bool)
(declare-fun x707 () Int)
(declare-fun x68 () Int)
(declare-fun x401 () Bool)
(declare-fun x421 () Bool)
(declare-fun x481 () Int)
(declare-fun x608 (Int) Int)
(declare-fun x154 () Int)
(declare-fun x9 () Bool)
(declare-fun x217 () Bool)
(declare-fun x191 () Bool)
(declare-fun x138 () Bool)
(declare-fun x266 () Bool)
(declare-fun x22 () Bool)
(declare-fun x444 () Bool)
(declare-fun x602 () Int)
(declare-fun x360 () Bool)
(declare-fun x437 () Int)
(declare-fun x673 () Bool)
(declare-fun x162 () Int)
(declare-fun x193 () Bool)
(declare-fun x308 () Int)
(declare-fun x597 (Int) Int)
(declare-fun x302 () Int)
(declare-fun x76 () Int)
(declare-fun x233 () Int)
(declare-fun x97 () Bool)
(declare-fun x431 () Int)
(declare-fun x604 () Int)
(declare-fun x229 () Int)
(declare-fun x269 () Int)
(declare-fun x160 () Bool)
(declare-fun x423 () Int)
(declare-fun x102 () Int)
(declare-fun x123 () Bool)
(declare-fun x247 () Bool)
(declare-fun x199 () Int)
(declare-fun x161 (Int Int) Int)
(declare-fun x12 () Bool)
(declare-fun x40 () Int)
(declare-fun x498 () Int)
(declare-fun x148 () Int)
(declare-fun x313 () Int)
(declare-fun x469 () Bool)
(declare-fun x700 () Int)
(declare-fun x380 () Int)
(declare-fun x453 () Int)
(declare-fun x645 () Int)
(declare-fun x500 () Bool)
(declare-fun x513 () Int)
(declare-fun x136 () Int)
(declare-fun x599 () Bool)
(declare-fun x404 () Bool)
(declare-fun x147 () Int)
(declare-fun x254 () Int)
(declare-fun x276 () Int)
(declare-fun x32 () Int)
(declare-fun x658 (Int) Int)
(declare-fun x448 () Int)
(declare-fun x63 () Int)
(declare-fun x371 () Int)
(declare-fun x149 () Int)
(declare-fun x642 () Int)
(declare-fun x366 () Int)
(declare-fun x677 () Bool)
(declare-fun x692 () Int)
(declare-fun x715 () Int)
(declare-fun x121 () Int)
(declare-fun x368 () Int)
(declare-fun x516 () Int)
(declare-fun x636 () Bool)
(declare-fun x318 () Int)
(declare-fun x574 () Int)
(declare-fun x668 () Bool)
(declare-fun x485 (Int) Int)
(declare-fun x11 () Bool)
(declare-fun x407 () Int)
(declare-fun x213 () Bool)
(declare-fun x357 () Int)
(declare-fun x445 () Bool)
(declare-fun x472 () Int)
(declare-fun x473 () Int)
(declare-fun x259 () Bool)
(declare-fun x600 () Bool)
(declare-fun x185 () Bool)
(declare-fun x678 () Int)
(declare-fun x7 () Int)
(declare-fun x424 () Bool)
(declare-fun x418 () Int)
(declare-fun x446 () Int)
(declare-fun x584 () Int)
(declare-fun x634 () Int)
(declare-fun x270 () Int)
(declare-fun x73 () Bool)
(declare-fun x737 () Bool)
(declare-fun x504 () Bool)
(declare-fun x362 () Int)
(declare-fun x255 () Int)
(declare-fun x204 () Bool)
(declare-fun x72 () Int)
(declare-fun x638 () Int)
(declare-fun x566 () Int)
(declare-fun x651 (Int) Int)
(declare-fun x409 () Int)
(declare-fun x281 () Int)
(declare-fun x137 () Bool)
(declare-fun x158 () Int)
(declare-fun x203 () Bool)
(declare-fun x615 () Int)
(declare-fun x679 () Int)
(declare-fun x397 (Int) Int)
(declare-fun x134 (Int) Int)
(declare-fun x559 () Bool)
(declare-fun x260 () Bool)
(declare-fun x55 () Int)
(declare-fun x208 () Int)
(declare-fun x626 () Int)
(declare-fun x327 () Int)
(declare-fun x334 () Int)
(declare-fun x662 () Int)
(declare-fun x96 () Int)
(declare-fun x601 () Bool)
(declare-fun x463 () Bool)
(declare-fun x449 () Int)
(declare-fun x182 () Int)
(declare-fun x373 () Bool)
(declare-fun x585 () Int)
(declare-fun x450 () Int)
(declare-fun x426 () Int)
(declare-fun x581 () Int)
(declare-fun x84 () Int)
(declare-fun x471 () Int)
(declare-fun x648 () Int)
(declare-fun x118 () Int)
(declare-fun x637 () Bool)
(declare-fun x178 () Int)
(declare-fun x2 (Int) Int)
(declare-fun x232 () Int)
(declare-fun x562 () Int)
(declare-fun x661 () Int)
(declare-fun x708 () Bool)
(declare-fun x573 () Bool)
(declare-fun x555 () Int)
(declare-fun x451 () Int)
(declare-fun x34 () Int)
(declare-fun x533 (Int Int) Int)
(declare-fun x125 () Int)
(declare-fun x284 () Bool)
(declare-fun x435 () Bool)
(declare-fun x105 () Int)
(declare-fun x457 () Int)
(declare-fun x242 () Bool)
(declare-fun x625 () Int)
(declare-fun x25 () Int)
(declare-fun x289 () Int)
(declare-fun x416 () Bool)
(declare-fun x343 () Int)
(declare-fun x248 () Int)
(declare-fun x112 () Int)
(declare-fun x243 () Bool)
(declare-fun x561 (Int) Int)
(declare-fun x198 () Int)
(declare-fun x499 () Bool)
(declare-fun x190 () Int)
(declare-fun x70 () Int)
(declare-fun x38 () Bool)
(declare-fun x292 () Bool)
(declare-fun x120 () Bool)
(declare-fun x330 () Int)
(declare-fun x263 () Int)
(declare-fun x433 () Int)
(declare-fun x378 () Int)
(declare-fun x640 () Bool)
(declare-fun x207 () Int)
(declare-fun x47 () Int)
(declare-fun x110 () Int)
(declare-fun x428 () Int)
(declare-fun x479 () Int)
(declare-fun x587 () Bool)
(declare-fun x399 () Int)
(declare-fun x596 () Int)
(declare-fun x311 () Bool)
(declare-fun x205 () Bool)
(declare-fun x538 () Int)
(declare-fun x702 () Int)
(declare-fun x652 () Int)
(declare-fun x664 () Int)
(declare-fun x103 () Bool)
(declare-fun x218 () Int)
(declare-fun x30 () Int)
(declare-fun x180 () Int)
(declare-fun x712 () Int)
(declare-fun x716 () Bool)
(declare-fun x383 () Bool)
(declare-fun x385 () Int)
(declare-fun x219 () Bool)
(declare-fun x563 () Bool)
(declare-fun x721 () Int)
(declare-fun x91 () Bool)
(declare-fun x711 () Int)
(declare-fun x261 () Int)
(declare-fun x346 () Bool)
(declare-fun x314 () Int)
(declare-fun x594 () Int)
(declare-fun x363 () Bool)
(declare-fun x690 () Int)
(declare-fun x477 () Int)
(declare-fun x649 () Int)
(declare-fun x304 () Bool)
(declare-fun x176 () Int)
(declare-fun x452 () Int)
(declare-fun x464 () Int)
(declare-fun x487 () Int)
(declare-fun x107 () Int)
(declare-fun x167 () Bool)
(declare-fun x663 () Int)
(declare-fun x701 () Int)
(declare-fun x483 () Bool)
(declare-fun x458 () Int)
(declare-fun x305 () Int)
(declare-fun x131 () Int)
(declare-fun x258 () Bool)
(declare-fun x335 () Bool)
(declare-fun x372 () Int)
(declare-fun x375 () Int)
(declare-fun x122 () Int)
(declare-fun x412 () Bool)
(declare-fun x48 () Int)
(declare-fun x505 () Bool)
(declare-fun x116 () Int)
(declare-fun x695 () Bool)
(declare-fun x195 () Int)
(declare-fun x279 (Int) Int)
(declare-fun x492 () Int)
(declare-fun x384 () Int)
(declare-fun x153 () Int)
(declare-fun x295 () Bool)
(declare-fun x224 () Bool)
(declare-fun x156 () Int)
(declare-fun x324 () Int)
(declare-fun x87 () Int)
(declare-fun x474 () Int)
(declare-fun x358 () Int)
(declare-fun x672 () Int)
(declare-fun x253 () Int)
(declare-fun x230 () Int)
(declare-fun x395 () Int)
(declare-fun x438 () Int)
(declare-fun x686 () Int)
(declare-fun x337 () Bool)
(declare-fun x595 () Int)
(declare-fun x109 () Bool)
(declare-fun x51 () Int)
(declare-fun x159 () Int)
(declare-fun x296 () Bool)
(declare-fun x696 () Bool)
(declare-fun x731 () Int)
(declare-fun x497 () Int)
(declare-fun x494 () Bool)
(declare-fun x257 () Int)
(declare-fun x128 (Int) Int)
(declare-fun x443 (Int) Int)
(declare-fun x189 () Bool)
(declare-fun x252 () Int)
(declare-fun x88 () Int)
(declare-fun x611 () Bool)
(declare-fun x89 (Int Int) Int)
(declare-fun x629 (Int) Int)
(declare-fun x413 () Int)
(declare-fun x514 () Bool)
(declare-fun x268 () Int)
(declare-fun x332 () Int)
(declare-fun x689 () Int)
(declare-fun x317 () Bool)
(declare-fun x58 () Bool)
(declare-fun x35 () Int)
(declare-fun x36 () Bool)
(declare-fun x151 () Bool)
(declare-fun x403 () Int)
(declare-fun x338 () Int)
(declare-fun x522 () Bool)
(declare-fun x539 () Int)
(declare-fun x558 () Int)
(declare-fun x133 () Int)
(declare-fun x671 () Int)
(declare-fun x382 (Int) Int)
(declare-fun x440 () Int)
(declare-fun x309 () Int)
(declare-fun x13 () Int)
(declare-fun x475 (Int) Int)
(declare-fun x155 () Int)
(declare-fun x591 () Int)
(declare-fun x709 () Int)
(declare-fun x170 (Int) Int)
(declare-fun x430 () Int)
(declare-fun x53 () Int)
(declare-fun x356 () Int)
(declare-fun x647 () Bool)
(declare-fun x222 () Bool)
(declare-fun x10 () Int)
(declare-fun x675 () Int)
(declare-fun x235 () Int)
(declare-fun x80 () Int)
(declare-fun x532 () Int)
(declare-fun x684 () Bool)
(declare-fun x697 () Bool)
(declare-fun x544 () Int)
(declare-fun x557 () Bool)
(declare-fun x101 () Int)
(declare-fun x20 () Int)
(declare-fun x554 () Bool)
(declare-fun x455 () Int)
(declare-fun x277 () Int)
(declare-fun x209 () Bool)
(declare-fun x660 () Int)
(declare-fun x729 () Int)
(declare-fun x459 () Bool)
(declare-fun x359 () Int)
(declare-fun x298 () Int)
(declare-fun x590 () Bool)
(declare-fun x23 () Int)
(declare-fun x537 () Int)
(declare-fun x294 () Int)
(declare-fun x391 () Int)
(declare-fun x394 () Bool)
(declare-fun x653 () Bool)
(declare-fun x194 () Bool)
(declare-fun x526 () Int)
(declare-fun x374 () Int)
(declare-fun x226 () Int)
(declare-fun x33 (Int) Int)
(declare-fun x441 () Int)
(declare-fun x588 () Int)
(declare-fun x570 () Bool)
(declare-fun x614 () Bool)
(declare-fun x667 (Int) Int)
(declare-fun x92 () Int)
(declare-fun x150 () Int)
(declare-fun x635 () Bool)
(declare-fun x656 () Int)
(declare-fun x312 () Int)
(declare-fun x655 () Int)
(declare-fun x164 () Int)
(declare-fun x657 () Int)
(declare-fun x551 () Int)
(declare-fun x540 () Int)
(declare-fun x607 () Int)
(declare-fun x29 () Int)
(declare-fun x241 () Int)
(declare-fun x4 () Int)
(declare-fun x439 () Int)
(declare-fun x466 () Bool)
(declare-fun x681 () Int)
(declare-fun x490 (Int) Int)
(declare-fun x610 () Bool)
(declare-fun x422 () Bool)
(declare-fun x16 () Int)
(declare-fun x518 () Int)
(declare-fun x43 () Int)
(declare-fun x1 () Int)
(declare-fun x301 (Int) Int)
(declare-fun x234 () Bool)
(declare-fun x411 () Int)
(declare-fun x352 () Int)
(declare-fun x541 () Int)
(declare-fun x60 () Bool)
(declare-fun x491 () Int)
(declare-fun x429 () Int)
(declare-fun x175 () Int)
(declare-fun x27 () Int)
(declare-fun x237 () Bool)
(declare-fun x510 (Int Int) Int)
(declare-fun x152 () Bool)
(declare-fun x528 () Int)
(declare-fun x94 () Bool)
(declare-fun x705 () Int)
(declare-fun x62 () Int)
(declare-fun x267 () Int)
(declare-fun x111 () Bool)
(declare-fun x135 () Int)
(declare-fun x598 () Int)
(declare-fun x687 () Int)
(declare-fun x605 () Int)
(declare-fun x240 () Bool)
(declare-fun x465 () Int)
(declare-fun x274 () Int)
(declare-fun x468 () Bool)
(declare-fun x299 () Bool)
(declare-fun x548 () Int)
(declare-fun x726 () Int)
(declare-fun x157 () Bool)
(declare-fun x511 () Int)
(declare-fun x593 () Bool)
(declare-fun x379 () Int)
(declare-fun x6 () Int)
(declare-fun x290 () Int)
(declare-fun x339 () Bool)
(declare-fun x169 (Int) Int)
(declare-fun x57 () Bool)
(declare-fun x717 () Int)
(declare-fun x174 () Int)
(declare-fun x396 () Int)
(declare-fun x183 (Int) Int)
(declare-fun x264 () Bool)
(declare-fun x592 () Bool)
(declare-fun x82 () Int)
(declare-fun x476 () Int)
(declare-fun x523 () Int)
(declare-fun x236 () Int)
(declare-fun x680 () Bool)
(declare-fun x400 () Int)
(declare-fun x132 () Bool)
(declare-fun x108 () Bool)
(declare-fun x168 () Int)
(declare-fun x146 () Int)
(declare-fun x735 () Int)
(declare-fun x410 () Int)
(declare-fun x77 () Bool)
(declare-fun x616 () Bool)
(declare-fun x86 () Int)
(declare-fun x734 () Int)
(declare-fun x49 () Bool)
(declare-fun x568 () Bool)
(declare-fun x586 () Int)
(declare-fun x609 () Int)
(declare-fun x17 () Bool)
(declare-fun x354 () Int)
(declare-fun x250 () Int)
(declare-fun x515 () Bool)
(declare-fun x288 () Bool)
(declare-fun x21 () Int)
(declare-fun x344 () Int)
(declare-fun x654 () Bool)
(declare-fun x725 () Int)
(declare-fun x736 () Int)
(declare-fun x633 () Bool)
(declare-fun x329 () Int)
(declare-fun x628 () Bool)
(declare-fun x18 () Bool)
(declare-fun x575 () Bool)
(declare-fun x166 () Int)
(declare-fun x141 () Bool)
(declare-fun x280 () Bool)
(declare-fun x285 () Int)
(declare-fun x139 () Int)
(declare-fun x78 () Bool)
(declare-fun x621 () Int)
(declare-fun x114 () Int)
(declare-fun x556 () Int)
(declare-fun x641 () Bool)
(declare-fun x489 () Int)
(declare-fun x163 () Bool)
(declare-fun x434 () Bool)
(declare-fun x547 () Bool)
(declare-fun x283 () Int)
(declare-fun x569 () Int)
(declare-fun x93 () Bool)
(declare-fun x620 () Int)
(declare-fun x196 () Int)
(declare-fun x606 () Int)
(declare-fun x202 () Int)
(declare-fun x405 () Int)
(declare-fun x486 () Int)
(declare-fun x520 () Int)
(declare-fun x617 () Int)
(declare-fun x200 () Int)
(declare-fun x333 () Int)
(declare-fun x187 () Bool)
(declare-fun x670 () Bool)
(declare-fun x364 () Int)
(declare-fun x693 () Int)
(declare-fun x74 () Bool)
(declare-fun x310 (Int) Int)
(declare-fun x506 () Bool)
(declare-fun x320 () Int)
(declare-fun x535 () Int)
(declare-fun x117 () Bool)
(declare-fun x381 () Bool)
(declare-fun x694 () Int)
(declare-fun x710 () Bool)
(declare-fun x220 () Int)
(declare-fun x350 () Int)
(declare-fun x59 (Int) Int)
(declare-fun x388 () Bool)
(declare-fun x64 () Bool)
(declare-fun x560 () Int)
(declare-fun x564 () Int)
(declare-fun x454 () Bool)
(declare-fun x67 () Bool)
(declare-fun x303 () Bool)
(declare-fun x623 () Int)
(declare-fun x478 () Int)
(declare-fun x714 () Int)
(declare-fun x519 () Bool)
(declare-fun x306 () Bool)
(declare-fun x408 () Int)
(declare-fun x419 () Bool)
(declare-fun x509 () Int)
(declare-fun x225 () Bool)
(declare-fun x632 (Int) Int)
(declare-fun x256 () Bool)
(declare-fun x90 () Int)
(declare-fun x688 () Int)
(declare-fun x669 (Int) Int)
(declare-fun x31 () Bool)
(declare-fun x119 () Int)
(declare-fun x512 () Int)
(declare-fun x365 () Int)
(declare-fun x26 () Bool)
(declare-fun x291 () Bool)
(declare-fun x143 () Int)
(declare-fun x24 () Int)
(declare-fun x44 () Int)
(declare-fun x704 (Int) Int)
(declare-fun x484 () Bool)
(declare-fun x436 () Int)
(declare-fun x144 () Int)
(declare-fun x542 () Bool)
(declare-fun x524 () Int)
(declare-fun x723 () Bool)
(declare-fun x355 () Int)
(declare-fun x546 () Int)
(declare-fun x639 () Bool)
(declare-fun x3 () Int)
(declare-fun x347 (Int) Int)
(declare-fun x624 () Int)
(declare-fun x724 () Int)
(declare-fun x5 () Int)
(declare-fun x703 () Int)
(declare-fun x85 () Bool)
(declare-fun x470 () Int)
(declare-fun x676 (Int) Int)
(declare-fun x265 () Int)
(declare-fun x45 () Int)
(declare-fun x427 () Bool)
(declare-fun x462 () Int)
(declare-fun x683 () Int)
(declare-fun x56 () Bool)
(declare-fun x650 () Bool)
(declare-fun x390 () Int)
(declare-fun x552 () Bool)
(declare-fun x482 () Bool)
(declare-fun x297 () Bool)
(declare-fun x239 () Bool)
(declare-fun x370 () Bool)
(declare-fun x238 () Bool)
(declare-fun x517 () Int)
(declare-fun x273 () Bool)
(declare-fun x496 () Int)
(declare-fun x61 () Bool)
(declare-fun x98 () Int)
(declare-fun x644 () Int)
(declare-fun x173 () Int)
(declare-fun x402 () Int)
(declare-fun x534 () Int)
(declare-fun x530 () Int)
(declare-fun x322 () Bool)
(declare-fun x580 () Int)
(declare-fun x326 () Int)
(declare-fun x387 () Int)
(declare-fun x393 (Int) Int)
(declare-fun x171 () Bool)
(declare-fun x177 () Int)
(declare-fun x216 () Int)
(declare-fun x536 () Int)
(declare-fun x275 () Int)
(declare-fun x316 () Int)
(declare-fun x251 () Bool)
(declare-fun x19 () Int)
(declare-fun x341 () Int)
(declare-fun x706 () Bool)
(declare-fun x733 () Int)
(declare-fun x507 () Int)
(declare-fun x307 () Bool)
(declare-fun x282 () Bool)
(declare-fun x720 () Int)
(declare-fun x493 () Int)
(declare-fun x245 () Int)
(declare-fun x221 () Int)
(declare-fun x417 () Bool)
(declare-fun x461 () Int)
(declare-fun x287 () Bool)
(declare-fun x99 () Int)
(declare-fun x406 () Int)
(declare-fun x353 () Int)
(define-fun x325 ((x215 Int)) Int (ite (and (<= 0 x215) (< x215 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x215 (- x215 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x345 ((x215 Int)) Int (ite (and (>= x215 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x215 0)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x215) x215))
(define-fun x392 ((x480 Int)) Bool (and (>= x480 0) (< x480 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x186 ((x480 Int)) Bool (and (<= 0 x480) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x480)))
(define-fun x145 ((x480 Int)) Bool (and (= (x161 115792089237316195423570985008687907853269984665640564039457584007913129639935 x480) x480) (= x480 (x161 x480 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x28 ((x480 Int)) Bool (and (= (x161 0 x480) 0) (= (x161 x480 0) 0)))
(define-fun x529 ((x480 Int)) Bool (= (x161 x480 x480) x480))
(define-fun x115 ((x480 Int)) Bool (and (x145 x480) (x28 x480) (x529 x480)))
(define-fun x104 ((x480 Int) (x52 Int)) Bool (= (x161 x480 x52) (x161 x52 x480)))
(define-fun x228 ((x480 Int) (x52 Int)) Bool (and (=> (<= 0 x480) (<= (x161 x480 x52) x480)) (=> (<= 0 x52) (>= x52 (x161 x480 x52))) (<= 0 (x161 x480 x52))))
(define-fun x66 ((x480 Int) (x52 Int)) Bool (and (x228 x480 x52) (x104 x480 x52)))
(define-fun x262 ((x480 Int)) Bool (= (mod x480 1208925819614629174706176) (+ (mod x480 18446744073709551616) (x161 x480 1208907372870555465154560))))
(define-fun x527 ((x480 Int)) Bool (and (x66 x480 1208907372870555465154560) (x262 x480)))
(define-fun x603 ((x480 Int)) Bool (= (mod x480 115792089237316195423570985008687907853269984665640564039457584007913129639936) (+ (mod x480 32) (x161 x480 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x508 ((x480 Int)) Bool (and (x66 x480 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x603 x480)))
(define-fun x130 ((x480 Int)) Bool (= (mod x480 6582018229284824168619876730229402019930943462534319453394436096) (+ (mod x480 95780971304118053647396689196894323976171195136475136) (x161 x480 6582018229189043197315758676582005330734049138558148258257960960))))
(define-fun x583 ((x480 Int)) Bool (and (x66 x480 6582018229189043197315758676582005330734049138558148258257960960) (x130 x480)))
(define-fun x543 ((x480 Int)) Bool (= (mod x480 144115188075855872) (+ (x161 x480 72057594037927936) (mod x480 72057594037927936))))
(define-fun x348 ((x480 Int)) Bool (and (x543 x480) (x66 x480 72057594037927936)))
(define-fun x579 ((x480 Int)) Bool (= (+ (x161 x480 144115188075855872) (mod x480 144115188075855872)) (mod x480 288230376151711744)))
(define-fun x377 ((x480 Int)) Bool (and (x66 x480 144115188075855872) (x579 x480)))
(define-fun x140 ((x480 Int)) Bool (= (+ (mod x480 288230376151711744) (x161 x480 288230376151711744)) (mod x480 576460752303423488)))
(define-fun x321 ((x480 Int)) Bool (and (x66 x480 288230376151711744) (x140 x480)))
(define-fun x41 ((x480 Int)) Bool (= (+ (x161 x480 576460752303423488) (mod x480 576460752303423488)) (mod x480 1152921504606846976)))
(define-fun x14 ((x480 Int)) Bool (and (x66 x480 576460752303423488) (x41 x480)))
(define-fun x328 ((x480 Int)) Bool (= (mod x480 2305843009213693952) (+ (mod x480 1152921504606846976) (x161 x480 1152921504606846976))))
(define-fun x127 ((x480 Int)) Bool (and (x66 x480 1152921504606846976) (x328 x480)))
(define-fun x50 ((x480 Int)) Bool (= (mod x480 340282366920938463463374607431768211456) (x161 x480 340282366920938463463374607431768211455)))
(define-fun x420 ((x480 Int)) Bool (and (x50 x480) (x66 x480 340282366920938463463374607431768211455)))
(define-fun x336 ((x480 Int)) Bool (= (mod x480 1099511627776) (x161 x480 1099511627775)))
(define-fun x659 ((x480 Int)) Bool (and (x336 x480) (x66 x480 1099511627775)))
(define-fun x545 ((x212 Int)) Int (ite (= 128 x212) 47697743078316515612600118454610093677384569027399280592730813262423046225920 (x597 x212)))
(define-fun x578 ((x212 Int)) Int (ite (= 132 x212) x391 (x545 x212)))
(define-fun x179 ((x212 Int)) Int (ite (= x212 164) x180 (x578 x212)))
(define-fun x214 ((x212 Int)) Int (ite (= 196 x212) x354 (x179 x212)))
(define-fun x718 ((x212 Int)) Int (ite (= x212 1504) 80397878463760440755375692149700041695399247739548614023716483005714108776448 (x475 x212)))
(define-fun x129 ((x212 Int)) Int (ite (and (>= x212 1504) (> (+ 32 1504) x212)) (x2 (+ (- x212 1504) 0)) (x718 x212)))
(define-fun x549 ((x212 Int)) Int (ite x554 (x490 x212) (x183 x212)))
(define-fun x456 ((x212 Int)) Int (ite x38 (x129 x212) (x718 x212)))
(define-fun x315 ((x212 Int)) Int (ite (= x53 x212) 54940573406046109056602222415596668683460243721328594580962599660119180443648 (x456 x212)))
(define-fun x732 ((x212 Int)) Int (ite (and (< x212 (+ x53 128)) (<= x53 x212)) (x46 (+ 0 (- x212 x53))) (x315 x212)))
(define-fun x567 ((x212 Int)) Int (ite x109 (x732 x212) (x315 x212)))
(define-fun x553 ((x212 Int)) Int (ite (= x212 x528) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x567 x212)))
(define-fun x460 ((x212 Int)) Int (ite (and (>= x212 x528) (> (+ x528 32) x212)) (x382 (+ 0 (- x212 x528))) (x553 x212)))
(define-fun x612 ((x212 Int)) Int (ite x189 (x460 x212) (x553 x212)))
(define-fun x618 ((x212 Int)) Int (ite (= x357 x212) 10894474682274239493831243662817379401261526446360622092269559273883068006400 (x612 x212)))
(define-fun x181 ((x212 Int)) Int (ite (and (< x212 (+ x357 32)) (>= x212 x357)) (x658 (+ 0 (- x212 x357))) (x618 x212)))
(define-fun x565 ((x212 Int)) Int (ite x361 (x181 x212) (x618 x212)))
(define-fun x643 ((x212 Int)) Int (ite (= x429 x212) 74874610042509929465218460033027201126834042060343647393369405262880053395456 (x565 x212)))
(define-fun x727 ((x212 Int)) Int (ite (= x148 x212) x711 (x643 x212)))
(define-fun x525 ((x212 Int)) Int (ite (= x598 x212) 0 (x727 x212)))
(define-fun x192 ((x212 Int)) Int (ite (= x212 x144) 0 (x525 x212)))
(define-fun x223 ((x212 Int)) Int (ite (= x212 x177) 0 (x192 x212)))
(define-fun x100 ((x212 Int)) Int (ite (= x462 x212) x390 (x223 x212)))
(define-fun x728 ((x212 Int)) Int (ite (= x212 x188) 0 (x100 x212)))
(define-fun x197 ((x212 Int)) Int (ite (= x374 x212) x487 (x728 x212)))
(define-fun x113 ((x212 Int)) Int (ite (= x212 x472) x180 (x197 x212)))
(define-fun x631 ((x212 Int)) Int (ite (= x326 x212) x609 (x113 x212)))
(define-fun x286 ((x212 Int)) Int (ite (and (>= x212 x429) (> (+ 96 x429) x212)) (x33 (+ (- x212 x429) 0)) (x631 x212)))
(define-fun x272 ((x212 Int)) Int (ite x369 (x286 x212) (x631 x212)))
(define-fun x713 ((x212 Int)) Int (ite (= x212 x489) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x272 x212)))
(define-fun x278 ((x212 Int)) Int (ite (= x147 x212) x354 (x713 x212)))
(define-fun x414 ((x212 Int)) Int (ite (and (>= x212 x489) (< x212 (+ 32 x489))) (x347 (+ (- x212 x489) 0)) (x278 x212)))
(define-fun x666 ((x212 Int)) Int (ite x258 (x414 x212) (x278 x212)))
(define-fun x367 ((x212 Int)) Int (ite (= x584 x212) 71356987572919795984103299673912204194632180251134163011139925636576289226752 (x666 x212)))
(define-fun x246 ((x212 Int)) Int (ite (= x212 x702) x354 (x367 x212)))
(define-fun x231 ((x212 Int)) Int (ite (= x212 x35) x675 (x246 x212)))
(define-fun x211 ((x212 Int)) Int (ite (and (<= x584 x212) (< x212 (+ x584 64))) (x170 (+ (- x212 x584) 0)) (x231 x212)))
(define-fun x550 ((x212 Int)) Int (ite x554 (x211 x212) (x231 x212)))
(define-fun x142 ((x212 Int)) Int (ite (= x212 x438) 81391198934588725741764901232338779421906459474344603328544298677233738842112 (x550 x212)))
(define-fun x622 ((x212 Int)) Int (ite (= x212 x395) x354 (x142 x212)))
(define-fun x249 ((x212 Int)) Int (ite (= x82 x212) x354 (x622 x212)))
(define-fun x342 ((x212 Int)) Int (ite (= x212 x98) x675 (x249 x212)))
(define-fun x630 ((x212 Int)) Int (ite (= x212 x135) x531 (x342 x212)))
(define-fun x398 ((x212 Int)) Int (ite (and (> (+ x438 96) x212) (>= x212 x438)) (x632 (+ (- x212 x438) 0)) (x630 x212)))
(define-fun x37 ((x212 Int)) Int (ite x554 (x134 x212) (x393 x212)))
(define-fun x576 ((x212 Int)) Int (ite x559 (x398 x212) (x630 x212)))
(define-fun x432 ((x212 Int)) Int (ite x559 (x59 x212) (ite x554 (x165 x212) (x561 x212))))
(define-fun x502 ((x212 Int)) Int (ite x559 (x667 x212) (ite x554 (x669 x212) (x676 x212))))
(define-fun x613 ((x212 Int)) Int (ite (= x212 x413) 74874610042509929465218460033027201126834042060343647393369405262880053395456 (x576 x212)))
(define-fun x488 ((x212 Int)) Int (ite (= x212 x720) x309 (x613 x212)))
(define-fun x571 ((x212 Int)) Int (ite (= x626 x212) 0 (x488 x212)))
(define-fun x495 ((x212 Int)) Int (ite (= x212 x512) 0 (x571 x212)))
(define-fun x126 ((x212 Int)) Int (ite (= x655 x212) x656 (x495 x212)))
(define-fun x331 ((x212 Int)) Int (ite (= x212 x254) x289 (x126 x212)))
(define-fun x682 ((x212 Int)) Int (ite (= x212 x596) x375 (x331 x212)))
(define-fun x719 ((x212 Int)) Int (ite (= x607 x212) x487 (x682 x212)))
(define-fun x685 ((x212 Int)) Int (ite (= x212 x448) x180 (x719 x212)))
(define-fun x501 ((x212 Int)) Int (ite (= x198 x212) x609 (x685 x212)))
(define-fun x124 ((x212 Int)) Int (ite (and (<= x413 x212) (> (+ 96 x413) x212)) (x169 (+ (- x212 x413) 0)) (x501 x212)))
(define-fun x699 ((x212 Int)) Int (ite x185 (x124 x212) (x501 x212)))
(assert (x186 x136))
(assert (x115 72057594037927936))
(assert (= x521 (and (not x599) x695)))
(assert (x186 x403))
(assert (x186 x146))
(assert (not (= 52 (+ x45 7))))
(assert (x186 x320))
(assert (= (=> (= (= x617 0) x601) (and (=> (and (and (or (and (= x556 1000000000000000000000000000) x26) (and (and (= (+ x410 x355) x122) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x406 x338)) (= x681 x602) (= (x345 (- x318 1)) x190) (= x230 0) (= (x325 (+ 500000000000000000000000000 x341)) x663) (= (* x518 x318) x106) (= (or x157 x132) x349) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x114 x602)) (= (+ x105 x68) x263) (= (or x514 x61) x593) (< (+ x493 x263) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (ite (> x190 x276) 1 0) x455) (= x415 x406) (= (x161 x7 x455) x230) (= x353 x355) (= x606 (* x114 x602)) (= x645 x263) (= x681 (* x318 x190)) (= (* x338 x406) x428) (= x410 x548) (= x493 x644) (= (div x378 994519296000000) x114) (< 0 x70) (= (mod (* x114 x518) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x341) (= x376 (ite (< 2 x318) (x345 (- x318 2)) 0)) (< (* x376 x255) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x358 (x325 (+ 500000000000000000000000000 x619))) (= x481 x105) (= x635 (< x92 x114)) (= (div x606 2) x493) (= x701 (ite x593 1 0)) (= x338 (div x693 31536000)) (= (mod (* x518 x518) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x619) (= x548 (div x428 6)) (= x281 (div 115792089237316195423570985008687907853269984665640064039457584007913129639935 x518)) (= x353 (+ x645 x644)) (= x693 (div x663 1000000000000000000000000000)) (= x378 (div x358 1000000000000000000000000000)) (= (< x281 x518) x610) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x481 1000000000000000000000000000)) (= x70 (ite x349 1 0)) (= x415 (* x376 x255)) (< (* x190 x318) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (div x106 31536000) x481) (= (not x610) x157) (= x122 x556) (< (* x318 x518) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (mod (* x318 x190) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x255) (= x514 (not x635)) (= x276 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x318)) (< 0 x701) (= (= x518 0) x132) (= x92 (div 115792089237316195423570985008687907853269984665640064039457584007913129639935 x518)) (= (ite (not x522) 1 0) x7) (< (+ x548 x353) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x68 1000000000000000000000000000) (= x522 (= x318 0)) (= (= x518 0) x61)) (not x26))) (and (= (x345 (- x418 x274)) x318) (not x217) (= (> x274 x232) x217) (= (= x318 0) x26))) (not x601)) x103) (=> (and (= x71 x595) x601) x468))) x563))
(assert (not (= (+ 1 x45) (+ x45 8))))
(assert (x115 x168))
(assert (x377 x538))
(assert (x186 x300))
(assert (not (= (+ x45 2) 80397878463760440755375692149700041695399247739548614023716483005714108776448)))
(assert (= (=> (and (= (not (= x133 0)) x575) (= x399 1472) (= (x325 (+ 64 x736)) x245) (= (not (= 0 x48)) x58) (= x710 (not (= 0 x492))) (= x133 (x161 144115188075855872 x538)) (= x492 (x161 576460752303423488 x538)) (= x260 (not (= 0 x729))) (= (not (= x99 0)) x668) (= (x161 1152921504606846976 x538) x99) (= x48 (x161 288230376151711744 x538)) (= x729 (x161 72057594037927936 x538))) (and (=> (not x260) x91) (=> (and (= (x325 (+ x245 64)) x528) x260) (and (=> (and (not x668) (and (= x340 (< 0 x43)) (or (and (= x724 x43) (not x340)) (and (and (= 1 x724) (< x162 4294967296)) x340)))) x673) (=> x668 x91))))) x654))
(assert (x186 x489))
(assert (x186 x274))
(assert (x186 x655))
(assert (not (= (+ x45 8) (x89 x180 52))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ 2 x45))))
(assert (not (= 18446744073709551615 (+ 7 x45))))
(assert (not (= 3166102818 (+ 6 x45))))
(assert (x115 x334))
(assert (not (= 54940573406046109056602222415596668683460243721328594580962599660119180443648 (+ 4 x45))))
(assert (not (= 3214050684 (+ x45 3))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (x89 x180 52))))
(assert (not (= (x89 x180 52) 12865787693035132824841220556520878650363331629515618226606398223101458848)))
(assert (not (= (+ x45 3) 509899769)))
(assert (=> (>= 10000 x605) (not (= x605 (+ x45 2)))))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x89 x180 52))))
(assert (not (= (+ x45 8) (+ x45 2))))
(assert (x186 x25))
(assert (x186 x221))
(assert (=> (>= 10000 x605) (not (= (x89 x180 52) x605))))
(assert (not (= (+ x45 7) 65535)))
(assert (not (= 80397878463760440755375692149700041695399247739548614023716483005714108776448 (+ 7 x45))))
(assert (x186 x70))
(assert (=> (>= 10000 x700) (not (= (+ 3 x45) x700))))
(assert (not (= (+ 4 x45) 994519296000000)))
(assert (x186 x275))
(assert (not (= 72057594037927936 (+ x45 3))))
(assert (x186 x162))
(assert (not (= (x89 x180 52) (+ 6 x45))))
(assert (= (or x506 x361) x264))
(assert (= (and x552 (not x445)) x49))
(assert (x508 x530))
(assert (not (= (+ x45 4) 1152921504606846976)))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ 5 x45))))
(assert (x186 x206))
(assert (x186 x656))
(assert (x186 x344))
(assert (x186 x690))
(assert (x186 x408))
(assert true)
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129634935 (+ 4 x45))))
(assert (x186 x235))
(assert (not (= (+ x45 5) 340282366920938463463374607431768211455)))
(assert (= x600 (=> (and (= 1 x195) (= (x161 340282366920938463463374607431768211455 x206) x343) (= x677 (> x72 340282366920938463463374607431768211455)) (= x206 (x699 x118)) (not x677) (not x434) (= (x325 (+ 32 x350)) x118) (= x434 (= 0 x396)) (= (x161 340282366920938463463374607431768211455 x236) x402) (= x708 (or (and (= true (<= x733 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x733 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x733))) (= (x699 x413) x72) (= x287 (> x236 340282366920938463463374607431768211455)) (= x149 (x161 340282366920938463463374607431768211455 x72)) (not x163) (= (x699 x350) x236) (not x708) (= (x325 (+ x413 32)) x350) (not x287) (= (< 340282366920938463463374607431768211455 x206) x163)) x239)))
(assert (= x716 (or x542 x49)))
(assert (x186 x516))
(assert (x186 x254))
(assert (not (= (+ 8 x45) 3293254135)))
(assert (not x416))
(assert (not (= (+ 5 x45) 80397878463760440755375692149700041695399247739548614023716483005714108776448)))
(assert (x186 x51))
(assert (not (= (+ 8 x45) 74874610042509929465218460033027201126834042060343647393369405262880053395456)))
(assert (=> (>= 10000 x277) (not (= (+ 4 x45) x277))))
(assert (x186 x450))
(assert (not (= 274184521717934524641157099916833587349 (+ x45 2))))
(assert (x186 x491))
(assert (x186 x374))
(assert (not (= 288230376151711744 (+ 5 x45))))
(assert (x186 x76))
(assert (not (= 3302387176 (+ 7 x45))))
(assert (x186 x413))
(assert (not (= (+ 1 x45) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x115 340282366920938463463374607431768211455))
(assert (not (= 81391198934588725741764901232338779421906459474344603328544298677233738842112 (x89 x180 52))))
(assert (not (= (+ x45 1) 72057594037927936)))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (+ 7 x45))))
(assert (not (= (+ 4 x45) 500000000000000000000000000)))
(assert (not (= 3166102818 (+ x45 3))))
(assert (x186 x98))
(assert (x115 1099511627775))
(assert (not (= (+ x45 5) 12865787693035132824841220556520878650363331629515618226606398223101458848)))
(assert (x186 x125))
(assert (not (= 1152921504606846976 (+ x45 2))))
(assert (not (= 4294967296 (+ x45 1))))
(assert (x186 x139))
(assert (= x288 (and x280 x636)))
(assert (x186 x116))
(assert (x420 x236))
(assert (not (= (+ 5 x45) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= (+ 1 x45) 3302387176)))
(assert (x186 x536))
(assert (not (= (+ x45 5) 3293254135)))
(assert (= (or x77 x559) x280))
(assert (x186 x507))
(assert (x186 x580))
(assert (not (= 80397878463760440755375692149700041695399247739548614023716483005714108776448 (+ 1 x45))))
(assert (not (= 54940573406046109056602222415596668683460243721328594580962599660119180443648 (+ 7 x45))))
(assert (= x552 (and x322 (not x193))))
(assert (= (x475 x199) 0))
(assert (=> (<= x253 10000) (not (= (+ x45 4) x253))))
(assert (not (= 1089035750 (x89 x180 52))))
(assert (not (= 3214050684 (+ x45 1))))
(assert (x186 x694))
(assert (= (or (and x388 (not x260)) (and x85 x422) (and x668 x611)) x640))
(assert (not (= (+ 5 x45) 3214050684)))
(assert (not (= (+ 3 x45) 52)))
(assert (x186 x487))
(assert (not (= (x89 x180 52) 3166102818)))
(assert (not (= (x89 x180 52) 3440452482)))
(assert (not (= (+ 7 x45) 115792089237316195423570985008687907853269984665640564039457584007913129634935)))
(assert (=> (>= 10000 x464) (not (= x464 (+ x45 8)))))
(assert (not (= 274184521717934524641157099916833587349 (x89 x180 52))))
(assert (= x554 (and x670 x18)))
(assert (x186 x62))
(assert (not (= 1099511627775 (+ 6 x45))))
(assert (x186 x277))
(assert (x420 x657))
(assert (x186 x425))
(assert (=> (<= x692 10000) (not (= x692 (x89 x180 52)))))
(assert (not (= 2054196882 (+ x45 7))))
(assert (not (= 81391198934588725741764901232338779421906459474344603328544298677233738842112 (+ 5 x45))))
(assert (x186 x726))
(assert (not (= 81391198934588725741764901232338779421906459474344603328544298677233738842112 (+ 6 x45))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ x45 3))))
(assert (not (= (+ x45 4) 72057594037927936)))
(assert (not (= 47697743078316515612600118454610093677384569027399280592730813262423046225920 (+ x45 5))))
(assert (x186 x591))
(assert (x186 x548))
(assert (not (= (x89 x180 52) 144115188075855872)))
(assert (x186 x665))
(assert (x186 x352))
(assert (=> (>= 10000 x293) (not (= (+ 3 x45) x293))))
(assert (x186 x712))
(assert (x186 x82))
(assert (not (= 1089035750 (+ 6 x45))))
(assert (not (= 274184521717934524641157099916833587349 (+ x45 8))))
(assert (x508 x503))
(assert (x186 x585))
(assert (x115 x538))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129634935 (+ x45 6))))
(assert (x186 x176))
(assert (x186 x692))
(assert (x186 x604))
(assert (x186 x574))
(assert (not (= (+ 8 x45) 115792089237316195423570985008687907853269984665640564039457584007913129634935)))
(assert (x115 x530))
(assert (x186 x47))
(assert (x392 x464))
(assert (not (= 288230376151711744 (+ 6 x45))))
(assert (= x322 (or x404 x109)))
(assert (not (= (x89 x180 52) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (x186 x400))
(assert (not (= (+ x45 3) (+ x45 5))))
(assert (= (and x304 x151) x251))
(assert (not (= (+ 4 x45) (+ 2 x45))))
(assert (=> (<= x539 10000) (not (= x539 (+ 1 x45)))))
(assert (not (= (+ x45 3) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (not (= (+ x45 1) 994519296000000)))
(assert (=> (<= x585 10000) (not (= x585 (x89 x180 52)))))
(assert (= (div x19 95780971304118053647396689196894323976171195136475136) (x510 x19 176)))
(assert (not (= 1099511627776 (+ x45 1))))
(assert (x115 x7))
(assert (x186 x43))
(assert (= 0 (x475 x425)))
(assert (not (= (+ x45 2) (+ 6 x45))))
(assert (not (= 1000000000000000000000000000 (+ 3 x45))))
(assert (not (= (+ 7 x45) 274184521717934524641157099916833587349)))
(assert (x186 x290))
(assert (= x695 true))
(assert (not (= (+ 6 x45) (+ 7 x45))))
(assert (x186 x329))
(assert (not (= 3166102818 (+ x45 7))))
(assert (=> (<= x700 10000) (not (= (+ x45 6) x700))))
(assert (x186 x679))
(assert (x186 x6))
(assert (x186 x253))
(assert (=> (>= 10000 x3) (not (= x3 (x89 x180 52)))))
(assert (x186 x707))
(assert (not (= (+ 3 x45) 1099511627775)))
(assert (not (= (+ x45 4) (+ 1 x45))))
(assert (not (= (+ x45 6) (+ 1 x45))))
(assert (not (= 1208907372870555465154560 (+ x45 1))))
(assert (x186 x153))
(assert (= x647 (=> (and (= x592 (= 0 x241)) (= (x325 (+ 31 x34)) x687) (= (x325 (+ x429 x449)) x473) (= 9000 x313) (= x517 (x325 (+ x625 5000))) (= x422 (< x359 x20)) (= (x325 (+ 64 x473)) x489) (< 0 x725) (= (x272 x429) x268) (= x204 (or (> x34 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x34) (= (<= x34 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x625 (mod (* 9000 x268) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (ite x306 1 0) x725) (= x421 x306) (= x650 (> x268 12865787693035132824841220556520878650363331629515618226606398223101458848)) (not x204) (not x592) (= x359 (div x517 10000)) (= (not x650) x421) (= x449 (x161 115792089237316195423570985008687907853269984665640564039457584007913129639904 x687))) (and (=> (and (not x422) (and (or (and (not x572) (= x314 x707)) (and (and (< x689 4294967296) (= x707 1)) x572)) (and (= x147 (x325 (+ 4 x489))) (= x572 (> x314 0))))) x641) (=> x422 x91)))))
(assert (not (= (+ x45 5) 1152921504606846976)))
(assert (not (= (+ x45 1) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (<= x3 10000) (not (= (+ 2 x45) x3))))
(assert (=> (<= x352 10000) (not (= x352 (+ x45 8)))))
(assert (x186 x358))
(assert (x186 x686))
(assert (not (= 994519296000000 (+ x45 5))))
(assert (x186 x399))
(assert (x186 x687))
(assert (x115 1152921504606846976))
(assert (not (= 65535 (+ x45 3))))
(assert (= x85 (or x369 x696)))
(assert (x186 x35))
(assert (=> (>= 10000 x585) (not (= (+ x45 7) x585))))
(assert (x186 x493))
(assert (x186 x327))
(assert (x186 x154))
(assert (x186 x110))
(assert (not (= (+ 5 x45) (+ 4 x45))))
(assert (not (= (+ 3 x45) 54940573406046109056602222415596668683460243721328594580962599660119180443648)))
(assert (= x189 (and x340 x22)))
(assert (x115 576460752303423488))
(assert (not (= 144115188075855872 (+ x45 3))))
(assert (not (= 274184521717934524641157099916833587349 (+ x45 6))))
(assert (x186 x675))
(assert (x508 x329))
(assert (x508 x436))
(assert (x186 x511))
(assert (not (= 3512598611 (+ x45 8))))
(assert (not (= (+ 2 x45) 1461501637330902918203684832716283019655932542976)))
(assert (=> (>= 10000 x277) (not (= (+ 8 x45) x277))))
(assert (not (= (+ x45 5) (+ x45 8))))
(assert (= x577 (or x444 x172)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129634935 (+ x45 5))))
(assert (not (= 65535 (+ x45 8))))
(assert (x186 x662))
(assert (not (= 65535 (+ 4 x45))))
(assert (= (or x519 x258) x18))
(assert (not (= 340282366920938463463374607431768211456 (+ 7 x45))))
(assert (not (= 1208907372870555465154560 (+ x45 2))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ 1 x45))))
(assert (x186 x10))
(assert (x186 x245))
(assert (x186 x652))
(assert (not (= 3293254135 (+ x45 7))))
(assert (x186 x588))
(assert (not (= 47697743078316515612600118454610093677384569027399280592730813262423046225920 (+ x45 7))))
(assert (not (= 3440452482 (+ x45 2))))
(assert (x186 x96))
(assert (not (= 6582018229189043197315758676582005330734049138558148258257960960 (x89 x180 52))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ 6 x45))))
(assert (x115 6582018229189043197315758676582005330734049138558148258257960960))
(assert (x186 x477))
(assert (not (= 6582018229189043197315758676582005330734049138558148258257960960 (+ 6 x45))))
(assert (not (= (+ x45 5) (x89 x180 52))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ x45 5))))
(assert (x115 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x186 x715))
(assert (=> (>= 10000 x464) (not (= (+ x45 1) x464))))
(assert (x186 x701))
(assert (not (= (+ x45 3) 274184521717934524641157099916833587349)))
(assert (= (x475 x516) 0))
(assert (not (= (+ x45 6) 994519296000000)))
(assert (=> (>= 10000 x293) (not (= x293 (+ x45 2)))))
(assert (x186 x562))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ x45 8))))
(assert (not (= (+ x45 3) 994519296000000)))
(assert (not (= (+ x45 7) (+ 4 x45))))
(assert (x66 x23 x332))
(assert (=> (<= x605 10000) (not (= x605 (+ x45 5)))))
(assert (not (= 18446744073709551615 (+ 5 x45))))
(assert (= (and (not x26) x227) x73))
(assert (x186 x721))
(assert (not (= 65535 (+ x45 6))))
(assert (not (= (+ 6 x45) 3440452482)))
(assert (not (= (+ x45 6) 3512598611)))
(assert (not (= (+ x45 2) 1769207620)))
(assert (=> (<= x605 10000) (not (= (+ 6 x45) x605))))
(assert (not (= (+ 2 x45) 340282366920938463463374607431768211456)))
(assert (not (= (+ 6 x45) 3293254135)))
(assert (x186 x426))
(assert (x186 x86))
(assert (= (x475 x118) 0))
(assert (x186 x602))
(assert (= (=> (and (or (and (and (> 4294967296 x136) (= 1 x84)) x737) (and (= x664 x84) (not x737))) (and (= (> x664 0) x737) (= (x612 x528) x532) (= (= 0 x724) x79) (not x79) (= (x161 115792089237316195423570985008687907853269984665640564039457584007913129639904 x503) x581) (= x706 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x162) (and (> 32 x162) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x162) true)))) (not x706) (= x503 (x325 (+ x162 31))) (= x357 (x325 (+ x581 x528))))) x505) x673))
(assert (not (= (+ x45 7) 31536000)))
(assert (not (= 74874610042509929465218460033027201126834042060343647393369405262880053395456 (+ x45 6))))
(assert (x186 x711))
(assert (x186 x375))
(assert (not (= (+ 1 x45) (+ x45 5))))
(assert (= 0 (x475 x694)))
(assert (x14 x538))
(assert (not (= 74874610042509929465218460033027201126834042060343647393369405262880053395456 (+ x45 2))))
(assert (not (= (+ 4 x45) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (x186 x27))
(assert (not (= 1099511627776 (+ x45 7))))
(assert (= (and x22 (not x340)) x36))
(assert (not (= 54940573406046109056602222415596668683460243721328594580962599660119180443648 (+ 8 x45))))
(assert (x186 x617))
(assert (not (= 340282366920938463463374607431768211455 (+ x45 2))))
(assert (=> (<= x692 10000) (not (= x692 (+ x45 5)))))
(assert (= x172 (and (not x94) x307)))
(assert (x186 x314))
(assert (not (= 340282366920938463463374607431768211455 (+ 1 x45))))
(assert (not (= (+ x45 4) 2054196882)))
(assert (x186 x556))
(assert (x186 x131))
(assert (=> (>= 10000 x539) (not (= (+ 6 x45) x539))))
(assert (not (= (+ x45 6) 52)))
(assert (= (and x264 x17) x369))
(assert (x186 x620))
(assert (not (= (+ x45 1) 115792089237316195423570985008687907853269984665640564039457584007913129634935)))
(assert (x186 x19))
(assert (=> (<= x261 10000) (not (= x261 (x89 x180 52)))))
(assert (not (= 72057594037927936 (+ x45 5))))
(assert (not (= 52 (x89 x180 52))))
(assert (not (= (+ x45 4) 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (x420 x652))
(assert (not (= 509899769 (+ 8 x45))))
(assert (not (= 2054196882 (+ x45 6))))
(assert (not (= (+ x45 6) 1769207620)))
(assert (=> (<= x539 10000) (not (= x539 (+ 4 x45)))))
(assert (x186 x418))
(assert (=> (>= 10000 x539) (not (= x539 (+ x45 7)))))
(assert (not (= (+ x45 4) 1208907372870555465154560)))
(assert (not (= 3440452482 (+ 4 x45))))
(assert (=> (<= x539 10000) (not (= (+ 3 x45) x539))))
(assert (x392 x585))
(assert (x186 x362))
(assert (x186 x409))
(assert (x186 x385))
(assert (x186 x182))
(assert (not (= 288230376151711744 (+ 4 x45))))
(assert (not (= (x89 x180 52) (+ 3 x45))))
(assert (not (= 1769207620 (x89 x180 52))))
(assert (x186 x195))
(assert (x186 x423))
(assert (not (= (+ 7 x45) 12865787693035132824841220556520878650363331629515618226606398223101458848)))
(assert (=> (<= x143 10000) (not (= x143 (+ 4 x45)))))
(assert (not (= 54940573406046109056602222415596668683460243721328594580962599660119180443648 (+ 6 x45))))
(assert (= x38 (and x695 x599)))
(assert (x420 x206))
(assert (x186 x634))
(assert (=> (>= 10000 x605) (not (= x605 (+ 8 x45)))))
(assert (not (= 1089035750 (+ 8 x45))))
(assert (not (= 576460752303423488 (+ 2 x45))))
(assert (x186 x30))
(assert (x115 x178))
(assert (=> (<= x3 10000) (not (= (+ 4 x45) x3))))
(assert (not (= (+ x45 4) 12865787693035132824841220556520878650363331629515618226606398223101458848)))
(assert (x392 x605))
(assert (not (= (+ 1 x45) 65535)))
(assert (x186 x520))
(assert (not (= 3512598611 (x89 x180 52))))
(assert (=> (>= 10000 x605) (not (= (+ 3 x45) x605))))
(assert (x186 x714))
(assert (not (= 47697743078316515612600118454610093677384569027399280592730813262423046225920 (+ x45 6))))
(assert (= x185 (and x238 x427)))
(assert (=> (>= 10000 x692) (not (= (+ x45 8) x692))))
(assert (not (= (+ 1 x45) 1461501637330902918203684832716283019655932542976)))
(assert (not (= (+ 2 x45) 12865787693035132824841220556520878650363331629515618226606398223101458848)))
(assert (x186 x168))
(assert (not (= (+ x45 5) 1208907372870555465154560)))
(assert (x392 x352))
(assert (x186 x566))
(assert (not (= (+ 3 x45) 6582018229189043197315758676582005330734049138558148258257960960)))
(assert (x186 x448))
(assert (not (= (+ x45 3) 1208907372870555465154560)))
(assert (not (= (+ 8 x45) (+ 6 x45))))
(assert (not (= (+ x45 1) 31536000)))
(assert (x186 x40))
(assert (x186 x538))
(assert (x186 x406))
(assert (x186 x735))
(assert (not (= (+ x45 4) 3302387176)))
(assert (x186 x334))
(assert (not (= (+ x45 2) 54940573406046109056602222415596668683460243721328594580962599660119180443648)))
(assert (x186 x689))
(assert (not (= (+ 8 x45) 576460752303423488)))
(assert (x186 x664))
(assert (not (= (+ x45 6) 80397878463760440755375692149700041695399247739548614023716483005714108776448)))
(assert (x508 x687))
(assert (not (= 4294967296 (+ 8 x45))))
(assert (x186 x198))
(assert (not (= 1769207620 (+ x45 7))))
(assert (x186 x736))
(assert (not (= 74874610042509929465218460033027201126834042060343647393369405262880053395456 (+ x45 1))))
(assert (= x258 (and x419 x572)))
(assert (=> (<= x352 10000) (not (= (x89 x180 52) x352))))
(assert (x186 x569))
(assert (=> (>= 10000 x692) (not (= x692 (+ x45 6)))))
(assert (x186 x438))
(assert (x186 x21))
(assert (x186 x309))
(assert (x66 x7 x455))
(assert (x186 x3))
(assert (x186 x405))
(assert (=> (<= x261 10000) (not (= x261 (+ 1 x45)))))
(assert (not (= (+ 3 x45) 288230376151711744)))
(assert (x186 x524))
(assert (= (and x552 x445) x542))
(assert (=> (>= 10000 x253) (not (= x253 (+ 1 x45)))))
(assert (x186 x283))
(assert (x186 x229))
(assert (x186 x101))
(assert (not (= (x89 x180 52) 2054196882)))
(assert (not (= (+ x45 4) 1461501637330902918203684832716283019655932542976)))
(assert (x186 x455))
(assert (not (= (+ 3 x45) (+ 8 x45))))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (+ 6 x45))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x45 7))))
(assert (= (=> (and (or x304 (not x304)) (= x304 (= x440 0))) x417) x515))
(assert (not (= 65535 (x89 x180 52))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x45 8))))
(assert (x420 x334))
(assert (x186 x540))
(assert (x186 x333))
(assert (x186 x324))
(assert (not (= (x89 x180 52) 1099511627775)))
(assert (not (= (+ 8 x45) 3440452482)))
(assert (x115 x503))
(assert (x186 x528))
(assert (x186 x541))
(assert (not (= (+ 4 x45) 3512598611)))
(assert (x186 x184))
(assert (= x417 (=> (and (or (not x295) (and (and (= x74 (<= x275 (x301 x700))) (> 4294967296 x25) (= x275 (x37 x700)) (= x292 (= (x301 x464) x333)) x74 x292 (= (x37 x464) x333)) x295)) (and (not x205) (= (= 0 x440) x187) (>= x531 0) (< x531 340282366920938463463374607431768211456) (= (x325 (+ x146 x584)) x438) (not x187) (= x82 (x325 (+ x395 32))) (= x295 (> x47 0)) (= (or (and (< x541 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x541))) (> x541 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x205) (<= x531 340282366920938463463374607431768211455) (= x649 (x325 (+ 31 x541))) (= (x325 (+ x98 32)) x135) (= x395 (x325 (+ x438 4))) (= (x549 x534) x531) (= x146 (x161 115792089237316195423570985008687907853269984665640564039457584007913129639904 x649)) (= (x325 (+ x82 32)) x98))) x674)))
(assert (=> (<= x293 10000) (not (= (+ x45 7) x293))))
(assert (x186 x248))
(assert (=> (>= 10000 x277) (not (= x277 (+ 5 x45)))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ 3 x45))))
(assert (not (= 576460752303423488 (+ 7 x45))))
(assert (not (= 3302387176 (x89 x180 52))))
(assert (not (= (+ 3 x45) 47697743078316515612600118454610093677384569027399280592730813262423046225920)))
(assert (x115 x657))
(assert (=> (>= 10000 x605) (not (= (+ x45 4) x605))))
(assert (x659 x418))
(assert (not (= (+ 8 x45) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x186 x343))
(assert (x186 x267))
(assert (x115 x72))
(assert (=> (>= 10000 x352) (not (= x352 (+ x45 4)))))
(assert (x186 x80))
(assert (x186 x218))
(assert (x186 x294))
(assert (not (= 3293254135 (+ x45 2))))
(assert (x186 x83))
(assert (x186 x200))
(assert (not (= (+ x45 2) 3166102818)))
(assert (=> (<= x352 10000) (not (= (+ 5 x45) x352))))
(assert (x186 x440))
(assert (not (= 1099511627776 (+ 6 x45))))
(assert (x392 x180))
(assert (not (= (+ x45 3) 31536000)))
(assert (not (= (+ x45 4) 340282366920938463463374607431768211456)))
(assert (x392 x539))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x89 x180 52))))
(assert (=> (<= x261 10000) (not (= (+ x45 2) x261))))
(assert (not (= (+ 4 x45) (x89 x180 52))))
(assert (x186 x371))
(assert (=> (>= 10000 x464) (not (= (+ x45 4) x464))))
(assert (not (= (+ 2 x45) 1000000000000000000000000000)))
(assert (x186 x276))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129634935 (x89 x180 52))))
(assert (not (= 80397878463760440755375692149700041695399247739548614023716483005714108776448 (+ x45 4))))
(assert (not (= (+ 1 x45) 54940573406046109056602222415596668683460243721328594580962599660119180443648)))
(assert (x186 x312))
(assert (=> (<= x464 10000) (not (= x464 (+ x45 2)))))
(assert (x186 x81))
(assert (not (= 4294967296 (+ 5 x45))))
(assert (not (= 509899769 (+ 7 x45))))
(assert (=> (>= 10000 x352) (not (= (+ x45 6) x352))))
(assert (x186 x269))
(assert (not (= 47697743078316515612600118454610093677384569027399280592730813262423046225920 (+ x45 4))))
(assert (x186 x733))
(assert (x186 x594))
(assert (x186 x625))
(assert (=> (<= x605 10000) (not (= (+ x45 7) x605))))
(assert (= x307 (and (not x494) x219)))
(assert (=> (<= x585 10000) (not (= x585 (+ x45 5)))))
(assert (not (= (+ 4 x45) 1461501637330902918203684832716283019655932542975)))
(assert (x186 x71))
(assert (= x111 (or x189 x36)))
(assert (x186 x720))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (+ x45 2))))
(assert (x186 x112))
(assert (= (or x213 x73) x394))
(assert (x186 x147))
(assert (not (= 576460752303423488 (+ x45 6))))
(assert (not (= (+ 4 x45) 74874610042509929465218460033027201126834042060343647393369405262880053395456)))
(assert (not (= (x89 x180 52) 3214050684)))
(assert (x186 x688))
(assert (=> (>= 10000 x180) (not (= x180 (x89 x180 52)))))
(assert (x186 x119))
(assert (not (= (x89 x180 52) 576460752303423488)))
(assert (= (=> (and (= x636 (= 0 x47)) (or x636 (not x636))) x167) x674))
(assert (=> (<= x143 10000) (not (= (x89 x180 52) x143))))
(assert (x186 x657))
(assert (= (= x195 0) x239))
(assert (not (= (+ x45 5) 1099511627776)))
(assert (x127 x538))
(assert (x186 x353))
(assert (= x151 (or x138 x554)))
(assert (=> (<= x464 10000) (not (= (x89 x180 52) x464))))
(assert (= (=> (and (and (= (x161 6582018229189043197315758676582005330734049138558148258257960960 x538) x19) (= (ite x282 1 0) x551) (< x55 1461501637330902918203684832716283019655932542976) (not x570) (= (x325 (+ 128 x88)) x564) (= x282 (or x191 x297)) (= x454 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x25) true) (< x25 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x25))) (= (x325 (+ 500000000000000000000000000 x362)) x679) (= (x325 (+ x438 32)) x316) (= x656 (x576 x316)) (= x178 (x325 (+ 31 x25))) (<= x55 1461501637330902918203684832716283019655932542975) (= (x325 (+ 288 x564)) x413) (= x570 (= x47 0)) (= (not x123) x191) (= (x432 x308) x55) (= (x576 x694) x375) (= x694 (x325 (+ x316 32))) (= x51 (div 115792089237316195423570985008687907853269984665640064039457584007913129639935 x426)) (= x555 (x161 115792089237316195423570985008687907853269984665640564039457584007913129639904 x178)) (< 0 x551) (= (= 0 x665) x482) (= 1472 x452) (= (mod (* x617 x426) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x362) (= (x325 (+ x438 x555)) x88) (= x123 (< x51 x617)) (= x289 (div x679 1000000000000000000000000000)) (= (= x426 0) x297) (not x454) (= x665 (x510 x19 176)) (>= x55 0)) (or (and (and (= x344 (x502 x379)) (>= 340282366920938463463374607431768211455 x344) (> 340282366920938463463374607431768211456 x344) (= x309 x344) (<= 0 x344)) (not x482)) (and x482 (= x309 0)))) x42) x167))
(assert (= x109 (and x247 x463)))
(assert (x186 x683))
(assert (x186 x473))
(assert (x186 x174))
(assert (not (= (+ 5 x45) 54940573406046109056602222415596668683460243721328594580962599660119180443648)))
(assert (= (=> (and (or (and (not x573) (and (= x403 0) (= x97 (> x574 x385)) (= x24 (div x712 2)) (not x319) (= x439 (div x712 2)) (= x504 (not x56)) (< x116 340282366920938463463374607431768211456) (= (ite x60 1 0) x403) (<= x116 340282366920938463463374607431768211455) (= (or x266 x504) x60) (= x229 (x161 340282366920938463463374607431768211455 x334)) (>= x116 0) (= x21 (mod (* x574 1000000000000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x496 x734) (= x385 (div x526 1000000000000000000000000000)) (= (x65 x678) x116) (< (+ x496 x116) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x334 (+ x734 x364)) (= x526 (x345 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x439))) (= x407 (x325 (+ x24 x21))) (= x266 (= x712 0)) (= (+ x646 2) x678) (= (not x97) x56) (= (< 340282366920938463463374607431768211455 x652) x319) (= (div x407 x712) x652) (>= 340282366920938463463374607431768211455 x334) (= x364 x116) (= x496 (x161 340282366920938463463374607431768211455 x652)))) x573) (and (= x498 (div x320 1000000000000000000000000000)) (= (x325 (+ x54 500000000000000000000000000)) x320) (= x256 (not x303)) (= x117 (< x615 x69)) (= x615 (div 115792089237316195423570985008687907853269984665640564039457584007913129634935 x487)) (= x466 (or x203 x587)) (= (div 115792089237316195423570985008687907853269984665640064039457584007913129639935 x300) x566) (= x409 x465) (= x69 (x345 (- x6 x498))) (= (> x621 x566) x303) (= (= 0 x487) x203) (= (> x498 x6) x653) (= x588 (ite x466 1 0)) (> x588 0) (= x587 (not x117)) (= x173 (ite x311 1 0)) (= x573 (= x574 0)) (= (mod (* x621 x300) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x54) (= (= x300 0) x697) (= x574 (div x196 10000)) (= x63 x81) (= (x345 (- x642 x660)) x6) (> x173 0) (= x311 (or x256 x697)) (= x431 (mod (* x69 x487) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x196 (x325 (+ x431 5000))) (not x484) (= (> x660 x642) x484) (< (+ x409 x81) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x642 (+ x465 x63)) (not x653))) x547) x363))
(assert (not (= 6582018229189043197315758676582005330734049138558148258257960960 (+ x45 1))))
(assert (not (= 31536000 (+ 6 x45))))
(assert (x186 x472))
(assert (=> (<= x253 10000) (not (= (+ 7 x45) x253))))
(assert (x186 x395))
(assert (x186 x302))
(assert (x186 x216))
(assert (not (= 4294967296 (+ x45 3))))
(assert (not (= (+ 7 x45) (x89 x180 52))))
(assert (x186 x390))
(assert (not (= 500000000000000000000000000 (+ x45 6))))
(assert (not (= (x89 x180 52) 1208907372870555465154560)))
(assert (=> (>= 10000 x298) (not (= (+ x45 3) x298))))
(assert (not (= 3214050684 (+ x45 7))))
(assert (= (=> (and (= x425 (x325 (+ 32 x53))) (= (x325 (+ x53 x690)) x430) (= x13 (x325 (+ x451 31))) (> 1099511627776 x90) (= (or (> x451 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 128 x451) (= true (<= x451 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x273) (= x294 (x567 x516)) (= (x567 x53) x621) (= (x161 115792089237316195423570985008687907853269984665640564039457584007913129639904 x13) x690) (= x30 (x161 1099511627775 x418)) (>= 1099511627775 x294) (= x637 (= x101 0)) (>= x90 0) (not x273) (= (= x30 x90) x193) (not x637) (= x199 (x325 (+ x425 32))) (= x200 (x567 x199)) (= x516 (x325 (+ x199 32))) (<= x90 1099511627775) (= x90 (x629 x534)) (= (x567 x425) x81)) (and (=> (and (not x193) (and (= x445 (= 0 x20)) (or (and (and (= x27 (mod (* x112 x285) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x657 x712) (= (> x112 x486) x628) (= x441 (* x20 x244)) (= (div x623 1000000000000000000000000000) x657) (= 1000000000000000000000000000 x365) (not x93) (not x9) (> x536 0) (= (x325 (+ 500000000000000000000000000 x27)) x623) (= (div 115792089237316195423570985008687907853269984665640064039457584007913129639935 x285) x486) (= (> x657 340282366920938463463374607431768211455) x93) (= (ite x225 1 0) x536) (= x478 (div x441 31536000)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x478 1000000000000000000000000000)) (= x225 (or x222 x680)) (= (= x285 0) x222) (= x680 (not x628)) (= x244 (x345 (- x418 x274))) (= (x161 340282366920938463463374607431768211455 x657) x176) (= x478 x175) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x244 x20)) (= (> x274 x232) x9) (= x112 (+ x365 x175))) (not x445)) (and x445 (= x712 x285))))) x563) (=> (and (and (= x736 x430) (= x426 x595)) x193) x654))) x337))
(assert (not (= (+ 5 x45) 144115188075855872)))
(assert (x186 x433))
(assert (x115 288230376151711744))
(assert (x186 x436))
(assert (x115 x652))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ x45 8))))
(assert (x186 x729))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (+ 5 x45))))
(assert (x186 x90))
(assert (not (= 3293254135 (+ 3 x45))))
(assert (x186 x368))
(assert (not (= 1208907372870555465154560 (+ 8 x45))))
(assert (x186 x609))
(assert (not (= (+ x45 5) 1769207620)))
(assert (=> (<= x298 10000) (not (= (+ x45 7) x298))))
(assert (x186 x53))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x89 x180 52))))
(assert (not (= (+ 8 x45) 1769207620)))
(assert (not (= 1000000000000000000000000000 (+ 8 x45))))
(assert (=> (>= 10000 x585) (not (= (+ 6 x45) x585))))
(assert (not (= 72057594037927936 (+ 8 x45))))
(assert (=> (>= 10000 x180) (not (= x180 (+ 3 x45)))))
(assert (not (= (+ x45 2) 65535)))
(assert (x186 x208))
(assert (x186 x615))
(assert (not (= (+ 7 x45) 6582018229189043197315758676582005330734049138558148258257960960)))
(assert (= (and x611 (not x668)) x22))
(assert (x186 x199))
(assert (x186 x180))
(assert (x348 x538))
(assert (x186 x1))
(assert (x186 x378))
(assert (=> (>= 10000 x464) (not (= (+ 7 x45) x464))))
(assert (not (= (x89 x180 52) 509899769)))
(assert (not (= 144115188075855872 (+ x45 6))))
(assert (=> (>= 10000 x692) (not (= (+ x45 3) x692))))
(assert (x392 x253))
(assert (not (= (+ 5 x45) (+ x45 2))))
(assert (= x77 (and x627 (not x295))))
(assert (x186 x560))
(assert (not (= (+ 6 x45) 3302387176)))
(assert (x186 x55))
(assert (x186 x305))
(assert (x186 x244))
(assert (x186 x4))
(assert (not (= (+ x45 1) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (x115 x329))
(assert (not (= (x89 x180 52) 72057594037927936)))
(assert (not (= (+ x45 2) 47697743078316515612600118454610093677384569027399280592730813262423046225920)))
(assert (x186 x313))
(assert (x186 x722))
(assert (=> (>= 10000 x277) (not (= (+ 6 x45) x277))))
(assert (not (= 6582018229189043197315758676582005330734049138558148258257960960 (+ x45 2))))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ x45 3))))
(assert (not (= (+ x45 7) 4294967296)))
(assert (x186 x257))
(assert (x583 x538))
(assert (not (= (+ x45 1) 12865787693035132824841220556520878650363331629515618226606398223101458848)))
(assert (x186 x386))
(assert (x186 x39))
(assert (=> (<= x293 10000) (not (= x293 (+ x45 6)))))
(assert (=> (>= 10000 x180) (not (= (+ 2 x45) x180))))
(assert (x186 x586))
(assert (not (= (+ x45 7) 340282366920938463463374607431768211455)))
(assert (not (= (+ 1 x45) (+ x45 3))))
(assert (x186 x293))
(assert (x186 x72))
(assert (not (= 500000000000000000000000000 (x89 x180 52))))
(assert (x186 x626))
(assert (not (= 3512598611 (+ x45 2))))
(assert (x186 x451))
(assert (x186 x268))
(assert (= (=> (and (and (= x617 (x456 1504)) (not x590) (= x53 (x325 (+ 1504 x153))) (not x67) (= x247 (> x476 0)) (= (or (> x302 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x302) (= (<= x302 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x590) (= (x161 115792089237316195423570985008687907853269984665640564039457584007913129639904 x436) x153) (= x67 (= x447 0)) (= x436 (x325 (+ 31 x302)))) (or (and (and (= x101 1) (> 4294967296 x451)) x247) (and (not x247) (= x476 x101)))) x337) x346))
(assert (x392 x700))
(assert (=> (>= 10000 x298) (not (= x298 (+ 5 x45)))))
(assert (x186 x376))
(assert (not (= (+ x45 4) 274184521717934524641157099916833587349)))
(assert (not (= 81391198934588725741764901232338779421906459474344603328544298677233738842112 (+ 4 x45))))
(assert (=> (<= x692 10000) (not (= (+ 4 x45) x692))))
(assert (=> (>= 10000 x143) (not (= (+ x45 5) x143))))
(assert (x186 x241))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (+ 6 x45))))
(assert (x115 x332))
(assert (not (= (+ 7 x45) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x186 x316))
(assert (x115 x649))
(assert (not (= (+ 3 x45) 340282366920938463463374607431768211455)))
(assert (x186 x159))
(assert (not (= (+ 7 x45) 1461501637330902918203684832716283019655932542976)))
(assert (x186 x467))
(assert (x186 x380))
(assert (x186 x430))
(assert (x186 x87))
(assert (not (= (+ 1 x45) 288230376151711744)))
(assert (x186 x318))
(assert (not (= 18446744073709551615 (+ x45 2))))
(assert (not (= (+ x45 2) 2054196882)))
(assert (=> (>= 10000 x261) (not (= (+ 4 x45) x261))))
(assert (x115 x418))
(assert (x392 x45))
(assert (not (= (+ 2 x45) 52)))
(assert (=> (>= 10000 x692) (not (= x692 (+ x45 1)))))
(assert (x186 x452))
(assert (not (= (+ x45 8) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= (+ 4 x45) 3166102818)))
(assert (x186 x523))
(assert (not (= 1089035750 (+ x45 1))))
(assert (x186 x158))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ 5 x45))))
(assert (=> (<= x253 10000) (not (= (+ x45 6) x253))))
(assert (=> (>= 10000 x585) (not (= x585 (+ x45 4)))))
(assert (not (= (+ 7 x45) (+ 3 x45))))
(assert (x186 x107))
(assert (not (= (+ 3 x45) 1152921504606846976)))
(assert (=> (<= x700 10000) (not (= (+ x45 7) x700))))
(assert (x186 x471))
(assert (x186 x517))
(assert (not (= (+ 7 x45) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x186 x526))
(assert (not (= 52 (+ x45 4))))
(assert (x186 x470))
(assert (not (= (+ x45 2) 500000000000000000000000000)))
(assert (=> (<= x700 10000) (not (= x700 (+ 8 x45)))))
(assert (x186 x582))
(assert (not (= 994519296000000 (x89 x180 52))))
(assert (not (= (x89 x180 52) 54940573406046109056602222415596668683460243721328594580962599660119180443648)))
(assert (not (= 500000000000000000000000000 (+ x45 8))))
(assert (=> (<= x180 10000) (not (= x180 (+ x45 4)))))
(assert (= (x475 x316) 0))
(assert (not (= (+ 8 x45) (+ 7 x45))))
(assert (not (= (+ 3 x45) 81391198934588725741764901232338779421906459474344603328544298677233738842112)))
(assert (x186 x270))
(assert (not (= 994519296000000 (+ 7 x45))))
(assert (not (= (+ 3 x45) (+ 6 x45))))
(assert (= (and x322 x193) x351))
(assert (=> (<= x700 10000) (not (= (+ x45 1) x700))))
(assert (not (= (x89 x180 52) 18446744073709551615)))
(assert (not (= 1000000000000000000000000000 (x89 x180 52))))
(assert (not (= (+ 8 x45) 340282366920938463463374607431768211455)))
(assert (not (= (+ 1 x45) 1769207620)))
(assert (not (= (+ 7 x45) 3440452482)))
(assert (not (= (+ 3 x45) 3512598611)))
(assert (not (= (+ x45 5) 3512598611)))
(assert (=> (>= 10000 x293) (not (= x293 (+ 4 x45)))))
(assert (x186 x196))
(assert (= (and (not x427) x238) x299))
(assert (= x435 (and (not x573) x577)))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (+ 8 x45))))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ 5 x45))))
(assert (= x388 (or x160 x351)))
(assert (not (= (+ x45 2) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (not (= 4294967296 (+ x45 6))))
(assert (not (= 1099511627775 (+ x45 7))))
(assert (=> (<= x143 10000) (not (= x143 (+ 1 x45)))))
(assert (not (= 1208907372870555465154560 (+ 7 x45))))
(assert (not (= (x89 x180 52) 3293254135)))
(assert (x186 x539))
(assert (not (= 288230376151711744 (x89 x180 52))))
(assert (x392 x692))
(assert (= x42 (=> (and (or (and (= x396 x479) (not x427)) (and x427 (and (= 1 x396) (> 4294967296 x733)))) (and (= x448 (x325 (+ x607 32))) (= (x325 (+ 4 x413)) x720) (= x607 (x325 (+ 32 x596))) (= x254 (x325 (+ x655 32))) (= x596 (x325 (+ 32 x254))) (= (x325 (+ x448 32)) x198) (= (x325 (+ 32 x720)) x626) (= x655 (x325 (+ 32 x512))) (= (x325 (+ x626 32)) x512) (= x427 (> x479 0)))) x600)))
(assert (x186 x551))
(assert (x186 x584))
(assert (not (= (+ 3 x45) 3302387176)))
(assert (not (= (x89 x180 52) (+ x45 1))))
(assert (x186 x84))
(assert (=> (>= 10000 x261) (not (= (+ x45 7) x261))))
(assert (= (and x26 x227) x213))
(assert (= x519 (and x419 (not x572))))
(assert (=> (>= 10000 x700) (not (= x700 (+ 4 x45)))))
(assert (not (= (+ x45 2) 115792089237316195423570985008687907853269984665640564039457584007913129634935)))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x45 6))))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (+ 1 x45))))
(assert (not (= (+ 3 x45) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= 81391198934588725741764901232338779421906459474344603328544298677233738842112 (+ x45 7))))
(assert (x186 x649))
(assert (not (= (+ 2 x45) 1099511627776)))
(assert (=> (>= 10000 x277) (not (= (x89 x180 52) x277))))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ x45 6))))
(assert (not (= (+ 5 x45) 500000000000000000000000000)))
(assert (not (= (+ 2 x45) (+ 7 x45))))
(assert (not (= (+ 1 x45) 3440452482)))
(assert (= x468 (=> (and (= x562 (x325 (+ 192 x430))) (= x494 (= 0 x487))) (and (=> x494 x547) (=> (and (not x494) (and (or (and (= 1000000000000000000000000000 x300) x94) (and (not x94) (and (= (mod (* x200 x200) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x371) (= x152 (= x544 0)) (= x457 0) (= (x325 (+ x371 500000000000000000000000000)) x207) (= x372 (* x226 x544)) (= (not x469) x614) (= (or x237 x614) x401) (= (+ x537 x75) x686) (> x233 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x544 x200)) (< (* x544 x226) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x540 (div x207 1000000000000000000000000000)) (= (not x360) x568) (= x332 (ite (> x226 x453) 1 0)) (= x477 (mod (* x226 x544) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (mod (* x200 x125) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x110) (= (= x200 0) x237) (= x226 (x345 (- x544 1))) (= x300 x535) (= x638 (* x125 x569)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x119 1000000000000000000000000000)) (= (x161 x23 x332) x457) (= x453 (div 115792089237316195423570985008687907853269984665640564039457584007913129639935 x544)) (= x411 (* x477 x520)) (= x469 (> x200 x62)) (= x467 (+ x220 x546)) (= 1000000000000000000000000000 x75) (= (div 115792089237316195423570985008687907853269984665640064039457584007913129639935 x200) x139) (= x411 x159) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x686 x705)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x125 x569)) (= x537 x119) (= x125 (div x540 994519296000000)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x520 x477)) (= (ite (not x152) 1 0) x23) (= (or x243 x568) x335) (= x705 x220) (= x372 x569) (= x243 (= 0 x200)) (= x509 x80) (= x467 x156) (= (div 115792089237316195423570985008687907853269984665640064039457584007913129639935 x200) x62) (= x594 (div x634 31536000)) (= x705 (div x638 2)) (> x620 0) (= (div x730 6) x80) (= (ite x401 1 0) x620) (= x102 (* x200 x544)) (= x730 (* x159 x594)) (= (div x87 1000000000000000000000000000) x634) (= (x325 (+ 500000000000000000000000000 x110)) x87) (= x535 (+ x509 x156)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x467 x80)) (= x520 (ite (< 2 x544) (x345 (- x544 2)) 0)) (< (* x594 x159) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x686 x546) (= x119 (div x102 31536000)) (= x360 (> x125 x139)) (= x233 (ite x335 1 0))))) (and (= x662 (x325 (+ x471 500000000000000000000000000))) (> x497 0) (= x499 (< x274 x294)) (= (= 0 x71) x339) (= x8 (mod (* x617 x595) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x57 (or x171 x339)) (= (= 0 x595) x291) (= x698 (> x617 x107)) (= (mod (* x617 x71) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x471) (= x5 (div 115792089237316195423570985008687907853269984665640064039457584007913129639935 x595)) (= (= 0 x544) x94) (= x660 (div x356 1000000000000000000000000000)) (= (x345 (- x274 x294)) x544) (= x370 (not x95)) (not x499) (= x356 (x325 (+ x8 500000000000000000000000000))) (= x409 (div x662 1000000000000000000000000000)) (= (or x370 x291) x684) (= x95 (> x617 x5)) (> x86 0) (= x497 (ite x684 1 0)) (= (div 115792089237316195423570985008687907853269984665640064039457584007913129639935 x71) x107) (= x171 (not x698)) (= (ite x57 1 0) x86)))) x363)))))
(assert (x186 x48))
(assert (x186 x693))
(assert (x186 x702))
(assert (not (= (+ 7 x45) 72057594037927936)))
(assert (not (= (+ x45 4) 340282366920938463463374607431768211455)))
(assert (not (= 52 (+ x45 5))))
(assert (x186 x252))
(assert (=> (>= 10000 x700) (not (= (x89 x180 52) x700))))
(assert (=> (<= x352 10000) (not (= x352 (+ 3 x45)))))
(assert (not (= 6582018229189043197315758676582005330734049138558148258257960960 (+ x45 8))))
(assert (x186 x99))
(assert (not (= (+ x45 2) (+ 8 x45))))
(assert (=> (>= 10000 x700) (not (= (+ 5 x45) x700))))
(assert (=> (<= x253 10000) (not (= (+ x45 8) x253))))
(assert (not (= (+ 4 x45) 1769207620)))
(assert (not (= 12865787693035132824841220556520878650363331629515618226606398223101458848 (+ x45 6))))
(assert (not (= 80397878463760440755375692149700041695399247739548614023716483005714108776448 (+ x45 3))))
(assert (not (= (+ x45 3) 340282366920938463463374607431768211456)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (+ x45 3))))
(assert (not (= (+ x45 2) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x186 x607))
(assert (not (= (+ x45 2) 994519296000000)))
(assert (not (= 2054196882 (+ x45 1))))
(assert (not (= 340282366920938463463374607431768211456 (+ x45 6))))
(assert (x186 x261))
(assert (x186 x457))
(assert (=> (<= x3 10000) (not (= (+ x45 5) x3))))
(assert (=> (<= x298 10000) (not (= (+ 4 x45) x298))))
(assert (x186 x338))
(assert (not (= (+ x45 8) 1099511627776)))
(assert (x186 x233))
(assert (not (= (+ 7 x45) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= (and x716 (not x601)) x227))
(assert (=> (>= 10000 x180) (not (= x180 (+ 6 x45)))))
(assert (x115 x455))
(assert (=> (<= x298 10000) (not (= (+ 2 x45) x298))))
(assert (not (= (+ x45 1) 18446744073709551615)))
(assert (x186 x700))
(assert (=> (>= 10000 x180) (not (= (+ 8 x45) x180))))
(assert (not (= (+ 6 x45) 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x186 x289))
(assert (not (= (+ x45 3) 3440452482)))
(assert (=> (>= 10000 x3) (not (= x3 (+ 6 x45)))))
(assert (x115 1208907372870555465154560))
(assert (=> (>= 10000 x261) (not (= x261 (+ 8 x45)))))
(assert (= 0 (x475 x350)))
(assert (x186 x118))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ 8 x45))))
(assert (x186 x135))
(assert (=> (>= 10000 x298) (not (= x298 (x89 x180 52)))))
(assert (x186 x148))
(assert (=> (>= 10000 x293) (not (= (+ x45 8) x293))))
(assert (x420 x168))
(assert (x115 x13))
(assert (x186 x7))
(assert (x186 x458))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (+ 8 x45))))
(assert (x186 x34))
(assert (not (= 3166102818 (+ x45 1))))
(assert (=> (<= x539 10000) (not (= (+ x45 2) x539))))
(assert (not (= (+ 2 x45) 72057594037927936)))
(assert (x186 x663))
(assert (not (= (x89 x180 52) 1099511627776)))
(assert (x186 x150))
(assert (not (= 31536000 (+ x45 2))))
(assert (x186 x177))
(assert (not (= 1000000000000000000000000000 (+ 6 x45))))
(assert (x186 x402))
(assert (=> (>= 10000 x3) (not (= (+ 7 x45) x3))))
(assert (not (= (+ 5 x45) 74874610042509929465218460033027201126834042060343647393369405262880053395456)))
(assert (= x559 (and x295 x627)))
(assert (not (= 509899769 (+ x45 4))))
(assert (x186 x23))
(assert (not (= 509899769 (+ x45 2))))
(assert (not (= (+ 5 x45) 3302387176)))
(assert (x186 x366))
(assert (x186 x672))
(assert (x186 x389))
(assert (not (= (+ x45 1) 3512598611)))
(assert (x186 x357))
(assert (x186 x532))
(assert (=> (<= x143 10000) (not (= x143 (+ x45 8)))))
(assert (x186 x661))
(assert (not (= (+ x45 7) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (=> (<= x585 10000) (not (= (+ x45 3) x585))))
(assert (x321 x538))
(assert (x392 x261))
(assert (not (= 3166102818 (+ 5 x45))))
(assert (=> (>= 10000 x464) (not (= x464 (+ x45 5)))))
(assert (not (= (+ 2 x45) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= 1099511627775 (+ 8 x45))))
(assert (=> (>= 10000 x3) (not (= x3 (+ 8 x45)))))
(assert (not (= 1152921504606846976 (+ x45 7))))
(assert (not (= 1099511627775 (+ x45 1))))
(assert (not (= (+ 8 x45) 994519296000000)))
(assert (not (= 12865787693035132824841220556520878650363331629515618226606398223101458848 (+ 3 x45))))
(assert (=> (>= 10000 x605) (not (= (+ x45 1) x605))))
(assert (x186 x166))
(assert (not (= (x89 x180 52) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (x186 x202))
(assert (not (= (+ x45 1) 274184521717934524641157099916833587349)))
(assert (not (= (+ 3 x45) (+ x45 2))))
(assert (x508 x178))
(assert (x508 x649))
(assert (x392 x298))
(assert (x186 x642))
(assert (x186 x725))
(assert (not (= (+ x45 3) (+ 4 x45))))
(assert (not (= 1769207620 (+ x45 3))))
(assert (x186 x13))
(assert (= (=> (and (= x442 (or x210 x412)) (= (= x595 0) x210) (= x459 (< x1 x556)) (= x174 (mod (* x595 x556) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1 (div 115792089237316195423570985008687907853269984665640064039457584007913129639935 x595)) (not x201) (= (x161 340282366920938463463374607431768211455 x168) x257) (> x216 0) (= x412 (not x459)) (= x168 (div x76 1000000000000000000000000000)) (= (x325 (+ 500000000000000000000000000 x174)) x76) (= x71 x168) (= x201 (< 340282366920938463463374607431768211455 x168)) (= (ite x442 1 0) x216)) x468) x103))
(assert (x186 x461))
(assert (= x91 (=> (= x195 0) x239)))
(assert (x186 x54))
(assert (not (= (+ x45 8) 3214050684)))
(assert (x186 x474))
(assert (x186 x449))
(assert (not (= 18446744073709551615 (+ x45 4))))
(assert (x186 x446))
(assert (= (and (not x17) x264) x696))
(assert (not (= (+ 5 x45) 576460752303423488)))
(assert (x186 x265))
(assert (x186 x69))
(assert (not (= (x89 x180 52) 1461501637330902918203684832716283019655932542975)))
(assert (x186 x44))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ 5 x45))))
(assert (not (= (+ x45 3) 10894474682274239493831243662817379401261526446360622092269559273883068006400)))
(assert (not (= 500000000000000000000000000 (+ 7 x45))))
(assert (=> (>= 10000 x180) (not (= x180 (+ 7 x45)))))
(assert (x186 x498))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ x45 1))))
(assert (x392 x277))
(assert (not (= (x89 x180 52) 340282366920938463463374607431768211456)))
(assert (= (and x111 (not x737)) x506))
(assert (=> (>= 10000 x261) (not (= (+ x45 6) x261))))
(assert (x186 x20))
(assert (not (= 2054196882 (+ x45 8))))
(assert (not (= (+ 5 x45) 509899769)))
(assert (not (= 500000000000000000000000000 (+ 1 x45))))
(assert (not (= 1461501637330902918203684832716283019655932542975 (+ x45 1))))
(assert (x115 144115188075855872))
(assert (x186 x453))
(assert (= x505 (=> (and (and (= x532 x731) (= x17 (< 0 x386)) (= (= x84 0) x78) (<= 0 x252) (= x462 (x325 (+ 32 x177))) (= x326 (x325 (+ 32 x472))) (= x188 (x325 (+ x462 32))) (= x148 (x325 (+ 4 x429))) (<= 0 x711) (<= x711 340282366920938463463374607431768211455) (= x472 (x325 (+ x374 32))) (not x78) (= x671 x40) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x136) (and (= true (<= x136 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x136))) x616) (< (+ x40 x532) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< x711 340282366920938463463374607431768211456) (= (x325 (+ 32 x188)) x374) (= x598 (x325 (+ 32 x148))) (not x616) (= (x325 (+ 31 x136)) x329) (= x330 (x161 115792089237316195423570985008687907853269984665640564039457584007913129639904 x329)) (= x711 (x676 x379)) (= x252 (x561 x308)) (= x308 (+ x646 1)) (>= 1461501637330902918203684832716283019655932542975 x252) (= (+ x671 x731) x390) (= (x565 x357) x40) (= x177 (x325 (+ x144 32))) (= x144 (x325 (+ x598 32))) (< x252 1461501637330902918203684832716283019655932542976) (= (x325 (+ x330 x357)) x221) (= (x325 (+ 288 x221)) x429) (= x379 (+ 1 x308))) (or (and x17 (and (> 4294967296 x34) (= x241 1))) (and (= x241 x386) (not x17)))) x647)))
(assert (=> (>= 10000 x539) (not (= (+ 5 x45) x539))))
(assert (not (= (+ 6 x45) 509899769)))
(assert (= (=> (and (or (and x599 (and (> 4294967296 x302) (= x447 1))) (and (not x599) (= x624 x447))) (and (>= 255 x691) (= x242 (> (x704 x261) 0)) (< x20 340282366920938463463374607431768211456) (not (= x539 x585)) x424 (= x461 (x393 x605)) (= (x629 x534) x274) (= x523 x648) (= x194 (> (x704 x293) 0)) (not (= x591 3214050684)) (= x234 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x218)) (< x218 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x218))) (not (= x293 x352)) (not (= x293 x539)) (>= 1461501637330902918203684832716283019655932542975 x605) (<= 0 x726) (not (< x591 3166102818)) (= x327 (x393 x298)) (>= x408 0) (= (> (x704 x692) 0) x383) (>= x648 0) (= x180 x166) (not (= x143 x692)) (not x234) (>= 1461501637330902918203684832716283019655932542975 x648) (not (= x605 x352)) (not (= x692 x3)) (<= 0 x265) (not (= x253 x692)) (<= 0 x586) (= (> (x704 x539) 0) x317) (>= 1461501637330902918203684832716283019655932542975 x155) (>= x202 0) (= 1769207620 x83) (= x604 (x704 x352)) (= (x161 1208907372870555465154560 x538) x158) (< x150 1461501637330902918203684832716283019655932542976) x224 (not (= x539 x277)) (<= x143 1461501637330902918203684832716283019655932542975) (= x560 100) (not (= x261 x692)) (>= x182 0) (> 340282366920938463463374607431768211456 x285) x500 (= x518 (x397 x387)) (not (= x293 x692)) (not (= x293 x298)) (= x557 false) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x717)) (< x717 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x717))) (>= 340282366920938463463374607431768211455 x20) x723 (>= x491 0) (not (= x293 x585)) (< 0 x3) (>= 255 x389) (>= x511 0) (= (x393 x277) x446) (= (x310 x45) x538) (= x424 (< 0 (x704 x700))) (>= 1461501637330902918203684832716283019655932542975 x253) (not (= x700 x277)) (<= x298 1461501637330902918203684832716283019655932542975) (not (= x352 x585)) (> x298 0) (= (x89 x180 52) x391) (= 1472 x269) (= x709 (x393 x3)) (= false x284) x381 (>= 1461501637330902918203684832716283019655932542975 x511) (not (= x261 x539)) (< 0 x605) (>= 340282366920938463463374607431768211455 x265) (not (= x253 x277)) (= x589 2) (not (= x298 x277)) (= x487 (x510 x158 64)) (not (= x253 x261)) (>= x305 0) (>= x735 0) (<= 0 x709) (= x384 (+ 1 x513)) (>= 1461501637330902918203684832716283019655932542975 x539) (= x267 x354) (= x305 (x393 x539)) (= x248 (x393 x253)) (<= x4 1461501637330902918203684832716283019655932542975) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x582) true) (> x582 67)) (not (= x352 x143)) (<= 0 x274) (not (= x83 509899769)) (not (= x143 x293)) (>= x464 0) (not (= x591 3293254135)) (not (= x539 x3)) (= x513 (+ x387 2)) (not (= x605 x277)) (= x717 (x345 (- x582 4))) (>= x446 0) (not (= x143 x585)) (= (< 0 (x704 x3)) x381) (<= x184 1461501637330902918203684832716283019655932542975) (<= 0 x285) (not (= x700 x585)) (= x137 (> (x704 x605) 0)) (not (= x539 x352)) (not (= 3166102818 x591)) (= 128 x366) (>= 1461501637330902918203684832716283019655932542975 x726) (>= x96 0) (not (= x3 x352)) (not (= x605 x293)) (<= x470 255) x194 (>= x595 0) (>= 1461501637330902918203684832716283019655932542975 x180) (= x29 x180) (<= x150 1461501637330902918203684832716283019655932542975) (not (= x585 x253)) (= (x485 x646) x150) (not (= x143 x277)) (= (< 0 (x704 x253)) x500) (not (= x3 x700)) (not (= x539 x298)) (not (= x83 1089035750)) (= (x393 x585) x450) (= x180 x703) (>= x715 0) (not (= x277 x352)) (> x293 0) (> x261 0) (>= x4 0) (not (= x277 x261)) x137 (not (= x3 x585)) (not (= x352 x261)) (>= 1461501637330902918203684832716283019655932542975 x672) (= (= 0 x352) x373) (= x131 x735) (= (x393 x700) x714) (>= 255 x154) (> 1461501637330902918203684832716283019655932542976 x464) (<= 0 x250) (> 3512598611 x591) (<= 0 x327) (>= 1461501637330902918203684832716283019655932542975 x423) (<= 0 x389) (>= x538 0) (<= x277 1461501637330902918203684832716283019655932542975) (not (= x277 x293)) (<= 0 x558) (not (= x298 x261)) (<= 0 x20) (not x373) (<= 0 x423) x317 (> x143 0) x209 (not (= x700 x539)) (= x580 (x393 x352)) (not (= x261 x143)) (not (= x539 x253)) (= x633 (> (x704 x298) 0)) (= x312 (x393 x261)) (= (+ x384 1) x646) (not (> 4 x560)) (<= x585 1461501637330902918203684832716283019655932542975) (= x560 100) (>= 1099511627775 x274) (= x180 x208) (> 1461501637330902918203684832716283019655932542976 x609) (= x507 x4) (not (= x143 x253)) (<= 0 x10) (>= 1461501637330902918203684832716283019655932542975 x735) (= x180 x524) (not (= x352 x253)) (>= 1461501637330902918203684832716283019655932542975 x354) (<= x352 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x270) (not (= x605 x692)) (<= x700 1461501637330902918203684832716283019655932542975) (= (x704 x352) x721) (<= x464 1461501637330902918203684832716283019655932542975) (>= 18446744073709551615 x182) (not (= x692 x585)) (= x400 (x704 274184521717934524641157099916833587349)) (>= x470 0) (= false x639) (= (x393 x692) x32) (<= x688 65535) (<= 0 x154) (not (= x692 x298)) (not (= x298 x700)) (not (= x143 x3)) (not (= x261 x605)) (not (= 0 x400)) (not (= x605 x539)) (= x683 0) (not (= x605 x3)) (= x437 x180) (not (= x692 x700)) (= (+ x45 1) x15) (not (= x3 x293)) (>= 1461501637330902918203684832716283019655932542975 x661) (not (= x293 x253)) (= x45 x391) (< 0 x585) (<= x202 1099511627775) (= x464 (x651 x384)) (= x474 47697743078316515612600118454610093677384569027399280592730813262423046225920) (<= 0 x312) (>= 1461501637330902918203684832716283019655932542975 x692) (>= 1461501637330902918203684832716283019655932542975 x558) (not (= x605 x143)) (= (> x624 0) x599) (not (= x293 x700)) (<= 0 x461) (<= 0 x609) (> x277 0) (not (= x585 x277)) (>= x661 0) (= x324 3440452482) (>= x248 0) (< 0 x539) (<= 0 x150) (not (= x352 x692)) (<= 0 x580) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x538) (>= 255 x96) (not (= x700 x143)) (>= 340282366920938463463374607431768211455 x595) x383 x633 (not (= x298 x605)) (< 0 x721) (= x354 x121) (not (= x277 x692)) (= (x271 x387) x595) (< 0 x253) (>= 1461501637330902918203684832716283019655932542975 x293) (> x692 0) (= x11 false) (= x141 (< 0 (x704 x143))) (>= x518 0) (<= 0 x714) (not (= x298 x585)) x242 (<= x408 340282366920938463463374607431768211455) (not (= x261 x293)) (not (= x261 x3)) (not (= x352 x298)) (>= x450 0) (not (= x298 x143)) (not (< x582 4)) x141 (= (+ x387 1) x534) (not (= x591 3302387176)) (= x354 x405) (>= 340282366920938463463374607431768211455 x491) (not (< x591 2054196882)) (>= x688 0) (= x387 (+ x15 1)) (= 800 x458) (not (= x253 x3)) (= x232 x418) (= x218 (x345 (- x560 4))) (> 340282366920938463463374607431768211456 x595) (>= x691 0) (not (= x253 x700)) (>= x270 0) (= x164 x45) (= x354 x44) (not (= x261 x585)) (< x274 1099511627776) (>= 1461501637330902918203684832716283019655932542975 x609) (<= 0 x672) (not (= x539 x143)) (<= x261 1461501637330902918203684832716283019655932542975) (not (= x298 x253)) (not (= x700 x605)) (= (x393 x143) x16) (= x609 (x128 x513)) (not (= x352 x700)) (>= 255 x586) (< 0 x352) (>= 1461501637330902918203684832716283019655932542975 x250) (= (> (x704 x585) 0) x209) (>= x16 0) (= x285 (x608 x15)) (<= 0 x184) (> 340282366920938463463374607431768211456 x518) (= x683 x283) (not (= x692 x539)) (not (= x261 x700)) (< 0 x604) (= (< 0 (x704 x277)) x723) (= x715 (x393 x293)) (>= x155 0) (<= x518 340282366920938463463374607431768211455) (= (x279 x15) x20) (= (< 0 (x704 x352)) x224) (= x270 x507) (not (= x3 x277)) (>= 255 x10) (> x700 0) (not (= x585 x605)) (<= x285 340282366920938463463374607431768211455) (not (= x3 x298)) (not (= x253 x605)) (= x131 x368) (>= 1461501637330902918203684832716283019655932542975 x3) (<= 0 x32) (= 3440452482 x591))) x346) x416))
(assert (=> (>= 10000 x585) (not (= x585 (+ x45 8)))))
(assert (= x160 (or x435 (and x219 x494) (and x577 x573))))
(assert (x392 x3))
(assert (not (= (+ 4 x45) 1000000000000000000000000000)))
(assert (=> (<= x352 10000) (not (= x352 (+ 2 x45)))))
(assert (x186 x330))
(assert (x186 x188))
(assert (= x238 (or x12 x323)))
(assert (not (= 3214050684 (+ 6 x45))))
(assert (=> (>= 10000 x180) (not (= (+ x45 1) x180))))
(assert (not (= 3302387176 (+ x45 8))))
(assert (x186 x479))
(assert (=> (<= x261 10000) (not (= x261 (+ 3 x45)))))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (+ x45 3))))
(assert (x186 x236))
(assert (not (= 1099511627775 (+ 4 x45))))
(assert (not (= (+ 4 x45) 3214050684)))
(assert (= (and x388 x260) x611))
(assert (not (= (+ 8 x45) 47697743078316515612600118454610093677384569027399280592730813262423046225920)))
(assert (=> (>= 10000 x3) (not (= (+ x45 1) x3))))
(assert (x115 x436))
(assert (x186 x250))
(assert (x186 x326))
(assert (not (= 47697743078316515612600118454610093677384569027399280592730813262423046225920 (+ 1 x45))))
(assert (not (= (+ x45 2) 3302387176)))
(assert (x186 x407))
(assert (= x219 (or x394 x483)))
(assert (=> (>= 10000 x3) (not (= (+ x45 3) x3))))
(assert (not (= 72057594037927936 (+ x45 6))))
(assert (x186 x144))
(assert (x115 x687))
(assert (=> (>= 10000 x293) (not (= (+ 1 x45) x293))))
(assert (x186 x598))
(assert (not (= (+ 4 x45) (+ 8 x45))))
(assert (not (= 65535 (+ 5 x45))))
(assert (not (= 115792089237316195423570985008687907853269984665640064039457584007913129639935 (+ 5 x45))))
(assert (not (= 6582018229189043197315758676582005330734049138558148258257960960 (+ 5 x45))))
(assert (not (= 1089035750 (+ x45 5))))
(assert (x186 x462))
(assert (x186 x29))
(assert (= (and x716 x601) x483))
(assert (not (= 1152921504606846976 (+ 6 x45))))
(assert (not (= (+ x45 8) 18446744073709551615)))
(assert (not (= 576460752303423488 (+ 4 x45))))
(assert (=> (>= 10000 x352) (not (= x352 (+ x45 1)))))
(assert (= x64 (or (and x280 (not x636)) x288)))
(assert (x186 x724))
(assert (not (= 1000000000000000000000000000 (+ 7 x45))))
(assert (not (= 340282366920938463463374607431768211456 (+ x45 5))))
(assert (=> (>= 10000 x539) (not (= (+ x45 8) x539))))
(assert (not (= (x89 x180 52) 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (= x361 (and x737 x111)))
(assert (= x627 (or (and (not x304) x151) x251)))
(assert (not (= 80397878463760440755375692149700041695399247739548614023716483005714108776448 (+ x45 8))))
(assert (not (= (+ 1 x45) (+ 8 x45))))
(assert (not (= 1089035750 (+ 7 x45))))
(assert (= x419 (and (not x422) x85)))
(assert (=> (<= x253 10000) (not (= x253 (x89 x180 52)))))
(assert (x115 x23))
(assert (=> (<= x277 10000) (not (= (+ x45 7) x277))))
(assert (not (= 576460752303423488 (+ x45 3))))
(assert (not (= 509899769 (+ x45 1))))
(assert (x186 x476))
(assert (x186 x178))
(assert (not (= (+ 4 x45) 4294967296)))
(assert (not (= (+ x45 3) 74874610042509929465218460033027201126834042060343647393369405262880053395456)))
(assert (x186 x530))
(assert (x186 x437))
(assert (x186 x149))
(assert (not (= (+ 8 x45) 144115188075855872)))
(assert (not (= 71356987572919795984103299673912204194632180251134163011139925636576289226752 (+ x45 2))))
(assert (not (= 3166102818 (+ 8 x45))))
(assert (=> (<= x143 10000) (not (= (+ 3 x45) x143))))
(assert (not (= 1099511627776 (+ 3 x45))))
(assert (=> (<= x464 10000) (not (= x464 (+ x45 6)))))
(assert (not (= (+ x45 5) (+ x45 8))))
(assert (x186 x497))
(assert (not (= 340282366920938463463374607431768211455 (x89 x180 52))))
(assert (not (= (+ 4 x45) 1099511627776)))
(assert (x186 x24))
(assert (=> (>= 10000 x143) (not (= x143 (+ x45 6)))))
(assert (x186 x621))
(assert (not (= (+ 2 x45) 81391198934588725741764901232338779421906459474344603328544298677233738842112)))
(assert (x186 x232))
(assert (not (= 80397878463760440755375692149700041695399247739548614023716483005714108776448 (x89 x180 52))))
(assert (=> (<= x700 10000) (not (= (+ x45 2) x700))))
(assert (x186 x354))
(assert (x186 x464))
(assert (not (= (+ 5 x45) (+ 7 x45))))
(assert (not (= 144115188075855872 (+ x45 2))))
(assert (not (= 340282366920938463463374607431768211455 (+ x45 6))))
(assert (=> (>= 10000 x692) (not (= (+ 7 x45) x692))))
(assert (not (= (+ x45 5) (+ 6 x45))))
(assert (=> (>= 10000 x298) (not (= x298 (+ x45 6)))))
(assert (= x323 (and x64 x482)))
(assert (= (=> (and (and (= x675 (x666 x489)) (= (= x707 0) x108) (= x670 (< 0 x440)) (= (x325 (+ x689 31)) x530) (= (x325 (+ x584 4)) x702) (= x35 (x325 (+ x702 32))) (not x120) (= x722 (x161 115792089237316195423570985008687907853269984665640564039457584007913129639904 x530)) (= x584 (x325 (+ x722 x489))) (= x120 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x689)) (< x689 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x689))) (not x108)) (or (and x670 (and x240 (< x541 4294967296) (= x240 (= x39 (x134 x464))) x296 (= x296 (>= (x134 x700) x290)) (= x39 (x393 x464)) (= (x393 x700) x290))) (not x670))) x515) x641))
(assert (not (= 3214050684 (+ x45 2))))
(assert (not (= 1089035750 (+ 3 x45))))
(assert (not (= 1089035750 (+ x45 2))))
(assert (=> (<= x692 10000) (not (= x692 (+ 2 x45)))))
(assert (x115 x236))
(assert (x186 x518))
(assert (= (or x299 x185) x31))
(assert (not (= (+ 4 x45) 31536000)))
(assert (=> (<= x585 10000) (not (= (+ x45 2) x585))))
(assert (=> (>= 10000 x298) (not (= x298 (+ 8 x45)))))
(assert (x186 x431))
(assert (not (= 6582018229189043197315758676582005330734049138558148258257960960 (+ x45 4))))
(assert (not (= 3293254135 (+ x45 1))))
(assert (not (= 144115188075855872 (+ x45 1))))
(assert (x186 x447))
(assert (=> (<= x277 10000) (not (= (+ 2 x45) x277))))
(assert (x186 x581))
(assert (= (and x64 (not x482)) x12))
(assert (= (div x158 18446744073709551616) (x510 x158 64)))
(assert (not (= (+ 7 x45) 144115188075855872)))
(assert (x186 x230))
(assert (=> (<= x277 10000) (not (= (+ x45 3) x277))))
(assert (not (= 47697743078316515612600118454610093677384569027399280592730813262423046225920 (x89 x180 52))))
(assert (x186 x173))
(assert (=> (<= x180 10000) (not (= (+ x45 5) x180))))
(assert (x186 x496))
(assert (x186 x555))
(assert (not (= 81391198934588725741764901232338779421906459474344603328544298677233738842112 (+ 8 x45))))
(assert (x186 x589))
(assert (not (= (+ x45 1) 81391198934588725741764901232338779421906459474344603328544298677233738842112)))
(assert (x186 x396))
(assert (= (and x94 x307) x444))
(assert (x186 x691))
(assert (=> (>= 10000 x585) (not (= x585 (+ x45 1)))))
(assert (x186 x155))
(assert (x186 x350))
(assert (x392 x143))
(assert (not (= (+ 8 x45) 1152921504606846976)))
(assert (not (= (+ x45 4) 144115188075855872)))
(assert (x186 x133))
(assert (not (= 2054196882 (+ x45 5))))
(assert (x186 x703))
(assert (not (= 340282366920938463463374607431768211456 (+ x45 8))))
(assert (=> (<= x143 10000) (not (= x143 (+ x45 7)))))
(assert (x186 x190))
(assert (x186 x624))
(assert (x186 x285))
(assert (not (= (+ 7 x45) 288230376151711744)))
(assert (x186 x88))
(assert (not (= 18446744073709551615 (+ x45 6))))
(assert (not (= 31536000 (+ x45 8))))
(assert (x186 x341))
(assert (not (= (x89 x180 52) 1152921504606846976)))
(assert (not (= 31536000 (+ 5 x45))))
(assert (not (= (+ x45 6) (+ 4 x45))))
(assert (not (= (+ 2 x45) 1099511627775)))
(assert (x186 x660))
(assert (x186 x226))
(assert (not (= 1208907372870555465154560 (+ 6 x45))))
(assert (not (= (+ 2 x45) (x89 x180 52))))
(assert (not (= (x89 x180 52) 4294967296)))
(assert (not (= (+ 3 x45) 115792089237316195423570985008687907853269984665640564039457584007913129634935)))
(assert (not (= (+ x45 2) 288230376151711744)))
(assert (x186 x255))
(assert (not (= 74874610042509929465218460033027201126834042060343647393369405262880053395456 (+ 7 x45))))
(assert (=> (>= 10000 x261) (not (= (+ x45 5) x261))))
(assert (=> (>= 10000 x143) (not (= x143 (+ 2 x45)))))
(assert (=> (>= 10000 x253) (not (= (+ x45 5) x253))))
(assert (x186 x356))
(assert (x186 x619))
(assert (x186 x207))
(assert (not (= (+ 8 x45) 288230376151711744)))
(assert (not (= 10894474682274239493831243662817379401261526446360622092269559273883068006400 (+ 4 x45))))
(assert (not (= 52 (+ 1 x45))))
(assert (x186 x359))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ 6 x45))))
(assert (x186 x92))
(assert (x186 x605))
(assert (= x259 (or x640 x31)))
(assert (x186 x492))
(assert (not (= (+ x45 4) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x186 x114))
(assert (= x404 (and (not x247) x463)))
(assert (x186 x648))
(assert (not (= 3293254135 (+ 4 x45))))
(assert (not (= (+ x45 3) 18446744073709551615)))
(assert (not (= 1099511627775 (+ 5 x45))))
(assert (=> (>= 10000 x253) (not (= x253 (+ x45 3)))))
(assert (not (= 74874610042509929465218460033027201126834042060343647393369405262880053395456 (x89 x180 52))))
(assert (= x547 (=> (and (= x736 x562) (= x71 x426) (= (x161 1099511627775 x418) x380)) x654)))
(assert (x186 x121))
(assert (x186 x298))
(assert (not (= 1000000000000000000000000000 (+ x45 5))))
(assert (=> (>= 10000 x298) (not (= (+ x45 1) x298))))
(assert (x115 x206))
(assert (not (= 1089035750 (+ x45 4))))
(assert (x186 x596))
(assert (not (= 576460752303423488 (+ x45 1))))
(assert (x186 x8))
(assert (not (= 31536000 (x89 x180 52))))
(assert (not (= 2054196882 (+ x45 3))))
(assert (x186 x544))
(assert (x186 x429))
(assert (x186 x558))
(assert (not (= (+ 7 x45) 3512598611)))
(assert (not (= (+ 1 x45) (+ 7 x45))))
(assert (=> (<= x253 10000) (not (= (+ x45 2) x253))))
(assert (not (= (+ 2 x45) 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (+ 4 x45))))
(assert (x186 x709))
(assert (x186 x486))
(assert (not (= 1461501637330902918203684832716283019655932542976 (+ 6 x45))))
(assert (=> (<= x293 10000) (not (= (+ 5 x45) x293))))
(assert (not (= 1000000000000000000000000000 (+ x45 1))))
(assert (x186 x439))
(assert (= x463 (or x521 x38)))
(assert (x186 x595))
(assert (x527 x538))
(assert (=> (>= 10000 x539) (not (= (x89 x180 52) x539))))
(assert (not (= (+ 3 x45) 500000000000000000000000000)))
(assert (x186 x531))
(assert (x186 x16))
(assert (not (= (+ 1 x45) 340282366920938463463374607431768211456)))
(assert (x186 x143))
(assert (x186 x717))
(assert (not (= (+ 7 x45) 71356987572919795984103299673912204194632180251134163011139925636576289226752)))
(assert (x186 x503))
(assert (not (= (+ x45 1) (+ x45 2))))
(assert (x420 x72))
(assert (not (= (+ 5 x45) 274184521717934524641157099916833587349)))
(assert (=> (<= x277 10000) (not (= (+ x45 1) x277))))
(assert (x186 x623))
(assert (x392 x293))
(assert (x186 x705))
(assert (not (= (+ 5 x45) 3440452482)))
(assert (=> (<= x293 10000) (not (= x293 (x89 x180 52)))))
(assert (x186 x481))
(assert (not (= (+ x45 8) 52)))
(assert (x186 x564))
(assert (x186 x263))
(assert (=> (>= 10000 x464) (not (= (+ 3 x45) x464))))
(assert (not (= 4294967296 (+ x45 2))))
(assert (x186 x332))
(assert (not (= (+ 8 x45) (+ x45 4))))
(assert (x186 x281))
(assert (= (and (not x670) x18) x138))
(assert (x186 x512))
(assert (x186 x478))
(assert (x508 x13))
(assert (not (= (+ x45 1) 1152921504606846976)))
(assert (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (+ 4 x45))))
(assert (x186 x5))
(assert (not (= 12865787693035132824841220556520878650363331629515618226606398223101458848 (+ 8 x45))))
(assert (x186 x32))
(assert (=> (<= x352 10000) (not (= (+ x45 7) x352))))
(check-sat)
(exit)