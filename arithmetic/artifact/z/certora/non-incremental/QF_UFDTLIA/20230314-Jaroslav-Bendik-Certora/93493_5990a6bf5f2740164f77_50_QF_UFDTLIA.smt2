(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x1327 0)) (((x1520 (x1220 x1327) (x1169 x1327) (x630 x1327) (x1040 x1327) (x758 x1327) (x1472 x1327) (x210 Int)) (x900 (x1328 x1327) (x673 x1327) (x1363 x1327) (x426 x1327) (x894 x1327) (x371 x1327) (x397 x1327) (x192 Int)) (x547 (x443 x1327) (x1300 Int)) (x319 (x313 x1327) (x181 x1327) (x384 x1327) (x991 x1327) (x163 Int)) (x1088 (x1025 Int)) (x1162 (x1240 x1327) (x811 x1327) (x161 x1327) (x1287 x1327) (x1111 x1327) (x368 Int)) (x1466 (x1330 x1327) (x390 x1327) (x202 x1327) (x708 Int)) (x340 (x1059 x1327) (x753 x1327) (x230 Int)))))
(declare-fun x747 () Int)
(declare-fun x1356 () Int)
(declare-fun x687 () Int)
(declare-fun x404 () Int)
(declare-fun x382 () Bool)
(declare-fun x1136 () Bool)
(declare-fun x1305 () Int)
(declare-fun x452 () Int)
(declare-fun x314 () Bool)
(declare-fun x655 () Bool)
(declare-fun x1452 () Int)
(declare-fun x1326 () Bool)
(declare-fun x171 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x792 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x857 () Bool)
(declare-fun x1183 () Int)
(declare-fun x243 () Bool)
(declare-fun x421 () Int)
(declare-fun x984 () Bool)
(declare-fun x632 () Int)
(declare-fun x490 () Int)
(declare-fun x1155 () x1327)
(declare-fun x554 () Bool)
(declare-fun x12 () Int)
(declare-fun x525 () Bool)
(declare-fun x1116 () x1327)
(declare-fun x1294 () Int)
(declare-fun x555 () Int)
(declare-fun x293 () Int)
(declare-fun x1370 () Int)
(declare-fun x588 () Int)
(declare-fun x1175 () Int)
(declare-fun x906 () Bool)
(declare-fun x248 () Int)
(declare-fun x1364 () Int)
(declare-fun x552 () Int)
(declare-fun x1438 () Bool)
(declare-fun x1204 () Int)
(declare-fun x1289 () Bool)
(declare-fun x579 () Int)
(declare-fun x287 (x1327) Int)
(declare-fun x286 () Bool)
(declare-fun x285 () Bool)
(declare-fun x1434 () Int)
(declare-fun x395 () Int)
(declare-fun x713 () Int)
(declare-fun x1383 () Int)
(declare-fun x208 () Bool)
(declare-fun x1102 () Int)
(declare-fun x1384 () Int)
(declare-fun x411 () Int)
(declare-fun x905 () Bool)
(declare-fun x245 () Int)
(declare-fun x266 () Int)
(declare-fun x484 () Bool)
(declare-fun x149 () Bool)
(declare-fun x927 () Bool)
(declare-fun x648 () Int)
(declare-fun x93 () Bool)
(declare-fun x1473 (x1327) Int)
(declare-fun x771 () Int)
(declare-fun x751 () Bool)
(declare-fun x616 () Int)
(declare-fun x446 () Int)
(declare-fun x1299 () Int)
(declare-fun x1214 () Bool)
(declare-fun x1223 () Int)
(declare-fun x90 (Int) Int)
(declare-fun x1280 () Bool)
(declare-fun x1133 () x1327)
(declare-fun x1303 () Bool)
(declare-fun x1487 () Bool)
(declare-fun x659 () Bool)
(declare-fun x1157 () Bool)
(declare-fun x381 () Bool)
(declare-fun x889 () Int)
(declare-fun x870 () Int)
(declare-fun x1443 () Bool)
(declare-fun x483 () Bool)
(declare-fun x845 () Bool)
(declare-fun x29 (Int) Int)
(declare-fun x745 () Int)
(declare-fun x668 () Bool)
(declare-fun x846 () Bool)
(declare-fun x1194 () Int)
(declare-fun x531 () Int)
(declare-fun x199 () Int)
(declare-fun x652 () Bool)
(declare-fun x856 () Int)
(declare-fun x434 () Int)
(declare-fun x252 () Int)
(declare-fun x107 () Bool)
(declare-fun x1248 () Int)
(declare-fun x1115 () Bool)
(declare-fun x249 () Bool)
(declare-fun x1344 () Int)
(declare-fun x1012 () Int)
(declare-fun x589 () Int)
(declare-fun x617 (Int) Int)
(declare-fun x195 () Int)
(declare-fun x1379 () x1327)
(declare-fun x1245 () Int)
(declare-fun x1114 () Int)
(declare-fun x1246 () Int)
(declare-fun x1394 () Bool)
(declare-fun x1396 () Int)
(declare-fun x526 () Bool)
(declare-fun x719 () Bool)
(declare-fun x665 (Int) Int)
(declare-fun x53 () Int)
(declare-fun x686 () Bool)
(declare-fun x1483 () Bool)
(declare-fun x82 () Int)
(declare-fun x1036 () Bool)
(declare-fun x669 () Int)
(declare-fun x635 () Bool)
(declare-fun x716 () x1327)
(declare-fun x122 () Int)
(declare-fun x259 (Int) Int)
(declare-fun x485 () Bool)
(declare-fun x765 () Bool)
(declare-fun x626 () Int)
(declare-fun x79 () Int)
(declare-fun x221 () Int)
(declare-fun x1168 () Bool)
(declare-fun x564 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x338 () Bool)
(declare-fun x329 () Bool)
(declare-fun x620 () Int)
(declare-fun x840 () Bool)
(declare-fun x256 () Int)
(declare-fun x234 () Bool)
(declare-fun x1148 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x1374 () Bool)
(declare-fun x770 () Int)
(declare-fun x1061 () Int)
(declare-fun x1502 () Int)
(declare-fun x1459 () Int)
(declare-fun x481 (x1327) Int)
(declare-fun x1425 () Bool)
(declare-fun x1334 () Int)
(declare-fun x448 () Int)
(declare-fun x874 () Int)
(declare-fun x990 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x369 () Int)
(declare-fun x995 () Bool)
(declare-fun x229 () Int)
(declare-fun x114 () Int)
(declare-fun x1281 () Int)
(declare-fun x651 () Bool)
(declare-fun x1433 () Int)
(declare-fun x1147 () Bool)
(declare-fun x809 () Bool)
(declare-fun x972 () Int)
(declare-fun x851 () Bool)
(declare-fun x903 () Int)
(declare-fun x971 () Bool)
(declare-fun x928 (Int Int) Int)
(declare-fun x760 () Int)
(declare-fun x307 () Bool)
(declare-fun x1219 () Int)
(declare-fun x315 () Bool)
(declare-fun x24 () Int)
(declare-fun x930 () Int)
(declare-fun x944 () Int)
(declare-fun x1386 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x950 () Bool)
(declare-fun x1249 () Int)
(declare-fun x108 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x55 () Bool)
(declare-fun x932 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x1049 () Bool)
(declare-fun x152 () Bool)
(declare-fun x523 () Bool)
(declare-fun x789 () x1327)
(declare-fun x505 () Int)
(declare-fun x279 () Int)
(declare-fun x1360 () Int)
(declare-fun x945 () x1327)
(declare-fun x454 () Bool)
(declare-fun x126 () Int)
(declare-fun x533 () Bool)
(declare-fun x720 () Int)
(declare-fun x942 () Int)
(declare-fun x1349 () Bool)
(declare-fun x1117 () Int)
(declare-fun x913 () Int)
(declare-fun x897 () Int)
(declare-fun x294 () Bool)
(declare-fun x1004 () Bool)
(declare-fun x1284 () Int)
(declare-fun x392 () Int)
(declare-fun x1437 () Bool)
(declare-fun x798 () Bool)
(declare-fun x388 () Bool)
(declare-fun x539 () Int)
(declare-fun x1500 () Bool)
(declare-fun x1317 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x200 () Bool)
(declare-fun x218 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x109 () Int)
(declare-fun x572 () Int)
(declare-fun x121 () Int)
(declare-fun x346 () Bool)
(declare-fun x235 () Int)
(declare-fun x177 () Bool)
(declare-fun x393 () Int)
(declare-fun x1130 () Int)
(declare-fun x1505 () Int)
(declare-fun x232 () Bool)
(declare-fun x662 () Int)
(declare-fun x888 (x1327) Int)
(declare-fun x1212 () Int)
(declare-fun x9 () Int)
(declare-fun x646 () Int)
(declare-fun x521 () Bool)
(declare-fun x1252 () Int)
(declare-fun x166 (x1327) Int)
(declare-fun x1264 () Int)
(declare-fun x1333 () Bool)
(declare-fun x373 () Int)
(declare-fun x438 () Int)
(declare-fun x806 () Int)
(declare-fun x111 () Bool)
(declare-fun x1023 () Int)
(declare-fun x4 () Int)
(declare-fun x715 () Bool)
(declare-fun x1267 () Int)
(declare-fun x463 () Bool)
(declare-fun x953 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x215 () Int)
(declare-fun x1039 () Int)
(declare-fun x631 () Int)
(declare-fun x128 (x1327) Int)
(declare-fun x1446 () Bool)
(declare-fun x568 () Bool)
(declare-fun x203 () Int)
(declare-fun x1037 () Int)
(declare-fun x1103 () Bool)
(declare-fun x755 () Bool)
(declare-fun x213 () Bool)
(declare-fun x1179 () Int)
(declare-fun x86 () Bool)
(declare-fun x915 () Bool)
(declare-fun x408 () Bool)
(declare-fun x410 () Bool)
(declare-fun x1200 () Int)
(declare-fun x960 () Bool)
(declare-fun x902 () Bool)
(declare-fun x1229 () Int)
(declare-fun x1449 () Int)
(declare-fun x1217 () Int)
(declare-fun x1397 () Bool)
(declare-fun x600 () Int)
(declare-fun x455 () Bool)
(declare-fun x545 () Int)
(declare-fun x703 () Bool)
(declare-fun x476 () Int)
(declare-fun x667 () Int)
(declare-fun x1416 () Bool)
(declare-fun x16 () Bool)
(declare-fun x854 () Int)
(declare-fun x445 () Bool)
(declare-fun x1091 () Int)
(declare-fun x1231 () Int)
(declare-fun x468 () Bool)
(declare-fun x360 () Bool)
(declare-fun x1377 () Int)
(declare-fun x347 () Bool)
(declare-fun x958 () Int)
(declare-fun x838 () Int)
(declare-fun x1471 () x1327)
(declare-fun x41 () Bool)
(declare-fun x819 () Bool)
(declare-fun x1368 () Int)
(declare-fun x560 () Int)
(declare-fun x260 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x729 () Int)
(declare-fun x420 () Bool)
(declare-fun x683 () Int)
(declare-fun x1058 () Int)
(declare-fun x955 () Int)
(declare-fun x226 () Bool)
(declare-fun x536 () Int)
(declare-fun x499 () x1327)
(declare-fun x1031 () Int)
(declare-fun x1387 () Bool)
(declare-fun x1381 () Bool)
(declare-fun x219 () Int)
(declare-fun x207 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x1476 () Int)
(declare-fun x804 () Bool)
(declare-fun x566 () Int)
(declare-fun x1301 () Bool)
(declare-fun x1427 () Bool)
(declare-fun x27 () Int)
(declare-fun x724 () Bool)
(declare-fun x25 () Int)
(declare-fun x841 () Int)
(declare-fun x1302 () Int)
(declare-fun x1335 () Bool)
(declare-fun x459 () Int)
(declare-fun x342 () Bool)
(declare-fun x738 () Int)
(declare-fun x977 () Int)
(declare-fun x333 () Int)
(declare-fun x580 () Int)
(declare-fun x75 () Int)
(declare-fun x271 () Int)
(declare-fun x1235 () Int)
(declare-fun x1132 () Bool)
(declare-fun x1213 () Int)
(declare-fun x697 () Int)
(declare-fun x1325 () Int)
(declare-fun x354 () Int)
(declare-fun x1408 () Bool)
(declare-fun x645 () Int)
(declare-fun x334 () Bool)
(declare-fun x160 () Bool)
(declare-fun x1027 () Bool)
(declare-fun x1211 () Int)
(declare-fun x417 () Int)
(declare-fun x994 () Bool)
(declare-fun x18 () Int)
(declare-fun x282 () Bool)
(declare-fun x998 () Bool)
(declare-fun x1021 () Int)
(declare-fun x48 () Int)
(declare-fun x274 () Bool)
(declare-fun x701 () Int)
(declare-fun x170 () Int)
(declare-fun x1373 () Int)
(declare-fun x439 () Int)
(declare-fun x479 () Int)
(declare-fun x355 () Bool)
(declare-fun x520 () Int)
(declare-fun x605 () Int)
(declare-fun x987 () Bool)
(declare-fun x227 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x1128 () Int)
(declare-fun x272 () Bool)
(declare-fun x291 () Int)
(declare-fun x1187 () Bool)
(declare-fun x598 () Int)
(declare-fun x803 () Int)
(declare-fun x957 () Int)
(declare-fun x396 () Int)
(declare-fun x581 () Bool)
(declare-fun x1524 () x1327)
(declare-fun x305 () Bool)
(declare-fun x711 () Int)
(declare-fun x1163 () Int)
(declare-fun x1297 () Bool)
(declare-fun x1191 () Int)
(declare-fun x117 () Int)
(declare-fun x1034 () Bool)
(declare-fun x125 () Bool)
(declare-fun x74 () Bool)
(declare-fun x5 (x1327) Int)
(declare-fun x379 () Int)
(declare-fun x1086 () Bool)
(declare-fun x831 () Int)
(declare-fun x254 () Bool)
(declare-fun x28 (Int) Int)
(declare-fun x69 () Int)
(declare-fun x557 () Bool)
(declare-fun x834 (Int) Int)
(declare-fun x805 () Int)
(declare-fun x62 () Int)
(declare-fun x869 () Int)
(declare-fun x966 () Bool)
(declare-fun x817 () Bool)
(declare-fun x532 () Bool)
(declare-fun x1463 (Int) Int)
(declare-fun x444 () Int)
(declare-fun x875 () Bool)
(declare-fun x509 () Bool)
(declare-fun x947 () Int)
(declare-fun x1319 () Int)
(declare-fun x1118 () Int)
(declare-fun x608 () Int)
(declare-fun x764 () Bool)
(declare-fun x470 () Int)
(declare-fun x1185 () Bool)
(declare-fun x91 () Int)
(declare-fun x1475 () Int)
(declare-fun x222 () Bool)
(declare-fun x380 () Bool)
(declare-fun x1455 () Int)
(declare-fun x887 () Int)
(declare-fun x550 () Int)
(declare-fun x1511 () Int)
(declare-fun x440 () Int)
(declare-fun x1208 () Int)
(declare-fun x847 () Int)
(declare-fun x244 () Bool)
(declare-fun x264 () Bool)
(declare-fun x348 () Int)
(declare-fun x13 () Int)
(declare-fun x1216 () Bool)
(declare-fun x516 (x1327) Int)
(declare-fun x576 () Bool)
(declare-fun x664 () Int)
(declare-fun x45 () Int)
(declare-fun x1410 () Int)
(declare-fun x985 () Bool)
(declare-fun x84 () Int)
(declare-fun x1295 () Int)
(declare-fun x209 () Int)
(declare-fun x129 () Bool)
(declare-fun x1065 () Int)
(declare-fun x768 () Bool)
(declare-fun x848 () Int)
(declare-fun x787 () Int)
(declare-fun x176 () Int)
(declare-fun x1292 () Bool)
(declare-fun x699 () Int)
(declare-fun x937 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x1017 () Int)
(declare-fun x1514 () x1327)
(declare-fun x1015 () Bool)
(declare-fun x871 () Int)
(declare-fun x83 () Bool)
(declare-fun x964 () Int)
(declare-fun x1435 () Bool)
(declare-fun x1153 () Int)
(declare-fun x1054 () Int)
(declare-fun x493 () Int)
(declare-fun x211 () Bool)
(declare-fun x19 (x1327) Int)
(declare-fun x1415 () Bool)
(declare-fun x597 () Int)
(declare-fun x46 () Bool)
(declare-fun x216 () Int)
(declare-fun x143 () Bool)
(declare-fun x1469 () Int)
(declare-fun x506 () x1327)
(declare-fun x1321 () Bool)
(declare-fun x51 () Int)
(declare-fun x548 () Int)
(declare-fun x766 () Int)
(declare-fun x1270 () Bool)
(declare-fun x852 () Int)
(declare-fun x277 () Bool)
(declare-fun x1239 () Int)
(declare-fun x1409 () Int)
(declare-fun x910 () Int)
(declare-fun x1205 () Int)
(declare-fun x1184 () Int)
(declare-fun x1331 () Bool)
(declare-fun x1506 () Bool)
(declare-fun x603 () Int)
(declare-fun x1498 () Int)
(declare-fun x541 () Int)
(declare-fun x327 () Int)
(declare-fun x1486 () Bool)
(declare-fun x387 () Bool)
(declare-fun x63 () Int)
(declare-fun x7 () Int)
(declare-fun x321 () Int)
(declare-fun x1508 () Int)
(declare-fun x1067 () Bool)
(declare-fun x42 () Bool)
(declare-fun x575 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x255 () Int)
(declare-fun x137 (Int) x1327)
(declare-fun x885 (x1327) Int)
(declare-fun x1262 () Int)
(declare-fun x1092 () Bool)
(declare-fun x1170 () Bool)
(declare-fun x1337 () Int)
(declare-fun x704 () Bool)
(declare-fun x85 () Bool)
(declare-fun x1414 () Int)
(declare-fun x859 () Int)
(declare-fun x663 () Bool)
(declare-fun x815 () Bool)
(declare-fun x775 () Int)
(declare-fun x407 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x99 () x1327)
(declare-fun x577 () Bool)
(declare-fun x101 () Bool)
(declare-fun x1338 () Bool)
(declare-fun x693 () Bool)
(declare-fun x1306 () Bool)
(declare-fun x797 () Bool)
(declare-fun x670 () Bool)
(declare-fun x492 () Bool)
(declare-fun x1399 () Int)
(declare-fun x220 () Bool)
(declare-fun x677 () Bool)
(declare-fun x658 () Int)
(declare-fun x778 () x1327)
(declare-fun x118 () Bool)
(declare-fun x185 () Int)
(declare-fun x37 () Bool)
(declare-fun x1431 () Int)
(declare-fun x835 () Int)
(declare-fun x882 () Int)
(declare-fun x524 () Bool)
(declare-fun x460 () Bool)
(declare-fun x488 () Int)
(declare-fun x191 () Int)
(declare-fun x292 () Int)
(declare-fun x590 () Int)
(declare-fun x26 (Int) Int)
(declare-fun x386 () Bool)
(declare-fun x1277 () Bool)
(declare-fun x169 () Int)
(declare-fun x1481 () Int)
(declare-fun x1467 () Bool)
(declare-fun x204 () Int)
(declare-fun x587 () Bool)
(declare-fun x1052 () Int)
(declare-fun x968 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x428 () Bool)
(declare-fun x1523 () Bool)
(declare-fun x350 () Int)
(declare-fun x139 (x1327) Int)
(declare-fun x1196 () Bool)
(declare-fun x661 () Bool)
(declare-fun x891 () Int)
(declare-fun x489 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x599 () Int)
(declare-fun x824 () Bool)
(declare-fun x324 () Int)
(declare-fun x513 () Int)
(declare-fun x1010 () Int)
(declare-fun x1274 () Int)
(declare-fun x1390 () Bool)
(declare-fun x473 () x1327)
(declare-fun x475 () Bool)
(declare-fun x864 (x1327) Int)
(declare-fun x196 () Bool)
(declare-fun x601 () Int)
(declare-fun x1225 () x1327)
(declare-fun x402 () Int)
(declare-fun x832 () Bool)
(declare-fun x425 () Int)
(declare-fun x1230 () Int)
(declare-fun x802 () Bool)
(declare-fun x1352 () Int)
(declare-fun x1041 () Int)
(declare-fun x238 () Int)
(declare-fun x769 () Int)
(declare-fun x458 () Int)
(declare-fun x759 () Int)
(declare-fun x1095 () Bool)
(declare-fun x102 () Int)
(declare-fun x363 () Bool)
(declare-fun x865 () Bool)
(declare-fun x786 () Bool)
(declare-fun x855 () Bool)
(declare-fun x736 () Int)
(declare-fun x881 () Int)
(declare-fun x925 () Int)
(declare-fun x136 () Int)
(declare-fun x647 () Bool)
(declare-fun x1215 () Bool)
(declare-fun x31 () Int)
(declare-fun x504 () Int)
(declare-fun x642 () Bool)
(declare-fun x744 () Int)
(declare-fun x1247 () Int)
(declare-fun x895 () x1327)
(declare-fun x979 () Bool)
(declare-fun x353 () Int)
(declare-fun x782 () Int)
(declare-fun x1082 () Int)
(declare-fun x466 () Bool)
(declare-fun x1035 () Int)
(declare-fun x1076 () Int)
(declare-fun x1403 () Int)
(declare-fun x790 () Int)
(declare-fun x349 () Bool)
(declare-fun x718 () Bool)
(declare-fun x1497 () Int)
(declare-fun x975 () Bool)
(declare-fun x893 () Int)
(declare-fun x487 () Int)
(declare-fun x1332 () Int)
(declare-fun x741 () Int)
(declare-fun x246 () Int)
(declare-fun x1110 () Int)
(declare-fun x1382 () Bool)
(declare-fun x441 () Bool)
(declare-fun x119 () Int)
(declare-fun x1238 (Int) Int)
(declare-fun x1385 () Int)
(declare-fun x542 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x1343 () Bool)
(declare-fun x1499 () Bool)
(declare-fun x825 () Bool)
(declare-fun x860 () Int)
(declare-fun x607 () x1327)
(declare-fun x690 () Int)
(declare-fun x644 () Int)
(declare-fun x549 () Int)
(declare-fun x1478 () Int)
(declare-fun x35 () Bool)
(declare-fun x1350 () Bool)
(declare-fun x71 () Bool)
(declare-fun x924 () Bool)
(declare-fun x1127 () Int)
(declare-fun x595 () Bool)
(declare-fun x361 () Bool)
(declare-fun x302 () Bool)
(declare-fun x456 () Bool)
(declare-fun x1186 () Bool)
(declare-fun x326 () Int)
(declare-fun x1140 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x1519 () Int)
(declare-fun x733 () Bool)
(declare-fun x1227 () Bool)
(declare-fun x666 () Int)
(declare-fun x546 () Bool)
(declare-fun x781 () Int)
(declare-fun x236 () Int)
(declare-fun x399 () Int)
(declare-fun x495 () Int)
(declare-fun x748 () Bool)
(declare-fun x432 () Int)
(declare-fun x795 () Bool)
(declare-fun x1484 () Bool)
(declare-fun x14 (Int) Int)
(declare-fun x1074 (x1327) Int)
(declare-fun x1008 () Int)
(declare-fun x1490 () Int)
(declare-fun x1154 () Bool)
(declare-fun x1173 () Int)
(declare-fun x1428 () Int)
(declare-fun x57 () Int)
(declare-fun x1448 () Int)
(declare-fun x876 () x1327)
(declare-fun x949 () Bool)
(declare-fun x267 (Int Int) Int)
(declare-fun x400 () Int)
(declare-fun x412 () Int)
(declare-fun x961 () Bool)
(declare-fun x140 () Bool)
(declare-fun x1138 () Int)
(declare-fun x1372 (Int) Int)
(declare-fun x1461 () Int)
(declare-fun x873 (Int Int) Int)
(declare-fun x1189 () Int)
(declare-fun x1177 () Bool)
(declare-fun x721 () Int)
(declare-fun x890 () Bool)
(declare-fun x877 () Int)
(declare-fun x934 () Int)
(declare-fun x528 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x816 () Bool)
(declare-fun x750 () Bool)
(declare-fun x1234 () Int)
(declare-fun x822 () Int)
(declare-fun x1318 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x1268 () Int)
(declare-fun x1412 () Bool)
(declare-fun x725 () Int)
(declare-fun x1504 () Bool)
(declare-fun x1126 () Bool)
(declare-fun x956 () Bool)
(declare-fun x276 () Int)
(declare-fun x799 () Bool)
(declare-fun x299 () Int)
(declare-fun x674 () Bool)
(declare-fun x97 () Bool)
(declare-fun x737 () Int)
(declare-fun x87 () Int)
(declare-fun x357 () Int)
(declare-fun x1011 () Int)
(declare-fun x190 () Bool)
(declare-fun x1272 () Bool)
(declare-fun x17 () Int)
(declare-fun x1522 () Int)
(declare-fun x43 () Int)
(declare-fun x1346 () Bool)
(declare-fun x880 () Bool)
(declare-fun x81 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x714 () Bool)
(declare-fun x917 () Bool)
(declare-fun x1429 (x1327) Int)
(declare-fun x1165 () Bool)
(declare-fun x225 () Int)
(declare-fun x540 () Bool)
(declare-fun x844 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x1232 () Int)
(declare-fun x610 () Int)
(declare-fun x1521 () Bool)
(declare-fun x183 () Int)
(declare-fun x233 () Bool)
(declare-fun x68 () Int)
(declare-fun x578 () x1327)
(declare-fun x1218 () Bool)
(declare-fun x884 () Int)
(declare-fun x1512 () Int)
(declare-fun x323 () Int)
(declare-fun x261 () Int)
(declare-fun x812 () Bool)
(declare-fun x634 () Int)
(declare-fun x1119 () Int)
(declare-fun x858 () Bool)
(declare-fun x172 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x180 () Int)
(declare-fun x678 () Int)
(declare-fun x779 () Bool)
(declare-fun x962 () Bool)
(declare-fun x486 () Int)
(declare-fun x112 () Int)
(declare-fun x633 () Bool)
(declare-fun x1398 () Int)
(declare-fun x650 () Int)
(declare-fun x1507 () Bool)
(declare-fun x424 () Bool)
(declare-fun x933 () Bool)
(declare-fun x682 () x1327)
(declare-fun x872 () Int)
(declare-fun x1112 () Int)
(declare-fun x11 () Int)
(declare-fun x1413 () Bool)
(declare-fun x1501 () Int)
(declare-fun x1282 () Int)
(declare-fun x70 (Int Int) Int)
(declare-fun x1043 () Int)
(declare-fun x1451 () Bool)
(declare-fun x148 () Bool)
(declare-fun x182 () Int)
(declare-fun x15 () Int)
(declare-fun x1479 (x1327) Int)
(declare-fun x1166 () Int)
(declare-fun x284 () Int)
(declare-fun x94 () Bool)
(declare-fun x1345 () Int)
(declare-fun x462 () Int)
(declare-fun x1298 () Bool)
(declare-fun x695 () Bool)
(declare-fun x77 () Int)
(declare-fun x1426 () Int)
(declare-fun x1171 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x992 () Int)
(declare-fun x684 (x1327) Int)
(declare-fun x896 () Int)
(declare-fun x967 () Bool)
(declare-fun x144 () Bool)
(declare-fun x777 () Int)
(declare-fun x1260 () Bool)
(declare-fun x375 () Bool)
(declare-fun x584 () Int)
(declare-fun x1030 () Bool)
(declare-fun x1518 () Int)
(declare-fun x767 () Bool)
(declare-fun x1309 () Bool)
(declare-fun x1310 (Int) Int)
(declare-fun x909 () Int)
(declare-fun x709 () Bool)
(declare-fun x364 () Bool)
(declare-fun x1495 () Int)
(declare-fun x973 () Bool)
(declare-fun x290 () Int)
(declare-fun x1055 () Bool)
(declare-fun x92 () Int)
(declare-fun x582 () Int)
(declare-fun x341 () Bool)
(declare-fun x50 () Int)
(declare-fun x124 () x1327)
(declare-fun x1070 () Bool)
(declare-fun x283 () Bool)
(declare-fun x33 () Bool)
(declare-fun x565 () Int)
(declare-fun x145 () Int)
(declare-fun x1489 () Bool)
(declare-fun x823 (Int) Int)
(declare-fun x1046 () Int)
(declare-fun x162 () Bool)
(declare-fun x296 () Bool)
(declare-fun x8 () Bool)
(declare-fun x251 () Int)
(declare-fun x559 () Bool)
(declare-fun x551 () Int)
(declare-fun x76 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x730 () Int)
(declare-fun x1087 () Int)
(declare-fun x1359 () Bool)
(declare-fun x978 () Bool)
(declare-fun x843 () Int)
(declare-fun x939 () Int)
(declare-fun x783 () Bool)
(declare-fun x275 () Bool)
(declare-fun x322 () Int)
(declare-fun x800 () Bool)
(declare-fun x174 (Int Int) Int)
(declare-fun x788 () Int)
(declare-fun x1285 () Bool)
(declare-fun x986 () Bool)
(declare-fun x734 () Bool)
(declare-fun x1251 () Int)
(declare-fun x159 () Int)
(declare-fun x184 () Int)
(declare-fun x1141 () Int)
(declare-fun x447 () Int)
(declare-fun x938 () Int)
(declare-fun x1001 () Bool)
(declare-fun x339 () Int)
(declare-fun x923 () Int)
(declare-fun x1304 () Bool)
(declare-fun x780 (x1327) Int)
(declare-fun x1510 () Bool)
(declare-fun x80 () Int)
(declare-fun x228 () Bool)
(declare-fun x592 () Int)
(declare-fun x197 () x1327)
(declare-fun x1341 () Int)
(declare-fun x78 () Int)
(declare-fun x1203 () Bool)
(declare-fun x821 () Bool)
(declare-fun x241 () Bool)
(declare-fun x38 () Int)
(declare-fun x940 () Bool)
(declare-fun x278 () x1327)
(declare-fun x147 () Bool)
(declare-fun x796 () Bool)
(declare-fun x1283 (x1327) Int)
(declare-fun x1509 () x1327)
(declare-fun x223 () Int)
(declare-fun x585 (Int) Int)
(declare-fun x3 () Int)
(declare-fun x30 () Int)
(declare-fun x1411 () Int)
(declare-fun x519 (x1327) Int)
(declare-fun x625 () Bool)
(declare-fun x22 () Bool)
(declare-fun x306 () Bool)
(declare-fun x1450 () Int)
(declare-fun x691 () Int)
(declare-fun x606 () Int)
(declare-fun x999 () Int)
(declare-fun x1526 () Int)
(declare-fun x258 () Int)
(declare-fun x517 () Int)
(declare-fun x993 () Int)
(declare-fun x100 () Int)
(declare-fun x976 () Bool)
(declare-fun x1444 () Bool)
(declare-fun x131 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x508 () Bool)
(declare-fun x772 () Int)
(declare-fun x405 () Int)
(declare-fun x449 () Int)
(declare-fun x963 () Bool)
(declare-fun x1090 () Int)
(declare-fun x168 () Bool)
(declare-fun x946 () Int)
(declare-fun x828 () x1327)
(declare-fun x948 () Bool)
(declare-fun x335 () Int)
(declare-fun x1078 () Int)
(declare-fun x1342 () Bool)
(declare-fun x115 () Int)
(declare-fun x1221 () Int)
(declare-fun x1019 () Bool)
(declare-fun x562 () Bool)
(declare-fun x827 () Int)
(declare-fun x1422 () Int)
(declare-fun x1094 () Bool)
(declare-fun x351 () Bool)
(declare-fun x1105 () Bool)
(declare-fun x431 () Bool)
(declare-fun x1492 () Int)
(declare-fun x593 () Bool)
(declare-fun x514 () Bool)
(declare-fun x367 () Bool)
(declare-fun x749 () Bool)
(declare-fun x527 () Bool)
(declare-fun x671 () Int)
(declare-fun x1488 () Int)
(declare-fun x320 () Int)
(declare-fun x450 () Int)
(declare-fun x156 () Int)
(declare-fun x653 () Bool)
(declare-fun x309 () Bool)
(declare-fun x58 () Int)
(declare-fun x1159 () Int)
(declare-fun x573 () Bool)
(declare-fun x837 () Bool)
(declare-fun x138 () Int)
(declare-fun x698 () Int)
(declare-fun x146 () Int)
(declare-fun x1254 () Bool)
(declare-fun x1237 () Int)
(declare-fun x609 () Int)
(declare-fun x23 () Int)
(declare-fun x829 () Int)
(declare-fun x1308 () Int)
(declare-fun x1378 () Int)
(declare-fun x1233 () Int)
(declare-fun x1371 () Bool)
(declare-fun x331 () Int)
(declare-fun x374 () Bool)
(declare-fun x1143 () Bool)
(declare-fun x756 () Int)
(declare-fun x726 () Bool)
(declare-fun x785 () Bool)
(declare-fun x621 () Int)
(declare-fun x615 () Bool)
(declare-fun x641 () Int)
(declare-fun x1365 () Int)
(declare-fun x60 () Bool)
(declare-fun x502 () Int)
(declare-fun x1513 () Int)
(declare-fun x480 () Bool)
(declare-fun x422 () Bool)
(declare-fun x694 () Bool)
(declare-fun x997 () Bool)
(declare-fun x943 (Int) Int)
(declare-fun x1400 () Bool)
(declare-fun x398 () x1327)
(declare-fun x1181 () Int)
(declare-fun x54 () Bool)
(declare-fun x952 () Int)
(declare-fun x614 () Int)
(declare-fun x301 () Bool)
(declare-fun x731 () Int)
(declare-fun x113 () Int)
(declare-fun x206 () Bool)
(declare-fun x643 () Int)
(declare-fun x1100 () Bool)
(declare-fun x813 () Int)
(declare-fun x311 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x498 () Int)
(declare-fun x534 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x1024 () Int)
(declare-fun x1256 () Bool)
(declare-fun x318 () Bool)
(declare-fun x453 () Bool)
(declare-fun x482 () Bool)
(declare-fun x727 () Int)
(declare-fun x1430 () Bool)
(declare-fun x1106 () Int)
(declare-fun x394 () Bool)
(declare-fun x442 () Bool)
(declare-fun x594 () Int)
(declare-fun x295 () Int)
(declare-fun x1250 () Int)
(declare-fun x494 () Bool)
(declare-fun x776 () Int)
(declare-fun x474 () Int)
(declare-fun x570 () Int)
(declare-fun x1158 () Int)
(declare-fun x178 () Int)
(declare-fun x194 () Int)
(declare-fun x133 (x1327) Int)
(declare-fun x898 () Int)
(declare-fun x1144 () Bool)
(declare-fun x1050 () Bool)
(declare-fun x660 () Int)
(declare-fun x561 () Int)
(declare-fun x710 () Int)
(declare-fun x88 () Int)
(declare-fun x1493 () Int)
(declare-fun x712 () Int)
(declare-fun x1517 () Int)
(declare-fun x1139 () Bool)
(declare-fun x116 () Int)
(declare-fun x461 () x1327)
(declare-fun x530 () Int)
(declare-fun x187 () Int)
(declare-fun x791 () Int)
(declare-fun x198 () Int)
(declare-fun x1210 () Int)
(declare-fun x569 () Int)
(declare-fun x189 () Int)
(declare-fun x496 () Int)
(declare-fun x414 () Int)
(declare-fun x316 () Int)
(declare-fun x689 () Bool)
(declare-fun x820 () Bool)
(declare-fun x47 () Bool)
(declare-fun x1439 () Bool)
(declare-fun x280 () Int)
(declare-fun x1395 () Int)
(declare-fun x1075 () Bool)
(declare-fun x878 () Bool)
(declare-fun x362 () Bool)
(declare-fun x132 () Int)
(declare-fun x515 () Int)
(declare-fun x867 () Int)
(declare-fun x916 () Bool)
(declare-fun x1314 () Int)
(declare-fun x130 () Int)
(declare-fun x863 () Bool)
(declare-fun x344 () Int)
(declare-fun x141 () Int)
(declare-fun x1432 () Int)
(declare-fun x954 () Bool)
(declare-fun x1456 () Int)
(declare-fun x1073 () Int)
(declare-fun x1440 () Bool)
(declare-fun x377 () Int)
(declare-fun x849 () Bool)
(declare-fun x1180 () Int)
(declare-fun x1014 () Bool)
(declare-fun x914 () Int)
(declare-fun x628 () Int)
(declare-fun x1084 () Bool)
(declare-fun x1329 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x1178 () Int)
(declare-fun x297 () Int)
(declare-fun x104 () Int)
(declare-fun x1389 () Int)
(declare-fun x372 () Int)
(declare-fun x988 () Int)
(declare-fun x1151 () Int)
(declare-fun x263 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x231 () Bool)
(declare-fun x201 () Bool)
(declare-fun x478 () Bool)
(declare-fun x39 () Int)
(declare-fun x224 () Int)
(declare-fun x391 () Bool)
(declare-fun x1263 () x1327)
(declare-fun x1353 () Bool)
(declare-fun x640 () Bool)
(declare-fun x1160 () Bool)
(declare-fun x735 () Int)
(declare-fun x1069 (Int Int) Int)
(declare-fun x1085 () Bool)
(declare-fun x681 () Int)
(declare-fun x1376 () Int)
(declare-fun x722 (x1327) Int)
(declare-fun x1207 () Bool)
(declare-fun x1259 () Bool)
(declare-fun x586 () Int)
(declare-fun x1193 () Bool)
(declare-fun x762 () Bool)
(declare-fun x717 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x883 () Int)
(declare-fun x105 () Bool)
(declare-fun x127 () Bool)
(declare-fun x830 () Int)
(declare-fun x1241 () Bool)
(declare-fun x774 () Int)
(declare-fun x365 () Int)
(declare-fun x95 () Int)
(declare-fun x376 () x1327)
(declare-fun x1470 () Int)
(declare-fun x165 () Int)
(declare-fun x742 () Bool)
(declare-fun x135 () Int)
(declare-fun x638 () Bool)
(declare-fun x836 () Int)
(declare-fun x543 () Bool)
(declare-fun x471 () Bool)
(declare-fun x270 () Int)
(declare-fun x34 () Int)
(declare-fun x1134 () Int)
(declare-fun x370 () Int)
(declare-fun x214 () x1327)
(declare-fun x974 () Bool)
(declare-fun x853 () Int)
(declare-fun x1369 () Bool)
(declare-fun x983 () Int)
(declare-fun x336 () Int)
(declare-fun x619 () Bool)
(declare-fun x537 () Int)
(declare-fun x250 () Int)
(declare-fun x1161 () Int)
(declare-fun x36 () Int)
(declare-fun x1176 () Bool)
(declare-fun x919 () Int)
(declare-fun x814 () Int)
(declare-fun x1392 () Int)
(declare-fun x503 () Int)
(declare-fun x253 () Bool)
(declare-fun x685 () Bool)
(declare-fun x1199 () Int)
(declare-fun x1002 () Int)
(declare-fun x1494 () Int)
(declare-fun x157 () Bool)
(declare-fun x1236 () Bool)
(declare-fun x325 () Bool)
(declare-fun x435 () Bool)
(declare-fun x1164 () Int)
(declare-fun x567 () Int)
(declare-fun x52 () Bool)
(declare-fun x1152 () Int)
(declare-fun x409 () Int)
(declare-fun x330 () Bool)
(declare-fun x981 () Bool)
(declare-fun x761 () Bool)
(declare-fun x1224 () Int)
(declare-fun x911 () Int)
(declare-fun x383 () Int)
(declare-fun x833 () Bool)
(declare-fun x403 () Bool)
(declare-fun x571 () Int)
(declare-fun x959 () Bool)
(declare-fun x289 () Bool)
(declare-fun x1276 () Int)
(declare-fun x1393 () Bool)
(declare-fun x553 () Bool)
(declare-fun x996 () Bool)
(declare-fun x1198 () Int)
(declare-fun x1146 () Int)
(declare-fun x752 () Bool)
(declare-fun x1362 () x1327)
(declare-fun x707 () Bool)
(declare-fun x1083 () Int)
(declare-fun x965 () Int)
(declare-fun x413 () Int)
(declare-fun x1417 () Int)
(declare-fun x1033 () Int)
(declare-fun x1125 () Int)
(declare-fun x1013 () Bool)
(declare-fun x303 () Bool)
(declare-fun x1190 () Int)
(declare-fun x1468 () Int)
(declare-fun x164 () Bool)
(declare-fun x886 () Int)
(declare-fun x688 () Bool)
(declare-fun x861 () Bool)
(declare-fun x692 () Int)
(declare-fun x239 () Bool)
(declare-fun x773 () Bool)
(declare-fun x1064 () Int)
(declare-fun x879 () Bool)
(declare-fun x612 () Bool)
(declare-fun x740 () Int)
(declare-fun x1079 () Bool)
(declare-fun x1340 () Bool)
(declare-fun x639 () Bool)
(declare-fun x583 () Int)
(declare-fun x186 () Int)
(declare-fun x510 () Int)
(declare-fun x1290 () Int)
(declare-fun x472 () Int)
(declare-fun x1197 () Int)
(declare-fun x1391 () Int)
(declare-fun x1354 () Int)
(declare-fun x491 () Bool)
(declare-fun x1099 () Int)
(declare-fun x1503 () Int)
(declare-fun x649 () Int)
(declare-fun x1060 () Int)
(declare-fun x237 () Bool)
(declare-fun x401 () Int)
(declare-fun x936 () Int)
(declare-fun x332 () Bool)
(declare-fun x1051 () Int)
(declare-fun x1293 () Int)
(declare-fun x1089 () Bool)
(declare-fun x596 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x1375 () Bool)
(declare-fun x1006 () Int)
(declare-fun x1336 () Int)
(declare-fun x1028 () Int)
(declare-fun x1454 () Int)
(declare-fun x415 () Bool)
(declare-fun x618 () Int)
(declare-fun x723 () Bool)
(declare-fun x1445 () Int)
(declare-fun x901 () Bool)
(declare-fun x1458 () Int)
(declare-fun x61 () Bool)
(declare-fun x73 () Int)
(declare-fun x1355 () Bool)
(define-fun x935 ((x1327 x1327) (x1081 Int)) x1327 (ite ((_ is x900) x1327) (x900 (x1328 x1327) (x673 x1327) (x1363 x1327) (x426 x1327) (x894 x1327) (x371 x1327) (x397 x1327) (+ x1081 (x192 x1327))) (ite ((_ is x1520) x1327) (x1520 (x1220 x1327) (x1169 x1327) (x630 x1327) (x1040 x1327) (x758 x1327) (x1472 x1327) (+ (x210 x1327) x1081)) (ite ((_ is x1162) x1327) (x1162 (x1240 x1327) (x811 x1327) (x161 x1327) (x1287 x1327) (x1111 x1327) (+ (x368 x1327) x1081)) (ite ((_ is x319) x1327) (x319 (x313 x1327) (x181 x1327) (x384 x1327) (x991 x1327) (+ (x163 x1327) x1081)) (ite ((_ is x1466) x1327) (x1466 (x1330 x1327) (x390 x1327) (x202 x1327) (+ x1081 (x708 x1327))) (ite ((_ is x340) x1327) (x340 (x1059 x1327) (x753 x1327) (+ (x230 x1327) x1081)) (ite ((_ is x547) x1327) (x547 (x443 x1327) (+ x1081 (x1300 x1327))) (x1088 (+ x1081 (x1025 x1327)))))))))))
(define-fun x310 ((x868 Int)) Int (ite (and (< x868 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x868 0)) x868 (- x868 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x810 ((x868 Int)) Int (ite (and (>= x868 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x868)) (+ x868 115792089237316195423570985008687907853269984665640564039457584007913129639936) x868))
(define-fun x1348 ((x868 Int)) Int (ite (and (>= x868 0) (< x868 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x868 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x868) (< x868 231584178474632390847141970017375815706539969331281128078915168015826259279872)) (- x868 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (> 0 x868) (>= x868 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x868 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x873 x868 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x1419 ((x10 Int)) Bool (and (>= x10 0) (< x10 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1192 ((x10 Int)) Bool (and (< x10 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x10)))
(define-fun x1150 ((x10 Int) (x427 Int)) Bool (=> (and (< 0 x427) (> x10 0)) (= (= (x174 (x1348 (x267 x10 x427)) x10) x427) (< (x267 x10 x427) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x1016 ((x10 Int) (x427 Int)) Bool (=> (and (not (= 0 x10)) (not (= 0 x427))) (and (= (x174 (x267 x10 x427) x10) x427) (= (x174 (x267 x10 x427) x427) x10))))
(define-fun x512 ((x10 Int) (x427 Int)) Bool (=> (and (< 0 x427) (> x10 0)) (= (> (x267 x10 x427) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x427 (x174 115792089237316195423570985008687907853269984665640564039457584007913129639935 x10)))))
(define-fun x1421 ((x10 Int) (x427 Int)) Bool (and (= (x1348 (x267 x10 (- x427 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1348 (x267 x10 x427))) (= (x1348 (x267 x10 x427)) (x1348 (x267 (- x10 115792089237316195423570985008687907853269984665640564039457584007913129639936) x427))) (= (x1348 (x267 (- x10 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x427 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1348 (x267 x10 x427)))))
(define-fun x951 ((x10 Int) (x427 Int)) Bool (and (=> (and (and (> x427 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x427)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x10) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x10))) (= (<= (x267 (- x10 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x427 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x174 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x427)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x10)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x427) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x427)) (and (> x10 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x10))) (= (>= (x267 x10 (- x427 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x427) (x174 57896044618658097711785492504343953926634992332820282019728792003956564819968 x10)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x10) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x10)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x427) (> x427 0))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x10) (x174 57896044618658097711785492504343953926634992332820282019728792003956564819968 x427)) (>= (x267 (- x10 115792089237316195423570985008687907853269984665640564039457584007913129639936) x427) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (=> (and (and (> x427 0) (<= x427 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (<= x10 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x10 0))) (= (<= x10 (x174 57896044618658097711785492504343953926634992332820282019728792003956564819967 x427)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x267 x10 x427))))))
(define-fun x1465 ((x10 Int)) Bool (and (= 0 (x267 x10 0)) (= (x267 0 x10) 0)))
(define-fun x1097 ((x10 Int)) Bool (and (= (x267 1 x10) x10) (= x10 (x267 x10 1))))
(define-fun x1257 ((x10 Int)) Bool (and (x1465 x10) (x1097 x10)))
(define-fun x1420 ((x10 Int) (x427 Int)) Bool (=> (and (< 0 x427) (> x10 0)) (and (>= (x174 x10 x427) 0) (<= (x174 x10 x427) x10))))
(define-fun x1195 ((x10 Int) (x427 Int)) Bool (=> (and (and (<= 0 x10) (< x10 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x427) (<= 1 x427))) (and (>= (x174 x10 x427) 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x174 x10 x427)))))
(define-fun x918 ((x10 Int) (x427 Int)) Bool (=> (and (> x427 1) (> x10 x427)) (> x10 (x174 x10 x427))))
(define-fun x818 ((x10 Int) (x427 Int)) Bool (=> (and (< 0 x10) (< 0 x427)) (= (= (x174 x10 x427) 0) (> x427 x10))))
(define-fun x205 ((x10 Int)) Bool (= 0 (x174 0 x10)))
(define-fun x262 ((x10 Int)) Bool (= x10 (x174 x10 1)))
(define-fun x89 ((x10 Int)) Bool (=> (not (= x10 0)) (= 1 (x174 x10 x10))))
(define-fun x1188 ((x10 Int)) Bool (and (x89 x10) (x205 x10) (x262 x10)))
(define-fun x1077 ((x10 Int) (x427 Int)) Bool (=> (and (> x427 0) (> x10 0)) (and (<= (x267 (x174 x10 x427) x427) x10) (> (x267 (x174 x10 x427) x427) (- x10 x427)))))
(define-fun x920 ((x10 Int) (x427 Int)) Bool (and (x1420 x10 x427) (x1195 x10 x427) (x818 x10 x427) (x918 x10 x427) (x1077 x10 x427)))
(define-fun x1255 ((x10 Int)) Bool (and (= x10 (x928 x10 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x10 (x928 115792089237316195423570985008687907853269984665640564039457584007913129639935 x10))))
(define-fun x268 ((x10 Int)) Bool (and (= 0 (x928 0 x10)) (= (x928 x10 0) 0)))
(define-fun x862 ((x10 Int)) Bool (= x10 (x928 x10 x10)))
(define-fun x406 ((x10 Int)) Bool (and (x268 x10) (x862 x10) (x1255 x10)))
(define-fun x807 ((x10 Int) (x427 Int)) Bool (= (x928 x427 x10) (x928 x10 x427)))
(define-fun x739 ((x10 Int) (x427 Int)) Bool (and (=> (>= x10 0) (>= x10 (x928 x10 x427))) (>= (x928 x10 x427) 0) (=> (>= x427 0) (<= (x928 x10 x427) x427))))
(define-fun x1485 ((x10 Int) (x427 Int)) Bool (and (x739 x10 x427) (x807 x10 x427)))
(define-fun x1271 ((x10 Int)) Bool (= (x1348 x10) (+ (x928 x10 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x873 x10 32))))
(define-fun x1388 ((x10 Int)) Bool (and (x1271 x10) (x1485 x10 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x801 ((x10 Int) (x427 Int)) Bool (and (> x427 (x873 x10 x427)) (<= 0 (x873 x10 x427))))
(define-fun x982 ((x10 Int) (x427 Int)) Bool (=> (and (< 0 x427) (>= x10 0)) (= (= x10 (x873 x10 x427)) (> x427 x10))))
(define-fun x679 ((x10 Int) (x427 Int)) Bool (=> (and (and (>= x10 x427) (< x10 (+ x427 x427))) (> x427 0)) (= (x873 x10 x427) (- x10 x427))))
(define-fun x433 ((x10 Int)) Bool (= 0 (x873 0 x10)))
(define-fun x1266 ((x10 Int)) Bool (= (x873 x10 1) 0))
(define-fun x1323 ((x10 Int)) Bool (= 0 (x873 x10 x10)))
(define-fun x908 ((x10 Int)) Bool (and (x1266 x10) (x1323 x10) (x433 x10)))
(define-fun x705 ((x10 Int) (x427 Int)) Bool (= (x267 x10 x427) (x267 x427 x10)))
(define-fun x1201 ((x10 Int) (x427 Int)) Bool (and (=> (and (> x427 0) (> x10 0)) (< 0 (x267 x10 x427))) (=> (and (> x10 0) (> 0 x427)) (> 0 (x267 x10 x427))) (=> (and (< 0 x427) (< x10 0)) (> 0 (x267 x10 x427))) (=> (and (< x10 0) (> 0 x427)) (< 0 (x267 x10 x427)))))
(define-fun x1496 ((x10 Int) (x427 Int)) Bool (and (x1150 x10 x427) (x705 x10 x427) (x512 x10 x427) (x1201 x10 x427) (x951 x10 x427) (x1016 x10 x427) (x1421 x10 x427)))
(define-fun x175 ((x10 Int)) Bool (= (x928 x10 1461501637330902918203684832716283019655932542975) (x873 x10 1461501637330902918203684832716283019655932542976)))
(define-fun x32 ((x10 Int)) Bool (and (x1485 x10 1461501637330902918203684832716283019655932542975) (x175 x10)))
(define-fun x912 ((x904 Int)) Int (ite (< x904 x1051) (x1372 x904) 0))
(define-fun x624 ((x904 Int)) Int (ite (> x1051 x904) (x585 x904) 0))
(define-fun x188 ((x904 Int)) Int (ite (< x904 x1051) (x90 x904) 0))
(define-fun x892 ((x904 Int)) Int (x1463 x904))
(define-fun x931 ((x904 Int)) Int (ite (= x904 128) x504 (x1238 x904)))
(define-fun x337 ((x904 Int)) Int (ite (= x904 128) x63 (x931 x904)))
(define-fun x1042 ((x904 Int)) Int (ite (and (>= x904 160) (< x904 (+ x63 160))) (x1463 (+ x474 (- x904 160))) (x337 x904)))
(define-fun x1048 ((x904 Int)) Int (ite (= x1017 x904) 0 (x1042 x904)))
(define-fun x1113 ((x904 Int)) Int (ite (= x104 x904) x434 (x1048 x904)))
(define-fun x64 ((x904 Int)) Int (ite x987 (x1048 x904) (x1113 x904)))
(define-fun x700 ((x904 Int)) Int (ite (= x904 x914) 0 (x64 x904)))
(define-fun x179 ((x904 Int)) Int (ite x704 (x64 x904) (x700 x904)))
(define-fun x1044 ((x904 Int)) Int (ite (= x936 x904) 9 (x179 x904)))
(define-fun x728 ((x904 Int)) Int (ite (= x904 x69) x738 (x1044 x904)))
(define-fun x1477 ((x904 Int)) Int (ite x785 (x1044 x904) (x728 x904)))
(define-fun x623 ((x904 Int)) Int (ite (= x138 x904) 0 (x1477 x904)))
(define-fun x839 ((x904 Int)) Int (ite x22 (x1477 x904) (x623 x904)))
(define-fun x123 ((x904 Int)) Int (ite (= x904 x610) 13 (x839 x904)))
(define-fun x613 ((x904 Int)) Int (ite (= x904 x1134) x1164 (x123 x904)))
(define-fun x1072 ((x904 Int)) Int (ite x1149 (x123 x904) (x613 x904)))
(define-fun x675 ((x904 Int)) Int (ite (= x904 x1293) 0 (x1072 x904)))
(define-fun x1222 ((x904 Int)) Int (ite x596 (x1072 x904) (x675 x904)))
(define-fun x1101 ((x904 Int)) Int (ite (= x904 x25) 19 (x1222 x904)))
(define-fun x359 ((x904 Int)) Int (ite (= x1518 x904) x1268 (x1101 x904)))
(define-fun x1480 ((x904 Int)) Int (ite x779 (x1101 x904) (x359 x904)))
(define-fun x150 ((x904 Int)) Int (ite (= x904 x194) 0 (x1480 x904)))
(define-fun x167 ((x904 Int)) Int (ite x1108 (x1480 x904) (x150 x904)))
(define-fun x1418 ((x904 Int)) Int (ite (= x904 x721) 19 (x167 x904)))
(define-fun x1 ((x904 Int)) Int (ite x984 (x1418 x904) (x1101 x904)))
(define-fun x1406 ((x904 Int)) Int (ite (= x766 x904) x1099 (x1 x904)))
(define-fun x356 ((x904 Int)) Int (ite x1019 (x1 x904) (x1406 x904)))
(define-fun x96 ((x904 Int)) Int (ite (= x904 x1119) 0 (x356 x904)))
(define-fun x899 ((x904 Int)) Int (ite x435 (x356 x904) (x96 x904)))
(define-fun x106 ((x904 Int)) Int (ite (= x904 x1090) 14 (x899 x904)))
(define-fun x44 ((x904 Int)) Int (ite (= x631 x904) x588 (x106 x904)))
(define-fun x556 ((x904 Int)) Int (ite x1350 (x106 x904) (x44 x904)))
(define-fun x265 ((x904 Int)) Int (ite (= x667 x904) 0 (x556 x904)))
(define-fun x467 ((x904 Int)) Int (ite x152 (x556 x904) (x265 x904)))
(define-fun x389 ((x904 Int)) Int (ite (= x904 x462) 19 (x467 x904)))
(define-fun x1137 ((x904 Int)) Int (ite (= x904 x79) x736 (x389 x904)))
(define-fun x358 ((x904 Int)) Int (ite x795 (x389 x904) (x1137 x904)))
(define-fun x469 ((x904 Int)) Int (ite (= x904 x1431) 0 (x358 x904)))
(define-fun x312 ((x904 Int)) Int (ite x127 (x358 x904) (x469 x904)))
(define-fun x1093 ((x904 Int)) Int (ite (= x50 x904) 19 (x312 x904)))
(define-fun x49 ((x904 Int)) Int (ite x1095 (x1093 x904) (x389 x904)))
(define-fun x430 ((x904 Int)) Int (ite (= x537 x904) x413 (x49 x904)))
(define-fun x110 ((x904 Int)) Int (ite x1355 (x49 x904) (x430 x904)))
(define-fun x850 ((x904 Int)) Int (ite (= x904 x1512) 0 (x110 x904)))
(define-fun x826 ((x904 Int)) Int (ite x804 (x110 x904) (x850 x904)))
(define-fun x158 ((x904 Int)) Int (ite (= x904 x510) 13 (x826 x904)))
(define-fun x907 ((x904 Int)) Int (ite (= x1239 x904) x316 (x158 x904)))
(define-fun x507 ((x904 Int)) Int (ite x46 (x158 x904) (x907 x904)))
(define-fun x529 ((x904 Int)) Int (ite (= x904 x856) 0 (x507 x904)))
(define-fun x423 ((x904 Int)) Int (ite x233 (x507 x904) (x529 x904)))
(define-fun x1056 ((x904 Int)) Int (ite (= x904 x411) 14 (x423 x904)))
(define-fun x518 ((x904 Int)) Int (ite (and (<= x827 x904) (> (+ x827 0) x904)) (x29 (+ (- x904 x827) 0)) (x1056 x904)))
(define-fun x563 ((x904 Int)) Int (ite x1412 (x1056 x904) (ite x428 (x518 x904) (x1056 x904))))
(define-fun x269 ((x904 Int)) Int (ite x1412 (x665 x904) (x29 x904)))
(define-fun x72 ((x904 Int)) Int (ite (= x827 x904) x284 (x563 x904)))
(define-fun x497 ((x904 Int)) Int (ite (and (<= x1302 x904) (> (+ x1302 x284) x904)) (x269 (+ 0 (- x904 x1302))) (x72 x904)))
(define-fun x419 ((x904 Int)) Int (ite x890 (x563 x904) (x497 x904)))
(define-fun x1129 ((x904 Int)) Int (ite (= x958 x904) x1344 (x419 x904)))
(define-fun x1182 ((x904 Int)) Int (ite (= x1455 x904) x813 (x1129 x904)))
(define-fun x21 ((x904 Int)) Int (ite (= x1035 x904) x1166 (x1182 x904)))
(define-fun x300 ((x904 Int)) Int (ite x832 (x1182 x904) (x21 x904)))
(define-fun x98 ((x904 Int)) Int (ite (= x904 x776) 0 (x300 x904)))
(define-fun x465 ((x904 Int)) Int (ite x332 (x300 x904) (x98 x904)))
(define-fun x941 ((x904 Int)) Int (ite (= x904 x1028) x82 (x465 x904)))
(define-fun x1316 ((x904 Int)) Int (ite (= x904 x493) x266 (x941 x904)))
(define-fun x273 ((x904 Int)) Int (ite x724 (x931 x904) (ite x206 (x106 x904) (x1316 x904))))
(define-fun x1005 ((x904 Int)) Int (ite (= x904 x1295) x699 (x273 x904)))
(define-fun x151 ((x904 Int)) Int (ite (and (> (+ x88 x699) x904) (<= x88 x904)) (x1463 (+ (- x904 x88) x570)) (x1005 x904)))
(define-fun x1066 ((x904 Int)) Int (ite (= x904 x666) 0 (x151 x904)))
(define-fun x1053 ((x904 Int)) Int (ite (= x1179 x904) x225 (x1066 x904)))
(define-fun x1482 ((x904 Int)) Int (ite x674 (x1066 x904) (x1053 x904)))
(define-fun x217 ((x904 Int)) Int (ite (= x904 x1264) 0 (x1482 x904)))
(define-fun x574 ((x904 Int)) Int (ite x668 (x1482 x904) (x217 x904)))
(define-fun x746 ((x904 Int)) Int (ite (= x904 x112) 13 (x574 x904)))
(define-fun x1029 ((x904 Int)) Int (ite (= x904 x1522) 82070247630637395725875354456112310357886651100252770250446759337321580986368 (x746 x904)))
(define-fun x672 ((x904 Int)) Int (ite (= x938 x904) 32 (x1029 x904)))
(define-fun x1322 ((x904 Int)) Int (ite (= x904 x549) x1224 (x672 x904)))
(define-fun x416 ((x904 Int)) Int (ite (= x904 x791) x957 (x1322 x904)))
(define-fun x602 ((x904 Int)) Int (ite x16 (x1322 x904) (x416 x904)))
(define-fun x1032 ((x904 Int)) Int (ite (= x555 x904) 0 (x602 x904)))
(define-fun x1288 ((x904 Int)) Int (ite x906 (x602 x904) (x1032 x904)))
(define-fun x921 ((x904 Int)) Int (ite (and (> (+ 68 (x810 (- x132 68))) x904) (>= x904 68)) (x1288 (+ (x310 (+ 68 x1522)) (- x904 68))) (x912 x904)))
(define-fun x1167 ((x904 Int)) Int (ite (= x904 128) x1395 (x1310 x904)))
(define-fun x242 ((x904 Int)) Int (ite (and (>= x904 160) (> (+ x1395 160) x904)) (x921 (+ 68 (- x904 160))) (x1167 x904)))
(define-fun x501 ((x904 Int)) Int (ite (= x904 x421) 0 (x242 x904)))
(define-fun x743 ((x904 Int)) Int (ite (= x1495 x904) x781 (x501 x904)))
(define-fun x1286 ((x904 Int)) Int (ite (= x904 x775) x882 (x743 x904)))
(define-fun x257 ((x904 Int)) Int (ite (= x1183 x904) x1002 (x1286 x904)))
(define-fun x66 ((x904 Int)) Int (ite (= x904 x141) x1337 (x257 x904)))
(define-fun x706 ((x904 Int)) Int (ite x997 (x257 x904) (ite x1523 (x1286 x904) (ite x1185 (x743 x904) (ite x924 (x501 x904) (x66 x904))))))
(define-fun x1291 ((x904 Int)) Int (ite (= x1470 x904) 0 (x706 x904)))
(define-fun x1018 ((x904 Int)) Int (ite x1338 (x706 x904) (x1291 x904)))
(define-fun x538 ((x904 Int)) Int (ite (= x1373 x904) 112 (x1018 x904)))
(define-fun x1172 ((x904 Int)) Int (ite (= x1024 x904) x592 (x538 x904)))
(define-fun x1275 ((x904 Int)) Int (ite (= x618 x904) x146 (x1172 x904)))
(define-fun x1311 ((x904 Int)) Int (ite (= x248 x904) x350 (x1275 x904)))
(define-fun x56 ((x904 Int)) Int (ite (= x904 x1204) x297 (x1311 x904)))
(define-fun x1062 ((x904 Int)) Int (ite x723 (x1311 x904) (ite x949 (x1275 x904) (ite x1317 (x1172 x904) (ite x840 (x538 x904) (x56 x904))))))
(define-fun x193 ((x904 Int)) Int (ite (= x1517 x904) 0 (x1062 x904)))
(define-fun x784 ((x904 Int)) Int (ite x817 (x1062 x904) (x193 x904)))
(define-fun x637 ((x904 Int)) Int (ite (= x904 x777) 112 (x784 x904)))
(define-fun x134 ((x904 Int)) Int (ite (= x904 x400) 43611735268480658727360147997893738071856775535381453097760378360336924803072 (x637 x904)))
(define-fun x1071 ((x904 Int)) Int (ite (= x551 x904) x893 (x134 x904)))
(define-fun x757 ((x904 Int)) Int (ite (= x904 x400) x548 (x1071 x904)))
(define-fun x558 ((x904 Int)) Int (ite x454 (x1071 x904) (x757 x904)))
(define-fun x702 ((x904 Int)) Int (ite (= x904 x1194) 105741823712686017468623175546783284002282906648395100416871018427217256382464 (x558 x904)))
(define-fun x929 ((x904 Int)) Int (ite (= x904 x1197) 32 (x702 x904)))
(define-fun x656 ((x904 Int)) Int (ite (= x616 x904) x80 (x929 x904)))
(define-fun x1098 ((x904 Int)) Int (ite (= x169 x904) x373 (x656 x904)))
(define-fun x418 ((x904 Int)) Int (ite (= x782 x904) x399 (x1098 x904)))
(define-fun x1457 ((x904 Int)) Int (ite (= x904 x203) x1502 (x418 x904)))
(define-fun x794 ((x904 Int)) Int (ite (= x904 x1476) x660 (x1457 x904)))
(define-fun x627 ((x904 Int)) Int (ite x86 (x1457 x904) (ite x407 (x418 x904) (ite x375 (x1098 x904) (ite x1020 (x656 x904) (x794 x904))))))
(define-fun x980 ((x904 Int)) Int (ite (= x698 x904) 0 (x627 x904)))
(define-fun x970 ((x904 Int)) Int (ite x1022 (x627 x904) (x980 x904)))
(define-fun x793 ((x904 Int)) Int (ite (and (<= 68 x904) (< x904 (+ 68 (x810 (- x1314 68))))) (x970 (+ (x310 (+ x1194 68)) (- x904 68))) (x624 x904)))
(define-fun x20 ((x904 Int)) Int (ite (= 128 x904) x292 (x28 x904)))
(define-fun x654 ((x904 Int)) Int (ite (and (<= 160 x904) (< x904 (+ x292 160))) (x793 (+ (- x904 160) 68)) (x20 x904)))
(define-fun x153 ((x904 Int)) Int (ite (= x904 x1248) 0 (x654 x904)))
(define-fun x922 ((x904 Int)) Int (ite (= x904 x250) x276 (x153 x904)))
(define-fun x345 ((x904 Int)) Int (ite (= x904 x1432) x293 (x922 x904)))
(define-fun x500 ((x904 Int)) Int (ite (= x904 x919) x1341 (x345 x904)))
(define-fun x1080 ((x904 Int)) Int (ite (= x1250 x904) x1417 (x500 x904)))
(define-fun x842 ((x904 Int)) Int (ite x733 (x500 x904) (ite x1089 (x345 x904) (ite x1144 (x922 x904) (ite x824 (x153 x904) (x1080 x904))))))
(define-fun x763 ((x904 Int)) Int (ite (= x496 x904) 0 (x842 x904)))
(define-fun x732 ((x904 Int)) Int (ite x360 (x842 x904) (x763 x904)))
(define-fun x696 ((x904 Int)) Int (ite (= x1161 x904) 155 (x732 x904)))
(define-fun x1000 ((x904 Int)) Int (ite (= x697 x904) 86587964985574495804695408441416066048332504164997306664935388907017567469568 (x696 x904)))
(define-fun x1269 ((x904 Int)) Int (ite (= x904 x91) 32 (x1000 x904)))
(define-fun x636 ((x904 Int)) Int (ite (= x1158 x904) x530 (x1269 x904)))
(define-fun x103 ((x904 Int)) Int (ite (= x904 x1262) x541 (x636 x904)))
(define-fun x1278 ((x904 Int)) Int (ite (= x904 x1267) x972 (x103 x904)))
(define-fun x1156 ((x904 Int)) Int (ite (= x599 x904) x68 (x1278 x904)))
(define-fun x328 ((x904 Int)) Int (ite (= x57 x904) x113 (x1156 x904)))
(define-fun x6 ((x904 Int)) Int (ite x1359 (x1156 x904) (ite x990 (x1278 x904) (ite x1142 (x103 x904) (ite x334 (x636 x904) (x328 x904))))))
(define-fun x1405 ((x904 Int)) Int (ite (= x1151 x904) 0 (x6 x904)))
(define-fun x1516 ((x904 Int)) Int (ite x1381 (x6 x904) (x1405 x904)))
(define-fun x1424 ((x904 Int)) Int (ite (= x904 x697) x1114 (x1516 x904)))
(define-fun x522 ((x904 Int)) Int (ite x524 (x1516 x904) (x1424 x904)))
(define-fun x247 ((x904 Int)) Int (ite x1430 (x522 x904) (x696 x904)))
(define-fun x436 ((x904 Int)) Int (ite (= x904 x1198) x333 (x247 x904)))
(define-fun x343 ((x904 Int)) Int (ite (= x561 x904) x831 (x436 x904)))
(define-fun x464 ((x904 Int)) Int (ite (= x545 x904) x1334 (x343 x904)))
(define-fun x1047 ((x904 Int)) Int (ite (= x904 x946) (ite x959 1 0) (x464 x904)))
(define-fun x511 ((x904 Int)) Int (ite (and (> (+ x1194 (ite (> 128 x1411) x1411 128)) x904) (<= x1194 x904)) (x1047 (+ (- x904 x1194) x1198)) (x970 x904)))
(define-fun x240 ((x904 Int)) Int (ite x1107 (x970 x904) (x511 x904)))
(define-fun x1045 ((x904 Int)) Int (ite (= x904 x641) x893 (x240 x904)))
(define-fun x1347 ((x904 Int)) Int (ite (= x1181 x904) x1021 (x1045 x904)))
(define-fun x1109 ((x904 Int)) Int (ite (= x904 x1505) x34 (x1347 x904)))
(define-fun x544 ((x904 Int)) Int (ite (= x13 x904) x712 (x1109 x904)))
(define-fun x155 ((x904 Int)) Int (ite (= x729 x904) x1501 (x544 x904)))
(define-fun x1464 ((x904 Int)) Int (ite (= x62 x904) (ite x1003 1 0) (x155 x904)))
(define-fun x657 ((x904 Int)) Int (ite (and (<= x1522 x904) (< x904 (+ x1522 (ite (< x4 192) x4 192)))) (x1464 (+ (- x904 x1522) x567)) (x1288 x904)))
(define-fun x1244 ((x904 Int)) Int (ite (= x740 x904) 43611735268480658727360147997893738071856775535381453097760378360336924803072 (x657 x904)))
(define-fun x1258 ((x904 Int)) Int (ite (= x904 x747) x664 (x1244 x904)))
(define-fun x926 ((x904 Int)) Int (ite (= x740 x904) x1513 (x1258 x904)))
(define-fun x1124 ((x904 Int)) Int (ite (= x904 x126) x620 (x926 x904)))
(define-fun x591 ((x904 Int)) Int (ite x1506 (x926 x904) (x1124 x904)))
(define-fun x754 ((x904 Int)) Int (ite (= x1173 x904) 0 (x591 x904)))
(define-fun x1525 ((x904 Int)) Int (ite x305 (x591 x904) (x754 x904)))
(define-fun x457 ((x904 Int)) Int (ite (= x904 x409) 18 (x1525 x904)))
(define-fun x304 ((x904 Int)) Int (ite (= x904 x1010) x678 (x457 x904)))
(define-fun x173 ((x904 Int)) Int (ite x374 (x457 x904) (x304 x904)))
(define-fun x1226 ((x904 Int)) Int (ite (= x904 x822) 0 (x173 x904)))
(define-fun x378 ((x904 Int)) Int (ite x659 (x173 x904) (x1226 x904)))
(define-fun x385 ((x904 Int)) Int (ite (= x904 x727) 12 (x378 x904)))
(define-fun x65 ((x904 Int)) Int (ite (= x1191 x904) x395 (x385 x904)))
(define-fun x1120 ((x904 Int)) Int (ite x688 (x385 x904) (x65 x904)))
(define-fun x1307 ((x904 Int)) Int (ite (= x904 x336) 0 (x1120 x904)))
(define-fun x1209 ((x904 Int)) Int (ite x878 (x1120 x904) (x1307 x904)))
(define-fun x1273 ((x904 Int)) Int (ite (= x904 x448) 13 (x1209 x904)))
(define-fun x1123 ((x904 Int)) Int (ite (= x114 x904) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1273 x904)))
(define-fun x611 ((x904 Int)) Int (ite (= x1445 x904) x255 (x1123 x904)))
(define-fun x429 ((x904 Int)) Int (ite (= x565 x904) x1087 (x611 x904)))
(define-fun x317 ((x904 Int)) Int (ite (and (<= x114 x904) (> (+ x114 32) x904)) (x14 (+ (- x904 x114) 0)) (x429 x904)))
(define-fun x212 ((x904 Int)) Int (ite x749 (x317 x904) (x429 x904)))
(define-fun x1121 ((x904 Int)) Int (ite (= x539 x904) x458 (x212 x904)))
(define-fun x1515 ((x904 x1327)) Int (ite x428 (x722 x904) (x166 x904)))
(define-fun x67 ((x904 x1327)) Int (ite x1412 (x166 x904) (x1515 x904)))
(define-fun x1206 ((x904 x1327)) Int (ite x428 (x1283 x904) (x516 x904)))
(define-fun x1358 ((x904 x1327)) Int (ite x1412 (x516 x904) (x1206 x904)))
(define-fun x969 ((x904 x1327)) Int (ite x428 (x864 x904) (x1479 x904)))
(define-fun x1312 ((x904 x1327)) Int (ite x1412 (x1479 x904) (x969 x904)))
(define-fun x142 ((x904 x1327)) Int (ite (= x904 (x137 x1508)) x584 (x888 x904)))
(define-fun x1367 ((x904 x1327)) Int (ite (= x904 (x137 x372)) x1345 (x142 x904)))
(define-fun x1104 ((x904 x1327)) Int (ite x428 (x684 x904) (x1367 x904)))
(define-fun x477 ((x904 x1327)) Int (ite (= (x137 x372) x904) x897 (x1104 x904)))
(define-fun x1324 ((x904 x1327)) Int (ite (= (x137 x1508) x904) x180 (x477 x904)))
(define-fun x298 ((x904 x1327)) Int (ite x1412 (x888 x904) (ite x207 (x1104 x904) (x1324 x904))))
(define-fun x1174 ((x904 x1327)) Int (ite x428 (x139 x904) (x481 x904)))
(define-fun x808 ((x904 x1327)) Int (ite x1412 (x481 x904) (x1174 x904)))
(define-fun x1320 ((x904 x1327)) Int (ite x428 (x1074 x904) (x885 x904)))
(define-fun x59 ((x904 x1327)) Int (ite x1412 (x885 x904) (x1320 x904)))
(define-fun x1096 ((x904 x1327)) Int (ite x724 (x885 x904) (ite x206 (x885 x904) (x59 x904))))
(define-fun x1474 ((x904 x1327)) Int (ite x724 (x888 x904) (ite x206 (x888 x904) (x298 x904))))
(define-fun x451 ((x904 x1327)) Int (ite x724 (x166 x904) (ite x206 (x166 x904) (x67 x904))))
(define-fun x1402 ((x904 x1327)) Int (ite x724 (x516 x904) (ite x206 (x516 x904) (x1358 x904))))
(define-fun x437 ((x904 x1327)) Int (ite x724 (x1479 x904) (ite x206 (x1479 x904) (x1312 x904))))
(define-fun x604 ((x904 x1327)) Int (ite x724 (x481 x904) (ite x206 (x481 x904) (x808 x904))))
(define-fun x154 ((x904 Int)) Int (ite (= 0 x904) x548 (x823 x904)))
(define-fun x308 ((x904 Int)) Int (ite (and (<= 0 x904) (< x904 (+ x4 0))) (x1464 (+ x567 (- x904 0))) (x26 x904)))
(define-fun x1380 ((x904 Int)) Int (ite (and (> (+ (x810 (- x1112 68)) 68) x904) (<= 68 x904)) (x1516 (+ (x310 (+ 68 x697)) (- x904 68))) (x188 x904)))
(define-fun x1361 ((x904 Int)) Int (ite (= 128 x904) x1200 (x259 x904)))
(define-fun x629 ((x904 Int)) Int (ite (and (> (+ x1411 0) x904) (>= x904 0)) (x1047 (+ x1198 (- x904 0))) (x943 x904)))
(define-fun x366 ((x904 Int)) Int (ite (= 0 x904) x1114 (x617 x904)))
(define-fun x1460 ((x904 Int)) Int (ite x524 (x617 x904) (x366 x904)))
(define-fun x352 ((x904 Int)) Int (ite (and (< x904 (+ x1200 160)) (<= 160 x904)) (x1380 (+ (- x904 160) 68)) (x1361 x904)))
(define-fun x40 ((x904 Int)) Int (ite (= x904 x392) 0 (x352 x904)))
(define-fun x866 ((x904 Int)) Int (ite (= x209 x904) 112 (x40 x904)))
(define-fun x989 ((x10 Int) (x427 Int) (x1009 Int) (x1228 Int)) Bool (=> (and (>= x427 0) (<= x427 x1228) (>= x1009 x10) (<= 0 x10)) (<= (x267 x10 x427) (x267 x1009 x1228))))
(define-fun x1145 ((x10 Int) (x427 Int) (x1009 Int) (x1228 Int)) Bool (=> (= x1009 x10) (= (- (x267 x10 x427) (x267 x1009 x1228)) (x267 x10 (- x427 x1228)))))
(define-fun x1366 ((x10 Int)) Bool (=> (and (not (= 3922182229 x10)) (not (= 3548638100 x10)) (not (= x10 2075580284)) (not (= x10 1617649167)) (not (= x10 105741823712686017468623175546783284002282906648395100416871018427217256382464)) (not (= x10 3109197603)) (not (= 43611735268480658727360147997893738071856775535381453097760378360336924803072 x10)) (not (= x10 2996296902)) (not (= 1405909242 x10)) (not (= 2872958028 x10)) (not (= x10 1208925819614629174706175)) (not (= 3592363634 x10)) (not (= 2710164492 x10)) (not (= 18446744073709551615 x10)) (not (= x10 3450351392)) (not (= 2745196236 x10)) (not (= x10 1208925819614629174706176)) (not (= 65535 x10)) (not (= 86587964985574495804695408441416066048332504164997306664935388907017567469568 x10)) (not (= x10 3624036542)) (not (= x10 1461501637330902918203684832716283019655932542976)) (not (= x10 3211726123)) (not (= 1000000000000000000000000 x10)) (not (= 3104404863 x10)) (not (= 1461501637330902918203684832716283019655932542975 x10)) (not (= x10 4294967296)) (not (= x10 82070247630637395725875354456112310357886651100252770250446759337321580986368)) (not (= x10 2376452955)) (not (= 2868243304 x10)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x10)) (< 10000 x10) (not (= x10 1000000000)) (not (= 1882194962 x10)) (not (= 65536 x10)) (not (= x10 3044154673)) (not (= x10 2061859742)) (not (= x10 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x10 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (not ((_ is x1088) (x137 x10)))))
(assert (=> (<= x520 10000) (= (x1088 x520) (x137 x520))))
(assert (= (x174 x1334 4) (x1069 x1334 2)))
(assert (x1366 (x106 (x310 (+ 64 x827)))))
(assert (= (x665 (- (+ (- (+ 68 (- x626 160)) 68) (x310 (+ x1522 68))) x1302)) 0))
(assert (= (or x16 x953) x1397))
(assert (= x93 (=> (and (= (>= 224 x178) x751) (= x609 (x810 (- x1308 x827))) (= x1308 (x310 (+ x50 32))) (= x178 (x810 (- x609 32))) (= (x310 (+ x827 x601)) x50)) (and (=> (and (= x278 (ite (<= x178 32) (x547 (x137 (x1093 x827)) 0) (ite (<= x178 64) (x340 (x137 (x1093 x827)) (x137 (x1093 (x310 (+ x827 32)))) 0) (ite (<= x178 96) (x1466 (x137 (x1093 x827)) (x137 (x1093 (x310 (+ x827 32)))) (x137 (x1093 (x310 (+ 64 x827)))) 0) (ite (>= 128 x178) (x319 (x137 (x1093 x827)) (x137 (x1093 (x310 (+ 32 x827)))) (x137 (x1093 (x310 (+ 64 x827)))) (x137 (x1093 (x310 (+ 96 x827)))) 0) (ite (>= 160 x178) (x1162 (x137 (x1093 x827)) (x137 (x1093 (x310 (+ 32 x827)))) (x137 (x1093 (x310 (+ x827 64)))) (x137 (x1093 (x310 (+ x827 96)))) (x137 (x1093 (x310 (+ x827 128)))) 0) (ite (<= x178 192) (x1520 (x137 (x1093 x827)) (x137 (x1093 (x310 (+ x827 32)))) (x137 (x1093 (x310 (+ x827 64)))) (x137 (x1093 (x310 (+ 96 x827)))) (x137 (x1093 (x310 (+ 128 x827)))) (x137 (x1093 (x310 (+ 160 x827)))) 0) (ite (>= 224 x178) (x900 (x137 (x1093 x827)) (x137 (x1093 (x310 (+ 32 x827)))) (x137 (x1093 (x310 (+ x827 64)))) (x137 (x1093 (x310 (+ x827 96)))) (x137 (x1093 (x310 (+ x827 128)))) (x137 (x1093 (x310 (+ 160 x827)))) (x137 (x1093 (x310 (+ 192 x827)))) 0) (x137 x597))))))))) (= (>= 224 x609) x1298)) (and x1298 (=> (and (<= x713 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x713) (= (x5 x1509) x713) (= x1509 (ite (>= 32 x609) (x547 (x137 (x1093 x827)) 0) (ite (<= x609 64) (x340 (x137 (x1093 x827)) (x137 (x1093 (x310 (+ 32 x827)))) 0) (ite (<= x609 96) (x1466 (x137 (x1093 x827)) (x137 (x1093 (x310 (+ 32 x827)))) (x137 (x1093 (x310 (+ 64 x827)))) 0) (ite (>= 128 x609) (x319 (x137 (x1093 x827)) (x137 (x1093 (x310 (+ x827 32)))) (x137 (x1093 (x310 (+ x827 64)))) (x137 (x1093 (x310 (+ x827 96)))) 0) (ite (>= 160 x609) (x1162 (x137 (x1093 x827)) (x137 (x1093 (x310 (+ x827 32)))) (x137 (x1093 (x310 (+ 64 x827)))) (x137 (x1093 (x310 (+ x827 96)))) (x137 (x1093 (x310 (+ x827 128)))) 0) (ite (>= 192 x609) (x1520 (x137 (x1093 x827)) (x137 (x1093 (x310 (+ x827 32)))) (x137 (x1093 (x310 (+ 64 x827)))) (x137 (x1093 (x310 (+ 96 x827)))) (x137 (x1093 (x310 (+ x827 128)))) (x137 (x1093 (x310 (+ x827 160)))) 0) (ite (<= x609 224) (x900 (x137 (x1093 x827)) (x137 (x1093 (x310 (+ x827 32)))) (x137 (x1093 (x310 (+ x827 64)))) (x137 (x1093 (x310 (+ 96 x827)))) (x137 (x1093 (x310 (+ x827 128)))) (x137 (x1093 (x310 (+ 160 x827)))) (x137 (x1093 (x310 (+ x827 192)))) 0) (x137 x701))))))))) (= x713 x1231)) x901))) x751))))
(assert (x1419 x1110))
(assert (x1419 x852))
(assert (x1366 (x1056 (x310 (+ x827 64)))))
(assert (= (x19 (x137 (x696 x697))) (x696 x697)))
(assert (x1419 x80))
(assert (= (x28 (+ (- (+ (- x114 x1522) x567) x1194) x1198)) 0))
(assert (= 0 (x1238 (+ (- (+ (- (+ (x310 (+ x1194 68)) (- (+ (- (x310 (+ 32 x697)) 160) 68) 68)) 160) 68) 68) (x310 (+ 68 x1522))))))
(assert (= (x19 (x137 x95)) x95))
(assert (= x937 (and x1215 x1462)))
(assert (x1419 x348))
(assert (=> (<= x701 10000) (= (x137 x701) (x1088 x701))))
(assert (x1419 x229))
(assert (x1419 x1221))
(assert (= (x1238 x560) 0))
(assert (x1419 x1191))
(assert (x1419 x1334))
(assert (x1419 x1194))
(assert (x1419 x1314))
(assert (x406 x1217))
(assert (x1419 x1336))
(assert (= x1030 (and x1329 x1321)))
(assert (= (x137 65535) (x1088 65535)))
(assert (x1419 x1508))
(assert (x1366 (x389 (x310 (+ x827 96)))))
(assert (= (x665 (- 160 x1302)) 0))
(assert (= (x19 (x137 (x746 (x310 (+ x1522 192))))) (x746 (x310 (+ 192 x1522)))))
(assert (x1419 x1076))
(assert (x908 x116))
(assert (= (or x1063 (and (not x301) x532) (and x849 x346) x971 (and x1438 x1038) (and x1067 (not x1400)) (and x985 x274) x403 x1393) x1107))
(assert (x1257 (- x1232 x503)))
(assert (x1419 x1060))
(assert (=> (<= (x457 (x310 (+ 192 x114))) 10000) (= (x1088 (x457 (x310 (+ 192 x114)))) (x137 (x457 (x310 (+ x114 192)))))))
(assert (= (x19 (x137 (x538 (x310 (+ x400 32))))) (x538 (x310 (+ x400 32)))))
(assert (= (x1238 (+ (- (+ 68 (- (+ (x310 (+ x1194 68)) (- (+ (- (+ (- x626 x1194) x1198) 160) 68) 68)) 160)) 68) (x310 (+ 68 x1522)))) 0))
(assert (x1419 x1294))
(assert (= x1356 (x19 (x137 x1356))))
(assert (= 0 (x665 (- (+ (x310 (+ 68 x1522)) (- (+ (- (+ x567 (- x1163 x1522)) 160) 68) 68)) x1302))))
(assert (and (x679 x1052 32) (=> (< 0 32) (= x1052 (+ (* 32 (x174 x1052 32)) (x873 x1052 32)))) (x801 x1052 32) (x982 x1052 32)))
(assert (= 0 (x28 (x310 (+ 32 x697)))))
(assert (= (x637 (x310 (+ 64 x400))) (x19 (x137 (x637 (x310 (+ x400 64)))))))
(assert (= x459 (x19 (x137 x459))))
(assert (=> (<= (x1273 (x310 (+ x114 128))) 10000) (= (x137 (x1273 (x310 (+ x114 128)))) (x1088 (x1273 (x310 (+ x114 128)))))))
(assert (= (and (not x557) x812) x332))
(assert (= (and x491 (not x285)) x1333))
(assert (= (x1238 (+ (- (+ (- (x310 (+ x400 32)) 160) 68) 68) (x310 (+ x1522 68)))) 0))
(assert (=> (>= 10000 (x746 x1522)) (= (x137 (x746 x1522)) (x1088 (x746 x1522)))))
(assert (= (x19 (x137 x1110)) x1110))
(assert (= (x1044 (x310 (+ 32 x827))) (x19 (x137 (x1044 (x310 (+ 32 x827)))))))
(assert (= 0 (x665 (- (x310 (+ x1522 68)) x1302))))
(assert (= (x1101 x827) (x19 (x137 (x1101 x827)))))
(assert (= (x665 (- (+ (x310 (+ 68 x1522)) (- (+ 68 (- (+ x567 (- x1459 x1522)) 160)) 68)) x1302)) 0))
(assert (x1366 x7))
(assert (= (x19 (x1088 2872958028)) 2872958028))
(assert (x1419 x583))
(assert (x1419 x909))
(assert (= (x1238 (+ 96 (x310 (+ 68 x1522)))) 0))
(assert (x1419 x393))
(assert (= (and (not x254) x200) x840))
(assert (= (x158 (x310 (+ 128 x827))) (x19 (x137 (x158 (x310 (+ 128 x827)))))))
(assert (= (and x37 x1357) x311))
(assert (= (x28 (x310 (+ 128 x697))) 0))
(assert (= (x389 (x310 (+ 128 x827))) (x19 (x137 (x389 (x310 (+ x827 128)))))))
(assert (= (x1088 1461501637330902918203684832716283019655932542976) (x137 1461501637330902918203684832716283019655932542976)))
(assert (= (x1310 (+ (x310 (+ 68 x1194)) (- (+ 68 (- (x310 (+ 32 x697)) 160)) 68))) 0))
(assert (=> (>= 10000 (x106 (x310 (+ 128 x827)))) (= (x1088 (x106 (x310 (+ x827 128)))) (x137 (x106 (x310 (+ 128 x827)))))))
(assert (and (=> (and (> x1334 0) (< 0 2)) (and (>= x1334 (* 2 (x174 x1334 2))) (< (- x1334 2) (* 2 (x174 x1334 2))))) (x1195 x1334 2) (= (- x1334 (x928 1 x1334)) (* 2 (x174 x1334 2))) (x918 x1334 2) (x1420 x1334 2) (x818 x1334 2)))
(assert (= (x1101 (x310 (+ x827 192))) (x19 (x137 (x1101 (x310 (+ 192 x827)))))))
(assert (= (=> (and (= (x310 (+ x348 x114)) x727) (= x452 (x810 (- x1352 32))) (= x84 (x310 (+ 32 x727))) (= x1352 (x810 (- x84 x114))) (= x1243 (<= x452 224))) (and (=> (and (= (>= 224 x1352) x484) (= x398 (ite (>= 32 x452) (x547 (x137 (x385 x114)) 0) (ite (>= 64 x452) (x340 (x137 (x385 x114)) (x137 (x385 (x310 (+ 32 x114)))) 0) (ite (<= x452 96) (x1466 (x137 (x385 x114)) (x137 (x385 (x310 (+ x114 32)))) (x137 (x385 (x310 (+ 64 x114)))) 0) (ite (<= x452 128) (x319 (x137 (x385 x114)) (x137 (x385 (x310 (+ 32 x114)))) (x137 (x385 (x310 (+ x114 64)))) (x137 (x385 (x310 (+ x114 96)))) 0) (ite (>= 160 x452) (x1162 (x137 (x385 x114)) (x137 (x385 (x310 (+ x114 32)))) (x137 (x385 (x310 (+ 64 x114)))) (x137 (x385 (x310 (+ 96 x114)))) (x137 (x385 (x310 (+ 128 x114)))) 0) (ite (<= x452 192) (x1520 (x137 (x385 x114)) (x137 (x385 (x310 (+ 32 x114)))) (x137 (x385 (x310 (+ 64 x114)))) (x137 (x385 (x310 (+ 96 x114)))) (x137 (x385 (x310 (+ 128 x114)))) (x137 (x385 (x310 (+ x114 160)))) 0) (ite (>= 224 x452) (x900 (x137 (x385 x114)) (x137 (x385 (x310 (+ x114 32)))) (x137 (x385 (x310 (+ x114 64)))) (x137 (x385 (x310 (+ x114 96)))) (x137 (x385 (x310 (+ 128 x114)))) (x137 (x385 (x310 (+ 160 x114)))) (x137 (x385 (x310 (+ x114 192)))) 0) (x137 x1356)))))))))) (and (=> (and (not (< x646 x1087)) (= (x385 x1295) x1414) (= x646 (x128 x1116)) (= (< 0 x1414) x367) (= (x810 (- x646 x1087)) x1125) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x646) (>= x646 0) (= (ite (>= 32 x1352) (x547 (x137 (x385 x114)) 0) (ite (>= 64 x1352) (x340 (x137 (x385 x114)) (x137 (x385 (x310 (+ x114 32)))) 0) (ite (<= x1352 96) (x1466 (x137 (x385 x114)) (x137 (x385 (x310 (+ x114 32)))) (x137 (x385 (x310 (+ x114 64)))) 0) (ite (<= x1352 128) (x319 (x137 (x385 x114)) (x137 (x385 (x310 (+ 32 x114)))) (x137 (x385 (x310 (+ x114 64)))) (x137 (x385 (x310 (+ x114 96)))) 0) (ite (<= x1352 160) (x1162 (x137 (x385 x114)) (x137 (x385 (x310 (+ 32 x114)))) (x137 (x385 (x310 (+ x114 64)))) (x137 (x385 (x310 (+ 96 x114)))) (x137 (x385 (x310 (+ 128 x114)))) 0) (ite (<= x1352 192) (x1520 (x137 (x385 x114)) (x137 (x385 (x310 (+ 32 x114)))) (x137 (x385 (x310 (+ 64 x114)))) (x137 (x385 (x310 (+ x114 96)))) (x137 (x385 (x310 (+ 128 x114)))) (x137 (x385 (x310 (+ 160 x114)))) 0) (ite (>= 224 x1352) (x900 (x137 (x385 x114)) (x137 (x385 (x310 (+ x114 32)))) (x137 (x385 (x310 (+ 64 x114)))) (x137 (x385 (x310 (+ x114 96)))) (x137 (x385 (x310 (+ 128 x114)))) (x137 (x385 (x310 (+ 160 x114)))) (x137 (x385 (x310 (+ 192 x114)))) 0) (x137 x7)))))))) x1116)) (and (=> (and (= x691 0) (not x367)) x97) (=> x367 x1050))) x484)) x1243)) x129))
(assert (= (and x1374 x961) x94))
(assert (=> (<= (x538 (x310 (+ 32 x400))) 10000) (= (x137 (x538 (x310 (+ 32 x400)))) (x1088 (x538 (x310 (+ x400 32)))))))
(assert (= x1094 (and x347 x540)))
(assert (x1419 x1039))
(assert (x1366 (x389 (x310 (+ x827 32)))))
(assert (= (x665 (- x1219 x1302)) 0))
(assert (x1419 x276))
(assert (x1366 (x746 (x310 (+ x1522 192)))))
(assert (x1419 x1519))
(assert (= (x19 (x137 (x637 (x310 (+ x400 96))))) (x637 (x310 (+ x400 96)))))
(assert (x1419 x1368))
(assert (x1366 (x1273 (x310 (+ 64 x114)))))
(assert (= (x457 (x310 (+ 192 x114))) (x19 (x137 (x457 (x310 (+ 192 x114)))))))
(assert (= (x19 (x137 (x696 (x310 (+ 160 x697))))) (x696 (x310 (+ 160 x697)))))
(assert (= (x1238 (+ (x310 (+ 68 x1522)) (- (+ 68 (- (+ (- (+ (- (+ (x310 (+ x697 68)) 96) 160) 68) 68) (x310 (+ x1194 68))) 160)) 68))) 0))
(assert (= (x137 3922182229) (x1088 3922182229)))
(assert (x1366 (x538 (x310 (+ 32 x400)))))
(assert (= (x19 (x137 x372)) x372))
(assert (= x785 (and x33 (not x131))))
(assert (x1419 x616))
(assert (x1366 x701))
(assert (x1419 x1197))
(assert (x1366 (x1101 (x310 (+ 96 x827)))))
(assert (= (x1044 x827) (x19 (x137 (x1044 x827)))))
(assert (=> (>= 10000 x490) (= (x137 x490) (x1088 x490))))
(assert (= x1408 (=> (and (or (not x463) (and (= (x310 (+ x1392 x114)) x1173) x463)) (= (> x760 x1392) x463)) x1055)))
(assert (x1419 x297))
(assert (=> (>= 10000 x1356) (= (x1088 x1356) (x137 x1356))))
(assert (= (x1238 (+ (x310 (+ x1522 68)) (- (+ (- (+ (- (+ (- (+ (- (+ (- (x310 (+ 128 x114)) x1522) x567) x1194) x1198) 160) 68) 68) (x310 (+ x1194 68))) 160) 68) 68))) 0))
(assert (x1419 x788))
(assert (x1419 x597))
(assert (= (x665 (- (+ (x310 (+ 68 x1522)) (- (+ 68 (- (+ (x310 (+ x1194 68)) (- (+ 68 (- (+ x1198 (- (+ x567 (- (x310 (+ x114 32)) x1522)) x1194)) 160)) 68)) 160)) 68)) x1302)) 0))
(assert (and (x679 x116 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x116 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x174 x116 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x873 x116 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x801 x116 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x982 x116 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1419 x898))
(assert (x1419 x1459))
(assert (x1419 x245))
(assert (= (and (not x1401) x1390) x206))
(assert (= 2868243304 (x19 (x1088 2868243304))))
(assert (= (x457 x114) (x19 (x137 (x457 x114)))))
(assert (x1366 (x457 x114)))
(assert (= (x137 43611735268480658727360147997893738071856775535381453097760378360336924803072) (x1088 43611735268480658727360147997893738071856775535381453097760378360336924803072)))
(assert (x1419 x1251))
(assert (x1419 x18))
(assert (x1366 (x1093 (x310 (+ x827 32)))))
(assert (x1419 x822))
(assert (x1366 x344))
(assert (= x994 (=> (and (= x1344 96) (= x1455 (x310 (+ x958 96))) (= (> x813 0) x1036) (= (x1129 128) x813) (= (x310 (+ x1455 32)) x1041) (< 0 x470)) (and (=> x1036 x1216) (=> (and (= 0 x877) (not x1036)) x1136)))))
(assert (x1419 x1249))
(assert (= 0 (x1238 (x310 (+ x827 192)))))
(assert (= (x19 (x137 (x1418 (x310 (+ 160 x827))))) (x1418 (x310 (+ 160 x827)))))
(assert (= (x538 (x310 (+ x400 160))) (x19 (x137 (x538 (x310 (+ 160 x400)))))))
(assert (= (x1238 x114) 0))
(assert (=> (>= 10000 x1054) (= (x1088 x1054) (x137 x1054))))
(assert (= 0 (x1238 (+ (x310 (+ 68 x1522)) (- (+ 68 (- (+ (- (+ (- (x310 (+ x697 68)) 160) 68) 68) (x310 (+ x1194 68))) 160)) 68)))))
(assert (x1419 x771))
(assert (= (x1418 (x310 (+ 128 x827))) (x19 (x137 (x1418 (x310 (+ x827 128)))))))
(assert (x1145 x1231 x1232 x503 x1106))
(assert (x908 x687))
(assert (x406 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1419 x256))
(assert (x406 x339))
(assert (= x933 (=> (and (= x936 (x310 (+ x827 x1064))) (= (x810 (- x223 32)) x322) (= (x810 (- x881 x827)) x223) (= x976 (<= x322 224)) (= (x310 (+ 32 x936)) x881)) (and (=> (and (= x1343 (<= x223 224)) (= x499 (ite (>= 32 x322) (x547 (x137 (x1044 x827)) 0) (ite (<= x322 64) (x340 (x137 (x1044 x827)) (x137 (x1044 (x310 (+ 32 x827)))) 0) (ite (<= x322 96) (x1466 (x137 (x1044 x827)) (x137 (x1044 (x310 (+ x827 32)))) (x137 (x1044 (x310 (+ 64 x827)))) 0) (ite (>= 128 x322) (x319 (x137 (x1044 x827)) (x137 (x1044 (x310 (+ 32 x827)))) (x137 (x1044 (x310 (+ 64 x827)))) (x137 (x1044 (x310 (+ x827 96)))) 0) (ite (<= x322 160) (x1162 (x137 (x1044 x827)) (x137 (x1044 (x310 (+ 32 x827)))) (x137 (x1044 (x310 (+ x827 64)))) (x137 (x1044 (x310 (+ 96 x827)))) (x137 (x1044 (x310 (+ x827 128)))) 0) (ite (<= x322 192) (x1520 (x137 (x1044 x827)) (x137 (x1044 (x310 (+ x827 32)))) (x137 (x1044 (x310 (+ x827 64)))) (x137 (x1044 (x310 (+ 96 x827)))) (x137 (x1044 (x310 (+ 128 x827)))) (x137 (x1044 (x310 (+ x827 160)))) 0) (ite (<= x322 224) (x900 (x137 (x1044 x827)) (x137 (x1044 (x310 (+ x827 32)))) (x137 (x1044 (x310 (+ 64 x827)))) (x137 (x1044 (x310 (+ x827 96)))) (x137 (x1044 (x310 (+ 128 x827)))) (x137 (x1044 (x310 (+ 160 x827)))) (x137 (x1044 (x310 (+ x827 192)))) 0) (x137 x1276)))))))))) (and x1343 (=> (and (> x130 0) (= x1237 (x1044 128)) (<= 0 x130) (= x130 (x287 x214)) (<= x130 255) (= (ite (>= 32 x223) (x547 (x137 (x1044 x827)) 0) (ite (>= 64 x223) (x340 (x137 (x1044 x827)) (x137 (x1044 (x310 (+ 32 x827)))) 0) (ite (>= 96 x223) (x1466 (x137 (x1044 x827)) (x137 (x1044 (x310 (+ x827 32)))) (x137 (x1044 (x310 (+ 64 x827)))) 0) (ite (<= x223 128) (x319 (x137 (x1044 x827)) (x137 (x1044 (x310 (+ 32 x827)))) (x137 (x1044 (x310 (+ 64 x827)))) (x137 (x1044 (x310 (+ 96 x827)))) 0) (ite (>= 160 x223) (x1162 (x137 (x1044 x827)) (x137 (x1044 (x310 (+ x827 32)))) (x137 (x1044 (x310 (+ 64 x827)))) (x137 (x1044 (x310 (+ 96 x827)))) (x137 (x1044 (x310 (+ x827 128)))) 0) (ite (>= 192 x223) (x1520 (x137 (x1044 x827)) (x137 (x1044 (x310 (+ 32 x827)))) (x137 (x1044 (x310 (+ x827 64)))) (x137 (x1044 (x310 (+ 96 x827)))) (x137 (x1044 (x310 (+ x827 128)))) (x137 (x1044 (x310 (+ x827 160)))) 0) (ite (<= x223 224) (x900 (x137 (x1044 x827)) (x137 (x1044 (x310 (+ x827 32)))) (x137 (x1044 (x310 (+ 64 x827)))) (x137 (x1044 (x310 (+ x827 96)))) (x137 (x1044 (x310 (+ x827 128)))) (x137 (x1044 (x310 (+ x827 160)))) (x137 (x1044 (x310 (+ x827 192)))) 0) (x137 x603)))))))) x214) (> 256 x130) (= (> x1237 0) x131)) (and (=> (and (= x569 0) (not x131)) x318) (=> x131 x742))))) x976))))
(assert (x1419 x914))
(assert (= x241 (or x820 x332)))
(assert (= (and x625 x342) x171))
(assert (x406 x116))
(assert (x1419 x923))
(assert (= 0 (x665 (- (+ (- (+ (- (x310 (+ 68 x1194)) 160) 68) 68) (x310 (+ 68 x1522))) x1302))))
(assert (x908 x1493))
(assert (x908 x216))
(assert (x1188 x942))
(assert (= (x1088 3109197603) (x137 3109197603)))
(assert (= 0 (x1238 (+ (- (+ 68 (- (+ x567 (- (x310 (+ 192 x114)) x1522)) 160)) 68) (x310 (+ x1522 68))))))
(assert (= (and (not x309) x283) x633))
(assert (x1419 x1233))
(assert (= (x19 (x137 x664)) x664))
(assert (= x521 (and (not x1369) x932)))
(assert (x1419 x1445))
(assert (x1419 x658))
(assert (x1419 x1033))
(assert (x1419 x903))
(assert (x1366 x643))
(assert (= (x19 (x137 (x1056 (x310 (+ x827 32))))) (x1056 (x310 (+ 32 x827)))))
(assert (= 0 (x665 (- (+ (x310 (+ 68 x1522)) (- (+ (- x400 160) 68) 68)) x1302))))
(assert (x1419 x392))
(assert (= x714 (and x1453 x1085)))
(assert (= 1405909242 (x19 (x1088 1405909242))))
(assert (= 0 (x1238 (x310 (+ 96 x827)))))
(assert (x1419 x910))
(assert (x908 x122))
(assert (x1419 x791))
(assert (x908 x947))
(assert (x32 x122))
(assert (= 0 (x1310 x741)))
(assert (x1419 x472))
(assert (x1419 x775))
(assert (= x160 (and x1165 x1444)))
(assert (x1366 (x158 (x310 (+ x827 160)))))
(assert (= (x1238 (x310 (+ 32 x827))) 0))
(assert (x1419 x730))
(assert (= (x1310 (+ (- (+ 68 (- (+ (- x229 x1194) x1198) 160)) 68) (x310 (+ 68 x1194)))) 0))
(assert (x1188 2))
(assert (x1419 x121))
(assert (x1419 x1061))
(assert (x1366 (x746 (x310 (+ x1522 64)))))
(assert (= (and x800 x282) x168))
(assert (x1419 x266))
(assert (x1366 (x746 (x310 (+ x1522 128)))))
(assert (x1419 x871))
(assert (x1366 x597))
(assert (= (x19 (x1088 3922182229)) 3922182229))
(assert (= 3109197603 (x19 (x1088 3109197603))))
(assert (x1419 x874))
(assert (x1366 (x106 (x310 (+ x827 192)))))
(assert (x1419 x1010))
(assert (x1366 (x1101 (x310 (+ x827 32)))))
(assert (= (x1238 (+ (- (+ (- (+ (- (+ 68 (- (+ x1198 (- (+ x567 (- x1178 x1522)) x1194)) 160)) 68) (x310 (+ x1194 68))) 160) 68) 68) (x310 (+ x1522 68)))) 0))
(assert (= x1160 (and x1075 x573)))
(assert (= (x19 (x1088 3450351392)) 3450351392))
(assert (=> (<= (x1056 (x310 (+ x827 64))) 10000) (= (x137 (x1056 (x310 (+ x827 64)))) (x1088 (x1056 (x310 (+ 64 x827)))))))
(assert (= (or x162 x984) x1374))
(assert (= (x19 (x137 (x696 (x310 (+ 96 x697))))) (x696 (x310 (+ 96 x697)))))
(assert (x1419 x1210))
(assert (= (x665 (- (x310 (+ x1522 64)) x1302)) 0))
(assert (and (x679 x552 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= x552 (+ (* 1461501637330902918203684832716283019655932542976 (x174 x552 1461501637330902918203684832716283019655932542976)) (x873 x552 1461501637330902918203684832716283019655932542976)))) (x801 x552 1461501637330902918203684832716283019655932542976) (x982 x552 1461501637330902918203684832716283019655932542976)))
(assert (x1419 x711))
(assert (= (x1238 (x310 (+ x827 128))) 0))
(assert (= (x1238 (+ (x310 (+ 68 x1522)) (- (+ (- (+ (x310 (+ x1194 68)) (- (+ 68 (- (+ (- (+ x567 (- (x310 (+ x114 160)) x1522)) x1194) x1198) 160)) 68)) 160) 68) 68))) 0))
(assert (= (and x1084 x689) x1297))
(assert (= (x137 65536) (x1088 65536)))
(assert (= (x665 (- (+ (- (+ (- (+ (x310 (+ x1194 68)) (- (+ (- (+ (- (+ (- (x310 (+ 96 x114)) x1522) x567) x1194) x1198) 160) 68) 68)) 160) 68) 68) (x310 (+ x1522 68))) x1302)) 0))
(assert (= (=> (or (and x1321 (and (= (x1069 x1334 2) x1245) (= x1138 2) (= x1301 (= (x873 x1245 2) 1)) (= x948 (not x1301)))) (and (not x1321) (= x1321 x948))) x998) x1236))
(assert (x1366 (x746 (x310 (+ 96 x1522)))))
(assert (x1419 x38))
(assert (= 0 (x1238 (+ (- (+ 68 (- (+ x567 (- (x310 (+ 32 x114)) x1522)) 160)) 68) (x310 (+ 68 x1522))))))
(assert (x1419 x1021))
(assert (= 0 (x665 (- (+ (x310 (+ 68 x1522)) (- (+ 68 (- (x310 (+ x400 64)) 160)) 68)) x1302))))
(assert (= x407 (and (not x559) x35)))
(assert (= (x1238 (+ (- (+ 68 (- x393 160)) 68) (x310 (+ x1522 68)))) 0))
(assert (= (and x689 (not x1084)) x674))
(assert (x1419 x1043))
(assert (= (x28 (x310 (+ x697 68))) 0))
(assert (= 0 (x665 (- (+ (- (+ 68 (- (+ (x310 (+ x1194 68)) (- (+ 68 (- (x310 (+ x697 32)) 160)) 68)) 160)) 68) (x310 (+ 68 x1522))) x1302))))
(assert (= 0 (x1310 (+ 32 (x310 (+ x1194 68))))))
(assert (= x1054 (x19 (x137 x1054))))
(assert (=> (<= (x158 x827) 10000) (= (x1088 (x158 x827)) (x137 (x158 x827)))))
(assert (x1366 (x1044 (x310 (+ x827 160)))))
(assert (= (x19 (x137 x1454)) x1454))
(assert (x1419 x1411))
(assert (x1419 x215))
(assert (x1419 x965))
(assert (= x1085 (and x875 x480)))
(assert (=> (>= 10000 (x106 (x310 (+ 96 x827)))) (= (x1088 (x106 (x310 (+ x827 96)))) (x137 (x106 (x310 (+ x827 96)))))))
(assert (and (x679 x449 32) (=> (< 0 32) (= x449 (+ (* 32 (x174 x449 32)) (x873 x449 32)))) (x801 x449 32) (x982 x449 32)))
(assert (x1419 x458))
(assert (x1419 x1181))
(assert (= (and x694 (not x642)) x1412))
(assert (= x207 (and (not x208) x546)))
(assert (= 0 (x1310 (+ (- (x310 (+ x114 96)) x1522) x567))))
(assert (x1419 x1365))
(assert (x406 x1039))
(assert (=> (>= 10000 (x696 (x310 (+ x697 160)))) (= (x1088 (x696 (x310 (+ 160 x697)))) (x137 (x696 (x310 (+ x697 160)))))))
(assert (= 0 (x665 (- (x310 (+ x114 160)) x1302))))
(assert (=> (<= x1290 10000) (= (x137 x1290) (x1088 x1290))))
(assert (x1419 x15))
(assert (=> (<= x1110 10000) (= (x1088 x1110) (x137 x1110))))
(assert (= 0 (x1238 (+ (- (+ (- (+ (x310 (+ 68 x1194)) (- (+ 68 (- (x310 (+ x697 96)) 160)) 68)) 160) 68) 68) (x310 (+ x1522 68))))))
(assert (= (x1310 x626) 0))
(assert (x1419 x1138))
(assert (x908 x449))
(assert (= (and x1331 x768) x940))
(assert (x1419 x570))
(assert (x1419 x662))
(assert (x1419 x354))
(assert (x1419 x1360))
(assert (= (x1238 (+ (x310 (+ x1522 68)) (- (+ 68 (- (+ (- (x310 (+ x114 64)) x1522) x567) 160)) 68))) 0))
(assert (= (and (not x948) x1326) x1004))
(assert (= (x1088 1000000000) (x137 1000000000)))
(assert (x1388 x365))
(assert (x1419 x626))
(assert (x1366 (x123 (x310 (+ x827 160)))))
(assert (= (and x160 (not x1202)) x795))
(assert (= (=> (and (or (not x557) (and (= x776 (x310 (+ x813 x1041))) x557)) (= (> x877 x813) x557)) x979) x1136))
(assert (and (x679 x687 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x687 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x174 x687 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x873 x687 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x801 x687 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x982 x687 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x1350 (and (not x1154) x693)))
(assert (= (and x172 x1001) x237))
(assert (= (x1310 (x310 (+ x400 160))) 0))
(assert (= (x665 (- (x310 (+ x1522 96)) x1302)) 0))
(assert (x1145 x503 x1106 x1232 x1231))
(assert (= x190 (and x431 x1036)))
(assert (= (x1310 192) 0))
(assert (= (x137 18446744073709551615) (x1088 18446744073709551615)))
(assert (= x1068 (or x305 x863)))
(assert (=> (>= 10000 (x1273 (x310 (+ x114 64)))) (= (x1088 (x1273 (x310 (+ 64 x114)))) (x137 (x1273 (x310 (+ x114 64)))))))
(assert (x1366 (x538 (x310 (+ 160 x400)))))
(assert (= (x19 (x1088 65535)) 65535))
(assert (= false x349))
(assert (x1419 x1164))
(assert (and (x679 x1461 32) (=> (< 0 32) (= x1461 (+ (* 32 (x174 x1461 32)) (x873 x1461 32)))) (x801 x1461 32) (x982 x1461 32)))
(assert (x908 x412))
(assert (=> (>= 10000 (x385 (x310 (+ x114 128)))) (= (x137 (x385 (x310 (+ x114 128)))) (x1088 (x385 (x310 (+ x114 128)))))))
(assert (x1419 x1426))
(assert (= (x19 (x137 (x158 (x310 (+ x827 64))))) (x158 (x310 (+ 64 x827)))))
(assert (x1366 (x1056 (x310 (+ 96 x827)))))
(assert (and (and (= (- (* 32 (- x92 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x92 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x267 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x92 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x92 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x267 32 (- x92 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x267 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x92) (- (* 32 x92) (* x92 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1150 32 x92) (x512 32 x92) (x1421 32 x92) (x1016 32 x92) (= (x267 32 x92) (* 32 x92)) (x951 32 x92)))
(assert (= (x19 (x137 x1410)) x1410))
(assert (= (x19 (x137 (x385 (x310 (+ 192 x114))))) (x385 (x310 (+ 192 x114)))))
(assert (= x494 (or x1423 x1304)))
(assert (x1419 x350))
(assert (= (x637 (x310 (+ 160 x400))) (x19 (x137 (x637 (x310 (+ 160 x400)))))))
(assert (=> (<= (x457 (x310 (+ x114 160))) 10000) (= (x1088 (x457 (x310 (+ x114 160)))) (x137 (x457 (x310 (+ 160 x114)))))))
(assert (x1419 x63))
(assert (= (and (not x1270) x314) x668))
(assert (x1419 x838))
(assert (= 0 (x1238 (x310 (+ x827 160)))))
(assert (x1419 x1513))
(assert (= (and x1140 (not x1261)) x596))
(assert (x1366 x95))
(assert (=> (<= x1153 10000) (= (x1088 x1153) (x137 x1153))))
(assert (x1419 x938))
(assert (x1366 x838))
(assert (=> (>= 10000 x344) (= (x137 x344) (x1088 x344))))
(assert (=> (<= x835 10000) (= (x137 x835) (x1088 x835))))
(assert (= (x19 (x137 (x123 (x310 (+ x827 160))))) (x123 (x310 (+ 160 x827)))))
(assert (x1419 x7))
(assert (= (=> (and (= x898 (x212 x114)) (= (< 0 x270) x351) (= (x310 (+ x1409 x114)) x539) (= x270 (x1121 x1295)) (= x235 (x310 (+ x744 31))) (= x1409 (x928 115792089237316195423570985008687907853269984665640564039457584007913129639904 x235)) (not (= 0 x806)) (= x115 (ite x1404 1 0)) (= x1504 (= 0 x898)) (= 64 x458) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x744)) (> 32 x744)) (> x744 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (not x1504) x1404) (> x898 0) (= x115 x898)) (and (=> (and (not x351) (= x1091 0)) x1007) (=> x351 x1147))) x364))
(assert (= (=> (and (= x136 x1159) (= 0 x1294)) x286) x1521))
(assert (= x1020 (and x381 (not x677))))
(assert (= (x1238 (+ (x310 (+ 68 x1522)) (- (+ (- (+ (x310 (+ 68 x1194)) (- (+ (- (+ (- (+ (- x1163 x1522) x567) x1194) x1198) 160) 68) 68)) 160) 68) 68))) 0))
(assert (x1419 x383))
(assert (= (x1238 (+ (- (+ (- (+ (x310 (+ x1194 68)) (- (+ (- (+ (x310 (+ 68 x697)) 192) 160) 68) 68)) 160) 68) 68) (x310 (+ x1522 68)))) 0))
(assert (= (x665 (- (+ (- (+ 68 (- (+ (x310 (+ 68 x1194)) (- (+ 68 (- (+ 32 (x310 (+ 68 x697))) 160)) 68)) 160)) 68) (x310 (+ x1522 68))) x1302)) 0))
(assert (x1419 x292))
(assert (x1419 x1051))
(assert (= (x19 (x1088 65536)) 65536))
(assert (x1419 x1399))
(assert (x1419 x11))
(assert (x1419 x646))
(assert (= (x19 (x1088 2745196236)) 2745196236))
(assert (x1419 x1239))
(assert (x1419 x531))
(assert (= (and (not x1462) x1215) x1149))
(assert (x1366 (x123 (x310 (+ x827 128)))))
(assert (x1188 x1468))
(assert (= x733 (and x1094 (not x144))))
(assert (= (x1310 x567) 0))
(assert (x1419 x495))
(assert (= (or x596 x222) x442))
(assert (x1419 x114))
(assert (= (and x950 x302) x890))
(assert (x1419 x699))
(assert (= x1491 (and x1371 x177)))
(assert (x1366 x1448))
(assert (x1188 65536))
(assert (=> (<= (x457 (x310 (+ 128 x114))) 10000) (= (x1088 (x457 (x310 (+ x114 128)))) (x137 (x457 (x310 (+ 128 x114)))))))
(assert (= (x19 (x137 (x389 (x310 (+ 32 x827))))) (x389 (x310 (+ x827 32)))))
(assert (= (x1238 (+ (x310 (+ 68 x1522)) (- (+ (- (+ (x310 (+ x1194 68)) 64) 160) 68) 68))) 0))
(assert (= (and (not x1453) x1085) x990))
(assert (= (x19 (x137 x369)) x369))
(assert (x1419 x690))
(assert (x1419 x803))
(assert (x1366 (x1056 (x310 (+ 192 x827)))))
(assert (x1419 x395))
(assert (x1496 x503 (- x1106 x1232)))
(assert (x1366 x520))
(assert (= (x137 2996296902) (x1088 2996296902)))
(assert (and (x679 x687 32) (=> (< 0 32) (= x687 (+ (* 32 (x174 x687 32)) (x873 x687 32)))) (x801 x687 32) (x982 x687 32)))
(assert (x1419 x713))
(assert (x1419 x882))
(assert (= (x28 192) 0))
(assert (= (=> (= (not (< 32 x270)) x234) (and (=> (= x1091 32) x1007) x234)) x1147))
(assert (x1188 x1403))
(assert (x1366 (x538 (x310 (+ 64 x400)))))
(assert (x1419 x1384))
(assert (= (x1238 (+ (- (+ (- (x310 (+ x400 160)) 160) 68) 68) (x310 (+ 68 x1522)))) 0))
(assert (=> (<= (x866 160) 10000) (= (x1088 (x866 160)) (x137 (x866 160)))))
(assert (x32 x770))
(assert (= 1617649167 (x19 (x1088 1617649167))))
(assert (= (x1238 (x310 (+ x114 96))) 0))
(assert (= x1381 (and (not x55) x857)))
(assert (= (x1310 x400) 0))
(assert (x1419 x561))
(assert (=> (>= 10000 (x123 (x310 (+ 32 x827)))) (= (x137 (x123 (x310 (+ 32 x827)))) (x1088 (x123 (x310 (+ x827 32)))))))
(assert (and (and (= (- (* 32 (- x486 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x486 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x267 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x486 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x486 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x267 32 (- x486 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x267 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x486) (- (* 32 x486) (* x486 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1150 32 x486) (x512 32 x486) (x1421 32 x486) (x1016 32 x486) (= (x267 32 x486) (* 32 x486)) (x951 32 x486)))
(assert (=> (<= x692 10000) (= (x137 x692) (x1088 x692))))
(assert (= x1139 (and (not x927) x960)))
(assert (x1419 x678))
(assert (=> (<= (x696 (x310 (+ x697 128))) 10000) (= (x1088 (x696 (x310 (+ 128 x697)))) (x137 (x696 (x310 (+ 128 x697)))))))
(assert (= x162 (and x442 (not x1193))))
(assert (x1419 x1219))
(assert (= (x19 (x137 (x538 x400))) (x538 x400)))
(assert (x1366 (x1101 (x310 (+ 128 x827)))))
(assert (= x283 (or x817 x577)))
(assert (=> (<= (x1093 (x310 (+ x827 128))) 10000) (= (x1088 (x1093 (x310 (+ x827 128)))) (x137 (x1093 (x310 (+ x827 128)))))))
(assert (=> (<= (x696 x697) 10000) (= (x137 (x696 x697)) (x1088 (x696 x697)))))
(assert (x1366 (x1101 (x310 (+ x827 160)))))
(assert (= (x1310 (+ (x310 (+ 68 x1194)) (- (+ (- (+ (- (+ (- (x310 (+ 64 x114)) x1522) x567) x1194) x1198) 160) 68) 68))) 0))
(assert (= x693 (and x1401 x1390)))
(assert (= (x1238 (+ (x310 (+ 68 x1522)) (- (+ (- (+ (x310 (+ x1194 68)) (- (+ (- (+ x1198 (- (+ (- x1295 x1522) x567) x1194)) 160) 68) 68)) 160) 68) 68))) 0))
(assert (x1419 x1178))
(assert (= (=> (and (= (x1156 256) x113) (= (x310 (+ 96 x711)) x57) (= x639 (not (< 128 x530)))) (and (=> (= 128 x598) x1340) x639)) x61))
(assert (=> (<= (x1044 (x310 (+ 96 x827))) 10000) (= (x137 (x1044 (x310 (+ 96 x827)))) (x1088 (x1044 (x310 (+ x827 96)))))))
(assert (= 0 (x665 (- (+ (- (+ (- x741 160) 68) 68) (x310 (+ x1522 68))) x1302))))
(assert (= (or x157 x22) x1215))
(assert (x1419 x598))
(assert (= (=> (and (or (and x107 (= x194 (x310 (+ x977 x827)))) (not x107)) (= x107 (< x977 x505))) x553) x1484))
(assert (= (x19 (x137 (x1418 (x310 (+ 32 x827))))) (x1418 (x310 (+ 32 x827)))))
(assert (=> (<= (x385 (x310 (+ x114 64))) 10000) (= (x137 (x385 (x310 (+ 64 x114)))) (x1088 (x385 (x310 (+ x114 64)))))))
(assert (x406 x947))
(assert (x32 x1252))
(assert (x1366 (x696 (x310 (+ x697 96)))))
(assert (= (or (and x1068 x1126) x792) x478))
(assert (= (x19 (x137 (x389 (x310 (+ 96 x827))))) (x389 (x310 (+ 96 x827)))))
(assert (x1388 x116))
(assert (not x773))
(assert (x908 x552))
(assert (=> (>= 10000 (x385 x114)) (= (x137 (x385 x114)) (x1088 (x385 x114)))))
(assert (x1388 x1052))
(assert (=> (<= (x1044 (x310 (+ 32 x827))) 10000) (= (x137 (x1044 (x310 (+ x827 32)))) (x1088 (x1044 (x310 (+ x827 32)))))))
(assert (x1419 x176))
(assert (= x218 (and x1342 x455)))
(assert (x1366 (x1093 (x310 (+ 160 x827)))))
(assert (= (x19 (x137 x692)) x692))
(assert (x1419 x729))
(assert (= (x137 3592363634) (x1088 3592363634)))
(assert (x1419 x537))
(assert (= (x665 (- (+ (- (+ 68 (- (+ (x310 (+ x1194 68)) (- (+ (- (x310 (+ x697 128)) 160) 68) 68)) 160)) 68) (x310 (+ x1522 68))) x1302)) 0))
(assert (= x264 (=> (and (or (not x967) (and x967 (= (x310 (+ x1064 x827)) x914))) (= x967 (< x1064 x1384))) x933)))
(assert (x1419 x335))
(assert (= 0 (x665 (- (+ (x310 (+ x1522 68)) (- (+ (- (+ (x310 (+ 68 x1194)) (- (+ (- (+ (- x229 x1194) x1198) 160) 68) 68)) 160) 68) 68)) x1302))))
(assert (x1419 x1497))
(assert (x1419 x603))
(assert (x1419 x1422))
(assert (x1366 (x1273 x114)))
(assert (and (=> (and (> x1468 0) (< 0 65536)) (and (>= x1468 (* 65536 (x174 x1468 65536))) (< (- x1468 65536) (* 65536 (x174 x1468 65536))))) (x1195 x1468 65536) (= (- x1468 (x928 65535 x1468)) (* 65536 (x174 x1468 65536))) (x918 x1468 65536) (x1420 x1468 65536) (x818 x1468 65536)))
(assert (and (x679 x414 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x414 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x174 x414 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x873 x414 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x801 x414 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x982 x414 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (and x975 (not x420)) x435))
(assert (x1419 x1518))
(assert (x1366 (x1418 (x310 (+ 128 x827)))))
(assert (x1419 x396))
(assert (x1419 x740))
(assert (x1419 x1293))
(assert (= (and (not x302) x950) x1303))
(assert (= 0 (x1238 (+ (x310 (+ x1522 68)) (- (+ (- x741 160) 68) 68)))))
(assert (=> (<= (x1101 (x310 (+ x827 128))) 10000) (= (x137 (x1101 (x310 (+ x827 128)))) (x1088 (x1101 (x310 (+ x827 128)))))))
(assert (= (x1044 (x310 (+ 96 x827))) (x19 (x137 (x1044 (x310 (+ x827 96)))))))
(assert (= 0 (x1310 (x310 (+ x400 128)))))
(assert (= x987 (and x329 (not x1070))))
(assert (x1419 x333))
(assert (=> (>= 10000 (x385 (x310 (+ 160 x114)))) (= (x137 (x385 (x310 (+ x114 160)))) (x1088 (x385 (x310 (+ x114 160)))))))
(assert (x1419 x293))
(assert (x1419 x102))
(assert (x1366 (x158 x827)))
(assert (and (x679 x116 32) (=> (< 0 32) (= x116 (+ (* 32 (x174 x116 32)) (x873 x116 32)))) (x801 x116 32) (x982 x116 32)))
(assert (x1419 x805))
(assert (x1366 (x385 (x310 (+ x114 160)))))
(assert (x908 x628))
(assert (x406 1461501637330902918203684832716283019655932542975))
(assert (x1419 x631))
(assert (= (and x351 x1157) x1304))
(assert (= 0 (x1238 (+ (x310 (+ x1522 68)) (- (+ 68 (- (+ (x310 (+ 68 x1194)) (- (+ 68 (- (+ (- (+ (- (x310 (+ x114 64)) x1522) x567) x1194) x1198) 160)) 68)) 160)) 68)))))
(assert (x1419 x1125))
(assert (x1419 x731))
(assert (x1419 x1087))
(assert (x1419 x1250))
(assert (= x1277 (=> (and (= (x810 (- x531 x827)) x1364) (= (x810 (- x1364 32)) x669) (= (x310 (+ x610 32)) x531) (= (<= x669 224) x718) (= (x310 (+ x1237 x827)) x610)) (and x718 (=> (and (= (>= 224 x1364) x228) (= (ite (>= 32 x669) (x547 (x137 (x123 x827)) 0) (ite (>= 64 x669) (x340 (x137 (x123 x827)) (x137 (x123 (x310 (+ x827 32)))) 0) (ite (>= 96 x669) (x1466 (x137 (x123 x827)) (x137 (x123 (x310 (+ x827 32)))) (x137 (x123 (x310 (+ x827 64)))) 0) (ite (>= 128 x669) (x319 (x137 (x123 x827)) (x137 (x123 (x310 (+ 32 x827)))) (x137 (x123 (x310 (+ 64 x827)))) (x137 (x123 (x310 (+ 96 x827)))) 0) (ite (<= x669 160) (x1162 (x137 (x123 x827)) (x137 (x123 (x310 (+ x827 32)))) (x137 (x123 (x310 (+ x827 64)))) (x137 (x123 (x310 (+ x827 96)))) (x137 (x123 (x310 (+ x827 128)))) 0) (ite (<= x669 192) (x1520 (x137 (x123 x827)) (x137 (x123 (x310 (+ 32 x827)))) (x137 (x123 (x310 (+ 64 x827)))) (x137 (x123 (x310 (+ x827 96)))) (x137 (x123 (x310 (+ 128 x827)))) (x137 (x123 (x310 (+ x827 160)))) 0) (ite (<= x669 224) (x900 (x137 (x123 x827)) (x137 (x123 (x310 (+ 32 x827)))) (x137 (x123 (x310 (+ 64 x827)))) (x137 (x123 (x310 (+ x827 96)))) (x137 (x123 (x310 (+ 128 x827)))) (x137 (x123 (x310 (+ x827 160)))) (x137 (x123 (x310 (+ 192 x827)))) 0) (x137 x869)))))))) x716)) (and x228 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x503) (= (< 0 x291) x1462) (>= x503 0) (= (x340 (x137 x520) (ite (<= x1364 32) (x547 (x137 (x123 x827)) 0) (ite (>= 64 x1364) (x340 (x137 (x123 x827)) (x137 (x123 (x310 (+ 32 x827)))) 0) (ite (>= 96 x1364) (x1466 (x137 (x123 x827)) (x137 (x123 (x310 (+ 32 x827)))) (x137 (x123 (x310 (+ x827 64)))) 0) (ite (>= 128 x1364) (x319 (x137 (x123 x827)) (x137 (x123 (x310 (+ 32 x827)))) (x137 (x123 (x310 (+ 64 x827)))) (x137 (x123 (x310 (+ x827 96)))) 0) (ite (>= 160 x1364) (x1162 (x137 (x123 x827)) (x137 (x123 (x310 (+ 32 x827)))) (x137 (x123 (x310 (+ x827 64)))) (x137 (x123 (x310 (+ x827 96)))) (x137 (x123 (x310 (+ x827 128)))) 0) (ite (<= x1364 192) (x1520 (x137 (x123 x827)) (x137 (x123 (x310 (+ x827 32)))) (x137 (x123 (x310 (+ x827 64)))) (x137 (x123 (x310 (+ 96 x827)))) (x137 (x123 (x310 (+ 128 x827)))) (x137 (x123 (x310 (+ x827 160)))) 0) (ite (>= 224 x1364) (x900 (x137 (x123 x827)) (x137 (x123 (x310 (+ x827 32)))) (x137 (x123 (x310 (+ x827 64)))) (x137 (x123 (x310 (+ 96 x827)))) (x137 (x123 (x310 (+ 128 x827)))) (x137 (x123 (x310 (+ x827 160)))) (x137 (x123 (x310 (+ 192 x827)))) 0) (x137 x1454)))))))) 0) x945) (= (x780 x945) x503) (= (x123 128) x291) (not (> 1000000000 x503))) (and (=> (and (= 0 x224) (not x1462)) x1285) (=> x1462 x821)))))))))
(assert (x1419 x520))
(assert (= x1196 (and x858 x1100)))
(assert (x1419 x24))
(assert (x1419 x545))
(assert (x1419 x1211))
(assert (x1257 (- x503 x1231)))
(assert (x1188 x1223))
(assert (x1496 x1106 x503))
(assert (= (x1238 (+ (x310 (+ 68 x1522)) (- (+ 68 (- (+ (- x1163 x1522) x567) 160)) 68))) 0))
(assert (x1419 x1305))
(assert (= 0 (x1310 x353)))
(assert (= 0 (x1310 (+ (x310 (+ 68 x1194)) (- (+ (- (x310 (+ 128 x697)) 160) 68) 68)))))
(assert (x1366 (x1418 (x310 (+ 32 x827)))))
(assert (= x1340 (=> (and (= (> x598 x530) x55) (or (not x55) (and x55 (= x1151 (x310 (+ x711 x530)))))) x289)))
(assert (x1366 (x457 (x310 (+ 192 x114)))))
(assert (= 1208925819614629174706176 (x19 (x1088 1208925819614629174706176))))
(assert (= (x19 (x1088 2376452955)) 2376452955))
(assert (x406 x687))
(assert (= x710 (x19 (x137 x710))))
(assert (= (and (not x1321) x1329) x533))
(assert (x1419 x1395))
(assert (= (=> (= x83 (> x238 0)) (and (=> (not x83) x349) (=> (and x83 (and (= x1403 (x310 (+ x699 31))) (= x383 (x810 (- x324 x699))) (= x1037 (x1348 (* 32 x440))) (= x1492 x911) (= (x174 x1403 32) x440) (= x909 (x310 (+ x911 x952))) (< 0 x92) (= x771 (x810 (- x324 x911))) (= (x310 (+ x88 x699)) x666) (= (x310 (+ x1037 32)) x1365) (= (> x621 0) x1084) (= x570 (x310 (+ x909 32))) (not (or (and (<= x570 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x383)) (and (< x383 x570) (= (<= x570 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x383))))) (= (x310 (+ x1365 x1295)) x1522) (= x952 (x1463 x1492)) (= (x1463 x909) x699) (= x88 (x310 (+ x1295 32))) (= (x1463 x1208) x1087) (< 0 x238) (= (x1066 x1295) x621) (or (and (<= x9 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x952)) (and (> x9 x952) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x9) (<= x952 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (x810 (- x771 31)) x9) (= x1208 x859) (not (> x699 18446744073709551615)))) (and (=> x1084 x855) (=> (and (not x1084) (= x1526 0)) x1187))))) x783))
(assert (x1388 x449))
(assert (= (x19 (x137 x603)) x603))
(assert (x1388 x414))
(assert (x1366 (x1273 (x310 (+ x114 160)))))
(assert (x1257 x1232))
(assert (x1419 x608))
(assert (x1145 x1232 x1231 x1106 x503))
(assert (x32 x552))
(assert (= x1115 (and x208 x546)))
(assert (= (x19 (x137 (x389 (x310 (+ 64 x827))))) (x389 (x310 (+ x827 64)))))
(assert (x1419 x1454))
(assert (= (and x232 (not x263)) x46))
(assert (x1419 x156))
(assert (=> (>= 10000 (x158 (x310 (+ x827 32)))) (= (x1088 (x158 (x310 (+ 32 x827)))) (x137 (x158 (x310 (+ x827 32)))))))
(assert (x1419 x1433))
(assert (= 0 (x28 (x310 (+ 64 x697)))))
(assert (x1366 x603))
(assert (=> (<= (x1093 (x310 (+ x827 64))) 10000) (= (x1088 (x1093 (x310 (+ 64 x827)))) (x137 (x1093 (x310 (+ x827 64)))))))
(assert (x1419 x401))
(assert (x1419 x50))
(assert (x1419 x225))
(assert (x1419 x814))
(assert (= (=> (and (= x510 (x310 (+ x827 x814))) (= (x310 (+ 32 x510)) x730) (= (x810 (- x1452 32)) x1319) (= x981 (>= 224 x1319)) (= x1452 (x810 (- x730 x827)))) (and x981 (=> (and (= x461 (ite (>= 32 x1319) (x547 (x137 (x158 x827)) 0) (ite (>= 64 x1319) (x340 (x137 (x158 x827)) (x137 (x158 (x310 (+ x827 32)))) 0) (ite (<= x1319 96) (x1466 (x137 (x158 x827)) (x137 (x158 (x310 (+ x827 32)))) (x137 (x158 (x310 (+ x827 64)))) 0) (ite (>= 128 x1319) (x319 (x137 (x158 x827)) (x137 (x158 (x310 (+ x827 32)))) (x137 (x158 (x310 (+ 64 x827)))) (x137 (x158 (x310 (+ 96 x827)))) 0) (ite (>= 160 x1319) (x1162 (x137 (x158 x827)) (x137 (x158 (x310 (+ x827 32)))) (x137 (x158 (x310 (+ 64 x827)))) (x137 (x158 (x310 (+ 96 x827)))) (x137 (x158 (x310 (+ x827 128)))) 0) (ite (>= 192 x1319) (x1520 (x137 (x158 x827)) (x137 (x158 (x310 (+ 32 x827)))) (x137 (x158 (x310 (+ 64 x827)))) (x137 (x158 (x310 (+ 96 x827)))) (x137 (x158 (x310 (+ x827 128)))) (x137 (x158 (x310 (+ 160 x827)))) 0) (ite (<= x1319 224) (x900 (x137 (x158 x827)) (x137 (x158 (x310 (+ 32 x827)))) (x137 (x158 (x310 (+ x827 64)))) (x137 (x158 (x310 (+ x827 96)))) (x137 (x158 (x310 (+ 128 x827)))) (x137 (x158 (x310 (+ 160 x827)))) (x137 (x158 (x310 (+ x827 192)))) 0) (x137 x838))))))))) (= x767 (>= 224 x1452))) (and x767 (=> (and (= x1232 (x780 x682)) (= x942 (x267 x1231 x1232)) (<= x1232 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x267 x1231 x1232)) (= x1008 (x174 x942 1000000000000000000000000)) (= (> x944 0) x263) (= x682 (x340 (x137 x520) (ite (<= x1452 32) (x547 (x137 (x158 x827)) 0) (ite (>= 64 x1452) (x340 (x137 (x158 x827)) (x137 (x158 (x310 (+ x827 32)))) 0) (ite (>= 96 x1452) (x1466 (x137 (x158 x827)) (x137 (x158 (x310 (+ 32 x827)))) (x137 (x158 (x310 (+ 64 x827)))) 0) (ite (<= x1452 128) (x319 (x137 (x158 x827)) (x137 (x158 (x310 (+ x827 32)))) (x137 (x158 (x310 (+ x827 64)))) (x137 (x158 (x310 (+ x827 96)))) 0) (ite (<= x1452 160) (x1162 (x137 (x158 x827)) (x137 (x158 (x310 (+ 32 x827)))) (x137 (x158 (x310 (+ 64 x827)))) (x137 (x158 (x310 (+ x827 96)))) (x137 (x158 (x310 (+ x827 128)))) 0) (ite (>= 192 x1452) (x1520 (x137 (x158 x827)) (x137 (x158 (x310 (+ x827 32)))) (x137 (x158 (x310 (+ x827 64)))) (x137 (x158 (x310 (+ 96 x827)))) (x137 (x158 (x310 (+ 128 x827)))) (x137 (x158 (x310 (+ x827 160)))) 0) (ite (<= x1452 224) (x900 (x137 (x158 x827)) (x137 (x158 (x310 (+ x827 32)))) (x137 (x158 (x310 (+ x827 64)))) (x137 (x158 (x310 (+ x827 96)))) (x137 (x158 (x310 (+ 128 x827)))) (x137 (x158 (x310 (+ x827 160)))) (x137 (x158 (x310 (+ 192 x827)))) 0) (x137 x1410)))))))) 0)) (= x944 (x158 128)) (>= x1232 0)) (and (=> x263 x525) (=> (and (= x198 0) (not x263)) x1416))))))) x1241))
(assert (x406 x191))
(assert (= x1019 (and (not x961) x1374)))
(assert (= (x1069 x1334 1) (x174 x1334 2)))
(assert (= (x19 (x137 x634)) x634))
(assert (= (x665 (- (+ (- (+ 68 (- (x310 (+ x400 32)) 160)) 68) (x310 (+ 68 x1522))) x1302)) 0))
(assert (x1419 x402))
(assert (= true x963))
(assert (= x1510 (=> (and (= x1417 (x500 256)) (= x1292 (not (< 128 x321))) (= x1250 (x310 (+ x697 96)))) (and (=> (= x650 128) x978) x1292))))
(assert (x1419 x344))
(assert (x1419 x493))
(assert (= (x19 (x137 (x385 x114))) (x385 x114)))
(assert (and (=> (and (> x1118 0) (< 0 32)) (and (>= x1118 (* 32 (x174 x1118 32))) (< (- x1118 32) (* 32 (x174 x1118 32))))) (x1195 x1118 32) (= (- x1118 (x928 31 x1118)) (* 32 (x174 x1118 32))) (x918 x1118 32) (x1420 x1118 32) (x818 x1118 32)))
(assert (x1419 x566))
(assert (= 0 (x1310 (+ x567 (- (x310 (+ x114 128)) x1522)))))
(assert (and (x679 x36 32) (=> (< 0 32) (= x36 (+ (* 32 (x174 x36 32)) (x873 x36 32)))) (x801 x36 32) (x982 x36 32)))
(assert (= (x665 (- (+ (- (+ (- (+ (x310 (+ x1194 68)) (- (+ 68 (- (x310 (+ x697 68)) 160)) 68)) 160) 68) 68) (x310 (+ x1522 68))) x1302)) 0))
(assert (= (x28 (+ x1198 (- (+ x567 (- x1219 x1522)) x1194))) 0))
(assert (x1145 x503 x1106 x1231 x1232))
(assert (x1366 x459))
(assert (= (or x207 x1412 x1115) x950))
(assert (x1419 x1252))
(assert (x1419 x806))
(assert (x1419 x1302))
(assert (= (x137 2868243304) (x1088 2868243304)))
(assert (x1366 (x1044 x827)))
(assert (x1366 (x1044 (x310 (+ x827 128)))))
(assert (= (x1238 (+ (- (+ (- (+ x567 (- x114 x1522)) 160) 68) 68) (x310 (+ x1522 68)))) 0))
(assert (= x568 (and x315 x1279)))
(assert (=> (<= (x1056 (x310 (+ x827 128))) 10000) (= (x1088 (x1056 (x310 (+ x827 128)))) (x137 (x1056 (x310 (+ x827 128)))))))
(assert (= 0 (x665 (- (x310 (+ x114 32)) x1302))))
(assert (x1419 x747))
(assert (x1419 x30))
(assert (= (x19 (x137 (x106 (x310 (+ 64 x827))))) (x106 (x310 (+ 64 x827)))))
(assert (= (x665 (- x1163 x1302)) 0))
(assert (= x431 (or x1303 x890)))
(assert (x1419 x1284))
(assert (x1419 x1091))
(assert (= (or x1139 x1335) x1329))
(assert (x1419 x889))
(assert (= (x1238 (x310 (+ x1522 192))) 0))
(assert (x1366 (x106 x827)))
(assert (= (x665 (- (+ (- (+ (- (+ x567 (- x114 x1522)) 160) 68) 68) (x310 (+ 68 x1522))) x1302)) 0))
(assert (x1419 x605))
(assert (x406 x412))
(assert (x1366 x369))
(assert (= x815 (=> (and (= x111 (< x51 x589)) (or (and x111 (= x1517 (x310 (+ x400 x51)))) (not x111))) x272)))
(assert (= 0 (x1238 (+ (- (+ 68 (- (+ (x310 (+ x1194 68)) (- (+ (- (+ x1198 (- (+ (- (x310 (+ 96 x114)) x1522) x567) x1194)) 160) 68) 68)) 160)) 68) (x310 (+ x1522 68))))))
(assert (x1419 x198))
(assert (x1366 x835))
(assert (= (x19 (x137 (x1093 (x310 (+ 32 x827))))) (x1093 (x310 (+ 32 x827)))))
(assert (x1419 x1337))
(assert (= (or x435 x391) x1390))
(assert (= (x1238 (x310 (+ x114 64))) 0))
(assert (= 105741823712686017468623175546783284002282906648395100416871018427217256382464 (x19 (x1088 105741823712686017468623175546783284002282906648395100416871018427217256382464))))
(assert (x1419 x641))
(assert (x1257 x92))
(assert (= (and x927 x960) x1335))
(assert (= x1523 (and (not x382) x311)))
(assert (= (x1088 2872958028) (x137 2872958028)))
(assert (= (x385 (x310 (+ x114 32))) (x19 (x137 (x385 (x310 (+ 32 x114)))))))
(assert (x1419 x1012))
(assert (= 0 (x665 (- (x310 (+ 96 x114)) x1302))))
(assert (= (=> (and (= x905 (not (< 32 x348))) (= x1010 x114) (= x678 (x457 x1043)) (= x1043 x88)) (and (=> (= x183 32) x534) x905)) x475))
(assert (= (and x160 x1202) x966))
(assert (x1366 x692))
(assert (x1366 (x1056 (x310 (+ 128 x827)))))
(assert (x1366 (x1093 (x310 (+ 128 x827)))))
(assert (= (x1310 (x310 (+ x400 192))) 0))
(assert (= x762 (=> (and (= x1351 (> x1498 x601)) (or (not x1351) (and (= (x310 (+ x601 x827)) x1431) x1351))) x93)))
(assert (x1419 x279))
(assert (x908 x36))
(assert (x1366 (x746 (x310 (+ x1522 32)))))
(assert (x1419 x1152))
(assert (= (and x750 x367) x1289))
(assert (x1366 x1454))
(assert (=> (>= 10000 (x1273 x114)) (= (x137 (x1273 x114)) (x1088 (x1273 x114)))))
(assert (x1419 x1112))
(assert (= (x1310 (+ (x310 (+ 68 x1194)) (- (+ 68 (- (+ x1198 (- (+ x567 (- x1178 x1522)) x1194)) 160)) 68))) 0))
(assert (x1419 x517))
(assert (= 0 (x1238 (+ (- (+ 68 (- (+ (- (+ (- (x310 (+ x697 64)) 160) 68) 68) (x310 (+ x1194 68))) 160)) 68) (x310 (+ 68 x1522))))))
(assert (x1257 (- x1106 x1231)))
(assert (= x653 (=> (and (= 0 x401) (= x444 x867)) x865)))
(assert (=> (<= (x538 (x310 (+ 128 x400))) 10000) (= (x1088 (x538 (x310 (+ 128 x400)))) (x137 (x538 (x310 (+ 128 x400)))))))
(assert (= 0 (x28 (x310 (+ x697 192)))))
(assert (x1366 (x538 (x310 (+ x400 192)))))
(assert (x908 x770))
(assert (x989 x1106 x503 x1231 x1232))
(assert (x1419 x893))
(assert (x32 x184))
(assert (x1419 x261))
(assert (x1419 x891))
(assert (= (x19 (x137 (x696 (x310 (+ x697 32))))) (x696 (x310 (+ 32 x697)))))
(assert (= (or x593 x1022) x118))
(assert (= (x137 1000000000000000000000000) (x1088 1000000000000000000000000)))
(assert (= 0 (x28 (+ 128 (x310 (+ x697 68))))))
(assert (= x1007 (=> (and (= x361 (> x1091 x270)) (or x361 (not x361))) x483)))
(assert (x1419 x934))
(assert (= (x1238 (x310 (+ x114 160))) 0))
(assert (x1419 x182))
(assert (= (x1088 1405909242) (x137 1405909242)))
(assert (= (x19 (x1088 2075580284)) 2075580284))
(assert (= (x1238 (x310 (+ x1522 68))) 0))
(assert (x1419 x947))
(assert (= (x19 (x137 x187)) x187))
(assert (= x869 (x19 (x137 x869))))
(assert (=> (<= x1078 10000) (= (x1088 x1078) (x137 x1078))))
(assert (x1419 x159))
(assert (=> (>= 10000 (x746 (x310 (+ x1522 160)))) (= (x1088 (x746 (x310 (+ x1522 160)))) (x137 (x746 (x310 (+ x1522 160)))))))
(assert (= (x19 (x137 (x1056 (x310 (+ 128 x827))))) (x1056 (x310 (+ 128 x827)))))
(assert (= (x665 (- (x310 (+ 64 x114)) x1302)) 0))
(assert (= x1440 (and x1070 x329)))
(assert (x1419 x1199))
(assert (=> (<= (x637 (x310 (+ 32 x400))) 10000) (= (x1088 (x637 (x310 (+ x400 32)))) (x137 (x637 (x310 (+ 32 x400)))))))
(assert (= (x665 (- x560 x1302)) 0))
(assert (= x838 (x19 (x137 x838))))
(assert (x1419 x1452))
(assert (= (x665 (- (x310 (+ x1522 128)) x1302)) 0))
(assert (= (x1088 86587964985574495804695408441416066048332504164997306664935388907017567469568) (x137 86587964985574495804695408441416066048332504164997306664935388907017567469568)))
(assert (=> (<= x643 10000) (= (x1088 x643) (x137 x643))))
(assert (= (x19 (x1088 1000000000000000000000000)) 1000000000000000000000000))
(assert (= 0 (x1238 (x310 (+ x1522 96)))))
(assert (=> (>= 10000 (x106 (x310 (+ 32 x827)))) (= (x1088 (x106 (x310 (+ 32 x827)))) (x137 (x106 (x310 (+ x827 32)))))))
(assert (x1419 x357))
(assert (x1419 x1231))
(assert (x1366 (x746 (x310 (+ x1522 160)))))
(assert (x1419 x759))
(assert (= (x665 (- (+ (- (+ (- (+ (- (+ 68 (- (x310 (+ 192 x697)) 160)) 68) (x310 (+ x1194 68))) 160) 68) 68) (x310 (+ 68 x1522))) x1302)) 0))
(assert (x1419 x883))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x19 (x1088 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x1388 x687))
(assert (x1419 x1224))
(assert (= 0 (x1310 (+ (- (x310 (+ 160 x114)) x1522) x567))))
(assert (x1419 x580))
(assert (= x949 (and (not x973) x974)))
(assert (= (and x466 x1427) x274))
(assert (x1419 x1512))
(assert (= (=> (and (= x827 x1134) (= (x123 160) x1164) (= x1313 (not (< 32 x291)))) (and (=> (= 32 x224) x1285) x1313)) x821))
(assert (=> (<= x838 10000) (= (x1088 x838) (x137 x838))))
(assert (= (x385 (x310 (+ 160 x114))) (x19 (x137 (x385 (x310 (+ 160 x114)))))))
(assert (x908 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x1088 3624036542) (x137 3624036542)))
(assert (= (x696 (x310 (+ 64 x697))) (x19 (x137 (x696 (x310 (+ 64 x697)))))))
(assert (= x1157 (or (and x1280 (not x1486)) x726)))
(assert (x1419 x1325))
(assert (and (x679 x412 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= x412 (+ (* 1461501637330902918203684832716283019655932542976 (x174 x412 1461501637330902918203684832716283019655932542976)) (x873 x412 1461501637330902918203684832716283019655932542976)))) (x801 x412 1461501637330902918203684832716283019655932542976) (x982 x412 1461501637330902918203684832716283019655932542976)))
(assert (x1419 x1461))
(assert (x1419 x1290))
(assert (= (and x35 x559) x1413))
(assert (= (and x557 x812) x820))
(assert (x1496 x1232 (- x1231 x503)))
(assert (= 0 (x1238 (+ (x310 (+ 68 x1522)) (- (+ (- (x310 (+ x400 192)) 160) 68) 68)))))
(assert (=> (>= 10000 (x1418 (x310 (+ 64 x827)))) (= (x137 (x1418 (x310 (+ x827 64)))) (x1088 (x1418 (x310 (+ x827 64)))))))
(assert (= x239 (and x107 x338)))
(assert (x1419 x48))
(assert (= x901 (=> (and (= x814 (x49 128)) (= (> x814 0) x1279)) (and (=> x1279 x1442) (=> (and (not x1279) (= 0 x648)) x685)))))
(assert (= 0 (x665 (- (+ (x310 (+ x1522 68)) (- (+ 68 (- (+ (- (+ (- (+ (x310 (+ x697 68)) 96) 160) 68) 68) (x310 (+ 68 x1194))) 160)) 68)) x1302))))
(assert (= (x158 x827) (x19 (x137 (x158 x827)))))
(assert (and (and (= (- (* 32 (- x238 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x238 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x267 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x238 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x238 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x267 32 (- x238 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x267 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x238) (- (* 32 x238) (* x238 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1150 32 x238) (x512 32 x238) (x1421 32 x238) (x1016 32 x238) (= (x267 32 x238) (* 32 x238)) (x951 32 x238)))
(assert (x1419 x1024))
(assert (x1257 x238))
(assert (= (x385 (x310 (+ 64 x114))) (x19 (x137 (x385 (x310 (+ 64 x114)))))))
(assert (=> (<= x710 10000) (= (x1088 x710) (x137 x710))))
(assert (= (x1238 (x310 (+ 64 x827))) 0))
(assert (= x930 (x19 (x137 x930))))
(assert (x1419 x414))
(assert (and (x679 x1252 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= x1252 (+ (* 1461501637330902918203684832716283019655932542976 (x174 x1252 1461501637330902918203684832716283019655932542976)) (x873 x1252 1461501637330902918203684832716283019655932542976)))) (x801 x1252 1461501637330902918203684832716283019655932542976) (x982 x1252 1461501637330902918203684832716283019655932542976)))
(assert (= 1461501637330902918203684832716283019655932542975 (x19 (x1088 1461501637330902918203684832716283019655932542975))))
(assert (x1257 (- x1231 x1106)))
(assert (= x817 (and (not x111) x453)))
(assert (x1419 x710))
(assert (= 0 (x1310 (+ (x310 (+ x1194 68)) (- (+ 68 (- (+ 128 (x310 (+ x697 68))) 160)) 68)))))
(assert (= (and x441 x325) x307))
(assert (x1419 x666))
(assert (= (=> (and (= x1411 x571) (= (x310 (+ 32 x561)) x545) (= x946 (x310 (+ x545 32))) (= x561 (x310 (+ 32 x1198))) (= x861 x959) (= 128 x1411) (= x221 1)) x1105) x661))
(assert (= x1168 (=> (and (= x638 (not (< 128 x80))) (= x1476 (x310 (+ x1398 96))) (= x660 (x1457 256))) (and x638 (=> (= x1450 128) x880)))))
(assert (x1366 x1110))
(assert (= x1075 (and x1193 x442)))
(assert (= (x123 (x310 (+ 96 x827))) (x19 (x137 (x123 (x310 (+ x827 96)))))))
(assert (= (and x1094 x144) x1483))
(assert (x1419 x1179))
(assert (= 0 (x1238 (+ (x310 (+ 68 x1522)) 32))))
(assert (= x857 (or x1387 x1142 x990 x1359 x334)))
(assert (x1419 x1449))
(assert (x1366 (x1101 (x310 (+ x827 64)))))
(assert (x1419 x1114))
(assert (x1419 x145))
(assert (x1496 x1106 (- x503 x1232)))
(assert (x1419 x413))
(assert (x1419 x609))
(assert (= (and (not x415) x355) x824))
(assert (and (x679 x339 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= x339 (+ (* 1461501637330902918203684832716283019655932542976 (x174 x339 1461501637330902918203684832716283019655932542976)) (x873 x339 1461501637330902918203684832716283019655932542976)))) (x801 x339 1461501637330902918203684832716283019655932542976) (x982 x339 1461501637330902918203684832716283019655932542976)))
(assert (= x878 (and (not x172) x1001)))
(assert (=> (>= 10000 (x746 (x310 (+ 64 x1522)))) (= (x1088 (x746 (x310 (+ 64 x1522)))) (x137 (x746 (x310 (+ 64 x1522)))))))
(assert (x1419 x68))
(assert (x989 x1231 x1232 x1106 x503))
(assert (x1419 x425))
(assert (= x595 (and x218 x916)))
(assert (= 0 (x665 (- (+ (x310 (+ 68 x1522)) 96) x1302))))
(assert (x1419 x409))
(assert (= x542 (or x734 x201)))
(assert (=> (<= (x389 (x310 (+ 32 x827))) 10000) (= (x1088 (x389 (x310 (+ 32 x827)))) (x137 (x389 (x310 (+ 32 x827)))))))
(assert (= 0 (x28 (+ (x310 (+ x697 68)) 96))))
(assert (= x1253 (and x857 x55)))
(assert (x1419 x964))
(assert (x1419 x760))
(assert (= 0 (x1238 (+ (x310 (+ x1522 68)) (- (+ 68 (- (+ (x310 (+ 68 x1194)) (- (+ 68 (- x697 160)) 68)) 160)) 68)))))
(assert (x1419 x999))
(assert (= x1027 (and x263 x232)))
(assert (x1419 x1205))
(assert (= x726 (and x1486 x1280)))
(assert (x1419 x1370))
(assert (= (x665 (- (+ (x310 (+ 68 x1522)) (- (+ 68 (- x393 160)) 68)) x1302)) 0))
(assert (x1366 x135))
(assert (= 0 (x28 (+ x1198 (- x353 x1194)))))
(assert (=> (>= 10000 (x696 (x310 (+ 32 x697)))) (= (x1088 (x696 (x310 (+ 32 x697)))) (x137 (x696 (x310 (+ x697 32)))))))
(assert (= (and x285 x491) x749))
(assert (x1419 x620))
(assert (= 0 (x665 (- (+ (x310 (+ 68 x1522)) (- (+ (- (+ (- (+ 68 (- (+ (x310 (+ x697 68)) 160) 160)) 68) (x310 (+ x1194 68))) 160) 68) 68)) x1302))))
(assert (and (x679 x947 32) (=> (< 0 32) (= x947 (+ (* 32 (x174 x947 32)) (x873 x947 32)))) (x801 x947 32) (x982 x947 32)))
(assert (x908 x1245))
(assert (= (=> (= (= 0 x1294) x798) (and (=> x798 x277) (=> (and (not x798) (and (= x405 (x310 (+ x697 x1230))) (= (x310 (+ x136 31)) x170) (= x346 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x136)) (< x136 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x136))) (= (x928 115792089237316195423570985008687907853269984665640564039457584007913129639904 x170) x1230))) (and (=> (and (not x346) (and (= x1252 (x522 x697)) (= x1400 (= x870 x1252)) (= x870 (x928 1461501637330902918203684832716283019655932542975 x1252)))) (and (=> (and x1400 (and (= (= x643 x1252) x861) (= x1198 x405))) x661) (=> (not x1400) x277))) (=> x346 x277))))) x286))
(assert (x908 x1461))
(assert (x1419 x1492))
(assert (= x974 (and x243 x1148)))
(assert (= 0 (x1238 (+ (x310 (+ x1522 68)) (- (+ (- x400 160) 68) 68)))))
(assert (x1419 x1041))
(assert (= 0 (x1310 (+ (- (+ 68 (- (+ x1198 (- (+ x567 (- x1295 x1522)) x1194)) 160)) 68) (x310 (+ 68 x1194))))))
(assert (x1419 x434))
(assert (=> (>= 10000 (x1044 (x310 (+ 160 x827)))) (= (x1088 (x1044 (x310 (+ 160 x827)))) (x137 (x1044 (x310 (+ 160 x827)))))))
(assert (= (x1310 256) 0))
(assert (x1366 (x385 (x310 (+ x114 192)))))
(assert (x1419 x185))
(assert (= (=> (and (= x1218 (> x600 x246)) (or (and (= x1470 (x310 (+ x400 x246))) x1218) (not x1218))) x1171) x528))
(assert (x1419 x104))
(assert (x1366 (x123 (x310 (+ x827 96)))))
(assert (= 0 (x1238 (x310 (+ 192 x114)))))
(assert (x1419 x601))
(assert (x1419 x1352))
(assert (= 0 (x1310 (+ (x310 (+ x1194 68)) (- (+ 68 (- (+ x1198 (- (+ x567 (- (x310 (+ x114 96)) x1522)) x1194)) 160)) 68)))))
(assert (= (x158 (x310 (+ 192 x827))) (x19 (x137 (x158 (x310 (+ 192 x827)))))))
(assert (x1366 (x538 (x310 (+ 128 x400)))))
(assert (x1366 (x746 x1522)))
(assert (= x845 (=> (and (and (and (not (> 3592363634 x495)) (not (= 3592363634 x495)) (= (x810 (- x1235 4)) x236) (= 105741823712686017468623175546783284002282906648395100416871018427217256382464 x852) x1079 (= (x1429 (x137 x643)) x683) (>= x1235 68) (= x1314 x1235) (not (= x495 3624036542)) (= 3922182229 x495) (not (< x1235 4)) (= x1038 (or (and (> 32 x236) (= (<= x236 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x236 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (= x80 (x624 36)) x1079) (> x683 0) (not (> 2376452955 x495))) x275) (and (= x1314 (x810 (- x145 x1194))) (= x275 (= x643 x893)) (= (x310 (+ x1398 x100)) x145) (= x100 (x928 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1217)) (= x1217 (x310 (+ x80 31))))) (and (=> (and (= x301 (and (> x1235 67) (= true (<= x1235 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (not x1038)) (and (=> (and (and (= x292 (x793 36)) (= (< 18446744073709551615 x292) x1487)) x301) (and (=> (and (and (= (x310 (+ 31 x848)) x1052) (= (x928 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1493) x1006) (= (or x147 x635) x715) (= x1427 (= (ite x715 1 0) 0)) (= 128 x1083) (= x697 (x310 (+ x1336 128))) (= x1493 (x310 (+ x292 31))) (= (< 18446744073709551615 x697) x635) (= (x928 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1052) x1336) (= x147 (< x697 128)) (= x848 (x310 (+ x1006 32)))) (not x1487)) (and (=> (not x1427) x277) (=> (and x1427 (and (= x934 (x310 (+ 68 x292))) (= (> x934 x1235) x985))) (and (=> x985 x277) (=> (and (and (= (< 0 x321) x415) (= x1248 (x310 (+ 160 x292))) (= x321 (x153 128))) (not x985)) (and (=> (and x415 (and (= x250 x697) (= x755 (> x321 32)) (= (x153 160) x276))) (and (=> (and (and (= x1432 (x310 (+ 32 x697))) (= (> x321 64) x540) (= x293 (x922 192))) x755) (and (=> (and (= 64 x650) (not x540)) x978) (=> (and x540 (and (= (x345 224) x1341) (= x144 (> x321 96)) (= (x310 (+ 64 x697)) x919))) (and (=> x144 x1510) (=> (and (= x650 96) (not x144)) x978))))) (=> (and (not x755) (= x650 32)) x978))) (=> (and (= x650 0) (not x415)) x978))))))) (=> x1487 x277))) (=> (not x301) x277))) (=> x1038 x277)))))
(assert (= x1438 (and x275 x118)))
(assert (= (x665 (- (+ (- (+ (- (+ (x310 (+ 68 x1194)) (- (+ 68 (- (x310 (+ x697 64)) 160)) 68)) 160) 68) 68) (x310 (+ x1522 68))) x1302)) 0))
(assert (x1419 x1161))
(assert (= (x19 (x137 (x1056 (x310 (+ 160 x827))))) (x1056 (x310 (+ 160 x827)))))
(assert (x1419 x498))
(assert (= 0 (x665 (- (+ (- (+ 68 (- (+ (x310 (+ x1194 68)) (- (+ (- (+ x1198 (- (+ x567 (- x1295 x1522)) x1194)) 160) 68) 68)) 160)) 68) (x310 (+ x1522 68))) x1302))))
(assert (x1366 (x866 192)))
(assert (= (x137 3044154673) (x1088 3044154673)))
(assert (=> (>= 10000 x1508) (= (x137 x1508) (x1088 x1508))))
(assert (x1419 x560))
(assert (and (x679 x947 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x947 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x174 x947 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x873 x947 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x801 x947 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x982 x947 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1366 x1410))
(assert (= 0 (x1238 x1178)))
(assert (x1366 (x106 (x310 (+ 32 x827)))))
(assert (x1419 x582))
(assert (= (x19 (x1088 18446744073709551615)) 18446744073709551615))
(assert (=> (>= 10000 (x123 (x310 (+ 128 x827)))) (= (x1088 (x123 (x310 (+ x827 128)))) (x137 (x123 (x310 (+ 128 x827)))))))
(assert (x1419 x621))
(assert (x1366 (x389 (x310 (+ x827 64)))))
(assert (= (x1310 (+ (- (+ (- (+ x1198 (- (+ x567 (- (x310 (+ x114 128)) x1522)) x1194)) 160) 68) 68) (x310 (+ x1194 68)))) 0))
(assert (x1419 x246))
(assert (and (x679 x1493 32) (=> (< 0 32) (= x1493 (+ (* 32 (x174 x1493 32)) (x873 x1493 32)))) (x801 x1493 32) (x982 x1493 32)))
(assert (= x164 (=> (and (and (= (x310 (+ x891 x1426)) x1065) (= x947 (x310 (+ x1224 31))) (= x325 (= x872 x710)) (= x1426 (x928 115792089237316195423570985008687907853269984665640564039457584007913129639904 x947)) (= x132 (x810 (- x1065 x1522)))) (and x325 (and (= (or (and (< x1058 32) (= (<= x1058 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1058 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1256) (not (= 2745196236 x1211)) (= 3044154673 x1211) (= (x928 115792089237316195423570985008687907853269984665640564039457584007913129639904 x414) x354) (= x502 (x928 115792089237316195423570985008687907853269984665640564039457584007913129639904 x36)) (= (x310 (+ x1395 68)) x1428) (= (x310 (+ x1247 31)) x414) (not x1256) (= x915 (< 18446744073709551615 x400)) (= (< 0 x246) x213) (= (x310 (+ 128 x354)) x400) (= x1395 (x921 36)) (= x421 (x310 (+ 160 x1395))) (= (= (x912 36) x1224) x1296) (= 128 x1511) (= x1247 (x310 (+ x502 32))) (= 82070247630637395725875354456112310357886651100252770250446759337321580986368 x955) (= 0 x805) (>= x759 68) (= x36 (x310 (+ x1395 31))) (not (> 2710164492 x1211)) (= x132 x759) (not (> 4 x759)) x1296 (< x1211 3109197603) (and (= true (<= x759 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 67 x759)) (= x485 (or x915 x748)) (not x962) (< 0 x662) (= (> x1395 18446744073709551615) x833) (not x833) (= (x810 (- x759 4)) x1058) (= (x1429 (x137 x710)) x662) (not (< x1211 1882194962)) (not (= x1211 2710164492)) (= x962 (> x1428 x759)) (= x246 (x501 128)) (= x748 (> 128 x400)) (= x805 (ite x485 1 0))))) (and (=> (and x213 (and (= (x501 160) x781) (= x1357 (< 32 x246)) (= x400 x1495))) (and (=> (and (= x600 32) (not x1357)) x528) (=> (and x1357 (and (= x882 (x743 192)) (= x775 (x310 (+ x400 32))) (= x382 (< 64 x246)))) (and (=> (and x382 (and (= (x310 (+ 64 x400)) x1183) (= x768 (> x246 96)) (= (x1286 224) x1002))) (and (=> (and (= 96 x600) (not x768)) x528) (=> x768 x1447))) (=> (and (not x382) (= x600 64)) x528))))) (=> (and (= x600 0) (not x213)) x528)))))
(assert (= (or x241 x206) x85))
(assert (= x863 (and x463 x341)))
(assert (= x1153 (x19 (x137 x1153))))
(assert (x1366 (x1093 (x310 (+ 192 x827)))))
(assert (x1366 (x1418 x827)))
(assert (x1366 (x637 x400)))
(assert (x1419 x1127))
(assert (= (x1310 (+ (x310 (+ x1194 68)) (- (+ (- (x310 (+ x697 160)) 160) 68) 68))) 0))
(assert (= (x19 (x137 (x1056 x827))) (x1056 x827)))
(assert (=> (>= 10000 (x1093 (x310 (+ x827 96)))) (= (x137 (x1093 (x310 (+ x827 96)))) (x1088 (x1093 (x310 (+ x827 96)))))))
(assert (=> (>= 10000 x135) (= (x137 x135) (x1088 x135))))
(assert (x1419 x447))
(assert (and (=> (and (> x24 0) (< 0 2)) (and (>= x24 (* 2 (x174 x24 2))) (< (- x24 2) (* 2 (x174 x24 2))))) (x1195 x24 2) (= (- x24 (x928 1 x24)) (* 2 (x174 x24 2))) (x918 x24 2) (x1420 x24 2) (x818 x24 2)))
(assert (x1419 x1478))
(assert (x1419 x1490))
(assert (=> (<= (x1093 (x310 (+ 192 x827))) 10000) (= (x137 (x1093 (x310 (+ 192 x827)))) (x1088 (x1093 (x310 (+ 192 x827)))))))
(assert (x1419 x1262))
(assert (x1419 x116))
(assert (=> (>= 10000 (x123 x827)) (= (x137 (x123 x827)) (x1088 (x123 x827)))))
(assert (x1419 x191))
(assert (= (x1088 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x137 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (x1310 (+ (- (+ 68 (- (+ x1198 (- x741 x1194)) 160)) 68) (x310 (+ 68 x1194)))) 0))
(assert (x1419 x122))
(assert (= 0 (x28 (+ 64 (x310 (+ x697 68))))))
(assert (= x1451 (and x283 x309)))
(assert (x1419 x913))
(assert (= (and x1131 x54) x468))
(assert (= (x19 (x137 (x1273 (x310 (+ 64 x114))))) (x1273 (x310 (+ x114 64)))))
(assert (x1419 x78))
(assert (and (x679 x365 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x365 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x174 x365 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x873 x365 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x801 x365 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x982 x365 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x908 32))
(assert (= (x866 256) (x19 (x137 (x866 256)))))
(assert (= (x19 (x137 (x1418 x827))) (x1418 x827)))
(assert (= (x19 (x137 (x746 (x310 (+ 64 x1522))))) (x746 (x310 (+ 64 x1522)))))
(assert (x1419 x1481))
(assert (x1419 x132))
(assert (= (x19 (x137 (x1101 (x310 (+ x827 96))))) (x1101 (x310 (+ 96 x827)))))
(assert (x1419 x141))
(assert (x1419 x136))
(assert (= (x1310 (+ (x310 (+ 68 x1194)) (- (+ (- x697 160) 68) 68))) 0))
(assert (= x272 (=> (and (= (x810 (- x1399 x400)) x1383) (= (x810 (- x1383 32)) x446) (= (<= x446 224) x1415) (= x1399 (x310 (+ x777 32))) (= (x310 (+ x400 x51)) x777)) (and x1415 (=> (= x108 (>= 224 x1383)) (and (=> (and (and x309 (and (= x988 36) (< 0 x883) (= x896 (x810 (- x988 4))) (= x1299 43611735268480658727360147997893738071856775535381453097760378360336924803072) (= x60 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x896) (and (> 32 x896) (= (<= x896 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= 1617649167 x450) (= x988 x1449) (not (< x450 1405909242)) (= x883 (x1429 (x137 x135))) (= x1130 x893) (> 2061859742 x450) (not (< x988 4)) (not (> 1617649167 x450)))) (and (= (x174 x1468 65536) x628) (= (= x135 x720) x309) (= x893 (x928 1461501637330902918203684832716283019655932542975 x339)) (= x165 (x310 (+ 32 x999))) (= x999 (x310 (+ 4 x400))) (= x720 (x928 1461501637330902918203684832716283019655932542975 x628)) (= x339 (x1096 x1263)) (= (ite (<= x1383 32) (x547 (x137 (x637 x400)) 0) (ite (>= 64 x1383) (x340 (x137 (x637 x400)) (x137 (x637 (x310 (+ 32 x400)))) 0) (ite (>= 96 x1383) (x1466 (x137 (x637 x400)) (x137 (x637 (x310 (+ 32 x400)))) (x137 (x637 (x310 (+ 64 x400)))) 0) (ite (<= x1383 128) (x319 (x137 (x637 x400)) (x137 (x637 (x310 (+ 32 x400)))) (x137 (x637 (x310 (+ x400 64)))) (x137 (x637 (x310 (+ 96 x400)))) 0) (ite (>= 160 x1383) (x1162 (x137 (x637 x400)) (x137 (x637 (x310 (+ x400 32)))) (x137 (x637 (x310 (+ x400 64)))) (x137 (x637 (x310 (+ 96 x400)))) (x137 (x637 (x310 (+ 128 x400)))) 0) (ite (>= 192 x1383) (x1520 (x137 (x637 x400)) (x137 (x637 (x310 (+ x400 32)))) (x137 (x637 (x310 (+ x400 64)))) (x137 (x637 (x310 (+ x400 96)))) (x137 (x637 (x310 (+ 128 x400)))) (x137 (x637 (x310 (+ 160 x400)))) 0) (ite (>= 224 x1383) (x900 (x137 (x637 x400)) (x137 (x637 (x310 (+ x400 32)))) (x137 (x637 (x310 (+ x400 64)))) (x137 (x637 (x310 (+ x400 96)))) (x137 (x637 (x310 (+ 128 x400)))) (x137 (x637 (x310 (+ 160 x400)))) (x137 (x637 (x310 (+ x400 192)))) 0) (x137 x925)))))))) x1263) (= (x1096 (x1088 0)) x1468) (= x551 x999) (= (x810 (- x165 x400)) x1449))) (and (=> (and (= x800 (= x893 x1130)) (not x60)) (and (=> (not x800) x653) (=> (and x800 (and (= x867 32) (= (x451 x895) x191) (= (x928 1461501637330902918203684832716283019655932542975 x191) x548) (= x401 1) (= (x340 (x137 x1130) (x1088 109) 0) x895))) x865))) (=> x60 x653))) x108))))))
(assert (= 1208925819614629174706175 (x19 (x1088 1208925819614629174706175))))
(assert (x1419 x1434))
(assert (=> (<= (x385 (x310 (+ 96 x114))) 10000) (= (x137 (x385 (x310 (+ x114 96)))) (x1088 (x385 (x310 (+ x114 96)))))))
(assert (and (x679 x1052 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1052 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x174 x1052 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x873 x1052 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x801 x1052 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x982 x1052 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x314 (or x674 x1297)))
(assert (x1419 x126))
(assert (= (=> (and (= x88 x1368) (= x957 (x1322 x1368)) (= x891 x791) (= x1507 (not (< 32 x1224)))) (and (=> (= 32 x271) x1443) x1507)) x143))
(assert (= x1105 (=> (and (and (= x4 192) (= x747 (x310 (+ 4 x740))) (= (x310 (+ 32 x1178)) x1163) (= x1175 (x240 x741)) (= (not (= x1175 0)) x1003) (= x517 (x310 (+ x747 32))) (= x626 (x310 (+ 32 x229))) (= (x310 (+ x18 x1522)) x740) (= x687 (x310 (+ 31 x571))) (= (= x135 x23) x455) (= (x310 (+ 32 x1181)) x1505) (= (= 0 x221) x575) (= x353 x1194) (= x256 (x810 (- x517 x740))) (= x34 (x240 x353)) (= (x310 (+ x13 32)) x729) (= x229 (x310 (+ x1194 32))) (= (x928 115792089237316195423570985008687907853269984665640564039457584007913129639904 x216) x18) (>= 1461501637330902918203684832716283019655932542975 x664) (= x189 (x657 x1178)) (= (x310 (+ x1505 32)) x13) (= x1175 x1274) (>= 1461501637330902918203684832716283019655932542975 x189) (= (x310 (+ x4 31)) x216) (not x575) (<= x34 1461501637330902918203684832716283019655932542975) (<= x1519 1461501637330902918203684832716283019655932542975) (= x1519 (x657 x1163)) (>= x23 0) (= (x240 x626) x1501) (not (or (and (< x4 192) (= (<= x4 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4))) (= (not x707) x809) (= (x310 (+ x567 32)) x1181) (= x664 (x657 x1522)) (>= 1461501637330902918203684832716283019655932542975 x23) (= (x310 (+ 32 x1522)) x1178) (not x1170) (= x1274 (ite x809 1 0)) (> 1461501637330902918203684832716283019655932542976 x23) (= x62 (x310 (+ 32 x729))) (= (= 0 x1175) x707) (= (x310 (+ x1205 x1194)) x567) (= (x310 (+ 32 x626)) x741) (= x641 x567) (<= x1501 65535) (= x1205 (x928 115792089237316195423570985008687907853269984665640564039457584007913129639904 x687)) (= (or (and (< x571 128) (= true (<= x571 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x571 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1170) (= x712 (x240 x229))) (and (and (< 0 x1023) (= (x926 x740) x930) (= (or (> x1251 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1251) true) (> 32 x1251))) x986) (= x121 x256) (not (< x1146 1405909242)) (= x1146 1617649167) (= x121 36) (= x916 (> x1392 0)) (= x1023 (x1429 (x137 x135))) (= x964 43611735268480658727360147997893738071856775535381453097760378360336924803072) (>= 1461501637330902918203684832716283019655932542975 x737) (not x986) (not (< x121 4)) (< x1146 2061859742) (= x664 x737) (= x1513 (x928 1461501637330902918203684832716283019655932542975 x412)) (not (> 1617649167 x1146)) (= x1392 (x926 x1295)) (= (x810 (- x121 4)) x1251) (= (x451 x1362) x412) (>= 1461501637330902918203684832716283019655932542975 x930) (= (x310 (+ x740 32)) x114) (= x1362 (x340 (x137 x664) (x1088 109) 0))) x455)) (and (=> (and (not x916) (= x760 0)) x1408) (=> x916 x1272)))))
(assert (= (x158 (x310 (+ 96 x827))) (x19 (x137 (x158 (x310 (+ x827 96)))))))
(assert (= (x28 (+ 192 (x310 (+ x697 68)))) 0))
(assert (=> (>= 10000 x597) (= (x1088 x597) (x137 x597))))
(assert (= x380 (=> (and (= (not (> x788 32)) x220) (= x631 x827) (= (x106 160) x588)) (and x220 (=> (= 32 x1152) x709)))))
(assert (and (x679 x170 32) (=> (< 0 32) (= x170 (+ (* 32 (x174 x170 32)) (x873 x170 32)))) (x801 x170 32) (x982 x170 32)))
(assert (x1366 x187))
(assert (x1419 x1117))
(assert (x1419 x725))
(assert (= 0 (x1310 (+ x567 (- x1295 x1522)))))
(assert (x1419 x113))
(assert (= x875 (and x1425 x717)))
(assert (= (x28 160) 0))
(assert (=> (<= (x1101 (x310 (+ x827 96))) 10000) (= (x1088 (x1101 (x310 (+ x827 96)))) (x137 (x1101 (x310 (+ x827 96)))))))
(assert (= x1393 (and (not x47) x796)))
(assert (x1419 x219))
(assert (=> (<= (x457 (x310 (+ x114 64))) 10000) (= (x137 (x457 (x310 (+ 64 x114)))) (x1088 (x457 (x310 (+ 64 x114)))))))
(assert (x908 x1217))
(assert (=> (<= (x1101 x827) 10000) (= (x1088 (x1101 x827)) (x137 (x1101 x827)))))
(assert (= 0 (x1238 (x310 (+ 128 x1522)))))
(assert (x1419 x769))
(assert (x1419 x1163))
(assert (= (and (not x967) x902) x704))
(assert (=> (<= (x1056 x827) 10000) (= (x1088 (x1056 x827)) (x137 (x1056 x827)))))
(assert (= (or x85 x724) x1135))
(assert (= (or x1030 x533) x1326))
(assert (= (x137 2061859742) (x1088 2061859742)))
(assert (x1419 x1431))
(assert (= 0 (x1238 (+ (x310 (+ 68 x1522)) (- (+ 68 (- (+ (- (+ 68 (- (+ (- (+ x567 (- (x310 (+ x114 192)) x1522)) x1194) x1198) 160)) 68) (x310 (+ x1194 68))) 160)) 68)))))
(assert (x1145 x1106 x503 x1232 x1231))
(assert (= (and x54 (not x1131)) x360))
(assert (x1419 x955))
(assert (= (x1238 (+ (- (+ 68 (- (x310 (+ x400 64)) 160)) 68) (x310 (+ 68 x1522)))) 0))
(assert (x1496 x503 (- x1106 x1231)))
(assert (=> (>= 10000 (x866 288)) (= (x1088 (x866 288)) (x137 (x866 288)))))
(assert (= 0 (x1238 (+ (- (+ (- (+ (x310 (+ x1194 68)) (- (+ 68 (- (+ x1198 (- (+ (- x1219 x1522) x567) x1194)) 160)) 68)) 160) 68) 68) (x310 (+ 68 x1522))))))
(assert (x1419 x53))
(assert (= (x1310 (+ x567 (- (x310 (+ 192 x114)) x1522))) 0))
(assert (= (x1310 (x310 (+ 96 x400))) 0))
(assert (x1419 x1246))
(assert (x1419 x930))
(assert (and (x679 x1039 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1039 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x174 x1039 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x873 x1039 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x801 x1039 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x982 x1039 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1419 x1184))
(assert (= (and x1369 x932) x428))
(assert (x1388 x1461))
(assert (x1419 x841))
(assert (= (and x1014 x963) x651))
(assert (=> (<= (x123 (x310 (+ 96 x827))) 10000) (= (x137 (x123 (x310 (+ x827 96)))) (x1088 (x123 (x310 (+ x827 96)))))))
(assert (= x750 (or x659 x1196)))
(assert (= 3211726123 (x19 (x1088 3211726123))))
(assert (x1419 x459))
(assert (= x804 (and (not x8) x523)))
(assert (= (x1238 (+ (- (+ (- (+ (- x1043 x1522) x567) 160) 68) 68) (x310 (+ 68 x1522)))) 0))
(assert (= (x1310 (+ (x310 (+ 68 x1194)) (- (+ (- (+ x1198 (- (+ x567 (- x114 x1522)) x1194)) 160) 68) 68))) 0))
(assert (= 0 (x1310 (+ (- (+ (- (+ 96 (x310 (+ x697 68))) 160) 68) 68) (x310 (+ x1194 68))))))
(assert (x1366 (x1418 (x310 (+ x827 96)))))
(assert (x1419 x1134))
(assert (= x593 (and x1467 x816)))
(assert (x1419 x1282))
(assert (= x176 (x19 (x137 x176))))
(assert (= (x19 (x1088 3044154673)) 3044154673))
(assert (= (x19 (x137 (x389 x827))) (x389 x827)))
(assert (x1419 x9))
(assert (x1419 x756))
(assert (= (x1310 (+ (x310 (+ x1194 68)) (- (+ 68 (- (+ (- (+ x567 (- (x310 (+ x114 160)) x1522)) x1194) x1198) 160)) 68))) 0))
(assert (x1419 x223))
(assert (x908 x331))
(assert (x1366 (x1418 (x310 (+ x827 160)))))
(assert (= (=> (= x1499 (not (< 1 x238))) (and x1499 (=> (and (= x1295 x1490) (= x1102 x735)) x783))) x1315))
(assert (x1192 x1051))
(assert (= (x1088 4294967296) (x137 4294967296)))
(assert (= (x1088 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x137 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1366 x634))
(assert (x1419 x592))
(assert (x406 x122))
(assert (=> (>= 10000 (x1093 (x310 (+ 32 x827)))) (= (x137 (x1093 (x310 (+ 32 x827)))) (x1088 (x1093 (x310 (+ x827 32)))))))
(assert (x1419 x1058))
(assert (x1366 (x385 x114)))
(assert (x1145 x1231 x1232 x1106 x503))
(assert (x1366 (x123 (x310 (+ x827 32)))))
(assert (= 0 (x1238 (+ (- (+ (- (+ (- (+ (- (+ (x310 (+ x697 68)) 32) 160) 68) 68) (x310 (+ 68 x1194))) 160) 68) 68) (x310 (+ x1522 68))))))
(assert (x1419 x1073))
(assert (= (and (not x463) x341) x305))
(assert (x1419 x146))
(assert (x1419 x745))
(assert (x1419 x448))
(assert (x1419 x1398))
(assert (x1419 x138))
(assert (=> (>= 10000 (x1273 (x310 (+ 32 x114)))) (= (x137 (x1273 (x310 (+ x114 32)))) (x1088 (x1273 (x310 (+ 32 x114)))))))
(assert (= x802 (or x1441 x668)))
(assert (= 2996296902 (x19 (x1088 2996296902))))
(assert (= 0 (x665 (- (+ (x310 (+ x1522 68)) (- (+ 68 (- x353 160)) 68)) x1302))))
(assert (= (and x542 x786) x329))
(assert (x1419 x224))
(assert (x1419 x610))
(assert (= (or x524 x581) x647))
(assert (x1419 x579))
(assert (= 0 (x1238 (+ (- (+ 68 (- (+ (- (x310 (+ x114 96)) x1522) x567) 160)) 68) (x310 (+ x1522 68))))))
(assert (= (x19 (x137 (x696 (x310 (+ x697 192))))) (x696 (x310 (+ x697 192)))))
(assert (x1419 x1065))
(assert (x1188 32))
(assert (= (x158 (x310 (+ 160 x827))) (x19 (x137 (x158 (x310 (+ x827 160)))))))
(assert (= (x1238 160) 0))
(assert (= (and x647 (not x798)) x849))
(assert (x1388 x947))
(assert (x1419 x721))
(assert (x1419 x1008))
(assert (x1496 x1232 (- x1231 x1106)))
(assert (x1419 x1237))
(assert (=> (<= (x457 x114) 10000) (= (x137 (x457 x114)) (x1088 (x457 x114)))))
(assert (and (= 81 (x267 9 9)) (= 81 (x267 27 3)) (= 9 (x267 3 3)) (= 27 (x267 9 3))))
(assert (= x619 (or x1430 x1004)))
(assert (= 0 (x665 (- (+ (x310 (+ x1522 68)) (- (+ 68 (- (+ (- (+ 68 (- (+ (- (+ x567 (- (x310 (+ x114 64)) x1522)) x1194) x1198) 160)) 68) (x310 (+ x1194 68))) 160)) 68)) x1302))))
(assert (= (x19 (x137 (x1273 (x310 (+ x114 32))))) (x1273 (x310 (+ x114 32)))))
(assert (x1366 x1229))
(assert (x1419 x112))
(assert (= 0 (x1238 (+ (- (+ 68 (- (+ (- (+ (- (+ x1198 (- (+ (- (x310 (+ 32 x114)) x1522) x567) x1194)) 160) 68) 68) (x310 (+ x1194 68))) 160)) 68) (x310 (+ x1522 68))))))
(assert (=> (<= (x385 (x310 (+ x114 192))) 10000) (= (x137 (x385 (x310 (+ x114 192)))) (x1088 (x385 (x310 (+ 192 x114)))))))
(assert (x1419 x1505))
(assert (x1188 x357))
(assert (= x525 (=> (and (= x1239 x827) (= x330 (not (> x944 32))) (= (x158 160) x316)) (and (=> (= 32 x198) x1416) x330))))
(assert (=> (<= (x1273 (x310 (+ 96 x114))) 10000) (= (x1088 (x1273 (x310 (+ x114 96)))) (x137 (x1273 (x310 (+ x114 96)))))))
(assert (x1419 x400))
(assert (x1419 x618))
(assert (= (x665 (- x1178 x1302)) 0))
(assert (x406 x36))
(assert (x1419 x88))
(assert (=> (>= 10000 (x637 (x310 (+ x400 128)))) (= (x137 (x637 (x310 (+ x400 128)))) (x1088 (x637 (x310 (+ 128 x400)))))))
(assert (x1419 x1011))
(assert (=> (>= 10000 x187) (= (x1088 x187) (x137 x187))))
(assert (and (x679 x235 32) (=> (< 0 32) (= x235 (+ (* 32 (x174 x235 32)) (x873 x235 32)))) (x801 x235 32) (x982 x235 32)))
(assert (= x7 (x19 (x137 x7))))
(assert (= (x1093 (x310 (+ x827 160))) (x19 (x137 (x1093 (x310 (+ 160 x827)))))))
(assert (x1419 x474))
(assert (= 0 (x665 (- (+ (- (+ (- (+ (x310 (+ 68 x1194)) (- (+ 68 (- (+ (- (+ x567 (- x1163 x1522)) x1194) x1198) 160)) 68)) 160) 68) 68) (x310 (+ x1522 68))) x1302))))
(assert (x1419 x983))
(assert (= (x106 (x310 (+ 128 x827))) (x19 (x137 (x106 (x310 (+ 128 x827)))))))
(assert (= (and (not x655) x363) x375))
(assert (= (x665 (- (+ (- (+ (- (+ (- (+ 68 (- (x310 (+ 160 x697)) 160)) 68) (x310 (+ 68 x1194))) 160) 68) 68) (x310 (+ 68 x1522))) x1302)) 0))
(assert (= (or x360 x468) x796))
(assert (x1419 x1450))
(assert (= (x19 (x137 x135)) x135))
(assert (x1419 x370))
(assert (x989 x503 x1106 x1231 x1232))
(assert (x908 x191))
(assert (x1419 x405))
(assert (= (x19 (x137 (x746 (x310 (+ 160 x1522))))) (x746 (x310 (+ 160 x1522)))))
(assert (x1419 x671))
(assert (= x54 (or x1089 x733 x824 x1483 x1144)))
(assert (and (x679 x414 32) (=> (< 0 32) (= x414 (+ (* 32 (x174 x414 32)) (x873 x414 32)))) (x801 x414 32) (x982 x414 32)))
(assert (= (x28 (x310 (+ 160 x697))) 0))
(assert (x1366 (x696 (x310 (+ x697 64)))))
(assert (and (x679 x1245 2) (=> (< 0 2) (= x1245 (+ (* 2 (x174 x1245 2)) (x873 x1245 2)))) (x801 x1245 2) (x982 x1245 2)))
(assert (x920 x1128 x1223))
(assert (=> (>= 10000 (x746 (x310 (+ 32 x1522)))) (= (x1088 (x746 (x310 (+ x1522 32)))) (x137 (x746 (x310 (+ x1522 32)))))))
(assert (x1366 (x696 (x310 (+ 192 x697)))))
(assert (= (x123 (x310 (+ x827 128))) (x19 (x137 (x123 (x310 (+ 128 x827)))))))
(assert (=> (>= 10000 (x1418 (x310 (+ 96 x827)))) (= (x137 (x1418 (x310 (+ x827 96)))) (x1088 (x1418 (x310 (+ 96 x827)))))))
(assert (x1419 x1455))
(assert (= (or x374 x514) x1100))
(assert (= 0 (x1310 (+ (- x1219 x1522) x567))))
(assert (= x157 (and x471 x1446)))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x19 (x1088 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (x908 x1052))
(assert (= (or x1027 x46) x625))
(assert (x1419 x339))
(assert (x1419 x664))
(assert (x1419 x1364))
(assert (= 0 (x1310 x229)))
(assert (= x1290 (x19 (x137 x1290))))
(assert (x1388 x1217))
(assert (= (x1088 1208925819614629174706175) (x137 1208925819614629174706175)))
(assert (= (x665 (- (+ (- (+ (- (+ x567 (- (x310 (+ x114 32)) x1522)) 160) 68) 68) (x310 (+ 68 x1522))) x1302)) 0))
(assert (= x752 (and x996 x651)))
(assert (x1419 x255))
(assert (= 0 (x1238 (+ (x310 (+ x1522 68)) (- (+ (- (x310 (+ x1194 68)) 160) 68) 68)))))
(assert (x406 x449))
(assert (= 0 (x1238 (+ (x310 (+ x1522 68)) 64))))
(assert (= (and x1154 x693) x1309))
(assert (x406 x184))
(assert (= (x1238 (+ (x310 (+ 68 x1522)) (- (+ 68 (- (+ (x310 (+ x1194 68)) (- (+ 68 (- (+ x1198 (- (+ (- x1043 x1522) x567) x1194)) 160)) 68)) 160)) 68))) 0))
(assert (x1419 x1248))
(assert (x1366 x1276))
(assert (x1419 x69))
(assert (x1419 x1469))
(assert (= 0 (x1238 (x310 (+ x1522 160)))))
(assert (=> (>= 10000 (x866 224)) (= (x137 (x866 224)) (x1088 (x866 224)))))
(assert (= 0 (x665 (- x1459 x1302))))
(assert (x1419 x648))
(assert (=> (>= 10000 (x158 (x310 (+ x827 160)))) (= (x137 (x158 (x310 (+ 160 x827)))) (x1088 (x158 (x310 (+ 160 x827)))))))
(assert (x1366 (x389 (x310 (+ 192 x827)))))
(assert (= x1078 (x19 (x137 x1078))))
(assert (= (x1310 (+ (x310 (+ x1194 68)) (- (+ (- (x310 (+ x697 192)) 160) 68) 68))) 0))
(assert (= (x28 256) 0))
(assert (x1188 x1334))
(assert (and (and (= (- (* 1000000000000000000000000 (- x580 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x580 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x267 (- 115792089237316195423570985008687907853269984665640563039457584007913129639936) (- x580 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x580 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000) (x267 1000000000000000000000000 (- x580 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x267 (- 115792089237316195423570985008687907853269984665640563039457584007913129639936) x580) (- (* 1000000000000000000000000 x580) (* x580 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1150 1000000000000000000000000 x580) (x512 1000000000000000000000000 x580) (x1421 1000000000000000000000000 x580) (x1016 1000000000000000000000000 x580) (= (x267 1000000000000000000000000 x580) (* 1000000000000000000000000 x580)) (x951 1000000000000000000000000 x580)))
(assert (x1419 x515))
(assert (x1419 x886))
(assert (=> (<= (x696 (x310 (+ x697 64))) 10000) (= (x137 (x696 (x310 (+ 64 x697)))) (x1088 (x696 (x310 (+ 64 x697)))))))
(assert (= (x137 105741823712686017468623175546783284002282906648395100416871018427217256382464) (x1088 105741823712686017468623175546783284002282906648395100416871018427217256382464)))
(assert (x1419 x1159))
(assert (x1145 x1232 x1231 x503 x1106))
(assert (=> (>= 10000 x459) (= (x137 x459) (x1088 x459))))
(assert (x1419 x650))
(assert (x1419 x299))
(assert (x1366 (x637 (x310 (+ x400 192)))))
(assert (x1366 x372))
(assert (x1419 x271))
(assert (= x836 (x19 (x137 x836))))
(assert (x1419 x322))
(assert (x1419 x770))
(assert (=> (<= (x389 (x310 (+ x827 128))) 10000) (= (x1088 (x389 (x310 (+ 128 x827)))) (x137 (x389 (x310 (+ x827 128)))))))
(assert (= (and x1015 (not x686)) x581))
(assert (= (x106 (x310 (+ 96 x827))) (x19 (x137 (x106 (x310 (+ 96 x827)))))))
(assert (x1419 x856))
(assert (= x454 (or (and (not x800) x282) (and x1451 x60))))
(assert (x1419 x45))
(assert (=> (<= x1130 10000) (= (x1088 x1130) (x137 x1130))))
(assert (= x277 (=> (and (= x923 x571) (= 0 x221)) x1105)))
(assert (= x1140 (or x937 x1149)))
(assert (x1419 x552))
(assert (= (x457 (x310 (+ x114 160))) (x19 (x137 (x457 (x310 (+ x114 160)))))))
(assert (x1366 (x1093 (x310 (+ x827 64)))))
(assert (x1496 x1231 (- x1232 x503)))
(assert (x1419 x1396))
(assert (x1419 x1468))
(assert (x1419 x667))
(assert (x1419 x988))
(assert (x1419 x600))
(assert (=> (>= 10000 x603) (= (x1088 x603) (x137 x603))))
(assert (=> (<= (x457 (x310 (+ 96 x114))) 10000) (= (x1088 (x457 (x310 (+ x114 96)))) (x137 (x457 (x310 (+ 96 x114)))))))
(assert (= (x1238 (+ (x310 (+ x1522 68)) (- (+ (- (x310 (+ 96 x400)) 160) 68) 68))) 0))
(assert (= 0 (x665 (- (+ 64 (x310 (+ x1522 68))) x1302))))
(assert (=> (<= (x1418 (x310 (+ x827 160))) 10000) (= (x137 (x1418 (x310 (+ x827 160)))) (x1088 (x1418 (x310 (+ x827 160)))))))
(assert (x1419 x1345))
(assert (x1419 x194))
(assert (x1419 x39))
(assert (x1419 x115))
(assert (= (or x127 x837) x1095))
(assert (= 0 (x1238 (+ (- (+ 68 (- (+ (- (x310 (+ x114 128)) x1522) x567) 160)) 68) (x310 (+ x1522 68))))))
(assert (x1366 x1290))
(assert (= (x19 (x137 (x746 (x310 (+ x1522 128))))) (x746 (x310 (+ x1522 128)))))
(assert (=> (>= 10000 (x866 352)) (= (x1088 (x866 352)) (x137 (x866 352)))))
(assert (x1366 (x637 (x310 (+ 160 x400)))))
(assert (x1419 x669))
(assert (=> (<= (x696 (x310 (+ x697 192))) 10000) (= (x137 (x696 (x310 (+ x697 192)))) (x1088 (x696 (x310 (+ 192 x697)))))))
(assert (x908 x235))
(assert (x1419 x1495))
(assert (= 0 (x28 (x310 (+ 96 x697)))))
(assert (x1366 (x385 (x310 (+ x114 64)))))
(assert (x1419 x774))
(assert (x1419 x660))
(assert (= (x19 (x137 (x158 (x310 (+ 32 x827))))) (x158 (x310 (+ 32 x827)))))
(assert (= (x19 (x1088 3592363634)) 3592363634))
(assert (x1366 (x696 (x310 (+ 128 x697)))))
(assert (= (=> (and (= (x310 (+ x1200 160)) x392) (= x605 (x40 128)) (= (<= x605 224) x640)) (and x640 (=> (and (= (x40 128) x860) (= x731 (x310 (+ x860 32))) (= (x310 (+ x731 128)) x209) (= (x310 (+ x860 32)) x913) (= x81 (<= x913 224))) (and x81 (=> (and (= x1379 (ite (<= x913 32) (x547 (x137 (x866 160)) 0) (ite (>= 64 x913) (x340 (x137 (x866 160)) (x137 (x866 192)) 0) (ite (>= 96 x913) (x1466 (x137 (x866 160)) (x137 (x866 192)) (x137 (x866 224)) 0) (ite (<= x913 128) (x319 (x137 (x866 160)) (x137 (x866 192)) (x137 (x866 224)) (x137 (x866 256)) 0) (ite (<= x913 160) (x1162 (x137 (x866 160)) (x137 (x866 192)) (x137 (x866 224)) (x137 (x866 256)) (x137 (x866 288)) 0) (ite (>= 192 x913) (x1520 (x137 (x866 160)) (x137 (x866 192)) (x137 (x866 224)) (x137 (x866 256)) (x137 (x866 288)) (x137 (x866 320)) 0) (ite (<= x913 224) (x900 (x137 (x866 160)) (x137 (x866 192)) (x137 (x866 224)) (x137 (x866 256)) (x137 (x866 288)) (x137 (x866 320)) (x137 (x866 352)) 0) (x137 x459))))))))) (= (x1096 x1379) x122) (= x1114 (x928 1461501637330902918203684832716283019655932542975 x122)) (= x136 32) (= x1294 1)) x286))))) x1260))
(assert (x1419 x869))
(assert (x1419 x479))
(assert (x1419 x565))
(assert (and (=> (and (> x745 0) (< 0 2)) (and (>= x745 (* 2 (x174 x745 2))) (< (- x745 2) (* 2 (x174 x745 2))))) (x1195 x745 2) (= (- x745 (x928 1 x745)) (* 2 (x174 x745 2))) (x918 x745 2) (x1420 x745 2) (x818 x745 2)))
(assert (= 0 (x665 (- (+ (x310 (+ x1522 68)) (- (+ (- (x310 (+ x400 192)) 160) 68) 68)) x1302))))
(assert (x1419 x450))
(assert (x1419 x1102))
(assert (= (x1310 (+ (- (x310 (+ x114 32)) x1522) x567)) 0))
(assert (= (x123 (x310 (+ x827 64))) (x19 (x137 (x123 (x310 (+ 64 x827)))))))
(assert (= (x19 (x1088 4294967296)) 4294967296))
(assert (x1419 x178))
(assert (x1419 x787))
(assert (= (x665 (- (+ (- (+ 68 (- (x310 (+ x400 96)) 160)) 68) (x310 (+ 68 x1522))) x1302)) 0))
(assert (= 0 (x1310 (x310 (+ 32 x400)))))
(assert (x32 x191))
(assert (x1366 (x389 x827)))
(assert (= (=> (and (= x1049 (< x788 x1152)) (or (and x1049 (= (x310 (+ x788 x827)) x667)) (not x1049))) x917) x709))
(assert (x1419 x1198))
(assert (= (and (not x213) x307) x924))
(assert (x1419 x438))
(assert (x1419 x781))
(assert (= (x259 352) 0))
(assert (x1419 x944))
(assert (x1496 x1106 (- x503 x1231)))
(assert (x1366 (x457 (x310 (+ 128 x114)))))
(assert (x1419 x421))
(assert (x1419 x1090))
(assert (x1419 x848))
(assert (= x86 (and (not x851) x1413)))
(assert (x908 x365))
(assert (= (and x798 x647) x403))
(assert (and (x679 x216 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x216 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x174 x216 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x873 x216 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x801 x216 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x982 x216 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x1359 (and x714 (not x388))))
(assert (=> (>= 10000 (x1056 (x310 (+ x827 160)))) (= (x137 (x1056 (x310 (+ x827 160)))) (x1088 (x1056 (x310 (+ 160 x827)))))))
(assert (x908 x184))
(assert (x1419 x599))
(assert (x1419 x1448))
(assert (= (x665 (- (+ (x310 (+ x1522 68)) (- (+ (- (+ (- x1219 x1522) x567) 160) 68) 68)) x1302)) 0))
(assert (= (x457 (x310 (+ 32 x114))) (x19 (x137 (x457 (x310 (+ x114 32)))))))
(assert (=> (>= 10000 x836) (= (x1088 x836) (x137 x836))))
(assert (x1419 x189))
(assert (x1419 x896))
(assert (= 0 (x1310 x393)))
(assert (x1496 x1231 x1232))
(assert (= (x866 160) (x19 (x137 (x866 160)))))
(assert (x1419 x1141))
(assert (x1188 x1118))
(assert (x1419 x1502))
(assert (= (and (not x1165) x1444) x1207))
(assert (= (x1238 (+ (x310 (+ x1522 68)) (- (+ (- x353 160) 68) 68))) 0))
(assert (x1419 x588))
(assert (and (=> (and (> x1403 0) (< 0 32)) (and (>= x1403 (* 32 (x174 x1403 32))) (< (- x1403 32) (* 32 (x174 x1403 32))))) (x1195 x1403 32) (= (- x1403 (x928 31 x1403)) (* 32 (x174 x1403 32))) (x918 x1403 32) (x1420 x1403 32) (x818 x1403 32)))
(assert (x1419 x590))
(assert (= (x19 (x137 (x637 (x310 (+ x400 32))))) (x637 (x310 (+ x400 32)))))
(assert (and (x679 x36 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x36 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x174 x36 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x873 x36 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x801 x36 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x982 x36 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= 0 (x259 320)))
(assert (= (x1088 2075580284) (x137 2075580284)))
(assert (x1366 x1356))
(assert (x1419 x470))
(assert (x1419 x777))
(assert (= 3624036542 (x19 (x1088 3624036542))))
(assert (= x386 (=> (and (= x846 (>= 224 x488)) (= x280 (x810 (- x185 x697))) (= x185 (x310 (+ x1161 32))) (= (x810 (- x280 32)) x488) (= x1161 (x310 (+ x697 x321)))) (and (=> (and (= x1176 (>= 224 x280)) (= x1471 (ite (>= 32 x488) (x547 (x137 (x696 x697)) 0) (ite (>= 64 x488) (x340 (x137 (x696 x697)) (x137 (x696 (x310 (+ 32 x697)))) 0) (ite (<= x488 96) (x1466 (x137 (x696 x697)) (x137 (x696 (x310 (+ x697 32)))) (x137 (x696 (x310 (+ 64 x697)))) 0) (ite (>= 128 x488) (x319 (x137 (x696 x697)) (x137 (x696 (x310 (+ 32 x697)))) (x137 (x696 (x310 (+ x697 64)))) (x137 (x696 (x310 (+ x697 96)))) 0) (ite (>= 160 x488) (x1162 (x137 (x696 x697)) (x137 (x696 (x310 (+ x697 32)))) (x137 (x696 (x310 (+ x697 64)))) (x137 (x696 (x310 (+ 96 x697)))) (x137 (x696 (x310 (+ 128 x697)))) 0) (ite (>= 192 x488) (x1520 (x137 (x696 x697)) (x137 (x696 (x310 (+ 32 x697)))) (x137 (x696 (x310 (+ x697 64)))) (x137 (x696 (x310 (+ x697 96)))) (x137 (x696 (x310 (+ 128 x697)))) (x137 (x696 (x310 (+ 160 x697)))) 0) (ite (>= 224 x488) (x900 (x137 (x696 x697)) (x137 (x696 (x310 (+ x697 32)))) (x137 (x696 (x310 (+ x697 64)))) (x137 (x696 (x310 (+ x697 96)))) (x137 (x696 (x310 (+ 128 x697)))) (x137 (x696 (x310 (+ 160 x697)))) (x137 (x696 (x310 (+ x697 192)))) 0) (x137 x1153)))))))))) (and x1176 (=> (and (= (x437 x1514) x333) (<= 0 x1334) (<= 0 x831) (< x333 1461501637330902918203684832716283019655932542976) (<= x333 1461501637330902918203684832716283019655932542975) (= (ite (<= x280 32) (x547 (x137 (x696 x697)) 0) (ite (<= x280 64) (x340 (x137 (x696 x697)) (x137 (x696 (x310 (+ 32 x697)))) 0) (ite (>= 96 x280) (x1466 (x137 (x696 x697)) (x137 (x696 (x310 (+ x697 32)))) (x137 (x696 (x310 (+ 64 x697)))) 0) (ite (<= x280 128) (x319 (x137 (x696 x697)) (x137 (x696 (x310 (+ x697 32)))) (x137 (x696 (x310 (+ 64 x697)))) (x137 (x696 (x310 (+ 96 x697)))) 0) (ite (>= 160 x280) (x1162 (x137 (x696 x697)) (x137 (x696 (x310 (+ 32 x697)))) (x137 (x696 (x310 (+ x697 64)))) (x137 (x696 (x310 (+ x697 96)))) (x137 (x696 (x310 (+ 128 x697)))) 0) (ite (<= x280 192) (x1520 (x137 (x696 x697)) (x137 (x696 (x310 (+ 32 x697)))) (x137 (x696 (x310 (+ 64 x697)))) (x137 (x696 (x310 (+ x697 96)))) (x137 (x696 (x310 (+ x697 128)))) (x137 (x696 (x310 (+ 160 x697)))) 0) (ite (<= x280 224) (x900 (x137 (x696 x697)) (x137 (x696 (x310 (+ x697 32)))) (x137 (x696 (x310 (+ 64 x697)))) (x137 (x696 (x310 (+ x697 96)))) (x137 (x696 (x310 (+ x697 128)))) (x137 (x696 (x310 (+ 160 x697)))) (x137 (x696 (x310 (+ x697 192)))) 0) (x137 x1061)))))))) x1514) (< x831 1208925819614629174706176) (= x1334 (x1402 x1514)) (= 0 x1497) (= (= 1 (x873 x1334 2)) x47) (>= 65535 x1334) (> 65536 x1334) (= (x604 x1514) x831) (<= x831 1208925819614629174706175) (>= x333 0)) (and (=> (not x47) x277) (=> (and x47 (and (and (= x927 (= 1 (x873 x1334 2))) (= x1475 0)) (or (and (not x927) (= x1321 x927)) (and x927 (and (= x787 1) (= (x1069 x1334 1) x331) (= x1321 (not x1203)) (= x1203 (= (x873 x331 2) 1))))))) x1236))))) x846))))
(assert (= 0 (x665 (- (+ (x310 (+ 68 x1522)) (- (+ 68 (- x229 160)) 68)) x1302))))
(assert (= (x665 (- (+ (- (+ (- (+ x567 (- (x310 (+ x114 192)) x1522)) 160) 68) 68) (x310 (+ x1522 68))) x1302)) 0))
(assert (= (x746 (x310 (+ x1522 32))) (x19 (x137 (x746 (x310 (+ x1522 32)))))))
(assert (x1419 x324))
(assert (= (and x101 x1351) x837))
(assert (x1419 x736))
(assert (x1366 x490))
(assert (x1419 x1383))
(assert (x908 x1252))
(assert (x1419 x1204))
(assert (and (x679 x449 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x449 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x174 x449 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x873 x449 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x801 x449 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x982 x449 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1419 x1377))
(assert (= (x19 (x137 (x457 (x310 (+ x114 128))))) (x457 (x310 (+ x114 128)))))
(assert (x1419 x91))
(assert (x1419 x170))
(assert (and (x679 x184 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= x184 (+ (* 1461501637330902918203684832716283019655932542976 (x174 x184 1461501637330902918203684832716283019655932542976)) (x873 x184 1461501637330902918203684832716283019655932542976)))) (x801 x184 1461501637330902918203684832716283019655932542976) (x982 x184 1461501637330902918203684832716283019655932542976)))
(assert (= (x19 (x1088 1000000000)) 1000000000))
(assert (= (x28 (+ (- (+ (- x1043 x1522) x567) x1194) x1198)) 0))
(assert (=> (<= x925 10000) (= (x137 x925) (x1088 x925))))
(assert (x1419 x1475))
(assert (x1419 x549))
(assert (= (x137 3450351392) (x1088 3450351392)))
(assert (and (x679 x216 32) (=> (< 0 32) (= x216 (+ (* 32 (x174 x216 32)) (x873 x216 32)))) (x801 x216 32) (x982 x216 32)))
(assert (=> (<= (x538 (x310 (+ x400 192))) 10000) (= (x137 (x538 (x310 (+ x400 192)))) (x1088 (x538 (x310 (+ 192 x400)))))))
(assert (= 0 (x665 (- (+ (- (+ (- (+ (x310 (+ 68 x1194)) (- (+ 68 (- (+ x1198 (- (+ (- x114 x1522) x567) x1194)) 160)) 68)) 160) 68) 68) (x310 (+ x1522 68))) x1302))))
(assert (= (=> (and (or (and (not x302) (and (= (x928 115792089237316195423570985008687907853269984665640564039457584007913129639904 x365) x182) (= x1302 (x310 (+ 32 x827))) (= x365 (x310 (+ 63 x284))) (= x958 x1378) (= x1378 (x310 (+ x827 x182))))) (and (= x958 x827) x302)) (= (= 0 x284) x302)) x994) x995))
(assert (x1366 (x1101 (x310 (+ x827 192)))))
(assert (x1419 x1153))
(assert (x1419 x95))
(assert (= x1148 (and x254 x200)))
(assert (x1388 x1493))
(assert (= (x1238 (x310 (+ x1522 64))) 0))
(assert (= x1331 (and x382 x311)))
(assert (x1419 x835))
(assert (= 0 (x665 (- (+ 32 (x310 (+ 68 x1522))) x1302))))
(assert (x1366 (x158 (x310 (+ 192 x827)))))
(assert (= (x137 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1088 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x1419 x1078))
(assert (= 0 (x665 (- (+ (x310 (+ 68 x1522)) (- (+ 68 (- (+ (- (+ (- (+ x1198 (- x567 x1194)) 160) 68) 68) (x310 (+ 68 x1194))) 160)) 68)) x1302))))
(assert (=> (>= 10000 (x1044 (x310 (+ x827 128)))) (= (x1088 (x1044 (x310 (+ 128 x827)))) (x137 (x1044 (x310 (+ x827 128)))))))
(assert (= (x1310 224) 0))
(assert (x1419 x1276))
(assert (x1366 (x637 (x310 (+ 32 x400)))))
(assert (x1419 x1031))
(assert (= 0 (x1310 (+ (- (+ (- (+ (x310 (+ 68 x697)) 192) 160) 68) 68) (x310 (+ x1194 68))))))
(assert (= (x866 352) (x19 (x137 (x866 352)))))
(assert (x1419 x446))
(assert (x1419 x1264))
(assert (= (x28 (+ 160 (x310 (+ x697 68)))) 0))
(assert (= (x19 (x137 (x1273 (x310 (+ x114 128))))) (x1273 (x310 (+ x114 128)))))
(assert (x1257 x580))
(assert (x1419 x867))
(assert (= 0 (x28 (+ x1198 (- (+ (- x1163 x1522) x567) x1194)))))
(assert (x1419 x87))
(assert (x1419 x449))
(assert (= (x19 (x137 (x866 288))) (x866 288)))
(assert (x1419 x1017))
(assert (x1419 x1037))
(assert (= x1055 (=> (and (= (x310 (+ x409 32)) x58) (= (x810 (- x58 x114)) x3) (= x968 (>= 224 x841)) (= x409 (x310 (+ x114 x1392))) (= x841 (x810 (- x3 32)))) (and x968 (=> (and (= (>= 224 x3) x387) (= (ite (>= 32 x841) (x547 (x137 (x457 x114)) 0) (ite (>= 64 x841) (x340 (x137 (x457 x114)) (x137 (x457 (x310 (+ 32 x114)))) 0) (ite (<= x841 96) (x1466 (x137 (x457 x114)) (x137 (x457 (x310 (+ x114 32)))) (x137 (x457 (x310 (+ x114 64)))) 0) (ite (<= x841 128) (x319 (x137 (x457 x114)) (x137 (x457 (x310 (+ x114 32)))) (x137 (x457 (x310 (+ 64 x114)))) (x137 (x457 (x310 (+ x114 96)))) 0) (ite (<= x841 160) (x1162 (x137 (x457 x114)) (x137 (x457 (x310 (+ x114 32)))) (x137 (x457 (x310 (+ 64 x114)))) (x137 (x457 (x310 (+ 96 x114)))) (x137 (x457 (x310 (+ 128 x114)))) 0) (ite (>= 192 x841) (x1520 (x137 (x457 x114)) (x137 (x457 (x310 (+ x114 32)))) (x137 (x457 (x310 (+ x114 64)))) (x137 (x457 (x310 (+ 96 x114)))) (x137 (x457 (x310 (+ x114 128)))) (x137 (x457 (x310 (+ 160 x114)))) 0) (ite (<= x841 224) (x900 (x137 (x457 x114)) (x137 (x457 (x310 (+ x114 32)))) (x137 (x457 (x310 (+ 64 x114)))) (x137 (x457 (x310 (+ x114 96)))) (x137 (x457 (x310 (+ x114 128)))) (x137 (x457 (x310 (+ 160 x114)))) (x137 (x457 (x310 (+ x114 192)))) 0) (x137 x344)))))))) x876)) (and x387 (=> (and (and (= (> x1076 0) x1126) (<= 0 x1076) (> 256 x1076) (<= x1076 255) (= x473 (ite (>= 32 x3) (x547 (x137 (x457 x114)) 0) (ite (>= 64 x3) (x340 (x137 (x457 x114)) (x137 (x457 (x310 (+ 32 x114)))) 0) (ite (>= 96 x3) (x1466 (x137 (x457 x114)) (x137 (x457 (x310 (+ 32 x114)))) (x137 (x457 (x310 (+ 64 x114)))) 0) (ite (<= x3 128) (x319 (x137 (x457 x114)) (x137 (x457 (x310 (+ x114 32)))) (x137 (x457 (x310 (+ 64 x114)))) (x137 (x457 (x310 (+ 96 x114)))) 0) (ite (>= 160 x3) (x1162 (x137 (x457 x114)) (x137 (x457 (x310 (+ x114 32)))) (x137 (x457 (x310 (+ x114 64)))) (x137 (x457 (x310 (+ 96 x114)))) (x137 (x457 (x310 (+ x114 128)))) 0) (ite (<= x3 192) (x1520 (x137 (x457 x114)) (x137 (x457 (x310 (+ x114 32)))) (x137 (x457 (x310 (+ x114 64)))) (x137 (x457 (x310 (+ x114 96)))) (x137 (x457 (x310 (+ 128 x114)))) (x137 (x457 (x310 (+ x114 160)))) 0) (ite (>= 224 x3) (x900 (x137 (x457 x114)) (x137 (x457 (x310 (+ 32 x114)))) (x137 (x457 (x310 (+ 64 x114)))) (x137 (x457 (x310 (+ x114 96)))) (x137 (x457 (x310 (+ x114 128)))) (x137 (x457 (x310 (+ x114 160)))) (x137 (x457 (x310 (+ 192 x114)))) 0) (x137 x490))))))))) (= x1076 (x1473 x473))) (or (and (not x1126) (and (= (x810 (- x1223 x1087)) x1385) (not (> x1087 x1223)) (<= 0 x1223) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1223))) x1126)) x71)))))))
(assert (= 0 (x1238 x1459)))
(assert (= (x1310 (+ (x310 (+ x1194 68)) (- (+ (- (+ 64 (x310 (+ x697 68))) 160) 68) 68))) 0))
(assert (=> (<= (x389 (x310 (+ 192 x827))) 10000) (= (x1088 (x389 (x310 (+ x827 192)))) (x137 (x389 (x310 (+ 192 x827)))))))
(assert (=> (<= (x389 (x310 (+ 64 x827))) 10000) (= (x1088 (x389 (x310 (+ 64 x827)))) (x137 (x389 (x310 (+ x827 64)))))))
(assert (x1419 x248))
(assert (x1419 x697))
(assert (x1419 x887))
(assert (= (x1238 x1368) 0))
(assert (x1419 x321))
(assert (x1419 x1376))
(assert (= x1444 (or x422 x152)))
(assert (= (=> (and x296 (= x843 (x174 x24 2)) (>= 1461501637330902918203684832716283019655932542975 x671) (<= 0 x614) (not (= x1508 x710)) (= (x310 (+ x1284 31)) x1012) (= x487 x295) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x614) (= (x1348 (* x238 32)) x1210) (>= 1461501637330902918203684832716283019655932542975 x135) (>= x1422 0) (= x156 x520) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x295) (= x438 (x310 (+ x911 x1210))) (= (x310 (+ 4 x1503)) x1190) (>= 1461501637330902918203684832716283019655932542975 x552) (= x606 x1246) (>= x370 0) (or (and (< x1012 x324) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x324) (<= x1012 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x324) (> x1012 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x335 (x310 (+ x1481 x859))) (<= x31 1461501637330902918203684832716283019655932542975) (< 0 x135) (= x27 (x1429 (x137 x1508))) (= (x1463 x1284) x238) (> 3548638100 x903) (>= 1461501637330902918203684832716283019655932542975 x1221) (= x1127 x552) (<= x370 255) (<= x872 1461501637330902918203684832716283019655932542975) (>= x11 0) (= (+ x487 x1494) x24) (= x424 (< 0 (x1429 (x137 x1508)))) (>= 1461501637330902918203684832716283019655932542975 x886) (>= x31 0) (not (< 18446744073709551615 x92)) (= (x1348 (* 32 x92)) x1481) x424 (= x911 (x310 (+ x1284 32))) (not (> x606 18446744073709551615)) (>= 1461501637330902918203684832716283019655932542975 x643) (not (> x335 x324)) (>= 1461501637330902918203684832716283019655932542975 x710) (= x1014 (> x1223 0)) (= x184 x417) (>= 1461501637330902918203684832716283019655932542975 x156) (not (= x710 x135)) (<= x854 255) (> x643 0) (<= 0 x886) (>= x671 0) (<= 0 x854) (>= 1461501637330902918203684832716283019655932542975 x11) (= x1057 (> (x1429 (x137 x135)) 0)) (= x184 x965) (not (= x643 x1508)) (not (= 2 x614)) (not (> x438 x324)) (= (x310 (+ x1246 4)) x1284) (not (< x903 2075580284)) (> x27 0) (not (= x903 2868243304)) (<= 0 x1281) (>= 1461501637330902918203684832716283019655932542975 x43) (<= x109 1461501637330902918203684832716283019655932542975) (>= 255 x1360) (>= x295 0) (= x1396 x566) (= x1458 3450351392) (= x520 x886) (not (> 2868243304 x903)) (= x803 x1325) (= x583 4) (= (> (x1429 (x137 x643)) 0) x296) (>= x23 0) (<= x23 1461501637330902918203684832716283019655932542975) (> x1508 0) (= (x810 (- x552 x1508)) x1199) (= x479 x552) (= x552 x887) (not (= x1127 0)) (= x761 (> (x1429 (x137 x710)) 0)) (>= x1478 0) (= false x125) (not (= x965 0)) (not (< 18446744073709551615 x38)) (not (= x17 0)) (>= 1461501637330902918203684832716283019655932542975 x1508) (= x78 x31) (<= x1223 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x109 0) (not (= x135 x1508)) (= (x888 (x137 x135)) x1281) (not (= x135 x643)) (= false x562) (= 3450351392 x903) (= (x888 (x137 x710)) x1233) (>= x872 0) (> x710 0) (= 0 x803) (not (or (and (< x993 128) (= true (<= x993 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x993 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= false x1143) (and (> x324 131) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x324))) (<= 0 x1221) (<= 0 x15) (not (= 2872958028 x903)) (not (= 3104404863 x903)) (not (< 18446744073709551615 x238)) (>= x43 0) (not (< x324 4)) (= x238 x92) x1057 (= x1396 x1221) (<= 0 x1233) (= x15 (x888 (x137 x643))) (= x1503 x38) (>= 1461501637330902918203684832716283019655932542975 x184) (not (= x710 x643)) (not (= x238 0)) x761 (<= x1422 1461501637330902918203684832716283019655932542975) (>= 255 x1213) (= x1478 (x888 (x137 x1508))) (< 0 x1199) (= x1117 (x888 (x137 x1508))) (<= 0 x156) (= x17 x552) (<= 0 x1223) (= x1433 (x310 (+ 31 x1190))) (or (and (> x1433 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x324 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1433 x324) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1433) (<= x324 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x295 x1117)) (not (= 2996296902 x903)) (>= x1213 0) (= (x310 (+ 32 x1190)) x859) (<= 0 x1360) (= (x1463 x1190) x92) (= x1177 false) (= x1117 x1494) (= (x810 (- x324 4)) x993)) (and (=> (and (and (= x1180 x1377) (= x1282 0)) (not x1014)) x1214) (=> (and (and (or (and (not x996) (= x1488 0)) (and (and (< 0 x1223) (<= x1223 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1223 0) (< (* x580 1000000000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1488 x439) (= (x174 x1128 x1223) x439) (= x1128 (* x580 1000000000000000000000000))) x996)) (and (= (x888 (x137 x1508)) x73) (<= 0 x1223) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1223) (= x119 x73) (= (x174 x745 2) x847) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1456) (= x77 x295) (= (x810 (- x847 x1456)) x580) (= x996 (> x1223 0)) (<= 0 x1456) (>= x295 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x73 x295)) (not (> x1456 x847)) (= x745 (+ x119 x77)) (<= x295 115792089237316195423570985008687907853269984665640564039457584007913129639935))) x1014) x1353))) x773))
(assert (x1419 x606))
(assert (x1419 x1130))
(assert (x1366 (x866 256)))
(assert (x1419 x1230))
(assert (=> (>= 10000 x1448) (= (x1088 x1448) (x137 x1448))))
(assert (x1419 x741))
(assert (= x1382 (and x355 x415)))
(assert (= (x665 (- (+ (- (+ 68 (- (+ (x310 (+ x1194 68)) (- (+ (- (+ (- (+ (- x1459 x1522) x567) x1194) x1198) 160) 68) 68)) 160)) 68) (x310 (+ 68 x1522))) x1302)) 0))
(assert (x1419 x1267))
(assert (= x524 (or (and x1242 x244) (and x1015 x686) x1435 x819 (and (not x1339) x695))))
(assert (= (x385 (x310 (+ x114 96))) (x19 (x137 (x385 (x310 (+ x114 96)))))))
(assert (= (x1310 (+ (x310 (+ 68 x1194)) 96)) 0))
(assert (= (x19 (x137 x925)) x925))
(assert (=> (>= 10000 x1061) (= (x137 x1061) (x1088 x1061))))
(assert (x1419 x1281))
(assert (= 0 (x665 (- x1368 x1302))))
(assert (= x932 (and x694 x642)))
(assert (x1366 (x385 (x310 (+ 32 x114)))))
(assert (= (x28 (+ x1198 (- (+ x567 (- (x310 (+ 160 x114)) x1522)) x1194))) 0))
(assert (x1419 x27))
(assert (= (x19 (x137 x1276)) x1276))
(assert (= (x1310 (+ (- (+ 68 (- (+ (- x353 x1194) x1198) 160)) 68) (x310 (+ 68 x1194)))) 0))
(assert (x1419 x411))
(assert (x1419 x687))
(assert (= (x866 320) (x19 (x137 (x866 320)))))
(assert (= (x866 224) (x19 (x137 (x866 224)))))
(assert (x1419 x1319))
(assert (x1419 x79))
(assert (= 0 (x1238 x1522)))
(assert (x1419 x645))
(assert (x1419 x1158))
(assert (x1419 x412))
(assert (x1419 x1308))
(assert (=> (>= 10000 (x1093 (x310 (+ 160 x827)))) (= (x1088 (x1093 (x310 (+ 160 x827)))) (x137 (x1093 (x310 (+ 160 x827)))))))
(assert (x1419 x12))
(assert (= (x746 (x310 (+ 96 x1522))) (x19 (x137 (x746 (x310 (+ 96 x1522)))))))
(assert (x1419 x1234))
(assert (= (x1238 (+ (- (+ (- (+ x567 (- x1459 x1522)) 160) 68) 68) (x310 (+ 68 x1522)))) 0))
(assert (x1419 x539))
(assert (x1366 x1508))
(assert (x1419 x504))
(assert (x1419 x373))
(assert (x1419 x830))
(assert (= (and x963 (not x1014)) x734))
(assert (x1419 x1488))
(assert (= (x19 (x137 (x106 x827))) (x106 x827)))
(assert (= x695 (and x244 (not x1242))))
(assert (= 0 (x665 (- 128 x1302))))
(assert (x1419 x1052))
(assert (x1366 (x1273 (x310 (+ x114 96)))))
(assert (= (x123 x827) (x19 (x137 (x123 x827)))))
(assert (x1366 x869))
(assert (x1419 x17))
(assert (=> (>= 10000 (x866 192)) (= (x1088 (x866 192)) (x137 (x866 192)))))
(assert (x1419 x919))
(assert (= (x19 (x137 x1508)) x1508))
(assert (= (x637 (x310 (+ x400 128))) (x19 (x137 (x637 (x310 (+ 128 x400)))))))
(assert (= 0 (x259 288)))
(assert (x1419 x1064))
(assert (= (x19 (x137 x1229)) x1229))
(assert (= 0 (x28 (+ (- (+ x567 (- x1295 x1522)) x1194) x1198))))
(assert (= x1506 (and x218 (not x916))))
(assert (= x16 (and x802 (not x670))))
(assert (= (=> (and (= (> x348 0) x394) (= x348 (x457 x1295))) (and (=> (and (not x394) (= 0 x183)) x534) (=> x394 x475))) x71))
(assert (x1419 x1006))
(assert (x1419 x1432))
(assert (= 0 (x1238 (+ (- (+ (- (+ (x310 (+ 68 x1194)) 96) 160) 68) 68) (x310 (+ 68 x1522))))))
(assert (=> (>= 10000 (x123 (x310 (+ 192 x827)))) (= (x137 (x123 (x310 (+ 192 x827)))) (x1088 (x123 (x310 (+ 192 x827)))))))
(assert (= (x1088 1461501637330902918203684832716283019655932542975) (x137 1461501637330902918203684832716283019655932542975)))
(assert (x1366 (x106 (x310 (+ x827 160)))))
(assert (=> (<= (x538 (x310 (+ 160 x400))) 10000) (= (x1088 (x538 (x310 (+ 160 x400)))) (x137 (x538 (x310 (+ x400 160)))))))
(assert (= (x123 (x310 (+ 192 x827))) (x19 (x137 (x123 (x310 (+ x827 192)))))))
(assert (= (and (not x858) x1100) x659))
(assert (= x1187 (=> (and (= (> x1526 x621) x1270) (or (and (= (x310 (+ x1522 x621)) x1264) x1270) (not x1270))) x564)))
(assert (x908 x339))
(assert (= (and x1075 (not x573)) x779))
(assert (x1419 x925))
(assert (x1366 x930))
(assert (x406 x235))
(assert (x1366 x1054))
(assert (= (x1238 (+ (- (+ (- (+ (- (+ 68 (- (+ (- x741 x1194) x1198) 160)) 68) (x310 (+ x1194 68))) 160) 68) 68) (x310 (+ 68 x1522)))) 0))
(assert (= x526 (and x294 x1218)))
(assert (= x971 (and x799 x1487)))
(assert (and (x679 x235 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x235 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x174 x235 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x873 x235 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x801 x235 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x982 x235 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (=> (and (= x830 (x810 (- x1249 x827))) (= (x310 (+ 32 x721)) x1249) (= x404 (x810 (- x830 32))) (= x140 (<= x404 224)) (= (x310 (+ x977 x827)) x721)) (and x140 (=> (and (= (>= 224 x830) x1265) (= (ite (>= 32 x404) (x547 (x137 (x1418 x827)) 0) (ite (<= x404 64) (x340 (x137 (x1418 x827)) (x137 (x1418 (x310 (+ x827 32)))) 0) (ite (<= x404 96) (x1466 (x137 (x1418 x827)) (x137 (x1418 (x310 (+ 32 x827)))) (x137 (x1418 (x310 (+ x827 64)))) 0) (ite (<= x404 128) (x319 (x137 (x1418 x827)) (x137 (x1418 (x310 (+ x827 32)))) (x137 (x1418 (x310 (+ 64 x827)))) (x137 (x1418 (x310 (+ x827 96)))) 0) (ite (<= x404 160) (x1162 (x137 (x1418 x827)) (x137 (x1418 (x310 (+ x827 32)))) (x137 (x1418 (x310 (+ 64 x827)))) (x137 (x1418 (x310 (+ x827 96)))) (x137 (x1418 (x310 (+ 128 x827)))) 0) (ite (<= x404 192) (x1520 (x137 (x1418 x827)) (x137 (x1418 (x310 (+ x827 32)))) (x137 (x1418 (x310 (+ 64 x827)))) (x137 (x1418 (x310 (+ x827 96)))) (x137 (x1418 (x310 (+ 128 x827)))) (x137 (x1418 (x310 (+ x827 160)))) 0) (ite (<= x404 224) (x900 (x137 (x1418 x827)) (x137 (x1418 (x310 (+ 32 x827)))) (x137 (x1418 (x310 (+ 64 x827)))) (x137 (x1418 (x310 (+ x827 96)))) (x137 (x1418 (x310 (+ x827 128)))) (x137 (x1418 (x310 (+ 160 x827)))) (x137 (x1418 (x310 (+ x827 192)))) 0) (x137 x1078)))))))) x1524)) (and (=> (and (<= 0 x45) (= x778 (ite (>= 32 x830) (x547 (x137 (x1418 x827)) 0) (ite (<= x830 64) (x340 (x137 (x1418 x827)) (x137 (x1418 (x310 (+ x827 32)))) 0) (ite (>= 96 x830) (x1466 (x137 (x1418 x827)) (x137 (x1418 (x310 (+ x827 32)))) (x137 (x1418 (x310 (+ 64 x827)))) 0) (ite (<= x830 128) (x319 (x137 (x1418 x827)) (x137 (x1418 (x310 (+ x827 32)))) (x137 (x1418 (x310 (+ 64 x827)))) (x137 (x1418 (x310 (+ x827 96)))) 0) (ite (<= x830 160) (x1162 (x137 (x1418 x827)) (x137 (x1418 (x310 (+ x827 32)))) (x137 (x1418 (x310 (+ 64 x827)))) (x137 (x1418 (x310 (+ x827 96)))) (x137 (x1418 (x310 (+ 128 x827)))) 0) (ite (<= x830 192) (x1520 (x137 (x1418 x827)) (x137 (x1418 (x310 (+ x827 32)))) (x137 (x1418 (x310 (+ 64 x827)))) (x137 (x1418 (x310 (+ 96 x827)))) (x137 (x1418 (x310 (+ x827 128)))) (x137 (x1418 (x310 (+ 160 x827)))) 0) (ite (>= 224 x830) (x900 (x137 (x1418 x827)) (x137 (x1418 (x310 (+ 32 x827)))) (x137 (x1418 (x310 (+ 64 x827)))) (x137 (x1418 (x310 (+ 96 x827)))) (x137 (x1418 (x310 (+ x827 128)))) (x137 (x1418 (x310 (+ x827 160)))) (x137 (x1418 (x310 (+ 192 x827)))) 0) (x137 x836))))))))) (= x45 x1106) (= x45 (x5 x778)) (<= x45 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x74) x1265)))) x553))
(assert (= (and (not x954) x1259) x1500))
(assert (x1366 (x389 (x310 (+ x827 128)))))
(assert (x1419 x186))
(assert (x1257 32))
(assert (x406 x1493))
(assert (x1366 (x866 224)))
(assert (x1419 x43))
(assert (= (x137 3548638100) (x1088 3548638100)))
(assert (= (and (not x996) x651) x260))
(assert (= 0 (x665 (- (+ (x310 (+ x1522 68)) (- (+ (- (+ (- (+ (- (+ 128 (x310 (+ x697 68))) 160) 68) 68) (x310 (+ x1194 68))) 160) 68) 68)) x1302))))
(assert (x1145 x1106 x503 x1231 x1232))
(assert (x1419 x737))
(assert (= (x137 1882194962) (x1088 1882194962)))
(assert (= 0 (x665 (- (+ (- (+ (- (+ (- (+ 68 (- x697 160)) 68) (x310 (+ x1194 68))) 160) 68) 68) (x310 (+ 68 x1522))) x1302))))
(assert (= (x1238 (+ (- (+ 68 (- (+ (- (+ (- (+ (x310 (+ 68 x697)) 160) 160) 68) 68) (x310 (+ x1194 68))) 160)) 68) (x310 (+ x1522 68)))) 0))
(assert (= x1280 (or x749 x1333)))
(assert (= x953 (and x670 x802)))
(assert (= (x19 (x137 x344)) x344))
(assert (=> (>= 10000 x869) (= (x1088 x869) (x137 x869))))
(assert (x1419 x404))
(assert (= (x1310 (+ (x310 (+ x1194 68)) 64)) 0))
(assert (= 0 (x1310 (+ x567 (- x1178 x1522)))))
(assert (=> (>= 10000 (x1418 x827)) (= (x137 (x1418 x827)) (x1088 (x1418 x827)))))
(assert (= x534 (=> (and (= (< x348 x183) x858) (or (and x858 (= x822 (x310 (+ x114 x348)))) (not x858))) x129)))
(assert (= (x538 (x310 (+ 192 x400))) (x19 (x137 (x538 (x310 (+ x400 192)))))))
(assert (= (and (not x60) x1451) x282))
(assert (= (x19 (x137 (x538 (x310 (+ x400 128))))) (x538 (x310 (+ 128 x400)))))
(assert (x1419 x698))
(assert (= (x19 (x137 (x1101 (x310 (+ x827 32))))) (x1101 (x310 (+ x827 32)))))
(assert (and (x679 x1334 2) (=> (< 0 2) (= x1334 (+ (* 2 (x174 x1334 2)) (x873 x1334 2)))) (x801 x1334 2) (x982 x1334 2)))
(assert (= (and (not x107) x338) x1108))
(assert (=> (>= 10000 x372) (= (x1088 x372) (x137 x372))))
(assert (and (x679 x122 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= x122 (+ (* 1461501637330902918203684832716283019655932542976 (x174 x122 1461501637330902918203684832716283019655932542976)) (x873 x122 1461501637330902918203684832716283019655932542976)))) (x801 x122 1461501637330902918203684832716283019655932542976) (x982 x122 1461501637330902918203684832716283019655932542976)))
(assert (= (x19 (x137 (x866 192))) (x866 192)))
(assert (= (x19 (x1088 2061859742)) 2061859742))
(assert (x1419 x766))
(assert (x1419 x632))
(assert (x1188 x745))
(assert (x1419 x813))
(assert (= (=> (= (not (< 1 x238)) x1132) (and x349 x1132)) x483))
(assert (= (x19 (x137 (x696 (x310 (+ 128 x697))))) (x696 (x310 (+ 128 x697)))))
(assert (= x315 (or x1207 x1095)))
(assert (and (x679 x1217 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1217 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x174 x1217 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x873 x1217 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x801 x1217 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x982 x1217 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1419 x712))
(assert (x1419 x1183))
(assert (x1419 x1035))
(assert (x1419 x1099))
(assert (x1419 x238))
(assert (=> (<= (x158 (x310 (+ 192 x827))) 10000) (= (x1088 (x158 (x310 (+ 192 x827)))) (x137 (x158 (x310 (+ x827 192)))))))
(assert (= (x28 (+ x1198 (- (+ x567 (- (x310 (+ x114 96)) x1522)) x1194))) 0))
(assert (=> (>= 10000 (x1273 (x310 (+ 160 x114)))) (= (x137 (x1273 (x310 (+ x114 160)))) (x1088 (x1273 (x310 (+ x114 160)))))))
(assert (=> (<= (x538 (x310 (+ 96 x400))) 10000) (= (x137 (x538 (x310 (+ x400 96)))) (x1088 (x538 (x310 (+ 96 x400)))))))
(assert (= (x28 (+ x1198 (- (+ (- x1178 x1522) x567) x1194))) 0))
(assert (= (x665 (- (+ (x310 (+ 68 x1522)) (- (+ (- (+ (- (x310 (+ x114 96)) x1522) x567) 160) 68) 68)) x1302)) 0))
(assert (= (x19 (x137 (x538 (x310 (+ 96 x400))))) (x538 (x310 (+ x400 96)))))
(assert (x1419 x290))
(assert (= x97 (=> (and (or (and x172 (= x336 (x310 (+ x1414 x114)))) (not x172)) (= (> x691 x1414) x172)) x825)))
(assert (x1419 x165))
(assert (= x1386 (=> (and (= x297 (x1311 256)) (= x226 (not (< 128 x51))) (= x1204 (x310 (+ x400 96)))) (and (=> (= x589 128) x815) x226))))
(assert (=> (<= (x637 (x310 (+ 96 x400))) 10000) (= (x1088 (x637 (x310 (+ x400 96)))) (x137 (x637 (x310 (+ 96 x400)))))))
(assert (= 0 (x665 (- (+ (- (+ 68 (- (+ (- (+ (- (+ (- (+ (- (x310 (+ 192 x114)) x1522) x567) x1194) x1198) 160) 68) 68) (x310 (+ x1194 68))) 160)) 68) (x310 (+ 68 x1522))) x1302))))
(assert (and (x1420 x942 1000000000000000000000000) (x918 x942 1000000000000000000000000) (x818 x942 1000000000000000000000000) (x1195 x942 1000000000000000000000000) (=> (and (> x942 0) (< 0 1000000000000000000000000)) (and (>= x942 (* 1000000000000000000000000 (x174 x942 1000000000000000000000000))) (< (- x942 1000000000000000000000000) (* 1000000000000000000000000 (x174 x942 1000000000000000000000000)))))))
(assert (= 0 (x1310 (+ (x310 (+ x1194 68)) (- (+ 68 (- (x310 (+ 64 x697)) 160)) 68)))))
(assert (x1419 x1002))
(assert (x406 x552))
(assert (=> (<= (x637 x400) 10000) (= (x137 (x637 x400)) (x1088 (x637 x400)))))
(assert (= (or x171 x233) x694))
(assert (x1419 x1356))
(assert (= (and x1371 (not x177)) x723))
(assert (x1419 x365))
(assert (x1419 x1235))
(assert (= (=> (and (= (= x806 0) x1486) (or (not x1486) x1486)) x364) x227))
(assert (= x1355 (and (not x1279) x315)))
(assert (and (x679 x628 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= x628 (+ (* 1461501637330902918203684832716283019655932542976 (x174 x628 1461501637330902918203684832716283019655932542976)) (x873 x628 1461501637330902918203684832716283019655932542976)))) (x801 x628 1461501637330902918203684832716283019655932542976) (x982 x628 1461501637330902918203684832716283019655932542976)))
(assert (=> (>= 10000 x1410) (= (x1088 x1410) (x137 x1410))))
(assert (= (x1044 (x310 (+ 192 x827))) (x19 (x137 (x1044 (x310 (+ 192 x827)))))))
(assert (x1419 x236))
(assert (x1419 x572))
(assert (x1419 x870))
(assert (=> (<= x369 10000) (= (x1088 x369) (x137 x369))))
(assert (= (and (not x342) x625) x233))
(assert (x1366 (x158 (x310 (+ 32 x827)))))
(assert (= (and (not x1357) x37) x1185))
(assert (x1257 (- x1106 x1232)))
(assert (x1419 x502))
(assert (x1419 x1410))
(assert (x1419 x109))
(assert (= x1015 (and x253 x1500)))
(assert (x1419 x1409))
(assert (= (x19 (x137 x1130)) x1130))
(assert (=> (<= (x696 (x310 (+ 96 x697))) 10000) (= (x1088 (x696 (x310 (+ x697 96)))) (x137 (x696 (x310 (+ x697 96)))))))
(assert (and (x679 x365 32) (=> (< 0 32) (= x365 (+ (* 32 (x174 x365 32)) (x873 x365 32)))) (x801 x365 32) (x982 x365 32)))
(assert (= (x137 82070247630637395725875354456112310357886651100252770250446759337321580986368) (x1088 82070247630637395725875354456112310357886651100252770250446759337321580986368)))
(assert (= (=> (and (= x88 x1219) (= (x926 x1219) x620) (= x114 x126) (= (not (< 32 x1392)) x105)) (and x105 (=> (= x760 32) x1408))) x1272))
(assert (x1366 (x1418 (x310 (+ x827 192)))))
(assert (x1419 x377))
(assert (= 3548638100 (x19 (x1088 3548638100))))
(assert (x1419 x993))
(assert (= 0 (x1238 (+ (- (+ (- (+ (x310 (+ 68 x1194)) (- (+ (- (+ (x310 (+ 68 x697)) 128) 160) 68) 68)) 160) 68) 68) (x310 (+ 68 x1522))))))
(assert (x1257 x1106))
(assert (x1419 x571))
(assert (= (x665 (- (+ (- (+ (- (+ (- (+ (- (+ (- (+ (- x1219 x1522) x567) x1194) x1198) 160) 68) 68) (x310 (+ x1194 68))) 160) 68) 68) (x310 (+ x1522 68))) x1302)) 0))
(assert (= 0 (x28 x697)))
(assert (x1257 x1231))
(assert (=> (>= 10000 (x538 x400)) (= (x137 (x538 x400)) (x1088 (x538 x400)))))
(assert (= (and (not x351) x1157) x1423))
(assert (= (and x1049 x1349) x422))
(assert (x1419 x199))
(assert (x1257 (- x503 x1232)))
(assert (x1419 x1428))
(assert (x32 x628))
(assert (=> (<= (x158 (x310 (+ 96 x827))) 10000) (= (x1088 (x158 (x310 (+ x827 96)))) (x137 (x158 (x310 (+ 96 x827)))))))
(assert (= x338 (or x1160 x779)))
(assert (= (x1238 (+ (- (+ 68 (- (+ (x310 (+ x1194 68)) (- (+ 68 (- (x310 (+ x697 192)) 160)) 68)) 160)) 68) (x310 (+ x1522 68)))) 0))
(assert (= (=> (and (= (x1048 160) x434) (= x827 x104) (= x52 (not (< 32 x1064)))) (and x52 (=> (= 32 x1384) x264))) x1103))
(assert (x1419 x100))
(assert (= x812 (or x190 x832)))
(assert (x406 x770))
(assert (= (x19 (x137 (x1273 (x310 (+ x114 96))))) (x1273 (x310 (+ 96 x114)))))
(assert (x1419 x1354))
(assert (=> (>= 10000 (x123 (x310 (+ 160 x827)))) (= (x1088 (x123 (x310 (+ x827 160)))) (x137 (x123 (x310 (+ 160 x827)))))))
(assert (x1419 x62))
(assert (x1419 x513))
(assert (x1419 x569))
(assert (= x1442 (=> (and (= x537 x827) (= (x49 160) x413) (= x211 (not (> x814 32)))) (and x211 (=> (= 32 x648) x685)))))
(assert (=> (>= 10000 (x106 (x310 (+ 192 x827)))) (= (x1088 (x106 (x310 (+ x827 192)))) (x137 (x106 (x310 (+ 192 x827)))))))
(assert (= (x19 (x137 x1061)) x1061))
(assert (= (x1238 (+ (x310 (+ x1522 68)) (- (+ (- (+ (- (+ 68 (- (x310 (+ 160 x697)) 160)) 68) (x310 (+ 68 x1194))) 160) 68) 68))) 0))
(assert (x1366 (x866 288)))
(assert (x1366 (x123 (x310 (+ 192 x827)))))
(assert (=> (<= (x637 (x310 (+ x400 160))) 10000) (= (x1088 (x637 (x310 (+ 160 x400)))) (x137 (x637 (x310 (+ 160 x400)))))))
(assert (x1419 x353))
(assert (= (x137 2376452955) (x1088 2376452955)))
(assert (= (x665 (- (+ (- (+ (- (+ (- x1043 x1522) x567) 160) 68) 68) (x310 (+ 68 x1522))) x1302)) 0))
(assert (x1419 x1189))
(assert (x1366 (x1093 x827)))
(assert (x1419 x790))
(assert (= (=> (and (or (and (= x698 (x310 (+ x1398 x80))) x816) (not x816)) (= (> x1450 x80) x816)) x845) x880))
(assert (= 0 (x28 (+ x1198 (- (+ (- (x310 (+ 128 x114)) x1522) x567) x1194)))))
(assert (=> (<= x1229 10000) (= (x137 x1229) (x1088 x1229))))
(assert (= (and x1068 (not x1126)) x792))
(assert (= (or x1506 x595) x341))
(assert (= (or x1440 x987) x902))
(assert (x1366 x836))
(assert (=> (<= (x637 (x310 (+ 192 x400))) 10000) (= (x137 (x637 (x310 (+ x400 192)))) (x1088 (x637 (x310 (+ x400 192)))))))
(assert (x1419 x1175))
(assert (and (x679 x1461 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1461 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x174 x1461 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x873 x1461 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x801 x1461 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x982 x1461 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1419 x221))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x19 (x1088 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x1257 x440))
(assert (=> (>= 10000 (x158 (x310 (+ 64 x827)))) (= (x137 (x158 (x310 (+ 64 x827)))) (x1088 (x158 (x310 (+ 64 x827)))))))
(assert (= (x1310 (+ (x310 (+ x1194 68)) (- (+ 68 (- (+ (- (+ x567 (- x1043 x1522)) x1194) x1198) 160)) 68))) 0))
(assert (= (=> (and (= (x558 x393) x1021) (= x1398 (x310 (+ 32 x616))) (= x149 (or (and (< x867 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x867) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x867))) (>= 1461501637330902918203684832716283019655932542975 x1021) (= x80 (x929 128)) (= (x310 (+ x1194 4)) x87) (= (x310 (+ x867 31)) x116) (not x149) (= x677 (< 0 x80)) (= (x310 (+ x910 x400)) x1194) (= (x928 115792089237316195423570985008687907853269984665640564039457584007913129639904 x116) x910) (= x616 (x310 (+ x87 32))) (= x87 x1197) (= x615 (= x401 0)) (not x615) (= x400 x393)) (and (=> (and (= x1450 0) (not x677)) x880) (=> (and x677 (and (= x169 x1398) (= (x656 160) x373) (= (> x80 32) x655))) (and (=> (and (not x655) (= 32 x1450)) x880) (=> (and x655 (and (= x559 (> x80 64)) (= x782 (x310 (+ 32 x1398))) (= x399 (x1098 192)))) (and (=> (and (= x1450 64) (not x559)) x880) (=> (and x559 (and (= (> x80 96) x851) (= x203 (x310 (+ 64 x1398))) (= x1502 (x418 224)))) (and (=> x851 x1168) (=> (and (= 96 x1450) (not x851)) x880))))))))) x865))
(assert (= (x1088 1208925819614629174706176) (x137 1208925819614629174706176)))
(assert (=> (<= x7 10000) (= (x137 x7) (x1088 x7))))
(assert (x1419 x634))
(assert (= (x1310 (+ (- (+ (- (+ x1198 (- x626 x1194)) 160) 68) 68) (x310 (+ x1194 68)))) 0))
(assert (= 0 (x1310 (+ (- x114 x1522) x567))))
(assert (= x466 (and x799 (not x1487))))
(assert (x1419 x369))
(assert (= x374 (and x478 (not x394))))
(assert (x1419 x1200))
(assert (= (x1418 (x310 (+ x827 192))) (x19 (x137 (x1418 (x310 (+ x827 192)))))))
(assert (x1419 x169))
(assert (x1366 (x457 (x310 (+ x114 160)))))
(assert (x1366 x925))
(assert (= 0 (x665 (- (+ (- (+ 68 (- (+ (- (+ (- (+ x1198 (- (+ x567 (- x1043 x1522)) x1194)) 160) 68) 68) (x310 (+ x1194 68))) 160)) 68) (x310 (+ 68 x1522))) x1302))))
(assert (= 43611735268480658727360147997893738071856775535381453097760378360336924803072 (x19 (x1088 43611735268480658727360147997893738071856775535381453097760378360336924803072))))
(assert (x1419 x827))
(assert (x1366 (x158 (x310 (+ x827 128)))))
(assert (x1419 x439))
(assert (x1419 x1493))
(assert (x1419 x23))
(assert (= x978 (=> (and (= x1131 (> x650 x321)) (or (not x1131) (and (= (x310 (+ x321 x697)) x496) x1131))) x386)))
(assert (= (or x239 x1108) x984))
(assert (= x1144 (and x1382 (not x755))))
(assert (x1419 x911))
(assert (= (x665 (- x114 x1302)) 0))
(assert (x1419 x31))
(assert (x1419 x831))
(assert (x1419 x548))
(assert (= x1448 (x19 (x137 x1448))))
(assert (= x764 (=> (and (= x827 x79) (= (x389 160) x736) (= (not (> x601 32)) x1092)) (and (=> (= 32 x1498) x762) x1092))))
(assert (=> (<= x1276 10000) (= (x1088 x1276) (x137 x1276))))
(assert (=> (<= (x106 (x310 (+ x827 64))) 10000) (= (x137 (x106 (x310 (+ x827 64)))) (x1088 (x106 (x310 (+ 64 x827)))))))
(assert (= (x1238 x827) 0))
(assert (=> (<= (x866 320) 10000) (= (x137 (x866 320)) (x1088 (x866 320)))))
(assert (= x597 (x19 (x137 x597))))
(assert (= x391 (and x975 x420)))
(assert (x1419 x1511))
(assert (x1419 x1229))
(assert (= x127 (and x101 (not x1351))))
(assert (x1419 x836))
(assert (x1419 x4))
(assert (= 82070247630637395725875354456112310357886651100252770250446759337321580986368 (x19 (x1088 82070247630637395725875354456112310357886651100252770250446759337321580986368))))
(assert (= (and (not x1038) x1438) x532))
(assert (x1366 (x385 (x310 (+ x114 96)))))
(assert (x908 x414))
(assert (= (x19 (x137 (x1093 (x310 (+ x827 128))))) (x1093 (x310 (+ x827 128)))))
(assert (x1419 x327))
(assert (= (=> (and (= x208 (= x320 0)) (or (and (not x208) (and (= x251 x284) (= x756 x579) (= x320 x470))) (and x208 (and (= (x1104 (x137 x372)) x159) (= x251 x284) (= (x310 (+ x1184 x425)) x180) (= (ite (= x320 0) x266 0) x1184) (= (- x159 x1184) x897) (< (+ x1184 x425) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x477 (x137 x1508)) x425) (= x756 x579) (= x320 x470))))) x995) x1026))
(assert (= (x259 160) 0))
(assert (x1419 x1268))
(assert (= (x28 (+ (- (+ x567 (- x1459 x1522)) x1194) x1198)) 0))
(assert (= 1461501637330902918203684832716283019655932542976 (x19 (x1088 1461501637330902918203684832716283019655932542976))))
(assert (x1388 x170))
(assert (and (x679 x1217 32) (=> (< 0 32) (= x1217 (+ (* 32 (x174 x1217 32)) (x873 x1217 32)))) (x801 x1217 32) (x982 x1217 32)))
(assert (x1419 x589))
(assert (= 0 (x28 (+ x1198 (- (+ (- (x310 (+ 192 x114)) x1522) x567) x1194)))))
(assert (= 1882194962 (x19 (x1088 1882194962))))
(assert (=> (<= (x158 (x310 (+ x827 128))) 10000) (= (x1088 (x158 (x310 (+ x827 128)))) (x137 (x158 (x310 (+ x827 128)))))))
(assert (x1419 x36))
(assert (x1419 x1118))
(assert (x1419 x73))
(assert (= 0 (x665 (- (+ (- (+ (- (+ (x310 (+ x1194 68)) (- (+ (- (+ 192 (x310 (+ x697 68))) 160) 68) 68)) 160) 68) 68) (x310 (+ 68 x1522))) x1302))))
(assert (= (or x568 x1355) x523))
(assert (= 0 (x665 (- (+ (- (+ (- (+ (- x1295 x1522) x567) 160) 68) 68) (x310 (+ 68 x1522))) x1302))))
(assert (x1366 (x123 (x310 (+ 64 x827)))))
(assert (x1419 x567))
(assert (x1419 x1403))
(assert (= (x665 (- (+ (x310 (+ x1522 68)) (- (+ (- (+ (x310 (+ x1194 68)) (- (+ (- (+ (- (+ x567 (- (x310 (+ 128 x114)) x1522)) x1194) x1198) 160) 68) 68)) 160) 68) 68)) x1302)) 0))
(assert (= x491 (or x237 x878)))
(assert (= x1186 (=> (and (= x766 x827) (= x652 (not (< 32 x1073))) (= x1099 (x1 160))) (and (=> (= x245 32) x554) x652))))
(assert (= 0 (x665 (- (+ (- (+ (- (+ (x310 (+ x1194 68)) (- (+ (- (+ (x310 (+ x697 68)) 64) 160) 68) 68)) 160) 68) 68) (x310 (+ 68 x1522))) x1302))))
(assert (x32 x339))
(assert (= (or x521 x428) x546))
(assert (x1366 (x1044 (x310 (+ x827 192)))))
(assert (x1419 x203))
(assert (= (x665 (- (+ (x310 (+ 68 x1522)) (- (+ (- (+ 32 (x310 (+ x1194 68))) 160) 68) 68)) x1302)) 0))
(assert (= (and (not x719) x410) x460))
(assert (= (x1088 3104404863) (x137 3104404863)))
(assert (= (x1310 (+ (- (+ (- (x310 (+ 96 x697)) 160) 68) 68) (x310 (+ x1194 68)))) 0))
(assert (x1419 x251))
(assert (= x1416 (=> (and (= (< x944 x198) x342) (or (and x342 (= x856 (x310 (+ x827 x944)))) (not x342))) x303)))
(assert (x1419 x34))
(assert (x1419 x216))
(assert (= x1349 (or x1309 x1350)))
(assert (x1419 x1245))
(assert (= (x1238 (+ (x310 (+ 68 x1522)) (- (+ (- (+ (x310 (+ 68 x1194)) (- (+ 68 (- (x310 (+ x697 128)) 160)) 68)) 160) 68) 68))) 0))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1180) (< (+ x1180 x1488) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1354 x550) (= x580 x1282) (<= 0 x1180) (= x550 (+ x1488 x1180)) (= x550 x1377)) x1214) x1353))
(assert (x1419 x1083))
(assert (x1419 x13))
(assert (= x1227 (or (and x1135 (not x83)) x492)))
(assert (x1419 x992))
(assert (=> (<= (x123 (x310 (+ x827 64))) 10000) (= (x1088 (x123 (x310 (+ 64 x827)))) (x137 (x123 (x310 (+ x827 64)))))))
(assert (= (and x381 x677) x363))
(assert (x1419 x628))
(assert (x1419 x643))
(assert (x1419 x1470))
(assert (x1419 x462))
(assert (x1419 x644))
(assert (x1419 x872))
(assert (x406 x1052))
(assert (=> (>= 10000 (x1056 (x310 (+ x827 32)))) (= (x1088 (x1056 (x310 (+ 32 x827)))) (x137 (x1056 (x310 (+ 32 x827)))))))
(assert (x1419 x130))
(assert (x1419 x727))
(assert (x1188 x258))
(assert (x1419 x1341))
(assert (= (x19 (x137 (x1101 (x310 (+ x827 160))))) (x1101 (x310 (+ 160 x827)))))
(assert (x1419 x331))
(assert (= (x106 (x310 (+ 192 x827))) (x19 (x137 (x106 (x310 (+ 192 x827)))))))
(assert (x1366 (x637 (x310 (+ x400 128)))))
(assert (x1419 x252))
(assert (=> (<= x1454 10000) (= (x137 x1454) (x1088 x1454))))
(assert (= (and x307 x213) x37))
(assert (x1419 x946))
(assert (x1419 x1166))
(assert (and (x679 x770 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= x770 (+ (* 1461501637330902918203684832716283019655932542976 (x174 x770 1461501637330902918203684832716283019655932542976)) (x873 x770 1461501637330902918203684832716283019655932542976)))) (x801 x770 1461501637330902918203684832716283019655932542976) (x982 x770 1461501637330902918203684832716283019655932542976)))
(assert (= x1050 (=> (and (= x395 (x385 x1459)) (= x1459 x88) (= x1191 x114) (= x1013 (not (< 32 x1414)))) (and (=> (= 32 x691) x97) x1013))))
(assert (= 0 (x1310 (+ (x310 (+ x1194 68)) (- (+ (- (+ (- (+ x567 (- x1163 x1522)) x1194) x1198) 160) 68) 68)))))
(assert (x1419 x399))
(assert (= (x457 (x310 (+ 96 x114))) (x19 (x137 (x457 (x310 (+ 96 x114)))))))
(assert (=> (>= 10000 (x106 (x310 (+ 160 x827)))) (= (x1088 (x106 (x310 (+ x827 160)))) (x137 (x106 (x310 (+ x827 160)))))))
(assert (= (=> (and (= x323 x1434) (= x504 (+ x379 x594)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x219) (= x379 x1434) (= x632 x195) (< 0 x186) (<= 0 x632) (= x476 (+ x323 x195)) (= (> x238 0) x786) (= x1282 x594) (<= 0 x186) (<= 0 x219) (= x1434 (x174 x357 x186)) (not (> x219 x843)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x186) (= (x810 (- x843 x219)) x357) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x632) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1282 x1434)) (< (+ x1434 x632) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (=> (and x786 (and (or (and (> x1469 x1391) (= (<= x1469 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1391 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1469) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1391))) (= (x1463 x39) x1391) (= (x174 x1118 32) x486) (= x474 (x310 (+ 32 x769))) (= x772 (x1348 (* 32 x486))) (= x1064 (x1048 128)) (= (x1463 x769) x63) (= x1017 (x310 (+ 160 x63))) (not (> x63 18446744073709551615)) (= (x310 (+ 31 x63)) x1118) (= x1070 (> x1064 0)) (= (x810 (- x324 x63)) x939) (= 128 x1141) (not (or (and (< x939 x474) (= (<= x939 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x474))) (and (> x939 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x474 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (x810 (- x324 x911)) x983) (= x911 x39) (= (x310 (+ 128 x53)) x827) (= x1469 (x810 (- x983 31))) (> x238 0) (= (x310 (+ x1391 x911)) x769) (= (x310 (+ x772 32)) x53))) (and (=> (and (not x1070) (= x1384 0)) x264) (=> x1070 x1103))) (=> (and (and (= 128 x1295) (= x735 x11)) (not x786)) x783))) x1214))
(assert (x406 x365))
(assert (x920 x357 x186))
(assert (x1366 x1078))
(assert (x1188 1000000000000000000000000))
(assert (x1419 x884))
(assert (= (x19 (x137 (x1044 (x310 (+ 160 x827))))) (x1044 (x310 (+ x827 160)))))
(assert (x1419 x1498))
(assert (= 86587964985574495804695408441416066048332504164997306664935388907017567469568 (x19 (x1088 86587964985574495804695408441416066048332504164997306664935388907017567469568))))
(assert (x1419 x1503))
(assert (= x819 (and x1500 (not x253))))
(assert (= (x1238 (+ (- (+ 68 (- x626 160)) 68) (x310 (+ x1522 68)))) 0))
(assert (x1419 x490))
(assert (= (x19 (x137 (x1044 (x310 (+ 128 x827))))) (x1044 (x310 (+ 128 x827)))))
(assert (= 0 (x665 (- (+ (x310 (+ 68 x1522)) (- (+ 68 (- (+ (- (x310 (+ 64 x114)) x1522) x567) 160)) 68)) x1302))))
(assert (x1419 x860))
(assert (x1419 x772))
(assert (= (x1273 (x310 (+ 160 x114))) (x19 (x137 (x1273 (x310 (+ 160 x114)))))))
(assert (= x1430 (and x1400 x1067)))
(assert (x1419 x1458))
(assert (x1419 x720))
(assert (x1419 x486))
(assert (= (x1238 (x310 (+ 32 x114))) 0))
(assert (x1419 x117))
(assert (= 0 (x1310 (x310 (+ 68 x1194)))))
(assert (x1419 x336))
(assert (= (x19 (x137 (x1418 (x310 (+ 64 x827))))) (x1418 (x310 (+ x827 64)))))
(assert (= (x1088 2710164492) (x137 2710164492)))
(assert (= 0 (x665 (- (+ (- (+ 68 (- (+ (x310 (+ x1194 68)) (- (+ (- (+ (- (+ (- x1178 x1522) x567) x1194) x1198) 160) 68) 68)) 160)) 68) (x310 (+ x1522 68))) x1302))))
(assert (= (x665 (- (+ (- (+ (- (+ (x310 (+ x1194 68)) (- (+ (- (x310 (+ 96 x697)) 160) 68) 68)) 160) 68) 68) (x310 (+ x1522 68))) x1302)) 0))
(assert (= (x137 2745196236) (x1088 2745196236)))
(assert (x1419 x440))
(assert (= (x665 (- (+ (- (+ (- (+ x567 (- x1178 x1522)) 160) 68) 68) (x310 (+ 68 x1522))) x1302)) 0))
(assert (x1419 x536))
(assert (x1419 x738))
(assert (=> (<= (x1418 (x310 (+ x827 192))) 10000) (= (x137 (x1418 (x310 (+ 192 x827)))) (x1088 (x1418 (x310 (+ x827 192)))))))
(assert (= (x259 192) 0))
(assert (x1419 x1414))
(assert (=> (<= x95 10000) (= (x1088 x95) (x137 x95))))
(assert (= (=> (and (= x148 (>= 224 x199)) (= x199 (x810 (- x447 32))) (= (x810 (- x874 x1522)) x447) (= (x310 (+ x621 x1522)) x112) (= x874 (x310 (+ 32 x112)))) (and (=> (and (= (ite (<= x199 32) (x547 (x137 (x746 x1522)) 0) (ite (>= 64 x199) (x340 (x137 (x746 x1522)) (x137 (x746 (x310 (+ x1522 32)))) 0) (ite (<= x199 96) (x1466 (x137 (x746 x1522)) (x137 (x746 (x310 (+ x1522 32)))) (x137 (x746 (x310 (+ 64 x1522)))) 0) (ite (<= x199 128) (x319 (x137 (x746 x1522)) (x137 (x746 (x310 (+ x1522 32)))) (x137 (x746 (x310 (+ 64 x1522)))) (x137 (x746 (x310 (+ x1522 96)))) 0) (ite (>= 160 x199) (x1162 (x137 (x746 x1522)) (x137 (x746 (x310 (+ 32 x1522)))) (x137 (x746 (x310 (+ 64 x1522)))) (x137 (x746 (x310 (+ x1522 96)))) (x137 (x746 (x310 (+ x1522 128)))) 0) (ite (<= x199 192) (x1520 (x137 (x746 x1522)) (x137 (x746 (x310 (+ x1522 32)))) (x137 (x746 (x310 (+ x1522 64)))) (x137 (x746 (x310 (+ x1522 96)))) (x137 (x746 (x310 (+ x1522 128)))) (x137 (x746 (x310 (+ 160 x1522)))) 0) (ite (<= x199 224) (x900 (x137 (x746 x1522)) (x137 (x746 (x310 (+ x1522 32)))) (x137 (x746 (x310 (+ x1522 64)))) (x137 (x746 (x310 (+ x1522 96)))) (x137 (x746 (x310 (+ x1522 128)))) (x137 (x746 (x310 (+ 160 x1522)))) (x137 (x746 (x310 (+ x1522 192)))) 0) (x137 x1448)))))))) x607) (= x1394 (<= x447 224))) (and x1394 (=> (and (= (x310 (+ x1522 4)) x938) (<= x872 1461501637330902918203684832716283019655932542975) (not (< x396 x1087)) (= (> x1224 0) x670) (= (x780 x99) x396) (= x99 (x340 (x137 x520) (ite (>= 32 x447) (x547 (x137 (x746 x1522)) 0) (ite (>= 64 x447) (x340 (x137 (x746 x1522)) (x137 (x746 (x310 (+ 32 x1522)))) 0) (ite (>= 96 x447) (x1466 (x137 (x746 x1522)) (x137 (x746 (x310 (+ 32 x1522)))) (x137 (x746 (x310 (+ x1522 64)))) 0) (ite (<= x447 128) (x319 (x137 (x746 x1522)) (x137 (x746 (x310 (+ 32 x1522)))) (x137 (x746 (x310 (+ 64 x1522)))) (x137 (x746 (x310 (+ 96 x1522)))) 0) (ite (>= 160 x447) (x1162 (x137 (x746 x1522)) (x137 (x746 (x310 (+ x1522 32)))) (x137 (x746 (x310 (+ x1522 64)))) (x137 (x746 (x310 (+ x1522 96)))) (x137 (x746 (x310 (+ x1522 128)))) 0) (ite (>= 192 x447) (x1520 (x137 (x746 x1522)) (x137 (x746 (x310 (+ x1522 32)))) (x137 (x746 (x310 (+ x1522 64)))) (x137 (x746 (x310 (+ x1522 96)))) (x137 (x746 (x310 (+ x1522 128)))) (x137 (x746 (x310 (+ 160 x1522)))) 0) (ite (>= 224 x447) (x900 (x137 (x746 x1522)) (x137 (x746 (x310 (+ 32 x1522)))) (x137 (x746 (x310 (+ 64 x1522)))) (x137 (x746 (x310 (+ 96 x1522)))) (x137 (x746 (x310 (+ x1522 128)))) (x137 (x746 (x310 (+ 160 x1522)))) (x137 (x746 (x310 (+ x1522 192)))) 0) (x137 x1110)))))))) 0)) (= (x672 x1295) x1224) (<= x396 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 1461501637330902918203684832716283019655932542976 x872) (<= 0 x872) (= (x310 (+ x549 32)) x891) (= x549 (x310 (+ 32 x938))) (>= x396 0)) (and (=> (and (= 0 x271) (not x670)) x1443) (=> x670 x143))))) x148)) x564))
(assert (x1419 x1332))
(assert (x1419 x614))
(assert (x1419 x854))
(assert (x1419 x1501))
(assert (= (x1044 (x310 (+ x827 64))) (x19 (x137 (x1044 (x310 (+ 64 x827)))))))
(assert (x1419 x184))
(assert (x1419 x444))
(assert (= x1022 (and x1467 (not x816))))
(assert (=> (<= (x637 (x310 (+ 64 x400))) 10000) (= (x137 (x637 (x310 (+ 64 x400)))) (x1088 (x637 (x310 (+ x400 64)))))))
(assert (x1419 x187))
(assert (= (and (not x243) x1148) x1317))
(assert (x1419 x1378))
(assert (=> (<= (x1418 (x310 (+ x827 128))) 10000) (= (x137 (x1418 (x310 (+ 128 x827)))) (x1088 (x1418 (x310 (+ x827 128)))))))
(assert (= x879 (and x1342 (not x455))))
(assert (= (x1238 x1219) 0))
(assert (= (=> (and (= x1034 (not (> x621 32))) (= (x1066 x560) x225) (= x560 x88) (= x1522 x1179)) (and (=> (= x1526 32) x1187) x1034)) x855))
(assert (x1419 x1391))
(assert (x1366 (x696 (x310 (+ 160 x697)))))
(assert (x1419 x1119))
(assert (= (and x1382 x755) x347))
(assert (= x1387 (and x714 x388)))
(assert (x1366 (x538 (x310 (+ x400 96)))))
(assert (x1366 (x1056 x827)))
(assert (x908 1461501637330902918203684832716283019655932542976))
(assert (x1419 x505))
(assert (=> (>= 10000 (x1101 (x310 (+ x827 64)))) (= (x1088 (x1101 (x310 (+ x827 64)))) (x137 (x1101 (x310 (+ x827 64)))))))
(assert (= x1171 (=> (and (= (x810 (- x725 x400)) x299) (= x1439 (>= 224 x658)) (= (x310 (+ 32 x1373)) x725) (= x658 (x810 (- x299 32))) (= x1373 (x310 (+ x400 x246)))) (and x1439 (=> (= (>= 224 x299) x1437) (and (=> (and (= x51 (x538 128)) (not x797) (= x797 (= x117 0)) (= (x1096 x1133) x770) (= x1133 (ite (<= x299 32) (x547 (x137 (x538 x400)) 0) (ite (>= 64 x299) (x340 (x137 (x538 x400)) (x137 (x538 (x310 (+ 32 x400)))) 0) (ite (>= 96 x299) (x1466 (x137 (x538 x400)) (x137 (x538 (x310 (+ 32 x400)))) (x137 (x538 (x310 (+ 64 x400)))) 0) (ite (<= x299 128) (x319 (x137 (x538 x400)) (x137 (x538 (x310 (+ 32 x400)))) (x137 (x538 (x310 (+ 64 x400)))) (x137 (x538 (x310 (+ x400 96)))) 0) (ite (<= x299 160) (x1162 (x137 (x538 x400)) (x137 (x538 (x310 (+ x400 32)))) (x137 (x538 (x310 (+ 64 x400)))) (x137 (x538 (x310 (+ 96 x400)))) (x137 (x538 (x310 (+ 128 x400)))) 0) (ite (>= 192 x299) (x1520 (x137 (x538 x400)) (x137 (x538 (x310 (+ x400 32)))) (x137 (x538 (x310 (+ 64 x400)))) (x137 (x538 (x310 (+ 96 x400)))) (x137 (x538 (x310 (+ x400 128)))) (x137 (x538 (x310 (+ x400 160)))) 0) (ite (<= x299 224) (x900 (x137 (x538 x400)) (x137 (x538 (x310 (+ x400 32)))) (x137 (x538 (x310 (+ 64 x400)))) (x137 (x538 (x310 (+ x400 96)))) (x137 (x538 (x310 (+ x400 128)))) (x137 (x538 (x310 (+ 160 x400)))) (x137 (x538 (x310 (+ x400 192)))) 0) (x137 x692))))))))) (= (> x51 0) x254) (= (x928 1461501637330902918203684832716283019655932542975 x770) x117)) (and (=> (and (not x254) (= x589 0)) x815) (=> (and x254 (and (= (< 32 x51) x243) (= x400 x1024) (= (x538 160) x592))) (and (=> (and x243 (and (= x618 (x310 (+ x400 32))) (= (x1172 192) x146) (= x973 (< 64 x51)))) (and (=> (and (= 64 x589) (not x973)) x815) (=> (and x973 (and (= (x310 (+ x400 64)) x248) (= x177 (> x51 96)) (= (x1275 224) x350))) (and (=> (and (= 96 x589) (not x177)) x815) (=> x177 x1386))))) (=> (and (not x243) (= x589 32)) x815))))) x1437))))))
(assert (=> (>= 10000 (x746 (x310 (+ 128 x1522)))) (= (x1088 (x746 (x310 (+ 128 x1522)))) (x137 (x746 (x310 (+ x1522 128)))))))
(assert (and (x679 x170 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x170 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x174 x170 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x873 x170 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x801 x170 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x982 x170 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x514 (and x394 x478)))
(assert (= (x746 x1522) (x19 (x137 (x746 x1522)))))
(assert (= 0 (x665 (- x1043 x1302))))
(assert (x1366 (x457 (x310 (+ x114 96)))))
(assert (= (x19 (x1088 2710164492)) 2710164492))
(assert (= (x1310 (+ (- (+ (- (+ 160 (x310 (+ 68 x697))) 160) 68) 68) (x310 (+ x1194 68)))) 0))
(assert (x1419 x1526))
(assert (x1419 x180))
(assert (and (=> (and (> x1334 0) (< 0 4)) (and (>= x1334 (* 4 (x174 x1334 4))) (< (- x1334 4) (* 4 (x174 x1334 4))))) (x1195 x1334 4) (= (- x1334 (x928 3 x1334)) (* 4 (x174 x1334 4))) (x918 x1334 4) (x1420 x1334 4) (x818 x1334 4)))
(assert (= 0 (x1238 (+ (x310 (+ x1522 68)) (- (+ (- (+ (- x1219 x1522) x567) 160) 68) 68)))))
(assert (= x825 (=> (and (= x290 (x810 (- x536 x114))) (= (>= 224 x1370) x41) (= (x310 (+ x448 32)) x536) (= (x310 (+ x1414 x114)) x448) (= x1370 (x810 (- x290 32)))) (and x41 (=> (and (= (ite (<= x1370 32) (x547 (x137 (x1273 x114)) 0) (ite (>= 64 x1370) (x340 (x137 (x1273 x114)) (x137 (x1273 (x310 (+ x114 32)))) 0) (ite (<= x1370 96) (x1466 (x137 (x1273 x114)) (x137 (x1273 (x310 (+ 32 x114)))) (x137 (x1273 (x310 (+ 64 x114)))) 0) (ite (<= x1370 128) (x319 (x137 (x1273 x114)) (x137 (x1273 (x310 (+ x114 32)))) (x137 (x1273 (x310 (+ x114 64)))) (x137 (x1273 (x310 (+ 96 x114)))) 0) (ite (>= 160 x1370) (x1162 (x137 (x1273 x114)) (x137 (x1273 (x310 (+ 32 x114)))) (x137 (x1273 (x310 (+ x114 64)))) (x137 (x1273 (x310 (+ 96 x114)))) (x137 (x1273 (x310 (+ x114 128)))) 0) (ite (>= 192 x1370) (x1520 (x137 (x1273 x114)) (x137 (x1273 (x310 (+ 32 x114)))) (x137 (x1273 (x310 (+ 64 x114)))) (x137 (x1273 (x310 (+ 96 x114)))) (x137 (x1273 (x310 (+ 128 x114)))) (x137 (x1273 (x310 (+ x114 160)))) 0) (ite (>= 224 x1370) (x900 (x137 (x1273 x114)) (x137 (x1273 (x310 (+ x114 32)))) (x137 (x1273 (x310 (+ x114 64)))) (x137 (x1273 (x310 (+ x114 96)))) (x137 (x1273 (x310 (+ 128 x114)))) (x137 (x1273 (x310 (+ x114 160)))) (x137 (x1273 (x310 (+ x114 192)))) 0) (x137 x176)))))))) x124) (= (<= x290 224) x456)) (and x456 (=> (and (and (= x285 (> x806 0)) (= x255 (x928 1461501637330902918203684832716283019655932542975 x184)) (= (x810 (- x889 x1087)) x472) (= (x310 (+ x1445 32)) x565) (not (> x1087 x889)) (= (x340 (x137 x520) (ite (<= x290 32) (x547 (x137 (x1273 x114)) 0) (ite (>= 64 x290) (x340 (x137 (x1273 x114)) (x137 (x1273 (x310 (+ 32 x114)))) 0) (ite (<= x290 96) (x1466 (x137 (x1273 x114)) (x137 (x1273 (x310 (+ x114 32)))) (x137 (x1273 (x310 (+ 64 x114)))) 0) (ite (>= 128 x290) (x319 (x137 (x1273 x114)) (x137 (x1273 (x310 (+ x114 32)))) (x137 (x1273 (x310 (+ 64 x114)))) (x137 (x1273 (x310 (+ x114 96)))) 0) (ite (>= 160 x290) (x1162 (x137 (x1273 x114)) (x137 (x1273 (x310 (+ x114 32)))) (x137 (x1273 (x310 (+ x114 64)))) (x137 (x1273 (x310 (+ x114 96)))) (x137 (x1273 (x310 (+ x114 128)))) 0) (ite (>= 192 x290) (x1520 (x137 (x1273 x114)) (x137 (x1273 (x310 (+ 32 x114)))) (x137 (x1273 (x310 (+ x114 64)))) (x137 (x1273 (x310 (+ 96 x114)))) (x137 (x1273 (x310 (+ 128 x114)))) (x137 (x1273 (x310 (+ 160 x114)))) 0) (ite (<= x290 224) (x900 (x137 (x1273 x114)) (x137 (x1273 (x310 (+ 32 x114)))) (x137 (x1273 (x310 (+ 64 x114)))) (x137 (x1273 (x310 (+ 96 x114)))) (x137 (x1273 (x310 (+ 128 x114)))) (x137 (x1273 (x310 (+ 160 x114)))) (x137 (x1273 (x310 (+ x114 192)))) 0) (x137 x95)))))))) 0) x506) (<= 0 x889) (= x1445 (x310 (+ 4 x114))) (= x889 (x780 x506)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x889)) (or (not x285) (and x285 (and (= (x1474 (x137 x1508)) x204) x587 x42 (< x744 4294967296) (= (<= x204 (x519 (x137 x1508))) x587) (= (= x327 (x519 (x137 x930))) x42) (= x327 (x1474 (x137 x930))))))) x227)))))))
(assert (= 0 (x1238 (+ (x310 (+ 68 x1522)) (- (+ 68 (- (+ (x310 (+ x1194 68)) (- (+ (- (+ x1198 (- x567 x1194)) 160) 68) 68)) 160)) 68)))))
(assert (= 0 (x665 (- (x310 (+ x1522 32)) x1302))))
(assert (=> (<= (x389 x827) 10000) (= (x1088 (x389 x827)) (x137 (x389 x827)))))
(assert (=> (>= 10000 (x1093 x827)) (= (x1088 (x1093 x827)) (x137 (x1093 x827)))))
(assert (x1419 x1385))
(assert (= (x19 (x137 x835)) x835))
(assert (= (x665 (- (+ (x310 (+ x1522 68)) (- (+ 68 (- (+ (- (+ 68 (- (+ (- x626 x1194) x1198) 160)) 68) (x310 (+ 68 x1194))) 160)) 68)) x1302)) 0))
(assert (x1188 4))
(assert (and (x679 x1493 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1493 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x174 x1493 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x873 x1493 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x801 x1493 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x982 x1493 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1419 x1247))
(assert (= (x1238 (+ (x310 (+ x1522 68)) (- (+ (- (+ x567 (- x1178 x1522)) 160) 68) 68))) 0))
(assert (x1366 (x1273 (x310 (+ x114 32)))))
(assert (x1419 x1082))
(assert (= (x137 3211726123) (x1088 3211726123)))
(assert (and (x679 x331 2) (=> (< 0 2) (= x331 (+ (* 2 (x174 x331 2)) (x873 x331 2)))) (x801 x331 2) (x982 x331 2)))
(assert (x1419 x701))
(assert (= (x19 (x137 (x389 (x310 (+ 160 x827))))) (x389 (x310 (+ x827 160)))))
(assert (=> (>= 10000 x664) (= (x137 x664) (x1088 x664))))
(assert (= x445 (and x523 x8)))
(assert (x1419 x476))
(assert (= (x1273 x114) (x19 (x137 (x1273 x114)))))
(assert (= x441 (or x1375 x906)))
(assert (=> (<= x930 10000) (= (x1088 x930) (x137 x930))))
(assert (=> (>= 10000 (x746 (x310 (+ 96 x1522)))) (= (x1088 (x746 (x310 (+ 96 x1522)))) (x137 (x746 (x310 (+ x1522 96)))))))
(assert (= x318 (=> (and (= (< x1237 x569) x471) (or (and (= x138 (x310 (+ x1237 x827))) x471) (not x471))) x1277)))
(assert (and (and (= (- (* 32 (- x440 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x440 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x267 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x440 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x440 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x267 32 (- x440 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x267 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x440) (- (* 32 x440) (* x440 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1150 32 x440) (x512 32 x440) (x1421 32 x440) (x1016 32 x440) (= (x267 32 x440) (* 32 x440)) (x951 32 x440)))
(assert (x1366 (x457 (x310 (+ x114 32)))))
(assert (= x520 (x19 (x137 x520))))
(assert (= 0 (x1310 (+ (- (+ (- (+ (- (+ x567 (- (x310 (+ x114 192)) x1522)) x1194) x1198) 160) 68) 68) (x310 (+ x1194 68))))))
(assert (= (=> (and (= (x810 (- x645 x827)) x790) (= x645 (x310 (+ x1090 32))) (= (>= 224 x30) x844) (= (x810 (- x790 32)) x30) (= (x310 (+ x827 x1073)) x1090)) (and (=> (and (= (>= 224 x790) x306) (= x789 (ite (>= 32 x30) (x547 (x137 (x106 x827)) 0) (ite (<= x30 64) (x340 (x137 (x106 x827)) (x137 (x106 (x310 (+ x827 32)))) 0) (ite (>= 96 x30) (x1466 (x137 (x106 x827)) (x137 (x106 (x310 (+ 32 x827)))) (x137 (x106 (x310 (+ x827 64)))) 0) (ite (>= 128 x30) (x319 (x137 (x106 x827)) (x137 (x106 (x310 (+ 32 x827)))) (x137 (x106 (x310 (+ 64 x827)))) (x137 (x106 (x310 (+ x827 96)))) 0) (ite (>= 160 x30) (x1162 (x137 (x106 x827)) (x137 (x106 (x310 (+ 32 x827)))) (x137 (x106 (x310 (+ 64 x827)))) (x137 (x106 (x310 (+ x827 96)))) (x137 (x106 (x310 (+ 128 x827)))) 0) (ite (>= 192 x30) (x1520 (x137 (x106 x827)) (x137 (x106 (x310 (+ 32 x827)))) (x137 (x106 (x310 (+ 64 x827)))) (x137 (x106 (x310 (+ 96 x827)))) (x137 (x106 (x310 (+ 128 x827)))) (x137 (x106 (x310 (+ 160 x827)))) 0) (ite (<= x30 224) (x900 (x137 (x106 x827)) (x137 (x106 (x310 (+ 32 x827)))) (x137 (x106 (x310 (+ x827 64)))) (x137 (x106 (x310 (+ 96 x827)))) (x137 (x106 (x310 (+ x827 128)))) (x137 (x106 (x310 (+ 160 x827)))) (x137 (x106 (x310 (+ x827 192)))) 0) (x137 x1229)))))))))) (and x306 (=> (and (= (x133 x578) x515) (= (x810 (- x649 x515)) x266) (= x1401 (> x266 0)) (<= 0 x515) (not (> x515 x649)) (= x578 (x340 (x137 x520) (ite (>= 32 x790) (x547 (x137 (x106 x827)) 0) (ite (<= x790 64) (x340 (x137 (x106 x827)) (x137 (x106 (x310 (+ 32 x827)))) 0) (ite (<= x790 96) (x1466 (x137 (x106 x827)) (x137 (x106 (x310 (+ 32 x827)))) (x137 (x106 (x310 (+ 64 x827)))) 0) (ite (>= 128 x790) (x319 (x137 (x106 x827)) (x137 (x106 (x310 (+ x827 32)))) (x137 (x106 (x310 (+ x827 64)))) (x137 (x106 (x310 (+ x827 96)))) 0) (ite (<= x790 160) (x1162 (x137 (x106 x827)) (x137 (x106 (x310 (+ 32 x827)))) (x137 (x106 (x310 (+ x827 64)))) (x137 (x106 (x310 (+ 96 x827)))) (x137 (x106 (x310 (+ x827 128)))) 0) (ite (<= x790 192) (x1520 (x137 (x106 x827)) (x137 (x106 (x310 (+ x827 32)))) (x137 (x106 (x310 (+ 64 x827)))) (x137 (x106 (x310 (+ 96 x827)))) (x137 (x106 (x310 (+ 128 x827)))) (x137 (x106 (x310 (+ x827 160)))) 0) (ite (>= 224 x790) (x900 (x137 (x106 x827)) (x137 (x106 (x310 (+ x827 32)))) (x137 (x106 (x310 (+ 64 x827)))) (x137 (x106 (x310 (+ 96 x827)))) (x137 (x106 (x310 (+ 128 x827)))) (x137 (x106 (x310 (+ 160 x827)))) (x137 (x106 (x310 (+ x827 192)))) 0) (x137 x1054)))))))) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x515)) (and (=> (and (and (= x1212 x295) (= x829 x266) (= (> x788 0) x1154) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x295 x266)) (<= 0 x295) (<= x295 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (+ x1212 x829) x644) (= x788 (x106 128))) x1401) (and (=> x1154 x380) (=> (and (= 0 x1152) (not x1154)) x709))) (=> (and (not x1401) (and (= x11 x1102) (= x1490 x827))) x1315))))) x844)) x508))
(assert (x1419 x510))
(assert (x1419 x280))
(assert (x1257 x503))
(assert (= (x1056 (x310 (+ x827 96))) (x19 (x137 (x1056 (x310 (+ x827 96)))))))
(assert (= 0 (x665 (- (x310 (+ 192 x1522)) x1302))))
(assert (x1419 x776))
(assert (x1257 1000000000000000000000000))
(assert (x1419 x1028))
(assert (x1257 (- x1231 x503)))
(assert (x1419 x1456))
(assert (= x1067 (and (not x346) x849)))
(assert (= x701 (x19 (x137 x701))))
(assert (x1366 x176))
(assert (= (x106 (x310 (+ 32 x827))) (x19 (x137 (x106 (x310 (+ 32 x827)))))))
(assert (= (x28 (+ (- x567 x1194) x1198)) 0))
(assert (= x1371 (and x973 x974)))
(assert (= (and x1339 x695) x1259))
(assert (= x979 (=> (and (= x1102 x579) (= (x310 (+ 32 x1028)) x493) (= (x310 (+ x958 32)) x1028) (= x1490 x958) (= x82 (x928 1461501637330902918203684832716283019655932542975 x552))) x1315)))
(assert (= 0 (x259 224)))
(assert (= 0 (x665 (- (+ (- (+ (- (x310 (+ x400 128)) 160) 68) 68) (x310 (+ 68 x1522))) x1302))))
(assert (=> (<= (x1044 (x310 (+ 64 x827))) 10000) (= (x137 (x1044 (x310 (+ 64 x827)))) (x1088 (x1044 (x310 (+ x827 64)))))))
(assert (x1419 x859))
(assert (= (x665 (- (x310 (+ 192 x114)) x1302)) 0))
(assert (x1257 (- x1232 x1106)))
(assert (= x1435 (and x1259 x954)))
(assert (x32 x412))
(assert (= 0 (x1238 (+ (x310 (+ x1522 68)) (- (+ 68 (- x229 160)) 68)))))
(assert (x1419 x204))
(assert (= x1001 (or x688 x1289)))
(assert (= 0 (x665 (- (+ (- (+ 68 (- (+ (- (+ (- (+ x1198 (- x741 x1194)) 160) 68) 68) (x310 (+ 68 x1194))) 160)) 68) (x310 (+ x1522 68))) x1302))))
(assert (x1366 (x1056 (x310 (+ x827 32)))))
(assert (= (x1310 (+ (- (+ (- (+ x1198 (- (+ (- x1459 x1522) x567) x1194)) 160) 68) 68) (x310 (+ x1194 68)))) 0))
(assert (x1419 x551))
(assert (x1366 (x866 160)))
(assert (= 0 (x1238 (+ (- (+ 68 (- (+ (x310 (+ x1194 68)) 32) 160)) 68) (x310 (+ x1522 68))))))
(assert (= 0 (x1238 (+ (x310 (+ x1522 68)) (- (+ (- (+ (- (+ 68 (- (+ (- (+ (- x1459 x1522) x567) x1194) x1198) 160)) 68) (x310 (+ x1194 68))) 160) 68) 68)))))
(assert (= (x1093 (x310 (+ 96 x827))) (x19 (x137 (x1093 (x310 (+ 96 x827)))))))
(assert (x1257 x486))
(assert (x1419 x1046))
(assert (=> (>= 10000 (x106 x827)) (= (x1088 (x106 x827)) (x137 (x106 x827)))))
(assert (= (x1310 (+ (- (+ 68 (- (+ (- (+ (- (x310 (+ 32 x114)) x1522) x567) x1194) x1198) 160)) 68) (x310 (+ 68 x1194)))) 0))
(assert (x1366 x710))
(assert (x1188 x24))
(assert (= (and x410 x719) x244))
(assert (x1419 x1476))
(assert (x1366 (x637 (x310 (+ x400 96)))))
(assert (= x1446 (or x785 x1407)))
(assert (x1419 x1151))
(assert (= (and x314 x1270) x1441))
(assert (x1419 x877))
(assert (= (x1238 x1163) 0))
(assert (= (x1056 (x310 (+ x827 64))) (x19 (x137 (x1056 (x310 (+ 64 x827)))))))
(assert (= (x1310 (+ x567 (- x1459 x1522))) 0))
(assert (x1388 x1039))
(assert (= (x1273 (x310 (+ 192 x114))) (x19 (x137 (x1273 (x310 (+ x114 192)))))))
(assert (x1419 x683))
(assert (= (=> (and (= (x310 (+ x827 x944)) x411) (= x690 (x810 (- x774 32))) (= (>= 224 x690) x612) (= x215 (x310 (+ 32 x411))) (= (x810 (- x215 x827)) x774)) (and x612 (=> (and (= (>= 224 x774) x663) (= x376 (ite (>= 32 x690) (x547 (x137 (x1056 x827)) 0) (ite (<= x690 64) (x340 (x137 (x1056 x827)) (x137 (x1056 (x310 (+ 32 x827)))) 0) (ite (<= x690 96) (x1466 (x137 (x1056 x827)) (x137 (x1056 (x310 (+ x827 32)))) (x137 (x1056 (x310 (+ x827 64)))) 0) (ite (>= 128 x690) (x319 (x137 (x1056 x827)) (x137 (x1056 (x310 (+ x827 32)))) (x137 (x1056 (x310 (+ 64 x827)))) (x137 (x1056 (x310 (+ 96 x827)))) 0) (ite (<= x690 160) (x1162 (x137 (x1056 x827)) (x137 (x1056 (x310 (+ x827 32)))) (x137 (x1056 (x310 (+ 64 x827)))) (x137 (x1056 (x310 (+ x827 96)))) (x137 (x1056 (x310 (+ x827 128)))) 0) (ite (<= x690 192) (x1520 (x137 (x1056 x827)) (x137 (x1056 (x310 (+ x827 32)))) (x137 (x1056 (x310 (+ 64 x827)))) (x137 (x1056 (x310 (+ x827 96)))) (x137 (x1056 (x310 (+ 128 x827)))) (x137 (x1056 (x310 (+ x827 160)))) 0) (ite (<= x690 224) (x900 (x137 (x1056 x827)) (x137 (x1056 (x310 (+ x827 32)))) (x137 (x1056 (x310 (+ 64 x827)))) (x137 (x1056 (x310 (+ x827 96)))) (x137 (x1056 (x310 (+ 128 x827)))) (x137 (x1056 (x310 (+ 160 x827)))) (x137 (x1056 (x310 (+ 192 x827)))) 0) (x137 x1290)))))))))) (and x663 (=> (and (= (and (>= x1305 x266) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x48 x266))) x642) (= x48 (x888 (x137 x372))) (= (x888 (x137 x1508)) x1305) (= x372 (x928 1461501637330902918203684832716283019655932542975 x552))) (and (=> (and (and (or (and x1369 (and (> 4294967296 x251) (= x402 x756) x408 x1254 (= (x1367 (x137 x372)) x377) (= x408 (= (x684 (x137 x372)) x377)) (= x586 (x1367 (x137 x1508))) (= (>= (x684 (x137 x1508)) x586) x1254))) (and (not x1369) (= x756 x11))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1389 x266)) (= (- x590 x266) x584) (= x1369 (> x320 0)) (= x1389 (x142 (x137 x372))) (= (x310 (+ x1389 x266)) x1345) (= (x888 (x137 x1508)) x590))) x642) x1026) (=> (and (and (= 0 x470) (= x579 x11) (= 0 x284)) (not x642)) x995))))))) x303))
(assert (= (and (not x471) x1446) x22))
(assert (x1419 x1180))
(assert (= 0 (x1310 (+ (- (x310 (+ 64 x114)) x1522) x567))))
(assert (x1419 x82))
(assert (= (and x750 (not x367)) x688))
(assert (= 0 (x1238 (+ (x310 (+ 68 x1522)) (- (+ 68 (- (+ x567 (- (x310 (+ 160 x114)) x1522)) 160)) 68)))))
(assert (= x410 (or x1253 x1381)))
(assert (x406 x414))
(assert (= x200 (or x526 x1338)))
(assert (x1419 x735))
(assert (x1419 x1023))
(assert (x1419 x1373))
(assert (= (and (not x540) x347) x1089))
(assert (and (x1420 x258 1000000000000000000000000) (x918 x258 1000000000000000000000000) (x818 x258 1000000000000000000000000) (x1195 x258 1000000000000000000000000) (=> (and (> x258 0) (< 0 1000000000000000000000000)) (and (>= x258 (* 1000000000000000000000000 (x174 x258 1000000000000000000000000))) (< (- x258 1000000000000000000000000) (* 1000000000000000000000000 (x174 x258 1000000000000000000000000)))))))
(assert (x1366 (x1101 x827)))
(assert (x1419 x316))
(assert (x1419 x58))
(assert (x1419 x432))
(assert (= (=> (and (= x420 (> x245 x1073)) (or (and x420 (= (x310 (+ x827 x1073)) x1119)) (not x420))) x508) x554))
(assert (=> (<= (x1418 (x310 (+ 32 x827))) 10000) (= (x1088 (x1418 (x310 (+ 32 x827)))) (x137 (x1418 (x310 (+ x827 32)))))))
(assert (x1419 x782))
(assert (x1419 x1417))
(assert (= (x1238 (+ (- (+ 68 (- (+ (x310 (+ x1194 68)) (- (+ (- (+ 64 (x310 (+ 68 x697))) 160) 68) 68)) 160)) 68) (x310 (+ x1522 68)))) 0))
(assert (x1419 x586))
(assert (x1366 (x106 (x310 (+ 128 x827)))))
(assert (x1366 (x866 320)))
(assert (= 0 (x1310 (+ (x310 (+ x1194 68)) (- (+ 68 (- (x310 (+ x697 68)) 160)) 68)))))
(assert (x1419 x881))
(assert (= (x1310 160) 0))
(assert (= (x28 224) 0))
(assert (x1419 x291))
(assert (= (x538 (x310 (+ 64 x400))) (x19 (x137 (x538 (x310 (+ 64 x400)))))))
(assert (x1419 x209))
(assert (= 0 (x28 (+ (- x229 x1194) x1198))))
(assert (= 0 (x1310 (+ (- (+ (- (+ x1198 (- x567 x1194)) 160) 68) 68) (x310 (+ x1194 68))))))
(assert (x1419 x1208))
(assert (= x998 (and (=> (and (not x948) (and (= x948 x861) (= x1198 x697))) x661) (=> (and (and (<= 0 x735) (= x530 (x1269 128)) (> 1461501637330902918203684832716283019655932542976 x735) (= x711 (x310 (+ x1158 32))) (= x1158 (x310 (+ x91 32))) (= (> x530 0) x717) (= x91 (x310 (+ x697 4))) (<= x735 1461501637330902918203684832716283019655932542975)) x948) (and (=> (and x717 (and (= x480 (> x530 32)) (= x711 x1262) (= (x636 160) x541))) (and (=> (and (= x598 32) (not x480)) x1340) (=> (and (and (= x1267 (x310 (+ x711 32))) (= x1453 (> x530 64)) (= x972 (x103 192))) x480) (and (=> (and (= x598 64) (not x1453)) x1340) (=> (and x1453 (and (= x388 (< 96 x530)) (= x599 (x310 (+ x711 64))) (= x68 (x1278 224)))) (and (=> (and (not x388) (= x598 96)) x1340) (=> x388 x61))))))) (=> (and (not x717) (= x598 0)) x1340))))))
(assert (x908 2))
(assert (= x489 (and x118 (not x275))))
(assert (x1419 x496))
(assert (= 0 (x1310 (+ x567 (- x1163 x1522)))))
(assert (x908 x170))
(assert (x1419 x692))
(assert (= x334 (and (not x717) x1425)))
(assert (=> (<= (x389 (x310 (+ 160 x827))) 10000) (= (x137 (x389 (x310 (+ 160 x827)))) (x1088 (x389 (x310 (+ x827 160)))))))
(assert (= x101 (or x966 x795)))
(assert (x1419 x183))
(assert (= (and x33 x131) x1407))
(assert (x1419 x452))
(assert (= 0 (x665 (- (+ (- (+ 68 (- (x310 (+ 160 x400)) 160)) 68) (x310 (+ x1522 68))) x1302))))
(assert (x1419 x75))
(assert (= (=> (and (= (< x291 x224) x1261) (or (and (= x1293 (x310 (+ x827 x291))) x1261) (not x1261))) x509) x1285))
(assert (= 0 (x665 (- (+ (x310 (+ 68 x1522)) (- (+ (- (+ x567 (- (x310 (+ 160 x114)) x1522)) 160) 68) 68)) x1302))))
(assert (= 0 (x665 (- (+ (- (+ 68 (- (+ 64 (x310 (+ x1194 68))) 160)) 68) (x310 (+ 68 x1522))) x1302))))
(assert (x406 x628))
(assert (x1419 x691))
(assert (= x381 (or x454 x168)))
(assert (x1366 x664))
(assert (x1366 (x1093 (x310 (+ x827 96)))))
(assert (= (x637 x400) (x19 (x137 (x637 x400)))))
(assert (= x74 (=> (and (= x961 (< 0 x1073)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x267 x1106 x503)) (= (x1 128) x1073) (= (x174 x258 1000000000000000000000000) x649) (= x258 (x267 x1106 x503))) (and (=> x961 x1186) (=> (and (not x961) (= 0 x245)) x554)))))
(assert (x1419 x957))
(assert (= 0 (x665 (- (x310 (+ x114 128)) x1302))))
(assert (x1419 x372))
(assert (= (=> (and (= (x310 (+ x827 x788)) x462) (= x249 (>= 224 x1189)) (= x572 (x310 (+ 32 x462))) (= x1189 (x810 (- x498 32))) (= x498 (x810 (- x572 x827)))) (and x249 (=> (and (= (ite (<= x1189 32) (x547 (x137 (x389 x827)) 0) (ite (<= x1189 64) (x340 (x137 (x389 x827)) (x137 (x389 (x310 (+ 32 x827)))) 0) (ite (>= 96 x1189) (x1466 (x137 (x389 x827)) (x137 (x389 (x310 (+ 32 x827)))) (x137 (x389 (x310 (+ 64 x827)))) 0) (ite (>= 128 x1189) (x319 (x137 (x389 x827)) (x137 (x389 (x310 (+ x827 32)))) (x137 (x389 (x310 (+ 64 x827)))) (x137 (x389 (x310 (+ 96 x827)))) 0) (ite (>= 160 x1189) (x1162 (x137 (x389 x827)) (x137 (x389 (x310 (+ 32 x827)))) (x137 (x389 (x310 (+ x827 64)))) (x137 (x389 (x310 (+ 96 x827)))) (x137 (x389 (x310 (+ x827 128)))) 0) (ite (<= x1189 192) (x1520 (x137 (x389 x827)) (x137 (x389 (x310 (+ x827 32)))) (x137 (x389 (x310 (+ 64 x827)))) (x137 (x389 (x310 (+ x827 96)))) (x137 (x389 (x310 (+ 128 x827)))) (x137 (x389 (x310 (+ x827 160)))) 0) (ite (>= 224 x1189) (x900 (x137 (x389 x827)) (x137 (x389 (x310 (+ 32 x827)))) (x137 (x389 (x310 (+ 64 x827)))) (x137 (x389 (x310 (+ 96 x827)))) (x137 (x389 (x310 (+ 128 x827)))) (x137 (x389 (x310 (+ 160 x827)))) (x137 (x389 (x310 (+ 192 x827)))) 0) (x137 x835)))))))) x1155) (= x703 (<= x498 224))) (and (=> (and (= x197 (ite (>= 32 x498) (x547 (x137 (x389 x827)) 0) (ite (<= x498 64) (x340 (x137 (x389 x827)) (x137 (x389 (x310 (+ 32 x827)))) 0) (ite (>= 96 x498) (x1466 (x137 (x389 x827)) (x137 (x389 (x310 (+ x827 32)))) (x137 (x389 (x310 (+ 64 x827)))) 0) (ite (>= 128 x498) (x319 (x137 (x389 x827)) (x137 (x389 (x310 (+ 32 x827)))) (x137 (x389 (x310 (+ x827 64)))) (x137 (x389 (x310 (+ x827 96)))) 0) (ite (<= x498 160) (x1162 (x137 (x389 x827)) (x137 (x389 (x310 (+ 32 x827)))) (x137 (x389 (x310 (+ x827 64)))) (x137 (x389 (x310 (+ 96 x827)))) (x137 (x389 (x310 (+ x827 128)))) 0) (ite (>= 192 x498) (x1520 (x137 (x389 x827)) (x137 (x389 (x310 (+ 32 x827)))) (x137 (x389 (x310 (+ 64 x827)))) (x137 (x389 (x310 (+ 96 x827)))) (x137 (x389 (x310 (+ 128 x827)))) (x137 (x389 (x310 (+ x827 160)))) 0) (ite (<= x498 224) (x900 (x137 (x389 x827)) (x137 (x389 (x310 (+ x827 32)))) (x137 (x389 (x310 (+ x827 64)))) (x137 (x389 (x310 (+ x827 96)))) (x137 (x389 (x310 (+ 128 x827)))) (x137 (x389 (x310 (+ 160 x827)))) (x137 (x389 (x310 (+ 192 x827)))) 0) (x137 x634))))))))) (<= 0 x261) (= x261 (x5 x197)) (<= x261 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< 0 x261) x1165)) (and (=> (and (not x1165) (and (= x1231 x1377) (<= x1377 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1377 0))) x901) (=> (and x1165 (and (= (> x601 0) x1202) (= x601 (x389 128)))) (and (=> x1202 x764) (=> (and (not x1202) (= x1498 0)) x762))))) x703)))) x917))
(assert (= (=> (and (or (and x1318 (= x555 (x310 (+ x1224 x891)))) (not x1318)) (= x1318 (< x1224 x271))) x164) x1443))
(assert (x908 x1334))
(assert (= x232 (or x445 x804)))
(assert (= 0 (x1310 (x310 (+ 64 x400)))))
(assert (x1366 (x637 (x310 (+ x400 64)))))
(assert (=> (<= (x1044 x827) 10000) (= (x1088 (x1044 x827)) (x137 (x1044 x827)))))
(assert (= 0 (x1310 (+ (- x1043 x1522) x567))))
(assert (and (x679 x191 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= x191 (+ (* 1461501637330902918203684832716283019655932542976 (x174 x191 1461501637330902918203684832716283019655932542976)) (x873 x191 1461501637330902918203684832716283019655932542976)))) (x801 x191 1461501637330902918203684832716283019655932542976) (x982 x191 1461501637330902918203684832716283019655932542976)))
(assert (= (and (not x1036) x431) x832))
(assert (= (or x619 x1107) x1342))
(assert (=> (<= (x1101 (x310 (+ 192 x827))) 10000) (= (x1088 (x1101 (x310 (+ 192 x827)))) (x137 (x1101 (x310 (+ x827 192)))))))
(assert (x1419 x952))
(assert (= (x1238 (x310 (+ x1522 32))) 0))
(assert (x1419 x1299))
(assert (= 0 (x665 (- (+ (x310 (+ 68 x1522)) (- (+ 68 (- (+ (- (+ (- (+ (- x353 x1194) x1198) 160) 68) 68) (x310 (+ x1194 68))) 160)) 68)) x1302))))
(assert (x1419 x51))
(assert (= x1338 (and (not x1218) x294)))
(assert (x1366 (x1044 (x310 (+ x827 96)))))
(assert (x1419 x530))
(assert (x1388 x216))
(assert (x1366 (x538 x400)))
(assert (= 0 (x665 (- (+ (x310 (+ x1522 68)) (- (+ (- (+ 96 (x310 (+ x1194 68))) 160) 68) 68)) x1302))))
(assert (= x997 (and (not x768) x1331)))
(assert (= (x19 (x137 (x1101 (x310 (+ x827 128))))) (x1101 (x310 (+ 128 x827)))))
(assert (x1419 x1223))
(assert (= x453 (or x1317 x840 x723 x1491 x949)))
(assert (x1419 x1054))
(assert (x1419 x326))
(assert (= (x19 (x137 (x1093 x827))) (x1093 x827)))
(assert (= (x19 (x137 x490)) x490))
(assert (= (x28 (+ x1198 (- x741 x1194))) 0))
(assert (x1419 x135))
(assert (x1419 x1173))
(assert (= 0 (x665 (- (+ (x310 (+ x1522 68)) (- (+ (- (+ (- (x310 (+ 128 x114)) x1522) x567) 160) 68) 68)) x1302))))
(assert (= x742 (=> (and (= (not (> x1237 32)) x482) (= x69 x827) (= (x1044 160) x738)) (and x482 (=> (= 32 x569) x318)))))
(assert (x1366 (x866 352)))
(assert (= x1467 (or x407 x362 x375 x86 x1020)))
(assert (= (or x1346 x704) x33))
(assert (x1419 x1392))
(assert (= x1122 (=> (and (= x1268 (x1101 160)) (= x1086 (not (> x977 32))) (= x827 x1518)) (and (=> (= 32 x505) x1484) x1086))))
(assert (=> (>= 10000 (x866 256)) (= (x137 (x866 256)) (x1088 (x866 256)))))
(assert (x1419 x936))
(assert (= (x19 (x137 (x1093 (x310 (+ x827 64))))) (x1093 (x310 (+ x827 64)))))
(assert (x1419 x958))
(assert (x1419 x3))
(assert (= (x1088 1617649167) (x137 1617649167)))
(assert (x1419 x270))
(assert (=> (<= (x385 (x310 (+ x114 32))) 10000) (= (x1088 (x385 (x310 (+ x114 32)))) (x137 (x385 (x310 (+ x114 32)))))))
(assert (= 0 (x28 (+ x1198 (- (+ (- (x310 (+ x114 32)) x1522) x567) x1194)))))
(assert (x1366 (x696 x697)))
(assert (= x1375 (and x1318 x1397)))
(assert (= (x19 (x137 (x389 (x310 (+ x827 192))))) (x389 (x310 (+ x827 192)))))
(assert (x1366 (x123 x827)))
(assert (= (or (and (not x361) x494) x576) x492))
(assert (x1419 x320))
(assert (= 0 (x1238 (+ (- (+ (- (x310 (+ x400 128)) 160) 68) 68) (x310 (+ 68 x1522))))))
(assert (= 0 (x1310 (+ (- (+ 68 (- (+ 32 (x310 (+ x697 68))) 160)) 68) (x310 (+ 68 x1194))))))
(assert (= (=> (and (and (= x1039 (x310 (+ x530 31))) (= (= x735 x710) x719) (= x513 (x310 (+ x279 x711))) (= (x928 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1039) x279) (= (x810 (- x513 x697)) x1112)) (and (and (= x1112 x1031) (= x527 (= (x188 36) x530)) (= 86587964985574495804695408441416066048332504164997306664935388907017567469568 x608) (= x326 (x810 (- x1031 4))) (not (< x1376 1882194962)) (not (> 3109197603 x1376)) (< 0 x681) (<= 68 x1031) (not (< x1031 4)) x527 (= (x1429 (x137 x710)) x681) (not (< x1376 2710164492)) (= x1376 3211726123) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x326) true) (< x326 32)) (> x326 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1242) (not (= 3109197603 x1376))) x719)) (and (=> (and (not x1242) (= (and (< 67 x1031) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1031) true)) x1339)) (and (=> (not x1339) x1521) (=> (and x1339 (and (= (x1380 36) x1200) (= (> x1200 18446744073709551615) x954))) (and (=> x954 x1521) (=> (and (not x954) (and (= x1461 (x310 (+ x1200 31))) (= x253 (= (ite x231 1 0) 0)) (= x1306 (> 128 x432)) (= (x310 (+ x1234 32)) x582) (= x432 (x310 (+ 128 x1033))) (= (> x432 18446744073709551615) x956) (= x449 (x310 (+ 31 x582))) (= (or x1306 x956) x231) (= x1033 (x928 115792089237316195423570985008687907853269984665640564039457584007913129639904 x449)) (= x1234 (x928 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1461)))) (and (=> (not x253) x1521) (=> (and (and (= (x310 (+ x1200 68)) x1011) (= (> x1011 x1031) x686)) x253) (and (=> x686 x1521) (=> (not x686) x1260))))))))) (=> x1242 x1521))) x289))
(assert (x1419 x1344))
(assert (= (x1238 (+ (- (+ (- x567 160) 68) 68) (x310 (+ x1522 68)))) 0))
(assert (x1419 x92))
(assert (and (x679 x1039 32) (=> (< 0 32) (= x1039 (+ (* 32 (x174 x1039 32)) (x873 x1039 32)))) (x801 x1039 32) (x982 x1039 32)))
(assert (x1419 x649))
(assert (=> (<= (x1056 (x310 (+ 96 x827))) 10000) (= (x137 (x1056 (x310 (+ 96 x827)))) (x1088 (x1056 (x310 (+ x827 96)))))))
(assert (= 0 (x1238 (+ (x310 (+ x1522 68)) (- (+ 68 (- (+ (- (+ (- (+ (- (+ x567 (- x114 x1522)) x1194) x1198) 160) 68) 68) (x310 (+ x1194 68))) 160)) 68)))))
(assert (x1366 (x1044 (x310 (+ 64 x827)))))
(assert (x1419 x57))
(assert (= x689 (and x83 x1135)))
(assert (x1419 x417))
(assert (x1419 x84))
(assert (= (and x1413 x851) x362))
(assert (x1419 x284))
(assert (= 0 (x665 (- x1522 x1302))))
(assert (x1419 x1106))
(assert (x1419 x1295))
(assert (x989 x1232 x1231 x1106 x503))
(assert (x1366 (x106 (x310 (+ x827 96)))))
(assert (x1366 x1153))
(assert (= 0 (x1238 (+ (- (+ 68 (- (+ (- (+ 68 (- (+ x1198 (- x229 x1194)) 160)) 68) (x310 (+ x1194 68))) 160)) 68) (x310 (+ x1522 68))))))
(assert (= 0 (x1238 (+ (- (+ 68 (- (+ x567 (- x1295 x1522)) 160)) 68) (x310 (+ x1522 68))))))
(assert (x1419 x681))
(assert (x1366 (x158 (x310 (+ x827 64)))))
(assert (= (=> (and (= x75 (x810 (- x12 x827))) (= (<= x853 224) x1489) (= (x810 (- x75 32)) x853) (= (x310 (+ x827 x291)) x25) (= (x310 (+ 32 x25)) x12)) (and x1489 (=> (and (= x828 (ite (>= 32 x853) (x547 (x137 (x1101 x827)) 0) (ite (>= 64 x853) (x340 (x137 (x1101 x827)) (x137 (x1101 (x310 (+ x827 32)))) 0) (ite (<= x853 96) (x1466 (x137 (x1101 x827)) (x137 (x1101 (x310 (+ x827 32)))) (x137 (x1101 (x310 (+ 64 x827)))) 0) (ite (<= x853 128) (x319 (x137 (x1101 x827)) (x137 (x1101 (x310 (+ 32 x827)))) (x137 (x1101 (x310 (+ x827 64)))) (x137 (x1101 (x310 (+ x827 96)))) 0) (ite (>= 160 x853) (x1162 (x137 (x1101 x827)) (x137 (x1101 (x310 (+ x827 32)))) (x137 (x1101 (x310 (+ x827 64)))) (x137 (x1101 (x310 (+ 96 x827)))) (x137 (x1101 (x310 (+ x827 128)))) 0) (ite (<= x853 192) (x1520 (x137 (x1101 x827)) (x137 (x1101 (x310 (+ x827 32)))) (x137 (x1101 (x310 (+ 64 x827)))) (x137 (x1101 (x310 (+ x827 96)))) (x137 (x1101 (x310 (+ x827 128)))) (x137 (x1101 (x310 (+ 160 x827)))) 0) (ite (<= x853 224) (x900 (x137 (x1101 x827)) (x137 (x1101 (x310 (+ 32 x827)))) (x137 (x1101 (x310 (+ x827 64)))) (x137 (x1101 (x310 (+ 96 x827)))) (x137 (x1101 (x310 (+ x827 128)))) (x137 (x1101 (x310 (+ x827 160)))) (x137 (x1101 (x310 (+ x827 192)))) 0) (x137 x369))))))))) (= (<= x75 224) x543)) (and x543 (=> (and (= (x5 x1225) x1332) (= (ite (<= x75 32) (x547 (x137 (x1101 x827)) 0) (ite (>= 64 x75) (x340 (x137 (x1101 x827)) (x137 (x1101 (x310 (+ x827 32)))) 0) (ite (<= x75 96) (x1466 (x137 (x1101 x827)) (x137 (x1101 (x310 (+ x827 32)))) (x137 (x1101 (x310 (+ 64 x827)))) 0) (ite (>= 128 x75) (x319 (x137 (x1101 x827)) (x137 (x1101 (x310 (+ x827 32)))) (x137 (x1101 (x310 (+ 64 x827)))) (x137 (x1101 (x310 (+ 96 x827)))) 0) (ite (<= x75 160) (x1162 (x137 (x1101 x827)) (x137 (x1101 (x310 (+ 32 x827)))) (x137 (x1101 (x310 (+ x827 64)))) (x137 (x1101 (x310 (+ x827 96)))) (x137 (x1101 (x310 (+ 128 x827)))) 0) (ite (>= 192 x75) (x1520 (x137 (x1101 x827)) (x137 (x1101 (x310 (+ x827 32)))) (x137 (x1101 (x310 (+ x827 64)))) (x137 (x1101 (x310 (+ x827 96)))) (x137 (x1101 (x310 (+ 128 x827)))) (x137 (x1101 (x310 (+ 160 x827)))) 0) (ite (<= x75 224) (x900 (x137 (x1101 x827)) (x137 (x1101 (x310 (+ x827 32)))) (x137 (x1101 (x310 (+ x827 64)))) (x137 (x1101 (x310 (+ 96 x827)))) (x137 (x1101 (x310 (+ x827 128)))) (x137 (x1101 (x310 (+ 160 x827)))) (x137 (x1101 (x310 (+ x827 192)))) 0) (x137 x187)))))))) x1225) (= x1193 (> x1332 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1332) (>= x1332 0)) (and (=> (and (and (= x1377 x1106) (>= x1377 0) (<= x1377 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1193)) x74) (=> (and (and (= x573 (> x977 0)) (= x977 (x1101 128))) x1193) (and (=> x573 x1122) (=> (and (not x573) (= 0 x505)) x1484))))))))) x509))
(assert (= 3104404863 (x19 (x1088 3104404863))))
(assert (x406 x216))
(assert (=> (>= 10000 (x1056 (x310 (+ x827 192)))) (= (x1088 (x1056 (x310 (+ 192 x827)))) (x137 (x1056 (x310 (+ 192 x827)))))))
(assert (x1419 x1274))
(assert (=> (<= (x1101 (x310 (+ x827 160))) 10000) (= (x1088 (x1101 (x310 (+ x827 160)))) (x137 (x1101 (x310 (+ 160 x827)))))))
(assert (= (and x1326 x948) x1425))
(assert (= x576 (and x494 x361)))
(assert (= (x19 (x137 (x457 (x310 (+ 64 x114))))) (x457 (x310 (+ x114 64)))))
(assert (= (x1101 (x310 (+ x827 64))) (x19 (x137 (x1101 (x310 (+ 64 x827)))))))
(assert (x1419 x555))
(assert (x1366 (x385 (x310 (+ x114 128)))))
(assert (= x152 (and x1349 (not x1049))))
(assert (= x975 (or x94 x1019)))
(assert (x1419 x1389))
(assert (x1419 x1190))
(assert (= (x28 (+ x1198 (- x626 x1194))) 0))
(assert (x1419 x972))
(assert (x1366 (x696 (x310 (+ x697 32)))))
(assert (x1366 (x1273 (x310 (+ 192 x114)))))
(assert (= (x665 (- (x310 (+ 160 x1522)) x1302)) 0))
(assert (x1366 (x1044 (x310 (+ 32 x827)))))
(assert (x1419 x1517))
(assert (= 0 (x665 (- (+ (x310 (+ 68 x1522)) (- (+ (- x567 160) 68) 68)) x1302))))
(assert (= 0 (x1238 x1043)))
(assert (x406 x1252))
(assert (= (x1310 (+ (- (+ (- (+ (- (+ (- x1219 x1522) x567) x1194) x1198) 160) 68) 68) (x310 (+ x1194 68)))) 0))
(assert (=> (>= 10000 x634) (= (x1088 x634) (x137 x634))))
(assert (= (and x1261 x1140) x222))
(assert (= (and x542 (not x786)) x724))
(assert (x1419 x1522))
(assert (=> (>= 10000 (x1101 (x310 (+ x827 32)))) (= (x137 (x1101 (x310 (+ 32 x827)))) (x1088 (x1101 (x310 (+ 32 x827)))))))
(assert (x1419 x847))
(assert (= (x1056 (x310 (+ 192 x827))) (x19 (x137 (x1056 (x310 (+ x827 192)))))))
(assert (= (and (not x1427) x466) x1063))
(assert (x1419 x977))
(assert (=> (>= 10000 (x389 (x310 (+ x827 96)))) (= (x1088 (x389 (x310 (+ 96 x827)))) (x137 (x389 (x310 (+ x827 96)))))))
(assert (x1366 (x1056 (x310 (+ x827 160)))))
(assert (x1419 x235))
(assert (x1419 x843))
(assert (= (and x796 x47) x960))
(assert (=> (<= (x1044 (x310 (+ 192 x827))) 10000) (= (x1088 (x1044 (x310 (+ 192 x827)))) (x137 (x1044 (x310 (+ x827 192)))))))
(assert (= x1346 (and x902 x967)))
(assert (x1496 x1231 (- x1232 x1106)))
(assert (= (x259 256) 0))
(assert (= 0 (x665 (- (+ (x310 (+ x1522 68)) (- (+ 68 (- (+ (x310 (+ x1194 68)) (- (+ 68 (- (+ (- (+ x567 (- (x310 (+ 160 x114)) x1522)) x1194) x1198) 160)) 68)) 160)) 68)) x1302))))
(assert (x1419 x488))
(assert (x1419 x25))
(assert (= x201 (or x260 x752)))
(assert (x1388 x36))
(assert (x1419 x1232))
(assert (= x196 (and x441 (not x325))))
(assert (= (x28 (+ 32 (x310 (+ x697 68)))) 0))
(assert (= x35 (and x655 x363)))
(assert (= (=> (and (or (not x8) (and (= x1512 (x310 (+ x827 x814))) x8)) (= x8 (> x648 x814))) x1241) x685))
(assert (x1366 x1130))
(assert (= (and x111 x453) x577))
(assert (x1419 x939))
(assert (= (x19 (x137 (x637 (x310 (+ 192 x400))))) (x637 (x310 (+ x400 192)))))
(assert (= (x19 (x137 (x1418 (x310 (+ 96 x827))))) (x1418 (x310 (+ 96 x827)))))
(assert (x1419 x1217))
(assert (= (x28 (+ x1198 (- (+ x567 (- (x310 (+ 64 x114)) x1522)) x1194))) 0))
(assert (= (x19 (x137 (x106 (x310 (+ x827 160))))) (x106 (x310 (+ x827 160)))))
(assert (= x799 (and x532 x301)))
(assert (x1419 x744))
(assert (x1419 x295))
(assert (=> (>= 10000 (x1273 (x310 (+ 192 x114)))) (= (x137 (x1273 (x310 (+ x114 192)))) (x1088 (x1273 (x310 (+ 192 x114)))))))
(assert (= (x123 (x310 (+ 32 x827))) (x19 (x137 (x123 (x310 (+ 32 x827)))))))
(assert (x1366 (x158 (x310 (+ 96 x827)))))
(assert (= (x19 (x137 x643)) x643))
(assert (x406 x170))
(assert (x1419 x1213))
(assert (x1419 x503))
(assert (= (=> (and (= (not (< 128 x246)) x76) (= x1337 (x257 256)) (= x141 (x310 (+ x400 96)))) (and x76 (=> (= 128 x600) x528))) x1447))
(assert (x1419 x250))
(assert (=> (>= 10000 (x457 (x310 (+ 32 x114)))) (= (x1088 (x457 (x310 (+ x114 32)))) (x137 (x457 (x310 (+ x114 32)))))))
(assert (= 0 (x1238 (x310 (+ 128 x114)))))
(assert (x1188 x1128))
(assert (= (x1093 (x310 (+ 192 x827))) (x19 (x137 (x1093 (x310 (+ 192 x827)))))))
(assert (x1388 x235))
(assert (x406 x1461))
(assert (x1366 (x389 (x310 (+ x827 160)))))
(assert (x1419 x541))
(assert (= (and (not x985) x274) x355))
(assert (= (x385 (x310 (+ x114 128))) (x19 (x137 (x385 (x310 (+ 128 x114)))))))
(assert (x1366 (x1418 (x310 (+ x827 64)))))
(assert (x1366 (x1273 (x310 (+ x114 128)))))
(assert (x1188 x186))
(assert (x1419 x1146))
(assert (= x906 (and (not x1318) x1397)))
(assert (=> (>= 10000 (x538 (x310 (+ 64 x400)))) (= (x1088 (x538 (x310 (+ x400 64)))) (x137 (x538 (x310 (+ x400 64)))))))
(assert (= 0 (x1238 (+ (- (+ (- (+ (- (+ 68 (- (+ x1198 (- x353 x1194)) 160)) 68) (x310 (+ 68 x1194))) 160) 68) 68) (x310 (+ x1522 68))))))
(assert (= x1216 (=> (and (= x1035 x1041) (= x1166 (x1182 160)) (= x765 (not (< 32 x813)))) (and (=> (= 32 x877) x1136) x765))))
(assert (= x1142 (and (not x480) x875)))
(assert (x1419 x853))
(assert (=> (>= 10000 (x746 (x310 (+ x1522 192)))) (= (x137 (x746 (x310 (+ 192 x1522)))) (x1088 (x746 (x310 (+ 192 x1522)))))))
(assert (x1366 (x457 (x310 (+ x114 64)))))
(assert (x1366 x1061))
(assert (=> (<= x176 10000) (= (x1088 x176) (x137 x176))))
(assert (= x294 (or x940 x924 x1185 x1523 x997)))
(assert (x908 x1039))
(check-sat)
(exit)
