(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x364 0)) (((x795 (x567 x364) (x63 x364) (x1608 Int)) (x701 (x1688 Int)) (x890 (x381 x364) (x2683 Int)))))
(declare-fun x1405 () Bool)
(declare-fun x1144 () Int)
(declare-fun x2736 () Bool)
(declare-fun x2193 () Bool)
(declare-fun x2259 () Int)
(declare-fun x1683 () Bool)
(declare-fun x2101 () Bool)
(declare-fun x2639 () Int)
(declare-fun x830 () Bool)
(declare-fun x2016 () Bool)
(declare-fun x1147 () Bool)
(declare-fun x2715 () Int)
(declare-fun x2562 () Bool)
(declare-fun x780 () Int)
(declare-fun x1807 () Int)
(declare-fun x297 () Bool)
(declare-fun x1774 () Bool)
(declare-fun x1510 () Bool)
(declare-fun x1552 () Int)
(declare-fun x1786 () Int)
(declare-fun x2135 () Bool)
(declare-fun x1023 () x364)
(declare-fun x992 () Bool)
(declare-fun x2047 () Int)
(declare-fun x1412 () Bool)
(declare-fun x696 () x364)
(declare-fun x1478 () Bool)
(declare-fun x1543 () Bool)
(declare-fun x564 () Bool)
(declare-fun x455 () Int)
(declare-fun x2583 () Bool)
(declare-fun x1876 () Int)
(declare-fun x1444 () Bool)
(declare-fun x1127 () Bool)
(declare-fun x1522 () Bool)
(declare-fun x144 () Int)
(declare-fun x2468 () Bool)
(declare-fun x2502 () Int)
(declare-fun x1681 () x364)
(declare-fun x2160 () Bool)
(declare-fun x2531 () Int)
(declare-fun x237 () Bool)
(declare-fun x233 () Bool)
(declare-fun x1972 () Int)
(declare-fun x1558 () Bool)
(declare-fun x1966 () Bool)
(declare-fun x2087 () Int)
(declare-fun x1627 () Int)
(declare-fun x14 () Bool)
(declare-fun x1849 () Int)
(declare-fun x1482 () Int)
(declare-fun x2596 () Int)
(declare-fun x2527 () Bool)
(declare-fun x1959 () Int)
(declare-fun x2405 () Bool)
(declare-fun x119 () Bool)
(declare-fun x1874 () x364)
(declare-fun x1374 () Int)
(declare-fun x62 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x2373 () Bool)
(declare-fun x2754 () Int)
(declare-fun x1277 () x364)
(declare-fun x1766 () Bool)
(declare-fun x843 () Bool)
(declare-fun x2757 () Bool)
(declare-fun x720 () Int)
(declare-fun x2357 () Bool)
(declare-fun x1814 () Bool)
(declare-fun x108 () Int)
(declare-fun x1267 () Bool)
(declare-fun x2107 () Int)
(declare-fun x2220 () Bool)
(declare-fun x2477 () Int)
(declare-fun x470 () Bool)
(declare-fun x66 () Int)
(declare-fun x1930 () Int)
(declare-fun x2513 () Bool)
(declare-fun x495 () Bool)
(declare-fun x732 () Bool)
(declare-fun x251 () Int)
(declare-fun x1921 () Bool)
(declare-fun x2501 () x364)
(declare-fun x1914 () Bool)
(declare-fun x2600 () Bool)
(declare-fun x1484 () Int)
(declare-fun x2125 () Int)
(declare-fun x2534 () Bool)
(declare-fun x976 () Bool)
(declare-fun x1985 () x364)
(declare-fun x675 () Bool)
(declare-fun x294 () Bool)
(declare-fun x2573 () Bool)
(declare-fun x1691 () Bool)
(declare-fun x2770 () Bool)
(declare-fun x729 () Int)
(declare-fun x1559 () Bool)
(declare-fun x2118 () Bool)
(declare-fun x741 () Bool)
(declare-fun x135 () Int)
(declare-fun x746 () Int)
(declare-fun x276 () Int)
(declare-fun x2264 (Int) Int)
(declare-fun x1800 () Bool)
(declare-fun x428 () Bool)
(declare-fun x948 () Bool)
(declare-fun x453 () Int)
(declare-fun x2437 () Int)
(declare-fun x300 () Int)
(declare-fun x1736 () Bool)
(declare-fun x211 () Bool)
(declare-fun x2115 () Int)
(declare-fun x1532 () Int)
(declare-fun x798 () Int)
(declare-fun x387 () Bool)
(declare-fun x1944 () Bool)
(declare-fun x493 () Bool)
(declare-fun x435 () Bool)
(declare-fun x1971 () Int)
(declare-fun x987 () Bool)
(declare-fun x1409 () Int)
(declare-fun x805 () Int)
(declare-fun x2541 () x364)
(declare-fun x1821 () Int)
(declare-fun x1620 () Bool)
(declare-fun x2065 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x2514 () Bool)
(declare-fun x581 () Bool)
(declare-fun x669 () Int)
(declare-fun x225 () Int)
(declare-fun x986 () Int)
(declare-fun x2367 () Bool)
(declare-fun x1816 () Bool)
(declare-fun x659 () Int)
(declare-fun x1770 () Bool)
(declare-fun x2304 () Int)
(declare-fun x131 () Bool)
(declare-fun x2299 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x201 () Bool)
(declare-fun x2276 () Bool)
(declare-fun x2214 () Int)
(declare-fun x1618 () Int)
(declare-fun x743 () Bool)
(declare-fun x98 () Bool)
(declare-fun x1438 () Bool)
(declare-fun x2660 () Bool)
(declare-fun x2642 () Int)
(declare-fun x1875 () Bool)
(declare-fun x171 () Int)
(declare-fun x2678 () Bool)
(declare-fun x240 () Bool)
(declare-fun x2308 () Bool)
(declare-fun x424 () Int)
(declare-fun x403 () Int)
(declare-fun x1847 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x94 () Int)
(declare-fun x903 () Bool)
(declare-fun x2537 () Int)
(declare-fun x138 () Int)
(declare-fun x1952 () Bool)
(declare-fun x629 () Bool)
(declare-fun x2610 () Bool)
(declare-fun x1329 () Bool)
(declare-fun x871 () Int)
(declare-fun x2302 () Int)
(declare-fun x1189 () Bool)
(declare-fun x1227 () x364)
(declare-fun x1486 () Bool)
(declare-fun x390 () Bool)
(declare-fun x1264 () Bool)
(declare-fun x588 () Int)
(declare-fun x561 () Bool)
(declare-fun x1161 () Bool)
(declare-fun x1892 () Bool)
(declare-fun x655 () x364)
(declare-fun x934 () Bool)
(declare-fun x1948 () Bool)
(declare-fun x1222 () Int)
(declare-fun x1322 () Int)
(declare-fun x443 () Int)
(declare-fun x1634 () Int)
(declare-fun x1667 () x364)
(declare-fun x2612 () Int)
(declare-fun x723 () Int)
(declare-fun x1214 (Int) Int)
(declare-fun x2662 () Bool)
(declare-fun x665 () Bool)
(declare-fun x636 () Bool)
(declare-fun x558 () Bool)
(declare-fun x2392 () Int)
(declare-fun x639 () Bool)
(declare-fun x674 () x364)
(declare-fun x617 () Bool)
(declare-fun x1375 () Bool)
(declare-fun x1298 () Int)
(declare-fun x597 () Bool)
(declare-fun x2148 () Int)
(declare-fun x1253 () Bool)
(declare-fun x1864 () Bool)
(declare-fun x1867 () Int)
(declare-fun x2518 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x2491 () Bool)
(declare-fun x1297 () Bool)
(declare-fun x2620 () Int)
(declare-fun x2238 () Int)
(declare-fun x266 () Bool)
(declare-fun x2449 () Bool)
(declare-fun x1917 () Bool)
(declare-fun x2748 () Int)
(declare-fun x1725 () Int)
(declare-fun x2717 () Int)
(declare-fun x750 () Bool)
(declare-fun x542 () Int)
(declare-fun x1283 () Bool)
(declare-fun x2494 () Int)
(declare-fun x2211 () Int)
(declare-fun x1562 () Int)
(declare-fun x1979 () Int)
(declare-fun x2262 () Int)
(declare-fun x2441 () Int)
(declare-fun x944 () x364)
(declare-fun x1883 () x364)
(declare-fun x1934 () Bool)
(declare-fun x2663 () Bool)
(declare-fun x1572 () Bool)
(declare-fun x2024 () Int)
(declare-fun x2121 () Int)
(declare-fun x721 () Bool)
(declare-fun x940 () Bool)
(declare-fun x61 () x364)
(declare-fun x647 () Bool)
(declare-fun x2251 () Bool)
(declare-fun x322 () Bool)
(declare-fun x2004 () Bool)
(declare-fun x30 () Int)
(declare-fun x953 () x364)
(declare-fun x212 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x313 () Bool)
(declare-fun x1071 () Int)
(declare-fun x1936 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x724 () Int)
(declare-fun x2397 () Bool)
(declare-fun x1846 () Int)
(declare-fun x1655 () x364)
(declare-fun x2318 () Int)
(declare-fun x2455 () Int)
(declare-fun x1687 () Bool)
(declare-fun x123 () Bool)
(declare-fun x1506 () Int)
(declare-fun x96 () x364)
(declare-fun x2710 () Bool)
(declare-fun x1757 () Int)
(declare-fun x618 () Bool)
(declare-fun x1656 () Int)
(declare-fun x157 () Bool)
(declare-fun x2667 () Bool)
(declare-fun x1252 () Int)
(declare-fun x677 () Int)
(declare-fun x2236 () Bool)
(declare-fun x702 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x1670 () Bool)
(declare-fun x323 () Int)
(declare-fun x1583 () x364)
(declare-fun x1177 () Bool)
(declare-fun x926 () Bool)
(declare-fun x1396 () Bool)
(declare-fun x2094 () Bool)
(declare-fun x361 () Bool)
(declare-fun x2069 () Int)
(declare-fun x2164 (Int) Int)
(declare-fun x1044 () Int)
(declare-fun x1196 () Int)
(declare-fun x1090 () Bool)
(declare-fun x1649 () Int)
(declare-fun x1413 () Bool)
(declare-fun x605 () Bool)
(declare-fun x1664 () Bool)
(declare-fun x792 () Int)
(declare-fun x2593 () Bool)
(declare-fun x1537 () Bool)
(declare-fun x2048 () Bool)
(declare-fun x855 () Int)
(declare-fun x35 () Int)
(declare-fun x2293 () Int)
(declare-fun x1705 () Int)
(declare-fun x1710 () Bool)
(declare-fun x1022 () Int)
(declare-fun x2749 () Bool)
(declare-fun x308 () Int)
(declare-fun x1541 () Bool)
(declare-fun x2102 () Int)
(declare-fun x1238 () Bool)
(declare-fun x2171 () Bool)
(declare-fun x1962 () Bool)
(declare-fun x573 () Bool)
(declare-fun x1551 () x364)
(declare-fun x1199 () Bool)
(declare-fun x2418 () Bool)
(declare-fun x1123 () Bool)
(declare-fun x2652 () Bool)
(declare-fun x2703 () Int)
(declare-fun x1902 () Int)
(declare-fun x1287 () x364)
(declare-fun x2036 () Bool)
(declare-fun x80 () Int)
(declare-fun x132 () Int)
(declare-fun x642 () Int)
(declare-fun x1207 () Int)
(declare-fun x650 () Bool)
(declare-fun x285 () Int)
(declare-fun x1403 () Bool)
(declare-fun x1540 () Int)
(declare-fun x54 () Bool)
(declare-fun x1795 () Int)
(declare-fun x3 () Int)
(declare-fun x828 () Bool)
(declare-fun x2677 () Bool)
(declare-fun x2009 () Bool)
(declare-fun x714 () Int)
(declare-fun x1185 () Bool)
(declare-fun x2540 () Bool)
(declare-fun x1554 () Int)
(declare-fun x1584 () Bool)
(declare-fun x813 () Bool)
(declare-fun x2235 () Int)
(declare-fun x2257 () Int)
(declare-fun x2137 () Int)
(declare-fun x546 () Bool)
(declare-fun x902 () Bool)
(declare-fun x218 (Int) Int)
(declare-fun x425 () Int)
(declare-fun x1248 () Int)
(declare-fun x1721 () Bool)
(declare-fun x2498 () Bool)
(declare-fun x25 () Int)
(declare-fun x2216 () Bool)
(declare-fun x1621 () Bool)
(declare-fun x2438 () Int)
(declare-fun x15 () Bool)
(declare-fun x147 () Int)
(declare-fun x228 () Bool)
(declare-fun x1628 () Int)
(declare-fun x373 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x2745 () Bool)
(declare-fun x459 () Bool)
(declare-fun x2589 () Int)
(declare-fun x2218 () Bool)
(declare-fun x671 () Bool)
(declare-fun x172 () Bool)
(declare-fun x1650 () Int)
(declare-fun x472 () Int)
(declare-fun x1372 () Bool)
(declare-fun x2161 () Bool)
(declare-fun x1385 () Bool)
(declare-fun x1989 () Int)
(declare-fun x1231 () Bool)
(declare-fun x2350 () Bool)
(declare-fun x1415 () Bool)
(declare-fun x1170 () Int)
(declare-fun x1676 () Int)
(declare-fun x1718 () Bool)
(declare-fun x910 () Bool)
(declare-fun x2762 () Bool)
(declare-fun x1361 () Bool)
(declare-fun x2714 () Bool)
(declare-fun x2291 () Int)
(declare-fun x1455 () Bool)
(declare-fun x1991 () x364)
(declare-fun x2685 () Int)
(declare-fun x1399 () Bool)
(declare-fun x1775 () x364)
(declare-fun x137 () Bool)
(declare-fun x1496 () Int)
(declare-fun x730 () Bool)
(declare-fun x1828 () Int)
(declare-fun x268 () Bool)
(declare-fun x2484 () Bool)
(declare-fun x1346 () Bool)
(declare-fun x1852 () Int)
(declare-fun x1975 () Bool)
(declare-fun x607 () Bool)
(declare-fun x2767 () Bool)
(declare-fun x1205 () Bool)
(declare-fun x586 () Int)
(declare-fun x134 () Int)
(declare-fun x1093 () Bool)
(declare-fun x91 () Bool)
(declare-fun x1001 () Int)
(declare-fun x766 () Bool)
(declare-fun x2436 () Int)
(declare-fun x1481 () Bool)
(declare-fun x562 () x364)
(declare-fun x838 () Bool)
(declare-fun x2196 () Int)
(declare-fun x2389 () Int)
(declare-fun x169 () Int)
(declare-fun x1098 () Bool)
(declare-fun x740 () Int)
(declare-fun x1159 () Bool)
(declare-fun x582 () Bool)
(declare-fun x2588 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x891 () Int)
(declare-fun x420 () Bool)
(declare-fun x512 () Bool)
(declare-fun x1973 () Int)
(declare-fun x1756 () Bool)
(declare-fun x1081 () Bool)
(declare-fun x1360 () Bool)
(declare-fun x302 () Bool)
(declare-fun x246 () Int)
(declare-fun x1716 () Bool)
(declare-fun x419 () Int)
(declare-fun x1790 () Bool)
(declare-fun x1567 () Int)
(declare-fun x1485 () Int)
(declare-fun x737 () Bool)
(declare-fun x1895 () Bool)
(declare-fun x2420 (Int) Int)
(declare-fun x2671 () Bool)
(declare-fun x1801 () Int)
(declare-fun x1293 () Int)
(declare-fun x1707 () Int)
(declare-fun x2091 (x364) Int)
(declare-fun x2681 () Bool)
(declare-fun x2694 () Bool)
(declare-fun x2727 () Bool)
(declare-fun x2120 () Int)
(declare-fun x243 () Bool)
(declare-fun x848 () x364)
(declare-fun x637 () Int)
(declare-fun x820 () Int)
(declare-fun x2466 () Int)
(declare-fun x498 () Int)
(declare-fun x110 () Int)
(declare-fun x1048 () Bool)
(declare-fun x769 () Bool)
(declare-fun x1629 () Int)
(declare-fun x852 () Bool)
(declare-fun x1896 () Int)
(declare-fun x368 () x364)
(declare-fun x1247 () Bool)
(declare-fun x1201 () Int)
(declare-fun x1272 () Bool)
(declare-fun x1182 () Int)
(declare-fun x140 () Bool)
(declare-fun x1208 () Int)
(declare-fun x2546 () Int)
(declare-fun x1088 () Bool)
(declare-fun x2213 () Bool)
(declare-fun x1381 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x2189 () Bool)
(declare-fun x166 () Bool)
(declare-fun x2566 () Bool)
(declare-fun x70 () Bool)
(declare-fun x460 () Bool)
(declare-fun x129 () Int)
(declare-fun x2123 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x600 () Int)
(declare-fun x2644 () Int)
(declare-fun x1977 () Int)
(declare-fun x2763 () Bool)
(declare-fun x1274 () Bool)
(declare-fun x2038 () x364)
(declare-fun x984 () Bool)
(declare-fun x2007 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x235 () Int)
(declare-fun x2323 () Int)
(declare-fun x1764 () Int)
(declare-fun x2768 () Bool)
(declare-fun x924 () Int)
(declare-fun x292 () Int)
(declare-fun x1473 () Int)
(declare-fun x2332 () Int)
(declare-fun x245 () Bool)
(declare-fun x59 () Bool)
(declare-fun x772 () Int)
(declare-fun x433 () x364)
(declare-fun x1068 () x364)
(declare-fun x1091 () Bool)
(declare-fun x911 () x364)
(declare-fun x2184 () Int)
(declare-fun x209 () Bool)
(declare-fun x241 () Bool)
(declare-fun x2224 () x364)
(declare-fun x1701 () Bool)
(declare-fun x1740 () Bool)
(declare-fun x64 () Bool)
(declare-fun x120 () Bool)
(declare-fun x1765 () Int)
(declare-fun x1744 () Int)
(declare-fun x1407 () Bool)
(declare-fun x273 () Bool)
(declare-fun x441 () Bool)
(declare-fun x2363 () Int)
(declare-fun x2374 () Int)
(declare-fun x883 () Int)
(declare-fun x173 () Bool)
(declare-fun x168 () Bool)
(declare-fun x2618 () Int)
(declare-fun x875 () Bool)
(declare-fun x47 () Int)
(declare-fun x466 () Bool)
(declare-fun x34 () Bool)
(declare-fun x29 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x2210 () Bool)
(declare-fun x2549 () Bool)
(declare-fun x1553 () Int)
(declare-fun x591 () Bool)
(declare-fun x287 () Bool)
(declare-fun x192 () Int)
(declare-fun x1311 (Int) Int)
(declare-fun x2651 () Bool)
(declare-fun x1879 () Bool)
(declare-fun x913 () x364)
(declare-fun x1961 () Int)
(declare-fun x829 () Bool)
(declare-fun x1851 () Bool)
(declare-fun x53 () Bool)
(declare-fun x2068 () Bool)
(declare-fun x1824 () Int)
(declare-fun x1609 () Bool)
(declare-fun x708 () Int)
(declare-fun x1150 () Bool)
(declare-fun x2056 () Int)
(declare-fun x283 () x364)
(declare-fun x2338 () Bool)
(declare-fun x2371 () Int)
(declare-fun x2411 () Bool)
(declare-fun x1215 () Bool)
(declare-fun x744 () Bool)
(declare-fun x2402 () Bool)
(declare-fun x928 () Int)
(declare-fun x1499 () Int)
(declare-fun x609 () Bool)
(declare-fun x1797 () Bool)
(declare-fun x1738 () Bool)
(declare-fun x727 () Int)
(declare-fun x38 () x364)
(declare-fun x2594 () Int)
(declare-fun x2582 () Bool)
(declare-fun x1344 () Int)
(declare-fun x2648 () Bool)
(declare-fun x929 () Int)
(declare-fun x205 () Int)
(declare-fun x484 () Int)
(declare-fun x2412 () Bool)
(declare-fun x1137 () Bool)
(declare-fun x265 () Int)
(declare-fun x1878 () Int)
(declare-fun x502 () Int)
(declare-fun x866 () Int)
(declare-fun x2759 () Int)
(declare-fun x2602 () Bool)
(declare-fun x312 () Bool)
(declare-fun x1156 () Int)
(declare-fun x1244 () Bool)
(declare-fun x2587 () x364)
(declare-fun x1363 () Bool)
(declare-fun x422 () Int)
(declare-fun x610 () x364)
(declare-fun x12 () Bool)
(declare-fun x469 () x364)
(declare-fun x2506 () Bool)
(declare-fun x291 () Int)
(declare-fun x1474 () Int)
(declare-fun x602 () Bool)
(declare-fun x1426 () Bool)
(declare-fun x2379 () Bool)
(declare-fun x2159 () Int)
(declare-fun x1784 () Bool)
(declare-fun x1503 (Int) Int)
(declare-fun x2608 () Int)
(declare-fun x340 () Int)
(declare-fun x742 () Int)
(declare-fun x130 () Int)
(declare-fun x2738 () Bool)
(declare-fun x2647 () Int)
(declare-fun x569 () x364)
(declare-fun x259 () Bool)
(declare-fun x603 () Int)
(declare-fun x921 () Int)
(declare-fun x2695 () x364)
(declare-fun x398 () x364)
(declare-fun x950 () Int)
(declare-fun x1336 () Int)
(declare-fun x1130 () Int)
(declare-fun x2084 () Int)
(declare-fun x514 () Bool)
(declare-fun x165 () Int)
(declare-fun x2233 () Bool)
(declare-fun x178 () Bool)
(declare-fun x2188 () Bool)
(declare-fun x604 () Int)
(declare-fun x2603 () Int)
(declare-fun x1112 () Bool)
(declare-fun x2141 () Bool)
(declare-fun x1164 () Int)
(declare-fun x1841 () Bool)
(declare-fun x489 () Int)
(declare-fun x1742 () Bool)
(declare-fun x1282 () Bool)
(declare-fun x895 () x364)
(declare-fun x176 () Bool)
(declare-fun x1014 () x364)
(declare-fun x2326 () Bool)
(declare-fun x2112 () Int)
(declare-fun x2177 () Int)
(declare-fun x1595 () Bool)
(declare-fun x1671 () Int)
(declare-fun x33 () Int)
(declare-fun x224 () Bool)
(declare-fun x39 () Bool)
(declare-fun x1192 () Int)
(declare-fun x540 () x364)
(declare-fun x1121 () Int)
(declare-fun x1072 () Bool)
(declare-fun x295 () Bool)
(declare-fun x2617 () Bool)
(declare-fun x667 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x1563 () Bool)
(declare-fun x329 (x364) Int)
(declare-fun x1061 () Bool)
(declare-fun x2261 () Int)
(declare-fun x1450 () Bool)
(declare-fun x2726 () Bool)
(declare-fun x223 () Bool)
(declare-fun x2480 () Bool)
(declare-fun x1759 () Bool)
(declare-fun x2454 () Int)
(declare-fun x1406 () Bool)
(declare-fun x1777 () Bool)
(declare-fun x625 () Int)
(declare-fun x1461 () Bool)
(declare-fun x2028 () Bool)
(declare-fun x2563 () Bool)
(declare-fun x2237 () Int)
(declare-fun x2267 () Int)
(declare-fun x2444 () x364)
(declare-fun x859 () Int)
(declare-fun x1809 () Int)
(declare-fun x1011 () Bool)
(declare-fun x1630 () Bool)
(declare-fun x2097 () Int)
(declare-fun x1661 () Int)
(declare-fun x2321 () x364)
(declare-fun x1733 () Bool)
(declare-fun x105 () Bool)
(declare-fun x799 () Int)
(declare-fun x1459 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x1752 () Bool)
(declare-fun x962 () Int)
(declare-fun x531 () Int)
(declare-fun x92 (x364) Int)
(declare-fun x1653 () Bool)
(declare-fun x773 () Bool)
(declare-fun x699 () Int)
(declare-fun x2707 () Bool)
(declare-fun x2503 () Bool)
(declare-fun x1931 () Bool)
(declare-fun x1446 () Int)
(declare-fun x1811 () x364)
(declare-fun x614 () Bool)
(declare-fun x2755 () Bool)
(declare-fun x1493 () Int)
(declare-fun x55 () Int)
(declare-fun x854 () x364)
(declare-fun x1443 () x364)
(declare-fun x2297 () Int)
(declare-fun x31 () Int)
(declare-fun x1145 () Int)
(declare-fun x1945 () Bool)
(declare-fun x619 () Int)
(declare-fun x1697 () Int)
(declare-fun x2228 () Bool)
(declare-fun x1772 () Int)
(declare-fun x1243 () Bool)
(declare-fun x117 () Int)
(declare-fun x2327 () Int)
(declare-fun x2020 () Int)
(declare-fun x1306 () Int)
(declare-fun x695 () x364)
(declare-fun x1695 () Bool)
(declare-fun x45 () Bool)
(declare-fun x2388 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x1509 () Bool)
(declare-fun x36 () x364)
(declare-fun x1007 () x364)
(declare-fun x945 () Int)
(declare-fun x1840 () Bool)
(declare-fun x1833 () Bool)
(declare-fun x444 () Bool)
(declare-fun x1517 () Int)
(declare-fun x1822 () Int)
(declare-fun x1651 () Bool)
(declare-fun x1237 () Int)
(declare-fun x1089 () Int)
(declare-fun x762 () Int)
(declare-fun x386 () Int)
(declare-fun x2623 () x364)
(declare-fun x2625 () Bool)
(declare-fun x2568 () Bool)
(declare-fun x439 () Int)
(declare-fun x1946 () Bool)
(declare-fun x2679 () Int)
(declare-fun x832 () Bool)
(declare-fun x2519 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x342 () Bool)
(declare-fun x1794 () Bool)
(declare-fun x154 () x364)
(declare-fun x1648 () Int)
(declare-fun x2669 () Int)
(declare-fun x1220 () x364)
(declare-fun x1487 () Int)
(declare-fun x382 () Int)
(declare-fun x653 () Int)
(declare-fun x559 () Bool)
(declare-fun x298 () Bool)
(declare-fun x2516 () Bool)
(declare-fun x1575 () Bool)
(declare-fun x957 () Int)
(declare-fun x2305 () Int)
(declare-fun x1004 () Bool)
(declare-fun x525 () Int)
(declare-fun x941 () Int)
(declare-fun x181 () Int)
(declare-fun x2688 () Int)
(declare-fun x1124 () Int)
(declare-fun x88 () Bool)
(declare-fun x550 () Bool)
(declare-fun x1870 () Int)
(declare-fun x89 () Int)
(declare-fun x2571 () Int)
(declare-fun x2157 () Int)
(declare-fun x1643 () Int)
(declare-fun x622 () Bool)
(declare-fun x412 () Int)
(declare-fun x1935 () Bool)
(declare-fun x1964 () Int)
(declare-fun x143 () Int)
(declare-fun x2386 () Int)
(declare-fun x333 () Bool)
(declare-fun x1724 () Int)
(declare-fun x2127 () Bool)
(declare-fun x633 () Bool)
(declare-fun x2351 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x238 () Bool)
(declare-fun x2410 () Int)
(declare-fun x1003 () Bool)
(declare-fun x2248 () Bool)
(declare-fun x956 () Bool)
(declare-fun x267 () x364)
(declare-fun x1402 () Int)
(declare-fun x2268 () Int)
(declare-fun x516 () Bool)
(declare-fun x416 () Int)
(declare-fun x694 () Bool)
(declare-fun x2039 () Bool)
(declare-fun x1674 () Bool)
(declare-fun x2062 () Bool)
(declare-fun x2434 () x364)
(declare-fun x85 () Int)
(declare-fun x2665 () Bool)
(declare-fun x1511 () Bool)
(declare-fun x931 () Int)
(declare-fun x858 () Bool)
(declare-fun x794 () x364)
(declare-fun x320 () x364)
(declare-fun x1720 () Int)
(declare-fun x160 () Int)
(declare-fun x2545 () Int)
(declare-fun x2253 () Bool)
(declare-fun x253 () x364)
(declare-fun x2474 () Bool)
(declare-fun x26 () Bool)
(declare-fun x2658 () Bool)
(declare-fun x1105 () Int)
(declare-fun x520 () Bool)
(declare-fun x17 () Int)
(declare-fun x2067 () Int)
(declare-fun x244 () Int)
(declare-fun x1102 () Bool)
(declare-fun x11 () Int)
(declare-fun x835 () Int)
(declare-fun x2655 () x364)
(declare-fun x1698 () Bool)
(declare-fun x509 (Int) Int)
(declare-fun x1171 () Int)
(declare-fun x1158 () Bool)
(declare-fun x2424 () Bool)
(declare-fun x2429 () Bool)
(declare-fun x760 () Int)
(declare-fun x76 () Int)
(declare-fun x1317 () Bool)
(declare-fun x2256 () x364)
(declare-fun x2469 () Bool)
(declare-fun x1893 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x334 () Int)
(declare-fun x1452 () Int)
(declare-fun x299 () Int)
(declare-fun x1181 () Int)
(declare-fun x751 () Int)
(declare-fun x2086 () Bool)
(declare-fun x1862 () Int)
(declare-fun x2290 () Bool)
(declare-fun x2413 () Bool)
(declare-fun x2198 () Bool)
(declare-fun x545 () Int)
(declare-fun x2205 () Int)
(declare-fun x1825 () Bool)
(declare-fun x1480 () Bool)
(declare-fun x183 () Bool)
(declare-fun x2495 (x364) Int)
(declare-fun x326 () Int)
(declare-fun x284 () Int)
(declare-fun x2687 () Int)
(declare-fun x703 () x364)
(declare-fun x2629 () Bool)
(declare-fun x2764 () Bool)
(declare-fun x1371 () Int)
(declare-fun x980 () Bool)
(declare-fun x2147 () Int)
(declare-fun x643 () Int)
(declare-fun x1659 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x939 () Bool)
(declare-fun x2399 () Bool)
(declare-fun x2254 () Bool)
(declare-fun x1729 () Int)
(declare-fun x1223 () Int)
(declare-fun x1658 () Int)
(declare-fun x1228 () Int)
(declare-fun x683 () Bool)
(declare-fun x436 () Bool)
(declare-fun x923 () Bool)
(declare-fun x2482 () Int)
(declare-fun x1999 () x364)
(declare-fun x2493 () Bool)
(declare-fun x2515 () Bool)
(declare-fun x1018 () x364)
(declare-fun x1717 () Bool)
(declare-fun x1898 () Bool)
(declare-fun x1424 () Int)
(declare-fun x1235 () Bool)
(declare-fun x530 () Int)
(declare-fun x1275 () Int)
(declare-fun x1708 () Bool)
(declare-fun x1680 () Int)
(declare-fun x2538 () Bool)
(declare-fun x1969 () Int)
(declare-fun x1448 () Bool)
(declare-fun x1114 () Int)
(declare-fun x555 () Int)
(declare-fun x118 () Bool)
(declare-fun x1947 () Int)
(declare-fun x1326 () Bool)
(declare-fun x1872 () Int)
(declare-fun x1119 () Int)
(declare-fun x2564 () Bool)
(declare-fun x1439 () Bool)
(declare-fun x2153 () Int)
(declare-fun x2158 (Int) Int)
(declare-fun x426 () Bool)
(declare-fun x624 () Bool)
(declare-fun x2722 () Bool)
(declare-fun x2598 () Int)
(declare-fun x595 () Bool)
(declare-fun x872 () Bool)
(declare-fun x1148 () Bool)
(declare-fun x679 (Int) Int)
(declare-fun x1666 () Int)
(declare-fun x1839 () Bool)
(declare-fun x2624 () Bool)
(declare-fun x2239 () Bool)
(declare-fun x2521 () Int)
(declare-fun x324 () Bool)
(declare-fun x2077 () Bool)
(declare-fun x406 () Bool)
(declare-fun x2174 () Bool)
(declare-fun x1479 () Int)
(declare-fun x1176 () Int)
(declare-fun x2580 () Bool)
(declare-fun x1308 () Bool)
(declare-fun x2400 () Bool)
(declare-fun x432 () Int)
(declare-fun x1938 () Int)
(declare-fun x735 () Int)
(declare-fun x670 () Bool)
(declare-fun x2691 () Bool)
(declare-fun x759 () Int)
(declare-fun x1803 () Bool)
(declare-fun x437 () Int)
(declare-fun x77 () Bool)
(declare-fun x2456 () Bool)
(declare-fun x252 () Int)
(declare-fun x1827 () Bool)
(declare-fun x905 () Int)
(declare-fun x1606 () Int)
(declare-fun x1393 () Bool)
(declare-fun x1428 () Bool)
(declare-fun x2619 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x1373 () Bool)
(declare-fun x204 () Bool)
(declare-fun x2508 () Int)
(declare-fun x1982 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x2345 () Bool)
(declare-fun x534 () Int)
(declare-fun x662 () x364)
(declare-fun x658 () Bool)
(declare-fun x488 () Int)
(declare-fun x845 () Int)
(declare-fun x1853 () Int)
(declare-fun x584 () Bool)
(declare-fun x801 () Int)
(declare-fun x523 () Bool)
(declare-fun x2212 () Bool)
(declare-fun x2697 () Bool)
(declare-fun x407 () Int)
(declare-fun x1458 () Int)
(declare-fun x652 () Int)
(declare-fun x1580 () Int)
(declare-fun x65 () Int)
(declare-fun x2409 () Int)
(declare-fun x1497 () Int)
(declare-fun x1335 () Int)
(declare-fun x1141 () Int)
(declare-fun x1860 () Bool)
(declare-fun x271 () Bool)
(declare-fun x823 () Bool)
(declare-fun x634 () Int)
(declare-fun x1696 () Bool)
(declare-fun x1603 () Int)
(declare-fun x1954 () Int)
(declare-fun x1186 () Int)
(declare-fun x2510 () Bool)
(declare-fun x1050 () Bool)
(declare-fun x1901 () Int)
(declare-fun x2014 () Int)
(declare-fun x524 () Bool)
(declare-fun x819 () Int)
(declare-fun x57 () Int)
(declare-fun x565 () Int)
(declare-fun x2555 () Bool)
(declare-fun x384 () Bool)
(declare-fun x1858 () Int)
(declare-fun x700 () Bool)
(declare-fun x1483 () Bool)
(declare-fun x41 () Int)
(declare-fun x1333 () Int)
(declare-fun x49 () Int)
(declare-fun x1953 () Int)
(declare-fun x1616 () Bool)
(declare-fun x2765 () Int)
(declare-fun x151 () Bool)
(declare-fun x316 () Int)
(declare-fun x553 () Bool)
(declare-fun x2145 () Int)
(declare-fun x486 () Int)
(declare-fun x1471 () Bool)
(declare-fun x2557 () x364)
(declare-fun x1837 () Bool)
(declare-fun x2178 () Int)
(declare-fun x2634 () x364)
(declare-fun x159 () Bool)
(declare-fun x822 () Bool)
(declare-fun x1926 () Int)
(declare-fun x506 () Bool)
(declare-fun x925 () Bool)
(declare-fun x1832 () x364)
(declare-fun x1538 () Int)
(declare-fun x388 () Int)
(declare-fun x2753 () Int)
(declare-fun x430 () Bool)
(declare-fun x1323 () Bool)
(declare-fun x2408 () Int)
(declare-fun x521 () Int)
(declare-fun x2320 () Bool)
(declare-fun x996 () Int)
(declare-fun x2119 () Int)
(declare-fun x1518 () Bool)
(declare-fun x1338 () Int)
(declare-fun x500 () Int)
(declare-fun x2439 () Bool)
(declare-fun x377 () Bool)
(declare-fun x736 () Int)
(declare-fun x539 () Bool)
(declare-fun x95 () Bool)
(declare-fun x370 () Bool)
(declare-fun x2225 () Bool)
(declare-fun x1073 () Int)
(declare-fun x1408 () Bool)
(declare-fun x1230 () Int)
(declare-fun x2071 () Int)
(declare-fun x860 () Int)
(declare-fun x1489 () Bool)
(declare-fun x649 () Bool)
(declare-fun x307 () Bool)
(declare-fun x2536 () Int)
(declare-fun x2361 () Int)
(declare-fun x1 () Int)
(declare-fun x2222 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x2195 () Int)
(declare-fun x1077 () Bool)
(declare-fun x1353 () Int)
(declare-fun x2044 () Int)
(declare-fun x2365 () Int)
(declare-fun x537 () Int)
(declare-fun x2451 () Bool)
(declare-fun x2737 () Int)
(declare-fun x42 () Int)
(declare-fun x1760 () Bool)
(declare-fun x1261 () Int)
(declare-fun x2130 () x364)
(declare-fun x867 () Bool)
(declare-fun x1662 () Bool)
(declare-fun x1334 () Int)
(declare-fun x1877 () Int)
(declare-fun x2043 () Bool)
(declare-fun x2258 () Bool)
(declare-fun x943 () Bool)
(declare-fun x970 () Bool)
(declare-fun x549 () Bool)
(declare-fun x227 () Int)
(declare-fun x1307 () Int)
(declare-fun x1791 () Bool)
(declare-fun x1908 () Int)
(declare-fun x1456 () Int)
(declare-fun x1796 () Bool)
(declare-fun x529 () Int)
(declare-fun x446 () Bool)
(declare-fun x951 () Int)
(declare-fun x1352 () Bool)
(declare-fun x473 () Bool)
(declare-fun x367 () Int)
(declare-fun x1163 () Bool)
(declare-fun x1327 () Int)
(declare-fun x1229 () Int)
(declare-fun x1958 () x364)
(declare-fun x1685 () Bool)
(declare-fun x2613 () Int)
(declare-fun x2705 () Int)
(declare-fun x2034 () x364)
(declare-fun x1916 () Int)
(declare-fun x1106 () Bool)
(declare-fun x345 () Bool)
(declare-fun x2244 () Int)
(declare-fun x2599 () Bool)
(declare-fun x1955 () Int)
(declare-fun x483 () Bool)
(declare-fun x1083 () Int)
(declare-fun x2052 () Int)
(declare-fun x917 () Int)
(declare-fun x990 () Bool)
(declare-fun x1198 () Int)
(declare-fun x1978 () Bool)
(declare-fun x2018 () Bool)
(declare-fun x2520 () Int)
(declare-fun x1909 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x719 () Int)
(declare-fun x222 () Int)
(declare-fun x1209 () x364)
(declare-fun x1397 () Int)
(declare-fun x413 () Int)
(declare-fun x1516 () Bool)
(declare-fun x846 () Int)
(declare-fun x1694 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x1823 () Bool)
(declare-fun x2042 () Int)
(declare-fun x2074 () Int)
(declare-fun x9 () Int)
(declare-fun x1610 () x364)
(declare-fun x46 () Bool)
(declare-fun x82 () Int)
(declare-fun x995 () Int)
(declare-fun x107 () Bool)
(declare-fun x2706 () Bool)
(declare-fun x2375 () Int)
(declare-fun x366 () Bool)
(declare-fun x2650 () Bool)
(declare-fun x804 () Int)
(declare-fun x2015 () x364)
(declare-fun x2307 () Bool)
(declare-fun x2586 () Int)
(declare-fun x949 () Bool)
(declare-fun x2567 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x141 () x364)
(declare-fun x2702 () Bool)
(declare-fun x552 () Bool)
(declare-fun x354 () Bool)
(declare-fun x2492 (Int Int) Int)
(declare-fun x378 () Bool)
(declare-fun x1183 () x364)
(declare-fun x327 () Int)
(declare-fun x1173 () Int)
(declare-fun x2242 () Bool)
(declare-fun x873 () Int)
(declare-fun x1002 () Bool)
(declare-fun x67 () Bool)
(declare-fun x239 () Bool)
(declare-fun x1646 () Int)
(declare-fun x2167 () Bool)
(declare-fun x1453 () Int)
(declare-fun x191 () Int)
(declare-fun x2425 () Bool)
(declare-fun x1806 () Int)
(declare-fun x991 () x364)
(declare-fun x2616 () Bool)
(declare-fun x2724 () Bool)
(declare-fun x270 () Bool)
(declare-fun x784 () Bool)
(declare-fun x2040 () Int)
(declare-fun x146 () x364)
(declare-fun x2443 () Int)
(declare-fun x543 () x364)
(declare-fun x2553 () Int)
(declare-fun x1057 () Int)
(declare-fun x876 () Int)
(declare-fun x556 () Int)
(declare-fun x1388 () Bool)
(declare-fun x955 () Bool)
(declare-fun x1600 () Bool)
(declare-fun x2033 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x1845 (x364) Int)
(declare-fun x641 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x2269 () Bool)
(declare-fun x1569 () Int)
(declare-fun x1996 () Int)
(declare-fun x1856 () Int)
(declare-fun x2646 () Bool)
(declare-fun x2232 (Int) Int)
(declare-fun x2185 () Bool)
(declare-fun x666 () Int)
(declare-fun x2360 () Bool)
(declare-fun x1693 () Int)
(declare-fun x126 () Int)
(declare-fun x717 () Int)
(declare-fun x1714 () Bool)
(declare-fun x1134 () Bool)
(declare-fun x1187 () Int)
(declare-fun x519 () Bool)
(declare-fun x139 () Int)
(declare-fun x175 () Bool)
(declare-fun x711 () Bool)
(declare-fun x2428 () Bool)
(declare-fun x18 () Bool)
(declare-fun x2560 () Bool)
(declare-fun x1206 () Int)
(declare-fun x1006 () Int)
(declare-fun x2427 () Bool)
(declare-fun x2739 () Bool)
(declare-fun x27 () Int)
(declare-fun x1754 () Bool)
(declare-fun x1866 () Bool)
(declare-fun x2372 () Bool)
(declare-fun x874 () Bool)
(declare-fun x1986 () Int)
(declare-fun x1842 () Int)
(declare-fun x1027 () Int)
(declare-fun x2231 () Bool)
(declare-fun x824 () Bool)
(declare-fun x414 () Int)
(declare-fun x954 () Int)
(declare-fun x887 () Bool)
(declare-fun x620 () Bool)
(declare-fun x2723 () Bool)
(declare-fun x749 () Bool)
(declare-fun x849 () Int)
(declare-fun x2523 () Int)
(declare-fun x1245 () Bool)
(declare-fun x2381 () Bool)
(declare-fun x1386 () Int)
(declare-fun x1593 () Bool)
(declare-fun x232 () Int)
(declare-fun x1889 () Bool)
(declare-fun x2419 () Int)
(declare-fun x1880 () Int)
(declare-fun x1585 () Bool)
(declare-fun x2010 () Bool)
(declare-fun x494 () Bool)
(declare-fun x1520 () Int)
(declare-fun x596 () Int)
(declare-fun x1010 () Bool)
(declare-fun x775 () Bool)
(declare-fun x376 () Int)
(declare-fun x310 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x2336 () Bool)
(declare-fun x355 () Bool)
(declare-fun x963 () Int)
(declare-fun x2607 () Bool)
(declare-fun x878 () Bool)
(declare-fun x869 () Bool)
(declare-fun x892 () Int)
(declare-fun x1925 () Bool)
(declare-fun x1411 () Int)
(declare-fun x1049 () Int)
(declare-fun x1619 () Int)
(declare-fun x1103 () Bool)
(declare-fun x631 () Int)
(declare-fun x814 () Bool)
(declare-fun x1900 () Int)
(declare-fun x1704 () Bool)
(declare-fun x2435 () Int)
(declare-fun x1743 () Int)
(declare-fun x217 () Bool)
(declare-fun x2154 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x1286 () Int)
(declare-fun x421 () Bool)
(declare-fun x1468 () Bool)
(declare-fun x2089 () x364)
(declare-fun x2500 () Bool)
(declare-fun x2621 (x364) Int)
(declare-fun x1087 () Int)
(declare-fun x1826 () Int)
(declare-fun x2085 () Int)
(declare-fun x68 () Bool)
(declare-fun x1160 () Bool)
(declare-fun x1355 () Int)
(declare-fun x1885 () Bool)
(declare-fun x764 () Int)
(declare-fun x2407 () Int)
(declare-fun x758 () Int)
(declare-fun x487 () Bool)
(declare-fun x1601 () Bool)
(declare-fun x613 () Int)
(declare-fun x761 () x364)
(declare-fun x2750 () Int)
(declare-fun x676 () Int)
(declare-fun x1615 () Bool)
(declare-fun x1421 () x364)
(declare-fun x2310 () Int)
(declare-fun x2051 () Bool)
(declare-fun x958 () Int)
(declare-fun x2377 () Bool)
(declare-fun x2194 () Bool)
(declare-fun x1995 () Bool)
(declare-fun x757 () Int)
(declare-fun x2099 () Int)
(declare-fun x2355 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x726 () Bool)
(declare-fun x2504 () Int)
(declare-fun x611 () Bool)
(declare-fun x2744 () Bool)
(declare-fun x1865 () x364)
(declare-fun x1143 () Bool)
(declare-fun x1126 () Bool)
(declare-fun x2649 () Int)
(declare-fun x1165 () Int)
(declare-fun x518 () Int)
(declare-fun x585 () Int)
(declare-fun x2050 () Int)
(declare-fun x1246 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x2006 () Bool)
(declare-fun x56 () Int)
(declare-fun x2076 () Int)
(declare-fun x20 () Bool)
(declare-fun x738 () Int)
(declare-fun x594 () Bool)
(declare-fun x599 (Int) x364)
(declare-fun x1313 () Bool)
(declare-fun x356 () Int)
(declare-fun x1507 () Bool)
(declare-fun x2756 () Int)
(declare-fun x415 () Int)
(declare-fun x2249 () Bool)
(declare-fun x681 () Int)
(declare-fun x2370 () Int)
(declare-fun x2280 () Int)
(declare-fun x815 () Bool)
(declare-fun x1692 () Int)
(declare-fun x1919 () Bool)
(declare-fun x2590 () Int)
(declare-fun x793 () Int)
(declare-fun x1513 () Int)
(declare-fun x1549 (x364) Int)
(declare-fun x1020 () Bool)
(declare-fun x885 () Bool)
(declare-fun x2632 () x364)
(declare-fun x1271 () Bool)
(declare-fun x803 () Int)
(declare-fun x1217 () Bool)
(declare-fun x1435 () Bool)
(declare-fun x2548 () Int)
(declare-fun x2083 () Bool)
(declare-fun x587 () Bool)
(declare-fun x938 () Bool)
(declare-fun x2309 () Int)
(declare-fun x32 () Bool)
(declare-fun x1194 () x364)
(declare-fun x2459 () Int)
(declare-fun x2316 () Int)
(declare-fun x99 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x1211 () Int)
(declare-fun x535 () Int)
(declare-fun x880 () x364)
(declare-fun x1570 () Int)
(declare-fun x1830 () Int)
(declare-fun x785 () Int)
(declare-fun x2344 () Bool)
(declare-fun x1113 () Bool)
(declare-fun x1041 () Bool)
(declare-fun x275 () Bool)
(declare-fun x2403 () Int)
(declare-fun x606 () Bool)
(declare-fun x478 () Int)
(declare-fun x481 () Bool)
(declare-fun x6 () Bool)
(declare-fun x2391 () Int)
(declare-fun x2250 () Int)
(declare-fun x1429 () Bool)
(declare-fun x1890 () Int)
(declare-fun x770 () x364)
(declare-fun x1654 () Bool)
(declare-fun x2354 () Bool)
(declare-fun x782 () Int)
(declare-fun x579 () Bool)
(declare-fun x1242 () Int)
(declare-fun x2565 () x364)
(declare-fun x2292 () Bool)
(declare-fun x2499 () Bool)
(declare-fun x2426 () Int)
(declare-fun x497 () Int)
(declare-fun x1174 () Bool)
(declare-fun x1581 () Int)
(declare-fun x1028 () Bool)
(declare-fun x983 () Int)
(declare-fun x2322 () Int)
(declare-fun x1669 () Bool)
(declare-fun x1414 () Bool)
(declare-fun x358 () x364)
(declare-fun x693 (Int) Int)
(declare-fun x715 () Int)
(declare-fun x58 () Bool)
(declare-fun x2282 () Int)
(declare-fun x2012 () Int)
(declare-fun x2348 () Int)
(declare-fun x51 () Bool)
(declare-fun x97 () Int)
(declare-fun x1377 () x364)
(declare-fun x1939 () Bool)
(declare-fun x2453 () Bool)
(declare-fun x69 () Int)
(declare-fun x1734 () Int)
(declare-fun x1167 () Bool)
(declare-fun x2657 () Bool)
(declare-fun x19 () Int)
(declare-fun x351 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x1950 () Bool)
(declare-fun x1347 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x663 () Int)
(declare-fun x1258 () Bool)
(declare-fun x2151 () Bool)
(declare-fun x1378 () Int)
(declare-fun x2273 () Bool)
(declare-fun x648 () Int)
(declare-fun x889 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x2577 () Int)
(declare-fun x2270 () Bool)
(declare-fun x985 () x364)
(declare-fun x1988 () x364)
(declare-fun x709 () Int)
(declare-fun x395 () Bool)
(declare-fun x1700 () Int)
(declare-fun x1639 () Bool)
(declare-fun x1605 () Int)
(declare-fun x158 () Bool)
(declare-fun x1270 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x479 () Int)
(declare-fun x2180 () Bool)
(declare-fun x915 () Bool)
(declare-fun x901 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x2653 () Int)
(declare-fun x1536 () Int)
(declare-fun x2659 () Bool)
(declare-fun x1565 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x942 () Bool)
(declare-fun x1843 () Int)
(declare-fun x1110 () Bool)
(declare-fun x1066 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x989 () Bool)
(declare-fun x447 () Int)
(declare-fun x417 () Bool)
(declare-fun x477 () Bool)
(declare-fun x2761 () Int)
(declare-fun x752 () Int)
(declare-fun x2387 () Bool)
(declare-fun x2463 () Bool)
(declare-fun x221 () Int)
(declare-fun x1328 () Int)
(declare-fun x2143 () Int)
(declare-fun x1815 () Bool)
(declare-fun x2340 () Bool)
(declare-fun x1588 () Int)
(declare-fun x612 () Int)
(declare-fun x808 () Int)
(declare-fun x2556 () Bool)
(declare-fun x2422 () Int)
(declare-fun x442 () Bool)
(declare-fun x476 () x364)
(declare-fun x475 () Bool)
(declare-fun x1055 () Bool)
(declare-fun x371 () Int)
(declare-fun x52 () Int)
(declare-fun x2229 (x364) Int)
(declare-fun x2742 () Bool)
(declare-fun x1928 () Int)
(declare-fun x2061 () Bool)
(declare-fun x918 () Int)
(declare-fun x2208 () Int)
(declare-fun x1263 () Bool)
(declare-fun x1046 () Bool)
(declare-fun x2098 () Bool)
(declare-fun x707 () Bool)
(declare-fun x37 () Bool)
(declare-fun x2512 () Bool)
(declare-fun x661 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x851 () Bool)
(declare-fun x2636 () Int)
(declare-fun x1466 () Int)
(declare-fun x754 () Bool)
(declare-fun x2628 () Int)
(declare-fun x1741 () Int)
(declare-fun x1686 () Bool)
(declare-fun x1492 () Int)
(declare-fun x1086 () Int)
(declare-fun x2204 () Bool)
(declare-fun x1115 () Int)
(declare-fun x474 () Bool)
(declare-fun x713 () Bool)
(declare-fun x536 () Int)
(declare-fun x821 () Bool)
(declare-fun x1640 () Int)
(declare-fun x2550 () Int)
(declare-fun x827 () Bool)
(declare-fun x2488 () Int)
(declare-fun x1202 () Bool)
(declare-fun x975 () Bool)
(declare-fun x374 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x1431 () Int)
(declare-fun x463 () Int)
(declare-fun x2271 () Bool)
(declare-fun x1981 () Int)
(declare-fun x2175 () Bool)
(declare-fun x2096 () Int)
(declare-fun x349 () Int)
(declare-fun x1224 () Bool)
(declare-fun x461 () Int)
(declare-fun x1469 () Int)
(declare-fun x335 () Int)
(declare-fun x1763 () Bool)
(declare-fun x1785 () Int)
(declare-fun x450 () Int)
(declare-fun x2110 () Bool)
(declare-fun x1625 () Int)
(declare-fun x1949 () x364)
(declare-fun x2368 () Int)
(declare-fun x932 () Bool)
(declare-fun x1730 () Int)
(declare-fun x800 () Int)
(declare-fun x187 () Int)
(declare-fun x1727 () Bool)
(declare-fun x48 () Int)
(declare-fun x1894 () Bool)
(declare-fun x1524 () Bool)
(declare-fun x2385 () Bool)
(declare-fun x2317 () Bool)
(declare-fun x739 () Bool)
(declare-fun x850 () Int)
(declare-fun x1884 () Bool)
(declare-fun x2165 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x688 () Bool)
(declare-fun x142 () Bool)
(declare-fun x2173 () Int)
(declare-fun x1348 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x786 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x2684 () Bool)
(declare-fun x2104 () Int)
(declare-fun x1596 () Int)
(declare-fun x2641 () x364)
(declare-fun x2690 () Bool)
(declare-fun x768 () Int)
(declare-fun x1491 () Bool)
(declare-fun x704 () Bool)
(declare-fun x2176 () Bool)
(declare-fun x2661 () Int)
(declare-fun x2197 () Bool)
(declare-fun x689 () Bool)
(declare-fun x1394 () Int)
(declare-fun x1929 () Int)
(declare-fun x706 () x364)
(declare-fun x2013 () Int)
(declare-fun x1292 () Bool)
(declare-fun x1514 () Int)
(declare-fun x2023 () Bool)
(declare-fun x318 () Bool)
(declare-fun x363 () Bool)
(declare-fun x834 () x364)
(declare-fun x2457 () Bool)
(declare-fun x1451 () Int)
(declare-fun x2206 () Int)
(declare-fun x456 () Int)
(declare-fun x1632 () Int)
(declare-fun x673 () Bool)
(declare-fun x2733 () Bool)
(declare-fun x1923 () Bool)
(declare-fun x1039 (Int) Int)
(declare-fun x2170 () Int)
(declare-fun x2199 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x776 () Int)
(declare-fun x397 () Bool)
(declare-fun x1607 () Int)
(declare-fun x1154 () Bool)
(declare-fun x1539 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x1675 () Bool)
(declare-fun x589 () Int)
(declare-fun x1204 () Bool)
(declare-fun x2215 () Bool)
(declare-fun x1529 () Bool)
(declare-fun x1291 () Bool)
(declare-fun x690 () Int)
(declare-fun x1942 () Int)
(declare-fun x296 () Bool)
(declare-fun x1844 () x364)
(declare-fun x965 () Bool)
(declare-fun x630 () Bool)
(declare-fun x1084 () Int)
(declare-fun x1132 () Int)
(declare-fun x1546 () Int)
(declare-fun x231 () Bool)
(declare-fun x2721 () Bool)
(declare-fun x601 () Int)
(declare-fun x2124 () Int)
(declare-fun x2447 () Bool)
(declare-fun x1974 () Bool)
(declare-fun x2692 () Bool)
(declare-fun x1070 (Int) Int)
(declare-fun x263 () Int)
(declare-fun x2181 () Bool)
(declare-fun x1240 () Int)
(declare-fun x365 () Bool)
(declare-fun x485 () x364)
(declare-fun x1915 () Int)
(declare-fun x210 () Bool)
(declare-fun x2289 () Bool)
(declare-fun x1802 () Int)
(declare-fun x807 () Bool)
(declare-fun x1142 () Int)
(declare-fun x1094 () Int)
(declare-fun x2030 () Int)
(declare-fun x2294 () Bool)
(declare-fun x722 () Int)
(declare-fun x2221 (x364) Int)
(declare-fun x1288 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x352 () Bool)
(declare-fun x1528 () Bool)
(declare-fun x2353 () Bool)
(declare-fun x1855 () Int)
(declare-fun x1221 () Bool)
(declare-fun x1590 () Int)
(declare-fun x339 () Bool)
(declare-fun x517 () Int)
(declare-fun x1613 () Bool)
(declare-fun x1678 () Bool)
(declare-fun x1108 () Int)
(declare-fun x1502 () Int)
(declare-fun x1782 () Int)
(declare-fun x155 () Bool)
(declare-fun x1318 () Int)
(declare-fun x1464 () Int)
(declare-fun x979 () Bool)
(declare-fun x1036 () Int)
(declare-fun x1723 () Int)
(declare-fun x2401 (Int) Int)
(declare-fun x408 () Bool)
(declare-fun x359 () Int)
(declare-fun x1179 () Bool)
(declare-fun x2358 () Int)
(declare-fun x566 () Bool)
(declare-fun x2448 () Int)
(declare-fun x2114 () x364)
(declare-fun x2162 () Int)
(declare-fun x1739 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x1269 () Bool)
(declare-fun x480 () Int)
(declare-fun x888 () x364)
(declare-fun x1009 () Bool)
(declare-fun x1882 () Bool)
(declare-fun x2202 () Bool)
(declare-fun x999 () Bool)
(declare-fun x1771 () Int)
(declare-fun x1924 () x364)
(declare-fun x1626 () Int)
(declare-fun x2606 () Int)
(declare-fun x2509 () Int)
(declare-fun x2626 () Bool)
(declare-fun x2057 () Bool)
(declare-fun x969 () x364)
(declare-fun x2234 () Int)
(declare-fun x360 () Bool)
(declare-fun x115 () Bool)
(declare-fun x908 () Int)
(declare-fun x100 () Int)
(declare-fun x150 () Bool)
(declare-fun x2378 () Int)
(declare-fun x1392 () Int)
(declare-fun x1140 () Bool)
(declare-fun x2343 () Int)
(declare-fun x2001 () Int)
(declare-fun x1285 () Bool)
(declare-fun x13 () Bool)
(declare-fun x202 () Bool)
(declare-fun x109 () Bool)
(declare-fun x1019 () Bool)
(declare-fun x2129 () Int)
(declare-fun x568 () Int)
(declare-fun x410 () Int)
(declare-fun x451 () Bool)
(declare-fun x1927 () Bool)
(declare-fun x1212 () Int)
(declare-fun x551 () Int)
(declare-fun x2088 () Bool)
(declare-fun x2478 () Int)
(declare-fun x2002 () Int)
(declare-fun x465 () x364)
(declare-fun x886 () Bool)
(declare-fun x1905 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x226 () Bool)
(declare-fun x1025 () Int)
(declare-fun x250 () Int)
(declare-fun x2000 () Int)
(declare-fun x1933 () Bool)
(declare-fun x2609 () Bool)
(declare-fun x2479 () Bool)
(declare-fun x1798 () Bool)
(declare-fun x1045 () Bool)
(declare-fun x973 () Bool)
(declare-fun x1495 () Int)
(declare-fun x2396 () Int)
(declare-fun x1611 () x364)
(declare-fun x1769 () Bool)
(declare-fun x972 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x102 () Int)
(declare-fun x2126 () Bool)
(declare-fun x2179 () x364)
(declare-fun x167 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x1719 () Bool)
(declare-fun x842 () Int)
(declare-fun x1642 () Bool)
(declare-fun x1702 () Int)
(declare-fun x1281 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x83 () Int)
(declare-fun x1644 () Bool)
(declare-fun x1454 () Int)
(declare-fun x2591 () Bool)
(declare-fun x1535 () Int)
(declare-fun x731 () Int)
(declare-fun x1301 () Int)
(declare-fun x2131 () Bool)
(declare-fun x1026 () Int)
(declare-fun x528 () Int)
(declare-fun x2746 () Bool)
(declare-fun x936 () Bool)
(declare-fun x1906 () x364)
(declare-fun x877 () Bool)
(declare-fun x1279 () Int)
(declare-fun x2055 () Int)
(declare-fun x1029 () x364)
(declare-fun x2150 () Int)
(declare-fun x2395 () Int)
(declare-fun x1891 () Int)
(declare-fun x1054 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x837 () Bool)
(declare-fun x933 () Bool)
(declare-fun x2132 () Bool)
(declare-fun x380 () Int)
(declare-fun x1631 () Bool)
(declare-fun x2735 () Int)
(declare-fun x904 () Int)
(declare-fun x2740 () Bool)
(declare-fun x1641 () Int)
(declare-fun x2631 () Bool)
(declare-fun x2274 () Bool)
(declare-fun x909 () x364)
(declare-fun x2611 () Int)
(declare-fun x1200 () x364)
(declare-fun x2275 () Bool)
(declare-fun x2260 () Bool)
(declare-fun x2207 () Int)
(declare-fun x72 () Bool)
(declare-fun x389 () Bool)
(declare-fun x174 () Bool)
(declare-fun x825 () Bool)
(declare-fun x1859 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x161 () Bool)
(declare-fun x1762 () Bool)
(declare-fun x2672 () Bool)
(declare-fun x2116 () Bool)
(declare-fun x190 () Bool)
(declare-fun x199 () Bool)
(declare-fun x1574 () Bool)
(declare-fun x2532 () Bool)
(declare-fun x747 () Int)
(declare-fun x111 () Int)
(declare-fun x692 () x364)
(declare-fun x23 () Bool)
(declare-fun x1983 () Bool)
(declare-fun x1367 () Bool)
(declare-fun x1197 () Bool)
(declare-fun x2298 () Bool)
(declare-fun x177 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x2277 () Int)
(declare-fun x1560 () Int)
(declare-fun x1060 () Int)
(declare-fun x1117 () Bool)
(declare-fun x1191 () Int)
(declare-fun x399 () Bool)
(declare-fun x2026 () Int)
(declare-fun x527 () Int)
(declare-fun x2524 () Int)
(declare-fun x1556 () Bool)
(declare-fun x763 () Int)
(declare-fun x1180 () Int)
(declare-fun x2544 () x364)
(declare-fun x1254 () Int)
(declare-fun x2364 () Int)
(declare-fun x982 () Bool)
(declare-fun x654 () Bool)
(declare-fun x2558 () Bool)
(declare-fun x1241 () Bool)
(declare-fun x592 () Int)
(declare-fun x1376 () Bool)
(declare-fun x1899 () Bool)
(declare-fun x2712 () x364)
(declare-fun x756 () Bool)
(declare-fun x511 () Bool)
(declare-fun x2699 () Int)
(declare-fun x1422 () Int)
(declare-fun x1213 () Bool)
(declare-fun x1836 () Bool)
(declare-fun x2533 () Int)
(declare-fun x2473 () Bool)
(declare-fun x797 () Bool)
(declare-fun x2200 () Int)
(declare-fun x1430 () Bool)
(declare-fun x818 () Int)
(declare-fun x1534 () Bool)
(declare-fun x1542 () Int)
(declare-fun x1190 () Bool)
(declare-fun x2539 () Bool)
(declare-fun x857 () Int)
(declare-fun x1682 () Int)
(declare-fun x1555 () Int)
(declare-fun x862 () Int)
(declare-fun x678 () Int)
(declare-fun x1425 () Int)
(declare-fun x2329 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x1850 () Bool)
(declare-fun x317 () x364)
(declare-fun x1337 () Bool)
(declare-fun x947 () Bool)
(declare-fun x1768 () Int)
(declare-fun x2128 (Int Int) Int)
(declare-fun x1689 () Bool)
(declare-fun x2467 () Bool)
(declare-fun x315 () Bool)
(declare-fun x774 () Int)
(declare-fun x1460 () Int)
(declare-fun x247 () Int)
(declare-fun x278 () Int)
(declare-fun x457 () Bool)
(declare-fun x914 () Bool)
(declare-fun x468 () x364)
(declare-fun x2078 () Int)
(declare-fun x1970 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x1857 () Int)
(declare-fun x2615 () Bool)
(declare-fun x2306 () Bool)
(declare-fun x2201 () x364)
(declare-fun x418 () x364)
(declare-fun x2574 () Bool)
(declare-fun x1354 () x364)
(declare-fun x1598 () x364)
(declare-fun x1251 () Int)
(declare-fun x2460 () Bool)
(declare-fun x145 () Int)
(declare-fun x1998 () Bool)
(declare-fun x194 () x364)
(declare-fun x583 () Int)
(declare-fun x2027 () Bool)
(declare-fun x341 () Bool)
(declare-fun x1665 () Int)
(declare-fun x560 () Bool)
(declare-fun x125 () Int)
(declare-fun x2169 () Int)
(declare-fun x2700 () Int)
(declare-fun x572 () Bool)
(declare-fun x1755 () Int)
(declare-fun x1819 () x364)
(declare-fun x103 () Int)
(declare-fun x1980 () Int)
(declare-fun x616 () Int)
(declare-fun x998 () x364)
(declare-fun x411 () Bool)
(declare-fun x779 () Int)
(declare-fun x532 () Int)
(declare-fun x248 () Int)
(declare-fun x128 () Bool)
(declare-fun x684 () Int)
(declare-fun x1997 () Bool)
(declare-fun x1612 () Bool)
(declare-fun x2704 () Int)
(declare-fun x1295 () Bool)
(declare-fun x2144 () x364)
(declare-fun x1309 () Bool)
(declare-fun x894 () Int)
(declare-fun x1395 () Int)
(declare-fun x1128 () Int)
(declare-fun x2725 () Bool)
(declare-fun x2049 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x1325 (Int) Int)
(declare-fun x269 (Int) Int)
(declare-fun x2747 () Bool)
(declare-fun x101 () Int)
(declare-fun x1578 () Int)
(declare-fun x1343 () Bool)
(declare-fun x2333 () Int)
(declare-fun x2138 () Bool)
(declare-fun x668 () x364)
(declare-fun x1848 () Int)
(declare-fun x1379 () Int)
(declare-fun x2303 () Bool)
(declare-fun x2186 () Bool)
(declare-fun x188 () Int)
(declare-fun x2011 () Bool)
(declare-fun x1984 () Int)
(declare-fun x1234 () Int)
(declare-fun x1345 () Int)
(declare-fun x1239 () Bool)
(declare-fun x1703 () x364)
(declare-fun x467 () Int)
(declare-fun x2595 () Bool)
(declare-fun x2668 () Bool)
(declare-fun x1449 () Int)
(declare-fun x632 () x364)
(declare-fun x180 () Bool)
(declare-fun x2576 () Int)
(declare-fun x2286 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x1956 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x301 () Bool)
(declare-fun x445 () x364)
(declare-fun x1776 () Int)
(declare-fun x1525 () Int)
(declare-fun x1735 () Bool)
(declare-fun x686 () Bool)
(declare-fun x765 (Int Int) Int)
(declare-fun x1886 () Bool)
(declare-fun x994 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x264 () Bool)
(declare-fun x930 () Int)
(declare-fun x1082 () Bool)
(declare-fun x2637 () Bool)
(declare-fun x208 () x364)
(declare-fun x988 () Int)
(declare-fun x879 () Int)
(declare-fun x242 () Int)
(declare-fun x427 () Bool)
(declare-fun x2680 () Int)
(declare-fun x1990 () Bool)
(declare-fun x106 () Int)
(declare-fun x1012 () Bool)
(declare-fun x1753 () Bool)
(declare-fun x405 () Bool)
(declare-fun x2496 () Int)
(declare-fun x507 () Bool)
(declare-fun x771 () Int)
(declare-fun x1056 () Int)
(declare-fun x1863 () Int)
(declare-fun x865 () Bool)
(declare-fun x997 () Int)
(declare-fun x593 (x364) Int)
(declare-fun x1910 () Bool)
(declare-fun x454 () Bool)
(declare-fun x127 () Int)
(declare-fun x1216 () Bool)
(declare-fun x898 () x364)
(declare-fun x2542 () Int)
(declare-fun x2741 () Bool)
(declare-fun x1116 () x364)
(declare-fun x1758 () Bool)
(declare-fun x207 () Bool)
(declare-fun x1976 () Int)
(declare-fun x2325 () Int)
(declare-fun x1788 () Bool)
(declare-fun x2614 () Bool)
(declare-fun x288 () Bool)
(declare-fun x1299 () Int)
(declare-fun x282 (x364) Int)
(declare-fun x2486 () Int)
(declare-fun x1341 () Int)
(declare-fun x1911 () Bool)
(declare-fun x672 () x364)
(declare-fun x2168 () Bool)
(declare-fun x526 () Bool)
(declare-fun x1501 () Bool)
(declare-fun x2554 () Int)
(declare-fun x1120 () Int)
(declare-fun x2601 () Int)
(declare-fun x791 () x364)
(declare-fun x2045 () Bool)
(declare-fun x1382 () Int)
(declare-fun x1521 () Bool)
(declare-fun x1881 () Bool)
(declare-fun x1476 () Int)
(declare-fun x1059 () Bool)
(declare-fun x1737 () x364)
(declare-fun x753 () Bool)
(declare-fun x615 () Bool)
(declare-fun x2156 () Bool)
(declare-fun x2283 () Bool)
(declare-fun x1633 () Bool)
(declare-fun x2296 () Int)
(declare-fun x1149 () x364)
(declare-fun x1706 () Int)
(declare-fun x2654 () Bool)
(declare-fun x179 () Int)
(declare-fun x490 () Bool)
(declare-fun x1992 () Bool)
(declare-fun x1490 () Int)
(declare-fun x831 () Bool)
(declare-fun x1064 () Int)
(declare-fun x2356 () Bool)
(declare-fun x645 () Bool)
(declare-fun x937 () x364)
(declare-fun x2464 () Bool)
(declare-fun x1873 () Bool)
(declare-fun x767 () Int)
(declare-fun x113 () x364)
(declare-fun x499 () Bool)
(declare-fun x2066 () Bool)
(declare-fun x781 () Bool)
(declare-fun x2240 () Bool)
(declare-fun x2021 () Bool)
(declare-fun x2630 () Int)
(declare-fun x2342 () Int)
(declare-fun x1013 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x164 () Int)
(declare-fun x353 () Int)
(declare-fun x1679 () Int)
(declare-fun x1498 () Bool)
(declare-fun x2497 () Bool)
(declare-fun x2693 () x364)
(declare-fun x748 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x682 () Int)
(declare-fun x16 () Int)
(declare-fun x1637 () Bool)
(declare-fun x1713 () Bool)
(declare-fun x2192 (Int Int) Int)
(declare-fun x2470 () Int)
(declare-fun x256 () Bool)
(declare-fun x1519 () Bool)
(declare-fun x1069 () x364)
(declare-fun x716 () Int)
(declare-fun x43 () Int)
(declare-fun x893 () x364)
(declare-fun x1133 () Bool)
(declare-fun x1203 () Int)
(declare-fun x311 () Int)
(declare-fun x1289 () Bool)
(declare-fun x2311 () Bool)
(declare-fun x40 () Bool)
(declare-fun x1781 () Bool)
(declare-fun x725 () Int)
(declare-fun x856 () Bool)
(declare-fun x660 () Bool)
(declare-fun x1722 () Bool)
(declare-fun x200 () Bool)
(declare-fun x935 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x2552 () Bool)
(declare-fun x2035 () Bool)
(declare-fun x967 () Int)
(declare-fun x1153 () Int)
(declare-fun x2227 () Int)
(declare-fun x1125 () x364)
(declare-fun x2265 (Int) Int)
(declare-fun x1622 () Bool)
(declare-fun x1266 () Int)
(declare-fun x1779 () Bool)
(declare-fun x2490 () Bool)
(declare-fun x2328 () Bool)
(declare-fun x733 () Int)
(declare-fun x2393 () Int)
(declare-fun x578 () x364)
(declare-fun x1188 () Bool)
(declare-fun x2406 () Int)
(declare-fun x338 () Int)
(declare-fun x321 () Int)
(declare-fun x2664 () Bool)
(declare-fun x2090 () Int)
(declare-fun x505 () Int)
(declare-fun x2 () Bool)
(declare-fun x1005 () Int)
(declare-fun x2431 () Bool)
(declare-fun x1922 () Bool)
(declare-fun x2622 () Int)
(declare-fun x1732 () Int)
(declare-fun x1175 () Bool)
(declare-fun x2627 () Int)
(declare-fun x538 () Bool)
(declare-fun x1594 () Int)
(declare-fun x2058 () Bool)
(declare-fun x1255 () Bool)
(declare-fun x2155 () Int)
(declare-fun x1015 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x274 () Bool)
(declare-fun x2686 () Bool)
(declare-fun x2109 () Int)
(declare-fun x863 () Bool)
(declare-fun x501 () Bool)
(declare-fun x344 () x364)
(declare-fun x1709 () Bool)
(declare-fun x656 () Int)
(declare-fun x2247 () Int)
(declare-fun x826 () Bool)
(declare-fun x1273 () Bool)
(declare-fun x1657 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x2445 () Int)
(declare-fun x214 () Int)
(declare-fun x336 () Int)
(declare-fun x1432 () Bool)
(declare-fun x325 () Int)
(declare-fun x1259 () Int)
(declare-fun x279 () x364)
(declare-fun x789 () Int)
(declare-fun x1300 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x734 () Int)
(declare-fun x1370 () Int)
(declare-fun x2547 () Bool)
(declare-fun x2139 () Int)
(declare-fun x2597 () Bool)
(declare-fun x330 () Bool)
(declare-fun x907 () Bool)
(declare-fun x1787 () Bool)
(declare-fun x1751 () Int)
(declare-fun x277 (Int) Int)
(declare-fun x2272 () Int)
(declare-fun x431 () Int)
(declare-fun x788 () Int)
(declare-fun x2433 () Bool)
(declare-fun x1040 () Int)
(declare-fun x1544 () Bool)
(declare-fun x2037 () Int)
(declare-fun x21 () Int)
(declare-fun x2645 () Bool)
(declare-fun x1963 () Bool)
(declare-fun x2191 () Bool)
(declare-fun x2559 () x364)
(declare-fun x2666 () Int)
(declare-fun x1391 () Bool)
(declare-fun x1728 () Int)
(declare-fun x1384 () Int)
(declare-fun x400 () Bool)
(declare-fun x1349 () Bool)
(declare-fun x2572 () Int)
(declare-fun x2483 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x960 () Int)
(declare-fun x2149 () Bool)
(declare-fun x574 (x364) Int)
(declare-fun x1586 () Bool)
(declare-fun x557 () Bool)
(declare-fun x2465 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x90 () Bool)
(declare-fun x219 () Int)
(declare-fun x1597 () Bool)
(declare-fun x2079 () Int)
(declare-fun x2324 () Bool)
(declare-fun x623 () Bool)
(declare-fun x1571 () Int)
(declare-fun x513 () Bool)
(declare-fun x1918 () Bool)
(declare-fun x1810 () Int)
(declare-fun x22 () Int)
(declare-fun x1043 () Int)
(declare-fun x755 () Bool)
(declare-fun x86 () Int)
(declare-fun x2163 () Int)
(declare-fun x429 () Bool)
(declare-fun x1750 () Bool)
(declare-fun x1804 () Bool)
(declare-fun x2570 () Int)
(declare-fun x2452 () Bool)
(declare-fun x657 () Bool)
(declare-fun x2059 () Int)
(declare-fun x28 () Int)
(declare-fun x2337 () Bool)
(declare-fun x2287 () Bool)
(declare-fun x2638 (x364) Int)
(declare-fun x959 () Bool)
(declare-fun x2394 () Int)
(declare-fun x1312 () Int)
(declare-fun x93 () Int)
(declare-fun x2517 () Bool)
(declare-fun x2366 () Bool)
(declare-fun x1577 () Int)
(declare-fun x372 () Int)
(declare-fun x2670 () Bool)
(declare-fun x195 () Int)
(declare-fun x1897 () Int)
(declare-fun x2285 () Int)
(declare-fun x2561 () Int)
(declare-fun x1599 () x364)
(declare-fun x112 () Bool)
(declare-fun x2053 () Bool)
(declare-fun x331 () Bool)
(declare-fun x2450 () Int)
(declare-fun x185 () Bool)
(declare-fun x1957 () Int)
(declare-fun x971 () Bool)
(declare-fun x2245 () x364)
(declare-fun x369 () Int)
(declare-fun x2376 () Int)
(declare-fun x272 () Bool)
(declare-fun x2288 () x364)
(declare-fun x2347 () Bool)
(declare-fun x881 () Int)
(declare-fun x978 () Bool)
(declare-fun x1357 () Int)
(declare-fun x977 () Int)
(declare-fun x1030 () Int)
(declare-fun x1566 () Bool)
(declare-fun x621 () Bool)
(declare-fun x2133 () Bool)
(declare-fun x1557 () Int)
(declare-fun x2064 () Int)
(declare-fun x2696 () Int)
(declare-fun x2743 () Int)
(declare-fun x2113 () Int)
(declare-fun x2136 () Int)
(declare-fun x2301 () Bool)
(declare-fun x508 (Int Int) Int)
(declare-fun x1937 () Bool)
(declare-fun x1668 () Int)
(declare-fun x332 () Bool)
(declare-fun x2022 () Int)
(declare-fun x916 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x2592 () Bool)
(declare-fun x2025 () Bool)
(declare-fun x2511 () Bool)
(declare-fun x74 () Int)
(declare-fun x1037 () Bool)
(declare-fun x833 () Int)
(declare-fun x1146 () Bool)
(declare-fun x260 () Bool)
(declare-fun x1818 () Int)
(declare-fun x836 () Int)
(declare-fun x2485 () Bool)
(declare-fun x1592 () Bool)
(declare-fun x2720 () Bool)
(declare-fun x796 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x133 () Int)
(declare-fun x262 () Bool)
(declare-fun x896 () Bool)
(declare-fun x2729 () Int)
(declare-fun x2334 () Int)
(declare-fun x2569 () Bool)
(declare-fun x2525 () Int)
(declare-fun x638 () Int)
(declare-fun x1789 () x364)
(declare-fun x60 () Int)
(declare-fun x2019 () Int)
(declare-fun x966 () Bool)
(declare-fun x680 () x364)
(declare-fun x1356 () Bool)
(declare-fun x2330 () Int)
(declare-fun x1310 () Bool)
(declare-fun x2578 () Int)
(declare-fun x1912 () Int)
(declare-fun x258 () Bool)
(declare-fun x861 () Int)
(declare-fun x522 () Int)
(declare-fun x84 () Bool)
(declare-fun x2535 () Int)
(declare-fun x563 (Int) Int)
(declare-fun x1547 () Bool)
(declare-fun x2640 () Bool)
(declare-fun x471 () Int)
(declare-fun x2080 () Int)
(declare-fun x841 () Bool)
(declare-fun x626 () Bool)
(declare-fun x806 () Int)
(declare-fun x2369 () Bool)
(declare-fun x1440 () Bool)
(declare-fun x2313 () Int)
(declare-fun x627 () Int)
(declare-fun x404 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x314 () Int)
(declare-fun x504 () Int)
(declare-fun x394 () Bool)
(declare-fun x1427 () Int)
(declare-fun x357 () Bool)
(declare-fun x2279 () Int)
(declare-fun x1635 () Int)
(declare-fun x1129 () Bool)
(declare-fun x1218 () Int)
(declare-fun x1052 () Bool)
(declare-fun x1835 () Bool)
(declare-fun x78 () x364)
(declare-fun x2575 () Int)
(declare-fun x2003 () Bool)
(declare-fun x870 () Bool)
(declare-fun x1761 () Bool)
(declare-fun x2217 () Bool)
(declare-fun x2230 () Int)
(declare-fun x1831 () Bool)
(declare-fun x2673 () Int)
(declare-fun x286 () Int)
(declare-fun x1508 () Int)
(declare-fun x10 () Int)
(declare-fun x1331 () Int)
(declare-fun x651 () Bool)
(declare-fun x2335 () Int)
(declare-fun x170 () Int)
(declare-fun x2203 () Int)
(declare-fun x1294 () Int)
(declare-fun x449 () Int)
(declare-fun x197 () Bool)
(declare-fun x728 () Bool)
(declare-fun x2031 () Bool)
(declare-fun x787 () Bool)
(declare-fun x309 () Bool)
(declare-fun x230 () Bool)
(declare-fun x1932 () Bool)
(declare-fun x718 () Int)
(declare-fun x705 () Bool)
(declare-fun x1024 () Bool)
(declare-fun x2081 () x364)
(declare-fun x1366 () Int)
(declare-fun x2092 () Bool)
(declare-fun x2182 () Int)
(declare-fun x1903 () Int)
(declare-fun x193 () Int)
(declare-fun x2734 () Bool)
(declare-fun x1523 () Bool)
(declare-fun x2105 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x383 () Int)
(declare-fun x281 () Int)
(declare-fun x1951 () Int)
(declare-fun x1817 () Int)
(declare-fun x2117 () Bool)
(declare-fun x2219 () Bool)
(declare-fun x1383 () Int)
(declare-fun x912 () x364)
(declare-fun x73 () Bool)
(declare-fun x1749 () Int)
(declare-fun x2063 () Int)
(declare-fun x81 () Int)
(declare-fun x2312 () Int)
(declare-fun x1152 () Bool)
(declare-fun x790 () Bool)
(declare-fun x577 () Int)
(declare-fun x1033 () x364)
(declare-fun x1505 () Bool)
(declare-fun x2319 () Bool)
(declare-fun x1623 () Bool)
(declare-fun x2432 () Bool)
(declare-fun x149 () Bool)
(declare-fun x1477 () Int)
(declare-fun x1420 () x364)
(declare-fun x1943 () Int)
(declare-fun x2060 () x364)
(declare-fun x2458 () Bool)
(declare-fun x2390 () Int)
(declare-fun x812 () Int)
(declare-fun x337 () Int)
(declare-fun x1965 () Bool)
(declare-fun x491 () x364)
(declare-fun x121 () Int)
(declare-fun x328 () Bool)
(declare-fun x1780 () Bool)
(declare-fun x1319 () Int)
(declare-fun x2674 () Bool)
(declare-fun x1380 () x364)
(declare-fun x1436 () Bool)
(declare-fun x1834 () Int)
(declare-fun x811 () Int)
(declare-fun x1868 (x364) Int)
(declare-fun x2226 () Int)
(declare-fun x778 () x364)
(declare-fun x2414 () Bool)
(declare-fun x87 () Int)
(declare-fun x1660 () Bool)
(declare-fun x2095 () Bool)
(declare-fun x644 () Bool)
(declare-fun x452 () Int)
(declare-fun x2255 () x364)
(declare-fun x685 () Bool)
(declare-fun x864 () Int)
(declare-fun x440 () Bool)
(declare-fun x2398 () Int)
(declare-fun x922 () Bool)
(declare-fun x2701 () Int)
(declare-fun x152 () Bool)
(declare-fun x1351 () Int)
(declare-fun x2430 () Bool)
(declare-fun x1747 () Int)
(declare-fun x1913 () Bool)
(declare-fun x396 () Int)
(declare-fun x464 () Int)
(declare-fun x2507 () Bool)
(declare-fun x1820 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x981 () Int)
(declare-fun x2284 () x364)
(declare-fun x1869 () Bool)
(declare-fun x2526 () Int)
(declare-fun x1500 () x364)
(declare-fun x162 () x364)
(define-fun x1031 ((x364 x364) (x964 Int)) x364 (ite ((_ is x890) x364) (x890 (x381 x364) (+ (x2683 x364) x964)) (ite ((_ is x795) x364) (x795 (x567 x364) (x63 x364) (+ x964 (x1608 x364))) (x701 (+ x964 (x1688 x364))))))
(define-fun x2675 ((x2315 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2315) (<= 0 x2315)) x2315 (- x2315 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1350 ((x2315 Int)) Int (ite (and (> 0 x2315) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2315)) (+ x2315 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2315))
(define-fun x2487 ((x2315 Int)) Int (ite (and (<= 0 x2315) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2315)) x2315 (ite (and (< x2315 231584178474632390847141970017375815706539969331281128078915168015826259279872) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2315)) (- x2315 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (< x2315 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2315)) (+ x2315 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2492 x2315 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x71 ((x1332 Int)) Bool (and (>= x1332 0) (< x1332 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x2709 ((x1332 Int)) Bool (and (= (x765 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1332) x1332) (= (x765 x1332 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1332)))
(define-fun x409 ((x1332 Int)) Bool (and (= 0 (x765 0 x1332)) (= (x765 x1332 0) 0)))
(define-fun x2731 ((x1332 Int)) Bool (= x1332 (x765 x1332 x1332)))
(define-fun x2461 ((x1332 Int)) Bool (and (x409 x1332) (x2731 x1332) (x2709 x1332)))
(define-fun x1684 ((x1332 Int) (x7 Int)) Bool (= (x765 x1332 x7) (x765 x7 x1332)))
(define-fun x899 ((x1332 Int) (x7 Int)) Bool (and (=> (>= x1332 0) (>= x1332 (x765 x1332 x7))) (<= 0 (x765 x1332 x7)) (=> (>= x7 0) (>= x7 (x765 x1332 x7)))))
(define-fun x2246 ((x1332 Int) (x7 Int)) Bool (and (x1684 x1332 x7) (x899 x1332 x7)))
(define-fun x2711 ((x1332 Int)) Bool (= (x765 x1332 1461501637330902918203684832716283019655932542975) (x2492 x1332 1461501637330902918203684832716283019655932542976)))
(define-fun x839 ((x1332 Int)) Bool (and (x2246 x1332 1461501637330902918203684832716283019655932542975) (x2711 x1332)))
(define-fun x1401 ((x1332 Int) (x7 Int)) Bool (and (> x7 (x2492 x1332 x7)) (>= (x2492 x1332 x7) 0)))
(define-fun x1812 ((x1332 Int) (x7 Int)) Bool (=> (and (<= 0 x1332) (< 0 x7)) (= (< x1332 x7) (= (x2492 x1332 x7) x1332))))
(define-fun x628 ((x1332 Int) (x7 Int)) Bool (=> (and (> x7 0) (and (<= x7 x1332) (> (+ x7 x7) x1332))) (= (x2492 x1332 x7) (- x1332 x7))))
(define-fun x1465 ((x1332 Int)) Bool (= 0 (x2492 0 x1332)))
(define-fun x1065 ((x1332 Int)) Bool (= 0 (x2492 x1332 1)))
(define-fun x401 ((x1332 Int)) Bool (= (x2492 x1332 x1332) 0))
(define-fun x1016 ((x1332 Int)) Bool (and (x401 x1332) (x1465 x1332) (x1065 x1332)))
(define-fun x1257 ((x1332 Int) (x7 Int)) Bool (=> (and (< 0 x7) (> x1332 0)) (= (< (x508 x1332 x7) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x7 (x2192 (x2487 (x508 x1332 x7)) x1332)))))
(define-fun x544 ((x1332 Int) (x7 Int)) Bool (=> (and (not (= x7 0)) (not (= 0 x1332))) (and (= (x2192 (x508 x1332 x7) x1332) x7) (= (x2192 (x508 x1332 x7) x7) x1332))))
(define-fun x2152 ((x1332 Int) (x7 Int)) Bool (=> (and (< 0 x1332) (< 0 x7)) (= (> (x508 x1332 x7) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (x2192 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1332) x7))))
(define-fun x2751 ((x1332 Int) (x7 Int)) Bool (and (= (x2487 (x508 (- x1332 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x7 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2487 (x508 x1332 x7))) (= (x2487 (x508 x1332 x7)) (x2487 (x508 (- x1332 115792089237316195423570985008687907853269984665640564039457584007913129639936) x7))) (= (x2487 (x508 x1332 x7)) (x2487 (x508 x1332 (- x7 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(define-fun x2415 ((x1332 Int) (x7 Int)) Bool (and (=> (and (and (> x1332 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1332)) (and (<= x7 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x7 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x508 (- x1332 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x7 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1332) (x2192 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x7))))) (=> (and (and (> x7 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7)) (and (<= x1332 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1332 0))) (= (>= (x508 x1332 (- x7 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x7) (x2192 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1332)))) (=> (and (and (<= x1332 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x1332)) (and (< 0 x7) (<= x7 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x2192 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7) x1332) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x508 x1332 x7)))) (=> (and (and (> x1332 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1332 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7) (< 0 x7))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1332) (x2192 57896044618658097711785492504343953926634992332820282019728792003956564819968 x7)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x508 (- x1332 115792089237316195423570985008687907853269984665640564039457584007913129639936) x7))))))
(define-fun x802 ((x1332 Int)) Bool (and (= 0 (x508 x1332 0)) (= 0 (x508 0 x1332))))
(define-fun x2579 ((x1332 Int)) Bool (and (= (x508 x1332 1) x1332) (= x1332 (x508 1 x1332))))
(define-fun x2529 ((x1332 Int)) Bool (and (x2579 x1332) (x802 x1332)))
(define-fun x1051 ((x1332 Int)) Bool (= (+ (x2492 x1332 32) (x765 x1332 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (x2487 x1332)))
(define-fun x2108 ((x1332 Int)) Bool (and (x2246 x1332 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1051 x1332)))
(define-fun x2752 ((x2716 Int)) Int (ite (= x2716 128) x2459 (x2265 x2716)))
(define-fun x2046 ((x2716 Int)) Int (ite (= x2716 160) x2238 (x2752 x2716)))
(define-fun x809 ((x2716 Int)) Int (ite (= 192 x2716) x1915 (x2046 x2716)))
(define-fun x1887 ((x2716 Int)) Int (x1503 x2716))
(define-fun x2314 ((x2716 Int)) Int (ite (= x2716 128) x551 (x269 x2716)))
(define-fun x1262 ((x2716 x364)) Int (x282 x2716))
(define-fun x1038 ((x2716 x364)) Int (ite (= x1377 x2716) x1862 (x1845 x2716)))
(define-fun x1157 ((x2716 x364)) Int (ite x2141 (ite x1224 (x1845 x2716) (x1038 x2716)) (x1845 x2716)))
(define-fun x220 ((x2716 x364)) Int (ite x1082 (ite x1504 (x1157 x2716) (ite x1866 (x1845 x2716) (ite x474 (x1845 x2716) (ite x1095 (x1845 x2716) (ite x2617 (x1157 x2716) (x1845 x2716)))))) (ite x2678 (x1845 x2716) (x1157 x2716))))
(define-fun x1330 ((x2716 x364)) Int (ite (= x1985 x2716) x1208 (x220 x2716)))
(define-fun x2352 ((x2716 x364)) Int (ite x1645 (x1330 x2716) (ite x1886 (x220 x2716) (ite x2733 (x220 x2716) (ite x18 (x220 x2716) (ite x1241 (x1330 x2716) (x220 x2716)))))))
(define-fun x2404 ((x2716 x364)) Int (ite (= x2716 x998) x403 (x1330 x2716)))
(define-fun x458 ((x2716 x364)) Int (ite x1840 (x2352 x2716) (x2404 x2716)))
(define-fun x255 ((x2716 x364)) Int (ite x858 (x1845 x2716) (ite x980 (x458 x2716) (x220 x2716))))
(define-fun x2656 ((x2716 x364)) Int (ite (= x2716 x194) x1322 (x329 x2716)))
(define-fun x1647 ((x2716 x364)) Int (ite x1381 (x2656 x2716) (ite x2271 (x329 x2716) (ite x1622 (x329 x2716) (ite x1994 (x329 x2716) (ite x473 (x2656 x2716) (x329 x2716)))))))
(define-fun x2029 ((x2716 x364)) Int (ite (= x2716 x880) x1629 (x2656 x2716)))
(define-fun x2295 ((x2716 x364)) Int (ite x2204 (x1647 x2716) (x2029 x2716)))
(define-fun x2140 ((x2716 x364)) Int (ite x858 (x329 x2716) (ite x980 (x329 x2716) (ite x1024 (x329 x2716) (ite x1416 (x329 x2716) (x2295 x2716))))))
(define-fun x2758 ((x2716 x364)) Int (x2229 x2716))
(define-fun x156 ((x2716 x364)) Int (x574 x2716))
(define-fun x2481 ((x2716 x364)) Int (x92 x2716))
(define-fun x2760 ((x2716 x364)) Int (ite (= x154 x2716) x2477 (x593 x2716)))
(define-fun x646 ((x2716 x364)) Int (ite x1098 (x2760 x2716) (ite x1873 (x593 x2716) (ite x1899 (x593 x2716) (ite x1081 (x593 x2716) (ite x582 (x2760 x2716) (x593 x2716)))))))
(define-fun x2383 ((x2716 x364)) Int (ite (= x778 x2716) x577 (x2760 x2716)))
(define-fun x2223 ((x2716 x364)) Int (ite x2757 (x646 x2716) (x2383 x2716)))
(define-fun x548 ((x2716 x364)) Int (ite x858 (x593 x2716) (ite x980 (x593 x2716) (ite x1024 (x593 x2716) (ite x1416 (x2223 x2716) (x593 x2716))))))
(define-fun x1099 ((x2716 x364)) Int (ite (= x485 x2716) x1259 (x2221 x2716)))
(define-fun x1472 ((x2716 x364)) Int (ite x2141 (x2221 x2716) (ite x702 (x2221 x2716) (x1099 x2716))))
(define-fun x1104 ((x2716 x364)) Int (ite x1082 (ite x1504 (x1472 x2716) (ite x1866 (x2221 x2716) (ite x474 (x2221 x2716) (ite x1095 (x2221 x2716) (ite x2617 (x1472 x2716) (x2221 x2716)))))) (ite x2678 (x2221 x2716) (x1472 x2716))))
(define-fun x1568 ((x2716 x364)) Int (ite (= x2587 x2716) x2611 (x1104 x2716)))
(define-fun x198 ((x2716 x364)) Int (ite x948 (x1568 x2716) (ite x2379 (x1104 x2716) (ite x2439 (x1104 x2716) (ite x989 (x1104 x2716) (ite x494 (x1568 x2716) (x1104 x2716)))))))
(define-fun x1404 ((x2716 x364)) Int (ite (= x2179 x2716) x1409 (x1568 x2716)))
(define-fun x319 ((x2716 x364)) Int (ite x2646 (x198 x2716) (x1404 x2716)))
(define-fun x1109 ((x2716 x364)) Int (ite x858 (x2221 x2716) (ite x980 (x1104 x2716) (ite x1024 (x319 x2716) (x1104 x2716)))))
(define-fun x2676 ((x2716 x364)) Int (ite (= x2716 x1183) x2653 (x548 x2716)))
(define-fun x1419 ((x2716 x364)) Int (ite x2181 (x2676 x2716) (ite x1885 (x548 x2716) (ite x1893 (x548 x2716) (ite x1215 (x548 x2716) (ite x1163 (x2676 x2716) (x548 x2716)))))))
(define-fun x2605 ((x2716 x364)) Int (ite (= x543 x2716) x1119 (x2676 x2716)))
(define-fun x2070 ((x2716 x364)) Int (ite x137 (x548 x2716) (ite x115 (x548 x2716) (ite x339 (ite x2095 (x1419 x2716) (x2605 x2716)) (x548 x2716)))))
(define-fun x2017 ((x2716 x364)) Int (ite (= x1443 x2716) x1772 (x2070 x2716)))
(define-fun x2489 ((x2716 x364)) Int (ite x689 (x2017 x2716) (ite x2260 (x2070 x2716) (ite x607 (x2070 x2716) (ite x1758 (x2070 x2716) (ite x2298 (x2017 x2716) (x2070 x2716)))))))
(define-fun x1302 ((x2716 x364)) Int (ite (= x2201 x2716) x1513 (x2017 x2716)))
(define-fun x580 ((x2716 x364)) Int (ite x1722 (x2070 x2716) (ite x559 (x2070 x2716) (ite x1733 (ite x654 (x2489 x2716) (x1302 x2716)) (x2070 x2716)))))
(define-fun x2505 ((x2716 x364)) Int (ite (= x1988 x2716) x2087 (x580 x2716)))
(define-fun x2032 ((x2716 x364)) Int (ite x2225 (x2505 x2716) (ite x869 (x580 x2716) (ite x1798 (x580 x2716) (ite x1348 (x580 x2716) (ite x1117 (x2505 x2716) (x580 x2716)))))))
(define-fun x1726 ((x2716 x364)) Int (ite (= x1500 x2716) x1228 (x2505 x2716)))
(define-fun x1172 ((x2716 x364)) Int (ite x907 (x580 x2716) (ite x2619 (x580 x2716) (ite x1066 (ite x2658 (x2032 x2716) (x1726 x2716)) (x580 x2716)))))
(define-fun x2718 ((x2716 x364)) Int (ite x2212 (x1172 x2716) (ite x940 (x580 x2716) (ite x875 (x2070 x2716) (ite x1314 (x548 x2716) (ite x1922 (x548 x2716) (ite x2664 (x548 x2716) (ite x2275 (x548 x2716) (ite x2133 (x1172 x2716) (ite x1343 (x580 x2716) (x2070 x2716)))))))))))
(define-fun x392 ((x2716 x364)) Int (ite x1659 (x2718 x2716) (x1172 x2716)))
(define-fun x1813 ((x2716 x364)) Int (ite (= x2288 x2716) x917 (x548 x2716)))
(define-fun x2134 ((x2716 x364)) Int (ite x2003 (x1813 x2716) (ite x660 (x548 x2716) (ite x896 (x548 x2716) (ite x1927 (x548 x2716) (ite x1548 (x1813 x2716) (x548 x2716)))))))
(define-fun x2528 ((x2716 x364)) Int (ite (= x2716 x2034) x1980 (x1813 x2716)))
(define-fun x1783 ((x2716 x364)) Int (ite x2747 (x548 x2716) (ite x1714 (x548 x2716) (ite x865 (ite x923 (x2134 x2716) (x2528 x2716)) (x548 x2716)))))
(define-fun x305 ((x2716 x364)) Int (ite (= x279 x2716) x2419 (x1783 x2716)))
(define-fun x104 ((x2716 x364)) Int (ite x328 (x305 x2716) (ite x475 (x1783 x2716) (ite x915 (x1783 x2716) (ite x2193 (x1783 x2716) (ite x602 (x305 x2716) (x1783 x2716)))))))
(define-fun x1233 ((x2716 x364)) Int (ite (= x668 x2716) x2139 (x305 x2716)))
(define-fun x1260 ((x2716 x364)) Int (ite x2763 (x1783 x2716) (ite x685 (x1783 x2716) (ite x1467 (ite x1100 (x104 x2716) (x1233 x2716)) (x1783 x2716)))))
(define-fun x1968 ((x2716 x364)) Int (ite (= x692 x2716) x2701 (x1260 x2716)))
(define-fun x570 ((x2716 x364)) Int (ite x1944 (x1968 x2716) (ite x363 (x1260 x2716) (ite x1633 (x1260 x2716) (ite x1258 (x1260 x2716) (ite x2691 (x1968 x2716) (x1260 x2716)))))))
(define-fun x1526 ((x2716 x364)) Int (ite (= x2716 x96) x2090 (x1968 x2716)))
(define-fun x1418 ((x2716 x364)) Int (ite x1593 (x1260 x2716) (ite x814 (x1260 x2716) (ite x1166 (ite x2185 (x570 x2716) (x1526 x2716)) (x1260 x2716)))))
(define-fun x2281 ((x2716 x364)) Int (ite x2233 (x1418 x2716) (ite x2722 (x1260 x2716) (ite x2714 (x1783 x2716) (ite x874 (x548 x2716) (ite x1313 (x548 x2716) (ite x237 (x548 x2716) (ite x1695 (x548 x2716) (ite x2274 (x1418 x2716) (ite x766 (x1260 x2716) (x1783 x2716)))))))))))
(define-fun x379 ((x2716 x364)) Int (ite x2684 (x2281 x2716) (x1418 x2716)))
(define-fun x2142 ((x2716 x364)) Int (ite x2556 (x548 x2716) (ite x224 (x548 x2716) (ite x1158 (x392 x2716) (x379 x2716)))))
(define-fun x1475 ((x2716 x364)) Int (ite (= x445 x2716) x798 (x2140 x2716)))
(define-fun x1219 ((x2716 x364)) Int (ite x553 (x1475 x2716) (ite x1289 (x2140 x2716) (ite x1948 (x2140 x2716) (ite x1950 (x2140 x2716) (ite x1432 (x1475 x2716) (x2140 x2716)))))))
(define-fun x4 ((x2716 x364)) Int (ite (= x2641 x2716) x2407 (x1475 x2716)))
(define-fun x2421 ((x2716 x364)) Int (ite x137 (x2140 x2716) (ite x115 (x2140 x2716) (ite x339 (x2140 x2716) (ite x2433 (x1219 x2716) (x4 x2716))))))
(define-fun x2339 ((x2716 x364)) Int (ite (= x1599 x2716) x1201 (x2421 x2716)))
(define-fun x897 ((x2716 x364)) Int (ite x1093 (x2339 x2716) (ite x1385 (x2421 x2716) (ite x1041 (x2421 x2716) (ite x1190 (x2421 x2716) (ite x936 (x2339 x2716) (x2421 x2716)))))))
(define-fun x186 ((x2716 x364)) Int (ite (= x610 x2716) x631 (x2339 x2716)))
(define-fun x1074 ((x2716 x364)) Int (ite x1722 (x2421 x2716) (ite x559 (x2421 x2716) (ite x1733 (x2421 x2716) (ite x994 (x897 x2716) (x186 x2716))))))
(define-fun x2331 ((x2716 x364)) Int (ite (= x1354 x2716) x517 (x1074 x2716)))
(define-fun x402 ((x2716 x364)) Int (ite x90 (x2331 x2716) (ite x324 (x1074 x2716) (ite x201 (x1074 x2716) (ite x2538 (x1074 x2716) (ite x943 (x2331 x2716) (x1074 x2716)))))))
(define-fun x1773 ((x2716 x364)) Int (ite (= x1681 x2716) x811 (x2331 x2716)))
(define-fun x1854 ((x2716 x364)) Int (ite x907 (x1074 x2716) (ite x2619 (x1074 x2716) (ite x1066 (x1074 x2716) (ite x2452 (x402 x2716) (x1773 x2716))))))
(define-fun x184 ((x2716 x364)) Int (ite x2212 (x1854 x2716) (ite x940 (x1074 x2716) (ite x875 (x2421 x2716) (ite x1314 (x2140 x2716) (ite x1922 (x2140 x2716) (ite x2664 (x2140 x2716) (ite x2275 (x2140 x2716) (ite x2133 (x1854 x2716) (ite x1343 (x1074 x2716) (x2421 x2716)))))))))))
(define-fun x687 ((x2716 x364)) Int (ite x1659 (x184 x2716) (x1854 x2716)))
(define-fun x2417 ((x2716 x364)) Int (ite (= x141 x2716) x2208 (x2140 x2716)))
(define-fun x1527 ((x2716 x364)) Int (ite x2671 (x2417 x2716) (ite x2412 (x2140 x2716) (ite x2290 (x2140 x2716) (ite x1962 (x2140 x2716) (ite x493 (x2417 x2716) (x2140 x2716)))))))
(define-fun x2442 ((x2716 x364)) Int (ite (= x680 x2716) x592 (x2417 x2716)))
(define-fun x196 ((x2716 x364)) Int (ite x2747 (x2140 x2716) (ite x1714 (x2140 x2716) (ite x865 (x2140 x2716) (ite x1088 (x1527 x2716) (x2442 x2716))))))
(define-fun x257 ((x2716 x364)) Int (ite (= x2716 x937) x2521 (x196 x2716)))
(define-fun x698 ((x2716 x364)) Int (ite x1990 (x257 x2716) (ite x2018 (x196 x2716) (ite x2692 (x196 x2716) (ite x98 (x196 x2716) (ite x1740 (x257 x2716) (x196 x2716)))))))
(define-fun x114 ((x2716 x364)) Int (ite (= x2716 x1958) x883 (x257 x2716)))
(define-fun x1993 ((x2716 x364)) Int (ite x2763 (x196 x2716) (ite x685 (x196 x2716) (ite x1467 (x196 x2716) (ite x446 (x698 x2716) (x114 x2716))))))
(define-fun x2008 ((x2716 x364)) Int (ite (= x418 x2716) x2050 (x1993 x2716)))
(define-fun x1904 ((x2716 x364)) Int (ite x1913 (x2008 x2716) (ite x1519 (x1993 x2716) (ite x786 (x1993 x2716) (ite x1175 (x1993 x2716) (ite x240 (x2008 x2716) (x1993 x2716)))))))
(define-fun x1433 ((x2716 x364)) Int (ite (= x2693 x2716) x383 (x2008 x2716)))
(define-fun x2476 ((x2716 x364)) Int (ite x1593 (x1993 x2716) (ite x814 (x1993 x2716) (ite x1166 (x1993 x2716) (ite x297 (x1904 x2716) (x1433 x2716))))))
(define-fun x919 ((x2716 x364)) Int (ite x2233 (x2476 x2716) (ite x2722 (x1993 x2716) (ite x2714 (x196 x2716) (ite x874 (x2140 x2716) (ite x1313 (x2140 x2716) (ite x237 (x2140 x2716) (ite x1695 (x2140 x2716) (ite x2274 (x2476 x2716) (ite x766 (x1993 x2716) (x196 x2716)))))))))))
(define-fun x571 ((x2716 x364)) Int (ite x2684 (x919 x2716) (x2476 x2716)))
(define-fun x598 ((x2716 x364)) Int (ite x2556 (x2140 x2716) (ite x224 (x2140 x2716) (ite x1158 (x687 x2716) (x571 x2716)))))
(define-fun x2689 ((x2716 x364)) Int (ite (= x888 x2716) x1596 (x255 x2716)))
(define-fun x2462 ((x2716 x364)) Int (ite x217 (x2689 x2716) (ite x477 (x255 x2716) (ite x1670 (x255 x2716) (ite x2273 (x255 x2716) (ite x539 (x2689 x2716) (x255 x2716)))))))
(define-fun x1364 ((x2716 x364)) Int (ite (= x2716 x1703) x2113 (x2689 x2716)))
(define-fun x2093 ((x2716 x364)) Int (ite x137 (ite x1459 (x2462 x2716) (x1364 x2716)) (x255 x2716)))
(define-fun x847 ((x2716 x364)) Int (ite (= x2716 x317) x2085 (x2093 x2716)))
(define-fun x1940 ((x2716 x364)) Int (ite x2007 (x847 x2716) (ite x173 (x2093 x2716) (ite x1281 (x2093 x2716) (ite x2220 (x2093 x2716) (ite x1675 (x847 x2716) (x2093 x2716)))))))
(define-fun x2581 ((x2716 x364)) Int (ite (= x2716 x476) x2409 (x847 x2716)))
(define-fun x2682 ((x2716 x364)) Int (ite x1722 (ite x1297 (x1940 x2716) (x2581 x2716)) (x2093 x2716)))
(define-fun x2252 ((x2716 x364)) Int (ite (= x1029 x2716) x881 (x2682 x2716)))
(define-fun x393 ((x2716 x364)) Int (ite x1468 (x2252 x2716) (ite x914 (x2682 x2716) (ite x1486 (x2682 x2716) (ite x1185 (x2682 x2716) (ite x1847 (x2252 x2716) (x2682 x2716)))))))
(define-fun x554 ((x2716 x364)) Int (ite (= x2245 x2716) x321 (x2252 x2716)))
(define-fun x576 ((x2716 x364)) Int (ite x907 (ite x2744 (x393 x2716) (x554 x2716)) (x2682 x2716)))
(define-fun x2643 ((x2716 x364)) Int (ite x2212 (x576 x2716) (ite x940 (x2682 x2716) (ite x875 (x2093 x2716) (ite x1314 (x255 x2716) (ite x1922 (x255 x2716) (ite x2664 (x255 x2716) (ite x2275 (x255 x2716) (ite x2133 (x576 x2716) (ite x1343 (x2682 x2716) (x2093 x2716)))))))))))
(define-fun x1076 ((x2716 x364)) Int (ite x1659 (x2643 x2716) (x576 x2716)))
(define-fun x853 ((x2716 x364)) Int (ite (= x703 x2716) x2069 (x255 x2716)))
(define-fun x236 ((x2716 x364)) Int (ite x2562 (x853 x2716) (ite x64 (x255 x2716) (ite x673 (x255 x2716) (ite x2186 (x255 x2716) (ite x197 (x853 x2716) (x255 x2716)))))))
(define-fun x2166 ((x2716 x364)) Int (ite (= x2716 x770) x1532 (x853 x2716)))
(define-fun x1573 ((x2716 x364)) Int (ite x2747 (ite x1669 (x236 x2716) (x2166 x2716)) (x255 x2716)))
(define-fun x5 ((x2716 x364)) Int (ite (= x2716 x2565) x1863 (x1573 x2716)))
(define-fun x1808 ((x2716 x364)) Int (ite x1359 (x5 x2716) (ite x856 (x1573 x2716) (ite x683 (x1573 x2716) (ite x2431 (x1573 x2716) (ite x1875 (x5 x2716) (x1573 x2716)))))))
(define-fun x1767 ((x2716 x364)) Int (ite (= x1420 x2716) x731 (x5 x2716)))
(define-fun x1101 ((x2716 x364)) Int (ite x2763 (ite x1644 (x1808 x2716) (x1767 x2716)) (x1573 x2716)))
(define-fun x496 ((x2716 x364)) Int (ite (= x491 x2716) x2642 (x1101 x2716)))
(define-fun x691 ((x2716 x364)) Int (ite x797 (x496 x2716) (ite x2549 (x1101 x2716) (ite x1276 (x1101 x2716) (ite x942 (x1101 x2716) (ite x394 (x496 x2716) (x1101 x2716)))))))
(define-fun x1829 ((x2716 x364)) Int (ite (= x1610 x2716) x1947 (x496 x2716)))
(define-fun x1920 ((x2716 x364)) Int (ite x1593 (ite x821 (x691 x2716) (x1829 x2716)) (x1101 x2716)))
(define-fun x840 ((x2716 x364)) Int (ite x2233 (x1920 x2716) (ite x2722 (x1101 x2716) (ite x2714 (x1573 x2716) (ite x874 (x255 x2716) (ite x1313 (x255 x2716) (ite x237 (x255 x2716) (ite x1695 (x255 x2716) (ite x2274 (x1920 x2716) (ite x766 (x1101 x2716) (x1573 x2716)))))))))))
(define-fun x182 ((x2716 x364)) Int (ite x2684 (x840 x2716) (x1920 x2716)))
(define-fun x2243 ((x2716 x364)) Int (ite x2556 (x255 x2716) (ite x224 (x255 x2716) (ite x1158 (x1076 x2716) (x182 x2716)))))
(define-fun x116 ((x2716 x364)) Int (ite (= x2632 x2716) x555 (x1109 x2716)))
(define-fun x2349 ((x2716 x364)) Int (ite x1308 (x116 x2716) (ite x1564 (x1109 x2716) (ite x408 (x1109 x2716) (ite x442 (x1109 x2716) (ite x1305 (x116 x2716) (x1109 x2716)))))))
(define-fun x206 ((x2716 x364)) Int (ite (= x2716 x1906) x921 (x116 x2716)))
(define-fun x148 ((x2716 x364)) Int (ite x137 (x1109 x2716) (ite x115 (ite x1437 (x2349 x2716) (x206 x2716)) (x1109 x2716))))
(define-fun x462 ((x2716 x364)) Int (ite (= x2089 x2716) x2096 (x148 x2716)))
(define-fun x1390 ((x2716 x364)) Int (ite x737 (x462 x2716) (ite x2092 (x148 x2716) (ite x2062 (x148 x2716) (ite x2629 (x148 x2716) (ite x2600 (x462 x2716) (x148 x2716)))))))
(define-fun x2551 ((x2716 x364)) Int (ite (= x2716 x1209) x1383 (x462 x2716)))
(define-fun x1602 ((x2716 x364)) Int (ite x1722 (x148 x2716) (ite x559 (ite x444 (x1390 x2716) (x2551 x2716)) (x148 x2716))))
(define-fun x1888 ((x2716 x364)) Int (ite (= x632 x2716) x589 (x1602 x2716)))
(define-fun x1967 ((x2716 x364)) Int (ite x1246 (x1888 x2716) (ite x436 (x1602 x2716) (ite x624 (x1602 x2716) (ite x922 (x1602 x2716) (ite x2117 (x1888 x2716) (x1602 x2716)))))))
(define-fun x2172 ((x2716 x364)) Int (ite (= x1227 x2716) x1223 (x1888 x2716)))
(define-fun x503 ((x2716 x364)) Int (ite x907 (x1602 x2716) (ite x2619 (ite x2498 (x1967 x2716) (x2172 x2716)) (x1602 x2716))))
(define-fun x547 ((x2716 x364)) Int (ite x2212 (x503 x2716) (ite x940 (x1602 x2716) (ite x875 (x148 x2716) (ite x1314 (x1109 x2716) (ite x1922 (x1109 x2716) (ite x2664 (x1109 x2716) (ite x2275 (x1109 x2716) (ite x2133 (x503 x2716) (ite x1343 (x1602 x2716) (x148 x2716)))))))))))
(define-fun x2446 ((x2716 x364)) Int (ite x1659 (x547 x2716) (x503 x2716)))
(define-fun x710 ((x2716 x364)) Int (ite (= x2321 x2716) x894 (x1109 x2716)))
(define-fun x434 ((x2716 x364)) Int (ite x309 (x710 x2716) (ite x1368 (x1109 x2716) (ite x2253 (x1109 x2716) (ite x754 (x1109 x2716) (ite x1280 (x710 x2716) (x1109 x2716)))))))
(define-fun x1387 ((x2716 x364)) Int (ite (= x2716 x1999) x801 (x710 x2716)))
(define-fun x1748 ((x2716 x364)) Int (ite x2747 (x1109 x2716) (ite x1714 (ite x667 (x434 x2716) (x1387 x2716)) (x1109 x2716))))
(define-fun x1462 ((x2716 x364)) Int (ite (= x1667 x2716) x2145 (x1748 x2716)))
(define-fun x2072 ((x2716 x364)) Int (ite x851 (x1462 x2716) (ite x1441 (x1748 x2716) (ite x507 (x1748 x2716) (ite x650 (x1748 x2716) (ite x2674 (x1462 x2716) (x1748 x2716)))))))
(define-fun x817 ((x2716 x364)) Int (ite (= x2634 x2716) x529 (x1462 x2716)))
(define-fun x2604 ((x2716 x364)) Int (ite x2763 (x1748 x2716) (ite x685 (ite x2430 (x2072 x2716) (x817 x2716)) (x1748 x2716))))
(define-fun x2530 ((x2716 x364)) Int (ite (= x208 x2716) x1114 (x2604 x2716)))
(define-fun x920 ((x2716 x364)) Int (ite x826 (x2530 x2716) (ite x397 (x2604 x2716) (ite x1161 (x2604 x2716) (ite x2198 (x2604 x2716) (ite x1736 (x2530 x2716) (x2604 x2716)))))))
(define-fun x952 ((x2716 x364)) Int (ite (= x912 x2716) x2363 (x2530 x2716)))
(define-fun x2471 ((x2716 x364)) Int (ite x1593 (x2604 x2716) (ite x814 (ite x2738 (x920 x2716) (x952 x2716)) (x2604 x2716))))
(define-fun x515 ((x2716 x364)) Int (ite x2233 (x2471 x2716) (ite x2722 (x2604 x2716) (ite x2714 (x1748 x2716) (ite x874 (x1109 x2716) (ite x1313 (x1109 x2716) (ite x237 (x1109 x2716) (ite x1695 (x1109 x2716) (ite x2274 (x2471 x2716) (ite x766 (x2604 x2716) (x1748 x2716)))))))))))
(define-fun x2728 ((x2716 x364)) Int (ite x2684 (x515 x2716) (x2471 x2716)))
(define-fun x2423 ((x2716 x364)) Int (ite x2556 (x1109 x2716) (ite x224 (x1109 x2716) (ite x1158 (x2446 x2716) (x2728 x2716)))))
(define-fun x1136 ((x2716 Int)) Int (ite (= 160 x2716) x1661 (x2314 x2716)))
(define-fun x1792 ((x2716 Int)) Int (ite x1363 (x2314 x2716) (x1136 x2716)))
(define-fun x362 ((x2716 Int)) Int (ite (= x2716 x2257) 65943510083598082279227955258803319933472635617035506777028864765220054106112 (x1792 x2716)))
(define-fun x783 ((x2716 Int)) Int (ite (= x2716 x1036) x1261 (x362 x2716)))
(define-fun x423 ((x2716 Int)) Int (ite (= x2257 x2716) 74228146054641364427485594382366355075153451190847473373747070783662162182144 (x783 x2716)))
(define-fun x391 ((x2716 Int)) Int (ite (= x2716 x2001) x2578 (x423 x2716)))
(define-fun x2183 ((x2716 Int)) Int (ite (= x2716 128) 72223263258191293651604190264004579703475585967499159981614695267027195527168 (x2158 x2716)))
(define-fun x993 ((x2716 Int)) Int (ite (= x2716 132) x699 (x2183 x2716)))
(define-fun x249 ((x2716 Int)) Int (ite (= x2716 164) x1666 (x993 x2716)))
(define-fun x261 ((x2716 Int)) Int (ite (= x2716 x2257) x747 (x391 x2716)))
(define-fun x1135 ((x2716 Int)) Int (ite (and (> (+ x1173 x80) x2716) (>= x2716 x1173)) (x1503 (+ (- x2716 x1173) x1182)) (x261 x2716)))
(define-fun x635 ((x2716 Int)) Int (ite x1800 (x261 x2716) (x1135 x2716)))
(define-fun x346 ((x2716 Int)) Int (ite (= x1807 x2716) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x635 x2716)))
(define-fun x1614 ((x2716 Int)) Int (ite (= x1692 x2716) x804 (x346 x2716)))
(define-fun x1907 ((x2716 Int)) Int (ite (= 0 x2716) x2071 (x2164 x2716)))
(define-fun x124 ((x2716 Int)) Int (ite (= x2716 x1807) x2071 (x1614 x2716)))
(define-fun x8 ((x2716 Int)) Int (ite (= x2716 0) x1971 (x2164 x2716)))
(define-fun x1960 ((x2716 Int)) Int (ite (= x2716 x1807) x1971 (x1614 x2716)))
(define-fun x234 ((x2716 Int)) Int (ite (= x2716 0) x30 (x2164 x2716)))
(define-fun x2543 ((x2716 Int)) Int (ite (= x1807 x2716) x30 (x1614 x2716)))
(define-fun x2719 ((x2716 Int)) Int (ite (= x2716 0) x1142 (x2164 x2716)))
(define-fun x306 ((x2716 Int)) Int (ite (= x2716 x1807) x1142 (x1614 x2716)))
(define-fun x438 ((x2716 Int)) Int (ite x2276 (ite x2552 (x1614 x2716) (x124 x2716)) (ite x183 (ite x2228 (x1614 x2716) (x1960 x2716)) (ite x1012 (ite x1480 (x1614 x2716) (x2543 x2716)) (ite x1623 (x1614 x2716) (x306 x2716))))))
(define-fun x2073 ((x2716 Int)) Int (ite (= x568 x2716) x2368 (x438 x2716)))
(define-fun x1304 ((x2716 Int)) Int (ite (= x2107 x2716) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x2073 x2716)))
(define-fun x1236 ((x2716 Int)) Int (ite (= x2509 x2716) x1928 (x1304 x2716)))
(define-fun x1193 ((x2716 Int)) Int (ite (= x2716 x760) x2368 (x1236 x2716)))
(define-fun x492 ((x2716 Int)) Int (ite (= 0 x2716) x2327 (x1193 x2716)))
(define-fun x293 ((x2716 Int)) Int (ite (= 0 x2716) x502 (x1193 x2716)))
(define-fun x2266 ((x2716 Int)) Int (ite (= x2716 0) x2700 (x1193 x2716)))
(define-fun x2111 ((x2716 Int)) Int (ite (= 0 x2716) x498 (x1193 x2716)))
(define-fun x1673 ((x2716 Int)) Int (ite x1992 (ite x1372 (x1193 x2716) (x492 x2716)) (ite x310 (ite x1674 (x1193 x2716) (x293 x2716)) (ite x2414 (ite x288 (x1193 x2716) (x2266 x2716)) (ite x852 (x1193 x2716) (x2111 x2716))))))
(define-fun x2106 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x1039 x2716)))
(define-fun x1638 ((x2716 Int)) Int (ite x1372 (x1039 x2716) (x2106 x2716)))
(define-fun x350 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x1039 x2716)))
(define-fun x2475 ((x2716 Int)) Int (ite x1674 (x1039 x2716) (x350 x2716)))
(define-fun x1021 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x1039 x2716)))
(define-fun x216 ((x2716 Int)) Int (ite x288 (x1039 x2716) (x1021 x2716)))
(define-fun x697 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x1039 x2716)))
(define-fun x2278 ((x2716 Int)) Int (ite x852 (x1039 x2716) (x697 x2716)))
(define-fun x2241 ((x2716 Int)) Int (ite x1992 (x1638 x2716) (ite x310 (x2475 x2716) (ite x2414 (x216 x2716) (x2278 x2716)))))
(define-fun x1512 ((x2716 Int)) Int (ite (and (< x2716 (+ 0 x1395)) (<= 0 x2716)) (x2241 (+ 0 (- x2716 0))) (x1673 x2716)))
(define-fun x1582 ((x2716 Int)) Int (ite x1235 (x1673 x2716) (x1512 x2716)))
(define-fun x2440 ((x2716 Int)) Int (ite x1423 (x438 x2716) (x1582 x2716)))
(define-fun x1080 ((x2716 x364)) Int (ite (= x78 x2716) x372 (x598 x2716)))
(define-fun x1139 ((x2716 x364)) Int (ite x558 (x1080 x2716) (ite x2385 (x598 x2716) (ite x1491 (x598 x2716) (ite x1430 (x598 x2716) (ite x128 (x1080 x2716) (x598 x2716)))))))
(define-fun x1745 ((x2716 x364)) Int (ite (= x2501 x2716) x2084 (x1080 x2716)))
(define-fun x347 ((x2716 x364)) Int (ite x852 (x1139 x2716) (x1745 x2716)))
(define-fun x2713 ((x2716 x364)) Int (ite x1992 (x598 x2716) (ite x310 (x598 x2716) (ite x2414 (x598 x2716) (x347 x2716)))))
(define-fun x1118 ((x2716 x364)) Int (ite x1423 (x598 x2716) (x2713 x2716)))
(define-fun x2384 ((x2716 Int)) Int (ite x827 (x635 x2716) (ite x1997 (x635 x2716) (x2440 x2716))))
(define-fun x900 ((x2716 x364)) Int (ite x827 (x598 x2716) (ite x1997 (x598 x2716) (x1118 x2716))))
(define-fun x1249 ((x2716 Int)) Int (ite (= x1567 x2716) x1942 (x2384 x2716)))
(define-fun x2698 ((x2716 Int)) Int (ite (= x1852 x2716) x905 (x1249 x2716)))
(define-fun x1410 ((x2716 Int)) Int (ite (= x145 x2716) x1707 (x2698 x2716)))
(define-fun x375 ((x2716 Int)) Int (ite (= x1972 x2716) x845 (x1410 x2716)))
(define-fun x24 ((x2716 Int)) Int (ite (= x793 x2716) x232 (x375 x2716)))
(define-fun x2635 ((x2716 Int)) Int (ite (= x2716 128) 48119142951092613731468242753959111846395615040638799039548226541748339343360 (x679 x2716)))
(define-fun x1256 ((x2716 Int)) Int (ite (= x2716 132) x2302 (x2635 x2716)))
(define-fun x844 ((x2716 Int)) Int (ite (= x2716 128) 16284467712533504949339770971755156993396464521235680726719773044698144309248 (x2401 x2716)))
(define-fun x2585 ((x2716 Int)) Int (ite (= 132 x2716) x699 (x844 x2716)))
(define-fun x2082 ((x2716 Int)) Int (ite (= 164 x2716) x311 (x2585 x2716)))
(define-fun x2103 ((x2716 Int)) Int (ite (= x1912 x2716) x380 (x24 x2716)))
(define-fun x882 ((x2716 Int)) Int (ite (= x2716 128) x311 (x1256 x2716)))
(define-fun x1369 ((x2716 Int)) Int (ite x1082 (x1256 x2716) (x882 x2716)))
(define-fun x482 ((x2716 Int)) Int (ite (= x2716 x111) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1369 x2716)))
(define-fun x712 ((x2716 Int)) Int (ite (= x308 x2716) x56 (x482 x2716)))
(define-fun x254 ((x2716 Int)) Int (ite (= x1938 x2716) x450 (x712 x2716)))
(define-fun x961 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x509 x2716)))
(define-fun x2472 ((x2716 Int)) Int (ite (= x2716 0) 1 (x509 x2716)))
(define-fun x1715 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x509 x2716)))
(define-fun x533 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x509 x2716)))
(define-fun x2146 ((x2716 x364)) Int (ite (= x1611 x2716) x2576 (x2243 x2716)))
(define-fun x1861 ((x2716 x364)) Int (ite (= x2716 x398) x600 (x2423 x2716)))
(define-fun x1434 ((x2716 x364)) Int (ite (= x2038 x2716) x1040 (x2142 x2716)))
(define-fun x2054 ((x2716 Int)) Int (ite x1840 (x509 x2716) (x961 x2716)))
(define-fun x906 ((x2716 Int)) Int (ite x2646 (x509 x2716) (x2472 x2716)))
(define-fun x2708 ((x2716 Int)) Int (ite x2757 (x509 x2716) (x1715 x2716)))
(define-fun x1058 ((x2716 Int)) Int (ite x2204 (x509 x2716) (x533 x2716)))
(define-fun x1017 ((x2716 Int)) Int (ite x980 (x2054 x2716) (ite x1024 (x906 x2716) (ite x1416 (x2708 x2716) (x1058 x2716)))))
(define-fun x2633 ((x2716 Int)) Int (ite (= x2716 128) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x277 x2716)))
(define-fun x2005 ((x2716 Int)) Int (ite (= x2716 132) x103 (x2633 x2716)))
(define-fun x75 ((x2716 Int)) Int (ite (= x2716 164) x537 (x2005 x2716)))
(define-fun x1268 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x1070 x2716)))
(define-fun x289 ((x2716 Int)) Int (ite (= 128 x2716) 1 (x75 x2716)))
(define-fun x2730 ((x2716 Int)) Int (ite (= x2716 0) 1 (x1070 x2716)))
(define-fun x2416 ((x2716 Int)) Int (ite (= 128 x2716) 1 (x75 x2716)))
(define-fun x1591 ((x2716 Int)) Int (ite (= x2716 0) 1 (x1070 x2716)))
(define-fun x348 ((x2716 Int)) Int (ite (= x2716 128) 1 (x75 x2716)))
(define-fun x2382 ((x2716 Int)) Int (ite (= x2716 0) 1 (x1070 x2716)))
(define-fun x1417 ((x2716 Int)) Int (ite (= x2716 128) 1 (x75 x2716)))
(define-fun x575 ((x2716 Int)) Int (ite x2747 (ite x1669 (x75 x2716) (x289 x2716)) (ite x1714 (ite x667 (x75 x2716) (x2416 x2716)) (ite x865 (ite x923 (x75 x2716) (x348 x2716)) (ite x1088 (x75 x2716) (x1417 x2716))))))
(define-fun x968 ((x2716 Int)) Int (ite (= x52 x2716) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x575 x2716)))
(define-fun x1712 ((x2716 Int)) Int (ite (= x2716 x1212) x103 (x968 x2716)))
(define-fun x1871 ((x2716 Int)) Int (ite (= x353 x2716) x83 (x1712 x2716)))
(define-fun x215 ((x2716 Int)) Int (ite (= x2716 0) 1 (x1325 x2716)))
(define-fun x1778 ((x2716 Int)) Int (ite (= x2716 x52) 1 (x1871 x2716)))
(define-fun x1699 ((x2716 Int)) Int (ite (= x2716 0) 1 (x1325 x2716)))
(define-fun x946 ((x2716 Int)) Int (ite (= x2716 x52) 1 (x1871 x2716)))
(define-fun x2584 ((x2716 Int)) Int (ite (= x2716 0) 1 (x1325 x2716)))
(define-fun x385 ((x2716 Int)) Int (ite (= x52 x2716) 1 (x1871 x2716)))
(define-fun x1053 ((x2716 Int)) Int (ite (= x2716 0) 1 (x1325 x2716)))
(define-fun x1226 ((x2716 Int)) Int (ite (= x2716 x52) 1 (x1871 x2716)))
(define-fun x1652 ((x2716 Int)) Int (ite x2763 (ite x1644 (x1871 x2716) (x1778 x2716)) (ite x685 (ite x2430 (x1871 x2716) (x946 x2716)) (ite x1467 (ite x1100 (x1871 x2716) (x385 x2716)) (ite x446 (x1871 x2716) (x1226 x2716))))))
(define-fun x1342 ((x2716 Int)) Int (ite (= x2716 x2261) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1652 x2716)))
(define-fun x303 ((x2716 Int)) Int (ite (= x2716 x1086) x103 (x1342 x2716)))
(define-fun x1340 ((x2716 Int)) Int (ite (= x2716 x1535) x2014 (x303 x2716)))
(define-fun x1533 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x1311 x2716)))
(define-fun x1711 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x1311 x2716)))
(define-fun x1587 ((x2716 Int)) Int (ite (= x2716 0) 1 (x1311 x2716)))
(define-fun x1731 ((x2716 Int)) Int (ite (= x2716 0) 1 (x1311 x2716)))
(define-fun x2359 ((x2716 Int)) Int (ite (= 128 x2716) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x693 x2716)))
(define-fun x1169 ((x2716 Int)) Int (ite (= 132 x2716) x69 (x2359 x2716)))
(define-fun x1987 ((x2716 Int)) Int (ite (= x2716 164) x1878 (x1169 x2716)))
(define-fun x2122 ((x2716 Int)) Int (ite (= x2716 0) 1 (x2420 x2716)))
(define-fun x203 ((x2716 Int)) Int (ite (= x2716 128) 1 (x1987 x2716)))
(define-fun x2100 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x2420 x2716)))
(define-fun x189 ((x2716 Int)) Int (ite (= 128 x2716) 1 (x1987 x2716)))
(define-fun x541 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x2420 x2716)))
(define-fun x745 ((x2716 Int)) Int (ite (= 128 x2716) 1 (x1987 x2716)))
(define-fun x1155 ((x2716 Int)) Int (ite (= x2716 0) 1 (x2420 x2716)))
(define-fun x1178 ((x2716 Int)) Int (ite (= x2716 128) 1 (x1987 x2716)))
(define-fun x163 ((x2716 Int)) Int (ite x137 (ite x1459 (x1987 x2716) (x203 x2716)) (ite x115 (ite x1437 (x1987 x2716) (x189 x2716)) (ite x339 (ite x2095 (x1987 x2716) (x745 x2716)) (ite x2433 (x1987 x2716) (x1178 x2716))))))
(define-fun x1085 ((x2716 Int)) Int (ite (= x139 x2716) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x163 x2716)))
(define-fun x2346 ((x2716 Int)) Int (ite (= x612 x2716) x69 (x1085 x2716)))
(define-fun x290 ((x2716 Int)) Int (ite (= x1026 x2716) x950 (x2346 x2716)))
(define-fun x2209 ((x2716 Int)) Int (ite (= x2716 0) 1 (x218 x2716)))
(define-fun x2766 ((x2716 Int)) Int (ite (= x139 x2716) 1 (x290 x2716)))
(define-fun x122 ((x2716 Int)) Int (ite (= x2716 0) 1 (x218 x2716)))
(define-fun x590 ((x2716 Int)) Int (ite (= x139 x2716) 1 (x290 x2716)))
(define-fun x664 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x218 x2716)))
(define-fun x2041 ((x2716 Int)) Int (ite (= x139 x2716) 1 (x290 x2716)))
(define-fun x2380 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x218 x2716)))
(define-fun x50 ((x2716 Int)) Int (ite (= x2716 x139) 1 (x290 x2716)))
(define-fun x1690 ((x2716 Int)) Int (ite x1722 (ite x1297 (x290 x2716) (x2766 x2716)) (ite x559 (ite x444 (x290 x2716) (x590 x2716)) (ite x1733 (ite x654 (x290 x2716) (x2041 x2716)) (ite x994 (x290 x2716) (x50 x2716))))))
(define-fun x2732 ((x2716 Int)) Int (ite (= x2716 x2177) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1690 x2716)))
(define-fun x816 ((x2716 Int)) Int (ite (= x2716 x1809) x69 (x2732 x2716)))
(define-fun x213 ((x2716 Int)) Int (ite (= x2716 x2410) x1248 (x816 x2716)))
(define-fun x44 ((x2716 Int)) Int (ite (= x2716 0) 1 (x2232 x2716)))
(define-fun x1232 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x2232 x2716)))
(define-fun x868 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x2232 x2716)))
(define-fun x2263 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x2232 x2716)))
(define-fun x608 ((x2716 Int)) Int (ite (= 128 x2716) 29289127993025145568725129057828671567744754166070328588094505464281371246592 (x2082 x2716)))
(define-fun x927 ((x2716 Int)) Int (ite (= x2716 132) x699 (x608 x2716)))
(define-fun x1034 ((x2716 Int)) Int (ite (= x2716 164) x311 (x927 x2716)))
(define-fun x884 ((x2716 Int)) Int (ite (= 0 x2716) 1 (x1214 x2716)))
(define-fun x1278 ((x2716 Int)) Int (ite (= x2716 0) 1 (x1214 x2716)))
(define-fun x510 ((x2716 Int)) Int (ite (= x2716 0) x311 (x563 x2716)))
(define-fun x1151 ((x2716 Int)) Int (ite x1644 (x1325 x2716) (x215 x2716)))
(define-fun x810 ((x2716 Int)) Int (ite x2430 (x1325 x2716) (x1699 x2716)))
(define-fun x1838 ((x2716 Int)) Int (ite x1100 (x1325 x2716) (x2584 x2716)))
(define-fun x229 ((x2716 Int)) Int (ite x446 (x1325 x2716) (x1053 x2716)))
(define-fun x136 ((x2716 Int)) Int (ite x2763 (x1151 x2716) (ite x685 (x810 x2716) (ite x1467 (x1838 x2716) (x229 x2716)))))
(define-fun x2187 ((x2716 Int)) Int (ite x821 (x1311 x2716) (x1533 x2716)))
(define-fun x1941 ((x2716 Int)) Int (ite x2738 (x1311 x2716) (x1711 x2716)))
(define-fun x2769 ((x2716 Int)) Int (ite x2185 (x1311 x2716) (x1587 x2716)))
(define-fun x343 ((x2716 Int)) Int (ite x297 (x1311 x2716) (x1731 x2716)))
(define-fun x2300 ((x2716 Int)) Int (ite x1593 (x2187 x2716) (ite x814 (x1941 x2716) (ite x1166 (x2769 x2716) (x343 x2716)))))
(define-fun x640 ((x2716 Int)) Int (ite x1297 (x218 x2716) (x2209 x2716)))
(define-fun x974 ((x2716 Int)) Int (ite x444 (x218 x2716) (x122 x2716)))
(define-fun x777 ((x2716 Int)) Int (ite x654 (x218 x2716) (x664 x2716)))
(define-fun x79 ((x2716 Int)) Int (ite x994 (x218 x2716) (x2380 x2716)))
(define-fun x1799 ((x2716 Int)) Int (ite x1722 (x640 x2716) (ite x559 (x974 x2716) (ite x1733 (x777 x2716) (x79 x2716)))))
(define-fun x1805 ((x2716 Int)) Int (ite x2744 (x2232 x2716) (x44 x2716)))
(define-fun x448 ((x2716 Int)) Int (ite x2498 (x2232 x2716) (x1232 x2716)))
(define-fun x1131 ((x2716 Int)) Int (ite x2658 (x2232 x2716) (x868 x2716)))
(define-fun x2190 ((x2716 Int)) Int (ite x2452 (x2232 x2716) (x2263 x2716)))
(define-fun x1624 ((x2716 Int)) Int (ite x907 (x1805 x2716) (ite x2619 (x448 x2716) (ite x1066 (x1131 x2716) (x2190 x2716)))))
(define-fun x1746 ((x2716 Int)) Int (ite x1224 (x1214 x2716) (x884 x2716)))
(define-fun x153 ((x2716 Int)) Int (ite x702 (x1214 x2716) (x1278 x2716)))
(define-fun x1488 ((x2716 Int)) Int (ite x2141 (x1746 x2716) (x153 x2716)))
(define-fun x1107 ((x1332 Int)) Bool (=> (and (not (= x1332 1926446194)) (< 10000 x1332) (not (= x1332 1784838210)) (not (= 3648997476 x1332)) (not (= x1332 2514000705)) (not (= x1332 2646777772)) (not (= x1332 1461501637330902918203684832716283019655932542975)) (not (= x1332 2835717307)) (not (= 2753274959 x1332)) (not (= x1332 2569309863)) (not (= 604024478 x1332)) (not (= x1332 2867092931)) (not (= 614698425 x1332)) (not (= x1332 1461501637330902918203684832716283019655932542976)) (not (= 18446744073709551615 x1332)) (not (= 29289127993025145568725129057828671567744754166070328588094505464281371246592 x1332)) (not (= x1332 2445980732)) (not (= 1889567281 x1332)) (not (= 1086394137 x1332)) (not (= x1332 565014339)) (not (= 3467235951 x1332)) (not (= x1332 856900995)) (not (= 2678909723 x1332)) (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1332)) (not (= 3053082678 x1332)) (not (= 72223263258191293651604190264004579703475585967499159981614695267027195527168 x1332)) (not (= 3756033516 x1332)) (not (= x1332 3459381112)) (not (= 74228146054641364427485594382366355075153451190847473373747070783662162182144 x1332)) (not (= 65943510083598082279227955258803319933472635617035506777028864765220054106112 x1332)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1332)) (not (= x1332 2737736067)) (not (= x1332 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x1332 826074471)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1332)) (not (= x1332 872247156)) (not (= 2952933380 x1332)) (not (= 16284467712533504949339770971755156993396464521235680726719773044698144309248 x1332)) (not (= 48119142951092613731468242753959111846395615040638799039548226541748339343360 x1332))) (not ((_ is x701) (x599 x1332)))))
(assert (= x1612 (and x1609 x351)))
(assert (x71 x891))
(assert (= x1367 (=> (and (= x2056 x1641) (= x299 x1344)) x2286)))
(assert (x71 x762))
(assert (= (and x315 x796) x2181))
(assert (x71 x1540))
(assert (x71 x2238))
(assert (= x1429 (and (not x159) x177)))
(assert (x71 x1538))
(assert (= (and x495 (not x1892)) x516))
(assert (and (x628 x2554 32) (x1401 x2554 32) (x1812 x2554 32) (=> (> 32 0) (= (+ (* 32 (x2192 x2554 32)) (x2492 x2554 32)) x2554))))
(assert (x71 x771))
(assert (x71 x1490))
(assert (x71 x725))
(assert (= (and x1072 x2427) x1574))
(assert (= x650 (and x649 x2098)))
(assert (= x1994 (and x435 x743)))
(assert (= x2379 (and x2283 x2588)))
(assert (= (and x2660 x13) x1564))
(assert (x71 x2374))
(assert (x71 x876))
(assert (x71 x308))
(assert (x71 x415))
(assert (= x1103 (=> (and (= x1206 x76) (= x2376 x1959)) x629)))
(assert (x71 x1312))
(assert (= (and x1008 (not x524)) x1113))
(assert (x71 x2459))
(assert (x71 x2143))
(assert (x71 x2136))
(assert (= (x2495 (x701 2737736067)) 2737736067))
(assert (x71 x1027))
(assert (x1016 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x354 x1501) x2254))
(assert (= (=> (and (or (and x459 (and (< 0 x1729) (= x2022 1) (= (x2621 (x599 x924)) x1729))) (and (and (= x2022 (ite x1481 1 0)) (= x1481 (not x552)) (= (= 0 x2074) x552) (= 32 x1395)) (not x459))) (and (> x678 0) (= (= 0 x1395) x459))) x68) x1932))
(assert (x71 x1334))
(assert (x71 x278))
(assert (x1107 x2157))
(assert (x71 x1229))
(assert (x71 x1856))
(assert (= (and (not x1309) x1657) x2540))
(assert (x71 x1476))
(assert (x71 x453))
(assert (x71 x1477))
(assert (x71 x87))
(assert (x71 x1680))
(assert (= (x701 3459381112) (x599 3459381112)))
(assert (x71 x2396))
(assert (x71 x845))
(assert (x1016 x2554))
(assert (x71 x1409))
(assert (x71 x1702))
(assert (x71 x1771))
(assert (= x88 (=> (= x1291 (< 0 x244)) (and (=> (not x1291) x1933) (=> (and x1291 (and (= x2364 x1964) (= x55 x2268) (= x652 x1451) (= 1 x325) (= x1355 x1218) (= x2628 x1319) (= x725 x759))) x185)))))
(assert (= (x2495 (x599 x1237)) x1237))
(assert (x71 x326))
(assert (= x183 (or x2328 x2228)))
(assert (x71 x1319))
(assert (x71 x921))
(assert (x71 x1182))
(assert (= x1255 (and (not x2599) x1398)))
(assert (x71 x2084))
(assert (x1107 x804))
(assert (= (and (not x609) x1654) x1803))
(assert (= x315 (and (not x1780) x374)))
(assert (x71 x2195))
(assert (x71 x1724))
(assert (x71 x793))
(assert (x71 x286))
(assert (x71 x2124))
(assert (= (and x1015 x2631) x1800))
(assert (x71 x2700))
(assert (= (and (not x1400) x2659) x1020))
(assert (= (and (not x2500) x2377) x1837))
(assert (x71 x1119))
(assert (= x759 (x2495 (x599 x759))))
(assert (= (or x1565 x994) x23))
(assert (x71 x291))
(assert (= (and x1704 (not x591)) x1917))
(assert (x71 x2059))
(assert (x71 x1395))
(assert (x71 x314))
(assert (= x1781 (and (not x1152) x1111)))
(assert (x71 x1186))
(assert (= (x2495 (x1031 x253 1)) (+ 1 (x2495 x253))))
(assert (= (and x1918 x867) x1645))
(assert (x71 x1336))
(assert (x2461 x55))
(assert (x71 x727))
(assert (x71 x334))
(assert (x71 x2448))
(assert (x71 x532))
(assert (x71 x529))
(assert (x71 x545))
(assert (x71 x2163))
(assert (x71 x986))
(assert (x1107 x415))
(assert (= x2431 (and x466 x748)))
(assert (x71 x2019))
(assert (x2461 x2393))
(assert (x71 x997))
(assert (x71 x1040))
(assert (x71 x2406))
(assert (x71 x1984))
(assert (x71 x504))
(assert (= (x599 856900995) (x701 856900995)))
(assert (x1107 x1493))
(assert (= x538 (and (not x1150) x955)))
(assert (x71 x1628))
(assert (= x457 (and x2215 (not x361))))
(assert (=> (>= 10000 x2312) (= (x701 x2312) (x599 x2312))))
(assert (= (x599 74228146054641364427485594382366355075153451190847473373747070783662162182144) (x701 74228146054641364427485594382366355075153451190847473373747070783662162182144)))
(assert (= x1677 (or (and x2151 x1405) x207 (and (not x561) x84))))
(assert (= x2558 (and x112 x755)))
(assert (= x2204 (or x2271 x37 x1994 x1622 x473 x1381)))
(assert (x71 x1618))
(assert (= x902 (and x1358 (not x2405))))
(assert (= (and x2236 x2168) x553))
(assert (= (or x2463 (and x155 (not x1701))) x1470))
(assert (x71 x431))
(assert (= x1437 (or x1766 x1305 x408 x1308 x442 x1564)))
(assert (x71 x1196))
(assert (x71 x568))
(assert (x71 x542))
(assert (= x841 (and (not x707) x2006)))
(assert (x71 x48))
(assert (= (and (not x744) x1894) x2290))
(assert (= (=> (and (= x1336 0) (= x1476 x2639)) x1925) x1393))
(assert (x71 x102))
(assert (= (=> (and (<= 0 x311) (= x43 32) (= 1 x1186) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)) x1045) x2174))
(assert (= (and (not x2345) x870) x2710))
(assert (= (and x2555 (not x1283)) x2692))
(assert (x71 x1902))
(assert (x71 x1553))
(assert (x71 x2394))
(assert (= x1388 (and x878 (not x1478))))
(assert (x71 x1497))
(assert (= (and x2425 x1346) x815))
(assert (x71 x335))
(assert (x71 x642))
(assert (x71 x2545))
(assert (x71 x35))
(assert (= (and x1445 x2049) x2274))
(assert (= (and x870 x2345) x211))
(assert (x71 x1554))
(assert (x71 x2071))
(assert (x2461 1461501637330902918203684832716283019655932542975))
(assert (= (and x644 x1032) x2220))
(assert (= x2062 (and x1300 (not x2066))))
(assert (x2461 x1218))
(assert (= (and (not x2336) x2667) x607))
(assert (x71 x1858))
(assert (x71 x10))
(assert (x71 x1912))
(assert (= x959 (and x2372 (not x622))))
(assert (x71 x2477))
(assert (= (x2495 (x599 x1073)) x1073))
(assert (x71 x951))
(assert (x71 x625))
(assert (= x1733 (or x654 x966)))
(assert (= (and x2269 x1620) x477))
(assert (= x1686 (=> (and (= x678 x66) (= x1395 x464)) x2755)))
(assert (= x1396 (and x345 (not x2725))))
(assert (x71 x1822))
(assert (= (and (not x287) x1851) x1894))
(assert (= (and x838 x523) x397))
(assert (= x1607 (x2495 (x599 x1607))))
(assert (x71 x403))
(assert (= (=> (and (= x2542 (x765 1461501637330902918203684832716283019655932542975 x1218)) (= x1878 (x2481 x895)) (= x895 (x795 (x599 x1030) x1583 0)) (= x1723 (x765 1461501637330902918203684832716283019655932542975 x1218)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1878) (= (x795 (x599 x1723) (x701 17) 0) x1583) (<= 0 x1878) (= x1327 128) (= (= x2542 x1785) x824)) (and (=> (and (= (= x1896 x2542) x2149) (not x824)) (and (=> (and (= (= x2542 x2067) x1637) (not x2149)) (and (=> (and (and (and (and (not (= x805 2514000705)) (not (< x281 4)) (= x2323 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x527 (x2621 (x599 x2157))) (not (= x805 1889567281)) (= x622 (or (and (< x1378 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1378) true)) (> x1378 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (> 826074471 x805)) (= x281 68) (not (= 826074471 x805)) (> x527 0) (= x1378 (x1350 (- x281 4))) (= x316 x2408) (= x281 68) (= x1878 x684) (= 2835717307 x805)) x417) (= (= x2542 x2157) x417)) (not x1637)) (and (=> x622 x979) (=> (and (= (= x2408 x316) x1444) (not x622)) (and (=> (not x1444) x979) (=> (and x1444 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x205) (= x1061 (< x205 x1878)) (= (x2140 x2015) x205) (= x2015 (x795 (x599 x1785) (x701 1) 0)) (<= 0 x205) (= x684 x1843))) (and (=> (and (= x354 (< x205 x684)) (not x1061)) (and (=> x354 x979) (=> (and (and (= x251 (x1475 x2623)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x251) (= (x1350 (- x205 x684)) x798) (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x684)) x1552) (= x445 (x795 (x599 x1785) (x701 1) 0)) (= (< x1552 x251) x2447) (<= 0 x251) (= x2623 (x795 (x599 x69) (x701 1) 0))) (not x354)) (and (=> x2447 x979) (=> (and (and (= x2407 (x2675 (+ x251 x684))) (= (< x2407 x251) x2236)) (not x2447)) (and (=> (and (and (= x192 1) (= x82 32) (= 1 x779) (= x2641 (x795 (x599 x69) (x701 1) 0))) (not x2236)) x1413) (=> x2236 x979))))))) (=> x1061 x979))))))) (=> (and x1637 (and (not (= x2572 2514000705)) (< 0 x1546) (= x1546 (x2621 (x599 x2067))) (= (or (> x425 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x425 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x425 64))) x1295) (= 68 x221) (= x2572 2835717307) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2037) (not (= 1889567281 x2572)) (= (x1350 (- x221 4)) x425) (not (= x2572 826074471)) (= x221 68) (= x316 x413) (not (> 826074471 x2572)) (not (< x221 4)) (= x736 x1878))) (and (=> (and (= x1721 (= x316 x413)) (not x1295)) (and (=> (and x1721 (and (= x846 (x548 x2559)) (= x225 x736) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x846) (= (< x846 x1878) x487) (= x2559 (x795 (x599 x1785) (x701 1) 0)) (<= 0 x846))) (and (=> (and (= (> x736 x846) x1346) (not x487)) (and (=> x1346 x2010) (=> (and (not x1346) (and (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x736)) x1891) (<= 0 x1425) (= (< x1891 x1425) x1780) (= x1425 (x2676 x913)) (= (x795 (x599 x1785) (x701 1) 0) x1183) (<= x1425 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x913 (x795 (x599 x69) (x701 1) 0)) (= (x1350 (- x846 x736)) x2653))) (and (=> (and (and (= x796 (> x1425 x1119)) (= (x2675 (+ x736 x1425)) x1119)) (not x1780)) (and (=> x796 x2010) (=> (and (and (= 1 x785) (= x543 (x795 (x599 x69) (x701 1) 0)) (= x1089 1) (= 32 x2630)) (not x796)) x2518))) (=> x1780 x2010))))) (=> x487 x2010))) (=> (not x1721) x2010))) (=> x1295 x2010))))) (=> (and x2149 (and (< 0 x1665) (not (= 2678909723 x106)) (= x1594 x1878) (= (x2621 (x599 x1896)) x1665) (= (x1350 (- x742 4)) x873) (= x2608 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 68 x742) (= x316 x752) (not (< x106 1889567281)) (not (= x106 2646777772)) (= x106 2835717307) (not (> 4 x742)) (< x106 3053082678) (not (> 2646777772 x106)) (= x742 68) (= (or (and (< x873 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x873))) (> x873 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x591))) (and (=> (and (= (= x752 x316) x1143) (not x591)) (and (=> (not x1143) x2016) (=> (and (and (>= x453 0) (= x794 (x795 (x599 x1785) (x701 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x453) (= x453 (x1109 x794)) (= x1618 x1594) (= (> x1878 x453) x2660)) x1143) (and (=> x2660 x2016) (=> (and (= x2053 (> x1594 x453)) (not x2660)) (and (=> (and (and (= (x795 (x599 x69) (x701 2) 0) x2060) (= x2259 (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1594))) (= x2291 (x116 x2060)) (= x555 (x1350 (- x453 x1594))) (= x2632 (x795 (x599 x1785) (x701 2) 0)) (>= x2291 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2291) (= (> x2291 x2259) x1584)) (not x2053)) (and (=> (and (and (= x921 (x2675 (+ x1594 x2291))) (= x342 (> x2291 x921))) (not x1584)) (and (=> x342 x2016) (=> (and (not x342) (and (= 32 x19) (= 1 x2205) (= x1906 (x795 (x599 x69) (x701 2) 0)))) x226))) (=> x1584 x2016))) (=> x2053 x2016))))))) (=> x591 x2016))))) (=> (and x824 (and (= x774 2835717307) (not (< x774 2646777772)) (> x49 0) (= x2184 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 4 x2761)) (= (or (and (= (<= x2115 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2115 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2115)) x2135) (= (x2621 (x599 x1785)) x49) (= x2761 68) (not (< x774 1889567281)) (= x1878 x2310) (not (= 2646777772 x774)) (not (= x774 2678909723)) (= x2761 68) (= x2115 (x1350 (- x2761 4))) (= x316 x1817) (> 3053082678 x774))) (and (=> x2135 x700) (=> (and (= (= x316 x1817) x2388) (not x2135)) (and (=> (not x2388) x700) (=> (and (and (= x2269 (> x1878 x2612)) (<= 0 x2612) (= (x795 (x599 x1785) (x701 2) 0) x1775) (<= x2612 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2612 (x255 x1775)) (= x2310 x1626)) x2388) (and (=> (and (= (> x2310 x2612) x1850) (not x2269)) (and (=> x1850 x700) (=> (and (not x1850) (and (= x33 (x2689 x662)) (= x888 (x795 (x599 x1785) (x701 2) 0)) (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2310)) x1171) (= (< x1171 x33) x2068) (>= x33 0) (= x1596 (x1350 (- x2612 x2310))) (= x662 (x795 (x599 x69) (x701 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x33))) (and (=> (and (not x2068) (and (= x1154 (< x2113 x33)) (= (x2675 (+ x33 x2310)) x2113))) (and (=> (and (and (= 1 x1254) (= x1703 (x795 (x599 x69) (x701 2) 0)) (= x2546 32)) (not x1154)) x1263) (=> x1154 x700))) (=> x2068 x700))))) (=> x2269 x700))))))))) x2626))
(assert (x71 x2601))
(assert (= x20 (and x2126 x2287)))
(assert (x71 x2214))
(assert (= x1413 (=> (and (= x2244 x82) (= x2396 x779)) x2569)))
(assert (= (x2495 (x701 872247156)) 872247156))
(assert (= x68 (=> (> x2022 0) x2249)))
(assert (= (x599 2952933380) (x701 2952933380)))
(assert (= x2659 (and x53 x872)))
(assert (= (and x212 (not x1931)) x295))
(assert (= (and x2654 x245) x1442))
(assert (= (=> (= (= x467 0) x1052) (and (=> (and (= x1286 0) x1052) x2317) (=> (and (not x1052) (= 1 x2437)) x352))) x1898))
(assert (= x907 (or x1174 x2744)))
(assert (= x95 (=> (and (= x669 x2044) (= x1431 0)) x614)))
(assert (= (x2495 (x599 x1331)) x1331))
(assert (x71 x2080))
(assert (x71 x1908))
(assert (= x2303 (and x152 x1559)))
(assert (x71 x522))
(assert (= (=> (and (= x1555 x1706) (= x1656 x2279)) x1188) x1239))
(assert (= (x599 18446744073709551615) (x701 18446744073709551615)))
(assert (= x2360 (and x1283 x2555)))
(assert (x71 x1980))
(assert (x71 x1594))
(assert (x71 x684))
(assert (= x2018 (and x2347 x2360)))
(assert (x71 x1625))
(assert (= (and x2563 x560) x721))
(assert (= x475 (and x728 x1347)))
(assert (= x915 (and x1511 (not x2512))))
(assert (= (and x2686 (not x1140)) x2668))
(assert (= x58 (and x2240 x1575)))
(assert (x71 x709))
(assert (=> (<= x804 10000) (= (x599 x804) (x701 x804))))
(assert (x71 x1355))
(assert (= x1098 (and x1428 x1303)))
(assert (= x2123 (and x2176 (not x1414))))
(assert (x71 x1532))
(assert (= x118 (and (not x1282) x313)))
(assert (x71 x1237))
(assert (x71 x1431))
(assert (= x26 (and x440 x987)))
(assert (= (and x2652 (not x1592)) x2258))
(assert (x71 x864))
(assert (= x1770 (=> (and (= x2332 x133) (= x396 0)) x119)))
(assert (= (and x2033 x1579) x1952))
(assert (= (x701 1926446194) (x599 1926446194)))
(assert (x71 x135))
(assert (= (and x1752 x2473) x2387))
(assert (x71 x1370))
(assert (= (and (not x1963) x516) x2424))
(assert (x71 x1744))
(assert (= (and x955 x1150) x546))
(assert (= x1426 (and (not x2677) x825)))
(assert (x2108 x135))
(assert (= (and x2527 x260) x2449))
(assert (x71 x782))
(assert (x71 x2207))
(assert (= (or x2092 x2062 x2600 x737 x1642 x2629) x444))
(assert (= x1905 (and x1347 (not x728))))
(assert (x71 x1757))
(assert (= x689 (and x2083 x1133)))
(assert (x71 x83))
(assert (x71 x437))
(assert (= (and x1143 x1917) x13))
(assert (= x2372 (and x1247 x417)))
(assert (= (and x1753 x180) x404))
(assert (= x566 (and x1478 x878)))
(assert (x71 x2285))
(assert (x2108 x677))
(assert (x71 x2129))
(assert (= (and x202 x2338) x1310))
(assert (= (=> (and (= x2159 x250) (= x227 x762)) x956) x584))
(assert (x71 x747))
(assert (= (and (not x2513) x1415) x2366))
(assert (x71 x958))
(assert (= (and x781 x1820) x2027))
(assert (= x984 (and x481 x773)))
(assert (= (=> (and (or (not x1630) x1630) (= x1630 (= 0 x1848))) x428) x549))
(assert (= x223 (and x1079 x1558)))
(assert (x71 x881))
(assert (= x658 (and x1505 x2337)))
(assert (x71 x139))
(assert (= (and x457 x889) x212))
(assert (= x594 (and x564 x150)))
(assert (x71 x960))
(assert (= (x2495 (x1031 x791 1)) (+ 1 (x2495 x791))))
(assert (x71 x125))
(assert (x71 x144))
(assert (=> (<= x1493 10000) (= (x599 x1493) (x701 x1493))))
(assert (= x827 (and x976 x59)))
(assert (x71 x798))
(assert (= (and x345 x2725) x2600))
(assert (x71 x2001))
(assert (= x1922 (and (not x2707) x1047)))
(assert (=> (>= 10000 x2157) (= (x701 x2157) (x599 x2157))))
(assert (x71 x637))
(assert (and (x628 x2371 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1401 x2371 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1812 x2371 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2192 x2371 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2492 x2371 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2371))))
(assert (x71 x1828))
(assert (x71 x525))
(assert (x71 x862))
(assert (= (x599 1889567281) (x701 1889567281)))
(assert (= x2738 (or x1736 x20 x397 x826 x2198 x1161)))
(assert (x71 x1341))
(assert (= (and (not x2411) x1510) x332))
(assert (= x2276 (or x2009 x2552)))
(assert (=> (>= 10000 x69) (= (x701 x69) (x599 x69))))
(assert (= x2593 (and x1489 (not x2149))))
(assert (= (x2495 (x599 x1319)) x1319))
(assert (x71 x1872))
(assert (= x1489 (and (not x824) x926)))
(assert (= x1939 (and x1440 x730)))
(assert (= (and x395 x1483) x922))
(assert (= x1948 (and (not x1444) x959)))
(assert (= (=> (and (= 0 x1186) (= x43 x164)) x1045) x756))
(assert (= (and x1426 (not x384)) x204))
(assert (= (and x1543 x1097) x490))
(assert (= (and x1020 (not x1791)) x825))
(assert (= (and x1315 x360) x1873))
(assert (x1107 x727))
(assert (= (and x46 x1970) x298))
(assert (= (and (not x1879) x1010) x1565))
(assert (= x973 (and x1059 x965)))
(assert (x71 x321))
(assert (=> (<= x1451 10000) (= (x701 x1451) (x599 x1451))))
(assert (x71 x1903))
(assert (x1016 x2371))
(assert (x71 x2056))
(assert (x71 x225))
(assert (= x667 (or x309 x1368 x1280 x2303 x2253 x754)))
(assert (= (and x1470 (not x140)) x726))
(assert (x71 x1318))
(assert (= (and x1274 x1046) x1695))
(assert (= (and x374 x1780) x1163))
(assert (= (and x2165 x2447) x1432))
(assert (= (x2495 (x701 3467235951)) 3467235951))
(assert (= x390 (and x2583 x2702)))
(assert (x71 x850))
(assert (= x309 (and x970 x1946)))
(assert (= (=> (and (= x1959 x1484) (= x76 x1786)) x629) x1521))
(assert (x71 x2282))
(assert (= x62 (=> (and (= (= x792 0) x1701) (or x1701 (not x1701))) x2154)))
(assert (x71 x1056))
(assert (x71 x1560))
(assert (= (and x105 x1067) x936))
(assert (x71 x1005))
(assert (x71 x1570))
(assert (x71 x656))
(assert (x71 x89))
(assert (x71 x1577))
(assert (= (and (not x1412) x1407) x2338))
(assert (x71 x556))
(assert (x71 x2548))
(assert (= x2218 (=> (and (= x1693 0) (= x2332 x1628)) x120)))
(assert (x71 x2572))
(assert (= (or x373 (and x1687 (not x1742))) x1936))
(assert (= (and (not x2460) x1518) x947))
(assert (x71 x1198))
(assert (= x1253 (and x1586 (not x294))))
(assert (= x1441 (and x579 x406)))
(assert (x71 x2063))
(assert (x71 x669))
(assert (= (and x704 (not x1197)) x636))
(assert (x71 x1144))
(assert (= (and x657 (not x1713)) x1633))
(assert (x71 x170))
(assert (= x2312 (x2495 (x599 x2312))))
(assert (=> (>= 10000 x1802) (= (x599 x1802) (x701 x1802))))
(assert (x71 x2087))
(assert (x71 x1454))
(assert (= x753 (=> (and (= x678 x1989) (= x2448 x1395)) x2755)))
(assert (= (and x370 x2) x1407))
(assert (x71 x1900))
(assert (and (x628 x722 1461501637330902918203684832716283019655932542976) (x1401 x722 1461501637330902918203684832716283019655932542976) (x1812 x722 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* 1461501637330902918203684832716283019655932542976 (x2192 x722 1461501637330902918203684832716283019655932542976)) (x2492 x722 1461501637330902918203684832716283019655932542976)) x722))))
(assert (= (and (not x2469) x1216) x2094))
(assert (x71 x1482))
(assert (x71 x9))
(assert (= x511 (and x2219 x519)))
(assert (x71 x941))
(assert (x71 x1191))
(assert (x71 x1392))
(assert (= (=> (and (= x1984 x2078) (= x2666 0)) x1804) x1054))
(assert (x71 x2754))
(assert (not x1515))
(assert (x71 x740))
(assert (= x1216 (and (not x331) x1349)))
(assert (x71 x917))
(assert (x1016 x439))
(assert (x71 x2386))
(assert (= (or x2483 x444) x559))
(assert (=> (<= x31 10000) (= (x701 x31) (x599 x31))))
(assert (x71 x1306))
(assert (= (and (not x665) x885) x1561))
(assert (= (and x1290 x2670) x2678))
(assert (x71 x1030))
(assert (= x2251 (and x1934 x1112)))
(assert (= (or x702 x2094) x1754))
(assert (x71 x1661))
(assert (= (x269 x1279) 0))
(assert (= (x599 1461501637330902918203684832716283019655932542975) (x701 1461501637330902918203684832716283019655932542975)))
(assert (= x1093 (and x1879 x1010)))
(assert (= (and x2500 x2377) x2233))
(assert (= x1297 (or x173 x2007 x1281 x29 x2220 x1675)))
(assert (= (=> (and (= x2207 (x2621 (x599 x699))) (= (or (and (< x2296 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2296) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2296)) x626) (not (< x1627 4)) (= (x2621 (x599 x699)) x723) (= x1540 x1627) (not (< x2705 2445980732)) (not (= x2705 2737736067)) (not (= x2705 2445980732)) (= (x1350 (- x1627 4)) x2296) (= x2705 2753274959) (= x1795 74228146054641364427485594382366355075153451190847473373747070783662162182144) (not (= x325 0)) (= x2578 (x765 1461501637330902918203684832716283019655932542975 x722)) (= (x2675 (+ 4 x2257)) x388) (not (< x2705 1926446194)) (= x388 x2001) (= x1540 (x1350 (- x2342 x2257))) (= x2342 (x2675 (+ 32 x388))) (= x2578 x31) (< x2705 2867092931) (not (= 2569309863 x2705)) (> x723 0) (= 36 x1627) (not (= 0 x2207))) (and (=> (and (= 0 x2437) x626) x352) (=> (and (not x626) (and (= true x781) (= x31 x1275))) (and (=> (and (= 0 x1286) (not x781)) x2317) (=> (and (and (<= 0 x1743) (<= x1743 1461501637330902918203684832716283019655932542975) (>= x1666 0) (= x1666 (x156 x468)) (= (x2758 x61) x1743) (> 1461501637330902918203684832716283019655932542976 x1743) (= (x1031 x791 1) x61) (= x1205 (= 0 x746)) (= x634 128) (= (x795 (x599 x31) (x701 3) 0) x791) (<= x1666 1461501637330902918203684832716283019655932542975) (= (x1031 x61 1) x468) (= (x2621 (x599 x1743)) x746) (< x1666 1461501637330902918203684832716283019655932542976)) x781) (and (=> (and (= x686 (= x1785 x1743)) (not x1205)) (and (=> (and (and (> 3053082678 x1830) (= x69 x1666) (not (= x1830 2646777772)) (= x699 x1030) (= 68 x2305) (= 68 x2305) (not (> 1889567281 x1830)) (= 72223263258191293651604190264004579703475585967499159981614695267027195527168 x531) (not (< x2305 4)) (not (< x1830 2646777772)) (= (or (> x1538 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1538 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1538)))) x2506) (= (x2621 (x599 x1785)) x857) (= x1538 (x1350 (- x2305 4))) (= x1830 2678909723) (> x857 0)) x686) (and (=> x2506 x387) (=> (and (and (= x1030 x1826) (= (= x1030 x699) x483)) (not x2506)) (and (=> (and x483 (and (= x2707 (= x69 x1666)) (= x316 x69))) (and (=> (not x2707) x387) (=> (and x2707 (= x2191 (= x69 0))) (and (=> (and (= (= x699 x1030) x730) (not x2191)) (and (=> x730 x2626) (=> (not x730) x387))) (=> x2191 x2626))))) (=> (not x483) x387))))) (=> (and (and (= (= x1743 x1896) x2397) (and (and (= x1230 72223263258191293651604190264004579703475585967499159981614695267027195527168) (not (< x1165 2646777772)) (= x1237 x699) (= x1666 x103) (not (> 1889567281 x1165)) (= x951 (x2621 (x599 x1896))) (= x1274 (or (> x2330 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2330) true) (> 64 x2330)))) (= 2678909723 x1165) (< 0 x951) (= (x1350 (- x2717 4)) x2330) (not (= 2646777772 x1165)) (= 68 x2717) (< x1165 3053082678) (not (> 4 x2717)) (= x2717 68)) x2397)) (not x686)) (and (=> x1274 x2418) (=> (and (not x1274) (and (= (= x1237 x699) x2720) (= x1237 x1043))) (and (=> (and (and (= (= x103 x1666) x2651) (= x103 x2545)) x2720) (and (=> (and (= (= x103 0) x1965) x2651) (and (=> (and (not x1965) (= (= x699 x1237) x2583)) (and (=> (not x2583) x2418) (=> x2583 x1760))) (=> x1965 x1760))) (=> (not x2651) x2418))) (=> (not x2720) x2418))))))) (=> (and (= 0 x1286) x1205) x2317))))))) x2515))
(assert (x71 x2050))
(assert (= (and (not x1584) x2672) x1589))
(assert (x71 x2310))
(assert (x71 x1222))
(assert (= (and x1528 x2694) x2101))
(assert (x71 x1286))
(assert (= (and x142 (not x2292)) x1510))
(assert (x71 x41))
(assert (x71 x1105))
(assert (x71 x2715))
(assert (= (x2495 (x701 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (= x2665 (and x99 (not x1127))))
(assert (x71 x1640))
(assert (x1107 x103))
(assert (x71 x2596))
(assert (x71 x49))
(assert (= x2311 (and x1735 (not x2324))))
(assert (=> (>= 10000 x643) (= (x701 x643) (x599 x643))))
(assert (= (and x231 x2366) x1405))
(assert (= (and x168 x1621) x582))
(assert (= (and x2720 x70) x2231))
(assert (= (and x2061 x1814) x1258))
(assert (x71 x1397))
(assert (x71 x2410))
(assert (= x18 (and x2215 x361)))
(assert (= (and x294 x1586) x2225))
(assert (= (=> (and (or x982 (not x982)) (= (= x2056 0) x982)) x1013) x2286))
(assert (x71 x439))
(assert (x71 x337))
(assert (and (x628 x2393 32) (x1401 x2393 32) (x1812 x2393 32) (=> (> 32 0) (= (+ (* 32 (x2192 x2393 32)) (x2492 x2393 32)) x2393))))
(assert (= (=> (and (= x1890 (x2675 (+ x2247 32))) (= x1661 (x1503 x2247)) (<= x1661 1461501637330902918203684832716283019655932542975) (= x178 (not (> x500 x1890)))) (and x1531 x178)) x587))
(assert (x71 x1846))
(assert (=> (>= 10000 x699) (= (x701 x699) (x599 x699))))
(assert (= x1528 (and x644 (not x1032))))
(assert (= (x2495 (x701 1926446194)) 1926446194))
(assert (= x1691 (and x1543 (not x1097))))
(assert (= (and x615 (not x2051)) x2306))
(assert (x71 x65))
(assert (x71 x2250))
(assert (= x264 (=> (and (= x2445 x981) (= 0 x757)) x935)))
(assert (x71 x424))
(assert (x71 x2291))
(assert (x71 x1124))
(assert (x71 x28))
(assert (= (and (not x2388) x365) x1670))
(assert (x71 x1242))
(assert (= (=> (and (= x1497 x525) (= x2696 0)) x2560) x617))
(assert (x71 x1571))
(assert (x71 x1776))
(assert (= x1398 (and x561 x84)))
(assert (x71 x2342))
(assert (= x1174 (and x1272 (not x499))))
(assert (= (and (not x2539) x2767) x1072))
(assert (= x2607 (or (and (not x2138) x1910) x1793)))
(assert (=> (<= x1331 10000) (= (x599 x1331) (x701 x1331))))
(assert (= x1161 (and x2340 (not x270))))
(assert (= (x2495 (x701 614698425)) 614698425))
(assert (x71 x729))
(assert (and (x2415 32 x551) (= (* x551 32) (x508 32 x551)) (x544 32 x551) (and (= (* 32 (- x551 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x508 32 (- x551 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x508 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x551 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x551 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x551 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x508 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x551) (- (* 32 x551) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x551)))) (x2152 32 x551) (x1257 32 x551) (x2751 32 x551)))
(assert (= x241 (=> (= x2468 (= 0 x2396)) (and (=> (and (and (= (x765 115792089237316195423570985008687907853269984665640564039457584007913129639904 x439) x1957) (= x139 (x2675 (+ 128 x1957))) (= (x2675 (+ 31 x2244)) x439) (= x665 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2244)) (> 32 x2244)) (> x2244 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (not x2468)) (and (=> (and (and (= x848 (x795 (x599 x1030) x1655 0)) (= (x2675 (+ x612 32)) x1026) (<= 0 x950) (= (x795 (x599 x1451) (x701 17) 0) x1655) (= (x2675 (+ 4 x139)) x612) (= (= x1451 x1785) x1243) (< x1451 1461501637330902918203684832716283019655932542976) (<= x950 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x416 (x1350 (- x2178 x139))) (= x950 (x2481 x848)) (> 1461501637330902918203684832716283019655932542976 x1451) (= x2178 (x2675 (+ x612 64)))) (not x665)) (and (=> (and (and (not (< x542 1889567281)) (= (or (and (> 64 x1064) (= true (<= x1064 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1064)) x1032) (< x542 3053082678) (= x1394 x416) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2147) (not (= x542 2678909723)) (= (x2621 (x599 x1785)) x2059) (not (< x542 2646777772)) (= x950 x1411) (> x2059 0) (= x1064 (x1350 (- x1394 4))) (= x708 x316) (not (= 2646777772 x542)) (= 68 x1394) (not (> 4 x1394)) (= x542 2835717307)) x1243) (and (=> (and (not x1032) (= (= x316 x708) x2694)) (and (=> (not x2694) x829) (=> (and (and (<= 0 x2647) (= (x2093 x1819) x2647) (= x1411 x121) (= x1819 (x795 (x599 x1785) (x701 2) 0)) (= (< x2647 x950) x618) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2647)) x2694) (and (=> (and (= x1762 (> x1411 x2647)) (not x618)) (and (=> x1762 x829) (=> (and (and (<= x859 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2085 (x1350 (- x2647 x1411))) (= (x847 x2130) x859) (>= x859 0) (= x317 (x795 (x599 x1785) (x701 2) 0)) (= x1921 (> x859 x1307)) (= x1307 (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1411))) (= (x795 (x599 x69) (x701 2) 0) x2130)) (not x1762)) (and (=> (and (and (= x932 (< x2409 x859)) (= (x2675 (+ x859 x1411)) x2409)) (not x1921)) (and (=> (and (not x932) (and (= x1466 1) (= x2309 32) (= (x795 (x599 x69) (x701 2) 0) x476))) x1595) (=> x932 x829))) (=> x1921 x829))))) (=> x618 x829))))) (=> x1032 x829))) (=> (and (not x1243) (= (= x1896 x1451) x2726)) (and (=> (and (and (not (< x2488 4)) (not (> 1889567281 x3)) (= (or (and (< x1751 64) (= true (<= x1751 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1751)) x1179) (> x518 0) (= x416 x2488) (not (> 2646777772 x3)) (not (= x3 2678909723)) (= x1333 x316) (= x1751 (x1350 (- x2488 4))) (= 2835717307 x3) (not (= x3 2646777772)) (= (x2621 (x599 x1896)) x518) (= x2488 68) (< x3 3053082678) (= x950 x2435) (= x2272 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x2726) (and (=> (and (not x1179) (= x2066 (= x316 x1333))) (and (=> (and (and (= x2435 x252) (= (x795 (x599 x1785) (x701 2) 0) x562) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1477) (= (> x950 x1477) x268) (<= 0 x1477) (= (x148 x562) x1477)) x2066) (and (=> x268 x1471) (=> (and (= x1055 (> x2435 x1477)) (not x268)) (and (=> (and (not x1055) (and (= (x795 (x599 x69) (x701 2) 0) x991) (= x2725 (< x2687 x486)) (= x2096 (x1350 (- x1477 x2435))) (= x2687 (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2435))) (= x486 (x462 x991)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x486) (>= x486 0) (= x2089 (x795 (x599 x1785) (x701 2) 0)))) (and (=> (and (and (= x1383 (x2675 (+ x2435 x486))) (= (< x1383 x486) x1037)) (not x2725)) (and (=> (and (and (= 32 x1344) (= (x795 (x599 x69) (x701 2) 0) x1209) (= 1 x1641)) (not x1037)) x1367) (=> x1037 x1471))) (=> x2725 x1471))) (=> x1055 x1471))))) (=> (not x2066) x1471))) (=> x1179 x1471))) (=> (and (= x2637 (= x2067 x1451)) (not x2726)) (and (=> (and (and (= x1869 (= x1451 x2157)) (and (and (not (= 1889567281 x619)) (< 0 x2211) (= x2620 x416) (not (= 2514000705 x619)) (= x2162 (x1350 (- x2620 4))) (not (> 4 x2620)) (not (> 826074471 x619)) (= x619 2835717307) (= x316 x2699) (= 68 x2620) (not (= 826074471 x619)) (= x1282 (or (> x2162 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x2162 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x2162)))) (= x2478 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x376 x950) (= x2211 (x2621 (x599 x2157)))) x1869)) (not x2637)) (and (=> (and (= (= x2699 x316) x1217) (not x1282)) (and (=> (not x1217) x2697) (=> (and x1217 (and (= x735 (x2421 x1033)) (= (x795 (x599 x1785) (x701 1) 0) x1033) (<= x735 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x735 0) (= x376 x1897) (= (< x735 x950) x1763))) (and (=> x1763 x2697) (=> (and (not x1763) (= x1752 (< x735 x376))) (and (=> (and (and (= x1599 (x795 (x599 x1785) (x701 1) 0)) (= x105 (> x187 x2737)) (= (x795 (x599 x69) (x701 1) 0) x1277) (>= x187 0) (= (x1350 (- x735 x376)) x1201) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x187) (= x187 (x2339 x1277)) (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x376)) x2737)) (not x1752)) (and (=> x105 x2697) (=> (and (not x105) (and (= x1879 (< x631 x187)) (= x631 (x2675 (+ x376 x187))))) (and (=> (and (not x1879) (and (= x2109 1) (= (x795 (x599 x69) (x701 1) 0) x610) (= 1 x1487) (= x2234 32))) x694) (=> x1879 x2697))))) (=> x1752 x2697))))))) (=> x1282 x2697))) (=> (and x2637 (and (= x950 x1682) (= x734 (x2621 (x599 x2067))) (not (> 4 x1240)) (= x849 76450787359836037641860180984291677749980919077056822294353438043884394381312) (< 0 x734) (= x97 2835717307) (= x1240 x416) (not (= 1889567281 x97)) (= (or (and (< x806 64) (= true (<= x806 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x806 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1710) (= 68 x1240) (not (< x97 826074471)) (not (= 2514000705 x97)) (not (= x97 826074471)) (= x316 x42) (= (x1350 (- x1240 4)) x806))) (and (=> (and (= x2336 (= x42 x316)) (not x1710)) (and (=> (not x2336) x2025) (=> (and (and (<= x336 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x420 (< x336 x950)) (= (x795 (x599 x1785) (x701 1) 0) x1991) (= x336 (x2070 x1991)) (= x1682 x170) (>= x336 0)) x2336) (and (=> x420 x2025) (=> (and (not x420) (= x2563 (< x336 x1682))) (and (=> (and (not x2563) (and (= (x795 (x599 x1785) (x701 1) 0) x1443) (= x2304 (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1682))) (= x2609 (> x1876 x2304)) (= x1125 (x795 (x599 x69) (x701 1) 0)) (= (x1350 (- x336 x1682)) x1772) (= (x2017 x1125) x1876) (<= x1876 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1876))) (and (=> (and (and (= x1513 (x2675 (+ x1876 x1682))) (= (< x1513 x1876) x1133)) (not x2609)) (and (=> x1133 x2025) (=> (and (and (= (x795 (x599 x69) (x701 1) 0) x2201) (= 1 x48) (= x410 1) (= x489 32)) (not x1133)) x274))) (=> x2609 x2025))) (=> x2563 x2025))))))) (=> x1710 x2025))))))))) (=> x665 x387))) (=> x2468 x387)))))
(assert (x71 x643))
(assert (and (x628 x55 1461501637330902918203684832716283019655932542976) (x1401 x55 1461501637330902918203684832716283019655932542976) (x1812 x55 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* 1461501637330902918203684832716283019655932542976 (x2192 x55 1461501637330902918203684832716283019655932542976)) (x2492 x55 1461501637330902918203684832716283019655932542976)) x55))))
(assert (x71 x2705))
(assert (x71 x191))
(assert (x839 x1218))
(assert (x71 x1384))
(assert (x71 x247))
(assert (= (=> (and (= x808 x525) (= x2316 0)) x1779) x606))
(assert (x71 x1648))
(assert (= (and x1859 x1522) x2385))
(assert (x71 x1496))
(assert (= x1769 (and (not x901) x1691)))
(assert (= x2308 (and x1797 x1636)))
(assert (x71 x1957))
(assert (x71 x251))
(assert (x71 x1298))
(assert (= x2615 (and x2039 (not x1050))))
(assert (= x446 (or x2110 x2692 x98 x1990 x2018 x1740)))
(assert (x71 x19))
(assert (x71 x2577))
(assert (= (and x886 x1316) x1875))
(assert (x71 x505))
(assert (= (and (not x889) x457) x2733))
(assert (= (=> (and (= x1452 x1848) (= x28 x1293)) x549) x675))
(assert (= x2456 (and (not x2068) x2625)))
(assert (x71 x1627))
(assert (x71 x103))
(assert (x71 x1973))
(assert (x71 x11))
(assert (x71 x2685))
(assert (= (x701 604024478) (x599 604024478)))
(assert (x71 x2327))
(assert (= x671 (and x573 x200)))
(assert (= x238 (and (not x333) x2306)))
(assert (= 2514000705 (x2495 (x701 2514000705))))
(assert (= x971 (and x1303 (not x1428))))
(assert (x71 x2120))
(assert (= (x599 65943510083598082279227955258803319933472635617035506777028864765220054106112) (x701 65943510083598082279227955258803319933472635617035506777028864765220054106112)))
(assert (= (and x1952 (not x1159)) x1075))
(assert (= (x599 1461501637330902918203684832716283019655932542976) (x701 1461501637330902918203684832716283019655932542976)))
(assert (x71 x788))
(assert (x71 x616))
(assert (= (x701 16284467712533504949339770971755156993396464521235680726719773044698144309248) (x599 16284467712533504949339770971755156993396464521235680726719773044698144309248)))
(assert (x71 x410))
(assert (x71 x160))
(assert (= (or (and x651 (not x1337)) x45) x72))
(assert (= x2742 (and x2602 (not x1264))))
(assert (= (and (not x790) x1373) x2381))
(assert (= (=> (= x440 (= 0 x1848)) (and (=> (and (not x440) (and (= x52 (x2675 (+ x930 128))) (= x1541 (or (and (> 32 x1293) (= true (<= x1293 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1293))) (= (x2675 (+ 31 x1293)) x135) (= x930 (x765 115792089237316195423570985008687907853269984665640564039457584007913129639904 x135)))) (and (=> x1541 x2418) (=> (and (and (<= x83 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2499 (= x759 x1785)) (= (x2675 (+ x1212 64)) x16) (= (x2675 (+ x52 4)) x1212) (= x1844 (x795 (x599 x1237) x761 0)) (= x353 (x2675 (+ x1212 32))) (>= x83 0) (< x759 1461501637330902918203684832716283019655932542976) (> 1461501637330902918203684832716283019655932542976 x759) (= (x795 (x599 x759) (x701 17) 0) x761) (= (x1262 x1844) x83) (= (x1350 (- x16 x52)) x443)) (not x1541)) (and (=> (and (= x739 (= x759 x1896)) (not x2499)) (and (=> (and (= (= x759 x2067) x1365) (not x739)) (and (=> (and (and (= x93 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x534 (x1350 (- x601 4))) (= 2835717307 x2267) (= x601 68) (= (x2621 (x599 x2067)) x1022) (not (= x2267 826074471)) (= x2020 x2545) (not (= 2514000705 x2267)) (= x1288 (or (and (> 64 x534) (= (<= x534 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x534))) (= x83 x2502) (not (< x601 4)) (not (> 826074471 x2267)) (= x601 x443) (> x1022 0) (not (= x2267 1889567281))) x1365) (and (=> x1288 x1447) (=> (and (not x1288) (= x2512 (= x2545 x2020))) (and (=> (not x2512) x1447) (=> (and x2512 (and (= x1149 (x795 (x599 x1896) (x701 1) 0)) (= x2644 (x1783 x1149)) (<= x2644 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2502 x1345) (>= x2644 0) (= x728 (> x83 x2644)))) (and (=> x728 x1447) (=> (and (not x728) (= x910 (< x2644 x2502))) (and (=> x910 x1447) (=> (and (not x910) (and (= x1569 (x305 x344)) (= (> x1569 x1625) x1836) (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2502)) x1625) (>= x1569 0) (= (x795 (x599 x103) (x701 1) 0) x344) (= (x1350 (- x2644 x2502)) x2419) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1569) (= (x795 (x599 x1896) (x701 1) 0) x279))) (and (=> (and (and (= x2031 (< x2139 x1569)) (= x2139 (x2675 (+ x1569 x2502)))) (not x1836)) (and (=> (and (and (= x17 1) (= 1 x2052) (= 32 x2119) (= (x795 (x599 x103) (x701 1) 0) x668)) (not x2031)) x1604) (=> x2031 x1447))) (=> x1836 x1447))))))))))) (=> (and (not x1365) (and (= (= x759 x2157) x573) (and x573 (and (= x2680 x443) (not (= 1889567281 x835)) (< 0 x1732) (not (= 2514000705 x835)) (not (> 4 x2680)) (not (= 826074471 x835)) (= (x1350 (- x2680 4)) x340) (= x2545 x536) (= x1732 (x2621 (x599 x2157))) (= x1198 x83) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2173) (= 2835717307 x835) (= (or (> x340 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x340) (= true (<= x340 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x2270) (not (> 826074471 x835)) (= x2680 68))))) (and (=> (and (not x2270) (= x1283 (= x2545 x536))) (and (=> (and (and (= x1198 x532) (<= 0 x2203) (= (x795 (x599 x1896) (x701 1) 0) x2114) (= (> x83 x2203) x2347) (= (x196 x2114) x2203) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2203)) x1283) (and (=> x2347 x2566) (=> (and (= x999 (< x2203 x1198)) (not x2347)) (and (=> x999 x2566) (=> (and (and (= x937 (x795 (x599 x1896) (x701 1) 0)) (<= x1771 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x1571 x1771) x1439) (= x2521 (x1350 (- x2203 x1198))) (>= x1771 0) (= (x257 x2434) x1771) (= (x795 (x599 x103) (x701 1) 0) x2434) (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1198)) x1571)) (not x999)) (and (=> (and (and (= (x2675 (+ x1771 x1198)) x883) (= x732 (< x883 x1771))) (not x1439)) (and (=> (and (and (= 1 x1084) (= (x795 (x599 x103) (x701 1) 0) x1958) (= x250 1) (= x227 32)) (not x732)) x584) (=> x732 x2566))) (=> x1439 x2566))))))) (=> (not x1283) x2566))) (=> x2270 x2566))))) (=> (and x739 (and (not (= x565 2646777772)) (= x642 x443) (not (= x565 2678909723)) (not (> 2646777772 x565)) (> x799 0) (= x125 (x1350 (- x642 4))) (= (x2621 (x599 x1896)) x799) (= x83 x1590) (= 2835717307 x565) (not (> 1889567281 x565)) (not (< x642 4)) (= x642 68) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x125) (and (< x125 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x125) true))) x649) (= x2390 x2545) (< x565 3053082678) (= x1328 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (and (=> (and (not x649) (= (= x2390 x2545) x1009)) (and (=> (not x1009) x2662) (=> (and (and (>= x1049 0) (= x143 x1590) (= (> x83 x1049) x406) (<= x1049 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1748 x674) x1049) (= x674 (x795 (x599 x1896) (x701 2) 0))) x1009) (and (=> (and (= x2345 (< x1049 x1590)) (not x406)) (and (=> x2345 x2662) (=> (and (and (= (< x1006 x729) x2574) (= x729 (x1462 x36)) (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1590)) x1006) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x729) (= x2145 (x1350 (- x1049 x1590))) (= x1667 (x795 (x599 x1896) (x701 2) 0)) (= x36 (x795 (x599 x103) (x701 2) 0)) (>= x729 0)) (not x2345)) (and (=> (and (and (= (> x729 x529) x1653) (= x529 (x2675 (+ x1590 x729)))) (not x2574)) (and (=> x1653 x2662) (=> (and (not x1653) (and (= x2634 (x795 (x599 x103) (x701 2) 0)) (= x2571 32) (= x1903 1))) x12))) (=> x2574 x2662))))) (=> x406 x2662))))) (=> x649 x2662))))) (=> (and x2499 (and (= 2835717307 x780) (= x1857 68) (< x780 3053082678) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x616) (> x1872 0) (= x443 x1857) (not (< x780 1889567281)) (= (x1350 (- x1857 4)) x21) (not (= x780 2646777772)) (not (= x780 2678909723)) (not (> 4 x1857)) (= x2545 x1930) (= x466 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x21) true) (< x21 64)) (> x21 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (> 2646777772 x780)) (= (x2621 (x599 x1785)) x1872) (= x83 x1499))) (and (=> x466 x264) (=> (and (= x2479 (= x1930 x2545)) (not x466)) (and (=> (and (and (<= 0 x11) (= (> x83 x11) x1995) (<= x11 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x795 (x599 x1896) (x701 2) 0) x1551) (= x11 (x1573 x1551)) (= x2013 x1499)) x2479) (and (=> x1995 x264) (=> (and (= (< x11 x1499) x180) (not x1995)) (and (=> (and (and (<= 0 x1121) (= (x795 (x599 x1896) (x701 2) 0) x2565) (= (x795 (x599 x103) (x701 2) 0) x267) (= (x1350 (- x11 x1499)) x1863) (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1499)) x1057) (= x1121 (x5 x267)) (= (< x1057 x1121) x886) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1121)) (not x180)) (and (=> (and (and (= x1127 (< x731 x1121)) (= x731 (x2675 (+ x1121 x1499)))) (not x886)) (and (=> (and (and (= x981 32) (= 1 x757) (= (x795 (x599 x103) (x701 2) 0) x1420)) (not x1127)) x935) (=> x1127 x264))) (=> x886 x264))) (=> x180 x264))))) (=> (not x2479) x264))))))))) (=> x440 x2418))) x428))
(assert (x71 x2647))
(assert (= (and x2558 (not x199)) x512))
(assert (x71 x31))
(assert (x71 x1926))
(assert (= (and x357 (not x307)) x564))
(assert (= (=> (and (= (= 0 x2688) x965) (or (not x965) x965)) x1269) x2484))
(assert (= x2663 (or x256 x297)))
(assert (= (and x1047 x2707) x34))
(assert (= x29 (and x1762 x1126)))
(assert (= (and (not x1850) x1271) x2625))
(assert (x71 x127))
(assert (x71 x2323))
(assert (= (and x1534 (not x1123)) x670))
(assert (x71 x1972))
(assert (= (x2495 (x701 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (and x2480 (not x1365)) x200))
(assert (x71 x244))
(assert (x71 x1676))
(assert (= (or x240 x1147 x1519 x786 x1913 x1175) x297))
(assert (x71 x450))
(assert (x71 x2661))
(assert (x1107 x1130))
(assert (x71 x929))
(assert (= (or x2540 x1088) x2510))
(assert (= (and x2460 x1518) x1548))
(assert (= x926 (or (and x2191 x34) x1939)))
(assert (= 2835717307 (x2495 (x701 2835717307))))
(assert (= x2498 (or x2614 x2117 x436 x624 x922 x1246)))
(assert (x71 x2333))
(assert (x71 x2521))
(assert (= x1820 (and (not x626) x1936)))
(assert (= x272 (and (not x732) x2353)))
(assert (= x427 (=> (and (= x1870 x2078) (= 0 x2531)) x2736)))
(assert (= x1798 (and x14 (not x1523))))
(assert (x71 x2590))
(assert (x71 x489))
(assert (x71 x2578))
(assert (= (=> (and (= x2297 x1476) (= 0 x138)) x1835) x1134))
(assert (x71 x2639))
(assert (=> (<= x1237 10000) (= (x701 x1237) (x599 x1237))))
(assert (x71 x2408))
(assert (x71 x1206))
(assert (x71 x2371))
(assert (= x935 (=> (and (= x981 x762) (= x2159 x757)) x956)))
(assert (= (or x1695 x2714 x874 x766 x2274 x2233 x237 x2722 x1313 x26) x2684))
(assert (x71 x164))
(assert (x71 x1682))
(assert (x71 x2069))
(assert (= x1851 (and x2160 x332)))
(assert (= (and (not x796) x315) x1914))
(assert (x71 x2436))
(assert (= x1300 (and (not x1179) x1321)))
(assert (x71 x1606))
(assert (x71 x74))
(assert (x71 x873))
(assert (x71 x1043))
(assert (= (=> (and (= x138 x1656) (= x2297 x1706)) x1188) x1835))
(assert (x1107 x521))
(assert (x71 x577))
(assert (x71 x2618))
(assert (= (and x1399 (not x1524)) x2654))
(assert (= x1623 (or (and x1685 x1550) (and (not x2592) x2681))))
(assert (= (x2495 (x701 65943510083598082279227955258803319933472635617035506777028864765220054106112)) 65943510083598082279227955258803319933472635617035506777028864765220054106112))
(assert (= x595 (and x2039 x1050)))
(assert (= (and x633 x1796) x1175))
(assert (= x624 (and (not x2210) x2534)))
(assert (x71 x719))
(assert (x71 x1857))
(assert (= x339 (or x2095 x1914)))
(assert (x71 x82))
(assert (x71 x1261))
(assert (x71 x1830))
(assert (= x2006 (and (not x1463) x992)))
(assert (= x1970 (or x183 x2357 x2276 x1012)))
(assert (= x1944 (and x524 x1008)))
(assert (x71 x422))
(assert (x71 x2524))
(assert (= x851 (and x210 x1653)))
(assert (x2529 x551))
(assert (x71 x311))
(assert (= x1913 (and x91 x2116)))
(assert (= x1162 (and (not x2197) x1267)))
(assert (= x1250 (=> (and (= x85 x866) (= x2389 x792)) x62)))
(assert (= (x2495 (x701 3459381112)) 3459381112))
(assert (x71 x285))
(assert (x71 x1747))
(assert (x71 x1646))
(assert (x71 x1353))
(assert (x71 x866))
(assert (x71 x2267))
(assert (x71 x16))
(assert (x71 x2363))
(assert (x71 x2535))
(assert (= x374 (and x2425 (not x1346))))
(assert (= x98 (and x671 x2270)))
(assert (x71 x2318))
(assert (= x1866 (and x1415 x2513)))
(assert (= x2141 (or x1224 x1004)))
(assert (x71 x1626))
(assert (x71 x1697))
(assert (x71 x2074))
(assert (x71 x1525))
(assert (= x2667 (and x1884 (not x1710))))
(assert (= x2003 (and x947 x1759)))
(assert (= x288 (or (and x1011 x2650) x2036 (and x1660 (not x1507)) (and x1735 x2324) x594 (and x1563 x429))))
(assert (x71 x1785))
(assert (and (x2415 32 x905) (= (* x905 32) (x508 32 x905)) (x544 32 x905) (and (= (* 32 (- x905 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x508 32 (- x905 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x508 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x905 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x905 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x905 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x508 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x905) (- (* 32 x905) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x905)))) (x2152 32 x905) (x1257 32 x905) (x2751 32 x905)))
(assert (=> (<= x1319 10000) (= (x701 x1319) (x599 x1319))))
(assert (x71 x2576))
(assert (x71 x738))
(assert (= x493 (and x787 x1435)))
(assert (= (=> (and (= x768 x479) (= x1635 0)) x1790) x2344))
(assert (x1016 x771))
(assert (= (and (not x1290) x2670) x495))
(assert (x1016 x2393))
(assert (x71 x1492))
(assert (= (and x1096 x831) x2356))
(assert (x71 x488))
(assert (x71 x2261))
(assert (x71 x2398))
(assert (= (=> (and (= x1656 x1336) (= x1706 x2639)) x1188) x1925))
(assert (x71 x1734))
(assert (x1107 x2099))
(assert (x71 x812))
(assert (x1107 x1743))
(assert (x71 x2107))
(assert (x71 x2525))
(assert (x71 x1588))
(assert (= x1864 (and x1375 (not x605))))
(assert (= (and x976 (not x59)) x2033))
(assert (= (or x1866 x474 x1787 x1504 x2617 x1095) x1082))
(assert (x71 x2536))
(assert (= (or x1113 x2185) x1166))
(assert (= x1289 (and x1061 x863)))
(assert (x71 x1192))
(assert (x71 x2375))
(assert (x2108 x2393))
(assert (= x1642 (and x1055 x2727)))
(assert (x71 x772))
(assert (x71 x383))
(assert (x71 x1650))
(assert (x71 x214))
(assert (= x302 (and x451 x1718)))
(assert (= x2614 (and x1264 x2602)))
(assert (= x2429 (or x1816 x1992 x310 x2414)))
(assert (x71 x2002))
(assert (= (or x2658 x1253) x1066))
(assert (x71 x2743))
(assert (x71 x42))
(assert (= (and x2027 (not x1205)) x1945))
(assert (= x173 (and x618 x2101)))
(assert (= x513 (and (not x2031) x2131)))
(assert (= x64 (and x2558 x199)))
(assert (x71 x2426))
(assert (= (and x1851 x287) x1962))
(assert (= x1491 (and (not x1566) x1937)))
(assert (x71 x56))
(assert (x71 x1555))
(assert (= (and x238 x2175) x704))
(assert (x71 x801))
(assert (= (and (not x2369) x750) x168))
(assert (= x1048 (and x1831 (not x999))))
(assert (= (and x2202 x512) x2399))
(assert (x2461 x439))
(assert (= (and x748 (not x466)) x581))
(assert (= (and x1429 x266) x1167))
(assert (x71 x338))
(assert (= (x599 1086394137) (x701 1086394137)))
(assert (= (and x2654 (not x245)) x2253))
(assert (x71 x2603))
(assert (= (and x200 (not x573)) x1244))
(assert (x71 x1741))
(assert (x71 x733))
(assert (= x2240 (and x1777 (not x2657))))
(assert (x71 x638))
(assert (x71 x1896))
(assert (= (or x1265 x726 x1225 (and x1998 x1461) x1601 (and x2610 x1696) (and x1975 (not x916)) x902) x858))
(assert (x71 x2365))
(assert (x71 x2407))
(assert (= x1440 (and (not x2191) x34)))
(assert (x71 x1060))
(assert (=> (<= x2525 10000) (= (x701 x2525) (x599 x2525))))
(assert (= x1003 (and x2681 x2592)))
(assert (x71 x2313))
(assert (= x414 (x2495 (x599 x414))))
(assert (= x1934 (and (not x2453) x1683)))
(assert (x71 x1979))
(assert (= x2095 (or x2181 x1215 x1163 x1893 x815 x1885)))
(assert (= x2412 (and x1576 x1537)))
(assert (= (and x978 (not x2609)) x2083))
(assert (x71 x659))
(assert (x71 x857))
(assert (= x2340 (and x2491 (not x1019))))
(assert (x71 x500))
(assert (x71 x518))
(assert (x71 x861))
(assert (= (and x72 (not x190)) x1360))
(assert (x71 x2575))
(assert (x71 x1071))
(assert (x71 x396))
(assert (= x942 (and x526 x1860)))
(assert (x71 x883))
(assert (= (and x1360 (not x1245)) x296))
(assert (= x1403 (and x1889 x166)))
(assert (= x557 (and x377 x1721)))
(assert (x71 x905))
(assert (= x980 (or x2564 x1840)))
(assert (= (and (not x837) x506) x2464))
(assert (= (and x1494 x636) x360))
(assert (x71 x2012))
(assert (= x855 (x2495 (x599 x855))))
(assert (x71 x2526))
(assert (x71 x1307))
(assert (= x1600 (and x2497 x2706)))
(assert (x71 x2627))
(assert (= (and x1803 x572) x2283))
(assert (= (and x1820 (not x781)) x1436))
(assert (= x1349 (and (not x1575) x2240)))
(assert (= x2402 (=> (and (= (= x1384 0) x2077) (or (not x2077) x2077)) x2547)))
(assert (= (x701 29289127993025145568725129057828671567744754166070328588094505464281371246592) (x599 29289127993025145568725129057828671567744754166070328588094505464281371246592)))
(assert (and (x2415 32 x747) (= (* x747 32) (x508 32 x747)) (x544 32 x747) (and (= (* 32 (- x747 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x508 32 (- x747 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x508 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x747 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x747 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x747 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x508 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x747) (- (* 32 x747) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x747)))) (x2152 32 x747) (x1257 32 x747) (x2751 32 x747)))
(assert (x71 x1751))
(assert (x71 x1460))
(assert (x71 x2508))
(assert (= (and x519 (not x2219)) x262))
(assert (= x2650 (and x1660 x1507)))
(assert (x71 x776))
(assert (x71 x1728))
(assert (x71 x2445))
(assert (= (and (not x172) x1935) x2652))
(assert (x71 x2598))
(assert (x71 x760))
(assert (= (x599 3053082678) (x701 3053082678)))
(assert (x71 x376))
(assert (x71 x1499))
(assert (x71 x2343))
(assert (x71 x432))
(assert (= x2439 (and (not x572) x1803)))
(assert (x2108 x2371))
(assert (= x1184 (=> (= x1694 (= 0 x76)) (and (=> (and (not x1694) (= x605 (or (and (> 32 x1959) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1959))) (> x1959 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> (and (= 1 x1603) (not x605)) x258) (=> x605 x387))) (=> x1694 x387)))))
(assert (x71 x1969))
(assert (= x1558 (and (not x2582) x1498)))
(assert (= x787 (and (not x233) x421)))
(assert (x71 x1))
(assert (= (=> (and (or (not x620) x620) (= (= 0 x467) x620)) x1898) x887))
(assert (x71 x1971))
(assert (x71 x21))
(assert (x71 x1755))
(assert (x71 x736))
(assert (x71 x2026))
(assert (= (or x2757 x971) x1416))
(assert (x2461 x677))
(assert (= (and x487 x557) x1885))
(assert (= (x2495 (x1031 x38 1)) (+ 1 (x2495 x38))))
(assert (=> (>= 10000 x1514) (= (x599 x1514) (x701 x1514))))
(assert (= (or x2141 x1754) x651))
(assert (= x2418 (=> (= 0 x1858) x2354)))
(assert (x71 x1453))
(assert (= x2740 (=> (and (= x85 x1842) (= x792 x2754)) x62)))
(assert (x71 x1732))
(assert (= x45 (and x1337 x651)))
(assert (= (x701 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1107 x2450))
(assert (= x1267 (and x2690 x1199)))
(assert (x71 x759))
(assert (x71 x1394))
(assert (= (and x987 (not x440)) x1231))
(assert (x71 x1025))
(assert (= (and x1781 x2517) x558))
(assert (=> (>= 10000 x1030) (= (x599 x1030) (x701 x1030))))
(assert (= (and (not x268) x355) x2727))
(assert (= x1292 (or x907 x2619 x2532 x1066)))
(assert (= (or x943 x2648 x201 x90 x2538 x324) x2452))
(assert (x71 x1487))
(assert (x71 x803))
(assert (x71 x1996))
(assert (x71 x407))
(assert (x71 x1130))
(assert (= x1385 (and x1763 x645)))
(assert (= x357 (and (not x1011) x2650)))
(assert (x71 x892))
(assert (x71 x1619))
(assert (x71 x627))
(assert (x71 x1942))
(assert (x71 x1542))
(assert (= (x2495 (x599 x1896)) x1896))
(assert (x839 x722))
(assert (= (and x1710 x1884) x1758))
(assert (= x1516 (and x2686 x1140)))
(assert (x71 x849))
(assert (= (and x670 (not x1545)) x2591))
(assert (x71 x1772))
(assert (x71 x2644))
(assert (x71 x988))
(assert (x71 x25))
(assert (= (and x295 (not x158)) x813))
(assert (x71 x751))
(assert (= x875 (and x885 x665)))
(assert (= 18446744073709551615 (x2495 (x701 18446744073709551615))))
(assert (= x2216 (or x1423 x1788)))
(assert (= (or (and (not x266) x1429) (and x177 x159) x1078) x330))
(assert (= (and (not x2645) x2301) x2516))
(assert (= (and (not x1696) x2610) x615))
(assert (x71 x1165))
(assert (= (=> (and (or (not x1609) x1609) (= (= x2396 0) x1609)) x241) x2569))
(assert (x71 x924))
(assert (= x1265 (and x975 (not x1291))))
(assert (= (and x641 x2726) x1321))
(assert (x71 x242))
(assert (x71 x425))
(assert (= x1674 (or x1138 (and (not x202) x2338) (and x1310 x1450) x2308 (and x2326 x1296) (and x1412 x1407))))
(assert (= x69 (x2495 (x599 x69))))
(assert (and (x628 x2554 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1401 x2554 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1812 x2554 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2192 x2554 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2492 x2554 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2554))))
(assert (x71 x1629))
(assert (x71 x471))
(assert (x71 x1234))
(assert (= (or x1362 x2351) x975))
(assert (= x1177 (and x630 (not x639))))
(assert (= x1669 (or x197 x2562 x673 x2186 x2399 x64)))
(assert (x71 x1891))
(assert (x71 x1632))
(assert (x1107 x1073))
(assert (= (and (not x2507) x1195) x1756))
(assert (x71 x2335))
(assert (x71 x1240))
(assert (x2529 x905))
(assert (x71 x1809))
(assert (= x99 (and x1316 (not x886))))
(assert (= (and (not x53) x872) x1276))
(assert (x1107 x585))
(assert (x71 x30))
(assert (x71 x2642))
(assert (= x1910 (or x1467 x107 x685 x2763)))
(assert (= (or x1082 x2021) x481))
(assert (= (and x1271 x1850) x54))
(assert (x71 x1411))
(assert (= (=> (and (or (not x1337) x1337) (= (= 0 x818) x1337)) x2057) x1455))
(assert (x71 x2102))
(assert (x1107 x1451))
(assert (x71 x1964))
(assert (x71 x1590))
(assert (= (x599 3756033516) (x701 3756033516)))
(assert (x71 x340))
(assert (= x1305 (and x2672 x1584)))
(assert (= x2329 (or x2299 x1158)))
(assert (x71 x2395))
(assert (= (and (not x1295) x1982) x377))
(assert (x71 x859))
(assert (x71 x2748))
(assert (= (and x1937 x1566) x1522))
(assert (= x1483 (and x2180 x1613)))
(assert (= x12 (=> (and (= x1903 x2159) (= x2571 x762)) x956)))
(assert (= (x2495 (x599 x1482)) x1482))
(assert (x71 x981))
(assert (x71 x1870))
(assert (= (and x2668 (not x405)) x1651))
(assert (= x2016 (=> (and (= x2205 0) (= x19 x2282)) x226)))
(assert (= x1130 (x2495 (x599 x1130))))
(assert (= x2534 (and (not x395) x1483)))
(assert (= x869 (and x109 x1062)))
(assert (x71 x1817))
(assert (= (and x355 x268) x2092))
(assert (= x345 (and (not x1055) x2727)))
(assert (= (and x1439 x1048) x1740))
(assert (=> (>= 10000 x1580) (= (x599 x1580) (x701 x1580))))
(assert (= (or x2065 x1674) x310))
(assert (x71 x2330))
(assert (= x1030 (x2495 (x599 x1030))))
(assert (= x441 (=> (= x1539 (> x747 0)) (and (=> (and (and (= x422 (x635 160)) (> x2535 0) (= x59 (= x314 0)) (= (x765 1461501637330902918203684832716283019655932542975 x422) x314) (= x2535 (x635 128))) x1539) (and (=> (and x59 (= x1807 x337)) x1352) (=> (and (not x59) (and (= x1579 (= x1153 x1785)) (= (x2675 (+ 4 x1807)) x1951) (= x1951 x1692) (= (x2675 (+ x1951 32)) x2561) (= (x765 1461501637330902918203684832716283019655932542975 x422) x1153) (= (x1350 (- x2561 x1807)) x452))) (and (=> (and (and (> 3053082678 x2163) (> 2646777772 x2163) (= (or (> x2226 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2226) true) (> 32 x2226))) x1159) (not (< x2163 1889567281)) (= (x2621 (x599 x1785)) x1353) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1902) (= x1144 x452) (> x1353 0) (= x1493 x804) (= x1144 36) (= 1889567281 x2163) (= (x1350 (- x1144 4)) x2226) (not (< x1144 4))) x1579) (and (=> x1159 x1393) (=> (and (not x1159) (and (= x967 x1493) (= x1202 (= x1493 x804)))) (and (=> (not x1202) x1393) (=> (and x1202 (and (<= x2071 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2071 0) (= x2639 32) (= x2071 (x2243 x2695)) (= 1 x1336) (= (x795 (x599 x1493) (x701 2) 0) x2695))) x1925))))) (=> (and (= x1478 (= x1153 x1896)) (not x1579)) (and (=> (and (and (not (> 1889567281 x1828)) (< 0 x1525) (= x1828 1889567281) (= (x2621 (x599 x1896)) x1525) (not (> 4 x222)) (= x222 36) (= (or (and (< x720 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x720) true)) (> x720 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2367) (= x222 x452) (= (x1350 (- x222 4)) x720) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1506) (< x1828 3053082678) (= x855 x804) (> 2646777772 x1828)) x1478) (and (=> x2367 x934) (=> (and (not x2367) (and (= x709 x855) (= x1406 (= x804 x855)))) (and (=> (and x1406 (and (= x1351 32) (= x2012 1) (<= 0 x1971) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1971) (= x1971 (x2423 x854)) (= x854 (x795 (x599 x855) (x701 2) 0)))) x2028) (=> (not x1406) x934))))) (=> (and (= x822 (= x2067 x1153)) (not x1478)) (and (=> (and (and (and (and (= (or (and (< x1449 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1449))) (> x1449 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1550) (= 36 x1996) (> x41 0) (= x1449 (x1350 (- x1996 4))) (= x452 x1996) (= x1334 1889567281) (= x41 (x2621 (x599 x2157))) (not (> 4 x1996)) (= x727 x804) (= x988 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (= x1334 826074471)) (not (> 826074471 x1334))) x2645) (= x2645 (= x1153 x2157))) (not x822)) (and (=> x1550 x1273) (=> (and (not x1550) (and (= x727 x958) (= x2592 (= x727 x804)))) (and (=> (not x2592) x1273) (=> (and (and (= x1555 32) (= x433 (x795 (x599 x727) (x701 1) 0)) (<= 0 x1142) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1142) (= (x598 x433) x1142) (= 1 x2279)) x2592) x1239))))) (=> (and (and (= x300 36) (< 0 x1460) (not (< x300 4)) (= (x1350 (- x300 4)) x335) (= x1460 (x2621 (x599 x2067))) (= x1607 x804) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x47) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x335) (and (= true (<= x335 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x335))) x1361) (= x452 x300) (not (< x2395 826074471)) (= 1889567281 x2395) (not (= 826074471 x2395))) x822) (and (=> x1361 x1134) (=> (and (not x1361) (and (= x1607 x2030) (= x2497 (= x1607 x804)))) (and (=> (not x2497) x1134) (=> (and x2497 (and (= x2255 (x795 (x599 x1607) (x701 1) 0)) (= x30 (x2142 x2255)) (= 1 x138) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x30) (<= 0 x30) (= 32 x2297))) x1835))))))))))))) (=> (and (= x1807 x1222) (not x1539)) x2127)))))
(assert (= (x2495 (x599 x2450)) x2450))
(assert (= (and x2320 x1739) x436))
(assert (x71 x55))
(assert (= x2514 (or x390 (and x2764 x1965))))
(assert (= (and x1300 x2066) x355))
(assert (= (and x1537 (not x1576)) x421))
(assert (x71 x1818))
(assert (x71 x742))
(assert (= x1685 (and x2645 x2301)))
(assert (x71 x382))
(assert (x71 x613))
(assert (= (and x2599 x1398) x207))
(assert (= x155 (or x1024 x2373 x980 x1416)))
(assert (= (x2495 (x701 2753274959)) 2753274959))
(assert (= (=> (and (or x1664 (not x1664)) (= x1664 (= x678 0))) x1932) x2755))
(assert (= (x599 2678909723) (x701 2678909723)))
(assert (x71 x1446))
(assert (x71 x2364))
(assert (x71 x1635))
(assert (x71 x2208))
(assert (x71 x1424))
(assert (x71 x1153))
(assert (= (x701 3467235951) (x599 3467235951)))
(assert (x71 x17))
(assert (= x2648 (and x938 x1162)))
(assert (x71 x336))
(assert (x71 x2297))
(assert (x71 x1929))
(assert (= (x2495 (x701 2678909723)) 2678909723))
(assert (x71 x2550))
(assert (x71 x1855))
(assert (x71 x2454))
(assert (x71 x2392))
(assert (x71 x1073))
(assert (= (x599 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x701 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x71 x2302))
(assert (x71 x1961))
(assert (= x1326 (and (not x2660) x13)))
(assert (x71 x1692))
(assert (x71 x1299))
(assert (x1107 x1319))
(assert (= x119 (=> (and (= x396 x792) (= x133 x85)) x62)))
(assert (and (x628 x327 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1401 x327 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1812 x327 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2192 x327 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2492 x327 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x327))))
(assert (x71 x463))
(assert (= x1100 (or x475 x328 x2193 x915 x602 x972)))
(assert (x2529 x747))
(assert (= (x599 2737736067) (x701 2737736067)))
(assert (x71 x33))
(assert (x71 x2571))
(assert (x71 x235))
(assert (= x166 (and (not x301) x2319)))
(assert (=> (>= 10000 x103) (= (x701 x103) (x599 x103))))
(assert (x71 x1768))
(assert (x71 x1171))
(assert (x71 x682))
(assert (x839 x55))
(assert (x71 x601))
(assert (=> (<= x414 10000) (= (x701 x414) (x599 x414))))
(assert (= (or x1895 x470 x1436) x2556))
(assert (= x2307 (and (not x1859) x1522)))
(assert (x71 x1981))
(assert (x71 x1083))
(assert (= (and x2197 x1267) x324))
(assert (= x1719 (and x2350 x1572)))
(assert (= x748 (and x2161 x2499)))
(assert (= (x2495 (x701 2445980732)) 2445980732))
(assert (x71 x2437))
(assert (= (x701 2867092931) (x599 2867092931)))
(assert (x71 x531))
(assert (x71 x1279))
(assert (x71 x2482))
(assert (x71 x145))
(assert (= x1147 (and x1189 x1738)))
(assert (= x1815 (and x301 x2319)))
(assert (= (and x2503 (not x1221)) x2690))
(assert (= (and x1694 x2105) x2133))
(assert (= (=> (and (= x66 0) (= x464 x479)) x1686) x2451))
(assert (= (x2495 (x701 48119142951092613731468242753959111846395615040638799039548226541748339343360)) 48119142951092613731468242753959111846395615040638799039548226541748339343360))
(assert (= x2061 (and x749 x430)))
(assert (x71 x1121))
(assert (= (and x1823 x807) x2186))
(assert (x2108 x327))
(assert (x71 x2687))
(assert (= (or x23 x1722 x1733 x559) x1727))
(assert (= (and x1282 x313) x1190))
(assert (x71 x2348))
(assert (x71 x1458))
(assert (x71 x1976))
(assert (=> (<= x759 10000) (= (x701 x759) (x599 x759))))
(assert (= x473 (and x1534 x1123)))
(assert (x71 x2608))
(assert (and (x628 x135 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1401 x135 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1812 x135 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2192 x135 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2492 x135 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x135))))
(assert (= (and x2457 x1167) x1078))
(assert (= (and x332 (not x2160)) x1168))
(assert (= x597 (=> (and (= x219 x2376) (= 0 x1206)) x1103)))
(assert (=> (<= x924 10000) (= (x701 x924) (x599 x924))))
(assert (x71 x1720))
(assert (x71 x2280))
(assert (x71 x2096))
(assert (= (x2495 (x599 x415)) x415))
(assert (= x460 (and (not x1450) x1310)))
(assert (x71 x1725))
(assert (x71 x1327))
(assert (= x2154 (=> (= (< 0 x792) x140) (and (=> (and x140 (= (= 0 x85) x1839)) (and (=> (and x1839 (and (= x1192 (x2621 (x599 x1580))) (= (< 0 x1192) x2199))) (and (=> (and (= x244 1) x2199) x88) (=> (not x2199) x1933))) (=> (and (not x1839) (= x2405 (= x85 32))) (and (=> (and x2405 (and (= (not x2043) x1090) (= (= 0 x2136) x2043) (= (ite x1090 1 0) x244))) x88) (=> (not x2405) x1933))))) (=> (not x140) x1933)))))
(assert (= (x2495 (x599 x585)) x585))
(assert (x71 x2554))
(assert (x71 x232))
(assert (= (=> (and (= x768 x1395) (= x1635 x678)) x2755) x1790))
(assert (= x1059 (or x2663 x1593 x1166 x814)))
(assert (x71 x2173))
(assert (= (and (not x260) x2527) x271))
(assert (x71 x2504))
(assert (= x1480 (or (and x1361 x2171) (and (not x2497) x2706))))
(assert (x71 x1955))
(assert (= x210 (and (not x2574) x2710)))
(assert (x1107 x2482))
(assert (= x784 (=> (and (= 0 x1786) (= x1484 x219)) x1521)))
(assert (and (= 27 (x508 9 3)) (= (x508 27 3) 81) (= (x508 3 3) 9) (= (x508 9 9) 81)))
(assert (x71 x2653))
(assert (x71 x2759))
(assert (= (and x1794 (not x2721)) x1204))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2495 (x701 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (x71 x1607))
(assert (x71 x1824))
(assert (x71 x1180))
(assert (x71 x2419))
(assert (x71 x2184))
(assert (= (and x645 (not x1763)) x2473))
(assert (x71 x603))
(assert (x71 x1834))
(assert (= (and x1616 x2580) x1415))
(assert (= (and x483 x705) x1047))
(assert (x71 x1557))
(assert (= x2490 (and (not x1317) x2742)))
(assert (x71 x2268))
(assert (x71 x2368))
(assert (x71 x2389))
(assert (x71 x359))
(assert (= x1389 (and x123 (not x2413))))
(assert (= x1028 (and x926 x824)))
(assert (= (=> (and (= x76 x2391) (= x1422 x1959)) x629) x1639))
(assert (x71 x60))
(assert (= (and (not x67) x15) x1329))
(assert (x71 x292))
(assert (x1107 x1896))
(assert (= x1927 (and x1683 x2453)))
(assert (= x2400 (and x832 x1882)))
(assert (= x550 (and x2667 x2336)))
(assert (x1107 x1030))
(assert (x71 x1248))
(assert (x71 x799))
(assert (= (and x514 (not x167)) x91))
(assert (= x661 (and (not x633) x1796)))
(assert (x71 x1930))
(assert (= x2289 (and x411 x77)))
(assert (x71 x472))
(assert (= (or x2511 (and (not x620) x2329)) x2573))
(assert (= (=> (and (= x785 0) (= x2630 x2282)) x2518) x2010))
(assert (x2529 32))
(assert (x71 x47))
(assert (= (x599 2445980732) (x701 2445980732)))
(assert (x71 x2332))
(assert (x71 x1479))
(assert (x71 x1665))
(assert (x71 x723))
(assert (= (and x2171 (not x1361)) x2706))
(assert (= x644 (and x1243 x1561)))
(assert (= (and x39 (not x2075)) x2610))
(assert (= x1678 (and (not x151) x1909)))
(assert (= x1683 (and x1510 x2411)))
(assert (= x1796 (and x2413 x123)))
(assert (= (and x1945 x686) x366))
(assert (= x1717 (and x2573 (not x1052))))
(assert (= (and x2101 (not x618)) x1126))
(assert (= (=> (and (and (not (= x2067 x1896)) (not (= x804 x699)) (= x1730 (x2638 (x599 x1896))) (= (< 0 (x2621 (x599 x643))) x1148) (< 0 x2067) (<= x652 1461501637330902918203684832716283019655932542975) (= x1 (x2638 (x599 x1785))) (<= 0 x1181) (>= 1461501637330902918203684832716283019655932542975 x725) (<= x1181 1461501637330902918203684832716283019655932542975) (not (= x643 x1785)) x1213 (= x2026 (x2638 (x599 x699))) (>= 1461501637330902918203684832716283019655932542975 x908) (not (= x1785 x804)) (>= 1461501637330902918203684832716283019655932542975 x1649) (not (= x1896 x699)) (<= 0 x908) (>= 1461501637330902918203684832716283019655932542975 x1083) x741 (= x925 (> (x2621 (x599 x2067)) 0)) (not (= x804 x1896)) (>= x652 0) (<= 0 x2743) (<= 0 x356) (not (= x643 x804)) (<= 0 x2277) x1320 (<= 0 x986) (= (< 0 (x2621 (x599 x804))) x1320) (< 0 x699) (>= x1730 0) (not (= x1896 x643)) (= x741 (> (x2621 (x599 x2157)) 0)) (<= x638 1461501637330902918203684832716283019655932542975) (not (= x2067 x643)) (= x2537 x1370) (< 0 x1785) (<= 0 x1490) x1148 (>= 1461501637330902918203684832716283019655932542975 x1896) (not (= x1785 x2157)) (not (= x1896 x2157)) (not (= x2157 x699)) (>= 1461501637330902918203684832716283019655932542975 x1964) (<= 0 x725) (>= 1461501637330902918203684832716283019655932542975 x2628) (<= 0 x179) (<= 0 x1649) (<= x2157 1461501637330902918203684832716283019655932542975) (not (= x2067 x804)) (>= 1461501637330902918203684832716283019655932542975 x2277) x520 (>= x2628 0) (< 0 x1896) (<= x1821 1461501637330902918203684832716283019655932542975) (>= x1301 0) (>= 1461501637330902918203684832716283019655932542975 x699) (> x804 0) (>= 1461501637330902918203684832716283019655932542975 x179) (not (= x804 x2157)) (not (= x699 x2067)) (= (> (x2621 (x599 x1785)) 0) x1213) (>= x1083 0) x1160 (>= 1461501637330902918203684832716283019655932542975 x1846) (>= 1461501637330902918203684832716283019655932542975 x643) (not (= x1785 x1896)) (not (= x2067 x2157)) (<= x1785 1461501637330902918203684832716283019655932542975) (<= 0 x2026) (>= x2000 0) (= x520 (< 0 (x2621 (x599 x1896)))) (>= 1461501637330902918203684832716283019655932542975 x2000) (>= x1846 0) (= x986 (x2638 (x599 x643))) (< 0 x643) (<= x804 1461501637330902918203684832716283019655932542975) (= x604 (x2638 (x599 x2067))) (not (= x643 x2157)) x925 (= x1301 (x2638 (x599 x2157))) (>= x89 0) (not (= x2067 x1785)) (not (= 565014339 x2748)) (= x2748 614698425) (<= x2067 1461501637330902918203684832716283019655932542975) (>= x1 0) (>= x638 0) (not (= x1785 x699)) (<= x89 1461501637330902918203684832716283019655932542975) (not (= x643 x699)) (= x977 (x2621 (x599 x804))) (> x977 0) (>= x604 0) (<= 0 x1964) (>= 1461501637330902918203684832716283019655932542975 x1679) (< 0 x2157) (<= x2743 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1490) (= (< 0 (x2621 (x599 x699))) x1160) (= x356 (x2638 (x599 x804))) (>= x1821 0) (>= x1679 0) (= (x765 1461501637330902918203684832716283019655932542975 x722) x2537)) (and (and (and (>= 1461501637330902918203684832716283019655932542975 x1570) x1662 (= x1634 x2313) (= x165 x2063) (>= 1461501637330902918203684832716283019655932542975 x2313) (not (= x718 565014339)) (<= 0 x2313) (= (x2621 (x599 x804)) x284) (= x1867 x1976) (= x522 x1606) (= x1570 x2374) (= x699 x126) (< 0 x284) (= (= x497 x101) x2239) (= x718 614698425) x161 (= (not (= x2063 x1976)) x1662) (= (x765 1461501637330902918203684832716283019655932542975 x722) x1606) x2239 (= x804 x497) (= (not (= x1676 x126)) x161) (= x1676 x165) (= x1867 x101) (<= 0 x1570)) (and (and (<= x2482 1461501637330902918203684832716283019655932542975) (not (= x788 826074471)) (> x772 0) (<= x1562 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x803 x1562) (>= x1562 0) (= x909 (x795 (x599 x2482) (x701 1) 0)) (= 1889567281 x788) (= x772 (x2621 (x599 x2157))) (= (x329 x909) x1562) (= x2443 x522) (= x2482 x2443) (not (< x788 826074471))) (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x382) (= (x2621 (x599 x2157)) x1824) (= x382 (x329 x655)) (= x382 x25) (= x803 x1145) (= (x795 (x599 x804) (x701 1) 0) x655) (<= x804 1461501637330902918203684832716283019655932542975) (< 0 x1824) (not (= x586 826074471)) (<= 0 x382) (not (> 826074471 x586)) (= x586 1889567281)) (and (and (>= 1461501637330902918203684832716283019655932542975 x699) (= x480 x1632) (= x25 x681) (not (< x1025 826074471)) (= x1025 1889567281) (< 0 x431) (= x431 (x2621 (x599 x2157))) (= x1014 (x795 (x599 x699) (x701 1) 0)) (>= x1632 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1632) (= x1632 (x329 x1014)) (not (= x1025 826074471))) (and (= x648 x995) (= x412 (x765 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2393)) (= x603 (x2675 (+ x2392 31))) (= (x2487 (* x551 32)) x1969) (= (x2675 (+ x2247 x789)) x500) (= (< x2247 x500) x831) (= x1164 x1768) (= x1170 (ite x1833 1 0)) (<= x1765 1461501637330902918203684832716283019655932542975) (<= x1768 1461501637330902918203684832716283019655932542975) (= (< 18446744073709551615 x2257) x426) (= (or x2213 x426) x1833) (= (x2675 (+ x1908 31)) x2393) (= x995 0) (<= 0 x1650) (= x1908 (x2675 (+ x1969 32))) (<= 0 x1768) (= x2213 (< x2257 128)) (and (> x1182 35) (= (<= x1182 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (>= x1765 0) (not (> x265 18446744073709551615)) (not (or (and (< x833 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x833))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x833))) (= x1170 0) (= x2257 (x2675 (+ 128 x412))) (< 0 x2047) (= 565014339 x1757) (= x789 (x2487 (* 32 x551))) (not (> 4 x1182)) (= x1164 x1044) (= (x2675 (+ 4 x265)) x2392) (= (x2675 (+ x2392 32)) x2247) (>= 1461501637330902918203684832716283019655932542975 x1650) (= x551 (x1503 x2392)) (not (> x500 x1182)) (= x833 (x1350 (- x1182 4))) (= x480 x2570) (not (< 18446744073709551615 x551)) (= x1765 x1634) (= x2047 (x2621 (x599 x804))) (or (and (<= x1182 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x603 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x603 x1182) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1182) (<= x603 57896044618658097711785492504343953926634992332820282019728792003956564819967))))))))) (and (>= x10 0) (<= 0 x1915) (>= 1461501637330902918203684832716283019655932542975 x1834) (= x2121 (x809 128)) (>= 1461501637330902918203684832716283019655932542975 x2496) (= x1915 (x574 x2224)) (> 1461501637330902918203684832716283019655932542976 x1915) (< x1553 3756033516) (not (= 3467235951 x1553)) (<= x2238 1461501637330902918203684832716283019655932542975) (<= 0 x2459) (not (= 2952933380 x1553)) (>= 1461501637330902918203684832716283019655932542975 x10) (not (< x1553 2867092931)) (not (> 1926446194 x1553)) (not (= 2867092931 x1553)) (= (x1031 x38 1) x2224) (= x358 (x795 (x599 x1834) (x701 3) 0)) (= x2238 (x2229 x38)) (= x165 x1834) (= 3648997476 x1553) (<= 0 x2238) (= x1867 (x809 192)) (>= x2548 0) (>= 1461501637330902918203684832716283019655932542975 x2548) (<= x1915 1461501637330902918203684832716283019655932542975) (= x165 x1370) (> 1461501637330902918203684832716283019655932542976 x2238) (> x1961 0) (= x38 (x1031 x358 1)) (= (x2621 (x599 x699)) x1961) (= x2459 (x1868 x358)) (not (= 3459381112 x1553)) (<= x2459 1461501637330902918203684832716283019655932542975) (= (x809 160) x1776) (<= 0 x2496) (> 1461501637330902918203684832716283019655932542976 x2459)))) (and (=> (not x831) x1531) (=> x831 x587))) x1515))
(assert (x71 x1208))
(assert (= (and x1048 (not x1439)) x2353))
(assert (= x1348 (and x1761 x490)))
(assert (= (x2495 (x599 x1785)) x1785))
(assert (= x856 (and x1995 x2746)))
(assert (= x1950 (and x2372 x622)))
(assert (x71 x276))
(assert (=> (>= 10000 x2099) (= (x701 x2099) (x599 x2099))))
(assert (x71 x530))
(assert (x71 x2358))
(assert (x71 x1786))
(assert (x71 x2756))
(assert (= x1077 (and (not x2397) x877)))
(assert (x71 x1729))
(assert (x71 x758))
(assert (x71 x2196))
(assert (=> (>= 10000 x130) (= (x599 x130) (x701 x130))))
(assert (= x1935 (and (not x2202) x512)))
(assert (x71 x2717))
(assert (x71 x517))
(assert (x71 x1254))
(assert (= (and x239 x661) x688))
(assert (x71 x2316))
(assert (x71 x1552))
(assert (x1016 x722))
(assert (= x1224 (or x2400 x1617 x1177 x1403 x1815 x259 x2355)))
(assert (= (or x54 x539 x1670 x2273 x217 x477) x1459))
(assert (= (and x830 x1530) x1847))
(assert (x71 x1954))
(assert (= (=> (and (= x2325 x1060) (= x818 x1929)) x1455) x2734))
(assert (= (x599 872247156) (x701 872247156)))
(assert (= x955 (and x1975 x916)))
(assert (= (=> (and (= x2205 x2396) (= x2244 x19)) x2569) x226))
(assert (x71 x2119))
(assert (= x2194 (and (not x209) x2251)))
(assert (= (=> (and (= (= x1186 0) x773) (or x773 (not x773))) x1448) x1045))
(assert (x71 x2293))
(assert (x71 x833))
(assert (= (or x288 x2311) x2414))
(assert (x71 x2104))
(assert (x71 x2148))
(assert (x71 x227))
(assert (x1107 x2364))
(assert (= (and x1750 x2465) x2691))
(assert (= x1714 (or x1129 x667)))
(assert (x71 x1705))
(assert (x71 x1344))
(assert (= (and x1400 x2659) x2549))
(assert (x1016 x135))
(assert (x71 x1473))
(assert (=> (<= x2450 10000) (= (x599 x2450) (x701 x2450))))
(assert (= (and x39 x2075) x1225))
(assert (= (x701 614698425) (x599 614698425)))
(assert (x71 x600))
(assert (x71 x1378))
(assert (x71 x604))
(assert (x71 x1223))
(assert (= (and x1360 x1245) x1504))
(assert (= x1004 (and (not x1889) x166)))
(assert (= x1189 (and (not x1102) x688)))
(assert (x71 x1089))
(assert (x71 x192))
(assert (= (and x298 (not x828)) x2))
(assert (= (and x1204 x1597) x494))
(assert (= (and x2512 x1511) x1347))
(assert (= (and x118 (not x1217)) x1041))
(assert (x71 x1842))
(assert (= x1766 (and x2053 x1326)))
(assert (= (or (and (not x773) x481) x984) x39))
(assert (= (and x1742 x1687) x373))
(assert (x71 x1230))
(assert (x71 x1383))
(assert (= (and (not x152) x1559) x1092))
(assert (x71 x1218))
(assert (x71 x676))
(assert (= (x2495 (x701 1889567281)) 1889567281))
(assert (x71 x1379))
(assert (x1107 x924))
(assert (x71 x2304))
(assert (= (or x1672 x1146) x2188))
(assert (= x1604 (=> (and (= x2052 x2159) (= x762 x2119)) x956)))
(assert (x71 x588))
(assert (x71 x1128))
(assert (x1107 x31))
(assert (x71 x464))
(assert (= (and x1713 x657) x1689))
(assert (= (and x1122 x1630) x1825))
(assert (and (x628 x2393 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1401 x2393 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1812 x2393 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2192 x2393 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2492 x2393 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2393))))
(assert (x71 x1536))
(assert (x71 x2520))
(assert (= x1272 (and x830 (not x1530))))
(assert (x71 x1049))
(assert (x71 x904))
(assert (x71 x193))
(assert (= (=> (and (= x2445 x2571) (= 0 x1903)) x12) x2662))
(assert (x71 x221))
(assert (= (and x605 x1375) x2212))
(assert (= (and x2405 x1358) x1362))
(assert (= (=> (and (= x2531 x2688) (= x2334 x1870)) x2484) x2736))
(assert (x71 x930))
(assert (x71 x1989))
(assert (= (and x2479 x581) x2746))
(assert (= x1911 (and (not x1110) x2045)))
(assert (x71 x1876))
(assert (x71 x132))
(assert (x71 x1581))
(assert (= (and x1096 (not x831)) x1363))
(assert (x71 x1807))
(assert (x71 x1425))
(assert (x2461 x2378))
(assert (x71 x1546))
(assert (= 2952933380 (x2495 (x701 2952933380))))
(assert (= (and (not x2720) x70) x237))
(assert (= (and x2514 (not x2624)) x142))
(assert (x71 x449))
(assert (x71 x2370))
(assert (=> (<= x585 10000) (= (x701 x585) (x599 x585))))
(assert (x1107 x1482))
(assert (x71 x2478))
(assert (x71 x2361))
(assert (= x389 (and x630 x639)))
(assert (= x1881 (and x1777 x2657)))
(assert (x71 x1743))
(assert (= x1358 (and x1042 (not x1839))))
(assert (x71 x2099))
(assert (= x1657 (and x787 (not x1435))))
(assert (x71 x1843))
(assert (x71 x1668))
(assert (x71 x757))
(assert (= (and x1663 x2132) x933))
(assert (x71 x785))
(assert (x71 x2155))
(assert (= (or x1491 x558 x128 x1430 x2248 x2385) x852))
(assert (= (x2495 (x599 x2157)) x2157))
(assert (= x2273 (and x1028 x2135)))
(assert (= x1063 (and (not x1762) x1126)))
(assert (= x1884 (and x2637 x1356)))
(assert (= x870 (and x579 (not x406))))
(assert (x71 x2531))
(assert (x71 x2435))
(assert (= x1246 (and x2490 x713)))
(assert (= (and x1756 x322) x90))
(assert (= (and x1917 (not x1143)) x408))
(assert (= x2532 (or x2452 x2189)))
(assert (x71 x2150))
(assert (= (=> (and (= x785 x2396) (= x2244 x2630)) x2569) x2518))
(assert (x71 x1848))
(assert (x71 x2234))
(assert (=> (>= 10000 x727) (= (x701 x727) (x599 x727))))
(assert (= x877 (and x1945 (not x686))))
(assert (x71 x353))
(assert (= x2686 (and x516 x1963)))
(assert (x71 x957))
(assert (= x1779 (=> (and (= x2316 x1848) (= x1293 x808)) x549)))
(assert (x71 x349))
(assert (x71 x1730))
(assert (x71 x818))
(assert (= (and (not x2270) x671) x2555))
(assert (= (or x1376 (and x1292 (not x1585))) x2105))
(assert (x71 x1469))
(assert (x71 x717))
(assert (= x797 (and x1426 x384)))
(assert (x71 x731))
(assert (= (and (not x1579) x2033) x878))
(assert (x71 x716))
(assert (= x243 (and x1892 x495)))
(assert (= x1095 (and x546 x1002)))
(assert (= (x599 2646777772) (x701 2646777772)))
(assert (= (x2495 (x599 x1451)) x1451))
(assert (= x1314 (and (not x730) x1440)))
(assert (= x2493 (and x1291 x975)))
(assert (x71 x2613))
(assert (= x1794 (and x2283 (not x2588))))
(assert (= (and x546 (not x1002)) x2580))
(assert (= (and x1794 x2721) x1270))
(assert (x1107 x1723))
(assert (= x2377 (and (not x2049) x1445)))
(assert (x71 x963))
(assert (= (and (not x46) x1970) x1423))
(assert (= x1601 (and x176 (not x2199))))
(assert (x71 x1374))
(assert (x71 x1228))
(assert (x71 x461))
(assert (= (and x1664 x2429) x903))
(assert (= x2658 (or x869 x1348 x2225 x1798 x595 x1117)))
(assert (x71 x2628))
(assert (= (and x2624 x2514) x1823))
(assert (x71 x1605))
(assert (= (and (not x2167) x174) x2350))
(assert (= (and x1238 x1539) x976))
(assert (x1107 x1834))
(assert (= x1956 (and x947 (not x1759))))
(assert (x71 x708))
(assert (x71 x2305))
(assert (= (and x2469 x1216) x2004))
(assert (x71 x134))
(assert (= x514 (and (not x1738) x1189)))
(assert (x71 x1849))
(assert (x71 x1251))
(assert (= (and x615 x2051) x2215))
(assert (x71 x1890))
(assert (x71 x1451))
(assert (= (and x2231 x2651) x2764))
(assert (x1107 x1237))
(assert (x71 x2542))
(assert (x71 x1707))
(assert (= x838 (and x2340 x270)))
(assert (x71 x1578))
(assert (= x2697 (=> (and (= x367 x2234) (= 0 x1487)) x694)))
(assert (= (and x460 x1784) x1138))
(assert (x71 x1466))
(assert (= x1067 (and (not x1752) x2473)))
(assert (= x2433 (or x1289 x1432 x1948 x2254 x1950 x553)))
(assert (=> (<= x2067 10000) (= (x599 x2067) (x701 x2067))))
(assert (x71 x2443))
(assert (= x2007 (and x932 x2568)))
(assert (= (and x1756 (not x322)) x2189))
(assert (x71 x1156))
(assert (= (=> (and (= x219 x1422) (= 0 x2391)) x1639) x2088))
(assert (x71 x1634))
(assert (= x885 (and (not x2468) x32)))
(assert (= (and x1774 x1836) x602))
(assert (= x2560 (=> (and (= x2696 x1848) (= x1293 x1497)) x549)))
(assert (= (and x429 (not x1563)) x1660))
(assert (= (and x223 (not x1556)) x1547))
(assert (x71 x1495))
(assert (= x2482 (x2495 (x599 x2482))))
(assert (x1107 x2343))
(assert (= (and x1317 x2742) x2117))
(assert (x71 x69))
(assert (= (and x2607 (not x2749)) x992))
(assert (= x832 (and x389 (not x1285))))
(assert (x71 x1386))
(assert (x71 x456))
(assert (x71 x2422))
(assert (x71 x2235))
(assert (= (and x2480 x1365) x843))
(assert (= (or x1441 x507 x650 x211 x2674 x851) x2430))
(assert (= (and x2366 (not x231)) x15))
(assert (= (x2495 (x599 x103)) x103))
(assert (x71 x2761))
(assert (= x2373 (or x2591 x2204)))
(assert (= (and x564 (not x150)) x1735))
(assert (x71 x66))
(assert (x71 x1322))
(assert (x71 x2037))
(assert (x71 x1821))
(assert (= (or x1612 (and (not x1609) x351)) x32))
(assert (x71 x1114))
(assert (= (and x1921 x1063) x1675))
(assert (x71 x2109))
(assert (= (=> (and (= x219 x2627) (= x763 0)) x273) x1408))
(assert (= x830 (and (not x2222) x2123)))
(assert (= (and (not x2479) x581) x683))
(assert (= (x599 1784838210) (x701 1784838210)))
(assert (=> (>= 10000 x1482) (= (x701 x1482) (x599 x1482))))
(assert (= x2260 (and x420 x550)))
(assert (= (and (not x1761) x490) x14))
(assert (x71 x2496))
(assert (x71 x1132))
(assert (= x579 (and x1009 x2739)))
(assert (x71 x1335))
(assert (= (x2495 (x599 x2099)) x2099))
(assert (= (and x1388 (not x822)) x2301))
(assert (= (x2495 (x701 72223263258191293651604190264004579703475585967499159981614695267027195527168)) 72223263258191293651604190264004579703475585967499159981614695267027195527168))
(assert (=> (<= x1834 10000) (= (x599 x1834) (x701 x1834))))
(assert (x71 x246))
(assert (x71 x871))
(assert (= (and (not x1509) x1719) x1937))
(assert (x71 x1862))
(assert (x71 x252))
(assert (x71 x2334))
(assert (x71 x2078))
(assert (x71 x1293))
(assert (= x130 (x2495 (x599 x130))))
(assert (x71 x835))
(assert (x1107 x1785))
(assert (= (=> (and (= x1742 (= x325 0)) (or x1742 (not x1742))) x2515) x185))
(assert (x71 x133))
(assert (x71 x1562))
(assert (x71 x94))
(assert (x71 x2486))
(assert (= x2045 (and x238 (not x2175))))
(assert (= (and x1905 (not x910)) x1774))
(assert (x2461 x422))
(assert (= (and x1529 x1574) x1185))
(assert (x71 x2669))
(assert (= x2057 (=> (= x190 (= 0 x818)) (and (=> x190 x756) (=> (and (not x190) (= (or (> x2325 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2325 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2325 32))) x1245)) (and (=> x1245 x756) (=> (not x1245) x2174)))))))
(assert (x71 x2322))
(assert (= (and x2326 (not x1296)) x2065))
(assert (x1107 x855))
(assert (= x1024 (or x2646 x2381)))
(assert (= x256 (and (not x2116) x91)))
(assert (x71 x2312))
(assert (x71 x2244))
(assert (x71 x188))
(assert (x71 x1115))
(assert (x71 x1878))
(assert (= x2480 (and (not x739) x157)))
(assert (x71 x555))
(assert (= x700 (=> (and (= 0 x1254) (= x2282 x2546)) x1263)))
(assert (x71 x1517))
(assert (= x1445 (or x973 (and (not x965) x1059))))
(assert (= (and x6 x2723) x1777))
(assert (= (and x841 x1983) x2491))
(assert (= (and x2432 x1406) x2328))
(assert (x71 x804))
(assert (= (and (not x1708) x813) x1918))
(assert (= x1654 (and x333 x2306)))
(assert (= x2185 (or x1258 x1633 x2691 x1944 x933 x363)))
(assert (x71 x2177))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2495 (x701 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (= (=> (and (= x1984 x2334) (= x2688 x2666)) x2484) x1804))
(assert (=> (<= x1896 10000) (= (x701 x1896) (x599 x1896))))
(assert (=> (>= 10000 x415) (= (x599 x415) (x701 x415))))
(assert (and (x628 x439 32) (x1401 x439 32) (x1812 x439 32) (=> (> 32 0) (= (+ (* 32 (x2192 x439 32)) (x2492 x439 32)) x439))))
(assert (x71 x2441))
(assert (= x2714 (and x1541 x1231)))
(assert (x71 x2170))
(assert (= (or x2519 x2433) x2597))
(assert (= (and x661 (not x239)) x786))
(assert (= (and (not x483) x705) x2664))
(assert (= (and x511 x2011) x411))
(assert (x71 x2680))
(assert (x71 x724))
(assert (= x865 (or x923 x1956)))
(assert (= (and (not x1965) x2764) x2702))
(assert (= (=> (and (= x2448 x479) (= 0 x1989)) x753) x1035))
(assert (=> (>= 10000 x1130) (= (x599 x1130) (x701 x1130))))
(assert (x71 x2325))
(assert (= x2503 (and x1691 x901)))
(assert (x71 x663))
(assert (= (and x1657 x1309) x2671))
(assert (= (and x209 x2251) x660))
(assert (= x2127 (=> (= x337 x1222) x1352)))
(assert (= x1399 (and x2292 x142)))
(assert (and (x628 x439 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1401 x439 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1812 x439 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2192 x439 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2492 x439 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x439))))
(assert (x71 x117))
(assert (= (and x2723 (not x6)) x2428))
(assert (= x2762 (=> (and (= x1229 (x2675 (+ x1912 32))) (= (not (> x905 4)) x1284) (= x945 (x2675 (+ 32 x1741))) (= (x24 x1741) x380)) (and (=> (and (= x860 x1229) (= x2715 x945) (= x27 4)) x1339) x1284))))
(assert (= x1468 (and x1272 x499)))
(assert (= x259 (and x2217 (not x2485))))
(assert (x71 x1603))
(assert (= x1430 (and x1509 x1719)))
(assert (x71 x2589))
(assert (x71 x2620))
(assert (x71 x2729))
(assert (x71 x414))
(assert (= (=> (and (= x28 x525) (= x1452 0)) x675) x73))
(assert (x71 x1026))
(assert (= x1698 (and x1574 (not x1529))))
(assert (= x702 (or x2004 x2428 x1516 x1651 x58 x990 x1881)))
(assert (x71 x219))
(assert (= (=> (and (= x1693 x792) (= x1628 x85)) x62) x120))
(assert (= (and x506 x837) x826))
(assert (=> (>= 10000 x2482) (= (x599 x2482) (x701 x2482))))
(assert (x71 x780))
(assert (= (and x2222 x2123) x711))
(assert (x71 x1173))
(assert (x1107 x130))
(assert (= x2156 (and x295 x158)))
(assert (x71 x2067))
(assert (x71 x1357))
(assert (= (and x2456 (not x1154)) x228))
(assert (x71 x2696))
(assert (x71 x1142))
(assert (x71 x894))
(assert (x71 x110))
(assert (= (and x1966 x2616) x1787))
(assert (= x1966 (or x1091 (and (not x2077) x2188))))
(assert (= x1511 (and (not x1288) x843)))
(assert (x71 x2047))
(assert (= (and x1238 (not x1539)) x1997))
(assert (x71 x1567))
(assert (= (and (not x1995) x2746) x1753))
(assert (= (and (not x1243) x1561) x641))
(assert (x71 x789))
(assert (= 1086394137 (x2495 (x701 1086394137))))
(assert (= (=> (and (= x367 x2309) (= x1466 0)) x1595) x829))
(assert (x71 x498))
(assert (x71 x1331))
(assert (= (and (not x2741) x1092) x1946))
(assert (x71 x1275))
(assert (x71 x1036))
(assert (= (x599 3648997476) (x701 3648997476)))
(assert (x71 x1484))
(assert (x71 x2553))
(assert (= (=> (= x2049 (= x2688 0)) (and (=> x2049 x2418) (=> (and (= (or (and (> 32 x2334) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2334))) (> x2334 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2500) (not x2049)) (and (=> (and (not x2500) (= x1858 1)) x2354) (=> x2500 x2418))))) x1269))
(assert (= (x599 48119142951092613731468242753959111846395615040638799039548226541748339343360) (x701 48119142951092613731468242753959111846395615040638799039548226541748339343360)))
(assert (x1107 x699))
(assert (x1107 x69))
(assert (= x435 (and x1110 x2045)))
(assert (= (and x1326 (not x2053)) x2672))
(assert (x71 x2753))
(assert (= (x2495 (x599 x521)) x521))
(assert (= x273 (=> (and (= x763 x76) (= x2627 x1959)) x629)))
(assert (x71 x1086))
(assert (= x1471 (=> (and (= x367 x1344) (= x1641 0)) x1367)))
(assert (x71 x80))
(assert (x71 x2466))
(assert (x2461 x771))
(assert (x71 x774))
(assert (x71 x536))
(assert (x839 x422))
(assert (x71 x585))
(assert (= (or x1241 x2733 x1645 x1886 x2156 x18) x1840))
(assert (= (x2495 (x701 3053082678)) 3053082678))
(assert (x1016 x2378))
(assert (x71 x1897))
(assert (x71 x2703))
(assert (x71 x2153))
(assert (= 1461501637330902918203684832716283019655932542975 (x2495 (x701 1461501637330902918203684832716283019655932542975))))
(assert (= (and (not x40) x2307) x1111))
(assert (and (x628 x677 32) (x1401 x677 32) (x1812 x677 32) (=> (> 32 0) (= (+ (* 32 (x2192 x677 32)) (x2492 x677 32)) x677))))
(assert (= x2294 (and x2194 x2640)))
(assert (= (and x2609 x978) x2298))
(assert (= x1743 (x2495 (x599 x1743))))
(assert (x71 x171))
(assert (x71 x1366))
(assert (x71 x819))
(assert (= (=> (and (= x2688 x191) (= x2334 x2636)) x2484) x400))
(assert (= x1586 (and x2615 (not x175))))
(assert (= (and x2210 x2534) x2320))
(assert (x71 x2455))
(assert (x71 x1485))
(assert (x71 x879))
(assert (x71 x2230))
(assert (x71 x3))
(assert (=> (>= 10000 x2343) (= (x599 x2343) (x701 x2343))))
(assert (x71 x147))
(assert (= (and x828 x298) x1498))
(assert (= x230 (and x1167 (not x2457))))
(assert (x71 x2257))
(assert (= x1486 (and (not x1631) x1698)))
(assert (= (x2495 (x701 1461501637330902918203684832716283019655932542976)) 1461501637330902918203684832716283019655932542976))
(assert (= (x599 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x701 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x71 x284))
(assert (= (or (and x2582 x1498) x2449 x1391 (and x1556 x223) (and (not x1079) x1558) (and x271 x2048)) x1372))
(assert (x71 x2750))
(assert (x71 x108))
(assert (x71 x371))
(assert (= (=> (and (= x2044 x1060) (= x1929 0)) x2734) x1438))
(assert (x71 x1508))
(assert (x71 x1749))
(assert (= x1622 (and (not x2337) x1505)))
(assert (= x621 (=> (and (= x2078 x2636) (= 0 x191)) x400)))
(assert (x1016 x1218))
(assert (x71 x1867))
(assert (x71 x586))
(assert (x71 x995))
(assert (= (or x948 x2379 x2439 x1270 x989 x494) x2646))
(assert (x71 x2206))
(assert (x71 x467))
(assert (x71 x842))
(assert (x71 x1671))
(assert (= (and x131 x459) x1235))
(assert (= (or (and x1159 x1952) (and x1075 (not x1202))) x2552))
(assert (= (and x877 x2397) x1046))
(assert (= x1704 (and x1489 x2149)))
(assert (= x1659 (or x2275 x1343 x2133 x875 x1922 x1314 x318 x940 x2664 x2212)))
(assert (= (and (not x1827) x243) x2217))
(assert (x71 x950))
(assert (= x2567 (=> (and (= x1312 x1293) (= x1848 x132)) x549)))
(assert (x71 x2055))
(assert (x71 x1782))
(assert (= (and (not x1637) x2593) x1247))
(assert (= x1518 (and x2194 (not x2640))))
(assert (= (=> (and (= x1585 (= 0 x76)) (or x1585 (not x1585))) x1184) x629))
(assert (x71 x2085))
(assert (x71 x2393))
(assert (x71 x1006))
(assert (= (and x131 (not x459)) x2474))
(assert (x71 x908))
(assert (x71 x734))
(assert (= x1356 (and (not x2726) x641)))
(assert (x1107 x2312))
(assert (x71 x1201))
(assert (x71 x1108))
(assert (x71 x1493))
(assert (x71 x2636))
(assert (= x2098 (and x157 x739)))
(assert (= (or x2665 x1644) x2763))
(assert (and (x628 x327 32) (x1401 x327 32) (x1812 x327 32) (=> (> 32 0) (= (+ (* 32 (x2192 x327 32)) (x2492 x327 32)) x327))))
(assert (= (x2495 (x701 1784838210)) 1784838210))
(assert (x1107 x2067))
(assert (= (and x1414 x2176) x914))
(assert (= x2767 (and x2118 (not x2458))))
(assert (x71 x2533))
(assert (x71 x1259))
(assert (= 2867092931 (x2495 (x701 2867092931))))
(assert (x71 x666))
(assert (= x1543 (and x1613 (not x2180))))
(assert (= x2768 (or x2289 x623 x341 x262 x1678)))
(assert (= (+ (x2495 x358) 1) (x2495 (x1031 x358 1))))
(assert (x71 x1506))
(assert (x2461 x2554))
(assert (x1016 x677))
(assert (x71 x619))
(assert (x71 x455))
(assert (x71 x2090))
(assert (x71 x1328))
(assert (= x804 (x2495 (x599 x804))))
(assert (= x2165 (and x1501 (not x354))))
(assert (x71 x2737))
(assert (= (=> (= 0 x1603) x258) x387))
(assert (x71 x2262))
(assert (=> (>= 10000 x2364) (= (x599 x2364) (x701 x2364))))
(assert (= (and x210 (not x1653)) x1137))
(assert (= x2343 (x2495 (x599 x2343))))
(assert (x71 x1449))
(assert (= (=> (= (= x2056 0) x2458) (and (=> x2458 x387) (=> (and (and (= (or (> x299 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x299) (= (<= x299 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x2539) (= x2177 (x2675 (+ x9 x139))) (= (x765 115792089237316195423570985008687907853269984665640564039457584007913129639904 x677) x9) (= x677 (x2675 (+ x299 31)))) (not x2458)) (and (=> (and (not x2539) (and (= x1953 (x2675 (+ 64 x1809))) (= x1402 (x1350 (- x1953 x2177))) (= x2427 (= x2364 x1785)) (< x2364 1461501637330902918203684832716283019655932542976) (= x1949 (x795 (x599 x2364) (x701 17) 0)) (= (x2675 (+ x1809 32)) x2410) (= x969 (x795 (x599 x1030) x1949 0)) (= x1809 (x2675 (+ x2177 4))) (>= x1248 0) (= (x2481 x969) x1248) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1248) (> 1461501637330902918203684832716283019655932542976 x2364))) (and (=> (and (and (not (< x1458 1889567281)) (not (= 2646777772 x1458)) (= x316 x117) (< x1458 3053082678) (= 68 x461) (not (= x1458 2678909723)) (not (< x1458 2646777772)) (not (> 4 x461)) (= x2155 (x2621 (x599 x1785))) (= x530 x1248) (= x1764 (x1350 (- x461 4))) (> x2155 0) (= x461 x1402) (= x1458 2835717307) (= x285 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (or (and (= true (<= x1764 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x1764)) (> x1764 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1529)) x2427) (and (=> (and (not x1529) (= (= x117 x316) x1631)) (and (=> (not x1631) x597) (=> (and (and (= (x2682 x469) x1554) (= (< x1554 x1248) x1414) (= (x795 (x599 x1785) (x701 2) 0) x469) (= x530 x1877) (<= x1554 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1554)) x1631) (and (=> (and (= (< x1554 x530) x2222) (not x1414)) (and (=> (and (and (<= x1578 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x795 (x599 x69) (x701 2) 0) x898) (= (x2252 x898) x1578) (= x1530 (< x891 x1578)) (= x881 (x1350 (- x1554 x530))) (= x1029 (x795 (x599 x1785) (x701 2) 0)) (>= x1578 0) (= x891 (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x530)))) (not x2222)) (and (=> x1530 x597) (=> (and (and (= (x2675 (+ x530 x1578)) x321) (= x499 (< x321 x1578))) (not x1530)) (and (=> (and (not x499) (and (= 1 x1206) (= x2376 32) (= x2245 (x795 (x599 x69) (x701 2) 0)))) x1103) (=> x499 x597))))) (=> x2222 x597))) (=> x1414 x597))))) (=> x1529 x597))) (=> (and (not x2427) (= (= x2364 x1896) x2180)) (and (=> (and (not x2180) (= (= x2364 x2067) x1097)) (and (=> (and (and (= x901 (= x2364 x2157)) (and x901 (and (= x1402 x904) (not (> 826074471 x1454)) (= x1454 2835717307) (= x2153 x1248) (= (x2621 (x599 x2157)) x1366) (= x676 (x1350 (- x904 4))) (not (= x1454 826074471)) (not (> 4 x904)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x278) (not (= x1454 2514000705)) (= x316 x2523) (= (or (and (= (<= x676 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x676)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x676)) x1221) (< 0 x1366) (not (= 1889567281 x1454)) (= 68 x904)))) (not x1097)) (and (=> (and (not x1221) (= x1199 (= x2523 x316))) (and (=> (not x1199) x1408) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2504) (>= x2504 0) (= (x1074 x2541) x2504) (= x2024 x2153) (= (> x1248 x2504) x2197) (= x2541 (x795 (x599 x1785) (x701 1) 0))) x1199) (and (=> x2197 x1408) (=> (and (= (< x2504 x2153) x938) (not x2197)) (and (=> (and (not x938) (and (= (x2331 x1116) x292) (>= x292 0) (= (x795 (x599 x1785) (x701 1) 0) x1354) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x292) (= (x795 (x599 x69) (x701 1) 0) x1116) (= (x1350 (- x2504 x2153)) x517) (= x2333 (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2153))) (= x2507 (> x292 x2333)))) (and (=> (and (not x2507) (and (= x811 (x2675 (+ x2153 x292))) (= x322 (< x811 x292)))) (and (=> (and (not x322) (and (= x1681 (x795 (x599 x69) (x701 1) 0)) (= x763 1) (= 1 x2042) (= x2627 32))) x273) (=> x322 x1408))) (=> x2507 x1408))) (=> x938 x1408))))))) (=> x1221 x1408))) (=> (and (and (= x1761 (or (> x1294 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1294 64) (= true (<= x1294 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (> 826074471 x637)) (not (= 1889567281 x637)) (= x1248 x2756) (not (> 4 x2322)) (= x588 76450787359836037641860180984291677749980919077056822294353438043884394381312) (< 0 x2375) (= x2322 68) (not (= 2514000705 x637)) (= (x1350 (- x2322 4)) x1294) (= x1402 x2322) (not (= x637 826074471)) (= x1955 x316) (= x2375 (x2621 (x599 x2067))) (= 2835717307 x637)) x1097) (and (=> (and (= x1523 (= x1955 x316)) (not x1761)) (and (=> (and (and (= x1062 (< x449 x1248)) (= x2293 x2756) (= x449 (x580 x569)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x449) (= (x795 (x599 x1785) (x701 1) 0) x569) (>= x449 0)) x1523) (and (=> x1062 x784) (=> (and (not x1062) (= x1050 (< x449 x2756))) (and (=> x1050 x784) (=> (and (and (= x1988 (x795 (x599 x1785) (x701 1) 0)) (= x2087 (x1350 (- x449 x2756))) (= (x2505 x1924) x110) (= x1924 (x795 (x599 x69) (x701 1) 0)) (>= x110 0) (<= x110 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x175 (< x1176 x110)) (= x1176 (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2756)))) (not x1050)) (and (=> x175 x784) (=> (and (and (= x294 (< x1228 x110)) (= x1228 (x2675 (+ x2756 x110)))) (not x175)) (and (=> x294 x784) (=> (and (and (= 1 x1786) (= 32 x1484) (= 1 x2394) (= x1500 (x795 (x599 x69) (x701 1) 0))) (not x294)) x1521))))))))) (=> (not x1523) x784))) (=> x1761 x784))))) (=> (and (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1357) (= x1402 x505) (= x1248 x323) (= x395 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x437)) (> 64 x437)) (> x437 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> 3053082678 x2594) (= x505 68) (not (< x505 4)) (= (x1350 (- x505 4)) x437) (not (= 2646777772 x2594)) (not (> 2646777772 x2594)) (= x2594 2835717307) (not (< x2594 1889567281)) (> x963 0) (= x963 (x2621 (x599 x1896))) (not (= x2594 2678909723)) (= x291 x316)) x2180) (and (=> x395 x2088) (=> (and (= (= x316 x291) x2210) (not x395)) (and (=> (and x2210 (and (<= x2235 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1739 (> x1248 x2235)) (= (x1602 x1865) x2235) (<= 0 x2235) (= x323 x2335) (= (x795 (x599 x1785) (x701 2) 0) x1865))) (and (=> x1739 x2088) (=> (and (not x1739) (= (< x2235 x323) x1264)) (and (=> (and (and (>= x1115 0) (= x1421 (x795 (x599 x69) (x701 2) 0)) (= (x1888 x1421) x1115) (= (x1350 (- x2235 x323)) x589) (= x632 (x795 (x599 x1785) (x701 2) 0)) (= (> x1115 x1588) x1317) (<= x1115 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1588 (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x323)))) (not x1264)) (and (=> (and (and (= x713 (> x1115 x1223)) (= (x2675 (+ x323 x1115)) x1223)) (not x1317)) (and (=> x713 x2088) (=> (and (and (= 1 x2391) (= 32 x1422) (= x1227 (x795 (x599 x69) (x701 2) 0))) (not x713)) x1639))) (=> x1317 x2088))) (=> x1264 x2088))))) (=> (not x2210) x2088))))))))) (=> x2539 x387))))) x1013))
(assert (= (and (not x713) x2490) x1919))
(assert (= x176 (and x1042 x1839)))
(assert (= x2674 (and x2574 x2710)))
(assert (x71 x1084))
(assert (x71 x746))
(assert (=> (<= x1607 10000) (= (x599 x1607) (x701 x1607))))
(assert (x71 x1569))
(assert (= (and x1547 x1457) x1391))
(assert (x71 x187))
(assert (x71 x1666))
(assert (= (and x2217 x2485) x630))
(assert (x71 x2523))
(assert (= (or x1997 x2216) x275))
(assert (= 29289127993025145568725129057828671567744754166070328588094505464281371246592 (x2495 (x701 29289127993025145568725129057828671567744754166070328588094505464281371246592))))
(assert (x71 x2699))
(assert (= (and (not x2236) x2168) x2519))
(assert (x71 x413))
(assert (x71 x43))
(assert (x71 x250))
(assert (x71 x447))
(assert (x71 x1022))
(assert (= (and (not x1199) x2690) x201))
(assert (= x1146 (or x1255 x1677)))
(assert (x71 x2378))
(assert (x71 x699))
(assert (= (and x1046 (not x1274)) x70))
(assert (= x896 (and (not x1112) x1934)))
(assert (x71 x2403))
(assert (= (or x1669 x2258) x2747))
(assert (x71 x181))
(assert (= x2242 (and x982 x1727)))
(assert (x71 x1351))
(assert (x71 x1880))
(assert (= (=> (and (<= 0 x537) (= x1007 (x795 (x599 x1237) x2144 0)) (= (x1262 x1007) x537) (= (x795 (x599 x1482) (x701 17) 0) x2144) (= x1005 128) (= (= x1785 x2200) x2624) (= x2200 (x765 1461501637330902918203684832716283019655932542975 x55)) (= x1482 (x765 1461501637330902918203684832716283019655932542975 x55)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x537)) (and (=> (and (= x2292 (= x2200 x1896)) (not x2624)) (and (=> (and (= x2411 (= x2200 x2067)) (not x2292)) (and (=> (and (and (= 2835717307 x1619) (= 68 x819) (= x2545 x738) (< 0 x2536) (not (= 1889567281 x1619)) (= x537 x2227) (not (= x1619 826074471)) (not (< x1619 826074471)) (not (> 4 x819)) (= (x1350 (- x819 4)) x1492) (not (= 2514000705 x1619)) (= 68 x819) (= x2453 (or (and (< x1492 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1492))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1492))) (= (x2621 (x599 x2067)) x2536) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1335)) x2411) (and (=> (and (= x1112 (= x738 x2545)) (not x2453)) (and (=> (and x1112 (and (= (x795 (x599 x1896) (x701 1) 0) x113) (= x2227 x22) (<= x2586 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2586) (= (x548 x113) x2586) (= x209 (> x537 x2586)))) (and (=> x209 x73) (=> (and (= (< x2586 x2227) x2640) (not x209)) (and (=> x2640 x73) (=> (and (not x2640) (and (>= x1299 0) (= x1883 (x795 (x599 x103) (x701 1) 0)) (= (< x957 x1299) x2460) (= (x795 (x599 x1896) (x701 1) 0) x2288) (= x957 (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2227))) (= x1299 (x1813 x1883)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1299) (= x917 (x1350 (- x2586 x2227))))) (and (=> x2460 x73) (=> (and (and (= x1759 (< x1980 x1299)) (= (x2675 (+ x2227 x1299)) x1980)) (not x2460)) (and (=> x1759 x73) (=> (and (not x1759) (and (= x1473 1) (= 1 x1452) (= x2034 (x795 (x599 x103) (x701 1) 0)) (= x28 32))) x675))))))))) (=> (not x1112) x73))) (=> x2453 x73))) (=> (and (and (and (and (= x2524 68) (= x2575 x537) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1252) (and (= true (<= x1252 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1252 64))) x287) (= (x1350 (- x2524 4)) x1252) (= x2494 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x682 2514000705)) (not (< x682 826074471)) (not (= x682 826074471)) (= x2545 x2230) (= 2835717307 x682) (> x892 0) (not (< x2524 4)) (not (= x682 1889567281)) (= x2524 68) (= x892 (x2621 (x599 x2157)))) x2160) (= (= x2157 x2200) x2160)) (not x2411)) (and (=> (and (= (= x2545 x2230) x744) (not x287)) (and (=> (and x744 (and (= (x2140 x2284) x2685) (= x1849 x2575) (<= x2685 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2284 (x795 (x599 x1896) (x701 1) 0)) (= (> x537 x2685) x1576) (>= x2685 0))) (and (=> x1576 x647) (=> (and (not x1576) (= (> x2575 x2685) x233)) (and (=> (and (not x233) (and (= x666 (x2417 x1068)) (= x1068 (x795 (x599 x103) (x701 1) 0)) (>= x666 0) (= x2553 (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2575))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x666) (= x1435 (> x666 x2553)) (= (x1350 (- x2685 x2575)) x2208) (= x141 (x795 (x599 x1896) (x701 1) 0)))) (and (=> (and (and (= (> x666 x592) x1309) (= (x2675 (+ x666 x2575)) x592)) (not x1435)) (and (=> (and (not x1309) (and (= (x795 (x599 x103) (x701 1) 0) x680) (= x1312 32) (= x1141 1) (= x132 1))) x2567) (=> x1309 x647))) (=> x1435 x647))) (=> x233 x647))))) (=> (not x744) x647))) (=> x287 x647))))) (=> (and x2292 (and (not (= x1180 2678909723)) (= x2438 x537) (= x1577 (x2621 (x599 x1896))) (= x2622 68) (= 2835717307 x1180) (= x1782 (x1350 (- x2622 4))) (= x2622 68) (not (< x2622 4)) (= x1643 x2545) (= (or (and (> 64 x1782) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1782) true)) (> x1782 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1524) (< 0 x1577) (not (< x1180 2646777772)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1424) (not (= x1180 2646777772)) (< x1180 3053082678) (not (> 1889567281 x1180)))) (and (=> (and (not x1524) (= (= x1643 x2545) x245)) (and (=> (not x245) x617) (=> (and x245 (and (= (x1109 x1789) x1981) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1981) (= (x795 (x599 x1896) (x701 2) 0) x1789) (= x1544 (< x1981 x537)) (= x2438 x432) (<= 0 x1981))) (and (=> x1544 x617) (=> (and (not x1544) (= (< x1981 x2438) x152)) (and (=> x152 x617) (=> (and (not x152) (and (>= x419 0) (= x911 (x795 (x599 x103) (x701 2) 0)) (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2438)) x1728) (<= x419 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2741 (< x1728 x419)) (= (x1350 (- x1981 x2438)) x894) (= x419 (x710 x911)) (= x2321 (x795 (x599 x1896) (x701 2) 0)))) (and (=> x2741 x617) (=> (and (not x2741) (and (= (x2675 (+ x419 x2438)) x801) (= x970 (> x419 x801)))) (and (=> (and (and (= x1497 32) (= x2696 1) (= (x795 (x599 x103) (x701 2) 0) x1999)) (not x970)) x2560) (=> x970 x617))))))))))) (=> x1524 x617))))) (=> (and x2624 (and (not (> 1889567281 x2618)) (= 68 x2398) (not (= 2646777772 x2618)) (= x918 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (< x2618 2646777772)) (= x2398 68) (= (x1350 (- x2398 4)) x1191) (= x1502 x2545) (= x537 x2422) (= x1242 (x2621 (x599 x1785))) (not (> 4 x2398)) (> x1242 0) (> 3053082678 x2618) (= x2618 2835717307) (not (= x2618 2678909723)) (= (or (and (> 64 x1191) (= (<= x1191 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1191 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x807))) (and (=> x807 x606) (=> (and (not x807) (= x755 (= x1502 x2545))) (and (=> (not x755) x606) (=> (and x755 (and (= x199 (< x1705 x537)) (= x1705 (x255 x893)) (<= x1705 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x717 x2422) (<= 0 x1705) (= x893 (x795 (x599 x1896) (x701 2) 0)))) (and (=> x199 x606) (=> (and (not x199) (= (< x1705 x2422) x2202)) (and (=> (and (and (= (< x2143 x1747) x172) (= x2655 (x795 (x599 x103) (x701 2) 0)) (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2422)) x2143) (<= 0 x1747) (= x703 (x795 (x599 x1896) (x701 2) 0)) (= x1747 (x853 x2655)) (= x2069 (x1350 (- x1705 x2422))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1747)) (not x2202)) (and (=> x172 x606) (=> (and (and (= x1592 (< x1532 x1747)) (= x1532 (x2675 (+ x2422 x1747)))) (not x172)) (and (=> x1592 x606) (=> (and (and (= x2316 1) (= 32 x808) (= (x795 (x599 x103) (x701 2) 0) x770)) (not x1592)) x1779))))) (=> x2202 x606))))))))))) x1760))
(assert (= x2564 (and x1918 (not x867))))
(assert (= x2745 (and (not x1015) x2631)))
(assert (x71 x1427))
(assert (= (and (not x2563) x560) x978))
(assert (x1107 x759))
(assert (= x1537 (and x1894 x744)))
(assert (= (x599 2835717307) (x701 2835717307)))
(assert (= (and x2615 x175) x1117))
(assert (x71 x1141))
(assert (x71 x806))
(assert (= x137 (or x228 x1459)))
(assert (x71 x528))
(assert (= x2248 (and x2307 x40)))
(assert (= (and x307 x357) x2036))
(assert (x71 x2673))
(assert (= (=> (and (= x2754 0) (= x1842 x2332)) x2740) x769))
(assert (x71 x1863))
(assert (=> (>= 10000 x1785) (= (x599 x1785) (x701 x1785))))
(assert (= (or x1297 x149) x1722))
(assert (= x2602 (and (not x1739) x2320)))
(assert (x1107 x1802))
(assert (= (and (not x2427) x1072) x1613))
(assert (= (or x2431 x1359 x404 x1875 x856 x683) x1644))
(assert (= x1519 (and x688 x1102)))
(assert (x71 x486))
(assert (x71 x1853))
(assert (x71 x126))
(assert (= x737 (and x1037 x1396)))
(assert (= (and x2668 x405) x2723))
(assert (= (=> (and (= x2138 (= x2159 0)) (or (not x2138) x2138)) x1841) x956))
(assert (x71 x2000))
(assert (x71 x1338))
(assert (x71 x2211))
(assert (x71 x2226))
(assert (x71 x2390))
(assert (= (x701 2753274959) (x599 2753274959)))
(assert (= x157 (and (not x2499) x2161)))
(assert (x71 x22))
(assert (= (=> (and (= x725 x759) (= x1451 x652) (= x55 x2268) (= x2628 x1319) (= x1964 x2364) (= 0 x325) (= x1355 x1218)) x185) x1933))
(assert (= x1308 (and x342 x1589)))
(assert (= (and x1615 (not x1869)) x2770))
(assert (= x821 (or x2549 x1978 x942 x394 x797 x1276)))
(assert (x71 x1252))
(assert (= x2538 (and x2503 x1221)))
(assert (= (and x1689 (not x1324)) x2132))
(assert (= x1447 (=> (and (= x2119 x2445) (= x2052 0)) x1604)))
(assert (x71 x2247))
(assert (= (or x2086 x1437) x115))
(assert (x71 x1951))
(assert (x71 x1502))
(assert (= (=> (and (or x1015 (and (and (= x80 (x2487 (* 32 x747))) (= (x2675 (+ x2257 32)) x1173)) (not x1015))) (and (= (x2487 (* x747 32)) x1560) (= (x2675 (+ x1560 32)) x2250) (= (x2675 (+ x2257 x2250)) x1807) (not (= 0 x2437)) (= (x391 128) x747) (= x1015 (= 0 x747)))) x441) x1923))
(assert (= (or x1800 x2745) x1238))
(assert (x71 x2279))
(assert (= (=> (and (= x866 x2332) (= 0 x2389)) x1250) x2595))
(assert (= x2483 (and (not x1037) x1396)))
(assert (= x623 (and (not x77) x411)))
(assert (= (or x1137 x2430) x685))
(assert (= (and x2625 x2068) x539))
(assert (=> (<= x855 10000) (= (x599 x855) (x701 x855))))
(assert (x71 x367))
(assert (x71 x811))
(assert (x71 x2611))
(assert (x71 x195))
(assert (= x1718 (or x2556 x1717 x224)))
(assert (= x131 (or (and x2429 (not x1664)) x903)))
(assert (x1016 1461501637330902918203684832716283019655932542976))
(assert (= x948 (and x790 x1373)))
(assert (x71 x143))
(assert (= (and x704 x1197) x1081))
(assert (x71 x2076))
(assert (x71 x130))
(assert (x71 x2502))
(assert (x71 x1852))
(assert (x71 x1464))
(assert (= (x2495 (x599 x1514)) x1514))
(assert (= x2354 (=> (= x1858 x467) x887)))
(assert (= (and x1323 x378) x37))
(assert (x1016 x55))
(assert (= (and (not x1797) x1636) x2326))
(assert (x71 x2139))
(assert (x71 x1802))
(assert (x71 x2203))
(assert (= x2351 (and x2199 x176)))
(assert (= x972 (and x910 x1905)))
(assert (x1107 x2525))
(assert (= x2547 (=> (= x2616 (= x1384 0)) (and (=> x2616 x756) (=> (and (and (= (= 0 x311) x1290) (<= 0 x311) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)) (not x2616)) (and (=> (and (and (<= 0 x311) (<= x311 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1846 1461501637330902918203684832716283019655932542975) (= 128 x2182) (> 1461501637330902918203684832716283019655932542976 x1846) (= x1892 (= x1785 x1846)) (<= 0 x1846)) (not x1290)) (and (=> (and (and (< x1211 1889567281) (= x1557 68) (not (> 604024478 x1211)) (= 29289127993025145568725129057828671567744754166070328588094505464281371246592 x627) (not (= 856900995 x1211)) (< 0 x1027) (= x147 x311) (= x1827 (or (and (> 64 x1132) (= true (<= x1132 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1132 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x521 x699) (not (= 872247156 x1211)) (= x1132 (x1350 (- x1557 4))) (= x1557 68) (= x1211 1086394137) (not (> 4 x1557)) (not (< x1211 856900995)) (= x1027 (x2621 (x599 x1785)))) x1892) (and (=> x1827 x1438) (=> (and (not x1827) (and (= x2485 (= x521 x699)) (= x521 x931))) (and (=> (not x2485) x1438) (=> (and x2485 (and (= x639 (= x1821 x643)) (<= x1821 1461501637330902918203684832716283019655932542975) (= x338 x147) (>= x1821 0) (< x1821 1461501637330902918203684832716283019655932542976))) (and (=> (not x639) x1438) (=> (and (= x1285 (= 0 x521)) x639) (and (=> (and (= x1882 (= 0 x147)) (not x1285)) (and (=> x1882 x1438) (=> (and (and (>= x625 0) (= x301 (< x663 x625)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625) (= x663 (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x147)))) (not x1882)) (and (=> x301 x1438) (=> (and (not x301) (and (= (x1845 x2256) x2403) (= x1889 (< x663 x2403)) (<= x2403 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2403) (= (x795 (x599 x521) (x701 2) 0) x2256) (= (x2675 (+ x625 x147)) x2019))) (and (=> (and (not x1889) (and (= 1 x2603) (= 1 x1929) (= x1377 (x795 (x599 x521) (x701 2) 0)) (= x1060 32) (= x1862 (x2675 (+ x147 x2403))))) x2734) (=> x1889 x1438))))))) (=> x1285 x1438))))))))) (=> (and (and (and (and (= x1207 (x1350 (- x169 4))) (= x102 1086394137) (not (= 856900995 x102)) (= 68 x169) (not (< x169 4)) (= x2450 x699) (= (x2621 (x599 x1896)) x1453) (not (= 872247156 x102)) (= 68 x169) (not (> 604024478 x102)) (= x2441 x311) (= 29289127993025145568725129057828671567744754166070328588094505464281371246592 x214) (= x1140 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1207) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1207) true) (< x1207 64)))) (> x1453 0) (< x102 1889567281) (not (< x102 856900995))) x1963) (= x1963 (= x1846 x1896))) (not x1892)) (and (=> x1140 x95) (=> (and (not x1140) (and (= x528 x2450) (= x405 (= x699 x2450)))) (and (=> (not x405) x95) (=> (and x405 (and (= x2441 x2348) (= (= x2000 x643) x6) (<= x2000 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x2000) (>= x2000 0))) (and (=> (not x6) x95) (=> (and (= x2657 (= x2450 0)) x6) (and (=> (and (= x1575 (= x2441 0)) (not x2657)) (and (=> (and (not x1575) (and (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2441)) x1446) (= x331 (< x1446 x2195)) (>= x2195 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2195))) (and (=> (and (not x331) (and (= (x2675 (+ x2195 x2441)) x488) (= x1220 (x795 (x599 x2450) (x701 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2318) (= x2318 (x2221 x1220)) (= (< x1446 x2318) x2469) (>= x2318 0))) (and (=> x2469 x95) (=> (and (not x2469) (and (= x1259 (x2675 (+ x2441 x2318))) (= 32 x669) (= x485 (x795 (x599 x2450) (x701 2) 0)) (= x1431 1) (= x820 1))) x614))) (=> x331 x95))) (=> x1575 x95))) (=> x2657 x95))))))))))) (=> x1290 x2174)))))))
(assert (x71 x1345))
(assert (x71 x2022))
(assert (x71 x2024))
(assert (x71 x945))
(assert (x71 x1044))
(assert (x71 x752))
(assert (= x507 (and x2739 (not x1009))))
(assert (= (or x1081 x582 x1098 x1899 x1873 x939) x2757))
(assert (= (and x1592 x2652) x2562))
(assert (x71 x2586))
(assert (x71 x690))
(assert (= (and x1931 x212) x1886))
(assert (x71 x551))
(assert (x71 x2020))
(assert (x71 x484))
(assert (x71 x2013))
(assert (x71 x327))
(assert (= x1263 (=> (and (= x2244 x2546) (= x2396 x1254)) x2569)))
(assert (= (and x1285 x389) x1617))
(assert (= (x2495 (x599 x924)) x924))
(assert (= x1467 (or x513 x1100)))
(assert (= (=> (and (= x1706 x1351) (= x1656 x2012)) x1188) x2028))
(assert (x71 x1765))
(assert (x71 x1382))
(assert (= (and x1589 (not x342)) x2086))
(assert (x71 x316))
(assert (= x643 (x2495 (x599 x643))))
(assert (= (x701 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x599 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x71 x93))
(assert (= 0 (x269 x1495)))
(assert (x71 x2391))
(assert (= x2432 (and (not x2367) x566)))
(assert (x1107 x1580))
(assert (= (and x636 (not x1494)) x1899))
(assert (x71 x452))
(assert (= x442 (and x1704 x591)))
(assert (= x470 (and x2027 x1205)))
(assert (= (x2495 (x1031 x61 1)) (+ (x2495 x61) 1)))
(assert (= (=> (and (= (x2675 (+ 4 x2257)) x2598) (= 2445980732 x1234) (= x2598 x1036) (= x929 65943510083598082279227955258803319933472635617035506777028864765220054106112) (= (x2621 (x599 x699)) x1542) (not (< x1234 1926446194)) (= x690 x1671) (= (x1350 (- x1818 x2257)) x1671) (= x1461 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2661) true) (< x2661 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2661))) (= (x1350 (- x690 4)) x2661) (= (x765 1461501637330902918203684832716283019655932542975 x722) x1261) (< 0 x1542) (= x1371 (x2621 (x599 x699))) (not (< x1234 2445980732)) (= x1073 x1261) (= (x765 1461501637330902918203684832716283019655932542975 x722) x764) (not (= 0 x1371)) (= x764 x1765) (< x1234 2867092931) (not (> 4 x690)) (= (x2675 (+ 32 x2598)) x1818) (= 36 x690)) (and (=> x1461 x1933) (=> (and (not x1461) (and (= x1073 x2136) (= x916 true))) (and (=> (and x916 (and (and x1150 (and (= (x2621 (x599 x643)) x242) (= x1464 36) (= x134 48119142951092613731468242753959111846395615040638799039548226541748339343360) (= 1784838210 x1508) (= 36 x1464) (= x2302 x1802) (not (> 4 x1464)) (= x1002 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x928) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x928)) (> 32 x928)))) (< 0 x242) (= (x1350 (- x1464 4)) x928))) (and (= x253 (x1031 x706 1)) (= (x765 1461501637330902918203684832716283019655932542975 x2378) x359) (= (x795 (x599 x1073) (x701 3) 0) x706) (< x2302 1461501637330902918203684832716283019655932542976) (= (x2229 x253) x2302) (>= 1461501637330902918203684832716283019655932542975 x2302) (= 128 x386) (>= x2302 0) (= (= x359 x643) x1150)))) (and (=> (and (and (= (= x2302 x1802) x1616) (= x983 x1802)) (not x1002)) (and (=> (and (and (= x724 (x2621 (x599 x1802))) (<= x311 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x311) (= (= 0 x724) x2513) (= 128 x862)) x1616) (and (=> x2513 x756) (=> (and (not x2513) (= x231 (= x1802 x1785))) (and (=> (and (not x231) (and (and x67 (and (= 16284467712533504949339770971755156993396464521235680726719773044698144309248 x2150) (< x2606 1889567281) (= x699 x2099) (< x2606 856900995) (= x1668 x311) (not (> 604024478 x2606)) (= (x2621 (x599 x1896)) x1382) (= (or (> x2589 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2589) true) (< x2589 64))) x159) (= x2606 604024478) (= (x1350 (- x2040 4)) x2589) (not (< x2040 4)) (> x1382 0) (= 68 x2040) (= 68 x2040))) (= x67 (= x1896 x1802)))) (and (=> (and (and (= x266 (= x699 x2099)) (= x1120 x2099)) (not x159)) (and (=> (and x266 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x235) (>= x235 0) (= (x795 (x599 x2099) (x701 16) 0) x146) (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)) x1697) (= x235 (x1549 x146)) (= (< x1697 x235) x2457))) (and (=> (and (not x2457) (and (= x248 1) (= (x2675 (+ x1668 x235)) x195))) x1000) (=> x2457 x1106))) (=> (not x266) x1106))) (=> x159 x1106))) (=> (and (and (not (< x2596 4)) (= 16284467712533504949339770971755156993396464521235680726719773044698144309248 x861) (= (x2621 (x599 x1785)) x1646) (> 856900995 x1581) (= x2151 (or (> x326 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x326 64) (= (<= x326 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x1105 x311) (< 0 x1646) (= 68 x2596) (= x2596 68) (= 604024478 x1581) (> 1889567281 x1581) (= x326 (x1350 (- x2596 4))) (not (> 604024478 x1581)) (= x699 x130)) x231) (and (=> x2151 x2058) (=> (and (and (= x561 (= x130 x699)) (= x130 x850)) (not x2151)) (and (=> (not x561) x2058) (=> (and (and (= x87 (x2091 x985)) (>= x87 0) (= (x795 (x599 x130) (x701 16) 0) x985) (<= x87 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2599 (> x87 x1338)) (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)) x1338)) x561) (and (=> (and (not x2599) (and (= x1724 1) (= (x2675 (+ x87 x1105)) x2386))) x51) (=> x2599 x2058))))))))))) (=> (not x1616) x756))) (=> x1002 x756))) (=> (not x916) x1933))))) x1531))
(assert (x71 x412))
(assert (= (and x460 (not x1784)) x1636))
(assert (x71 x165))
(assert (x71 x983))
(assert (x71 x1535))
(assert (= x2722 (and x1463 x992)))
(assert (and (x628 x422 1461501637330902918203684832716283019655932542976) (x1401 x422 1461501637330902918203684832716283019655932542976) (x1812 x422 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* 1461501637330902918203684832716283019655932542976 (x2192 x422 1461501637330902918203684832716283019655932542976)) (x2492 x422 1461501637330902918203684832716283019655932542976)) x422))))
(assert (x71 x1943))
(assert (x2108 x2554))
(assert (= (and x168 (not x1621)) x1303))
(assert (x71 x106))
(assert (= x1802 (x2495 (x599 x1802))))
(assert (x71 x263))
(assert (x71 x2272))
(assert (x71 x1402))
(assert (= x1723 (x2495 (x599 x1723))))
(assert (x71 x763))
(assert (= (=> (and (= 0 x132) (= x1312 x525)) x2567) x647))
(assert (x71 x138))
(assert (x71 x2145))
(assert (= x2021 (or x296 x2678)))
(assert (x71 x76))
(assert (x71 x855))
(assert (x71 x653))
(assert (x71 x2125))
(assert (x71 x222))
(assert (x1016 x422))
(assert (x71 x779))
(assert (= x1593 (or x821 x204)))
(assert (x71 x419))
(assert (= (and x1523 x14) x109))
(assert (x71 x1596))
(assert (= 565014339 (x2495 (x701 565014339))))
(assert (x71 x169))
(assert (x71 x2704))
(assert (= x2023 (and (not x2287) x2126)))
(assert (= (and (not x1814) x2061) x657))
(assert (x71 x1203))
(assert (= x1501 (and (not x1061) x863)))
(assert (= (and x1701 x155) x2463))
(assert (= (x269 x1341) 0))
(assert (= x699 (x2495 (x599 x699))))
(assert (x71 x1953))
(assert (= x939 (and x2369 x750)))
(assert (= x1271 (and x1620 (not x2269))))
(assert (x71 x205))
(assert (x71 x2630))
(assert (= x1834 (x2495 (x599 x1834))))
(assert (x71 x589))
(assert (x71 x962))
(assert (= x128 (and x1152 x1111)))
(assert (= x949 (=> (and (= x479 x719) (= x1855 0)) x454)))
(assert (= x1793 (and x2138 x1910)))
(assert (x71 x111))
(assert (= x874 (and x2702 (not x2583))))
(assert (= (and x167 x514) x240))
(assert (= x274 (=> (and (= x489 x299) (= x2056 x48)) x2286)))
(assert (= x1188 (=> (and (= (x2675 (+ x1807 x1386)) x2107) (not (= x1656 0)) (= (x438 x1495) x2368) (= x1807 x1495) (= (< 0 x2368) x46) (= (x765 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2371) x1386) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1706) (and (> 32 x1706) (= true (<= x1706 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x2675 (+ x1706 31)) x2371)) (and (=> (not x46) x2249) (=> (and (and (= x924 (x765 1461501637330902918203684832716283019655932542975 x422)) (= (x2675 (+ 4 x2107)) x2509) (= x568 (x2675 (+ 32 x2257))) (= (x765 1461501637330902918203684832716283019655932542975 x722) x1928) (= x349 (x438 x2257)) (< 0 x349) (= (x2675 (+ x2509 32)) x760) (= x828 (= x1785 x924))) x46) (and (=> (and x828 (and (not (= 2646777772 x659)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2097) (not (> 1889567281 x659)) (< x659 3053082678) (not (< x545 4)) (= x1928 x2525) (= 2835717307 x659) (= x2750 (x1350 (- x545 4))) (= x2582 (or (> x2750 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x2750) (= true (<= x2750 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (= 2678909723 x659)) (< 0 x1094) (= (x2621 (x599 x1785)) x1094) (= x545 68) (= x2753 x2368) (not (> 2646777772 x659)))) (and (=> x2582 x2344) (=> (and (and (= x2525 x247) (= x1079 (= x1928 x2525))) (not x2582)) (and (=> (and x1079 (and (= (> x2368 x65) x1556) (= x2753 x2206) (= x1023 (x795 (x599 x804) (x701 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x65) (<= 0 x65) (= (x2243 x1023) x65))) (and (=> (and (not x1556) (= x1457 (> x2753 x65))) (and (=> (and (not x1457) (and (= x2576 (x1350 (- x65 x2753))) (<= x556 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2002 (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2753))) (= x556 (x2146 x944)) (= x944 (x795 (x599 x2525) (x701 2) 0)) (<= 0 x556) (= (x795 (x599 x804) (x701 2) 0) x1611) (= (> x556 x2002) x260))) (and (=> (and (not x260) (and (= (< x263 x556) x2048) (= x263 (x2675 (+ x2753 x556))))) (and (=> (and (not x2048) (and (= 1 x1635) (= x129 x2327) (= 32 x768))) x1790) (=> x2048 x2344))) (=> x260 x2344))) (=> x1457 x2344))) (=> x1556 x2344))) (=> (not x1079) x2344))))) (=> (and (= (= x924 x1896) x370) (not x828)) (and (=> (and x370 (and (not (> 4 x1856)) (= x751 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x714 x2368) (= x960 (x1350 (- x1856 4))) (< x1648 3053082678) (= x1648 2835717307) (= x1928 x1331) (= x1856 68) (not (= x1648 2646777772)) (not (= x1648 2678909723)) (not (> 1889567281 x1648)) (= x2406 (x2621 (x599 x1896))) (not (< x1648 2646777772)) (= (or (and (= true (<= x960 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x960)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x960)) x1412) (< 0 x2406))) (and (=> (and (and (= x202 (= x1928 x1331)) (= x1331 x2601)) (not x1412)) (and (=> (not x202) x2451) (=> (and x202 (and (= x2426 (x2423 x834)) (<= 0 x2426) (= (x795 (x599 x804) (x701 2) 0) x834) (= (> x2368 x2426) x1450) (<= x2426 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x714 x740))) (and (=> (and (not x1450) (= x1784 (> x714 x2426))) (and (=> (and (not x1784) (and (= (x795 (x599 x1331) (x701 2) 0) x672) (= x600 (x1350 (- x2426 x714))) (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x714)) x596) (<= x776 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x776 0) (= (< x596 x776) x1797) (= (x1861 x672) x776) (= (x795 (x599 x804) (x701 2) 0) x398))) (and (=> x1797 x2451) (=> (and (and (= x2137 (x2675 (+ x776 x714))) (= (> x776 x2137) x1296)) (not x1797)) (and (=> x1296 x2451) (=> (and (not x1296) (and (= x502 x1156) (= x464 32) (= 1 x66))) x1686))))) (=> x1784 x2451))) (=> x1450 x2451))))) (=> x1412 x2451))) (=> (and (not x370) (= (= x2067 x924) x2167)) (and (=> (and (not x2167) (and (= x1572 (= x2157 x924)) (and (and (< 0 x2436) (= x2368 x2703) (not (= 1889567281 x246)) (= (or (and (= true (<= x733 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x733 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x733)) x1509) (= x2550 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x246 826074471)) (= 68 x2613) (not (> 826074471 x246)) (= x246 2835717307) (not (= 2514000705 x246)) (= x1514 x1928) (not (< x2613 4)) (= (x1350 (- x2613 4)) x733) (= (x2621 (x599 x2157)) x2436)) x1572))) (and (=> (and (and (= x1479 x1514) (= (= x1514 x1928) x1566)) (not x1509)) (and (=> (not x1566) x1035) (=> (and x1566 (and (>= x144 0) (= x2262 x2703) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x144) (= (> x2368 x144) x1859) (= (x795 (x599 x804) (x701 1) 0) x953) (= (x598 x953) x144))) (and (=> (and (= x40 (> x2703 x144)) (not x1859)) (and (=> (and (not x40) (and (= (x1080 x2544) x1702) (= x2544 (x795 (x599 x1514) (x701 1) 0)) (= (x795 (x599 x804) (x701 1) 0) x78) (= (x1350 (- x144 x2703)) x372) (<= 0 x1702) (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2703)) x1901) (= (> x1702 x1901) x1152) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1702))) (and (=> (and (not x1152) (and (= x2517 (> x1702 x2084)) (= (x2675 (+ x2703 x1702)) x2084))) (and (=> (and (not x2517) (and (= x2448 32) (= x498 x1954) (= 1 x1989) (= (x795 (x599 x1514) (x701 1) 0) x2501) (= x879 1))) x753) (=> x2517 x1035))) (=> x1152 x1035))) (=> x40 x1035))) (=> x1859 x1035))))) (=> x1509 x1035))) (=> (and (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x86) (not (= x35 1889567281)) (= x415 x1928) (= x1563 (or (> x1128 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1128 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x1128)))) (not (= x35 2514000705)) (= x2368 x2533) (= x1755 68) (= 2835717307 x35) (= x1128 (x1350 (- x1755 4))) (not (< x35 826074471)) (= (x2621 (x599 x2067)) x1900) (not (> 4 x1755)) (not (= 826074471 x35)) (< 0 x1900)) x2167) (and (=> (and (and (= x415 x108) (= x1507 (= x1928 x415))) (not x1563)) (and (=> (not x1507) x949) (=> (and x1507 (and (= x2533 x1979) (= (< x1251 x2368) x1011) (<= 0 x1251) (= x1069 (x795 (x599 x804) (x701 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1251) (= x1251 (x2142 x1069)))) (and (=> (and (not x1011) (= (< x1251 x2533) x307)) (and (=> (and (not x307) (and (= (x795 (x599 x415) (x701 1) 0) x283) (>= x941 0) (= x1040 (x1350 (- x1251 x2533))) (= x150 (< x2370 x941)) (<= x941 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x941 (x1434 x283)) (= x2038 (x795 (x599 x804) (x701 1) 0)) (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2533)) x2370))) (and (=> x150 x949) (=> (and (not x150) (and (= (< x1734 x941) x2324) (= x1734 (x2675 (+ x2533 x941))))) (and (=> x2324 x949) (=> (and (and (= x2700 x371) (= 1 x1855) (= x1124 1) (= 32 x719)) (not x2324)) x454))))) (=> x307 x949))) (=> x1011 x949))))) (=> x1563 x949)))))))))))))
(assert (and (x628 x677 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1401 x677 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1812 x677 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2192 x677 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2492 x677 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x677))))
(assert (x71 x1422))
(assert (= (=> (= x2075 (= 0 x1186)) (and (=> (and (not x2075) (and (= (x2675 (+ 31 x43)) x2554) (= x2169 (x765 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2554)) (= x111 (x2675 (+ x2169 128))) (= (or (> x43 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x43 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x43)))) x1696))) (and (=> (and (not x1696) (and (= x1938 (x2675 (+ 32 x308))) (<= x56 1461501637330902918203684832716283019655932542975) (= x308 (x2675 (+ x111 4))) (= (x1031 x253 1) x368) (= (x574 x368) x56) (< x56 1461501637330902918203684832716283019655932542976) (<= 0 x56) (= (= x1580 x1785) x2051) (= x450 (x1369 128)) (= x1580 (x765 1461501637330902918203684832716283019655932542975 x771)))) (and (=> (and x2051 (and (> 3053082678 x60) (= x60 2835717307) (= x653 68) (= x1456 (x1350 (- x653 4))) (not (< x653 4)) (> x484 0) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1605) (= x484 (x2621 (x599 x1785))) (= x2312 x56) (= x361 (or (and (< x1456 64) (= (<= x1456 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1456 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x715 x450) (not (< x60 2646777772)) (not (< x60 1889567281)) (not (= x60 2646777772)) (not (= x60 2678909723)))) (and (=> x361 x769) (=> (and (and (= (= x2312 x56) x889) (= x2312 x1392)) (not x361)) (and (=> (not x889) x769) (=> (and (and (= x2444 (x795 (x599 x699) (x701 2) 0)) (= x1931 (< x1187 x450)) (<= x1187 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x220 x2444) x1187) (>= x1187 0) (= x1700 x715)) x889) (and (=> (and (= x158 (> x715 x1187)) (not x1931)) (and (=> (and (and (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x715)) x1536) (= (< x1536 x2129) x1708) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2129) (= (x795 (x599 x699) (x701 2) 0) x1985) (<= 0 x2129) (= (x1330 x1874) x2129) (= x1208 (x1350 (- x1187 x715))) (= x1874 (x795 (x599 x2312) (x701 2) 0))) (not x158)) (and (=> x1708 x769) (=> (and (and (= x403 (x2675 (+ x715 x2129))) (= (> x2129 x403) x867)) (not x1708)) (and (=> (and (not x867) (and (= 1 x2754) (= x1842 32) (= x998 (x795 (x599 x2312) (x701 2) 0)))) x2740) (=> x867 x769))))) (=> x158 x769))) (=> x1931 x769))))))) (=> (and (= (= x1580 x1896) x333) (not x2051)) (and (=> (and x333 (and (not (> 4 x2508)) (= 68 x2508) (= x2520 (x1350 (- x2508 4))) (= x585 x56) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1749) (not (= 2678909723 x2759)) (> 3053082678 x2759) (= 2835717307 x2759) (not (= 2646777772 x2759)) (= (x2621 (x599 x1896)) x94) (< 0 x94) (not (> 1889567281 x2759)) (= x2148 x450) (= x609 (or (and (= true (<= x2520 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x2520)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2520))) (not (> 2646777772 x2759)))) (and (=> x609 x2595) (=> (and (not x609) (and (= x585 x2735) (= x572 (= x585 x56)))) (and (=> (not x572) x2595) (=> (and x572 (and (<= x2673 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2148 x193) (= x1287 (x795 (x599 x699) (x701 2) 0)) (= (< x2673 x450) x2588) (>= x2673 0) (= x2673 (x1104 x1287)))) (and (=> (and (= (> x2148 x2673) x2721) (not x2588)) (and (=> x2721 x2595) (=> (and (not x2721) (and (= x2466 (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2148))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1427) (= x2611 (x1350 (- x2673 x2148))) (= (x795 (x599 x585) (x701 2) 0) x162) (= x2587 (x795 (x599 x699) (x701 2) 0)) (= (> x1427 x2466) x1597) (>= x1427 0) (= x1427 (x1568 x162)))) (and (=> x1597 x2595) (=> (and (and (= x1409 (x2675 (+ x1427 x2148))) (= (< x1409 x1427) x790)) (not x1597)) (and (=> x790 x2595) (=> (and (and (= x866 32) (= (x795 (x599 x585) (x701 2) 0) x2179) (= 1 x2389)) (not x790)) x1250))))))) (=> x2588 x2595))))))) (=> (and (= x2175 (= x1580 x2067)) (not x333)) (and (=> (and (and (= (x1350 (- x2112 4)) x2280) (not (= 2514000705 x871)) (not (= 826074471 x871)) (= x2112 68) (> x1986 0) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2454) (= x1197 (or (and (< x2280 64) (= true (<= x2280 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x2280 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x2621 (x599 x2067)) x1986) (not (= 1889567281 x871)) (not (< x2112 4)) (= 2835717307 x871) (= x56 x2343) (= x450 x2102) (not (< x871 826074471))) x2175) (and (=> x1197 x1770) (=> (and (not x1197) (and (= x2343 x2124) (= (= x56 x2343) x1494))) (and (=> (and x1494 (and (= x716 x2102) (>= x1680 0) (= x1315 (< x1680 x450)) (<= x1680 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x593 x1200) x1680) (= x1200 (x795 (x599 x699) (x701 1) 0)))) (and (=> x1315 x1770) (=> (and (not x1315) (= x2369 (< x1680 x2102))) (and (=> x2369 x1770) (=> (and (not x2369) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2486) (= (x795 (x599 x699) (x701 1) 0) x154) (= x2486 (x2760 x540)) (= (< x2080 x2486) x1621) (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2102)) x2080) (>= x2486 0) (= x540 (x795 (x599 x2343) (x701 1) 0)) (= x2477 (x1350 (- x1680 x2102))))) (and (=> (and (and (= x577 (x2675 (+ x2102 x2486))) (= (> x2486 x577) x1428)) (not x1621)) (and (=> x1428 x1770) (=> (and (not x1428) (and (= (x795 (x599 x2343) (x701 1) 0) x778) (= x133 32) (= x2729 1) (= 1 x396))) x119))) (=> x1621 x1770))))))) (=> (not x1494) x1770))))) (=> (and (not x2175) (and (and (and (= x471 (x1350 (- x472 4))) (< 0 x836) (= x56 x1130) (= 2835717307 x1926) (not (> 826074471 x1926)) (not (= x1926 1889567281)) (= x836 (x2621 (x599 x2157))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2358) (not (= x1926 2514000705)) (= x743 (or (> x471 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x471 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x471))))) (not (= 826074471 x1926)) (= x450 x1485) (= 68 x472) (not (< x472 4))) x1110) (= x1110 (= x1580 x2157)))) (and (=> (and (not x743) (and (= x2590 x1130) (= (= x56 x1130) x2337))) (and (=> (and x2337 (and (= x1822 (x329 x695)) (= (< x1822 x450) x1716) (= (x795 (x599 x699) (x701 1) 0) x695) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1822) (<= 0 x1822) (= x1485 x2679))) (and (=> (and (not x1716) (= x1323 (> x1485 x1822))) (and (=> (and (not x1323) (and (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1485)) x1496) (= x194 (x795 (x599 x699) (x701 1) 0)) (= (> x456 x1496) x1123) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x456) (= (x1350 (- x1822 x1485)) x1322) (= (x795 (x599 x1130) (x701 1) 0) x2557) (= x456 (x2656 x2557)) (<= 0 x456))) (and (=> x1123 x2218) (=> (and (not x1123) (and (= (> x456 x1629) x1545) (= x1629 (x2675 (+ x456 x1485))))) (and (=> x1545 x2218) (=> (and (not x1545) (and (= 32 x1628) (= x880 (x795 (x599 x1130) (x701 1) 0)) (= x2361 1) (= x1693 1))) x120))))) (=> x1323 x2218))) (=> x1716 x2218))) (=> (not x2337) x2218))) (=> x743 x2218))))))))) (=> x1696 x1933))) (=> x2075 x1933))) x1448))
(assert (x1016 x327))
(assert (x71 x1513))
(assert (= (=> (and (= x337 x1567) (= x905 (x1249 x2257)) (= (x2675 (+ x1852 32)) x145) (= (x2675 (+ x2257 32)) x181) (= (> x905 0) x151) (= x1852 (x2675 (+ 32 x337))) (= 32 x1942)) (and (=> (and (and (= (< 1 x905) x2219) (= (x2675 (+ x181 32)) x127) (= (x2698 x181) x1707) (= (x2675 (+ 32 x145)) x1972)) x151) (and (=> (and (and (= x27 1) (= x2715 x127) (= x1972 x860)) (not x2219)) x1339) (=> (and (and (= (x2675 (+ x1972 32)) x793) (= (< 2 x905) x2011) (= (x1410 x127) x845) (= x1341 (x2675 (+ 32 x127)))) x2219) (and (=> (and (not x2011) (and (= x2715 x1341) (= 2 x27) (= x793 x860))) x1339) (=> (and (and (= (> x905 3) x77) (= x1741 (x2675 (+ x1341 32))) (= x232 (x375 x1341)) (= x1912 (x2675 (+ x793 32)))) x2011) (and (=> x77 x2762) (=> (and (and (= x860 x1912) (= 3 x27) (= x1741 x2715)) (not x77)) x1339))))))) (=> (and (not x151) (and (= 0 x27) (= x181 x2715) (= x145 x860))) x1339))) x1352))
(assert (= (and x174 x2167) x429))
(assert (x71 x735))
(assert (x71 x768))
(assert (x71 x718))
(assert (= x943 (and x2507 x1195)))
(assert (= x328 (and x2031 x2131)))
(assert (x71 x634))
(assert (= (and x658 x1716) x2271))
(assert (x71 x820))
(assert (= x1088 (or x2290 x1962 x493 x2412 x2671 x312)))
(assert (= (and x2329 x620) x2511))
(assert (x71 x2309))
(assert (= (and (not x1860) x526) x872))
(assert (x71 x583))
(assert (= (and x2749 x2607) x766))
(assert (= (and x1708 x813) x1241))
(assert (x71 x977))
(assert (= x990 (and x331 x1349)))
(assert (x71 x281))
(assert (= (=> (= x1603 x467) x887) x258))
(assert (x71 x2182))
(assert (x71 x2537))
(assert (x71 x1094))
(assert (= x1595 (=> (and (= x2309 x299) (= x2056 x1466)) x2286)))
(assert (x71 x27))
(assert (x71 x1643))
(assert (= x1281 (and x1528 (not x2694))))
(assert (= x2357 (or x1003 x1623)))
(assert (x71 x2014))
(assert (= x363 (and x1324 x1689)))
(assert (x71 x121))
(assert (x71 x1693))
(assert (= (and x151 x1909) x519))
(assert (x839 x771))
(assert (x71 x2162))
(assert (x71 x1207))
(assert (= x1493 (x2495 (x599 x1493))))
(assert (x71 x2044))
(assert (x2461 x722))
(assert (x71 x81))
(assert (x71 x1795))
(assert (= x1375 (and (not x1694) x2105)))
(assert (= (x599 826074471) (x701 826074471)))
(assert (= x378 (and (not x1716) x658)))
(assert (x71 x2159))
(assert (x71 x648))
(assert (= x560 (and (not x420) x550)))
(assert (= (and x1067 (not x105)) x1010))
(assert (= (and x1063 (not x1921)) x2568))
(assert (x71 x2147))
(assert (= (and x2165 (not x2447)) x2168))
(assert (= (and x1127 x99) x1359))
(assert (x71 x714))
(assert (x71 x85))
(assert (x71 x248))
(assert (= (or x2298 x2260 x689 x607 x1758 x721) x654))
(assert (= (and x67 x15) x177))
(assert (= x399 (and (not x1572) x2350)))
(assert (= 0 (x269 160)))
(assert (x71 x479))
(assert (= (and x2231 (not x2651)) x1313))
(assert (= x1280 (and x1092 x2741)))
(assert (x71 x1700))
(assert (x71 x1211))
(assert (x71 x1266))
(assert (x839 x2378))
(assert (= x197 (and x1935 x172)))
(assert (x71 x1679))
(assert (x71 x1986))
(assert (= x2009 (and x1202 x1075)))
(assert (= (and x1217 x118) x645))
(assert (x71 x537))
(assert (= x107 (or x272 x446)))
(assert (= x318 (and x2468 x32)))
(assert (= 604024478 (x2495 (x701 604024478))))
(assert (x71 x2113))
(assert (= (or x2356 x1363) x1998))
(assert (x71 x179))
(assert (= (and x557 (not x487)) x2425))
(assert (x71 x2259))
(assert (= (and x1442 (not x1544)) x1559))
(assert (= x2067 (x2495 (x599 x2067))))
(assert (x71 x2121))
(assert (x71 x1456))
(assert (= (and (not x755) x112) x673))
(assert (= x694 (=> (and (= x2234 x299) (= x2056 x1487)) x2286)))
(assert (x71 x967))
(assert (x71 x2200))
(assert (= x217 (and x2456 x1154)))
(assert (= x2025 (=> (and (= x367 x489) (= x48 0)) x274)))
(assert (= x923 (or x1548 x660 x2294 x1927 x2003 x896)))
(assert (= (and x2573 x1052) x1895))
(assert (= x1978 (and x1791 x1020)))
(assert (= x51 (=> (= x1384 x1724) x2402)))
(assert (x71 x1057))
(assert (= (and x243 x1827) x2355))
(assert (x1107 x1514))
(assert (x71 x1915))
(assert (and (x628 x771 1461501637330902918203684832716283019655932542976) (x1401 x771 1461501637330902918203684832716283019655932542976) (x1812 x771 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* 1461501637330902918203684832716283019655932542976 (x2192 x771 1461501637330902918203684832716283019655932542976)) (x2492 x771 1461501637330902918203684832716283019655932542976)) x771))))
(assert (= (and (not x430) x749) x123))
(assert (x71 x767))
(assert (x1107 x1607))
(assert (x71 x928))
(assert (= (=> (and (= x2445 x227) (= 0 x250)) x584) x2566))
(assert (x71 x1164))
(assert (x71 x52))
(assert (= (or x1235 x2474) x1788))
(assert (= (or x1372 x1709) x1992))
(assert (x2461 x327))
(assert (x71 x2606))
(assert (x71 x372))
(assert (x71 x1474))
(assert (x2461 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x71 x2042))
(assert (= x2525 (x2495 (x599 x2525))))
(assert (= x1816 (or x501 x852)))
(assert (= 0 (x269 x127)))
(assert (= x2176 (and x1631 x1698)))
(assert (= x506 (and (not x2467) x2023)))
(assert (x71 x129))
(assert (= x1368 (and x1544 x1442)))
(assert (x71 x720))
(assert (x71 x2137))
(assert (= x2126 (and (not x523) x838)))
(assert (x71 x631))
(assert (= (x2495 (x701 74228146054641364427485594382366355075153451190847473373747070783662162182144)) 74228146054641364427485594382366355075153451190847473373747070783662162182144))
(assert (x71 x846))
(assert (= (and x609 x1654) x989))
(assert (= x1982 (and x1637 x2593)))
(assert (x71 x1187))
(assert (= x394 (and x825 x2677)))
(assert (x71 x2735))
(assert (x71 x1723))
(assert (x71 x2594))
(assert (= 826074471 (x2495 (x701 826074471))))
(assert (x71 x1656))
(assert (= (and x1545 x670) x1381))
(assert (x71 x1514))
(assert (= (and (not x1315) x360) x750))
(assert (x2461 x2371))
(assert (x71 x1212))
(assert (= x1505 (and (not x743) x435)))
(assert (x71 x369))
(assert (= (and x626 x1936) x224))
(assert (=> (<= x1743 10000) (= (x701 x1743) (x599 x1743))))
(assert (x71 x386))
(assert (= x2131 (and x1774 (not x1836))))
(assert (and (x628 x1218 1461501637330902918203684832716283019655932542976) (x1401 x1218 1461501637330902918203684832716283019655932542976) (x1812 x1218 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* 1461501637330902918203684832716283019655932542976 (x2192 x1218 1461501637330902918203684832716283019655932542976)) (x2492 x1218 1461501637330902918203684832716283019655932542976)) x1218))))
(assert (= x2228 (or (and x566 x2367) (and (not x1406) x2432))))
(assert (x71 x1928))
(assert (x71 x808))
(assert (x71 x2765))
(assert (x71 x2450))
(assert (= 16284467712533504949339770971755156993396464521235680726719773044698144309248 (x2495 (x701 16284467712533504949339770971755156993396464521235680726719773044698144309248))))
(assert (= (and x1966 (not x2616)) x2670))
(assert (x71 x2701))
(assert (x71 x715))
(assert (x71 x652))
(assert (= x1273 (=> (and (= x2279 0) (= x1476 x1555)) x1239)))
(assert (= (and (not x370) x2) x174))
(assert (x71 x1064))
(assert (= x341 (and x511 (not x2011))))
(assert (= (and x2098 (not x649)) x2739))
(assert (x71 x2157))
(assert (= (and x2077 x2188) x1091))
(assert (x71 x57))
(assert (x71 x325))
(assert (= 856900995 (x2495 (x701 856900995))))
(assert (x2108 x439))
(assert (= x979 (=> (and (= x779 0) (= x2282 x82)) x1413)))
(assert (= x1000 (=> (= x1384 x248) x2402)))
(assert (= (x2495 (x599 x1580)) x1580))
(assert (= x987 (or x1825 (and x1122 (not x1630)))))
(assert (= x2527 (and (not x1457) x1547)))
(assert (x71 x1333))
(assert (= x2744 (or x1847 x1486 x914 x711 x1468 x1185)))
(assert (x71 x596))
(assert (x71 x2612))
(assert (= x823 (=> (and (= x2334 x2125) (= x1196 x2688)) x2484)))
(assert (= (and (not x2506) x366) x705))
(assert (x71 x443))
(assert (= (and x140 x1470) x1042))
(assert (x1107 x1331))
(assert (x71 x592))
(assert (x71 x2688))
(assert (x71 x1580))
(assert (= x940 (and x2767 x2539)))
(assert (x71 x792))
(assert (x71 x764))
(assert (= x1343 (and x2458 x2118)))
(assert (x71 x678))
(assert (x71 x97))
(assert (x71 x1658))
(assert (and (x628 x135 32) (x1401 x135 32) (x1812 x135 32) (=> (> 32 0) (= (+ (* 32 (x2192 x135 32)) (x2492 x135 32)) x135))))
(assert (= x754 (and x1524 x1399)))
(assert (x71 x1947))
(assert (= x2681 (and x1685 (not x1550))))
(assert (x71 x800))
(assert (x71 x356))
(assert (x71 x677))
(assert (= x863 (and x959 x1444)))
(assert (x71 x380))
(assert (= x2465 (and (not x1663) x2132)))
(assert (x71 x1901))
(assert (= x1975 (and (not x1461) x1998)))
(assert (= 0 (x269 x1741)))
(assert (x71 x323))
(assert (= (or x230 x330) x1672))
(assert (= (=> (= (= 0 x2159) x2749) (and (=> (and (and (= x1943 (x765 115792089237316195423570985008687907853269984665640564039457584007913129639904 x327)) (= (x2675 (+ x1943 x52)) x2261) (= x327 (x2675 (+ x762 31))) (= (or (> x762 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x762) (= (<= x762 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1463)) (not x2749)) (and (=> (and (and (>= x2014 0) (= x1086 (x2675 (+ 4 x2261))) (> 1461501637330902918203684832716283019655932542976 x1319) (= x1737 (x795 (x599 x1319) (x701 17) 0)) (= (x1350 (- x1469 x2261)) x758) (<= x2014 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x707 (= x1785 x1319)) (= (x2675 (+ 64 x1086)) x1469) (= x2014 (x1262 x1380)) (= (x795 (x599 x1237) x1737 0) x1380) (> 1461501637330902918203684832716283019655932542976 x1319) (= (x2675 (+ x1086 32)) x1535)) (not x1463)) (and (=> (and (= x1983 (= x1319 x1896)) (not x707)) (and (=> (and (= (= x1319 x2067) x430) (not x1983)) (and (=> (and (not x430) (and (= x2413 (= x2157 x1319)) (and x2413 (and (= (x2621 (x599 x2157)) x447) (= x758 x1318) (> x447 0) (= x2214 x2545) (= x1810 (x1350 (- x1318 4))) (= x2196 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 2835717307 x2455) (not (= 2514000705 x2455)) (not (> 826074471 x2455)) (= 68 x1318) (not (> 4 x1318)) (= x633 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1810) (and (> 64 x1810) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1810) true)))) (not (= x2455 826074471)) (= x171 x2014) (not (= x2455 1889567281)))))) (and (=> (and (= x239 (= x2545 x2214)) (not x633)) (and (=> (not x239) x621) (=> (and x239 (and (= (x795 (x599 x1896) (x701 1) 0) x1598) (= x1056 x171) (<= x2765 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x2765 x2014) x1102) (= x2765 (x1993 x1598)) (<= 0 x2765))) (and (=> (and (not x1102) (= (< x2765 x171) x1738)) (and (=> (and (and (= (x2008 x1811) x1853) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1853) (= (< x2055 x1853) x167) (= (x1350 (- x2765 x171)) x2050) (= x2055 (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x171))) (= x1811 (x795 (x599 x103) (x701 1) 0)) (>= x1853 0) (= x418 (x795 (x599 x1896) (x701 1) 0))) (not x1738)) (and (=> (and (not x167) (and (= (> x1853 x383) x2116) (= (x2675 (+ x1853 x171)) x383))) (and (=> x2116 x621) (=> (and (and (= (x795 (x599 x103) (x701 1) 0) x2693) (= 32 x2636) (= x191 1) (= x2170 1)) (not x2116)) x400))) (=> x167 x621))) (=> x1738 x621))) (=> x1102 x621))))) (=> x633 x621))) (=> (and x430 (and (= (or (and (= (<= x504 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x504)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x504)) x1814) (= x2545 x334) (not (> 826074471 x74)) (not (= 826074471 x74)) (not (= x74 1889567281)) (= 2835717307 x74) (> x424 0) (= (x1350 (- x1880 4)) x504) (= (x2621 (x599 x2067)) x424) (= x1725 x2014) (= 68 x1880) (not (= x74 2514000705)) (= x758 x1880) (not (< x1880 4)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x997))) (and (=> (and (= (= x2545 x334) x1713) (not x1814)) (and (=> (and (and (= (x1260 x320) x1720) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1720) (= x1306 x1725) (>= x1720 0) (= x1324 (> x2014 x1720)) (= x320 (x795 (x599 x1896) (x701 1) 0))) x1713) (and (=> x1324 x1054) (=> (and (not x1324) (= x1663 (> x1725 x1720))) (and (=> x1663 x1054) (=> (and (not x1663) (and (<= x842 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1725)) x1266) (= (x1350 (- x1720 x1725)) x2701) (= (> x842 x1266) x1750) (= (x1968 x1194) x842) (= (x795 (x599 x103) (x701 1) 0) x1194) (= (x795 (x599 x1896) (x701 1) 0) x692) (>= x842 0))) (and (=> x1750 x1054) (=> (and (and (= x524 (> x842 x2090)) (= (x2675 (+ x842 x1725)) x2090)) (not x1750)) (and (=> (and (not x524) (and (= 32 x1984) (= x2666 1) (= x188 1) (= (x795 (x599 x103) (x701 1) 0) x96))) x1804) (=> x524 x1054))))))))) (=> (not x1713) x1054))) (=> x1814 x1054))))) (=> (and (and (= x2545 x1517) (not (> 4 x800)) (= x800 68) (= x2014 x2104) (not (< x656 1889567281)) (= 2835717307 x656) (= x1019 (or (and (= (<= x2120 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2120 64)) (> x2120 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x656 2646777772)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x767) (= x800 x758) (not (= x656 2678909723)) (= (x1350 (- x800 4)) x2120) (= (x2621 (x599 x1896)) x1071) (> x1071 0) (> 3053082678 x656) (not (> 2646777772 x656))) x1983) (and (=> x1019 x427) (=> (and (= x270 (= x1517 x2545)) (not x1019)) (and (=> (and (and (= x523 (< x1658 x2014)) (= x2104 x954) (= (x795 (x599 x1896) (x701 2) 0) x1832) (<= 0 x1658) (= x1658 (x2604 x1832)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1658)) x270) (and (=> x523 x427) (=> (and (not x523) (= (< x1658 x2104) x2287)) (and (=> (and (and (= x1114 (x1350 (- x1658 x2104))) (= (> x57 x286) x2467) (= x286 (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2104))) (= (x795 (x599 x1896) (x701 2) 0) x208) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x57) (= (x795 (x599 x103) (x701 2) 0) x2081) (<= 0 x57) (= x57 (x2530 x2081))) (not x2287)) (and (=> (and (and (= (x2675 (+ x2104 x57)) x2363) (= (> x57 x2363) x837)) (not x2467)) (and (=> (and (not x837) (and (= x2531 1) (= (x795 (x599 x103) (x701 2) 0) x912) (= x1870 32))) x2736) (=> x837 x427))) (=> x2467 x427))) (=> x2287 x427))))) (=> (not x270) x427))))))) (=> (and x707 (and (= x2014 x2470) (= x2704 2835717307) (= (or (> x1744 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1744 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1744)))) x1860) (= x1397 (x2621 (x599 x1785))) (= x276 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 2678909723 x2704)) (= x2285 x2545) (< 0 x1397) (= (x1350 (- x1001 4)) x1744) (not (= x2704 2646777772)) (not (> 4 x1001)) (= x758 x1001) (= 68 x1001) (< x2704 3053082678) (not (< x2704 1889567281)) (not (> 2646777772 x2704)))) (and (=> (and (= (= x2545 x2285) x53) (not x1860)) (and (=> (not x53) x611) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1640) (= x2470 x81) (= (x1101 x696) x1640) (= (> x2014 x1640) x1400) (= (x795 (x599 x1896) (x701 2) 0) x696) (>= x1640 0)) x53) (and (=> x1400 x611) (=> (and (not x1400) (= x1791 (> x2470 x1640))) (and (=> x1791 x611) (=> (and (not x1791) (and (<= 0 x876) (= x2677 (> x876 x455)) (= x455 (x1350 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2470))) (<= x876 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x795 (x599 x103) (x701 2) 0) x1018) (= x2642 (x1350 (- x1640 x2470))) (= x491 (x795 (x599 x1896) (x701 2) 0)) (= x876 (x496 x1018)))) (and (=> (and (not x2677) (and (= (< x1947 x876) x384) (= (x2675 (+ x2470 x876)) x1947))) (and (=> x384 x611) (=> (and (not x384) (and (= x1610 (x795 (x599 x103) (x701 2) 0)) (= x2125 32) (= 1 x1196))) x823))) (=> x2677 x611))))))))) (=> x1860 x611))))) (=> x1463 x2418))) (=> x2749 x2418))) x1841))
(assert (x71 x86))
(assert (= (or x2498 x1919) x2619))
(assert (x71 x1181))
(assert (x71 x722))
(assert (= (and (not x2347) x2360) x1831))
(assert (x71 x2494))
(assert (= (and x843 x1288) x2193))
(assert (x71 x2040))
(assert (= x2110 (and x1831 x999)))
(assert (x71 x1877))
(assert (x71 x2622))
(assert (= x2631 (or (and (not x451) x1718) x302)))
(assert (x1016 32))
(assert (x71 x2509))
(assert (=> (<= x1723 10000) (= (x701 x1723) (x599 x1723))))
(assert (= x1316 (and x1753 (not x180))))
(assert (x71 x101))
(assert (x71 x2227))
(assert (= x1709 (and x271 (not x2048))))
(assert (= x2317 (=> (= x2437 x1286) x352)))
(assert (x1107 x643))
(assert (x71 x565))
(assert (= x1096 true))
(assert (x71 x2409))
(assert (x1107 x414))
(assert (x71 x2376))
(assert (= x2249 (=> (= (not (< 1 x747)) x2035) (and (=> (= x1222 x2107) x2127) x2035))))
(assert (= x474 (and x2580 (not x1616))))
(assert (= x2629 (and x1179 x1321)))
(assert (= 3756033516 (x2495 (x701 3756033516))))
(assert (x71 x1706))
(assert (= (and x377 (not x1721)) x1893))
(assert (= x1534 (and x378 (not x1323))))
(assert (x71 x2205))
(assert (x71 x478))
(assert (= (and (not x932) x2568) x149))
(assert (= x994 (or x1190 x1385 x1041 x2387 x936 x1093)))
(assert (x71 x860))
(assert (= (and (not x2517) x1781) x501))
(assert (= (x2495 (x599 x727)) x727))
(assert (x71 x2169))
(assert (= (or x1480 x1600) x1012))
(assert (x71 x299))
(assert (= (or x1659 x1864) x1158))
(assert (= x365 (and (not x2135) x1028)))
(assert (x71 x2470))
(assert (= (and x1019 x2491) x2198))
(assert (= (and x1292 x1585) x1376))
(assert (x71 x2277))
(assert (x71 x2666))
(assert (x71 x2178))
(assert (x71 x1452))
(assert (x71 x1959))
(assert (= (and x2083 (not x1133)) x966))
(assert (= (=> (and (or (not x451) x451) (= x451 (= 0 x2437))) x1923) x352))
(assert (x71 x2546))
(assert (and (x628 x2371 32) (x1401 x2371 32) (x1812 x2371 32) (=> (> 32 0) (= (+ (* 32 (x2192 x2371 32)) (x2492 x2371 32)) x2371))))
(assert (x71 x2561))
(assert (x71 x416))
(assert (= (or x2738 x2464) x814))
(assert (= x1129 (and (not x970) x1946)))
(assert (= x2299 (or x2684 x1837)))
(assert (x71 x388))
(assert (= x2161 (and x1231 (not x1541))))
(assert (= x1339 (=> (and (and (= 1889567281 x1973) (= (ite (= 0 x1279) x2074 (ite (= 32 x1279) x1298 (ite (= 64 x1279) x337 (ite x623 (x24 x1279) (ite x341 (x375 x1279) (ite x262 (x1410 x1279) (ite x1678 (x2698 x1279) (x2103 x1279)))))))) x812) (= (x2675 (+ x181 x1108)) x369) (>= x864 0) (not (= x1973 826074471)) (> x1977 0) (= x2715 x369) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x864) (= (x900 x2712) x864) (= x27 x905) (= x1379 x860) (= x864 x1203) (<= x414 1461501637330902918203684832716283019655932542975) (= x1379 (x2675 (+ x145 x2365))) (= x1279 x337) (= x2365 (x2487 (* 32 x905))) (= (x2487 (* 32 x905)) x1108) (= (x2621 (x599 x2157)) x1977) (= x414 x2443) (= x2712 (x795 (x599 x414) (x701 1) 0)) (not (< x1973 826074471))) (and (and (= x100 x1203) (= x962 x160) (= x2526 1889567281) (not (= x2526 826074471)) (= x1374 (x2621 (x599 x2157))) (<= 0 x962) (<= x962 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x1374) (>= 1461501637330902918203684832716283019655932542975 x804) (not (> 826074471 x2526)) (= x962 (x900 x578)) (= x578 (x795 (x599 x804) (x701 1) 0))) (and (and (= (= x1916 x2079) x775) (= x1916 (- x2237 x535)) (= x681 x2649) (= x2079 (- x1087 x1801)) (= x2724 (= x1806 x2649)) (= x1087 x2570) (= x2076 x1520) (= x2237 x100) (= x1520 x1801) (= x535 x1145) (= (= x2724 x775) x1974) (= x1806 x2064)) (and (= x996 (x2621 (x599 x2157))) (<= x699 1461501637330902918203684832716283019655932542975) (= x2577 1889567281) (= x160 x2064) (<= x1474 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x900 x465) x1474) (not (= 826074471 x2577)) (= x465 (x795 (x599 x699) (x701 1) 0)) (not (> 826074471 x2577)) (>= x1474 0) (> x996 0) (= x1474 x2076))))) x1974)))
(assert (x71 x2115))
(assert (x71 x612))
(assert (= (and x1295 x1982) x1215))
(assert (x71 x2679))
(assert (x71 x521))
(assert (x71 x836))
(assert (x71 x2488))
(assert (x71 x1649))
(assert (= x84 (and x1405 (not x2151))))
(assert (= 2646777772 (x2495 (x701 2646777772))))
(assert (= (x701 2569309863) (x599 2569309863)))
(assert (x71 x2438))
(assert (= (and x366 x2506) x2275))
(assert (x71 x805))
(assert (x71 x1764))
(assert (x71 x1977))
(assert (= (and x2006 x707) x526))
(assert (= (=> (and (= x1431 x818) (= x669 x2325)) x1455) x614))
(assert (x71 x527))
(assert (= x1687 (or x2493 x858)))
(assert (x71 x2052))
(assert (= x1106 (=> (= 0 x248) x1000)))
(assert (x2461 x135))
(assert (= (x2495 (x599 x31)) x31))
(assert (= (and x2023 x2467) x1736))
(assert (= x1195 (and (not x938) x1162)))
(assert (= x351 (or x115 x2597 x339 x137)))
(assert (x71 x1120))
(assert (x71 x2112))
(assert (= (and x732 x2353) x1990))
(assert (x71 x1294))
(assert (x71 x1170))
(assert (= x1620 (and x2388 x365)))
(assert (=> (<= x1073 10000) (= (x701 x1073) (x599 x1073))))
(assert (= (and x1823 (not x807)) x112))
(assert (= (=> (and (= x719 x1395) (= x1855 x678)) x2755) x454))
(assert (= x1373 (and x1204 (not x1597))))
(assert (= (or x2510 x2747 x865 x1714) x1122))
(assert (= x611 (=> (and (= x2125 x2078) (= x1196 0)) x823)))
(assert (= (and (not x1983) x841) x749))
(assert (x71 x931))
(assert (x71 x534))
(assert (= x1615 (and x1356 (not x2637))))
(assert (x71 x1641))
(assert (and (x628 x2378 1461501637330902918203684832716283019655932542976) (x1401 x2378 1461501637330902918203684832716283019655932542976) (x1812 x2378 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* 1461501637330902918203684832716283019655932542976 (x2192 x2378 1461501637330902918203684832716283019655932542976)) (x2492 x2378 1461501637330902918203684832716283019655932542976)) x2378))))
(assert (x71 x918))
(assert (x71 x1001))
(assert (x71 x480))
(assert (= (x599 565014339) (x701 565014339)))
(assert (x71 x1810))
(assert (x71 x1371))
(assert (=> (<= x521 10000) (= (x599 x521) (x701 x521))))
(assert (= (and x109 (not x1062)) x2039))
(assert (x71 x1826))
(assert (= (and x421 x233) x312))
(assert (x71 x2030))
(assert (x71 x1176))
(assert (x71 x954))
(assert (x71 x300))
(assert (= 0 (x269 x181)))
(assert (= (and (not x1750) x2465) x1008))
(assert (= (or (and x1727 (not x982)) x2242) x2118))
(assert (= (x701 2514000705) (x599 2514000705)))
(assert (= (and x190 x72) x2617))
(assert (= (and x1247 (not x417)) x1210))
(assert (= x1909 (or x827 x275)))
(assert (x71 x497))
(assert (= (x2495 (x701 3648997476)) 3648997476))
(assert (= x2319 (and x832 (not x1882))))
(assert (x71 x265))
(assert (= x934 (=> (and (= x1476 x1351) (= x2012 0)) x2028)))
(assert (x71 x2296))
(assert (= (x2495 (x1031 x706 1)) (+ 1 (x2495 x706))))
(assert (= x313 (and x1869 x1615)))
(assert (= x2058 (=> (= x1724 0) x51)))
(assert (x71 x1301))
(assert (= x2364 (x2495 (x599 x2364))))
(assert (= (and x822 x1388) x2171))
(assert (= 2569309863 (x2495 (x701 2569309863))))
(assert (x71 x996))
(assert (= (x701 72223263258191293651604190264004579703475585967499159981614695267027195527168) (x599 72223263258191293651604190264004579703475585967499159981614695267027195527168)))
(assert (x71 x502))
(assert (x71 x1938))
(assert (x71 x2097))
(check-sat)
(exit)
