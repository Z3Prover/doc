(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x3634 0)) (((x2353 (x1108 Int)) (x998 (x3198 x3634) (x1821 Int)) (x2947 (x1268 x3634) (x1483 x3634) (x2169 Int)))))
(declare-fun x1730 (x3634) Int)
(declare-fun x1681 () Bool)
(declare-fun x1248 () Int)
(declare-fun x3824 () Bool)
(declare-fun x1736 () Int)
(declare-fun x3316 () x3634)
(declare-fun x2741 () Int)
(declare-fun x2767 () Int)
(declare-fun x2089 () x3634)
(declare-fun x2656 (x3634) Int)
(declare-fun x1250 () Int)
(declare-fun x1536 () Bool)
(declare-fun x3037 () Bool)
(declare-fun x44 () Bool)
(declare-fun x1279 () Int)
(declare-fun x107 () Bool)
(declare-fun x2160 () Bool)
(declare-fun x1060 () Int)
(declare-fun x3954 () x3634)
(declare-fun x3603 () Int)
(declare-fun x3432 () Int)
(declare-fun x1926 () Int)
(declare-fun x498 () Bool)
(declare-fun x314 () x3634)
(declare-fun x1790 () Int)
(declare-fun x1388 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x1450 () x3634)
(declare-fun x2222 () Int)
(declare-fun x2504 () Bool)
(declare-fun x3510 () Bool)
(declare-fun x1540 () Int)
(declare-fun x1280 () Int)
(declare-fun x2650 () Bool)
(declare-fun x635 () Bool)
(declare-fun x482 () Bool)
(declare-fun x1624 () Int)
(declare-fun x2514 () Int)
(declare-fun x3117 () Bool)
(declare-fun x59 (Int) Int)
(declare-fun x117 () Bool)
(declare-fun x943 () Bool)
(declare-fun x3894 () Int)
(declare-fun x3148 () x3634)
(declare-fun x541 (Int) Int)
(declare-fun x2745 () Bool)
(declare-fun x342 () Int)
(declare-fun x3757 () Bool)
(declare-fun x2056 () Bool)
(declare-fun x2062 () x3634)
(declare-fun x3517 () Bool)
(declare-fun x1614 () Bool)
(declare-fun x3488 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x3199 () Bool)
(declare-fun x3504 () Bool)
(declare-fun x3122 () Int)
(declare-fun x1420 () x3634)
(declare-fun x3524 () Bool)
(declare-fun x3731 () Int)
(declare-fun x1823 () Bool)
(declare-fun x2435 () Int)
(declare-fun x3794 () Int)
(declare-fun x2500 () Int)
(declare-fun x533 () Bool)
(declare-fun x758 () Int)
(declare-fun x1469 () x3634)
(declare-fun x3153 () Int)
(declare-fun x104 () Bool)
(declare-fun x305 () Int)
(declare-fun x1696 () Int)
(declare-fun x3025 () Int)
(declare-fun x1273 () Bool)
(declare-fun x3072 () x3634)
(declare-fun x3680 () Int)
(declare-fun x2443 () Bool)
(declare-fun x1057 () Int)
(declare-fun x1859 () Int)
(declare-fun x1581 () Bool)
(declare-fun x2480 () Int)
(declare-fun x1506 () x3634)
(declare-fun x3972 () Int)
(declare-fun x103 () Bool)
(declare-fun x1996 () Bool)
(declare-fun x2732 (Int Int) Int)
(declare-fun x2078 () Bool)
(declare-fun x1634 () Bool)
(declare-fun x2893 () Int)
(declare-fun x1806 () Int)
(declare-fun x3633 () Int)
(declare-fun x2799 () Bool)
(declare-fun x767 () Bool)
(declare-fun x2486 () Bool)
(declare-fun x595 () Bool)
(declare-fun x3845 () Bool)
(declare-fun x2260 () Bool)
(declare-fun x530 () Bool)
(declare-fun x1309 () Int)
(declare-fun x1040 () Int)
(declare-fun x402 () Int)
(declare-fun x863 () Int)
(declare-fun x1952 () Int)
(declare-fun x2603 () Bool)
(declare-fun x143 () Bool)
(declare-fun x1865 () Bool)
(declare-fun x276 () Bool)
(declare-fun x3756 () Bool)
(declare-fun x69 () Int)
(declare-fun x3030 (x3634) Int)
(declare-fun x1212 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x2354 () x3634)
(declare-fun x3835 () Bool)
(declare-fun x3638 () Int)
(declare-fun x3347 () Int)
(declare-fun x1804 () Int)
(declare-fun x1588 () Int)
(declare-fun x1893 () Bool)
(declare-fun x3670 () Int)
(declare-fun x2699 () Int)
(declare-fun x3167 () x3634)
(declare-fun x3191 () Bool)
(declare-fun x320 () Int)
(declare-fun x2584 () x3634)
(declare-fun x3744 () Int)
(declare-fun x1905 () x3634)
(declare-fun x2975 () Int)
(declare-fun x271 () Bool)
(declare-fun x3121 () Bool)
(declare-fun x2410 () Int)
(declare-fun x2130 () Int)
(declare-fun x1258 () Int)
(declare-fun x2536 () Int)
(declare-fun x307 () Bool)
(declare-fun x1425 () Bool)
(declare-fun x3401 () Int)
(declare-fun x3241 () Bool)
(declare-fun x983 () Bool)
(declare-fun x1940 () Bool)
(declare-fun x3881 () x3634)
(declare-fun x1179 () Int)
(declare-fun x3321 () Bool)
(declare-fun x900 () Bool)
(declare-fun x2180 () Int)
(declare-fun x3589 () Int)
(declare-fun x712 (Int) Int)
(declare-fun x3369 () Int)
(declare-fun x1763 () Bool)
(declare-fun x3471 () Bool)
(declare-fun x3115 () Bool)
(declare-fun x2299 () Int)
(declare-fun x1897 () Bool)
(declare-fun x340 () Bool)
(declare-fun x1724 () Int)
(declare-fun x2507 () Bool)
(declare-fun x2367 () Int)
(declare-fun x1317 () x3634)
(declare-fun x1380 () Int)
(declare-fun x1783 () Bool)
(declare-fun x3048 () Bool)
(declare-fun x2207 () x3634)
(declare-fun x792 () Bool)
(declare-fun x3639 () Bool)
(declare-fun x2802 () Bool)
(declare-fun x1851 () Int)
(declare-fun x531 () Bool)
(declare-fun x3863 () Int)
(declare-fun x2503 () Bool)
(declare-fun x1643 () Bool)
(declare-fun x477 () Bool)
(declare-fun x3195 () Int)
(declare-fun x1158 () Bool)
(declare-fun x3952 () x3634)
(declare-fun x2574 () x3634)
(declare-fun x1204 () Bool)
(declare-fun x209 () x3634)
(declare-fun x495 () x3634)
(declare-fun x2978 () Bool)
(declare-fun x524 () Bool)
(declare-fun x1075 () Int)
(declare-fun x1638 () Bool)
(declare-fun x2045 () Bool)
(declare-fun x2335 () Bool)
(declare-fun x1595 () Bool)
(declare-fun x2408 () Int)
(declare-fun x3302 () Int)
(declare-fun x954 () Bool)
(declare-fun x265 () x3634)
(declare-fun x3648 () Bool)
(declare-fun x1658 () Int)
(declare-fun x2925 () Int)
(declare-fun x173 () Int)
(declare-fun x2764 () Int)
(declare-fun x2634 () Bool)
(declare-fun x3294 () Bool)
(declare-fun x2216 () Int)
(declare-fun x385 () Int)
(declare-fun x3377 () x3634)
(declare-fun x2899 () x3634)
(declare-fun x1059 () Bool)
(declare-fun x3274 () Bool)
(declare-fun x1593 () x3634)
(declare-fun x3441 () Bool)
(declare-fun x2958 (x3634) Int)
(declare-fun x1782 () Int)
(declare-fun x310 () Bool)
(declare-fun x178 () Int)
(declare-fun x2847 () Bool)
(declare-fun x2274 () Int)
(declare-fun x1281 () Bool)
(declare-fun x500 () Int)
(declare-fun x2374 () Bool)
(declare-fun x3984 () Int)
(declare-fun x2104 () Int)
(declare-fun x1932 () Int)
(declare-fun x1584 () Int)
(declare-fun x191 () Bool)
(declare-fun x1338 () Bool)
(declare-fun x2575 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x1633 () Int)
(declare-fun x994 () Bool)
(declare-fun x3128 () Int)
(declare-fun x2186 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x3814 () x3634)
(declare-fun x1825 () Bool)
(declare-fun x2962 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x1858 () Int)
(declare-fun x2067 () Int)
(declare-fun x1791 () Int)
(declare-fun x2 () Bool)
(declare-fun x1519 () Int)
(declare-fun x3831 () Bool)
(declare-fun x2146 () Bool)
(declare-fun x3318 () Int)
(declare-fun x2401 () x3634)
(declare-fun x1539 () Int)
(declare-fun x2424 () Int)
(declare-fun x2492 () Int)
(declare-fun x962 () x3634)
(declare-fun x3469 () Int)
(declare-fun x3602 () Bool)
(declare-fun x1410 () Int)
(declare-fun x3379 () Bool)
(declare-fun x3775 () Int)
(declare-fun x3163 () x3634)
(declare-fun x873 () Bool)
(declare-fun x1679 () Int)
(declare-fun x1728 () x3634)
(declare-fun x984 () Bool)
(declare-fun x273 () Bool)
(declare-fun x3843 () Int)
(declare-fun x2561 () x3634)
(declare-fun x1381 () Int)
(declare-fun x596 () Bool)
(declare-fun x3491 () Bool)
(declare-fun x3951 () Int)
(declare-fun x3809 () Bool)
(declare-fun x2598 () Bool)
(declare-fun x1703 () Int)
(declare-fun x1739 () Int)
(declare-fun x2102 () x3634)
(declare-fun x1170 () Int)
(declare-fun x3839 () Int)
(declare-fun x1716 () Bool)
(declare-fun x1477 () Bool)
(declare-fun x3061 () Int)
(declare-fun x123 () Bool)
(declare-fun x295 () Bool)
(declare-fun x3692 () x3634)
(declare-fun x1570 () Bool)
(declare-fun x3203 () Bool)
(declare-fun x2873 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x2676 () Bool)
(declare-fun x2110 () Int)
(declare-fun x2329 () Bool)
(declare-fun x769 () Bool)
(declare-fun x671 (x3634) Int)
(declare-fun x1187 () Bool)
(declare-fun x2842 () Int)
(declare-fun x438 () Bool)
(declare-fun x1472 () x3634)
(declare-fun x2490 () Int)
(declare-fun x1872 () Bool)
(declare-fun x3202 () Bool)
(declare-fun x2184 () Int)
(declare-fun x2848 (Int) Int)
(declare-fun x289 () Bool)
(declare-fun x1600 () Bool)
(declare-fun x2116 () Bool)
(declare-fun x275 () Int)
(declare-fun x377 () Int)
(declare-fun x2192 () Int)
(declare-fun x2740 () Int)
(declare-fun x2375 () Bool)
(declare-fun x1856 () Int)
(declare-fun x933 () Int)
(declare-fun x126 (Int) Int)
(declare-fun x435 () Bool)
(declare-fun x1930 () Int)
(declare-fun x2100 () x3634)
(declare-fun x761 (Int) Int)
(declare-fun x2863 () Bool)
(declare-fun x1293 () x3634)
(declare-fun x1489 () Int)
(declare-fun x1445 () x3634)
(declare-fun x3812 () Int)
(declare-fun x2850 () Bool)
(declare-fun x3161 () Int)
(declare-fun x711 () Int)
(declare-fun x3749 () Bool)
(declare-fun x139 () Bool)
(declare-fun x1320 () Int)
(declare-fun x1636 () Bool)
(declare-fun x3068 () Int)
(declare-fun x1486 () Int)
(declare-fun x609 () Int)
(declare-fun x3142 () Int)
(declare-fun x3629 () Int)
(declare-fun x479 () Int)
(declare-fun x480 () Int)
(declare-fun x2711 () Int)
(declare-fun x910 () x3634)
(declare-fun x1721 () Int)
(declare-fun x2670 () Int)
(declare-fun x2543 () Bool)
(declare-fun x3932 () Bool)
(declare-fun x806 () Bool)
(declare-fun x380 () Bool)
(declare-fun x3597 () Bool)
(declare-fun x3296 () Int)
(declare-fun x879 () Int)
(declare-fun x3691 () x3634)
(declare-fun x410 () Bool)
(declare-fun x3721 () Bool)
(declare-fun x2806 () Int)
(declare-fun x3615 () Int)
(declare-fun x3006 () Bool)
(declare-fun x2296 () Int)
(declare-fun x2852 () Bool)
(declare-fun x2365 () Bool)
(declare-fun x2734 () Int)
(declare-fun x1171 () x3634)
(declare-fun x2698 () Int)
(declare-fun x3015 () Int)
(declare-fun x319 () x3634)
(declare-fun x3588 () x3634)
(declare-fun x277 () Bool)
(declare-fun x1980 (Int) Int)
(declare-fun x677 () Bool)
(declare-fun x348 () Bool)
(declare-fun x3360 () Bool)
(declare-fun x874 () Int)
(declare-fun x1468 () Bool)
(declare-fun x737 () Int)
(declare-fun x2952 () Bool)
(declare-fun x1605 () Int)
(declare-fun x3261 () x3634)
(declare-fun x2513 () Bool)
(declare-fun x3220 () Int)
(declare-fun x1063 () Int)
(declare-fun x1795 () x3634)
(declare-fun x744 () Bool)
(declare-fun x3251 () Int)
(declare-fun x1622 () Int)
(declare-fun x2798 (Int) Int)
(declare-fun x1308 () Bool)
(declare-fun x3303 () Bool)
(declare-fun x3828 () Int)
(declare-fun x576 () Int)
(declare-fun x2692 () Int)
(declare-fun x2548 () Int)
(declare-fun x3256 () x3634)
(declare-fun x125 () Int)
(declare-fun x131 () Bool)
(declare-fun x2987 () Int)
(declare-fun x1217 () Int)
(declare-fun x362 () Int)
(declare-fun x912 () Bool)
(declare-fun x3641 () Int)
(declare-fun x1654 () Int)
(declare-fun x1518 (x3634) Int)
(declare-fun x1651 () Bool)
(declare-fun x859 () x3634)
(declare-fun x2981 () Bool)
(declare-fun x144 () Int)
(declare-fun x937 () Bool)
(declare-fun x1844 () Bool)
(declare-fun x1080 () Int)
(declare-fun x3808 () x3634)
(declare-fun x3159 () x3634)
(declare-fun x10 () Int)
(declare-fun x1544 () Bool)
(declare-fun x1690 () Int)
(declare-fun x1327 () Int)
(declare-fun x621 () Int)
(declare-fun x3158 () Int)
(declare-fun x3044 () Bool)
(declare-fun x2885 () Bool)
(declare-fun x2874 () x3634)
(declare-fun x1041 () Int)
(declare-fun x45 () Int)
(declare-fun x1383 () Bool)
(declare-fun x2318 () Bool)
(declare-fun x3143 () Bool)
(declare-fun x2118 () Bool)
(declare-fun x2376 () Int)
(declare-fun x1667 () Bool)
(declare-fun x53 () Int)
(declare-fun x1184 () Int)
(declare-fun x2279 () Bool)
(declare-fun x1751 () Int)
(declare-fun x1186 () Bool)
(declare-fun x2084 () Bool)
(declare-fun x3204 () Int)
(declare-fun x981 () Int)
(declare-fun x1628 () Bool)
(declare-fun x2442 () Int)
(declare-fun x2957 () Int)
(declare-fun x343 () Int)
(declare-fun x517 () Int)
(declare-fun x2057 () Int)
(declare-fun x1629 () Bool)
(declare-fun x1815 (x3634) Int)
(declare-fun x3088 () Bool)
(declare-fun x2448 () Bool)
(declare-fun x2106 () Bool)
(declare-fun x2986 () Int)
(declare-fun x2770 () Int)
(declare-fun x1021 () Int)
(declare-fun x1110 () Bool)
(declare-fun x3789 () Bool)
(declare-fun x2135 () Int)
(declare-fun x3566 () Bool)
(declare-fun x2484 () Int)
(declare-fun x2714 () Bool)
(declare-fun x147 () Int)
(declare-fun x3047 () Int)
(declare-fun x1800 () Bool)
(declare-fun x2611 () Bool)
(declare-fun x865 () Int)
(declare-fun x3054 () Bool)
(declare-fun x2357 () x3634)
(declare-fun x1810 () Bool)
(declare-fun x3901 () Bool)
(declare-fun x523 () Bool)
(declare-fun x3297 () Int)
(declare-fun x2531 () Int)
(declare-fun x3250 () Int)
(declare-fun x1774 () Bool)
(declare-fun x379 () x3634)
(declare-fun x253 () Int)
(declare-fun x3528 () Int)
(declare-fun x1938 () Bool)
(declare-fun x2372 () Bool)
(declare-fun x1054 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x2666 () Bool)
(declare-fun x3529 () Bool)
(declare-fun x416 () Int)
(declare-fun x507 () Int)
(declare-fun x266 () Bool)
(declare-fun x2097 () Bool)
(declare-fun x2729 () Int)
(declare-fun x1982 () x3634)
(declare-fun x206 () Int)
(declare-fun x3217 () Int)
(declare-fun x1886 () Bool)
(declare-fun x870 () Bool)
(declare-fun x2009 () Bool)
(declare-fun x1750 () Bool)
(declare-fun x2123 () Bool)
(declare-fun x3238 () Bool)
(declare-fun x1409 () x3634)
(declare-fun x3570 () x3634)
(declare-fun x3690 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x762 () Bool)
(declare-fun x1264 () Int)
(declare-fun x1050 () Bool)
(declare-fun x2276 () Bool)
(declare-fun x1953 () Bool)
(declare-fun x26 () Bool)
(declare-fun x632 () Int)
(declare-fun x3181 () Int)
(declare-fun x1995 () Bool)
(declare-fun x991 () Bool)
(declare-fun x1594 () Bool)
(declare-fun x1987 () Bool)
(declare-fun x2117 () Bool)
(declare-fun x119 () Int)
(declare-fun x864 () Bool)
(declare-fun x1934 () Int)
(declare-fun x3392 () Int)
(declare-fun x2197 () Bool)
(declare-fun x3300 () Bool)
(declare-fun x2915 () Bool)
(declare-fun x642 () Bool)
(declare-fun x784 () Int)
(declare-fun x3050 () Int)
(declare-fun x2159 () Int)
(declare-fun x2922 () Bool)
(declare-fun x814 () Int)
(declare-fun x1313 () Bool)
(declare-fun x2050 () x3634)
(declare-fun x382 () Bool)
(declare-fun x156 () Bool)
(declare-fun x3889 () x3634)
(declare-fun x3788 () x3634)
(declare-fun x3936 () Int)
(declare-fun x166 () x3634)
(declare-fun x2754 () Bool)
(declare-fun x718 () Bool)
(declare-fun x1771 () Int)
(declare-fun x672 () x3634)
(declare-fun x1391 () Bool)
(declare-fun x1906 () Int)
(declare-fun x731 () Int)
(declare-fun x3475 () x3634)
(declare-fun x2371 () Int)
(declare-fun x3535 () Bool)
(declare-fun x106 () Int)
(declare-fun x3735 () Bool)
(declare-fun x2173 () Int)
(declare-fun x893 () Bool)
(declare-fun x1868 () Int)
(declare-fun x2268 () Int)
(declare-fun x3519 () x3634)
(declare-fun x285 () Bool)
(declare-fun x2194 () Bool)
(declare-fun x1843 () Int)
(declare-fun x1120 () Bool)
(declare-fun x2262 () Bool)
(declare-fun x207 () Bool)
(declare-fun x2321 () Int)
(declare-fun x755 () Int)
(declare-fun x3620 () Int)
(declare-fun x486 () Bool)
(declare-fun x2233 () Bool)
(declare-fun x3525 () Bool)
(declare-fun x961 () Int)
(declare-fun x3811 () Bool)
(declare-fun x518 () Int)
(declare-fun x3583 () Int)
(declare-fun x3826 () Int)
(declare-fun x1656 () Bool)
(declare-fun x2399 () Bool)
(declare-fun x829 () x3634)
(declare-fun x32 () x3634)
(declare-fun x1397 () Bool)
(declare-fun x2836 () Bool)
(declare-fun x1524 () Int)
(declare-fun x1603 () Bool)
(declare-fun x1333 () x3634)
(declare-fun x3596 () Int)
(declare-fun x1908 () Bool)
(declare-fun x1392 () x3634)
(declare-fun x3920 () Int)
(declare-fun x2122 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x1998 () Int)
(declare-fun x2546 () Int)
(declare-fun x2305 () Bool)
(declare-fun x657 () Bool)
(declare-fun x1466 () Int)
(declare-fun x2026 () Bool)
(declare-fun x3059 () x3634)
(declare-fun x565 () Int)
(declare-fun x3249 () Bool)
(declare-fun x1452 () Int)
(declare-fun x3306 () x3634)
(declare-fun x3888 () Int)
(declare-fun x2479 () Int)
(declare-fun x3494 () Int)
(declare-fun x3622 () Int)
(declare-fun x3612 () Int)
(declare-fun x815 () Bool)
(declare-fun x3132 () Int)
(declare-fun x1596 () Int)
(declare-fun x1706 () Bool)
(declare-fun x3512 () Bool)
(declare-fun x146 () Int)
(declare-fun x2070 () x3634)
(declare-fun x540 () Bool)
(declare-fun x3066 () Bool)
(declare-fun x809 () Int)
(declare-fun x2059 () Int)
(declare-fun x3575 () Int)
(declare-fun x2418 () Int)
(declare-fun x2214 () Int)
(declare-fun x2331 (x3634) Int)
(declare-fun x2820 () x3634)
(declare-fun x2677 () Bool)
(declare-fun x3654 () Int)
(declare-fun x317 () Bool)
(declare-fun x1866 () x3634)
(declare-fun x3948 (Int) Int)
(declare-fun x3869 () Bool)
(declare-fun x788 () Int)
(declare-fun x2359 () Bool)
(declare-fun x3902 () x3634)
(declare-fun x2021 () Int)
(declare-fun x1672 () Int)
(declare-fun x423 () x3634)
(declare-fun x926 () Int)
(declare-fun x476 () Int)
(declare-fun x101 () Bool)
(declare-fun x1274 () Bool)
(declare-fun x3218 () x3634)
(declare-fun x3257 () Bool)
(declare-fun x2036 () Int)
(declare-fun x3868 () Bool)
(declare-fun x3476 () Int)
(declare-fun x3950 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x1548 () Int)
(declare-fun x2920 () Bool)
(declare-fun x3485 () Int)
(declare-fun x312 () Int)
(declare-fun x2332 () Int)
(declare-fun x3915 () Bool)
(declare-fun x1065 () Int)
(declare-fun x3739 () Bool)
(declare-fun x1884 () Int)
(declare-fun x883 () Bool)
(declare-fun x3390 () x3634)
(declare-fun x586 () Int)
(declare-fun x3007 () Int)
(declare-fun x849 () x3634)
(declare-fun x70 () x3634)
(declare-fun x3779 () Int)
(declare-fun x2115 () Int)
(declare-fun x138 () Bool)
(declare-fun x1498 () Int)
(declare-fun x171 () Bool)
(declare-fun x2221 () Bool)
(declare-fun x3760 () Int)
(declare-fun x1516 () Int)
(declare-fun x1023 () Bool)
(declare-fun x40 () Bool)
(declare-fun x1113 () Int)
(declare-fun x1267 () Bool)
(declare-fun x3531 () Bool)
(declare-fun x940 () x3634)
(declare-fun x924 () x3634)
(declare-fun x3138 () Bool)
(declare-fun x2019 () Bool)
(declare-fun x1935 () Int)
(declare-fun x772 () Bool)
(declare-fun x1185 () Int)
(declare-fun x2437 () Bool)
(declare-fun x2304 () Bool)
(declare-fun x1609 () Int)
(declare-fun x3465 () Bool)
(declare-fun x2391 () Bool)
(declare-fun x2168 () Bool)
(declare-fun x1885 () Bool)
(declare-fun x1991 (x3634) Int)
(declare-fun x1198 () Int)
(declare-fun x145 () Bool)
(declare-fun x1266 () Bool)
(declare-fun x890 () Int)
(declare-fun x2593 () Bool)
(declare-fun x2297 () Bool)
(declare-fun x2510 () x3634)
(declare-fun x1514 () Bool)
(declare-fun x2516 () Int)
(declare-fun x3062 () Bool)
(declare-fun x535 () Int)
(declare-fun x2327 () Int)
(declare-fun x1896 () Bool)
(declare-fun x2477 () Bool)
(declare-fun x1172 () Int)
(declare-fun x2188 () Bool)
(declare-fun x3554 () Bool)
(declare-fun x165 () Bool)
(declare-fun x2879 () Bool)
(declare-fun x1036 () Int)
(declare-fun x1346 () Bool)
(declare-fun x3080 () Int)
(declare-fun x427 () Bool)
(declare-fun x499 () Bool)
(declare-fun x1611 () Int)
(declare-fun x2705 () Bool)
(declare-fun x1824 () x3634)
(declare-fun x1441 () Int)
(declare-fun x2235 () Bool)
(declare-fun x354 () Bool)
(declare-fun x2826 () Int)
(declare-fun x455 () Bool)
(declare-fun x3067 () Bool)
(declare-fun x2139 () Int)
(declare-fun x2425 () x3634)
(declare-fun x1878 () Int)
(declare-fun x1922 () x3634)
(declare-fun x176 () Int)
(declare-fun x436 () Bool)
(declare-fun x853 () Bool)
(declare-fun x2843 () Int)
(declare-fun x2347 () Int)
(declare-fun x1375 () Int)
(declare-fun x3184 () Bool)
(declare-fun x1834 () Bool)
(declare-fun x2688 () Int)
(declare-fun x899 () Bool)
(declare-fun x774 () Int)
(declare-fun x3232 () Bool)
(declare-fun x3374 () Int)
(declare-fun x1854 () Bool)
(declare-fun x828 () Bool)
(declare-fun x2403 () Int)
(declare-fun x413 () Int)
(declare-fun x3976 () x3634)
(declare-fun x3804 () Int)
(declare-fun x2133 () Int)
(declare-fun x2472 () Int)
(declare-fun x1147 () Bool)
(declare-fun x1431 () Int)
(declare-fun x3034 () Bool)
(declare-fun x2483 (x3634) Int)
(declare-fun x1006 () Int)
(declare-fun x2387 () Int)
(declare-fun x272 () Bool)
(declare-fun x1331 () Int)
(declare-fun x1134 (x3634) Int)
(declare-fun x2314 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x710 () Bool)
(declare-fun x168 () Int)
(declare-fun x2054 () x3634)
(declare-fun x3365 () Bool)
(declare-fun x3562 () Bool)
(declare-fun x2080 () x3634)
(declare-fun x3026 () Int)
(declare-fun x687 () Bool)
(declare-fun x3866 () Bool)
(declare-fun x3852 () Int)
(declare-fun x903 () Int)
(declare-fun x3958 () Bool)
(declare-fun x188 () Bool)
(declare-fun x3108 () Bool)
(declare-fun x5 () Bool)
(declare-fun x3644 () Int)
(declare-fun x3540 () x3634)
(declare-fun x536 () Int)
(declare-fun x601 () Bool)
(declare-fun x2148 () Int)
(declare-fun x419 () Int)
(declare-fun x3276 () Bool)
(declare-fun x2333 () Bool)
(declare-fun x2064 () Int)
(declare-fun x3367 () Int)
(declare-fun x2200 () x3634)
(declare-fun x1837 () Bool)
(declare-fun x936 () Int)
(declare-fun x1155 () Int)
(declare-fun x456 () Int)
(declare-fun x1350 () Bool)
(declare-fun x666 () Int)
(declare-fun x1145 () Int)
(declare-fun x2404 () Int)
(declare-fun x3233 () x3634)
(declare-fun x412 () Int)
(declare-fun x3495 () Int)
(declare-fun x2386 () x3634)
(declare-fun x2569 () Int)
(declare-fun x2344 () Bool)
(declare-fun x691 () Bool)
(declare-fun x3635 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x624 () Int)
(declare-fun x515 () Bool)
(declare-fun x1933 () x3634)
(declare-fun x2819 () Int)
(declare-fun x3983 () Bool)
(declare-fun x987 () Bool)
(declare-fun x290 () Bool)
(declare-fun x3688 () Int)
(declare-fun x467 () Int)
(declare-fun x1188 () Bool)
(declare-fun x2567 () Bool)
(declare-fun x154 () Int)
(declare-fun x645 () Bool)
(declare-fun x18 () Int)
(declare-fun x2940 () Int)
(declare-fun x3748 () Bool)
(declare-fun x78 () x3634)
(declare-fun x2175 () Int)
(declare-fun x447 () Bool)
(declare-fun x1822 () Int)
(declare-fun x3657 () Bool)
(declare-fun x2179 () Int)
(declare-fun x3793 () Bool)
(declare-fun x105 () Bool)
(declare-fun x3919 () Int)
(declare-fun x2322 () Bool)
(declare-fun x231 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x2800 () Int)
(declare-fun x3742 () Int)
(declare-fun x2223 () Bool)
(declare-fun x2718 () Int)
(declare-fun x2465 () Int)
(declare-fun x942 (Int) Int)
(declare-fun x1162 () x3634)
(declare-fun x3912 () x3634)
(declare-fun x3354 () x3634)
(declare-fun x1458 () Int)
(declare-fun x3298 () x3634)
(declare-fun x1024 () Bool)
(declare-fun x2337 () Bool)
(declare-fun x3499 () Bool)
(declare-fun x1713 () Int)
(declare-fun x2259 () Int)
(declare-fun x3101 () Int)
(declare-fun x129 () Int)
(declare-fun x2187 () Int)
(declare-fun x294 () Int)
(declare-fun x1496 () x3634)
(declare-fun x246 () x3634)
(declare-fun x3816 () Int)
(declare-fun x2876 () Bool)
(declare-fun x3543 () x3634)
(declare-fun x2288 () x3634)
(declare-fun x2776 () Int)
(declare-fun x2535 () Bool)
(declare-fun x361 () Bool)
(declare-fun x570 () x3634)
(declare-fun x3018 () Bool)
(declare-fun x3498 () Bool)
(declare-fun x3024 () Int)
(declare-fun x490 () Int)
(declare-fun x832 () x3634)
(declare-fun x3689 () Int)
(declare-fun x1602 () Int)
(declare-fun x1246 () x3634)
(declare-fun x1916 () Bool)
(declare-fun x697 () Bool)
(declare-fun x400 () Bool)
(declare-fun x1025 () Int)
(declare-fun x1648 () Int)
(declare-fun x3395 () x3634)
(declare-fun x296 () Bool)
(declare-fun x1444 () Bool)
(declare-fun x2923 () Int)
(declare-fun x1507 () Int)
(declare-fun x2821 () Int)
(declare-fun x2784 () Bool)
(declare-fun x3077 () Bool)
(declare-fun x1176 () Bool)
(declare-fun x2773 () x3634)
(declare-fun x2125 () Int)
(declare-fun x757 () x3634)
(declare-fun x3616 () Int)
(declare-fun x2103 () x3634)
(declare-fun x3862 () Bool)
(declare-fun x2069 () Int)
(declare-fun x2816 () Int)
(declare-fun x3718 () Int)
(declare-fun x86 () Bool)
(declare-fun x3110 (Int) Int)
(declare-fun x1697 () x3634)
(declare-fun x450 () x3634)
(declare-fun x3014 () Int)
(declare-fun x1772 () Int)
(declare-fun x1241 () Bool)
(declare-fun x2195 () Bool)
(declare-fun x3012 () x3634)
(declare-fun x3224 () Int)
(declare-fun x630 () Bool)
(declare-fun x3124 () Int)
(declare-fun x3049 () Bool)
(declare-fun x3457 () Int)
(declare-fun x243 () Bool)
(declare-fun x2124 () Bool)
(declare-fun x2854 () Int)
(declare-fun x1504 () Int)
(declare-fun x608 () Int)
(declare-fun x448 () Bool)
(declare-fun x2637 () Int)
(declare-fun x321 () Bool)
(declare-fun x225 () Bool)
(declare-fun x167 () Bool)
(declare-fun x1817 () Int)
(declare-fun x3600 () Int)
(declare-fun x61 () Bool)
(declare-fun x3337 () Bool)
(declare-fun x790 () Int)
(declare-fun x3467 () Int)
(declare-fun x2601 () Int)
(declare-fun x3593 () Bool)
(declare-fun x1166 () Int)
(declare-fun x3028 () Int)
(declare-fun x2281 () Int)
(declare-fun x1001 () Int)
(declare-fun x3523 () Int)
(declare-fun x582 () Bool)
(declare-fun x2286 () Int)
(declare-fun x591 () Bool)
(declare-fun x2582 () Int)
(declare-fun x1086 () Int)
(declare-fun x417 () Int)
(declare-fun x345 () Bool)
(declare-fun x668 () Int)
(declare-fun x3351 () Bool)
(declare-fun x797 () Bool)
(declare-fun x1606 () Int)
(declare-fun x1875 () Int)
(declare-fun x3479 () Bool)
(declare-fun x979 () Bool)
(declare-fun x3429 () Int)
(declare-fun x2716 (Int) Int)
(declare-fun x3342 () Int)
(declare-fun x1835 () Int)
(declare-fun x1462 () Int)
(declare-fun x2924 () Int)
(declare-fun x2381 () Int)
(declare-fun x346 () Int)
(declare-fun x3513 () Int)
(declare-fun x46 () Bool)
(declare-fun x2458 () Bool)
(declare-fun x474 () Int)
(declare-fun x1871 () Bool)
(declare-fun x1294 () Int)
(declare-fun x830 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x494 () Int)
(declare-fun x2649 () Int)
(declare-fun x112 () Int)
(declare-fun x1915 () Int)
(declare-fun x3820 (x3634) Int)
(declare-fun x2094 () x3634)
(declare-fun x2694 () Bool)
(declare-fun x2232 () Int)
(declare-fun x422 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x1439 () Bool)
(declare-fun x2747 () Int)
(declare-fun x1727 () Int)
(declare-fun x3610 () Bool)
(declare-fun x703 () Bool)
(declare-fun x440 () Bool)
(declare-fun x2580 () Int)
(declare-fun x3189 () Int)
(declare-fun x919 () Bool)
(declare-fun x3572 () Bool)
(declare-fun x2330 () Bool)
(declare-fun x236 () x3634)
(declare-fun x3921 () x3634)
(declare-fun x2334 () Int)
(declare-fun x2269 () Bool)
(declare-fun x1762 () Bool)
(declare-fun x2018 () Bool)
(declare-fun x2213 () Bool)
(declare-fun x1546 () Bool)
(declare-fun x2813 () Int)
(declare-fun x2683 (x3634) Int)
(declare-fun x2709 () Bool)
(declare-fun x3682 () Int)
(declare-fun x1128 () x3634)
(declare-fun x487 () Int)
(declare-fun x575 () Int)
(declare-fun x529 () Int)
(declare-fun x1661 () Int)
(declare-fun x1121 () x3634)
(declare-fun x3293 () Bool)
(declare-fun x2630 () Bool)
(declare-fun x2501 () Bool)
(declare-fun x2969 () Bool)
(declare-fun x2460 () Bool)
(declare-fun x2362 () x3634)
(declare-fun x688 () Int)
(declare-fun x1314 () Bool)
(declare-fun x845 () Int)
(declare-fun x3003 () Int)
(declare-fun x3291 () Int)
(declare-fun x350 () Int)
(declare-fun x3445 () Int)
(declare-fun x3413 (Int Int) Int)
(declare-fun x2058 () Int)
(declare-fun x714 () Bool)
(declare-fun x2993 () Int)
(declare-fun x1160 () Bool)
(declare-fun x3942 () Int)
(declare-fun x2558 () Int)
(declare-fun x3916 () Bool)
(declare-fun x2298 () Int)
(declare-fun x2434 () Bool)
(declare-fun x538 () x3634)
(declare-fun x338 () x3634)
(declare-fun x1840 () Int)
(declare-fun x309 (x3634) Int)
(declare-fun x1070 () Int)
(declare-fun x1051 () Bool)
(declare-fun x2383 () x3634)
(declare-fun x2904 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x3521 () Bool)
(declare-fun x2498 () Int)
(declare-fun x3577 () Bool)
(declare-fun x1909 () Int)
(declare-fun x2633 () Int)
(declare-fun x333 () Int)
(declare-fun x2691 () Int)
(declare-fun x409 () x3634)
(declare-fun x425 () Int)
(declare-fun x3405 () Int)
(declare-fun x2436 () Int)
(declare-fun x2902 () Int)
(declare-fun x743 () Int)
(declare-fun x847 () Int)
(declare-fun x3165 () Bool)
(declare-fun x3830 () Int)
(declare-fun x1583 () Bool)
(declare-fun x3740 () Bool)
(declare-fun x3773 () Bool)
(declare-fun x778 () Int)
(declare-fun x1907 () Bool)
(declare-fun x3216 () Int)
(declare-fun x664 () Int)
(declare-fun x2306 () Bool)
(declare-fun x2871 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x264 () Bool)
(declare-fun x2073 () Bool)
(declare-fun x2121 () Int)
(declare-fun x1895 () Int)
(declare-fun x132 () Bool)
(declare-fun x658 () Int)
(declare-fun x181 () x3634)
(declare-fun x1169 () Bool)
(declare-fun x227 () Int)
(declare-fun x1326 () Bool)
(declare-fun x810 () Int)
(declare-fun x600 () Int)
(declare-fun x3785 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x3433 () Int)
(declare-fun x2229 () Bool)
(declare-fun x3714 () Bool)
(declare-fun x491 () x3634)
(declare-fun x84 () Bool)
(declare-fun x1876 () x3634)
(declare-fun x1330 () Bool)
(declare-fun x1382 (x3634) Int)
(declare-fun x1072 () Bool)
(declare-fun x2284 () Int)
(declare-fun x739 () Int)
(declare-fun x3898 () Bool)
(declare-fun x161 () Bool)
(declare-fun x1674 () Int)
(declare-fun x1505 () Bool)
(declare-fun x3861 () Bool)
(declare-fun x2807 () Int)
(declare-fun x140 () Int)
(declare-fun x1979 () Bool)
(declare-fun x2242 () Bool)
(declare-fun x1789 () Bool)
(declare-fun x374 () Bool)
(declare-fun x2888 () Bool)
(declare-fun x3970 () Int)
(declare-fun x311 (x3634) Int)
(declare-fun x1936 () Bool)
(declare-fun x1442 () Int)
(declare-fun x833 () Bool)
(declare-fun x3415 () Bool)
(declare-fun x220 () Bool)
(declare-fun x1336 () x3634)
(declare-fun x2174 () Int)
(declare-fun x3362 () x3634)
(declare-fun x1967 () Bool)
(declare-fun x1255 () Int)
(declare-fun x2596 () Int)
(declare-fun x2280 () Int)
(declare-fun x588 () Int)
(declare-fun x1352 () Bool)
(declare-fun x2273 () Bool)
(declare-fun x3338 () x3634)
(declare-fun x2451 () Bool)
(declare-fun x396 () Int)
(declare-fun x957 () Bool)
(declare-fun x1984 () x3634)
(declare-fun x3700 () Int)
(declare-fun x1961 () Int)
(declare-fun x1831 () x3634)
(declare-fun x1756 () Int)
(declare-fun x2672 () Int)
(declare-fun x2619 () Int)
(declare-fun x603 () Int)
(declare-fun x3584 () Int)
(declare-fun x1386 () Int)
(declare-fun x2162 () Bool)
(declare-fun x927 () Bool)
(declare-fun x537 () Int)
(declare-fun x1623 () Bool)
(declare-fun x2846 () Bool)
(declare-fun x775 () Int)
(declare-fun x2099 () Bool)
(declare-fun x2528 () Int)
(declare-fun x843 () Bool)
(declare-fun x1311 () Int)
(declare-fun x256 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x1920 () Int)
(declare-fun x1787 () Int)
(declare-fun x2198 () Int)
(declare-fun x88 (x3634) Int)
(declare-fun x906 () Bool)
(declare-fun x17 () Int)
(declare-fun x1262 () Bool)
(declare-fun x3446 () x3634)
(declare-fun x892 () Int)
(declare-fun x3269 () x3634)
(declare-fun x1011 () Bool)
(declare-fun x3645 () Bool)
(declare-fun x483 () Int)
(declare-fun x1671 () Bool)
(declare-fun x3290 () x3634)
(declare-fun x3728 () Bool)
(declare-fun x3614 () Int)
(declare-fun x2703 () Int)
(declare-fun x787 () Bool)
(declare-fun x303 () Int)
(declare-fun x653 () Bool)
(declare-fun x2101 () Int)
(declare-fun x2974 () Bool)
(declare-fun x3899 () Int)
(declare-fun x1374 () Bool)
(declare-fun x334 () Bool)
(declare-fun x3751 () x3634)
(declare-fun x2657 () Int)
(declare-fun x3939 () Int)
(declare-fun x2710 () Int)
(declare-fun x3922 () Bool)
(declare-fun x3171 () Bool)
(declare-fun x1660 () Bool)
(declare-fun x3214 () Int)
(declare-fun x1202 () Bool)
(declare-fun x3763 () x3634)
(declare-fun x1373 () Int)
(declare-fun x2390 () Bool)
(declare-fun x2011 () Int)
(declare-fun x2289 () Int)
(declare-fun x748 () Int)
(declare-fun x2530 () Bool)
(declare-fun x48 () x3634)
(declare-fun x969 () Bool)
(declare-fun x2493 () Int)
(declare-fun x2982 () Int)
(declare-fun x3632 () Bool)
(declare-fun x519 () Int)
(declare-fun x968 () Int)
(declare-fun x999 () Bool)
(declare-fun x2380 () Int)
(declare-fun x3963 () x3634)
(declare-fun x655 () Int)
(declare-fun x2407 () Int)
(declare-fun x1723 () Int)
(declare-fun x198 () Bool)
(declare-fun x648 () x3634)
(declare-fun x3679 () Int)
(declare-fun x388 () Bool)
(declare-fun x2252 () Bool)
(declare-fun x3837 () Int)
(declare-fun x1307 () Int)
(declare-fun x1753 () Int)
(declare-fun x3056 () Bool)
(declare-fun x3326 () x3634)
(declare-fun x3893 () Bool)
(declare-fun x1214 () Int)
(declare-fun x3423 () Bool)
(declare-fun x12 () Int)
(declare-fun x1615 () x3634)
(declare-fun x1813 () Bool)
(declare-fun x118 () Int)
(declare-fun x2753 () Int)
(declare-fun x3668 () x3634)
(declare-fun x1990 () Bool)
(declare-fun x1474 () Int)
(declare-fun x2109 () x3634)
(declare-fun x1807 () Bool)
(declare-fun x1482 () Int)
(declare-fun x3556 () Bool)
(declare-fun x2161 () Int)
(declare-fun x3493 () Int)
(declare-fun x1974 () Int)
(declare-fun x1801 (Int Int) Int)
(declare-fun x3877 () Bool)
(declare-fun x882 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x1842 () Int)
(declare-fun x2081 () Int)
(declare-fun x3355 () Int)
(declare-fun x217 () Bool)
(declare-fun x951 () Bool)
(declare-fun x2638 () Bool)
(declare-fun x2502 () Bool)
(declare-fun x2478 () x3634)
(declare-fun x1902 () Int)
(declare-fun x2647 () Int)
(declare-fun x1062 () Int)
(declare-fun x3940 () x3634)
(declare-fun x3173 () Bool)
(declare-fun x3304 () Bool)
(declare-fun x1556 () Bool)
(declare-fun x3650 () Bool)
(declare-fun x3897 () Bool)
(declare-fun x663 () Bool)
(declare-fun x2861 () Bool)
(declare-fun x1993 () Int)
(declare-fun x1337 () Bool)
(declare-fun x3833 () Bool)
(declare-fun x1129 () Bool)
(declare-fun x1240 () Bool)
(declare-fun x625 () x3634)
(declare-fun x1702 () Bool)
(declare-fun x27 () x3634)
(declare-fun x2326 () Int)
(declare-fun x3658 () Bool)
(declare-fun x1944 () Int)
(declare-fun x2835 () Bool)
(declare-fun x1776 () Int)
(declare-fun x3073 () Int)
(declare-fun x972 () Bool)
(declare-fun x1303 () Int)
(declare-fun x1960 () Int)
(declare-fun x2864 () Bool)
(declare-fun x735 () Bool)
(declare-fun x2652 () Bool)
(declare-fun x548 () Bool)
(declare-fun x1127 () Bool)
(declare-fun x1847 () Bool)
(declare-fun x868 () Bool)
(declare-fun x875 () Bool)
(declare-fun x3188 () Int)
(declare-fun x1473 () x3634)
(declare-fun x3797 () Int)
(declare-fun x3435 () Bool)
(declare-fun x54 () Bool)
(declare-fun x1999 () Int)
(declare-fun x1318 () Bool)
(declare-fun x2865 () Bool)
(declare-fun x3375 () Bool)
(declare-fun x2720 () Int)
(declare-fun x34 () x3634)
(declare-fun x3352 () Bool)
(declare-fun x52 () Int)
(declare-fun x2822 () Bool)
(declare-fun x3324 () Int)
(declare-fun x2446 () Bool)
(declare-fun x914 () Int)
(declare-fun x3526 () Int)
(declare-fun x367 () Bool)
(declare-fun x1644 () Bool)
(declare-fun x3693 () Bool)
(declare-fun x1221 () Int)
(declare-fun x3353 () Int)
(declare-fun x1306 () Bool)
(declare-fun x1684 () Int)
(declare-fun x2320 () Int)
(declare-fun x357 () Bool)
(declare-fun x3553 () Bool)
(declare-fun x3070 () Int)
(declare-fun x2756 () Bool)
(declare-fun x458 () Int)
(declare-fun x897 () Int)
(declare-fun x1339 () Bool)
(declare-fun x199 () Bool)
(declare-fun x946 () Int)
(declare-fun x1395 () Int)
(declare-fun x1554 () Bool)
(declare-fun x2013 () Int)
(declare-fun x3696 () Bool)
(declare-fun x2780 () Bool)
(declare-fun x2311 () Bool)
(declare-fun x201 () Bool)
(declare-fun x3968 () Int)
(declare-fun x391 () Bool)
(declare-fun x2696 () Bool)
(declare-fun x2309 () Bool)
(declare-fun x796 () x3634)
(declare-fun x2796 () Bool)
(declare-fun x229 () Bool)
(declare-fun x3502 () Bool)
(declare-fun x1841 () Bool)
(declare-fun x3484 () Int)
(declare-fun x822 () x3634)
(declare-fun x124 () Bool)
(declare-fun x2509 () Bool)
(declare-fun x886 () Int)
(declare-fun x3459 (x3634) Int)
(declare-fun x3681 () Bool)
(declare-fun x3455 () Bool)
(declare-fun x1836 () x3634)
(declare-fun x2965 () Int)
(declare-fun x2812 () Int)
(declare-fun x2932 () Int)
(declare-fun x2325 () Bool)
(declare-fun x3147 () Bool)
(declare-fun x3579 () Int)
(declare-fun x1924 () Bool)
(declare-fun x192 () Bool)
(declare-fun x1945 () x3634)
(declare-fun x2585 () Bool)
(declare-fun x2245 () Bool)
(declare-fun x3501 () Bool)
(declare-fun x329 () Bool)
(declare-fun x3307 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x636 () Int)
(declare-fun x3754 () Bool)
(declare-fun x2680 () Bool)
(declare-fun x3496 () Int)
(declare-fun x1582 () Bool)
(declare-fun x3229 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x1284 () Int)
(declare-fun x3883 () Bool)
(declare-fun x1983 () Bool)
(declare-fun x2896 () x3634)
(declare-fun x157 () Bool)
(declare-fun x2491 () Bool)
(declare-fun x2313 () Bool)
(declare-fun x1704 () Int)
(declare-fun x283 () Bool)
(declare-fun x764 () Int)
(declare-fun x2708 () Bool)
(declare-fun x2151 () Bool)
(declare-fun x855 () Bool)
(declare-fun x2048 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x2588 () Bool)
(declare-fun x1404 (x3634) Int)
(declare-fun x1039 () Int)
(declare-fun x3964 () Int)
(declare-fun x2587 () Int)
(declare-fun x1257 () Bool)
(declare-fun x862 () Int)
(declare-fun x15 () Bool)
(declare-fun x1167 () x3634)
(declare-fun x730 () Bool)
(declare-fun x2563 () x3634)
(declare-fun x1298 () Bool)
(declare-fun x3431 () Bool)
(declare-fun x1277 (x3634) Int)
(declare-fun x1191 () Bool)
(declare-fun x1784 () Bool)
(declare-fun x786 () Bool)
(declare-fun x2040 () Bool)
(declare-fun x2954 () Int)
(declare-fun x3139 () Bool)
(declare-fun x2684 () Bool)
(declare-fun x2639 () Int)
(declare-fun x2541 () Bool)
(declare-fun x2679 () Bool)
(declare-fun x709 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x3271 () Bool)
(declare-fun x557 () Bool)
(declare-fun x3745 () Bool)
(declare-fun x2091 () Int)
(declare-fun x1864 () Bool)
(declare-fun x3126 () x3634)
(declare-fun x3 () Int)
(declare-fun x3107 () Bool)
(declare-fun x2250 () Int)
(declare-fun x1970 () Int)
(declare-fun x3537 () Int)
(declare-fun x3878 () Bool)
(declare-fun x2440 () Bool)
(declare-fun x300 () Bool)
(declare-fun x3752 () Int)
(declare-fun x3790 () Int)
(declare-fun x3628 () x3634)
(declare-fun x651 () Int)
(declare-fun x401 () Bool)
(declare-fun x813 () Bool)
(declare-fun x3981 () Int)
(declare-fun x1224 () Bool)
(declare-fun x3033 () Bool)
(declare-fun x3663 () Int)
(declare-fun x2237 () Bool)
(declare-fun x99 () Bool)
(declare-fun x511 () Bool)
(declare-fun x489 () Int)
(declare-fun x2138 () Bool)
(declare-fun x1626 () Bool)
(declare-fun x92 () Bool)
(declare-fun x3741 () Int)
(declare-fun x90 () Int)
(declare-fun x1033 () Int)
(declare-fun x1912 () x3634)
(declare-fun x1349 () Bool)
(declare-fun x3946 () Bool)
(declare-fun x378 () x3634)
(declare-fun x3237 () Bool)
(declare-fun x3074 () Bool)
(declare-fun x3585 () Bool)
(declare-fun x504 () Bool)
(declare-fun x777 () Int)
(declare-fun x328 () Bool)
(declare-fun x816 () x3634)
(declare-fun x2959 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x985 () Bool)
(declare-fun x2415 () Int)
(declare-fun x3104 () Int)
(declare-fun x2000 () Int)
(declare-fun x2748 () Int)
(declare-fun x2910 (x3634) Int)
(declare-fun x1894 () Int)
(declare-fun x3315 () x3634)
(declare-fun x3172 () Bool)
(declare-fun x631 () Bool)
(declare-fun x2789 () Int)
(declare-fun x2267 () Int)
(declare-fun x403 () Int)
(declare-fun x3341 () Bool)
(declare-fun x1881 () Int)
(declare-fun x1156 () Bool)
(declare-fun x935 () Bool)
(declare-fun x2926 () Bool)
(declare-fun x3236 () Int)
(declare-fun x3534 () Int)
(declare-fun x610 () Bool)
(declare-fun x2717 () Int)
(declare-fun x3301 () x3634)
(declare-fun x2815 () Bool)
(declare-fun x232 () Int)
(declare-fun x121 () Int)
(declare-fun x1566 () Bool)
(declare-fun x2369 () Int)
(declare-fun x1206 () Int)
(declare-fun x1512 () Bool)
(declare-fun x3317 (x3634) Int)
(declare-fun x872 () Bool)
(declare-fun x3086 () Bool)
(declare-fun x2594 () Bool)
(declare-fun x795 () Bool)
(declare-fun x1031 () x3634)
(declare-fun x1117 () Int)
(declare-fun x3272 () Int)
(declare-fun x2825 () Bool)
(declare-fun x1855 () x3634)
(declare-fun x1056 () Int)
(declare-fun x2651 () Int)
(declare-fun x3225 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x2955 () Int)
(declare-fun x1300 () Bool)
(declare-fun x2128 () Int)
(declare-fun x2208 () x3634)
(declare-fun x801 () Bool)
(declare-fun x189 () Bool)
(declare-fun x3729 () Int)
(declare-fun x1437 () Bool)
(declare-fun x2398 () Bool)
(declare-fun x3192 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x2044 () x3634)
(declare-fun x2041 () Int)
(declare-fun x1707 () Int)
(declare-fun x302 () Int)
(declare-fun x3905 () Int)
(declare-fun x215 () x3634)
(declare-fun x2052 () Int)
(declare-fun x1992 () Bool)
(declare-fun x763 () Bool)
(declare-fun x3473 () Int)
(declare-fun x163 () Bool)
(declare-fun x2966 () Bool)
(declare-fun x3389 () Bool)
(declare-fun x2270 () Bool)
(declare-fun x3819 () x3634)
(declare-fun x3384 () Int)
(declare-fun x1676 () Bool)
(declare-fun x2907 () Bool)
(declare-fun x4 () Bool)
(declare-fun x646 () Int)
(declare-fun x2911 () Int)
(declare-fun x282 () Int)
(declare-fun x2156 () Int)
(declare-fun x1576 () Int)
(declare-fun x3966 () Bool)
(declare-fun x1564 () Int)
(declare-fun x3240 () x3634)
(declare-fun x724 () Bool)
(declare-fun x269 () Int)
(declare-fun x2715 () Int)
(declare-fun x1124 () Bool)
(declare-fun x1361 () x3634)
(declare-fun x1726 () Int)
(declare-fun x3453 () Int)
(declare-fun x3551 () Int)
(declare-fun x3156 () Bool)
(declare-fun x2772 () Bool)
(declare-fun x647 () Int)
(declare-fun x2389 () Int)
(declare-fun x1029 () Bool)
(declare-fun x3870 () Bool)
(declare-fun x2450 () Int)
(declare-fun x2038 () Int)
(declare-fun x2441 () Int)
(declare-fun x1239 () Int)
(declare-fun x228 () Bool)
(declare-fun x1838 () x3634)
(declare-fun x3004 () Int)
(declare-fun x1874 () Int)
(declare-fun x1061 () Bool)
(declare-fun x3169 () Int)
(declare-fun x1446 () Int)
(declare-fun x2771 () Bool)
(declare-fun x569 () Int)
(declare-fun x3371 () Bool)
(declare-fun x3178 () Bool)
(declare-fun x560 () Bool)
(declare-fun x1037 () Int)
(declare-fun x2007 () Bool)
(declare-fun x988 () Bool)
(declare-fun x1448 () Int)
(declare-fun x2555 () Int)
(declare-fun x3671 () Int)
(declare-fun x3895 () Bool)
(declare-fun x634 () Int)
(declare-fun x1529 () Int)
(declare-fun x3978 () Int)
(declare-fun x155 () Int)
(declare-fun x1193 () Int)
(declare-fun x2994 () Int)
(declare-fun x1394 () Int)
(declare-fun x838 () Int)
(declare-fun x3031 () Int)
(declare-fun x1745 () Int)
(declare-fun x3383 () Int)
(declare-fun x3410 () x3634)
(declare-fun x219 () Int)
(declare-fun x3328 () Bool)
(declare-fun x335 () Bool)
(declare-fun x977 () x3634)
(declare-fun x554 () Bool)
(declare-fun x597 () x3634)
(declare-fun x2881 () Bool)
(declare-fun x1954 () Bool)
(declare-fun x493 () x3634)
(declare-fun x2339 () Bool)
(declare-fun x1673 () Bool)
(declare-fun x752 () Bool)
(declare-fun x2844 (x3634) Int)
(declare-fun x825 () Int)
(declare-fun x1114 () Bool)
(declare-fun x1812 () Bool)
(declare-fun x3606 () Bool)
(declare-fun x1014 () Int)
(declare-fun x3468 () Bool)
(declare-fun x1786 () Bool)
(declare-fun x352 () Int)
(declare-fun x3699 () Bool)
(declare-fun x566 () x3634)
(declare-fun x308 () Int)
(declare-fun x733 () Bool)
(declare-fun x1780 () Bool)
(declare-fun x3766 () Int)
(declare-fun x1200 () Bool)
(declare-fun x3319 () Int)
(declare-fun x2301 () Int)
(declare-fun x72 () Int)
(declare-fun x108 () Bool)
(declare-fun x2114 () Int)
(declare-fun x681 () Int)
(declare-fun x1956 () Int)
(declare-fun x439 () Int)
(declare-fun x2941 () Bool)
(declare-fun x993 () Bool)
(declare-fun x3063 () Int)
(declare-fun x2744 () Bool)
(declare-fun x1680 () Int)
(declare-fun x2131 () Int)
(declare-fun x3084 () Int)
(declare-fun x1359 () Int)
(declare-fun x2726 () Int)
(declare-fun x2024 () Bool)
(declare-fun x56 (x3634) Int)
(declare-fun x649 () Bool)
(declare-fun x1210 () Int)
(declare-fun x1422 () Bool)
(declare-fun x1911 () Bool)
(declare-fun x976 () x3634)
(declare-fun x1719 () Bool)
(declare-fun x179 () Bool)
(declare-fun x3771 () Bool)
(declare-fun x1942 () x3634)
(declare-fun x553 () Int)
(declare-fun x2934 () Bool)
(declare-fun x2811 () x3634)
(declare-fun x729 () Int)
(declare-fun x1613 () Bool)
(declare-fun x3561 () Int)
(declare-fun x578 () x3634)
(declare-fun x2629 () Int)
(declare-fun x1691 () Int)
(declare-fun x2030 () Int)
(declare-fun x3786 () Bool)
(declare-fun x2733 () Bool)
(declare-fun x2805 () Int)
(declare-fun x3886 () x3634)
(declare-fun x692 () Bool)
(declare-fun x2060 () Bool)
(declare-fun x2762 () Int)
(declare-fun x3428 () Bool)
(declare-fun x996 () x3634)
(declare-fun x3864 () Int)
(declare-fun x559 () Int)
(declare-fun x3817 () Int)
(declare-fun x2361 () Bool)
(declare-fun x2682 () Int)
(declare-fun x3726 () x3634)
(declare-fun x3481 () Bool)
(declare-fun x2519 () Int)
(declare-fun x619 () Bool)
(declare-fun x3879 () x3634)
(declare-fun x286 () Bool)
(declare-fun x676 () Bool)
(declare-fun x2661 () Bool)
(declare-fun x3332 () Int)
(declare-fun x14 (x3634) Int)
(declare-fun x408 () Bool)
(declare-fun x2511 () Bool)
(declare-fun x3038 () Int)
(declare-fun x66 () Bool)
(declare-fun x148 () x3634)
(declare-fun x3179 () Bool)
(declare-fun x133 () Int)
(declare-fun x2667 () Bool)
(declare-fun x2939 () Int)
(declare-fun x75 () Bool)
(declare-fun x35 () x3634)
(declare-fun x2487 () Int)
(declare-fun x441 () Bool)
(declare-fun x3601 () Int)
(declare-fun x2838 () Int)
(declare-fun x3944 () Int)
(declare-fun x1385 () Int)
(declare-fun x2686 () x3634)
(declare-fun x1071 () Bool)
(declare-fun x1272 () Bool)
(declare-fun x2818 () Int)
(declare-fun x556 () Bool)
(declare-fun x725 () Int)
(declare-fun x2752 () Bool)
(declare-fun x2212 () Int)
(declare-fun x2897 () Bool)
(declare-fun x3720 () Int)
(declare-fun x2449 () Bool)
(declare-fun x1752 () Int)
(declare-fun x1271 () Int)
(declare-fun x949 () Bool)
(declare-fun x585 () Int)
(declare-fun x1757 () Int)
(declare-fun x2950 () Bool)
(declare-fun x2163 () x3634)
(declare-fun x1152 () Bool)
(declare-fun x931 () Bool)
(declare-fun x3177 () Int)
(declare-fun x3675 () Bool)
(declare-fun x2883 () Int)
(declare-fun x2990 () Int)
(declare-fun x749 () Bool)
(declare-fun x28 () Int)
(declare-fun x1525 () Bool)
(declare-fun x3464 () Int)
(declare-fun x643 () Int)
(declare-fun x94 () Bool)
(declare-fun x3268 () Int)
(declare-fun x1360 () Bool)
(declare-fun x2572 () Bool)
(declare-fun x2037 (x3634) Int)
(declare-fun x3909 () Int)
(declare-fun x1328 () Int)
(declare-fun x2201 () Int)
(declare-fun x287 () Bool)
(declare-fun x3424 () Bool)
(declare-fun x1254 () Int)
(declare-fun x3764 () Int)
(declare-fun x1888 () Bool)
(declare-fun x1683 () x3634)
(declare-fun x3248 () Bool)
(declare-fun x11 () Bool)
(declare-fun x549 () Int)
(declare-fun x1796 () Bool)
(declare-fun x3103 () Int)
(declare-fun x326 () Int)
(declare-fun x3656 () Bool)
(declare-fun x2419 () Int)
(declare-fun x30 () Int)
(declare-fun x768 () x3634)
(declare-fun x682 () Bool)
(declare-fun x3770 () Int)
(declare-fun x3609 () Bool)
(declare-fun x2083 () Bool)
(declare-fun x446 () Int)
(declare-fun x654 () Int)
(declare-fun x158 () Bool)
(declare-fun x2468 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x2422 (x3634) Int)
(declare-fun x3821 () Bool)
(declare-fun x819 () Int)
(declare-fun x2631 () Int)
(declare-fun x3311 () Int)
(declare-fun x230 () Int)
(declare-fun x3402 () Int)
(declare-fun x696 () Bool)
(declare-fun x2423 () Bool)
(declare-fun x799 () Bool)
(declare-fun x3778 () Bool)
(declare-fun x3619 () Bool)
(declare-fun x237 () x3634)
(declare-fun x3385 () Int)
(declare-fun x211 () x3634)
(declare-fun x1074 () Bool)
(declare-fun x3215 () Int)
(declare-fun x1151 () Bool)
(declare-fun x2292 () Int)
(declare-fun x620 () Bool)
(declare-fun x2145 () Bool)
(declare-fun x428 () Int)
(declare-fun x1118 () Int)
(declare-fun x1619 () Bool)
(declare-fun x360 () Bool)
(declare-fun x3611 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x1798 () Int)
(declare-fun x3071 () Bool)
(declare-fun x3366 (Int) Int)
(declare-fun x1222 () Bool)
(declare-fun x928 () Int)
(declare-fun x1705 () Int)
(declare-fun x2828 () Int)
(declare-fun x1642 () Int)
(declare-fun x3378 () Bool)
(declare-fun x3259 () x3634)
(declare-fun x1260 () Bool)
(declare-fun x51 () x3634)
(declare-fun x3926 () Int)
(declare-fun x1988 () Int)
(declare-fun x1931 () x3634)
(declare-fun x2108 () Bool)
(declare-fun x3472 () Bool)
(declare-fun x2395 () Int)
(declare-fun x3684 () x3634)
(declare-fun x2765 () Bool)
(declare-fun x3363 (Int) Int)
(declare-fun x1238 () Int)
(declare-fun x3887 () Bool)
(declare-fun x779 () Int)
(declare-fun x501 () Int)
(declare-fun x2316 () Bool)
(declare-fun x1561 () Int)
(declare-fun x2074 () Bool)
(declare-fun x2176 () Bool)
(declare-fun x2265 () Int)
(declare-fun x449 () Bool)
(declare-fun x614 () x3634)
(declare-fun x1315 () Int)
(declare-fun x2643 () x3634)
(declare-fun x2951 () Bool)
(declare-fun x2247 () Int)
(declare-fun x3855 () Bool)
(declare-fun x3281 () Int)
(declare-fun x2571 () Bool)
(declare-fun x3530 () Bool)
(declare-fun x1481 () x3634)
(declare-fun x238 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x3176 () Int)
(declare-fun x1390 () Int)
(declare-fun x444 () Bool)
(declare-fun x2730 () Int)
(declare-fun x469 () Bool)
(declare-fun x194 () Int)
(declare-fun x2053 () Bool)
(declare-fun x3019 () Bool)
(declare-fun x3460 () x3634)
(declare-fun x1981 () Int)
(declare-fun x980 () Bool)
(declare-fun x496 () Bool)
(declare-fun x579 () Bool)
(declare-fun x223 () Bool)
(declare-fun x3114 () Int)
(declare-fun x1347 () Int)
(declare-fun x2946 () Bool)
(declare-fun x2345 () Bool)
(declare-fun x370 () Int)
(declare-fun x3853 () Bool)
(declare-fun x2976 () Bool)
(declare-fun x3359 () Bool)
(declare-fun x2761 () Bool)
(declare-fun x1476 () x3634)
(declare-fun x2022 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x2092 () Bool)
(declare-fun x3717 () Bool)
(declare-fun x1547 () x3634)
(declare-fun x437 () Int)
(declare-fun x978 () Bool)
(declare-fun x1665 () Int)
(declare-fun x2412 () Bool)
(declare-fun x1700 () Bool)
(declare-fun x3810 () Bool)
(declare-fun x3419 () Bool)
(declare-fun x3673 () x3634)
(declare-fun x2388 () Bool)
(declare-fun x2891 () Int)
(declare-fun x3568 () Bool)
(declare-fun x3865 () Int)
(declare-fun x1541 () Bool)
(declare-fun x2971 (Int Int) Int)
(declare-fun x1743 () Int)
(declare-fun x2579 () Bool)
(declare-fun x43 () Int)
(declare-fun x452 () Int)
(declare-fun x783 () Int)
(declare-fun x3219 () Int)
(declare-fun x3891 () Bool)
(declare-fun x1647 () Bool)
(declare-fun x781 () Int)
(declare-fun x2248 () Int)
(declare-fun x405 () Bool)
(declare-fun x3036 () Int)
(declare-fun x2120 () Bool)
(declare-fun x2653 () Int)
(declare-fun x2616 () x3634)
(declare-fun x3851 () Int)
(declare-fun x3348 () Bool)
(declare-fun x1781 () Int)
(declare-fun x1103 () Int)
(declare-fun x2065 () Int)
(declare-fun x3285 () Bool)
(declare-fun x37 (x3634) Int)
(declare-fun x252 () Bool)
(declare-fun x3712 () Int)
(declare-fun x3210 () x3634)
(declare-fun x1869 () x3634)
(declare-fun x567 () Int)
(declare-fun x1454 (Int) Int)
(declare-fun x1850 () Bool)
(declare-fun x3069 () Int)
(declare-fun x2370 () Bool)
(declare-fun x2880 () Bool)
(declare-fun x424 () Int)
(declare-fun x3592 () Bool)
(declare-fun x3549 () Int)
(declare-fun x3174 () Int)
(declare-fun x3182 () Bool)
(declare-fun x3295 () Int)
(declare-fun x1077 () Int)
(declare-fun x247 () Bool)
(declare-fun x3245 () x3634)
(declare-fun x3150 () Int)
(declare-fun x3506 () Int)
(declare-fun x2936 () Bool)
(declare-fun x1173 () Int)
(declare-fun x1376 () Int)
(declare-fun x1863 () Bool)
(declare-fun x3598 () Int)
(declare-fun x997 () Bool)
(declare-fun x3734 () Int)
(declare-fun x2204 () Int)
(declare-fun x454 () x3634)
(declare-fun x1887 () Bool)
(declare-fun x2655 () x3634)
(declare-fun x3686 () Bool)
(declare-fun x2167 () Int)
(declare-fun x2687 () Int)
(declare-fun x284 () Bool)
(declare-fun x98 () Int)
(declare-fun x756 () Bool)
(declare-fun x1650 () Bool)
(declare-fun x3665 () Bool)
(declare-fun x3961 () Bool)
(declare-fun x2722 () Int)
(declare-fun x3454 () Bool)
(declare-fun x2845 () Bool)
(declare-fun x2660 () Bool)
(declare-fun x1044 () Int)
(declare-fun x2903 () Bool)
(declare-fun x2960 () Bool)
(declare-fun x1590 () Bool)
(declare-fun x612 (Int) Int)
(declare-fun x2763 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x3252 () Bool)
(declare-fun x3144 () Int)
(declare-fun x355 () Bool)
(declare-fun x2808 () Int)
(declare-fun x842 () Int)
(declare-fun x721 () Bool)
(declare-fun x3545 () Int)
(declare-fun x3698 () Bool)
(declare-fun x958 () Int)
(declare-fun x1424 () x3634)
(declare-fun x3450 () x3634)
(declare-fun x2096 () Bool)
(declare-fun x3170 () Int)
(declare-fun x2628 () Int)
(declare-fun x3971 () Bool)
(declare-fun x3162 () Int)
(declare-fun x383 () Bool)
(declare-fun x3538 () Int)
(declare-fun x1839 () Int)
(declare-fun x2277 () Bool)
(declare-fun x934 () x3634)
(declare-fun x120 () Bool)
(declare-fun x1964 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x2552 () Bool)
(declare-fun x3823 () Bool)
(declare-fun x2202 () Int)
(declare-fun x3243 () Int)
(declare-fun x2872 () Bool)
(declare-fun x1635 (x3634) Int)
(declare-fun x974 () Int)
(declare-fun x1797 (x3634) Int)
(declare-fun x1497 () Int)
(declare-fun x716 () Int)
(declare-fun x1591 () Int)
(declare-fun x1457 () x3634)
(declare-fun x3725 () Int)
(declare-fun x426 () Bool)
(declare-fun x2241 () Bool)
(declare-fun x3380 () Bool)
(declare-fun x2918 () Bool)
(declare-fun x3145 () Int)
(declare-fun x2240 () Int)
(declare-fun x3623 () Int)
(declare-fun x584 () x3634)
(declare-fun x2823 () Int)
(declare-fun x1533 (x3634) Int)
(declare-fun x2704 () Bool)
(declare-fun x21 () x3634)
(declare-fun x3193 () Bool)
(declare-fun x3277 () Int)
(declare-fun x2368 () Bool)
(declare-fun x1189 () Int)
(declare-fun x3235 () x3634)
(declare-fun x3941 () Bool)
(declare-fun x389 () Bool)
(declare-fun x2624 () Bool)
(declare-fun x2751 () Int)
(declare-fun x2554 () Int)
(declare-fun x2170 () Int)
(declare-fun x834 () Int)
(declare-fun x1829 () Bool)
(declare-fun x1479 () Int)
(declare-fun x867 () x3634)
(declare-fun x2841 () Bool)
(declare-fun x2346 () Bool)
(declare-fun x2027 () x3634)
(declare-fun x3042 () Int)
(declare-fun x1324 () Int)
(declare-fun x2607 () Bool)
(declare-fun x2006 () Int)
(declare-fun x3664 () Bool)
(declare-fun x2429 () Int)
(declare-fun x3234 () Int)
(declare-fun x3713 () Bool)
(declare-fun x2723 () Bool)
(declare-fun x2010 () Int)
(declare-fun x2239 () Bool)
(declare-fun x3618 () Bool)
(declare-fun x2520 () Bool)
(declare-fun x2664 () Int)
(declare-fun x1832 () Int)
(declare-fun x782 () Int)
(declare-fun x2750 () Bool)
(declare-fun x674 () Int)
(declare-fun x623 () Bool)
(declare-fun x3532 () Bool)
(declare-fun x3391 () Bool)
(declare-fun x3027 () Bool)
(declare-fun x1560 () Int)
(declare-fun x1985 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x908 () Bool)
(declare-fun x297 () Bool)
(declare-fun x1767 () Int)
(declare-fun x169 () Int)
(declare-fun x3349 (x3634) Int)
(declare-fun x1412 () Bool)
(declare-fun x580 () Bool)
(declare-fun x2537 () Int)
(declare-fun x1367 () Int)
(declare-fun x2379 () Int)
(declare-fun x42 () Int)
(declare-fun x3890 () x3634)
(declare-fun x475 () Int)
(declare-fun x869 () x3634)
(declare-fun x3719 () Int)
(declare-fun x25 () Bool)
(declare-fun x2258 () x3634)
(declare-fun x3758 () Bool)
(declare-fun x2496 () Bool)
(declare-fun x3417 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x366 () x3634)
(declare-fun x3550 () Int)
(declare-fun x831 () Int)
(declare-fun x3437 () x3634)
(declare-fun x3100 () Bool)
(declare-fun x877 () Int)
(declare-fun x587 () x3634)
(declare-fun x2119 () Int)
(declare-fun x1520 () Int)
(declare-fun x1220 () Bool)
(declare-fun x3137 () x3634)
(declare-fun x793 () Int)
(declare-fun x1567 () Int)
(declare-fun x1913 () Int)
(declare-fun x1078 () Int)
(declare-fun x1889 () Int)
(declare-fun x1344 () Bool)
(declare-fun x715 () Bool)
(declare-fun x545 () Int)
(declare-fun x3636 () Bool)
(declare-fun x1640 () Bool)
(declare-fun x9 () Int)
(declare-fun x2488 () Bool)
(declare-fun x363 () Bool)
(declare-fun x47 () Int)
(declare-fun x3662 () Bool)
(declare-fun x3792 () Int)
(declare-fun x2948 () Int)
(declare-fun x3134 () Int)
(declare-fun x3653 () Bool)
(declare-fun x2938 () Bool)
(declare-fun x1733 () Bool)
(declare-fun x3275 () Bool)
(declare-fun x1950 () Bool)
(declare-fun x2432 () x3634)
(declare-fun x3005 () Bool)
(declare-fun x1203 () Int)
(declare-fun x2005 () Int)
(declare-fun x615 () Bool)
(declare-fun x1081 () Bool)
(declare-fun x262 () Bool)
(declare-fun x2570 () Bool)
(declare-fun x1537 () Bool)
(declare-fun x1898 () Int)
(declare-fun x2766 () Bool)
(declare-fun x3732 () Bool)
(declare-fun x3140 () Bool)
(declare-fun x464 () Bool)
(declare-fun x95 () Bool)
(declare-fun x902 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x1918 () Bool)
(declare-fun x159 () Int)
(declare-fun x1148 () Int)
(declare-fun x3546 () Int)
(declare-fun x3573 () Bool)
(declare-fun x3822 () Int)
(declare-fun x741 () Bool)
(declare-fun x1948 () Int)
(declare-fun x128 () Bool)
(declare-fun x261 () Int)
(declare-fun x3135 () Int)
(declare-fun x3661 (Int Int) Int)
(declare-fun x292 () Int)
(declare-fun x2209 () Int)
(declare-fun x2373 () Int)
(declare-fun x2392 () Int)
(declare-fun x3197 () Bool)
(declare-fun x913 () Int)
(declare-fun x2681 (x3634) Int)
(declare-fun x2079 () Bool)
(declare-fun x705 () Bool)
(declare-fun x1242 () Int)
(declare-fun x3123 () Int)
(declare-fun x950 () Bool)
(declare-fun x945 () Int)
(declare-fun x150 () x3634)
(declare-fun x3055 () Bool)
(declare-fun x3356 () Int)
(declare-fun x2908 () Int)
(declare-fun x3701 () Bool)
(declare-fun x1573 () Int)
(declare-fun x2090 () x3634)
(declare-fun x1205 () Int)
(declare-fun x1890 () Bool)
(declare-fun x732 () Bool)
(declare-fun x2348 () Bool)
(declare-fun x1910 () x3634)
(declare-fun x2931 () Int)
(declare-fun x1569 () Bool)
(declare-fun x1434 () Int)
(declare-fun x3334 () Bool)
(declare-fun x2795 () Int)
(declare-fun x2768 () Bool)
(declare-fun x723 () Bool)
(declare-fun x2905 (x3634) Int)
(declare-fun x3850 () Bool)
(declare-fun x57 () Int)
(declare-fun x3659 () Int)
(declare-fun x2219 () x3634)
(declare-fun x3953 () x3634)
(declare-fun x2149 (x3634) Int)
(declare-fun x3093 () Bool)
(declare-fun x2739 () x3634)
(declare-fun x3776 () Bool)
(declare-fun x3463 () Int)
(declare-fun x2559 (Int) Int)
(declare-fun x502 () Int)
(declare-fun x2029 () Bool)
(declare-fun x2438 () Int)
(declare-fun x2136 () Bool)
(declare-fun x2606 () Bool)
(declare-fun x2363 () Bool)
(declare-fun x2900 () x3634)
(declare-fun x3929 () Bool)
(declare-fun x3678 (Int) Int)
(declare-fun x3461 () Int)
(declare-fun x3106 () Int)
(declare-fun x2605 () Int)
(declare-fun x971 () Int)
(declare-fun x3155 () Bool)
(declare-fun x2919 () Int)
(declare-fun x1607 () Bool)
(declare-fun x2413 () Bool)
(declare-fun x3480 (Int) Int)
(declare-fun x605 () x3634)
(declare-fun x67 () Int)
(declare-fun x1921 () Bool)
(declare-fun x3263 () Int)
(declare-fun x135 () Bool)
(declare-fun x1455 () Bool)
(declare-fun x2431 () Bool)
(declare-fun x683 () Int)
(declare-fun x850 () Bool)
(declare-fun x1695 () Int)
(declare-fun x3325 () x3634)
(declare-fun x2234 () Int)
(declare-fun x3982 () Int)
(declare-fun x1568 () Int)
(declare-fun x948 () Bool)
(declare-fun x3364 () Bool)
(declare-fun x827 () Int)
(declare-fun x457 () Bool)
(declare-fun x2564 () x3634)
(declare-fun x1808 () Bool)
(declare-fun x3299 () Bool)
(declare-fun x3747 () Int)
(declare-fun x3185 () Int)
(declare-fun x358 () Bool)
(declare-fun x3737 () Bool)
(declare-fun x2869 () Int)
(declare-fun x2663 () Int)
(declare-fun x1734 () Int)
(declare-fun x3095 () Int)
(declare-fun x918 () Bool)
(declare-fun x395 () Int)
(declare-fun x3094 () Int)
(declare-fun x2364 () Int)
(declare-fun x1914 () Int)
(declare-fun x3710 () Int)
(declare-fun x852 () Bool)
(declare-fun x2617 () Bool)
(declare-fun x1513 () Int)
(declare-fun x3979 () x3634)
(declare-fun x1249 () x3634)
(declare-fun x1423 () Bool)
(declare-fun x3102 () Bool)
(declare-fun x2181 (x3634) Int)
(declare-fun x920 () Bool)
(declare-fun x678 () Bool)
(declare-fun x2166 () Int)
(declare-fun x3361 () Bool)
(declare-fun x941 () Bool)
(declare-fun x160 () Int)
(declare-fun x1009 (x3634) Int)
(declare-fun x3119 () Bool)
(declare-fun x170 () Int)
(declare-fun x555 () Bool)
(declare-fun x2165 () Bool)
(declare-fun x3032 () Bool)
(declare-fun x1097 (x3634) Int)
(declare-fun x738 () Int)
(declare-fun x1562 () Int)
(declare-fun x2793 () Int)
(declare-fun x1963 () x3634)
(declare-fun x2662 () Int)
(declare-fun x3986 () Int)
(declare-fun x1966 () Int)
(declare-fun x686 () Bool)
(declare-fun x1965 () Bool)
(declare-fun x1329 () Int)
(declare-fun x2042 () Int)
(declare-fun x2356 () Bool)
(declare-fun x190 () Int)
(declare-fun x1285 () Int)
(declare-fun x3052 () Int)
(declare-fun x3565 () Bool)
(declare-fun x2614 () Bool)
(declare-fun x2086 () Bool)
(declare-fun x2721 () Int)
(declare-fun x415 () Int)
(declare-fun x102 () Int)
(declare-fun x3078 () Bool)
(declare-fun x1709 () Bool)
(declare-fun x905 () Bool)
(declare-fun x80 () Bool)
(declare-fun x3425 () Bool)
(declare-fun x1082 () Int)
(declare-fun x2678 () Int)
(declare-fun x3507 () Int)
(declare-fun x2797 () Int)
(declare-fun x3076 () Bool)
(declare-fun x1765 () x3634)
(declare-fun x1371 () Bool)
(declare-fun x3209 () Int)
(declare-fun x708 () Bool)
(declare-fun x234 (Int) Int)
(declare-fun x3923 () Int)
(declare-fun x2323 () Int)
(declare-fun x3803 () Int)
(declare-fun x3854 () x3634)
(declare-fun x1355 () Int)
(declare-fun x3487 () x3634)
(declare-fun x3640 () Int)
(declare-fun x2914 () Bool)
(declare-fun x2562 () x3634)
(declare-fun x3906 () Bool)
(declare-fun x2183 () Bool)
(declare-fun x751 () Bool)
(declare-fun x114 () Int)
(declare-fun x1662 () x3634)
(declare-fun x626 () Bool)
(declare-fun x1861 () Int)
(declare-fun x2185 () Int)
(declare-fun x420 () Bool)
(declare-fun x3227 () x3634)
(declare-fun x2886 () Int)
(declare-fun x3376 () Int)
(declare-fun x938 () x3634)
(declare-fun x2782 () Int)
(declare-fun x1042 () x3634)
(declare-fun x915 () Int)
(declare-fun x2068 () Bool)
(declare-fun x513 () Int)
(declare-fun x3802 () Int)
(declare-fun x2319 () Bool)
(declare-fun x2396 () x3634)
(declare-fun x497 () Int)
(declare-fun x255 () Bool)
(declare-fun x2702 () Int)
(declare-fun x182 () Int)
(declare-fun x1335 () Bool)
(declare-fun x3160 () Bool)
(declare-fun x1769 () Bool)
(declare-fun x717 () Int)
(declare-fun x2728 () Bool)
(declare-fun x571 () Bool)
(declare-fun x2494 () Int)
(declare-fun x399 () Int)
(declare-fun x1093 () Int)
(declare-fun x2855 () Bool)
(declare-fun x3856 () Bool)
(declare-fun x2878 () Int)
(declare-fun x254 (x3634) Int)
(declare-fun x960 () Int)
(declare-fun x213 () Int)
(declare-fun x2236 () Bool)
(declare-fun x742 (x3634) Int)
(declare-fun x2266 () Bool)
(declare-fun x1968 () Bool)
(declare-fun x336 () Int)
(declare-fun x3399 () Bool)
(declare-fun x2635 () Bool)
(declare-fun x3910 () Int)
(declare-fun x966 () x3634)
(declare-fun x771 () Int)
(declare-fun x466 () Bool)
(declare-fun x895 () Int)
(declare-fun x818 () Bool)
(declare-fun x805 () Bool)
(declare-fun x2576 () Bool)
(declare-fun x770 () Int)
(declare-fun x1471 () Int)
(declare-fun x896 (Int) Int)
(declare-fun x414 () Int)
(declare-fun x1302 () Int)
(declare-fun x1000 () Bool)
(declare-fun x3702 () Bool)
(declare-fun x1199 () Int)
(declare-fun x3426 () Bool)
(declare-fun x1574 () Int)
(declare-fun x690 () Bool)
(declare-fun x2604 () Bool)
(declare-fun x2645 () Bool)
(declare-fun x1621 () Int)
(declare-fun x2610 () x3634)
(declare-fun x2840 () Bool)
(declare-fun x3558 () Int)
(declare-fun x3060 () Int)
(declare-fun x898 () Int)
(declare-fun x174 () Int)
(declare-fun x3935 () Int)
(declare-fun x2172 () Bool)
(declare-fun x249 () x3634)
(declare-fun x3715 () Bool)
(declare-fun x3576 () Bool)
(declare-fun x442 () Int)
(declare-fun x2943 () Int)
(declare-fun x87 () Int)
(declare-fun x1731 () Int)
(declare-fun x1415 () Bool)
(declare-fun x2020 () Bool)
(declare-fun x562 () Int)
(declare-fun x433 () Bool)
(declare-fun x2445 () x3634)
(declare-fun x633 () x3634)
(declare-fun x375 () Int)
(declare-fun x3708 () Bool)
(declare-fun x1299 () Bool)
(declare-fun x3065 () x3634)
(declare-fun x1708 () x3634)
(declare-fun x1552 () Bool)
(declare-fun x2453 () Bool)
(declare-fun x2196 () Int)
(declare-fun x1971 () Int)
(declare-fun x1543 () Bool)
(declare-fun x71 () Int)
(declare-fun x1873 () Bool)
(declare-fun x901 () Bool)
(declare-fun x1461 () Bool)
(declare-fun x3704 () Bool)
(declare-fun x964 (x3634) Int)
(declare-fun x3892 () Int)
(declare-fun x2581 () Bool)
(declare-fun x2393 () Int)
(declare-fun x2076 () Int)
(declare-fun x2827 () Int)
(declare-fun x2668 () Int)
(declare-fun x1369 () Bool)
(declare-fun x152 () Int)
(declare-fun x510 () Bool)
(declare-fun x1401 () Int)
(declare-fun x2809 () Bool)
(declare-fun x1764 () Bool)
(declare-fun x3709 () Bool)
(declare-fun x2385 () x3634)
(declare-fun x397 () Int)
(declare-fun x29 () Int)
(declare-fun x3474 () Int)
(declare-fun x2055 () Int)
(declare-fun x3105 () Int)
(declare-fun x3974 () Bool)
(declare-fun x134 () Int)
(declare-fun x2015 () x3634)
(declare-fun x803 () Bool)
(declare-fun x386 () Int)
(declare-fun x1941 () Int)
(declare-fun x1682 () x3634)
(declare-fun x3357 () x3634)
(declare-fun x2112 () Int)
(declare-fun x1263 () Bool)
(declare-fun x3975 () Bool)
(declare-fun x2254 () Bool)
(declare-fun x3956 () Bool)
(declare-fun x3051 () Bool)
(declare-fun x1438 () Int)
(declare-fun x2746 () Int)
(declare-fun x1049 () Int)
(declare-fun x2066 () Bool)
(declare-fun x2786 () Int)
(declare-fun x508 () Bool)
(declare-fun x1087 () Int)
(declare-fun x3260 () Bool)
(declare-fun x3533 () Int)
(declare-fun x472 () Bool)
(declare-fun x2777 () Bool)
(declare-fun x3818 () Bool)
(declare-fun x1754 () Bool)
(declare-fun x485 () Int)
(declare-fun x1937 () Int)
(declare-fun x492 () Bool)
(declare-fun x2992 () Bool)
(declare-fun x196 () Bool)
(declare-fun x3152 () Int)
(declare-fun x3200 () Bool)
(declare-fun x16 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x1243 () Int)
(declare-fun x2227 () Int)
(declare-fun x3625 () Bool)
(declare-fun x2416 () Bool)
(declare-fun x3279 () Int)
(declare-fun x2735 () Bool)
(declare-fun x2497 () Bool)
(declare-fun x2278 () Bool)
(declare-fun x1833 () Int)
(declare-fun x3057 () Int)
(declare-fun x1627 () Bool)
(declare-fun x381 () Int)
(declare-fun x79 () Int)
(declare-fun x1487 () Int)
(declare-fun x3111 () Int)
(declare-fun x2315 () Bool)
(declare-fun x2228 () Int)
(declare-fun x3239 () Int)
(declare-fun x3175 () Int)
(declare-fun x522 (x3634) Int)
(declare-fun x323 () Bool)
(declare-fun x3099 () Bool)
(declare-fun x1891 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x1820 () Int)
(declare-fun x3867 () x3634)
(declare-fun x1664 () Bool)
(declare-fun x2061 () Int)
(declare-fun x1531 () Int)
(declare-fun x1413 () Int)
(declare-fun x2803 () Bool)
(declare-fun x2627 () Int)
(declare-fun x3918 () Int)
(declare-fun x3676 () Int)
(declare-fun x1592 () x3634)
(declare-fun x1675 () Bool)
(declare-fun x2859 () Bool)
(declare-fun x2533 () Bool)
(declare-fun x2295 () Bool)
(declare-fun x3196 () Bool)
(declare-fun x299 () Int)
(declare-fun x1509 () Int)
(declare-fun x854 () Int)
(declare-fun x2211 () x3634)
(declare-fun x1484 () Bool)
(declare-fun x3722 () Bool)
(declare-fun x2577 () Int)
(declare-fun x3442 () Bool)
(declare-fun x3396 () Int)
(declare-fun x746 () Bool)
(declare-fun x871 () Int)
(declare-fun x3309 () Bool)
(declare-fun x2742 () Int)
(declare-fun x628 () Bool)
(declare-fun x3323 () Bool)
(declare-fun x2877 () x3634)
(declare-fun x759 () Int)
(declare-fun x684 () Int)
(declare-fun x2287 () Int)
(declare-fun x1535 () Int)
(declare-fun x1032 () Int)
(declare-fun x1288 () Int)
(declare-fun x3806 () Bool)
(declare-fun x3058 () Int)
(declare-fun x301 () x3634)
(declare-fun x574 () Int)
(declare-fun x3016 () Bool)
(declare-fun x2157 () Bool)
(declare-fun x3164 () Bool)
(declare-fun x840 () Bool)
(declare-fun x3608 () Int)
(declare-fun x2743 () Bool)
(declare-fun x2004 () Bool)
(declare-fun x407 () Int)
(declare-fun x22 () Bool)
(declare-fun x3844 () Bool)
(declare-fun x2191 () Int)
(declare-fun x2126 () Bool)
(declare-fun x3386 () Bool)
(declare-fun x434 () Int)
(declare-fun x2031 () Int)
(declare-fun x1365 () Bool)
(declare-fun x183 () Int)
(declare-fun x3925 () Int)
(declare-fun x3581 () Int)
(declare-fun x3022 () Int)
(declare-fun x2312 () Bool)
(declare-fun x1951 () Bool)
(declare-fun x2621 () Int)
(declare-fun x3207 () x3634)
(declare-fun x1809 () Bool)
(declare-fun x353 () Int)
(declare-fun x484 () Int)
(declare-fun x3267 () Int)
(declare-fun x1973 () Int)
(declare-fun x1351 () Bool)
(declare-fun x2626 () Int)
(declare-fun x2539 () Bool)
(declare-fun x3373 () Int)
(declare-fun x837 () Int)
(declare-fun x2343 () Bool)
(declare-fun x1027 () Bool)
(declare-fun x1521 () Bool)
(declare-fun x2382 () Int)
(declare-fun x3434 () Int)
(declare-fun x3624 () Int)
(declare-fun x1443 () x3634)
(declare-fun x581 () Int)
(declare-fun x3411 () Int)
(declare-fun x1610 (x3634) Int)
(declare-fun x811 () Int)
(declare-fun x3787 () Int)
(declare-fun x1655 () Bool)
(declare-fun x3857 () Int)
(declare-fun x3406 () Bool)
(declare-fun x3801 () Bool)
(declare-fun x3509 () x3634)
(declare-fun x33 () Int)
(declare-fun x3470 () Int)
(declare-fun x1969 () Bool)
(declare-fun x251 () Bool)
(declare-fun x2231 () Int)
(declare-fun x685 () Bool)
(declare-fun x2352 () Int)
(declare-fun x3451 () Bool)
(declare-fun x3882 () Int)
(declare-fun x1761 () Int)
(declare-fun x3358 () Bool)
(declare-fun x3769 () Bool)
(declare-fun x2949 () x3634)
(declare-fun x1 () Bool)
(declare-fun x2999 () Int)
(declare-fun x3308 () Bool)
(declare-fun x952 () Int)
(declare-fun x3599 () Bool)
(declare-fun x3621 () x3634)
(declare-fun x3398 () Bool)
(declare-fun x1563 () Bool)
(declare-fun x3515 () Bool)
(declare-fun x2595 () Int)
(declare-fun x3149 () Bool)
(declare-fun x638 () Bool)
(declare-fun x2349 () Bool)
(declare-fun x1517 () Int)
(declare-fun x3539 () Bool)
(declare-fun x1802 () Int)
(declare-fun x3414 () Bool)
(declare-fun x429 () Int)
(declare-fun x1689 () x3634)
(declare-fun x1399 () Int)
(declare-fun x1927 () Bool)
(declare-fun x3021 () Bool)
(declare-fun x3211 () Bool)
(declare-fun x1085 () x3634)
(declare-fun x3273 () Bool)
(declare-fun x2967 () Int)
(declare-fun x2521 () x3634)
(declare-fun x459 () Int)
(declare-fun x1670 () Int)
(declare-fun x1403 () Bool)
(declare-fun x3497 () Int)
(declare-fun x38 () Bool)
(declare-fun x1587 () Bool)
(declare-fun x3180 () Int)
(declare-fun x3368 () Int)
(declare-fun x2129 () Int)
(declare-fun x2945 () Int)
(declare-fun x644 () Bool)
(declare-fun x1867 () Bool)
(declare-fun x2224 () Int)
(declare-fun x836 () Bool)
(declare-fun x1958 () Int)
(declare-fun x3247 () Bool)
(declare-fun x1892 () x3634)
(declare-fun x1043 () Bool)
(declare-fun x2439 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x3422 () x3634)
(declare-fun x2017 () Int)
(declare-fun x1955 () Bool)
(declare-fun x2930 () Int)
(declare-fun x563 () Int)
(declare-fun x2817 () Int)
(declare-fun x2725 () Bool)
(declare-fun x916 () Int)
(declare-fun x3631 () Bool)
(declare-fun x3795 () Bool)
(declare-fun x1620 () Bool)
(declare-fun x2085 () Bool)
(declare-fun x3443 () Bool)
(declare-fun x1291 (Int) Int)
(declare-fun x1216 () Int)
(declare-fun x3146 () x3634)
(declare-fun x3329 () Int)
(declare-fun x1123 (x3634) Int)
(declare-fun x3478 () Int)
(declare-fun x2972 () Int)
(declare-fun x2887 () Bool)
(declare-fun x516 () Int)
(declare-fun x1058 () Int)
(declare-fun x1699 () x3634)
(declare-fun x3190 () Int)
(declare-fun x1125 (x3634) Int)
(declare-fun x3127 () x3634)
(declare-fun x817 () Int)
(declare-fun x3335 () Int)
(declare-fun x3087 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x2597 () x3634)
(declare-fun x1183 () Int)
(declare-fun x2659 () Int)
(declare-fun x368 () Int)
(declare-fun x1013 () Bool)
(declare-fun x590 () Int)
(declare-fun x331 () Bool)
(declare-fun x1105 () Bool)
(declare-fun x2870 () Int)
(declare-fun x280 () Bool)
(declare-fun x2985 () Int)
(declare-fun x2602 () Bool)
(declare-fun x49 () Bool)
(declare-fun x1030 () x3634)
(declare-fun x3938 () Bool)
(declare-fun x505 () x3634)
(declare-fun x218 () x3634)
(declare-fun x3166 () x3634)
(declare-fun x1275 () Bool)
(declare-fun x2324 () Bool)
(declare-fun x2008 () Bool)
(declare-fun x162 () Int)
(declare-fun x3669 () Int)
(declare-fun x3959 () Bool)
(declare-fun x3805 () Bool)
(declare-fun x1827 () Int)
(declare-fun x2033 () x3634)
(declare-fun x3009 () Bool)
(declare-fun x3518 () Bool)
(declare-fun x3350 () Bool)
(declare-fun x2998 () Bool)
(declare-fun x2255 () Bool)
(declare-fun x637 () Int)
(declare-fun x1668 () Bool)
(declare-fun x2866 () x3634)
(declare-fun x534 () Bool)
(declare-fun x3083 () Bool)
(declare-fun x325 () Int)
(declare-fun x617 () Int)
(declare-fun x3278 () Int)
(declare-fun x884 () Int)
(declare-fun x506 () x3634)
(declare-fun x2355 () Bool)
(declare-fun x1146 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x2147 () Int)
(declare-fun x2263 () Int)
(declare-fun x3872 () Int)
(declare-fun x2989 () Int)
(declare-fun x1777 () Bool)
(declare-fun x122 () Bool)
(declare-fun x922 () Bool)
(declare-fun x1768 () Int)
(declare-fun x2933 () x3634)
(declare-fun x745 () Bool)
(declare-fun x1478 () Int)
(declare-fun x698 () Bool)
(declare-fun x3548 () Int)
(declare-fun x3928 () Int)
(declare-fun x2620 () Int)
(declare-fun x1357 () Int)
(declare-fun x369 () Int)
(declare-fun x2411 () x3634)
(declare-fun x2599 () Bool)
(declare-fun x36 () Int)
(declare-fun x699 () Int)
(declare-fun x3542 () Bool)
(declare-fun x807 () Bool)
(declare-fun x800 () Bool)
(declare-fun x1759 () Int)
(declare-fun x3934 () Int)
(declare-fun x2775 () Int)
(declare-fun x3439 () Int)
(declare-fun x1870 () Int)
(declare-fun x432 () Bool)
(declare-fun x2791 () Bool)
(declare-fun x3637 () Int)
(declare-fun x1943 () Bool)
(declare-fun x1494 () x3634)
(declare-fun x113 (x3634) Int)
(declare-fun x1571 () Bool)
(declare-fun x2814 () Bool)
(declare-fun x766 () Int)
(declare-fun x607 () Bool)
(declare-fun x2858 () Bool)
(declare-fun x1387 () Int)
(declare-fun x876 () Int)
(declare-fun x1384 () Int)
(declare-fun x3848 () x3634)
(declare-fun x2644 () Bool)
(declare-fun x693 () Int)
(declare-fun x939 () Int)
(declare-fun x1646 () Bool)
(declare-fun x3436 () Bool)
(declare-fun x3520 () Int)
(declare-fun x241 () Bool)
(declare-fun x512 () Bool)
(declare-fun x3118 () Bool)
(declare-fun x2063 () Bool)
(declare-fun x3578 () Bool)
(declare-fun x3427 () x3634)
(declare-fun x1710 () Bool)
(declare-fun x1631 () Bool)
(declare-fun x2261 () Int)
(declare-fun x3903 () Int)
(declare-fun x719 () Int)
(declare-fun x3605 () Int)
(declare-fun x1923 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x2137 (Int) Int)
(declare-fun x1488 () Bool)
(declare-fun x839 () Bool)
(declare-fun x1949 () Int)
(declare-fun x1278 () x3634)
(declare-fun x3393 () Bool)
(declare-fun x175 () Int)
(declare-fun x2328 () Bool)
(declare-fun x622 () Bool)
(declare-fun x1826 () Int)
(declare-fun x2737 () Bool)
(declare-fun x525 (Int Int) Int)
(declare-fun x1119 () Bool)
(declare-fun x136 () Bool)
(declare-fun x1480 () Int)
(declare-fun x19 () Bool)
(declare-fun x177 () Bool)
(declare-fun x2384 () Int)
(declare-fun x3064 () Int)
(declare-fun x1334 () Bool)
(declare-fun x3723 () Bool)
(declare-fun x2206 () Bool)
(declare-fun x650 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x3913 () Bool)
(declare-fun x1046 () Bool)
(declare-fun x77 () Int)
(declare-fun x1157 () Bool)
(declare-fun x3842 () x3634)
(declare-fun x3724 () Int)
(declare-fun x3339 () x3634)
(declare-fun x270 () Bool)
(declare-fun x1792 () Bool)
(declare-fun x2890 () Int)
(declare-fun x1490 () x3634)
(declare-fun x2963 () Bool)
(declare-fun x929 () Bool)
(declare-fun x1052 () Int)
(declare-fun x1295 () Bool)
(declare-fun x3860 () Int)
(declare-fun x1698 () Int)
(declare-fun x1977 () Int)
(declare-fun x2034 () Int)
(declare-fun x2469 () Bool)
(declare-fun x1228 () Int)
(declare-fun x1069 () Bool)
(declare-fun x149 () Int)
(declare-fun x1528 () x3634)
(declare-fun x528 () Int)
(declare-fun x3768 () Int)
(declare-fun x3798 () Int)
(declare-fun x205 () x3634)
(declare-fun x1253 () Bool)
(declare-fun x62 () Int)
(declare-fun x1135 () x3634)
(declare-fun x2454 () Bool)
(declare-fun x332 () Bool)
(declare-fun x2457 () Bool)
(declare-fun x1247 () Bool)
(declare-fun x2549 () Bool)
(declare-fun x2833 () Int)
(declare-fun x3933 () Bool)
(declare-fun x3079 () Int)
(declare-fun x1235 () Int)
(declare-fun x641 () Bool)
(declare-fun x3486 () Int)
(declare-fun x3228 () Bool)
(declare-fun x1491 () Int)
(declare-fun x3511 () x3634)
(declare-fun x1860 () Bool)
(declare-fun x2860 () Bool)
(declare-fun x2830 (Int) Int)
(declare-fun x3011 () Int)
(declare-fun x1766 () Int)
(declare-fun x1701 () Bool)
(declare-fun x3226 () x3634)
(declare-fun x3874 () x3634)
(declare-fun x1819 () Bool)
(declare-fun x3133 () Int)
(declare-fun x2583 (x3634) Int)
(declare-fun x1111 () Int)
(declare-fun x1794 () x3634)
(declare-fun x3387 () Int)
(declare-fun x1090 () x3634)
(declare-fun x1677 () Int)
(declare-fun x551 () Bool)
(declare-fun x791 (Int) Int)
(declare-fun x1055 () Int)
(declare-fun x627 () Bool)
(declare-fun x3924 () Bool)
(declare-fun x3230 () Bool)
(declare-fun x463 () Int)
(declare-fun x3580 () Bool)
(declare-fun x2794 () Bool)
(declare-fun x1649 () Int)
(declare-fun x2456 () Int)
(declare-fun x3590 () Bool)
(declare-fun x451 () Bool)
(declare-fun x214 () Bool)
(declare-fun x923 () Int)
(declare-fun x669 () Bool)
(declare-fun x2801 () x3634)
(declare-fun x3791 () Int)
(declare-fun x373 () Bool)
(declare-fun x3846 () x3634)
(declare-fun x1207 () Bool)
(declare-fun x702 () Bool)
(declare-fun x313 () Int)
(declare-fun x2082 () Bool)
(declare-fun x2338 () Bool)
(declare-fun x3781 () Bool)
(declare-fun x2641 () Bool)
(declare-fun x3871 () Int)
(declare-fun x2447 () Bool)
(declare-fun x589 () Int)
(declare-fun x65 () Bool)
(declare-fun x260 () Bool)
(declare-fun x3500 () Bool)
(declare-fun x2625 () Int)
(declare-fun x235 (x3634) Int)
(declare-fun x1828 () Int)
(declare-fun x2988 () Int)
(declare-fun x2839 () Bool)
(declare-fun x327 () Bool)
(declare-fun x3777 () Bool)
(declare-fun x3157 () Int)
(declare-fun x2474 () Bool)
(declare-fun x3985 () Bool)
(declare-fun x640 () Bool)
(declare-fun x2674 () Bool)
(declare-fun x3930 () Int)
(declare-fun x2774 () Bool)
(declare-fun x3131 () Bool)
(declare-fun x1758 () Bool)
(declare-fun x39 (Int) Int)
(declare-fun x2428 () Int)
(declare-fun x1653 () Bool)
(declare-fun x3129 () Bool)
(declare-fun x3649 () Bool)
(declare-fun x2043 () Bool)
(declare-fun x259 () Bool)
(declare-fun x2178 () Int)
(declare-fun x2837 () Bool)
(declare-fun x2642 () Int)
(declare-fun x470 () Int)
(declare-fun x268 () Bool)
(declare-fun x212 () Bool)
(declare-fun x3514 () x3634)
(declare-fun x750 () Bool)
(declare-fun x2851 () x3634)
(declare-fun x956 () Bool)
(declare-fun x1499 () Bool)
(declare-fun x2565 () Bool)
(declare-fun x932 () Int)
(declare-fun x2671 () Int)
(declare-fun x1345 () Bool)
(declare-fun x982 () Int)
(declare-fun x195 () x3634)
(declare-fun x1153 () Bool)
(declare-fun x694 () Bool)
(declare-fun x1101 () Int)
(declare-fun x1502 () Bool)
(declare-fun x959 () Bool)
(declare-fun x330 () Bool)
(declare-fun x351 () Int)
(declare-fun x1107 () Int)
(declare-fun x3858 () Int)
(declare-fun x184 () Bool)
(declare-fun x1737 () Bool)
(declare-fun x3960 () Bool)
(declare-fun x3607 () Int)
(declare-fun x1004 () Int)
(declare-fun x1900 () Bool)
(declare-fun x967 () Bool)
(declare-fun x3522 () Int)
(declare-fun x339 () Int)
(declare-fun x96 () Bool)
(declare-fun x963 () Bool)
(declare-fun x3587 () Bool)
(declare-fun x835 () Int)
(declare-fun x3262 () Int)
(declare-fun x1492 () Bool)
(declare-fun x2787 () Int)
(declare-fun x1718 () Bool)
(declare-fun x2002 () Bool)
(declare-fun x2578 () Bool)
(declare-fun x3875 () Int)
(declare-fun x2524 () Bool)
(declare-fun x3937 () Int)
(declare-fun x3813 () Bool)
(declare-fun x81 () Bool)
(declare-fun x2317 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x2622 () Bool)
(declare-fun x3825 () x3634)
(declare-fun x602 () Bool)
(declare-fun x2556 () Bool)
(declare-fun x3418 () Bool)
(declare-fun x1657 (x3634) Int)
(declare-fun x240 () Int)
(declare-fun x1366 () Int)
(declare-fun x2016 () Int)
(declare-fun x675 () Bool)
(declare-fun x611 () Int)
(declare-fun x8 () Bool)
(declare-fun x3841 () Int)
(declare-fun x151 () Bool)
(declare-fun x3001 () Bool)
(declare-fun x3412 () x3634)
(declare-fun x706 () x3634)
(declare-fun x2868 () Int)
(declare-fun x31 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x203 () Bool)
(declare-fun x561 () Bool)
(declare-fun x1256 () Bool)
(declare-fun x3320 () Bool)
(declare-fun x2482 () Bool)
(declare-fun x2917 () Int)
(declare-fun x1585 () x3634)
(declare-fun x2505 () Int)
(declare-fun x3092 () Bool)
(declare-fun x3613 () Int)
(declare-fun x680 () Int)
(declare-fun x1211 () Int)
(declare-fun x2831 () Int)
(declare-fun x3040 () Bool)
(declare-fun x2727 () Bool)
(declare-fun x2433 () Bool)
(declare-fun x1811 () Int)
(declare-fun x1449 () Bool)
(declare-fun x2586 () Int)
(declare-fun x3630 (x3634) Int)
(declare-fun x3643 () x3634)
(declare-fun x1880 () Int)
(declare-fun x1116 () Bool)
(declare-fun x3931 () Bool)
(declare-fun x316 (x3634) Int)
(declare-fun x1079 () Int)
(declare-fun x673 () Bool)
(declare-fun x3430 () Bool)
(declare-fun x3907 () x3634)
(declare-fun x889 () Bool)
(declare-fun x592 () Int)
(declare-fun x1174 () Bool)
(declare-fun x411 () Bool)
(declare-fun x3420 (Int) Int)
(declare-fun x1180 () Bool)
(declare-fun x2111 () x3634)
(declare-fun x1632 () Bool)
(declare-fun x1669 () x3634)
(declare-fun x3884 () Int)
(declare-fun x1641 (x3634) Int)
(declare-fun x1208 () Int)
(declare-fun x3796 () Int)
(declare-fun x3685 () Bool)
(declare-fun x1304 () Int)
(declare-fun x3595 () Bool)
(declare-fun x1231 () Int)
(declare-fun x1928 () Bool)
(declare-fun x3880 () Int)
(declare-fun x3444 () Bool)
(declare-fun x2164 () Int)
(declare-fun x1354 () Int)
(declare-fun x1678 () Int)
(declare-fun x1136 () Bool)
(declare-fun x2749 () x3634)
(declare-fun x3559 () Int)
(declare-fun x3738 () Int)
(declare-fun x695 () Int)
(declare-fun x2153 () Int)
(declare-fun x1416 () Bool)
(declare-fun x404 () Bool)
(declare-fun x3949 () Bool)
(declare-fun x1978 () Int)
(declare-fun x1219 () Bool)
(declare-fun x2810 () Int)
(declare-fun x2226 () Int)
(declare-fun x2225 (x3634) Int)
(declare-fun x1276 () Int)
(declare-fun x550 () Bool)
(declare-fun x2551 () Int)
(declare-fun x208 () Bool)
(declare-fun x2217 () Int)
(declare-fun x3707 () Int)
(declare-fun x1094 () x3634)
(declare-fun x244 () Bool)
(declare-fun x364 () Int)
(declare-fun x2724 () Int)
(declare-fun x1126 () Int)
(declare-fun x1406 () Bool)
(declare-fun x392 () Bool)
(declare-fun x599 () Int)
(declare-fun x1215 () Int)
(declare-fun x656 () x3634)
(declare-fun x2461 () Bool)
(declare-fun x3421 () Int)
(declare-fun x3116 () x3634)
(declare-fun x2997 () Bool)
(declare-fun x3642 (Int) Int)
(declare-fun x1017 () Bool)
(declare-fun x2693 () Int)
(declare-fun x3186 () Int)
(declare-fun x1805 () Int)
(declare-fun x527 () Bool)
(declare-fun x3765 () Int)
(declare-fun x2342 () x3634)
(declare-fun x2669 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x2244 () Bool)
(declare-fun x1066 () Bool)
(declare-fun x1325 () Int)
(declare-fun x371 () Int)
(declare-fun x2444 () Bool)
(declare-fun x1755 () Int)
(declare-fun x1343 () Int)
(declare-fun x2473 () Int)
(declare-fun x393 () Bool)
(declare-fun x130 () Int)
(declare-fun x1746 () Int)
(declare-fun x3346 () Bool)
(declare-fun x2417 () Int)
(declare-fun x1511 () Int)
(declare-fun x2205 () Bool)
(declare-fun x3462 () Int)
(declare-fun x23 () Int)
(declare-fun x3141 () Bool)
(declare-fun x1580 () Int)
(declare-fun x1316 () Int)
(declare-fun x1775 () Int)
(declare-fun x2829 () Int)
(declare-fun x2673 () Bool)
(declare-fun x1639 () Int)
(declare-fun x665 () x3634)
(declare-fun x2713 () Int)
(declare-fun x1464 () Bool)
(declare-fun x2134 (Int) Int)
(declare-fun x2875 () x3634)
(declare-fun x885 () x3634)
(declare-fun x2360 () Int)
(declare-fun x3780 () Int)
(declare-fun x2701 () Bool)
(declare-fun x2308 () Int)
(declare-fun x245 () Bool)
(declare-fun x3416 () Bool)
(declare-fun x734 () Int)
(declare-fun x89 () Bool)
(declare-fun x3962 () Bool)
(declare-fun x1407 () Int)
(declare-fun x613 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x2961 () Bool)
(declare-fun x701 () Bool)
(declare-fun x2303 () Int)
(declare-fun x1122 () Bool)
(declare-fun x3943 () Int)
(declare-fun x344 () Int)
(declare-fun x1586 () Bool)
(declare-fun x1181 () Int)
(declare-fun x111 () Bool)
(declare-fun x97 () Bool)
(declare-fun x2282 () Bool)
(declare-fun x2759 () x3634)
(declare-fun x616 () Int)
(declare-fun x337 () Int)
(declare-fun x1096 () Int)
(declare-fun x1957 () Bool)
(declare-fun x210 () Int)
(declare-fun x1368 () Bool)
(declare-fun x186 () x3634)
(declare-fun x1553 () Bool)
(declare-fun x1625 () x3634)
(declare-fun x1098 () Int)
(declare-fun x3000 () Int)
(declare-fun x2023 () Bool)
(declare-fun x2471 () Int)
(declare-fun x3604 () x3634)
(declare-fun x2895 () Int)
(declare-fun x2542 () x3634)
(declare-fun x1572 () Int)
(declare-fun x3885 () Bool)
(declare-fun x3815 () Int)
(declare-fun x3627 () Bool)
(declare-fun x844 () Bool)
(declare-fun x390 () Int)
(declare-fun x2832 () Bool)
(declare-fun x526 () Bool)
(declare-fun x2608 () Bool)
(declare-fun x722 () Bool)
(declare-fun x740 () Int)
(declare-fun x1803 () Int)
(declare-fun x509 () Int)
(declare-fun x1663 () Bool)
(declare-fun x2459 () Bool)
(declare-fun x3799 () Bool)
(declare-fun x359 () Bool)
(declare-fun x848 () Bool)
(declare-fun x598 () Bool)
(declare-fun x2906 () Bool)
(declare-fun x2884 () Int)
(declare-fun x2600 () Bool)
(declare-fun x995 () Int)
(declare-fun x41 () Bool)
(declare-fun x1028 () Bool)
(declare-fun x384 () Int)
(declare-fun x204 () Bool)
(declare-fun x1997 () Int)
(declare-fun x1830 () Int)
(declare-fun x1230 () x3634)
(declare-fun x2889 () Int)
(declare-fun x3567 () Bool)
(declare-fun x50 () Int)
(declare-fun x1694 () Bool)
(declare-fun x3840 () x3634)
(declare-fun x1456 () Int)
(declare-fun x3900 () Bool)
(declare-fun x2736 () Bool)
(declare-fun x2190 () Int)
(declare-fun x720 () Int)
(declare-fun x2738 () Int)
(declare-fun x973 () Int)
(declare-fun x3254 () Int)
(declare-fun x2882 () Int)
(declare-fun x3849 () Int)
(declare-fun x3836 () Bool)
(declare-fun x263 () Int)
(declare-fun x572 () Int)
(declare-fun x1310 () Bool)
(declare-fun x2527 () x3634)
(declare-fun x3409 () Int)
(declare-fun x881 () x3634)
(declare-fun x3403 () Int)
(declare-fun x1414 () Int)
(declare-fun x109 () Bool)
(declare-fun x2171 () Int)
(declare-fun x2758 () Int)
(declare-fun x3345 () Bool)
(declare-fun x2560 () Bool)
(declare-fun x3571 (Int) Int)
(declare-fun x291 () Bool)
(declare-fun x1720 () x3634)
(declare-fun x1252 () Int)
(declare-fun x3408 () Bool)
(declare-fun x2087 () Int)
(declare-fun x629 () Int)
(declare-fun x856 () Bool)
(declare-fun x2779 () x3634)
(declare-fun x593 () x3634)
(declare-fun x2127 () x3634)
(declare-fun x180 () Int)
(declare-fun x2526 (Int) Int)
(declare-fun x1201 () Int)
(declare-fun x2665 () x3634)
(declare-fun x3089 () Bool)
(declare-fun x1286 () Bool)
(declare-fun x1879 () Int)
(declare-fun x2144 () Bool)
(declare-fun x639 () Int)
(declare-fun x1296 () x3634)
(declare-fun x2051 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x1265 () Int)
(declare-fun x2783 () Bool)
(declare-fun x2515 () Int)
(declare-fun x2290 () Bool)
(declare-fun x1744 () Int)
(declare-fun x1500 () Bool)
(declare-fun x1578 () Int)
(declare-fun x820 () Bool)
(declare-fun x2995 () Int)
(declare-fun x2518 () x3634)
(declare-fun x1534 () x3634)
(declare-fun x3503 () x3634)
(declare-fun x1929 () Bool)
(declare-fun x713 () Bool)
(declare-fun x3482 () Int)
(declare-fun x115 () Bool)
(declare-fun x2238 () Bool)
(declare-fun x3286 () Int)
(declare-fun x1538 () Int)
(declare-fun x2853 () Int)
(declare-fun x2307 () Bool)
(declare-fun x2964 () Int)
(declare-fun x3075 () Int)
(declare-fun x3322 () Int)
(declare-fun x1877 () Bool)
(declare-fun x82 () Int)
(declare-fun x398 () Bool)
(declare-fun x1112 () x3634)
(declare-fun x3125 (x3634) Int)
(declare-fun x1735 () Int)
(declare-fun x453 () Int)
(declare-fun x2792 () Int)
(declare-fun x866 () Bool)
(declare-fun x473 () Bool)
(declare-fun x3314 () Int)
(declare-fun x3452 () x3634)
(declare-fun x2272 () Bool)
(declare-fun x2909 () Int)
(declare-fun x3201 () Int)
(declare-fun x2283 (x3634) Int)
(declare-fun x1685 () x3634)
(declare-fun x2302 () Bool)
(declare-fun x2968 () Int)
(declare-fun x3761 () x3634)
(declare-fun x3733 () Int)
(declare-fun x1237 () Int)
(declare-fun x324 () Bool)
(declare-fun x780 () Bool)
(declare-fun x1269 () Int)
(declare-fun x1429 () Int)
(declare-fun x3041 () x3634)
(declare-fun x1618 (Int) x3634)
(declare-fun x2215 () Bool)
(declare-fun x1209 () Bool)
(declare-fun x1778 () Bool)
(declare-fun x2568 () Int)
(declare-fun x1711 () Bool)
(declare-fun x577 () Int)
(declare-fun x1091 () Int)
(declare-fun x2804 () Int)
(declare-fun x1287 () Int)
(declare-fun x2755 () Int)
(declare-fun x1144 () Int)
(declare-fun x2210 () Int)
(declare-fun x1182 () Int)
(declare-fun x315 () Bool)
(declare-fun x2935 () Int)
(declare-fun x187 () Bool)
(declare-fun x1849 () Bool)
(declare-fun x930 () Bool)
(declare-fun x1139 () Int)
(declare-fun x2757 () Int)
(declare-fun x2467 () Bool)
(declare-fun x322 (Int) Int)
(declare-fun x2970 () Bool)
(declare-fun x3053 () Int)
(declare-fun x3557 () Bool)
(declare-fun x3449 () Bool)
(declare-fun x2340 () Int)
(declare-fun x2378 () Int)
(declare-fun x1370 () Bool)
(declare-fun x3483 () Bool)
(declare-fun x2310 () Bool)
(declare-fun x3859 () x3634)
(declare-fun x880 () Bool)
(declare-fun x1816 () Bool)
(declare-fun x2193 () Int)
(declare-fun x2141 () x3634)
(declare-fun x3555 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x1617 () Int)
(declare-fun x1411 () Bool)
(declare-fun x3466 () Int)
(declare-fun x233 () Bool)
(declare-fun x953 () Bool)
(declare-fun x904 () Int)
(declare-fun x1290 () x3634)
(declare-fun x1405 () x3634)
(declare-fun x3020 () Int)
(declare-fun x2658 () Int)
(declare-fun x1245 () x3634)
(declare-fun x1236 () Bool)
(declare-fun x1686 () Int)
(declare-fun x2867 () x3634)
(declare-fun x3183 () Int)
(declare-fun x2485 () Int)
(declare-fun x3591 () Bool)
(declare-fun x3002 () Bool)
(declare-fun x3508 () Int)
(declare-fun x1435 () Int)
(declare-fun x1748 () Bool)
(declare-fun x989 () Bool)
(declare-fun x3743 () Int)
(declare-fun x3288 () Int)
(declare-fun x193 () Int)
(declare-fun x1427 () Bool)
(declare-fun x7 () Int)
(declare-fun x3896 () Bool)
(declare-fun x3746 () Int)
(declare-fun x1433 () Int)
(declare-fun x3283 () Int)
(declare-fun x2358 () Int)
(declare-fun x965 () Int)
(declare-fun x2944 () Bool)
(declare-fun x3574 () Int)
(declare-fun x2394 () Bool)
(declare-fun x1459 () Bool)
(declare-fun x3541 () Bool)
(declare-fun x2246 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x2849 () Bool)
(declare-fun x2414 () x3634)
(declare-fun x754 () Int)
(declare-fun x2690 () Bool)
(declare-fun x1019 () Bool)
(declare-fun x1194 () Int)
(declare-fun x2760 () x3634)
(declare-fun x851 () Int)
(declare-fun x3834 () x3634)
(declare-fun x306 () Int)
(declare-fun x185 () Bool)
(declare-fun x3206 () Int)
(declare-fun x468 () Int)
(declare-fun x3730 () Bool)
(declare-fun x1601 () Int)
(declare-fun x1846 () x3634)
(declare-fun x2199 () Int)
(declare-fun x1133 () Bool)
(declare-fun x2405 () Int)
(declare-fun x2636 () Bool)
(declare-fun x1722 () x3634)
(declare-fun x1115 () Int)
(declare-fun x1986 () Bool)
(declare-fun x3782 () Int)
(declare-fun x1010 () Int)
(declare-fun x1130 () x3634)
(declare-fun x3081 () Bool)
(declare-fun x3838 () Bool)
(declare-fun x2525 () Bool)
(declare-fun x1558 () Int)
(declare-fun x1015 () x3634)
(declare-fun x3945 () Int)
(declare-fun x521 () Int)
(declare-fun x3716 () Int)
(declare-fun x2426 () Bool)
(declare-fun x3697 () Int)
(declare-fun x2113 () Bool)
(declare-fun x1630 () Bool)
(declare-fun x3767 () Bool)
(declare-fun x2077 () Int)
(declare-fun x3336 () x3634)
(declare-fun x2538 () Int)
(declare-fun x1742 () Int)
(declare-fun x221 () Bool)
(declare-fun x3544 () Bool)
(declare-fun x1104 () Bool)
(declare-fun x1341 () Bool)
(declare-fun x153 () Int)
(declare-fun x1637 () Bool)
(define-fun x356 ((x3634 x3634) (x3045 Int)) x3634 (ite ((_ is x998) x3634) (x998 (x3198 x3634) (+ (x1821 x3634) x3045)) (ite ((_ is x2947) x3634) (x2947 (x1268 x3634) (x1483 x3634) (+ x3045 (x2169 x3634))) (x2353 (+ (x1108 x3634) x3045)))))
(define-fun x3783 ((x1418 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1418) (>= x1418 0)) x1418 (- x1418 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x3381 ((x1418 Int)) Int (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1418) (> 0 x1418)) (+ x1418 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1418))
(define-fun x2409 ((x1418 Int)) Int (ite (and (>= x1418 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1418)) x1418 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1418) (< x1418 231584178474632390847141970017375815706539969331281128078915168015826259279872)) (- x1418 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1418) (> 0 x1418)) (+ x1418 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2732 x1418 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x2421 ((x2499 Int)) Bool (and (< x2499 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x2499)))
(define-fun x2251 ((x2499 Int)) Bool (and (= (x525 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2499) x2499) (= x2499 (x525 x2499 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1599 ((x2499 Int)) Bool (and (= 0 (x525 0 x2499)) (= (x525 x2499 0) 0)))
(define-fun x1557 ((x2499 Int)) Bool (= x2499 (x525 x2499 x2499)))
(define-fun x1526 ((x2499 Int)) Bool (and (x1557 x2499) (x2251 x2499) (x1599 x2499)))
(define-fun x2220 ((x2499 Int) (x3505 Int)) Bool (= (x525 x3505 x2499) (x525 x2499 x3505)))
(define-fun x1353 ((x2499 Int) (x3505 Int)) Bool (and (=> (>= x3505 0) (>= x3505 (x525 x2499 x3505))) (=> (<= 0 x2499) (<= (x525 x2499 x3505) x2499)) (<= 0 (x525 x2499 x3505))))
(define-fun x3017 ((x2499 Int) (x3505 Int)) Bool (and (x1353 x2499 x3505) (x2220 x2499 x3505)))
(define-fun x3221 ((x2499 Int)) Bool (= (x2732 x2499 26959946667150639794667015087019630673637144422540572481103610249216) (x525 x2499 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x3244 ((x2499 Int)) Bool (and (x3017 x2499 26959946667150639794667015087019630673637144422540572481103610249215) (x3221 x2499)))
(define-fun x747 ((x2499 Int) (x3505 Int)) Bool (and (< (x2732 x2499 x3505) x3505) (<= 0 (x2732 x2499 x3505))))
(define-fun x1688 ((x2499 Int) (x3505 Int)) Bool (=> (and (< 0 x3505) (>= x2499 0)) (= (= x2499 (x2732 x2499 x3505)) (< x2499 x3505))))
(define-fun x1527 ((x2499 Int) (x3505 Int)) Bool (=> (and (and (< x2499 (+ x3505 x3505)) (<= x3505 x2499)) (> x3505 0)) (= (- x2499 x3505) (x2732 x2499 x3505))))
(define-fun x3400 ((x2499 Int)) Bool (= (x2732 0 x2499) 0))
(define-fun x68 ((x2499 Int)) Bool (= (x2732 x2499 1) 0))
(define-fun x1227 ((x2499 Int)) Bool (= (x2732 x2499 x2499) 0))
(define-fun x1192 ((x2499 Int)) Bool (and (x1227 x2499) (x3400 x2499) (x68 x2499)))
(define-fun x689 ((x2499 Int)) Bool (= (x2732 x2499 1461501637330902918203684832716283019655932542976) (x525 x2499 1461501637330902918203684832716283019655932542975)))
(define-fun x3313 ((x2499 Int)) Bool (and (x3017 x2499 1461501637330902918203684832716283019655932542975) (x689 x2499)))
(define-fun x804 ((x2499 Int) (x3505 Int)) Bool (=> (and (< 0 x3505) (< 0 x2499)) (= (= (x3413 (x2409 (x1801 x2499 x3505)) x2499) x3505) (< (x1801 x2499 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x2912 ((x2499 Int) (x3505 Int)) Bool (=> (and (not (= x3505 0)) (not (= x2499 0))) (and (= (x3413 (x1801 x2499 x3505) x2499) x3505) (= (x3413 (x1801 x2499 x3505) x3505) x2499))))
(define-fun x3035 ((x2499 Int) (x3505 Int)) Bool (=> (and (> x2499 0) (> x3505 0)) (= (> x3505 (x3413 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2499)) (> (x1801 x2499 x3505) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x2615 ((x2499 Int) (x3505 Int)) Bool (and (= (x2409 (x1801 x2499 x3505)) (x2409 (x1801 x2499 (- x3505 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x2409 (x1801 (- x2499 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x3505 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2409 (x1801 x2499 x3505))) (= (x2409 (x1801 (- x2499 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3505)) (x2409 (x1801 x2499 x3505)))))
(define-fun x1712 ((x2499 Int) (x3505 Int)) Bool (and (=> (and (and (< 0 x3505) (<= x3505 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (<= x2499 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x2499 0))) (= (<= x2499 (x3413 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3505)) (<= (x1801 x2499 x3505) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (> x2499 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2499 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (< 0 x3505) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3505))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1801 (- x2499 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3505)) (>= (x3413 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3505) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2499)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3505) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3505)) (and (> x2499 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2499 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (>= (x3413 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3505)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2499)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1801 (- x2499 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x3505 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3505) (> x3505 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< 0 x2499) (<= x2499 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3505) (x3413 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2499)) (>= (x1801 x2499 (- x3505 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968))))))
(define-fun x1616 ((x2499 Int)) Bool (and (= (x1801 0 x2499) 0) (= 0 (x1801 x2499 0))))
(define-fun x955 ((x2499 Int)) Bool (and (= (x1801 1 x2499) x2499) (= x2499 (x1801 x2499 1))))
(define-fun x2406 ((x2499 Int)) Bool (and (x955 x2499) (x1616 x2499)))
(define-fun x878 ((x2499 Int) (x3505 Int)) Bool (=> (and (< 0 x3505) (< 0 x2499)) (and (>= (x3413 x2499 x3505) 0) (>= x2499 (x3413 x2499 x3505)))))
(define-fun x3187 ((x2499 Int) (x3505 Int)) Bool (=> (and (and (>= x2499 0) (< x2499 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (<= 1 x3505) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3505))) (and (>= (x3413 x2499 x3505) 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3413 x2499 x3505)))))
(define-fun x3266 ((x2499 Int) (x3505 Int)) Bool (=> (and (< x3505 x2499) (< 1 x3505)) (> x2499 (x3413 x2499 x3505))))
(define-fun x2566 ((x2499 Int) (x3505 Int)) Bool (=> (and (> x2499 0) (< 0 x3505)) (= (< x2499 x3505) (= (x3413 x2499 x3505) 0))))
(define-fun x1738 ((x2499 Int) (x3505 Int)) Bool (=> (and (> x3505 0) (> x2499 0)) (and (<= (x1801 (x3413 x2499 x3505) x3505) x2499) (< (- x2499 x3505) (x1801 (x3413 x2499 x3505) x3505)))))
(define-fun x1177 ((x2499 Int) (x3505 Int)) Bool (and (x3187 x2499 x3505) (x3266 x2499 x3505) (x878 x2499 x3505) (x2566 x2499 x3505) (x1738 x2499 x3505)))
(define-fun x1470 ((x2499 Int)) Bool (= (x3413 0 x2499) 0))
(define-fun x202 ((x2499 Int)) Bool (= (x3413 x2499 1) x2499))
(define-fun x2689 ((x2499 Int)) Bool (=> (not (= x2499 0)) (= 1 (x3413 x2499 x2499))))
(define-fun x2098 ((x2499 Int)) Bool (and (x2689 x2499) (x202 x2499) (x1470 x2499)))
(define-fun x3586 ((x2499 Int)) Bool (= (x2409 x2499) (+ (x2732 x2499 32) (x525 x2499 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x2609 ((x2499 Int)) Bool (and (x3017 x2499 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x3586 x2499)))
(define-fun x2218 ((x2499 Int) (x3505 Int)) Bool (= (x1801 x2499 x3505) (x1801 x3505 x2499)))
(define-fun x2675 ((x2499 Int) (x3505 Int)) Bool (and (=> (and (< 0 x3505) (> 0 x2499)) (> 0 (x1801 x2499 x3505))) (=> (and (< x3505 0) (> x2499 0)) (< (x1801 x2499 x3505) 0)) (=> (and (< 0 x2499) (< 0 x3505)) (< 0 (x1801 x2499 x3505))) (=> (and (> 0 x3505) (> 0 x2499)) (> (x1801 x2499 x3505) 0))))
(define-fun x216 ((x2499 Int) (x3505 Int)) Bool (and (x2912 x2499 x3505) (x2218 x2499 x3505) (x2675 x2499 x3505) (x804 x2499 x3505) (x3035 x2499 x3505) (x2615 x2499 x3505) (x1712 x2499 x3505)))
(define-fun x3447 ((x2499 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3661 x2499 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3661 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2499))))
(define-fun x1305 ((x2499 Int)) Bool (and (= x2499 (x3661 x2499 0)) (= (x3661 0 x2499) x2499)))
(define-fun x1034 ((x2499 Int)) Bool (= x2499 (x3661 x2499 x2499)))
(define-fun x2592 ((x2499 Int)) Bool (and (x3447 x2499) (x1034 x2499) (x1305 x2499)))
(define-fun x891 ((x2499 Int) (x3505 Int)) Bool (= (x3661 x2499 x3505) (x3661 x3505 x2499)))
(define-fun x1715 ((x2499 Int) (x3505 Int)) Bool (and (=> (<= 0 x2499) (<= x2499 (x3661 x2499 x3505))) (=> (>= x3505 0) (<= x3505 (x3661 x2499 x3505))) (>= (+ x2499 x3505) (x3661 x2499 x3505))))
(define-fun x1389 ((x2499 Int) (x3505 Int)) Bool (and (x891 x2499 x3505) (x1715 x2499 x3505)))
(define-fun x3759 ((x2243 Int)) Int (ite (= 128 x2243) (ite x2768 1 0) (x1980 x2243)))
(define-fun x2517 ((x2243 Int)) Int (ite (= x2243 160) (ite x853 1 0) (x3759 x2243)))
(define-fun x812 ((x2243 Int)) Int (ite (= 192 x2243) (ite x724 1 0) (x2517 x2243)))
(define-fun x2012 ((x2243 Int)) Int (ite (= x2243 224) (ite x161 1 0) (x812 x2243)))
(define-fun x3029 ((x2243 Int)) Int (ite (= x2243 256) (ite x3252 1 0) (x2012 x2243)))
(define-fun x3292 ((x2243 Int)) Int (ite (= 288 x2243) (ite x499 1 0) (x3029 x2243)))
(define-fun x975 ((x2243 Int)) Int (ite (= 320 x2243) (ite x283 1 0) (x3292 x2243)))
(define-fun x2862 ((x2243 Int)) Int (ite (= 352 x2243) (ite x673 1 0) (x975 x2243)))
(define-fun x1149 ((x2243 Int)) Int (ite (= 420 x2243) x2746 (x2862 x2243)))
(define-fun x3873 ((x2243 Int)) Int (ite (= 384 x2243) 36 (x1149 x2243)))
(define-fun x1178 ((x2243 Int)) Int (ite (= x2243 416) x2940 (x3873 x2243)))
(define-fun x3695 ((x2243 x3634)) Int (ite (= x2243 x3763) x892 (x1097 x2243)))
(define-fun x460 ((x2243 x3634)) Int (ite (= x1708 x2243) x2626 (x1123 x2243)))
(define-fun x3711 ((x2243 x3634)) Int (ite (= x3362 x2243) 0 (x1125 x2243)))
(define-fun x164 ((x2243 x3634)) Int (ite (= x2243 x3362) x2629 (x1125 x2243)))
(define-fun x242 ((x2243 x3634)) Int (ite x41 (x3711 x2243) (x164 x2243)))
(define-fun x1432 ((x2243 Int)) Int (ite (= x2243 452) 56879788782001134333110164298630386859921104006521148999079851869125721718784 (x1178 x2243)))
(define-fun x3305 ((x2243 Int)) Int (ite (= 452 x2243) x838 (x1432 x2243)))
(define-fun x13 ((x2243 Int)) Int (ite (= x2243 804) 114138022719912475680867045629478960338713192110453415424194996738542475935744 (x3305 x2243)))
(define-fun x618 ((x2243 Int)) Int (ite (= x2243 808) x3174 (x13 x2243)))
(define-fun x2032 ((x2243 Int)) Int (ite (= 804 x2243) x1216 (x618 x2243)))
(define-fun x74 ((x2243 Int)) Int (ite (= x2243 836) 64481368622683354557555711714629296119639875834729404553039716062438103187456 (x2032 x2243)))
(define-fun x318 ((x2243 Int)) Int (ite (= x2243 840) x3174 (x74 x2243)))
(define-fun x1340 ((x2243 Int)) Int (ite (= x2243 836) x3190 (x318 x2243)))
(define-fun x1692 ((x2243 Int)) Int (ite (= x2243 868) x3024 (x1340 x2243)))
(define-fun x3977 ((x2243 Int)) Int (ite (= x2243 900) x1014 (x1692 x2243)))
(define-fun x431 ((x2243 Int)) Int (ite (= 996 x2243) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x3977 x2243)))
(define-fun x2466 ((x2243 Int)) Int (ite (= x2243 996) 1 (x431 x2243)))
(define-fun x860 ((x2243 Int)) Int (ite (= x2243 996) 1 (x431 x2243)))
(define-fun x700 ((x2243 Int)) Int (ite (= x2243 996) 1 (x431 x2243)))
(define-fun x3264 ((x2243 Int)) Int (ite x2361 (x2466 x2243) (ite x1521 (x860 x2243) (x700 x2243))))
(define-fun x1659 ((x2243 Int)) Int (ite (= x2148 x2243) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x3264 x2243)))
(define-fun x3270 ((x2243 Int)) Int (ite (= x2148 x2243) x3384 (x1659 x2243)))
(define-fun x2857 ((x2243 Int)) Int (ite (= x2148 x2243) x3796 (x1659 x2243)))
(define-fun x3563 ((x2243 Int)) Int (ite (= x2148 x2243) x2908 (x1659 x2243)))
(define-fun x2977 ((x2243 Int)) Int (ite x3535 (x3270 x2243) (ite x959 (x2857 x2243) (x3563 x2243))))
(define-fun x3829 ((x2243 Int)) Int (ite x3541 (x3305 x2243) (x2977 x2243)))
(define-fun x3750 ((x2243 Int)) Int (ite (= x2156 x2243) 50292402827334880472107169365697159231523039388532301717704428044325102813184 (x3829 x2243)))
(define-fun x2697 ((x2243 Int)) Int (ite (= x2243 x2156) x1648 (x3750 x2243)))
(define-fun x3706 ((x2243 Int)) Int (ite (= x2156 x2243) x2000 (x3750 x2243)))
(define-fun x2481 ((x2243 Int)) Int (ite (= x2243 x2156) x1956 (x3750 x2243)))
(define-fun x1312 ((x2243 Int)) Int (ite x1676 (x2697 x2243) (ite x380 (x3706 x2243) (x2481 x2243))))
(define-fun x909 ((x2243 Int)) Int (ite x1986 (x1312 x2243) (x3829 x2243)))
(define-fun x1297 ((x2243 Int)) Int (ite (= x3445 x2243) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x909 x2243)))
(define-fun x990 ((x2243 Int)) Int (ite (= x2243 x3445) 1 (x1297 x2243)))
(define-fun x2475 ((x2243 Int)) Int (ite (= x3445 x2243) 1 (x1297 x2243)))
(define-fun x1348 ((x2243 Int)) Int (ite (= x3445 x2243) 1 (x1297 x2243)))
(define-fun x3667 ((x2243 Int)) Int (ite x3173 (x990 x2243) (ite x3100 (x2475 x2243) (x1348 x2243))))
(define-fun x1419 ((x2243 Int)) Int (ite (= x1049 x2243) x1139 (x3667 x2243)))
(define-fun x1845 ((x2243 Int)) Int (ite x3436 (x3667 x2243) (x1419 x2243)))
(define-fun x2928 ((x2243 Int)) Int (ite (= x261 x2243) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x1845 x2243)))
(define-fun x2025 ((x2243 Int)) Int (ite (= x2243 0) 1 (x59 x2243)))
(define-fun x1002 ((x2243 Int)) Int (ite (= x261 x2243) 1 (x2928 x2243)))
(define-fun x2291 ((x2243 Int)) Int (ite (= x2243 0) 1 (x59 x2243)))
(define-fun x2646 ((x2243 Int)) Int (ite (= x2243 x261) 1 (x2928 x2243)))
(define-fun x2547 ((x2243 Int)) Int (ite (= x2243 0) 1 (x59 x2243)))
(define-fun x1089 ((x2243 Int)) Int (ite (= x261 x2243) 1 (x2928 x2243)))
(define-fun x6 ((x2243 Int)) Int (ite x3500 (x1002 x2243) (ite x3924 (x2646 x2243) (x1089 x2243))))
(define-fun x2712 ((x2243 Int)) Int (ite (= x1478 x2243) 44970383829727661923261016617897238973146650624978361361029103362720544063488 (x6 x2243)))
(define-fun x704 ((x2243 Int)) Int (ite (= x936 x2243) x1327 (x2712 x2243)))
(define-fun x2256 ((x2243 Int)) Int (ite (= x3383 x2243) x33 (x704 x2243)))
(define-fun x3727 ((x2243 Int)) Int (ite (= x2243 x1354) x1609 (x2256 x2243)))
(define-fun x3223 ((x2243 Int)) Int (ite (and (< x2243 (+ x1478 0)) (<= x1478 x2243)) (x1291 (+ (- x2243 x1478) 0)) (x3727 x2243)))
(define-fun x3594 ((x2243 Int)) Int (ite x2832 (x6 x2243) (x3223 x2243)))
(define-fun x2182 ((x2243 Int)) Int (ite (= x2243 x1478) x3038 (x3594 x2243)))
(define-fun x3120 ((x2243 Int)) Int (ite (= x2243 x82) x3928 (x2182 x2243)))
(define-fun x679 ((x2243 Int)) Int (ite x2431 (x3120 x2243) (x6 x2243)))
(define-fun x1332 ((x2243 Int)) Int (ite x3553 (ite x3293 (x679 x2243) (x1845 x2243)) (x1845 x2243)))
(define-fun x2685 ((x2243 x3634)) Int (ite (= x2243 x1128) x1052 (x3459 x2243)))
(define-fun x785 ((x2243 x3634)) Int (ite x3553 (ite x2363 (x3459 x2243) (x2685 x2243)) (x3459 x2243)))
(define-fun x3694 ((x2243 x3634)) Int (ite (= x2243 x2597) x913 (x2583 x2243)))
(define-fun x1045 ((x2243 x3634)) Int (ite (= x3218 x2243) x3624 (x316 x2243)))
(define-fun x3154 ((x2243 Int)) Int (ite (= x326 x2243) x3978 (x1332 x2243)))
(define-fun x2929 ((x2243 Int)) Int (ite (= x2243 x2199) x1944 (x3154 x2243)))
(define-fun x461 ((x2243 Int)) Int (ite (= x326 x2243) 26675680369413430104207330802600748686362808878094982966429686717365230764032 (x2929 x2243)))
(define-fun x1251 ((x2243 Int)) Int (ite (= x928 x2243) x897 (x461 x2243)))
(define-fun x3397 ((x2243 Int)) Int (ite (= 0 x2243) x2498 (x942 x2243)))
(define-fun x660 ((x2243 Int)) Int (ite (= x326 x2243) x2498 (x1251 x2243)))
(define-fun x1597 ((x2243 Int)) Int (ite (= x2243 0) x3843 (x942 x2243)))
(define-fun x1551 ((x2243 Int)) Int (ite (= x2243 x326) x3843 (x1251 x2243)))
(define-fun x1018 ((x2243 Int)) Int (ite (= 0 x2243) x3484 (x942 x2243)))
(define-fun x1598 ((x2243 Int)) Int (ite (= x2243 x326) x3484 (x1251 x2243)))
(define-fun x765 ((x2243 x3634)) Int (ite (= x2759 x2243) x2248 (x742 x2243)))
(define-fun x2589 ((x2243 x3634)) Int (ite x1136 (x742 x2243) (ite x533 (x742 x2243) (ite x2297 (x742 x2243) (ite x763 (x765 x2243) (x742 x2243))))))
(define-fun x2980 ((x2243 x3634)) Int (ite (= x2243 x3261) x2308 (x765 x2243)))
(define-fun x2014 ((x2243 x3634)) Int (ite x1308 (x742 x2243) (ite x1447 (x742 x2243) (ite x2676 (x742 x2243) (ite x3869 (x2589 x2243) (x2980 x2243))))))
(define-fun x3280 ((x2243 x3634)) Int (ite x2641 (x2014 x2243) (ite x1623 (x742 x2243) (ite x1142 (x742 x2243) (ite x3271 (x742 x2243) (ite x749 (x2014 x2243) (x742 x2243)))))))
(define-fun x1493 ((x2243 x3634)) Int (ite x3361 (x3280 x2243) (x2014 x2243)))
(define-fun x2071 ((x2243 x3634)) Int (ite (= x2243 x816) x2964 (x742 x2243)))
(define-fun x3753 ((x2243 x3634)) Int (ite x103 (x742 x2243) (ite x3087 (x742 x2243) (ite x1647 (x742 x2243) (ite x328 (x2071 x2243) (x742 x2243))))))
(define-fun x1693 ((x2243 x3634)) Int (ite (= x2243 x1892) x1203 (x2071 x2243)))
(define-fun x2470 ((x2243 x3634)) Int (ite x2338 (x742 x2243) (ite x3364 (x742 x2243) (ite x3257 (x742 x2243) (ite x1403 (x3753 x2243) (x1693 x2243))))))
(define-fun x20 ((x2243 x3634)) Int (ite x1655 (x2470 x2243) (ite x2279 (x742 x2243) (ite x801 (x742 x2243) (ite x1890 (x742 x2243) (ite x2194 (x2470 x2243) (x742 x2243)))))))
(define-fun x1467 ((x2243 x3634)) Int (ite x3696 (x20 x2243) (x2470 x2243)))
(define-fun x1164 ((x2243 x3634)) Int (ite (= x2243 x3819) x2538 (x742 x2243)))
(define-fun x2001 ((x2243 x3634)) Int (ite (= x2445 x2243) x1252 (x1164 x2243)))
(define-fun x1038 ((x2243 x3634)) Int (ite x807 (x1164 x2243) (ite x2783 (x1164 x2243) (ite x2727 (x1164 x2243) (ite x527 (x2001 x2243) (x1164 x2243))))))
(define-fun x2953 ((x2243 x3634)) Int (ite (= x966 x2243) x1446 (x2001 x2243)))
(define-fun x257 ((x2243 x3634)) Int (ite x2337 (x1164 x2243) (ite x2412 (x1164 x2243) (ite x1996 (x1164 x2243) (ite x1873 (x1038 x2243) (x2953 x2243))))))
(define-fun x2898 ((x2243 x3634)) Int (ite x2694 (x257 x2243) (ite x1544 (x742 x2243) (ite x1168 (x742 x2243) (ite x1484 (x1164 x2243) (ite x2449 (x257 x2243) (x742 x2243)))))))
(define-fun x1732 ((x2243 x3634)) Int (ite x191 (x2898 x2243) (x257 x2243)))
(define-fun x3456 ((x2243 x3634)) Int (ite x3781 (x1493 x2243) (ite x550 (x1467 x2243) (x1732 x2243))))
(define-fun x2788 ((x2243 x3634)) Int (ite x3391 (x742 x2243) (ite x792 (x742 x2243) (x3456 x2243))))
(define-fun x986 ((x2243 Int)) Int (ite x2796 (ite x694 (x1251 x2243) (x660 x2243)) (ite x607 (ite x1985 (x1251 x2243) (x1551 x2243)) (ite x1092 (x1251 x2243) (x1598 x2243)))))
(define-fun x992 ((x2243 Int)) Int (ite (= x2243 x1194) 60231946789637257468838019015344037944473233080083133266033501538020963123200 (x986 x2243)))
(define-fun x1141 ((x2243 Int)) Int (ite (= x2360 x2243) x904 (x992 x2243)))
(define-fun x2942 ((x2243 Int)) Int (ite (= x1194 x2243) 0 (x1141 x2243)))
(define-fun x2462 ((x2243 Int)) Int (ite (= x2243 x1194) 0 (x1141 x2243)))
(define-fun x2654 ((x2243 Int)) Int (ite (= x1194 x2243) 0 (x1141 x2243)))
(define-fun x1007 ((x2243 Int)) Int (ite x3781 (ite x3361 (x1141 x2243) (x2942 x2243)) (ite x550 (ite x3696 (x1141 x2243) (x2462 x2243)) (ite x191 (x1141 x2243) (x2654 x2243)))))
(define-fun x2973 ((x2243 Int)) Int (ite (= x118 x2243) 94482241256677223720308674365448432550660581809977780367718865401173155774464 (x1007 x2243)))
(define-fun x3516 ((x2243 Int)) Int (ite (and (<= x118 x2243) (> (+ x118 0) x2243)) (x2830 (+ 0 (- x2243 x118))) (x2973 x2243)))
(define-fun x3490 ((x2243 Int)) Int (ite x2439 (x1007 x2243) (x3516 x2243)))
(define-fun x3674 ((x2243 Int)) Int (ite x3391 (x1332 x2243) (ite x792 (x2929 x2243) (x3490 x2243))))
(define-fun x197 ((x2243 x3634)) Int (ite (= x3339 x2243) x3852 (x1610 x2243)))
(define-fun x258 ((x2243 x3634)) Int (ite x2708 (x197 x2243) (ite x324 (x1610 x2243) (ite x2083 (x1610 x2243) (ite x355 (x1610 x2243) (ite x296 (x197 x2243) (x1610 x2243)))))))
(define-fun x24 ((x2243 x3634)) Int (ite (= x2243 x3668) x3177 (x197 x2243)))
(define-fun x1408 ((x2243 x3634)) Int (ite x1308 (ite x1188 (x258 x2243) (x24 x2243)) (x1610 x2243)))
(define-fun x917 ((x2243 x3634)) Int (ite x2641 (x1408 x2243) (ite x1623 (x1610 x2243) (ite x1142 (x1610 x2243) (ite x3271 (x1610 x2243) (ite x749 (x1408 x2243) (x1610 x2243)))))))
(define-fun x1109 ((x2243 x3634)) Int (ite x3361 (x917 x2243) (x1408 x2243)))
(define-fun x3552 ((x2243 x3634)) Int (ite (= x2243 x1931) x57 (x1610 x2243)))
(define-fun x539 ((x2243 x3634)) Int (ite x2314 (x3552 x2243) (ite x1636 (x1610 x2243) (ite x3099 (x1610 x2243) (ite x941 (x1610 x2243) (ite x3044 (x3552 x2243) (x1610 x2243)))))))
(define-fun x532 ((x2243 x3634)) Int (ite (= x2243 x3298) x2209 (x3552 x2243)))
(define-fun x1161 ((x2243 x3634)) Int (ite x2338 (ite x2578 (x539 x2243) (x532 x2243)) (x1610 x2243)))
(define-fun x3617 ((x2243 x3634)) Int (ite x1655 (x1161 x2243) (ite x2279 (x1610 x2243) (ite x801 (x1610 x2243) (ite x1890 (x1610 x2243) (ite x2194 (x1161 x2243) (x1610 x2243)))))))
(define-fun x2648 ((x2243 x3634)) Int (ite x3696 (x3617 x2243) (x1161 x2243)))
(define-fun x2557 ((x2243 x3634)) Int (ite (= x2243 x656) x517 (x1610 x2243)))
(define-fun x60 ((x2243 x3634)) Int (ite x3141 (x2557 x2243) (ite x1374 (x1610 x2243) (ite x1262 (x1610 x2243) (ite x943 (x1610 x2243) (ite x2630 (x2557 x2243) (x1610 x2243)))))))
(define-fun x2618 ((x2243 x3634)) Int (ite (= x2243 x2219) x353 (x2557 x2243)))
(define-fun x3536 ((x2243 x3634)) Int (ite x2337 (ite x3483 (x60 x2243) (x2618 x2243)) (x1610 x2243)))
(define-fun x1959 ((x2243 x3634)) Int (ite x2694 (x3536 x2243) (ite x1544 (x1610 x2243) (ite x1168 (x1610 x2243) (ite x1484 (x1610 x2243) (ite x2449 (x3536 x2243) (x1610 x2243)))))))
(define-fun x3343 ((x2243 x3634)) Int (ite x191 (x1959 x2243) (x3536 x2243)))
(define-fun x1378 ((x2243 x3634)) Int (ite x3781 (x1109 x2243) (ite x550 (x2648 x2243) (x3343 x2243))))
(define-fun x514 ((x2243 x3634)) Int (ite x3391 (x1610 x2243) (ite x792 (x1610 x2243) (x1378 x2243))))
(define-fun x925 ((x2243 x3634)) Int (ite (= (x1618 x897) x2243) x1357 (x2149 x2243)))
(define-fun x387 ((x2243 x3634)) Int (ite (= (x1618 x2698) x2243) x3135 (x925 x2243)))
(define-fun x3626 ((x2243 x3634)) Int (ite x2439 (x2149 x2243) (x387 x2243)))
(define-fun x1994 ((x2243 x3634)) Int (ite x3391 (x2149 x2243) (ite x792 (x2149 x2243) (x3626 x2243))))
(define-fun x3477 ((x2243 x3634)) Int (ite (= x2243 x1846) x1727 (x2910 x2243)))
(define-fun x3755 ((x2243 x3634)) Int (ite x1512 (x2910 x2243) (ite x3303 (x2910 x2243) (ite x1660 (x2910 x2243) (ite x3241 (x3477 x2243) (x2910 x2243))))))
(define-fun x707 ((x2243 x3634)) Int (ite (= x2243 x934) x1001 (x3477 x2243)))
(define-fun x3310 ((x2243 x3634)) Int (ite x1308 (x2910 x2243) (ite x1447 (x2910 x2243) (ite x2676 (ite x3129 (x3755 x2243) (x707 x2243)) (x2910 x2243)))))
(define-fun x2591 ((x2243 x3634)) Int (ite x2641 (x3310 x2243) (ite x1623 (x2910 x2243) (ite x1142 (x2910 x2243) (ite x3271 (x2910 x2243) (ite x749 (x3310 x2243) (x2910 x2243)))))))
(define-fun x888 ((x2243 x3634)) Int (ite x3361 (x2591 x2243) (x3310 x2243)))
(define-fun x2293 ((x2243 x3634)) Int (ite (= x2867 x2243) x2299 (x2910 x2243)))
(define-fun x1197 ((x2243 x3634)) Int (ite (= x996 x2243) x784 (x2293 x2243)))
(define-fun x73 ((x2243 x3634)) Int (ite x2120 (x2293 x2243) (ite x3900 (x2293 x2243) (ite x1644 (x2293 x2243) (ite x3862 (x1197 x2243) (x2293 x2243))))))
(define-fun x2271 ((x2243 x3634)) Int (ite (= x2243 x506) x643 (x1197 x2243)))
(define-fun x1976 ((x2243 x3634)) Int (ite x2338 (x2293 x2243) (ite x3364 (x2293 x2243) (ite x3257 (ite x1151 (x73 x2243) (x2271 x2243)) (x2293 x2243)))))
(define-fun x2731 ((x2243 x3634)) Int (ite x1655 (x1976 x2243) (ite x2279 (x2910 x2243) (ite x801 (x2910 x2243) (ite x1890 (x2293 x2243) (ite x2194 (x1976 x2243) (x2910 x2243)))))))
(define-fun x1555 ((x2243 x3634)) Int (ite x3696 (x2731 x2243) (x1976 x2243)))
(define-fun x2534 ((x2243 x3634)) Int (ite (= x1794 x2243) x871 (x2910 x2243)))
(define-fun x2522 ((x2243 x3634)) Int (ite x3408 (x2910 x2243) (ite x2160 (x2910 x2243) (ite x979 (x2910 x2243) (ite x1260 (x2534 x2243) (x2910 x2243))))))
(define-fun x857 ((x2243 x3634)) Int (ite (= x1392 x2243) x2173 (x2534 x2243)))
(define-fun x3492 ((x2243 x3634)) Int (ite x2337 (x2910 x2243) (ite x2412 (x2910 x2243) (ite x1996 (ite x1675 (x2522 x2243) (x857 x2243)) (x2910 x2243)))))
(define-fun x2154 ((x2243 x3634)) Int (ite x2694 (x3492 x2243) (ite x1544 (x2910 x2243) (ite x1168 (x2910 x2243) (ite x1484 (x2910 x2243) (ite x2449 (x3492 x2243) (x2910 x2243)))))))
(define-fun x846 ((x2243 x3634)) Int (ite x191 (x2154 x2243) (x3492 x2243)))
(define-fun x1666 ((x2243 x3634)) Int (ite x3781 (x888 x2243) (ite x550 (x1555 x2243) (x846 x2243))))
(define-fun x3677 ((x2243 x3634)) Int (ite x3391 (x2910 x2243) (ite x792 (x2910 x2243) (x1666 x2243))))
(define-fun x2778 ((x2243 x3634)) Int (ite (= x2243 x3325) x1117 (x2331 x2243)))
(define-fun x1289 ((x2243 x3634)) Int (ite (= x2801 x2243) x2742 (x2778 x2243)))
(define-fun x1852 ((x2243 x3634)) Int (ite x408 (x2778 x2243) (ite x285 (x2778 x2243) (ite x3415 (x2778 x2243) (ite x135 (x1289 x2243) (x2778 x2243))))))
(define-fun x2489 ((x2243 x3634)) Int (ite (= x2243 x265) x553 (x1289 x2243)))
(define-fun x2095 ((x2243 x3634)) Int (ite x1308 (x2778 x2243) (ite x1447 (ite x433 (x1852 x2243) (x2489 x2243)) (x2778 x2243))))
(define-fun x1026 ((x2243 x3634)) Int (ite x2641 (x2095 x2243) (ite x1623 (x2331 x2243) (ite x1142 (x2331 x2243) (ite x3271 (x2778 x2243) (ite x749 (x2095 x2243) (x2331 x2243)))))))
(define-fun x1165 ((x2243 x3634)) Int (ite x3361 (x1026 x2243) (x2095 x2243)))
(define-fun x3980 ((x2243 x3634)) Int (ite (= x2243 x1167) x2748 (x2331 x2243)))
(define-fun x3205 ((x2243 x3634)) Int (ite x580 (x2331 x2243) (ite x1865 (x2331 x2243) (ite x2604 (x2331 x2243) (ite x3341 (x3980 x2243) (x2331 x2243))))))
(define-fun x2892 ((x2243 x3634)) Int (ite (= x2243 x3825) x2668 (x3980 x2243)))
(define-fun x2035 ((x2243 x3634)) Int (ite x2338 (x2331 x2243) (ite x3364 (ite x1299 (x3205 x2243) (x2892 x2243)) (x2331 x2243))))
(define-fun x2916 ((x2243 x3634)) Int (ite x1655 (x2035 x2243) (ite x2279 (x2331 x2243) (ite x801 (x2331 x2243) (ite x1890 (x2331 x2243) (ite x2194 (x2035 x2243) (x2331 x2243)))))))
(define-fun x3683 ((x2243 x3634)) Int (ite x3696 (x2916 x2243) (x2035 x2243)))
(define-fun x1323 ((x2243 x3634)) Int (ite (= x2357 x2243) x3000 (x2331 x2243)))
(define-fun x2152 ((x2243 x3634)) Int (ite x2570 (x2331 x2243) (ite x373 (x2331 x2243) (ite x329 (x2331 x2243) (ite x1066 (x1323 x2243) (x2331 x2243))))))
(define-fun x2088 ((x2243 x3634)) Int (ite (= x505 x2243) x3581 (x1323 x2243)))
(define-fun x3917 ((x2243 x3634)) Int (ite x2337 (x2331 x2243) (ite x2412 (ite x1969 (x2152 x2243) (x2088 x2243)) (x2331 x2243))))
(define-fun x2397 ((x2243 x3634)) Int (ite x2694 (x3917 x2243) (ite x1544 (x2331 x2243) (ite x1168 (x2331 x2243) (ite x1484 (x2331 x2243) (ite x2449 (x3917 x2243) (x2331 x2243)))))))
(define-fun x488 ((x2243 x3634)) Int (ite x191 (x2397 x2243) (x3917 x2243)))
(define-fun x1848 ((x2243 x3634)) Int (ite x3781 (x1165 x2243) (ite x550 (x3683 x2243) (x488 x2243))))
(define-fun x2590 ((x2243 x3634)) Int (ite x3391 (x2331 x2243) (ite x792 (x2331 x2243) (x1848 x2243))))
(define-fun x3647 ((x2243 x3634)) Int (ite x3391 (x316 x2243) (x1045 x2243)))
(define-fun x116 ((x2243 Int)) Int (ite (= x3053 x2243) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x3674 x2243)))
(define-fun x2613 ((x2243 Int)) Int (ite (= 0 x2243) x3384 (x3110 x2243)))
(define-fun x3091 ((x2243 Int)) Int (ite (= x2243 x3053) x3384 (x116 x2243)))
(define-fun x3168 ((x2243 Int)) Int (ite (= 0 x2243) x3796 (x3110 x2243)))
(define-fun x394 ((x2243 Int)) Int (ite (= x2243 x3053) x3796 (x116 x2243)))
(define-fun x2003 ((x2243 Int)) Int (ite (= x2243 0) x2908 (x3110 x2243)))
(define-fun x222 ((x2243 Int)) Int (ite (= x2243 x3053) x2908 (x116 x2243)))
(define-fun x1779 ((x2243 Int)) Int (ite (= x2243 128) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x39 x2243)))
(define-fun x858 ((x2243 Int)) Int (ite (= x2243 132) x897 (x1779 x2243)))
(define-fun x2253 ((x2243 Int)) Int (ite (= x2243 164) x346 (x858 x2243)))
(define-fun x3130 ((x2243 Int)) Int (ite (= x2243 0) 1 (x3363 x2243)))
(define-fun x1234 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x3363 x2243)))
(define-fun x3564 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x3363 x2243)))
(define-fun x3569 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x3363 x2243)))
(define-fun x2140 ((x2243 Int)) Int (ite (= 128 x2243) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x3480 x2243)))
(define-fun x1270 ((x2243 Int)) Int (ite (= 132 x2243) x897 (x2140 x2243)))
(define-fun x3652 ((x2243 Int)) Int (ite (= 164 x2243) x2930 (x1270 x2243)))
(define-fun x3287 ((x2243 Int)) Int (ite (= x2243 0) 1 (x612 x2243)))
(define-fun x1283 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x612 x2243)))
(define-fun x1008 ((x2243 Int)) Int (ite (= x2243 0) 1 (x612 x2243)))
(define-fun x281 ((x2243 Int)) Int (ite (= x2243 0) 1 (x612 x2243)))
(define-fun x1451 ((x2243 Int)) Int (ite (= 128 x2243) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x791 x2243)))
(define-fun x558 ((x2243 Int)) Int (ite (= 132 x2243) x897 (x1451 x2243)))
(define-fun x3013 ((x2243 Int)) Int (ite (= x2243 164) x1237 (x558 x2243)))
(define-fun x3762 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x126 x2243)))
(define-fun x2189 ((x2243 Int)) Int (ite (= x2243 0) 1 (x126 x2243)))
(define-fun x3109 ((x2243 Int)) Int (ite (= x2243 0) 1 (x126 x2243)))
(define-fun x1226 ((x2243 Int)) Int (ite (= x2243 0) 1 (x126 x2243)))
(define-fun x2257 ((x2243 x3634)) Int (ite (= x2243 x3137) x1578 (x2788 x2243)))
(define-fun x1565 ((x2243 x3634)) Int (ite x1923 (x2788 x2243) (ite x1313 (x2788 x2243) (ite x2290 (x2788 x2243) (ite x1156 (x2257 x2243) (x2788 x2243))))))
(define-fun x1321 ((x2243 x3634)) Int (ite (= x1481 x2243) x1198 (x2257 x2243)))
(define-fun x2464 ((x2243 x3634)) Int (ite x2370 (x2788 x2243) (ite x243 (x2788 x2243) (ite x2714 (x2788 x2243) (ite x171 (x1565 x2243) (x1321 x2243))))))
(define-fun x2913 ((x2243 x3634)) Int (ite x2344 (x2464 x2243) (ite x228 (x2788 x2243) (ite x1069 (x2788 x2243) (ite x3806 (x2788 x2243) (ite x2906 (x2464 x2243) (x2788 x2243)))))))
(define-fun x3914 ((x2243 x3634)) Int (ite x2934 (x2913 x2243) (x2464 x2243)))
(define-fun x1853 ((x2243 x3634)) Int (ite (= x1293 x2243) x1584 (x2788 x2243)))
(define-fun x887 ((x2243 x3634)) Int (ite x332 (x2788 x2243) (ite x880 (x2788 x2243) (ite x1105 (x2788 x2243) (ite x3722 (x1853 x2243) (x2788 x2243))))))
(define-fun x773 ((x2243 x3634)) Int (ite (= x665 x2243) x1248 (x1853 x2243)))
(define-fun x2506 ((x2243 x3634)) Int (ite x2096 (x2788 x2243) (ite x420 (x2788 x2243) (ite x989 (x2788 x2243) (ite x496 (x887 x2243) (x773 x2243))))))
(define-fun x583 ((x2243 x3634)) Int (ite x1485 (x2506 x2243) (ite x1754 (x2788 x2243) (ite x3845 (x2788 x2243) (ite x1620 (x2788 x2243) (ite x1793 (x2506 x2243) (x2788 x2243)))))))
(define-fun x1740 ((x2243 x3634)) Int (ite x2365 (x583 x2243) (x2506 x2243)))
(define-fun x1741 ((x2243 x3634)) Int (ite (= x2243 x3840) x397 (x2788 x2243)))
(define-fun x226 ((x2243 x3634)) Int (ite x2976 (x2788 x2243) (ite x1344 (x2788 x2243) (ite x882 (x2788 x2243) (ite x626 (x1741 x2243) (x2788 x2243))))))
(define-fun x2336 ((x2243 x3634)) Int (ite (= x2243 x1683) x2909 (x1741 x2243)))
(define-fun x3832 ((x2243 x3634)) Int (ite x1212 (x2788 x2243) (ite x3406 (x2788 x2243) (ite x663 (x2788 x2243) (ite x985 (x226 x2243) (x2336 x2243))))))
(define-fun x341 ((x2243 x3634)) Int (ite x389 (x3832 x2243) (ite x3572 (x2788 x2243) (ite x1043 (x2788 x2243) (ite x1416 (x2788 x2243) (ite x526 (x3832 x2243) (x2788 x2243)))))))
(define-fun x789 ((x2243 x3634)) Int (ite x2312 (x341 x2243) (x3832 x2243)))
(define-fun x1140 ((x2243 x3634)) Int (ite x392 (x2788 x2243) (ite x3805 (x3914 x2243) (ite x601 (x1740 x2243) (x789 x2243)))))
(define-fun x421 ((x2243 Int)) Int (ite x3501 (x3091 x2243) (ite x2599 (x394 x2243) (x222 x2243))))
(define-fun x478 ((x2243 Int)) Int (ite (= x2243 x3142) 89522461602318961266474185744428785802019839140862557341176434972013554040832 (x421 x2243)))
(define-fun x1417 ((x2243 Int)) Int (ite (= x2729 x2243) x1870 (x478 x2243)))
(define-fun x100 ((x2243 Int)) Int (ite (= x2243 x3142) 0 (x1417 x2243)))
(define-fun x3023 ((x2243 Int)) Int (ite (= x3142 x2243) 0 (x1417 x2243)))
(define-fun x3327 ((x2243 Int)) Int (ite (= x3142 x2243) 0 (x1417 x2243)))
(define-fun x2402 ((x2243 Int)) Int (ite x3805 (ite x2934 (x1417 x2243) (x100 x2243)) (ite x601 (ite x2365 (x1417 x2243) (x3023 x2243)) (ite x2312 (x1417 x2243) (x3327 x2243)))))
(define-fun x3388 ((x2243 Int)) Int (ite (= x1827 x2243) 94482241256677223720308674365448432550660581809977780367718865401173155774464 (x2402 x2243)))
(define-fun x91 ((x2243 Int)) Int (ite (and (> (+ x1827 0) x2243) (<= x1827 x2243)) (x2137 (+ 0 (- x2243 x1827))) (x3388 x2243)))
(define-fun x2540 ((x2243 Int)) Int (ite x392 (x3674 x2243) (ite x3358 (x2402 x2243) (x91 x2243))))
(define-fun x2455 ((x2243 x3634)) Int (ite (= x3301 x2243) x1721 (x2590 x2243)))
(define-fun x823 ((x2243 x3634)) Int (ite x3172 (x2590 x2243) (ite x3557 (x2590 x2243) (ite x1702 (x2590 x2243) (ite x922 (x2455 x2243) (x2590 x2243))))))
(define-fun x445 ((x2243 x3634)) Int (ite (= x2243 x1496) x174 (x2455 x2243)))
(define-fun x1400 ((x2243 x3634)) Int (ite x2370 (x2590 x2243) (ite x243 (ite x3593 (x823 x2243) (x445 x2243)) (x2590 x2243))))
(define-fun x841 ((x2243 x3634)) Int (ite x2344 (x1400 x2243) (ite x228 (x2590 x2243) (ite x1069 (x2590 x2243) (ite x3806 (x2590 x2243) (ite x2906 (x1400 x2243) (x2590 x2243)))))))
(define-fun x293 ((x2243 x3634)) Int (ite x2934 (x841 x2243) (x1400 x2243)))
(define-fun x2203 ((x2243 x3634)) Int (ite (= x2243 x1121) x3152 (x2590 x2243)))
(define-fun x3331 ((x2243 x3634)) Int (ite x3002 (x2590 x2243) (ite x2002 (x2590 x2243) (ite x1281 (x2590 x2243) (ite x3811 (x2203 x2243) (x2590 x2243))))))
(define-fun x1972 ((x2243 x3634)) Int (ite (= x2243 x2425) x729 (x2203 x2243)))
(define-fun x2991 ((x2243 x3634)) Int (ite x2096 (x2590 x2243) (ite x420 (ite x641 (x3331 x2243) (x1972 x2243)) (x2590 x2243))))
(define-fun x2996 ((x2243 x3634)) Int (ite x1485 (x2991 x2243) (ite x1754 (x2590 x2243) (ite x3845 (x2590 x2243) (ite x1620 (x2590 x2243) (ite x1793 (x2991 x2243) (x2590 x2243)))))))
(define-fun x1190 ((x2243 x3634)) Int (ite x2365 (x2996 x2243) (x2991 x2243)))
(define-fun x85 ((x2243 x3634)) Int (ite (= x2243 x301) x2178 (x2590 x2243)))
(define-fun x1917 ((x2243 x3634)) Int (ite x710 (x2590 x2243) (ite x131 (x2590 x2243) (ite x3932 (x2590 x2243) (ite x99 (x85 x2243) (x2590 x2243))))))
(define-fun x3112 ((x2243 x3634)) Int (ite (= x2243 x1085) x1199 (x85 x2243)))
(define-fun x2921 ((x2243 x3634)) Int (ite x1212 (x2590 x2243) (ite x3406 (ite x1119 (x1917 x2243) (x3112 x2243)) (x2590 x2243))))
(define-fun x573 ((x2243 x3634)) Int (ite x389 (x2921 x2243) (ite x3572 (x2590 x2243) (ite x1043 (x2590 x2243) (ite x1416 (x2590 x2243) (ite x526 (x2921 x2243) (x2590 x2243)))))))
(define-fun x1788 ((x2243 x3634)) Int (ite x2312 (x573 x2243) (x2921 x2243)))
(define-fun x3394 ((x2243 x3634)) Int (ite x392 (x2590 x2243) (ite x3805 (x293 x2243) (ite x601 (x1190 x2243) (x1788 x2243)))))
(define-fun x1163 ((x2243 x3634)) Int (ite (= x2820 x2243) x3355 (x3630 x2243)))
(define-fun x543 ((x2243 x3634)) Int (ite x392 (x3630 x2243) (x1163 x2243)))
(define-fun x1137 ((x2243 x3634)) Int (ite (= x2243 x491) x3815 (x3677 x2243)))
(define-fun x267 ((x2243 x3634)) Int (ite x756 (x3677 x2243) (ite x1967 (x3677 x2243) (ite x949 (x3677 x2243) (ite x3675 (x1137 x2243) (x3677 x2243))))))
(define-fun x3908 ((x2243 x3634)) Int (ite (= x2342 x2243) x1961 (x1137 x2243)))
(define-fun x3957 ((x2243 x3634)) Int (ite x2370 (x3677 x2243) (ite x243 (x3677 x2243) (ite x2714 (ite x3510 (x267 x2243) (x3908 x2243)) (x3677 x2243)))))
(define-fun x3646 ((x2243 x3634)) Int (ite x2344 (x3957 x2243) (ite x228 (x3677 x2243) (ite x1069 (x3677 x2243) (ite x3806 (x3677 x2243) (ite x2906 (x3957 x2243) (x3677 x2243)))))))
(define-fun x2420 ((x2243 x3634)) Int (ite x2934 (x3646 x2243) (x3957 x2243)))
(define-fun x3312 ((x2243 x3634)) Int (ite (= x2243 x1838) x72 (x3677 x2243)))
(define-fun x670 ((x2243 x3634)) Int (ite x1371 (x3677 x2243) (ite x1326 (x3677 x2243) (ite x2565 (x3677 x2243) (ite x677 (x3312 x2243) (x3677 x2243))))))
(define-fun x349 ((x2243 x3634)) Int (ite (= x796 x2243) x2017 (x3312 x2243)))
(define-fun x520 ((x2243 x3634)) Int (ite x2096 (x3677 x2243) (ite x420 (x3677 x2243) (ite x989 (ite x561 (x670 x2243) (x349 x2243)) (x3677 x2243)))))
(define-fun x2640 ((x2243 x3634)) Int (ite x1485 (x520 x2243) (ite x1754 (x3677 x2243) (ite x3845 (x3677 x2243) (ite x1620 (x3677 x2243) (ite x1793 (x520 x2243) (x3677 x2243)))))))
(define-fun x3222 ((x2243 x3634)) Int (ite x2365 (x2640 x2243) (x520 x2243)))
(define-fun x3807 ((x2243 x3634)) Int (ite (= x2243 x3886) x7 (x3677 x2243)))
(define-fun x347 ((x2243 x3634)) Int (ite x3131 (x3677 x2243) (ite x713 (x3677 x2243) (ite x289 (x3677 x2243) (ite x2009 (x3807 x2243) (x3677 x2243))))))
(define-fun x2512 ((x2243 x3634)) Int (ite (= x2243 x1457) x3925 (x3807 x2243)))
(define-fun x1608 ((x2243 x3634)) Int (ite x1212 (x3677 x2243) (ite x3406 (x3677 x2243) (ite x663 (ite x828 (x347 x2243) (x2512 x2243)) (x3677 x2243)))))
(define-fun x471 ((x2243 x3634)) Int (ite x389 (x1608 x2243) (ite x3572 (x3677 x2243) (ite x1043 (x3677 x2243) (ite x1416 (x3677 x2243) (ite x526 (x1608 x2243) (x3677 x2243)))))))
(define-fun x3010 ((x2243 x3634)) Int (ite x2312 (x471 x2243) (x1608 x2243)))
(define-fun x1687 ((x2243 x3634)) Int (ite x392 (x3677 x2243) (ite x3805 (x2420 x2243) (ite x601 (x3222 x2243) (x3010 x2243)))))
(define-fun x3289 ((x2243 x3634)) Int (ite (= x593 x2243) x3507 (x514 x2243)))
(define-fun x1882 ((x2243 x3634)) Int (ite x3308 (x3289 x2243) (ite x469 (x514 x2243) (ite x1953 (x514 x2243) (ite x1388 (x514 x2243) (ite x3300 (x3289 x2243) (x514 x2243)))))))
(define-fun x2300 ((x2243 x3634)) Int (ite (= x2243 x829) x1833 (x3289 x2243)))
(define-fun x2463 ((x2243 x3634)) Int (ite x2370 (ite x1983 (x1882 x2243) (x2300 x2243)) (x514 x2243)))
(define-fun x2495 ((x2243 x3634)) Int (ite x2344 (x2463 x2243) (ite x228 (x514 x2243) (ite x1069 (x514 x2243) (ite x3806 (x514 x2243) (ite x2906 (x2463 x2243) (x514 x2243)))))))
(define-fun x1465 ((x2243 x3634)) Int (ite x2934 (x2495 x2243) (x2463 x2243)))
(define-fun x662 ((x2243 x3634)) Int (ite (= x822 x2243) x2371 (x514 x2243)))
(define-fun x2177 ((x2243 x3634)) Int (ite x2539 (x662 x2243) (ite x1954 (x514 x2243) (ite x120 (x514 x2243) (ite x3399 (x514 x2243) (ite x3645 (x662 x2243) (x514 x2243)))))))
(define-fun x462 ((x2243 x3634)) Int (ite (= x2243 x1697) x3508 (x662 x2243)))
(define-fun x2350 ((x2243 x3634)) Int (ite x2096 (ite x1318 (x2177 x2243) (x462 x2243)) (x514 x2243)))
(define-fun x1132 ((x2243 x3634)) Int (ite x1485 (x2350 x2243) (ite x1754 (x514 x2243) (ite x3845 (x514 x2243) (ite x1620 (x514 x2243) (ite x1793 (x2350 x2243) (x514 x2243)))))))
(define-fun x1095 ((x2243 x3634)) Int (ite x2365 (x1132 x2243) (x2350 x2243)))
(define-fun x376 ((x2243 x3634)) Int (ite (= x3540 x2243) x1974 (x514 x2243)))
(define-fun x3344 ((x2243 x3634)) Int (ite x1425 (x376 x2243) (ite x38 (x514 x2243) (ite x1769 (x514 x2243) (ite x422 (x514 x2243) (ite x2541 (x376 x2243) (x514 x2243)))))))
(define-fun x3904 ((x2243 x3634)) Int (ite (= x587 x2243) x995 (x376 x2243)))
(define-fun x659 ((x2243 x3634)) Int (ite x1212 (ite x2705 (x3344 x2243) (x3904 x2243)) (x514 x2243)))
(define-fun x239 ((x2243 x3634)) Int (ite x389 (x659 x2243) (ite x3572 (x514 x2243) (ite x1043 (x514 x2243) (ite x1416 (x514 x2243) (ite x526 (x659 x2243) (x514 x2243)))))))
(define-fun x3967 ((x2243 x3634)) Int (ite x2312 (x239 x2243) (x659 x2243)))
(define-fun x141 ((x2243 x3634)) Int (ite x392 (x514 x2243) (ite x3805 (x1465 x2243) (ite x601 (x1095 x2243) (x3967 x2243)))))
(define-fun x2785 ((x2243 x3634)) Int (ite (= x2243 x3912) 0 (x543 x2243)))
(define-fun x2508 ((x2243 x3634)) Int (ite (= (x1618 x897) x2243) x1757 (x1994 x2243)))
(define-fun x1020 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x2134 x2243)))
(define-fun x1225 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x2134 x2243)))
(define-fun x1523 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x2134 x2243)))
(define-fun x3090 ((x2243 Int)) Int (ite (= 0 x2243) x1648 (x3678 x2243)))
(define-fun x2132 ((x2243 Int)) Int (ite (= x2243 0) x2000 (x3678 x2243)))
(define-fun x544 ((x2243 Int)) Int (ite (= x2243 0) x1956 (x3678 x2243)))
(define-fun x3965 ((x2243 x3634)) Int (ite x286 (x1123 x2243) (x460 x2243)))
(define-fun x2377 ((x2243 x3634)) Int (ite x286 (x1097 x2243) (x3695 x2243)))
(define-fun x3655 ((x2243 Int)) Int (ite (= x2243 0) x838 (x2798 x2243)))
(define-fun x661 ((x2243 Int)) Int (ite (= x2243 0) x1216 (x712 x2243)))
(define-fun x298 ((x2243 Int)) Int (ite (= x2243 128) (ite x715 1 0) (x3642 x2243)))
(define-fun x1501 ((x2243 Int)) Int (ite (= 160 x2243) x982 (x298 x2243)))
(define-fun x430 ((x2243 Int)) Int (ite (= x2243 192) (ite x1059 1 0) (x1501 x2243)))
(define-fun x2072 ((x2243 Int)) Int (ite (= x2243 0) x3680 (x3366 x2243)))
(define-fun x3560 ((x2243 Int)) Int (ite (= 32 x2243) x1221 (x2072 x2243)))
(define-fun x55 ((x2243 Int)) Int (ite (= 64 x2243) x1193 (x3560 x2243)))
(define-fun x2937 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x2716 x2243)))
(define-fun x3085 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x2716 x2243)))
(define-fun x3876 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x2716 x2243)))
(define-fun x736 ((x2243 x3634)) Int (ite (= x2243 x195) x1705 (x2037 x2243)))
(define-fun x3973 ((x2243 x3634)) Int (ite x745 (x2037 x2243) (x736 x2243)))
(define-fun x1612 ((x2243 x3634)) Int (ite (= x2243 x3357) 0 (x3973 x2243)))
(define-fun x3330 ((x2243 x3634)) Int (ite x2330 (x2037 x2243) (x1612 x2243)))
(define-fun x1150 ((x2243 x3634)) Int (ite (= x3953 x2243) x2280 (x3330 x2243)))
(define-fun x1857 ((x2243 x3634)) Int (ite (= x2243 x3041) 0 (x3330 x2243)))
(define-fun x1901 ((x2243 x3634)) Int (ite (= x3450 x2243) x2125 (x3330 x2243)))
(define-fun x1545 ((x2243 x3634)) Int (ite (= x2243 x1333) x1327 (x1901 x2243)))
(define-fun x3705 ((x2243 x3634)) Int (ite (= x2243 x3874) 0 (x3330 x2243)))
(define-fun x1428 ((x2243 x3634)) Int (ite (= x2243 x3673) x1327 (x3705 x2243)))
(define-fun x808 ((x2243 x3634)) Int (ite x2951 (x1150 x2243) (ite x678 (x1857 x2243) (ite x233 (x1545 x2243) (x1428 x2243)))))
(define-fun x3489 ((x2243 x3634)) Int (ite x1146 (x2037 x2243) (ite x1335 (x3330 x2243) (x808 x2243))))
(define-fun x3800 ((x2243 x3634)) Int (ite (= x2243 x3233) x1561 (x2683 x2243)))
(define-fun x1814 ((x2243 x3634)) Int (ite x2457 (x2683 x2243) (x3800 x2243)))
(define-fun x944 ((x2243 x3634)) Int (ite (= x3814 x2243) 0 (x1814 x2243)))
(define-fun x2834 ((x2243 x3634)) Int (ite x2330 (x2683 x2243) (x944 x2243)))
(define-fun x2294 ((x2243 x3634)) Int (ite (= x2354 x2243) 0 (x2834 x2243)))
(define-fun x2781 ((x2243 x3634)) Int (ite (= x2243 x378) x1327 (x2294 x2243)))
(define-fun x3212 ((x2243 x3634)) Int (ite (= x2874 x2243) 0 (x2834 x2243)))
(define-fun x1749 ((x2243 x3634)) Int (ite (= x2243 x1130) x2923 (x2834 x2243)))
(define-fun x1195 ((x2243 x3634)) Int (ite (= x2243 x976) x1327 (x1749 x2243)))
(define-fun x2142 ((x2243 x3634)) Int (ite (= x1534 x2243) x2923 (x2834 x2243)))
(define-fun x2612 ((x2243 x3634)) Int (ite x2951 (x2781 x2243) (ite x678 (x3212 x2243) (ite x233 (x1195 x2243) (x2142 x2243)))))
(define-fun x2769 ((x2243 x3634)) Int (ite x1146 (x2683 x2243) (ite x1335 (x2834 x2243) (x2612 x2243))))
(define-fun x3827 ((x2243 x3634)) Int (ite (= x2243 x314) 0 (x235 x2243)))
(define-fun x3046 ((x2243 x3634)) Int (ite x2330 (x235 x2243) (x3827 x2243)))
(define-fun x1396 ((x2243 x3634)) Int (ite (= x2089 x2243) x3640 (x3046 x2243)))
(define-fun x1463 ((x2243 x3634)) Int (ite (= x2243 x3509) x3640 (x3046 x2243)))
(define-fun x2028 ((x2243 x3634)) Int (ite (= x3412 x2243) x3640 (x3046 x2243)))
(define-fun x3194 ((x2243 x3634)) Int (ite (= x2643 x2243) x3640 (x3046 x2243)))
(define-fun x3246 ((x2243 x3634)) Int (ite x2951 (x1396 x2243) (ite x678 (x1463 x2243) (ite x233 (x2028 x2243) (x3194 x2243)))))
(define-fun x1975 ((x2243 x3634)) Int (ite x1146 (x235 x2243) (ite x1335 (x3046 x2243) (x3246 x2243))))
(define-fun x3404 ((x2243 x3634)) Int (ite (= x2811 x2243) x1561 (x2181 x2243)))
(define-fun x2632 ((x2243 x3634)) Int (ite x2330 (x2181 x2243) (ite x2457 (x3404 x2243) (x2181 x2243))))
(define-fun x2901 ((x2243 x3634)) Int (ite (= x570 x2243) x1327 (x2632 x2243)))
(define-fun x372 ((x2243 x3634)) Int (ite (= x2243 x570) x1327 (x2632 x2243)))
(define-fun x1575 ((x2243 x3634)) Int (ite x2951 (x2632 x2243) (ite x678 (x2901 x2243) (ite x233 (x2632 x2243) (x372 x2243)))))
(define-fun x3687 ((x2243 x3634)) Int (ite x1146 (x2181 x2243) (ite x1335 (x2632 x2243) (x1575 x2243))))
(define-fun x1229 ((x2243 x3634)) Int (ite (= x3940 x2243) x549 (x3687 x2243)))
(define-fun x2700 ((x2243 x3634)) Int (ite (= x1473 x2243) x549 (x2769 x2243)))
(define-fun x3969 ((x2243 x3634)) Int (ite (= x2243 x2208) x2373 (x3489 x2243)))
(define-fun x3096 ((x2243 x3634)) Int (ite x1650 (x3489 x2243) (x3969 x2243)))
(define-fun x2107 ((x2243 x3634)) Int (ite (= x2243 x3306) 0 (x3096 x2243)))
(define-fun x2956 ((x2243 x3634)) Int (ite x3249 (x3489 x2243) (x2107 x2243)))
(define-fun x2623 ((x2243 x3634)) Int (ite x3040 (x2769 x2243) (x2700 x2243)))
(define-fun x546 ((x2243 x3634)) Int (ite (= x2243 x2015) 0 (x2623 x2243)))
(define-fun x2573 ((x2243 x3634)) Int (ite x3249 (x2769 x2243) (x546 x2243)))
(define-fun x2275 ((x2243 x3634)) Int (ite (= x605 x2243) x1705 (x1730 x2243)))
(define-fun x3098 ((x2243 x3634)) Int (ite x2330 (x1730 x2243) (ite x745 (x2275 x2243) (x1730 x2243))))
(define-fun x3284 ((x2243 x3634)) Int (ite (= x2561 x2243) x1327 (x3098 x2243)))
(define-fun x2856 ((x2243 x3634)) Int (ite (= x1094 x2243) x1327 (x3098 x2243)))
(define-fun x894 ((x2243 x3634)) Int (ite x2951 (x3284 x2243) (ite x678 (x2856 x2243) (x3098 x2243))))
(define-fun x200 ((x2243 x3634)) Int (ite x1146 (x1730 x2243) (ite x1335 (x3098 x2243) (x894 x2243))))
(define-fun x3372 ((x2243 x3634)) Int (ite (= x2044 x2243) x2373 (x200 x2243)))
(define-fun x1088 ((x2243 x3634)) Int (ite x3249 (x200 x2243) (ite x1650 (x3372 x2243) (x200 x2243))))
(define-fun x365 ((x2243 x3634)) Int (ite x3249 (x3687 x2243) (ite x3040 (x1229 x2243) (x3687 x2243))))
(define-fun x1131 ((x2243 x3634)) Int (ite (= x2243 x35) 0 (x1975 x2243)))
(define-fun x794 ((x2243 x3634)) Int (ite x3249 (x1975 x2243) (x1131 x2243)))
(define-fun x1430 ((x2243 x3634)) Int (ite (= x2243 x962) x2484 (x1815 x2243)))
(define-fun x1510 ((x2243 x3634)) Int (ite x3417 (x1815 x2243) (x1430 x2243)))
(define-fun x3008 ((x2243 x3634)) Int (ite (= x3207 x2243) 0 (x1510 x2243)))
(define-fun x921 ((x2243 x3634)) Int (ite x2307 (x1815 x2243) (x3008 x2243)))
(define-fun x3458 ((x2243 x3634)) Int (ite (= x2243 x633) x754 (x921 x2243)))
(define-fun x1589 ((x2243 x3634)) Int (ite (= x2243 x3963) 0 (x921 x2243)))
(define-fun x2264 ((x2243 x3634)) Int (ite (= x3422 x2243) x3623 (x921 x2243)))
(define-fun x2143 ((x2243 x3634)) Int (ite (= x3881 x2243) x1327 (x2264 x2243)))
(define-fun x2341 ((x2243 x3634)) Int (ite (= x2141 x2243) 0 (x921 x2243)))
(define-fun x3208 ((x2243 x3634)) Int (ite (= x2243 x3519) x1327 (x2341 x2243)))
(define-fun x250 ((x2243 x3634)) Int (ite x2791 (x3458 x2243) (ite x307 (x1589 x2243) (ite x128 (x2143 x2243) (x3208 x2243)))))
(define-fun x279 ((x2243 x3634)) Int (ite x262 (x1815 x2243) (ite x631 (x921 x2243) (x250 x2243))))
(define-fun x2155 ((x2243 x3634)) Int (ite (= x1090 x2243) x1285 (x2656 x2243)))
(define-fun x1760 ((x2243 x3634)) Int (ite x3386 (x2656 x2243) (x2155 x2243)))
(define-fun x2430 ((x2243 x3634)) Int (ite (= x2243 x1336) 0 (x1760 x2243)))
(define-fun x3136 ((x2243 x3634)) Int (ite x2307 (x2656 x2243) (x2430 x2243)))
(define-fun x1989 ((x2243 x3634)) Int (ite (= x757 x2243) 0 (x3136 x2243)))
(define-fun x2366 ((x2243 x3634)) Int (ite (= x2243 x3354) x1327 (x1989 x2243)))
(define-fun x2707 ((x2243 x3634)) Int (ite (= x3065 x2243) 0 (x3136 x2243)))
(define-fun x443 ((x2243 x3634)) Int (ite (= x3259 x2243) x362 (x3136 x2243)))
(define-fun x728 ((x2243 x3634)) Int (ite (= x2243 x2527) x1327 (x443 x2243)))
(define-fun x824 ((x2243 x3634)) Int (ite (= x2655 x2243) x362 (x3136 x2243)))
(define-fun x3340 ((x2243 x3634)) Int (ite x2791 (x2366 x2243) (ite x307 (x2707 x2243) (ite x128 (x728 x2243) (x824 x2243)))))
(define-fun x1714 ((x2243 x3634)) Int (ite x262 (x2656 x2243) (ite x631 (x3136 x2243) (x3340 x2243))))
(define-fun x606 ((x2243 x3634)) Int (ite (= x2478 x2243) 0 (x2483 x2243)))
(define-fun x802 ((x2243 x3634)) Int (ite x2307 (x2483 x2243) (x606 x2243)))
(define-fun x3672 ((x2243 x3634)) Int (ite (= x2243 x1030) x1817 (x802 x2243)))
(define-fun x3082 ((x2243 x3634)) Int (ite (= x2243 x1615) x1817 (x802 x2243)))
(define-fun x1048 ((x2243 x3634)) Int (ite (= x2243 x3751) x1817 (x802 x2243)))
(define-fun x2529 ((x2243 x3634)) Int (ite (= x566 x2243) x1817 (x802 x2243)))
(define-fun x2105 ((x2243 x3634)) Int (ite x2791 (x3672 x2243) (ite x307 (x3082 x2243) (ite x128 (x1048 x2243) (x2529 x2243)))))
(define-fun x1301 ((x2243 x3634)) Int (ite x262 (x2483 x2243) (ite x631 (x802 x2243) (x2105 x2243))))
(define-fun x1729 ((x2243 x3634)) Int (ite (= x2243 x625) x1285 (x3317 x2243)))
(define-fun x1460 ((x2243 x3634)) Int (ite x2307 (x3317 x2243) (ite x3386 (x1729 x2243) (x3317 x2243))))
(define-fun x3043 ((x2243 x3634)) Int (ite (= x1984 x2243) x1327 (x1460 x2243)))
(define-fun x3039 ((x2243 x3634)) Int (ite (= x1984 x2243) x1327 (x1460 x2243)))
(define-fun x1508 ((x2243 x3634)) Int (ite x2791 (x1460 x2243) (ite x307 (x3043 x2243) (ite x128 (x1460 x2243) (x3039 x2243)))))
(define-fun x3255 ((x2243 x3634)) Int (ite x262 (x3317 x2243) (ite x631 (x1460 x2243) (x1508 x2243))))
(define-fun x406 ((x2243 x3634)) Int (ite (= x3890 x2243) x3669 (x3255 x2243)))
(define-fun x64 ((x2243 x3634)) Int (ite (= x2243 x1855) x3669 (x1714 x2243)))
(define-fun x2047 ((x2243 x3634)) Int (ite x3334 (x3255 x2243) (ite x2704 (x406 x2243) (x3255 x2243))))
(define-fun x947 ((x2243 x3634)) Int (ite (= x1869 x2243) 0 (x1301 x2243)))
(define-fun x2544 ((x2243 x3634)) Int (ite x3334 (x1301 x2243) (x947 x2243)))
(define-fun x1939 ((x2243 x3634)) Int (ite x2704 (x1714 x2243) (x64 x2243)))
(define-fun x1747 ((x2243 x3634)) Int (ite (= x3879 x2243) 0 (x1939 x2243)))
(define-fun x1919 ((x2243 x3634)) Int (ite x3334 (x1714 x2243) (x1747 x2243)))
(define-fun x1725 ((x2243 x3634)) Int (ite (= x3954 x2243) x3700 (x279 x2243)))
(define-fun x3582 ((x2243 x3634)) Int (ite x1220 (x279 x2243) (x1725 x2243)))
(define-fun x2427 ((x2243 x3634)) Int (ite (= x2243 x51) 0 (x3582 x2243)))
(define-fun x1453 ((x2243 x3634)) Int (ite x3334 (x279 x2243) (x2427 x2243)))
(define-fun x547 ((x2243 x3634)) Int (ite (= x2574 x2243) x2484 (x2844 x2243)))
(define-fun x1233 ((x2243 x3634)) Int (ite x2307 (x2844 x2243) (ite x3417 (x547 x2243) (x2844 x2243))))
(define-fun x1143 ((x2243 x3634)) Int (ite (= x3127 x2243) x1327 (x1233 x2243)))
(define-fun x3213 ((x2243 x3634)) Int (ite (= x2243 x2562) x1327 (x1233 x2243)))
(define-fun x1282 ((x2243 x3634)) Int (ite x2791 (x1143 x2243) (ite x307 (x3213 x2243) (x1233 x2243))))
(define-fun x760 ((x2243 x3634)) Int (ite x262 (x2844 x2243) (ite x631 (x1233 x2243) (x1282 x2243))))
(define-fun x1770 ((x2243 x3634)) Int (ite (= x2243 x1831) x3700 (x760 x2243)))
(define-fun x3736 ((x2243 x3634)) Int (ite x3334 (x760 x2243) (ite x1220 (x1770 x2243) (x760 x2243))))
(define-fun x667 ((x2243 x3634)) Int (ite (= x2243 x3116) x3038 (x1657 x2243)))
(define-fun x568 ((x2243 x3634)) Int (ite (= x2243 x1469) 0 (x667 x2243)))
(define-fun x3113 ((x2243 x3634)) Int (ite x2571 (x667 x2243) (x568 x2243)))
(define-fun x2894 ((x2243 x3634)) Int (ite (= x495 x2243) x3928 (x1277 x2243)))
(define-fun x1379 ((x2243 x3634)) Int (ite (= x2243 x1031) 0 (x2894 x2243)))
(define-fun x2979 ((x2243 x3634)) Int (ite x3619 (x2894 x2243) (x1379 x2243)))
(define-fun x1883 ((x2243 x3634)) Int (ite (= x2243 x1296) x2387 (x3113 x2243)))
(define-fun x3666 ((x2243 x3634)) Int (ite (= x2243 x409) x1958 (x2979 x2243)))
(define-fun x2706 ((x2243 x3634)) Int (ite x780 (x2785 x2243) (x543 x2243)))
(define-fun x2550 ((x2243 x3634)) Int (ite (= x2243 x869) x3457 (x88 x2243)))
(define-fun x1773 ((x2243 x3634)) Int (ite (= x3210 x2243) x3457 (x2681 x2243)))
(define-fun x3440 ((x2243 x3634)) Int (ite (= x1689 x2243) 0 (x3647 x2243)))
(define-fun x1022 ((x2243 x3634)) Int (ite x1147 (x88 x2243) (ite x983 (x2550 x2243) (x88 x2243))))
(define-fun x1925 ((x2243 x3634)) Int (ite (= x2243 x1720) 0 (x522 x2243)))
(define-fun x2249 ((x2243 x3634)) Int (ite x1147 (x522 x2243) (x1925 x2243)))
(define-fun x2553 ((x2243 x3634)) Int (ite (= x205 x2243) x933 (x311 x2243)))
(define-fun x1904 ((x2243 x3634)) Int (ite x1147 (x311 x2243) (ite x3426 (x2553 x2243) (x311 x2243))))
(define-fun x274 ((x2243 x3634)) Int (ite x983 (x2681 x2243) (x1773 x2243)))
(define-fun x2351 ((x2243 x3634)) Int (ite (= x938 x2243) 0 (x274 x2243)))
(define-fun x564 ((x2243 x3634)) Int (ite x1147 (x2681 x2243) (x2351 x2243)))
(define-fun x83 ((x2243 x3634)) Int (ite (= x2243 x249) x933 (x2225 x2243)))
(define-fun x2695 ((x2243 x3634)) Int (ite x3426 (x2225 x2243) (x83 x2243)))
(define-fun x3282 ((x2243 x3634)) Int (ite (= x181 x2243) 0 (x2695 x2243)))
(define-fun x3772 ((x2243 x3634)) Int (ite x1147 (x2225 x2243) (x3282 x2243)))
(define-fun x465 ((x2243 x3634)) Int (ite x2146 (x3440 x2243) (x3647 x2243)))
(define-fun x3097 ((x2243 x3634)) Int (ite (= x3159 x2243) x2038 (x37 x2243)))
(define-fun x652 ((x2243 x3634)) Int (ite (= x1765 x2243) x2038 (x1641 x2243)))
(define-fun x3151 ((x2243 Int)) Int (ite (= x1435 x2243) 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x2540 x2243)))
(define-fun x2824 ((x2243 Int)) Int (ite (= x2243 x2986) x1973 (x3151 x2243)))
(define-fun x861 ((x2243 Int)) Int (ite (= x2243 x2472) x2202 (x2824 x2243)))
(define-fun x63 ((x2243 Int)) Int (ite (= x2243 x227) x1373 (x861 x2243)))
(define-fun x727 ((x2243 Int)) Int (ite (and (>= x2243 x1435) (< x2243 (+ x1435 0))) (x2526 (+ (- x2243 x1435) 0)) (x63 x2243)))
(define-fun x3231 ((x2243 x3634)) Int (ite (= x3643 x2243) 0 (x1404 x2243)))
(define-fun x1259 ((x2243 x3634)) Int (ite x1152 (x1404 x2243) (x3231 x2243)))
(define-fun x604 ((x2243 x3634)) Int (ite x1152 (x37 x2243) (ite x3418 (x3097 x2243) (x37 x2243))))
(define-fun x3527 ((x2243 x3634)) Int (ite x3418 (x1641 x2243) (x652 x2243)))
(define-fun x3947 ((x2243 x3634)) Int (ite (= x2739 x2243) 0 (x3527 x2243)))
(define-fun x1962 ((x2243 x3634)) Int (ite x1152 (x1641 x2243) (x3947 x2243)))
(define-fun x1652 ((x2243 x3634)) Int (ite (= x2054 x2243) x1215 (x1797 x2243)))
(define-fun x1393 ((x2243 x3634)) Int (ite x2252 (x1797 x2243) (x1652 x2243)))
(define-fun x2049 ((x2243 x3634)) Int (ite (= x1662 x2243) 0 (x1393 x2243)))
(define-fun x2452 ((x2243 x3634)) Int (ite x1152 (x1797 x2243) (x2049 x2243)))
(define-fun x224 ((x2243 x3634)) Int (ite (= x3226 x2243) x1215 (x1635 x2243)))
(define-fun x3955 ((x2243 x3634)) Int (ite x1152 (x1635 x2243) (ite x2252 (x224 x2243) (x1635 x2243))))
(define-fun x58 ((x2243 Int)) Int (ite x3001 (x2540 x2243) (x727 x2243)))
(define-fun x552 ((x2243 Int)) Int (ite (= x1435 x2243) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x58 x2243)))
(define-fun x1100 ((x2243 Int)) Int (ite (= x1448 x2243) x1973 (x552 x2243)))
(define-fun x1946 ((x2243 Int)) Int (ite (= x2243 x1280) x1264 (x1100 x2243)))
(define-fun x2927 ((x2243 x3634)) Int (ite (= x2243 x454) x3057 (x141 x2243)))
(define-fun x2476 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x1454 x2243)))
(define-fun x3784 ((x2243 x3634)) Int (ite (= x3588 x2243) x3025 (x3394 x2243)))
(define-fun x3253 ((x2243 Int)) Int (ite (= x2243 0) 1 (x1454 x2243)))
(define-fun x1903 ((x2243 x3634)) Int (ite (= x2564 x2243) x476 (x1687 x2243)))
(define-fun x1196 ((x2243 Int)) Int (ite (= x2243 0) 1 (x1454 x2243)))
(define-fun x3774 ((x2243 x3634)) Int (ite (= x538 x2243) x932 (x1140 x2243)))
(define-fun x93 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x1454 x2243)))
(define-fun x2039 ((x2243 x3634)) Int (ite x3602 (x2573 x2243) (x2834 x2243)))
(define-fun x137 ((x2243 x3634)) Int (ite x3515 (x1919 x2243) (x3136 x2243)))
(define-fun x907 ((x2243 Int)) Int (ite (= x2243 0) 0 (x2848 x2243)))
(define-fun x2150 ((x2243 Int)) Int (ite (= x2243 0) 0 (x2848 x2243)))
(define-fun x3927 ((x2243 Int)) Int (ite (= 0 x2243) 0 (x2848 x2243)))
(define-fun x503 ((x2243 Int)) Int (ite (= 0 x2243) 0 (x3571 x2243)))
(define-fun x2719 ((x2243 Int)) Int (ite (= x2243 0) 0 (x3571 x2243)))
(define-fun x2790 ((x2243 Int)) Int (ite (= 0 x2243) 0 (x3571 x2243)))
(define-fun x1549 ((x2243 Int)) Int (ite x3483 (x126 x2243) (x3762 x2243)))
(define-fun x2075 ((x2243 Int)) Int (ite x1969 (x126 x2243) (x2189 x2243)))
(define-fun x278 ((x2243 Int)) Int (ite x1675 (x126 x2243) (x3109 x2243)))
(define-fun x911 ((x2243 Int)) Int (ite x1873 (x126 x2243) (x1226 x2243)))
(define-fun x76 ((x2243 Int)) Int (ite x2337 (x1549 x2243) (ite x2412 (x2075 x2243) (ite x1996 (x278 x2243) (x911 x2243)))))
(define-fun x1818 ((x2243 Int)) Int (ite x2578 (x612 x2243) (x3287 x2243)))
(define-fun x481 ((x2243 Int)) Int (ite x1299 (x612 x2243) (x1283 x2243)))
(define-fun x1377 ((x2243 Int)) Int (ite x1151 (x612 x2243) (x1008 x2243)))
(define-fun x1785 ((x2243 Int)) Int (ite x1403 (x612 x2243) (x281 x2243)))
(define-fun x1047 ((x2243 Int)) Int (ite x2338 (x1818 x2243) (ite x3364 (x481 x2243) (ite x3257 (x1377 x2243) (x1785 x2243)))))
(define-fun x3911 ((x2243 Int)) Int (ite x1188 (x3363 x2243) (x3130 x2243)))
(define-fun x3651 ((x2243 Int)) Int (ite x433 (x3363 x2243) (x1234 x2243)))
(define-fun x826 ((x2243 Int)) Int (ite x3129 (x3363 x2243) (x3564 x2243)))
(define-fun x2230 ((x2243 Int)) Int (ite x3869 (x3363 x2243) (x3569 x2243)))
(define-fun x1899 ((x2243 Int)) Int (ite x1308 (x3911 x2243) (ite x1447 (x3651 x2243) (ite x2676 (x826 x2243) (x2230 x2243)))))
(define-fun x1292 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x3948 x2243)))
(define-fun x2046 ((x2243 Int)) Int (ite x2705 (x3948 x2243) (x1292 x2243)))
(define-fun x2983 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x3948 x2243)))
(define-fun x2158 ((x2243 Int)) Int (ite x1119 (x3948 x2243) (x2983 x2243)))
(define-fun x1106 ((x2243 Int)) Int (ite (= x2243 0) 1 (x3948 x2243)))
(define-fun x3370 ((x2243 Int)) Int (ite x828 (x3948 x2243) (x1106 x2243)))
(define-fun x2400 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x3948 x2243)))
(define-fun x726 ((x2243 Int)) Int (ite x985 (x3948 x2243) (x2400 x2243)))
(define-fun x288 ((x2243 Int)) Int (ite x1212 (x2046 x2243) (ite x3406 (x2158 x2243) (ite x663 (x3370 x2243) (x726 x2243)))))
(define-fun x1862 ((x2243 Int)) Int (ite (= x2243 0) 1 (x322 x2243)))
(define-fun x1440 ((x2243 Int)) Int (ite x1318 (x322 x2243) (x1862 x2243)))
(define-fun x1542 ((x2243 Int)) Int (ite (= x2243 0) 1 (x322 x2243)))
(define-fun x2984 ((x2243 Int)) Int (ite x641 (x322 x2243) (x1542 x2243)))
(define-fun x3407 ((x2243 Int)) Int (ite (= x2243 0) 1 (x322 x2243)))
(define-fun x3242 ((x2243 Int)) Int (ite x561 (x322 x2243) (x3407 x2243)))
(define-fun x3258 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x322 x2243)))
(define-fun x3547 ((x2243 Int)) Int (ite x496 (x322 x2243) (x3258 x2243)))
(define-fun x127 ((x2243 Int)) Int (ite x2096 (x1440 x2243) (ite x420 (x2984 x2243) (ite x989 (x3242 x2243) (x3547 x2243)))))
(define-fun x542 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x761 x2243)))
(define-fun x3703 ((x2243 Int)) Int (ite x1983 (x761 x2243) (x542 x2243)))
(define-fun x418 ((x2243 Int)) Int (ite (= x2243 0) 1 (x761 x2243)))
(define-fun x3382 ((x2243 Int)) Int (ite x3593 (x761 x2243) (x418 x2243)))
(define-fun x2523 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x761 x2243)))
(define-fun x3438 ((x2243 Int)) Int (ite x3510 (x761 x2243) (x2523 x2243)))
(define-fun x3847 ((x2243 Int)) Int (ite (= 0 x2243) 1 (x761 x2243)))
(define-fun x1475 ((x2243 Int)) Int (ite x171 (x761 x2243) (x3847 x2243)))
(define-fun x753 ((x2243 Int)) Int (ite x2370 (x3703 x2243) (ite x243 (x3382 x2243) (ite x2714 (x3438 x2243) (x1475 x2243)))))
(define-fun x821 ((x2243 Int)) Int (ite (= 128 x2243) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x3420 x2243)))
(define-fun x1223 ((x2243 Int)) Int (ite (= 132 x2243) x897 (x821 x2243)))
(define-fun x970 ((x2243 Int)) Int (ite (= 164 x2243) x1173 (x1223 x2243)))
(define-fun x1426 ((x2243 Int)) Int (ite (= 128 x2243) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x896 x2243)))
(define-fun x798 ((x2243 Int)) Int (ite (= 132 x2243) x897 (x1426 x2243)))
(define-fun x3660 ((x2243 Int)) Int (ite (= 164 x2243) x501 (x798 x2243)))
(define-fun x594 ((x2243 Int)) Int (ite (= x2243 128) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x541 x2243)))
(define-fun x2532 ((x2243 Int)) Int (ite (= x2243 132) x897 (x594 x2243)))
(define-fun x2285 ((x2243 Int)) Int (ite (= 164 x2243) x1875 (x2532 x2243)))
(define-fun x2545 ((x2243 Int)) Int (ite (= 0 x2243) x3384 (x234 x2243)))
(define-fun x3333 ((x2243 Int)) Int (ite (= x2243 0) x3796 (x234 x2243)))
(define-fun x776 ((x2243 Int)) Int (ite (= 0 x2243) x2908 (x234 x2243)))
(define-fun x304 ((x2499 Int) (x3505 Int) (x1799 Int) (x142 Int)) Bool (=> (and (<= x2499 x1799) (<= 0 x3505) (>= x2499 0) (>= x142 x3505)) (>= (x1801 x1799 x142) (x1801 x2499 x3505))))
(define-fun x248 ((x2499 Int) (x3505 Int) (x1799 Int) (x142 Int)) Bool (=> (= x1799 x2499) (= (- (x1801 x2499 x3505) (x1801 x1799 x142)) (x1801 x2499 (- x3505 x142)))))
(define-fun x3448 ((x2499 Int)) Bool (=> (and (not (= 2858086653 x2499)) (not (= x2499 2234127075)) (not (= 94482241256677223720308674365448432550660581809977780367718865401173155774464 x2499)) (not (= x2499 4294967296)) (not (= x2499 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= x2499 56879788782001134333110164298630386859921104006521148999079851869125721718784)) (not (= 2281136899 x2499)) (not (= 2391746891 x2499)) (not (= 2835717307 x2499)) (not (= 1830112933 x2499)) (not (= x2499 115792089237316195423570985008687907853269984665640564039457)) (not (= 989455977 x2499)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2499)) (not (= x2499 60231946789637257468838019015344037944473233080083133266033501538020963123200)) (not (= x2499 2459953569)) (not (= 988262939 x2499)) (not (= x2499 1832238993)) (not (= x2499 1856199391)) (not (= x2499 3320572652)) (not (= 89522461602318961266474185744428785802019839140862557341176434972013554040832 x2499)) (not (= 405663989 x2499)) (not (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x2499)) (not (= x2499 310377888)) (not (= 2217467699 x2499)) (not (= 3199929250 x2499)) (not (= 3583811254 x2499)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2499)) (not (= x2499 26675680369413430104207330802600748686362808878094982966429686717365230764032)) (not (= 2229018723 x2499)) (not (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x2499)) (not (= 1857877511 x2499)) (not (= x2499 64481368622683354557555711714629296119639875834729404553039716062438103187456)) (not (= 1000000000000000000 x2499)) (not (= x2499 2691771752)) (> x2499 10000) (not (= 1931414571 x2499)) (not (= 2929553584 x2499)) (not (= x2499 2861565780)) (not (= x2499 2678788150)) (not (= x2499 1466279372)) (not (= x2499 1265048712)) (not (= 1865448899 x2499)) (not (= 76833804140862540057647519496925185374644862498684814347804924264468996685824 x2499)) (not (= x2499 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x2499 1590201465)) (not (= 2796547477 x2499)) (not (= x2499 24044834009420335638544845215851342251227478490780828673611325350056707489792)) (not (= x2499 114138022719912475680867045629478960338713192110453415424194996738542475935744)) (not (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x2499)) (not (= x2499 2109788624)) (not (= x2499 2991318663)) (not (= x2499 79266373)) (not (= x2499 44970383829727661923261016617897238973146650624978361361029103362720544063488)) (not (= 129058084 x2499)) (not (= 4233614559 x2499)) (not (= 1461501637330902918203684832716283019655932542975 x2499)) (not (= 1475734106 x2499)) (not (= 1461501637330902918203684832716283019655932542976 x2499)) (not (= 18446744073709551615 x2499))) (not ((_ is x2353) (x1618 x2499)))))
(assert (= x3309 (=> (and (= x2902 x2119) (= x2582 x2925)) x2645)))
(assert (x216 x2957 (- x2823 x3849)))
(assert (x248 x294 x77 x3574 x2957))
(assert (x2421 x2061))
(assert (= (x1991 (x356 x2773 1)) (+ (x1991 x2773) 1)))
(assert (= (and (not x255) x1071) x1391))
(assert (= (and (=> (and (not x2825) (and (= 0 x3551) (= x3718 x1486))) x345) (=> (and (and (and (<= x536 1461501637330902918203684832716283019655932542975) (= x1424 (x356 x3059 1)) (= (ite (< 1 x3905) (not (= 0 x536)) (< 1 x3905)) x3835) (= x3059 (x2947 (x1618 x1486) x3889 0)) (>= x536 0) (= x536 (x564 x1424)) (> 1461501637330902918203684832716283019655932542976 x536)) (or (and x3835 (and (= x3437 (x2947 (x1618 x536) x3889 0)) (= x125 (x2249 x584)) (>= x125 0) (= (> x771 x125) x3398) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x125) (= x701 (not x3398)) (= (x356 x3437 2) x584))) (and (not x3835) (= x3835 x701)))) x2825) x1774)) x1209))
(assert (x216 x1395 x106))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x2746 (+ (* 1461501637330902918203684832716283019655932542976 (x3413 x2746 1461501637330902918203684832716283019655932542976)) (x2732 x2746 1461501637330902918203684832716283019655932542976)))) (x1688 x2746 1461501637330902918203684832716283019655932542976) (x1527 x2746 1461501637330902918203684832716283019655932542976) (x747 x2746 1461501637330902918203684832716283019655932542976)))
(assert (x216 x3849 (- x1184 x3792)))
(assert (x2421 x2990))
(assert (x2406 (- x3792 x3185)))
(assert (x2421 x1930))
(assert (= x2079 (or x196 x3426)))
(assert (x2421 x467))
(assert (x2421 x2882))
(assert (x2421 x936))
(assert (x248 x2823 x2957 x1624 x2222))
(assert (x2406 (- x106 x2222)))
(assert (x216 x3792 (- x3909 x3574)))
(assert (x304 x1033 x106 x77 x294))
(assert (x2406 (- x2384 x2751)))
(assert (x3448 x2662))
(assert (x2421 x3209))
(assert (= (and x2679 x1263) x2571))
(assert (= x3572 (and x3573 x504)))
(assert (x2421 x3523))
(assert (= (x1991 (x356 x1336 1)) (+ 1 (x1991 x1336))))
(assert (= x3237 (or x3698 x983)))
(assert (x2421 x2410))
(assert (= (x1618 3199929250) (x2353 3199929250)))
(assert (x248 x1111 x647 x2823 x2957))
(assert (x248 x1395 x106 x3792 x3909))
(assert (x2421 x1755))
(assert (= (and x440 x2765) x2221))
(assert (x2421 x680))
(assert (x2421 x2999))
(assert (= x1512 (and x122 x2594)))
(assert (x2421 x2419))
(assert (= x2858 (or x2920 x511)))
(assert (x2421 x3296))
(assert (= x602 (and x2346 (not x3929))))
(assert (x2406 (- x647 x2957)))
(assert (x216 x1624 (- x2222 x1111)))
(assert (and (x2912 1000000000000000000 x3888) (x1712 1000000000000000000 x3888) (x804 1000000000000000000 x3888) (x3035 1000000000000000000 x3888) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3888) (- (* x3888 1000000000000000000) (* x3888 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3888 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x3888 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x3888 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x3888 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x3888 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x3888) (= (* x3888 1000000000000000000) (x1801 1000000000000000000 x3888))))
(assert (x248 x3909 x3792 x1624 x2222))
(assert (= (x2353 4294967296) (x1618 4294967296)))
(assert (x2421 x2441))
(assert (x216 x3185 (- x2751 x3574)))
(assert (= x1954 (and x698 x2246)))
(assert (x2421 x3176))
(assert (= (and x931 x1777) x1076))
(assert (x248 x106 x2384 x3792 x3909))
(assert (x248 x106 x2384 x1111 x647))
(assert (=> (>= 10000 x834) (= (x2353 x834) (x1618 x834))))
(assert (x304 x294 x77 x3909 x3792))
(assert (= x2467 (=> (and (= x699 x2492) (= 0 x3919) (= x3158 x3935)) x2488)))
(assert (x248 x2957 x3574 x1395 x106))
(assert (= (and (not x3599) x582) x3885))
(assert (x1177 x2340 x1978))
(assert (x2421 x2883))
(assert (= (+ 1 (x1991 x3041)) (x1991 (x356 x3041 1))))
(assert (x2421 x1520))
(assert (x2421 x3064))
(assert (= (and (not x124) x2486) x1709))
(assert (= (x1991 (x2353 76833804140862540057647519496925185374644862498684814347804924264468996685824)) 76833804140862540057647519496925185374644862498684814347804924264468996685824))
(assert (x2421 x2442))
(assert (= (and (not x1936) x107) x256))
(assert (x2406 (- x1395 x1624)))
(assert (= (x1991 (x356 x2851 2)) (+ (x1991 x2851) 2)))
(assert (= (and x1073 (not x3971)) x972))
(assert (x248 x2222 x1624 x2957 x2823))
(assert (x216 x1184 (- x3849 x2384)))
(assert (x2421 x3752))
(assert (= (and (not x3983) x3606) x792))
(assert (= x1342 (=> (and (or (and x1808 (and (and (= x3429 (x3381 (- x2924 x2284))) (>= 1461501637330902918203684832716283019655932542975 x2284) (> 1461501637330902918203684832716283019655932542976 x2284) (<= 0 x2284) (= x2284 (x604 x3921)) (= x3735 (> x3429 0))) (or (and x3735 (and (= x1242 x3) (>= x53 0) (= x1963 (x2947 (x1618 x2924) x1245 0)) (= (x3783 (+ x2715 96)) x1242) (= (x2452 x1963) x53) (= x743 x2924) (<= x53 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x53))) (and (and (= x3 x3863) (= (x3783 (+ x2715 96)) x3863) (= x2924 x743)) (not x3735))))) (and (not x1808) (and (and (= x2043 (= 0 x775)) (> 1461501637330902918203684832716283019655932542976 x775) (= x775 (x604 x3921)) (>= x775 0) (>= 1461501637330902918203684832716283019655932542975 x775)) (or (and (and (= x2198 x743) (= x2198 (x3955 x1682)) (<= 0 x2198) (= x1639 (x3783 (+ x2715 96))) (= x1682 (x356 x3921 1)) (< x2198 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x2198) (= x1639 x3)) (not x2043)) (and x2043 (and (= x3614 x3) (= x743 x1973) (= x3614 (x3783 (+ 96 x2715))))))))) (= (ite (< x1060 x3905) (not (= 0 x2924)) (> x3905 x1060)) x1808)) x2638)))
(assert (= (and x280 x3590) x1700))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x3470 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3413 x3470 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2732 x3470 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1688 x3470 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1527 x3470 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x747 x3470 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (and x1532 (not x2007)) x3883))
(assert (x2406 x1558))
(assert (= (x1991 (x356 x3357 1)) (+ 1 (x1991 x3357))))
(assert (x248 x3792 x3909 x1111 x647))
(assert (x2406 (- x1033 x647)))
(assert (= x2578 (or x3044 x3099 x941 x1636 x3430 x2314)))
(assert (= x2439 (and x3906 x1537)))
(assert (= x2524 (or x80 x708)))
(assert (x3448 x2077))
(assert (x248 x3792 x3909 x1184 x3849))
(assert (= x1920 (x1991 (x1618 x1920))))
(assert (x304 x2957 x2823 x1111 x647))
(assert (= (x1991 (x356 x2739 1)) (+ 1 (x1991 x2739))))
(assert (x2421 x3872))
(assert (x3448 x1118))
(assert (x2421 x3272))
(assert (x2421 x2156))
(assert (x2421 x3734))
(assert (= (x1618 2229018723) (x2353 2229018723)))
(assert (= x2915 (and x3693 (not x1943))))
(assert (x2421 x1948))
(assert (x2421 x646))
(assert (x2421 x3201))
(assert (= (or x2796 x607 x2709) x2459))
(assert (= x1774 (and (=> x701 x2048) (=> (and (and (= x3718 x536) (= x3551 1)) (not x701)) x345))))
(assert (x216 x1184 (- x3849 x1111)))
(assert (x2406 x1184))
(assert (x216 x1111 (- x647 x2222)))
(assert (= x906 (=> (= x2963 (> x914 0)) (and (=> (and x2963 (and (and (= 0 x2382) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2382) (<= 0 x3169) (<= x3169 1461501637330902918203684832716283019655932542975) (< x3169 1461501637330902918203684832716283019655932542976) (= x1450 (x2947 (x1618 x1507) x1317 0)) (= x3169 (x365 x832)) (= x84 (ite (> x3905 0) (not (= 0 x3169)) (> x3905 0))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3905) (>= x2382 0) (= (x794 x21) x2382) (not (= 0 x1507)) (= x21 (x356 x1450 2)) (= (x356 x1317 1) x832) (>= x3905 0)) (or (and (and (= x3088 (< x2187 x914)) (= x3788 (x2947 (x1618 x3169) x1317 0)) (= (not x3088) x3971) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2187) (= (x356 x3788 2) x493) (= (x794 x493) x2187) (>= x2187 0)) x84) (and (= x84 x3971) (not x84))))) x2124) (=> (not x2963) x251)))))
(assert (x248 x2957 x3574 x77 x294))
(assert (x216 x1111 (- x647 x2823)))
(assert (= x1937 (x1991 (x1618 x1937))))
(assert (x2421 x1145))
(assert (= x991 (or x2560 x1986)))
(assert (x2406 (- x2823 x3792)))
(assert (x216 x77 (- x294 x3909)))
(assert (= x1668 (not (and (= (x356 x3726 1) x148) (<= x717 1461501637330902918203684832716283019655932542975) (= x3726 (x2947 (x1618 x3493) x2033 0)) (= (x2039 x148) x717) (> 1461501637330902918203684832716283019655932542976 x717) (<= 0 x717)))))
(assert (x2421 x1889))
(assert (= x3770 (x1991 (x1618 x3770))))
(assert (x2421 x2209))
(assert (x304 x2751 x3185 x3574 x2957))
(assert (x304 x2384 x106 x77 x294))
(assert (x304 x2222 x1624 x1395 x106))
(assert (x216 x106 (- x1033 x2384)))
(assert (x248 x1111 x647 x3574 x2957))
(assert (= x2488 (=> (and (= x3506 x3158) (= x3497 x1832) (= x114 x2955) (= x413 x699) (= x811 x3919)) x1987)))
(assert (x2421 x2192))
(assert (= x3531 (=> (and (= x2240 0) (= x1407 x898)) x1011)))
(assert (=> (<= x1658 10000) (= (x2353 x1658) (x1618 x1658))))
(assert (= (x1991 (x2353 2229018723)) 2229018723))
(assert (x2421 x3782))
(assert (=> (>= 10000 x2662) (= (x1618 x2662) (x2353 x2662))))
(assert (= x3730 (and x2092 x1897)))
(assert (x248 x3574 x2957 x3792 x3909))
(assert (= x3275 (=> (and (= 0 x851) (= x2546 x1588)) x1129)))
(assert (x2421 x916))
(assert (= (and x451 x2962) x3941))
(assert (x216 x3849 (- x1184 x3185)))
(assert (and (x2912 1000000000000000000 x42) (x1712 1000000000000000000 x42) (x804 1000000000000000000 x42) (x3035 1000000000000000000 x42) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x42) (- (* x42 1000000000000000000) (* x42 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x42 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x42 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x42 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x42 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x42 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x42) (= (* x42 1000000000000000000) (x1801 1000000000000000000 x42))))
(assert (x2421 x1228))
(assert (x216 x3574 (- x2957 x3792)))
(assert (x2421 x1284))
(assert (x304 x294 x77 x2222 x1624))
(assert (= x974 (x1991 (x1618 x974))))
(assert (= x3171 (and x2556 (not x3578))))
(assert (= (x1991 (x356 x215 2)) (+ (x1991 x215) 2)))
(assert (x304 x3909 x3792 x3185 x2751))
(assert (x2421 x133))
(assert (x2421 x3216))
(assert (x2421 x3522))
(assert (= x627 (and x3048 x2959)))
(assert (x2421 x616))
(assert (x2421 x2972))
(assert (x304 x3185 x2751 x3849 x1184))
(assert (x2406 (- x1624 x3792)))
(assert (x2421 x3373))
(assert (x2421 x3024))
(assert (x304 x2957 x3574 x2384 x106))
(assert (x2421 x2930))
(assert (x2421 x3826))
(assert (x2421 x2129))
(assert (x2421 x3528))
(assert (= x582 (and x2117 x730)))
(assert (x2421 x397))
(assert (= x2205 (and x1422 x815)))
(assert (x2406 (- x1111 x2384)))
(assert (= 79266373 (x1991 (x2353 79266373))))
(assert (= (x1618 115792089237316195423570985008687907853269984665640564039457) (x2353 115792089237316195423570985008687907853269984665640564039457)))
(assert (x2421 x149))
(assert (= x115 (or x214 x1468 x1632 x245)))
(assert (x3313 x183))
(assert (x2421 x529))
(assert (x2421 x193))
(assert (x2421 x3583))
(assert (x2421 x3281))
(assert (x2421 x1909))
(assert (= x1812 (and x2535 x957)))
(assert (x248 x106 x1395 x106 x1033))
(assert (x2421 x2988))
(assert (= (x1991 (x1618 x793)) x793))
(assert (x3448 x2699))
(assert (x2421 x2812))
(assert (x2406 (- x647 x3849)))
(assert (x216 x2384 (- x106 x3849)))
(assert (x2406 (- x3849 x2823)))
(assert (x248 x3792 x3909 x2384 x106))
(assert (x2421 x2968))
(assert (= x1849 (and (not x3625) x2809)))
(assert (x2406 (- x3574 x647)))
(assert (x216 x3849 (- x1184 x1111)))
(assert (x248 x1624 x2222 x2957 x2823))
(assert (= (x1991 (x1618 x3217)) x3217))
(assert (x2421 x1856))
(assert (x248 x2957 x3574 x1033 x106))
(assert (= x80 (and x1499 x1627)))
(assert (x2421 x3716))
(assert (x2406 (- x3849 x3909)))
(assert (x2421 x2303))
(assert (x2421 x269))
(assert (and (x2912 1000000000000000000 x819) (x1712 1000000000000000000 x819) (x804 1000000000000000000 x819) (x3035 1000000000000000000 x819) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x819) (- (* x819 1000000000000000000) (* x819 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x819 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x819 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x819 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x819 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x819 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x819) (= (* x819 1000000000000000000) (x1801 1000000000000000000 x819))))
(assert (x304 x77 x294 x3849 x1184))
(assert (x2421 x2755))
(assert (= (and (not x11) x2736) x123))
(assert (x2421 x407))
(assert (x304 x106 x1395 x1033 x106))
(assert (x216 x3792 (- x3909 x647)))
(assert (x3448 x2280))
(assert (x216 x1033 (- x106 x77)))
(assert (x2098 x1442))
(assert (x2421 x2042))
(assert (and (x3187 x777 1000000000000000000) (x2566 x777 1000000000000000000) (x878 x777 1000000000000000000) (x3266 x777 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x777)) (and (>= x777 (* 1000000000000000000 (x3413 x777 1000000000000000000))) (> (* (x3413 x777 1000000000000000000) 1000000000000000000) (- x777 1000000000000000000))))))
(assert (x2421 x3497))
(assert (x2098 x2627))
(assert (= (or x2503 x1954 x120 x2539 x3645 x3399) x1318))
(assert (x2421 x3970))
(assert (x2609 x1605))
(assert (x248 x3849 x1184 x77 x294))
(assert (= (x1618 1461501637330902918203684832716283019655932542975) (x2353 1461501637330902918203684832716283019655932542975)))
(assert (x2421 x1438))
(assert (x3448 x2484))
(assert (x248 x106 x1033 x106 x1395))
(assert (x304 x2957 x3574 x1395 x106))
(assert (x2421 x1325))
(assert (= (x1991 (x356 x3842 1)) (+ (x1991 x3842) 1)))
(assert (x2421 x1375))
(assert (=> (>= 10000 x2484) (= (x2353 x2484) (x1618 x2484))))
(assert (x2406 x2166))
(assert (= (or x3878 x1043 x389 x3572 x1416 x526) x2312))
(assert (= (and (not x1124) x2305) x2106))
(assert (x2421 x1480))
(assert (x3448 x3669))
(assert (x2421 x2487))
(assert (x2421 x2180))
(assert (x304 x1033 x106 x1395 x106))
(assert (x2421 x2332))
(assert (x2421 x1248))
(assert (x2406 (- x3792 x294)))
(assert (x2421 x3982))
(assert (x216 x3909 (- x3792 x2222)))
(assert (= x2067 (x1991 (x1618 x2067))))
(assert (= x1800 (and x284 (not x3518))))
(assert (x2421 x1354))
(assert (x2421 x434))
(assert (x2421 x3493))
(assert (x3448 x1316))
(assert (x2421 x2371))
(assert (= x1778 (or x1300 x803)))
(assert (= (and (not x2306) x2423) x2511))
(assert (x3448 x3641))
(assert (= (=> (or (and (not x2535) (= x741 x2535)) (and x2535 (and (= (= x2265 0) x2004) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x2067) (= x741 (not x2004)) (= (x2947 (x1618 x2067) (x2353 155) 0) x2027) (>= x2265 0) (>= 1461501637330902918203684832716283019655932542975 x2265) (= (x356 x2027 1) x1162) (= (x2181 x1162) x2265) (< x2265 1461501637330902918203684832716283019655932542976)))) x1964) x908))
(assert (x2406 (- x647 x106)))
(assert (x2406 x1111))
(assert (x304 x2751 x3185 x3849 x1184))
(assert (x248 x77 x294 x2957 x2823))
(assert (x304 x2823 x2957 x3849 x1184))
(assert (and (x3187 x1642 1000000000000000000) (x2566 x1642 1000000000000000000) (x878 x1642 1000000000000000000) (x3266 x1642 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x1642)) (and (>= x1642 (* 1000000000000000000 (x3413 x1642 1000000000000000000))) (> (* (x3413 x1642 1000000000000000000) 1000000000000000000) (- x1642 1000000000000000000))))))
(assert (x2421 x2842))
(assert (x3448 x933))
(assert (x3448 x3770))
(assert (= (x1991 (x356 x938 1)) (+ (x1991 x938) 1)))
(assert (= (and x2766 x1495) x3040))
(assert (= (x1991 (x2353 2281136899)) 2281136899))
(assert (x2406 (- x3792 x1033)))
(assert (x2098 x2263))
(assert (x2421 x1798))
(assert (= (or x2624 x2673) x238))
(assert (x2421 x2758))
(assert (x248 x1111 x647 x106 x2384))
(assert (= x2865 (and x2941 x188)))
(assert (x2421 x2438))
(assert (x1526 x2746))
(assert (= (and x3518 x284) x3714))
(assert (x216 x2222 (- x1624 x2384)))
(assert (= x1916 (not (and (not x649) (not x2093)))))
(assert (x2421 x1170))
(assert (= (or x3375 x694) x2796))
(assert (x248 x106 x1395 x1033 x106))
(assert (x216 x1033 (- x106 x3574)))
(assert (x2421 x3616))
(assert (=> (<= x1065 10000) (= (x1618 x1065) (x2353 x1065))))
(assert (= (x2353 2861565780) (x1618 2861565780)))
(assert (x248 x2823 x2957 x1111 x647))
(assert (x2421 x1851))
(assert (x2421 x1252))
(assert (x2406 (- x77 x1624)))
(assert (x2421 x2435))
(assert (x2421 x3421))
(assert (x216 x647 (- x1111 x3792)))
(assert (x2421 x1988))
(assert (x2406 1000000000000000000))
(assert (= (or x3334 x2761) x2))
(assert (x216 x647 (- x1111 x1033)))
(assert (x2421 x178))
(assert (=> (<= x1611 10000) (= (x2353 x1611) (x1618 x1611))))
(assert (= (x1618 2991318663) (x2353 2991318663)))
(assert (x2406 (- x3792 x106)))
(assert (x2406 (- x1184 x3574)))
(assert (x248 x3574 x2957 x1184 x3849))
(assert (x3448 x793))
(assert (x304 x106 x2384 x3849 x1184))
(assert (= x1675 (or x979 x61 x2160 x1260 x3408)))
(assert (x248 x2957 x2823 x294 x77))
(assert (x248 x106 x2384 x647 x1111))
(assert (= x1719 (or x820 x3040)))
(assert (= x1403 (or x1647 x103 x328 x1717 x3087)))
(assert (x2421 x1217))
(assert (x2421 x3467))
(assert (=> (<= x2419 10000) (= (x1618 x2419) (x2353 x2419))))
(assert (= (and x512 (not x273)) x3033))
(assert (x2421 x3453))
(assert (x2421 x112))
(assert (x2421 x1791))
(assert (= (or x2457 x167) x220))
(assert (= (or x3675 x627 x1967 x949 x756) x3510))
(assert (x304 x1624 x2222 x1111 x647))
(assert (x2098 x1978))
(assert (x2421 x3476))
(assert (= x635 (and x3443 (not x383))))
(assert (x2406 (- x3574 x1624)))
(assert (= x1823 (and x8 x3197)))
(assert (x248 x3849 x1184 x106 x1395))
(assert (x2406 (- x1184 x294)))
(assert (x248 x3574 x2957 x1111 x647))
(assert (x2421 x2204))
(assert (= x800 (or x3054 x3299)))
(assert (= (x1991 (x356 x2949 2)) (+ 2 (x1991 x2949))))
(assert (= x3795 (and x3037 x3702)))
(assert (x2421 x1049))
(assert (x3448 x2620))
(assert (x2406 (- x77 x3909)))
(assert (=> (>= 10000 x3174) (= (x2353 x3174) (x1618 x3174))))
(assert (x304 x3849 x1184 x77 x294))
(assert (= x1987 (=> (and (= (= 0 x811) x935) (or x935 (not x935))) x374)))
(assert (= (and (not x2600) x223) x3436))
(assert (x2421 x1395))
(assert (x2421 x2823))
(assert (x216 x106 (- x1033 x2751)))
(assert (x3244 x2818))
(assert (x2406 (- x2222 x106)))
(assert (=> (>= 10000 x1462) (= (x1618 x1462) (x2353 x1462))))
(assert (= (and x2501 (not x2333)) x3541))
(assert (x248 x3574 x2957 x77 x294))
(assert (x2421 x1606))
(assert (x2421 x2596))
(assert (= x3554 (or x2252 x644)))
(assert (x304 x2751 x3185 x2384 x106))
(assert (x248 x294 x77 x2384 x106))
(assert (= (or (and x208 x1763) (and x905 (not x1459))) x1985))
(assert (x2421 x1898))
(assert (x304 x1111 x647 x3849 x1184))
(assert (x216 x106 (- x2384 x3574)))
(assert (=> (<= x368 10000) (= (x1618 x368) (x2353 x368))))
(assert (x2406 (- x1395 x2823)))
(assert (x216 x106 (- x2384 x2751)))
(assert (x248 x2384 x106 x2823 x2957))
(assert (x2421 x1093))
(assert (x304 x1111 x647 x3574 x2957))
(assert (x2421 x879))
(assert (x2421 x3613))
(assert (= (and x2213 x354) x1351))
(assert (x2421 x71))
(assert (x216 x106 (- x1033 x294)))
(assert (x2406 (- x77 x3849)))
(assert (= (and x498 x1153) x3609))
(assert (x2421 x176))
(assert (x304 x2384 x106 x3185 x2751))
(assert (x2406 (- x3574 x2384)))
(assert (x304 x77 x294 x2384 x106))
(assert (= x678 (and x3717 x3757)))
(assert (= (or x818 x642) x2482))
(assert (x2421 x500))
(assert (= (and (not x203) x999) x3690))
(assert (= x735 (and (not x1841) x40)))
(assert (x304 x2751 x3185 x2222 x1624))
(assert (x2406 x106))
(assert (x3448 x1937))
(assert (x2421 x637))
(assert (x2421 x232))
(assert (=> (>= 10000 x1822) (= (x1618 x1822) (x2353 x1822))))
(assert (x2406 (- x2384 x3574)))
(assert (= (x1991 (x356 x3315 1)) (+ (x1991 x3315) 1)))
(assert (x2098 x2320))
(assert (= x360 (and x1897 (not x2092))))
(assert (x2406 (- x77 x2384)))
(assert (x2421 x755))
(assert (x1526 x2057))
(assert (x2421 x2747))
(assert (x216 x2823 (- x2957 x1624)))
(assert (= (x1991 (x1618 x2968)) x2968))
(assert (=> (>= 10000 x1215) (= (x1618 x1215) (x2353 x1215))))
(assert (x2421 x3629))
(assert (x2421 x3251))
(assert (x2406 (- x2823 x3574)))
(assert (x216 x106 (- x1033 x3574)))
(assert (x2421 x3600))
(assert (= x1924 (and (not x451) x2962)))
(assert (= (and (not x1314) x3793) x1016))
(assert (= (or x1370 x3436) x1897))
(assert (x3448 x1479))
(assert (x216 x2823 (- x2957 x3849)))
(assert (x2421 x3796))
(assert (x216 x2222 x1624))
(assert (x2421 x2058))
(assert (= x722 (or x171 x1338)))
(assert (x2421 x346))
(assert (= (or x135 x408 x3415 x3139 x285) x433))
(assert (= x2556 (and x2333 x2501)))
(assert (x2421 x1113))
(assert (= x117 (and (=> (and (and (= x1868 x1999) (= x3338 x3808) (= x2968 x1791)) x2575) x3635) (=> (and (not x2575) (and (= x3812 1) (= x636 x1999))) x2345))))
(assert (x2421 x3865))
(assert (= (x1618 2109788624) (x2353 2109788624)))
(assert (x2406 (- x2823 x647)))
(assert (x2406 (- x1033 x2823)))
(assert (x248 x106 x1033 x106 x2384))
(assert (= (x1991 (x2353 310377888)) 310377888))
(assert (x216 x647 (- x1111 x2384)))
(assert (= (=> (and (= x3385 x2717) (= x507 x1723)) x2966) x2635))
(assert (x248 x106 x1033 x2957 x3574))
(assert (x2421 x516))
(assert (x1192 x3583))
(assert (= x2002 (and x3898 (not x1319))))
(assert (x248 x2222 x1624 x1111 x647))
(assert (x2406 (- x2222 x294)))
(assert (= x2835 (or x3809 x889)))
(assert (= (and (not x2145) x2617) x2024))
(assert (x2421 x3068))
(assert (x2421 x2729))
(assert (= (=> (= x3654 x1827) x101) x836))
(assert (x2421 x2698))
(assert (x2421 x3533))
(assert (=> (>= 10000 x1705) (= (x1618 x1705) (x2353 x1705))))
(assert (x2421 x3779))
(assert (= x411 (and (not x3371) x1272)))
(assert (= (x2353 50292402827334880472107169365697159231523039388532301717704428044325102813184) (x1618 50292402827334880472107169365697159231523039388532301717704428044325102813184)))
(assert (x304 x2222 x1624 x3574 x2957))
(assert (x2421 x3014))
(assert (x2421 x2000))
(assert (x248 x3849 x1184 x106 x2384))
(assert (x2421 x1621))
(assert (= x3855 (and (=> (and (and (= x1317 x2033) (= x3770 x624) (= x3469 x3493)) x3785) x1668) (=> (and (not x3785) (and (= x2077 x3469) (= x1734 1))) x2644))))
(assert (= (x1991 (x356 x3059 1)) (+ (x1991 x3059) 1)))
(assert (x2421 x2281))
(assert (= (and x732 (not x1138)) x533))
(assert (= (x1991 (x356 x2414 1)) (+ (x1991 x2414) 1)))
(assert (= x2904 (and (not x3517) x2461)))
(assert (x2098 x1491))
(assert (= (and x582 x3599) x1388))
(assert (x216 x2384 (- x106 x2957)))
(assert (x2421 x764))
(assert (= x2696 (and (not x1867) x3160)))
(assert (= x550 (or x2317 x3696)))
(assert (= 1475734106 (x1991 (x2353 1475734106))))
(assert (= (and x1099 x448) x1444))
(assert (x216 x106 (- x2384 x1395)))
(assert (x2421 x1742))
(assert (x2098 x2957))
(assert (= x2287 (x1991 (x1618 x2287))))
(assert (= (x1991 (x1618 x1285)) x1285))
(assert (and (x2912 1000000000000000000 x2403) (x1712 1000000000000000000 x2403) (x804 1000000000000000000 x2403) (x3035 1000000000000000000 x2403) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x2403) (- (* x2403 1000000000000000000) (* x2403 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x2403 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x2403 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2403 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x2403 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x2403 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x2403) (= (* x2403 1000000000000000000) (x1801 1000000000000000000 x2403))))
(assert (x216 x1184 (- x3849 x3909)))
(assert (x2421 x3641))
(assert (= (x1991 (x356 x1405 1)) (+ (x1991 x1405) 1)))
(assert (= x3587 (=> (and (= x575 x3882) (= x1284 x1820)) x2504)))
(assert (= (x1991 (x2353 56879788782001134333110164298630386859921104006521148999079851869125721718784)) 56879788782001134333110164298630386859921104006521148999079851869125721718784))
(assert (= x3650 (and x1253 x2176)))
(assert (x248 x2751 x3185 x106 x1033))
(assert (x2406 x3792))
(assert (x3448 x1507))
(assert (= x534 (and x108 (not x2391))))
(assert (x2421 x3903))
(assert (= x3767 (and (=> (and (not x1992) (and (= x362 x2569) (= 0 x1452))) x109) (=> (and (and (and (= (ite (> x3905 1) (not (= 0 x1170)) (< 1 x3905)) x1330) (<= x1170 1461501637330902918203684832716283019655932542975) (= x1170 (x3136 x1135)) (= x1135 (x356 x3842 1)) (= (x2947 (x1618 x2569) x218 0) x3842) (< x1170 1461501637330902918203684832716283019655932542976) (>= x1170 0)) (or (and x1330 (and (= x3691 (x356 x3146 2)) (= (x802 x3691) x3615) (<= 0 x3615) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3615) (= (x2947 (x1618 x1170) x218 0) x3146) (= x556 (< x3615 x1817)) (= x2391 (not x556)))) (and (= x1330 x2391) (not x1330)))) x1992) x1629))))
(assert (x2421 x946))
(assert (x2609 x333))
(assert (= (=> (and (= x1572 x2633) (= x47 x3747)) x46) x2355))
(assert (x2421 x483))
(assert (= (and x2446 x3117) x3271))
(assert (x216 x2222 (- x1624 x1111)))
(assert (= (and (not x2849) x3896) x1577))
(assert (x2421 x952))
(assert (= (and x3618 x2447) x2254))
(assert (= (and x2277 x3580) x626))
(assert (x2421 x3909))
(assert (= x244 (=> (and (= x3794 0) (= x343 x1217)) x3699)))
(assert (x216 x2957 (- x3574 x2384)))
(assert (x2421 x2838))
(assert (=> (>= 10000 x3770) (= (x1618 x3770) (x2353 x3770))))
(assert (x248 x2751 x3185 x1624 x2222))
(assert (= (and x806 (not x2060)) x1175))
(assert (x2421 x1376))
(assert (x3448 x425))
(assert (= x1266 (and x2372 x638)))
(assert (x2421 x914))
(assert (x2421 x1679))
(assert (x3448 x897))
(assert (= x3771 (=> (and (or (and x2434 (= x3226 (x356 x1245 2))) (and (= x2054 (x2947 (x1618 x2038) x1245 0)) (not x2434))) (= x2434 (= x2038 0))) x2936)))
(assert (x248 x77 x294 x2957 x3574))
(assert (= (and x3092 x3960) x2349))
(assert (x2421 x3659))
(assert (x2421 x1065))
(assert (= (and (not x2728) x2304) x2752))
(assert (x248 x1033 x106 x3185 x2751))
(assert (x2421 x1036))
(assert (x2406 x3036))
(assert (= (and x676 x3121) x523))
(assert (x304 x3849 x1184 x1111 x647))
(assert (x2406 (- x3792 x3574)))
(assert (= (x1991 (x2353 405663989)) 405663989))
(assert (= x3938 (=> (and (= x1328 x529) (= x2227 x2965)) x291)))
(assert (x2421 x1329))
(assert (x2421 x1279))
(assert (x2421 x3601))
(assert (= x1532 (and (not x3590) x280)))
(assert (x1192 x183))
(assert (= (and x1218 x3870) x980))
(assert (x248 x1395 x106 x2957 x2823))
(assert (= (x1980 416) 0))
(assert (x2421 x2628))
(assert (and (x2912 1000000000000000000 x1909) (x1712 1000000000000000000 x1909) (x804 1000000000000000000 x1909) (x3035 1000000000000000000 x1909) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1909) (- (* x1909 1000000000000000000) (* x1909 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1909 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x1909 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1909 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x1909 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x1909 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x1909) (= (* x1909 1000000000000000000) (x1801 1000000000000000000 x1909))))
(assert (x248 x2957 x2823 x2222 x1624))
(assert (= x1436 (=> (and (= x3295 x3506) (= x2379 x413) (= x811 x3816) (= x2955 x114) (= x1832 x2816)) x1987)))
(assert (x2421 x183))
(assert (= x2440 (or x3034 x2330)))
(assert (x2421 x3268))
(assert (= x3451 (and x447 x158)))
(assert (x248 x2957 x2823 x3849 x1184))
(assert (x248 x2823 x2957 x1184 x3849))
(assert (= (or x3833 x469 x1953 x1388 x3300 x3308) x1983))
(assert (x248 x3792 x3909 x2823 x2957))
(assert (x2421 x2957))
(assert (x2421 x2738))
(assert (x2421 x2653))
(assert (x2421 x194))
(assert (x216 x294 (- x77 x3849)))
(assert (x2406 (- x2222 x3792)))
(assert (x2421 x3190))
(assert (x2421 x2551))
(assert (x2421 x2787))
(assert (= (=> (and (= x657 (= 0 x3457)) (or (and x657 (= (x356 x3889 2) x205)) (and (= (x2947 (x1618 x3457) x3889 0) x249) (not x657)))) x2270) x1711))
(assert (= (x1991 (x1618 x3457)) x3457))
(assert (= (=> (and (= 0 x1328) (= x2227 x2601)) x3938) x2183))
(assert (= (x2353 26959946667150639794667015087019630673637144422540572481103610249215) (x1618 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x248 x1033 x106 x647 x1111))
(assert (= x2237 (and (not x2328) x723)))
(assert (x1526 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x2421 x3765))
(assert (x2421 x562))
(assert (= x879 (x1991 (x1618 x879))))
(assert (x2421 x2569))
(assert (x248 x647 x1111 x3792 x3909))
(assert (x2421 x3724))
(assert (= (and (not x2535) x957) x2302))
(assert (x2421 x3188))
(assert (= (and x2295 x340) x3308))
(assert (x2421 x3485))
(assert (x1192 x3020))
(assert (x248 x1184 x3849 x2751 x3185))
(assert (x2421 x62))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x1934 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3413 x1934 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2732 x1934 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1688 x1934 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1527 x1934 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x747 x1934 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x2346 (and x3191 x2696)))
(assert (x304 x647 x1111 x3909 x3792))
(assert (= x1191 (and x3499 x361)))
(assert (=> (>= 10000 x2792) (= (x2353 x2792) (x1618 x2792))))
(assert (=> (<= x67 10000) (= (x2353 x67) (x1618 x67))))
(assert (x1526 x3679))
(assert (= x3831 (and x3868 x2444)))
(assert (x216 x294 (- x77 x106)))
(assert (x304 x2384 x106 x3574 x2957))
(assert (x2098 x681))
(assert (x216 x2823 (- x2957 x3792)))
(assert (x1526 x2129))
(assert (x2421 x1956))
(assert (x1526 x3123))
(assert (x248 x2957 x3574 x294 x77))
(assert (= (x1991 (x356 x2103 1)) (+ 1 (x1991 x2103))))
(assert (x2406 x1395))
(assert (= x987 (and x2398 x2043)))
(assert (x2406 (- x3792 x647)))
(assert (= x1865 (and (not x2311) x830)))
(assert (= x2918 (=> (and (or x3897 (and (and (= (x525 1461501637330902918203684832716283019655932542975 x2746) x2202) (= (x3783 (+ 32 x2472)) x227) (>= x3188 0) (= (x1382 (x1618 x3188)) x3486) (= (x3783 (+ x2986 32)) x2472) (< x2988 4294967296) (> 1461501637330902918203684832716283019655932542976 x3188) (>= 1461501637330902918203684832716283019655932542975 x3188) (= (x3783 (+ x1435 4)) x2986) (not (= 0 x3486))) (not x3897))) (and (= (= x3188 0) x3897) (>= 1461501637330902918203684832716283019655932542975 x3188) (> 1461501637330902918203684832716283019655932542976 x3188) (>= x3188 0))) x2206)))
(assert (x1526 x3939))
(assert (x2421 x1561))
(assert (= (and x714 (not x2652)) x1412))
(assert (x248 x3574 x2957 x1033 x106))
(assert (= x1174 (and x3442 (not x2082))))
(assert (x2406 (- x3909 x1033)))
(assert (x2406 (- x3185 x1624)))
(assert (x2421 x79))
(assert (x248 x2957 x3574 x2222 x1624))
(assert (x248 x1624 x2222 x2384 x106))
(assert (x3448 x779))
(assert (x2406 x2222))
(assert (= (and (not x1921) x2491) x1967))
(assert (x2421 x3177))
(assert (= (x1991 (x1618 x1118)) x1118))
(assert (x2421 x1944))
(assert (x2421 x3239))
(assert (x2421 x1166))
(assert (x304 x2384 x106 x2823 x2957))
(assert (x248 x1395 x106 x1184 x3849))
(assert (= x1207 (and x97 (not x2992))))
(assert (x216 x77 (- x294 x1033)))
(assert (x248 x294 x77 x2222 x1624))
(assert (and (x2912 1000000000000000000 x2558) (x1712 1000000000000000000 x2558) (x804 1000000000000000000 x2558) (x3035 1000000000000000000 x2558) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x2558) (- (* x2558 1000000000000000000) (* x2558 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x2558 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x2558 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2558 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x2558 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x2558 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x2558) (= (* x2558 1000000000000000000) (x1801 1000000000000000000 x2558))))
(assert (x248 x2957 x3574 x2751 x3185))
(assert (= (or x3869 x3901) x1550))
(assert (= x3806 (and x432 x3360)))
(assert (= (x1618 1931414571) (x2353 1931414571)))
(assert (x2406 (- x3909 x647)))
(assert (x3448 x3188))
(assert (= x2799 (and x2446 (not x3117))))
(assert (= x2313 (and (not x2941) x188)))
(assert (= x3415 (and x94 x2108)))
(assert (= x2750 (and x843 (not x3785))))
(assert (x304 x2222 x1624 x77 x294))
(assert (= (and (not x701) x2195) x1530))
(assert (= (x1991 (x356 x2874 1)) (+ 1 (x1991 x2874))))
(assert (= (and x1587 x2684) x359))
(assert (x3448 x2125))
(assert (x216 x1111 (- x647 x1033)))
(assert (x248 x294 x77 x1033 x106))
(assert (x2421 x748))
(assert (x2421 x771))
(assert (x2421 x2699))
(assert (x248 x2384 x106 x1184 x3849))
(assert (x2406 (- x3574 x1111)))
(assert (x2421 x494))
(assert (x2421 x1879))
(assert (x2421 x1466))
(assert (=> (>= 10000 x754) (= (x1618 x754) (x2353 x754))))
(assert (x2421 x1981))
(assert (x248 x2384 x106 x1111 x647))
(assert (= x271 (and x548 (not x1957))))
(assert (x2406 (- x1624 x3909)))
(assert (x216 x1033 (- x106 x2823)))
(assert (= x361 (or x3554 x1152)))
(assert (x2421 x1194))
(assert (x2406 (- x1111 x2823)))
(assert (x304 x106 x2384 x3909 x3792))
(assert (x1526 1461501637330902918203684832716283019655932542975))
(assert (= (and x455 x3690) x1623))
(assert (= (and (not x3419) x3164) x131))
(assert (= x285 (and (not x3778) x2871)))
(assert (= x1146 (and x441 x2737)))
(assert (x2421 x344))
(assert (x2421 x180))
(assert (x2406 (- x1184 x77)))
(assert (= (and (not x2477) x1566) x2822))
(assert (= (x1991 (x356 x1534 1)) (+ (x1991 x1534) 1)))
(assert (= (and x2752 x1990) x1890))
(assert (= (and x1345 x1681) x767))
(assert (= (+ 1 (x1991 x3963)) (x1991 (x356 x3963 1))))
(assert (x216 x2222 (- x1624 x3185)))
(assert (= x3773 (and x2007 x1532)))
(assert (= (=> (and (= x2764 x2036) (= x3857 x2323)) x3758) x1224))
(assert (x2421 x1843))
(assert (= x1561 (x1991 (x1618 x1561))))
(assert (x304 x3574 x2957 x77 x294))
(assert (= (not (and (>= 1461501637330902918203684832716283019655932542975 x3731) (= x648 (x2947 (x1618 x536) x3889 0)) (= x672 (x356 x648 1)) (= x3731 (x564 x672)) (< x3731 1461501637330902918203684832716283019655932542976) (<= 0 x3731))) x2048))
(assert (= (x1991 (x2353 2991318663)) 2991318663))
(assert (= (=> (and (= x1723 x1458) (= x2717 x2389)) x2966) x2453))
(assert (= (x2353 988262939) (x1618 988262939)))
(assert (x216 x2957 (- x2823 x2751)))
(assert (= (and x2735 (not x2138)) x2497))
(assert (x2421 x442))
(assert (x304 x2751 x3185 x1033 x106))
(assert (= x2624 (and (not x3754) x411)))
(assert (x2406 (- x3185 x2823)))
(assert (x3448 x754))
(assert (= x2235 (and (not x252) x1488)))
(assert (= (and x2745 x3786) x3862))
(assert (x2421 x1380))
(assert (x2421 x3175))
(assert (x2421 x577))
(assert (x2421 x1805))
(assert (x2421 x734))
(assert (x2421 x632))
(assert (x216 x2384 (- x106 x1033)))
(assert (x248 x2222 x1624 x3574 x2957))
(assert (x2406 (- x2957 x106)))
(assert (x2406 (- x2222 x77)))
(assert (= x19 (and x1893 x1330)))
(assert (x2421 x43))
(assert (x248 x2222 x1624 x77 x294))
(assert (= (+ 3 (x1991 x150)) (x1991 (x356 x150 3))))
(assert (x216 x2957 (- x3574 x3849)))
(assert (x2421 x2021))
(assert (= x663 (or x828 x2024)))
(assert (x2406 (- x106 x2384)))
(assert (x216 x3909 (- x3792 x77)))
(assert (x304 x3792 x3909 x77 x294))
(assert (= (and x1502 x404) x3645))
(assert (= x2569 (x1991 (x1618 x2569))))
(assert (= (+ 2 (x1991 x1592)) (x1991 (x356 x1592 2))))
(assert (x2421 x386))
(assert (x2421 x1343))
(assert (x2421 x3311))
(assert (x248 x2222 x1624 x2823 x2957))
(assert (= x1081 (=> (and (= x1731 x3747) (= x3401 x2633)) x46)))
(assert (= (x1991 (x2353 114138022719912475680867045629478960338713192110453415424194996738542475935744)) 114138022719912475680867045629478960338713192110453415424194996738542475935744))
(assert (x2406 x1870))
(assert (= 2459953569 (x1991 (x2353 2459953569))))
(assert (x216 x1184 (- x3849 x3185)))
(assert (= (x1991 (x1618 x779)) x779))
(assert (x216 x106 (- x1395 x3792)))
(assert (= (and x3958 x3424) x38))
(assert (x2421 x7))
(assert (x248 x2384 x106 x3792 x3909))
(assert (x2421 x600))
(assert (x2406 (- x647 x1033)))
(assert (= (and x930 (not x2897)) x1543))
(assert (= (and x3656 x3273) x515))
(assert (x216 x1033 (- x106 x647)))
(assert (x2406 (- x1111 x3574)))
(assert (x2406 (- x2222 x3574)))
(assert (=> (>= 10000 x1858) (= (x1618 x1858) (x2353 x1858))))
(assert (= x880 (and x697 (not x1421))))
(assert (x2421 x490))
(assert (x304 x3185 x2751 x3909 x3792))
(assert (= (and (not x3071) x750) x850))
(assert (x216 x2823 (- x2957 x2751)))
(assert (x2406 (- x1033 x106)))
(assert (= (and x1500 (not x1023)) x2446))
(assert (x2406 (- x1033 x1111)))
(assert (x2421 x1999))
(assert (x2421 x169))
(assert (x304 x1111 x647 x2222 x1624))
(assert (x2421 x299))
(assert (x2421 x2429))
(assert (x2406 (- x2957 x1111)))
(assert (= x919 (or x3515 x466)))
(assert (= x3056 (and x3611 x3196)))
(assert (x2421 x470))
(assert (= x3732 (=> (= x1810 (< 0 x771)) (and (=> (and (and (or (and x252 (and (= x3072 (x356 x32 2)) (= x2825 (not x2278)) (= x2278 (< x2817 x771)) (<= 0 x2817) (= x32 (x2947 (x1618 x1486) x3889 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2817) (= (x2249 x3072) x2817))) (and (not x252) (= x252 x2825))) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2889) (>= x2889 0) (< x1486 1461501637330902918203684832716283019655932542976) (= (x356 x3889 1) x78) (= x3148 (x356 x1171 2)) (= x1171 (x2947 (x1618 x1973) x3889 0)) (<= 0 x1486) (not (= 0 x981)) (<= x1486 1461501637330902918203684832716283019655932542975) (<= 0 x3905) (= x252 (ite (> x3905 0) (not (= 0 x1486)) (> x3905 0))) (= 0 x2889) (= (x1022 x78) x1486) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3905) (= (x2249 x3148) x2889))) x1810) x1209) (=> (and (and (= x2925 x965) (= x2119 x119)) (not x1810)) x3309)))))
(assert (x2421 x1531))
(assert (= (and (not x3835) x177) x3723))
(assert (= x2809 (and x2023 x1979)))
(assert (x1192 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= x2924 10000) (= (x2353 x2924) (x1618 x2924))))
(assert (x216 x2222 (- x1624 x647)))
(assert (x248 x1111 x647 x2222 x1624))
(assert (x2421 x308))
(assert (x304 x1184 x3849 x3574 x2957))
(assert (x304 x106 x1395 x3574 x2957))
(assert (x2406 (- x1624 x77)))
(assert (= (and x797 x405) x3300))
(assert (= x3293 (or x2840 x2431)))
(assert (x216 x106 (- x2384 x647)))
(assert (x2421 x1434))
(assert (x2421 x1574))
(assert (x248 x106 x2384 x2823 x2957))
(assert (x3448 x3467))
(assert (x216 x106 (- x2384 x1624)))
(assert (= (and x1180 x1710) x1887))
(assert (x2421 x3318))
(assert (x2421 x2112))
(assert (x2421 x2843))
(assert (x248 x3792 x3909 x3185 x2751))
(assert (x2421 x958))
(assert (x3448 x3234))
(assert (x248 x106 x1395 x1624 x2222))
(assert (x2421 x1727))
(assert (= x357 (and (not x2903) x3307)))
(assert (= x2266 (and (not x900) x1266)))
(assert (x304 x2823 x2957 x3909 x3792))
(assert (x216 x294 (- x77 x2823)))
(assert (x304 x3909 x3792 x77 x294))
(assert (= (x1991 (x1618 x759)) x759))
(assert (x2421 x1456))
(assert (x2406 (- x2751 x2957)))
(assert (x248 x3574 x2957 x106 x1395))
(assert (x2421 x3384))
(assert (x304 x2384 x106 x3849 x1184))
(assert (x216 x1624 (- x2222 x3909)))
(assert (= (x1991 (x356 x3874 1)) (+ 1 (x1991 x3874))))
(assert (x2421 x3682))
(assert (=> (<= x3217 10000) (= (x1618 x3217) (x2353 x3217))))
(assert (x2421 x862))
(assert (x2421 x2986))
(assert (x304 x3909 x3792 x3849 x1184))
(assert (= (=> (and (= x1325 0) (= x2753 x2059)) x2086) x323))
(assert (x2421 x3105))
(assert (x2421 x1832))
(assert (x1177 x1772 x2957))
(assert (x2421 x2536))
(assert (= (or x2950 x3417) x2097))
(assert (x2421 x2668))
(assert (x2421 x518))
(assert (x248 x2384 x106 x3574 x2957))
(assert (= (+ (x1991 x1443) 2) (x1991 (x356 x1443 2))))
(assert (x2421 x3329))
(assert (x2421 x2626))
(assert (= x3147 (or x2106 x496)))
(assert (x2406 (- x1033 x77)))
(assert (= x368 (x1991 (x1618 x368))))
(assert (= (and x531 x1464) x3346))
(assert (=> (<= x1486 10000) (= (x1618 x1486) (x2353 x1486))))
(assert (x2421 x3288))
(assert (= (=> (= (= 0 x3637) x1891) (and (=> x1891 x669) (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2114) (and (= (<= x2114 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2114 32))) x1792) (not x1891)) (and (=> (and (and (= x3068 32) (= x3496 1)) (not x1792)) x259) (=> x1792 x669))))) x813))
(assert (x304 x1395 x106 x2823 x2957))
(assert (x2421 x125))
(assert (= x3512 (and (not x2593) x3949)))
(assert (x216 x3574 (- x2957 x3909)))
(assert (x2421 x3058))
(assert (x2406 (- x2751 x3792)))
(assert (= (x1618 44970383829727661923261016617897238973146650624978361361029103362720544063488) (x2353 44970383829727661923261016617897238973146650624978361361029103362720544063488)))
(assert (x2421 x3654))
(assert (= (+ 1 (x1991 x2354)) (x1991 (x356 x2354 1))))
(assert (x216 x106 (- x2384 x2222)))
(assert (x2421 x2826))
(assert (x3448 x879))
(assert (= x1650 (and x1719 x444)))
(assert (x2421 x479))
(assert (x3448 x489))
(assert (x2421 x2982))
(assert (= x432 (and (not x2765) x440)))
(assert (x2406 (- x106 x77)))
(assert (x2421 x2436))
(assert (x248 x2957 x2823 x1033 x106))
(assert (x248 x2823 x2957 x2957 x3574))
(assert (x2421 x1182))
(assert (x2421 x1044))
(assert (= x1168 (and x767 x143)))
(assert (x2421 x3204))
(assert (x2421 x775))
(assert (x2421 x350))
(assert (x248 x77 x294 x1033 x106))
(assert (x2421 x2827))
(assert (x248 x2751 x3185 x1184 x3849))
(assert (x216 x2957 (- x3574 x647)))
(assert (x2421 x3278))
(assert (x216 x3909 x3792))
(assert (x248 x1033 x106 x1111 x647))
(assert (= (and x3813 (not x3199)) x752))
(assert (= x1894 (x1991 (x1618 x1894))))
(assert (= x3062 (and x1028 (not x1187))))
(assert (= (and x3049 x359) x941))
(assert (= (and x22 x2634) x331))
(assert (x2406 (- x106 x1111)))
(assert (x248 x2751 x3185 x3909 x3792))
(assert (x2421 x3277))
(assert (=> (>= 10000 x632) (= (x2353 x632) (x1618 x632))))
(assert (x2421 x904))
(assert (x248 x294 x77 x2823 x2957))
(assert (x248 x3792 x3909 x77 x294))
(assert (= x787 (=> (and (and (<= 0 x2201) (<= x2201 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x358 (> x3734 x2201))) (or (and (not x358) (= x3162 0)) (and (= x3734 x3162) x358))) x221)))
(assert (= (and x912 x95) x264))
(assert (x248 x3792 x3909 x3849 x1184))
(assert (= x422 (and x15 x3274)))
(assert (x2421 x210))
(assert (= x953 (=> (and (= x3747 x3318) (= x2633 x2767)) x46)))
(assert (= (and x864 x2056) x328))
(assert (x2609 x1934))
(assert (= x2370 (or x1983 x449)))
(assert (=> (<= x2620 10000) (= (x2353 x2620) (x1618 x2620))))
(assert (x1526 x183))
(assert (= x2906 (and x1891 x1120)))
(assert (x2421 x2853))
(assert (x2406 (- x1624 x294)))
(assert (x2406 (- x2751 x2823)))
(assert (x2421 x2384))
(assert (x2421 x1203))
(assert (x2421 x1504))
(assert (and (x3187 x2782 1000000000000000000) (x2566 x2782 1000000000000000000) (x878 x2782 1000000000000000000) (x3266 x2782 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x2782)) (and (>= x2782 (* 1000000000000000000 (x3413 x2782 1000000000000000000))) (> (* (x3413 x2782 1000000000000000000) 1000000000000000000) (- x2782 1000000000000000000))))))
(assert (x2421 x2995))
(assert (x304 x2957 x3574 x2823 x2957))
(assert (= x108 (or x19 x3653)))
(assert (= (and x2237 (not x702)) x2513))
(assert (x2406 (- x294 x2823)))
(assert (x3448 x2569))
(assert (x248 x77 x294 x106 x2384))
(assert (x2421 x1280))
(assert (x248 x2957 x3574 x106 x1395))
(assert (=> (>= 10000 x2038) (= (x2353 x2038) (x1618 x2038))))
(assert (x3448 x2895))
(assert (= x49 (or x3500 x3230 x3924)))
(assert (x216 x1395 (- x106 x3849)))
(assert (=> (>= 10000 x1386) (= (x1618 x1386) (x2353 x1386))))
(assert (= (and (not x685) x1700) x1455))
(assert (x2421 x3689))
(assert (= x797 (and x852 (not x1051))))
(assert (x2421 x1874))
(assert (= x3054 (and x2549 x358)))
(assert (x1192 x2818))
(assert (x2421 x3332))
(assert (x248 x1033 x106 x77 x294))
(assert (x2421 x1568))
(assert (x304 x1111 x647 x3909 x3792))
(assert (= (+ (x1991 x32) 2) (x1991 (x356 x32 2))))
(assert (x2421 x3295))
(assert (x2421 x1316))
(assert (x304 x1395 x106 x3574 x2957))
(assert (= (x1991 (x356 x2027 1)) (+ 1 (x1991 x2027))))
(assert (x2421 x1611))
(assert (= 3583811254 (x1991 (x2353 3583811254))))
(assert (x2421 x2484))
(assert (x304 x3909 x3792 x2222 x1624))
(assert (= (x1991 (x356 x3953 1)) (+ 1 (x1991 x3953))))
(assert (x216 x106 (- x2384 x2823)))
(assert (= (and (not x2872) x872) x3573))
(assert (x2421 x933))
(assert (=> (>= 10000 x3899) (= (x2353 x3899) (x1618 x3899))))
(assert (x1192 x2129))
(assert (x248 x2751 x3185 x1033 x106))
(assert (x216 x106 (- x1033 x1111)))
(assert (x304 x1184 x3849 x3185 x2751))
(assert (x304 x3909 x3792 x2823 x2957))
(assert (x2421 x3942))
(assert (x248 x2957 x3574 x2384 x106))
(assert (=> (>= 10000 x1170) (= (x2353 x1170) (x1618 x1170))))
(assert (= (x1618 79266373) (x2353 79266373)))
(assert (x216 x1184 (- x3849 x106)))
(assert (= x510 (=> (and (= x2059 x1932) (= 0 x695)) x1275)))
(assert (x216 x3909 (- x3792 x2751)))
(assert (x216 x3574 x2957))
(assert (x2406 (- x1395 x2222)))
(assert (x3448 x1170))
(assert (= (x1991 (x356 x633 1)) (+ 1 (x1991 x633))))
(assert (= x839 (and x2162 x3379)))
(assert (x248 x1033 x106 x2957 x2823))
(assert (x216 x2222 (- x1624 x1395)))
(assert (x2421 x1239))
(assert (x2406 (- x3792 x2222)))
(assert (x216 x2384 (- x106 x647)))
(assert (x304 x2222 x1624 x2384 x106))
(assert (x2421 x1037))
(assert (x2098 x3114))
(assert (x248 x2751 x3185 x2957 x3574))
(assert (= (=> (= x441 (= x1609 x3640)) (and (=> (and x441 (= x1839 x3195)) x3648) (=> (and (not x441) (= (> x1609 0) x2066)) (and (=> (and (and (and (> 1461501637330902918203684832716283019655932542976 x1561) (< x1705 1461501637330902918203684832716283019655932542976) (>= x2536 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2536) (<= 0 x1561) (= x2616 (x356 x1405 1)) (= x1561 (x2683 x1405)) (= (x356 x2875 1) x1405) (= x2536 (x235 x2616)) (= x2780 (= x1705 0)) (= (x2947 (x1618 x1327) x1443 0) x2875) (= (x3783 (+ x3195 96)) x1021) (= x1705 (x2037 x2875)) (>= x1705 0) (<= x1705 1461501637330902918203684832716283019655932542975) (<= x1561 1461501637330902918203684832716283019655932542975) (not (= x2536 0))) (or (and (not x2780) (and (= x450 (x2947 (x1618 x1705) x1443 0)) (= x3233 (x356 x450 1)))) (and (= x2811 (x356 x1443 1)) x2780))) x2066) x1646) (=> (and (= x3671 x3195) (not x2066)) x1083))))) x217))
(assert (= x207 (or x2079 x1147)))
(assert (= x262 (and x3715 x3542)))
(assert (= (and x1369 (not x3756)) x22))
(assert (x2421 x2407))
(assert (= (and x163 (not x84)) x2437))
(assert (= x3823 (and x1823 (not x2469))))
(assert (x2421 x3822))
(assert (= x81 (and x2388 x3006)))
(assert (=> (<= x2405 10000) (= (x2353 x2405) (x1618 x2405))))
(assert (= (=> (and (= x2436 x2965) (= x1107 x529)) x291) x3681))
(assert (x2421 x2171))
(assert (= (and (not x1927) x1581) x482))
(assert (= (and (not x2322) x920) x401))
(assert (x2421 x3607))
(assert (x216 x2751 (- x3185 x2384)))
(assert (x2421 x1079))
(assert (x2406 (- x2823 x3849)))
(assert (x2421 x2975))
(assert (x2421 x895))
(assert (= (+ 1 (x1991 x3814)) (x1991 (x356 x3814 1))))
(assert (x2421 x1806))
(assert (x248 x1624 x2222 x2751 x3185))
(assert (= (and (not x3611) x3196) x1439))
(assert (= x1835 (x1991 (x1618 x1835))))
(assert (= (and x3573 (not x504)) x297))
(assert (x304 x2957 x2823 x3574 x2957))
(assert (= (x1991 (x1618 x897)) x897))
(assert (x2406 (- x2957 x1184)))
(assert (x248 x3849 x1184 x2384 x106))
(assert (= x3562 (and (not x2774) x991)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1991 (x2353 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (= (and x899 x1809) x988))
(assert (and (x3187 x3495 1000000000000000000) (x2566 x3495 1000000000000000000) (x878 x3495 1000000000000000000) (x3266 x3495 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x3495)) (and (>= x3495 (* 1000000000000000000 (x3413 x3495 1000000000000000000))) (> (* (x3413 x3495 1000000000000000000) 1000000000000000000) (- x3495 1000000000000000000))))))
(assert (x2421 x2292))
(assert (x2421 x2688))
(assert (= (=> (and (= x3605 (x465 x3218)) (<= x3710 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3605 0) (= x649 false) (= (x2706 x3628) x3710) (= false x2093) (<= x3605 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3661 x658 x1036) x494) (<= 0 x3710) (= (ite (= x1376 1) 1 0) x3679) (= (x525 x3679 x2057) x658) (= x2057 (ite (> x2717 31) 1 0)) (= x3628 (x356 x3218 1)) (> x1063 0) (= x1036 (ite (= x2717 0) 1 0)) (= x1063 (x525 x494 x1723))) x1916) x1019))
(assert (x2421 x2923))
(assert (x2421 x1803))
(assert (= (or x276 x1890 x2279 x2194 x1655 x801) x3696))
(assert (x2421 x939))
(assert (x2421 x1462))
(assert (x2098 x2286))
(assert (x248 x2823 x2957 x294 x77))
(assert (x2406 (- x1184 x647)))
(assert (x3448 x1858))
(assert (= x2541 (and x3769 x3118)))
(assert (x2421 x2174))
(assert (x216 x3574 (- x2957 x2222)))
(assert (x2406 (- x294 x3792)))
(assert (= (+ 1 (x1991 x3879)) (x1991 (x356 x3879 1))))
(assert (= x243 (or x1503 x3593)))
(assert (= (+ (x1991 x218) 2) (x1991 (x356 x218 2))))
(assert (x2421 x1250))
(assert (x2421 x3710))
(assert (x2406 (- x3909 x106)))
(assert (x216 x106 (- x1395 x1184)))
(assert (x2421 x3669))
(assert (= (and x1929 x382) x1241))
(assert (x304 x106 x1033 x2384 x106))
(assert (x2421 x1401))
(assert (= (=> (and (= x1621 x898) (= x3421 0)) x653) x1816))
(assert (= (or x1825 (and (not x1514) x3108)) x682))
(assert (= (or x315 x641) x420))
(assert (= (+ (x1991 x2109) 2) (x1991 (x356 x2109 2))))
(assert (= x327 (and x2 (not x1834))))
(assert (x216 x647 (- x1111 x3849)))
(assert (= (and (not x1046) x1570) x145))
(assert (x248 x1033 x106 x3909 x3792))
(assert (x2406 x647))
(assert (= (x2353 1830112933) (x1618 1830112933)))
(assert (x248 x294 x77 x3909 x3792))
(assert (x304 x2823 x2957 x1033 x106))
(assert (x2421 x2770))
(assert (= x1261 (=> (and (= x529 x734) (= x3937 x2965)) x291)))
(assert (x2421 x170))
(assert (= (and x3631 (not x2223)) x3502))
(assert (= (=> (and (= x3857 x483) (= x2764 x1661)) x3758) x3465))
(assert (x2406 (- x3849 x77)))
(assert (= (or x2578 x26) x2338))
(assert (= x3077 (or x262 x3877)))
(assert (x2098 x2782))
(assert (= x1850 (and x3562 (not x856))))
(assert (x2406 (- x1624 x2823)))
(assert (= 2858086653 (x1991 (x2353 2858086653))))
(assert (= (x1991 (x1618 x479)) x479))
(assert (x2421 x1665))
(assert (x2421 x1055))
(assert (x2421 x2404))
(assert (x2421 x3812))
(assert (= (=> (and (= x3620 x3857) (= x2190 x2764)) x3758) x2416))
(assert (= x3173 (and x991 x2774)))
(assert (x2406 (- x2957 x2751)))
(assert (x2421 x923))
(assert (x216 x1184 (- x3849 x294)))
(assert (x2421 x1822))
(assert (= (x1991 (x1618 x2895)) x2895))
(assert (= x3713 (or x1571 x191)))
(assert (x216 x2957 (- x3574 x2751)))
(assert (x248 x2823 x2957 x106 x1033))
(assert (= x1306 (and x3818 x1455)))
(assert (x248 x106 x1395 x2222 x1624))
(assert (x248 x1033 x106 x2823 x2957))
(assert (x2421 x2786))
(assert (x2421 x2170))
(assert (x2421 x1394))
(assert (x2421 x737))
(assert (x2421 x1489))
(assert (= x1027 (and x357 x1286)))
(assert (x2421 x459))
(assert (x2421 x98))
(assert (x2421 x2595))
(assert (x2421 x476))
(assert (= (or (and x2459 (not x1240)) x571) x1673))
(assert (x216 x77 (- x294 x2823)))
(assert (= (and x3941 x927) x214))
(assert (x3448 x1561))
(assert (x2421 x501))
(assert (x3448 x1658))
(assert (= (or x2273 x2312) x3444))
(assert (x2406 (- x2384 x106)))
(assert (=> (>= 10000 x3234) (= (x1618 x3234) (x2353 x3234))))
(assert (=> (<= x2699 10000) (= (x1618 x2699) (x2353 x2699))))
(assert (x2421 x2131))
(assert (x2421 x1435))
(assert (x248 x1033 x106 x106 x2384))
(assert (x2421 x877))
(assert (x2421 x10))
(assert (x2421 x1642))
(assert (x2421 x3084))
(assert (x3448 x636))
(assert (x216 x2222 (- x1624 x2823)))
(assert (= (and x438 (not x2242)) x1071))
(assert (x3448 x1486))
(assert (= (and x1334 (not x3155)) x1681))
(assert (x2406 (- x1624 x3185)))
(assert (x2406 (- x3574 x3185)))
(assert (= x1011 (=> (and (= x3278 x1407) (= x2240 x1438)) x1614)))
(assert (x304 x3574 x2957 x2823 x2957))
(assert (x216 x3185 (- x2751 x106)))
(assert (x2421 x3186))
(assert (x2421 x1573))
(assert (x248 x2957 x3574 x106 x1033))
(assert (x2421 x1255))
(assert (x2406 (- x3909 x2222)))
(assert (x216 x106 (- x1395 x2222)))
(assert (x2421 x1633))
(assert (= x3352 (=> (= x3260 (= 0 x1509)) (and (=> (and (= x1564 x599) x3260) x3597) (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x173) (and (> 32 x173) (= (<= x173 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x3140) (not x3260)) (and (=> (and (= x599 x1564) x3140) x3597) (=> (and (not x3140) (and (= x599 x2274) (= 1 x3439) (= x23 32))) x2669)))))))
(assert (x248 x1184 x3849 x647 x1111))
(assert (= (and x873 x721) x3002))
(assert (x2421 x2807))
(assert (x2421 x2702))
(assert (x2421 x3302))
(assert (= (and x951 (not x3866)) x2814))
(assert (x2421 x3036))
(assert (x2421 x3670))
(assert (x248 x2222 x1624 x2957 x3574))
(assert (x1192 x428))
(assert (x2421 x2326))
(assert (x248 x106 x2384 x2222 x1624))
(assert (x2421 x2196))
(assert (= (and x2814 x3156) x1017))
(assert (x2421 x1001))
(assert (x2421 x3894))
(assert (x216 x1184 (- x3849 x2957)))
(assert (= (or x2120 x3576 x1644 x3900 x3862) x1151))
(assert (= (and x107 x1936) x2324))
(assert (= x3700 (x1991 (x1618 x3700))))
(assert (x1526 x3470))
(assert (x3448 x1868))
(assert (= (and x220 (not x132)) x2151))
(assert (x2421 x2408))
(assert (x3448 x1611))
(assert (x2421 x3679))
(assert (x2421 x3457))
(assert (x2421 x30))
(assert (= x138 (and x3419 x3164)))
(assert (x2406 (- x3909 x1395)))
(assert (x2421 x2718))
(assert (x248 x1184 x3849 x3185 x2751))
(assert (= (or x1035 x3249) x3821))
(assert (= x3653 (and x1893 (not x1330))))
(assert (x2406 (- x1111 x2957)))
(assert (= (x1991 (x356 x3604 1)) (+ 1 (x1991 x3604))))
(assert (= (x1991 (x1618 x3622)) x3622))
(assert (x216 x106 (- x1033 x3792)))
(assert (= (and x2897 x930) x1546))
(assert (x216 x2751 (- x3185 x2957)))
(assert (x2421 x3550))
(assert (x2421 x2964))
(assert (= x3364 (or x1594 x1299)))
(assert (x2421 x2059))
(assert (x2406 (- x106 x294)))
(assert (= (or (and (not x935) x3555) x1718) x1537))
(assert (x2406 (- x2957 x1395)))
(assert (x216 x3185 (- x2751 x1033)))
(assert (x2421 x130))
(assert (x304 x1184 x3849 x2384 x106))
(assert (= x2743 (=> (and (= x1977 x3216) (= x206 x3790)) x2579)))
(assert (x2421 x415))
(assert (x216 x3574 (- x2957 x1111)))
(assert (= (or x2040 x139) x2026))
(assert (x2421 x3605))
(assert (= (and x2735 x2138) x2084))
(assert (x216 x3792 (- x3909 x2222)))
(assert (x216 x2751 (- x3185 x1624)))
(assert (x2421 x3022))
(assert (= (and (not x3140) x65) x1716))
(assert (x2421 x2797))
(assert (= (and x1664 x272) x1425))
(assert (= x1886 (=> (and (= x2436 x2601) (= x1107 0)) x3681)))
(assert (x2421 x2403))
(assert (= (x1618 4233614559) (x2353 4233614559)))
(assert (= x1220 (and x3737 x3665)))
(assert (x2406 (- x294 x3849)))
(assert (= (x1991 (x356 x3889 1)) (+ (x1991 x3889) 1)))
(assert (= x790 (x1991 (x1618 x790))))
(assert (= (=> (and (= x2492 x23) (= x2274 x1564) (= 0 x3439)) x2669) x3597))
(assert (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x1991 (x2353 10936679508223583803006762266923565500374401145016910147028117655998246682624))))
(assert (x2421 x1649))
(assert (x2421 x1993))
(assert (= x1067 (and x2458 x492)))
(assert (x248 x3185 x2751 x3792 x3909))
(assert (x2406 (- x2384 x1184)))
(assert (= (and (not x2860) x2433) x3092))
(assert (x2421 x559))
(assert (x2421 x3376))
(assert (= (and (not x3664) x1175) x3525))
(assert (x3448 x67))
(assert (= (=> (and (= x2717 x1077) (= x313 x1723)) x2966) x993))
(assert (x304 x3185 x2751 x2222 x1624))
(assert (= (x1991 (x1618 x1170)) x1170))
(assert (= (x1991 (x356 x3952 1)) (+ 1 (x1991 x3952))))
(assert (= x1346 (and x752 (not x1427))))
(assert (= x787 x251))
(assert (x248 x106 x1395 x2957 x3574))
(assert (x2406 (- x2222 x2751)))
(assert (= x1035 (or x1650 x3248)))
(assert (x216 x2957 (- x2823 x77)))
(assert (x304 x3909 x3792 x3574 x2957))
(assert (= (or (and x2313 x3636) x1667 x2865 (and x1700 x685) (and (not x3818) x1455) (and x1306 x2859)) x803))
(assert (x248 x647 x1111 x106 x2384))
(assert (x2421 x1359))
(assert (= x1784 (and x165 x628)))
(assert (x216 x2751 (- x3185 x2222)))
(assert (x216 x1624 (- x2222 x3185)))
(assert (x2406 (- x2823 x294)))
(assert (= x122 (and x3502 x2315)))
(assert (= (x1991 (x356 x1728 1)) (+ 1 (x1991 x1728))))
(assert (x304 x647 x1111 x3574 x2957))
(assert (x304 x647 x1111 x2823 x2957))
(assert (x216 x1033 (- x106 x2384)))
(assert (= (and x2598 x3704) x3139))
(assert (x2421 x3760))
(assert (x2421 x960))
(assert (=> (>= 10000 x1479) (= (x2353 x1479) (x1618 x1479))))
(assert (x2421 x886))
(assert (x216 x1624 (- x2222 x2751)))
(assert (= x1253 (and x3773 (not x2588))))
(assert (x2098 x3132))
(assert (= (=> (and (= x3401 0) (= x668 x1731)) x1081) x89))
(assert (= (x1991 (x1618 x489)) x489))
(assert (x2421 x3324))
(assert (= x334 (and x2496 x3686)))
(assert (x216 x2222 (- x1624 x294)))
(assert (= (and (not x3933) x2661) x2305))
(assert (x2421 x537))
(assert (x216 x3909 (- x3792 x3185)))
(assert (= x1684 (x1991 (x1618 x1684))))
(assert (x2421 x3852))
(assert (x248 x1111 x647 x1033 x106))
(assert (x248 x1111 x647 x106 x1033))
(assert (= (+ 1 (x1991 x1245)) (x1991 (x356 x1245 1))))
(assert (x2406 (- x3185 x1033)))
(assert (x216 x2957 (- x3574 x106)))
(assert (x216 x3792 (- x3909 x77)))
(assert (x2421 x2153))
(assert (= (+ 1 (x1991 x2900)) (x1991 (x356 x2900 1))))
(assert (x2421 x3520))
(assert (= (+ (x1991 x570) 1) (x1991 (x356 x570 1))))
(assert (x2421 x3644))
(assert (x2421 x1998))
(assert (x216 x3792 (- x3909 x2751)))
(assert (x248 x106 x1033 x1395 x106))
(assert (= x2172 (and (not x3491) x3749)))
(assert (x2421 x1302))
(assert (= x1877 (and (not x1244) x2799)))
(assert (x2421 x576))
(assert (and (x3187 x3482 1000000000000000000) (x2566 x3482 1000000000000000000) (x878 x3482 1000000000000000000) (x3266 x3482 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x3482)) (and (>= x3482 (* 1000000000000000000 (x3413 x3482 1000000000000000000))) (> (* (x3413 x3482 1000000000000000000) 1000000000000000000) (- x3482 1000000000000000000))))))
(assert (x304 x1184 x3849 x2823 x2957))
(assert (x2406 (- x2823 x1395)))
(assert (= (+ (x1991 x1836) 1) (x1991 (x356 x1836 1))))
(assert (x2421 x528))
(assert (x2406 x2384))
(assert (= (and (not x3717) x3757) x2951))
(assert (= x1569 (and (not x441) x2737)))
(assert (x2421 x2191))
(assert (=> (<= x1894 10000) (= (x1618 x1894) (x2353 x1894))))
(assert (x1526 x1723))
(assert (x2421 x370))
(assert (x2421 x3042))
(assert (x2406 (- x2384 x2823)))
(assert (x304 x106 x2384 x3574 x2957))
(assert (x248 x647 x1111 x2384 x106))
(assert (x216 x1033 (- x106 x1111)))
(assert (= (and x2745 (not x3786)) x3799))
(assert (= (and x2122 x954) x380))
(assert (x2421 x3153))
(assert (x216 x2957 (- x3574 x3909)))
(assert (x1177 x480 x2179))
(assert (= (or x3887 x985) x2413))
(assert (x2421 x2034))
(assert (= (and x2082 x3442) x2763))
(assert (= x1705 (x1991 (x1618 x1705))))
(assert (x304 x3574 x2957 x3185 x2751))
(assert (= (and x1918 x436) x2630))
(assert (= (x1991 (x356 x1547 1)) (+ (x1991 x1547) 1)))
(assert (= (x1991 (x356 x3362 2)) (+ (x1991 x3362) 2)))
(assert (= (or x989 x2096 x3147 x420) x2803))
(assert (= x2611 (and (not x868) x310)))
(assert (x248 x106 x1033 x2384 x106))
(assert (x2421 x793))
(assert (x2406 (- x2222 x647)))
(assert (x2421 x2671))
(assert (x2421 x1906))
(assert (x2406 (- x3909 x294)))
(assert (x2098 x777))
(assert (x2421 x536))
(assert (x216 x2823 (- x2957 x1395)))
(assert (=> (>= 10000 x3641) (= (x1618 x3641) (x2353 x3641))))
(assert (x248 x3574 x2957 x2957 x2823))
(assert (x216 x1111 (- x647 x3849)))
(assert (x216 x3792 (- x3909 x1624)))
(assert (x304 x106 x2384 x3185 x2751))
(assert (x2406 (- x3574 x294)))
(assert (x2421 x2516))
(assert (and (x2912 1000000000000000000 x2428) (x1712 1000000000000000000 x2428) (x804 1000000000000000000 x2428) (x3035 1000000000000000000 x2428) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x2428) (- (* x2428 1000000000000000000) (* x2428 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x2428 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x2428 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2428 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x2428 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x2428 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x2428) (= (* x2428 1000000000000000000) (x1801 1000000000000000000 x2428))))
(assert (= (or x515 x2290 x1313 x1156 x1923) x171))
(assert (= x345 (=> (and (= (ite (< x3551 x3905) (not (= 0 x3718)) (> x3905 x3551)) x1733) (or (and x1733 (and (and (<= 0 x592) (< x592 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x592) (= (< 0 x2596) x2138) (= x2596 (x3381 (- x3718 x592))) (= (x1022 x78) x592)) (or (and (not x2138) (and (= (x3783 (+ 96 x965)) x155) (= x3923 x155) (= x3718 x1387))) (and (and (>= 1461501637330902918203684832716283019655932542975 x3494) (= x3718 x1387) (= x926 x3923) (> 1461501637330902918203684832716283019655932542976 x3494) (<= 0 x3494) (= (x3772 x1910) x3494) (= (x2947 (x1618 x3718) x3889 0) x1910) (= x926 (x3783 (+ x965 96)))) x2138)))) (and (and (or (and (not x3037) (and (= x3254 x1387) (= x3923 x545) (<= x3254 1461501637330902918203684832716283019655932542975) (= (x1904 x2896) x3254) (>= x3254 0) (< x3254 1461501637330902918203684832716283019655932542976) (= (x3783 (+ x965 96)) x545) (= x2896 (x356 x78 1)))) (and (and (= x1973 x1387) (= x3923 x121) (= x121 (x3783 (+ x965 96)))) x3037)) (and (>= 1461501637330902918203684832716283019655932542975 x170) (= (= x170 0) x3037) (>= x170 0) (= x170 (x1022 x78)) (< x170 1461501637330902918203684832716283019655932542976))) (not x1733)))) x2116)))
(assert (=> (<= x2135 10000) (= (x1618 x2135) (x2353 x2135))))
(assert (= x3966 (=> (and (= x240 x3790) (= 0 x1977)) x2743)))
(assert (= (x1991 (x356 x1490 2)) (+ 2 (x1991 x1490))))
(assert (x2421 x1731))
(assert (= x2319 (and x354 (not x2213))))
(assert (x1192 x981))
(assert (x2406 (- x3185 x1184)))
(assert (= (or x561 x2881) x989))
(assert (x2098 x2347))
(assert (x2421 x3101))
(assert (x2421 x1513))
(assert (x2421 x3478))
(assert (x2421 x2945))
(assert (x304 x106 x1033 x77 x294))
(assert (= x2969 (=> (and (= x3134 (x3305 452)) (not (= 1832238993 x1287)) (= (> x2671 0) x2333) (<= x3134 1461501637330902918203684832716283019655932542975) (= x3752 (x1382 (x1618 x1881))) (= (x2377 x3692) x2671) (<= x838 1461501637330902918203684832716283019655932542975) (= 452 x2250) (= x2528 56879788782001134333110164298630386859921104006521148999079851869125721718784) (>= x2724 0) (= x1287 2109788624) (< x1287 2229018723) (not (= x1287 1830112933)) (>= x838 0) (not (< x1287 1265048712)) (< x838 1461501637330902918203684832716283019655932542976) (= x1861 4) (= (x2947 (x1618 x1973) (x2353 161) 0) x3692) (= 4 x1861) (>= 1461501637330902918203684832716283019655932542975 x2724) (not (= x1287 1931414571)) (< 0 x3752) (> 1461501637330902918203684832716283019655932542976 x2724) (not (> 4 x1861)) (not (> 1590201465 x1287)) (not (> 1830112933 x1287))) (and (=> (and (not x2333) (and (= 644 x2156) (= 0 x1874) (= x3903 0))) x3521) (=> (and (and (and (<= 0 x3174) (= (x2947 (x1618 x1973) (x2353 161) 0) x48) (>= 1461501637330902918203684832716283019655932542975 x3174) (= x62 (x2377 x48)) (= x3578 (= x3134 x1611)) (= x2521 x849) (= (x3965 x2521) x3174) (> x62 0) (= x149 804) (= x849 (x998 x48 0)) (> 1461501637330902918203684832716283019655932542976 x3174)) (and x3578 (and (or (and x3441 (and (> 988262939 x487) (= x1851 (x1382 (x1618 x1937))) (= 405663989 x487) (not (< x2087 4)) (= 4 x2087) (> 2217467699 x487) (not (> 405663989 x487)) (= 1 x1724) (= x1798 10936679508223583803006762266923565500374401145016910147028117655998246682624) (= x3644 32) (> x1851 0) (= x2087 4))) (and (and (= x1176 (= x632 x3174)) (or (and x1176 (and (< 0 x1690) (= x1538 405663989) (> 2217467699 x1538) (not (> 405663989 x1538)) (= x3644 32) (= x3782 4) (= (x1382 (x1618 x632)) x1690) (= 1 x1724) (= x3775 10936679508223583803006762266923565500374401145016910147028117655998246682624) (not (< x3782 4)) (< x1538 988262939) (= x3782 4))) (and (and (and (and (not (> 4 x2990)) (not (> 405663989 x3600)) (= x2990 4) (< x3600 2217467699) (= x1724 1) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x2380) (= 405663989 x3600) (< x3600 988262939) (= 4 x2990) (> x152 0) (= x3644 32) (= x152 (x1382 (x1618 x3860)))) x2992) (= x2992 (= x3860 x3174))) (not x1176)))) (not x3441))) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x982) (not (= x1914 310377888)) (= (not (= 0 x1529)) x1059) (= x1494 (x2947 (x1618 x3174) (x2353 158) 0)) (not (= x1914 129058084)) (= x3174 x368) (>= 1461501637330902918203684832716283019655932542975 x1316) (not (= 79266373 x1914)) (<= 0 x2222) (> 2459953569 x1691) (not x2946) (= x1316 x1329) (= x1914 4233614559) (<= x2724 1461501637330902918203684832716283019655932542975) (= (x356 x3952 1) x1945) (= x3190 (x430 128)) (= (or (and (< x3968 32) (= true (<= x3968 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x3968 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2946) (= x2222 (x1657 x1945)) (= (x2947 (x1618 x1973) x1494 0) x3952) (not (= x1691 2229018723)) (= x150 (x2947 (x1618 x368) (x2353 5) 0)) (= 36 x1075) (= 114138022719912475680867045629478960338713192110453415424194996738542475935744 x3239) (= x3243 36) (= x2401 (x356 x150 1)) (= x715 (not (= 0 x3561))) (<= x2222 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x106 (x2032 804)) (not (> 2229018723 x1691)) (= 36 x3243) (> 3199929250 x1691) (not (> 4 x3243)) (= 36 x1075) (= x339 (x3381 (- x1075 4))) (<= x3849 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3849 0) (= x1691 2391746891) (>= 1461501637330902918203684832716283019655932542975 x368) (= x569 64481368622683354557555711714629296119639875834729404553039716062438103187456) (= x1221 (x430 160)) (= (x3381 (- x3243 4)) x3968) (= x3011 996) (not x2756) (> 2861565780 x1691) (>= x1216 0) (= (= x3174 x1937) x3441) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1216) (<= 0 x1529) (<= x3561 255) (<= 0 x3561) (< 0 x1183) (= (x2422 x2401) x982) (not (= 0 x106)) (= (x1533 x2686) x1529) (<= x1529 255) (= (x430 192) x1193) (= (x1382 (x1618 x1881)) x1183) (<= 0 x982) (= (x1277 x3952) x3849) (= x3174 x1316) (= x1472 (x2947 (x1618 x1316) (x2353 0) 0)) (= x2686 (x356 x150 3)) (= (or (and (< x339 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x339) true)) (> x339 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2756) (= x3680 (x430 128)) (< 0 x845) (<= 0 x2724) (= x1216 (x3349 x1472)) (= (x3977 868) x647) (> 256 x1529) (= x651 836) (= (x430 192) x1014) (not (> 4 x1075)) (< x2724 1461501637330902918203684832716283019655932542976) (= x3561 (x3125 x150)) (not (= x1691 2281136899)) (not (= x1914 1475734106)) (= x3024 (x430 160)) (< x3561 256) (= (x1382 (x1618 x1611)) x845) (= x2808 x368))))) x2333) x1595)))))
(assert (= (=> (and (= x3937 x2601) (= 0 x734)) x1261) x92))
(assert (x2421 x263))
(assert (= (and x3491 x3749) x2944))
(assert (x2421 x2185))
(assert (x2421 x3871))
(assert (x2421 x774))
(assert (x216 x2384 (- x106 x3185)))
(assert (= x1631 (or x3553 x2772)))
(assert (x2406 x1497))
(assert (x2421 x3004))
(assert (x2406 (- x106 x647)))
(assert (and (x2912 1000000000000000000 x3036) (x1712 1000000000000000000 x3036) (x804 1000000000000000000 x3036) (x3035 1000000000000000000 x3036) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3036) (- (* x3036 1000000000000000000) (* x3036 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3036 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x3036 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x3036 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x3036 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x3036 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x3036) (= (* x3036 1000000000000000000) (x1801 1000000000000000000 x3036))))
(assert (x2421 x2373))
(assert (= (and x1854 x426) x1793))
(assert (x248 x3185 x2751 x3574 x2957))
(assert (= (or x3131 x713 x289 x2276 x2009) x828))
(assert (x2421 x1387))
(assert (x2406 (- x294 x1184)))
(assert (= 24044834009420335638544845215851342251227478490780828673611325350056707489792 (x1991 (x2353 24044834009420335638544845215851342251227478490780828673611325350056707489792))))
(assert (x2421 x2720))
(assert (x2421 x1820))
(assert (x2421 x779))
(assert (= x3793 (and x1543 (not x3229))))
(assert (x216 x2823 (- x2957 x1184)))
(assert (x2421 x655))
(assert (x2421 x3671))
(assert (x2421 x3150))
(assert (= (+ 2 (x1991 x3979)) (x1991 (x356 x3979 2))))
(assert (x2406 (- x1033 x2384)))
(assert (= x561 (or x677 x2944 x2565 x1326 x1371)))
(assert (x2406 (- x3792 x1111)))
(assert (x2421 x1753))
(assert (x248 x77 x294 x3909 x3792))
(assert (= (=> (and (= x2717 x2546) (= x1723 x851)) x2966) x1129))
(assert (x216 x2384 (- x106 x3909)))
(assert (x2421 x320))
(assert (x2421 x2601))
(assert (= x2676 (or x3129 x271)))
(assert (x2421 x1997))
(assert (= (and x868 x310) x3386))
(assert (=> (>= 10000 x425) (= (x2353 x425) (x1618 x425))))
(assert (= (and x367 x1750) x1706))
(assert (x248 x106 x1033 x3185 x2751))
(assert (x248 x77 x294 x106 x1033))
(assert (x2421 x3195))
(assert (= (x1991 (x1618 x2810)) x2810))
(assert (x216 x106 (- x2384 x1033)))
(assert (and (=> (> 26959946667150639794667015087019630673637144422540572481103610249216 0) (= x2818 (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 (x3413 x2818 26959946667150639794667015087019630673637144422540572481103610249216)) (x2732 x2818 26959946667150639794667015087019630673637144422540572481103610249216)))) (x1688 x2818 26959946667150639794667015087019630673637144422540572481103610249216) (x1527 x2818 26959946667150639794667015087019630673637144422540572481103610249216) (x747 x2818 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x248 x3909 x3792 x106 x2384))
(assert (=> (>= 10000 x1285) (= (x1618 x1285) (x2353 x1285))))
(assert (x2421 x153))
(assert (= (or x745 x2151) x3034))
(assert (= x3247 (and x864 (not x2056))))
(assert (x304 x3574 x2957 x3849 x1184))
(assert (=> (<= x3469 10000) (= (x1618 x3469) (x2353 x3469))))
(assert (= x3585 (=> (and (= x343 x575) (= x1284 0)) x3587)))
(assert (= x1969 (or x2570 x373 x329 x929 x1066)))
(assert (x3448 x1684))
(assert (x2421 x52))
(assert (x1526 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x2421 x2017))
(assert (= 988262939 (x1991 (x2353 988262939))))
(assert (x2421 x2806))
(assert (= x2644 (=> (and (or (and (not x451) (and (or (and (not x1780) (and (= x2584 (x356 x832 1)) (<= x475 1461501637330902918203684832716283019655932542975) (= (x1088 x2584) x475) (<= 0 x475) (> 1461501637330902918203684832716283019655932542976 x475))) x1780) (and (> 1461501637330902918203684832716283019655932542976 x2193) (>= x2193 0) (= x1780 (= x2193 0)) (>= 1461501637330902918203684832716283019655932542975 x2193) (= (x365 x832) x2193)))) (and x451 (and (or (and x927 (and (>= x1568 0) (<= x1568 1461501637330902918203684832716283019655932542975) (< x1568 1461501637330902918203684832716283019655932542976) (= x1246 (x2947 (x1618 x2077) x1317 0)) (= x1568 (x2956 x1246)))) (not x927)) (and (= x2775 (x365 x832)) (= x2516 (x3381 (- x2077 x2775))) (= (> x2516 0) x927) (<= x2775 1461501637330902918203684832716283019655932542975) (< x2775 1461501637330902918203684832716283019655932542976) (>= x2775 0))))) (= x451 (ite (> x3905 x1734) (not (= 0 x2077)) (< x1734 x3905)))) x1054)))
(assert (x2421 x1680))
(assert (x2421 x375))
(assert (x2421 x1880))
(assert (x248 x1624 x2222 x3185 x2751))
(assert (= (x1991 (x1618 x1519)) x1519))
(assert (x2406 (- x1395 x3849)))
(assert (x2098 x463))
(assert (x2421 x2471))
(assert (x2421 x1684))
(assert (x216 x1395 (- x106 x2222)))
(assert (x2421 x352))
(assert (x2421 x294))
(assert (x216 x77 (- x294 x3792)))
(assert (x216 x3185 (- x2751 x3849)))
(assert (= (+ 1 (x1991 x3306)) (x1991 (x356 x3306 1))))
(assert (x2098 x3342))
(assert (x304 x3849 x1184 x3574 x2957))
(assert (= (and x1673 x427) x999))
(assert (x2421 x489))
(assert (x2406 (- x3849 x2957)))
(assert (x2421 x2538))
(assert (x248 x3574 x2957 x647 x1111))
(assert (x2406 (- x3909 x3574)))
(assert (and (= (x1801 9 3) 27) (= (x1801 27 3) 81) (= 9 (x1801 3 3)) (= (x1801 9 9) 81)))
(assert (x2421 x2247))
(assert (= (and x2460 (not x1352)) x2307))
(assert (= x1313 (and (not x3618) x2447)))
(assert (x2421 x2214))
(assert (x2421 x3858))
(assert (x2421 x1507))
(assert (x304 x3185 x2751 x2384 x106))
(assert (= (and (not x948) x950) x2509))
(assert (= (and (not x3081) x3685) x2444))
(assert (x2406 (- x3849 x3792)))
(assert (x2098 x2139))
(assert (x216 x1111 (- x647 x2384)))
(assert (and (x3187 x3189 1000000000000000000) (x2566 x3189 1000000000000000000) (x878 x3189 1000000000000000000) (x3266 x3189 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x3189)) (and (>= x3189 (* 1000000000000000000 (x3413 x3189 1000000000000000000))) (> (* (x3413 x3189 1000000000000000000) 1000000000000000000) (- x3189 1000000000000000000))))))
(assert (x2421 x2104))
(assert (x2406 (- x1184 x3185)))
(assert (x2421 x854))
(assert (x1192 32))
(assert (= x3557 (and x3062 (not x1350))))
(assert (=> (>= 10000 x1937) (= (x1618 x1937) (x2353 x1937))))
(assert (x248 x2823 x2957 x3909 x3792))
(assert (x248 x2823 x2957 x3185 x2751))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x2129 (+ (* 1461501637330902918203684832716283019655932542976 (x3413 x2129 1461501637330902918203684832716283019655932542976)) (x2732 x2129 1461501637330902918203684832716283019655932542976)))) (x1688 x2129 1461501637330902918203684832716283019655932542976) (x1527 x2129 1461501637330902918203684832716283019655932542976) (x747 x2129 1461501637330902918203684832716283019655932542976)))
(assert (x216 x2384 x106))
(assert (x2421 x2764))
(assert (x2421 x2327))
(assert (x3448 x2373))
(assert (= (and x2099 x1628) x1796))
(assert (x216 x2957 (- x2823 x1624)))
(assert (= (and x363 (not x2744)) x2188))
(assert (x248 x3849 x1184 x3574 x2957))
(assert (x2421 x182))
(assert (x2421 x825))
(assert (x2421 x119))
(assert (= (and x1810 x207) x1488))
(assert (x2098 1000000000000000000))
(assert (x1177 x1087 x2179))
(assert (x2421 x2726))
(assert (x2421 x817))
(assert (x216 x3792 (- x3909 x3849)))
(assert (= x3602 (and x3785 x843)))
(assert (x2421 x2793))
(assert (= x2122 (and (not x2310) x1116)))
(assert (x1192 1461501637330902918203684832716283019655932542976))
(assert (x2421 x3574))
(assert (x2421 x2038))
(assert (= x1327 (x1991 (x1618 x1327))))
(assert (= (=> (and (<= x1139 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1139 (x242 x3362)) (<= 0 x1139) (= x3720 x2130) (= x2548 x2210)) x187) x2997))
(assert (x2421 x2931))
(assert (x2421 x114))
(assert (and (x2912 1000000000000000000 x3804) (x1712 1000000000000000000 x3804) (x804 1000000000000000000 x3804) (x3035 1000000000000000000 x3804) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3804) (- (* x3804 1000000000000000000) (* x3804 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3804 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x3804 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x3804 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x3804 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x3804 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x3804) (= (* x3804 1000000000000000000) (x1801 1000000000000000000 x3804))))
(assert (x2421 x3243))
(assert (= (and x3769 (not x3118)) x272))
(assert (= (x1991 (x2353 4233614559)) 4233614559))
(assert (x248 x1111 x647 x3792 x3909))
(assert (= x3739 (and x1005 x156)))
(assert (x2421 x3314))
(assert (x2421 x1155))
(assert (x2421 x2795))
(assert (x248 x3185 x2751 x1624 x2222))
(assert (x2406 (- x2957 x647)))
(assert (x216 x2384 (- x106 x2751)))
(assert (=> (>= 10000 x416) (= (x2353 x416) (x1618 x416))))
(assert (x2406 (- x647 x3909)))
(assert (x2421 x1839))
(assert (x304 x3792 x3909 x1395 x106))
(assert (x248 x1395 x106 x3849 x1184))
(assert (x2421 x2226))
(assert (= (and (not x899) x1809) x512))
(assert (= (and x2266 x2008) x228))
(assert (x2421 x2234))
(assert (= x223 (or x551 x3100 x3173)))
(assert (x248 x3909 x3792 x294 x77))
(assert (x2406 (- x2823 x1624)))
(assert (and (x2912 1000000000000000000 x1264) (x1712 1000000000000000000 x1264) (x804 1000000000000000000 x1264) (x3035 1000000000000000000 x1264) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1264) (- (* x1264 1000000000000000000) (* x1264 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1264 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x1264 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1264 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x1264 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x1264 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x1264) (= (* x1264 1000000000000000000) (x1801 1000000000000000000 x1264))))
(assert (x2421 x1734))
(assert (x2421 x385))
(assert (x2421 x1086))
(assert (= x99 (and x2880 x3962)))
(assert (x3448 x3169))
(assert (x2421 x3028))
(assert (= x2692 (x1991 (x1618 x2692))))
(assert (x2421 x2227))
(assert (x304 x1624 x2222 x2823 x2957))
(assert (x304 x3849 x1184 x3185 x2751))
(assert (x304 x3849 x1184 x2823 x2957))
(assert (= x3055 (or x959 x3535 x1955)))
(assert (x2421 x3189))
(assert (x2421 x590))
(assert (x3448 x632))
(assert (x2421 x1881))
(assert (= (and x3898 x1319) x873))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x3058 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3413 x3058 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2732 x3058 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1688 x3058 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1527 x3058 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x747 x3058 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x2406 (- x106 x2823)))
(assert (= (and x557 (not x391)) x830))
(assert (= (x1618 310377888) (x2353 310377888)))
(assert (= x2233 (and x602 (not x1406))))
(assert (x1526 x981))
(assert (x2421 x567))
(assert (x2421 x3802))
(assert (= (and (not x954) x2122) x354))
(assert (x2421 x2748))
(assert (= (x1991 (x1618 x2746)) x2746))
(assert (x2406 (- x1111 x1624)))
(assert (x2421 x3464))
(assert (= (and x334 (not x287)) x393))
(assert (x3448 x1894))
(assert (x2421 x3770))
(assert (= x1154 (and x86 (not x477))))
(assert (x248 x1395 x106 x3574 x2957))
(assert (x2421 x1648))
(assert (=> (>= 10000 x50) (= (x2353 x50) (x1618 x50))))
(assert (= (and x2963 x3821) x163))
(assert (x2421 x1258))
(assert (x2421 x3534))
(assert (x304 x1395 x106 x2384 x106))
(assert (x304 x1624 x2222 x3185 x2751))
(assert (x2421 x2121))
(assert (x2406 (- x3574 x2957)))
(assert (x2421 x1858))
(assert (= (and (not x1694) x1796) x2914))
(assert (x2406 (- x2957 x3792)))
(assert (=> (<= x2555 10000) (= (x2353 x2555) (x1618 x2555))))
(assert (= x1595 (=> (and (or (and x2454 (and (not (= x3314 2796547477)) (not (= 2691771752 x3314)) (not (= x3314 2835717307)) (> 2929553584 x3314) (= 32 x1535) (<= 0 x3384) (not (< x3314 2217467699)) (not (> 4 x306)) (<= x3384 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x968 1) (= x2021 77053863734975077137548456399560439977311721439096602559221323163398253314048) (> x1044 0) (= 2858086653 x3314) (not (< x3314 2691771752)) (= x2216 x306) (= x306 4) (= (x1382 (x1618 x1937)) x1044))) (and (and (= x1222 (= x632 x3174)) (or (and (and (= 4 x688) (= x1535 32) (not (= x513 2691771752)) (< x513 2929553584) (not (> 4 x688)) (>= x3796 0) (= x3004 77053863734975077137548456399560439977311721439096602559221323163398253314048) (not (< x513 2691771752)) (< 0 x1949) (= x688 x2216) (not (= 2796547477 x513)) (= 2858086653 x513) (not (= 2835717307 x513)) (not (< x513 2217467699)) (= (x1382 (x1618 x632)) x1949) (= 1 x968) (<= x3796 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1222) (and (not x1222) (and (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2908) (= x415 4) (not (= x71 2835717307)) (= x154 77053863734975077137548456399560439977311721439096602559221323163398253314048) (= x968 1) (not (= 2691771752 x71)) (<= 0 x2908) (= x1535 32) (= x71 2858086653) (> x2637 0) (not (> 2217467699 x71)) (= x415 x2216) (not (= x71 2796547477)) (> 2929553584 x71) (= x2637 (x1382 (x1618 x3860))) (not (< x71 2691771752)) (not (< x415 4))) x2477) (= x2477 (= x3174 x3860)))))) (not x2454))) (and (= x3470 (x3783 (+ x3644 31))) (= (x3413 x429 1000000000000000000) x1674) (= x77 (x3630 x1824)) (= x2473 (x3783 (+ 996 x2911))) (< (x1801 x3849 x1184) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x706 (x2947 (x1618 x1973) x3245 0)) (<= x3185 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1184) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1184) (= x1982 (x2947 (x1618 x3174) (x2353 164) 0)) (= (x3264 996) x1624) (= (x316 x706) x3185) (< (x1801 x2222 x1624) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x586 x1674)) (= x1184 (x964 x1982)) (= x2216 4) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1801 x1033 x106)) (= (x525 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3470) x2911) (>= x77 0) (= (x356 x706 1) x1824) (= x586 (x3413 x3608 1000000000000000000)) (= (x1801 x3849 x1184) x429) (>= x3185 0) (= (x1801 x2222 x1624) x3608) (= x1033 (+ x3219 x1487)) (= (x3783 (+ 64 x2473)) x2148) (= x1674 x1487) (= (x2947 (x1618 x3174) (x2353 159) 0) x3245) (= (= x3174 x1937) x2454) (= x586 x3219) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x77) (= (x1801 x1033 x106) x3495) (not (= x1724 0)) (not (or (> x3644 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x3644 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3644 32)))) (= x1111 (x3413 x3495 1000000000000000000)))) x3323)))
(assert (=> (>= 10000 x3467) (= (x1618 x3467) (x2353 x3467))))
(assert (=> (>= 10000 x2810) (= (x1618 x2810) (x2353 x2810))))
(assert (x2421 x2546))
(assert (= x3129 (or x3241 x3303 x1660 x1512 x3238)))
(assert (x2421 x3283))
(assert (x2421 x168))
(assert (x248 x1184 x3849 x3792 x3909))
(assert (= x2812 (x1991 (x1618 x2812))))
(assert (x248 x3574 x2957 x1395 x106))
(assert (x1526 x3583))
(assert (= (x1991 (x1618 x585)) x585))
(assert (= x762 (and x3414 x2926)))
(assert (= (=> (and (= (= 0 x1285) x3119) (or (and (= x962 (x2947 (x1618 x1285) x218 0)) (not x3119)) (and x3119 (= (x356 x218 2) x2574)))) x388) x335))
(assert (= (or x3557 x3172 x3348 x1702 x922) x3593))
(assert (x2406 (- x2823 x2957)))
(assert (= (and x86 x477) x2885))
(assert (x2421 x1373))
(assert (x2421 x565))
(assert (= (x1991 (x2353 2391746891)) 2391746891))
(assert (x216 x1184 (- x3849 x2751)))
(assert (= x1955 (and x2477 x1566)))
(assert (x216 x106 (- x1395 x1033)))
(assert (= x3893 (=> (and (= 0 x1752) (= x2030 x2059)) x3337)))
(assert (x2406 (- x2823 x3185)))
(assert (x2098 x480))
(assert (= x1416 (and x3199 x3813)))
(assert (x216 x3909 (- x3792 x3849)))
(assert (x2421 x2902))
(assert (x3448 x958))
(assert (= (and x797 (not x405)) x2295))
(assert (= x3078 (or x3428 x792)))
(assert (x3448 x2718))
(assert (= (+ 3 (x1991 x3427)) (x1991 (x356 x3427 3))))
(assert (x2421 x377))
(assert (x2098 x2770))
(assert (= x2699 (x1991 (x1618 x2699))))
(assert (x2406 (- x106 x1395)))
(assert (x2421 x754))
(assert (=> (>= 10000 x2287) (= (x2353 x2287) (x1618 x2287))))
(assert (x304 x2384 x106 x1395 x106))
(assert (x216 x1184 (- x3849 x3792)))
(assert (x248 x2751 x3185 x2823 x2957))
(assert (x216 x3909 (- x3792 x2823)))
(assert (x2421 x2321))
(assert (= 1865448899 (x1991 (x2353 1865448899))))
(assert (x248 x1624 x2222 x3909 x3792))
(assert (x1526 x494))
(assert (x304 x2957 x2823 x3909 x3792))
(assert (x1177 x292 x3792))
(assert (x2421 x1884))
(assert (= (and x1780 x1924) x1632))
(assert (x304 x294 x77 x1033 x106))
(assert (= x3521 (=> (and (= x621 (x3381 (- x168 x1367))) (>= x1367 0) (> 1461501637330902918203684832716283019655932542976 x1367) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x168) (>= 1461501637330902918203684832716283019655932542975 x1367) (= (< 0 x621) x2239) (not (> x1874 x3903))) (and (=> (and (and (or (and (and (= (= x632 x1739) x954) (or (and (not x954) (and (= x2213 (= x3860 x1739)) (and (and (not (> 1856199391 x424)) (<= x1956 1461501637330902918203684832716283019655932542975) (= x3764 x3548) (not (= 1856199391 x424)) (not (< x3548 4)) (= x1751 32) (= x639 50292402827334880472107169365697159231523039388532301717704428044325102813184) (> x2797 0) (>= x1956 0) (= (x1382 (x1618 x3860)) x2797) (= x3659 1) (= x424 1865448899) (not (< x424 988262939)) (not (= 1857877511 x424)) (= x3548 4) (< x1956 1461501637330902918203684832716283019655932542976) (> 2217467699 x424)) x2213))) (and x954 (and (= 1865448899 x2800) (not (= x2800 1857877511)) (not (> 1856199391 x2800)) (= 4 x1413) (> x528 0) (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x3186) (not (> 4 x1413)) (not (= 1856199391 x2800)) (= 32 x1751) (<= x2000 1461501637330902918203684832716283019655932542975) (= x3764 x1413) (< x2800 2217467699) (< x2000 1461501637330902918203684832716283019655932542976) (= (x1382 (x1618 x632)) x528) (= 1 x3659) (<= 0 x2000) (not (> 988262939 x2800)))))) (not x2310)) (and (and (not (> 1856199391 x2479)) (not (< x2479 988262939)) (= x2479 1865448899) (> 2217467699 x2479) (not (= x2479 1857877511)) (= x1751 32) (= x3659 1) (= x770 4) (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x1898) (> x2587 0) (not (= 1856199391 x2479)) (= x770 x3764) (> 1461501637330902918203684832716283019655932542976 x1648) (= (x1382 (x1618 x1937)) x2587) (<= 0 x1648) (not (< x770 4)) (>= 1461501637330902918203684832716283019655932542975 x1648)) x2310)) (and (= (x525 1461501637330902918203684832716283019655932542975 x2746) x1739) (= 4 x3764) (= (= x1937 x1739) x2310))) x2239) x3708) (=> (and (not x2239) (and (<= 0 x2698) (= x3445 x2156) (= x2698 x2647) (>= 1461501637330902918203684832716283019655932542975 x2698) (< x2698 1461501637330902918203684832716283019655932542976))) x2530)))))
(assert (x2421 x1766))
(assert (= x642 (and x1762 x3066)))
(assert (= (or x1995 x631) x3877))
(assert (x2421 x664))
(assert (x2421 x2052))
(assert (x248 x2384 x106 x3909 x3792))
(assert (x2421 x1726))
(assert (x216 x3574 (- x2957 x1395)))
(assert (x216 x2384 (- x106 x294)))
(assert (x248 x3792 x3909 x1395 x106))
(assert (x2421 x837))
(assert (= (x1991 (x356 x706 1)) (+ (x1991 x706) 1)))
(assert (x3448 x2405))
(assert (x216 x3185 (- x2751 x1184)))
(assert (x2421 x3181))
(assert (x2098 x3608))
(assert (= (=> (= x2815 (not (> x2671 1))) (and x2815 (=> (and (= x1679 x3903) (= x1997 x2156) (= x325 x1874)) x3521))) x2282))
(assert (= (+ 1 (x1991 x3450)) (x1991 (x356 x3450 1))))
(assert (= x2622 (or x1812 x2302)))
(assert (not x2318))
(assert (= x324 (and x2860 x2433)))
(assert (x2421 x475))
(assert (x2421 x1617))
(assert (x2421 x3624))
(assert (and (x2912 1000000000000000000 x3105) (x1712 1000000000000000000 x3105) (x804 1000000000000000000 x3105) (x3035 1000000000000000000 x3105) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3105) (- (* x3105 1000000000000000000) (* x3105 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3105 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x3105 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x3105 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x3105 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x3105 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x3105) (= (* x3105 1000000000000000000) (x1801 1000000000000000000 x3105))))
(assert (x2421 x1285))
(assert (x2421 x240))
(assert (x2421 x3744))
(assert (x304 x77 x294 x3909 x3792))
(assert (x248 x2957 x2823 x2957 x3574))
(assert (= (and x2593 x3949) x3408))
(assert (x248 x2222 x1624 x3185 x2751))
(assert (x2421 x651))
(assert (= x3324 (x1991 (x1618 x3324))))
(assert (= x1583 (and x2880 (not x3962))))
(assert (= (or x2725 x3018) x560))
(assert (= x260 (and (not x192) x2113)))
(assert (x216 x2751 (- x3185 x3574)))
(assert (x2421 x3700))
(assert (x2421 x3124))
(assert (x2098 x3495))
(assert (= (and x855 x2172) x677))
(assert (x216 x106 (- x2384 x1111)))
(assert (= (and x830 x2311) x799))
(assert (x216 x1184 (- x3849 x1395)))
(assert (= (and x3380 (not x1847)) x2598))
(assert (= x3225 (and x905 x1459)))
(assert (= (and x2690 (not x3592)) x852))
(assert (x2421 x2263))
(assert (x2406 (- x647 x1184)))
(assert (= x708 (and (not x1499) x1627)))
(assert (= (and x2575 x66) x3515))
(assert (x2421 x2393))
(assert (= x3606 (and x1158 x1631)))
(assert (x2421 x1833))
(assert (x248 x2384 x106 x77 x294))
(assert (x2421 x3633))
(assert (= x2607 (and (not x2963) x3821)))
(assert (x2098 x292))
(assert (x304 x2957 x3574 x3849 x1184))
(assert (x2421 x1937))
(assert (x248 x2751 x3185 x2384 x106))
(assert (=> (>= 10000 x1507) (= (x2353 x1507) (x1618 x1507))))
(assert (= (and x2754 x2020) x2960))
(assert (x248 x1184 x3849 x3909 x3792))
(assert (x2421 x213))
(assert (x2421 x890))
(assert (x216 x2384 (- x106 x1184)))
(assert (x2421 x2389))
(assert (= (and (not x1653) x2952) x3809))
(assert (x2421 x484))
(assert (= (+ (x1991 x3146) 2) (x1991 (x356 x3146 2))))
(assert (= x199 (and (=> (and x948 (and (and (= x2900 (x2947 (x1618 x479) x1443 0)) (<= 0 x2792) (<= x2792 1461501637330902918203684832716283019655932542975) (= x2792 (x2834 x1015)) (= x3518 (ite (< 1 x3905) (not (= 0 x2792)) (> x3905 1))) (= (x356 x2900 1) x1015) (> 1461501637330902918203684832716283019655932542976 x2792)) (or (and x3518 (and (= x1528 (x356 x1625 2)) (= (x2947 (x1618 x2792) x1443 0) x1625) (= (not x2543) x268) (= x2006 (x3046 x1528)) (>= x2006 0) (= x2543 (< x2006 x3640)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2006))) (and (= x268 x3518) (not x3518))))) x3365) (=> (and (and (= 0 x146) (= x479 x2923)) (not x948)) x2846))))
(assert (= x3721 (=> (and (= x1539 x3817) (= 0 x3262)) x198)))
(assert (x2421 x2405))
(assert (= x815 (or x3391 x3078)))
(assert (x2421 x3145))
(assert (= x3089 (and (=> (and (and (= 0 x1060) (= x2924 x2620)) (not x2458)) x1342) (=> (and x2458 (and (or (and (= x1653 x744) (not x744)) (and (and (= x1653 (not x2244)) (= (x2947 (x1618 x2810) x1245 0) x1866) (= (< x3014 x646) x2244) (<= x3014 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3859 (x356 x1866 2)) (>= x3014 0) (= x3014 (x1259 x3859))) x744)) (and (> 1461501637330902918203684832716283019655932542976 x2810) (= (ite (> x3905 1) (not (= 0 x2810)) (> x3905 1)) x744) (= x2810 (x1962 x3848)) (= x2866 (x2947 (x1618 x2620) x1245 0)) (>= 1461501637330902918203684832716283019655932542975 x2810) (= x3848 (x356 x2866 1)) (<= 0 x2810)))) x2667))))
(assert (= (not (and (= (x2947 (x1618 x1868) x3808 0) x379) (= (x356 x379 1) x1409) (= x3411 (x137 x1409)) (>= x3411 0) (> 1461501637330902918203684832716283019655932542976 x3411) (<= x3411 1461501637330902918203684832716283019655932542975))) x3635))
(assert (x2406 (- x1624 x1111)))
(assert (x248 x1184 x3849 x2957 x3574))
(assert (x216 x106 (- x1033 x3185)))
(assert (x2406 (- x2384 x3185)))
(assert (= (x1991 (x356 x1317 2)) (+ (x1991 x1317) 2)))
(assert (x2421 x729))
(assert (x2406 (- x2957 x2384)))
(assert (x2421 x3920))
(assert (x2406 x3909))
(assert (x2421 x876))
(assert (x216 x2384 (- x106 x3574)))
(assert (x2421 x3220))
(assert (x248 x1624 x2222 x77 x294))
(assert (x216 x1395 (- x106 x2957)))
(assert (x3448 x1327))
(assert (= x690 (and x1346 x2837)))
(assert (x304 x1033 x106 x1111 x647))
(assert (x2406 (- x77 x1033)))
(assert (= x1758 (and x2260 x640)))
(assert (x2421 x3106))
(assert (= x749 (and x3810 x3260)))
(assert (= x2923 (x1991 (x1618 x2923))))
(assert (x2421 x3474))
(assert (= x2863 (and (not x3950) x3595)))
(assert (x2421 x2369))
(assert (and (x3187 x2770 1000000000000000000) (x2566 x2770 1000000000000000000) (x878 x2770 1000000000000000000) (x3266 x2770 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x2770)) (and (>= x2770 (* 1000000000000000000 (x3413 x2770 1000000000000000000))) (> (* (x3413 x2770 1000000000000000000) 1000000000000000000) (- x2770 1000000000000000000))))))
(assert (x2421 x2629))
(assert (x3448 x2923))
(assert (= x1212 (or x2399 x2705)))
(assert (x304 x3792 x3909 x3849 x1184))
(assert (x2421 x425))
(assert (= (x1991 (x356 x2899 1)) (+ 1 (x1991 x2899))))
(assert (x1177 x2139 x2179))
(assert (= (and x2223 x3631) x1660))
(assert (= x1640 (or x233 x1012 x2951 x678)))
(assert (x2421 x1826))
(assert (=> (<= x3324 10000) (= (x1618 x3324) (x2353 x3324))))
(assert (x2421 x2064))
(assert (= x1358 (=> (= (= x2633 0) x3961) (and (=> (and (= (or (and (> 32 x3747) (= (<= x3747 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3747)) x3393) (not x3961)) (and (=> (and x3393 (= x835 x3935)) x2467) (=> (and (not x3393) (and (= 1 x3919) (= x699 32) (= x835 x3158))) x2488))) (=> (and (= x835 x3935) x3961) x2467)))))
(assert (= (x1618 989455977) (x2353 989455977)))
(assert (x2421 x402))
(assert (x2421 x968))
(assert (x2421 x1535))
(assert (x2406 (- x3909 x1111)))
(assert (x2421 x2130))
(assert (= x751 (and (not x1397) x2680)))
(assert (= x1769 (and x1786 (not x3745))))
(assert (= x276 (and x2728 x2304)))
(assert (x216 x3849 (- x1184 x2384)))
(assert (x2421 x1661))
(assert (x2421 x227))
(assert (x248 x3909 x3792 x3185 x2751))
(assert (x2098 x28))
(assert (x2421 x2620))
(assert (x2421 x3804))
(assert (x216 x1395 (- x106 x2384)))
(assert (x2421 x1199))
(assert (x2421 x1517))
(assert (x2421 x1782))
(assert (=> (<= x1654 10000) (= (x1618 x1654) (x2353 x1654))))
(assert (= x3299 (and (not x358) x2549)))
(assert (= (and x1900 x3304) x289))
(assert (x248 x1184 x3849 x106 x2384))
(assert (x2098 x1772))
(assert (x2421 x770))
(assert (= (x1991 (x1618 x3899)) x3899))
(assert (= x2952 (or x3178 x3472)))
(assert (x2421 x102))
(assert (x2421 x3839))
(assert (x2406 (- x3849 x3574)))
(assert (x2421 x674))
(assert (x2406 (- x2823 x2751)))
(assert (x2421 x282))
(assert (x2421 x2828))
(assert (=> (<= x3700 10000) (= (x2353 x3700) (x1618 x3700))))
(assert (x2406 x1033))
(assert (x216 x1111 (- x647 x3909)))
(assert (x216 x106 (- x2384 x106)))
(assert (x304 x106 x1033 x3185 x2751))
(assert (x2406 (- x106 x3849)))
(assert (x2098 x3189))
(assert (= (or x145 x1318) x2096))
(assert (= x1256 (and x498 (not x1153))))
(assert (= (+ (x1991 x3460) 1) (x1991 (x356 x3460 1))))
(assert (x3448 x2287))
(assert (x248 x3849 x1184 x3909 x3792))
(assert (x216 x1111 (- x647 x3574)))
(assert (x2421 x343))
(assert (x2421 x915))
(assert (x2421 x2057))
(assert (x2421 x1567))
(assert (x2406 (- x3909 x3849)))
(assert (x304 x106 x1033 x3909 x3792))
(assert (x2421 x1091))
(assert (x2421 x2954))
(assert (x2421 x3841))
(assert (x2421 x1941))
(assert (=> (<= x3622 10000) (= (x2353 x3622) (x1618 x3622))))
(assert (x2406 (- x3574 x1395)))
(assert (x2421 x3174))
(assert (= x2530 (=> (and (and (= x3733 4) (= x1118 (x525 1461501637330902918203684832716283019655932542975 x2746)) (= x3362 (x2947 (x1618 x1118) (x2353 169) 0)) (= x2774 (= x1937 x1086)) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x1086)) (or (and (not x2774) (and (or (and (and (= x2807 1) (not (> 4 x1498)) (> x783 0) (= (x1382 (x1618 x632)) x783) (not (> 405663989 x458)) (= x1311 32) (= 405663989 x458) (> 988262939 x458) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x3546) (< x458 2217467699) (= x1498 4) (= x3733 x1498)) x856) (and (not x856) (and (and x675 (and (= x3462 4) (< 0 x1766) (not (> 405663989 x2011)) (not (> 4 x3462)) (< x2011 988262939) (= x2011 405663989) (= x3462 x3733) (= x1311 32) (< x2011 2217467699) (= x2807 1) (= x3584 10936679508223583803006762266923565500374401145016910147028117655998246682624) (= x1766 (x1382 (x1618 x3860))))) (= (= x3860 x1086) x675)))) (= x856 (= x632 x1086)))) (and (and (= 1 x2807) (= x3409 x3733) (= x1782 405663989) (= x3409 4) (= x2493 10936679508223583803006762266923565500374401145016910147028117655998246682624) (< x1782 2217467699) (< x1782 988262939) (not (> 405663989 x1782)) (= 32 x1311) (= x3224 (x1382 (x1618 x1937))) (not (< x3409 4)) (< 0 x3224)) x2774))) x1819)))
(assert (x2421 x586))
(assert (= (and x393 x1423) x2276))
(assert (x248 x2957 x2823 x1111 x647))
(assert (x2421 x3144))
(assert (x2421 x3183))
(assert (= (x1991 (x1618 x1822)) x1822))
(assert (x2421 x3548))
(assert (x1526 x1840))
(assert (=> (<= x2718 10000) (= (x2353 x2718) (x1618 x2718))))
(assert (x248 x1111 x647 x2384 x106))
(assert (x2421 x2077))
(assert (= 2929553584 (x1991 (x2353 2929553584))))
(assert (x2421 x932))
(assert (x248 x2957 x2823 x106 x1033))
(assert (= (=> (and (or (and x2082 (and (= x628 (not x2186)) (>= x3042 0) (= x3042 x1507) (>= 1461501637330902918203684832716283019655932542975 x3042) (= (x2947 (x1618 x3217) (x2353 155) 0) x3867) (< x3042 1461501637330902918203684832716283019655932542976) (= x3269 (x356 x3867 1)) (= (x3687 x3269) x3042) (= x3217 (x525 1461501637330902918203684832716283019655932542975 x2746)) (= (= 0 x3042) x2186))) (and (not x2082) (and (= x1327 x1507) (= x628 x2082)))) (and (= x82 (x3783 (+ 32 x1478))) (= (< x2104 x3720) x2082))) x277) x185))
(assert (= (=> (and (not (= x2807 0)) (<= x616 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2600 (> x616 0)) (>= x616 0) (= x1049 (x3783 (+ x3445 x2621))) (not (or (and (= true (<= x1311 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1311 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1311))) (= (x3783 (+ x1311 31)) x3123) (= x616 (x1125 x3362)) (= (x525 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3123) x2621) (= x3792 (x3667 x3445))) (and (=> (and x2600 (and (or (and x2754 (and (= x2403 (x2409 (* 1000000000000000000 x1264))) (= (x3413 x3114 1000000000000000000) x2702) (not (< x1966 x2702)) (= x1651 (> x2384 115792089237316195423570985008687907853269984665640564039457)) (= 0 x2130) (= (x3413 x3342 x3792) x3114) (> x3792 0) (= (ite x1651 1 0) x1878) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1966) (= x1878 0) (= x2210 x1264) (= x1966 (x1125 x3362)) (= (x3381 (- x1966 x2702)) x2629) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2403 1000000000000000000)) (= (* 1000000000000000000 x2403) x3342) (<= 0 x1966))) (and (and (= x3841 x2130) (= x3841 (x3381 (- x1264 x683))) (= x2210 x683) (not (< x2384 x683))) (not x2754))) (and (= (< x1264 x683) x2754) (= x1790 (x1801 x3909 x3792)) (>= x3909 0) (= x3909 (x1125 x3362)) (= (x3413 x1790 1000000000000000000) x683) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1801 x3909 x3792)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3909)))) x2997) (=> (and (not x2600) (and (= 0 x2548) (= x1264 x3720))) x187))) x1819))
(assert (=> (>= 10000 x1835) (= (x2353 x1835) (x1618 x1835))))
(assert (x216 x1184 (- x3849 x77)))
(assert (= (and x2780 x3479) x2457))
(assert (x2406 (- x1033 x2957)))
(assert (= x3861 (=> (and (= 0 x2052) (= x1548 x668)) x645)))
(assert (= (and x3149 x1339) x1644))
(assert (x216 x106 (- x1033 x3909)))
(assert (= x3685 (and x735 (not x994))))
(assert (= (x1991 (x2353 989455977)) 989455977))
(assert (x2421 x1479))
(assert (=> (<= x897 10000) (= (x1618 x897) (x2353 x897))))
(assert (= (x1618 3320572652) (x2353 3320572652)))
(assert (x304 x647 x1111 x2222 x1624))
(assert (x3448 x1386))
(assert (x2421 x2605))
(assert (x248 x1033 x106 x3574 x2957))
(assert (x2406 (- x3185 x106)))
(assert (x2421 x2782))
(assert (x2421 x3061))
(assert (= x508 (and x359 (not x3049))))
(assert (= (x1618 114138022719912475680867045629478960338713192110453415424194996738542475935744) (x2353 114138022719912475680867045629478960338713192110453415424194996738542475935744)))
(assert (x248 x106 x1395 x3909 x3792))
(assert (= x1544 (and x40 x1841)))
(assert (x2406 (- x2957 x1624)))
(assert (x2421 x3746))
(assert (x248 x1033 x106 x3792 x3909))
(assert (x2421 x683))
(assert (= (and x3974 x1104) x937))
(assert (x2406 (- x77 x1184)))
(assert (x3448 x2810))
(assert (= (and (=> (and (and (and (= x3487 (x356 x3460 1)) (> 1461501637330902918203684832716283019655932542976 x3469) (= x2162 (ite (> x3905 1) (not (= 0 x3469)) (> x3905 1))) (>= x3469 0) (= (x2947 (x1618 x3169) x1317 0) x3460) (= (x2573 x3487) x3469) (>= 1461501637330902918203684832716283019655932542975 x3469)) (or (and x2162 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1513) (>= x1513 0) (= x300 (< x1513 x914)) (= x338 (x2947 (x1618 x3469) x1317 0)) (= x1513 (x794 x2510)) (= (x356 x338 2) x2510) (= x3785 (not x300)))) (and (= x2162 x3785) (not x2162)))) x3971) x3855) (=> (and (not x3971) (and (= x1734 0) (= x3169 x2077))) x2644)) x2124))
(assert (= (x1991 (x1618 x1065)) x1065))
(assert (x2406 (- x3792 x77)))
(assert (x2421 x1311))
(assert (x3448 x1822))
(assert (x2421 x2323))
(assert (x2421 x2232))
(assert (= x1590 (=> (and (= x916 x1574) (= x2842 0)) x3568)))
(assert (x2421 x1058))
(assert (x2421 x2829))
(assert (x216 x2222 (- x1624 x3574)))
(assert (x3448 x178))
(assert (= x806 (and x3092 (not x3960))))
(assert (= 1461501637330902918203684832716283019655932542975 (x1991 (x2353 1461501637330902918203684832716283019655932542975))))
(assert (x2421 x3849))
(assert (x216 x2222 (- x1624 x2957)))
(assert (x2421 x827))
(assert (x216 x1395 (- x106 x2823)))
(assert (x2406 (- x1033 x3185)))
(assert (x2421 x3513))
(assert (= (+ (x1991 x1685) 1) (x1991 (x356 x1685 1))))
(assert (= x536 (x1991 (x1618 x536))))
(assert (= (and x3294 x2205) x3501))
(assert (x2421 x1347))
(assert (= (=> (and (or (and (not x1415) (and (= x3720 x2975) (= x2548 x3347))) (and x1415 (and (= (* x3804 1000000000000000000) x2340) (< (* 1000000000000000000 x3804) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x178) (= x3688 x3888) (>= x3741 0) (not (> x3888 x3720)) (= x1096 0) (= x3741 (x3459 x1128)) (< 0 x1978) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x2812) (= x2076 x2975) (= (x3413 x3189 1000000000000000000) x3520) (= x1096 (ite x610 1 0)) (= (x2947 (x1618 x2812) (x2353 164) 0) x211) (= (+ x2693 x3688) x3250) (= (x3413 x2340 x1978) x3189) (< (+ x2548 x3888) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3374 x3520) (= x2693 x2548) (= (x2947 (x1618 x178) (x2353 169) 0) x910) (= x1978 (x964 x211)) (= x3170 x3741) (= x2076 (x3381 (- x3720 x3888))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3741) (= x1128 (x356 x910 2)) (= x610 (< 115792089237316195423570985008687907853269984665640564039457 x3888)) (= x3804 (x2409 (* 1000000000000000000 x3888))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1978) (< (+ x3520 x3741) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3250 x3347) (= (+ x3374 x3170) x1052) (<= 0 x1978)))) (= (> x3888 0) x1415)) x3184) x2375))
(assert (x2421 x3766))
(assert (x248 x106 x1395 x2957 x2823))
(assert (x248 x2957 x2823 x77 x294))
(assert (x248 x2957 x2823 x1184 x3849))
(assert (x2098 x2393))
(assert (x2421 x1516))
(assert (= (and x2205 (not x3294)) x2608))
(assert (x2421 x2101))
(assert (x2421 x2987))
(assert (x216 x1624 (- x2222 x3574)))
(assert (= (and x714 x2652) x2394))
(assert (= x3479 (and x2066 x1569)))
(assert (x2421 x2742))
(assert (x2421 x3353))
(assert (x248 x106 x1395 x2823 x2957))
(assert (x304 x77 x294 x1033 x106))
(assert (x248 x3185 x2751 x2823 x2957))
(assert (x2421 x711))
(assert (x2421 x2965))
(assert (= (=> (and (or (and (and (>= x3209 0) (= (x3030 x2411) x3209) (= x2535 (= x3209 0)) (= (x2947 (x1618 x1822) (x2353 163) 0) x2411) (= x1822 (x525 1461501637330902918203684832716283019655932542975 x2746)) (>= 255 x3209) (< x3209 256)) x2092) (and (not x2092) (= x2092 x2535))) (= (> x3720 0) x2092)) x908) x187))
(assert (= x2864 (and x733 (not x2238))))
(assert (x3313 x428))
(assert (= (and x1582 x3077) x2832))
(assert (x216 x106 (- x1033 x106)))
(assert (x1526 x3020))
(assert (=> (<= x549 10000) (= (x2353 x549) (x1618 x549))))
(assert (= (=> (and (= x898 x3376) (= x3161 0)) x622) x2907))
(assert (x2421 x261))
(assert (x2421 x3937))
(assert (x1526 x1934))
(assert (= x3900 (and x2099 (not x1628))))
(assert (x2421 x3787))
(assert (x248 x2222 x1624 x3909 x3792))
(assert (= (and x2552 x595) x554))
(assert (x2421 x3972))
(assert (= x882 (and x3866 x951)))
(assert (= (x1618 89522461602318961266474185744428785802019839140862557341176434972013554040832) (x2353 89522461602318961266474185744428785802019839140862557341176434972013554040832)))
(assert (= (and x2970 x2777) x3530))
(assert (x2421 x2893))
(assert (x2421 x814))
(assert (= (x1991 (x2353 2796547477)) 2796547477))
(assert (= (x1991 (x356 x614 2)) (+ (x1991 x614) 2)))
(assert (x2406 (- x1624 x2384)))
(assert (= (and x156 (not x1005)) x2880))
(assert (= x3493 (x1991 (x1618 x3493))))
(assert (x248 x647 x1111 x2222 x1624))
(assert (x1526 x3058))
(assert (x248 x647 x1111 x3574 x2957))
(assert (= (+ (x1991 x150) 1) (x1991 (x356 x150 1))))
(assert (x2421 x1052))
(assert (= x2297 (and x2861 x3193)))
(assert (x248 x3909 x3792 x2384 x106))
(assert (x2406 x2558))
(assert (x248 x3909 x3792 x2222 x1624))
(assert (x216 x3185 (- x2751 x3909)))
(assert (x2421 x3725))
(assert (x2406 (- x2384 x77)))
(assert (= (and x3443 x383) x1636))
(assert (x216 x3574 (- x2957 x647)))
(assert (x2421 x2067))
(assert (and (=> (> 32 0) (= x3020 (+ (* 32 (x3413 x3020 32)) (x2732 x3020 32)))) (x1688 x3020 32) (x1527 x3020 32) (x747 x3020 32)))
(assert (x2421 x190))
(assert (x304 x3185 x2751 x1033 x106))
(assert (x248 x1111 x647 x2957 x3574))
(assert (x2406 (- x3792 x1184)))
(assert (x2421 x3368))
(assert (= x3878 (and x297 x1053)))
(assert (x1192 x3123))
(assert (x248 x106 x2384 x77 x294))
(assert (=> (>= 10000 x759) (= (x1618 x759) (x2353 x759))))
(assert (x2406 (- x1033 x1395)))
(assert (= x3924 (and x123 x2839)))
(assert (x2421 x3461))
(assert (x2406 (- x1111 x3849)))
(assert (x2421 x2231))
(assert (= x1579 (and (not x3897) x2674)))
(assert (x216 x77 x294))
(assert (= (x1991 (x1618 x362)) x362))
(assert (x2421 x395))
(assert (and (x2912 1000000000000000000 x809) (x1712 1000000000000000000 x809) (x804 1000000000000000000 x809) (x3035 1000000000000000000 x809) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x809) (- (* x809 1000000000000000000) (* x809 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x809 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x809 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x809 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x809 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x809 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x809) (= (* x809 1000000000000000000) (x1801 1000000000000000000 x809))))
(assert (x2421 x1077))
(assert (= (and (not x2859) x1306) x3913))
(assert (= (and x2680 x1397) x1028))
(assert (= (x1991 (x356 x1031 1)) (+ 1 (x1991 x1031))))
(assert (= (x1618 18446744073709551615) (x2353 18446744073709551615)))
(assert (x248 x1184 x3849 x294 x77))
(assert (= x2116 (=> (and (= x2119 x1387) (= x3923 x2925)) x3309)))
(assert (x2421 x1817))
(assert (x1526 x333))
(assert (x2421 x468))
(assert (x216 x3909 (- x3792 x647)))
(assert (x2421 x1868))
(assert (x2421 x647))
(assert (x2421 x3622))
(assert (= (and (not x1553) x3454) x631))
(assert (x2421 x2831))
(assert (= x3833 (and x852 x1051)))
(assert (x248 x3792 x3909 x2222 x1624))
(assert (= (or x807 x2727 x2783 x527 x2885) x1873))
(assert (x2421 x3843))
(assert (x2421 x809))
(assert (= (+ (x1991 x1445) 1) (x1991 (x356 x1445 1))))
(assert (x2406 (- x2222 x1395)))
(assert (= 2678788150 (x1991 (x2353 2678788150))))
(assert (x2421 x720))
(assert (x2421 x2528))
(assert (x2421 x313))
(assert (x304 x1033 x106 x3909 x3792))
(assert (x2421 x412))
(assert (=> (>= 10000 x790) (= (x1618 x790) (x2353 x790))))
(assert (= (and (not x1918) x436) x844))
(assert (x216 x1033 (- x106 x294)))
(assert (x248 x1111 x647 x1184 x3849))
(assert (= (and x2372 (not x638)) x1626))
(assert (x2406 (- x1395 x106)))
(assert (and (x3187 x3114 1000000000000000000) (x2566 x3114 1000000000000000000) (x878 x3114 1000000000000000000) (x3266 x3114 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x3114)) (and (>= x3114 (* 1000000000000000000 (x3413 x3114 1000000000000000000))) (> (* (x3413 x3114 1000000000000000000) 1000000000000000000) (- x3114 1000000000000000000))))))
(assert (= x46 (=> (and (or (not x1777) x1777) (= x1777 (= 0 x2633))) x1358)))
(assert (= x3777 (=> (and (= x2994 0) (= x1889 x2601)) x1477)))
(assert (x2421 x2943))
(assert (x216 x3849 (- x1184 x3909)))
(assert (= (and (not x143) x767) x40))
(assert (x2421 x1894))
(assert (x2421 x1309))
(assert (x2421 x1014))
(assert (x2421 x2649))
(assert (x2421 x1390))
(assert (= (and x1406 x602) x3086))
(assert (x2421 x2717))
(assert (= (and (not x1222) x2850) x1566))
(assert (= x780 (and (not x448) x1099)))
(assert (x2406 (- x294 x2957)))
(assert (x2406 (- x3574 x2222)))
(assert (x248 x2751 x3185 x2957 x2823))
(assert (x216 x2751 (- x3185 x3792)))
(assert (x2421 x1751))
(assert (x3313 x981))
(assert (x248 x2751 x3185 x2222 x1624))
(assert (x248 x1111 x647 x3909 x3792))
(assert (x2421 x1840))
(assert (= (x2353 2796547477) (x1618 2796547477)))
(assert (= x763 (and x3488 x2511)))
(assert (= (and x204 x1027) x2570))
(assert (= (and x3321 (not x3740)) x1837))
(assert (= (x1991 (x2353 1856199391)) 1856199391))
(assert (x2098 x3792))
(assert (= x1829 (and (not x2603) x2677)))
(assert (x1192 x3939))
(assert (x216 x2823 (- x2957 x3909)))
(assert (= x1110 (and x3946 (not x3789))))
(assert (x2421 x1144))
(assert (= (and (not x2426) x1154) x3449))
(assert (= (x1991 (x356 x78 1)) (+ (x1991 x78) 1)))
(assert (=> (>= 10000 x1118) (= (x2353 x1118) (x1618 x1118))))
(assert (= x2018 (or x3293 x3378)))
(assert (x2421 x2376))
(assert (x2421 x1724))
(assert (x248 x3792 x3909 x3574 x2957))
(assert (= (x1991 (x1618 x2135)) x2135))
(assert (x2406 (- x647 x3574)))
(assert (x248 x1395 x106 x1624 x2222))
(assert (= x607 (or x1985 x3225)))
(assert (x216 x2957 (- x2823 x647)))
(assert (= x2661 (and x2876 (not x2887))))
(assert (= (and x1247 x3076) x3631))
(assert (x216 x77 (- x294 x2384)))
(assert (= x1525 (and x1653 x2952)))
(assert (x2406 (- x1184 x106)))
(assert (x304 x1624 x2222 x2384 x106))
(assert (= (and x3451 x1213) x233))
(assert (x2406 (- x3909 x1184)))
(assert (x2406 (- x3849 x2751)))
(assert (= x1275 (=> (and (= x695 x3637) (= x2114 x1932)) x3051)))
(assert (x2421 x3939))
(assert (x2421 x152))
(assert (= x2976 (and x1017 x840)))
(assert (x2421 x497))
(assert (= x2733 (and x1546 (not x1362))))
(assert (x2421 x371))
(assert (x2421 x1558))
(assert (x2098 x3803))
(assert (and (x3187 x1172 1000000000000000000) (x2566 x1172 1000000000000000000) (x878 x1172 1000000000000000000) (x3266 x1172 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x1172)) (and (>= x1172 (* 1000000000000000000 (x3413 x1172 1000000000000000000))) (> (* (x3413 x1172 1000000000000000000) 1000000000000000000) (- x1172 1000000000000000000))))))
(assert (x304 x294 x77 x3849 x1184))
(assert (x2421 x1678))
(assert (x2421 x3496))
(assert (x304 x3792 x3909 x1111 x647))
(assert (x248 x2957 x3574 x3849 x1184))
(assert (x304 x2957 x2823 x2222 x1624))
(assert (x248 x106 x1033 x1111 x647))
(assert (x248 x2384 x106 x2222 x1624))
(assert (= x1147 (and (not x1449) x2123)))
(assert (x1192 x3470))
(assert (x2421 x2428))
(assert (x216 x3849 (- x1184 x2957)))
(assert (x2421 x2360))
(assert (x2406 (- x1184 x1111)))
(assert (x2406 x2403))
(assert (= (x1991 (x1618 x1973)) x1973))
(assert (x2421 x1006))
(assert (x216 x3792 (- x3909 x1033)))
(assert (x248 x3909 x3792 x1395 x106))
(assert (= (and (not x105) x3627) x1461))
(assert (x2421 x2925))
(assert (x2421 x913))
(assert (x216 x1395 (- x106 x3574)))
(assert (x2406 (- x3849 x3185)))
(assert (x2421 x12))
(assert (x2421 x2222))
(assert (x2421 x3837))
(assert (x2421 x1696))
(assert (x2421 x1781))
(assert (= (and x2454 x3824) x3535))
(assert (= (x1991 (x356 x450 1)) (+ 1 (x1991 x450))))
(assert (x2421 x903))
(assert (x2421 x2639))
(assert (x2421 x1193))
(assert (= x872 (and x848 x3350)))
(assert (=> (>= 10000 x636) (= (x1618 x636) (x2353 x636))))
(assert (x2421 x599))
(assert (x304 x2222 x1624 x1111 x647))
(assert (= x1218 (and (not x1204) x799)))
(assert (= (and (not x1349) x686) x2614))
(assert (= x3853 (=> (and (and (= (= 0 x3188) x1807) (>= 1461501637330902918203684832716283019655932542975 x3188) (<= 0 x3188) (> 1461501637330902918203684832716283019655932542976 x3188)) (or x1807 (and (not x1807) (and (> 1461501637330902918203684832716283019655932542976 x3188) (not (= 0 x664)) (= x664 (x1382 (x1618 x3188))) (< x3267 4294967296) (<= 0 x3188) (<= x3188 1461501637330902918203684832716283019655932542975))))) x3009)))
(assert (x2421 x155))
(assert (= (x1618 56879788782001134333110164298630386859921104006521148999079851869125721718784) (x2353 56879788782001134333110164298630386859921104006521148999079851869125721718784)))
(assert (= x165 (or x1174 x2763)))
(assert (x2421 x1584))
(assert (=> (<= x536 10000) (= (x1618 x536) (x2353 x536))))
(assert (x2421 x2514))
(assert (x2406 (- x77 x2823)))
(assert (= (and x2723 x81) x2290))
(assert (x3448 x3217))
(assert (= (and x2233 (not x3115)) x3956))
(assert (x2421 x2036))
(assert (x2098 x603))
(assert (x304 x3185 x2751 x3574 x2957))
(assert (= (and x1120 (not x1891)) x969))
(assert (x216 x2957 (- x2823 x1184)))
(assert (= (x1991 (x1618 x425)) x425))
(assert (= x963 (and x3740 x3321)))
(assert (x304 x3792 x3909 x2823 x2957))
(assert (x248 x3909 x3792 x1033 x106))
(assert (= x1667 (and x3913 x400)))
(assert (x3448 x3760))
(assert (= x3307 (and x772 x1298)))
(assert (x2421 x2775))
(assert (x2421 x3598))
(assert (x2421 x3743))
(assert (x216 x1184 (- x3849 x3574)))
(assert (x2421 x1324))
(assert (= x50 (x1991 (x1618 x50))))
(assert (= (and x1643 x800) x2920))
(assert (x2421 x842))
(assert (x248 x3574 x2957 x294 x77))
(assert (= x2950 (and x1968 (not x3119))))
(assert (= x2399 (and (not x1664) x272)))
(assert (x1177 x2663 x2179))
(assert (x2421 x3875))
(assert (x2406 (- x2751 x2222)))
(assert (x248 x3909 x3792 x647 x1111))
(assert (= (and x3958 (not x3424)) x2552))
(assert (= x1370 (or x41 x2960)))
(assert (x2421 x3719))
(assert (= (and x3657 (not x1029)) x3698))
(assert (x2421 x2817))
(assert (= x177 (and x2825 x901)))
(assert (x2406 (- x1184 x3792)))
(assert (x2421 x1198))
(assert (= x330 (=> (and (= x3665 (= 0 x3669)) (or (and (= (x356 x3338 2) x1831) x3665) (and (= (x2947 (x1618 x3669) x3338 0) x3954) (not x3665)))) x2215)))
(assert (= (and (not x2572) x1706) x1965))
(assert (x216 x1184 (- x3849 x2823)))
(assert (x248 x1624 x2222 x647 x1111))
(assert (x2421 x2212))
(assert (x2421 x1080))
(assert (x2098 x1790))
(assert (= (=> (= x1663 (= x529 0)) (and (=> (and (not x1663) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2965)) (< x2965 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2965)) x3016)) (and (=> (and (not x3016) (and (= 1 x3816) (= x2816 x2055) (= 32 x2379))) x1436) (=> (and (= x2055 x3972) x3016) x2922))) (=> (and (= x2055 x3972) x1663) x2922))) x96))
(assert (= x3553 (or x3138 x2363)))
(assert (x304 x1395 x106 x1033 x106))
(assert (= (x1618 405663989) (x2353 405663989)))
(assert (= (and x690 (not x3565)) x3164))
(assert (x2421 x485))
(assert (= (x1991 (x1618 x2077)) x2077))
(assert (= x2317 (and x696 (not x3393))))
(assert (x2421 x3815))
(assert (= (+ 2 (x1991 x1866)) (x1991 (x356 x1866 2))))
(assert (x2421 x1010))
(assert (x2406 (- x1395 x3574)))
(assert (x2421 x811))
(assert (x248 x294 x77 x1624 x2222))
(assert (=> (<= x2067 10000) (= (x2353 x2067) (x1618 x2067))))
(assert (x248 x2823 x2957 x647 x1111))
(assert (= 2217467699 (x1991 (x2353 2217467699))))
(assert (x2421 x2993))
(assert (x2421 x1519))
(assert (x2421 x419))
(assert (x2406 x3574))
(assert (= (and x65 x3140) x2641))
(assert (x216 x3185 (- x2751 x2957)))
(assert (= x3416 (and x650 x2356)))
(assert (= x549 (x1991 (x1618 x549))))
(assert (= (=> (and (= x3643 (x356 x2739 1)) (= x2739 (x356 x1662 1)) (= x2715 x3522) (= x1973 x1269) (= (x2947 (x1618 x1973) x1245 0) x1662)) x435) x2936))
(assert (x2421 x3918))
(assert (= x2023 (and (not x410) x2701)))
(assert (= (x2353 1466279372) (x1618 1466279372)))
(assert (x2421 x513))
(assert (x3448 x368))
(assert (= x3182 (and (not x2162) x3379)))
(assert (x216 x1624 (- x2222 x1395)))
(assert (x248 x106 x1033 x294 x77))
(assert (= (x1991 (x356 x1171 2)) (+ (x1991 x1171) 2)))
(assert (= (or x2934 x2666) x3805))
(assert (= x959 (and x1222 x2850)))
(assert (= (+ (x1991 x1795) 1) (x1991 (x356 x1795 1))))
(assert (x2421 x3387))
(assert (x248 x3792 x3909 x2957 x2823))
(assert (= (and (not x1750) x367) x2533))
(assert (x2421 x3928))
(assert (x2421 x1654))
(assert (= x54 (or x3602 x1603)))
(assert (and (x3187 x3608 1000000000000000000) (x2566 x3608 1000000000000000000) (x878 x3608 1000000000000000000) (x3266 x3608 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x3608)) (and (>= x3608 (* 1000000000000000000 (x3413 x3608 1000000000000000000))) (> (* (x3413 x3608 1000000000000000000) 1000000000000000000) (- x3608 1000000000000000000))))))
(assert (x2421 x67))
(assert (=> (<= x1684 10000) (= (x2353 x1684) (x1618 x1684))))
(assert (x2406 x42))
(assert (x2421 x1686))
(assert (x2406 (- x1111 x3909)))
(assert (x2421 x2919))
(assert (x2421 x693))
(assert (x304 x106 x1395 x2222 x1624))
(assert (= (and x2836 x508) x3443))
(assert (x2421 x2642))
(assert (= (and x2310 x1116) x1676))
(assert (x248 x647 x1111 x3849 x1184))
(assert (x216 x2957 (- x2823 x2384)))
(assert (x216 x3574 (- x2957 x1184)))
(assert (x2421 x3581))
(assert (= (or x2269 x3141 x943 x2630 x1262 x1374) x3483))
(assert (x2421 x2659))
(assert (x248 x106 x2384 x1395 x106))
(assert (x248 x1111 x647 x2957 x2823))
(assert (= x3860 (x1991 (x1618 x3860))))
(assert (x2406 (- x2384 x1033)))
(assert (x2421 x835))
(assert (x2406 (- x2957 x2222)))
(assert (x248 x2384 x106 x106 x1033))
(assert (x248 x3574 x2957 x106 x2384))
(assert (= x3675 (and x1559 x2118)))
(assert (and (x3187 x463 1000000000000000000) (x2566 x463 1000000000000000000) (x878 x463 1000000000000000000) (x3266 x463 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x463)) (and (>= x463 (* 1000000000000000000 (x3413 x463 1000000000000000000))) (> (* (x3413 x463 1000000000000000000) 1000000000000000000) (- x463 1000000000000000000))))))
(assert (x216 x2957 (- x2823 x1111)))
(assert (x2421 x1328))
(assert (= x2549 (or x3530 x1950)))
(assert (x2421 x3234))
(assert (= (+ (x1991 x3390) 2) (x1991 (x356 x3390 2))))
(assert (x2421 x2424))
(assert (= (and x1000 (not x3931)) x1068))
(assert (x2421 x1768))
(assert (x2421 x337))
(assert (x216 x2957 (- x3574 x2957)))
(assert (=> (>= 10000 x2125) (= (x2353 x2125) (x1618 x2125))))
(assert (= x266 (and x122 (not x2594))))
(assert (= x2468 (and x1681 (not x1345))))
(assert (= (and x1074 x1398) x967))
(assert (= (and x2661 x3933) x1337))
(assert (x2421 x1498))
(assert (x2421 x2041))
(assert (x2406 (- x3849 x647)))
(assert (= x3737 (or x2144 x2704)))
(assert (= (x1991 (x356 x379 1)) (+ (x1991 x379) 1)))
(assert (= x2053 (and x3076 (not x1247))))
(assert (x2421 x2619))
(assert (= (x1991 (x2353 3199929250)) 3199929250))
(assert (x216 x3185 (- x2751 x1624)))
(assert (= x26 (and (not x2245) x1064)))
(assert (x2421 x144))
(assert (= (x1991 (x2353 1466279372)) 1466279372))
(assert (= x1809 (and (not x3121) x676)))
(assert (x2421 x3429))
(assert (= x3595 (and x3019 x1604)))
(assert (= (x1991 (x356 x3065 1)) (+ (x1991 x3065) 1)))
(assert (= (x1991 (x1618 x1736)) x1736))
(assert (x2421 x2948))
(assert (= (and x523 x1907) x1281))
(assert (= x1338 (and x2348 (not x2507))))
(assert (x2421 x634))
(assert (x2421 x1082))
(assert (x2421 x2724))
(assert (x216 x106 (- x1395 x2384)))
(assert (= x1411 (and x2136 (not x1992))))
(assert (= x864 (and (not x540) x3539)))
(assert (x2421 x18))
(assert (= (and x1537 (not x3906)) x3359))
(assert (= x3813 (and (not x1053) x297)))
(assert (= x3365 (and (=> (and x268 (and (= x624 x1920) (= x2033 x1443) (= x3493 x2792))) x1668) (=> (and (not x268) (and (= x2792 x2923) (= x146 1))) x2846))))
(assert (x2421 x3026))
(assert (x2421 x2498))
(assert (x216 x1033 (- x106 x3185)))
(assert (= (=> (= x1930 x1478) x1634) x2794))
(assert (= (and x331 (not x1295)) x86))
(assert (x2421 x3919))
(assert (= (and x613 x2845) x2502))
(assert (x2421 x2065))
(assert (x2421 x1935))
(assert (x248 x2957 x3574 x1111 x647))
(assert (x2406 (- x1184 x1395)))
(assert (x2421 x1410))
(assert (= (=> (and (and (= (x525 1461501637330902918203684832716283019655932542975 x2746) x2662) (= x3846 (x2947 (x1618 x1327) x1443 0)) (<= 0 x2061) (= x1263 (> x2061 x2201)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2061) (>= x1609 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2201) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1609) (= x218 (x2947 (x1618 x2662) (x2353 154) 0)) (= (x2947 (x1618 x1327) x1476 0) x1031) (= x2760 (x356 x3390 2)) (= x3390 (x2947 (x1618 x1327) x218 0)) (= (x356 x1031 1) x1469) (= x2131 (x2483 x2760)) (= (x2947 (x1618 x2895) (x2353 158) 0) x1476) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2131) (= (x235 x859) x1609) (= (x2894 x1031) x719) (>= x2201 0) (= x2061 (x667 x1469)) (>= x2131 0) (<= 0 x719) (= (x356 x3846 2) x859) (<= x719 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1443 (x2947 (x1618 x1920) (x2353 155) 0)) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x1920) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x2895)) (or (and x1263 (= x2061 x3640)) (and (not x1263) (= x3640 0)))) x217) x1947))
(assert (x2421 x1115))
(assert (x2406 (- x77 x3574)))
(assert (x2406 (- x2957 x3849)))
(assert (= (and x1613 x2254) x1923))
(assert (= (and x1218 (not x3870)) x1896))
(assert (x2421 x3561))
(assert (x216 x3185 (- x2751 x2222)))
(assert (= (and x220 x132) x745))
(assert (x2421 x2917))
(assert (= (=> (and (= x132 (= x1561 0)) (or (and (not x132) (= x195 (x2947 (x1618 x1561) x1443 0))) (and x132 (= (x356 x1443 2) x605)))) x3610) x1646))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x1991 (x2353 115792089237316195423570985008687907853269984665640564039457))))
(assert (x304 x106 x1033 x1111 x647))
(assert (x248 x77 x294 x2823 x2957))
(assert (x248 x3185 x2751 x106 x2384))
(assert (x2421 x3396))
(assert (= 1461501637330902918203684832716283019655932542976 (x1991 (x2353 1461501637330902918203684832716283019655932542976))))
(assert (= x61 (and x3032 x3512)))
(assert (= (x1991 (x2353 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x2136 (or x3649 x967)))
(assert (=> (<= x2692 10000) (= (x2353 x2692) (x1618 x2692))))
(assert (= x933 (x1991 (x1618 x933))))
(assert (x2421 x1830))
(assert (x2421 x1271))
(assert (= (or x1525 x682 x2051 x54 x2938 x919) x1885))
(assert (x2421 x474))
(assert (x2406 (- x106 x1184)))
(assert (x2421 x1474))
(assert (= x2850 (and (not x2454) x3824)))
(assert (= 4294967296 (x1991 (x2353 4294967296))))
(assert (x248 x2222 x1624 x2384 x106))
(assert (= x1871 (and x1133 x875)))
(assert (x2421 x1214))
(assert (x216 x106 (- x1395 x106)))
(assert (x2421 x173))
(assert (x2421 x589))
(assert (x1192 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x2421 x2013))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x3583 (+ (* 1461501637330902918203684832716283019655932542976 (x3413 x3583 1461501637330902918203684832716283019655932542976)) (x2732 x3583 1461501637330902918203684832716283019655932542976)))) (x1688 x3583 1461501637330902918203684832716283019655932542976) (x1527 x3583 1461501637330902918203684832716283019655932542976) (x747 x3583 1461501637330902918203684832716283019655932542976)))
(assert (x248 x3574 x2957 x3185 x2751))
(assert (x216 x647 (- x1111 x3574)))
(assert (=> (<= x1999 10000) (= (x2353 x1999) (x1618 x1999))))
(assert (x2406 (- x3185 x2957)))
(assert (x248 x2957 x2823 x1624 x2222))
(assert (x304 x2957 x3574 x3909 x3792))
(assert (x2421 x1238))
(assert (= (x1991 (x1618 x1658)) x1658))
(assert (= (and x2835 (not x1808)) x2398))
(assert (x2421 x3079))
(assert (x216 x2957 (- x3574 x3792)))
(assert (x2421 x684))
(assert (= (and (not x698) x2246) x1363))
(assert (x2421 x717))
(assert (x2421 x639))
(assert (x216 x106 (- x2384 x1184)))
(assert (x2421 x3432))
(assert (x216 x106 (- x2384 x294)))
(assert (x2421 x621))
(assert (x2421 x159))
(assert (x2421 x90))
(assert (x2421 x3792))
(assert (x2421 x42))
(assert (x216 x2957 (- x3574 x1111)))
(assert (x2406 (- x3909 x1624)))
(assert (x2421 x253))
(assert (= (or x2157 x1530) x457))
(assert (x2406 (- x2823 x2384)))
(assert (= x1447 (or x433 x2915)))
(assert (x2421 x926))
(assert (x2421 x1605))
(assert (x2421 x3926))
(assert (x2421 x654))
(assert (x2421 x2493))
(assert (x2421 x3103))
(assert (= x3100 (and x856 x3562)))
(assert (x2421 x1276))
(assert (x216 x294 (- x77 x2957)))
(assert (= (or x1800 x3714) x1200))
(assert (x216 x2384 (- x106 x2222)))
(assert (x216 x2957 (- x3574 x77)))
(assert (= (and x1200 (not x268)) x2852))
(assert (x2421 x784))
(assert (x2406 (- x3574 x1033)))
(assert (= x3172 (and x2242 x438)))
(assert (= x1872 (and x3609 (not x2443))))
(assert (x216 x106 (- x2384 x3909)))
(assert (x248 x1184 x3849 x3574 x2957))
(assert (= (+ 2 (x1991 x3336)) (x1991 (x356 x3336 2))))
(assert (x2421 x2810))
(assert (x2421 x2110))
(assert (x216 x1624 (- x2222 x294)))
(assert (x2421 x3025))
(assert (= x332 (and x2887 x2876)))
(assert (x2421 x413))
(assert (x2421 x1703))
(assert (x248 x3909 x3792 x2751 x3185))
(assert (x3448 x974))
(assert (= (and (not x2118) x1559) x703))
(assert (= (and x3055 (not x1084)) x2040))
(assert (= x295 (=> (and (or x1464 (not x1464)) (= x1464 (= x1509 0))) x3352)))
(assert (x304 x2957 x3574 x1033 x106))
(assert (= x241 x179))
(assert (x2406 (- x1395 x3792)))
(assert (x304 x106 x1395 x2384 x106))
(assert (= (and (not x866) x260) x718))
(assert (x2421 x1189))
(assert (x304 x2222 x1624 x3185 x2751))
(assert (= (and x1850 (not x675)) x1863))
(assert (x2421 x608))
(assert (x2421 x3162))
(assert (x2406 (- x294 x1033)))
(assert (x248 x1033 x106 x294 x77))
(assert (x2421 x3526))
(assert (= (and x2423 x2306) x473))
(assert (x2406 (- x3849 x1395)))
(assert (= (x1991 (x1618 x1386)) x1386))
(assert (x248 x3909 x3792 x106 x1395))
(assert (x248 x2957 x2823 x647 x1111))
(assert (x2421 x306))
(assert (x248 x3909 x3792 x2957 x2823))
(assert (x2421 x3020))
(assert (x2421 x2202))
(assert (= x2419 (x1991 (x1618 x2419))))
(assert (x2421 x2582))
(assert (x248 x1033 x106 x2957 x3574))
(assert (x2421 x381))
(assert (x2421 x3830))
(assert (x2406 x1909))
(assert (= (x2353 2459953569) (x1618 2459953569)))
(assert (x2421 x9))
(assert (x3448 x2692))
(assert (= (+ 1 (x1991 x757)) (x1991 (x356 x757 1))))
(assert (x2421 x2030))
(assert (= (x1991 (x356 x1245 2)) (+ (x1991 x1245) 2)))
(assert (x1192 x1840))
(assert (= (=> (and (= x2289 x240) (= 0 x3060)) x1748) x1169))
(assert (x2406 (- x2751 x3909)))
(assert (x2421 x1078))
(assert (x3448 x2555))
(assert (= (and x530 x844) x3141))
(assert (x2421 x2637))
(assert (= x1462 (x1991 (x1618 x1462))))
(assert (= x1614 (=> (and (or (not x2926) x2926) (= x2926 (= 0 x1438))) x3709)))
(assert (= (and (not x2650) x3544) x2431))
(assert (= (or x3891 x1220) x2761))
(assert (x216 x3792 (- x3909 x2823)))
(assert (x2421 x2818))
(assert (= x2460 (and x3715 (not x3542))))
(assert (= (or x2852 x2509) x158))
(assert (= (or x1188 x3525) x1308))
(assert (= (+ (x1991 x246) 1) (x1991 (x356 x246 1))))
(assert (x216 x77 (- x294 x2222)))
(assert (x2421 x1486))
(assert (x216 x2957 (- x2823 x2957)))
(assert (x216 x2222 (- x1624 x2751)))
(assert (x2421 x3508))
(assert (x304 x3574 x2957 x3909 x3792))
(assert (= x3915 (and (not x2388) x3006)))
(assert (= x225 (and x3975 (not x978))))
(assert (x2421 x333))
(assert (x2421 x2479))
(assert (= (and x3229 x1543) x208))
(assert (= x902 (and x2803 x2981)))
(assert (x304 x106 x2384 x2823 x2957))
(assert (x248 x106 x1033 x77 x294))
(assert (x2421 x2715))
(assert (x248 x3849 x1184 x294 x77))
(assert (= (and (not x2520) x266) x548))
(assert (x2421 x509))
(assert (= x527 (and x1154 x2426)))
(assert (x216 x2957 (- x3574 x1395)))
(assert (= x1335 (and x2440 (not x1638))))
(assert (x2421 x2031))
(assert (= (and x1024 x2524) x3974))
(assert (x3448 x2419))
(assert (= x3108 (or x2585 x1778 x560 x238)))
(assert (x2098 x429))
(assert (= (=> (and (= x1889 x2965) (= x529 x2994)) x291) x1477))
(assert (= (or x360 x3730) x957))
(assert (x2421 x342))
(assert (x216 x294 (- x77 x3792)))
(assert (x2421 x2789))
(assert (= (x1618 1832238993) (x2353 1832238993)))
(assert (= x653 (=> (and (= x1438 x3421) (= x1621 x3278)) x1614)))
(assert (x2421 x2274))
(assert (x2421 x819))
(assert (x2609 x1840))
(assert (x2421 x1060))
(assert (x2421 x2870))
(assert (x248 x1395 x106 x3909 x3792))
(assert (x2421 x1063))
(assert (x216 x2957 (- x3574 x2823)))
(assert (x216 x2957 (- x2823 x2222)))
(assert (= 60231946789637257468838019015344037944473233080083133266033501538020963123200 (x1991 (x2353 60231946789637257468838019015344037944473233080083133266033501538020963123200))))
(assert (= (and x3351 x4) x756))
(assert (x2421 x1446))
(assert (x2421 x2924))
(assert (x3448 x1920))
(assert (= x307 (and x398 x1256)))
(assert (x248 x2384 x106 x647 x1111))
(assert (x2421 x3123))
(assert (x2406 (- x3574 x2823)))
(assert (= x3435 (=> (and (= (x3783 (+ x1194 4)) x2360) (= (x525 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1605) x1948) (= x904 (ite (< x3920 x3670) x3920 x3670)) (= (x986 x326) x3920) (not (= x1820 0)) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x842) (= (x3783 (+ 31 x3882)) x1605) (= (x3783 (+ x326 x1948)) x1194) (= x1189 (x3783 (+ 32 x2360))) (= (x3381 (- x1189 x1194)) x945) (= (= x1937 x842) x427) (not (or (and (= (<= x3882 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x3882)) (> x3882 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> (and (and (= x1182 60231946789637257468838019015344037944473233080083133266033501538020963123200) (not (= x1826 2217467699)) (= x904 x346) (= x945 x1091) (= x1941 (x1382 (x1618 x1937))) (= x3729 (x3381 (- x1091 4))) (> x1941 0) (= x203 (or (and (= true (<= x3729 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3729 32)) (> x3729 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 2234127075 x1826) (< x1826 2691771752) (= x1091 36) (< x1826 2929553584) (not (> 2217467699 x1826)) (not (> 4 x1091))) x427) (and (=> (and (not x203) (and (= x346 x3201) (= x2367 (x2331 x27)) (= (< x2367 x904) x455) (= x27 (x2947 (x1618 x897) (x2353 5) 0)) (<= 0 x2367) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2367))) (and (=> (and x455 (= x2955 x1564)) x3597) (=> (and (not x455) (and (= (< x2429 x346) x1023) (= x2429 (x2331 x3325)) (<= x2429 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2429) (= x3325 (x2947 (x1618 x897) (x2353 5) 0)))) (and (=> (and (= x1564 x2955) x1023) x3597) (=> (and (not x1023) (and (= (< x2955 x346) x3117) (>= x2955 0) (= x1117 (x3381 (- x2429 x346))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2955))) (and (=> (and (not x3117) (and (<= x1648 1461501637330902918203684832716283019655932542975) (= (x3381 (- x2955 x346)) x2658) (= x599 (x3381 (- x2955 x346))) (= (= x1894 x1648) x1244) (= x1970 128) (>= x1648 0) (< x1648 1461501637330902918203684832716283019655932542976))) (and (=> (and (and (= 68 x3744) (= (or (and (= true (<= x2226 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2226 64)) (> x2226 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3577) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3061) (= x3201 x3616) (not (> 4 x3744)) (not (< x3329 2835717307)) (= x1879 (x1382 (x1618 x1894))) (= (x3381 (- x3744 4)) x2226) (= x897 x489) (= 68 x3744) (= x3329 2835717307) (< 0 x1879) (not (< x3329 1466279372))) x1244) (and (=> x3577 x3776) (=> (and (not x3577) (and (= x489 x2838) (= x997 (= x897 x489)))) (and (=> (and (and (= x1271 x3616) (= x617 (x1610 x2933)) (= x2933 (x2947 (x1618 x1937) (x2353 1) 0)) (<= 0 x617) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x617) (= x2860 (< x617 x3201))) x997) (and (=> (and (= (< x617 x3616) x3960) (not x2860)) (and (=> (and (and (<= x1696 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1696 0) (= (x197 x166) x1696) (= (x3381 (- x617 x3616)) x3852) (= x3339 (x2947 (x1618 x1937) (x2353 1) 0)) (= x814 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3616))) (= x2060 (> x1696 x814)) (= x166 (x2947 (x1618 x489) (x2353 1) 0))) (not x3960)) (and (=> x2060 x3776) (=> (and (and (= x3177 (x3783 (+ x1696 x3616))) (= x3664 (> x1696 x3177))) (not x2060)) (and (=> (and (and (= x3668 (x2947 (x1618 x489) (x2353 1) 0)) (= x1902 32) (= x2734 1)) (not x3664)) x1888) (=> x3664 x3776))))) (=> x3960 x3776))) (=> x2860 x3776))) (=> (not x997) x3776))))) (=> (and (not x1244) (= x2165 (= x1648 x1937))) (and (=> (and (and (not (> 2217467699 x3392)) (= 2835717307 x3392) (not (> 2691771752 x3392)) (not (= 2691771752 x3392)) (< 0 x1103) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1294) (= x3396 (x3381 (- x2196 4))) (< x3392 2929553584) (= x1103 (x1382 (x1618 x1937))) (= x2196 68) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3396) true) (> 64 x3396)) (> x3396 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x94) (= x1858 x897) (= x1981 x3201) (not (= 2796547477 x3392)) (= 68 x2196) (not (< x2196 4))) x2165) (and (=> x94 x3721) (=> (and (not x94) (and (= x1602 x1858) (= x3778 (= x897 x1858)))) (and (=> (not x3778) x3721) (=> (and x3778 (and (= x3167 (x2947 (x1618 x1937) (x2353 5) 0)) (<= x1324 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x1324 x3201) x1847) (= x2828 x1981) (<= 0 x1324) (= x1324 (x2778 x3167)))) (and (=> (and (not x1847) (and (<= x739 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2801 (x2947 (x1618 x1937) (x2353 5) 0)) (>= x739 0) (= (x2778 x2801) x739) (= x3704 (< x739 x1981)))) (and (=> (and (not x3704) (and (= x2742 (x3381 (- x739 x1981))) (= x29 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1981))) (<= x3550 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3550 0) (= x265 (x2947 (x1618 x1858) (x2353 5) 0)) (= (x1289 x265) x3550) (= (> x3550 x29) x1943))) (and (=> x1943 x3721) (=> (and (and (= (x3783 (+ x1981 x3550)) x553) (= 32 x3817) (= 1 x377) (= x3262 1)) (not x1943)) x198))) (=> x3704 x3721))) (=> x1847 x3721))))))) (=> (and (= x1247 (= x1648 x632)) (not x2165)) (and (=> (and (and (= (= x1648 x3860) x1160) (and x1160 (and (= x1394 68) (not (> 4 x1394)) (= (x1382 (x1618 x3860)) x1254) (= x3981 (x3381 (- x1394 4))) (= x2688 x3201) (not (> 2691771752 x3405)) (= 2835717307 x3405) (= x2718 x897) (not (= 2796547477 x3405)) (= x2861 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3981) (and (> 64 x3981) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3981))))) (not (< x3405 2217467699)) (< x3405 2929553584) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3183) (= x1394 68) (not (= x3405 2691771752)) (< 0 x1254)))) (not x1247)) (and (=> (and (and (= (= x2718 x897) x1138) (= x654 x2718)) (not x2861)) (and (=> (and (and (= x3543 (x2947 (x1618 x1937) (x2353 5) 0)) (= (< x831 x3201) x1701) (<= 0 x831) (= x565 x2688) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x831) (= x831 (x742 x3543))) x1138) (and (=> (and (and (>= x129 0) (= (> x2688 x129) x2306) (<= x129 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2759 (x2947 (x1618 x1937) (x2353 5) 0)) (= (x742 x2759) x129)) (not x1701)) (and (=> x2306 x1541) (=> (and (and (= (< x3434 x182) x3488) (= x3434 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2688))) (= (x765 x3261) x182) (>= x182 0) (<= x182 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3261 (x2947 (x1618 x2718) (x2353 5) 0)) (= (x3381 (- x129 x2688)) x2248)) (not x2306)) (and (=> x3488 x1541) (=> (and (and (= x36 1) (= 32 x1471) (= x2308 (x3783 (+ x2688 x182))) (= x939 1)) (not x3488)) x321))))) (=> x1701 x1541))) (=> (not x1138) x1541))) (=> x2861 x1541))) (=> (and x1247 (and (= x897 x903) (= x232 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 2691771752 x1231)) (= x17 68) (= x1231 2835717307) (< x1231 2929553584) (not (= x1231 2796547477)) (= x3201 x952) (not (< x1231 2217467699)) (< 0 x2713) (= 68 x17) (not (> 4 x17)) (= (x1382 (x1618 x632)) x2713) (= x474 (x3381 (- x17 4))) (= x2223 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x474)) (> 64 x474)) (> x474 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= 2691771752 x1231)))) (and (=> (and (not x2223) (and (= x903 x1255) (= x2315 (= x903 x897)))) (and (=> (not x2315) x1737) (=> (and x2315 (and (= (x2910 x578) x282) (= (x2947 (x1618 x1937) (x2353 5) 0) x578) (<= x282 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x282 x3201) x2594) (= x590 x952) (>= x282 0))) (and (=> x2594 x1737) (=> (and (not x2594) (and (= (< x3311 x952) x2520) (<= 0 x3311) (= (x2910 x1846) x3311) (= x1846 (x2947 (x1618 x1937) (x2353 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3311))) (and (=> (and (and (<= x2224 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1957 (> x2224 x1039)) (= x2224 (x3477 x934)) (<= 0 x2224) (= (x3381 (- x3311 x952)) x1727) (= x1039 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x952))) (= x934 (x2947 (x1618 x903) (x2353 5) 0))) (not x2520)) (and (=> (and (not x1957) (and (= 32 x3830) (= x1001 (x3783 (+ x2224 x952))) (= 1 x1562) (= x112 1))) x1365) (=> x1957 x1737))) (=> x2520 x1737))))))) (=> x2223 x1737))))))))) (=> (and x3117 (= x2955 x1564)) x3597))))))) (=> (and x203 (= x2955 x1564)) x3597))) (=> (and (not x427) (= x3155 (= x632 x842))) (and (=> (and (and (= x1345 (= x3860 x842)) (and (and (= x1576 x945) (> 2691771752 x2069) (= x143 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3433) (and (< x3433 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3433))))) (> 2929553584 x2069) (not (< x1576 4)) (not (= 2217467699 x2069)) (= x2069 2234127075) (= x1576 36) (= x904 x1237) (= x1828 (x1382 (x1618 x3860))) (= x3433 (x3381 (- x1576 4))) (< 0 x1828) (= 60231946789637257468838019015344037944473233080083133266033501538020963123200 x1315) (not (> 2217467699 x2069))) x1345)) (not x3155)) (and (=> (and (= x3972 x3497) x143) x2922) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2214) (= x1237 x3128) (>= x2214 0) (= x1841 (< x2214 x904)) (= x2877 (x2947 (x1618 x897) (x2353 5) 0)) (= x2214 (x742 x2877))) (not x143)) (and (=> (and (not x1841) (and (<= x169 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x169 (x742 x3819)) (<= 0 x169) (= (< x169 x1237) x994) (= (x2947 (x1618 x897) (x2353 5) 0) x3819))) (and (=> (and (= x3972 x3497) x994) x2922) (=> (and (and (<= x3497 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3497) (= x3081 (< x3497 x1237)) (= (x3381 (- x169 x1237)) x2538)) (not x994)) (and (=> (and (= x3497 x3972) x3081) x2922) (=> (and (and (>= x1956 0) (= 128 x1025) (= x2826 (x3381 (- x3497 x1237))) (= x3868 (= x1956 x1894)) (>= 1461501637330902918203684832716283019655932542975 x1956) (< x1956 1461501637330902918203684832716283019655932542976) (= x2055 (x3381 (- x3497 x1237)))) (not x3081)) (and (=> (and x3868 (and (= x2619 (x3381 (- x456 4))) (= (x1382 (x1618 x1894)) x153) (not (> 4 x456)) (= x2359 (or (and (= true (<= x2619 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x2619)) (> x2619 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x3128 x384) (= x897 x518) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3335) (= 68 x456) (not (> 2835717307 x1516)) (> x153 0) (= x1516 2835717307) (not (> 1466279372 x1516)) (= 68 x456))) (and (=> x2359 x3777) (=> (and (not x2359) (and (= x1604 (= x897 x518)) (= x518 x1952))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2890) (= (> x3128 x2890) x3950) (= x2890 (x1610 x70)) (>= x2890 0) (= x2438 x384) (= (x2947 (x1618 x3860) (x2353 1) 0) x70)) x1604) (and (=> (and (not x3950) (= x2474 (< x2890 x384))) (and (=> x2474 x3777) (=> (and (and (= (> x2537 x2642) x1918) (= (x3381 (- x2890 x384)) x517) (= x656 (x2947 (x1618 x3860) (x2353 1) 0)) (<= 0 x2537) (= (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x384)) x2642) (= x2537 (x2557 x2542)) (<= x2537 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2542 (x2947 (x1618 x518) (x2353 1) 0))) (not x2474)) (and (=> (and (not x1918) (and (= x530 (> x2537 x353)) (= x353 (x3783 (+ x2537 x384))))) (and (=> x530 x3777) (=> (and (and (= x1889 32) (= x2994 1) (= x2219 (x2947 (x1618 x518) (x2353 1) 0))) (not x530)) x1477))) (=> x1918 x3777))))) (=> x3950 x3777))) (=> (not x1604) x3777))))) (=> (and (not x3868) (= (= x1956 x1937) x772)) (and (=> (and (= x2328 (= x1956 x632)) (not x772)) (and (=> (and (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2395) (not (= 2796547477 x1753)) (< x1753 2929553584) (= 68 x2786) (not (= 2691771752 x1753)) (not (> 2217467699 x1753)) (= 2835717307 x1753) (= (x3381 (- x2786 4)) x1474) (not (< x1753 2691771752)) (= x2786 68) (= x3128 x3101) (= x1243 (x1382 (x1618 x632))) (= x2692 x897) (= x3931 (or (and (< x1474 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1474))) (> x1474 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 0 x1243) (not (< x2786 4))) x2328) (and (=> (and (not x3931) (and (= x2692 x3015) (= x1159 (= x897 x2692)))) (and (=> (and (and (<= x1201 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1201 (x2910 x3227)) (= (> x3128 x1201) x2593) (>= x1201 0) (= x3227 (x2947 (x1618 x3860) (x2353 5) 0)) (= x3283 x3101)) x1159) (and (=> x2593 x92) (=> (and (not x2593) (and (<= 0 x1767) (= x1794 (x2947 (x1618 x3860) (x2353 5) 0)) (= x1767 (x2910 x1794)) (= (< x1767 x3101) x3032) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1767))) (and (=> (and (not x3032) (and (= x509 (x2534 x1392)) (<= x509 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1392 (x2947 (x1618 x2692) (x2353 5) 0)) (= x871 (x3381 (- x1767 x3101))) (= x2238 (> x509 x1993)) (<= 0 x509) (= x1993 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3101))))) (and (=> x2238 x92) (=> (and (and (= (x3783 (+ x3101 x509)) x2173) (= 32 x3937) (= 1 x453) (= x734 1)) (not x2238)) x1261))) (=> x3032 x92))))) (=> (not x1159) x92))) (=> x3931 x92))) (=> (and (not x2328) (and (and x702 (and (not (= 2691771752 x3402)) (= x342 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 2691771752 x3402)) (= (x3381 (- x559 4)) x778) (= x3858 (x1382 (x1618 x3860))) (= x3756 (or (and (= true (<= x778 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x778)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x778))) (not (< x559 4)) (= x3402 2835717307) (= x1303 x3128) (> 2929553584 x3402) (> x3858 0) (= 68 x559) (not (= 2796547477 x3402)) (not (< x3402 2217467699)) (= 68 x559) (= x897 x1479))) (= (= x3860 x1956) x702))) (and (=> x3756 x2183) (=> (and (and (= x1055 x1479) (= (= x897 x1479) x2634)) (not x3756)) (and (=> (and (and (<= 0 x2064) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2064) (= x1295 (> x3128 x2064)) (= x1593 (x2947 (x1618 x3860) (x2353 5) 0)) (= x2064 (x1164 x1593)) (= x1303 x3368)) x2634) (and (=> (and (not x1295) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1755) (= (x2947 (x1618 x3860) (x2353 5) 0) x2445) (<= 0 x1755) (= (x1164 x2445) x1755) (= (< x1755 x1303) x477))) (and (=> (and (not x477) (and (= (x2001 x966) x2985) (<= 0 x2985) (= (x3381 (- x1755 x1303)) x1252) (= (x2947 (x1618 x1479) (x2353 5) 0) x966) (= x470 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1303))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2985) (= x2426 (< x470 x2985)))) (and (=> x2426 x2183) (=> (and (not x2426) (and (= x43 1) (= x2227 32) (= (x3783 (+ x2985 x1303)) x1446) (= x1328 1))) x3938))) (=> x477 x2183))) (=> x1295 x2183))) (=> (not x2634) x2183))))))) (=> (and (and (< 0 x1567) (= x2931 (x3381 (- x175 4))) (= x611 2835717307) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1971) (not (> 2217467699 x611)) (= x175 68) (= x1567 (x1382 (x1618 x1937))) (not (< x611 2691771752)) (not (= x611 2796547477)) (= 68 x175) (= x974 x897) (not (= x611 2691771752)) (> 2929553584 x611) (= (or (and (= true (<= x2931 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2931 64)) (> x2931 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2903) (= x3128 x30) (not (< x175 4))) x772) (and (=> x2903 x1886) (=> (and (not x2903) (and (= (= x897 x974) x1286) (= x974 x3369))) (and (=> (and x1286 (and (<= x1307 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2331 x236) x1307) (= (x2947 (x1618 x3860) (x2353 5) 0) x236) (= x390 x30) (>= x1307 0) (= x204 (> x3128 x1307)))) (and (=> x204 x1886) (=> (and (and (<= x2358 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2358 (x2331 x2357)) (>= x2358 0) (= x2357 (x2947 (x1618 x3860) (x2353 5) 0)) (= x3074 (< x2358 x30))) (not x204)) (and (=> x3074 x1886) (=> (and (and (= x3281 (x1323 x505)) (= (< x3356 x3281) x769) (= x3000 (x3381 (- x2358 x30))) (= x3356 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x30))) (<= 0 x3281) (<= x3281 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x505 (x2947 (x1618 x974) (x2353 5) 0))) (not x3074)) (and (=> x769 x1886) (=> (and (not x769) (and (= 1 x1107) (= (x3783 (+ x30 x3281)) x3581) (= x3111 1) (= 32 x2436))) x3681))))))) (=> (not x1286) x1886))))))))))))) (=> (and (= x3497 x3972) x1841) x2922))))) (=> (and (and (not (> 4 x2653)) (not (> 2217467699 x2682)) (= 36 x2653) (= x2930 x904) (> 2691771752 x2682) (= 2234127075 x2682) (not (= x2682 2217467699)) (> x3476 0) (= x945 x2653) (< x2682 2929553584) (= 60231946789637257468838019015344037944473233080083133266033501538020963123200 x2164) (= x3476 (x1382 (x1618 x632))) (= x230 (x3381 (- x2653 4))) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x230)) (< x230 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x230)) x3517)) x3155) (and (=> (and (= x3295 x3935) x3517) x2467) (=> (and (not x3517) (and (<= 0 x577) (= x2602 (> x904 x577)) (= x2930 x2487) (= (x2910 x2518) x577) (<= x577 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2947 (x1618 x897) (x2353 5) 0) x2518))) (and (=> (and (= x3935 x3295) x2602) x2467) (=> (and (not x2602) (and (= x2728 (< x1489 x2930)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1489) (= x1489 (x2910 x2867)) (= x2867 (x2947 (x1618 x897) (x2353 5) 0)) (>= x1489 0))) (and (=> (and x2728 (= x3295 x3935)) x2467) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3295) (>= x3295 0) (= (< x3295 x2930) x1990) (= (x3381 (- x1489 x2930)) x2299)) (not x2728)) (and (=> (and (= x3935 x3295) x1990) x2467) (=> (and (and (<= x2000 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x2000) (= x2684 (= x1894 x2000)) (= x3095 (x3381 (- x3295 x2930))) (= 128 x2005) (>= x2000 0) (= (x3381 (- x3295 x2930)) x835)) (not x1990)) (and (=> (and x2684 (and (= x1680 (x3381 (- x2932 4))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x655) (= x2932 68) (= x2711 2835717307) (= x2932 68) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1680) (and (< x1680 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1680) true))) x3049) (not (> 2835717307 x2711)) (not (> 4 x2932)) (= x2170 x2487) (= (x1382 (x1618 x1894)) x886) (not (< x2711 1466279372)) (= x897 x3467) (> x886 0))) (and (=> (and (and (= x2836 (= x3467 x897)) (= x862 x3467)) (not x3049)) (and (=> (and (and (= x1290 (x2947 (x1618 x632) (x2353 1) 0)) (= (< x1148 x2487) x383) (>= x1148 0) (= (x1610 x1290) x1148) (= x2170 x788) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1148)) x2836) (and (=> (and (= (> x2170 x1148) x189) (not x383)) (and (=> (and (not x189) (and (= (x2947 (x1618 x3467) (x2353 1) 0) x3834) (= x3031 (x3552 x3834)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3031) (= x3524 (> x3031 x1480)) (= (x3381 (- x1148 x2170)) x57) (= x1480 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2170))) (>= x3031 0) (= (x2947 (x1618 x632) (x2353 1) 0) x1931))) (and (=> x3524 x111) (=> (and (and (= x2245 (< x2209 x3031)) (= (x3783 (+ x3031 x2170)) x2209)) (not x3524)) (and (=> x2245 x111) (=> (and (and (= 32 x3318) (= x3298 (x2947 (x1618 x3467) (x2353 1) 0)) (= x2767 1)) (not x2245)) x953))))) (=> x189 x111))) (=> x383 x111))) (=> (not x2836) x111))) (=> x3049 x111))) (=> (and (not x2684) (= (= x1937 x2000) x1349)) (and (=> (and x1349 (and (not (= 2796547477 x2757)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x720) (= x2487 x1037) (not (< x2757 2691771752)) (= x897 x790) (= x391 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3629)) (< x3629 64)) (> x3629 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x3629 (x3381 (- x748 4))) (= x748 68) (= (x1382 (x1618 x1937)) x3837) (not (= x2757 2691771752)) (= x2757 2835717307) (< x2757 2929553584) (not (> 4 x748)) (> x3837 0) (not (< x2757 2217467699)) (= x748 68))) (and (=> x391 x1127) (=> (and (and (= x790 x2741) (= (= x790 x897) x2311)) (not x391)) (and (=> (and x2311 (and (= x865 x1037) (= (> x2487 x2664) x1204) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2664) (= (x2331 x3326) x2664) (<= 0 x2664) (= x3326 (x2947 (x1618 x632) (x2353 5) 0)))) (and (=> x1204 x1127) (=> (and (and (<= 0 x609) (= (x2947 (x1618 x632) (x2353 5) 0) x1167) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x609) (= (x2331 x1167) x609) (= (< x609 x1037) x3870)) (not x1204)) (and (=> x3870 x1127) (=> (and (and (= x184 (> x2485 x485)) (= (x2947 (x1618 x790) (x2353 5) 0) x3825) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2485) (>= x2485 0) (= (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1037)) x485) (= x2485 (x3980 x3825)) (= (x3381 (- x609 x1037)) x2748)) (not x3870)) (and (=> x184 x1127) (=> (and (not x184) (and (= 32 x47) (= x1572 1) (= 1 x2408) (= x2668 (x3783 (+ x1037 x2485))))) x2355))))))) (=> (not x2311) x1127))))) (=> (and (not x1349) (= (= x632 x2000) x3529)) (and (=> (and x3529 (and (not (< x1759 4)) (not (< x1347 2691771752)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3124) (= (or (and (> 64 x3050) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3050) true)) (> x3050 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3149) (not (= x1347 2796547477)) (= (x3381 (- x1759 4)) x3050) (not (> 2217467699 x1347)) (= 2835717307 x1347) (= 68 x1759) (< x1347 2929553584) (= (x1382 (x1618 x632)) x1906) (= x1759 68) (= x1935 x2487) (< 0 x1906) (not (= x1347 2691771752)) (= x1654 x897))) (and (=> x3149 x89) (=> (and (not x3149) (and (= x1628 (= x897 x1654)) (= x1654 x2843))) (and (=> (and (and (>= x2580 0) (= x1694 (> x2487 x2580)) (= x2580 (x2293 x2211)) (= x3104 x1935) (= (x2947 (x1618 x632) (x2353 5) 0) x2211) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2580)) x1628) (and (=> (and (and (<= 0 x3206) (= (< x3206 x1935) x247) (= (x2947 (x1618 x632) (x2353 5) 0) x996) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3206) (= x3206 (x2293 x996))) (not x1694)) (and (=> x247 x89) (=> (and (not x247) (and (= x3786 (< x766 x1250)) (= x1250 (x1197 x506)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1250) (= x784 (x3381 (- x3206 x1935))) (<= 0 x1250) (= (x2947 (x1618 x1654) (x2353 5) 0) x506) (= (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1935)) x766))) (and (=> x3786 x89) (=> (and (not x3786) (and (= (x3783 (+ x1935 x1250)) x643) (= 1 x3401) (= x1830 1) (= x1731 32))) x1081))))) (=> x1694 x89))) (=> (not x1628) x89))))) (=> (and (not x3529) (and (= x1750 (= x2000 x3860)) (and x1750 (and (= (x3381 (- x576 4)) x2789) (not (< x2418 2691771752)) (not (= 2691771752 x2418)) (not (< x576 4)) (not (< x2418 2217467699)) (not (= 2796547477 x2418)) (= 68 x576) (= x1265 (x1382 (x1618 x3860))) (= x576 68) (> 2929553584 x2418) (= x1519 x897) (= x414 76450787359836037641860180984291677749980919077056822294353438043884394381312) (> x1265 0) (= x2572 (or (> x2789 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x2789) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2789) true)))) (= x2418 2835717307) (= x2487 x3716))))) (and (=> (and (and (= x1805 x1519) (= (= x897 x1519) x3567)) (not x2572)) (and (=> (not x3567) x3861) (=> (and (and (= (x2947 (x1618 x632) (x2353 5) 0) x1669) (= x18 x3716) (<= 0 x1960) (<= x1960 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2339 (< x1960 x2487)) (= x1960 (x742 x1669))) x3567) (and (=> x2339 x3861) (=> (and (not x2339) (and (<= 0 x253) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x253) (= (x742 x816) x253) (= (x2947 (x1618 x632) (x2353 5) 0) x816) (= (< x253 x3716) x540))) (and (=> (and (and (= x2964 (x3381 (- x253 x3716))) (= x1892 (x2947 (x1618 x1519) (x2353 5) 0)) (>= x1101 0) (= x1239 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3716))) (<= x1101 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1101 (x2071 x1892)) (= x2056 (> x1101 x1239))) (not x540)) (and (=> x2056 x3861) (=> (and (and (= 1 x3798) (= x1548 32) (= x2052 1) (= x1203 (x3783 (+ x3716 x1101)))) (not x2056)) x645))) (=> x540 x3861))))))) (=> x2572 x3861)))))))))))))))))))))))
(assert (= 64481368622683354557555711714629296119639875834729404553039716062438103187456 (x1991 (x2353 64481368622683354557555711714629296119639875834729404553039716062438103187456))))
(assert (= (+ (x1991 x2866) 1) (x1991 (x356 x2866 1))))
(assert (x248 x106 x2384 x3909 x3792))
(assert (x2421 x502))
(assert (x248 x3185 x2751 x3909 x3792))
(assert (= x3241 (and x1957 x548)))
(assert (=> (<= x3169 10000) (= (x2353 x3169) (x1618 x3169))))
(assert (= x1717 (and x540 x3539)))
(assert (x2421 x1828))
(assert (x2421 x1759))
(assert (x2421 x2418))
(assert (x2421 x2657))
(assert (x248 x1395 x106 x2222 x1624))
(assert (x2421 x3614))
(assert (x2421 x53))
(assert (x2421 x1216))
(assert (x2421 x3558))
(assert (x2421 x2069))
(assert (= (and x696 x3393) x1655))
(assert (x2406 (- x3909 x2957)))
(assert (= (+ 1 (x1991 x218)) (x1991 (x356 x218 1))))
(assert (x216 x2751 (- x3185 x2823)))
(assert (x2421 x140))
(assert (x2421 x3279))
(assert (x2406 (- x2957 x2823)))
(assert (x2406 (- x2823 x106)))
(assert (= (+ (x1991 x1912) 1) (x1991 (x356 x1912 1))))
(assert (x2421 x1231))
(assert (x216 x1395 (- x106 x1624)))
(assert (x304 x3574 x2957 x1111 x647))
(assert (x216 x1624 (- x2222 x2823)))
(assert (and (x3187 x681 1000000000000000000) (x2566 x681 1000000000000000000) (x878 x681 1000000000000000000) (x3266 x681 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x681)) (and (>= x681 (* 1000000000000000000 (x3413 x681 1000000000000000000))) (> (* (x3413 x681 1000000000000000000) 1000000000000000000) (- x681 1000000000000000000))))))
(assert (x304 x2957 x2823 x2384 x106))
(assert (x216 x2957 (- x2823 x3909)))
(assert (= x2038 (x1991 (x1618 x2038))))
(assert (x304 x2957 x3574 x1111 x647))
(assert (= x1119 (or x131 x710 x99 x3932 x3739)))
(assert (x2421 x326))
(assert (x2421 x2308))
(assert (x2421 x3697))
(assert (x2421 x3367))
(assert (x304 x1033 x106 x2384 x106))
(assert (= (and (not x1979) x2023) x676))
(assert (x216 x294 (- x77 x2222)))
(assert (x2421 x2819))
(assert (x2421 x77))
(assert (x248 x3909 x3792 x2823 x2957))
(assert (= x3348 (and x255 x1071)))
(assert (x216 x3849 (- x1184 x647)))
(assert (x216 x2957 (- x3574 x1624)))
(assert (= (=> (= (< 0 x1817) x1553) (and (=> (and (not x1553) (= x2301 x1930)) x2794) (=> (and (and (and (> 1461501637330902918203684832716283019655932542976 x2569) (<= 0 x2569) (= x1320 0) (<= x2569 1461501637330902918203684832716283019655932542975) (>= x3905 0) (= x1398 (ite (< 0 x3905) (not (= x2569 0)) (< 0 x3905))) (= (x2947 (x1618 x1327) x218 0) x3163) (= x2569 (x1460 x1984)) (= x3976 (x356 x3163 2)) (<= 0 x1320) (= x1984 (x356 x218 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1320) (= (x802 x3976) x1320) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3905) (not (= 0 x1327))) (or (and (not x1398) (= x1398 x1992)) (and x1398 (and (= x467 (x802 x2207)) (= x3979 (x2947 (x1618 x2569) x218 0)) (= x1437 (< x467 x1817)) (<= x467 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x467) (= (x356 x3979 2) x2207) (= (not x1437) x1992))))) x1553) x3767))) x3498))
(assert (=> (<= x903 10000) (= (x2353 x903) (x1618 x903))))
(assert (x2421 x50))
(assert (x248 x2957 x2823 x3185 x2751))
(assert (x2421 x658))
(assert (x2406 x3804))
(assert (x304 x77 x294 x3574 x2957))
(assert (= (and x1626 (not x3107)) x3350))
(assert (= (=> (and (= (x3783 (+ x2156 x3676)) x1359) (not (or (> x1751 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1751) true) (> 32 x1751)))) (= (x1312 x2156) x2364) (<= x2364 1461501637330902918203684832716283019655932542975) (= (x525 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1840) x3676) (= x1359 x3445) (not (= 0 x3659)) (= x2364 x2647) (= (x3783 (+ 31 x1751)) x1840)) x2530) x3708))
(assert (= (=> (= x3066 (= x1373 x771)) (and (=> (and x3066 (and (= x3654 x2582) (= x1973 x2902))) x2645) (=> (and (= x1449 (> x1373 0)) (not x3066)) (and (=> (and x1449 (and (or (and (not x1029) (and (= (x2947 (x1618 x933) x3889 0) x3166) (= x3210 (x356 x3166 1)))) (and (= x869 (x356 x3889 1)) x1029)) (and (= (x2947 (x1618 x1973) x3889 0) x246) (<= x180 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 1461501637330902918203684832716283019655932542976 x3457) (<= 0 x3457) (= (x522 x977) x180) (<= 0 x180) (not (= x180 0)) (<= x933 1461501637330902918203684832716283019655932542975) (<= x3457 1461501637330902918203684832716283019655932542975) (<= 0 x933) (= (= x933 0) x1029) (= (x2681 x2103) x3457) (= (x356 x2103 1) x977) (> 1461501637330902918203684832716283019655932542976 x933) (= x1560 (x3783 (+ x3654 96))) (= x2103 (x356 x246 1)) (= (x2225 x246) x933)))) x1711) (=> (and (not x1449) (and (= x3654 x965) (= x119 x1973))) x3732))))) x2335))
(assert (x216 x2823 (- x2957 x2222)))
(assert (= x416 (x1991 (x1618 x416))))
(assert (x248 x294 x77 x2957 x2823))
(assert (= x1554 (and x1072 (not x3577))))
(assert (= x2962 (or x972 x2750)))
(assert (x2421 x1057))
(assert (x248 x77 x294 x3574 x2957))
(assert (x2421 x766))
(assert (x304 x106 x1033 x2823 x2957))
(assert (x304 x1624 x2222 x3574 x2957))
(assert (x3448 x585))
(assert (= (=> (and (= x1752 x3637) (= x2030 x2114)) x3051) x3337))
(assert (x248 x1184 x3849 x1395 x106))
(assert (x216 x3792 (- x3909 x2384)))
(assert (x1177 x3342 x3792))
(assert (and (x3187 x2393 1000000000000000000) (x2566 x2393 1000000000000000000) (x878 x2393 1000000000000000000) (x3266 x2393 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x2393)) (and (>= x2393 (* 1000000000000000000 (x3413 x2393 1000000000000000000))) (> (* (x3413 x2393 1000000000000000000) 1000000000000000000) (- x2393 1000000000000000000))))))
(assert (= 1857877511 (x1991 (x2353 1857877511))))
(assert (x2421 x3798))
(assert (x2421 x1040))
(assert (= x2555 (x1991 (x1618 x2555))))
(assert (x1192 x1605))
(assert (x2406 (- x2957 x3574)))
(assert (x2421 x1920))
(assert (= x3193 (and x2053 x1160)))
(assert (x2421 x3070))
(assert (x304 x3574 x2957 x1033 x106))
(assert (x304 x2384 x106 x3909 x3792))
(assert (x248 x106 x1395 x3574 x2957))
(assert (= x2846 (=> (and (or (and (and (or (and x1213 (and (= x3503 (x2947 (x1618 x2923) x1443 0)) (< x2125 1461501637330902918203684832716283019655932542976) (= x2515 (x3783 (+ x3671 96))) (>= 1461501637330902918203684832716283019655932542975 x2125) (= (x2947 (x1618 x2125) x1443 0) x2665) (= x1333 (x2947 (x1618 x2923) x1443 0)) (>= x2125 0) (= (x356 x2665 1) x976) (= (x356 x1130 1) x3412) (= x2515 x2670) (= (x3330 x3503) x2125) (= (x2947 (x1618 x1327) x1443 0) x3450) (= (x356 x3450 1) x1130))) (and (not x1213) (and (= (x3783 (+ 96 x3671)) x3122) (= (x2947 (x1618 x2923) x1443 0) x3673) (= x2643 (x356 x1534 1)) (= x3122 x2670) (= (x356 x3874 1) x1534) (= x3874 (x2947 (x1618 x1327) x1443 0))))) (and (>= x3286 0) (= x1213 (< 0 x385)) (> 1461501637330902918203684832716283019655932542976 x3286) (= x385 (x3381 (- x2923 x3286))) (<= x3286 1461501637330902918203684832716283019655932542975) (= (x2632 x570) x3286))) x447) (and (not x447) (and (and (> 1461501637330902918203684832716283019655932542976 x1895) (= (= x1895 0) x3717) (= x1895 (x2632 x570)) (<= 0 x1895) (>= 1461501637330902918203684832716283019655932542975 x1895)) (or (and x3717 (and (= x3041 (x2947 (x1618 x1327) x1443 0)) (= x2670 x3743) (= x3509 (x356 x2874 1)) (= x3743 (x3783 (+ x3671 96))) (= x2874 (x356 x3041 1)) (= x1094 (x356 x570 1)))) (and (not x3717) (and (= x3894 (x3783 (+ x3671 96))) (< x2280 1461501637330902918203684832716283019655932542976) (= x2561 (x356 x570 1)) (= (x356 x2288 1) x378) (= (x3098 x2561) x2280) (= x3953 (x2947 (x1618 x1327) x1443 0)) (= x2288 (x2947 (x1618 x2280) x1443 0)) (= (x356 x3953 1) x2354) (<= 0 x2280) (>= 1461501637330902918203684832716283019655932542975 x2280) (= x2670 x3894) (= x2089 (x356 x2354 1)))))))) (= (ite (> x3905 x146) (not (= 0 x2923)) (< x146 x3905)) x447)) x201)))
(assert (= x1762 (or x1444 x780)))
(assert (x216 x3792 (- x3909 x106)))
(assert (x216 x3849 (- x1184 x2823)))
(assert (= (x1991 (x1618 x834)) x834))
(assert (x2421 x2703))
(assert (x216 x2957 (- x2823 x294)))
(assert (x216 x294 (- x77 x1033)))
(assert (x2421 x1835))
(assert (= (=> (= x1834 (< 0 x3162)) (and (=> (and (and (and (< x416 1461501637330902918203684832716283019655932542976) (= (x356 x2200 2) x1905) (= x2758 (x2544 x1905)) (= (x356 x3338 1) x2899) (not (= x1507 0)) (<= x3905 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x416) (= (x2047 x2899) x416) (= x1499 (ite (> x3905 0) (not (= 0 x416)) (> x3905 0))) (= 0 x2758) (<= x416 1461501637330902918203684832716283019655932542975) (>= x3905 0) (<= 0 x2758) (= x2200 (x2947 (x1618 x1507) x3338 0)) (<= x2758 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (or (and x1499 (and (= (x2544 x2563) x403) (= (x2947 (x1618 x416) x3338 0) x614) (<= x403 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x3162 x403) x2329) (<= 0 x403) (= (not x2329) x1024) (= (x356 x614 2) x2563))) (and (not x1499) (= x1024 x1499)))) x1834) x2374) (=> (not x1834) x241))) x1257))
(assert (x2421 x971))
(assert (= (and x1023 x1500) x984))
(assert (= x67 (x1991 (x1618 x67))))
(assert (x248 x2957 x2823 x3909 x3792))
(assert (x2421 x339))
(assert (= (and x3850 x2045) x3378))
(assert (x2421 x3))
(assert (= x733 (and (not x3032) x3512)))
(assert (x2406 (- x647 x2384)))
(assert (x216 x3849 (- x1184 x1395)))
(assert (x2421 x3775))
(assert (x304 x77 x294 x2823 x2957))
(assert (x2421 x1540))
(assert (x216 x3909 (- x3792 x1184)))
(assert (= (x1991 (x356 x2655 1)) (+ (x1991 x2655) 1)))
(assert (x216 x77 (- x294 x1624)))
(assert (= x1273 (and (not x956) x2324)))
(assert (x2421 x2006))
(assert (= x2871 (and x2108 (not x94))))
(assert (= (or x1709 x2365) x601))
(assert (= (x2353 76833804140862540057647519496925185374644862498684814347804924264468996685824) (x1618 76833804140862540057647519496925185374644862498684814347804924264468996685824)))
(assert (x2421 x553))
(assert (= (+ (x1991 x2665) 1) (x1991 (x356 x2665 1))))
(assert (x2421 x2568))
(assert (x304 x106 x1033 x1395 x106))
(assert (x2421 x2261))
(assert (= x2373 (x1991 (x1618 x2373))))
(assert (x2421 x3486))
(assert (x2421 x414))
(assert (x2421 x1811))
(assert (= (or x2002 x2448 x3002 x3811 x1281) x641))
(assert (x304 x2823 x2957 x2222 x1624))
(assert (=> (<= x3669 10000) (= (x1618 x3669) (x2353 x3669))))
(assert (= (=> (and (or (and x2085 (= x646 x3601)) (and (= 0 x646) (not x2085))) (and (<= 0 x2201) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2201) (= x2085 (> x3601 x2201)))) x3532) x2645))
(assert (= (x1618 2678788150) (x2353 2678788150)))
(assert (= (x1991 (x356 x3207 1)) (+ (x1991 x3207) 1)))
(assert (x2421 x521))
(assert (= (x1991 (x356 x2070 2)) (+ 2 (x1991 x2070))))
(assert (= x1298 (and (not x3868) x2444)))
(assert (x216 x647 (- x1111 x3909)))
(assert (x248 x3574 x2957 x106 x1033))
(assert (= (x1618 2929553584) (x2353 2929553584)))
(assert (x2421 x981))
(assert (x2421 x1926))
(assert (x2421 x2555))
(assert (x2421 x1269))
(assert (x2421 x738))
(assert (x2421 x3003))
(assert (x2421 x487))
(assert (x2406 (- x106 x3792)))
(assert (= (and (not x855) x2172) x2881))
(assert (= (x2353 1000000000000000000) (x1618 1000000000000000000)))
(assert (x248 x77 x294 x3849 x1184))
(assert (= x2365 (or x3845 x1485 x1871 x1620 x1754 x1793)))
(assert (x2421 x1691))
(assert (= (and x751 x231) x3431))
(assert (x2421 x1601))
(assert (= (and (not x3735) x870) x2255))
(assert (x2421 x2909))
(assert (x216 x1395 (- x106 x3909)))
(assert (x2421 x845))
(assert (x2421 x3169))
(assert (= (x1991 (x2353 44970383829727661923261016617897238973146650624978361361029103362720544063488)) 44970383829727661923261016617897238973146650624978361361029103362720544063488))
(assert (= x1996 (or x2864 x1675)))
(assert (= x713 (and x3686 (not x2496))))
(assert (x216 x3185 x2751))
(assert (= (and x1176 x3701) x1521))
(assert (= x2486 (and (not x1854) x426)))
(assert (= (x1991 (x2353 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= x3504 (=> (and (= 0 x2190) (= x3620 x1574)) x2416)))
(assert (x304 x106 x1395 x3849 x1184))
(assert (x2421 x1580))
(assert (= (and x2863 x2474) x2269))
(assert (= x109 (=> (and (= x1153 (ite (< x1452 x3905) (not (= x362 0)) (< x1452 x3905))) (or (and (not x1153) (and (and (= x398 (= 0 x2554)) (< x2554 1461501637330902918203684832716283019655932542976) (= (x1460 x1984) x2554) (>= x2554 0) (<= x2554 1461501637330902918203684832716283019655932542975)) (or (and (and (< x754 1461501637330902918203684832716283019655932542976) (= x3127 (x356 x1984 1)) (= x1728 (x2947 (x1618 x754) x218 0)) (= (x356 x1728 1) x3354) (= (x3783 (+ 96 x2301)) x973) (>= x754 0) (= x973 x3175) (= x1030 (x356 x757 1)) (= (x1233 x3127) x754) (= (x356 x633 1) x757) (= x633 (x2947 (x1618 x1327) x218 0)) (<= x754 1461501637330902918203684832716283019655932542975)) (not x398)) (and (and (= x3175 x87) (= (x356 x3963 1) x3065) (= x3963 (x2947 (x1618 x1327) x218 0)) (= x87 (x3783 (+ x2301 96))) (= x1615 (x356 x3065 1)) (= (x356 x1984 1) x2562)) x398)))) (and x1153 (and (or (and (not x2443) (and (= x1695 (x3783 (+ 96 x2301))) (= x3519 (x2947 (x1618 x362) x218 0)) (= x566 (x356 x2655 1)) (= (x356 x2141 1) x2655) (= (x2947 (x1618 x1327) x218 0) x2141) (= x1695 x3175))) (and x2443 (and (= x9 x3175) (= x3623 (x921 x3316)) (= (x2947 (x1618 x362) x218 0) x3881) (> 1461501637330902918203684832716283019655932542976 x3623) (= x2527 (x356 x3446 1)) (<= x3623 1461501637330902918203684832716283019655932542975) (= x3316 (x2947 (x1618 x362) x218 0)) (= x3751 (x356 x3259 1)) (= (x356 x3422 1) x3259) (= x3422 (x2947 (x1618 x1327) x218 0)) (<= 0 x3623) (= x9 (x3783 (+ x2301 96))) (= x3446 (x2947 (x1618 x3623) x218 0))))) (and (= x2443 (> x2954 0)) (<= x3523 1461501637330902918203684832716283019655932542975) (< x3523 1461501637330902918203684832716283019655932542976) (= (x3381 (- x362 x3523)) x2954) (<= 0 x3523) (= (x1460 x1984) x3523)))))) x623)))
(assert (x216 x106 (- x2384 x77)))
(assert (x2421 x2011))
(assert (x2421 x3742))
(assert (x304 x1395 x106 x3849 x1184))
(assert (= x2063 (=> (and (= x313 0) (= x1588 x1077)) x993)))
(assert (x216 x3185 (- x2751 x2384)))
(assert (x216 x77 (- x294 x2957)))
(assert (=> (<= x958 10000) (= (x1618 x958) (x2353 x958))))
(assert (= x3722 (and x2305 x1124)))
(assert (x2421 x2125))
(assert (=> (<= x933 10000) (= (x1618 x933) (x2353 x933))))
(assert (= (and (not x3856) x1202) x3249))
(assert (x2421 x2631))
(assert (= (=> (and (= x1376 x3822) (= x1435 x337)) x2918) x705))
(assert (x216 x2957 (- x3574 x1184)))
(assert (= (and x1360 (not x3021)) x3749))
(assert (x2421 x2490))
(assert (= (or x533 x2297 x763 x1136 x473) x3869))
(assert (x2421 x898))
(assert (x2421 x2734))
(assert (x2421 x2800))
(assert (x2421 x2713))
(assert (= x5 (and (not x2575) x66)))
(assert (= x3257 (or x3799 x1151)))
(assert (=> (>= 10000 x2569) (= (x1618 x2569) (x2353 x2569))))
(assert (= (and (not x1807) x2858) x2802))
(assert (x2421 x2010))
(assert (x2406 (- x3792 x2384)))
(assert (x248 x647 x1111 x1624 x2222))
(assert (x2421 x129))
(assert (x2421 x3286))
(assert (x2421 x3860))
(assert (x2421 x3712))
(assert (= (and x2165 x1877) x2108))
(assert (= (or x2879 x3844) x818))
(assert (x2421 x3923))
(assert (x2421 x1560))
(assert (= (and x1813 x769) x1066))
(assert (x2421 x2722))
(assert (= 2691771752 (x1991 (x2353 2691771752))))
(assert (x304 x106 x1033 x3574 x2957))
(assert (x248 x2384 x106 x2751 x3185))
(assert (= (+ (x1991 x1984) 1) (x1991 (x356 x1984 1))))
(assert (x2421 x3506))
(assert (= x1322 (or x3418 x1829)))
(assert (= (=> (and (= x3972 x2816) (= x3816 0) (= x2492 x2379)) x1436) x2922))
(assert (and (x2912 1000000000000000000 x1214) (x1712 1000000000000000000 x1214) (x804 1000000000000000000 x1214) (x3035 1000000000000000000 x1214) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1214) (- (* x1214 1000000000000000000) (* x1214 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1214 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x1214 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1214 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x1214 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x1214 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x1214) (= (* x1214 1000000000000000000) (x1801 1000000000000000000 x1214))))
(assert (x2406 (- x294 x106)))
(assert (= (and x1175 x3664) x2708))
(assert (= (=> (or (and (= x2650 x628) (not x628)) (and (and (= (< x3353 x2065) x2650) (= x3353 (x3381 (- x971 x336))) (not (> x336 x971))) x628)) x3320) x277))
(assert (x2421 x2633))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x183 (+ (* 1461501637330902918203684832716283019655932542976 (x3413 x183 1461501637330902918203684832716283019655932542976)) (x2732 x183 1461501637330902918203684832716283019655932542976)))) (x1688 x183 1461501637330902918203684832716283019655932542976) (x1527 x183 1461501637330902918203684832716283019655932542976) (x747 x183 1461501637330902918203684832716283019655932542976)))
(assert (and (x3187 x1491 1000000000000000000) (x2566 x1491 1000000000000000000) (x878 x1491 1000000000000000000) (x3266 x1491 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x1491)) (and (>= x1491 (* 1000000000000000000 (x3413 x1491 1000000000000000000))) (> (* (x3413 x1491 1000000000000000000) 1000000000000000000) (- x1491 1000000000000000000))))))
(assert (x2421 x3603))
(assert (= x3174 (x1991 (x1618 x3174))))
(assert (x2421 x106))
(assert (x2421 x303))
(assert (= (and x1412 (not x2126)) x3018))
(assert (= x2690 (and x2525 x3885)))
(assert (x2421 x2515))
(assert (=> (>= 10000 x3718) (= (x1618 x3718) (x2353 x3718))))
(assert (x2421 x396))
(assert (=> (<= x3457 10000) (= (x1618 x3457) (x2353 x3457))))
(assert (x304 x3909 x3792 x1033 x106))
(assert (x248 x3849 x1184 x1111 x647))
(assert (x2421 x3063))
(assert (x216 x106 (- x1033 x77)))
(assert (= (or x3619 x3895) x3715))
(assert (x2421 x3880))
(assert (x248 x3185 x2751 x2957 x3574))
(assert (x248 x2957 x3574 x3909 x3792))
(assert (x2421 x3549))
(assert (= (and (not x1104) x3974) x1552))
(assert (x3448 x2853))
(assert (x2406 (- x294 x1624)))
(assert (= x929 (and x3345 x3074)))
(assert (x2421 x2730))
(assert (x248 x3792 x3909 x294 x77))
(assert (x3448 x1705))
(assert (= (and x138 (not x75)) x156))
(assert (= (and (not x2165) x1877) x3076))
(assert (= (and x410 x2701) x1620))
(assert (x2421 x3158))
(assert (x248 x2957 x3574 x2957 x2823))
(assert (x2421 x1210))
(assert (x2421 x1895))
(assert (x2421 x2711))
(assert (= x2974 (and x870 x3735)))
(assert (= (and x3756 x1369) x2727))
(assert (x304 x1111 x647 x2384 x106))
(assert (x304 x2957 x2823 x1033 x106))
(assert (x248 x2957 x3574 x2823 x2957))
(assert (x2421 x390))
(assert (= x1718 (and x3555 x935)))
(assert (x2421 x3968))
(assert (=> (>= 10000 x2171) (= (x2353 x2171) (x1618 x2171))))
(assert (x3448 x549))
(assert (x2421 x2320))
(assert (= x1571 (and (not x3016) x1860)))
(assert (x304 x1033 x106 x3574 x2957))
(assert (= (and x2845 (not x613)) x3334))
(assert (x2406 (- x2751 x2384)))
(assert (x304 x1033 x106 x2823 x2957))
(assert (x2421 x3073))
(assert (x3448 x1736))
(assert (x248 x1395 x106 x2823 x2957))
(assert (= (x2353 60231946789637257468838019015344037944473233080083133266033501538020963123200) (x1618 60231946789637257468838019015344037944473233080083133266033501538020963123200)))
(assert (x304 x3909 x3792 x1395 x106))
(assert (x2421 x3135))
(assert (= x3472 (and x744 x1067)))
(assert (x2421 x2767))
(assert (x2098 x1642))
(assert (x2406 (- x2384 x1395)))
(assert (x2406 (- x3574 x1184)))
(assert (x216 x1624 (- x2222 x2957)))
(assert (x2421 x1355))
(assert (x2421 x2967))
(assert (x216 x1624 (- x2222 x106)))
(assert (= (and x2914 (not x247)) x2745))
(assert (= (and x1968 x3119) x3417))
(assert (x3448 x3718))
(assert (and (x2912 1000000000000000000 x3670) (x1712 1000000000000000000 x3670) (x804 1000000000000000000 x3670) (x3035 1000000000000000000 x3670) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3670) (- (* x3670 1000000000000000000) (* x3670 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3670 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x3670 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x3670 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x3670 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x3670 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x3670) (= (* x3670 1000000000000000000) (x1801 1000000000000000000 x3670))))
(assert (= x191 (or x2694 x1484 x2449 x3556 x1168 x1544)))
(assert (x2421 x3676))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x3020 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3413 x3020 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2732 x3020 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1688 x3020 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1527 x3020 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x747 x3020 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x2421 x2580))
(assert (x3448 x1654))
(assert (= (=> (and (= x3403 x755) (= x1511 x3888) (not (> x2121 x971))) x2375) x3662))
(assert (= (x1991 (x356 x648 1)) (+ (x1991 x648) 1)))
(assert (x2421 x3882))
(assert (x2421 x1235))
(assert (x248 x647 x1111 x2957 x3574))
(assert (= (and x969 (not x1792)) x2666))
(assert (x2421 x29))
(assert (x216 x3792 (- x3909 x1111)))
(assert (x2406 (- x2384 x2957)))
(assert (x2421 x1385))
(assert (and (x3187 x3803 1000000000000000000) (x2566 x3803 1000000000000000000) (x878 x3803 1000000000000000000) (x3266 x3803 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x3803)) (and (>= x3803 (* 1000000000000000000 (x3413 x3803 1000000000000000000))) (> (* (x3413 x3803 1000000000000000000) 1000000000000000000) (- x3803 1000000000000000000))))))
(assert (x2421 x1952))
(assert (= x3810 (or (and x531 (not x1464)) x3346)))
(assert (x2421 x3816))
(assert (= (or x1579 x3001) x280))
(assert (= (and (not x2066) x1569) x2330))
(assert (x2421 x3764))
(assert (= (and x1046 x1570) x2539))
(assert (= (=> (= (= x914 x90) x2970) (and (=> x2970 x787) (=> (and (not x2970) (= (< 0 x90) x3856)) (and (=> (not x3856) x906) (=> (and (and (and (= x2163 (x2947 (x1618 x1507) x1317 0)) (<= x1113 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x356 x2163 1) x3604) (= x2373 (x3489 x2163)) (= x924 (x356 x3604 1)) (<= 0 x1113) (>= 1461501637330902918203684832716283019655932542975 x549) (<= 0 x2373) (> 1461501637330902918203684832716283019655932542976 x549) (= (x1975 x924) x1113) (<= 0 x549) (= (x2769 x3604) x549) (< x2373 1461501637330902918203684832716283019655932542976) (= x2766 (= x2373 0)) (>= 1461501637330902918203684832716283019655932542975 x2373) (not (= x1113 0))) (or (and (not x2766) (and (= x1473 (x356 x1722 1)) (= (x2947 (x1618 x2373) x1317 0) x1722))) (and (= (x356 x1317 1) x3940) x2766))) x3856) x1844))))) x746))
(assert (x2421 x1384))
(assert (x248 x2957 x2823 x3574 x2957))
(assert (x216 x3909 (- x3792 x2384)))
(assert (= (or x3416 x709) x2679))
(assert (x3448 x3174))
(assert (x2421 x417))
(assert (x2421 x1970))
(assert (x2421 x2889))
(assert (x248 x2823 x2957 x1395 x106))
(assert (= x1893 (and x2136 x1992)))
(assert (= (x1618 2217467699) (x2353 2217467699)))
(assert (= (and (not x1415) x2018) x2363))
(assert (x2592 x658))
(assert (x2421 x2710))
(assert (x2421 x3888))
(assert (x304 x647 x1111 x2384 x106))
(assert (x2421 x3031))
(assert (x3448 x518))
(assert (x2421 x1126))
(assert (x3448 x3461))
(assert (= (and (not x157) x2873) x2229))
(assert (= x3048 (and (not x4) x3351)))
(assert (x2421 x2813))
(assert (= x1563 (or x1076 (and (not x1777) x931))))
(assert (x304 x647 x1111 x3849 x1184))
(assert (x248 x1184 x3849 x77 x294))
(assert (x216 x3574 (- x2957 x294)))
(assert (= (+ (x1991 x51) 1) (x1991 (x356 x51 1))))
(assert (= (and (not x1656) x1911) x3083))
(assert (= x2504 (=> (and (or x1240 (not x1240)) (= (= x1820 0) x1240)) x3435)))
(assert (= (x1991 (x356 x1722 1)) (+ (x1991 x1722) 1)))
(assert (x2421 x1978))
(assert (= (or x3713 x550 x3781) x3555))
(assert (and (=> (> 32 0) (= x333 (+ (* 32 (x3413 x333 32)) (x2732 x333 32)))) (x1688 x333 32) (x1527 x333 32) (x747 x333 32)))
(assert (x2406 (- x1184 x2751)))
(assert (x2421 x3047))
(assert (= (x1991 (x2353 77053863734975077137548456399560439977311721439096602559221323163398253314048)) 77053863734975077137548456399560439977311721439096602559221323163398253314048))
(assert (x304 x2957 x2823 x3849 x1184))
(assert (= x2617 (and (not x1423) x393)))
(assert (x248 x106 x2384 x2957 x3574))
(assert (= x2356 (and x2316 x2978)))
(assert (= x2304 (and (not x2602) x2904)))
(assert (x2421 x2932))
(assert (= x709 (and x2356 (not x650))))
(assert (x2406 (- x2222 x1111)))
(assert (= (x1991 (x1618 x1868)) x1868))
(assert (= x2448 (and x3627 x105)))
(assert (= x622 (=> (and (= x3376 x3278) (= x3161 x1438)) x1614)))
(assert (x2421 x1529))
(assert (x2421 x1098))
(assert (= x469 (and x3592 x2690)))
(assert (= x2638 (=> (and (= x3822 x743) (= x3 x337)) x705)))
(assert (x2421 x1021))
(assert (x2421 x160))
(assert (x2421 x2869))
(assert (x2421 x1254))
(assert (x2421 x416))
(assert (= (or x1308 x1447 x1550 x2676) x531))
(assert (x2406 (- x1033 x294)))
(assert (x2421 x146))
(assert (x248 x647 x1111 x2957 x2823))
(assert (x2421 x2240))
(assert (x2421 x2757))
(assert (and (x2912 1000000000000000000 x1870) (x1712 1000000000000000000 x1870) (x804 1000000000000000000 x1870) (x3035 1000000000000000000 x1870) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1870) (- (* x1870 1000000000000000000) (* x1870 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1870 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x1870 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1870 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x1870 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x1870 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x1870) (= (* x1870 1000000000000000000) (x1801 1000000000000000000 x1870))))
(assert (=> (<= x1920 10000) (= (x1618 x1920) (x2353 x1920))))
(assert (=> (<= x2853 10000) (= (x2353 x2853) (x1618 x2853))))
(assert (and (x3187 x1442 1000000000000000000) (x2566 x1442 1000000000000000000) (x878 x1442 1000000000000000000) (x3266 x1442 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x1442)) (and (>= x1442 (* 1000000000000000000 (x3413 x1442 1000000000000000000))) (> (* (x3413 x1442 1000000000000000000) 1000000000000000000) (- x1442 1000000000000000000))))))
(assert (= x111 (=> (and (= 0 x2767) (= x668 x3318)) x953)))
(assert (x248 x294 x77 x3849 x1184))
(assert (x2421 x47))
(assert (x2421 x3470))
(assert (x2421 x1934))
(assert (x216 x106 (- x1033 x2823)))
(assert (= x1267 (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2201) (= (x1883 x1699) x3765) (>= x1385 0) (>= x3734 0) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x2405) (= x2581 (> x3765 x2201)) (= (x356 x885 1) x1699) (= x3734 (x3666 x885)) (= (x2947 (x1618 x3770) (x2353 155) 0) x1317) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x2968) (= x2070 (x2947 (x1618 x1507) x3338 0)) (= (x356 x3240 2) x1420) (= (x2947 (x1618 x1507) x1361 0) x885) (>= x90 0) (<= 0 x2201) (= (x2947 (x1618 x2968) (x2353 154) 0) x3338) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3734) (= x1361 (x2947 (x1618 x2405) (x2353 158) 0)) (= x3770 (x525 1461501637330902918203684832716283019655932542975 x2746)) (= (x1975 x1420) x90) (>= x3765 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3765) (= x3570 (x356 x2070 2)) (<= x1385 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x90 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3240 (x2947 (x1618 x1507) x1317 0)) (= x1385 (x1301 x3570))) (or (and (not x2581) (= x914 0)) (and (= x3765 x914) x2581))) x746)))
(assert (x2421 x2808))
(assert (x2421 x45))
(assert (x216 x1111 x647))
(assert (x2421 x3236))
(assert (= (x1991 (x356 x885 1)) (+ (x1991 x885) 1)))
(assert (= x3709 (=> (= x3071 (= x1438 0)) (and (=> (and (= x2029 (or (and (> 32 x3278) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3278) true)) (> x3278 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not x3071)) (and (=> x2029 x3966) (=> (and (and (= 1 x1977) (= x3790 32)) (not x2029)) x2743))) (=> x3071 x3966)))))
(assert (= (x1991 (x1618 x2853)) x2853))
(assert (= (and x1927 x1581) x3845))
(assert (= (x1991 (x356 x1689 1)) (+ (x1991 x1689) 1)))
(assert (= (x1991 (x356 x495 1)) (+ 1 (x1991 x495))))
(assert (x2421 x3863))
(assert (= x3844 (and (not x1810) x207)))
(assert (x3448 x903))
(assert (x3448 x3899))
(assert (= (x1991 (x1618 x2924)) x2924))
(assert (= x2374 (and (=> (and (not x1024) (and (= 0 x3812) (= x636 x416))) x2345) (=> (and x1024 (and (or (and x1104 (and (= x521 (x2544 x2383)) (= x2575 (not x1061)) (<= x521 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x356 x2851 2) x2383) (= x2851 (x2947 (x1618 x1999) x3338 0)) (= (< x521 x3162) x1061) (>= x521 0))) (and (not x1104) (= x2575 x1104))) (and (= (x356 x1445 1) x3621) (>= x1999 0) (< x1999 1461501637330902918203684832716283019655932542976) (= (ite (> x3905 1) (not (= x1999 0)) (> x3905 1)) x1104) (= (x1919 x3621) x1999) (= (x2947 (x1618 x416) x3338 0) x1445) (<= x1999 1461501637330902918203684832716283019655932542975)))) x117))))
(assert (x2421 x439))
(assert (= (and x2348 x2507) x1156))
(assert (x2406 (- x106 x1033)))
(assert (x216 x3574 (- x2957 x2751)))
(assert (x248 x647 x1111 x106 x1033))
(assert (x2406 (- x2751 x3849)))
(assert (= x2146 (and (not x2085) x2482)))
(assert (x2421 x1288))
(assert (x216 x2957 (- x2823 x3574)))
(assert (= (and x1563 x3961) x2194))
(assert (x3448 x1285))
(assert (x2421 x3122))
(assert (x216 x3909 (- x3792 x1111)))
(assert (x2421 x2380))
(assert (= (and (not x444) x1719) x3248))
(assert (x2421 x549))
(assert (x1192 x333))
(assert (= x245 (and x3941 (not x927))))
(assert (= (and x1673 (not x427)) x1334))
(assert (= x2701 (and x875 (not x1133))))
(assert (x2421 x2210))
(assert (= (or x3182 x839) x843))
(assert (= x2673 (or x2068 (and x3773 x2588) (and x615 x3650) (and x1253 (not x2176)) x2636)))
(assert (x2421 x1721))
(assert (= (x1991 (x1618 x1654)) x1654))
(assert (= (and (not x1213) x3451) x1012))
(assert (= (and (not x2837) x1346) x2113))
(assert (x2421 x1111))
(assert (= x3693 (and x2598 (not x3704))))
(assert (= (x2353 2858086653) (x1618 2858086653)))
(assert (= (and x3650 (not x615)) x1272))
(assert (= x2667 (and (=> (and (not x1653) (and (= x1060 1) (= x2924 x2810))) x1342) (=> x1653 x1607))))
(assert (x304 x2823 x2957 x77 x294))
(assert (x248 x3909 x3792 x1184 x3849))
(assert (= (=> (and (= x2842 x2764) (= x3857 x916)) x3758) x3568))
(assert (= (and x273 x512) x1310))
(assert (x2421 x2334))
(assert (= 26675680369413430104207330802600748686362808878094982966429686717365230764032 (x1991 (x2353 26675680369413430104207330802600748686362808878094982966429686717365230764032))))
(assert (x216 x647 (- x1111 x2957)))
(assert (x216 x2957 (- x3574 x294)))
(assert (x2421 x1004))
(assert (x3448 x3700))
(assert (x2421 x36))
(assert (x248 x106 x1395 x3792 x3909))
(assert (= (=> (and (= x1509 x2734) (= x173 x1902)) x295) x1888))
(assert (= (and x2622 (not x741)) x2772))
(assert (x2421 x1315))
(assert (x2406 x1264))
(assert (x2421 x3794))
(assert (= (and x508 (not x2836)) x3099))
(assert (x3448 x1881))
(assert (= (and x223 x2600) x2020))
(assert (= (x1991 (x1618 x1479)) x1479))
(assert (x248 x2957 x3574 x106 x2384))
(assert (x2421 x118))
(assert (= 129058084 (x1991 (x2353 129058084))))
(assert (=> (<= x3493 10000) (= (x2353 x3493) (x1618 x3493))))
(assert (x2421 x2805))
(assert (x2421 x3612))
(assert (x2421 x1062))
(assert (= x2737 (or x2888 x2571)))
(assert (x248 x77 x294 x2384 x106))
(assert (= (x1991 (x1618 x2698)) x2698))
(assert (and (=> (> 32 0) (= x3470 (+ (* 32 (x3413 x3470 32)) (x2732 x3470 32)))) (x1688 x3470 32) (x1527 x3470 32) (x747 x3470 32)))
(assert (x2421 x2651))
(assert (x2421 x3951))
(assert (x2421 x3545))
(assert (x248 x3792 x3909 x647 x1111))
(assert (= x895 (x1991 (x1618 x895))))
(assert (x2421 x2187))
(assert (= x435 (=> (= (> x646 0) x3499) (and (=> (and x3499 (and (or (and (= x2458 x3200) (not x3200)) (and x3200 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2112) (= x317 (> x646 x2112)) (= (x356 x1592 2) x3907) (= (x1259 x3907) x2112) (>= x2112 0) (= (x2947 (x1618 x2620) x1245 0) x1592) (= (not x317) x2458)))) (and (= (x1259 x3854) x1704) (= x2620 (x604 x3921)) (= 0 x1704) (<= 0 x2620) (= x1490 (x2947 (x1618 x1973) x1245 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3905) (<= x2620 1461501637330902918203684832716283019655932542975) (= (x356 x1245 1) x3921) (<= 0 x1704) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1704) (= x3200 (ite (> x3905 0) (not (= x2620 0)) (< 0 x3905))) (not (= 0 x981)) (= x3854 (x356 x1490 2)) (> 1461501637330902918203684832716283019655932542976 x2620) (>= x3905 0)))) x3089) (=> (and (and (= x3822 x1269) (= x337 x2715)) (not x3499)) x705)))))
(assert (x2421 x1381))
(assert (x216 x3909 (- x3792 x1624)))
(assert (= x3230 (and x3946 x3789)))
(assert (x2406 (- x3574 x3792)))
(assert (x1177 x3132 x2957))
(assert (= x2565 (and x988 x151)))
(assert (x216 x2384 (- x106 x77)))
(assert (x248 x3909 x3792 x2957 x3574))
(assert (x2421 x3944))
(assert (x216 x106 (- x1395 x2957)))
(assert (x2421 x1331))
(assert (x3448 x50))
(assert (= (and x1860 x3016) x2694))
(assert (x2421 x636))
(assert (x2421 x2627))
(assert (x2421 x17))
(assert (= (and x1940 (not x2339)) x3539))
(assert (= x697 (and (not x31) x1310)))
(assert (x216 x3849 (- x1184 x77)))
(assert (x2421 x3215))
(assert (x216 x3185 (- x2751 x3792)))
(assert (x216 x2957 (- x3574 x3185)))
(assert (x2421 x2250))
(assert (= x1013 (or x1335 x1640)))
(assert (x216 x2823 (- x2957 x3185)))
(assert (x216 x2823 x2957))
(assert (x216 x106 (- x1395 x1624)))
(assert (= x472 (and x361 (not x3499))))
(assert (x2421 x2287))
(assert (x304 x1033 x106 x3185 x2751))
(assert (x216 x2384 (- x106 x1111)))
(assert (x2421 x2500))
(assert (= x1858 (x1991 (x1618 x1858))))
(assert (x304 x2823 x2957 x3574 x2957))
(assert (x216 x294 (- x77 x3574)))
(assert (= x464 (or x3658 x987 x2974 x2255)))
(assert (= (x1618 64481368622683354557555711714629296119639875834729404553039716062438103187456) (x2353 64481368622683354557555711714629296119639875834729404553039716062438103187456)))
(assert (x2406 (- x3574 x3849)))
(assert (x2421 x1677))
(assert (and (x2912 1000000000000000000 x2166) (x1712 1000000000000000000 x2166) (x804 1000000000000000000 x2166) (x3035 1000000000000000000 x2166) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x2166) (- (* x2166 1000000000000000000) (* x2166 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x2166 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x2166 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2166 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x2166 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x2166 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x2166) (= (* x2166 1000000000000000000) (x1801 1000000000000000000 x2166))))
(assert (x248 x2823 x2957 x2751 x3185))
(assert (x248 x1111 x647 x3849 x1184))
(assert (x2421 x3707))
(assert (x2421 x897))
(assert (= x3351 (and x2491 x1921)))
(assert (= (=> (and (= x3216 x3060) (= x2289 x206)) x2579) x1748))
(assert (= (and x2073 (not x2239)) x2560))
(assert (x248 x2384 x106 x3185 x2751))
(assert (x2406 (- x3185 x3909)))
(assert (= x2314 (and x2245 x1064)))
(assert (x3448 x3860))
(assert (= x3468 (=> (and (= x3637 x863) (= x2114 x500)) x3051)))
(assert (= x188 (and x3913 (not x400))))
(assert (x2421 x1538))
(assert (x248 x3185 x2751 x106 x1033))
(assert (x248 x3849 x1184 x2751 x3185))
(assert (x216 x1395 (- x106 x1184)))
(assert (= (+ (x1991 x2163) 1) (x1991 (x356 x2163 1))))
(assert (x2406 (- x3185 x2222)))
(assert (x2421 x2228))
(assert (x304 x2957 x3574 x77 x294))
(assert (= x3005 (and x2873 x157)))
(assert (= (and x1159 x1068) x3949))
(assert (x2406 x3888))
(assert (= (and x1274 x2581) x2841))
(assert (x216 x2823 (- x2957 x2384)))
(assert (x216 x2823 (- x2957 x294)))
(assert (= (=> (and (= (= 0 x3216) x1645) (or (not x1645) x1645)) x619) x2579))
(assert (= (x2353 129058084) (x1618 129058084)))
(assert (= x2074 (=> (= (= 0 x2764) x1854) (and (=> x1854 x1169) (=> (and (not x1854) (= (or (> x3857 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x3857) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3857) true))) x124)) (and (=> (and (not x124) (and (= x3060 1) (= x2289 32))) x1748) (=> x124 x1169)))))))
(assert (= (and x1191 x3200) x3836))
(assert (= x2273 (and (not x2029) x850)))
(assert (x216 x2957 (- x2823 x1395)))
(assert (x2421 x72))
(assert (= x1360 (and x3285 x1783)))
(assert (x216 x1395 (- x106 x3792)))
(assert (x216 x2957 (- x2823 x106)))
(assert (= (and x686 x1349) x557))
(assert (= x2735 (and x1733 x457)))
(assert (x304 x294 x77 x3574 x2957))
(assert (x2098 x2663))
(assert (x2421 x1511))
(assert (= x286 (and x3896 x2849)))
(assert (= (and x138 x75) x710))
(assert (x216 x647 (- x1111 x2222)))
(assert (x248 x1624 x2222 x106 x2384))
(assert (= (or x1122 x2235) x901))
(assert (= (or x1784 x2390) x3544))
(assert (x248 x3792 x3909 x2957 x3574))
(assert (x3448 x3493))
(assert (x248 x106 x1033 x3909 x3792))
(assert (= x1995 (or x307 x2791 x128 x1872)))
(assert (x248 x3909 x3792 x3849 x1184))
(assert (=> (<= x974 10000) (= (x1618 x974) (x2353 x974))))
(assert (x216 x2957 (- x2823 x3185)))
(assert (= (or x3501 x2599 x3056) x2372))
(assert (= (x1991 (x356 x1933 1)) (+ (x1991 x1933) 1)))
(assert (= (and x999 x203) x1142))
(assert (x2421 x1208))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x1605 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3413 x1605 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2732 x1605 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1688 x1605 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1527 x1605 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x747 x1605 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x216 x1033 (- x106 x1395)))
(assert (= (x1991 (x356 x3338 1)) (+ (x1991 x3338) 1)))
(assert (= x2449 (and x1663 x2368)))
(assert (x216 x106 (- x2384 x2957)))
(assert (x2406 (- x1624 x3574)))
(assert (x2406 (- x3909 x2384)))
(assert (= x466 (and x108 x2391)))
(assert (= (and x1244 x2799) x1072))
(assert (= x596 (=> (and (= (x3783 (+ x3746 31)) x3020) (>= x350 0) (= (x525 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3020) x567) (<= x350 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x2320) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x350 x490)) (= x312 x490) (= 0 x2551) (= (+ x312 x399) x3355) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3746) (and (> 32 x3746) (= true (<= x3746 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (< (* 1000000000000000000 x1909) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (* x1909 1000000000000000000) x2347) (= x2261 (x3381 (- x1399 x3142))) (= (x3783 (+ x2729 32)) x1399) (= (x3783 (+ x3142 4)) x2729) (not (= 0 x1745)) (= (> x1870 115792089237316195423570985008687907853269984665640564039457) x1219) (= (x3413 x2347 x2320) x3482) (= (x2409 (* x1870 1000000000000000000)) x1909) (= x2551 (ite x1219 1 0)) (= x350 (x3630 x2820)) (= x3142 (x3783 (+ x567 x3053))) (= x2320 (x421 x3053)) (= (x3413 x3482 1000000000000000000) x490) (= x2820 (x356 x3218 1)) (= x399 x350) (= x638 (= x3279 x1937)) (= x3279 (x525 1461501637330902918203684832716283019655932542975 x2746))) (and (=> (and x638 (and (= 3320572652 x98) (> x1126 0) (= 36 x3069) (= 89522461602318961266474185744428785802019839140862557341176434972013554040832 x2577) (= x3069 x2261) (= x1126 (x1382 (x1618 x1937))) (= x2231 (x3381 (- x3069 4))) (= (or (and (< x2231 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2231) true)) (> x2231 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x900) (not (> 2217467699 x98)) (not (< x98 3320572652)) (= x1173 x1870) (not (> 4 x3069)) (not (> 2929553584 x98)))) (and (=> (and (and (>= x1746 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1746) (= x1915 x1173) (= (< x1746 x1870) x2008)) (not x900)) (and (=> (and (and (= x3064 (x113 x3410)) (= x3410 (x2947 (x1618 x897) (x2353 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3064) (= (> x3064 x1098) x2765) (= (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1173)) x1098) (>= x3064 0)) (not x2008)) (and (=> x2765 x669) (=> (and (not x2765) (and (= x320 (x3783 (+ x1173 x3064))) (>= x1746 0) (= (> x1173 x1746) x3360) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1746))) (and (=> (and (and (> 1461501637330902918203684832716283019655932542976 x1648) (= (x3381 (- x1746 x1173)) x1057) (<= 0 x1648) (= (= x1648 x1894) x730) (>= 1461501637330902918203684832716283019655932542975 x1648) (= 128 x2016)) (not x3360)) (and (=> (and (and (= x3537 2835717307) (not (> 4 x3918)) (not (< x3537 2835717307)) (= x897 x3234) (= x3599 (or (and (= true (<= x519 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x519 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x519))) (= 68 x3918) (= 68 x3918) (= x1915 x764) (not (> 1466279372 x3537)) (= (x3381 (- x3918 4)) x519) (= x352 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x1382 (x1618 x1894)) x2442) (< 0 x2442)) x730) (and (=> (and (and (= x3910 x3234) (= x2525 (= x3234 x897))) (not x3599)) (and (=> (and x2525 (and (<= x79 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x79) (= (> x1915 x79) x3592) (= x629 x764) (= (x2947 (x1618 x1937) (x2353 1) 0) x768) (= x79 (x514 x768)))) (and (=> x3592 x323) (=> (and (= x1051 (< x79 x764)) (not x3592)) (and (=> (and (and (= (> x3251 x468) x405) (= x2258 (x2947 (x1618 x3234) (x2353 1) 0)) (= (x3381 (- x79 x764)) x3507) (= (x2947 (x1618 x1937) (x2353 1) 0) x593) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3251) (= (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x764)) x468) (= x3251 (x3289 x2258)) (<= 0 x3251)) (not x1051)) (and (=> x405 x323) (=> (and (not x405) (and (= x1833 (x3783 (+ x764 x3251))) (= (> x3251 x1833) x340))) (and (=> (and (not x340) (and (= (x2947 (x1618 x3234) (x2353 1) 0) x829) (= x1325 1) (= 32 x2753))) x2086) (=> x340 x323))))) (=> x1051 x323))))) (=> (not x2525) x323))) (=> x3599 x323))) (=> (and (= x1397 (= x1648 x1937)) (not x730)) (and (=> (and (and (= x897 x1684) (> 2929553584 x1410) (= x412 (x1382 (x1618 x1937))) (= (x3381 (- x3373 4)) x1520) (not (> 4 x3373)) (not (< x1410 2217467699)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3526) (not (= 2691771752 x1410)) (= 68 x3373) (= x1429 x1915) (not (< x1410 2691771752)) (= x3373 68) (not (= 2796547477 x1410)) (= x1410 2835717307) (< 0 x412) (= (or (and (< x1520 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1520))) (> x1520 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1187)) x1397) (and (=> (and (not x1187) (and (= x737 x1684) (= x1350 (= x897 x1684)))) (and (=> (not x1350) x2197) (=> (and (and (= (x2947 (x1618 x1937) (x2353 5) 0) x2432) (>= x535 0) (<= x535 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x535 (x2590 x2432)) (= x1429 x1617) (= (< x535 x1915) x2242)) x1350) (and (=> (and (and (= (x2947 (x1618 x1937) (x2353 5) 0) x3301) (<= x3559 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x1429 x3559) x255) (>= x3559 0) (= (x2590 x3301) x3559)) (not x2242)) (and (=> x255 x2197) (=> (and (not x255) (and (<= x3214 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3214 0) (= (x2947 (x1618 x1684) (x2353 5) 0) x1496) (= x2891 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1429))) (= x1102 (< x2891 x3214)) (= (x2455 x1496) x3214) (= (x3381 (- x3559 x1429)) x1721))) (and (=> (and (not x1102) (and (= x1144 1) (= 32 x500) (= x174 (x3783 (+ x3214 x1429))) (= x863 1))) x3468) (=> x1102 x2197))))) (=> x2242 x2197))))) (=> x1187 x2197))) (=> (and (= (= x632 x1648) x231) (not x1397)) (and (=> (and (and (= x2388 (= x1648 x3860)) (and x2388 (and (= 68 x302) (= (x1382 (x1618 x3860)) x2031) (not (= 2691771752 x2404)) (= 68 x302) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1756) (not (= x2404 2796547477)) (not (> 2217467699 x2404)) (> 2929553584 x2404) (= x3080 (x3381 (- x302 4))) (= (or (and (< x3080 64) (= (<= x3080 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3080)) x2723) (< 0 x2031) (not (< x2404 2691771752)) (= x3607 x1915) (not (> 4 x302)) (= x897 x834) (= 2835717307 x2404)))) (not x231)) (and (=> x2723 x510) (=> (and (not x2723) (and (= (= x897 x834) x3618) (= x3892 x834))) (and (=> (and x3618 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x502) (= (x2947 (x1618 x1937) (x2353 5) 0) x3511) (= x1613 (< x502 x1915)) (= x3607 x419) (= x502 (x2788 x3511)) (<= 0 x502))) (and (=> x1613 x510) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2657) (= (x2947 (x1618 x1937) (x2353 5) 0) x3137) (= (> x3607 x2657) x3656) (= x2657 (x2788 x3137)) (>= x2657 0)) (not x1613)) (and (=> x3656 x510) (=> (and (not x3656) (and (>= x2435 0) (<= x2435 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3381 (- x2657 x3607)) x1578) (= (x2947 (x1618 x834) (x2353 5) 0) x1481) (= (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3607)) x3738) (= x2507 (> x2435 x3738)) (= (x2257 x1481) x2435))) (and (=> (and (not x2507) (and (= x695 1) (= x1932 32) (= 1 x2819) (= (x3783 (+ x2435 x3607)) x1198))) x1275) (=> x2507 x510))))))) (=> (not x3618) x510))))) (=> (and x231 (and (not (< x781 2217467699)) (= x407 68) (= x407 68) (not (= 2691771752 x781)) (= x2419 x897) (= x827 (x3381 (- x407 4))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1078) (not (= x781 2796547477)) (not (> 2691771752 x781)) (> 2929553584 x781) (= x3697 x1915) (= x781 2835717307) (= x3513 (x1382 (x1618 x632))) (not (> 4 x407)) (= x3632 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x827) (and (> 64 x827) (= (<= x827 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (> x3513 0))) (and (=> x3632 x3893) (=> (and (and (= x1466 x2419) (= x1921 (= x897 x2419))) (not x3632)) (and (=> (and x1921 (and (= x4 (< x2659 x1915)) (= (x2947 (x1618 x1937) (x2353 5) 0) x2111) (= x3872 x3697) (<= 0 x2659) (= x2659 (x3677 x2111)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2659))) (and (=> x4 x3893) (=> (and (not x4) (and (<= 0 x2747) (<= x2747 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x3697 x2747) x2959) (= x2747 (x3677 x491)) (= (x2947 (x1618 x1937) (x2353 5) 0) x491))) (and (=> x2959 x3893) (=> (and (and (= (x3381 (- x2747 x3697)) x3815) (= (< x2217 x2821) x2118) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2821) (= (x1137 x2342) x2821) (= (x2947 (x1618 x2419) (x2353 5) 0) x2342) (>= x2821 0) (= (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3697)) x2217)) (not x2959)) (and (=> (and (and (= (x3783 (+ x2821 x3697)) x1961) (= x2281 1) (= 32 x2030) (= 1 x1752)) (not x2118)) x3337) (=> x2118 x3893))))))) (=> (not x1921) x3893))))))))))) (=> x3360 x669))))) (=> x2008 x669))) (=> x900 x669))) (=> (and (not x638) (= x3107 (= x632 x3279))) (and (=> (and (and (not (< x3942 4)) (= x2999 89522461602318961266474185744428785802019839140862557341176434972013554040832) (= (x3381 (- x3942 4)) x1843) (= x3942 36) (= x1927 (or (> x1843 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1843 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1843) true)))) (= x1870 x501) (> x3875 0) (not (> 3320572652 x140)) (not (> 2217467699 x140)) (not (> 2929553584 x140)) (= x3875 (x1382 (x1618 x632))) (= 3320572652 x140) (= x2261 x3942)) x3107) (and (=> x1927 x1169) (=> (and (and (= (> x1870 x1698) x692) (<= x1698 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1698) (= x501 x3682)) (not x1927)) (and (=> x692 x1169) (=> (and (not x692) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3538) (= x1133 (< x563 x3538)) (= (x671 x2610) x3538) (= (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x501)) x563) (= x2610 (x2947 (x1618 x897) (x2353 6) 0)) (<= 0 x3538))) (and (=> (and (and (>= x1698 0) (= x410 (< x1698 x501)) (= x825 (x3783 (+ x501 x3538))) (<= x1698 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1133)) (and (=> (and (not x410) (and (= x2639 128) (< x2000 1461501637330902918203684832716283019655932542976) (= x1979 (= x1894 x2000)) (= (x3381 (- x1698 x501)) x1703) (<= x2000 1461501637330902918203684832716283019655932542975) (<= 0 x2000))) (and (=> (and x1979 (and (= x3682 x1504) (not (< x3133 2835717307)) (= x960 68) (= 2835717307 x3133) (not (< x3133 1466279372)) (= x960 68) (= x2519 (x3381 (- x960 4))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3052) (= x897 x1065) (not (> 4 x960)) (= (or (and (> 64 x2519) (= true (<= x2519 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2519)) x3625) (= x2232 (x1382 (x1618 x1894))) (< 0 x2232))) (and (=> x3625 x3202) (=> (and (not x3625) (and (= x1065 x2332) (= (= x1065 x897) x348))) (and (=> (not x348) x3202) (=> (and x348 (and (= x2795 x1504) (<= 0 x3332) (= x209 (x2947 (x1618 x632) (x2353 1) 0)) (= x3332 (x514 x209)) (= (> x3682 x3332) x698) (<= x3332 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x698 x3202) (=> (and (not x698) (= x2078 (> x1504 x3332))) (and (=> (and (not x2078) (and (= (x3381 (- x3332 x1504)) x2371) (= (< x1804 x2595) x404) (= (x2947 (x1618 x632) (x2353 1) 0) x822) (<= 0 x2595) (= (x662 x1249) x2595) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2595) (= (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1504)) x1804) (= x1249 (x2947 (x1618 x1065) (x2353 1) 0)))) (and (=> x404 x3202) (=> (and (and (= (x3783 (+ x1504 x2595)) x3508) (= (> x2595 x3508) x1046)) (not x404)) (and (=> x1046 x3202) (=> (and (and (= x1697 (x2947 (x1618 x1065) (x2353 1) 0)) (= x2036 1) (= x2323 32)) (not x1046)) x1224))))) (=> x2078 x3202))))))))) (=> (and (not x1979) (= x3121 (= x2000 x1937))) (and (=> (and x3121 (and (= x2813 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 68 x572) (> 2929553584 x370) (not (< x370 2217467699)) (= x370 2835717307) (= x2878 (x1382 (x1618 x1937))) (= x1907 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3802)) (> 64 x3802)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3802))) (= x263 x3682) (not (= x370 2796547477)) (not (= 2691771752 x370)) (< 0 x2878) (not (> 4 x572)) (= x425 x897) (= (x3381 (- x572 4)) x3802) (not (> 2691771752 x370)) (= x572 68))) (and (=> (and (not x1907) (and (= x425 x1591) (= (= x425 x897) x1319))) (and (=> (not x1319) x3504) (=> (and x1319 (and (>= x1856 0) (= x1856 (x2590 x2396)) (= x263 x2882) (= (< x1856 x3682) x721) (= (x2947 (x1618 x632) (x2353 5) 0) x2396) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1856))) (and (=> x721 x3504) (=> (and (not x721) (and (= (x2590 x1121) x1145) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1145) (= (< x1145 x263) x105) (>= x1145 0) (= (x2947 (x1618 x632) (x2353 5) 0) x1121))) (and (=> (and (not x105) (and (= (x2203 x2425) x1988) (<= x1988 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1988) (= (< x3663 x1988) x2272) (= x3663 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x263))) (= x2425 (x2947 (x1618 x425) (x2353 5) 0)) (= x3152 (x3381 (- x1145 x263))))) (and (=> (and (and (= (x3783 (+ x1988 x263)) x729) (= x2755 1) (= x2190 1) (= x3620 32)) (not x2272)) x2416) (=> x2272 x3504))) (=> x105 x3504))))))) (=> x1907 x3504))) (=> (and (not x3121) (= x899 (= x2000 x632))) (and (=> (and (and (and (and (= x600 (x1382 (x1618 x3860))) (> 2929553584 x442) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3272) (and (> 64 x3272) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3272)))) x31) (not (= 2691771752 x442)) (= x3864 68) (= 2835717307 x442) (not (> 4 x3864)) (> x600 0) (= x3682 x2228) (not (> 2691771752 x442)) (not (< x442 2217467699)) (not (= x442 2796547477)) (= (x3381 (- x3864 4)) x3272) (= x897 x67) (= x3864 68) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2967)) x273) (= x273 (= x3860 x2000))) (not x899)) (and (=> (and (and (= (= x897 x67) x1421) (= x1401 x67)) (not x31)) (and (=> (not x1421) x795) (=> (and (and (= (< x213 x3682) x2887) (= x2228 x2153) (<= x213 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2947 (x1618 x632) (x2353 5) 0) x2385) (>= x213 0) (= (x2788 x2385) x213)) x1421) (and (=> x2887 x795) (=> (and (not x2887) (and (= (x2788 x1293) x375) (= (x2947 (x1618 x632) (x2353 5) 0) x1293) (= (< x375 x2228) x3933) (<= 0 x375) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x375))) (and (=> (and (not x3933) (and (= x1124 (> x351 x2943)) (= (x2947 (x1618 x67) (x2353 5) 0) x665) (= x1584 (x3381 (- x375 x2228))) (>= x351 0) (= x2943 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2228))) (= x351 (x1853 x665)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x351))) (and (=> (and (not x1124) (and (= 1 x1661) (= (x3783 (+ x2228 x351)) x1248) (= x2334 1) (= x483 32))) x3465) (=> x1124 x795))) (=> x3933 x795))))))) (=> x31 x795))) (=> (and (and (= x1743 x3682) (= (or (> x1649 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1649 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1649) true))) x151) (= x897 x1462) (= (x3381 (- x3367 4)) x1649) (not (> 2691771752 x3453)) (> x1998 0) (not (> 2217467699 x3453)) (= x3367 68) (not (= 2796547477 x3453)) (= (x1382 (x1618 x632)) x1998) (not (< x3367 4)) (= x3367 68) (not (= 2691771752 x3453)) (= x2407 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x3453 2835717307) (> 2929553584 x3453)) x899) (and (=> x151 x1590) (=> (and (not x151) (and (= x1462 x52) (= x3285 (= x1462 x897)))) (and (=> (not x3285) x1590) (=> (and (and (= x3021 (< x1235 x3682)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1235) (= x1235 (x3677 x940)) (= x1743 x275) (>= x1235 0) (= x940 (x2947 (x1618 x632) (x2353 5) 0))) x3285) (and (=> x3021 x1590) (=> (and (and (<= x3787 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3677 x1838) x3787) (= x3491 (< x3787 x1743)) (= (x2947 (x1618 x632) (x2353 5) 0) x1838) (>= x3787 0)) (not x3021)) (and (=> (and (and (= x2013 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1743))) (>= x2505 0) (= x855 (< x2013 x2505)) (= x796 (x2947 (x1618 x1462) (x2353 5) 0)) (= x2505 (x3312 x796)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2505) (= x72 (x3381 (- x3787 x1743)))) (not x3491)) (and (=> (and (not x855) (and (= (x3783 (+ x2505 x1743)) x2017) (= 32 x916) (= 1 x1166) (= 1 x2842))) x3568) (=> x855 x1590))) (=> x3491 x1590))))))))))))))) (=> x410 x1169))) (=> x1133 x1169))))))) (=> (and (and (and x848 (and (> x854 0) (= x1875 x1870) (= x2787 (x3381 (- x2500 4))) (not (< x2500 4)) (not (> 2929553584 x3291)) (not (< x3291 2217467699)) (= x854 (x1382 (x1618 x3860))) (= x2500 36) (= x2261 x2500) (= 3320572652 x3291) (= x2872 (or (and (= true (<= x2787 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2787 32)) (> x2787 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (> 3320572652 x3291)) (= 89522461602318961266474185744428785802019839140862557341176434972013554040832 x2993))) (= (= x3279 x3860) x848)) (not x3107)) (and (=> x2872 x3966) (=> (and (and (= x2321 x1875) (<= x1210 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x504 (< x1210 x1870)) (<= 0 x1210)) (not x2872)) (and (=> (and (not x504) (and (= (x2947 (x1618 x897) (x2353 6) 0) x237) (>= x176 0) (= (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1875)) x69) (<= x176 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x309 x237) x176) (= (> x176 x69) x1053))) (and (=> (and (and (<= 0 x1210) (= (x3783 (+ x1875 x176)) x1776) (= x3199 (< x1210 x1875)) (<= x1210 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1053)) (and (=> (and (not x3199) (and (<= 0 x1956) (= x1427 (= x1956 x1894)) (= x1842 (x3381 (- x1210 x1875))) (<= x1956 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x1956) (= x1742 128))) (and (=> (and (not x1427) (= (= x1937 x1956) x2837)) (and (=> (and (= (= x632 x1956) x192) (not x2837)) (and (=> (and (not x192) (and (= x866 (= x1956 x3860)) (and x866 (and (= x897 x3641) (< 0 x3612) (not (= 2691771752 x3633)) (not (< x3558 4)) (= 68 x3558) (= (x1382 (x1618 x3860)) x3612) (= 68 x3558) (= 2835717307 x3633) (not (= x3633 2796547477)) (= x2303 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 2691771752 x3633)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2327) true) (< x2327 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2327)) x3866) (= x2327 (x3381 (- x3558 4))) (< x3633 2929553584) (= x1211 x2321) (not (< x3633 2217467699)))))) (and (=> x3866 x1816) (=> (and (and (= x3156 (= x3641 x897)) (= x666 x3641)) (not x3866)) (and (=> (not x3156) x1816) (=> (and x3156 (and (= (< x588 x2321) x840) (= x537 x1211) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x588) (<= 0 x588) (= x1942 (x2947 (x1618 x3860) (x2353 5) 0)) (= (x2788 x1942) x588))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2191) (>= x2191 0) (= x3840 (x2947 (x1618 x3860) (x2353 5) 0)) (= x1929 (< x2191 x1211)) (= (x2788 x3840) x2191)) (not x840)) (and (=> (and (and (= x3580 (> x1580 x693)) (= x1580 (x1741 x1683)) (= (x2947 (x1618 x3641) (x2353 5) 0) x1683) (= (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1211)) x693) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1580) (<= 0 x1580) (= (x3381 (- x2191 x1211)) x397)) (not x1929)) (and (=> (and (and (= 1 x3319) (= (x3783 (+ x1580 x1211)) x2909) (= x1621 32) (= 1 x3421)) (not x3580)) x653) (=> x3580 x1816))) (=> x1929 x1816))) (=> x840 x1816))))))) (=> (and (and (= x1302 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 2217467699 x890)) (= 2835717307 x890) (> 2929553584 x890) (= x2945 (x3381 (- x3070 4))) (= x2321 x589) (not (< x3070 4)) (not (= 2691771752 x890)) (not (= x890 2796547477)) (> x2456 0) (= x3070 68) (= x2456 (x1382 (x1618 x632))) (= (or (> x2945 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2945)) (< x2945 64))) x3304) (= 68 x3070) (not (< x890 2691771752)) (= x2853 x897)) x192) (and (=> (and (and (= x2853 x837) (= (= x2853 x897) x2496)) (not x3304)) (and (=> (not x2496) x3531) (=> (and (and (= x303 x589) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x159) (<= 0 x159) (= x1585 (x2947 (x1618 x3860) (x2353 5) 0)) (= x287 (> x2321 x159)) (= (x3677 x1585) x159)) x2496) (and (=> (and (not x287) (and (= x1423 (> x589 x877)) (<= 0 x877) (= (x2947 (x1618 x3860) (x2353 5) 0) x3886) (= x877 (x3677 x3886)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x877))) (and (=> (and (not x1423) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2167) (= (> x2167 x1390) x2145) (= (x3807 x1457) x2167) (= (x3381 (- x877 x589)) x7) (>= x2167 0) (= x1390 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x589))) (= x1457 (x2947 (x1618 x2853) (x2353 5) 0)))) (and (=> x2145 x3531) (=> (and (not x2145) (and (= x1010 1) (= 1 x2240) (= 32 x1407) (= (x3783 (+ x589 x2167)) x3925))) x1011))) (=> x1423 x3531))) (=> x287 x3531))))) (=> x3304 x3531))))) (=> (and (and (> x3930 0) (not (< x731 4)) (= x897 x958) (not (= 2796547477 x738)) (= x731 68) (= (x3381 (- x731 4)) x2691) (< x738 2929553584) (= x2321 x1482) (= 2835717307 x738) (= x3930 (x1382 (x1618 x1937))) (= x3565 (or (and (= true (<= x2691 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2691 64)) (> x2691 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2995 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (< x738 2217467699)) (= x731 68) (not (= 2691771752 x738)) (not (< x738 2691771752))) x2837) (and (=> (and (not x3565) (and (= x3419 (= x897 x958)) (= x2833 x958))) (and (=> (and x3419 (and (= x75 (< x915 x2321)) (= (x2590 x3235) x915) (<= x915 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2947 (x1618 x3860) (x2353 5) 0) x3235) (<= 0 x915) (= x1482 x144))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2296) (= x301 (x2947 (x1618 x3860) (x2353 5) 0)) (<= 0 x2296) (= x2296 (x2590 x301)) (= x1005 (> x1482 x2296))) (not x75)) (and (=> x1005 x229) (=> (and (not x1005) (and (= (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1482)) x716) (= (x3381 (- x2296 x1482)) x2178) (<= x1524 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1524 0) (= x3962 (< x716 x1524)) (= x1524 (x85 x1085)) (= x1085 (x2947 (x1618 x958) (x2353 5) 0)))) (and (=> (and (not x3962) (and (= 32 x497) (= x1199 (x3783 (+ x1482 x1524))) (= x3075 1) (= x2935 1))) x1236) (=> x3962 x229))))) (=> x75 x229))) (=> (not x3419) x229))) (=> x3565 x229))))) (=> (and (and (= x3780 x2321) (= (x3381 (- x1803 4)) x210) (= 68 x1803) (= (x1382 (x1618 x1894)) x1004) (= 68 x1803) (= x1835 x897) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2805) (= 2835717307 x3073) (not (> 2835717307 x3073)) (= (or (and (= (<= x210 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x210)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x210)) x3274) (< 0 x1004) (not (< x3073 1466279372)) (not (> 4 x1803))) x1427) (and (=> x3274 x2907) (=> (and (not x3274) (and (= x1835 x1707) (= x3745 (= x1835 x897)))) (and (=> (and (and (<= 0 x2058) (= x3780 x1181) (<= x2058 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2386 (x2947 (x1618 x3860) (x2353 1) 0)) (= (< x2058 x2321) x3424) (= (x514 x2386) x2058)) x3745) (and (=> x3424 x2907) (=> (and (= (> x3780 x2058) x595) (not x3424)) (and (=> (and (and (<= 0 x3596) (= x2204 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3780))) (= (x376 x2127) x3596) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3596) (= x3540 (x2947 (x1618 x3860) (x2353 1) 0)) (= x1974 (x3381 (- x2058 x3780))) (= x3118 (> x3596 x2204)) (= x2127 (x2947 (x1618 x1835) (x2353 1) 0))) (not x595)) (and (=> x3118 x2907) (=> (and (not x3118) (and (= x995 (x3783 (+ x3596 x3780))) (= (< x995 x3596) x1664))) (and (=> x1664 x2907) (=> (and (not x1664) (and (= x587 (x2947 (x1618 x1835) (x2353 1) 0)) (= 1 x3161) (= 32 x3376))) x622))))) (=> x595 x2907))))) (=> (not x3745) x2907))))))) (=> x3199 x3966))) (=> x1053 x3966))) (=> x504 x3966)))))))))))
(assert (x2421 x2299))
(assert (= x1502 (and x1363 (not x2078))))
(assert (= (and x1940 x2339) x103))
(assert (=> (<= x178 10000) (= (x2353 x178) (x1618 x178))))
(assert (= (=> (= (= x3162 x1385) x1643) (and (=> (and (not x1643) (= x613 (> x1385 0))) (and (=> (not x613) x1257) (=> (and (and (and (= (x2947 (x1618 x1507) x3338 0) x1912) (= (x1714 x1547) x3669) (>= 1461501637330902918203684832716283019655932542975 x3700) (= (x356 x1912 1) x1547) (= (x1301 x2080) x2128) (>= 1461501637330902918203684832716283019655932542975 x3669) (= x3700 (x279 x1912)) (not (= 0 x2128)) (> 1461501637330902918203684832716283019655932542976 x3669) (>= x3700 0) (= (= x3700 0) x1789) (< x3700 1461501637330902918203684832716283019655932542976) (<= 0 x2128) (>= x3669 0) (= (x356 x1547 1) x2080) (<= x2128 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (or (and x1789 (= x3890 (x356 x3338 1))) (and (not x1789) (and (= (x356 x2773 1) x1855) (= x2773 (x2947 (x1618 x3700) x3338 0)))))) x613) x330))) (=> x1643 x3853))) x221))
(assert (x248 x2957 x3574 x1624 x2222))
(assert (x216 x106 (- x2384 x3849)))
(assert (and (=> (> 32 0) (= x3939 (+ (* 32 (x3413 x3939 32)) (x2732 x3939 32)))) (x1688 x3939 32) (x1527 x3939 32) (x747 x3939 32)))
(assert (= x2325 (and x163 x84)))
(assert (x2421 x3720))
(assert (= (x1991 (x1618 x754)) x754))
(assert (x2406 (- x2384 x3792)))
(assert (= x2246 (and x1849 x348)))
(assert (x248 x2751 x3185 x106 x2384))
(assert (= (and (not x1733) x457) x3702))
(assert (x2421 x1304))
(assert (= (and x850 x2029) x389))
(assert (= 94482241256677223720308674365448432550660581809977780367718865401173155774464 (x1991 (x2353 94482241256677223720308674365448432550660581809977780367718865401173155774464))))
(assert (x304 x2823 x2957 x1111 x647))
(assert (x2421 x1320))
(assert (x2421 x2167))
(assert (= x2144 (and x2502 (not x1789))))
(assert (x304 x2957 x2823 x77 x294))
(assert (x2592 x1036))
(assert (x216 x3909 (- x3792 x1033)))
(assert (= x2674 (or x3093 x3005)))
(assert (= (x1618 77053863734975077137548456399560439977311721439096602559221323163398253314048) (x2353 77053863734975077137548456399560439977311721439096602559221323163398253314048)))
(assert (x2421 x1915))
(assert (x248 x1184 x3849 x2957 x2823))
(assert (x2406 (- x2957 x1033)))
(assert (= x104 (and x2126 x1412)))
(assert (x2421 x2473))
(assert (= x3669 (x1991 (x1618 x3669))))
(assert (x2421 x1181))
(assert (x248 x106 x1033 x2957 x2823))
(assert (= (x1618 1590201465) (x2353 1590201465)))
(assert (= x3461 (x1991 (x1618 x3461))))
(assert (x2421 x3884))
(assert (x2406 (- x1111 x1184)))
(assert (x304 x3574 x2957 x2222 x1624))
(assert (= x1908 (and x2992 x97)))
(assert (x2421 x1414))
(assert (x248 x3185 x2751 x1033 x106))
(assert (= x3389 (and (not x530) x844)))
(assert (= x3769 (and (not x595) x2552)))
(assert (=> (<= x1561 10000) (= (x1618 x1561) (x2353 x1561))))
(assert (x2421 x1572))
(assert (= (+ 1 (x1991 x2015)) (x1991 (x356 x2015 1))))
(assert (= (=> (and (= x3347 x3670) (= x2975 x1870) (= x755 x326)) x486) x3184))
(assert (x2421 x2184))
(assert (=> (>= 10000 x1316) (= (x2353 x1316) (x1618 x1316))))
(assert (= (x1991 (x356 x3846 2)) (+ (x1991 x3846) 2)))
(assert (x2421 x3053))
(assert (and (x3187 x429 1000000000000000000) (x2566 x429 1000000000000000000) (x878 x429 1000000000000000000) (x3266 x429 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x429)) (and (>= x429 (* 1000000000000000000 (x3413 x429 1000000000000000000))) (> (* (x3413 x429 1000000000000000000) 1000000000000000000) (- x429 1000000000000000000))))))
(assert (x2421 x581))
(assert (= (+ 2 (x1991 x3889)) (x1991 (x356 x3889 2))))
(assert (x2421 x719))
(assert (x2421 x1433))
(assert (x2421 x1591))
(assert (x2421 x851))
(assert (x248 x2957 x2823 x1395 x106))
(assert (x2421 x2135))
(assert (x304 x3574 x2957 x1395 x106))
(assert (x2421 x1756))
(assert (x2421 x3596))
(assert (= (and (=> (and x2978 (and (or (and (and (= 0 x1082) (= x1433 (x3413 x2782 1000000000000000000)) (= x1678 (x1657 x3116)) (= x2721 x884) (< (* x2428 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x3413 x1642 1000000000000000000) x2793) (= (+ x2721 x3797) x2133) (= x3322 0) (<= x884 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (+ x2793 x884) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1155 x3038) (= (< 115792089237316195423570985008687907853269984665640564039457 x1558) x3102) (= x2782 (x3413 x1772 x2957)) (= x884 (x1277 x495)) (= x1155 (x3381 (- x1678 x1433))) (= x2793 x3797) (= (x3413 x1087 x2179) x1642) (< (* 1000000000000000000 x42) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< 0 x2179) (= (> x1558 115792089237316195423570985008687907853269984665640564039457) x3423) (= x3720 x2104) (= (ite x3102 1 0) x1082) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1678) (< 0 x2957) (= x2428 (x2409 (* 1000000000000000000 x1558))) (not (> x1433 x1678)) (= (* x2428 1000000000000000000) x1087) (>= x884 0) (= x1772 (* x42 1000000000000000000)) (= x3928 x2133) (= (x2409 (* x1558 1000000000000000000)) x42) (<= 0 x1678) (= x3322 (ite x3423 1 0))) x650) (and (not x650) (and (= (x3413 x1491 1000000000000000000) x1531) (= x1040 (ite x833 1 0)) (= (+ x3984 x1441) x162) (= x1672 x1441) (= x3038 0) (= (* 1000000000000000000 x1380) x2663) (= x1380 (x2409 (* 1000000000000000000 x3105))) (= x1531 x3984) (= 0 x1040) (= x162 x3928) (= x3638 x2104) (< 0 x2179) (= x1672 (x1277 x495)) (< (+ x1531 x1672) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (> x3105 115792089237316195423570985008687907853269984665640564039457) x833) (= (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3105)) x1208) (< (* 1000000000000000000 x1380) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x3413 x2663 x2179) x1491) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1672) (<= 0 x1672) (= x3105 x3638) (not (< x1208 0))))) (and (>= x3574 0) (not (< x3720 0)) (= x495 (x2947 (x1618 x1327) x34 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3574) (= x3574 (x1657 x3116)) (= (x356 x495 1) x3116) (= (< x1558 x3105) x650) (= x2135 (x525 1461501637330902918203684832716283019655932542975 x2746)) (= x34 (x2947 (x1618 x2135) (x2353 158) 0)) (= (x1801 x3574 x2957) x681) (= x3720 x1558) (= (x3413 x681 1000000000000000000) x3105) (< (x1801 x3574 x2957) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) x1947) (=> (and (not x2978) (and (= x3195 x3403) (= x1511 0))) x3662)) x1536))
(assert (x2421 x585))
(assert (x2421 x351))
(assert (= x296 (and x2060 x806)))
(assert (x2421 x3964))
(assert (x2421 x446))
(assert (x2421 x3217))
(assert (x2421 x1413))
(assert (x248 x3574 x2957 x3849 x1184))
(assert (= 1830112933 (x1991 (x2353 1830112933))))
(assert (x2421 x87))
(assert (x2421 x3851))
(assert (x216 x1033 (- x106 x3909)))
(assert (x2421 x3356))
(assert (= (and x3544 x2650) x3975))
(assert (x2421 x1478))
(assert (=> (<= x3461 10000) (= (x1618 x3461) (x2353 x3461))))
(assert (= (x1991 (x1618 x636)) x636))
(assert (x2406 (- x3849 x106)))
(assert (x2421 x2554))
(assert (x248 x2823 x2957 x3792 x3909))
(assert (x2406 (- x1395 x2384)))
(assert (x2421 x517))
(assert (= (=> (and (= x1539 x1471) (= x36 0)) x321) x1541))
(assert (= (x2353 1856199391) (x1618 1856199391)))
(assert (x248 x1624 x2222 x3792 x3909))
(assert (= (or x3067 (and (not x1645) x918)) x920))
(assert (=> (>= 10000 x3188) (= (x1618 x3188) (x2353 x3188))))
(assert (x2421 x865))
(assert (x2421 x1902))
(assert (x2098 x2179))
(assert (x2421 x2908))
(assert (= x212 (or x1873 x3449)))
(assert (= (x1991 (x1618 x3623)) x3623))
(assert (x2406 (- x3909 x2751)))
(assert (x2406 (- x2751 x1033)))
(assert (x2421 x3623))
(assert (x2421 x1458))
(assert (= (and (not x2780) x3479) x167))
(assert (x2421 x3551))
(assert (and (x3187 x2804 1000000000000000000) (x2566 x2804 1000000000000000000) (x878 x2804 1000000000000000000) (x3266 x2804 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x2804)) (and (>= x2804 (* 1000000000000000000 (x3413 x2804 1000000000000000000))) (> (* (x3413 x2804 1000000000000000000) 1000000000000000000) (- x2804 1000000000000000000))))))
(assert (x2421 x2548))
(assert (x2421 x1775))
(assert (x248 x1624 x2222 x1111 x647))
(assert (= (and (not x628) x165) x2390))
(assert (x2421 x1242))
(assert (x2421 x2148))
(assert (= (and (not x2978) x2316) x2840))
(assert (x2421 x1670))
(assert (= (and x2078 x1363) x2503))
(assert (x216 x3792 (- x3909 x1395)))
(assert (x2421 x3640))
(assert (x3448 x2135))
(assert (= (x2353 1857877511) (x1618 1857877511)))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x428 (+ (* 1461501637330902918203684832716283019655932542976 (x3413 x428 1461501637330902918203684832716283019655932542976)) (x2732 x428 1461501637330902918203684832716283019655932542976)))) (x1688 x428 1461501637330902918203684832716283019655932542976) (x1527 x428 1461501637330902918203684832716283019655932542976) (x747 x428 1461501637330902918203684832716283019655932542976)))
(assert (= (and x2608 (not x290)) x3196))
(assert (x2421 x1739))
(assert (= x3566 (=> (and (= x1820 x961) (= x3882 x2292)) x2504)))
(assert (=> (<= x2698 10000) (= (x1618 x2698) (x2353 x2698))))
(assert (= (and (not x2043) x2398) x3658))
(assert (x2406 (- x3185 x3849)))
(assert (x2406 (- x106 x3574)))
(assert (x248 x106 x2384 x106 x1033))
(assert (x2421 x945))
(assert (= x2669 (=> (and (= x811 x3439) (= x3497 x1832) (= x114 x2274) (= x23 x413) (= x3295 x3506)) x1987)))
(assert (x304 x77 x294 x2222 x1624))
(assert (x2421 x847))
(assert (x304 x2751 x3185 x3909 x3792))
(assert (= x1754 (and x692 x482)))
(assert (= x958 (x1991 (x1618 x958))))
(assert (x2421 x2284))
(assert (= 18446744073709551615 (x1991 (x2353 18446744073709551615))))
(assert (x304 x106 x2384 x1111 x647))
(assert (x2421 x1564))
(assert (x2421 x3945))
(assert (= (x1991 (x1618 x3467)) x3467))
(assert (= x1339 (and x2614 x3529)))
(assert (x216 x647 (- x1111 x106)))
(assert (= (and x1847 x3380) x408))
(assert (= x2083 (and (not x997) x1554)))
(assert (x3448 x3457))
(assert (= (and x900 x1266) x1069))
(assert (x2421 x1966))
(assert (x304 x2957 x2823 x3185 x2751))
(assert (x2421 x1303))
(assert (x248 x2222 x1624 x647 x1111))
(assert (x2421 x3857))
(assert (x2421 x3663))
(assert (x2421 x2465))
(assert (x248 x2222 x1624 x106 x2384))
(assert (x2406 (- x2823 x1184)))
(assert (x2421 x3780))
(assert (x2406 (- x294 x2222)))
(assert (x248 x3849 x1184 x1395 x106))
(assert (= (x1991 (x356 x2288 1)) (+ (x1991 x2288) 1)))
(assert (x2406 (- x1395 x1033)))
(assert (x2421 x3546))
(assert (= x3067 (and x1645 x918)))
(assert (= (x1991 (x356 x2141 1)) (+ 1 (x1991 x2141))))
(assert (x2421 x2989))
(assert (x2421 x1713))
(assert (x2421 x535))
(assert (x216 x2823 (- x2957 x106)))
(assert (x2421 x2746))
(assert (x2421 x974))
(assert (= (and x2608 x290) x2599))
(assert (x304 x2751 x3185 x2823 x2957))
(assert (x2421 x2091))
(assert (x2421 x1745))
(assert (x2421 x1596))
(assert (and (x3187 x2627 1000000000000000000) (x2566 x2627 1000000000000000000) (x878 x2627 1000000000000000000) (x3266 x2627 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x2627)) (and (>= x2627 (* 1000000000000000000 (x3413 x2627 1000000000000000000))) (> (* (x3413 x2627 1000000000000000000) 1000000000000000000) (- x2627 1000000000000000000))))))
(assert (x216 x3792 (- x3909 x3185)))
(assert (x2406 (- x3849 x1111)))
(assert (x248 x3792 x3909 x106 x1395))
(assert (= x2879 (or x2262 x2084 x3795 x2497)))
(assert (x2421 x3152))
(assert (x2421 x668))
(assert (= (and x2556 x3578) x2660))
(assert (x2421 x3466))
(assert (x2421 x1117))
(assert (x2421 x453))
(assert (x2421 x3402))
(assert (x2421 x1070))
(assert (= (or x2714 x2370 x243 x722) x1180))
(assert (x2421 x1201))
(assert (x216 x2222 (- x1624 x77)))
(assert (x216 x3849 (- x1184 x3574)))
(assert (x216 x2384 (- x106 x1395)))
(assert (= x1368 (=> (and (= x1588 x2389) (= 0 x1458)) x2453)))
(assert (x2421 x1861))
(assert (= (=> (and (and x620 (= x1951 (> (x1382 (x1618 x1881)) 0)) (>= x2726 0) (= x1775 (x2149 (x1618 x1881))) (= x1062 (x254 x2090)) (<= 0 x3926) (< x3474 256) (<= 0 x923) (>= 255 x1670) (>= 255 x1304) (not (= x793 x3461)) (>= 18446744073709551615 x434) (>= x2884 0) (<= 0 x1596) (<= x1062 255) (<= x1258 1461501637330902918203684832716283019655932542975) (= x1276 (x2149 (x1618 x897))) (= x2022 (not x3143)) (not (= x793 x1881)) (not (= x1937 x1881)) (= x1070 x10) (<= 0 x2982) (>= x434 0) (not (< x2091 4)) (not (= x3860 x1937)) (> x3860 0) (<= x1802 255) (= (x1134 x2090) x439) (>= 1461501637330902918203684832716283019655932542975 x1686) (>= 1461501637330902918203684832716283019655932542975 x3188) (<= 0 x2212) (<= x3926 255) (not (= 0 x1264)) (= x1586 x724) (not (= x3461 x632)) (= x3143 (= 0 x3575)) (<= 0 x1686) (= x3474 (x14 x2090)) (= x437 x2746) (<= 0 x981) (= x597 (x2947 (x1618 x2287) (x2353 160) 0)) (<= x2212 18446744073709551615) (<= x3936 18446744073709551615) (>= x3689 0) (= x3579 x2939) (> 2991318663 x1622) (<= x1366 18446744073709551615) (>= 255 x2101) (<= x2722 18446744073709551615) (< 0 x793) (not (= x1894 x793)) (>= 255 x439) (>= 1461501637330902918203684832716283019655932542975 x1367) (<= x1648 1461501637330902918203684832716283019655932542975) (not (= x897 x1894)) (<= 0 x3236) (<= x3791 255) (= (x2947 (x1618 x1973) x597 0) x3514) (<= x2982 1461501637330902918203684832716283019655932542975) (<= x782 255) (<= 0 x1956) (<= 0 x3871) (= false x3748) (<= 0 x2376) (>= 1461501637330902918203684832716283019655932542975 x3860) (= (x3820 x2090) x1802) (not (= x1894 x3860)) (<= x3719 1461501637330902918203684832716283019655932542975) (>= x2247 0) (<= x2884 1461501637330902918203684832716283019655932542975) (> x1881 0) (<= 0 x299) (<= x3970 255) (= (x2149 (x1618 x1611)) x634) x687 (<= 0 x2101) (<= 0 x193) (= x805 (= 0 x1062)) (not (= x793 x1937)) (<= x344 18446744073709551615) (not (= x897 x3461)) (>= 1461501637330902918203684832716283019655932542975 x1937) (<= 0 x634) (<= 0 x1648) (= x3165 (> (x1382 (x1618 x3860)) 0)) (= x1304 (x2283 x2090)) (= x2940 (x3783 (+ 24044834009420335638544845215851342251227478490780828673611325350056707489792 x3603))) (= x981 x1973) (>= x1601 0) (<= x838 1461501637330902918203684832716283019655932542975) (= x2022 x853) (<= x2000 1461501637330902918203684832716283019655932542975) (<= x2724 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1881) (= x3922 x3252) (> 3583811254 x1622) (= x3922 (not x3276)) (<= 0 x1880) (= x1003 (= x3474 0)) (<= 0 x2883) (<= x2726 1461501637330902918203684832716283019655932542975) (<= 0 x1279) (= x3779 (x2862 192)) (<= x2376 255) (= x680 (x1382 (x1618 x897))) (not (= x632 x1894)) x3179 (> 256 x1304) (>= x2000 0) (= (x2862 128) x194) (>= 1461501637330902918203684832716283019655932542975 x874) (= x579 (not x893)) (<= x2247 255) (= false x3591) (not (= x793 x897)) (not (> 2678788150 x1622)) (>= x782 0) (>= 1461501637330902918203684832716283019655932542975 x3880) (= x3779 0) x2606 (= x2746 x2465) (<= x3871 255) (= x1264 x516) (<= x2417 255) (not (= x632 x1611)) (<= 0 x1206) (not (= x897 x1881)) (>= x2298 0) (>= x3188 0) (= x673 x691) (= x793 x2884) (not (= x632 x3860)) (not (= x3860 x1611)) (<= 0 x439) (= x1364 false) (<= x2010 255) (<= 0 x1802) (= x1973 x1601) x1341 (= x3215 x190) (> 256 x1062) (>= x3936 0) (>= x3970 0) (<= x3277 1461501637330902918203684832716283019655932542975) (= x3481 false) x1951 (>= x2698 0) (> x897 0) (> x680 0) (= x579 x499) (= x1264 x2384) (not (= x793 x632)) (= x2287 (x525 1461501637330902918203684832716283019655932542975 x2746)) (<= 0 x838) (>= x3575 0) (<= 0 x2480) (= (x2905 x2090) x3791) (>= 1461501637330902918203684832716283019655932542975 x3461) (<= x3474 255) (not (= x1881 x3860)) (<= 0 x1366) (<= x711 1461501637330902918203684832716283019655932542975) (<= x3575 255) (<= 0 x3474) (= x1938 x161) (= x2818 (x3873 416)) (>= 1461501637330902918203684832716283019655932542975 x1880) (<= x2514 1461501637330902918203684832716283019655932542975) (<= 0 x1304) (>= x1913 0) (>= 255 x1093) (= x555 (= x1802 0)) (>= x1093 0) (>= x2724 0) (>= x344 0) (= x1070 x2065) (<= x923 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x981) (not (= x3461 x1611)) (not (= x632 x1937)) (= x3545 x2034) (= (x2149 (x1618 x1937)) x3689) (>= x190 0) (>= 1461501637330902918203684832716283019655932542975 x2259) (= x3851 2678788150) (<= 0 x1258) (<= 0 x711) (>= x3884 0) (= (not x805) x1586) (>= 1461501637330902918203684832716283019655932542975 x1611) (> x1611 0) (= 3 x3934) (not (= x3860 x897)) (<= x190 1461501637330902918203684832716283019655932542975) (> x1894 0) x3165 (= (= x439 0) x2567) (> 256 x782) (< x2376 256) (not (= x3461 x1894)) (not (= x3461 x1937)) (>= 1461501637330902918203684832716283019655932542975 x2939) (not (= x1894 x1937)) (not (= x3860 x3461)) (= x1596 (x2149 (x1618 x1894))) (< 0 x632) (<= 0 x2854) (<= 0 x3719) (= x2854 (x2149 (x1618 x3461))) (>= 1461501637330902918203684832716283019655932542975 x3589) (> 256 x1802) (> 256 x3791) (not (= x1611 x793)) (= (x56 x2090) x3575) (<= 0 x3277) (= x283 x2343) (= (x2947 (x1618 x2746) (x2353 168) 0) x2090) (= x3276 (= x1304 0)) (not (= x1881 x1894)) (not (= x1611 x1937)) (not (= x897 x1937)) (>= x2514 0) (>= 1461501637330902918203684832716283019655932542975 x1601) (= x3982 x1056) (>= 18446744073709551615 x1913) (= x16 x2768) (= (x1518 x2090) x782) (> x194 0) (not (= x1881 x1611)) (= (> (x1382 (x1618 x897)) 0) x1492) (= x3579 x2703) (>= 18446744073709551615 x1279) (>= x1670 0) (= (not x1372) x691) (not (= x1894 x1611)) (<= x2746 1461501637330902918203684832716283019655932542975) (= (< 0 x2376) x2849) (<= x1956 1461501637330902918203684832716283019655932542975) (>= x874 0) (>= 1461501637330902918203684832716283019655932542975 x1206) (<= x2883 255) (>= 1461501637330902918203684832716283019655932542975 x897) (>= 255 x2159) (= x620 (< 0 (x1382 (x1618 x793)))) (<= x2480 255) x1492 (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3063) true) (> 96 x3063)) (> x3063 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x632 x1881)) (>= 1461501637330902918203684832716283019655932542975 x2698) (>= x2722 0) (= x1372 (= 0 x3791)) (>= 1461501637330902918203684832716283019655932542975 x1894) (= x3179 (< 0 (x1382 (x1618 x1894)))) (= (= x782 0) x893) (not (= x897 x632)) (>= x396 0) (>= 1461501637330902918203684832716283019655932542975 x632) (<= 0 x1062) (< x3575 256) (>= 1461501637330902918203684832716283019655932542975 x793) (>= 1461501637330902918203684832716283019655932542975 x396) x3728 (= x3236 (x2149 (x1618 x632))) (>= x1775 0) (>= x2159 0) (not (= x1611 x897)) (= (x2149 (x1618 x3860)) x2298) (>= x2939 0) (<= 0 x3791) (< 0 x3461) (> x1937 0) (= x687 (> (x1382 (x1618 x1611)) 0)) (>= x2010 0) (>= x2259 0) (= (x2149 (x1618 x793)) x299) (<= 0 x2417) (= x2606 (> (x1382 (x1618 x1937)) 0)) (= (not x1003) x1938) (= (not x555) x16) (= x1341 (< 0 (x1382 (x1618 x632)))) (= x2343 (not x2567)) (= x2724 x1881) (= x3603 (x525 26959946667150639794667015087019630673637144422540572481103610249215 x2818)) (>= 1461501637330902918203684832716283019655932542975 x3884) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2091)) (< 99 x2091)) (>= x3589 0) (not (= x3461 x1881)) (<= 0 x1276) (= (x1009 x3514) x2376) (<= 0 x3880) (>= x1367 0) (= x3728 (< 0 (x1382 (x1618 x3461)))) (>= 1461501637330902918203684832716283019655932542975 x193) (= (x3381 (- x2091 4)) x3063) (not (= x3860 x793)) (< x439 256) (= x3982 0) (= x1622 2678788150)) (or (and (not x2849) (and (= (x3783 (+ 1 x3986)) x892) (= x3763 (x2947 (x1618 x1973) (x2353 161) 0)) (= x3534 (x525 1461501637330902918203684832716283019655932542975 x2746)) (= x3452 (x998 x3763 0)) (= x1708 (x356 x3452 x3986)) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x2626) (= (x1097 x3763) x3986))) x2849)) x2969) x2318))
(assert (= x2620 (x1991 (x1618 x2620))))
(assert (x2421 x2005))
(assert (x2421 x2662))
(assert (x2421 x3507))
(assert (= (x1991 (x356 x3163 2)) (+ (x1991 x3163) 2)))
(assert (x2421 x961))
(assert (x304 x3909 x3792 x2384 x106))
(assert (x2421 x2776))
(assert (= (and x3048 (not x2959)) x1559))
(assert (x216 x2957 (- x2823 x1033)))
(assert (x2421 x2480))
(assert (x2421 x1802))
(assert (x2421 x2485))
(assert (= x1495 (and x3856 x1202)))
(assert (x2406 (- x1184 x2957)))
(assert (= x15 (and x1427 x752)))
(assert (x2421 x624))
(assert (x2421 x545))
(assert (x2406 (- x3792 x2751)))
(assert (x2406 x2428))
(assert (= (=> (and (= x1539 x1902) (= x2734 0)) x1888) x3776))
(assert (x2421 x2381))
(assert (= (and x3454 x1553) x1074))
(assert (x2421 x1609))
(assert (x2406 (- x647 x2222)))
(assert (x2421 x740))
(assert (x2609 x3020))
(assert (x2421 x1875))
(assert (= 2109788624 (x1991 (x2353 2109788624))))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x1840 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3413 x1840 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2732 x1840 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1688 x1840 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1527 x1840 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x747 x1840 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x2421 x1913))
(assert (x2421 x3978))
(assert (x2406 (- x1624 x647)))
(assert (= x198 (=> (and (= x1509 x3262) (= x3817 x173)) x295)))
(assert (= (=> (and (= x36 x1509) (= x1471 x173)) x295) x321))
(assert (x2421 x1735))
(assert (= x2484 (x1991 (x1618 x2484))))
(assert (x2406 (- x2384 x1111)))
(assert (x248 x106 x2384 x3849 x1184))
(assert (= x930 (and x3983 x3606)))
(assert (x248 x647 x1111 x1184 x3849))
(assert (x216 x3574 (- x2957 x3185)))
(assert (= (and x3307 x2903) x329))
(assert (= (=> (or (and x3740 (and (= (> x2065 x3079) x2978) (= x3079 (x3381 (- x971 x3094))) (not (< x971 x3094)))) (and (= x2978 x3740) (not x3740))) x1536) x3471))
(assert (x2421 x1032))
(assert (x2421 x2178))
(assert (x248 x1184 x3849 x1111 x647))
(assert (= x1825 (and x1514 x3108)))
(assert (x2421 x3000))
(assert (= 2861565780 (x1991 (x2353 2861565780))))
(assert (=> (<= x2077 10000) (= (x2353 x2077) (x1618 x2077))))
(assert (x248 x1624 x2222 x2823 x2957))
(assert (= (x2353 24044834009420335638544845215851342251227478490780828673611325350056707489792) (x1618 24044834009420335638544845215851342251227478490780828673611325350056707489792)))
(assert (=> (>= 10000 x3760) (= (x2353 x3760) (x1618 x3760))))
(assert (= x2784 (and x49 (not x2451))))
(assert (x2421 x3899))
(assert (x2406 (- x647 x2823)))
(assert (x3448 x2038))
(assert (x2421 x629))
(assert (x248 x2957 x2823 x2384 x106))
(assert (x2406 (- x2384 x647)))
(assert (= x3178 (and (not x744) x1067)))
(assert (x248 x3909 x3792 x3574 x2957))
(assert (x248 x2957 x2823 x3792 x3909))
(assert (= (and x815 (not x1422)) x392))
(assert (x2421 x1184))
(assert (= (=> (and (= (x2947 (x1618 x1507) x3338 0) x51) (= x3879 (x356 x51 1)) (= x1869 (x356 x3879 1))) x1257) x2215))
(assert (=> (<= x2923 10000) (= (x2353 x2923) (x1618 x2923))))
(assert (x2421 x1407))
(assert (x248 x3185 x2751 x2222 x1624))
(assert (x216 x1624 (- x2222 x3792)))
(assert (x2406 (- x2222 x3185)))
(assert (= x3500 (and x2736 x11)))
(assert (= x905 (and (not x1763) x208)))
(assert (= x3044 (and x2019 x3524)))
(assert (and (=> (> 32 0) (= x1934 (+ (* 32 (x3413 x1934 32)) (x2732 x1934 32)))) (x1688 x1934 32) (x1527 x1934 32) (x747 x1934 32)))
(assert (=> (<= x895 10000) (= (x2353 x895) (x1618 x895))))
(assert (x3448 x790))
(assert (x2421 x336))
(assert (= x1274 (or x225 x2961)))
(assert (x3448 x2812))
(assert (= (and x2168 (not x1050)) x714))
(assert (x2406 (- x1395 x3909)))
(assert (x2421 x1974))
(assert (x216 x2222 (- x1624 x3792)))
(assert (= (x1991 (x356 x3446 1)) (+ (x1991 x3446) 1)))
(assert (x2421 x1578))
(assert (x248 x294 x77 x3792 x3909))
(assert (= 1265048712 (x1991 (x2353 1265048712))))
(assert (= x2873 (or x786 x2146)))
(assert (= (and x1295 x331) x807))
(assert (= (and x2451 x49) x1186))
(assert (= x1486 (x1991 (x1618 x1486))))
(assert (x2421 x1183))
(assert (x304 x106 x2384 x1033 x106))
(assert (x2421 x2505))
(assert (x2421 x2382))
(assert (x2421 x3180))
(assert (= (and x2443 x3609) x128))
(assert (x2421 x1977))
(assert (x248 x3185 x2751 x3849 x1184))
(assert (= x875 (and x482 (not x692))))
(assert (and (=> (> 32 0) (= x1840 (+ (* 32 (x3413 x1840 32)) (x2732 x1840 32)))) (x1688 x1840 32) (x1527 x1840 32) (x747 x1840 32)))
(assert (= (x1991 (x2353 1931414571)) 1931414571))
(assert (= (and x1762 (not x3066)) x2123))
(assert (x2421 x1452))
(assert (= x3358 (and x2322 x920)))
(assert (x2421 x2016))
(assert (x216 x2957 (- x2823 x3792)))
(assert (x2421 x3157))
(assert (= (x1618 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x2353 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x2421 x2199))
(assert (= (and x2145 x2617) x2009))
(assert (= (or x3483 x3389) x2337))
(assert (x2421 x3864))
(assert (x304 x3574 x2957 x2384 x106))
(assert (x2421 x2450))
(assert (x216 x77 (- x294 x3849)))
(assert (= (x1991 (x1618 x2718)) x2718))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x981 (+ (* 1461501637330902918203684832716283019655932542976 (x3413 x981 1461501637330902918203684832716283019655932542976)) (x2732 x981 1461501637330902918203684832716283019655932542976)))) (x1688 x981 1461501637330902918203684832716283019655932542976) (x1527 x981 1461501637330902918203684832716283019655932542976) (x747 x981 1461501637330902918203684832716283019655932542976)))
(assert (= x3469 (x1991 (x1618 x3469))))
(assert (and (x2912 1000000000000000000 x1558) (x1712 1000000000000000000 x1558) (x804 1000000000000000000 x1558) (x3035 1000000000000000000 x1558) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1558) (- (* x1558 1000000000000000000) (* x1558 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1558 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x1558 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1558 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x1558 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x1558 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x1558) (= (* x1558 1000000000000000000) (x1801 1000000000000000000 x1558))))
(assert (x2421 x3161))
(assert (= (=> (and (= x1325 x3637) (= x2114 x2753)) x3051) x2086))
(assert (= (and x3810 (not x3260)) x65))
(assert (x2421 x666))
(assert (= x2447 (and (not x2723) x81)))
(assert (x2406 (- x3574 x106)))
(assert (=> (>= 10000 x3860) (= (x1618 x3860) (x2353 x3860))))
(assert (x2406 (- x1624 x2957)))
(assert (x216 x1033 (- x106 x3792)))
(assert (x2421 x3142))
(assert (= x3160 (and x1600 x3883)))
(assert (x2421 x3738))
(assert (x2421 x973))
(assert (x248 x2957 x3574 x3792 x3909))
(assert (x248 x1184 x3849 x106 x1395))
(assert (x304 x294 x77 x2823 x2957))
(assert (=> (>= 10000 x1868) (= (x2353 x1868) (x1618 x1868))))
(assert (= x1968 (or x2611 x3386)))
(assert (= (x1991 (x2353 1590201465)) 1590201465))
(assert (x2421 x1367))
(assert (x2421 x1033))
(assert (x2421 x3828))
(assert (x216 x2957 (- x3574 x1033)))
(assert (= x3169 (x1991 (x1618 x3169))))
(assert (x2098 x1087))
(assert (= x2206 (=> (and (= (x3783 (+ 4 x1435)) x1448) (= x3590 (= x1894 x2647)) (= x1280 (x3783 (+ 32 x1448)))) (and (=> (and x3590 (and (= x2384 x2326) (> x2161 0) (= x1456 (x3381 (- x369 4))) (= x2628 2835717307) (= x2161 (x1382 (x1618 x1894))) (= x685 (or (> x1456 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1456 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1456) true)))) (= 68 x369) (not (< x369 4)) (not (> 1466279372 x2628)) (= x981 x2129) (= x3478 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 2835717307 x2628)))) (and (=> (and (and (= (= x3296 x981) x3818) (= (x525 1461501637330902918203684832716283019655932542975 x981) x3296)) (not x685)) (and (=> (and x3818 (and (>= x3157 0) (<= x3157 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x2384 x3157) x2859) (= x3157 (x141 x3377)) (= (x2947 (x1618 x897) (x2353 1) 0) x3377) (= x1185 x2326))) (and (=> x2859 x2063) (=> (and (not x2859) (= x400 (> x2326 x3157))) (and (=> x400 x2063) (=> (and (and (<= x1926 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2941 (< x1726 x1926)) (= (x2927 x3256) x1926) (= (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2326)) x1726) (= x454 (x2947 (x1618 x897) (x2353 1) 0)) (>= x1926 0) (= (x2947 (x1618 x879) (x2353 1) 0) x3256) (= x3057 (x3381 (- x3157 x2326))) (= (x525 1461501637330902918203684832716283019655932542975 x2129) x879)) (not x400)) (and (=> x2941 x2063) (=> (and (and (= (< x3964 x1926) x3636) (= (x3783 (+ x2326 x1926)) x3964)) (not x2941)) (and (=> x3636 x2063) (=> (and (and (= (x525 1461501637330902918203684832716283019655932542975 x2129) x2651) (= x1077 32) (= x313 1)) (not x3636)) x993))))))))) (=> (not x3818) x2063))) (=> x685 x2063))) (=> (and (= x2007 (= x2647 x1937)) (not x3590)) (and (=> (and (and (= x981 x3583) (> 2929553584 x1633) (not (< x1633 2691771752)) (not (< x1633 2217467699)) (= x2588 (or (> x1115 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1115 64) (= (<= x1115 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= 68 x1573) (= x3742 (x1382 (x1618 x1937))) (not (= 2796547477 x1633)) (not (> 4 x1573)) (= (x3381 (- x1573 4)) x1115) (= 2835717307 x1633) (not (= x1633 2691771752)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x674) (> x3742 0) (= x1343 x2384)) x2007) (and (=> (and (and (= x3583 x1431) (= (= x981 x2415) x2176) (= x2415 (x525 1461501637330902918203684832716283019655932542975 x981))) (not x2588)) (and (=> (and (and (= x3003 (x3394 x2102)) (= x615 (< x3003 x2384)) (<= x3003 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3003 0) (= x3047 x1343) (= x2102 (x2947 (x1618 x897) (x2353 5) 0))) x2176) (and (=> x615 x3275) (=> (and (and (>= x608 0) (= (x2947 (x1618 x897) (x2353 5) 0) x3588) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x608) (= x3371 (> x1343 x608)) (= (x3394 x3588) x608)) (not x615)) (and (=> (and (not x3371) (and (= x3007 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1343))) (>= x637 0) (= (> x637 x3007) x3754) (<= x637 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3784 x3012) x637) (= x3012 (x2947 (x1618 x895) (x2353 5) 0)) (= (x525 1461501637330902918203684832716283019655932542975 x3583) x895) (= x3025 (x3381 (- x608 x1343))))) (and (=> (and (not x3754) (and (= (x3783 (+ x1343 x637)) x2919) (= x851 1) (= 1 x1434) (= 32 x2546))) x1129) (=> x3754 x3275))) (=> x3371 x3275))))) (=> (not x2176) x3275))) (=> x2588 x3275))) (=> (and (= x1600 (= x632 x2647)) (not x2007)) (and (=> (and (and (= x1665 (x1382 (x1618 x632))) (= x2893 (x3381 (- x3766 4))) (= 2835717307 x2531) (= x3944 x2384) (< x2531 2929553584) (not (= 2691771752 x2531)) (= x981 x183) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3945) (< 0 x1665) (= (or (> x2893 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x2893) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2893)))) x1867) (not (< x3766 4)) (= x3766 68) (not (> 2217467699 x2531)) (not (= x2531 2796547477)) (not (> 2691771752 x2531))) x1600) (and (=> x1867 x3425) (=> (and (not x1867) (and (= (= x981 x725) x3191) (= x1806 x183) (= x725 (x525 1461501637330902918203684832716283019655932542975 x981)))) (and (=> (not x3191) x3425) (=> (and x3191 (and (= (< x2831 x2384) x3929) (= x1079 x3944) (= x3761 (x2947 (x1618 x897) (x2353 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2831) (= (x1687 x3761) x2831) (>= x2831 0))) (and (=> x3929 x3425) (=> (and (and (= (x1687 x2564) x2829) (= x2564 (x2947 (x1618 x897) (x2353 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2829) (>= x2829 0) (= x1406 (> x3944 x2829))) (not x3929)) (and (=> (and (and (= x881 (x2947 (x1618 x3760) (x2353 5) 0)) (<= x3712 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3944)) x133) (= (x525 1461501637330902918203684832716283019655932542975 x183) x3760) (= (x3381 (- x2829 x3944)) x476) (= x3115 (< x133 x3712)) (= x3712 (x1903 x881)) (<= 0 x3712)) (not x1406)) (and (=> x3115 x3425) (=> (and (and (= 1 x507) (= x3385 32) (= (x3783 (+ x3944 x3712)) x1771) (= 1 x581)) (not x3115)) x2635))) (=> x1406 x3425))))))))) (=> (and (and (= (= x3860 x2647) x1936) (and (and (not (> 4 x876)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1288) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1288) true) (< x1288 64))) x956) (= x3725 x2384) (> 2929553584 x2234) (= x2234 2835717307) (not (= 2691771752 x2234)) (not (> 2691771752 x2234)) (= (x3381 (- x876 4)) x1288) (< 0 x2987) (not (< x2234 2217467699)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3464) (= x2987 (x1382 (x1618 x3860))) (= x981 x428) (not (= 2796547477 x2234)) (= x876 68)) x1936)) (not x1600)) (and (=> x956 x1368) (=> (and (not x956) (and (= x3145 x428) (= x1331 (x525 1461501637330902918203684832716283019655932542975 x981)) (= (= x1331 x981) x1764))) (and (=> (and (and (= x3865 x3725) (= x3103 (x1140 x3902)) (= x3902 (x2947 (x1618 x897) (x2353 5) 0)) (= x1050 (< x3103 x2384)) (<= 0 x3103) (<= x3103 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1764) (and (=> (and (and (= (< x2410 x3725) x2652) (<= 0 x2410) (= x2410 (x1140 x538)) (= x538 (x2947 (x1618 x897) (x2353 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2410)) (not x1050)) (and (=> x2652 x1368) (=> (and (and (= x1713 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3725))) (= (x2947 (x1618 x779) (x2353 5) 0) x3126) (= (x3381 (- x2410 x3725)) x932) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2827) (= (x525 1461501637330902918203684832716283019655932542975 x428) x779) (= x2126 (> x2827 x1713)) (>= x2827 0) (= (x3774 x3126) x2827)) (not x2652)) (and (=> x2126 x1368) (=> (and (and (= 1 x2740) (= x1458 1) (= x2389 32) (= (x3783 (+ x3725 x2827)) x2586)) (not x2126)) x2453))))) (=> x1050 x1368))) (=> (not x1764) x1368)))))))))))))
(assert (x2406 (- x3909 x2823)))
(assert (= (or x2607 x115) x1950))
(assert (= (x2353 2391746891) (x1618 2391746891)))
(assert (x2421 x3934))
(assert (x2421 x739))
(assert (= x1260 (and x2238 x733)))
(assert (x2421 x3615))
(assert (x2421 x3052))
(assert (x2421 x1690))
(assert (= x3887 (and x2277 (not x3580))))
(assert (x216 x3574 (- x2957 x2384)))
(assert (x216 x106 (- x1033 x2957)))
(assert (x2421 x1695))
(assert (x2421 x2216))
(assert (= (and x2045 (not x3850)) x2736))
(assert (x2421 x2224))
(assert (x2421 x2751))
(assert (= x2361 (and x3441 x2660)))
(assert (= (x1991 (x1618 x2405)) x2405))
(assert (=> (>= 10000 x2895) (= (x2353 x2895) (x1618 x2895))))
(assert (= x2277 (and (not x1929) x382)))
(assert (x2421 x1960))
(assert (= 89522461602318961266474185744428785802019839140862557341176434972013554040832 (x1991 (x2353 89522461602318961266474185744428785802019839140862557341176434972013554040832))))
(assert (= x3758 (=> (and (= x2981 (= 0 x2764)) (or x2981 (not x2981))) x2074)))
(assert (x2421 x688))
(assert (x2421 x2190))
(assert (x216 x3909 (- x3792 x106)))
(assert (x2421 x3007))
(assert (= x3406 (or x1583 x1119)))
(assert (= x3375 (and x2733 x2241)))
(assert (= (or x2221 x2344 x1069 x228 x3806 x2906) x2934))
(assert (x304 x3849 x1184 x3909 x3792))
(assert (x2421 x2119))
(assert (= (and x1461 (not x2272)) x315))
(assert (x304 x294 x77 x2384 x106))
(assert (x2421 x1039))
(assert (x304 x3792 x3909 x1033 x106))
(assert (x216 x3849 (- x1184 x2751)))
(assert (= (x1991 (x2353 2835717307)) 2835717307))
(assert (= (x1991 (x356 x409 1)) (+ 1 (x1991 x409))))
(assert (= x3087 (and x1965 (not x3567))))
(assert (= x580 (and x799 x1204)))
(assert (x2406 (- x2957 x294)))
(assert (= x1054 x251))
(assert (= (=> (and (= x867 (x2947 (x1618 x759) (x2353 159) 0)) (= (x2947 (x1618 x1973) x867 0) x3218) (= x759 (x525 1461501637330902918203684832716283019655932542975 x2746)) (= (< 0 x3670) x1158)) (and (=> (and x1158 (and (= (* x819 1000000000000000000) x292) (= (> x2185 0) x3983) (= x2678 x1375) (<= x1375 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2409 (* 1000000000000000000 x3670)) x819) (<= 0 x2263) (= (x785 x1836) x3978) (= x1944 (x3694 x1506)) (< (* 1000000000000000000 x819) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3263 x1058) (= x3228 (< 115792089237316195423570985008687907853269984665640564039457 x3670)) (= (x3413 x603 x2263) x2627) (= x603 (* 1000000000000000000 x2166)) (= (x356 x3362 2) x1836) (= (x3783 (+ 32 x326)) x2199) (= (+ x2678 x3473) x3624) (= (x356 x1836 1) x1506) (<= 0 x1058) (< (+ x1375 x1884) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x395 (ite x3228 1 0)) (= x1884 x147) (= x2166 (x2409 (* x3670 1000000000000000000))) (= (x3413 x2627 1000000000000000000) x1884) (>= x1375 0) (= x2720 (ite x3916 1 0)) (= x2597 (x356 x3427 3)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1944) (= (x2947 (x1618 x1386) (x2353 165) 0) x2100) (= x2804 (x3413 x292 x3792)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x2166 1000000000000000000)) (>= x1944 0) (> x3792 0) (= x3916 (< 115792089237316195423570985008687907853269984665640564039457 x3670)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3978) (= x395 0) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x1386) (= x1058 (x2583 x2597)) (= x2720 0) (= x913 (+ x3263 x147)) (= x2185 (x3413 x2804 1000000000000000000)) (= x1884 x3473) (= x1375 (x316 x3218)) (< 0 x2263) (= (x2958 x2100) x2263) (<= 0 x3978) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1058) (= (x2947 (x1618 x3622) (x2353 169) 0) x3427) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1884 x1058)) (= x3622 (x525 1461501637330902918203684832716283019655932542975 x2746)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2263))) (and (=> (and (and (= (= x1937 x2738) x2897) (= x3026 (x3381 (- x2392 x326))) (= x2392 (x3783 (+ 32 x928))) (= (x3783 (+ 4 x326)) x928) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x2738)) x3983) (and (=> (and x2897 (and (< 0 x1228) (= (or (and (< x2192 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2192))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2192)) x1362) (= (x3381 (- x740 4)) x2192) (= x740 36) (= (x1382 (x1618 x1937)) x1228) (= 989455977 x45) (> 1856199391 x45) (not (= 988262939 x45)) (not (< x45 988262939)) (= 26675680369413430104207330802600748686362808878094982966429686717365230764032 x102) (not (> 4 x740)) (= x897 x2171) (= x740 x3026) (< x45 2217467699))) (and (=> x1362 x244) (=> (and (not x1362) (and (= x2241 (= x897 x2171)) (= x3828 x2171))) (and (=> (not x2241) x244) (=> (and (and (= (x2947 (x1618 x2171) (x2353 5) 0) x366) (= x1217 32) (<= x2498 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2498 (x2331 x366)) (<= 0 x2498) (= x3794 1)) x2241) x3699))))) (=> (and (not x2897) (= (= x2738 x632) x3229)) (and (=> (and (and (and (and (not (< x381 4)) (= x2744 (or (and (= (<= x417 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x417)) (> x417 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (> 988262939 x1811)) (> 2217467699 x1811) (= x269 26675680369413430104207330802600748686362808878094982966429686717365230764032) (> x3084 0) (= x381 x3026) (= x1811 989455977) (= 36 x381) (= x897 x585) (< x1811 1856199391) (= (x3381 (- x381 4)) x417) (not (= x1811 988262939)) (= (x1382 (x1618 x3860)) x3084)) x1314) (= x1314 (= x2738 x3860))) (not x3229)) (and (=> (and (not x2744) (and (= (= x897 x585) x3192) (= x585 x308))) (and (=> (and (and (= (x2947 (x1618 x585) (x2353 5) 0) x2779) (= x3484 (x742 x2779)) (= x2292 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3484) (= 1 x961) (<= 0 x3484)) x3192) x3566) (=> (not x3192) x3959))) (=> x2744 x3959))) (=> (and (and (not (> 4 x3153)) (= 36 x3153) (= x897 x3899) (= x2948 (x1382 (x1618 x632))) (< x3724 2217467699) (not (= x3724 988262939)) (< 0 x2948) (= x3724 989455977) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2042) (and (< x2042 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2042)))) x1763) (not (> 988262939 x3724)) (= x3153 x3026) (= (x3381 (- x3153 4)) x2042) (= 26675680369413430104207330802600748686362808878094982966429686717365230764032 x2490) (> 1856199391 x3724)) x3229) (and (=> (and (and (= x3899 x3826) (= x1459 (= x897 x3899))) (not x1763)) (and (=> (not x1459) x3585) (=> (and x1459 (and (>= x3843 0) (<= x3843 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1284 1) (= x575 32) (= x423 (x2947 (x1618 x3899) (x2353 5) 0)) (= x3843 (x2910 x423)))) x3587))) (=> x1763 x3585))))))) (=> (and (and (= x2955 x3432) (= x3497 x2110) (= x3533 x3295) (= x3528 x326)) (not x3983)) x524))) (=> (and (and (= x326 x3053) (= x1746 x2955) (= x3497 x1210) (= x3295 x1698)) (not x1158)) x1671))) x486))
(assert (= (or x104 (and (not x1764) x1273) x2394 (and x956 x2324) (and x1050 x2168)) x2725))
(assert (x2421 x3214))
(assert (x2421 x2289))
(assert (x216 x106 (- x1395 x3574)))
(assert (= x3576 (and x2914 x247)))
(assert (x2421 x592))
(assert (x248 x106 x1033 x647 x1111))
(assert (x2421 x2173))
(assert (x216 x2751 (- x3185 x3849)))
(assert (= (and x1834 x2) x1627))
(assert (= (and (not x848) x3350) x591))
(assert (=> (<= x489 10000) (= (x2353 x489) (x1618 x489))))
(assert (x3448 x2067))
(assert (= (=> (and (and (<= x1373 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1230 (x356 x215 2)) (= x2050 (x356 x2949 2)) (= (x2947 (x1618 x50) (x2353 156) 0) x1245) (= (x2947 (x1618 x1658) (x2353 157) 0) x3889) (= x1373 (x522 x2050)) (<= 0 x3601) (= (x3647 x1689) x3601) (= x215 (x2947 (x1618 x1973) x1245 0)) (= x448 (< x2201 x1006)) (= x1658 (x525 1461501637330902918203684832716283019655932542975 x2746)) (<= x1006 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2605) (= x2605 (x1404 x1230)) (<= x3601 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x2605 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x2699) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x50) (= (x2947 (x1618 x2699) (x2353 159) 0) x319) (= x1689 (x2947 (x1618 x1973) x319 0)) (<= 0 x1373) (= (x543 x3912) x1006) (<= 0 x2201) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2201) (>= x1006 0) (= x3912 (x356 x1689 1)) (= x2949 (x2947 (x1618 x1973) x3889 0))) (or (and (= x771 0) (not x448)) (and (= x1006 x771) x448))) x2335) x101))
(assert (= x2966 (=> (and (or (not x1514) x1514) (= x1514 (= 0 x1723))) x1019)))
(assert (x2421 x3403))
(assert (x248 x2751 x3185 x3574 x2957))
(assert (x2406 (- x2823 x2222)))
(assert (x2421 x884))
(assert (= (and x3595 x3950) x1374))
(assert (= x526 (and x750 x3071)))
(assert (x2406 (- x2751 x1184)))
(assert (x2421 x2621))
(assert (= (and x1449 x2123) x3657))
(assert (= x551 (and x675 x1850)))
(assert (x216 x106 (- x1395 x3909)))
(assert (= x571 (and x2459 x1240)))
(assert (x2421 x3729))
(assert (x2421 x871))
(assert (= (and x702 x2237) x1369))
(assert (= (+ 2 (x1991 x910)) (x1991 (x356 x910 2))))
(assert (= (or x3836 x1232) x492))
(assert (= (and x1911 x1656) x3203))
(assert (x2421 x2741))
(assert (x248 x3792 x3909 x1033 x106))
(assert (x2421 x3433))
(assert (x2421 x831))
(assert (x248 x3849 x1184 x3185 x2751))
(assert (= (and (not x3304) x1900) x3686))
(assert (= x2704 (and x2502 x1789)))
(assert (x248 x647 x1111 x2823 x2957))
(assert (x304 x3185 x2751 x2823 x2957))
(assert (x2421 x1932))
(assert (x304 x1184 x3849 x3909 x3792))
(assert (x2421 x782))
(assert (x216 x2384 (- x106 x2823)))
(assert (x2421 x362))
(assert (x248 x3574 x2957 x2384 x106))
(assert (= (and x2117 (not x730)) x2680))
(assert (x304 x1624 x2222 x1395 x106))
(assert (x2421 x3409))
(assert (x248 x106 x2384 x1624 x2222))
(assert (x2421 x1264))
(assert (= x3131 (and x287 x334)))
(assert (= (+ 1 (x1991 x3259)) (x1991 (x356 x3259 1))))
(assert (x248 x647 x1111 x1033 x106))
(assert (= x1116 (and x2073 x2239)))
(assert (x304 x106 x1395 x3909 x3792))
(assert (x248 x106 x1033 x3574 x2957))
(assert (= (and x2674 x3897) x3001))
(assert (x3448 x3622))
(assert (x2421 x1723))
(assert (= (or x1425 x38 x1769 x2541 x554 x422) x2705))
(assert (= (+ (x1991 x2749) 1) (x1991 (x356 x2749 1))))
(assert (=> (>= 10000 x1973) (= (x1618 x1973) (x2353 x1973))))
(assert (x248 x2384 x106 x2957 x3574))
(assert (x248 x3574 x2957 x2222 x1624))
(assert (= x2677 (and x598 x2229)))
(assert (x2421 x2854))
(assert (x2421 x437))
(assert (x216 x2751 (- x3185 x1033)))
(assert (=> (<= x2373 10000) (= (x1618 x2373) (x2353 x2373))))
(assert (x216 x106 (- x2384 x3792)))
(assert (and (x3187 x1790 1000000000000000000) (x2566 x1790 1000000000000000000) (x878 x1790 1000000000000000000) (x3266 x1790 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x1790)) (and (>= x1790 (* 1000000000000000000 (x3413 x1790 1000000000000000000))) (> (* (x3413 x1790 1000000000000000000) 1000000000000000000) (- x1790 1000000000000000000))))))
(assert (x3448 x362))
(assert (x2421 x1482))
(assert (x2421 x2911))
(assert (= (=> (and (= x863 0) (= x2059 x500)) x3468) x2197))
(assert (x216 x2751 (- x3185 x106)))
(assert (x2406 x819))
(assert (x2421 x1294))
(assert (= (x1991 (x356 x2875 1)) (+ (x1991 x2875) 1)))
(assert (x2406 (- x1624 x1395)))
(assert (x304 x1184 x3849 x1111 x647))
(assert (x248 x3574 x2957 x2751 x3185))
(assert (x216 x2957 (- x3574 x2222)))
(assert (x248 x3849 x1184 x2957 x2823))
(assert (= x1083 (=> (= (< 0 x3640) x1638) (and (=> (and (and (and (= x2776 (x3046 x2362)) (= (x356 x1443 1) x570) (= x2109 (x2947 (x1618 x1327) x1443 0)) (= x2362 (x356 x2109 2)) (<= 0 x479) (>= x2776 0) (not (= x1327 0)) (>= 1461501637330902918203684832716283019655932542975 x479) (> 1461501637330902918203684832716283019655932542976 x479) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3905) (>= x3905 0) (= x640 (ite (< 0 x3905) (not (= 0 x479)) (< 0 x3905))) (= x2776 0) (= x479 (x2632 x570)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2776)) (or (and (and (= x3297 (x3046 x3395)) (>= x3297 0) (= x948 (not x3232)) (= x3336 (x2947 (x1618 x479) x1443 0)) (= (x356 x3336 2) x3395) (= x3232 (< x3297 x3640)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3297)) x640) (and (not x640) (= x948 x640)))) x1638) x199) (=> (and (not x1638) (= x3613 x3671)) x44)))))
(assert (x248 x1184 x3849 x2823 x2957))
(assert (x2421 x2259))
(assert (= (or x2847 x1092) x2709))
(assert (= (or x327 x1383) x511))
(assert (x2406 (- x2384 x2222)))
(assert (x2421 x2537))
(assert (= (=> (and (= x1720 (x356 x938 1)) (= (x356 x181 1) x938) (= x1560 x965) (= x119 x1973) (= x181 (x2947 (x1618 x1973) x3889 0))) x3732) x2270))
(assert (x2421 x588))
(assert (x2421 x2217))
(assert (x2421 x3104))
(assert (x2421 x1746))
(assert (= (x1991 (x356 x3788 2)) (+ 2 (x1991 x3788))))
(assert (x2421 x609))
(assert (x2421 x2935))
(assert (= (=> (= x3613 x2670) x44) x201))
(assert (x2421 x403))
(assert (= x985 (or x1241 x626 x2976 x1344 x882)))
(assert (x2421 x3114))
(assert (x216 x3792 (- x3909 x1184)))
(assert (x2406 x809))
(assert (x2421 x1698))
(assert (x2421 x2166))
(assert (x1192 x2746))
(assert (= (or x1552 x937) x66))
(assert (x2421 x965))
(assert (x2421 x572))
(assert (x2421 x1842))
(assert (x248 x106 x2384 x1033 x106))
(assert (= x3379 (and x3971 x1073)))
(assert (x2421 x2647))
(assert (= x2423 (and (not x1701) x1928)))
(assert (= x3051 (=> (and (or x1710 (not x1710)) (= (= x3637 0) x1710)) x813)))
(assert (= x3391 (and (not x1158) x1631)))
(assert (x216 x3185 (- x2751 x2823)))
(assert (x2421 x1041))
(assert (x248 x3849 x1184 x3792 x3909))
(assert (x248 x1624 x2222 x3574 x2957))
(assert (x2421 x2868))
(assert (x2609 x3939))
(assert (x2421 x2193))
(assert (= (and x2085 x2482) x786))
(assert (= (or (and x95 (not x912)) x264) x2368))
(assert (x2406 (- x647 x1624)))
(assert (= x1570 (and x1502 (not x404))))
(assert (= x3430 (and x189 x635)))
(assert (x2421 x569))
(assert (x248 x2384 x106 x3849 x1184))
(assert (= x1505 (and x2053 (not x1160))))
(assert (x248 x77 x294 x1184 x3849))
(assert (x2421 x1148))
(assert (= x3361 (or x3271 x1623 x2641 x1142 x984 x749)))
(assert (x2421 x1179))
(assert (x2421 x2415))
(assert (x2421 x3369))
(assert (x2421 x3128))
(assert (x2421 x3768))
(assert (x2406 (- x2823 x3909)))
(assert (= (x1991 (x1618 x1507)) x1507))
(assert (= (x1991 (x1618 x2280)) x2280))
(assert (x2421 x3445))
(assert (= (or x5 x1619) x3197))
(assert (= x2068 (and x1272 x3371)))
(assert (x216 x77 (- x294 x1184)))
(assert (= (=> (and (= x1336 (x356 x3207 1)) (= (x2947 (x1618 x1327) x218 0) x3207) (= x2478 (x356 x1336 1)) (= x3028 x2301)) x3498) x388))
(assert (x3448 x536))
(assert (=> (>= 10000 x1327) (= (x1618 x1327) (x2353 x1327))))
(assert (= (and x3745 x1786) x3958))
(assert (x304 x3792 x3909 x2222 x1624))
(assert (x2406 (- x2222 x2957)))
(assert (= (and x3431 x3632) x949))
(assert (= x3853 x241))
(assert (x2609 x3058))
(assert (x3448 x2968))
(assert (x3448 x3623))
(assert (x2421 x1442))
(assert (= x3556 (and x735 x994)))
(assert (= x1365 (=> (and (= x3830 x173) (= x1509 x1562)) x295)))
(assert (= x41 (and x2020 (not x2754))))
(assert (x2406 (- x1111 x2222)))
(assert (x2406 x1624))
(assert (x216 x1033 x106))
(assert (x248 x106 x2384 x3574 x2957))
(assert (x2406 (- x1395 x1184)))
(assert (x2421 x3981))
(assert (x2421 x781))
(assert (x2421 x783))
(assert (= (and x492 (not x2458)) x889))
(assert (x3448 x2924))
(assert (= x1064 (and x2019 (not x3524))))
(assert (= (and x523 (not x1907)) x3898))
(assert (x2421 x3385))
(assert (x2421 x1206))
(assert (x2421 x1101))
(assert (x2421 x1704))
(assert (x2421 x428))
(assert (x2406 (- x106 x2957)))
(assert (= x2309 (and x2858 x1807)))
(assert (= (and (not x3200) x1191) x1232))
(assert (x2421 x2352))
(assert (= x3323 (=> (and (or (and (and (= (x3413 x3803 1000000000000000000) x1414) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1801 x2384 x106)) (= (x1801 x2384 x106) x3803) (= x574 x1679) (= x2494 x325) (= x134 x160) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x160 x1414)) (= (+ x134 x305) x2494) (= x305 x1414)) (not x1084)) (and x1084 (and (= x160 x325) (= x574 x1679)))) (and (= x1395 (+ x3463 x2886)) (= (x3783 (+ x2868 x2148)) x1997) (= x2631 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2917))) (= (x1801 x1395 x106) x463) (= x2917 (x3413 x2286 1000000000000000000)) (= x2710 x160) (= (x1801 x77 x294) x1172) (= x294 (x2977 x2148)) (= x3463 x364) (not (< x1179 0)) (= x3466 (x3413 x28 1000000000000000000)) (= (x525 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3939) x2868) (< (x1801 x77 x294) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2886 x3466) (not (or (> x1535 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1535 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1535)))) (= x2917 x574) (= x1179 (x3381 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2710))) (= (x3381 (- x817 x3174)) x12) (= x817 (x525 1461501637330902918203684832716283019655932542975 x2746)) (not (> 0 x2631)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1801 x3185 x2751)) (<= x2751 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2710 (x3413 x463 1000000000000000000)) (= x2751 (x2958 x1876)) (= x3939 (x3783 (+ x1535 31))) (= (> x12 0) x1084) (= x1876 (x2947 (x1618 x3174) (x2353 165) 0)) (>= x2751 0) (not (= x968 0)) (< (x1801 x1111 x647) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2286 (x1801 x1111 x647)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x364 x3466)) (= x364 (x3413 x1172 1000000000000000000)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1801 x1395 x106)) (= (x1801 x3185 x2751) x28))) x2282)))
(assert (= x1262 (and (not x1604) x3019)))
(assert (= (and (not x1159) x1068) x2160))
(assert (x2421 x1366))
(assert (x2406 (- x2384 x3909)))
(assert (x2406 (- x1111 x3792)))
(assert (x304 x3909 x3792 x1111 x647))
(assert (x2421 x2985))
(assert (x216 x106 (- x2384 x3185)))
(assert (x2421 x3319))
(assert (x248 x1184 x3849 x2384 x106))
(assert (= (and x1461 x2272) x3811))
(assert (x2421 x2890))
(assert (x2421 x2367))
(assert (= x3757 (and (not x447) x158)))
(assert (= (and x2188 x3192) x2847))
(assert (= (x1991 (x2353 2234127075)) 2234127075))
(assert (= (x1991 (x1618 x178)) x178))
(assert (x2421 x892))
(assert (x216 x2384 (- x106 x3792)))
(assert (= (and x723 x2328) x1000))
(assert (= x3932 (and x3565 x690)))
(assert (= x1607 (not (and (<= 0 x2381) (= (x1962 x2062) x2381) (> 1461501637330902918203684832716283019655932542976 x2381) (= x2062 (x356 x1933 1)) (= (x2947 (x1618 x2810) x1245 0) x1933) (<= x2381 1461501637330902918203684832716283019655932542975)))))
(assert (x248 x3792 x3909 x2751 x3185))
(assert (x216 x1395 (- x106 x1033)))
(assert (= x3027 (or x3086 (and x2696 (not x3191)) x1864 (and x3929 x2346) (and x1867 x3160))))
(assert (x248 x1624 x2222 x1395 x106))
(assert (x2421 x1185))
(assert (= x2783 (and (not x2634) x22)))
(assert (= x426 (or x902 (and x2803 (not x2981)))))
(assert (x304 x1111 x647 x2823 x2957))
(assert (x2421 x3936))
(assert (= (x1991 (x1618 x1611)) x1611))
(assert (x2421 x3133))
(assert (x248 x106 x2384 x106 x1395))
(assert (x2406 x294))
(assert (x2421 x2268))
(assert (x2421 x3469))
(assert (x2421 x1307))
(assert (x248 x77 x294 x2222 x1624))
(assert (x2421 x3943))
(assert (= x440 (and x2266 (not x2008))))
(assert (=> (<= x2812 10000) (= (x1618 x2812) (x2353 x2812))))
(assert (= (and x1943 x3693) x135))
(assert (x2421 x1958))
(assert (and (=> (> 32 0) (= x3058 (+ (* 32 (x3413 x3058 32)) (x2732 x3058 32)))) (x1688 x3058 32) (x1527 x3058 32) (x747 x3058 32)))
(assert (= x3341 (and x1896 x184)))
(assert (x2421 x2179))
(assert (= (and x260 x866) x951))
(assert (= (and (not x3156) x2814) x1344))
(assert (= x438 (and x3062 x1350)))
(assert (x2421 x1139))
(assert (x2421 x275))
(assert (= x355 (and x3577 x1072)))
(assert (x2421 x1588))
(assert (x2421 x2076))
(assert (x2421 x3986))
(assert (= (=> (and (= 0 x1661) (= x1574 x483)) x3465) x795))
(assert (x2421 x2878))
(assert (x2406 (- x3792 x1624)))
(assert (= (or x2097 x2307) x3454))
(assert (x2421 x810))
(assert (x2421 x1524))
(assert (x248 x2751 x3185 x3849 x1184))
(assert (= (x1991 (x356 x3422 1)) (+ (x1991 x3422) 1)))
(assert (= (and x1334 x3155) x2461))
(assert (x2421 x2114))
(assert (= (and x1084 x3055) x139))
(assert (x2421 x3930))
(assert (= (x1991 (x1618 x903)) x903))
(assert (= x1092 (or (and (not x3192) x2188) (and x363 x2744))))
(assert (x2421 x1804))
(assert (and (=> (> 32 0) (= x1605 (+ (* 32 (x3413 x1605 32)) (x2732 x1605 32)))) (x1688 x1605 32) (x1527 x1605 32) (x747 x1605 32)))
(assert (x2421 x1431))
(assert (x1526 x428))
(assert (= (and (not x3274) x15) x1786))
(assert (= x1157 (=> (and (= x3306 (x2947 (x1618 x1507) x1317 0)) (= x35 (x356 x2015 1)) (= x2015 (x356 x3306 1))) x906)))
(assert (x3448 x2792))
(assert (x216 x106 (- x1395 x3849)))
(assert (= x3781 (or x1716 x3361)))
(assert (x2421 x3637))
(assert (x248 x647 x1111 x3909 x3792))
(assert (x2406 (- x2957 x77)))
(assert (x2421 x353))
(assert (x216 x3574 (- x2957 x77)))
(assert (x248 x3185 x2751 x2957 x2823))
(assert (x2421 x3584))
(assert (x2421 x928))
(assert (= (or x2841 x1556) x2777))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x3939 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3413 x3939 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2732 x3939 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1688 x3939 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1527 x3939 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x747 x3939 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x304 x1111 x647 x1033 x106))
(assert (= x1603 (and x268 x1200)))
(assert (x2609 x3123))
(assert (=> (<= x2280 10000) (= (x1618 x2280) (x2353 x2280))))
(assert (= (x1618 1865448899) (x2353 1865448899)))
(assert (x248 x2823 x2957 x106 x2384))
(assert (and (x3187 x28 1000000000000000000) (x2566 x28 1000000000000000000) (x878 x28 1000000000000000000) (x3266 x28 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x28)) (and (>= x28 (* 1000000000000000000 (x3413 x28 1000000000000000000))) (> (* (x3413 x28 1000000000000000000) 1000000000000000000) (- x28 1000000000000000000))))))
(assert (= x3273 (and x2254 (not x1613))))
(assert (x2421 x2753))
(assert (= (=> (and (= x3528 x3053) (= x1698 x3533) (= x1746 x3432) (= x2110 x1210)) x1671) x524))
(assert (x2421 x1075))
(assert (x2421 x458))
(assert (x2421 x1562))
(assert (x2406 (- x106 x1624)))
(assert (= (and (not x3656) x3273) x2348))
(assert (x3448 x1519))
(assert (x2421 x368))
(assert (x248 x3185 x2751 x1184 x3849))
(assert (= (=> (and (or (and (and x3328 (= x1114 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1870 x684))) (<= 0 x2698) (not (= x2568 0)) (= (x2508 (x1618 x2698)) x3022) (> 4294967296 x2174) (= x2568 (x1382 (x1618 x2698))) (> 1461501637330902918203684832716283019655932542976 x2698) (= x3268 (x1994 (x1618 x897))) (= (- x3951 x1870) x1757) x1114 (= x684 (x1994 (x1618 x2698))) (< (+ x1870 x3022) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x3783 (+ x3022 x1870)) x3288) (<= x2698 1461501637330902918203684832716283019655932542975) (= (x1994 (x1618 x897)) x3951) (= x3328 (>= x3268 x1870))) (not x2322)) x2322) (and (= 0 x1309) (<= 0 x1367) (< x1367 1461501637330902918203684832716283019655932542976) (not (or (> x206 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x206) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x206))))) (= x333 (x3783 (+ 31 x206))) (= (> x2441 0) x2322) (= x1309 (x2402 x3142)) (not (= 0 x3216)) (= x758 (x525 115792089237316195423570985008687907853269984665640564039457584007913129639904 x333)) (>= 1461501637330902918203684832716283019655932542975 x1367) (= x2378 (x525 1461501637330902918203684832716283019655932542975 x2746)) (= x1827 (x3783 (+ x3142 x758))) (= x2441 (x3381 (- x2378 x1367))))) x836) x619))
(assert (x2421 x788))
(assert (x248 x3185 x2751 x2384 x106))
(assert (x2421 x2955))
(assert (= x3895 (and x1637 (not x3639))))
(assert (x2421 x2296))
(assert (x248 x106 x2384 x3185 x2751))
(assert (x3017 x3679 x2057))
(assert (= x2168 (and x1764 x1273)))
(assert (x2421 x725))
(assert (x2421 x154))
(assert (= x3610 (=> (and (= x3357 (x2947 (x1618 x1327) x1443 0)) (= (x356 x3814 1) x314) (= x3671 x1021) (= x3814 (x356 x3357 1))) x1083)))
(assert (x216 x106 (- x1033 x1395)))
(assert (x2421 x2358))
(assert (x2609 x3470))
(assert (= (x1618 2281136899) (x2353 2281136899)))
(assert (x248 x2222 x1624 x3792 x3909))
(assert (x248 x77 x294 x3792 x3909))
(assert (= (+ 2 (x1991 x1450)) (x1991 (x356 x1450 2))))
(assert (= x623 (=> (= x3175 x1930) x2794)))
(assert (x248 x2823 x2957 x2384 x106))
(assert (x2421 x3484))
(assert (= (x1991 (x1618 x3234)) x3234))
(assert (x2421 x2792))
(assert (x2421 x1771))
(assert (x3448 x416))
(assert (x2421 x2128))
(assert (x2421 x3335))
(assert (x2421 x3206))
(assert (x248 x106 x1395 x3849 x1184))
(assert (x248 x1624 x2222 x294 x77))
(assert (x248 x1033 x106 x2751 x3185))
(assert (= x644 (and x1322 (not x2434))))
(assert (x2421 x2833))
(assert (=> (<= x2968 10000) (= (x2353 x2968) (x1618 x2968))))
(assert (x2421 x384))
(assert (= (x1618 1475734106) (x2353 1475734106)))
(assert (x304 x2384 x106 x1033 x106))
(assert (= x1964 (and (=> (and (= x3850 (= x1070 0)) x741) (and (=> (and (and (or (and x11 (and (not (> 4 x3598)) (= x3302 x3598) (= x847 (x1382 (x1618 x1937))) (not (< x446 405663989)) (= x446 405663989) (= 4 x3598) (< x446 988262939) (> x847 0) (= 1 x1041) (= x3144 10936679508223583803006762266923565500374401145016910147028117655998246682624) (= 32 x2041) (< x446 2217467699))) (and (not x11) (and (or (and x2839 (and (not (< x3220 4)) (= x3220 x3302) (= 32 x2041) (= x3204 405663989) (< x3204 988262939) (= 4 x3220) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x1205) (= x402 (x1382 (x1618 x632))) (< 0 x402) (not (> 405663989 x3204)) (= x1041 1) (< x3204 2217467699))) (and (not x2839) (and (and (and (= (x1382 (x1618 x3860)) x2267) (= x3302 x2972) (> x2267 0) (= x3387 405663989) (> 2217467699 x3387) (= x1041 1) (not (> 405663989 x3387)) (not (> 4 x2972)) (< x3387 988262939) (= 32 x2041) (= x1606 10936679508223583803006762266923565500374401145016910147028117655998246682624) (= x2972 4)) x3789) (= x3789 (= x3181 x3860))))) (= (= x3181 x632) x2839)))) (and (= x11 (= x1937 x3181)) (= (x3783 (+ 160 x1049)) x261) (= 4 x3302) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x3181))) (not x3850)) x1630) (=> (and x3850 (and (= 0 x3888) (= x755 x1049))) x2375))) (=> (and (not x741) (and (= x326 x1049) (= x3670 x2548) (= x3720 x1870))) x486))))
(assert (= (+ x3986 (x1991 x3452)) (x1991 (x356 x3452 x3986))))
(assert (x2421 x69))
(assert (x216 x2751 (- x3185 x3909)))
(assert (x2421 x3790))
(assert (x2421 x175))
(assert (x2406 (- x77 x3792)))
(assert (x216 x3849 (- x1184 x294)))
(assert (x2421 x2087))
(assert (x2406 (- x2384 x3849)))
(assert (x2421 x2691))
(assert (= (and x1706 x2572) x1647))
(assert (x2406 (- x2222 x2823)))
(assert (x304 x1184 x3849 x77 x294))
(assert (= (x1618 94482241256677223720308674365448432550660581809977780367718865401173155774464) (x2353 94482241256677223720308674365448432550660581809977780367718865401173155774464)))
(assert (x1177 x2347 x2320))
(assert (x3313 x3583))
(assert (=> (<= x1881 10000) (= (x2353 x1881) (x1618 x1881))))
(assert (x2421 x3134))
(assert (x3313 x2746))
(assert (= x883 (and x3077 (not x1582))))
(assert (x2421 x1744))
(assert (x2421 x1576))
(assert (x2421 x1674))
(assert (x216 x1624 (- x2222 x2384)))
(assert (x304 x3792 x3909 x2384 x106))
(assert (= x1864 (and x3115 x2233)))
(assert (x216 x3574 (- x2957 x106)))
(assert (x2421 x1056))
(assert (x2421 x874))
(assert (x3448 x2171))
(assert (x248 x3792 x3909 x1624 x2222))
(assert (x2421 x982))
(assert (x304 x106 x1395 x2823 x2957))
(assert (x2421 x2994))
(assert (x2421 x2492))
(assert (x2421 x3262))
(assert (x2421 x3383))
(assert (= (and x732 x1138) x1928))
(assert (x2421 x507))
(assert (= (or x2413 x1212 x3406 x663) x3414))
(assert (= (x2353 2234127075) (x1618 2234127075)))
(assert (x3448 x1065))
(assert (x2421 x2672))
(assert (= x3009 false))
(assert (x2421 x2891))
(assert (x1177 x603 x2263))
(assert (x2421 x2884))
(assert (x2421 x3579))
(assert (= x2433 (and x1554 x997)))
(assert (= (and x2313 (not x3636)) x1300))
(assert (= x2125 (x1991 (x1618 x2125))))
(assert (x248 x2823 x2957 x2222 x1624))
(assert (= (and x1274 (not x2581)) x1556))
(assert (= x669 (=> (and (= x3068 x240) (= x3496 0)) x259)))
(assert (x1192 x3058))
(assert (and (x3187 x2286 1000000000000000000) (x2566 x2286 1000000000000000000) (x878 x2286 1000000000000000000) (x3266 x2286 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x2286)) (and (>= x2286 (* 1000000000000000000 (x3413 x2286 1000000000000000000))) (> (* (x3413 x2286 1000000000000000000) 1000000000000000000) (- x2286 1000000000000000000))))))
(assert (x2421 x1767))
(assert (= (x2353 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1618 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (x1991 (x1618 x1316)) x1316))
(assert (x216 x647 (- x1111 x1184)))
(assert (= (and x1017 (not x840)) x382))
(assert (= (and x2511 (not x3488)) x3901))
(assert (x2406 (- x1624 x106)))
(assert (x2421 x1973))
(assert (x2421 x699))
(assert (= (x1991 (x2353 50292402827334880472107169365697159231523039388532301717704428044325102813184)) 50292402827334880472107169365697159231523039388532301717704428044325102813184))
(assert (x2421 x2682))
(assert (=> (>= 10000 x779) (= (x2353 x779) (x1618 x779))))
(assert (= x801 (and x2461 x3517)))
(assert (= x1202 (and x2777 (not x2970))))
(assert (= x1503 (and (not x1102) x1391)))
(assert (x248 x3909 x3792 x106 x1033))
(assert (x248 x2384 x106 x294 x77))
(assert (= (=> (and (or x1582 (and (not x1582) (and (> 4294967296 x2806) (not (= x2184 0)) (= x2184 (x1382 (x1618 x3188))) (< x3188 1461501637330902918203684832716283019655932542976) (= (x3783 (+ x1478 4)) x936) (>= 1461501637330902918203684832716283019655932542975 x3188) (<= 0 x3188) (= x1354 (x3783 (+ 32 x3383))) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x33) (= x3383 (x3783 (+ 32 x936)))))) (and (> 1461501637330902918203684832716283019655932542976 x3188) (>= 1461501637330902918203684832716283019655932542975 x3188) (= x1582 (= 0 x3188)) (<= 0 x3188))) x185) x1634))
(assert (and (=> (> 32 0) (= x3123 (+ (* 32 (x3413 x3123 32)) (x2732 x3123 32)))) (x1688 x3123 32) (x1527 x3123 32) (x747 x3123 32)))
(assert (x3313 x2129))
(assert (= x3648 (=> (and (or (and (= 0 x1817) (not x3639)) (and x3639 (= x1817 x719))) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2201) (= x3639 (> x719 x2201)) (>= x2201 0))) x270)))
(assert (x2421 x2740))
(assert (x2421 x1602))
(assert (x2421 x3905))
(assert (x216 x3792 (- x3909 x2957)))
(assert (= x3019 (and (not x2359) x3831)))
(assert (x2421 x1211))
(assert (x2421 x3733))
(assert (= (or x25 x1969) x2412))
(assert (x2421 x3254))
(assert (= x3824 (or x1908 x1521 x2361)))
(assert (= x723 (and x1298 (not x772))))
(assert (x2421 x1776))
(assert (=> (<= x879 10000) (= (x1618 x879) (x2353 x879))))
(assert (x248 x3792 x3909 x106 x2384))
(assert (= x1581 (and x3107 x1626)))
(assert (x2421 x3638))
(assert (x248 x2823 x2957 x106 x1395))
(assert (= x2073 (or x3541 x2026)))
(assert (= x2099 (and x1339 (not x3149))))
(assert (x2421 x3095))
(assert (x2421 x1971))
(assert (x2421 x1237))
(assert (x2421 x643))
(assert (= (and (not x1398) x1074) x3649))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x333 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3413 x333 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2732 x333 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1688 x333 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1527 x333 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x747 x333 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x304 x2823 x2957 x1395 x106))
(assert (x248 x106 x1033 x2823 x2957))
(assert (x2421 x3185))
(assert (x2421 x2164))
(assert (= x2051 (or x2309 x2802)))
(assert (= (x1991 (x356 x1625 2)) (+ 2 (x1991 x1625))))
(assert (x2406 (- x3792 x2823)))
(assert (= (=> (and (= x2633 x2052) (= x3747 x1548)) x46) x645))
(assert (x216 x2823 (- x2957 x647)))
(assert (= (or x3359 x2439) x3428))
(assert (x2421 x3392))
(assert (= x1737 (=> (and (= x1539 x3830) (= 0 x1562)) x1365)))
(assert (x2406 (- x2751 x3574)))
(assert (x2421 x3322))
(assert (x216 x2384 (- x106 x1624)))
(assert (x2421 x2804))
(assert (x2421 x1205))
(assert (= x270 (=> (= (= x1817 x2131) x3542) (and (=> (and (= (> x2131 0) x1352) (not x3542)) (and (=> (and x1352 (and (or (and (= x625 (x356 x218 1)) x868) (and (and (= (x356 x2749 1) x1090) (= x2749 (x2947 (x1618 x2484) x218 0))) (not x868))) (and (>= x2424 0) (not (= x2424 0)) (= x1922 (x356 x1795 1)) (= x868 (= x2484 0)) (= x2424 (x2483 x2094)) (= (x2656 x1922) x1285) (<= x2484 1461501637330902918203684832716283019655932542975) (= x3028 (x3783 (+ 96 x1839))) (>= 1461501637330902918203684832716283019655932542975 x1285) (= x1795 (x2947 (x1618 x1327) x218 0)) (= x2484 (x1815 x1795)) (> 1461501637330902918203684832716283019655932542976 x2484) (= (x356 x1922 1) x2094) (>= x2484 0) (> 1461501637330902918203684832716283019655932542976 x1285) (<= x2424 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1285 0)))) x335) (=> (and (not x1352) (= x2301 x1839)) x3498))) (=> (and (= x1839 x1478) x3542) x1634)))))
(assert (= x3701 (and x2660 (not x3441))))
(assert (x3448 x479))
(assert (= (and x3737 (not x3665)) x3891))
(assert (= x870 (and x1808 x2835)))
(assert (x2406 (- x2384 x294)))
(assert (= (and x2434 x1322) x2252))
(assert (x2421 x2161))
(assert (= (+ 1 (x1991 x3684)) (x1991 (x356 x3684 1))))
(assert (x304 x2957 x2823 x1395 x106))
(assert (= (=> (and (and (= (x6 x261) x2957) (= x3195 (x3783 (+ x261 x484))) (= (x3783 (+ 31 x2041)) x1934) (= x2451 (> x3720 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2179) (<= 0 x2179) (= x3475 (x2947 (x1618 x3324) (x2353 164) 0)) (not (= x1041 0)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2041) (and (= true (<= x2041 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2041 32)))) (= x484 (x525 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1934)) (= x3324 (x525 1461501637330902918203684832716283019655932542975 x2746)) (= x2179 (x964 x3475))) (or (and (and (= (x2181 x1278) x1381) (>= 1461501637330902918203684832716283019655932542975 x1381) (= x1736 (x525 1461501637330902918203684832716283019655932542975 x2746)) (<= 0 x1381) (= x3740 (not x3801)) (= (x2947 (x1618 x1736) (x2353 155) 0) x3684) (= x1327 x1381) (= (= 0 x1381) x3801) (= (x356 x3684 1) x1278) (> 1461501637330902918203684832716283019655932542976 x1381)) x2451) (and (not x2451) (and (= 0 x1327) (= x2451 x3740))))) x3471) x1630))
(assert (= (and (=> (and (not x2391) (and (= 1 x1452) (= x1170 x362))) x109) (=> (and (and (= x1170 x1868) (= x2662 x1791) (= x218 x3808)) x2391) x3635)) x1629))
(assert (= x3442 (or x2832 x883)))
(assert (x216 x3574 (- x2957 x1033)))
(assert (x2421 x1736))
(assert (x216 x647 (- x1111 x2823)))
(assert (x2421 x3537))
(assert (x2421 x2175))
(assert (x1389 x658 x1036))
(assert (x2406 (- x106 x2751)))
(assert (x2406 (- x3909 x77)))
(assert (x2421 x2417))
(assert (x216 x294 (- x77 x2384)))
(assert (= x931 (or x3364 x2771 x2338 x3257)))
(assert (= x3202 (=> (and (= x2036 0) (= x2323 x1574)) x1224)))
(assert (= 1000000000000000000 (x1991 (x2353 1000000000000000000))))
(assert (x248 x2384 x106 x106 x1395))
(assert (x304 x106 x2384 x2222 x1624))
(assert (x2421 x2298))
(assert (x2421 x3925))
(assert (= (=> (and (= x343 x2292) (= 0 x961)) x3566) x3959))
(assert (x216 x1033 (- x106 x2751)))
(assert (x2406 (- x2823 x77)))
(assert (x2406 (- x1111 x106)))
(assert (x2421 x3411))
(assert (x216 x1111 (- x647 x2957)))
(assert (= x2714 (or x3510 x703)))
(assert (= (x1991 (x356 x832 1)) (+ 1 (x1991 x832))))
(assert (x2421 x3038))
(assert (x304 x1624 x2222 x77 x294))
(assert (= (x1618 2835717307) (x2353 2835717307)))
(assert (x2421 x2198))
(assert (x2421 x1914))
(assert (x2421 x2387))
(assert (= x3006 (and (not x231) x751)))
(assert (x216 x294 (- x77 x1624)))
(assert (= (and x3702 (not x3037)) x2262))
(assert (= x2491 (and x3431 (not x3632))))
(assert (x2421 x2301))
(assert (x2406 (- x3574 x77)))
(assert (x216 x3574 (- x2957 x3849)))
(assert (= (and x1928 x1701) x1136))
(assert (x2406 (- x2823 x1111)))
(assert (x248 x294 x77 x1184 x3849))
(assert (x2421 x3791))
(assert (x2406 (- x1395 x2957)))
(assert (x2406 (- x3185 x2384)))
(assert (= (and x1421 x697) x2876))
(assert (x2421 x1173))
(assert (x2421 x1949))
(assert (x2421 x1399))
(assert (= (and x2486 x124) x1485))
(assert (x304 x1624 x2222 x3909 x3792))
(assert (x2421 x2531))
(assert (= (x1618 10936679508223583803006762266923565500374401145016910147028117655998246682624) (x2353 10936679508223583803006762266923565500374401145016910147028117655998246682624)))
(assert (= x1043 (and x872 x2872)))
(assert (x2406 x3849))
(assert (x304 x3849 x1184 x2384 x106))
(assert (= x3641 (x1991 (x1618 x3641))))
(assert (= (or x401 x3358) x3211))
(assert (x2406 (- x2222 x3909)))
(assert (= (x1991 (x356 x1922 1)) (+ (x1991 x1922) 1)))
(assert (x2421 x611))
(assert (x2421 x1215))
(assert (= x2019 (and (not x189) x635)))
(assert (= (=> (and (and (= x3485 0) (< x1367 1461501637330902918203684832716283019655932542976) (not (or (and (> 32 x413) (= (<= x413 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x413))) (= x1859 (x525 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3058)) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x1517) (<= 0 x1367) (= (x3381 (- x1517 x1367)) x3707) (= x3058 (x3783 (+ x413 31))) (= (x1007 x1194) x3485) (>= 1461501637330902918203684832716283019655932542975 x1367) (= (> x3707 0) x3906) (= x118 (x3783 (+ x1859 x1194))) (not (= 0 x811))) (or (and (and x3838 (= x136 (<= x904 x3549)) (= x3176 (x925 (x1618 x2698))) (>= x2698 0) (not (= x371 0)) (= (x2149 (x1618 x897)) x3768) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1238 x904)) x3838) (= (- x3768 x904) x1357) (< (+ x904 x3176) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3549 (x2149 (x1618 x897))) (<= x2698 1461501637330902918203684832716283019655932542975) (= x3135 (x3783 (+ x904 x3176))) (= x371 (x1382 (x1618 x2698))) (> 4294967296 x130) x136 (= (x2149 (x1618 x2698)) x1238) (< x2698 1461501637330902918203684832716283019655932542976)) (not x3906)) x3906)) x2576) x374))
(assert (x2421 x2055))
(assert (x2421 x3355))
(assert (x2421 x325))
(assert (x304 x2823 x2957 x2384 x106))
(assert (= (and x3657 x1029) x983))
(assert (x216 x2222 (- x1624 x106)))
(assert (x2098 x1172))
(assert (= x1468 (and x1924 (not x1780))))
(assert (x248 x2957 x3574 x647 x1111))
(assert (x3448 x2698))
(assert (x2421 x519))
(assert (x216 x77 (- x294 x106)))
(assert (x3448 x2746))
(assert (=> (>= 10000 x1519) (= (x2353 x1519) (x1618 x1519))))
(assert (= (and x741 x2622) x2045))
(assert (x2098 x2804))
(assert (= (or x1 x1758) x950))
(assert (x3448 x834))
(assert (x248 x3909 x3792 x77 x294))
(assert (x2421 x1118))
(assert (= x1 (and (not x640) x2260)))
(assert (x1526 x2818))
(assert (x248 x1395 x106 x106 x2384))
(assert (x2406 (- x2222 x2384)))
(assert (= (x1991 (x2353 3320572652)) 3320572652))
(assert (= x1881 (x1991 (x1618 x1881))))
(assert (x2421 x1870))
(assert (x2421 x1539))
(assert (= x2845 (and x800 (not x1643))))
(assert (= (and x2679 (not x1263)) x2888))
(assert (x2421 x3620))
(assert (= (x1991 (x2353 1832238993)) 1832238993))
(assert (x2421 x1265))
(assert (= x367 (and x2614 (not x3529))))
(assert (= x918 (or x3444 x601 x3805)))
(assert (x2421 x3057))
(assert (=> (<= x585 10000) (= (x2353 x585) (x1618 x585))))
(assert (= (x1991 (x1618 x3188)) x3188))
(assert (= (and x1027 (not x204)) x3345))
(assert (x2421 x3538))
(assert (x248 x2823 x2957 x3849 x1184))
(assert (= x3418 (and x2603 x2677)))
(assert (= x2855 (and x2469 x1823)))
(assert (x216 x2751 (- x3185 x1184)))
(assert (x2406 (- x294 x3574)))
(assert (x2406 x3105))
(assert (x2421 x3401))
(assert (x3448 x1973))
(assert (x248 x2823 x2957 x1033 x106))
(assert (x2421 x1707))
(assert (= x291 (=> (and (= (= 0 x529) x912) (or (not x912) x912)) x96)))
(assert (x2421 x3060))
(assert (= x1371 (and x3021 x1360)))
(assert (x2406 x1214))
(assert (= (and x1694 x1796) x2120))
(assert (= (and (not x769) x1813) x25))
(assert (x248 x2222 x1624 x294 x77))
(assert (= (or x3211 x392) x1099))
(assert (x248 x106 x2384 x294 x77))
(assert (= x363 (and x1314 x3793)))
(assert (x248 x2384 x106 x2957 x2823))
(assert (x2421 x2940))
(assert (x248 x2957 x3574 x3185 x2751))
(assert (x2421 x1672))
(assert (and (x2912 1000000000000000000 x1497) (x1712 1000000000000000000 x1497) (x804 1000000000000000000 x1497) (x3035 1000000000000000000 x1497) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1497) (- (* x1497 1000000000000000000) (* x1497 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1497 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x1497 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1497 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x1497 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x1497 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x1497) (= (* x1497 1000000000000000000) (x1801 1000000000000000000 x1497))))
(assert (= x1594 (and x1896 (not x184))))
(assert (x2406 x77))
(assert (= (x1991 (x1618 x3760)) x3760))
(assert (x248 x106 x1395 x106 x2384))
(assert (x2421 x3291))
(assert (= (and (not x598) x2229) x1152))
(assert (= x3627 (and (not x721) x873)))
(assert (= (x2353 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1618 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x216 x106 (- x1033 x647)))
(assert (= (+ 2 (x1991 x3437)) (x1991 (x356 x3437 2))))
(assert (x2421 x731))
(assert (x2421 x3405))
(assert (x2406 (- x3792 x3849)))
(assert (= (and x3883 (not x1600)) x107))
(assert (x2421 x2692))
(assert (x216 x1624 (- x2222 x647)))
(assert (= (and x2520 x266) x3238))
(assert (x2421 x3224))
(assert (x2421 x2248))
(assert (x2421 x574))
(assert (x2421 x2816))
(assert (=> (>= 10000 x2746) (= (x2353 x2746) (x1618 x2746))))
(assert (x2421 x838))
(assert (= (or x2412 x1996 x2337 x212) x95))
(assert (x304 x1184 x3849 x1395 x106))
(assert (x2421 x1497))
(assert (x2406 (- x2751 x1624)))
(assert (x2421 x695))
(assert (x2421 x2392))
(assert (x2421 x3718))
(assert (x2421 x3935))
(assert (x2421 x3015))
(assert (x2098 x2340))
(assert (x248 x3574 x2957 x1624 x2222))
(assert (x2421 x743))
(assert (x2406 (- x1033 x3909)))
(assert (x2406 (- x2957 x3185)))
(assert (x2421 x2147))
(assert (x2421 x759))
(assert (and (x2912 1000000000000000000 x1380) (x1712 1000000000000000000 x1380) (x804 1000000000000000000 x1380) (x3035 1000000000000000000 x1380) (and (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1380) (- (* x1380 1000000000000000000) (* x1380 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1801 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1380 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x1380 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1380 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x1380 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x1801 1000000000000000000 (- x1380 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x2615 1000000000000000000 x1380) (= (* x1380 1000000000000000000) (x1801 1000000000000000000 x1380))))
(assert (x2421 x456))
(assert (= (x1991 (x1618 x632)) x632))
(assert (x2421 x3439))
(assert (x248 x1624 x2222 x106 x1395))
(assert (= x820 (and x1495 (not x2766))))
(assert (x2421 x1327))
(assert (= x44 (=> (= x3613 x1839) x3648)))
(assert (= (and x2295 (not x340)) x449))
(assert (= (or x3823 x2855 x3083 x3203) x1383))
(assert (x304 x3792 x3909 x3185 x2751))
(assert (= x3946 (and x123 (not x2839))))
(assert (x3448 x759))
(assert (x1192 x1934))
(assert (= x2662 (x1991 (x1618 x2662))))
(assert (x2421 x2456))
(assert (= (and x1792 x969) x2344))
(assert (x2421 x3559))
(assert (= x496 (or x1105 x1337 x3722 x880 x332)))
(assert (x2421 x3680))
(assert (x2421 x3892))
(assert (x2421 x1878))
(assert (x2421 x1859))
(assert (x2406 (- x2384 x1624)))
(assert (= (and x3502 (not x2315)) x3303))
(assert (= x1122 (and x1488 x252)))
(assert (x2421 x3747))
(assert (x304 x2222 x1624 x3909 x3792))
(assert (x2421 x1025))
(assert (= (x1991 (x356 x1317 1)) (+ (x1991 x1317) 1)))
(assert (= (x1618 1461501637330902918203684832716283019655932542976) (x2353 1461501637330902918203684832716283019655932542976)))
(assert (x2406 x2823))
(assert (x248 x106 x1395 x2384 x106))
(assert (= true x3896))
(assert (x304 x2222 x1624 x2823 x2957))
(assert (=> (<= x518 10000) (= (x1618 x518) (x2353 x518))))
(assert (= x196 (and x3237 (not x657))))
(assert (x304 x106 x2384 x77 x294))
(assert (= x1236 (=> (and (= x3075 x1438) (= x497 x3278)) x1614)))
(assert (x248 x3909 x3792 x1111 x647))
(assert (x216 x2222 (- x1624 x3909)))
(assert (x2421 x3434))
(assert (x2421 x424))
(assert (= (+ (x1991 x338) 2) (x1991 (x356 x338 2))))
(assert (x2406 (- x647 x3792)))
(assert (= x2771 (or x1403 x3247)))
(assert (x2421 x778))
(assert (x304 x2957 x3574 x3185 x2751))
(assert (x216 x3574 (- x2957 x2823)))
(assert (x248 x2384 x106 x1624 x2222))
(assert (x2421 x1221))
(assert (=> (<= x3623 10000) (= (x1618 x3623) (x2353 x3623))))
(assert (x216 x1624 (- x2222 x77)))
(assert (x2421 x2670))
(assert (= (and x31 x1310) x1105))
(assert (x3448 x3469))
(assert (x2406 x3185))
(assert (= x1188 (or x324 x2083 x296 x2708 x2349 x355)))
(assert (x3448 x3324))
(assert (= (x1991 (x356 x3867 1)) (+ 1 (x1991 x3867))))
(assert (x2421 x2364))
(assert (x2421 x364))
(assert (x2421 x3267))
(assert (= (or x3455 x3723) x2195))
(assert (x248 x1624 x2222 x2957 x3574))
(assert (x248 x106 x1395 x1184 x3849))
(assert (x216 x294 (- x77 x1184)))
(assert (x2421 x2159))
(assert (=> (>= 10000 x793) (= (x1618 x793) (x2353 x793))))
(assert (x2421 x563))
(assert (= (and x3639 x1637) x3619))
(assert (x2421 x1639))
(assert (= (or x3341 x580 x980 x1865 x2604) x1299))
(assert (x216 x77 (- x294 x3574)))
(assert (= x943 (and x2359 x3831)))
(assert (x248 x106 x1033 x2751 x3185))
(assert (= (x1618 26675680369413430104207330802600748686362808878094982966429686717365230764032) (x2353 26675680369413430104207330802600748686362808878094982966429686717365230764032)))
(assert (x248 x3849 x1184 x2957 x3574))
(assert (x2421 x1491))
(assert (x248 x294 x77 x2957 x3574))
(assert (x2421 x1548))
(assert (x216 x3849 (- x1184 x106)))
(assert (x304 x2823 x2957 x3185 x2751))
(assert (x248 x3849 x1184 x647 x1111))
(assert (x2421 x2586))
(assert (x2421 x2821))
(assert (= x3380 (and x2871 x3778)))
(assert (x2421 x3731))
(assert (x304 x2957 x3574 x2222 x1624))
(assert (x2406 (- x3574 x3909)))
(assert (x2406 (- x3185 x3574)))
(assert (x2406 (- x3849 x294)))
(assert (x2406 x3670))
(assert (= (and x1849 (not x348)) x120))
(assert (x2421 x3011))
(assert (= (and (not x151) x988) x1783))
(assert (= x1844 (=> (and (= x444 (= 0 x549)) (or (and (= (x356 x1317 2) x2044) x444) (and (= (x2947 (x1618 x549) x1317 0) x2208) (not x444)))) x1157)))
(assert (x216 x3909 (- x3792 x2957)))
(assert (= (and (not x3360) x432) x2117))
(assert (= x3718 (x1991 (x1618 x3718))))
(assert (x2421 x2664))
(assert (x2421 x302))
(assert (x248 x2957 x3574 x1184 x3849))
(assert (= (+ (x1991 x1130) 1) (x1991 (x356 x1130 1))))
(assert (x2421 x2587))
(assert (x2421 x758))
(assert (= (x1991 (x2353 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x216 x1033 (- x106 x2957)))
(assert (x216 x2823 (- x2957 x1111)))
(assert (x2406 (- x1184 x2384)))
(assert (x2421 x1107))
(assert (x2406 (- x1184 x3909)))
(assert (x248 x106 x2384 x2751 x3185))
(assert (= (=> (and (= 0 x1572) (= x47 x668)) x2355) x1127))
(assert (= (x2353 1265048712) (x1618 1265048712)))
(assert (x2406 (- x3909 x3185)))
(assert (x2421 x1752))
(assert (x2406 x2751))
(assert (= (or x286 x1577) x2501))
(assert (=> (<= x1736 10000) (= (x1618 x1736) (x2353 x1736))))
(assert (= (and x3237 x657) x3426))
(assert (x2406 (- x1033 x3574)))
(assert (= x696 (and x1563 (not x3961))))
(assert (= (x1618 2691771752) (x2353 2691771752)))
(assert (= (x1991 (x356 x2200 2)) (+ 2 (x1991 x2200))))
(assert (x216 x106 (- x1395 x2823)))
(assert (= (and x2368 (not x1663)) x1860))
(assert (x248 x2222 x1624 x2751 x3185))
(assert (= (x1991 (x356 x1662 1)) (+ 1 (x1991 x1662))))
(assert (x304 x2384 x106 x2222 x1624))
(assert (= x3399 (and x2809 x3625)))
(assert (= (=> (and (= x3385 x1588) (= 0 x507)) x2635) x3425))
(assert (x248 x3792 x3909 x106 x1033))
(assert (x2421 x1827))
(assert (x248 x106 x2384 x2957 x2823))
(assert (= (or (and x3414 (not x2926)) x762) x750))
(assert (x248 x1111 x647 x1624 x2222))
(assert (x2421 x790))
(assert (x2421 x575))
(assert (= (x1991 (x1618 x1215)) x1215))
(assert (= x1813 (and x3345 (not x3074))))
(assert (x2406 (- x77 x106)))
(assert (= (x1991 (x356 x3240 2)) (+ (x1991 x3240) 2)))
(assert (x2421 x3075))
(assert (x216 x294 (- x77 x3909)))
(assert (= x259 (=> (and (= x3216 x3496) (= x206 x3068)) x2579)))
(assert (x2421 x3494))
(assert (x2406 (- x3574 x2751)))
(assert (=> (>= 10000 x362) (= (x2353 x362) (x1618 x362))))
(assert (x2421 x1386))
(assert (x248 x294 x77 x106 x2384))
(assert (= x1671 (=> (= x1422 (> x1870 0)) (and (=> (and (= x3654 x3053) (not x1422)) x101) (=> (and (and (or (and x3294 (and (= 1 x1745) (> x562 0) (not (> 2217467699 x3180)) (= 2858086653 x3180) (not (= x3180 2691771752)) (<= x3384 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x3943 4)) (not (< x3180 2691771752)) (= x3943 x1677) (not (= x3180 2796547477)) (<= 0 x3384) (> 2929553584 x3180) (= x3943 4) (= 32 x3746) (= x562 (x1382 (x1618 x1937))) (not (= 2835717307 x3180)) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x1781))) (and (and (= x290 (= x632 x219)) (or (and (and (and (and (= x1745 1) (= x810 77053863734975077137548456399560439977311721439096602559221323163398253314048) (< x2175 2929553584) (< 0 x2870) (= (x1382 (x1618 x3860)) x2870) (not (= x2175 2796547477)) (= 2858086653 x2175) (<= 0 x2908) (not (< x2175 2691771752)) (not (< x2268 4)) (= x2268 x1677) (= 32 x3746) (not (= 2691771752 x2175)) (<= x2908 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2268 4) (not (< x2175 2217467699)) (not (= 2835717307 x2175))) x3611) (= x3611 (= x3860 x219))) (not x290)) (and x290 (and (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x2180) (> 2929553584 x1744) (not (> 2217467699 x1744)) (<= x3796 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x1744 2691771752)) (= 4 x2672) (= (x1382 (x1618 x632)) x1080) (= x1677 x2672) (= x1745 1) (= 32 x3746) (<= 0 x3796) (not (= 2691771752 x1744)) (< 0 x1080) (not (= x1744 2796547477)) (not (= x1744 2835717307)) (not (> 4 x2672)) (= x1744 2858086653))))) (not x3294))) (and (= 4 x1677) (= (= x219 x1937) x3294) (= (x525 1461501637330902918203684832716283019655932542975 x2746) x219))) x1422) x596)))))
(assert (= x97 (and (not x1176) x3701)))
(assert (x3448 x1835))
(assert (= (or x464 x472) x3093))
(assert (x3448 x1215))
(assert (= x284 (and x950 x948)))
(assert (x2421 x1705))
(assert (= (and x357 (not x1286)) x373))
(assert (x216 x3909 (- x3792 x1395)))
(assert (x248 x2751 x3185 x3792 x3909))
(assert (x2421 x2472))
(assert (x248 x2957 x2823 x106 x2384))
(assert (x2406 (- x77 x2222)))
(assert (x216 x2823 (- x2957 x1033)))
(assert (= (or x1837 x963) x2316))
(assert (= x2345 (=> (and (or (and x8 (and (and (>= 1461501637330902918203684832716283019655932542975 x946) (>= x946 0) (= (x2047 x2899) x946) (> 1461501637330902918203684832716283019655932542976 x946) (= x2469 (> x2450 0)) (= x2450 (x3381 (- x636 x946)))) (or (and x2469 (and (= x2869 (x1453 x186)) (>= 1461501637330902918203684832716283019655932542975 x2869) (= (x2947 (x1618 x636) x3338 0) x186) (<= 0 x2869) (> 1461501637330902918203684832716283019655932542976 x2869))) (not x2469)))) (and (and (and (= x1656 (= x2730 0)) (<= 0 x2730) (> 1461501637330902918203684832716283019655932542976 x2730) (>= 1461501637330902918203684832716283019655932542975 x2730) (= x2730 (x2047 x2899))) (or x1656 (and (not x1656) (and (= x1787 (x3736 x3290)) (= (x356 x2899 1) x3290) (>= x1787 0) (>= 1461501637330902918203684832716283019655932542975 x1787) (< x1787 1461501637330902918203684832716283019655932542976))))) (not x8))) (= (ite (< x3812 x3905) (not (= x636 0)) (> x3905 x3812)) x8)) x179)))
(assert (x2421 x995))
(assert (x304 x1395 x106 x2222 x1624))
(assert (x2406 (- x1033 x2751)))
(assert (= x2279 (and x2602 x2904)))
(assert (x2421 x3589))
(assert (x2421 x121))
(assert (x3017 x494 x1723))
(assert (= (or (and x1180 (not x1710)) x1887) x1120))
(assert (x2421 x3575))
(assert (x2421 x33))
(assert (= (=> (= x157 (= x2605 x646)) (and (=> (and (not x157) (= (< 0 x2605) x598)) (and (=> (and (and (= x2715 x2582) (= x1269 x2902)) (not x598)) x435) (=> (and x598 (and (or (and x2603 (= (x356 x1245 1) x3159)) (and (not x2603) (and (= (x2947 (x1618 x1215) x1245 0) x1685) (= (x356 x1685 1) x1765)))) (and (= x1112 (x356 x2414 1)) (= (= x1215 0) x2603) (> 1461501637330902918203684832716283019655932542976 x2038) (= x3522 (x3783 (+ x2582 96))) (>= x1215 0) (= (x2947 (x1618 x1973) x1245 0) x3315) (= x2038 (x1641 x2414)) (<= x2038 1461501637330902918203684832716283019655932542975) (< x1215 1461501637330902918203684832716283019655932542976) (= x1384 (x1404 x1112)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1384) (= (x356 x3315 1) x2414) (<= 0 x1384) (>= x2038 0) (not (= 0 x1384)) (= x1215 (x1797 x3315)) (<= x1215 1461501637330902918203684832716283019655932542975)))) x3771))) (=> (and x157 (and (= x1435 x2582) (= x2902 x1376))) x2918))) x3532))
(assert (= x2791 (and (not x398) x1256)))
(assert (x216 x3792 (- x3909 x294)))
(assert (= (x1991 (x1618 x2792)) x2792))
(assert (x216 x1184 (- x3849 x647)))
(assert (x2421 x3050))
(assert (x2406 (- x294 x2384)))
(assert (=> (>= 10000 x479) (= (x2353 x479) (x1618 x479))))
(assert (= (and x3567 x1965) x1940))
(assert (x304 x2384 x106 x1111 x647))
(assert (x248 x2957 x2823 x106 x1395))
(assert (x2421 x3347))
(assert (x2421 x1471))
(assert (x2406 (- x1111 x1033)))
(assert (x2406 (- x2823 x1033)))
(assert (x2421 x1622))
(assert (x2421 x3741))
(assert (= (and x2195 x701) x2938))
(assert (x2406 x1380))
(assert (= (x1991 (x1618 x1999)) x1999))
(assert (x3448 x895))
(assert (x1526 x1605))
(assert (x248 x2222 x1624 x106 x1395))
(assert (x216 x1111 (- x647 x106)))
(assert (x2406 (- x1184 x2823)))
(assert (x248 x106 x2384 x1184 x3849))
(assert (x304 x3792 x3909 x3574 x2957))
(assert (= (=> (and (= x1217 x3882) (= x3794 x1820)) x2504) x3699))
(assert (x216 x2823 (- x2957 x77)))
(assert (x2406 (- x2957 x3909)))
(assert (x3448 x1462))
(assert (x216 x3849 x1184))
(assert (= x2157 (and (not x2825) x901)))
(assert (x2406 (- x106 x3185)))
(assert (x2421 x57))
(assert (x2406 (- x2751 x106)))
(assert (x2421 x2519))
(assert (= x3138 (and x1415 x2018)))
(assert (x2421 x2378))
(assert (= (and x3081 x3685) x1484))
(assert (x3448 x1999))
(assert (= x2961 (and x978 x3975)))
(assert (x216 x1111 (- x647 x1184)))
(assert (x2421 x1743))
(assert (= (x2353 3583811254) (x1618 3583811254)))
(assert (= x1900 (and x192 x2113)))
(assert (x2421 x1961))
(assert (x2421 x2395))
(assert (= (+ (x1991 x3166) 1) (x1991 (x356 x3166 1))))
(assert (x2406 (- x3792 x2957)))
(assert (x2098 x3482))
(assert (x216 x3574 (- x2957 x1624)))
(assert (x2421 x82))
(assert (x2421 x834))
(assert (= (and x2460 x1352) x310))
(assert (x248 x2222 x1624 x1395 x106))
(assert (x2421 x2939))
(assert (x2421 x2081))
(assert (x2421 x2577))
(assert (x216 x647 (- x1111 x1624)))
(assert (x216 x1111 (- x647 x3792)))
(assert (x2421 x3817))
(assert (x248 x1033 x106 x106 x1395))
(assert (x248 x1395 x106 x106 x1033))
(assert (x2406 (- x77 x2957)))
(assert (= (x1991 (x356 x3726 1)) (+ 1 (x1991 x3726))))
(assert (x2421 x1243))
(assert (x2421 x2267))
(assert (x2406 x2957))
(assert (x304 x3849 x1184 x1395 x106))
(assert (x216 x2823 (- x2957 x3574)))
(assert (= (or x1676 x380 x1351) x1986))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x3123 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3413 x3123 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2732 x3123 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1688 x3123 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1527 x3123 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x747 x3123 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x2421 x2658))
(assert (x2421 x1429))
(assert (x2421 x3462))
(assert (x2421 x219))
(assert (x2421 x2895))
(assert (x2421 x617))
(assert (x2421 x3111))
(assert (x2421 x23))
(assert (x2421 x1103))
(assert (= x1326 (and x1783 (not x3285))))
(assert (x304 x647 x1111 x1033 x106))
(assert (= (x1991 (x356 x3338 2)) (+ (x1991 x3338) 2)))
(assert (= (or (and x1546 x1362) (and (not x2241) x2733)) x694))
(assert (x2421 x1448))
(assert (= (+ 1 (x1991 x3218)) (x1991 (x356 x3218 1))))
(assert (x2421 x1509))
(assert (x2421 x3069))
(assert (= x3455 (and x3835 x177)))
(assert (x2421 x1787))
(assert (x248 x294 x77 x106 x1033))
(assert (x2421 x174))
(assert (x248 x1395 x106 x2957 x3574))
(assert (x216 x3909 (- x3792 x294)))
(assert (= (x1991 (x1618 x2171)) x2171))
(assert (= x2636 (and x3754 x411)))
(assert (= x1619 (and x2524 (not x1024))))
(assert (x2421 x1287))
(assert (x304 x106 x2384 x1395 x106))
(assert (x2421 x2265))
(assert (x248 x2823 x2957 x77 x294))
(assert (= (=> (and (= x3506 x3533) (= x2110 x1832) (= x118 x3528) (= x114 x3432)) x524) x2576))
(assert (x2406 (- x106 x3909)))
(assert (= (+ (x1991 x3921) 1) (x1991 (x356 x3921 1))))
(assert (= x2260 (and x2440 x1638)))
(assert (x2421 x2280))
(assert (= x686 (and x1587 (not x2684))))
(assert (x216 x1111 (- x647 x1624)))
(assert (x248 x106 x1033 x3792 x3909))
(assert (x2421 x2558))
(assert (x2421 x1624))
(assert (x248 x3849 x1184 x2823 x2957))
(assert (x216 x3909 (- x3792 x3574)))
(assert (x248 x2957 x2823 x2751 x3185))
(assert (x2421 x230))
(assert (x2421 x369))
(assert (= x922 (and x1391 x1102)))
(assert (x304 x1395 x106 x3909 x3792))
(assert (= (and (=> (and (and (= x3403 x1478) (= x1511 x2104)) (not x2650)) x3662) (=> (and (and (and (= x1296 (x356 x409 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2823) (= x2555 (x525 1461501637330902918203684832716283019655932542975 x2746)) (= x2823 (x3113 x1296)) (= (< x809 x3036) x978) (= x3036 (x3413 x777 1000000000000000000)) (= (x2947 (x1618 x1507) x1042 0) x409) (not (> x2104 x3720)) (= x1042 (x2947 (x1618 x2555) (x2353 158) 0)) (= x777 (x1801 x2823 x2957)) (>= x2823 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1801 x2823 x2957)) (= x809 (x3381 (- x3720 x2104)))) (or (and (and (= x2625 x1355) (= 0 x2649) (= (x3413 x3132 x2957) x1442) (= (> x809 115792089237316195423570985008687907853269984665640564039457) x2236) (= x2081 (x3381 (- x3839 x386))) (= x774 0) (= (* 1000000000000000000 x1214) x3132) (= x480 (* x2558 1000000000000000000)) (= x1355 (x2979 x409)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3839) (not (< x3839 x386)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x2558)) (= x2649 (ite x3985 1 0)) (>= x1355 0) (= x3839 (x3113 x1296)) (= x459 (x3413 x2770 1000000000000000000)) (> x2179 0) (= x2387 x2081) (= (< 115792089237316195423570985008687907853269984665640564039457 x809) x3985) (> x2957 0) (= x1214 (x2409 (* 1000000000000000000 x809))) (= x2770 (x3413 x480 x2179)) (= (x2409 (* x809 1000000000000000000)) x2558) (= x1958 x452) (= x2687 x459) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x1214)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1355) (= (x3413 x1442 1000000000000000000) x386) (= x452 (+ x2625 x2687)) (<= 0 x3839) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1355 x459)) (= (ite x2236 1 0) x774)) x978) (and (not x978) (and (>= x2352 0) (= x3150 x1761) (= x2387 0) (= 0 x2369) (= (x3413 x2139 x2179) x2393) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1497 1000000000000000000)) (= (x3413 x2393 1000000000000000000) x3150) (= x2352 x2115) (= (x2979 x409) x2352) (= x2762 x1958) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3036 x2104)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2352) (< 0 x2179) (= (x2409 (* x3036 1000000000000000000)) x1497) (= (* x1497 1000000000000000000) x2139) (= x2762 (+ x1761 x2115)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2352 x3150)) (= (> x3036 115792089237316195423570985008687907853269984665640564039457) x2998) (= (ite x2998 1 0) x2369))))) x2650) x1267)) x3320))
(assert (x2421 x3297))
(assert (x2406 (- x294 x3909)))
(assert (= x979 (and x3931 x1000)))
(assert (x2421 x3910))
(assert (x2406 (- x1033 x3792)))
(assert (x2421 x206))
(assert (= (and x1187 x1028) x1702))
(assert (x2421 x1658))
(assert (= x2604 (and x557 x391)))
(assert (x2421 x3482))
(assert (= (or x1146 x1013) x1637))
(assert (x2421 x3080))
(assert (x2406 (- x3849 x2384)))
(assert (= (x1991 (x356 x181 1)) (+ (x1991 x181) 1)))
(assert (x2406 (- x3185 x3792)))
(assert (x2421 x1096))
(assert (= (x1991 (x1618 x518)) x518))
(assert (= x1911 (and x3197 (not x8))))
(assert (x248 x77 x294 x1624 x2222))
(assert (= (and x3193 (not x2861)) x732))
(assert (x2421 x2379))
(assert (x2406 (- x1624 x2751)))
(assert (x2406 (- x3792 x1395)))
(assert (= x1587 (and (not x1990) x2752)))
(assert (= x3321 (or x2784 x1186)))
(assert (= (or x2437 x2325) x1073))
(assert (= (and x3885 (not x2525)) x1953))
(assert (x2421 x716))
(assert (= (and x3690 (not x455)) x1500))
(assert (= (x1991 (x356 x1443 1)) (+ (x1991 x1443) 1)))
(assert (= (=> (and (= x3075 0) (= x497 x898)) x1236) x229))
(assert (x2421 x3094))
(assert (x2421 x863))
(assert (x248 x3574 x2957 x3909 x3792))
(assert (= (or x1411 x534) x498))
(assert (= x436 (and (not x2474) x2863)))
(assert (x2421 x2201))
(assert (= (or x3956 x3027) x2585))
(check-sat)
(exit)
