(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x5128 0)) (((x5097 (x1331 Int)) (x5862 (x5961 x5128) (x5045 Int)) (x476 (x3612 x5128) (x1141 x5128) (x5080 Int)))))
(declare-fun x4246 () Bool)
(declare-fun x4321 () Bool)
(declare-fun x3368 () Bool)
(declare-fun x1921 () Bool)
(declare-fun x6004 () Bool)
(declare-fun x6092 () x5128)
(declare-fun x1873 () Bool)
(declare-fun x4345 () x5128)
(declare-fun x5691 () Bool)
(declare-fun x5632 () Bool)
(declare-fun x2886 () Bool)
(declare-fun x410 () Bool)
(declare-fun x3892 () Bool)
(declare-fun x596 () Bool)
(declare-fun x859 () Int)
(declare-fun x1794 () Bool)
(declare-fun x5928 () Bool)
(declare-fun x2054 () Bool)
(declare-fun x3629 () Bool)
(declare-fun x4808 () Int)
(declare-fun x3422 () Int)
(declare-fun x4217 () Bool)
(declare-fun x4201 () Int)
(declare-fun x3447 () Bool)
(declare-fun x4304 () x5128)
(declare-fun x1337 () Int)
(declare-fun x3339 () Bool)
(declare-fun x450 () x5128)
(declare-fun x4457 () Int)
(declare-fun x1695 () Bool)
(declare-fun x2312 () Bool)
(declare-fun x4821 () Int)
(declare-fun x4676 () Int)
(declare-fun x4215 (x5128) Int)
(declare-fun x1083 () x5128)
(declare-fun x1777 () x5128)
(declare-fun x1582 () Bool)
(declare-fun x4864 (x5128) Int)
(declare-fun x1788 () Bool)
(declare-fun x2711 () Int)
(declare-fun x2525 () Bool)
(declare-fun x5323 () Bool)
(declare-fun x1459 () Bool)
(declare-fun x1340 () Bool)
(declare-fun x6282 () Bool)
(declare-fun x1616 () Bool)
(declare-fun x1104 () Bool)
(declare-fun x5818 () Bool)
(declare-fun x739 () Bool)
(declare-fun x4366 () Int)
(declare-fun x5141 () Bool)
(declare-fun x3539 () Bool)
(declare-fun x4978 () Bool)
(declare-fun x935 () Bool)
(declare-fun x5194 () Bool)
(declare-fun x4223 () Bool)
(declare-fun x5779 () x5128)
(declare-fun x2736 () Bool)
(declare-fun x5419 () Bool)
(declare-fun x5645 () Int)
(declare-fun x3013 () Bool)
(declare-fun x2781 () Int)
(declare-fun x1267 () Bool)
(declare-fun x2968 () Bool)
(declare-fun x2742 () Bool)
(declare-fun x5987 () Bool)
(declare-fun x1704 () Bool)
(declare-fun x3910 () x5128)
(declare-fun x2417 () Int)
(declare-fun x5127 () Bool)
(declare-fun x4704 () x5128)
(declare-fun x5526 () Int)
(declare-fun x2181 () Bool)
(declare-fun x4184 () x5128)
(declare-fun x6027 () Int)
(declare-fun x835 () Int)
(declare-fun x215 () Bool)
(declare-fun x5552 () Bool)
(declare-fun x4475 () x5128)
(declare-fun x673 () Bool)
(declare-fun x416 () Int)
(declare-fun x913 () Bool)
(declare-fun x1868 () Bool)
(declare-fun x3606 () Bool)
(declare-fun x6160 () Bool)
(declare-fun x3985 () Int)
(declare-fun x5067 () Int)
(declare-fun x81 () Bool)
(declare-fun x2341 () x5128)
(declare-fun x1984 () Int)
(declare-fun x2609 () Int)
(declare-fun x4814 () Bool)
(declare-fun x4141 () Bool)
(declare-fun x4517 () Bool)
(declare-fun x5668 () Int)
(declare-fun x6233 () Int)
(declare-fun x2939 () Bool)
(declare-fun x4540 () Bool)
(declare-fun x6363 () Int)
(declare-fun x1041 () Bool)
(declare-fun x4703 () Bool)
(declare-fun x1765 () Int)
(declare-fun x2464 () Int)
(declare-fun x2161 () Int)
(declare-fun x706 () Bool)
(declare-fun x5367 () Int)
(declare-fun x934 () Bool)
(declare-fun x6322 () Int)
(declare-fun x2266 () Bool)
(declare-fun x273 () Int)
(declare-fun x1127 () Bool)
(declare-fun x4946 () Bool)
(declare-fun x1578 () Int)
(declare-fun x4370 () Int)
(declare-fun x4400 () Bool)
(declare-fun x2538 () Int)
(declare-fun x2440 () Bool)
(declare-fun x5806 () Bool)
(declare-fun x2768 () Int)
(declare-fun x5166 () Int)
(declare-fun x2752 () Bool)
(declare-fun x1664 () Bool)
(declare-fun x693 () Int)
(declare-fun x2308 () Int)
(declare-fun x42 () x5128)
(declare-fun x5545 () Int)
(declare-fun x5536 (Int) Int)
(declare-fun x1682 () Bool)
(declare-fun x1356 () Int)
(declare-fun x6146 () Bool)
(declare-fun x3351 () Int)
(declare-fun x947 () Int)
(declare-fun x2349 () Bool)
(declare-fun x6035 () Int)
(declare-fun x2966 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x5898 () Bool)
(declare-fun x4459 () Int)
(declare-fun x5840 () Bool)
(declare-fun x6040 () Int)
(declare-fun x1181 () Int)
(declare-fun x622 () Bool)
(declare-fun x5421 () Bool)
(declare-fun x5745 () Int)
(declare-fun x3837 () Bool)
(declare-fun x2876 () Bool)
(declare-fun x2148 () Bool)
(declare-fun x5064 () Int)
(declare-fun x3405 () Bool)
(declare-fun x4470 () Int)
(declare-fun x1469 () Int)
(declare-fun x4221 () Int)
(declare-fun x3274 () Bool)
(declare-fun x5393 () Bool)
(declare-fun x1404 () Int)
(declare-fun x2010 () Int)
(declare-fun x4114 () Bool)
(declare-fun x4761 () Bool)
(declare-fun x411 () Int)
(declare-fun x5675 () Bool)
(declare-fun x5523 () Int)
(declare-fun x5477 () Bool)
(declare-fun x4011 () Bool)
(declare-fun x4404 () Bool)
(declare-fun x855 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x6206 () x5128)
(declare-fun x833 () Int)
(declare-fun x591 () Bool)
(declare-fun x5069 () Bool)
(declare-fun x1832 () Int)
(declare-fun x3582 () Int)
(declare-fun x990 () Bool)
(declare-fun x998 () Bool)
(declare-fun x5702 () Bool)
(declare-fun x6023 () Bool)
(declare-fun x6256 () x5128)
(declare-fun x1648 () Bool)
(declare-fun x4884 () Bool)
(declare-fun x2851 () Bool)
(declare-fun x480 () Bool)
(declare-fun x761 () Int)
(declare-fun x3432 () Bool)
(declare-fun x2651 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x4206 () Int)
(declare-fun x1800 () x5128)
(declare-fun x5546 () Int)
(declare-fun x1790 () Bool)
(declare-fun x905 () Int)
(declare-fun x3861 () Int)
(declare-fun x1071 () Bool)
(declare-fun x5901 () Int)
(declare-fun x5748 () Bool)
(declare-fun x5800 () Bool)
(declare-fun x5773 () Bool)
(declare-fun x5913 () Bool)
(declare-fun x608 () Bool)
(declare-fun x5057 () Int)
(declare-fun x2991 () Bool)
(declare-fun x1649 () Int)
(declare-fun x5853 () Int)
(declare-fun x2745 () Int)
(declare-fun x2791 () Bool)
(declare-fun x4564 () x5128)
(declare-fun x3162 () Bool)
(declare-fun x3003 () Int)
(declare-fun x4677 () Bool)
(declare-fun x5947 () Bool)
(declare-fun x3947 () Bool)
(declare-fun x3857 () Int)
(declare-fun x5882 () Int)
(declare-fun x4078 () Bool)
(declare-fun x6032 () Bool)
(declare-fun x5262 () Int)
(declare-fun x3088 () Int)
(declare-fun x3862 () Bool)
(declare-fun x4577 () x5128)
(declare-fun x5416 () Int)
(declare-fun x437 () Int)
(declare-fun x4876 () Int)
(declare-fun x2030 () Bool)
(declare-fun x2756 () Bool)
(declare-fun x4077 () Bool)
(declare-fun x893 () Bool)
(declare-fun x5174 () Int)
(declare-fun x803 () Bool)
(declare-fun x4912 () Bool)
(declare-fun x1076 () Int)
(declare-fun x1467 () Int)
(declare-fun x1128 () Bool)
(declare-fun x454 () x5128)
(declare-fun x6054 () Bool)
(declare-fun x4333 () Bool)
(declare-fun x5715 () Bool)
(declare-fun x3145 () Bool)
(declare-fun x444 () Int)
(declare-fun x5171 () x5128)
(declare-fun x1577 () Int)
(declare-fun x347 () Bool)
(declare-fun x5055 () Bool)
(declare-fun x573 () Bool)
(declare-fun x2144 () Bool)
(declare-fun x2693 () Int)
(declare-fun x3115 () Bool)
(declare-fun x1671 () Bool)
(declare-fun x1018 () Int)
(declare-fun x4657 () Int)
(declare-fun x65 () Bool)
(declare-fun x2130 () x5128)
(declare-fun x325 () Bool)
(declare-fun x5946 () Int)
(declare-fun x2373 () Bool)
(declare-fun x5096 () Bool)
(declare-fun x5234 () Int)
(declare-fun x6316 () Int)
(declare-fun x951 () Bool)
(declare-fun x4559 () Bool)
(declare-fun x4126 () Int)
(declare-fun x4741 () x5128)
(declare-fun x2485 () Int)
(declare-fun x2383 () Bool)
(declare-fun x3556 () Bool)
(declare-fun x4631 () Bool)
(declare-fun x1058 () Int)
(declare-fun x5315 () Bool)
(declare-fun x1418 () Bool)
(declare-fun x3384 () Bool)
(declare-fun x5647 () Bool)
(declare-fun x4623 () Int)
(declare-fun x3056 () Bool)
(declare-fun x2477 () Bool)
(declare-fun x4837 () Int)
(declare-fun x751 () Bool)
(declare-fun x2081 () Bool)
(declare-fun x1048 () Int)
(declare-fun x1172 () Bool)
(declare-fun x967 () Bool)
(declare-fun x960 () Bool)
(declare-fun x2599 () x5128)
(declare-fun x3886 () Int)
(declare-fun x993 () Bool)
(declare-fun x2065 () x5128)
(declare-fun x4016 () Bool)
(declare-fun x254 () Int)
(declare-fun x1618 () Bool)
(declare-fun x3734 () Int)
(declare-fun x3760 () Bool)
(declare-fun x339 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x2671 () Bool)
(declare-fun x926 () x5128)
(declare-fun x3780 () Bool)
(declare-fun x5066 () Int)
(declare-fun x4746 () Bool)
(declare-fun x2111 () Int)
(declare-fun x4387 () Bool)
(declare-fun x2193 () Int)
(declare-fun x5447 () Int)
(declare-fun x1245 () Int)
(declare-fun x5231 () Int)
(declare-fun x3360 () Bool)
(declare-fun x1277 () Bool)
(declare-fun x276 () Int)
(declare-fun x2639 () Int)
(declare-fun x4407 () Bool)
(declare-fun x1286 () x5128)
(declare-fun x2780 () Bool)
(declare-fun x5934 () Int)
(declare-fun x3389 () Int)
(declare-fun x5043 () Bool)
(declare-fun x2503 () Bool)
(declare-fun x5065 () x5128)
(declare-fun x3738 () Bool)
(declare-fun x3431 () Int)
(declare-fun x1668 () Bool)
(declare-fun x494 () Int)
(declare-fun x8 () Int)
(declare-fun x1901 () Int)
(declare-fun x2800 () Int)
(declare-fun x32 () Int)
(declare-fun x2579 () Bool)
(declare-fun x5589 () Bool)
(declare-fun x6191 () Bool)
(declare-fun x1230 () Int)
(declare-fun x4777 () x5128)
(declare-fun x5826 () Int)
(declare-fun x3652 () Bool)
(declare-fun x2238 () Bool)
(declare-fun x123 () Int)
(declare-fun x5787 () Bool)
(declare-fun x5710 () Bool)
(declare-fun x4331 () Bool)
(declare-fun x2267 () Bool)
(declare-fun x4456 () Int)
(declare-fun x4148 () Bool)
(declare-fun x1177 () Int)
(declare-fun x4374 () Int)
(declare-fun x1430 () Int)
(declare-fun x4155 () Int)
(declare-fun x3716 () Int)
(declare-fun x4476 () Int)
(declare-fun x1993 () Int)
(declare-fun x3049 () Int)
(declare-fun x2989 () Int)
(declare-fun x5475 () Bool)
(declare-fun x4830 () Bool)
(declare-fun x901 () Bool)
(declare-fun x907 () Bool)
(declare-fun x333 () Int)
(declare-fun x3377 () Bool)
(declare-fun x1886 () Bool)
(declare-fun x6299 () Int)
(declare-fun x87 () Int)
(declare-fun x4448 () Bool)
(declare-fun x2815 () x5128)
(declare-fun x1254 () Int)
(declare-fun x5347 () Int)
(declare-fun x2135 () Int)
(declare-fun x2441 () Int)
(declare-fun x186 () Int)
(declare-fun x3485 () Bool)
(declare-fun x3913 () Bool)
(declare-fun x2307 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x2812 () x5128)
(declare-fun x6230 () Bool)
(declare-fun x953 () Bool)
(declare-fun x5633 () Int)
(declare-fun x257 () Int)
(declare-fun x3090 () Int)
(declare-fun x3560 () Int)
(declare-fun x3025 () Bool)
(declare-fun x6156 () Int)
(declare-fun x5757 () Int)
(declare-fun x2369 () Bool)
(declare-fun x2622 () Int)
(declare-fun x6276 () Bool)
(declare-fun x3197 () Bool)
(declare-fun x2972 () Bool)
(declare-fun x3017 () Bool)
(declare-fun x6138 () Bool)
(declare-fun x4122 () Int)
(declare-fun x4381 () Bool)
(declare-fun x323 () Bool)
(declare-fun x5029 () Bool)
(declare-fun x3746 () Bool)
(declare-fun x4607 () Int)
(declare-fun x3450 (x5128) Int)
(declare-fun x4365 () Int)
(declare-fun x2933 () Bool)
(declare-fun x3158 () Bool)
(declare-fun x2205 () Bool)
(declare-fun x5629 () Bool)
(declare-fun x1201 () Bool)
(declare-fun x3344 () Int)
(declare-fun x5378 () Bool)
(declare-fun x3714 () Int)
(declare-fun x3875 () Bool)
(declare-fun x620 () Bool)
(declare-fun x130 () Bool)
(declare-fun x3740 () Int)
(declare-fun x1595 () Int)
(declare-fun x6125 () Bool)
(declare-fun x1622 () Int)
(declare-fun x5597 () Int)
(declare-fun x912 () Bool)
(declare-fun x6031 () Bool)
(declare-fun x6324 () Bool)
(declare-fun x1350 () Int)
(declare-fun x4856 () Bool)
(declare-fun x6283 () Bool)
(declare-fun x3031 () Int)
(declare-fun x6292 () Bool)
(declare-fun x1724 () Int)
(declare-fun x6017 () Bool)
(declare-fun x3630 () Bool)
(declare-fun x5144 () Bool)
(declare-fun x1791 () Int)
(declare-fun x2225 () Bool)
(declare-fun x4858 () Int)
(declare-fun x1556 () Int)
(declare-fun x6162 () Bool)
(declare-fun x5749 () Int)
(declare-fun x1710 () Bool)
(declare-fun x2191 () Int)
(declare-fun x2957 () x5128)
(declare-fun x3872 () Int)
(declare-fun x2921 () Bool)
(declare-fun x5718 () Int)
(declare-fun x5682 () Bool)
(declare-fun x6368 () Int)
(declare-fun x4895 () Bool)
(declare-fun x4137 () Bool)
(declare-fun x297 () Bool)
(declare-fun x1946 () Bool)
(declare-fun x2551 () Int)
(declare-fun x3220 () Int)
(declare-fun x2216 () Bool)
(declare-fun x5776 () Bool)
(declare-fun x4186 () Bool)
(declare-fun x4329 () Bool)
(declare-fun x3803 () Int)
(declare-fun x5798 () Bool)
(declare-fun x2447 () Bool)
(declare-fun x2882 () Bool)
(declare-fun x3391 () Bool)
(declare-fun x6155 () Int)
(declare-fun x5540 () Bool)
(declare-fun x4843 () Int)
(declare-fun x2632 () Bool)
(declare-fun x4433 () Bool)
(declare-fun x3940 () Bool)
(declare-fun x5341 () Bool)
(declare-fun x5073 () Bool)
(declare-fun x1266 () Bool)
(declare-fun x6082 () Int)
(declare-fun x1182 () Bool)
(declare-fun x5516 () Bool)
(declare-fun x5390 () Bool)
(declare-fun x3915 () Int)
(declare-fun x1353 () Int)
(declare-fun x6367 () Bool)
(declare-fun x1540 () Int)
(declare-fun x5673 () Bool)
(declare-fun x3325 () Bool)
(declare-fun x508 () Bool)
(declare-fun x4536 () Bool)
(declare-fun x3754 () Bool)
(declare-fun x2774 () Int)
(declare-fun x600 () Bool)
(declare-fun x1803 () Bool)
(declare-fun x1294 () Bool)
(declare-fun x28 () Int)
(declare-fun x5711 () Bool)
(declare-fun x1962 () Bool)
(declare-fun x5450 () Bool)
(declare-fun x670 () Int)
(declare-fun x5527 () Bool)
(declare-fun x3062 () Int)
(declare-fun x2504 () Bool)
(declare-fun x4440 () Bool)
(declare-fun x2569 () x5128)
(declare-fun x5958 () Bool)
(declare-fun x3665 () Bool)
(declare-fun x5493 () x5128)
(declare-fun x1845 () Bool)
(declare-fun x5032 () Int)
(declare-fun x2681 () Int)
(declare-fun x4931 (x5128) Int)
(declare-fun x806 () Bool)
(declare-fun x4418 () Int)
(declare-fun x3128 () Int)
(declare-fun x6140 () Bool)
(declare-fun x4428 () Int)
(declare-fun x4711 () Int)
(declare-fun x1352 () Int)
(declare-fun x5362 () Int)
(declare-fun x4720 () Int)
(declare-fun x4280 () Bool)
(declare-fun x4932 () Bool)
(declare-fun x5449 () Bool)
(declare-fun x2050 () Bool)
(declare-fun x1898 () Bool)
(declare-fun x3935 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x433 () Bool)
(declare-fun x1259 () Int)
(declare-fun x5869 () Int)
(declare-fun x4269 () Bool)
(declare-fun x5900 () Bool)
(declare-fun x756 () Bool)
(declare-fun x5627 () Int)
(declare-fun x784 () Int)
(declare-fun x4891 () x5128)
(declare-fun x6293 () Int)
(declare-fun x2286 () x5128)
(declare-fun x1977 (x5128) Int)
(declare-fun x4519 () Bool)
(declare-fun x3830 () Bool)
(declare-fun x3421 () Bool)
(declare-fun x2051 () Bool)
(declare-fun x3473 () Int)
(declare-fun x4296 () Bool)
(declare-fun x2840 () Bool)
(declare-fun x2415 () Bool)
(declare-fun x5693 () Bool)
(declare-fun x5200 () Int)
(declare-fun x4055 () Bool)
(declare-fun x2797 () x5128)
(declare-fun x5596 () x5128)
(declare-fun x3016 () Bool)
(declare-fun x820 () Bool)
(declare-fun x4865 () Bool)
(declare-fun x5896 () Int)
(declare-fun x2859 () Int)
(declare-fun x716 () Bool)
(declare-fun x1776 () Bool)
(declare-fun x1458 () Bool)
(declare-fun x4235 () Int)
(declare-fun x583 () Bool)
(declare-fun x310 () Bool)
(declare-fun x2487 () x5128)
(declare-fun x686 () Bool)
(declare-fun x1427 () Int)
(declare-fun x1589 () Int)
(declare-fun x260 () Bool)
(declare-fun x6196 () Int)
(declare-fun x1602 () Bool)
(declare-fun x331 () Int)
(declare-fun x5888 () x5128)
(declare-fun x1150 () Bool)
(declare-fun x3361 () Int)
(declare-fun x3288 () Int)
(declare-fun x5338 () Bool)
(declare-fun x4392 () Bool)
(declare-fun x6003 () Int)
(declare-fun x5747 () x5128)
(declare-fun x3172 () Int)
(declare-fun x4706 () Int)
(declare-fun x1887 () Int)
(declare-fun x4621 () Int)
(declare-fun x4015 () x5128)
(declare-fun x6037 () Bool)
(declare-fun x5135 () Bool)
(declare-fun x1848 () Int)
(declare-fun x1040 () Bool)
(declare-fun x3136 () Int)
(declare-fun x1204 () Int)
(declare-fun x4822 () Bool)
(declare-fun x1748 () Bool)
(declare-fun x5924 () Int)
(declare-fun x1144 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x3036 () Bool)
(declare-fun x93 () Int)
(declare-fun x1326 () Int)
(declare-fun x3429 () Bool)
(declare-fun x409 () Int)
(declare-fun x4752 () Bool)
(declare-fun x1116 () x5128)
(declare-fun x2831 (Int) Int)
(declare-fun x1766 () Bool)
(declare-fun x6258 () Bool)
(declare-fun x5469 () Int)
(declare-fun x1481 () Bool)
(declare-fun x3504 () Bool)
(declare-fun x5147 () Bool)
(declare-fun x5270 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x1414 () Bool)
(declare-fun x914 () Int)
(declare-fun x3850 () Int)
(declare-fun x4688 () Int)
(declare-fun x1619 () Int)
(declare-fun x1829 () Int)
(declare-fun x6289 () Bool)
(declare-fun x2943 () Int)
(declare-fun x4641 () Bool)
(declare-fun x5457 () Bool)
(declare-fun x5885 () Int)
(declare-fun x2918 () Bool)
(declare-fun x4510 () Bool)
(declare-fun x653 () Int)
(declare-fun x1762 () Int)
(declare-fun x2476 () Bool)
(declare-fun x4356 () Int)
(declare-fun x5239 () Int)
(declare-fun x3379 () Int)
(declare-fun x5701 () Int)
(declare-fun x3658 () Int)
(declare-fun x5002 () Int)
(declare-fun x4544 () Bool)
(declare-fun x2105 () Bool)
(declare-fun x2604 () Bool)
(declare-fun x288 () Bool)
(declare-fun x5091 () Int)
(declare-fun x281 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x613 () Int)
(declare-fun x1477 () Int)
(declare-fun x3751 () x5128)
(declare-fun x6315 () Int)
(declare-fun x2796 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x1615 () Int)
(declare-fun x943 () Bool)
(declare-fun x1456 () x5128)
(declare-fun x2970 () Bool)
(declare-fun x1440 () Int)
(declare-fun x121 () Bool)
(declare-fun x705 () Int)
(declare-fun x4968 () Int)
(declare-fun x1260 () Int)
(declare-fun x2920 () Int)
(declare-fun x2482 () Bool)
(declare-fun x3815 () Int)
(declare-fun x5145 () Int)
(declare-fun x5267 () Int)
(declare-fun x3185 () Bool)
(declare-fun x422 () Bool)
(declare-fun x652 () Int)
(declare-fun x3599 () Bool)
(declare-fun x5468 () Int)
(declare-fun x5370 () Bool)
(declare-fun x4001 () Bool)
(declare-fun x3400 () Bool)
(declare-fun x1457 () Int)
(declare-fun x224 () Bool)
(declare-fun x6165 (Int) Int)
(declare-fun x3833 () Int)
(declare-fun x1880 () Bool)
(declare-fun x6041 (Int) Int)
(declare-fun x6000 () Int)
(declare-fun x1016 () Bool)
(declare-fun x3944 () Int)
(declare-fun x1559 () Int)
(declare-fun x567 () Bool)
(declare-fun x5292 () Bool)
(declare-fun x1143 () x5128)
(declare-fun x4860 () Bool)
(declare-fun x3579 () Int)
(declare-fun x2511 () Bool)
(declare-fun x2310 () Bool)
(declare-fun x4795 () Int)
(declare-fun x1030 () Bool)
(declare-fun x1965 () Bool)
(declare-fun x6063 () Int)
(declare-fun x3623 () Bool)
(declare-fun x5250 () Int)
(declare-fun x1289 () Bool)
(declare-fun x5412 () Bool)
(declare-fun x3402 () Bool)
(declare-fun x5116 () Bool)
(declare-fun x4154 () Int)
(declare-fun x4762 () Bool)
(declare-fun x5978 () Bool)
(declare-fun x174 () Int)
(declare-fun x3675 () Bool)
(declare-fun x1223 () x5128)
(declare-fun x3997 () Bool)
(declare-fun x5003 () Int)
(declare-fun x5302 () Bool)
(declare-fun x4205 () Bool)
(declare-fun x2809 () Bool)
(declare-fun x541 () Int)
(declare-fun x3941 () Int)
(declare-fun x2628 () Int)
(declare-fun x5386 () Bool)
(declare-fun x2987 () Int)
(declare-fun x3341 () Int)
(declare-fun x279 () x5128)
(declare-fun x3506 () Bool)
(declare-fun x5877 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x3646 () Bool)
(declare-fun x3493 () Bool)
(declare-fun x5618 () Int)
(declare-fun x3270 () x5128)
(declare-fun x337 () Int)
(declare-fun x3310 () Bool)
(declare-fun x90 () Int)
(declare-fun x1408 () x5128)
(declare-fun x1507 () x5128)
(declare-fun x3572 () Bool)
(declare-fun x927 () Bool)
(declare-fun x997 () Bool)
(declare-fun x4609 () Int)
(declare-fun x4105 () Bool)
(declare-fun x5968 (x5128) Int)
(declare-fun x970 () Bool)
(declare-fun x6250 () Bool)
(declare-fun x6240 () Bool)
(declare-fun x1686 () Bool)
(declare-fun x1062 () x5128)
(declare-fun x2669 () Int)
(declare-fun x5906 () Int)
(declare-fun x2782 () Int)
(declare-fun x6359 () Int)
(declare-fun x4588 () Int)
(declare-fun x356 () Int)
(declare-fun x521 () Bool)
(declare-fun x1521 () Int)
(declare-fun x831 () Int)
(declare-fun x3932 () Int)
(declare-fun x3968 () Bool)
(declare-fun x478 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x5508 () Bool)
(declare-fun x839 () Bool)
(declare-fun x5547 () Int)
(declare-fun x3975 () Int)
(declare-fun x5920 () Int)
(declare-fun x4250 () Bool)
(declare-fun x2617 () Bool)
(declare-fun x1472 () Int)
(declare-fun x151 () Bool)
(declare-fun x3314 () Bool)
(declare-fun x6236 () x5128)
(declare-fun x4059 () Int)
(declare-fun x2558 () Bool)
(declare-fun x4157 () Int)
(declare-fun x3713 () Int)
(declare-fun x2230 () Int)
(declare-fun x710 () Int)
(declare-fun x12 () Int)
(declare-fun x3514 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x5956 () x5128)
(declare-fun x5688 () Bool)
(declare-fun x2720 () Bool)
(declare-fun x1643 () Int)
(declare-fun x3984 () Int)
(declare-fun x2160 () Int)
(declare-fun x5047 () Bool)
(declare-fun x27 () Bool)
(declare-fun x5280 () Bool)
(declare-fun x4260 () Bool)
(declare-fun x5082 () Int)
(declare-fun x975 () Int)
(declare-fun x6130 () Bool)
(declare-fun x5696 () x5128)
(declare-fun x5905 () Int)
(declare-fun x5019 () Bool)
(declare-fun x646 () Bool)
(declare-fun x2412 () Int)
(declare-fun x5385 () Int)
(declare-fun x2403 () Bool)
(declare-fun x5704 () Bool)
(declare-fun x4430 () Bool)
(declare-fun x3787 () Bool)
(declare-fun x1675 () Bool)
(declare-fun x5233 () Bool)
(declare-fun x4160 () Bool)
(declare-fun x1366 () Bool)
(declare-fun x514 () Bool)
(declare-fun x4106 () Bool)
(declare-fun x2095 () Bool)
(declare-fun x925 () Bool)
(declare-fun x3276 () Bool)
(declare-fun x2348 () Bool)
(declare-fun x4818 () Int)
(declare-fun x4797 () x5128)
(declare-fun x1363 () Int)
(declare-fun x2463 () x5128)
(declare-fun x2827 () Bool)
(declare-fun x2214 () Bool)
(declare-fun x2713 () Bool)
(declare-fun x3818 () Bool)
(declare-fun x2282 () Bool)
(declare-fun x6232 () x5128)
(declare-fun x1261 () Bool)
(declare-fun x4110 () Bool)
(declare-fun x4516 () Bool)
(declare-fun x4709 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x5929 () Bool)
(declare-fun x2871 () Bool)
(declare-fun x1554 () x5128)
(declare-fun x5334 () Bool)
(declare-fun x4041 () x5128)
(declare-fun x1750 () Bool)
(declare-fun x5979 () x5128)
(declare-fun x3855 () Bool)
(declare-fun x5123 () Int)
(declare-fun x5984 () Int)
(declare-fun x3281 () Bool)
(declare-fun x5628 () Bool)
(declare-fun x1264 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x2783 () Int)
(declare-fun x6217 () Int)
(declare-fun x4728 () Bool)
(declare-fun x731 () Bool)
(declare-fun x4595 () Bool)
(declare-fun x4501 () Int)
(declare-fun x2559 () Int)
(declare-fun x5709 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x4512 () Int)
(declare-fun x2561 () Bool)
(declare-fun x4783 () Int)
(declare-fun x3101 () Bool)
(declare-fun x69 () Bool)
(declare-fun x5733 () Int)
(declare-fun x2993 () Bool)
(declare-fun x5178 () Bool)
(declare-fun x3564 () Int)
(declare-fun x1308 () Int)
(declare-fun x1170 () Int)
(declare-fun x5836 () x5128)
(declare-fun x1781 () Bool)
(declare-fun x938 (x5128) Int)
(declare-fun x4203 () Bool)
(declare-fun x5986 () x5128)
(declare-fun x4334 () x5128)
(declare-fun x1142 () Int)
(declare-fun x773 () Bool)
(declare-fun x3423 () Bool)
(declare-fun x5778 () Int)
(declare-fun x1563 () Bool)
(declare-fun x4499 () Bool)
(declare-fun x1591 () Bool)
(declare-fun x1950 () Int)
(declare-fun x6304 () Bool)
(declare-fun x3406 () Int)
(declare-fun x5584 () Bool)
(declare-fun x930 () x5128)
(declare-fun x889 () Int)
(declare-fun x1814 () Bool)
(declare-fun x4753 () Bool)
(declare-fun x461 () x5128)
(declare-fun x2245 () Bool)
(declare-fun x897 () x5128)
(declare-fun x5558 () Bool)
(declare-fun x6344 () Bool)
(declare-fun x4948 () Int)
(declare-fun x5827 () Bool)
(declare-fun x2480 () Bool)
(declare-fun x1185 () Bool)
(declare-fun x4760 () Int)
(declare-fun x3416 () Bool)
(declare-fun x1516 () Bool)
(declare-fun x4044 () Bool)
(declare-fun x6029 () Bool)
(declare-fun x2253 () Bool)
(declare-fun x903 () Int)
(declare-fun x182 () Int)
(declare-fun x6158 () Bool)
(declare-fun x3048 () x5128)
(declare-fun x2257 () Bool)
(declare-fun x4784 () x5128)
(declare-fun x3720 () Bool)
(declare-fun x5695 () Bool)
(declare-fun x4633 () Int)
(declare-fun x1416 () x5128)
(declare-fun x2357 () Bool)
(declare-fun x2320 () Int)
(declare-fun x2127 () Bool)
(declare-fun x6009 () Int)
(declare-fun x5754 () Bool)
(declare-fun x3874 () Bool)
(declare-fun x5054 () Int)
(declare-fun x2250 () Bool)
(declare-fun x4460 () Bool)
(declare-fun x126 () Bool)
(declare-fun x2584 () Int)
(declare-fun x5622 () Int)
(declare-fun x5512 () Int)
(declare-fun x1964 () Int)
(declare-fun x741 () Bool)
(declare-fun x6100 () Int)
(declare-fun x4473 () Int)
(declare-fun x2350 () Bool)
(declare-fun x2137 () Bool)
(declare-fun x4197 () Bool)
(declare-fun x4681 () Bool)
(declare-fun x303 () x5128)
(declare-fun x2967 () Int)
(declare-fun x4134 () Bool)
(declare-fun x4925 () Bool)
(declare-fun x1739 () Int)
(declare-fun x4999 () Bool)
(declare-fun x5808 () Int)
(declare-fun x324 () x5128)
(declare-fun x1209 () Bool)
(declare-fun x5858 () Bool)
(declare-fun x5093 () Bool)
(declare-fun x986 () Bool)
(declare-fun x3877 () Bool)
(declare-fun x563 () Bool)
(declare-fun x284 () Int)
(declare-fun x1510 () Int)
(declare-fun x4834 () Bool)
(declare-fun x6065 () Bool)
(declare-fun x1296 () Int)
(declare-fun x299 () Int)
(declare-fun x2138 () Int)
(declare-fun x3690 () Bool)
(declare-fun x2361 () Int)
(declare-fun x2543 () Bool)
(declare-fun x251 () Int)
(declare-fun x3610 () Bool)
(declare-fun x4130 () Int)
(declare-fun x6168 () Bool)
(declare-fun x4143 () Bool)
(declare-fun x5680 () Bool)
(declare-fun x2212 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x1683 () Int)
(declare-fun x2919 () Bool)
(declare-fun x924 () Bool)
(declare-fun x787 () Int)
(declare-fun x2229 () Bool)
(declare-fun x3681 () Bool)
(declare-fun x198 () Bool)
(declare-fun x1975 () Bool)
(declare-fun x4423 () Bool)
(declare-fun x3014 () Bool)
(declare-fun x6278 () Int)
(declare-fun x2192 () Int)
(declare-fun x2611 () Int)
(declare-fun x3244 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x2733 () Int)
(declare-fun x4668 () Int)
(declare-fun x4232 () Bool)
(declare-fun x4699 () Bool)
(declare-fun x5455 () x5128)
(declare-fun x6080 () Int)
(declare-fun x1971 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x4383 () Int)
(declare-fun x5714 () Bool)
(declare-fun x4290 () Int)
(declare-fun x402 () Bool)
(declare-fun x2431 () Bool)
(declare-fun x4729 () Int)
(declare-fun x3919 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x2313 () Bool)
(declare-fun x2332 () Bool)
(declare-fun x6136 () x5128)
(declare-fun x2434 () Int)
(declare-fun x4659 () Bool)
(declare-fun x1961 () Int)
(declare-fun x5897 () Bool)
(declare-fun x928 () x5128)
(declare-fun x6248 () Bool)
(declare-fun x3225 () Bool)
(declare-fun x4586 () Int)
(declare-fun x4770 () Int)
(declare-fun x3118 () Bool)
(declare-fun x1737 () Bool)
(declare-fun x4933 () Bool)
(declare-fun x2303 () Bool)
(declare-fun x4477 () Bool)
(declare-fun x192 () Int)
(declare-fun x5601 () Bool)
(declare-fun x1502 () Bool)
(declare-fun x808 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x4930 () Bool)
(declare-fun x5736 () Int)
(declare-fun x3981 () Int)
(declare-fun x1248 () Int)
(declare-fun x2717 () Int)
(declare-fun x1109 () Bool)
(declare-fun x4017 () x5128)
(declare-fun x1200 () Bool)
(declare-fun x2207 () Bool)
(declare-fun x3230 () Bool)
(declare-fun x1146 () Bool)
(declare-fun x2770 () Int)
(declare-fun x1866 () Bool)
(declare-fun x2860 () x5128)
(declare-fun x3484 () Int)
(declare-fun x4086 () Int)
(declare-fun x40 () Int)
(declare-fun x6151 () Bool)
(declare-fun x4474 () Bool)
(declare-fun x5640 (Int) Int)
(declare-fun x1186 () Int)
(declare-fun x1249 () Int)
(declare-fun x4231 () Bool)
(declare-fun x6129 () Bool)
(declare-fun x5287 () Int)
(declare-fun x2751 () Bool)
(declare-fun x1453 () x5128)
(declare-fun x1634 () Bool)
(declare-fun x4799 () Bool)
(declare-fun x6026 () Bool)
(declare-fun x1849 (Int Int) Int)
(declare-fun x4610 () Bool)
(declare-fun x4735 () Bool)
(declare-fun x5408 () Int)
(declare-fun x677 () x5128)
(declare-fun x497 () Int)
(declare-fun x1038 () Bool)
(declare-fun x966 () Int)
(declare-fun x3956 () Bool)
(declare-fun x1014 () Bool)
(declare-fun x2874 () Bool)
(declare-fun x510 () Int)
(declare-fun x6164 () Int)
(declare-fun x2188 () Bool)
(declare-fun x5041 () Int)
(declare-fun x4716 () Bool)
(declare-fun x3397 () Bool)
(declare-fun x5514 () Bool)
(declare-fun x2915 () Int)
(declare-fun x1932 () Int)
(declare-fun x3518 () Bool)
(declare-fun x5418 () Bool)
(declare-fun x3217 () Bool)
(declare-fun x1504 () Int)
(declare-fun x3633 () Bool)
(declare-fun x678 () Bool)
(declare-fun x455 () x5128)
(declare-fun x999 () Bool)
(declare-fun x4403 () Int)
(declare-fun x687 () Int)
(declare-fun x1093 () Bool)
(declare-fun x5050 () Int)
(declare-fun x1509 () Bool)
(declare-fun x6103 () Int)
(declare-fun x2807 () Bool)
(declare-fun x46 () Bool)
(declare-fun x4032 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x2063 () Bool)
(declare-fun x605 () Int)
(declare-fun x3643 () Bool)
(declare-fun x632 () Int)
(declare-fun x5427 () Int)
(declare-fun x3557 () Bool)
(declare-fun x456 () Bool)
(declare-fun x4287 () x5128)
(declare-fun x1452 () Bool)
(declare-fun x6008 () Int)
(declare-fun x2129 () Int)
(declare-fun x1373 () Bool)
(declare-fun x1754 () Int)
(declare-fun x1600 () Bool)
(declare-fun x6122 () Int)
(declare-fun x3770 () Int)
(declare-fun x5152 () Bool)
(declare-fun x6342 () x5128)
(declare-fun x2666 () Bool)
(declare-fun x2634 () Bool)
(declare-fun x713 () Bool)
(declare-fun x2767 () Bool)
(declare-fun x4259 () x5128)
(declare-fun x4928 () Bool)
(declare-fun x4220 () Bool)
(declare-fun x2673 () Bool)
(declare-fun x3973 () Bool)
(declare-fun x5195 () Bool)
(declare-fun x4076 () Int)
(declare-fun x3266 () Bool)
(declare-fun x1566 () Int)
(declare-fun x6020 () Int)
(declare-fun x1035 () Bool)
(declare-fun x1438 () Int)
(declare-fun x4759 () Int)
(declare-fun x1833 () Bool)
(declare-fun x6202 () Bool)
(declare-fun x663 () Bool)
(declare-fun x2134 () Bool)
(declare-fun x4981 () Bool)
(declare-fun x3846 () Bool)
(declare-fun x4562 () Int)
(declare-fun x1065 () Int)
(declare-fun x5952 () Bool)
(declare-fun x2046 () Bool)
(declare-fun x4718 () Int)
(declare-fun x3462 () Int)
(declare-fun x2572 () Int)
(declare-fun x2200 () Bool)
(declare-fun x3182 (x5128) Int)
(declare-fun x5261 () x5128)
(declare-fun x5936 () Int)
(declare-fun x4570 () Bool)
(declare-fun x5959 () Bool)
(declare-fun x1451 () Bool)
(declare-fun x4026 () Int)
(declare-fun x753 () Int)
(declare-fun x2255 () Int)
(declare-fun x1919 () Bool)
(declare-fun x1899 () Bool)
(declare-fun x443 (x5128) Int)
(declare-fun x4993 () Bool)
(declare-fun x3769 () Int)
(declare-fun x3616 () Bool)
(declare-fun x5053 () Int)
(declare-fun x1155 () Bool)
(declare-fun x3464 () Bool)
(declare-fun x2757 () Bool)
(declare-fun x2875 () Bool)
(declare-fun x3644 () Bool)
(declare-fun x99 () Bool)
(declare-fun x2955 () Bool)
(declare-fun x3689 () Bool)
(declare-fun x4606 () Bool)
(declare-fun x788 () Int)
(declare-fun x316 () Bool)
(declare-fun x4901 () Int)
(declare-fun x5496 () Bool)
(declare-fun x49 () Bool)
(declare-fun x2121 () Int)
(declare-fun x793 () Bool)
(declare-fun x2049 () Int)
(declare-fun x312 () Int)
(declare-fun x404 () Int)
(declare-fun x942 () Bool)
(declare-fun x4070 () Bool)
(declare-fun x2898 () Bool)
(declare-fun x3284 () Int)
(declare-fun x1512 () Bool)
(declare-fun x4593 () Bool)
(declare-fun x289 () Int)
(declare-fun x946 () Bool)
(declare-fun x6290 () Int)
(declare-fun x2327 () Bool)
(declare-fun x6224 () Bool)
(declare-fun x1773 () Bool)
(declare-fun x158 () Bool)
(declare-fun x801 () Bool)
(declare-fun x5155 () x5128)
(declare-fun x3061 () Int)
(declare-fun x2120 () Int)
(declare-fun x2995 () Bool)
(declare-fun x3327 () Bool)
(declare-fun x4170 () Bool)
(declare-fun x4879 () Bool)
(declare-fun x5550 () x5128)
(declare-fun x2536 () Bool)
(declare-fun x138 () Bool)
(declare-fun x3551 () Bool)
(declare-fun x5769 () Bool)
(declare-fun x507 () Bool)
(declare-fun x5981 () Bool)
(declare-fun x3929 () Bool)
(declare-fun x4393 () Int)
(declare-fun x3446 () Int)
(declare-fun x1520 () Bool)
(declare-fun x2620 () Bool)
(declare-fun x4364 () Bool)
(declare-fun x4521 () x5128)
(declare-fun x2833 () Bool)
(declare-fun x910 () Int)
(declare-fun x5481 () Int)
(declare-fun x3534 () x5128)
(declare-fun x1228 () Int)
(declare-fun x467 () Bool)
(declare-fun x4461 () Int)
(declare-fun x872 () Bool)
(declare-fun x2883 () Bool)
(declare-fun x5962 () Int)
(declare-fun x1599 () x5128)
(declare-fun x1515 () Bool)
(declare-fun x5213 () Bool)
(declare-fun x3308 () Int)
(declare-fun x2045 () x5128)
(declare-fun x2344 () x5128)
(declare-fun x4642 () Int)
(declare-fun x1095 () Bool)
(declare-fun x6330 () Int)
(declare-fun x178 () Int)
(declare-fun x5399 () x5128)
(declare-fun x3961 () x5128)
(declare-fun x501 () Bool)
(declare-fun x2735 () Bool)
(declare-fun x4672 () Bool)
(declare-fun x674 () Int)
(declare-fun x3688 () Int)
(declare-fun x3121 () x5128)
(declare-fun x1613 () Bool)
(declare-fun x5756 () Int)
(declare-fun x1846 () Bool)
(declare-fun x1677 () Int)
(declare-fun x1315 () Int)
(declare-fun x5381 () Bool)
(declare-fun x3399 () Int)
(declare-fun x2765 () Bool)
(declare-fun x564 () Bool)
(declare-fun x2914 () Int)
(declare-fun x1324 () Bool)
(declare-fun x5942 () Bool)
(declare-fun x2356 () Int)
(declare-fun x2524 () Bool)
(declare-fun x6205 () Int)
(declare-fun x3367 () Int)
(declare-fun x4353 () x5128)
(declare-fun x3478 () Bool)
(declare-fun x3043 () Int)
(declare-fun x5025 () Bool)
(declare-fun x3703 () Int)
(declare-fun x3538 () Bool)
(declare-fun x1896 () Int)
(declare-fun x5964 () Bool)
(declare-fun x1936 () Int)
(declare-fun x2941 () Int)
(declare-fun x4941 () Bool)
(declare-fun x648 () Int)
(declare-fun x5245 () Int)
(declare-fun x2499 () Bool)
(declare-fun x35 () Bool)
(declare-fun x977 () x5128)
(declare-fun x3704 () Bool)
(declare-fun x5805 () Bool)
(declare-fun x4191 () Bool)
(declare-fun x5518 () Bool)
(declare-fun x3415 () Int)
(declare-fun x6226 () Bool)
(declare-fun x5071 () Bool)
(declare-fun x1564 () Int)
(declare-fun x4942 () Bool)
(declare-fun x1221 () Int)
(declare-fun x4479 () Bool)
(declare-fun x2295 () Bool)
(declare-fun x2638 () Int)
(declare-fun x399 () x5128)
(declare-fun x2044 () Bool)
(declare-fun x1497 () Bool)
(declare-fun x5522 () Bool)
(declare-fun x763 () Bool)
(declare-fun x3015 () Int)
(declare-fun x2554 () Int)
(declare-fun x6048 () x5128)
(declare-fun x4992 () Bool)
(declare-fun x989 () x5128)
(declare-fun x2265 () Bool)
(declare-fun x2035 () Bool)
(declare-fun x498 () Int)
(declare-fun x546 () Int)
(declare-fun x429 () Int)
(declare-fun x6277 () Int)
(declare-fun x2557 () Int)
(declare-fun x3656 () Bool)
(declare-fun x66 () Int)
(declare-fun x864 () Bool)
(declare-fun x718 () Bool)
(declare-fun x6114 () x5128)
(declare-fun x5293 () Int)
(declare-fun x1725 () Bool)
(declare-fun x2926 () Int)
(declare-fun x1214 () Bool)
(declare-fun x4087 () Bool)
(declare-fun x322 () Int)
(declare-fun x25 () Bool)
(declare-fun x1496 () Bool)
(declare-fun x1460 () Int)
(declare-fun x1795 () Int)
(declare-fun x1743 () Int)
(declare-fun x1374 () Bool)
(declare-fun x3275 () Bool)
(declare-fun x5074 () Int)
(declare-fun x4638 () Int)
(declare-fun x4444 () Int)
(declare-fun x3559 () Bool)
(declare-fun x3827 () Bool)
(declare-fun x1327 () Int)
(declare-fun x3916 () Bool)
(declare-fun x5051 () Int)
(declare-fun x2615 () Int)
(declare-fun x3700 () Bool)
(declare-fun x2488 () x5128)
(declare-fun x3619 () Bool)
(declare-fun x1926 () x5128)
(declare-fun x5932 () Bool)
(declare-fun x4987 () x5128)
(declare-fun x1293 () Bool)
(declare-fun x5771 () Int)
(declare-fun x4669 () Int)
(declare-fun x816 () x5128)
(declare-fun x6209 () Bool)
(declare-fun x189 () Bool)
(declare-fun x1733 () Int)
(declare-fun x4228 () Int)
(declare-fun x3821 () Bool)
(declare-fun x2516 () Bool)
(declare-fun x533 () Bool)
(declare-fun x786 () Bool)
(declare-fun x3511 () Bool)
(declare-fun x4801 () Int)
(declare-fun x371 () Bool)
(declare-fun x5405 () x5128)
(declare-fun x3948 () Int)
(declare-fun x2937 () Bool)
(declare-fun x722 () Bool)
(declare-fun x3811 () Int)
(declare-fun x2680 () Int)
(declare-fun x2325 () Bool)
(declare-fun x5998 () x5128)
(declare-fun x4841 () Bool)
(declare-fun x6187 () Int)
(declare-fun x96 () Bool)
(declare-fun x562 () Bool)
(declare-fun x2844 () Int)
(declare-fun x5908 () Bool)
(declare-fun x647 () Bool)
(declare-fun x3456 () Bool)
(declare-fun x5851 () Bool)
(declare-fun x315 () Int)
(declare-fun x2625 () Bool)
(declare-fun x4763 () Bool)
(declare-fun x523 () Int)
(declare-fun x921 () Int)
(declare-fun x2197 () Bool)
(declare-fun x3373 () Int)
(declare-fun x4443 () Bool)
(declare-fun x2318 () Bool)
(declare-fun x3126 () Int)
(declare-fun x2489 () Bool)
(declare-fun x4316 () Bool)
(declare-fun x845 () Bool)
(declare-fun x3561 () Int)
(declare-fun x2222 () Int)
(declare-fun x183 () Bool)
(declare-fun x2703 () Bool)
(declare-fun x3018 () Int)
(declare-fun x1187 () Int)
(declare-fun x5721 () Bool)
(declare-fun x1529 () Bool)
(declare-fun x184 () Bool)
(declare-fun x2523 () Bool)
(declare-fun x5235 () Bool)
(declare-fun x6141 () Bool)
(declare-fun x1862 () Int)
(declare-fun x2891 () Bool)
(declare-fun x5176 () Bool)
(declare-fun x1904 () Bool)
(declare-fun x2568 () Bool)
(declare-fun x4057 () Bool)
(declare-fun x2145 () Bool)
(declare-fun x2074 () Int)
(declare-fun x5461 () Int)
(declare-fun x346 () Int)
(declare-fun x891 () Int)
(declare-fun x5308 () Bool)
(declare-fun x4158 () Int)
(declare-fun x6323 () Bool)
(declare-fun x3060 () Bool)
(declare-fun x2233 () Bool)
(declare-fun x2729 () Int)
(declare-fun x2490 () Bool)
(declare-fun x209 () Int)
(declare-fun x4506 () Int)
(declare-fun x5346 () Bool)
(declare-fun x5677 () Bool)
(declare-fun x3883 () Bool)
(declare-fun x3280 () Bool)
(declare-fun x2829 () Int)
(declare-fun x5973 () Int)
(declare-fun x3805 () Bool)
(declare-fun x5428 () Bool)
(declare-fun x2958 () Bool)
(declare-fun x941 () Bool)
(declare-fun x1295 () Int)
(declare-fun x3385 () Int)
(declare-fun x1593 () Bool)
(declare-fun x5319 () Int)
(declare-fun x3773 () Bool)
(declare-fun x5669 () Int)
(declare-fun x465 () Bool)
(declare-fun x5077 () Int)
(declare-fun x2909 () Bool)
(declare-fun x466 () Bool)
(declare-fun x2372 () Bool)
(declare-fun x274 () Bool)
(declare-fun x2091 () Int)
(declare-fun x5652 () Int)
(declare-fun x2728 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x1871 () Bool)
(declare-fun x70 () Int)
(declare-fun x3082 () x5128)
(declare-fun x3259 () Int)
(declare-fun x3747 () Int)
(declare-fun x2674 () Bool)
(declare-fun x4249 () Bool)
(declare-fun x1629 () Bool)
(declare-fun x5289 () Int)
(declare-fun x3532 () Int)
(declare-fun x6294 () x5128)
(declare-fun x5162 () Bool)
(declare-fun x1867 () Bool)
(declare-fun x5970 () Bool)
(declare-fun x427 () Bool)
(declare-fun x3041 () Bool)
(declare-fun x4340 () Bool)
(declare-fun x762 () Bool)
(declare-fun x4910 () Int)
(declare-fun x3983 () Int)
(declare-fun x499 () x5128)
(declare-fun x3305 () Int)
(declare-fun x227 () Bool)
(declare-fun x1959 () Bool)
(declare-fun x382 () Bool)
(declare-fun x956 () Bool)
(declare-fun x2059 () Int)
(declare-fun x911 () Int)
(declare-fun x5350 () Int)
(declare-fun x3192 () Bool)
(declare-fun x1620 () Bool)
(declare-fun x3565 () x5128)
(declare-fun x2061 () Bool)
(declare-fun x3657 () Bool)
(declare-fun x843 () Bool)
(declare-fun x5739 () Int)
(declare-fun x5864 () Bool)
(declare-fun x4523 () Bool)
(declare-fun x2393 () x5128)
(declare-fun x4721 () Bool)
(declare-fun x5856 () Int)
(declare-fun x1108 () Bool)
(declare-fun x3306 () Bool)
(declare-fun x2522 () Bool)
(declare-fun x3364 () Bool)
(declare-fun x3184 () Int)
(declare-fun x3069 () Bool)
(declare-fun x4216 () Int)
(declare-fun x3396 () Bool)
(declare-fun x4218 () Bool)
(declare-fun x368 () Int)
(declare-fun x3021 () Int)
(declare-fun x2696 () Bool)
(declare-fun x2570 () Int)
(declare-fun x4645 () Int)
(declare-fun x3381 () Bool)
(declare-fun x3129 () Bool)
(declare-fun x1546 () Bool)
(declare-fun x2174 () Int)
(declare-fun x2173 () Int)
(declare-fun x4482 () x5128)
(declare-fun x2147 () Int)
(declare-fun x267 () Bool)
(declare-fun x2661 () Bool)
(declare-fun x2364 () Bool)
(declare-fun x4710 () Bool)
(declare-fun x769 () Bool)
(declare-fun x6211 () Bool)
(declare-fun x2982 () Int)
(declare-fun x38 () Bool)
(declare-fun x5148 () Int)
(declare-fun x5542 () Int)
(declare-fun x5363 () Int)
(declare-fun x604 () Int)
(declare-fun x2592 () Bool)
(declare-fun x3461 () Bool)
(declare-fun x5945 () Bool)
(declare-fun x3624 () Int)
(declare-fun x1312 () x5128)
(declare-fun x2618 () Bool)
(declare-fun x2612 () Int)
(declare-fun x3201 () x5128)
(declare-fun x3109 () Bool)
(declare-fun x365 () Int)
(declare-fun x4907 () Bool)
(declare-fun x3781 () x5128)
(declare-fun x6365 () Int)
(declare-fun x261 () Int)
(declare-fun x2996 () Bool)
(declare-fun x919 () x5128)
(declare-fun x2984 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x234 () Bool)
(declare-fun x5699 () Bool)
(declare-fun x1930 () Int)
(declare-fun x3552 () x5128)
(declare-fun x3817 () Bool)
(declare-fun x4537 () Int)
(declare-fun x5277 () Bool)
(declare-fun x4486 () Bool)
(declare-fun x1688 () x5128)
(declare-fun x1535 () Int)
(declare-fun x5625 () Bool)
(declare-fun x5058 () Bool)
(declare-fun x500 () Bool)
(declare-fun x2810 () Int)
(declare-fun x1054 () Bool)
(declare-fun x6068 () x5128)
(declare-fun x3105 () x5128)
(declare-fun x4109 () Int)
(declare-fun x3027 () Bool)
(declare-fun x2297 () Bool)
(declare-fun x1555 () x5128)
(declare-fun x4552 () Bool)
(declare-fun x2041 () Int)
(declare-fun x4129 () Bool)
(declare-fun x4275 () Bool)
(declare-fun x4850 () Bool)
(declare-fun x6093 () Bool)
(declare-fun x2375 () Bool)
(declare-fun x1090 () Int)
(declare-fun x1206 () Int)
(declare-fun x3763 () Bool)
(declare-fun x6153 () x5128)
(declare-fun x1229 () x5128)
(declare-fun x5113 () Int)
(declare-fun x50 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x4574 () Bool)
(declare-fun x1334 () Bool)
(declare-fun x1702 () Bool)
(declare-fun x4200 () Int)
(declare-fun x2936 () Bool)
(declare-fun x1722 () Bool)
(declare-fun x3072 () Bool)
(declare-fun x1834 () Bool)
(declare-fun x1236 () Int)
(declare-fun x21 () Int)
(declare-fun x1537 () Int)
(declare-fun x2648 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x2959 () Bool)
(declare-fun x4029 () Bool)
(declare-fun x574 () Bool)
(declare-fun x6229 () Bool)
(declare-fun x4150 () Int)
(declare-fun x1884 () x5128)
(declare-fun x239 () Int)
(declare-fun x6189 () Bool)
(declare-fun x973 () x5128)
(declare-fun x5375 () Bool)
(declare-fun x4173 () Int)
(declare-fun x2006 () Bool)
(declare-fun x915 () Int)
(declare-fun x2786 () Bool)
(declare-fun x1118 () Bool)
(declare-fun x6333 () Bool)
(declare-fun x6341 () Int)
(declare-fun x4581 () Bool)
(declare-fun x431 () Int)
(declare-fun x844 () x5128)
(declare-fun x789 () Bool)
(declare-fun x2850 () Bool)
(declare-fun x6107 () Int)
(declare-fun x5466 () Bool)
(declare-fun x3010 () Int)
(declare-fun x1931 () Bool)
(declare-fun x6077 () Bool)
(declare-fun x5420 () Int)
(declare-fun x4961 () Bool)
(declare-fun x3755 () Bool)
(declare-fun x4471 () Int)
(declare-fun x612 () Int)
(declare-fun x6094 () Bool)
(declare-fun x898 () Bool)
(declare-fun x2549 (x5128) Int)
(declare-fun x6134 () Bool)
(declare-fun x1709 () Int)
(declare-fun x4802 () Bool)
(declare-fun x2123 () Int)
(declare-fun x2486 () Int)
(declare-fun x2031 () Bool)
(declare-fun x2769 (x5128) Int)
(declare-fun x5486 () Int)
(declare-fun x6118 () x5128)
(declare-fun x5340 (x5128) Int)
(declare-fun x4780 () Int)
(declare-fun x3789 () Bool)
(declare-fun x3071 () x5128)
(declare-fun x2828 () Bool)
(declare-fun x6244 () Bool)
(declare-fun x5083 () Bool)
(declare-fun x5285 () x5128)
(declare-fun x1068 () Bool)
(declare-fun x2895 () Int)
(declare-fun x2336 () Bool)
(declare-fun x1320 () Int)
(declare-fun x4826 () Bool)
(declare-fun x4462 () Bool)
(declare-fun x1017 () Int)
(declare-fun x4572 () Bool)
(declare-fun x6203 () Bool)
(declare-fun x535 () Int)
(declare-fun x5494 () Bool)
(declare-fun x3032 () Int)
(declare-fun x1178 () Bool)
(declare-fun x727 () Int)
(declare-fun x1934 () Int)
(declare-fun x1171 () Int)
(declare-fun x5549 () Int)
(declare-fun x1045 () Int)
(declare-fun x5208 () Int)
(declare-fun x1860 () Int)
(declare-fun x1910 () Int)
(declare-fun x798 () Int)
(declare-fun x1685 () Bool)
(declare-fun x2853 () Int)
(declare-fun x425 () x5128)
(declare-fun x570 () Bool)
(declare-fun x5770 () Bool)
(declare-fun x3953 () Bool)
(declare-fun x6089 () Int)
(declare-fun x5209 () Bool)
(declare-fun x5132 () Bool)
(declare-fun x3383 () Bool)
(declare-fun x4869 () Int)
(declare-fun x80 () Bool)
(declare-fun x236 () Bool)
(declare-fun x511 () Int)
(declare-fun x5832 () Int)
(declare-fun x1368 () Int)
(declare-fun x2435 () Bool)
(declare-fun x5871 () Bool)
(declare-fun x1448 () Bool)
(declare-fun x5099 () x5128)
(declare-fun x6105 () Int)
(declare-fun x391 () Bool)
(declare-fun x203 () Bool)
(declare-fun x3226 () x5128)
(declare-fun x4065 () Bool)
(declare-fun x701 () Bool)
(declare-fun x6106 () Bool)
(declare-fun x1745 () Int)
(declare-fun x1226 () Bool)
(declare-fun x3523 () Bool)
(declare-fun x1598 () Int)
(declare-fun x5577 () Bool)
(declare-fun x6097 () Int)
(declare-fun x5471 () Int)
(declare-fun x2481 () Int)
(declare-fun x5588 () Int)
(declare-fun x319 () Bool)
(declare-fun x457 () Bool)
(declare-fun x3110 () Int)
(declare-fun x3272 () Bool)
(declare-fun x5215 () Bool)
(declare-fun x1869 () Int)
(declare-fun x1027 () Bool)
(declare-fun x358 () Int)
(declare-fun x3779 () Bool)
(declare-fun x5698 () Bool)
(declare-fun x2483 () Bool)
(declare-fun x735 () Bool)
(declare-fun x3500 () Int)
(declare-fun x5746 () Bool)
(declare-fun x2114 () Bool)
(declare-fun x4181 () Bool)
(declare-fun x5301 () Int)
(declare-fun x965 () Bool)
(declare-fun x5855 () Bool)
(declare-fun x3666 () Int)
(declare-fun x5061 () Bool)
(declare-fun x2079 () Bool)
(declare-fun x948 () Int)
(declare-fun x1731 () Bool)
(declare-fun x1157 () Int)
(declare-fun x5927 () Bool)
(declare-fun x103 () x5128)
(declare-fun x4178 () x5128)
(declare-fun x557 () x5128)
(declare-fun x1684 () Bool)
(declare-fun x3585 () Bool)
(declare-fun x5035 () Bool)
(declare-fun x61 () Bool)
(declare-fun x4488 () Bool)
(declare-fun x6200 () Int)
(declare-fun x2337 () Bool)
(declare-fun x3303 () Bool)
(declare-fun x4579 () x5128)
(declare-fun x4268 () Bool)
(declare-fun x328 () Int)
(declare-fun x3645 () Bool)
(declare-fun x1176 () Int)
(declare-fun x6219 () Bool)
(declare-fun x102 () Bool)
(declare-fun x5462 () Int)
(declare-fun x692 () Bool)
(declare-fun x5059 () Bool)
(declare-fun x360 () Int)
(declare-fun x2213 () Bool)
(declare-fun x3137 () Bool)
(declare-fun x237 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x4805 () Bool)
(declare-fun x4315 () Bool)
(declare-fun x1329 () Int)
(declare-fun x4694 () Bool)
(declare-fun x3918 () Int)
(declare-fun x5646 () Bool)
(declare-fun x3793 () Int)
(declare-fun x5229 () Bool)
(declare-fun x4156 () Bool)
(declare-fun x3171 () Int)
(declare-fun x4022 () Bool)
(declare-fun x2175 (x5128) Int)
(declare-fun x1369 () Int)
(declare-fun x4782 () Bool)
(declare-fun x5018 () Int)
(declare-fun x6255 () Bool)
(declare-fun x1928 (Int) Int)
(declare-fun x1855 () Bool)
(declare-fun x76 () Int)
(declare-fun x1205 () Int)
(declare-fun x1892 () Bool)
(declare-fun x3297 () Bool)
(declare-fun x4033 () x5128)
(declare-fun x945 () Bool)
(declare-fun x4127 () Bool)
(declare-fun x348 () Int)
(declare-fun x3536 () Bool)
(declare-fun x4437 () Int)
(declare-fun x1998 () Int)
(declare-fun x117 () Bool)
(declare-fun x2185 () Bool)
(declare-fun x1673 () Int)
(declare-fun x658 () Bool)
(declare-fun x3533 () Bool)
(declare-fun x3597 () Bool)
(declare-fun x1210 (x5128) Int)
(declare-fun x1086 (Int) Int)
(declare-fun x4417 () Bool)
(declare-fun x3762 () Bool)
(declare-fun x134 () x5128)
(declare-fun x4281 () Int)
(declare-fun x5232 () Bool)
(declare-fun x3963 () Bool)
(declare-fun x6012 () Bool)
(declare-fun x2878 () Int)
(declare-fun x6150 () Int)
(declare-fun x5902 () Bool)
(declare-fun x4135 () Int)
(declare-fun x2893 () Int)
(declare-fun x1560 (x5128) Int)
(declare-fun x3668 () Int)
(declare-fun x82 () Bool)
(declare-fun x1332 () Bool)
(declare-fun x1584 () Int)
(declare-fun x1652 () Bool)
(declare-fun x972 () Bool)
(declare-fun x6186 () Bool)
(declare-fun x5349 () Int)
(declare-fun x1770 () Bool)
(declare-fun x2521 () Int)
(declare-fun x4719 () Bool)
(declare-fun x4990 () Bool)
(declare-fun x2219 () Int)
(declare-fun x3098 () Bool)
(declare-fun x4010 () Bool)
(declare-fun x4905 () Bool)
(declare-fun x6337 () Int)
(declare-fun x2446 () Bool)
(declare-fun x4568 () Bool)
(declare-fun x586 () Bool)
(declare-fun x5544 () Int)
(declare-fun x171 () Bool)
(declare-fun x3927 () Bool)
(declare-fun x3 () Bool)
(declare-fun x1067 (x5128) Int)
(declare-fun x4511 () Bool)
(declare-fun x767 () Bool)
(declare-fun x4489 () Int)
(declare-fun x3695 () Bool)
(declare-fun x764 () Bool)
(declare-fun x2290 () Bool)
(declare-fun x581 () Bool)
(declare-fun x4048 () Bool)
(declare-fun x1874 () Bool)
(declare-fun x78 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x5886 () Bool)
(declare-fun x1197 () Int)
(declare-fun x250 () Bool)
(declare-fun x4495 () Int)
(declare-fun x2877 () Int)
(declare-fun x6297 () Bool)
(declare-fun x2865 () Bool)
(declare-fun x4067 () Int)
(declare-fun x842 () Bool)
(declare-fun x1958 () x5128)
(declare-fun x3931 () Int)
(declare-fun x3350 () Bool)
(declare-fun x2721 () Bool)
(declare-fun x3816 () Int)
(declare-fun x1163 () Int)
(declare-fun x243 () Int)
(declare-fun x3881 () Int)
(declare-fun x3515 () Bool)
(declare-fun x5459 () Bool)
(declare-fun x852 () Bool)
(declare-fun x4291 () Bool)
(declare-fun x6288 () Int)
(declare-fun x5868 () Int)
(declare-fun x1464 () Bool)
(declare-fun x726 () Int)
(declare-fun x4256 () Bool)
(declare-fun x709 () Int)
(declare-fun x587 () Bool)
(declare-fun x556 () x5128)
(declare-fun x6001 () Bool)
(declare-fun x3491 () Bool)
(declare-fun x4426 () Bool)
(declare-fun x2198 () Int)
(declare-fun x2132 () Bool)
(declare-fun x1594 () Bool)
(declare-fun x1925 () x5128)
(declare-fun x565 () Bool)
(declare-fun x4140 () Int)
(declare-fun x2974 () x5128)
(declare-fun x89 () Bool)
(declare-fun x6318 () Bool)
(declare-fun x2818 () Int)
(declare-fun x3198 () Int)
(declare-fun x5414 () Bool)
(declare-fun x3860 () Bool)
(declare-fun x4768 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x4355 () Bool)
(declare-fun x841 () x5128)
(declare-fun x2013 () Bool)
(declare-fun x4166 () Bool)
(declare-fun x5649 () Int)
(declare-fun x917 (Int) Int)
(declare-fun x3692 () Bool)
(declare-fun x1916 () Int)
(declare-fun x4754 () x5128)
(declare-fun x1265 () Bool)
(declare-fun x193 () Bool)
(declare-fun x2712 () Int)
(declare-fun x3512 () Bool)
(declare-fun x1099 () x5128)
(declare-fun x2965 () Bool)
(declare-fun x1281 () x5128)
(declare-fun x168 () x5128)
(declare-fun x5281 () Bool)
(declare-fun x1826 () Bool)
(declare-fun x5620 () Int)
(declare-fun x2658 () x5128)
(declare-fun x3832 () Bool)
(declare-fun x681 () Bool)
(declare-fun x4514 () Bool)
(declare-fun x5750 () Int)
(declare-fun x4779 () x5128)
(declare-fun x3596 () Int)
(declare-fun x6174 () Bool)
(declare-fun x3945 () x5128)
(declare-fun x5258 () Int)
(declare-fun x4279 () Bool)
(declare-fun x5976 () Bool)
(declare-fun x4128 () Bool)
(declare-fun x4091 () Bool)
(declare-fun x5828 () Bool)
(declare-fun x2413 () Int)
(declare-fun x4397 () Bool)
(declare-fun x3847 () Int)
(declare-fun x4049 () Bool)
(declare-fun x5501 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x1763 () Bool)
(declare-fun x6313 () Int)
(declare-fun x5606 () Bool)
(declare-fun x2165 () Bool)
(declare-fun x1624 () Int)
(declare-fun x6340 () x5128)
(declare-fun x2603 () Bool)
(declare-fun x1747 () Int)
(declare-fun x3891 () Bool)
(declare-fun x5446 () Int)
(declare-fun x1526 () Int)
(declare-fun x4561 () Int)
(declare-fun x5615 () Int)
(declare-fun x2399 () Bool)
(declare-fun x1402 () Int)
(declare-fun x3501 () Int)
(declare-fun x5534 () Bool)
(declare-fun x2816 () Int)
(declare-fun x206 () Int)
(declare-fun x3142 () Int)
(declare-fun x3476 () Bool)
(declare-fun x2994 () x5128)
(declare-fun x560 () x5128)
(declare-fun x4194 () Bool)
(declare-fun x2289 () x5128)
(declare-fun x3078 () x5128)
(declare-fun x5880 () Int)
(declare-fun x1729 () Int)
(declare-fun x4360 () Int)
(declare-fun x5106 () Bool)
(declare-fun x3522 () Bool)
(declare-fun x5833 () Int)
(declare-fun x2038 () Bool)
(declare-fun x6308 () x5128)
(declare-fun x1342 () Int)
(declare-fun x628 () Bool)
(declare-fun x1321 () Int)
(declare-fun x906 () Bool)
(declare-fun x1774 () Int)
(declare-fun x2509 () Bool)
(declare-fun x4940 () Bool)
(declare-fun x4021 () Bool)
(declare-fun x719 () Bool)
(declare-fun x1638 () Int)
(declare-fun x1592 () Bool)
(declare-fun x349 () Bool)
(declare-fun x5306 () Bool)
(declare-fun x6042 () Int)
(declare-fun x4388 () Bool)
(declare-fun x5012 () Int)
(declare-fun x995 (x5128) Int)
(declare-fun x876 () Bool)
(declare-fun x112 () Bool)
(declare-fun x5180 () Int)
(declare-fun x3469 () Bool)
(declare-fun x3758 () Bool)
(declare-fun x6193 () Int)
(declare-fun x2928 () Int)
(declare-fun x1544 () x5128)
(declare-fun x5725 () Bool)
(declare-fun x529 () Int)
(declare-fun x5943 () Int)
(declare-fun x3771 () Bool)
(declare-fun x2969 () Int)
(declare-fun x4643 () Bool)
(declare-fun x2902 () Bool)
(declare-fun x3829 () Bool)
(declare-fun x3008 () Bool)
(declare-fun x1924 () Bool)
(declare-fun x5992 () Bool)
(declare-fun x114 () x5128)
(declare-fun x2535 () Int)
(declare-fun x6022 () Int)
(declare-fun x1610 () Int)
(declare-fun x5909 () Bool)
(declare-fun x4982 () Bool)
(declare-fun x5604 () Int)
(declare-fun x1394 () Bool)
(declare-fun x5359 () Int)
(declare-fun x908 () x5128)
(declare-fun x263 () Bool)
(declare-fun x4749 () Bool)
(declare-fun x351 () Int)
(declare-fun x2279 () Int)
(declare-fun x3864 () Int)
(declare-fun x4431 () Bool)
(declare-fun x3742 () Bool)
(declare-fun x5918 () Bool)
(declare-fun x1444 () Bool)
(declare-fun x2401 () Bool)
(declare-fun x4422 () Bool)
(declare-fun x700 () Bool)
(declare-fun x4764 () x5128)
(declare-fun x1225 () Bool)
(declare-fun x253 () Int)
(declare-fun x2142 () Int)
(declare-fun x3311 () Bool)
(declare-fun x2832 () Int)
(declare-fun x3766 () x5128)
(declare-fun x5348 () Int)
(declare-fun x2473 () Bool)
(declare-fun x5809 () Bool)
(declare-fun x3844 () Bool)
(declare-fun x3798 () x5128)
(declare-fun x777 () Bool)
(declare-fun x5755 () Bool)
(declare-fun x2657 () Bool)
(declare-fun x2637 () Int)
(declare-fun x4339 () Bool)
(declare-fun x4060 () Int)
(declare-fun x5762 () Bool)
(declare-fun x3254 () Int)
(declare-fun x327 () Int)
(declare-fun x3634 () Int)
(declare-fun x5499 () Int)
(declare-fun x5842 () Bool)
(declare-fun x2228 () Int)
(declare-fun x2813 () Int)
(declare-fun x571 () Bool)
(declare-fun x4342 () Bool)
(declare-fun x2747 () Int)
(declare-fun x4750 () Bool)
(declare-fun x2643 () Bool)
(declare-fun x4117 () Bool)
(declare-fun x3893 () Bool)
(declare-fun x2867 () x5128)
(declare-fun x3863 () x5128)
(declare-fun x2277 () Int)
(declare-fun x5150 () x5128)
(declare-fun x6190 () Bool)
(declare-fun x4233 () Bool)
(declare-fun x3801 () Int)
(declare-fun x714 () Bool)
(declare-fun x5919 () Bool)
(declare-fun x6051 () Bool)
(declare-fun x2239 () x5128)
(declare-fun x2276 () Bool)
(declare-fun x1085 () Int)
(declare-fun x20 () Bool)
(declare-fun x4923 () Int)
(declare-fun x1815 () Int)
(declare-fun x5129 () Int)
(declare-fun x4989 () Int)
(declare-fun x4922 () Int)
(declare-fun x5513 () Bool)
(declare-fun x4886 () Bool)
(declare-fun x2070 () Int)
(declare-fun x4774 () x5128)
(declare-fun x2294 () Bool)
(declare-fun x1784 () Int)
(declare-fun x129 () Bool)
(declare-fun x1493 () Bool)
(declare-fun x3091 () Int)
(declare-fun x3233 () Int)
(declare-fun x5706 () Bool)
(declare-fun x4452 () Bool)
(declare-fun x1947 () Int)
(declare-fun x1072 () Bool)
(declare-fun x1935 () Bool)
(declare-fun x5343 () Int)
(declare-fun x6188 () Int)
(declare-fun x2576 () Bool)
(declare-fun x4647 () Bool)
(declare-fun x2133 () Bool)
(declare-fun x559 () Bool)
(declare-fun x1972 () Int)
(declare-fun x2725 () Bool)
(declare-fun x4972 () Int)
(declare-fun x1727 () Int)
(declare-fun x5498 () Int)
(declare-fun x2455 () Int)
(declare-fun x3912 () Bool)
(declare-fun x2430 () Bool)
(declare-fun x3988 () Int)
(declare-fun x4824 () Bool)
(declare-fun x2367 () Int)
(declare-fun x3911 () Bool)
(declare-fun x3865 () Bool)
(declare-fun x1523 () Bool)
(declare-fun x5684 () Bool)
(declare-fun x398 () Int)
(declare-fun x3246 () Int)
(declare-fun x3901 () x5128)
(declare-fun x419 () Int)
(declare-fun x1792 () Bool)
(declare-fun x233 () Bool)
(declare-fun x2151 () Int)
(declare-fun x4168 () Bool)
(declare-fun x5157 () Bool)
(declare-fun x5619 () Int)
(declare-fun x4629 () Int)
(declare-fun x895 () Bool)
(declare-fun x2588 () Bool)
(declare-fun x3991 () Int)
(declare-fun x4149 () Bool)
(declare-fun x3841 () Bool)
(declare-fun x241 () Int)
(declare-fun x5938 () Bool)
(declare-fun x1809 () x5128)
(declare-fun x6284 () Bool)
(declare-fun x3490 () Bool)
(declare-fun x256 () Bool)
(declare-fun x3218 () x5128)
(declare-fun x5220 () Bool)
(declare-fun x4239 () Int)
(declare-fun x1165 () Bool)
(declare-fun x994 () Bool)
(declare-fun x4791 () x5128)
(declare-fun x525 () Int)
(declare-fun x4757 (x5128) Int)
(declare-fun x1208 () Bool)
(declare-fun x2759 () Bool)
(declare-fun x3525 () Int)
(declare-fun x4866 () Bool)
(declare-fun x2073 () Int)
(declare-fun x3509 () Int)
(declare-fun x5521 () Bool)
(declare-fun x5730 () Bool)
(declare-fun x4398 () Int)
(declare-fun x201 () Int)
(declare-fun x5464 () x5128)
(declare-fun x1431 () Bool)
(declare-fun x536 () Int)
(declare-fun x6272 () Bool)
(declare-fun x221 () Bool)
(declare-fun x5456 () Int)
(declare-fun x5495 () x5128)
(declare-fun x5538 () Bool)
(declare-fun x468 () Bool)
(declare-fun x2726 () Int)
(declare-fun x749 () Int)
(declare-fun x6101 () Int)
(declare-fun x2835 () Int)
(declare-fun x3376 () Bool)
(declare-fun x6228 () Bool)
(declare-fun x2406 () x5128)
(declare-fun x228 () Int)
(declare-fun x3928 () x5128)
(declare-fun x4195 () Bool)
(declare-fun x1338 () Int)
(declare-fun x1211 () x5128)
(declare-fun x3338 () Int)
(declare-fun x4224 () Bool)
(declare-fun x5723 () Bool)
(declare-fun x51 () Bool)
(declare-fun x2438 () Bool)
(declare-fun x4451 () Bool)
(declare-fun x6356 () Int)
(declare-fun x5724 () Bool)
(declare-fun x5227 () Bool)
(declare-fun x3143 () Int)
(declare-fun x3044 () Bool)
(declare-fun x896 () Int)
(declare-fun x3454 () x5128)
(declare-fun x6049 () Int)
(declare-fun x4094 () Int)
(declare-fun x3241 () Bool)
(declare-fun x3614 () Int)
(declare-fun x3154 () Bool)
(declare-fun x26 () x5128)
(declare-fun x1801 () Int)
(declare-fun x1989 () Bool)
(declare-fun x2836 () Int)
(declare-fun x446 () x5128)
(declare-fun x469 () Bool)
(declare-fun x5079 () Bool)
(declare-fun x2699 () Int)
(declare-fun x2513 () Bool)
(declare-fun x2461 () Bool)
(declare-fun x4903 () Int)
(declare-fun x140 () Bool)
(declare-fun x3701 () Int)
(declare-fun x5296 () Int)
(declare-fun x1614 () Bool)
(declare-fun x4781 () Bool)
(declare-fun x624 () Bool)
(declare-fun x4152 () x5128)
(declare-fun x5294 () Bool)
(declare-fun x3438 () Int)
(declare-fun x5760 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1905 () x5128)
(declare-fun x3309 () Bool)
(declare-fun x326 () Bool)
(declare-fun x5458 () Int)
(declare-fun x810 () Bool)
(declare-fun x5204 () Bool)
(declare-fun x4384 () Int)
(declare-fun x5655 () Int)
(declare-fun x2358 () Bool)
(declare-fun x2497 () Int)
(declare-fun x1105 () Bool)
(declare-fun x2601 () Bool)
(declare-fun x909 () Bool)
(declare-fun x2718 () Int)
(declare-fun x2397 () Bool)
(declare-fun x4270 () Bool)
(declare-fun x2300 () Bool)
(declare-fun x3112 () Bool)
(declare-fun x5881 () Bool)
(declare-fun x1285 () x5128)
(declare-fun x4585 () Bool)
(declare-fun x1732 () Int)
(declare-fun x154 () Bool)
(declare-fun x5560 () Int)
(declare-fun x892 () Int)
(declare-fun x3951 () Bool)
(declare-fun x738 () Int)
(declare-fun x528 () Int)
(declare-fun x595 () Bool)
(declare-fun x2113 () Int)
(declare-fun x1465 () Bool)
(declare-fun x4093 () Int)
(declare-fun x1129 () x5128)
(declare-fun x2923 () Bool)
(declare-fun x4101 () Int)
(declare-fun x6087 () Int)
(declare-fun x4956 () Int)
(declare-fun x5937 () Int)
(declare-fun x1034 () Bool)
(declare-fun x5031 () Bool)
(declare-fun x4632 () Int)
(declare-fun x5336 () Bool)
(declare-fun x1031 () Int)
(declare-fun x3498 () Bool)
(declare-fun x2662 () Int)
(declare-fun x4844 () Bool)
(declare-fun x4567 () Bool)
(declare-fun x5895 () Int)
(declare-fun x5403 () Bool)
(declare-fun x5860 () Bool)
(declare-fun x375 (Int) Int)
(declare-fun x4726 () Bool)
(declare-fun x4447 () Int)
(declare-fun x205 () Int)
(declare-fun x5122 () Int)
(declare-fun x968 () Int)
(declare-fun x2190 () Int)
(declare-fun x3796 () x5128)
(declare-fun x4336 () x5128)
(declare-fun x5423 () Bool)
(declare-fun x5559 () x5128)
(declare-fun x2007 () Bool)
(declare-fun x5780 () Bool)
(declare-fun x2904 () Bool)
(declare-fun x1333 () Int)
(declare-fun x1091 () x5128)
(declare-fun x458 () Bool)
(declare-fun x5263 () Bool)
(declare-fun x849 () Int)
(declare-fun x2556 () Bool)
(declare-fun x2607 () Bool)
(declare-fun x4653 () Bool)
(declare-fun x3971 () Bool)
(declare-fun x152 () Int)
(declare-fun x5766 () Int)
(declare-fun x3302 () Int)
(declare-fun x2684 () Bool)
(declare-fun x5820 () Bool)
(declare-fun x2623 () Int)
(declare-fun x3468 () Bool)
(declare-fun x160 () Bool)
(declare-fun x2842 () Int)
(declare-fun x6123 () Int)
(declare-fun x1527 () Bool)
(declare-fun x1450 () Bool)
(declare-fun x3223 (Int) Int)
(declare-fun x1890 () Bool)
(declare-fun x3480 () Int)
(declare-fun x1125 () x5128)
(declare-fun x1480 () Int)
(declare-fun x4286 () Int)
(declare-fun x1772 () Bool)
(declare-fun x3029 () Int)
(declare-fun x1064 () Int)
(declare-fun x1940 () Int)
(declare-fun x4405 () Int)
(declare-fun x4047 () Bool)
(declare-fun x4139 () Int)
(declare-fun x5269 () Int)
(declare-fun x894 () Bool)
(declare-fun x1823 () Int)
(declare-fun x6111 () Int)
(declare-fun x1979 () Bool)
(declare-fun x4151 () Bool)
(declare-fun x3936 () Int)
(declare-fun x1895 () Int)
(declare-fun x5781 () x5128)
(declare-fun x582 () Int)
(declare-fun x2171 () Int)
(declare-fun x432 () Int)
(declare-fun x1339 () Int)
(declare-fun x1372 () Int)
(declare-fun x6303 () x5128)
(declare-fun x3392 () Int)
(declare-fun x1330 () Int)
(declare-fun x4271 () Int)
(declare-fun x939 () Int)
(declare-fun x2917 () Bool)
(declare-fun x3157 () Bool)
(declare-fun x442 () Int)
(declare-fun x2125 () Bool)
(declare-fun x4986 () Bool)
(declare-fun x5440 () Int)
(declare-fun x4144 () Int)
(declare-fun x5305 () Int)
(declare-fun x3366 () Int)
(declare-fun x5175 () Int)
(declare-fun x3096 () Bool)
(declare-fun x4118 () x5128)
(declare-fun x330 () Int)
(declare-fun x1836 () Int)
(declare-fun x2772 () Bool)
(declare-fun x5480 () Int)
(declare-fun x2798 () Bool)
(declare-fun x2110 () Bool)
(declare-fun x885 () x5128)
(declare-fun x5286 () Int)
(declare-fun x4378 () Bool)
(declare-fun x807 () Bool)
(declare-fun x578 () Bool)
(declare-fun x5187 () Bool)
(declare-fun x359 () Bool)
(declare-fun x5342 () Bool)
(declare-fun x414 () Int)
(declare-fun x2368 () Bool)
(declare-fun x5298 (Int) Int)
(declare-fun x3357 () Bool)
(declare-fun x3410 () Int)
(declare-fun x5765 () Bool)
(declare-fun x2362 () Int)
(declare-fun x1247 () x5128)
(declare-fun x1939 () Int)
(declare-fun x1734 () Bool)
(declare-fun x6039 () x5128)
(declare-fun x4813 () Bool)
(declare-fun x2084 () Int)
(declare-fun x2167 () x5128)
(declare-fun x2354 () Int)
(declare-fun x95 () Int)
(declare-fun x3888 () Bool)
(declare-fun x697 () Int)
(declare-fun x2935 () x5128)
(declare-fun x2416 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x4666 () Int)
(declare-fun x5192 () Bool)
(declare-fun x592 () Int)
(declare-fun x5324 () Bool)
(declare-fun x1274 () Bool)
(declare-fun x869 () Bool)
(declare-fun x858 () Bool)
(declare-fun x3792 () Bool)
(declare-fun x5366 () Int)
(declare-fun x4497 () Int)
(declare-fun x18 () Bool)
(declare-fun x2922 () Bool)
(declare-fun x659 () Int)
(declare-fun x1166 () Bool)
(declare-fun x5279 () x5128)
(declare-fun x6326 () Bool)
(declare-fun x4037 () Int)
(declare-fun x2701 () x5128)
(declare-fun x122 () Bool)
(declare-fun x231 () Int)
(declare-fun x4954 () Int)
(declare-fun x4591 () Int)
(declare-fun x2708 () Bool)
(declare-fun x585 () Bool)
(declare-fun x314 () Int)
(declare-fun x2346 () Bool)
(declare-fun x2647 () Bool)
(declare-fun x4995 () Int)
(declare-fun x3554 () Bool)
(declare-fun x3994 () Int)
(declare-fun x4625 () Bool)
(declare-fun x694 () Bool)
(declare-fun x44 () Bool)
(declare-fun x3573 () Int)
(declare-fun x6157 () Bool)
(declare-fun x441 () Bool)
(declare-fun x5254 () Bool)
(declare-fun x474 (Int Int) Int)
(declare-fun x5603 () x5128)
(declare-fun x2469 () Int)
(declare-fun x4409 () Bool)
(declare-fun x4120 () Int)
(declare-fun x826 () Bool)
(declare-fun x1191 () Int)
(declare-fun x48 () Bool)
(declare-fun x486 () Bool)
(declare-fun x5394 () Int)
(declare-fun x4411 () Bool)
(declare-fun x3802 () Int)
(declare-fun x5040 () Int)
(declare-fun x2848 () Int)
(declare-fun x672 () Int)
(declare-fun x4100 () Int)
(declare-fun x3731 () Bool)
(declare-fun x5033 () Int)
(declare-fun x1395 () Bool)
(declare-fun x4337 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x5611 () Bool)
(declare-fun x3639 () Int)
(declare-fun x584 () Bool)
(declare-fun x1804 () Int)
(declare-fun x2633 () Bool)
(declare-fun x781 () Bool)
(declare-fun x2237 () Int)
(declare-fun x5586 () Bool)
(declare-fun x286 () Bool)
(declare-fun x3659 () Int)
(declare-fun x3753 () Bool)
(declare-fun x2172 () Bool)
(declare-fun x3547 () Int)
(declare-fun x4408 () Bool)
(declare-fun x3207 () Int)
(declare-fun x4697 () Int)
(declare-fun x1807 () x5128)
(declare-fun x451 () Int)
(declare-fun x3356 () Bool)
(declare-fun x362 () Bool)
(declare-fun x4265 () Int)
(declare-fun x4502 () Bool)
(declare-fun x3298 () Bool)
(declare-fun x3757 () Bool)
(declare-fun x5980 () Bool)
(declare-fun x1184 () Int)
(declare-fun x3977 () Bool)
(declare-fun x5396 () x5128)
(declare-fun x3268 () x5128)
(declare-fun x618 () Int)
(declare-fun x625 () Int)
(declare-fun x4602 () Bool)
(declare-fun x5794 () Bool)
(declare-fun x2301 () Bool)
(declare-fun x2086 () Int)
(declare-fun x3767 () Int)
(declare-fun x413 () Int)
(declare-fun x3264 () x5128)
(declare-fun x554 () Bool)
(declare-fun x6154 () Bool)
(declare-fun x1662 () Bool)
(declare-fun x3187 () Int)
(declare-fun x1434 () Bool)
(declare-fun x3814 () Bool)
(declare-fun x305 () Bool)
(declare-fun x640 () Bool)
(declare-fun x104 () Bool)
(declare-fun x3494 () Bool)
(declare-fun x5392 () Bool)
(declare-fun x5 () x5128)
(declare-fun x5967 () Bool)
(declare-fun x3895 () x5128)
(declare-fun x1630 () Bool)
(declare-fun x5763 () Bool)
(declare-fun x4996 () Int)
(declare-fun x282 () Bool)
(declare-fun x383 () x5128)
(declare-fun x4031 () Bool)
(declare-fun x6358 () Int)
(declare-fun x3488 () Int)
(declare-fun x135 () Bool)
(declare-fun x445 () Bool)
(declare-fun x36 () Bool)
(declare-fun x5951 () Int)
(declare-fun x1240 () Int)
(declare-fun x2299 () Bool)
(declare-fun x5752 () Bool)
(declare-fun x3598 () Bool)
(declare-fun x4894 () x5128)
(declare-fun x3635 () Bool)
(declare-fun x2390 () x5128)
(declare-fun x3202 () Bool)
(declare-fun x2024 () Bool)
(declare-fun x607 () x5128)
(declare-fun x6235 () Int)
(declare-fun x247 () Bool)
(declare-fun x2217 () Bool)
(declare-fun x1059 () Bool)
(declare-fun x3180 () Bool)
(declare-fun x440 () x5128)
(declare-fun x1679 () Int)
(declare-fun x1087 () Bool)
(declare-fun x5276 () Bool)
(declare-fun x4589 () Int)
(declare-fun x1490 () Int)
(declare-fun x3116 () Int)
(declare-fun x2531 (Int) Int)
(declare-fun x342 () Bool)
(declare-fun x6329 () Int)
(declare-fun x2462 () Bool)
(declare-fun x3823 () Bool)
(declare-fun x3604 () x5128)
(declare-fun x1755 () Bool)
(declare-fun x4190 () Int)
(declare-fun x3686 () Int)
(declare-fun x1740 () Bool)
(declare-fun x3238 () Int)
(declare-fun x262 () Bool)
(declare-fun x2442 () Bool)
(declare-fun x4731 () Bool)
(declare-fun x2472 () x5128)
(declare-fun x5608 () Bool)
(declare-fun x5199 () Int)
(declare-fun x4504 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x5084 () Int)
(declare-fun x1606 () Int)
(declare-fun x2243 () Bool)
(declare-fun x3845 () Bool)
(declare-fun x984 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x2474 () Int)
(declare-fun x2649 () Bool)
(declare-fun x3448 () Bool)
(declare-fun x5784 () Int)
(declare-fun x4620 () x5128)
(declare-fun x5368 () x5128)
(declare-fun x2665 () Int)
(declare-fun x4792 () Bool)
(declare-fun x690 () Bool)
(declare-fun x6147 () x5128)
(declare-fun x4179 () Bool)
(declare-fun x4696 () Bool)
(declare-fun x3024 () x5128)
(declare-fun x5692 () Bool)
(declare-fun x4597 () Int)
(declare-fun x5557 () Int)
(declare-fun x610 () Bool)
(declare-fun x1441 () Int)
(declare-fun x2624 () Int)
(declare-fun x5670 () Bool)
(declare-fun x4415 () Bool)
(declare-fun x244 () Int)
(declare-fun x1079 () Int)
(declare-fun x5088 () Bool)
(declare-fun x3330 () Int)
(declare-fun x2107 () Int)
(declare-fun x2978 () Bool)
(declare-fun x645 () Bool)
(declare-fun x1547 () x5128)
(declare-fun x1723 () Bool)
(declare-fun x3502 () Int)
(declare-fun x5713 () Int)
(declare-fun x5443 () Int)
(declare-fun x1657 () Int)
(declare-fun x6253 () Bool)
(declare-fun x3104 () x5128)
(declare-fun x3052 () Bool)
(declare-fun x2760 () Bool)
(declare-fun x3609 () Bool)
(declare-fun x4816 () Bool)
(declare-fun x3507 () Bool)
(declare-fun x1627 () Int)
(declare-fun x3316 () Bool)
(declare-fun x5048 () Bool)
(declare-fun x4947 () Int)
(declare-fun x545 () Bool)
(declare-fun x4861 () Bool)
(declare-fun x1270 () Bool)
(declare-fun x840 () Int)
(declare-fun x2613 () Bool)
(declare-fun x2215 () Int)
(declare-fun x1938 () Bool)
(declare-fun x5487 () Int)
(declare-fun x403 () Int)
(declare-fun x5719 () Int)
(declare-fun x3691 () Int)
(declare-fun x1903 () Bool)
(declare-fun x1051 () Int)
(declare-fun x4466 () Int)
(declare-fun x2534 () x5128)
(declare-fun x3739 () Bool)
(declare-fun x4313 () Bool)
(declare-fun x691 () x5128)
(declare-fun x5822 () Bool)
(declare-fun x950 () Int)
(declare-fun x3374 () Bool)
(declare-fun x4673 () Int)
(declare-fun x4187 () Int)
(declare-fun x1024 () Int)
(declare-fun x2342 () Bool)
(declare-fun x77 () Bool)
(declare-fun x5679 () Int)
(declare-fun x3976 () x5128)
(declare-fun x4616 () Int)
(declare-fun x792 () Bool)
(declare-fun x4555 () Bool)
(declare-fun x268 () Int)
(declare-fun x1483 () Int)
(declare-fun x4085 () Bool)
(declare-fun x2141 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x1955 () Int)
(declare-fun x4052 () Int)
(declare-fun x4361 () Int)
(declare-fun x4755 (Int) Int)
(declare-fun x1617 () Bool)
(declare-fun x3470 () Int)
(declare-fun x2365 () Int)
(declare-fun x3319 () Bool)
(declare-fun x4828 () Bool)
(declare-fun x5555 () Bool)
(declare-fun x3329 () Bool)
(declare-fun x408 () Bool)
(declare-fun x3346 () Int)
(declare-fun x1567 (Int) x5128)
(declare-fun x4385 () Bool)
(declare-fun x3001 () Bool)
(declare-fun x5492 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x5177 () Bool)
(declare-fun x379 () Int)
(declare-fun x5531 () Int)
(declare-fun x5409 () Int)
(declare-fun x2411 () Bool)
(declare-fun x5621 () Int)
(declare-fun x2916 () Int)
(declare-fun x2011 () Int)
(declare-fun x83 () Int)
(declare-fun x1449 () Bool)
(declare-fun x136 () Bool)
(declare-fun x120 () Bool)
(declare-fun x2022 () Int)
(declare-fun x1318 () Bool)
(declare-fun x6062 () Bool)
(declare-fun x3998 () Int)
(declare-fun x1487 () Int)
(declare-fun x1400 () Bool)
(declare-fun x1117 () Int)
(declare-fun x1978 () Bool)
(declare-fun x2602 () Int)
(declare-fun x4274 () Int)
(declare-fun x922 () Int)
(declare-fun x4377 () Bool)
(declare-fun x4142 () x5128)
(declare-fun x6167 () Int)
(declare-fun x167 () Int)
(declare-fun x2189 () Bool)
(declare-fun x4518 () Bool)
(declare-fun x3759 () Int)
(declare-fun x5160 () Bool)
(declare-fun x1323 () Bool)
(declare-fun x2880 () Bool)
(declare-fun x2293 () Bool)
(declare-fun x1517 () Int)
(declare-fun x1033 () Bool)
(declare-fun x3732 () Int)
(declare-fun x1726 () Int)
(declare-fun x3271 (x5128) Int)
(declare-fun x3353 () Int)
(declare-fun x4058 () Bool)
(declare-fun x463 () Bool)
(declare-fun x4263 () Int)
(declare-fun x823 (Int) Int)
(declare-fun x3745 () Int)
(declare-fun x5218 () Int)
(declare-fun x285 () Int)
(declare-fun x157 () x5128)
(declare-fun x133 () Int)
(declare-fun x1442 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x490 () Int)
(declare-fun x156 () Bool)
(declare-fun x5969 () Bool)
(declare-fun x1996 () Int)
(declare-fun x5373 () Bool)
(declare-fun x2741 () Int)
(declare-fun x1309 () Int)
(declare-fun x540 () Bool)
(declare-fun x3955 () x5128)
(declare-fun x5284 () Int)
(declare-fun x142 () Bool)
(declare-fun x1647 () Bool)
(declare-fun x1001 () Bool)
(declare-fun x3243 () Bool)
(declare-fun x3854 () Int)
(declare-fun x3570 (Int) Int)
(declare-fun x2385 () Bool)
(declare-fun x5442 () Bool)
(declare-fun x363 () Bool)
(declare-fun x5616 () Int)
(declare-fun x1980 () Bool)
(declare-fun x593 () Int)
(declare-fun x3440 () x5128)
(declare-fun x3174 () Int)
(declare-fun x3131 () Bool)
(declare-fun x3786 () Int)
(declare-fun x1995 () Bool)
(declare-fun x887 () Bool)
(declare-fun x1661 () Int)
(declare-fun x6090 () Bool)
(declare-fun x2550 () Int)
(declare-fun x4796 () Int)
(declare-fun x2635 () x5128)
(declare-fun x656 () Int)
(declare-fun x2771 () Bool)
(declare-fun x428 () Int)
(declare-fun x1818 () Int)
(declare-fun x5295 () Int)
(declare-fun x1571 () Int)
(declare-fun x2575 () x5128)
(declare-fun x3519 () Bool)
(declare-fun x3978 () Int)
(declare-fun x3934 () Int)
(declare-fun x3229 () Bool)
(declare-fun x1405 () Int)
(declare-fun x1944 () Int)
(declare-fun x601 () Bool)
(declare-fun x4254 () Bool)
(declare-fun x71 () Int)
(declare-fun x1703 () Bool)
(declare-fun x2605 () Bool)
(declare-fun x4319 () Int)
(declare-fun x4624 () Bool)
(declare-fun x4682 () Bool)
(declare-fun x1914 () Bool)
(declare-fun x3453 () Int)
(declare-fun x3203 () Bool)
(declare-fun x4909 () Int)
(declare-fun x5804 () Int)
(declare-fun x630 () Int)
(declare-fun x4003 () Bool)
(declare-fun x3651 () Int)
(declare-fun x6302 () Bool)
(declare-fun x6058 () Bool)
(declare-fun x4359 () Int)
(declare-fun x6199 () Bool)
(declare-fun x4566 () Int)
(declare-fun x655 () Bool)
(declare-fun x5488 () Bool)
(declare-fun x502 () Bool)
(declare-fun x4380 () Int)
(declare-fun x43 () Bool)
(declare-fun x5903 () Bool)
(declare-fun x6045 () Bool)
(declare-fun x5727 () Int)
(declare-fun x5966 () Int)
(declare-fun x4068 () Bool)
(declare-fun x3722 () Int)
(declare-fun x2942 () Int)
(declare-fun x2894 () Bool)
(declare-fun x169 () Bool)
(declare-fun x2184 () Int)
(declare-fun x2426 () Int)
(declare-fun x4005 () x5128)
(declare-fun x5849 () Bool)
(declare-fun x4198 () Int)
(declare-fun x4463 () Bool)
(declare-fun x4988 () Int)
(declare-fun x1102 () Int)
(declare-fun x4351 () Int)
(declare-fun x3007 () Bool)
(declare-fun x2906 () Bool)
(declare-fun x6169 () Bool)
(declare-fun x5893 () Int)
(declare-fun x5500 () Bool)
(declare-fun x2870 () Bool)
(declare-fun x2162 () Int)
(declare-fun x3022 () Bool)
(declare-fun x6334 () Int)
(declare-fun x5686 () Int)
(declare-fun x6305 () Bool)
(declare-fun x421 () Int)
(declare-fun x3186 () Int)
(declare-fun x4490 () Int)
(declare-fun x2076 () x5128)
(declare-fun x5117 () Bool)
(declare-fun x5811 () Bool)
(declare-fun x2094 () x5128)
(declare-fun x6348 () Bool)
(declare-fun x3849 () x5128)
(declare-fun x34 () Bool)
(declare-fun x3914 () Int)
(declare-fun x6269 () x5128)
(declare-fun x1954 () Bool)
(declare-fun x575 () Bool)
(declare-fun x2911 () Bool)
(declare-fun x3378 () Int)
(declare-fun x662 () Int)
(declare-fun x92 () Bool)
(declare-fun x1759 () x5128)
(declare-fun x4662 () Bool)
(declare-fun x3521 () Bool)
(declare-fun x5044 (Int) Int)
(declare-fun x2389 () Int)
(declare-fun x4159 () x5128)
(declare-fun x1891 () Int)
(declare-fun x275 () Bool)
(declare-fun x484 () Bool)
(declare-fun x3842 () x5128)
(declare-fun x1820 () Bool)
(declare-fun x846 (Int) Int)
(declare-fun x3702 () Int)
(declare-fun x6286 () Bool)
(declare-fun x4736 () Int)
(declare-fun x2975 () Bool)
(declare-fun x5916 () x5128)
(declare-fun x3853 () Bool)
(declare-fun x2015 () Int)
(declare-fun x2444 () Bool)
(declare-fun x5100 () Bool)
(declare-fun x5133 () Bool)
(declare-fun x2347 () x5128)
(declare-fun x2224 () Bool)
(declare-fun x1951 () Bool)
(declare-fun x1885 () Int)
(declare-fun x4691 () x5128)
(declare-fun x1361 () x5128)
(declare-fun x1060 () Bool)
(declare-fun x2493 () Bool)
(declare-fun x219 () Bool)
(declare-fun x857 () Int)
(declare-fun x4088 () x5128)
(declare-fun x2595 () Bool)
(declare-fun x5875 () Bool)
(declare-fun x1806 () Bool)
(declare-fun x2166 () Bool)
(declare-fun x3252 () Bool)
(declare-fun x5907 () Bool)
(declare-fun x4453 () Bool)
(declare-fun x5164 () Int)
(declare-fun x1911 () Int)
(declare-fun x2157 () Int)
(declare-fun x2256 () Bool)
(declare-fun x3979 () Int)
(declare-fun x5759 () Bool)
(declare-fun x2912 () Int)
(declare-fun x6109 () Bool)
(declare-fun x2285 () Int)
(declare-fun x4969 () Bool)
(declare-fun x3820 () Int)
(declare-fun x4966 () Bool)
(declare-fun x3269 () Int)
(declare-fun x4707 () Int)
(declare-fun x4389 () Int)
(declare-fun x2360 () Bool)
(declare-fun x1436 () Int)
(declare-fun x5355 () Bool)
(declare-fun x4034 () Int)
(declare-fun x5506 () Int)
(declare-fun x2000 () Bool)
(declare-fun x3566 () Bool)
(declare-fun x4491 () Int)
(declare-fun x98 () Bool)
(declare-fun x3964 (Int) Int)
(declare-fun x791 () Bool)
(declare-fun x3296 () Bool)
(declare-fun x1779 () Bool)
(declare-fun x4344 () x5128)
(declare-fun x2956 () Bool)
(declare-fun x1963 () Bool)
(declare-fun x4889 () Bool)
(declare-fun x3608 () Int)
(declare-fun x3603 () Int)
(declare-fun x2314 () Bool)
(declare-fun x5612 () Bool)
(declare-fun x5311 () Bool)
(declare-fun x1982 () Bool)
(declare-fun x5790 () Bool)
(declare-fun x3196 () Int)
(declare-fun x1013 () Bool)
(declare-fun x298 () Bool)
(declare-fun x5532 () Bool)
(declare-fun x2206 () Int)
(declare-fun x1550 () Bool)
(declare-fun x115 () Bool)
(declare-fun x3256 () Int)
(declare-fun x2068 () Bool)
(declare-fun x675 () Int)
(declare-fun x6050 () Bool)
(declare-fun x4225 () Int)
(declare-fun x4717 () Bool)
(declare-fun x1252 () x5128)
(declare-fun x1575 () Int)
(declare-fun x2667 () x5128)
(declare-fun x4111 () Int)
(declare-fun x4508 () x5128)
(declare-fun x1234 () Int)
(declare-fun x3958 () Bool)
(declare-fun x4311 () Bool)
(declare-fun x3972 () Bool)
(declare-fun x2102 () Bool)
(declare-fun x2281 () Bool)
(declare-fun x2692 () Int)
(declare-fun x811 () Int)
(declare-fun x682 () Int)
(declare-fun x6178 () Int)
(declare-fun x1768 () Bool)
(declare-fun x5624 () Int)
(declare-fun x664 () Int)
(declare-fun x5994 () Int)
(declare-fun x5659 () Bool)
(declare-fun x2627 () Bool)
(declare-fun x2126 () Bool)
(declare-fun x4997 () Bool)
(declare-fun x4902 () Bool)
(declare-fun x4913 () Int)
(declare-fun x1542 () Bool)
(declare-fun x1789 () Bool)
(declare-fun x2506 () Int)
(declare-fun x1435 () x5128)
(declare-fun x6349 () Int)
(declare-fun x6127 () Bool)
(declare-fun x2392 () Int)
(declare-fun x3273 () Bool)
(declare-fun x2309 () Int)
(declare-fun x5857 () Int)
(declare-fun x2106 () Bool)
(declare-fun x2335 () Bool)
(declare-fun x153 () Int)
(declare-fun x5140 () Int)
(declare-fun x6057 () Bool)
(declare-fun x2688 () Int)
(declare-fun x1645 () Int)
(declare-fun x5792 () Bool)
(declare-fun x5107 () Int)
(declare-fun x5016 () Int)
(declare-fun x1603 () Bool)
(declare-fun x3748 () Int)
(declare-fun x2315 (Int) Int)
(declare-fun x518 () Bool)
(declare-fun x3375 () Bool)
(declare-fun x4945 () Int)
(declare-fun x2861 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x119 () x5128)
(declare-fun x1757 () Bool)
(declare-fun x1856 () Int)
(declare-fun x3568 () Int)
(declare-fun x1883 () Int)
(declare-fun x448 () Bool)
(declare-fun x5789 () Bool)
(declare-fun x495 () Bool)
(declare-fun x2698 () Bool)
(declare-fun x1966 () Int)
(declare-fun x1470 () Bool)
(declare-fun x1193 () Bool)
(declare-fun x3851 () Int)
(declare-fun x5774 () Int)
(declare-fun x6121 () Bool)
(declare-fun x5030 () Int)
(declare-fun x5838 () Int)
(declare-fun x3388 () Bool)
(declare-fun x4916 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x2679 () Bool)
(declare-fun x1637 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x1513 () Bool)
(declare-fun x3906 () Int)
(declare-fun x5161 () Bool)
(declare-fun x3625 () Int)
(declare-fun x306 () Bool)
(declare-fun x4906 () Int)
(declare-fun x5219 () Bool)
(declare-fun x1514 () Bool)
(declare-fun x3890 () Int)
(declare-fun x1783 () x5128)
(declare-fun x814 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x2640 () Bool)
(declare-fun x1992 () Bool)
(declare-fun x550 () Int)
(declare-fun x1406 () x5128)
(declare-fun x1857 () Int)
(declare-fun x5063 () Bool)
(declare-fun x1923 () Bool)
(declare-fun x1666 () Int)
(declare-fun x3204 (x5128) Int)
(declare-fun x1241 () Int)
(declare-fun x6257 () Bool)
(declare-fun x2043 () x5128)
(declare-fun x5376 () Bool)
(declare-fun x3253 () x5128)
(declare-fun x5914 () Bool)
(declare-fun x5578 () Int)
(declare-fun x2686 () Int)
(declare-fun x2236 () Bool)
(declare-fun x1335 () Bool)
(declare-fun x5824 () Int)
(declare-fun x1139 () Bool)
(declare-fun x3642 () Int)
(declare-fun x4469 () Bool)
(declare-fun x3312 () Bool)
(declare-fun x5039 () Bool)
(declare-fun x5815 () Bool)
(declare-fun x5672 () Bool)
(declare-fun x4853 () Bool)
(declare-fun x5489 () Int)
(declare-fun x1336 () Int)
(declare-fun x5075 () Bool)
(declare-fun x5517 () Bool)
(declare-fun x5228 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x2585 () Bool)
(declare-fun x3165 () x5128)
(declare-fun x4820 () Int)
(declare-fun x4788 () Int)
(declare-fun x2866 () Int)
(declare-fun x3938 () Int)
(declare-fun x1173 () Bool)
(declare-fun x1917 () Bool)
(declare-fun x688 () x5128)
(declare-fun x5389 () Bool)
(declare-fun x5328 () Int)
(declare-fun x2186 () Bool)
(declare-fun x5735 () x5128)
(declare-fun x148 () Bool)
(declare-fun x11 () Bool)
(declare-fun x3332 () Int)
(declare-fun x3358 () Bool)
(declare-fun x520 () Bool)
(declare-fun x2419 () x5128)
(declare-fun x4294 () Bool)
(declare-fun x4812 () Int)
(declare-fun x509 () Bool)
(declare-fun x1097 () Int)
(declare-fun x3074 () x5128)
(declare-fun x916 () Bool)
(declare-fun x6144 () x5128)
(declare-fun x5046 () Bool)
(declare-fun x2901 () Bool)
(declare-fun x6338 () Int)
(declare-fun x3437 () Int)
(declare-fun x6183 () Bool)
(declare-fun x746 () Bool)
(declare-fun x5863 () Int)
(declare-fun x329 () Bool)
(declare-fun x4739 () Bool)
(declare-fun x1841 () x5128)
(declare-fun x5318 () Int)
(declare-fun x1612 () Bool)
(declare-fun x2475 () Int)
(declare-fun x4983 () Int)
(declare-fun x4314 () x5128)
(declare-fun x5401 () Int)
(declare-fun x6038 () Bool)
(declare-fun x5605 () Int)
(declare-fun x4551 () x5128)
(declare-fun x4098 () Bool)
(declare-fun x210 () Int)
(declare-fun x1786 () Bool)
(declare-fun x5291 () Bool)
(declare-fun x3730 () Bool)
(declare-fun x164 () Bool)
(declare-fun x1583 () Bool)
(declare-fun x5728 () Bool)
(declare-fun x4915 () Int)
(declare-fun x4309 () Int)
(declare-fun x1915 () x5128)
(declare-fun x2675 () Int)
(declare-fun x515 () x5128)
(declare-fun x4478 () Bool)
(declare-fun x5320 () Bool)
(declare-fun x4505 () Bool)
(declare-fun x4973 () Bool)
(declare-fun x2456 () Bool)
(declare-fun x4113 () x5128)
(declare-fun x1693 () Bool)
(declare-fun x4302 () Int)
(declare-fun x1468 () Bool)
(declare-fun x3163 () x5128)
(declare-fun x5799 () Bool)
(declare-fun x3038 () Bool)
(declare-fun x2839 () Bool)
(declare-fun x2724 () Bool)
(declare-fun x720 () Int)
(declare-fun x3420 () x5128)
(declare-fun x173 () Bool)
(declare-fun x3155 () Bool)
(declare-fun x378 () Int)
(declare-fun x4082 () Int)
(declare-fun x2058 () Bool)
(declare-fun x5240 () Bool)
(declare-fun x4680 () Int)
(declare-fun x4725 () Bool)
(declare-fun x449 () Int)
(declare-fun x1942 () Bool)
(declare-fun x5027 () x5128)
(declare-fun x1918 () Int)
(declare-fun x3059 () Int)
(declare-fun x3472 () Bool)
(declare-fun x3037 () Bool)
(declare-fun x4798 () x5128)
(declare-fun x434 () Int)
(declare-fun x2642 () Int)
(declare-fun x1301 () x5128)
(declare-fun x2869 () Int)
(declare-fun x4608 () Bool)
(declare-fun x5912 () Bool)
(declare-fun x4655 () Int)
(declare-fun x4258 () Int)
(declare-fun x5580 () Int)
(declare-fun x2722 () Int)
(declare-fun x3969 () Bool)
(declare-fun x3395 () Bool)
(declare-fun x85 () Bool)
(declare-fun x4546 () Bool)
(declare-fun x3159 () Bool)
(declare-fun x3586 () Bool)
(declare-fun x3882 () Int)
(declare-fun x2388 () Int)
(declare-fun x685 () Bool)
(declare-fun x1986 () Int)
(declare-fun x4352 () Bool)
(declare-fun x3571 () Int)
(declare-fun x6332 () Bool)
(declare-fun x3693 () Int)
(declare-fun x2907 () Bool)
(declare-fun x3876 () Bool)
(declare-fun x6362 () Int)
(declare-fun x216 () Int)
(declare-fun x1894 () x5128)
(declare-fun x2382 () Int)
(declare-fun x1708 () Int)
(declare-fun x2005 () Int)
(declare-fun x2025 () Int)
(declare-fun x4806 () Bool)
(declare-fun x4733 () Int)
(declare-fun x3708 () Bool)
(declare-fun x642 () Bool)
(declare-fun x609 () Int)
(declare-fun x2146 () Bool)
(declare-fun x4063 () Int)
(declare-fun x2453 () x5128)
(declare-fun x3957 () Int)
(declare-fun x149 () Bool)
(declare-fun x258 () Bool)
(declare-fun x2227 () Bool)
(declare-fun x2884 () Int)
(declare-fun x3622 () Bool)
(declare-fun x2378 () Int)
(declare-fun x5407 () Bool)
(declare-fun x981 () Bool)
(declare-fun x4095 () Bool)
(declare-fun x2432 () x5128)
(declare-fun x3262 () Int)
(declare-fun x759 () Bool)
(declare-fun x3451 () Bool)
(declare-fun x2707 () Int)
(declare-fun x4211 () Bool)
(declare-fun x5038 () Bool)
(declare-fun x6128 () x5128)
(declare-fun x2029 () Int)
(declare-fun x5519 () Bool)
(declare-fun x2659 () x5128)
(declare-fun x137 () Bool)
(declare-fun x2932 () Bool)
(declare-fun x1985 () Bool)
(declare-fun x6056 () Bool)
(declare-fun x5191 () Int)
(declare-fun x4825 () Int)
(declare-fun x496 () Int)
(declare-fun x6355 () Bool)
(declare-fun x5717 () Bool)
(declare-fun x4297 () Bool)
(declare-fun x4119 () Int)
(declare-fun x5831 () Bool)
(declare-fun x5248 () x5128)
(declare-fun x3992 () Bool)
(declare-fun x3289 () Bool)
(declare-fun x6016 () Int)
(declare-fun x3791 () Int)
(declare-fun x2195 () Bool)
(declare-fun x3212 () Int)
(declare-fun x3650 () Bool)
(declare-fun x5926 () Bool)
(declare-fun x3699 () Bool)
(declare-fun x4483 () Bool)
(declare-fun x1257 () Bool)
(declare-fun x6096 () Int)
(declare-fun x2122 () Bool)
(declare-fun x5581 () Int)
(declare-fun x2694 () Int)
(declare-fun x6108 () Int)
(declare-fun x5553 () Int)
(declare-fun x3094 () Int)
(declare-fun x4890 () Int)
(declare-fun x2574 () Int)
(declare-fun x145 () Int)
(declare-fun x4684 () Bool)
(declare-fun x6251 () Int)
(declare-fun x2448 () x5128)
(declare-fun x217 () Int)
(declare-fun x611 () Int)
(declare-fun x131 () x5128)
(declare-fun x2805 () Bool)
(declare-fun x4164 () Int)
(declare-fun x5610 () Int)
(declare-fun x3674 () Bool)
(declare-fun x665 () Int)
(declare-fun x2743 () Bool)
(declare-fun x4637 () Int)
(declare-fun x1140 () Int)
(declare-fun x4859 () Int)
(declare-fun x5960 (Int) Int)
(declare-fun x2056 () Int)
(declare-fun x5211 () Int)
(declare-fun x1667 () Bool)
(declare-fun x30 () Bool)
(declare-fun x5474 () Bool)
(declare-fun x5102 () Bool)
(declare-fun x4980 () Int)
(declare-fun x207 () Bool)
(declare-fun x5072 () Bool)
(declare-fun x2424 () Bool)
(declare-fun x4414 () x5128)
(declare-fun x4410 () Int)
(declare-fun x6007 () Int)
(declare-fun x3867 () Bool)
(declare-fun x6218 () Int)
(declare-fun x5078 () Int)
(declare-fun x2398 () x5128)
(declare-fun x4172 () x5128)
(declare-fun x2962 () Int)
(declare-fun x2737 () Bool)
(declare-fun x2508 () Int)
(declare-fun x1021 () Int)
(declare-fun x5274 () Int)
(declare-fun x2517 () Int)
(declare-fun x3354 () Bool)
(declare-fun x5950 () x5128)
(declare-fun x6033 () Bool)
(declare-fun x2591 () Bool)
(declare-fun x4847 () Int)
(declare-fun x4614 () x5128)
(declare-fun x3594 () Int)
(declare-fun x4242 () Bool)
(declare-fun x3300 () Int)
(declare-fun x2820 () Bool)
(declare-fun x5671 () Bool)
(declare-fun x516 () Int)
(declare-fun x2104 () Bool)
(declare-fun x3398 () Int)
(declare-fun x2710 () Int)
(declare-fun x3113 () Int)
(declare-fun x3433 () Bool)
(declare-fun x1284 () x5128)
(declare-fun x2012 () x5128)
(declare-fun x2235 () Int)
(declare-fun x3647 () Int)
(declare-fun x3326 () x5128)
(declare-fun x1343 () Bool)
(declare-fun x3636 () Int)
(declare-fun x1008 () x5128)
(declare-fun x3009 () Int)
(declare-fun x5246 () Bool)
(declare-fun x1009 () Bool)
(declare-fun x1300 () Bool)
(declare-fun x3528 () Bool)
(declare-fun x6301 () Int)
(declare-fun x1541 () x5128)
(declare-fun x4028 () x5128)
(declare-fun x4 () Bool)
(declare-fun x6073 () Int)
(declare-fun x482 () Int)
(declare-fun x3902 () Bool)
(declare-fun x249 () Bool)
(declare-fun x2863 () x5128)
(declare-fun x1718 () Int)
(declare-fun x955 () Int)
(declare-fun x5602 () Int)
(declare-fun x5923 () Int)
(declare-fun x1543 () Bool)
(declare-fun x3418 () Bool)
(declare-fun x1631 () Bool)
(declare-fun x94 () Int)
(declare-fun x3970 () Int)
(declare-fun x5777 () Int)
(declare-fun x6175 () Bool)
(declare-fun x5515 () Bool)
(declare-fun x2754 () Bool)
(declare-fun x5503 () x5128)
(declare-fun x1642 () Bool)
(declare-fun x3343 () Int)
(declare-fun x2963 () Int)
(declare-fun x2283 () Int)
(declare-fun x641 () Int)
(declare-fun x1379 () x5128)
(declare-fun x436 () Int)
(declare-fun x3545 () Int)
(declare-fun x5663 () Bool)
(declare-fun x6254 () Int)
(declare-fun x2855 () Bool)
(declare-fun x4395 () Int)
(declare-fun x2078 () Bool)
(declare-fun x2099 () Int)
(declare-fun x2714 () Bool)
(declare-fun x1859 () Bool)
(declare-fun x4253 () Bool)
(declare-fun x2541 () Bool)
(declare-fun x877 () Int)
(declare-fun x226 () Bool)
(declare-fun x4363 () Bool)
(declare-fun x969 () Bool)
(declare-fun x3567 () Int)
(declare-fun x2532 () Bool)
(declare-fun x4146 () Bool)
(declare-fun x5801 () Int)
(declare-fun x5212 () Int)
(declare-fun x6075 () Bool)
(declare-fun x2573 () Int)
(declare-fun x4934 () Int)
(declare-fun x1037 () Bool)
(declare-fun x5273 () Bool)
(declare-fun x594 () Bool)
(declare-fun x5024 () x5128)
(declare-fun x2311 () x5128)
(declare-fun x2231 () Int)
(declare-fun x795 () Bool)
(declare-fun x3093 () Bool)
(declare-fun x532 () Bool)
(declare-fun x1902 () Int)
(declare-fun x5821 () Bool)
(declare-fun x6262 () Int)
(declare-fun x4708 () Int)
(declare-fun x2552 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x2704 () Bool)
(declare-fun x6280 () Int)
(declare-fun x3810 () Int)
(declare-fun x485 () Bool)
(declare-fun x1570 () Bool)
(declare-fun x1381 () Int)
(declare-fun x5997 () Bool)
(declare-fun x6159 () Int)
(declare-fun x754 () Int)
(declare-fun x1758 () Bool)
(declare-fun x2321 () Bool)
(declare-fun x2676 () Int)
(declare-fun x3175 () Int)
(declare-fun x2410 () Int)
(declare-fun x4831 () Int)
(declare-fun x4529 () Bool)
(declare-fun x2690 () Int)
(declare-fun x4575 () Bool)
(declare-fun x4053 () x5128)
(declare-fun x2581 () Bool)
(declare-fun x4267 () Int)
(declare-fun x2890 () Int)
(declare-fun x2182 () x5128)
(declare-fun x2644 () Int)
(declare-fun x1609 () Bool)
(declare-fun x3372 () Bool)
(declare-fun x6246 () Bool)
(declare-fun x5845 () Bool)
(declare-fun x2450 () Bool)
(declare-fun x1043 () Int)
(declare-fun x1036 () Bool)
(declare-fun x3589 () Bool)
(declare-fun x5782 () Int)
(declare-fun x6171 () Bool)
(declare-fun x3671 () Bool)
(declare-fun x3167 () Int)
(declare-fun x1864 () Bool)
(declare-fun x1764 () Int)
(declare-fun x1588 () Int)
(declare-fun x4600 () Bool)
(declare-fun x3263 () x5128)
(declare-fun x5068 () Bool)
(declare-fun x3240 () x5128)
(declare-fun x307 () Int)
(declare-fun x4188 () Bool)
(declare-fun x5599 () x5128)
(declare-fun x747 () Int)
(declare-fun x1115 () x5128)
(declare-fun x5415 () x5128)
(declare-fun x2153 () Bool)
(declare-fun x4893 () Int)
(declare-fun x752 () Bool)
(declare-fun x2548 () Bool)
(declare-fun x2199 () Bool)
(declare-fun x878 () Bool)
(declare-fun x6325 () Bool)
(declare-fun x1207 () x5128)
(declare-fun x6 () Int)
(declare-fun x2163 () x5128)
(declare-fun x4698 () Int)
(declare-fun x2577 () Bool)
(declare-fun x5189 () Bool)
(declare-fun x1699 () Int)
(declare-fun x2739 () Int)
(declare-fun x6241 () Bool)
(declare-fun x1114 () Int)
(declare-fun x5834 () Bool)
(declare-fun x4584 () Bool)
(declare-fun x2734 () Int)
(declare-fun x2817 () Int)
(declare-fun x5676 () Int)
(declare-fun x4959 () Bool)
(declare-fun x6034 () x5128)
(declare-fun x2664 () Bool)
(declare-fun x3921 () Bool)
(declare-fun x1897 () x5128)
(declare-fun x4368 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x1307 (Int) Int)
(declare-fun x3950 () Int)
(declare-fun x5665 () Bool)
(declare-fun x626 () Int)
(declare-fun x5707 () Int)
(declare-fun x4787 () Bool)
(declare-fun x5081 () Bool)
(declare-fun x4347 () Bool)
(declare-fun x1587 () Int)
(declare-fun x1103 () Int)
(declare-fun x3537 () Bool)
(declare-fun x1705 () Int)
(declare-fun x2494 () Bool)
(declare-fun x5259 () Int)
(declare-fun x2274 () x5128)
(declare-fun x2379 () Bool)
(declare-fun x669 () Bool)
(declare-fun x4649 () Bool)
(declare-fun x633 () Int)
(declare-fun x452 () Bool)
(declare-fun x775 () Bool)
(declare-fun x2002 () Bool)
(declare-fun x5331 () x5128)
(declare-fun x2468 () Bool)
(declare-fun x6036 () Bool)
(declare-fun x1840 () Int)
(declare-fun x5307 () Bool)
(declare-fun x1658 () Int)
(declare-fun x5052 () Bool)
(declare-fun x3387 () Int)
(declare-fun x2395 () Bool)
(declare-fun x1590 () Int)
(declare-fun x1113 () Bool)
(declare-fun x3211 () Bool)
(declare-fun x5321 () Bool)
(declare-fun x5339 () Bool)
(declare-fun x2459 () Int)
(declare-fun x689 () Bool)
(declare-fun x5732 () Bool)
(declare-fun x1960 () Bool)
(declare-fun x5830 () Bool)
(declare-fun x6079 () Bool)
(declare-fun x3949 () Int)
(declare-fun x683 () Int)
(declare-fun x2764 () Int)
(declare-fun x4888 () Bool)
(declare-fun x6213 () Int)
(declare-fun x5265 () Bool)
(declare-fun x606 () Bool)
(declare-fun x6120 () Bool)
(declare-fun x766 () Bool)
(declare-fun x5839 () Bool)
(declare-fun x58 () Bool)
(declare-fun x5989 () Int)
(declare-fun x3064 () Int)
(declare-fun x3834 () Int)
(declare-fun x837 () Int)
(declare-fun x4685 () Bool)
(declare-fun x5772 () Int)
(declare-fun x4189 () Int)
(declare-fun x4147 () Bool)
(declare-fun x420 () Int)
(declare-fun x5134 () Bool)
(declare-fun x2101 () Int)
(declare-fun x5607 () Bool)
(declare-fun x1010 () Bool)
(declare-fun x2436 () Bool)
(declare-fun x5402 () Bool)
(declare-fun x5125 () Bool)
(declare-fun x3455 () Bool)
(declare-fun x6271 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x3794 () Bool)
(declare-fun x865 () Int)
(declare-fun x5190 () Bool)
(declare-fun x1397 () Int)
(declare-fun x5953 () Bool)
(declare-fun x6149 () Int)
(declare-fun x3139 () Bool)
(declare-fun x1524 () Bool)
(declare-fun x829 () Int)
(declare-fun x5249 () Bool)
(declare-fun x3239 () Bool)
(declare-fun x755 () Int)
(declare-fun x74 () Bool)
(declare-fun x4241 () Bool)
(declare-fun x2590 () Bool)
(declare-fun x4234 () Int)
(declare-fun x2892 () Bool)
(declare-fun x1290 () x5128)
(declare-fun x4425 () Bool)
(declare-fun x5112 () Bool)
(declare-fun x4125 () Int)
(declare-fun x2553 () x5128)
(declare-fun x2021 () Bool)
(declare-fun x5505 () Bool)
(declare-fun x5568 () x5128)
(declare-fun x5535 () Int)
(declare-fun x3943 () Int)
(declare-fun x176 () Int)
(declare-fun x4665 () Bool)
(declare-fun x1835 () Int)
(declare-fun x2793 () Bool)
(declare-fun x462 () Int)
(declare-fun x1988 () x5128)
(declare-fun x1370 () Bool)
(declare-fun x3670 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x800 () Bool)
(declare-fun x4573 () x5128)
(declare-fun x3030 () Int)
(declare-fun x635 () x5128)
(declare-fun x4177 () Bool)
(declare-fun x847 () Bool)
(declare-fun x2843 () Bool)
(declare-fun x3147 () Bool)
(declare-fun x1552 () Int)
(declare-fun x3620 () Int)
(declare-fun x4024 () x5128)
(declare-fun x5653 () Bool)
(declare-fun x853 () Int)
(declare-fun x1974 () Int)
(declare-fun x2177 () Int)
(declare-fun x5637 () Bool)
(declare-fun x1506 () Bool)
(declare-fun x4305 () Bool)
(declare-fun x4358 () Int)
(declare-fun x6263 () x5128)
(declare-fun x212 () Bool)
(declare-fun x6133 () Int)
(declare-fun x4145 () Bool)
(declare-fun x1439 () Int)
(declare-fun x2498 () Bool)
(declare-fun x805 () Bool)
(declare-fun x4454 () x5128)
(declare-fun x4714 () Bool)
(declare-fun x4648 () Int)
(declare-fun x6238 () Int)
(declare-fun x2977 () Int)
(declare-fun x603 () Bool)
(declare-fun x79 () Bool)
(declare-fun x2234 () Int)
(declare-fun x287 () Bool)
(declare-fun x2999 () Int)
(declare-fun x5520 () Bool)
(declare-fun x415 () Bool)
(declare-fun x3179 () Int)
(declare-fun x4964 () Int)
(declare-fun x4097 () Bool)
(declare-fun x5260 () Int)
(declare-fun x679 () Int)
(declare-fun x1074 () Int)
(declare-fun x3593 () Bool)
(declare-fun x644 () Bool)
(declare-fun x3828 () Int)
(declare-fun x3996 () Bool)
(declare-fun x1192 () Int)
(declare-fun x5201 () Bool)
(declare-fun x4578 () Int)
(declare-fun x6264 () Int)
(declare-fun x577 () Int)
(declare-fun x4199 () Bool)
(declare-fun x2526 () Bool)
(declare-fun x796 () Bool)
(declare-fun x3170 () Int)
(declare-fun x1881 () Bool)
(declare-fun x5329 () Bool)
(declare-fun x3231 () Int)
(declare-fun x3081 () Int)
(declare-fun x5537 () Int)
(declare-fun x311 () Int)
(declare-fun x2934 () Bool)
(declare-fun x551 () Bool)
(declare-fun x1148 () Bool)
(declare-fun x4402 () Int)
(declare-fun x2292 () Bool)
(declare-fun x4748 () Bool)
(declare-fun x5356 () Bool)
(declare-fun x5314 () Bool)
(declare-fun x5788 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x3550 (x5128) Int)
(declare-fun x4635 () Bool)
(declare-fun x4935 () Int)
(declare-fun x3577 () Bool)
(declare-fun x1377 () Int)
(declare-fun x590 () Bool)
(declare-fun x6336 () Int)
(declare-fun x3667 () Bool)
(declare-fun x271 () Int)
(declare-fun x4019 () Int)
(declare-fun x1665 () Int)
(declare-fun x1888 () x5128)
(declare-fun x5988 () Int)
(declare-fun x778 () Int)
(declare-fun x2109 () Bool)
(declare-fun x4006 () Bool)
(declare-fun x2988 () Bool)
(declare-fun x4507 () Int)
(declare-fun x4030 () Bool)
(declare-fun x405 () Bool)
(declare-fun x4480 () Bool)
(declare-fun x1623 () Bool)
(declare-fun x708 () x5128)
(declare-fun x5889 () Int)
(declare-fun x223 () x5128)
(declare-fun x5253 () Int)
(declare-fun x4324 () Bool)
(declare-fun x2998 () x5128)
(declare-fun x1235 () Bool)
(declare-fun x3663 () Bool)
(declare-fun x4690 () Bool)
(declare-fun x794 () Bool)
(declare-fun x2565 () Bool)
(declare-fun x3119 () Int)
(declare-fun x479 () Int)
(declare-fun x5252 () Int)
(declare-fun x412 () Bool)
(declare-fun x5658 () Bool)
(declare-fun x3974 () Int)
(declare-fun x5678 () Int)
(declare-fun x3503 () Int)
(declare-fun x3214 () Int)
(declare-fun x1970 () Bool)
(declare-fun x3103 () Bool)
(declare-fun x1644 () Int)
(declare-fun x5689 () Int)
(declare-fun x589 () Int)
(declare-fun x4332 () Int)
(declare-fun x308 () Bool)
(declare-fun x5525 () Bool)
(declare-fun x1863 () Bool)
(declare-fun x4603 () x5128)
(declare-fun x2158 () Bool)
(declare-fun x1920 () Bool)
(declare-fun x1052 () Bool)
(declare-fun x3304 () Bool)
(declare-fun x5465 () Bool)
(declare-fun x1428 () Bool)
(declare-fun x3812 () Int)
(declare-fun x2723 () Bool)
(declare-fun x3445 () Bool)
(declare-fun x3123 () Bool)
(declare-fun x1096 () Int)
(declare-fun x2270 () Int)
(declare-fun x1812 () Int)
(declare-fun x75 () Int)
(declare-fun x180 () x5128)
(declare-fun x1112 () Int)
(declare-fun x4394 () Bool)
(declare-fun x1495 () Int)
(declare-fun x1987 () x5128)
(declare-fun x3265 () Bool)
(declare-fun x958 () Bool)
(declare-fun x6104 () Bool)
(declare-fun x3026 () Bool)
(declare-fun x5090 () Int)
(declare-fun x2017 () Bool)
(declare-fun x1443 () x5128)
(declare-fun x350 (Int Int) Int)
(declare-fun x2366 () Bool)
(declare-fun x4939 () Bool)
(declare-fun x1714 () Int)
(declare-fun x5666 () Bool)
(declare-fun x772 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x5188 () Int)
(declare-fun x873 () Int)
(declare-fun x5884 () Bool)
(declare-fun x2830 () Bool)
(declare-fun x2334 () Bool)
(declare-fun x2546 () Bool)
(declare-fun x4900 () Bool)
(declare-fun x812 () Int)
(declare-fun x107 () Int)
(declare-fun x1445 () Int)
(declare-fun x771 () Bool)
(declare-fun x4553 () Int)
(declare-fun x978 () Bool)
(declare-fun x1875 () x5128)
(declare-fun x2954 () Bool)
(declare-fun x1454 () Bool)
(declare-fun x4323 () x5128)
(declare-fun x4301 () x5128)
(declare-fun x2682 () Int)
(declare-fun x2501 () Bool)
(declare-fun x5357 () Int)
(declare-fun x6070 () Bool)
(declare-fun x6195 () Int)
(declare-fun x4056 () Bool)
(declare-fun x3191 () Int)
(declare-fun x2779 () Bool)
(declare-fun x4756 () Int)
(declare-fun x888 () x5128)
(declare-fun x5595 () Bool)
(declare-fun x1383 () Int)
(declare-fun x2715 () Int)
(declare-fun x3778 () Int)
(declare-fun x5288 () Bool)
(declare-fun x6281 () Bool)
(declare-fun x361 () Int)
(declare-fun x489 () Bool)
(declare-fun x821 () Bool)
(declare-fun x848 () Bool)
(declare-fun x4785 () Bool)
(declare-fun x2821 () Bool)
(declare-fun x5729 () Bool)
(declare-fun x5094 () Bool)
(declare-fun x931 () Int)
(declare-fun x57 () Bool)
(declare-fun x67 () Int)
(declare-fun x1425 () Int)
(declare-fun x836 () Bool)
(declare-fun x5290 () Bool)
(declare-fun x5413 () Bool)
(declare-fun x4975 () Bool)
(declare-fun x6320 () Int)
(declare-fun x4849 () x5128)
(declare-fun x3258 () Bool)
(declare-fun x5921 () Bool)
(declare-fun x4325 () Bool)
(declare-fun x4243 () Bool)
(declare-fun x1912 () Int)
(declare-fun x5448 () x5128)
(declare-fun x3777 () Bool)
(declare-fun x703 () Int)
(declare-fun x638 () Bool)
(declare-fun x936 () Int)
(declare-fun x1579 () Bool)
(declare-fun x3200 () Int)
(declare-fun x5282 () Bool)
(declare-fun x6002 () Int)
(declare-fun x6212 () Bool)
(declare-fun x150 () Bool)
(declare-fun x680 () Bool)
(declare-fun x3413 () Bool)
(declare-fun x1250 () Int)
(declare-fun x5317 () Bool)
(declare-fun x5651 () Int)
(declare-fun x2169 () Int)
(declare-fun x3782 () Bool)
(declare-fun x3348 () Int)
(declare-fun x3924 () x5128)
(declare-fun x3497 () Bool)
(declare-fun x4687 () Int)
(declare-fun x639 () Bool)
(declare-fun x5278 () Bool)
(declare-fun x4442 () Int)
(declare-fun x5119 () x5128)
(declare-fun x3649 () Bool)
(declare-fun x730 () Int)
(declare-fun x2691 () Int)
(declare-fun x55 () Int)
(declare-fun x667 () Bool)
(declare-fun x3899 () Int)
(declare-fun x1569 () Int)
(declare-fun x3133 () Int)
(declare-fun x3206 () x5128)
(declare-fun x2298 () Bool)
(declare-fun x373 () Int)
(declare-fun x3824 () Bool)
(declare-fun x2027 () Bool)
(declare-fun x3986 () Bool)
(declare-fun x531 () Bool)
(declare-fun x2672 () x5128)
(declare-fun x2650 () Bool)
(declare-fun x4722 () x5128)
(declare-fun x3219 () x5128)
(declare-fun x1255 () Int)
(declare-fun x3785 () x5128)
(declare-fun x3051 () Bool)
(declare-fun x2465 () Bool)
(declare-fun x5432 () Bool)
(declare-fun x3224 () Bool)
(declare-fun x2032 () Bool)
(declare-fun x4382 () Bool)
(declare-fun x744 () Int)
(declare-fun x5105 () Int)
(declare-fun x6347 () x5128)
(declare-fun x2220 () Int)
(declare-fun x527 () Int)
(declare-fun x3836 () Bool)
(declare-fun x4563 () Bool)
(declare-fun x4008 () Bool)
(declare-fun x1690 () Bool)
(declare-fun x717 () Int)
(declare-fun x4123 () Int)
(declare-fun x5870 () Bool)
(declare-fun x2249 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x4484 () Bool)
(declare-fun x5384 () Bool)
(declare-fun x4898 () Bool)
(declare-fun x3188 () Bool)
(declare-fun x2119 () Bool)
(declare-fun x1126 () Bool)
(declare-fun x5422 () Int)
(declare-fun x4004 () Bool)
(declare-fun x2746 () Bool)
(declare-fun x6015 () Bool)
(declare-fun x4644 () Int)
(declare-fun x1605 () x5128)
(declare-fun x3856 () Int)
(declare-fun x1877 () Bool)
(declare-fun x4000 (Int) Int)
(declare-fun x3401 () Int)
(declare-fun x5005 () Bool)
(declare-fun x4276 () Int)
(declare-fun x1474 () Int)
(declare-fun x5502 () Int)
(declare-fun x3355 () Int)
(declare-fun x1922 () Bool)
(declare-fun x5955 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x4896 () Bool)
(declare-fun x862 () Bool)
(declare-fun x4868 () Bool)
(declare-fun x2454 () Bool)
(declare-fun x2040 () Bool)
(declare-fun x6043 () Bool)
(declare-fun x4481 () Int)
(declare-fun x17 () Bool)
(declare-fun x4918 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x5940 (Int) Int)
(declare-fun x4693 () Int)
(declare-fun x4515 () Int)
(declare-fun x2376 () Bool)
(declare-fun x5867 () Bool)
(declare-fun x3581 () x5128)
(declare-fun x4343 () x5128)
(declare-fun x867 () Bool)
(declare-fun x5656 () Bool)
(declare-fun x2539 () Bool)
(declare-fun x493 () Int)
(declare-fun x4493 () Bool)
(declare-fun x3839 () x5128)
(declare-fun x4556 () Bool)
(declare-fun x1310 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x1391 () x5128)
(declare-fun x5255 () Int)
(declare-fun x543 () Bool)
(declare-fun x4455 () Bool)
(declare-fun x6231 () Int)
(declare-fun x33 () Int)
(declare-fun x5470 () Int)
(declare-fun x2587 () Bool)
(declare-fun x4494 () Bool)
(declare-fun x116 () x5128)
(declare-fun x4112 () Int)
(declare-fun x3428 () Int)
(declare-fun x1026 () Bool)
(declare-fun x4413 () Int)
(declare-fun x5491 () Int)
(declare-fun x3637 () Bool)
(declare-fun x1865 () Bool)
(declare-fun x4618 () Bool)
(declare-fun x3990 () Int)
(declare-fun x3920 () Int)
(declare-fun x5887 () Bool)
(declare-fun x321 () Bool)
(declare-fun x2610 () Bool)
(declare-fun x1387 () x5128)
(declare-fun x3764 () Bool)
(declare-fun x1135 () Int)
(declare-fun x3574 () Int)
(declare-fun x3954 () Bool)
(declare-fun x3900 () Int)
(declare-fun x5848 () Bool)
(declare-fun x435 () Int)
(declare-fun x649 () Bool)
(declare-fun x971 () Int)
(declare-fun x2060 () x5128)
(declare-fun x1217 () Bool)
(declare-fun x2641 () Bool)
(declare-fun x1317 () Int)
(declare-fun x4737 () Bool)
(declare-fun x4809 () Bool)
(declare-fun x1660 () Bool)
(declare-fun x6298 () Int)
(declare-fun x3279 () Bool)
(declare-fun x4775 () Int)
(declare-fun x2873 () Int)
(declare-fun x1565 () Int)
(declare-fun x5087 () Int)
(declare-fun x2092 () Bool)
(declare-fun x4960 () Int)
(declare-fun x1697 () Int)
(declare-fun x1362 () Bool)
(declare-fun x5626 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x3166 () Int)
(declare-fun x2652 () Int)
(declare-fun x712 () Bool)
(declare-fun x3028 () Int)
(declare-fun x918 () Int)
(declare-fun x2088 () Bool)
(declare-fun x2176 () Bool)
(declare-fun x3370 () Bool)
(declare-fun x372 () x5128)
(declare-fun x5910 () Int)
(declare-fun x5185 () Bool)
(declare-fun x3930 () Int)
(declare-fun x14 () x5128)
(declare-fun x5216 () Bool)
(declare-fun x4872 () Bool)
(declare-fun x3880 () Bool)
(declare-fun x1653 (x5128) Int)
(declare-fun x5930 () Int)
(declare-fun x5812 () Bool)
(declare-fun x155 () x5128)
(declare-fun x2530 () x5128)
(declare-fun x3694 () Bool)
(declare-fun x1711 () Int)
(declare-fun x3294 () Bool)
(declare-fun x5565 () x5128)
(declare-fun x5473 () Bool)
(declare-fun x5086 () Int)
(declare-fun x4771 () Int)
(declare-fun x5431 () Bool)
(declare-fun x598 () Int)
(declare-fun x3987 () Int)
(declare-fun x1633 () Bool)
(declare-fun x5510 () Bool)
(declare-fun x334 () Int)
(declare-fun x3045 () Bool)
(declare-fun x5600 () Int)
(declare-fun x3905 () Int)
(declare-fun x3248 (Int) Int)
(declare-fun x4284 () x5128)
(declare-fun x5623 () Int)
(declare-fun x2240 () x5128)
(declare-fun x4165 () Int)
(declare-fun x579 () Bool)
(declare-fun x2396 () Int)
(declare-fun x5010 () x5128)
(declare-fun x6115 () Bool)
(declare-fun x3342 () Bool)
(declare-fun x524 () Bool)
(declare-fun x1839 () Bool)
(declare-fun x2062 () Int)
(declare-fun x3638 () Bool)
(declare-fun x4318 () Bool)
(declare-fun x5564 () Bool)
(declare-fun x4450 () Bool)
(declare-fun x246 () Bool)
(declare-fun x699 () Bool)
(declare-fun x4282 () x5128)
(declare-fun x3234 () Int)
(declare-fun x6170 () x5128)
(declare-fun x3999 (Int) Int)
(declare-fun x3002 () Int)
(declare-fun x3321 () Int)
(declare-fun x6279 () Bool)
(declare-fun x4758 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x572 () x5128)
(declare-fun x3965 () Int)
(declare-fun x723 () Bool)
(declare-fun x4421 () Int)
(declare-fun x5241 () Int)
(declare-fun x6055 () Bool)
(declare-fun x5154 () Int)
(declare-fun x519 () Bool)
(declare-fun x5172 () Bool)
(declare-fun x16 () x5128)
(declare-fun x2363 () Bool)
(declare-fun x1019 () Int)
(declare-fun x3107 () Bool)
(declare-fun x162 () Bool)
(declare-fun x1081 () Bool)
(declare-fun x991 () Bool)
(declare-fun x5861 () Bool)
(declare-fun x1297 () Bool)
(declare-fun x5226 () Int)
(declare-fun x5196 () Int)
(declare-fun x2180 () Bool)
(declare-fun x6066 () Int)
(declare-fun x5785 () Bool)
(declare-fun x3407 () Bool)
(declare-fun x4079 () Bool)
(declare-fun x1376 () Int)
(declare-fun x4554 () Bool)
(declare-fun x2479 () x5128)
(declare-fun x1651 () Int)
(declare-fun x4724 () Bool)
(declare-fun x3465 () Int)
(declare-fun x4081 () Int)
(declare-fun x3436 () Int)
(declare-fun x1354 () Int)
(declare-fun x4967 () Bool)
(declare-fun x3499 () x5128)
(declare-fun x5184 () Int)
(declare-fun x4734 () Bool)
(declare-fun x5460 () Bool)
(declare-fun x464 () Bool)
(declare-fun x4627 () x5128)
(declare-fun x488 () Bool)
(declare-fun x5358 () Bool)
(declare-fun x4582 () x5128)
(declare-fun x4379 () Bool)
(declare-fun x3359 () Bool)
(declare-fun x2066 () Bool)
(declare-fun x4580 () Bool)
(declare-fun x118 () Int)
(declare-fun x4970 () Int)
(declare-fun x6261 () Bool)
(declare-fun x2837 () Bool)
(declare-fun x6252 () Bool)
(declare-fun x1698 () Bool)
(declare-fun x5705 () Bool)
(declare-fun x1844 () Bool)
(declare-fun x5352 () x5128)
(declare-fun x5911 () Bool)
(declare-fun x819 () Bool)
(declare-fun x4769 () Bool)
(declare-fun x2370 () Bool)
(declare-fun x3840 () Int)
(declare-fun x4565 () Int)
(declare-fun x3618 () Int)
(declare-fun x4541 () Bool)
(declare-fun x5256 () Int)
(declare-fun x4500 () x5128)
(declare-fun x740 () Bool)
(declare-fun x5712 () Bool)
(declare-fun x1568 () Bool)
(declare-fun x5398 () Int)
(declare-fun x6319 () Bool)
(declare-fun x505 () Bool)
(declare-fun x3135 () Int)
(declare-fun x4485 () Bool)
(declare-fun x4800 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x4348 () Bool)
(declare-fun x3320 () Bool)
(declare-fun x3946 () Int)
(declare-fun x4921 () Bool)
(declare-fun x4013 () x5128)
(declare-fun x3784 () Int)
(declare-fun x5878 () Bool)
(declare-fun x3486 () Int)
(declare-fun x4650 () Int)
(declare-fun x5397 () Int)
(declare-fun x5570 () Int)
(declare-fun x2794 () Bool)
(declare-fun x1242 () x5128)
(declare-fun x144 () Int)
(declare-fun x3937 () Int)
(declare-fun x2209 () Int)
(declare-fun x5326 () Int)
(declare-fun x6059 () Bool)
(declare-fun x376 () Int)
(declare-fun x987 () Bool)
(declare-fun x6072 () Int)
(declare-fun x3151 () Int)
(declare-fun x6296 () Bool)
(declare-fun x2847 () Bool)
(declare-fun x3898 () Int)
(declare-fun x5439 () Bool)
(declare-fun x4804 () Int)
(declare-fun x2467 () Bool)
(declare-fun x5949 () x5128)
(declare-fun x367 () Int)
(declare-fun x3283 () Bool)
(declare-fun x5476 () Int)
(declare-fun x280 () x5128)
(declare-fun x23 () x5128)
(declare-fun x335 () Bool)
(declare-fun x2322 () Bool)
(declare-fun x576 () Bool)
(declare-fun x3085 () Bool)
(declare-fun x6126 () Bool)
(declare-fun x170 () Int)
(declare-fun x6025 () Int)
(declare-fun x6215 () Bool)
(declare-fun x4747 () Int)
(declare-fun x222 () Int)
(declare-fun x4298 () Bool)
(declare-fun x4855 () Bool)
(declare-fun x2981 () Bool)
(declare-fun x2001 () Bool)
(declare-fun x1659 () Bool)
(declare-fun x6260 () Bool)
(declare-fun x4640 () Bool)
(declare-fun x2889 () Int)
(declare-fun x1130 () Int)
(declare-fun x3925 (Int) Int)
(declare-fun x5345 () Bool)
(declare-fun x5810 () Bool)
(declare-fun x4656 () Bool)
(declare-fun x5379 () Int)
(declare-fun x707 () Bool)
(declare-fun x3458 () x5128)
(declare-fun x2305 () Int)
(declare-fun x1706 () Int)
(declare-fun x1827 () Bool)
(declare-fun x3467 () Int)
(declare-fun x5965 () Int)
(declare-fun x1299 () Int)
(declare-fun x854 () Bool)
(declare-fun x3870 () Int)
(declare-fun x1237 () Int)
(declare-fun x172 () Int)
(declare-fun x4292 () Int)
(declare-fun x1359 () Bool)
(declare-fun x5322 () Int)
(declare-fun x6354 () Bool)
(declare-fun x5304 () Int)
(declare-fun x2660 () Bool)
(declare-fun x6179 () x5128)
(declare-fun x5485 () Int)
(declare-fun x4991 () Int)
(declare-fun x4372 () Bool)
(declare-fun x4938 () Bool)
(declare-fun x6328 () Bool)
(declare-fun x2529 () x5128)
(declare-fun x5330 () Bool)
(declare-fun x86 () Bool)
(declare-fun x4169 () Int)
(declare-fun x5036 () Int)
(declare-fun x534 () Int)
(declare-fun x1133 () Bool)
(declare-fun x3127 () Bool)
(declare-fun x245 () Bool)
(declare-fun x5681 () Int)
(declare-fun x866 () Bool)
(declare-fun x4950 () Bool)
(declare-fun x3178 () Int)
(declare-fun x2458 () Int)
(declare-fun x4416 () Int)
(declare-fun x1501 () Bool)
(declare-fun x2980 () Bool)
(declare-fun x2404 () Int)
(declare-fun x2971 () Bool)
(declare-fun x1137 () Bool)
(declare-fun x3717 () Bool)
(declare-fun x6237 () Bool)
(declare-fun x2589 () Bool)
(declare-fun x5590 () Bool)
(declare-fun x3531 () Bool)
(declare-fun x5999 () Int)
(declare-fun x512 () Bool)
(declare-fun x4639 () Int)
(declare-fun x264 () Bool)
(declare-fun x5569 () Bool)
(declare-fun x199 () Bool)
(declare-fun x24 () Bool)
(declare-fun x3153 () Int)
(declare-fun x1494 () Int)
(declare-fun x1022 () Bool)
(declare-fun x190 () Int)
(declare-fun x146 () Bool)
(declare-fun x4908 () Int)
(declare-fun x4350 () Bool)
(declare-fun x5000 () Bool)
(declare-fun x3721 (Int) Int)
(declare-fun x3404 () Int)
(declare-fun x6184 () Bool)
(declare-fun x4715 () Bool)
(declare-fun x4036 () Bool)
(declare-fun x161 () Bool)
(declare-fun x1215 () Bool)
(declare-fun x5206 () Int)
(declare-fun x3073 () Bool)
(declare-fun x3795 () Bool)
(declare-fun x3020 () Int)
(declare-fun x197 (Int) Int)
(declare-fun x2515 () Bool)
(declare-fun x2449 () Bool)
(declare-fun x3736 () Bool)
(declare-fun x1769 () Int)
(declare-fun x4832 () Bool)
(declare-fun x5429 () x5128)
(declare-fun x558 () Bool)
(declare-fun x6197 () Int)
(declare-fun x4376 () Int)
(declare-fun x2872 () Bool)
(declare-fun x4692 () Int)
(declare-fun x1534 () Bool)
(declare-fun x2887 () Bool)
(declare-fun x2527 () Bool)
(declare-fun x5205 () Int)
(declare-fun x475 () Bool)
(declare-fun x395 () Bool)
(declare-fun x5573 () Bool)
(declare-fun x900 () Int)
(declare-fun x6161 () Bool)
(declare-fun x3677 () Bool)
(declare-fun x4880 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x3952 () Bool)
(declare-fun x483 () x5128)
(declare-fun x1669 () Int)
(declare-fun x5451 () Int)
(declare-fun x963 () Bool)
(declare-fun x6076 () Bool)
(declare-fun x2020 () Int)
(declare-fun x4346 () Bool)
(declare-fun x3576 () Bool)
(declare-fun x2819 () Int)
(declare-fun x549 (Int) Int)
(declare-fun x1325 () Bool)
(declare-fun x1601 () Bool)
(declare-fun x5108 () Bool)
(declare-fun x101 () Bool)
(declare-fun x2864 () x5128)
(declare-fun x202 () Int)
(declare-fun x2451 () Int)
(declare-fun x2319 () Bool)
(declare-fun x2580 () Int)
(declare-fun x218 () Bool)
(declare-fun x2275 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x1799 () Int)
(declare-fun x2048 () Bool)
(declare-fun x3141 () Int)
(declare-fun x389 (x5128) Int)
(declare-fun x2799 () Bool)
(declare-fun x1219 () Bool)
(declare-fun x3307 () Int)
(declare-fun x2377 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x125 () Int)
(declare-fun x3452 () Bool)
(declare-fun x3588 () Bool)
(declare-fun x3727 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x621 () Int)
(declare-fun x863 () Bool)
(declare-fun x838 () Int)
(declare-fun x5001 () x5128)
(declare-fun x3019 () Int)
(declare-fun x537 () Bool)
(declare-fun x879 () Bool)
(declare-fun x5758 () Int)
(declare-fun x2505 () Bool)
(declare-fun x4630 () Int)
(declare-fun x1463 () Bool)
(declare-fun x6061 () Bool)
(declare-fun x1415 () Bool)
(declare-fun x1287 () Int)
(declare-fun x259 () Int)
(declare-fun x4043 () Int)
(declare-fun x3679 () Int)
(declare-fun x5327 () Bool)
(declare-fun x5490 () Bool)
(declare-fun x5883 () x5128)
(declare-fun x779 () Int)
(declare-fun x4492 () Bool)
(declare-fun x4308 () Bool)
(declare-fun x3711 (Int) Int)
(declare-fun x1511 () Bool)
(declare-fun x3602 () Int)
(declare-fun x1525 () Bool)
(declare-fun x4745 () x5128)
(declare-fun x1519 () Int)
(declare-fun x1291 () Int)
(declare-fun x4002 () Bool)
(declare-fun x2042 () Bool)
(declare-fun x2597 () Bool)
(declare-fun x255 () Bool)
(declare-fun x4744 (x5128) Int)
(declare-fun x3743 () Bool)
(declare-fun x3040 () Bool)
(declare-fun x3526 () Int)
(declare-fun x2823 () Bool)
(declare-fun x988 () Bool)
(declare-fun x3417 () Bool)
(declare-fun x3100 () Bool)
(declare-fun x3004 () Bool)
(declare-fun x3194 () Bool)
(declare-fun x2952 () Bool)
(declare-fun x4288 () Bool)
(declare-fun x2331 () Int)
(declare-fun x6295 () Int)
(declare-fun x3896 () Bool)
(declare-fun x4920 () Int)
(declare-fun x5014 (x5128) Int)
(declare-fun x1825 () x5128)
(declare-fun x4675 () Bool)
(declare-fun x5631 () Int)
(declare-fun x6166 () Int)
(declare-fun x5648 () x5128)
(declare-fun x5807 () Bool)
(declare-fun x4050 () Bool)
(declare-fun x4089 () Bool)
(declare-fun x4182 () Bool)
(declare-fun x387 () Bool)
(declare-fun x211 () Bool)
(declare-fun x393 () Int)
(declare-fun x4229 () Bool)
(declare-fun x3181 () Bool)
(declare-fun x5354 () x5128)
(declare-fun x2433 () Bool)
(declare-fun x4435 () Bool)
(declare-fun x2789 () Bool)
(declare-fun x3160 () Bool)
(declare-fun x830 () Bool)
(declare-fun x933 () x5128)
(declare-fun x3858 () Bool)
(declare-fun x1355 () Bool)
(declare-fun x3084 () Int)
(declare-fun x2069 () Int)
(declare-fun x3108 () x5128)
(declare-fun x6234 () Bool)
(declare-fun x3662 () Int)
(declare-fun x4244 () x5128)
(declare-fun x5634 () x5128)
(declare-fun x4424 () Int)
(declare-fun x4772 () Int)
(declare-fun x2251 () Bool)
(declare-fun x3653 () Int)
(declare-fun x6366 () Int)
(declare-fun x4307 () Int)
(declare-fun x492 () Bool)
(declare-fun x3058 () Bool)
(declare-fun x6221 () Int)
(declare-fun x4851 () Int)
(declare-fun x702 () Bool)
(declare-fun x3260 () Int)
(declare-fun x3047 () Bool)
(declare-fun x2795 () Int)
(declare-fun x6113 () Bool)
(declare-fun x3382 () Int)
(declare-fun x1672 () Bool)
(declare-fun x1346 () x5128)
(declare-fun x5904 () Int)
(declare-fun x2090 () Bool)
(declare-fun x5742 () Bool)
(declare-fun x4976 () Bool)
(declare-fun x4605 () Int)
(declare-fun x776 () Bool)
(declare-fun x4773 () Int)
(declare-fun x5743 () Int)
(declare-fun x3909 () Int)
(declare-fun x3390 () Bool)
(declare-fun x3363 () Bool)
(declare-fun x904 () Bool)
(declare-fun x300 () Bool)
(declare-fun x3682 () Bool)
(declare-fun x1715 () Bool)
(declare-fun x141 () Bool)
(declare-fun x2204 () Bool)
(declare-fun x547 () x5128)
(declare-fun x3587 () Bool)
(declare-fun x1976 () Bool)
(declare-fun x2296 () Int)
(declare-fun x3756 () Int)
(declare-fun x3575 () Int)
(declare-fun x5015 () Bool)
(declare-fun x1015 () Bool)
(declare-fun x2583 () Bool)
(declare-fun x882 () Bool)
(declare-fun x2371 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x5139 () Bool)
(declare-fun x3516 () Int)
(declare-fun x588 () Bool)
(declare-fun x668 () Int)
(declare-fun x5283 () Int)
(declare-fun x5436 () Int)
(declare-fun x1348 () x5128)
(declare-fun x4293 () Int)
(declare-fun x374 () Int)
(declare-fun x3290 () Bool)
(declare-fun x2139 () Int)
(declare-fun x6044 () Bool)
(declare-fun x2678 () Int)
(declare-fun x3788 () Int)
(declare-fun x1489 () Int)
(declare-fun x3654 () Bool)
(declare-fun x1597 () Int)
(declare-fun x6335 () Bool)
(declare-fun x974 (Int) Int)
(declare-fun x2492 () Int)
(declare-fun x208 () Bool)
(declare-fun x2400 () x5128)
(declare-fun x2626 () Int)
(declare-fun x4468 () Bool)
(declare-fun x2512 () Bool)
(declare-fun x3869 () Int)
(declare-fun x2223 () Int)
(declare-fun x2359 () Int)
(declare-fun x1066 () Int)
(declare-fun x2507 () Bool)
(declare-fun x1482 () Int)
(declare-fun x4261 () Bool)
(declare-fun x4446 () Bool)
(declare-fun x3982 () Bool)
(declare-fun x2979 () Int)
(declare-fun x715 () Int)
(declare-fun x3558 () Bool)
(declare-fun x4449 () Int)
(declare-fun x4285 () Int)
(declare-fun x2414 () x5128)
(declare-fun x2775 () Bool)
(declare-fun x4977 () Int)
(declare-fun x2502 () Bool)
(declare-fun x4660 () Int)
(declare-fun x6067 () Bool)
(declare-fun x2072 () Bool)
(declare-fun x976 () Bool)
(declare-fun x343 () Bool)
(declare-fun x6046 () Int)
(declare-fun x3054 () Bool)
(declare-fun x3146 () Int)
(declare-fun x3267 () Int)
(declare-fun x4099 () Bool)
(declare-fun x4531 () Bool)
(declare-fun x2730 () Int)
(declare-fun x4039 (Int) Int)
(declare-fun x4045 () Int)
(declare-fun x4576 () Bool)
(declare-fun x1929 () Int)
(declare-fun x3678 () Int)
(declare-fun x2098 () x5128)
(declare-fun x1246 () Bool)
(declare-fun x4904 () Int)
(declare-fun x1831 () x5128)
(declare-fun x1263 () Bool)
(declare-fun x2345 () Int)
(declare-fun x2533 () Bool)
(declare-fun x2857 () Int)
(declare-fun x5445 () Bool)
(declare-fun x196 () Int)
(declare-fun x4951 () Int)
(declare-fun x3718 () Bool)
(declare-fun x1238 () Int)
(declare-fun x1824 () Bool)
(declare-fun x5266 () Bool)
(declare-fun x3825 () Bool)
(declare-fun x3684 () Bool)
(declare-fun x2808 () Bool)
(declare-fun x4014 () Bool)
(declare-fun x4862 () Bool)
(declare-fun x5310 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x5991 () Bool)
(declare-fun x2716 () Bool)
(declare-fun x5737 () Int)
(declare-fun x6116 () Bool)
(declare-fun x5202 () Bool)
(declare-fun x380 () Int)
(declare-fun x2093 () Int)
(declare-fun x768 () Bool)
(declare-fun x3249 () Int)
(declare-fun x2259 () Int)
(declare-fun x1151 () Bool)
(declare-fun x5004 () Bool)
(declare-fun x5664 () Bool)
(declare-fun x481 () x5128)
(declare-fun x1196 () x5128)
(declare-fun x3517 () Bool)
(declare-fun x5114 () Int)
(declare-fun x2685 () Bool)
(declare-fun x407 () Int)
(declare-fun x3765 () Int)
(declare-fun x3479 () Int)
(declare-fun x1853 () Bool)
(declare-fun x2845 () Bool)
(declare-fun x3125 () Bool)
(declare-fun x5687 () Bool)
(declare-fun x4958 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x881 () Bool)
(declare-fun x2856 () Int)
(declare-fun x5703 () Int)
(declare-fun x1681 () Bool)
(declare-fun x3495 () Bool)
(declare-fun x4349 () Bool)
(declare-fun x5922 () Bool)
(declare-fun x631 () Int)
(declare-fun x982 () Int)
(declare-fun x5690 () Int)
(declare-fun x2260 () Bool)
(declare-fun x3804 () Int)
(declare-fun x1268 () Int)
(declare-fun x599 () Int)
(declare-fun x3750 () Int)
(declare-fun x1713 () Bool)
(declare-fun x459 () Int)
(declare-fun x5529 () Int)
(declare-fun x4236 () Bool)
(declare-fun x616 () Int)
(declare-fun x2152 () Bool)
(declare-fun x1941 () Int)
(declare-fun x5504 () Bool)
(declare-fun x2806 () Int)
(declare-fun x5975 () Int)
(declare-fun x5098 () Bool)
(declare-fun x6364 () Int)
(declare-fun x5850 () Bool)
(declare-fun x6207 () x5128)
(declare-fun x1572 () Bool)
(declare-fun x2131 () x5128)
(declare-fun x5332 () Bool)
(declare-fun x1798 () Bool)
(declare-fun x6239 () Int)
(declare-fun x1738 () Bool)
(declare-fun x2619 () Bool)
(declare-fun x377 () x5128)
(declare-fun x5574 () Int)
(declare-fun x3386 () Bool)
(declare-fun x944 () Bool)
(declare-fun x1271 () Int)
(declare-fun x1585 () Bool)
(declare-fun x504 () Int)
(declare-fun x2758 () Bool)
(declare-fun x825 () Bool)
(declare-fun x2452 () Bool)
(declare-fun x1778 () Int)
(declare-fun x5744 () Int)
(declare-fun x1949 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x5163 () Int)
(declare-fun x4171 () Int)
(declare-fun x6173 () x5128)
(declare-fun x2826 () Int)
(declare-fun x5982 () Int)
(declare-fun x1536 () Bool)
(declare-fun x4613 () Int)
(declare-fun x2600 () Bool)
(declare-fun x1797 () Bool)
(declare-fun x1746 () Int)
(declare-fun x4247 () x5128)
(declare-fun x3510 () Int)
(declare-fun x785 () Int)
(declare-fun x3086 () Int)
(declare-fun x2284 () Int)
(declare-fun x5023 () Bool)
(declare-fun x3183 () x5128)
(declare-fun x5642 () Int)
(declare-fun x4994 () Int)
(declare-fun x3457 () Bool)
(declare-fun x3822 () Int)
(declare-fun x1847 () Bool)
(declare-fun x2037 () Bool)
(declare-fun x53 () Bool)
(declare-fun x2304 () Bool)
(declare-fun x4020 () Bool)
(declare-fun x2621 () Int)
(declare-fun x2067 () Bool)
(declare-fun x4042 () Int)
(declare-fun x5138 () Int)
(declare-fun x1948 () Bool)
(declare-fun x4530 () Bool)
(declare-fun x5528 () Int)
(declare-fun x1288 () Int)
(declare-fun x4811 () Int)
(declare-fun x4543 () Bool)
(declare-fun x5008 () Bool)
(declare-fun x2128 () Bool)
(declare-fun x2343 () Int)
(declare-fun x353 () Bool)
(declare-fun x6047 () Int)
(declare-fun x5170 () Bool)
(declare-fun x3790 () Bool)
(declare-fun x1640 () Bool)
(declare-fun x3189 () Int)
(declare-fun x725 () Bool)
(declare-fun x4273 () Bool)
(declare-fun x5667 () Bool)
(declare-fun x6268 () Bool)
(declare-fun x1484 () Int)
(declare-fun x602 () Int)
(declare-fun x4899 () Bool)
(declare-fun x4548 () x5128)
(declare-fun x5435 () Int)
(declare-fun x3317 () Bool)
(declare-fun x277 () Int)
(declare-fun x4542 () Int)
(declare-fun x5264 () Bool)
(declare-fun x3505 () Bool)
(declare-fun x487 () Int)
(declare-fun x3328 () Int)
(declare-fun x3130 () Int)
(declare-fun x6227 () Int)
(declare-fun x4794 () Bool)
(declare-fun x815 () Bool)
(declare-fun x2631 () Int)
(declare-fun x3053 () x5128)
(declare-fun x5126 () Bool)
(declare-fun x423 (Int Int) Int)
(declare-fun x1347 () Bool)
(declare-fun x2443 () Bool)
(declare-fun x1508 () x5128)
(declare-fun x2606 () Bool)
(declare-fun x4138 () Bool)
(declare-fun x3475 () Bool)
(declare-fun x124 () Bool)
(declare-fun x2560 () Int)
(declare-fun x2428 () Bool)
(declare-fun x5563 () Bool)
(declare-fun x4513 () Bool)
(declare-fun x1641 () Int)
(declare-fun x3655 () Int)
(declare-fun x5325 () Int)
(declare-fun x2931 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x5417 () Bool)
(declare-fun x832 () x5128)
(declare-fun x4503 () Int)
(declare-fun x4226 () Bool)
(declare-fun x4612 () Int)
(declare-fun x2288 () Bool)
(declare-fun x5092 () Int)
(declare-fun x553 () Bool)
(declare-fun x313 () Bool)
(declare-fun x3939 () Bool)
(declare-fun x6145 () Int)
(declare-fun x6006 () Bool)
(declare-fun x3592 () Int)
(declare-fun x3563 () Bool)
(declare-fun x3434 () Bool)
(declare-fun x2846 () Int)
(declare-fun x3707 () Bool)
(declare-fun x4742 () x5128)
(declare-fun x2670 () Int)
(declare-fun x3087 () Bool)
(declare-fun x3989 () x5128)
(declare-fun x2510 () Bool)
(declare-fun x3463 () Bool)
(declare-fun x506 () Int)
(declare-fun x1429 () Bool)
(declare-fun x5453 () Int)
(declare-fun x6018 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x5186 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x5524 () Int)
(declare-fun x3540 () Int)
(declare-fun x5104 () Bool)
(declare-fun x1123 () Bool)
(declare-fun x3323 () Bool)
(declare-fun x5203 () Bool)
(declare-fun x3335 () Bool)
(declare-fun x242 () Int)
(declare-fun x4185 () Bool)
(declare-fun x396 () Bool)
(declare-fun x4062 () Int)
(declare-fun x3807 () x5128)
(declare-fun x5268 (x5128) Int)
(declare-fun x3866 () Int)
(declare-fun x1385 () Int)
(declare-fun x5124 () Bool)
(declare-fun x992 () Bool)
(declare-fun x397 () Int)
(declare-fun x5374 () Bool)
(declare-fun x3553 () Bool)
(declare-fun x2944 () x5128)
(declare-fun x3809 () Int)
(declare-fun x4803 () Bool)
(declare-fun x4073 () Bool)
(declare-fun x569 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x4678 () Int)
(declare-fun x4202 () Bool)
(declare-fun x5720 () Bool)
(declare-fun x2271 () Bool)
(declare-fun x5344 () Bool)
(declare-fun x2097 () Int)
(declare-fun x1168 () Bool)
(declare-fun x5551 () Bool)
(declare-fun x4074 () Bool)
(declare-fun x1771 () Int)
(declare-fun x724 () x5128)
(declare-fun x1180 () Int)
(declare-fun x4712 () Bool)
(declare-fun x3337 () Bool)
(declare-fun x5153 () Int)
(declare-fun x6088 () Bool)
(declare-fun x3315 () Bool)
(declare-fun x1691 () Bool)
(declare-fun x4174 () Int)
(declare-fun x5859 () Bool)
(declare-fun x4705 () Int)
(declare-fun x3482 () Int)
(declare-fun x634 () Bool)
(declare-fun x72 () Bool)
(declare-fun x5511 () Bool)
(declare-fun x6267 () Bool)
(declare-fun x4892 () Int)
(declare-fun x5541 () Int)
(declare-fun x295 () Bool)
(declare-fun x1227 () Bool)
(declare-fun x1367 () Int)
(declare-fun x3524 () Bool)
(declare-fun x4998 () Bool)
(declare-fun x5430 () Bool)
(declare-fun x1893 () Bool)
(declare-fun x5118 () Int)
(declare-fun x1796 () Bool)
(declare-fun x1558 () Int)
(declare-fun x4700 () Bool)
(declare-fun x5543 () Bool)
(declare-fun x5006 () Int)
(declare-fun x3349 () Int)
(declare-fun x1389 () x5128)
(declare-fun x2026 () Bool)
(declare-fun x5454 () Bool)
(declare-fun x491 () Bool)
(declare-fun x2317 () Bool)
(declare-fun x2208 () Int)
(declare-fun x473 () Int)
(declare-fun x5661 (Int) Int)
(declare-fun x105 () Bool)
(declare-fun x3672 () Bool)
(declare-fun x418 () Bool)
(declare-fun x1876 () Int)
(declare-fun x2421 () Int)
(declare-fun x4167 () Bool)
(declare-fun x2178 () Int)
(declare-fun x920 () Bool)
(declare-fun x2019 () Bool)
(declare-fun x3079 () Bool)
(declare-fun x5400 () Bool)
(declare-fun x2646 () Bool)
(declare-fun x3076 () Bool)
(declare-fun x3336 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x748 () Bool)
(declare-fun x5404 (Int) Int)
(declare-fun x1341 () Bool)
(declare-fun x6327 () Bool)
(declare-fun x4064 () Bool)
(declare-fun x3595 () Bool)
(declare-fun x4524 () x5128)
(declare-fun x278 () Bool)
(declare-fun x2854 () Bool)
(declare-fun x3077 () Bool)
(declare-fun x5731 () Bool)
(declare-fun x4658 (Int) Int)
(declare-fun x1981 () x5128)
(declare-fun x4522 () Int)
(declare-fun x860 () Bool)
(declare-fun x4320 () Bool)
(declare-fun x5299 () Bool)
(declare-fun x5089 () Bool)
(declare-fun x3331 () Bool)
(declare-fun x962 () Int)
(declare-fun x1551 () Int)
(declare-fun x5007 () Bool)
(declare-fun x194 () Bool)
(declare-fun x3894 () Bool)
(declare-fun x5210 () Int)
(declare-fun x4963 () Bool)
(declare-fun x4266 () Bool)
(declare-fun x1780 () Bool)
(declare-fun x4429 () Bool)
(declare-fun x4743 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x651 () Bool)
(declare-fun x1908 () Int)
(declare-fun x5583 () x5128)
(declare-fun x2330 () x5128)
(declare-fun x2202 () x5128)
(declare-fun x3065 () Bool)
(declare-fun x2822 () Int)
(declare-fun x5312 () Bool)
(declare-fun x6311 () Bool)
(declare-fun x3408 () Int)
(declare-fun x5425 () Bool)
(declare-fun x6208 () Bool)
(declare-fun x1188 () Int)
(declare-fun x5478 () Int)
(declare-fun x3034 () Bool)
(declare-fun x6223 () Bool)
(declare-fun x2351 () Bool)
(declare-fun x3481 () Int)
(declare-fun x2028 () Bool)
(declare-fun x3177 () Bool)
(declare-fun x3541 () x5128)
(declare-fun x5876 () Bool)
(declare-fun x3548 () Bool)
(declare-fun x6024 () Int)
(declare-fun x6081 () Bool)
(declare-fun x1700 () Bool)
(declare-fun x5740 () Int)
(declare-fun x1842 () Int)
(declare-fun x4176 () Bool)
(declare-fun x3347 () Bool)
(declare-fun x4878 () Int)
(declare-fun x1256 () Bool)
(declare-fun x3039 () Int)
(declare-fun x2033 () Int)
(declare-fun x4007 () Bool)
(declare-fun x1539 () Int)
(declare-fun x5530 () Int)
(declare-fun x6085 () Int)
(declare-fun x5594 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x5434 () Bool)
(declare-fun x3176 () Bool)
(declare-fun x1169 () Int)
(declare-fun x1878 () x5128)
(declare-fun x369 () Bool)
(declare-fun x4823 () Int)
(declare-fun x238 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x3752 () Bool)
(declare-fun x390 () Bool)
(declare-fun x1608 () Bool)
(declare-fun x1811 () Int)
(declare-fun x3063 () Bool)
(declare-fun x3173 () Int)
(declare-fun x430 () Bool)
(declare-fun x3966 () Bool)
(declare-fun x615 () x5128)
(declare-fun x3067 () Bool)
(declare-fun x2825 () Int)
(declare-fun x214 () Int)
(declare-fun x4300 () Int)
(declare-fun x2960 () Int)
(declare-fun x1879 () Bool)
(declare-fun x1390 () Int)
(declare-fun x4496 () Bool)
(declare-fun x3601 () Int)
(declare-fun x4679 () Bool)
(declare-fun x5866 () Int)
(declare-fun x2183 () Bool)
(declare-fun x2755 () Bool)
(declare-fun x4371 () Int)
(declare-fun x783 () Bool)
(declare-fun x4367 () x5128)
(declare-fun x2242 () Bool)
(declare-fun x3247 () Int)
(declare-fun x1078 () Bool)
(declare-fun x5786 () Bool)
(declare-fun x406 () x5128)
(declare-fun x4671 () Int)
(declare-fun x5983 () Bool)
(declare-fun x1492 () Int)
(declare-fun x2280 () Int)
(declare-fun x4957 () Int)
(declare-fun x4695 () Bool)
(declare-fun x3460 () Int)
(declare-fun x2785 () Bool)
(declare-fun x6249 () Bool)
(declare-fun x2683 () Bool)
(declare-fun x4069 () Bool)
(declare-fun x7 () Bool)
(declare-fun x2986 () x5128)
(declare-fun x2291 () Int)
(declare-fun x1991 () Bool)
(declare-fun x3908 () Bool)
(declare-fun x2961 () Bool)
(declare-fun x3409 () x5128)
(declare-fun x5591 () Bool)
(declare-fun x3487 () Bool)
(declare-fun x6137 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x979 () Int)
(declare-fun x3627 () Bool)
(declare-fun x4209 () Bool)
(declare-fun x6074 () Int)
(declare-fun x834 () Bool)
(declare-fun x5587 () Bool)
(declare-fun x3737 () x5128)
(declare-fun x2460 () x5128)
(declare-fun x1692 () Bool)
(declare-fun x868 () Bool)
(declare-fun x2636 () Bool)
(declare-fun x4833 () Bool)
(declare-fun x5971 () Bool)
(declare-fun x1775 () Int)
(declare-fun x6110 () Int)
(declare-fun x1409 () Bool)
(declare-fun x2731 () Int)
(declare-fun x3216 () Int)
(declare-fun x4883 () Bool)
(declare-fun x6222 () Int)
(declare-fun x4926 () Int)
(declare-fun x3993 () Int)
(declare-fun x248 () Bool)
(declare-fun x874 () Bool)
(declare-fun x4919 () Bool)
(declare-fun x3169 () x5128)
(declare-fun x6247 () Int)
(declare-fun x1655 () x5128)
(declare-fun x3859 () Int)
(declare-fun x4075 () Bool)
(declare-fun x4535 () Int)
(declare-fun x6216 () Bool)
(declare-fun x4027 () Bool)
(declare-fun x3569 () Bool)
(declare-fun x5593 () Int)
(declare-fun x2071 () Int)
(declare-fun x4102 () Bool)
(declare-fun x4390 () Bool)
(declare-fun x3879 () Bool)
(declare-fun x2387 () x5128)
(declare-fun x6124 () Int)
(declare-fun x5844 () Int)
(declare-fun x1251 () Bool)
(declare-fun x2136 () Bool)
(declare-fun x5156 () Bool)
(declare-fun x2562 () x5128)
(declare-fun x568 () Bool)
(declare-fun x2663 () Int)
(declare-fun x4545 () x5128)
(declare-fun x191 () Int)
(declare-fun x4330 () Int)
(declare-fun x4686 () Int)
(declare-fun x6071 () Bool)
(declare-fun x2881 () Int)
(declare-fun x3897 () Bool)
(declare-fun x4212 () Bool)
(declare-fun x1466 () Bool)
(declare-fun x5874 () Bool)
(declare-fun x1753 () Int)
(declare-fun x2990 () Bool)
(declare-fun x827 () Int)
(declare-fun x6259 () Bool)
(declare-fun x4509 () Int)
(declare-fun x4192 () Bool)
(declare-fun x3591 () Bool)
(declare-fun x3352 () Bool)
(declare-fun x4863 () Bool)
(declare-fun x4955 () Bool)
(declare-fun x5242 () Bool)
(declare-fun x2578 () Int)
(declare-fun x2478 () x5128)
(declare-fun x2418 () Int)
(declare-fun x3696 () Int)
(declare-fun x4071 () Int)
(declare-fun x5791 () Int)
(declare-fun x4852 () Int)
(declare-fun x181 () x5128)
(declare-fun x4080 () Bool)
(declare-fun x3442 () x5128)
(declare-fun x1749 () Int)
(declare-fun x1656 () Int)
(declare-fun x5972 () Bool)
(declare-fun x5230 () Int)
(declare-fun x4766 () Bool)
(declare-fun x4487 () Int)
(declare-fun x5130 () Bool)
(declare-fun x4230 () Int)
(declare-fun x3011 () Int)
(declare-fun x1852 () x5128)
(declare-fun x4838 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x2150 () Bool)
(declare-fun x5257 () Int)
(declare-fun x5894 () Int)
(declare-fun x3215 () Int)
(declare-fun x5700 () Int)
(declare-fun x3080 () Bool)
(declare-fun x2179 () Bool)
(declare-fun x1689 () Bool)
(declare-fun x3685 () Int)
(declare-fun x3144 () Int)
(declare-fun x5353 () Int)
(declare-fun x111 () Bool)
(declare-fun x6064 () Bool)
(declare-fun x2338 (x5128) Int)
(declare-fun x3228 () Bool)
(declare-fun x5585 () Bool)
(declare-fun x2374 () Bool)
(declare-fun x1049 () Int)
(declare-fun x3549 () Bool)
(declare-fun x824 () Int)
(declare-fun x5817 () Int)
(declare-fun x721 () Bool)
(declare-fun x3005 () Int)
(declare-fun x1730 () Int)
(declare-fun x5935 () Int)
(declare-fun x4646 () Int)
(declare-fun x4322 () x5128)
(declare-fun x3907 () Bool)
(declare-fun x2778 () Bool)
(declare-fun x6331 () Int)
(declare-fun x2096 () Bool)
(declare-fun x3590 () Int)
(declare-fun x4467 () Bool)
(declare-fun x188 () Bool)
(declare-fun x3697 () Bool)
(declare-fun x5793 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x1952 () Int)
(declare-fun x4587 () Int)
(declare-fun x2824 () Bool)
(declare-fun x3324 () x5128)
(declare-fun x6139 () x5128)
(declare-fun x5056 () Int)
(declare-fun x704 () Bool)
(declare-fun x3439 () Bool)
(declare-fun x5662 () x5128)
(declare-fun x4877 () Bool)
(declare-fun x4040 () Int)
(declare-fun x580 () Int)
(declare-fun x6143 () Int)
(declare-fun x6011 () Bool)
(declare-fun x3800 () Int)
(declare-fun x2697 () Bool)
(declare-fun x952 () x5128)
(declare-fun x6060 () Int)
(declare-fun x4427 () Bool)
(declare-fun x4303 () Bool)
(declare-fun x3885 () Bool)
(declare-fun x3277 () x5128)
(declare-fun x2323 () Int)
(declare-fun x2437 () Bool)
(declare-fun x5814 () Bool)
(declare-fun x5741 () Int)
(declare-fun x5275 () x5128)
(declare-fun x1183 (Int) Int)
(declare-fun x5674 () Bool)
(declare-fun x3808 () Int)
(declare-fun x344 () x5128)
(declare-fun x1089 () x5128)
(declare-fun x5561 () Int)
(declare-fun x6321 () Int)
(declare-fun x2834 (x5128) Int)
(declare-fun x6010 () Int)
(declare-fun x2656 () Bool)
(declare-fun x1032 () x5128)
(declare-fun x6360 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x3411 () Bool)
(declare-fun x1822 () Bool)
(declare-fun x6095 () Bool)
(declare-fun x2753 () Int)
(declare-fun x1805 () Int)
(declare-fun x4667 () Bool)
(declare-fun x5644 () Int)
(declare-fun x5037 () Int)
(declare-fun x5136 () Bool)
(declare-fun x2542 () Bool)
(declare-fun x5272 () Int)
(declare-fun x2402 () Int)
(declare-fun x4035 () Bool)
(declare-fun x5137 () Bool)
(declare-fun x62 () Bool)
(declare-fun x2940 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x2143 () Int)
(declare-fun x1447 () Int)
(declare-fun x1741 () Int)
(declare-fun x1239 () Int)
(declare-fun x4391 () Bool)
(declare-fun x5954 () Int)
(declare-fun x6163 () Int)
(declare-fun x770 () Bool)
(declare-fun x4819 () x5128)
(declare-fun x3926 () Int)
(declare-fun x225 () Bool)
(declare-fun x3426 () x5128)
(declare-fun x1020 () Int)
(declare-fun x5977 () Int)
(declare-fun x3967 () Bool)
(declare-fun x6117 () Bool)
(declare-fun x2244 () Bool)
(declare-fun x503 () Int)
(declare-fun x650 () Bool)
(declare-fun x1870 () Int)
(declare-fun x5377 () Bool)
(declare-fun x2263 () Int)
(declare-fun x4124 () Bool)
(declare-fun x2254 () Bool)
(declare-fun x177 () x5128)
(declare-fun x220 () Int)
(declare-fun x3208 () Bool)
(declare-fun x4790 () Int)
(declare-fun x5562 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x2695 () Int)
(declare-fun x2384 () Int)
(declare-fun x5444 () Bool)
(declare-fun x1787 () Bool)
(declare-fun x5238 () Int)
(declare-fun x6142 () Int)
(declare-fun x1596 () Int)
(declare-fun x2976 () Int)
(declare-fun x426 () Int)
(declare-fun x2629 () Bool)
(declare-fun x4227 () Bool)
(declare-fun x2333 () Bool)
(declare-fun x4592 () Int)
(declare-fun x1927 () x5128)
(declare-fun x1213 () Bool)
(declare-fun x4136 () Bool)
(declare-fun x6309 () Int)
(declare-fun x4571 () Bool)
(declare-fun x392 () Int)
(declare-fun x4778 () Bool)
(declare-fun x477 () x5128)
(declare-fun x5507 () x5128)
(declare-fun x1012 () Bool)
(declare-fun x2112 () Bool)
(declare-fun x3496 () Bool)
(declare-fun x4162 () Bool)
(declare-fun x52 () x5128)
(declare-fun x3962 () Bool)
(declare-fun x2702 () Bool)
(declare-fun x47 () Int)
(declare-fun x2930 () Bool)
(declare-fun x3369 () Bool)
(declare-fun x340 () Bool)
(declare-fun x2352 () Bool)
(declare-fun x2391 () Int)
(declare-fun x4652 () Bool)
(declare-fun x2544 () Int)
(declare-fun x229 () x5128)
(declare-fun x2519 () Int)
(declare-fun x1518 () Bool)
(declare-fun x6357 () Bool)
(declare-fun x1707 () Int)
(declare-fun x4732 () Bool)
(declare-fun x2008 () Int)
(declare-fun x765 () x5128)
(declare-fun x1378 () x5128)
(declare-fun x3149 () Bool)
(declare-fun x6312 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x2705 () Int)
(declare-fun x548 () Int)
(declare-fun x2246 () Bool)
(declare-fun x1419 () Bool)
(declare-fun x2586 () Int)
(declare-fun x983 () Bool)
(declare-fun x2407 () Bool)
(declare-fun x230 (Int Int) Int)
(declare-fun x6265 () x5128)
(declare-fun x3959 () Bool)
(declare-fun x2439 () Bool)
(declare-fun x6086 () Bool)
(declare-fun x4277 () Bool)
(declare-fun x5182 () Bool)
(declare-fun x165 (Int) Int)
(declare-fun x666 () Bool)
(declare-fun x3106 () Bool)
(declare-fun x3706 () Bool)
(declare-fun x949 () Bool)
(declare-fun x3242 () Int)
(declare-fun x5143 () Int)
(declare-fun x1819 () Bool)
(declare-fun x6339 () Int)
(declare-fun x3626 () x5128)
(declare-fun x5865 () Int)
(declare-fun x3414 () Bool)
(declare-fun x4255 () Bool)
(declare-fun x1437 () Int)
(declare-fun x2422 () Int)
(declare-fun x2801 () Bool)
(declare-fun x4299 () Bool)
(declare-fun x2862 () Int)
(declare-fun x4464 () Bool)
(declare-fun x200 () Bool)
(declare-fun x1694 () Int)
(declare-fun x5251 () x5128)
(declare-fun x6014 () Int)
(declare-fun x4619 () Bool)
(declare-fun x4248 () Int)
(declare-fun x2582 () Bool)
(declare-fun x5369 () Int)
(declare-fun x1407 () Int)
(declare-fun x1269 () Bool)
(declare-fun x3806 () Int)
(declare-fun x5957 () Int)
(declare-fun x1422 () Bool)
(declare-fun x3546 () Bool)
(declare-fun x5222 () Int)
(declare-fun x3648 () Int)
(declare-fun x1282 () Int)
(declare-fun x2077 () Bool)
(declare-fun x2016 () Int)
(declare-fun x2329 () Bool)
(declare-fun x886 () Bool)
(declare-fun x5110 () Int)
(declare-fun x4740 () Bool)
(declare-fun x5364 () Int)
(declare-fun x1752 () Bool)
(declare-fun x5410 () Bool)
(declare-fun x2470 () Bool)
(declare-fun x3580 () Bool)
(declare-fun x3285 () Int)
(declare-fun x2258 () Bool)
(declare-fun x5638 () x5128)
(declare-fun x3873 () Bool)
(declare-fun x5614 () Int)
(declare-fun x5121 () Bool)
(declare-fun x2594 () Int)
(declare-fun x923 () Int)
(declare-fun x1909 () Bool)
(declare-fun x3529 () Bool)
(declare-fun x3120 () Int)
(declare-fun x1111 () Bool)
(declare-fun x1258 () x5128)
(declare-fun x4210 () Bool)
(declare-fun x2429 (x5128) Int)
(declare-fun x132 () Bool)
(declare-fun x6285 () Bool)
(declare-fun x2221 () Bool)
(declare-fun x542 () Bool)
(declare-fun x4084 () Bool)
(declare-fun x2802 () Bool)
(declare-fun x2949 () Bool)
(declare-fun x6266 () Int)
(declare-fun x5300 () x5128)
(declare-fun x291 () Int)
(declare-fun x2900 () Int)
(declare-fun x2740 () Bool)
(declare-fun x3562 () Int)
(declare-fun x1760 () Int)
(declare-fun x954 () Bool)
(declare-fun x302 () Bool)
(declare-fun x4611 () Bool)
(declare-fun x1396 () Int)
(declare-fun x2047 () Bool)
(declare-fun x5598 () Int)
(declare-fun x1077 () Bool)
(declare-fun x97 () Bool)
(declare-fun x2777 () x5128)
(declare-fun x4836 () Int)
(declare-fun x2052 () Bool)
(declare-fun x850 () Bool)
(declare-fun x5802 () Bool)
(declare-fun x4121 () Bool)
(declare-fun x355 () Bool)
(declare-fun x4175 () x5128)
(declare-fun x3729 () Int)
(declare-fun x6225 () x5128)
(declare-fun x5879 () Int)
(declare-fun x3513 () Bool)
(declare-fun x1810 () Bool)
(declare-fun x5660 () x5128)
(declare-fun x6243 () Bool)
(declare-fun x2654 () Bool)
(declare-fun x1073 () Int)
(declare-fun x3287 () Bool)
(declare-fun x2278 () Bool)
(declare-fun x5021 () x5128)
(declare-fun x1158 () Bool)
(declare-fun x3449 () Int)
(declare-fun x1 () Bool)
(declare-fun x728 () Bool)
(declare-fun x3286 () Int)
(declare-fun x4357 () Int)
(declare-fun x6135 () Int)
(declare-fun x1562 () Bool)
(declare-fun x1639 () Int)
(declare-fun x4090 () Bool)
(declare-fun x3380 () Bool)
(declare-fun x3092 () Int)
(declare-fun x1393 () Int)
(declare-fun x4245 () Int)
(declare-fun x3150 () Int)
(declare-fun x1004 () Int)
(declare-fun x2555 () Bool)
(declare-fun x3640 () Bool)
(declare-fun x1850 () Bool)
(declare-fun x4066 () Int)
(declare-fun x2324 () Int)
(declare-fun x6275 () x5128)
(declare-fun x1674 () Bool)
(declare-fun x2082 () Bool)
(declare-fun x5726 () Int)
(declare-fun x1388 () Int)
(declare-fun x1997 () x5128)
(declare-fun x2514 () Bool)
(declare-fun x4054 () Bool)
(declare-fun x4213 () Int)
(declare-fun x4927 () Int)
(declare-fun x3156 () Bool)
(declare-fun x6021 () Bool)
(declare-fun x1006 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x4929 () Bool)
(declare-fun x5571 () Bool)
(declare-fun x5650 () Bool)
(declare-fun x1968 () Bool)
(declare-fun x6052 () Bool)
(declare-fun x4845 () Bool)
(declare-fun x2496 () Bool)
(declare-fun x3190 () Bool)
(declare-fun x15 () Int)
(declare-fun x5013 () x5128)
(declare-fun x265 () Bool)
(declare-fun x1380 () Bool)
(declare-fun x127 () Int)
(declare-fun x5022 () Bool)
(declare-fun x2763 () Bool)
(declare-fun x5441 () Int)
(declare-fun x2951 () Bool)
(declare-fun x453 () Bool)
(declare-fun x3723 () Int)
(declare-fun x3227 () Bool)
(declare-fun x1761 () Bool)
(declare-fun x5768 () Bool)
(declare-fun x884 () Bool)
(declare-fun x5825 () Bool)
(declare-fun x2466 () Bool)
(declare-fun x3055 () Bool)
(declare-fun x2748 () Bool)
(declare-fun x5271 () Bool)
(declare-fun x5974 () x5128)
(declare-fun x3474 () Bool)
(declare-fun x4401 () Int)
(declare-fun x2409 () Int)
(declare-fun x3641 () x5128)
(declare-fun x6270 () Bool)
(declare-fun x3676 () Bool)
(declare-fun x4751 () Bool)
(declare-fun x799 () Bool)
(declare-fun x5303 () Bool)
(declare-fun x1421 () Bool)
(declare-fun x2009 () Bool)
(declare-fun x2302 () Bool)
(declare-fun x3698 () Bool)
(declare-fun x2905 () Bool)
(declare-fun x5751 () Int)
(declare-fun x736 () Int)
(declare-fun x2170 () Bool)
(declare-fun x695 () Int)
(declare-fun x2803 () Int)
(declare-fun x4107 () Bool)
(declare-fun x6131 () Bool)
(declare-fun x1861 () Bool)
(declare-fun x3669 () Bool)
(declare-fun x627 () Int)
(declare-fun x336 () Bool)
(declare-fun x5892 () Bool)
(declare-fun x2899 () Int)
(declare-fun x5297 () Int)
(declare-fun x6210 () Bool)
(declare-fun x996 () Int)
(declare-fun x3605 () Int)
(declare-fun x5567 () x5128)
(declare-fun x2423 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x6181 () Bool)
(declare-fun x5236 () Bool)
(declare-fun x2766 () Int)
(declare-fun x5380 () x5128)
(declare-fun x73 () Int)
(declare-fun x5026 () Int)
(declare-fun x5683 () x5128)
(declare-fun x3095 () Bool)
(declare-fun x6317 () Bool)
(declare-fun x1719 () Int)
(declare-fun x5173 () Int)
(declare-fun x5463 () Int)
(declare-fun x2425 () Int)
(declare-fun x4943 () Int)
(declare-fun x1132 () Int)
(declare-fun x737 () Bool)
(declare-fun x1538 () Int)
(declare-fun x1075 () Bool)
(declare-fun x296 () Int)
(declare-fun x1751 () Bool)
(declare-fun x4328 () Int)
(declare-fun x4670 () Int)
(declare-fun x1676 () Int)
(declare-fun x684 () Int)
(declare-fun x3050 () Bool)
(declare-fun x332 () Bool)
(declare-fun x6099 () Int)
(declare-fun x2946 () Int)
(declare-fun x1813 () Int)
(declare-fun x782 () Bool)
(declare-fun x5539 () Bool)
(declare-fun x6112 () Int)
(declare-fun x6152 () Bool)
(declare-fun x179 () Bool)
(declare-fun x1124 () Int)
(declare-fun x3995 () Int)
(declare-fun x3831 () x5128)
(declare-fun x3393 () Int)
(declare-fun x5337 () Bool)
(declare-fun x2849 () Bool)
(declare-fun x3278 () Bool)
(declare-fun x3205 () Bool)
(declare-fun x4827 () Int)
(declare-fun x3904 () x5128)
(declare-fun x4807 () x5128)
(declare-fun x3527 () Int)
(declare-fun x3403 () x5128)
(declare-fun x661 () Int)
(declare-fun x4289 () x5128)
(declare-fun x109 () x5128)
(declare-fun x5076 () x5128)
(declare-fun x2036 () x5128)
(declare-fun x1478 () Int)
(declare-fun x4240 () Bool)
(declare-fun x883 () Bool)
(declare-fun x2973 () Bool)
(declare-fun x2788 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x6132 () Int)
(declare-fun x1203 () Bool)
(declare-fun x2210 () Bool)
(declare-fun x851 () Bool)
(declare-fun x2089 () Bool)
(declare-fun x5753 () Bool)
(declare-fun x2655 () Int)
(declare-fun x3000 () Int)
(declare-fun x5101 () Bool)
(declare-fun x5433 () Bool)
(declare-fun x2386 (Int) Int)
(declare-fun x6314 () x5128)
(declare-fun x6180 () Int)
(declare-fun x4885 () Bool)
(declare-fun x3483 () Bool)
(declare-fun x1549 () Bool)
(declare-fun x4439 () x5128)
(declare-fun x561 () Int)
(declare-fun x544 () Int)
(declare-fun x195 () Int)
(declare-fun x4887 () Bool)
(declare-fun x269 () Bool)
(declare-fun x555 () Int)
(declare-fun x3282 () Int)
(declare-fun x4727 () Bool)
(declare-fun x5582 () Int)
(declare-fun x790 () Int)
(declare-fun x2083 () Int)
(declare-fun x2140 () Int)
(declare-fun x4283 () Bool)
(declare-fun x2115 () Int)
(declare-fun x4310 () Bool)
(declare-fun x2689 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x2326 () Int)
(declare-fun x2252 () Bool)
(declare-fun x5816 () Int)
(declare-fun x4434 () Int)
(declare-fun x2306 () Int)
(declare-fun x758 () Bool)
(declare-fun x4278 () Bool)
(declare-fun x5643 () x5128)
(declare-fun x4599 () Bool)
(declare-fun x4132 () Int)
(declare-fun x3871 () Int)
(declare-fun x6194 () Bool)
(declare-fun x1953 () Bool)
(declare-fun x5247 () Bool)
(declare-fun x804 () Bool)
(declare-fun x899 () Int)
(declare-fun x60 () Bool)
(declare-fun x1728 () Int)
(declare-fun x623 () Bool)
(declare-fun x5837 () Bool)
(declare-fun x100 () Int)
(declare-fun x4793 () Int)
(declare-fun x3735 () Int)
(declare-fun x2380 () Bool)
(declare-fun x1680 () Int)
(declare-fun x4238 () Bool)
(declare-fun x3917 () Int)
(declare-fun x2269 () Bool)
(declare-fun x5406 () Bool)
(declare-fun x3583 () x5128)
(declare-fun x5387 () Int)
(declare-fun x5372 () Bool)
(declare-fun x5193 () Bool)
(declare-fun x964 () Bool)
(declare-fun x3578 () Bool)
(declare-fun x2340 () Int)
(declare-fun x4092 () Bool)
(declare-fun x3075 () x5128)
(declare-fun x4974 () Bool)
(declare-fun x4533 () Bool)
(declare-fun x3680 () Int)
(declare-fun x3251 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x1233 () x5128)
(declare-fun x3632 () Bool)
(declare-fun x5395 () Int)
(declare-fun x1053 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x2194 () Bool)
(declare-fun x2545 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x2064 () Int)
(declare-fun x6306 () x5128)
(declare-fun x4207 () Int)
(declare-fun x4193 () Bool)
(declare-fun x4396 () Bool)
(declare-fun x1272 () x5128)
(declare-fun x5767 () Bool)
(declare-fun x4842 () Int)
(declare-fun x5899 () Int)
(declare-fun x2761 () Int)
(declare-fun x3621 () x5128)
(declare-fun x3443 () Int)
(declare-fun x2103 () Bool)
(declare-fun x1983 () Int)
(declare-fun x1401 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x2491 () Bool)
(declare-fun x3535 () Bool)
(declare-fun x3673 () Bool)
(declare-fun x401 () Int)
(declare-fun x5426 () Bool)
(declare-fun x1220 () x5128)
(declare-fun x1120 () Bool)
(declare-fun x5657 () Int)
(declare-fun x2518 () Bool)
(declare-fun x113 () Bool)
(declare-fun x4594 () x5128)
(declare-fun x5734 () Int)
(declare-fun x139 () Int)
(declare-fun x1808 () Bool)
(declare-fun x1410 () Bool)
(declare-fun x5109 () x5128)
(declare-fun x2355 () Bool)
(declare-fun x39 () Int)
(declare-fun x2719 () Int)
(declare-fun x1505 () Int)
(declare-fun x3459 () Bool)
(declare-fun x822 () x5128)
(declare-fun x2706 () Bool)
(declare-fun x2540 () Bool)
(declare-fun x1386 () x5128)
(declare-fun x6148 () Int)
(declare-fun x2203 () Int)
(declare-fun x1573 () Int)
(declare-fun x6204 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x2567 () Bool)
(declare-fun x235 () Int)
(declare-fun x2738 () x5128)
(declare-fun x1767 () Bool)
(declare-fun x5214 () Int)
(declare-fun x1945 () Int)
(declare-fun x3799 () Bool)
(declare-fun x3544 () Bool)
(declare-fun x2614 () Int)
(declare-fun x1701 () Bool)
(declare-fun x4072 () Int)
(declare-fun x6214 () Bool)
(declare-fun x1088 () Int)
(declare-fun x270 () Bool)
(declare-fun x5566 () Int)
(declare-fun x4306 () Bool)
(declare-fun x3705 () Bool)
(declare-fun x386 () Bool)
(declare-fun x6177 () Int)
(declare-fun x5891 () Bool)
(declare-fun x2232 () Int)
(declare-fun x4558 () Bool)
(declare-fun x4985 () Bool)
(declare-fun x5948 () Int)
(declare-fun x4012 () Bool)
(declare-fun x5685 () Int)
(declare-fun x4810 () Int)
(declare-fun x4917 () Bool)
(declare-fun x3293 () Int)
(declare-fun x940 () x5128)
(declare-fun x143 () x5128)
(declare-fun x5630 () Bool)
(declare-fun x2264 () Bool)
(declare-fun x2858 () Int)
(declare-fun x1670 () Bool)
(declare-fun x1461 () Int)
(declare-fun x2868 () Bool)
(declare-fun x1793 () Int)
(declare-fun x1292 () Int)
(declare-fun x1446 () Int)
(declare-fun x1023 () Bool)
(declare-fun x3584 () Bool)
(declare-fun x2316 () Bool)
(declare-fun x3441 () Int)
(define-fun x3068 ((x5128 x5128) (x41 Int)) x5128 (ite ((_ is x5862) x5128) (x5862 (x5961 x5128) (+ (x5045 x5128) x41)) (ite ((_ is x476) x5128) (x476 (x3612 x5128) (x1141 x5128) (+ x41 (x5080 x5128))) (x5097 (+ (x1331 x5128) x41)))))
(define-fun x4937 ((x5224 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5224) (>= x5224 0)) x5224 (- x5224 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x980 ((x5224 Int)) Int (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5224) (> 0 x5224)) (+ x5224 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5224))
(define-fun x2154 ((x5224 Int)) Int (ite (and (>= x5224 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5224)) x5224 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5224) (< x5224 231584178474632390847141970017375815706539969331281128078915168015826259279872)) (- x5224 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5224) (> 0 x5224)) (+ x5224 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x474 x5224 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x447 ((x890 Int)) Bool (and (< x890 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x890)))
(define-fun x1153 ((x890 Int)) Bool (and (= (x350 115792089237316195423570985008687907853269984665640564039457584007913129639935 x890) x890) (= x890 (x350 x890 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x5221 ((x890 Int)) Bool (and (= 0 (x350 0 x890)) (= (x350 x890 0) 0)))
(define-fun x513 ((x890 Int)) Bool (= x890 (x350 x890 x890)))
(define-fun x1990 ((x890 Int)) Bool (and (x513 x890) (x1153 x890) (x5221 x890)))
(define-fun x2787 ((x890 Int) (x1160 Int)) Bool (= (x350 x1160 x890) (x350 x890 x1160)))
(define-fun x4636 ((x890 Int) (x1160 Int)) Bool (and (=> (>= x1160 0) (>= x1160 (x350 x890 x1160))) (=> (<= 0 x890) (<= (x350 x890 x1160) x890)) (<= 0 (x350 x890 x1160))))
(define-fun x2118 ((x890 Int) (x1160 Int)) Bool (and (x4636 x890 x1160) (x2787 x890 x1160)))
(define-fun x1654 ((x890 Int)) Bool (= (x2154 x890) (+ (x474 x890 32) (x350 x890 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x5944 ((x890 Int)) Bool (and (x1654 x890) (x2118 x890 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x5609 ((x890 Int) (x1160 Int)) Bool (and (>= (x474 x890 x1160) 0) (< (x474 x890 x1160) x1160)))
(define-fun x4601 ((x890 Int) (x1160 Int)) Bool (=> (and (>= x890 0) (> x1160 0)) (= (= x890 (x474 x890 x1160)) (< x890 x1160))))
(define-fun x301 ((x890 Int) (x1160 Int)) Bool (=> (and (and (< x890 (+ x1160 x1160)) (>= x890 x1160)) (< 0 x1160)) (= (- x890 x1160) (x474 x890 x1160))))
(define-fun x3301 ((x890 Int)) Bool (= (x474 0 x890) 0))
(define-fun x1742 ((x890 Int)) Bool (= (x474 x890 1) 0))
(define-fun x5020 ((x890 Int)) Bool (= 0 (x474 x890 x890)))
(define-fun x54 ((x890 Int)) Bool (and (x1742 x890) (x5020 x890) (x3301 x890)))
(define-fun x654 ((x890 Int)) Bool (= (x350 x890 1461501637330902918203684832716283019655932542975) (x474 x890 1461501637330902918203684832716283019655932542976)))
(define-fun x552 ((x890 Int)) Bool (and (x2118 x890 1461501637330902918203684832716283019655932542975) (x654 x890)))
(define-fun x2408 ((x890 Int) (x1160 Int)) Bool (=> (and (> x1160 0) (> x890 0)) (and (<= (x1849 x890 x1160) x890) (>= (x1849 x890 x1160) 0))))
(define-fun x1349 ((x890 Int) (x1160 Int)) Bool (=> (and (and (>= x1160 1) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1160)) (and (< x890 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x890 0))) (and (<= 0 (x1849 x890 x1160)) (< (x1849 x890 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x3768 ((x890 Int) (x1160 Int)) Bool (=> (and (< x1160 x890) (< 1 x1160)) (< (x1849 x890 x1160) x890)))
(define-fun x204 ((x890 Int) (x1160 Int)) Bool (=> (and (> x890 0) (< 0 x1160)) (= (< x890 x1160) (= 0 (x1849 x890 x1160)))))
(define-fun x4557 ((x890 Int) (x1160 Int)) Bool (=> (and (< 0 x1160) (< 0 x890)) (and (>= x890 (x423 (x1849 x890 x1160) x1160)) (> (x423 (x1849 x890 x1160) x1160) (- x890 x1160)))))
(define-fun x1628 ((x890 Int) (x1160 Int)) Bool (and (x2408 x890 x1160) (x204 x890 x1160) (x4557 x890 x1160) (x1349 x890 x1160) (x3768 x890 x1160)))
(define-fun x4560 ((x890 Int)) Bool (= 0 (x1849 0 x890)))
(define-fun x4116 ((x890 Int)) Bool (= x890 (x1849 x890 1)))
(define-fun x5639 ((x890 Int)) Bool (=> (not (= 0 x890)) (= 1 (x1849 x890 x890))))
(define-fun x5383 ((x890 Int)) Bool (and (x4560 x890) (x5639 x890) (x4116 x890)))
(define-fun x5060 ((x890 Int) (x1160 Int)) Bool (= (x423 x890 x1160) (x423 x1160 x890)))
(define-fun x3111 ((x890 Int) (x1160 Int)) Bool (and (=> (and (> x1160 0) (> x890 0)) (> (x423 x890 x1160) 0)) (=> (and (> 0 x890) (> 0 x1160)) (> (x423 x890 x1160) 0)) (=> (and (> x1160 0) (< x890 0)) (< (x423 x890 x1160) 0)) (=> (and (< 0 x890) (< x1160 0)) (< (x423 x890 x1160) 0))))
(define-fun x2339 ((x890 Int) (x1160 Int)) Bool (=> (and (< 0 x1160) (> x890 0)) (= (= x1160 (x1849 (x2154 (x423 x890 x1160)) x890)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x423 x890 x1160)))))
(define-fun x6053 ((x890 Int) (x1160 Int)) Bool (=> (and (not (= 0 x1160)) (not (= x890 0))) (and (= x1160 (x1849 (x423 x890 x1160) x890)) (= x890 (x1849 (x423 x890 x1160) x1160)))))
(define-fun x2087 ((x890 Int) (x1160 Int)) Bool (=> (and (< 0 x890) (> x1160 0)) (= (< (x1849 115792089237316195423570985008687907853269984665640564039457584007913129639935 x890) x1160) (> (x423 x890 x1160) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1650 ((x890 Int) (x1160 Int)) Bool (and (= (x2154 (x423 x890 (- x1160 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2154 (x423 x890 x1160))) (= (x2154 (x423 x890 x1160)) (x2154 (x423 (- x890 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1160))) (= (x2154 (x423 x890 x1160)) (x2154 (x423 (- x890 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1160 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(define-fun x1351 ((x890 Int) (x1160 Int)) Bool (and (=> (and (and (> x890 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x890 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (< 0 x1160) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1160))) (= (>= (x1849 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1160) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x890)) (>= (x423 (- x890 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1160) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (=> (and (and (<= x1160 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x1160 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< 0 x890) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x890))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x423 x890 (- x1160 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1160) (x1849 57896044618658097711785492504343953926634992332820282019728792003956564819968 x890)))) (=> (and (and (<= x1160 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x1160 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x890) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x890))) (= (<= (x423 (- x890 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1160 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x1849 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1160)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x890)))) (=> (and (and (<= x1160 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x1160)) (and (> x890 0) (<= x890 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x1849 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1160) x890) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x423 x890 x1160))))))
(define-fun x2992 ((x890 Int) (x1160 Int)) Bool (and (x3111 x890 x1160) (x2339 x890 x1160) (x2087 x890 x1160) (x5060 x890 x1160) (x6053 x890 x1160) (x1351 x890 x1160) (x1650 x890 x1160)))
(define-fun x2841 ((x890 Int)) Bool (and (= 0 (x423 0 x890)) (= (x423 x890 0) 0)))
(define-fun x1306 ((x890 Int)) Bool (and (= x890 (x423 1 x890)) (= (x423 x890 1) x890)))
(define-fun x5592 ((x890 Int)) Bool (and (x1306 x890) (x2841 x890)))
(define-fun x2353 ((x890 Int)) Bool (= (x350 x890 255) (x474 x890 256)))
(define-fun x729 ((x890 Int)) Bool (and (x2353 x890) (x2118 x890 255)))
(define-fun x4875 ((x1499 Int)) Int (x5044 x1499))
(define-fun x3774 ((x1499 Int)) Int (ite (= x1499 128) 100135927934651036221761091863598459016256155049858187411712977198722809069568 (x6041 x1499)))
(define-fun x4335 ((x1499 Int)) Int (ite (= 132 x1499) x4332 (x3774 x1499)))
(define-fun x3492 ((x1499 Int)) Int (ite (= 164 x1499) x3128 (x4335 x1499)))
(define-fun x5990 ((x1499 Int)) Int (ite (= x1499 0) x1760 (x549 x1499)))
(define-fun x4569 ((x1499 Int)) Int (ite (= 128 x1499) x1760 (x3492 x1499)))
(define-fun x3543 ((x1499 Int)) Int (ite (= x1499 0) x1714 (x549 x1499)))
(define-fun x5225 ((x1499 Int)) Int (ite (= x1499 128) x1714 (x3492 x1499)))
(define-fun x4839 ((x1499 Int)) Int (ite (= x1499 0) x670 (x549 x1499)))
(define-fun x2727 ((x1499 Int)) Int (ite (= 128 x1499) x670 (x3492 x1499)))
(define-fun x2159 ((x1499 Int)) Int (ite (= 0 x1499) x190 (x549 x1499)))
(define-fun x1094 ((x1499 Int)) Int (ite (= 128 x1499) x190 (x3492 x1499)))
(define-fun x6119 ((x1499 Int)) Int (ite (= x1499 0) x1679 (x549 x1499)))
(define-fun x3046 ((x1499 Int)) Int (ite (= 128 x1499) x1679 (x3492 x1499)))
(define-fun x3660 ((x1499 Int)) Int (ite (= x1499 0) x5123 (x549 x1499)))
(define-fun x3726 ((x1499 Int)) Int (ite (= 128 x1499) x5123 (x3492 x1499)))
(define-fun x472 ((x1499 Int)) Int (ite (= x1499 0) x2070 (x549 x1499)))
(define-fun x108 ((x1499 Int)) Int (ite (= 128 x1499) x2070 (x3492 x1499)))
(define-fun x5636 ((x1499 Int)) Int (ite (= 0 x1499) x4951 (x549 x1499)))
(define-fun x147 ((x1499 Int)) Int (ite (= 128 x1499) x4951 (x3492 x1499)))
(define-fun x522 ((x1499 Int)) Int (ite (= x1499 0) x2711 (x549 x1499)))
(define-fun x1816 ((x1499 Int)) Int (ite (= x1499 128) x2711 (x3492 x1499)))
(define-fun x3134 ((x1499 Int)) Int (ite (= x1499 0) x6366 (x549 x1499)))
(define-fun x4051 ((x1499 Int)) Int (ite (= x1499 128) x6366 (x3492 x1499)))
(define-fun x1843 ((x1499 Int)) Int (ite (= x1499 0) x4258 (x549 x1499)))
(define-fun x2645 ((x1499 Int)) Int (ite (= x1499 128) x4258 (x3492 x1499)))
(define-fun x5070 ((x1499 Int)) Int (ite (= x1499 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x5536 x1499)))
(define-fun x388 ((x1499 Int)) Int (ite (= 132 x1499) x4332 (x5070 x1499)))
(define-fun x4472 ((x1499 Int)) Int (ite (= 164 x1499) x5041 (x388 x1499)))
(define-fun x320 ((x1499 Int)) Int (ite (= x1499 196) x1405 (x4472 x1499)))
(define-fun x1782 ((x1499 Int)) Int (ite (= x1499 128) 1 (x320 x1499)))
(define-fun x5085 ((x1499 Int)) Int (ite (= x1499 224) x709 (x4755 x1499)))
(define-fun x5316 ((x1499 Int)) Int (ite (= 320 x1499) x3361 (x5085 x1499)))
(define-fun x2520 ((x1499 Int)) Int (ite (= x1499 320) (ite true 1 0) (x5316 x1499)))
(define-fun x5169 ((x1499 Int)) Int (ite (and (>= x1499 128) (> (+ 32 128) x1499)) (x2520 (+ 320 (- x1499 128))) (x320 x1499)))
(define-fun x4840 ((x1499 Int)) Int (ite (= x1499 128) 1 (x320 x1499)))
(define-fun x1906 ((x1499 Int)) Int (ite (= x1499 128) x5420 (x320 x1499)))
(define-fun x1174 ((x1499 Int)) Int (ite (= x1499 128) x2285 (x320 x1499)))
(define-fun x2784 ((x1499 Int)) Int (ite (= x1499 128) 1 (x320 x1499)))
(define-fun x3291 ((x1499 Int)) Int (ite (= x1499 128) 1 (x320 x1499)))
(define-fun x4914 ((x1499 Int)) Int (ite (= x1499 128) 1 (x320 x1499)))
(define-fun x6201 ((x1499 Int)) Int (ite (= 128 x1499) 1 (x320 x1499)))
(define-fun x5925 ((x1499 Int)) Int (ite (= x1499 128) 1 (x320 x1499)))
(define-fun x4767 ((x1499 Int)) Int (ite x4540 (x320 x1499) (ite x6323 (ite x5444 (x320 x1499) (x1782 x1499)) (ite x2104 (ite x4533 (x320 x1499) (x5169 x1499)) (ite x3912 (ite x2244 (x320 x1499) (x4840 x1499)) (ite x5039 (ite x5820 (x320 x1499) (x1906 x1499)) (ite x5254 (ite x3705 (x320 x1499) (x1174 x1499)) (ite x2785 (ite x731 (x320 x1499) (x2784 x1499)) (ite x799 (ite x5430 (x320 x1499) (x3291 x1499)) (ite x5007 (ite x5769 (x320 x1499) (x4914 x1499)) (ite x650 (ite x5008 (x320 x1499) (x6201 x1499)) (ite x3780 (x320 x1499) (x5925 x1499)))))))))))))
(define-fun x3775 ((x1499 Int)) Int (ite (= x196 x1499) 97057840296441966410330255902201960138893160036366920885407767449525406400512 (x4767 x1499)))
(define-fun x1621 ((x1499 Int)) Int (ite (= x6331 x1499) x4954 (x3775 x1499)))
(define-fun x1488 ((x1499 Int)) Int (ite (= x2389 x1499) x5074 (x1621 x1499)))
(define-fun x3006 ((x1499 Int)) Int (ite (= x1499 x6072) x5041 (x1488 x1499)))
(define-fun x91 ((x1499 Int)) Int (ite (= x1499 0) 1 (x846 x1499)))
(define-fun x3884 ((x1499 Int)) Int (ite (= x196 x1499) 1 (x3006 x1499)))
(define-fun x1943 ((x1499 Int)) Int (ite (= 128 x1499) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x974 x1499)))
(define-fun x5382 ((x1499 Int)) Int (ite (= x1499 132) x779 (x1943 x1499)))
(define-fun x4596 ((x1499 Int)) Int (ite (= 164 x1499) x3931 (x5382 x1499)))
(define-fun x4153 ((x1499 Int)) Int (ite (= 196 x1499) x4094 (x4596 x1499)))
(define-fun x4133 ((x1499 x5128)) Int (ite (= x1499 x6206) x2916 (x5014 x1499)))
(define-fun x643 ((x1499 x5128)) Int (ite x3513 (x4133 x1499) (x5014 x1499)))
(define-fun x4527 ((x1499 x5128)) Int (ite x4318 (x5014 x1499) (ite x3380 (x5014 x1499) (ite x5907 (x5014 x1499) (ite x35 (x5014 x1499) (ite x4593 (x5014 x1499) (ite x3762 (x5014 x1499) (ite x946 (x643 x1499) (ite x4446 (x643 x1499) (ite x255 (x643 x1499) (ite x2046 (x5014 x1499) (ite x6093 (x643 x1499) (ite x1819 (x643 x1499) (ite x4505 (x643 x1499) (ite x6259 (x5014 x1499) (ite x6355 (x5014 x1499) (ite x250 (x643 x1499) (ite x713 (x643 x1499) (x5014 x1499)))))))))))))))))))
(define-fun x2596 ((x1499 x5128)) Int (ite x4540 (ite x769 (x4527 x1499) (x643 x1499)) (x5014 x1499)))
(define-fun x5028 ((x1499 x5128)) Int (ite (= x4475 x1499) x2609 (x5968 x1499)))
(define-fun x5159 ((x1499 x5128)) Int (ite x4540 (x5968 x1499) (ite x6323 (ite x5444 (x5968 x1499) (x5028 x1499)) (x5968 x1499))))
(define-fun x566 ((x1499 x5128)) Int (ite (= x2553 x1499) x1085 (x995 x1499)))
(define-fun x985 ((x1499 x5128)) Int (ite (= x2562 x1499) x5173 (x566 x1499)))
(define-fun x22 ((x1499 x5128)) Int (ite x4486 (x985 x1499) (ite x2996 (x995 x1499) (ite x3452 (x995 x1499) (ite x5918 (x995 x1499) (ite x876 (x995 x1499) (ite x4210 (x566 x1499) (ite x2195 (x985 x1499) (ite x4822 (x995 x1499) (ite x5392 (x566 x1499) (x995 x1499)))))))))))
(define-fun x4663 ((x1499 x5128)) Int (ite x4540 (x995 x1499) (ite x6323 (ite x5444 (x22 x1499) (x985 x1499)) (x995 x1499))))
(define-fun x4131 ((x1499 x5128)) Int (ite (= x1499 x3626) x1292 (x4663 x1499)))
(define-fun x2983 ((x1499 x5128)) Int (ite (= x1499 x2635) x4300 (x4131 x1499)))
(define-fun x3728 ((x1499 x5128)) Int (ite (= x6128 x1499) x1869 (x5159 x1499)))
(define-fun x1802 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x1307 x1499)))
(define-fun x2156 ((x1499 x5128)) Int (ite (= x5010 x1499) x4403 (x4931 x1499)))
(define-fun x1854 ((x1499 x5128)) Int (ite (= x2797 x1499) x2474 (x2156 x1499)))
(define-fun x774 ((x1499 x5128)) Int (ite x855 (x1854 x1499) (ite x2006 (x4931 x1499) (ite x1734 (x4931 x1499) (ite x786 (x4931 x1499) (ite x3739 (x4931 x1499) (ite x80 (x2156 x1499) (ite x2527 (x2156 x1499) (ite x5543 (x1854 x1499) (ite x4492 (x4931 x1499) (ite x6190 (x4931 x1499) (ite x396 (x4931 x1499) (x1854 x1499)))))))))))))
(define-fun x5142 ((x1499 x5128)) Int (ite x4540 (x4931 x1499) (ite x6323 (x4931 x1499) (ite x2104 (ite x4533 (x774 x1499) (x1854 x1499)) (x4931 x1499)))))
(define-fun x3600 ((x1499 x5128)) Int (ite (= x1499 x6306) x4988 (x5142 x1499)))
(define-fun x4539 ((x1499 x5128)) Int (ite (= x1499 x4287) x4668 (x3600 x1499)))
(define-fun x526 ((x1499 Int)) Int (ite (= 224 x1499) x653 (x5940 x1499)))
(define-fun x619 ((x1499 x5128)) Int (ite (= x1499 x6153) x3361 (x4757 x1499)))
(define-fun x5111 ((x1499 x5128)) Int (ite x4540 (x4757 x1499) (ite x6323 (x4757 x1499) (ite x2104 (ite x4533 (x4757 x1499) (x619 x1499)) (x4757 x1499)))))
(define-fun x252 ((x1499 x5128)) Int (ite (= x5735 x1499) x5441 (x5111 x1499)))
(define-fun x4944 ((x1499 Int)) Int (ite (= 320 x1499) x5441 (x526 x1499)))
(define-fun x31 ((x1499 Int)) Int (ite (= x1499 320) (ite true 1 0) (x4944 x1499)))
(define-fun x4373 ((x1499 Int)) Int (ite (and (< x1499 (+ 32 0)) (>= x1499 0)) (x31 (+ (- x1499 0) 320)) (x1307 x1499)))
(define-fun x5697 ((x1499 x5128)) Int (ite (= x2406 x1499) x1947 (x1653 x1499)))
(define-fun x742 ((x1499 x5128)) Int (ite x3154 (x1653 x1499) (x5697 x1499)))
(define-fun x370 ((x1499 x5128)) Int (ite x4433 (x1653 x1499) (ite x3176 (x1653 x1499) (ite x5112 (x1653 x1499) (ite x2264 (x742 x1499) (ite x4816 (x742 x1499) (x1653 x1499)))))))
(define-fun x5995 ((x1499 x5128)) Int (ite x4540 (x1653 x1499) (ite x6323 (x1653 x1499) (ite x2104 (x1653 x1499) (ite x3912 (ite x2244 (x370 x1499) (x742 x1499)) (x1653 x1499))))))
(define-fun x2328 ((x1499 x5128)) Int (ite (= x1499 x5150) x6227 (x5995 x1499)))
(define-fun x5452 ((x1499 x5128)) Int (ite (= x4545 x1499) x182 (x3550 x1499)))
(define-fun x4369 ((x1499 x5128)) Int (ite (= x1499 x919) x5397 (x5452 x1499)))
(define-fun x10 ((x1499 x5128)) Int (ite x5515 (x4369 x1499) (ite x820 (x4369 x1499) (ite x4942 (x4369 x1499) (ite x1298 (x5452 x1499) (ite x1384 (x3550 x1499) (ite x2939 (x3550 x1499) (ite x4809 (x3550 x1499) (ite x6157 (x3550 x1499) (ite x2875 (x3550 x1499) (ite x4254 (x5452 x1499) (ite x5317 (x4369 x1499) (x3550 x1499)))))))))))))
(define-fun x1358 ((x1499 x5128)) Int (ite x4540 (x3550 x1499) (ite x6323 (x3550 x1499) (ite x2104 (x3550 x1499) (ite x3912 (x3550 x1499) (ite x5039 (ite x5820 (x10 x1499) (x4369 x1499)) (x3550 x1499)))))))
(define-fun x5996 ((x1499 x5128)) Int (ite (= x5464 x1499) x911 (x1358 x1499)))
(define-fun x6198 ((x1499 x5128)) Int (ite (= x2347 x1499) x5645 (x5996 x1499)))
(define-fun x2164 ((x1499 Int)) Int (ite (= 128 x1499) x6159 (x917 x1499)))
(define-fun x1302 ((x1499 x5128)) Int (ite (= x1499 x1361) x1461 (x5268 x1499)))
(define-fun x3613 ((x1499 x5128)) Int (ite x4540 (x5268 x1499) (ite x6323 (x5268 x1499) (ite x2104 (x5268 x1499) (ite x3912 (x5268 x1499) (ite x5039 (ite x5820 (x5268 x1499) (x1302 x1499)) (x5268 x1499)))))))
(define-fun x6182 ((x1499 x5128)) Int (ite (= x1499 x1554) x4413 (x3613 x1499)))
(define-fun x1154 ((x1499 Int)) Int (ite (= 128 x1499) x4413 (x2164 x1499)))
(define-fun x460 ((x1499 Int)) Int (ite (= 128 x1499) (ite true 1 0) (x1154 x1499)))
(define-fun x5783 ((x1499 Int)) Int (ite (= 0 x1499) x5620 (x1307 x1499)))
(define-fun x2405 ((x1499 x5128)) Int (ite (= x5596 x1499) x1487 (x2175 x1499)))
(define-fun x4835 ((x1499 x5128)) Int (ite x226 (x2175 x1499) (ite x1108 (x2175 x1499) (ite x5518 (x2175 x1499) (ite x5178 (x2175 x1499) (ite x2051 (x2175 x1499) (ite x2742 (x2175 x1499) (ite x2403 (x2405 x1499) (ite x4397 (x2405 x1499) (x2175 x1499))))))))))
(define-fun x4196 ((x1499 x5128)) Int (ite (= x1884 x1499) x2101 (x2405 x1499)))
(define-fun x417 ((x1499 x5128)) Int (ite x4540 (x2175 x1499) (ite x6323 (x2175 x1499) (ite x2104 (x2175 x1499) (ite x3912 (x2175 x1499) (ite x5039 (x2175 x1499) (ite x5254 (ite x3705 (x4835 x1499) (x4196 x1499)) (x2175 x1499))))))))
(define-fun x2616 ((x1499 x5128)) Int (ite (= x3901 x1499) x753 (x4215 x1499)))
(define-fun x3427 ((x1499 x5128)) Int (ite x226 (x4215 x1499) (ite x1108 (x4215 x1499) (ite x5518 (x4215 x1499) (ite x5178 (x4215 x1499) (ite x2051 (x4215 x1499) (ite x2742 (x4215 x1499) (ite x2403 (x4215 x1499) (ite x4397 (x2616 x1499) (x4215 x1499))))))))))
(define-fun x400 ((x1499 x5128)) Int (ite x4540 (x4215 x1499) (ite x6323 (x4215 x1499) (ite x2104 (x4215 x1499) (ite x3912 (x4215 x1499) (ite x5039 (x4215 x1499) (ite x5254 (ite x3705 (x3427 x1499) (x2616 x1499)) (x4215 x1499))))))))
(define-fun x290 ((x1499 x5128)) Int (ite (= x6275 x1499) x675 (x417 x1499)))
(define-fun x2563 ((x1499 x5128)) Int (ite (= x515 x1499) x1494 (x400 x1499)))
(define-fun x4214 ((x1499 x5128)) Int (ite (= x5352 x1499) x3957 (x290 x1499)))
(define-fun x2749 ((x1499 Int)) Int (ite (= 128 x1499) x5936 (x4658 x1499)))
(define-fun x5841 ((x1499 Int)) Int (ite (= x1499 128) (ite true 1 0) (x2749 x1499)))
(define-fun x2500 ((x1499 Int)) Int (ite (= 0 x1499) x3984 (x1307 x1499)))
(define-fun x4251 ((x1499 x5128)) Int (ite (= x4322 x1499) x1288 (x3182 x1499)))
(define-fun x2950 ((x1499 x5128)) Int (ite (= x5836 x1499) x2884 (x4251 x1499)))
(define-fun x4204 ((x1499 x5128)) Int (ite x5983 (x2950 x1499) (ite x4752 (x4251 x1499) (ite x2591 (x3182 x1499) (ite x507 (x3182 x1499) (ite x2468 (x3182 x1499) (ite x3690 (x3182 x1499) (ite x2110 (x4251 x1499) (ite x806 (x2950 x1499) (x3182 x1499))))))))))
(define-fun x187 ((x1499 x5128)) Int (ite x4540 (x3182 x1499) (ite x6323 (x3182 x1499) (ite x2104 (x3182 x1499) (ite x3912 (x3182 x1499) (ite x5039 (x3182 x1499) (ite x5254 (x3182 x1499) (ite x2785 (ite x731 (x4204 x1499) (x2950 x1499)) (x3182 x1499)))))))))
(define-fun x3089 ((x1499 x5128)) Int (ite (= x1499 x1800) x4119 (x187 x1499)))
(define-fun x4432 ((x1499 x5128)) Int (ite (= x1499 x1062) x496 (x3089 x1499)))
(define-fun x5309 ((x1499 x5128)) Int (ite (= x1499 x4142) x1350 (x389 x1499)))
(define-fun x1756 ((x1499 x5128)) Int (ite x4540 (x389 x1499) (ite x6323 (x389 x1499) (ite x2104 (x389 x1499) (ite x3912 (x389 x1499) (ite x5039 (x389 x1499) (ite x5254 (x389 x1499) (ite x2785 (ite x731 (x389 x1499) (x5309 x1499)) (x389 x1499)))))))))
(define-fun x4264 ((x1499 x5128)) Int (ite (= x477 x1499) x6188 (x1756 x1499)))
(define-fun x4897 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x1307 x1499)))
(define-fun x4857 ((x1499 x5128)) Int (ite (= x1499 x3206) x1641 (x2769 x1499)))
(define-fun x1821 ((x1499 x5128)) Int (ite (= x1499 x2479) x1124 (x4857 x1499)))
(define-fun x2247 ((x1499 x5128)) Int (ite x1514 (x1821 x1499) (ite x4241 (x4857 x1499) (ite x1748 (x2769 x1499) (ite x2713 (x2769 x1499) (ite x332 (x2769 x1499) (ite x945 (x2769 x1499) (ite x5263 (x4857 x1499) (ite x868 (x1821 x1499) (x2769 x1499))))))))))
(define-fun x4873 ((x1499 x5128)) Int (ite x4540 (x2769 x1499) (ite x6323 (x2769 x1499) (ite x2104 (x2769 x1499) (ite x3912 (x2769 x1499) (ite x5039 (x2769 x1499) (ite x5254 (x2769 x1499) (ite x2785 (x2769 x1499) (ite x799 (ite x5430 (x2247 x1499) (x1821 x1499)) (x2769 x1499))))))))))
(define-fun x19 ((x1499 x5128)) Int (ite (= x1499 x3842) x2458 (x4873 x1499)))
(define-fun x1528 ((x1499 x5128)) Int (ite (= x1499 x2060) x4421 (x19 x1499)))
(define-fun x1273 ((x1499 x5128)) Int (ite (= x406 x1499) x631 (x1977 x1499)))
(define-fun x5872 ((x1499 x5128)) Int (ite x4540 (x1977 x1499) (ite x6323 (x1977 x1499) (ite x2104 (x1977 x1499) (ite x3912 (x1977 x1499) (ite x5039 (x1977 x1499) (ite x5254 (x1977 x1499) (ite x2785 (x1977 x1499) (ite x799 (ite x5430 (x1977 x1499) (x1273 x1499)) (x1977 x1499))))))))))
(define-fun x5371 ((x1499 x5128)) Int (ite (= x5279 x1499) x3691 (x5872 x1499)))
(define-fun x1433 ((x1499 Int)) Int (ite (= x1499 0) 1 (x1307 x1499)))
(define-fun x5993 ((x1499 x5128)) Int (ite (= x1499 x1378) x4801 (x443 x1499)))
(define-fun x1050 ((x1499 x5128)) Int (ite (= x5916 x1499) x5301 (x5993 x1499)))
(define-fun x5424 ((x1499 x5128)) Int (ite x5670 (x1050 x1499) (ite x1867 (x5993 x1499) (ite x6328 (x443 x1499) (ite x4958 (x443 x1499) (ite x5374 (x443 x1499) (ite x6241 (x443 x1499) (ite x353 (x5993 x1499) (ite x596 (x1050 x1499) (x443 x1499))))))))))
(define-fun x614 ((x1499 x5128)) Int (ite x4540 (x443 x1499) (ite x6323 (x443 x1499) (ite x2104 (x443 x1499) (ite x3912 (x443 x1499) (ite x5039 (x443 x1499) (ite x5254 (x443 x1499) (ite x2785 (x443 x1499) (ite x799 (x443 x1499) (ite x5007 (ite x5769 (x5424 x1499) (x1050 x1499)) (x443 x1499)))))))))))
(define-fun x5207 ((x1499 x5128)) Int (ite (= x5638 x1499) x1021 (x614 x1499)))
(define-fun x5795 ((x1499 x5128)) Int (ite (= x1499 x5099) x5018 (x5207 x1499)))
(define-fun x4881 ((x1499 x5128)) Int (ite (= x1499 x4152) x1778 (x4744 x1499)))
(define-fun x366 ((x1499 x5128)) Int (ite x4540 (x4744 x1499) (ite x6323 (x4744 x1499) (ite x2104 (x4744 x1499) (ite x3912 (x4744 x1499) (ite x5039 (x4744 x1499) (ite x5254 (x4744 x1499) (ite x2785 (x4744 x1499) (ite x799 (x4744 x1499) (ite x5007 (ite x5769 (x4744 x1499) (x4881 x1499)) (x4744 x1499)))))))))))
(define-fun x4061 ((x1499 x5128)) Int (ite (= x1499 x2448) x3810 (x366 x1499)))
(define-fun x937 ((x1499 Int)) Int (ite (= x1499 0) 1 (x1307 x1499)))
(define-fun x3365 ((x1499 x5128)) Int (ite (= x1499 x4745) x4670 (x938 x1499)))
(define-fun x2903 ((x1499 x5128)) Int (ite (= x1115 x1499) x1521 (x3365 x1499)))
(define-fun x3236 ((x1499 x5128)) Int (ite x642 (x2903 x1499) (ite x6057 (x3365 x1499) (ite x4391 (x938 x1499) (ite x5439 (x938 x1499) (ite x4179 (x938 x1499) (ite x4048 (x938 x1499) (ite x4986 (x3365 x1499) (ite x793 (x2903 x1499) (x938 x1499))))))))))
(define-fun x597 ((x1499 x5128)) Int (ite x4540 (x938 x1499) (ite x6323 (x938 x1499) (ite x2104 (x938 x1499) (ite x3912 (x938 x1499) (ite x5039 (x938 x1499) (ite x5254 (x938 x1499) (ite x2785 (x938 x1499) (ite x799 (x938 x1499) (ite x5007 (x938 x1499) (ite x650 (ite x5008 (x3236 x1499) (x2903 x1499)) (x938 x1499))))))))))))
(define-fun x4038 ((x1499 x5128)) Int (ite (= x4764 x1499) x1430 (x597 x1499)))
(define-fun x5939 ((x1499 x5128)) Int (ite (= x4289 x1499) x3918 (x4038 x1499)))
(define-fun x4362 ((x1499 x5128)) Int (ite (= x1499 x1541) x1754 (x4864 x1499)))
(define-fun x128 ((x1499 x5128)) Int (ite x4540 (x4864 x1499) (ite x6323 (x4864 x1499) (ite x2104 (x4864 x1499) (ite x3912 (x4864 x1499) (ite x5039 (x4864 x1499) (ite x5254 (x4864 x1499) (ite x2785 (x4864 x1499) (ite x799 (x4864 x1499) (ite x5007 (x4864 x1499) (ite x650 (ite x5008 (x4864 x1499) (x4362 x1499)) (x4864 x1499))))))))))))
(define-fun x4882 ((x1499 x5128)) Int (ite (= x3641 x1499) x6195 (x128 x1499)))
(define-fun x4237 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x1307 x1499)))
(define-fun x660 ((x1499 x5128)) Int (ite (= x1499 x2701) x2675 (x3204 x1499)))
(define-fun x1837 ((x1499 x5128)) Int (ite x2199 (x3204 x1499) (x660 x1499)))
(define-fun x3617 ((x1499 x5128)) Int (ite x1409 (x3204 x1499) (ite x3652 (x3204 x1499) (ite x5423 (x3204 x1499) (ite x161 (x1837 x1499) (ite x3689 (x1837 x1499) (x3204 x1499)))))))
(define-fun x5198 ((x1499 x5128)) Int (ite x4540 (x3204 x1499) (ite x6323 (x3204 x1499) (ite x2104 (x3204 x1499) (ite x3912 (x3204 x1499) (ite x5039 (x3204 x1499) (ite x5254 (x3204 x1499) (ite x2785 (x3204 x1499) (ite x799 (x3204 x1499) (ite x5007 (x3204 x1499) (ite x650 (x3204 x1499) (ite x3780 (x3617 x1499) (x1837 x1499)))))))))))))
(define-fun x2226 ((x1499 x5128)) Int (ite (= x1499 x4088) x1753 (x5198 x1499)))
(define-fun x2055 ((x1499 Int)) Int (ite (= x1499 128) 82641394424300342035733052706735002277943222088490025348945809093694544936960 (x165 x1499)))
(define-fun x4971 ((x1499 Int)) Int (ite (= x1499 132) x3642 (x2055 x1499)))
(define-fun x3712 ((x1499 Int)) Int (ite (= x1499 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x165 x1499)))
(define-fun x1003 ((x1499 Int)) Int (ite (= 132 x1499) x2741 (x3712 x1499)))
(define-fun x3023 ((x1499 Int)) Int (ite (= 164 x1499) x5566 (x1003 x1499)))
(define-fun x5829 ((x1499 Int)) Int (ite (= 196 x1499) x3502 (x3023 x1499)))
(define-fun x3199 ((x1499 x5128)) Int (ite (= x3403 x1499) x5782 (x4663 x1499)))
(define-fun x959 ((x1499 x5128)) Int (ite (= x1083 x1499) x3590 (x3199 x1499)))
(define-fun x6028 ((x1499 x5128)) Int (ite (= x223 x1499) x5994 (x5159 x1499)))
(define-fun x4295 ((x1499 Int)) Int (ite (= x1499 0) 1 (x823 x1499)))
(define-fun x4386 ((x1499 x5128)) Int (ite (= x303 x1499) x3166 (x5142 x1499)))
(define-fun x636 ((x1499 x5128)) Int (ite (= x1499 x3737) x2064 (x4386 x1499)))
(define-fun x5217 ((x1499 Int)) Int (ite (= x1499 224) x4319 (x2531 x1499)))
(define-fun x1973 ((x1499 x5128)) Int (ite (= x885 x1499) x6060 (x5111 x1499)))
(define-fun x1167 ((x1499 Int)) Int (ite (= 320 x1499) x6060 (x5217 x1499)))
(define-fun x1110 ((x1499 Int)) Int (ite (= x1499 320) (ite true 1 0) (x1167 x1499)))
(define-fun x5576 ((x1499 Int)) Int (ite (and (> (+ 0 32) x1499) (<= 0 x1499)) (x1110 (+ (- x1499 0) 320)) (x823 x1499)))
(define-fun x4590 ((x1499 x5128)) Int (ite (= x5331 x1499) x5143 (x5995 x1499)))
(define-fun x2272 ((x1499 x5128)) Int (ite (= x1499 x3863) x6301 (x1358 x1499)))
(define-fun x3012 ((x1499 x5128)) Int (ite (= x1499 x2867) x259 (x2272 x1499)))
(define-fun x5223 ((x1499 Int)) Int (ite (= 128 x1499) x2362 (x1928 x1499)))
(define-fun x4984 ((x1499 x5128)) Int (ite (= x1499 x1831) x5350 (x3613 x1499)))
(define-fun x4520 ((x1499 Int)) Int (ite (= x1499 128) x5350 (x5223 x1499)))
(define-fun x6287 ((x1499 Int)) Int (ite (= x1499 128) (ite true 1 0) (x4520 x1499)))
(define-fun x1179 ((x1499 Int)) Int (ite (= x1499 0) x393 (x823 x1499)))
(define-fun x5042 ((x1499 x5128)) Int (ite (= x1499 x5285) x379 (x417 x1499)))
(define-fun x5654 ((x1499 x5128)) Int (ite (= x1499 x5583) x4790 (x400 x1499)))
(define-fun x4163 ((x1499 x5128)) Int (ite (= x5565 x1499) x2232 (x5042 x1499)))
(define-fun x2495 ((x1499 Int)) Int (ite (= x1499 128) x1558 (x3711 x1499)))
(define-fun x5183 ((x1499 Int)) Int (ite (= 128 x1499) (ite true 1 0) (x2495 x1499)))
(define-fun x1858 ((x1499 Int)) Int (ite (= 0 x1499) x107 (x823 x1499)))
(define-fun x3152 ((x1499 x5128)) Int (ite (= x5415 x1499) x231 (x187 x1499)))
(define-fun x2420 ((x1499 x5128)) Int (ite (= x1499 x1143) x2680 (x3152 x1499)))
(define-fun x745 ((x1499 x5128)) Int (ite (= x1499 x3263) x5523 (x1756 x1499)))
(define-fun x1735 ((x1499 Int)) Int (ite (= x1499 0) 1 (x823 x1499)))
(define-fun x856 ((x1499 x5128)) Int (ite (= x973 x1499) x738 (x4873 x1499)))
(define-fun x304 ((x1499 x5128)) Int (ite (= x1499 x3121) x2806 (x856 x1499)))
(define-fun x2394 ((x1499 x5128)) Int (ite (= x4987 x1499) x409 (x5872 x1499)))
(define-fun x2566 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x823 x1499)))
(define-fun x1817 ((x1499 x5128)) Int (ite (= x1499 x4247) x4775 (x614 x1499)))
(define-fun x1424 ((x1499 x5128)) Int (ite (= x688 x1499) x4804 (x1817 x1499)))
(define-fun x4438 ((x1499 x5128)) Int (ite (= x5998 x1499) x3002 (x366 x1499)))
(define-fun x870 ((x1499 Int)) Int (ite (= x1499 0) 1 (x823 x1499)))
(define-fun x1851 ((x1499 x5128)) Int (ite (= x3458 x1499) x1114 (x597 x1499)))
(define-fun x4161 ((x1499 x5128)) Int (ite (= x5119 x1499) x2011 (x1851 x1499)))
(define-fun x4458 ((x1499 x5128)) Int (ite (= x3420 x1499) x1447 (x128 x1499)))
(define-fun x2677 ((x1499 Int)) Int (ite (= x1499 0) 1 (x823 x1499)))
(define-fun x4952 ((x1499 x5128)) Int (ite (= x1499 x16) x5957 (x5198 x1499)))
(define-fun x4550 ((x1499 Int)) Int (ite (= 128 x1499) 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x165 x1499)))
(define-fun x293 ((x1499 Int)) Int (ite (= x1499 132) x1661 (x4550 x1499)))
(define-fun x3148 ((x1499 Int)) Int (ite (= x1499 128) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x165 x1499)))
(define-fun x743 ((x1499 Int)) Int (ite (= 132 x1499) x4904 (x3148 x1499)))
(define-fun x5388 ((x1499 Int)) Int (ite (= x1499 164) x2073 (x743 x1499)))
(define-fun x1687 ((x1499 x5128)) Int (ite (= x5171 x1499) x420 (x4663 x1499)))
(define-fun x5579 ((x1499 x5128)) Int (ite (= x1499 x560) x3094 (x1687 x1499)))
(define-fun x5167 ((x1499 Int)) Int (ite (= 192 x1499) x1377 (x6165 x1499)))
(define-fun x1721 ((x1499 Int)) Int (ite (= 192 x1499) (ite true 1 0) (x5167 x1499)))
(define-fun x1007 ((x1499 Int)) Int (ite (and (< x1499 (+ 32 0)) (>= x1499 0)) (x1721 (+ (- x1499 0) 192)) (x1183 x1499)))
(define-fun x902 ((x1499 x5128)) Int (ite (= x1599 x1499) x2626 (x5142 x1499)))
(define-fun x4419 ((x1499 x5128)) Int (ite (= x5448 x1499) x1254 (x902 x1499)))
(define-fun x2085 ((x1499 Int)) Int (ite (= x1499 224) x1326 (x3721 x1499)))
(define-fun x1913 ((x1499 Int)) Int (ite (= 224 x1499) (ite true 1 0) (x2085 x1499)))
(define-fun x2155 ((x1499 Int)) Int (ite (and (<= 0 x1499) (< x1499 (+ 0 32))) (x1913 (+ 224 (- x1499 0))) (x1183 x1499)))
(define-fun x341 ((x1499 x5128)) Int (ite (= x3163 x1499) x1694 (x1210 x1499)))
(define-fun x3761 ((x1499 x5128)) Int (ite x4433 (x1210 x1499) (ite x3176 (x1210 x1499) (ite x5112 (x1210 x1499) (ite x2264 (x341 x1499) (x1210 x1499))))))
(define-fun x1328 ((x1499 x5128)) Int (ite (= x4614 x1499) x3594 (x341 x1499)))
(define-fun x4547 ((x1499 x5128)) Int (ite x4540 (x1210 x1499) (ite x6323 (x1210 x1499) (ite x2104 (x1210 x1499) (ite x3912 (ite x2244 (x3761 x1499) (x1328 x1499)) (x1210 x1499))))))
(define-fun x1198 ((x1499 x5128)) Int (ite (= x1499 x4741) x4759 (x4547 x1499)))
(define-fun x4183 ((x1499 x5128)) Int (ite (= x1499 x6039) x3446 (x1198 x1499)))
(define-fun x1611 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x1183 x1499)))
(define-fun x4525 ((x1499 x5128)) Int (ite (= x1499 x928) x2022 (x1358 x1499)))
(define-fun x318 ((x1499 x5128)) Int (ite (= x1499 x377) x5091 (x4525 x1499)))
(define-fun x5617 ((x1499 Int)) Int (ite (= 128 x1499) x506 (x3248 x1499)))
(define-fun x2953 ((x1499 Int)) Int (ite (= 128 x1499) (ite true 1 0) (x5617 x1499)))
(define-fun x5963 ((x1499 Int)) Int (ite (= 0 x1499) x684 (x1183 x1499)))
(define-fun x3868 ((x1499 x5128)) Int (ite (= x765 x1499) x1176 (x417 x1499)))
(define-fun x517 ((x1499 x5128)) Int (ite (= x1499 x3781) x5084 (x3868 x1499)))
(define-fun x1080 ((x1499 Int)) Int (ite (= x1499 128) x3898 (x1086 x1499)))
(define-fun x817 ((x1499 Int)) Int (ite (= 128 x1499) (ite true 1 0) (x1080 x1499)))
(define-fun x4617 ((x1499 Int)) Int (ite (= x1499 0) x5322 (x1183 x1499)))
(define-fun x4701 ((x1499 x5128)) Int (ite (= x1499 x4807) x3636 (x187 x1499)))
(define-fun x5497 ((x1499 x5128)) Int (ite (= x1499 x4336) x1955 (x4701 x1499)))
(define-fun x4180 ((x1499 Int)) Int (ite (= x1499 0) 1 (x1183 x1499)))
(define-fun x3923 ((x1499 x5128)) Int (ite (= x1499 x930) x5655 (x4873 x1499)))
(define-fun x3237 ((x1499 x5128)) Int (ite (= x1499 x5076) x3355 (x3923 x1499)))
(define-fun x213 ((x1499 Int)) Int (ite (= x1499 0) 1 (x1183 x1499)))
(define-fun x166 ((x1499 x5128)) Int (ite (= x2478 x1499) x2731 (x614 x1499)))
(define-fun x5103 ((x1499 x5128)) Int (ite (= x1499 x3440) x2977 (x166 x1499)))
(define-fun x1712 ((x1499 Int)) Int (ite (= x1499 0) 1 (x1183 x1499)))
(define-fun x2929 ((x1499 x5128)) Int (ite (= x1456 x1499) x4216 (x597 x1499)))
(define-fun x6192 ((x1499 x5128)) Int (ite (= x1981 x1499) x5560 (x2929 x1499)))
(define-fun x3741 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x1183 x1499)))
(define-fun x2896 ((x1499 x5128)) Int (ite (= x6170 x1499) x2359 (x3450 x1499)))
(define-fun x1039 ((x1499 x5128)) Int (ite x1409 (x3450 x1499) (ite x3652 (x3450 x1499) (ite x5423 (x3450 x1499) (ite x161 (x2896 x1499) (x3450 x1499))))))
(define-fun x4634 ((x1499 x5128)) Int (ite (= x1852 x1499) x4424 (x2896 x1499)))
(define-fun x110 ((x1499 x5128)) Int (ite x4540 (x3450 x1499) (ite x6323 (x3450 x1499) (ite x2104 (x3450 x1499) (ite x3912 (x3450 x1499) (ite x5039 (x3450 x1499) (ite x5254 (x3450 x1499) (ite x2785 (x3450 x1499) (ite x799 (x3450 x1499) (ite x5007 (x3450 x1499) (ite x650 (x3450 x1499) (ite x3780 (x1039 x1499) (x4634 x1499)))))))))))))
(define-fun x5933 ((x1499 x5128)) Int (ite (= x3604 x1499) x3174 (x110 x1499)))
(define-fun x64 ((x1499 x5128)) Int (ite (= x5956 x1499) x289 (x5933 x1499)))
(define-fun x539 ((x1499 Int)) Int (ite (= x1499 0) 1 (x1183 x1499)))
(define-fun x4949 ((x1499 Int)) Int (ite (= 128 x1499) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x165 x1499)))
(define-fun x3628 ((x1499 Int)) Int (ite (= 132 x1499) x3881 (x4949 x1499)))
(define-fun x5165 ((x1499 Int)) Int (ite (= x1499 164) x648 (x3628 x1499)))
(define-fun x5917 ((x1499 x5128)) Int (ite (= x5429 x1499) x392 (x5159 x1499)))
(define-fun x3035 ((x1499 Int)) Int (ite (= x1499 128) x392 (x3999 x1499)))
(define-fun x2117 ((x1499 Int)) Int (ite (= x1499 128) (ite true 1 0) (x3035 x1499)))
(define-fun x2700 ((x1499 Int)) Int (ite (= 0 x1499) x6016 (x5298 x1499)))
(define-fun x345 ((x1499 x5128)) Int (ite (= x1499 x4414) x178 (x5111 x1499)))
(define-fun x338 ((x1499 Int)) Int (ite (= x1499 128) x178 (x3570 x1499)))
(define-fun x2653 ((x1499 Int)) Int (ite (= x1499 128) (ite true 1 0) (x338 x1499)))
(define-fun x5479 ((x1499 Int)) Int (ite (= 0 x1499) x4359 (x5298 x1499)))
(define-fun x5391 ((x1499 x5128)) Int (ite (= x1499 x1888) x1718 (x5995 x1499)))
(define-fun x1882 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x5298 x1499)))
(define-fun x4776 ((x1499 x5128)) Int (ite (= x2860 x1499) x1588 (x3613 x1499)))
(define-fun x9 ((x1499 Int)) Int (ite (= 128 x1499) x1588 (x5640 x1499)))
(define-fun x1280 ((x1499 Int)) Int (ite (= 128 x1499) (ite true 1 0) (x9 x1499)))
(define-fun x957 ((x1499 Int)) Int (ite (= 0 x1499) x5999 (x5298 x1499)))
(define-fun x1485 ((x1499 x5128)) Int (ite (= x4053 x1499) x5252 (x400 x1499)))
(define-fun x4262 ((x1499 Int)) Int (ite (= 128 x1499) x648 (x197 x1499)))
(define-fun x2149 ((x1499 Int)) Int (ite (= 128 x1499) (ite true 1 0) (x4262 x1499)))
(define-fun x3425 ((x1499 Int)) Int (ite (= x1499 0) x2572 (x5298 x1499)))
(define-fun x3477 ((x1499 x5128)) Int (ite (= x5405 x1499) x6135 (x1756 x1499)))
(define-fun x6291 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x5298 x1499)))
(define-fun x3852 ((x1499 x5128)) Int (ite (= x3910 x1499) x4402 (x5872 x1499)))
(define-fun x3102 ((x1499 Int)) Int (ite (= x1499 0) 1 (x5298 x1499)))
(define-fun x4723 ((x1499 x5128)) Int (ite (= x1499 x4282) x3886 (x366 x1499)))
(define-fun x617 ((x1499 Int)) Int (ite (= x1499 0) 1 (x5298 x1499)))
(define-fun x317 ((x1499 x5128)) Int (ite (= x1499 x1290) x4187 (x128 x1499)))
(define-fun x5484 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x5298 x1499)))
(define-fun x6083 ((x1499 x5128)) Int (ite (= x1499 x1008) x2766 (x5198 x1499)))
(define-fun x439 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x5298 x1499)))
(define-fun x2897 ((x1499 Int)) Int (ite (= x196 x1499) 1 (x3006 x1499)))
(define-fun x2248 ((x1499 Int)) Int (ite (= x196 x1499) 1 (x3006 x1499)))
(define-fun x1218 ((x1499 Int)) Int (ite x1704 (ite x1923 (x3006 x1499) (x3884 x1499)) (ite x6283 (ite x2000 (x3006 x1499) (x2897 x1499)) (ite x2348 (x3006 x1499) (x2248 x1499)))))
(define-fun x3221 ((x1499 Int)) Int (ite (= x5744 x1499) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1218 x1499)))
(define-fun x1471 ((x1499 Int)) Int (ite (= x1499 x4476) x5041 (x3221 x1499)))
(define-fun x2948 ((x1499 Int)) Int (ite (= x1499 x3510) x4332 (x1471 x1499)))
(define-fun x1161 ((x1499 Int)) Int (ite (= x1499 x5180) x968 (x2948 x1499)))
(define-fun x3057 ((x1499 x5128)) Int (ite (= x1499 x2777) x1730 (x2596 x1499)))
(define-fun x5847 ((x1499 x5128)) Int (ite x5612 (x3057 x1499) (x2596 x1499)))
(define-fun x5635 ((x1499 x5128)) Int (ite x2026 (x2596 x1499) (ite x2482 (x2596 x1499) (ite x2183 (x2596 x1499) (ite x3672 (x2596 x1499) (ite x1394 (x2596 x1499) (ite x5194 (x2596 x1499) (ite x3586 (x5847 x1499) (ite x521 (x5847 x1499) (ite x4541 (x5847 x1499) (ite x1178 (x2596 x1499) (ite x62 (x5847 x1499) (ite x5373 (x5847 x1499) (ite x1215 (x5847 x1499) (ite x4435 (x2596 x1499) (ite x2282 (x2596 x1499) (ite x2028 (x5847 x1499) (ite x4570 (x5847 x1499) (x2596 x1499)))))))))))))))))))
(define-fun x4817 ((x1499 x5128)) Int (ite x5505 (ite x4662 (x5635 x1499) (x5847 x1499)) (x2596 x1499)))
(define-fun x3114 ((x1499 x5128)) Int (ite x1549 (x4817 x1499) (ite x5692 (x2596 x1499) (ite x590 (x2596 x1499) (ite x4197 (x2596 x1499) (x4817 x1499))))))
(define-fun x6220 ((x1499 x5128)) Int (ite (= x6144 x1499) x1539 (x2596 x1499)))
(define-fun x5722 ((x1499 x5128)) Int (ite x343 (x6220 x1499) (x2596 x1499)))
(define-fun x3848 ((x1499 x5128)) Int (ite x2216 (x2596 x1499) (ite x563 (x2596 x1499) (ite x5821 (x2596 x1499) (ite x1475 (x2596 x1499) (ite x5276 (x2596 x1499) (ite x2380 (x2596 x1499) (ite x4696 (x5722 x1499) (ite x1470 (x5722 x1499) (ite x1684 (x5722 x1499) (ite x5947 (x2596 x1499) (ite x3967 (x5722 x1499) (ite x1546 (x5722 x1499) (ite x3777 (x5722 x1499) (ite x5290 (x2596 x1499) (ite x1620 (x2596 x1499) (ite x3423 (x5722 x1499) (ite x3908 (x5722 x1499) (x2596 x1499)))))))))))))))))))
(define-fun x5873 ((x1499 x5128)) Int (ite x3940 (ite x4379 (x3848 x1499) (x5722 x1499)) (x2596 x1499)))
(define-fun x2241 ((x1499 x5128)) Int (ite (= x1499 x119) x3859 (x2596 x1499)))
(define-fun x2080 ((x1499 x5128)) Int (ite x4443 (ite x3888 (x2596 x1499) (x2241 x1499)) (x2596 x1499)))
(define-fun x3132 ((x1499 x5128)) Int (ite x6076 (x2596 x1499) (ite x2513 (x2596 x1499) (ite x6261 (x5873 x1499) (ite x622 (x2596 x1499) (ite x1053 (x2596 x1499) (ite x6202 (x2596 x1499) (ite x4886 (x2596 x1499) (ite x867 (x2596 x1499) (ite x5748 (x2080 x1499) (ite x858 (x2596 x1499) (ite x2673 (x2596 x1499) (ite x6208 (x2596 x1499) (ite x568 (x2596 x1499) (ite x752 (x2596 x1499) (ite x1797 (x2596 x1499) (ite x1833 (x2596 x1499) (ite x3309 (x2596 x1499) (ite x2922 (x2080 x1499) (ite x1772 (x2596 x1499) (ite x363 (x2596 x1499) (ite x6051 (x2596 x1499) (ite x111 (x2596 x1499) (ite x2077 (x2596 x1499) (ite x121 (x5873 x1499) (x2596 x1499))))))))))))))))))))))))))
(define-fun x3345 ((x1499 x5128)) Int (ite x4085 (x2596 x1499) (ite x3667 (x2596 x1499) (x2080 x1499))))
(define-fun x5819 ((x1499 x5128)) Int (ite x2450 (x3345 x1499) (x2596 x1499)))
(define-fun x5335 ((x1499 x5128)) Int (ite x405 (x5819 x1499) (x5873 x1499)))
(define-fun x2564 ((x1499 x5128)) Int (ite x6004 (x5335 x1499) (x2596 x1499)))
(define-fun x4622 ((x1499 x5128)) Int (ite x1704 (x2596 x1499) (ite x6283 (ite x2000 (x3114 x1499) (x4817 x1499)) (ite x2348 (x3132 x1499) (x2564 x1499)))))
(define-fun x1462 ((x1499 x5128)) Int (ite x5505 (x5159 x1499) (ite x2467 (ite x1968 (x5159 x1499) (x3728 x1499)) (x5159 x1499))))
(define-fun x871 ((x1499 x5128)) Int (ite x1549 (x1462 x1499) (ite x5692 (x5159 x1499) (ite x590 (x5159 x1499) (ite x4197 (x5159 x1499) (x1462 x1499))))))
(define-fun x1716 ((x1499 x5128)) Int (ite x3940 (x5159 x1499) (ite x1355 (ite x3304 (x5159 x1499) (x6028 x1499)) (x5159 x1499))))
(define-fun x5797 ((x1499 x5128)) Int (ite x4443 (x5159 x1499) (ite x1214 (ite x3700 (x5159 x1499) (x5917 x1499)) (x5159 x1499))))
(define-fun x1189 ((x1499 x5128)) Int (ite x6076 (x5159 x1499) (ite x2513 (x5159 x1499) (ite x6261 (x1716 x1499) (ite x622 (x5159 x1499) (ite x1053 (x5159 x1499) (ite x6202 (x5159 x1499) (ite x4886 (x5159 x1499) (ite x867 (x5159 x1499) (ite x5748 (x5797 x1499) (ite x858 (x5159 x1499) (ite x2673 (x5159 x1499) (ite x6208 (x5159 x1499) (ite x568 (x5159 x1499) (ite x752 (x5159 x1499) (ite x1797 (x5159 x1499) (ite x1833 (x5159 x1499) (ite x3309 (x5159 x1499) (ite x2922 (x5797 x1499) (ite x1772 (x5159 x1499) (ite x363 (x5159 x1499) (ite x6051 (x5159 x1499) (ite x111 (x5159 x1499) (ite x2077 (x5159 x1499) (ite x121 (x1716 x1499) (x5159 x1499))))))))))))))))))))))))))
(define-fun x696 ((x1499 x5128)) Int (ite x4085 (x5159 x1499) (ite x3667 (x5159 x1499) (x5797 x1499))))
(define-fun x2593 ((x1499 x5128)) Int (ite x2450 (x696 x1499) (x5159 x1499)))
(define-fun x6069 ((x1499 x5128)) Int (ite x405 (x2593 x1499) (x1716 x1499)))
(define-fun x3776 ((x1499 x5128)) Int (ite x6004 (x6069 x1499) (x5159 x1499)))
(define-fun x1604 ((x1499 x5128)) Int (ite x1704 (x5159 x1499) (ite x6283 (ite x2000 (x871 x1499) (x1462 x1499)) (ite x2348 (x1189 x1499) (x3776 x1499)))))
(define-fun x6300 ((x1499 x5128)) Int (ite x2771 (x2983 x1499) (ite x1035 (x4663 x1499) (ite x2887 (x4663 x1499) (ite x1971 (x4663 x1499) (ite x1618 (x4663 x1499) (ite x6134 (x4131 x1499) (ite x5831 (x2983 x1499) (ite x2585 (x4663 x1499) (ite x3244 (x4131 x1499) (x4663 x1499)))))))))))
(define-fun x5131 ((x1499 x5128)) Int (ite x5505 (x4663 x1499) (ite x2467 (ite x1968 (x6300 x1499) (x2983 x1499)) (x4663 x1499))))
(define-fun x1933 ((x1499 x5128)) Int (ite x1549 (x5131 x1499) (ite x5692 (x4663 x1499) (ite x590 (x4663 x1499) (ite x4197 (x4663 x1499) (x5131 x1499))))))
(define-fun x3419 ((x1499 x5128)) Int (ite x1344 (x959 x1499) (ite x2145 (x4663 x1499) (ite x2335 (x4663 x1499) (ite x2088 (x4663 x1499) (ite x1701 (x4663 x1499) (ite x2141 (x3199 x1499) (ite x2298 (x959 x1499) (ite x5850 (x4663 x1499) (ite x2243 (x3199 x1499) (x4663 x1499)))))))))))
(define-fun x5158 ((x1499 x5128)) Int (ite x3940 (x4663 x1499) (ite x1355 (ite x3304 (x3419 x1499) (x959 x1499)) (x4663 x1499))))
(define-fun x3168 ((x1499 x5128)) Int (ite x5913 (x4663 x1499) (ite x4097 (x4663 x1499) (ite x2318 (x4663 x1499) (ite x1364 (x1687 x1499) (ite x1532 (x4663 x1499) (ite x5492 (x1687 x1499) (x4663 x1499))))))))
(define-fun x4846 ((x1499 x5128)) Int (ite x1113 (x4663 x1499) (ite x1899 (ite x1513 (x3168 x1499) (x5579 x1499)) (x4663 x1499))))
(define-fun x3725 ((x1499 x5128)) Int (ite x6076 (x4663 x1499) (ite x2513 (x4663 x1499) (ite x6261 (x5158 x1499) (ite x622 (x4663 x1499) (ite x1053 (x4663 x1499) (ite x6202 (x4663 x1499) (ite x4886 (x4846 x1499) (ite x867 (x4663 x1499) (ite x5748 (x4663 x1499) (ite x858 (x4663 x1499) (ite x2673 (x4663 x1499) (ite x6208 (x4663 x1499) (ite x568 (x4663 x1499) (ite x752 (x4663 x1499) (ite x1797 (x4663 x1499) (ite x1833 (x4663 x1499) (ite x3309 (x4663 x1499) (ite x2922 (x4663 x1499) (ite x1772 (x4663 x1499) (ite x363 (x4846 x1499) (ite x6051 (x4663 x1499) (ite x111 (x4663 x1499) (ite x2077 (x4663 x1499) (ite x121 (x5158 x1499) (x4663 x1499))))))))))))))))))))))))))
(define-fun x13 ((x1499 x5128)) Int (ite x4085 (x4846 x1499) (x4663 x1499)))
(define-fun x4628 ((x1499 x5128)) Int (ite x2450 (x13 x1499) (x4663 x1499)))
(define-fun x3222 ((x1499 x5128)) Int (ite x405 (x4628 x1499) (x5158 x1499)))
(define-fun x2668 ((x1499 x5128)) Int (ite x6004 (x3222 x1499) (x4663 x1499)))
(define-fun x292 ((x1499 x5128)) Int (ite x1704 (x4663 x1499) (ite x6283 (ite x2000 (x1933 x1499) (x5131 x1499)) (ite x2348 (x3725 x1499) (x2668 x1499)))))
(define-fun x5915 ((x1499 x5128)) Int (ite (= x844 x1499) x2686 (x292 x1499)))
(define-fun x3710 ((x1499 x5128)) Int (ite (= x2944 x1499) x398 (x5915 x1499)))
(define-fun x3340 ((x1499 Int)) Int (ite (= x1499 0) 1 (x2315 x1499)))
(define-fun x4626 ((x1499 x5128)) Int (ite x4861 (x4539 x1499) (ite x5055 (x5142 x1499) (ite x2302 (x5142 x1499) (ite x2435 (x5142 x1499) (ite x1557 (x5142 x1499) (ite x2590 (x3600 x1499) (ite x775 (x3600 x1499) (ite x4099 (x4539 x1499) (ite x4348 (x5142 x1499) (ite x4 (x5142 x1499) (ite x2855 (x5142 x1499) (x4539 x1499)))))))))))))
(define-fun x1244 ((x1499 x5128)) Int (ite x5505 (x5142 x1499) (ite x2467 (x5142 x1499) (ite x2955 (ite x2684 (x4626 x1499) (x4539 x1499)) (x5142 x1499)))))
(define-fun x809 ((x1499 x5128)) Int (ite x1549 (x1244 x1499) (ite x5692 (x5142 x1499) (ite x590 (x5142 x1499) (ite x4197 (x5142 x1499) (x1244 x1499))))))
(define-fun x1304 ((x1499 x5128)) Int (ite x1720 (x636 x1499) (ite x4902 (x5142 x1499) (ite x430 (x5142 x1499) (ite x452 (x5142 x1499) (ite x4855 (x5142 x1499) (ite x3312 (x4386 x1499) (ite x6253 (x4386 x1499) (ite x2395 (x636 x1499) (ite x336 (x5142 x1499) (ite x1297 (x5142 x1499) (ite x3891 (x5142 x1499) (x636 x1499)))))))))))))
(define-fun x5120 ((x1499 x5128)) Int (ite x3940 (x5142 x1499) (ite x1355 (x5142 x1499) (ite x3405 (ite x4743 (x1304 x1499) (x636 x1499)) (x5142 x1499)))))
(define-fun x1194 ((x1499 x5128)) Int (ite x4192 (x5142 x1499) (ite x5189 (x5142 x1499) (ite x3265 (x5142 x1499) (ite x770 (x902 x1499) (ite x3027 (x902 x1499) (x5142 x1499)))))))
(define-fun x813 ((x1499 x5128)) Int (ite x1113 (x5142 x1499) (ite x1899 (x5142 x1499) (ite x149 (ite x2542 (x1194 x1499) (x4419 x1499)) (x5142 x1499)))))
(define-fun x2196 ((x1499 x5128)) Int (ite x6076 (x5142 x1499) (ite x2513 (x5142 x1499) (ite x6261 (x5120 x1499) (ite x622 (x5142 x1499) (ite x1053 (x5142 x1499) (ite x6202 (x5142 x1499) (ite x4886 (x813 x1499) (ite x867 (x5142 x1499) (ite x5748 (x5142 x1499) (ite x858 (x5142 x1499) (ite x2673 (x5142 x1499) (ite x6208 (x5142 x1499) (ite x568 (x5142 x1499) (ite x752 (x5142 x1499) (ite x1797 (x5142 x1499) (ite x1833 (x5142 x1499) (ite x3309 (x5142 x1499) (ite x2922 (x5142 x1499) (ite x1772 (x5142 x1499) (ite x363 (x813 x1499) (ite x6051 (x5142 x1499) (ite x111 (x5142 x1499) (ite x2077 (x5142 x1499) (ite x121 (x5120 x1499) (x5142 x1499))))))))))))))))))))))))))
(define-fun x6345 ((x1499 x5128)) Int (ite x4085 (x813 x1499) (x5142 x1499)))
(define-fun x2018 ((x1499 x5128)) Int (ite x2450 (x6345 x1499) (x5142 x1499)))
(define-fun x637 ((x1499 x5128)) Int (ite x405 (x2018 x1499) (x5120 x1499)))
(define-fun x4702 ((x1499 x5128)) Int (ite x6004 (x637 x1499) (x5142 x1499)))
(define-fun x1736 ((x1499 x5128)) Int (ite x1704 (x5142 x1499) (ite x6283 (ite x2000 (x809 x1499) (x1244 x1499)) (ite x2348 (x2196 x1499) (x4702 x1499)))))
(define-fun x2445 ((x1499 x5128)) Int (ite (= x1211 x1499) x2184 (x1736 x1499)))
(define-fun x4412 ((x1499 x5128)) Int (ite (= x1499 x1905) x4650 (x2445 x1499)))
(define-fun x1678 ((x1499 Int)) Int (ite (= x1499 224) x6329 (x375 x1499)))
(define-fun x4953 ((x1499 x5128)) Int (ite x5505 (x5111 x1499) (ite x2467 (x5111 x1499) (ite x2955 (ite x2684 (x5111 x1499) (x252 x1499)) (x5111 x1499)))))
(define-fun x1375 ((x1499 x5128)) Int (ite x1549 (x4953 x1499) (ite x5692 (x5111 x1499) (ite x590 (x5111 x1499) (ite x4197 (x5111 x1499) (x4953 x1499))))))
(define-fun x5509 ((x1499 x5128)) Int (ite x3940 (x5111 x1499) (ite x1355 (x5111 x1499) (ite x3405 (ite x4743 (x5111 x1499) (x1973 x1499)) (x5111 x1499)))))
(define-fun x5438 ((x1499 x5128)) Int (ite x4443 (x5111 x1499) (ite x1214 (x5111 x1499) (ite x4502 (ite x3038 (x5111 x1499) (x345 x1499)) (x5111 x1499)))))
(define-fun x4115 ((x1499 x5128)) Int (ite x6076 (x5111 x1499) (ite x2513 (x5111 x1499) (ite x6261 (x5509 x1499) (ite x622 (x5111 x1499) (ite x1053 (x5111 x1499) (ite x6202 (x5111 x1499) (ite x4886 (x5111 x1499) (ite x867 (x5111 x1499) (ite x5748 (x5438 x1499) (ite x858 (x5111 x1499) (ite x2673 (x5111 x1499) (ite x6208 (x5111 x1499) (ite x568 (x5111 x1499) (ite x752 (x5111 x1499) (ite x1797 (x5111 x1499) (ite x1833 (x5111 x1499) (ite x3309 (x5111 x1499) (ite x2922 (x5438 x1499) (ite x1772 (x5111 x1499) (ite x363 (x5111 x1499) (ite x6051 (x5111 x1499) (ite x111 (x5111 x1499) (ite x2077 (x5111 x1499) (ite x121 (x5509 x1499) (x5111 x1499))))))))))))))))))))))))))
(define-fun x266 ((x1499 x5128)) Int (ite x4085 (x5111 x1499) (ite x3667 (x5111 x1499) (x5438 x1499))))
(define-fun x3066 ((x1499 x5128)) Int (ite x2450 (x266 x1499) (x5111 x1499)))
(define-fun x6172 ((x1499 x5128)) Int (ite x405 (x3066 x1499) (x5509 x1499)))
(define-fun x5556 ((x1499 x5128)) Int (ite x6004 (x6172 x1499) (x5111 x1499)))
(define-fun x4327 ((x1499 x5128)) Int (ite x1704 (x5111 x1499) (ite x6283 (ite x2000 (x1375 x1499) (x4953 x1499)) (ite x2348 (x4115 x1499) (x5556 x1499)))))
(define-fun x3797 ((x1499 Int)) Int (ite (= x1499 320) x314 (x1678 x1499)))
(define-fun x272 ((x1499 Int)) Int (ite (= 320 x1499) (ite true 1 0) (x3797 x1499)))
(define-fun x6343 ((x1499 Int)) Int (ite (and (> (+ 32 0) x1499) (>= x1499 0)) (x272 (+ (- x1499 0) 320)) (x2315 x1499)))
(define-fun x1046 ((x1499 x5128)) Int (ite x759 (x5995 x1499) (x2328 x1499)))
(define-fun x5533 ((x1499 x5128)) Int (ite x171 (x5995 x1499) (ite x5753 (x5995 x1499) (ite x4007 (x5995 x1499) (ite x3374 (x1046 x1499) (ite x1126 (x1046 x1499) (x5995 x1499)))))))
(define-fun x159 ((x1499 x5128)) Int (ite x5505 (x5995 x1499) (ite x2467 (x5995 x1499) (ite x2955 (x5995 x1499) (ite x3720 (ite x6161 (x5533 x1499) (x1046 x1499)) (x5995 x1499))))))
(define-fun x2776 ((x1499 x5128)) Int (ite x1549 (x159 x1499) (ite x5692 (x5995 x1499) (ite x590 (x5995 x1499) (ite x4197 (x5995 x1499) (x159 x1499))))))
(define-fun x424 ((x1499 x5128)) Int (ite x4575 (x5995 x1499) (x4590 x1499)))
(define-fun x5548 ((x1499 x5128)) Int (ite x468 (x5995 x1499) (ite x3461 (x5995 x1499) (ite x2509 (x5995 x1499) (ite x1419 (x424 x1499) (ite x1579 (x424 x1499) (x5995 x1499)))))))
(define-fun x4338 ((x1499 x5128)) Int (ite x3940 (x5995 x1499) (ite x1355 (x5995 x1499) (ite x3405 (x5995 x1499) (ite x4218 (ite x2114 (x5548 x1499) (x424 x1499)) (x5995 x1499))))))
(define-fun x4765 ((x1499 x5128)) Int (ite x4443 (x5995 x1499) (ite x1214 (x5995 x1499) (ite x4502 (x5995 x1499) (ite x5763 (ite x6228 (x5995 x1499) (x5391 x1499)) (x5995 x1499))))))
(define-fun x3124 ((x1499 x5128)) Int (ite x6076 (x5995 x1499) (ite x2513 (x5995 x1499) (ite x6261 (x4338 x1499) (ite x622 (x5995 x1499) (ite x1053 (x5995 x1499) (ite x6202 (x5995 x1499) (ite x4886 (x5995 x1499) (ite x867 (x5995 x1499) (ite x5748 (x4765 x1499) (ite x858 (x5995 x1499) (ite x2673 (x5995 x1499) (ite x6208 (x5995 x1499) (ite x568 (x5995 x1499) (ite x752 (x5995 x1499) (ite x1797 (x5995 x1499) (ite x1833 (x5995 x1499) (ite x3309 (x5995 x1499) (ite x2922 (x4765 x1499) (ite x1772 (x5995 x1499) (ite x363 (x5995 x1499) (ite x6051 (x5995 x1499) (ite x111 (x5995 x1499) (ite x2077 (x5995 x1499) (ite x121 (x4338 x1499) (x5995 x1499))))))))))))))))))))))))))
(define-fun x3889 ((x1499 x5128)) Int (ite x4085 (x5995 x1499) (ite x3667 (x5995 x1499) (x4765 x1499))))
(define-fun x1625 ((x1499 x5128)) Int (ite x2450 (x3889 x1499) (x5995 x1499)))
(define-fun x4312 ((x1499 x5128)) Int (ite x405 (x1625 x1499) (x4338 x1499)))
(define-fun x240 ((x1499 x5128)) Int (ite x6004 (x4312 x1499) (x5995 x1499)))
(define-fun x802 ((x1499 x5128)) Int (ite x1704 (x5995 x1499) (ite x6283 (ite x2000 (x2776 x1499) (x159 x1499)) (ite x2348 (x3124 x1499) (x240 x1499)))))
(define-fun x5011 ((x1499 x5128)) Int (ite x5117 (x6198 x1499) (ite x1502 (x6198 x1499) (ite x4080 (x6198 x1499) (ite x2133 (x5996 x1499) (ite x2760 (x1358 x1499) (ite x2990 (x1358 x1499) (ite x6212 (x1358 x1499) (ite x3303 (x1358 x1499) (ite x771 (x1358 x1499) (ite x3377 (x5996 x1499) (ite x4625 (x6198 x1499) (x1358 x1499)))))))))))))
(define-fun x5823 ((x1499 x5128)) Int (ite x5505 (x1358 x1499) (ite x2467 (x1358 x1499) (ite x2955 (x1358 x1499) (ite x3720 (x1358 x1499) (ite x907 (ite x1054 (x5011 x1499) (x6198 x1499)) (x1358 x1499)))))))
(define-fun x4441 ((x1499 x5128)) Int (ite x1549 (x5823 x1499) (ite x5692 (x1358 x1499) (ite x590 (x1358 x1499) (ite x4197 (x1358 x1499) (x5823 x1499))))))
(define-fun x1889 ((x1499 x5128)) Int (ite x2512 (x3012 x1499) (ite x6255 (x3012 x1499) (ite x4850 (x3012 x1499) (ite x1009 (x2272 x1499) (ite x1449 (x1358 x1499) (ite x3396 (x1358 x1499) (ite x115 (x1358 x1499) (ite x623 (x1358 x1499) (ite x4608 (x1358 x1499) (ite x2446 (x2272 x1499) (ite x3676 (x3012 x1499) (x1358 x1499)))))))))))))
(define-fun x4549 ((x1499 x5128)) Int (ite x3940 (x1358 x1499) (ite x1355 (x1358 x1499) (ite x3405 (x1358 x1499) (ite x4218 (x1358 x1499) (ite x1845 (ite x1839 (x1889 x1499) (x3012 x1499)) (x1358 x1499)))))))
(define-fun x2287 ((x1499 x5128)) Int (ite x3817 (x4525 x1499) (ite x387 (x1358 x1499) (ite x2843 (x1358 x1499) (ite x5233 (x1358 x1499) (ite x4695 (x1358 x1499) (ite x4479 (x4525 x1499) (x1358 x1499))))))))
(define-fun x4583 ((x1499 x5128)) Int (ite x1113 (x1358 x1499) (ite x1899 (x1358 x1499) (ite x149 (x1358 x1499) (ite x5170 (x1358 x1499) (ite x5136 (ite x990 (x2287 x1499) (x318 x1499)) (x1358 x1499)))))))
(define-fun x3193 ((x1499 x5128)) Int (ite x6076 (x1358 x1499) (ite x2513 (x1358 x1499) (ite x6261 (x4549 x1499) (ite x622 (x1358 x1499) (ite x1053 (x1358 x1499) (ite x6202 (x1358 x1499) (ite x4886 (x4583 x1499) (ite x867 (x1358 x1499) (ite x5748 (x1358 x1499) (ite x858 (x1358 x1499) (ite x2673 (x1358 x1499) (ite x6208 (x1358 x1499) (ite x568 (x1358 x1499) (ite x752 (x1358 x1499) (ite x1797 (x1358 x1499) (ite x1833 (x1358 x1499) (ite x3309 (x1358 x1499) (ite x2922 (x1358 x1499) (ite x1772 (x1358 x1499) (ite x363 (x4583 x1499) (ite x6051 (x1358 x1499) (ite x111 (x1358 x1499) (ite x2077 (x1358 x1499) (ite x121 (x4549 x1499) (x1358 x1499))))))))))))))))))))))))))
(define-fun x6102 ((x1499 x5128)) Int (ite x4085 (x4583 x1499) (x1358 x1499)))
(define-fun x3210 ((x1499 x5128)) Int (ite x2450 (x6102 x1499) (x1358 x1499)))
(define-fun x4083 ((x1499 x5128)) Int (ite x405 (x3210 x1499) (x4549 x1499)))
(define-fun x4532 ((x1499 x5128)) Int (ite x6004 (x4083 x1499) (x1358 x1499)))
(define-fun x780 ((x1499 x5128)) Int (ite x1704 (x1358 x1499) (ite x6283 (ite x2000 (x4441 x1499) (x5823 x1499)) (ite x2348 (x3193 x1499) (x4532 x1499)))))
(define-fun x3235 ((x1499 x5128)) Int (ite (= x6136 x1499) x4384 (x780 x1499)))
(define-fun x2924 ((x1499 x5128)) Int (ite (= x1499 x2935) x3130 (x3235 x1499)))
(define-fun x3878 ((x1499 Int)) Int (ite (= x1499 128) x493 (x5960 x1499)))
(define-fun x750 ((x1499 x5128)) Int (ite x5505 (x3613 x1499) (ite x2467 (x3613 x1499) (ite x2955 (x3613 x1499) (ite x3720 (x3613 x1499) (ite x907 (ite x1054 (x3613 x1499) (x6182 x1499)) (x3613 x1499)))))))
(define-fun x352 ((x1499 x5128)) Int (ite x1549 (x750 x1499) (ite x5692 (x3613 x1499) (ite x590 (x3613 x1499) (ite x4197 (x3613 x1499) (x750 x1499))))))
(define-fun x3033 ((x1499 x5128)) Int (ite x3940 (x3613 x1499) (ite x1355 (x3613 x1499) (ite x3405 (x3613 x1499) (ite x4218 (x3613 x1499) (ite x1845 (ite x1839 (x3613 x1499) (x4984 x1499)) (x3613 x1499)))))))
(define-fun x2792 ((x1499 x5128)) Int (ite x4443 (x3613 x1499) (ite x1214 (x3613 x1499) (ite x4502 (x3613 x1499) (ite x5763 (x3613 x1499) (ite x2001 (ite x601 (x3613 x1499) (x4776 x1499)) (x3613 x1499)))))))
(define-fun x5843 ((x1499 x5128)) Int (ite x6076 (x3613 x1499) (ite x2513 (x3613 x1499) (ite x6261 (x3033 x1499) (ite x622 (x3613 x1499) (ite x1053 (x3613 x1499) (ite x6202 (x3613 x1499) (ite x4886 (x3613 x1499) (ite x867 (x3613 x1499) (ite x5748 (x2792 x1499) (ite x858 (x3613 x1499) (ite x2673 (x3613 x1499) (ite x6208 (x3613 x1499) (ite x568 (x3613 x1499) (ite x752 (x3613 x1499) (ite x1797 (x3613 x1499) (ite x1833 (x3613 x1499) (ite x3309 (x3613 x1499) (ite x2922 (x2792 x1499) (ite x1772 (x3613 x1499) (ite x363 (x3613 x1499) (ite x6051 (x3613 x1499) (ite x111 (x3613 x1499) (ite x2077 (x3613 x1499) (ite x121 (x3033 x1499) (x3613 x1499))))))))))))))))))))))))))
(define-fun x4406 ((x1499 x5128)) Int (ite x4085 (x3613 x1499) (ite x3667 (x3613 x1499) (x2792 x1499))))
(define-fun x5411 ((x1499 x5128)) Int (ite x2450 (x4406 x1499) (x3613 x1499)))
(define-fun x3042 ((x1499 x5128)) Int (ite x405 (x5411 x1499) (x3033 x1499)))
(define-fun x961 ((x1499 x5128)) Int (ite x6004 (x3042 x1499) (x3613 x1499)))
(define-fun x2945 ((x1499 x5128)) Int (ite x1704 (x3613 x1499) (ite x6283 (ite x2000 (x352 x1499) (x750 x1499)) (ite x2348 (x5843 x1499) (x961 x1499)))))
(define-fun x4108 ((x1499 Int)) Int (ite (= x1499 128) x2960 (x3878 x1499)))
(define-fun x861 ((x1499 Int)) Int (ite (= x1499 128) (ite true 1 0) (x4108 x1499)))
(define-fun x4096 ((x1499 Int)) Int (ite (= x1499 0) x3856 (x2315 x1499)))
(define-fun x818 ((x1499 x5128)) Int (ite x2510 (x417 x1499) (ite x4090 (x417 x1499) (ite x1692 (x417 x1499) (ite x2980 (x417 x1499) (ite x2319 (x417 x1499) (ite x3665 (x417 x1499) (ite x6335 (x290 x1499) (ite x3551 (x290 x1499) (x417 x1499))))))))))
(define-fun x56 ((x1499 x5128)) Int (ite x5505 (x417 x1499) (ite x2467 (x417 x1499) (ite x2955 (x417 x1499) (ite x3720 (x417 x1499) (ite x907 (x417 x1499) (ite x1662 (ite x4347 (x818 x1499) (x4214 x1499)) (x417 x1499))))))))
(define-fun x5694 ((x1499 x5128)) Int (ite x1549 (x56 x1499) (ite x5692 (x417 x1499) (ite x590 (x417 x1499) (ite x4197 (x417 x1499) (x56 x1499))))))
(define-fun x3530 ((x1499 x5128)) Int (ite x96 (x417 x1499) (ite x4394 (x417 x1499) (ite x1903 (x417 x1499) (ite x984 (x417 x1499) (ite x5666 (x417 x1499) (ite x2257 (x417 x1499) (ite x3885 (x5042 x1499) (ite x6289 (x5042 x1499) (x417 x1499))))))))))
(define-fun x2471 ((x1499 x5128)) Int (ite x3940 (x417 x1499) (ite x1355 (x417 x1499) (ite x3405 (x417 x1499) (ite x4218 (x417 x1499) (ite x1845 (x417 x1499) (ite x4844 (ite x4574 (x3530 x1499) (x4163 x1499)) (x417 x1499))))))))
(define-fun x5764 ((x1499 x5128)) Int (ite x3025 (x417 x1499) (ite x1583 (x417 x1499) (ite x4761 (x417 x1499) (ite x4030 (x417 x1499) (ite x4029 (x3868 x1499) (x417 x1499)))))))
(define-fun x3099 ((x1499 x5128)) Int (ite x1113 (x417 x1499) (ite x1899 (x417 x1499) (ite x149 (x417 x1499) (ite x5170 (x417 x1499) (ite x5136 (x417 x1499) (ite x537 (ite x3273 (x5764 x1499) (x517 x1499)) (x417 x1499))))))))
(define-fun x2053 ((x1499 x5128)) Int (ite x6076 (x417 x1499) (ite x2513 (x417 x1499) (ite x6261 (x2471 x1499) (ite x622 (x417 x1499) (ite x1053 (x417 x1499) (ite x6202 (x417 x1499) (ite x4886 (x3099 x1499) (ite x867 (x417 x1499) (ite x5748 (x417 x1499) (ite x858 (x417 x1499) (ite x2673 (x417 x1499) (ite x6208 (x417 x1499) (ite x568 (x417 x1499) (ite x752 (x417 x1499) (ite x1797 (x417 x1499) (ite x1833 (x417 x1499) (ite x3309 (x417 x1499) (ite x2922 (x417 x1499) (ite x1772 (x417 x1499) (ite x363 (x3099 x1499) (ite x6051 (x417 x1499) (ite x111 (x417 x1499) (ite x2077 (x417 x1499) (ite x121 (x2471 x1499) (x417 x1499))))))))))))))))))))))))))
(define-fun x2124 ((x1499 x5128)) Int (ite x4085 (x3099 x1499) (x417 x1499)))
(define-fun x3709 ((x1499 x5128)) Int (ite x2450 (x2124 x1499) (x417 x1499)))
(define-fun x5034 ((x1499 x5128)) Int (ite x405 (x3709 x1499) (x2471 x1499)))
(define-fun x4871 ((x1499 x5128)) Int (ite x6004 (x5034 x1499) (x417 x1499)))
(define-fun x5146 ((x1499 x5128)) Int (ite x1704 (x417 x1499) (ite x6283 (ite x2000 (x5694 x1499) (x56 x1499)) (ite x2348 (x2053 x1499) (x4871 x1499)))))
(define-fun x4104 ((x1499 x5128)) Int (ite x2510 (x400 x1499) (ite x4090 (x400 x1499) (ite x1692 (x400 x1499) (ite x2980 (x400 x1499) (ite x2319 (x400 x1499) (ite x3665 (x400 x1499) (ite x6335 (x400 x1499) (ite x3551 (x2563 x1499) (x400 x1499))))))))))
(define-fun x2187 ((x1499 x5128)) Int (ite x5505 (x400 x1499) (ite x2467 (x400 x1499) (ite x2955 (x400 x1499) (ite x3720 (x400 x1499) (ite x907 (x400 x1499) (ite x1662 (ite x4347 (x4104 x1499) (x2563 x1499)) (x400 x1499))))))))
(define-fun x2273 ((x1499 x5128)) Int (ite x1549 (x2187 x1499) (ite x5692 (x400 x1499) (ite x590 (x400 x1499) (ite x4197 (x400 x1499) (x2187 x1499))))))
(define-fun x4219 ((x1499 x5128)) Int (ite x96 (x400 x1499) (ite x4394 (x400 x1499) (ite x1903 (x400 x1499) (ite x984 (x400 x1499) (ite x5666 (x400 x1499) (ite x2257 (x400 x1499) (ite x3885 (x400 x1499) (ite x6289 (x5654 x1499) (x400 x1499))))))))))
(define-fun x6307 ((x1499 x5128)) Int (ite x3940 (x400 x1499) (ite x1355 (x400 x1499) (ite x3405 (x400 x1499) (ite x4218 (x400 x1499) (ite x1845 (x400 x1499) (ite x4844 (ite x4574 (x4219 x1499) (x5654 x1499)) (x400 x1499))))))))
(define-fun x5197 ((x1499 x5128)) Int (ite x4443 (x400 x1499) (ite x1214 (x400 x1499) (ite x4502 (x400 x1499) (ite x5763 (x400 x1499) (ite x2001 (x400 x1499) (ite x2119 (ite x2278 (x400 x1499) (x1485 x1499)) (x400 x1499))))))))
(define-fun x4654 ((x1499 x5128)) Int (ite x6076 (x400 x1499) (ite x2513 (x400 x1499) (ite x6261 (x6307 x1499) (ite x622 (x400 x1499) (ite x1053 (x400 x1499) (ite x6202 (x400 x1499) (ite x4886 (x400 x1499) (ite x867 (x400 x1499) (ite x5748 (x5197 x1499) (ite x858 (x400 x1499) (ite x2673 (x400 x1499) (ite x6208 (x400 x1499) (ite x568 (x400 x1499) (ite x752 (x400 x1499) (ite x1797 (x400 x1499) (ite x1833 (x400 x1499) (ite x3309 (x400 x1499) (ite x2922 (x5197 x1499) (ite x1772 (x400 x1499) (ite x363 (x400 x1499) (ite x6051 (x400 x1499) (ite x111 (x400 x1499) (ite x2077 (x400 x1499) (ite x121 (x6307 x1499) (x400 x1499))))))))))))))))))))))))))
(define-fun x175 ((x1499 x5128)) Int (ite x4085 (x400 x1499) (ite x3667 (x400 x1499) (x5197 x1499))))
(define-fun x711 ((x1499 x5128)) Int (ite x2450 (x175 x1499) (x400 x1499)))
(define-fun x6245 ((x1499 x5128)) Int (ite x405 (x711 x1499) (x6307 x1499)))
(define-fun x6078 ((x1499 x5128)) Int (ite x6004 (x6245 x1499) (x400 x1499)))
(define-fun x6019 ((x1499 x5128)) Int (ite x1704 (x400 x1499) (ite x6283 (ite x2000 (x2273 x1499) (x2187 x1499)) (ite x2348 (x4654 x1499) (x6078 x1499)))))
(define-fun x2885 ((x1499 x5128)) Int (ite (= x841 x1499) x4542 (x5146 x1499)))
(define-fun x5813 ((x1499 x5128)) Int (ite (= x5660 x1499) x3437 (x2885 x1499)))
(define-fun x1626 ((x1499 Int)) Int (ite (= 128 x1499) x5948 (x4039 x1499)))
(define-fun x4651 ((x1499 Int)) Int (ite (= x1499 128) (ite true 1 0) (x1626 x1499)))
(define-fun x6242 ((x1499 Int)) Int (ite (= 0 x1499) x3678 (x2315 x1499)))
(define-fun x1838 ((x1499 x5128)) Int (ite x5454 (x4432 x1499) (ite x2327 (x3089 x1499) (ite x2176 (x187 x1499) (ite x3531 (x187 x1499) (ite x3966 (x187 x1499) (ite x3044 (x187 x1499) (ite x1418 (x3089 x1499) (ite x3395 (x4432 x1499) (x187 x1499))))))))))
(define-fun x4465 ((x1499 x5128)) Int (ite x5505 (x187 x1499) (ite x2467 (x187 x1499) (ite x2955 (x187 x1499) (ite x3720 (x187 x1499) (ite x907 (x187 x1499) (ite x1662 (x187 x1499) (ite x2096 (ite x6036 (x1838 x1499) (x4432 x1499)) (x187 x1499)))))))))
(define-fun x4498 ((x1499 x5128)) Int (ite x1549 (x4465 x1499) (ite x5692 (x187 x1499) (ite x590 (x187 x1499) (ite x4197 (x187 x1499) (x4465 x1499))))))
(define-fun x828 ((x1499 x5128)) Int (ite x89 (x2420 x1499) (ite x5802 (x3152 x1499) (ite x1497 (x187 x1499) (ite x3654 (x187 x1499) (ite x5096 (x187 x1499) (ite x5720 (x187 x1499) (ite x505 (x3152 x1499) (ite x6230 (x2420 x1499) (x187 x1499))))))))))
(define-fun x29 ((x1499 x5128)) Int (ite x3940 (x187 x1499) (ite x1355 (x187 x1499) (ite x3405 (x187 x1499) (ite x4218 (x187 x1499) (ite x1845 (x187 x1499) (ite x4844 (x187 x1499) (ite x1382 (ite x2473 (x828 x1499) (x2420 x1499)) (x187 x1499)))))))))
(define-fun x1744 ((x1499 x5128)) Int (ite x4020 (x4701 x1499) (ite x843 (x187 x1499) (ite x2605 (x187 x1499) (ite x2021 (x187 x1499) (ite x2189 (x4701 x1499) (x187 x1499)))))))
(define-fun x4683 ((x1499 x5128)) Int (ite x1113 (x187 x1499) (ite x1899 (x187 x1499) (ite x149 (x187 x1499) (ite x5170 (x187 x1499) (ite x5136 (x187 x1499) (ite x537 (x187 x1499) (ite x4966 (ite x4787 (x1744 x1499) (x5497 x1499)) (x187 x1499)))))))))
(define-fun x1646 ((x1499 x5128)) Int (ite x6076 (x187 x1499) (ite x2513 (x187 x1499) (ite x6261 (x29 x1499) (ite x622 (x187 x1499) (ite x1053 (x187 x1499) (ite x6202 (x187 x1499) (ite x4886 (x4683 x1499) (ite x867 (x187 x1499) (ite x5748 (x187 x1499) (ite x858 (x187 x1499) (ite x2673 (x187 x1499) (ite x6208 (x187 x1499) (ite x568 (x187 x1499) (ite x752 (x187 x1499) (ite x1797 (x187 x1499) (ite x1833 (x187 x1499) (ite x3309 (x187 x1499) (ite x2922 (x187 x1499) (ite x1772 (x187 x1499) (ite x363 (x4683 x1499) (ite x6051 (x187 x1499) (ite x111 (x187 x1499) (ite x2077 (x187 x1499) (ite x121 (x29 x1499) (x187 x1499))))))))))))))))))))))))))
(define-fun x4526 ((x1499 x5128)) Int (ite x4085 (x4683 x1499) (x187 x1499)))
(define-fun x4867 ((x1499 x5128)) Int (ite x2450 (x4526 x1499) (x187 x1499)))
(define-fun x3299 ((x1499 x5128)) Int (ite x405 (x4867 x1499) (x29 x1499)))
(define-fun x4854 ((x1499 x5128)) Int (ite x6004 (x3299 x1499) (x187 x1499)))
(define-fun x1828 ((x1499 x5128)) Int (ite x1704 (x187 x1499) (ite x6283 (ite x2000 (x4498 x1499) (x4465 x1499)) (ite x2348 (x1646 x1499) (x4854 x1499)))))
(define-fun x5890 ((x1499 x5128)) Int (ite (= x4367 x1499) x3032 (x1828 x1499)))
(define-fun x4848 ((x1499 x5128)) Int (ite (= x1499 x926) x5328 (x5890 x1499)))
(define-fun x1029 ((x1499 x5128)) Int (ite x5505 (x1756 x1499) (ite x2467 (x1756 x1499) (ite x2955 (x1756 x1499) (ite x3720 (x1756 x1499) (ite x907 (x1756 x1499) (ite x1662 (x1756 x1499) (ite x2096 (ite x6036 (x1756 x1499) (x4264 x1499)) (x1756 x1499)))))))))
(define-fun x2750 ((x1499 x5128)) Int (ite x1549 (x1029 x1499) (ite x5692 (x1756 x1499) (ite x590 (x1756 x1499) (ite x4197 (x1756 x1499) (x1029 x1499))))))
(define-fun x3122 ((x1499 x5128)) Int (ite x3940 (x1756 x1499) (ite x1355 (x1756 x1499) (ite x3405 (x1756 x1499) (ite x4218 (x1756 x1499) (ite x1845 (x1756 x1499) (ite x4844 (x1756 x1499) (ite x1382 (ite x2473 (x1756 x1499) (x745 x1499)) (x1756 x1499)))))))))
(define-fun x4018 ((x1499 x5128)) Int (ite x4443 (x1756 x1499) (ite x1214 (x1756 x1499) (ite x4502 (x1756 x1499) (ite x5763 (x1756 x1499) (ite x2001 (x1756 x1499) (ite x2119 (x1756 x1499) (ite x1880 (ite x3506 (x1756 x1499) (x3477 x1499)) (x1756 x1499)))))))))
(define-fun x1011 ((x1499 x5128)) Int (ite x6076 (x1756 x1499) (ite x2513 (x1756 x1499) (ite x6261 (x3122 x1499) (ite x622 (x1756 x1499) (ite x1053 (x1756 x1499) (ite x6202 (x1756 x1499) (ite x4886 (x1756 x1499) (ite x867 (x1756 x1499) (ite x5748 (x4018 x1499) (ite x858 (x1756 x1499) (ite x2673 (x1756 x1499) (ite x6208 (x1756 x1499) (ite x568 (x1756 x1499) (ite x752 (x1756 x1499) (ite x1797 (x1756 x1499) (ite x1833 (x1756 x1499) (ite x3309 (x1756 x1499) (ite x2922 (x4018 x1499) (ite x1772 (x1756 x1499) (ite x363 (x1756 x1499) (ite x6051 (x1756 x1499) (ite x111 (x1756 x1499) (ite x2077 (x1756 x1499) (ite x121 (x3122 x1499) (x1756 x1499))))))))))))))))))))))))))
(define-fun x4341 ((x1499 x5128)) Int (ite x4085 (x1756 x1499) (ite x3667 (x1756 x1499) (x4018 x1499))))
(define-fun x3195 ((x1499 x5128)) Int (ite x2450 (x4341 x1499) (x1756 x1499)))
(define-fun x4103 ((x1499 x5128)) Int (ite x405 (x3195 x1499) (x3122 x1499)))
(define-fun x1162 ((x1499 x5128)) Int (ite x6004 (x4103 x1499) (x1756 x1499)))
(define-fun x4046 ((x1499 x5128)) Int (ite x1704 (x1756 x1499) (ite x6283 (ite x2000 (x2750 x1499) (x1029 x1499)) (ite x2348 (x1011 x1499) (x1162 x1499)))))
(define-fun x4962 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x2315 x1499)))
(define-fun x470 ((x1499 x5128)) Int (ite x58 (x1528 x1499) (ite x4933 (x19 x1499) (ite x532 (x4873 x1499) (ite x741 (x4873 x1499) (ite x1886 (x4873 x1499) (ite x958 (x4873 x1499) (ite x5675 (x19 x1499) (ite x586 (x1528 x1499) (x4873 x1499))))))))))
(define-fun x5181 ((x1499 x5128)) Int (ite x5505 (x4873 x1499) (ite x2467 (x4873 x1499) (ite x2955 (x4873 x1499) (ite x3720 (x4873 x1499) (ite x907 (x4873 x1499) (ite x1662 (x4873 x1499) (ite x2096 (x4873 x1499) (ite x886 (ite x3718 (x470 x1499) (x1528 x1499)) (x4873 x1499))))))))))
(define-fun x309 ((x1499 x5128)) Int (ite x1549 (x5181 x1499) (ite x5692 (x4873 x1499) (ite x590 (x4873 x1499) (ite x4197 (x4873 x1499) (x5181 x1499))))))
(define-fun x4023 ((x1499 x5128)) Int (ite x864 (x304 x1499) (ite x4075 (x856 x1499) (ite x359 (x4873 x1499) (ite x916 (x4873 x1499) (ite x2526 (x4873 x1499) (ite x5698 (x4873 x1499) (ite x704 (x856 x1499) (ite x4117 (x304 x1499) (x4873 x1499))))))))))
(define-fun x4326 ((x1499 x5128)) Int (ite x3940 (x4873 x1499) (ite x1355 (x4873 x1499) (ite x3405 (x4873 x1499) (ite x4218 (x4873 x1499) (ite x1845 (x4873 x1499) (ite x4844 (x4873 x1499) (ite x1382 (x4873 x1499) (ite x295 (ite x2620 (x4023 x1499) (x304 x1499)) (x4873 x1499))))))))))
(define-fun x3838 ((x1499 x5128)) Int (ite x796 (x3923 x1499) (ite x5608 (x4873 x1499) (ite x4985 (x4873 x1499) (ite x4581 (x4873 x1499) (ite x5573 (x3923 x1499) (x4873 x1499)))))))
(define-fun x629 ((x1499 x5128)) Int (ite x1113 (x4873 x1499) (ite x1899 (x4873 x1499) (ite x149 (x4873 x1499) (ite x5170 (x4873 x1499) (ite x5136 (x4873 x1499) (ite x537 (x4873 x1499) (ite x4966 (x4873 x1499) (ite x4928 (ite x1814 (x3838 x1499) (x3237 x1499)) (x4873 x1499))))))))))
(define-fun x3371 ((x1499 x5128)) Int (ite x6076 (x4873 x1499) (ite x2513 (x4873 x1499) (ite x6261 (x4326 x1499) (ite x622 (x4873 x1499) (ite x1053 (x4873 x1499) (ite x6202 (x4873 x1499) (ite x4886 (x629 x1499) (ite x867 (x4873 x1499) (ite x5748 (x4873 x1499) (ite x858 (x4873 x1499) (ite x2673 (x4873 x1499) (ite x6208 (x4873 x1499) (ite x568 (x4873 x1499) (ite x752 (x4873 x1499) (ite x1797 (x4873 x1499) (ite x1833 (x4873 x1499) (ite x3309 (x4873 x1499) (ite x2922 (x4873 x1499) (ite x1772 (x4873 x1499) (ite x363 (x629 x1499) (ite x6051 (x4873 x1499) (ite x111 (x4873 x1499) (ite x2077 (x4873 x1499) (ite x121 (x4326 x1499) (x4873 x1499))))))))))))))))))))))))))
(define-fun x4924 ((x1499 x5128)) Int (ite x4085 (x629 x1499) (x4873 x1499)))
(define-fun x3164 ((x1499 x5128)) Int (ite x2450 (x4924 x1499) (x4873 x1499)))
(define-fun x6030 ((x1499 x5128)) Int (ite x405 (x3164 x1499) (x4326 x1499)))
(define-fun x3362 ((x1499 x5128)) Int (ite x6004 (x6030 x1499) (x4873 x1499)))
(define-fun x2484 ((x1499 x5128)) Int (ite x1704 (x4873 x1499) (ite x6283 (ite x2000 (x309 x1499) (x5181 x1499)) (ite x2348 (x3371 x1499) (x3362 x1499)))))
(define-fun x357 ((x1499 x5128)) Int (ite (= x1499 x3268) x1883 (x2484 x1499)))
(define-fun x2116 ((x1499 x5128)) Int (ite (= x1499 x3078) x5056 (x357 x1499)))
(define-fun x1212 ((x1499 x5128)) Int (ite x5505 (x5872 x1499) (ite x2467 (x5872 x1499) (ite x2955 (x5872 x1499) (ite x3720 (x5872 x1499) (ite x907 (x5872 x1499) (ite x1662 (x5872 x1499) (ite x2096 (x5872 x1499) (ite x886 (ite x3718 (x5872 x1499) (x5371 x1499)) (x5872 x1499))))))))))
(define-fun x5846 ((x1499 x5128)) Int (ite x1549 (x1212 x1499) (ite x5692 (x5872 x1499) (ite x590 (x5872 x1499) (ite x4197 (x5872 x1499) (x1212 x1499))))))
(define-fun x2773 ((x1499 x5128)) Int (ite x3940 (x5872 x1499) (ite x1355 (x5872 x1499) (ite x3405 (x5872 x1499) (ite x4218 (x5872 x1499) (ite x1845 (x5872 x1499) (ite x4844 (x5872 x1499) (ite x1382 (x5872 x1499) (ite x295 (ite x2620 (x5872 x1499) (x2394 x1499)) (x5872 x1499))))))))))
(define-fun x6185 ((x1499 x5128)) Int (ite x4443 (x5872 x1499) (ite x1214 (x5872 x1499) (ite x4502 (x5872 x1499) (ite x5763 (x5872 x1499) (ite x2001 (x5872 x1499) (ite x2119 (x5872 x1499) (ite x1880 (x5872 x1499) (ite x2632 (ite x1752 (x5872 x1499) (x3852 x1499)) (x5872 x1499))))))))))
(define-fun x2762 ((x1499 x5128)) Int (ite x6076 (x5872 x1499) (ite x2513 (x5872 x1499) (ite x6261 (x2773 x1499) (ite x622 (x5872 x1499) (ite x1053 (x5872 x1499) (ite x6202 (x5872 x1499) (ite x4886 (x5872 x1499) (ite x867 (x5872 x1499) (ite x5748 (x6185 x1499) (ite x858 (x5872 x1499) (ite x2673 (x5872 x1499) (ite x6208 (x5872 x1499) (ite x568 (x5872 x1499) (ite x752 (x5872 x1499) (ite x1797 (x5872 x1499) (ite x1833 (x5872 x1499) (ite x3309 (x5872 x1499) (ite x2922 (x6185 x1499) (ite x1772 (x5872 x1499) (ite x363 (x5872 x1499) (ite x6051 (x5872 x1499) (ite x111 (x5872 x1499) (ite x2077 (x5872 x1499) (ite x121 (x2773 x1499) (x5872 x1499))))))))))))))))))))))))))
(define-fun x4674 ((x1499 x5128)) Int (ite x4085 (x5872 x1499) (ite x3667 (x5872 x1499) (x6185 x1499))))
(define-fun x4689 ((x1499 x5128)) Int (ite x2450 (x4674 x1499) (x5872 x1499)))
(define-fun x2908 ((x1499 x5128)) Int (ite x405 (x4689 x1499) (x2773 x1499)))
(define-fun x2108 ((x1499 x5128)) Int (ite x6004 (x2908 x1499) (x5872 x1499)))
(define-fun x384 ((x1499 x5128)) Int (ite x1704 (x5872 x1499) (ite x6283 (ite x2000 (x5846 x1499) (x1212 x1499)) (ite x2348 (x2762 x1499) (x2108 x1499)))))
(define-fun x2910 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x2315 x1499)))
(define-fun x1319 ((x1499 x5128)) Int (ite x4270 (x5795 x1499) (ite x6215 (x5207 x1499) (ite x227 (x614 x1499) (ite x2496 (x614 x1499) (ite x4462 (x614 x1499) (ite x1790 (x614 x1499) (ite x6252 (x5207 x1499) (ite x2532 (x5795 x1499) (x614 x1499))))))))))
(define-fun x1025 ((x1499 x5128)) Int (ite x5505 (x614 x1499) (ite x2467 (x614 x1499) (ite x2955 (x614 x1499) (ite x3720 (x614 x1499) (ite x907 (x614 x1499) (ite x1662 (x614 x1499) (ite x2096 (x614 x1499) (ite x886 (x614 x1499) (ite x6324 (ite x491 (x1319 x1499) (x5795 x1499)) (x614 x1499)))))))))))
(define-fun x3489 ((x1499 x5128)) Int (ite x1549 (x1025 x1499) (ite x5692 (x614 x1499) (ite x590 (x614 x1499) (ite x4197 (x614 x1499) (x1025 x1499))))))
(define-fun x385 ((x1499 x5128)) Int (ite x2038 (x1424 x1499) (ite x5504 (x1817 x1499) (ite x3675 (x614 x1499) (ite x3228 (x614 x1499) (ite x2541 (x614 x1499) (ite x4830 (x614 x1499) (ite x6015 (x1817 x1499) (ite x2909 (x1424 x1499) (x614 x1499))))))))))
(define-fun x5985 ((x1499 x5128)) Int (ite x3940 (x614 x1499) (ite x1355 (x614 x1499) (ite x3405 (x614 x1499) (ite x4218 (x614 x1499) (ite x1845 (x614 x1499) (ite x4844 (x614 x1499) (ite x1382 (x614 x1499) (ite x295 (x614 x1499) (ite x5130 (ite x2470 (x385 x1499) (x1424 x1499)) (x614 x1499)))))))))))
(define-fun x5941 ((x1499 x5128)) Int (ite x6169 (x166 x1499) (ite x2188 (x614 x1499) (ite x3072 (x614 x1499) (ite x647 (x614 x1499) (ite x321 (x166 x1499) (x614 x1499)))))))
(define-fun x1417 ((x1499 x5128)) Int (ite x1113 (x614 x1499) (ite x1899 (x614 x1499) (ite x149 (x614 x1499) (ite x5170 (x614 x1499) (ite x5136 (x614 x1499) (ite x537 (x614 x1499) (ite x4966 (x614 x1499) (ite x4928 (x614 x1499) (ite x2480 (ite x2297 (x5941 x1499) (x5103 x1499)) (x614 x1499)))))))))))
(define-fun x6005 ((x1499 x5128)) Int (ite x6076 (x614 x1499) (ite x2513 (x614 x1499) (ite x6261 (x5985 x1499) (ite x622 (x614 x1499) (ite x1053 (x614 x1499) (ite x6202 (x614 x1499) (ite x4886 (x1417 x1499) (ite x867 (x614 x1499) (ite x5748 (x614 x1499) (ite x858 (x614 x1499) (ite x2673 (x614 x1499) (ite x6208 (x614 x1499) (ite x568 (x614 x1499) (ite x752 (x614 x1499) (ite x1797 (x614 x1499) (ite x1833 (x614 x1499) (ite x3309 (x614 x1499) (ite x2922 (x614 x1499) (ite x1772 (x614 x1499) (ite x363 (x1417 x1499) (ite x6051 (x614 x1499) (ite x111 (x614 x1499) (ite x2077 (x614 x1499) (ite x121 (x5985 x1499) (x614 x1499))))))))))))))))))))))))))
(define-fun x2687 ((x1499 x5128)) Int (ite x4085 (x1417 x1499) (x614 x1499)))
(define-fun x1360 ((x1499 x5128)) Int (ite x2450 (x2687 x1499) (x614 x1499)))
(define-fun x2997 ((x1499 x5128)) Int (ite x405 (x1360 x1499) (x5985 x1499)))
(define-fun x3813 ((x1499 x5128)) Int (ite x6004 (x2997 x1499) (x614 x1499)))
(define-fun x5351 ((x1499 x5128)) Int (ite x1704 (x614 x1499) (ite x6283 (ite x2000 (x3489 x1499) (x1025 x1499)) (ite x2348 (x6005 x1499) (x3813 x1499)))))
(define-fun x5472 ((x1499 x5128)) Int (ite (= x1499 x3071) x2693 (x5351 x1499)))
(define-fun x3250 ((x1499 x5128)) Int (ite (= x2453 x1499) x4155 (x5472 x1499)))
(define-fun x3615 ((x1499 x5128)) Int (ite x5505 (x366 x1499) (ite x2467 (x366 x1499) (ite x2955 (x366 x1499) (ite x3720 (x366 x1499) (ite x907 (x366 x1499) (ite x1662 (x366 x1499) (ite x2096 (x366 x1499) (ite x886 (x366 x1499) (ite x6324 (ite x491 (x366 x1499) (x4061 x1499)) (x366 x1499)))))))))))
(define-fun x3508 ((x1499 x5128)) Int (ite x1549 (x3615 x1499) (ite x5692 (x366 x1499) (ite x590 (x366 x1499) (ite x4197 (x366 x1499) (x3615 x1499))))))
(define-fun x3209 ((x1499 x5128)) Int (ite x3940 (x366 x1499) (ite x1355 (x366 x1499) (ite x3405 (x366 x1499) (ite x4218 (x366 x1499) (ite x1845 (x366 x1499) (ite x4844 (x366 x1499) (ite x1382 (x366 x1499) (ite x295 (x366 x1499) (ite x5130 (ite x2470 (x366 x1499) (x4438 x1499)) (x366 x1499)))))))))))
(define-fun x68 ((x1499 x5128)) Int (ite x4443 (x366 x1499) (ite x1214 (x366 x1499) (ite x4502 (x366 x1499) (ite x5763 (x366 x1499) (ite x2001 (x366 x1499) (ite x2119 (x366 x1499) (ite x1880 (x366 x1499) (ite x2632 (x366 x1499) (ite x551 (ite x4396 (x366 x1499) (x4723 x1499)) (x366 x1499)))))))))))
(define-fun x6361 ((x1499 x5128)) Int (ite x6076 (x366 x1499) (ite x2513 (x366 x1499) (ite x6261 (x3209 x1499) (ite x622 (x366 x1499) (ite x1053 (x366 x1499) (ite x6202 (x366 x1499) (ite x4886 (x366 x1499) (ite x867 (x366 x1499) (ite x5748 (x68 x1499) (ite x858 (x366 x1499) (ite x2673 (x366 x1499) (ite x6208 (x366 x1499) (ite x568 (x366 x1499) (ite x752 (x366 x1499) (ite x1797 (x366 x1499) (ite x1833 (x366 x1499) (ite x3309 (x366 x1499) (ite x2922 (x68 x1499) (ite x1772 (x366 x1499) (ite x363 (x366 x1499) (ite x6051 (x366 x1499) (ite x111 (x366 x1499) (ite x2077 (x366 x1499) (ite x121 (x3209 x1499) (x366 x1499))))))))))))))))))))))))))
(define-fun x3097 ((x1499 x5128)) Int (ite x4085 (x366 x1499) (ite x3667 (x366 x1499) (x68 x1499))))
(define-fun x2268 ((x1499 x5128)) Int (ite x2450 (x3097 x1499) (x366 x1499)))
(define-fun x5854 ((x1499 x5128)) Int (ite x405 (x2268 x1499) (x3209 x1499)))
(define-fun x3733 ((x1499 x5128)) Int (ite x6004 (x5854 x1499) (x366 x1499)))
(define-fun x163 ((x1499 x5128)) Int (ite x1704 (x366 x1499) (ite x6283 (ite x2000 (x3508 x1499) (x3615 x1499)) (ite x2348 (x6361 x1499) (x3733 x1499)))))
(define-fun x5835 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x2315 x1499)))
(define-fun x3719 ((x1499 x5128)) Int (ite x2724 (x5939 x1499) (ite x4186 (x4038 x1499) (ite x4921 (x597 x1499) (ite x1509 (x597 x1499) (ite x3495 (x597 x1499) (ite x2767 (x597 x1499) (ite x2102 (x4038 x1499) (ite x4999 (x5939 x1499) (x597 x1499))))))))))
(define-fun x3715 ((x1499 x5128)) Int (ite x5505 (x597 x1499) (ite x2467 (x597 x1499) (ite x2955 (x597 x1499) (ite x3720 (x597 x1499) (ite x907 (x597 x1499) (ite x1662 (x597 x1499) (ite x2096 (x597 x1499) (ite x886 (x597 x1499) (ite x6324 (x597 x1499) (ite x5790 (ite x834 (x3719 x1499) (x5939 x1499)) (x597 x1499))))))))))))
(define-fun x283 ((x1499 x5128)) Int (ite x1549 (x3715 x1499) (ite x5692 (x597 x1499) (ite x590 (x597 x1499) (ite x4197 (x597 x1499) (x3715 x1499))))))
(define-fun x4534 ((x1499 x5128)) Int (ite x2009 (x4161 x1499) (ite x6223 (x1851 x1499) (ite x4229 (x597 x1499) (ite x5102 (x597 x1499) (ite x2372 (x597 x1499) (ite x4883 (x597 x1499) (ite x302 (x1851 x1499) (ite x1289 (x4161 x1499) (x597 x1499))))))))))
(define-fun x1553 ((x1499 x5128)) Int (ite x3940 (x597 x1499) (ite x1355 (x597 x1499) (ite x3405 (x597 x1499) (ite x4218 (x597 x1499) (ite x1845 (x597 x1499) (ite x4844 (x597 x1499) (ite x1382 (x597 x1499) (ite x295 (x597 x1499) (ite x5130 (x597 x1499) (ite x1262 (ite x3557 (x4534 x1499) (x4161 x1499)) (x597 x1499))))))))))))
(define-fun x733 ((x1499 x5128)) Int (ite x740 (x2929 x1499) (ite x4227 (x597 x1499) (ite x1093 (x597 x1499) (ite x2185 (x597 x1499) (ite x1323 (x2929 x1499) (x597 x1499)))))))
(define-fun x1785 ((x1499 x5128)) Int (ite x1113 (x597 x1499) (ite x1899 (x597 x1499) (ite x149 (x597 x1499) (ite x5170 (x597 x1499) (ite x5136 (x597 x1499) (ite x537 (x597 x1499) (ite x4966 (x597 x1499) (ite x4928 (x597 x1499) (ite x2480 (x597 x1499) (ite x4925 (ite x2476 (x733 x1499) (x6192 x1499)) (x597 x1499))))))))))))
(define-fun x4222 ((x1499 x5128)) Int (ite x6076 (x597 x1499) (ite x2513 (x597 x1499) (ite x6261 (x1553 x1499) (ite x622 (x597 x1499) (ite x1053 (x597 x1499) (ite x6202 (x597 x1499) (ite x4886 (x1785 x1499) (ite x867 (x597 x1499) (ite x5748 (x597 x1499) (ite x858 (x597 x1499) (ite x2673 (x597 x1499) (ite x6208 (x597 x1499) (ite x568 (x597 x1499) (ite x752 (x597 x1499) (ite x1797 (x597 x1499) (ite x1833 (x597 x1499) (ite x3309 (x597 x1499) (ite x2922 (x597 x1499) (ite x1772 (x597 x1499) (ite x363 (x1785 x1499) (ite x6051 (x597 x1499) (ite x111 (x597 x1499) (ite x2077 (x597 x1499) (ite x121 (x1553 x1499) (x597 x1499))))))))))))))))))))))))))
(define-fun x2218 ((x1499 x5128)) Int (ite x4085 (x1785 x1499) (x597 x1499)))
(define-fun x2838 ((x1499 x5128)) Int (ite x2450 (x2218 x1499) (x597 x1499)))
(define-fun x4815 ((x1499 x5128)) Int (ite x405 (x2838 x1499) (x1553 x1499)))
(define-fun x3394 ((x1499 x5128)) Int (ite x6004 (x4815 x1499) (x597 x1499)))
(define-fun x929 ((x1499 x5128)) Int (ite x1704 (x597 x1499) (ite x6283 (ite x2000 (x283 x1499) (x3715 x1499)) (ite x2348 (x4222 x1499) (x3394 x1499)))))
(define-fun x364 ((x1499 x5128)) Int (ite (= x1499 x6173) x3061 (x929 x1499)))
(define-fun x3213 ((x1499 x5128)) Int (ite (= x4482 x1499) x4389 (x364 x1499)))
(define-fun x63 ((x1499 x5128)) Int (ite x5505 (x128 x1499) (ite x2467 (x128 x1499) (ite x2955 (x128 x1499) (ite x3720 (x128 x1499) (ite x907 (x128 x1499) (ite x1662 (x128 x1499) (ite x2096 (x128 x1499) (ite x886 (x128 x1499) (ite x6324 (x128 x1499) (ite x5790 (ite x834 (x128 x1499) (x4882 x1499)) (x128 x1499))))))))))))
(define-fun x1574 ((x1499 x5128)) Int (ite x1549 (x63 x1499) (ite x5692 (x128 x1499) (ite x590 (x128 x1499) (ite x4197 (x128 x1499) (x63 x1499))))))
(define-fun x3257 ((x1499 x5128)) Int (ite x3940 (x128 x1499) (ite x1355 (x128 x1499) (ite x3405 (x128 x1499) (ite x4218 (x128 x1499) (ite x1845 (x128 x1499) (ite x4844 (x128 x1499) (ite x1382 (x128 x1499) (ite x295 (x128 x1499) (ite x5130 (x128 x1499) (ite x1262 (ite x3557 (x128 x1499) (x4458 x1499)) (x128 x1499))))))))))))
(define-fun x1055 ((x1499 x5128)) Int (ite x4443 (x128 x1499) (ite x1214 (x128 x1499) (ite x4502 (x128 x1499) (ite x5763 (x128 x1499) (ite x2001 (x128 x1499) (ite x2119 (x128 x1499) (ite x1880 (x128 x1499) (ite x2632 (x128 x1499) (ite x551 (x128 x1499) (ite x1052 (ite x3670 (x128 x1499) (x317 x1499)) (x128 x1499))))))))))))
(define-fun x1632 ((x1499 x5128)) Int (ite x6076 (x128 x1499) (ite x2513 (x128 x1499) (ite x6261 (x3257 x1499) (ite x622 (x128 x1499) (ite x1053 (x128 x1499) (ite x6202 (x128 x1499) (ite x4886 (x128 x1499) (ite x867 (x128 x1499) (ite x5748 (x1055 x1499) (ite x858 (x128 x1499) (ite x2673 (x128 x1499) (ite x6208 (x128 x1499) (ite x568 (x128 x1499) (ite x752 (x128 x1499) (ite x1797 (x128 x1499) (ite x1833 (x128 x1499) (ite x3309 (x128 x1499) (ite x2922 (x1055 x1499) (ite x1772 (x128 x1499) (ite x363 (x128 x1499) (ite x6051 (x128 x1499) (ite x111 (x128 x1499) (ite x2077 (x128 x1499) (ite x121 (x3257 x1499) (x128 x1499))))))))))))))))))))))))))
(define-fun x3843 ((x1499 x5128)) Int (ite x4085 (x128 x1499) (ite x3667 (x128 x1499) (x1055 x1499))))
(define-fun x2014 ((x1499 x5128)) Int (ite x2450 (x3843 x1499) (x128 x1499)))
(define-fun x3117 ((x1499 x5128)) Int (ite x405 (x2014 x1499) (x3257 x1499)))
(define-fun x4436 ((x1499 x5128)) Int (ite x6004 (x3117 x1499) (x128 x1499)))
(define-fun x3980 ((x1499 x5128)) Int (ite x1704 (x128 x1499) (ite x6283 (ite x2000 (x1574 x1499) (x63 x1499)) (ite x2348 (x1632 x1499) (x4436 x1499)))))
(define-fun x6351 ((x1499 Int)) Int (ite (= x1499 0) 1 (x2315 x1499)))
(define-fun x734 ((x1499 x5128)) Int (ite x4751 (x5198 x1499) (x2226 x1499)))
(define-fun x1232 ((x1499 x5128)) Int (ite x5187 (x5198 x1499) (ite x2876 (x5198 x1499) (ite x82 (x5198 x1499) (ite x2125 (x734 x1499) (ite x4762 (x734 x1499) (x5198 x1499)))))))
(define-fun x3819 ((x1499 x5128)) Int (ite x5505 (x5198 x1499) (ite x2467 (x5198 x1499) (ite x2955 (x5198 x1499) (ite x3720 (x5198 x1499) (ite x907 (x5198 x1499) (ite x1662 (x5198 x1499) (ite x2096 (x5198 x1499) (ite x886 (x5198 x1499) (ite x6324 (x5198 x1499) (ite x5790 (x5198 x1499) (ite x4556 (x1232 x1499) (x734 x1499)))))))))))))
(define-fun x6091 ((x1499 x5128)) Int (ite x1549 (x3819 x1499) (ite x5692 (x5198 x1499) (ite x590 (x5198 x1499) (ite x4197 (x5198 x1499) (x3819 x1499))))))
(define-fun x2913 ((x1499 x5128)) Int (ite x1917 (x5198 x1499) (x4952 x1499)))
(define-fun x1491 ((x1499 x5128)) Int (ite x5629 (x5198 x1499) (ite x3953 (x5198 x1499) (ite x234 (x5198 x1499) (ite x3524 (x2913 x1499) (ite x5788 (x2913 x1499) (x5198 x1499)))))))
(define-fun x232 ((x1499 x5128)) Int (ite x3940 (x5198 x1499) (ite x1355 (x5198 x1499) (ite x3405 (x5198 x1499) (ite x4218 (x5198 x1499) (ite x1845 (x5198 x1499) (ite x4844 (x5198 x1499) (ite x1382 (x5198 x1499) (ite x295 (x5198 x1499) (ite x5130 (x5198 x1499) (ite x1262 (x5198 x1499) (ite x2224 (x1491 x1499) (x2913 x1499)))))))))))))
(define-fun x2003 ((x1499 x5128)) Int (ite x4443 (x5198 x1499) (ite x1214 (x5198 x1499) (ite x4502 (x5198 x1499) (ite x5763 (x5198 x1499) (ite x2001 (x5198 x1499) (ite x2119 (x5198 x1499) (ite x1880 (x5198 x1499) (ite x2632 (x5198 x1499) (ite x551 (x5198 x1499) (ite x1052 (x5198 x1499) (ite x6086 (x5198 x1499) (x6083 x1499)))))))))))))
(define-fun x1275 ((x1499 x5128)) Int (ite x6076 (x5198 x1499) (ite x2513 (x5198 x1499) (ite x6261 (x232 x1499) (ite x622 (x5198 x1499) (ite x1053 (x5198 x1499) (ite x6202 (x5198 x1499) (ite x4886 (x5198 x1499) (ite x867 (x5198 x1499) (ite x5748 (x2003 x1499) (ite x858 (x5198 x1499) (ite x2673 (x5198 x1499) (ite x6208 (x5198 x1499) (ite x568 (x5198 x1499) (ite x752 (x5198 x1499) (ite x1797 (x5198 x1499) (ite x1833 (x5198 x1499) (ite x3309 (x5198 x1499) (ite x2922 (x2003 x1499) (ite x1772 (x5198 x1499) (ite x363 (x5198 x1499) (ite x6051 (x5198 x1499) (ite x111 (x5198 x1499) (ite x2077 (x5198 x1499) (ite x121 (x232 x1499) (x5198 x1499))))))))))))))))))))))))))
(define-fun x657 ((x1499 x5128)) Int (ite x4085 (x5198 x1499) (ite x3667 (x5198 x1499) (x2003 x1499))))
(define-fun x1411 ((x1499 x5128)) Int (ite x2450 (x657 x1499) (x5198 x1499)))
(define-fun x6176 ((x1499 x5128)) Int (ite x405 (x1411 x1499) (x232 x1499)))
(define-fun x1002 ((x1499 x5128)) Int (ite x6004 (x6176 x1499) (x5198 x1499)))
(define-fun x5009 ((x1499 x5128)) Int (ite x1704 (x5198 x1499) (ite x6283 (ite x2000 (x6091 x1499) (x3819 x1499)) (ite x2348 (x1275 x1499) (x1002 x1499)))))
(define-fun x5168 ((x1499 Int)) Int (ite (= 128 x1499) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x4000 x1499)))
(define-fun x2034 ((x1499 Int)) Int (ite (= x1499 132) x4332 (x5168 x1499)))
(define-fun x3255 ((x1499 x5128)) Int (ite (= x1499 x5027) x3857 (x1067 x1499)))
(define-fun x4272 ((x1499 x5128)) Int (ite (= x2130 x1499) x6007 (x3255 x1499)))
(define-fun x5062 ((x1499 x5128)) Int (ite x4318 (x1067 x1499) (ite x3380 (x1067 x1499) (ite x5907 (x1067 x1499) (ite x35 (x1067 x1499) (ite x4593 (x1067 x1499) (ite x3762 (x1067 x1499) (ite x946 (x3255 x1499) (ite x4446 (x4272 x1499) (ite x255 (x3255 x1499) (ite x2046 (x1067 x1499) (ite x6093 (x1067 x1499) (ite x1819 (x1067 x1499) (ite x4505 (x1067 x1499) (ite x6259 (x1067 x1499) (ite x6355 (x1067 x1499) (ite x250 (x4272 x1499) (x1067 x1499))))))))))))))))))
(define-fun x4420 ((x1499 x5128)) Int (ite (= x1499 x440) x5989 (x4272 x1499)))
(define-fun x4615 ((x1499 x5128)) Int (ite x4905 (x4272 x1499) (x4420 x1499)))
(define-fun x5244 ((x1499 x5128)) Int (ite x4540 (ite x769 (x5062 x1499) (x4615 x1499)) (x1067 x1499)))
(define-fun x3083 ((x1499 x5128)) Int (ite (= x1499 x3831) x296 (x5244 x1499)))
(define-fun x5365 ((x1499 x5128)) Int (ite (= x1499 x2390) x5701 (x3083 x1499)))
(define-fun x3261 ((x1499 x5128)) Int (ite x2026 (x5244 x1499) (ite x2482 (x5244 x1499) (ite x2183 (x5244 x1499) (ite x3672 (x5244 x1499) (ite x1394 (x5244 x1499) (ite x5194 (x5244 x1499) (ite x3586 (x3083 x1499) (ite x521 (x5365 x1499) (ite x4541 (x3083 x1499) (ite x1178 (x5244 x1499) (ite x62 (x5244 x1499) (ite x5373 (x5244 x1499) (ite x1215 (x5244 x1499) (ite x4435 (x5244 x1499) (ite x2282 (x5244 x1499) (ite x2028 (x5365 x1499) (x5244 x1499))))))))))))))))))
(define-fun x1522 ((x1499 x5128)) Int (ite (= x1499 x3785) x4489 (x5365 x1499)))
(define-fun x6273 ((x1499 x5128)) Int (ite x4194 (x5365 x1499) (x1522 x1499)))
(define-fun x4009 ((x1499 x5128)) Int (ite x5505 (ite x4662 (x3261 x1499) (x6273 x1499)) (x5244 x1499)))
(define-fun x59 ((x1499 x5128)) Int (ite x1549 (x4009 x1499) (ite x5692 (x5244 x1499) (ite x590 (x5244 x1499) (ite x4197 (x5244 x1499) (x4009 x1499))))))
(define-fun x797 ((x1499 x5128)) Int (ite (= x1499 x2398) x1140 (x5244 x1499)))
(define-fun x6098 ((x1499 x5128)) Int (ite (= x1499 x5599) x705 (x797 x1499)))
(define-fun x5708 ((x1499 x5128)) Int (ite x2216 (x5244 x1499) (ite x563 (x5244 x1499) (ite x5821 (x5244 x1499) (ite x1475 (x5244 x1499) (ite x5276 (x5244 x1499) (ite x2380 (x5244 x1499) (ite x4696 (x797 x1499) (ite x1470 (x6098 x1499) (ite x1684 (x797 x1499) (ite x5947 (x5244 x1499) (ite x3967 (x5244 x1499) (ite x1546 (x5244 x1499) (ite x3777 (x5244 x1499) (ite x5290 (x5244 x1499) (ite x1620 (x5244 x1499) (ite x3423 (x6098 x1499) (x5244 x1499))))))))))))))))))
(define-fun x2211 ((x1499 x5128)) Int (ite (= x2994 x1499) x2169 (x6098 x1499)))
(define-fun x3435 ((x1499 x5128)) Int (ite x4748 (x6098 x1499) (x2211 x1499)))
(define-fun x3661 ((x1499 x5128)) Int (ite x3940 (ite x4379 (x5708 x1499) (x3435 x1499)) (x5244 x1499)))
(define-fun x4911 ((x1499 x5128)) Int (ite (= x42 x1499) x403 (x5244 x1499)))
(define-fun x2811 ((x1499 x5128)) Int (ite (= x3218 x1499) x4245 (x4911 x1499)))
(define-fun x3772 ((x1499 x5128)) Int (ite x5759 (x5244 x1499) (ite x1012 (x5244 x1499) (ite x188 (x5244 x1499) (ite x2664 (x5244 x1499) (ite x4129 (x5244 x1499) (ite x362 (x4911 x1499) (ite x3576 (x2811 x1499) (ite x4283 (x4911 x1499) (ite x3129 (x5244 x1499) (ite x1640 (x5244 x1499) (ite x208 (x5244 x1499) (ite x5235 (x5244 x1499) (ite x4734 (x5244 x1499) (ite x5209 (x2811 x1499) (x5244 x1499))))))))))))))))
(define-fun x3555 ((x1499 x5128)) Int (ite (= x3807 x1499) x4248 (x2811 x1499)))
(define-fun x2790 ((x1499 x5128)) Int (ite x5878 (x2811 x1499) (x3555 x1499)))
(define-fun x5931 ((x1499 x5128)) Int (ite x1113 (ite x2823 (x3772 x1499) (x2790 x1499)) (x5244 x1499)))
(define-fun x5017 ((x1499 x5128)) Int (ite x6076 (x5244 x1499) (ite x2513 (x5244 x1499) (ite x6261 (x3661 x1499) (ite x622 (x5244 x1499) (ite x1053 (x5244 x1499) (ite x6202 (x5244 x1499) (ite x4886 (x5931 x1499) (ite x867 (x5244 x1499) (ite x5748 (x5244 x1499) (ite x858 (x5244 x1499) (ite x2673 (x5244 x1499) (ite x6208 (x5244 x1499) (ite x568 (x5244 x1499) (ite x752 (x5244 x1499) (ite x1797 (x5244 x1499) (ite x1833 (x5244 x1499) (ite x3309 (x5244 x1499) (ite x2922 (x5244 x1499) (ite x1772 (x5244 x1499) (ite x363 (x5931 x1499) (ite x6051 (x5244 x1499) (ite x111 (x5244 x1499) (ite x2077 (x5244 x1499) (ite x121 (x3661 x1499) (x5244 x1499))))))))))))))))))))))))))
(define-fun x5179 ((x1499 x5128)) Int (ite x4085 (x5931 x1499) (x5244 x1499)))
(define-fun x2814 ((x1499 x5128)) Int (ite x2450 (x5179 x1499) (x5244 x1499)))
(define-fun x4661 ((x1499 x5128)) Int (ite x405 (x2814 x1499) (x3661 x1499)))
(define-fun x5437 ((x1499 x5128)) Int (ite x6004 (x4661 x1499) (x5244 x1499)))
(define-fun x1028 ((x1499 x5128)) Int (ite x1704 (x5244 x1499) (ite x6283 (ite x2000 (x59 x1499) (x4009 x1499)) (ite x2348 (x5017 x1499) (x5437 x1499)))))
(define-fun x3520 ((x1499 x5128)) Int (ite (= x1499 x103) x1934 (x1028 x1499)))
(define-fun x6274 ((x1499 x5128)) Int (ite (= x1499 x2094) x3685 (x3520 x1499)))
(define-fun x3542 ((x1499 x5128)) Int (ite x4160 (x1028 x1499) (ite x2250 (x1028 x1499) (ite x6033 (x1028 x1499) (ite x3528 (x1028 x1499) (ite x2901 (x1028 x1499) (ite x658 (x1028 x1499) (ite x2089 (x3520 x1499) (ite x1995 (x6274 x1499) (ite x4148 (x3520 x1499) (ite x3893 (x1028 x1499) (ite x2651 (x1028 x1499) (ite x3411 (x1028 x1499) (ite x5400 (x1028 x1499) (ite x2322 (x1028 x1499) (ite x1127 (x1028 x1499) (ite x4568 (x6274 x1499) (x1028 x1499))))))))))))))))))
(define-fun x732 ((x1499 x5128)) Int (ite (= x1499 x168) x21 (x6274 x1499)))
(define-fun x6353 ((x1499 x5128)) Int (ite x2735 (x6274 x1499) (x732 x1499)))
(define-fun x1580 ((x1499 x5128)) Int (ite x1614 (ite x480 (x3542 x1499) (x6353 x1499)) (x1028 x1499)))
(define-fun x2039 ((x1499 Int)) Int (ite (= x1499 0) x71 (x3223 x1499)))
(define-fun x3430 ((x1499 Int)) Int (ite (= x1499 128) x71 (x2034 x1499)))
(define-fun x3887 ((x1499 x5128)) Int (ite x92 (x3710 x1499) (ite x5842 (x292 x1499) (ite x5762 (x292 x1499) (ite x1209 (x292 x1499) (ite x3572 (x292 x1499) (ite x51 (x5915 x1499) (ite x4974 (x3710 x1499) (ite x1874 (x292 x1499) (ite x5534 (x5915 x1499) (x292 x1499)))))))))))
(define-fun x5613 ((x1499 x5128)) Int (ite x1614 (x292 x1499) (ite x3894 (ite x6276 (x3887 x1499) (x3710 x1499)) (x292 x1499))))
(define-fun x5333 ((x1499 Int)) Int (ite (= x1499 0) x3135 (x3223 x1499)))
(define-fun x185 ((x1499 Int)) Int (ite (= x1499 128) x3135 (x2034 x1499)))
(define-fun x5554 ((x1499 x5128)) Int (ite x2647 (x4412 x1499) (ite x707 (x1736 x1499) (ite x4877 (x1736 x1499) (ite x5271 (x1736 x1499) (ite x5213 (x1736 x1499) (ite x4585 (x2445 x1499) (ite x5673 (x2445 x1499) (ite x4665 (x4412 x1499) (ite x249 (x1736 x1499) (ite x5812 (x1736 x1499) (ite x4735 (x1736 x1499) (x4412 x1499)))))))))))))
(define-fun x5483 ((x1499 x5128)) Int (ite x1614 (x1736 x1499) (ite x3894 (x1736 x1499) (ite x5336 (ite x638 (x5554 x1499) (x4412 x1499)) (x1736 x1499)))))
(define-fun x4874 ((x1499 Int)) Int (ite (= 0 x1499) x6133 (x3223 x1499)))
(define-fun x4738 ((x1499 Int)) Int (ite (= 128 x1499) x6133 (x2034 x1499)))
(define-fun x2879 ((x1499 x5128)) Int (ite (= x1499 x677) x2739 (x4547 x1499)))
(define-fun x5796 ((x1499 x5128)) Int (ite x171 (x4547 x1499) (ite x5753 (x4547 x1499) (ite x4007 (x4547 x1499) (ite x3374 (x2879 x1499) (x4547 x1499))))))
(define-fun x3070 ((x1499 x5128)) Int (ite (= x1499 x399) x4120 (x2879 x1499)))
(define-fun x3444 ((x1499 x5128)) Int (ite x5505 (x4547 x1499) (ite x2467 (x4547 x1499) (ite x2955 (x4547 x1499) (ite x3720 (ite x6161 (x5796 x1499) (x3070 x1499)) (x4547 x1499))))))
(define-fun x1106 ((x1499 x5128)) Int (ite x1549 (x3444 x1499) (ite x5692 (x4547 x1499) (ite x590 (x4547 x1499) (ite x4197 (x4547 x1499) (x3444 x1499))))))
(define-fun x6310 ((x1499 x5128)) Int (ite (= x1499 x1547) x5700 (x4547 x1499)))
(define-fun x5313 ((x1499 x5128)) Int (ite x468 (x4547 x1499) (ite x3461 (x4547 x1499) (ite x2509 (x4547 x1499) (ite x1419 (x6310 x1499) (x4547 x1499))))))
(define-fun x2938 ((x1499 x5128)) Int (ite (= x3849 x1499) x4825 (x6310 x1499)))
(define-fun x1136 ((x1499 x5128)) Int (ite x3940 (x4547 x1499) (ite x1355 (x4547 x1499) (ite x3405 (x4547 x1499) (ite x4218 (ite x2114 (x5313 x1499) (x2938 x1499)) (x4547 x1499))))))
(define-fun x3611 ((x1499 x5128)) Int (ite x5277 (x4547 x1499) (ite x4352 (x4547 x1499) (ite x6297 (x4547 x1499) (x1198 x1499)))))
(define-fun x5095 ((x1499 x5128)) Int (ite x1113 (x4547 x1499) (ite x1899 (x4547 x1499) (ite x149 (x4547 x1499) (ite x5170 (ite x3067 (x3611 x1499) (x4183 x1499)) (x4547 x1499))))))
(define-fun x106 ((x1499 x5128)) Int (ite x6076 (x4547 x1499) (ite x2513 (x4547 x1499) (ite x6261 (x1136 x1499) (ite x622 (x4547 x1499) (ite x1053 (x4547 x1499) (ite x6202 (x4547 x1499) (ite x4886 (x5095 x1499) (ite x867 (x4547 x1499) (ite x5748 (x4547 x1499) (ite x858 (x4547 x1499) (ite x2673 (x4547 x1499) (ite x6208 (x4547 x1499) (ite x568 (x4547 x1499) (ite x752 (x4547 x1499) (ite x1797 (x4547 x1499) (ite x1833 (x4547 x1499) (ite x3309 (x4547 x1499) (ite x2922 (x4547 x1499) (ite x1772 (x4547 x1499) (ite x363 (x5095 x1499) (ite x6051 (x4547 x1499) (ite x111 (x4547 x1499) (ite x2077 (x4547 x1499) (ite x121 (x1136 x1499) (x4547 x1499))))))))))))))))))))))))))
(define-fun x1147 ((x1499 x5128)) Int (ite x4085 (x5095 x1499) (x4547 x1499)))
(define-fun x2744 ((x1499 x5128)) Int (ite x2450 (x1147 x1499) (x4547 x1499)))
(define-fun x3232 ((x1499 x5128)) Int (ite x405 (x2744 x1499) (x1136 x1499)))
(define-fun x394 ((x1499 x5128)) Int (ite x6004 (x3232 x1499) (x4547 x1499)))
(define-fun x2262 ((x1499 x5128)) Int (ite x1704 (x4547 x1499) (ite x6283 (ite x2000 (x1106 x1499) (x3444 x1499)) (ite x2348 (x106 x1499) (x394 x1499)))))
(define-fun x2023 ((x1499 x5128)) Int (ite (= x1499 x2330) x307 (x2262 x1499)))
(define-fun x6352 ((x1499 x5128)) Int (ite x3229 (x2262 x1499) (ite x4941 (x2262 x1499) (ite x678 (x2262 x1499) (ite x5386 (x2023 x1499) (x2262 x1499))))))
(define-fun x3607 ((x1499 x5128)) Int (ite (= x3226 x1499) x1840 (x2023 x1499)))
(define-fun x37 ((x1499 x5128)) Int (ite x1614 (x2262 x1499) (ite x3894 (x2262 x1499) (ite x5336 (x2262 x1499) (ite x5147 (ite x5203 (x6352 x1499) (x3607 x1499)) (x2262 x1499))))))
(define-fun x5716 ((x1499 Int)) Int (ite (= 0 x1499) x3422 (x3223 x1499)))
(define-fun x1134 ((x1499 Int)) Int (ite (= 128 x1499) x3422 (x2034 x1499)))
(define-fun x1969 ((x1499 x5128)) Int (ite x4477 (x2924 x1499) (ite x3158 (x2924 x1499) (ite x1631 (x2924 x1499) (ite x3137 (x3235 x1499) (ite x967 (x780 x1499) (ite x1568 (x780 x1499) (ite x1123 (x780 x1499) (ite x6282 (x780 x1499) (ite x2708 (x780 x1499) (ite x4932 (x3235 x1499) (ite x141 (x2924 x1499) (x780 x1499)))))))))))))
(define-fun x2261 ((x1499 x5128)) Int (ite x1614 (x780 x1499) (ite x3894 (x780 x1499) (ite x5336 (x780 x1499) (ite x5147 (x780 x1499) (ite x1796 (ite x3814 (x1969 x1499) (x2924 x1499)) (x780 x1499)))))))
(define-fun x4354 ((x1499 Int)) Int (ite (= x1499 0) x5304 (x3223 x1499)))
(define-fun x5360 ((x1499 Int)) Int (ite (= x1499 128) x5304 (x2034 x1499)))
(define-fun x6013 ((x1499 x5128)) Int (ite x3350 (x5146 x1499) (ite x2958 (x5146 x1499) (ite x1061 (x5146 x1499) (ite x3874 (x5146 x1499) (ite x3844 (x5146 x1499) (ite x3076 (x5146 x1499) (ite x814 (x2885 x1499) (ite x3635 (x2885 x1499) (x5146 x1499))))))))))
(define-fun x2852 ((x1499 x5128)) Int (ite x1614 (x5146 x1499) (ite x3894 (x5146 x1499) (ite x5336 (x5146 x1499) (ite x5147 (x5146 x1499) (ite x1796 (x5146 x1499) (ite x4826 (ite x1121 (x6013 x1499) (x5813 x1499)) (x5146 x1499))))))))
(define-fun x3631 ((x1499 Int)) Int (ite (= 0 x1499) x4588 (x3223 x1499)))
(define-fun x1956 ((x1499 Int)) Int (ite (= x1499 128) x4588 (x2034 x1499)))
(define-fun x3424 ((x1499 x5128)) Int (ite x427 (x4848 x1499) (ite x6279 (x5890 x1499) (ite x5302 (x1828 x1499) (ite x4467 (x1828 x1499) (ite x4223 (x1828 x1499) (ite x2342 (x1828 x1499) (ite x2540 (x5890 x1499) (ite x763 (x4848 x1499) (x1828 x1499))))))))))
(define-fun x5641 ((x1499 x5128)) Int (ite x1614 (x1828 x1499) (ite x3894 (x1828 x1499) (ite x5336 (x1828 x1499) (ite x5147 (x1828 x1499) (ite x1796 (x1828 x1499) (ite x4826 (x1828 x1499) (ite x3972 (ite x2952 (x3424 x1499) (x4848 x1499)) (x1828 x1499)))))))))
(define-fun x1069 ((x1499 Int)) Int (ite (= x1499 0) x1171 (x3223 x1499)))
(define-fun x4528 ((x1499 Int)) Int (ite (= 128 x1499) x1171 (x2034 x1499)))
(define-fun x4375 ((x1499 x5128)) Int (ite x4792 (x2116 x1499) (ite x3283 (x357 x1499) (ite x6311 (x2484 x1499) (ite x1158 (x2484 x1499) (ite x3755 (x2484 x1499) (ite x6125 (x2484 x1499) (ite x5428 (x357 x1499) (ite x478 (x2116 x1499) (x2484 x1499))))))))))
(define-fun x5761 ((x1499 x5128)) Int (ite x1614 (x2484 x1499) (ite x3894 (x2484 x1499) (ite x5336 (x2484 x1499) (ite x5147 (x2484 x1499) (ite x1796 (x2484 x1499) (ite x4826 (x2484 x1499) (ite x3972 (x2484 x1499) (ite x1026 (ite x4618 (x4375 x1499) (x2116 x1499)) (x2484 x1499))))))))))
(define-fun x4829 ((x1499 Int)) Int (ite (= x1499 0) x3854 (x3223 x1499)))
(define-fun x4979 ((x1499 Int)) Int (ite (= 128 x1499) x3854 (x2034 x1499)))
(define-fun x438 ((x1499 x5128)) Int (ite x5413 (x3250 x1499) (ite x4415 (x5472 x1499) (ite x3397 (x5351 x1499) (ite x6360 (x5351 x1499) (ite x4404 (x5351 x1499) (ite x3982 (x5351 x1499) (ite x3805 (x5472 x1499) (ite x3743 (x3250 x1499) (x5351 x1499))))))))))
(define-fun x3922 ((x1499 x5128)) Int (ite x1614 (x5351 x1499) (ite x3894 (x5351 x1499) (ite x5336 (x5351 x1499) (ite x5147 (x5351 x1499) (ite x1796 (x5351 x1499) (ite x4826 (x5351 x1499) (ite x3972 (x5351 x1499) (ite x1026 (x5351 x1499) (ite x4250 (ite x6121 (x438 x1499) (x3250 x1499)) (x5351 x1499)))))))))))
(define-fun x3245 ((x1499 Int)) Int (ite (= x1499 0) x5287 (x3223 x1499)))
(define-fun x1937 ((x1499 Int)) Int (ite (= 128 x1499) x5287 (x2034 x1499)))
(define-fun x3664 ((x1499 x5128)) Int (ite x2972 (x3213 x1499) (ite x4576 (x364 x1499) (ite x1314 (x929 x1499) (ite x1243 (x929 x1499) (ite x2105 (x929 x1499) (ite x4672 (x929 x1499) (ite x2548 (x364 x1499) (ite x1203 (x3213 x1499) (x929 x1499))))))))))
(define-fun x4713 ((x1499 x5128)) Int (ite x1614 (x929 x1499) (ite x3894 (x929 x1499) (ite x5336 (x929 x1499) (ite x5147 (x929 x1499) (ite x1796 (x929 x1499) (ite x4826 (x929 x1499) (ite x3972 (x929 x1499) (ite x1026 (x929 x1499) (ite x4250 (x929 x1499) (ite x433 (ite x4429 (x3664 x1499) (x3213 x1499)) (x929 x1499))))))))))))
(define-fun x3313 ((x1499 Int)) Int (ite (= 0 x1499) x4711 (x3223 x1499)))
(define-fun x6350 ((x1499 Int)) Int (ite (= x1499 128) x4711 (x2034 x1499)))
(define-fun x6346 ((x1499 x5128)) Int (ite (= x1499 x977) x3602 (x110 x1499)))
(define-fun x2985 ((x1499 x5128)) Int (ite x5187 (x110 x1499) (ite x2876 (x110 x1499) (ite x82 (x110 x1499) (ite x2125 (x6346 x1499) (x110 x1499))))))
(define-fun x1432 ((x1499 x5128)) Int (ite (= x1499 x6068) x1535 (x6346 x1499)))
(define-fun x1152 ((x1499 x5128)) Int (ite x5505 (x110 x1499) (ite x2467 (x110 x1499) (ite x2955 (x110 x1499) (ite x3720 (x110 x1499) (ite x907 (x110 x1499) (ite x1662 (x110 x1499) (ite x2096 (x110 x1499) (ite x886 (x110 x1499) (ite x6324 (x110 x1499) (ite x5790 (x110 x1499) (ite x4556 (x2985 x1499) (x1432 x1499)))))))))))))
(define-fun x381 ((x1499 x5128)) Int (ite x1549 (x1152 x1499) (ite x5692 (x110 x1499) (ite x590 (x110 x1499) (ite x4197 (x110 x1499) (x1152 x1499))))))
(define-fun x4936 ((x1499 x5128)) Int (ite (= x1499 x1233) x1130 (x110 x1499)))
(define-fun x3471 ((x1499 x5128)) Int (ite x5629 (x110 x1499) (ite x3953 (x110 x1499) (ite x234 (x110 x1499) (ite x3524 (x4936 x1499) (x110 x1499))))))
(define-fun x671 ((x1499 x5128)) Int (ite (= x1499 x4798) x2171 (x4936 x1499)))
(define-fun x2547 ((x1499 x5128)) Int (ite x3940 (x110 x1499) (ite x1355 (x110 x1499) (ite x3405 (x110 x1499) (ite x4218 (x110 x1499) (ite x1845 (x110 x1499) (ite x4844 (x110 x1499) (ite x1382 (x110 x1499) (ite x295 (x110 x1499) (ite x5130 (x110 x1499) (ite x1262 (x110 x1499) (ite x2224 (x3471 x1499) (x671 x1499)))))))))))))
(define-fun x3140 ((x1499 x5128)) Int (ite x5425 (x110 x1499) (ite x3160 (x110 x1499) (ite x2650 (x110 x1499) (x5933 x1499)))))
(define-fun x2630 ((x1499 x5128)) Int (ite x1113 (x110 x1499) (ite x1899 (x110 x1499) (ite x149 (x110 x1499) (ite x5170 (x110 x1499) (ite x5136 (x110 x1499) (ite x537 (x110 x1499) (ite x4966 (x110 x1499) (ite x4928 (x110 x1499) (ite x2480 (x110 x1499) (ite x4925 (x110 x1499) (ite x2589 (x3140 x1499) (x64 x1499)))))))))))))
(define-fun x5738 ((x1499 x5128)) Int (ite x6076 (x110 x1499) (ite x2513 (x110 x1499) (ite x6261 (x2547 x1499) (ite x622 (x110 x1499) (ite x1053 (x110 x1499) (ite x6202 (x110 x1499) (ite x4886 (x2630 x1499) (ite x867 (x110 x1499) (ite x5748 (x110 x1499) (ite x858 (x110 x1499) (ite x2673 (x110 x1499) (ite x6208 (x110 x1499) (ite x568 (x110 x1499) (ite x752 (x110 x1499) (ite x1797 (x110 x1499) (ite x1833 (x110 x1499) (ite x3309 (x110 x1499) (ite x2922 (x110 x1499) (ite x1772 (x110 x1499) (ite x363 (x2630 x1499) (ite x6051 (x110 x1499) (ite x111 (x110 x1499) (ite x2077 (x110 x1499) (ite x121 (x2547 x1499) (x110 x1499))))))))))))))))))))))))))
(define-fun x5775 ((x1499 x5128)) Int (ite x4085 (x2630 x1499) (x110 x1499)))
(define-fun x5803 ((x1499 x5128)) Int (ite x2450 (x5775 x1499) (x110 x1499)))
(define-fun x3724 ((x1499 x5128)) Int (ite x405 (x5803 x1499) (x2547 x1499)))
(define-fun x4025 ((x1499 x5128)) Int (ite x6004 (x3724 x1499) (x110 x1499)))
(define-fun x2608 ((x1499 x5128)) Int (ite x1704 (x110 x1499) (ite x6283 (ite x2000 (x381 x1499) (x1152 x1499)) (ite x2348 (x5738 x1499) (x4025 x1499)))))
(define-fun x3318 ((x1499 x5128)) Int (ite (= x1499 x454) x5057 (x2608 x1499)))
(define-fun x2732 ((x1499 x5128)) Int (ite x1909 (x2608 x1499) (ite x1253 (x2608 x1499) (ite x5022 (x2608 x1499) (ite x117 (x3318 x1499) (x2608 x1499))))))
(define-fun x3835 ((x1499 x5128)) Int (ite (= x1499 x3839) x70 (x3318 x1499)))
(define-fun x1412 ((x1499 x5128)) Int (ite x1614 (x2608 x1499) (ite x3894 (x2608 x1499) (ite x5336 (x2608 x1499) (ite x5147 (x2608 x1499) (ite x1796 (x2608 x1499) (ite x4826 (x2608 x1499) (ite x3972 (x2608 x1499) (ite x1026 (x2608 x1499) (ite x4250 (x2608 x1499) (ite x433 (x2608 x1499) (ite x1766 (x2732 x1499) (x3835 x1499)))))))))))))
(define-fun x1696 ((x1499 Int)) Int (ite (= 0 x1499) x914 (x3223 x1499)))
(define-fun x3322 ((x1499 Int)) Int (ite (= 128 x1499) x914 (x2034 x1499)))
(define-fun x1047 ((x1499 Int)) Int (ite (= 128 x1499) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x3964 x1499)))
(define-fun x760 ((x1499 Int)) Int (ite (= x1499 132) x4332 (x1047 x1499)))
(define-fun x1636 ((x1499 Int)) Int (ite (= x1499 128) x3467 (x760 x1499)))
(define-fun x4604 ((x1499 Int)) Int (ite (= x1499 128) x2705 (x760 x1499)))
(define-fun x1830 ((x1499 Int)) Int (ite (= 128 x1499) x2644 (x760 x1499)))
(define-fun x3687 ((x1499 Int)) Int (ite (= 128 x1499) x3988 (x760 x1499)))
(define-fun x3295 ((x1499 Int)) Int (ite (= x1499 128) x1249 (x760 x1499)))
(define-fun x676 ((x1499 Int)) Int (ite (= 128 x1499) x6163 (x760 x1499)))
(define-fun x5115 ((x1499 Int)) Int (ite (= x1499 128) x4071 (x760 x1499)))
(define-fun x698 ((x1499 Int)) Int (ite (= x1499 128) x276 (x760 x1499)))
(define-fun x4399 ((x1499 Int)) Int (ite (= x1499 128) x2817 (x760 x1499)))
(define-fun x2598 ((x1499 Int)) Int (ite (= 128 x1499) x4934 (x760 x1499)))
(define-fun x2057 ((x1499 Int)) Int (ite (= 128 x1499) x1941 (x760 x1499)))
(define-fun x6084 ((x1499 Int)) Int (ite x38 (ite x595 (x760 x1499) (x1636 x1499)) (ite x6204 (ite x5897 (x760 x1499) (x4604 x1499)) (ite x4602 (ite x3036 (x760 x1499) (x1830 x1499)) (ite x5432 (ite x2477 (x760 x1499) (x3687 x1499)) (ite x3606 (ite x5508 (x760 x1499) (x3295 x1499)) (ite x4031 (ite x1935 (x760 x1499) (x676 x1499)) (ite x5071 (ite x819 (x760 x1499) (x5115 x1499)) (ite x1496 (ite x5991 (x760 x1499) (x698 x1499)) (ite x4331 (ite x6296 (x760 x1499) (x4399 x1499)) (ite x5192 (ite x5327 (x760 x1499) (x2598 x1499)) (ite x3632 (x760 x1499) (x2057 x1499)))))))))))))
(define-fun x2427 ((x1499 Int)) Int (ite (= x1499 0) 1 (x5404 x1499)))
(define-fun x3826 ((x1499 Int)) Int (ite (and (<= 0 x1499) (> (+ 0 32) x1499)) (x2520 (+ (- x1499 0) 320)) (x5404 x1499)))
(define-fun x1607 ((x1499 Int)) Int (ite (= 128 x1499) x3740 (x3925 x1499)))
(define-fun x3466 ((x1499 Int)) Int (ite (= x1499 128) x1461 (x1607 x1499)))
(define-fun x5237 ((x1499 Int)) Int (ite (= 128 x1499) (ite true 1 0) (x3466 x1499)))
(define-fun x5852 ((x1499 Int)) Int (ite (= x1499 0) x2535 (x5404 x1499)))
(define-fun x880 ((x1499 Int)) Int (ite (= 128 x1499) x261 (x2831 x1499)))
(define-fun x2964 ((x1499 Int)) Int (ite (= 128 x1499) (ite true 1 0) (x880 x1499)))
(define-fun x3744 ((x1499 Int)) Int (ite (= x1499 0) x5002 (x5404 x1499)))
(define-fun x3333 ((x1499 Int)) Int (ite (= x1499 0) 1 (x5404 x1499)))
(define-fun x1533 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x5404 x1499)))
(define-fun x4538 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x5404 x1499)))
(define-fun x757 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x5404 x1499)))
(define-fun x471 ((x1499 Int)) Int (ite x2489 (ite x4845 (x2034 x1499) (x3430 x1499)) (ite x1515 (ite x5658 (x2034 x1499) (x185 x1499)) (ite x325 (ite x4918 (x2034 x1499) (x4738 x1499)) (ite x1293 (ite x408 (x2034 x1499) (x1134 x1499)) (ite x1334 (ite x1422 (x2034 x1499) (x5360 x1499)) (ite x2165 (ite x2399 (x2034 x1499) (x1956 x1499)) (ite x1863 (ite x113 (x2034 x1499) (x4528 x1499)) (ite x3559 (ite x4802 (x2034 x1499) (x4979 x1499)) (ite x270 (ite x1270 (x2034 x1499) (x1937 x1499)) (ite x3047 (ite x4102 (x2034 x1499) (x6350 x1499)) (ite x3258 (x2034 x1499) (x3322 x1499)))))))))))))
(define-fun x3161 ((x1499 Int)) Int (ite x1033 (ite x4121 (x3492 x1499) (x4569 x1499)) (ite x1370 (ite x5236 (x3492 x1499) (x5225 x1499)) (ite x673 (ite x4181 (x3492 x1499) (x2727 x1499)) (ite x2321 (ite x5980 (x3492 x1499) (x1094 x1499)) (ite x935 (ite x3357 (x3492 x1499) (x3046 x1499)) (ite x1978 (ite x5303 (x3492 x1499) (x3726 x1499)) (ite x3825 (ite x278 (x3492 x1499) (x108 x1499)) (ite x5845 (ite x6244 (x3492 x1499) (x147 x1499)) (ite x4732 (ite x3188 (x3492 x1499) (x1816 x1499)) (ite x1403 (ite x4055 (x3492 x1499) (x4051 x1499)) (ite x2002 (x3492 x1499) (x2645 x1499)))))))))))))
(define-fun x5243 ((x1499 Int)) Int (ite (= x1499 0) x3467 (x5661 x1499)))
(define-fun x3292 ((x1499 Int)) Int (ite (= x1499 0) x2705 (x5661 x1499)))
(define-fun x4257 ((x1499 Int)) Int (ite (= 0 x1499) x2644 (x5661 x1499)))
(define-fun x2947 ((x1499 Int)) Int (ite (= 0 x1499) x3988 (x5661 x1499)))
(define-fun x2927 ((x1499 Int)) Int (ite (= x1499 0) x1249 (x5661 x1499)))
(define-fun x2381 ((x1499 Int)) Int (ite (= x1499 0) x6163 (x5661 x1499)))
(define-fun x3412 ((x1499 Int)) Int (ite (= 0 x1499) x4071 (x5661 x1499)))
(define-fun x4730 ((x1499 Int)) Int (ite (= 0 x1499) x276 (x5661 x1499)))
(define-fun x2201 ((x1499 Int)) Int (ite (= 0 x1499) x2817 (x5661 x1499)))
(define-fun x84 ((x1499 Int)) Int (ite (= 0 x1499) x4934 (x5661 x1499)))
(define-fun x4870 ((x1499 Int)) Int (ite (= x1499 0) x1941 (x5661 x1499)))
(define-fun x1426 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x5404 x1499)))
(define-fun x4664 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x5404 x1499)))
(define-fun x5572 ((x1499 Int)) Int (ite (= x1499 0) 1 (x846 x1499)))
(define-fun x354 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x846 x1499)))
(define-fun x1044 ((x1499 Int)) Int (ite (= x1499 0) 1 (x2315 x1499)))
(define-fun x3783 ((x1499 Int)) Int (ite (= x1499 0) 1 (x2315 x1499)))
(define-fun x530 ((x1499 Int)) Int (ite x3304 (x823 x1499) (x4295 x1499)))
(define-fun x4317 ((x1499 Int)) Int (ite x4743 (x823 x1499) (x5576 x1499)))
(define-fun x5151 ((x1499 Int)) Int (ite (= 0 x1499) 1 (x823 x1499)))
(define-fun x5467 ((x1499 Int)) Int (ite x2114 (x823 x1499) (x5151 x1499)))
(define-fun x2004 ((x1499 Int)) Int (ite x1839 (x823 x1499) (x1179 x1499)))
(define-fun x3942 ((x1499 Int)) Int (ite x4574 (x823 x1499) (x1858 x1499)))
(define-fun x5575 ((x1499 Int)) Int (ite x2473 (x823 x1499) (x1735 x1499)))
(define-fun x2168 ((x1499 Int)) Int (ite x2620 (x823 x1499) (x2566 x1499)))
(define-fun x4208 ((x1499 Int)) Int (ite x2470 (x823 x1499) (x870 x1499)))
(define-fun x2537 ((x1499 Int)) Int (ite x3557 (x823 x1499) (x2677 x1499)))
(define-fun x1195 ((x1499 Int)) Int (ite (= x1499 0) 1 (x823 x1499)))
(define-fun x932 ((x1499 Int)) Int (ite x2224 (x823 x1499) (x1195 x1499)))
(define-fun x875 ((x1499 Int)) Int (ite x3940 (x823 x1499) (ite x1355 (x530 x1499) (ite x3405 (x4317 x1499) (ite x4218 (x5467 x1499) (ite x1845 (x2004 x1499) (ite x4844 (x3942 x1499) (ite x1382 (x5575 x1499) (ite x295 (x2168 x1499) (ite x5130 (x4208 x1499) (ite x1262 (x2537 x1499) (x932 x1499))))))))))))
(define-fun x2925 ((x1499 Int)) Int (ite x1513 (x1183 x1499) (x1007 x1499)))
(define-fun x2709 ((x1499 Int)) Int (ite x2542 (x1183 x1499) (x2155 x1499)))
(define-fun x2888 ((x1499 Int)) Int (ite x3067 (x1183 x1499) (x1611 x1499)))
(define-fun x3334 ((x1499 Int)) Int (ite x990 (x1183 x1499) (x5963 x1499)))
(define-fun x2571 ((x1499 Int)) Int (ite x3273 (x1183 x1499) (x4617 x1499)))
(define-fun x1455 ((x1499 Int)) Int (ite x4787 (x1183 x1499) (x4180 x1499)))
(define-fun x4786 ((x1499 Int)) Int (ite x1814 (x1183 x1499) (x213 x1499)))
(define-fun x88 ((x1499 Int)) Int (ite x2297 (x1183 x1499) (x1712 x1499)))
(define-fun x4445 ((x1499 Int)) Int (ite x2476 (x1183 x1499) (x3741 x1499)))
(define-fun x4252 ((x1499 Int)) Int (ite x2589 (x1183 x1499) (x539 x1499)))
(define-fun x3138 ((x1499 Int)) Int (ite x1113 (x1183 x1499) (ite x1899 (x2925 x1499) (ite x149 (x2709 x1499) (ite x5170 (x2888 x1499) (ite x5136 (x3334 x1499) (ite x537 (x2571 x1499) (ite x4966 (x1455 x1499) (ite x4928 (x4786 x1499) (ite x2480 (x88 x1499) (ite x4925 (x4445 x1499) (x4252 x1499))))))))))))
(define-fun x1278 ((x1499 Int)) Int (ite x3700 (x5298 x1499) (x2700 x1499)))
(define-fun x2804 ((x1499 Int)) Int (ite x3038 (x5298 x1499) (x5479 x1499)))
(define-fun x5361 ((x1499 Int)) Int (ite x6228 (x5298 x1499) (x1882 x1499)))
(define-fun x3749 ((x1499 Int)) Int (ite x601 (x5298 x1499) (x957 x1499)))
(define-fun x2528 ((x1499 Int)) Int (ite x2278 (x5298 x1499) (x3425 x1499)))
(define-fun x5049 ((x1499 Int)) Int (ite x3506 (x5298 x1499) (x6291 x1499)))
(define-fun x5149 ((x1499 Int)) Int (ite x1752 (x5298 x1499) (x3102 x1499)))
(define-fun x4965 ((x1499 Int)) Int (ite x4396 (x5298 x1499) (x617 x1499)))
(define-fun x1159 ((x1499 Int)) Int (ite x3670 (x5298 x1499) (x5484 x1499)))
(define-fun x4789 ((x1499 Int)) Int (ite x6086 (x5298 x1499) (x439 x1499)))
(define-fun x45 ((x1499 Int)) Int (ite x4443 (x5298 x1499) (ite x1214 (x1278 x1499) (ite x4502 (x2804 x1499) (ite x5763 (x5361 x1499) (ite x2001 (x3749 x1499) (ite x2119 (x2528 x1499) (ite x1880 (x5049 x1499) (ite x2632 (x5149 x1499) (ite x551 (x4965 x1499) (ite x1052 (x1159 x1499) (x4789 x1499))))))))))))
(define-fun x5482 ((x1499 Int)) Int (ite (= x1499 0) 1 (x1307 x1499)))
(define-fun x294 ((x1499 Int)) Int (ite (= x1499 0) 1 (x1307 x1499)))
(define-fun x3960 ((x890 Int) (x1160 Int) (x1967 Int) (x3933 Int)) Bool (=> (and (>= x3933 x1160) (<= 0 x890) (>= x1160 0) (<= x890 x1967)) (<= (x423 x890 x1160) (x423 x1967 x3933))))
(define-fun x1957 ((x890 Int) (x1160 Int) (x1967 Int) (x3933 Int)) Bool (=> (= x1967 x890) (= (x423 x890 (- x1160 x3933)) (- (x423 x890 x1160) (x423 x1967 x3933)))))
(define-fun x3903 ((x890 Int)) Bool (=> (and (> x890 10000) (not (= x890 20853193852723734048814770637610870652489083209607696777694672748161462697984)) (not (= x890 3835264453)) (not (= x890 3674237557)) (not (= x890 3642135687)) (not (= 1510251120 x890)) (not (= 97057840296441966410330255902201960138893160036366920885407767449525406400512 x890)) (not (= 2512374353 x890)) (not (= 953495055 x890)) (not (= x890 903454517)) (not (= x890 3171951664)) (not (= x890 4238056678808933066457772256406219440718756300954938350892797929791311314944)) (not (= 3824031246 x890)) (not (= 82641394424300342035733052706735002277943222088490025348945809093694544936960 x890)) (not (= 157198259 x890)) (not (= 2644395612 x890)) (not (= 1901074598 x890)) (not (= x890 404098525)) (not (= x890 3088143374)) (not (= 961581905 x890)) (not (= x890 117300739)) (not (= 3714247998 x890)) (not (= 649617121 x890)) (not (= x890 1461501637330902918203684832716283019655932542975)) (not (= 1484578334 x890)) (not (= x890 2835717307)) (not (= x890 3573918927)) (not (= x890 2681229421)) (not (= x890 1431022396)) (not (= x890 716570693)) (not (= x890 2757214935)) (not (= 1461501637330902918203684832716283019655932542976 x890)) (not (= x890 3590908516)) (not (= 1117154408 x890)) (not (= x890 122929932)) (not (= x890 445207142)) (not (= x890 3600075382)) (not (= x890 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x890 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x890 100135927934651036221761091863598459016256155049858187411712977198722809069568)) (not (= x890 1496673372)) (not (= x890 1889567281)) (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x890)) (not (= 1086394137 x890)) (not (= x890 1553423035)) (not (= x890 599290589)) (not (= 3065339685 x890)) (not (= 3504541104 x890)) (not (= 773487949 x890)) (not (= 669136355 x890)) (not (= x890 2127478272)) (not (= 826074471 x890)) (not (= x890 248222656)) (not (= 2542517689 x890)) (not (= 1545185628 x890)) (not (= 2987494029 x890)) (not (= 543189872 x890)) (not (= 3329172565 x890)) (not (= 1432194747 x890)) (not (= 1875902277 x890)) (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x890)) (not (= x890 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x890 2514000705))) (not ((_ is x5097) (x1567 x890)))))
(assert (= x2165 (or x2399 x4884)))
(assert (= x6162 (and (not x686) x5029)))
(assert (x447 x351))
(assert (x447 x285))
(assert (x729 x4535))
(assert (x447 x1918))
(assert (x447 x5485))
(assert (x447 x6330))
(assert (x447 x1823))
(assert (=> (>= 10000 x3305) (= (x1567 x3305) (x5097 x3305))))
(assert (x447 x4157))
(assert (x447 x5456))
(assert (= (x5097 2512374353) (x1567 2512374353)))
(assert (= 2757214935 (x2338 (x5097 2757214935))))
(assert (x3903 x5751))
(assert (x5592 (- x3043 x2378)))
(assert (x447 x948))
(assert (x447 x510))
(assert (= 1461501637330902918203684832716283019655932542975 (x2338 (x5097 1461501637330902918203684832716283019655932542975))))
(assert (x447 x2781))
(assert (=> (<= x5347 10000) (= (x5097 x5347) (x1567 x5347))))
(assert (= x1297 (and x3118 x3846)))
(assert (x1990 x2519))
(assert (= (and x2648 (not x782)) x194))
(assert (=> (<= x2308 10000) (= (x1567 x2308) (x5097 x2308))))
(assert (x447 x2836))
(assert (= x5189 (and x2720 (not x5323))))
(assert (x447 x5615))
(assert (x447 x788))
(assert (= x3919 (or (and (not x5810) x3752) x1036)))
(assert (= x1033 (or x4195 x4121)))
(assert (= (or (and (not x4803) x2385) (and x1322 x2152)) x5658))
(assert (x5592 (- x2378 x4506)))
(assert (x447 x955))
(assert (x447 x5253))
(assert (= (and x4513 x801) x4324))
(assert (x1957 x3043 x4506 x3043 x4398))
(assert (x447 x5676))
(assert (= x270 (or x1270 x1357)))
(assert (= x5412 (and (not x5626) x2919)))
(assert (= x5845 (or x2794 x6244)))
(assert (= x4075 (and x585 x1960)))
(assert (x447 x5741))
(assert (= (=> (and (= x1077 true) (or (not x1077) x1077)) x5393) x1071))
(assert (= (and x3276 x458) x1720))
(assert (= (or x4665 x5673 x5271 x4877 x5812 x4514 x4735 x707 x4585 x2647 x2975 x5213 x249) x638))
(assert (x3960 x4954 x611 x6080 x3043))
(assert (=> (<= x5973 10000) (= (x5097 x5973) (x1567 x5973))))
(assert (x447 x2624))
(assert (= (and x2595 x640) x4484))
(assert (= x6161 (or x3374 x171 x4007 x5753 x1056 x1126)))
(assert (= (and (not x3553) x1531) x4255))
(assert (= (and x1520 x4275) x396))
(assert (x1957 x3043 x2378 x3043 x4506))
(assert (= (x2338 (x1567 x1918)) x1918))
(assert (x447 x1492))
(assert (= x5215 (and x2788 x5976)))
(assert (= x1667 (and x4899 x5520)))
(assert (= x587 (and x1635 x98)))
(assert (x447 x3126))
(assert (x447 x1952))
(assert (= (and x319 x927) x568))
(assert (x447 x2711))
(assert (x447 x4772))
(assert (x447 x429))
(assert (x1990 x3905))
(assert (= (or x836 x1814) x4928))
(assert (= x1845 (or x3316 x1839)))
(assert (x447 x2538))
(assert (x3903 x840))
(assert (x447 x1902))
(assert (=> (<= x1282 10000) (= (x5097 x1282) (x1567 x1282))))
(assert (x447 x6096))
(assert (=> (<= x604 10000) (= (x5097 x604) (x1567 x604))))
(assert (x2992 x4506 (- x3043 x611)))
(assert (x447 x2171))
(assert (x447 x3786))
(assert (x447 x555))
(assert (= x3858 (and (not x5858) x1500)))
(assert (= x4659 (and x2759 (not x3929))))
(assert (x2992 x3043 (- x3216 x611)))
(assert (= (and x410 (not x189)) x4761))
(assert (= (and (not x600) x146) x3447))
(assert (= (and x6209 (not x4256)) x1617))
(assert (x447 x5326))
(assert (= (or x1917 x198) x4474))
(assert (x447 x3936))
(assert (x3903 x5923))
(assert (= x6171 (and x6203 (not x2780))))
(assert (= x1569 (x2338 (x1567 x1569))))
(assert (x447 x5580))
(assert (x3903 x2020))
(assert (= (and (not x3463) x5321) x3587))
(assert (x1990 x235))
(assert (= (and x1251 x3063) x3085))
(assert (x447 x5668))
(assert (x447 x4221))
(assert (= (or x2310 x4429) x433))
(assert (x447 x3791))
(assert (x54 x2580))
(assert (= x2264 (and x5776 x3109)))
(assert (= (and (not x247) x2752) x993))
(assert (= x395 (and x5552 (not x2210))))
(assert (x447 x4609))
(assert (= (and x847 x3951) x58))
(assert (x447 x2695))
(assert (x447 x459))
(assert (= (and x3211 x60) x2179))
(assert (x447 x1369))
(assert (x3903 x5973))
(assert (= (or x1431 x4917) x224))
(assert (x447 x3428))
(assert (x447 x4495))
(assert (= x5213 (and x5912 x4530)))
(assert (= (and x3640 x2656) x427))
(assert (= x328 (x2338 (x1567 x328))))
(assert (x1957 x2378 x3043 x3043 x4506))
(assert (= (and x150 x218) x2991))
(assert (= (x2338 (x1567 x633)) x633))
(assert (x447 x3136))
(assert (x447 x4403))
(assert (x447 x1018))
(assert (x447 x6366))
(assert (x447 x2652))
(assert (x552 x1308))
(assert (x447 x715))
(assert (= (and x4364 x4385) x1603))
(assert (x447 x186))
(assert (= (x2338 (x1567 x3184)) x3184))
(assert (x1990 x421))
(assert (x447 x2869))
(assert (= x1703 (and x46 (not x6031))))
(assert (x447 x2389))
(assert (x3903 x4081))
(assert (= x6259 (and x3177 (not x5601))))
(assert (x3903 x3465))
(assert (= 3504541104 (x2338 (x5097 3504541104))))
(assert (= (and (not x960) x194) x1164))
(assert (= x5762 (and x5590 (not x1600))))
(assert (x447 x1461))
(assert (= x25 (and x6017 x1647)))
(assert (x447 x1085))
(assert (x1990 x3401))
(assert (= (and (not x5457) x3434) x5308))
(assert (=> (>= 10000 x1330) (= (x5097 x1330) (x1567 x1330))))
(assert (x3960 x4506 x3043 x6080 x3043))
(assert (= (and x5466 x2134) x1070))
(assert (x447 x5468))
(assert (= x4278 (and (=> x3205 x2951) (=> (and (not x3205) (and (= x2729 0) (= (x476 (x1567 x3881) x280 0) x119) (= x280 (x476 (x1567 x717) (x5097 5) 0)) (= 1 x5740))) x603))))
(assert (x447 x5906))
(assert (x447 x2963))
(assert (x1957 x3216 x3043 x3043 x4398))
(assert (= x2673 (and (not x1398) x524)))
(assert (x447 x419))
(assert (x447 x1132))
(assert (= (and x2197 (not x4170)) x5324))
(assert (x447 x4125))
(assert (x447 x1017))
(assert (x447 x3246))
(assert (x447 x2694))
(assert (x447 x2665))
(assert (= x2360 (and (not x991) x1920)))
(assert (x447 x2574))
(assert (x447 x1192))
(assert (x1957 x2378 x3043 x4954 x611))
(assert (x447 x1329))
(assert (x447 x2914))
(assert (= (and x1185 x6120) x2527))
(assert (x447 x5319))
(assert (x447 x4692))
(assert (= x1243 (and x781 (not x4946))))
(assert (= (or x5290 x1620 x1470 x2380 x3967 x563 x1684 x5947 x5276 x4696 x2216 x1546 x5821 x2462 x1475 x3777 x3908 x3423) x4379))
(assert (x447 x449))
(assert (= x3464 (and x3433 (not x3830))))
(assert (x447 x3702))
(assert (= x4606 (and (not x2809) x34)))
(assert (x447 x3906))
(assert (x447 x5353))
(assert (=> (>= 10000 x4380) (= (x5097 x4380) (x1567 x4380))))
(assert (= x1428 (and x1164 x1872)))
(assert (= (and x183 (not x5637)) x3001))
(assert (x447 x3561))
(assert (= (and x3298 (not x5780)) x101))
(assert (= x5294 (and (not x1261) x2079)))
(assert (x1990 x6178))
(assert (= x2278 (or (and (not x4065) x987) (and x1030 x3505))))
(assert (= x2794 (and x1985 x4640)))
(assert (x447 x1741))
(assert (= x953 (and (not x1637) x4339)))
(assert (x3960 x6080 x3043 x3216 x3043))
(assert (= (x2338 (x1567 x3930)) x3930))
(assert (= x2147 (x2338 (x1567 x2147))))
(assert (= (x5097 716570693) (x1567 716570693)))
(assert (x54 x4687))
(assert (= x1690 (or (and x2789 (not x2246)) x5997)))
(assert (= (and x1013 x4134) x855))
(assert (= (and (not x4409) x3649) x1592))
(assert (= x604 (x2338 (x1567 x604))))
(assert (x447 x3574))
(assert (and (x5609 x1901 32) (x4601 x1901 32) (x301 x1901 32) (=> (> 32 0) (= (+ (x474 x1901 32) (* (x1849 x1901 32) 32)) x1901))))
(assert (= x4188 (=> (and (= 0 x1004) (= x4449 x715)) x4315)))
(assert (x447 x593))
(assert (= x5292 (=> (and (= x3399 x727) (= x2676 x2418)) x1529)))
(assert (x447 x4216))
(assert (x447 x5740))
(assert (= (and x3272 x1938) x4090))
(assert (= x248 (and (not x700) x3331)))
(assert (x1957 x3043 x4398 x3043 x3216))
(assert (x447 x4996))
(assert (= x3902 (=> (and (= x5622 x5054) (= x1352 x4072)) x162)))
(assert (x5592 (- x4506 x6080)))
(assert (= x3154 (and x5659 x3107)))
(assert (x447 x5973))
(assert (= x5849 (=> (and (= x715 x3343) (= 0 x2662)) x4981)))
(assert (x447 x5394))
(assert (= x1023 (=> (and (= x1747 x2382) (= x2099 x5154)) x2568)))
(assert (x447 x4869))
(assert (x447 x761))
(assert (x447 x544))
(assert (=> (<= x3735 10000) (= (x5097 x3735) (x1567 x3735))))
(assert (= x3935 (and (not x2031) x2078)))
(assert (x447 x3153))
(assert (x447 x1643))
(assert (= x3383 (and x3180 (not x2092))))
(assert (= x569 (and (not x783) x4176)))
(assert (= x4933 (and x2610 x3181)))
(assert (= x249 (and x1703 x4191)))
(assert (x447 x2884))
(assert (= (x2338 (x1567 x3141)) x3141))
(assert (= (and x3051 (not x5511)) x136))
(assert (= (or (and x4600 x1139) (and (not x3823) x558)) x408))
(assert (= x2883 (and x4769 (not x4004))))
(assert (= (and x6243 x457) x723))
(assert (x5592 (- x4398 x4954)))
(assert (= x1165 (and x4448 x4716)))
(assert (= (and x130 x4990) x1543))
(assert (x447 x2877))
(assert (x447 x661))
(assert (= x2465 (and x4485 x6224)))
(assert (= x1923 (or (and (not x1931) x5426) (and x1145 x1834))))
(assert (x447 x3081))
(assert (= x5029 (and (not x5607) x5228)))
(assert (= (or x2375 x5444) x6323))
(assert (= x4261 (and (not x2597) x1603)))
(assert (x447 x21))
(assert (= (=> (and (= x5110 x2676) (= x1885 x3399)) x1529) x1991))
(assert (= x907 (or x5942 x1054)))
(assert (x447 x1911))
(assert (x447 x1487))
(assert (x447 x5627))
(assert (x3903 x2417))
(assert (x447 x4733))
(assert (= x4091 (=> (and (= x2681 x5853) (= x337 x4290)) x6285)))
(assert (x1957 x3216 x3043 x3043 x2378))
(assert (= x3627 (=> (and (= x4201 x5530) (= x5824 x4437)) x342)))
(assert (= x1072 (and (not x6130) x895)))
(assert (x447 x5549))
(assert (x552 x273))
(assert (= x2133 (and x2567 x4728)))
(assert (x447 x2015))
(assert (x447 x3399))
(assert (= x5170 (or x3067 x5732)))
(assert (= x3546 (=> (and (= 0 x2151) (= x3021 x6277)) x5500)))
(assert (x447 x4292))
(assert (x447 x1385))
(assert (= (and x1463 x3597) x484))
(assert (x447 x516))
(assert (x447 x4395))
(assert (x447 x4245))
(assert (= (and x4610 x5672) x946))
(assert (x2992 x4954 x611))
(assert (= (and x3692 (not x4070)) x6088))
(assert (x5592 (- x4954 x4398)))
(assert (x1957 x611 x4954 x6080 x3043))
(assert (= x2444 (and x4364 (not x4385))))
(assert (x447 x528))
(assert (= (and x5475 x1155) x949))
(assert (x447 x1762))
(assert (x447 x4258))
(assert (= (and x2281 (not x1421)) x1909))
(assert (x447 x2404))
(assert (= (and x5339 x2725) x3789))
(assert (x447 x2097))
(assert (x447 x3679))
(assert (= (and (not x3556) x2200) x126))
(assert (x447 x1908))
(assert (= x3452 (and x3773 (not x2292))))
(assert (= x6285 (=> (and (or x5827 (not x5827)) (= x5827 (= 0 x4290))) x5023)))
(assert (= (and x2824 x5126) x4415))
(assert (= (and x137 x874) x4902))
(assert (x447 x4688))
(assert (= x5725 (and x1691 x5229)))
(assert (x447 x2960))
(assert (x2118 x4957 x6178))
(assert (=> (<= x2846 10000) (= (x5097 x2846) (x1567 x2846))))
(assert (x447 x5727))
(assert (= x3551 (and x1156 x6271)))
(assert (= x3755 (and (not x2905) x564)))
(assert (x447 x785))
(assert (x447 x5989))
(assert (= x3762 (and x3787 x5098)))
(assert (= (and x839 (not x4865)) x728))
(assert (= (and x3505 (not x1030)) x987))
(assert (x447 x5446))
(assert (x447 x4405))
(assert (x2992 x3043 (- x6080 x611)))
(assert (= x4879 (=> (and (= x5833 x1983) (= x2550 x5934)) x246)))
(assert (x54 x1901))
(assert (=> (>= 10000 x5205) (= (x1567 x5205) (x5097 x5205))))
(assert (= x2932 (and x6137 (not x1572))))
(assert (= x2760 (and x5822 x4306)))
(assert (x2992 x611 (- x4954 x3216)))
(assert (= x825 (and x57 x329)))
(assert (= x3303 (and x5308 (not x2373))))
(assert (x447 x2071))
(assert (x447 x3481))
(assert (x447 x1769))
(assert (= (=> (and (= 0 x5114) (= x2761 x3679)) x2606) x3096))
(assert (x447 x3693))
(assert (= x3569 (and x1111 x4631)))
(assert (= (and (not x3127) x1893) x5693))
(assert (= (x2338 (x1567 x2091)) x2091))
(assert (x5592 (- x4506 x611)))
(assert (x1957 x3043 x4506 x4398 x3043))
(assert (= (and x2923 (not x4652)) x3272))
(assert (= x2764 (x2338 (x1567 x2764))))
(assert (= x2876 (and (not x5106) x495)))
(assert (x447 x4123))
(assert (= (and x2452 x3519) x51))
(assert (= (=> (and (= x1004 x2550) (= x4449 x1983)) x246) x4315))
(assert (= (x2338 (x1567 x4380)) x4380))
(assert (x447 x127))
(assert (= x1525 (=> (and (= x4072 x2900) (= x3509 x5054)) x162)))
(assert (= (=> (and (= x679 x4644) (= x5685 x2943)) x4298) x4963))
(assert (= (and (not x2295) x3656) x35))
(assert (x447 x684))
(assert (= 1901074598 (x2338 (x5097 1901074598))))
(assert (x3903 x1383))
(assert (= (and (not x4372) x2313) x2214))
(assert (= x255 (and x2660 x1591)))
(assert (= x46 (and (not x4898) x2440)))
(assert (= (or (and x5787 x2355) (and (not x3698) x4167) (and x492 (not x3794))) x278))
(assert (x447 x6035))
(assert (x447 x4537))
(assert (x447 x2277))
(assert (= (x5097 3504541104) (x1567 3504541104)))
(assert (= x5102 (and x4324 (not x1755))))
(assert (= x4332 (x2338 (x1567 x4332))))
(assert (x447 x5003))
(assert (x447 x3978))
(assert (= x117 (and x5459 x2461)))
(assert (x1957 x3043 x2378 x4506 x3043))
(assert (x447 x717))
(assert (x5592 (- x611 x4398)))
(assert (x447 x5269))
(assert (=> (>= 10000 x1887) (= (x5097 x1887) (x1567 x1887))))
(assert (=> (>= 10000 x3233) (= (x1567 x3233) (x5097 x3233))))
(assert (= (x1567 100135927934651036221761091863598459016256155049858187411712977198722809069568) (x5097 100135927934651036221761091863598459016256155049858187411712977198722809069568)))
(assert (x447 x1729))
(assert (= (x5097 3835264453) (x1567 3835264453)))
(assert (= 961581905 (x2338 (x5097 961581905))))
(assert (x1957 x3216 x3043 x3043 x4506))
(assert (= x5587 (and x3156 x1078)))
(assert (x447 x3983))
(assert (= x5307 (and (not x4739) x920)))
(assert (= x6152 (and x3913 (not x1582))))
(assert (=> (>= 10000 x1197) (= (x5097 x1197) (x1567 x1197))))
(assert (x447 x2193))
(assert (x447 x1377))
(assert (=> (>= 10000 x3938) (= (x1567 x3938) (x5097 x3938))))
(assert (=> (>= 10000 x3564) (= (x5097 x3564) (x1567 x3564))))
(assert (x447 x2005))
(assert (x447 x2761))
(assert (x447 x1676))
(assert (= (=> (and (= x3399 x2729) (= x2676 x5740)) x1529) x603))
(assert (= (and x3433 x3830) x5864))
(assert (= (x2338 (x1567 x4081)) x4081))
(assert (= x4210 (and x5406 x3306)))
(assert (= (and x4611 (not x4377)) x5338))
(assert (= x5130 (or x4277 x2470)))
(assert (x447 x3084))
(assert (x447 x5784))
(assert (x447 x277))
(assert (= x799 (or x5430 x542)))
(assert (x447 x5123))
(assert (x54 x1823))
(assert (x447 x5463))
(assert (= (and x1 x1001) x3034))
(assert (x54 x1477))
(assert (x447 x2378))
(assert (x447 x2326))
(assert (x447 x5546))
(assert (x2992 x4954 (- x611 x4506)))
(assert (= x1270 (or (and x2679 x4387) (and (not x1518) x3593))))
(assert (x447 x5487))
(assert (= (and x3278 x608) x6202))
(assert (= x737 (and (not x3205) x2037)))
(assert (= (or x2214 x3814) x1796))
(assert (= x5684 (and x5240 x2840)))
(assert (= (and x782 x2648) x752))
(assert (x3903 x1918))
(assert (= (and x6162 x2314) x4792))
(assert (= x3996 (and x5311 x3475)))
(assert (= (and (not x4010) x1277) x5271))
(assert (x447 x2209))
(assert (= x1215 (and x4768 x3190)))
(assert (x3903 x3473))
(assert (x2992 x4398 (- x3043 x3216)))
(assert (= (=> (and (= x6359 x5054) (= x4072 x413)) x162) x2275))
(assert (x3903 x3994))
(assert (x447 x5988))
(assert (= (and x5538 x101) x1819))
(assert (x447 x1236))
(assert (x447 x5620))
(assert (= 1496673372 (x2338 (x5097 1496673372))))
(assert (x1990 x3090))
(assert (and (x5609 x3064 256) (x4601 x3064 256) (x301 x3064 256) (=> (> 256 0) (= (+ (x474 x3064 256) (* (x1849 x3064 256) 256)) x3064))))
(assert (= x2940 (and (not x5134) x4731)))
(assert (x447 x4780))
(assert (x447 x1724))
(assert (x447 x196))
(assert (= (x1567 248222656) (x5097 248222656)))
(assert (= x5680 (=> (and (= x6043 (> x4629 x368)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x368) (>= x368 0) (= x677 (x476 (x1567 x2628) (x5097 1) 0)) (= (x4547 x677) x368)) (and (=> x6043 x5800) (=> (and (and (<= x1354 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x399 (x476 (x1567 x411) (x5097 1) 0)) (= (x2879 x399) x1354) (= (< x3254 x1354) x5358) (= (x980 (- x368 x4629)) x2739) (= x3254 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4629))) (<= 0 x1354)) (not x6043)) (and (=> (and (and (= 32 x2681) (= (x4937 (+ x1354 x4629)) x4120) (= 1 x337)) (not x5358)) x4091) (=> x5358 x5800)))))))
(assert (= (x1567 543189872) (x5097 543189872)))
(assert (= (=> (and (= x5140 x715) (= 0 x5865)) x591) x1014))
(assert (x3903 x1556))
(assert (= (and x2932 (not x1373)) x5126))
(assert (x447 x3658))
(assert (= (or (and (not x264) x3098) (and (not x5721) x768) (and x533 x1761)) x5980))
(assert (x447 x604))
(assert (= (and x1652 x3080) x1568))
(assert (x447 x1259))
(assert (x5592 x3043))
(assert (= (and x5108 x5190) x1316))
(assert (= (and x1516 (not x3445)) x188))
(assert (= x2104 (or x4533 x3497)))
(assert (x447 x5524))
(assert (x1990 x4687))
(assert (x447 x3379))
(assert (= x3243 (and x1193 (not x5127))))
(assert (x3960 x3216 x3043 x2378 x3043))
(assert (x447 x4490))
(assert (x447 x5036))
(assert (= (x2338 (x1567 x3634)) x3634))
(assert (x2992 x4398 (- x3043 x611)))
(assert (x447 x4060))
(assert (= x5402 (and x1413 x5704)))
(assert (x447 x4286))
(assert (x447 x1986))
(assert (x447 x3573))
(assert (= x6209 (and x5539 (not x1855))))
(assert (= (and x3279 (not x2225)) x2319))
(assert (x447 x3568))
(assert (= (and x2798 (not x562)) x2322))
(assert (x447 x1469))
(assert (= (and x148 x1792) x2415))
(assert (x447 x3009))
(assert (= (and x395 (not x1016)) x4992))
(assert (= x4197 (and x138 x5964)))
(assert (= (and x1311 (not x5746)) x4194))
(assert (x447 x420))
(assert (x447 x4330))
(assert (= (x5097 1496673372) (x1567 1496673372)))
(assert (x54 x5600))
(assert (x447 x4676))
(assert (x447 x4629))
(assert (x2992 x3043 (- x3216 x4954)))
(assert (= (and x3644 x4363) x967))
(assert (x54 x312))
(assert (x447 x4553))
(assert (x447 x5350))
(assert (x447 x3642))
(assert (x447 x2682))
(assert (= (and (not x1208) x3241) x130))
(assert (x447 x315))
(assert (x447 x6097))
(assert (x447 x3393))
(assert (= (and x5157 x5955) x3395))
(assert (x54 x778))
(assert (= x173 (and x4176 x783)))
(assert (= (and x5590 x1600) x3487))
(assert (and (x3768 x5614 10000) (x1349 x5614 10000) (=> (and (< 0 x5614) (< 0 10000)) (and (<= (* 10000 (x1849 x5614 10000)) x5614) (< (- x5614 10000) (* 10000 (x1849 x5614 10000))))) (x204 x5614 10000) (x2408 x5614 10000)))
(assert (= (and x4993 (not x5490)) x5425))
(assert (x5592 (- x4954 x2378)))
(assert (= x3917 (x2338 (x1567 x3917))))
(assert (= x5732 (and x860 (not x1371))))
(assert (= (x2338 (x1567 x3950)) x3950))
(assert (x447 x3502))
(assert (x447 x3840))
(assert (x447 x3713))
(assert (x447 x3019))
(assert (= (and x721 x6146) x4641))
(assert (x447 x4489))
(assert (= x3047 (or x4102 x3069)))
(assert (= x2509 (and x4726 x5587)))
(assert (= x2216 (and x5900 x4425)))
(assert (x447 x3215))
(assert (= (and x1770 x5665) x183))
(assert (= x6029 (and x4896 (not x6250))))
(assert (= (x2338 (x1567 x3994)) x3994))
(assert (x447 x3678))
(assert (x447 x4444))
(assert (x447 x1993))
(assert (= x4694 (=> (and (= x6222 x5853) (= x4290 x5557)) x6285)))
(assert (x447 x2915))
(assert (= x3695 (and (not x5776) x3109)))
(assert (= x310 (=> (and (= x2215 x4395) (= x2209 0)) x5133)))
(assert (x447 x6266))
(assert (x1957 x3216 x3043 x4954 x611))
(assert (x1990 x4535))
(assert (x5592 (- x4506 x4398)))
(assert (= x795 (and x4408 (not x887))))
(assert (x447 x5523))
(assert (x447 x2734))
(assert (= (and x3537 (not x3217)) x2778))
(assert (x447 x3974))
(assert (x447 x2521))
(assert (x447 x2074))
(assert (x447 x4951))
(assert (x447 x3186))
(assert (= (and (not x4128) x245) x4896))
(assert (x447 x5256))
(assert (x447 x3151))
(assert (x447 x1706))
(assert (x447 x1441))
(assert (x447 x5506))
(assert (= x5621 (x2338 (x1567 x5621))))
(assert (= (or x4124 x1978 x3825 x1370 x4732 x1403 x2321 x5845 x673 x1033 x935) x1994))
(assert (x3960 x6080 x3043 x4506 x3043))
(assert (x447 x4470))
(assert (x447 x811))
(assert (= (and x287 x124) x5828))
(assert (x447 x4276))
(assert (= (and x5433 x1452) x6249))
(assert (= x867 (and x4217 x5818)))
(assert (x5383 x5614))
(assert (= x4554 (=> (and (= x3870 x6042) (= x5006 x2554)) x3512)))
(assert (=> (>= 10000 x4081) (= (x5097 x4081) (x1567 x4081))))
(assert (x447 x3918))
(assert (= (and x85 (not x3529)) x5517))
(assert (= x4203 (and x2613 x3139)))
(assert (= x735 (and x3971 x2906)))
(assert (x5592 (- x4506 x3216)))
(assert (x447 x2690))
(assert (x447 x2451))
(assert (= x208 (and x3738 x2995)))
(assert (x1990 x5066))
(assert (x447 x4843))
(assert (= (=> (and (< 0 x1163) (not (= 1432194747 x5191)) (not (= 953495055 x5191)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1983) (and (> 32 x1983) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1983))))) (>= 1461501637330902918203684832716283019655932542975 x1445) (= x5191 1496673372) (= x3179 (x2549 (x1567 x1445))) (not (= x3179 0)) (>= x1445 0) (not (= 0 x2550)) (= x6055 (= x2417 x1445)) (= x1163 (x2549 (x1567 x4332))) (not (> 953495055 x5191)) (< x1445 1461501637330902918203684832716283019655932542976) (< x5191 2512374353) (= 128 x1745)) (and (=> (and (= (= x5713 x1445) x1963) (not x6055)) (and (=> (and (= (= x1445 x5547) x5156) (not x1963)) (and (=> (and (= x4460 (= x1445 x4332)) (not x5156)) (and (=> (and x4460 (and (not (> 953495055 x5262)) (not (= 1432194747 x5262)) (= x4076 36) (< x5262 2512374353) (not (= x5262 953495055)) (not (< x4076 4)) (< 0 x4497) (not (= x5262 1496673372)) (= x5262 1889567281) (= (or (and (= (<= x5910 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x5910)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5910)) x1139) (= x4332 x4307) (= x710 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x4497 (x2549 (x1567 x4332))) (= (x980 (- x4076 4)) x5910) (= x4076 36))) (and (=> (and (and (= x5082 x4307) (= x3823 (= x4307 x4332))) (not x1139)) (and (=> (and x3823 (and (= (x37 x3976) x3422) (= x5239 1) (<= 0 x3422) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3422) (= x3976 (x476 (x1567 x4307) (x5097 1) 0)) (= 32 x2008))) x326) (=> (not x3823) x1586))) (=> x1139 x1586))) (=> (and (not x4460) (= (= x2020 x1445) x1770)) (and (=> (and (not x1770) (= x699 (= x3267 x1445))) (and (=> (and x699 (and (not (< x4447 826074471)) (= x612 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x4970 36) (> x1188 0) (not (< x4970 4)) (not (= x4447 826074471)) (= x6035 (x980 (- x4970 4))) (= (or (> x6035 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x6035 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x6035 32))) x2892) (= 36 x4970) (= 1889567281 x4447) (= x4332 x921) (= x1188 (x2549 (x1567 x3267))))) (and (=> (and (not x2892) (and (= x193 (= x4332 x921)) (= x498 x921))) (and (=> (not x193) x4517) (=> (and (and (= x4588 (x2852 x908)) (<= 0 x4588) (= x285 1) (= 32 x5531) (= (x476 (x1567 x921) (x5097 1) 0) x908) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4588)) x193) x3208))) (=> x2892 x4517))) (=> (and (not x699) (= (= x2280 x1445) x773)) (and (=> (and (and (not (> 826074471 x621)) (> x1206 0) (= (x2549 (x1567 x2280)) x1206) (= x3187 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x2690 36) (= x2690 36) (not (= x621 826074471)) (not (> 4 x2690)) (= x2092 (or (and (> 32 x2255) (= (<= x2255 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2255))) (= x2255 (x980 (- x2690 4))) (= 1889567281 x621) (= x4332 x3233)) x773) (and (=> (and (not x2092) (and (= x3378 x3233) (= x5273 (= x4332 x3233)))) (and (=> (and (and (= (x476 (x1567 x3233) (x5097 1) 0) x23) (= 1 x3995) (= (x5641 x23) x1171) (= 32 x271) (<= x1171 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1171)) x5273) x1100) (=> (not x5273) x2617))) (=> x2092 x2617))) (=> (and (= (= x3247 x1445) x1637) (not x773)) (and (=> (and (= (= x5771 x1445) x4982) (not x1637)) (and (=> (and (not x4982) (= x1059 (= x1445 x462))) (and (=> (and x1059 (and (= x5476 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x4332 x3141) (= 36 x4512) (not (< x1589 826074471)) (= x1589 1889567281) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4171) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4171) true) (< x4171 32))) x212) (= 36 x4512) (= (x2549 (x1567 x462)) x4271) (not (= x1589 826074471)) (> x4271 0) (= (x980 (- x4512 4)) x4171) (not (> 4 x4512)))) (and (=> x212 x6186) (=> (and (not x212) (and (= x4698 x3141) (= x663 (= x4332 x3141)))) (and (=> (and x663 (and (= 1 x2343) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4711) (<= 0 x4711) (= x3618 32) (= x4711 (x4713 x5986)) (= (x476 (x1567 x3141) (x5097 1) 0) x5986))) x725) (=> (not x663) x6186))))) (=> (and (and (= x2301 (= x1445 x5205)) (and x2301 (and (not (< x3614 4)) (not (= x5749 599290589)) (= x2365 (x980 (- x3614 4))) (= x3946 (x2549 (x1567 x5205))) (< 0 x3946) (= x3614 36) (= x2505 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2365)) (< x2365 32)) (> x2365 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= 404098525 x5749)) (= x3614 36) (not (= x5749 157198259)) (= x4332 x4720) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1940) (= x5749 1889567281)))) (not x1059)) (and (=> (and (and (= x5478 x4720) (= x634 (= x4720 x4332))) (not x2505)) (and (=> (and (and (<= x914 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x679 32) (= 1 x2943) (= x2667 (x476 (x1567 x4720) (x5097 1) 0)) (= (x1412 x2667) x914) (>= x914 0)) x634) x4963) (=> (not x634) x1810))) (=> x2505 x1810))))) (=> (and x4982 (and (not (< x365 4)) (= (x2549 (x1567 x5771)) x873) (= x4332 x5226) (= x4387 (or (> x1504 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1504 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1504 32)))) (= 36 x365) (not (= x2219 826074471)) (< 0 x873) (not (< x2219 826074471)) (= (x980 (- x365 4)) x1504) (= 1889567281 x2219) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1438) (= 36 x365))) (and (=> x4387 x3907) (=> (and (not x4387) (and (= x5226 x2139) (= (= x5226 x4332) x1518))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5287) (= (x476 (x1567 x5226) (x5097 1) 0) x1443) (= x555 1) (= (x3922 x1443) x5287) (>= x5287 0) (= x2206 32)) x1518) x203) (=> (not x1518) x3907))))))) (=> (and (and (not (> 826074471 x4123)) (not (= x4123 826074471)) (= x1601 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2560) (and (> 32 x2560) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2560) true)))) (= (x980 (- x3030 4)) x2560) (< 0 x2578) (not (< x3030 4)) (= x3030 36) (= x3030 36) (= x2578 (x2549 (x1567 x3247))) (= x4123 1889567281) (= x3567 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x4332 x5067)) x1637) (and (=> x1601 x3157) (=> (and (not x1601) (and (= x5101 (= x5067 x4332)) (= x5067 x4444))) (and (=> (not x5101) x3157) (=> (and x5101 (and (= (x476 (x1567 x5067) (x5097 1) 0) x383) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3854) (= x2323 32) (>= x3854 0) (= x3854 (x5761 x383)) (= x3142 1))) x3911))))))))))) (=> (and x1770 (and (= x4122 36) (= x90 1889567281) (not (= x90 1117154408)) (= x4332 x2091) (= x4122 36) (< x90 2514000705) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x695) (= (or (and (= true (<= x1784 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1784)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1784)) x5637) (= x1784 (x980 (- x4122 4))) (not (< x4122 4)) (= x5502 (x2549 (x1567 x2020))) (> x5502 0) (not (< x90 1117154408)))) (and (=> (and (not x5637) (and (= x3484 x2091) (= (= x2091 x4332) x559))) (and (=> (and x559 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5304) (= 1 x3019) (>= x5304 0) (= (x2261 x5949) x5304) (= 32 x482) (= x5949 (x476 (x1567 x2091) (x5097 0) 0)))) x3185) (=> (not x559) x5125))) (=> x5637 x5125))))))) (=> (and x5156 (and (= x3592 (x2549 (x1567 x5547))) (= 36 x4522) (= x2455 (x980 (- x4522 4))) (not (> 961581905 x73)) (not (= 1086394137 x73)) (= 36 x4522) (= x1383 x4332) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2455) (and (< x2455 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2455) true))) x4325) (not (= x73 1484578334)) (not (= 1875902277 x73)) (not (< x4522 4)) (= 1889567281 x73) (> 1901074598 x73) (< 0 x3592) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x3059) (not (= x73 1545185628)) (not (= 961581905 x73)))) (and (=> x4325 x2329) (=> (and (not x4325) (and (= x2016 x1383) (= x3971 (= x4332 x1383)))) (and (=> (and (and (= (x5483 x4033) x6133) (= x2086 32) (<= 0 x6133) (<= x6133 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x829 1) (= (x476 (x1567 x1383) (x5097 0) 0) x4033)) x3971) x3746) (=> (not x3971) x2329))))))) (=> (and x1963 (and (= x4906 (x2549 (x1567 x5713))) (not (< x1245 1117154408)) (< x1245 2127478272) (not (= 1510251120 x1245)) (= 1889567281 x1245) (not (< x3532 4)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1666) true) (< x1666 32)) (> x1666 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2152) (= x3532 36) (not (= 1431022396 x1245)) (= (x980 (- x3532 4)) x1666) (= x1271 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x4332 x1887) (not (> 1431022396 x1245)) (not (> 903454517 x1245)) (not (= 1553423035 x1245)) (= x3532 36) (< 0 x4906))) (and (=> x2152 x2366) (=> (and (and (= (= x1887 x4332) x4803) (= x3934 x1887)) (not x2152)) (and (=> (and x4803 (and (>= x3135 0) (= x2235 1) (= 32 x4093) (= (x5613 x4013) x3135) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3135) (= x4013 (x476 (x1567 x1887) (x5097 9) 0)))) x4001) (=> (not x4803) x2366))))))) (=> (and x6055 (and (> x4773 0) (< x2832 3674237557) (not (< x2877 4)) (= x1410 (or (and (< x3527 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3527))) (> x3527 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2832 1889567281) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x5422) (> 2514000705 x2832) (= (x980 (- x2877 4)) x3527) (= 36 x2877) (= x2409 x4332) (= 36 x2877) (= x4773 (x2549 (x1567 x2417))) (not (> 1889567281 x2832)))) (and (=> (and (and (= x4111 x2409) (= x97 (= x4332 x2409))) (not x1410)) (and (=> (not x97) x2791) (=> (and x97 (and (= 1 x1876) (= x4206 32) (= (x476 (x1567 x2409) (x5097 2) 0) x1605) (= x71 (x1580 x1605)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x71) (>= x71 0))) x694))) (=> x1410 x2791))))) x1788))
(assert (x447 x5652))
(assert (x447 x3378))
(assert (= x1546 (and x5186 x3916)))
(assert (x447 x5480))
(assert (x1957 x3043 x4506 x6080 x3043))
(assert (x447 x1228))
(assert (x447 x4383))
(assert (x447 x3207))
(assert (x447 x2889))
(assert (= x275 (and x2796 (not x5710))))
(assert (= (x5097 1901074598) (x1567 1901074598)))
(assert (= (and x3504 x5881) x5240))
(assert (= x685 (and x1731 x4766)))
(assert (= (and x2582 x2122) x3584))
(assert (= (and x4719 x3095) x5978))
(assert (x2992 x3043 (- x4398 x4506)))
(assert (x447 x4642))
(assert (= x551 (or x4396 x1217)))
(assert (x447 x202))
(assert (x447 x3308))
(assert (= (x2338 (x5097 2127478272)) 2127478272))
(assert (x447 x5529))
(assert (x3903 x4509))
(assert (x447 x5866))
(assert (x447 x3086))
(assert (= x113 (or (and x2092 x3180) (and (not x5273) x3383))))
(assert (= x5973 (x2338 (x1567 x5973))))
(assert (x3960 x3043 x4398 x4506 x3043))
(assert (x447 x730))
(assert (x3960 x3043 x3216 x6080 x3043))
(assert (x447 x5398))
(assert (= x5884 (and (not x1266) x2424)))
(assert (= (and x714 x3836) x478))
(assert (= x5671 (and x3674 x1310)))
(assert (= (or x1853 x678 x2821 x5386 x3229 x4941) x5203))
(assert (x447 x3343))
(assert (= (and (not x970) x1959) x151))
(assert (= x6348 (and x951 x5137)))
(assert (= (and x2503 x2358) x2176))
(assert (= x1383 (x2338 (x1567 x1383))))
(assert (= (and x5563 (not x1999)) x5907))
(assert (x447 x665))
(assert (x447 x4506))
(assert (= x5510 (=> (and (= x6101 x5736) (= x720 x3767)) x3544)))
(assert (x447 x3002))
(assert (x552 x979))
(assert (= x4303 (and x1602 x4992)))
(assert (x447 x1739))
(assert (x447 x2669))
(assert (x447 x1049))
(assert (= x1844 (and x1710 (not x4224))))
(assert (= x769 (or x5907 x6259 x2046 x2166 x4505 x250 x255 x6093 x4593 x946 x35 x713 x4446 x1819 x6355 x4318 x3762 x3380)))
(assert (x447 x4200))
(assert (= x520 (and (not x1463) x3597)))
(assert (x447 x253))
(assert (x5592 (- x2378 x3216)))
(assert (x447 x1288))
(assert (x447 x4066))
(assert (= x1861 (and x850 x77)))
(assert (x1957 x4506 x3043 x3043 x4398))
(assert (x447 x947))
(assert (= (and x410 x189) x4494))
(assert (x552 x1192))
(assert (= x4229 (and x2721 x5068)))
(assert (= x6332 (or x1202 x2126)))
(assert (= (=> (and (= x4644 x2008) (= x5685 x5239)) x4298) x326))
(assert (x447 x1589))
(assert (= x4095 (and x5746 x1311)))
(assert (x447 x3200))
(assert (= (x2338 (x1567 x3564)) x3564))
(assert (= (and x872 x5329) x5628))
(assert (= (and x2905 x564) x3792))
(assert (x447 x479))
(assert (x447 x2340))
(assert (x447 x672))
(assert (x447 x360))
(assert (= x2409 (x2338 (x1567 x2409))))
(assert (x3903 x1112))
(assert (= (and x4880 (not x1992)) x3417))
(assert (x447 x5379))
(assert (= (x2338 (x5097 97057840296441966410330255902201960138893160036366920885407767449525406400512)) 97057840296441966410330255902201960138893160036366920885407767449525406400512))
(assert (x447 x4169))
(assert (= (and x3841 x6065) x4192))
(assert (= (and x4679 x620) x6257))
(assert (= x1382 (or x6070 x2473)))
(assert (x447 x4638))
(assert (= (and x6038 x2) x4763))
(assert (= x2951 (=> (and (= x2729 x3679) (= x5740 0)) x603)))
(assert (x447 x4587))
(assert (= x866 (=> (and (= x3242 x5946) (= x2191 0)) x3227)))
(assert (= x3190 (and (not x2030) x4114)))
(assert (= x3908 (and x3007 x1150)))
(assert (x729 x5600))
(assert (x3903 x5566))
(assert (x447 x2086))
(assert (x447 x4948))
(assert (= (and x4938 (not x2307)) x3643))
(assert (= (and x6095 x486) x2439))
(assert (x447 x2554))
(assert (= (or x4379 x1133) x3940))
(assert (= (and (not x3107) x5659) x3433))
(assert (= x5260 (x2338 (x1567 x5260))))
(assert (= x909 (and x4310 (not x3252))))
(assert (x447 x5057))
(assert (= x4737 (=> (= x2317 (< x6080 x4669)) (and (=> x2317 x3997) (=> (and (not x2317) (= x2030 (> x4669 x6080))) (and (=> x2030 x3997) (=> (and (not x2030) (and (>= x3932 0) (<= x3932 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x476 (x1567 x523) (x5097 2) 0) x1252) (= x5145 (x980 (- x6080 x4669))) (= x3932 (x5244 x1252)) (= (> x6080 x3932) x4768))) (and (=> x4768 x3997) (=> (and (= (< x3932 x6080) x1633) (not x4768)) (and (=> x1633 x3997) (=> (and (not x1633) (and (= x296 (x980 (- x3932 x6080))) (= (x476 (x1567 x6254) (x5097 2) 0) x6139) (<= 0 x1239) (= (< x2745 x1239) x4750) (<= x1239 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3831 (x476 (x1567 x523) (x5097 2) 0)) (= x1239 (x3083 x6139)) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5145)) x2745))) (and (=> x4750 x3997) (=> (and (and (= (x4937 (+ x1239 x5145)) x5701) (= (< x5701 x1239) x349)) (not x4750)) (and (=> x349 x3997) (=> (and (not x349) (and (= x5746 (< 0 x4669)) (= x2390 (x476 (x1567 x6254) (x5097 2) 0)))) (and (=> (and (and (= x1997 (x476 (x1567 x5679) (x5097 2) 0)) (<= x1683 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2025 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4669))) (> 1461501637330902918203684832716283019655932542976 x5679) (= (x5365 x1997) x1683) (>= x5679 0) (<= 0 x1683) (>= 1461501637330902918203684832716283019655932542975 x5679) (= x2931 (> x1683 x2025))) x5746) (and (=> x2931 x3997) (=> (and (and (= x4489 (x4937 (+ x4669 x1683))) (= x4004 (< x4489 x1683))) (not x2931)) (and (=> (and (and (= (x476 (x1567 x5679) (x5097 2) 0) x3785) (<= x5679 1461501637330902918203684832716283019655932542975) (>= x5679 0) (< x5679 1461501637330902918203684832716283019655932542976) (> 1461501637330902918203684832716283019655932542976 x5679) (>= 1461501637330902918203684832716283019655932542975 x5679) (>= x5679 0)) (not x4004)) x2511) (=> x4004 x3997))))) (=> (not x5746) x2511)))))))))))))))))
(assert (= x2526 (and (not x4681) x5871)))
(assert (= (and x4070 x3692) x2742))
(assert (= x3572 (and x1659 x4089)))
(assert (x447 x2615))
(assert (= x3109 (and (not x4939) x4978)))
(assert (x2992 x3216 (- x3043 x6080)))
(assert (= (and (not x3818) x3439) x4740))
(assert (= x5132 (and (not x893) x5344)))
(assert (x54 x4357))
(assert (= (and x6067 x4253) x2510))
(assert (x1957 x4506 x3043 x3043 x3216))
(assert (= x3390 (and x2643 x3973)))
(assert (x447 x1679))
(assert (= x5704 (and x4834 (not x2066))))
(assert (x447 x2782))
(assert (= x111 (and x2032 x2936)))
(assert (x447 x4130))
(assert (x3960 x4954 x611 x4398 x3043))
(assert (x447 x736))
(assert (x447 x3010))
(assert (x447 x2628))
(assert (= (and (not x5124) x207) x2887))
(assert (x3903 x604))
(assert (= (and x2050 x573) x2009))
(assert (= x5332 (and (not x2833) x1063)))
(assert (x447 x535))
(assert (x447 x5443))
(assert (x3960 x4506 x3043 x3216 x3043))
(assert (x552 x778))
(assert (= 122929932 (x2338 (x5097 122929932))))
(assert (x447 x2162))
(assert (= x6093 (and x236 x6240)))
(assert (x447 x5087))
(assert (= (and (not x1758) x25) x3779))
(assert (= (and x6168 x3384) x4308))
(assert (= (and x2827 (not x699)) x274))
(assert (x447 x4837))
(assert (x447 x5258))
(assert (x447 x1066))
(assert (= x4993 (and x6054 (not x4056))))
(assert (x447 x4059))
(assert (x447 x2676))
(assert (= (=> (and (= x2235 x5685) (= x4644 x4093)) x4298) x4001))
(assert (x447 x2392))
(assert (x3903 x3503))
(assert (and (x5609 x473 1461501637330902918203684832716283019655932542976) (x4601 x473 1461501637330902918203684832716283019655932542976) (x301 x473 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x473 1461501637330902918203684832716283019655932542976) (* (x1849 x473 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x473))))
(assert (= x74 (=> (and (= x3748 x5853) (= x4290 x4935)) x6285)))
(assert (and (x5609 x4687 1461501637330902918203684832716283019655932542976) (x4601 x4687 1461501637330902918203684832716283019655932542976) (x301 x4687 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x4687 1461501637330902918203684832716283019655932542976) (* (x1849 x4687 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x4687))))
(assert (x447 x4668))
(assert (x447 x5889))
(assert (= x5135 (and x5695 (not x1037))))
(assert (x447 x3191))
(assert (x447 x1074))
(assert (x447 x271))
(assert (= (and x3515 x2716) x4407))
(assert (x447 x1342))
(assert (= x4751 (and x2454 x2604)))
(assert (= (and x5522 (not x1040)) x4074))
(assert (= (and x628 x5728) x5903))
(assert (x447 x2056))
(assert (= (and x2265 (not x2017)) x5770))
(assert (= (and (not x4518) x5072) x3475))
(assert (x447 x1170))
(assert (= (and x1900 (not x1000)) x2265))
(assert (x447 x5105))
(assert (= x2779 (and x2007 x5827)))
(assert (x447 x4067))
(assert (= (=> (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6264) x3742) (and (=> (and (= x3522 (> x2378 x6264)) x3742) (and (=> (and (not x3522) (= x2636 (> x2378 x6264))) (and (=> x2636 x5496) (=> (and (and (= (x980 (- x6264 x2378)) x1539) (= x6144 (x476 (x1567 x717) x1129 0)) (= (x476 (x1567 x2741) (x5097 5) 0) x1129)) (not x2636)) x1660))) (=> x3522 x5496))) (=> (not x3742) x1660))) x3478))
(assert (x447 x6338))
(assert (= (x2338 (x5097 3171951664)) 3171951664))
(assert (x3903 x4276))
(assert (x447 x5713))
(assert (= x3513 (and x122 (not x2377))))
(assert (x447 x4607))
(assert (= (or x5303 x1104) x1978))
(assert (x3903 x2655))
(assert (x447 x1350))
(assert (= (and x4016 (not x5474)) x1663))
(assert (x447 x2832))
(assert (= (and x1672 x456) x105))
(assert (x3960 x3216 x3043 x6080 x3043))
(assert (= x3283 (and x5029 x686)))
(assert (= x1133 (or x4748 x5705)))
(assert (= x4220 (and (not x1534) x50)))
(assert (x447 x3998))
(assert (= (and x2246 x2789) x5997))
(assert (=> (>= 10000 x1309) (= (x5097 x1309) (x1567 x1309))))
(assert (= (and x524 x1398) x319))
(assert (x447 x5622))
(assert (= (and x2181 x520) x4555))
(assert (x447 x548))
(assert (and (x5609 x3090 1461501637330902918203684832716283019655932542976) (x4601 x3090 1461501637330902918203684832716283019655932542976) (x301 x3090 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x3090 1461501637330902918203684832716283019655932542976) (* (x1849 x3090 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x3090))))
(assert (= (x2338 (x1567 x2846)) x2846))
(assert (= x680 (and (not x2849) x3517)))
(assert (= (and (not x323) x2697) x564))
(assert (x447 x3020))
(assert (x5592 (- x3043 x4954)))
(assert (= (and x3879 x805) x3538))
(assert (x447 x71))
(assert (x447 x3061))
(assert (= (=> (and (= x4437 x3000) (= x4201 x5644)) x342) x2516))
(assert (x447 x4831))
(assert (x447 x2481))
(assert (x447 x1645))
(assert (= (and x883 x2581) x5075))
(assert (= x3689 (and x20 x154)))
(assert (x447 x1291))
(assert (x447 x1114))
(assert (x1957 x3043 x2378 x3043 x3216))
(assert (= (x5097 961581905) (x1567 961581905)))
(assert (= (and (not x5038) x1366) x3523))
(assert (= (or x4575 x3883) x5971))
(assert (= x4313 (and x6216 x2937)))
(assert (x447 x2989))
(assert (x447 x1031))
(assert (= x5255 (x2338 (x1567 x5255))))
(assert (x447 x4402))
(assert (x447 x4100))
(assert (= (and x2430 x924) x820))
(assert (x447 x3286))
(assert (= x3072 (and x4631 (not x1111))))
(assert (= (x2338 (x1567 x3938)) x3938))
(assert (= x4468 (and x5459 (not x2461))))
(assert (= x5449 (and x4145 x5081)))
(assert (= x4844 (or x3101 x4574)))
(assert (x1957 x3043 x4506 x3043 x2378))
(assert (= (=> (and (= x3321 x2726) (= 0 x5447)) x5958) x3103))
(assert (x447 x4632))
(assert (x447 x1709))
(assert (x447 x4693))
(assert (x5592 (- x3043 x611)))
(assert (x447 x4756))
(assert (x5944 x4836))
(assert (x447 x2900))
(assert (x1990 x312))
(assert (x447 x6321))
(assert (=> (<= x5443 10000) (= (x1567 x5443) (x5097 x5443))))
(assert (= (and (not x5494) x1543) x1464))
(assert (x447 x3810))
(assert (= (and x4044 (not x531)) x4390))
(assert (x447 x2560))
(assert (= x2308 (x2338 (x1567 x2308))))
(assert (x447 x4365))
(assert (= x717 (x2338 (x1567 x717))))
(assert (= (or x3304 x1340) x1355))
(assert (x447 x1327))
(assert (x447 x3870))
(assert (x447 x2678))
(assert (x447 x4613))
(assert (x447 x3415))
(assert (x5592 (- x6080 x611)))
(assert (x2992 x3043 (- x4506 x2378)))
(assert (=> (<= x2074 10000) (= (x1567 x2074) (x5097 x2074))))
(assert (=> (<= x5951 10000) (= (x5097 x5951) (x1567 x5951))))
(assert (= x4643 (and (not x1283) x5417)))
(assert (x3903 x5401))
(assert (x447 x3871))
(assert (x2118 x915 x4418))
(assert (= (and x2444 x72) x2236))
(assert (x447 x1176))
(assert (= (and x6138 (not x4137)) x1886))
(assert (x3903 x5064))
(assert (= (and x2251 x901) x4568))
(assert (x447 x413))
(assert (= x3063 (and x386 (not x6281))))
(assert (x447 x3909))
(assert (x3903 x2734))
(assert (= (or x4146 x3258) x2194))
(assert (= x4347 (or x6335 x5345 x1692 x3551 x2510 x4090 x2980 x3665 x2319)))
(assert (x3903 x5547))
(assert (x447 x1440))
(assert (= (or x2748 x1935) x4031))
(assert (x447 x2699))
(assert (= x1256 (=> (and (= 0 x4827) (= x5816 x2570)) x2082)))
(assert (=> (>= 10000 x1445) (= (x5097 x1445) (x1567 x1445))))
(assert (= x1664 (and x5195 (not x30))))
(assert (= x3280 (and x1948 x61)))
(assert (x3960 x3043 x6080 x4506 x3043))
(assert (x447 x2169))
(assert (x447 x2140))
(assert (x1957 x4954 x611 x3043 x3216))
(assert (x447 x3540))
(assert (= (and x120 x869) x3577))
(assert (x447 x2506))
(assert (= (and (not x2721) x5068) x5902))
(assert (x447 x243))
(assert (x447 x4281))
(assert (x447 x4565))
(assert (= x2207 (or x4430 x453)))
(assert (= x2965 (and x3390 x1107)))
(assert (and (x3768 x511 10000) (x1349 x511 10000) (=> (and (< 0 x511) (< 0 10000)) (and (<= (* 10000 (x1849 x511 10000)) x511) (< (- x511 10000) (* 10000 (x1849 x511 10000))))) (x204 x511 10000) (x2408 x511 10000)))
(assert (x447 x1483))
(assert (x447 x1651))
(assert (x447 x1065))
(assert (x447 x1950))
(assert (x447 x2622))
(assert (x447 x4357))
(assert (= (=> (and (= x5736 x510) (= x1857 x720)) x3544) x3968))
(assert (= x6296 (or (and (not x150) x218) (and x5725 x2533))))
(assert (= (and x3754 x4238) x4942))
(assert (= x453 (and (not x4417) x514)))
(assert (x447 x3850))
(assert (= (and (not x1459) x1868) x5195))
(assert (x447 x1238))
(assert (= x3177 (and x267 x464)))
(assert (= (x2338 (x5097 445207142)) 445207142))
(assert (x1957 x611 x4954 x3043 x3216))
(assert (x447 x5262))
(assert (x447 x2111))
(assert (= x4720 (x2338 (x1567 x4720))))
(assert (= (x2338 (x1567 x4812)) x4812))
(assert (x3903 x4904))
(assert (= (and (not x4460) x4381) x5665))
(assert (= x260 (and (not x5729) x6050)))
(assert (x447 x5287))
(assert (x1990 x1823))
(assert (x447 x6336))
(assert (x447 x167))
(assert (= (x1567 1461501637330902918203684832716283019655932542976) (x5097 1461501637330902918203684832716283019655932542976)))
(assert (x447 x1234))
(assert (= x3037 (and x4294 x3416)))
(assert (=> (<= x5222 10000) (= (x1567 x5222) (x5097 x5222))))
(assert (x447 x3262))
(assert (x447 x727))
(assert (x447 x6247))
(assert (x3903 x2741))
(assert (x2992 x6080 x3043))
(assert (= x689 (and x2493 x488)))
(assert (= x2450 (or x3667 x6357 x4085)))
(assert (x447 x5296))
(assert (x3903 x1799))
(assert (= x2046 (and x122 x2377)))
(assert (x729 x2384))
(assert (x3903 x5771))
(assert (x447 x3965))
(assert (= (x2338 (x1567 x3285)) x3285))
(assert (= x4117 (and x2369 x4606)))
(assert (x447 x3592))
(assert (x447 x2916))
(assert (x447 x2857))
(assert (x447 x4293))
(assert (= (and (not x1779) x1148) x777))
(assert (x447 x4112))
(assert (x447 x950))
(assert (x447 x3453))
(assert (x447 x6195))
(assert (x447 x1427))
(assert (= (x5097 3600075382) (x1567 3600075382)))
(assert (x447 x4380))
(assert (x447 x5293))
(assert (x447 x1103))
(assert (= (and x465 x355) x3656))
(assert (x447 x3802))
(assert (= (and (not x644) x5280) x4182))
(assert (= x2380 (and x997 x2253)))
(assert (x447 x1551))
(assert (= (or x567 x278) x3825))
(assert (x447 x2455))
(assert (x447 x368))
(assert (= (x2338 (x1567 x5092)) x5092))
(assert (x447 x3011))
(assert (= (and x901 (not x2251)) x2898))
(assert (x447 x1073))
(assert (x447 x4680))
(assert (x447 x1883))
(assert (= x984 (and (not x5728) x628)))
(assert (= x4298 (=> (and (and (not (= 0 x5685)) (= x3344 (x471 128)) (= x3344 x257) (not (or (and (> 32 x4644) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4644) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4644)))) (and (= (<= x1048 x2497) x4236) (= x6049 x2497) (= x1048 x1584) (= x257 x6049))) x4236)))
(assert (x447 x5526))
(assert (x447 x3449))
(assert (x447 x3680))
(assert (= (x2338 (x1567 x1986)) x1986))
(assert (=> (>= 10000 x209) (= (x5097 x209) (x1567 x209))))
(assert (= (and x5760 x1629) x704))
(assert (= (and (not x6168) x3384) x4404))
(assert (x447 x6074))
(assert (x447 x473))
(assert (= x2001 (or x601 x4220)))
(assert (x447 x6100))
(assert (= (x1567 1117154408) (x5097 1117154408)))
(assert (x447 x1102))
(assert (and (x5609 x494 1461501637330902918203684832716283019655932542976) (x4601 x494 1461501637330902918203684832716283019655932542976) (x301 x494 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x494 1461501637330902918203684832716283019655932542976) (* (x1849 x494 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x494))))
(assert (= x4635 (and (not x1146) x4699)))
(assert (x447 x4827))
(assert (= x2955 (or x2148 x2684)))
(assert (x3903 x1330))
(assert (=> (>= 10000 x5547) (= (x1567 x5547) (x5097 x5547))))
(assert (= (x2338 (x1567 x5935)) x5935))
(assert (x447 x3590))
(assert (= x4966 (or x4787 x2758)))
(assert (= x2664 (and x2627 (not x265))))
(assert (x447 x5557))
(assert (x447 x1941))
(assert (x447 x4960))
(assert (x2992 x4954 (- x611 x3216)))
(assert (= x3309 (and x1423 x5585)))
(assert (x447 x4198))
(assert (x447 x4263))
(assert (x447 x330))
(assert (x447 x2178))
(assert (= (and x1476 (not x3347)) x2))
(assert (= x4003 (=> (and (= x5530 x6277) (= x5824 0)) x3627)))
(assert (x447 x2033))
(assert (x447 x93))
(assert (x447 x3238))
(assert (= x6328 (and x2919 x5626)))
(assert (= (x2338 (x1567 x4904)) x4904))
(assert (x447 x5301))
(assert (x447 x1934))
(assert (x447 x3882))
(assert (x3903 x333))
(assert (x447 x5056))
(assert (= x1501 (and x2728 (not x485))))
(assert (x447 x5037))
(assert (x447 x1694))
(assert (= x3413 (and (not x4212) x956)))
(assert (= (=> (and (= x4201 x2692) (= x1342 x4437)) x342) x1226))
(assert (x447 x1641))
(assert (= (and x1634 x5201) x4505))
(assert (x447 x3234))
(assert (= (and x2290 x1922) x2185))
(assert (= x3432 (and (not x6184) x3535)))
(assert (x447 x1090))
(assert (x447 x2621))
(assert (x447 x3734))
(assert (x447 x4042))
(assert (x447 x2198))
(assert (x447 x1064))
(assert (x447 x4063))
(assert (= x5715 (and x1850 x4862)))
(assert (= x4974 (and x3977 x3730)))
(assert (= x1323 (and x1040 x5522)))
(assert (x447 x462))
(assert (= x3880 (and x4006 (not x1166))))
(assert (= (and x1881 x3963) x4148))
(assert (x447 x4034))
(assert (x5592 (- x6080 x3043)))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x2338 (x5097 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (= x4318 (and x1165 x1581)))
(assert (x447 x679))
(assert (x447 x1966))
(assert (x447 x5478))
(assert (= x1954 (=> (and (= x1791 0) (= x5879 x1551)) x5840)))
(assert (= (and x5825 x65) x1144))
(assert (x447 x1383))
(assert (= x3044 (and x1865 x3323)))
(assert (= (and x716 x3327) x2446))
(assert (= x458 (and (not x882) x2805)))
(assert (x447 x3144))
(assert (= (and x5837 x1980) x4426))
(assert (x3903 x626))
(assert (= (=> (and (= x503 0) (= x3288 x6277)) x3402) x879))
(assert (x447 x3130))
(assert (x3903 x1945))
(assert (x447 x648))
(assert (x3903 x2846))
(assert (x447 x5461))
(assert (= (and x1465 (not x3329)) x524))
(assert (= 1889567281 (x2338 (x5097 1889567281))))
(assert (= x298 (and x6088 x1585)))
(assert (= (x2338 (x1567 x2856)) x2856))
(assert (= x1536 (and (not x5431) x5860)))
(assert (= x1481 (and x2536 (not x3877))))
(assert (x3960 x3043 x2378 x4954 x611))
(assert (x3903 x3175))
(assert (= (and x140 (not x2172)) x6344))
(assert (x5592 (- x2378 x3043)))
(assert (=> (<= x5480 10000) (= (x1567 x5480) (x5097 x5480))))
(assert (=> (>= 10000 x1799) (= (x5097 x1799) (x1567 x1799))))
(assert (x2992 x3043 (- x2378 x4506)))
(assert (= x4408 (and x2325 (not x81))))
(assert (= (and x4699 x1146) x2437))
(assert (x447 x982))
(assert (x447 x3216))
(assert (x447 x367))
(assert (x2992 x3043 (- x3216 x3043)))
(assert (x447 x3302))
(assert (x447 x228))
(assert (x447 x5853))
(assert (= (=> (and (= x2538 1) (= 0 x2770)) x5799) x719))
(assert (= x2698 (and x3417 (not x4758))))
(assert (= (or (and x5828 x6318) (and x4211 (not x1442))) x3506))
(assert (= x4567 (and (not x5815) x5877)))
(assert (= (and x5938 x4411) x4672))
(assert (= (x2338 (x1567 x2638)) x2638))
(assert (= (x2338 (x1567 x2741)) x2741))
(assert (x447 x1381))
(assert (= (and x600 x146) x164))
(assert (= (and x3727 (not x3795)) x542))
(assert (= x335 (and x495 x5106)))
(assert (x447 x4810))
(assert (=> (>= 10000 x3415) (= (x1567 x3415) (x5097 x3415))))
(assert (= x5336 (or x993 x638)))
(assert (= (or x569 x3513) x3298))
(assert (x447 x3367))
(assert (x447 x1575))
(assert (= x913 (and (not x2839) x2054)))
(assert (x447 x4072))
(assert (= x876 (and x2661 x4260)))
(assert (x447 x5685))
(assert (x447 x4970))
(assert (= (and x2882 x4047) x6297))
(assert (x447 x3668))
(assert (=> (>= 10000 x5713) (= (x5097 x5713) (x1567 x5713))))
(assert (x3903 x1526))
(assert (x447 x2873))
(assert (= (x2338 (x1567 x3305)) x3305))
(assert (x447 x2113))
(assert (= x2930 (and x4813 x4510)))
(assert (x1957 x3043 x3216 x4506 x3043))
(assert (= x6260 (and (not x5938) x4411)))
(assert (x447 x6142))
(assert (x447 x1791))
(assert (=> (<= x717 10000) (= (x1567 x717) (x5097 x717))))
(assert (x447 x2826))
(assert (= (and x2891 x2438) x4762))
(assert (= x2221 (and (not x3782) x136)))
(assert (= (or (and x2576 (not x663)) (and x212 x215)) x4102))
(assert (=> (>= 10000 x840) (= (x1567 x840) (x5097 x840))))
(assert (x447 x2101))
(assert (= (and x2923 x4652) x1692))
(assert (= x5320 (and x5242 (not x1892))))
(assert (x447 x3801))
(assert (x447 x5936))
(assert (= x5842 (and x2579 x3100)))
(assert (= (x2338 (x1567 x1445)) x1445))
(assert (= (=> (and (= x1551 x2099) (= x2382 0)) x1023) x5061))
(assert (= (or (and x5310 (not x3339)) x3192) x3537))
(assert (x447 x1974))
(assert (= (and x3469 x1953) x1757))
(assert (= x3528 (and x986 (not x3093))))
(assert (= (and x5714 x4050) x3969))
(assert (x447 x3808))
(assert (x447 x268))
(assert (= (x1567 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x5097 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x447 x4285))
(assert (= (and x3643 x5204) x651))
(assert (= x4826 (or x5216 x1121)))
(assert (x447 x4612))
(assert (= x2253 (and x3314 x2063)))
(assert (= (and x3050 x4721) x5377))
(assert (= x2647 (and x4643 x5264)))
(assert (x447 x47))
(assert (x447 x656))
(assert (= (and x25 x1758) x1790))
(assert (x447 x2584))
(assert (=> (>= 10000 x672) (= (x1567 x672) (x5097 x672))))
(assert (x54 x2384))
(assert (x1990 x494))
(assert (= (and x6210 x200) x5695))
(assert (x447 x259))
(assert (= x3649 (or x2779 (and x2007 (not x5827)))))
(assert (x447 x254))
(assert (= (and (not x5646) x5693) x756))
(assert (= (and x5242 x1892) x3588))
(assert (x447 x3834))
(assert (x447 x3547))
(assert (= x6312 (and x2 (not x6038))))
(assert (= (=> (and (= x5154 x3651) (= x1747 x1142)) x2568) x6052))
(assert (x447 x1815))
(assert (x1957 x3043 x3216 x2378 x3043))
(assert (= (and x1057 x6071) x3885))
(assert (x447 x5363))
(assert (= x282 (and x3487 (not x3616))))
(assert (= (and x804 (not x5442)) x4085))
(assert (x447 x2856))
(assert (= (x2338 (x1567 x2020)) x2020))
(assert (x447 x582))
(assert (x447 x5801))
(assert (x447 x1397))
(assert (x447 x5905))
(assert (x447 x1260))
(assert (= (and x2514 x1265) x1514))
(assert (x447 x6254))
(assert (x447 x437))
(assert (x447 x3732))
(assert (=> (<= x205 10000) (= (x5097 x205) (x1567 x205))))
(assert (x3903 x40))
(assert (= x4480 (and x803 x1723)))
(assert (x447 x1271))
(assert (x447 x4964))
(assert (x447 x1683))
(assert (x447 x4988))
(assert (x447 x6217))
(assert (x447 x5951))
(assert (= x5821 (and (not x2127) x807)))
(assert (= x3640 (and x6171 (not x3468))))
(assert (x5592 (- x4398 x3043)))
(assert (x3903 x5205))
(assert (= x5991 (or (and (not x3578) x4297) (and x1454 x581))))
(assert (= (and x160 x339) x2077))
(assert (x447 x434))
(assert (= x5246 (and x4478 x3052)))
(assert (= (=> (and (= x5946 x2602) (= x4140 0)) x2047) x3115))
(assert (x447 x432))
(assert (= (or x5897 x4346) x6204))
(assert (x447 x6222))
(assert (=> (>= 10000 x3234) (= (x5097 x3234) (x1567 x3234))))
(assert (= x1563 (and x3896 (not x4321))))
(assert (x447 x1961))
(assert (x447 x4920))
(assert (= x1635 (and x5767 (not x5314))))
(assert (= x5876 (=> (and (and (= (x1849 x962 10000) x5506) (= (> x5506 x1255) x5063) (>= x1255 0) (<= x1255 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (or (and (not x5063) (= x3998 x5506)) (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1255) (= x3998 x1255) (>= x1255 0)) x5063))) x3472)))
(assert (x3903 x2091))
(assert (= x161 (and x2144 x1879)))
(assert (x447 x2382))
(assert (x2992 x3216 x3043))
(assert (x447 x6010))
(assert (x447 x3688))
(assert (x5383 x962))
(assert (x447 x3899))
(assert (x447 x3857))
(assert (x54 x273))
(assert (=> (<= x3503 10000) (= (x5097 x3503) (x1567 x3503))))
(assert (= x1156 (and x2491 (not x2024))))
(assert (x447 x4509))
(assert (x3903 x5669))
(assert (x447 x2895))
(assert (x447 x1363))
(assert (x447 x1556))
(assert (= (and x5477 (not x441)) x50))
(assert (=> (<= x411 10000) (= (x1567 x411) (x5097 x411))))
(assert (=> (>= 10000 x152) (= (x5097 x152) (x1567 x152))))
(assert (= (and (not x6237) x969) x5752))
(assert (=> (<= x3994 10000) (= (x1567 x3994) (x5097 x3994))))
(assert (= (or x3464 x3154) x4978))
(assert (x447 x6200))
(assert (x447 x837))
(assert (x3903 x76))
(assert (x447 x4371))
(assert (= x6324 (or x491 x2363)))
(assert (= (and x179 x79) x6230))
(assert (= x3727 (and x1265 (not x2514))))
(assert (x447 x5077))
(assert (x447 x3173))
(assert (= x662 (x2338 (x1567 x662))))
(assert (x447 x3187))
(assert (= x1509 (and x6151 (not x6012))))
(assert (= (x1567 3824031246) (x5097 3824031246)))
(assert (=> (>= 10000 x5401) (= (x5097 x5401) (x1567 x5401))))
(assert (= x306 (and x4092 x219)))
(assert (= (and x6130 x895) x5202))
(assert (= (x2338 (x1567 x5286)) x5286))
(assert (= (and x382 x448) x2325))
(assert (= x3692 (and x4305 x963)))
(assert (= (and x585 (not x1960)) x34))
(assert (= (or x3632 x1395) x2984))
(assert (= x2606 (=> (and (= x3399 x2761) (= x2676 x5114)) x1529)))
(assert (= x5317 (and x3677 x2689)))
(assert (x447 x5206))
(assert (= 3835264453 (x2338 (x5097 3835264453))))
(assert (x447 x2806))
(assert (= x5516 (=> (and (= x1376 x1551) (= 0 x788)) x4838)))
(assert (x447 x4670))
(assert (=> (<= x3128 10000) (= (x5097 x3128) (x1567 x3128))))
(assert (= x89 (and x2558 x1034)))
(assert (= x606 (and x6332 (not x2040))))
(assert (= (and x2017 x2265) x1465))
(assert (x3960 x611 x4954 x4398 x3043))
(assert (x447 x6149))
(assert (x5383 x6080))
(assert (x447 x632))
(assert (x447 x2291))
(assert (= (and (not x2304) x5551) x5878))
(assert (x447 x487))
(assert (x447 x5305))
(assert (x447 x3634))
(assert (x447 x4140))
(assert (= (=> (and (= x1791 x1747) (= x5154 x5879)) x2568) x5840))
(assert (= (x2338 (x1567 x95)) x95))
(assert (= x4809 (and (not x5116) x5992)))
(assert (x447 x4307))
(assert (x447 x1747))
(assert (x447 x1181))
(assert (= x4734 (and (not x5172) x6064)))
(assert (x447 x4790))
(assert (= (and x1979 x587) x1557))
(assert (= x2302 (and x3390 (not x1107))))
(assert (= (and (not x4523) x2640) x789))
(assert (= x221 (and x2603 (not x4057))))
(assert (= x5035 (and (not x1486) x2370)))
(assert (x2992 x6080 (- x3043 x3216)))
(assert (x447 x2602))
(assert (x447 x4437))
(assert (= (and x3538 (not x3610)) x5475))
(assert (x447 x90))
(assert (= (and x5266 (not x2894)) x4862))
(assert (= x1556 (x2338 (x1567 x1556))))
(assert (= (and x5884 x2019) x2267))
(assert (x447 x3143))
(assert (= x3606 (or x4084 x5508)))
(assert (x447 x4376))
(assert (x447 x2969))
(assert (= x746 (=> (and (= (x3450 x6170) x4893) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4893) (= x20 (< x4893 x3926)) (<= 0 x4893) (= (x476 (x1567 x3906) (x5097 1) 0) x6170)) (and (=> x20 x3296) (=> (and (not x20) (and (<= 0 x3136) (= x2144 (< x2361 x3136)) (= x1852 (x476 (x1567 x2147) (x5097 1) 0)) (= x2359 (x980 (- x4893 x3926))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3136) (= (x2896 x1852) x3136) (= (x350 1461501637330902918203684832716283019655932542975 x2519) x2147) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3926)) x2361))) (and (=> x2144 x3296) (=> (and (and (= x2987 1) (= x4371 32) (= (x4937 (+ x3926 x3136)) x4424)) (not x2144)) x340)))))))
(assert (= x2746 (and x5721 x768)))
(assert (x2992 x3043 (- x4506 x3043)))
(assert (x447 x428))
(assert (= (=> (and (= x2059 (x1210 x3163)) (>= x2059 0) (= (> x1673 x2059) x4939) (= (x476 (x1567 x582) (x5097 1) 0) x3163) (<= x2059 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and (and (= x4274 (x341 x4614)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4274) (= (x476 (x1567 x5480) (x5097 1) 0) x4614) (>= x4274 0) (= x5776 (< x2670 x4274)) (= x1694 (x980 (- x2059 x1673))) (= x2670 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1673))) (= (x350 1461501637330902918203684832716283019655932542975 x979) x5480)) (not x4939)) (and (=> x5776 x4246) (=> (and (and (= x4638 32) (= 1 x2010) (= x3594 (x4937 (+ x1673 x4274)))) (not x5776)) x1264))) (=> x4939 x4246))) x1081))
(assert (x447 x5984))
(assert (= x2312 (and x3278 (not x608))))
(assert (x447 x2572))
(assert (x447 x5999))
(assert (= (and x5971 (not x3862)) x2674))
(assert (= (or (and (not x6224) x4485) (and x2740 x3225)) x3670))
(assert (= (and x3243 (not x1750)) x702))
(assert (x447 x2147))
(assert (x447 x2343))
(assert (= (and x4853 x3008) x2886))
(assert (x447 x5739))
(assert (= (and x3538 x3610) x234))
(assert (= (and x942 x6043) x1126))
(assert (= x2758 (and (not x3381) x2490)))
(assert (x447 x2173))
(assert (x2992 x3043 (- x6080 x3216)))
(assert (x447 x4416))
(assert (x1957 x611 x4954 x3043 x2378))
(assert (= x1662 (or x2494 x4347)))
(assert (x447 x5782))
(assert (= x1340 (and (not x3708) x6044)))
(assert (x447 x3133))
(assert (x447 x2655))
(assert (= x2244 (or x2264 x3176 x5864 x4816 x4433 x5112)))
(assert (= (and x1690 x545) x1145))
(assert (x447 x2020))
(assert (= x1394 (and x5135 (not x3554))))
(assert (x447 x192))
(assert (= (and x894 (not x1335)) x2052))
(assert (x447 x3387))
(assert (= (and (not x1005) x5182) x495))
(assert (= (and x2524 x3017) x5492))
(assert (= (or x6228 x3789) x5763))
(assert (x447 x4109))
(assert (= (and x5431 x5860) x1803))
(assert (= x5278 (and x2968 (not x4624))))
(assert (x447 x5624))
(assert (= x622 (and x5926 x1300)))
(assert (= x712 (and (not x5822) x4306)))
(assert (x447 x3881))
(assert (x447 x83))
(assert (x447 x4597))
(assert (x447 x3090))
(assert (x447 x1368))
(assert (= x2491 (and x1946 (not x3149))))
(assert (x447 x831))
(assert (x447 x6278))
(assert (x447 x4562))
(assert (= (and x3040 (not x4580)) x1063))
(assert (= (x2338 (x1567 x5129)) x5129))
(assert (= (and x2778 x3921) x1659))
(assert (x1957 x3043 x6080 x4954 x611))
(assert (x447 x5016))
(assert (= (x1567 20853193852723734048814770637610870652489083209607696777694672748161462697984) (x5097 20853193852723734048814770637610870652489083209607696777694672748161462697984)))
(assert (= x3137 (and x5532 x1702)))
(assert (x447 x3392))
(assert (x447 x40))
(assert (= (and x2207 (not x976)) x5459))
(assert (x447 x5092))
(assert (x447 x4926))
(assert (x447 x1004))
(assert (=> (>= 10000 x1181) (= (x5097 x1181) (x1567 x1181))))
(assert (= x92 (and x4011 x316)))
(assert (x447 x2722))
(assert (= (and x5195 x30) x6076))
(assert (= (=> (and (= x2330 (x476 (x1567 x4908) (x5097 1) 0)) (= (> x3330 x6356) x2040) (>= x6356 0) (= (x350 1461501637330902918203684832716283019655932542975 x1308) x4908) (<= x6356 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2262 x2330) x6356)) (and (=> x2040 x418) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2402) (>= x2402 0) (= (x980 (- x6356 x3330)) x307) (= (x2023 x3226) x2402) (= (x476 (x1567 x2856) (x5097 1) 0) x3226) (= x5528 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3330))) (= x5569 (< x5528 x2402))) (not x2040)) (and (=> (and (and (= x1840 (x4937 (+ x3330 x2402))) (= 1 x2485) (= 32 x4621)) (not x5569)) x3591) (=> x5569 x418))))) x681))
(assert (x447 x5208))
(assert (= (and x3609 (not x6075)) x2567))
(assert (x3903 x1569))
(assert (= x3623 (and x2978 (not x1914))))
(assert (= x2383 (and x1341 x4493)))
(assert (x447 x4461))
(assert (x3903 x5286))
(assert (= x5951 (x2338 (x1567 x5951))))
(assert (= (or (and (not x4930) x1962) (and x3764 x4143) (and (not x2106) x3867)) x5236))
(assert (= x60 (and (not x1850) x4862)))
(assert (= x796 (and x2837 x5035)))
(assert (x447 x2816))
(assert (x552 x1823))
(assert (x447 x5200))
(assert (x3903 x2074))
(assert (= x6079 (and x2971 x825)))
(assert (= (and x5805 (not x1798)) x2558))
(assert (x1957 x3043 x4506 x4954 x611))
(assert (x447 x2862))
(assert (x447 x968))
(assert (= x5433 (and x2312 (not x3297))))
(assert (=> (>= 10000 x1112) (= (x1567 x1112) (x5097 x1112))))
(assert (= (=> (and (= x1369 x5736) (= x1709 x720)) x3544) x4162))
(assert (x447 x1775))
(assert (x447 x3174))
(assert (= x5277 (and (not x6267) x4077)))
(assert (= (and x3468 x6171) x6279))
(assert (= (and (not x3156) x1078) x852))
(assert (= x4396 (or (and x4555 x3356) (and (not x5562) x764))))
(assert (= (and x5185 x347) x1193))
(assert (= x775 (and x5710 x2796)))
(assert (= x1630 (and x1982 x3697)))
(assert (x447 x6359))
(assert (= x3892 (=> (and (= x3321 x5856) (= x4646 0)) x1015)))
(assert (x552 x2519))
(assert (= x3844 (and (not x281) x2423)))
(assert (x447 x5649))
(assert (= (x2338 (x5097 2542517689)) 2542517689))
(assert (= x2828 (and (not x4202) x5249)))
(assert (= (and (not x3079) x1380) x4077))
(assert (x447 x5054))
(assert (x447 x1287))
(assert (x447 x5644))
(assert (x447 x5531))
(assert (x447 x4026))
(assert (x3903 x3881))
(assert (x447 x5469))
(assert (= (and x3159 x5564) x96))
(assert (x447 x3110))
(assert (= (and x4872 x978) x1701))
(assert (x447 x5499))
(assert (x447 x1388))
(assert (x447 x1537))
(assert (x2992 x3043 (- x3216 x4506)))
(assert (= x1392 (and x2227 (not x4746))))
(assert (x54 x4535))
(assert (= x1347 (and (not x6129) x2303)))
(assert (= x6054 (and x4202 x5249)))
(assert (x447 x5756))
(assert (= x3188 (or (and x983 (not x5867)) (and x1824 x4480) (and x3274 (not x3986)))))
(assert (= (and x2276 (not x3289)) x2440))
(assert (x447 x3341))
(assert (= (and x3669 x5921) x3239))
(assert (x447 x5366))
(assert (x447 x2388))
(assert (= (and x1710 x4224) x6190))
(assert (= x1470 (and x5281 x2625)))
(assert (x447 x5107))
(assert (= (and x1448 x702) x5768))
(assert (= (=> (and (= x5946 x3596) (= 0 x1812)) x964) x6131))
(assert (x447 x5633))
(assert (= (and (not x5540) x4494) x6032))
(assert (= x2627 (and x4296 (not x3429))))
(assert (= x4855 (and x4546 x992)))
(assert (= (or x5246 x6086) x262))
(assert (= x6106 (=> (and (= x1747 x853) (= x5154 x3028)) x2568)))
(assert (x3903 x3851))
(assert (x447 x6020))
(assert (x447 x5772))
(assert (x447 x1188))
(assert (x3903 x3808))
(assert (= x3159 (and (not x624) x2128)))
(assert (x447 x4094))
(assert (= (=> (and (= x4437 x5896) (= x1765 x4201)) x342) x5952))
(assert (x447 x5420))
(assert (= x4585 (and x2137 x1345)))
(assert (x447 x1801))
(assert (x447 x5395))
(assert (= (and x4077 x6267) x4047))
(assert (= (x2338 (x1567 x2508)) x2508))
(assert (x447 x201))
(assert (x447 x3811))
(assert (x447 x2305))
(assert (= x1267 (and x4641 (not x810))))
(assert (x447 x5726))
(assert (x2992 x3043 (- x4398 x3216)))
(assert (x447 x2928))
(assert (= x3017 (and x4740 (not x6226))))
(assert (= (and (not x4997) x1105) x3181))
(assert (= x6137 (and x2634 (not x5717))))
(assert (=> (<= x4509 10000) (= (x1567 x4509) (x5097 x4509))))
(assert (x447 x2070))
(assert (= (and x4976 x5972) x1324))
(assert (= x269 (and x6061 (not x4205))))
(assert (x447 x5239))
(assert (= (and x4930 x1962) x286))
(assert (x447 x1204))
(assert (x447 x1405))
(assert (x447 x3032))
(assert (x447 x411))
(assert (x447 x2663))
(assert (= (=> (and (= x5602 x5054) (= x4072 x3803)) x162) x4273))
(assert (x1957 x4954 x611 x3043 x4398))
(assert (x447 x3029))
(assert (x447 x2203))
(assert (= x3894 (or x6276 x4266)))
(assert (x447 x2434))
(assert (= x1209 (and (not x4400) x3004)))
(assert (x447 x4165))
(assert (x3960 x3043 x4506 x2378 x3043))
(assert (x447 x2485))
(assert (x729 x2678))
(assert (x447 x4718))
(assert (x447 x2234))
(assert (= (=> (and (= x2521 x2010) (= x4772 x4638)) x3131) x1264))
(assert (x447 x2637))
(assert (x1957 x3043 x2378 x3216 x3043))
(assert (= x61 (and x3779 x4388)))
(assert (= x5625 (and x6059 x24)))
(assert (x3903 x1309))
(assert (= x1343 (and (not x573) x2050)))
(assert (x447 x1944))
(assert (x447 x1282))
(assert (x447 x5238))
(assert (x447 x1177))
(assert (= x2765 (and x4544 x1332)))
(assert (x447 x2586))
(assert (x3903 x2409))
(assert (= x690 (and x3294 (not x3860))))
(assert (x447 x1901))
(assert (x447 x2551))
(assert (x447 x311))
(assert (= (or x4950 x2224) x5650))
(assert (x447 x1595))
(assert (= x906 (and x6272 (not x502))))
(assert (x2118 x421 x351))
(assert (= (and x60 (not x3211)) x2316))
(assert (= x2223 (x2338 (x1567 x2223))))
(assert (x3960 x611 x4954 x3216 x3043))
(assert (x447 x1163))
(assert (= (and (not x2870) x5742) x5228))
(assert (x447 x1876))
(assert (= (and x2336 (not x842)) x200))
(assert (= x3158 (and x4054 x5792)))
(assert (= x4464 (and x2245 x2294)))
(assert (x447 x1376))
(assert (= (and x2577 (not x2871)) x2370))
(assert (=> (<= x3917 10000) (= (x1567 x3917) (x5097 x3917))))
(assert (x447 x493))
(assert (=> (<= x3285 10000) (= (x1567 x3285) (x5097 x3285))))
(assert (=> (<= x5669 10000) (= (x1567 x5669) (x5097 x5669))))
(assert (= (and x4448 (not x4716)) x3380))
(assert (= x6326 (and (not x5048) x2256)))
(assert (=> (>= 10000 x1088) (= (x1567 x1088) (x5097 x1088))))
(assert (= (and x6348 x2988) x3076))
(assert (x447 x6111))
(assert (x447 x1569))
(assert (x447 x2644))
(assert (x3903 x3801))
(assert (x447 x2691))
(assert (= (and x5321 x3463) x4986))
(assert (= x1216 (and x151 (not x1374))))
(assert (=> (<= x1353 10000) (= (x5097 x1353) (x1567 x1353))))
(assert (= (or x161 x3652 x1409 x3013 x5423 x3689) x3780))
(assert (x447 x6024))
(assert (x447 x4927))
(assert (x447 x1439))
(assert (x2992 x2378 x3043))
(assert (x447 x506))
(assert (x447 x896))
(assert (= (and x5911 x5656) x6292))
(assert (x447 x4410))
(assert (= (and x3616 x3487) x1689))
(assert (= (and (not x4147) x5227) x85))
(assert (x447 x2688))
(assert (= x4662 (or x521 x4570 x1394 x2482 x2028 x62 x5194 x3586 x2026 x3672 x4435 x5373 x4541 x1215 x2282 x1178 x1806 x2183)))
(assert (x447 x2829))
(assert (x447 x5210))
(assert (= x295 (or x2620 x1313)))
(assert (x447 x4158))
(assert (x3960 x4954 x611 x4506 x3043))
(assert (x447 x5528))
(assert (x447 x5090))
(assert (x447 x3722))
(assert (=> (<= x2638 10000) (= (x5097 x2638) (x1567 x2638))))
(assert (= (=> (and (or (and x5987 (and (= x1255 x2434) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1255) (<= 0 x1255))) (and (not x5987) (= x1944 x2434))) (and (= (x1849 x5614 10000) x1944) (>= x1255 0) (= x5987 (< x1255 x1944)) (<= x1255 115792089237316195423570985008687907853269984665640564039457584007913129639935))) x3478) x2671))
(assert (x447 x1356))
(assert (= x878 (=> (and (= x5557 0) (= x6222 x5946)) x4694)))
(assert (x447 x3696))
(assert (= (and x2333 x2260) x4084))
(assert (= (and x781 x4946) x1781))
(assert (= (and x3335 x898) x2403))
(assert (= x5586 (and (not x1601) x4828)))
(assert (= x3157 (=> (and (= x2584 x2323) (= x3142 0)) x3911)))
(assert (x447 x1353))
(assert (= (and x714 (not x3836)) x2433))
(assert (x447 x652))
(assert (x1957 x611 x4954 x3043 x6080))
(assert (=> (>= 10000 x2178) (= (x1567 x2178) (x5097 x2178))))
(assert (x447 x577))
(assert (x447 x5745))
(assert (= x6333 (and (not x1700) x5278)))
(assert (= x5942 (and x3493 (not x1042))))
(assert (x447 x3662))
(assert (= (x5097 122929932) (x1567 122929932)))
(assert (x447 x3482))
(assert (x3903 x5745))
(assert (= (or x408 x1084) x1293))
(assert (= x2333 (and (not x6246) x5715)))
(assert (= (and x2440 x4898) x5812))
(assert (x447 x2069))
(assert (= (and x2454 (not x2604)) x3337))
(assert (x447 x125))
(assert (x447 x2475))
(assert (= (and x1077 x1570) x1149))
(assert (= (x2338 (x1567 x4869)) x4869))
(assert (= (x5097 3674237557) (x1567 3674237557)))
(assert (x447 x4623))
(assert (x447 x3408))
(assert (= x2702 (=> (= (= 0 x4437) x3372) (and (=> x3372 x2633) (=> (and (= (or (and (< x4201 32) (= (<= x4201 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x4201 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x5442) (not x3372)) (and (=> (not x5442) x565) (=> x5442 x2633)))))))
(assert (x3903 x4908))
(assert (x447 x4698))
(assert (x447 x5901))
(assert (= x2021 (and x3112 x3498)))
(assert (= (and x3065 x3657) x763))
(assert (x447 x6167))
(assert (= x951 (and x475 (not x5724))))
(assert (x3903 x5679))
(assert (= (x2338 (x5097 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (= (x2338 (x1567 x1112)) x1112))
(assert (x447 x1760))
(assert (= x5532 (and (not x1109) x300)))
(assert (= (=> (and (= x5853 x47) (= x4290 x1769)) x6285) x3956))
(assert (x447 x5427))
(assert (x447 x4150))
(assert (x447 x824))
(assert (x54 x4836))
(assert (x447 x1521))
(assert (= x3531 (and x2765 (not x4667))))
(assert (x447 x3179))
(assert (= (and x5647 x2820) x5534))
(assert (x447 x2670))
(assert (x2992 x2378 (- x3043 x4954)))
(assert (x447 x5359))
(assert (x447 x1117))
(assert (x447 x5163))
(assert (= x4151 (and (not x718) x2965)))
(assert (= (=> (and (= x5946 x4302) (= 0 x1984)) x5376) x44))
(assert (= x4544 (and (not x1865) x3323)))
(assert (x447 x2367))
(assert (= x5226 (x2338 (x1567 x5226))))
(assert (x447 x1393))
(assert (x447 x6238))
(assert (x447 x4729))
(assert (x3903 x4720))
(assert (x447 x4705))
(assert (= (and x2204 x4824) x2650))
(assert (= (and x4619 (not x1118)) x6157))
(assert (x447 x6193))
(assert (= (or x6121 x5967) x4250))
(assert (= x5426 (and x1145 (not x1834))))
(assert (= (x5097 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x1567 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= x4732 (or x1523 x3188)))
(assert (= x4329 (and (not x1773) x3457)))
(assert (= (and x3485 (not x3363)) x466))
(assert (=> (>= 10000 x6254) (= (x1567 x6254) (x5097 x6254))))
(assert (x447 x5367))
(assert (= x1668 (and x1698 x5377)))
(assert (x447 x3864))
(assert (= x3491 (and x3051 x5511)))
(assert (x447 x1587))
(assert (= (x2338 (x1567 x3801)) x3801))
(assert (x447 x4101))
(assert (x447 x3484))
(assert (= (and x5088 x748) x6311))
(assert (= x4703 (and x2376 (not x1512))))
(assert (x447 x5006))
(assert (x54 x5066))
(assert (x447 x4319))
(assert (= (or x3695 x2244) x3912))
(assert (x447 x4859))
(assert (= x1705 (x2338 (x1567 x1705))))
(assert (x447 x5758))
(assert (= (and x4316 x5215) x6241))
(assert (=> (>= 10000 x1132) (= (x1567 x1132) (x5097 x1132))))
(assert (= x868 (and x3727 x3795)))
(assert (x447 x2354))
(assert (x447 x5012))
(assert (x1957 x3043 x3216 x3043 x4398))
(assert (x1990 x3869))
(assert (= (=> (and (= x284 0) (= x2999 x3679)) x1027) x2959))
(assert (x2992 x611 (- x4954 x6080)))
(assert (x447 x12))
(assert (x447 x6155))
(assert (x447 x2283))
(assert (= (and x4269 x5015) x4822))
(assert (x3903 x3128))
(assert (= x1682 (and x4426 (not x3342))))
(assert (= (and x34 x2809) x864))
(assert (x447 x4913))
(assert (x447 x2123))
(assert (x3903 x5713))
(assert (= (=> (and (= x3113 0) (= x5325 x2825)) x3194) x1787))
(assert (= (and x2371 (not x18)) x4306))
(assert (=> (<= x5226 10000) (= (x1567 x5226) (x5097 x5226))))
(assert (= (and x4519 x2854) x3622))
(assert (x447 x5491))
(assert (x447 x1559))
(assert (x447 x5749))
(assert (= x3672 (and x3504 (not x5881))))
(assert (x447 x4082))
(assert (x447 x3981))
(assert (= x5327 (or (and x4563 x1907) (and x518 (not x3147)))))
(assert (= x1322 (and x1963 x4832)))
(assert (= x2968 (and (not x1276) x791)))
(assert (x447 x3745))
(assert (= (and (not x2737) x5525) x805))
(assert (= (=> (and (= x5946 x3196) (= x3659 0)) x1670) x6304))
(assert (x447 x5086))
(assert (x447 x3806))
(assert (x447 x2285))
(assert (= x3512 (=> (and (or x3339 (not x3339)) (= x3339 (= 0 x5006))) x3364)))
(assert (= (and x2072 x3511) x4916))
(assert (= (and (not x2357) x4151) x6272))
(assert (x447 x3501))
(assert (x447 x4086))
(assert (x447 x1404))
(assert (x447 x4660))
(assert (= (x2338 (x1567 x3808)) x3808))
(assert (x447 x3171))
(assert (x447 x1249))
(assert (x447 x94))
(assert (= (and x3363 x3485) x4695))
(assert (= (and x4068 x3992) x1400))
(assert (x447 x5826))
(assert (= (x1567 82641394424300342035733052706735002277943222088490025348945809093694544936960) (x5097 82641394424300342035733052706735002277943222088490025348945809093694544936960)))
(assert (x3903 x535))
(assert (= x3038 (or (and x3037 x6058) x685 (and x3536 (not x2483)) x2431)))
(assert (=> (>= 10000 x2223) (= (x1567 x2223) (x5097 x2223))))
(assert (= x2166 (and x173 x2044)))
(assert (x447 x3614))
(assert (x3903 x1708))
(assert (x447 x5416))
(assert (= (and (not x963) x4305) x2466))
(assert (= (and x4329 (not x912)) x124))
(assert (= x1227 (and x5069 x1414)))
(assert (= (=> (and (= x6142 x5736) (= x720 x3286)) x3544) x1420))
(assert (x5592 (- x3216 x2378)))
(assert (= x1222 (or x5612 x3310)))
(assert (x447 x416))
(assert (x447 x4481))
(assert (= x2851 (=> (and (= x3679 x838) (= 0 x5498)) x3451)))
(assert (= (and (not x6021) x2751) x2490))
(assert (= (x1567 3329172565) (x5097 3329172565)))
(assert (x447 x4206))
(assert (x447 x900))
(assert (x447 x5512))
(assert (= x4110 (and x954 (not x1613))))
(assert (= x983 (and x3274 x3986)))
(assert (= x2771 (and x5674 x913)))
(assert (= x3472 (=> (= (< x1644 115792089237316195423570985008687907853269984665640564039457584007913129639935) x783) (and (=> (not x783) x3369) (=> (and x783 (= x2044 (> x3216 x1644))) (and (=> x2044 x467) (=> (and (not x2044) (= x2377 (> x3216 x1644))) (and (=> x2377 x467) (=> (and (and (= (x980 (- x1644 x3216)) x2916) (= (x476 (x1567 x4332) x1841 0) x6206) (= (x476 (x1567 x1112) (x5097 5) 0) x1841)) (not x2377)) x3369)))))))))
(assert (x3903 x4869))
(assert (= x4211 (and x5828 (not x6318))))
(assert (x3960 x2378 x3043 x4954 x611))
(assert (= x759 (and x6018 x2337)))
(assert (= (and x215 (not x212)) x2576))
(assert (= x4618 (or x4792 x6311 x1158 x3283 x6125 x3755 x5428 x854 x478)))
(assert (x3903 x3930))
(assert (= x4177 (and x2502 x808)))
(assert (= x1449 (and x887 x4408)))
(assert (x447 x5681))
(assert (= x1365 (and x2561 (not x5410))))
(assert (x447 x3233))
(assert (x447 x1268))
(assert (= x1704 (or x5711 x1923)))
(assert (x447 x5205))
(assert (x447 x536))
(assert (=> (>= 10000 x5255) (= (x1567 x5255) (x5097 x5255))))
(assert (x447 x66))
(assert (x447 x2279))
(assert (= (and x3159 (not x5564)) x4002))
(assert (x447 x1097))
(assert (= x2188 (and x4558 x3569)))
(assert (x447 x409))
(assert (x3903 x523))
(assert (x447 x1842))
(assert (= x3601 (x2338 (x1567 x3601))))
(assert (= x2199 (and x263 x5909)))
(assert (= x1570 (or x3014 (and x1213 x2213))))
(assert (= (and x2024 x2491) x6335))
(assert (= x237 (and x5704 (not x1413))))
(assert (and (x5609 x273 1461501637330902918203684832716283019655932542976) (x4601 x273 1461501637330902918203684832716283019655932542976) (x301 x273 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x273 1461501637330902918203684832716283019655932542976) (* (x1849 x273 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x273))))
(assert (x447 x4393))
(assert (= x5407 (and x1898 x2523)))
(assert (= 669136355 (x2338 (x5097 669136355))))
(assert (= x142 (=> (and (= x3579 0) (= x1551 x3088)) x4422)))
(assert (= x3175 (x2338 (x1567 x3175))))
(assert (= x1975 (=> (and (= x4437 x865) (= x4553 x4201)) x342)))
(assert (x447 x1754))
(assert (x447 x4851))
(assert (x447 x1726))
(assert (= x2200 (and x390 (not x3287))))
(assert (= (x2338 (x5097 953495055)) 953495055))
(assert (x447 x1658))
(assert (= (and (not x2438) x2891) x1942))
(assert (= (x2338 (x5097 1545185628)) 1545185628))
(assert (= (and (not x3897) x1274) x4435))
(assert (= x2376 (and (not x137) x874)))
(assert (= (and x339 (not x160)) x3278))
(assert (x1957 x3043 x6080 x3043 x3216))
(assert (x1957 x4506 x3043 x611 x4954))
(assert (= x3229 (and (not x1698) x5377)))
(assert (= (and x2728 x485) x2651))
(assert (= x4973 (and (not x1448) x702)))
(assert (= (and (not x3947) x5902) x3630))
(assert (x1957 x3043 x4398 x4506 x3043))
(assert (= x1257 (and x987 x4065)))
(assert (= (x2338 (x1567 x1708)) x1708))
(assert (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x2338 (x5097 20853193852723734048814770637610870652489083209607696777694672748161462697984))))
(assert (x447 x2222))
(assert (x447 x3349))
(assert (x447 x4655))
(assert (x447 x2611))
(assert (= (and (not x3476) x1144) x2335))
(assert (x447 x6087))
(assert (x3960 x3043 x4398 x3216 x3043))
(assert (= (and x6243 (not x457)) x786))
(assert (= x3966 (and (not x1332) x4544)))
(assert (x447 x4389))
(assert (= x1344 (and x4255 x2592)))
(assert (x447 x1438))
(assert (= (=> (and (= 0 x4729) (= x5816 x1457)) x1593) x655))
(assert (= (=> (= x5329 (< x4506 x2208)) (and (=> x5329 x5849) (=> (and (= x1582 (> x2208 x4506)) (not x5329)) (and (=> x1582 x5849) (=> (and (and (= (x1028 x1312) x436) (= (x350 1461501637330902918203684832716283019655932542975 x459) x1181) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x436) (<= 0 x436) (= (x980 (- x4506 x2208)) x2781) (= (x476 (x1567 x1181) (x5097 2) 0) x1312) (= x972 (> x4506 x436))) (not x1582)) (and (=> x972 x5849) (=> (and (= x485 (> x4506 x436)) (not x972)) (and (=> x485 x5849) (=> (and (not x485) (and (= (x350 1461501637330902918203684832716283019655932542975 x459) x5286) (>= x1537 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1537) (= x4860 (> x1537 x5077)) (= x3253 (x476 (x1567 x4869) (x5097 2) 0)) (= x1537 (x3520 x3253)) (= x5077 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2781))) (= x103 (x476 (x1567 x5286) (x5097 2) 0)) (= (x980 (- x436 x4506)) x1934))) (and (=> (and (not x4860) (and (= x3685 (x4937 (+ x2781 x1537))) (= (< x3685 x1537) x3963))) (and (=> (and (and (= x5193 (< 0 x2208)) (= (x476 (x1567 x4869) (x5097 2) 0) x2094)) (not x3963)) (and (=> (and x5193 (and (= x5471 (x6274 x1207)) (>= x5679 0) (= x2251 (> x5471 x3488)) (<= x5679 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x5679) (>= x5471 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5471) (= x1207 (x476 (x1567 x5679) (x5097 2) 0)) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2208)) x3488))) (and (=> (and (not x2251) (and (= x2657 (< x21 x5471)) (= x21 (x4937 (+ x2208 x5471))))) (and (=> x2657 x5849) (=> (and (not x2657) (and (= (x476 (x1567 x5679) (x5097 2) 0) x168) (<= x5679 1461501637330902918203684832716283019655932542975) (< x5679 1461501637330902918203684832716283019655932542976) (>= x5679 0) (< x5679 1461501637330902918203684832716283019655932542976) (<= 0 x5679) (>= 1461501637330902918203684832716283019655932542975 x5679))) x2456))) (=> x2251 x5849))) (=> (not x5193) x2456))) (=> x3963 x5849))) (=> x4860 x5849))))))))))) x3336))
(assert (x1957 x4954 x611 x3216 x3043))
(assert (x447 x152))
(assert (= x1399 (=> (and (= x3941 x6042) (= x1248 x5006)) x3512)))
(assert (= x3713 (x2338 (x1567 x3713))))
(assert (= x2303 (and x3359 x1548)))
(assert (x447 x373))
(assert (= x3026 (=> (and (= x3408 x4290) (= x5853 x5930)) x6285)))
(assert (= x1123 (and x4856 (not x6248))))
(assert (x2992 x611 (- x4954 x4506)))
(assert (x447 x6042))
(assert (x447 x431))
(assert (= (and x3556 x2200) x4917))
(assert (= x601 (or (and x441 x5477) (and (not x1151) x610) (and x1713 x2447) (and x50 x1534))))
(assert (= (and x1458 (not x4799)) x1318))
(assert (= (and (not x1859) x4002) x1057))
(assert (= x141 (and x5312 x2649)))
(assert (= (and x4667 x2765) x2358))
(assert (x447 x4852))
(assert (x447 x798))
(assert (x3903 x3415))
(assert (= (and x3876 x3045) x3760))
(assert (= (and x2258 x5372) x943))
(assert (= x3004 (and x1659 (not x4089))))
(assert (x447 x55))
(assert (x447 x5026))
(assert (x447 x3488))
(assert (x447 x1292))
(assert (x447 x4398))
(assert (and (x5609 x1477 1461501637330902918203684832716283019655932542976) (x4601 x1477 1461501637330902918203684832716283019655932542976) (x301 x1477 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x1477 1461501637330902918203684832716283019655932542976) (* (x1849 x1477 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x1477))))
(assert (= x3743 (and x5798 x3637)))
(assert (x447 x1135))
(assert (x447 x5041))
(assert (x447 x4934))
(assert (= (=> (and (= 0 x2235) (= x4093 x2584)) x4001) x2366))
(assert (x447 x153))
(assert (x552 x1103))
(assert (= x1903 (and x2349 x5903)))
(assert (= 3590908516 (x2338 (x5097 3590908516))))
(assert (x447 x6008))
(assert (= (and x2523 (not x1898)) x721))
(assert (x447 x365))
(assert (= (or x3320 x4743) x3405))
(assert (= x2371 (and x156 x4885)))
(assert (x447 x2825))
(assert (x447 x2535))
(assert (x5592 (- x4506 x3043)))
(assert (x447 x523))
(assert (= (and x4863 x509) x6051))
(assert (= (and x1476 x3347) x4563))
(assert (x3903 x277))
(assert (x447 x2712))
(assert (x447 x3094))
(assert (x447 x4234))
(assert (x447 x835))
(assert (x447 x1638))
(assert (x3903 x2280))
(assert (= x3503 (x2338 (x1567 x3503))))
(assert (x447 x3516))
(assert (x447 x779))
(assert (= (x2338 (x5097 3600075382)) 3600075382))
(assert (= (and x466 (not x5306)) x5233))
(assert (x3903 x67))
(assert (= (and (not x1872) x1164) x3407))
(assert (= (or x1113 x2480 x5004 x537 x4966 x4928 x5170 x149 x1899 x4925 x5136) x5046))
(assert (= (=> (and (= x6101 0) (= x3767 x5816)) x5510) x5699))
(assert (x447 x5078))
(assert (x447 x4892))
(assert (x2992 x611 (- x4954 x2378)))
(assert (= (=> (and (= x6277 x2770) (= x2538 0)) x5799) x4355))
(assert (x447 x1197))
(assert (= (=> (and (= x3579 x1747) (= x5154 x3088)) x2568) x4422))
(assert (x1990 x778))
(assert (x447 x3769))
(assert (x5592 (- x6080 x4954)))
(assert (= (or x505 x5720 x5595 x5802 x1497 x3654 x5096 x89 x6230) x2473))
(assert (x447 x4442))
(assert (= x2708 (and x4212 x956)))
(assert (= (and x263 (not x5909)) x5731))
(assert (= (and x1175 x1415) x4021))
(assert (x5592 (- x3216 x4398)))
(assert (x1990 x3064))
(assert (x447 x1860))
(assert (= x4940 (and x3633 (not x1695))))
(assert (= (x2338 (x5097 716570693)) 716570693))
(assert (= (or (and x4677 (not x2499)) (and x1087 x1738)) x5897))
(assert (x447 x3220))
(assert (= x1880 (or x5450 x3506)))
(assert (and (x5609 x5600 256) (x4601 x5600 256) (x301 x5600 256) (=> (> 256 0) (= (+ (x474 x5600 256) (* (x1849 x5600 256) 256)) x5600))))
(assert (= (=> (and (= x3167 x4772) (= x2521 x3732)) x3131) x4887))
(assert (= (and x6029 (not x1450)) x3517))
(assert (= x6023 (and x4967 x1503)))
(assert (x447 x1939))
(assert (x447 x4909))
(assert (= (or x4895 x1362) x2641))
(assert (x447 x5018))
(assert (= x3559 (or x4802 x5434)))
(assert (x447 x3601))
(assert (= (=> (and (and (= (> x4788 x1255) x3827) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1255) (<= 0 x1255) (= x4788 (x1849 x4169 10000))) (or (and (= x4788 x4669) (not x3827)) (and (and (= x1255 x4669) (>= x1255 0) (<= x1255 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x3827))) x2757) x762))
(assert (= x492 (and x3698 x4167)))
(assert (= (and (not x6229) x4074) x1717))
(assert (x447 x6251))
(assert (= (and x2898 x2657) x1995))
(assert (= (or x5878 x1563) x2907))
(assert (= (and x5891 x1609) x347))
(assert (= x1122 (and x860 x1371)))
(assert (x2992 x4398 x3043))
(assert (x447 x3686))
(assert (= (or x1289 x302 x5584 x2009 x4883 x2372 x6223 x5102 x4229) x3557))
(assert (x447 x5297))
(assert (= (and x3311 x2058) x3317))
(assert (= x3230 (=> (and (= x3941 32) (= x1248 1)) x1399)))
(assert (and (x5609 x4309 1461501637330902918203684832716283019655932542976) (x4601 x4309 1461501637330902918203684832716283019655932542976) (x301 x4309 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x4309 1461501637330902918203684832716283019655932542976) (* (x1849 x4309 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x4309))))
(assert (= (and (not x645) x2872) x1075))
(assert (= (and x1844 x4714) x2006))
(assert (= (and (not x2820) x5647) x4011))
(assert (= x3705 (or x5178 x5518 x2403 x4177 x1108 x2051 x226 x4397 x2742)))
(assert (x447 x2642))
(assert (= (and x6292 (not x2042)) x1310))
(assert (x1990 x2678))
(assert (x447 x4187))
(assert (= x5421 (and x3684 x4450)))
(assert (x447 x2878))
(assert (=> (<= x1705 10000) (= (x5097 x1705) (x1567 x1705))))
(assert (x447 x6099))
(assert (x447 x3624))
(assert (= (and x1322 (not x2152)) x2385))
(assert (= x5000 (and x690 x1681)))
(assert (x447 x1320))
(assert (= (and (not x308) x2619) x3493))
(assert (= x1542 x3230))
(assert (= (and x4342 x4182) x2512))
(assert (x447 x979))
(assert (= (and x3742 x2641) x2350))
(assert (= x2281 (and x570 x5334)))
(assert (x447 x6298))
(assert (= (x2338 (x5097 2835717307)) 2835717307))
(assert (= (=> (and (= x4395 x5774) (= 0 x2425)) x402) x1219))
(assert (x447 x3441))
(assert (x447 x1169))
(assert (= x2282 (and x126 (not x1098))))
(assert (x3903 x3141))
(assert (= x5025 (and (not x1609) x5891)))
(assert (= (and x5928 x2949) x6151))
(assert (= (and x1038 x3360) x1451))
(assert (and (x5609 x4357 256) (x4601 x4357 256) (x301 x4357 256) (=> (> 256 0) (= (+ (x474 x4357 256) (* (x1849 x4357 256) 256)) x4357))))
(assert (x447 x451))
(assert (= x2607 (and x2385 x4803)))
(assert (x447 x6227))
(assert (= (=> (and (= 0 x2554) (= x2544 x3870)) x4554) x4800))
(assert (x3903 x4332))
(assert (x447 x4605))
(assert (=> (>= 10000 x4720) (= (x1567 x4720) (x5097 x4720))))
(assert (x447 x923))
(assert (x447 x3747))
(assert (= (and x275 (not x3646)) x5227))
(assert (=> (<= x5679 10000) (= (x5097 x5679) (x1567 x5679))))
(assert (= (=> (and (= x2676 x2982) (= x3399 x4964)) x1529) x794))
(assert (= x2213 (and x4299 x6234)))
(assert (= (and x3996 x6090) x1458))
(assert (= 649617121 (x2338 (x5097 649617121))))
(assert (= (or x1951 x770 x4192 x3265 x3588 x5189 x5978 x3027) x2542))
(assert (x447 x4825))
(assert (= x2697 (and x4580 x3040)))
(assert (x447 x4991))
(assert (x1990 x4309))
(assert (= (and x1277 x4010) x2808))
(assert (x447 x2686))
(assert (= (and (not x1681) x690) x3311))
(assert (x447 x356))
(assert (= (=> (and (= x3399 x4434) (= x4265 x2676)) x1529) x2501))
(assert (= x5222 (x2338 (x1567 x5222))))
(assert (x447 x6003))
(assert (= (and (not x6219) x2397) x2796))
(assert (= x5083 (or x3780 x5892)))
(assert (= (x2338 (x5097 773487949)) 773487949))
(assert (= x5794 (and x3407 x1794)))
(assert (= (x2338 (x1567 x5547)) x5547))
(assert (x447 x3872))
(assert (= (and x1318 x2666) x4382))
(assert (= (and x587 (not x1979)) x2643))
(assert (= x4908 (x2338 (x1567 x4908))))
(assert (= x4073 (and x3034 (not x639))))
(assert (x5592 x611))
(assert (x447 x1885))
(assert (= x2035 (=> (and (= x4395 x5113) (= x3948 0)) x4781)))
(assert (x1628 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6080))
(assert (x447 x5943))
(assert (= x3514 (and x2312 x3297)))
(assert (= (and x3413 x3758) x4856))
(assert (x447 x6101))
(assert (= (and x3289 x2276) x4735))
(assert (x447 x709))
(assert (x447 x3596))
(assert (x447 x3608))
(assert (x447 x4747))
(assert (= x4824 (and x5490 x4993)))
(assert (x447 x3886))
(assert (= x5773 (and (not x1511) x1429)))
(assert (x1990 x541))
(assert (x447 x3043))
(assert (x447 x6187))
(assert (= x4218 (or x2114 x6117)))
(assert (x447 x5574))
(assert (x1957 x3043 x4398 x3216 x3043))
(assert (x5592 (- x3043 x4506)))
(assert (x447 x918))
(assert (= (and x2696 x4749) x382))
(assert (= (and x3584 (not x2917)) x1305))
(assert (= x5953 (and x3177 x5601)))
(assert (= (=> (and (= x5736 x2263) (= x1474 x720)) x3544) x1101))
(assert (= (and (not x3521) x6286) x3846))
(assert (= (=> (and (= x5736 x4597) (= x2857 x720)) x3544) x3400))
(assert (= x3185 (=> (and (= x482 x4644) (= x3019 x5685)) x4298)))
(assert (x447 x6205))
(assert (x447 x2733))
(assert (=> (>= 10000 x2733) (= (x5097 x2733) (x1567 x2733))))
(assert (x447 x1474))
(assert (x447 x1436))
(assert (x447 x1887))
(assert (x1990 x1638))
(assert (=> (<= x4126 10000) (= (x1567 x4126) (x5097 x4126))))
(assert (= (and (not x1581) x1165) x6181))
(assert (= x5785 (or (and x4493 (not x1341)) x2383)))
(assert (= (and x667 x3580) x5094))
(assert (= x3855 (and x1070 x305)))
(assert (x447 x3113))
(assert (= x258 (=> (and (= x4772 x32) (= x2521 x1680)) x3131)))
(assert (x447 x2731))
(assert (= x104 (and x3197 (not x2685))))
(assert (= (and x274 x773) x3180))
(assert (x447 x2979))
(assert (x3903 x3438))
(assert (x447 x6262))
(assert (=> (<= x5751 10000) (= (x5097 x5751) (x1567 x5751))))
(assert (x447 x1230))
(assert (x2992 x6080 (- x3043 x4506)))
(assert (= x5877 (and (not x4226) x5412)))
(assert (x447 x6299))
(assert (x447 x67))
(assert (= (x2338 (x1567 x2178)) x2178))
(assert (= (or x3557 x5247) x1262))
(assert (= x2037 (or x4635 x2437)))
(assert (x447 x670))
(assert (= (and x3281 x1343) x1289))
(assert (x1990 x2580))
(assert (= x2102 (and x1072 x2865)))
(assert (x2992 x4954 (- x611 x3043)))
(assert (= (and x1434 x3386) x4186))
(assert (= (and x5417 x1283) x5673))
(assert (= x198 (and (not x3992) x4068)))
(assert (x447 x2631))
(assert (= (=> (and (= x4072 x1829) (= x4566 x5054)) x162) x5152))
(assert (and (x5609 x1901 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4601 x1901 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x301 x1901 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x474 x1901 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1849 x1901 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1901))))
(assert (=> (>= 10000 x333) (= (x1567 x333) (x5097 x333))))
(assert (= x6325 (and x3523 (not x5591))))
(assert (= (and (not x4036) x6367) x3008))
(assert (= x2114 (or x3461 x135 x2509 x1419 x468 x1579)))
(assert (x447 x1743))
(assert (= x2078 (and x5671 x3845)))
(assert (x447 x3562))
(assert (x1990 x1308))
(assert (x447 x4804))
(assert (= (x2338 (x1567 x3473)) x3473))
(assert (x447 x3443))
(assert (x3903 x2223))
(assert (= x5929 (=> (and (and (<= x1255 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1255) (= x1862 (x1849 x511 10000)) (= x2294 (< x1255 x1862))) (or (and (not x2294) (= x1862 x2208)) (and (and (= x1255 x2208) (>= x1255 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1255)) x2294))) x3041)))
(assert (x447 x6150))
(assert (= x5769 (or x1867 x353 x596 x5670 x6328 x7 x6241 x5374 x4958)))
(assert (x447 x4592))
(assert (= x2424 (and x2449 x2466)))
(assert (=> (<= x3184 10000) (= (x5097 x3184) (x1567 x3184))))
(assert (x447 x4290))
(assert (= (=> (and (= x5154 x5544) (= x1747 x1492)) x2568) x2269))
(assert (x447 x4910))
(assert (x447 x3361))
(assert (= x3051 (and x6017 (not x1647))))
(assert (x447 x3594))
(assert (= x4533 (or x855 x1734 x2006 x4492 x786 x199 x3739 x396 x6190 x80 x5543 x2543 x2527)))
(assert (x447 x4171))
(assert (= (or (and (not x1953) x3469) (and x1757 (not x1119)) (and x3763 x5421)) x4121))
(assert (= (x2338 (x1567 x1495)) x1495))
(assert (x447 x6196))
(assert (= x2375 (and x4794 (not x5945))))
(assert (x447 x6040))
(assert (= (and x1668 (not x3474)) x4451))
(assert (= (and x3079 x1380) x4352))
(assert (x447 x4139))
(assert (= x894 (and (not x4185) x728)))
(assert (= (and x5742 x2870) x854))
(assert (= (x2338 (x1567 x523)) x523))
(assert (= 2987494029 (x2338 (x5097 2987494029))))
(assert (= x713 (and x5780 x3298)))
(assert (x447 x3300))
(assert (x447 x1869))
(assert (= (=> (and (= x2550 x2662) (= x1983 x3343)) x246) x4981))
(assert (= x3224 (or x4464 x5177)))
(assert (= x4391 (and x2031 x2078)))
(assert (= x4502 (or x3038 x2845)))
(assert (= x5831 (and x2921 x739)))
(assert (= x24 (and x1675 (not x1820))))
(assert (= x430 (and x6257 (not x1949))))
(assert (x5383 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x447 x2091))
(assert (x447 x2803))
(assert (x447 x697))
(assert (x447 x307))
(assert (x447 x6178))
(assert (= (and x4078 x2352) x1631))
(assert (x3903 x5772))
(assert (= (and x4128 x245) x2843))
(assert (= (=> (and (= 0 x3220) (= x1551 x4374)) x4291) x5073))
(assert (= x5799 (=> (and (= x4201 x2770) (= x4437 x2538)) x342)))
(assert (x447 x1972))
(assert (x447 x3778))
(assert (= x4938 (and x2978 x1914)))
(assert (x447 x3039))
(assert (= (and x4916 (not x6115)) x1792))
(assert (x447 x5816))
(assert (x447 x6145))
(assert (x3903 x315))
(assert (=> (>= 10000 x2020) (= (x1567 x2020) (x5097 x2020))))
(assert (x1990 x1096))
(assert (x447 x3985))
(assert (= x1959 (and x1318 (not x2666))))
(assert (= x5727 (x2338 (x1567 x5727))))
(assert (x447 x182))
(assert (= (and x1931 x5426) x5711))
(assert (= (and x2636 x5922) x5947))
(assert (= (and x3876 (not x3045)) x1473))
(assert (x447 x3943))
(assert (x447 x1447))
(assert (= x3370 (and x1689 (not x3753))))
(assert (x447 x6110))
(assert (= x5450 (and x1442 x4211)))
(assert (and (x5609 x778 1461501637330902918203684832716283019655932542976) (x4601 x778 1461501637330902918203684832716283019655932542976) (x301 x778 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x778 1461501637330902918203684832716283019655932542976) (* (x1849 x778 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x778))))
(assert (= x1253 (and x5334 (not x570))))
(assert (x447 x5535))
(assert (= x1009 (and x4350 x2961)))
(assert (= x2310 (and x1737 (not x5346))))
(assert (x447 x1765))
(assert (= (and x2932 x1373) x3805))
(assert (= x3265 (and x4690 x2266)))
(assert (x1990 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x447 x4972))
(assert (x447 x641))
(assert (x447 x5930))
(assert (= (x5097 157198259) (x1567 157198259)))
(assert (= x4574 (or x6289 x3885 x2257 x4394 x984 x4814 x1903 x5666 x96)))
(assert (x447 x4811))
(assert (= (x2338 (x1567 x5669)) x5669))
(assert (= x5344 (and x2048 (not x5875))))
(assert (x447 x889))
(assert (= x4619 (and (not x4427) x4168)))
(assert (= (and x5586 x5101) x5434))
(assert (x447 x3141))
(assert (= x3247 (x2338 (x1567 x3247))))
(assert (= (and x3587 x2706) x6057))
(assert (= (or x4918 x735) x325))
(assert (x447 x3256))
(assert (x447 x4062))
(assert (= (=> (and (= x1983 x4067) (= x2550 x6336)) x246) x2714))
(assert (x447 x5122))
(assert (x447 x178))
(assert (x447 x2263))
(assert (= x731 (or x507 x3690 x2110 x2081 x4752 x806 x2468 x5983 x2591)))
(assert (=> (>= 10000 x170) (= (x1567 x170) (x5097 x170))))
(assert (x447 x4120))
(assert (x447 x3175))
(assert (= x5653 x565))
(assert (x447 x3950))
(assert (= (or (and x5403 x6284) (and x4899 (not x5520))) x595))
(assert (x447 x5833))
(assert (x447 x5212))
(assert (x447 x5349))
(assert (x1957 x3043 x6080 x4506 x3043))
(assert (= (and x5337 x4488) x3633))
(assert (x447 x4302))
(assert (= (and x502 x6272) x5055))
(assert (=> (<= x6150 10000) (= (x1567 x6150) (x5097 x6150))))
(assert (x447 x6022))
(assert (x447 x873))
(assert (=> (<= x1569 10000) (= (x5097 x1569) (x1567 x1569))))
(assert (= (x2338 (x1567 x6003)) x6003))
(assert (x447 x1565))
(assert (= x1853 (and x6332 x2040)))
(assert (= x4462 (and x3779 (not x4388))))
(assert (= x6150 (x2338 (x1567 x6150))))
(assert (= x4431 (and x4912 x949)))
(assert (x447 x1707))
(assert (x447 x1856))
(assert (x447 x1308))
(assert (x447 x3740))
(assert (= (x1567 2987494029) (x5097 2987494029)))
(assert (x447 x616))
(assert (x447 x3784))
(assert (x447 x2962))
(assert (x3960 x3043 x4506 x6080 x3043))
(assert (= x1158 (and (not x583) x3792)))
(assert (= (x1567 903454517) (x5097 903454517)))
(assert (= (and (not x588) x298) x5178))
(assert (x1957 x4506 x3043 x3043 x6080))
(assert (x447 x1745))
(assert (= x4838 (=> (and (= x5154 x1376) (= x1747 x788)) x2568)))
(assert (= x115 (and x382 (not x448))))
(assert (= x5521 (and x3421 x4107)))
(assert (= x3439 (and x1536 (not x5691))))
(assert (= x3598 (=> (and (= x2305 x3679) (= x683 0)) x3707)))
(assert (=> (<= x328 10000) (= (x1567 x328) (x5097 x328))))
(assert (= (and (not x349) x1904) x1311))
(assert (x447 x631))
(assert (= (and x3549 x4552) x3676))
(assert (x447 x4706))
(assert (and (x5609 x3401 1461501637330902918203684832716283019655932542976) (x4601 x3401 1461501637330902918203684832716283019655932542976) (x301 x3401 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x3401 1461501637330902918203684832716283019655932542976) (* (x1849 x3401 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x3401))))
(assert (= x1294 (=> (= x1511 (= x1747 0)) (and (=> x1511 x2633) (=> (and (not x1511) (= (or (> x5154 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x5154) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5154)))) x5414)) (and (=> x5414 x2633) (=> (not x5414) x1542)))))))
(assert (x447 x6007))
(assert (x3903 x1282))
(assert (=> (<= x1469 10000) (= (x1567 x1469) (x5097 x1469))))
(assert (x2992 x3043 (- x3216 x6080)))
(assert (= (and (not x1251) x3063) x4748))
(assert (x447 x1478))
(assert (x447 x2016))
(assert (x447 x1157))
(assert (x447 x5560))
(assert (= 3573918927 (x2338 (x5097 3573918927))))
(assert (x447 x4823))
(assert (x2992 x3043 (- x6080 x4506)))
(assert (= (and x2898 (not x2657)) x1479))
(assert (= (and (not x4768) x3190) x2911))
(assert (x447 x5880))
(assert (= x4731 (and x5332 (not x3518))))
(assert (= (and x4032 x712) x2515))
(assert (= (and x2411 (not x4778)) x3310))
(assert (x729 x5906))
(assert (x54 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x447 x1771))
(assert (x1957 x6080 x3043 x3043 x3216))
(assert (x447 x5719))
(assert (x447 x2508))
(assert (x447 x5766))
(assert (= x1054 (or x4625 x2760 x6212 x4080 x2990 x3377 x5117 x2133 x1502 x2515 x3303 x771)))
(assert (= x5886 (=> (and (= x5853 x4858) (= x2574 x4290)) x6285)))
(assert (= x2830 (=> (and (= x1747 x936) (= x5154 x4045)) x2568)))
(assert (x447 x3355))
(assert (= (and x4805 x5517) x2075))
(assert (= x1496 (or x1263 x5991)))
(assert (x1957 x2378 x3043 x3043 x3216))
(assert (x3960 x3043 x4506 x3216 x3043))
(assert (= (and (not x5501) x2930) x3459))
(assert (= x3690 (and x1266 x2424)))
(assert (= x4129 (and x4296 x3429)))
(assert (= x507 (and (not x6113) x2267)))
(assert (x1957 x611 x4954 x3043 x4506))
(assert (x447 x4977))
(assert (x447 x145))
(assert (= (=> (and (= x4067 x715) (= x6336 0)) x2714) x169))
(assert (x447 x5537))
(assert (x447 x1764))
(assert (x447 x1206))
(assert (= (or x6204 x5192 x5432 x4031 x3606 x38 x1496 x2984 x4602 x5071 x4331) x2271))
(assert (x447 x2093))
(assert (x447 x5686))
(assert (= (and x1037 x5695) x5194))
(assert (= (and (not x6026) x578) x6203))
(assert (x1957 x3043 x4398 x611 x4954))
(assert (= x610 (and x2447 (not x1713))))
(assert (x3903 x328))
(assert (= x2713 (and x4455 (not x5100))))
(assert (x2992 x611 (- x4954 x4398)))
(assert (x447 x2010))
(assert (x447 x6368))
(assert (= (x2338 (x1567 x333)) x333))
(assert (= (and x3880 x4166) x3485))
(assert (x447 x4775))
(assert (= (=> (and (= x679 x2584) (= x2943 0)) x4963) x1810))
(assert (x447 x5148))
(assert (x447 x1339))
(assert (x447 x3231))
(assert (= (=> (and (= 0 x4566) (= x3321 x1829)) x5152) x5355))
(assert (x447 x3321))
(assert (x447 x2410))
(assert (x447 x1337))
(assert (= x5514 (and x329 (not x57))))
(assert (x3903 x5067))
(assert (= x158 (and x6354 x5594)))
(assert (x3903 x411))
(assert (x447 x6320))
(assert (x54 x1103))
(assert (x447 x5679))
(assert (= (and x1267 (not x5663)) x5585))
(assert (x447 x3898))
(assert (x552 x494))
(assert (x447 x5222))
(assert (x447 x4164))
(assert (= (or (and x2179 x132) (and x6183 (not x1231))) x1935))
(assert (= (x2338 (x5097 2681229421)) 2681229421))
(assert (x3903 x5480))
(assert (= (=> (and (and (not (= 0 x5736)) (= (x6084 128) x2795) (not (or (and (< x720 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x720) true)) (> x720 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2795 x3890)) (and (<= x1445 1461501637330902918203684832716283019655932542975) (<= 0 x1192) (= x589 x4878) (>= 1461501637330902918203684832716283019655932542975 x2612) (>= x611 0) (= x1405 x4954) (<= 0 x6363) (<= x611 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x529 (x423 x4954 x611)) (= x4954 x5631) (> x4487 0) (not (= 0 x3571)) (>= x1445 0) (not (> 2512374353 x6288)) (>= 1461501637330902918203684832716283019655932542975 x6363) (= (= x2417 x1445) x4753) (< (+ x4954 x5074) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x3571 (x2549 (x1567 x1445))) (not (= x5074 0)) (= x1627 x3624) (= x5074 (x1849 x529 10000)) (not (= x6288 2512374353)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x431) (= x589 0) (= x5074 x5582) (= x1627 x6363) (not (= x6288 2542517689)) (= x3890 x1584) (= 128 x4706) (>= 1461501637330902918203684832716283019655932542975 x1192) (< (x423 x4954 x611) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1192 x5041) (> 3065339685 x6288) (= x6288 2644395612) (= x1088 x5904) (<= x1088 1461501637330902918203684832716283019655932542975) (= x703 x1405) (= x4487 (x2549 (x1567 x4332))) (> 1461501637330902918203684832716283019655932542976 x1445) (= x3501 x4954) (not (= x431 2)) (= x4954 x222) (>= x431 0) (= (+ x5582 x222) x968) (<= 0 x2612))) (and (=> (and (and (= x3787 (or (> x1932 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1932 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x1932)))) (> 669136355 x1397) (= 599290589 x1397) (= 100 x5343) (not (> 4 x5343)) (not (= 248222656 x1397)) (< x1397 1889567281) (< 0 x2279) (= (x2549 (x1567 x2417)) x2279) (= x4332 x1112) (= x3501 x3216) (= x1823 x1192) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x948) (not (< x1397 248222656)) (not (= 404098525 x1397)) (= x5343 100) (= (x980 (- x5343 4)) x1932)) x4753) (and (=> x3787 x467) (=> (and (not x3787) (and (= (= x4332 x1112) x465) (= x1112 x4561))) (and (=> (and x465 (and (= x3899 x1823) (= x118 (x350 1461501637330902918203684832716283019655932542975 x1192)) (= (= x118 x1192) x2295))) (and (=> (not x2295) x467) (=> (and (and (= x3216 x3307) (= x1999 (= 0 x5349)) (<= 0 x5349) (<= x5349 255) (< x5349 256)) x2295) (and (=> (and (and (>= x6040 0) (<= x6040 255) (= (x5340 x109) x6040) (= (x476 (x1567 x1112) (x5097 6) 0) x109) (= x4716 (= 0 x6040)) (> 256 x6040)) x1999) (and (=> (not x4716) x467) (=> (and x4716 (= (> 100 x5343) x1581)) (and (=> x1581 x467) (=> (and (not x1581) (and (<= x3043 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x3216) x3717) (= 10000 x5053) (= x691 (x476 (x1567 x1112) (x5097 5) 0)) (= x1644 (x5014 x2414)) (<= 0 x1644) (<= 0 x3043) (= x2414 (x476 (x1567 x4332) x691 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1644))) (and (=> (and x3717 (= x962 0)) x5876) (=> (and (not x3717) (and (= (= 0 x3307) x4199) (= (ite (> x3043 x3769) 1 0) x541) (= x3769 (x1849 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3216)) (= (x350 x1337 x541) x5210) (= x1337 (ite (not x4199) 1 0)) (= x464 (= 0 x5210)))) (and (=> (and (and (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x423 x3216 x3043)) x5601) (= (x2154 (x423 x3216 x3043)) x2340)) x464) (and (=> (and x5601 (= x2340 x962)) x5876) (=> (not x5601) x467))) (=> (not x464) x467))))))))) (=> (not x1999) x467))))) (=> (not x465) x467))))) (=> (and (not x4753) (= (= x5713 x1445) x2368)) (and (=> (and (and (= x3090 x1192) (= x2661 (or (and (= true (<= x2404 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2404 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2404))) (= x4200 (x2549 (x1567 x5713))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1102) (= x1291 100) (not (= x6313 445207142)) (= x407 x4332) (not (= x6313 404098525)) (not (< x1291 4)) (not (= x6313 117300739)) (< 0 x4200) (= (x980 (- x1291 4)) x2404) (< x6313 903454517) (> 716570693 x6313) (< x6313 2127478272) (= x1291 100) (= x3501 x346) (= 599290589 x6313) (not (= 157198259 x6313))) x2368) (and (=> (and (and (= x3978 x407) (= (= x4332 x407) x6140)) (not x2661)) (and (=> (and x6140 (and (= x2292 (= x6349 x1192)) (= x3090 x1404) (= (x350 1461501637330902918203684832716283019655932542975 x1192) x6349))) (and (=> (and (and (>= 255 x3269) (>= x3269 0) (= x346 x5690) (= x1613 (= 0 x3269)) (< x3269 256)) x2292) (and (=> (and (and (< x5468 256) (= x2545 (= x5468 0)) (= (x3271 x4582) x5468) (>= 255 x5468) (<= 0 x5468) (= x4582 (x476 (x1567 x4332) (x5097 3) 0))) x1613) (and (=> (and x2545 (and (= x2755 (= 0 x2624)) (= (x3271 x6263) x2624) (< x2624 256) (>= x2624 0) (= (x476 (x1567 x407) (x5097 3) 0) x6263) (<= x2624 255))) (and (=> (and (and (= (x350 1461501637330902918203684832716283019655932542975 x3090) x3503) (>= 255 x6074) (> 256 x6074) (= x6074 (x3271 x4159)) (= x1914 (= x6074 0)) (= (x476 (x1567 x3503) (x5097 3) 0) x4159) (<= 0 x6074)) x2755) (and (=> (not x1914) x2035) (=> (and (and (<= x1074 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1074 0) (= x2307 (> x346 x1074)) (= x279 (x476 (x1567 x407) (x5097 10) 0)) (= x5275 (x476 (x1567 x4332) x279 0)) (= x1074 (x5968 x5275))) x1914) (and (=> x2307 x2035) (=> (and (= (= 0 x407) x5204) (not x2307)) (and (=> (and (not x5204) (and (= x5069 (= 0 x1587)) (= x1587 (x350 1461501637330902918203684832716283019655932542975 x3090)))) (and (=> (and (and (= (x476 (x1567 x407) (x5097 9) 0) x6347) (>= x5791 0) (= (< x5791 x346) x600) (= (x995 x6347) x5791) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5791)) (not x5069)) (and (=> (and (not x600) (and (= 128 x3293) (<= 0 x2816) (= (x476 (x1567 x407) (x5097 9) 0) x3961) (<= x2816 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x995 x3961) x2816) (= (> x346 x2816) x4288))) (and (=> (and (not x4288) (= (> x346 x2816) x4269)) (and (=> x4269 x2035) (=> (and (not x4269) (and (= (x566 x5300) x1184) (= x2553 (x476 (x1567 x407) (x5097 9) 0)) (= (> x1184 x360) x3306) (= x1085 (x980 (- x2816 x346))) (>= x1184 0) (<= x1184 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x476 (x1567 x2331) (x5097 9) 0) x5300) (= x2331 (x350 1461501637330902918203684832716283019655932542975 x3090)) (= x360 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x346))))) (and (=> x3306 x2035) (=> (and (and (= (> x1184 x5173) x2723) (= (x4937 (+ x1184 x346)) x5173)) (not x3306)) (and (=> x2723 x2035) (=> (and (not x2723) (and (= (x476 (x1567 x626) (x5097 9) 0) x2562) (= (x5968 x2472) x3031) (>= x3031 0) (= x2472 (x476 (x1567 x4332) x4594 0)) (= (x350 1461501637330902918203684832716283019655932542975 x3090) x626) (= (> x346 x3031) x999) (= x4594 (x476 (x1567 x407) (x5097 10) 0)) (= x133 192) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3031))) (and (=> x999 x2035) (=> (and (not x999) (= x5945 (> x346 x3031))) (and (=> (and (and (= x5113 32) (= x5696 (x476 (x1567 x407) (x5097 10) 0)) (= x3948 1) (= (x980 (- x3031 x346)) x2609) (= x4475 (x476 (x1567 x4332) x5696 0))) (not x5945)) x4781) (=> x5945 x2035))))))))))) (=> x4288 x2035))) (=> x600 x2035))) (=> x5069 x2035))) (=> x5204 x2035))))))) (=> (not x2755) x2035))) (=> (not x2545) x2035))) (=> (not x1613) x2035))) (=> (not x2292) x2035))) (=> (not x6140) x2035))) (=> x2661 x2035))) (=> (and (= x5875 (= x1445 x5547)) (not x2368)) (and (=> (and (and (not (< x3802 4)) (not (= x6247 157198259)) (= x709 x3501) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x6) (not (= x6247 404098525)) (not (= 543189872 x6247)) (= x966 (x2549 (x1567 x5547))) (= 100 x3802) (< x6247 961581905) (< x6247 1901074598) (< 0 x966) (not (= x6247 117300739)) (= x6239 x4332) (= 100 x3802) (= x6247 599290589) (= x1192 x778) (= x6362 (x980 (- x3802 4))) (= x2090 (or (> x6362 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x6362 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x6362))))) x5875) (and (=> (and (not x2090) (and (= (= x4332 x6239) x457) (= x516 x6239))) (and (=> (and x457 (and (= (= x1017 x1192) x5342) (= x1017 (x350 1461501637330902918203684832716283019655932542975 x1192)) (= x778 x1076))) (and (=> (and x5342 (and (= x4052 x709) (= x1520 (= 0 x6239)))) (and (=> x1520 x1466) (=> (and (not x1520) (and (= (x350 1461501637330902918203684832716283019655932542975 x778) x1966) (= x4224 (= x1966 0)))) (and (=> (and (and (= (> x709 x6025) x4714) (= x6025 (x4931 x5261)) (<= x6025 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x6025 0) (= (x476 (x1567 x6239) (x5097 0) 0) x5261) (= x5218 128)) (not x4224)) (and (=> x4714 x1466) (=> (and (not x4714) (= x2685 (< x6025 x709))) (and (=> x2685 x1466) (=> (and (not x2685) (and (= (x2156 x461) x6149) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x709)) x3262) (= x461 (x476 (x1567 x5772) (x5097 0) 0)) (= (x476 (x1567 x6239) (x5097 0) 0) x5010) (= x2150 (< x3262 x6149)) (= x5772 (x350 1461501637330902918203684832716283019655932542975 x778)) (<= 0 x6149) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6149) (= x4403 (x980 (- x6025 x709))))) (and (=> x2150 x1466) (=> (and (and (= (< x2474 x6149) x1185) (= x2474 (x4937 (+ x709 x6149)))) (not x2150)) (and (=> x1185 x1466) (=> (and (not x1185) (and (= 224 x4356) (= (x476 (x1567 x4332) x1987 0) x1555) (= (< x641 x709) x1013) (= (x4757 x1555) x641) (= (x350 1461501637330902918203684832716283019655932542975 x778) x1526) (= (x476 (x1567 x6239) (x5097 1) 0) x1987) (<= 0 x641) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x641) (= (x476 (x1567 x1526) (x5097 0) 0) x2797))) (and (=> (and (= (> x709 x641) x6194) (not x1013)) (and (=> x6194 x1466) (=> (and (not x6194) (and (= (x980 (- x641 x709)) x3361) (= (= 0 x6239) x1261))) (and (=> (and (not x1261) (= (= x4332 0) x584)) (and (=> (and (not x584) (and (= (x476 (x1567 x4332) x2530 0) x6153) (= x2530 (x476 (x1567 x6239) (x5097 1) 0)) (= 1 x1606) (= x1590 1) (= x6132 32))) x1200) (=> x584 x1466))) (=> x1261 x1466))))) (=> x1013 x1466))))))))))) (=> x4224 x1466))))) (=> (not x5342) x1466))) (=> (not x457) x1466))) (=> x2090 x1466))) (=> (and (= (= x4332 x1445) x893) (not x5875)) (and (=> (and (not x893) (= (= x2020 x1445) x1527)) (and (=> (and (= x963 (= x3267 x1445)) (not x1527)) (and (=> (and (= (= x1445 x2280) x2449) (not x963)) (and (=> (and x2449 (and (not (> 4 x6364)) (= x3170 (x2549 (x1567 x2280))) (> x3170 0) (= x3501 x4066) (= x3146 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 599290589 x3389) (= (or (and (< x1639 96) (= true (<= x1639 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1639)) x1266) (not (= x3389 404098525)) (= x1918 x4332) (not (= 157198259 x3389)) (= 100 x6364) (= x4309 x1192) (= x1639 (x980 (- x6364 4))) (= x6364 100) (> 826074471 x3389) (not (= 117300739 x3389)))) (and (=> (and (not x1266) (and (= x2019 (= x1918 x4332)) (= x1918 x6330))) (and (=> (not x2019) x2428) (=> (and (and (= x6113 (= x1192 x2422)) (= x2422 (x350 1461501637330902918203684832716283019655932542975 x1192))) x2019) (and (=> (and (and (<= x2174 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x288 (< x2174 x3501)) (>= x2174 0) (= x900 x4066) (= (x3182 x3409) x2174) (= x3409 (x476 (x1567 x1918) (x5097 1) 0))) x6113) (and (=> (and (= x6109 (> x4066 x2174)) (not x288)) (and (=> (and (not x6109) (and (= x6097 (x4251 x1897)) (= (x476 (x1567 x3285) (x5097 1) 0) x1897) (= (> x6097 x322) x43) (>= x6097 0) (= x4322 (x476 (x1567 x1918) (x5097 1) 0)) (= x3285 (x350 1461501637330902918203684832716283019655932542975 x4309)) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4066)) x322) (= (x980 (- x2174 x4066)) x1288) (<= x6097 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x43 x2428) (=> (and (and (= x5807 (< x2884 x6097)) (= (x4937 (+ x4066 x6097)) x2884)) (not x43)) (and (=> x5807 x2428) (=> (and (and (<= 0 x4639) (= (x476 (x1567 x4332) x6092 0) x2672) (<= x4639 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x476 (x1567 x1918) (x5097 2) 0) x6092) (= x4639 (x389 x2672)) (= (x476 (x1567 x3465) (x5097 1) 0) x5836) (= (> x4066 x4639) x5474) (= x3465 (x350 1461501637330902918203684832716283019655932542975 x4309))) (not x5807)) (and (=> x5474 x2428) (=> (and (= (< x4639 x4066) x225) (not x5474)) (and (=> (and (not x225) (and (= 1 x3732) (= x4142 (x476 (x1567 x4332) x5567 0)) (= (x476 (x1567 x1918) (x5097 2) 0) x5567) (= 32 x3167) (= (x980 (- x4639 x4066)) x1350))) x4887) (=> x225 x2428))))))))) (=> x6109 x2428))) (=> x288 x2428))) (=> (not x6113) x2428))))) (=> x1266 x2428))) (=> (and (= x5837 (= x1445 x3247)) (not x2449)) (and (=> (and x5837 (and (> 826074471 x210) (not (= 404098525 x210)) (= 100 x3729) (= x5553 (x980 (- x3729 4))) (= 599290589 x210) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3582) (= x1096 x1192) (= x3729 100) (not (= x210 117300739)) (= x4332 x3634) (= x3501 x5267) (< 0 x4616) (not (< x3729 4)) (not (= x210 157198259)) (= (x2549 (x1567 x3247)) x4616) (= x3342 (or (and (< x5553 96) (= (<= x5553 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5553))))) (and (=> x3342 x5859) (=> (and (not x3342) (and (= x5707 x3634) (= x2351 (= x3634 x4332)))) (and (=> (and (and (= (= x3120 x1192) x5100) (= x3120 (x350 1461501637330902918203684832716283019655932542975 x1192))) x2351) (and (=> (not x5100) x5859) (=> (and (and (= x5267 x630) (<= 0 x3500) (= (x2769 x2599) x3500) (= (> x3501 x3500) x1820) (= (x476 (x1567 x3634) (x5097 1) 0) x2599) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3500)) x5100) (and (=> x1820 x5859) (=> (and (= (> x5267 x3500) x6059) (not x1820)) (and (=> x6059 x5859) (=> (and (not x6059) (and (= (x476 (x1567 x3634) (x5097 1) 0) x3206) (>= x5869 0) (= x5394 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5267))) (= (x350 1461501637330902918203684832716283019655932542975 x1096) x3994) (= x1641 (x980 (- x3500 x5267))) (= x4684 (< x5394 x5869)) (<= x5869 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5869 (x4857 x724)) (= x724 (x476 (x1567 x3994) (x5097 1) 0)))) (and (=> x4684 x5859) (=> (and (not x4684) (and (= (x4937 (+ x5869 x5267)) x1124) (= (< x1124 x5869) x5677))) (and (=> x5677 x5859) (=> (and (not x5677) (and (= x2479 (x476 (x1567 x3668) (x5097 1) 0)) (<= 0 x3392) (= x1285 (x476 (x1567 x4332) x2738 0)) (= x2514 (< x3392 x5267)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3392) (= (x350 1461501637330902918203684832716283019655932542975 x1096) x3668) (= x3392 (x1977 x1285)) (= x2738 (x476 (x1567 x3634) (x5097 2) 0)))) (and (=> (and (= (< x3392 x5267) x3795) (not x2514)) (and (=> (and (not x3795) (and (= 32 x32) (= x406 (x476 (x1567 x4332) x1389 0)) (= x1389 (x476 (x1567 x3634) (x5097 2) 0)) (= x1680 1) (= x631 (x980 (- x3392 x5267))))) x258) (=> x3795 x5859))) (=> x2514 x5859))))))))))))) (=> (not x2351) x5859))))) (=> (and (= x2788 (= x1445 x5771)) (not x5837)) (and (=> (and (not x2788) (= (= x462 x1445) x5911)) (and (=> (and (and (= (= x1445 x5205) x3511) (and (and (= x6022 100) (> x330 0) (= x3906 x4332) (not (= x5369 404098525)) (not (< x6022 4)) (= x330 (x2549 (x1567 x5205))) (= 100 x6022) (= x6115 (or (> x5363 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x5363) (= (<= x5363 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x1192 x2519) (= (x980 (- x6022 4)) x5363) (= 599290589 x5369) (not (= x5369 157198259)) (= x8 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3501 x3926)) x3511)) (not x5911)) (and (=> x6115 x3296) (=> (and (and (= x148 (= x3906 x4332)) (= x2464 x3906)) (not x6115)) (and (=> (not x148) x3296) (=> (and (and (= x1835 (x350 1461501637330902918203684832716283019655932542975 x1192)) (= (= x1192 x1835) x848)) x148) (and (=> (and x848 (and (= (x3204 x155) x1073) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1073) (<= 0 x1073) (= (x476 (x1567 x3906) (x5097 2) 0) x4500) (= (= x1073 115792089237316195423570985008687907853269984665640564039457584007913129639935) x5909) (= (x476 (x1567 x4332) x4500 0) x155))) (and (=> x5909 x746) (=> (and (not x5909) (and (<= 0 x534) (<= x534 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x534 (x3204 x2701)) (= x2701 (x476 (x1567 x4332) x2202 0)) (= x2202 (x476 (x1567 x3906) (x5097 2) 0)) (= x830 (> x3926 x534)))) (and (=> x830 x3296) (=> (and (not x830) (= x2675 (x980 (- x534 x3926)))) x746))))) (=> (not x848) x3296))))))) (=> (and (and (= x6197 (x980 (- x6166 4))) (= (or (and (= (<= x6197 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x6197)) (> x6197 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2042) (< 0 x1388) (= x599 x1192) (not (> 4 x6166)) (= x1117 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 100 x6166) (not (= 157198259 x923)) (< x923 826074471) (not (= x923 117300739)) (not (= 404098525 x923)) (= x3516 x3501) (= x4332 x5222) (= x923 599290589) (= 100 x6166) (= (x2549 (x1567 x462)) x1388)) x5911) (and (=> x2042 x1219) (=> (and (not x2042) (and (= x3674 (= x5222 x4332)) (= x5222 x1961))) (and (=> (not x3674) x1219) (=> (and (and (= x3119 (x350 1461501637330902918203684832716283019655932542975 x1192)) (= (= x1192 x3119) x3845)) x3674) (and (=> (not x3845) x1219) (=> (and (and (= x2031 (> x3501 x6107)) (= x6107 (x938 x4777)) (<= x6107 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x476 (x1567 x5222) (x5097 1) 0) x4777) (>= x6107 0) (= x3516 x1169)) x3845) (and (=> (and (not x2031) (= (< x6107 x3516) x6037)) (and (=> (and (and (= x356 (x3365 x1116)) (= x3950 (x350 1461501637330902918203684832716283019655932542975 x599)) (= x3463 (< x3186 x356)) (= (x476 (x1567 x5222) (x5097 1) 0) x4745) (= x3186 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3516))) (= x4670 (x980 (- x6107 x3516))) (<= 0 x356) (= (x476 (x1567 x3950) (x5097 1) 0) x1116) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x356)) (not x6037)) (and (=> (and (not x3463) (and (= (< x1521 x356) x2706) (= x1521 (x4937 (+ x3516 x356))))) (and (=> x2706 x1219) (=> (and (and (= (x476 (x1567 x5222) (x5097 2) 0) x1386) (= x1115 (x476 (x1567 x1469) (x5097 1) 0)) (= x3315 (< x4267 x3516)) (<= x4267 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4864 x832) x4267) (= (x350 1461501637330902918203684832716283019655932542975 x599) x1469) (= x832 (x476 (x1567 x4332) x1386 0)) (>= x4267 0)) (not x2706)) (and (=> x3315 x1219) (=> (and (= (< x4267 x3516) x1779) (not x3315)) (and (=> (and (and (= x1754 (x980 (- x4267 x3516))) (= 1 x2425) (= 32 x5774) (= (x476 (x1567 x4332) x5781 0) x1541) (= x5781 (x476 (x1567 x5222) (x5097 2) 0))) (not x1779)) x402) (=> x1779 x1219))))))) (=> x3463 x1219))) (=> x6037 x1219))) (=> x2031 x1219))))))))))) (=> (and (and (> x593 0) (not (= 117300739 x3714)) (not (> 4 x3462)) (= x1192 x1103) (not (= 404098525 x3714)) (= x67 x4332) (= x3693 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3979) true) (< x3979 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3979)) x4316) (> 826074471 x3714) (= x3462 100) (= 599290589 x3714) (= (x2549 (x1567 x5771)) x593) (= (x980 (- x3462 4)) x3979) (not (= x3714 157198259)) (= x3501 x1299) (= x3462 100)) x2788) (and (=> x4316 x4559) (=> (and (not x4316) (and (= (= x67 x4332) x5972) (= x67 x242))) (and (=> (not x5972) x4559) (=> (and (and (= (= x4109 x1192) x6126) (= (x350 1461501637330902918203684832716283019655932542975 x1192) x4109)) x5972) (and (=> (and (and (= (x476 (x1567 x67) (x5097 1) 0) x3796) (= (< x632 x3501) x5626) (<= x632 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x632 0) (= (x443 x3796) x632) (= x1299 x625)) x6126) (and (=> x5626 x4559) (=> (and (= (< x632 x1299) x4226) (not x5626)) (and (=> x4226 x4559) (=> (and (and (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1299)) x6008) (>= x4991 0) (= x4801 (x980 (- x632 x1299))) (= (x5993 x4603) x4991) (= (> x4991 x6008) x5815) (= x1378 (x476 (x1567 x67) (x5097 1) 0)) (= x2223 (x350 1461501637330902918203684832716283019655932542975 x1103)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4991) (= (x476 (x1567 x2223) (x5097 1) 0) x4603)) (not x4226)) (and (=> x5815 x4559) (=> (and (not x5815) (and (= (x4937 (+ x1299 x4991)) x5301) (= x776 (> x4991 x5301)))) (and (=> x776 x4559) (=> (and (and (= x531 (> x1299 x2157)) (= (x476 (x1567 x67) (x5097 2) 0) x499) (= (x476 (x1567 x5255) (x5097 1) 0) x5916) (<= 0 x2157) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2157) (= (x476 (x1567 x4332) x499 0) x4891) (= (x4744 x4891) x2157) (= (x350 1461501637330902918203684832716283019655932542975 x1103) x5255)) (not x776)) (and (=> x531 x4559) (=> (and (= x3645 (> x1299 x2157)) (not x531)) (and (=> (and (and (= (x980 (- x2157 x1299)) x1778) (= (x476 (x1567 x67) (x5097 2) 0) x1091) (= 32 x2140) (= 1 x5463) (= (x476 (x1567 x4332) x1091 0) x4152)) (not x3645)) x5519) (=> x3645 x4559))))))))))))) (=> (not x6126) x4559))))))))))))) (=> (and x963 (and (= x261 x3501) (= 100 x3573) (= x253 (x2549 (x1567 x3267))) (= x3308 (x980 (- x3573 4))) (not (> 4 x3573)) (> 826074471 x123) (> x253 0) (not (= x123 404098525)) (not (= x123 157198259)) (= 100 x3573) (= x1192 x494) (= x4234 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x123 599290589) (not (= 117300739 x123)) (= x4070 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3308) true) (> 96 x3308)) (> x3308 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x4081 x4332))) (and (=> x4070 x445) (=> (and (not x4070) (and (= x4081 x5651) (= (= x4332 x4081) x1585))) (and (=> (not x1585) x445) (=> (and x1585 (and (= x891 (x350 1461501637330902918203684832716283019655932542975 x1192)) (= (= x891 x1192) x588) (= x4793 x494))) (and (=> (and (and (= (x350 1461501637330902918203684832716283019655932542975 x494) x5003) (= x5038 (= x5003 0)) (= x261 x2412)) x588) (and (=> x5038 x445) (=> (and (and (>= x4994 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4994) (= x1286 (x476 (x1567 x4081) (x5097 1) 0)) (= (> x261 x4994) x5591) (= x4994 (x2175 x1286))) (not x5038)) (and (=> x5591 x445) (=> (and (not x5591) (and (= (x4215 x4175) x3866) (= (> x261 x3866) x5793) (<= x3866 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3866) (= (x476 (x1567 x4081) (x5097 2) 0) x3219) (= (x476 (x1567 x4332) x3219 0) x4175))) (and (=> (and (and (= (> x261 x3436) x808) (= (x2175 x5021) x3436) (>= x3436 0) (<= x3436 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x476 (x1567 x4081) (x5097 1) 0) x5021)) (not x5793)) (and (=> x808 x445) (=> (and (not x808) (and (>= x5211 0) (= (x476 (x1567 x4332) x607 0) x4573) (= x5211 (x4215 x4573)) (<= x5211 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x980 (- x3436 x261)) x1487) (= x5596 (x476 (x1567 x4081) (x5097 1) 0)) (= x607 (x476 (x1567 x4081) (x5097 2) 0)) (= x3335 (< x5211 x261)))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5259) (>= x5259 0) (= x1435 (x476 (x1567 x4081) (x5097 2) 0)) (= x4024 (x476 (x1567 x5973) (x5097 1) 0)) (= (x350 1461501637330902918203684832716283019655932542975 x494) x5973) (= (x2405 x4024) x5259) (= x753 (x980 (- x5211 x261))) (= x3694 (< x4972 x5259)) (= x3901 (x476 (x1567 x4332) x1435 0)) (= x4972 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x261)))) (not x3335)) (and (=> x3694 x445) (=> (and (not x3694) (and (= (x4937 (+ x261 x5259)) x2101) (= x2285 (x2964 128)) (= 1 x5984) (= (x476 (x1567 x5935) (x5097 1) 0) x1884) (= (x2964 128) x5002) (= x5935 (x350 1461501637330902918203684832716283019655932542975 x494)) (= 1 x6009) (= 32 x5485))) x1325))) (=> x3335 x445))))) (=> x5793 x445))))))) (=> (not x588) x445))))))))) (=> (and (and (not (= x3920 157198259)) (= 599290589 x3920) (= x931 100) (= x4332 x76) (= x2836 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 4 x931)) (= x4427 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x955)) (> 96 x955)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x955))) (> 1117154408 x3920) (= (x980 (- x931 4)) x955) (not (= x3920 117300739)) (< 0 x2277) (= 100 x931) (= (x2549 (x1567 x2020)) x2277) (= x3501 x3740) (not (= 404098525 x3920)) (= x5066 x1192)) x1527) (and (=> (and (not x4427) (and (= x5893 x76) (= (= x76 x4332) x1118))) (and (=> (and x1118 (and (= x2469 x5066) (= (x350 1461501637330902918203684832716283019655932542975 x1192) x4473) (= (= x1192 x4473) x5116))) (and (=> (not x5116) x310) (=> (and x5116 (and (= x3189 x3740) (= x1276 (= x3431 0)) (= (x350 1461501637330902918203684832716283019655932542975 x5066) x3431))) (and (=> x1276 x310) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2111) (= (x3550 x5883) x2111) (>= x2111 0) (= x4624 (< x2111 x3740)) (= (x476 (x1567 x76) (x5097 0) 0) x5883)) (not x1276)) (and (=> (and (not x4624) (= (< x2111 x3740) x1700)) (and (=> (and (and (= (x476 (x1567 x1556) (x5097 0) 0) x4704) (= x4545 (x476 (x1567 x76) (x5097 0) 0)) (= (x5452 x4704) x5385) (<= 0 x5385) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3740)) x5026) (= x182 (x980 (- x2111 x3740))) (= x1556 (x350 1461501637330902918203684832716283019655932542975 x5066)) (<= x5385 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4105 (> x5385 x5026))) (not x1700)) (and (=> (and (and (= (x4937 (+ x3740 x5385)) x5397) (= (< x5397 x5385) x3455)) (not x4105)) (and (=> x3455 x310) (=> (and (and (= (x350 1461501637330902918203684832716283019655932542975 x5066) x1945) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6316) (= (x476 (x1567 x76) (x5097 1) 0) x1348) (= (> x3740 x6316) x4238) (>= x6316 0) (= (x476 (x1567 x1945) (x5097 0) 0) x919) (= (x476 (x1567 x4332) x1348 0) x635) (= (x5268 x635) x6316)) (not x3455)) (and (=> (and (= (< x6316 x3740) x3677) (not x4238)) (and (=> x3677 x310) (=> (and (and (= (x980 (- x6316 x3740)) x1461) (= x2430 (= 0 x4332))) (not x3677)) (and (=> x2430 x310) (=> (and (not x2430) (= x5079 (= x76 0))) (and (=> (and (and (= x2535 (x5237 128)) (= x3169 (x476 (x1567 x76) (x5097 1) 0)) (= x2215 32) (= x2813 1) (= x1361 (x476 (x1567 x4332) x3169 0)) (= x2209 1) (= x5420 (x5237 128))) (not x5079)) x5133) (=> x5079 x310))))))) (=> x4238 x310))))) (=> x4105 x310))) (=> x1700 x310))) (=> x4624 x310))))))) (=> (not x1118) x310))) (=> x4427 x310))))) (=> (and (and (= 599290589 x812) (not (= 404098525 x812)) (not (= x812 157198259)) (< x812 953495055) (= 100 x3015) (= x1673 x3501) (= (or (and (= true (<= x2803 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x2803)) (> x2803 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4529) (= x3861 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x582 x4332) (= x1192 x979) (= x2803 (x980 (- x3015 4))) (< x812 2512374353) (= (x2549 (x1567 x4332)) x6073) (not (< x3015 4)) (= 100 x3015) (> x6073 0)) x893) (and (=> x4529 x4246) (=> (and (and (= x2493 (= x4332 x582)) (= x582 x5526)) (not x4529)) (and (=> (not x2493) x4246) (=> (and (and (= x3915 (x350 1461501637330902918203684832716283019655932542975 x1192)) (= (= x3915 x1192) x1530)) x2493) (and (=> (not x1530) x4246) (=> (and x1530 (and (= x1247 (x476 (x1567 x4332) x4439 0)) (= (x476 (x1567 x582) (x5097 2) 0) x4439) (<= 0 x1762) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1762) (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1762) x3107) (= (x1653 x1247) x1762))) (and (=> x3107 x1081) (=> (and (not x3107) (and (= x3688 (x1653 x2406)) (= x3830 (< x3688 x1673)) (= (x476 (x1567 x4332) x3324 0) x2406) (= x3324 (x476 (x1567 x582) (x5097 2) 0)) (>= x3688 0) (<= x3688 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (= (x980 (- x3688 x1673)) x1947) (not x3830)) x1081) (=> x3830 x4246))))))))))))))))))) x3544))
(assert (x447 x4491))
(assert (= (and x531 x4044) x5670))
(assert (x3903 x2638))
(assert (= (or x5505 x5790 x6324 x2467 x1662 x4531 x907 x886 x2955 x2096 x3720) x2007))
(assert (x447 x2296))
(assert (= 3714247998 (x2338 (x5097 3714247998))))
(assert (x447 x206))
(assert (= (=> (and (= x4772 x5113) (= x3948 x2521)) x3131) x4781))
(assert (= (or x343 x4035) x1150))
(assert (x447 x5937))
(assert (x447 x257))
(assert (= x4348 (and x906 x4710)))
(assert (= x1904 (and (not x4750) x4087)))
(assert (x447 x5598))
(assert (= x1277 (and x4530 (not x5912))))
(assert (x447 x5255))
(assert (x1990 x979))
(assert (x447 x217))
(assert (= x6033 (and (not x5664) x2498)))
(assert (= (x2338 (x5097 1553423035)) 1553423035))
(assert (= x898 (and x2502 (not x808))))
(assert (= (and x2334 x5378) x758))
(assert (x447 x3937))
(assert (=> (<= x6266 10000) (= (x1567 x6266) (x5097 x6266))))
(assert (x447 x1680))
(assert (= (x2338 (x1567 x5975)) x5975))
(assert (= (x1567 3590908516) (x5097 3590908516)))
(assert (= (and x3522 x2350) x2462))
(assert (x447 x6337))
(assert (x447 x1045))
(assert (= x5406 (and x5015 (not x4269))))
(assert (x2992 x3043 (- x2378 x4954)))
(assert (x1957 x3043 x3216 x3043 x6080))
(assert (x447 x251))
(assert (= (and (not x132) x2179) x6183))
(assert (= x1500 (or x4649 x5811)))
(assert (= (and (not x5069) x1414) x146))
(assert (x447 x534))
(assert (x447 x4671))
(assert (= (and x3080 (not x1652)) x4363))
(assert (x447 x1296))
(assert (= x1475 (and x1131 (not x3490))))
(assert (x447 x2422))
(assert (= (x2338 (x1567 x1799)) x1799))
(assert (= (=> (= x2936 (= 0 x3113)) (and (=> (and (not x2936) (= x1989 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5325) (and (= (<= x5325 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x5325))))) (and (=> (not x1989) x5653) (=> x1989 x2633))) (=> x2936 x2633))) x1168))
(assert (x447 x4328))
(assert (x3903 x6239))
(assert (x447 x5865))
(assert (= (and x3414 x2364) x2513))
(assert (= (x2338 (x1567 x205)) x205))
(assert (x552 x473))
(assert (x447 x1407))
(assert (x447 x1811))
(assert (x447 x170))
(assert (= x4600 (and x4381 x4460)))
(assert (= x5182 (and x136 x3782)))
(assert (= (and x5358 x4543) x3374))
(assert (x2118 x1638 x235))
(assert (x447 x2083))
(assert (= (and x5162 x6211) x2336))
(assert (= x246 (=> (and (or (not x5810) x5810) (= (= 0 x2550) x5810)) x1788)))
(assert (=> (<= x3931 10000) (= (x5097 x3931) (x1567 x3931))))
(assert (x447 x1836))
(assert (x447 x1835))
(assert (= x3357 (or (and x2613 (not x3139)) (and (not x5874) x256) (and x5000 x500))))
(assert (= (or x2548 x2105 x1314 x1243 x2807 x4576 x4672 x2972 x1203) x4429))
(assert (= x6186 (=> (and (= x2343 0) (= x2584 x3618)) x725)))
(assert (= (or (and x486 (not x6095)) x2439) x1429))
(assert (= (and x4087 x4750) x3586))
(assert (= x5235 (and (not x5390) x3060)))
(assert (x447 x753))
(assert (= (and x4499 (not x3650)) x895))
(assert (x447 x621))
(assert (= (and (not x3837) x1444) x5249))
(assert (x447 x5184))
(assert (x447 x3437))
(assert (x447 x2041))
(assert (x447 x5226))
(assert (= (and (not x4685) x3483) x5276))
(assert (x447 x2783))
(assert (x1990 x5778))
(assert (x447 x5895))
(assert (x447 x3293))
(assert (x5383 x4398))
(assert (x447 x5347))
(assert (= x5310 (or x1704 x4584 x6283)))
(assert (x447 x541))
(assert (x447 x75))
(assert (= x6208 (and x1465 x3329)))
(assert (x447 x4989))
(assert (x3960 x3043 x3216 x4954 x611))
(assert (= x2577 (and (not x5375) x4955)))
(assert (= x209 (x2338 (x1567 x209))))
(assert (= x6121 (or x4415 x3397 x3743 x4404 x6189 x3805 x3982 x5413 x6360)))
(assert (x5592 (- x6080 x3216)))
(assert (= x2590 (and x2397 x6219)))
(assert (x447 x4876))
(assert (x447 x899))
(assert (= (and (not x3022) x3448) x2132))
(assert (= (and x2522 (not x6194)) x2079))
(assert (= x3632 (or (and x4724 (not x5558)) (and x4763 x4156))))
(assert (x447 x5050))
(assert (x447 x3571))
(assert (= (x2338 (x1567 x3128)) x3128))
(assert (x447 x4111))
(assert (x3903 x3938))
(assert (x3903 x5255))
(assert (= x1593 (=> (and (= x720 x1457) (= x5736 x4729)) x3544)))
(assert (= x2395 (and x3127 x1893)))
(assert (= x1078 (and x6317 (not x4572))))
(assert (= x916 (and (not x2334) x5378)))
(assert (x3903 x1986))
(assert (= x4392 (=> (and (= x4910 x3321) (= 0 x3173)) x5630)))
(assert (x447 x444))
(assert (x447 x4621))
(assert (= x1104 (and x3375 x1451)))
(assert (x447 x2235))
(assert (x447 x754))
(assert (= x5254 (or x3705 x722)))
(assert (= (and x795 x211) x5059))
(assert (= x4296 (and x3706 x1359)))
(assert (= (or x2433 x4618) x1026))
(assert (= (and x3515 (not x2716)) x1723))
(assert (x447 x70))
(assert (x5592 (- x4398 x611)))
(assert (x447 x4678))
(assert (= (and x1444 x3837) x1922))
(assert (x447 x3018))
(assert (= (and x1182 x649) x3524))
(assert (and (x5609 x2384 256) (x4601 x2384 256) (x301 x2384 256) (=> (> 256 0) (= (+ (x474 x2384 256) (* (x1849 x2384 256) 256)) x2384))))
(assert (= (and x5370 x1199) x5830))
(assert (x447 x5899))
(assert (= (and (not x4529) x1010) x488))
(assert (= (x2338 (x5097 1461501637330902918203684832716283019655932542976)) 1461501637330902918203684832716283019655932542976))
(assert (x447 x2280))
(assert (= (=> (and (= x1566 0) (= x3321 x83)) x36) x2850))
(assert (= (and x412 x815) x5748))
(assert (= (and x610 x1151) x5477))
(assert (x447 x755))
(assert (= (and x3752 x5810) x1036))
(assert (= (or x1513 x3073) x1899))
(assert (= (and (not x767) x4474) x649))
(assert (=> (>= 10000 x3881) (= (x5097 x3881) (x1567 x3881))))
(assert (x447 x3987))
(assert (=> (>= 10000 x76) (= (x5097 x76) (x1567 x76))))
(assert (= x5771 (x2338 (x1567 x5771))))
(assert (x447 x5975))
(assert (= (=> (and (= 1 x2662) (= x3343 0)) x4981) x2456))
(assert (= (and x4469 x4841) x4608))
(assert (x447 x5885))
(assert (= (=> (and (= x3351 x4072) (= x5054 x5357)) x162) x5384))
(assert (= x2669 (x2338 (x1567 x2669))))
(assert (= x3202 (=> (and (= x4034 x1983) (= x2550 x525)) x246)))
(assert (x447 x1964))
(assert (= (and x184 x1763) x505))
(assert (x447 x5259))
(assert (x447 x5252))
(assert (= (and (not x1864) x1082) x4467))
(assert (x447 x747))
(assert (x3960 x4954 x611 x2378 x3043))
(assert (x447 x2881))
(assert (= (and x256 x5874) x2613))
(assert (= (and x1366 x5038) x5518))
(assert (x447 x2190))
(assert (= x2038 (and x2704 x1216)))
(assert (x3960 x3043 x3216 x2378 x3043))
(assert (= (and x3771 x1989) x1053))
(assert (= (and x943 x2013) x4030))
(assert (= (and x1486 x2370) x5573))
(assert (= (=> (and (= x5685 x285) (= x5531 x4644)) x4298) x3208))
(assert (= x1359 (and (not x4217) x5818)))
(assert (= (and x2337 (not x6018)) x1006))
(assert (x2992 x3216 (- x3043 x4506)))
(assert (= x2756 (and x6191 (not x6319))))
(assert (x447 x726))
(assert (x1957 x611 x4954 x2378 x3043))
(assert (=> (>= 10000 x4060) (= (x1567 x4060) (x5097 x4060))))
(assert (x447 x4356))
(assert (= x5809 (and (not x11) x5094)))
(assert (= (and x4725 x5156) x6104))
(assert (x447 x2550))
(assert (x3960 x3043 x3216 x4398 x3043))
(assert (=> (>= 10000 x3668) (= (x1567 x3668) (x5097 x3668))))
(assert (x447 x1793))
(assert (= x5374 (and x4976 (not x5972))))
(assert (= x6355 (and x267 (not x464))))
(assert (= (x2338 (x5097 82641394424300342035733052706735002277943222088490025348945809093694544936960)) 82641394424300342035733052706735002277943222088490025348945809093694544936960))
(assert (= (and (not x545) x1690) x1900))
(assert (x3903 x5129))
(assert (=> (>= 10000 x1986) (= (x5097 x1986) (x1567 x1986))))
(assert (x447 x397))
(assert (= (x2338 (x1567 x5751)) x5751))
(assert (x5592 (- x6080 x4506)))
(assert (x447 x379))
(assert (= (x2338 (x1567 x2628)) x2628))
(assert (=> (<= x6239 10000) (= (x5097 x6239) (x1567 x6239))))
(assert (= x1548 (and (not x2556) x5794)))
(assert (= (and x4681 x5871) x5378))
(assert (= x722 (and x2743 (not x3694))))
(assert (x447 x840))
(assert (x447 x6135))
(assert (x447 x4666))
(assert (x1990 x473))
(assert (x447 x174))
(assert (= x3498 (and x3275 x5270)))
(assert (= (x2338 (x1567 x462)) x462))
(assert (x447 x3716))
(assert (= (=> (and (= x4858 0) (= x2574 1)) x5886) x2511))
(assert (x447 x1910))
(assert (x54 x599))
(assert (x447 x1657))
(assert (= (and x5324 x6160) x4625))
(assert (= x1038 (and x3317 (not x3155))))
(assert (x447 x5896))
(assert (x3960 x611 x4954 x4506 x3043))
(assert (= x1138 (or x4468 x1766)))
(assert (= (and x3969 (not x5709)) x171))
(assert (x447 x3984))
(assert (= x2379 (and x5390 x3060)))
(assert (x3903 x892))
(assert (= x3457 (and x3790 (not x1137))))
(assert (x447 x4228))
(assert (= (or (and x1601 x4828) (and (not x5101) x5586)) x4802))
(assert (x447 x910))
(assert (x447 x6066))
(assert (and (x5609 x459 1461501637330902918203684832716283019655932542976) (x4601 x459 1461501637330902918203684832716283019655932542976) (x301 x459 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x459 1461501637330902918203684832716283019655932542976) (* (x1849 x459 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x459))))
(assert (= x5806 (and x6032 (not x2153))))
(assert (= (and x1900 x1000) x5964))
(assert (= x3160 (and x6054 x4056)))
(assert (x447 x107))
(assert (x447 x3332))
(assert (= x2759 (and (not x3921) x2778)))
(assert (= (or x2875 x4942 x6157 x5317 x4809 x5515 x5121 x820 x1298 x1384 x2939 x4254) x5820))
(assert (= x2496 (and x61 (not x1948))))
(assert (x2992 x2378 (- x3043 x611)))
(assert (= x5892 (and x1879 (not x2144))))
(assert (= (or (and x4640 (not x1985)) (and x4407 x5419) (and x5571 (not x2518))) x6244))
(assert (and (x5609 x979 1461501637330902918203684832716283019655932542976) (x4601 x979 1461501637330902918203684832716283019655932542976) (x301 x979 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x979 1461501637330902918203684832716283019655932542976) (* (x1849 x979 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x979))))
(assert (= 1484578334 (x2338 (x5097 1484578334))))
(assert (x447 x2557))
(assert (= (and x6037 x3935) x3875))
(assert (= x5647 (and (not x3519) x2452)))
(assert (= (and x2293 x3548) x5209))
(assert (x5592 (- x3216 x6080)))
(assert (= (and (not x800) x4961) x5466))
(assert (x3903 x2782))
(assert (= (and x1274 x3897) x1431))
(assert (= (and x5656 (not x5911)) x2072))
(assert (x447 x3636))
(assert (= (and x306 (not x1616)) x1612))
(assert (x447 x738))
(assert (= x2028 (and x2931 x4095)))
(assert (x447 x6322))
(assert (x447 x3990))
(assert (= (and x1172 (not x5807)) x4016))
(assert (x447 x4968))
(assert (x447 x5110))
(assert (= x901 (and x2970 x5193)))
(assert (= 543189872 (x2338 (x5097 543189872))))
(assert (x447 x1255))
(assert (=> (>= 10000 x4332) (= (x1567 x4332) (x5097 x4332))))
(assert (x447 x1402))
(assert (x447 x1661))
(assert (= (and x666 x2136) x2257))
(assert (x447 x3480))
(assert (= (and x1536 x5691) x5913))
(assert (= x1531 (and x2132 (not x3368))))
(assert (= (x5097 3065339685) (x1567 3065339685)))
(assert (= x2618 (=> (and (= x5487 x5736) (= x4351 x720)) x3544)))
(assert (= x1178 (and x981 x2683)))
(assert (x447 x2842))
(assert (x447 x32))
(assert (x447 x5678))
(assert (= x1235 (and x2498 x5664)))
(assert (= (=> (and (= x2129 x720) (= x6124 x5736)) x3544) x233))
(assert (x447 x5736))
(assert (= x4785 (or (and (not x3145) x5046) x4149)))
(assert (x54 x3869))
(assert (= (x2338 (x5097 100135927934651036221761091863598459016256155049858187411712977198722809069568)) 100135927934651036221761091863598459016256155049858187411712977198722809069568))
(assert (x447 x1510))
(assert (= (and x5403 (not x6284)) x4899))
(assert (= (and x4073 (not x5139)) x5860))
(assert (x447 x5547))
(assert (x447 x1624))
(assert (x447 x1558))
(assert (x447 x749))
(assert (x447 x2402))
(assert (= (and x154 (not x20)) x1879))
(assert (x447 x190))
(assert (= (and x3841 (not x6065)) x5242))
(assert (x447 x6112))
(assert (=> (<= x5470 10000) (= (x1567 x5470) (x5097 x5470))))
(assert (x447 x4466))
(assert (= x4452 (=> (and (= 1 x1492) (= x5544 0)) x2269)))
(assert (= x3461 (and (not x1401) x1068)))
(assert (= x6175 (and x2561 x5410)))
(assert (= (and x1682 x2351) x4455))
(assert (= x4998 (and x5341 x2301)))
(assert (x447 x2143))
(assert (= x1362 (and x5987 x3832)))
(assert (x1957 x3043 x3216 x3043 x4506))
(assert (x447 x633))
(assert (= (and x2027 x4423) x5160))
(assert (x447 x3618))
(assert (x447 x5084))
(assert (= (and x2775 x4595) x5595))
(assert (x447 x358))
(assert (x5383 x511))
(assert (x447 x1457))
(assert (=> (<= x2143 10000) (= (x5097 x2143) (x1567 x2143))))
(assert (= (and x4431 x5606) x1917))
(assert (x447 x3167))
(assert (=> (<= x5566 10000) (= (x5097 x5566) (x1567 x5566))))
(assert (= x5908 (and (not x1919) x3638)))
(assert (x447 x6233))
(assert (= x170 (x2338 (x1567 x170))))
(assert (= x2901 (and x1846 (not x5730))))
(assert (= (and x1781 (not x2525)) x6061))
(assert (x447 x4644))
(assert (= x4877 (and (not x1022) x2808)))
(assert (x447 x1237))
(assert (x447 x2626))
(assert (x447 x5619))
(assert (x447 x2609))
(assert (=> (>= 10000 x2764) (= (x1567 x2764) (x5097 x2764))))
(assert (x447 x2029))
(assert (= (=> (and (= x1492 0) (= x5544 x1551)) x2269) x5496))
(assert (= x5187 (and (not x1561) x335)))
(assert (= (or x1122 x5277 x4352 x6297) x3067))
(assert (= (and x2373 x5308) x156))
(assert (= (and (not x666) x2136) x1524))
(assert (x447 x4648))
(assert (= x3558 (and x5752 (not x5104))))
(assert (= (x1567 599290589) (x5097 599290589)))
(assert (= (and x4453 (not x826)) x5370))
(assert (= x6252 (and x5855 x3757)))
(assert (= (and x5310 x3339) x3192))
(assert (=> (>= 10000 x40) (= (x1567 x40) (x5097 x40))))
(assert (= (=> (and (= x6000 x1551) (= x2391 0)) x6001) x3266))
(assert (and (x3768 x4697 10000) (x1349 x4697 10000) (=> (and (< 0 x4697) (< 0 10000)) (and (<= (* 10000 (x1849 x4697 10000)) x4697) (< (- x4697 10000) (* 10000 (x1849 x4697 10000))))) (x204 x4697 10000) (x2408 x4697 10000)))
(assert (x3903 x633))
(assert (x3903 x2508))
(assert (= (and x3287 x390) x2026))
(assert (= (or (and (not x1077) x1570) x1149) x1868))
(assert (x447 x4019))
(assert (= x1920 (and x646 x3962)))
(assert (x447 x6002))
(assert (= (or (and (not x1503) x4967) x6023) x2032))
(assert (x447 x1590))
(assert (x447 x4456))
(assert (=> (<= x5286 10000) (= (x5097 x5286) (x1567 x5286))))
(assert (= (and (not x1224) x5356) x1127))
(assert (= x2536 (and x130 (not x4990))))
(assert (= x1515 (or x2607 x5658)))
(assert (= (and x6237 x969) x6215))
(assert (= (and x3638 x1919) x4029))
(assert (= x2125 (and x1942 x821)))
(assert (= (or x2605 x2189 x2021 x6141 x843 x4020) x4787))
(assert (x447 x1862))
(assert (x447 x5553))
(assert (x447 x3915))
(assert (x3903 x6254))
(assert (x447 x3000))
(assert (x3903 x921))
(assert (x447 x2739))
(assert (= x988 (and (not x1173) x6011)))
(assert (= (or x6305 x313) x872))
(assert (= (and x101 (not x5538)) x5201))
(assert (= x1200 (=> (and (= x1590 x2521) (= x6132 x4772)) x3131)))
(assert (x447 x1732))
(assert (= (and x1175 (not x1415)) x5789))
(assert (x447 x3198))
(assert (= x2416 (and x2411 x4778)))
(assert (= (x5097 3714247998) (x1567 3714247998)))
(assert (x447 x2766))
(assert (= (and x951 (not x5137)) x869))
(assert (x447 x5032))
(assert (x447 x2866))
(assert (x447 x6009))
(assert (= (and x4488 (not x5337)) x1012))
(assert (x447 x3701))
(assert (= (or x4242 x4751) x2891))
(assert (x447 x6122))
(assert (= x590 (and x6211 (not x5162))))
(assert (= x2470 (or x5504 x6015 x3675 x4382 x2909 x2541 x3228 x2038 x4830)))
(assert (x447 x3088))
(assert (x447 x4457))
(assert (x447 x1171))
(assert (x447 x1239))
(assert (= x1197 (x2338 (x1567 x1197))))
(assert (x447 x2719))
(assert (= (=> (and (= x3028 x1551) (= x853 0)) x6106) x1201))
(assert (x447 x241))
(assert (x447 x1519))
(assert (x447 x3729))
(assert (= x2807 (and x4205 x6061)))
(assert (= (=> (and (= x2123 x5325) (= x3113 x3560)) x3194) x1866))
(assert (= (=> (and (= x6142 0) (= x3286 x5816)) x1420) x4536))
(assert (=> (<= x2782 10000) (= (x5097 x2782) (x1567 x2782))))
(assert (= (and x5182 x1005) x82))
(assert (=> (>= 10000 x4276) (= (x1567 x4276) (x5097 x4276))))
(assert (= (or x4055 x4313) x1403))
(assert (x447 x314))
(assert (x552 x3905))
(assert (x447 x1929))
(assert (= x5121 (and x1700 x5278)))
(assert (= x2587 (and x640 (not x2595))))
(assert (x447 x4459))
(assert (x447 x4271))
(assert (=> (>= 10000 x1708) (= (x1567 x1708) (x5097 x1708))))
(assert (= x4955 (and x5473 x4261)))
(assert (x447 x1983))
(assert (= (x1567 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x5097 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= (and (not x2013) x943) x410))
(assert (x447 x2356))
(assert (x447 x4858))
(assert (= (x5097 3171951664) (x1567 3171951664)))
(assert (x447 x6188))
(assert (x447 x3473))
(assert (= (x2338 (x1567 x2733)) x2733))
(assert (x54 x1192))
(assert (= x650 (or x777 x5008)))
(assert (x447 x1186))
(assert (= x2128 (and x5903 (not x2349))))
(assert (x447 x209))
(assert (x447 x4588))
(assert (x447 x5935))
(assert (x447 x6))
(assert (= (and (not x998) x2360) x5522))
(assert (x5592 x4506))
(assert (= x1965 (and x4659 x4889)))
(assert (x447 x1205))
(assert (= (and x848 x2415) x263))
(assert (x447 x6025))
(assert (= x1502 (and x2619 x308)))
(assert (= x302 (and x3630 x4378)))
(assert (x447 x392))
(assert (= (x5097 2835717307) (x1567 2835717307)))
(assert (= (and (not x4156) x4763) x4724))
(assert (x447 x2692))
(assert (= (x2338 (x5097 3642135687)) 3642135687))
(assert (x3960 x3043 x4398 x4954 x611))
(assert (x447 x2693))
(assert (x447 x5946))
(assert (= x5992 (and x1118 x4619)))
(assert (x447 x4360))
(assert (x447 x6072))
(assert (= x5088 (and x3792 x583)))
(assert (x447 x6290))
(assert (= (or x1751 x2379) x1826))
(assert (= x2655 (x2338 (x1567 x2655))))
(assert (x447 x6331))
(assert (x447 x4071))
(assert (x447 x744))
(assert (= (and x6326 x701) x6327))
(assert (x447 x5447))
(assert (= x149 (or x2542 x5702)))
(assert (= (=> (and (= 0 x1369) (= x5816 x1709)) x4162) x6154))
(assert (x447 x6349))
(assert (x447 x784))
(assert (= (and x5324 (not x6160)) x2619))
(assert (= (or x234 x5788 x5629 x3524 x3953 x1400) x2224))
(assert (x447 x1330))
(assert (= (and x986 x3093) x2498))
(assert (= (and x3381 x2490) x4020))
(assert (x447 x5863))
(assert (x447 x971))
(assert (x447 x172))
(assert (x447 x1857))
(assert (= x5954 (x2338 (x1567 x5954))))
(assert (= x3931 (x2338 (x1567 x3931))))
(assert (= x2280 (x2338 (x1567 x2280))))
(assert (x2992 x4506 (- x3043 x4398)))
(assert (= x5015 (and x3447 (not x4288))))
(assert (x447 x4770))
(assert (x447 x348))
(assert (not x5282))
(assert (x447 x1697))
(assert (x447 x4821))
(assert (x447 x3949))
(assert (= x1300 (and (not x1423) x5585)))
(assert (x447 x6218))
(assert (x447 x2710))
(assert (= x1366 (and x298 x588)))
(assert (= (x2338 (x1567 x6193)) x6193))
(assert (x447 x5750))
(assert (= (x2338 (x5097 826074471)) 826074471))
(assert (x3903 x2426))
(assert (= x4195 (and x1757 x1119)))
(assert (x447 x1665))
(assert (= x3384 (and (not x5161) x4106)))
(assert (=> (>= 10000 x5067) (= (x5097 x5067) (x1567 x5067))))
(assert (= x1874 (and x1642 x4463)))
(assert (x447 x5451))
(assert (= (or x4181 x105) x673))
(assert (= (x2338 (x1567 x5713)) x5713))
(assert (and (x5609 x4836 32) (x4601 x4836 32) (x301 x4836 32) (=> (> 32 0) (= (+ (x474 x4836 32) (* (x1849 x4836 32) 32)) x4836))))
(assert (x447 x2231))
(assert (= x4886 (and x804 x5442)))
(assert (= (and x1468 x1612) x135))
(assert (= x2067 (and x224 (not x3827))))
(assert (x447 x5401))
(assert (x447 x687))
(assert (= (=> (and (= x4072 x83) (= x1566 x5054)) x162) x36))
(assert (x447 x3920))
(assert (= x945 (and x4426 x3342)))
(assert (= (and x4866 x1006) x1056))
(assert (x447 x5174))
(assert (and (x5609 x5906 256) (x4601 x5906 256) (x301 x5906 256) (=> (> 256 0) (= (+ (x474 x5906 256) (* (x1849 x5906 256) 256)) x5906))))
(assert (= (=> (and (= x4644 x4206) (= x1876 x5685)) x4298) x694))
(assert (x447 x3436))
(assert (= x6116 (and x553 x2545)))
(assert (= (and (not x4982) x953) x904))
(assert (x447 x5757))
(assert (= (or (and x2333 (not x2260)) (and x6246 x5715)) x5508))
(assert (x1990 x1337))
(assert (= (and x5532 (not x1702)) x2352))
(assert (= x1082 (and x2654 x3123)))
(assert (x3903 x2856))
(assert (= x3316 (and (not x4342) x4182)))
(assert (= (=> (and (= x2544 x4173) (= 0 x3850)) x508) x4900))
(assert (x3903 x1181))
(assert (= x981 (and x2416 (not x99))))
(assert (= (=> (and (= 0 x3393) (= x4026 x715)) x2374) x2238))
(assert (x1990 x1192))
(assert (x447 x2729))
(assert (x447 x5966))
(assert (= (or x759 x1060) x942))
(assert (x447 x5164))
(assert (x447 x3338))
(assert (= x2540 (and x6203 x2780)))
(assert (x5592 (- x3043 x4398)))
(assert (= (and x2197 x4170) x4080))
(assert (x447 x4135))
(assert (= (=> (and (= x3659 x4290) (= x5853 x3196)) x6285) x1670))
(assert (= (x2338 (x1567 x5566)) x5566))
(assert (= x1052 (or x3670 x2465)))
(assert (= x5688 (and x1082 x1864)))
(assert (= (and x712 (not x4032)) x3609))
(assert (= (=> (and (= x2550 x3393) (= x1983 x4026)) x246) x2374))
(assert (x447 x5284))
(assert (x447 x5348))
(assert (x5592 x4954))
(assert (= x5759 (and x1695 x3633)))
(assert (x447 x28))
(assert (=> (>= 10000 x2655) (= (x5097 x2655) (x1567 x2655))))
(assert (= x6258 (and x1365 (not x1808))))
(assert (= (and (not x2533) x5725) x218))
(assert (x447 x2073))
(assert (= x3668 (x2338 (x1567 x3668))))
(assert (= (and x4463 (not x1642)) x2452))
(assert (x447 x580))
(assert (= (x5097 2681229421) (x1567 2681229421)))
(assert (x447 x5274))
(assert (= (and x79 (not x179)) x6070))
(assert (x3903 x3233))
(assert (= x4277 (and x297 (not x2443))))
(assert (x447 x139))
(assert (= (and x1663 (not x225)) x1562))
(assert (x447 x5218))
(assert (= (and (not x5765) x6079) x1873))
(assert (x447 x3931))
(assert (= x3739 (and x2090 x4975)))
(assert (= x4397 (and x3694 x2743)))
(assert (= (and (not x3963) x1881) x2970))
(assert (x447 x4673))
(assert (x3903 x6150))
(assert (= x874 (and (not x3118) x3846)))
(assert (= (or x1968 x4268) x2467))
(assert (x447 x922))
(assert (x3903 x5443))
(assert (and (x5609 x4535 256) (x4601 x4535 256) (x301 x4535 256) (=> (> 256 0) (= (+ (x474 x4535 256) (* (x1849 x4535 256) 256)) x4535))))
(assert (x447 x1254))
(assert (= (and x3566 x43) x2110))
(assert (x447 x496))
(assert (= x332 (and x1682 (not x2351))))
(assert (x3903 x3713))
(assert (= (=> (and (= x4395 x4638) (= x2010 0)) x1264) x4246))
(assert (x447 x4225))
(assert (x1957 x3043 x4398 x4954 x611))
(assert (= x80 (and x104 x2150)))
(assert (= x5460 (and x4961 x800)))
(assert (= (and x3529 x85) x1877))
(assert (= (or x336 x1297 x512 x3312 x2395 x430 x4855 x4902 x1720 x6253 x452 x4193 x3891) x4743))
(assert (=> (<= x523 10000) (= (x5097 x523) (x1567 x523))))
(assert (= (=> (and (= x2584 x482) (= x3019 0)) x3185) x5125))
(assert (= (and x6079 x5765) x6354))
(assert (= 1117154408 (x2338 (x5097 1117154408))))
(assert (= x4167 (and x5787 (not x2355))))
(assert (= (=> (and (= x1747 x1619) (= x6122 x5154)) x2568) x4311))
(assert (x447 x5610))
(assert (x447 x378))
(assert (x447 x5143))
(assert (x447 x5231))
(assert (x5383 x529))
(assert (x447 x550))
(assert (= (and x4543 (not x5358)) x3682))
(assert (= (=> (and (= x5485 x4772) (= x6009 x2521)) x3131) x1325))
(assert (x447 x3189))
(assert (= x5653 x1542))
(assert (x447 x1221))
(assert (x447 x1588))
(assert (x447 x5651))
(assert (x447 x6000))
(assert (x447 x5600))
(assert (= x4136 (and x4868 x5407)))
(assert (x1957 x4954 x611 x4398 x3043))
(assert (= (x2338 (x1567 x3234)) x3234))
(assert (x1990 x459))
(assert (x447 x1832))
(assert (x447 x2362))
(assert (= (=> (and (= x5853 x3242) (= x2191 x4290)) x6285) x3227))
(assert (x447 x1494))
(assert (x447 x1058))
(assert (= x558 (and x4600 (not x1139))))
(assert (x447 x3509))
(assert (x1990 x4418))
(assert (= (x2338 (x1567 x5772)) x5772))
(assert (x447 x5230))
(assert (x447 x6288))
(assert (x447 x5462))
(assert (= x4541 (and x1904 x349)))
(assert (= x4022 (and x2281 x1421)))
(assert (= x941 (=> (and (= x2438 (< x811 x6337)) (<= x811 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x110 x977) x811) (= x977 (x476 (x1567 x5923) (x5097 1) 0)) (>= x811 0)) (and (=> (and (not x2438) (and (= (x6346 x6068) x2718) (= x6068 (x476 (x1567 x2669) (x5097 1) 0)) (>= x2718 0) (= (> x2718 x2639) x821) (= x2639 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6337))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2718) (= x3602 (x980 (- x811 x6337))))) (and (=> x821 x2146) (=> (and (and (= x1535 (x4937 (+ x6337 x2718))) (= 32 x5930) (= 1 x3408)) (not x821)) x3026))) (=> x2438 x2146)))))
(assert (x447 x5328))
(assert (= (x2338 (x5097 1431022396)) 1431022396))
(assert (x447 x1749))
(assert (x447 x3770))
(assert (x447 x73))
(assert (x447 x3288))
(assert (x447 x4586))
(assert (= (x2338 (x5097 599290589)) 599290589))
(assert (x447 x4093))
(assert (= x3233 (x2338 (x1567 x3233))))
(assert (x447 x4154))
(assert (x447 x3284))
(assert (= x3972 (or x48 x2952)))
(assert (x3903 x3906))
(assert (x1957 x3043 x4506 x3216 x3043))
(assert (= (and x4138 (not x4919)) x5955))
(assert (=> (>= 10000 x2741) (= (x1567 x2741) (x5097 x2741))))
(assert (= x5303 (or (and (not x3360) x1038) (and x3317 x3155) (and (not x3375) x1451))))
(assert (= x3098 (and x533 (not x1761))))
(assert (= x2411 (or x3496 x2067)))
(assert (x3903 x1445))
(assert (= x4941 (and x4721 (not x3050))))
(assert (x447 x2458))
(assert (= x5629 (and x949 (not x4912))))
(assert (x447 x2578))
(assert (x447 x1714))
(assert (= (and (not x3123) x2654) x4223))
(assert (and (x5609 x2580 1461501637330902918203684832716283019655932542976) (x4601 x2580 1461501637330902918203684832716283019655932542976) (x301 x2580 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x2580 1461501637330902918203684832716283019655932542976) (* (x1849 x2580 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x2580))))
(assert (x447 x4449))
(assert (and (x5609 x5778 1461501637330902918203684832716283019655932542976) (x4601 x5778 1461501637330902918203684832716283019655932542976) (x301 x5778 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x5778 1461501637330902918203684832716283019655932542976) (* (x1849 x5778 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x5778))))
(assert (x447 x1930))
(assert (x447 x4687))
(assert (= (and (not x1452) x5433) x669))
(assert (= (=> (= (> x2083 x4398) x5858) (and (=> x5858 x4355) (=> (and (= x2252 (> x2083 x4398)) (not x5858)) (and (=> (and (not x2252) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5148) (= (x980 (- x4398 x2083)) x2259) (>= x5148 0) (= (x476 (x1567 x717) (x5097 2) 0) x481) (= (x5244 x481) x5148) (= (> x4398 x5148) x2995))) (and (=> (and (= (< x5148 x4398) x1506) (not x2995)) (and (=> (and (and (= x5289 (x4911 x3552)) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2259)) x4642) (= (x476 (x1567 x4904) (x5097 2) 0) x3552) (= (x476 (x1567 x717) (x5097 2) 0) x42) (>= x5289 0) (= (x980 (- x5148 x4398)) x403) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5289) (= (> x5289 x4642) x645)) (not x1506)) (and (=> x645 x4355) (=> (and (not x645) (and (= (> x5289 x4245) x6006) (= (x4937 (+ x5289 x2259)) x4245))) (and (=> x6006 x4355) (=> (and (and (= (> x2083 0) x2304) (= x3218 (x476 (x1567 x4904) (x5097 2) 0))) (not x6006)) (and (=> (and x2304 (and (> 1461501637330902918203684832716283019655932542976 x5679) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2083)) x618) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6334) (<= 0 x5679) (= x3548 (> x6334 x618)) (<= 0 x6334) (<= x5679 1461501637330902918203684832716283019655932542975) (= (x476 (x1567 x5679) (x5097 2) 0) x3945) (= (x2811 x3945) x6334))) (and (=> x3548 x4355) (=> (and (not x3548) (and (= x4321 (> x6334 x4248)) (= (x4937 (+ x2083 x6334)) x4248))) (and (=> x4321 x4355) (=> (and (and (< x5679 1461501637330902918203684832716283019655932542976) (<= x5679 1461501637330902918203684832716283019655932542975) (<= 0 x5679) (<= x5679 1461501637330902918203684832716283019655932542975) (>= x5679 0) (> 1461501637330902918203684832716283019655932542976 x5679) (= (x476 (x1567 x5679) (x5097 2) 0) x3807)) (not x4321)) x719))))) (=> (not x2304) x719))))))) (=> x1506 x4355))) (=> x2995 x4355))) (=> x2252 x4355))))) x6062))
(assert (= (x2338 (x5097 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= x5345 (and x3149 x1946)))
(assert (= x339 (and x5552 x2210)))
(assert (x447 x3995))
(assert (= (and x3432 (not x925)) x1971))
(assert (= (and x2954 x4675) x4014))
(assert (x447 x6108))
(assert (x447 x5605))
(assert (x1990 x4836))
(assert (x447 x6105))
(assert (= (and x1635 (not x98)) x3669))
(assert (= x4834 (and (not x2181) x520)))
(assert (= (and x1072 (not x2865)) x1434))
(assert (x447 x3467))
(assert (x447 x3003))
(assert (= (and x988 x5288) x1970))
(assert (=> (>= 10000 x626) (= (x1567 x626) (x5097 x626))))
(assert (x447 x3385))
(assert (= x6064 (and (not x5232) x4940)))
(assert (x447 x2492))
(assert (= x4832 (and x3919 (not x6055))))
(assert (= x5539 (and x5186 (not x3916))))
(assert (x447 x4043))
(assert (= (x5097 445207142) (x1567 445207142)))
(assert (= x501 (and x1459 x1868)))
(assert (x447 x3135))
(assert (= (and (not x2150) x104) x6120))
(assert (x447 x3170))
(assert (x447 x2359))
(assert (x447 x527))
(assert (and (x5609 x1308 1461501637330902918203684832716283019655932542976) (x4601 x1308 1461501637330902918203684832716283019655932542976) (x301 x1308 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x1308 1461501637330902918203684832716283019655932542976) (* (x1849 x1308 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x1308))))
(assert (and (x5609 x4836 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4601 x4836 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x301 x4836 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x474 x4836 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1849 x4836 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x4836))))
(assert (x447 x3021))
(assert (= x5417 (and x1345 (not x2137))))
(assert (= (x1567 1889567281) (x5097 1889567281)))
(assert (x447 x3526))
(assert (x447 x1019))
(assert (= x563 (and (not x1780) x5861)))
(assert (= (and x5215 (not x4316)) x4976))
(assert (= (and x689 x1530) x5659))
(assert (x447 x5067))
(assert (x447 x4736))
(assert (= (and (not x3973) x2643) x2435))
(assert (= (and x2443 x297) x2909))
(assert (x447 x2142))
(assert (x447 x4384))
(assert (= x4411 (and x3518 x5332)))
(assert (and (x5609 x2678 256) (x4601 x2678 256) (x301 x2678 256) (=> (> 256 0) (= (+ (x474 x2678 256) (* (x1849 x2678 256) 256)) x2678))))
(assert (= (and (not x138) x5964) x6211))
(assert (x2992 x3043 (- x3216 x2378)))
(assert (=> (>= 10000 x3950) (= (x5097 x3950) (x1567 x3950))))
(assert (x447 x4956))
(assert (x447 x5718))
(assert (= x1591 (and x5672 (not x4610))))
(assert (x447 x1024))
(assert (x447 x6080))
(assert (x447 x2623))
(assert (x447 x5734))
(assert (x447 x5904))
(assert (= x4863 (and x395 x1016)))
(assert (x447 x1622))
(assert (= x3504 (and x3554 x5135)))
(assert (= x5270 (and (not x5372) x2258)))
(assert (x447 x76))
(assert (x447 x1021))
(assert (x447 x1673))
(assert (x447 x6235))
(assert (= x2603 (and x2587 (not x6199))))
(assert (= x4477 (and x2313 x4372)))
(assert (= x5667 (and (not x4833) x5789)))
(assert (= x4254 (and x6333 x4105)))
(assert (x1957 x4506 x3043 x4954 x611))
(assert (= (and x2376 x1512) x336))
(assert (= true x4450))
(assert (x447 x3503))
(assert (x5592 x3216))
(assert (x447 x5744))
(assert (= x4593 (and x355 (not x465))))
(assert (x447 x2920))
(assert (x447 x4213))
(assert (= (and x4280 x5047) x6134))
(assert (= x3536 (and x3037 (not x6058))))
(assert (x447 x3759))
(assert (= (and x5031 x288) x2591))
(assert (= (=> (and (= x715 x4621) (= 0 x2485)) x3591) x418))
(assert (x3903 x2147))
(assert (x447 x6014))
(assert (x447 x4566))
(assert (= (and x4016 x5474) x5983))
(assert (x447 x4248))
(assert (x447 x6063))
(assert (x447 x1733))
(assert (x3903 x3285))
(assert (= (and x5955 (not x5157)) x2180))
(assert (= (and x5341 (not x2301)) x3418))
(assert (x447 x5690))
(assert (x3903 x95))
(assert (x447 x703))
(assert (x447 x3389))
(assert (x447 x3401))
(assert (x447 x2232))
(assert (= (and x6138 x4137) x3599))
(assert (= x2523 (and (not x927) x319)))
(assert (= x647 (and x5445 x2236)))
(assert (= x881 (and (not x5185) x347)))
(assert (= (and x4955 x5375) x5608))
(assert (= x3652 (and x1792 (not x148))))
(assert (x447 x3833))
(assert (x447 x6180))
(assert (= x1968 (or x5555 x2771 x3244 x2585 x5831 x2332 x1316 x2887 x1971 x1618 x2288 x4027 x1789 x6134 x6175 x1035 x5809)))
(assert (x447 x5857))
(assert (x3903 x4060))
(assert (= x5007 (or x5769 x574)))
(assert (= (and (not x1770) x5665) x2827))
(assert (= x4488 (and x1516 x3445)))
(assert (= x4700 (or x2735 x1479)))
(assert (x447 x118))
(assert (x447 x3166))
(assert (x447 x3932))
(assert (= x6255 (and x5280 x644)))
(assert (= x714 (and (not x2314) x6162)))
(assert (= x3533 (=> (and (= x4901 x1983) (= x1221 x2550)) x246)))
(assert (x447 x2559))
(assert (x1957 x4954 x611 x3043 x6080))
(assert (= x3325 (=> (and (= x4913 x4201) (= x5284 x4437)) x342)))
(assert (= (and x1450 x6029) x3939))
(assert (= x3197 (and x1844 (not x4714))))
(assert (= x6286 (and x6257 x1949)))
(assert (= (and x2048 x5875) x4975))
(assert (x447 x5910))
(assert (x447 x626))
(assert (= (and x3669 (not x5921)) x839))
(assert (=> (>= 10000 x2147) (= (x1567 x2147) (x5097 x2147))))
(assert (= (x5097 2757214935) (x1567 2757214935)))
(assert (and (x5609 x2519 1461501637330902918203684832716283019655932542976) (x4601 x2519 1461501637330902918203684832716283019655932542976) (x301 x2519 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x2519 1461501637330902918203684832716283019655932542976) (* (x1849 x2519 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x2519))))
(assert (= (and (not x3386) x1434) x4880))
(assert (x1957 x2378 x3043 x611 x4954))
(assert (= x1422 (or (and x5637 x183) (and (not x559) x3001))))
(assert (x447 x4669))
(assert (= (and x5320 x1686) x770))
(assert (x447 x5040))
(assert (x447 x5856))
(assert (= (and x3280 (not x4141)) x4145))
(assert (x447 x33))
(assert (= x4841 (and x852 x4340)))
(assert (= 1510251120 (x2338 (x5097 1510251120))))
(assert (x3903 x407))
(assert (x447 x4265))
(assert (= (x2338 (x1567 x1330)) x1330))
(assert (= (x5097 1875902277) (x1567 1875902277)))
(assert (= x1725 (=> (and (= x2665 x2550) (= x1983 x5016)) x246)))
(assert (x447 x214))
(assert (= (x2338 (x1567 x5480)) x5480))
(assert (= (and x3457 x1773) x2447))
(assert (and (x5609 x6099 256) (x4601 x6099 256) (x301 x6099 256) (=> (> 256 0) (= (+ (x474 x6099 256) (* (x1849 x6099 256) 256)) x6099))))
(assert (= (=> (and (= x605 0) (= x3625 x6277)) x772) x2793))
(assert (x2992 x3043 (- x4506 x3216)))
(assert (x447 x6133))
(assert (x447 x5267))
(assert (x447 x627))
(assert (x447 x6365))
(assert (= (or x876 x1227 x2996 x3671 x5392 x3452 x4822 x4110 x2442 x2195 x3494 x5918 x4486 x651 x4210 x164 x3623) x5444))
(assert (= x1027 (=> (and (= x3399 x2999) (= x2676 x284)) x1529)))
(assert (x447 x653))
(assert (= x4443 (or x737 x3888)))
(assert (= x978 (and x4717 x391)))
(assert (= x518 (and (not x1907) x4563)))
(assert (= (and x3760 (not x2601)) x5914))
(assert (=> (>= 10000 x3267) (= (x1567 x3267) (x5097 x3267))))
(assert (= x884 (and x1193 x5127)))
(assert (= x2502 (and (not x5793) x6325)))
(assert (x447 x2206))
(assert (= x78 (and (not x3421) x4107)))
(assert (= x5898 (and x5265 x519)))
(assert (x5592 (- x4398 x3216)))
(assert (x447 x682))
(assert (= (and x300 x1109) x4932))
(assert (x447 x6123))
(assert (= (and x2360 x998) x5005))
(assert (x447 x3582))
(assert (x447 x3934))
(assert (= (=> (and (= x1619 0) (= x1551 x6122)) x4311) x2629))
(assert (x447 x2926))
(assert (x447 x5824))
(assert (x447 x2718))
(assert (x447 x4535))
(assert (x447 x3861))
(assert (= (and x1222 x2317) x4570))
(assert (= (and x2027 (not x4423)) x2332))
(assert (x447 x4707))
(assert (x447 x5408))
(assert (x3903 x2308))
(assert (= (x2338 (x1567 x4633)) x4633))
(assert (= x1282 (x2338 (x1567 x1282))))
(assert (= x5802 (and x1798 x5805)))
(assert (x447 x1396))
(assert (x447 x1627))
(assert (= (and x4329 x912) x3505))
(assert (= x5551 (and x1075 (not x6006))))
(assert (x447 x4818))
(assert (x1957 x3043 x6080 x611 x4954))
(assert (x447 x1829))
(assert (x447 x3410))
(assert (= x2423 (and (not x2988) x6348)))
(assert (x447 x5234))
(assert (x447 x4796))
(assert (= (=> (and (= 0 x5284) (= x6277 x4913)) x3325) x965))
(assert (x3903 x672))
(assert (x54 x494))
(assert (x447 x376))
(assert (=> (<= x4908 10000) (= (x1567 x4908) (x5097 x4908))))
(assert (x447 x630))
(assert (= x6214 (=> (and (= 0 x2893) (= x4158 x6277)) x2346)))
(assert (= (and (not x5193) x2970) x2735))
(assert (x5592 (- x3216 x611)))
(assert (x447 x2844))
(assert (x447 x5778))
(assert (= x5505 (or x2401 x4662)))
(assert (x3903 x3564))
(assert (= (and x2751 x6021) x2189))
(assert (x447 x4300))
(assert (= x692 (or x2165 x1863 x1334 x3559 x1515 x2194 x1293 x270 x325 x3047 x2489)))
(assert (= (and (not x2740) x3225) x4485))
(assert (= x5321 (and x3935 (not x6037))))
(assert (and (= 81 (x423 27 3)) (= 9 (x423 3 3)) (= (x423 9 3) 27) (= (x423 9 9) 81)))
(assert (=> (<= x535 10000) (= (x5097 x535) (x1567 x535))))
(assert (= (and (not x1989) x3771) x4712))
(assert (= (and x5098 (not x3787)) x355))
(assert (= x3799 (and x269 (not x3952))))
(assert (= x2902 (and (not x2503) x2358)))
(assert (x447 x3328))
(assert (= x1839 (or x1009 x5059 x115 x4850 x3676 x1449 x2512 x2446 x4608 x6255 x623 x3396)))
(assert (= (and (not x72) x2444) x1444))
(assert (=> (<= x5923 10000) (= (x5097 x5923) (x1567 x5923))))
(assert (x447 x3465))
(assert (x447 x5325))
(assert (x447 x4428))
(assert (= (and x2565 x3619) x5787))
(assert (x447 x2160))
(assert (= (and (not x2504) x4653) x5871))
(assert (x447 x3064))
(assert (x447 x3803))
(assert (x447 x1955))
(assert (x1957 x3043 x6080 x3043 x4506))
(assert (= (and x2754 x4279) x1738))
(assert (x447 x95))
(assert (x5383 x4169))
(assert (= (and (not x6158) x4303) x2648))
(assert (= (or x5830 x3036) x4602))
(assert (x447 x5180))
(assert (= (and x274 (not x773)) x4339))
(assert (= (and x758 x3058) x359))
(assert (x447 x2139))
(assert (x447 x4657))
(assert (= x5302 (and x5688 x594)))
(assert (x447 x6082))
(assert (x447 x6107))
(assert (x447 x1774))
(assert (and (x5609 x4059 256) (x4601 x4059 256) (x301 x4059 256) (=> (> 256 0) (= (+ (x474 x4059 256) (* (x1849 x4059 256) 256)) x4059))))
(assert (x447 x3579))
(assert (x447 x3655))
(assert (= x4440 (=> (and (= x4597 0) (= x2857 x5816)) x3400)))
(assert (x447 x3382))
(assert (= x2329 (=> (and (= x829 0) (= x2086 x2584)) x3746)))
(assert (x447 x1460))
(assert (x447 x5289))
(assert (= (=> (and (= 0 x5487) (= x4351 x5816)) x2618) x2956))
(assert (x447 x4081))
(assert (x447 x3970))
(assert (= (and x1222 (not x2317)) x4114))
(assert (= (x2338 (x1567 x535)) x535))
(assert (= x3244 (and x2054 x2839)))
(assert (= x5754 (and (not x2971) x825)))
(assert (x1957 x4398 x3043 x4954 x611))
(assert (x447 x3748))
(assert (x447 x2306))
(assert (= (and x2720 x5323) x2233))
(assert (= (and x4785 x3372) x363))
(assert (x5592 (- x611 x2378)))
(assert (x447 x4795))
(assert (= (and (not x4558) x3569) x640))
(assert (= x122 (and (not x2044) x173)))
(assert (= x2145 (and x3563 x78)))
(assert (= (x1567 773487949) (x5097 773487949)))
(assert (= (x5097 1086394137) (x1567 1086394137)))
(assert (= x2507 (and x489 x97)))
(assert (x447 x6362))
(assert (= (and (not x1768) x422) x3874))
(assert (x5592 (- x4954 x6080)))
(assert (x447 x3446))
(assert (= x5818 (and (not x4599) x6127)))
(assert (= (and x1693 x5389) x2407))
(assert (=> (<= x3906 10000) (= (x1567 x3906) (x5097 x3906))))
(assert (= (and x46 x6031) x707))
(assert (x2992 x3043 (- x4506 x4398)))
(assert (x447 x3015))
(assert (x447 x778))
(assert (=> (<= x3930 10000) (= (x5097 x3930) (x1567 x3930))))
(assert (=> (>= 10000 x2628) (= (x5097 x2628) (x1567 x2628))))
(assert (= (and (not x5839) x1924) x2980))
(assert (= (and x466 x5306) x245))
(assert (x447 x327))
(assert (x1990 x1901))
(assert (= x1454 (and x1225 x6056)))
(assert (=> (>= 10000 x6003) (= (x5097 x6003) (x1567 x6003))))
(assert (x447 x4788))
(assert (= x1380 (and x4006 x1166)))
(assert (= x79 (and x2558 (not x1034))))
(assert (= (and (not x1185) x6120) x4134))
(assert (= (or x2278 x1257) x2119))
(assert (x447 x4332))
(assert (= x5682 (and x3034 x639)))
(assert (= (=> (and (= x5054 x3214) (= x4072 x2699)) x162) x2103))
(assert (x447 x5440))
(assert (x447 x3422))
(assert (x447 x504))
(assert (x447 x4487))
(assert (= x2579 (and x4973 (not x2170))))
(assert (= (and x2894 x5266) x2256))
(assert (x447 x3028))
(assert (x447 x2151))
(assert (x5383 10000))
(assert (= x6169 (and x2603 x4057)))
(assert (x447 x1180))
(assert (x3903 x1469))
(assert (x447 x5616))
(assert (= x2249 (and x3958 (not x4684))))
(assert (x447 x2822))
(assert (= x5216 (and (not x3873) x260)))
(assert (x3903 x152))
(assert (= x1887 (x2338 (x1567 x1887))))
(assert (x447 x1699))
(assert (= x6011 (and x5789 x4833)))
(assert (x447 x6148))
(assert (x447 x3900))
(assert (= (and x1500 x5858) x571))
(assert (x447 x1996))
(assert (x447 x2764))
(assert (x3960 x2378 x3043 x4506 x3043))
(assert (x447 x1354))
(assert (x447 x273))
(assert (= x1660 (=> (= (< x2378 x2434) x3007) (and (=> (and (= (< x2378 x2434) x3916) (not x3007)) (and (=> x3916 x5496) (=> (and (not x3916) (and (= x2076 (x476 (x1567 x2741) (x5097 2) 0)) (= x4370 (x5244 x2076)) (= (x980 (- x2378 x2434)) x3441) (= (> x2378 x4370) x1855) (<= x4370 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4370 0))) (and (=> x1855 x5496) (=> (and (= (< x4370 x2378) x4256) (not x1855)) (and (=> (and (and (= x1140 (x980 (- x4370 x2378))) (= x2398 (x476 (x1567 x2741) (x5097 2) 0)) (<= x5512 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x5512 0) (= x2289 (x476 (x1567 x5566) (x5097 2) 0)) (= x2786 (> x5512 x145)) (= x145 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3441))) (= x5512 (x797 x2289))) (not x4256)) (and (=> x2786 x5496) (=> (and (and (= x6281 (< x705 x5512)) (= x705 (x4937 (+ x3441 x5512)))) (not x2786)) (and (=> x6281 x5496) (=> (and (and (= (< 0 x2434) x1251) (= (x476 (x1567 x5566) (x5097 2) 0) x5599)) (not x6281)) (and (=> (not x1251) x4452) (=> (and (and (<= x2492 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1856 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2434))) (<= 0 x5679) (= x2492 (x6098 x615)) (>= x2492 0) (= x1827 (> x2492 x1856)) (<= x5679 1461501637330902918203684832716283019655932542975) (= (x476 (x1567 x5679) (x5097 2) 0) x615) (> 1461501637330902918203684832716283019655932542976 x5679)) x1251) (and (=> (and (and (= x2169 (x4937 (+ x2492 x2434))) (= (< x2169 x2492) x5281)) (not x1827)) (and (=> x5281 x5496) (=> (and (and (<= x5679 1461501637330902918203684832716283019655932542975) (<= 0 x5679) (= x2994 (x476 (x1567 x5679) (x5097 2) 0)) (<= x5679 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x5679) (>= x5679 0) (< x5679 1461501637330902918203684832716283019655932542976)) (not x5281)) x4452))) (=> x1827 x5496))))))))) (=> x4256 x5496))))))) (=> x3007 x5496)))))
(assert (=> (>= 10000 x662) (= (x1567 x662) (x5097 x662))))
(assert (x447 x5435))
(assert (= (and x3637 (not x5798)) x5967))
(assert (= x2855 (and x2965 x718)))
(assert (= x2254 (=> (and (= x5570 0) (= x715 x3882)) x5058)))
(assert (x447 x3092))
(assert (x447 x625))
(assert (x729 x4357))
(assert (= x2081 (and x3162 x6109)))
(assert (x447 x5954))
(assert (= x1203 (and x1737 x5346)))
(assert (=> (<= x3750 10000) (= (x5097 x3750) (x1567 x3750))))
(assert (= x768 (and x3098 x264)))
(assert (x447 x2675))
(assert (= (and x4455 x5100) x1675))
(assert (x1957 x4954 x611 x3043 x4506))
(assert (= (and (not x120) x869) x3040))
(assert (= (and x1148 x1779) x793))
(assert (= x2195 (and x5945 x4794)))
(assert (= x48 (and (not x3657) x3065)))
(assert (= (and (not x4516) x2068) x2242))
(assert (x447 x5869))
(assert (x447 x3196))
(assert (x2118 x1337 x541))
(assert (x447 x3532))
(assert (= (and x2066 x4834) x3225))
(assert (x447 x414))
(assert (= x2568 (=> (and (or (not x6095) x6095) (= x6095 (= x1747 0))) x1294)))
(assert (= x2923 (and x1924 x5839)))
(assert (= (=> (and (= x2129 x5816) (= x6124 0)) x233) x17))
(assert (=> (>= 10000 x5954) (= (x1567 x5954) (x5097 x5954))))
(assert (x447 x1372))
(assert (x447 x833))
(assert (x447 x2409))
(assert (= (and x3352 x3391) x6289))
(assert (= x3593 (and x2679 (not x4387))))
(assert (=> (>= 10000 x4307) (= (x5097 x4307) (x1567 x4307))))
(assert (= x4959 (and (not x4105) x6333)))
(assert (= x1265 (and (not x5677) x2249)))
(assert (x3903 x3305))
(assert (x447 x231))
(assert (= (x2338 (x1567 x840)) x840))
(assert (= (and (not x3681) x5141) x4483))
(assert (= (and x663 x2576) x3069))
(assert (= x4107 (and x2242 (not x5848))))
(assert (x447 x1540))
(assert (x447 x6231))
(assert (= x1766 (or x1674 x117 x1253 x5022 x1909 x2703)))
(assert (x447 x5436))
(assert (= (and x578 x6026) x3673))
(assert (= (and x4499 x3650) x4921))
(assert (= (x2338 (x1567 x5745)) x5745))
(assert (x447 x5138))
(assert (= (and x1637 x4339) x4828))
(assert (x447 x1677))
(assert (x447 x2345))
(assert (x447 x2384))
(assert (x447 x1367))
(assert (x552 x4309))
(assert (= (=> (and (or (not x1341) x1341) (= (= 0 x2676) x1341)) x5706) x1529))
(assert (x447 x1778))
(assert (= x4297 (and x1454 (not x581))))
(assert (x447 x5364))
(assert (= x3876 (and x2303 x6129)))
(assert (x447 x144))
(assert (= x2868 (=> (and (= x865 0) (= x6277 x4553)) x1975)))
(assert (= (and (not x2369) x4606) x1313))
(assert (= (and (not x751) x3599) x741))
(assert (= x5571 (and (not x5419) x4407)))
(assert (= (and x1859 x4002) x4814))
(assert (= (and x5414 x5773) x6261))
(assert (= x277 (x2338 (x1567 x277))))
(assert (x1957 x4506 x3043 x3043 x2378))
(assert (x447 x4578))
(assert (x447 x6163))
(assert (= x422 (and x2423 x281)))
(assert (x447 x5471))
(assert (x447 x4040))
(assert (x552 x312))
(assert (x447 x6164))
(assert (= (and x3589 (not x2973)) x4699))
(assert (= (=> (and (= 0 x2263) (= x5816 x1474)) x1101) x5927))
(assert (x3903 x3234))
(assert (x2992 x3043 (- x4506 x4954)))
(assert (= (=> (and (= x1503 (= x3113 0)) (or (not x1503) x1503)) x1168) x3194))
(assert (= x6253 (and x2805 x882)))
(assert (= (or x1549 x4197 x112 x590 x5692) x2000))
(assert (x447 x4497))
(assert (x447 x6334))
(assert (= x5675 (and x1105 x4997)))
(assert (= x814 (and x5729 x6050)))
(assert (= x2548 (and x269 x3952)))
(assert (= x152 (x2338 (x1567 x152))))
(assert (= (and x3493 x1042) x5117))
(assert (= (and x606 (not x5569)) x6270))
(assert (= x1015 (=> (and (= x4072 x5856) (= x4646 x5054)) x162)))
(assert (= (and (not x863) x4333) x5702))
(assert (x447 x5804))
(assert (x54 x6099))
(assert (= (and (not x997) x2253) x3483))
(assert (x447 x4132))
(assert (x447 x296))
(assert (= (x2338 (x1567 x3438)) x3438))
(assert (x447 x4351))
(assert (x447 x5166))
(assert (x447 x3249))
(assert (= (or x1583 x4761 x4029 x3025 x1767 x4030) x3273))
(assert (x447 x5618))
(assert (= (and x4518 x5072) x4830))
(assert (x447 x2219))
(assert (= x4517 (=> (and (= x285 0) (= x5531 x2584)) x3208)))
(assert (x2992 x3216 (- x3043 x2378)))
(assert (x447 x2220))
(assert (x447 x2459))
(assert (x447 x4904))
(assert (x447 x3366))
(assert (= x5147 (or x5203 x6270)))
(assert (= x2096 (or x6036 x2180)))
(assert (= (and (not x4425) x5900) x4961))
(assert (x447 x6358))
(assert (x447 x3930))
(assert (= (and x3475 (not x5311)) x2541))
(assert (= x1751 (and x4940 x5232)))
(assert (= x1516 (and x265 x2627)))
(assert (= x2767 (and x6268 x3491)))
(assert (x447 x4808))
(assert (= x6283 (or x2000 x994)))
(assert (x447 x3120))
(assert (x447 x5476))
(assert (= x342 (=> (and (or (not x3145) x3145) (= (= x4437 0) x3145)) x2702)))
(assert (x447 x905))
(assert (= (=> (and (= x715 x5016) (= 0 x2665)) x1725) x2847))
(assert (= x1476 (and x1691 (not x5229))))
(assert (x3903 x6193))
(assert (x54 x2519))
(assert (x447 x2474))
(assert (x3903 x5470))
(assert (= (and x4824 (not x2204)) x140))
(assert (x447 x996))
(assert (x447 x5597))
(assert (= x5800 (=> (and (= 0 x337) (= x5946 x2681)) x4091)))
(assert (x447 x442))
(assert (= x5263 (and x3958 x4684)))
(assert (x447 x589))
(assert (=> (>= 10000 x407) (= (x1567 x407) (x5097 x407))))
(assert (x447 x1484))
(assert (x1957 x3216 x3043 x611 x4954))
(assert (x1990 x4357))
(assert (x552 x3401))
(assert (x2992 x4506 (- x3043 x3216)))
(assert (= x6086 (or (and (not x3052) x4478) (and x5402 x6045))))
(assert (= (x2338 (x1567 x4276)) x4276))
(assert (= x2922 (and x2918 x5785)))
(assert (x447 x2813))
(assert (x447 x3486))
(assert (= (and x1612 (not x1468)) x3883))
(assert (= (and x492 x3794) x567))
(assert (= (x1567 3088143374) (x5097 3088143374)))
(assert (x447 x4076))
(assert (x447 x1606))
(assert (x1957 x4398 x3043 x611 x4954))
(assert (x447 x3330))
(assert (x447 x4434))
(assert (x3903 x1132))
(assert (x447 x2899))
(assert (x447 x1940))
(assert (= x920 (and x4643 (not x5264))))
(assert (= x5112 (and x1010 x4529)))
(assert (x447 x1317))
(assert (= x3267 (x2338 (x1567 x3267))))
(assert (= (and x1300 (not x5926)) x2063))
(assert (x447 x6197))
(assert (= (and x1755 x4324) x5068))
(assert (= (and x415 (not x3821)) x1846))
(assert (x447 x2726))
(assert (= (and (not x6140) x5723) x5918))
(assert (= 2512374353 (x2338 (x5097 2512374353))))
(assert (x447 x1535))
(assert (x447 x5498))
(assert (= (and (not x1822) x2109) x1737))
(assert (= x5525 (and (not x1120) x1481)))
(assert (= (x2338 (x1567 x2331)) x2331))
(assert (= (and x4021 (not x371)) x5291))
(assert (x447 x2810))
(assert (= x2772 (and (not x2995) x3738)))
(assert (x447 x5604))
(assert (x447 x1472))
(assert (= x4499 (and x6151 x6012)))
(assert (= 2514000705 (x2338 (x5097 2514000705))))
(assert (x447 x2309))
(assert (= x5072 (and x1481 x1120)))
(assert (x447 x4943))
(assert (x447 x284))
(assert (= x781 (and x6260 x5315)))
(assert (x3903 x3039))
(assert (= (and x6258 x102) x4027))
(assert (and (x5609 x312 1461501637330902918203684832716283019655932542976) (x4601 x312 1461501637330902918203684832716283019655932542976) (x301 x312 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x312 1461501637330902918203684832716283019655932542976) (* (x1849 x312 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x312))))
(assert (x3960 x3043 x6080 x3216 x3043))
(assert (x3960 x3043 x4506 x4954 x611))
(assert (= (and x1501 (not x4860)) x1881))
(assert (= x3629 (and x758 (not x3058))))
(assert (x447 x4945))
(assert (= (and (not x3758) x3413) x6282))
(assert (= (and x756 (not x1128)) x3320))
(assert (= (or x6004 x1664) x1786))
(assert (x447 x497))
(assert (= x5430 (or x1748 x2713 x4241 x945 x5263 x1514 x5625 x332 x868)))
(assert (= (and x6075 x3609) x3377))
(assert (= x533 (and x3860 x3294)))
(assert (= (and x3252 x4310) x1061))
(assert (x447 x331))
(assert (x447 x720))
(assert (x447 x1813))
(assert (= x1269 (and x2229 x69)))
(assert (= (and (not x1982) x3697) x4905))
(assert (x447 x503))
(assert (x447 x6103))
(assert (= x5656 (and (not x2788) x5976)))
(assert (x447 x6280))
(assert (x3903 x205))
(assert (= x1710 (and (not x1520) x4275)))
(assert (= x3434 (and x4865 x839)))
(assert (x1990 x5906))
(assert (x447 x3869))
(assert (= (or x579 x113) x1863))
(assert (x447 x1656))
(assert (x1957 x3043 x6080 x3216 x3043))
(assert (= (and (not x847) x3951) x3331))
(assert (= x1274 (and x1098 x126)))
(assert (x447 x1895))
(assert (x447 x380))
(assert (x447 x3723))
(assert (x447 x605))
(assert (x447 x2138))
(assert (= (=> (and (= x3679 x4434) (= x4265 0)) x2501) x3087))
(assert (= (=> (and (= x4901 x715) (= x1221 0)) x3533) x1279))
(assert (x447 x1333))
(assert (= x4060 (x2338 (x1567 x4060))))
(assert (x447 x5994))
(assert (= (and x3717 x6181) x792))
(assert (= (and x872 (not x5329)) x3913))
(assert (x447 x5544))
(assert (x447 x5923))
(assert (= x5692 (and x2336 x842)))
(assert (= (and x791 x1276) x2939))
(assert (= x2763 (and x6055 x3919)))
(assert (= (and x2307 x4938) x3494))
(assert (x447 x3851))
(assert (= x121 (and x1429 x1511)))
(assert (= (and x2737 x5525) x5969))
(assert (x447 x5188))
(assert (x447 x3269))
(assert (= (x2338 (x1567 x5880)) x5880))
(assert (= (and x5870 x3224) x2954))
(assert (x447 x1730))
(assert (= (and x5684 (not x4782)) x2482))
(assert (= (and x3753 x1689) x5891))
(assert (= (and x3106 (not x4647)) x3637))
(assert (x447 x2308))
(assert (=> (<= x2426 10000) (= (x1567 x2426) (x5097 x2426))))
(assert (x2992 x3043 (- x6080 x4954)))
(assert (= x6216 (and x3699 x5291)))
(assert (= x4493 (or x2119 x2632 x2001 x5763 x1880 x262 x4443 x4502 x1214 x1052 x551)))
(assert (x447 x374))
(assert (= x2728 (and (not x972) x6152)))
(assert (= x3364 (=> (and (not (= 0 x3249)) (= x5180 (x4937 (+ x3510 32))) (= x5744 (x4937 (+ x196 x755))) (= (x4937 (+ 4 x5744)) x4476) (= x656 (x4937 (+ 96 x4476))) (not (= x5006 0)) (> 1461501637330902918203684832716283019655932542976 x1445) (= (= x2069 0) x3731) (= x4209 (not x3731)) (= (x2549 (x1567 x1445)) x3249) (= x1901 (x4937 (+ 31 x6042))) (= x3217 (= x1445 x2417)) (>= x1445 0) (= x3480 (ite x4209 1 0)) (< 0 x2069) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6042) true) (< x6042 32)) (> x6042 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x755 (x350 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1901)) (>= 1461501637330902918203684832716283019655932542975 x1445) (= x2069 (x1218 x196)) (= x3510 (x4937 (+ x4476 32))) (= x2354 (x980 (- x656 x5744))) (= x3480 x2069)) (and (=> (and (not x3217) (= x3921 (= x5713 x1445))) (and (=> (and x3921 (and (= 599290589 x5676) (> 2127478272 x5676) (not (< x4578 4)) (= x4578 100) (> 716570693 x5676) (= x4578 x2354) (not (= 117300739 x5676)) (not (= x5676 404098525)) (< 0 x2848) (not (= x5676 157198259)) (= x1192 x1477) (= (x980 (- x4578 4)) x3820) (> 903454517 x5676) (not (= 445207142 x5676)) (= (x2549 (x1567 x5713)) x2848) (= x4089 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3820) (and (< x3820 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3820) true)))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2506) (= x968 x239) (= x5401 x4332))) (and (=> x4089 x1279) (=> (and (not x4089) (and (= x1170 x1477) (= x3605 (x350 1461501637330902918203684832716283019655932542975 x1192)) (= x4400 (= x1192 x3605)))) (and (=> (not x4400) x1279) (=> (and x4400 (and (= x1600 (= x4332 x5401)) (= x2979 x5401))) (and (=> (not x1600) x1279) (=> (and x1600 (and (>= 255 x3269) (= (= 0 x3269) x3616) (= x5988 x239) (> 256 x3269) (>= x3269 0))) (and (=> (and x3616 (and (<= 0 x3470) (<= x3470 255) (> 256 x3470) (= (x476 (x1567 x4332) (x5097 3) 0) x2658) (= (x3271 x2658) x3470) (= x3753 (= x3470 0)))) (and (=> (not x3753) x1279) (=> (and x3753 (and (= (x476 (x1567 x6193) (x5097 3) 0) x1229) (= (x350 1461501637330902918203684832716283019655932542975 x1477) x6193) (= x1609 (= 0 x5642)) (>= x5642 0) (> 256 x5642) (>= 255 x5642) (= x5642 (x3271 x1229)))) (and (=> (and x1609 (and (>= 255 x6082) (<= 0 x6082) (< x6082 256) (= (x476 (x1567 x5401) (x5097 3) 0) x5399) (= (= 0 x6082) x5185) (= (x3271 x5399) x6082))) (and (=> (and x5185 (and (= x3075 (x476 (x1567 x4332) x2487 0)) (= x2074 (x350 1461501637330902918203684832716283019655932542975 x1477)) (= x2487 (x476 (x1567 x2074) (x5097 10) 0)) (<= x6014 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x6014 x239) x5127) (>= x6014 0) (= (x1604 x3075) x6014))) (and (=> x5127 x1279) (=> (and (and (= x1750 (= x1320 0)) (= x1320 (x350 1461501637330902918203684832716283019655932542975 x1477))) (not x5127)) (and (=> (and (not x1750) (= x1448 (= 0 x5401))) (and (=> (and (and (= x6340 (x476 (x1567 x3917) (x5097 9) 0)) (>= x3816 0) (= x2170 (> x239 x3816)) (= (x292 x6340) x3816) (<= x3816 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x350 1461501637330902918203684832716283019655932542975 x1477) x3917)) (not x1448)) (and (=> (and (and (= x3620 128) (= x535 (x350 1461501637330902918203684832716283019655932542975 x1477)) (= x3100 (< x1669 x239)) (<= x1669 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x476 (x1567 x535) (x5097 9) 0) x5013) (>= x1669 0) (= x1669 (x292 x5013))) (not x2170)) (and (=> (and (= (< x1669 x239) x1642) (not x3100)) (and (=> x1642 x1279) (=> (and (and (= (> x4062 x5937) x3519) (<= 0 x4062) (= x5937 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x239))) (= x4062 (x5915 x5354)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4062) (= x3305 (x350 1461501637330902918203684832716283019655932542975 x1477)) (= x844 (x476 (x1567 x3305) (x5097 9) 0)) (= x5354 (x476 (x1567 x5401) (x5097 9) 0)) (= (x980 (- x1669 x239)) x2686)) (not x1642)) (and (=> x3519 x1279) (=> (and (and (= x2820 (> x4062 x398)) (= (x4937 (+ x4062 x239)) x398)) (not x3519)) (and (=> x2820 x1279) (=> (and (not x2820) (and (= x4977 (x1604 x1958)) (= (> x239 x4977) x316) (= x4164 192) (= (x350 1461501637330902918203684832716283019655932542975 x1477) x4380) (= (x476 (x1567 x4380) (x5097 10) 0) x5380) (= x2944 (x476 (x1567 x5401) (x5097 9) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4977) (= (x476 (x1567 x4332) x5380 0) x1958) (<= 0 x4977))) (and (=> x316 x1279) (=> (and (= (< x4977 x239) x3977) (not x316)) (and (=> (and (and (= x4901 32) (= (x980 (- x4977 x239)) x3804) (= x5409 (x350 1461501637330902918203684832716283019655932542975 x1477)) (= 1 x1221)) (not x3977)) x3533) (=> x3977 x1279))))))))))) (=> x3100 x1279))) (=> x2170 x1279))) (=> x1448 x1279))) (=> x1750 x1279))))) (=> (not x5185) x1279))) (=> (not x1609) x1279))))) (=> (not x3616) x1279))))))))) (=> (and (not x3921) (= x3929 (= x1445 x5547))) (and (=> (and (= x4889 (= x1445 x4332)) (not x3929)) (and (=> (and (not x4889) (= x5724 (= x1445 x2020))) (and (=> (and (= (= x1445 x3267) x5137) (not x5724)) (and (=> (and x5137 (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3482) (not (= x2895 157198259)) (not (= x2895 404098525)) (= (x980 (- x5231 4)) x2829) (= x4376 (x2549 (x1567 x3267))) (> 826074471 x2895) (= x5231 100) (not (> 4 x5231)) (= x5948 x968) (= x273 x1192) (= x2895 599290589) (= x2354 x5231) (< 0 x4376) (= x3808 x4332) (= x2988 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2829) (and (= (<= x2829 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x2829)))) (not (= x2895 117300739)))) (and (=> x2988 x1014) (=> (and (not x2988) (and (= x4225 (x350 1461501637330902918203684832716283019655932542975 x1192)) (= x281 (= x4225 x1192)) (= x2862 x273))) (and (=> (and x281 (and (= x1768 (= x4332 x3808)) (= x3808 x5943))) (and (=> (and (and (= x5948 x3062) (= (= 0 x3808) x3252)) x1768) (and (=> (and (not x3252) (and (= (x350 1461501637330902918203684832716283019655932542975 x273) x1708) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2459) (= x2212 (< x2459 x5948)) (>= x2459 0) (= x1346 (x476 (x1567 x1708) (x5097 1) 0)) (= x2459 (x5146 x1346)))) (and (=> x2212 x1014) (=> (and (not x2212) (and (>= x3198 0) (= (x350 1461501637330902918203684832716283019655932542975 x273) x1282) (<= x3198 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x476 (x1567 x1282) (x5097 2) 0) x6207) (= (x6019 x2569) x3198) (= x2569 (x476 (x1567 x4332) x6207 0)) (= (< x3198 x5948) x5144))) (and (=> x5144 x1014) (=> (and (and (<= 0 x6085) (= x4797 (x476 (x1567 x209) (x5097 1) 0)) (= (x350 1461501637330902918203684832716283019655932542975 x273) x209) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6085) (= (x5146 x4797) x6085) (= x1303 (> x5948 x6085))) (not x5144)) (and (=> (and (and (= x2043 (x476 (x1567 x1353) (x5097 2) 0)) (= (x476 (x1567 x4332) x2043 0) x3904) (= (x350 1461501637330902918203684832716283019655932542975 x273) x2782) (= x1353 (x350 1461501637330902918203684832716283019655932542975 x273)) (= (x980 (- x6085 x5948)) x4542) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1317) (= (< x1317 x5948) x5729) (= x1317 (x6019 x3904)) (<= 0 x1317) (= (x476 (x1567 x2782) (x5097 1) 0) x841)) (not x1303)) (and (=> (and (not x5729) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2173) (= (x476 (x1567 x3808) (x5097 1) 0) x1927) (>= x2173 0) (= (x980 (- x1317 x5948)) x4657) (= (> x2173 x6320) x3873) (= (x2885 x1927) x2173) (= (x350 1461501637330902918203684832716283019655932542975 x273) x1018) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5948)) x6320))) (and (=> x3873 x1014) (=> (and (and (= 1 x2517) (= x3678 (x4651 128)) (= x5140 32) (= (x4937 (+ x5948 x2173)) x3437) (= (x476 (x1567 x3808) (x5097 1) 0) x5660) (= x5865 1)) (not x3873)) x591))) (=> x5729 x1014))) (=> x1303 x1014))))))) (=> x3252 x1014))) (=> (not x1768) x1014))) (=> (not x281) x1014))))) (=> (and (= x120 (= x2280 x1445)) (not x5137)) (and (=> (and (= x4580 (= x1445 x3247)) (not x120)) (and (=> (and (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4605) (< 0 x2586) (= x2354 x3385) (= x6266 x4332) (not (= x2614 157198259)) (< x2614 826074471) (not (> 4 x3385)) (not (= x2614 404098525)) (= 599290589 x2614) (not (= 117300739 x2614)) (= x968 x4235) (= 100 x3385) (= x2586 (x2549 (x1567 x3247))) (= x1192 x5778) (= (or (and (> 96 x1079) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1079))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1079)) x323) (= x1079 (x980 (- x3385 4)))) x4580) (and (=> (and (and (= x4837 (x350 1461501637330902918203684832716283019655932542975 x1192)) (= (= x1192 x4837) x2905)) (not x323)) (and (=> (and (and (= x583 (= x4332 x6266)) (= x3574 x6266)) x2905) (and (=> (and x583 (and (= x93 (x2484 x157)) (>= x93 0) (= x748 (> x968 x93)) (= (x350 1461501637330902918203684832716283019655932542975 x5778) x3801) (= x4235 x1472) (= (x476 (x1567 x3801) (x5097 1) 0) x157) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x93))) (and (=> (and (not x748) (= (> x4235 x93) x2870)) (and (=> (and (and (= (x476 (x1567 x2733) (x5097 1) 0) x3268) (= (> x4842 x3091) x5607) (= (x350 1461501637330902918203684832716283019655932542975 x5778) x2733) (= (x980 (- x93 x4235)) x1883) (= x4842 (x357 x6265)) (= x6265 (x476 (x1567 x6266) (x5097 1) 0)) (<= x4842 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3091 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4235))) (<= 0 x4842)) (not x2870)) (and (=> x5607 x2874) (=> (and (not x5607) (and (= (x4937 (+ x4842 x4235)) x5056) (= (> x4842 x5056) x686))) (and (=> (and (and (= (x476 (x1567 x6266) (x5097 1) 0) x3078) (= (> x4235 x4632) x2314) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4632) (= x3735 (x350 1461501637330902918203684832716283019655932542975 x5778)) (>= x4632 0) (= (x384 x2529) x4632) (= x2529 (x476 (x1567 x4332) x3924 0)) (= x3924 (x476 (x1567 x3735) (x5097 2) 0))) (not x686)) (and (=> (and (not x2314) (= x3836 (> x4235 x4632))) (and (=> (and (and (= x5833 32) (= x5808 (x350 1461501637330902918203684832716283019655932542975 x5778)) (= (x980 (- x4632 x4235)) x4405) (= 1 x5934)) (not x3836)) x4879) (=> x3836 x2874))) (=> x2314 x2874))) (=> x686 x2874))))) (=> x2870 x2874))) (=> x748 x2874))) (=> (not x583) x2874))) (=> (not x2905) x2874))) (=> x323 x2874))) (=> (and (= (= x1445 x5771) x2833) (not x4580)) (and (=> (and (= (= x1445 x462) x3518) (not x2833)) (and (=> (and x3518 (and (not (= 157198259 x1577)) (< 0 x4660) (= (x980 (- x5966 4)) x1578) (= x2354 x5966) (= (or (> x1578 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1578) true) (< x1578 96))) x5938) (not (= 117300739 x1577)) (= x968 x1180) (= x4332 x2846) (= x4607 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x312 x1192) (= x4660 (x2549 (x1567 x462))) (not (> 4 x5966)) (= x5966 100) (not (= 404098525 x1577)) (> 826074471 x1577) (= 599290589 x1577))) (and (=> x5938 x2254) (=> (and (not x5938) (and (= (= x1192 x5214) x5315) (= (x350 1461501637330902918203684832716283019655932542975 x1192) x5214))) (and (=> (not x5315) x2254) (=> (and x5315 (and (= (= x2846 x4332) x4946) (= x2475 x2846))) (and (=> (not x4946) x2254) (=> (and (and (<= 0 x206) (= (> x968 x206) x2525) (= x3565 (x476 (x1567 x170) (x5097 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x206) (= x4707 x1180) (= (x350 1461501637330902918203684832716283019655932542975 x312) x170) (= (x929 x3565) x206)) x4946) (and (=> (and (= x4205 (< x206 x1180)) (not x2525)) (and (=> (and (not x4205) (and (<= x1327 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x350 1461501637330902918203684832716283019655932542975 x312) x1495) (= x1327 (x364 x6342)) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1180)) x1771) (= x6173 (x476 (x1567 x1495) (x5097 1) 0)) (= (x476 (x1567 x2846) (x5097 1) 0) x6342) (>= x1327 0) (= x3061 (x980 (- x206 x1180))) (= x3952 (> x1327 x1771)))) (and (=> (and (and (= (> x1327 x4389) x5814) (= x4389 (x4937 (+ x1180 x1327)))) (not x3952)) (and (=> x5814 x2254) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x195) (= x324 (x476 (x1567 x40) (x5097 2) 0)) (= x40 (x350 1461501637330902918203684832716283019655932542975 x312)) (>= x195 0) (= (< x195 x1180) x1822) (= (x476 (x1567 x2846) (x5097 1) 0) x4482) (= x195 (x3980 x4113)) (= x4113 (x476 (x1567 x4332) x324 0))) (not x5814)) (and (=> x1822 x2254) (=> (and (not x1822) (= x5346 (< x195 x1180))) (and (=> x5346 x2254) (=> (and (and (= x5570 1) (= (x350 1461501637330902918203684832716283019655932542975 x312) x5549) (= (x980 (- x195 x1180)) x2615) (= 32 x3882)) (not x5346)) x5058))))))) (=> x3952 x2254))) (=> x4205 x2254))) (=> x2525 x2254))))))))) (=> (and (and (= (= x5205 x1445) x5134) (and (and (= x1478 x968) (= (x980 (- x4645 4)) x5982) (= (x2549 (x1567 x5205)) x5212) (= x4645 100) (= x6155 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= x1741 404098525)) (= x1192 x3401) (not (= 157198259 x1741)) (not (< x4645 4)) (= x4645 x2354) (= 599290589 x1741) (= (or (> x5982 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x5982) (= (<= x5982 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x4656) (= x1187 x4332) (< 0 x5212)) x5134)) (not x3518)) (and (=> (and (not x4656) (and (= (= x1649 x1192) x570) (= (x350 1461501637330902918203684832716283019655932542975 x1192) x1649))) (and (=> (not x570) x4188) (=> (and (and (= x1187 x2889) (= (= x1187 x4332) x1421)) x570) (and (=> (not x1421) x4188) (=> (and x1421 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5436) (= (x350 1461501637330902918203684832716283019655932542975 x3401) x4410) (= x2274 (x476 (x1567 x4332) x1391 0)) (<= 0 x5436) (= (x5009 x2274) x5436) (= x1391 (x476 (x1567 x4410) (x5097 2) 0)) (= x4058 (= x5436 115792089237316195423570985008687907853269984665640564039457584007913129639935)))) (and (=> x4058 x934) (=> (and (and (= (x476 (x1567 x6150) (x5097 2) 0) x2659) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3809) (= (x350 1461501637330902918203684832716283019655932542975 x3401) x6150) (<= 0 x3809) (= (< x3809 x1478) x4417) (= x4005 (x476 (x1567 x4332) x2659 0)) (= x3809 (x5009 x4005))) (not x4058)) (and (=> x4417 x4188) (=> (and (= x4442 (x980 (- x3809 x1478))) (not x4417)) x934))))))))) (=> x4656 x4188))))) (=> (and (and (= x1719 599290589) (> x1676 0) (= (x980 (- x3348 4)) x5184) (not (= 117300739 x1719)) (not (= x1719 404098525)) (= x3348 x2354) (> 826074471 x1719) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x652) (= (x2549 (x1567 x5771)) x1676) (= x4332 x5951) (= x1192 x473) (= x5032 x968) (not (> 4 x3348)) (= x3348 100) (= (or (> x5184 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x5184) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5184) true))) x5161) (not (= x1719 157198259))) x2833) (and (=> x5161 x2238) (=> (and (and (= (x350 1461501637330902918203684832716283019655932542975 x1192) x1333) (= (= x1333 x1192) x6168)) (not x5161)) (and (=> (not x6168) x2238) (=> (and (and (= (= x4332 x5951) x3507) (= x5951 x4461)) x6168) (and (=> (and x3507 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6315) (= x2638 (x350 1461501637330902918203684832716283019655932542975 x473)) (<= 0 x6315) (= (< x6315 x968) x5717) (= x3534 (x476 (x1567 x2638) (x5097 1) 0)) (= x5032 x4592) (= x6315 (x5351 x3534)))) (and (=> x5717 x2238) (=> (and (= (> x5032 x6315) x1572) (not x5717)) (and (=> (and (and (= x3071 (x476 (x1567 x2508) (x5097 1) 0)) (= x2508 (x350 1461501637330902918203684832716283019655932542975 x473)) (<= 0 x3481) (= x3165 (x476 (x1567 x5951) (x5097 1) 0)) (= (< x4655 x3481) x1373) (= x2693 (x980 (- x6315 x5032))) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5032)) x4655) (<= x3481 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5472 x3165) x3481)) (not x1572)) (and (=> (and (not x1373) (and (= x4155 (x4937 (+ x3481 x5032))) (= (< x4155 x3481) x2824))) (and (=> x2824 x2238) (=> (and (not x2824) (and (= (< x2441 x5032) x4647) (>= x2441 0) (= x2453 (x476 (x1567 x5951) (x5097 1) 0)) (<= x2441 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2655 (x350 1461501637330902918203684832716283019655932542975 x473)) (= x2441 (x163 x2974)) (= (x476 (x1567 x4332) x1301 0) x2974) (= (x476 (x1567 x2655) (x5097 2) 0) x1301))) (and (=> x4647 x2238) (=> (and (not x4647) (= (> x5032 x2441) x5798)) (and (=> x5798 x2238) (=> (and (and (= (x350 1461501637330902918203684832716283019655932542975 x473) x39) (= 32 x4026) (= 1 x3393) (= (x980 (- x2441 x5032)) x2663)) (not x5798)) x2374))))))) (=> x1373 x2238))) (=> x1572 x2238))))) (=> (not x3507) x2238))))))))))) (=> (and x120 (and (= x3847 100) (= (x980 (- x3847 4)) x1707) (> 826074471 x2324) (not (= 157198259 x2324)) (= (x2549 (x1567 x2280)) x4228) (not (< x3847 4)) (= x968 x442) (= x2354 x3847) (not (= 117300739 x2324)) (not (= 404098525 x2324)) (= x1192 x4687) (= x4332 x3234) (= x1043 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< 0 x4228) (= x2324 599290589) (= (or (and (> 96 x1707) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1707))) (> x1707 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2933))) (and (=> x2933 x3585) (=> (and (and (= x3123 (= x2486 x1192)) (= (x350 1461501637330902918203684832716283019655932542975 x1192) x2486)) (not x2933)) (and (=> (and (and (= x6145 x3234) (= x1864 (= x3234 x4332))) x3123) (and (=> (not x1864) x3585) (=> (and (and (<= 0 x4293) (= (x350 1461501637330902918203684832716283019655932542975 x4687) x152) (= x4293 (x1828 x2432)) (<= x4293 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x4293 x968) x594) (= x2432 (x476 (x1567 x152) (x5097 1) 0)) (= x442 x1329)) x1864) (and (=> x594 x3585) (=> (and (not x594) (= x6026 (> x442 x4293))) (and (=> (and (and (= (x350 1461501637330902918203684832716283019655932542975 x4687) x1799) (= (x5890 x3183) x3005) (= x3183 (x476 (x1567 x3234) (x5097 1) 0)) (<= x3005 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x3005 x4112) x2780) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x442)) x4112) (>= x3005 0) (= x4367 (x476 (x1567 x1799) (x5097 1) 0)) (= (x980 (- x4293 x442)) x3032)) (not x6026)) (and (=> (and (not x2780) (and (= x3468 (< x5328 x3005)) (= x5328 (x4937 (+ x3005 x442))))) (and (=> x3468 x3585) (=> (and (and (= (x476 (x1567 x3234) (x5097 1) 0) x926) (>= x4920 0) (= (x350 1461501637330902918203684832716283019655932542975 x4687) x5470) (= (x476 (x1567 x5470) (x5097 2) 0) x5396) (= x3541 (x476 (x1567 x4332) x5396 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4920) (= x2656 (< x4920 x442)) (= (x4046 x3541) x4920)) (not x3468)) (and (=> x2656 x3585) (=> (and (= x3657 (< x4920 x442)) (not x2656)) (and (=> x3657 x3585) (=> (and (and (= x254 (x350 1461501637330902918203684832716283019655932542975 x4687)) (= x4034 32) (= (x980 (- x4920 x442)) x3788) (= 1 x525)) (not x3657)) x3202))))))) (=> x2780 x3585))) (=> x6026 x3585))))))) (=> (not x3123) x3585))))))))) (=> (and x5724 (and (= x3905 x1192) (not (= x397 117300739)) (= x4212 (or (and (> 96 x4042) (= (<= x4042 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4042))) (= x493 x968) (= x2354 x4157) (= (x980 (- x4157 4)) x4042) (< x397 1117154408) (= x4157 100) (< 0 x4537) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4189) (= x4537 (x2549 (x1567 x2020))) (not (< x4157 4)) (= x2308 x4332) (not (= 157198259 x397)) (= 599290589 x397) (not (= 404098525 x397)))) (and (=> (and (not x4212) (and (= x3905 x3092) (= x4503 (x350 1461501637330902918203684832716283019655932542975 x1192)) (= (= x4503 x1192) x3758))) (and (=> (not x3758) x2847) (=> (and x3758 (and (= x2308 x4495) (= x6248 (= x2308 x4332)))) (and (=> (and x6248 (and (= x1652 (= x2308 0)) (= x5616 x493))) (and (=> (and (not x1652) (and (<= 0 x5359) (= (x780 x5779) x5359) (<= x5359 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x350 1461501637330902918203684832716283019655932542975 x3905) x315) (= (> x493 x5359) x3644) (= x5779 (x476 (x1567 x315) (x5097 0) 0)))) (and (=> x3644 x2847) (=> (and (= x2581 (> x493 x5359)) (not x3644)) (and (=> (and (and (<= 0 x5489) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5489) (= (x350 1461501637330902918203684832716283019655932542975 x3905) x328) (= x1109 (< x3812 x5489)) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x493)) x3812) (= (x3235 x1688) x5489) (= (x476 (x1567 x2308) (x5097 0) 0) x1688) (= (x980 (- x5359 x493)) x4384) (= x6136 (x476 (x1567 x328) (x5097 0) 0))) (not x2581)) (and (=> (and (not x1109) (and (= (> x5489 x3130) x1702) (= x3130 (x4937 (+ x5489 x493))))) (and (=> (and (and (= (> x493 x3965) x4078) (<= x3965 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x350 1461501637330902918203684832716283019655932542975 x3905) x672) (= (x476 (x1567 x4332) x4172 0) x2815) (= x2935 (x476 (x1567 x2308) (x5097 0) 0)) (= (x2945 x2815) x3965) (>= x3965 0) (= (x476 (x1567 x672) (x5097 1) 0) x4172)) (not x1702)) (and (=> x4078 x2847) (=> (and (= x5312 (< x3965 x493)) (not x4078)) (and (=> x5312 x2847) (=> (and (not x5312) (and (= (= x4332 0) x5792) (= (x980 (- x3965 x493)) x2960))) (and (=> x5792 x2847) (=> (and (and (= x736 (x350 1461501637330902918203684832716283019655932542975 x3905)) (= (= 0 x736) x4372)) (not x5792)) (and (=> (and (and (= 1 x1724) (= (x350 1461501637330902918203684832716283019655932542975 x3905) x1505) (= 1 x2665) (= x5016 32) (= x3856 (x861 128))) (not x4372)) x1725) (=> x4372 x2847))))))))) (=> x1702 x2847))) (=> x1109 x2847))) (=> x2581 x2847))))) (=> x1652 x2847))) (=> (not x6248) x2847))))) (=> x4212 x2847))))) (=> (and (and (= 100 x4736) (= x4332 x2856) (= 599290589 x4491) (not (< x4736 4)) (= x1192 x1308) (> x497 0) (= (x2549 (x1567 x4332)) x497) (not (= 157198259 x4491)) (= x2637 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2097) (and (= (<= x2097 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x2097))) x862) (not (= 404098525 x4491)) (= x2354 x4736) (= x2097 (x980 (- x4736 4))) (< x4491 2512374353) (> 953495055 x4491) (= x968 x3330)) x4889) (and (=> (and (and (= x6187 (x350 1461501637330902918203684832716283019655932542975 x1192)) (= (= x6187 x1192) x3050)) (not x862)) (and (=> (and (and (= x5238 x2856) (= (= x2856 x4332) x1698)) x3050) (and (=> (not x1698) x418) (=> (and x1698 (and (= x561 (x802 x2239)) (= (x476 (x1567 x2178) (x5097 2) 0) x4551) (<= x561 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x561) (= x3474 (= x561 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x350 1461501637330902918203684832716283019655932542975 x1308) x2178) (= (x476 (x1567 x4332) x4551 0) x2239))) (and (=> x3474 x681) (=> (and (not x3474) (and (= (x476 (x1567 x3438) (x5097 2) 0) x5248) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x426) (= (x476 (x1567 x4332) x5248 0) x1875) (= (< x426 x3330) x4233) (= x3438 (x350 1461501637330902918203684832716283019655932542975 x1308)) (= x426 (x802 x1875)) (>= x426 0))) (and (=> (and (= x4922 (x980 (- x426 x3330))) (not x4233)) x681) (=> x4233 x418))))))) (=> (not x3050) x418))) (=> x862 x418))))) (=> (and x3929 (and (= (x2549 (x1567 x5547)) x3983) (= (x980 (- x4457 4)) x6100) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2296) (= x2920 599290589) (> 961581905 x2920) (= x4332 x5975) (not (= 543189872 x2920)) (not (< x4457 4)) (= x5912 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6100) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6100)) (< x6100 96)))) (> 1901074598 x2920) (= x968 x6329) (not (= 117300739 x2920)) (not (= 404098525 x2920)) (= x4457 100) (< 0 x3983) (= x2354 x4457) (not (= x2920 157198259)) (= x1192 x2580))) (and (=> x5912 x169) (=> (and (and (= x1441 (x350 1461501637330902918203684832716283019655932542975 x1192)) (= (= x1192 x1441) x4010) (= x2392 x2580)) (not x5912)) (and (=> (not x4010) x169) (=> (and (and (= x5975 x1484) (= (= x5975 x4332) x1022)) x4010) (and (=> (and (and (= (x350 1461501637330902918203684832716283019655932542975 x2580) x4019) (= x3289 (= x4019 0)) (= x6329 x487)) x1022) (and (=> (and (= x4898 (= x5975 0)) (not x3289)) (and (=> x4898 x169) (=> (and (and (= (x350 1461501637330902918203684832716283019655932542975 x2580) x95) (= x5979 (x476 (x1567 x95) (x5097 0) 0)) (<= 0 x6143) (= x6031 (> x6329 x6143)) (= (x1736 x5979) x6143) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6143) (= x2976 128)) (not x4898)) (and (=> (and (not x6031) (= x4191 (> x6329 x6143))) (and (=> x4191 x169) (=> (and (not x4191) (and (= (x350 1461501637330902918203684832716283019655932542975 x2580) x1197) (= (x2445 x2131) x2623) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6329)) x2853) (>= x2623 0) (= x2137 (< x2853 x2623)) (= (x476 (x1567 x1197) (x5097 0) 0) x1211) (<= x2623 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2131 (x476 (x1567 x5975) (x5097 0) 0)) (= x2184 (x980 (- x6143 x6329))))) (and (=> (and (not x2137) (and (= (x4937 (+ x6329 x2623)) x4650) (= x1283 (> x2623 x4650)))) (and (=> x1283 x169) (=> (and (and (= 224 x33) (= (x476 (x1567 x4332) x4345 0) x114) (= x4345 (x476 (x1567 x3765) (x5097 1) 0)) (>= x1480 0) (= x1905 (x476 (x1567 x5975) (x5097 0) 0)) (= x3765 (x350 1461501637330902918203684832716283019655932542975 x2580)) (= (< x1480 x6329) x5264) (<= x1480 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1480 (x4327 x114))) (not x1283)) (and (=> (and (not x5264) (= (> x6329 x1480) x4739)) (and (=> x4739 x169) (=> (and (and (= x3756 (x350 1461501637330902918203684832716283019655932542975 x2580)) (= x314 (x980 (- x1480 x6329))) (= (= x3756 0) x4496)) (not x4739)) (and (=> x4496 x169) (=> (and (not x4496) (= (= 0 x4332) x247)) (and (=> x247 x169) (=> (and (not x247) (and (= 1 x6336) (= (x350 1461501637330902918203684832716283019655932542975 x2580) x153) (= x4067 32) (= x910 1))) x2714))))))) (=> x5264 x169))))) (=> x2137 x169))))) (=> x6031 x169))))) (=> x3289 x169))) (=> (not x1022) x169))))))))))) (=> (and (and (> 669136355 x2881) (= x2354 x3944) (not (< x3944 4)) (= x172 (x2549 (x1567 x2417))) (= x459 x1192) (= x4869 x4332) (> x172 0) (= x5965 (x980 (- x3944 4))) (= 599290589 x2881) (= x968 x4506) (> 1889567281 x2881) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5965) (and (> 96 x5965) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5965) true))) x3821) (not (= x2881 248222656)) (not (= x2881 404098525)) (not (< x2881 248222656)) (= 100 x3944) (= x3200 16156842317565293874272834530371880720966471053262404558597773956279093428224)) x3217) (and (=> x3821 x5849) (=> (and (not x3821) (and (= x5580 (x350 1461501637330902918203684832716283019655932542975 x1192)) (= x459 x4718) (= x5730 (= x1192 x5580)))) (and (=> (not x5730) x5849) (=> (and x5730 (and (= x2062 x4869) (= x3093 (= x4869 x4332)))) (and (=> (not x3093) x5849) (=> (and (and (<= x5349 255) (= x4506 x1916) (>= x5349 0) (= (= x5349 0) x5664) (< x5349 256)) x3093) (and (=> (not x5664) x5849) (=> (and (and (= (x350 1461501637330902918203684832716283019655932542975 x459) x3938) (< x2138 256) (>= 255 x2138) (= x450 (x476 (x1567 x3938) (x5097 6) 0)) (>= x2138 0) (= (x5340 x450) x2138) (= x5834 (= x2138 0))) x5664) (and (=> (not x5834) x5849) (=> (and x5834 (= (> 100 x3944) x3681)) (and (=> x3681 x5849) (=> (and (and (= x3895 (x476 (x1567 x4332) x2344 0)) (= 10000 x5529) (= (x350 1461501637330902918203684832716283019655932542975 x459) x5954) (= (x4622 x3895) x6295) (= (= x4506 0) x2861) (>= x3043 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3043) (= x2344 (x476 (x1567 x5954) (x5097 5) 0)) (<= x6295 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x6295 0)) (not x3681)) (and (=> (and (and (= (ite (not x5488) 1 0) x4957) (= x5488 (= x1916 0)) (= x5618 (x350 x4957 x6178)) (= (ite (> x3043 x6231) 1 0) x6178) (= x6231 (x1849 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4506)) (= (= x5618 0) x1224)) (not x2861)) (and (=> (not x1224) x5849) (=> (and (and (= x5542 (x2154 (x423 x4506 x3043))) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x423 x4506 x3043)) x562)) x1224) (and (=> (not x562) x5849) (=> (and (= x5542 x511) x562) x5929))))) (=> (and (= 0 x511) x2861) x5929)))))))))))))))))))
(assert (x3960 x3043 x2378 x4506 x3043))
(assert (= (x2338 (x1567 x3851)) x3851))
(assert (x447 x5977))
(assert (= (and (not x5312) x2649) x4054))
(assert (= (and x4959 x3455) x1298))
(assert (= (and (not x69) x2229) x3654))
(assert (= (=> (and (= x4910 x4072) (= x5054 x3173)) x162) x5630))
(assert (x447 x2594))
(assert (= (and x306 x1616) x4575))
(assert (x447 x3431))
(assert (= (x2338 (x1567 x1353)) x1353))
(assert (x447 x3438))
(assert (= (and (not x2058) x3311) x3619))
(assert (= (and x978 (not x4872)) x5825))
(assert (x447 x914))
(assert (x447 x3750))
(assert (= x1214 (or x1392 x3700)))
(assert (= (and x5785 (not x2918)) x412))
(assert (x447 x3988))
(assert (x447 x3647))
(assert (= (and x5035 (not x2837)) x836))
(assert (= (x1567 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x5097 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= (=> (and (= 0 x2987) (= x4371 x4395)) x340) x3296))
(assert (x447 x5486))
(assert (x447 x2614))
(assert (= x4519 (and x5019 (not x1594))))
(assert (= (=> (and (= x6000 x5154) (= x2391 x1747)) x2568) x6001))
(assert (x447 x2715))
(assert (= x4514 (and x2752 x247)))
(assert (= (and x5558 x4724) x1395))
(assert (= (=> (and (= x4302 x5853) (= x1984 x4290)) x6285) x5376))
(assert (x447 x1020))
(assert (= (and x5569 x606) x5386))
(assert (= x4584 (or x2348 x1786)))
(assert (= x4895 (and x3832 (not x5987))))
(assert (x447 x4994))
(assert (= x4540 (or x2802 x769)))
(assert (x447 x4903))
(assert (= x1924 (and x3279 x2225)))
(assert (x447 x1430))
(assert (= x2318 (and x2407 x6174)))
(assert (= x2845 (and (not x4806) x554)))
(assert (x447 x6213))
(assert (x3903 x5727))
(assert (x1957 x4954 x611 x6080 x3043))
(assert (= x5811 (and x1826 x3077)))
(assert (x447 x4189))
(assert (x447 x5074))
(assert (= (=> (and (= x3651 x1551) (= 0 x1142)) x6052) x2186))
(assert (x447 x6143))
(assert (x447 x6341))
(assert (x447 x664))
(assert (x3903 x3750))
(assert (= (and (not x3507) x4308) x6360))
(assert (x447 x710))
(assert (x5383 x4697))
(assert (x447 x1912))
(assert (= (and x689 (not x1530)) x4433))
(assert (x5592 (- x3216 x4954)))
(assert (= (or (and (not x97) x489) (and x1410 x2763)) x4845))
(assert (= (and x680 (not x27)) x2736))
(assert (x447 x1753))
(assert (x447 x1666))
(assert (= x623 (and (not x4749) x2696)))
(assert (= (and x4114 x2030) x5373))
(assert (= (and x1603 x2597) x4581))
(assert (= (and x5406 (not x3306)) x4888))
(assert (=> (>= 10000 x2091) (= (x5097 x2091) (x1567 x2091))))
(assert (= (and (not x646) x3962) x1093))
(assert (x447 x1805))
(assert (= (x2338 (x5097 16156842317565293874272834530371880720966471053262404558597773956279093428224)) 16156842317565293874272834530371880720966471053262404558597773956279093428224))
(assert (x447 x4126))
(assert (= x2054 (and x5047 (not x4280))))
(assert (x447 x210))
(assert (= (and (not x1827) x3085) x2625))
(assert (x447 x5642))
(assert (=> (<= x3601 10000) (= (x5097 x3601) (x1567 x3601))))
(assert (x3960 x3043 x6080 x4954 x611))
(assert (x5592 (- x3043 x6080)))
(assert (= x532 (and x5019 x1594)))
(assert (= (and (not x5389) x1693) x3056))
(assert (= (and x2641 (not x3742)) x4035))
(assert (x3903 x1187))
(assert (x447 x3116))
(assert (= (and x2772 (not x1506)) x2872))
(assert (= (and x5108 (not x5190)) x2640))
(assert (x447 x3856))
(assert (=> (>= 10000 x3765) (= (x5097 x3765) (x1567 x3765))))
(assert (x447 x853))
(assert (x447 x2858))
(assert (= (and (not x830) x5731) x2061))
(assert (x447 x3620))
(assert (x3903 x5222))
(assert (= x4050 (and (not x4969) x3239)))
(assert (= x390 (and x5684 x4782)))
(assert (= x3959 (and x2577 x2871)))
(assert (= (or x4845 x2507) x2489))
(assert (x447 x966))
(assert (= x1614 (or x4700 x480)))
(assert (= x1608 (and x463 x1970)))
(assert (x3903 x3765))
(assert (x447 x216))
(assert (x54 x4309))
(assert (x447 x5091))
(assert (x729 x4059))
(assert (x447 x1538))
(assert (x447 x1336))
(assert (x447 x4267))
(assert (x1957 x3216 x3043 x3043 x6080))
(assert (x447 x2967))
(assert (=> (<= x5727 10000) (= (x5097 x5727) (x1567 x5727))))
(assert (x2992 x611 (- x4954 x3043)))
(assert (= x2805 (and x4703 (not x4231))))
(assert (x3903 x2764))
(assert (=> (>= 10000 x3713) (= (x5097 x3713) (x1567 x3713))))
(assert (x447 x3991))
(assert (= x1976 (and (not x5594) x6354)))
(assert (x447 x4842))
(assert (x447 x4512))
(assert (= x4721 (and x1965 (not x862))))
(assert (= x2047 (=> (and (= x4140 x4290) (= x2602 x5853)) x6285)))
(assert (= (and (not x2660) x1591) x3697))
(assert (= x5418 (=> (and (or (and (= x2083 x2774) (not x3077)) (and (and (= x2083 x1255) (<= 0 x1255) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1255)) x3077)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1255) (= (> x2774 x1255) x3077) (= (x1849 x4697 10000) x2774) (<= 0 x1255))) x6062)))
(assert (= x2426 (x2338 (x1567 x2426))))
(assert (= (=> (and (= x454 (x476 (x1567 x3184) (x5097 1) 0)) (>= x3259 0) (= (> x1478 x3259) x976) (<= x3259 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3259 (x2608 x454)) (= x3184 (x350 1461501637330902918203684832716283019655932542975 x3401))) (and (=> x976 x4188) (=> (and (and (= x2461 (< x857 x2161)) (= x3839 (x476 (x1567 x1187) (x5097 1) 0)) (= x2161 (x3318 x3839)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2161) (>= x2161 0) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1478)) x857) (= x5057 (x980 (- x3259 x1478)))) (not x976)) (and (=> x2461 x4188) (=> (and (and (= x1004 1) (= (x4937 (+ x2161 x1478)) x70) (= x4449 32)) (not x2461)) x4315))))) x934))
(assert (=> (>= 10000 x2734) (= (x5097 x2734) (x1567 x2734))))
(assert (x447 x787))
(assert (x447 x1096))
(assert (x447 x3398))
(assert (= x2197 (and x2567 (not x4728))))
(assert (x447 x695))
(assert (=> (<= x462 10000) (= (x5097 x462) (x1567 x462))))
(assert (= x2724 (and x1992 x4880)))
(assert (x447 x4473))
(assert (x447 x5191))
(assert (x3903 x3722))
(assert (x447 x859))
(assert (x447 x2741))
(assert (= x3814 (or x5075 x141 x967 x4477 x3137 x6282 x3158 x4932 x1568 x1123 x2708 x1631)))
(assert (= (or x1921 x405) x6004))
(assert (= (and x4409 x3649) x112))
(assert (= (and x1543 x5494) x5720))
(assert (x447 x6239))
(assert (= x1172 (and (not x43) x3566)))
(assert (x3903 x5092))
(assert (= x804 (and (not x3372) x4785)))
(assert (x447 x5774))
(assert (= x267 (and x6181 (not x3717))))
(assert (= (or x2299 x5327) x5192))
(assert (x447 x2517))
(assert (x447 x5489))
(assert (= x540 (=> (and (= x3679 x1396) (= 0 x3547)) x5712)))
(assert (x447 x939))
(assert (x2992 x3216 (- x3043 x4398)))
(assert (= (and x415 x3821) x658))
(assert (x447 x5645))
(assert (x5592 (- x3216 x4506)))
(assert (=> (>= 10000 x4904) (= (x1567 x4904) (x5097 x4904))))
(assert (= x2684 (or x2855 x4 x2435 x2590 x1557 x2302 x2075 x1877 x5055 x775 x4348 x4861 x4099)))
(assert (= (and (not x2840) x5240) x2183))
(assert (= x5900 (and x5861 x1780)))
(assert (= x3515 (and x3619 (not x2565))))
(assert (= x554 (and x1731 (not x4766))))
(assert (x447 x3914))
(assert (=> (<= x1918 10000) (= (x5097 x1918) (x1567 x1918))))
(assert (= x4333 (and x5320 (not x1686))))
(assert (x1990 1461501637330902918203684832716283019655932542975))
(assert (= (and x3523 x5591) x1108))
(assert (x1957 x3043 x3216 x611 x4954))
(assert (= 3674237557 (x2338 (x5097 3674237557))))
(assert (and (x5609 x599 1461501637330902918203684832716283019655932542976) (x4601 x599 1461501637330902918203684832716283019655932542976) (x301 x599 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x599 1461501637330902918203684832716283019655932542976) (* (x1849 x599 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x599))))
(assert (= x5423 (and x6115 x4916)))
(assert (x3960 x3216 x3043 x4506 x3043))
(assert (x447 x2774))
(assert (x447 x4793))
(assert (x447 x1184))
(assert (x2992 x4954 (- x611 x4398)))
(assert (= x3951 (and (not x2610) x3181)))
(assert (x1957 x4954 x611 x2378 x3043))
(assert (x447 x5250))
(assert (= x2620 (or x6081 x359 x4117 x2526 x916 x5698 x864 x704 x4075)))
(assert (= (x1567 404098525) (x5097 404098525)))
(assert (= x5432 (or x2477 x6327)))
(assert (= x992 (and x4572 x6317)))
(assert (and (x5609 x5066 1461501637330902918203684832716283019655932542976) (x4601 x5066 1461501637330902918203684832716283019655932542976) (x301 x5066 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x5066 1461501637330902918203684832716283019655932542976) (* (x1849 x5066 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x5066))))
(assert (x447 x2413))
(assert (= x3597 (and x124 (not x287))))
(assert (= x1364 (and x4740 x6226)))
(assert (x447 x5817))
(assert (= (or x858 x2077 x121 x2555 x6261 x752 x6202 x2513 x622 x1833 x1797 x5748 x501 x1053 x568 x4136 x867 x1772 x6051 x3309 x2673 x111 x6208 x2922 x4886 x6076 x363) x2348))
(assert (= x4665 (and x4739 x920)))
(assert (and (x5609 x1192 1461501637330902918203684832716283019655932542976) (x4601 x1192 1461501637330902918203684832716283019655932542976) (x301 x1192 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x1192 1461501637330902918203684832716283019655932542976) (* (x1849 x1192 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x1192))))
(assert (= (and x3558 x2112) x2532))
(assert (x447 x6264))
(assert (x447 x674))
(assert (x447 x1870))
(assert (= x3294 (and x5887 (not x3376))))
(assert (x447 x5924))
(assert (=> (<= x3465 10000) (= (x1567 x3465) (x5097 x3465))))
(assert (x447 x2817))
(assert (x447 x5153))
(assert (x447 x2135))
(assert (x447 x5129))
(assert (x447 x5082))
(assert (x447 x5669))
(assert (= (or x5235 x188 x4734 x4129 x362 x3576 x3129 x5209 x5759 x1012 x208 x4283 x1640 x2664 x571) x2823))
(assert (x1990 255))
(assert (= x2337 (and x5709 x3969)))
(assert (x552 x1096))
(assert (= (and x1224 x5356) x2798))
(assert (= x4149 (and x3145 x5046)))
(assert (x447 x3005))
(assert (x5592 (- x3043 x3216)))
(assert (x447 x191))
(assert (x447 x123))
(assert (= (and (not x2882) x4047) x860))
(assert (= x5356 (and (not x2861) x4483)))
(assert (=> (>= 10000 x3175) (= (x1567 x3175) (x5097 x3175))))
(assert (= (and x4050 (not x5714)) x5753))
(assert (= (and (not x3763) x5421) x3469))
(assert (=> (>= 10000 x6193) (= (x1567 x6193) (x5097 x6193))))
(assert (x447 x6156))
(assert (x447 x2745))
(assert (= (and (not x3548) x2293) x3896))
(assert (x447 x1425))
(assert (x447 x611))
(assert (= x2555 (and x4641 x810)))
(assert (= x6067 (and (not x1938) x3272)))
(assert (x447 x3828))
(assert (= (and (not x4868) x5407) x3414))
(assert (= (x2338 (x1567 x3750)) x3750))
(assert (x447 x5982))
(assert (x447 x3820))
(assert (x447 x401))
(assert (x54 x3064))
(assert (x447 x2999))
(assert (x447 x1784))
(assert (= (and x6113 x2267) x5031))
(assert (x447 x812))
(assert (= (=> (and (= x3321 x2900) (= 0 x3509)) x1525) x5513))
(assert (x1957 x611 x4954 x3043 x4398))
(assert (x447 x5593))
(assert (= (and (not x5527) x2902) x3203))
(assert (x447 x1250))
(assert (= (x1567 826074471) (x5097 826074471)))
(assert (x5592 (- x611 x4506)))
(assert (= x5760 (and (not x3853) x3629)))
(assert (x447 x3765))
(assert (x447 x2192))
(assert (= (x2338 (x1567 x3881)) x3881))
(assert (= x3456 (=> (and (= x6277 x5644) (= 0 x3000)) x2516)))
(assert (x447 x865))
(assert (= x1466 (=> (and (= x6132 x4395) (= x1590 0)) x1200)))
(assert (= x2050 (and (not x5577) x4349)))
(assert (= (and x4147 x5227) x4099))
(assert (= x3054 (and x3790 x1137)))
(assert (x447 x1578))
(assert (x447 x3659))
(assert (= x5392 (and x2723 x4888)))
(assert (= (and x3640 (not x2656)) x3065))
(assert (x447 x6339))
(assert (x2992 x4506 (- x3043 x6080)))
(assert (= (and x2786 x1617) x4696))
(assert (= x3411 (and x3913 x1582)))
(assert (= x1041 (=> (and (= x1832 x3679) (= 0 x726)) x5970)))
(assert (= (and x5402 (not x6045)) x4478))
(assert (x3903 x3735))
(assert (= x1202 (and (not x4233) x4451)))
(assert (= (x2338 (x5097 404098525)) 404098525))
(assert (= (and (not x4340) x852) x3241))
(assert (= (and x4143 (not x3764)) x3867))
(assert (x3903 x3267))
(assert (= x2372 (and (not x801) x4513)))
(assert (x447 x2107))
(assert (= x1121 (or x3076 x3635 x3844 x3874 x1061 x2958 x3350 x814 x469)))
(assert (= (x5097 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1567 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x447 x2612))
(assert (x447 x6293))
(assert (x447 x6060))
(assert (x5592 (- x4954 x3216)))
(assert (= (and x5562 x764) x1217))
(assert (and (x5609 x3905 1461501637330902918203684832716283019655932542976) (x4601 x3905 1461501637330902918203684832716283019655932542976) (x301 x3905 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x3905 1461501637330902918203684832716283019655932542976) (* (x1849 x3905 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x3905))))
(assert (x447 x4720))
(assert (x447 x220))
(assert (x447 x5777))
(assert (x3903 x3634))
(assert (x447 x337))
(assert (x447 x5470))
(assert (= x3495 (and x2949 (not x5928))))
(assert (x2992 x4398 (- x3043 x4506)))
(assert (x1957 x6080 x3043 x3043 x4506))
(assert (x447 x5051))
(assert (x447 x5588))
(assert (x447 x2323))
(assert (= x5247 (and (not x3281) x1343)))
(assert (= (and x5172 x6064) x3060))
(assert (= (x2338 (x5097 157198259)) 157198259))
(assert (=> (<= x3141 10000) (= (x5097 x3141) (x1567 x3141))))
(assert (x447 x790))
(assert (x447 x87))
(assert (= x3773 (and x6140 x5723)))
(assert (x447 x2795))
(assert (=> (>= 10000 x1495) (= (x1567 x1495) (x5097 x1495))))
(assert (x54 x979))
(assert (x3903 x5975))
(assert (x447 x3957))
(assert (x447 x2365))
(assert (x447 x2942))
(assert (= x76 (x2338 (x1567 x76))))
(assert (=> (<= x2417 10000) (= (x5097 x2417) (x1567 x2417))))
(assert (x447 x5385))
(assert (= x1100 (=> (and (= x3995 x5685) (= x271 x4644)) x4298)))
(assert (x447 x490))
(assert (x447 x5145))
(assert (= (and x4308 x3507) x2634))
(assert (= (and x1068 x1401) x4092))
(assert (x447 x2084))
(assert (= x1847 (and x1715 x4715)))
(assert (x447 x5154))
(assert (= x6141 (and x3459 x49)))
(assert (x447 x5957))
(assert (= (x2338 (x5097 248222656)) 248222656))
(assert (x1957 x3043 x3216 x4398 x3043))
(assert (x447 x5920))
(assert (= (and x5043 x158) x5959))
(assert (= x343 (and x5922 (not x2636))))
(assert (= (=> (and (= x2726 x4072) (= x5447 x5054)) x162) x5958))
(assert (x447 x2707))
(assert (= (and x4856 x6248) x3080))
(assert (= x2148 (and (not x4805) x5517)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x2338 (x5097 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= x5064 (x2338 (x1567 x5064))))
(assert (x447 x299))
(assert (x447 x5140))
(assert (= x672 (x2338 (x1567 x672))))
(assert (x447 x1140))
(assert (= (and x904 (not x1059)) x5341))
(assert (= x407 (x2338 (x1567 x407))))
(assert (= x3027 (and x4333 x863)))
(assert (x447 x3804))
(assert (x447 x3994))
(assert (= x766 (=> (and (= x3679 x727) (= x2418 0)) x5292)))
(assert (= x969 (and (not x5855) x3757)))
(assert (= (and (not x2661) x4260) x5723))
(assert (x447 x618))
(assert (x447 x1309))
(assert (x2992 x4954 (- x611 x6080)))
(assert (x447 x6159))
(assert (x447 x1795))
(assert (x447 x4239))
(assert (=> (>= 10000 x4756) (= (x5097 x4756) (x1567 x4756))))
(assert (x447 x5701))
(assert (x447 x2417))
(assert (x447 x4173))
(assert (= (and x1231 x6183) x2748))
(assert (= x1586 (=> (and (= x2008 x2584) (= 0 x5239)) x326)))
(assert (x447 x346))
(assert (= 1432194747 (x2338 (x5097 1432194747))))
(assert (=> (>= 10000 x67) (= (x1567 x67) (x5097 x67))))
(assert (= (and x2212 x909) x2958))
(assert (= (x5097 4238056678808933066457772256406219440718756300954938350892797929791311314944) (x1567 4238056678808933066457772256406219440718756300954938350892797929791311314944)))
(assert (= (and (not x3954) x5299) x5887))
(assert (x447 x3602))
(assert (x447 x525))
(assert (= (x2338 (x1567 x2734)) x2734))
(assert (= (and x976 x2207) x1674))
(assert (x447 x3648))
(assert (= (and x1128 x756) x512))
(assert (= (and (not x2993) x3056) x4006))
(assert (= (and x514 x4417) x2703))
(assert (= (and x1310 (not x3674)) x4179))
(assert (x447 x6356))
(assert (x447 x4995))
(assert (= x3131 (=> (and (or (not x2246) x2246) (= x2246 (= x2521 0))) x1190)))
(assert (= (and x953 x4982) x2679))
(assert (= (=> (and (= 0 x6322) (= x5188 1)) x4727) x851))
(assert (=> (>= 10000 x5975) (= (x1567 x5975) (x5097 x5975))))
(assert (= (x2338 (x1567 x2143)) x2143))
(assert (x447 x4174))
(assert (= (=> (and (= x4437 x605) (= x3625 x4201)) x342) x772))
(assert (= x5698 (and x2504 x4653)))
(assert (x447 x5771))
(assert (x447 x5387))
(assert (x3960 x4398 x3043 x4954 x611))
(assert (= (and x3799 x5814) x4576))
(assert (x447 x3816))
(assert (x552 x3090))
(assert (= x3906 (x2338 (x1567 x3906))))
(assert (= x892 (x2338 (x1567 x892))))
(assert (= x6357 (and x412 (not x815))))
(assert (= x3388 (=> (and (= 0 x4935) (= x5946 x3748)) x74)))
(assert (x447 x1490))
(assert (x447 x6329))
(assert (= (or x3718 x248) x886))
(assert (= (and x4095 (not x2931)) x4769))
(assert (=> (<= x5745 10000) (= (x1567 x5745) (x5097 x5745))))
(assert (x447 x494))
(assert (= x5096 (and x1464 (not x1722))))
(assert (= (=> (and (= x3220 x1747) (= x5154 x4374)) x2568) x4291))
(assert (x447 x2580))
(assert (= (or (and x5794 x2556) x3358 (and x1548 (not x3359)) x5914 x1347 x1861 x1473) x3700))
(assert (x447 x4515))
(assert (x3960 x3043 x4506 x4398 x3043))
(assert (x552 x2580))
(assert (x3960 x3043 x3216 x4506 x3043))
(assert (= (and x2755 x6116) x2978))
(assert (x447 x5286))
(assert (= (and x1267 x5663) x1833))
(assert (x447 x5033))
(assert (= x5612 (and x981 (not x2683))))
(assert (x447 x3564))
(assert (= x3911 (=> (and (= x5685 x3142) (= x4644 x2323)) x4298)))
(assert (= (x2338 (x1567 x3415)) x3415))
(assert (= x553 (and x954 x1613)))
(assert (= x2227 (and (not x77) x850)))
(assert (= x6015 (and x1959 x970)))
(assert (x447 x2717))
(assert (= x184 (and (not x2775) x4595)))
(assert (= x6189 (and x1572 x6137)))
(assert (= (=> (and (= x3618 x4644) (= x5685 x2343)) x4298) x725))
(assert (x447 x4230))
(assert (x447 x2425))
(assert (x447 x5621))
(assert (x54 x5778))
(assert (= (or x6215 x1790 x227 x2496 x6252 x5449 x2532 x4270 x4462) x491))
(assert (x3903 x1705))
(assert (x1990 x5600))
(assert (= x5339 (and x3054 (not x4232))))
(assert (x447 x5114))
(assert (x447 x3767))
(assert (= (and x1827 x3085) x3423))
(assert (= (or x2880 x1422) x1334))
(assert (= (and x1022 x2808) x2276))
(assert (= x315 (x2338 (x1567 x315))))
(assert (=> (<= x4869 10000) (= (x5097 x4869) (x1567 x4869))))
(assert (= x469 (and x1303 x2552)))
(assert (x447 x2418))
(assert (= (x2338 (x1567 x3722)) x3722))
(assert (= (x2338 (x1567 x3735)) x3735))
(assert (x447 x2800))
(assert (x447 x4201))
(assert (= (or x4556 x3) x4531))
(assert (= (or x2736 x990) x5136))
(assert (x3903 x2733))
(assert (= (x1567 1461501637330902918203684832716283019655932542975) (x5097 1461501637330902918203684832716283019655932542975)))
(assert (= x1105 (and x4519 (not x2854))))
(assert (x447 x609))
(assert (x1957 x6080 x3043 x611 x4954))
(assert (= x4653 (and x2536 x3877)))
(assert (= x468 (and (not x219) x4092)))
(assert (=> (<= x4633 10000) (= (x1567 x4633) (x5097 x4633))))
(assert (x447 x936))
(assert (= x6239 (x2338 (x1567 x6239))))
(assert (= x2996 (and x4288 x3447)))
(assert (= (and (not x6271) x1156) x2494))
(assert (= (and x2271 (not x4753)) x1776))
(assert (x3903 x2178))
(assert (x3903 x209))
(assert (= x5859 (=> (and (= x1680 0) (= x32 x4395)) x258)))
(assert (x447 x2469))
(assert (= x4463 (and x2579 (not x3100))))
(assert (=> (>= 10000 x921) (= (x1567 x921) (x5097 x921))))
(assert (x447 x4908))
(assert (x54 x473))
(assert (x3903 x3247))
(assert (x1990 x4957))
(assert (= x329 (and x3476 x1144)))
(assert (= (and (not x1576) x1592) x994))
(assert (= x4143 (and x3954 x5299)))
(assert (x447 x3353))
(assert (x447 x921))
(assert (x1957 x4398 x3043 x3043 x3216))
(assert (x447 x2120))
(assert (x54 x2678))
(assert (x447 x5578))
(assert (x3903 x5347))
(assert (= x5071 (or x819 x2886)))
(assert (= x4146 (and x4571 x634)))
(assert (x447 x4418))
(assert (= (and (not x500) x5000) x256))
(assert (x447 x4361))
(assert (= x2401 (or x4194 x2883)))
(assert (= x4266 (and (not x3977) x3730)))
(assert (= x486 (or x3940 x1382 x3405 x1262 x1845 x4844 x5130 x4218 x1355 x5650 x295)))
(assert (=> (<= x5880 10000) (= (x1567 x5880) (x5097 x5880))))
(assert (= (x1567 953495055) (x5097 953495055)))
(assert (x2992 x3043 (- x2378 x611)))
(assert (= (or (and (not x701) x6326) (and x5048 x2256)) x2477))
(assert (= (and x991 x1920) x4227))
(assert (x447 x195))
(assert (= x3832 (or x5460 x3855)))
(assert (= (and (not x667) x3580) x5555))
(assert (= x3591 (=> (and (= x2485 x2550) (= x4621 x1983)) x246)))
(assert (x54 x1308))
(assert (x447 x3545))
(assert (= (=> (and (and (= (= x1445 x2417) x3684) (= 2512374353 x548) (= x1024 x4332) (<= x3128 1461501637330902918203684832716283019655932542975) (= 128 x659) (= (not (= x1596 x1024)) x1671) (> 3065339685 x548) (<= x1445 1461501637330902918203684832716283019655932542975) (not (= x1020 0)) (= x4263 x1596) (= x1020 (x2549 (x1567 x1445))) (= (not (= x4490 x4562)) x1550) (= x5446 x3128) (= x174 (x2549 (x1567 x4332))) x1671 (not (> 2512374353 x548)) (= x4562 x4332) (<= 0 x1445) x1550 (> 1461501637330902918203684832716283019655932542976 x1445) (= x5739 x4490) (> x174 0)) (and (not (= x462 x5880)) (< 0 x2020) (not (= x2020 x3931)) (<= x5880 1461501637330902918203684832716283019655932542975) (<= 0 x1912) (not (= x3247 x3931)) (>= x833 0) (not (= x3931 x5547)) (not (= x2020 x2417)) (not (= x4332 x462)) (not (= x2280 x5205)) x53 (<= 0 x6358) (>= 1461501637330902918203684832716283019655932542975 x5771) (= x3865 (< 0 (x2549 (x1567 x5205)))) (>= 1461501637330902918203684832716283019655932542975 x3267) (>= 1461501637330902918203684832716283019655932542975 x3931) (not (= x3267 x5880)) (= x5469 x4154) (<= 0 x5349) (>= x5904 0) (<= x5924 255) (not (= x717 x3267)) (not (= x5771 x5880)) x2981 x2217 (not (= x5880 x2280)) (<= 0 x1643) (not (= x5205 x5547)) (<= 0 x2844) (>= x3525 0) (= x831 x1230) (> x5205 0) (not (= x3247 x5713)) (<= x1912 255) (>= x5604 0) (>= x5469 0) (not (= x4332 x2020)) (= (x1560 (x1567 x3247)) x1519) (= (x1560 (x1567 x5547)) x1764) (not (= x3267 x5713)) (not (= x5771 x2020)) (= x6298 x1031) (>= x1445 0) (= x369 (> (x2549 (x1567 x462)) 0)) (not (= x3247 x5205)) (< 0 x717) (= (< 0 (x2549 (x1567 x717))) x4008) (= (< 0 (x2549 (x1567 x2280))) x2981) (not (= x2280 x3931)) (= x3949 (x1560 (x1567 x462))) (<= x4332 1461501637330902918203684832716283019655932542975) (<= 0 x228) (>= x779 0) (not (= x3267 x5547)) (not (= x3247 x5547)) (= x4154 x5118) (<= 0 x291) (not (= x4332 x3931)) (<= x5713 1461501637330902918203684832716283019655932542975) (not (= x2417 x462)) (not (= x3267 x2020)) (= (x2549 (x1567 x4332)) x2234) (not (= x5771 x717)) (not (= x462 x3267)) (= x5868 (x1560 (x1567 x2417))) (not (= x462 x5771)) (<= x2417 1461501637330902918203684832716283019655932542975) (< x1051 2512374353) (= x4263 x1445) (not (= x3931 x5771)) (= x5451 x6089) (<= x2734 1461501637330902918203684832716283019655932542975) (<= 0 x3269) (<= x5889 1461501637330902918203684832716283019655932542975) (>= x1564 0) (not (= x717 x4332)) (not (= x3931 x5713)) (> x3247 0) (not (= x5205 x3931)) (not (= x5205 x5713)) (<= 0 x1510) (not (= x4332 x5713)) (not (= x717 x3931)) x4907 (not (= x2417 x3247)) (not (= x2280 x2417)) (<= x1510 1461501637330902918203684832716283019655932542975) (not (= x5713 x5880)) (> x3931 0) (>= 1461501637330902918203684832716283019655932542975 x833) (>= x5679 0) (not (= x4332 x5547)) (not (= x3247 x462)) (>= x1746 0) (>= x4144 0) (= x2217 (< 0 (x2549 (x1567 x5771)))) (not (= x2280 x3267)) (<= x5547 1461501637330902918203684832716283019655932542975) (>= x528 0) (= x528 (x1560 (x1567 x5771))) (not (= x5713 x717)) (not (= x462 x2280)) (<= 0 x5924) (< x1445 1461501637330902918203684832716283019655932542976) (not (= x3247 x2020)) (not (= x5880 x717)) (<= 0 x5889) (not (= x4332 x3267)) (>= 1461501637330902918203684832716283019655932542975 x5904) (>= x3449 0) (not (= x5713 x462)) (>= 1461501637330902918203684832716283019655932542975 x779) (>= x5398 0) x2904 (<= x5398 255) (not (= x2020 x5547)) (not (= x5771 x4332)) (not (= x5713 x2020)) (<= x5604 1461501637330902918203684832716283019655932542975) (>= 255 x4756) (not (= x5771 x3267)) (<= 0 x5857) (= x1564 (x1560 (x1567 x5205))) (not (= x5547 x5880)) (>= 255 x3269) (not (= x462 x717)) (<= 0 x971) x5755 (not (= x5205 x5880)) (not (= x5771 x5547)) (not (= x717 x2417)) (not (= x5771 x5713)) (not (= x3247 x5880)) (not (= x2417 x5771)) (<= 0 x2426) (not (= x462 x3931)) x3290 (not (= x2280 x5547)) (= (x1560 (x1567 x4332)) x4144) (<= 0 x1445) (not (= x2417 x5880)) (= x4680 (x1560 (x1567 x5880))) (< 0 x5880) (= (< 0 (x2549 (x1567 x5547))) x3290) (not (= x5547 x5713)) (= x244 x6200) (>= 1461501637330902918203684832716283019655932542975 x1746) (> x2417 0) (= x2177 x1436) (not (= x3931 x3267)) (> x4332 0) (>= 1461501637330902918203684832716283019655932542975 x1445) (= x53 (> (x2549 (x1567 x3247)) 0)) (<= x717 1461501637330902918203684832716283019655932542975) (= x3595 (< 0 (x2549 (x1567 x4332)))) (not (= x2280 x5771)) (= x5755 (< 0 (x2549 (x1567 x2020)))) (>= 1461501637330902918203684832716283019655932542975 x2280) (= x3525 (x1560 (x1567 x717))) (>= 1461501637330902918203684832716283019655932542975 x5469) (not (= x2417 x5205)) (= 953495055 x1051) (> x5547 0) (not (= x5547 x462)) (> x2234 0) (>= 255 x5349) (not (= x5205 x2020)) (>= x4680 0) (= x3055 (< 0 (x2549 (x1567 x5713)))) (not (= x2280 x2020)) (= x944 (< 0 (x2549 (x1567 x3267)))) (not (= x5547 x2417)) x1623 (>= 1461501637330902918203684832716283019655932542975 x5679) x3595 (> x5771 0) (<= x4613 255) x4008 (= x5889 x5041) (not (= x2417 x5713)) (not (= x3247 x2280)) (not (> 953495055 x1051)) (not (= x5205 x3267)) (<= x2020 1461501637330902918203684832716283019655932542975) (not (= x4332 x2280)) (not (= x3247 x4332)) (<= 0 x4613) (<= x1445 1461501637330902918203684832716283019655932542975) (<= x3449 1461501637330902918203684832716283019655932542975) (not (= x2020 x462)) (<= x2426 1461501637330902918203684832716283019655932542975) (not (= x3931 x5880)) (= x4907 (< 0 (x2549 (x1567 x2417)))) (= x5739 x5041) (not (= x717 x5205)) (= x2904 (> (x2549 (x1567 x5880)) 0)) (>= x1260 0) (>= 1461501637330902918203684832716283019655932542975 x3247) x3865 (<= x291 1461501637330902918203684832716283019655932542975) (= x971 (x1560 (x1567 x3931))) (>= x1482 0) (not (= x2417 x3267)) (not (= x2280 x717)) (> x462 0) (= (x1560 (x1567 x3267)) x228) (not (= x2280 x5713)) (not (= x4332 x2417)) (> x5713 0) x944 (not (= x2417 x3931)) (= (x1560 (x1567 x2280)) x1643) (= x2844 (x1560 (x1567 x2020))) (> x2280 0) (>= x1764 0) (<= 0 x4756) (not (= x717 x3247)) (<= x462 1461501637330902918203684832716283019655932542975) (= x28 x3624) (= x5904 x5446) (not (= x2020 x717)) x369 (<= 0 x2734) x3055 (< 0 x3267) (not (= x5880 x4332)) (not (= x5771 x3247)) (not (= x462 x5205)) (not (= x3267 x3247)) (>= 1461501637330902918203684832716283019655932542975 x5857) (= (> (x2549 (x1567 x3931)) 0) x1623) (<= 0 x1519) (= x4878 x75) (not (= x5205 x4332)) (not (= x717 x5547)) (<= 0 x5868) (not (= x5880 x2020)) (>= 1461501637330902918203684832716283019655932542975 x5205) (<= x6358 255) (= x1482 (x1560 (x1567 x5713))) (not (= x5205 x5771)) (<= 0 x3949) (<= x1260 1461501637330902918203684832716283019655932542975))) (and (=> (and (and (= x5882 100135927934651036221761091863598459016256155049858187411712977198722809069568) (> x889 0) (> 3835264453 x4831) (= 68 x5832) (= x3763 (or (and (= (<= x241 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x241 64)) (> x241 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x3686 x3128) (not (< x5832 4)) (not (= x4831 3674237557)) (not (> 1889567281 x4831)) (= x1986 x4332) (= (x2549 (x1567 x2417)) x889) (= (x980 (- x5832 4)) x241) (= x4831 3714247998) (= 68 x5832) (not (> 3674237557 x4831))) x3684) (and (=> (and (not x3763) (and (= (= x1986 x4332) x1953) (= x1986 x2694))) (and (=> (and (= (= x3128 x3686) x1119) x1953) (and (=> (and x1119 (and (= x3351 32) (= 1 x5357) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1760) (= (x5014 x2341) x1760) (= (x476 (x1567 x3128) x6314 0) x2341) (<= 0 x1760) (= (x476 (x1567 x1986) (x5097 5) 0) x6314))) x5384) (=> (not x1119) x5330))) (=> (not x1953) x5330))) (=> x3763 x5330))) (=> (and (= x3954 (= x1445 x5713)) (not x3684)) (and (=> (and (= (= x1445 x5547) x3376) (not x3954)) (and (=> (and x3376 (and (= x333 x4332) (= x2819 3714247998) (not (> 3714247998 x2819)) (= x4286 x3128) (not (> 4 x1801)) (> x6105 0) (= x2914 (x980 (- x1801 4))) (= x1801 68) (not (> 1901074598 x2819)) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2914)) (< x2914 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2914)) x6319) (= x6105 (x2549 (x1567 x5547))) (= x1801 68) (= x2611 100135927934651036221761091863598459016256155049858187411712977198722809069568) (not (> 2835717307 x2819)))) (and (=> x6319 x5355) (=> (and (and (= x3231 x333) (= (= x333 x4332) x2934)) (not x6319)) (and (=> (not x2934) x5355) (=> (and (= (= x4286 x3128) x456) x2934) (and (=> (not x456) x5355) (=> (and (and (= x2045 (x476 (x1567 x3128) x3989 0)) (= 32 x1829) (<= x670 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x670 0) (= x670 (x4757 x2045)) (= x4566 1) (= (x476 (x1567 x333) (x5097 1) 0) x3989)) x456) x5152))))))) (=> (and (= x3860 (= x1445 x4332)) (not x3376)) (and (=> (and x3860 (and (not (= 3065339685 x404)) (= (or (and (< x2270 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2270) true)) (> x2270 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1761) (= 68 x5293) (= (x980 (- x5293 4)) x2270) (not (= 3088143374 x404)) (= 3714247998 x404) (not (> 3065339685 x404)) (= x3128 x2962) (not (< x404 2512374353)) (= x5347 x4332) (not (> 4 x5293)) (> x4859 0) (= x5293 68) (not (= 3329172565 x404)) (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x5435) (= x4859 (x2549 (x1567 x4332))))) (and (=> x1761 x1092) (=> (and (and (= (= x4332 x5347) x264) (= x1538 x5347)) (not x1761)) (and (=> (and (= x5721 (= x3128 x2962)) x264) (and (=> (and (and (<= x190 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x5622) (= (x476 (x1567 x3128) x4577 0) x2182) (>= x190 0) (= x4577 (x476 (x1567 x5347) (x5097 2) 0)) (= 32 x1352) (= (x1653 x2182) x190)) x5721) x3902) (=> (not x5721) x1092))) (=> (not x264) x1092))))) (=> (and (= (= x2020 x1445) x1681) (not x3860)) (and (=> (and (= (= x3267 x1445) x2058) (not x1681)) (and (=> (and x2058 (and (not (= x2715 826074471)) (= x5777 68) (= 3714247998 x2715) (= (x2549 (x1567 x3267)) x3974) (= x3930 x4332) (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x5743) (= x1540 x3128) (not (> 826074471 x2715)) (not (= 2514000705 x2715)) (not (= x2715 1889567281)) (= x3155 (or (and (= true (<= x4770 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x4770 64)) (> x4770 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x3974 0) (= x4770 (x980 (- x5777 4))) (= x5777 68) (not (= x2715 2835717307)) (not (> 4 x5777)))) (and (=> (and (and (= (= x3930 x4332) x3360) (= x3930 x1019)) (not x3155)) (and (=> (and (= x3375 (= x3128 x1540)) x3360) (and (=> (not x3375) x5513) (=> (and x3375 (and (= (x476 (x1567 x3930) (x5097 2) 0) x5109) (= x5123 (x4215 x5493)) (<= 0 x5123) (= 1 x3509) (<= x5123 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x476 (x1567 x3128) x5109 0) x5493) (= 32 x2900))) x1525))) (=> (not x3360) x5513))) (=> x3155 x5513))) (=> (and (= x2565 (= x2280 x1445)) (not x2058)) (and (=> (and (and (= 68 x2722) (= x4276 x4332) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5598) (and (= (<= x5598 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x5598))) x2355) (not (= 826074471 x5593)) (not (> 4 x2722)) (not (= x5593 2514000705)) (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x5458) (not (> 826074471 x5593)) (= x5598 (x980 (- x2722 4))) (= x5593 3714247998) (= (x2549 (x1567 x2280)) x2557) (< 0 x2557) (= x6180 x3128) (not (= x5593 2835717307)) (not (= 1889567281 x5593)) (not (= x5593 3504541104)) (= 68 x2722)) x2565) (and (=> x2355 x4392) (=> (and (not x2355) (and (= x348 x4276) (= (= x4276 x4332) x3698))) (and (=> (not x3698) x4392) (=> (and x3698 (= x3794 (= x3128 x6180))) (and (=> (and (and (= x5603 (x476 (x1567 x3128) x3426 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2070) (= x4910 32) (= 1 x3173) (<= 0 x2070) (= (x389 x5603) x2070) (= (x476 (x1567 x4276) (x5097 2) 0) x3426)) x3794) x5630) (=> (not x3794) x4392))))))) (=> (and (not x2565) (= x2716 (= x3247 x1445))) (and (=> (and x2716 (and (= x2642 68) (not (= 826074471 x3716)) (= 3714247998 x3716) (= x3128 x5364) (not (< x2642 4)) (not (= 1889567281 x3716)) (> x4960 0) (= (x2549 (x1567 x3247)) x4960) (not (< x3716 826074471)) (= x2642 68) (not (= x3716 2514000705)) (= x1330 x4332) (= x4808 (x980 (- x2642 4))) (= (or (and (> 64 x4808) (= true (<= x4808 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x4808 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x5419) (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x1622) (not (= x3716 2835717307)))) (and (=> x5419 x3103) (=> (and (and (= (= x4332 x1330) x2518) (= x1330 x6218)) (not x5419)) (and (=> (not x2518) x3103) (=> (and (= x1985 (= x5364 x3128)) x2518) (and (=> (and x1985 (and (>= x4951 0) (= x143 (x476 (x1567 x3128) x1089 0)) (= (x476 (x1567 x1330) (x5097 2) 0) x1089) (= x5447 1) (<= x4951 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4951 (x1977 x143)) (= 32 x2726))) x5958) (=> (not x1985) x3103))))))) (=> (and (not x2716) (= x803 (= x5771 x1445))) (and (=> (and (= (= x1445 x462) x1415) (not x803)) (and (=> (and x1415 (and (= x5166 x3128) (not (= x4876 1889567281)) (not (< x4876 826074471)) (= x1049 (x980 (- x5624 4))) (= x371 (or (and (= (<= x1049 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1049 64)) (> x1049 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x4876 2835717307)) (not (> 4 x5624)) (= x4332 x633) (= x1064 100135927934651036221761091863598459016256155049858187411712977198722809069568) (= x434 (x2549 (x1567 x462))) (not (= x4876 826074471)) (not (= 2514000705 x4876)) (> x434 0) (= 68 x5624) (= x5624 68) (= 3714247998 x4876))) (and (=> x371 x3892) (=> (and (and (= x3699 (= x4332 x633)) (= x633 x6108)) (not x371)) (and (=> (not x3699) x3892) (=> (and (= x2937 (= x3128 x5166)) x3699) (and (=> (and x2937 (and (= (x476 (x1567 x3128) x6225 0) x6269) (= 1 x4646) (= (x4864 x6269) x6366) (= 32 x5856) (= x6225 (x476 (x1567 x633) (x5097 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6366) (<= 0 x6366))) x1015) (=> (not x2937) x3892))))))) (=> (and (not x1415) (and (and (and (> x5619 0) (not (> 4 x3526)) (= x903 (x980 (- x3526 4))) (= 68 x3526) (= (x2549 (x1567 x5205)) x5619) (not (= 2835717307 x5541)) (not (= 404098525 x5541)) (= x785 100135927934651036221761091863598459016256155049858187411712977198722809069568) (not (= 157198259 x5541)) (= x1173 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x903) (and (< x903 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x903))))) (not (= x5541 599290589)) (= 3714247998 x5541) (= x3238 x3128) (not (= 1889567281 x5541)) (= 68 x3526) (= x3851 x4332)) x4833) (= (= x5205 x1445) x4833))) (and (=> x1173 x4249) (=> (and (and (= x3851 x3540) (= (= x4332 x3851) x5288)) (not x1173)) (and (=> (and x5288 (= x463 (= x3128 x3238))) (and (=> (not x463) x4249) (=> (and (and (= 1 x6359) (= x413 32) (>= x4258 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4258) (= (x476 (x1567 x3851) (x5097 2) 0) x1379) (= x5 (x476 (x1567 x3128) x1379 0)) (= (x3204 x5) x4258)) x463) x2275))) (=> (not x5288) x4249))))))) (=> (and (and (not (> 826074471 x6233)) (= x5283 68) (= 68 x5283) (= x6233 3714247998) (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x975) (= x4332 x277) (< 0 x3562) (not (= 826074471 x6233)) (= x5605 (x980 (- x5283 4))) (= (or (and (> 64 x5605) (= (<= x5605 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x5605 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1824) (not (= 2835717307 x6233)) (not (= 1889567281 x6233)) (not (= x6233 2514000705)) (= (x2549 (x1567 x5771)) x3562) (= x3128 x1657) (not (< x5283 4))) x803) (and (=> x1824 x6094) (=> (and (not x1824) (and (= x1575 x277) (= x3986 (= x4332 x277)))) (and (=> (and (= x5867 (= x1657 x3128)) x3986) (and (=> (not x5867) x6094) (=> (and x5867 (and (= x3803 32) (= x2711 (x4744 x4259)) (<= 0 x2711) (= x4259 (x476 (x1567 x3128) x1925 0)) (= x1925 (x476 (x1567 x277) (x5097 2) 0)) (= x5602 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2711))) x4273))) (=> (not x3986) x6094))))))))))))) (=> (and (and (= x1732 (x980 (- x1729 4))) (not (> 4 x1729)) (not (= x1774 2514000705)) (not (= x1774 2757214935)) (= x4812 x4332) (not (< x1774 2514000705)) (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x3382) (= (x2549 (x1567 x2020)) x1467) (not (< x1774 1117154408)) (= 68 x1729) (= 3714247998 x1774) (= x4945 x3128) (= x500 (or (and (< x1732 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1732))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1732))) (= 68 x1729) (not (= x1774 2835717307)) (> x1467 0)) x1681) (and (=> x500 x2850) (=> (and (and (= x5090 x4812) (= x5874 (= x4332 x4812))) (not x500)) (and (=> (not x5874) x2850) (=> (and x5874 (= x3139 (= x4945 x3128))) (and (=> (and (and (<= x1679 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x476 (x1567 x3128) x4041 0) x4754) (<= 0 x1679) (= x1679 (x5268 x4754)) (= x1566 1) (= (x476 (x1567 x4812) (x5097 1) 0) x4041) (= x83 32)) x3139) x36) (=> (not x3139) x2850))))))))))))) (=> (and x3954 (and (not (< x2135 4)) (= x2135 68) (= x2915 3714247998) (not (= 3642135687 x2915)) (not (= 2987494029 x2915)) (= x3039 x4332) (< 0 x1437) (= x3764 (or (and (> 64 x939) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x939) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x939))) (not (= 3171951664 x2915)) (> 3824031246 x2915) (not (< x2915 2987494029)) (= x2160 x3128) (= (x2549 (x1567 x5713)) x1437) (not (< x2915 2127478272)) (not (= 3590908516 x2915)) (= x3256 100135927934651036221761091863598459016256155049858187411712977198722809069568) (not (= x2915 3573918927)) (= x939 (x980 (- x2135 4))) (= 68 x2135))) (and (=> (and (not x3764) (and (= x3039 x5719) (= (= x3039 x4332) x2106))) (and (=> (and x2106 (= (= x3128 x2160) x4930)) (and (=> (not x4930) x1246) (=> (and (and (= x116 (x476 (x1567 x3039) (x5097 10) 0)) (<= x1714 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x476 (x1567 x3128) x116 0) x3277) (= x1714 (x5968 x3277)) (>= x1714 0) (= 32 x2699) (= 1 x3214)) x4930) x2103))) (=> (not x2106) x1246))) (=> x3764 x1246))))))) x5282))
(assert (= (and x5139 x4073) x3824))
(assert (x447 x3184))
(assert (and (x5609 x1103 1461501637330902918203684832716283019655932542976) (x4601 x1103 1461501637330902918203684832716283019655932542976) (x301 x1103 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x1103 1461501637330902918203684832716283019655932542976) (* (x1849 x1103 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x1103))))
(assert (x447 x1597))
(assert (= x1814 (or x796 x5608 x4985 x4581 x3959 x5573)))
(assert (x447 x2059))
(assert (x447 x1112))
(assert (x447 x911))
(assert (= x2585 (and x5632 x789)))
(assert (= (and (not x1824) x4480) x3274))
(assert (= (=> (and (= x838 x3399) (= x2676 x5498)) x1529) x3451))
(assert (= x227 (and x4141 x3280)))
(assert (= x4260 (and x1776 x2368)))
(assert (= x990 (or x387 x3939 x4479 x3817 x2843 x4695 x5233)))
(assert (x447 x1051))
(assert (=> (>= 10000 x3722) (= (x1567 x3722) (x5097 x3722))))
(assert (= (=> (and (= x5816 x1857) (= x510 0)) x3968) x2600))
(assert (x447 x3259))
(assert (x447 x3346))
(assert (x447 x1619))
(assert (x447 x6309))
(assert (= (and x3858 (not x2252)) x3738))
(assert (x447 x4370))
(assert (x2992 x4954 (- x611 x2378)))
(assert (= (and x4185 x728) x3704))
(assert (= (or x2746 x5980) x2321))
(assert (and (x3768 x529 10000) (x1349 x529 10000) (=> (and (< 0 x529) (< 0 10000)) (and (<= (* 10000 (x1849 x529 10000)) x529) (< (- x529 10000) (* 10000 (x1849 x529 10000))))) (x204 x529 10000) (x2408 x529 10000)))
(assert (x447 x3404))
(assert (x447 x2768))
(assert (x3960 x6080 x3043 x4954 x611))
(assert (x5592 (- x2378 x4954)))
(assert (x447 x659))
(assert (x447 x435))
(assert (x447 x2177))
(assert (= x40 (x2338 (x1567 x40))))
(assert (=> (>= 10000 x1556) (= (x5097 x1556) (x1567 x1556))))
(assert (= (=> (and (and (= (= x2417 x1445) x5932) (not (= 0 x1805)) (> x4086 0) (> 2512374353 x5678) (= x2588 (= 0 x1186)) (not (> 953495055 x5678)) x2588 (>= x1445 0) (= 1496673372 x5678) (= x2631 x1186) (> 1461501637330902918203684832716283019655932542976 x1445) (= (x2549 (x1567 x4332)) x4086) (<= x1445 1461501637330902918203684832716283019655932542975) (= 0 x451) (= 128 x5750) (not (= 953495055 x5678)) (not (= 1432194747 x5678)) (= x1805 (x2549 (x1567 x1445)))) (and (not (or (and (= true (<= x4072 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x4072)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4072))) (= x5030 x2631) (not (= 0 x5054)) (= x5030 (x3161 128)))) (and (=> (and x5932 (and (> 3674237557 x3990) (= 36 x2719) (= 1889567281 x3990) (= x2764 x4332) (= (x2549 (x1567 x2417)) x1950) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x4328) (= x2719 36) (= x5581 (x980 (- x2719 4))) (< 0 x1950) (not (< x2719 4)) (not (< x3990 1889567281)) (> 2514000705 x3990) (= x6284 (or (and (> 32 x5581) (= (<= x5581 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x5581 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (and (=> (and (and (= x1739 x2764) (= (= x4332 x2764) x5520)) (not x6284)) (and (=> (and x5520 (and (= x3082 (x476 (x1567 x2764) (x5097 2) 0)) (<= 0 x3467) (= x1474 32) (= x2263 1) (<= x3467 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1067 x3082) x3467))) x1101) (=> (not x5520) x5927))) (=> x6284 x5927))) (=> (and (= (= x5713 x1445) x2754) (not x5932)) (and (=> (and (= (= x5547 x1445) x3539) (not x2754)) (and (=> (and (not x3539) (= x2894 (= x1445 x4332))) (and (=> (and (= (= x2020 x1445) x1850) (not x2894)) (and (=> (and (not x1850) (= (= x1445 x3267) x3211)) (and (=> (and (and (not (< x730 826074471)) (not (= 826074471 x730)) (= 1889567281 x730) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3666) (and (< x3666 32) (= (<= x3666 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x132) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x4043) (= x4230 36) (= (x980 (- x4230 4)) x3666) (> x2826 0) (= x4332 x205) (= 36 x4230) (not (> 4 x4230)) (= (x2549 (x1567 x3267)) x2826)) x3211) (and (=> x132 x2600) (=> (and (not x132) (and (= x1231 (= x4332 x205)) (= x536 x205))) (and (=> (and x1231 (and (<= 0 x6163) (= (x476 (x1567 x205) (x5097 1) 0) x2240) (= 32 x1857) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6163) (= x6163 (x2175 x2240)) (= 1 x510))) x3968) (=> (not x1231) x2600))))) (=> (and (= (= x1445 x2280) x2801) (not x3211)) (and (=> (and (not x2801) (= (= x1445 x3247) x1225)) (and (=> (and (and (> x2413 0) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x3828) (= 36 x1842) (= 36 x1842) (not (< x5367 826074471)) (= (or (> x3745 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3745)) (> 32 x3745))) x581) (= 1889567281 x5367) (= (x980 (- x1842 4)) x3745) (= x2413 (x2549 (x1567 x3247))) (not (> 4 x1842)) (= x4332 x4633) (not (= 826074471 x5367))) x1225) (and (=> x581 x2956) (=> (and (and (= x3578 (= x4633 x4332)) (= x2367 x4633)) (not x581)) (and (=> (not x3578) x2956) (=> (and (and (= (x476 (x1567 x4633) (x5097 1) 0) x4353) (= x276 (x2769 x4353)) (>= x276 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x276) (= x4351 32) (= x5487 1)) x3578) x2618))))) (=> (and (= (= x1445 x5771) x5229) (not x1225)) (and (=> (and (= (= x462 x1445) x3347) (not x5229)) (and (=> (and x3347 (and (= x4332 x6003) (= (x2549 (x1567 x462)) x4927) (not (< x3811 826074471)) (= (x980 (- x2222 4)) x4847) (= x2222 36) (> x4927 0) (= x3811 1889567281) (not (< x2222 4)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2345) (= x2222 36) (= x1907 (or (and (= (<= x4847 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x4847)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4847))) (not (= x3811 826074471)))) (and (=> x1907 x5851) (=> (and (and (= x4851 x6003) (= (= x4332 x6003) x3147)) (not x1907)) (and (=> (and x3147 (and (= (x938 x5065) x4934) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4934) (<= 0 x4934) (= x3428 32) (= 1 x2963) (= x5065 (x476 (x1567 x6003) (x5097 1) 0)))) x1095) (=> (not x3147) x5851))))) (=> (and (and (= x6038 (= x5205 x1445)) (and (and (not (= x1706 157198259)) (= 36 x490) (> x3723 0) (= (x2549 (x1567 x5205)) x3723) (= x5681 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x4332 x5751) (not (< x490 4)) (not (= 404098525 x1706)) (= x490 36) (not (= 599290589 x1706)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2707) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2707) true) (> 32 x2707))) x4156) (= (x980 (- x490 4)) x2707) (= x1706 1889567281)) x6038)) (not x3347)) (and (=> x4156 x17) (=> (and (not x4156) (and (= x5558 (= x4332 x5751)) (= x4811 x5751))) (and (=> (and x5558 (and (<= x1941 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x6124) (= (x476 (x1567 x5751) (x5097 1) 0) x2957) (= 32 x2129) (<= 0 x1941) (= x1941 (x3450 x2957)))) x233) (=> (not x5558) x17))))))) (=> (and x5229 (and (= x4332 x662) (= x3020 36) (= x3020 36) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4968)) (> 32 x4968)) (> x4968 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2533) (not (= 826074471 x3822)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x3284) (< 0 x827) (= x3822 1889567281) (= x827 (x2549 (x1567 x5771))) (not (> 826074471 x3822)) (not (> 4 x3020)) (= x4968 (x980 (- x3020 4))))) (and (=> (and (not x2533) (and (= x150 (= x662 x4332)) (= x662 x2193))) (and (=> (and (and (= x5251 (x476 (x1567 x662) (x5097 1) 0)) (= (x443 x5251) x2817) (= 32 x2570) (<= 0 x2817) (= x4827 1) (<= x2817 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x150) x2082) (=> (not x150) x1256))) (=> x2533 x1256))))))) (=> (and x2801 (and (= x1309 x4332) (= 36 x922) (= (or (and (< x3150 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3150))) (> x3150 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4036) (= 36 x922) (= (x980 (- x922 4)) x3150) (not (< x5597 826074471)) (< 0 x4648) (not (= x5597 826074471)) (not (> 4 x922)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x4101) (= x4648 (x2549 (x1567 x2280))) (= x5597 1889567281))) (and (=> (and (and (= x4853 (= x1309 x4332)) (= x1309 x5574)) (not x4036)) (and (=> (not x4853) x4440) (=> (and (and (<= 0 x4071) (= (x3182 x4244) x4071) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4071) (= 32 x2857) (= (x476 (x1567 x1309) (x5097 1) 0) x4244) (= x4597 1)) x4853) x3400))) (=> x4036 x4440))))))) (=> (and x1850 (and (not (< x4892 1117154408)) (= x4332 x5129) (= (x2549 (x1567 x2020)) x2946) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x5895) (not (> 4 x5801)) (= x4892 1889567281) (> 2514000705 x4892) (= 36 x5801) (not (= x4892 1117154408)) (= 36 x5801) (< 0 x2946) (= (x980 (- x5801 4)) x1996) (= x6246 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1996) (and (= (<= x1996 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1996 32)))))) (and (=> x6246 x5699) (=> (and (and (= x5129 x5208) (= (= x5129 x4332) x2260)) (not x6246)) (and (=> (not x2260) x5699) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1249) (<= 0 x1249) (= x3767 32) (= x6101 1) (= (x3550 x4579) x1249) (= x4579 (x476 (x1567 x5129) (x5097 0) 0))) x2260) x5510))))))) (=> (and (and (not (= 953495055 x1743)) (= x2899 36) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x5153) (= x4332 x4126) (= 36 x2899) (< 0 x4630) (not (> 4 x2899)) (not (> 953495055 x1743)) (= x3282 (x980 (- x2899 4))) (= 1889567281 x1743) (not (= 1432194747 x1743)) (not (= 1496673372 x1743)) (= x4630 (x2549 (x1567 x4332))) (> 2512374353 x1743) (= (or (and (< x3282 32) (= true (<= x3282 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3282)) x5048)) x2894) (and (=> x5048 x4536) (=> (and (not x5048) (and (= x4126 x4063) (= x701 (= x4126 x4332)))) (and (=> (not x701) x4536) (=> (and x701 (and (<= x3988 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3751 (x476 (x1567 x4126) (x5097 1) 0)) (= x3988 (x1210 x3751)) (<= 0 x3988) (= 1 x6142) (= x3286 32))) x1420))))))) (=> (and (and (= x4989 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x892 x4332) (not (> 961581905 x3770)) (= 36 x3864) (= x3770 1889567281) (not (= x3770 1086394137)) (not (> 4 x3864)) (not (= x3770 1545185628)) (< 0 x4586) (not (= x3770 961581905)) (= (x2549 (x1567 x5547)) x4586) (= (x980 (- x3864 4)) x5196) (not (= 1875902277 x3770)) (= 36 x3864) (not (= 1484578334 x3770)) (> 1901074598 x3770) (= x826 (or (and (> 32 x5196) (= (<= x5196 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5196)))) x3539) (and (=> x826 x655) (=> (and (and (= x1199 (= x4332 x892)) (= x2320 x892)) (not x826)) (and (=> (not x1199) x655) (=> (and (and (= 32 x1457) (= 1 x4729) (= (x4931 x3766) x2644) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2644) (>= x2644 0) (= x3766 (x476 (x1567 x892) (x5097 0) 0))) x1199) x1593))))))) (=> (and x2754 (and (= x4150 (x980 (- x1268 4))) (not (= 1431022396 x2878)) (< 0 x176) (= 1889567281 x2878) (not (> 4 x1268)) (= x1087 (or (and (> 32 x4150) (= true (<= x4150 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x4150 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= 1553423035 x2878)) (not (< x2878 903454517)) (= (x2549 (x1567 x5713)) x176) (= x1268 36) (< x2878 2127478272) (not (> 1431022396 x2878)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x5866) (= x1268 36) (= x4509 x4332) (not (= x2878 1510251120)) (not (> 1117154408 x2878)))) (and (=> x1087 x6154) (=> (and (and (= (= x4509 x4332) x2499) (= x3561 x4509)) (not x1087)) (and (=> (and (and (<= x2705 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2705) (= x5559 (x476 (x1567 x4509) (x5097 9) 0)) (= x1369 1) (= (x995 x5559) x2705) (= 32 x1709)) x2499) x4162) (=> (not x2499) x6154))))))))) x162))
(assert (=> (<= x3801 10000) (= (x1567 x3801) (x5097 x3801))))
(assert (= x5589 (and (not x4299) x6234)))
(assert (= (x2338 (x5097 3329172565)) 3329172565))
(assert (= (=> (and (= x4201 x3021) (= x4437 x2151)) x342) x5500))
(assert (= (x2338 (x1567 x1526)) x1526))
(assert (= (or x1667 x595) x38))
(assert (x447 x5283))
(assert (= x405 (or x4712 x2450)))
(assert (x2992 x6080 (- x3043 x611)))
(assert (x447 x3938))
(assert (x447 x1321))
(assert (x447 x5441))
(assert (= (x2338 (x1567 x5923)) x5923))
(assert (x447 x3979))
(assert (x447 x5894))
(assert (x447 x3260))
(assert (x3960 x3216 x3043 x4398 x3043))
(assert (= (=> (and (= 0 x1876) (= x2584 x4206)) x694) x2791))
(assert (= x7 (and x4226 x5412)))
(assert (= x1767 (and x3927 x5806)))
(assert (= x1685 (=> (and (= (x476 (x1567 x2741) (x5097 1) 0) x1547) (= (> x3793 x3759) x3862) (<= x3759 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3759 0) (= (x4547 x1547) x3759)) (and (=> x3862 x5516) (=> (and (and (= x4368 (< x3680 x4890)) (= x3849 (x476 (x1567 x5566) (x5097 1) 0)) (<= 0 x4890) (= x5700 (x980 (- x3759 x3793))) (= x4890 (x6310 x3849)) (= x3680 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3793))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4890)) (not x3862)) (and (=> (and (and (= x788 1) (= 32 x1376) (= (x4937 (+ x4890 x3793)) x4825)) (not x4368)) x4838) (=> x4368 x5516)))))))
(assert (x447 x5700))
(assert (= x1640 (and x3858 x2252)))
(assert (= x2288 (and x1365 x1808)))
(assert (= x1921 (and x5773 (not x5414))))
(assert (x447 x4650))
(assert (x447 x1248))
(assert (= (and x2242 x5848) x3016))
(assert (= x3129 (and x1506 x2772)))
(assert (x447 x1299))
(assert (= (and x1208 x3241) x2136))
(assert (x447 x3948))
(assert (x447 x3062))
(assert (x447 x2215))
(assert (x447 x6124))
(assert (x447 x1639))
(assert (= (and x4659 (not x4889)) x475))
(assert (x447 x1505))
(assert (x3903 x5226))
(assert (= (and x3587 (not x2706)) x2583))
(assert (x447 x5545))
(assert (x447 x4773))
(assert (x447 x877))
(assert (= (and (not x4719) x3095) x3841))
(assert (= x4097 (and x4049 (not x4511))))
(assert (= x1549 (and x1592 x1576)))
(assert (= x5290 (and (not x305) x1070)))
(assert (= x4999 (and x3417 x4758)))
(assert (= (and (not x2936) x2032) x3771))
(assert (= x1190 (=> (and (= (x980 (- x1058 x196)) x5756) (= (x4937 (+ x6331 96)) x1058) (= x2818 (x2549 (x1567 x1088))) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4772) (and (= (<= x4772 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x4772)))) (= (x4937 (+ 31 x4772)) x4836) (= (x350 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4836) x4821) (= (x4937 (+ 4 x196)) x6331) (not (= x2521 0)) (not (= x2818 0)) (= x545 (= x1088 x5880)) (= x196 (x4937 (+ 128 x4821))) (= x6072 (x4937 (+ 32 x2389))) (= (x4937 (+ 32 x6331)) x2389)) (and (=> (and (not x545) (= (= x3931 x1088) x1000)) (and (=> (and x1000 (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3011) (and (= true (<= x3011 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3011 96))) x138) (= x4456 x5756) (= (x980 (- x4456 4)) x3011) (= x1192 x4666) (not (> 4 x4456)) (= x4456 100) (= x6205 3600075382) (= (x2549 (x1567 x3931)) x5461) (< 0 x5461) (= 97057840296441966410330255902201960138893160036366920885407767449525406400512 x1402))) (and (=> x138 x4800) (=> (and (and (= x5162 (= x1192 x429)) (= (x350 1461501637330902918203684832716283019655932542975 x1192) x429)) (not x138)) (and (=> (and (and (<= 0 x4094) (<= 0 x779) (= (x2549 (x1567 x2734)) x1236) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4094) (<= x2734 1461501637330902918203684832716283019655932542975) (< x779 1461501637330902918203684832716283019655932542976) (> 1461501637330902918203684832716283019655932542976 x2734) (= x842 (= x1236 0)) (= 128 x784) (<= x779 1461501637330902918203684832716283019655932542975) (>= x2734 0)) x5162) (and (=> (and (= x6210 (= x2734 x2417)) (not x842)) (and (=> (and x6210 (and (not (> 4 x5804)) (= x2989 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x1037 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3791) (and (< x3791 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3791) true)))) (= (x2549 (x1567 x2417)) x2198) (> x2198 0) (= x1238 599290589) (= x6080 x4094) (> 1889567281 x1238) (< x1238 669136355) (= (x980 (- x5804 4)) x3791) (= x523 x779) (= 100 x5804) (not (> 248222656 x1238)) (= x3931 x6254) (not (= x1238 248222656)) (not (= x1238 404098525)) (= 100 x5804))) (and (=> (and (and (= x523 x3871) (= (= x523 x779) x3554)) (not x1037)) (and (=> (not x3554) x3997) (=> (and (and (= x6254 x1749) (= x5881 (= x6254 x3931))) x3554) (and (=> (and x5881 (and (>= 255 x5349) (= x2840 (= 0 x5349)) (<= 0 x5349) (< x5349 256) (= x3800 x6080))) (and (=> (and x2840 (and (= (x476 (x1567 x523) (x5097 6) 0) x483) (<= x6290 255) (<= 0 x6290) (= (x5340 x483) x6290) (= (= x6290 0) x4782) (< x6290 256))) (and (=> (and x4782 (= (> 100 x5804) x3287)) (and (=> x3287 x3997) (=> (and (and (= x4207 (x2596 x4521)) (= x4037 10000) (>= x4207 0) (= x3581 (x476 (x1567 x523) (x5097 5) 0)) (>= x3043 0) (= x3556 (= 0 x6080)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4207) (<= x3043 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x476 (x1567 x3931) x3581 0) x4521)) (not x3287)) (and (=> (and (not x3556) (and (= x4565 (x350 x421 x351)) (= (ite (> x3043 x5256) 1 0) x351) (= x2095 (= 0 x3800)) (= (ite (not x2095) 1 0) x421) (= x5256 (x1849 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6080)) (= x1098 (= 0 x4565)))) (and (=> (and x1098 (and (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x423 x6080 x3043)) x3897) (= x5362 (x2154 (x423 x6080 x3043))))) (and (=> (not x3897) x3997) (=> (and x3897 (= x5362 x4169)) x762))) (=> (not x1098) x3997))) (=> (and x3556 (= 0 x4169)) x762))))) (=> (not x4782) x3997))) (=> (not x2840) x3997))) (=> (not x5881) x3997))))) (=> x1037 x3997))) (=> (and (= (= x5713 x2734) x5314) (not x6210)) (and (=> (and (not x5314) (= x98 (= x5547 x2734))) (and (=> (and (not x98) (= (= x4332 x2734) x5921)) (and (=> (and x5921 (and (= x4094 x4629) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1295) (= 599290589 x4909) (= (x2549 (x1567 x4332)) x4466) (= x779 x2628) (= x1177 100) (not (< x1177 4)) (> 953495055 x4909) (= (or (and (= true (<= x5245 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x5245 96)) (> x5245 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4969) (= x1177 100) (= x5245 (x980 (- x1177 4))) (> x4466 0) (not (= x4909 404098525)) (> 2512374353 x4909) (= x411 x3931) (not (= x4909 157198259)))) (and (=> (and (not x4969) (and (= x2421 x2628) (= x5714 (= x2628 x779)))) (and (=> (and (and (= x5709 (= x3931 x411)) (= x411 x214)) x5714) (and (=> (not x5709) x5800) (=> (and x5709 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x220) (= (= x220 115792089237316195423570985008687907853269984665640564039457584007913129639935) x6018) (= (x476 (x1567 x3931) x4784 0) x1926) (= x220 (x5995 x1926)) (>= x220 0) (= x4784 (x476 (x1567 x2628) (x5097 2) 0)))) (and (=> (and (not x6018) (and (= x4304 (x476 (x1567 x2628) (x5097 2) 0)) (= (> x4629 x3171) x4866) (= x5150 (x476 (x1567 x3931) x4304 0)) (>= x3171 0) (= x3171 (x5995 x5150)) (<= x3171 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x4866) (= x6227 (x980 (- x3171 x4629)))) x5680) (=> x4866 x5800))) (=> x6018 x5680))))) (=> (not x5714) x5800))) (=> x4969 x5800))) (=> (and (= (= x2734 x2020) x4865) (not x5921)) (and (=> (and x4865 (and (= x1425 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 599290589 x4082) (= x3931 x3713) (not (= 157198259 x4082)) (= x779 x5260) (= x1407 100) (not (< x1407 4)) (< x4082 1117154408) (= 100 x1407) (= (x980 (- x1407 4)) x1385) (< 0 x3662) (not (= x4082 117300739)) (= x3662 (x2549 (x1567 x2020))) (not (= 404098525 x4082)) (= x4094 x6159) (= x5457 (or (and (> 96 x1385) (= (<= x1385 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1385))))) (and (=> x5457 x6131) (=> (and (not x5457) (and (= x2373 (= x779 x5260)) (= x2410 x5260))) (and (=> (not x2373) x6131) (=> (and x2373 (and (= x4885 (= x3931 x3713)) (= x3713 x2388))) (and (=> (not x4885) x6131) (=> (and (and (= x6159 x4213) (= x18 (= 0 x3713))) x4885) (and (=> (and (not x18) (and (= (x476 (x1567 x5260) (x5097 0) 0) x4118) (= (x1358 x4118) x2926) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2926) (= (> x6159 x2926) x5822) (>= x2926 0))) (and (=> (and (not x5822) (= x4032 (< x2926 x6159))) (and (=> (and (and (= (x476 (x1567 x3713) (x5097 0) 0) x1807) (= x5464 (x476 (x1567 x5260) (x5097 0) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5348) (= (< x3353 x5348) x6075) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6159)) x3353) (<= 0 x5348) (= (x980 (- x2926 x6159)) x911) (= (x5996 x1807) x5348)) (not x4032)) (and (=> (and (and (= (> x5348 x5645) x4728) (= x5645 (x4937 (+ x5348 x6159)))) (not x6075)) (and (=> (and (and (= x2347 (x476 (x1567 x3713) (x5097 0) 0)) (<= x2481 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2481 (x3613 x3442)) (= x4170 (> x6159 x2481)) (>= x2481 0) (= (x476 (x1567 x3931) x1281 0) x3442) (= (x476 (x1567 x5260) (x5097 1) 0) x1281)) (not x4728)) (and (=> x4170 x6131) (=> (and (= (> x6159 x2481) x6160) (not x4170)) (and (=> (and (not x6160) (and (= x4413 (x980 (- x2481 x6159))) (= x308 (= x3931 0)))) (and (=> (and (= (= x5260 0) x1042) (not x308)) (and (=> x1042 x6131) (=> (and (not x1042) (and (= x5258 1) (= 32 x3596) (= x5620 (x460 128)) (= (x476 (x1567 x3931) x5495 0) x1554) (= 1 x1812) (= (x476 (x1567 x5260) (x5097 1) 0) x5495))) x964))) (=> x308 x6131))) (=> x6160 x6131))))) (=> x4728 x6131))) (=> x6075 x6131))) (=> x4032 x6131))) (=> x5822 x6131))) (=> x18 x6131))))))))) (=> (and (not x4865) (= (= x2734 x3267) x4185)) (and (=> (and (not x4185) (= (= x2280 x2734) x1335)) (and (=> (and (not x1335) (= (= x2734 x3247) x2966)) (and (=> (and (= x1647 (= x5771 x2734)) (not x2966)) (and (=> (and (and (< 0 x3018) (= x2396 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 100 x5230) (= x5230 100) (not (< x5230 4)) (> 826074471 x5462) (not (= 117300739 x5462)) (= x1758 (or (and (< x3191 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3191) true)) (> x3191 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x5462 599290589) (= x3018 (x2549 (x1567 x5771))) (= x4060 x3931) (= x4923 x4094) (not (= x5462 404098525)) (= x779 x840) (= x3191 (x980 (- x5230 4))) (not (= x5462 157198259))) x1647) (and (=> (and (not x1758) (and (= x4388 (= x840 x779)) (= x840 x1390))) (and (=> (not x4388) x44) (=> (and (and (= x1948 (= x3931 x4060)) (= x849 x4060)) x4388) (and (=> (not x1948) x44) (=> (and x1948 (and (= (x476 (x1567 x840) (x5097 1) 0) x5503) (>= x5610 0) (= x744 x4923) (= (x614 x5503) x5610) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5610) (= (> x4094 x5610) x4141))) (and (=> x4141 x44) (=> (and (not x4141) (= (> x4923 x5610) x5081)) (and (=> (and (and (<= 0 x1097) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4923)) x3086) (= x1021 (x980 (- x5610 x4923))) (<= x1097 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5207 x3053) x1097) (= x5638 (x476 (x1567 x840) (x5097 1) 0)) (= x3053 (x476 (x1567 x4060) (x5097 1) 0)) (= (< x3086 x1097) x5855)) (not x5081)) (and (=> x5855 x44) (=> (and (not x5855) (and (= x5018 (x4937 (+ x1097 x4923))) (= x6237 (< x5018 x1097)))) (and (=> x6237 x44) (=> (and (and (>= x1427 0) (= (x476 (x1567 x840) (x5097 2) 0) x4620) (= x1427 (x366 x2311)) (= (x476 (x1567 x3931) x4620 0) x2311) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1427) (= (< x1427 x4923) x5104) (= x5099 (x476 (x1567 x4060) (x5097 1) 0))) (not x6237)) (and (=> x5104 x44) (=> (and (= (< x1427 x4923) x2112) (not x5104)) (and (=> x2112 x44) (=> (and (not x2112) (and (= x1984 1) (= x3810 (x980 (- x1427 x4923))) (= (x476 (x1567 x3931) x131 0) x2448) (= 32 x4302) (= x131 (x476 (x1567 x840) (x5097 2) 0)))) x5376))))))))) (=> x5081 x44))))))))) (=> x1758 x44))) (=> (and (= (= x2734 x462) x5511) (not x1647)) (and (=> (and x5511 (and (< 0 x1090) (= x3931 x1569) (not (> 4 x6110)) (= x6110 100) (= x577 (x980 (- x6110 4))) (= x2682 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= x1860 404098525)) (< x1860 826074471) (= x4094 x3914) (= x6110 100) (not (= 117300739 x1860)) (= x779 x5669) (= x6268 (or (and (> 96 x577) (= (<= x577 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x577))) (= (x2549 (x1567 x462)) x1090) (= 599290589 x1860) (not (= 157198259 x1860)))) (and (=> x6268 x3115) (=> (and (not x6268) (and (= x2203 x5669) (= x5928 (= x5669 x779)))) (and (=> (and (and (= (= x1569 x3931) x6012) (= x5456 x1569)) x5928) (and (=> (and x6012 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1439) (= (x476 (x1567 x5669) (x5097 1) 0) x3955) (= x3914 x1066) (= x1439 (x597 x3955)) (= (< x1439 x4094) x3650) (>= x1439 0))) (and (=> x3650 x3115) (=> (and (not x3650) (= x6130 (> x3914 x1439))) (and (=> (and (and (= (x980 (- x1439 x3914)) x1430) (= x2865 (< x5037 x5899)) (<= x5899 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x5899) (= (x476 (x1567 x5669) (x5097 1) 0) x4764) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3914)) x5037) (= (x4038 x2812) x5899) (= x2812 (x476 (x1567 x1569) (x5097 1) 0))) (not x6130)) (and (=> x2865 x3115) (=> (and (not x2865) (and (= x3386 (> x5899 x3918)) (= x3918 (x4937 (+ x5899 x3914))))) (and (=> (and (not x3386) (and (= x4174 (x128 x3454)) (<= 0 x4174) (<= x4174 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4289 (x476 (x1567 x1569) (x5097 1) 0)) (= x989 (x476 (x1567 x5669) (x5097 2) 0)) (= x3454 (x476 (x1567 x3931) x989 0)) (= (> x3914 x4174) x1992))) (and (=> x1992 x3115) (=> (and (= x4758 (< x4174 x3914)) (not x1992)) (and (=> x4758 x3115) (=> (and (not x4758) (and (= 32 x2602) (= x3641 (x476 (x1567 x3931) x3264 0)) (= x4140 1) (= x6195 (x980 (- x4174 x3914))) (= x3264 (x476 (x1567 x5669) (x5097 2) 0)))) x2047))))) (=> x3386 x3115))))) (=> x6130 x3115))))) (=> (not x6012) x3115))) (=> (not x5928) x3115))))) (=> (and (not x5511) (and (= (= x2734 x5205) x3782) (and (and (not (= 404098525 x4852)) (not (= 157198259 x4852)) (= x3931 x2669) (= x4100 (x980 (- x6087 4))) (> x2190 0) (= 599290589 x4852) (= x779 x5923) (= 100 x6087) (= x1483 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x6337 x4094) (= x1005 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4100) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4100) true) (> 96 x4100)))) (= 100 x6087) (= (x2549 (x1567 x5205)) x2190) (not (> 4 x6087))) x3782))) (and (=> (and (not x1005) (and (= x5106 (= x5923 x779)) (= x5923 x3116))) (and (=> (not x5106) x2146) (=> (and (and (= x1561 (= x2669 x3931)) (= x2669 x6010)) x5106) (and (=> (and x1561 (and (= x2604 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1204)) (<= 0 x1204) (= x1406 (x476 (x1567 x3931) x6114 0)) (= (x476 (x1567 x5923) (x5097 2) 0) x6114) (= x1204 (x5198 x1406)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1204))) (and (=> (and (not x2604) (and (= x4956 (x5198 x4088)) (= (< x4956 x6337) x5219) (= x4088 (x476 (x1567 x3931) x6303 0)) (= (x476 (x1567 x5923) (x5097 2) 0) x6303) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4956) (>= x4956 0))) (and (=> (and (= (x980 (- x4956 x6337)) x1753) (not x5219)) x941) (=> x5219 x2146))) (=> x2604 x941))) (=> (not x1561) x2146))))) (=> x1005 x2146))))))) (=> (and x2966 (and (= x5295 599290589) (= x1740 (or (> x580 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x580 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x580) true)))) (not (= x5295 117300739)) (= x1045 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> x5122 0) (= x580 (x980 (- x3010 4))) (= 100 x3010) (= (x2549 (x1567 x3247)) x5122) (not (< x3010 4)) (= x4094 x4366) (= x3931 x3415) (< x5295 826074471) (= 100 x3010) (not (= 404098525 x5295)) (not (= 157198259 x5295)) (= x3564 x779))) (and (=> (and (and (= x6280 x3564) (= x4137 (= x779 x3564))) (not x1740)) (and (=> (and x4137 (and (= x751 (= x3931 x3415)) (= x5524 x3415))) (and (=> (and x751 (and (= x1125 (x476 (x1567 x3564) (x5097 1) 0)) (= x4366 x6164) (<= 0 x3993) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3993) (= (x4873 x1125) x3993) (= (> x4094 x3993) x1594))) (and (=> x1594 x3388) (=> (and (= (< x3993 x4366) x2854) (not x1594)) (and (=> (and (and (<= 0 x3985) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3985) (= (x476 (x1567 x3415) (x5097 1) 0) x2488) (= (x19 x2488) x3985) (= (< x4637 x3985) x4997) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4366)) x4637) (= (x980 (- x3993 x4366)) x2458) (= x3842 (x476 (x1567 x3564) (x5097 1) 0))) (not x2854)) (and (=> x4997 x3388) (=> (and (not x4997) (and (= x2610 (< x4421 x3985)) (= x4421 (x4937 (+ x4366 x3985))))) (and (=> x2610 x3388) (=> (and (not x2610) (and (= x5974 (x476 (x1567 x3931) x5643 0)) (= (x476 (x1567 x3415) (x5097 1) 0) x2060) (= (x5872 x5974) x6103) (>= x6103 0) (= x847 (< x6103 x4366)) (= x5643 (x476 (x1567 x3564) (x5097 2) 0)) (<= x6103 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x847) (= (< x6103 x4366) x700)) (and (=> (and (and (= 32 x3748) (= (x476 (x1567 x3931) x547 0) x5279) (= x4935 1) (= (x476 (x1567 x3564) (x5097 2) 0) x547) (= (x980 (- x6103 x4366)) x3691)) (not x700)) x74) (=> x700 x3388))) (=> x847 x3388))))))) (=> x2854 x3388))))) (=> (not x751) x3388))) (=> (not x4137) x3388))) (=> x1740 x3388))))) (=> (and x1335 (and (= 100 x2107) (< 0 x674) (= (x980 (- x2107 4)) x5863) (= x674 (x2549 (x1567 x2280))) (= 100 x2107) (not (= x437 157198259)) (= x3931 x1132) (not (= 404098525 x437)) (not (> 4 x2107)) (= x4507 x4094) (> 826074471 x437) (not (= x437 117300739)) (= x2730 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x779 x3722) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5863)) (> 96 x5863)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5863)) x1865) (= x437 599290589))) (and (=> x1865 x6304) (=> (and (not x1865) (and (= x3404 x3722) (= (= x779 x3722) x1332))) (and (=> (and (and (= x5253 x1132) (= (= x3931 x1132) x4667)) x1332) (and (=> (not x4667) x6304) (=> (and (and (= x3647 x4507) (= (x476 (x1567 x3722) (x5097 1) 0) x3201) (= x2503 (< x2451 x4094)) (>= x2451 0) (= x2451 (x187 x3201)) (<= x2451 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x4667) (and (=> x2503 x6304) (=> (and (not x2503) (= (< x2451 x4507) x5527)) (and (=> x5527 x6304) (=> (and (not x5527) (and (= x1800 (x476 (x1567 x3722) (x5097 1) 0)) (= x3443 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4507))) (= x1565 (x3089 x1242)) (>= x1565 0) (= x706 (> x1565 x3443)) (= (x980 (- x2451 x4507)) x4119) (= (x476 (x1567 x1132) (x5097 1) 0) x1242) (<= x1565 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x706 x6304) (=> (and (not x706) (and (= (< x496 x1565) x4709) (= x496 (x4937 (+ x1565 x4507))))) (and (=> x4709 x6304) (=> (and (and (= x5024 (x476 (x1567 x3931) x4779 0)) (>= x905 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x905) (= x905 (x1756 x5024)) (= (> x4507 x905) x4919) (= x1062 (x476 (x1567 x1132) (x5097 1) 0)) (= x4779 (x476 (x1567 x3722) (x5097 2) 0))) (not x4709)) (and (=> x4919 x6304) (=> (and (= x5157 (< x905 x4507)) (not x4919)) (and (=> x5157 x6304) (=> (and (not x5157) (and (= x6188 (x980 (- x905 x4507))) (= (x476 (x1567 x3722) (x5097 2) 0) x2286) (= x3659 1) (= x477 (x476 (x1567 x3931) x2286 0)) (= 32 x3196))) x1670))))))))))))))) (=> (not x1332) x6304))))))) (=> (and (and (not (= x299 404098525)) (< 0 x877) (< x299 826074471) (= x1697 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (x980 (- x5257 4)) x191) (= x5257 100) (= 599290589 x299) (not (= 157198259 x299)) (not (> 4 x5257)) (= x779 x5092) (= 100 x5257) (= (x2549 (x1567 x3267)) x877) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x191) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x191)) (< x191 96))) x4240) (= x3931 x3175) (not (= 117300739 x299)) (= x4094 x5936)) x4185) (and (=> x4240 x866) (=> (and (and (= x5092 x835) (= x2225 (= x5092 x779))) (not x4240)) (and (=> (and (and (= x3143 x3175) (= x5839 (= x3175 x3931))) x2225) (and (=> (not x5839) x866) (=> (and (and (= (= x3175 0) x4652) (= x4239 x5936)) x5839) (and (=> (and (and (= (x417 x4454) x1367) (>= x1367 0) (= x4454 (x476 (x1567 x5092) (x5097 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1367) (= x1938 (< x1367 x5936))) (not x4652)) (and (=> x1938 x866) (=> (and (not x1938) (and (= (x476 (x1567 x5092) (x5097 2) 0) x3499) (= x4253 (< x5826 x5936)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5826) (= (x400 x6118) x5826) (<= 0 x5826) (= x6118 (x476 (x1567 x3931) x3499 0)))) (and (=> x4253 x866) (=> (and (and (<= x6112 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x6112 (x417 x4178)) (= (x476 (x1567 x5092) (x5097 1) 0) x4178) (= x3149 (> x5936 x6112)) (<= 0 x6112)) (not x4253)) (and (=> x3149 x866) (=> (and (not x3149) (and (= (x980 (- x6112 x5936)) x675) (= x1220 (x476 (x1567 x3931) x3108 0)) (= x2024 (< x4515 x5936)) (<= x4515 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3108 (x476 (x1567 x5092) (x5097 2) 0)) (<= 0 x4515) (= x4515 (x400 x1220)) (= (x476 (x1567 x5092) (x5097 1) 0) x6275))) (and (=> (and (not x2024) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1490) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5936)) x5105) (= (x476 (x1567 x3931) x3583 0) x515) (= x3583 (x476 (x1567 x5092) (x5097 2) 0)) (>= x1490 0) (= x1490 (x290 x344)) (= (x980 (- x4515 x5936)) x1494) (= x344 (x476 (x1567 x3175) (x5097 1) 0)) (= x6271 (< x5105 x1490)))) (and (=> (and (not x6271) (and (= (x4937 (+ x1490 x5936)) x3957) (= (x476 (x1567 x3175) (x5097 1) 0) x5352) (= 1 x2191) (= 1 x4692) (= x3242 32) (= x3984 (x5841 128)))) x3227) (=> x6271 x866))) (=> x2024 x866))))))))) (=> x4652 x866))))) (=> (not x2225) x866))))))))))) (=> (and x98 (and (= x5686 (x2549 (x1567 x5547))) (= x653 x4094) (not (= x899 404098525)) (= 100 x1552) (< x899 1901074598) (= x947 (x980 (- x1552 4))) (not (= 157198259 x899)) (not (< x1552 4)) (< x899 961581905) (= x3212 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x1979 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x947) (and (> 96 x947) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x947))))) (= x779 x5727) (= x1552 100) (= x899 599290589) (> x5686 0) (not (= x899 117300739)) (= x3931 x5064) (not (= 543189872 x899)))) (and (=> x1979 x5052) (=> (and (and (= x3658 x5727) (= x3973 (= x779 x5727))) (not x1979)) (and (=> (not x3973) x5052) (=> (and (and (= x1107 (= x3931 x5064)) (= x5064 x1241)) x3973) (and (=> (and x1107 (and (= x2967 x653) (= (= x5727 0) x718))) (and (=> (and (not x718) (= (= 0 x5064) x2357)) (and (=> x2357 x5052) (=> (and (and (<= x613 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 128 x4926) (<= 0 x613) (= (x5142 x1508) x613) (= (> x653 x613) x502) (= (x476 (x1567 x5727) (x5097 0) 0) x1508)) (not x2357)) (and (=> x502 x5052) (=> (and (= (> x653 x613) x4710) (not x502)) (and (=> x4710 x5052) (=> (and (and (= (x476 (x1567 x5727) (x5097 0) 0) x6306) (= x1272 (x476 (x1567 x5064) (x5097 0) 0)) (= x2912 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x653))) (<= x6020 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x6020 x2912) x6219) (>= x6020 0) (= x4988 (x980 (- x613 x653))) (= (x3600 x1272) x6020)) (not x4710)) (and (=> (and (not x6219) (and (= x4668 (x4937 (+ x6020 x653))) (= (< x4668 x6020) x5710))) (and (=> (and (not x5710) (and (= x4627 (x476 (x1567 x5727) (x5097 1) 0)) (= (x476 (x1567 x3931) x4627 0) x1878) (<= 0 x2573) (= (x476 (x1567 x5064) (x5097 0) 0) x4287) (= (< x2573 x653) x3646) (= x4823 224) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2573) (= x2573 (x5111 x1878)))) (and (=> x3646 x5052) (=> (and (not x3646) (= (> x653 x2573) x4147)) (and (=> x4147 x5052) (=> (and (and (= (x980 (- x2573 x653)) x5441) (= x3529 (= x5727 0))) (not x4147)) (and (=> (and (not x3529) (= (= 0 x3931) x4805)) (and (=> (and (not x4805) (and (= (x476 (x1567 x5727) (x5097 1) 0) x557) (= x5627 1) (= x1769 1) (= x47 32) (= x5735 (x476 (x1567 x3931) x557 0)))) x3956) (=> x4805 x5052))) (=> x3529 x5052))))))) (=> x5710 x5052))) (=> x6219 x5052))))))))) (=> x718 x5052))) (=> (not x1107) x5052))))))))) (=> (and (and (not (= x4281 445207142)) (< x4281 2127478272) (= (or (and (< x1645 96) (= true (<= x1645 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1645 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x6184) (< x4281 716570693) (= 599290589 x4281) (= x414 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> 903454517 x4281) (= 100 x1929) (not (= x4281 117300739)) (not (< x1929 4)) (not (= 404098525 x4281)) (= x358 x4094) (not (= x4281 157198259)) (= x2220 (x2549 (x1567 x5713))) (= x1645 (x980 (- x1929 4))) (= x779 x2143) (= x3931 x3750) (> x2220 0) (= 100 x1929)) x5314) (and (=> (and (not x6184) (and (= x4980 x2143) (= (= x2143 x779) x925))) (and (=> (not x925) x878) (=> (and (and (= x5124 (= x3750 x3931)) (= x3750 x749)) x925) (and (=> (not x5124) x878) (=> (and (and (= x4423 (= x3269 0)) (> 256 x3269) (>= x3269 0) (>= 255 x3269) (= x4795 x358)) x5124) (and (=> (not x4423) x878) (=> (and x4423 (and (<= 0 x2093) (= (x476 (x1567 x3931) (x5097 3) 0) x4508) (= x1890 (= x2093 0)) (>= 255 x2093) (= x2093 (x3271 x4508)) (> 256 x2093))) (and (=> (and (and (<= 0 x5200) (>= 255 x5200) (= (= x5200 0) x667) (= (x3271 x1825) x5200) (= (x476 (x1567 x2143) (x5097 3) 0) x1825) (> 256 x5200)) x1890) (and (=> (and (and (= (x3271 x4314) x6262) (>= 255 x6262) (= (= x6262 0) x11) (= x4314 (x476 (x1567 x3750) (x5097 3) 0)) (< x6262 256) (>= x6262 0)) x667) (and (=> (not x11) x878) (=> (and (and (>= x4285 0) (<= x4285 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5159 x2419) x4285) (= (> x358 x4285) x5410) (= x2463 (x476 (x1567 x2143) (x5097 10) 0)) (= (x476 (x1567 x3931) x2463 0) x2419)) x11) (and (=> x5410 x878) (=> (and (not x5410) (= x1808 (= x2143 0))) (and (=> (and (= x102 (= 0 x3750)) (not x1808)) (and (=> (and (and (= (x476 (x1567 x2143) (x5097 9) 0) x2036) (<= 0 x5326) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5326) (= x5326 (x4663 x2036)) (= x5190 (< x5326 x358))) (not x102)) (and (=> x5190 x878) (=> (and (not x5190) (and (= x3367 128) (= x4523 (> x358 x1234)) (<= 0 x1234) (<= x1234 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4663 x1988) x1234) (= x1988 (x476 (x1567 x2143) (x5097 9) 0)))) (and (=> x4523 x878) (=> (and (not x4523) (= x5632 (< x1234 x358))) (and (=> x5632 x878) (=> (and (not x5632) (and (<= 0 x747) (= (x980 (- x1234 x358)) x1292) (<= x747 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4131 x1894) x747) (= (x476 (x1567 x2143) (x5097 9) 0) x3626) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x358)) x3328) (= (< x3328 x747) x4280) (= x1894 (x476 (x1567 x3750) (x5097 9) 0)))) (and (=> x4280 x878) (=> (and (not x4280) (and (= (x4937 (+ x747 x358)) x4300) (= x2839 (> x747 x4300)))) (and (=> x2839 x878) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2142) (= (< x2142 x358) x5674) (= 192 x251) (= x1759 (x476 (x1567 x3931) x3105 0)) (= x2142 (x5159 x1759)) (>= x2142 0) (= (x476 (x1567 x3750) (x5097 9) 0) x2635) (= (x476 (x1567 x2143) (x5097 10) 0) x3105)) (not x2839)) (and (=> x5674 x878) (=> (and (= (> x358 x2142) x2921) (not x5674)) (and (=> (and (and (= x6222 32) (= (x476 (x1567 x2143) (x5097 10) 0) x2012) (= (x476 (x1567 x3931) x2012 0) x6128) (= x5557 1) (= x1869 (x980 (- x2142 x358)))) (not x2921)) x4694) (=> x2921 x878))))))))))))))) (=> x102 x878))) (=> x1808 x878))))))) (=> (not x667) x878))) (=> (not x1890) x878))))))))) (=> x6184 x878))))))) (=> x842 x4800))) (=> (not x5162) x4800))))) (=> (and (and (and (and (= x66 100) (= 3600075382 x1727) (= x1813 x1192) (= 97057840296441966410330255902201960138893160036366920885407767449525406400512 x1910) (= x66 x5756) (= x15 (x980 (- x66 4))) (< 0 x5138) (not (< x66 4)) (= x5138 (x2549 (x1567 x717))) (= x3329 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x15) (and (< x15 96) (= (<= x15 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))))) x2017) (= x2017 (= x1088 x717))) (not x1000)) (and (=> (and (not x3329) (and (= (x350 1461501637330902918203684832716283019655932542975 x1192) x139) (= x1398 (= x1192 x139)))) (and (=> (and x1398 (and (< x4756 256) (>= 255 x4756) (>= x4756 0) (= x927 (= 255 x4756)))) (and (=> (and (not x927) (and (= x6294 (x476 (x1567 x4756) (x5097 4) 0)) (= x6099 (x4937 (+ 1 x4756))) (>= x3747 0) (= (= x3747 0) x1898) (= x604 (x350 255 x6099)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3747) (= x3747 (x2429 x6294)) (= x2712 (x350 255 x6099)))) (and (=> (and (= x6146 (= x3747 1)) (not x1898)) (and (=> (and (and (= x810 (= 255 x604)) (< x2426 1461501637330902918203684832716283019655932542976) (>= x2426 0) (<= 0 x604) (>= 1461501637330902918203684832716283019655932542975 x2426) (>= 255 x604)) x6146) (and (=> (and (not x810) (and (>= x3601 0) (= x3621 (x476 (x1567 x604) (x5097 2) 0)) (= x5663 (= x3601 255)) (>= 1461501637330902918203684832716283019655932542975 x2741) (>= 255 x3601) (= x3601 (x350 255 x5600)) (<= 0 x2741) (= x2741 (x2834 x3621)) (= (x4937 (+ x604 1)) x5600) (> 1461501637330902918203684832716283019655932542976 x2741))) (and (=> x5663 x2633) (=> (and (and (= x3473 (x350 255 x3064)) (<= x5566 1461501637330902918203684832716283019655932542975) (= (= x3473 255) x1423) (>= 255 x3473) (= x1915 (x476 (x1567 x3601) (x5097 2) 0)) (= (x4937 (+ x3601 1)) x3064) (<= 0 x3473) (= (x2834 x1915) x5566) (< x5566 1461501637330902918203684832716283019655932542976) (<= 0 x5566)) (not x5663)) (and (=> x1423 x2633) (=> (and (not x1423) (and (= x5648 (x476 (x1567 x3473) (x5097 4) 0)) (= x3172 (x2549 (x1567 x2426))) (<= x3502 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1237 (x350 255 x4535)) (>= x3502 0) (= x682 128) (= (= 0 x3172) x5926) (= x3502 (x2429 x5648)) (= (x4937 (+ 1 x3473)) x4535))) (and (=> (and (= x3314 (= x2426 x2417)) (not x5926)) (and (=> (and (and (= (x980 (- x2873 4)) x2822) (= x380 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (< x2873 4)) (< x6321 669136355) (= x997 (or (and (= (<= x2822 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2822 96)) (> x2822 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 100 x2873) (= x6321 599290589) (= 100 x2873) (> 1889567281 x6321) (not (< x6321 248222656)) (not (= 404098525 x6321)) (= (x2549 (x1567 x2417)) x4708) (not (= x6321 248222656)) (= x5566 x432) (= x3502 x2378) (> x4708 0) (= x1908 x2741)) x3314) (and (=> x997 x5496) (=> (and (= (= x1908 x2741) x4685) (not x997)) (and (=> (not x4685) x5496) (=> (and x4685 (= (= x432 x5566) x3490)) (and (=> (and x3490 (and (>= 255 x5349) (= x2378 x859) (= (= x5349 0) x2127) (>= x5349 0) (< x5349 256))) (and (=> (not x2127) x5496) (=> (and (and (= x1780 (= x1315 0)) (= x4774 (x476 (x1567 x2741) (x5097 6) 0)) (<= 0 x1315) (= x1315 (x5340 x4774)) (> 256 x1315) (>= 255 x1315)) x2127) (and (=> (and x1780 (= x4425 (> 100 x2873))) (and (=> x4425 x5496) (=> (and (not x4425) (and (>= x6264 0) (= (x476 (x1567 x717) x708 0) x6034) (<= 0 x3043) (= (x2596 x6034) x6264) (<= x3043 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5272 10000) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6264) (= (x476 (x1567 x2741) (x5097 5) 0) x708) (= (= x2378 0) x800))) (and (=> (and (= 0 x5614) x800) x2671) (=> (and (not x800) (and (= (x1849 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2378) x87) (= x1638 (ite (not x3736) 1 0)) (= x235 (ite (< x87 x3043) 1 0)) (= x3736 (= 0 x859)) (= (= 0 x4996) x2134) (= (x350 x1638 x235) x4996))) (and (=> (and (and (= x4943 (x2154 (x423 x2378 x3043))) (= (< (x423 x2378 x3043) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x305)) x2134) (and (=> (and x305 (= x5614 x4943)) x2671) (=> (not x305) x5496))) (=> (not x2134) x5496))))))) (=> (not x1780) x5496))))) (=> (not x3490) x5496))))))) (=> (and (not x3314) (= (= x2426 x5713) x391)) (and (=> (and x391 (and (not (= x5726 404098525)) (not (= 117300739 x5726)) (= x192 100) (= x3936 (x2549 (x1567 x5713))) (= x5726 599290589) (= 100 x192) (not (< x192 4)) (not (= x5726 157198259)) (not (= 445207142 x5726)) (> 903454517 x5726) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1205) (= (or (and (> 96 x2326) (= true (<= x2326 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2326)) x4872) (= x2033 x2741) (= x2326 (x980 (- x192 4))) (= x2284 x5566) (< x5726 716570693) (= x3332 x3502) (< 0 x3936) (> 2127478272 x5726))) (and (=> (and (not x4872) (= x65 (= x2741 x2033))) (and (=> (not x65) x1201) (=> (and (= (= x5566 x2284) x3476) x65) (and (=> (and x3476 (and (> 256 x3269) (= x3332 x837) (<= 0 x3269) (= x57 (= x3269 0)) (>= 255 x3269))) (and (=> (not x57) x1201) (=> (and x57 (and (= (= 0 x5703) x2971) (> 256 x5703) (>= x5703 0) (= x5703 (x3271 x134)) (= x134 (x476 (x1567 x717) (x5097 3) 0)) (>= 255 x5703))) (and (=> (and (and (= x5649 (x3271 x6232)) (< x5649 256) (= x6232 (x476 (x1567 x2741) (x5097 3) 0)) (<= 0 x5649) (= x5765 (= x5649 0)) (>= 255 x5649)) x2971) (and (=> (and x5765 (and (= x5594 (= x4747 0)) (<= x4747 255) (< x4747 256) (= (x3271 x5747) x4747) (= (x476 (x1567 x5566) (x5097 3) 0) x5747) (>= x4747 0))) (and (=> (not x5594) x1201) (=> (and (and (= x1544 (x476 (x1567 x717) x4028 0)) (<= x5486 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x5486 0) (= x4028 (x476 (x1567 x2741) (x5097 10) 0)) (= x5043 (> x3332 x5486)) (= (x5159 x1544) x5486)) x5594) (and (=> x5043 x1201) (=> (and (= (= 0 x2741) x4516) (not x5043)) (and (=> (and (= (= x5566 0) x5848) (not x4516)) (and (=> (and (and (= x3421 (< x416 x3332)) (<= x416 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4663 x6147) x416) (= x6147 (x476 (x1567 x2741) (x5097 9) 0)) (<= 0 x416)) (not x5848)) (and (=> x3421 x1201) (=> (and (not x3421) (and (= x2652 (x4663 x5888)) (>= x2652 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2652) (= (< x2652 x3332) x3563) (= (x476 (x1567 x2741) (x5097 9) 0) x5888) (= 128 x1677))) (and (=> (and (= (< x2652 x3332) x3022) (not x3563)) (and (=> x3022 x1201) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1372) (= x3403 (x476 (x1567 x2741) (x5097 9) 0)) (= (x3199 x4184) x1372) (= x1793 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3332))) (= x5782 (x980 (- x2652 x3332))) (= x3368 (> x1372 x1793)) (= (x476 (x1567 x5566) (x5097 9) 0) x4184) (<= 0 x1372)) (not x3022)) (and (=> (and (and (= (x4937 (+ x1372 x3332)) x3590) (= x3553 (< x3590 x1372))) (not x3368)) (and (=> x3553 x1201) (=> (and (and (= (x476 (x1567 x717) x6308 0) x52) (= x1083 (x476 (x1567 x5566) (x5097 9) 0)) (= x787 (x5159 x52)) (>= x787 0) (= x5241 192) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x787) (= x6308 (x476 (x1567 x2741) (x5097 10) 0)) (= x2592 (< x787 x3332))) (not x3553)) (and (=> (and (= (> x3332 x787) x3708) (not x2592)) (and (=> x3708 x1201) (=> (and (not x3708) (and (= x3028 32) (= x5994 (x980 (- x787 x3332))) (= (x476 (x1567 x717) x556 0) x223) (= x556 (x476 (x1567 x2741) (x5097 10) 0)) (= x853 1))) x6106))) (=> x2592 x1201))))) (=> x3368 x1201))))) (=> x3563 x1201))))) (=> x5848 x1201))) (=> x4516 x1201))))))) (=> (not x5765) x1201))) (=> (not x2971) x1201))))) (=> (not x3476) x1201))))) (=> x4872 x1201))) (=> (and (not x391) (= x4572 (= x5547 x2426))) (and (=> (and (= (= x4332 x2426) x3156) (not x4572)) (and (=> (and (and (< 0 x4673) (= x4726 (or (and (> 96 x1228) (= true (<= x1228 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1228))) (= (x2549 (x1567 x4332)) x4673) (= x3696 100) (= x3502 x3793) (not (= 404098525 x4678)) (= 599290589 x4678) (not (= 157198259 x4678)) (= x449 x5566) (> 2512374353 x4678) (= x1228 (x980 (- x3696 4))) (= x6341 x2741) (= x4428 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 4 x3696)) (= x3696 100) (> 953495055 x4678)) x3156) (and (=> x4726 x5516) (=> (and (not x4726) (= (= x2741 x6341) x1401)) (and (=> (and (= (= x5566 x449) x219) x1401) (and (=> (and (and (= x1616 (= x268 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (<= x268 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5995 x6179) x268) (= (x476 (x1567 x717) x1783 0) x6179) (= x1783 (x476 (x1567 x2741) (x5097 2) 0)) (<= 0 x268)) x219) (and (=> x1616 x1685) (=> (and (not x1616) (and (= x5331 (x476 (x1567 x717) x4015 0)) (= (> x3793 x693) x1468) (= (x5995 x5331) x693) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x693) (= (x476 (x1567 x2741) (x5097 2) 0) x4015) (>= x693 0))) (and (=> (and (not x1468) (= (x980 (- x693 x3793)) x5143)) x1685) (=> x1468 x5516))))) (=> (not x219) x5516))) (=> (not x1401) x5516))))) (=> (and (= (= x2020 x2426) x4340) (not x3156)) (and (=> (and (not x4340) (= (= x3267 x2426) x1208)) (and (=> (and x1208 (and (= x592 x2741) (not (= x6027 404098525)) (= x668 x5566) (= (or (and (> 96 x5652) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5652) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5652)) x666) (not (= x6027 157198259)) (= x5545 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x6309 100) (not (< x6309 4)) (< x6027 826074471) (= x3502 x1558) (not (= 117300739 x6027)) (= x6309 100) (< 0 x1665) (= x1665 (x2549 (x1567 x3267))) (= x5652 (x980 (- x6309 4))) (= 599290589 x6027))) (and (=> (and (= x6077 (= x2741 x592)) (not x666)) (and (=> (not x6077) x142) (=> (and (= x5728 (= x5566 x668)) x6077) (and (=> (not x5728) x142) (=> (and (and (= x1558 x3003) (= (= 0 x5566) x2349)) x5728) (and (=> x2349 x142) (=> (and (and (= (x476 (x1567 x2741) (x5097 1) 0) x2387) (= (x417 x2387) x5844) (= x624 (< x5844 x1558)) (<= x5844 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x5844)) (not x2349)) (and (=> (and (and (= x5564 (< x367 x1558)) (>= x367 0) (= x367 (x400 x1655)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x367) (= x4334 (x476 (x1567 x2741) (x5097 2) 0)) (= x1655 (x476 (x1567 x717) x4334 0))) (not x624)) (and (=> (and (not x5564) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x435) (= x435 (x417 x3048)) (>= x435 0) (= (x476 (x1567 x2741) (x5097 1) 0) x3048) (= x1859 (> x1558 x435)))) (and (=> (and (and (= (> x1558 x1296) x6071) (= x379 (x980 (- x435 x1558))) (<= 0 x1296) (<= x1296 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x476 (x1567 x2741) (x5097 2) 0) x4548) (= x5285 (x476 (x1567 x2741) (x5097 1) 0)) (= x4323 (x476 (x1567 x717) x4548 0)) (= (x400 x4323) x1296)) (not x1859)) (and (=> x6071 x142) (=> (and (and (= x1196 (x476 (x1567 x5566) (x5097 1) 0)) (<= x6002 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x6002 (x5042 x1196)) (= (x980 (- x1296 x1558)) x4790) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1558)) x627) (>= x6002 0) (= (x476 (x1567 x2741) (x5097 2) 0) x372) (= x5583 (x476 (x1567 x717) x372 0)) (= (< x627 x6002) x3391)) (not x6071)) (and (=> (and (and (= (x4937 (+ x1558 x6002)) x2232) (= (x5183 128) x107) (= x4995 1) (= (x476 (x1567 x5566) (x5097 1) 0) x5565) (= x3088 32) (= 1 x3579)) (not x3391)) x4422) (=> x3391 x142))))) (=> x1859 x142))) (=> x5564 x142))) (=> x624 x142))))))))) (=> x666 x142))) (=> (and (not x1208) (= (= x2280 x2426) x4990)) (and (=> (and (and (= x6196 599290589) (= (x980 (- x3366 4)) x1818) (= x3366 100) (= x3366 100) (not (= 117300739 x6196)) (not (> 4 x3366)) (= x3502 x4612) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1818) (and (< x1818 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1818) true))) x5494) (not (= x6196 404098525)) (= x2741 x5784) (< x6196 826074471) (= x6221 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< 0 x3970) (not (= 157198259 x6196)) (= x3970 (x2549 (x1567 x2280))) (= x5566 x3806)) x4990) (and (=> x5494 x3266) (=> (and (= (= x2741 x5784) x1722) (not x5494)) (and (=> (not x1722) x3266) (=> (and x1722 (= x69 (= x5566 x3806))) (and (=> (not x69) x3266) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1259) (= (> x3502 x1259) x3829) (= x4612 x5318) (= x1259 (x187 x2864)) (>= x1259 0) (= x2864 (x476 (x1567 x2741) (x5097 1) 0))) x69) (and (=> x3829 x3266) (=> (and (not x3829) (= (< x1259 x4612) x2775)) (and (=> (and (not x2775) (and (>= x5379 0) (= x5415 (x476 (x1567 x2741) (x5097 1) 0)) (= (x3152 x4791) x5379) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5379) (= x2858 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4612))) (= x1763 (< x2858 x5379)) (= x231 (x980 (- x1259 x4612))) (= x4791 (x476 (x1567 x5566) (x5097 1) 0)))) (and (=> x1763 x3266) (=> (and (and (= x1798 (< x2680 x5379)) (= x2680 (x4937 (+ x5379 x4612)))) (not x1763)) (and (=> (and (and (= (> x4612 x6213) x1034) (= (x476 (x1567 x5566) (x5097 1) 0) x1143) (= x6213 (x1756 x4819)) (<= x6213 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x6213 0) (= (x476 (x1567 x717) x1099 0) x4819) (= (x476 (x1567 x2741) (x5097 2) 0) x1099)) (not x1798)) (and (=> x1034 x3266) (=> (and (= (> x4612 x6213) x179) (not x1034)) (and (=> x179 x3266) (=> (and (not x179) (and (= 1 x2391) (= x5523 (x980 (- x6213 x4612))) (= x3263 (x476 (x1567 x717) x933 0)) (= 32 x6000) (= x933 (x476 (x1567 x2741) (x5097 2) 0)))) x6001))))) (=> x1798 x3266))))) (=> x2775 x3266))))))))))) (=> (and (not x4990) (= x3877 (= x2426 x3247))) (and (=> (and x3877 (and (= (x2549 (x1567 x3247)) x1936) (not (= x664 157198259)) (= x4292 x5566) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3648) (= x6293 x3502) (= x2504 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1363)) (< x1363 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1363))) (= 100 x4609) (not (= 117300739 x664)) (> x1936 0) (= x664 599290589) (= (x980 (- x4609 4)) x1363) (= x1775 x2741) (= x4609 100) (not (> 4 x4609)) (> 826074471 x664) (not (= 404098525 x664)))) (and (=> x2504 x5073) (=> (and (= x4681 (= x2741 x1775)) (not x2504)) (and (=> (and (= (= x5566 x4292) x2334) x4681) (and (=> (not x2334) x5073) (=> (and (and (= x3058 (> x3502 x6235)) (<= x6235 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x6235 0) (= x55 x6293) (= (x4873 x2098) x6235) (= x2098 (x476 (x1567 x2741) (x5097 1) 0))) x2334) (and (=> (and (not x3058) (= (< x6235 x6293) x3853)) (and (=> x3853 x5073) (=> (and (not x3853) (and (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6293)) x5733) (= x738 (x980 (- x6235 x6293))) (>= x2309 0) (= (x856 x2986) x2309) (<= x2309 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x5733 x2309) x1629) (= x2986 (x476 (x1567 x5566) (x5097 1) 0)) (= (x476 (x1567 x2741) (x5097 1) 0) x973))) (and (=> x1629 x5073) (=> (and (and (= x1960 (< x2806 x2309)) (= (x4937 (+ x6293 x2309)) x2806)) (not x1629)) (and (=> (and (and (= (x5872 x2393) x3460) (= x5950 (x476 (x1567 x2741) (x5097 2) 0)) (>= x3460 0) (= (x476 (x1567 x5566) (x5097 1) 0) x3121) (= x2809 (< x3460 x6293)) (= x2393 (x476 (x1567 x717) x5950 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3460)) (not x1960)) (and (=> x2809 x5073) (=> (and (= x2369 (> x6293 x3460)) (not x2809)) (and (=> x2369 x5073) (=> (and (and (= x3024 (x476 (x1567 x2741) (x5097 2) 0)) (= x409 (x980 (- x3460 x6293))) (= (x476 (x1567 x717) x3024 0) x4987) (= x4374 32) (= x3220 1)) (not x2369)) x4291))))) (=> x1960 x5073))))))) (=> x3058 x5073))))) (=> (not x4681) x5073))))) (=> (and (= x1120 (= x5771 x2426)) (not x3877)) (and (=> (and (= (= x2426 x462) x2737) (not x1120)) (and (=> (and (and (and x3879 (and (= x2005 x2741) (not (> 4 x602)) (< 0 x1896) (= x5566 x1250) (not (= 157198259 x3833)) (= (x2549 (x1567 x5205)) x1896) (= x602 100) (not (= 404098525 x3833)) (= x3502 x4623) (= x3833 599290589) (= x3834 (x980 (- x602 4))) (= x602 100) (= x4393 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (or (> x3834 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x3834 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3834 96))) x3610))) (= x3879 (= x2426 x5205))) (not x2737)) (and (=> (and (not x3610) (= (= x2005 x2741) x1155)) (and (=> (not x1155) x2186) (=> (and x1155 (= x4912 (= x1250 x5566))) (and (=> (not x4912) x2186) (=> (and x4912 (and (= x125 (x5198 x5155)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x125) (>= x125 0) (= x897 (x476 (x1567 x2741) (x5097 2) 0)) (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x125) x5606) (= (x476 (x1567 x717) x897 0) x5155))) (and (=> x5606 x86) (=> (and (and (= (x476 (x1567 x717) x3074 0) x16) (= x3074 (x476 (x1567 x2741) (x5097 2) 0)) (= x3126 (x5198 x16)) (= (< x3126 x4623) x3992) (<= 0 x3126) (<= x3126 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x5606)) (and (=> x3992 x2186) (=> (and (not x3992) (= x5957 (x980 (- x3126 x4623)))) x86))))))))) (=> x3610 x2186))) (=> (and x2737 (and (= x2551 x3502) (< x3373 826074471) (not (= x3373 117300739)) (= x5395 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 4 x4948)) (not (= x3373 157198259)) (= x2741 x6123) (= 100 x4948) (= x2231 (x980 (- x4948 4))) (= 100 x4948) (= x2559 x5566) (= (x2549 (x1567 x462)) x544) (= x5465 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2231) (and (> 96 x2231) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2231))))) (not (= x3373 404098525)) (= 599290589 x3373) (> x544 0))) (and (=> (and (not x5465) (= x801 (= x2741 x6123))) (and (=> (not x801) x2629) (=> (and (= (= x2559 x5566) x1755) x801) (and (=> (and (and (= x4780 (x597 x5001)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4780) (= x5001 (x476 (x1567 x2741) (x5097 1) 0)) (= (> x3502 x4780) x2721) (>= x4780 0) (= x2551 x4165)) x1755) (and (=> x2721 x2629) (=> (and (= (> x2551 x4780) x3947) (not x2721)) (and (=> (and (not x3947) (and (= x3009 (x1851 x3104)) (= x824 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2551))) (>= x3009 0) (= x4378 (< x824 x3009)) (<= x3009 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x476 (x1567 x5566) (x5097 1) 0) x3104) (= (x476 (x1567 x2741) (x5097 1) 0) x3458) (= (x980 (- x4780 x2551)) x1114))) (and (=> x4378 x2629) (=> (and (not x4378) (and (= (> x3009 x2011) x5577) (= (x4937 (+ x2551 x3009)) x2011))) (and (=> (and (and (= x5119 (x476 (x1567 x5566) (x5097 1) 0)) (= x1416 (x476 (x1567 x717) x4849 0)) (= x573 (> x2551 x373)) (= (x128 x1416) x373) (>= x373 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x373) (= x4849 (x476 (x1567 x2741) (x5097 2) 0))) (not x5577)) (and (=> (and (not x573) (= (< x373 x2551) x3281)) (and (=> (and (not x3281) (and (= x1447 (x980 (- x373 x2551))) (= x1619 1) (= x6122 32) (= x3420 (x476 (x1567 x717) x177 0)) (= x177 (x476 (x1567 x2741) (x5097 2) 0)))) x4311) (=> x3281 x2629))) (=> x573 x2629))) (=> x5577 x2629))))) (=> x3947 x2629))))) (=> (not x1755) x2629))))) (=> x5465 x2629))))) (=> (and (and (= (x2549 (x1567 x5771)) x6111) (= x5297 x3502) (= x5012 (x980 (- x2800 4))) (not (> 4 x2800)) (= x2800 100) (= x4518 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5012) (and (> 96 x5012) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5012) true)))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4360) (> 826074471 x2283) (< 0 x6111) (not (= 404098525 x2283)) (= 100 x2800) (not (= 117300739 x2283)) (= x2741 x5234) (= x5566 x1624) (not (= 157198259 x2283)) (= 599290589 x2283)) x1120) (and (=> x4518 x5061) (=> (and (not x4518) (= (= x5234 x2741) x5311)) (and (=> (not x5311) x5061) (=> (and (= (= x5566 x1624) x6090) x5311) (and (=> (not x6090) x5061) (=> (and x6090 (and (<= x3029 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4799 (< x3029 x3502)) (>= x3029 0) (= (x614 x455) x3029) (= x243 x5297) (= x455 (x476 (x1567 x2741) (x5097 1) 0)))) (and (=> x4799 x5061) (=> (and (not x4799) (= (> x5297 x3029) x2666)) (and (=> x2666 x5061) (=> (and (not x2666) (and (= x94 (x1817 x3240)) (= (x980 (- x3029 x5297)) x4775) (>= x94 0) (= x970 (< x4947 x94)) (= (x476 (x1567 x5566) (x5097 1) 0) x3240) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x94) (= (x476 (x1567 x2741) (x5097 1) 0) x4247) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5297)) x4947))) (and (=> x970 x5061) (=> (and (not x970) (and (= (< x4804 x94) x1374) (= x4804 (x4937 (+ x94 x5297))))) (and (=> x1374 x5061) (=> (and (and (= x2704 (< x4190 x5297)) (= x822 (x476 (x1567 x717) x14 0)) (>= x4190 0) (= (x476 (x1567 x2741) (x5097 2) 0) x14) (= (x476 (x1567 x5566) (x5097 1) 0) x688) (= (x366 x822) x4190) (<= x4190 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1374)) (and (=> x2704 x5061) (=> (and (= (< x4190 x5297) x2443) (not x2704)) (and (=> x2443 x5061) (=> (and (and (= 32 x2099) (= 1 x2382) (= x5998 (x476 (x1567 x717) x5550 0)) (= x5550 (x476 (x1567 x2741) (x5097 2) 0)) (= x3002 (x980 (- x4190 x5297)))) (not x2443)) x1023))))))))))))))))))))))))))) (=> (and x4340 (and (not (= 157198259 x3655)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x598) (= 100 x3987) (= x4469 (or (and (> 96 x546) (= (<= x546 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x546 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> 1117154408 x3655) (= x3502 x2362) (= x327 x5566) (< 0 x1795) (= x4705 x2741) (= 100 x3987) (= x3655 599290589) (= (x2549 (x1567 x2020)) x1795) (not (= x3655 404098525)) (= x546 (x980 (- x3987 4))) (not (= x3655 117300739)) (not (< x3987 4)))) (and (=> (and (= (= x4705 x2741) x4749) (not x4469)) (and (=> (not x4749) x5611) (=> (and (= x448 (= x5566 x327)) x4749) (and (=> (not x448) x5611) (=> (and (and (= (= 0 x5566) x81) (= x1065 x2362)) x448) (and (=> x81 x5611) (=> (and (not x81) (and (= x4343 (x476 (x1567 x2741) (x5097 0) 0)) (= (x1358 x4343) x3815) (= (> x2362 x3815) x887) (<= x3815 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3815))) (and (=> x887 x5611) (=> (and (= x211 (> x2362 x3815)) (not x887)) (and (=> x211 x5611) (=> (and (not x211) (and (= (x476 (x1567 x5566) (x5097 0) 0) x4564) (= x5885 (x2272 x4564)) (>= x5885 0) (= (x476 (x1567 x2741) (x5097 0) 0) x3863) (= (x980 (- x3815 x2362)) x6301) (= x3327 (< x6167 x5885)) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2362)) x6167) (<= x5885 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (= x2961 (< x259 x5885)) (= x259 (x4937 (+ x2362 x5885)))) (not x3327)) (and (=> (and (not x2961) (and (>= x1573 0) (= (> x2362 x1573) x5176) (= (x476 (x1567 x5566) (x5097 0) 0) x2867) (= (x476 (x1567 x717) x6048 0) x3326) (<= x1573 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x476 (x1567 x2741) (x5097 1) 0) x6048) (= x1573 (x3613 x3326)))) (and (=> x5176 x5611) (=> (and (= x3549 (> x2362 x1573)) (not x5176)) (and (=> (and (and (= x5350 (x980 (- x1573 x2362))) (= x644 (= x717 0))) (not x3549)) (and (=> (and (= x4342 (= 0 x2741)) (not x644)) (and (=> (and (and (= x936 1) (= 1 x5535) (= x3928 (x476 (x1567 x2741) (x5097 1) 0)) (= (x6287 128) x393) (= x1831 (x476 (x1567 x717) x3928 0)) (= x4045 32)) (not x4342)) x2830) (=> x4342 x5611))) (=> x644 x5611))) (=> x3549 x5611))))) (=> x2961 x5611))) (=> x3327 x5611))))))))))))) (=> x4469 x5611))))))) (=> (and x4572 (and (> 961581905 x4361) (not (> 4 x201)) (= (x2549 (x1567 x5547)) x2291) (not (= 543189872 x4361)) (= x4546 (or (and (> 96 x6251) (= true (<= x6251 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6251))) (= x6251 (x980 (- x201 4))) (> 1901074598 x4361) (= x4319 x3502) (= x201 100) (= x201 100) (not (= x4361 157198259)) (not (= x4361 117300739)) (< 0 x2291) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x5561) (= x4361 599290589) (not (= 404098525 x4361)) (= x550 x2741) (= x5566 x3702))) (and (=> (and (= x4679 (= x2741 x550)) (not x4546)) (and (=> (not x4679) x1954) (=> (and (= x1949 (= x3702 x5566)) x4679) (and (=> (not x1949) x1954) (=> (and (and (= (= x2741 0) x3521) (= x6217 x4319)) x1949) (and (=> x3521 x1954) (=> (and (not x3521) (= (= x5566 0) x3118)) (and (=> (and (and (= (> x4319 x2121) x137) (= (x5142 x940) x2121) (= x940 (x476 (x1567 x2741) (x5097 0) 0)) (= 128 x3133) (>= x2121 0) (<= x2121 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x3118)) (and (=> (and (= x1512 (< x2121 x4319)) (not x137)) (and (=> x1512 x1954) (=> (and (not x1512) (and (<= 0 x4139) (= (> x4139 x2842) x4231) (= x3166 (x980 (- x2121 x4319))) (= x4139 (x4386 x816)) (= (x476 (x1567 x2741) (x5097 0) 0) x303) (= x2842 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4319))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4139) (= (x476 (x1567 x5566) (x5097 0) 0) x816))) (and (=> (and (not x4231) (and (= (x4937 (+ x4319 x4139)) x2064) (= (> x4139 x2064) x882))) (and (=> (and (not x882) (and (= x229 (x476 (x1567 x2741) (x5097 1) 0)) (<= 0 x3081) (= (x5111 x2400) x3081) (= (< x3081 x4319) x3276) (= (x476 (x1567 x717) x229 0) x2400) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3081) (= 224 x1815) (= x3737 (x476 (x1567 x5566) (x5097 0) 0)))) (and (=> x3276 x1954) (=> (and (= x3127 (< x3081 x4319)) (not x3276)) (and (=> (and (and (= (x980 (- x3081 x4319)) x6060) (= x5646 (= x2741 0))) (not x3127)) (and (=> (and (= (= x717 0) x1128) (not x5646)) (and (=> (and (and (= x3575 1) (= (x476 (x1567 x2741) (x5097 1) 0) x5634) (= x1791 1) (= x5879 32) (= x885 (x476 (x1567 x717) x5634 0))) (not x1128)) x5840) (=> x1128 x1954))) (=> x5646 x1954))) (=> x3127 x1954))))) (=> x882 x1954))) (=> x4231 x1954))))) (=> x137 x1954))) (=> x3118 x1954))))))))) (=> x4546 x1954))))))))) (=> x5926 x2633))))))) (=> x810 x2633))) (=> (and (not x6146) (= (= 2 x3747) x2210)) (and (=> (and (not x2210) (= x1016 (= 3 x3747))) (and (=> (and (= x1602 (= x3747 4)) (not x1016)) (and (=> (and x1602 (and (>= x604 0) (= x6158 (= 255 x604)) (>= 1461501637330902918203684832716283019655932542975 x2426) (< x2426 1461501637330902918203684832716283019655932542976) (>= x2426 0) (>= 255 x604))) (and (=> x6158 x2633) (=> (and (not x6158) (and (= x5621 (x350 255 x4357)) (>= x3881 0) (<= x3881 1461501637330902918203684832716283019655932542975) (= x3798 (x476 (x1567 x604) (x5097 2) 0)) (= (x4937 (+ x604 1)) x4357) (< x3881 1461501637330902918203684832716283019655932542976) (<= 0 x5621) (= (= x5621 255) x782) (>= 255 x5621) (= (x2834 x3798) x3881))) (and (=> (and (and (= (x476 (x1567 x5621) (x5097 4) 0) x2065) (= (x2549 (x1567 x2426)) x5206) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x648) (= (x350 255 x2384) x4416) (>= x648 0) (= x2384 (x4937 (+ 1 x5621))) (= (= 0 x5206) x960) (= (x2429 x2065) x648) (= 128 x376)) (not x782)) (and (=> (and (not x960) (= (= x2426 x2417) x1872)) (and (=> (and (= x1794 (= x5713 x2426)) (not x1872)) (and (=> (and (and (= x4130 (x2549 (x1567 x5713))) (< x5546 2127478272) (= (x980 (- x5718 4)) x4125) (= (or (> x4125 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x4125 64) (= (<= x4125 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x2556) (< x5546 716570693) (= x392 x648) (= x5718 68) (= x5546 157198259) (not (= 117300739 x5546)) (< x5546 903454517) (= x3881 x3734) (= x5718 68) (not (< x5718 4)) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x3207) (< 0 x4130)) x1794) (and (=> (and (not x2556) (= (= x3734 x3881) x3359)) (and (=> (not x3359) x2959) (=> (and x3359 (and (= x6129 (= 0 x3269)) (> 256 x3269) (<= 0 x3269) (= x392 x2356) (>= 255 x3269))) (and (=> (and (and (<= x3991 255) (<= 0 x3991) (= (= x3991 0) x3045) (= (x3271 x5683) x3991) (< x3991 256) (= (x476 (x1567 x717) (x5097 3) 0) x5683)) x6129) (and (=> (and (and (= (x3271 x572) x217) (>= x217 0) (= x572 (x476 (x1567 x3881) (x5097 3) 0)) (= x2601 (= x217 0)) (>= 255 x217) (> 256 x217)) x3045) (and (=> (and (= (= 0 x717) x77) x2601) (and (=> x77 x2959) (=> (and (= x4746 (= x3881 0)) (not x77)) (and (=> x4746 x2959) (=> (and (not x4746) (and (= x2999 32) (= (x476 (x1567 x3881) x1284 0) x5429) (= x284 1) (= x6016 (x2117 128)) (= (x476 (x1567 x717) (x5097 10) 0) x1284))) x1027))))) (=> (not x2601) x2959))) (=> (not x3045) x2959))) (=> (not x6129) x2959))))) (=> x2556 x2959))) (=> (and (not x1794) (= x4294 (= x5547 x2426))) (and (=> (and x4294 (and (< x5977 961581905) (= x3653 x3881) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x479)) (> 64 x479)) (> x479 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x6058) (= x4783 68) (= x4783 68) (not (< x4783 4)) (= x178 x648) (= (x980 (- x4783 4)) x479) (< x5977 1901074598) (< 0 x3486) (= x3486 (x2549 (x1567 x5547))) (= x5453 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= x5977 157198259) (not (= x5977 117300739)))) (and (=> x6058 x2205) (=> (and (= (= x3881 x3653) x2483) (not x6058)) (and (=> (not x2483) x2205) (=> (and (and (= x4766 (= x717 0)) (= x178 x2084)) x2483) (and (=> (and (= x4806 (= x3881 0)) (not x4766)) (and (=> x4806 x2205) (=> (and (and (= x1885 32) (= x4414 (x476 (x1567 x3881) x4284 0)) (= 1 x5110) (= x4284 (x476 (x1567 x717) (x5097 1) 0)) (= x1998 1) (= (x2653 128) x4359)) (not x4806)) x1991))) (=> x4766 x2205))))))) (=> (and (= x1137 (= x2426 x4332)) (not x4294)) (and (=> (and (and (= x1895 68) (= x4232 (or (and (> 64 x5499) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5499) true)) (> x5499 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 68 x1895) (= x5499 (x980 (- x1895 4))) (= x1718 x648) (= x3881 x6047) (not (< x1895 4)) (= x5962 (x2549 (x1567 x4332))) (= x5086 157198259) (> x5962 0) (< x5086 953495055) (< x5086 2512374353) (= x3453 4238056678808933066457772256406219440718756300954938350892797929791311314944)) x1137) (and (=> x4232 x575) (=> (and (= (= x6047 x3881) x2725) (not x4232)) (and (=> (and (and (= x2753 x1718) (= (x476 (x1567 x717) (x5097 2) 0) x1387) (= x4964 32) (= x1888 (x476 (x1567 x3881) x1387 0)) (= x2982 1)) x2725) x794) (=> (not x2725) x575))))) (=> (and (= x1773 (= x2426 x2020)) (not x1137)) (and (=> (and (not x1773) (= (= x3267 x2426) x912)) (and (=> (and (not x912) (= x287 (= x2426 x2280))) (and (=> (and (and (= x6135 x648) (= (x2549 (x1567 x2280)) x3981) (= x761 157198259) (not (= x761 117300739)) (not (> 4 x5274)) (> x3981 0) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x2162) (= x6318 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1571) (and (= (<= x1571 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1571)))) (> 826074471 x761) (= x1571 (x980 (- x5274 4))) (= x527 x3881) (= 68 x5274) (= 68 x5274)) x287) (and (=> (and (not x6318) (= x1442 (= x527 x3881))) (and (=> (not x1442) x3087) (=> (and (and (= 32 x4434) (= x6135 x1338) (= 1 x4265) (= (x476 (x1567 x717) (x5097 2) 0) x2460) (= x5405 (x476 (x1567 x3881) x2460 0))) x1442) x2501))) (=> x6318 x3087))) (=> (and (not x287) (= (= x2426 x3247) x1463)) (and (=> (and (not x1463) (= (= x5771 x2426) x2181)) (and (=> (and (not x2181) (= x2066 (= x2426 x462))) (and (=> (and (and (= x1413 (= x5205 x2426)) (and (and (= x186 (x980 (- x1321 4))) (= 68 x1321) (= x6045 (or (and (> 64 x186) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x186) true)) (> x186 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1321 68) (= x2113 x3881) (= x2766 x648) (= x5615 (x2549 (x1567 x5205))) (> x5615 0) (not (> 4 x1321)) (= x5296 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= 157198259 x5537)) x1413)) (not x2066)) (and (=> (and (not x6045) (= (= x3881 x2113) x3052)) (and (=> (not x3052) x2851) (=> (and x3052 (and (= x5498 1) (= 32 x838) (= x5440 x2766) (= (x476 (x1567 x717) (x5097 2) 0) x4894) (= x1008 (x476 (x1567 x3881) x4894 0)))) x3451))) (=> x6045 x2851))) (=> (and x2066 (and (= (x2549 (x1567 x462)) x5416) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x5050) (not (< x3410 4)) (< x5838 826074471) (= 68 x3410) (= 157198259 x5838) (= x3881 x5817) (= x5175 (x980 (- x3410 4))) (= 68 x3410) (= (or (and (= (<= x5175 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x5175 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5175)) x2740) (= x4187 x648) (not (= x5838 117300739)) (< 0 x5416))) (and (=> (and (= (= x5817 x3881) x6224) (not x2740)) (and (=> (and x6224 (and (= x1832 32) (= (x476 (x1567 x3881) x2534 0) x1290) (= 1 x726) (= x4771 x4187) (= (x476 (x1567 x717) (x5097 2) 0) x2534))) x5970) (=> (not x6224) x1041))) (=> x2740 x1041))))) (=> (and x2181 (and (= x4470 157198259) (not (> 4 x1911)) (= x648 x3886) (> 826074471 x4470) (= 68 x1911) (= (or (and (> 64 x2866) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2866))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2866)) x3356) (> x4796 0) (= x2928 x3881) (= x2866 (x980 (- x1911 4))) (not (= 117300739 x4470)) (= 68 x1911) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x3084) (= (x2549 (x1567 x5771)) x4796))) (and (=> x3356 x766) (=> (and (not x3356) (= (= x3881 x2928) x5562)) (and (=> (and (and (= x2418 1) (= x727 32) (= x3886 x3300) (= x4282 (x476 (x1567 x3881) x1032 0)) (= x1032 (x476 (x1567 x717) (x5097 2) 0))) x5562) x5292) (=> (not x5562) x766))))))) (=> (and x1463 (and (= 68 x331) (= 157198259 x100) (= 68 x331) (< x100 826074471) (= x3881 x6338) (= (x980 (- x331 4)) x3784) (= (x2549 (x1567 x3247)) x896) (= (or (and (= (<= x3784 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x3784)) (> x3784 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4337) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x2071) (not (> 4 x331)) (< 0 x896) (= x4402 x648) (not (= x100 117300739)))) (and (=> (and (= x4715 (= x6338 x3881)) (not x4337)) (and (=> (not x4715) x3096) (=> (and (and (= x2761 32) (= 1 x5114) (= x5305 x4402) (= x3910 (x476 (x1567 x3881) x5368 0)) (= (x476 (x1567 x717) (x5097 2) 0) x5368)) x4715) x2606))) (=> x4337 x3096))))))) (=> (and (and (= x4820 x3881) (not (< x2969 4)) (= x2969 68) (not (= x12 117300739)) (= (or (> x6063 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6063)) (> 64 x6063))) x1030) (= (x980 (- x2969 4)) x6063) (= x5252 x648) (= x3349 4238056678808933066457772256406219440718756300954938350892797929791311314944) (< 0 x3975) (= (x2549 (x1567 x3267)) x3975) (< x12 826074471) (= 68 x2969) (= 157198259 x12)) x912) (and (=> x1030 x3598) (=> (and (= (= x3881 x4820) x4065) (not x1030)) (and (=> (and x4065 (and (= x4810 x5252) (= x683 1) (= x2863 (x476 (x1567 x717) (x5097 2) 0)) (= 32 x2305) (= x2572 (x2149 128)) (= x4053 (x476 (x1567 x3881) x2863 0)) (= 1 x5766))) x3707) (=> (not x4065) x3598))))))) (=> (and x1773 (and (not (> 4 x1381)) (= x648 x1588) (> x1939 0) (= x1836 157198259) (not (= 117300739 x1836)) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x4481) (= x6339 x3881) (= (x2549 (x1567 x2020)) x1939) (= x1713 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5741) (and (> 64 x5741) (= true (<= x5741 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (< x1836 1117154408) (= x5741 (x980 (- x1381 4))) (= 68 x1381) (= x1381 68))) (and (=> (and (= (= x6339 x3881) x1151) (not x1713)) (and (=> (and (and (= x5174 x1588) (= x441 (= x3881 0))) x1151) (and (=> x441 x540) (=> (and (= x1534 (= x717 0)) (not x441)) (and (=> (and (not x1534) (and (= (x476 (x1567 x717) (x5097 1) 0) x4344) (= x1615 1) (= x5999 (x1280 128)) (= x1396 32) (= 1 x3547) (= x2860 (x476 (x1567 x3881) x4344 0)))) x5712) (=> x1534 x540))))) (=> (not x1151) x540))) (=> x1713 x540))))))))))) (=> (and x1872 (and (= x5163 68) (not (> 4 x5163)) (= x4733 157198259) (not (= x4733 122929932)) (= x5163 68) (= x3937 (x980 (- x5163 4))) (= (x2549 (x1567 x2417)) x5353) (= x648 x3859) (= x3603 x3881) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3937)) (> 64 x3937)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3937)) x2300) (> 1889567281 x4733) (< x4733 669136355) (not (= 117300739 x4733)) (< 0 x5353) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x5588) (< x4733 248222656))) (and (=> x2300 x2951) (=> (and (not x2300) (= x519 (= x3881 x3603))) (and (=> (not x519) x2951) (=> (and x519 (and (= (< x5163 68) x2799) (= x144 x3859))) (and (=> (and (= x2973 (> 68 x5163)) (not x2799)) (and (=> (and (and (= (not (= x144 0)) x1146) (or (and (and (= (= x5319 0) x2158) (<= x5319 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x5319 0) (= (x2596 x1507) x5319) (= x1507 (x476 (x1567 x3881) x4722 0)) (= (not x2158) x3205) (= (x476 (x1567 x717) (x5097 5) 0) x4722)) x1146) (and (not x1146) (= x3205 x1146)))) (not x2973)) x4278) (=> x2973 x2951))) (=> x2799 x2951))))))))) (=> x960 x2633))) (=> x782 x2633))))) (=> (not x1602) x565))) (=> (and (and (>= 255 x604) (<= 0 x604) (>= x2426 0) (< x2426 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x2426) (= (= 255 x604) x509)) x1016) (and (=> (and (not x509) (and (>= x4904 0) (>= x1705 0) (>= 1461501637330902918203684832716283019655932542975 x4904) (= x1705 (x350 255 x4059)) (= x4599 (= 255 x1705)) (= x4904 (x2834 x3270)) (= x4059 (x4937 (+ x604 1))) (< x4904 1461501637330902918203684832716283019655932542976) (>= 255 x1705) (= (x476 (x1567 x604) (x5097 2) 0) x3270))) (and (=> x4599 x2633) (=> (and (and (<= 0 x2073) (= (x4937 (+ 1 x1705)) x2678) (= (x2549 (x1567 x2426)) x3703) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2073) (= (x476 (x1567 x1705) (x5097 4) 0) x1777) (= (x350 255 x2678) x6299) (= (= x3703 0) x4217) (= x2056 128) (= (x2429 x1777) x2073)) (not x4599)) (and (=> (and (not x4217) (= (= x2426 x2417) x3706)) (and (=> (and x3706 (and (= x3872 (x2549 (x1567 x2417))) (= x3429 (or (and (< x1656 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1656))) (> x1656 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x1446 2514000705)) (< 0 x3872) (not (> 1889567281 x1446)) (not (< x2835 4)) (= x2073 x4398) (= x2835 68) (= 68 x2835) (not (< x1446 2514000705)) (= x1446 2835717307) (< x1446 3674237557) (= x1336 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x980 (- x2835 4)) x1656) (= x4904 x3110))) (and (=> (and (not x3429) (= (= x3110 x4904) x265)) (and (=> (not x265) x4355) (=> (and (and (= x3445 (= x5349 0)) (<= 0 x5349) (> 256 x5349) (<= x5349 255) (= x4398 x5427)) x265) (and (=> (and x3445 (and (= x4301 (x476 (x1567 x717) (x5097 6) 0)) (>= 255 x4903) (> 256 x4903) (= x4903 (x5340 x4301)) (= (= 0 x4903) x5337) (<= 0 x4903))) (and (=> (not x5337) x4355) (=> (and (= x1695 (> 68 x2835)) x5337) (and (=> (and (and (<= 0 x3043) (= 10000 x2869) (= x5232 (= 0 x4398)) (<= x3043 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1695)) (and (=> (and (and (= (ite (not x2100) 1 0) x915) (= (= x4040 0) x5172) (= (x350 x915 x4418) x4040) (= x4418 (ite (> x3043 x1651) 1 0)) (= (x1849 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4398) x1651) (= x2100 (= x5427 0))) (not x5232)) (and (=> (not x5172) x4355) (=> (and x5172 (and (= x5390 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x423 x4398 x3043))) (= x3406 (x2154 (x423 x4398 x3043))))) (and (=> (not x5390) x4355) (=> (and (= x4697 x3406) x5390) x5418))))) (=> (and (= 0 x4697) x5232) x5418))) (=> x1695 x4355))))) (=> (not x3445) x4355))))) (=> x3429 x4355))) (=> (and (= (= x2426 x5713) x5389) (not x3706)) (and (=> (and x5389 (and (= (x2549 (x1567 x5713)) x5051) (> x5051 0) (not (> 2681229421 x202)) (= (x980 (- x444 4)) x1517) (= x2073 x1377) (not (< x444 4)) (= x3943 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 2835717307 x202)) (= x202 2835717307) (= x6174 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1517) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1517) true) (< x1517 64)))) (= x4904 x1993) (> 2987494029 x202) (= 68 x444) (= 68 x444) (not (< x202 2127478272)))) (and (=> x6174 x4003) (=> (and (= (= x1993 x4904) x4511) (not x6174)) (and (=> (not x4511) x4003) (=> (and (and (< x3269 256) (<= 0 x3269) (>= 255 x3269) (= x2582 (= x3269 0)) (= x1377 x996)) x4511) (and (=> (not x2582) x4003) (=> (and x2582 (and (> 256 x311) (= (x476 (x1567 x717) (x5097 3) 0) x1408) (<= 0 x311) (= (x3271 x1408) x311) (>= 255 x311) (= (= x311 0) x2917))) (and (=> (and (and (= (x3271 x425) x798) (> 256 x798) (= (x476 (x1567 x4904) (x5097 3) 0) x425) (= (= 0 x798) x1001) (>= x798 0) (>= 255 x798)) x2917) (and (=> (and x1001 (= (= x717 0) x639)) (and (=> x639 x4003) (=> (and (= x5139 (= 0 x4904)) (not x639)) (and (=> x5139 x4003) (=> (and (and (= x180 (x476 (x1567 x717) (x5097 9) 0)) (<= x3545 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x1377 x3545) x5431) (>= x3545 0) (= x3545 (x4663 x180))) (not x5139)) (and (=> x5431 x4003) (=> (and (not x5431) (and (= (x476 (x1567 x717) (x5097 9) 0) x952) (= x697 (x4663 x952)) (= x167 128) (<= x697 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5691 (> x1377 x697)) (<= 0 x697))) (and (=> (and (not x5691) (= (> x1377 x697) x3818)) (and (=> x3818 x4003) (=> (and (not x3818) (and (>= x428 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x428) (= (x476 (x1567 x4904) (x5097 9) 0) x2575) (= (x1687 x2575) x428) (= (x980 (- x697 x1377)) x420) (= (< x6238 x428) x6226) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1377)) x6238) (= (x476 (x1567 x717) (x5097 9) 0) x5171))) (and (=> (and (and (= (< x3094 x428) x2524) (= x3094 (x4937 (+ x428 x1377)))) (not x6226)) (and (=> x2524 x4003) (=> (and (and (= x560 (x476 (x1567 x4904) (x5097 9) 0)) (= 1 x5824) (= x5530 32)) (not x2524)) x3627))) (=> x6226 x4003))))) (=> x5691 x4003))))))))) (=> (not x1001) x4003))) (=> (not x2917) x4003))))))))) (=> (and (= (= x5547 x2426) x2993) (not x5389)) (and (=> (and x2993 (and (not (< x1597 2835717307)) (= x3379 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x6368 x4904) (= (x980 (- x5894 4)) x1964) (= x1597 2835717307) (= x1326 x2073) (= 68 x5894) (= 68 x5894) (= x4690 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1964)) (< x1964 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1964))) (not (< x1597 1901074598)) (< 0 x1610) (not (< x5894 4)) (= (x2549 (x1567 x5547)) x1610) (< x1597 3714247998))) (and (=> (and (not x4690) (= x5323 (= x4904 x6368))) (and (=> (and (and (= x4589 x1326) (= x3319 (= 0 x717))) x5323) (and (=> (and (not x3319) (= (= x4904 0) x4719)) (and (=> x4719 x879) (=> (and (not x4719) (and (= x2717 (x5142 x5455)) (= (x476 (x1567 x717) (x5097 0) 0) x5455) (>= x2717 0) (= x6065 (> x1326 x2717)) (= x5737 128) (<= x2717 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x6065) (= x1892 (< x2717 x1326))) (and (=> (and (not x1892) (and (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1326)) x3900) (= x1599 (x476 (x1567 x717) (x5097 0) 0)) (>= x6177 0) (= x4017 (x476 (x1567 x4904) (x5097 0) 0)) (<= x6177 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x902 x4017) x6177) (= x1686 (< x3900 x6177)) (= x2626 (x980 (- x2717 x1326))))) (and (=> (and (and (= x1254 (x4937 (+ x1326 x6177))) (= x863 (< x1254 x6177))) (not x1686)) (and (=> x863 x879) (=> (and (and (= x3288 32) (= x2029 1) (= (x476 (x1567 x4904) (x5097 0) 0) x5448) (= x503 1)) (not x863)) x3402))) (=> x1686 x879))) (=> x1892 x879))) (=> x6065 x879))))) (=> x3319 x879))) (=> (not x5323) x879))) (=> x4690 x879))) (=> (and (not x2993) (= x1166 (= x2426 x4332))) (and (=> (and x1166 (and (= x5078 68) (< x2768 3065339685) (not (= x2768 2512374353)) (= 68 x5078) (= x5366 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x2237 x2073) (= (x980 (- x5078 4)) x3178) (< 0 x1870) (= x1870 (x2549 (x1567 x4332))) (not (= x2768 2542517689)) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3178)) (< x3178 64)) (> x3178 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3079) (not (> 4 x5078)) (not (= x2768 2644395612)) (= x1460 x4904) (= 2835717307 x2768) (not (< x2768 2512374353)))) (and (=> (and (not x3079) (= (= x1460 x4904) x6267)) (and (=> (not x6267) x4012) (=> (and x6267 (and (= (x476 (x1567 x717) (x5097 1) 0) x4741) (= x4383 (x4547 x4741)) (= x2882 (> x2073 x4383)) (<= 0 x4383) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4383))) (and (=> x2882 x4012) (=> (and (not x2882) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1191) (= x4759 (x980 (- x4383 x2237))) (= (x476 (x1567 x4904) (x5097 1) 0) x6039) (= x1191 (x1198 x6039)) (= x1371 (< x3302 x1191)) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2237)) x3302) (>= x1191 0))) (and (=> x1371 x4012) (=> (and (and (= x3446 (x4937 (+ x2237 x1191))) (= x1342 1) (= x2692 32)) (not x1371)) x1226))))))) (=> x3079 x4012))) (=> (and (= (= x2020 x2426) x4166) (not x1166)) (and (=> (and (and (not (< x1952 4)) (= x6278 (x980 (- x1952 4))) (= x3840 x4904) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x5758) (= x1733 (x2549 (x1567 x2020))) (< 0 x1733) (= 68 x1952) (not (> 1117154408 x5905)) (not (< x5905 2514000705)) (not (= 2514000705 x5905)) (= x3363 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6278) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6278) true) (> 64 x6278)))) (= 68 x1952) (not (= 2757214935 x5905)) (= x2073 x506) (= x5905 2835717307)) x4166) (and (=> x3363 x5220) (=> (and (not x3363) (= (= x4904 x3840) x5306)) (and (=> (and x5306 (and (= x2710 x506) (= (= 0 x4904) x4128))) (and (=> (and (and (= x5507 (x476 (x1567 x717) (x5097 0) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5578) (>= x5578 0) (= x6250 (< x5578 x506)) (= x5578 (x1358 x5507))) (not x4128)) (and (=> x6250 x5220) (=> (and (not x6250) (= x1450 (< x5578 x506))) (and (=> x1450 x5220) (=> (and (and (= x5623 (x4525 x6256)) (= (x476 (x1567 x4904) (x5097 0) 0) x6256) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x506)) x4330) (<= 0 x5623) (= (x980 (- x5578 x506)) x2022) (<= x5623 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x928 (x476 (x1567 x717) (x5097 0) 0)) (= (> x5623 x4330) x2849)) (not x1450)) (and (=> x2849 x5220) (=> (and (and (= x27 (< x5091 x5623)) (= (x4937 (+ x5623 x506)) x5091)) (not x2849)) (and (=> (and (not x27) (and (= (x476 (x1567 x4904) (x5097 0) 0) x377) (= 32 x1765) (= x684 (x2953 128)) (= 1 x5896) (= 1 x2941))) x5952) (=> x27 x5220))))))))) (=> x4128 x5220))) (=> (not x5306) x5220))))) (=> (and (= x5372 (= x2426 x3267)) (not x4166)) (and (=> (and (not x5372) (= x3275 (= x2280 x2426))) (and (=> (and (= x4385 (= x2426 x3247)) (not x3275)) (and (=> (and (not x4385) (= (= x5771 x2426) x72)) (and (=> (and (and (= x5445 (or (and (> 64 x3479) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3479))) (> x3479 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (< x5734 826074471)) (= x2073 x2306) (= x2228 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x2859 68) (not (= 1889567281 x5734)) (= x3479 (x980 (- x2859 4))) (not (> 4 x2859)) (= (x2549 (x1567 x5771)) x2120) (not (= x5734 826074471)) (< 0 x2120) (not (= x5734 2514000705)) (= 2835717307 x5734) (= x2859 68) (= x4904 x5040)) x72) (and (=> x5445 x2868) (=> (and (not x5445) (= (= x5040 x4904) x1111)) (and (=> (not x1111) x2868) (=> (and x1111 (and (= (x476 (x1567 x717) (x5097 1) 0) x5568) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1848) (= x2306 x5689) (= (x614 x5568) x1848) (= x4558 (< x1848 x2073)) (>= x1848 0))) (and (=> (and (not x4558) (= (< x1848 x2306) x2595)) (and (=> x2595 x2868) (=> (and (and (<= 0 x6365) (= (x166 x6236) x6365) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2306)) x2049) (= (< x2049 x6365) x6199) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6365) (= x2478 (x476 (x1567 x717) (x5097 1) 0)) (= x6236 (x476 (x1567 x4904) (x5097 1) 0)) (= x2731 (x980 (- x1848 x2306)))) (not x2595)) (and (=> (and (and (= x2977 (x4937 (+ x2306 x6365))) (= x4057 (> x6365 x2977))) (not x6199)) (and (=> x4057 x2868) (=> (and (not x4057) (and (= x4553 32) (= x865 1) (= (x476 (x1567 x4904) (x5097 1) 0) x3440))) x1975))) (=> x6199 x2868))))) (=> x4558 x2868))))))) (=> (and (= (= x462 x2426) x3837) (not x72)) (and (=> (and (and (= x1339 68) (= x1339 68) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x4132) (= (x2549 (x1567 x462)) x1891) (not (< x6156 826074471)) (= (x980 (- x1339 4)) x1440) (not (= 2514000705 x6156)) (= x4915 x2073) (= x5269 x4904) (= x6156 2835717307) (= x2290 (or (and (= true (<= x1440 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1440 64)) (> x1440 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x6156 1889567281)) (> x1891 0) (not (= 826074471 x6156)) (not (< x1339 4))) x3837) (and (=> (and (not x2290) (= (= x4904 x5269) x646)) (and (=> (not x646) x965) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x378) (= (> x2073 x378) x991) (= x378 (x597 x2163)) (= x4915 x4693) (= (x476 (x1567 x717) (x5097 1) 0) x2163) (>= x378 0)) x646) (and (=> (and (not x991) (= (> x4915 x378) x998)) (and (=> (and (and (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4915)) x2942) (= (x2929 x4524) x419) (<= x419 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x980 (- x378 x4915)) x4216) (= x1456 (x476 (x1567 x717) (x5097 1) 0)) (>= x419 0) (= (> x419 x2942) x1040) (= (x476 (x1567 x4904) (x5097 1) 0) x4524)) (not x998)) (and (=> x1040 x965) (=> (and (and (= x6229 (> x419 x5560)) (= (x4937 (+ x419 x4915)) x5560)) (not x1040)) (and (=> x6229 x965) (=> (and (not x6229) (and (= (x476 (x1567 x4904) (x5097 1) 0) x1981) (= 32 x4913) (= x5284 1))) x3325))))) (=> x998 x965))) (=> x991 x965))))) (=> x2290 x965))) (=> (and (not x3837) (and (= x4202 (= x2426 x5205)) (and (and (= x4671 2835717307) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x4760) (= 68 x216) (not (< x216 4)) (not (= x4671 1889567281)) (= x4056 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4135) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4135)) (> 64 x4135)))) (= x4983 x4904) (= (x980 (- x216 4)) x4135) (not (= x4671 404098525)) (not (= 599290589 x4671)) (= x2073 x3786) (= x216 68) (not (= x4671 157198259)) (> x5491 0) (= (x2549 (x1567 x5205)) x5491)) x4202))) (and (=> x4056 x2793) (=> (and (= x5490 (= x4983 x4904)) (not x4056)) (and (=> (not x5490) x2793) (=> (and x5490 (and (= (< x3215 x2073) x2204) (= (x110 x3604) x3215) (<= x3215 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3215 0) (= x3604 (x476 (x1567 x717) (x5097 1) 0)))) (and (=> (and (and (= x4501 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3786))) (= x5956 (x476 (x1567 x4904) (x5097 1) 0)) (<= x2622 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3174 (x980 (- x3215 x3786))) (= (< x4501 x2622) x2172) (= x2622 (x5933 x5956)) (>= x2622 0)) (not x2204)) (and (=> (and (and (= x289 (x4937 (+ x2622 x3786))) (= x605 1) (= x3625 32)) (not x2172)) x772) (=> x2172 x2793))) (=> x2204 x2793))))))))))) (=> (and x4385 (and (= x2041 x4904) (not (= 826074471 x1368)) (= (x980 (- x504 4)) x2688) (not (= 2514000705 x1368)) (= x2597 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2688) (and (< x2688 64) (= true (<= x2688 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x2073 x2594) (> x4676 0) (not (< x504 4)) (= 2835717307 x1368) (= (x2549 (x1567 x3247)) x4676) (not (< x1368 826074471)) (not (= x1368 1889567281)) (= x504 68) (= x504 68) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1135))) (and (=> x2597 x3546) (=> (and (= x5473 (= x4904 x2041)) (not x2597)) (and (=> (and x5473 (and (= (x4873 x2167) x3246) (<= x3246 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5375 (> x2073 x3246)) (= (x476 (x1567 x717) (x5097 1) 0) x2167) (= x4358 x2594) (<= 0 x3246))) (and (=> x5375 x3546) (=> (and (not x5375) (= x2871 (> x2594 x3246))) (and (=> x2871 x3546) (=> (and (and (= (> x5387 x2192) x1486) (= (x3923 x2998) x5387) (= (x476 (x1567 x4904) (x5097 1) 0) x2998) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5387) (>= x5387 0) (= (x476 (x1567 x717) (x5097 1) 0) x930) (= (x980 (- x3246 x2594)) x5655) (= x2192 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2594)))) (not x2871)) (and (=> x1486 x3546) (=> (and (and (= x3355 (x4937 (+ x5387 x2594))) (= x2837 (> x5387 x3355))) (not x1486)) (and (=> x2837 x3546) (=> (and (and (= (x476 (x1567 x4904) (x5097 1) 0) x5076) (= x2151 1) (= x3021 32)) (not x2837)) x5500))))))))) (=> (not x5473) x3546))))))) (=> (and (and (= x1658 (x980 (- x4198 4))) (= 68 x4198) (not (= 826074471 x2691)) (= x3112 (or (and (< x1658 64) (= (<= x1658 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1658 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x3568 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x2549 (x1567 x2280)) x1726) (= x4198 68) (= x2691 2835717307) (not (< x2691 826074471)) (= x3341 x4904) (not (> 4 x4198)) (= x1598 x2073) (not (= 1889567281 x2691)) (not (= x2691 2514000705)) (< 0 x1726)) x3275) (and (=> (and (not x3112) (= (= x3341 x4904) x4813)) (and (=> (and (and (= x3398 (x187 x446)) (= x5501 (> x2073 x3398)) (<= x3398 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2695 x1598) (<= 0 x3398) (= x446 (x476 (x1567 x717) (x5097 1) 0))) x4813) (and (=> x5501 x6214) (=> (and (= x49 (< x3398 x1598)) (not x5501)) (and (=> (and (not x49) (and (= x4807 (x476 (x1567 x717) (x5097 1) 0)) (= x6021 (< x609 x6096)) (= x6096 (x4701 x5662)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6096) (= (x980 (- x3398 x1598)) x3636) (= x609 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1598))) (= x5662 (x476 (x1567 x4904) (x5097 1) 0)) (>= x6096 0))) (and (=> x6021 x6214) (=> (and (and (= (< x1955 x6096) x3381) (= x1955 (x4937 (+ x6096 x1598)))) (not x6021)) (and (=> x3381 x6214) (=> (and (and (= x2893 1) (= x4336 (x476 (x1567 x4904) (x5097 1) 0)) (= x4158 32)) (not x3381)) x2346))))) (=> x49 x6214))))) (=> (not x4813) x6214))) (=> x3112 x6214))))) (=> (and (and (= (x2549 (x1567 x3267)) x5250) (= x4904 x5408) (not (= x5757 2514000705)) (not (= 826074471 x5757)) (not (= x5757 1889567281)) (= x1559 (x980 (- x5107 4))) (= x5757 2835717307) (not (> 4 x5107)) (= x5107 68) (= x2013 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1559) true) (< x1559 64)) (> x1559 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x3898 x2073) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2115) (> x5250 0) (= x5107 68) (not (< x5757 826074471))) x5372) (and (=> x2013 x3456) (=> (and (= (= x4904 x5408) x189) (not x2013)) (and (=> (and x189 (and (= (= 0 x4904) x5540) (= x5920 x3898))) (and (=> x5540 x3456) (=> (and (not x5540) (and (= x2153 (< x3387 x3898)) (= x888 (x476 (x1567 x717) (x5097 1) 0)) (<= 0 x3387) (<= x3387 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x417 x888) x3387))) (and (=> x2153 x3456) (=> (and (and (= x1699 (x417 x1223)) (<= x1699 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3927 (> x3898 x1699)) (>= x1699 0) (= (x476 (x1567 x717) (x5097 1) 0) x1223)) (not x2153)) (and (=> (and (and (<= x1595 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1595 (x3868 x1258)) (= (< x1974 x1595) x1919) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3898)) x1974) (= (x476 (x1567 x717) (x5097 1) 0) x765) (= (x476 (x1567 x4904) (x5097 1) 0) x1258) (<= 0 x1595) (= (x980 (- x1699 x3898)) x1176)) (not x3927)) (and (=> x1919 x3456) (=> (and (and (= x5644 32) (= (x476 (x1567 x4904) (x5097 1) 0) x3781) (= 1 x918) (= x3000 1) (= x5322 (x817 128)) (= (x4937 (+ x1595 x3898)) x5084)) (not x1919)) x2516))) (=> x3927 x3456))))))) (=> (not x189) x3456))))))))))))))))) (=> x4217 x2633))))) (=> x509 x2633))))) (=> (and x2210 (and (= x160 (= 255 x604)) (> 1461501637330902918203684832716283019655932542976 x2426) (<= x604 255) (>= x2426 0) (>= x604 0) (<= x2426 1461501637330902918203684832716283019655932542975))) (and (=> x160 x2633) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1661) (= x1811 (x350 255 x3869)) (>= x1661 0) (= (x2549 (x1567 x2426)) x334) (= x181 (x476 (x1567 x604) (x5097 4) 0)) (= (= x334 0) x608) (= (x2429 x181) x1661) (= x3869 (x4937 (+ 1 x604))) (= x1972 128)) (not x160)) (and (=> (and (not x608) (= x3297 (= x4332 x2426))) (and (=> (and (not x3297) (and (and (and (or (and (and (= 0 x3560) (= x2123 x2825)) x4069) (and (not x4069) (and (= 1 x3560) (= 0 x2123)))) (and (not (= x3153 649617121)) (not (= 599290589 x3153)) (< 0 x754) (= (x980 (- x1930 4)) x1728) (= x754 (x2549 (x1567 x2280))) (= x1930 36) (not (= x3153 404098525)) (not (> 4 x1930)) (not (= 157198259 x3153)) (= 773487949 x3153) (= x4069 (or (and (= true (<= x1728 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1728 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1728))) (= x950 20853193852723734048814770637610870652489083209607696777694672748161462697984) (not (= x3153 117300739)) (> 826074471 x3153) (= x1930 36))) x1452) (= (= x2280 x2426) x1452))) x1866) (=> (and x3297 (and (and (= x3639 x1661) (= 773487949 x616) (not (= x616 404098525)) (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 x4591) (not (= 599290589 x616)) (< x616 2512374353) (= x1157 (x2549 (x1567 x4332))) (= x4504 (or (and (< x2621 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2621))) (> x2621 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< x616 953495055) (= 36 x3608) (not (> 4 x3608)) (= x3608 36) (< 0 x1157) (not (= 157198259 x616)) (= (x980 (- x3608 4)) x2621)) (or (and (= x3639 x6046) (not x4504)) x4504))) x1787))) (=> x608 x2633))))))))) (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x2426) (<= 0 x604) (= (= 255 x604) x4868) (>= x2426 0) (< x2426 1461501637330902918203684832716283019655932542976) (<= x604 255)) x1898) (and (=> x4868 x2633) (=> (and (and (= x2364 (= 0 x1287)) (= x5906 (x4937 (+ 1 x604))) (= x4742 (x476 (x1567 x604) (x5097 4) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3642) (= x665 128) (= x3642 (x2429 x4742)) (= (x350 255 x5906) x1240) (>= x3642 0) (= (x2549 (x1567 x2426)) x1287)) (not x4868)) (and (=> (and (not x2364) (and (= (= x4332 x2426) x4299) (and x4299 (and (and (= x5164 82641394424300342035733052706735002277943222088490025348945809093694544936960) (= x1213 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3151)) (< x3151 32)) (> x3151 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x790 3065339685) (= (x2549 (x1567 x4332)) x5036) (not (< x790 3065339685)) (not (> 4 x2810)) (= 36 x2810) (not (< x790 2512374353)) (< 0 x5036) (= x2810 36) (= x1393 x3642) (= (x980 (- x2810 4)) x3151)) (or (and (= x1393 x2890) (not x1213)) x1213))))) x1071) (=> x2364 x2633))))))) (=> x927 x2633))) (=> (not x1398) x2633))) (=> x3329 x2633))))) (=> (and (and (not (< x6024 4)) (> x2015 0) (= x6148 (x980 (- x6024 4))) (= x1192 x4843) (= 100 x6024) (= 97057840296441966410330255902201960138893160036366920885407767449525406400512 x4459) (= (or (> x6148 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x6148 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6148) true))) x1834) (= (x2549 (x1567 x5880)) x2015) (= x5756 x6024) (= 3600075382 x2747)) x545) (and (=> x1834 x4900) (=> (and (not x1834) (and (= x127 (x350 1461501637330902918203684832716283019655932542975 x1192)) (= (= x127 x1192) x1931))) (and (=> (not x1931) x4900) (=> (and (and (= 32 x4173) (= x3850 1)) x1931) x508)))))))))
(assert (= (or x6323 x2104 x3912 x2785 x5007 x5083 x799 x4540 x5254 x5039 x650) x2789))
(assert (= (and x5228 x5607) x5428))
(assert (= (and x2933 x3577) x2342))
(assert (= (and x2798 x562) x1648))
(assert (x447 x3793))
(assert (x447 x4890))
(assert (= x4160 (and x3681 x5141)))
(assert (= x3397 (and x2634 x5717)))
(assert (x447 x1445))
(assert (x447 x242))
(assert (= x2266 (and x3056 x2993)))
(assert (= (and x6209 x4256) x3967))
(assert (= (and x18 x2371) x2990))
(assert (x447 x4374))
(assert (x447 x3926))
(assert (= (x1567 1431022396) (x5097 1431022396)))
(assert (x447 x5257))
(assert (x447 x4906))
(assert (x2992 x2378 (- x3043 x4506)))
(assert (= x2543 (and x5294 x584)))
(assert (x447 x3479))
(assert (= (and (not x2134) x5466) x1620))
(assert (x447 x891))
(assert (x447 x1577))
(assert (= x2002 (or (and (not x5288) x988) (and x6011 x1173) (and (not x463) x1970))))
(assert (= x2428 (=> (and (= x3167 x4395) (= 0 x3732)) x4887)))
(assert (x5592 (- x4954 x3043)))
(assert (= x3258 (or (and (not x634) x4571) (and x4998 x2505))))
(assert (x447 x975))
(assert (x447 x4957))
(assert (= (x2338 (x5097 1086394137)) 1086394137))
(assert (x447 x3812))
(assert (x447 x403))
(assert (x447 x3460))
(assert (x5592 (- x2378 x611)))
(assert (x3960 x2378 x3043 x3216 x3043))
(assert (x447 x3406))
(assert (= x2949 (and (not x6268) x3491)))
(assert (x447 x2705))
(assert (x447 x4144))
(assert (= x3638 (and (not x3927) x5806)))
(assert (x447 x4052))
(assert (= x3817 (and x680 x27)))
(assert (x447 x5066))
(assert (x447 x4759))
(assert (x5592 x4398))
(assert (x447 x2977))
(assert (= x6036 (or x3531 x2327 x3044 x2176 x3395 x1418 x5454 x3966 x4064)))
(assert (x2992 x2378 (- x3043 x3216)))
(assert (= (and x488 (not x2493)) x3176))
(assert (x447 x4639))
(assert (x447 x5458))
(assert (x447 x6363))
(assert (= x843 (and x5501 x2930)))
(assert (x447 x1482))
(assert (= (and x6152 x972) x5400))
(assert (= (and x2042 x6292) x4048))
(assert (= x834 (or x5202 x3495 x2724 x2767 x4921 x4186 x1509 x4999 x2102)))
(assert (x447 x5211))
(assert (x447 x6047))
(assert (x3903 x4307))
(assert (x447 x2681))
(assert (= (and x458 (not x3276)) x1893))
(assert (x447 x407))
(assert (x447 x3800))
(assert (= (and x3022 x3448) x5850))
(assert (x447 x849))
(assert (x447 x3944))
(assert (= x4181 (or (and (not x2934) x2756) (and (not x456) x1672) (and x6191 x6319))))
(assert (x447 x1489))
(assert (= x3036 (or (and (not x1199) x5370) (and x4453 x826))))
(assert (= (and (not x4496) x5307) x2752))
(assert (x447 x312))
(assert (= (and x862 x1965) x678))
(assert (x447 x3351))
(assert (= x2975 (and x5307 x4496)))
(assert (= (and x2128 x624) x4394))
(assert (= (and (not x4656) x3354) x5334))
(assert (x447 x2426))
(assert (x447 x4915))
(assert (x447 x3605))
(assert (= x1095 (=> (and (= x3428 x720) (= x5736 x2963)) x3544)))
(assert (= (x2338 (x1567 x3765)) x3765))
(assert (= (and x1740 x1493) x958))
(assert (= x845 (and (not x706) x3203)))
(assert (x447 x5304))
(assert (= x858 (and x960 x194)))
(assert (x447 x3603))
(assert (= (and x4240 x3704) x3665))
(assert (= (and x4841 (not x4469)) x2696))
(assert (x447 x4922))
(assert (x447 x6177))
(assert (x447 x4207))
(assert (= (and x4611 x4377) x4446))
(assert (= x5023 (=> (= (= x4290 0) x4409) (and (=> (and (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5853)) (< x5853 32)) (> x5853 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1576) (not x4409)) (and (=> x1576 x4800) (=> (and (not x1576) (and (= x3870 32) (= 1 x2554))) x4554))) (=> x4409 x4800)))))
(assert (= (and x1269 (not x3829)) x4595))
(assert (x447 x5655))
(assert (x447 x5541))
(assert (= (and (not x1585) x6088) x2051))
(assert (= x313 (and x3224 (not x5870))))
(assert (x447 x1598))
(assert (= (and (not x6240) x236) x5672))
(assert (= (and x2266 (not x4690)) x2720))
(assert (x447 x8))
(assert (= (or x1717 x2476) x4925))
(assert (x1957 x3043 x3216 x6080 x3043))
(assert (= (x5097 1484578334) (x1567 1484578334)))
(assert (= (and x2245 (not x2294)) x5177))
(assert (= (=> (and (= x1233 (x476 (x1567 x2741) (x5097 1) 0)) (= x4401 (x110 x1233)) (<= x4401 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x4401 x4623) x767) (>= x4401 0)) (and (=> x767 x2186) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3260) (= (x476 (x1567 x5566) (x5097 1) 0) x4798) (= (> x3260 x401) x1182) (= (x980 (- x4401 x4623)) x1130) (<= 0 x3260) (= x3260 (x4936 x4798)) (= (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4623)) x401)) (not x767)) (and (=> (and (and (= x1142 1) (= 32 x3651) (= (x4937 (+ x4623 x3260)) x2171)) (not x1182)) x6052) (=> x1182 x2186))))) x86))
(assert (x729 x3064))
(assert (= x4243 (and x3514 (not x4504))))
(assert (x447 x2680))
(assert (x447 x6277))
(assert (= x921 (x2338 (x1567 x921))))
(assert (= (and x2407 (not x6174)) x4049))
(assert (x3903 x4633))
(assert (= (x2338 (x1567 x582)) x582))
(assert (x447 x1043))
(assert (x447 x6315))
(assert (= (and (not x3563) x78) x3448))
(assert (= x2480 (or x221 x2297)))
(assert (x54 32))
(assert (= (and (not x4337) x484) x1715))
(assert (= (and x3630 (not x4378)) x4349))
(assert (= x2476 (or x1323 x5005 x2185 x4227 x740 x1093)))
(assert (= (and x2350 (not x3522)) x5922))
(assert (= (and x5932 x1994) x5403))
(assert (x447 x5053))
(assert (x552 x599))
(assert (x3903 x1353))
(assert (= (and x1630 x3251) x250))
(assert (x2992 x6080 (- x3043 x4954)))
(assert (= (x1567 649617121) (x5097 649617121)))
(assert (= (and x3823 x558) x1084))
(assert (x447 x3905))
(assert (= x2258 (and x3880 (not x4166))))
(assert (= (x2338 (x1567 x1309)) x1309))
(assert (x3903 x2669))
(assert (= x3746 (=> (and (= x829 x5685) (= x4644 x2086)) x4298)))
(assert (= x620 (and (not x4546) x992)))
(assert (= (and (not x2019) x5884) x2468))
(assert (= x4486 (and x999 x5089)))
(assert (x447 x5175))
(assert (x447 x100))
(assert (x447 x261))
(assert (x447 x2062))
(assert (x447 x2464))
(assert (= (x2338 (x1567 x3039)) x3039))
(assert (x447 x4503))
(assert (x447 x328))
(assert (= (and x6006 x1075) x4283))
(assert (= (and x2583 x3315) x642))
(assert (x447 x3031))
(assert (= (or x5236 x286) x1370))
(assert (= x924 (and x2689 (not x3677))))
(assert (= x4305 (and x5132 (not x1527))))
(assert (= x3893 (and x4098 x5919)))
(assert (x3903 x582))
(assert (x447 x1245))
(assert (x3903 x4380))
(assert (x447 x5948))
(assert (=> (<= x95 10000) (= (x1567 x95) (x5097 x95))))
(assert (x447 x2770))
(assert (x447 x5295))
(assert (x3960 x4398 x3043 x4506 x3043))
(assert (= x1175 (and x1723 (not x803))))
(assert (x447 x3639))
(assert (= x2068 (and x158 (not x5043))))
(assert (x447 x2893))
(assert (x447 x1477))
(assert (= (x1567 2644395612) (x5097 2644395612)))
(assert (x3903 x1197))
(assert (= x1187 (x2338 (x1567 x1187))))
(assert (= (x5097 97057840296441966410330255902201960138893160036366920885407767449525406400512) (x1567 97057840296441966410330255902201960138893160036366920885407767449525406400512)))
(assert (= (=> (and (= 0 x1342) (= x2692 x6277)) x1226) x4012))
(assert (= x1980 (and (not x2449) x2466)))
(assert (x447 x2161))
(assert (= x5981 (and (not x2212) x909)))
(assert (x447 x1079))
(assert (= x1789 (and (not x1890) x5160)))
(assert (x447 x6301))
(assert (x447 x1932))
(assert (x54 x3401))
(assert (x447 x2946))
(assert (x3903 x3601))
(assert (x447 x1708))
(assert (x5592 x2378))
(assert (x3903 x5951))
(assert (= (=> (and (= 0 x3995) (= x271 x2584)) x1100) x2617))
(assert (=> (>= 10000 x1187) (= (x5097 x1187) (x1567 x1187))))
(assert (= x3953 (and x5475 (not x1155))))
(assert (x5592 (- x4954 x4506)))
(assert (= x3777 (and x5539 x1855)))
(assert (x447 x4447))
(assert (x2992 x3043 (- x6080 x3043)))
(assert (= (x2338 (x1567 x1181)) x1181))
(assert (= (and x4888 (not x2723)) x5089))
(assert (x447 x2441))
(assert (x447 x4235))
(assert (= (and (not x2921) x739) x4268))
(assert (= x4079 (and x6302 (not x2892))))
(assert (x447 x2184))
(assert (= (and x3407 (not x1794)) x3416))
(assert (= (and x4863 (not x509)) x6127))
(assert (= (and x845 x4709) x2327))
(assert (x447 x1719))
(assert (x54 x3090))
(assert (x447 x5561))
(assert (x447 x612))
(assert (= x3312 (and x4231 x4703)))
(assert (x447 x4947))
(assert (= (and (not x5445) x2236) x4631))
(assert (x447 x5893))
(assert (x447 x4119))
(assert (x447 x3847))
(assert (= (and (not x776) x4567) x4044))
(assert (= x4985 (and (not x5473) x4261)))
(assert (= x321 (and x2587 x6199)))
(assert (x447 x4309))
(assert (= 3065339685 (x2338 (x5097 3065339685))))
(assert (x447 x1998))
(assert (= (x2338 (x5097 3824031246)) 3824031246))
(assert (= (and (not x5176) x2436) x4552))
(assert (x447 x3993))
(assert (x447 x3691))
(assert (x447 x1649))
(assert (= (=> (and (= x4290 x1812) (= x5853 x3596)) x6285) x964))
(assert (= (and x5176 x2436) x4850))
(assert (= x3101 (and x3352 (not x3391))))
(assert (x447 x3510))
(assert (= x791 (and x5116 x5992)))
(assert (x1990 x4059))
(assert (x3903 x170))
(assert (x447 x2573))
(assert (x447 x276))
(assert (= (and x1493 (not x1740)) x6138))
(assert (x447 x4274))
(assert (x447 x5318))
(assert (x447 x3703))
(assert (x447 x3525))
(assert (= x5330 (=> (and (= x3321 x3351) (= 0 x5357)) x5384)))
(assert (= x935 (or x3357 x4203)))
(assert (= x5299 (and x4450 (not x3684))))
(assert (x447 x4847))
(assert (= (and x3239 x4969) x4007))
(assert (= x5584 (and x3947 x5902)))
(assert (= x2109 (and (not x5814) x3799)))
(assert (x447 x2255))
(assert (= (and (not x102) x6258) x5108))
(assert (= x1962 (and x2106 x3867)))
(assert (x447 x1799))
(assert (= (=> (and (= x2140 x4772) (= x2521 x5463)) x3131) x5519))
(assert (= (and x716 (not x3327)) x4350))
(assert (x447 x4471))
(assert (= x3535 (and x5314 x5767)))
(assert (x5592 (- x611 x3216)))
(assert (x3903 x3184))
(assert (x447 x1240))
(assert (= (and x224 x3827) x3496))
(assert (= (x2338 (x1567 x4307)) x4307))
(assert (x447 x2324))
(assert (= x1469 (x2338 (x1567 x1469))))
(assert (= (x1567 1510251120) (x5097 1510251120)))
(assert (x447 x5934))
(assert (x447 x3059))
(assert (= x1068 (and x5587 (not x4726))))
(assert (x447 x3735))
(assert (= x850 (and x2601 x3760)))
(assert (=> (>= 10000 x2280) (= (x5097 x2280) (x1567 x2280))))
(assert (x447 x2270))
(assert (x3903 x3917))
(assert (x447 x2174))
(assert (x447 x2230))
(assert (= x4 (and x2357 x4151)))
(assert (= (x2338 (x5097 903454517)) 903454517))
(assert (x3903 x3950))
(assert (x2992 x4398 (- x3043 x4954)))
(assert (= (x2338 (x1567 x6266)) x6266))
(assert (x447 x6221))
(assert (x447 x1338))
(assert (= (=> (and (= x5570 x2550) (= x3882 x1983)) x246) x5058))
(assert (x447 x426))
(assert (= x1035 (and x4523 x2640)))
(assert (x3903 x1088))
(assert (x447 x4413))
(assert (= (=> (and (= x5946 x5930) (= x3408 0)) x3026) x2146))
(assert (=> (>= 10000 x5771) (= (x5097 x5771) (x1567 x5771))))
(assert (x447 x6046))
(assert (x447 x838))
(assert (= x6228 (or (and x5339 (not x2725)) (and x3054 x4232))))
(assert (= x5563 (and x3656 x2295)))
(assert (x3903 x4410))
(assert (and (x5609 x3869 256) (x4601 x3869 256) (x301 x3869 256) (=> (> 256 0) (= (+ (x474 x3869 256) (* (x1849 x3869 256) 256)) x3869))))
(assert (= x5004 (or x2589 x6344)))
(assert (= (and (not x5465) x5969) x4513))
(assert (x447 x2008))
(assert (x447 x4155))
(assert (= x4556 (or x5187 x4762 x2876 x82 x4929 x2125)))
(assert (= 1875902277 (x2338 (x5097 1875902277))))
(assert (x447 x561))
(assert (x5383 x4506))
(assert (= x5919 (and x2954 (not x4675))))
(assert (= x5767 (and (not x6210) x200)))
(assert (x447 x5965))
(assert (= x4727 (=> (and (= x5188 x2521) (= x4772 x6322)) x3131)))
(assert (x1957 x4954 x611 x4506 x3043))
(assert (x447 x3344))
(assert (x552 x1477))
(assert (= (and (not x6146) x721) x5552))
(assert (x1628 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2378))
(assert (x447 x2208))
(assert (x447 x334))
(assert (= x2126 (and x3474 x1668)))
(assert (x447 x235))
(assert (=> (>= 10000 x3634) (= (x1567 x3634) (x5097 x3634))))
(assert (=> (>= 10000 x2856) (= (x5097 x2856) (x1567 x2856))))
(assert (=> (<= x1383 10000) (= (x1567 x1383) (x5097 x1383))))
(assert (= (and x1428 (not x2300)) x5265))
(assert (= (=> (and (= 0 x5110) (= x1885 x3679)) x1991) x2205))
(assert (= x1523 (and x983 x5867)))
(assert (= x2633 (=> (and (= x1248 0) (= x3941 x2544)) x1399)))
(assert (= (and (not x748) x5088) x5742))
(assert (= (=> (and (= x2550 x5865) (= x5140 x1983)) x246) x591))
(assert (x447 x4771))
(assert (x447 x4037))
(assert (= x6117 (and (not x4368) x2674)))
(assert (= (=> (and (= x715 x4034) (= 0 x525)) x3202) x3585))
(assert (x1957 x3043 x3216 x4954 x611))
(assert (= x5470 (x2338 (x1567 x5470))))
(assert (= x5413 (and x3106 x4647)))
(assert (x54 x4059))
(assert (x447 x2237))
(assert (x447 x2331))
(assert (= x5851 (=> (and (= x3428 x5816) (= x2963 0)) x1095)))
(assert (x2992 x3043 (- x4506 x6080)))
(assert (= (and x3704 (not x4240)) x3279))
(assert (= x5039 (or x5820 x3663)))
(assert (= (and x5677 x2249) x4241))
(assert (x447 x2943))
(assert (= (and x1781 x2525) x1314))
(assert (= x883 (and (not x3644) x4363)))
(assert (x2992 x3043 (- x4506 x611)))
(assert (= (and x4022 (not x4058)) x514))
(assert (x447 x3859))
(assert (= x3675 (and x4799 x1458)))
(assert (= x3580 (and x5160 x1890)))
(assert (x1990 x1477))
(assert (x1990 x2384))
(assert (x447 x6089))
(assert (x447 x4923))
(assert (x447 x4980))
(assert (= x1797 (and x4599 x6127)))
(assert (x447 x3941))
(assert (= (and (not x3356) x4555) x764))
(assert (= (and x5834 x1235) x5141))
(assert (= x596 (and x3645 x4390)))
(assert (=> (<= x5935 10000) (= (x5097 x5935) (x1567 x5935))))
(assert (x1957 x3043 x4506 x2378 x3043))
(assert (= (and x140 x2172) x5093))
(assert (x447 x361))
(assert (x447 x4836))
(assert (= (x5097 1432194747) (x1567 1432194747)))
(assert (x447 x3282))
(assert (x447 x2730))
(assert (= x2298 (and x3708 x6044)))
(assert (x447 x1596))
(assert (x447 x6364))
(assert (=> (<= x2508 10000) (= (x5097 x2508) (x1567 x2508))))
(assert (= (and x225 x1663) x806))
(assert (x5944 x1901))
(assert (x54 x5906))
(assert (x447 x1504))
(assert (x447 x5245))
(assert (x447 x6132))
(assert (x447 x2570))
(assert (x447 x1728))
(assert (= x467 (=> (and (= 0 x5188) (= x4395 x6322)) x4727)))
(assert (= (=> (and (= 0 x3214) (= x2699 x3321)) x2103) x1246))
(assert (= (=> (and (= x6009 0) (= x4395 x5485)) x1325) x445))
(assert (x447 x2011))
(assert (x447 x3575))
(assert (x447 x5113))
(assert (= x578 (and x5688 (not x594))))
(assert (= x1357 (and x1518 x3593)))
(assert (x447 x4589))
(assert (= (=> (and (= x2206 x2584) (= 0 x555)) x203) x3907))
(assert (x447 x176))
(assert (= x4479 (and x2849 x3517)))
(assert (x447 x6027))
(assert (= x4106 (and x1063 x2833)))
(assert (x447 x5623))
(assert (= (and x3162 (not x6109)) x3566))
(assert (= (and x2233 (not x3319)) x3095))
(assert (= (and (not x5281) x2625) x5705))
(assert (x447 x5614))
(assert (x447 x5173))
(assert (x447 x5369))
(assert (= x4929 (and x3337 x5219)))
(assert (=> (>= 10000 x2409) (= (x1567 x2409) (x5097 x2409))))
(assert (x447 x393))
(assert (x447 x4633))
(assert (x447 x1437))
(assert (= x2802 (or x4905 x5338)))
(assert (= (and (not x584) x5294) x3497))
(assert (= (and x4106 x5161) x3982))
(assert (= (and (not x5834) x1235) x2250))
(assert (= x4492 (and x2685 x3197)))
(assert (= (and x1131 x3490) x807))
(assert (= x4064 (and x5527 x2902)))
(assert (= x3323 (and x894 x1335)))
(assert (= (or x1648 x2646) x2245))
(assert (x447 x1241))
(assert (x2992 x3216 (- x3043 x611)))
(assert (x447 x4424))
(assert (x447 x602))
(assert (x1957 x4954 x611 x3043 x2378))
(assert (= (and x898 (not x3335)) x2743))
(assert (x3903 x5954))
(assert (= x2442 (and x553 (not x2545))))
(assert (x447 x4045))
(assert (x447 x5570))
(assert (x447 x2638))
(assert (x447 x683))
(assert (x447 x2890))
(assert (= (and x6032 x2153) x3025))
(assert (x447 x2396))
(assert (= x4448 (and x5563 x1999)))
(assert (x5383 x3216))
(assert (= (or (and x5291 (not x3699)) (and x6216 (not x2937)) (and x371 x4021)) x4055))
(assert (= (and x4368 x2674) x1419))
(assert (x447 x3150))
(assert (x1957 x3043 x2378 x611 x4954))
(assert (x552 x5066))
(assert (x3960 x4398 x3043 x3216 x3043))
(assert (= x2074 (x2338 (x1567 x2074))))
(assert (x447 x4812))
(assert (x447 x3666))
(assert (x1957 x611 x4954 x4506 x3043))
(assert (x447 x4501))
(assert (x447 x2259))
(assert (x447 x6295))
(assert (= (and x4074 x6229) x740))
(assert (x447 x1891))
(assert (= (and (not x1410) x2763) x489))
(assert (x447 x598))
(assert (x1628 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3216))
(assert (= (and (not x1182) x649) x4950))
(assert (= (and x5126 (not x2824)) x3106))
(assert (x447 x3267))
(assert (x447 x1326))
(assert (x1990 x6099))
(assert (x447 x4507))
(assert (= x3576 (and x3896 x4321)))
(assert (= x4756 (x2338 (x1567 x4756))))
(assert (= x4193 (and x5693 x5646)))
(assert (x3960 x4954 x611 x3216 x3043))
(assert (x1990 x915))
(assert (= x5401 (x2338 (x1567 x5401))))
(assert (= (and (not x848) x2415) x1409))
(assert (= x1132 (x2338 (x1567 x1132))))
(assert (=> (<= x582 10000) (= (x1567 x582) (x5097 x582))))
(assert (x5592 x6080))
(assert (= x353 (and x5877 x5815)))
(assert (x447 x39))
(assert (= (and (not x5792) x4054) x2313))
(assert (= (or (and x6302 x2892) (and x4079 (not x193))) x2399))
(assert (= x1579 (and x3862 x5971)))
(assert (x1957 x3043 x4506 x3043 x6080))
(assert (x447 x599))
(assert (=> (<= x5092 10000) (= (x5097 x5092) (x1567 x5092))))
(assert (x2992 x3216 (- x3043 x4954)))
(assert (=> (<= x3438 10000) (= (x1567 x3438) (x5097 x3438))))
(assert (= (and x1150 (not x3007)) x5186))
(assert (x447 x333))
(assert (= (=> (and (= x2676 x726) (= x1832 x3399)) x1529) x5970))
(assert (= (=> (and (= x2521 x2425) (= x4772 x5774)) x3131) x402))
(assert (= (and x4998 (not x2505)) x4571))
(assert (= x2539 (or (and x3514 x4504) x4243)))
(assert (x447 x1705))
(assert (x447 x4401))
(assert (x447 x3307))
(assert (= (and x3929 x2759) x4530))
(assert (= (and x5730 x1846) x986))
(assert (=> (>= 10000 x4410) (= (x1567 x4410) (x5097 x4410))))
(assert (x447 x4893))
(assert (x447 x5657))
(assert (= x6056 (and (not x2801) x2316)))
(assert (= (x2338 (x1567 x1088)) x1088))
(assert (= x1951 (and x2233 x3319)))
(assert (x447 x5868))
(assert (= (and x1703 (not x4191)) x1345))
(assert (= x5515 (and x543 x5079)))
(assert (x447 x6313))
(assert (= (and x1324 x6126) x2919))
(assert (= (=> (= (< x4207 115792089237316195423570985008687907853269984665640564039457584007913129639935) x4778) (and (=> (and x4778 (= (> x6080 x4207) x99)) (and (=> x99 x3997) (=> (and (= (< x4207 x6080) x2683) (not x99)) (and (=> x2683 x3997) (=> (and (not x2683) (and (= (x476 (x1567 x3931) x1453 0) x2777) (= (x980 (- x4207 x6080)) x1730) (= x1453 (x476 (x1567 x523) (x5097 5) 0)))) x4737))))) (=> (not x4778) x4737))) x2757))
(assert (x3960 x4506 x3043 x4954 x611))
(assert (x447 x5689))
(assert (x447 x2421))
(assert (x447 x3651))
(assert (= x5976 (and x1980 (not x5837))))
(assert (x447 x3890))
(assert (= x585 (and (not x1629) x5760)))
(assert (= (x2338 (x1567 x67)) x67))
(assert (x3903 x1495))
(assert (= (or x834 x2698) x5790))
(assert (= x576 (or x5953 x792)))
(assert (= x215 (and x1059 x904)))
(assert (x447 x239))
(assert (x1957 x4398 x3043 x3043 x4506))
(assert (x5592 (- x4506 x2378)))
(assert (= (and x6194 x2522) x5543))
(assert (= (and x4677 x2499) x4346))
(assert (x447 x4820))
(assert (x447 x5844))
(assert (= (and (not x49) x3459) x2751))
(assert (= x4510 (and (not x3112) x3498)))
(assert (x3903 x6003))
(assert (x3903 x662))
(assert (x54 1461501637330902918203684832716283019655932542976))
(assert (= x4381 (and (not x5156) x4725)))
(assert (= (and x893 x5344) x1010))
(assert (= x300 (and x883 (not x2581))))
(assert (=> (<= x3473 10000) (= (x5097 x3473) (x1567 x3473))))
(assert (x447 x3128))
(assert (x447 x2025))
(assert (=> (>= 10000 x315) (= (x1567 x315) (x5097 x315))))
(assert (x447 x2544))
(assert (x3903 x5260))
(assert (x5592 (- x611 x3043)))
(assert (x447 x1517))
(assert (x3903 x1887))
(assert (x447 x4697))
(assert (= x3958 (and (not x6059) x24)))
(assert (= x4127 (and x4516 x2068)))
(assert (x447 x4561))
(assert (= (and x1826 (not x3077)) x4649))
(assert (x447 x5272))
(assert (= x1 (and x3584 x2917)))
(assert (x447 x1076))
(assert (x447 x668))
(assert (= (and x723 (not x5342)) x1734))
(assert (x552 x5778))
(assert (x1628 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4506))
(assert (x1990 x1103))
(assert (x1957 x3043 x2378 x4954 x611))
(assert (x2992 x3043 (- x4398 x611)))
(assert (= (=> (and (= x5946 x47) (= 0 x1769)) x3956) x5052))
(assert (= (and x151 x1374) x5504))
(assert (= (or (and x3589 x2973) (and x5265 (not x519)) (and x5898 x2799) (and x2300 x1428) (and x3205 x2037)) x3888))
(assert (x447 x511))
(assert (= (=> (and (= x1352 x3321) (= 0 x5622)) x3902) x1092))
(assert (= x3589 (and (not x2799) x5898)))
(assert (= x3997 (=> (and (= x5946 x4858) (= 0 x2574)) x5886)))
(assert (= x5712 (=> (and (= x3399 x1396) (= x2676 x3547)) x1529)))
(assert (x447 x4645))
(assert (= (and x5273 x3383) x579))
(assert (= (=> (and (= x4437 x2893) (= x4158 x4201)) x342) x2346))
(assert (x447 x5397))
(assert (x3903 x3668))
(assert (x1957 x611 x4954 x3216 x3043))
(assert (= (x1567 3642135687) (x5097 3642135687)))
(assert (= (and x4474 x767) x5788))
(assert (x447 x3788))
(assert (=> (<= x2331 10000) (= (x1567 x2331) (x5097 x2331))))
(assert (= x3354 (and x5134 x4731)))
(assert (= (and (not x3539) x3125) x5266))
(assert (x447 x1295))
(assert (= (and (not x1633) x2911) x4087))
(assert (= x4176 (or x1498 x1871)))
(assert (x447 x5064))
(assert (= (=> (and (= 0 x6359) (= x3321 x413)) x2275) x4249))
(assert (= (and x2271 x4753) x5098))
(assert (=> (<= x4812 10000) (= (x5097 x4812) (x1567 x4812))))
(assert (x2992 x3043 (- x4398 x3043)))
(assert (x447 x1615))
(assert (x447 x3212))
(assert (= (and x924 (not x2430)) x543))
(assert (x447 x5343))
(assert (= (and x5571 x2518) x4640))
(assert (x447 x1947))
(assert (x2992 x4506 x3043))
(assert (= (or x5147 x1138 x4826 x433 x3894 x3972 x1796 x1614 x1026 x4250 x5336) x3752))
(assert (= (and x543 (not x5079)) x3663))
(assert (x447 x1610))
(assert (x447 x1916))
(assert (x5592 (- x4506 x4954)))
(assert (= x4168 (and x1527 x5132)))
(assert (x447 x4616))
(assert (x447 x1840))
(assert (x447 x1718))
(assert (x447 x404))
(assert (x447 x1804))
(assert (x447 x421))
(assert (= (x2338 (x1567 x5679)) x5679))
(assert (x447 x4646))
(assert (x729 x3869))
(assert (= (x2338 (x5097 4238056678808933066457772256406219440718756300954938350892797929791311314944)) 4238056678808933066457772256406219440718756300954938350892797929791311314944))
(assert (x447 x2639))
(assert (x447 x3500))
(assert (x447 x289))
(assert (=> (>= 10000 x5772) (= (x1567 x5772) (x5097 x5772))))
(assert (x447 x1088))
(assert (= (=> (and (= x3399 x2305) (= x2676 x683)) x1529) x3707))
(assert (x447 x322))
(assert (= (=> (= x5870 (> 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6295)) (and (=> (not x5870) x3336) (=> (and (= (< x6295 x4506) x4675) x5870) (and (=> x4675 x5849) (=> (and (not x4675) (= (> x4506 x6295) x4098)) (and (=> x4098 x5849) (=> (and (and (= (x350 1461501637330902918203684832716283019655932542975 x459) x1489) (= (x980 (- x6295 x4506)) x687)) (not x4098)) x3336))))))) x3041))
(assert (and (x5609 x1096 1461501637330902918203684832716283019655932542976) (x4601 x1096 1461501637330902918203684832716283019655932542976) (x301 x1096 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x1096 1461501637330902918203684832716283019655932542976) (* (x1849 x1096 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x1096))))
(assert (=> (<= x277 10000) (= (x1567 x277) (x5097 x277))))
(assert (= x4967 (or x2539 x129)))
(assert (= (and x4011 (not x316)) x3730))
(assert (x447 x398))
(assert (x447 x5962))
(assert (= x1532 (and x3439 x3818)))
(assert (x447 x1812))
(assert (=> (<= x1526 10000) (= (x1567 x1526) (x5097 x1526))))
(assert (x447 x4542))
(assert (= (=> (and (= x1551 x4045) (= x936 0)) x2830) x5611))
(assert (= x5067 (x2338 (x1567 x5067))))
(assert (= x3720 (or x3682 x6161)))
(assert (x447 x5481))
(assert (x447 x6166))
(assert (= x5047 (and (not x5632) x789)))
(assert (= (or x642 x793 x6057 x4048 x3875 x4179 x5439 x4986 x4391) x5008))
(assert (x3903 x717))
(assert (x447 x2846))
(assert (x447 x3348))
(assert (x447 x1539))
(assert (= (and x3873 x260) x3635))
(assert (and (x3768 x962 10000) (x1349 x962 10000) (=> (and (< 0 x962) (< 0 10000)) (and (<= (* 10000 (x1849 x962 10000)) x962) (< (- x962 10000) (* 10000 (x1849 x962 10000))))) (x204 x962 10000) (x2408 x962 10000)))
(assert (= x1772 (and x4303 x6158)))
(assert (x447 x892))
(assert (x3903 x462))
(assert (=> (<= x5064 10000) (= (x1567 x5064) (x5097 x5064))))
(assert (= (x1567 1545185628) (x5097 1545185628)))
(assert (x447 x3527))
(assert (x447 x3815))
(assert (= (and x1675 x1820) x1748))
(assert (x3903 x4126))
(assert (x447 x2818))
(assert (= x415 (and x3537 x3217)))
(assert (x447 x2099))
(assert (= x2785 (or x1562 x731)))
(assert (= x2436 (and (not x2961) x4350)))
(assert (and (x5609 x1823 1461501637330902918203684832716283019655932542976) (x4601 x1823 1461501637330902918203684832716283019655932542976) (x301 x1823 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x474 x1823 1461501637330902918203684832716283019655932542976) (* (x1849 x1823 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x1823))))
(assert (x447 x5118))
(assert (x447 x1552))
(assert (= x626 (x2338 (x1567 x626))))
(assert (x447 x1746))
(assert (x447 x1945))
(assert (= (and x3243 x1750) x5381))
(assert (= x1131 (and x3483 x4685)))
(assert (x447 x2835))
(assert (x447 x2129))
(assert (x5592 (- x611 x6080)))
(assert (x447 x3214))
(assert (x447 x4983))
(assert (= (and x5465 x5969) x4883))
(assert (= x5280 (and (not x3549) x4552)))
(assert (x447 x2848))
(assert (x447 x4801))
(assert (x3960 x611 x4954 x6080 x3043))
(assert (= (and x5031 (not x288)) x3162))
(assert (x1957 x3043 x4398 x3043 x4506))
(assert (x447 x5743))
(assert (= x6305 (and x5919 (not x4098))))
(assert (x447 x5502))
(assert (= (and x5124 x207) x2027))
(assert (= x3754 (and (not x3455) x4959)))
(assert (x447 x915))
(assert (x447 x1984))
(assert (= (or x321 x2188 x6169 x647 x4484 x3072) x2297))
(assert (x447 x1191))
(assert (= (and x906 (not x4710)) x2397))
(assert (x447 x3146))
(assert (= (x5097 2542517689) (x1567 2542517689)))
(assert (= x4138 (and x845 (not x4709))))
(assert (= x5786 (and x2170 x4973)))
(assert (x447 x482))
(assert (x447 x4708))
(assert (= (or x5687 x4682) x129))
(assert (=> (>= 10000 x3851) (= (x5097 x3851) (x1567 x3851))))
(assert (= x3073 (and x3017 (not x2524))))
(assert (x447 x2121))
(assert (= (and x2122 (not x2582)) x4320))
(assert (x447 x5882))
(assert (x447 x4359))
(assert (x447 x4630))
(assert (= x4126 (x2338 (x1567 x4126))))
(assert (= x1684 (and x386 x6281)))
(assert (= x3352 (and x1057 (not x6071))))
(assert (= (or x1532 x1803 x238 x2318 x1364 x4097 x5492 x5913 x1305 x4320 x5682 x3824) x1513))
(assert (x447 x1495))
(assert (= x2431 (and x554 x4806)))
(assert (= x3014 (and x2213 (not x1213))))
(assert (= x1618 (and x3535 x6184)))
(assert (x447 x1896))
(assert (x447 x3975))
(assert (= (and x559 x3001) x2880))
(assert (x447 x2228))
(assert (= x819 (or (and (not x4853) x3008) (and x4036 x6367))))
(assert (x3903 x5935))
(assert (= (x5097 669136355) (x1567 669136355)))
(assert (= x6317 (and (not x391) x4717)))
(assert (x447 x2976))
(assert (x447 x291))
(assert (x447 x1130))
(assert (= (and x3521 x6286) x3891))
(assert (= x1414 (and x3643 (not x5204))))
(assert (= (or (and x4337 x484) (and (not x4715) x1715)) x1752))
(assert (x447 x4122))
(assert (x447 x3685))
(assert (= (and x3553 x1531) x2243))
(assert (x447 x1644))
(assert (x447 x3091))
(assert (=> (<= x5129 10000) (= (x1567 x5129) (x5097 x5129))))
(assert (= (and x4860 x1501) x2089))
(assert (= (or x3572 x1874 x881 x5786 x5534 x5768 x884 x4974 x51 x5762 x3370 x92 x5025 x282 x5381 x1209 x5842) x6276))
(assert (x447 x2753))
(assert (x447 x931))
(assert (x447 x2049))
(assert (= (x2338 (x1567 x4509)) x4509))
(assert (= x5590 (and x3004 x4400)))
(assert (x447 x2519))
(assert (= (and x2304 x5551) x2293))
(assert (= (and x4567 x776) x1867))
(assert (x1990 x273))
(assert (x447 x2662))
(assert (= x3013 (and x5731 x830)))
(assert (= (and (not x5144) x5981) x2552))
(assert (= x6223 (and x5577 x4349)))
(assert (x447 x2157))
(assert (= (and x5089 (not x999)) x4794))
(assert (x447 x3049))
(assert (x447 x4421))
(assert (x447 x6085))
(assert (and (x3768 x4169 10000) (x1349 x4169 10000) (=> (and (< 0 x4169) (< 0 10000)) (and (<= (* 10000 (x1849 x4169 10000)) x4169) (< (- x4169 10000) (* 10000 (x1849 x4169 10000))))) (x204 x4169 10000) (x2408 x4169 10000)))
(assert (x447 x3714))
(assert (x447 x6016))
(assert (= x297 (and x1216 (not x2704))))
(assert (= (=> (and (= x4772 x2215) (= x2521 x2209)) x3131) x5133))
(assert (= x6191 (and x5887 x3376)))
(assert (= (x2338 (x1567 x1945)) x1945))
(assert (= x5805 (and (not x1763) x184)))
(assert (x447 x3172))
(assert (= x1263 (and x4297 x3578)))
(assert (x3960 x611 x4954 x2378 x3043))
(assert (= (and x3337 (not x5219)) x4242))
(assert (x447 x1390))
(assert (= (x1567 2127478272) (x5097 2127478272)))
(assert (x447 x1669))
(assert (= (and x5540 x4494) x1583))
(assert (= (and x1738 (not x1087)) x4677))
(assert (x447 x5737))
(assert (= (=> (and (= x5896 0) (= x1765 x6277)) x5952) x5220))
(assert (x447 x1936))
(assert (= x5666 (and (not x6077) x1524)))
(assert (= x3369 (=> (= x5780 (> x3998 x3216)) (and (=> x5780 x467) (=> (and (= (> x3998 x3216) x5538) (not x5780)) (and (=> x5538 x467) (=> (and (and (= (< x374 x3216) x1634) (<= x374 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x374 (x1067 x26)) (= (x980 (- x3216 x3998)) x4587) (= x26 (x476 (x1567 x1112) (x5097 2) 0)) (>= x374 0)) (not x5538)) (and (=> x1634 x467) (=> (and (not x1634) (= x6240 (> x3216 x374))) (and (=> (and (and (<= 0 x5901) (= x5027 (x476 (x1567 x1112) (x5097 2) 0)) (= x5443 (x350 1461501637330902918203684832716283019655932542975 x1823)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5901) (= (x476 (x1567 x5443) (x5097 2) 0) x4691) (= (x3255 x4691) x5901) (= x4610 (> x5901 x3049)) (= x3049 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4587))) (= (x980 (- x374 x3216)) x3857)) (not x6240)) (and (=> (and (not x4610) (and (= (> x5901 x6007) x2660) (= (x4937 (+ x4587 x5901)) x6007))) (and (=> (and (and (= x5745 (x350 1461501637330902918203684832716283019655932542975 x1823)) (= (x476 (x1567 x5745) (x5097 2) 0) x2130) (= x1982 (< 0 x3998))) (not x2660)) (and (=> (not x1982) x851) (=> (and (and (>= x5679 0) (= x3251 (< x5668 x5633)) (= (x476 (x1567 x5679) (x5097 2) 0) x1809) (>= x5633 0) (< x5679 1461501637330902918203684832716283019655932542976) (= (x4272 x1809) x5633) (= x5668 (x980 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3998))) (<= x5633 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x5679 1461501637330902918203684832716283019655932542975)) x1982) (and (=> (and (and (= (x4937 (+ x3998 x5633)) x5989) (= (< x5989 x5633) x4377)) (not x3251)) (and (=> (and (and (<= 0 x5679) (>= 1461501637330902918203684832716283019655932542975 x5679) (> 1461501637330902918203684832716283019655932542976 x5679) (= (x476 (x1567 x5679) (x5097 2) 0) x440) (> 1461501637330902918203684832716283019655932542976 x5679) (>= x5679 0) (>= 1461501637330902918203684832716283019655932542975 x5679)) (not x4377)) x851) (=> x4377 x467))) (=> x3251 x467))))) (=> x2660 x467))) (=> x4610 x467))) (=> x6240 x467)))))))))))
(assert (x447 x613))
(assert (x447 x4760))
(assert (x447 x705))
(assert (= x4275 (and x5342 x723)))
(assert (x447 x5879))
(assert (x447 x2982))
(assert (= x6125 (and x323 x2697)))
(assert (x1990 x599))
(assert (= x739 (and x913 (not x5674))))
(assert (= (and x2861 x4483) x2646))
(assert (= x2546 (and (not x3511) x2072)))
(assert (x54 x459))
(assert (x3903 x6266))
(assert (x447 x3854))
(assert (x447 x5838))
(assert (= (and x6077 x1524) x628))
(assert (x447 x3142))
(assert (= x4364 (and x5270 (not x3275))))
(assert (= (and x3539 x3125) x4453))
(assert (x447 x3462))
(assert (x447 x3917))
(assert (x447 x1142))
(assert (x2992 x4506 (- x3043 x2378)))
(assert (x447 x4935))
(assert (x447 x4366))
(assert (x447 x546))
(assert (x447 x2859))
(assert (=> (>= 10000 x3808) (= (x1567 x3808) (x5097 x3808))))
(assert (=> (<= x2669 10000) (= (x1567 x2669) (x5097 x2669))))
(assert (= (and x1261 x2079) x199))
(assert (= (and x6104 (not x4325)) x2906))
(assert (= x5861 (and x807 x2127)))
(assert (= (x1567 117300739) (x5097 117300739)))
(assert (x447 x2486))
(assert (= x956 (and x475 x5724)))
(assert (x447 x6316))
(assert (= x575 (=> (and (= 0 x2982) (= x4964 x3679)) x794)))
(assert (x447 x2941))
(assert (= (and x699 x2827) x6302))
(assert (= x4124 (or x1608 x2002)))
(assert (x447 x1711))
(assert (x447 x205))
(assert (x447 x5453))
(assert (= (x2338 (x1567 x3465)) x3465))
(assert (x447 x3285))
(assert (= (=> (= x2918 (= x2676 0)) (and (=> x2918 x2633) (=> (and (not x2918) (= x815 (or (> x3399 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x3399) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3399)))))) (and (=> x815 x2633) (=> (not x815) x565))))) x5706))
(assert (x447 x436))
(assert (x447 x2987))
(assert (= x4958 (and x1324 (not x6126))))
(assert (= (and x6249 (not x4069)) x4682))
(assert (x447 x2320))
(assert (x447 x1315))
(assert (= (and x4510 (not x4813)) x2605))
(assert (= (x2338 (x1567 x411)) x411))
(assert (x447 x5581))
(assert (x447 x4878))
(assert (= (=> (= x1459 true) (and (=> (and (not x1459) (= x30 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3701) (and (= (<= x3701 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3701 32))))) (and (=> x30 x2633) (=> (not x30) x3230))) (=> x1459 x2633))) x5393))
(assert (= x2048 (and (not x2368) x1776)))
(assert (= x2522 (and x4134 (not x1013))))
(assert (x447 x4954))
(assert (= x226 (and x6325 x5793)))
(assert (= x1691 (and (not x1225) x6056)))
(assert (x54 x1096))
(assert (x447 x5542))
(assert (= (and x3147 x518) x2299))
(assert (x447 x5409))
(assert (= (and (not x1001) x1) x238))
(assert (= (or x2061 x2199) x154))
(assert (x447 x1467))
(assert (= (and x4138 x4919) x5454))
(assert (= (or x3273 x5908) x537))
(assert (x447 x1526))
(assert (x447 x2022))
(assert (= (and x2911 x1633) x62))
(assert (= x2972 (and x2109 x1822)))
(assert (x1957 x611 x4954 x4398 x3043))
(assert (= (and x3773 x2292) x954))
(assert (= (x2338 (x5097 117300739)) 117300739))
(assert (x447 x5602))
(assert (= (and x3558 (not x2112)) x2363))
(assert (x54 256))
(assert (=> (>= 10000 x3247) (= (x1567 x3247) (x5097 x3247))))
(assert (x447 x592))
(assert (x3960 x4506 x3043 x4398 x3043))
(assert (= x1148 (and x2583 (not x3315))))
(assert (= (or x2650 x5425 x3160 x5093) x2589))
(assert (x447 x3756))
(assert (= (x2338 (x1567 x2417)) x2417))
(assert (x447 x3567))
(assert (x447 x903))
(assert (= x5022 (and x3354 x4656)))
(assert (= (=> (and (= x2521 x2987) (= x4371 x4772)) x3131) x340))
(assert (= x4543 (and x942 (not x6043))))
(assert (x447 x693))
(assert (x447 x857))
(assert (= x3962 (and x1922 (not x2290))))
(assert (x447 x2819))
(assert (x447 x3822))
(assert (= x2082 (=> (and (= x5736 x4827) (= x2570 x720)) x3544)))
(assert (x447 x3242))
(assert (= x1871 (and x576 (not x5063))))
(assert (= (and x4624 x2968) x1384))
(assert (= (and x4451 x4233) x2821))
(assert (x1957 x3043 x4506 x3043 x3216))
(assert (x1628 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4398))
(assert (x447 x5832))
(assert (x1957 x3043 x4506 x611 x4954))
(assert (x3903 x5880))
(assert (x447 x5214))
(assert (= (x2338 (x1567 x6254)) x6254))
(assert (x447 x3178))
(assert (= (and (not x2933) x3577) x2654))
(assert (x447 x4783))
(assert (x447 x662))
(assert (x447 x4358))
(assert (=> (>= 10000 x5260) (= (x5097 x5260) (x1567 x5260))))
(assert (= (and x156 (not x4885)) x6212))
(assert (x447 x5362))
(assert (x447 x3470))
(assert (= (and x3536 x2483) x1731))
(assert (= x1672 (and x2934 x2756)))
(assert (x447 x2361))
(assert (x447 x1727))
(assert (x447 x1564))
(assert (x54 x3905))
(assert (x447 x829))
(assert (x729 x6099))
(assert (x447 x5707))
(assert (x447 x3625))
(assert (= (and (not x4866) x1006) x1060))
(assert (x447 x4686))
(assert (x447 x6073))
(assert (x447 x5422))
(assert (x447 x962))
(assert (x2992 x3043 (- x2378 x3216)))
(assert (= x1946 (and x6067 (not x4253))))
(assert (= (x1567 2514000705) (x5097 2514000705)))
(assert (x447 x2064))
(assert (x3903 x5621))
(assert (=> (<= x633 10000) (= (x1567 x633) (x5097 x633))))
(assert (x2992 x3043 (- x2378 x3043)))
(assert (x5383 x2378))
(assert (= (x2338 (x1567 x4410)) x4410))
(assert (x447 x5357))
(assert (x3903 x3931))
(assert (x447 x1573))
(assert (= x387 (and x6250 x4896)))
(assert (x447 x5808))
(assert (= (and x422 x1768) x4310))
(assert (= (and x4975 (not x2090)) x6243))
(assert (x447 x4901))
(assert (= x6044 (and x4255 (not x2592))))
(assert (= (or x2991 x6296) x4331))
(assert (x447 x2391))
(assert (= x1806 (and x2416 x99)))
(assert (x447 x4591))
(assert (= x5019 (and x751 x3599)))
(assert (x447 x2191))
(assert (= (and x2966 x2052) x1493))
(assert (x5592 (- x3216 x3043)))
(assert (= x586 (and x700 x3331)))
(assert (= x3350 (and x5144 x5981)))
(assert (= 2644395612 (x2338 (x5097 2644395612))))
(assert (x3903 x2331))
(assert (= x6234 (and x3414 (not x2364))))
(assert (= x3 (and x1942 (not x821))))
(assert (= (or (and x4325 x6104) (and x2906 (not x3971))) x4918))
(assert (= (x1567 3573918927) (x5097 3573918927)))
(assert (= x4611 (and (not x3251) x1630)))
(assert (=> (>= 10000 x3039) (= (x1567 x3039) (x5097 x3039))))
(assert (x447 x4522))
(assert (x447 x5196))
(assert (x447 x2223))
(assert (= (x2338 (x1567 x5347)) x5347))
(assert (= (or x1995 x5628 x3528 x1127 x6033 x4014 x658 x2651 x2322 x5400 x2901 x2250 x4568 x4160 x3411 x3893 x4148 x2089) x480))
(assert (= (and x4168 x4427) x2875))
(assert (x5592 (- x4398 x4506)))
(assert (x447 x1124))
(assert (= (and (not x2754) x4279) x3125))
(assert (x2992 x3043 (- x4398 x4954)))
(assert (=> (>= 10000 x1945) (= (x5097 x1945) (x1567 x1945))))
(assert (= x2561 (and x11 x5094)))
(assert (= x4279 (and x1994 (not x5932))))
(assert (= x2088 (and x5825 (not x65))))
(assert (x447 x3247))
(assert (= (and x3629 x3853) x6081))
(assert (= x2454 (and x1561 x335)))
(assert (= x4884 (and x4079 x193)))
(assert (= (=> (and (= x5685 x555) (= x4644 x2206)) x4298) x203))
(assert (x447 x244))
(assert (= x5205 (x2338 (x1567 x5205))))
(assert (= (and x576 x5063) x1498))
(assert (= x4068 (and (not x5606) x4431)))
(assert (= (and x2552 (not x1303)) x6050))
(assert (= (and x4145 (not x5081)) x3757))
(assert (x447 x3560))
(assert (x552 x459))
(assert (= 3088143374 (x2338 (x5097 3088143374))))
(assert (x447 x5030))
(assert (= x521 (and x4004 x4769)))
(assert (x447 x5260))
(assert (= (and x3754 (not x4238)) x2689))
(assert (= x3228 (and (not x6090) x3996)))
(assert (x3903 x4812))
(assert (x2992 x4506 (- x3043 x4954)))
(assert (=> (<= x5621 10000) (= (x1567 x5621) (x5097 x5621))))
(assert (= x574 (and (not x3645) x4390)))
(assert (= x3402 (=> (and (= x503 x4437) (= x3288 x4201)) x342)))
(assert (= x1545 (and x805 (not x3879))))
(assert (x447 x3030))
(assert (x447 x498))
(assert (x447 x3305))
(assert (x447 x1571))
(assert (x447 x5703))
(assert (x3903 x2143))
(assert (x447 x2115))
(assert (=> (>= 10000 x892) (= (x5097 x892) (x1567 x892))))
(assert (x447 x3809))
(assert (= (and x2227 x4746) x3358))
(assert (x447 x2747))
(assert (= (x2338 (x1567 x5443)) x5443))
(assert (x3903 x4756))
(assert (= x2874 (=> (and (= x5934 0) (= x715 x5833)) x4879)))
(assert (x3903 x2628))
(assert (= x6094 (=> (and (= x3803 x3321) (= x5602 0)) x4273)))
(assert (= x3396 (and x81 x2325)))
(assert (= (and x2063 (not x3314)) x4717))
(assert (x447 x5199))
(assert (= (and x5752 x5104) x4270))
(assert (x447 x4476))
(assert (= (and x4992 (not x1602)) x3667))
(assert (x447 x133))
(assert (= (and x4049 x4511) x2122))
(assert (x447 x3254))
(assert (x3960 x3043 x2378 x3216 x3043))
(assert (= x4430 (and x4022 x4058)))
(assert (x447 x5002))
(assert (= (and (not x5315) x6260) x2105))
(assert (= (and x795 (not x211)) x716))
(assert (x447 x1446))
(assert (= x5687 (and x6249 x4069)))
(assert (x447 x3119))
(assert (x447 x4190))
(assert (x447 x1352))
(assert (x2992 x3043 (- x3216 x4398)))
(assert (= x3790 (and (not x4294) x3416)))
(assert (= (and (not x2966) x2052) x6017))
(assert (= x236 (and (not x1634) x5201)))
(assert (x552 x4687))
(assert (x1990 x351))
(assert (= (and x2801 x2316) x6367))
(assert (= (and x1359 (not x3706)) x1693))
(assert (x447 x1480))
(assert (= x2649 (and x2352 (not x4078))))
(assert (x447 x15))
(assert (= (and x645 x2872) x362))
(assert (x447 x5733))
(assert (= x4816 (and x4939 x4978)))
(assert (= (and x1464 x1722) x2229))
(assert (x447 x1848))
(assert (x447 x1566))
(assert (= (and x1269 x3829) x1497))
(assert (x447 x5566))
(assert (= x207 (and x3432 x925)))
(assert (= x452 (and (not x4679) x620)))
(assert (x447 x3946))
(assert (= (and x1617 (not x2786)) x386))
(assert (x1957 x3043 x3216 x3043 x2378))
(assert (= (x5097 1553423035) (x1567 1553423035)))
(assert (= (=> (and (= x6042 x4173) (= x3850 x5006)) x3512) x508))
(assert (= (or x586 x1886 x532 x4933 x5675 x741 x58 x958 x3622) x3718))
(assert (= x3304 (or x2243 x1701 x3016 x5754 x5521 x1344 x2335 x5959 x4127 x2298 x1976 x2145 x1873 x2141 x5514 x5850 x2088)))
(assert (x447 x3373))
(assert (x447 x2412))
(assert (= x4725 (and (not x1963) x4832)))
(assert (x447 x5791))
(assert (x447 x3653))
(assert (= (and x3646 x275) x4861))
(assert (x447 x5631))
(assert (x447 x2284))
(assert (= (x2338 (x1567 x2782)) x2782))
(assert (x447 x827))
(assert (x447 x1818))
(assert (x447 x3866))
(assert (= x1418 (and x706 x3203)))
(assert (= x2632 (or x1752 x1847)))
(assert (x447 x5241))
(assert (= x3671 (and x6116 (not x2755))))
(assert (x3960 x4506 x3043 x2378 x3043))
(assert (= x1113 (or x2823 x2907)))
(assert (x3960 x3216 x3043 x4954 x611))
(assert (= x5439 (and (not x3845) x5671)))
(assert (x447 x4711))
(assert (= x2141 (and x2132 x3368)))
(assert (x447 x5322))
(assert (x1957 x6080 x3043 x4954 x611))
(assert (x447 x5751))
(assert (x447 x2853))
(assert (= x2952 (or x4223 x6279 x5302 x2540 x763 x3673 x4467 x2342 x427)))
(assert (x447 x1187))
(assert (x447 x4637))
(assert (= x4559 (=> (and (= 0 x5463) (= x4395 x2140)) x5519)))
(assert (x447 x675))
(assert (x447 x2912))
(assert (x447 x5530))
(assert (= (and x5457 x3434) x771))
(assert (= (and x1172 x5807) x4752))
(check-sat)
(exit)
