(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x718 0)) (((x263 (x157 x718) (x722 x718) (x483 x718) (x165 x718) (x266 x718) (x113 x718) (x719 x718) (x815 Int)) (x769 (x972 x718) (x453 Int)) (x666 (x770 x718) (x886 x718) (x785 x718) (x439 x718) (x680 x718) (x816 Int)) (x398 (x732 x718) (x371 x718) (x941 x718) (x782 x718) (x73 Int)) (x42 (x253 Int)) (x427 (x875 x718) (x527 x718) (x131 Int)) (x741 (x45 x718) (x740 x718) (x848 x718) (x905 x718) (x444 x718) (x452 x718) (x51 Int)) (x95 (x983 x718) (x108 x718) (x522 x718) (x391 Int)))))
(declare-fun x716 () Bool)
(declare-fun x772 () Int)
(declare-fun x255 () Int)
(declare-fun x342 () Int)
(declare-fun x23 () Bool)
(declare-fun x587 () Int)
(declare-fun x345 () x718)
(declare-fun x425 () Int)
(declare-fun x946 () Bool)
(declare-fun x472 () Int)
(declare-fun x447 () Bool)
(declare-fun x226 () Int)
(declare-fun x328 () Int)
(declare-fun x347 () Int)
(declare-fun x728 () Int)
(declare-fun x890 () Int)
(declare-fun x949 () Int)
(declare-fun x607 () Int)
(declare-fun x749 () Int)
(declare-fun x642 () Int)
(declare-fun x977 () Int)
(declare-fun x381 () Int)
(declare-fun x53 () Bool)
(declare-fun x445 () Int)
(declare-fun x746 () Int)
(declare-fun x586 () Bool)
(declare-fun x927 () Int)
(declare-fun x784 () Int)
(declare-fun x802 () Int)
(declare-fun x938 () Int)
(declare-fun x201 () Int)
(declare-fun x27 () Int)
(declare-fun x530 () x718)
(declare-fun x121 () Int)
(declare-fun x957 () Int)
(declare-fun x193 () Int)
(declare-fun x337 () Int)
(declare-fun x618 () Int)
(declare-fun x646 () Bool)
(declare-fun x22 () Int)
(declare-fun x684 () Int)
(declare-fun x521 () Int)
(declare-fun x2 () Int)
(declare-fun x488 () Bool)
(declare-fun x787 () Int)
(declare-fun x864 () Int)
(declare-fun x436 () Int)
(declare-fun x978 () Int)
(declare-fun x321 () Bool)
(declare-fun x335 () Int)
(declare-fun x697 () Int)
(declare-fun x699 () Int)
(declare-fun x66 () Int)
(declare-fun x46 () Int)
(declare-fun x414 () Int)
(declare-fun x93 () Int)
(declare-fun x403 () Int)
(declare-fun x539 () Int)
(declare-fun x980 () Bool)
(declare-fun x568 () Int)
(declare-fun x640 () Bool)
(declare-fun x325 () Int)
(declare-fun x671 () Int)
(declare-fun x229 () Int)
(declare-fun x960 () Int)
(declare-fun x606 () Int)
(declare-fun x715 () Int)
(declare-fun x630 () Int)
(declare-fun x780 () Int)
(declare-fun x622 () Int)
(declare-fun x417 () Int)
(declare-fun x985 () Bool)
(declare-fun x921 () Int)
(declare-fun x212 () Int)
(declare-fun x604 () Int)
(declare-fun x219 () Int)
(declare-fun x182 () Int)
(declare-fun x800 () Int)
(declare-fun x713 () Int)
(declare-fun x822 () x718)
(declare-fun x701 () Int)
(declare-fun x681 () Int)
(declare-fun x659 () Int)
(declare-fun x213 () Int)
(declare-fun x217 () Int)
(declare-fun x965 () Int)
(declare-fun x244 () Int)
(declare-fun x485 () Int)
(declare-fun x790 (x718) Int)
(declare-fun x173 () Int)
(declare-fun x550 () Int)
(declare-fun x876 () Int)
(declare-fun x744 () Int)
(declare-fun x316 () Bool)
(declare-fun x777 () Int)
(declare-fun x609 () Int)
(declare-fun x536 () x718)
(declare-fun x660 () Bool)
(declare-fun x276 () Int)
(declare-fun x662 () Int)
(declare-fun x552 () Int)
(declare-fun x566 () Int)
(declare-fun x238 () Int)
(declare-fun x357 () Bool)
(declare-fun x653 (Int) Int)
(declare-fun x795 () x718)
(declare-fun x274 () Bool)
(declare-fun x757 (Int Int) Int)
(declare-fun x840 () Bool)
(declare-fun x873 () Int)
(declare-fun x309 () Int)
(declare-fun x730 () Int)
(declare-fun x844 () Int)
(declare-fun x482 () Int)
(declare-fun x384 () Int)
(declare-fun x668 () Int)
(declare-fun x867 () Int)
(declare-fun x304 () Int)
(declare-fun x292 () Int)
(declare-fun x620 () Int)
(declare-fun x675 () Bool)
(declare-fun x147 () x718)
(declare-fun x36 () Bool)
(declare-fun x235 () Int)
(declare-fun x144 () Int)
(declare-fun x429 () Int)
(declare-fun x68 () x718)
(declare-fun x535 () Int)
(declare-fun x308 () Int)
(declare-fun x180 () Bool)
(declare-fun x756 () Int)
(declare-fun x35 () Int)
(declare-fun x585 () Int)
(declare-fun x114 () Int)
(declare-fun x547 () Int)
(declare-fun x541 () Int)
(declare-fun x246 () Bool)
(declare-fun x324 () Int)
(declare-fun x127 () Int)
(declare-fun x838 () Int)
(declare-fun x737 () x718)
(declare-fun x136 () Int)
(declare-fun x179 (Int Int) Int)
(declare-fun x553 () Int)
(declare-fun x803 () Int)
(declare-fun x751 () Bool)
(declare-fun x410 () Int)
(declare-fun x210 () Int)
(declare-fun x898 (Int) Int)
(declare-fun x693 () Int)
(declare-fun x409 () Int)
(declare-fun x508 () Int)
(declare-fun x733 () Int)
(declare-fun x567 () Int)
(declare-fun x512 () Int)
(declare-fun x862 () Int)
(declare-fun x265 () Int)
(declare-fun x804 () Int)
(declare-fun x327 () Bool)
(declare-fun x993 () Int)
(declare-fun x231 () Int)
(declare-fun x479 () Int)
(declare-fun x489 () Int)
(declare-fun x214 () Int)
(declare-fun x366 () Int)
(declare-fun x378 () Int)
(declare-fun x549 () Int)
(declare-fun x142 () Int)
(declare-fun x831 () Int)
(declare-fun x141 () Int)
(declare-fun x870 () Int)
(declare-fun x79 () Int)
(declare-fun x98 () Int)
(declare-fun x677 () Int)
(declare-fun x154 () Int)
(declare-fun x714 () x718)
(declare-fun x281 () Int)
(declare-fun x283 () Bool)
(declare-fun x852 () Int)
(declare-fun x578 () Int)
(declare-fun x788 () Int)
(declare-fun x641 () Bool)
(declare-fun x183 () Bool)
(declare-fun x102 () Bool)
(declare-fun x471 () Bool)
(declare-fun x573 () Int)
(declare-fun x614 (Int) Int)
(declare-fun x64 () Int)
(declare-fun x277 () Bool)
(declare-fun x330 (Int) Int)
(declare-fun x258 () Bool)
(declare-fun x555 (x718) Int)
(declare-fun x259 () Int)
(declare-fun x196 (Int) Int)
(declare-fun x148 () Int)
(declare-fun x596 () Bool)
(declare-fun x450 () Int)
(declare-fun x89 () Int)
(declare-fun x896 () Int)
(declare-fun x899 () Int)
(declare-fun x734 () Bool)
(declare-fun x593 () Int)
(declare-fun x9 () Int)
(declare-fun x969 () Int)
(declare-fun x394 (Int) Int)
(declare-fun x426 () Int)
(declare-fun x597 () Int)
(declare-fun x175 () Int)
(declare-fun x574 () Bool)
(declare-fun x887 () Bool)
(declare-fun x67 () Int)
(declare-fun x639 () Int)
(declare-fun x223 () Int)
(declare-fun x129 () Bool)
(declare-fun x270 () Int)
(declare-fun x377 () Int)
(declare-fun x796 () Int)
(declare-fun x860 () Int)
(declare-fun x364 () Int)
(declare-fun x824 () Bool)
(declare-fun x499 () Int)
(declare-fun x416 () Int)
(declare-fun x300 () Int)
(declare-fun x982 () Int)
(declare-fun x711 () Int)
(declare-fun x376 (Int Int) Int)
(declare-fun x967 () Int)
(declare-fun x745 () Int)
(declare-fun x702 () Int)
(declare-fun x843 () Int)
(declare-fun x670 () Int)
(declare-fun x907 () Int)
(declare-fun x189 () Int)
(declare-fun x405 () Int)
(declare-fun x437 () Int)
(declare-fun x707 () Bool)
(declare-fun x76 (Int) Int)
(declare-fun x470 () x718)
(declare-fun x457 () Bool)
(declare-fun x252 () Int)
(declare-fun x490 () Int)
(declare-fun x107 () Int)
(declare-fun x538 () Int)
(declare-fun x310 () Int)
(declare-fun x467 () Int)
(declare-fun x16 () Int)
(declare-fun x54 () Bool)
(declare-fun x481 () Int)
(declare-fun x306 () Int)
(declare-fun x657 () Bool)
(declare-fun x151 () Int)
(declare-fun x331 () Int)
(declare-fun x506 (Int) Int)
(declare-fun x885 () Int)
(declare-fun x832 () Bool)
(declare-fun x729 () Int)
(declare-fun x658 () Int)
(declare-fun x379 () Int)
(declare-fun x346 () Int)
(declare-fun x687 () x718)
(declare-fun x936 () Int)
(declare-fun x311 () Int)
(declare-fun x140 () Int)
(declare-fun x685 () Int)
(declare-fun x492 () Bool)
(declare-fun x143 () Int)
(declare-fun x476 () Int)
(declare-fun x348 () Int)
(declare-fun x935 () Int)
(declare-fun x99 () Int)
(declare-fun x884 () Int)
(declare-fun x551 () Int)
(declare-fun x343 () Int)
(declare-fun x632 () Int)
(declare-fun x355 () Int)
(declare-fun x71 () Int)
(declare-fun x153 () Int)
(declare-fun x945 () Int)
(declare-fun x710 () Int)
(declare-fun x866 () Int)
(declare-fun x603 () Int)
(declare-fun x663 () Int)
(declare-fun x63 () Bool)
(declare-fun x926 () Int)
(declare-fun x156 () Int)
(declare-fun x370 () Int)
(declare-fun x628 () Bool)
(declare-fun x645 () Int)
(declare-fun x812 () Bool)
(declare-fun x636 () Int)
(declare-fun x925 () x718)
(declare-fun x242 () Int)
(declare-fun x644 () Bool)
(declare-fun x562 () Int)
(declare-fun x239 () Bool)
(declare-fun x904 (Int) Int)
(declare-fun x917 () Int)
(declare-fun x171 () Int)
(declare-fun x845 () x718)
(declare-fun x823 () Bool)
(declare-fun x783 () Int)
(declare-fun x275 () Bool)
(declare-fun x940 () Int)
(declare-fun x408 () Bool)
(declare-fun x690 () Int)
(declare-fun x101 () Int)
(declare-fun x170 () x718)
(declare-fun x743 () Int)
(declare-fun x297 () Int)
(declare-fun x383 () x718)
(declare-fun x901 () Int)
(declare-fun x956 () Int)
(declare-fun x412 () Int)
(declare-fun x117 () Bool)
(declare-fun x942 () Int)
(declare-fun x598 () Int)
(declare-fun x272 (Int Int) Int)
(declare-fun x789 () Int)
(declare-fun x908 () Int)
(declare-fun x188 () Int)
(declare-fun x17 () Int)
(declare-fun x929 () Int)
(declare-fun x106 () Int)
(declare-fun x88 () Int)
(declare-fun x563 () Int)
(declare-fun x861 () Bool)
(declare-fun x215 () Int)
(declare-fun x169 () Int)
(declare-fun x494 () Int)
(declare-fun x373 () Int)
(declare-fun x683 (Int Int) Int)
(declare-fun x301 () Int)
(declare-fun x752 () Bool)
(declare-fun x868 () Bool)
(declare-fun x289 () Int)
(declare-fun x28 () Int)
(declare-fun x225 () Int)
(declare-fun x273 () Bool)
(declare-fun x626 () Int)
(declare-fun x913 () Bool)
(declare-fun x580 () Int)
(declare-fun x62 () Int)
(declare-fun x813 () Int)
(declare-fun x44 () x718)
(declare-fun x260 () Int)
(declare-fun x820 () Int)
(declare-fun x753 () Int)
(declare-fun x975 () Int)
(declare-fun x937 () Int)
(declare-fun x758 () Int)
(declare-fun x287 () Int)
(declare-fun x455 () Int)
(declare-fun x397 () Int)
(declare-fun x525 () Bool)
(declare-fun x65 () Bool)
(declare-fun x944 () Bool)
(declare-fun x588 () Int)
(declare-fun x958 (Int) Int)
(declare-fun x835 () Int)
(declare-fun x571 () Int)
(declare-fun x59 () Int)
(declare-fun x794 () Int)
(declare-fun x396 () x718)
(declare-fun x608 () Int)
(declare-fun x96 () Bool)
(declare-fun x334 () Int)
(declare-fun x234 () Int)
(declare-fun x695 () Int)
(declare-fun x735 () Int)
(declare-fun x161 () Int)
(declare-fun x765 () Int)
(declare-fun x723 () Int)
(declare-fun x313 () Int)
(declare-fun x674 () Int)
(declare-fun x406 () Bool)
(declare-fun x779 () Int)
(declare-fun x871 () x718)
(declare-fun x933 () Int)
(declare-fun x52 () Int)
(declare-fun x390 () Int)
(declare-fun x955 () Int)
(declare-fun x768 () Int)
(declare-fun x928 () Int)
(declare-fun x480 () Int)
(declare-fun x233 () Bool)
(declare-fun x631 () Int)
(declare-fun x177 () Int)
(declare-fun x922 () Int)
(declare-fun x228 () Int)
(declare-fun x207 () Int)
(declare-fun x240 () Bool)
(declare-fun x656 () Int)
(declare-fun x854 () Int)
(declare-fun x56 () x718)
(declare-fun x828 () Int)
(declare-fun x736 () Int)
(declare-fun x446 () Int)
(declare-fun x375 () Bool)
(declare-fun x808 () Bool)
(declare-fun x961 () Int)
(declare-fun x18 () Int)
(declare-fun x424 () Int)
(declare-fun x709 () Bool)
(declare-fun x186 () Bool)
(declare-fun x973 () Int)
(declare-fun x889 () Bool)
(declare-fun x468 () Int)
(declare-fun x692 () Int)
(declare-fun x407 () Int)
(declare-fun x914 () Int)
(declare-fun x615 () Bool)
(declare-fun x776 () Int)
(declare-fun x565 () x718)
(declare-fun x109 () Int)
(declare-fun x570 () Int)
(declare-fun x544 () Bool)
(declare-fun x135 () Bool)
(declare-fun x256 () Int)
(declare-fun x669 () x718)
(declare-fun x900 () Int)
(declare-fun x526 () Int)
(declare-fun x511 () Int)
(declare-fun x358 () Int)
(declare-fun x24 () Bool)
(declare-fun x55 (Int) Int)
(declare-fun x817 () Int)
(declare-fun x633 () Bool)
(declare-fun x185 () Int)
(declare-fun x463 () Int)
(declare-fun x592 () Int)
(declare-fun x317 () Int)
(declare-fun x216 () Int)
(declare-fun x995 () Int)
(declare-fun x74 () Int)
(declare-fun x271 () Int)
(declare-fun x91 () Int)
(declare-fun x505 () Int)
(declare-fun x698 () Int)
(declare-fun x793 () Int)
(declare-fun x349 () Bool)
(declare-fun x888 () Int)
(declare-fun x590 () x718)
(declare-fun x971 () Int)
(declare-fun x441 () Int)
(declare-fun x261 () Int)
(declare-fun x747 () Int)
(declare-fun x863 () Int)
(declare-fun x934 () Int)
(declare-fun x87 () Int)
(declare-fun x58 () Bool)
(declare-fun x760 () Bool)
(declare-fun x952 () Bool)
(declare-fun x320 () Bool)
(declare-fun x546 () Int)
(declare-fun x393 () Int)
(declare-fun x81 () Int)
(declare-fun x218 () Int)
(declare-fun x895 () Int)
(declare-fun x672 () Bool)
(declare-fun x362 () Bool)
(declare-fun x34 () Int)
(declare-fun x792 () Bool)
(declare-fun x726 () Int)
(declare-fun x257 () Bool)
(declare-fun x893 () Bool)
(declare-fun x1 () Int)
(declare-fun x295 () Int)
(declare-fun x865 () Int)
(declare-fun x629 () Int)
(declare-fun x678 () Int)
(declare-fun x115 () Int)
(declare-fun x912 () Int)
(declare-fun x206 () Bool)
(declare-fun x809 () Int)
(declare-fun x123 () Int)
(declare-fun x537 () Int)
(declare-fun x176 () Int)
(declare-fun x50 () Int)
(declare-fun x731 () Int)
(declare-fun x43 () Int)
(declare-fun x145 () x718)
(declare-fun x503 (x718) Int)
(declare-fun x529 () Int)
(declare-fun x627 () Int)
(declare-fun x520 () Int)
(declare-fun x11 () Int)
(declare-fun x105 () Int)
(declare-fun x882 () Int)
(declare-fun x458 () Int)
(declare-fun x891 () Int)
(declare-fun x774 () Int)
(declare-fun x339 () Int)
(declare-fun x433 () Int)
(declare-fun x841 () Int)
(declare-fun x497 () Int)
(declare-fun x307 () Int)
(declare-fun x600 () Bool)
(declare-fun x763 () Bool)
(declare-fun x923 () Bool)
(declare-fun x742 () x718)
(declare-fun x515 () Int)
(declare-fun x116 () Int)
(declare-fun x679 () Int)
(declare-fun x202 () Int)
(declare-fun x532 () Bool)
(declare-fun x351 () Bool)
(declare-fun x199 () Int)
(declare-fun x340 () Int)
(declare-fun x402 () Int)
(declare-fun x124 (Int) Int)
(declare-fun x279 () Int)
(declare-fun x836 () Bool)
(declare-fun x100 () Int)
(declare-fun x162 () x718)
(declare-fun x798 () Int)
(declare-fun x869 () Int)
(declare-fun x591 () Int)
(declare-fun x372 () Int)
(declare-fun x293 () Int)
(declare-fun x469 () Bool)
(declare-fun x318 () Int)
(declare-fun x220 () Int)
(declare-fun x103 () Int)
(declare-fun x475 (Int) Int)
(declare-fun x146 () Int)
(declare-fun x25 () Int)
(declare-fun x635 () Int)
(declare-fun x717 () Int)
(declare-fun x319 () Int)
(declare-fun x104 () Int)
(declare-fun x712 () Int)
(declare-fun x418 () Int)
(declare-fun x286 () Int)
(declare-fun x877 () Bool)
(declare-fun x422 (Int) Int)
(declare-fun x278 (Int) Int)
(declare-fun x827 () Int)
(declare-fun x5 () Int)
(declare-fun x558 () Int)
(declare-fun x602 () Int)
(declare-fun x523 () Int)
(declare-fun x359 () Int)
(declare-fun x616 () Int)
(declare-fun x70 () Int)
(declare-fun x894 () Int)
(declare-fun x762 () x718)
(declare-fun x649 () Int)
(declare-fun x879 () Int)
(declare-fun x94 () Int)
(declare-fun x621 () Int)
(declare-fun x389 () Int)
(declare-fun x947 () Int)
(declare-fun x708 () Bool)
(declare-fun x323 () Bool)
(declare-fun x49 () Int)
(declare-fun x799 () Int)
(declare-fun x987 () Int)
(declare-fun x968 () Int)
(declare-fun x648 () Int)
(declare-fun x948 () Bool)
(declare-fun x979 () Int)
(declare-fun x638 () Int)
(declare-fun x514 () x718)
(declare-fun x797 () Int)
(declare-fun x493 () Bool)
(declare-fun x172 () Int)
(declare-fun x209 () x718)
(declare-fun x916 () Int)
(declare-fun x254 () Int)
(declare-fun x200 () Int)
(declare-fun x290 () Bool)
(declare-fun x401 () Int)
(declare-fun x241 () Int)
(declare-fun x748 () Int)
(declare-fun x559 () Int)
(declare-fun x363 () Int)
(declare-fun x516 () Int)
(declare-fun x738 () Int)
(declare-fun x943 (Int) Int)
(declare-fun x361 () Int)
(declare-fun x291 () Int)
(declare-fun x150 () Int)
(declare-fun x60 () Bool)
(declare-fun x487 () Bool)
(declare-fun x194 () Bool)
(declare-fun x727 () Int)
(declare-fun x464 () Int)
(declare-fun x931 () Int)
(declare-fun x611 () Int)
(declare-fun x761 () Int)
(declare-fun x915 () Int)
(declare-fun x158 () Int)
(declare-fun x392 () Int)
(declare-fun x41 () Int)
(declare-fun x332 (x718) Int)
(declare-fun x356 () Bool)
(declare-fun x443 () Int)
(declare-fun x920 () Int)
(declare-fun x509 () Bool)
(declare-fun x617 () Int)
(declare-fun x75 () Int)
(declare-fun x126 () Int)
(declare-fun x120 () Int)
(declare-fun x498 () x718)
(declare-fun x137 () Bool)
(declare-fun x501 () Int)
(declare-fun x57 () Int)
(declare-fun x15 () Bool)
(declare-fun x661 () Int)
(declare-fun x449 () x718)
(declare-fun x673 () Int)
(declare-fun x10 () Int)
(declare-fun x47 () Int)
(declare-fun x786 () Bool)
(declare-fun x395 (Int) Int)
(declare-fun x12 () Bool)
(declare-fun x78 () Int)
(declare-fun x992 () Bool)
(declare-fun x435 () Int)
(declare-fun x237 () Bool)
(declare-fun x400 () Int)
(declare-fun x326 () Int)
(declare-fun x442 () Int)
(declare-fun x61 () Bool)
(declare-fun x811 () Bool)
(declare-fun x14 () Bool)
(declare-fun x806 () Bool)
(declare-fun x251 () Int)
(declare-fun x456 () Int)
(declare-fun x83 () Int)
(declare-fun x312 () x718)
(declare-fun x910 () Int)
(declare-fun x415 () Int)
(declare-fun x338 () Int)
(declare-fun x132 () Bool)
(declare-fun x39 () Int)
(declare-fun x504 () Int)
(declare-fun x880 () Bool)
(declare-fun x766 () Int)
(declare-fun x694 () Int)
(declare-fun x589 () Int)
(declare-fun x399 () Int)
(declare-fun x495 () Int)
(declare-fun x528 () Int)
(declare-fun x85 () Int)
(declare-fun x13 () Int)
(declare-fun x830 () Int)
(declare-fun x267 () Int)
(declare-fun x721 () Int)
(declare-fun x997 () Bool)
(declare-fun x298 () Int)
(declare-fun x134 () Int)
(declare-fun x222 () Int)
(declare-fun x454 () Int)
(declare-fun x582 () Bool)
(declare-fun x564 () x718)
(declare-fun x850 () Int)
(declare-fun x299 () Int)
(declare-fun x305 () Int)
(declare-fun x448 () Bool)
(declare-fun x686 () Int)
(declare-fun x82 () Int)
(declare-fun x37 () Int)
(declare-fun x976 () Bool)
(declare-fun x625 () x718)
(declare-fun x966 () Int)
(declare-fun x190 () Bool)
(declare-fun x484 () Int)
(declare-fun x491 () Int)
(declare-fun x572 () Int)
(declare-fun x750 () Int)
(declare-fun x556 () Int)
(declare-fun x288 () Int)
(declare-fun x460 () Int)
(declare-fun x302 () Int)
(declare-fun x419 () Int)
(declare-fun x909 () Bool)
(declare-fun x706 () Int)
(declare-fun x367 () Int)
(declare-fun x80 () Int)
(declare-fun x688 () Int)
(declare-fun x208 () Int)
(declare-fun x974 () Bool)
(declare-fun x152 () Int)
(declare-fun x48 () Int)
(declare-fun x174 () Int)
(declare-fun x519 (Int) Int)
(declare-fun x700 () Int)
(declare-fun x601 () Int)
(declare-fun x874 () Int)
(declare-fun x69 () Bool)
(declare-fun x380 () Int)
(declare-fun x991 () Int)
(declare-fun x465 () x718)
(declare-fun x204 () Int)
(declare-fun x775 () Int)
(declare-fun x247 () Int)
(declare-fun x655 () Int)
(declare-fun x451 () Bool)
(declare-fun x650 () Int)
(declare-fun x576 () Int)
(declare-fun x341 () Int)
(declare-fun x315 () Int)
(declare-fun x125 () Int)
(declare-fun x224 () Int)
(declare-fun x605 () Int)
(declare-fun x584 () Int)
(declare-fun x994 () Bool)
(declare-fun x111 () Int)
(declare-fun x962 (Int) Int)
(declare-fun x462 () Int)
(declare-fun x853 () Int)
(declare-fun x703 () Int)
(declare-fun x507 () Bool)
(declare-fun x878 () Int)
(declare-fun x805 () Int)
(declare-fun x264 () Int)
(declare-fun x474 () Bool)
(declare-fun x918 () Int)
(declare-fun x951 () Int)
(declare-fun x3 () Int)
(declare-fun x583 () Bool)
(declare-fun x821 () Int)
(declare-fun x428 () Int)
(declare-fun x689 () Int)
(declare-fun x704 () Int)
(declare-fun x897 (Int) Int)
(declare-fun x248 () Int)
(declare-fun x579 () x718)
(declare-fun x581 () Int)
(declare-fun x31 () Int)
(declare-fun x163 () Int)
(declare-fun x842 () Bool)
(declare-fun x612 () Bool)
(declare-fun x577 (Int) Int)
(declare-fun x322 () Int)
(declare-fun x939 () Int)
(declare-fun x534 (Int) Int)
(declare-fun x545 () Int)
(declare-fun x432 () Int)
(declare-fun x561 () Bool)
(declare-fun x369 () Int)
(declare-fun x365 () Int)
(declare-fun x954 () Int)
(declare-fun x599 () Bool)
(declare-fun x696 () Int)
(declare-fun x755 () Int)
(declare-fun x434 () Bool)
(declare-fun x296 () Int)
(declare-fun x166 () Int)
(declare-fun x903 () Int)
(declare-fun x97 () x718)
(declare-fun x651 () Int)
(declare-fun x814 () Int)
(declare-fun x665 () Int)
(declare-fun x249 () Int)
(declare-fun x20 () Int)
(declare-fun x513 () Int)
(declare-fun x430 () Int)
(declare-fun x133 () Int)
(declare-fun x557 () Int)
(declare-fun x705 () Int)
(declare-fun x781 (Int) Int)
(declare-fun x801 () Int)
(declare-fun x682 () Int)
(declare-fun x773 () Int)
(declare-fun x859 () Bool)
(declare-fun x314 () Int)
(declare-fun x423 () Int)
(declare-fun x7 () Bool)
(declare-fun x924 () Bool)
(declare-fun x21 () Int)
(declare-fun x990 () Int)
(declare-fun x4 () Int)
(declare-fun x387 () Int)
(declare-fun x857 () Int)
(declare-fun x829 () Int)
(declare-fun x989 () Int)
(declare-fun x119 () Bool)
(declare-fun x518 (Int) x718)
(declare-fun x623 (Int Int) Int)
(declare-fun x524 (Int) Int)
(declare-fun x459 () Bool)
(declare-fun x739 () Bool)
(declare-fun x86 () Int)
(declare-fun x344 () Bool)
(declare-fun x771 () Int)
(declare-fun x856 () Int)
(declare-fun x691 () Bool)
(declare-fun x404 () Bool)
(declare-fun x138 () Int)
(declare-fun x818 () Int)
(declare-fun x440 () Int)
(declare-fun x164 () Int)
(declare-fun x517 () Bool)
(declare-fun x118 () Int)
(declare-fun x531 () Int)
(declare-fun x280 () Int)
(declare-fun x624 () Bool)
(declare-fun x388 () Int)
(declare-fun x421 () Int)
(declare-fun x38 () Int)
(declare-fun x986 () Bool)
(declare-fun x329 () Int)
(declare-fun x837 () Int)
(declare-fun x191 () Bool)
(declare-fun x754 () Int)
(declare-fun x30 (Int) Int)
(declare-fun x647 () Int)
(declare-fun x420 () Int)
(declare-fun x872 () Int)
(declare-fun x198 () Int)
(declare-fun x502 () Int)
(declare-fun x294 () Bool)
(define-fun x92 ((x718 x718) (x510 Int)) x718 (ite ((_ is x263) x718) (x263 (x157 x718) (x722 x718) (x483 x718) (x165 x718) (x266 x718) (x113 x718) (x719 x718) (+ (x815 x718) x510)) (ite ((_ is x741) x718) (x741 (x45 x718) (x740 x718) (x848 x718) (x905 x718) (x444 x718) (x452 x718) (+ (x51 x718) x510)) (ite ((_ is x666) x718) (x666 (x770 x718) (x886 x718) (x785 x718) (x439 x718) (x680 x718) (+ (x816 x718) x510)) (ite ((_ is x398) x718) (x398 (x732 x718) (x371 x718) (x941 x718) (x782 x718) (+ x510 (x73 x718))) (ite ((_ is x95) x718) (x95 (x983 x718) (x108 x718) (x522 x718) (+ (x391 x718) x510)) (ite ((_ is x769) x718) (x769 (x972 x718) (+ (x453 x718) x510)) (ite ((_ is x427) x718) (x427 (x875 x718) (x527 x718) (+ (x131 x718) x510)) (x42 (+ x510 (x253 x718)))))))))))
(define-fun x385 ((x149 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x149) (<= 0 x149)) x149 (- x149 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x996 ((x149 Int)) Int (ite (and (< x149 0) (>= x149 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x149) x149))
(define-fun x192 ((x149 Int)) Int (ite (and (<= 0 x149) (< x149 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x149 (ite (and (< x149 231584178474632390847141970017375815706539969331281128078915168015826259279872) (>= x149 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- x149 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (< x149 0) (>= x149 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x149 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x683 x149 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x637 ((x883 Int)) Bool (and (< x883 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x883 0)))
(define-fun x543 ((x883 Int) (x413 Int)) Bool (=> (and (< 0 x413) (< 0 x883)) (and (>= x883 (x623 x883 x413)) (>= (x623 x883 x413) 0))))
(define-fun x243 ((x883 Int) (x413 Int)) Bool (=> (and (and (>= x413 1) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x413)) (and (< x883 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x883 0))) (and (< (x623 x883 x413) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= (x623 x883 x413) 0))))
(define-fun x810 ((x883 Int) (x413 Int)) Bool (=> (and (< x413 x883) (< 1 x413)) (> x883 (x623 x883 x413))))
(define-fun x950 ((x883 Int) (x413 Int)) Bool (=> (and (< 0 x413) (< 0 x883)) (= (< x883 x413) (= 0 (x623 x883 x413)))))
(define-fun x911 ((x883 Int)) Bool (= (x623 0 x883) 0))
(define-fun x930 ((x883 Int)) Bool (= x883 (x623 x883 1)))
(define-fun x411 ((x883 Int)) Bool (=> (not (= 0 x883)) (= (x623 x883 x883) 1)))
(define-fun x284 ((x883 Int)) Bool (and (x411 x883) (x930 x883) (x911 x883)))
(define-fun x360 ((x883 Int)) Bool (and (= x883 (x376 x883 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x883 (x376 115792089237316195423570985008687907853269984665640564039457584007913129639935 x883))))
(define-fun x478 ((x883 Int)) Bool (and (= (x376 0 x883) 0) (= (x376 x883 0) 0)))
(define-fun x19 ((x883 Int)) Bool (= x883 (x376 x883 x883)))
(define-fun x610 ((x883 Int)) Bool (and (x19 x883) (x360 x883) (x478 x883)))
(define-fun x833 ((x883 Int) (x413 Int)) Bool (= (x376 x883 x413) (x376 x413 x883)))
(define-fun x906 ((x883 Int) (x413 Int)) Bool (and (=> (>= x413 0) (<= (x376 x883 x413) x413)) (<= 0 (x376 x883 x413)) (=> (>= x883 0) (>= x883 (x376 x883 x413)))))
(define-fun x540 ((x883 Int) (x413 Int)) Bool (and (x833 x883 x413) (x906 x883 x413)))
(define-fun x184 ((x883 Int)) Bool (= (x683 x883 4294967296) (x376 x883 4294967295)))
(define-fun x77 ((x883 Int)) Bool (and (x540 x883 4294967295) (x184 x883)))
(define-fun x892 ((x883 Int) (x413 Int)) Bool (and (>= (x683 x883 x413) 0) (< (x683 x883 x413) x413)))
(define-fun x84 ((x883 Int) (x413 Int)) Bool (=> (and (> x413 0) (>= x883 0)) (= (= x883 (x683 x883 x413)) (< x883 x413))))
(define-fun x542 ((x883 Int) (x413 Int)) Bool (=> (and (and (> (+ x413 x413) x883) (<= x413 x883)) (> x413 0)) (= (- x883 x413) (x683 x883 x413))))
(define-fun x634 ((x883 Int)) Bool (= 0 (x683 0 x883)))
(define-fun x807 ((x883 Int)) Bool (= 0 (x683 x883 1)))
(define-fun x654 ((x883 Int)) Bool (= (x683 x883 x883) 0))
(define-fun x725 ((x883 Int)) Bool (and (x654 x883) (x807 x883) (x634 x883)))
(define-fun x500 ((x883 Int)) Bool (= (x683 x883 340282366920938463463374607431768211456) (x376 x883 340282366920938463463374607431768211455)))
(define-fun x112 ((x883 Int)) Bool (and (x540 x883 340282366920938463463374607431768211455) (x500 x883)))
(define-fun x959 ((x883 Int) (x413 Int)) Bool (=> (and (< 0 x413) (< 0 x883)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x757 x883 x413)) (= (x623 (x192 (x757 x883 x413)) x883) x413))))
(define-fun x548 ((x883 Int) (x413 Int)) Bool (=> (and (not (= 0 x413)) (not (= x883 0))) (and (= (x623 (x757 x883 x413) x883) x413) (= x883 (x623 (x757 x883 x413) x413)))))
(define-fun x160 ((x883 Int) (x413 Int)) Bool (=> (and (< 0 x883) (< 0 x413)) (= (< (x623 115792089237316195423570985008687907853269984665640564039457584007913129639935 x883) x413) (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x757 x883 x413)))))
(define-fun x849 ((x883 Int) (x413 Int)) Bool (and (= (x192 (x757 (- x883 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x413 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x192 (x757 x883 x413))) (= (x192 (x757 x883 x413)) (x192 (x757 x883 (- x413 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x192 (x757 (- x883 115792089237316195423570985008687907853269984665640564039457584007913129639936) x413)) (x192 (x757 x883 x413)))))
(define-fun x858 ((x883 Int) (x413 Int)) Bool (and (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x413) (> x413 0)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x883) (< 0 x883))) (= (<= (x757 x883 x413) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x883 (x623 57896044618658097711785492504343953926634992332820282019728792003956564819967 x413)))) (=> (and (and (< 0 x413) (<= x413 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x883 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x883 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (>= (x623 57896044618658097711785492504343953926634992332820282019728792003956564819968 x413) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x883)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x757 (- x883 115792089237316195423570985008687907853269984665640564039457584007913129639936) x413)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x883) (> x883 0)) (and (<= x413 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x413 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x757 x883 (- x413 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= (x623 57896044618658097711785492504343953926634992332820282019728792003956564819968 x883) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x413)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x413) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x413)) (and (> x883 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x883 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x757 (- x883 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x413 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (>= (x623 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x413)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x883))))))
(define-fun x778 ((x883 Int)) Bool (and (= (x757 0 x883) 0) (= (x757 x883 0) 0)))
(define-fun x29 ((x883 Int)) Bool (and (= (x757 1 x883) x883) (= (x757 x883 1) x883)))
(define-fun x333 ((x883 Int)) Bool (and (x29 x883) (x778 x883)))
(define-fun x664 ((x883 Int)) Bool (= (+ (x683 x883 32) (x376 x883 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (x192 x883)))
(define-fun x575 ((x883 Int)) Bool (and (x664 x883) (x540 x883 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x791 ((x883 Int) (x413 Int)) Bool (=> (> x413 0) (= x883 (+ (x683 x883 x413) (x757 (x623 x883 x413) x413)))))
(define-fun x354 ((x883 Int) (x413 Int)) Bool (and (x84 x883 x413) (x791 x883 x413) (x892 x883 x413)))
(define-fun x353 ((x883 Int)) Bool (= (x192 x883) (+ (x376 x883 115792089237316195423570985008687907852929702298719625575994209400481361428480) (x683 x883 340282366920938463463374607431768211456))))
(define-fun x250 ((x883 Int)) Bool (and (x353 x883) (x540 x883 115792089237316195423570985008687907852929702298719625575994209400481361428480)))
(define-fun x461 ((x883 Int)) Bool (= (+ (x683 x883 4294967296) (x376 x883 115792089237316195423570985008687907853269984665640564039457584007908834672640)) (x192 x883)))
(define-fun x181 ((x883 Int)) Bool (and (x461 x883) (x540 x883 115792089237316195423570985008687907853269984665640564039457584007908834672640)))
(define-fun x676 ((x883 Int) (x413 Int)) Bool (= (x757 x883 x413) (x757 x413 x883)))
(define-fun x964 ((x883 Int) (x413 Int)) Bool (and (=> (and (> x883 0) (> 0 x413)) (> 0 (x757 x883 x413))) (=> (and (> x413 0) (> 0 x883)) (> 0 (x757 x883 x413))) (=> (and (> 0 x883) (> 0 x413)) (< 0 (x757 x883 x413))) (=> (and (< 0 x883) (> x413 0)) (> (x757 x883 x413) 0))))
(define-fun x970 ((x883 Int) (x413 Int)) Bool (and (x676 x883 x413) (x959 x883 x413) (x849 x883 x413) (x858 x883 x413) (x160 x883 x413) (x964 x883 x413) (x548 x883 x413)))
(define-fun x919 ((x883 Int) (x413 Int)) Bool (=> (and (< 0 x883) (> x413 0)) (and (>= x883 (x757 (x623 x883 x413) x413)) (> (x757 (x623 x883 x413) x413) (- x883 x413)))))
(define-fun x374 ((x883 Int) (x413 Int)) Bool (and (x810 x883 x413) (x950 x883 x413) (x243 x883 x413) (x543 x883 x413) (x919 x883 x413)))
(define-fun x839 ((x883 Int)) Bool (= (x962 x883) (ite (< (x376 x883 340282366920938463463374607431768211455) 170141183460469231731687303715884105728) (x376 x883 340282366920938463463374607431768211455) (+ 115792089237316195423570985008687907852929702298719625575994209400481361428480 (x376 x883 340282366920938463463374607431768211455)))))
(define-fun x221 ((x883 Int)) Bool (= (x376 x883 255) (x683 x883 256)))
(define-fun x110 ((x883 Int)) Bool (and (x221 x883) (x540 x883 255)))
(define-fun x336 ((x883 Int)) Bool (= (x376 x883 1461501637330902918203684832716283019655932542975) (x683 x883 1461501637330902918203684832716283019655932542976)))
(define-fun x122 ((x883 Int)) Bool (and (x336 x883) (x540 x883 1461501637330902918203684832716283019655932542975)))
(define-fun x167 ((x382 Int)) Int (ite (= x382 128) x381 (x124 x382)))
(define-fun x847 ((x382 Int)) Int (ite (= 160 x382) x495 (x167 x382)))
(define-fun x953 ((x382 Int)) Int (ite (= 192 x382) x441 (x847 x382)))
(define-fun x759 ((x382 Int)) Int (ite (= 224 x382) x884 (x953 x382)))
(define-fun x90 ((x382 Int)) Int (ite (= 256 x382) x229 (x759 x382)))
(define-fun x881 ((x382 Int)) Int (ite (= 128 x382) x335 (x614 x382)))
(define-fun x245 ((x382 Int)) Int (ite (= x382 160) x289 (x278 x382)))
(define-fun x477 ((x382 Int)) Int (ite (= x382 192) x210 (x534 x382)))
(define-fun x988 ((x382 Int)) Int (ite (= x382 224) x852 (x506 x382)))
(define-fun x643 ((x382 Int)) Int (ite (= 256 x382) x508 (x781 x382)))
(define-fun x724 ((x382 Int)) Int (ite (= x382 288) x592 (x422 x382)))
(define-fun x285 ((x382 Int)) Int (ite (= x382 512) x831 (x30 x382)))
(define-fun x834 ((x382 Int)) Int (ite (= x382 544) x307 (x285 x382)))
(define-fun x227 ((x382 Int)) Int (ite (= 576 x382) x485 (x834 x382)))
(define-fun x282 ((x382 Int)) Int (ite (= x382 608) x733 (x227 x382)))
(define-fun x496 ((x382 Int)) Int (ite (= 640 x382) x829 (x282 x382)))
(define-fun x130 ((x382 Int)) Int (ite (= x382 672) x1 (x496 x382)))
(define-fun x195 ((x382 Int)) Int (x55 x382))
(define-fun x652 ((x382 Int)) Int (ite (= 128 x382) x279 (x577 x382)))
(define-fun x594 ((x382 Int)) Int (ite (= x382 x552) x835 (x898 x382)))
(define-fun x72 ((x382 Int)) Int (ite (= x382 x476) x199 (x196 x382)))
(define-fun x262 ((x382 Int)) Int (ite (= 160 x382) x882 (x330 x382)))
(define-fun x846 ((x382 Int)) Int (ite x974 (x330 x382) (x262 x382)))
(define-fun x211 ((x382 Int)) Int (ite (= x581 x382) x476 (x653 x382)))
(define-fun x613 ((x382 Int)) Int (ite x974 (x653 x382) (x211 x382)))
(define-fun x168 ((x382 Int)) Int (ite x974 (x196 x382) (x72 x382)))
(define-fun x8 ((x382 Int)) Int (ite (= x942 x382) x238 (x897 x382)))
(define-fun x203 ((x382 Int)) Int (ite x974 (x897 x382) (ite x992 (x897 x382) (x8 x382))))
(define-fun x720 ((x382 Int)) Int (ite (= x189 x382) x968 (x904 x382)))
(define-fun x902 ((x382 Int)) Int (ite x974 (x904 x382) (ite x992 (x904 x382) (x720 x382))))
(define-fun x981 ((x382 Int)) Int (ite (= x78 x382) x454 (x943 x382)))
(define-fun x533 ((x382 Int)) Int (ite (= x869 x382) x571 (x981 x382)))
(define-fun x33 ((x382 Int)) Int (ite (= x397 x382) x454 (x533 x382)))
(define-fun x155 ((x382 Int)) Int (ite x493 (x533 x382) (x33 x382)))
(define-fun x486 ((x382 Int)) Int (ite (= x843 x382) x454 (x155 x382)))
(define-fun x554 ((x382 Int)) Int (ite (= x606 x382) x879 (x486 x382)))
(define-fun x128 ((x382 x718)) Int (ite (= x382 x44) x526 (x332 x382)))
(define-fun x431 ((x382 x718)) Int (ite (= x579 x382) x142 (x128 x382)))
(define-fun x178 ((x382 x718)) Int (ite (= x579 x382) x213 (x431 x382)))
(define-fun x825 ((x382 x718)) Int (ite (= x382 x871) x748 (x178 x382)))
(define-fun x473 ((x382 x718)) Int (ite (= x871 x382) x59 (x825 x382)))
(define-fun x40 ((x382 x718)) Int (ite x327 (x128 x382) (x473 x382)))
(define-fun x984 ((x382 x718)) Int (ite (= x382 x925) x650 (x40 x382)))
(define-fun x819 ((x382 x718)) Int (ite x615 (x332 x382) (ite x493 (x40 x382) (x984 x382))))
(define-fun x6 ((x382 Int)) Int (ite (= 128 x382) x2 (x394 x382)))
(define-fun x386 ((x382 Int)) Int (ite (= x382 160) x580 (x6 x382)))
(define-fun x236 ((x382 Int)) Int (ite (= x382 192) x331 (x386 x382)))
(define-fun x205 ((x382 Int)) Int (ite (= x382 224) x436 (x236 x382)))
(define-fun x159 ((x382 Int)) Int (ite (= 256 x382) x857 (x205 x382)))
(define-fun x269 ((x382 Int)) Int (ite (= x382 x456) 32 (x395 x382)))
(define-fun x139 ((x382 Int)) Int (ite (= x382 x501) x472 (x269 x382)))
(define-fun x667 ((x382 Int)) Int (ite (= x685 x382) x927 (x139 x382)))
(define-fun x26 ((x382 Int)) Int (ite (= x703 x382) x322 (x958 x382)))
(define-fun x230 ((x382 Int)) Int (ite x974 (x958 x382) (ite x992 (x958 x382) (x26 x382))))
(define-fun x197 ((x382 Int)) Int (ite (= x382 x830) x267 (x667 x382)))
(define-fun x855 ((x382 Int)) Int (ite x351 (x139 x382) (x197 x382)))
(define-fun x767 ((x382 Int)) Int (ite (= x382 x723) x863 (x475 x382)))
(define-fun x826 ((x382 Int)) Int (ite (= x382 x841) x870 (x519 x382)))
(define-fun x595 ((x382 Int)) Int (ite x974 (x519 x382) (x826 x382)))
(define-fun x350 ((x382 Int)) Int (ite (= x382 x342) x338 (x76 x382)))
(define-fun x232 ((x382 Int)) Int (ite x974 (x76 x382) (x350 x382)))
(define-fun x187 ((x382 Int)) Int (ite x974 (x898 x382) (x594 x382)))
(define-fun x569 ((x883 Int) (x413 Int) (x619 Int) (x963 Int)) Bool (=> (and (>= x619 x883) (>= x963 x413) (<= 0 x883) (<= 0 x413)) (<= (x757 x883 x413) (x757 x619 x963))))
(define-fun x32 ((x883 Int) (x413 Int) (x619 Int) (x963 Int)) Bool (=> (= x883 x619) (= (x757 x883 (- x413 x963)) (- (x757 x883 x413) (x757 x619 x963)))))
(define-fun x764 ((x883 Int)) Bool (=> (and (not (= 4060098646 x883)) (not (= x883 2113632)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x883)) (not (= x883 18446744073709551616)) (not (= x883 3250587425)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x883)) (not (= 4294967295 x883)) (not (= 340282366920938463463374607431768211455 x883)) (not (= 3110348530 x883)) (not (= x883 1960939212)) (not (= 1749768213 x883)) (not (= x883 2220280665)) (not (= 2652930389 x883)) (not (= 3655340144 x883)) (not (= 18446744073709551615 x883)) (not (= 1461501637330902918203684832716283019655932542975 x883)) (not (= 115792089237316195423570985008687907853269984665640564039457584007908834672640 x883)) (not (= 1960641893 x883)) (not (= x883 79228162514264337593543950336)) (not (= 4294967296 x883)) (> x883 10000) (not (= 340282366920938463463374607431768211456 x883)) (not (= 3547226261 x883)) (not (= x883 3704226421)) (not (= 4294967294 x883)) (not (= x883 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (not (= x883 115792089237316195423570985008687907852929702298719625575994209400481361428480)) (not (= x883 1000000000000000000))) (not ((_ is x42) (x518 x883)))))
(assert (x32 (x683 x935 x531) x800 (x683 x546 x686) x399))
(assert (x333 (- (x683 x798 x299) x399)))
(assert (= (=> (and (and (= (x385 (+ 32 x255)) x869) (= x78 x255) (= (x376 4294967295 x804) x571) (= x349 (< 0 x454))) (or (and (and (= x590 x209) (= x442 x504)) (not x349)) (and x349 (and (= (x40 x925) x947) (= x669 (x92 x565 1)) (= x796 (x40 x925)) (= (x427 (x518 x302) (x518 x738) 0) x565) (= x737 x925) (= x601 x442) (= x650 (x385 (+ x656 x658))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x454 x146)) (= x146 x169) (= x656 x618) (= x397 x255) (= x618 (+ x169 x198)) (= x692 x738) (= x198 x454) (<= x618 340282366920938463463374607431768211455) (= (x427 (x518 x601) x669 0) x737) (= x590 x669) (= (x376 115792089237316195423570985008687907852929702298719625575994209400481361428480 x796) x658) (= (x376 340282366920938463463374607431768211455 x947) x146))))) x471) x186))
(assert (x32 x686 x399 x761 (x683 x862 x52)))
(assert (x637 x156))
(assert (x569 (x683 x546 x686) x399 x647 x761))
(assert (x970 x86 (- x933 x706)))
(assert (x637 x208))
(assert (x764 x134))
(assert (x637 x11))
(assert (x333 (- x686 x86)))
(assert (x970 (x683 x798 x299) (- x86 x399)))
(assert (x333 (- x175 (x683 x489 x686))))
(assert (x637 x358))
(assert (x970 (x683 x862 x52) (- x761 x706)))
(assert (x32 x567 x706 x647 x761))
(assert (x637 x300))
(assert (x764 x705))
(assert (= x362 (and (not x944) x191)))
(assert (x32 x399 (x683 x546 x686) x175 x37))
(assert (x637 x256))
(assert (x112 x850))
(assert (x637 x82))
(assert (x32 x399 (x683 x546 x686) x761 (x683 x862 x52)))
(assert (x637 x844))
(assert (x610 x603))
(assert (x970 x399 (- (x683 x489 x686) x800)))
(assert (x637 x910))
(assert (x637 x975))
(assert (x637 x713))
(assert (x970 x399 (- (x683 x489 x686) x175)))
(assert (x970 x399 (- (x683 x489 x686) (x683 x935 x531))))
(assert (x970 x399 (- x686 x175)))
(assert (x333 (- (x683 x546 x686) x933)))
(assert (x637 x25))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x788 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x788 340282366920938463463374607431768211456))) x788)) (x892 x788 340282366920938463463374607431768211456) (x542 x788 340282366920938463463374607431768211456) (x84 x788 340282366920938463463374607431768211456)))
(assert (x637 x674))
(assert (x637 x838))
(assert (x32 (x683 x694 x531) x800 x399 x686))
(assert (x637 x479))
(assert (= (x790 (x42 1000000000000000000)) 1000000000000000000))
(assert (x637 x841))
(assert (x610 x920))
(assert (x637 x249))
(assert (x725 x361))
(assert (x637 x115))
(assert (x637 x969))
(assert (x637 x553))
(assert (x637 x801))
(assert (x32 (x683 x546 x686) x399 x647 x761))
(assert (x610 x324))
(assert (x725 x729))
(assert (x637 x175))
(assert (x970 x567 (- x706 x531)))
(assert (x637 x733))
(assert (= (x904 x116) 0))
(assert (x637 x458))
(assert (x77 x204))
(assert (= (=> (and (= x325 x358) (= x514 x345)) x58) x734))
(assert (x32 x37 x175 x399 x686))
(assert (x333 x166))
(assert (x333 (- x567 x761)))
(assert (x333 (- x706 x86)))
(assert (x610 115792089237316195423570985008687907852929702298719625575994209400481361428480))
(assert (and (=> (> 256 0) (= (+ (x683 x150 256) (* 256 (x623 x150 256))) x150)) (x892 x150 256) (x542 x150 256) (x84 x150 256)))
(assert (x333 (- (x683 x489 x686) x933)))
(assert (x32 (x683 x862 x52) x761 x399 (x683 x546 x686)))
(assert (x637 x601))
(assert (x333 (- x933 x706)))
(assert (x610 x120))
(assert (x637 x558))
(assert (x637 x34))
(assert (x32 x399 x686 x86 x933))
(assert (x637 x38))
(assert (x970 (x683 x935 x531) (- x800 x567)))
(assert (x637 x744))
(assert (x637 x755))
(assert (x77 x317))
(assert (x32 x686 x399 (x683 x935 x531) x800))
(assert (x610 x417))
(assert (= x624 (=> (and (= x46 (x595 x484)) (= (< x415 x367) x944) (= (x232 x854) x313) (= x484 (x385 (+ 32 x384))) (= (x385 (+ x484 32)) x854) (= (x168 x222) x367)) (and (=> (and x944 (and (< x415 x182) (= x182 (x168 x222)) (= (x203 x346) x934) (= x346 (x385 (+ x670 x222))) (= x873 x934) (= (x385 (+ 32 x768)) x670) (= x868 (= x302 x888)) (= (x192 (* x415 32)) x768) (= x888 (x902 x873)))) (and (=> x868 x986) (=> (and (= 0 x756) (not x868)) x65))) (=> (and (not x944) (= x756 0)) x65)))))
(assert (=> (<= x570 10000) (= (x518 x570) (x42 x570))))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x378 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x378 340282366920938463463374607431768211456))) x378)) (x892 x378 340282366920938463463374607431768211456) (x542 x378 340282366920938463463374607431768211456) (x84 x378 340282366920938463463374607431768211456)))
(assert (x32 x86 x933 x399 (x683 x546 x686)))
(assert (x637 x432))
(assert (x637 x329))
(assert (x333 (- x761 (x683 x489 x686))))
(assert (x610 x428))
(assert (x112 x620))
(assert (x569 x933 x86 x706 x567))
(assert (x637 x908))
(assert (x970 x567 (- x706 (x683 x798 x299))))
(assert (x333 (- (x683 x546 x686) x175)))
(assert (x569 x399 x686 (x683 x694 x531) x800))
(assert (x970 x686 (- x399 x761)))
(assert (x32 x706 x567 (x683 x862 x52) x761))
(assert (x637 x793))
(assert (x970 x399 (- (x683 x546 x686) x86)))
(assert (x970 x706 (- x567 x800)))
(assert (x32 x567 x706 x761 (x683 x862 x52)))
(assert (and (= (x757 32 x535) (* x535 32)) (and (= (- (* 32 (- x535 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x535 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x535 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x535) (- (* x535 32) (* x535 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x535 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x757 32 (- x535 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x849 32 x535) (x160 32 x535) (x959 32 x535) (x858 32 x535) (x548 32 x535)))
(assert (x637 x85))
(assert (x637 x702))
(assert (x970 x761 (- x647 (x683 x489 x686))))
(assert (x637 x797))
(assert (x637 x441))
(assert (x970 x531 (- x800 x399)))
(assert (x637 x508))
(assert (x637 x390))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x603 4294967296) (* 4294967296 (x623 x603 4294967296))) x603)) (x892 x603 4294967296) (x542 x603 4294967296) (x84 x603 4294967296)))
(assert (= (x653 x384) 0))
(assert (x970 (x683 x546 x686) (- x399 (x683 x694 x531))))
(assert (x637 x199))
(assert (x569 (x683 x935 x531) x800 x686 x399))
(assert (x637 x538))
(assert (= (x790 (x42 4294967296)) 4294967296))
(assert (x32 x706 x567 x531 x800))
(assert (= 2220280665 (x790 (x42 2220280665))))
(assert (= x183 (and x119 x206)))
(assert (= x24 (and x451 (not x532))))
(assert (x637 x88))
(assert (x725 x287))
(assert (x333 x706))
(assert (x970 x800 (- (x683 x694 x531) x686)))
(assert (= x760 (and x868 x509)))
(assert (x32 x567 x706 x86 (x683 x798 x299)))
(assert (and (x543 x440 4294967296) (x810 x440 4294967296) (x243 x440 4294967296) (= (- x440 (x376 4294967295 x440)) (* 4294967296 (x623 x440 4294967296))) (x950 x440 4294967296) (=> (and (> x440 0) (< 0 4294967296)) (and (<= (* 4294967296 (x623 x440 4294967296)) x440) (> (* (x623 x440 4294967296) 4294967296) (- x440 4294967296))))))
(assert (x637 x593))
(assert (x32 (x683 x798 x299) x86 x399 x686))
(assert (x637 x922))
(assert (x569 (x683 x546 x686) x399 x175 x37))
(assert (x970 x686 (- x399 x800)))
(assert (x637 x629))
(assert (x764 x721))
(assert (x333 x415))
(assert (x637 x678))
(assert (= (x790 (x92 x762 1)) (+ 1 (x790 x762))))
(assert (x637 x189))
(assert (= (x395 (x385 (+ x464 64))) 0))
(assert (=> (>= 10000 x688) (= (x42 x688) (x518 x688))))
(assert (= 3655340144 (x790 (x42 3655340144))))
(assert (x637 x539))
(assert (x610 x715))
(assert (x32 x399 (x683 x546 x686) x933 x86))
(assert (x637 x21))
(assert (x569 (x683 x546 x686) x399 (x683 x694 x531) x800))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x443 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x443 340282366920938463463374607431768211456))) x443)) (x892 x443 340282366920938463463374607431768211456) (x542 x443 340282366920938463463374607431768211456) (x84 x443 340282366920938463463374607431768211456)))
(assert (x637 x464))
(assert (x569 x399 (x683 x489 x686) x531 x800))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x620 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x620 340282366920938463463374607431768211456))) x620)) (x892 x620 340282366920938463463374607431768211456) (x542 x620 340282366920938463463374607431768211456) (x84 x620 340282366920938463463374607431768211456)))
(assert (x637 x182))
(assert (x970 x686 (- x399 x86)))
(assert (x354 x862 x52))
(assert (= (x519 x784) 0))
(assert (x112 x635))
(assert (x333 (- x37 x399)))
(assert (x284 x445))
(assert (x725 x138))
(assert (x284 x467))
(assert (x637 x104))
(assert (= x528 (x790 (x518 x528))))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x936 4294967296) (* 4294967296 (x623 x936 4294967296))) x936)) (x892 x936 4294967296) (x542 x936 4294967296) (x84 x936 4294967296)))
(assert (x725 x578))
(assert (x32 x686 x399 x761 x647))
(assert (let ((x883 (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x665) x665 (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x996 (- x665 1))))))) (and (=> (and (> x883 0) (< 0 1000000000000000000)) (and (<= (* 1000000000000000000 (x623 x883 1000000000000000000)) x883) (> (* (x623 x883 1000000000000000000) 1000000000000000000) (- x883 1000000000000000000)))) (x243 x883 1000000000000000000) (x543 x883 1000000000000000000) (x810 x883 1000000000000000000) (x950 x883 1000000000000000000))))
(assert (x569 (x683 x935 x531) x800 (x683 x546 x686) x399))
(assert (x637 x578))
(assert (x637 x64))
(assert (and (x543 x467 340282366920938463463374607431768211456) (x810 x467 340282366920938463463374607431768211456) (x243 x467 340282366920938463463374607431768211456) (= (- x467 (x376 340282366920938463463374607431768211455 x467)) (* 340282366920938463463374607431768211456 (x623 x467 340282366920938463463374607431768211456))) (x950 x467 340282366920938463463374607431768211456) (=> (and (> x467 0) (< 0 340282366920938463463374607431768211456)) (and (<= (* 340282366920938463463374607431768211456 (x623 x467 340282366920938463463374607431768211456)) x467) (> (* (x623 x467 340282366920938463463374607431768211456) 340282366920938463463374607431768211456) (- x467 340282366920938463463374607431768211456))))))
(assert (x637 x954))
(assert (x637 x334))
(assert (x637 x343))
(assert (x569 x86 x933 x706 x567))
(assert (x637 x681))
(assert (x77 x550))
(assert (x112 x729))
(assert (x32 x399 (x683 x546 x686) (x683 x862 x52) x761))
(assert (x569 (x683 x489 x686) x399 (x683 x862 x52) x761))
(assert (x970 x399 (- (x683 x546 x686) (x683 x798 x299))))
(assert (x970 x531 (- x800 x686)))
(assert (x637 x463))
(assert (x637 x794))
(assert (x637 x136))
(assert (x970 x567 (- x706 x800)))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x867 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x867 340282366920938463463374607431768211456))) x867)) (x892 x867 340282366920938463463374607431768211456) (x542 x867 340282366920938463463374607431768211456) (x84 x867 340282366920938463463374607431768211456)))
(assert (x112 x423))
(assert (x333 (- (x683 x935 x531) (x683 x546 x686))))
(assert (x637 x454))
(assert (x333 (- x686 x647)))
(assert (x637 x288))
(assert (x333 (- x933 (x683 x489 x686))))
(assert (x637 x417))
(assert (x970 x175 x37))
(assert (x32 x399 x686 x86 (x683 x798 x299)))
(assert (x637 x281))
(assert (x637 x472))
(assert (x569 (x683 x694 x531) x800 x686 x399))
(assert (x970 x86 (- (x683 x798 x299) x567)))
(assert (x569 (x683 x798 x299) x86 (x683 x489 x686) x399))
(assert (=> (>= 10000 x553) (= (x518 x553) (x42 x553))))
(assert (x637 x202))
(assert (and (= (x757 340282366920938463463374607431768211456 x280) (* x280 340282366920938463463374607431768211456)) (and (= (- (* 340282366920938463463374607431768211456 (- x280 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x280 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x757 (- 115792089237316195423570985008687907852929702298719625575994209400481361428480) (- x280 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x757 (- 115792089237316195423570985008687907852929702298719625575994209400481361428480) x280) (- (* x280 340282366920938463463374607431768211456) (* x280 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x280 115792089237316195423570985008687907853269984665640564039457584007913129639936) 340282366920938463463374607431768211456) (x757 340282366920938463463374607431768211456 (- x280 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x849 340282366920938463463374607431768211456 x280) (x160 340282366920938463463374607431768211456 x280) (x959 340282366920938463463374607431768211456 x280) (x858 340282366920938463463374607431768211456 x280) (x548 340282366920938463463374607431768211456 x280)))
(assert (x970 (x683 x935 x531) (- x800 (x683 x489 x686))))
(assert (x764 (x855 (x385 (+ x464 96)))))
(assert (x333 (- x399 (x683 x694 x531))))
(assert (x569 x86 (x683 x798 x299) x706 x567))
(assert (x32 x800 x531 x399 (x683 x489 x686)))
(assert (x32 (x683 x489 x686) x399 x800 x531))
(assert (x610 x867))
(assert (and (= (x757 64 x472) (* x472 64)) (and (= (- (* 64 (- x472 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x472 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639872) (- x472 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639872) x472) (- (* x472 64) (* x472 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x472 115792089237316195423570985008687907853269984665640564039457584007913129639936) 64) (x757 64 (- x472 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x849 64 x472) (x160 64 x472) (x959 64 x472) (x858 64 x472) (x548 64 x472)))
(assert (x637 x328))
(assert (x77 x208))
(assert (x637 x369))
(assert (x637 x549))
(assert (x637 x228))
(assert (and (x543 x343 340282366920938463463374607431768211456) (x810 x343 340282366920938463463374607431768211456) (x243 x343 340282366920938463463374607431768211456) (= (- x343 (x376 340282366920938463463374607431768211455 x343)) (* 340282366920938463463374607431768211456 (x623 x343 340282366920938463463374607431768211456))) (x950 x343 340282366920938463463374607431768211456) (=> (and (> x343 0) (< 0 340282366920938463463374607431768211456)) (and (<= (* 340282366920938463463374607431768211456 (x623 x343 340282366920938463463374607431768211456)) x343) (> (* (x623 x343 340282366920938463463374607431768211456) 340282366920938463463374607431768211456) (- x343 340282366920938463463374607431768211456))))))
(assert (x637 x729))
(assert (x764 x659))
(assert (x637 x392))
(assert (x970 (x683 x694 x531) x800))
(assert (x970 x933 (- x86 (x683 x489 x686))))
(assert (x637 x402))
(assert (x250 x378))
(assert (= (=> (= (not (> x809 x380)) x246) (and (=> (= x109 x380) x994) x246)) x457))
(assert (x569 x399 (x683 x489 x686) (x683 x798 x299) x86))
(assert (x970 (x683 x935 x531) (- x800 x686)))
(assert (x637 x217))
(assert (x610 x780))
(assert (x725 x920))
(assert (x637 x655))
(assert (x764 (x855 (x385 (+ 192 x464)))))
(assert (x637 x298))
(assert (x77 x651))
(assert (x637 x499))
(assert (= x763 (and x644 (not x640))))
(assert (x32 (x683 x798 x299) x86 x686 x399))
(assert (x637 x901))
(assert (x637 x670))
(assert (x333 (- x399 (x683 x935 x531))))
(assert (x637 x326))
(assert (x970 x175 (- x37 x706)))
(assert (x610 x388))
(assert (x764 x939))
(assert (x333 x800))
(assert (x610 x788))
(assert (x32 x933 x86 (x683 x546 x686) x399))
(assert (= (x42 18446744073709551616) (x518 18446744073709551616)))
(assert (x637 x244))
(assert (x725 x990))
(assert (x970 x86 (- (x683 x798 x299) x706)))
(assert (x610 x578))
(assert (x32 x706 x567 x800 (x683 x935 x531)))
(assert (x637 x774))
(assert (x32 x175 x37 (x683 x489 x686) x399))
(assert (x637 x632))
(assert (x333 (- x399 x37)))
(assert (x333 x175))
(assert (x569 (x683 x489 x686) x399 x933 x86))
(assert (x569 x399 (x683 x546 x686) (x683 x935 x531) x800))
(assert (x637 x176))
(assert (x637 x81))
(assert (x637 x433))
(assert (x637 x287))
(assert (x32 x567 x706 (x683 x798 x299) x86))
(assert (= (x897 x241) 0))
(assert (x32 (x683 x862 x52) x761 (x683 x489 x686) x399))
(assert (x725 4294967296))
(assert (x970 (x683 x862 x52) (- x761 x399)))
(assert (x569 x800 x531 (x683 x489 x686) x399))
(assert (x284 18446744073709551616))
(assert (x284 x827))
(assert (x637 x226))
(assert (x970 x647 (- x761 x706)))
(assert (x637 x521))
(assert (x637 x814))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x287 4294967296) (* 4294967296 (x623 x287 4294967296))) x287)) (x892 x287 4294967296) (x542 x287 4294967296) (x84 x287 4294967296)))
(assert (x569 x647 x761 x706 x567))
(assert (x32 x800 (x683 x935 x531) x686 x399))
(assert (x637 x123))
(assert (x637 x942))
(assert (x610 x865))
(assert (x970 (x683 x694 x531) (- x800 x567)))
(assert (=> (>= 10000 x134) (= (x518 x134) (x42 x134))))
(assert (x637 x150))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x780 4294967296) (* 4294967296 (x623 x780 4294967296))) x780)) (x892 x780 4294967296) (x542 x780 4294967296) (x84 x780 4294967296)))
(assert (= x517 (=> (and (= x498 (x427 (x518 x601) (x518 x481) 0)) (= x103 x481) (= (x652 128) x200) (= (x332 (x518 x688)) x150) (= x134 (x332 x470)) (= x21 0) (= (x427 (x518 x704) x498 0) x145) (= x145 x470) (= x21 (x376 255 x150)) (= x908 x688) (= (< 0 x200) x707) (= (x376 1461501637330902918203684832716283019655932542975 x361) x601)) (and (=> (and (and (= x390 (x613 x559)) (> x617 0) (= x617 (x652 128)) (= x671 x931) (= x671 (x846 160)) (= x49 (x168 x390)) (= x561 (= 0 x49)) (= x559 (x385 (+ x671 32))) (= (x187 x931) x553)) x707) (and (=> (and (and (= x640 (= x593 0)) (= (x613 x559) x516) (= x553 0) (= (x168 x516) x593)) (not x561)) (and (=> (and (and (= x456 (x385 (+ x723 32))) (= x472 (x168 x516)) (= x501 (x385 (+ 64 x723))) (= (< 0 x472) x861) (= (x385 (+ 32 x516)) x256) (= x730 (x385 (+ 32 x501)))) (not x640)) (and (=> x861 x924) (=> (and (and (= x557 x730) (= x256 x31) (= 0 x699)) (not x861)) x913))) (=> (and (and (= (x42 0) x345) (= x723 x358)) x640) x734))) (=> (and (and (= x723 x325) (= x514 (x518 x553))) x561) x58))) (=> (and (not x707) (and (= x845 (x518 x754)) (= x255 x723))) x641)))))
(assert (x637 x50))
(assert (x637 x789))
(assert (x32 (x683 x546 x686) x399 x800 (x683 x935 x531)))
(assert (= 0 (x330 160)))
(assert (and (= (x757 32 x151) (* x151 32)) (and (= (- (* 32 (- x151 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x151 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x151 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x151) (- (* x151 32) (* x151 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x151 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x757 32 (- x151 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x849 32 x151) (x160 32 x151) (x959 32 x151) (x858 32 x151) (x548 32 x151)))
(assert (x569 x706 x567 (x683 x862 x52) x761))
(assert (x764 x334))
(assert (x569 x37 x175 x686 x399))
(assert (x725 x226))
(assert (x333 x472))
(assert (x32 (x683 x546 x686) x399 x175 x37))
(assert (x284 x216))
(assert (x637 x968))
(assert (x637 x342))
(assert (x725 x796))
(assert (x32 x933 x86 x399 x686))
(assert (x284 x935))
(assert (x32 x399 (x683 x546 x686) x800 (x683 x935 x531)))
(assert (x970 x399 (- (x683 x489 x686) x37)))
(assert (x569 x37 x175 (x683 x546 x686) x399))
(assert (x32 (x683 x862 x52) x761 x399 (x683 x489 x686)))
(assert (x637 x377))
(assert (x637 x388))
(assert (x637 x796))
(assert (and (=> (> 32 0) (= (+ (x683 x954 32) (* 32 (x623 x954 32))) x954)) (x892 x954 32) (x542 x954 32) (x84 x954 32)))
(assert (x637 x894))
(assert (x637 x22))
(assert (x333 (- (x683 x798 x299) x686)))
(assert (x77 x936))
(assert (=> (>= 10000 x754) (= (x42 x754) (x518 x754))))
(assert (x32 x761 (x683 x862 x52) x567 x706))
(assert (= (x42 3704226421) (x518 3704226421)))
(assert (x637 x568))
(assert (x333 (- (x683 x546 x686) x531)))
(assert (x637 x531))
(assert (x637 x440))
(assert (x32 x686 x399 x800 (x683 x694 x531)))
(assert (x77 x926))
(assert (x637 x990))
(assert (x637 x49))
(assert (x32 x800 (x683 x694 x531) (x683 x489 x686) x399))
(assert (x32 x531 x800 x399 (x683 x489 x686)))
(assert (x569 (x683 x489 x686) x399 (x683 x798 x299) x86))
(assert (x637 x62))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x585 4294967296) (* 4294967296 (x623 x585 4294967296))) x585)) (x892 x585 4294967296) (x542 x585 4294967296) (x84 x585 4294967296)))
(assert (x637 x987))
(assert (x637 x400))
(assert (= x985 (or x237 x806)))
(assert (x32 x399 x686 (x683 x935 x531) x800))
(assert (x32 x706 x567 x86 (x683 x798 x299)))
(assert (x333 (- x686 x175)))
(assert (x637 x627))
(assert (x569 x399 (x683 x546 x686) (x683 x862 x52) x761))
(assert (x725 x603))
(assert (x637 x573))
(assert (x32 x800 (x683 x935 x531) x706 x567))
(assert (= (and x507 (not x447)) x811))
(assert (x32 x37 x175 x399 (x683 x489 x686)))
(assert (x637 x241))
(assert (and (x543 x348 18446744073709551616) (x810 x348 18446744073709551616) (x243 x348 18446744073709551616) (= (- x348 (x376 18446744073709551615 x348)) (* 18446744073709551616 (x623 x348 18446744073709551616))) (x950 x348 18446744073709551616) (=> (and (> x348 0) (< 0 18446744073709551616)) (and (<= (* 18446744073709551616 (x623 x348 18446744073709551616)) x348) (> (* (x623 x348 18446744073709551616) 18446744073709551616) (- x348 18446744073709551616))))))
(assert (x637 x867))
(assert (x637 x979))
(assert (x610 x317))
(assert (x970 (x683 x489 x686) (- x399 (x683 x694 x531))))
(assert (x637 x200))
(assert (x970 x86 (- x933 (x683 x546 x686))))
(assert (x764 x878))
(assert (x32 (x683 x546 x686) x399 x531 x800))
(assert (x112 x417))
(assert (= (and x751 x183) x786))
(assert (x637 x787))
(assert (x32 x647 x761 x399 x686))
(assert (x333 (- (x683 x694 x531) x399)))
(assert (x569 x647 x761 (x683 x546 x686) x399))
(assert (x839 x248))
(assert (= (or x356 x842) x191))
(assert (x970 x647 (- x761 (x683 x546 x686))))
(assert (x637 x651))
(assert (x32 x399 (x683 x489 x686) x800 x531))
(assert (x637 x756))
(assert (x637 x551))
(assert (x637 x366))
(assert (x637 x631))
(assert (x569 x706 x567 x647 x761))
(assert (x970 x399 (- x686 (x683 x862 x52))))
(assert (x32 x399 (x683 x489 x686) x37 x175))
(assert (x637 x776))
(assert (x970 x800 (- (x683 x935 x531) x686)))
(assert (x637 x843))
(assert (x637 x364))
(assert (x637 x75))
(assert (x637 x695))
(assert (x284 1000000000000000000))
(assert (x725 x736))
(assert (x32 x399 (x683 x489 x686) x761 x647))
(assert (x569 x761 x647 (x683 x489 x686) x399))
(assert (x333 (- x686 (x683 x862 x52))))
(assert (x112 x867))
(assert (x637 x348))
(assert (x569 x933 x86 x686 x399))
(assert (x569 x800 x531 x686 x399))
(assert (x32 x86 (x683 x798 x299) (x683 x546 x686) x399))
(assert (x637 x502))
(assert (x637 x597))
(assert (x970 x800 (- x531 x706)))
(assert (x725 x38))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x423 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x423 340282366920938463463374607431768211456))) x423)) (x892 x423 340282366920938463463374607431768211456) (x542 x423 340282366920938463463374607431768211456) (x84 x423 340282366920938463463374607431768211456)))
(assert (x725 x947))
(assert (x374 x862 x511))
(assert (and (x543 x910 4294967296) (x810 x910 4294967296) (x243 x910 4294967296) (= (- x910 (x376 4294967295 x910)) (* 4294967296 (x623 x910 4294967296))) (x950 x910 4294967296) (=> (and (> x910 0) (< 0 4294967296)) (and (<= (* 4294967296 (x623 x910 4294967296)) x910) (> (* (x623 x910 4294967296) 4294967296) (- x910 4294967296))))))
(assert (x637 x207))
(assert (x637 x367))
(assert (x970 x399 (- (x683 x546 x686) x175)))
(assert (x637 x853))
(assert (x637 x773))
(assert (x32 x647 x761 x399 (x683 x489 x686)))
(assert (x637 x873))
(assert (=> (<= x659 10000) (= (x42 x659) (x518 x659))))
(assert (x637 x684))
(assert (= (x653 x559) 0))
(assert (x610 x378))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x651 4294967296) (* 4294967296 (x623 x651 4294967296))) x651)) (x892 x651 4294967296) (x542 x651 4294967296) (x84 x651 4294967296)))
(assert (= x53 (or x194 x889)))
(assert (x637 x696))
(assert (x32 x37 x175 (x683 x546 x686) x399))
(assert (x637 x380))
(assert (x333 (- x175 x399)))
(assert (x637 x830))
(assert (= (x76 x537) 0))
(assert (x970 x800 (- (x683 x694 x531) x399)))
(assert (x32 (x683 x546 x686) x399 (x683 x862 x52) x761))
(assert (= (x196 x588) 0))
(assert (= (x790 (x92 x625 4)) (+ 4 (x790 x625))))
(assert (and (= (x757 32 x415) (* x415 32)) (and (= (- (* 32 (- x415 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x415 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x415 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x415) (- (* x415 32) (* x415 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x415 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x757 32 (- x415 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x849 32 x415) (x160 32 x415) (x959 32 x415) (x858 32 x415) (x548 32 x415)))
(assert (x764 x528))
(assert (x575 x578))
(assert (x970 (x683 x862 x52) (- x761 x686)))
(assert (=> (<= (x855 (x385 (+ 160 x464))) 10000) (= (x518 (x855 (x385 (+ 160 x464)))) (x42 (x855 (x385 (+ x464 160)))))))
(assert (x637 x289))
(assert (x569 (x683 x546 x686) x399 x531 x800))
(assert (x32 x399 (x683 x489 x686) x86 (x683 x798 x299)))
(assert (= (or x923 x992) x487))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x635 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x635 340282366920938463463374607431768211456))) x635)) (x892 x635 340282366920938463463374607431768211456) (x542 x635 340282366920938463463374607431768211456) (x84 x635 340282366920938463463374607431768211456)))
(assert (x970 x933 (- x86 x399)))
(assert (x637 x247))
(assert (x32 x175 x37 x686 x399))
(assert (x32 x86 x933 (x683 x546 x686) x399))
(assert (x637 x701))
(assert (and (x543 x445 79228162514264337593543950336) (x810 x445 79228162514264337593543950336) (x243 x445 79228162514264337593543950336) (= (- x445 (x376 79228162514264337593543950335 x445)) (* 79228162514264337593543950336 (x623 x445 79228162514264337593543950336))) (x950 x445 79228162514264337593543950336) (=> (and (> x445 0) (< 0 79228162514264337593543950336)) (and (<= (* 79228162514264337593543950336 (x623 x445 79228162514264337593543950336)) x445) (> (* (x623 x445 79228162514264337593543950336) 79228162514264337593543950336) (- x445 79228162514264337593543950336))))))
(assert (x610 x756))
(assert (x637 x693))
(assert (x637 x222))
(assert (x637 x694))
(assert (x637 x799))
(assert (x637 x318))
(assert (x637 x363))
(assert (x32 (x683 x694 x531) x800 x567 x706))
(assert (x569 x399 x686 (x683 x935 x531) x800))
(assert (x333 (- x706 (x683 x862 x52))))
(assert (x637 x164))
(assert (and (x543 x80 2) (x810 x80 2) (x243 x80 2) (= (- x80 (x376 1 x80)) (* 2 (x623 x80 2))) (x950 x80 2) (=> (and (> x80 0) (< 0 2)) (and (<= (* 2 (x623 x80 2)) x80) (> (* (x623 x80 2) 2) (- x80 2))))))
(assert (x32 (x683 x546 x686) x399 (x683 x935 x531) x800))
(assert (x970 x37 (- x175 x706)))
(assert (x637 x152))
(assert (x333 (- (x683 x489 x686) x531)))
(assert (x32 (x683 x862 x52) x761 x567 x706))
(assert (x32 (x683 x798 x299) x86 x567 x706))
(assert (= (x790 (x42 18446744073709551616)) 18446744073709551616))
(assert (=> (<= x212 10000) (= (x518 x212) (x42 x212))))
(assert (x569 x686 x399 x647 x761))
(assert (x637 x397))
(assert (x77 x920))
(assert (x637 x957))
(assert (x970 x531 (- x800 x706)))
(assert (= (x42 3655340144) (x518 3655340144)))
(assert true)
(assert (=> (>= 10000 (x855 (x385 (+ 32 x464)))) (= (x518 (x855 (x385 (+ x464 32)))) (x42 (x855 (x385 (+ x464 32)))))))
(assert (x333 (- x761 x686)))
(assert (x637 x784))
(assert (= (x42 3110348530) (x518 3110348530)))
(assert (x637 x1))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x400 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x400 340282366920938463463374607431768211456))) x400)) (x892 x400 340282366920938463463374607431768211456) (x542 x400 340282366920938463463374607431768211456) (x84 x400 340282366920938463463374607431768211456)))
(assert (x610 x850))
(assert (x970 x175 (- x37 (x683 x489 x686))))
(assert (x725 x550))
(assert (x77 x793))
(assert (x725 x217))
(assert (x637 x960))
(assert (x725 x400))
(assert (x32 x531 x800 x686 x399))
(assert (x970 x399 (- (x683 x546 x686) (x683 x862 x52))))
(assert (x637 x31))
(assert (x637 x225))
(assert (x333 (- x399 (x683 x798 x299))))
(assert (= 1461501637330902918203684832716283019655932542975 (x790 (x42 1461501637330902918203684832716283019655932542975))))
(assert (=> (>= 10000 x311) (= (x518 x311) (x42 x311))))
(assert (x569 x86 (x683 x798 x299) (x683 x489 x686) x399))
(assert (x333 (- x567 x933)))
(assert (x610 x926))
(assert (x637 x161))
(assert (x333 (- (x683 x546 x686) (x683 x694 x531))))
(assert (= 0 (x958 x218)))
(assert (x333 (- x567 x531)))
(assert (x637 x379))
(assert (x637 x658))
(assert (x970 x399 (- (x683 x489 x686) x86)))
(assert (and (=> (and (> x728 0) (< 0 1000000000000000000)) (and (<= (* 1000000000000000000 (x623 x728 1000000000000000000)) x728) (> (* (x623 x728 1000000000000000000) 1000000000000000000) (- x728 1000000000000000000)))) (x243 x728 1000000000000000000) (x543 x728 1000000000000000000) (x810 x728 1000000000000000000) (x950 x728 1000000000000000000)))
(assert (x970 x933 (- x86 x686)))
(assert (x32 x761 (x683 x862 x52) x686 x399))
(assert (x32 x800 (x683 x935 x531) x399 x686))
(assert (x374 x935 x531))
(assert (x32 x399 x686 x175 x37))
(assert (x32 x800 (x683 x694 x531) x399 (x683 x546 x686)))
(assert (x970 x706 (- x567 x531)))
(assert (x32 x399 (x683 x489 x686) (x683 x935 x531) x800))
(assert (x610 x150))
(assert (= x451 (or x258 x459)))
(assert (x32 (x683 x798 x299) x86 (x683 x489 x686) x399))
(assert (x32 x86 (x683 x798 x299) x399 (x683 x546 x686)))
(assert (= (or x15 x53) x459))
(assert (x610 x296))
(assert (x32 (x683 x489 x686) x399 x761 x647))
(assert (= (and x586 x525) x582))
(assert (x333 (- x399 x531)))
(assert (x637 x399))
(assert (x970 (x683 x546 x686) (- x399 (x683 x862 x52))))
(assert (x637 x874))
(assert (x32 x86 (x683 x798 x299) x706 x567))
(assert (x637 x616))
(assert (x32 x686 x399 x800 x531))
(assert (= 1749768213 (x790 (x42 1749768213))))
(assert (= (x42 1749768213) (x518 1749768213)))
(assert (x32 x567 x706 x761 x647))
(assert (x32 x706 x567 x647 x761))
(assert (x637 x735))
(assert (x970 x531 x800))
(assert (= (and (not x375) x985) x544))
(assert (= x859 (or x615 x976)))
(assert (= (=> (and (= (x55 x288) x870) (= (x385 (+ 32 x88)) x28) (= (x385 (+ 32 x841)) x342) (>= 4294967295 x338) (= (x55 x370) x338) (= x841 (x385 (+ 32 x581))) (= (x385 (+ 32 x207)) x288) (= x581 (x385 (+ 32 x882))) (= x406 (not (> x50 x28))) (= (x385 (+ 32 x288)) x370) (>= 4294967295 x870)) (and x406 (=> (= x951 x723) x517))) x893))
(assert (=> (>= 10000 x334) (= (x42 x334) (x518 x334))))
(assert (x569 x399 (x683 x546 x686) x531 x800))
(assert (x333 (x683 x862 x52)))
(assert (x637 x215))
(assert (= (x790 (x518 (x855 (x385 (+ 32 x464))))) (x855 (x385 (+ x464 32)))))
(assert (=> (>= 10000 (x855 (x385 (+ 64 x464)))) (= (x42 (x855 (x385 (+ 64 x464)))) (x518 (x855 (x385 (+ x464 64)))))))
(assert (x569 (x683 x546 x686) x399 (x683 x862 x52) x761))
(assert (x637 x407))
(assert (x637 x319))
(assert (x637 x588))
(assert (= (x42 3547226261) (x518 3547226261)))
(assert (x32 (x683 x489 x686) x399 (x683 x862 x52) x761))
(assert (x637 x293))
(assert (x970 x706 (- x567 x37)))
(assert (x637 x576))
(assert (x637 x74))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x715 4294967296) (* 4294967296 (x623 x715 4294967296))) x715)) (x892 x715 4294967296) (x542 x715 4294967296) (x84 x715 4294967296)))
(assert (= (x790 (x518 x738)) x738))
(assert (x333 64))
(assert (x725 x546))
(assert (x637 x829))
(assert (x725 x788))
(assert (x637 x747))
(assert (x354 x546 x686))
(assert (x569 x175 x37 x706 x567))
(assert (= x481 (x790 (x518 x481))))
(assert (x637 x346))
(assert (x569 x399 x686 x531 x800))
(assert (= 0 (x898 x931)))
(assert (x725 x428))
(assert (x333 x151))
(assert (x32 x399 (x683 x546 x686) x800 x531))
(assert (x333 x686))
(assert (x637 x546))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x790 (x42 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x610 x804))
(assert (x333 (- (x683 x862 x52) x567)))
(assert (x610 x736))
(assert (and (=> (and (> x318 0) (< 0 1000000000000000000)) (and (<= (* 1000000000000000000 (x623 x318 1000000000000000000)) x318) (> (* (x623 x318 1000000000000000000) 1000000000000000000) (- x318 1000000000000000000)))) (x243 x318 1000000000000000000) (x543 x318 1000000000000000000) (x810 x318 1000000000000000000) (x950 x318 1000000000000000000)))
(assert (x112 x120))
(assert (x970 x399 (- x686 x37)))
(assert (x32 (x683 x489 x686) x399 x175 x37))
(assert (= x824 (and (not x119) x206)))
(assert (x32 x399 x686 x531 x800))
(assert (x32 (x683 x694 x531) x800 (x683 x546 x686) x399))
(assert (x637 x114))
(assert (x637 x903))
(assert (x32 x706 x567 (x683 x935 x531) x800))
(assert (x637 x216))
(assert (x32 x531 x800 (x683 x546 x686) x399))
(assert (x637 x39))
(assert (x637 x505))
(assert (x637 x325))
(assert (x569 (x683 x694 x531) x800 (x683 x546 x686) x399))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x683 x796 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x623 x796 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x796)) (x892 x796 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x542 x796 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x84 x796 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x637 x296))
(assert (x637 x201))
(assert (x333 (- x706 x37)))
(assert (x637 x429))
(assert (x637 x872))
(assert (x32 x399 (x683 x489 x686) x800 (x683 x694 x531)))
(assert (x970 x800 (- (x683 x935 x531) (x683 x489 x686))))
(assert (x610 4294967295))
(assert (x725 x936))
(assert (x284 x440))
(assert (= x206 (or x117 x257)))
(assert (x333 (- (x683 x546 x686) (x683 x935 x531))))
(assert (x32 x399 (x683 x489 x686) (x683 x694 x531) x800))
(assert (= (x518 1461501637330902918203684832716283019655932542975) (x42 1461501637330902918203684832716283019655932542975)))
(assert (x637 x831))
(assert (x637 x622))
(assert (x32 x531 x800 x399 x686))
(assert (x970 x399 (- x686 x86)))
(assert (= (x196 x516) 0))
(assert (and (= (x757 32 x199) (* x199 32)) (and (= (- (* 32 (- x199 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x199 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x199 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x199) (- (* x199 32) (* x199 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x199 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x757 32 (- x199 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x849 32 x199) (x160 32 x199) (x959 32 x199) (x858 32 x199) (x548 32 x199)))
(assert (x970 x800 (- (x683 x935 x531) x399)))
(assert (x610 340282366920938463463374607431768211455))
(assert (x637 x9))
(assert (x839 x120))
(assert (and (x543 x749 79228162514264337593543950336) (x810 x749 79228162514264337593543950336) (x243 x749 79228162514264337593543950336) (= (- x749 (x376 79228162514264337593543950335 x749)) (* 79228162514264337593543950336 (x623 x749 79228162514264337593543950336))) (x950 x749 79228162514264337593543950336) (=> (and (> x749 0) (< 0 79228162514264337593543950336)) (and (<= (* 79228162514264337593543950336 (x623 x749 79228162514264337593543950336)) x749) (> (* (x623 x749 79228162514264337593543950336) 79228162514264337593543950336) (- x749 79228162514264337593543950336))))))
(assert (x333 (- x567 x800)))
(assert (x610 x38))
(assert (= (or x544 x469 x675) x257))
(assert (x333 x399))
(assert (x637 x309))
(assert (x970 x567 (- x706 (x683 x862 x52))))
(assert (x333 (- x686 x933)))
(assert (x333 (- x800 x399)))
(assert (x333 340282366920938463463374607431768211456))
(assert (x764 x570))
(assert (x32 x686 x399 (x683 x694 x531) x800))
(assert (x637 x381))
(assert (x32 x399 x686 x800 x531))
(assert (x725 x296))
(assert (x970 x37 (- x175 x686)))
(assert (x32 x800 x531 (x683 x489 x686) x399))
(assert (x32 x686 x399 x647 x761))
(assert (= (x790 (x518 (x855 (x385 (+ x464 160))))) (x855 (x385 (+ x464 160)))))
(assert (x32 x706 x567 x37 x175))
(assert (x970 (x683 x798 x299) (- x86 (x683 x489 x686))))
(assert (= x134 (x790 (x518 x134))))
(assert (x333 (- x686 x37)))
(assert (x637 x27))
(assert (x970 (x683 x798 x299) (- x86 x686)))
(assert (x569 x399 x686 x175 x37))
(assert (x77 x775))
(assert (x333 (- (x683 x546 x686) x647)))
(assert (x637 x482))
(assert (x637 x758))
(assert (x569 x37 x175 x706 x567))
(assert (x764 (x855 (x385 (+ 32 x464)))))
(assert (x32 x800 (x683 x694 x531) x399 x686))
(assert (x32 x761 (x683 x862 x52) x706 x567))
(assert (x333 (- x399 x800)))
(assert (x32 x933 x86 (x683 x489 x686) x399))
(assert (x637 x193))
(assert (x32 x399 x686 (x683 x694 x531) x800))
(assert (x637 x775))
(assert (= x939 (x790 (x518 x939))))
(assert (x637 x879))
(assert (x970 x706 (- x567 x761)))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x920 4294967296) (* 4294967296 (x623 x920 4294967296))) x920)) (x892 x920 4294967296) (x542 x920 4294967296) (x84 x920 4294967296)))
(assert (x637 x409))
(assert (x637 x340))
(assert (and (=> (> 32 0) (= (+ (x683 x578 32) (* 32 (x623 x578 32))) x578)) (x892 x578 32) (x542 x578 32) (x84 x578 32)))
(assert (x637 x370))
(assert (x637 x821))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x313 4294967296) (* 4294967296 (x623 x313 4294967296))) x313)) (x892 x313 4294967296) (x542 x313 4294967296) (x84 x313 4294967296)))
(assert (and (x543 x697 2) (x810 x697 2) (x243 x697 2) (= (- x697 (x376 1 x697)) (* 2 (x623 x697 2))) (x950 x697 2) (=> (and (> x697 0) (< 0 2)) (and (<= (* 2 (x623 x697 2)) x697) (> (* (x623 x697 2) 2) (- x697 2))))))
(assert (x112 x426))
(assert (x637 x571))
(assert (x637 x185))
(assert (x333 (- x706 (x683 x694 x531))))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x683 x865 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x623 x865 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x865)) (x892 x865 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x542 x865 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x84 x865 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x637 x570))
(assert (x569 x800 (x683 x935 x531) (x683 x489 x686) x399))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x138 4294967296) (* 4294967296 (x623 x138 4294967296))) x138)) (x892 x138 4294967296) (x542 x138 4294967296) (x84 x138 4294967296)))
(assert (x112 x94))
(assert (x764 x111))
(assert (x637 x645))
(assert (x637 x18))
(assert (x284 79228162514264337593543950336))
(assert (x354 x123 x226))
(assert (x764 (x855 (x385 (+ 128 x464)))))
(assert (x970 x761 (- x647 x567)))
(assert (=> (<= (x855 x464) 10000) (= (x518 (x855 x464)) (x42 (x855 x464)))))
(assert (x284 x546))
(assert (x32 x800 x531 (x683 x546 x686) x399))
(assert (x970 x399 (- x686 x647)))
(assert (x637 x665))
(assert (x637 x899))
(assert (x637 x989))
(assert (x637 x420))
(assert (x32 x800 (x683 x694 x531) x567 x706))
(assert (x970 x706 (- x567 (x683 x798 x299))))
(assert (x970 (x683 x489 x686) (- x399 (x683 x798 x299))))
(assert (= (x958 x821) 0))
(assert (x610 x313))
(assert (= (x518 4294967295) (x42 4294967295)))
(assert (x637 x748))
(assert (x637 x706))
(assert (x569 x933 x86 (x683 x489 x686) x399))
(assert (x284 x104))
(assert (x637 x276))
(assert (x333 (- x800 x567)))
(assert (x637 x126))
(assert (x725 x420))
(assert (x610 x783))
(assert (x32 (x683 x694 x531) x800 x399 (x683 x489 x686)))
(assert (x32 x399 x686 (x683 x798 x299) x86))
(assert (x333 (- x86 x706)))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x683 x378 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x623 x378 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x378)) (x892 x378 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x542 x378 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x84 x378 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x569 x761 (x683 x862 x52) (x683 x546 x686) x399))
(assert (x637 x736))
(assert (x32 x706 x567 x175 x37))
(assert (x569 x399 (x683 x489 x686) x933 x86))
(assert (x333 (- x686 x800)))
(assert (x284 4294967296))
(assert (x333 x86))
(assert (x970 x686 (- x399 x647)))
(assert (x637 x163))
(assert (x637 x689))
(assert (x32 x175 x37 x399 (x683 x489 x686)))
(assert (x637 x967))
(assert (x637 x322))
(assert (x32 (x683 x935 x531) x800 x686 x399))
(assert (x725 256))
(assert (x637 x585))
(assert (= (x518 18446744073709551615) (x42 18446744073709551615)))
(assert (x333 32))
(assert (x333 x531))
(assert (x569 x399 (x683 x489 x686) (x683 x862 x52) x761))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x865 4294967296) (* 4294967296 (x623 x865 4294967296))) x865)) (x892 x865 4294967296) (x542 x865 4294967296) (x84 x865 4294967296)))
(assert (and (x543 x608 4294967296) (x810 x608 4294967296) (x243 x608 4294967296) (= (- x608 (x376 4294967295 x608)) (* 4294967296 (x623 x608 4294967296))) (x950 x608 4294967296) (=> (and (> x608 0) (< 0 4294967296)) (and (<= (* 4294967296 (x623 x608 4294967296)) x608) (> (* (x623 x608 4294967296) 4294967296) (- x608 4294967296))))))
(assert (x333 (- (x683 x546 x686) (x683 x862 x52))))
(assert (x725 x324))
(assert (x112 x248))
(assert (x333 (- (x683 x546 x686) x86)))
(assert (x284 x343))
(assert (x569 x686 x399 (x683 x935 x531) x800))
(assert (x32 x399 (x683 x546 x686) (x683 x935 x531) x800))
(assert (x637 x700))
(assert (x637 x743))
(assert (x637 x584))
(assert (= (and x137 (not x357)) x180))
(assert (= 0 (x943 x10)))
(assert (x112 x736))
(assert (x32 x567 x706 x800 (x683 x935 x531)))
(assert (= x992 (and (not x752) x582)))
(assert (=> (>= 10000 x261) (= (x518 x261) (x42 x261))))
(assert (x637 x313))
(assert (x333 (- x647 x567)))
(assert (x569 x761 x647 (x683 x546 x686) x399))
(assert (x637 x144))
(assert (x970 x399 (- (x683 x489 x686) x531)))
(assert (x637 x580))
(assert (x637 x151))
(assert (x970 x706 (- x567 x647)))
(assert (x970 x531 (- x800 (x683 x546 x686))))
(assert (x333 x202))
(assert (x333 (x683 x694 x531)))
(assert (x637 x450))
(assert (x32 x933 x86 x706 x567))
(assert (x333 (- x800 x706)))
(assert (x32 (x683 x489 x686) x399 x800 (x683 x694 x531)))
(assert (x637 x153))
(assert (x637 x931))
(assert (x32 x647 x761 x686 x399))
(assert (x569 x399 (x683 x546 x686) (x683 x694 x531) x800))
(assert (x637 x426))
(assert (x32 x706 x567 x761 x647))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x270 4294967296) (* 4294967296 (x623 x270 4294967296))) x270)) (x892 x270 4294967296) (x542 x270 4294967296) (x84 x270 4294967296)))
(assert (x725 x626))
(assert (x637 x934))
(assert (x970 x399 (- x686 (x683 x694 x531))))
(assert (x77 x715))
(assert (x637 x768))
(assert (x637 x455))
(assert (x637 x771))
(assert (= (and x239 x102) x137))
(assert (and (x543 x490 18446744073709551616) (x810 x490 18446744073709551616) (x243 x490 18446744073709551616) (= (- x490 (x376 18446744073709551615 x490)) (* 18446744073709551616 (x623 x490 18446744073709551616))) (x950 x490 18446744073709551616) (=> (and (> x490 0) (< 0 18446744073709551616)) (and (<= (* 18446744073709551616 (x623 x490 18446744073709551616)) x490) (> (* (x623 x490 18446744073709551616) 18446744073709551616) (- x490 18446744073709551616))))))
(assert (x637 x520))
(assert (x637 x864))
(assert (x569 x399 (x683 x489 x686) x175 x37))
(assert (x32 x800 x531 x399 x686))
(assert (x32 (x683 x694 x531) x800 x686 x399))
(assert (x374 x798 x301))
(assert (x333 (- (x683 x489 x686) x647)))
(assert (x970 x800 (- (x683 x694 x531) x567)))
(assert (= (x42 1960939212) (x518 1960939212)))
(assert (x32 x800 x531 x686 x399))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x729 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x729 340282366920938463463374607431768211456))) x729)) (x892 x729 340282366920938463463374607431768211456) (x542 x729 340282366920938463463374607431768211456) (x84 x729 340282366920938463463374607431768211456)))
(assert (x637 x973))
(assert (x32 x800 (x683 x935 x531) x399 (x683 x489 x686)))
(assert (and (x543 x903 18446744073709551616) (x810 x903 18446744073709551616) (x243 x903 18446744073709551616) (= (- x903 (x376 18446744073709551615 x903)) (* 18446744073709551616 (x623 x903 18446744073709551616))) (x950 x903 18446744073709551616) (=> (and (> x903 0) (< 0 18446744073709551616)) (and (<= (* 18446744073709551616 (x623 x903 18446744073709551616)) x903) (> (* (x623 x903 18446744073709551616) 18446744073709551616) (- x903 18446744073709551616))))))
(assert (x333 x280))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x94 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x94 340282366920938463463374607431768211456))) x94)) (x892 x94 340282366920938463463374607431768211456) (x542 x94 340282366920938463463374607431768211456) (x84 x94 340282366920938463463374607431768211456)))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x426 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x426 340282366920938463463374607431768211456))) x426)) (x892 x426 340282366920938463463374607431768211456) (x542 x426 340282366920938463463374607431768211456) (x84 x426 340282366920938463463374607431768211456)))
(assert (x637 x727))
(assert (x637 x489))
(assert (x32 x933 x86 x399 (x683 x546 x686)))
(assert (= x323 (=> (and (= x706 (x996 (- x949 x587))) (= x270 (ite (> x562 x907) x793 x990)) (= (x996 (- x231 x25)) x319) (= x9 (x996 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x319))) (= (x230 x70) x827) (= (x230 x70) x780) (= (x623 x794 1000000000000000000) x567) (= x949 (x623 x546 x686)) (= x172 (x623 x728 1000000000000000000)) (= x587 (x623 x489 x686)) (= (x623 x661 1000000000000000000) x25) (= x728 (x192 (x757 (x683 x546 x686) x399))) (= x231 (x385 (+ x172 x425))) (= (x376 4294967295 x990) x407) (not (< x9 0)) (= x794 (x192 (x757 x686 x399))) (= (ite (= 0 x682) x978 x626) x990) (= x399 (x179 x827 64)) (= (x179 x910 32) x626) (= x914 (x376 4294967295 x920)) (= (ite (< x446 x118) (x376 4294967295 x270) x446) x585) (= (x385 (+ x109 1)) x563) (= (x376 4294967295 x990) x907) (= (x376 4294967295 x388) x686) (= (x376 4294967295 x626) x682) (= x713 (x385 (+ x64 x746))) (= (x376 4294967295 x990) x64) (= x558 (ite (ite x946 x946 (< (x376 4294967295 x550) x713)) (x376 4294967295 x550) x713)) (= (x376 4294967295 x585) x546) (= (x168 x286) x67) (= x425 (x192 (x757 x706 x567))) (= x910 (x230 x70)) (= x489 (x376 4294967295 x270)) (= x319 x573) (= (ite (> x558 x914) (x376 4294967295 x920) x558) x446) (= x562 (x376 4294967295 x793)) (= (x376 4294967295 x780) x746) (= (= x713 x407) x946) (= x118 (x376 4294967295 x270)) (= (x385 (+ x293 32)) x70) (= (x192 (x757 (x683 x489 x686) x399)) x661) (= (not (> x67 x563)) x646)) (and (=> (= x423 x573) x997) x646))))
(assert (x970 (x683 x546 x686) (- x399 (x683 x798 x299))))
(assert (let ((x883 (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x876) x876 (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x996 (- x876 1))))))) (and (=> (and (> x883 0) (< 0 1000000000000000000)) (and (<= (* 1000000000000000000 (x623 x883 1000000000000000000)) x883) (> (* (x623 x883 1000000000000000000) 1000000000000000000) (- x883 1000000000000000000)))) (x243 x883 1000000000000000000) (x543 x883 1000000000000000000) (x810 x883 1000000000000000000) (x950 x883 1000000000000000000))))
(assert (x637 x46))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x626 4294967296) (* 4294967296 (x623 x626 4294967296))) x626)) (x892 x626 4294967296) (x542 x626 4294967296) (x84 x626 4294967296)))
(assert (x284 (ite (< x339 57896044618658097711785492504343953926634992332820282019728792003956564819968) x339 (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x996 (- x339 1)))))))
(assert (x32 x531 x800 x567 x706))
(assert (x725 x423))
(assert (x637 x445))
(assert (x970 x706 (- x567 x933)))
(assert (x725 x123))
(assert (= x111 (x790 (x518 x111))))
(assert (x637 x907))
(assert (x637 x926))
(assert (x970 x686 (- x399 (x683 x694 x531))))
(assert (x637 x949))
(assert (x637 x765))
(assert (= (+ 1 (x790 x625)) (x790 (x92 x625 1))))
(assert (x637 x270))
(assert (x569 x706 x567 x531 x800))
(assert (x610 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x970 x647 (- x761 x399)))
(assert (x637 x977))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x208 4294967296) (* 4294967296 (x623 x208 4294967296))) x208)) (x892 x208 4294967296) (x542 x208 4294967296) (x84 x208 4294967296)))
(assert (x333 (- (x683 x935 x531) x399)))
(assert (x112 x296))
(assert (x637 x308))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x926 4294967296) (* 4294967296 (x623 x926 4294967296))) x926)) (x892 x926 4294967296) (x542 x926 4294967296) (x84 x926 4294967296)))
(assert (x284 x862))
(assert (x610 115792089237316195423570985008687907853269984665640564039457584007908834672640))
(assert (x333 (- (x683 x694 x531) x706)))
(assert (x32 x399 (x683 x546 x686) x800 (x683 x694 x531)))
(assert (x764 (x855 (x385 (+ 160 x464)))))
(assert (x637 x940))
(assert (= x705 (x790 (x518 x705))))
(assert (x610 x793))
(assert (x970 (x683 x546 x686) (- x399 x86)))
(assert (x32 x175 x37 x567 x706))
(assert (x77 x626))
(assert (x764 x79))
(assert (x725 x204))
(assert (=> (<= (x855 (x385 (+ x464 128))) 10000) (= (x518 (x855 (x385 (+ 128 x464)))) (x42 (x855 (x385 (+ 128 x464)))))))
(assert (x637 x10))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x683 x788 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x623 x788 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x788)) (x892 x788 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x542 x788 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x84 x788 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x569 x86 x933 (x683 x546 x686) x399))
(assert (x112 x400))
(assert (x333 (- (x683 x935 x531) x706)))
(assert (= (x904 x392) 0))
(assert (x637 x937))
(assert (x637 x603))
(assert (x32 (x683 x862 x52) x761 x706 x567))
(assert (x284 x301))
(assert (x569 (x683 x862 x52) x761 (x683 x546 x686) x399))
(assert (x970 x86 (- x933 x567)))
(assert (x569 x647 x761 x686 x399))
(assert (x637 x557))
(assert (x637 x938))
(assert (x637 x52))
(assert (x32 x647 x761 x567 x706))
(assert (x637 x100))
(assert (x637 x259))
(assert (x637 x302))
(assert (x764 (x855 x464)))
(assert (x637 x636))
(assert (= x469 (and x7 (not x948))))
(assert (and (= (x757 340282366920938463463374607431768211456 x166) (* x166 340282366920938463463374607431768211456)) (and (= (- (* 340282366920938463463374607431768211456 (- x166 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x166 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x757 (- 115792089237316195423570985008687907852929702298719625575994209400481361428480) (- x166 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x757 (- 115792089237316195423570985008687907852929702298719625575994209400481361428480) x166) (- (* x166 340282366920938463463374607431768211456) (* x166 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x166 115792089237316195423570985008687907853269984665640564039457584007913129639936) 340282366920938463463374607431768211456) (x757 340282366920938463463374607431768211456 (- x166 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x849 340282366920938463463374607431768211456 x166) (x160 340282366920938463463374607431768211456 x166) (x959 340282366920938463463374607431768211456 x166) (x858 340282366920938463463374607431768211456 x166) (x548 340282366920938463463374607431768211456 x166)))
(assert (x610 x361))
(assert (x32 x686 x399 (x683 x862 x52) x761))
(assert (x637 x121))
(assert (x637 x173))
(assert (= (x790 (x518 (x855 (x385 (+ 96 x464))))) (x855 (x385 (+ 96 x464)))))
(assert (x32 (x683 x489 x686) x399 (x683 x798 x299) x86))
(assert (x569 x761 (x683 x862 x52) (x683 x489 x686) x399))
(assert (x32 x175 x37 x399 x686))
(assert (x333 (- x567 (x683 x798 x299))))
(assert (x637 x606))
(assert (=> (>= 10000 x955) (= (x42 x955) (x518 x955))))
(assert (x970 x399 (- (x683 x546 x686) (x683 x935 x531))))
(assert (x374 x694 x531))
(assert (x637 x291))
(assert (x32 x86 x933 x706 x567))
(assert (x637 x106))
(assert (x32 x86 x933 (x683 x489 x686) x399))
(assert (x610 x204))
(assert (x637 x621))
(assert (x970 x399 (- (x683 x546 x686) x800)))
(assert (x32 x399 x686 x761 x647))
(assert (x970 x175 (- x37 x567)))
(assert (x122 x361))
(assert (x637 x537))
(assert (x637 x587))
(assert (x637 x828))
(assert (x637 x231))
(assert (x970 x800 (- (x683 x935 x531) x567)))
(assert (x181 x865))
(assert (= x842 (and (not x474) x14)))
(assert (x637 x638))
(assert (x637 x324))
(assert (x725 x489))
(assert (x637 x467))
(assert (x32 x399 (x683 x546 x686) x37 x175))
(assert (x637 x218))
(assert (x637 x717))
(assert (x637 x777))
(assert (x637 x476))
(assert (= 0 (x395 (x385 (+ 160 x464)))))
(assert (x32 (x683 x546 x686) x399 x86 x933))
(assert (x333 (- (x683 x798 x299) (x683 x546 x686))))
(assert (x637 x412))
(assert (= 0 (x76 x854)))
(assert (= 0 (x519 x484)))
(assert (x569 x86 (x683 x798 x299) x686 x399))
(assert (x637 x686))
(assert (x284 x694))
(assert (x32 x567 x706 x933 x86))
(assert (= (x790 (x42 2113632)) 2113632))
(assert (x569 x399 x686 (x683 x798 x299) x86))
(assert (x764 x754))
(assert (x637 x265))
(assert (x637 x982))
(assert (= (and (not x792) x448) x239))
(assert (x32 x531 x800 x706 x567))
(assert (x637 x661))
(assert (x569 x567 x706 x175 x37))
(assert (x637 x3))
(assert (x637 x494))
(assert (x610 x5))
(assert (x637 x648))
(assert (x637 x850))
(assert (x354 x694 x531))
(assert (= (x790 (x42 3110348530)) 3110348530))
(assert (x637 x699))
(assert (x637 x443))
(assert (x637 x428))
(assert (= (x790 (x92 x795 2)) (+ (x790 x795) 2)))
(assert (x637 x78))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x388 4294967296) (* 4294967296 (x623 x388 4294967296))) x388)) (x892 x388 4294967296) (x542 x388 4294967296) (x84 x388 4294967296)))
(assert (x637 x605))
(assert (x77 x804))
(assert (x637 x267))
(assert (x333 (- (x683 x694 x531) x567)))
(assert (x970 (x683 x546 x686) (- x399 x175)))
(assert (x284 x749))
(assert (x637 x166))
(assert (x569 x686 x399 (x683 x862 x52) x761))
(assert (x637 x692))
(assert (x333 (- x531 (x683 x546 x686))))
(assert (x569 x567 x706 (x683 x862 x52) x761))
(assert (x32 x399 (x683 x546 x686) x86 (x683 x798 x299)))
(assert (= x758 (x790 (x518 x758))))
(assert (x333 (- (x683 x862 x52) x399)))
(assert (x333 (- (x683 x798 x299) x567)))
(assert (x970 x933 (- x86 (x683 x546 x686))))
(assert (x333 (- x567 (x683 x694 x531))))
(assert (x32 x531 x800 x399 (x683 x546 x686)))
(assert (x970 x399 (- (x683 x489 x686) x761)))
(assert (x637 x143))
(assert (x637 x80))
(assert (x569 x399 (x683 x546 x686) x647 x761))
(assert (x637 x715))
(assert (x32 (x683 x546 x686) x399 x800 (x683 x694 x531)))
(assert (x32 x531 x800 (x683 x489 x686) x399))
(assert (x32 x686 x399 x86 (x683 x798 x299)))
(assert (x637 x79))
(assert (x637 x552))
(assert (x970 (x683 x546 x686) (- x399 x933)))
(assert (x637 x639))
(assert (let ((x883 (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x339) x339 (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x996 (- x339 1))))))) (and (=> (and (> x883 0) (< 0 1000000000000000000)) (and (<= (* 1000000000000000000 (x623 x883 1000000000000000000)) x883) (> (* (x623 x883 1000000000000000000) 1000000000000000000) (- x883 1000000000000000000)))) (x243 x883 1000000000000000000) (x543 x883 1000000000000000000) (x810 x883 1000000000000000000) (x950 x883 1000000000000000000))))
(assert (x637 x141))
(assert (x77 x585))
(assert (x637 x140))
(assert (= (x42 115792089237316195423570985008687907852929702298719625575994209400481361428480) (x518 115792089237316195423570985008687907852929702298719625575994209400481361428480)))
(assert (= (and x447 x507) x327))
(assert (x32 (x683 x489 x686) x399 (x683 x694 x531) x800))
(assert (x32 x86 (x683 x798 x299) x686 x399))
(assert (x637 x171))
(assert (x637 x212))
(assert (x569 x567 x706 x531 x800))
(assert (x333 (- x761 (x683 x546 x686))))
(assert (x970 (x683 x546 x686) (- x399 (x683 x935 x531))))
(assert (= (or x493 x708) x976))
(assert (x333 (- x531 x706)))
(assert (x970 (x683 x546 x686) (- x399 x761)))
(assert (x637 x89))
(assert (x637 x188))
(assert (x637 x365))
(assert (x637 x99))
(assert (x637 x118))
(assert (x32 x706 x567 x800 (x683 x694 x531)))
(assert (x32 x37 x175 (x683 x489 x686) x399))
(assert (x569 x399 (x683 x489 x686) x647 x761))
(assert (x569 x37 x175 (x683 x489 x686) x399))
(assert (x333 (- x531 x567)))
(assert (x32 x399 (x683 x546 x686) x647 x761))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x120 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x120 340282366920938463463374607431768211456))) x120)) (x892 x120 340282366920938463463374607431768211456) (x542 x120 340282366920938463463374607431768211456) (x84 x120 340282366920938463463374607431768211456)))
(assert (x970 x761 (- (x683 x862 x52) x686)))
(assert (= x356 (or x12 x240)))
(assert (=> (>= 10000 x251) (= (x518 x251) (x42 x251))))
(assert (x637 x481))
(assert (= x212 (x790 (x518 x212))))
(assert (=> (>= 10000 x111) (= (x42 x111) (x518 x111))))
(assert (= x493 (and x283 (not x349))))
(assert (x32 (x683 x862 x52) x761 (x683 x546 x686) x399))
(assert (x725 x694))
(assert (x32 (x683 x935 x531) x800 x399 x686))
(assert (x970 x933 (- x86 x706)))
(assert (= x615 (or x786 x980)))
(assert (x333 (x683 x546 x686)))
(assert (x970 x686 (- x399 x933)))
(assert (x637 x788))
(assert (x32 x399 (x683 x546 x686) (x683 x798 x299) x86))
(assert (= 0 (x897 x346)))
(assert (x764 x688))
(assert (x284 x728))
(assert (x569 x933 x86 (x683 x546 x686) x399))
(assert (= (x855 x464) (x790 (x518 (x855 x464)))))
(assert (x333 (- (x683 x935 x531) x567)))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x204 4294967296) (* 4294967296 (x623 x204 4294967296))) x204)) (x892 x204 4294967296) (x542 x204 4294967296) (x84 x204 4294967296)))
(assert (x637 x955))
(assert (=> (>= 10000 x704) (= (x518 x704) (x42 x704))))
(assert (x839 x417))
(assert (x637 x738))
(assert (x637 x704))
(assert (x970 x399 (- (x683 x489 x686) (x683 x798 x299))))
(assert (x637 x783))
(assert (x32 x567 x706 x37 x175))
(assert (x333 (- (x683 x489 x686) x86)))
(assert (= (x790 (x92 x742 1)) (+ (x790 x742) 1)))
(assert (x637 x373))
(assert (x970 (x683 x862 x52) (- x761 (x683 x546 x686))))
(assert (x637 x292))
(assert (x970 x399 (- x686 (x683 x798 x299))))
(assert (= (x518 1000000000000000000) (x42 1000000000000000000)))
(assert (x637 x818))
(assert (x637 x862))
(assert (x970 (x683 x489 x686) (- x399 (x683 x862 x52))))
(assert (x970 x399 (- (x683 x489 x686) x933)))
(assert (= x994 (=> (and (= (x385 (+ x597 32)) x276) (= (x385 (+ x698 32)) x597) (= x550 (x232 x276)) (= x375 (> x743 x109)) (= x743 (x168 x286)) (= x978 (x595 x597))) (and (=> (and (and (< x109 x805) (= (x203 x690) x293) (= (x385 (+ x837 32)) x83) (= x805 (x168 x286)) (= x392 x293) (= (x902 x392) x16) (= (x192 (* 32 x109)) x837) (= x948 (= x16 x302)) (= (x385 (+ x83 x286)) x690)) x375) (and (=> x948 x323) (=> (and (= 0 x423) (not x948)) x997))) (=> (and (not x375) (= x423 0)) x997)))))
(assert (x32 x399 (x683 x489 x686) x175 x37))
(assert (x637 x295))
(assert (x333 (- x686 x761)))
(assert (x725 x620))
(assert (x970 x86 (- x933 x686)))
(assert (x637 x835))
(assert (x637 x581))
(assert (x637 x109))
(assert (x637 x545))
(assert (x32 (x683 x694 x531) x800 (x683 x489 x686) x399))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x783 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x783 340282366920938463463374607431768211456))) x783)) (x892 x783 340282366920938463463374607431768211456) (x542 x783 340282366920938463463374607431768211456) (x84 x783 340282366920938463463374607431768211456)))
(assert (x637 x939))
(assert (x610 x796))
(assert (x970 (x683 x935 x531) (- x800 (x683 x546 x686))))
(assert (x637 x602))
(assert (x725 x317))
(assert (x333 x279))
(assert (x569 (x683 x862 x52) x761 (x683 x489 x686) x399))
(assert (= x659 (x790 (x518 x659))))
(assert (x569 (x683 x489 x686) x399 x175 x37))
(assert (x77 x38))
(assert (x637 x726))
(assert (x32 x37 x175 x399 (x683 x546 x686)))
(assert (x333 x513))
(assert (x637 x103))
(assert (x637 x668))
(assert (x637 x111))
(assert (x77 x420))
(assert (x637 x468))
(assert (x637 x746))
(assert (x970 x686 (- x399 x175)))
(assert (x725 x52))
(assert (x970 x86 (- (x683 x798 x299) (x683 x546 x686))))
(assert (= (x790 (x518 (x855 (x385 (+ 64 x464))))) (x855 (x385 (+ x464 64)))))
(assert (x764 2113632))
(assert (x637 x307))
(assert (x637 x951))
(assert (x637 x550))
(assert (= 0 (x330 x866)))
(assert (= (and x344 x716) x240))
(assert (= (x790 (x42 79228162514264337593543950336)) 79228162514264337593543950336))
(assert (= (x790 (x42 3704226421)) 3704226421))
(assert (x637 x317))
(assert (x725 x531))
(assert (= x507 (or x24 x824)))
(assert (x32 x761 (x683 x862 x52) x399 (x683 x546 x686)))
(assert (x725 x443))
(assert (= x15 (and x612 x561)))
(assert (= (and x644 x640) x194))
(assert (x32 x567 x706 (x683 x862 x52) x761))
(assert (x970 x686 (- x399 (x683 x935 x531))))
(assert (x333 (- x175 x706)))
(assert (x32 x399 (x683 x546 x686) x531 x800))
(assert (= (x395 (x385 (+ 96 x464))) 0))
(assert (= (x42 2113632) (x518 2113632)))
(assert (x637 x125))
(assert (x970 (x683 x489 x686) (- x399 (x683 x935 x531))))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x683 x954 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x623 x954 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x954)) (x892 x954 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x542 x954 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x84 x954 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x790 (x42 3250587425)) 3250587425))
(assert (x637 x280))
(assert (x569 x399 (x683 x489 x686) (x683 x935 x531) x800))
(assert (x32 x399 x686 x800 (x683 x935 x531)))
(assert (x569 (x683 x489 x686) x399 x531 x800))
(assert (x333 (- (x683 x489 x686) x175)))
(assert (= x233 (and x357 x137)))
(assert (x970 x800 (- x531 x686)))
(assert (= (x42 1960641893) (x518 1960641893)))
(assert (x637 x384))
(assert (x637 x93))
(assert (x569 x86 x933 x686 x399))
(assert (x610 x270))
(assert (= (x395 (x385 (+ 32 x464))) 0))
(assert (= (x42 115792089237316195423570985008687907853269984665640564039457584007908834672640) (x518 115792089237316195423570985008687907853269984665640564039457584007908834672640)))
(assert (x637 x254))
(assert (x637 x158))
(assert (x569 x686 x399 (x683 x798 x299) x86))
(assert (= (and (not x751) x183) x14))
(assert (= 0 (x904 x576)))
(assert (x610 x626))
(assert (x333 (- (x683 x489 x686) x37)))
(assert (x637 x2))
(assert (x333 (- x706 x175)))
(assert (x333 (- (x683 x546 x686) x800)))
(assert (x725 x635))
(assert (x637 x430))
(assert (x970 x706 (- x567 (x683 x935 x531))))
(assert (x32 (x683 x935 x531) x800 (x683 x489 x686) x399))
(assert (x970 x761 (- x647 x686)))
(assert (x637 x945))
(assert (x970 x86 (- (x683 x798 x299) x686)))
(assert (x970 x686 (- x399 (x683 x862 x52))))
(assert (x333 x647))
(assert (= (or x488 x351) x889))
(assert (x637 x437))
(assert (= (x790 (x42 340282366920938463463374607431768211456)) 340282366920938463463374607431768211456))
(assert (x637 x43))
(assert (x32 x399 (x683 x546 x686) x86 x933))
(assert (x637 x252))
(assert (x764 x601))
(assert (= x675 (and x7 x948)))
(assert (x637 x134))
(assert (x637 x567))
(assert (=> (<= x528 10000) (= (x42 x528) (x518 x528))))
(assert (x970 (x683 x489 x686) (- x399 x86)))
(assert (= (and x583 x707) x612))
(assert (and (= (x757 32 x202) (* x202 32)) (and (= (- (* 32 (- x202 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x202 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x202 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x202) (- (* x202 32) (* x202 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x202 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x757 32 (- x202 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x849 32 x202) (x160 32 x202) (x959 32 x202) (x858 32 x202) (x548 32 x202)))
(assert (x725 x793))
(assert (x569 x686 x399 x933 x86))
(assert (x637 x310))
(assert (= (and x14 x474) x716))
(assert (x333 (- x933 x399)))
(assert (x637 x591))
(assert (x637 x484))
(assert (= (and x583 (not x707)) x258))
(assert (x970 x761 (- (x683 x862 x52) x567)))
(assert (x284 x494))
(assert (x569 x706 x567 x933 x86))
(assert (x764 x758))
(assert (x32 (x683 x862 x52) x761 x686 x399))
(assert (x637 x306))
(assert (x637 x927))
(assert (=> (<= x878 10000) (= (x518 x878) (x42 x878))))
(assert (x333 (- x686 (x683 x935 x531))))
(assert (x637 x347))
(assert (x610 255))
(assert (x32 x706 x567 (x683 x694 x531) x800))
(assert (x637 x120))
(assert (= (x179 x910 32) (x623 x910 4294967296)))
(assert (x112 x443))
(assert (x764 x261))
(assert (x970 x800 (- (x683 x694 x531) x706)))
(assert (x637 x556))
(assert (x333 (- x567 x647)))
(assert (x970 (x683 x489 x686) (- x399 x761)))
(assert (x32 x686 x399 x531 x800))
(assert (x32 x761 (x683 x862 x52) x399 (x683 x489 x686)))
(assert (x637 x947))
(assert (x637 x780))
(assert (= 0 (x943 x252)))
(assert (x725 x775))
(assert (x333 x535))
(assert (x32 x761 x647 (x683 x546 x686) x399))
(assert (x970 x399 (- (x683 x546 x686) x933)))
(assert (x32 x686 x399 x86 x933))
(assert (x333 (- (x683 x862 x52) (x683 x546 x686))))
(assert (x637 x685))
(assert (= (x790 (x42 4294967294)) 4294967294))
(assert (x637 x800))
(assert (x637 x59))
(assert (x637 x885))
(assert (x637 x993))
(assert (x333 (- x86 x399)))
(assert (x637 x410))
(assert (x333 (- x567 x86)))
(assert (x637 x424))
(assert (x637 x86))
(assert (x637 x495))
(assert (x637 x389))
(assert (x569 x399 x686 (x683 x862 x52) x761))
(assert (x32 (x683 x489 x686) x399 x531 x800))
(assert (x569 x86 (x683 x798 x299) (x683 x546 x686) x399))
(assert (x637 x703))
(assert (x374 x489 x686))
(assert (x610 1461501637330902918203684832716283019655932542975))
(assert (x725 x299))
(assert (x32 x567 x706 (x683 x935 x531) x800))
(assert (x32 (x683 x935 x531) x800 x567 x706))
(assert (x970 x399 (- (x683 x546 x686) x761)))
(assert (x569 x800 x531 (x683 x546 x686) x399))
(assert (= (x790 (x518 x688)) x688))
(assert (x725 x756))
(assert (x637 x91))
(assert (x970 x399 (- x686 (x683 x935 x531))))
(assert (x764 x212))
(assert (x637 x261))
(assert (x637 x572))
(assert (x637 x16))
(assert (x637 x559))
(assert (x637 x813))
(assert (x569 x800 (x683 x935 x531) x706 x567))
(assert (x970 x800 (- x531 (x683 x489 x686))))
(assert (x569 x399 (x683 x546 x686) x933 x86))
(assert (x970 (x683 x694 x531) (- x800 (x683 x489 x686))))
(assert (x637 x234))
(assert (x333 (- x567 x175)))
(assert (x970 x933 x86))
(assert (x333 (- (x683 x935 x531) (x683 x489 x686))))
(assert (x637 x436))
(assert (x77 x85))
(assert (x77 x143))
(assert (x970 x399 (- x686 x800)))
(assert (x333 (- x86 x686)))
(assert (x32 x86 (x683 x798 x299) x567 x706))
(assert (x77 x388))
(assert (x32 x800 x531 x567 x706))
(assert (x637 x656))
(assert (x637 x912))
(assert (x610 x803))
(assert (= (x790 (x518 (x855 (x385 (+ x464 192))))) (x855 (x385 (+ 192 x464)))))
(assert (x333 (- x800 (x683 x489 x686))))
(assert (x32 x175 x37 x399 (x683 x546 x686)))
(assert (x970 x706 (- x567 (x683 x694 x531))))
(assert (x333 (- x86 x567)))
(assert (x970 (x683 x798 x299) (- x86 x567)))
(assert (x970 (x683 x489 x686) (- x399 x175)))
(assert (x637 x372))
(assert (x970 x567 (- x706 x647)))
(assert (x333 (- x686 (x683 x798 x299))))
(assert (x637 x516))
(assert (x32 x647 x761 x706 x567))
(assert (x637 x57))
(assert (x764 x738))
(assert (x970 x399 (- (x683 x546 x686) (x683 x694 x531))))
(assert (x569 x686 x399 x175 x37))
(assert (x637 x705))
(assert (x637 x935))
(assert (x569 x686 x399 (x683 x694 x531) x800))
(assert (x970 (x683 x489 x686) x399))
(assert (x333 (- x175 x686)))
(assert (x637 x978))
(assert (x637 x87))
(assert (x32 x933 x86 x399 (x683 x489 x686)))
(assert (x637 x671))
(assert (x32 (x683 x862 x52) x761 x399 x686))
(assert (x637 x688))
(assert (x32 x399 (x683 x489 x686) (x683 x798 x299) x86))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x5 4294967296) (* 4294967296 (x623 x5 4294967296))) x5)) (x892 x5 4294967296) (x542 x5 4294967296) (x84 x5 4294967296)))
(assert (x569 x686 x399 x531 x800))
(assert (x77 x5))
(assert (x970 x37 (- x175 (x683 x489 x686))))
(assert (x32 x647 x761 (x683 x546 x686) x399))
(assert (x637 x611))
(assert (x610 x85))
(assert (x32 x567 x706 x800 x531))
(assert (x333 x933))
(assert (x637 x900))
(assert (x637 x635))
(assert (x637 x446))
(assert (x333 (- (x683 x489 x686) x800)))
(assert (x637 x35))
(assert (x77 x990))
(assert (x333 (- x175 x567)))
(assert (x32 x567 x706 x800 (x683 x694 x531)))
(assert (x637 x47))
(assert (x569 x800 (x683 x694 x531) x706 x567))
(assert (x637 x749))
(assert (x569 (x683 x546 x686) x399 (x683 x935 x531) x800))
(assert (x637 x98))
(assert (x637 x279))
(assert (x637 x966))
(assert (= x351 (and x763 (not x861))))
(assert (x32 (x683 x489 x686) x399 x800 (x683 x935 x531)))
(assert (x637 x133))
(assert (= (=> (and (= x956 (x376 4294967295 x793)) (= (ite x36 x674 x793) x621) (= x712 (x996 (- 340282366920938463463374607431768211455 x133))) (= (x376 340282366920938463463374607431768211455 x423) x133) (= x36 (< x956 x125)) (not (> 0 x712)) (= (x376 4294967295 x920) x125) (= x27 x402) (= x402 x133)) x273) x997))
(assert (x637 x710))
(assert (x725 x313))
(assert (x637 x513))
(assert (x637 x435))
(assert (x637 x142))
(assert (x610 x620))
(assert (x637 x933))
(assert (x764 x251))
(assert (x569 x567 x706 x933 x86))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x683 x361 1461501637330902918203684832716283019655932542976) (* 1461501637330902918203684832716283019655932542976 (x623 x361 1461501637330902918203684832716283019655932542976))) x361)) (x892 x361 1461501637330902918203684832716283019655932542976) (x542 x361 1461501637330902918203684832716283019655932542976) (x84 x361 1461501637330902918203684832716283019655932542976)))
(assert (=> (>= 10000 x79) (= (x518 x79) (x42 x79))))
(assert (x637 x403))
(assert (x970 x175 (- x37 x686)))
(assert (x637 x442))
(assert (x637 x673))
(assert (= x117 (and x448 x792)))
(assert (x32 x399 (x683 x489 x686) x933 x86))
(assert (x610 x420))
(assert (x610 x138))
(assert (x637 x618))
(assert (x725 x926))
(assert (x637 x83))
(assert (x575 x954))
(assert (= (x790 (x42 1960939212)) 1960939212))
(assert (x32 (x683 x546 x686) x399 (x683 x798 x299) x86))
(assert (x764 x311))
(assert (= x12 (and x716 (not x344))))
(assert (x970 (x683 x546 x686) (- x399 x531)))
(assert (= x448 (and x451 x532)))
(assert (x637 x761))
(assert (x32 x686 x399 (x683 x798 x299) x86))
(assert (= (x196 x286) 0))
(assert (x725 x5))
(assert (x333 (- (x683 x546 x686) (x683 x798 x299))))
(assert (x637 x535))
(assert (x970 x761 (- x647 (x683 x546 x686))))
(assert (x32 x86 x933 x399 (x683 x489 x686)))
(assert (x333 (- x647 x706)))
(assert (x725 x94))
(assert (x970 (x683 x862 x52) (- x761 (x683 x489 x686))))
(assert (x970 (x683 x546 x686) (- x399 x37)))
(assert (x637 x423))
(assert (and (=> (and (> x661 0) (< 0 1000000000000000000)) (and (<= (* 1000000000000000000 (x623 x661 1000000000000000000)) x661) (> (* (x623 x661 1000000000000000000) 1000000000000000000) (- x661 1000000000000000000)))) (x243 x661 1000000000000000000) (x543 x661 1000000000000000000) (x810 x661 1000000000000000000) (x950 x661 1000000000000000000)))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x324 4294967296) (* 4294967296 (x623 x324 4294967296))) x324)) (x892 x324 4294967296) (x542 x324 4294967296) (x84 x324 4294967296)))
(assert (x637 x965))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x550 4294967296) (* 4294967296 (x623 x550 4294967296))) x550)) (x892 x550 4294967296) (x542 x550 4294967296) (x84 x550 4294967296)))
(assert (x637 x405))
(assert (x333 (- x86 (x683 x489 x686))))
(assert (x637 x541))
(assert (= x913 (=> (and (= x699 x472) (= (x192 (* 32 x472)) x164) (= x840 (<= x158 224)) (= (x385 (+ x164 x256)) x717) (= x744 (x385 (+ x689 x730))) (= (x385 (+ x723 32)) x464) (= (x996 (- x557 x723)) x864) (= x863 (x996 (- x864 32))) (= (x192 (* 64 x472)) x689) (= x158 (x767 x723)) (= x31 x717) (= x557 x744)) (and x840 (=> (and (= x358 x557) (= x345 (ite (<= x158 32) (x769 (x518 (x855 x464)) 0) (ite (<= x158 64) (x427 (x518 (x855 x464)) (x518 (x855 (x385 (+ 32 x464)))) 0) (ite (>= 96 x158) (x95 (x518 (x855 x464)) (x518 (x855 (x385 (+ 32 x464)))) (x518 (x855 (x385 (+ x464 64)))) 0) (ite (>= 128 x158) (x398 (x518 (x855 x464)) (x518 (x855 (x385 (+ x464 32)))) (x518 (x855 (x385 (+ x464 64)))) (x518 (x855 (x385 (+ x464 96)))) 0) (ite (>= 160 x158) (x666 (x518 (x855 x464)) (x518 (x855 (x385 (+ x464 32)))) (x518 (x855 (x385 (+ 64 x464)))) (x518 (x855 (x385 (+ 96 x464)))) (x518 (x855 (x385 (+ x464 128)))) 0) (ite (<= x158 192) (x741 (x518 (x855 x464)) (x518 (x855 (x385 (+ x464 32)))) (x518 (x855 (x385 (+ 64 x464)))) (x518 (x855 (x385 (+ 96 x464)))) (x518 (x855 (x385 (+ x464 128)))) (x518 (x855 (x385 (+ x464 160)))) 0) (ite (>= 224 x158) (x263 (x518 (x855 x464)) (x518 (x855 (x385 (+ x464 32)))) (x518 (x855 (x385 (+ 64 x464)))) (x518 (x855 (x385 (+ x464 96)))) (x518 (x855 (x385 (+ 128 x464)))) (x518 (x855 (x385 (+ 160 x464)))) (x518 (x855 (x385 (+ x464 192)))) 0) (x518 x570)))))))))) x734)))))
(assert (= (+ (x790 x68) 1) (x790 (x92 x68 1))))
(assert (x32 x399 (x683 x489 x686) x531 x800))
(assert (= 0 (x958 x70)))
(assert (x637 x995))
(assert (x637 x617))
(assert (x32 x706 x567 (x683 x798 x299) x86))
(assert (x610 x208))
(assert (x32 x86 x933 x399 x686))
(assert (x284 (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x144) x144 (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x996 (- x144 1)))))))
(assert (=> (>= 10000 x705) (= (x518 x705) (x42 x705))))
(assert (x333 (- (x683 x862 x52) (x683 x489 x686))))
(assert (x970 (x683 x546 x686) (- x399 x800)))
(assert (x610 x426))
(assert (= (x897 x690) 0))
(assert (x333 x454))
(assert (x637 x523))
(assert (x569 x399 (x683 x546 x686) x175 x37))
(assert (= x61 (=> (and (and (and x404 (= x161 x673) (not (> 4 x636)) (= x945 x302) (= x193 x409) (= x228 x126) (= x818 x995) (not (< x364 3547226261)) (< x364 4060098646) (= x817 x220) (= x54 (< 18446744073709551615 x882)) (= (= x648 x220) x294) (or (and (= (<= x419 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x636)) (< x419 x636)) (and (> x419 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x636))) (= x771 x604) (>= x265 0) x294 (= (not (= x611 x141)) x316) (= (ite x129 1 0) x979) (= x877 (= x681 x900)) (= (x385 (+ 31 x529)) x578) (= x691 (not (= x890 x982))) (not (< x364 1749768213)) (not (> x975 18446744073709551615)) (= x920 x674) (= (x385 (+ x991 x88)) x50) (= x754 x171) (= x817 x521) (= (x385 (+ x975 4)) x589) (= (not (= x772 x57)) x96) (not (= x364 3547226261)) x691 (= x215 x539) (= x201 x648) (= x679 x681) (= x961 x704) (= x310 (x503 (x518 x251))) (not (or (> x463 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x463 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x463 160)))) (= (x376 115792089237316195423570985008687907853269984665640564039457584007913129639904 x578) x726) (= (> x50 x88) x586) (= x126 x772) (= x361 x13) (> x310 0) (= x3 x98) (= x437 x754) (= x419 (x385 (+ 31 x589))) (= (= x98 x153) x69) (= x668 x679) (= x215 0) (<= x265 1461501637330902918203684832716283019655932542975) (= x545 x602) (= x982 x3) (= x404 (= x409 x100)) (= x899 x458) (= x899 x173) (= 128 x940) (not (> x279 18446744073709551615)) (= x34 x602) (= x242 x153) (>= x818 0) (= x329 x900) (= x838 (x192 (* x279 32))) (= (= x228 x458) x952) x574 (= 3704226421 x364) (not (< x364 2652930389)) (= x361 x645) x69 (<= x818 1461501637330902918203684832716283019655932542975) (= x48 x57) x96 (= x632 x302) (and (> x636 163) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x636) true)) (= x529 (x385 (+ x838 32))) (= x704 x491) (= x979 0) (= x574 (= x771 x545)) (= x193 x611) (= x129 (or x54 x290)) (= x991 (x192 (* 32 x279))) (= (x385 (+ x726 128)) x882) (= x673 x100) (= (< x882 128) x290) (= x48 x141) (= x48 x890) (not (= 3655340144 x364)) (= x279 (x55 x589)) (= x463 (x996 (- x636 4))) x877 (>= 1461501637330902918203684832716283019655932542975 x361) (<= 0 x347) (= x347 x894) (= x88 (x385 (+ 32 x589))) (= x224 x242) (= x99 x894) (<= x347 1461501637330902918203684832716283019655932542975) x952 x316 (not (> x50 x636))) (and (= (x503 (x518 x251)) x18) (not (> 1960641893 x541)) (= x829 (x643 256)) (= (x130 608) x34) (not (or (and (= (<= x787 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x787 192)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x787))) (= x831 (x881 128)) (= x307 (x245 160)) (= x300 x912) (<= x727 1461501637330902918203684832716283019655932542975) (< 0 x18) (<= 0 x966) (= x173 (x130 640)) (= x224 (x130 512)) (not (< x636 4)) (<= 0 x727) (= x416 (x996 (- x636 68))) (= x82 (x996 (- x636 132))) (= x523 x99) (= 0 x106) (= 128 x779) (= x389 x244) (= x35 x995) (and (< 195 x636) (= true (<= x636 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 256 x967) (= x1 (x724 288)) (>= x35 0) (= 1960939212 x541) (= 192 x957) (= x326 192) (>= 1461501637330902918203684832716283019655932542975 x966) (< x541 2652930389) (= 256 x874) (= x584 128) (= x161 (x130 576)) (>= 1461501637330902918203684832716283019655932542975 x35) (= x485 (x477 192)) (= x106 x539) (> 2220280665 x541) (= x787 (x996 (- x636 4))) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x82) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x82) true) (< x82 64)))) (not (or (and (< x416 64) (= true (<= x416 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x416))) (= x523 x966) (not (= x541 1960641893)) (= x668 (x130 672)) (= (x988 224) x733) (not (< x541 1749768213)) (= x521 (x130 544)))) (and (= x355 (x503 (x518 x251))) (> x251 0) (>= 1461501637330902918203684832716283019655932542975 x105) (= x710 x878) x909 (<= 0 x71) (= x97 x795) (= x926 (x623 x348 18446744073709551616)) (<= x43 1461501637330902918203684832716283019655932542975) (= (x555 (x518 x79)) x81) (= (x90 192) x711) (>= x393 0) (>= 4294967295 x234) (>= 1461501637330902918203684832716283019655932542975 x929) (= (x332 x97) x495) (< 0 x111) (<= 0 x401) (>= 1461501637330902918203684832716283019655932542975 x101) (= x91 (x90 224)) (= x977 x631) (>= x81 0) (<= 0 x234) (= x441 (x376 4294967295 x38)) (= (x376 4294967295 x926) x229) (<= x916 1461501637330902918203684832716283019655932542975) (<= x251 1461501637330902918203684832716283019655932542975) (<= x414 1461501637330902918203684832716283019655932542975) (= 3704226421 x598) (= (< 0 (x503 (x518 x79))) x808) (not (= x79 x251)) (= x275 false) (<= 0 x929) (= x828 x605) (>= 1461501637330902918203684832716283019655932542975 x79) (= x836 (< 0 (x503 (x518 x111)))) (= (x92 x795 2) x742) (= false x63) (= x608 (x332 x530)) (not (= x79 x111)) (not (= x251 x111)) (not (< x497 1749768213)) (= x185 x929) x836 (<= 0 x105) (= x43 x995) (= 0 x977) (= (x427 (x518 x878) (x518 x212) 0) x687) (= false x832) (= x107 (x90 256)) (= (x332 x530) x445) (= (x92 x742 1) x530) (<= 0 x43) (>= x605 0) (= x381 (x332 x742)) (<= 0 x101) (<= 0 x937) (not (= 3110348530 x497)) (<= x71 1461501637330902918203684832716283019655932542975) (= (x623 x608 4294967296) x38) (= false x492) (= x48 x758) (<= 0 x414) (= x71 x993) (= x212 x103) (= 5 x418) (<= x937 340282366920938463463374607431768211455) (= x414 x568) (<= x281 1461501637330902918203684832716283019655932542975) (= (x427 (x518 x758) x687 0) x795) (>= x700 0) (= x916 x993) (<= 0 x281) (> x355 0) (>= 1461501637330902918203684832716283019655932542975 x605) (not (> 3110348530 x497)) (not (> 2652930389 x497)) (< 0 x79) (= (x555 (x518 x111)) x22) (>= 4294967295 x700) (= x105 x479) (< x497 3547226261) (>= x916 0) (<= 0 x22) (= x884 (x376 340282366920938463463374607431768211455 x296)) (= (x90 128) x300) (= x244 (x90 160)) (= x101 x696) (<= x111 1461501637330902918203684832716283019655932542975) x808 (= (x332 x530) x348) (= (x623 x445 79228162514264337593543950336) x296) (= x909 (> (x503 (x518 x251)) 0)) (= 3250587425 x497) (>= 1461501637330902918203684832716283019655932542975 x401) (= x163 x568) (= (x555 (x518 x251)) x393))) (and (=> (and x586 (and (= x954 (x385 (+ x359 31))) (not (or (and (= true (<= x755 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 128 x755)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x755))) (= (x55 x424) x199) (= x755 (x996 (- x636 x328))) (= (x385 (+ x298 32)) x359) (= x39 (ite x628 1 0)) (= (or x880 x823) x628) (= x823 (< x476 x882)) (= x835 (x55 x797)) (= (x385 (+ 128 x882)) x476) (= (x192 (* 64 x199)) x515) (= x938 0) (= x455 (x385 (+ x424 32))) (not (> x678 18446744073709551615)) (= (ite x320 1 0) x938) (= x853 (x376 115792089237316195423570985008687907853269984665640564039457584007913129639904 x954)) (= (x55 x207) x609) (= x328 (x385 (+ x678 x88))) (= x942 (x385 (+ x476 32))) (= x599 (< x238 x476)) (= (> x238 18446744073709551615) x657) (not (< x636 x655)) (= (x55 x88) x678) (= (x385 (+ x424 31)) x677) (= (or x599 x657) x320) (= x882 x552) (= (x385 (+ x678 x88)) x797) (= x424 (x385 (+ x797 x609))) (not (< 18446744073709551615 x199)) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x636) (<= x677 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x636 x677)) (and (> x677 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x636 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x192 (* 32 x199)) x298) (= x752 (< x455 x655)) (= (x385 (+ x853 x476)) x238) (= x880 (< 18446744073709551615 x476)) (= (x385 (+ x455 x515)) x655) (= 0 x39) (not (> x609 18446744073709551615)) (= x207 (x385 (+ x797 32))))) (and (=> x752 x660) (=> (and (= x951 x238) (not x752)) x893))) (=> (and (= x723 x882) (not x586)) x517)))))
(assert (x112 x428))
(assert (x637 x723))
(assert (x32 x399 x686 x37 x175))
(assert (x637 x242))
(assert (x637 x101))
(assert (x569 x567 x706 (x683 x935 x531) x800))
(assert (x637 x355))
(assert (x32 x800 (x683 x935 x531) x567 x706))
(assert (x610 x248))
(assert (x610 x585))
(assert (x32 x399 (x683 x546 x686) (x683 x694 x531) x800))
(assert (x32 x800 (x683 x935 x531) x399 (x683 x546 x686)))
(assert (x637 x659))
(assert (x284 x511))
(assert (x32 (x683 x798 x299) x86 (x683 x546 x686) x399))
(assert (x970 x800 (- (x683 x694 x531) (x683 x489 x686))))
(assert (= x334 (x790 (x518 x334))))
(assert (x284 x697))
(assert (x637 x335))
(assert (x970 (x683 x694 x531) (- x800 x399)))
(assert (x637 x393))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x420 4294967296) (* 4294967296 (x623 x420 4294967296))) x420)) (x892 x420 4294967296) (x542 x420 4294967296) (x84 x420 4294967296)))
(assert (= (x76 x276) 0))
(assert (= x641 (=> (and (= x921 (x376 4294967295 x920)) (= x532 (ite (< 0 x885) (> (x376 4294967295 x920) (x376 4294967295 x793)) (< 0 x885))) (= (x376 4294967295 x936) x639) (= (x376 4294967295 x920) x152) (= (x376 4294967295 x204) x663) (= x793 (ite (< x663 x639) x936 x663)) (not (> x297 x921)) (= x762 (x427 (x518 x302) x536 0)) (= x103 x311) (= (x652 128) x885) (= x536 (x427 (x518 x601) (x518 x311) 0)) (= (x683 x152 x217) x715) (= (x376 4294967295 x715) x297) (= (x518 x134) x845) (= x217 (x376 4294967295 x388)) (= (x996 (- x921 x297)) x936) (> x217 0) (= x170 (x427 (x518 x704) x162 0)) (= x204 (x332 x170)) (= (x92 x762 1) x162)) (and (=> (and (and (= (x846 x866) x747) (= x989 (x168 x588)) (= (= x989 0) x792) (= x151 (x996 (- x885 1))) (not (= 0 x885)) (= (x192 (* 32 x151)) x11) (= x148 (x385 (+ 32 x11))) (= x121 (x652 128)) (= (x385 (+ 128 x148)) x866) (= x698 (x385 (+ x747 32))) (= x588 (x613 x698)) (> x121 x151)) x532) (and (=> (and (and (= x793 x621) (= 0 x27)) x792) x273) (=> (and (and (= (x613 x698) x286) (= (< 0 x271) x102) (= (x168 x286) x271)) (not x792)) (and (=> (and (= x109 0) (not x102)) x994) (=> (and (and (and (= (x385 (+ 32 x745)) x572) (= (< x314 x302) x357) (= x314 (x902 x87)) (> x551 x202) (= x366 x87) (= x366 (x203 x616)) (= (x385 (+ x286 x572)) x616) (= (x996 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x271)) x363) (= (x192 (* 32 x202)) x745) (= x202 (x623 x80 2)) (not (> 0 x363)) (= x551 (x168 x286)) (= x271 x80)) (or (and (and (= x202 x809) (= x380 0)) (not x357)) (and (and (= x66 x380) (= x66 (x385 (+ x202 1))) (= x809 x271)) x357))) x102) x457))))) (=> (and (not x532) (and (= x804 x793) (= x454 0))) x596)))))
(assert (x839 x729))
(assert (x32 x647 x761 x399 (x683 x546 x686)))
(assert (= (x42 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x518 57896044618658097711785492504343953926634992332820282019728792003956564819968)))
(assert (x284 x686))
(assert (x32 x399 (x683 x489 x686) x761 (x683 x862 x52)))
(assert (x637 x991))
(assert (x333 (- x531 x399)))
(assert (x333 (- (x683 x862 x52) x706)))
(assert (x637 x387))
(assert (x637 x37))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x85 4294967296) (* 4294967296 (x623 x85 4294967296))) x85)) (x892 x85 4294967296) (x542 x85 4294967296) (x84 x85 4294967296)))
(assert (x764 x481))
(assert (= (+ (x790 x449) 2) (x790 (x92 x449 2))))
(assert (x637 x753))
(assert (x333 (- x706 x647)))
(assert (x970 x800 (- x531 x399)))
(assert (x354 x935 x531))
(assert (x637 x220))
(assert (= 0 (x519 x597)))
(assert (= x660 (=> (and (= (ite x60 1 0) x693) (= x23 (not (> x655 x176))) (= x505 (x385 (+ 32 x455))) (= (x55 x308) x968) (= (or x277 x633) x60) (= x308 x455) (= x971 (x385 (+ x238 64))) (= x322 (x55 x505)) (= (x385 (+ x505 32)) x176) (= x633 (< x971 x238)) (= (x996 (- x636 x455)) x915) (= x238 x189) (= x693 0) (= x703 (x385 (+ 32 x238))) (not (or (> x915 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x915) true) (> 64 x915)))) (= (< 18446744073709551615 x971) x277)) (and x23 (=> (= x971 x951) x893)))))
(assert (x610 x400))
(assert (x839 x400))
(assert (= (x790 (x42 115792089237316195423570985008687907853269984665640564039457584007908834672640)) 115792089237316195423570985008687907853269984665640564039457584007908834672640))
(assert (x32 x567 x706 x531 x800))
(assert (x569 x761 x647 x706 x567))
(assert (x333 (- (x683 x862 x52) x686)))
(assert (x333 (- x647 (x683 x489 x686))))
(assert (= (x518 79228162514264337593543950336) (x42 79228162514264337593543950336)))
(assert (x32 (x683 x546 x686) x399 x761 (x683 x862 x52)))
(assert (x610 x775))
(assert (x637 x803))
(assert (x637 x837))
(assert (x637 x223))
(assert (x637 x918))
(assert (x637 x504))
(assert (x77 x138))
(assert (x637 x711))
(assert (= (and (not x586) x525) x974))
(assert (x725 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x569 (x683 x489 x686) x399 (x683 x694 x531) x800))
(assert (x637 x809))
(assert (x637 x271))
(assert (x725 32))
(assert (x77 x287))
(assert (x970 x800 (- (x683 x935 x531) (x683 x546 x686))))
(assert (= x812 (=> (= x434 (not (> x856 x468))) (and (=> (= x415 x468) x624) x434))))
(assert (x970 x567 (- x706 (x683 x694 x531))))
(assert (= (x518 340282366920938463463374607431768211456) (x42 340282366920938463463374607431768211456)))
(assert (x637 x712))
(assert (x637 x462))
(assert (x610 x936))
(assert (x970 x686 x399))
(assert (x764 x704))
(assert (x637 x589))
(assert (x284 x318))
(assert (x637 x314))
(assert (x970 x706 x567))
(assert (x32 x800 x531 x399 (x683 x546 x686)))
(assert (x569 (x683 x546 x686) x399 x933 x86))
(assert (x569 x531 x800 (x683 x489 x686) x399))
(assert (x333 (- x399 x761)))
(assert (x32 (x683 x546 x686) x399 x800 x531))
(assert (= x302 (x790 (x518 x302))))
(assert (x32 x706 x567 x933 x86))
(assert (x637 x876))
(assert (= (x179 x827 64) (x623 x827 18446744073709551616)))
(assert (x32 (x683 x935 x531) x800 x399 (x683 x546 x686)))
(assert (x112 x756))
(assert (x637 x304))
(assert (x637 x690))
(assert (x32 x761 x647 x567 x706))
(assert (x333 (- (x683 x489 x686) (x683 x694 x531))))
(assert (x970 x37 (- x175 (x683 x546 x686))))
(assert (= (x790 (x42 4294967295)) 4294967295))
(assert (x637 x71))
(assert (x637 x229))
(assert (= (x519 x136) 0))
(assert (x637 x878))
(assert (x569 (x683 x935 x531) x800 (x683 x489 x686) x399))
(assert (x637 x339))
(assert (x32 x933 x86 x686 x399))
(assert (x637 x497))
(assert (= 0 (x395 (x385 (+ 128 x464)))))
(assert (= x721 (x790 (x518 x721))))
(assert (x725 x378))
(assert (x569 x761 x647 x686 x399))
(assert (x725 x804))
(assert (x333 (x683 x489 x686)))
(assert (x32 x37 x175 x686 x399))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x143 4294967296) (* 4294967296 (x623 x143 4294967296))) x143)) (x892 x143 4294967296) (x542 x143 4294967296) (x84 x143 4294967296)))
(assert (x637 x359))
(assert (x970 x647 (- x761 (x683 x489 x686))))
(assert (x637 x338))
(assert (x333 (- (x683 x489 x686) (x683 x862 x52))))
(assert (x32 x567 x706 x175 x37))
(assert (x333 (- x647 (x683 x546 x686))))
(assert (= (x518 4294967294) (x42 4294967294)))
(assert (x284 x489))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x683 x578 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x623 x578 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x578)) (x892 x578 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x542 x578 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x84 x578 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x637 x425))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x803 4294967296) (* 4294967296 (x623 x803 4294967296))) x803)) (x892 x803 4294967296) (x542 x803 4294967296) (x84 x803 4294967296)))
(assert (x970 x800 (- (x683 x935 x531) x706)))
(assert (x32 x706 x567 x761 (x683 x862 x52)))
(assert (x333 (- x800 (x683 x546 x686))))
(assert (not x61))
(assert (x32 (x683 x935 x531) x800 x399 (x683 x489 x686)))
(assert (x32 x800 x531 x706 x567))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x775 4294967296) (* 4294967296 (x623 x775 4294967296))) x775)) (x892 x775 4294967296) (x542 x775 4294967296) (x84 x775 4294967296)))
(assert (x637 x107))
(assert (x284 (ite (< x876 57896044618658097711785492504343953926634992332820282019728792003956564819968) x876 (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x996 (- x876 1)))))))
(assert (x569 (x683 x546 x686) x399 (x683 x798 x299) x86))
(assert (x637 x854))
(assert (x637 x566))
(assert (x637 x248))
(assert (= 0 (x904 x87)))
(assert (x333 (- x37 x706)))
(assert (x637 x662))
(assert (= (x790 (x42 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x725 x120))
(assert (x32 x761 (x683 x862 x52) (x683 x489 x686) x399))
(assert (x569 x175 x37 x686 x399))
(assert (x637 x219))
(assert (x725 x715))
(assert (=> (>= 10000 x738) (= (x518 x738) (x42 x738))))
(assert (x970 x761 (- (x683 x862 x52) x706)))
(assert (x637 x679))
(assert (x32 x399 (x683 x489 x686) x647 x761))
(assert (x970 (x683 x935 x531) (- x800 x399)))
(assert (= 1960641893 (x790 (x42 1960641893))))
(assert (x970 x686 (- x399 x531)))
(assert (x637 x490))
(assert (x637 x971))
(assert (= 0 (x897 x616)))
(assert (x284 x910))
(assert (x970 (x683 x798 x299) x86))
(assert (x764 x302))
(assert (x637 x480))
(assert (x970 x399 (- x686 x933)))
(assert (x333 (- x86 (x683 x546 x686))))
(assert (= 0 (x395 (x385 (+ x464 192)))))
(assert (x637 x361))
(assert (x610 x337))
(assert (x637 x642))
(assert (x32 x86 (x683 x798 x299) (x683 x489 x686) x399))
(assert (x569 x567 x706 (x683 x798 x299) x86))
(assert (x637 x647))
(assert (x725 x651))
(assert (x333 (- x37 (x683 x489 x686))))
(assert (x637 x138))
(assert (x32 x800 (x683 x935 x531) (x683 x546 x686) x399))
(assert (x637 x609))
(assert (= (x790 (x42 18446744073709551615)) 18446744073709551615))
(assert (x32 (x683 x798 x299) x86 x706 x567))
(assert (x970 x706 (- x567 x175)))
(assert (x970 x175 (- x37 x399)))
(assert (x637 x890))
(assert (x970 x800 (- x531 (x683 x546 x686))))
(assert (x970 (x683 x862 x52) x761))
(assert (x637 x67))
(assert (= 0 (x653 x698)))
(assert (x839 x426))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x850 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x850 340282366920938463463374607431768211456))) x850)) (x892 x850 340282366920938463463374607431768211456) (x542 x850 340282366920938463463374607431768211456) (x84 x850 340282366920938463463374607431768211456)))
(assert (x32 (x683 x489 x686) x399 x647 x761))
(assert (x333 (- x567 (x683 x935 x531))))
(assert (x970 x686 (- x399 (x683 x798 x299))))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x947 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x947 340282366920938463463374607431768211456))) x947)) (x892 x947 340282366920938463463374607431768211456) (x542 x947 340282366920938463463374607431768211456) (x84 x947 340282366920938463463374607431768211456)))
(assert (x637 x315))
(assert (x333 (- x399 x86)))
(assert (x32 (x683 x489 x686) x399 x761 (x683 x862 x52)))
(assert (x970 x706 (- x567 (x683 x862 x52))))
(assert (x637 x754))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x756 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x756 340282366920938463463374607431768211456))) x756)) (x892 x756 340282366920938463463374607431768211456) (x542 x756 340282366920938463463374607431768211456) (x84 x756 340282366920938463463374607431768211456)))
(assert (x637 x341))
(assert (x637 x817))
(assert (x637 x856))
(assert (x637 x626))
(assert (x77 x313))
(assert (x637 x649))
(assert (x637 x286))
(assert (x333 (- (x683 x694 x531) x686)))
(assert (x32 (x683 x694 x531) x800 x399 (x683 x546 x686)))
(assert (x637 x512))
(assert (= (x790 (x42 57896044618658097711785492504343953926634992332820282019728792003956564819968)) 57896044618658097711785492504343953926634992332820282019728792003956564819968))
(assert (x637 x956))
(assert (x637 x297))
(assert (x637 x697))
(assert (x970 x686 (- x399 x37)))
(assert (x970 x37 (- x175 x399)))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x317 4294967296) (* 4294967296 (x623 x317 4294967296))) x317)) (x892 x317 4294967296) (x542 x317 4294967296) (x84 x317 4294967296)))
(assert (x637 x592))
(assert (x970 x706 (- x567 x86)))
(assert (x637 x682))
(assert (x637 x772))
(assert (x32 x800 (x683 x694 x531) (x683 x546 x686) x399))
(assert (x637 x870))
(assert (and (= (x757 64 x199) (* x199 64)) (and (= (- (* 64 (- x199 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x199 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639872) (- x199 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639872) x199) (- (* x199 64) (* x199 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x199 115792089237316195423570985008687907853269984665640564039457584007913129639936) 64) (x757 64 (- x199 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x849 64 x199) (x160 64 x199) (x959 64 x199) (x858 64 x199) (x548 64 x199)))
(assert (x569 x531 x800 (x683 x546 x686) x399))
(assert (x333 (- (x683 x546 x686) x37)))
(assert (x32 x399 (x683 x546 x686) x761 x647))
(assert (x284 x798))
(assert (=> (<= x302 10000) (= (x42 x302) (x518 x302))))
(assert (x637 x416))
(assert (x32 x800 (x683 x694 x531) x706 x567))
(assert (x32 (x683 x489 x686) x399 (x683 x935 x531) x800))
(assert (x333 (- x399 (x683 x862 x52))))
(assert (x637 x895))
(assert (x637 x13))
(assert (x725 x780))
(assert (x333 (- x706 x800)))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x337 4294967296) (* 4294967296 (x623 x337 4294967296))) x337)) (x892 x337 4294967296) (x542 x337 4294967296) (x84 x337 4294967296)))
(assert (x637 x529))
(assert (x637 x154))
(assert (x637 x563))
(assert (x637 x66))
(assert (= x601 (x790 (x518 x601))))
(assert (x725 x337))
(assert (x32 (x683 x546 x686) x399 x86 (x683 x798 x299)))
(assert (x610 x954))
(assert (x637 x235))
(assert (x637 x620))
(assert (x725 x954))
(assert (x970 x761 (- x647 x399)))
(assert (x637 x866))
(assert (x77 x803))
(assert (x839 x850))
(assert (x970 x647 (- x761 x686)))
(assert (x725 x865))
(assert (= (x518 2220280665) (x42 2220280665)))
(assert (x32 x37 x175 x706 x567))
(assert (x637 x745))
(assert (x32 x399 x686 (x683 x862 x52) x761))
(assert (= x273 (=> (and (= (x385 (+ x698 32)) x136) (= x324 (x595 x136)) (= (ite (< 0 x151) (< (x376 4294967295 x793) (x376 4294967295 x324)) (< 0 x151)) x119)) (and (=> (and (and (= x454 x27) (= x621 x804)) (not x119)) x596) (=> (and (and (= (x385 (+ 32 x115)) x384) (= x513 (x996 (- x151 1))) (= x140 (x385 (+ 128 x249))) (= (x652 128) x695) (= x264 (x613 x384)) (not (= 0 x151)) (= x751 (= x412 0)) (> x695 x513) (= (x385 (+ 32 x549)) x249) (= (x192 (* x513 32)) x549) (= (x168 x264) x412) (= x115 (x846 x140))) x119) (and (=> x751 x135) (=> (and (and (= (> x638 0) x474) (= x638 (x168 x222)) (= x222 (x613 x384))) (not x751)) (and (=> (and (= x415 0) (not x474)) x624) (=> (and (and (and (= (x385 (+ x482 x222)) x241) (= x344 (> x302 x917)) (< x535 x512) (= (x385 (+ x20 32)) x482) (= x697 x638) (= x20 (x192 (* 32 x535))) (= x372 (x203 x241)) (= x576 x372) (= (x902 x576) x917) (= x512 (x168 x222)) (= x235 (x996 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x638))) (not (> 0 x235)) (= x535 (x623 x697 2))) (or (and (and (= x535 x856) (= x468 0)) (not x344)) (and x344 (and (= (x385 (+ 1 x535)) x591) (= x638 x856) (= x591 x468))))) x474) x812)))))))))
(assert (and (= (x757 32 x109) (* x109 32)) (and (= (- (* 32 (- x109 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x109 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x109 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x109) (- (* x109 32) (* x109 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x109 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x757 32 (- x109 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x849 32 x109) (x160 32 x109) (x959 32 x109) (x858 32 x109) (x548 32 x109)))
(assert (= (x790 (x42 4060098646)) 4060098646))
(assert (= x955 (x790 (x518 x955))))
(assert (x637 x827))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x990 4294967296) (* 4294967296 (x623 x990 4294967296))) x990)) (x892 x990 4294967296) (x542 x990 4294967296) (x84 x990 4294967296)))
(assert (= x553 (x790 (x518 x553))))
(assert (x637 x750))
(assert (x333 x567))
(assert (= x570 (x790 (x518 x570))))
(assert (x110 x150))
(assert (= x79 (x790 (x518 x79))))
(assert (x569 x800 (x683 x694 x531) x686 x399))
(assert (=> (<= x939 10000) (= (x518 x939) (x42 x939))))
(assert (x637 x251))
(assert (= x251 (x790 (x518 x251))))
(assert (x637 x798))
(assert (x725 x152))
(assert (x610 x635))
(assert (= true x525))
(assert (x970 (x683 x489 x686) (- x399 x800)))
(assert (x637 x604))
(assert (x32 x706 x567 x86 x933))
(assert (x637 x802))
(assert (x637 x28))
(assert (x637 x460))
(assert (x970 x761 (- (x683 x862 x52) x399)))
(assert (x970 x86 (- (x683 x798 x299) x399)))
(assert (x333 (- x706 x531)))
(assert (x333 (- x531 (x683 x489 x686))))
(assert (x637 x528))
(assert (x569 x706 x567 (x683 x694 x531) x800))
(assert (x569 x399 (x683 x489 x686) (x683 x694 x531) x800))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x296 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x296 340282366920938463463374607431768211456))) x296)) (x892 x296 340282366920938463463374607431768211456) (x542 x296 340282366920938463463374607431768211456) (x84 x296 340282366920938463463374607431768211456)))
(assert (x333 (- x37 x686)))
(assert (x333 x109))
(assert (= x754 (x790 (x518 x754))))
(assert (= 0 (x196 x390)))
(assert (= (x790 (x518 x311)) x311))
(assert (x32 x686 x399 x933 x86))
(assert (= (x42 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x518 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x333 (- x647 x686)))
(assert (x569 x800 (x683 x935 x531) x686 x399))
(assert (x32 x647 x761 (x683 x489 x686) x399))
(assert (x284 x661))
(assert (x284 x490))
(assert (x32 x761 (x683 x862 x52) (x683 x546 x686) x399))
(assert (x333 (- x399 x175)))
(assert (x637 x260))
(assert (x970 x567 (- x706 x761)))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x428 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x428 340282366920938463463374607431768211456))) x428)) (x892 x428 340282366920938463463374607431768211456) (x542 x428 340282366920938463463374607431768211456) (x84 x428 340282366920938463463374607431768211456)))
(assert (x333 (- x37 (x683 x546 x686))))
(assert (x970 (x683 x489 x686) (- x399 x37)))
(assert (x569 (x683 x489 x686) x399 x647 x761))
(assert (x970 x567 (- x706 x86)))
(assert (= (and (not x561) x612) x644))
(assert (x637 x264))
(assert (x569 x531 x800 x706 x567))
(assert (x112 x947))
(assert (x333 (- (x683 x798 x299) (x683 x489 x686))))
(assert (x970 (x683 x694 x531) (- x800 x686)))
(assert (x32 x761 x647 x706 x567))
(assert (x569 (x683 x798 x299) x86 x686 x399))
(assert (x725 1461501637330902918203684832716283019655932542976))
(assert (x637 x177))
(assert (x333 (- (x683 x935 x531) x686)))
(assert (x354 x152 x217))
(assert (x970 (x683 x935 x531) x800))
(assert (= (x790 (x518 x261)) x261))
(assert (= (x897 x256) 0))
(assert (x637 x863))
(assert (= (x790 (x42 115792089237316195423570985008687907852929702298719625575994209400481361428480)) 115792089237316195423570985008687907852929702298719625575994209400481361428480))
(assert (x637 x515))
(assert (= (x518 (x790 x590)) x590))
(assert (x569 (x683 x862 x52) x761 x686 x399))
(assert (x32 x399 (x683 x489 x686) x86 x933))
(assert (x637 x888))
(assert (x333 (- (x683 x489 x686) (x683 x935 x531))))
(assert (x725 x85))
(assert (x333 (- x175 (x683 x546 x686))))
(assert (x32 (x683 x694 x531) x800 x706 x567))
(assert (= (x790 (x518 x878)) x878))
(assert (x354 x798 x299))
(assert (x637 x731))
(assert (= (x790 (x92 x565 1)) (+ 1 (x790 x565))))
(assert (x970 x567 (- x706 (x683 x935 x531))))
(assert (x970 x37 (- x175 x567)))
(assert (=> (<= x481 10000) (= (x42 x481) (x518 x481))))
(assert (x637 x598))
(assert (x333 (x683 x798 x299)))
(assert (x32 x175 x37 (x683 x546 x686) x399))
(assert (x333 x761))
(assert (x637 x677))
(assert (= x806 (and (not x102) x239)))
(assert (x610 x990))
(assert (x637 x224))
(assert (and (= (x757 32 x472) (* x472 32)) (and (= (- (* 32 (- x472 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x472 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x472 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x472) (- (* x472 32) (* x472 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x472 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x757 32 (- x472 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x849 32 x472) (x160 32 x472) (x959 32 x472) (x858 32 x472) (x548 32 x472)))
(assert (x610 x143))
(assert (= (and x349 x283) x708))
(assert (x569 x800 (x683 x935 x531) (x683 x546 x686) x399))
(assert (x333 (- x647 x399)))
(assert (let ((x883 (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x144) x144 (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x996 (- x144 1))))))) (and (=> (and (> x883 0) (< 0 1000000000000000000)) (and (<= (* 1000000000000000000 (x623 x883 1000000000000000000)) x883) (> (* (x623 x883 1000000000000000000) 1000000000000000000) (- x883 1000000000000000000)))) (x243 x883 1000000000000000000) (x543 x883 1000000000000000000) (x810 x883 1000000000000000000) (x950 x883 1000000000000000000))))
(assert (x284 x531))
(assert (x637 x820))
(assert (x333 (- x761 x706)))
(assert (x569 x761 (x683 x862 x52) x706 x567))
(assert (= x65 (=> (and (>= 340282366920938463463374607431768211455 x895) (= (x376 340282366920938463463374607431768211455 x756) x41) (= x127 x895) (= x41 x630) (< (+ x27 x41) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x891 x27) (= x127 (+ x891 x630))) x135)))
(assert (x970 x399 (- (x683 x489 x686) (x683 x862 x52))))
(assert (= (x518 2652930389) (x42 2652930389)))
(assert (= (x179 x104 32) (x623 x104 4294967296)))
(assert (x32 x567 x706 x86 x933))
(assert (x333 (- x933 x686)))
(assert (x32 (x683 x546 x686) x399 x761 x647))
(assert (x637 x94))
(assert (x569 (x683 x694 x531) x800 (x683 x489 x686) x399))
(assert (x839 x783))
(assert (x284 x608))
(assert (x32 x800 (x683 x935 x531) (x683 x489 x686) x399))
(assert (=> (>= 10000 (x855 (x385 (+ 192 x464)))) (= (x42 (x855 (x385 (+ 192 x464)))) (x518 (x855 (x385 (+ 192 x464)))))))
(assert (x970 x647 x761))
(assert (x569 x399 x686 x933 x86))
(assert (x610 x423))
(assert (x725 x388))
(assert (x333 (- x706 (x683 x798 x299))))
(assert (= (x518 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x42 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x284 x903))
(assert (x637 x526))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x736 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x736 340282366920938463463374607431768211456))) x736)) (x892 x736 340282366920938463463374607431768211456) (x542 x736 340282366920938463463374607431768211456) (x84 x736 340282366920938463463374607431768211456)))
(assert (x970 x567 (- x706 x37)))
(assert (x333 (- x531 x686)))
(assert (x32 x800 (x683 x694 x531) x686 x399))
(assert (and (= (x757 1000000000000000000 x454) (* x454 1000000000000000000)) (and (= (- (* 1000000000000000000 (- x454 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x454 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x757 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x454 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x757 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x454) (- (* x454 1000000000000000000) (* x454 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x454 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (x757 1000000000000000000 (- x454 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x849 1000000000000000000 x454) (x160 1000000000000000000 x454) (x959 1000000000000000000 x454) (x858 1000000000000000000 x454) (x548 1000000000000000000 x454)))
(assert (x569 (x683 x694 x531) x800 x706 x567))
(assert (x32 x37 x175 x567 x706))
(assert (x725 x426))
(assert (x637 x146))
(assert (= (=> (and (= (not (> x472 1)) x887) (= x116 x435) (= x435 (x203 x256)) (= x218 (x385 (+ 32 x435))) (= (x385 (+ x830 32)) x387) (= x432 (x385 (+ 32 x256))) (= x927 (x902 x116)) (= x685 x730) (= x830 (x385 (+ x730 32))) (= x267 (x230 x218))) (and (=> (and (= x387 x557) (= x699 1) (= x31 x432)) x913) x887)) x924))
(assert (= (=> (and (= (x376 4294967295 x420) x659) (= (x652 128) x566) (= (x741 (x42 128) (x518 2113632) (x518 x754) x514 (x518 x659) (x518 x528) 0) x822) (= x784 (x385 (+ x559 32))) (= (x232 x537) x143) (= (x385 (+ 32 x784)) x537) (= x420 (x595 x784)) (= x860 (x385 (+ 160 x325))) (= x528 (x376 4294967295 x143)) (= x600 (not (> x566 1)))) (and (=> (and (= x822 x845) (= x860 x255)) x641) x600)) x58))
(assert (x610 x94))
(assert (x569 x531 x800 x686 x399))
(assert (x32 x86 x933 x686 x399))
(assert (x333 (- x399 x647)))
(assert (x970 x647 (- x761 x567)))
(assert (x32 (x683 x798 x299) x86 x399 (x683 x546 x686)))
(assert (x970 x399 (- (x683 x489 x686) (x683 x694 x531))))
(assert (= (x518 4294967296) (x42 4294967296)))
(assert (x32 x175 x37 x706 x567))
(assert (x32 x399 (x683 x489 x686) (x683 x862 x52) x761))
(assert (= (x330 x140) 0))
(assert (x637 x174))
(assert (x637 x414))
(assert (x637 x419))
(assert (= (x196 x264) 0))
(assert (= x321 (=> (and (and (= x753 x901) (= (x159 192) x259) (>= 340282366920938463463374607431768211455 x502) (= x62 x918) (= (x623 x440 4294967296) x287) (>= 4294967295 x777) (> x969 0) (>= x502 0) (= x520 (x159 160)) (not (> 2652930389 x649)) (= x48 x261) (= x753 0) (not x672) (= x803 (x623 x903 18446744073709551616)) (= (x503 (x518 x251)) x969) (= (x159 128) x556) (= x312 (x92 x68 1)) (<= x538 1461501637330902918203684832716283019655932542975) (= (x819 x68) x2) (= x68 (x92 x449 2)) (= x649 3250587425) (= (x159 224) x304) (= x440 (x819 x312)) (= x538 x479) (> 3547226261 x649) (<= 0 x291) (= (x819 x383) x580) (>= x538 0) (<= 0 x62) (= (x376 340282366920938463463374607431768211455 x428) x436) (not (< x649 3110348530)) (= x710 x939) (<= x62 1461501637330902918203684832716283019655932542975) (= (x376 4294967295 x287) x331) (= (x159 256) x773) (= x383 x449) (<= 0 x776) (>= 1461501637330902918203684832716283019655932542975 x291) (not (= x649 3110348530)) (>= x777 0) (= x857 (x376 4294967295 x803)) (= (x427 (x518 x261) x564 0) x449) (= x247 x918) (not x408) (<= x776 4294967295) (= x103 x721) (= x428 (x623 x749 79228162514264337593543950336)) (not (> 1749768213 x649)) (= (x427 (x518 x939) (x518 x721) 0) x564) (= (x819 x312) x903) (= (x819 x312) x749)) (and (= x304 x315) (= x556 x701) (= x709 (= x315 x802)) (= x403 x520) (= x802 x91))) x709)))
(assert (x637 x511))
(assert (x610 x651))
(assert (x637 x766))
(assert (x284 340282366920938463463374607431768211456))
(assert (x637 x337))
(assert (= (x904 x873) 0))
(assert (= (and (not x868) x509) x132))
(assert (x970 x86 (- x933 x399)))
(assert (x569 x800 (x683 x694 x531) (x683 x546 x686) x399))
(assert (x637 x105))
(assert (x250 x796))
(assert (x637 x884))
(assert (x32 x706 x567 x800 x531))
(assert (x374 x546 x686))
(assert (= (x790 (x42 3547226261)) 3547226261))
(assert (x970 x399 (- (x683 x546 x686) x37)))
(assert (x970 x399 (- x686 x761)))
(assert (= (x790 (x42 340282366920938463463374607431768211455)) 340282366920938463463374607431768211455))
(assert (x637 x238))
(assert (x637 x882))
(assert (= (=> (and (= (x192 (x757 x175 x37)) x74) (= (x376 4294967295 x793) x421) (= x292 x89) (= (x385 (+ x960 x922)) x177) (not (> 0 x295)) (= x429 (x385 (+ x74 x462))) (= (x376 4294967295 x775) x789) (= x651 (x179 x104 32)) (= x462 (x623 x318 1000000000000000000)) (= (x192 (x757 (x683 x694 x531) x800)) x318) (= x531 (x376 4294967295 x388)) (= x138 (ite (> x421 x607) x793 x775)) (= x627 (x623 x694 x531)) (= x295 (x996 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x89))) (= x694 (x376 4294967295 x603)) (= x208 (x230 x821)) (= x274 (= x177 x789)) (= (x996 (- x429 x114)) x89) (= (x385 (+ x934 32)) x821) (= (x376 4294967295 x775) x607) (= x377 (x376 4294967295 x138)) (= (x376 4294967295 x208) x922) (= x800 (x179 x490 64)) (= x490 (x230 x821)) (= (not (< x765 x188)) x739) (= (x192 (x757 x531 x800)) x494) (= x642 (ite (ite x274 x274 (> x177 (x376 4294967295 x313))) (x376 4294967295 x313) x177)) (= x775 (ite (= x260 0) x46 x651)) (= x260 (x376 4294967295 x651)) (= (x623 x216 1000000000000000000) x114) (= (x168 x222) x188) (= x603 (ite (> x377 x306) (x376 4294967295 x138) x306)) (= x175 (x996 (- x627 x547))) (= (x376 4294967295 x138) x935) (= x216 (x192 (x757 (x683 x935 x531) x800))) (= (ite (> x642 x450) (x376 4294967295 x324) x642) x306) (= x765 (x385 (+ 1 x415))) (= x37 (x623 x494 1000000000000000000)) (= x960 (x376 4294967295 x775)) (= (x230 x821) x104) (= (x376 4294967295 x324) x450) (= x547 (x623 x935 x531))) (and (=> (= x756 x292) x65) x739)) x986))
(assert (= (x42 4060098646) (x518 4060098646)))
(assert (=> (>= 10000 (x855 (x385 (+ x464 96)))) (= (x42 (x855 (x385 (+ x464 96)))) (x518 (x855 (x385 (+ 96 x464)))))))
(assert (= (x855 (x385 (+ x464 128))) (x790 (x518 (x855 (x385 (+ 128 x464)))))))
(assert (x32 x761 (x683 x862 x52) x399 x686))
(assert (= x237 (or x233 x180)))
(assert (=> (<= x758 10000) (= (x518 x758) (x42 x758))))
(assert (x637 x255))
(assert (x725 x150))
(assert (x333 1000000000000000000))
(assert (x333 (- x933 (x683 x546 x686))))
(assert (= (x179 x490 64) (x623 x490 18446744073709551616)))
(assert (x970 x567 (- x706 x175)))
(assert (x637 x916))
(assert (x569 x647 x761 (x683 x489 x686) x399))
(assert (x637 x299))
(assert (x970 (x683 x546 x686) x399))
(assert (= (x42 340282366920938463463374607431768211455) (x518 340282366920938463463374607431768211455)))
(assert (x77 x337))
(assert (x637 x896))
(assert (x970 (x683 x546 x686) (- x399 x647)))
(assert (=> (<= x601 10000) (= (x42 x601) (x518 x601))))
(assert (x333 (- x686 (x683 x694 x531))))
(assert (x32 (x683 x935 x531) x800 x706 x567))
(assert (x32 (x683 x489 x686) x399 x37 x175))
(assert (x32 x399 (x683 x489 x686) x800 (x683 x935 x531)))
(assert (x333 (- x706 (x683 x935 x531))))
(assert (x637 x607))
(assert (x32 (x683 x546 x686) x399 x37 x175))
(assert (x637 x418))
(assert (x569 (x683 x489 x686) x399 (x683 x935 x531) x800))
(assert (x637 x698))
(assert (x637 x929))
(assert (x284 x348))
(assert (x569 x706 x567 x175 x37))
(assert (x32 x761 x647 x399 (x683 x489 x686)))
(assert (x970 x800 (- x531 x567)))
(assert (= x488 (and x763 x861)))
(assert (x725 x798))
(assert (x112 x783))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x796 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x796 340282366920938463463374607431768211456))) x796)) (x892 x796 340282366920938463463374607431768211456) (x542 x796 340282366920938463463374607431768211456) (x84 x796 340282366920938463463374607431768211456)))
(assert (and (x543 x827 18446744073709551616) (x810 x827 18446744073709551616) (x243 x827 18446744073709551616) (= (- x827 (x376 18446744073709551615 x827)) (* 18446744073709551616 (x623 x827 18446744073709551616))) (x950 x827 18446744073709551616) (=> (and (> x827 0) (< 0 18446744073709551616)) (and (<= (* 18446744073709551616 (x623 x827 18446744073709551616)) x827) (> (* (x623 x827 18446744073709551616) 18446744073709551616) (- x827 18446744073709551616))))))
(assert (= 2113632 (x790 (x518 2113632))))
(assert (= (x518 3250587425) (x42 3250587425)))
(assert (x333 (- x761 x399)))
(assert (x725 x143))
(assert (x637 x5))
(assert (x32 x399 x686 x800 (x683 x694 x531)))
(assert (x32 x86 x933 x567 x706))
(assert (x569 x800 (x683 x694 x531) (x683 x489 x686) x399))
(assert (x637 x865))
(assert (x637 x331))
(assert (= (=> (and (= (x385 (+ x255 32)) x10) (= x252 x255) (= x843 x255) (= (x385 (+ 32 x255)) x606) (= (x376 4294967295 x804) x879) (= (ite (= 0 x252) x442 (ite (= x252 32) (x790 x590) (ite (= 64 x252) x255 (x554 x252)))) x305) (= x731 (ite (= 0 x10) x442 (ite (= x10 32) (x790 x590) (ite (= 64 x10) x255 (x554 x10))))) (= (= x684 64) x190) (= x684 64)) (and x190 (=> (and (= false x408) (= x672 false)) x321))) x471))
(assert (x333 (- x800 x686)))
(assert (x637 x415))
(assert (x725 x803))
(assert (= (=> (and (and (not (< x17 x410)) (= x17 (x376 4294967295 x920)) (= x872 (x376 4294967295 x5)) (= x928 (x996 (- x872 x798))) (= x447 (= 0 x928)) (= (x376 4294967295 x804) x820) (not (< 4294967294 x340)) (= x226 (x376 4294967295 x388)) (= x801 (x376 115792089237316195423570985008687907853269984665640564039457584007908834672640 x865)) (= x56 (x427 (x518 x601) (x518 x705) 0)) (= (x996 (- 0 x86)) x761) (= x798 (x385 (+ 1 x340))) (= x337 (x683 x123 x226)) (= (* x454 1000000000000000000) x4) (= (x427 (x518 x302) x56 0) x625) (= (x427 (x518 x704) x147 0) x44) (= x75 x820) (< 0 x226) (= x5 (x996 (- x17 x410))) (= (x385 (+ x75 x801)) x526) (= x147 (x92 x625 1)) (= (x332 x44) x865) (= (x376 4294967295 x5) x340) (= x86 x4) (= x103 x705) (= x410 (x376 4294967295 x337)) (< (* 1000000000000000000 x454) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x376 4294967295 x920) x123)) (or (and x447 (and (= x504 x704) (= x209 x147))) (and (and (= x334 (x376 4294967295 x85)) (= x955 x504) (= x213 (x385 (+ x47 x766))) (= (x376 4294967295 x5) x862) (= (x427 (x518 x334) x465 0) x714) (= x280 (x376 340282366920938463463374607431768211455 x867)) (= x365 (ite (= x665 0) 0 (ite (= true (< x665 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (x623 (ite (< x665 57896044618658097711785492504343953926634992332820282019728792003956564819968) x665 (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x996 (- x665 1))))) 1000000000000000000) (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x192 (- (x623 (ite (< x665 57896044618658097711785492504343953926634992332820282019728792003956564819968) x665 (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x996 (- x665 1))))) 1000000000000000000) 1))))))) (= (x623 x343 340282366920938463463374607431768211456) x729) (= x47 (x376 340282366920938463463374607431768211455 x635)) (< 0 x301) (= (x376 340282366920938463463374607431768211455 x443) x166) (= (x376 340282366920938463463374607431768211455 x94) x965) (= (x962 x417) x94) (= (x178 x871) x783) (= (x431 x579) x635) (= x378 (x128 x579)) (= x209 x465) (= (x825 x871) x736) (= (x192 (* 340282366920938463463374607431768211456 x280)) x766) (= x871 x396) (= (x92 x625 4) x465) (= x896 (x192 (* x166 340282366920938463463374607431768211456))) (= x748 (x385 (+ x433 x460))) (= (x128 x579) x426) (= (x376 340282366920938463463374607431768211455 x736) x156) (= x379 (x376 340282366920938463463374607431768211455 x620)) (> x511 0) (= x629 x379) (= (x962 x120) x867) (= (x192 (x757 x647 x761)) x876) (< 0 x52) (= x665 (x192 (x757 (x683 x862 x52) x761))) (= (x376 4294967295 x388) x933) (= x417 (x385 (+ (x192 (x962 x783)) x480))) (= (x962 x248) x620) (= x579 x714) (= (x376 115792089237316195423570985008687907852929702298719625575994209400481361428480 x788) x460) (= x433 x965) (= x299 (x376 4294967295 x388)) (not (= x761 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (= (x376 115792089237316195423570985008687907852929702298719625575994209400481361428480 x378) x814) (= (x192 (x757 (x683 x798 x299) x86)) x339) (= x799 (x623 x798 x301)) (= x120 (x385 (+ (x192 (x962 x850)) x365))) (= x955 (x376 4294967295 x317)) (= x735 (ite (= 0 x339) 0 (ite (= (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x339) true) (x623 (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x339) x339 (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x996 (- x339 1))))) 1000000000000000000) (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x192 (- (x623 (ite (< x339 57896044618658097711785492504343953926634992332820282019728792003956564819968) x339 (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x996 (- x339 1))))) 1000000000000000000) 1))))))) (= x788 (x178 x871)) (= (x192 (- (ite (= 0 x876) 0 (ite (= (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x876) true) (x623 (ite (< x876 57896044618658097711785492504343953926634992332820282019728792003956564819968) x876 (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x996 (- x876 1))))) 1000000000000000000) (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x192 (- (x623 (ite (< x876 57896044618658097711785492504343953926634992332820282019728792003956564819968) x876 (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x996 (- x876 1))))) 1000000000000000000) 1)))))) x365)) x499) (= x400 (x385 (+ x735 (x192 (x962 x729))))) (= x343 (x825 x871)) (< 0 x299) (= (x623 x862 x511) x750) (= (x385 (+ 1 x750)) x85) (= x144 (x192 (x757 x933 x86))) (= x59 (x385 (+ x896 x156))) (= x443 (x962 x400)) (= x480 (x192 (- (ite (= x144 0) 0 (ite (= (< x144 57896044618658097711785492504343953926634992332820282019728792003956564819968) true) (x623 (ite (< x144 57896044618658097711785492504343953926634992332820282019728792003956564819968) x144 (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x996 (- x144 1))))) 1000000000000000000) (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x192 (- (x623 (ite (< x144 57896044618658097711785492504343953926634992332820282019728792003956564819968) x144 (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x996 (- x144 1))))) 1000000000000000000) 1)))))) x735))) (= (x431 x579) x467) (= (x385 (+ (x192 (x962 x426)) x499)) x248) (= x142 (x385 (+ x814 x629))) (= (x376 4294967295 x388) x647) (= (x427 (x518 x955) x465 0) x396) (= (x376 4294967295 x388) x511) (= x52 (x376 4294967295 x388)) (= (x376 4294967295 x388) x301) (= x850 (x623 x467 340282366920938463463374607431768211456)) (= x317 (x385 (+ x799 1)))) (not x447)))) x186) x596))
(assert (x610 x443))
(assert (x970 (x683 x489 x686) (- x399 x933)))
(assert (x637 x547))
(assert (x569 (x683 x862 x52) x761 x706 x567))
(assert (x637 x915))
(assert (x32 x399 x686 x647 x761))
(assert (x637 x456))
(assert (x970 x86 (- x933 (x683 x489 x686))))
(assert (x725 340282366920938463463374607431768211456))
(assert (x77 x780))
(assert (x637 x305))
(assert (x970 x761 (- (x683 x862 x52) (x683 x546 x686))))
(assert (x637 x301))
(assert (x725 x248))
(assert (= (or x327 x811) x283))
(assert (x637 x805))
(assert (x610 x287))
(assert (x637 x857))
(assert (x637 x311))
(assert (x32 (x683 x489 x686) x399 x933 x86))
(assert (x569 x706 x567 (x683 x935 x531) x800))
(assert (x32 (x683 x798 x299) x86 x399 (x683 x489 x686)))
(assert (x32 x761 x647 (x683 x489 x686) x399))
(assert (x637 x961))
(assert (x333 (- x567 (x683 x862 x52))))
(assert (x32 x800 (x683 x694 x531) x399 (x683 x489 x686)))
(assert (= (or x362 x132 x760) x980))
(assert (x284 x80))
(assert (x764 x553))
(assert (x637 x401))
(assert (x637 x41))
(assert (x637 x779))
(assert (x569 x567 x706 x647 x761))
(assert (x32 x761 x647 x686 x399))
(assert (x569 x800 x531 x706 x567))
(assert (x32 x686 x399 x175 x37))
(assert (x970 x399 (- (x683 x546 x686) x647)))
(assert (x637 x869))
(assert (x970 (x683 x935 x531) (- x800 x706)))
(assert (x610 x729))
(assert (x32 x686 x399 x800 (x683 x935 x531)))
(assert (x32 x761 x647 x399 (x683 x546 x686)))
(assert (x637 x921))
(assert (x637 x48))
(assert (x637 x917))
(assert (= (x790 (x42 2652930389)) 2652930389))
(assert (x32 x686 x399 x37 x175))
(assert (x970 x800 (- (x683 x694 x531) (x683 x546 x686))))
(assert (x970 x86 (- (x683 x798 x299) (x683 x489 x686))))
(assert (and (= 9 (x757 3 3)) (= 27 (x757 9 3)) (= (x757 9 9) 81) (= (x757 27 3) 81)))
(assert (x333 (- (x683 x798 x299) x706)))
(assert (x637 x213))
(assert (x333 (- x37 x567)))
(assert (x970 x531 (- x800 x567)))
(assert (x637 x116))
(assert (= (x196 x222) 0))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x804 4294967296) (* 4294967296 (x623 x804 4294967296))) x804)) (x892 x804 4294967296) (x542 x804 4294967296) (x84 x804 4294967296)))
(assert (x637 x214))
(assert (x970 (x683 x862 x52) (- x761 x567)))
(assert (x970 (x683 x489 x686) (- x399 x531)))
(assert (x764 x955))
(assert (x32 (x683 x546 x686) x399 x933 x86))
(assert (and (=> (and (> x216 0) (< 0 1000000000000000000)) (and (<= (* 1000000000000000000 (x623 x216 1000000000000000000)) x216) (> (* (x623 x216 1000000000000000000) 1000000000000000000) (- x216 1000000000000000000)))) (x243 x216 1000000000000000000) (x543 x216 1000000000000000000) (x810 x216 1000000000000000000) (x950 x216 1000000000000000000)))
(assert (x637 x485))
(assert (x637 x204))
(assert (x250 x788))
(assert (x284 2))
(assert (= (and x375 x985) x7))
(assert (x970 x175 (- x37 (x683 x546 x686))))
(assert (x970 x531 (- x800 (x683 x489 x686))))
(assert (x610 x550))
(assert (x637 x728))
(assert (x637 x721))
(assert (x32 (x683 x489 x686) x399 x86 (x683 x798 x299)))
(assert (x333 (- (x683 x546 x686) x761)))
(assert (x637 x804))
(assert (x725 x850))
(assert (and (=> (and (> x494 0) (< 0 1000000000000000000)) (and (<= (* 1000000000000000000 (x623 x494 1000000000000000000)) x494) (> (* (x623 x494 1000000000000000000) 1000000000000000000) (- x494 1000000000000000000)))) (x243 x494 1000000000000000000) (x543 x494 1000000000000000000) (x810 x494 1000000000000000000) (x950 x494 1000000000000000000)))
(assert (= x923 (and x582 x752)))
(assert (x32 x399 x686 x933 x86))
(assert (x354 x489 x686))
(assert (x333 (- x686 x531)))
(assert (x725 x417))
(assert (x637 x860))
(assert (x637 x421))
(assert (x333 (- x567 x37)))
(assert (and (=> (and (> x794 0) (< 0 1000000000000000000)) (and (<= (* 1000000000000000000 (x623 x794 1000000000000000000)) x794) (> (* (x623 x794 1000000000000000000) 1000000000000000000) (- x794 1000000000000000000)))) (x243 x794 1000000000000000000) (x543 x794 1000000000000000000) (x810 x794 1000000000000000000) (x950 x794 1000000000000000000)))
(assert (x637 x730))
(assert (= x509 (and x191 x944)))
(assert (x333 x37))
(assert (x569 x399 x686 x647 x761))
(assert (x637 x20))
(assert (x970 x567 (- x706 x933)))
(assert (x569 (x683 x935 x531) x800 x706 x567))
(assert (x637 x148))
(assert (x970 x761 (- (x683 x862 x52) (x683 x489 x686))))
(assert (x569 x761 (x683 x862 x52) x686 x399))
(assert (and (x543 x104 4294967296) (x810 x104 4294967296) (x243 x104 4294967296) (= (- x104 (x376 4294967295 x104)) (* 4294967296 (x623 x104 4294967296))) (x950 x104 4294967296) (=> (and (> x104 0) (< 0 4294967296)) (and (<= (* 4294967296 (x623 x104 4294967296)) x104) (> (* (x623 x104 4294967296) 4294967296) (- x104 4294967296))))))
(assert (x725 x585))
(assert (x284 (ite (> 57896044618658097711785492504343953926634992332820282019728792003956564819968 x665) x665 (x192 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x996 (- x665 1)))))))
(assert (x725 x867))
(assert (x333 (- x706 x933)))
(assert (x569 (x683 x798 x299) x86 x706 x567))
(assert (x970 x399 (- (x683 x546 x686) x531)))
(assert (x970 (x683 x694 x531) (- x800 (x683 x546 x686))))
(assert (x333 (- (x683 x489 x686) x761)))
(assert (x333 (- x399 x933)))
(assert (x32 (x683 x489 x686) x399 x86 x933))
(assert (x333 (- (x683 x489 x686) (x683 x798 x299))))
(assert (x569 x567 x706 (x683 x694 x531) x800))
(assert (x725 x270))
(assert (x637 x501))
(assert (x725 x783))
(assert (and (= (x757 32 x279) (* x279 32)) (and (= (- (* 32 (- x279 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x279 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x279 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x279) (- (* x279 32) (* x279 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x279 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x757 32 (- x279 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x849 32 x279) (x160 32 x279) (x959 32 x279) (x858 32 x279) (x548 32 x279)))
(assert (x569 x706 x567 (x683 x798 x299) x86))
(assert (x333 (- (x683 x694 x531) (x683 x546 x686))))
(assert (= (x790 (x518 x704)) x704))
(assert (x284 x794))
(assert (x970 (x683 x694 x531) (- x800 x706)))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x38 4294967296) (* 4294967296 (x623 x38 4294967296))) x38)) (x892 x38 4294967296) (x542 x38 4294967296) (x84 x38 4294967296)))
(assert (x569 x175 x37 (x683 x489 x686) x399))
(assert (x32 (x683 x546 x686) x399 (x683 x694 x531) x800))
(assert (x970 (x683 x489 x686) (- x399 x647)))
(assert (x637 x608))
(assert (x637 x491))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x417 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x417 340282366920938463463374607431768211456))) x417)) (x892 x417 340282366920938463463374607431768211456) (x542 x417 340282366920938463463374607431768211456) (x84 x417 340282366920938463463374607431768211456)))
(assert (x970 x399 (- (x683 x489 x686) x647)))
(assert (x637 x210))
(assert (x32 x86 (x683 x798 x299) x399 (x683 x489 x686)))
(assert (x569 x86 x933 (x683 x489 x686) x399))
(assert (x333 (- (x683 x694 x531) (x683 x489 x686))))
(assert (x569 x175 x37 (x683 x546 x686) x399))
(assert (x970 x933 (- x86 x567)))
(assert (x970 (x683 x798 x299) (- x86 (x683 x546 x686))))
(assert (x32 x399 x686 x761 (x683 x862 x52)))
(assert (x569 (x683 x798 x299) x86 (x683 x546 x686) x399))
(assert (x637 x852))
(assert (= (or x487 x974) x583))
(assert (x32 x567 x706 (x683 x694 x531) x800))
(assert (and (= (x757 32 x513) (* x513 32)) (and (= (- (* 32 (- x513 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x513 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x513 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x757 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x513) (- (* x513 32) (* x513 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x513 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x757 32 (- x513 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x849 32 x513) (x160 32 x513) (x959 32 x513) (x858 32 x513) (x548 32 x513)))
(assert (=> (<= x721 10000) (= (x42 x721) (x518 x721))))
(assert (x569 x399 (x683 x546 x686) (x683 x798 x299) x86))
(assert (x637 x17))
(assert (x610 x947))
(assert (x333 (- x933 x567)))
(assert (x333 (x683 x935 x531)))
(assert (= false x135))
(assert (x77 x603))
(assert (and (=> (> 340282366920938463463374607431768211456 0) (= (+ (x683 x248 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x623 x248 340282366920938463463374607431768211456))) x248)) (x892 x248 340282366920938463463374607431768211456) (x542 x248 340282366920938463463374607431768211456) (x84 x248 340282366920938463463374607431768211456)))
(assert (x725 x208))
(assert (x637 x378))
(assert (x725 x935))
(assert (x725 x686))
(assert (x333 x199))
(assert (x970 (x683 x798 x299) (- x86 x706)))
(assert (x637 x920))
(assert (x637 x70))
(assert (and (=> (> 4294967296 0) (= (+ (x683 x793 4294967296) (* 4294967296 (x623 x793 4294967296))) x793)) (x892 x793 4294967296) (x542 x793 4294967296) (x84 x793 4294967296)))
(assert (= 0 (x395 x464)))
(assert (x32 x761 x647 x399 x686))
(assert (x32 x86 (x683 x798 x299) x399 x686))
(assert (x333 (- x706 x761)))
(assert (x764 (x855 (x385 (+ x464 64)))))
(assert (x970 x399 (- x686 x531)))
(assert (x637 x172))
(assert (x637 x663))
(assert (x725 x862))
(assert (x77 x270))
(assert (x32 x933 x86 x567 x706))
(assert (x77 x324))
(assert (x970 x761 (- x647 x706)))
(assert (x637 x914))
(assert (x637 x928))
(assert (x637 x936))
(assert (x637 x650))
(assert (x333 (- x761 x567)))
(assert (x637 x562))
(check-sat)
(exit)
