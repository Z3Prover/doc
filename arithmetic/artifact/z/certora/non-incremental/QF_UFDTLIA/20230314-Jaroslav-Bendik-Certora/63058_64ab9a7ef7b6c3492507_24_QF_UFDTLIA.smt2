(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x281 0)) (((x1638 (x1187 x281) (x2004 x281) (x2404 x281) (x298 x281) (x2461 x281) (x2368 x281) (x1291 x281) (x2338 Int)) (x173 (x229 x281) (x1270 x281) (x1685 Int)) (x401 (x1107 x281) (x1415 x281) (x621 x281) (x2179 x281) (x53 x281) (x399 Int)) (x346 (x234 x281) (x2521 x281) (x1701 x281) (x2295 x281) (x148 Int)) (x1546 (x193 Int)) (x2162 (x1998 x281) (x1068 Int)) (x748 (x1263 x281) (x1577 x281) (x2395 x281) (x1070 x281) (x2033 x281) (x1395 x281) (x2010 Int)) (x2109 (x2266 x281) (x1443 x281) (x1064 x281) (x2440 Int)))))
(declare-fun x2265 () Bool)
(declare-fun x1137 () Int)
(declare-fun x1958 () Int)
(declare-fun x248 () Int)
(declare-fun x1695 () Bool)
(declare-fun x969 () Bool)
(declare-fun x2240 () Bool)
(declare-fun x1718 () Int)
(declare-fun x2357 () Int)
(declare-fun x172 () Int)
(declare-fun x2251 () Int)
(declare-fun x1852 () Int)
(declare-fun x2253 () x281)
(declare-fun x104 () Bool)
(declare-fun x348 () Bool)
(declare-fun x929 () Int)
(declare-fun x1320 () Int)
(declare-fun x1204 () Int)
(declare-fun x600 () Int)
(declare-fun x2052 () Int)
(declare-fun x2020 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x1700 () Int)
(declare-fun x911 () Bool)
(declare-fun x2177 () Int)
(declare-fun x2314 () Int)
(declare-fun x1972 () Int)
(declare-fun x119 () Int)
(declare-fun x794 () Int)
(declare-fun x699 () Int)
(declare-fun x1449 () Bool)
(declare-fun x707 () Int)
(declare-fun x1192 () Int)
(declare-fun x1609 () Int)
(declare-fun x1586 () Bool)
(declare-fun x889 () Int)
(declare-fun x2091 () Int)
(declare-fun x2015 () Int)
(declare-fun x61 () Bool)
(declare-fun x976 () Int)
(declare-fun x1231 () Bool)
(declare-fun x126 () Int)
(declare-fun x38 () Int)
(declare-fun x137 () Bool)
(declare-fun x2011 () Bool)
(declare-fun x2061 () Bool)
(declare-fun x1086 () x281)
(declare-fun x221 () Int)
(declare-fun x842 () Bool)
(declare-fun x2013 () Bool)
(declare-fun x1049 () Int)
(declare-fun x233 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x1635 () Int)
(declare-fun x1975 () Bool)
(declare-fun x2471 () Bool)
(declare-fun x58 () Bool)
(declare-fun x1662 () Int)
(declare-fun x1004 () Int)
(declare-fun x2300 () Int)
(declare-fun x1579 () Int)
(declare-fun x1026 () Int)
(declare-fun x810 () Int)
(declare-fun x536 () Int)
(declare-fun x2331 () Int)
(declare-fun x779 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x1979 () Int)
(declare-fun x766 () Bool)
(declare-fun x1822 () Int)
(declare-fun x113 () Bool)
(declare-fun x432 (Int) Int)
(declare-fun x2397 (x281) Int)
(declare-fun x965 () Bool)
(declare-fun x630 () Int)
(declare-fun x2380 () Int)
(declare-fun x1968 () Int)
(declare-fun x962 () Int)
(declare-fun x1827 () Bool)
(declare-fun x388 () Int)
(declare-fun x986 () Bool)
(declare-fun x2401 () Bool)
(declare-fun x1910 () Bool)
(declare-fun x1737 () Int)
(declare-fun x1570 () Bool)
(declare-fun x1292 () Int)
(declare-fun x279 () Bool)
(declare-fun x2190 () x281)
(declare-fun x1341 () Bool)
(declare-fun x1323 () Bool)
(declare-fun x2173 () Bool)
(declare-fun x1871 () Bool)
(declare-fun x977 () Bool)
(declare-fun x1171 () Int)
(declare-fun x2047 () Bool)
(declare-fun x244 () Int)
(declare-fun x1714 () Bool)
(declare-fun x685 () Bool)
(declare-fun x2285 () Bool)
(declare-fun x2142 () Int)
(declare-fun x2328 () Int)
(declare-fun x660 () Bool)
(declare-fun x213 () Int)
(declare-fun x2019 () Int)
(declare-fun x2141 () Bool)
(declare-fun x311 () Bool)
(declare-fun x1339 () Int)
(declare-fun x1753 () Int)
(declare-fun x243 () Int)
(declare-fun x1175 () x281)
(declare-fun x166 () Int)
(declare-fun x2429 () Bool)
(declare-fun x608 () Bool)
(declare-fun x1733 () Bool)
(declare-fun x2293 () Bool)
(declare-fun x1518 () Int)
(declare-fun x2350 (Int) Int)
(declare-fun x1163 () Int)
(declare-fun x1539 () Int)
(declare-fun x504 () Bool)
(declare-fun x795 () Bool)
(declare-fun x552 () Int)
(declare-fun x2084 () Bool)
(declare-fun x2178 () Int)
(declare-fun x324 () Bool)
(declare-fun x2172 () Bool)
(declare-fun x2018 () Int)
(declare-fun x2248 () Bool)
(declare-fun x676 () Bool)
(declare-fun x2163 () Int)
(declare-fun x749 () Bool)
(declare-fun x2297 () Bool)
(declare-fun x1182 () Bool)
(declare-fun x2262 () Int)
(declare-fun x2038 () Bool)
(declare-fun x2389 () Int)
(declare-fun x284 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x1120 () Bool)
(declare-fun x650 () Int)
(declare-fun x2245 (x281) Int)
(declare-fun x1955 () Int)
(declare-fun x1631 () Int)
(declare-fun x1740 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x1889 () Int)
(declare-fun x1687 () Bool)
(declare-fun x13 () Bool)
(declare-fun x340 () Int)
(declare-fun x534 () Bool)
(declare-fun x266 () Int)
(declare-fun x51 () Bool)
(declare-fun x2479 () Bool)
(declare-fun x2118 () Int)
(declare-fun x1104 () Int)
(declare-fun x1342 () Int)
(declare-fun x2014 () x281)
(declare-fun x2310 () Int)
(declare-fun x912 () Int)
(declare-fun x925 (Int) Int)
(declare-fun x2390 () Int)
(declare-fun x2225 () Int)
(declare-fun x2126 () Int)
(declare-fun x1321 () Int)
(declare-fun x1294 () Bool)
(declare-fun x2290 () Bool)
(declare-fun x1482 () Int)
(declare-fun x569 () Bool)
(declare-fun x1340 () Int)
(declare-fun x959 () Bool)
(declare-fun x2418 () Int)
(declare-fun x1880 () Bool)
(declare-fun x1160 () Bool)
(declare-fun x121 () Int)
(declare-fun x501 () Int)
(declare-fun x1360 () Int)
(declare-fun x1466 () Bool)
(declare-fun x909 () Bool)
(declare-fun x179 () Bool)
(declare-fun x2135 () Bool)
(declare-fun x1205 () Bool)
(declare-fun x1726 () Int)
(declare-fun x2025 () Int)
(declare-fun x1842 () Bool)
(declare-fun x381 () Int)
(declare-fun x1400 () Int)
(declare-fun x1643 () Bool)
(declare-fun x108 () Bool)
(declare-fun x1108 (Int) Int)
(declare-fun x445 () Int)
(declare-fun x910 (Int) Int)
(declare-fun x1649 () Bool)
(declare-fun x2046 (Int) Int)
(declare-fun x2161 () Int)
(declare-fun x1589 () Bool)
(declare-fun x2433 () Int)
(declare-fun x2435 () Bool)
(declare-fun x1042 () Int)
(declare-fun x1598 () Bool)
(declare-fun x1963 () Int)
(declare-fun x1121 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x2186 () Bool)
(declare-fun x645 () Bool)
(declare-fun x294 () Bool)
(declare-fun x448 () x281)
(declare-fun x1894 () Int)
(declare-fun x992 () Int)
(declare-fun x1682 () Bool)
(declare-fun x1906 () Bool)
(declare-fun x1878 () Int)
(declare-fun x149 () Bool)
(declare-fun x390 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x2313 () Bool)
(declare-fun x2129 () Bool)
(declare-fun x1680 () Int)
(declare-fun x1303 () Bool)
(declare-fun x1762 () Int)
(declare-fun x723 () Bool)
(declare-fun x295 () Bool)
(declare-fun x1772 () Bool)
(declare-fun x918 (Int Int) Int)
(declare-fun x255 () Int)
(declare-fun x1353 () Int)
(declare-fun x744 () Bool)
(declare-fun x264 () Bool)
(declare-fun x596 () Int)
(declare-fun x612 () Int)
(declare-fun x2130 () Int)
(declare-fun x1788 () Int)
(declare-fun x1439 (Int) Int)
(declare-fun x1436 () Bool)
(declare-fun x1014 () Bool)
(declare-fun x1059 () Bool)
(declare-fun x2346 () Bool)
(declare-fun x363 () Int)
(declare-fun x434 () Int)
(declare-fun x2068 () Bool)
(declare-fun x1430 () Int)
(declare-fun x1670 () Bool)
(declare-fun x991 () Int)
(declare-fun x2527 () Bool)
(declare-fun x787 () Bool)
(declare-fun x964 () Bool)
(declare-fun x1541 () Int)
(declare-fun x2166 () Bool)
(declare-fun x2139 (Int Int) Int)
(declare-fun x2233 () Int)
(declare-fun x553 () Bool)
(declare-fun x847 () x281)
(declare-fun x2506 () Bool)
(declare-fun x886 () Bool)
(declare-fun x1843 () Bool)
(declare-fun x2044 () Bool)
(declare-fun x1409 () Bool)
(declare-fun x1973 () Bool)
(declare-fun x2105 () Int)
(declare-fun x1376 () Int)
(declare-fun x1069 () Bool)
(declare-fun x1848 () Bool)
(declare-fun x2231 () Int)
(declare-fun x252 () Bool)
(declare-fun x333 () Bool)
(declare-fun x2005 () Bool)
(declare-fun x2306 () Int)
(declare-fun x2023 () Bool)
(declare-fun x702 () Int)
(declare-fun x2532 () Bool)
(declare-fun x2347 () Int)
(declare-fun x265 () Bool)
(declare-fun x780 () Int)
(declare-fun x1905 () Bool)
(declare-fun x239 () Int)
(declare-fun x300 () Bool)
(declare-fun x433 () Int)
(declare-fun x36 () Int)
(declare-fun x2070 () x281)
(declare-fun x855 () Bool)
(declare-fun x1883 () Bool)
(declare-fun x2048 () Int)
(declare-fun x1017 () Bool)
(declare-fun x1755 () Int)
(declare-fun x283 () Bool)
(declare-fun x2458 () Bool)
(declare-fun x1327 () Bool)
(declare-fun x789 () x281)
(declare-fun x1505 () Bool)
(declare-fun x635 () Bool)
(declare-fun x1748 () Int)
(declare-fun x396 () Int)
(declare-fun x1957 () Bool)
(declare-fun x1277 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x1976 () Int)
(declare-fun x2317 () Bool)
(declare-fun x1573 () Int)
(declare-fun x2076 () Bool)
(declare-fun x1896 () x281)
(declare-fun x343 () Bool)
(declare-fun x1782 () Int)
(declare-fun x1892 () Int)
(declare-fun x1669 () Int)
(declare-fun x80 () Int)
(declare-fun x1061 () Int)
(declare-fun x1650 () Int)
(declare-fun x1794 () Int)
(declare-fun x495 () Int)
(declare-fun x1660 () Bool)
(declare-fun x2241 () Bool)
(declare-fun x502 () Int)
(declare-fun x2523 () Int)
(declare-fun x497 () Int)
(declare-fun x1413 (Int) Int)
(declare-fun x1494 () Int)
(declare-fun x1383 () Bool)
(declare-fun x222 () Bool)
(declare-fun x250 () Bool)
(declare-fun x639 () Bool)
(declare-fun x705 () Bool)
(declare-fun x1156 () Int)
(declare-fun x917 () Bool)
(declare-fun x984 () Bool)
(declare-fun x942 () Bool)
(declare-fun x384 () Int)
(declare-fun x535 () Bool)
(declare-fun x1252 () x281)
(declare-fun x1033 () Int)
(declare-fun x1011 () Bool)
(declare-fun x897 () Bool)
(declare-fun x1806 () Int)
(declare-fun x633 () Int)
(declare-fun x806 () Bool)
(declare-fun x1450 () Bool)
(declare-fun x2344 () Int)
(declare-fun x1097 () Int)
(declare-fun x2358 () Bool)
(declare-fun x1707 () Bool)
(declare-fun x2133 () Bool)
(declare-fun x2185 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x1704 () Bool)
(declare-fun x812 () Bool)
(declare-fun x768 () Int)
(declare-fun x908 () Bool)
(declare-fun x1813 () Int)
(declare-fun x2465 () x281)
(declare-fun x118 () Int)
(declare-fun x2283 () Bool)
(declare-fun x2311 () Int)
(declare-fun x1943 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x672 () Bool)
(declare-fun x1132 () Bool)
(declare-fun x1227 () Bool)
(declare-fun x1552 () Int)
(declare-fun x263 () x281)
(declare-fun x1470 () Int)
(declare-fun x1676 () Int)
(declare-fun x1328 () Int)
(declare-fun x1152 () Int)
(declare-fun x1990 () Bool)
(declare-fun x24 () x281)
(declare-fun x985 () Int)
(declare-fun x1741 () Bool)
(declare-fun x2413 () Int)
(declare-fun x1863 (Int) Int)
(declare-fun x1524 () Bool)
(declare-fun x541 () Bool)
(declare-fun x1674 () Bool)
(declare-fun x2247 () Bool)
(declare-fun x895 () Bool)
(declare-fun x2257 () Int)
(declare-fun x84 () Bool)
(declare-fun x1746 () Int)
(declare-fun x1210 () Bool)
(declare-fun x533 () Bool)
(declare-fun x2441 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x2270 () Bool)
(declare-fun x385 () x281)
(declare-fun x30 () Bool)
(declare-fun x809 () Int)
(declare-fun x891 () Int)
(declare-fun x1066 () Bool)
(declare-fun x1991 () Int)
(declare-fun x2276 () Bool)
(declare-fun x2372 () Bool)
(declare-fun x782 () x281)
(declare-fun x2298 () Int)
(declare-fun x2387 () Bool)
(declare-fun x1918 () Bool)
(declare-fun x1736 () Bool)
(declare-fun x1313 () Int)
(declare-fun x2153 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x885 () Bool)
(declare-fun x793 () Int)
(declare-fun x2351 () Bool)
(declare-fun x2031 () Int)
(declare-fun x1118 () Int)
(declare-fun x249 () Bool)
(declare-fun x2212 () Bool)
(declare-fun x1855 () Int)
(declare-fun x884 () Int)
(declare-fun x1738 () Bool)
(declare-fun x1867 () Bool)
(declare-fun x1913 (Int) Int)
(declare-fun x1158 () Int)
(declare-fun x1830 () Int)
(declare-fun x2083 () Int)
(declare-fun x218 () Bool)
(declare-fun x503 () Bool)
(declare-fun x2525 () Bool)
(declare-fun x2348 () x281)
(declare-fun x1425 () Bool)
(declare-fun x1739 () Bool)
(declare-fun x1966 () Bool)
(declare-fun x1525 () Int)
(declare-fun x253 () Int)
(declare-fun x595 () Bool)
(declare-fun x1381 () Bool)
(declare-fun x817 () Int)
(declare-fun x549 () Int)
(declare-fun x276 (Int) Int)
(declare-fun x970 () Int)
(declare-fun x350 () Bool)
(declare-fun x35 () Bool)
(declare-fun x646 () Int)
(declare-fun x1978 () Int)
(declare-fun x2542 () Bool)
(declare-fun x2282 () Bool)
(declare-fun x1508 () Bool)
(declare-fun x358 () Bool)
(declare-fun x2278 () Bool)
(declare-fun x1387 () Bool)
(declare-fun x458 () Int)
(declare-fun x854 () Bool)
(declare-fun x2400 () Bool)
(declare-fun x1836 () Bool)
(declare-fun x1824 () Int)
(declare-fun x730 () Int)
(declare-fun x1239 () Bool)
(declare-fun x1921 () Int)
(declare-fun x2483 () Bool)
(declare-fun x857 () Int)
(declare-fun x299 () Bool)
(declare-fun x2478 () Int)
(declare-fun x1044 () Bool)
(declare-fun x550 () Bool)
(declare-fun x1071 () Bool)
(declare-fun x1612 () Int)
(declare-fun x1853 () Int)
(declare-fun x1176 () Bool)
(declare-fun x2122 () Bool)
(declare-fun x366 () Bool)
(declare-fun x587 () Bool)
(declare-fun x68 () Int)
(declare-fun x743 () Bool)
(declare-fun x2446 () Int)
(declare-fun x2488 () Bool)
(declare-fun x2535 () Int)
(declare-fun x1951 () Bool)
(declare-fun x681 () Int)
(declare-fun x1509 () Bool)
(declare-fun x786 () Int)
(declare-fun x990 () Int)
(declare-fun x1715 () Bool)
(declare-fun x510 () Bool)
(declare-fun x2434 () Bool)
(declare-fun x1637 () Int)
(declare-fun x1195 () Int)
(declare-fun x679 () Int)
(declare-fun x1941 () Bool)
(declare-fun x296 () Int)
(declare-fun x1562 () Bool)
(declare-fun x1630 () Int)
(declare-fun x2119 () x281)
(declare-fun x1770 () Bool)
(declare-fun x1814 () Int)
(declare-fun x1276 () Bool)
(declare-fun x191 () Bool)
(declare-fun x2127 () Bool)
(declare-fun x477 () Int)
(declare-fun x70 () Bool)
(declare-fun x117 () x281)
(declare-fun x1815 () Int)
(declare-fun x1816 () Bool)
(declare-fun x301 () Int)
(declare-fun x584 () Bool)
(declare-fun x900 () Int)
(declare-fun x2365 () Bool)
(declare-fun x25 () Bool)
(declare-fun x2150 () Int)
(declare-fun x735 () Bool)
(declare-fun x618 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x2381 () Bool)
(declare-fun x2035 () Bool)
(declare-fun x372 () Bool)
(declare-fun x1893 () Int)
(declare-fun x1157 () Bool)
(declare-fun x470 () Int)
(declare-fun x1709 () Bool)
(declare-fun x997 () Int)
(declare-fun x452 () Int)
(declare-fun x464 () Bool)
(declare-fun x2391 () Bool)
(declare-fun x974 () Bool)
(declare-fun x1422 () Int)
(declare-fun x1959 () Bool)
(declare-fun x753 () Bool)
(declare-fun x1366 () x281)
(declare-fun x772 () Int)
(declare-fun x2382 () Int)
(declare-fun x1679 () Int)
(declare-fun x642 () Int)
(declare-fun x1473 () Bool)
(declare-fun x1202 () Int)
(declare-fun x966 () Int)
(declare-fun x693 () Bool)
(declare-fun x1922 () Int)
(declare-fun x1217 () Int)
(declare-fun x526 () Int)
(declare-fun x906 () Bool)
(declare-fun x2026 () Int)
(declare-fun x617 () x281)
(declare-fun x598 () Int)
(declare-fun x1356 () Bool)
(declare-fun x1796 () Bool)
(declare-fun x1040 () Int)
(declare-fun x1561 () Int)
(declare-fun x1693 () Int)
(declare-fun x1124 () Bool)
(declare-fun x494 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x88 () Int)
(declare-fun x1264 () Int)
(declare-fun x1099 () Bool)
(declare-fun x1745 () Int)
(declare-fun x867 () Bool)
(declare-fun x1664 () Bool)
(declare-fun x240 () Int)
(declare-fun x2021 () Bool)
(declare-fun x521 () Bool)
(declare-fun x514 () Int)
(declare-fun x488 () Int)
(declare-fun x1254 () Bool)
(declare-fun x2088 () Int)
(declare-fun x1479 () Int)
(declare-fun x957 () Bool)
(declare-fun x674 () Int)
(declare-fun x675 () Bool)
(declare-fun x290 () Int)
(declare-fun x2480 () Bool)
(declare-fun x49 () Int)
(declare-fun x1831 () Bool)
(declare-fun x329 () Int)
(declare-fun x167 () Bool)
(declare-fun x1986 () Bool)
(declare-fun x756 (x281) Int)
(declare-fun x1915 () Int)
(declare-fun x1190 () Bool)
(declare-fun x128 () Int)
(declare-fun x1582 () Bool)
(declare-fun x691 () Int)
(declare-fun x321 () Int)
(declare-fun x567 () Int)
(declare-fun x1243 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x421 () Bool)
(declare-fun x144 () Bool)
(declare-fun x1490 () Bool)
(declare-fun x1801 () Bool)
(declare-fun x1652 () Int)
(declare-fun x199 () Bool)
(declare-fun x1032 () Bool)
(declare-fun x2002 () Bool)
(declare-fun x1412 () Int)
(declare-fun x204 () Bool)
(declare-fun x1047 () Int)
(declare-fun x1054 () Bool)
(declare-fun x680 () Int)
(declare-fun x1820 () Int)
(declare-fun x1056 () Int)
(declare-fun x1161 () Int)
(declare-fun x2363 () Int)
(declare-fun x198 () Int)
(declare-fun x882 () Bool)
(declare-fun x409 () Int)
(declare-fun x483 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x1130 () Int)
(declare-fun x1178 () Int)
(declare-fun x932 () Bool)
(declare-fun x1251 () x281)
(declare-fun x1364 () Bool)
(declare-fun x64 () Int)
(declare-fun x1639 () Int)
(declare-fun x1275 () Int)
(declare-fun x556 () Int)
(declare-fun x870 () Bool)
(declare-fun x1428 () Bool)
(declare-fun x2160 () Bool)
(declare-fun x314 () Int)
(declare-fun x217 () Int)
(declare-fun x361 () Int)
(declare-fun x487 () Int)
(declare-fun x2493 () Bool)
(declare-fun x1258 () Bool)
(declare-fun x978 () Int)
(declare-fun x1349 () Int)
(declare-fun x187 () Bool)
(declare-fun x2200 () Int)
(declare-fun x130 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x1545 () Int)
(declare-fun x1642 () Int)
(declare-fun x1259 () Int)
(declare-fun x1149 () Bool)
(declare-fun x1507 () Int)
(declare-fun x801 () Bool)
(declare-fun x2503 () Bool)
(declare-fun x2112 () Bool)
(declare-fun x1734 () Int)
(declare-fun x1791 () Bool)
(declare-fun x524 () Bool)
(declare-fun x1980 () Bool)
(declare-fun x983 () Bool)
(declare-fun x961 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x1724 () Bool)
(declare-fun x468 () Bool)
(declare-fun x915 () Bool)
(declare-fun x979 () Bool)
(declare-fun x706 () Int)
(declare-fun x1596 () Int)
(declare-fun x2252 () Bool)
(declare-fun x175 () Bool)
(declare-fun x151 () x281)
(declare-fun x862 () Int)
(declare-fun x1426 () Int)
(declare-fun x63 () Bool)
(declare-fun x1870 () x281)
(declare-fun x89 () Bool)
(declare-fun x326 () Int)
(declare-fun x476 () Int)
(declare-fun x2427 () Int)
(declare-fun x330 () Int)
(declare-fun x1690 () Int)
(declare-fun x2071 () Int)
(declare-fun x1379 () Bool)
(declare-fun x397 () Int)
(declare-fun x423 () Int)
(declare-fun x627 () Bool)
(declare-fun x2482 () Bool)
(declare-fun x783 () Int)
(declare-fun x1226 () Bool)
(declare-fun x496 () Int)
(declare-fun x578 () Bool)
(declare-fun x9 () Bool)
(declare-fun x2214 () Bool)
(declare-fun x73 () Bool)
(declare-fun x2326 () Int)
(declare-fun x1887 () Int)
(declare-fun x2121 () Bool)
(declare-fun x905 () Bool)
(declare-fun x2287 () Bool)
(declare-fun x1926 () Int)
(declare-fun x1752 () Int)
(declare-fun x742 () Int)
(declare-fun x1723 () Bool)
(declare-fun x2336 () Bool)
(declare-fun x2407 () Bool)
(declare-fun x451 () Int)
(declare-fun x95 () Int)
(declare-fun x994 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x2386 () Int)
(declare-fun x1034 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x2250 () Int)
(declare-fun x2399 () Int)
(declare-fun x1537 () Bool)
(declare-fun x2154 () Int)
(declare-fun x1534 () Bool)
(declare-fun x65 () Bool)
(declare-fun x1563 () Int)
(declare-fun x1355 () Int)
(declare-fun x2271 () Bool)
(declare-fun x2536 () Bool)
(declare-fun x1177 () Int)
(declare-fun x7 () Int)
(declare-fun x2149 () Int)
(declare-fun x2355 () Int)
(declare-fun x94 () Bool)
(declare-fun x280 () Bool)
(declare-fun x594 () Bool)
(declare-fun x1591 () Bool)
(declare-fun x335 () Bool)
(declare-fun x2272 () Bool)
(declare-fun x2417 () Int)
(declare-fun x2152 () Int)
(declare-fun x231 () Int)
(declare-fun x2322 () Bool)
(declare-fun x169 () Int)
(declare-fun x1129 () Bool)
(declare-fun x1140 () Int)
(declare-fun x247 () Bool)
(declare-fun x441 () Bool)
(declare-fun x2424 () Int)
(declare-fun x2082 () Int)
(declare-fun x689 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x424 () Bool)
(declare-fun x2024 () Bool)
(declare-fun x1165 () Int)
(declare-fun x1002 () Bool)
(declare-fun x625 () Bool)
(declare-fun x1759 () Int)
(declare-fun x613 () Bool)
(declare-fun x2279 () Bool)
(declare-fun x2343 () Bool)
(declare-fun x437 () Int)
(declare-fun x202 () Int)
(declare-fun x1897 () Bool)
(declare-fun x1290 () Bool)
(declare-fun x2352 () Bool)
(declare-fun x790 () Bool)
(declare-fun x2269 () Int)
(declare-fun x2320 () Bool)
(declare-fun x29 (Int) Int)
(declare-fun x607 () Int)
(declare-fun x2273 () Int)
(declare-fun x2193 () Bool)
(declare-fun x469 () Bool)
(declare-fun x1996 () Bool)
(declare-fun x1787 () Bool)
(declare-fun x450 () Bool)
(declare-fun x677 () Bool)
(declare-fun x944 () Bool)
(declare-fun x901 () Bool)
(declare-fun x268 () Bool)
(declare-fun x941 () Bool)
(declare-fun x109 () Bool)
(declare-fun x2332 () Int)
(declare-fun x402 () Int)
(declare-fun x34 () x281)
(declare-fun x1009 () Int)
(declare-fun x2102 () Int)
(declare-fun x1938 () Bool)
(declare-fun x1480 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x85 () Int)
(declare-fun x1903 () Bool)
(declare-fun x2425 () Bool)
(declare-fun x709 () Bool)
(declare-fun x1039 () Bool)
(declare-fun x1908 () Int)
(declare-fun x201 () Int)
(declare-fun x373 () Bool)
(declare-fun x45 () Bool)
(declare-fun x2356 () x281)
(declare-fun x2378 () Bool)
(declare-fun x538 () Bool)
(declare-fun x427 () x281)
(declare-fun x1618 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x2286 () Int)
(declare-fun x1917 () Int)
(declare-fun x2304 () Int)
(declare-fun x2110 () Bool)
(declare-fun x606 () Int)
(declare-fun x2209 () Int)
(declare-fun x20 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x1419 () Int)
(declare-fun x493 () Bool)
(declare-fun x305 (x281) Int)
(declare-fun x1912 () Bool)
(declare-fun x2307 () Int)
(declare-fun x585 () Int)
(declare-fun x611 () Int)
(declare-fun x2041 () Bool)
(declare-fun x1146 () Bool)
(declare-fun x1189 () Bool)
(declare-fun x1500 () x281)
(declare-fun x1590 () Bool)
(declare-fun x988 () Int)
(declare-fun x378 () Int)
(declare-fun x400 () Int)
(declare-fun x2157 () Bool)
(declare-fun x1891 () Int)
(declare-fun x1083 () Int)
(declare-fun x412 () Int)
(declare-fun x246 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x1007 () Int)
(declare-fun x2414 () x281)
(declare-fun x662 () Bool)
(declare-fun x1988 () Int)
(declare-fun x1030 () Bool)
(declare-fun x688 () Int)
(declare-fun x1193 () Bool)
(declare-fun x2284 () Int)
(declare-fun x1962 () Int)
(declare-fun x948 () Bool)
(declare-fun x17 () Bool)
(declare-fun x140 () Bool)
(declare-fun x807 () Bool)
(declare-fun x668 () Bool)
(declare-fun x177 () Bool)
(declare-fun x1778 () Bool)
(declare-fun x738 () Int)
(declare-fun x147 () Bool)
(declare-fun x1420 () Int)
(declare-fun x1511 () Int)
(declare-fun x178 () Bool)
(declare-fun x827 () Bool)
(declare-fun x1006 () Int)
(declare-fun x1774 () Int)
(declare-fun x459 () Int)
(declare-fun x1646 () Bool)
(declare-fun x2239 () x281)
(declare-fun x83 () Int)
(declare-fun x664 () Bool)
(declare-fun x570 () Bool)
(declare-fun x2476 () Bool)
(declare-fun x2054 () Bool)
(declare-fun x2211 () Int)
(declare-fun x2267 () Int)
(declare-fun x1375 () Bool)
(declare-fun x776 (Int) Int)
(declare-fun x2354 () Int)
(declare-fun x1025 () Bool)
(declare-fun x2207 () Bool)
(declare-fun x616 () Bool)
(declare-fun x1803 () Int)
(declare-fun x129 () Bool)
(declare-fun x703 () Int)
(declare-fun x1173 () Int)
(declare-fun x1180 () Int)
(declare-fun x1382 () Int)
(declare-fun x2501 () Bool)
(declare-fun x1833 () Bool)
(declare-fun x597 () Int)
(declare-fun x695 () x281)
(declare-fun x1720 () Int)
(declare-fun x1557 () Bool)
(declare-fun x391 () Int)
(declare-fun x1424 () Bool)
(declare-fun x634 () Bool)
(declare-fun x490 () Int)
(declare-fun x1829 () Int)
(declare-fun x1338 () Int)
(declare-fun x544 () Int)
(declare-fun x1018 () x281)
(declare-fun x850 () Bool)
(declare-fun x698 () x281)
(declare-fun x44 () Int)
(declare-fun x86 () Bool)
(declare-fun x822 () Bool)
(declare-fun x1076 () Int)
(declare-fun x1336 () Bool)
(declare-fun x2301 () Int)
(declare-fun x1125 () Bool)
(declare-fun x769 () Int)
(declare-fun x968 () Bool)
(declare-fun x508 () Bool)
(declare-fun x1370 () Int)
(declare-fun x1611 () Bool)
(declare-fun x81 () Int)
(declare-fun x1423 () Bool)
(declare-fun x590 () Bool)
(declare-fun x2515 () Int)
(declare-fun x1244 () x281)
(declare-fun x1150 () Int)
(declare-fun x145 () Bool)
(declare-fun x278 () Bool)
(declare-fun x1792 () Bool)
(declare-fun x1971 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x1471 () Bool)
(declare-fun x1201 () Bool)
(declare-fun x888 () Bool)
(declare-fun x392 () Bool)
(declare-fun x1046 () Bool)
(declare-fun x242 () x281)
(declare-fun x208 () Int)
(declare-fun x1115 () Bool)
(declare-fun x2394 () x281)
(declare-fun x665 () Int)
(declare-fun x1421 () Bool)
(declare-fun x2060 () Bool)
(declare-fun x1914 () Int)
(declare-fun x1614 () Bool)
(declare-fun x728 () Bool)
(declare-fun x41 () Bool)
(declare-fun x1818 () x281)
(declare-fun x2277 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x2367 () Bool)
(declare-fun x1811 () Int)
(declare-fun x186 () Int)
(declare-fun x1013 () Int)
(declare-fun x2043 () Int)
(declare-fun x661 () Bool)
(declare-fun x656 () Bool)
(declare-fun x1141 () Bool)
(declare-fun x1310 () Int)
(declare-fun x1514 () x281)
(declare-fun x136 () Int)
(declare-fun x1461 () Int)
(declare-fun x515 () Int)
(declare-fun x545 () Bool)
(declare-fun x237 () x281)
(declare-fun x2000 () Int)
(declare-fun x1751 () Int)
(declare-fun x1730 () Int)
(declare-fun x921 () Bool)
(declare-fun x2236 () Int)
(declare-fun x500 () Int)
(declare-fun x1365 () Int)
(declare-fun x157 () Bool)
(declare-fun x124 () Bool)
(declare-fun x71 () Bool)
(declare-fun x2175 () Int)
(declare-fun x736 () Int)
(declare-fun x2168 () Bool)
(declare-fun x232 () Bool)
(declare-fun x2455 () Int)
(declare-fun x2094 () Int)
(declare-fun x1554 () Int)
(declare-fun x1628 () Bool)
(declare-fun x1181 () Bool)
(declare-fun x2235 () Int)
(declare-fun x1540 () Int)
(declare-fun x1840 () x281)
(declare-fun x746 () Int)
(declare-fun x1510 () Int)
(declare-fun x403 () Bool)
(declare-fun x491 () Bool)
(declare-fun x1608 () Bool)
(declare-fun x1446 () Int)
(declare-fun x2396 () x281)
(declare-fun x316 () Bool)
(declare-fun x1970 () Int)
(declare-fun x1950 () Bool)
(declare-fun x1574 () Int)
(declare-fun x860 () Int)
(declare-fun x50 () Int)
(declare-fun x1575 () Bool)
(declare-fun x2155 () Int)
(declare-fun x563 () Bool)
(declare-fun x517 () Bool)
(declare-fun x928 () Int)
(declare-fun x135 () Bool)
(declare-fun x1299 () Int)
(declare-fun x2229 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x938 () Bool)
(declare-fun x164 () Bool)
(declare-fun x1122 () Int)
(declare-fun x485 () Int)
(declare-fun x2255 () Int)
(declare-fun x48 () Int)
(declare-fun x2056 () Int)
(declare-fun x486 () Int)
(declare-fun x2086 () Int)
(declare-fun x171 () Bool)
(declare-fun x223 () x281)
(declare-fun x1362 () Bool)
(declare-fun x1653 () Bool)
(declare-fun x52 () Int)
(declare-fun x395 () Bool)
(declare-fun x1767 () Bool)
(declare-fun x2169 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x1859 () Int)
(declare-fun x1485 (Int) Int)
(declare-fun x2222 () Int)
(declare-fun x56 () Bool)
(declare-fun x1757 () Int)
(declare-fun x811 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x880 () Int)
(declare-fun x637 () Bool)
(declare-fun x1890 () Int)
(declare-fun x834 () Int)
(declare-fun x1773 () Bool)
(declare-fun x2405 () Int)
(declare-fun x956 () Bool)
(declare-fun x755 () Int)
(declare-fun x902 () Bool)
(declare-fun x189 (Int Int) Int)
(declare-fun x2092 () Int)
(declare-fun x624 () Int)
(declare-fun x828 () Int)
(declare-fun x1677 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x498 () Bool)
(declare-fun x953 () Int)
(declare-fun x133 () Int)
(declare-fun x876 () Bool)
(declare-fun x641 () x281)
(declare-fun x697 () Bool)
(declare-fun x359 () Bool)
(declare-fun x356 () x281)
(declare-fun x1297 () Int)
(declare-fun x1236 () Bool)
(declare-fun x2467 () Bool)
(declare-fun x890 (Int) Int)
(declare-fun x632 () Bool)
(declare-fun x579 () Int)
(declare-fun x1584 () Bool)
(declare-fun x159 () Bool)
(declare-fun x2333 () Int)
(declare-fun x1864 () x281)
(declare-fun x760 () Int)
(declare-fun x499 () Bool)
(declare-fun x2316 () Int)
(declare-fun x1708 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x1248 () Int)
(declare-fun x417 () Bool)
(declare-fun x784 () Int)
(declare-fun x2335 () Bool)
(declare-fun x1939 () x281)
(declare-fun x580 () Bool)
(declare-fun x1179 () Bool)
(declare-fun x1989 () Int)
(declare-fun x739 () Bool)
(declare-fun x1844 (Int) Int)
(declare-fun x2444 () Int)
(declare-fun x824 () Bool)
(declare-fun x1985 () Bool)
(declare-fun x2001 () Int)
(declare-fun x835 () Bool)
(declare-fun x2215 () Int)
(declare-fun x2072 () Int)
(declare-fun x2144 () Int)
(declare-fun x946 () Int)
(declare-fun x1330 () Bool)
(declare-fun x522 () Bool)
(declare-fun x1170 () Int)
(declare-fun x1661 () x281)
(declare-fun x273 () x281)
(declare-fun x745 () Bool)
(declare-fun x1106 () Bool)
(declare-fun x2508 () Bool)
(declare-fun x845 () Bool)
(declare-fun x2134 () Bool)
(declare-fun x1256 () Int)
(declare-fun x2415 () Int)
(declare-fun x619 () Int)
(declare-fun x581 () Bool)
(declare-fun x530 () Int)
(declare-fun x874 () Bool)
(declare-fun x1219 () Int)
(declare-fun x2454 () Int)
(declare-fun x2274 () Bool)
(declare-fun x1271 () Int)
(declare-fun x307 () Int)
(declare-fun x1092 () Int)
(declare-fun x2345 () Int)
(declare-fun x2436 (Int) Int)
(declare-fun x1343 () Bool)
(declare-fun x2534 () Bool)
(declare-fun x318 () Bool)
(declare-fun x1038 () Int)
(declare-fun x2216 () Bool)
(declare-fun x589 () Bool)
(declare-fun x940 () Int)
(declare-fun x2223 () Int)
(declare-fun x1888 () Int)
(declare-fun x1015 () x281)
(declare-fun x1686 () Bool)
(declare-fun x1593 () Int)
(declare-fun x226 () Int)
(declare-fun x2445 () Int)
(declare-fun x1257 () Int)
(declare-fun x1253 () x281)
(declare-fun x1823 () Bool)
(declare-fun x1455 () Bool)
(declare-fun x1666 () Bool)
(declare-fun x1841 () Bool)
(declare-fun x1126 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x1300 () Int)
(declare-fun x1399 () Bool)
(declare-fun x355 () Bool)
(declare-fun x383 () Int)
(declare-fun x1337 () Int)
(declare-fun x1143 () Bool)
(declare-fun x1372 () Bool)
(declare-fun x777 () Int)
(declare-fun x2120 () Int)
(declare-fun x1944 () Int)
(declare-fun x2202 (Int Int) Int)
(declare-fun x478 () Int)
(declare-fun x1154 () x281)
(declare-fun x377 () Bool)
(declare-fun x2079 () Bool)
(declare-fun x2406 () Bool)
(declare-fun x188 () Bool)
(declare-fun x2489 () Bool)
(declare-fun x1560 () Bool)
(declare-fun x2184 () Bool)
(declare-fun x996 () Int)
(declare-fun x2497 () Int)
(declare-fun x146 () Bool)
(declare-fun x2268 () Bool)
(declare-fun x762 () Bool)
(declare-fun x1116 () Bool)
(declare-fun x1329 () Int)
(declare-fun x658 () Int)
(declare-fun x1621 () Bool)
(declare-fun x2204 () Int)
(declare-fun x1663 () Bool)
(declare-fun x771 () Int)
(declare-fun x261 () Bool)
(declare-fun x519 () Int)
(declare-fun x2008 () Bool)
(declare-fun x1214 () Int)
(declare-fun x1074 () Bool)
(declare-fun x2264 () Int)
(declare-fun x407 () Int)
(declare-fun x1571 () Bool)
(declare-fun x1442 () Int)
(declare-fun x1626 () Bool)
(declare-fun x831 () Bool)
(declare-fun x1477 () Int)
(declare-fun x19 () Bool)
(declare-fun x2259 () Bool)
(declare-fun x1088 () Bool)
(declare-fun x1805 () Int)
(declare-fun x623 () Int)
(declare-fun x2096 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x1667 () Int)
(declare-fun x981 () Int)
(declare-fun x1311 () Bool)
(declare-fun x2089 () Bool)
(declare-fun x1535 () Int)
(declare-fun x291 () Int)
(declare-fun x2107 () Int)
(declare-fun x823 () Bool)
(declare-fun x2430 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x1761 () Int)
(declare-fun x2140 () Bool)
(declare-fun x2237 () Bool)
(declare-fun x1169 () Int)
(declare-fun x930 () Bool)
(declare-fun x398 () Bool)
(declare-fun x2049 () Int)
(declare-fun x1800 () Bool)
(declare-fun x1837 () Int)
(declare-fun x878 () Bool)
(declare-fun x2085 () Bool)
(declare-fun x561 () Bool)
(declare-fun x120 () Int)
(declare-fun x1568 () Bool)
(declare-fun x192 () Bool)
(declare-fun x134 () Bool)
(declare-fun x513 () Int)
(declare-fun x1771 () x281)
(declare-fun x2111 () Int)
(declare-fun x1168 () Bool)
(declare-fun x2409 () Int)
(declare-fun x2340 () Int)
(declare-fun x1934 () Int)
(declare-fun x507 () Int)
(declare-fun x14 () Bool)
(declare-fun x866 () Bool)
(declare-fun x2447 () Int)
(declare-fun x1114 () Int)
(declare-fun x1873 () Bool)
(declare-fun x2051 () Int)
(declare-fun x406 () Bool)
(declare-fun x1783 () Int)
(declare-fun x1080 () Int)
(declare-fun x733 () Int)
(declare-fun x475 () Bool)
(declare-fun x1388 () x281)
(declare-fun x852 () Bool)
(declare-fun x2260 () Bool)
(declare-fun x382 () Bool)
(declare-fun x2101 () Bool)
(declare-fun x1396 () Int)
(declare-fun x1909 () Bool)
(declare-fun x2491 () x281)
(declare-fun x484 () Bool)
(declare-fun x1655 () Bool)
(declare-fun x2510 () Bool)
(declare-fun x1610 () Int)
(declare-fun x727 () Bool)
(declare-fun x651 () Bool)
(declare-fun x1082 () Int)
(declare-fun x2029 () Int)
(declare-fun x1858 () Int)
(declare-fun x2451 () Int)
(declare-fun x752 () Bool)
(declare-fun x174 () Int)
(declare-fun x102 () Bool)
(declare-fun x1451 () Int)
(declare-fun x1131 () Int)
(declare-fun x336 () Int)
(declare-fun x1901 () Int)
(declare-fun x2213 () Int)
(declare-fun x1035 () Int)
(declare-fun x1100 () Int)
(declare-fun x1588 () x281)
(declare-fun x573 () Int)
(declare-fun x2505 () Bool)
(declare-fun x1361 () Int)
(declare-fun x1282 () Int)
(declare-fun x2059 () Int)
(declare-fun x69 () Int)
(declare-fun x1854 () Int)
(declare-fun x856 () Int)
(declare-fun x365 () Int)
(declare-fun x1849 (x281) Int)
(declare-fun x46 () Bool)
(declare-fun x176 () Bool)
(declare-fun x2138 () Int)
(declare-fun x2197 () x281)
(declare-fun x1658 () Bool)
(declare-fun x894 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x1874 () Bool)
(declare-fun x577 () Int)
(declare-fun x1694 () Bool)
(declare-fun x1207 () x281)
(declare-fun x1587 (Int) Int)
(declare-fun x2540 () Int)
(declare-fun x462 () Bool)
(declare-fun x1513 () Bool)
(declare-fun x1703 () Bool)
(declare-fun x1564 () Int)
(declare-fun x1558 () Bool)
(declare-fun x2373 () Bool)
(declare-fun x1520 () Bool)
(declare-fun x2131 (x281) Int)
(declare-fun x825 (Int) Int)
(declare-fun x819 () Bool)
(declare-fun x258 (Int) Int)
(declare-fun x2349 () Bool)
(declare-fun x708 () Bool)
(declare-fun x236 () Bool)
(declare-fun x2218 () Int)
(declare-fun x848 () x281)
(declare-fun x2146 () Bool)
(declare-fun x1721 () Int)
(declare-fun x2194 () x281)
(declare-fun x2258 () Int)
(declare-fun x725 () Int)
(declare-fun x1729 () Int)
(declare-fun x200 () Bool)
(declare-fun x1804 () Int)
(declare-fun x1802 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x2123 () Int)
(declare-fun x156 () Bool)
(declare-fun x1272 () Int)
(declare-fun x322 () Bool)
(declare-fun x150 () Bool)
(declare-fun x1977 () Int)
(declare-fun x1960 () Bool)
(declare-fun x1325 () Int)
(declare-fun x2254 () Bool)
(declare-fun x2074 () Int)
(declare-fun x22 () Bool)
(declare-fun x4 () Bool)
(declare-fun x1309 () Int)
(declare-fun x103 () Bool)
(declare-fun x927 () Bool)
(declare-fun x537 () Bool)
(declare-fun x345 () Int)
(declare-fun x1790 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x1886 () Int)
(declare-fun x1029 () Bool)
(declare-fun x2496 () Int)
(declare-fun x2098 () Int)
(declare-fun x2374 () Int)
(declare-fun x256 () Bool)
(declare-fun x2312 () Bool)
(declare-fun x33 () Int)
(declare-fun x1784 () Int)
(declare-fun x1566 () Int)
(declare-fun x1556 () Int)
(declare-fun x527 () Bool)
(declare-fun x1410 () Int)
(declare-fun x1706 () Int)
(declare-fun x614 () Bool)
(declare-fun x2428 () Bool)
(declare-fun x2022 () Int)
(declare-fun x1987 () Bool)
(declare-fun x2376 () Int)
(declare-fun x1657 () Bool)
(declare-fun x1716 () Bool)
(declare-fun x2383 () Bool)
(declare-fun x1458 () Bool)
(declare-fun x79 () Bool)
(declare-fun x1377 () Int)
(declare-fun x1929 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x800 () Bool)
(declare-fun x820 () Int)
(declare-fun x2431 () Bool)
(declare-fun x1186 () Bool)
(declare-fun x718 () Bool)
(declare-fun x2507 () Bool)
(declare-fun x1754 () Int)
(declare-fun x803 () x281)
(declare-fun x1895 () Int)
(declare-fun x436 () Bool)
(declare-fun x2066 () Bool)
(declare-fun x1580 () Int)
(declare-fun x1402 () Int)
(declare-fun x2475 () Int)
(declare-fun x428 () Int)
(declare-fun x386 () Int)
(declare-fun x751 () Int)
(declare-fun x1862 () Bool)
(declare-fun x1924 () Bool)
(declare-fun x2360 () Int)
(declare-fun x387 () Bool)
(declare-fun x1760 () Int)
(declare-fun x449 () Bool)
(declare-fun x2490 () Bool)
(declare-fun x2484 () Int)
(declare-fun x2195 () Int)
(declare-fun x1819 () Int)
(declare-fun x39 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x571 () Bool)
(declare-fun x640 () Bool)
(declare-fun x999 () Int)
(declare-fun x1457 () Bool)
(declare-fun x2342 () Int)
(declare-fun x2453 () Bool)
(declare-fun x1335 () Int)
(declare-fun x1499 () Int)
(declare-fun x1027 () Bool)
(declare-fun x1932 () x281)
(declare-fun x2371 () Bool)
(declare-fun x141 () Int)
(declare-fun x1719 () Int)
(declare-fun x1216 () Bool)
(declare-fun x1346 () Int)
(declare-fun x1712 () Int)
(declare-fun x158 () Int)
(declare-fun x2412 () Int)
(declare-fun x1749 () Bool)
(declare-fun x883 () Int)
(declare-fun x1151 () Int)
(declare-fun x1333 () Bool)
(declare-fun x1710 () Int)
(declare-fun x1147 () Bool)
(declare-fun x362 () Int)
(declare-fun x473 () x281)
(declare-fun x430 () Int)
(declare-fun x170 () Int)
(declare-fun x2364 () Bool)
(declare-fun x2234 () Int)
(declare-fun x1052 () Bool)
(declare-fun x1555 () Bool)
(declare-fun x220 () Bool)
(declare-fun x1215 () Int)
(declare-fun x2228 () x281)
(declare-fun x1544 () Bool)
(declare-fun x308 () Bool)
(declare-fun x1930 () Int)
(declare-fun x2321 () Bool)
(declare-fun x2217 () Bool)
(declare-fun x843 () Int)
(declare-fun x2063 () Int)
(declare-fun x2034 () Bool)
(declare-fun x1492 () Int)
(declare-fun x1668 () Int)
(declare-fun x631 () Int)
(declare-fun x572 () Int)
(declare-fun x297 () Bool)
(declare-fun x1722 () Int)
(declare-fun x153 () Bool)
(declare-fun x2093 () Int)
(declare-fun x435 () Int)
(declare-fun x1357 () Int)
(declare-fun x1209 () Bool)
(declare-fun x1678 () Int)
(declare-fun x2042 () Bool)
(declare-fun x2016 () Int)
(declare-fun x1142 () Bool)
(declare-fun x2087 () Bool)
(declare-fun x1809 () Bool)
(declare-fun x933 () Int)
(declare-fun x2468 () Int)
(declare-fun x1808 () Bool)
(declare-fun x1821 () Int)
(declare-fun x277 () Int)
(declare-fun x851 () Int)
(declare-fun x230 () Bool)
(declare-fun x479 () Int)
(declare-fun x799 () Int)
(declare-fun x898 () Bool)
(declare-fun x1817 () Bool)
(declare-fun x352 () Int)
(declare-fun x945 () Bool)
(declare-fun x1053 () Int)
(declare-fun x2464 () Bool)
(declare-fun x599 () Bool)
(declare-fun x620 () Bool)
(declare-fun x838 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x1742 () Int)
(declare-fun x1516 () Int)
(declare-fun x1781 () x281)
(declare-fun x1194 () Bool)
(declare-fun x2291 () Bool)
(declare-fun x518 () Bool)
(declare-fun x1472 () Int)
(declare-fun x1512 () Int)
(declare-fun x2499 () Bool)
(declare-fun x2294 () Int)
(declare-fun x554 () Int)
(declare-fun x1877 () Int)
(declare-fun x1476 () Int)
(declare-fun x1927 () Bool)
(declare-fun x1081 () Bool)
(declare-fun x592 () Int)
(declare-fun x1696 () Bool)
(declare-fun x1846 () Int)
(declare-fun x2028 () Int)
(declare-fun x413 () Int)
(declare-fun x774 () Bool)
(declare-fun x1623 () Int)
(declare-fun x163 () Bool)
(declare-fun x2538 () Bool)
(declare-fun x643 (x281) Int)
(declare-fun x1363 () Int)
(declare-fun x1060 () Int)
(declare-fun x2410 () Int)
(declare-fun x1417 () Int)
(declare-fun x2337 () Bool)
(declare-fun x209 () Int)
(declare-fun x224 () Bool)
(declare-fun x1102 () Int)
(declare-fun x1548 () Int)
(declare-fun x267 () Int)
(declare-fun x1594 () Bool)
(declare-fun x332 () Bool)
(declare-fun x1684 () Int)
(declare-fun x162 () Int)
(declare-fun x754 () Bool)
(declare-fun x922 () Int)
(declare-fun x1481 () Bool)
(declare-fun x840 () Int)
(declare-fun x955 () Bool)
(declare-fun x1172 () Bool)
(declare-fun x2502 () Bool)
(declare-fun x2369 () Int)
(declare-fun x1644 () Bool)
(declare-fun x190 () Bool)
(declare-fun x667 () Bool)
(declare-fun x1850 () Bool)
(declare-fun x764 (Int Int) Int)
(declare-fun x2323 () Bool)
(declare-fun x1974 () Bool)
(declare-fun x1452 () Int)
(declare-fun x931 () Int)
(declare-fun x2516 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x1444 () Int)
(declare-fun x741 () Int)
(declare-fun x2064 () Int)
(declare-fun x2077 () Bool)
(declare-fun x5 () Bool)
(declare-fun x673 () Int)
(declare-fun x2485 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x1928 () Int)
(declare-fun x1286 () Bool)
(declare-fun x2065 () Bool)
(declare-fun x47 () Int)
(declare-fun x1572 () Bool)
(declare-fun x737 () Int)
(declare-fun x837 () Bool)
(declare-fun x76 () Bool)
(declare-fun x1882 () Bool)
(declare-fun x1005 () Int)
(declare-fun x2474 () Bool)
(declare-fun x471 () Int)
(declare-fun x1185 () Bool)
(declare-fun x2171 () Int)
(declare-fun x2156 () Bool)
(declare-fun x2007 () Bool)
(declare-fun x636 () x281)
(declare-fun x1016 () Int)
(declare-fun x629 () Int)
(declare-fun x62 () Bool)
(declare-fun x773 () Int)
(declare-fun x317 () Bool)
(declare-fun x347 () Int)
(declare-fun x1260 () Bool)
(declare-fun x2470 () Bool)
(declare-fun x467 () Int)
(declare-fun x1307 () Bool)
(declare-fun x127 () Bool)
(declare-fun x11 () Bool)
(declare-fun x653 () Bool)
(declare-fun x1237 () Bool)
(declare-fun x185 () Int)
(declare-fun x1067 () Bool)
(declare-fun x1583 () Bool)
(declare-fun x1899 () Bool)
(declare-fun x2420 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x1578 () Bool)
(declare-fun x2181 () Int)
(declare-fun x2017 () Bool)
(declare-fun x90 () Bool)
(declare-fun x759 () Int)
(declare-fun x93 () Int)
(declare-fun x194 () Int)
(declare-fun x1072 () Bool)
(declare-fun x1174 () Bool)
(declare-fun x216 () x281)
(declare-fun x2275 () Int)
(declare-fun x1369 () Bool)
(declare-fun x410 () Int)
(declare-fun x2288 () Int)
(declare-fun x686 () Int)
(declare-fun x1456 () Int)
(declare-fun x1459 (Int) Int)
(declare-fun x325 () Bool)
(declare-fun x212 () Int)
(declare-fun x1832 () Bool)
(declare-fun x1235 () Int)
(declare-fun x18 () Int)
(declare-fun x1885 () Bool)
(declare-fun x2325 () Bool)
(declare-fun x1865 () Bool)
(declare-fun x6 () Int)
(declare-fun x666 () Int)
(declare-fun x2514 () Bool)
(declare-fun x2158 () Int)
(declare-fun x1010 () Bool)
(declare-fun x1232 () Int)
(declare-fun x2522 () Bool)
(declare-fun x1543 () Int)
(declare-fun x1765 () Bool)
(declare-fun x461 () Bool)
(declare-fun x2053 () Bool)
(declare-fun x1460 () Bool)
(declare-fun x877 () Bool)
(declare-fun x715 (Int Int) Int)
(declare-fun x123 (Int) Int)
(declare-fun x160 () Int)
(declare-fun x2361 () Bool)
(declare-fun x509 () Int)
(declare-fun x1220 () x281)
(declare-fun x1875 () Bool)
(declare-fun x1786 () Bool)
(declare-fun x1352 () Int)
(declare-fun x1429 () Int)
(declare-fun x816 () Int)
(declare-fun x302 () Int)
(declare-fun x2208 () Bool)
(declare-fun x1087 () Int)
(declare-fun x603 () Bool)
(declare-fun x1904 (Int) Int)
(declare-fun x2327 () Bool)
(declare-fun x2055 () Bool)
(declare-fun x1613 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x1493 () Int)
(declare-fun x465 () Int)
(declare-fun x2032 () Bool)
(declare-fun x443 () Int)
(declare-fun x761 () Int)
(declare-fun x1713 () Int)
(declare-fun x2296 () Int)
(declare-fun x872 () Int)
(declare-fun x1633 () Bool)
(declare-fun x2379 (Int) Int)
(declare-fun x1925 () Bool)
(declare-fun x1798 () Int)
(declare-fun x2067 () Int)
(declare-fun x1592 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x1483 () Int)
(declare-fun x2045 () Bool)
(declare-fun x2411 () Bool)
(declare-fun x1269 () Int)
(declare-fun x791 () Bool)
(declare-fun x1454 () Int)
(declare-fun x2106 () Int)
(declare-fun x1641 () Bool)
(declare-fun x1948 () Bool)
(declare-fun x1758 () Bool)
(declare-fun x334 () Bool)
(declare-fun x1993 () Bool)
(declare-fun x393 () Int)
(declare-fun x1952 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x971 () Bool)
(declare-fun x1828 () Bool)
(declare-fun x565 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x1285 () x281)
(declare-fun x770 () x281)
(declare-fun x245 () Int)
(declare-fun x275 () Int)
(declare-fun x474 () Int)
(declare-fun x444 () Int)
(declare-fun x2243 () Bool)
(declare-fun x913 () Bool)
(declare-fun x2324 () Int)
(declare-fun x1506 () Bool)
(declare-fun x228 () Int)
(declare-fun x1318 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x2205 () Bool)
(declare-fun x1569 () Int)
(declare-fun x227 () Bool)
(declare-fun x1640 () Int)
(declare-fun x1673 () Bool)
(declare-fun x161 () Bool)
(declare-fun x551 () Int)
(declare-fun x1967 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x1551 () Int)
(declare-fun x1868 () Bool)
(declare-fun x609 () Int)
(declare-fun x947 () Bool)
(declare-fun x21 () Bool)
(declare-fun x832 () Bool)
(declare-fun x106 (x281) Int)
(declare-fun x2334 () Int)
(declare-fun x1559 (Int) Int)
(declare-fun x1595 () Int)
(declare-fun x1576 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x2462 () Bool)
(declare-fun x1347 () Int)
(declare-fun x1689 () Int)
(declare-fun x2416 () Int)
(declare-fun x2403 () Bool)
(declare-fun x446 () Bool)
(declare-fun x481 () Int)
(declare-fun x1601 () Bool)
(declare-fun x1547 () Int)
(declare-fun x1497 () Bool)
(declare-fun x440 () Int)
(declare-fun x2242 () Bool)
(declare-fun x2040 () x281)
(declare-fun x2533 () Bool)
(declare-fun x1542 () Int)
(declare-fun x586 () Bool)
(declare-fun x833 () Int)
(declare-fun x181 () Bool)
(declare-fun x1931 () Int)
(declare-fun x967 () Int)
(declare-fun x557 () Int)
(declare-fun x8 () Int)
(declare-fun x2393 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x2062 () Bool)
(declare-fun x419 () Bool)
(declare-fun x818 () Int)
(declare-fun x1197 () Int)
(declare-fun x368 () Bool)
(declare-fun x2113 () Bool)
(declare-fun x415 () Int)
(declare-fun x1203 () Bool)
(declare-fun x339 () Bool)
(declare-fun x1789 () Int)
(declare-fun x98 () Int)
(declare-fun x935 () Bool)
(declare-fun x1839 () Bool)
(declare-fun x2132 () Int)
(declare-fun x542 () Bool)
(declare-fun x729 () Bool)
(declare-fun x1935 () Bool)
(declare-fun x1604 () Int)
(declare-fun x2037 () Int)
(declare-fun x512 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x23 () Bool)
(declare-fun x12 () Bool)
(declare-fun x647 () x281)
(declare-fun x2206 () Bool)
(declare-fun x543 () Int)
(declare-fun x78 () Int)
(declare-fun x2036 () Int)
(declare-fun x1498 () Int)
(declare-fun x2137 () Bool)
(declare-fun x670 () Bool)
(declare-fun x2159 () Int)
(declare-fun x2180 () Int)
(declare-fun x1672 () Bool)
(declare-fun x60 () Int)
(declare-fun x96 () Bool)
(declare-fun x1838 () Int)
(declare-fun x1301 () x281)
(declare-fun x861 () Bool)
(declare-fun x1766 () Bool)
(declare-fun x2511 () Int)
(declare-fun x2448 () Int)
(declare-fun x2232 () Bool)
(declare-fun x328 () Int)
(declare-fun x2170 () Int)
(declare-fun x2524 () Int)
(declare-fun x1964 () Int)
(declare-fun x1295 () Bool)
(declare-fun x337 () Bool)
(declare-fun x1919 () Bool)
(declare-fun x1860 () Bool)
(declare-fun x456 () Int)
(declare-fun x1119 () Bool)
(declare-fun x1448 () Int)
(declare-fun x1288 () Int)
(declare-fun x747 () Bool)
(declare-fun x814 () Int)
(declare-fun x2432 () Int)
(declare-fun x904 () Bool)
(declare-fun x2081 () Int)
(declare-fun x1196 () Int)
(declare-fun x654 (x281) Int)
(declare-fun x1699 () Bool)
(declare-fun x1468 () Int)
(declare-fun x750 () Int)
(declare-fun x1484 () Bool)
(declare-fun x531 (Int) Int)
(declare-fun x2481 (Int) Int)
(declare-fun x1856 () Int)
(declare-fun x480 () Int)
(declare-fun x1043 () Int)
(declare-fun x1961 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x511 () Bool)
(declare-fun x1031 () Int)
(declare-fun x2230 () x281)
(declare-fun x1861 () Bool)
(declare-fun x2517 () Bool)
(declare-fun x1581 () Int)
(declare-fun x210 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x2473 () Bool)
(declare-fun x1634 () Int)
(declare-fun x2114 () Int)
(declare-fun x42 () Bool)
(declare-fun x952 () Bool)
(declare-fun x694 () Int)
(declare-fun x2509 () Bool)
(declare-fun x211 () Bool)
(declare-fun x1331 () Int)
(declare-fun x183 () Bool)
(declare-fun x77 () Int)
(declare-fun x1942 () Int)
(declare-fun x562 () Bool)
(declare-fun x2198 () Int)
(declare-fun x1533 () Int)
(declare-fun x122 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x2460 () Bool)
(declare-fun x1398 () Int)
(declare-fun x995 () Bool)
(declare-fun x1445 (Int) Int)
(declare-fun x1622 (Int) x281)
(declare-fun x411 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x924 () Bool)
(declare-fun x31 () Int)
(declare-fun x1876 () x281)
(declare-fun x2108 () Bool)
(declare-fun x726 () Bool)
(declare-fun x1769 () Bool)
(declare-fun x197 () Bool)
(declare-fun x1393 () Int)
(declare-fun x865 () Int)
(declare-fun x1807 () Bool)
(declare-fun x67 () Bool)
(declare-fun x655 () Int)
(declare-fun x975 () Bool)
(declare-fun x1728 () Bool)
(declare-fun x2226 () Bool)
(declare-fun x1953 () Bool)
(declare-fun x1427 () Bool)
(declare-fun x954 (Int) Int)
(declare-fun x1109 () Bool)
(declare-fun x1992 () Int)
(declare-fun x669 () Int)
(declare-fun x2450 () Int)
(declare-fun x2308 () Int)
(declare-fun x868 () Bool)
(declare-fun x1916 () Bool)
(declare-fun x1134 () Int)
(declare-fun x315 () Bool)
(declare-fun x998 () Int)
(declare-fun x457 () Int)
(declare-fun x1879 () Int)
(declare-fun x765 () Int)
(declare-fun x319 () Int)
(declare-fun x1250 () Bool)
(declare-fun x2531 () Bool)
(declare-fun x1024 () Int)
(declare-fun x269 () Bool)
(declare-fun x2244 () Bool)
(declare-fun x2188 () Int)
(declare-fun x1091 () Bool)
(declare-fun x1954 () Bool)
(declare-fun x841 () Int)
(declare-fun x1155 () Bool)
(declare-fun x1315 () Int)
(declare-fun x447 () Bool)
(declare-fun x254 (x281) Int)
(declare-fun x196 () Int)
(declare-fun x1920 () Int)
(declare-fun x416 () Bool)
(declare-fun x887 () Bool)
(declare-fun x1651 () Bool)
(declare-fun x2196 () Int)
(declare-fun x327 () Bool)
(declare-fun x2385 () Bool)
(declare-fun x1135 () Int)
(declare-fun x15 () Bool)
(declare-fun x1390 () Int)
(declare-fun x1065 () Int)
(declare-fun x2249 () Int)
(declare-fun x593 () x281)
(declare-fun x1474 () Bool)
(declare-fun x241 () Int)
(declare-fun x1432 () Int)
(declare-fun x2449 () Bool)
(declare-fun x429 () Bool)
(declare-fun x700 () Bool)
(declare-fun x338 () Int)
(declare-fun x1304 () Int)
(declare-fun x1697 () Bool)
(declare-fun x1519 () Bool)
(declare-fun x354 () Bool)
(declare-fun x2097 () Int)
(declare-fun x2201 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x610 () Bool)
(declare-fun x951 (x281) Int)
(declare-fun x101 () Int)
(declare-fun x1982 () Bool)
(declare-fun x207 () x281)
(declare-fun x272 () Int)
(declare-fun x1527 () Bool)
(declare-fun x1354 () Int)
(declare-fun x2263 () Int)
(declare-fun x2009 () Bool)
(declare-fun x1675 () Int)
(declare-fun x57 () Bool)
(declare-fun x16 () Bool)
(declare-fun x684 () Bool)
(declare-fun x1223 () Bool)
(declare-fun x342 () Bool)
(declare-fun x2408 () Bool)
(declare-fun x2486 () Bool)
(declare-fun x547 () Bool)
(declare-fun x1465 () Bool)
(declare-fun x719 () Bool)
(declare-fun x1705 () Bool)
(declare-fun x520 () Int)
(declare-fun x1394 () Int)
(declare-fun x1656 () Int)
(declare-fun x2541 () Bool)
(declare-fun x215 () Bool)
(declare-fun x821 () Int)
(declare-fun x1225 () Bool)
(declare-fun x43 () Int)
(declare-fun x115 () Int)
(declare-fun x375 () Bool)
(declare-fun x1725 () Bool)
(declare-fun x2519 () Int)
(declare-fun x1350 (Int) Int)
(declare-fun x844 () Bool)
(declare-fun x2339 () Int)
(declare-fun x1045 () Int)
(declare-fun x2189 () Bool)
(declare-fun x1077 () Bool)
(declare-fun x1744 () Bool)
(declare-fun x576 () Int)
(declare-fun x2456 () Int)
(declare-fun x1933 () Bool)
(declare-fun x548 () Bool)
(declare-fun x716 () Int)
(declare-fun x734 () Bool)
(declare-fun x687 () Int)
(declare-fun x341 () x281)
(declare-fun x1113 () Bool)
(declare-fun x2117 () x281)
(declare-fun x1136 () Int)
(declare-fun x1267 () Int)
(declare-fun x1332 () Bool)
(declare-fun x1777 () Bool)
(declare-fun x360 () Bool)
(declare-fun x394 () Bool)
(declare-fun x454 () x281)
(declare-fun x331 () Int)
(declare-fun x1615 () Int)
(declare-fun x2280 () Int)
(declare-fun x1845 (Int) Int)
(declare-fun x1965 () Int)
(declare-fun x939 () Int)
(declare-fun x849 () Int)
(declare-fun x286 () Bool)
(declare-fun x1273 () Int)
(declare-fun x1084 () Int)
(declare-fun x993 () Int)
(declare-fun x32 () Bool)
(declare-fun x426 () Bool)
(declare-fun x1247 () Int)
(declare-fun x804 () Bool)
(declare-fun x568 () Bool)
(declare-fun x1401 () Bool)
(declare-fun x815 () Bool)
(declare-fun x1956 () Int)
(declare-fun x1162 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x1405 () x281)
(declare-fun x2426 () Int)
(declare-fun x1433 () Bool)
(declare-fun x165 () Int)
(declare-fun x2529 () Bool)
(declare-fun x1826 () Bool)
(declare-fun x442 () x281)
(declare-fun x110 () Bool)
(declare-fun x2492 () Bool)
(declare-fun x453 () Bool)
(declare-fun x2443 () x281)
(declare-fun x2353 () Int)
(declare-fun x2224 () Bool)
(declare-fun x1289 () Int)
(declare-fun x184 () Bool)
(declare-fun x1028 () Bool)
(declare-fun x2452 () Int)
(declare-fun x711 () Bool)
(declare-fun x271 () Bool)
(declare-fun x369 () Bool)
(declare-fun x2078 () Bool)
(declare-fun x306 () x281)
(declare-fun x1128 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x2526 () Int)
(declare-fun x792 () Bool)
(declare-fun x1058 () Int)
(declare-fun x982 () Int)
(declare-fun x1523 () Int)
(declare-fun x846 () Int)
(declare-fun x2539 () Int)
(declare-fun x1233 () Int)
(declare-fun x973 () Bool)
(declare-fun x214 () Bool)
(declare-fun x1268 () Bool)
(declare-fun x2227 () Int)
(declare-fun x1647 () Int)
(declare-fun x1438 () Bool)
(declare-fun x1023 () Bool)
(declare-fun x893 () Bool)
(declare-fun x2437 () Bool)
(declare-fun x2520 () Bool)
(declare-fun x1711 () Int)
(declare-fun x1834 () Int)
(declare-fun x1779 () Bool)
(declare-fun x259 () Int)
(declare-fun x1037 () Int)
(declare-fun x2330 () Bool)
(declare-fun x54 () Bool)
(declare-fun x2191 (Int) Int)
(declare-fun x896 () Bool)
(declare-fun x155 () Int)
(declare-fun x1565 () Bool)
(declare-fun x1380 () Int)
(declare-fun x2459 () Bool)
(declare-fun x1469 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x235 () Int)
(declare-fun x1851 () Int)
(declare-fun x374 () Int)
(declare-fun x826 () Int)
(declare-fun x1515 () Int)
(declare-fun x1553 () Int)
(declare-fun x1041 () Int)
(declare-fun x1384 () Bool)
(declare-fun x482 () Bool)
(declare-fun x2469 () Bool)
(declare-fun x82 () Bool)
(declare-fun x2292 () Bool)
(declare-fun x853 () Bool)
(declare-fun x2289 () x281)
(declare-fun x1768 () Int)
(declare-fun x2309 (Int Int) Int)
(declare-fun x2457 () Int)
(declare-fun x1302 () Int)
(declare-fun x1489 () Int)
(declare-fun x75 () Int)
(declare-fun x1153 () Int)
(declare-fun x2518 () Int)
(declare-fun x405 () Int)
(declare-fun x574 () Int)
(declare-fun x591 () Bool)
(declare-fun x2039 () Int)
(declare-fun x2318 () Bool)
(declare-fun x1386 () Int)
(declare-fun x1274 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x559 () Int)
(declare-fun x1296 (x281) Int)
(declare-fun x873 () Int)
(declare-fun x1224 () Bool)
(declare-fun x1629 () Bool)
(declare-fun x989 () Int)
(declare-fun x1241 () Bool)
(declare-fun x671 () Int)
(declare-fun x943 () Bool)
(declare-fun x2319 () Int)
(declare-fun x582 () Bool)
(declare-fun x2073 () Int)
(declare-fun x767 () Bool)
(declare-fun x287 () Int)
(declare-fun x251 () Bool)
(declare-fun x1857 () Int)
(declare-fun x1240 () Int)
(declare-fun x1406 () Int)
(declare-fun x1940 () Bool)
(declare-fun x2187 () Bool)
(declare-fun x2341 () Bool)
(declare-fun x2256 () Bool)
(declare-fun x2423 () Int)
(declare-fun x1316 () Bool)
(declare-fun x1435 () x281)
(declare-fun x1062 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x1606 () Int)
(declare-fun x2504 () Bool)
(declare-fun x1127 () Bool)
(declare-fun x1374 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x1414 () Bool)
(declare-fun x649 () Bool)
(declare-fun x950 () Int)
(declare-fun x892 () Int)
(declare-fun x1671 () Bool)
(declare-fun x310 () Int)
(declare-fun x2537 () Bool)
(declare-fun x1983 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x1756 () Bool)
(declare-fun x438 () Bool)
(declare-fun x949 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x987 () Bool)
(declare-fun x2261 () x281)
(declare-fun x463 () Bool)
(declare-fun x757 () Bool)
(declare-fun x2165 () Int)
(declare-fun x111 () Bool)
(declare-fun x2512 () Bool)
(declare-fun x2192 () Bool)
(declare-fun x1702 () Bool)
(declare-fun x59 () Bool)
(declare-fun x2305 () Bool)
(declare-fun x1440 () Bool)
(declare-fun x1050 () Int)
(declare-fun x704 () Int)
(declare-fun x1810 () Int)
(declare-fun x963 () Int)
(declare-fun x1812 () Bool)
(declare-fun x564 () Int)
(declare-fun x604 () Int)
(declare-fun x958 () Int)
(declare-fun x2498 () Bool)
(declare-fun x1306 (Int) Int)
(declare-fun x558 (x281) Int)
(declare-fun x2329 () Bool)
(declare-fun x2210 () Bool)
(declare-fun x916 () Int)
(declare-fun x2050 () Int)
(declare-fun x422 () Bool)
(declare-fun x1632 () Bool)
(declare-fun x919 () Bool)
(declare-fun x2199 () Int)
(declare-fun x1981 () Int)
(declare-fun x1373 () Bool)
(declare-fun x1392 () Int)
(declare-fun x1487 () Int)
(declare-fun x829 () Int)
(declare-fun x105 () Int)
(declare-fun x2303 () Bool)
(declare-fun x1517 () Bool)
(declare-fun x288 () Bool)
(declare-fun x389 () Bool)
(declare-fun x528 () Int)
(declare-fun x960 () x281)
(declare-fun x2080 () Int)
(declare-fun x1599 () Int)
(declare-fun x2115 () x281)
(declare-fun x722 () Bool)
(declare-fun x2281 () Bool)
(declare-fun x797 () Int)
(declare-fun x1775 () Int)
(declare-fun x692 () Bool)
(declare-fun x2103 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x920 () Bool)
(declare-fun x180 () x281)
(declare-fun x289 () Int)
(declare-fun x1367 () Bool)
(declare-fun x1911 () Int)
(declare-fun x1600 () Int)
(declare-fun x724 () Bool)
(declare-fun x1003 () Int)
(declare-fun x114 () Bool)
(declare-fun x1529 () Int)
(declare-fun x225 () Bool)
(declare-fun x125 () x281)
(declare-fun x972 () Bool)
(declare-fun x2219 () Int)
(declare-fun x219 () Int)
(declare-fun x682 () Bool)
(declare-fun x934 () Int)
(declare-fun x1208 () Int)
(declare-fun x1411 () Bool)
(declare-fun x701 () Bool)
(declare-fun x431 () Int)
(declare-fun x830 () Int)
(declare-fun x371 () Bool)
(declare-fun x1764 () Int)
(declare-fun x357 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x1255 () Int)
(declare-fun x659 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x1648 () Int)
(declare-fun x540 () Int)
(declare-fun x858 () Bool)
(declare-fun x652 () Bool)
(define-fun x808 ((x281 x281) (x740 Int)) x281 (ite ((_ is x1638) x281) (x1638 (x1187 x281) (x2004 x281) (x2404 x281) (x298 x281) (x2461 x281) (x2368 x281) (x1291 x281) (+ (x2338 x281) x740)) (ite ((_ is x748) x281) (x748 (x1263 x281) (x1577 x281) (x2395 x281) (x1070 x281) (x2033 x281) (x1395 x281) (+ (x2010 x281) x740)) (ite ((_ is x401) x281) (x401 (x1107 x281) (x1415 x281) (x621 x281) (x2179 x281) (x53 x281) (+ (x399 x281) x740)) (ite ((_ is x346) x281) (x346 (x234 x281) (x2521 x281) (x1701 x281) (x2295 x281) (+ x740 (x148 x281))) (ite ((_ is x2109) x281) (x2109 (x2266 x281) (x1443 x281) (x1064 x281) (+ (x2440 x281) x740)) (ite ((_ is x173) x281) (x173 (x229 x281) (x1270 x281) (+ x740 (x1685 x281))) (ite ((_ is x2162) x281) (x2162 (x1998 x281) (+ (x1068 x281) x740)) (x1546 (+ x740 (x193 x281)))))))))))
(define-fun x1199 ((x1437 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1437) (<= 0 x1437)) x1437 (- x1437 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1345 ((x1437 Int)) Int (ite (and (< x1437 0) (>= x1437 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1437) x1437))
(define-fun x1184 ((x1437 Int)) Int (ite (and (<= 0 x1437) (< x1437 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1437 (ite (and (< x1437 231584178474632390847141970017375815706539969331281128078915168015826259279872) (>= x1437 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- x1437 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (< x1437 0) (>= x1437 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x1437 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2202 x1437 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x1602 ((x353 Int)) Bool (and (< x353 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x353 0)))
(define-fun x1404 ((x353 Int) (x788 Int)) Bool (and (< (x2202 x353 x788) x788) (<= 0 (x2202 x353 x788))))
(define-fun x2203 ((x353 Int) (x788 Int)) Bool (=> (and (> x788 0) (>= x353 0)) (= (= x353 (x2202 x353 x788)) (< x353 x788))))
(define-fun x303 ((x353 Int) (x788 Int)) Bool (=> (and (and (< x353 (+ x788 x788)) (<= x788 x353)) (< 0 x788)) (= (x2202 x353 x788) (- x353 x788))))
(define-fun x2221 ((x353 Int)) Bool (= (x2202 0 x353) 0))
(define-fun x2116 ((x353 Int)) Bool (= (x2202 x353 1) 0))
(define-fun x1093 ((x353 Int)) Bool (= 0 (x2202 x353 x353)))
(define-fun x349 ((x353 Int)) Bool (and (x1093 x353) (x2116 x353) (x2221 x353)))
(define-fun x758 ((x353 Int) (x788 Int)) Bool (=> (and (< 0 x788) (> x353 0)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x189 x353 x788)) (= (x2309 (x1184 (x189 x353 x788)) x353) x788))))
(define-fun x367 ((x353 Int) (x788 Int)) Bool (=> (and (not (= x788 0)) (not (= 0 x353))) (and (= x353 (x2309 (x189 x353 x788) x788)) (= (x2309 (x189 x353 x788) x353) x788))))
(define-fun x1567 ((x353 Int) (x788 Int)) Bool (=> (and (< 0 x788) (< 0 x353)) (= (> x788 (x2309 115792089237316195423570985008687907853269984665640564039457584007913129639935 x353)) (> (x189 x353 x788) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x622 ((x353 Int) (x788 Int)) Bool (and (= (x1184 (x189 x353 (- x788 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1184 (x189 x353 x788))) (= (x1184 (x189 x353 x788)) (x1184 (x189 (- x353 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x788 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x1184 (x189 (- x353 115792089237316195423570985008687907853269984665640564039457584007913129639936) x788)) (x1184 (x189 x353 x788)))))
(define-fun x2370 ((x353 Int) (x788 Int)) Bool (and (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x353) (<= x353 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (> x788 0) (<= x788 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x353) (x2309 57896044618658097711785492504343953926634992332820282019728792003956564819968 x788)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x189 (- x353 115792089237316195423570985008687907853269984665640564039457584007913129639936) x788)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x353) (<= x353 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x788) (> x788 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (x189 (- x353 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x788 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x2309 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x788)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x353)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x788) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x788)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x353) (> x353 0))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x788) (x2309 57896044618658097711785492504343953926634992332820282019728792003956564819968 x353)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x189 x353 (- x788 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (<= x788 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x788 0)) (and (<= x353 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x353 0))) (= (<= x353 (x2309 57896044618658097711785492504343953926634992332820282019728792003956564819967 x788)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x189 x353 x788))))))
(define-fun x628 ((x353 Int)) Bool (and (= 0 (x189 0 x353)) (= 0 (x189 x353 0))))
(define-fun x1847 ((x353 Int)) Bool (and (= x353 (x189 1 x353)) (= (x189 x353 1) x353)))
(define-fun x1322 ((x353 Int)) Bool (and (x628 x353) (x1847 x353)))
(define-fun x1334 ((x353 Int)) Bool (and (= x353 (x715 x353 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x715 115792089237316195423570985008687907853269984665640564039457584007913129639935 x353) x353)))
(define-fun x439 ((x353 Int)) Bool (and (= (x715 0 x353) 0) (= (x715 x353 0) 0)))
(define-fun x274 ((x353 Int)) Bool (= (x715 x353 x353) x353))
(define-fun x2495 ((x353 Int)) Bool (and (x1334 x353) (x439 x353) (x274 x353)))
(define-fun x2442 ((x353 Int) (x788 Int)) Bool (= (x715 x788 x353) (x715 x353 x788)))
(define-fun x1051 ((x353 Int) (x788 Int)) Bool (and (=> (>= x788 0) (>= x788 (x715 x353 x788))) (=> (>= x353 0) (>= x353 (x715 x353 x788))) (>= (x715 x353 x788) 0)))
(define-fun x1238 ((x353 Int) (x788 Int)) Bool (and (x2442 x353 x788) (x1051 x353 x788)))
(define-fun x2299 ((x353 Int)) Bool (= (x2202 x353 26959946667150639794667015087019630673637144422540572481103610249216) (x715 x353 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1620 ((x353 Int)) Bool (and (x1238 x353 26959946667150639794667015087019630673637144422540572481103610249215) (x2299 x353)))
(define-fun x926 ((x353 Int)) Bool (= (x1184 x353) (+ (x2202 x353 32) (x715 x353 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x344 ((x353 Int)) Bool (and (x1238 x353 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x926 x353)))
(define-fun x1522 ((x353 Int) (x788 Int)) Bool (=> (and (> x353 0) (< 0 x788)) (and (<= (x2309 x353 x788) x353) (<= 0 (x2309 x353 x788)))))
(define-fun x2090 ((x353 Int) (x788 Int)) Bool (=> (and (and (< x353 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x353)) (and (>= x788 1) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x788))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x353 x788)) (>= (x2309 x353 x788) 0))))
(define-fun x2030 ((x353 Int) (x788 Int)) Bool (=> (and (< 1 x788) (> x353 x788)) (> x353 (x2309 x353 x788))))
(define-fun x131 ((x353 Int) (x788 Int)) Bool (=> (and (< 0 x788) (< 0 x353)) (= (= (x2309 x353 x788) 0) (< x353 x788))))
(define-fun x2174 ((x353 Int)) Bool (= 0 (x2309 0 x353)))
(define-fun x2 ((x353 Int)) Bool (= x353 (x2309 x353 1)))
(define-fun x1094 ((x353 Int)) Bool (=> (not (= 0 x353)) (= (x2309 x353 x353) 1)))
(define-fun x182 ((x353 Int)) Bool (and (x2 x353) (x2174 x353) (x1094 x353)))
(define-fun x1688 ((x353 Int)) Bool (= (x715 x353 1) (x2202 x353 2)))
(define-fun x615 ((x353 Int)) Bool (and (x1688 x353) (x1238 x353 1)))
(define-fun x2058 ((x353 Int)) Bool (= (x2202 x353 128) (x715 x353 127)))
(define-fun x1616 ((x353 Int)) Bool (and (x2058 x353) (x1238 x353 127)))
(define-fun x2366 ((x353 Int)) Bool (= (+ (x2202 x353 256) (x715 x353 115792089237316195423570985008687907853269984665640564039457584007913129639680)) (x1184 x353)))
(define-fun x26 ((x353 Int)) Bool (and (x1238 x353 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x2366 x353)))
(define-fun x1111 ((x353 Int)) Bool (and (= (x2139 115792089237316195423570985008687907853269984665640564039457584007913129639935 x353) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2139 x353 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x683 ((x353 Int)) Bool (and (= (x2139 x353 0) x353) (= x353 (x2139 0 x353))))
(define-fun x899 ((x353 Int)) Bool (= x353 (x2139 x353 x353)))
(define-fun x2246 ((x353 Int)) Bool (and (x1111 x353) (x899 x353) (x683 x353)))
(define-fun x3 ((x353 Int) (x788 Int)) Bool (= (x2139 x353 x788) (x2139 x788 x353)))
(define-fun x1385 ((x353 Int) (x788 Int)) Bool (and (=> (<= 0 x788) (>= (x2139 x353 x788) x788)) (<= (x2139 x353 x788) (+ x353 x788)) (=> (>= x353 0) (<= x353 (x2139 x353 x788)))))
(define-fun x717 ((x353 Int) (x788 Int)) Bool (and (x3 x353 x788) (x1385 x353 x788)))
(define-fun x1536 ((x1463 Int)) Int (ite (> x1679 x1463) (x1587 x1463) 0))
(define-fun x1478 ((x1463 Int)) Int (ite (> x170 x1463) (x1445 x1463) 0))
(define-fun x257 ((x1463 Int)) Int (ite (> x1382 x1463) (x1413 x1463) 0))
(define-fun x1408 ((x1463 Int)) Int (ite (< x1463 x2267) (x1350 x1463) 0))
(define-fun x2419 ((x1463 Int)) Int (ite (= x772 x1463) x2456 (x910 x1463)))
(define-fun x1048 ((x1463 Int)) Int (ite (= x2149 x1463) x772 (x1863 x1463)))
(define-fun x2128 ((x1463 Int)) Int (ite x542 (x1863 x1463) (x1048 x1463)))
(define-fun x1488 ((x1463 Int)) Int (ite x542 (x910 x1463) (x2419 x1463)))
(define-fun x1416 ((x1463 Int)) Int (ite (= x2452 x1463) x2294 (x1488 x1463)))
(define-fun x323 ((x1463 Int)) Int (ite (= x554 x1463) x2452 (x2128 x1463)))
(define-fun x2136 ((x1463 Int)) Int (ite x521 (x1488 x1463) (x1416 x1463)))
(define-fun x154 ((x1463 Int)) Int (ite x521 (x2128 x1463) (x323 x1463)))
(define-fun x1936 ((x1463 Int)) Int (ite (= x393 x1463) x1456 (x2136 x1463)))
(define-fun x2057 ((x1463 Int)) Int (ite (= x1463 x1515) x393 (x154 x1463)))
(define-fun x2375 ((x1463 Int)) Int (ite x1010 (x154 x1463) (x2057 x1463)))
(define-fun x2003 ((x1463 Int)) Int (ite x1010 (x2136 x1463) (x1936 x1463)))
(define-fun x1521 ((x1463 Int)) Int (ite (= x456 x1463) x44 (x2003 x1463)))
(define-fun x532 ((x1463 Int)) Int (ite (= x1463 x69) x456 (x2375 x1463)))
(define-fun x1308 ((x1463 Int)) Int (ite x2517 (x2375 x1463) (x532 x1463)))
(define-fun x802 ((x1463 Int)) Int (ite x2517 (x2003 x1463) (x1521 x1463)))
(define-fun x2377 ((x1463 Int)) Int (ite (= x1463 x826) x1163 (x802 x1463)))
(define-fun x364 ((x1463 Int)) Int (ite (= x133 x1463) x826 (x1308 x1463)))
(define-fun x142 ((x1463 Int)) Int (ite x2271 (x802 x1463) (x2377 x1463)))
(define-fun x2477 ((x1463 Int)) Int (ite x2271 (x1308 x1463) (x364 x1463)))
(define-fun x1464 ((x1463 Int)) Int (ite (= x1171 x1463) x751 (x142 x1463)))
(define-fun x1683 ((x1463 Int)) Int (ite (= x1463 x1887) x1171 (x2477 x1463)))
(define-fun x92 ((x1463 Int)) Int (ite x1519 (x2477 x1463) (x1683 x1463)))
(define-fun x1881 ((x1463 Int)) Int (ite x1519 (x142 x1463) (x1464 x1463)))
(define-fun x1603 ((x1463 Int)) Int (ite (= x361 x1463) x221 (x1881 x1463)))
(define-fun x91 ((x1463 Int)) Int (ite (= x996 x1463) x361 (x92 x1463)))
(define-fun x304 ((x1463 Int)) Int (ite x1860 (x92 x1463) (x91 x1463)))
(define-fun x2422 ((x1463 Int)) Int (ite x1860 (x1881 x1463) (x1603 x1463)))
(define-fun x1020 ((x1463 Int)) Int (ite (= x1208 x1463) x1745 (x2422 x1463)))
(define-fun x1279 ((x1463 Int)) Int (ite (= x1926 x1463) x1208 (x304 x1463)))
(define-fun x869 ((x1463 Int)) Int (ite x1221 (x304 x1463) (x1279 x1463)))
(define-fun x2421 ((x1463 Int)) Int (ite x1221 (x2422 x1463) (x1020 x1463)))
(define-fun x2528 ((x1463 Int)) Int (ite (= x128 x1463) x1426 (x2421 x1463)))
(define-fun x1326 ((x1463 Int)) Int (ite (= x1463 x892) x1783 (x869 x1463)))
(define-fun x1504 ((x1463 Int)) Int (ite x547 (ite x1935 (x2421 x1463) (x2528 x1463)) (x2528 x1463)))
(define-fun x796 ((x1463 Int)) Int (x1504 x1463))
(define-fun x1995 ((x1463 Int)) Int (ite x343 (x796 x1463) (ite x1621 (x1504 x1463) (x796 x1463))))
(define-fun x370 ((x1463 Int)) Int (ite x403 (x1995 x1463) (x1504 x1463)))
(define-fun x914 ((x1463 Int)) Int (x1504 x1463))
(define-fun x37 ((x1463 Int)) Int (ite (= x1463 x1134) x2072 (x1504 x1463)))
(define-fun x1624 ((x1463 Int)) Int (ite x288 (x1504 x1463) (x37 x1463)))
(define-fun x539 ((x1463 Int)) Int (ite x2210 (x914 x1463) (x1624 x1463)))
(define-fun x1776 ((x1463 Int)) Int (ite x469 (x539 x1463) (ite x1168 (x1504 x1463) (x539 x1463))))
(define-fun x813 ((x1463 Int)) Int (ite x2078 (x370 x1463) (x1776 x1463)))
(define-fun x2099 ((x1463 Int)) Int (x1504 x1463))
(define-fun x781 ((x1463 Int)) Int (ite (= x828 x1463) x2250 (x1504 x1463)))
(define-fun x472 ((x1463 Int)) Int (ite (= x1463 x362) x1335 (x781 x1463)))
(define-fun x516 ((x1463 Int)) Int (ite x1182 (x1504 x1463) (x781 x1463)))
(define-fun x1945 ((x1463 Int)) Int (ite x1773 (x472 x1463) (x516 x1463)))
(define-fun x1732 ((x1463 Int)) Int (ite x453 (x1504 x1463) (x1945 x1463)))
(define-fun x1218 ((x1463 Int)) Int (ite x411 (x2099 x1463) (x1732 x1463)))
(define-fun x312 ((x1463 Int)) Int (ite x969 (x1218 x1463) (ite x1145 (x1504 x1463) (x1218 x1463))))
(define-fun x2183 ((x1463 Int)) Int (ite x71 (x813 x1463) (x312 x1463)))
(define-fun x2472 ((x1463 Int)) Int (x1504 x1463))
(define-fun x763 ((x1463 Int)) Int (ite (= x1380 x1463) x1753 (x1504 x1463)))
(define-fun x1148 ((x1463 Int)) Int (ite (= x760 x1463) x2342 (x763 x1463)))
(define-fun x1692 ((x1463 Int)) Int (ite (= x1045 x1463) x1722 (x1148 x1463)))
(define-fun x1095 ((x1463 Int)) Int (ite x2168 (x1692 x1463) (x1504 x1463)))
(define-fun x1946 ((x1463 Int)) Int (ite (= x1196 x1463) x1680 (x1095 x1463)))
(define-fun x97 ((x1463 Int)) Int (ite x269 (x1504 x1463) (x1946 x1463)))
(define-fun x1797 ((x1463 Int)) Int (ite x76 (x2472 x1463) (ite x2337 (x97 x1463) (x1504 x1463))))
(define-fun x2466 ((x1463 Int)) Int (ite x634 (x1797 x1463) (ite x1367 (x1504 x1463) (x1797 x1463))))
(define-fun x1884 ((x1463 Int)) Int (ite x2208 (x2183 x1463) (x2466 x1463)))
(define-fun x1278 ((x1463 Int)) Int (ite x392 (x1504 x1463) (ite x1682 (x1884 x1463) (x1504 x1463))))
(define-fun x138 ((x1463 Int)) Int (ite (= x1463 x1689) x1031 (x1278 x1463)))
(define-fun x285 ((x1463 Int)) Int (ite x1918 (x1278 x1463) (x138 x1463)))
(define-fun x1898 ((x1463 Int)) Int (ite x547 (ite x1935 (x869 x1463) (x1326 x1463)) (x1326 x1463)))
(define-fun x2124 ((x1463 Int)) Int (x1898 x1463))
(define-fun x2463 ((x1463 Int)) Int (ite x343 (x2124 x1463) (ite x1621 (x1898 x1463) (x2124 x1463))))
(define-fun x1096 ((x1463 Int)) Int (ite x403 (x2463 x1463) (x1898 x1463)))
(define-fun x1528 ((x1463 Int)) Int (x1898 x1463))
(define-fun x1835 ((x1463 Int)) Int (ite (= x1634 x1463) x1134 (x1898 x1463)))
(define-fun x313 ((x1463 Int)) Int (ite x288 (x1898 x1463) (x1835 x1463)))
(define-fun x2006 ((x1463 Int)) Int (ite x2210 (x1528 x1463) (x313 x1463)))
(define-fun x1750 ((x1463 Int)) Int (ite x469 (x2006 x1463) (ite x1168 (x1898 x1463) (x2006 x1463))))
(define-fun x1947 ((x1463 Int)) Int (ite x2078 (x1096 x1463) (x1750 x1463)))
(define-fun x1923 ((x1463 Int)) Int (x1898 x1463))
(define-fun x2384 ((x1463 Int)) Int (ite (= x1463 x1634) x2300 (x1898 x1463)))
(define-fun x798 ((x1463 Int)) Int (ite (= x1463 x655) x2448 (x2384 x1463)))
(define-fun x1183 ((x1463 Int)) Int (ite x1182 (x1898 x1463) (x2384 x1463)))
(define-fun x871 ((x1463 Int)) Int (ite x1773 (x798 x1463) (x1183 x1463)))
(define-fun x778 ((x1463 Int)) Int (ite x453 (x1898 x1463) (x871 x1463)))
(define-fun x1055 ((x1463 Int)) Int (ite x411 (x1923 x1463) (x778 x1463)))
(define-fun x2362 ((x1463 Int)) Int (ite x969 (x1055 x1463) (ite x1145 (x1898 x1463) (x1055 x1463))))
(define-fun x2238 ((x1463 Int)) Int (ite x71 (x1947 x1463) (x2362 x1463)))
(define-fun x644 ((x1463 Int)) Int (x1898 x1463))
(define-fun x1949 ((x1463 Int)) Int (ite (= x1634 x1463) x596 (x1898 x1463)))
(define-fun x1368 ((x1463 Int)) Int (ite (= x1463 x2360) x760 (x1949 x1463)))
(define-fun x1222 ((x1463 Int)) Int (ite (= x277 x1463) x922 (x1368 x1463)))
(define-fun x320 ((x1463 Int)) Int (ite x2168 (x1222 x1463) (x1898 x1463)))
(define-fun x2151 ((x1463 Int)) Int (ite (= x243 x1463) x1196 (x320 x1463)))
(define-fun x2398 ((x1463 Int)) Int (ite x269 (x1898 x1463) (x2151 x1463)))
(define-fun x492 ((x1463 Int)) Int (ite x76 (x644 x1463) (ite x2337 (x2398 x1463) (x1898 x1463))))
(define-fun x626 ((x1463 Int)) Int (ite x634 (x492 x1463) (ite x1367 (x1898 x1463) (x492 x1463))))
(define-fun x2104 ((x1463 Int)) Int (ite x2208 (x2238 x1463) (x626 x1463)))
(define-fun x1229 ((x1463 Int)) Int (ite x392 (x1898 x1463) (ite x1682 (x2104 x1463) (x1898 x1463))))
(define-fun x923 ((x1463 Int)) Int (ite (= x430 x1463) x1689 (x1229 x1463)))
(define-fun x903 ((x1463 Int)) Int (ite x1918 (x1229 x1463) (x923 x1463)))
(define-fun x2438 ((x1463 x281)) Int (x2397 x1463))
(define-fun x2027 ((x1463 x281)) Int (ite x343 (x2438 x1463) (ite x1621 (x2397 x1463) (x2438 x1463))))
(define-fun x1242 ((x1463 x281)) Int (ite x403 (x2027 x1463) (x2397 x1463)))
(define-fun x690 ((x1463 x281)) Int (ite (= x223 x1463) x402 (x2397 x1463)))
(define-fun x936 ((x1463 x281)) Int (ite x288 (x2397 x1463) (x690 x1463)))
(define-fun x1164 ((x1463 x281)) Int (ite x2210 (x2397 x1463) (x936 x1463)))
(define-fun x2125 ((x1463 x281)) Int (ite x469 (x1164 x1463) (ite x1168 (x2397 x1463) (x1164 x1463))))
(define-fun x648 ((x1463 x281)) Int (ite x2078 (x1242 x1463) (x2125 x1463)))
(define-fun x87 ((x1463 x281)) Int (ite (= x1771 x1463) x681 (x2397 x1463)))
(define-fun x678 ((x1463 x281)) Int (ite x1773 (x87 x1463) (x2397 x1463)))
(define-fun x132 ((x1463 x281)) Int (ite x453 (x2397 x1463) (x678 x1463)))
(define-fun x1019 ((x1463 x281)) Int (ite x411 (x2397 x1463) (x132 x1463)))
(define-fun x206 ((x1463 x281)) Int (ite x969 (x1019 x1463) (ite x1145 (x2397 x1463) (x1019 x1463))))
(define-fun x1795 ((x1463 x281)) Int (ite x71 (x648 x1463) (x206 x1463)))
(define-fun x55 ((x1463 x281)) Int (x2397 x1463))
(define-fun x1105 ((x1463 x281)) Int (x2397 x1463))
(define-fun x980 ((x1463 x281)) Int (ite (= x1463 x1876) x1834 (x2397 x1463)))
(define-fun x205 ((x1463 x281)) Int (ite x2168 (x980 x1463) (x2397 x1463)))
(define-fun x1502 ((x1463 x281)) Int (ite (= x117 x1463) 0 (x205 x1463)))
(define-fun x143 ((x1463 x281)) Int (ite x269 (x1105 x1463) (x1502 x1463)))
(define-fun x1319 ((x1463 x281)) Int (ite x76 (x55 x1463) (ite x2337 (x143 x1463) (x2397 x1463))))
(define-fun x1001 ((x1463 x281)) Int (ite x634 (x1319 x1463) (ite x1367 (x2397 x1463) (x1319 x1463))))
(define-fun x1496 ((x1463 x281)) Int (ite x2208 (x1795 x1463) (x1001 x1463)))
(define-fun x1351 ((x1463 x281)) Int (ite x392 (x2397 x1463) (ite x1682 (x1496 x1463) (x2397 x1463))))
(define-fun x1293 ((x1463 Int)) Int (ite (= x686 x1463) x1158 (x285 x1463)))
(define-fun x2392 ((x1463 Int)) Int (ite (= x1463 x2307) x686 (x903 x1463)))
(define-fun x100 ((x1463 Int)) Int (x2379 x1463))
(define-fun x379 ((x1463 Int)) Int (ite x343 (x100 x1463) (ite x1621 (x2379 x1463) (x100 x1463))))
(define-fun x1997 ((x1463 Int)) Int (ite x403 (x379 x1463) (x2379 x1463)))
(define-fun x2302 ((x1463 Int)) Int (x2379 x1463))
(define-fun x1691 ((x1463 Int)) Int (x2379 x1463))
(define-fun x1872 ((x1463 Int)) Int (ite x2210 (x2302 x1463) (x1691 x1463)))
(define-fun x107 ((x1463 Int)) Int (ite x469 (x1872 x1463) (ite x1168 (x2379 x1463) (x1872 x1463))))
(define-fun x262 ((x1463 Int)) Int (ite x2078 (x1997 x1463) (x107 x1463)))
(define-fun x99 ((x1463 Int)) Int (x2379 x1463))
(define-fun x1597 ((x1463 Int)) Int (x2379 x1463))
(define-fun x414 ((x1463 Int)) Int (ite x411 (x99 x1463) (x1597 x1463)))
(define-fun x2145 ((x1463 Int)) Int (ite x969 (x414 x1463) (ite x1145 (x2379 x1463) (x414 x1463))))
(define-fun x1743 ((x1463 Int)) Int (ite x71 (x262 x1463) (x2145 x1463)))
(define-fun x116 ((x1463 Int)) Int (x2379 x1463))
(define-fun x10 ((x1463 Int)) Int (x2379 x1463))
(define-fun x1312 ((x1463 Int)) Int (ite x76 (x116 x1463) (ite x2337 (x10 x1463) (x2379 x1463))))
(define-fun x376 ((x1463 Int)) Int (ite x634 (x1312 x1463) (ite x1367 (x2379 x1463) (x1312 x1463))))
(define-fun x2315 ((x1463 Int)) Int (ite x2208 (x1743 x1463) (x376 x1463)))
(define-fun x292 ((x1463 Int)) Int (ite x392 (x2379 x1463) (ite x1682 (x2315 x1463) (x2379 x1463))))
(define-fun x260 ((x1463 Int)) Int (ite x947 (x285 x1463) (x1293 x1463)))
(define-fun x566 ((x1463 Int)) Int (ite x947 (x903 x1463) (x2392 x1463)))
(define-fun x546 ((x1463 Int)) Int (ite (= x1463 x1256) x2417 (x260 x1463)))
(define-fun x775 ((x1463 Int)) Int (ite (= x1463 x557) x1256 (x566 x1463)))
(define-fun x1090 ((x1463 Int)) Int (ite x1714 (x566 x1463) (x775 x1463)))
(define-fun x152 ((x1463 Int)) Int (ite x1714 (x260 x1463) (x546 x1463)))
(define-fun x418 ((x1463 Int)) Int (ite (= x1463 128) 4 (x776 x1463)))
(define-fun x2513 ((x1463 Int)) Int (ite (= x1463 160) x2233 (x1844 x1463)))
(define-fun x1138 ((x1463 Int)) Int (ite (= x1463 164) x1360 (x925 x1463)))
(define-fun x710 ((x1463 Int)) Int (ite (= 196 x1463) x287 (x1138 x1463)))
(define-fun x1984 ((x1463 Int)) Int (ite (= 228 x1463) x1400 (x710 x1463)))
(define-fun x2439 ((x1463 Int)) Int (ite (= 128 x1463) 4 (x2046 x1463)))
(define-fun x560 ((x1463 Int)) Int (ite (= 160 x1463) x1197 (x825 x1463)))
(define-fun x1022 ((x1463 Int)) Int (ite (= 164 x1463) x736 (x925 x1463)))
(define-fun x864 ((x1463 Int)) Int (ite (= 196 x1463) x1468 (x1022 x1463)))
(define-fun x420 ((x1463 Int)) Int (ite (= 228 x1463) x2376 (x864 x1463)))
(define-fun x836 ((x1463 Int)) Int (ite (= x1463 128) 4 (x258 x1463)))
(define-fun x1191 ((x1463 Int)) Int (ite (= 160 x1463) x1566 (x2350 x1463)))
(define-fun x1585 ((x1463 Int)) Int (ite (= x1463 164) x597 (x925 x1463)))
(define-fun x638 ((x1463 Int)) Int (ite (= 196 x1463) x136 (x1585 x1463)))
(define-fun x1467 ((x1463 Int)) Int (ite (= x1463 228) x497 (x638 x1463)))
(define-fun x1249 ((x1463 Int)) Int (ite (= x1463 164) x1498 (x1559 x1463)))
(define-fun x1036 ((x1463 Int)) Int (ite (= 196 x1463) 64 (x1249 x1463)))
(define-fun x139 ((x1463 Int)) Int (ite (= 228 x1463) x2177 (x1036 x1463)))
(define-fun x404 ((x1463 Int)) Int (ite (= 128 x1463) x1540 (x276 x1463)))
(define-fun x27 ((x1463 Int)) Int (ite (= 160 x1463) x694 (x139 x1463)))
(define-fun x270 ((x1463 Int)) Int (ite (= x2258 x1463) x642 (x925 x1463)))
(define-fun x168 ((x1463 Int)) Int (ite (= x528 x1463) x990 (x270 x1463)))
(define-fun x1866 ((x1463 Int)) Int (ite (= x1711 x1463) x2316 (x168 x1463)))
(define-fun x1234 ((x1463 x281)) Int (x654 x1463))
(define-fun x1625 ((x1463 x281)) Int (ite x343 (x1234 x1463) (ite x1621 (x654 x1463) (x1234 x1463))))
(define-fun x1735 ((x1463 x281)) Int (ite x403 (x1625 x1463) (x654 x1463)))
(define-fun x505 ((x1463 x281)) Int (x654 x1463))
(define-fun x1391 ((x1463 x281)) Int (ite x2210 (x654 x1463) (x505 x1463)))
(define-fun x2494 ((x1463 x281)) Int (ite x469 (x1391 x1463) (ite x1168 (x654 x1463) (x1391 x1463))))
(define-fun x1 ((x1463 x281)) Int (ite x2078 (x1735 x1463) (x2494 x1463)))
(define-fun x523 ((x1463 x281)) Int (x654 x1463))
(define-fun x1907 ((x1463 x281)) Int (ite x411 (x654 x1463) (x523 x1463)))
(define-fun x605 ((x1463 x281)) Int (ite x969 (x1907 x1463) (ite x1145 (x654 x1463) (x1907 x1463))))
(define-fun x2069 ((x1463 x281)) Int (ite x71 (x1 x1463) (x605 x1463)))
(define-fun x425 ((x1463 x281)) Int (x654 x1463))
(define-fun x72 ((x1463 x281)) Int (x654 x1463))
(define-fun x489 ((x1463 x281)) Int (ite x269 (x72 x1463) (x654 x1463)))
(define-fun x1902 ((x1463 x281)) Int (ite x76 (x425 x1463) (ite x2337 (x489 x1463) (x654 x1463))))
(define-fun x1747 ((x1463 x281)) Int (ite x634 (x1902 x1463) (ite x1367 (x654 x1463) (x1902 x1463))))
(define-fun x195 ((x1463 x281)) Int (ite x1682 (ite x2208 (x2069 x1463) (x1747 x1463)) (x654 x1463)))
(define-fun x1538 ((x1463 x281)) Int (ite (= (x1622 x1542) x1463) x993 (x2131 x1463)))
(define-fun x731 ((x1463 x281)) Int (ite (= x1463 (x1622 x81)) x669 (x1538 x1463)))
(define-fun x2143 ((x1463 Int)) Int (ite (= x1370 x1463) x564 (x1866 x1463)))
(define-fun x506 ((x1463 Int)) Int (ite x656 (x1866 x1463) (ite x333 (x168 x1463) (ite x1766 (x270 x1463) (ite x2205 (x925 x1463) (x2143 x1463))))))
(define-fun x1627 ((x1463 Int)) Int (ite (= x2310 x1463) 0 (x506 x1463)))
(define-fun x601 ((x1463 Int)) Int (ite (= 260 x1463) x540 (x1984 x1463)))
(define-fun x2148 ((x1463 Int)) Int (ite x1186 (x1984 x1463) (ite x348 (x710 x1463) (ite x1527 (x1138 x1463) (ite x2281 (x925 x1463) (x601 x1463))))))
(define-fun x238 ((x1463 Int)) Int (ite (= x1463 x141) 0 (x2148 x1463)))
(define-fun x1139 ((x1463 Int)) Int (ite (= 260 x1463) x1235 (x420 x1463)))
(define-fun x1665 ((x1463 Int)) Int (ite x2486 (x420 x1463) (ite x265 (x864 x1463) (ite x1868 (x1022 x1463) (ite x1434 (x925 x1463) (x1139 x1463))))))
(define-fun x529 ((x1463 Int)) Int (ite (= x1463 x93) 0 (x1665 x1463)))
(define-fun x1785 ((x1463 Int)) Int (ite (= 260 x1463) x75 (x1467 x1463)))
(define-fun x1266 ((x1463 Int)) Int (ite x1686 (x1467 x1463) (ite x1225 (x638 x1463) (ite x280 (x1585 x1463) (ite x382 (x925 x1463) (x1785 x1463))))))
(define-fun x1607 ((x1463 Int)) Int (ite (= x1463 x1606) 0 (x1266 x1463)))
(define-fun x2012 ((x1463 Int)) Int (ite x35 (x506 x1463) (x1627 x1463)))
(define-fun x1698 ((x1463 x281)) Int (ite (= (x1622 x1542) x1463) x1822 (x2131 x1463)))
(define-fun x1526 ((x1463 x281)) Int (ite (= (x1622 x1542) x1463) x2158 (x1698 x1463)))
(define-fun x2359 ((x1463 Int)) Int (ite (and (> (+ (x1345 (- x212 100)) 100) x1463) (<= 100 x1463)) (x2012 (+ (- x1463 100) (x1199 (+ x574 100)))) (x1536 x1463)))
(define-fun x2388 ((x1463 Int)) Int (ite x2499 (x2148 x1463) (x238 x1463)))
(define-fun x663 ((x1463 x281)) Int (ite (= x1463 (x1622 x1542)) x1288 (x2131 x1463)))
(define-fun x1659 ((x1463 x281)) Int (ite (= x1463 (x1622 x1542)) x1267 (x663 x1463)))
(define-fun x28 ((x1463 Int)) Int (ite (= 128 x1463) 33277650900348105781121326340019631498405652329376380866381358124409588547584 (x2191 x1463)))
(define-fun x466 ((x1463 Int)) Int (ite (= x1463 132) x1282 (x28 x1463)))
(define-fun x1636 ((x1463 Int)) Int (ite (= x1463 164) x1498 (x466 x1463)))
(define-fun x805 ((x1463 Int)) Int (ite (= 196 x1463) 96 (x1636 x1463)))
(define-fun x602 ((x1463 Int)) Int (ite (= 228 x1463) x302 (x805 x1463)))
(define-fun x1418 ((x1463 Int)) Int (ite x2129 (x1665 x1463) (x529 x1463)))
(define-fun x583 ((x1463 x281)) Int (ite (= (x1622 x1542) x1463) x1942 (x2131 x1463)))
(define-fun x785 ((x1463 x281)) Int (ite (= x1463 (x1622 x1542)) x1928 (x583 x1463)))
(define-fun x859 ((x1463 Int)) Int (ite (= x1463 128) 78829575338057407266098799593532030895783219923606930547737006156155256307712 (x29 x1463)))
(define-fun x1549 ((x1463 Int)) Int (ite (= 132 x1463) x1282 (x859 x1463)))
(define-fun x555 ((x1463 Int)) Int (ite (= x1463 164) x2031 (x1549 x1463)))
(define-fun x879 ((x1463 Int)) Int (ite (= 196 x1463) 96 (x555 x1463)))
(define-fun x1198 ((x1463 Int)) Int (ite (= x1463 228) x1852 (x879 x1463)))
(define-fun x455 ((x1463 Int)) Int (ite x2265 (x1266 x1463) (x1607 x1463)))
(define-fun x1619 ((x1463 x281)) Int (ite (= x1463 (x1622 x1542)) x1593 (x2131 x1463)))
(define-fun x1532 ((x1463 x281)) Int (ite (= x1463 (x1622 x1542)) x378 (x1619 x1463)))
(define-fun x1969 ((x1463 Int)) Int (ite (= 128 x1463) 656247078515407326148355443760548300161286948278503429861414951787075469312 (x123 x1463)))
(define-fun x721 ((x1463 Int)) Int (ite (= 132 x1463) x2031 (x1969 x1463)))
(define-fun x881 ((x1463 Int)) Int (ite (= x1463 164) x1498 (x721 x1463)))
(define-fun x713 ((x1463 Int)) Int (ite (= x1463 196) 96 (x881 x1463)))
(define-fun x720 ((x1463 Int)) Int (ite (= 228 x1463) x33 (x713 x1463)))
(define-fun x74 ((x1463 x281)) Int (x1659 x1463))
(define-fun x657 ((x1463 x281)) Int (ite (= (x1622 x1542) x1463) x1275 (x74 x1463)))
(define-fun x1200 ((x1463 Int)) Int (ite (= 260 x1463) x1140 (x602 x1463)))
(define-fun x1475 ((x1463 Int)) Int (ite x1276 (x602 x1463) (x1200 x1463)))
(define-fun x282 ((x1463 Int)) Int (ite (= x1463 x841) 0 (x1475 x1463)))
(define-fun x1101 ((x1463 Int)) Int (ite x110 (x1475 x1463) (x282 x1463)))
(define-fun x309 ((x1463 Int)) Int (ite (and (<= 132 x1463) (> (+ 132 (x1345 (- x2163 132))) x1463)) (x1101 (+ 260 (- x1463 132))) (x1478 x1463)))
(define-fun x714 ((x1463 Int)) Int (ite (and (> (+ x840 128) x1463) (<= 128 x1463)) (x309 (+ 132 (- x1463 128))) (x2481 x1463)))
(define-fun x1501 ((x1463 Int)) Int (ite (= x1511 x1463) 0 (x714 x1463)))
(define-fun x575 ((x1463 Int)) Int (ite (= x1463 128) x1669 (x1501 x1463)))
(define-fun x1262 ((x1463 Int)) Int (ite (= 128 x1463) x2223 (x1501 x1463)))
(define-fun x1117 ((x1463 Int)) Int (ite x553 (x1501 x1463) (x1262 x1463)))
(define-fun x525 ((x1463 Int)) Int (ite x358 (x575 x1463) (x1117 x1463)))
(define-fun x1212 ((x1463 x281)) Int (x785 x1463))
(define-fun x1348 ((x1463 x281)) Int (ite (= x1463 (x1622 x1542)) x958 (x1212 x1463)))
(define-fun x2147 ((x1463 Int)) Int (ite (= x1463 260) x1489 (x1198 x1463)))
(define-fun x1799 ((x1463 Int)) Int (ite x1953 (x1198 x1463) (x2147 x1463)))
(define-fun x839 ((x1463 Int)) Int (ite (= x2213 x1463) 0 (x1799 x1463)))
(define-fun x2402 ((x1463 Int)) Int (ite x670 (x1799 x1463) (x839 x1463)))
(define-fun x1123 ((x1463 Int)) Int (ite (and (> (+ (x1345 (- x687 132)) 132) x1463) (<= 132 x1463)) (x2402 (+ 260 (- x1463 132))) (x257 x1463)))
(define-fun x1763 ((x1463 Int)) Int (ite (and (> (+ 128 x1908) x1463) (>= x1463 128)) (x1123 (+ (- x1463 128) 132)) (x1459 x1463)))
(define-fun x460 ((x1463 Int)) Int (ite (= x2195 x1463) 0 (x1763 x1463)))
(define-fun x351 ((x1463 Int)) Int (ite (= x1463 128) x1361 (x460 x1463)))
(define-fun x1133 ((x1463 Int)) Int (ite (= 128 x1463) x1118 (x460 x1463)))
(define-fun x2500 ((x1463 Int)) Int (ite x1871 (x460 x1463) (x1133 x1463)))
(define-fun x875 ((x1463 Int)) Int (ite x1449 (x351 x1463) (x2500 x1463)))
(define-fun x112 ((x1463 x281)) Int (x1532 x1463))
(define-fun x1317 ((x1463 x281)) Int (ite (= (x1622 x1542) x1463) x891 (x112 x1463)))
(define-fun x907 ((x1463 Int)) Int (ite (= x1463 260) x174 (x720 x1463)))
(define-fun x380 ((x1463 Int)) Int (ite x791 (x720 x1463) (x907 x1463)))
(define-fun x1780 ((x1463 Int)) Int (ite (= x1463 x485) 0 (x380 x1463)))
(define-fun x696 ((x1463 Int)) Int (ite x1708 (x380 x1463) (x1780 x1463)))
(define-fun x2220 ((x1463 Int)) Int (ite (and (< x1463 (+ 132 (x1345 (- x1579 132)))) (>= x1463 132)) (x696 (+ (- x1463 132) 260)) (x1408 x1463)))
(define-fun x732 ((x1463 Int)) Int (ite (and (> (+ 128 x982) x1463) (<= 128 x1463)) (x2220 (+ (- x1463 128) 132)) (x954 x1463)))
(define-fun x1110 ((x1463 Int)) Int (ite (= x1463 x2523) 0 (x732 x1463)))
(define-fun x40 ((x1463 Int)) Int (ite (= x1463 128) x319 (x1110 x1463)))
(define-fun x2487 ((x1463 Int)) Int (ite (= x1463 128) x985 (x1110 x1463)))
(define-fun x1371 ((x1463 Int)) Int (ite x1800 (x1110 x1463) (x2487 x1463)))
(define-fun x1869 ((x1463 Int)) Int (ite x39 (x40 x1463) (x1371 x1463)))
(define-fun x588 ((x1463 x281)) Int (x1526 x1463))
(define-fun x1287 ((x1463 x281)) Int (ite (= x1463 (x1622 x1542)) x2138 (x588 x1463)))
(define-fun x937 ((x1463 Int)) Int (ite (and (<= 128 x1463) (> (+ 128 x1043) x1463)) (x2359 (+ 100 (- x1463 128))) (x1913 x1463)))
(define-fun x712 ((x1463 Int)) Int (ite (= x1463 x1821) 0 (x937 x1463)))
(define-fun x1937 ((x1463 Int)) Int (ite (= x1463 128) x374 (x712 x1463)))
(define-fun x408 ((x1463 Int)) Int (ite (= 128 x1463) x549 (x712 x1463)))
(define-fun x2182 ((x1463 Int)) Int (ite x1330 (x712 x1463) (x408 x1463)))
(define-fun x2164 ((x1463 Int)) Int (ite x264 (x1937 x1463) (x2182 x1463)))
(define-fun x2530 ((x1463 x281)) Int (ite x176 (x254 x1463) (x731 x1463)))
(define-fun x1727 ((x1463 x281)) Int (ite (= (x1622 x81) x1463) x2380 (x2530 x1463)))
(define-fun x1280 ((x353 Int)) Bool (=> (and (not (= 100000000000000000 x353)) (not (= 2867924802 x353)) (not (= x353 3285302901)) (not (= 3733007566 x353)) (not (= 1871487246 x353)) (not (= x353 50455196340412629536459377552246818957342304218644716315923982585962625499136)) (not (= x353 3018310333)) (not (= 3948783980 x353)) (not (= 1234336674 x353)) (not (= x353 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= 2726977199 x353)) (not (= 839595567 x353)) (not (= 2112976665 x353)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x353)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x353)) (not (= x353 1461501637330902918203684832716283019655932542975)) (< 10000 x353) (not (= 288768741 x353)) (not (= x353 115792089237316195423570985008687907853269984665640564039457484007913129639935)) (not (= 1039635593 x353)) (not (= x353 1461501637330902918203684832716283019655932542976)) (not (= x353 1030951317)) (not (= 2279315017 x353)) (not (= 1680813743 x353)) (not (= 4294967295 x353)) (not (= 2923951457 x353)) (not (= 4294967296 x353)) (not (= x353 78829575338057407266098799593532030895783219923606930547737006156155256307712)) (not (= 3081457077 x353)) (not (= 656247078515407326148355443760548300161286948278503429861414951787075469312 x353)) (not (= x353 56965738197333823925951794324075424010313516842063129668313081903848242544640)) (not (= 106459005500898838667931598610041423549574964228674563513410788872267948359680 x353)) (not (= x353 100641684887429822015232653770480429695213136867978658013931169090238473568256)) (not (= x353 18446744073709551615)) (not (= 3050870311 x353)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639680 x353)) (not (= 3189536363 x353)) (not (= x353 24341557)) (not (= x353 33277650900348105781121326340019631498405652329376380866381358124409588547584))) (not ((_ is x1546) (x1622 x353)))))
(assert (x349 x1879))
(assert (x1602 x289))
(assert (x349 x1877))
(assert (x1602 x1340))
(assert (= (and x494 x424) x2459))
(assert (x2495 x1004))
(assert (= x1168 (and x2373 (not x1457))))
(assert (x1602 x259))
(assert (=> (>= 10000 (x2164 192)) (= (x1622 (x2164 192)) (x1546 (x2164 192)))))
(assert (x1602 x128))
(assert (= (and x2352 (not x586)) x1356))
(assert (x1602 x1894))
(assert (=> (<= (x460 128) 10000) (= (x1622 (x460 128)) (x1546 (x460 128)))))
(assert (= 0 (x1904 96)))
(assert (=> (<= (x2164 288) 10000) (= (x1546 (x2164 288)) (x1622 (x2164 288)))))
(assert (= (x1622 (x643 x782)) x782))
(assert (x1602 x1346))
(assert (= (and x952 x1480) x640))
(assert (= x2226 (or x1833 x2035)))
(assert (x1602 x44))
(assert (= (x643 (x1622 (x2164 224))) (x2164 224)))
(assert (x1602 x1742))
(assert (= (x643 (x1622 x1810)) x1810))
(assert (= x2441 (=> (and (= x1951 x853) (= x2344 x1271) (= x1352 x1499) (= x383 x259) (= x1483 x1751)) x2514)))
(assert (= x1495 (and x150 x2508)))
(assert (x1280 (x460 224)))
(assert (x1602 x2415))
(assert (= (+ (x643 x442) x2409) (x643 (x808 x442 x2409))))
(assert (= x2141 (and (not x1224) x1213)))
(assert (and (x1522 x1667 2) (x2090 x1667 2) (= (- x1667 (x715 1 x1667)) (* (x2309 x1667 2) 2)) (x131 x1667 2) (=> (and (> x1667 0) (> 2 0)) (and (> (* (x2309 x1667 2) 2) (- x1667 2)) (>= x1667 (* (x2309 x1667 2) 2)))) (x2030 x1667 2)))
(assert (= x791 (and (not x745) x2254)))
(assert (x1602 x275))
(assert (= (and (=> (and (and (= x2344 x810) (= x2140 x1951) (= x1499 x1634) (= x1483 x1134) (= 0 x259)) x1517) x2441) (=> (and (and (= x567 (x1199 (+ x1349 1))) (= (< x2451 x567) x1802) (= (x2309 x604 2) x1349)) (not x1517)) (and (=> (and (and (<= 0 x513) (<= x513 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (not (= x2074 x513)) x23)) (not x1802)) (and (=> (not x23) x1524) (=> (and x23 (= x89 x23)) x279))) (=> (and (and (= x1483 x1134) (= 0 x259) (= x1951 x2140) (= x810 x2344) (= x1634 x1499)) x1802) x2441)))) x927))
(assert (= (x643 (x1546 2923951457)) 2923951457))
(assert (x1602 x1235))
(assert (x1602 x597))
(assert (= x57 (or x1534 x1434 x2486 x265 x1868)))
(assert (x1602 x1264))
(assert (and (x303 x1410 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x1410 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x1410 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1410 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x1410 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x1410 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= (=> (and (= x1205 (not (< 128 x1944))) (= x1235 (x560 256))) (and (=> (= 128 x1518) x2066) x1205)) x2305))
(assert (= (and x1324 x15) x2260))
(assert (= x441 (=> (and (= x735 (not (< 32 x519))) (= x2223 (x951 x647))) (and x735 x161))))
(assert (= (and x2341 (not x1994)) x1194))
(assert (x1602 x573))
(assert (x349 x883))
(assert (x1602 x2098))
(assert (x1602 x631))
(assert (= (=> (and (= (x2245 (x1622 x1542)) x1340) (= x2049 128) (= x2296 (x1199 (+ 31 x33))) (= (x1345 (- x1151 128)) x1579) (= (= 0 x1340) x822) (= (x715 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2296) x1061) (= x1151 (x1199 (+ 260 x1061)))) (and (=> (and x822 (and (= x2132 x1634) (= x360 x2140))) x2187) (=> (and (not x822) (and (= x2048 x1498) (= (= x33 (x1408 100)) x2054) (= x1934 (x2245 (x1622 x1542))) (= x2303 (or (and (= (<= x1992 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1992 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1992))) x2054 (= x1579 x665) (> 839595567 x940) (> 2112976665 x940) (= x2031 x402) (not (> 4 x665)) (> x1934 0) (= x1992 (x1345 (- x665 4))) (= 24341557 x940) (= 656247078515407326148355443760548300161286948278503429861414951787075469312 x1630) (> 288768741 x940) (<= 132 x665))) (and (=> x2303 x1916) (=> (and (and (= x402 x2273) (= x726 (= x2031 x402))) (not x2303)) (and (=> (and x726 (and (= (and (< 131 x665) (= (<= x665 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) x1715) (= x1693 x2048))) (and (=> (not x1715) x1916) (=> (and x1715 (and (= (< 18446744073709551615 x982) x134) (= x982 (x2220 100)))) (and (=> (and (not x134) (and (= (< x665 x2209) x2292) (= 132 x1798) (= (x1199 (+ 132 x982)) x2209))) (and (=> (and (not x2292) (= true x767)) (and (=> (not x767) x1916) (=> (and x767 (and (= (x173 (x1622 x402) (x1546 2) 0) x2239) (= (x305 x2239) x1313) (= (= 0 x1313) x2529) (<= x1313 255) (>= x1313 0) (> 256 x1313))) (and (=> (and x2529 (= (= x402 0) x2166)) (and (=> x2166 x1916) (=> (and (and (= x2072 (ite x571 x1634 x415)) (= x415 (x1504 x1134)) (= 0 x1877) x2429 (= x873 (x1184 x2043)) (= x2429 (or x1986 (not x1298))) (>= x2114 0) (= x36 (x1199 (+ x1134 1))) (= (x2379 x2114) x1100) (= x1986 (or x2127 (not x921))) (= (x1504 x1134) x1642) (= x2127 (= x1134 x1100)) (= (not (= x1134 x2218)) x1874) (= x315 (>= x1642 x1634)) (= x921 (not (= x2114 0))) (= (x1184 x1877) x544) (= x1298 (and x571 x2140)) (= true x230) (= x571 (or x1874 x315)) (= (x1199 (+ x1634 x849)) x1580) (= x2114 (x2397 x223)) (= (x1898 x1642) x2218) (= x849 (ite x571 x873 x544)) (= (x808 x2228 x1134) x223) (<= x2114 1461501637330902918203684832716283019655932542975) (= x2228 (x2162 (x1546 1) 0)) (= 1 x2043)) (not x2166)) (and (=> (not x230) x1916) (=> (and (and (or (and x1414 (= x1254 x1414)) (and (not x1414) (and (= x1484 (= 0 x1693)) (= (ite x1484 x1484 (= 0 x36)) x1254)))) (= (> x2048 x36) x1414)) x230) x613))))) (=> (not x2529) x1916))))) (=> x2292 x1916))) (=> x134 x1916))))) (=> (not x726) x1916))))))) x188))
(assert (x1602 x1370))
(assert (x1602 x2105))
(assert (x1602 x607))
(assert (= x595 (and x1960 (not x140))))
(assert (x1602 x1355))
(assert (= (and (not x84) x1952) x300))
(assert (x349 32))
(assert (= (x1869 288) (x643 (x1622 (x1869 288)))))
(assert (= 0 (x2481 256)))
(assert (x182 x36))
(assert (x349 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (= (x1869 192) (x643 (x1622 (x1869 192)))))
(assert (= (and x371 x1787) x2473))
(assert (= (and (not x2435) x2042) x2318))
(assert (= (=> (and (= x1634 x2159) (= x2235 0) (= x810 x1635) (= x1690 x1134) (= x1786 x2140)) x1401) x1481))
(assert (x1602 x1650))
(assert (= 0 (x2350 192)))
(assert (= (and x2373 x1457) x2538))
(assert (x1602 x1357))
(assert (x1602 x476))
(assert (x1602 x1267))
(assert (x26 x78))
(assert (= (x643 (x808 x1405 x686)) (+ x686 (x643 x1405))))
(assert (x1602 x1981))
(assert (x1602 x630))
(assert (x1602 x1040))
(assert (x1602 x2250))
(assert (x1602 x1448))
(assert (= x1213 (or x2053 x2168)))
(assert (and (x1522 x509 32) (x2090 x509 32) (= (- x509 (x715 31 x509)) (* (x2309 x509 32) 32)) (x131 x509 32) (=> (and (> x509 0) (> 32 0)) (and (> (* (x2309 x509 32) 32) (- x509 32)) (>= x509 (* (x2309 x509 32) 32)))) (x2030 x509 32)))
(assert (x1602 x872))
(assert (=> (<= (x460 192) 10000) (= (x1622 (x460 192)) (x1546 (x460 192)))))
(assert (x1602 x1461))
(assert (= x594 (and x819 x1014)))
(assert (x1602 x2511))
(assert (x1602 x2093))
(assert (x1602 x2445))
(assert (= (and x1897 x1453) x358))
(assert (x1602 x1734))
(assert (= x137 (and x1560 (not x1414))))
(assert (= x2078 (or x403 x491)))
(assert (x1602 x2448))
(assert (= (and x1333 (not x1044)) x1694))
(assert (x2246 x2026))
(assert (x1602 x1272))
(assert (x1602 x2170))
(assert (= (and x868 (not x1557)) x2506))
(assert (x1602 x83))
(assert (x1602 x1824))
(assert (= (and x2260 x1875) x1193))
(assert (x1602 x1363))
(assert (x1602 x2082))
(assert (x1602 x680))
(assert (x1602 x430))
(assert (= (or x2312 x269) x2272))
(assert (x1602 x1339))
(assert (x349 x1599))
(assert (= (and x2055 (not x662)) x1935))
(assert (= (x1110 256) (x643 (x1622 (x1110 256)))))
(assert (x1602 x1482))
(assert (x1602 x2036))
(assert (= (and x1796 (not x902)) x1841))
(assert (x1602 x976))
(assert (= x2365 (or x724 x22)))
(assert (x1616 x1551))
(assert (= x1794 (x643 (x1622 x1794))))
(assert (= x1955 (x643 (x1622 x1955))))
(assert (x1602 x1444))
(assert (x1602 x694))
(assert (=> (>= 10000 x1813) (= (x1622 x1813) (x1546 x1813))))
(assert (= x1531 (and x2349 x2509)))
(assert (x1602 x528))
(assert (x1602 x1853))
(assert (= (and x140 x1960) x762))
(assert (x1602 x793))
(assert (x1602 x1100))
(assert (x2495 x1917))
(assert (and (x303 x2484 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2484 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2484 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2484 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2484 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2484 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= x463 (and x1146 x930)))
(assert (= (x1622 26959946667150639794667015087019630673637144422540572481103610249215) (x1546 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (=> (<= (x525 128) 10000) (= (x1622 (x525 128)) (x1546 (x525 128)))))
(assert (= x942 (=> (and (and (and (= true (<= x1679 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 35 x1679)) (= x1968 0) (<= 0 x2092) (= (x558 x848) x1968) (= x612 x2475) (< 0 x1016) (= (or x2401 x1572) x1471) (<= x1968 255) (not (> 3285302901 x1056)) (= 3285302901 x1056) (<= 0 x1962) (not (> 2112976665 x1056)) (not (> 3081457077 x1056)) (not (< x1679 4)) (= x147 (or (not x2533) x1471)) (= x2204 0) (<= x1962 1461501637330902918203684832716283019655932542975) (= x848 (x808 x1781 3)) (= x2204 x50) (>= 1461501637330902918203684832716283019655932542975 x2092) (= x213 0) (= (x2245 (x1622 x1542)) x1016) (= x2304 0) (= x662 (> x1134 0)) (= x2175 x730) (>= x1083 0) (> 256 x1968) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1837) (and (> 32 x1837) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1837))))) (< x1056 3733007566) (<= 0 x1968) x147 (= x777 x2105) (= x1083 x2262) (= (= x2175 0) x19) (= x2092 x777) (<= x1083 1461501637330902918203684832716283019655932542975) (= x1837 (x1345 (- x1679 4))) (= x1781 (x173 (x1622 x2475) (x1546 7) 0)) (= (and x19 x545) x1572) (= x2475 x2215)) (= x1752 x730)) (and (=> (and (and x812 (= x1409 (and x1311 x2140)) (= (= x2082 0) x1077) (= (x1184 x1177) x1803) (>= 1461501637330902918203684832716283019655932542975 x1813) (= (= x513 (ite x1843 0 1)) x1260) (= x2082 (x2379 x1813)) (>= x1813 0) (= (>= x2432 x892) x82) (>= 255 x248) (= (or (not x2283) x1077) x1948) (= x1426 (ite x1311 x892 x1494)) (<= 0 x513) (= (x173 (x1622 x1813) x2394 0) x1932) (= x155 (ite x1311 x1803 x1353)) (= x128 0) (= (x2397 x1220) x1813) (<= x513 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (or x1948 (not x1409)) x812) (= x1311 (or x82 x718)) (= x2283 (not (= x1813 0))) (= x1353 (x1184 x2154)) (= (x2162 (x1546 1) 0) x454) (= 0 x1783) (= (x2421 x235) x2432) (= x2518 0) (= x248 (x1296 x1932)) (> 1461501637330902918203684832716283019655932542976 x1813) (= x1843 (= 0 x248)) (<= 0 x248) (> 256 x248) (= (not (= 0 x967)) x718) (= (x173 (x1622 x2475) (x1546 9) 0) x2394) (< 0 x1134) (= 0 x235) (= x1972 (x1199 (+ x155 x892))) (= (x869 x2432) x967) (= x1494 (x2421 x2518)) (= x1177 1) (= x1220 x454) (= x2154 0)) x662) (and (=> (not x1260) x2268) (=> (and x1260 (and (= x1634 x1972) (= 1 x2000))) x824))) (=> (and (not x662) (= x892 x1729)) x1455)))))
(assert (= (=> (and (= x695 (x808 x1086 1)) (= x1490 (not (> x471 164)))) (and (=> (= x695 x2194) x483) x1490)) x1318))
(assert (x1602 x1468))
(assert (x1602 x577))
(assert (x349 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (>= 10000 (x525 160)) (= (x1546 (x525 160)) (x1622 (x525 160)))))
(assert (= (x643 (x1622 x81)) x81))
(assert (= (x925 (+ (x1199 (+ x574 100)) 96)) 0))
(assert (= (x890 128) 0))
(assert (= x1227 (or x327 x1330)))
(assert (= x1542 (x643 (x1622 x1542))))
(assert (= (and x2256 (not x268)) x901))
(assert (x1602 x1820))
(assert (x1602 x810))
(assert (= x2008 (and x1052 (not x23))))
(assert (= (and x570 (not x2498)) x1221))
(assert (x26 x1114))
(assert (= x73 (or x1268 x288)))
(assert (x1602 x495))
(assert (= (x1622 1039635593) (x1546 1039635593)))
(assert (= (=> (and (= x1829 0) (= x1612 x1634) (= x2140 x603) (= x1134 x2374) (= x810 x1737) (= x1970 x1668)) x815) x1428))
(assert (= (x643 (x1546 2112976665)) 2112976665))
(assert (= x1740 (and x894 x450)))
(assert (x1602 x619))
(assert (x1602 x1711))
(assert (= 656247078515407326148355443760548300161286948278503429861414951787075469312 (x643 (x1546 656247078515407326148355443760548300161286948278503429861414951787075469312))))
(assert (= x110 (and (not x178) x625)))
(assert (= x1028 (=> (and (= (not (< 128 x1169)) x1590) (= x75 (x1191 256))) (and (=> (= x1092 128) x70) x1590))))
(assert (x1602 x826))
(assert (x1602 x2284))
(assert (=> (<= x681 10000) (= (x1622 x681) (x1546 x681))))
(assert (= x450 (and (not x1875) x2260)))
(assert (= x1767 (and x2522 x1112)))
(assert (x2495 x1991))
(assert (x1602 x1271))
(assert (= x1885 (and (not x1736) x1657)))
(assert (= x32 (and x1162 x57)))
(assert (= (x643 (x1546 33277650900348105781121326340019631498405652329376380866381358124409588547584)) 33277650900348105781121326340019631498405652329376380866381358124409588547584))
(assert (= 0 (x2350 256)))
(assert (= x1682 (or x580 x2208)))
(assert (x1280 (x1869 256)))
(assert (x1602 x296))
(assert (x1602 x361))
(assert (= x200 x2065))
(assert (x1602 x2342))
(assert (= (x1913 192) 0))
(assert (x1602 x1398))
(assert (x1602 x1202))
(assert (x1602 x502))
(assert (= x1274 (and (not x13) x2237)))
(assert (x1602 x674))
(assert (x1602 x1038))
(assert (x1602 x1026))
(assert (= (=> (and (and (and (< 0 x679) (= 3050870311 x989) (= (x2245 (x1622 x1542)) x679) (not (= x989 3018310333)) (= (not (= x856 x2150)) x2401) (> 3081457077 x989) (not (< x989 2867924802)) (not (= x989 2923951457)) (= x2016 x361) (not (> 2112976665 x989)) (not (= x989 2867924802)) (not (> 2726977199 x989)) (= x2150 x1152) (= x2005 (< x361 x1134))) (or (and (and (= x617 (x2162 (x1546 1) 0)) (= x768 (x1184 x2455)) (= (x1881 x361) x829) (<= 0 x1259) (= x1718 (x2379 x1259)) (= x1059 (not (= x1454 x361))) (= x1926 x388) (= (>= x829 x996) x2483) (= x1259 (x2397 x1366)) (>= 1461501637330902918203684832716283019655932542975 x1259) (> x1134 x361) (= 0 x585) x1779 (= x1366 (x808 x617 x361)) (= 1 x2455) (< x1259 1461501637330902918203684832716283019655932542976) (= x2200 (x1184 x585)) (= x1779 (or (not x1433) x957)) (= (ite x1772 x996 x2196) x221) (= x1259 x495) (= (= x1718 x361) x2146) (= x2196 (x1881 x361)) (= x1772 (or x2483 x1059)) (= (ite x1772 x768 x2200) x1830) (= x957 (or x2146 (not x1873))) (= (x1199 (+ x996 x1830)) x388) (= (not (= 0 x1259)) x1873) (= (and x1772 x2140) x1433) (= (x92 x829) x1454)) x2005) (and (not x2005) (and (= 0 x495) (= x996 x1926))))) (= x860 x1152)) x701) x2335))
(assert (x1602 x235))
(assert (x349 x2484))
(assert (= (x1622 (x643 x1244)) x1244))
(assert (= (and x1120 x1241) x885))
(assert (x1602 x530))
(assert (x349 x1551))
(assert (x1602 x2106))
(assert (= x25 (and x1011 (not x369))))
(assert (x349 x2454))
(assert (x1616 x2540))
(assert (x1602 x435))
(assert (= (x643 (x1622 (x1110 320))) (x1110 320)))
(assert (x1602 x629))
(assert (x1602 x1382))
(assert (= (+ (x643 x237) 1) (x643 (x808 x237 1))))
(assert (= (and (not x230) x1644) x1941))
(assert (= (and x1966 x1850) x1284))
(assert (= (x643 (x1622 (x460 192))) (x460 192)))
(assert (x1280 x2255))
(assert (x1602 x2515))
(assert (= (x825 256) 0))
(assert (x182 x733))
(assert (x1602 x2319))
(assert (=> (<= (x1110 256) 10000) (= (x1622 (x1110 256)) (x1546 (x1110 256)))))
(assert (= (x643 (x808 x960 x1208)) (+ x1208 (x643 x960))))
(assert (x1602 x1005))
(assert (x1602 x703))
(assert (= (x1546 288768741) (x1622 288768741)))
(assert (x1602 x48))
(assert (= (and x11 (not x1159)) x377))
(assert (x1602 x1830))
(assert (=> (>= 10000 (x1869 192)) (= (x1622 (x1869 192)) (x1546 (x1869 192)))))
(assert (= (and x722 x184) x1578))
(assert (x1602 x860))
(assert (x1280 x1955))
(assert (x1602 x7))
(assert (x1602 x2130))
(assert (= (=> (and (= x699 (x1199 (+ x1150 128))) (= x1058 x699)) x1982) x1460))
(assert (=> (<= (x1501 192) 10000) (= (x1546 (x1501 192)) (x1622 (x1501 192)))))
(assert (x349 x551))
(assert (x1602 x2235))
(assert (x1602 x1564))
(assert (= x727 (and x1839 x726)))
(assert (= (x643 (x1622 (x460 128))) (x460 128)))
(assert (= 0 (x29 356)))
(assert (= (and x2061 x1126) x1703))
(assert (and (x1522 x1114 2) (x2090 x1114 2) (= (- x1114 (x715 1 x1114)) (* (x2309 x1114 2) 2)) (x131 x1114 2) (=> (and (> x1114 0) (> 2 0)) (and (> (* (x2309 x1114 2) 2) (- x1114 2)) (>= x1114 (* (x2309 x1114 2) 2)))) (x2030 x1114 2)))
(assert (x344 x816))
(assert (x1602 x2363))
(assert (and (x303 x1667 2) (x1404 x1667 2) (x2203 x1667 2) (=> (< 0 2) (= x1667 (+ (* 2 (x2309 x1667 2)) (x2202 x1667 2))))))
(assert (= (and x389 x1670) x1744))
(assert (= 0 (x954 256)))
(assert (x1602 x481))
(assert (= (and x1704 x1848) x1530))
(assert (= 0 (x1559 256)))
(assert (x1602 x769))
(assert (x1602 x780))
(assert (= x2100 (and x2020 x1900)))
(assert (x1602 x126))
(assert (x1602 x1256))
(assert (x1280 (x2164 192)))
(assert (x1602 x953))
(assert (= x578 (=> (and (= x1775 x1329) (and (and (and (> 3081457077 x1684) (not (= 2867924802 x1684)) (not (> 2867924802 x1684)) (= x1087 x1963) (not (< x1684 2112976665)) (= x2357 x456) (= 3050870311 x1684) (not (> 2726977199 x1684)) (= x1957 (< x579 x1963)) (not (= x1684 3018310333)) (not (= x1684 2923951457)) (< 0 x38) (= x2449 (< x456 x1134)) (= x38 (x2245 (x1622 x1542)))) (or (and (and (= x1762 x133) (= (not (= x1325 0)) x1741) (= (ite x1666 x1104 x118) x77) (= x1104 (x1184 x1007)) (= (x1184 x2468) x118) (= x832 (or x1725 (not x2243))) (= x1725 (or (not x1741) x2479)) (< x456 x1134) (= x405 (x2379 x1325)) (= x356 (x808 x2261 x456)) (= x1762 (x1199 (+ x77 x69))) (= (x2397 x356) x1325) x832 (= x928 (x2375 x846)) (= (<= x69 x846) x948) (> 1461501637330902918203684832716283019655932542976 x1325) (= x2468 0) (= (x2003 x456) x846) (= x2261 (x2162 (x1546 1) 0)) (= x1325 x2263) (= (ite x1666 x69 x1406) x44) (= x1862 (not (= x456 x928))) (= x1007 1) (= (or x948 x1862) x1666) (= x2243 (and x1666 x2140)) (<= 0 x1325) (= x1406 (x2003 x456)) (>= 1461501637330902918203684832716283019655932542975 x1325) (= x2479 (= x405 x456))) x2449) (and (not x2449) (and (= x133 x69) (= x2263 0))))) (and (= (or (not x668) x2330) x527) (not (= 3081457077 x992)) (not (> 3081457077 x992)) (< x992 3733007566) (= x1853 0) x527 (< x992 3285302901) (= x579 x2357) (= x976 (x2245 (x1622 x1542))) (= (not (= 0 x2222)) x2330) (< 0 x976) (= 3189536363 x992) (= x1134 x1087) (not (< x992 2112976665)) (= x1329 x2222)))) x510)))
(assert (= x2287 (and x1796 x902)))
(assert (x1280 x1794))
(assert (= (x925 (+ 64 (x1199 (+ x574 100)))) 0))
(assert (x1602 x2144))
(assert (x1602 x556))
(assert (x1602 x978))
(assert (x1602 x1652))
(assert (x1602 x1706))
(assert (= (and x1644 x230) x1560))
(assert (= (and x1160 (not x2529)) x2474))
(assert (x1602 x1043))
(assert (x1602 x1390))
(assert (x1602 x1135))
(assert (x1602 x2195))
(assert (x1602 x2204))
(assert (x1602 x843))
(assert (x1620 x2363))
(assert (x1602 x120))
(assert (x1602 x2386))
(assert (x1602 x1472))
(assert (x1602 x1901))
(assert (and (x303 x1911 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x1911 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x1911 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1911 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x1911 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x1911 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1602 x1928))
(assert (x1602 x1084))
(assert (x2246 x478))
(assert (= (or x2103 x1867 x61) x411))
(assert (x1602 x2218))
(assert (x1280 (x460 288)))
(assert (= x1286 (or x1918 x17)))
(assert (and (x303 x816 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x816 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x816 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x816 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x816 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x816 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1602 x1543))
(assert (= 0 (x1913 288)))
(assert (x1602 x413))
(assert (x1602 x93))
(assert (= x1372 (and (not x2242) x94)))
(assert (= x1175 (x1622 (x643 x1175))))
(assert (=> (>= 10000 (x1869 320)) (= (x1546 (x1869 320)) (x1622 (x1869 320)))))
(assert (x1602 x1313))
(assert (= (and x11 x1159) x2502))
(assert (x1602 x598))
(assert (x1602 x611))
(assert (x1602 x1541))
(assert (x1602 x8))
(assert (x1602 x290))
(assert (= (x764 x2319 224) (x1184 (* 26959946667150639794667015087019630673637144422540572481103610249216 x2319))))
(assert (x1602 x1400))
(assert (x1602 x809))
(assert (x1602 x2072))
(assert (= (x712 192) (x643 (x1622 (x712 192)))))
(assert (x1602 x1493))
(assert (= (x1559 160) 0))
(assert (x1602 x1004))
(assert (x1616 x1991))
(assert (x1602 x600))
(assert (x1602 x1302))
(assert (= x1480 (and x1194 x675)))
(assert (= x343 (and (not x653) x1423)))
(assert (= x1793 (and x2458 x1303)))
(assert (= (and x2005 x2378) x247))
(assert (= x1012 (or x901 x968)))
(assert (x1602 x1076))
(assert (x349 x2468))
(assert (x1602 x1058))
(assert (= x909 (=> (and (= x1951 x2140) (= x1483 x1134) (= x259 0) (= x1499 x1634) (= x2344 x810)) x2441)))
(assert (x182 2))
(assert (x1602 x551))
(assert (x1602 x751))
(assert (= x429 (and x614 x1254)))
(assert (x1602 x2308))
(assert (= x1938 (or x905 x2499)))
(assert (= (=> (and (or (and (= (x1199 (+ x33 260)) x485) x59) (not x59)) (= (< x33 x988) x59)) x188) x739))
(assert (and (x303 x1748 128) (x1404 x1748 128) (x2203 x1748 128) (=> (< 0 128) (= x1748 (+ (* 128 (x2309 x1748 128)) (x2202 x1748 128))))))
(assert (= x1568 (and x1044 x1333)))
(assert (x1602 x208))
(assert (x1602 x1746))
(assert (and (x303 x2445 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2445 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2445 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2445 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2445 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2445 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= 106459005500898838667931598610041423549574964228674563513410788872267948359680 (x643 (x1546 106459005500898838667931598610041423549574964228674563513410788872267948359680))))
(assert (x1280 (x2164 256)))
(assert (x1602 x2092))
(assert (x1602 x2468))
(assert (x1602 x1859))
(assert (= x204 (and (=> x902 x1428) (=> (and (not x902) (and (= x1289 (x2309 x1134 2)) (= (x1199 (+ x1289 1)) x244) (= x749 (< x1857 x244)))) (and (=> x749 x1428) (=> (and (not x749) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x513) (<= 0 x513) (= x2383 (not (= x513 x1304))))) (and (=> (and (= x2186 x2383) x2383) x417) (=> (not x2383) x2108))))))))
(assert (= (and x1550 x1327) x590))
(assert (x1602 x1806))
(assert (= x2541 x45))
(assert (= x1462 (=> (= x140 (= x623 0)) (and (=> (and (and (and (>= 255 x479) (= (x195 x2356) x479) (> 256 x479) (= (= x479 0) x225) (>= x479 0)) (or (and (not x225) (and (not (> x817 115792089237316195423570985008687907853269984665640564039457484007913129639935)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x817) (<= 0 x817) (= x1719 (x1199 (+ 100000000000000000 x817))))) x225)) (not x140)) x1687) (=> x140 x2512)))))
(assert (x1602 x1729))
(assert (= x359 (and x2502 (not x1438))))
(assert (= (x643 (x1622 x160)) x160))
(assert (x1602 x488))
(assert (x1602 x431))
(assert (= (x643 (x1622 (x460 320))) (x460 320)))
(assert (= (x123 452) 0))
(assert (= (x643 (x1622 (x712 288))) (x712 288)))
(assert (= (+ 3 (x643 x1207)) (x643 (x808 x1207 3))))
(assert (x1602 x1754))
(assert (= (and x662 x2055) x1695))
(assert (x1280 (x525 320)))
(assert (= x2276 (and (not x389) x1670)))
(assert (x1602 x1452))
(assert (x1602 x873))
(assert (=> (<= (x1501 288) 10000) (= (x1622 (x1501 288)) (x1546 (x1501 288)))))
(assert (x1602 x579))
(assert (x1602 x1955))
(assert (x1280 x900))
(assert (= (x643 (x1622 (x525 256))) (x525 256)))
(assert (= x363 (x643 (x1622 x363))))
(assert (x1602 x321))
(assert (x1602 x1956))
(assert (= (and x2341 x1994) x9))
(assert (= x2346 (=> (and (= x900 x872) (and (and (and (= x2087 x1924) (< 0 x818) (= x486 x2016) (= (not (= 0 x1082)) x2087) (= x1363 x1134) (not (= 3081457077 x440)) (> 3733007566 x440) x935 (not (> 3081457077 x440)) (= (or (not x645) x1924) x935) (= x818 (x2245 (x1622 x1542))) (> 3285302901 x440) (not (< x440 2112976665)) (= x440 3189536363)) (and (or (and (not x2482) (and (= x69 x1515) (= x1329 0))) (and x2482 (and (= (= x393 x1309) x446) (= (or x446 (not x1144)) x1389) (= x1329 x1964) (= x69 x2059) (< x393 x1134) (= (x2136 x393) x2234) (> 1461501637330902918203684832716283019655932542976 x1964) (= (>= x1548 x1515) x1832) (= x1782 (ite x332 x452 x1442)) (= x1369 (and x2140 x332)) (= x2059 (x1199 (+ x1782 x1515))) (>= x1964 0) (= x1473 (or x1389 (not x1369))) (= (x2162 (x1546 1) 0) x2396) (= x1144 (not (= 0 x1964))) x1473 (= x830 (x154 x1548)) (<= x1964 1461501637330902918203684832716283019655932542975) (= x2423 0) (= x1548 (x2136 x393)) (= x1442 (x1184 x2423)) (= (not (= x830 x393)) x1733) (= x290 1) (= x448 (x808 x2396 x393)) (= (ite x332 x1515 x2234) x1456) (= (x2397 x448) x1964) (= x332 (or x1832 x1733)) (= (x2379 x1964) x1309) (= (x1184 x290) x452)))) (and (= x1556 x1363) (not (> 2112976665 x1355)) (not (= x1355 2923951457)) (= (x2245 (x1622 x1542)) x1033) (= x393 x2016) (= x1355 3050870311) (not (= x1355 3018310333)) (not (> 2867924802 x1355)) (> 3081457077 x1355) (= x668 (< x486 x1556)) (= (> x1134 x393) x2482) (not (< x1355 2726977199)) (not (= x1355 2867924802)) (> x1033 0)))) (and (> 2112976665 x1390) (= x1082 (ite x1641 1 0)) (not (< x1390 839595567)) (= x1065 (x2245 (x1622 x1542))) (= (x173 (x1622 x900) (x1546 2) 0) x1388) (= x1641 (not x1362)) (= 1030951317 x1390) (> x1065 0) (>= 255 x765) (not (< x1390 1030951317)) (= x1362 (= 0 x765)) (<= x900 1461501637330902918203684832716283019655932542975) (= (x305 x1388) x765) (< x1390 1680813743) (> 256 x765) (>= x765 0)))) x578)))
(assert (x1280 (x712 128)))
(assert (x1602 x1922))
(assert (x1602 x1477))
(assert (x1602 x655))
(assert (x1280 x160))
(assert (= (and x2032 (not x90)) x395))
(assert (x1602 x2446))
(assert (x2495 x883))
(assert (= (or x1614 x2507 x1359) x1188))
(assert (x349 x6))
(assert (and (x303 x266 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x266 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x266 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x266 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x266 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x266 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= (and x1027 (not x1023)) x2024))
(assert (x1602 x585))
(assert (x2246 x1878))
(assert (x1602 x1962))
(assert (= x804 (=> (and (and (or (and (= 0 x741) (not x1066)) (and x1066 (and (= (x1351 x1864) x1310) (= x1864 (x808 x1018 x2535)) x807 (= (and x2252 x1861) x297) (<= 0 x1310) (= x1770 (or x1250 (not x1167))) (>= 1461501637330902918203684832716283019655932542975 x1310) (= x1310 x741) (= x807 (or (not x297) x1770)) (= (x152 x2535) x1535) (= x217 (x292 x1310)) (= x1592 (not (= x2535 x7))) (= (not (= 0 x1310)) x1167) (> x784 x2535) (= (= x217 x2535) x1250) (= x7 (x1090 x1535)) (= x1861 (or x1906 x1592)) (> 1461501637330902918203684832716283019655932542976 x1310) (= x1906 (>= x1535 x2080)) (= x1018 (x2162 (x1546 1) 0))))) (and (> x162 0) (= x552 x1097) (= x103 (= 0 x1097)) (not (= 3018310333 x514)) (= (x2245 (x1622 x1542)) x162) (= 0 x1248) (= x1066 (< x2535 x784)) (not (> 2867924802 x514)) (not (< x514 2112976665)) (not (< x514 2726977199)) (> 3081457077 x514) (= x514 3050870311) (not (= 2923951457 x514)) (= x2357 x2535) (not (= x514 2867924802)))) (= x552 x1553)) x4)))
(assert (= (and x1116 x2272) x1062))
(assert (= (=> (and (and (not (= 2923951457 x64)) (> x1981 0) (= x1660 (not (= x1510 x2334))) (not (= x64 3018310333)) (not (= 2867924802 x64)) (= (< x1689 x784) x322) (= x1510 x2357) (not (< x64 2726977199)) (not (< x64 2112976665)) (= (x2245 (x1622 x1542)) x1981) (= x2016 x2334) (not (< x64 2867924802)) (= x64 3050870311) (> 3081457077 x64) (= x2016 x1689)) (or (and (and (= x1031 (ite x1344 x430 x746)) (<= 0 x507) (= x2314 (x1184 x2339)) x1674 (= x1344 (or x1358 x2206)) (= (x1199 (+ x1610 x430)) x1706) (= x1653 (= x2015 x1689)) (= (x2162 (x1546 1) 0) x1500) (= x1974 (and x1344 x2252)) (= (or x1653 (not x1486)) x236) (= x1610 (ite x1344 x2314 x950)) (= 0 x1410) (= x507 x1824) (= x950 (x1184 x1410)) (= x2206 (not (= x1444 x1689))) (> x784 x1689) (= (x808 x1500 x1689) x1588) (= x1706 x2307) (<= x507 1461501637330902918203684832716283019655932542975) (= (<= x430 x1321) x1358) (= x2015 (x292 x507)) (= 1 x2339) (= (x1351 x1588) x507) (= x1674 (or x236 (not x1974))) (> 1461501637330902918203684832716283019655932542976 x507) (= x1321 (x1278 x1689)) (= x1444 (x1229 x1321)) (= x746 (x1278 x1689)) (= x1486 (not (= 0 x507)))) x322) (and (and (= 0 x1824) (= x2307 x430)) (not x322)))) x1427) x416))
(assert (x1602 x2332))
(assert (x1602 x821))
(assert (= x2205 (and x67 (not x709))))
(assert (x1280 (x712 288)))
(assert (= (and x908 x335) x251))
(assert (x1602 x765))
(assert (x349 x1917))
(assert (x1602 x80))
(assert (x1280 (x1501 192)))
(assert (= (x643 (x1622 (x875 192))) (x875 192)))
(assert (x1602 x2423))
(assert (=> (>= 10000 (x2164 224)) (= (x1622 (x2164 224)) (x1546 (x2164 224)))))
(assert (= x76 (or x284 x1530)))
(assert (x1602 x1761))
(assert (and (= 81 (x189 9 9)) (= (x189 27 3) 81) (= (x189 9 3) 27) (= (x189 3 3) 9)))
(assert (= (=> (and (= x766 (= 0 x2497)) (= (x715 115792089237316195423570985008687907853269984665640564039457584007913129639904 x816) x1761) (= x687 (x1345 (- x1746 128))) (= x816 (x1199 (+ x1852 31))) (= 128 x1292) (= x1746 (x1199 (+ 260 x1761))) (= (x2245 (x1622 x1542)) x2497)) (and (=> (and (not x766) (and (= x687 x1516) (= x2171 78829575338057407266098799593532030895783219923606930547737006156155256307712) (= (x2245 (x1622 x1542)) x1402) (not (> 2867924802 x488)) (= x255 (x1345 (- x1516 4))) x406 (< 0 x1402) (> 3081457077 x488) (= x488 2923951457) (= x1856 x1282) (= x406 (= x1852 (x257 100))) (= x681 x2031) (not (> 4 x1516)) (not (= x488 2867924802)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x255) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x255)) (> 96 x255))) x795) (>= x1516 132) (not (< x488 2112976665)) (not (< x488 2726977199)))) (and (=> x795 x1481) (=> (and (and (= x1933 (= x1282 x1856)) (= x1856 x716)) (not x795)) (and (=> (and (and (= x681 x1609) (= x1971 (= x681 x2031))) x1933) (and (=> (and x1971 (= x2381 (and (< 131 x1516) (= (<= x1516 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (and (=> (not x2381) x1481) (=> (and (and (= x1717 (< 18446744073709551615 x1908)) (= x1908 (x1123 100))) x2381) (and (=> x1717 x1481) (=> (and (not x1717) (and (= (x1199 (+ 132 x1908)) x543) (= (> x543 x1516) x2420) (= 132 x1523))) (and (=> (and (= x1261 true) (not x2420)) (and (=> (and x1261 (and (>= x2018 0) (> 256 x2018) (= x427 (x173 (x1622 x1856) (x1546 2) 0)) (= x1046 (< 0 x2018)) (<= x2018 255) (= (x305 x427) x2018))) (and (=> (and x1046 (and (= x1324 (= x2199 0)) (= x306 (x173 (x1622 x681) (x1546 2) 0)) (>= 255 x2199) (< x2199 256) (= x2199 (x305 x306)) (>= x2199 0))) (and (=> (not x1324) x1481) (=> (and x1324 (= (= 0 x681) x1875)) (and (=> (and (not x1875) (and (= x894 (> x1134 0)) (= x95 0))) (and (=> (and (not x894) (= x2328 x1634)) x41) (=> (and (= (< 0 x1134) x744) x894) (and (=> (and x744 (and (= 0 x2301) (= (<= x1634 x275) x943) (= (ite x468 x1634 x1005) x2250) (= x2014 (x2162 (x1546 1) 0)) (= x2424 (x1184 x2286)) (>= 1461501637330902918203684832716283019655932542975 x2427) (= x266 1) x436 (= (x1184 x266) x2382) (= (not (= 0 x1764)) x1980) (= x2014 x1514) (= x2152 (x2379 x2427)) (<= 0 x2427) (= x2300 0) (= (x1199 (+ x272 x1634)) x655) (= (= 0 x2152) x2192) (= x1720 0) (= 0 x828) (= 0 x2286) (= x436 (or (not x1290) x493)) (> 1461501637330902918203684832716283019655932542976 x2427) (= x2490 (not (= x2427 0))) (= x493 (or (not x2490) x2192)) (= (x1504 x1720) x275) (= x468 (or x943 x1980)) (= (ite x468 x2382 x2424) x272) (= x2427 (x2397 x1514)) (= x2469 (= x1856 x2427)) (= (x1898 x275) x1764) (= (and x468 x2140) x1290) (= (x1504 x2301) x1005))) (and (=> (and x2469 (= x2351 (> x1134 0))) (and (=> (not x2351) x1481) (=> (and x2351 (and (= 1 x208) (= 0 x1479) (= x192 (<= x655 x1398)) (= x1335 (ite x1397 x655 x2097)) x965 (= x2308 (x2397 x1771)) (= (x781 x1479) x1398) (= x1154 (x2162 (x1546 1) 0)) (= (x1199 (+ x655 x1026)) x2269) (= x1436 (= x572 0)) (= x965 (or (not x867) x886)) (= x1771 x1154) (= 0 x362) (= (x1184 x208) x1122) (= x886 (or x1436 (not x983))) (= x1397 (or x192 x1817)) (= 0 x2227) (= (x1184 x2227) x2106) (= x983 (not (= x2308 0))) (= x2264 0) (>= 1461501637330902918203684832716283019655932542975 x2308) (= (not (= x1161 0)) x1817) (= (x781 x2264) x2097) (= x867 (and x1397 x2140)) (= (ite x1397 x1122 x2106) x1026) (= (x2379 x2308) x572) (= x2448 0) (<= 0 x2308) (= (x2384 x1398) x1161) (= x2269 x2457))) x12))) (=> (not x2469) x1000))) (=> (not x744) x1481))))) (=> x1875 x1481))))) (=> (not x1046) x1481))) (=> (not x1261) x1481))) (=> x2420 x1481))))))) (=> (not x1971) x1481))) (=> (not x1933) x1481))))) (=> (and x766 (and (= x728 x2140) (= x1634 x172))) x1961))) x676))
(assert (= (x643 (x1622 (x1869 128))) (x1869 128)))
(assert (x1602 x572))
(assert (= (or x32 x2129) x1323))
(assert (x1602 x64))
(assert (x349 x2339))
(assert (x1602 x543))
(assert (=> (>= 10000 (x875 192)) (= (x1546 (x875 192)) (x1622 (x875 192)))))
(assert (= x1449 (and x2520 x1141)))
(assert (x1602 x1056))
(assert (x182 32))
(assert (= (and x831 x1067) x1632))
(assert (x349 x2539))
(assert (x1602 x1803))
(assert (= (x1622 3050870311) (x1546 3050870311)))
(assert (= (x123 260) 0))
(assert (= (and x2381 x2372) x1474))
(assert (= (=> (and (= x607 x430) (= x1320 x784) (= x2252 x949)) x416) x2512))
(assert (= (x643 (x1546 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= (x925 (x1199 (+ 100 x574))) 0))
(assert (x1602 x1640))
(assert (x1602 x1634))
(assert (= (=> (and (= (x951 x789) x1118) (= (not (< 32 x1204)) x1663)) (and x1663 x973)) x1332))
(assert (x1602 x1122))
(assert (x1602 x1892))
(assert (x1602 x738))
(assert (= x537 (and (not x1216) x438)))
(assert (x1602 x1180))
(assert (= (x123 324) 0))
(assert (x1602 x1669))
(assert (x1602 x2251))
(assert (x1602 x2086))
(assert (= (and (not x2327) x1373) x199))
(assert (= (or x787 x333 x2205 x656 x1766) x1966))
(assert (x1602 x990))
(assert (= (x643 (x1622 (x2164 192))) (x2164 192)))
(assert (= (or x1800 x1246) x774))
(assert (x1602 x1315))
(assert (x1602 x846))
(assert (x615 x733))
(assert (x1602 x402))
(assert (= (or x1613 x599) x610))
(assert (= (and x1828 x1236) x1121))
(assert (x1602 x1979))
(assert (x1602 x1854))
(assert (= (x643 (x808 x1086 1)) (+ 1 (x643 x1086))))
(assert (= (and x90 x2032) x2431))
(assert (x1602 x2416))
(assert (= (and x464 (not x2166)) x1644))
(assert (= 2726977199 (x643 (x1546 2726977199))))
(assert (x1602 x699))
(assert (x1602 x889))
(assert (x1602 x673))
(assert (x1602 x68))
(assert (= (x643 (x808 x1018 x2535)) (+ (x643 x1018) x2535)))
(assert (= (and x959 x2408) x233))
(assert (x1602 x2111))
(assert (x1602 x746))
(assert (=> (<= (x712 224) 10000) (= (x1546 (x712 224)) (x1622 (x712 224)))))
(assert (x1602 x2310))
(assert (x1602 x169))
(assert (= (and x672 x2406) x1827))
(assert (=> (<= (x525 288) 10000) (= (x1546 (x525 288)) (x1622 (x525 288)))))
(assert (= 0 (x954 128)))
(assert (= (x643 (x808 x1207 1)) (+ (x643 x1207) 1)))
(assert (= (or x249 x2471) x682))
(assert (x1616 x1561))
(assert (= 2867924802 (x643 (x1546 2867924802))))
(assert (= x15 (and x1046 x2322)))
(assert (= (and x1213 x1224) x65))
(assert (x1602 x1604))
(assert (= x71 (or x2078 x2135)))
(assert (x1280 (x712 160)))
(assert (= (and x129 x2186) x2341))
(assert (x1602 x1748))
(assert (= x2371 (=> (and (= (x1199 (+ x1137 164)) x1563) (= (and (>= x480 x1470) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x843 x1470))) x1673) (= 164 x52) (= x1889 (x1345 (- x1563 164))) (= (x2131 (x1622 x1542)) x480) (= x843 (x2131 (x1622 x1542)))) (and (=> (and (not x1673) (and (= x1634 x1354) (= x261 x2140) (= x1134 x2211) (= 0 x83) (= x810 x1596) (= 0 x412))) x632) (=> (and x1673 (and (= x1267 (x1199 (+ x1470 x1477))) (= x170 x1889) (< (+ x1470 x1477) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x702 (x2131 (x1622 x1542))) (= 4 x170) (= x2094 (x2245 (x1622 x1542))) (= (- x702 x1470) x1288) (> x2094 0) (= (= x1470 0) x350) (= x1477 (x663 (x1622 x1542))) (= 106459005500898838667931598610041423549574964228674563513410788872267948359680 x1396))) (and (=> (and (not x350) (and (= 0 x1297) (= x1634 x1232) (= x2492 x2140) (= x185 x1134) (= x810 x2444))) x512) (=> (and x350 (and (not (< x336 2112976665)) (<= x1498 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x432 96) x302) (not (> 4 x170)) (not (< x336 3733007566)) (<= x1282 1461501637330902918203684832716283019655932542975) (= x336 3948783980) (not (> 3948783980 x336)) (= (> x302 0) x104) (not (< x336 3081457077)) (> 1461501637330902918203684832716283019655932542976 x1282) (<= 0 x1282) (<= 0 x1498))) (and (=> (and (not x104) (= x999 0)) x177) (=> x104 x904)))))))))
(assert (x1602 x1171))
(assert (x1602 x997))
(assert (x1602 x1518))
(assert (= (and x2259 (not x994)) x130))
(assert (and (x1522 x36 2) (x2090 x36 2) (= (- x36 (x715 1 x36)) (* (x2309 x36 2) 2)) (x131 x36 2) (=> (and (> x36 0) (> 2 0)) (and (> (* (x2309 x36 2) 2) (- x36 2)) (>= x36 (* (x2309 x36 2) 2)))) (x2030 x36 2)))
(assert (x1602 x459))
(assert (x1602 x2048))
(assert (x1602 x1282))
(assert (= (=> (= x2084 (> (x643 x2253) (x643 x1896))) (and (=> (not x2084) x1562) (=> x2084 x1142))) x62))
(assert (x1602 x1600))
(assert (= (and x792 (not x2241)) x1696))
(assert (x1602 x2196))
(assert (x717 x1893 x2188))
(assert (= (x954 160) 0))
(assert (= (x1622 (x643 x2491)) x2491))
(assert (x1602 x814))
(assert (x1602 x81))
(assert (= x693 (and (not x744) x1740)))
(assert (x1602 x1035))
(assert (and (x1522 x1214 32) (x2090 x1214 32) (= (- x1214 (x715 31 x1214)) (* (x2309 x1214 32) 32)) (x131 x1214 32) (=> (and (> x1214 0) (> 32 0)) (and (> (* (x2309 x1214 32) 32) (- x1214 32)) (>= x1214 (* (x2309 x1214 32) 32)))) (x2030 x1214 32)))
(assert (and (x303 x624 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x624 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x624 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x624 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x624 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x624 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= x1359 (and x587 (not x1032))))
(assert (and (x303 x208 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x208 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x208 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x208 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x208 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x208 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x349 x266))
(assert (= (and x79 (not x1132)) x868))
(assert (= (x1501 160) (x643 (x1622 (x1501 160)))))
(assert (x1602 x1579))
(assert (= (and x2041 (not x2420)) x565))
(assert (x1602 x255))
(assert (= x787 (and x854 x1537)))
(assert (= (x525 320) (x643 (x1622 (x525 320)))))
(assert (x1602 x939))
(assert (x1602 x1813))
(assert (x1602 x2114))
(assert (= x2271 (and (not x1903) x111)))
(assert (= x1115 (and (not x1014) x819)))
(assert (and (x303 x1551 128) (x1404 x1551 128) (x2203 x1551 128) (=> (< 0 128) (= x1551 (+ (* 128 (x2309 x1551 128)) (x2202 x1551 128))))))
(assert (x1602 x1454))
(assert (and (x303 x1631 128) (x1404 x1631 128) (x2203 x1631 128) (=> (< 0 128) (= x1631 (+ (* 128 (x2309 x1631 128)) (x2202 x1631 128))))))
(assert (x1602 x2236))
(assert (= 0 (x123 420)))
(assert (x1602 x85))
(assert (= (x643 (x1546 50455196340412629536459377552246818957342304218644716315923982585962625499136)) 50455196340412629536459377552246818957342304218644716315923982585962625499136))
(assert (= (x2164 288) (x643 (x1622 (x2164 288)))))
(assert (x1322 x2319))
(assert (= (and (not x1236) x1828) x1466))
(assert (= x355 (and (not x134) x1209)))
(assert (x1602 x759))
(assert (= (or x670 x590) x1801))
(assert (x1602 x2524))
(assert (= (x1546 3189536363) (x1622 3189536363)))
(assert (= x614 (or x806 x137)))
(assert (x717 x1958 x2026))
(assert (= (x1546 100641684887429822015232653770480429695213136867978658013931169090238473568256) (x1622 100641684887429822015232653770480429695213136867978658013931169090238473568256)))
(assert (= x1146 (or x1129 x1223)))
(assert (= x1176 (and x1736 x1657)))
(assert (x1280 x1386))
(assert (x1602 x1016))
(assert (= (x29 260) 0))
(assert (= x318 x858))
(assert (= x1189 (and x1307 x2244)))
(assert (= x1268 (or (and x184 (not x722)) x610)))
(assert (x1602 x1596))
(assert (= 3018310333 (x643 (x1546 3018310333))))
(assert (x1602 x301))
(assert (and (x303 x1676 128) (x1404 x1676 128) (x2203 x1676 128) (=> (< 0 128) (= x1676 (+ (* 128 (x2309 x1676 128)) (x2202 x1676 128))))))
(assert (x1602 x2444))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x643 (x1546 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x1280 (x1501 320)))
(assert (=> (>= 10000 (x460 224)) (= (x1622 (x460 224)) (x1546 (x460 224)))))
(assert (x349 x2540))
(assert (=> (>= 10000 x1542) (= (x1546 x1542) (x1622 x1542))))
(assert (= (x1110 288) (x643 (x1622 (x1110 288)))))
(assert (x1602 x1516))
(assert (x1602 x443))
(assert (x1602 x226))
(assert (= (or x1935 x2101) x547))
(assert (= (x1622 100000000000000000) (x1546 100000000000000000)))
(assert (= (and (not x2351) x1756) x692))
(assert (= (x123 356) 0))
(assert (x349 x2067))
(assert (= (=> (and (= (= x769 0) x2476) (or (and (and (= x769 x391) (= x916 x1784) (= x1658 x171) (= x520 x397) (= x1446 x352) (= x2524 x2064)) (not x2476)) (and x2476 (and (= (- x451 x1173) x891) (= x1173 (ite (= 0 x769) x1470 0)) (= x916 x1784) (= x1658 x171) (= x2524 x2064) (= x1446 x352) (< (+ x1173 x691) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x451 (x112 (x1622 x1542))) (= (x1199 (+ x691 x1173)) x2178) (= x769 x391) (= x397 x520) (= x691 (x1317 (x1622 x1542))))))) x2425) x2297))
(assert (= (or x76 x1555 x2337) x1940))
(assert (x2495 x2296))
(assert (= x1440 (or x682 x1121)))
(assert (x1602 x612))
(assert (x1602 x1757))
(assert (= (x1559 224) 0))
(assert (x1602 x970))
(assert (x1602 x742))
(assert (x26 x883))
(assert (= (+ (x643 x442) 1) (x643 (x808 x442 1))))
(assert (x349 x1561))
(assert (= x279 (and (=> (and x89 (and (= (x2309 x1114 2) x1195) (= x2231 (x715 1 x1114)) (= x369 (= x2231 (ite x286 1 0))) (= x1652 (ite (> x2231 0) x1195 (x715 127 x1195))) (= (> 32 x1652) x286))) (and (=> (and (not x369) (and (= (> x840 0) x63) (= (x1199 (+ x1652 31)) x1156) (= x2288 (x2309 x1156 32)) (= (x808 x1661 x2288) x2348) (= (x2162 (x1546 5) 0) x1661))) (and (=> (and (not x63) (and (= x1917 0) (= x2190 x1661))) x1185) (=> (and (= x1736 (< 31 x840)) x63) (and (=> (and (and (= x684 (<= x1958 255)) (= (x715 115792089237316195423570985008687907853269984665640564039457584007913129639680 x78) x2026) (= x1958 (x1199 (+ x840 x840))) (= (x1199 (+ x2026 x1958)) x1420) (= x2400 (<= x1958 255)) (= x1917 (ite x2400 x2083 x2526)) (= x2190 x1661) (= (ite x684 x1420 x2331) x2526) (= (x1199 (+ x2026 x1958)) x2083) (= (x2139 x1958 x2026) x2331) (= x78 (x309 132))) (not x1736)) x1185) (=> (and (and (= x671 (x1199 (+ x840 x840))) (= x573 (x1199 (+ 1 x671))) (= (> x629 132) x1758) (= x629 (x1199 (+ 132 x840)))) x1736) (and (=> (and (= x1661 x2230) (not x1758)) x1106) (=> x1758 x2510))))))) (=> (and (and (= x2140 x1951) (= x259 0) (= x1634 x1499) (= x810 x2344) (= x1134 x1483)) x369) x2441))) (=> (not x89) x2541))))
(assert (x1602 x172))
(assert (x1602 x985))
(assert (and (x303 x1114 2) (x1404 x1114 2) (x2203 x1114 2) (=> (< 0 2) (= x1114 (+ (* 2 (x2309 x1114 2)) (x2202 x1114 2))))))
(assert (x1280 x363))
(assert (x1280 (x1869 192)))
(assert (= x1575 (and (not x2292) x355)))
(assert (x1602 x755))
(assert (x1602 x1102))
(assert (= x1008 (=> (and (= (x1199 (+ 128 x1552)) x2416) (= x998 x2416)) x2325)))
(assert (= 1680813743 (x643 (x1546 1680813743))))
(assert (x1602 x196))
(assert (x1280 (x1110 288)))
(assert (x1602 x1917))
(assert (x1602 x1151))
(assert (x1602 x733))
(assert (x1602 x1396))
(assert (= (and x1160 x2529) x464))
(assert (= (=> (and (= (not (> x1219 128)) x1034) (= (x1199 (+ 96 x574)) x1370) (= (x27 256) x564)) (and (=> (= x1976 128) x711) x1034)) x1959))
(assert (= (and x986 x210) x264))
(assert (x1602 x1648))
(assert (x1602 x1963))
(assert (x1602 x799))
(assert (= x887 (=> (and (= x1134 x2374) (= 0 x1668) (= x2140 x603) (= 1 x1829) (= x1737 x810) (= x1634 x1612)) x815)))
(assert (= (and x2084 x753) x1129))
(assert (x1602 x2478))
(assert (= x2085 (and (not x882) x845)))
(assert (x1602 x1977))
(assert (x1602 x2457))
(assert (= x2425 (=> (and (= x1912 (= x2524 0)) (or x1912 (not x1912))) x2212)))
(assert (= x2499 (and (not x1174) x2504)))
(assert (=> (>= 10000 (x1869 160)) (= (x1546 (x1869 160)) (x1622 (x1869 160)))))
(assert (x1620 x490))
(assert (x1602 x1829))
(assert (x1602 x691))
(assert (= 0 (x2481 320)))
(assert (= (=> (and (= x2096 (>= 224 x1347)) (= x1347 (x1345 (- x1430 128)))) (and x2096 (=> (and (= (ite (>= 32 x1347) (x2162 (x1622 (x525 128)) 0) (ite (>= 64 x1347) (x173 (x1622 (x525 128)) (x1622 (x525 160)) 0) (ite (>= 96 x1347) (x2109 (x1622 (x525 128)) (x1622 (x525 160)) (x1622 (x525 192)) 0) (ite (>= 128 x1347) (x346 (x1622 (x525 128)) (x1622 (x525 160)) (x1622 (x525 192)) (x1622 (x525 224)) 0) (ite (<= x1347 160) (x401 (x1622 (x525 128)) (x1622 (x525 160)) (x1622 (x525 192)) (x1622 (x525 224)) (x1622 (x525 256)) 0) (ite (<= x1347 192) (x748 (x1622 (x525 128)) (x1622 (x525 160)) (x1622 (x525 192)) (x1622 (x525 224)) (x1622 (x525 256)) (x1622 (x525 288)) 0) (ite (<= x1347 224) (x1638 (x1622 (x525 128)) (x1622 (x525 160)) (x1622 (x525 192)) (x1622 (x525 224)) (x1622 (x525 256)) (x1622 (x525 288)) (x1622 (x525 320)) 0) (x1622 x1810)))))))) x698) (= x89 (not x1629)) (= x1629 (= x2197 x698))) x279))) x844))
(assert (x1602 x1965))
(assert (x2495 x1013))
(assert (x1602 x1662))
(assert (x1602 x2161))
(assert (= (x1546 656247078515407326148355443760548300161286948278503429861414951787075469312) (x1622 656247078515407326148355443760548300161286948278503429861414951787075469312)))
(assert (x344 x1820))
(assert (= x1982 (=> (and (= (>= 224 x2369) x227) (= x2369 (x1345 (- x1058 128)))) (and x227 (=> (and (= x1825 (= x1301 x1285)) (= (ite (<= x2369 32) (x2162 (x1622 (x1869 128)) 0) (ite (>= 64 x2369) (x173 (x1622 (x1869 128)) (x1622 (x1869 160)) 0) (ite (>= 96 x2369) (x2109 (x1622 (x1869 128)) (x1622 (x1869 160)) (x1622 (x1869 192)) 0) (ite (<= x2369 128) (x346 (x1622 (x1869 128)) (x1622 (x1869 160)) (x1622 (x1869 192)) (x1622 (x1869 224)) 0) (ite (>= 160 x2369) (x401 (x1622 (x1869 128)) (x1622 (x1869 160)) (x1622 (x1869 192)) (x1622 (x1869 224)) (x1622 (x1869 256)) 0) (ite (>= 192 x2369) (x748 (x1622 (x1869 128)) (x1622 (x1869 160)) (x1622 (x1869 192)) (x1622 (x1869 224)) (x1622 (x1869 256)) (x1622 (x1869 288)) 0) (ite (<= x2369 224) (x1638 (x1622 (x1869 128)) (x1622 (x1869 160)) (x1622 (x1869 192)) (x1622 (x1869 224)) (x1622 (x1869 256)) (x1622 (x1869 288)) (x1622 (x1869 320)) 0) (x1622 x431)))))))) x1285) (= (not x1825) x722)) x1778)))))
(assert (x1602 x2180))
(assert (x1602 x833))
(assert (and (x303 x1195 128) (x1404 x1195 128) (x2203 x1195 128) (=> (< 0 128) (= x1195 (+ (* 128 (x2309 x1195 128)) (x2202 x1195 128))))))
(assert (= (x1622 (x643 x2190)) x2190))
(assert (x349 x502))
(assert (x1602 x2019))
(assert (x1602 x2050))
(assert (= (and x896 x757) x792))
(assert (= (=> (= x2457 x2328) x12) x41))
(assert (= x2471 (and x1466 x1954)))
(assert (x1602 x2456))
(assert (x1602 x549))
(assert (= (x460 288) (x643 (x1622 (x460 288)))))
(assert (x1602 x1580))
(assert (x1602 x477))
(assert (x1602 x2118))
(assert (x1602 x485))
(assert (= (and x1827 (not x398)) x2281))
(assert (x1280 x1856))
(assert (x1602 x500))
(assert (x1280 (x2164 224)))
(assert (x1602 x2347))
(assert (x615 x1114))
(assert (x1602 x2374))
(assert (x1602 x1877))
(assert (and (x303 x1170 128) (x1404 x1170 128) (x2203 x1170 128) (=> (< 0 128) (= x1170 (+ (* 128 (x2309 x1170 128)) (x2202 x1170 128))))))
(assert (= x1307 (and x1836 (not x2383))))
(assert (x1602 x1855))
(assert (= x701 (=> (and (= x600 x495) (and (and (not (> 2867924802 x783)) (= x2498 (< x1208 x1134)) (not (< x783 2726977199)) (not (= 3018310333 x783)) (not (= 2923951457 x783)) (= x495 x194) (> 3081457077 x783) (not (= 2867924802 x783)) (= x1858 0) (= (= 0 x194) x545) (= 3050870311 x783) (= x1208 x2357) (not (> 2112976665 x783)) (< 0 x2073) (= (x2245 (x1622 x1542)) x2073)) (or (and x2498 (and (= x1911 1) (= x2484 0) (= (x2422 x1208) x209) (= x159 (or x1628 x660)) (> x1134 x1208) (= x1745 (ite x159 x1926 x1422)) (= x892 x889) (= x1678 (x2379 x1487)) (>= x1487 0) (< x1487 1461501637330902918203684832716283019655932542976) (= (= x1678 x1208) x811) (= (x2422 x1208) x1422) (= (x2397 x473) x1487) (= x889 (x1199 (+ x1926 x2037))) (= (>= x209 x1926) x660) (= x2037 (ite x159 x1130 x445)) (= x473 (x808 x960 x1208)) (= x2274 (or (not x1985) x811)) (= x445 (x1184 x2484)) (= (not (= 0 x1487)) x1985) (= x730 x1487) (= x960 (x2162 (x1546 1) 0)) x2437 (= x1130 (x1184 x1911)) (= x1628 (not (= x18 x1208))) (= (x304 x209) x18) (<= x1487 1461501637330902918203684832716283019655932542975) (= x2437 (or x2274 (not x1584))) (= (and x159 x2140) x1584))) (and (and (= 0 x730) (= x1926 x892)) (not x2498))))) x942)))
(assert (= (x1844 192) 0))
(assert (x1280 (x1869 224)))
(assert (and (x303 x490 26959946667150639794667015087019630673637144422540572481103610249216) (x1404 x490 26959946667150639794667015087019630673637144422540572481103610249216) (x2203 x490 26959946667150639794667015087019630673637144422540572481103610249216) (=> (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (= x490 (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 (x2309 x490 26959946667150639794667015087019630673637144422540572481103610249216)) (x2202 x490 26959946667150639794667015087019630673637144422540572481103610249216))))))
(assert (x1602 x1991))
(assert (x1602 x1533))
(assert (x1602 x1890))
(assert (= (and (=> (and (and (= (ite (< 0 x707) x551 (x715 127 x551)) x1346) (= x419 (< x1346 32)) (= (= x707 (ite x419 1 0)) x2002) (= x707 (x715 1 x1114)) (= (x2309 x1114 2) x551)) x722) (and (=> (and (and (= (< 0 x982) x2343) (= (x2309 x1214 32) x1247) (= x2491 (x808 x1086 x1247)) (= (x2162 (x1546 5) 0) x1086) (= x1214 (x1199 (+ 31 x1346)))) (not x2002)) (and (=> (and (not x2343) (and (= x338 0) (= x1175 x1086))) x1002) (=> (and x2343 (= (< 31 x982) x586)) (and (=> (and (not x586) (and (= (x1199 (+ x2188 x1893)) x1257) (= x283 (<= x1893 255)) (= x674 (x2220 132)) (= x1124 (<= x1893 255)) (= x1893 (x1199 (+ x982 x982))) (= x338 (ite x283 x1710 x88)) (= x2188 (x715 115792089237316195423570985008687907853269984665640564039457584007913129639680 x674)) (= x88 (ite x1124 x1257 x821)) (= x1710 (x1199 (+ x2188 x1893))) (= x821 (x2139 x1893 x2188)) (= x1086 x1175))) x1002) (=> (and (and (= x946 (x1199 (+ x982 x982))) (= (x1199 (+ 1 x946)) x496) (= x426 (< 132 x471)) (= (x1199 (+ x982 132)) x471)) x586) (and (=> x426 x1318) (=> (and (not x426) (= x2194 x1086)) x483))))))) (=> x2002 x1916))) (=> (not x722) x2367)) x1778))
(assert (x1280 (x2164 160)))
(assert (= x1714 (and x941 (not x2430))))
(assert (x1602 x1197))
(assert (x1602 x1192))
(assert (= x1277 (or x1284 x35)))
(assert (= (or x1724 x1519) x2378))
(assert (= (and x1260 x1695) x183))
(assert (x1602 x1964))
(assert (x1602 x2073))
(assert (= (x1622 2867924802) (x1546 2867924802)))
(assert (x1602 x1713))
(assert (= 0 (x925 (+ 192 (x1199 (+ x574 100))))))
(assert (= (or x553 x1017) x2229))
(assert (x1602 x166))
(assert (= (x1501 224) (x643 (x1622 (x1501 224)))))
(assert (x1602 x760))
(assert (x1602 x2120))
(assert (= 0 (x2191 420)))
(assert (= x589 (and (not x2385) x65)))
(assert (x1602 x2018))
(assert (= 0 (x1559 192)))
(assert (x1602 x1140))
(assert (x1602 x1976))
(assert (x1602 x105))
(assert (= (x1904 128) 0))
(assert (x349 x1114))
(assert (x1602 x2399))
(assert (x2495 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (and x2248 x2173) x181))
(assert (= (and x1206 x1069) x2393))
(assert (x1602 x1631))
(assert (= 4294967296 (x643 (x1546 4294967296))))
(assert (x1602 x136))
(assert (x1602 x1548))
(assert (x349 x1820))
(assert (x1602 x18))
(assert (x1602 x946))
(assert (= (=> (and (= x607 x328) (= x631 x1320) (= x1491 x949) (= x1569 x623) (= x2198 x817)) x1462) x1378))
(assert (x1616 x1748))
(assert (x1602 x1173))
(assert (= (x954 224) 0))
(assert (x1280 (x2164 320)))
(assert (x1602 x604))
(assert (x349 x2423))
(assert (and (x303 x78 256) (x1404 x78 256) (x2203 x78 256) (=> (< 0 256) (= x78 (+ (* 256 (x2309 x78 256)) (x2202 x78 256))))))
(assert (= x599 (and x1294 x390)))
(assert (x349 x816))
(assert (= (=> (= (not (< 32 x1965)) x1882) (and x1882 x484)) x2110))
(assert (x1602 x2126))
(assert (= (x1622 (x643 x2117)) x2117))
(assert (x1280 (x1110 192)))
(assert (x1602 x922))
(assert (x1602 x777))
(assert (x1602 x2158))
(assert (= x1434 (and (not x232) x2473)))
(assert (x1602 x2227))
(assert (x1602 x2249))
(assert (= x56 (and (not x822) x1910)))
(assert (x349 x1170))
(assert (x1280 (x875 288)))
(assert (= (x2191 324) 0))
(assert (and (x303 x1013 128) (x1404 x1013 128) (x2203 x1013 128) (=> (< 0 128) (= x1013 (+ (* 128 (x2309 x1013 128)) (x2202 x1013 128))))))
(assert (= (x2481 224) 0))
(assert (and (x303 x338 2) (x1404 x338 2) (x2203 x338 2) (=> (< 0 2) (= x338 (+ (* 2 (x2309 x338 2)) (x2202 x338 2))))))
(assert (and (x303 x1529 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x1529 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x1529 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1529 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x1529 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x1529 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= x711 (=> (and (or (and x1850 (= (x1199 (+ x574 x1219)) x2310)) (not x1850)) (= x1850 (< x1219 x1976))) x1765)))
(assert (x1602 x479))
(assert (x1602 x2540))
(assert (= (x825 224) 0))
(assert (x1602 x2165))
(assert (= (x643 (x1622 (x2164 320))) (x2164 320)))
(assert (= (=> (and (or (and (and (= x261 x2531) (= x291 x2211) (= x8 x1596) (= x1037 x1354) (= x115 x412) (= x83 x310)) (not x870)) (and (and (= x291 x2211) (= x115 x412) (= x2531 x261) (= (x1199 (+ x2354 x228)) x457) (= x2354 (ite (= 0 x115) x1470 0)) (= x83 x310) (= x1354 x1037) (= x228 (x657 (x1622 x1542))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2354 x228)) (= x8 x1596) (= (x74 (x1622 x1542)) x809) (= x1275 (- x809 x2354))) x870)) (= (= 0 x115) x870)) x632) x979))
(assert (= (=> (and (or (not x178) (and x178 (= (x1199 (+ x302 260)) x841))) (= x178 (> x999 x302))) x541) x177))
(assert (= (x643 (x1622 x900)) x900))
(assert (x1602 x160))
(assert (= (x643 (x808 x1086 x1247)) (+ (x643 x1086) x1247)))
(assert (= x67 (and x866 x661)))
(assert (x1602 x1248))
(assert (x1602 x2412))
(assert (= x2122 (and x1694 x1503)))
(assert (= (and x1450 x2493) x1537))
(assert (= x2367 (=> (and (= x1580 x226) (= x1505 x2140) (= x704 1) (= x1269 x36) (= x1255 x810)) x955)))
(assert (x615 x338))
(assert (x1602 x1255))
(assert (= (x1546 1030951317) (x1622 1030951317)))
(assert (= (and x649 (not x850)) x553))
(assert (x2495 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1602 x2296))
(assert (x1602 x1300))
(assert (x1602 x1535))
(assert (x1602 x2056))
(assert (= (x643 (x1622 (x712 224))) (x712 224)))
(assert (x1602 x2304))
(assert (= 3189536363 (x643 (x1546 3189536363))))
(assert (x1602 x2280))
(assert (= (and (not x1673) x1938) x1367))
(assert (= (and x16 x1063) x2516))
(assert (= (x1622 3948783980) (x1546 3948783980)))
(assert (x1602 x272))
(assert (= (and x1940 x870) x2336))
(assert (x1602 x480))
(assert (x2495 x1820))
(assert (x2246 x1302))
(assert (x1602 x1299))
(assert (x1602 x2149))
(assert (= (x525 192) (x643 (x1622 (x525 192)))))
(assert (= (=> (and (= x963 (x1199 (+ 128 x1204))) (= x963 x1734)) x334) x973))
(assert (x1602 x1581))
(assert (x1602 x1042))
(assert (x1602 x2432))
(assert (= (x1622 3018310333) (x1546 3018310333)))
(assert (= x54 (and x1767 (not x1305))))
(assert (and (x303 x1114 256) (x1404 x1114 256) (x2203 x1114 256) (=> (< 0 256) (= x1114 (+ (* 256 (x2309 x1114 256)) (x2202 x1114 256))))))
(assert (x1280 (x875 160)))
(assert (= (x643 (x1546 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1602 x829))
(assert (x1602 x1169))
(assert (= (x1110 192) (x643 (x1622 (x1110 192)))))
(assert (= (x643 (x808 x341 x2452)) (+ (x643 x341) x2452)))
(assert (x1602 x1879))
(assert (x1602 x2209))
(assert (x1602 x1637))
(assert (= (=> (and (= (x1904 128) x1489) (= (not (< 32 x1852)) x2045)) (and (=> (= x1040 32) x2293) x2045)) x113))
(assert (x344 x2296))
(assert (= x2042 (or x1993 (and x1109 (not x1716)))))
(assert (x1602 x1944))
(assert (and (x303 x674 256) (x1404 x674 256) (x2203 x674 256) (=> (< 0 256) (= x674 (+ (* 256 (x2309 x674 256)) (x2202 x674 256))))))
(assert (x1602 x1926))
(assert (= x1455 (=> (and (= x1634 x1729) (= 0 x2000)) x824)))
(assert (= (and x2383 x1836) x1990))
(assert (x1602 x679))
(assert (= x1633 (and x538 x823)))
(assert (=> (>= 10000 (x1869 256)) (= (x1622 (x1869 256)) (x1546 (x1869 256)))))
(assert (= (x123 292) 0))
(assert (x1280 (x1110 128)))
(assert (x1602 x2452))
(assert (= (x29 324) 0))
(assert (x1602 x702))
(assert (= x111 (or x620 x2517)))
(assert (and (x303 x633 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x633 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x633 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x633 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x633 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x633 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1602 x1610))
(assert (x1602 x2102))
(assert (x349 x1846))
(assert (and (x303 x481 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x481 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x481 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x481 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x481 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x481 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1602 x772))
(assert (x1602 x101))
(assert (x349 x1631))
(assert (= (and x1767 x1305) x2168))
(assert (=> (<= (x1110 288) 10000) (= (x1546 (x1110 288)) (x1622 (x1110 288)))))
(assert (and (x303 x2043 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2043 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2043 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2043 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2043 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2043 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= 3733007566 (x643 (x1546 3733007566))))
(assert (x1602 x2063))
(assert (= x348 (and (not x421) x30)))
(assert (and (x303 x2539 128) (x1404 x2539 128) (x2203 x2539 128) (=> (< 0 128) (= x2539 (+ (* 128 (x2309 x2539 128)) (x2202 x2539 128))))))
(assert (= (x525 288) (x643 (x1622 (x525 288)))))
(assert (x1602 x1523))
(assert (x1602 x1888))
(assert (= (and (not x1717) x1474) x2041))
(assert (= (and (not x1327) x1550) x670))
(assert (x1602 x1722))
(assert (x1602 x1041))
(assert (x1602 x1798))
(assert (x2495 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (= x249 (and (not x1954) x1466)))
(assert (x1602 x1297))
(assert (x1602 x1053))
(assert (x1602 x818))
(assert (x1602 x52))
(assert (x1602 x1753))
(assert (x1602 x217))
(assert (x1602 x650))
(assert (x1602 x1196))
(assert (= x1143 (or x561 x877)))
(assert (x1602 x158))
(assert (and (x303 x1419 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x1419 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x1419 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1419 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x1419 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x1419 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= x815 (=> (and (= x653 (= x1829 0)) (or (and (and (= x120 x2374) (= x725 x1612) (= x1806 x1668) (< (+ x2180 x2120) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1392 x1737) (= x2138 (- x742 x2120)) (= x1651 x603) (= (x588 (x1622 x1542)) x742) (= x2120 (ite (= x1829 0) x1470 0)) (= (x1199 (+ x2180 x2120)) x703) (= x1829 x1049) (= x2180 (x1287 (x1622 x1542)))) x653) (and (and (= x1737 x1392) (= x1612 x725) (= x1829 x1049) (= x2374 x120) (= x1668 x1806) (= x1651 x603)) (not x653)))) x1520)))
(assert (= (x643 (x808 x2396 x393)) (+ x393 (x643 x2396))))
(assert (= (=> (and (= x1162 (< x1944 x1518)) (or (and x1162 (= (x1199 (+ 164 x1944)) x93)) (not x1162))) x1497) x2066))
(assert (= x1953 (and (not x135) x1749)))
(assert (x349 x490))
(assert (x1602 x1834))
(assert (x1602 x1821))
(assert (= 0 (x954 288)))
(assert (x1602 x1819))
(assert (and (x303 x1114 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x1114 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x1114 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1114 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x1114 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x1114 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1602 x1178))
(assert (x1602 x633))
(assert (= 0 (x2191 260)))
(assert (= (and (not x63) x25) x944))
(assert (x1602 x1511))
(assert (x1280 (x525 288)))
(assert (= (and (=> x1254 x1916) (=> (and (and (= (x1199 (+ x423 1)) x2029) (= x591 (> x2029 x2048)) (= (x2309 x36 2) x423)) (not x1254)) (and (=> x591 x1916) (=> (and (and (<= 0 x513) (<= x513 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1900 (not (= x1693 x513)))) (not x591)) (and (=> (not x1900) x252) (=> (and (= x722 x1900) x1900) x1778)))))) x613))
(assert (x1602 x1321))
(assert (x1602 x2344))
(assert (x1602 x1377))
(assert (x1602 x2026))
(assert (=> (<= (x712 320) 10000) (= (x1546 (x712 320)) (x1622 (x712 320)))))
(assert (x1602 x2233))
(assert (x1280 (x875 192)))
(assert (= (=> (and (= (and (< (+ x780 x1470) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x1470 x939)) x1431) (= x780 (x2131 (x1622 x1542))) (= x212 x1219) (= x939 (x2131 (x1622 x1542)))) (and (=> (and (not x1431) (and (= 0 x1049) (= x1634 x725) (= x1651 x2140) (= x120 x1134) (= x1806 0) (= x1392 x810))) x1520) (=> (and x1431 (and (= x1822 (- x381 x1470)) (<= 100 x119) (= x487 (x1698 (x1622 x1542))) (= x212 x119) (= (x2245 (x1622 x1542)) x396) (< 0 x396) (= x381 (x2131 (x1622 x1542))) (= x187 (= 0 x1470)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x487 x1470)) (= x2158 (x1199 (+ x487 x1470))) (= (= (x1536 68) 0) x700) (= x1498 x1857) (= 50455196340412629536459377552246818957342304218644716315923982585962625499136 x2144) x700)) (and (=> (and (and (not (< x755 1680813743)) (not (< x119 4)) (= x755 1871487246) (not (< x755 839595567)) (> 2112976665 x755) (= x2063 (x1345 (- x119 4))) (not (< x755 1871487246)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2063) (and (> 64 x2063) (= true (<= x2063 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x339)) x187) (and (=> (and (and (= x1304 x1857) (= x896 (and (= true (<= x119 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x119 99)))) (not x339)) (and (=> (and x896 (and (= x1043 (x2359 68)) (= x2241 (> x1043 18446744073709551615)))) (and (=> x2241 x1428) (=> (and (and (= x1003 100) (= (< x119 x2433) x1364) (= x2433 (x1199 (+ x1043 100)))) (not x2241)) (and (=> x1364 x1428) (=> (and (= true x1159) (not x1364)) (and (=> (not x1159) x1428) (=> (and (and (= (> x1857 x1134) x1438) (or (and (= x902 x1438) x1438) (and (and (= x902 (ite x2089 x2089 (= 0 x1134))) (= x2089 (= 0 x1304))) (not x1438)))) x1159) x204))))))) (=> (not x896) x1428))) (=> x339 x1428))) (=> (not x187) x1428))))) x1765))
(assert (= (x1622 33277650900348105781121326340019631498405652329376380866381358124409588547584) (x1546 33277650900348105781121326340019631498405652329376380866381358124409588547584)))
(assert (x1602 x1719))
(assert (x1602 x2097))
(assert (x1602 x1737))
(assert (= (=> (and (= x2132 x916) (= x1446 x1134) (= 0 x769) (= x171 x360) (= x2064 x1060) (= x520 x810)) x2297) x2187))
(assert (= x1534 (and x1228 x181)))
(assert (= (and x868 x1557) x1399))
(assert (and (x303 x2540 128) (x1404 x2540 128) (x2203 x2540 128) (=> (< 0 128) (= x2540 (+ (* 128 (x2309 x2540 128)) (x2202 x2540 128))))))
(assert (x1602 x1177))
(assert (x1602 x445))
(assert (x1602 x1329))
(assert (= (and (not x322) x2503) x1918))
(assert (= (+ x1134 (x643 x2228)) (x643 (x808 x2228 x1134))))
(assert (x1602 x1483))
(assert (x1602 x2300))
(assert (x1602 x1045))
(assert (x1602 x2519))
(assert (x349 x2051))
(assert (x1602 x2074))
(assert (x1602 x2258))
(assert (= (x1546 839595567) (x1622 839595567)))
(assert (= (and x2068 x906) x608))
(assert (= (and (=> (and (and (= x2298 (x2309 x1134 2)) (= x987 (< x513 x2249)) (= (x1199 (+ 1 x2298)) x2249)) (not x1506)) (and (=> x987 x1481) (=> (and (not x987) (and (= x878 false) (>= x513 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x513))) (and (=> (not x878) x224) (=> (and x878 (= x878 x977)) x2034))))) (=> x1506 x1481)) x1807))
(assert (= (=> (and (<= x513 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1067 true) (<= 0 x513)) (and (=> (and x1067 (and (= x1816 (> x513 x1134)) (or (and x1816 (= x1816 x1506)) (and (and (= (ite x1513 x1513 (= x1134 0)) x1506) (= x1513 (= x513 0))) (not x1816))))) x1807) (=> (not x1067) x1481))) x12))
(assert (x1602 x2316))
(assert (x1602 x2523))
(assert (= (=> (= x1381 (< x1134 1)) (and x1381 x909)) x368))
(assert (x1602 x2028))
(assert (x349 x78))
(assert (x1602 x2301))
(assert (x1602 x1815))
(assert (= (=> (and (= (not (< (x643 x1244) (x643 x782))) x96) (= x1244 (x808 x1939 1))) (and x1441 x96)) x2137))
(assert (= (x1546 115792089237316195423570985008687907853269984665640564039457484007913129639935) (x1622 115792089237316195423570985008687907853269984665640564039457484007913129639935)))
(assert (= (x1622 1461501637330902918203684832716283019655932542975) (x1546 1461501637330902918203684832716283019655932542975)))
(assert (and (x303 x2399 2) (x1404 x2399 2) (x2203 x2399 2) (=> (< 0 2) (= x2399 (+ (* 2 (x2309 x2399 2)) (x2202 x2399 2))))))
(assert (x349 x338))
(assert (= (x1546 24341557) (x1622 24341557)))
(assert (= (=> (and (and (= false x2320) (= x2262 x1215) (< 0 x1542) (not (> 3081457077 x1656)) (>= 1461501637330902918203684832716283019655932542975 x1282) (= false x2313) (<= 0 x2031) (= x2007 (< 0 (x2245 (x1622 x1542)))) (<= 0 x2319) (>= 1461501637330902918203684832716283019655932542975 x2031) (= (x2245 (x1622 x1542)) x1024) (= x1681 false) (not (< x1656 2112976665)) (= x2140 x278) (>= x1640 0) (= x126 x1507) x1085 (= x1656 3189536363) (>= 1461501637330902918203684832716283019655932542975 x1215) (<= 0 x126) (>= 255 x1640) (>= 1461501637330902918203684832716283019655932542975 x2019) (= x1085 (and x1030 x278)) (>= x2019 0) (= (x2131 (x1622 x1542)) x2091) (<= x2130 255) (< x1656 3285302901) (<= 0 x1282) (<= x2319 4294967295) (<= 0 x2130) (not (= 3081457077 x1656)) (= 0 x2519) (<= x126 1461501637330902918203684832716283019655932542975) (<= 0 x2091) (< x1656 3733007566) (<= x1542 1461501637330902918203684832716283019655932542975) (< 0 x1024) (= x2149 x1920) (= false x664) (= x834 x2016) x2007 (= x515 1) (>= x1215 0) (= x2102 x1134) (= 3285302901 x1647) (= (= 0 x1920) x1030)) (and (and (= 3050870311 x1788) (> x500 0) (not (= 2923951457 x1788)) (not (< x1788 2867924802)) (not (< x1788 2726977199)) (not (< x1788 2112976665)) (not (= 2867924802 x1788)) (= (x2245 (x1622 x1542)) x500) (= (< x834 x1541) x211) (> 3081457077 x1788) (= x2016 x772) (not (= x1788 3018310333)) (= x538 (> x1134 x772)) (= x1541 x2102)) (or (and (and (= x2149 x554) (= x2255 0)) (not x538)) (and x538 (and (< x771 1461501637330902918203684832716283019655932542976) (= x2025 (x1199 (+ x1476 x2149))) (= x2460 (>= x2161 x2149)) (= (not (= x556 x772)) x1927) (<= 0 x771) (= (= x772 x1730) x533) (= (or x215 (not x2537)) x1919) (= (ite x2411 x1180 x536) x1476) (= (not (= x771 0)) x2232) (= x2456 (ite x2411 x2149 x1815)) (= (x910 x772) x2161) (= x180 (x808 x2414 x772)) (= (x2379 x771) x1730) (= x2255 x771) (= x556 (x1863 x2161)) (= (or x533 (not x2232)) x215) (= x2251 1) (= x771 (x2397 x180)) (= x502 0) (= (x910 x772) x1815) (= x536 (x1184 x502)) x1919 (< x772 x1134) (= x2025 x554) (<= x771 1461501637330902918203684832716283019655932542975) (= x1180 (x1184 x2251)) (= x2537 (and x2411 x2140)) (= (or x1927 x2460) x2411) (= (x2162 (x1546 1) 0) x2414)))))) x535) x1179))
(assert (=> (<= (x1501 320) 10000) (= (x1622 (x1501 320)) (x1546 (x1501 320)))))
(assert (= (x643 (x1622 x1357)) x1357))
(assert (and (x303 x2051 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2051 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2051 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2051 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2051 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2051 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= 3050870311 (x643 (x1546 3050870311))))
(assert (= (x643 (x1546 839595567)) 839595567))
(assert (x1602 x1930))
(assert (= x790 (and x534 x2079)))
(assert (x1280 (x712 224)))
(assert (and (x303 x2067 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2067 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2067 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2067 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2067 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2067 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1602 x1406))
(assert (= 0 (x1459 320)))
(assert (= (and x23 x1052) x932))
(assert (= 1234336674 (x643 (x1546 1234336674))))
(assert (= (and x13 x2237) x581))
(assert (x1602 x1563))
(assert (x1602 x830))
(assert (x1602 x998))
(assert (= x1316 (and (not x2408) x959)))
(assert (= x1950 (or x569 x537)))
(assert (x1602 x209))
(assert (x1602 x1451))
(assert (x1602 x2389))
(assert (x1602 x347))
(assert (x1616 x1170))
(assert (= (and x915 x187) x1671))
(assert (x1602 x2257))
(assert (= (=> (and (= (>= 224 x1135) x837) (= x1135 (x1345 (- x1734 128)))) (and (=> (and (= (not x920) x977) (= (ite (>= 32 x1135) (x2162 (x1622 (x875 128)) 0) (ite (<= x1135 64) (x173 (x1622 (x875 128)) (x1622 (x875 160)) 0) (ite (>= 96 x1135) (x2109 (x1622 (x875 128)) (x1622 (x875 160)) (x1622 (x875 192)) 0) (ite (<= x1135 128) (x346 (x1622 (x875 128)) (x1622 (x875 160)) (x1622 (x875 192)) (x1622 (x875 224)) 0) (ite (>= 160 x1135) (x401 (x1622 (x875 128)) (x1622 (x875 160)) (x1622 (x875 192)) (x1622 (x875 224)) (x1622 (x875 256)) 0) (ite (<= x1135 192) (x748 (x1622 (x875 128)) (x1622 (x875 160)) (x1622 (x875 192)) (x1622 (x875 224)) (x1622 (x875 256)) (x1622 (x875 288)) 0) (ite (>= 224 x1135) (x1638 (x1622 (x875 128)) (x1622 (x875 160)) (x1622 (x875 192)) (x1622 (x875 224)) (x1622 (x875 256)) (x1622 (x875 288)) (x1622 (x875 320)) 0) (x1622 x1794)))))))) x151) (= x920 (= x151 x1253))) x2034) x837)) x334))
(assert (x1602 x474))
(assert (x1602 x2264))
(assert (x1602 x2273))
(assert (= x2256 (and x335 (not x908))))
(assert (= x587 (or x176 x893)))
(assert (=> (<= (x525 256) 10000) (= (x1546 (x525 256)) (x1622 (x525 256)))))
(assert (x1602 x374))
(assert (and (x303 x1713 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x1713 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x1713 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1713 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x1713 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x1713 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= (x1622 (x643 x385)) x385))
(assert (= x1664 (=> (and (= x2198 x1596) (= x328 x1354) (= x412 x1569) (= x1491 x261) (= x2211 x631)) x1378)))
(assert (x1602 x1921))
(assert (= (and (not x1929) x1611) x1186))
(assert (x349 x1676))
(assert (= x2293 (=> (and (or (not x1327) (and (= x2213 (x1199 (+ x1852 260))) x1327)) (= x1327 (> x1040 x1852))) x676)))
(assert (x1602 x1487))
(assert (and (x303 x1599 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x1599 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x1599 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1599 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x1599 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x1599 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1280 x1542))
(assert (= x1211 (and x1132 x79)))
(assert (= x70 (=> (and (= x534 (< x1169 x1092)) (or (not x534) (and x534 (= (x1199 (+ 164 x1169)) x1606)))) x779)))
(assert (and (x303 x883 256) (x1404 x883 256) (x2203 x883 256) (=> (< 0 256) (= x883 (+ (* 256 (x2309 x883 256)) (x2202 x883 256))))))
(assert (= x2254 (and x1341 x2538)))
(assert (x1602 x1710))
(assert (x2495 x530))
(assert (x1602 x36))
(assert (x1602 x2064))
(assert (and (x303 x733 2) (x1404 x733 2) (x2203 x733 2) (=> (< 0 2) (= x733 (+ (* 2 (x2309 x733 2)) (x2202 x733 2))))))
(assert (x1602 x33))
(assert (= x941 (or x947 x14)))
(assert (= x1670 (and x582 x1531)))
(assert (x1602 x1352))
(assert (= (or x888 x1544) x2135))
(assert (x1602 x544))
(assert (= (or x1189 (and x915 (not x187)) (and x1671 x339) x2287 x9 x2393 (and (not x896) x757) x377 (and x1696 x1364) x2391 (and x792 x2241)) x2214))
(assert (x1602 x1118))
(assert (= x1687 x2512))
(assert (x349 x530))
(assert (= (and x1517 x167) x1999))
(assert (x1602 x194))
(assert (x1602 x1642))
(assert (x1280 (x460 128)))
(assert (= (and x498 x179) x2248))
(assert (x2495 x1561))
(assert (x1602 x606))
(assert (x1280 (x712 256)))
(assert (x1602 x1755))
(assert (x1280 x681))
(assert (=> (<= x2255 10000) (= (x1546 x2255) (x1622 x2255))))
(assert (x1280 (x712 320)))
(assert (and (x303 x2363 26959946667150639794667015087019630673637144422540572481103610249216) (x1404 x2363 26959946667150639794667015087019630673637144422540572481103610249216) (x2203 x2363 26959946667150639794667015087019630673637144422540572481103610249216) (=> (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (= x2363 (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 (x2309 x2363 26959946667150639794667015087019630673637144422540572481103610249216)) (x2202 x2363 26959946667150639794667015087019630673637144422540572481103610249216))))))
(assert (= x491 (and (not x866) x661)))
(assert (x349 x585))
(assert (x1280 x1810))
(assert (x1322 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (= (and x1575 x767) x1160))
(assert (x1602 x2355))
(assert (=> (<= (x875 160) 10000) (= (x1546 (x875 160)) (x1622 (x875 160)))))
(assert (= (and x1739 x222) x1576))
(assert (=> (<= (x2164 160) 10000) (= (x1622 (x2164 160)) (x1546 (x2164 160)))))
(assert (x1602 x2484))
(assert (x182 x2236))
(assert (x1602 x397))
(assert (x1602 x1150))
(assert (=> (<= x402 10000) (= (x1546 x402) (x1622 x402))))
(assert (x1602 x2175))
(assert (= (and x369 x1011) x1697))
(assert (= (x1501 320) (x643 (x1622 (x1501 320)))))
(assert (x1602 x1006))
(assert (= x1000 (=> (= x1025 (not (< 1 x1134))) (and (=> (= x2328 x655) x41) x1025))))
(assert (= (x1869 224) (x643 (x1622 (x1869 224)))))
(assert (= (or x392 x1777) x2503))
(assert (= x1039 (or x1865 (and x102 (not x977)))))
(assert (x1602 x2051))
(assert (x1602 x307))
(assert (x1602 x1013))
(assert (x1602 x2496))
(assert (x1602 x340))
(assert (= x2322 (and x565 x1261)))
(assert (and (x303 x1820 32) (x1404 x1820 32) (x2203 x1820 32) (=> (< 0 32) (= x1820 (+ (* 32 (x2309 x1820 32)) (x2202 x1820 32))))))
(assert (= (and (not x584) x640) x2247))
(assert (= x1387 (and x1438 x2502)))
(assert (x1602 x2450))
(assert (= (=> (= x882 (= 0 x2000)) (and (=> (and (not x882) (and (and (= x953 (x654 x2356)) (>= x953 0) (= (= 0 x953) x109) (= (x173 (x1622 x2475) (x1546 7) 0) x1207) (= x1639 (x1849 x237)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1639) (= x2356 (x808 x1207 3)) (<= 0 x1639) (<= x953 255) (> 256 x953) (= (x808 x1207 1) x237)) (or (and (not x109) (and (= x2039 x1470) (= x2039 (x1345 (- x1639 100000000000000000))) (not (> 100000000000000000 x1639)))) (and (= x1470 x1639) x109)))) x1447) (=> (and (and (= x2140 x2252) (= x784 x1134) (= x430 x1634)) x882) x416))) x824))
(assert (= x1724 (and x1379 x256)))
(assert (x1602 x2413))
(assert (=> (>= 10000 (x875 224)) (= (x1622 (x875 224)) (x1546 (x875 224)))))
(assert (= (and x1431 x1277) x915))
(assert (x1602 x2334))
(assert (=> (>= 10000 (x875 256)) (= (x1622 (x875 256)) (x1546 (x875 256)))))
(assert (x1602 x2188))
(assert (x349 x1004))
(assert (x1602 x2405))
(assert (= (=> (and (= x559 (x1345 (- x998 128))) (= x2403 (>= 224 x559))) (and (=> (and (= x1465 (= x2465 x1818)) (= (not x1465) x2186) (= (ite (<= x559 32) (x2162 (x1622 (x2164 128)) 0) (ite (>= 64 x559) (x173 (x1622 (x2164 128)) (x1622 (x2164 160)) 0) (ite (<= x559 96) (x2109 (x1622 (x2164 128)) (x1622 (x2164 160)) (x1622 (x2164 192)) 0) (ite (<= x559 128) (x346 (x1622 (x2164 128)) (x1622 (x2164 160)) (x1622 (x2164 192)) (x1622 (x2164 224)) 0) (ite (<= x559 160) (x401 (x1622 (x2164 128)) (x1622 (x2164 160)) (x1622 (x2164 192)) (x1622 (x2164 224)) (x1622 (x2164 256)) 0) (ite (<= x559 192) (x748 (x1622 (x2164 128)) (x1622 (x2164 160)) (x1622 (x2164 192)) (x1622 (x2164 224)) (x1622 (x2164 256)) (x1622 (x2164 288)) 0) (ite (>= 224 x559) (x1638 (x1622 (x2164 128)) (x1622 (x2164 160)) (x1622 (x2164 192)) (x1622 (x2164 224)) (x1622 (x2164 256)) (x1622 (x2164 288)) (x1622 (x2164 320)) 0) (x1622 x1386)))))))) x1818)) x417) x2403)) x2325))
(assert (=> (>= 10000 (x875 320)) (= (x1622 (x875 320)) (x1546 (x875 320)))))
(assert (= (and x1414 x1560) x806))
(assert (x1602 x1679))
(assert (= x1787 (and x672 (not x2406))))
(assert (x349 x208))
(assert (= x905 (and x1174 x2504)))
(assert (= x911 (=> (and (= x2355 x1667) (= x1896 x34)) x62)))
(assert (x1280 (x1110 160)))
(assert (=> (<= (x712 128) 10000) (= (x1622 (x712 128)) (x1546 (x712 128)))))
(assert (x1602 x1775))
(assert (x1602 x2029))
(assert (x1602 x1456))
(assert (x1602 x1342))
(assert (= (x643 (x1546 24341557)) 24341557))
(assert (= (and (not x210) x986) x2172))
(assert (= x838 (or x1568 x2282)))
(assert (x1602 x761))
(assert (x1620 x991))
(assert (x1602 x496))
(assert (= x511 (and x2133 x2482)))
(assert (x1602 x1394))
(assert (x1602 x1232))
(assert (x1602 x1934))
(assert (x1602 x687))
(assert (= x1777 (or x1157 x762)))
(assert (=> (<= (x1869 288) 10000) (= (x1622 (x1869 288)) (x1546 (x1869 288)))))
(assert (x349 x1195))
(assert (x349 x2445))
(assert (= (x1546 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1622 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1602 x2451))
(assert (= x14 (and x2217 x1286)))
(assert (x1602 x1656))
(assert (x349 x1410))
(assert (x1602 x1219))
(assert (x182 x2399))
(assert (and (x303 x2423 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2423 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2423 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2423 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2423 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2423 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1602 x1726))
(assert (= (and (not x1503) x1694) x974))
(assert (x1602 x928))
(assert (= (x875 160) (x643 (x1622 (x875 160)))))
(assert (= x1432 (x643 (x1622 x1432))))
(assert (x349 x1013))
(assert (x1602 x1412))
(assert (= (and x961 x1971) x2372))
(assert (= x719 (or x2229 x358)))
(assert (x1602 x253))
(assert (= x86 (or x634 x2336 x1367)))
(assert (x1602 x437))
(assert (and (x303 x2454 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2454 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2454 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2454 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2454 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2454 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1602 x1049))
(assert (= x779 (=> (and (= (x2131 (x1622 x1542)) x329) (= 164 x413) (= x2450 (x1199 (+ 164 x1169))) (= x1493 (x1345 (- x2450 164))) (= (and (<= x1470 x267) (< (+ x1470 x329) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1457) (= (x2131 (x1622 x1542)) x267)) (and (=> (and (and (= 0 x391) (= x1634 x1784) (= x397 x810) (= x352 x1134) (= x2524 0) (= x1658 x2140)) (not x1457)) x2425) (=> (and x1457 (and (= x1493 x2267) (= x1593 (- x1811 x1470)) (= x435 (x1619 (x1622 x1542))) (= (x2245 (x1622 x1542)) x166) (= x2267 4) (= (= x1470 0) x1341) (< (+ x1470 x435) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1811 (x2131 (x1622 x1542))) (> x166 0) (= 56965738197333823925951794324075424010313516842063129668313081903848242544640 x1331) (= x378 (x1199 (+ x435 x1470))))) (and (=> (and x1341 (and (not (> 4 x2267)) (< x1482 3081457077) (<= 0 x2031) (= (< 0 x33) x745) (< x1482 2726977199) (> 2279315017 x1482) (<= x2031 1461501637330902918203684832716283019655932542975) (= x1482 2112976665) (> 1461501637330902918203684832716283019655932542976 x2031) (>= x1498 0) (<= x1498 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> 2112976665 x1482)) (= x33 (x890 96)))) (and (=> x745 x2021) (=> (and (not x745) (= 0 x988)) x739))) (=> (and (not x1341) (and (= x2132 x1634) (= x2140 x360))) x2187)))))))
(assert (x1602 x1470))
(assert (x1602 x2150))
(assert (x615 x1917))
(assert (= (=> (and (= x704 0) (= x2140 x1505) (= x810 x1255) (= x1134 x1269) (= x1634 x226)) x955) x1916))
(assert (x1602 x520))
(assert (= (and (not x390) x1294) x1027))
(assert (x1602 x1599))
(assert (= x2034 (and (=> (not x977) x318) (=> (and (and (= (ite (< 0 x2478) x1004 (x715 127 x1004)) x2123) (= x1004 (x2309 x1114 2)) (= (> 32 x2123) x1996) (= (x715 1 x1114) x2478) (= (= x2478 (ite x1996 1 0)) x222)) x977) (and (=> (and (not x222) (and (= (x2309 x509 32) x2409) (= x2509 (> x1908 0)) (= x2253 (x808 x442 x2409)) (= x442 (x2162 (x1546 5) 0)) (= x509 (x1199 (+ x2123 31))))) (and (=> (and (= (< 31 x1908) x582) x2509) (and (=> (and x582 (and (= (< 132 x737) x389) (= (x1199 (+ 1 x598)) x2355) (= (x1199 (+ 132 x1908)) x737) (= (x1199 (+ x1908 x1908)) x598))) (and (=> (and (= x442 x34) (not x389)) x911) (=> x389 x548))) (=> (and (and (= x1896 x442) (= x2270 (<= x1302 255)) (= x1302 (x1199 (+ x1908 x1908))) (= (x2139 x1302 x478) x1604) (= x1988 (x1199 (+ x478 x1302))) (= x2434 (>= 255 x1302)) (= x2353 (x1199 (+ x478 x1302))) (= (ite x2434 x1988 x1604) x43) (= x1667 (ite x2270 x2353 x43)) (= (x715 115792089237316195423570985008687907853269984665640564039457584007913129639680 x481) x478) (= x481 (x1123 132))) (not x582)) x62))) (=> (and (and (= x1667 0) (= x442 x1896)) (not x2509)) x62))) (=> x222 x1481))))))
(assert (x1602 x1161))
(assert (x1602 x2177))
(assert (= (x643 (x1622 (x1110 224))) (x1110 224)))
(assert (x1602 x2181))
(assert (x2495 x2454))
(assert (= (=> (and (or x1239 (not x1239)) (= x1239 (= 0 x704))) x1925) x955))
(assert (x1602 x2255))
(assert (x1602 x88))
(assert (=> (>= 10000 (x712 256)) (= (x1622 (x712 256)) (x1546 (x712 256)))))
(assert (x1602 x2286))
(assert (x1602 x2333))
(assert (x1280 (x875 128)))
(assert (= (=> (= (not (< 32 x706)) x874) (and x874 x752)) x1166))
(assert (x1602 x497))
(assert (x1280 (x2164 288)))
(assert (x1602 x2025))
(assert (x1602 x2376))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x643 (x1546 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (= (and x1258 x59) x1705))
(assert (x1602 x1360))
(assert (x1602 x2454))
(assert (x2495 x551))
(assert (and (x1522 x2236 32) (x2090 x2236 32) (= (- x2236 (x715 31 x2236)) (* (x2309 x2236 32) 32)) (x131 x2236 32) (=> (and (> x2236 0) (> 32 0)) (and (> (* (x2309 x2236 32) 32) (- x2236 32)) (>= x2236 (* (x2309 x2236 32) 32)))) (x2030 x2236 32)))
(assert (= (or x1943 x1421 x1029) x2032))
(assert (x1602 x2016))
(assert (x1602 x996))
(assert (= (and x614 (not x1254)) x357))
(assert (x349 x2154))
(assert (=> (>= 10000 (x2164 256)) (= (x1622 (x2164 256)) (x1546 (x2164 256)))))
(assert (x1280 (x1869 160)))
(assert (x2495 x1114))
(assert (= x2112 (and x570 x2498)))
(assert (= (and x1715 x727) x1209))
(assert (and (x303 x551 128) (x1404 x551 128) (x2203 x551 128) (=> (< 0 128) (= x551 (+ (* 128 (x2309 x551 128)) (x2202 x551 128))))))
(assert (= x986 (and x1307 (not x2244))))
(assert (x1602 x2234))
(assert (= (and (not x2303) x56) x1839))
(assert (x1602 x623))
(assert (x1602 x880))
(assert (x1602 x1165))
(assert (x1602 x330))
(assert (= (=> (and (= x384 (x2131 (x1622 x1542))) (= x1272 (x2131 (x1622 x81))) (= x2508 (and (< (+ x1470 x1272) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x1470 x384)))) (and (=> (and (not x2508) (and (= 0 x68) (= 0 x400))) x1967) (=> (and (and (and (= (< 0 x231) x1565) (= x993 (- x1648 x1470)) (= x1393 (x1538 (x1622 x81))) (< (+ x1393 x1470) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1648 (x2131 (x1622 x1542))) (= x669 (x1199 (+ x1393 x1470)))) (or (not x1565) (and (and x114 (= (x731 (x1622 x81)) x467) (< x851 4294967296) (= x114 (= (x254 (x1622 x81)) x467)) (= (x731 (x1622 x1542)) x1768) x2532 (= x2532 (<= x1768 (x254 (x1622 x1542))))) x1565))) x2508) x1469))) x149))
(assert (x1602 x666))
(assert (= x1458 (or x300 x2210)))
(assert (x1602 x1858))
(assert (x1602 x1292))
(assert (x1602 x2382))
(assert (x1602 x1097))
(assert (x349 2))
(assert (x1602 x2171))
(assert (= x2268 (=> (= (not (> x1134 1)) x685) (and x685 (=> (= x1729 x1972) x1455)))))
(assert (x1602 x2225))
(assert (= (and (not x1261) x565) x2075))
(assert (= x30 (and x747 x667)))
(assert (= x1655 x2013))
(assert (x1602 x2001))
(assert (x1280 (x1869 288)))
(assert (and (x303 x1820 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x1820 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x1820 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1820 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x1820 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x1820 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1280 (x1869 320)))
(assert (= (and x1143 (not x1506)) x1089))
(assert (= (and x1950 x1586) x2462))
(assert (x1602 x1430))
(assert (x1602 x1745))
(assert (= x2189 (=> (= (not (> x474 32)) x308) (and x2065 x308))))
(assert (= (and x175 x1905) x2493))
(assert (x1602 x2331))
(assert (x1280 (x525 160)))
(assert (= (=> (and (= (not (< 164 x737)) x800) (= (x808 x442 1) x2119)) (and (=> (= x2119 x34) x911) x800)) x548))
(assert (= (or x1591 x2214) x1423))
(assert (x1602 x1561))
(assert (x1602 x1347))
(assert (= (x460 224) (x643 (x1622 (x460 224)))))
(assert (= 0 (x2350 224)))
(assert (= x888 (and (not x1912) x876)))
(assert (x1602 x1540))
(assert (= (or x1589 x1508 x499) x2210))
(assert (x1280 (x1110 320)))
(assert (= (=> (and (= x619 x397) (= x1658 x2277) (= x352 x2280) (= x391 x2001) (= x1784 x2405)) x984) x2212))
(assert (x1602 x326))
(assert (= (x643 (x1546 1030951317)) 1030951317))
(assert (= (and x1147 x1672) x697))
(assert (= (x2481 288) 0))
(assert (=> (<= x363 10000) (= (x1622 x363) (x1546 x363))))
(assert (x1602 x165))
(assert (x1602 x1426))
(assert (and (x303 x2257 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2257 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2257 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2257 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2257 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2257 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= x1867 (and (not x1237) x2453)))
(assert (= x541 (=> (and (= x994 (= 0 x1240)) (= x2454 (x1199 (+ x302 31))) (= 128 x121) (= x1914 (x1199 (+ 260 x1675))) (= x1240 (x2245 (x1622 x1542))) (= x1675 (x715 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2454)) (= x2163 (x1345 (- x1914 128)))) (and (=> (and (not x994) (and (= 33277650900348105781121326340019631498405652329376380866381358124409588547584 x386) (< x1915 1680813743) (> x2340 0) (= (x2245 (x1622 x1542)) x2340) (= x218 (or (and (= (<= x2284 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x2284)) (> x2284 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1955 x1282) x2240 (< x1915 2112976665) (= (= (x1478 100) x302) x2240) (>= x1977 132) (= x2451 x1498) (not (= x1915 1030951317)) (not (< x1915 1030951317)) (not (< x1977 4)) (= x1977 x2163) (= x1915 1234336674) (not (= x1915 1039635593)) (= x2284 (x1345 (- x1977 4))) (not (< x1915 839595567)))) (and (=> (and x218 (and (= x810 x2344) (= x1499 x1634) (= x2140 x1951) (= x259 0) (= x1483 x1134))) x2441) (=> (and (not x218) (and (= x1009 x1955) (= x2327 (= x1282 x1955)))) (and (=> (and (not x2327) (and (= x1951 x2140) (= x1483 x1134) (= 0 x259) (= x1499 x1634) (= x2344 x810))) x2441) (=> (and (and (= x2451 x2074) (= x2408 (and (> x1977 131) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1977) true)))) x2327) (and (=> (and (not x2408) (and (= x1499 x1634) (= x259 0) (= x1134 x1483) (= x810 x2344) (= x2140 x1951))) x2441) (=> (and (and (= (> x840 18446744073709551615) x1598) (= x840 (x309 100))) x2408) (and (=> (and (and (= x2344 x810) (= x1483 x1134) (= x1634 x1499) (= x259 0) (= x2140 x1951)) x1598) x2441) (=> (and (not x1598) (and (= 132 x981) (= (x1199 (+ 132 x840)) x1377) (= (< x1977 x1377) x1132))) (and (=> (and (and (= x2140 x1951) (= x1634 x1499) (= x810 x2344) (= x259 0) (= x1483 x1134)) x1132) x2441) (=> (and (= x1557 true) (not x1132)) (and (=> (and (not x1557) (and (= x259 0) (= x2140 x1951) (= x2344 x810) (= x1134 x1483) (= x1634 x1499))) x2441) (=> (and x1557 (and (= x242 (x173 (x1622 x1955) (x1546 2) 0)) (>= 255 x931) (< x931 256) (= (x305 x242) x931) (<= 0 x931) (= x677 (> x931 0)))) (and (=> (and (and (= x1909 (< x1134 1)) (= 0 x606)) x677) (and (=> x1909 x909) (=> (and (and (= x651 (< 0 x2219)) (= (x1345 (- x1134 1)) x2219)) (not x1909)) (and (=> (and x651 (= x2278 (< 0 x1134))) (and (=> (and (not x2278) (and (= x2344 x810) (= x1951 x2140) (= 0 x259) (= x1634 x1499) (= x1483 x1134))) x2441) (=> (and x2278 (and (= (x1199 (+ x240 x1634)) x2360) (= x773 (x1184 x1529)) (= (or (not x2290) x972) x1769) (= x1983 (or (not x734) x1769)) (= 0 x596) (= x13 (= x1955 x1757)) (< x1757 1461501637330902918203684832716283019655932542976) (= (x1898 x48) x793) (= (x2162 (x1546 1) 0) x1435) (= x240 (ite x618 x1989 x773)) (= (and x2140 x618) x734) (= x1435 x207) (= (x2379 x1757) x1978) (= x618 (or x2044 x46)) (= x1529 0) (= 0 x1859) (= (not (= 0 x1757)) x2290) (= (<= x1634 x48) x2044) (= (x1184 x331) x1989) x1983 (= x331 1) (<= x1757 1461501637330902918203684832716283019655932542975) (= x1600 (x1504 x1859)) (= (not (= 0 x793)) x46) (<= 0 x1757) (= (= x1978 0) x972) (= 0 x576) (= x48 (x1504 x576)) (= (x2397 x207) x1757) (= x1380 0) (= x1753 (ite x618 x1634 x1600)))) (and (=> (and x13 (= (< x1134 1) x1899)) (and (=> (and x1899 (and (= x1499 x1634) (= x1483 x1134) (= x2140 x1951) (= x810 x2344) (= 0 x259))) x2441) (=> (and (and (= x760 (x1345 (- x1134 1))) (= x1112 (< x760 x1134))) (not x1899)) (and (=> (and x1112 (and (= (or x729 (not x827)) x2077) (< x1834 1461501637330902918203684832716283019655932542976) (= x1383 (and x1127 x2140)) (= (x1199 (+ x2360 x2347)) x277) (= x1662 (x2379 x1834)) (= (x1184 x2446) x2412) (= x650 (x1184 x2051)) (= x2347 (ite x1127 x650 x2412)) (= x833 (x1949 x326)) (<= x1834 1461501637330902918203684832716283019655932542975) (= (<= x2360 x326) x635) (= (or x1646 x635) x1127) (= (not (= x760 x833)) x1646) (= x2051 1) x250 (= x1252 (x2162 (x1546 1) 0)) (= x1305 (< 0 x1134)) (= (x763 x760) x2052) (>= x1834 0) (= (x763 x760) x326) (= x1834 (x2397 x847)) (= x847 (x808 x1252 x760)) (= (not (= x1834 0)) x827) (= (or (not x1383) x2077) x250) (= x2342 (ite x1127 x2360 x2052)) (= (= x1662 x760) x729) (= x2446 0))) (and (=> (and (and (= (x1368 x966) x1264) (= x1876 x803) (= x163 (not (= x1264 0))) (= x2326 (x1199 (+ x277 x1956))) (= 0 x1419) (= x2076 (not (= 0 x1376))) (= x2067 1) (= x1376 (x2397 x1876)) (= (or (not x2407) x639) x1883) (= 0 x1721) (= x365 0) (= (x2162 (x1546 1) 0) x803) (= x1930 (x1184 x2067)) (= (x1184 x1419) x169) (= x1956 (ite x2480 x1930 x169)) (>= x1376 0) (= x2291 (= x2111 0)) (= (ite x2480 x277 x1136) x1722) (<= x1376 1461501637330902918203684832716283019655932542975) (= 0 x922) (= x2407 (and x2480 x2140)) (= (or x366 x163) x2480) (= x243 x2326) (= (x2379 x1376) x2111) x1883 (= (x1148 x365) x1136) (= x639 (or x2291 (not x2076))) (= x366 (<= x277 x966)) (= x1045 0) (= x966 (x1148 x1721))) x1305) x1203) (=> (and (and (= x810 x2344) (= x2140 x1951) (= x1499 x1634) (= x259 0) (= x1134 x1483)) (not x1305)) x2441))) (=> (and (and (= 0 x259) (= x1951 x2140) (= x1134 x1483) (= x1634 x1499) (= x810 x2344)) (not x1112)) x2441))))) (=> (not x13) x368))))) (=> (and (= x243 x1634) (not x651)) x1203))))) (=> (and (and (= x1951 x2140) (= 0 x259) (= x1634 x1499) (= x1483 x1134) (= x810 x2344)) (not x677)) x2441))))))))))))))) (=> (and (and (= x115 0) (= x291 x1134) (= x310 x978) (= x1634 x1037) (= x810 x8) (= x2140 x2531)) x994) x979)))))
(assert (x1602 x1269))
(assert (x1602 x2360))
(assert (x1602 x1007))
(assert (= x1527 (and x667 (not x747))))
(assert (= x1880 (and x73 x1239)))
(assert (=> (>= 10000 (x1869 224)) (= (x1546 (x1869 224)) (x1622 (x1869 224)))))
(assert (x1602 x1065))
(assert (x1602 x567))
(assert (x1602 x2211))
(assert (x1602 x1878))
(assert (= 0 (x432 96)))
(assert (= x184 (or x2100 x971)))
(assert (x1602 x1857))
(assert (x1280 x431))
(assert (x1602 x1615))
(assert (x1602 x963))
(assert (x1602 x69))
(assert (x1602 x2142))
(assert (= 0 (x1913 224)))
(assert (= 3948783980 (x643 (x1546 3948783980))))
(assert (x1602 x737))
(assert (x1602 x2326))
(assert (x1602 x2427))
(assert (x1602 x2339))
(assert (= (x643 (x1622 x402)) x402))
(assert (= x1088 (=> (and (= x1939 x636) (= x733 x2181)) x337)))
(assert (x1602 x2052))
(assert (and (x303 x1991 128) (x1404 x1991 128) (x2203 x1991 128) (=> (< 0 128) (= x1991 (+ (* 128 (x2309 x1991 128)) (x2202 x1991 128))))))
(assert (=> (>= 10000 (x1501 128)) (= (x1622 (x1501 128)) (x1546 (x1501 128)))))
(assert (x2495 x2540))
(assert (= (and x268 x2256) x968))
(assert (x1602 x121))
(assert (x1602 x912))
(assert (x1602 x393))
(assert (x1602 x77))
(assert (= (and x987 x1089) x1723))
(assert (= x2337 (and x1704 (not x1848))))
(assert (x1602 x940))
(assert (x1602 x2263))
(assert (= x1010 (and (not x2482) x2133)))
(assert (and (x1522 x604 2) (x2090 x604 2) (= (- x604 (x715 1 x604)) (* (x2309 x604 2) 2)) (x131 x604 2) (=> (and (> x604 0) (> 2 0)) (and (> (* (x2309 x604 2) 2) (- x604 2)) (>= x604 (* (x2309 x604 2) 2)))) (x2030 x604 2)))
(assert (x1602 x1554))
(assert (x1602 x1539))
(assert (= x1756 (and x342 x2469)))
(assert (= (x643 (x1546 3081457077)) 3081457077))
(assert (x1602 x2088))
(assert (x1602 x892))
(assert (x1280 (x525 192)))
(assert (= x1831 (and x1654 x1066)))
(assert (x1602 x884))
(assert (x1602 x428))
(assert (x1602 x329))
(assert (= x723 (and x1190 x146)))
(assert (= (and x1823 (not x2343)) x127))
(assert (= x845 (or x547 x183)))
(assert (x1602 x6))
(assert (= 0 (x1913 128)))
(assert (x344 x2454))
(assert (= x1792 (and x104 x422)))
(assert (x1602 x2433))
(assert (x1602 x2123))
(assert (= (and (not x2173) x2248) x265))
(assert (= (x712 320) (x643 (x1622 (x712 320)))))
(assert (and (x303 x1177 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x1177 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x1177 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1177 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x1177 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x1177 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (and (x303 x1007 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x1007 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x1007 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1007 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x1007 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x1007 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= x1145 (and (not x2464) x1323)))
(assert (and (x303 x2286 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2286 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2286 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2286 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2286 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2286 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= 0 (x2350 160)))
(assert (= (or x359 x1387) x1796))
(assert (x1602 x1914))
(assert (and (x303 x2446 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2446 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2446 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2446 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2446 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2446 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1602 x2298))
(assert (= (x643 (x808 x1661 1)) (+ (x643 x1661) 1)))
(assert (x1602 x991))
(assert (x1602 x1529))
(assert (x1602 x2455))
(assert (x1602 x458))
(assert (= (and x917 x89) x1011))
(assert (= (x1459 192) 0))
(assert (x1602 x784))
(assert (= x1103 (and x1654 (not x1066))))
(assert (x1602 x212))
(assert (= (or x2474 x1425 x1941 (and x1839 (not x726)) x429 x852 (and x2303 x56) x1645 (and x355 x2292) (and x727 (not x1715)) x394 (and x134 x1209) x1791 x1975) x288))
(assert (x1602 x486))
(assert (x2495 x78))
(assert (x1602 x768))
(assert (= (and x2201 (not x1802)) x1052))
(assert (= (and (not x987) x1089) x214))
(assert (= x656 (and (not x854) x1537)))
(assert (= x2108 (=> (and (= (>= 224 x1931) x568) (= (x1199 (+ x1043 128)) x1821) (= x1931 (x1345 (- x1821 128)))) (and (=> (and (= (ite (>= 32 x1931) (x2162 (x1622 (x712 128)) 0) (ite (>= 64 x1931) (x173 (x1622 (x712 128)) (x1622 (x712 160)) 0) (ite (<= x1931 96) (x2109 (x1622 (x712 128)) (x1622 (x712 160)) (x1622 (x712 192)) 0) (ite (<= x1931 128) (x346 (x1622 (x712 128)) (x1622 (x712 160)) (x1622 (x712 192)) (x1622 (x712 224)) 0) (ite (<= x1931 160) (x401 (x1622 (x712 128)) (x1622 (x712 160)) (x1622 (x712 192)) (x1622 (x712 224)) (x1622 (x712 256)) 0) (ite (<= x1931 192) (x748 (x1622 (x712 128)) (x1622 (x712 160)) (x1622 (x712 192)) (x1622 (x712 224)) (x1622 (x712 256)) (x1622 (x712 288)) 0) (ite (<= x1931 224) (x1638 (x1622 (x712 128)) (x1622 (x712 160)) (x1622 (x712 192)) (x1622 (x712 224)) (x1622 (x712 256)) (x1622 (x712 288)) (x1622 (x712 320)) 0) (x1622 x160)))))))) x2465) (= (= x933 (ite x2113 1 0)) x2244) (= (x715 1 x1114) x933) (= (x2309 x1114 2) x1631) (= (ite (< 0 x933) x1631 (x715 127 x1631)) x1552) (= x2113 (< x1552 32))) (and (=> x2244 x1428) (=> (and (and (= (x715 1 x1114) x410) (= (= x410 0) x210)) (not x2244)) (and (=> (and (not x210) (and (= (x2162 (x1546 5) 0) x641) (= (< 0 x1552) x325))) (and (=> x325 x2157) (=> (not x325) x1008))) (=> (and x210 (and (= (x715 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1114) x374) (= x998 x1041) (= x1041 (x1199 (+ 128 x1552))))) x2325))))) x568))))
(assert (and (x303 x2468 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2468 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2468 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2468 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2468 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2468 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1602 x345))
(assert (x1602 x1153))
(assert (= (=> (and (= x725 x60) (= x120 x1650) (= x1392 x2410) (= x2142 x1049) (= x913 x1651)) x2323) x447))
(assert (= (=> (= x1224 (< 0 x1134)) (and (=> (and (and (= 0 x259) (= x1634 x1499) (= x1483 x1134) (= x1951 x2140) (= x810 x2344)) (not x1224)) x2441) (=> (and x1224 (and (= (x205 x117) x688) (= x1608 (or (not x1594) x743)) (= (x1184 x1846) x340) (= (ite x2169 x443 x340) x307) (= x1846 0) (<= 0 x688) (= x630 (x2379 x688)) (= (x1345 (- x1134 1)) x1196) (= (not (= x1153 x1196)) x550) (= x1594 (not (= 0 x688))) (= x24 (x2162 (x1546 1) 0)) (= (x320 x1755) x1153) (= x117 (x808 x24 x1196)) (= (and x2169 x2140) x220) (= x1713 1) (= x443 (x1184 x1713)) (= (or (not x220) x1608) x124) (<= x688 1461501637330902918203684832716283019655932542975) (= x2385 true) (= x1789 (x1199 (+ x243 x307))) (= (x1345 (- x1134 1)) x604) (= x202 (x1095 x1196)) (= x743 (= x1196 x630)) (= (ite x2169 x243 x202) x1680) (= x2169 (or x373 x550)) (= x373 (>= x1755 x243)) x124 (= x1755 (x1095 x1196)))) (and (=> (and (not x2385) (and (= x2140 x1951) (= x1499 x1634) (= x259 0) (= x2344 x810) (= x1483 x1134))) x2441) (=> (and x2385 (and (or (and (not x146) (and (= x855 (= 0 x2074)) (= (ite x855 x855 (= x604 0)) x1517))) (and x146 (= x1517 x146))) (= x146 (> x2451 x604)))) x927))))) x1203))
(assert (x1602 x444))
(assert (=> (<= (x1110 320) 10000) (= (x1622 (x1110 320)) (x1546 (x1110 320)))))
(assert (x1602 x470))
(assert (= x1128 (and x342 (not x2469))))
(assert (x182 x1917))
(assert (x1602 x240))
(assert (=> (<= x1357 10000) (= (x1546 x1357) (x1622 x1357))))
(assert (= (=> (and (or (not x1014) x1014) (= (= 0 x1806) x1014)) x447) x1520))
(assert (= (and (not x1431) x1277) x1621))
(assert (= (and (not x2061) x1126) x2520))
(assert (= (and x2322 (not x1046)) x1375))
(assert (x1602 x501))
(assert (= x919 (and (not x21) x1372)))
(assert (x1280 x1432))
(assert (x1602 x1392))
(assert (x2495 1))
(assert (= x757 (and x1671 (not x339))))
(assert (= x1896 (x1622 (x643 x1896))))
(assert (x349 x2251))
(assert (x1602 x1402))
(assert (x1602 x1060))
(assert (= x1589 (and x1910 x822)))
(assert (x1602 x2267))
(assert (= x122 (=> (and (= x1561 (x2309 x1917 2)) (= x1038 (x715 1 x1917)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2074) (= (ite (< 0 x1038) x1561 (x715 127 x1561)) x706) (= x1586 (= (ite x2470 1 0) x1038)) (<= 0 x2074) (= (< x706 32) x2470)) (and (=> (and (not x1586) (and (= x1044 (= x1412 0)) (= x1412 (x715 1 x1917)))) (and (=> (and (= (> x706 0) x1503) (not x1044)) (and (=> x1503 x1166) (=> (not x1503) x752))) (=> x1044 x45))) (=> (and (and (= x1483 x1134) (= 0 x259) (= x2140 x1951) (= x2344 x810) (= x1634 x1499)) x1586) x2441)))))
(assert (= (and x1787 (not x371)) x1120))
(assert (x1602 x1104))
(assert (= 0 (x890 96)))
(assert (= x392 (and x845 x882)))
(assert (x1602 x2518))
(assert (= (x1459 224) 0))
(assert (x1602 x2154))
(assert (x1602 x1442))
(assert (x1602 x1259))
(assert (= (=> (and (= (x808 x1896 1) x2117) (= x1987 (not (> (x643 x2253) (x643 x2117))))) (and x1987 x1562)) x1142))
(assert (= (x1622 1461501637330902918203684832716283019655932542976) (x1546 1461501637330902918203684832716283019655932542976)))
(assert (x1602 x2213))
(assert (x1280 (x525 224)))
(assert (= (and x86 x2489) x1702))
(assert (and (x303 x481 256) (x1404 x481 256) (x2203 x481 256) (=> (< 0 256) (= x481 (+ (* 256 (x2309 x481 256)) (x2202 x481 256))))))
(assert (x1602 x2071))
(assert (and (x303 x1006 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x1006 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x1006 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1006 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x1006 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x1006 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (and (x303 x1877 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x1877 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x1877 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1877 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x1877 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x1877 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1280 (x460 192)))
(assert (x349 x674))
(assert (= (or x790 x2265) x2373))
(assert (= (x1622 3285302901) (x1546 3285302901)))
(assert (= (and (not x749) x1841) x1836))
(assert (= (and x181 (not x1228)) x2486))
(assert (= (and x65 x2385) x1190))
(assert (x1280 (x460 320)))
(assert (x1602 x245))
(assert (x1602 x1630))
(assert (x2246 x1893))
(assert (= (and x850 x649) x1017))
(assert (x1602 x471))
(assert (= (=> (and (= 1 x383) (= x1751 x604) (= x810 x1271) (= x853 x2140) (= x1789 x1352)) x2514) x2541))
(assert (= (and x1258 (not x59)) x1708))
(assert (x1616 x1676))
(assert (= x895 (or x2534 x2501)))
(assert (x1602 x49))
(assert (= (and x2008 x1021) x2279))
(assert (= (x643 (x808 x2443 x1171)) (+ (x643 x2443) x1171)))
(assert (x1602 x1911))
(assert (x349 x1007))
(assert (x1602 x564))
(assert (and (x303 x2275 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2275 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2275 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2275 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2275 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2275 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= (x1622 1234336674) (x1546 1234336674)))
(assert (= x2101 (and x1695 (not x1260))))
(assert (x1602 x336))
(assert (and (x303 x2154 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2154 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2154 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2154 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2154 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2154 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x2246 x1958))
(assert (= x318 (=> (and (= x1134 x1690) (= 1 x2235) (= x2159 x2457) (= x1786 x2140) (= x1635 x810)) x1401)))
(assert (= x35 (and (not x1850) x1966)))
(assert (x1602 x966))
(assert (x1602 x1512))
(assert (= x2352 (and x1823 x2343)))
(assert (= x2329 (=> (and (= x607 x1634) (= x68 x623) (= x949 x2140) (= x817 x810) (= x1134 x1320)) x1462)))
(assert (= (and (not x2508) x150) x1614))
(assert (x1602 x1804))
(assert (x1602 x1774))
(assert (= (and x1120 (not x1241)) x661))
(assert (= (and x2172 x325) x327))
(assert (x1602 x1788))
(assert (= x2453 (and x1323 x2464)))
(assert (= (=> (and (= x338 x496) (= x1175 x2194)) x1002) x483))
(assert (x1602 x981))
(assert (x1602 x1328))
(assert (x1602 x730))
(assert (x2495 x1676))
(assert (= x672 (and x475 x1343)))
(assert (= (and x1801 (not x766)) x1407))
(assert (x1280 (x460 160)))
(assert (x1602 x1721))
(assert (= x1943 (and (not x675) x1194)))
(assert (= (x2164 160) (x643 (x1622 (x2164 160)))))
(assert (x1280 (x460 256)))
(assert (and (x1522 x1134 2) (x2090 x1134 2) (= (- x1134 (x715 1 x1134)) (* (x2309 x1134 2) 2)) (x131 x1134 2) (=> (and (> x1134 0) (> 2 0)) (and (> (* (x2309 x1134 2) 2) (- x1134 2)) (>= x1134 (* (x2309 x1134 2) 2)))) (x2030 x1134 2)))
(assert (= (and x1480 (not x952)) x1029))
(assert (= (and x522 x316) x39))
(assert (= x149 x372))
(assert (x1602 x540))
(assert (= (x643 (x1546 1039635593)) 1039635593))
(assert (x1602 x783))
(assert (x1602 x2094))
(assert (= x2156 (and (not x1909) x1570)))
(assert (= x2079 (or x1295 x382 x1686 x1225 x280)))
(assert (= (and x157 x2459) x1295))
(assert (= (+ (x643 x1500) x1689) (x643 (x808 x1500 x1689))))
(assert (x349 x1713))
(assert (= x1071 (or x2185 x919)))
(assert (x1602 x1551))
(assert (x1602 x773))
(assert (x1602 x1684))
(assert (= (and x2201 x1802) x504))
(assert (x1602 x1895))
(assert (= x1421 (or x2247 x2207)))
(assert (x1602 x465))
(assert (= (x643 (x1622 (x1110 128))) (x1110 128)))
(assert (= x2458 (or x127 x2365 x1356)))
(assert (and (x1522 x2399 2) (x2090 x2399 2) (= (- x2399 (x715 1 x2399)) (* (x2309 x2399 2) 2)) (x131 x2399 2) (=> (and (> x2399 0) (> 2 0)) (and (> (* (x2309 x2399 2) 2) (- x2399 2)) (>= x2399 (* (x2309 x2399 2) 2)))) (x2030 x2399 2)))
(assert (= (and x2002 x1578) x1645))
(assert (= x469 (and x1458 (not x2476))))
(assert (= x1091 (or x1103 x1831)))
(assert (x1602 x681))
(assert (x1602 x1489))
(assert (= (and (not x795) x1407) x1230))
(assert (= (and (not x1517) x167) x2201))
(assert (x1602 x248))
(assert (and (x303 x2251 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2251 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2251 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2251 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2251 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2251 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1602 x2418))
(assert (= x2358 (=> (= x2435 (= x2235 0)) (and (=> (and x2435 (and (= x2140 x728) (= x172 x1634))) x1961) (=> (and (and (= 1 x2345) (= x2062 x1786) (= x1452 x1690) (= x2426 x1635) (= x962 0) (= x2159 x476)) (not x2435)) x1314)))))
(assert (x1602 x1410))
(assert (x1602 x642))
(assert (= (and x2079 (not x534)) x2265))
(assert (=> (<= (x525 320) 10000) (= (x1622 (x525 320)) (x1546 (x525 320)))))
(assert (= 2279315017 (x643 (x1546 2279315017))))
(assert (x1602 x526))
(assert (x1602 x1170))
(assert (x1602 x1908))
(assert (x2495 x481))
(assert (x1280 (x2164 128)))
(assert (x1280 (x1501 288)))
(assert (x2495 x1170))
(assert (x1602 x592))
(assert (= (x925 (+ (x1199 (+ 100 x574)) 32)) 0))
(assert (x1602 x1003))
(assert (x1602 x487))
(assert (x1602 x434))
(assert (= x1336 (=> (= x1848 (= x383 0)) (and (=> (and (and (= x2140 x2492) (= x1634 x1232) (= x1134 x185) (= 0 x1297) (= x2444 x810)) x1848) x512) (=> (and (not x1848) (and (= x115 1) (= x8 x1271) (= x291 x1751) (= x853 x2531) (= 0 x310) (= x1352 x1037))) x979)))))
(assert (= x190 (and (not x1324) x15)))
(assert (= (x1622 (x643 x1939)) x1939))
(assert (= x681 (x643 (x1622 x681))))
(assert (= x2207 (and x640 x584)))
(assert (x2495 x1631))
(assert (x1602 x412))
(assert (= x2208 (or x71 x895)))
(assert (x1602 x1783))
(assert (= x667 (and x398 x1827)))
(assert (= x2510 (=> (and (= (not (< 164 x629)) x271) (= (x808 x1661 1) x770)) (and (=> (= x770 x2230) x1106) x271))))
(assert (= (x29 420) 0))
(assert (x1602 x478))
(assert (x1602 x982))
(assert (x1602 x456))
(assert (x2495 x2399))
(assert (= (and x450 (not x894)) x1182))
(assert (x1602 x857))
(assert (x1280 (x1501 256)))
(assert (x1602 x576))
(assert (x1602 x1810))
(assert (= x1294 (and (not x2017) x482)))
(assert (x1602 x1958))
(assert (x1280 (x525 256)))
(assert (x1280 x1357))
(assert (= x2534 (and (not x5) x659)))
(assert (= (or x247 x1860) x570))
(assert (= (x1622 106459005500898838667931598610041423549574964228674563513410788872267948359680) (x1546 106459005500898838667931598610041423549574964228674563513410788872267948359680)))
(assert (x349 x2227))
(assert (=> (>= 10000 (x875 128)) (= (x1546 (x875 128)) (x1622 (x875 128)))))
(assert (x1602 x1552))
(assert (= (and x2352 x586) x1072))
(assert (x1602 x1349))
(assert (x1602 x1233))
(assert (x1602 x213))
(assert (x1602 x671))
(assert (x1602 x1217))
(assert (x1602 x1545))
(assert (x1602 x1337))
(assert (= x79 (and x233 (not x1598))))
(assert (x349 x1667))
(assert (x1602 x1609))
(assert (x1602 x1354))
(assert (x1602 x1718))
(assert (x349 x2399))
(assert (x349 (* x2319 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= (x1501 128) (x643 (x1622 (x1501 128)))))
(assert (= (or x723 x1728) x167))
(assert (x1280 (x1869 128)))
(assert (x1602 x552))
(assert (=> (>= 10000 (x1501 224)) (= (x1622 (x1501 224)) (x1546 (x1501 224)))))
(assert (x1602 x407))
(assert (= (x2191 452) 0))
(assert (= x2157 (=> (and (= x1707 (not (< 32 x1552))) (= x549 (x951 x641))) (and x1008 x1707))))
(assert (x1602 x1024))
(assert (x1602 x1492))
(assert (x1602 x2163))
(assert (= x482 (or x1073 x1793)))
(assert (and (x303 x816 32) (x1404 x816 32) (x2203 x816 32) (=> (< 0 32) (= x816 (+ (* 32 (x2309 x816 32)) (x2202 x816 32))))))
(assert (= (x1459 128) 0))
(assert (x349 x991))
(assert (x1602 x1208))
(assert (x1602 x1507))
(assert (x1602 x1214))
(assert (x1602 x228))
(assert (x1602 x1050))
(assert (= (and x2017 x482) x1975))
(assert (= x498 (and x232 x2473)))
(assert (= (x643 (x1622 (x1869 256))) (x1869 256)))
(assert (and (x303 x331 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x331 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x331 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x331 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x331 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x331 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= (x2481 160) 0))
(assert (and (x303 x1004 128) (x1404 x1004 128) (x2203 x1004 128) (=> (< 0 128) (= x1004 (+ (* 128 (x2309 x1004 128)) (x2202 x1004 128))))))
(assert (x717 x1302 x478))
(assert (x1602 x1137))
(assert (and (x303 x991 26959946667150639794667015087019630673637144422540572481103610249216) (x1404 x991 26959946667150639794667015087019630673637144422540572481103610249216) (x2203 x991 26959946667150639794667015087019630673637144422540572481103610249216) (=> (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (= x991 (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 (x2309 x991 26959946667150639794667015087019630673637144422540572481103610249216)) (x2202 x991 26959946667150639794667015087019630673637144422540572481103610249216))))))
(assert (x1602 x1972))
(assert (x1602 x840))
(assert (= x1223 (and x753 (not x2084))))
(assert (x2495 x1551))
(assert (= x280 (and x2525 (not x164))))
(assert (= x4 (=> (and (= x741 x759) (and (= (and x103 x2485) x387) (= x144 (or x387 x842)) (= x2485 (= x1805 0)) (= x428 0) (= (or x144 (not x1660)) x2193) (= x1805 x741))) x2193)))
(assert (= (and x2458 (not x1303)) x1073))
(assert (x182 x338))
(assert (x2495 x2363))
(assert (x1602 x1131))
(assert (=> (>= 10000 (x1869 128)) (= (x1546 (x1869 128)) (x1622 (x1869 128)))))
(assert (= (and x130 x218) x1210))
(assert (= x521 (and x2068 (not x906))))
(assert (x1616 x1631))
(assert (x1602 x2083))
(assert (= (and x1738 (not x1973)) x1800))
(assert (= (and x1598 x233) x108))
(assert (x1602 x1380))
(assert (= x2323 (=> (and (= x2405 x60) (= x1650 x2280) (= x2001 x2142) (= x913 x2277) (= x2410 x619)) x984)))
(assert (= (and x102 x977) x1739))
(assert (x1602 x201))
(assert (= x2364 (and x2349 (not x2509))))
(assert (=> (>= 10000 (x460 320)) (= (x1546 (x460 320)) (x1622 (x460 320)))))
(assert (= x2289 (x1622 (x643 x2289))))
(assert (x1602 x1061))
(assert (= x252 (=> (and (= x2523 (x1199 (+ 128 x982))) (= x1533 (x1345 (- x2523 128))) (= (>= 224 x1533) x995)) (and (=> (and (= (ite (> x1895 0) x1170 (x715 127 x1170)) x1150) (= (x715 1 x1114) x1895) (= (x2309 x1114 2) x1170) (= x1301 (ite (<= x1533 32) (x2162 (x1622 (x1110 128)) 0) (ite (<= x1533 64) (x173 (x1622 (x1110 128)) (x1622 (x1110 160)) 0) (ite (<= x1533 96) (x2109 (x1622 (x1110 128)) (x1622 (x1110 160)) (x1622 (x1110 192)) 0) (ite (>= 128 x1533) (x346 (x1622 (x1110 128)) (x1622 (x1110 160)) (x1622 (x1110 192)) (x1622 (x1110 224)) 0) (ite (>= 160 x1533) (x401 (x1622 (x1110 128)) (x1622 (x1110 160)) (x1622 (x1110 192)) (x1622 (x1110 224)) (x1622 (x1110 256)) 0) (ite (<= x1533 192) (x748 (x1622 (x1110 128)) (x1622 (x1110 160)) (x1622 (x1110 192)) (x1622 (x1110 224)) (x1622 (x1110 256)) (x1622 (x1110 288)) 0) (ite (<= x1533 224) (x1638 (x1622 (x1110 128)) (x1622 (x1110 160)) (x1622 (x1110 192)) (x1622 (x1110 224)) (x1622 (x1110 256)) (x1622 (x1110 288)) (x1622 (x1110 320)) 0) (x1622 x363))))))))) (= (< x1150 32) x354) (= (= (ite x354 1 0) x1895) x1231)) (and (=> (and (not x1231) (and (= x2324 (x715 1 x1114)) (= x522 (= x2324 0)))) (and (=> (and x522 (and (= x1165 x1058) (= (x715 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1114) x319) (= (x1199 (+ x1150 128)) x1165))) x1982) (=> (and (not x522) (and (= (x2162 (x1546 5) 0) x2070) (= x1973 (< 0 x1150)))) (and (=> (not x1973) x1460) (=> x1973 x924))))) (=> x1231 x1916))) x995))))
(assert (= (x643 (x1622 x1856)) x1856))
(assert (=> (>= 10000 x1856) (= (x1622 x1856) (x1546 x1856))))
(assert (x349 x2455))
(assert (x1602 x378))
(assert (= (x643 (x1622 (x1110 160))) (x1110 160)))
(assert (x1602 x1419))
(assert (x1602 x243))
(assert (= (x432 128) 0))
(assert (= (and x1531 (not x582)) x1075))
(assert (x1602 x967))
(assert (x1280 (x1501 128)))
(assert (= x625 (or x1792 x1276)))
(assert (x1602 x423))
(assert (x1602 x50))
(assert (= x1544 (and x876 x1912)))
(assert (x182 x509))
(assert (x1602 x1784))
(assert (= x1373 (and (not x218) x130)))
(assert (= (=> (and (and (or (and x2430 (and (= (x566 x1742) x219) (= x2536 (and x2252 x517)) (= (x808 x216 x1256) x1015) (= (x2162 (x1546 1) 0) x216) (= x1601 (or x1245 (not x2536))) (= x299 (not (= x219 x1256))) (= x2445 0) (= (x1351 x1015) x1814) (= (x260 x1256) x434) (= x1245 (or (not x2060) x562)) (= x1554 (x1184 x1879)) (= (or x299 x801) x517) (= x801 (>= x1742 x557)) (= (x1184 x2445) x526) (= (x292 x1814) x2511) (< x1256 x784) (= x552 x1814) (< x1814 1461501637330902918203684832716283019655932542976) (<= 0 x1814) (= x562 (= x1256 x2511)) (= x2170 (x1199 (+ x407 x557))) (= x2060 (not (= x1814 0))) (= x2170 x2080) (= 1 x1879) (= (ite x517 x1554 x526) x407) (= (x260 x1256) x1742) (= (ite x517 x557 x434) x2417) (<= x1814 1461501637330902918203684832716283019655932542975) x1601)) (and (not x2430) (and (= 0 x552) (= x2080 x557)))) (and (= (not (= x1472 x2311)) x842) (= x2430 (< x1256 x784)) (> 3081457077 x347) (= (x2245 (x1622 x1542)) x646) (not (< x347 2726977199)) (not (< x347 2112976665)) (not (= x347 2867924802)) (= x1472 x245) (not (= x347 3018310333)) (not (< x347 2867924802)) (= x2016 x1256) (= x347 3050870311) (not (= x347 2923951457)) (< 0 x646))) (= x245 x761)) x804) x1074))
(assert (x1280 (x1501 224)))
(assert (x1602 x98))
(assert (x1602 x1304))
(assert (= 0 (x1459 288)))
(assert (x1602 x2037))
(assert (x1602 x834))
(assert (=> (<= (x712 160) 10000) (= (x1622 (x712 160)) (x1546 (x712 160)))))
(assert (= x1591 (or (and x129 (not x2186)) x1440)))
(assert (x1602 x1852))
(assert (x1602 x1667))
(assert (= x1686 (and x2459 (not x157))))
(assert (=> (<= x2475 10000) (= (x1622 x2475) (x1546 x2475))))
(assert (= x969 (and x16 (not x1063))))
(assert (x1602 x277))
(assert (x2495 x733))
(assert (= (x825 192) 0))
(assert (= (or x2428 x791) x1258))
(assert (x1602 x170))
(assert (x2495 x674))
(assert (x1602 x1432))
(assert (x1602 x1886))
(assert (x1602 x1289))
(assert (x1602 x410))
(assert (x1602 x386))
(assert (x1602 x490))
(assert (= x542 (and (not x538) x823)))
(assert (x1602 x202))
(assert (x1602 x736))
(assert (=> (<= (x525 224) 10000) (= (x1546 (x525 224)) (x1622 (x525 224)))))
(assert (=> (>= 10000 (x1110 224)) (= (x1622 (x1110 224)) (x1546 (x1110 224)))))
(assert (let ((x353 (* x2319 26959946667150639794667015087019630673637144422540572481103610249216))) (and (x303 x353 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x353 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x353 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x353 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x353 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x353 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(assert (= (+ (x643 x1661) x2288) (x643 (x808 x1661 x2288))))
(assert (= x1054 (=> (and (= x5 (= 0 x1492)) (or x5 (not x5))) x616)))
(assert (x1280 (x712 192)))
(assert (= x1704 (or x1062 (and x2272 (not x1116)))))
(assert (= (x643 (x1546 1871487246)) 1871487246))
(assert (x349 x2286))
(assert (= x2184 (=> (and (or (not x1174) (and x1174 (= x141 (x1199 (+ 164 x1137))))) (= x1174 (> x1076 x1137))) x2371)))
(assert (x2246 x2188))
(assert (=> (>= 10000 x431) (= (x1622 x431) (x1546 x431))))
(assert (and (x303 x6 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x6 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x6 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x6 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x6 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x6 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1602 x2269))
(assert (x1602 x31))
(assert (x1602 x1163))
(assert (and (x303 x2296 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2296 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2296 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2296 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2296 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2296 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x182 x1114))
(assert (x1602 x155))
(assert (x1602 x1851))
(assert (x1602 x2015))
(assert (and (= (x189 x2319 26959946667150639794667015087019630673637144422540572481103610249216) (* 26959946667150639794667015087019630673637144422540572481103610249216 x2319)) (and (= (x189 (- x2319 115792089237316195423570985008687907853269984665640564039457584007913129639936) 26959946667150639794667015087019630673637144422540572481103610249216) (- (* 26959946667150639794667015087019630673637144422540572481103610249216 x2319) 3121748550315992231381597229793166305748598142664971150859156959625371738819765620120306103063491971159826931121406622895447975679288285306290176)) (= (* (- 115792089210356248756420345214020892766250353992003419616917011526809519390720) x2319) (x189 x2319 (- 115792089210356248756420345214020892766250353992003419616917011526809519390720))) (= (- (* x2319 (- 115792089210356248756420345214020892766250353992003419616917011526809519390720)) (- 13407807926820848549258032766824248897686199514843795235058590292862607070448175237982108678046597324626539887026659119732347259916498594267145363699793920)) (x189 (- x2319 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089210356248756420345214020892766250353992003419616917011526809519390720)))) (x1567 x2319 26959946667150639794667015087019630673637144422540572481103610249216) (x758 x2319 26959946667150639794667015087019630673637144422540572481103610249216) (x622 x2319 26959946667150639794667015087019630673637144422540572481103610249216) (x367 x2319 26959946667150639794667015087019630673637144422540572481103610249216) (x2370 x2319 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= (x1546 18446744073709551615) (x1622 18446744073709551615)))
(assert (= (x643 (x1622 (x460 160))) (x460 160)))
(assert (= (and (not x494) x424) x1225))
(assert (x1602 x1762))
(assert (x1602 x1931))
(assert (= x1469 (=> (and (or (and (not x1032) (and (= x231 x68) (= x851 x400))) (and x1032 (and (= (ite (= 0 x231) x1470 0) x1890) (= (x2530 (x1622 x81)) x1525) (= x231 x68) (= (x1199 (+ x1299 x1890)) x1315) (= x1299 (x1727 (x1622 x1542))) (= x851 x400) (= (- x1525 x1890) x2380) (< (+ x1890 x1299) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (= 0 x231) x1032)) x1967)))
(assert (x1602 x929))
(assert (= (or x969 x2516 x1145) x659))
(assert (x1602 x554))
(assert (= x1333 (and x1950 (not x1586))))
(assert (= x753 (or x1075 x2364 x898)))
(assert (= (=> (and (= x540 (x2513 256)) (= (not (> x1137 128)) x1643)) (and x1643 (=> (= x1076 128) x2184))) x1119))
(assert (x1602 x1215))
(assert (= x947 (and (not x2217) x1286)))
(assert (= (x643 (x1622 (x712 256))) (x712 256)))
(assert (x1602 x310))
(assert (= (and x2378 (not x2005)) x1860))
(assert (= (x2481 192) 0))
(assert (= (and x2430 x941) x1201))
(assert (x2495 x1195))
(assert (x1602 x1195))
(assert (= x1961 (=> (and (= x728 x2062) (= x2345 0) (= x476 x172) (= x810 x2426) (= x1134 x1452) (= x962 x239)) x1314)))
(assert (= (and x2042 x2435) x61))
(assert (= (or x542 x1633) x2068))
(assert (x1602 x2447))
(assert (x349 x198))
(assert (x349 x2257))
(assert (= x2542 (and x1458 x2476)))
(assert (= (and (not x1450) x2493) x333))
(assert (x1602 x507))
(assert (= (x875 128) (x643 (x1622 (x875 128)))))
(assert (= (and (=> (not x2186) x887) (=> (and x2186 (and (= (x2309 x1114 2) x1676) (= (x715 1 x1114) x1429) (= (ite (> x1429 0) x1676 (x715 127 x1676)) x31) (= x1994 (= (ite x1265 1 0) x1429)) (= x1265 (< x31 32)))) (and (=> (and (and (= x2236 (x1199 (+ 31 x31))) (= (x2309 x2236 32) x1337) (= x675 (< 0 x1043)) (= x782 (x808 x1840 x1337)) (= (x2162 (x1546 5) 0) x1840)) (not x1994)) (and (=> (and x675 (= (> x1043 31) x952)) (and (=> (and (and (= x883 (x2359 100)) (= x1878 (x1199 (+ x1043 x1043))) (= x324 (>= 255 x1878)) (= x1084 (x715 115792089237316195423570985008687907853269984665640564039457584007913129639680 x883)) (= x449 (<= x1878 255)) (= x1543 (x2139 x1878 x1084)) (= (x1199 (+ x1878 x1084)) x577) (= x1939 x1840) (= x733 (ite x324 x577 x1573)) (= x1573 (ite x449 x680 x1543)) (= x680 (x1199 (+ x1878 x1084)))) (not x952)) x337) (=> (and (and (= x2093 (x1199 (+ x1043 100))) (= (x1199 (+ x1043 x1043)) x2447) (= (> x2093 100) x584) (= x2181 (x1199 (+ x2447 1)))) x952) (and (=> (and (not x584) (= x636 x1840)) x1088) (=> x584 x1125))))) (=> (and (and (= x733 0) (= x1840 x1939)) (not x675)) x337))) (=> x1994 x1428)))) x417))
(assert (x1602 x1047))
(assert (x1616 x1195))
(assert (= (and x1672 (not x1147)) x1871))
(assert (x1602 x118))
(assert (= x2475 (x643 (x1622 x2475))))
(assert (x1602 x1574))
(assert (= x317 (or x1227 x264)))
(assert (= (or x39 x774) x971))
(assert (= 0 (x1844 160)))
(assert (x349 x624))
(assert (x1602 x1814))
(assert (x1602 x1751))
(assert (= (or x1128 x1182) x2488))
(assert (x1602 x1595))
(assert (and (x303 x674 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x674 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x674 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x674 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x674 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x674 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= x561 (and x1816 x1632)))
(assert (= x1081 (and x2085 x109)))
(assert (x1602 x381))
(assert (= x512 (=> (and (= x1297 x115) (= x2531 x2492) (= x291 x185) (= x1232 x1037) (= x310 x978) (= x8 x2444)) x979)))
(assert (x1602 x2262))
(assert (x1602 x1992))
(assert (= (x1844 224) 0))
(assert (= (or x2317 x1702) x580))
(assert (= x1519 (and x1379 (not x256))))
(assert (= x1508 (and (not x1341) x2538)))
(assert (x1602 x405))
(assert (= (and x885 (not x2505)) x382))
(assert (and (x303 x2455 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2455 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2455 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2455 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2455 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2455 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= (and x67 x709) x175))
(assert (= (=> (and (= x296 x2333) (and (or (and (and (= x996 x1887) (= 0 x1152)) (not x256)) (and x256 (and (= 0 x6) x1057 (>= 1461501637330902918203684832716283019655932542975 x865) (<= 0 x865) (= x1804 (ite x1649 x105 x799)) (= x2028 (x2477 x501)) (= x799 (x1184 x6)) (= x996 x321) (= x1152 x865) (= x145 (or (not x1842) x1699)) (= (x2379 x865) x1192) (= (not (= x2028 x1171)) x2216) (= x273 (x808 x2443 x1171)) (< x1171 x1134) (= (x2397 x273) x865) (= x1057 (or x145 (not x2527))) (= (or x637 x2216) x1649) (= x2527 (and x2140 x1649)) (= x1842 (not (= 0 x865))) (= (x1184 x1006) x105) (= (x142 x1171) x1637) (= x2443 (x2162 (x1546 1) 0)) (= (ite x1649 x1887 x1637) x751) (= (>= x501 x1887) x637) (< x865 1461501637330902918203684832716283019655932542976) (= x1699 (= x1192 x1171)) (= (x1199 (+ x1804 x1887)) x321) (= x501 (x142 x1171)) (= x1006 1)))) (and (= (> x1134 x1171) x256) (not (= x253 2923951457)) (not (> 2112976665 x253)) (not (= x253 2867924802)) (< x253 3081457077) (not (> 2726977199 x253)) (= x296 x856) (not (= x253 3018310333)) (< 0 x1855) (not (< x253 2867924802)) (= 3050870311 x253) (= x1855 (x2245 (x1622 x1542))) (= x2357 x1171)))) x2335) x1826))
(assert (x1602 x688))
(assert (= (x643 (x808 x617 x361)) (+ x361 (x643 x617))))
(assert (= (x2191 388) 0))
(assert (= x904 (=> (and (= (not (> x302 32)) x956) (= x1140 (x432 128))) (and x956 (=> (= 32 x999) x177)))))
(assert (x1602 x1978))
(assert (x1602 x1247))
(assert (= x724 (and x1072 (not x426))))
(assert (x1280 (x875 224)))
(assert (= (x1546 1680813743) (x1622 1680813743)))
(assert (x1602 x2231))
(assert (x1602 x2067))
(assert (= (x643 (x1546 288768741)) 288768741))
(assert (= x1868 (and (not x179) x498)))
(assert (x1602 x1134))
(assert (= (x1546 1871487246) (x1622 1871487246)))
(assert (x1602 x457))
(assert (x1602 x2497))
(assert (= x852 (and x1575 (not x767))))
(assert (= x2133 (or x608 x521)))
(assert (= (or x1682 x2226) x1960))
(assert (x1602 x1498))
(assert (= (and x1372 x21) x2185))
(assert (x349 x331))
(assert (x1602 x988))
(assert (= (x643 (x1622 (x2164 128))) (x2164 128)))
(assert (x1602 x119))
(assert (x1602 x1569))
(assert (x1602 x174))
(assert (and (x303 x1846 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x1846 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x1846 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1846 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x1846 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x1846 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= (and x2503 x322) x17))
(assert (= (and (not x1231) x1809) x316))
(assert (= x197 (and x653 x1423)))
(assert (x1602 x1573))
(assert (x349 x2043))
(assert (x1602 x2426))
(assert (x1602 x2526))
(assert (= true x823))
(assert (= x2053 (and (not x651) x2156)))
(assert (and (x303 x585 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x585 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x585 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x585 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x585 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x585 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1602 x2152))
(assert (x1602 x989))
(assert (x1602 x1240))
(assert (x1602 x1009))
(assert (= x708 (and (not x225) x595)))
(assert (x1602 x384))
(assert (x1602 x509))
(assert (= x424 (and x164 x2525)))
(assert (= x1823 (and x1578 (not x2002))))
(assert (= x2103 (and x1801 x766)))
(assert (x1602 x1675))
(assert (= (x1546 78829575338057407266098799593532030895783219923606930547737006156155256307712) (x1622 78829575338057407266098799593532030895783219923606930547737006156155256307712)))
(assert (not x1179))
(assert (x2246 x1084))
(assert (x2495 x2539))
(assert (x1602 x862))
(assert (= (x1546 3733007566) (x1622 3733007566)))
(assert (= (x643 (x808 x2190 1)) (+ 1 (x643 x2190))))
(assert (x1602 x596))
(assert (x1602 x865))
(assert (= 100641684887429822015232653770480429695213136867978658013931169090238473568256 (x643 (x1546 100641684887429822015232653770480429695213136867978658013931169090238473568256))))
(assert (x1602 x2159))
(assert (x1602 x409))
(assert (= (x643 (x1622 (x1501 288))) (x1501 288)))
(assert (= x1555 (and x2259 x994)))
(assert (= x2349 (and x1739 (not x222))))
(assert (= x1330 (and x2172 (not x325))))
(assert (= (x643 (x1546 115792089237316195423570985008687907853269984665640564039457584007913129639680)) 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (= x1002 (=> (= x1303 (> (x643 x2491) (x643 x1175))) (and (=> (not x1303) x1155) (=> x1303 x938)))))
(assert (x1602 x2200))
(assert (x349 x633))
(assert (= (and x1176 (not x1758)) x2038))
(assert (x1602 x2357))
(assert (and (x1522 x338 2) (x2090 x338 2) (= (- x338 (x715 1 x338)) (* (x2309 x338 2) 2)) (x131 x338 2) (=> (and (> x338 0) (> 2 0)) (and (> (* (x2309 x338 2) 2) (- x338 2)) (>= x338 (* (x2309 x338 2) 2)))) (x2030 x338 2)))
(assert (x1602 x302))
(assert (x1602 x1361))
(assert (x1602 x1499))
(assert (x1602 x1087))
(assert (= (+ x826 (x643 x2040)) (x643 (x808 x2040 x826))))
(assert (x1602 x665))
(assert (= (x643 (x1622 x2255)) x2255))
(assert (= (=> (= (< (x643 x1939) (x643 x782)) x90) (and (=> x90 x2137) (=> (not x90) x1441))) x337))
(assert (x1602 x352))
(assert (= 0 (x1844 256)))
(assert (x1602 x2039))
(assert (= (x1546 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x1622 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (= (x2164 256) (x643 (x1622 (x2164 256)))))
(assert (= 0 (x29 452)))
(assert (x349 x2363))
(assert (=> (>= 10000 (x460 288)) (= (x1622 (x460 288)) (x1546 (x460 288)))))
(assert (and (x303 x290 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x290 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x290 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x290 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x290 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x290 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1602 x1712))
(assert (x1602 x1566))
(assert (x1602 x1730))
(assert (x1602 x820))
(assert (= (x712 160) (x643 (x1622 (x712 160)))))
(assert (=> (<= (x712 288) 10000) (= (x1622 (x712 288)) (x1546 (x712 288)))))
(assert (= (and x1109 x1716) x1993))
(assert (= x94 (and x1146 (not x930))))
(assert (x1602 x43))
(assert (= (or x1708 x1705) x1910))
(assert (x1602 x1690))
(assert (x1602 x1837))
(assert (and (x303 x198 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x198 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x198 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x198 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x198 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x198 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= (x525 128) (x643 (x1622 (x525 128)))))
(assert (= x877 (and x1632 (not x1816))))
(assert (= (or x1714 x1201) x1654))
(assert (and (x1522 x733 2) (x2090 x733 2) (= (- x733 (x715 1 x733)) (* (x2309 x733 2) 2)) (x131 x733 2) (=> (and (> x733 0) (> 2 0)) (and (> (* (x2309 x733 2) 2) (- x733 2)) (>= x733 (* (x2309 x733 2) 2)))) (x2030 x733 2)))
(assert (x1602 x536))
(assert (= x335 (and (not x1343) x475)))
(assert (x1602 x849))
(assert (x1602 x2049))
(assert (x1602 x1700))
(assert (=> (>= 10000 (x2164 320)) (= (x1546 (x2164 320)) (x1622 (x2164 320)))))
(assert (x1602 x1136))
(assert (x182 x1134))
(assert (x1602 x95))
(assert (x1602 x2222))
(assert (x1602 x1838))
(assert (= x858 x484))
(assert (= x150 (or x251 x1012)))
(assert (x1602 x1680))
(assert (= (and x2242 x94) x627))
(assert (= (=> (and (= x1116 (= 0 x383)) (or (not x1116) x1116)) x1336) x2514))
(assert (x1602 x900))
(assert (=> (>= 10000 x81) (= (x1622 x81) (x1546 x81))))
(assert (= (or x2011 x1081) x475))
(assert (= (x1622 2112976665) (x1546 2112976665)))
(assert (x1602 x2275))
(assert (x1602 x2353))
(assert (= (x643 (x1622 (x875 256))) (x875 256)))
(assert (x615 x2399))
(assert (=> (<= x1794 10000) (= (x1622 x1794) (x1546 x1794))))
(assert (x182 x1214))
(assert (= (=> (= x1283 (not (< 32 x658))) (and x1283 x1655)) x705))
(assert (= x403 (or x1115 x594)))
(assert (= (=> (and (= x1374 (not (> x2093 132))) (= (x808 x1840 1) x1870)) (and x1374 (=> (= x636 x1870) x1088))) x1125))
(assert (x1602 x1310))
(assert (x1602 x1033))
(assert (x1602 x365))
(assert (x1602 x1989))
(assert (= (+ 1 (x643 x1939)) (x643 (x808 x1939 1))))
(assert (= (x712 128) (x643 (x1622 (x712 128)))))
(assert (x1602 x2215))
(assert (x1602 x2198))
(assert (= (=> (= (not (< 32 x409)) x2160) (and x372 x2160)) x1172))
(assert (x1602 x388))
(assert (= (+ (x643 x1252) x760) (x643 (x808 x1252 x760))))
(assert (x1602 x1856))
(assert (=> (>= 10000 (x1110 192)) (= (x1622 (x1110 192)) (x1546 (x1110 192)))))
(assert (= (and (not x2278) x1243) x689))
(assert (= 0 (x1439 96)))
(assert (x1602 x338))
(assert (x1602 x1764))
(assert (x1602 x1647))
(assert (x1602 x1083))
(assert (x349 128))
(assert (x26 x481))
(assert (x1602 x1678))
(assert (= 0 (x123 388)))
(assert (x2495 x490))
(assert (= (or x317 x1990) x129))
(assert (x1602 x1158))
(assert (= 100000000000000000 (x643 (x1546 100000000000000000))))
(assert (x1602 x319))
(assert (= x16 (or x2318 x411)))
(assert (x1602 x47))
(assert (x1602 x1417))
(assert (= x1441 (=> (and (= x1991 (x2309 x733 2)) (<= x1304 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x474 (ite (> x2107 0) x1991 (x715 127 x1991))) (= x2107 (x715 1 x733)) (= (= x2107 (ite x1558 1 0)) x1069) (<= 0 x1304) (= x1558 (< x474 32))) (and (=> x1069 x1428) (=> (and (and (= x1236 (= x794 0)) (= (x715 1 x733) x794)) (not x1069)) (and (=> (and (not x1236) (= x1954 (< 0 x474))) (and (=> x1954 x2189) (=> (not x1954) x2065))) (=> x1236 x200)))))))
(assert (x1602 x1553))
(assert (and (x303 x883 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x883 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x883 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x883 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x883 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x883 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= x394 (and x1231 x1809)))
(assert (= (x460 256) (x643 (x1622 (x460 256)))))
(assert (= x1738 (and x316 (not x522))))
(assert (= (and (not x1905) x175) x1766))
(assert (= (x1913 256) 0))
(assert (= x1677 (and (not x677) x1399)))
(assert (x1602 x2294))
(assert (= x2021 (=> (and (= x1571 (not (> x33 32))) (= (x890 128) x174)) (and x1571 (=> (= 32 x988) x739)))))
(assert (x1602 x38))
(assert (x349 x290))
(assert (= x2504 (or x1527 x1099 x2281 x1186 x348)))
(assert (x1602 x916))
(assert (= (and x1032 x587) x2507))
(assert (x1280 (x525 128)))
(assert (x1602 x841))
(assert (x1602 x741))
(assert (x1602 x669))
(assert (= x1812 (=> (and (= x385 (x808 x2190 1)) (= (not (< (x643 x385) (x643 x2348))) x861)) (and x861 x122))))
(assert (= (x1546 4294967295) (x1622 4294967295)))
(assert (x1602 x1782))
(assert (= (=> (and (= x666 x158) (= x1891 x1838) (= x301 x1581) (= x1582 x462) (= x1202 x1339)) x2387) x616))
(assert (x1280 (x1501 160)))
(assert (x2495 x816))
(assert (= (and x1952 x84) x499))
(assert (= (+ (x643 x2261) x456) (x643 (x808 x2261 x456))))
(assert (= (and x1023 x1027) x1618))
(assert (x1602 x331))
(assert (=> (>= 10000 x1810) (= (x1622 x1810) (x1546 x1810))))
(assert (x349 x2446))
(assert (x1602 x2219))
(assert (= (x1622 (x643 x2348)) x2348))
(assert (x1602 x2324))
(assert (= (x1501 256) (x643 (x1622 (x1501 256)))))
(assert (x1602 x2475))
(assert (= x959 (and x1373 x2327)))
(assert (x1602 x609))
(assert (= x22 (and x426 x1072)))
(assert (x1602 x2307))
(assert (x1280 x2475))
(assert (x1602 x816))
(assert (= (and x625 x178) x1617))
(assert (x1602 x750))
(assert (x1602 x2043))
(assert (= (or x395 x2431) x1206))
(assert (x349 x1006))
(assert (x349 x1748))
(assert (x1602 x2306))
(assert (= (+ (x643 x24) x1196) (x643 (x808 x24 x1196))))
(assert (= (and x745 x2254) x2428))
(assert (x1602 x828))
(assert (=> (<= (x2164 128) 10000) (= (x1546 (x2164 128)) (x1622 (x2164 128)))))
(assert (x1602 x1805))
(assert (x1602 x1479))
(assert (=> (<= (x1501 256) 10000) (= (x1546 (x1501 256)) (x1622 (x1501 256)))))
(assert (= (and x1740 x744) x342))
(assert (x349 x1911))
(assert (x1602 x198))
(assert (= (and (not x146) x1190) x1728))
(assert (= x2517 (and x2047 (not x2449))))
(assert (x1602 x241))
(assert (=> (>= 10000 x1955) (= (x1622 x1955) (x1546 x1955))))
(assert (x2495 127))
(assert (x1602 x2417))
(assert (x1602 x1114))
(assert (= x503 (or x2038 x311)))
(assert (= x1243 (and x2156 x651)))
(assert (= x1570 (and x677 x1399)))
(assert (= (and x421 x30) x1611))
(assert (x1602 x1639))
(assert (= 0 (x2191 292)))
(assert (= 3285302901 (x643 (x1546 3285302901))))
(assert (x1602 x1752))
(assert (x1602 x2091))
(assert (x1602 x1031))
(assert (= (and x1841 x749) x2391))
(assert (= x2282 (or x2122 x974)))
(assert (x1602 x2311))
(assert (and (x303 x502 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x502 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x502 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x502 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x502 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x502 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= (=> (and (= x2263 x1448) (and (or (and x1903 (and (= (x2397 x125) x1819) (>= x1819 0) (> 1461501637330902918203684832716283019655932542976 x1819) (= x461 (and x191 x2140)) (= x2056 (x1184 x2275)) x2224 (> x1134 x826) (= (ite x191 x133 x85) x1163) (= x2086 (x1199 (+ x1894 x133))) (= (ite x191 x1574 x2056) x1894) (= x835 (not (= x1819 0))) (= x1819 x296) (= (x802 x826) x85) (= x1887 x2086) (= (x1184 x1599) x1574) (= x294 (= x826 x1273)) (= (not (= x592 x826)) x2285) (= (x2162 (x1546 1) 0) x2040) (= (x802 x826) x1564) (= x1599 1) (= (x2379 x1819) x1273) (<= x1819 1461501637330902918203684832716283019655932542975) (= x191 (or x2285 x1709)) (= x592 (x1308 x1564)) (= (>= x1564 x133) x1709) (= (or x294 (not x835)) x508) (= 0 x2275) (= (x808 x2040 x826) x125) (= x2224 (or x508 (not x461))))) (and (and (= x133 x1887) (= x296 0)) (not x1903))) (and (= x2263 x80) (= x1300 x2016) (not (= 2867924802 x2036)) (not (= x2036 3018310333)) (not (< x2036 2726977199)) (= x1394 x2357) (= (x2245 (x1622 x1542)) x444) (= x826 x2016) (= x47 0) (> 3081457077 x2036) x2153 (= (not (= x1394 x1300)) x2533) (not (< x2036 2112976665)) (= 3050870311 x2036) (= x1903 (> x1134 x826)) (not (< x2036 2867924802)) (= x1583 (not (= x80 0))) (not (= 2923951457 x2036)) (= x2153 (or (not x1957) x1583)) (< 0 x444)))) x1826) x510))
(assert (x1280 x81))
(assert (x349 x2275))
(assert (= x1126 (and x214 (not x878))))
(assert (x1602 x1612))
(assert (= x1791 (and x357 x591)))
(assert (= (x925 (+ 128 (x1199 (+ x574 100)))) 0))
(assert (= (x1869 320) (x643 (x1622 (x1869 320)))))
(assert (x1602 x1335))
(assert (= x1952 (or (and (not x1239) x73) x1880)))
(assert (x1602 x786))
(assert (= x2011 (and (not x109) x2085)))
(assert (x1602 x1393))
(assert (x1616 x551))
(assert (= (x1622 2279315017) (x1546 2279315017)))
(assert (x1602 x1676))
(assert (= (or x2488 x1773) x831))
(assert (= 4294967295 (x643 (x1546 4294967295))))
(assert (= x438 (or x944 x503 x1885)))
(assert (x1602 x141))
(assert (and (x303 x2454 32) (x1404 x2454 32) (x2203 x2454 32) (=> (< 0 32) (= x2454 (+ (* 32 (x2309 x2454 32)) (x2202 x2454 32))))))
(assert (x1602 x2031))
(assert (= 0 (x2481 128)))
(assert (x1280 (x1110 256)))
(assert (x1602 x1420))
(assert (= (and x86 (not x2489)) x2317))
(assert (x1602 x433))
(assert (= (and x2361 (not x350)) x284))
(assert (= (or x1071 x627) x1865))
(assert (x1602 x1889))
(assert (= 0 (x2191 356)))
(assert (=> (>= 10000 x900) (= (x1546 x900) (x1622 x900))))
(assert (= x1550 (or x1181 x1953)))
(assert (= x898 (or x1744 x2276)))
(assert (x2495 x338))
(assert (= x1078 (and x1506 x1143)))
(assert (= x1079 (or x1871 x697)))
(assert (= (x1622 3081457077) (x1546 3081457077)))
(assert (= 0 (x925 (+ (x1199 (+ 100 x574)) 160))))
(assert (x1602 x391))
(assert (= (=> (and (= x2121 (not (> x1150 32))) (= (x951 x2070) x985)) (and x2121 x1460)) x924))
(assert (x1602 x1376))
(assert (= (=> (and (= x1430 x2050) (= (x1199 (+ 128 x519)) x2050)) x844) x161))
(assert (x1602 x2369))
(assert (x1620 x530))
(assert (= (and x1453 (not x1897)) x649))
(assert (= 0 (x1459 256)))
(assert (x1602 x1768))
(assert (= x2312 (or x838 (and x917 (not x89)))))
(assert (x1616 x2539))
(assert (x1602 x1515))
(assert (= (+ (x643 x2414) x772) (x643 (x808 x2414 x772))))
(assert (= (and (not x1900) x2020) x1809))
(assert (= (x1622 2923951457) (x1546 2923951457)))
(assert (x1602 x221))
(assert (x1602 x2340))
(assert (x2495 x991))
(assert (= (and (not x1899) x581) x2522))
(assert (x1602 x2022))
(assert (x1602 x1257))
(assert (= x176 (and x1495 x1565)))
(assert (x1602 x185))
(assert (x1602 x314))
(assert (= (=> (and (or (and (and (= x289 (x1212 (x1622 x1542))) (= x1053 (x1348 (x1622 x1542))) (= (x1199 (+ x1539 x1053)) x165) (= x2345 x666) (= (- x289 x1539) x958) (= x1891 x476) (= x1539 (ite (= 0 x2345) x1470 0)) (= x1492 x962) (< (+ x1053 x1539) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2062 x1582) (= x1202 x1452) (= x2426 x301)) x1063) (and (not x1063) (and (= x476 x1891) (= x1202 x1452) (= x2426 x301) (= x1582 x2062) (= x666 x2345) (= x1492 x962)))) (= x1063 (= x2345 0))) x1054) x1314))
(assert (x1602 x162))
(assert (x1602 x2223))
(assert (= (x643 (x1622 (x875 288))) (x875 288)))
(assert (x1602 x999))
(assert (= (x954 320) 0))
(assert (x1602 x950))
(assert (x1280 x1813))
(assert (x1602 x1693))
(assert (x1602 x1494))
(assert (= (and x659 x5) x2501))
(assert (x1602 x1204))
(assert (= x1246 (and x1738 x1973)))
(assert (= 115792089237316195423570985008687907853269984665640564039457484007913129639935 (x643 (x1546 115792089237316195423570985008687907853269984665640564039457484007913129639935))))
(assert (and (x1522 x1917 2) (x2090 x1917 2) (= (- x1917 (x715 1 x1917)) (* (x2309 x1917 2) 2)) (x131 x1917 2) (=> (and (> x1917 0) (> 2 0)) (and (> (* (x2309 x1917 2) 2) (- x1917 2)) (>= x1917 (* (x2309 x1917 2) 2)))) (x2030 x1917 2)))
(assert (= x2361 (and x1938 x1673)))
(assert (x1602 x559))
(assert (= (and x2505 x885) x2525))
(assert (= (x643 (x1622 x1386)) x1386))
(assert (x1602 x452))
(assert (=> (<= (x875 288) 10000) (= (x1546 (x875 288)) (x1622 (x875 288)))))
(assert (= x1106 (=> (and (= x2230 x2190) (= x1917 x573)) x1185)))
(assert (x1602 x2132))
(assert (x1602 x1080))
(assert (x1602 x383))
(assert (x1602 x362))
(assert (x1602 x2345))
(assert (x1602 x1720))
(assert (= x1427 (=> (and (= x1824 x1451) (and (and (= x2357 x686) (not (< x186 2726977199)) (= x2217 (> x784 x686)) (not (> 2112976665 x186)) (not (= 3018310333 x186)) (not (< x186 2867924802)) (= x1824 x2311) (not (= x186 2923951457)) (= x186 3050870311) (> 3081457077 x186) (not (= x186 2867924802)) (< 0 x1623) (= x1623 (x2245 (x1622 x1542)))) (or (and x2217 (and (= x263 (x808 x1405 x686)) (= (not (= 0 x1754)) x2321) (= (<= x2307 x201) x964) (= x1626 (= x2415 x686)) (< x1754 1461501637330902918203684832716283019655932542976) (= x345 (x903 x201)) (< x686 x784) (= (not (= x345 x686)) x518) (>= x1754 0) (= (x292 x1754) x2415) (= (x1199 (+ x2307 x2418)) x934) (= (x285 x686) x201) (= x750 (x1184 x2257)) (= (or x518 x964) x563) (= x934 x557) (= x1754 (x1351 x263)) (= x245 x1754) (= x1605 (and x2252 x563)) (= x897 (or (not x2321) x1626)) (= (x1184 x633) x611) (= (ite x563 x750 x611) x2418) (<= x1754 1461501637330902918203684832716283019655932542975) (= x2257 1) (= x375 (or (not x1605) x897)) x375 (= x633 0) (= x1405 (x2162 (x1546 1) 0)) (= (ite x563 x2307 x1365) x1158) (= x1365 (x285 x686)))) (and (and (= x2307 x557) (= x245 0)) (not x2217))))) x1074)))
(assert (= (and x1929 x1611) x1099))
(assert (x1602 x1476))
(assert (x1602 x1891))
(assert (= x1828 (and (not x1069) x1206)))
(assert (x1602 x1760))
(assert (x1602 x363))
(assert (x1602 x716))
(assert (= (x1913 160) 0))
(assert (= (and (not x1067) x831) x51))
(assert (= x1613 (or x2024 x1618)))
(assert (x1602 x291))
(assert (x1602 x1789))
(assert (x1602 x707))
(assert (x1602 x797))
(assert (x1602 x1525))
(assert (x1602 x115))
(assert (x1602 x287))
(assert (= x45 x752))
(assert (x2495 x1667))
(assert (x1602 x1156))
(assert (and (x303 x2339 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2339 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2339 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2339 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2339 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2339 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= (or x1168 x469 x2542) x876))
(assert (x1602 x2409))
(assert (= x1562 (=> (and (= (x2309 x1667 2) x1551) (= (= (ite x945 1 0) x1461) x930) (<= 0 x513) (= (< x1965 32) x945) (= (ite (< 0 x1461) x1551 (x715 127 x1551)) x1965) (<= x513 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x715 1 x1667) x1461)) (and (=> (and (not x930) (and (= x2242 (= x1035 0)) (= x1035 (x715 1 x1667)))) (and (=> (and (= (< 0 x1965) x21) (not x2242)) (and (=> x21 x2110) (=> (not x21) x484))) (=> x2242 x858))) (=> x930 x1481)))))
(assert (= (=> (and (= x1892 (x2131 (x1622 x1542))) (= x2464 (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1892 x1470)) (>= x2118 x1470))) (= 164 x857) (= (x2131 (x1622 x1542)) x2118) (= x2022 (x1199 (+ 164 x1944))) (= x1854 (x1345 (- x2022 164)))) (and (=> (and (and (= x1891 x1634) (= x1492 0) (= x301 x810) (= x1202 x1134) (= x666 0) (= x1582 x2140)) (not x2464)) x1054) (=> (and x2464 (and (= (x583 (x1622 x1542)) x970) (= x1382 4) (= x1928 (x1199 (+ x1470 x970))) (= (x2131 (x1622 x1542)) x470) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1470 x970)) (> x2165 0) (= (= x1470 0) x1237) (= x1854 x1382) (= x2165 (x2245 (x1622 x1542))) (= 100641684887429822015232653770480429695213136867978658013931169090238473568256 x1726) (= (- x470 x1470) x1942))) (and (=> (and (and (>= x2031 0) (> 1461501637330902918203684832716283019655932542976 x2031) (= x459 3733007566) (= (x1904 96) x1852) (not (< x459 3081457077)) (> 1461501637330902918203684832716283019655932542976 x1282) (<= x2031 1461501637330902918203684832716283019655932542975) (<= x1282 1461501637330902918203684832716283019655932542975) (not (> 2112976665 x459)) (not (> 4 x1382)) (>= x1282 0) (= x135 (> x1852 0)) (< x459 3948783980) (not (> 3733007566 x459))) x1237) (and (=> (and (= x1040 0) (not x135)) x2293) (=> x135 x113))) (=> (and (not x1237) (and (= x172 x1634) (= x2140 x728))) x1961))))) x1497))
(assert (= x11 (and x1696 (not x1364))))
(assert (= (or x1617 x110) x2259))
(assert (= x311 (and x1176 x1758)))
(assert (= (x875 224) (x643 (x1622 (x875 224)))))
(assert (x1602 x60))
(assert (x1602 x646))
(assert (x1602 x75))
(assert (x1602 x2199))
(assert (x349 x2296))
(assert (= x1109 (or x1039 x453)))
(assert (x1602 x931))
(assert (x1602 x1037))
(assert (= (and x1933 x1230) x961))
(assert (x1602 x725))
(assert (= 78829575338057407266098799593532030895783219923606930547737006156155256307712 (x643 (x1546 78829575338057407266098799593532030895783219923606930547737006156155256307712))))
(assert (x1602 x2107))
(assert (x1602 x1510))
(assert (= (or x1078 (and x1717 x1474) x463 x1375 x1723 x190 x1576 x1703 x1193 x692 (and (not x1971) x961) (and x1230 (not x1933)) (and x2372 (not x2381)) x51 (and x2420 x2041) x2075 (and x1407 x795) x693) x453))
(assert (x349 x1529))
(assert (x1602 x1386))
(assert (= (and x2449 x2047) x620))
(assert (x349 256))
(assert (= x1808 (and (not x1112) x2522)))
(assert (x1602 x1422))
(assert (= (x643 (x1622 (x1869 160))) (x1869 160)))
(assert (x1602 x1365))
(assert (=> (<= x160 10000) (= (x1622 x160) (x1546 x160))))
(assert (= x893 (and (not x1565) x1495)))
(assert (= (and x1940 (not x870)) x634))
(assert (x349 x1991))
(assert (= (=> (= x1216 (> (x643 x2348) (x643 x2190))) (and (=> x1216 x1812) (=> (not x1216) x122))) x1185))
(assert (= (and (not x1162) x57) x2129))
(assert (= x938 (=> (and (= x2289 (x808 x1175 1)) (= x1281 (not (< (x643 x2289) (x643 x2491))))) (and x1281 x1155))))
(assert (x26 x674))
(assert (x1602 x1988))
(assert (x1602 x78))
(assert (=> (<= x1432 10000) (= (x1546 x1432) (x1622 x1432))))
(assert (x1602 x2390))
(assert (= 18446744073709551615 (x643 (x1546 18446744073709551615))))
(assert (x1602 x1547))
(assert (= (or (and x595 x225) x708) x1157))
(assert (x1602 x1970))
(assert (x349 x481))
(assert (= (and x2453 x1237) x1749))
(assert (x1602 x1794))
(assert (= (and x214 x878) x1113))
(assert (and (x303 x530 26959946667150639794667015087019630673637144422540572481103610249216) (x1404 x530 26959946667150639794667015087019630673637144422540572481103610249216) (x2203 x530 26959946667150639794667015087019630673637144422540572481103610249216) (=> (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (= x530 (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 (x2309 x530 26959946667150639794667015087019630673637144422540572481103610249216)) (x2202 x530 26959946667150639794667015087019630673637144422540572481103610249216))))))
(assert (and (x1522 x1156 32) (x2090 x1156 32) (= (- x1156 (x715 31 x1156)) (* (x2309 x1156 32) 32)) (x131 x1156 32) (=> (and (> x1156 0) (> 32 0)) (and (> (* (x2309 x1156 32) 32) (- x1156 32)) (>= x1156 (* (x2309 x1156 32) 32)))) (x2030 x1156 32)))
(assert (x1602 x451))
(assert (= (x1622 50455196340412629536459377552246818957342304218644716315923982585962625499136) (x1546 50455196340412629536459377552246818957342304218644716315923982585962625499136)))
(assert (x1602 x1759))
(assert (= x1181 (and x1749 x135)))
(assert (and (x303 x2296 32) (x1404 x2296 32) (x2203 x2296 32) (=> (< 0 32) (= x2296 (+ (* 32 (x2309 x2296 32)) (x2202 x2296 32))))))
(assert (x1602 x2328))
(assert (= (x643 (x808 x1781 3)) (+ 3 (x643 x1781))))
(assert (= x2055 (or x1221 x2112)))
(assert (x1602 x1887))
(assert (x1602 x1556))
(assert (=> (<= (x460 160) 10000) (= (x1546 (x460 160)) (x1622 (x460 160)))))
(assert (x1602 x1915))
(assert (x2495 x1748))
(assert (x1602 x1130))
(assert (x1602 x266))
(assert (and (x303 x2227 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x2227 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x2227 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2227 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x2227 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x2227 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (= x887 x200))
(assert (= (x643 (x1546 1461501637330902918203684832716283019655932542976)) 1461501637330902918203684832716283019655932542976))
(assert (x1602 x856))
(assert (x1602 x1542))
(assert (x1602 x1846))
(assert (x1602 x1920))
(assert (x1602 x557))
(assert (= (x643 (x808 x216 x1256)) (+ x1256 (x643 x216))))
(assert (= 56965738197333823925951794324075424010313516842063129668313081903848242544640 (x643 (x1546 56965738197333823925951794324075424010313516842063129668313081903848242544640))))
(assert (x349 x733))
(assert (x1602 x514))
(assert (x1602 x2059))
(assert (= (=> (= (= x704 0) x84) (and (=> (and (and (= x1269 x1446) (= x171 x1505) (= x2064 0) (= x226 x916) (= x769 1) (= x520 x1255)) (not x84)) x2297) (=> (and (and (= x2140 x360) (= x1634 x2132)) x84) x2187))) x1925))
(assert (x1602 x658))
(assert (= (=> (and (= (= x83 0) x2489) (or (not x2489) x2489)) x1664) x632))
(assert (= x102 (or x1113 x2467)))
(assert (x1602 x440))
(assert (= (x875 320) (x643 (x1622 (x875 320)))))
(assert (x1602 x933))
(assert (x1602 x2535))
(assert (=> (<= x1386 10000) (= (x1622 x1386) (x1546 x1386))))
(assert (= x819 (or x1621 x343 x197)))
(assert (= (and x422 (not x104)) x1276))
(assert (x1602 x2080))
(assert (= (x643 (x808 x1840 x1337)) (+ x1337 (x643 x1840))))
(assert (x1602 x2081))
(assert (= (x1546 4294967296) (x1622 4294967296)))
(assert (= (and x25 x63) x1657))
(assert (x1602 x624))
(assert (and (x303 x1879 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x1879 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x1879 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1879 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x1879 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x1879 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1602 x239))
(assert (x1602 x2424))
(assert (x1602 x1309))
(assert (x1602 x1623))
(assert (= x1425 (and x464 x2166)))
(assert (x182 x604))
(assert (x1602 x934))
(assert (= 0 (x1913 320)))
(assert (= (or x1274 (and x1570 x1909)) x153))
(assert (=> (<= (x525 192) 10000) (= (x1546 (x525 192)) (x1622 (x525 192)))))
(assert (= (=> (and (= x1149 (<= x814 224)) (= (x1345 (- x1511 128)) x814) (= x1511 (x1199 (+ x840 128)))) (and (=> (and (= (= (ite x1411 1 0) x738) x1021) (= (x715 1 x1114) x738) (= (ite (< 0 x738) x2540 (x715 127 x2540)) x519) (= (> 32 x519) x1411) (= x2540 (x2309 x1114 2)) (= (ite (>= 32 x814) (x2162 (x1622 (x1501 128)) 0) (ite (>= 64 x814) (x173 (x1622 (x1501 128)) (x1622 (x1501 160)) 0) (ite (<= x814 96) (x2109 (x1622 (x1501 128)) (x1622 (x1501 160)) (x1622 (x1501 192)) 0) (ite (<= x814 128) (x346 (x1622 (x1501 128)) (x1622 (x1501 160)) (x1622 (x1501 192)) (x1622 (x1501 224)) 0) (ite (<= x814 160) (x401 (x1622 (x1501 128)) (x1622 (x1501 160)) (x1622 (x1501 192)) (x1622 (x1501 224)) (x1622 (x1501 256)) 0) (ite (>= 192 x814) (x748 (x1622 (x1501 128)) (x1622 (x1501 160)) (x1622 (x1501 192)) (x1622 (x1501 224)) (x1622 (x1501 256)) (x1622 (x1501 288)) 0) (ite (<= x814 224) (x1638 (x1622 (x1501 128)) (x1622 (x1501 160)) (x1622 (x1501 192)) (x1622 (x1501 224)) (x1622 (x1501 256)) (x1622 (x1501 288)) (x1622 (x1501 320)) 0) (x1622 x1357)))))))) x2197)) (and (=> (and (and (= x1951 x2140) (= x1499 x1634) (= x2344 x810) (= x1483 x1134) (= x259 0)) x1021) x2441) (=> (and (not x1021) (and (= x1897 (= x609 0)) (= x609 (x715 1 x1114)))) (and (=> (and (not x1897) (and (= (x2162 (x1546 5) 0) x647) (= x850 (> x519 0)))) (and (=> (not x850) x161) (=> x850 x441))) (=> (and (and (= x2071 x1430) (= x1669 (x715 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1114)) (= (x1199 (+ 128 x519)) x2071)) x1897) x844))))) x1149)) x1524))
(assert (= x1447 (=> (and (= x2515 (x106 x1207)) (<= 0 x2515) (>= 1461501637330902918203684832716283019655932542975 x2515) (> 1461501637330902918203684832716283019655932542976 x2515) (= (= x1542 x2515) x1343)) (and (=> (and x1343 (and (= (= 106459005500898838667931598610041423549574964228674563513410788872267948359680 (x764 x2319 224)) x2406) (< x2319 4294967296) (>= x2319 0) (<= x2319 4294967295))) (and (=> (and (and (= x1137 (x418 128)) (= (x1199 (+ 106459005500898838667931598610041423549574964228674563513410788872267948359680 x2225)) x2233) (= (< 0 x1137) x398) (= (x715 26959946667150639794667015087019630673637144422540572481103610249215 x530) x2225) (= (x1844 160) x530)) x2406) (and (=> (and (not x398) (= 0 x1076)) x2184) (=> (and (and (= x747 (> x1137 32)) (= (x2513 160) x1360)) x398) (and (=> (and x747 (and (= x421 (< 64 x1137)) (= (x2513 192) x287))) (and (=> (and x421 (and (= (< 96 x1137) x1929) (= x1400 (x2513 224)))) (and (=> x1929 x1119) (=> (and (= x1076 96) (not x1929)) x2184))) (=> (and (not x421) (= x1076 64)) x2184))) (=> (and (not x747) (= x1076 32)) x2184))))) (=> (and (and (>= 4294967295 x2319) (= (= (x764 x2319 224) 100641684887429822015232653770480429695213136867978658013931169090238473568256) x371) (> 4294967296 x2319) (>= x2319 0)) (not x2406)) (and (=> (and (not x371) (and (>= x2319 0) (= x1241 (= 56965738197333823925951794324075424010313516842063129668313081903848242544640 (x764 x2319 224))) (< x2319 4294967296) (>= 4294967295 x2319))) (and (=> (and (and (= (x2350 160) x2363) (= (x1199 (+ 56965738197333823925951794324075424010313516842063129668313081903848242544640 x196)) x1566) (= (x715 26959946667150639794667015087019630673637144422540572481103610249215 x2363) x196) (= (> x1169 0) x2505) (= (x836 128) x1169)) x1241) (and (=> (and (= x1092 0) (not x2505)) x70) (=> (and (and (= x164 (< 32 x1169)) (= x597 (x1191 160))) x2505) (and (=> (and x164 (and (= (x1191 192) x136) (= (< 64 x1169) x494))) (and (=> (and x494 (and (= (> x1169 96) x157) (= x497 (x1191 224)))) (and (=> x157 x1028) (=> (and (not x157) (= x1092 96)) x70))) (=> (and (not x494) (= x1092 64)) x70))) (=> (and (= 32 x1092) (not x164)) x70))))) (=> (and (and (<= x2319 4294967295) (> 4294967296 x2319) (= x866 (= (x764 x2319 224) 50455196340412629536459377552246818957342304218644716315923982585962625499136)) (>= x2319 0)) (not x1241)) (and (=> (and (and (= 1 x2142) (= x913 x2140) (= x1634 x60) (= x1134 x1650) (= x2410 x810)) (not x866)) x2323) (=> (and x866 (and (= (x715 26959946667150639794667015087019630673637144422540572481103610249215 x991) x1417) (= (x1199 (+ x1417 50455196340412629536459377552246818957342304218644716315923982585962625499136)) x694) (= (> x1219 0) x709) (= x1760 (x715 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1820)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1498) (= x1545 (x1345 (- x574 128))) (>= x1498 0) (= x2177 (x1439 96)) (= x574 (x1199 (+ 260 x1760))) (= x1540 (x1345 (- x1545 32))) (= x1820 (x1199 (+ x2177 31))) (= x991 (x139 160)) (= x1219 (x404 128)))) (and (=> (and (= x1976 0) (not x709)) x711) (=> (and (and (= x642 (x27 160)) (= x1905 (< 32 x1219)) (= x2258 x574)) x709) (and (=> (and (and (= (< 64 x1219) x1450) (= (x27 192) x990) (= x528 (x1199 (+ x574 32)))) x1905) (and (=> (and x1450 (and (= (< 96 x1219) x854) (= x1711 (x1199 (+ 64 x574))) (= x2316 (x27 224)))) (and (=> x854 x1959) (=> (and (= x1976 96) (not x854)) x711))) (=> (and (= 64 x1976) (not x1450)) x711))) (=> (and (= 32 x1976) (not x1905)) x711))))))))) (=> (and x371 (and (= x232 (> x1944 0)) (= (x715 26959946667150639794667015087019630673637144422540572481103610249215 x490) x2098) (= (x1199 (+ x2098 100641684887429822015232653770480429695213136867978658013931169090238473568256)) x1197) (= (x2439 128) x1944) (= x490 (x825 160)))) (and (=> (and (and (= (< 32 x1944) x179) (= x736 (x560 160))) x232) (and (=> (and x179 (and (= (x560 192) x1468) (= (> x1944 64) x2173))) (and (=> (and x2173 (and (= (x560 224) x2376) (= (< 96 x1944) x1228))) (and (=> x1228 x2305) (=> (and (= x1518 96) (not x1228)) x2066))) (=> (and (= x1518 64) (not x2173)) x2066))) (=> (and (= 32 x1518) (not x179)) x2066))) (=> (and (not x232) (= 0 x1518)) x2066))))))) (=> (and (and (= (x715 1 x2399) x997) (= x1547 (x715 1 x2399)) (= (ite x652 1 0) x465) (= (x2309 x2399 2) x1013) (>= x81 0) (= (x756 x1251) x2399) (<= x81 1461501637330902918203684832716283019655932542975) (= x908 (= x997 0)) (= (ite (< 0 x1547) x1013 (x715 127 x1013)) x409) (= x81 (x106 x1207)) (not (= x465 x1547)) (= x1251 (x808 x237 1)) (= (> 32 x409) x652) (> 1461501637330902918203684832716283019655932542976 x81)) (not x1343)) (and (=> (and (not x908) (= (< 0 x409) x268)) (and (=> x268 x1172) (=> (not x268) x372))) (=> x908 x149)))))))
(assert (x1602 x1689))
(assert (x1602 x231))
(assert (x1602 x133))
(assert (x1602 x1606))
(assert (= (and x2008 (not x1021)) x1453))
(assert (x1602 x883))
(assert (x349 x1177))
(assert (= (=> (and (or x1226 (not x1226)) (= (= x400 0) x1226)) x2329) x1967))
(assert (x1602 x794))
(assert (= (x825 160) 0))
(assert (x1602 x519))
(assert (x1602 x1668))
(assert (x1602 x2288))
(assert (= 0 (x1459 160)))
(assert (= x975 (and x111 x1903)))
(assert (x1602 x513))
(assert (x1602 x1092))
(assert (x182 x1156))
(assert (= (=> (and (or x1716 (not x1716)) (= x1716 (= 0 x2235))) x2358) x1401))
(assert (= (x29 388) 0))
(assert (x1602 x2410))
(assert (=> (>= 10000 (x1110 160)) (= (x1546 (x1110 160)) (x1622 (x1110 160)))))
(assert (= (x525 224) (x643 (x1622 (x525 224)))))
(assert (= (+ 1 (x643 x1840)) (x643 (x808 x1840 1))))
(assert (x349 x1419))
(assert (x1602 x1325))
(assert (= (x643 (x808 x1896 1)) (+ 1 (x643 x1896))))
(assert (= x2013 x2367))
(assert (x1602 x1811))
(assert (= x1833 (and (not x1226) x1188)))
(assert (= (x643 (x1622 (x1501 192))) (x1501 192)))
(assert (x1602 x396))
(assert (= (x1622 56965738197333823925951794324075424010313516842063129668313081903848242544640) (x1546 56965738197333823925951794324075424010313516842063129668313081903848242544640)))
(assert (x717 x1878 x1084))
(assert (x1602 x704))
(assert (x1602 x574))
(assert (x1602 x400))
(assert (= (or x932 x719) x917))
(assert (x1616 x1013))
(assert (x1602 x1082))
(assert (x1602 x1893))
(assert (= x2387 (=> (and (= x1491 x462) (= x328 x1838) (= x158 x1569) (= x2198 x1581) (= x1339 x631)) x1378)))
(assert (x1602 x1273))
(assert (x1602 x1429))
(assert (x1602 x1446))
(assert (x1602 x1338))
(assert (x1602 x467))
(assert (x1602 x1968))
(assert (x1616 x1004))
(assert (= x2035 (and x1226 x1188)))
(assert (x1602 x2354))
(assert (=> (>= 10000 (x712 192)) (= (x1622 (x712 192)) (x1546 (x712 192)))))
(assert (=> (<= (x1110 128) 10000) (= (x1546 (x1110 128)) (x1622 (x1110 128)))))
(assert (x1602 x415))
(assert (= (x1622 2726977199) (x1546 2726977199)))
(assert (and (x303 x1561 128) (x1404 x1561 128) (x2203 x1561 128) (=> (< 0 128) (= x1561 (+ (* 128 (x2309 x1561 128)) (x2202 x1561 128))))))
(assert (x1280 (x875 256)))
(assert (and (x303 x78 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1404 x78 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2203 x78 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x78 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2309 x78 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x2202 x78 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x1602 x219))
(assert (x1602 x244))
(assert (x1602 x2000))
(assert (=> (<= (x1501 160) 10000) (= (x1546 (x1501 160)) (x1622 (x1501 160)))))
(assert (x1602 x992))
(assert (and (x303 x1917 2) (x1404 x1917 2) (x2203 x1917 2) (=> (< 0 2) (= x1917 (+ (* 2 (x2309 x1917 2)) (x2202 x1917 2))))))
(assert (x1602 x686))
(assert (= (x1622 (x643 x2253)) x2253))
(assert (= (x643 (x1622 (x525 160))) (x525 160)))
(assert (= (+ (x643 x1175) 1) (x643 (x808 x1175 1))))
(assert (= (x954 192) 0))
(assert (= (or x1010 x511) x2047))
(assert (x1602 x2178))
(assert (= (and x1243 x2278) x2237))
(assert (x1602 x186))
(assert (x1602 x1331))
(assert (x1602 x2155))
(assert (x1602 x962))
(assert (x1280 (x1110 224)))
(assert (x1602 x706))
(assert (x615 x1667))
(assert (x1602 x851))
(assert (= x2020 (and x357 (not x591))))
(assert (= x1790 (and x1899 x581)))
(assert (x1602 x2314))
(assert (x1602 x817))
(assert (x182 x1667))
(assert (x1602 x1635))
(assert (= x224 (=> (and (= x2195 (x1199 (+ 128 x1908))) (= x1509 (<= x820 224)) (= x820 (x1345 (- x2195 128)))) (and (=> (and (= (< x1204 32) x42) (= x2061 (= (ite x42 1 0) x101)) (= (ite (>= 32 x820) (x2162 (x1622 (x460 128)) 0) (ite (<= x820 64) (x173 (x1622 (x460 128)) (x1622 (x460 160)) 0) (ite (>= 96 x820) (x2109 (x1622 (x460 128)) (x1622 (x460 160)) (x1622 (x460 192)) 0) (ite (<= x820 128) (x346 (x1622 (x460 128)) (x1622 (x460 160)) (x1622 (x460 192)) (x1622 (x460 224)) 0) (ite (>= 160 x820) (x401 (x1622 (x460 128)) (x1622 (x460 160)) (x1622 (x460 192)) (x1622 (x460 224)) (x1622 (x460 256)) 0) (ite (<= x820 192) (x748 (x1622 (x460 128)) (x1622 (x460 160)) (x1622 (x460 192)) (x1622 (x460 224)) (x1622 (x460 256)) (x1622 (x460 288)) 0) (ite (<= x820 224) (x1638 (x1622 (x460 128)) (x1622 (x460 160)) (x1622 (x460 192)) (x1622 (x460 224)) (x1622 (x460 256)) (x1622 (x460 288)) (x1622 (x460 320)) 0) (x1622 x1432)))))))) x1253) (= x1748 (x2309 x1114 2)) (= x101 (x715 1 x1114)) (= x1204 (ite (< 0 x101) x1748 (x715 127 x1748)))) (and (=> x2061 x1481) (=> (and (and (= (= 0 x49) x1141) (= x49 (x715 1 x1114))) (not x2061)) (and (=> (and (and (= x789 (x2162 (x1546 5) 0)) (= (< 0 x1204) x1147)) (not x1141)) (and (=> (not x1147) x973) (=> x1147 x1332))) (=> (and (and (= x1734 x2332) (= (x1199 (+ x1204 128)) x2332) (= x1361 (x715 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1114))) x1141) x334))))) x1509))))
(assert (= x1813 (x643 (x1622 x1813))))
(assert (= x1672 (and (not x1141) x2520)))
(assert (= (=> (and (= x1339 x2280) (= x2277 x462) (= x1581 x619) (= x158 x2001) (= x1838 x2405)) x2387) x984))
(assert (x1602 x515))
(assert (= (x1622 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1546 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1602 x1152))
(assert (x1602 x771))
(assert (= x1379 (or x2271 x975)))
(assert (x1602 x1353))
(assert (x1602 x2539))
(assert (= 0 (x29 292)))
(assert (= (x643 (x1622 x431)) x431))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1693) (>= x1693 0) (= (= x1102 (ite x246 1 0)) x2017) (= x2539 (x2309 x338 2)) (= (x715 1 x338) x1102) (= (> 32 x658) x246) (= (ite (< 0 x1102) x2539 (x715 127 x2539)) x658)) (and (=> (and (and (= (= 0 x458) x390) (= x458 (x715 1 x338))) (not x2017)) (and (=> (and (= x1023 (< 0 x658)) (not x390)) (and (=> (not x1023) x1655) (=> x1023 x705))) (=> x390 x2013))) (=> x2017 x1916))) x1155))
(assert (= (and x1216 x438) x569))
(assert (x1280 (x875 320)))
(assert (= x2467 (or x1079 x1449)))
(assert (x1602 x1320))
(assert (= (=> (and (= x1774 x2255) (and (and (= (x305 x2115) x1888) (<= x2255 1461501637330902918203684832716283019655932542975) (< x1888 256) (= x1080 (x2245 (x1622 x1542))) (= x2496 1030951317) (= (x173 (x1622 x2255) (x1546 2) 0) x2115) (= (not x1384) x295) (not (< x2496 1030951317)) (> 1680813743 x2496) (>= x1888 0) (= x1384 (= 0 x1888)) (> x1080 0) (<= x1888 255) (not (< x2496 839595567)) (< x2496 2112976665) (= x929 (ite x295 1 0))) (and (and (= x524 x754) (> x1901 0) (= x1134 x1921) (= x2134 (or x754 (not x211))) (< x2390 3733007566) (= x330 x2357) (= 3189536363 x2390) (> 3285302901 x2390) (= x1901 (x2245 (x1622 x1542))) (not (> 2112976665 x2390)) (not (< x2390 3081457077)) (not (= 3081457077 x2390)) x2134 (= (not (= 0 x929)) x524)) (and (or (and x906 (and (= (or x156 x1424) x58) (= (= x2452 x241) x1403) (= (x1488 x2452) x1042) (= x1233 (x2128 x1700)) (= (x808 x341 x2452) x593) (= (or (not x2009) x1403) x20) x2023 (<= 0 x1759) (= x900 x1759) (= (x1184 x198) x1342) (> 1461501637330902918203684832716283019655932542976 x1759) (= (ite x58 x1342 x1131) x437) (>= 1461501637330902918203684832716283019655932542975 x1759) (= 1 x198) (= x1098 (and x2140 x58)) (> x1134 x2452) (= x1424 (not (= x1233 x2452))) (= 0 x624) (= x2009 (not (= 0 x1759))) (= (x1488 x2452) x1700) (= (x2162 (x1546 1) 0) x341) (= x2294 (ite x58 x554 x1042)) (= x2023 (or (not x1098) x20)) (= x241 (x2379 x1759)) (= x1886 x1515) (= x1131 (x1184 x624)) (= x156 (<= x554 x1700)) (= x1759 (x2397 x593)) (= x1886 (x1199 (+ x554 x437))))) (and (and (= x1515 x554) (= 0 x900)) (not x906))) (and (not (= x1047 3018310333)) (= x2386 x1921) (< 0 x433) (not (= x1047 2867924802)) (not (< x1047 2112976665)) (= x433 (x2245 (x1622 x1542))) (> 3081457077 x1047) (= x1047 3050870311) (not (> 2726977199 x1047)) (= x2452 x2357) (= (> x2386 x330) x645) (= x906 (> x1134 x2452)) (not (= x1047 2923951457)) (not (< x1047 2867924802))))))) x2346) x535))
(assert (=> (>= 10000 (x460 256)) (= (x1622 (x460 256)) (x1546 (x460 256)))))
(assert (= x422 (and x2361 x350)))
(assert (x1280 x402))
(assert (= x269 (or x2141 x2506 x1210 x1211 x2279 x54 x689 x1808 x1697 x589 x1790 x1999 x153 x504 x1316 x199 x108 x2462 x1677)))
(assert (= x1773 (and x2351 x1756)))
(assert (x1602 x328))
(assert (x1602 x267))
(check-sat)
(exit)
