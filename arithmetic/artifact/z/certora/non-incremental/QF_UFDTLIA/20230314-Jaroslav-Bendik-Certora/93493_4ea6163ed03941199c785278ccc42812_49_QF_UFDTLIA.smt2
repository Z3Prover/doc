(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x1581 0)) (((x582 (x1590 x1581) (x2864 x1581) (x73 x1581) (x1180 x1581) (x1056 x1581) (x2723 x1581) (x1277 x1581) (x1513 Int)) (x450 (x2292 Int)) (x1109 (x705 x1581) (x2709 x1581) (x4 x1581) (x1462 x1581) (x1054 Int)) (x2290 (x2516 x1581) (x2995 x1581) (x1816 x1581) (x1589 Int)) (x935 (x2425 x1581) (x2147 x1581) (x448 x1581) (x1543 x1581) (x1079 x1581) (x358 x1581) (x650 Int)) (x2829 (x1203 x1581) (x1793 x1581) (x139 Int)) (x581 (x2398 x1581) (x166 Int)) (x1623 (x1633 x1581) (x1421 x1581) (x71 x1581) (x2135 x1581) (x1810 x1581) (x70 Int)))))
(declare-fun x1300 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x2801 () Int)
(declare-fun x832 () Bool)
(declare-fun x2942 () Bool)
(declare-fun x1501 () Bool)
(declare-fun x1127 () Int)
(declare-fun x1806 (Int) Int)
(declare-fun x2361 () Bool)
(declare-fun x838 () Bool)
(declare-fun x636 () Int)
(declare-fun x2809 () Bool)
(declare-fun x865 () Bool)
(declare-fun x2861 () Bool)
(declare-fun x945 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x836 () Int)
(declare-fun x1238 () Int)
(declare-fun x2247 () Int)
(declare-fun x877 () Bool)
(declare-fun x2856 () Bool)
(declare-fun x175 () Bool)
(declare-fun x1678 () Int)
(declare-fun x2767 () Int)
(declare-fun x2501 () Bool)
(declare-fun x294 () Int)
(declare-fun x1822 () Int)
(declare-fun x2031 () Int)
(declare-fun x1032 () Int)
(declare-fun x923 () Int)
(declare-fun x1579 () Int)
(declare-fun x2619 () Bool)
(declare-fun x1930 () Int)
(declare-fun x2423 () Bool)
(declare-fun x54 (Int Int) Int)
(declare-fun x35 () Int)
(declare-fun x1090 () Int)
(declare-fun x1256 () Int)
(declare-fun x2235 () Int)
(declare-fun x1512 () Int)
(declare-fun x1751 () Bool)
(declare-fun x2585 () Bool)
(declare-fun x583 () Int)
(declare-fun x2003 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x2862 () Int)
(declare-fun x1255 () Int)
(declare-fun x542 () Bool)
(declare-fun x607 () Int)
(declare-fun x1309 () Int)
(declare-fun x2230 () Bool)
(declare-fun x2965 () Bool)
(declare-fun x2229 () Bool)
(declare-fun x1241 () Int)
(declare-fun x1273 () Int)
(declare-fun x966 () Bool)
(declare-fun x693 () Int)
(declare-fun x585 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x57 () Int)
(declare-fun x1114 () Int)
(declare-fun x2762 () Int)
(declare-fun x2134 () Int)
(declare-fun x1856 () Int)
(declare-fun x2394 () Bool)
(declare-fun x2820 () Bool)
(declare-fun x1970 () Bool)
(declare-fun x2328 () Bool)
(declare-fun x897 () Int)
(declare-fun x1733 () Int)
(declare-fun x547 () Bool)
(declare-fun x1665 () Bool)
(declare-fun x366 () Int)
(declare-fun x2504 () Bool)
(declare-fun x570 () Int)
(declare-fun x2745 () Bool)
(declare-fun x1630 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x784 () Bool)
(declare-fun x502 () Int)
(declare-fun x1390 () Int)
(declare-fun x2808 () Bool)
(declare-fun x1267 () Bool)
(declare-fun x2725 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x2877 () Int)
(declare-fun x2959 () Bool)
(declare-fun x908 () Bool)
(declare-fun x1483 () Int)
(declare-fun x1766 () Int)
(declare-fun x1043 () Int)
(declare-fun x1614 () Bool)
(declare-fun x893 () Bool)
(declare-fun x1949 () Int)
(declare-fun x1573 () Int)
(declare-fun x1714 () Bool)
(declare-fun x1881 () Bool)
(declare-fun x2132 () Bool)
(declare-fun x848 () Int)
(declare-fun x1183 () Bool)
(declare-fun x706 () Bool)
(declare-fun x233 () Int)
(declare-fun x2668 () Int)
(declare-fun x1280 () Bool)
(declare-fun x302 () Bool)
(declare-fun x2376 () Bool)
(declare-fun x1584 () Bool)
(declare-fun x2493 () Int)
(declare-fun x800 () Int)
(declare-fun x1139 () Int)
(declare-fun x351 () Bool)
(declare-fun x716 () Int)
(declare-fun x51 () Bool)
(declare-fun x2418 () Int)
(declare-fun x740 () Bool)
(declare-fun x880 () Int)
(declare-fun x2511 () Bool)
(declare-fun x2538 () Bool)
(declare-fun x680 () Bool)
(declare-fun x2374 () Int)
(declare-fun x2348 () Bool)
(declare-fun x1981 () Int)
(declare-fun x165 () Bool)
(declare-fun x2769 () Int)
(declare-fun x2966 () Int)
(declare-fun x922 () Bool)
(declare-fun x2884 () Bool)
(declare-fun x356 () Bool)
(declare-fun x1578 () Int)
(declare-fun x416 () Int)
(declare-fun x2667 () Bool)
(declare-fun x443 () Bool)
(declare-fun x1879 () Bool)
(declare-fun x2401 () Int)
(declare-fun x1075 () Bool)
(declare-fun x2464 () Int)
(declare-fun x2201 () Bool)
(declare-fun x2336 () Int)
(declare-fun x2332 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x1450 () Int)
(declare-fun x709 () Bool)
(declare-fun x1602 () Bool)
(declare-fun x370 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x1252 () Int)
(declare-fun x2169 () Int)
(declare-fun x2170 () Int)
(declare-fun x2548 () Bool)
(declare-fun x540 () Int)
(declare-fun x1776 () Int)
(declare-fun x1850 () Int)
(declare-fun x868 () Int)
(declare-fun x374 () Int)
(declare-fun x754 () Bool)
(declare-fun x715 () Int)
(declare-fun x2978 () Bool)
(declare-fun x950 () Int)
(declare-fun x2368 () Int)
(declare-fun x388 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x2714 () Int)
(declare-fun x1634 () Int)
(declare-fun x951 () Int)
(declare-fun x80 () Int)
(declare-fun x2922 () Bool)
(declare-fun x453 () Bool)
(declare-fun x1843 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x313 () Int)
(declare-fun x599 () Bool)
(declare-fun x565 () Bool)
(declare-fun x1303 () Int)
(declare-fun x569 () Int)
(declare-fun x1126 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x2874 () Int)
(declare-fun x1441 () Bool)
(declare-fun x291 () Bool)
(declare-fun x2367 () Int)
(declare-fun x361 () Int)
(declare-fun x1755 () Bool)
(declare-fun x1704 () Int)
(declare-fun x157 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x2076 () Bool)
(declare-fun x686 () Int)
(declare-fun x871 () Bool)
(declare-fun x493 () Int)
(declare-fun x1518 () Int)
(declare-fun x1597 () Int)
(declare-fun x180 () Int)
(declare-fun x459 () Bool)
(declare-fun x2491 () Bool)
(declare-fun x525 () Bool)
(declare-fun x516 () Int)
(declare-fun x2480 () Bool)
(declare-fun x790 () Int)
(declare-fun x1884 () Int)
(declare-fun x1821 (Int) Int)
(declare-fun x1148 () Int)
(declare-fun x268 () Int)
(declare-fun x2347 () Int)
(declare-fun x551 () Bool)
(declare-fun x2604 () Bool)
(declare-fun x2693 () Bool)
(declare-fun x576 () Int)
(declare-fun x523 () Int)
(declare-fun x1990 () Int)
(declare-fun x2063 () Int)
(declare-fun x42 () Bool)
(declare-fun x918 () Int)
(declare-fun x1955 () Int)
(declare-fun x2004 () Bool)
(declare-fun x1534 () Int)
(declare-fun x1863 () Int)
(declare-fun x742 () Int)
(declare-fun x906 () Int)
(declare-fun x1705 () Bool)
(declare-fun x1538 () Bool)
(declare-fun x1509 () Bool)
(declare-fun x2778 () Int)
(declare-fun x773 () Int)
(declare-fun x780 () Bool)
(declare-fun x2308 () Int)
(declare-fun x2358 () Int)
(declare-fun x1047 () Int)
(declare-fun x602 () Int)
(declare-fun x977 () Bool)
(declare-fun x898 () Bool)
(declare-fun x596 () Int)
(declare-fun x342 () Int)
(declare-fun x307 () Bool)
(declare-fun x124 () Int)
(declare-fun x749 () Bool)
(declare-fun x2002 () Bool)
(declare-fun x86 () Bool)
(declare-fun x677 () Bool)
(declare-fun x996 () Bool)
(declare-fun x1005 () Int)
(declare-fun x2213 () Int)
(declare-fun x407 () Bool)
(declare-fun x2971 () Int)
(declare-fun x1101 () Bool)
(declare-fun x1136 () Int)
(declare-fun x2570 () Int)
(declare-fun x1468 () Int)
(declare-fun x1935 () Bool)
(declare-fun x2944 (x1581) Int)
(declare-fun x2064 () Bool)
(declare-fun x545 () Int)
(declare-fun x806 () Int)
(declare-fun x2489 () Int)
(declare-fun x436 () Int)
(declare-fun x1173 () Int)
(declare-fun x121 () Int)
(declare-fun x1175 () Bool)
(declare-fun x2385 () Bool)
(declare-fun x755 () Int)
(declare-fun x2904 () Int)
(declare-fun x269 () Int)
(declare-fun x1742 () Int)
(declare-fun x2440 () Bool)
(declare-fun x1171 () Int)
(declare-fun x392 () Int)
(declare-fun x704 () Bool)
(declare-fun x1775 () Int)
(declare-fun x456 () Int)
(declare-fun x1871 () Int)
(declare-fun x2609 () Int)
(declare-fun x1504 () Bool)
(declare-fun x1819 () Int)
(declare-fun x2564 () Bool)
(declare-fun x2760 () Bool)
(declare-fun x2840 () Int)
(declare-fun x2868 () Bool)
(declare-fun x440 () Int)
(declare-fun x2734 () Int)
(declare-fun x2539 () Int)
(declare-fun x1712 () Bool)
(declare-fun x1686 () Bool)
(declare-fun x2324 () Int)
(declare-fun x2676 (Int) Int)
(declare-fun x2925 () Bool)
(declare-fun x2490 () Int)
(declare-fun x1194 () Bool)
(declare-fun x128 () Int)
(declare-fun x580 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x2441 () Int)
(declare-fun x1179 () Int)
(declare-fun x777 () Int)
(declare-fun x2985 () Int)
(declare-fun x2447 () Bool)
(declare-fun x170 () Bool)
(declare-fun x116 () Int)
(declare-fun x2869 () Int)
(declare-fun x304 () Int)
(declare-fun x2299 () Bool)
(declare-fun x1558 () Bool)
(declare-fun x728 () Bool)
(declare-fun x2350 () Bool)
(declare-fun x2794 () Bool)
(declare-fun x2212 () Bool)
(declare-fun x1985 () Int)
(declare-fun x548 () Int)
(declare-fun x1065 () Bool)
(declare-fun x1643 () Int)
(declare-fun x953 () Bool)
(declare-fun x208 () Bool)
(declare-fun x530 () Bool)
(declare-fun x2817 () Int)
(declare-fun x397 () Int)
(declare-fun x2800 () Int)
(declare-fun x2640 () Bool)
(declare-fun x373 () Int)
(declare-fun x2157 () Int)
(declare-fun x382 () Bool)
(declare-fun x318 () Bool)
(declare-fun x118 () Bool)
(declare-fun x1521 () Int)
(declare-fun x172 () Int)
(declare-fun x131 () Int)
(declare-fun x1053 () Bool)
(declare-fun x1416 () Int)
(declare-fun x2105 () Int)
(declare-fun x1831 () Bool)
(declare-fun x1069 () Int)
(declare-fun x1178 () Bool)
(declare-fun x1291 () Int)
(declare-fun x2026 () Bool)
(declare-fun x2807 () Int)
(declare-fun x2888 () Bool)
(declare-fun x1906 () Bool)
(declare-fun x2793 () Int)
(declare-fun x961 () Int)
(declare-fun x1182 () Int)
(declare-fun x347 () Bool)
(declare-fun x2836 () Int)
(declare-fun x699 () Bool)
(declare-fun x2114 () Int)
(declare-fun x1152 () Bool)
(declare-fun x1754 () Bool)
(declare-fun x275 () Int)
(declare-fun x2532 () Bool)
(declare-fun x227 () Int)
(declare-fun x2608 () Int)
(declare-fun x260 () Int)
(declare-fun x954 () Bool)
(declare-fun x1410 () Bool)
(declare-fun x2046 () Int)
(declare-fun x167 () Bool)
(declare-fun x947 (Int) Int)
(declare-fun x2245 () Bool)
(declare-fun x2814 () Int)
(declare-fun x2633 () Int)
(declare-fun x1922 () Bool)
(declare-fun x822 () Int)
(declare-fun x390 () Int)
(declare-fun x757 () Int)
(declare-fun x119 () Int)
(declare-fun x2641 () Bool)
(declare-fun x1587 () Int)
(declare-fun x1153 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x2181 () Bool)
(declare-fun x1555 () Int)
(declare-fun x1345 () Bool)
(declare-fun x952 () Bool)
(declare-fun x1680 () Bool)
(declare-fun x507 () Bool)
(declare-fun x404 () Bool)
(declare-fun x2963 () Int)
(declare-fun x2554 () Bool)
(declare-fun x1350 () Bool)
(declare-fun x2639 () Bool)
(declare-fun x2314 () Int)
(declare-fun x92 () Bool)
(declare-fun x2152 () Int)
(declare-fun x1978 () Bool)
(declare-fun x850 () Int)
(declare-fun x2637 () x1581)
(declare-fun x2705 () Int)
(declare-fun x1585 () Int)
(declare-fun x2571 () Bool)
(declare-fun x1914 () Int)
(declare-fun x216 () Bool)
(declare-fun x2929 () Int)
(declare-fun x2758 () Int)
(declare-fun x2969 () Bool)
(declare-fun x2296 () Bool)
(declare-fun x1329 () Int)
(declare-fun x1174 () Int)
(declare-fun x2842 () Int)
(declare-fun x2977 () Int)
(declare-fun x2998 () Bool)
(declare-fun x1583 () Int)
(declare-fun x1122 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x330 () Int)
(declare-fun x2395 () Int)
(declare-fun x1321 () Bool)
(declare-fun x2283 () Int)
(declare-fun x899 () Int)
(declare-fun x1115 () Int)
(declare-fun x888 () Int)
(declare-fun x2164 () Bool)
(declare-fun x2293 () Int)
(declare-fun x1995 () Bool)
(declare-fun x417 () Bool)
(declare-fun x2879 () Int)
(declare-fun x1903 () Int)
(declare-fun x107 () Int)
(declare-fun x109 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x2575 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x1760 () Int)
(declare-fun x779 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x97 () Int)
(declare-fun x2702 () Bool)
(declare-fun x2424 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x16 () Bool)
(declare-fun x2329 () Int)
(declare-fun x2990 () Int)
(declare-fun x1798 () Int)
(declare-fun x1052 () Int)
(declare-fun x2263 () Int)
(declare-fun x1897 () Int)
(declare-fun x348 () Int)
(declare-fun x2569 () Int)
(declare-fun x520 () Bool)
(declare-fun x2097 () Int)
(declare-fun x339 () Int)
(declare-fun x2406 () Int)
(declare-fun x555 () Bool)
(declare-fun x14 () Int)
(declare-fun x1743 () Int)
(declare-fun x1910 () Bool)
(declare-fun x1859 () Bool)
(declare-fun x309 () Int)
(declare-fun x1845 () Int)
(declare-fun x2936 () Int)
(declare-fun x452 () Bool)
(declare-fun x2144 () Int)
(declare-fun x103 () Bool)
(declare-fun x763 () Int)
(declare-fun x905 () Bool)
(declare-fun x1656 () Int)
(declare-fun x2690 () Int)
(declare-fun x1617 () Bool)
(declare-fun x2343 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x3001 () Bool)
(declare-fun x2644 () Int)
(declare-fun x2205 () Int)
(declare-fun x1869 () Bool)
(declare-fun x2312 () Int)
(declare-fun x2790 () Bool)
(declare-fun x679 () Int)
(declare-fun x1362 () Int)
(declare-fun x614 () Bool)
(declare-fun x847 () Int)
(declare-fun x1621 () Int)
(declare-fun x843 () Int)
(declare-fun x1189 () Int)
(declare-fun x126 () Bool)
(declare-fun x1608 () Bool)
(declare-fun x1724 () Int)
(declare-fun x854 () Int)
(declare-fun x238 () Int)
(declare-fun x907 () Bool)
(declare-fun x2483 () Int)
(declare-fun x1818 () Int)
(declare-fun x2269 () Int)
(declare-fun x891 () Int)
(declare-fun x605 () Bool)
(declare-fun x5 () Bool)
(declare-fun x49 () Bool)
(declare-fun x533 () Int)
(declare-fun x183 () Bool)
(declare-fun x2631 () Bool)
(declare-fun x1901 () Bool)
(declare-fun x687 () Int)
(declare-fun x2112 () Int)
(declare-fun x1865 () Int)
(declare-fun x714 () Int)
(declare-fun x882 () Bool)
(declare-fun x2456 () Int)
(declare-fun x1230 () Bool)
(declare-fun x1190 () Int)
(declare-fun x2210 () Bool)
(declare-fun x884 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x910 () Bool)
(declare-fun x87 () Int)
(declare-fun x519 () Int)
(declare-fun x1533 () Bool)
(declare-fun x2981 () Bool)
(declare-fun x1229 () Int)
(declare-fun x1554 () Bool)
(declare-fun x1690 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x2484 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x495 () Int)
(declare-fun x785 () Bool)
(declare-fun x2183 () Int)
(declare-fun x866 () Int)
(declare-fun x1269 () Bool)
(declare-fun x401 () Int)
(declare-fun x2603 () Int)
(declare-fun x1971 () Bool)
(declare-fun x2665 () Bool)
(declare-fun x94 () Int)
(declare-fun x2865 () x1581)
(declare-fun x465 () Bool)
(declare-fun x1049 (x1581) Int)
(declare-fun x494 () Int)
(declare-fun x2257 () Int)
(declare-fun x2891 () Int)
(declare-fun x1460 () Bool)
(declare-fun x1667 () Int)
(declare-fun x1485 () Int)
(declare-fun x776 () Int)
(declare-fun x976 () Bool)
(declare-fun x1779 () Int)
(declare-fun x2006 () Bool)
(declare-fun x1866 () Int)
(declare-fun x990 () Int)
(declare-fun x215 () Bool)
(declare-fun x1528 () Int)
(declare-fun x803 () Bool)
(declare-fun x1340 () Int)
(declare-fun x769 (Int Int) Int)
(declare-fun x2544 () Int)
(declare-fun x861 () Bool)
(declare-fun x2166 () Int)
(declare-fun x96 () Bool)
(declare-fun x902 () Int)
(declare-fun x1522 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x2053 () Bool)
(declare-fun x1217 () Int)
(declare-fun x1591 () Int)
(declare-fun x2208 () Int)
(declare-fun x2082 () Bool)
(declare-fun x2572 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x2593 () Int)
(declare-fun x187 () Bool)
(declare-fun x476 () Int)
(declare-fun x289 () Bool)
(declare-fun x2277 () Int)
(declare-fun x1219 () Int)
(declare-fun x1645 () Bool)
(declare-fun x539 () Bool)
(declare-fun x1718 () Bool)
(declare-fun x306 () Int)
(declare-fun x400 () Int)
(declare-fun x429 () Bool)
(declare-fun x2203 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x27 () Int)
(declare-fun x405 () Int)
(declare-fun x1648 () Int)
(declare-fun x1381 () Bool)
(declare-fun x2735 () Int)
(declare-fun x2703 () Int)
(declare-fun x985 () Int)
(declare-fun x1941 () Int)
(declare-fun x1715 () Int)
(declare-fun x778 () Int)
(declare-fun x2315 () Int)
(declare-fun x522 () Bool)
(declare-fun x2551 () Bool)
(declare-fun x2518 () Int)
(declare-fun x1974 () Bool)
(declare-fun x1137 () Int)
(declare-fun x2910 () Int)
(declare-fun x669 () Bool)
(declare-fun x120 () Bool)
(declare-fun x1224 () Int)
(declare-fun x994 () Int)
(declare-fun x2397 () Int)
(declare-fun x2838 () Int)
(declare-fun x571 () Int)
(declare-fun x2462 () Int)
(declare-fun x1541 () Int)
(declare-fun x1770 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x1048 () Int)
(declare-fun x1703 () Bool)
(declare-fun x1931 () Bool)
(declare-fun x415 () Int)
(declare-fun x1767 () Int)
(declare-fun x2573 () Int)
(declare-fun x1377 () Int)
(declare-fun x929 () Bool)
(declare-fun x2533 () Bool)
(declare-fun x694 () Int)
(declare-fun x1535 () Int)
(declare-fun x104 () Int)
(declare-fun x314 () Bool)
(declare-fun x2334 () Bool)
(declare-fun x2679 () Bool)
(declare-fun x772 () Bool)
(declare-fun x1129 () Int)
(declare-fun x2092 () Bool)
(declare-fun x1184 () Int)
(declare-fun x1569 () Bool)
(declare-fun x2899 () Int)
(declare-fun x577 () Bool)
(declare-fun x1201 () Bool)
(declare-fun x2356 () Bool)
(declare-fun x346 () Bool)
(declare-fun x2670 () Int)
(declare-fun x1009 () Bool)
(declare-fun x1208 () Int)
(declare-fun x2274 () Int)
(declare-fun x2843 () Int)
(declare-fun x2184 () Int)
(declare-fun x2136 () Int)
(declare-fun x1279 () Int)
(declare-fun x322 () Bool)
(declare-fun x2812 () Bool)
(declare-fun x1867 () Int)
(declare-fun x2960 () Bool)
(declare-fun x819 () Int)
(declare-fun x1942 (Int) Int)
(declare-fun x860 () Int)
(declare-fun x212 () Bool)
(declare-fun x2450 () Bool)
(declare-fun x2584 () Int)
(declare-fun x1021 () Int)
(declare-fun x195 () Int)
(declare-fun x1036 () Bool)
(declare-fun x997 () Bool)
(declare-fun x410 () Int)
(declare-fun x1320 () Int)
(declare-fun x160 () Int)
(declare-fun x1378 () Bool)
(declare-fun x2928 () Int)
(declare-fun x2321 () Bool)
(declare-fun x700 () Bool)
(declare-fun x2741 () Bool)
(declare-fun x2027 () Int)
(declare-fun x717 () Bool)
(declare-fun x2126 () Int)
(declare-fun x638 () Bool)
(declare-fun x2240 (Int) Int)
(declare-fun x135 () Bool)
(declare-fun x1334 () Bool)
(declare-fun x1892 () Int)
(declare-fun x1133 () Int)
(declare-fun x1739 () Int)
(declare-fun x1467 () Int)
(declare-fun x1051 () Int)
(declare-fun x189 () Int)
(declare-fun x1022 () Bool)
(declare-fun x647 () Bool)
(declare-fun x2876 () Int)
(declare-fun x1012 () Int)
(declare-fun x1214 () Bool)
(declare-fun x2513 () Int)
(declare-fun x2789 () Int)
(declare-fun x64 () Bool)
(declare-fun x205 () Int)
(declare-fun x2015 () Int)
(declare-fun x2677 () Bool)
(declare-fun x2331 () Bool)
(declare-fun x41 () Bool)
(declare-fun x1829 () Int)
(declare-fun x2875 () Int)
(declare-fun x2323 () Int)
(declare-fun x971 () Bool)
(declare-fun x2752 () Int)
(declare-fun x2463 () Int)
(declare-fun x1066 () Int)
(declare-fun x1547 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x228 () Int)
(declare-fun x1221 () Int)
(declare-fun x1354 () Int)
(declare-fun x2390 () Bool)
(declare-fun x874 () Int)
(declare-fun x1957 () Bool)
(declare-fun x1387 () Int)
(declare-fun x1237 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x739 () Int)
(declare-fun x2696 () Int)
(declare-fun x955 () Int)
(declare-fun x2613 () Bool)
(declare-fun x1860 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x1396 () Int)
(declare-fun x2992 () Int)
(declare-fun x1899 () Int)
(declare-fun x2803 () Int)
(declare-fun x368 () Bool)
(declare-fun x169 () Int)
(declare-fun x2528 () Bool)
(declare-fun x185 () Int)
(declare-fun x2234 () Int)
(declare-fun x1002 () Bool)
(declare-fun x2173 () Bool)
(declare-fun x2139 () Int)
(declare-fun x281 (Int) Int)
(declare-fun x2893 () Int)
(declare-fun x2890 () Bool)
(declare-fun x1854 () Int)
(declare-fun x1641 () Int)
(declare-fun x1301 () Bool)
(declare-fun x1702 () Int)
(declare-fun x8 () Bool)
(declare-fun x1170 () Int)
(declare-fun x1244 () Int)
(declare-fun x1847 () Int)
(declare-fun x727 () Int)
(declare-fun x2616 () Bool)
(declare-fun x900 () Bool)
(declare-fun x2663 () Int)
(declare-fun x1084 () Int)
(declare-fun x1996 () Bool)
(declare-fun x1141 () Bool)
(declare-fun x154 () Int)
(declare-fun x1145 () Bool)
(declare-fun x181 () Int)
(declare-fun x2682 () Bool)
(declare-fun x389 () Bool)
(declare-fun x2759 () Int)
(declare-fun x1642 () Bool)
(declare-fun x613 () Int)
(declare-fun x19 () Int)
(declare-fun x1125 () Int)
(declare-fun x2948 () Bool)
(declare-fun x134 () Bool)
(declare-fun x852 () Int)
(declare-fun x2827 () Bool)
(declare-fun x1740 () Int)
(declare-fun x1900 () Bool)
(declare-fun x2091 () Bool)
(declare-fun x394 () Int)
(declare-fun x1925 () Int)
(declare-fun x1673 () Bool)
(declare-fun x703 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x333 () Bool)
(declare-fun x858 () Bool)
(declare-fun x2970 () Int)
(declare-fun x2093 () Int)
(declare-fun x1937 () Bool)
(declare-fun x1253 () Int)
(declare-fun x1186 () Int)
(declare-fun x2568 () Int)
(declare-fun x2231 () Bool)
(declare-fun x558 () Bool)
(declare-fun x1669 () Bool)
(declare-fun x2131 () Bool)
(declare-fun x1011 () Int)
(declare-fun x1603 () Int)
(declare-fun x426 () Bool)
(declare-fun x787 () Int)
(declare-fun x1567 () Bool)
(declare-fun x1746 () Bool)
(declare-fun x805 () Bool)
(declare-fun x1772 () Int)
(declare-fun x2049 () Int)
(declare-fun x1997 () Int)
(declare-fun x1695 () Int)
(declare-fun x385 () Int)
(declare-fun x40 () Int)
(declare-fun x2333 () Bool)
(declare-fun x2497 () Bool)
(declare-fun x2776 () Bool)
(declare-fun x681 () Int)
(declare-fun x2722 () Int)
(declare-fun x2237 () Int)
(declare-fun x1762 () Int)
(declare-fun x2625 () Int)
(declare-fun x2363 () Int)
(declare-fun x1080 () Int)
(declare-fun x2165 () Bool)
(declare-fun x2032 () Int)
(declare-fun x1613 () Int)
(declare-fun x1595 () Bool)
(declare-fun x2422 () Int)
(declare-fun x1924 () Bool)
(declare-fun x2902 () Bool)
(declare-fun x2779 () Int)
(declare-fun x2908 () Int)
(declare-fun x559 () Int)
(declare-fun x2419 () Int)
(declare-fun x2684 () Bool)
(declare-fun x1458 () Int)
(declare-fun x2478 () Int)
(declare-fun x1979 () Bool)
(declare-fun x2090 () Bool)
(declare-fun x818 () Int)
(declare-fun x179 () Int)
(declare-fun x2381 () Int)
(declare-fun x1624 () Int)
(declare-fun x2652 () Bool)
(declare-fun x1758 () Int)
(declare-fun x1726 () Int)
(declare-fun x1886 () Int)
(declare-fun x21 () Bool)
(declare-fun x152 () Bool)
(declare-fun x2070 () Bool)
(declare-fun x1368 () Int)
(declare-fun x250 () Bool)
(declare-fun x353 () Bool)
(declare-fun x2830 () Bool)
(declare-fun x887 () Int)
(declare-fun x2654 () Bool)
(declare-fun x849 () Bool)
(declare-fun x2947 () Bool)
(declare-fun x2198 () Bool)
(declare-fun x2935 () Int)
(declare-fun x2272 () Int)
(declare-fun x606 () Int)
(declare-fun x1399 () Bool)
(declare-fun x720 () Bool)
(declare-fun x2014 () Int)
(declare-fun x591 () Bool)
(declare-fun x1308 () Int)
(declare-fun x1213 () Int)
(declare-fun x2107 () Int)
(declare-fun x2353 () Int)
(declare-fun x829 () Int)
(declare-fun x992 () Int)
(declare-fun x1565 () Bool)
(declare-fun x890 () Int)
(declare-fun x1169 () Int)
(declare-fun x1004 () Bool)
(declare-fun x288 () Int)
(declare-fun x1351 () Bool)
(declare-fun x2847 () Bool)
(declare-fun x1449 () Int)
(declare-fun x1234 () Int)
(declare-fun x308 () Bool)
(declare-fun x1618 () Int)
(declare-fun x1615 () Int)
(declare-fun x1889 () Int)
(declare-fun x2795 () Bool)
(declare-fun x2550 () Bool)
(declare-fun x2022 () Int)
(declare-fun x774 () Int)
(declare-fun x1774 () Int)
(declare-fun x2043 () Int)
(declare-fun x1887 () Bool)
(declare-fun x72 () Int)
(declare-fun x731 () Int)
(declare-fun x1338 () Int)
(declare-fun x2187 () Int)
(declare-fun x2824 () Bool)
(declare-fun x1646 () Bool)
(declare-fun x1439 () Int)
(declare-fun x1240 () Bool)
(declare-fun x1763 () Bool)
(declare-fun x2591 () Bool)
(declare-fun x1027 () Int)
(declare-fun x1263 () Bool)
(declare-fun x2429 () Int)
(declare-fun x701 () Bool)
(declare-fun x1484 () Bool)
(declare-fun x460 () Int)
(declare-fun x2517 () Bool)
(declare-fun x3003 () Bool)
(declare-fun x796 () Int)
(declare-fun x147 () Int)
(declare-fun x1796 () Int)
(declare-fun x1804 () Int)
(declare-fun x280 () Int)
(declare-fun x1638 () Bool)
(declare-fun x2514 () Bool)
(declare-fun x820 () Bool)
(declare-fun x2600 () Int)
(declare-fun x1014 () Int)
(declare-fun x2763 () Bool)
(declare-fun x603 () Int)
(declare-fun x2338 () Bool)
(declare-fun x2252 () Bool)
(declare-fun x2945 () Int)
(declare-fun x2643 () Bool)
(declare-fun x2821 () Bool)
(declare-fun x1242 () Int)
(declare-fun x105 () Bool)
(declare-fun x2149 () Int)
(declare-fun x2542 () Int)
(declare-fun x2251 () Int)
(declare-fun x1150 () Int)
(declare-fun x1302 () Bool)
(declare-fun x2919 () Bool)
(declare-fun x266 () Int)
(declare-fun x1560 () Int)
(declare-fun x1202 () Int)
(declare-fun x425 () Bool)
(declare-fun x1490 () Int)
(declare-fun x402 () Bool)
(declare-fun x1679 () Int)
(declare-fun x1339 () Bool)
(declare-fun x290 () Bool)
(declare-fun x2177 () Int)
(declare-fun x1670 () Int)
(declare-fun x279 () Int)
(declare-fun x2218 () Int)
(declare-fun x1606 () Bool)
(declare-fun x1415 () Bool)
(declare-fun x1117 () Int)
(declare-fun x1853 () Bool)
(declare-fun x1962 () Int)
(declare-fun x2138 () Bool)
(declare-fun x1319 () Int)
(declare-fun x2185 () Int)
(declare-fun x1391 () Int)
(declare-fun x797 () Bool)
(declare-fun x2065 () Int)
(declare-fun x2873 () Int)
(declare-fun x1769 () Bool)
(declare-fun x445 () Int)
(declare-fun x1571 () Int)
(declare-fun x2193 () Bool)
(declare-fun x512 () Bool)
(declare-fun x960 () Int)
(declare-fun x2428 () Int)
(declare-fun x2726 () Int)
(declare-fun x2016 () Bool)
(declare-fun x1838 () Int)
(declare-fun x2253 () Bool)
(declare-fun x2798 () Int)
(declare-fun x1984 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x2349 () Int)
(declare-fun x1999 () Bool)
(declare-fun x648 () Int)
(declare-fun x2727 () Bool)
(declare-fun x633 () Int)
(declare-fun x365 () Int)
(declare-fun x2916 () Int)
(declare-fun x1870 () Int)
(declare-fun x872 () Bool)
(declare-fun x1599 () Bool)
(declare-fun x544 () Int)
(declare-fun x2335 () Int)
(declare-fun x1209 () Bool)
(declare-fun x2601 () Bool)
(declare-fun x1026 () Int)
(declare-fun x788 () Int)
(declare-fun x1369 () Bool)
(declare-fun x1706 () Bool)
(declare-fun x1218 () Int)
(declare-fun x1895 () Bool)
(declare-fun x2697 () Int)
(declare-fun x420 () Int)
(declare-fun x2806 () Bool)
(declare-fun x1406 () Bool)
(declare-fun x1313 () Int)
(declare-fun x295 () Bool)
(declare-fun x1967 (Int) Int)
(declare-fun x247 () Int)
(declare-fun x1734 (Int) Int)
(declare-fun x1637 () Int)
(declare-fun x926 () Int)
(declare-fun x2509 () Bool)
(declare-fun x1598 () Int)
(declare-fun x496 () Int)
(declare-fun x2607 () Int)
(declare-fun x1965 () Bool)
(declare-fun x2322 () Bool)
(declare-fun x2241 () Int)
(declare-fun x2214 () Bool)
(declare-fun x1185 () Int)
(declare-fun x2785 () Int)
(declare-fun x2413 () Bool)
(declare-fun x2458 () Int)
(declare-fun x320 () Int)
(declare-fun x2459 () Int)
(declare-fun x2271 () Int)
(declare-fun x2378 () Int)
(declare-fun x2073 () Int)
(declare-fun x359 () Int)
(declare-fun x2188 () Bool)
(declare-fun x246 () Bool)
(declare-fun x2129 () Int)
(declare-fun x2787 () Int)
(declare-fun x2408 () Int)
(declare-fun x446 () Int)
(declare-fun x2645 () Int)
(declare-fun x2822 () Int)
(declare-fun x775 () Int)
(declare-fun x1596 () Int)
(declare-fun x2648 (Int) Int)
(declare-fun x534 () Bool)
(declare-fun x2089 () Bool)
(declare-fun x2249 () Int)
(declare-fun x278 () Bool)
(declare-fun x2068 () Int)
(declare-fun x1268 () Int)
(declare-fun x2148 () Int)
(declare-fun x1323 () Bool)
(declare-fun x684 () Int)
(declare-fun x552 () Bool)
(declare-fun x1649 () Bool)
(declare-fun x2120 () Int)
(declare-fun x2217 () Bool)
(declare-fun x1430 () Int)
(declare-fun x2610 () Int)
(declare-fun x1833 () Int)
(declare-fun x1687 () Int)
(declare-fun x1358 () Int)
(declare-fun x136 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x316 () Bool)
(declare-fun x683 () Bool)
(declare-fun x612 () Int)
(declare-fun x1360 () Bool)
(declare-fun x1682 () Bool)
(declare-fun x2973 () Bool)
(declare-fun x222 () Int)
(declare-fun x567 () Bool)
(declare-fun x53 () Int)
(declare-fun x310 () Int)
(declare-fun x2974 () Int)
(declare-fun x2099 () Int)
(declare-fun x1950 () Bool)
(declare-fun x844 () Bool)
(declare-fun x2011 () Int)
(declare-fun x2207 () Bool)
(declare-fun x2279 () Bool)
(declare-fun x1916 () Bool)
(declare-fun x2792 () Int)
(declare-fun x564 () x1581)
(declare-fun x2344 () Bool)
(declare-fun x2255 () Int)
(declare-fun x286 () Bool)
(declare-fun x2744 () Int)
(declare-fun x1858 () Bool)
(declare-fun x592 () Int)
(declare-fun x2738 () Int)
(declare-fun x196 () Bool)
(declare-fun x1988 () Int)
(declare-fun x2488 () Bool)
(declare-fun x449 () Int)
(declare-fun x1691 () Bool)
(declare-fun x225 (Int) Int)
(declare-fun x1472 () Bool)
(declare-fun x1594 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x1015 (Int) Int)
(declare-fun x2502 () Int)
(declare-fun x1556 () Int)
(declare-fun x1130 () Int)
(declare-fun x1363 () Bool)
(declare-fun x2482 () Bool)
(declare-fun x738 () Int)
(declare-fun x2900 () Int)
(declare-fun x1281 () Int)
(declare-fun x156 () Bool)
(declare-fun x574 () Bool)
(declare-fun x1993 () Bool)
(declare-fun x1664 () Int)
(declare-fun x75 () Int)
(declare-fun x913 () Bool)
(declare-fun x981 () Int)
(declare-fun x2866 () Int)
(declare-fun x2393 () Bool)
(declare-fun x2267 () Int)
(declare-fun x1896 () Int)
(declare-fun x29 () Int)
(declare-fun x240 () Int)
(declare-fun x1728 () Bool)
(declare-fun x328 () Int)
(declare-fun x1848 () Int)
(declare-fun x2479 () Int)
(declare-fun x140 () Int)
(declare-fun x1612 () Int)
(declare-fun x1236 () Int)
(declare-fun x2405 () Int)
(declare-fun x1433 () Int)
(declare-fun x1491 () Int)
(declare-fun x1604 () Int)
(declare-fun x1274 () Int)
(declare-fun x1367 () Int)
(declare-fun x2687 () Bool)
(declare-fun x1902 () Bool)
(declare-fun x99 () Bool)
(declare-fun x1353 () Int)
(declare-fun x2145 (x1581) Int)
(declare-fun x1550 () Bool)
(declare-fun x708 () Bool)
(declare-fun x2258 () Int)
(declare-fun x427 () Bool)
(declare-fun x1376 () Bool)
(declare-fun x471 () Bool)
(declare-fun x809 () Int)
(declare-fun x369 () Int)
(declare-fun x1132 () Bool)
(declare-fun x682 () Int)
(declare-fun x2351 () Bool)
(declare-fun x345 () Bool)
(declare-fun x2662 () Bool)
(declare-fun x1977 () Int)
(declare-fun x1537 () Bool)
(declare-fun x1037 () Int)
(declare-fun x1307 () Int)
(declare-fun x2195 () Int)
(declare-fun x726 () Bool)
(declare-fun x1939 () Int)
(declare-fun x692 () Bool)
(declare-fun x1593 () Int)
(declare-fun x375 () Bool)
(declare-fun x632 () Int)
(declare-fun x2924 () Int)
(declare-fun x915 () Bool)
(declare-fun x2653 () Int)
(declare-fun x2627 () Int)
(declare-fun x2567 () Int)
(declare-fun x1138 () Bool)
(declare-fun x438 () Int)
(declare-fun x6 () Bool)
(declare-fun x372 () Int)
(declare-fun x644 () Int)
(declare-fun x2001 () Int)
(declare-fun x2595 () Int)
(declare-fun x1085 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x237 () Bool)
(declare-fun x1626 () Bool)
(declare-fun x1493 () Int)
(declare-fun x2837 () Int)
(declare-fun x1953 () Int)
(declare-fun x393 () Int)
(declare-fun x1753 () Bool)
(declare-fun x965 () Int)
(declare-fun x2042 () Int)
(declare-fun x2246 () Int)
(declare-fun x1549 () Int)
(declare-fun x2786 () Int)
(declare-fun x2396 () Bool)
(declare-fun x761 () Bool)
(declare-fun x1414 () Bool)
(declare-fun x1413 () Int)
(declare-fun x1808 () Int)
(declare-fun x439 () Int)
(declare-fun x90 () Int)
(declare-fun x2074 () Int)
(declare-fun x2307 () Bool)
(declare-fun x1741 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x1474 () Int)
(declare-fun x768 () Int)
(declare-fun x883 () Int)
(declare-fun x2955 () Bool)
(declare-fun x2555 () Int)
(declare-fun x1912 () Bool)
(declare-fun x1359 () Int)
(declare-fun x2128 () Int)
(declare-fun x1420 () Int)
(declare-fun x932 () Bool)
(declare-fun x604 () Bool)
(declare-fun x743 () Bool)
(declare-fun x1119 () Int)
(declare-fun x434 () Bool)
(declare-fun x1361 () Int)
(declare-fun x1898 () Int)
(declare-fun x253 () Bool)
(declare-fun x993 () Int)
(declare-fun x1168 () Int)
(declare-fun x2309 () Bool)
(declare-fun x2649 () Bool)
(declare-fun x1789 () Int)
(declare-fun x1024 () Int)
(declare-fun x2711 () Bool)
(declare-fun x1802 () Bool)
(declare-fun x44 () Bool)
(declare-fun x959 () Int)
(declare-fun x2756 () Bool)
(declare-fun x1620 () Bool)
(declare-fun x2039 () Bool)
(declare-fun x2754 () Int)
(declare-fun x1262 () Int)
(declare-fun x1003 () Bool)
(declare-fun x2414 (Int Int) Int)
(declare-fun x504 () Int)
(declare-fun x867 () x1581)
(declare-fun x654 () Int)
(declare-fun x1832 () Bool)
(declare-fun x2302 () Int)
(declare-fun x736 () Bool)
(declare-fun x1920 () Int)
(declare-fun x1508 () Int)
(declare-fun x265 () Int)
(declare-fun x1814 () Int)
(declare-fun x2158 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x45 () Int)
(declare-fun x1235 (Int) Int)
(declare-fun x1631 () Int)
(declare-fun x2041 () Int)
(declare-fun x2077 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x1792 () Int)
(declare-fun x2005 () Int)
(declare-fun x474 () Int)
(declare-fun x1249 () Int)
(declare-fun x2477 () Bool)
(declare-fun x1121 () Int)
(declare-fun x2071 () Int)
(declare-fun x2018 () Bool)
(declare-fun x1440 () Bool)
(declare-fun x808 () Int)
(declare-fun x563 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x2476 () Int)
(declare-fun x2186 () Int)
(declare-fun x2630 () Int)
(declare-fun x2388 () Bool)
(declare-fun x1783 () Bool)
(declare-fun x1998 () Int)
(declare-fun x598 () Bool)
(declare-fun x1366 () Int)
(declare-fun x217 () Bool)
(declare-fun x235 () Int)
(declare-fun x1536 () Bool)
(declare-fun x666 (Int) x1581)
(declare-fun x1442 () Int)
(declare-fun x2507 () Bool)
(declare-fun x903 () Int)
(declare-fun x1248 () Int)
(declare-fun x2773 () Int)
(declare-fun x2810 () Int)
(declare-fun x287 () Bool)
(declare-fun x766 () Bool)
(declare-fun x624 () Int)
(declare-fun x758 () Int)
(declare-fun x293 () Int)
(declare-fun x229 () Bool)
(declare-fun x1500 () Int)
(declare-fun x454 () Int)
(declare-fun x2225 () Int)
(declare-fun x1499 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x2487 () Int)
(declare-fun x2718 () Bool)
(declare-fun x1756 () Int)
(declare-fun x2364 () Bool)
(declare-fun x1883 () Int)
(declare-fun x1431 () Bool)
(declare-fun x479 () Int)
(declare-fun x1239 () Int)
(declare-fun x1710 () Bool)
(declare-fun x1966 () Int)
(declare-fun x1328 () Int)
(declare-fun x1785 () Int)
(declare-fun x919 () Int)
(declare-fun x2167 () Int)
(declare-fun x710 () Bool)
(declare-fun x2319 () Int)
(declare-fun x1040 () Int)
(declare-fun x62 () Int)
(declare-fun x25 () Int)
(declare-fun x2221 () Bool)
(declare-fun x875 () Bool)
(declare-fun x1172 () Bool)
(declare-fun x656 () Int)
(declare-fun x1525 () Int)
(declare-fun x575 () Bool)
(declare-fun x2500 () Int)
(declare-fun x1502 () Int)
(declare-fun x792 () Bool)
(declare-fun x2262 () Bool)
(declare-fun x702 () Bool)
(declare-fun x199 () Bool)
(declare-fun x125 () Int)
(declare-fun x223 () Int)
(declare-fun x537 () Bool)
(declare-fun x1372 () Int)
(declare-fun x1532 () Bool)
(declare-fun x813 () Bool)
(declare-fun x1575 () Bool)
(declare-fun x1480 () Int)
(declare-fun x2694 () Bool)
(declare-fun x2000 () Bool)
(declare-fun x1982 () Int)
(declare-fun x137 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x1454 () Bool)
(declare-fun x2775 () Int)
(declare-fun x841 () Bool)
(declare-fun x210 () Int)
(declare-fun x974 () Int)
(declare-fun x1893 () Bool)
(declare-fun x2194 () Int)
(declare-fun x2435 () Int)
(declare-fun x2179 () Int)
(declare-fun x1820 () Bool)
(declare-fun x303 () Bool)
(declare-fun x1689 () Bool)
(declare-fun x1778 () Bool)
(declare-fun x1757 () Bool)
(declare-fun x1947 () Int)
(declare-fun x1076 () Int)
(declare-fun x31 () Bool)
(declare-fun x1161 () Int)
(declare-fun x794 () Bool)
(declare-fun x151 () Bool)
(declare-fun x744 () Bool)
(declare-fun x2079 () Int)
(declare-fun x2498 () Bool)
(declare-fun x1894 () Int)
(declare-fun x1103 () Bool)
(declare-fun x38 () Int)
(declare-fun x423 () Int)
(declare-fun x532 () Bool)
(declare-fun x1876 () Int)
(declare-fun x1482 () Int)
(declare-fun x1904 () Int)
(declare-fun x2688 () Int)
(declare-fun x2294 () Bool)
(declare-fun x1006 () Int)
(declare-fun x168 () Bool)
(declare-fun x2634 () Int)
(declare-fun x2122 () Int)
(declare-fun x2872 () Int)
(declare-fun x1207 () Int)
(declare-fun x2415 () Int)
(declare-fun x301 () Int)
(declare-fun x1651 () Int)
(declare-fun x1055 () Int)
(declare-fun x1275 () Bool)
(declare-fun x765 () Bool)
(declare-fun x724 () Int)
(declare-fun x1386 () Int)
(declare-fun x609 () Int)
(declare-fun x2228 () Bool)
(declare-fun x1852 () Int)
(declare-fun x1081 () Bool)
(declare-fun x1815 () Bool)
(declare-fun x964 () Bool)
(declare-fun x853 () Int)
(declare-fun x2160 () Bool)
(declare-fun x2443 () Int)
(declare-fun x329 () Bool)
(declare-fun x1343 () Int)
(declare-fun x377 () Int)
(declare-fun x270 () Bool)
(declare-fun x1517 () Int)
(declare-fun x1909 () Bool)
(declare-fun x2713 () Int)
(declare-fun x489 () Bool)
(declare-fun x2782 () Int)
(declare-fun x1311 () Int)
(declare-fun x1940 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x2325 () Bool)
(declare-fun x327 () Int)
(declare-fun x988 () Int)
(declare-fun x2675 () Int)
(declare-fun x1120 () Bool)
(declare-fun x2526 () Bool)
(declare-fun x799 (Int) Int)
(declare-fun x2764 () Int)
(declare-fun x1765 () Int)
(declare-fun x2371 () Int)
(declare-fun x2087 () Int)
(declare-fun x936 () Int)
(declare-fun x398 () Int)
(declare-fun x1113 () Int)
(declare-fun x2903 () Bool)
(declare-fun x341 () Int)
(declare-fun x2304 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x2389 () Int)
(declare-fun x1564 () Bool)
(declare-fun x1131 () Int)
(declare-fun x2565 () Bool)
(declare-fun x1461 () Bool)
(declare-fun x2465 () Int)
(declare-fun x2983 () Int)
(declare-fun x1326 () Int)
(declare-fun x2845 () Bool)
(declare-fun x863 () Int)
(declare-fun x814 () Bool)
(declare-fun x340 () Bool)
(declare-fun x2433 () Bool)
(declare-fun x1929 () Int)
(declare-fun x248 () Bool)
(declare-fun x1455 () Int)
(declare-fun x1627 () Bool)
(declare-fun x1193 () Bool)
(declare-fun x2940 () Int)
(declare-fun x2765 () Int)
(declare-fun x1206 () Bool)
(declare-fun x2816 () Bool)
(declare-fun x1374 () Int)
(declare-fun x1336 () Bool)
(declare-fun x2695 () Int)
(declare-fun x1647 () Int)
(declare-fun x1041 () Int)
(declare-fun x1405 () Int)
(declare-fun x1059 () Int)
(declare-fun x1348 () Bool)
(declare-fun x2163 () Int)
(declare-fun x2994 () Bool)
(declare-fun x444 () Int)
(declare-fun x364 () Bool)
(declare-fun x2804 () Bool)
(declare-fun x524 () Int)
(declare-fun x1167 () Int)
(declare-fun x411 () Int)
(declare-fun x2620 () Int)
(declare-fun x113 () Bool)
(declare-fun x2749 () Bool)
(declare-fun x2019 () Bool)
(declare-fun x484 () Bool)
(declare-fun x1827 () Bool)
(declare-fun x989 () Int)
(declare-fun x1677 () Bool)
(declare-fun x2828 () Bool)
(declare-fun x262 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x2190 () Int)
(declare-fun x938 () Int)
(declare-fun x12 () Bool)
(declare-fun x979 () Bool)
(declare-fun x1659 () Int)
(declare-fun x2400 () Bool)
(declare-fun x2161 () Bool)
(declare-fun x2852 () Bool)
(declare-fun x1060 () Int)
(declare-fun x357 () Int)
(declare-fun x1294 () Bool)
(declare-fun x939 () Bool)
(declare-fun x2024 () Int)
(declare-fun x386 () Bool)
(declare-fun x184 () Int)
(declare-fun x528 (Int) Int)
(declare-fun x360 () Bool)
(declare-fun x2403 () Int)
(declare-fun x895 () Bool)
(declare-fun x2839 (Int) Int)
(declare-fun x1199 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x823 () Bool)
(declare-fun x442 () Bool)
(declare-fun x1809 () Int)
(declare-fun x673 () Bool)
(declare-fun x1095 () Int)
(declare-fun x1188 () Bool)
(declare-fun x556 () Int)
(declare-fun x2143 () Int)
(declare-fun x2189 () Bool)
(declare-fun x2525 () Int)
(declare-fun x873 () Bool)
(declare-fun x2273 () Bool)
(declare-fun x2934 () Int)
(declare-fun x1310 () Int)
(declare-fun x2078 () x1581)
(declare-fun x487 () Int)
(declare-fun x1157 (Int Int) Int)
(declare-fun x1803 () Int)
(declare-fun x458 () Int)
(declare-fun x2505 () Int)
(declare-fun x2320 () Int)
(declare-fun x653 () Int)
(declare-fun x2222 () Int)
(declare-fun x1197 () Int)
(declare-fun x2980 () Int)
(declare-fun x2927 () Bool)
(declare-fun x2445 () Bool)
(declare-fun x2012 () Bool)
(declare-fun x2596 () Bool)
(declare-fun x1835 () Bool)
(declare-fun x2657 () Bool)
(declare-fun x2111 () Int)
(declare-fun x1436 () Int)
(declare-fun x2729 () Int)
(declare-fun x1264 () Bool)
(declare-fun x409 () Int)
(declare-fun x1586 () Int)
(declare-fun x2708 () Int)
(declare-fun x1511 () Bool)
(declare-fun x2797 () Bool)
(declare-fun x1811 () Bool)
(declare-fun x467 () Bool)
(declare-fun x1123 () Int)
(declare-fun x7 () Int)
(declare-fun x2721 () Bool)
(declare-fun x1318 () Int)
(declare-fun x350 () Bool)
(declare-fun x917 () Int)
(declare-fun x2706 () Bool)
(declare-fun x1781 () Int)
(declare-fun x491 () Bool)
(declare-fun x2436 () Bool)
(declare-fun x515 () Int)
(declare-fun x2698 () Int)
(declare-fun x2233 () Int)
(declare-fun x578 () Int)
(declare-fun x2133 () Int)
(declare-fun x2553 () Bool)
(declare-fun x652 () Bool)
(declare-fun x812 () Int)
(declare-fun x611 () Bool)
(declare-fun x2176 () Int)
(declare-fun x1708 () Bool)
(declare-fun x721 () Bool)
(declare-fun x735 () Int)
(declare-fun x1285 () Int)
(declare-fun x413 () Bool)
(declare-fun x1222 () Int)
(declare-fun x2103 () Bool)
(declare-fun x980 () Bool)
(declare-fun x1091 () Bool)
(declare-fun x380 () Int)
(declare-fun x1438 () Bool)
(declare-fun x2848 () Int)
(declare-fun x2028 () Bool)
(declare-fun x312 () Int)
(declare-fun x734 () Int)
(declare-fun x231 () Int)
(declare-fun x2446 () Bool)
(declare-fun x2399 () Bool)
(declare-fun x2989 () Int)
(declare-fun x2052 () Int)
(declare-fun x241 () Bool)
(declare-fun x2410 () Bool)
(declare-fun x2913 () Bool)
(declare-fun x722 () Int)
(declare-fun x978 () Int)
(declare-fun x2062 () Bool)
(declare-fun x857 () Bool)
(declare-fun x2523 () Int)
(declare-fun x1529 () Bool)
(declare-fun x1652 () Bool)
(declare-fun x2664 () Int)
(declare-fun x2508 () Bool)
(declare-fun x789 () Bool)
(declare-fun x2156 () Bool)
(declare-fun x428 () Int)
(declare-fun x781 () Bool)
(declare-fun x1917 () Bool)
(declare-fun x2678 () Bool)
(declare-fun x1067 () Int)
(declare-fun x2563 () Int)
(declare-fun x641 () Int)
(declare-fun x2153 () Int)
(declare-fun x1784 () Int)
(declare-fun x2084 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x2226 () Int)
(declare-fun x177 () Int)
(declare-fun x1475 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x162 () Int)
(declare-fun x685 () Bool)
(declare-fun x2007 () Int)
(declare-fun x1699 () Bool)
(declare-fun x1694 () Bool)
(declare-fun x2850 () Int)
(declare-fun x967 () Int)
(declare-fun x1349 () Bool)
(declare-fun x65 () Int)
(declare-fun x695 () Bool)
(declare-fun x218 () Bool)
(declare-fun x2494 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x1306 () Int)
(declare-fun x1187 () Int)
(declare-fun x37 () Int)
(declare-fun x1108 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x2774 () Int)
(declare-fun x1563 () Bool)
(declare-fun x492 () Int)
(declare-fun x2327 () Int)
(declare-fun x1723 () Bool)
(declare-fun x2104 () Int)
(declare-fun x1352 () Int)
(declare-fun x1885 () Int)
(declare-fun x455 () Int)
(declare-fun x68 () Bool)
(declare-fun x531 () Int)
(declare-fun x698 () Int)
(declare-fun x1994 () Bool)
(declare-fun x1609 () Int)
(declare-fun x2881 () Int)
(declare-fun x1668 () Int)
(declare-fun x631 () Int)
(declare-fun x2685 () Bool)
(declare-fun x48 () Int)
(declare-fun x1286 () Int)
(declare-fun x2444 () Int)
(declare-fun x2379 () Bool)
(declare-fun x2536 () Int)
(declare-fun x678 () Bool)
(declare-fun x468 () Bool)
(declare-fun x969 () Bool)
(declare-fun x640 () Int)
(declare-fun x3000 () Bool)
(declare-fun x403 () Int)
(declare-fun x2402 () Bool)
(declare-fun x1782 () Bool)
(declare-fun x2100 () Int)
(declare-fun x2083 () Int)
(declare-fun x1492 () Bool)
(declare-fun x2941 () Bool)
(declare-fun x315 () Int)
(declare-fun x1713 () Int)
(declare-fun x672 () Int)
(declare-fun x1082 (Int Int) Int)
(declare-fun x593 () Bool)
(declare-fun x475 () Bool)
(declare-fun x2535 () Int)
(declare-fun x1846 () Int)
(declare-fun x557 () Bool)
(declare-fun x1044 () Int)
(declare-fun x1228 () Int)
(declare-fun x2013 () Bool)
(declare-fun x234 () Bool)
(declare-fun x1409 () Bool)
(declare-fun x2481 () Int)
(declare-fun x1750 () Int)
(declare-fun x2580 (Int) Int)
(declare-fun x2689 () Bool)
(declare-fun x1862 () Bool)
(declare-fun x2313 () Int)
(declare-fun x69 () Int)
(declare-fun x889 (Int) Int)
(declare-fun x91 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x572 () Int)
(declare-fun x158 () Bool)
(declare-fun x1443 () Bool)
(declare-fun x335 () Int)
(declare-fun x973 () Bool)
(declare-fun x2473 () Bool)
(declare-fun x696 () Bool)
(declare-fun x2486 () Bool)
(declare-fun x2036 () Int)
(declare-fun x2755 () Bool)
(declare-fun x298 () Bool)
(declare-fun x1546 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x2044 () Int)
(declare-fun x1315 () Int)
(declare-fun x2671 () Bool)
(declare-fun x2543 () Bool)
(declare-fun x514 () Bool)
(declare-fun x856 () Bool)
(declare-fun x2180 () Bool)
(declare-fun x2033 () Bool)
(declare-fun x2094 () Bool)
(declare-fun x337 () Bool)
(declare-fun x827 () Int)
(declare-fun x2964 () Int)
(declare-fun x1722 () Int)
(declare-fun x1959 () Bool)
(declare-fun x132 () Int)
(declare-fun x1725 () Bool)
(declare-fun x236 () Bool)
(declare-fun x1872 () Int)
(declare-fun x770 () Bool)
(declare-fun x379 () Bool)
(declare-fun x1973 () Bool)
(declare-fun x2909 () Bool)
(declare-fun x252 () Bool)
(declare-fun x2618 () Bool)
(declare-fun x2260 () Int)
(declare-fun x2346 () Int)
(declare-fun x2781 () Bool)
(declare-fun x1400 () Int)
(declare-fun x2236 () Int)
(declare-fun x2317 () Int)
(declare-fun x1034 () Int)
(declare-fun x526 () Bool)
(declare-fun x1385 () Int)
(declare-fun x615 () Bool)
(declare-fun x332 () Bool)
(declare-fun x2034 () Bool)
(declare-fun x1487 () Int)
(declare-fun x1215 () Int)
(declare-fun x2968 () Int)
(declare-fun x1787 () Bool)
(declare-fun x117 () Int)
(declare-fun x2515 () Int)
(declare-fun x509 () Int)
(declare-fun x2920 () Bool)
(declare-fun x197 () Bool)
(declare-fun x771 () Bool)
(declare-fun x34 () Bool)
(declare-fun x2818 () Bool)
(declare-fun x1317 () Bool)
(declare-fun x343 () Bool)
(declare-fun x1657 () Bool)
(declare-fun x1562 () Bool)
(declare-fun x2192 () Bool)
(declare-fun x804 () Bool)
(declare-fun x2811 () Bool)
(declare-fun x595 () Bool)
(declare-fun x2174 () Int)
(declare-fun x2976 () Bool)
(declare-fun x1817 () Int)
(declare-fun x750 () Bool)
(declare-fun x662 () Int)
(declare-fun x1124 () Int)
(declare-fun x2710 () Bool)
(declare-fun x807 () Bool)
(declare-fun x2975 () Int)
(declare-fun x1388 () Bool)
(declare-fun x1471 () Int)
(declare-fun x1216 () Int)
(declare-fun x2661 () Bool)
(declare-fun x207 () Int)
(declare-fun x1035 () Int)
(declare-fun x2366 () Int)
(declare-fun x1013 () Bool)
(declare-fun x2191 () Bool)
(declare-fun x1836 () Bool)
(declare-fun x968 () Int)
(declare-fun x2204 () Bool)
(declare-fun x2291 () Bool)
(declare-fun x783 () Int)
(declare-fun x2151 () Bool)
(declare-fun x1666 () Bool)
(declare-fun x17 () Bool)
(declare-fun x74 () Int)
(declare-fun x2784 () Bool)
(declare-fun x462 () Int)
(declare-fun x1299 () Int)
(declare-fun x2216 () Int)
(declare-fun x982 () Int)
(declare-fun x2846 () Int)
(declare-fun x1553 () Bool)
(declare-fun x1839 () Int)
(declare-fun x901 () Bool)
(declare-fun x2819 () Int)
(declare-fun x198 () Int)
(declare-fun x1000 () Bool)
(declare-fun x2669 () Int)
(declare-fun x2337 () Int)
(declare-fun x639 () Bool)
(declare-fun x2457 () Bool)
(declare-fun x2623 () Int)
(declare-fun x1851 () Bool)
(declare-fun x635 () Int)
(declare-fun x13 () Bool)
(declare-fun x2421 () Int)
(declare-fun x2912 () Bool)
(declare-fun x675 () Bool)
(declare-fun x2950 () Bool)
(declare-fun x527 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x2369 () Bool)
(declare-fun x447 () Int)
(declare-fun x1226 () Int)
(declare-fun x1205 () Int)
(declare-fun x1398 () Int)
(declare-fun x1397 () Int)
(declare-fun x2849 () Int)
(declare-fun x1477 () Int)
(declare-fun x930 () Int)
(declare-fun x32 () Int)
(declare-fun x2116 () Bool)
(declare-fun x2855 () Int)
(declare-fun x916 () Bool)
(declare-fun x2352 () Int)
(declare-fun x665 () Bool)
(declare-fun x1435 () Int)
(declare-fun x2524 () Bool)
(declare-fun x2341 () Bool)
(declare-fun x1364 () Int)
(declare-fun x2215 () Int)
(declare-fun x589 () Bool)
(declare-fun x625 () Int)
(declare-fun x78 () Int)
(declare-fun x2650 () Int)
(declare-fun x2519 () Int)
(declare-fun x1486 () Int)
(declare-fun x1737 () Int)
(declare-fun x2050 () Int)
(declare-fun x618 () Bool)
(declare-fun x150 () Bool)
(declare-fun x1282 () Int)
(declare-fun x2021 () Bool)
(declare-fun x224 () Int)
(declare-fun x66 () Int)
(declare-fun x2442 () Int)
(declare-fun x2451 () Int)
(declare-fun x2952 () Int)
(declare-fun x1748 () Int)
(declare-fun x1520 () Int)
(declare-fun x1934 () Bool)
(declare-fun x2748 () Int)
(declare-fun x1110 () Int)
(declare-fun x2547 (Int) Int)
(declare-fun x802 () Bool)
(declare-fun x1759 () Bool)
(declare-fun x3 () Bool)
(declare-fun x1945 () Bool)
(declare-fun x232 () Int)
(declare-fun x1683 () Int)
(declare-fun x1031 () Int)
(declare-fun x1960 () Int)
(declare-fun x106 () Bool)
(declare-fun x2512 () Int)
(declare-fun x1064 () Int)
(declare-fun x2692 () Int)
(declare-fun x1675 () Bool)
(declare-fun x2851 () Int)
(declare-fun x2867 () Int)
(declare-fun x188 () Bool)
(declare-fun x2562 () Bool)
(declare-fun x2882 () Bool)
(declare-fun x153 () Int)
(declare-fun x430 () Int)
(declare-fun x821 () Int)
(declare-fun x2362 () Int)
(declare-fun x2791 () Int)
(declare-fun x2615 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x283 () Bool)
(declare-fun x1640 () Int)
(declare-fun x1968 () Int)
(declare-fun x924 () Bool)
(declare-fun x242 () Int)
(declare-fun x2339 () Int)
(declare-fun x511 () Int)
(declare-fun x1453 () Int)
(declare-fun x1540 () Int)
(declare-fun x753 () Bool)
(declare-fun x933 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x108 () Bool)
(declare-fun x1143 () Int)
(declare-fun x1698 () Bool)
(declare-fun x1158 () Int)
(declare-fun x2171 () Int)
(declare-fun x944 () Bool)
(declare-fun x2342 () Int)
(declare-fun x1908 () Bool)
(declare-fun x1341 () Bool)
(declare-fun x1548 () Int)
(declare-fun x2243 () Int)
(declare-fun x2141 () Int)
(declare-fun x2987 () Bool)
(declare-fun x1841 () Bool)
(declare-fun x2086 () Bool)
(declare-fun x1297 () Bool)
(declare-fun x461 () Int)
(declare-fun x2209 () Bool)
(declare-fun x824 () Bool)
(declare-fun x2383 () Int)
(declare-fun x1768 () Int)
(declare-fun x334 () Int)
(declare-fun x2069 () Bool)
(declare-fun x33 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x748 () Int)
(declare-fun x2597 () Int)
(declare-fun x2624 () Int)
(declare-fun x1283 () Bool)
(declare-fun x2598 () Int)
(declare-fun x886 () Bool)
(declare-fun x24 () Bool)
(declare-fun x1639 () Bool)
(declare-fun x2996 () Bool)
(declare-fun x2072 () Bool)
(declare-fun x2943 () Bool)
(declare-fun x1629 () Int)
(declare-fun x2566 () Bool)
(declare-fun x26 () Bool)
(declare-fun x517 (Int) Int)
(declare-fun x2499 () Int)
(declare-fun x1539 () Int)
(declare-fun x2055 () Bool)
(declare-fun x1104 () Int)
(declare-fun x1732 () Int)
(declare-fun x501 () Bool)
(declare-fun x230 () Bool)
(declare-fun x421 () Bool)
(declare-fun x859 () Int)
(declare-fun x1764 () Int)
(declare-fun x2475 () Int)
(declare-fun x2017 () Int)
(declare-fun x1196 () Bool)
(declare-fun x1298 () Int)
(declare-fun x2155 () Bool)
(declare-fun x2761 () Bool)
(declare-fun x1662 () Int)
(declare-fun x1198 () Bool)
(declare-fun x2387 () Bool)
(declare-fun x2223 () Int)
(declare-fun x2265 () Int)
(declare-fun x2040 () Bool)
(declare-fun x2303 () Bool)
(declare-fun x732 () Int)
(declare-fun x1154 () Bool)
(declare-fun x2716 () Bool)
(declare-fun x2506 () Bool)
(declare-fun x2957 () Bool)
(declare-fun x1568 () Bool)
(declare-fun x2318 () x1581)
(declare-fun x2238 (Int Int) Int)
(declare-fun x1719 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x2805 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x713 () Int)
(declare-fun x2642 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x2896 () Int)
(declare-fun x798 () Int)
(declare-fun x11 () Bool)
(declare-fun x2683 () Int)
(declare-fun x1745 () Int)
(declare-fun x1780 () Int)
(declare-fun x594 () Bool)
(declare-fun x2154 () Int)
(declare-fun x719 () Int)
(declare-fun x201 () x1581)
(declare-fun x1834 () Bool)
(declare-fun x588 () Bool)
(declare-fun x568 () Int)
(declare-fun x2537 () Int)
(declare-fun x2883 () Int)
(declare-fun x2454 () Bool)
(declare-fun x419 () Int)
(declare-fun x2858 () Int)
(declare-fun x1028 () Int)
(declare-fun x2432 () Bool)
(declare-fun x760 () Int)
(declare-fun x190 () Int)
(declare-fun x2926 () Int)
(declare-fun x1616 () Bool)
(declare-fun x2530 () Int)
(declare-fun x1559 () Bool)
(declare-fun x1270 () Bool)
(declare-fun x546 () Int)
(declare-fun x2686 () Int)
(declare-fun x1857 () Bool)
(declare-fun x503 () Int)
(declare-fun x1380 () Bool)
(declare-fun x2799 () Int)
(declare-fun x746 () Int)
(declare-fun x1711 () Int)
(declare-fun x1873 () Bool)
(declare-fun x85 () Bool)
(declare-fun x1426 () Bool)
(declare-fun x2355 () Int)
(declare-fun x1701 () Int)
(declare-fun x2581 () Int)
(declare-fun x2453 (Int Int) Int)
(declare-fun x627 () Bool)
(declare-fun x2227 () Int)
(declare-fun x58 () Int)
(declare-fun x1727 () Bool)
(declare-fun x2085 () Int)
(declare-fun x2602 () Bool)
(declare-fun x1025 () Int)
(declare-fun x946 () Int)
(declare-fun x2717 () Bool)
(declare-fun x2108 () Int)
(declare-fun x2048 () Int)
(declare-fun x1465 () Int)
(declare-fun x239 () Int)
(declare-fun x2659 () Bool)
(declare-fun x2768 () Bool)
(declare-fun x127 () Int)
(declare-fun x2962 () Int)
(declare-fun x660 () Bool)
(declare-fun x590 () Int)
(declare-fun x2771 () Bool)
(declare-fun x2956 (Int) Int)
(declare-fun x958 () Int)
(declare-fun x2766 () Bool)
(declare-fun x1644 () Bool)
(declare-fun x194 () Bool)
(declare-fun x1749 () Bool)
(declare-fun x1830 () Int)
(declare-fun x1660 () Bool)
(declare-fun x2937 () Int)
(declare-fun x2345 () Bool)
(declare-fun x1932 () Bool)
(declare-fun x395 () Int)
(declare-fun x1515 () Bool)
(declare-fun x2288 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x984 () Bool)
(declare-fun x2560 () Bool)
(declare-fun x2407 () Bool)
(declare-fun x630 () Int)
(declare-fun x2175 () Int)
(declare-fun x1948 () Bool)
(declare-fun x943 () Int)
(declare-fun x299 () Bool)
(declare-fun x663 () Bool)
(declare-fun x2579 () Bool)
(declare-fun x1191 () Int)
(declare-fun x2905 () Int)
(declare-fun x2921 () Int)
(declare-fun x664 () Bool)
(declare-fun x1265 () Int)
(declare-fun x655 () Int)
(declare-fun x1684 () Int)
(declare-fun x1697 () Bool)
(declare-fun x2326 () Int)
(declare-fun x2857 () Int)
(declare-fun x651 () Bool)
(declare-fun x193 () Bool)
(declare-fun x937 () Int)
(declare-fun x300 () Bool)
(declare-fun x1332 () Int)
(declare-fun x986 () Int)
(declare-fun x646 () Int)
(declare-fun x311 () Bool)
(declare-fun x1963 () Int)
(declare-fun x1800 () Bool)
(declare-fun x2359 () Int)
(declare-fun x691 () Bool)
(declare-fun x535 () Int)
(declare-fun x1408 () Int)
(declare-fun x2370 () Int)
(declare-fun x1373 () Bool)
(declare-fun x2707 () Bool)
(declare-fun x1918 () Int)
(declare-fun x1105 () Int)
(declare-fun x424 () Int)
(declare-fun x1488 () Bool)
(declare-fun x2168 () Bool)
(declare-fun x186 () Int)
(declare-fun x2967 () Bool)
(declare-fun x1383 () Int)
(declare-fun x1220 () Bool)
(declare-fun x870 () Int)
(declare-fun x931 () Int)
(declare-fun x383 () Int)
(declare-fun x2266 () Int)
(declare-fun x2728 () Bool)
(declare-fun x2720 () Int)
(declare-fun x2612 () Int)
(declare-fun x658 () Int)
(declare-fun x1200 () Int)
(declare-fun x1333 () Int)
(declare-fun x89 () Int)
(declare-fun x67 () Bool)
(declare-fun x833 () Int)
(declare-fun x2844 () Bool)
(declare-fun x2311 () Bool)
(declare-fun x2098 () Int)
(declare-fun x995 () Bool)
(declare-fun x1497 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x2833 () Bool)
(declare-fun x123 () Bool)
(declare-fun x2232 () Int)
(declare-fun x1542 () Int)
(declare-fun x1118 () Int)
(declare-fun x1794 () Bool)
(declare-fun x657 () Bool)
(declare-fun x1116 () Int)
(declare-fun x1042 () Int)
(declare-fun x1192 () Int)
(declare-fun x112 () Bool)
(declare-fun x2954 () Int)
(declare-fun x876 () Bool)
(declare-fun x52 () Int)
(declare-fun x1019 () Int)
(declare-fun x2863 () Bool)
(declare-fun x782 () Int)
(declare-fun x1284 () Bool)
(declare-fun x2146 () Int)
(declare-fun x1010 () Int)
(declare-fun x2059 () Int)
(declare-fun x904 () Bool)
(declare-fun x661 () Bool)
(declare-fun x77 () Int)
(declare-fun x282 () Int)
(declare-fun x1791 () Int)
(declare-fun x2137 () Int)
(declare-fun x2780 () Int)
(declare-fun x10 () Int)
(declare-fun x1861 () Int)
(declare-fun x263 () Int)
(declare-fun x2835 () Int)
(declare-fun x1523 () Int)
(declare-fun x2357 () Int)
(declare-fun x505 () Bool)
(declare-fun x1293 () Bool)
(declare-fun x670 () Int)
(declare-fun x2614 () Bool)
(declare-fun x1653 () Int)
(declare-fun x1356 () Bool)
(declare-fun x2933 () Int)
(declare-fun x1038 () Int)
(declare-fun x2196 () Int)
(declare-fun x1840 () x1581)
(declare-fun x2531 () Int)
(declare-fun x490 () Int)
(declare-fun x1074 () Int)
(declare-fun x384 () Int)
(declare-fun x2666 () Int)
(declare-fun x1744 () Int)
(declare-fun x1020 () Int)
(declare-fun x1946 () Int)
(declare-fun x1729 () Int)
(declare-fun x2635 () Bool)
(declare-fun x2067 () Int)
(declare-fun x2354 () Int)
(declare-fun x1287 () Bool)
(declare-fun x60 () Bool)
(declare-fun x2239 () Int)
(declare-fun x1519 () Bool)
(declare-fun x1544 () Bool)
(declare-fun x1777 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x2611 () Int)
(declare-fun x1278 () Int)
(declare-fun x942 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x1891 () Bool)
(declare-fun x406 () Int)
(declare-fun x2130 () Bool)
(declare-fun x1551 () Bool)
(declare-fun x2365 () Int)
(declare-fun x1335 () Bool)
(declare-fun x272 () Int)
(declare-fun x723 () Bool)
(declare-fun x2121 () Int)
(declare-fun x1693 () Bool)
(declare-fun x1655 () Int)
(declare-fun x2673 () Int)
(declare-fun x2287 () Bool)
(declare-fun x1807 () Int)
(declare-fun x1588 () Int)
(declare-fun x2588 () Bool)
(declare-fun x934 () Int)
(declare-fun x138 () Bool)
(declare-fun x815 () Int)
(declare-fun x2559 () Bool)
(declare-fun x629 () Bool)
(declare-fun x1 () Int)
(declare-fun x2300 () Int)
(declare-fun x2242 () Bool)
(declare-fun x143 () Int)
(declare-fun x1257 () Int)
(declare-fun x81 () Bool)
(declare-fun x470 () Int)
(declare-fun x1347 () Bool)
(declare-fun x1799 () Bool)
(declare-fun x828 () Int)
(declare-fun x1507 () Bool)
(declare-fun x2096 () Int)
(declare-fun x835 () Int)
(declare-fun x2632 () Int)
(declare-fun x811 () Bool)
(declare-fun x2658 () Int)
(declare-fun x2278 () Bool)
(declare-fun x584 () Bool)
(declare-fun x142 () Bool)
(declare-fun x1771 () Bool)
(declare-fun x2953 () Int)
(declare-fun x2172 () Int)
(declare-fun x2316 () Int)
(declare-fun x1083 () Bool)
(declare-fun x949 () Bool)
(declare-fun x1736 () Int)
(declare-fun x2386 () Int)
(declare-fun x2932 () Int)
(declare-fun x879 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x2009 () Bool)
(declare-fun x2452 () Int)
(declare-fun x486 () Int)
(declare-fun x259 () Bool)
(declare-fun x2541 () Bool)
(declare-fun x2590 () Bool)
(declare-fun x2330 () Bool)
(declare-fun x1674 () Bool)
(declare-fun x349 () Bool)
(declare-fun x2743 () Int)
(declare-fun x634 (Int) Int)
(declare-fun x1246 () Bool)
(declare-fun x2617 () Bool)
(declare-fun x412 () Int)
(declare-fun x1514 () Bool)
(declare-fun x2110 () Bool)
(declare-fun x2739 () Bool)
(declare-fun x1888 () Int)
(declare-fun x466 () Int)
(declare-fun x1452 () Int)
(declare-fun x2448 () Bool)
(declare-fun x579 () Int)
(declare-fun x2080 () Int)
(declare-fun x674 () Int)
(declare-fun x2880 () Bool)
(declare-fun x367 () Int)
(declare-fun x2417 () Int)
(declare-fun x39 () Bool)
(declare-fun x921 () Int)
(declare-fun x566 () Int)
(declare-fun x22 () Bool)
(declare-fun x2825 () Int)
(declare-fun x122 () Int)
(declare-fun x1077 () Bool)
(declare-fun x983 () Bool)
(declare-fun x1365 () Int)
(declare-fun x2250 () Int)
(declare-fun x1272 () Int)
(declare-fun x2911 () Bool)
(declare-fun x718 () Int)
(declare-fun x2380 () Bool)
(declare-fun x396 () Int)
(declare-fun x1952 () Bool)
(declare-fun x2081 () Int)
(declare-fun x338 () Int)
(declare-fun x1432 () Int)
(declare-fun x1375 () Int)
(declare-fun x1788 () Bool)
(declare-fun x2854 () Int)
(declare-fun x422 () Bool)
(declare-fun x920 () Int)
(declare-fun x1919 () Int)
(declare-fun x2298 () Int)
(declare-fun x2730 () Int)
(declare-fun x970 () Bool)
(declare-fun x61 () Bool)
(declare-fun x1992 () Bool)
(declare-fun x163 () Int)
(declare-fun x2496 () Int)
(declare-fun x115 () Bool)
(declare-fun x756 () Int)
(declare-fun x1424 () Bool)
(declare-fun x2469 () Int)
(declare-fun x2961 () Int)
(declare-fun x1923 () Int)
(declare-fun x2276 () Bool)
(declare-fun x2037 () Bool)
(declare-fun x2958 () Bool)
(declare-fun x881 () Int)
(declare-fun x102 () Int)
(declare-fun x2466 () Int)
(declare-fun x1975 () Int)
(declare-fun x433 () Bool)
(declare-fun x192 () Int)
(declare-fun x1855 () Int)
(declare-fun x432 () Bool)
(declare-fun x1864 () Int)
(declare-fun x1650 () Int)
(declare-fun x149 () Bool)
(declare-fun x2546 () Bool)
(declare-fun x862 () Bool)
(declare-fun x249 () Int)
(declare-fun x213 () Int)
(declare-fun x1260 () Bool)
(declare-fun x1582 () Int)
(declare-fun x885 () Int)
(declare-fun x2796 () Int)
(declare-fun x274 () Int)
(declare-fun x948 () Int)
(declare-fun x2918 () Int)
(declare-fun x1429 () Int)
(declare-fun x2197 () Int)
(declare-fun x1233 () Int)
(declare-fun x2460 () Int)
(declare-fun x2162 () Bool)
(declare-fun x133 () Int)
(declare-fun x84 () Int)
(declare-fun x987 () Int)
(declare-fun x2384 () Int)
(declare-fun x1370 () Int)
(declare-fun x1288 () Int)
(declare-fun x840 () Int)
(declare-fun x1844 () Int)
(declare-fun x1459 () Bool)
(declare-fun x1989 () Int)
(declare-fun x1324 () Bool)
(declare-fun x2982 () Bool)
(declare-fun x608 () Int)
(declare-fun x628 () Int)
(declare-fun x759 () Bool)
(declare-fun x1824 () Bool)
(declare-fun x2472 () Int)
(declare-fun x1478 () Int)
(declare-fun x1605 () Bool)
(declare-fun x817 () Bool)
(declare-fun x46 () Int)
(declare-fun x3002 () Int)
(declare-fun x1149 () Int)
(declare-fun x2574 () Bool)
(declare-fun x834 () Bool)
(declare-fun x2742 () Bool)
(declare-fun x2751 () Int)
(declare-fun x2887 () Bool)
(declare-fun x626 () Bool)
(declare-fun x1466 () Int)
(declare-fun x362 () Int)
(declare-fun x325 () Bool)
(declare-fun x521 () Bool)
(declare-fun x2495 () Int)
(declare-fun x2118 (Int) Int)
(declare-fun x1411 () Bool)
(declare-fun x1721 () Int)
(declare-fun x845 () Int)
(declare-fun x2029 () Bool)
(declare-fun x200 () Int)
(declare-fun x1837 () Bool)
(declare-fun x464 () Bool)
(declare-fun x2305 () Int)
(declare-fun x1418 () Int)
(declare-fun x1232 () Int)
(declare-fun x2392 () Int)
(declare-fun x1983 () Bool)
(declare-fun x145 () Bool)
(declare-fun x2503 () Bool)
(declare-fun x488 () Int)
(declare-fun x1346 () Bool)
(declare-fun x1071 () Int)
(declare-fun x355 () Bool)
(declare-fun x2606 () Int)
(declare-fun x2894 () Int)
(declare-fun x667 () Bool)
(declare-fun x114 () Int)
(declare-fun x1134 () Int)
(declare-fun x1786 () Bool)
(declare-fun x244 () Bool)
(declare-fun x676 () Int)
(declare-fun x1128 () Int)
(declare-fun x587 () Int)
(declare-fun x1355 () Bool)
(declare-fun x2672 () Bool)
(declare-fun x1557 () Int)
(declare-fun x730 () Int)
(declare-fun x1610 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x1479 () Int)
(declare-fun x1954 () Int)
(declare-fun x221 () Int)
(declare-fun x2993 () Int)
(declare-fun x1730 () Bool)
(declare-fun x63 () Bool)
(declare-fun x15 () Int)
(declare-fun x2220 () Bool)
(declare-fun x2651 () Bool)
(declare-fun x2704 () Int)
(declare-fun x2674 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x2813 () Int)
(declare-fun x741 () Int)
(declare-fun x1926 () Int)
(declare-fun x697 () Bool)
(declare-fun x1510 () Bool)
(declare-fun x1033 () Int)
(declare-fun x2285 () Int)
(declare-fun x285 () Int)
(declare-fun x319 () Int)
(declare-fun x1688 () Bool)
(declare-fun x2660 () Int)
(declare-fun x354 () Bool)
(declare-fun x621 () Bool)
(declare-fun x130 () Bool)
(declare-fun x510 () Int)
(declare-fun x478 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x101 (Int Int) Int)
(declare-fun x1696 () Bool)
(declare-fun x1671 () Int)
(declare-fun x202 () Int)
(declare-fun x1943 () Bool)
(declare-fun x1928 () Int)
(declare-fun x1676 () Int)
(declare-fun x2746 () Int)
(declare-fun x1163 () Bool)
(declare-fun x2150 () Bool)
(declare-fun x1951 () Bool)
(declare-fun x573 () Int)
(declare-fun x2467 () Int)
(declare-fun x1181 () Int)
(declare-fun x2621 () Int)
(declare-fun x2259 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x1709 () Int)
(declare-fun x2437 () Bool)
(declare-fun x2426 () Bool)
(declare-fun x2470 () Bool)
(declare-fun x499 () Int)
(declare-fun x1905 () Bool)
(declare-fun x1913 () Bool)
(declare-fun x1223 () Bool)
(declare-fun x2972 () Int)
(declare-fun x2915 () Int)
(declare-fun x1030 () Int)
(declare-fun x1752 () Int)
(declare-fun x481 () Int)
(declare-fun x2471 () Bool)
(declare-fun x1393 () Bool)
(declare-fun x204 () Int)
(declare-fun x762 () Int)
(declare-fun x1969 () Int)
(declare-fun x999 () Bool)
(declare-fun x2485 () Bool)
(declare-fun x2427 (Int Int) Int)
(declare-fun x1330 () Int)
(declare-fun x2885 () Bool)
(declare-fun x271 () Int)
(declare-fun x909 () Bool)
(declare-fun x93 () Bool)
(declare-fun x79 () Int)
(declare-fun x28 () Int)
(declare-fun x1663 () Bool)
(declare-fun x2056 () Int)
(declare-fun x2051 () Int)
(declare-fun x1911 () Int)
(declare-fun x376 () Int)
(declare-fun x2841 () Int)
(declare-fun x171 () Bool)
(declare-fun x437 () Bool)
(declare-fun x2211 () Int)
(declare-fun x251 () Bool)
(declare-fun x2750 () Int)
(declare-fun x2286 () Bool)
(declare-fun x912 () Int)
(declare-fun x1658 () Int)
(declare-fun x554 () Int)
(declare-fun x1795 () Bool)
(declare-fun x1094 () Int)
(declare-fun x2939 () Bool)
(declare-fun x1566 () Bool)
(declare-fun x2701 () Bool)
(declare-fun x2142 () Bool)
(declare-fun x1254 () Bool)
(declare-fun x707 () Bool)
(declare-fun x2892 () Int)
(declare-fun x1874 () Int)
(declare-fun x1072 () Int)
(declare-fun x689 () Bool)
(declare-fun x513 () Int)
(declare-fun x2088 () Bool)
(declare-fun x2638 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x164 () Bool)
(declare-fun x623 () Int)
(declare-fun x1227 () Bool)
(declare-fun x2558 () Int)
(declare-fun x2340 () Bool)
(declare-fun x1096 () Int)
(declare-fun x892 () Int)
(declare-fun x469 () Int)
(declare-fun x1464 () Int)
(define-fun x1029 ((x1581 x1581) (x642 Int)) x1581 (ite ((_ is x582) x1581) (x582 (x1590 x1581) (x2864 x1581) (x73 x1581) (x1180 x1581) (x1056 x1581) (x2723 x1581) (x1277 x1581) (+ x642 (x1513 x1581))) (ite ((_ is x935) x1581) (x935 (x2425 x1581) (x2147 x1581) (x448 x1581) (x1543 x1581) (x1079 x1581) (x358 x1581) (+ (x650 x1581) x642)) (ite ((_ is x1623) x1581) (x1623 (x1633 x1581) (x1421 x1581) (x71 x1581) (x2135 x1581) (x1810 x1581) (+ x642 (x70 x1581))) (ite ((_ is x1109) x1581) (x1109 (x705 x1581) (x2709 x1581) (x4 x1581) (x1462 x1581) (+ x642 (x1054 x1581))) (ite ((_ is x2290) x1581) (x2290 (x2516 x1581) (x2995 x1581) (x1816 x1581) (+ x642 (x1589 x1581))) (ite ((_ is x2829) x1581) (x2829 (x1203 x1581) (x1793 x1581) (+ (x139 x1581) x642)) (ite ((_ is x581) x1581) (x581 (x2398 x1581) (+ (x166 x1581) x642)) (x450 (+ (x2292 x1581) x642))))))))))
(define-fun x435 ((x1176 Int)) Int (ite (and (< x1176 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1176)) x1176 (- x1176 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x668 ((x1176 Int)) Int (ite (and (> 0 x1176) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1176)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1176) x1176))
(define-fun x144 ((x1176 Int)) Int (ite (and (< x1176 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1176 0)) x1176 (ite (and (< x1176 231584178474632390847141970017375815706539969331281128078915168015826259279872) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1176)) (- x1176 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x1176 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x1176)) (+ x1176 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1157 x1176 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x2264 ((x1379 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1379) (<= 0 x1379)))
(define-fun x1915 ((x1379 Int)) Bool (and (= x1379 (x2453 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1379)) (= (x2453 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1379)))
(define-fun x1716 ((x1379 Int)) Bool (and (= 0 (x2453 x1379 0)) (= 0 (x2453 0 x1379))))
(define-fun x2859 ((x1379 Int)) Bool (= (x2453 x1379 x1379) x1379))
(define-fun x2629 ((x1379 Int)) Bool (and (x1915 x1379) (x1716 x1379) (x2859 x1379)))
(define-fun x2404 ((x1379 Int) (x399 Int)) Bool (= (x2453 x399 x1379) (x2453 x1379 x399)))
(define-fun x1151 ((x1379 Int) (x399 Int)) Bool (and (>= (x2453 x1379 x399) 0) (=> (<= 0 x399) (<= (x2453 x1379 x399) x399)) (=> (>= x1379 0) (<= (x2453 x1379 x399) x1379))))
(define-fun x2010 ((x1379 Int) (x399 Int)) Bool (and (x2404 x1379 x399) (x1151 x1379 x399)))
(define-fun x1210 ((x1379 Int)) Bool (= (x2453 x1379 4294967295) (x1157 x1379 4294967296)))
(define-fun x894 ((x1379 Int)) Bool (and (x2010 x1379 4294967295) (x1210 x1379)))
(define-fun x174 ((x1379 Int) (x399 Int)) Bool (and (>= (x1157 x1379 x399) 0) (> x399 (x1157 x1379 x399))))
(define-fun x2060 ((x1379 Int) (x399 Int)) Bool (=> (and (> x399 0) (<= 0 x1379)) (= (= (x1157 x1379 x399) x1379) (< x1379 x399))))
(define-fun x1580 ((x1379 Int) (x399 Int)) Bool (=> (and (> x399 0) (and (< x1379 (+ x399 x399)) (>= x1379 x399))) (= (x1157 x1379 x399) (- x1379 x399))))
(define-fun x277 ((x1379 Int)) Bool (= (x1157 0 x1379) 0))
(define-fun x616 ((x1379 Int)) Bool (= 0 (x1157 x1379 1)))
(define-fun x129 ((x1379 Int)) Bool (= (x1157 x1379 x1379) 0))
(define-fun x2951 ((x1379 Int)) Bool (and (x129 x1379) (x277 x1379) (x616 x1379)))
(define-fun x2430 ((x1379 Int) (x399 Int)) Bool (=> (and (> x399 0) (> x1379 0)) (and (<= (x2238 x1379 x399) x1379) (<= 0 (x2238 x1379 x399)))))
(define-fun x2736 ((x1379 Int) (x399 Int)) Bool (=> (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1379) (<= 0 x1379)) (and (< x399 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 1 x399))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2238 x1379 x399)) (<= 0 (x2238 x1379 x399)))))
(define-fun x211 ((x1379 Int) (x399 Int)) Bool (=> (and (> x1379 x399) (< 1 x399)) (> x1379 (x2238 x1379 x399))))
(define-fun x1972 ((x1379 Int) (x399 Int)) Bool (=> (and (> x1379 0) (< 0 x399)) (= (> x399 x1379) (= (x2238 x1379 x399) 0))))
(define-fun x2281 ((x1379 Int)) Bool (= (x2238 0 x1379) 0))
(define-fun x2712 ((x1379 Int)) Bool (= (x2238 x1379 1) x1379))
(define-fun x20 ((x1379 Int)) Bool (=> (not (= 0 x1379)) (= (x2238 x1379 x1379) 1)))
(define-fun x729 ((x1379 Int)) Bool (and (x2712 x1379) (x2281 x1379) (x20 x1379)))
(define-fun x2434 ((x1379 Int) (x399 Int)) Bool (=> (and (< 0 x399) (> x1379 0)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2427 x1379 x399)) (= x399 (x2238 (x144 (x2427 x1379 x399)) x1379)))))
(define-fun x1600 ((x1379 Int) (x399 Int)) Bool (=> (and (not (= 0 x399)) (not (= x1379 0))) (and (= x1379 (x2238 (x2427 x1379 x399) x399)) (= x399 (x2238 (x2427 x1379 x399) x1379)))))
(define-fun x2853 ((x1379 Int) (x399 Int)) Bool (=> (and (> x399 0) (> x1379 0)) (= (> (x2427 x1379 x399) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x399 (x2238 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1379)))))
(define-fun x831 ((x1379 Int) (x399 Int)) Bool (and (= (x144 (x2427 (- x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) x399)) (x144 (x2427 x1379 x399))) (= (x144 (x2427 x1379 x399)) (x144 (x2427 (- x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x144 (x2427 x1379 (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x144 (x2427 x1379 x399)))))
(define-fun x795 ((x1379 Int) (x399 Int)) Bool (and (=> (and (and (> x1379 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1379)) (and (<= x399 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x399))) (= (>= (x2427 x1379 (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x399) (x2238 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1379)))) (=> (and (and (< 0 x1379) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1379)) (and (<= x399 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x399))) (= (>= (x2238 57896044618658097711785492504343953926634992332820282019728792003956564819967 x399) x1379) (<= (x2427 x1379 x399) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1379) (<= x1379 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x399) (> x399 0))) (= (>= (x2238 57896044618658097711785492504343953926634992332820282019728792003956564819968 x399) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1379)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x2427 (- x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) x399)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x399) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x399)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1379) (> x1379 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (x2427 (- x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1379) (x2238 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x399)))))))
(define-fun x2529 ((x1379 Int)) Bool (and (= 0 (x2427 0 x1379)) (= (x2427 x1379 0) 0)))
(define-fun x541 ((x1379 Int)) Bool (and (= (x2427 1 x1379) x1379) (= x1379 (x2427 x1379 1))))
(define-fun x18 ((x1379 Int)) Bool (and (x2529 x1379) (x541 x1379)))
(define-fun x1976 ((x1379 Int) (x399 Int)) Bool (=> (> x399 0) (= (+ (x1157 x1379 x399) (x2427 (x2238 x1379 x399) x399)) x1379)))
(define-fun x2626 ((x1379 Int) (x399 Int)) Bool (and (x174 x1379 x399) (x1976 x1379 x399) (x2060 x1379 x399)))
(define-fun x408 ((x1379 Int) (x399 Int)) Bool (=> (and (< 0 x1379) (> x399 0)) (and (< (- x1379 x399) (x2427 (x2238 x1379 x399) x399)) (>= x1379 (x2427 (x2238 x1379 x399) x399)))))
(define-fun x2680 ((x1379 Int) (x399 Int)) Bool (and (x211 x1379 x399) (x408 x1379 x399) (x2430 x1379 x399) (x2736 x1379 x399) (x1972 x1379 x399)))
(define-fun x485 ((x1379 Int) (x399 Int)) Bool (= (x2427 x399 x1379) (x2427 x1379 x399)))
(define-fun x305 ((x1379 Int) (x399 Int)) Bool (and (=> (and (> 0 x1379) (> x399 0)) (< (x2427 x1379 x399) 0)) (=> (and (> 0 x399) (< 0 x1379)) (< (x2427 x1379 x399) 0)) (=> (and (> 0 x1379) (> 0 x399)) (< 0 (x2427 x1379 x399))) (=> (and (> x399 0) (< 0 x1379)) (> (x2427 x1379 x399) 0))))
(define-fun x2731 ((x1379 Int) (x399 Int)) Bool (and (x2434 x1379 x399) (x1600 x1379 x399) (x305 x1379 x399) (x485 x1379 x399) (x2853 x1379 x399) (x795 x1379 x399) (x831 x1379 x399)))
(define-fun x2127 ((x1379 Int)) Bool (= (x1157 x1379 281474976710656) (x2453 x1379 281474976710655)))
(define-fun x962 ((x1379 Int)) Bool (and (x2010 x1379 281474976710655) (x2127 x1379)))
(define-fun x2599 ((x1379 Int)) Bool (= (x1157 x1379 2) (x2453 x1379 1)))
(define-fun x255 ((x1379 Int)) Bool (and (x2599 x1379) (x2010 x1379 1)))
(define-fun x2008 ((x1379 Int)) Bool (= (x1157 x1379 4) (+ (x2453 x1379 2) (x1157 x1379 2))))
(define-fun x1570 ((x1379 Int)) Bool (and (x2010 x1379 2) (x2008 x1379)))
(define-fun x1938 ((x1379 Int)) Bool (and (= (x54 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1379) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x54 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x1611 ((x1379 Int)) Bool (and (= x1379 (x54 0 x1379)) (= x1379 (x54 x1379 0))))
(define-fun x1289 ((x1379 Int)) Bool (= (x54 x1379 x1379) x1379))
(define-fun x2159 ((x1379 Int)) Bool (and (x1289 x1379) (x1938 x1379) (x1611 x1379)))
(define-fun x55 ((x1379 Int) (x399 Int)) Bool (= (x54 x399 x1379) (x54 x1379 x399)))
(define-fun x2772 ((x1379 Int) (x399 Int)) Bool (and (=> (<= 0 x399) (<= x399 (x54 x1379 x399))) (>= (+ x1379 x399) (x54 x1379 x399)) (=> (>= x1379 0) (>= (x54 x1379 x399) x1379))))
(define-fun x2449 ((x1379 Int) (x399 Int)) Bool (and (x2772 x1379 x399) (x55 x1379 x399)))
(define-fun x98 ((x1379 Int)) Bool (=> (and (< x1379 2147483648) (>= x1379 0)) (= (+ x1379 1073741824) (x54 1073741824 x1379))))
(define-fun x1933 ((x1379 Int)) Bool (and (x98 x1379) (x2449 x1379 1073741824)))
(define-fun x2826 ((x1379 Int)) Bool (= (x1157 x1379 8) (+ (x2453 x1379 4) (x1157 x1379 4))))
(define-fun x1813 ((x1379 Int)) Bool (and (x2826 x1379) (x2010 x1379 4)))
(define-fun x1407 ((x1379 Int)) Bool (=> (and (< x1379 1073741824) (>= x1379 0)) (= (x54 536870912 x1379) (+ 536870912 x1379))))
(define-fun x431 ((x1379 Int)) Bool (and (x2449 x1379 536870912) (x1407 x1379)))
(define-fun x1958 ((x1379 Int)) Bool (= (+ (x1157 x1379 8) (x2453 x1379 8)) (x1157 x1379 16)))
(define-fun x1098 ((x1379 Int)) Bool (and (x1958 x1379) (x2010 x1379 8)))
(define-fun x2700 ((x1379 Int)) Bool (=> (and (<= 0 x1379) (< x1379 536870912)) (= (x54 268435456 x1379) (+ x1379 268435456))))
(define-fun x463 ((x1379 Int)) Bool (and (x2449 x1379 268435456) (x2700 x1379)))
(define-fun x2306 ((x1379 Int)) Bool (= (x1157 x1379 32) (+ (x1157 x1379 16) (x2453 x1379 16))))
(define-fun x148 ((x1379 Int)) Bool (and (x2010 x1379 16) (x2306 x1379)))
(define-fun x801 ((x1379 Int)) Bool (=> (and (< x1379 268435456) (>= x1379 0)) (= (+ 134217728 x1379) (x54 134217728 x1379))))
(define-fun x1211 ((x1379 Int)) Bool (and (x801 x1379) (x2449 x1379 134217728)))
(define-fun x2373 ((x1379 Int)) Bool (= (x1157 x1379 64) (+ (x2453 x1379 32) (x1157 x1379 32))))
(define-fun x2038 ((x1379 Int)) Bool (and (x2010 x1379 32) (x2373 x1379)))
(define-fun x928 ((x1379 Int)) Bool (=> (and (< x1379 134217728) (<= 0 x1379)) (= (+ x1379 67108864) (x54 67108864 x1379))))
(define-fun x1921 ((x1379 Int)) Bool (and (x2449 x1379 67108864) (x928 x1379)))
(define-fun x2125 ((x1379 Int)) Bool (= (x1157 x1379 128) (+ (x2453 x1379 64) (x1157 x1379 64))))
(define-fun x191 ((x1379 Int)) Bool (and (x2125 x1379) (x2010 x1379 64)))
(define-fun x1290 ((x1379 Int)) Bool (=> (and (> 67108864 x1379) (<= 0 x1379)) (= (+ x1379 33554432) (x54 33554432 x1379))))
(define-fun x1001 ((x1379 Int)) Bool (and (x2449 x1379 33554432) (x1290 x1379)))
(define-fun x2200 ((x1379 Int)) Bool (= (+ (x2453 x1379 128) (x1157 x1379 128)) (x1157 x1379 256)))
(define-fun x1531 ((x1379 Int)) Bool (and (x2200 x1379) (x2010 x1379 128)))
(define-fun x2986 ((x1379 Int)) Bool (=> (and (>= x1379 0) (> 33554432 x1379)) (= (+ 16777216 x1379) (x54 16777216 x1379))))
(define-fun x88 ((x1379 Int)) Bool (and (x2449 x1379 16777216) (x2986 x1379)))
(define-fun x2244 ((x1379 Int)) Bool (= (+ (x2453 x1379 256) (x1157 x1379 256)) (x1157 x1379 512)))
(define-fun x2375 ((x1379 Int)) Bool (and (x2244 x1379) (x2010 x1379 256)))
(define-fun x1505 ((x1379 Int)) Bool (=> (and (< x1379 16777216) (>= x1379 0)) (= (+ x1379 8388608) (x54 8388608 x1379))))
(define-fun x1849 ((x1379 Int)) Bool (and (x1505 x1379) (x2449 x1379 8388608)))
(define-fun x1448 ((x1379 Int)) Bool (= (+ (x1157 x1379 512) (x2453 x1379 512)) (x1157 x1379 1024)))
(define-fun x1470 ((x1379 Int)) Bool (and (x2010 x1379 512) (x1448 x1379)))
(define-fun x851 ((x1379 Int)) Bool (=> (and (>= x1379 0) (< x1379 8388608)) (= (x54 4194304 x1379) (+ x1379 4194304))))
(define-fun x1412 ((x1379 Int)) Bool (and (x851 x1379) (x2449 x1379 4194304)))
(define-fun x2057 ((x1379 Int)) Bool (= (x1157 x1379 2048) (+ (x2453 x1379 1024) (x1157 x1379 1024))))
(define-fun x381 ((x1379 Int)) Bool (and (x2010 x1379 1024) (x2057 x1379)))
(define-fun x1087 ((x1379 Int)) Bool (=> (and (< x1379 4194304) (<= 0 x1379)) (= (+ 2097152 x1379) (x54 2097152 x1379))))
(define-fun x245 ((x1379 Int)) Bool (and (x1087 x1379) (x2449 x1379 2097152)))
(define-fun x855 ((x1379 Int)) Bool (= (+ (x1157 x1379 2048) (x2453 x1379 2048)) (x1157 x1379 4096)))
(define-fun x2054 ((x1379 Int)) Bool (and (x2010 x1379 2048) (x855 x1379)))
(define-fun x2552 ((x1379 Int)) Bool (=> (and (< x1379 2097152) (<= 0 x1379)) (= (+ x1379 1048576) (x54 1048576 x1379))))
(define-fun x1707 ((x1379 Int)) Bool (and (x2449 x1379 1048576) (x2552 x1379)))
(define-fun x2577 ((x1379 Int)) Bool (= (x1157 x1379 8192) (+ (x2453 x1379 4096) (x1157 x1379 4096))))
(define-fun x457 ((x1379 Int)) Bool (and (x2577 x1379) (x2010 x1379 4096)))
(define-fun x2117 ((x1379 Int)) Bool (=> (and (<= 0 x1379) (> 1048576 x1379)) (= (x54 524288 x1379) (+ 524288 x1379))))
(define-fun x1516 ((x1379 Int)) Bool (and (x2117 x1379) (x2449 x1379 524288)))
(define-fun x1882 ((x1379 Int)) Bool (= (x1157 x1379 16384) (+ (x1157 x1379 8192) (x2453 x1379 8192))))
(define-fun x226 ((x1379 Int)) Bool (and (x2010 x1379 8192) (x1882 x1379)))
(define-fun x561 ((x1379 Int)) Bool (=> (and (<= 0 x1379) (< x1379 524288)) (= (x54 262144 x1379) (+ x1379 262144))))
(define-fun x209 ((x1379 Int)) Bool (and (x2449 x1379 262144) (x561 x1379)))
(define-fun x896 ((x1379 Int)) Bool (= (x1157 x1379 32768) (+ (x2453 x1379 16384) (x1157 x1379 16384))))
(define-fun x786 ((x1379 Int)) Bool (and (x896 x1379) (x2010 x1379 16384)))
(define-fun x1506 ((x1379 Int)) Bool (=> (and (>= x1379 0) (> 262144 x1379)) (= (+ 131072 x1379) (x54 131072 x1379))))
(define-fun x1023 ((x1379 Int)) Bool (and (x1506 x1379) (x2449 x1379 131072)))
(define-fun x2224 ((x1379 Int)) Bool (= (x1157 x1379 65536) (+ (x2453 x1379 32768) (x1157 x1379 32768))))
(define-fun x2647 ((x1379 Int)) Bool (and (x2010 x1379 32768) (x2224 x1379)))
(define-fun x2930 ((x1379 Int)) Bool (=> (and (> 131072 x1379) (<= 0 x1379)) (= (+ x1379 65536) (x54 65536 x1379))))
(define-fun x659 ((x1379 Int)) Bool (and (x2449 x1379 65536) (x2930 x1379)))
(define-fun x258 ((x1379 Int)) Bool (= (x1157 x1379 131072) (+ (x1157 x1379 65536) (x2453 x1379 65536))))
(define-fun x2747 ((x1379 Int)) Bool (and (x258 x1379) (x2010 x1379 65536)))
(define-fun x1342 ((x1379 Int)) Bool (=> (and (>= x1379 0) (< x1379 65536)) (= (+ 32768 x1379) (x54 32768 x1379))))
(define-fun x2061 ((x1379 Int)) Bool (and (x2449 x1379 32768) (x1342 x1379)))
(define-fun x825 ((x1379 Int)) Bool (= (x1157 x1379 262144) (+ (x2453 x1379 131072) (x1157 x1379 131072))))
(define-fun x1797 ((x1379 Int)) Bool (and (x2010 x1379 131072) (x825 x1379)))
(define-fun x43 ((x1379 Int)) Bool (=> (and (> 32768 x1379) (<= 0 x1379)) (= (x54 16384 x1379) (+ 16384 x1379))))
(define-fun x2520 ((x1379 Int)) Bool (and (x43 x1379) (x2449 x1379 16384)))
(define-fun x206 ((x1379 Int)) Bool (= (x1157 x1379 524288) (+ (x2453 x1379 262144) (x1157 x1379 262144))))
(define-fun x643 ((x1379 Int)) Bool (and (x2010 x1379 262144) (x206 x1379)))
(define-fun x508 ((x1379 Int)) Bool (=> (and (<= 0 x1379) (< x1379 16384)) (= (+ x1379 8192) (x54 8192 x1379))))
(define-fun x2297 ((x1379 Int)) Bool (and (x2449 x1379 8192) (x508 x1379)))
(define-fun x264 ((x1379 Int)) Bool (= (+ (x1157 x1379 524288) (x2453 x1379 524288)) (x1157 x1379 1048576)))
(define-fun x1061 ((x1379 Int)) Bool (and (x2010 x1379 524288) (x264 x1379)))
(define-fun x1826 ((x1379 Int)) Bool (=> (and (>= x1379 0) (> 8192 x1379)) (= (+ x1379 4096) (x54 4096 x1379))))
(define-fun x2681 ((x1379 Int)) Bool (and (x1826 x1379) (x2449 x1379 4096)))
(define-fun x2123 ((x1379 Int)) Bool (= (x1157 x1379 2097152) (+ (x1157 x1379 1048576) (x2453 x1379 1048576))))
(define-fun x1496 ((x1379 Int)) Bool (and (x2123 x1379) (x2010 x1379 1048576)))
(define-fun x2025 ((x1379 Int)) Bool (=> (and (<= 0 x1379) (< x1379 4096)) (= (x54 2048 x1379) (+ x1379 2048))))
(define-fun x2521 ((x1379 Int)) Bool (and (x2025 x1379) (x2449 x1379 2048)))
(define-fun x477 ((x1379 Int)) Bool (= (+ (x1157 x1379 2097152) (x2453 x1379 2097152)) (x1157 x1379 4194304)))
(define-fun x1017 ((x1379 Int)) Bool (and (x2010 x1379 2097152) (x477 x1379)))
(define-fun x2095 ((x1379 Int)) Bool (=> (and (>= x1379 0) (< x1379 2048)) (= (+ 1024 x1379) (x54 1024 x1379))))
(define-fun x2492 ((x1379 Int)) Bool (and (x2095 x1379) (x2449 x1379 1024)))
(define-fun x2256 ((x1379 Int)) Bool (= (x1157 x1379 8388608) (+ (x2453 x1379 4194304) (x1157 x1379 4194304))))
(define-fun x2416 ((x1379 Int)) Bool (and (x2256 x1379) (x2010 x1379 4194304)))
(define-fun x1625 ((x1379 Int)) Bool (=> (and (>= x1379 0) (< x1379 1024)) (= (+ x1379 512) (x54 512 x1379))))
(define-fun x2020 ((x1379 Int)) Bool (and (x2449 x1379 512) (x1625 x1379)))
(define-fun x1805 ((x1379 Int)) Bool (= (+ (x2453 x1379 8388608) (x1157 x1379 8388608)) (x1157 x1379 16777216)))
(define-fun x2248 ((x1379 Int)) Bool (and (x2010 x1379 8388608) (x1805 x1379)))
(define-fun x2411 ((x1379 Int)) Bool (=> (and (< x1379 512) (>= x1379 0)) (= (x54 256 x1379) (+ x1379 256))))
(define-fun x1987 ((x1379 Int)) Bool (and (x2449 x1379 256) (x2411 x1379)))
(define-fun x1447 ((x1379 Int)) Bool (= (+ (x2453 x1379 16777216) (x1157 x1379 16777216)) (x1157 x1379 33554432)))
(define-fun x2540 ((x1379 Int)) Bool (and (x2010 x1379 16777216) (x1447 x1379)))
(define-fun x2066 ((x1379 Int)) Bool (=> (and (<= 0 x1379) (> 256 x1379)) (= (x54 128 x1379) (+ x1379 128))))
(define-fun x553 ((x1379 Int)) Bool (and (x2449 x1379 128) (x2066 x1379)))
(define-fun x745 ((x1379 Int)) Bool (= (x1157 x1379 67108864) (+ (x2453 x1379 33554432) (x1157 x1379 33554432))))
(define-fun x1146 ((x1379 Int)) Bool (and (x745 x1379) (x2010 x1379 33554432)))
(define-fun x1401 ((x1379 Int)) Bool (=> (and (<= 0 x1379) (< x1379 128)) (= (x54 64 x1379) (+ 64 x1379))))
(define-fun x1576 ((x1379 Int)) Bool (and (x1401 x1379) (x2449 x1379 64)))
(define-fun x1692 ((x1379 Int)) Bool (= (x1157 x1379 134217728) (+ (x2453 x1379 67108864) (x1157 x1379 67108864))))
(define-fun x2289 ((x1379 Int)) Bool (and (x1692 x1379) (x2010 x1379 67108864)))
(define-fun x2199 ((x1379 Int)) Bool (=> (and (<= 0 x1379) (> 64 x1379)) (= (+ 32 x1379) (x54 32 x1379))))
(define-fun x737 ((x1379 Int)) Bool (and (x2449 x1379 32) (x2199 x1379)))
(define-fun x1092 ((x1379 Int)) Bool (= (+ (x2453 x1379 134217728) (x1157 x1379 134217728)) (x1157 x1379 268435456)))
(define-fun x1607 ((x1379 Int)) Bool (and (x2010 x1379 134217728) (x1092 x1379)))
(define-fun x2140 ((x1379 Int)) Bool (=> (and (>= x1379 0) (< x1379 32)) (= (x54 16 x1379) (+ 16 x1379))))
(define-fun x2901 ((x1379 Int)) Bool (and (x2140 x1379) (x2449 x1379 16)))
(define-fun x752 ((x1379 Int)) Bool (= (+ (x1157 x1379 268435456) (x2453 x1379 268435456)) (x1157 x1379 536870912)))
(define-fun x1622 ((x1379 Int)) Bool (and (x752 x1379) (x2010 x1379 268435456)))
(define-fun x2382 ((x1379 Int)) Bool (=> (and (>= x1379 0) (< x1379 16)) (= (+ x1379 8) (x54 8 x1379))))
(define-fun x1395 ((x1379 Int)) Bool (and (x2449 x1379 8) (x2382 x1379)))
(define-fun x1331 ((x1379 Int)) Bool (= (+ (x1157 x1379 536870912) (x2453 x1379 536870912)) (x1157 x1379 1073741824)))
(define-fun x1404 ((x1379 Int)) Bool (and (x1331 x1379) (x2010 x1379 536870912)))
(define-fun x1481 ((x1379 Int)) Bool (=> (and (> 8 x1379) (>= x1379 0)) (= (+ 4 x1379) (x54 4 x1379))))
(define-fun x826 ((x1379 Int)) Bool (and (x1481 x1379) (x2449 x1379 4)))
(define-fun x688 ((x1379 Int)) Bool (= (+ (x2453 x1379 1073741824) (x1157 x1379 1073741824)) (x1157 x1379 2147483648)))
(define-fun x1247 ((x1379 Int)) Bool (and (x2010 x1379 1073741824) (x688 x1379)))
(define-fun x1451 ((x1379 Int)) Bool (= (+ (x2453 x1379 2147483648) (x1157 x1379 2147483648)) (x1157 x1379 4294967296)))
(define-fun x2592 ((x1379 Int)) Bool (and (x1451 x1379) (x2010 x1379 2147483648)))
(define-fun x1107 ((x1379 Int)) Bool (=> (and (>= x1379 0) (> 4 x1379)) (= (+ x1379 2) (x54 2 x1379))))
(define-fun x1271 ((x1379 Int)) Bool (and (x2449 x1379 2) (x1107 x1379)))
(define-fun x2360 ((x1379 Int)) Bool (= (+ 1 (- x1379 (x1157 x1379 2))) (x54 x1379 1)))
(define-fun x159 ((x1379 Int)) Bool (and (x2360 x1379) (x2449 x1379 1)))
(define-fun x2656 ((x296 Int)) Int (x225 x296))
(define-fun x2938 ((x296 Int)) Int (ite (= x296 256) 0 (x1235 x296)))
(define-fun x645 ((x296 Int)) Int (ite (= x296 288) 0 (x2938 x296)))
(define-fun x1046 ((x296 Int)) Int (ite (= 128 x296) 256 (x645 x296)))
(define-fun x1419 ((x296 Int)) Int (ite (= x296 160) 0 (x1046 x296)))
(define-fun x1956 ((x296 Int)) Int (ite (= 192 x296) 0 (x1419 x296)))
(define-fun x1890 ((x296 Int)) Int (ite (= x296 224) 0 (x1956 x296)))
(define-fun x47 ((x296 Int)) Int (ite (= x296 320) 0 (x1890 x296)))
(define-fun x1738 ((x296 Int)) Int (ite (= 352 x296) 0 (x47 x296)))
(define-fun x2583 ((x296 Int)) Int (ite (= x296 320) x1308 (x1738 x296)))
(define-fun x972 ((x296 Int)) Int (ite (= x296 352) x1236 (x2583 x296)))
(define-fun x161 ((x296 Int)) Int (ite (= 384 x296) 320 (x972 x296)))
(define-fun x141 ((x296 Int)) Int (ite (= 416 x296) x1822 (x161 x296)))
(define-fun x1731 ((x296 Int)) Int (ite (= 448 x296) x2237 (x141 x296)))
(define-fun x50 ((x296 Int)) Int (ite (= x296 480) 0 (x1731 x296)))
(define-fun x2724 ((x296 Int)) Int (x2118 x296))
(define-fun x869 ((x296 Int)) Int (ite (= x296 256) 0 (x799 x296)))
(define-fun x1773 ((x296 Int)) Int (ite (= x296 288) 0 (x869 x296)))
(define-fun x2999 ((x296 Int)) Int (ite (= x296 128) 256 (x1773 x296)))
(define-fun x941 ((x296 Int)) Int (ite (= x296 160) 0 (x2999 x296)))
(define-fun x261 ((x296 Int)) Int (ite (= x296 192) 0 (x941 x296)))
(define-fun x2586 ((x296 Int)) Int (ite (= 224 x296) 0 (x261 x296)))
(define-fun x560 ((x296 Int)) Int (ite (= x296 320) 0 (x2586 x296)))
(define-fun x378 ((x296 Int)) Int (ite (= x296 352) 0 (x560 x296)))
(define-fun x791 ((x296 Int)) Int (ite (= x296 320) x524 (x378 x296)))
(define-fun x2461 ((x296 Int)) Int (ite (= 352 x296) x2011 (x791 x296)))
(define-fun x1526 ((x296 Int)) Int (ite (= x296 384) 320 (x2461 x296)))
(define-fun x2047 ((x296 Int)) Int (ite (= x296 416) x2120 (x1526 x296)))
(define-fun x2878 ((x296 Int)) Int (ite (= x296 448) x2971 (x2047 x296)))
(define-fun x1980 ((x296 Int)) Int (ite (= x296 480) 0 (x2878 x296)))
(define-fun x2831 ((x296 Int)) Int (ite (= 576 x296) x2355 (x50 x296)))
(define-fun x297 ((x296 Int)) Int (ite x1000 (x50 x296) (x2831 x296)))
(define-fun x2699 ((x296 Int)) Int (ite (= x296 512) 576 (x297 x296)))
(define-fun x2788 ((x296 Int)) Int (ite (= x296 640) x1217 (x2699 x296)))
(define-fun x601 ((x296 Int)) Int (ite x2824 (x2699 x296) (x2788 x296)))
(define-fun x2254 ((x296 Int)) Int (ite (= 544 x296) 640 (x601 x296)))
(define-fun x538 ((x296 Int)) Int (ite (= x296 736) x48 (x2254 x296)))
(define-fun x83 ((x296 Int)) Int (ite (= x296 768) x2539 (x538 x296)))
(define-fun x2860 ((x296 Int)) Int (ite (= 800 x296) x613 (x83 x296)))
(define-fun x2715 ((x296 Int)) Int (ite (= x296 832) x1311 (x2860 x296)))
(define-fun x2556 ((x296 Int)) Int (ite (= x296 704) 128 (x2715 x296)))
(define-fun x619 ((x296 Int)) Int (ite (= x296 864) x411 (x2556 x296)))
(define-fun x1991 ((x296 Int)) Int (ite (and (> (+ 896 x411) x296) (<= 896 x296)) (x225 (+ (- x296 896) x2653)) (x619 x296)))
(define-fun x256 ((x296 Int)) Int (ite (= x296 x2877) 0 (x1991 x296)))
(define-fun x956 ((x296 Int)) Int (ite (= x296 x1072) x930 (x256 x296)))
(define-fun x2030 ((x296 Int)) Int (ite (= x383 x296) (x1049 x201) (x956 x296)))
(define-fun x2655 ((x296 Int)) Int (ite (= x1596 x296) x2869 (x2030 x296)))
(define-fun x1058 ((x296 Int)) Int (ite (= x1080 x296) (x1049 x201) (x256 x296)))
(define-fun x2178 ((x296 Int)) Int (ite (= x296 x556) x930 (x1058 x296)))
(define-fun x1823 ((x296 Int)) Int (ite (= x1596 x296) x79 (x2178 x296)))
(define-fun x2757 ((x296 Int)) Int (ite x2210 (x2655 x296) (x1823 x296)))
(define-fun x273 ((x296 Int)) Int (ite x2330 (x256 x296) (x2757 x296)))
(define-fun x2527 ((x296 Int)) Int (ite (= x296 x672) x1332 (x273 x296)))
(define-fun x2270 ((x296 Int)) Int (ite (= x296 x504) x1653 (x2527 x296)))
(define-fun x243 ((x296 Int)) Int (ite (= x2234 x296) 0 (x2270 x296)))
(define-fun x2605 ((x296 Int)) Int (ite (= x1182 x296) 0 (x243 x296)))
(define-fun x2732 ((x296 Int)) Int (ite (= x2139 x296) x2349 (x2605 x296)))
(define-fun x1039 ((x296 Int)) Int (ite (= x296 x114) x2673 (x2732 x296)))
(define-fun x2582 ((x296 Int)) Int (ite (= x296 x2139) 0 (x2605 x296)))
(define-fun x2898 ((x296 Int)) Int (ite (= x296 x874) 0 (x2582 x296)))
(define-fun x2431 ((x296 Int)) Int (ite x188 (x1039 x296) (x2898 x296)))
(define-fun x2886 ((x296 Int)) Int (ite (= x2568 x296) 0 (x2431 x296)))
(define-fun x1147 ((x296 Int)) Int (ite (= x296 x319) 0 (x2886 x296)))
(define-fun x2420 ((x296 Int)) Int (ite (and (> (+ 128 x1129) x296) (<= x1129 x296)) (x225 (+ x519 (- x296 x1129))) (x1147 x296)))
(define-fun x1327 ((x296 Int)) Int (ite (= x296 x1129) x1744 (x2420 x296)))
(define-fun x155 ((x296 Int)) Int (ite (= x1512 x296) x1612 (x1327 x296)))
(define-fun x2589 ((x296 Int)) Int (ite (= x296 x2603) x488 (x155 x296)))
(define-fun x622 ((x296 Int)) Int (ite (= x1413 x296) x994 (x2589 x296)))
(define-fun x2946 ((x296 Int)) Int (ite (and (> (+ 64 x2568) x296) (<= x2568 x296)) (x1942 (+ 0 (- x296 x2568))) (x622 x296)))
(define-fun x324 ((x296 Int)) Int (ite x2343 (x2946 x296) (x622 x296)))
(define-fun x2295 ((x296 Int)) Int (ite (= x296 x2272) 11559732032986387107991004021392285783925812861821192530917403151452391805634 (x324 x296)))
(define-fun x178 ((x296 Int)) Int (ite (= x296 x1941) 10857046999023057135944570762232829481370756359578518086990519993285655852781 (x2295 x296)))
(define-fun x2719 ((x296 Int)) Int (ite (= x2892 x296) x2272 (x178 x296)))
(define-fun x1427 ((x296 Int)) Int (ite (= x296 x2893) 17805874995975841540914202342111839520379459829704422454583296818431106115052 (x2719 x296)))
(define-fun x550 ((x296 Int)) Int (ite (= x2452 x296) 13392588948715843804641432497768002650278120570034223513918757245338268106653 (x1427 x296)))
(define-fun x1601 ((x296 Int)) Int (ite (= x1171 x296) x2893 (x550 x296)))
(define-fun x2777 ((x296 Int)) Int (ite (= x1651 x296) x1659 (x1601 x296)))
(define-fun x498 ((x296 Int)) Int (ite (= x296 x117) x819 (x2777 x296)))
(define-fun x1160 ((x296 Int)) Int (ite (= x296 x1131) x1651 (x498 x296)))
(define-fun x1045 ((x296 Int)) Int (ite (= x25 x296) x2568 (x1160 x296)))
(define-fun x1961 ((x296 Int)) Int (ite (= x296 x1896) 512 (x1045 x296)))
(define-fun x2832 ((x296 Int)) Int (ite (= x296 x1676) x2892 (x1961 x296)))
(define-fun x2871 ((x296 Int)) Int (ite (and (<= x568 x296) (> (+ x568 384) x296)) (x225 (+ (- x296 x568) x519)) (x2832 x296)))
(define-fun x2119 ((x296 Int)) Int (ite (= x2269 x296) x401 (x2871 x296)))
(define-fun x2923 ((x296 Int)) Int (ite (= x1687 x296) x2881 (x2119 x296)))
(define-fun x518 ((x296 Int)) Int (ite (= x296 x2730) x1954 (x2923 x296)))
(define-fun x837 ((x296 Int)) Int (ite (= x1215 x296) x2249 (x518 x296)))
(define-fun x483 ((x296 Int)) Int (ite (= x296 x406) x430 (x837 x296)))
(define-fun x2439 ((x296 Int)) Int (ite (= x494 x296) x466 (x483 x296)))
(define-fun x284 ((x296 Int)) Int (ite (= x296 x1872) x2476 (x2439 x296)))
(define-fun x911 ((x296 Int)) Int (ite (= x2600 x296) x921 (x284 x296)))
(define-fun x733 ((x296 Int)) Int (ite (= x296 x2690) x189 (x911 x296)))
(define-fun x506 ((x296 Int)) Int (ite (= x296 x1368) x2989 (x733 x296)))
(define-fun x2206 ((x296 Int)) Int (ite (= x1208 x296) x1119 (x506 x296)))
(define-fun x2914 ((x296 Int)) Int (ite (= x296 x1990) x1353 (x2206 x296)))
(define-fun x2949 ((x296 Int)) Int (ite (and (< x296 (+ 32 x2097)) (<= x2097 x296)) (x225 (+ (- x296 x2097) x519)) (x2914 x296)))
(define-fun x220 ((x296 Int)) Int (ite (and (> (+ 32 x2097) x296) (>= x296 x2097)) (x2580 (+ 0 (- x296 x2097))) (x2949 x296)))
(define-fun x387 ((x296 Int)) Int (ite x865 (x220 x296) (x2949 x296)))
(define-fun x336 ((x296 Int)) Int (ite (and (> (+ x438 x1059) x296) (>= x296 x1059)) (x225 (+ (- x296 x1059) x2573)) (x387 x296)))
(define-fun x747 ((x296 Int)) Int (ite (= x296 x1898) 0 (x336 x296)))
(define-fun x110 ((x296 Int)) Int (ite (= x296 x2787) (x1049 x2865) (x747 x296)))
(define-fun x36 ((x296 Int)) Int (ite (= x296 x1391) x172 (x110 x296)))
(define-fun x1761 ((x296 Int)) Int (ite (= x628 x296) x2149 (x36 x296)))
(define-fun x1258 ((x296 Int)) Int (ite (= x296 x1059) x1721 (x1761 x296)))
(define-fun x23 ((x296 Int)) Int (ite (= x2469 x296) x2056 (x1258 x296)))
(define-fun x321 ((x296 Int)) Int (ite (= x2251 x296) x1846 (x23 x296)))
(define-fun x1259 ((x296 Int)) Int (ite (= x296 x94) 1 (x321 x296)))
(define-fun x1574 ((x296 Int)) Int (ite (= x2365 x296) 2 (x1259 x296)))
(define-fun x1304 ((x296 Int)) Int (ite (= x2675 x296) 0 (x1574 x296)))
(define-fun x1986 ((x296 Int)) Int (ite (= x296 x32) 0 (x1304 x296)))
(define-fun x2991 ((x296 Int)) Int (ite (= x1387 x296) x2326 (x1986 x296)))
(define-fun x2815 ((x296 Int)) Int (ite (= x1396 x296) x1819 (x2991 x296)))
(define-fun x529 ((x296 Int)) Int (ite (= x1387 x296) 0 (x1986 x296)))
(define-fun x1245 ((x296 Int)) Int (ite (= x296 x850) 0 (x529 x296)))
(define-fun x473 ((x296 Int)) Int (ite x512 (x2815 x296) (x1245 x296)))
(define-fun x2802 ((x296 Int)) Int (ite (= x1340 x296) 0 (x473 x296)))
(define-fun x2740 ((x296 Int)) Int (ite (= x2258 x296) 0 (x2802 x296)))
(define-fun x2412 ((x296 Int)) Int (ite (and (<= x2184 x296) (< x296 (+ 96 x2184))) (x225 (+ (- x296 x2184) x519)) (x2740 x296)))
(define-fun x326 ((x296 Int)) Int (ite (= x296 x2184) x2531 (x2412 x296)))
(define-fun x2587 ((x296 Int)) Int (ite (= x385 x296) x1621 (x326 x296)))
(define-fun x617 ((x296 Int)) Int (ite (= x296 x1150) x533 (x2587 x296)))
(define-fun x76 ((x296 Int)) Int (ite (and (> (+ x1340 64) x296) (>= x296 x1340)) (x1821 (+ 0 (- x296 x1340))) (x617 x296)))
(define-fun x2534 ((x296 Int)) Int (ite x1546 (x76 x296) (x617 x296)))
(define-fun x1142 ((x296 Int)) Int (ite (= x296 x266) 15397661830938158195220872607788450164522003659458108417904919983213308643927 (x2534 x296)))
(define-fun x2636 ((x296 Int)) Int (ite (= x296 x2048) 4051901473739185471504766068400292374549287637553596337727654132125147894034 (x1142 x296)))
(define-fun x2906 ((x296 Int)) Int (ite (= x204 x296) 0 (x2636 x296)))
(define-fun x864 ((x296 Int)) Int (ite (= x296 x808) 0 (x2906 x296)))
(define-fun x2438 ((x296 Int)) Int (ite (and (> (+ 128 x2487) x296) (>= x296 x2487)) (x225 (+ (- x296 x2487) x519)) (x864 x296)))
(define-fun x914 ((x296 Int)) Int (ite (= x296 x2487) x2670 (x2438 x296)))
(define-fun x219 ((x296 Int)) Int (ite (= x2696 x296) x107 (x914 x296)))
(define-fun x1964 ((x296 Int)) Int (ite (= x2051 x296) x2900 (x219 x296)))
(define-fun x1392 ((x296 Int)) Int (ite (= x296 x1326) x860 (x1964 x296)))
(define-fun x1444 ((x296 Int)) Int (ite (and (< x296 (+ 64 x204)) (<= x204 x296)) (x634 (+ (- x296 x204) 0)) (x1392 x296)))
(define-fun x1097 ((x296 Int)) Int (ite x814 (x1444 x296) (x1392 x296)))
(define-fun x1561 ((x296 Int)) Int (ite (= x296 x1502) 0 (x1097 x296)))
(define-fun x1592 ((x296 Int)) Int (ite (= x2257 x296) 0 (x1561 x296)))
(define-fun x2895 ((x296 Int)) Int (ite (= x242 x296) 0 (x1592 x296)))
(define-fun x1632 ((x296 Int)) Int (ite (= x296 x2183) 0 (x2895 x296)))
(define-fun x497 ((x296 Int)) Int (ite (= x242 x296) x328 (x1592 x296)))
(define-fun x767 ((x296 Int)) Int (ite (= x296 x1069) x1310 (x497 x296)))
(define-fun x95 ((x296 Int)) Int (ite x1335 (x767 x296) (x1632 x296)))
(define-fun x2557 ((x296 Int)) Int (ite (= x296 x2456) 0 (x95 x296)))
(define-fun x1266 ((x296 Int)) Int (ite (= x97 x296) 0 (x2557 x296)))
(define-fun x620 ((x296 Int)) Int (ite (and (> (+ 96 x2525) x296) (<= x2525 x296)) (x225 (+ x519 (- x296 x2525))) (x1266 x296)))
(define-fun x2280 ((x296 Int)) Int (ite (= x2525 x296) x131 (x620 x296)))
(define-fun x2219 ((x296 Int)) Int (ite (= x1124 x296) x1024 (x2280 x296)))
(define-fun x671 ((x296 Int)) Int (ite (= x1234 x296) x2750 (x2219 x296)))
(define-fun x2035 ((x296 Int)) Int (ite (and (> (+ 64 x2456) x296) (>= x296 x2456)) (x2547 (+ (- x296 x2456) 0)) (x671 x296)))
(define-fun x878 ((x296 Int)) Int (ite x1199 (x517 x296) (x2648 x296)))
(define-fun x2622 ((x296 Int)) Int (ite x2207 (x2035 x296) (x671 x296)))
(define-fun x323 ((x296 Int)) Int (ite (= x296 x1525) 0 (x2622 x296)))
(define-fun x810 ((x296 Int)) Int (ite (= x296 x1701) 0 (x323 x296)))
(define-fun x317 ((x296 Int)) Int (ite (and (< x296 (+ 128 x1173)) (>= x296 x1173)) (x225 (+ x519 (- x296 x1173))) (x810 x296)))
(define-fun x637 ((x296 Int)) Int (ite (= x296 x1173) x1221 (x317 x296)))
(define-fun x991 ((x296 Int)) Int (ite (= x15 x296) x1202 (x637 x296)))
(define-fun x2310 ((x296 Int)) Int (ite (= x296 x456) x570 (x991 x296)))
(define-fun x562 ((x296 Int)) Int (ite (= x1985 x296) x2225 (x2310 x296)))
(define-fun x2282 ((x296 Int)) Int (ite (and (< x296 (+ x1525 64)) (<= x1525 x296)) (x889 (+ 0 (- x296 x1525))) (x562 x296)))
(define-fun x1250 ((x296 Int)) Int (ite x325 (x2282 x296) (x562 x296)))
(define-fun x292 ((x296 Int)) Int (ite (= x2065 x296) 11559732032986387107991004021392285783925812861821192530917403151452391805634 (x1250 x296)))
(define-fun x482 ((x296 Int)) Int (ite (= x37 x296) 10857046999023057135944570762232829481370756359578518086990519993285655852781 (x292 x296)))
(define-fun x1337 ((x296 Int)) Int (ite (= x296 x510) x2065 (x482 x296)))
(define-fun x1685 ((x296 Int)) Int (ite (= x296 x2935) 17805874995975841540914202342111839520379459829704422454583296818431106115052 (x1337 x296)))
(define-fun x2113 ((x296 Int)) Int (ite (= x1865 x296) 13392588948715843804641432497768002650278120570034223513918757245338268106653 (x1685 x296)))
(define-fun x1572 ((x296 Int)) Int (ite (= x296 x509) x2935 (x2113 x296)))
(define-fun x1878 ((x296 Int)) Int (ite (= x2933 x296) x2114 (x1572 x296)))
(define-fun x1842 ((x296 Int)) Int (ite (= x1249 x296) x2475 (x1967 x296)))
(define-fun x2474 ((x296 Int)) Int (ite (= x296 576) x2247 (x1980 x296)))
(define-fun x2045 ((x296 Int)) Int (ite x2004 (x1980 x296) (x2474 x296)))
(define-fun x363 ((x296 Int)) Int (ite (= 512 x296) 576 (x2045 x296)))
(define-fun x1456 ((x296 Int)) Int (ite (= 640 x296) x2929 (x363 x296)))
(define-fun x441 ((x296 Int)) Int (ite x2885 (x363 x296) (x1456 x296)))
(define-fun x957 ((x296 Int)) Int (ite (= 544 x296) 640 (x441 x296)))
(define-fun x1437 ((x296 Int)) Int (ite (= 736 x296) x2515 (x957 x296)))
(define-fun x764 ((x296 Int)) Int (ite (= x296 768) x1318 (x1437 x296)))
(define-fun x2733 ((x296 Int)) Int (ite (= x296 800) x312 (x764 x296)))
(define-fun x203 ((x296 Int)) Int (ite (= x296 832) x646 (x2733 x296)))
(define-fun x2979 ((x296 Int)) Int (ite (= 704 x296) 128 (x203 x296)))
(define-fun x1875 ((x296 Int)) Int (ite (= x296 864) x69 (x2979 x296)))
(define-fun x751 ((x296 Int)) Int (ite (and (<= 896 x296) (> (+ 896 x69) x296)) (x2118 (+ (- x296 896) x2211)) (x1875 x296)))
(define-fun x2931 ((x296 Int)) Int (ite (= x296 x1011) 0 (x751 x296)))
(define-fun x2889 ((x296 Int)) Int (ite (= x296 x405) x1435 (x2931 x296)))
(define-fun x963 ((x296 Int)) Int (ite (= x1742 x296) (x1049 x2078) (x2889 x296)))
(define-fun x257 ((x296 Int)) Int (ite (= x1048 x296) x1019 (x963 x296)))
(define-fun x998 ((x296 Int)) Int (ite (= x296 x2505) (x1049 x2078) (x2931 x296)))
(define-fun x1469 ((x296 Int)) Int (ite (= x296 x2800) x1435 (x998 x296)))
(define-fun x711 ((x296 Int)) Int (ite (= x1048 x296) x1465 (x1469 x296)))
(define-fun x940 ((x296 Int)) Int (ite x697 (x257 x296) (x711 x296)))
(define-fun x1371 ((x296 Int)) Int (ite x1399 (x2931 x296) (x940 x296)))
(define-fun x1936 ((x296 Int)) Int (ite (= x2523 x296) x885 (x1371 x296)))
(define-fun x2997 ((x296 Int)) Int (ite (= x1274 x296) x87 (x1936 x296)))
(define-fun x1735 ((x296 Int)) Int (ite (= x133 x296) 0 (x2997 x296)))
(define-fun x2468 ((x296 Int)) Int (ite (= x296 x1248) 0 (x1735 x296)))
(define-fun x82 ((x296 Int)) Int (ite (= x1216 x296) x2323 (x2468 x296)))
(define-fun x712 ((x296 Int)) Int (ite (= x735 x296) x2246 (x82 x296)))
(define-fun x2576 ((x296 Int)) Int (ite (= x1216 x296) 0 (x2468 x296)))
(define-fun x500 ((x296 Int)) Int (ite (= x247 x296) 0 (x2576 x296)))
(define-fun x1423 ((x296 Int)) Int (ite x113 (x712 x296) (x500 x296)))
(define-fun x1495 ((x296 Int)) Int (ite (= x296 x1137) 0 (x1423 x296)))
(define-fun x1868 ((x296 Int)) Int (ite (= x296 x293) 0 (x1495 x296)))
(define-fun x2268 ((x296 Int)) Int (ite (and (< x296 (+ x1928 128)) (<= x1928 x296)) (x2118 (+ x2128 (- x296 x1928))) (x1868 x296)))
(define-fun x59 ((x296 Int)) Int (ite (= x296 x1928) x2263 (x2268 x296)))
(define-fun x1944 ((x296 Int)) Int (ite (= x296 x1508) x1647 (x59 x296)))
(define-fun x176 ((x296 Int)) Int (ite (= x296 x474) x2096 (x1944 x296)))
(define-fun x1628 ((x296 Int)) Int (ite (= x296 x571) x2126 (x176 x296)))
(define-fun x1325 ((x296 Int)) Int (ite (and (>= x296 x1137) (> (+ x1137 64) x296)) (x281 (+ (- x296 x1137) 0)) (x1628 x296)))
(define-fun x2106 ((x296 Int)) Int (ite x2396 (x1325 x296) (x1628 x296)))
(define-fun x2984 ((x296 Int)) Int (ite (= x1808 x296) 11559732032986387107991004021392285783925812861821192530917403151452391805634 (x2106 x296)))
(define-fun x1747 ((x296 Int)) Int (ite (= x296 x1362) 10857046999023057135944570762232829481370756359578518086990519993285655852781 (x2984 x296)))
(define-fun x1088 ((x296 Int)) Int (ite (= x662 x296) x1808 (x1747 x296)))
(define-fun x1927 ((x296 Int)) Int (ite (= x296 x395) 17805874995975841540914202342111839520379459829704422454583296818431106115052 (x1088 x296)))
(define-fun x2261 ((x296 Int)) Int (ite (= x296 x1374) 13392588948715843804641432497768002650278120570034223513918757245338268106653 (x1927 x296)))
(define-fun x2691 ((x296 Int)) Int (ite (= x926 x296) x395 (x2261 x296)))
(define-fun x2770 ((x296 Int)) Int (ite (= x2803 x296) x1631 (x2691 x296)))
(define-fun x816 ((x296 Int)) Int (ite (= x1224 x296) x57 (x2770 x296)))
(define-fun x839 ((x296 Int)) Int (ite (= x516 x296) x2803 (x816 x296)))
(define-fun x1445 ((x296 Int)) Int (ite (= x2720 x296) x1137 (x839 x296)))
(define-fun x1050 ((x296 Int)) Int (ite (= x296 x1377) 512 (x1445 x296)))
(define-fun x56 ((x296 Int)) Int (ite (= x499 x296) x662 (x1050 x296)))
(define-fun x2023 ((x296 Int)) Int (ite (and (<= x2007 x296) (< x296 (+ 384 x2007))) (x2118 (+ x2128 (- x296 x2007))) (x56 x296)))
(define-fun x649 ((x296 Int)) Int (ite (= x296 x19) x686 (x2023 x296)))
(define-fun x173 ((x296 Int)) Int (ite (= x296 x419) x731 (x649 x296)))
(define-fun x1417 ((x296 Int)) Int (ite (= x116 x296) x716 (x173 x296)))
(define-fun x597 ((x296 Int)) Int (ite (= x1104 x296) x2610 (x1417 x296)))
(define-fun x2988 ((x296 Int)) Int (ite (= x296 x367) x1467 (x597 x296)))
(define-fun x111 ((x296 Int)) Int (ite (= x2874 x296) x2218 (x2988 x296)))
(define-fun x1425 ((x296 Int)) Int (ite (= x296 x2940) x1359 (x111 x296)))
(define-fun x418 ((x296 Int)) Int (ite (= x296 x1615) x2353 (x1425 x296)))
(define-fun x725 ((x296 Int)) Int (ite (= x1052 x296) x1127 (x418 x296)))
(define-fun x2391 ((x296 Int)) Int (ite (= x296 x1889) x2814 (x725 x296)))
(define-fun x793 ((x296 Int)) Int (ite (= x296 x2535) x301 (x2391 x296)))
(define-fun x536 ((x296 Int)) Int (ite (= x296 x1918) x2213 (x793 x296)))
(define-fun x1880 ((x296 Int)) Int (ite (and (>= x296 x2493) (< x296 (+ x2493 32))) (x2118 (+ x2128 (- x296 x2493))) (x536 x296)))
(define-fun x344 ((x296 Int)) Int (ite (and (>= x296 x2493) (> (+ x2493 32) x296)) (x528 (+ 0 (- x296 x2493))) (x1880 x296)))
(define-fun x927 ((x296 Int)) Int (ite x1712 (x344 x296) (x1880 x296)))
(define-fun x2578 ((x296 Int)) Int (ite (and (> (+ x988 x1953) x296) (<= x988 x296)) (x2118 (+ x687 (- x296 x988))) (x927 x296)))
(define-fun x2115 ((x296 Int)) Int (ite (= x1919 x296) 0 (x2578 x296)))
(define-fun x2372 ((x296 Int)) Int (ite (= x961 x296) (x1049 x564) (x2115 x296)))
(define-fun x610 ((x296 Int)) Int (ite (= x992 x296) x633 (x2372 x296)))
(define-fun x1099 ((x296 Int)) Int (ite (= x296 x2043) x1105 (x610 x296)))
(define-fun x2917 ((x296 Int)) Int (ite (= x296 x988) x1458 (x1099 x296)))
(define-fun x371 ((x296 Int)) Int (ite (= x296 x960) x2762 (x2917 x296)))
(define-fun x2182 ((x296 Int)) Int (ite (= x296 x409) x868 (x371 x296)))
(define-fun x2897 ((x296 Int)) Int (ite (= x296 x1044) 1 (x2182 x296)))
(define-fun x1661 ((x296 Int)) Int (ite (= x2171 x296) 2 (x2897 x296)))
(define-fun x414 ((x296 Int)) Int (ite (= x2513 x296) 0 (x1661 x296)))
(define-fun x1135 ((x296 Int)) Int (ite (= x1560 x296) 0 (x414 x296)))
(define-fun x2275 ((x296 Int)) Int (ite (= x296 x1585) x1330 (x1135 x296)))
(define-fun x2783 ((x296 Int)) Int (ite (= x296 x2366) x783 (x2275 x296)))
(define-fun x2124 ((x296 Int)) Int (ite (= x296 x1585) 0 (x1135 x296)))
(define-fun x1877 ((x296 Int)) Int (ite (= x1586 x296) 0 (x2124 x296)))
(define-fun x472 ((x296 Int)) Int (ite x1931 (x2783 x296) (x1877 x296)))
(define-fun x2907 ((x296 Int)) Int (ite (= x296 x2813) 0 (x472 x296)))
(define-fun x1619 ((x296 Int)) Int (ite (= x296 x45) 0 (x2907 x296)))
(define-fun x276 ((x296 Int)) Int (ite (and (> (+ x1946 96) x296) (<= x1946 x296)) (x2118 (+ x2128 (- x296 x1946))) (x1619 x296)))
(define-fun x1057 ((x296 Int)) Int (ite (= x296 x1946) x271 (x276 x296)))
(define-fun x331 ((x296 Int)) Int (ite (= x296 x2383) x2378 (x1057 x296)))
(define-fun x586 ((x296 Int)) Int (ite (= x296 x1170) x2632 (x331 x296)))
(define-fun x842 ((x296 Int)) Int (ite (and (< x296 (+ x2813 64)) (>= x296 x2813)) (x1734 (+ 0 (- x296 x2813))) (x586 x296)))
(define-fun x267 ((x296 Int)) Int (ite x717 (x842 x296) (x586 x296)))
(define-fun x1428 ((x296 Int)) Int (ite (= x2782 x296) 15397661830938158195220872607788450164522003659458108417904919983213308643927 (x267 x296)))
(define-fun x1102 ((x296 Int)) Int (ite (= x231 x296) 4051901473739185471504766068400292374549287637553596337727654132125147894034 (x1428 x296)))
(define-fun x254 ((x296 Int)) Int (ite (= x2785 x296) 0 (x1102 x296)))
(define-fun x975 ((x296 Int)) Int (ite (= x296 x676) 0 (x254 x296)))
(define-fun x549 ((x296 Int)) Int (ite (and (< x296 (+ 128 x788)) (>= x296 x788)) (x2118 (+ x2128 (- x296 x788))) (x975 x296)))
(define-fun x1106 ((x296 Int)) Int (ite (= x296 x788) x1624 (x549 x296)))
(define-fun x100 ((x296 Int)) Int (ite (= x2620 x296) x1695 (x1106 x296)))
(define-fun x2202 ((x296 Int)) Int (ite (= x2918 x296) x2255 (x100 x296)))
(define-fun x690 ((x296 Int)) Int (ite (= x296 x282) x1981 (x2202 x296)))
(define-fun x182 ((x296 Int)) Int (ite (and (>= x296 x2785) (> (+ x2785 64) x296)) (x2956 (+ 0 (- x296 x2785))) (x690 x296)))
(define-fun x2737 ((x296 Int)) Int (ite x1292 (x182 x296) (x690 x296)))
(define-fun x2753 ((x296 Int)) Int (ite (= x296 x1354) 0 (x2737 x296)))
(define-fun x214 ((x296 Int)) Int (ite (= x296 x891) 0 (x2753 x296)))
(define-fun x2870 ((x296 Int)) Int (ite (= x2608 x296) 0 (x214 x296)))
(define-fun x2102 ((x296 Int)) Int (ite (= x296 x238) 0 (x2870 x296)))
(define-fun x2455 ((x296 Int)) Int (ite (= x296 x2608) x1118 (x214 x296)))
(define-fun x1312 ((x296 Int)) Int (ite (= x296 x160) x2236 (x2455 x296)))
(define-fun x2522 ((x296 Int)) Int (ite x2631 (x1312 x296) (x2102 x296)))
(define-fun x600 ((x296 Int)) Int (ite (= x296 x1128) 0 (x2522 x296)))
(define-fun x2823 ((x296 Int)) Int (ite (= x296 x1784) 0 (x600 x296)))
(define-fun x2646 ((x296 Int)) Int (ite (and (>= x296 x361) (> (+ x361 96) x296)) (x2118 (+ (- x296 x361) x2128)) (x2823 x296)))
(define-fun x2545 ((x296 Int)) Int (ite (= x296 x361) x982 (x2646 x296)))
(define-fun x1717 ((x296 Int)) Int (ite (= x1027 x296) x1702 (x2545 x296)))
(define-fun x391 ((x296 Int)) Int (ite (= x296 x2796) x2327 (x1717 x296)))
(define-fun x2561 ((x296 Int)) Int (ite (and (> (+ x1128 64) x296) (>= x296 x1128)) (x1015 (+ 0 (- x296 x1128))) (x391 x296)))
(define-fun x352 ((x296 Int)) Int (ite x170 (x2839 x296) (x947 x296)))
(define-fun x2101 ((x296 Int)) Int (ite x2477 (x2561 x296) (x391 x296)))
(define-fun x2549 ((x296 Int)) Int (ite (= x2417 x296) 0 (x2101 x296)))
(define-fun x2377 ((x296 Int)) Int (ite (= x502 x296) 0 (x2549 x296)))
(define-fun x2284 ((x296 Int)) Int (ite (and (> (+ x440 128) x296) (<= x440 x296)) (x2118 (+ (- x296 x440) x2128)) (x2377 x296)))
(define-fun x925 ((x296 Int)) Int (ite (= x440 x296) x1338 (x2284 x296)))
(define-fun x2594 ((x296 Int)) Int (ite (= x296 x2046) x2775 (x925 x296)))
(define-fun x543 ((x296 Int)) Int (ite (= x296 x1598) x7 (x2594 x296)))
(define-fun x30 ((x296 Int)) Int (ite (= x296 x2197) x2779 (x543 x296)))
(define-fun x451 ((x296 Int)) Int (ite (and (< x296 (+ x2417 64)) (>= x296 x2417)) (x2676 (+ (- x296 x2417) 0)) (x30 x296)))
(define-fun x830 ((x296 Int)) Int (ite x703 (x451 x296) (x30 x296)))
(define-fun x2834 ((x296 Int)) Int (ite (= x1179 x296) 11559732032986387107991004021392285783925812861821192530917403151452391805634 (x830 x296)))
(define-fun x2109 ((x296 Int)) Int (ite (= x296 x778) 10857046999023057135944570762232829481370756359578518086990519993285655852781 (x2834 x296)))
(define-fun x2510 ((x296 Int)) Int (ite (= x296 x207) x1179 (x2109 x296)))
(define-fun x1828 ((x296 Int)) Int (ite (= x296 x2926) 17805874995975841540914202342111839520379459829704422454583296818431106115052 (x2510 x296)))
(define-fun x2301 ((x296 Int)) Int (ite (= x968 x296) 13392588948715843804641432497768002650278120570034223513918757245338268106653 (x1828 x296)))
(define-fun x1801 ((x296 Int)) Int (ite (= x923 x296) x2926 (x2301 x296)))
(define-fun x1018 ((x296 Int)) Int (ite (= x2792 x296) x854 (x1801 x296)))
(define-fun x1007 ((x296 Int)) Int (ite (= x296 x1238) x1265 (x2240 x296)))
(define-fun x2628 ((x1379 Int) (x399 Int) (x2 Int) (x1812 Int)) Bool (=> (and (<= x399 x1812) (>= x399 0) (>= x2 x1379) (>= x1379 0)) (>= (x2427 x2 x1812) (x2427 x1379 x399))))
(define-fun x2409 ((x1379 Int) (x399 Int) (x2 Int) (x1812 Int)) Bool (=> (= x1379 x2) (= (- (x2427 x1379 x399) (x2427 x2 x1812)) (x2427 x1379 (- x399 x1812)))))
(define-fun x1700 ((x1379 Int)) Bool (=> (and (not (= 15397661830938158195220872607788450164522003659458108417904919983213308643927 x1379)) (not (= x1379 19065496825945555802944500459784659360370071723095918844459983366851717029121)) (not (= x1379 1605692210171759198593486134459926266631754590294699023644268857716152816374)) (not (= x1379 281474976710655)) (not (= x1379 63660573315282705801001086741532748704021327057287729713677662699241823960296)) (not (= 13392588948715843804641432497768002650278120570034223513918757245338268106653 x1379)) (not (= 131072 x1379)) (not (= x1379 18446744073709551615)) (not (= x1379 262144)) (not (= 33554432 x1379)) (not (= x1379 33151575924830116202563342662843668884515279537950960006535658598482582730581)) (not (= 4294967296 x1379)) (not (= 2712691696 x1379)) (not (= 65536 x1379)) (> x1379 10000) (not (= 281474976710654 x1379)) (not (= 14420127946689298182407702599477844824481568136069666058437024779945048596988 x1379)) (not (= 32768 x1379)) (not (= x1379 4194304)) (not (= x1379 17805874995975841540914202342111839520379459829704422454583296818431106115052)) (not (= 712603760 x1379)) (not (= x1379 105015941155238675870317744051118741627952855755073633622858957636564748080881)) (not (= x1379 4051901473739185471504766068400292374549287637553596337727654132125147894034)) (not (= 21888242871839275222246405745257275088696311157297823662689037894645226208583 x1379)) (not (= 1736559843 x1379)) (not (= x1379 67108864)) (not (= x1379 1073741824)) (not (= 1461501637330902918203684832716283019655932542975 x1379)) (not (= x1379 524288)) (not (= x1379 84684860692432345508815850111325460890268974937005065116925575048889747129104)) (not (= x1379 43823624232495526908365875064542283096883394343879224506338352425602196996609)) (not (= 8388608 x1379)) (not (= 32685727167770504628014968172621197755414673299042699869126213917920315318119 x1379)) (not (= x1379 3012569127)) (not (= 2147483648 x1379)) (not (= x1379 28638458499813953387342862576031799503806270899767427533215561966834731185108)) (not (= 21888242871839275222246405745257275088548364400416034343698204186575808495617 x1379)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1379)) (not (= 2578352110 x1379)) (not (= 108844151692519000452708220636741476915984311376032675733692602838339372004332 x1379)) (not (= 1048576 x1379)) (not (= 107484826361731917731093150060856243723248667544379670577376733939481877207500 x1379)) (not (= x1379 114753704370624632363032878036054255364325328913606075139752535216297399631138)) (not (= 10857046999023057135944570762232829481370756359578518086990519993285655852781 x1379)) (not (= x1379 268435456)) (not (= 4150754238950871990496398701790393298955498680186071184456654025675166573995 x1379)) (not (= x1379 2097152)) (not (= 16777216 x1379)) (not (= 16384 x1379)) (not (= 4294967295 x1379)) (not (= 134217728 x1379)) (not (= x1379 536870912)) (not (= 11559732032986387107991004021392285783925812861821192530917403151452391805634 x1379))) (not ((_ is x450) (x666 x1379)))))
(assert (x2264 x633))
(assert (= x1575 (or x2076 x2160)))
(assert (= (x799 x1038) 0))
(assert (x2264 x405))
(assert (and (x2060 x210 4294967296) (x174 x210 4294967296) (x1580 x210 4294967296) (=> (< 0 4294967296) (= x210 (+ (* (x2238 x210 4294967296) 4294967296) (x1157 x210 4294967296))))))
(assert (x2159 x1792))
(assert (x2264 x540))
(assert (x1700 (x2115 (x435 (+ x988 160)))))
(assert (x2264 x2688))
(assert (x2264 x2822))
(assert (= (x1049 (x666 (x257 (x435 (+ x1883 96))))) (x257 (x435 (+ 96 x1883)))))
(assert (x2629 x1028))
(assert (x2629 x1390))
(assert (x2264 x2563))
(assert (x2264 x446))
(assert (= (x666 32685727167770504628014968172621197755414673299042699869126213917920315318119) (x450 32685727167770504628014968172621197755414673299042699869126213917920315318119)))
(assert (x2159 (ite x2072 x1667 (x54 2 x1667))))
(assert (= x1757 (and (not x580) x916)))
(assert (x2629 x2499))
(assert (x1700 (x2556 768)))
(assert (x2159 x424))
(assert (x2264 x819))
(assert (x2951 x53))
(assert (x2264 x1876))
(assert (and (x2060 x1014 2) (x174 x1014 2) (x1580 x1014 2) (=> (< 0 2) (= x1014 (+ (* (x2238 x1014 2) 2) (x1157 x1014 2))))))
(assert (x2951 x128))
(assert (x2951 x1926))
(assert (x2264 x2610))
(assert (x2264 x570))
(assert (x2159 x730))
(assert (x2629 x1076))
(assert (x381 x1390))
(assert (= (x711 (x435 (+ 64 x2495))) (x1049 (x666 (x711 (x435 (+ 64 x2495)))))))
(assert (x2681 x931))
(assert (x2264 x2934))
(assert (= (x450 1073741824) (x666 1073741824)))
(assert (x2264 x1340))
(assert (x2264 x2349))
(assert (= x2402 (=> (and (= (x2118 x2085) x827) (= x1385 (x1157 (x2427 x827 x1197) 21888242871839275222246405745257275088548364400416034343698204186575808495617)) (= x687 x2085) (= x2517 (not (< 32 x1953)))) (and (=> (= (x1157 (+ x1229 x1385) 21888242871839275222246405745257275088548364400416034343698204186575808495617) x2327) x2804) x2517))))
(assert (= (and x135 (not x2947)) x218))
(assert (x2264 x833))
(assert (x2264 x1114))
(assert (= x2331 (and x2311 x1317)))
(assert (x2629 x2044))
(assert (= (and (not x678) x1269) x2210))
(assert (= x1548 (x1049 (x666 x1548))))
(assert (and (x2060 x1191 4294967296) (x174 x1191 4294967296) (x1580 x1191 4294967296) (=> (< 0 4294967296) (= x1191 (+ (* (x2238 x1191 4294967296) 4294967296) (x1157 x1191 4294967296))))))
(assert (x2264 x2177))
(assert (x18 x1291))
(assert (= x820 (and x322 x1188)))
(assert (x2264 x2059))
(assert (x2264 x436))
(assert (x2264 x773))
(assert (= (=> (= (= 0 x903) x1351) (and (=> (and (= (> x903 0) x2497) (not x1351)) (and (=> (not x2497) x1108) (=> (and x2497 (and (= x2778 (x668 (- x519 x192))) (= (x435 (+ x2892 64)) x2272) (= x2452 (x435 (+ 32 x2893))) (= (x435 (+ x2893 64)) x1651) (= (x435 (+ 64 x2272)) x2893) (= (or (> x2778 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2778)) (< x2778 64))) x900) (= x1941 (x435 (+ 32 x2272))) (= (x435 (+ 32 x2892)) x1171))) (and (=> x900 x1108) (=> (and (not x900) (= x803 (or (and (< x2778 64) (= true (<= x2778 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x2778 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> (and (and (= (> x1131 18446744073709551615) x1003) (= (< x1131 x1651) x1389) (= (or x1003 x1389) x1473) (= x876 (= (ite x1473 1 0) 0)) (= x1131 (x435 (+ x1651 64)))) (not x803)) (and (=> (and (and (= true x1422) (= x1659 (x225 x192))) x876) (and (=> (and (and (= x1457 true) (= x819 (x225 x2143)) (= x2143 (x435 (+ 32 x192)))) x1422) (and (=> (not x1457) x1108) (=> x1457 x1489))) (=> (not x1422) x1108))) (=> (not x876) x1108))) (=> x803 x1108))))))) (=> x1351 x2808))) x709))
(assert (= (and (not x1770) x1645) x551))
(assert (and (x2060 x946 2048) (x174 x946 2048) (x1580 x946 2048) (=> (< 0 2048) (= x946 (+ (* (x2238 x946 2048) 2048) (x1157 x946 2048))))))
(assert (= (or x2927 x1000) x1547))
(assert (= x1639 (and (not x1652) x1575)))
(assert (x381 x1273))
(assert (x2264 x2971))
(assert (= (and (not x2364) x2546) x661))
(assert (x2264 x848))
(assert (x2681 x74))
(assert (x2264 x1117))
(assert (x2629 x1861))
(assert (x18 (- x612 x1190)))
(assert (x1700 (x2979 896)))
(assert (and (x2060 x2107 16777216) (x174 x2107 16777216) (x1580 x2107 16777216) (=> (< 0 16777216) (= x2107 (+ (* (x2238 x2107 16777216) 16777216) (x1157 x2107 16777216))))))
(assert (x2264 x1981))
(assert (x2264 x868))
(assert (x2159 16777216))
(assert (let ((x399 (x1082 2 x263))) (and (x1600 1 x399) (x2853 1 x399) (x831 1 x399) (and (= (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935) x399) (- (* 1 x399) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x399))) (= (- (* (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935) (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (x2427 1 (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* 1 x399) (x2427 1 x399)) (x2434 1 x399) (x795 1 x399))))
(assert (and (x2060 x946 32768) (x174 x946 32768) (x1580 x946 32768) (=> (< 0 32768) (= x946 (+ (* (x2238 x946 32768) 32768) (x1157 x946 32768))))))
(assert (= (x2979 736) (x1049 (x666 (x2979 736)))))
(assert (x2264 x937))
(assert (x2264 x301))
(assert (x2264 x1678))
(assert (x1700 (x2979 800)))
(assert (x729 x2593))
(assert (x2264 x1949))
(assert (x2264 x923))
(assert (and (x211 x2146 32) (x2430 x2146 32) (=> (and (> x2146 0) (> 32 0)) (and (<= (* 32 (x2238 x2146 32)) x2146) (> (* (x2238 x2146 32) 32) (- x2146 32)))) (x1972 x2146 32) (= (- x2146 (x2453 31 x2146)) (* (x2238 x2146 32) 32)) (x2736 x2146 32)))
(assert (x1700 (x2556 800)))
(assert (= (and x1835 x2967) x1260))
(assert (= (x666 13392588948715843804641432497768002650278120570034223513918757245338268106653) (x450 13392588948715843804641432497768002650278120570034223513918757245338268106653)))
(assert (x2264 x2977))
(assert (= (x1823 (x435 (+ x1026 128))) (x1049 (x666 (x1823 (x435 (+ x1026 128)))))))
(assert (x2951 x1390))
(assert (= (x1235 (x435 (+ 32 x1059))) 0))
(assert (x2264 x1143))
(assert (x2264 x2237))
(assert (x2264 x231))
(assert (x2951 4))
(assert (x2264 x1779))
(assert (x2159 2048))
(assert (x2409 x612 x674 x1190 x1768))
(assert (x1516 x1262))
(assert (= (x450 14420127946689298182407702599477844824481568136069666058437024779945048596988) (x666 14420127946689298182407702599477844824481568136069666058437024779945048596988)))
(assert (x2264 x2867))
(assert (x2264 x1904))
(assert (= x1645 (and (not x2830) x2641)))
(assert (= (=> (and (and (= x1170 (x435 (+ 32 x2383))) (= (x435 (+ 32 x2813)) x45) (= x249 (x435 (+ 32 x1977))) (= (< 0 x1133) x1166) (= x2383 (x435 (+ 32 x1946))) (= x1946 (x435 (+ x2813 64))) (= (x1057 x249) x2378) (= (x276 x1977) x271) (= (x435 (+ x1946 96)) x2782)) (or (and x1166 (and (= 1 x2569) (> 4294967296 x1205))) (and (not x1166) (= x2569 x1133)))) x168) x1663))
(assert (x2264 x2317))
(assert (x2264 x1655))
(assert (x2159 x2789))
(assert (x2264 x1430))
(assert (x2264 x698))
(assert (x2159 x1483))
(assert (x2680 4294967295 x679))
(assert (x2264 x28))
(assert (x18 (x1082 2 x912)))
(assert (and (x2060 x1273 8192) (x174 x1273 8192) (x1580 x1273 8192) (=> (< 0 8192) (= x1273 (+ (* (x2238 x1273 8192) 8192) (x1157 x1273 8192))))))
(assert (= x355 (or x1794 x2287)))
(assert (x2951 x1282))
(assert (= x2784 (=> (= (= x455 0) x347) (and (=> (and (not x347) (= (< 0 x455) x1538)) (and (=> x1538 x2307) (=> (not x1538) x1373))) (=> x347 x290)))))
(assert (= (and x2070 x2701) x2077))
(assert (x2264 x1750))
(assert (x2409 x674 x612 x1190 x1768))
(assert (x2951 x2597))
(assert (x2264 x2314))
(assert (x1700 (x747 (x435 (+ x1059 96)))))
(assert (x2264 x859))
(assert (x2264 x571))
(assert (x2264 x1365))
(assert (x2264 x1988))
(assert (x2264 x1375))
(assert (x255 x852))
(assert (x2264 x1328))
(assert (x729 x674))
(assert (= (and x2756 (not x2345)) x197))
(assert (x2264 x1238))
(assert (x2264 x1030))
(assert (x2264 x734))
(assert (x2264 x808))
(assert (x2951 x2735))
(assert (x2264 x1400))
(assert (x2264 x1854))
(assert (x2159 (ite x1089 x2789 (x54 2 x2789))))
(assert (x2264 x122))
(assert (x2264 x1990))
(assert (x2264 x1361))
(assert (= (and x1858 (not x368)) x2967))
(assert (x2264 x850))
(assert (= 33554432 (x1049 (x450 33554432))))
(assert (= (=> (= x575 (not (> x396 4))) (and (=> (= 2 x2851) x2809) x575)) x1294))
(assert (=> (>= 10000 (x2655 (x435 (+ x2415 32)))) (= (x450 (x2655 (x435 (+ x2415 32)))) (x666 (x2655 (x435 (+ 32 x2415)))))))
(assert (x2264 x1110))
(assert (= (or x2504 x2253) x2643))
(assert (and (x2060 x1903 4294967296) (x174 x1903 4294967296) (x1580 x1903 4294967296) (=> (< 0 4294967296) (= x1903 (+ (* (x2238 x1903 4294967296) 4294967296) (x1157 x1903 4294967296))))))
(assert (and (x2060 x946 2) (x174 x946 2) (x1580 x946 2) (=> (< 0 2) (= x946 (+ (* (x2238 x946 2) 2) (x1157 x946 2))))))
(assert (=> (>= 10000 x1066) (= (x450 x1066) (x666 x1066))))
(assert (x2951 134217728))
(assert (= x703 (and x2407 x1085)))
(assert (x2264 x1704))
(assert (x2264 x1370))
(assert (x2264 x796))
(assert (x2264 x1352))
(assert (x2264 x965))
(assert (x2264 x385))
(assert (= x1599 (=> (= x2761 (> x2347 x2014)) (and (=> (not x2761) x1108) (=> (and (and (= (x256 864) x800) (= x345 (> 32 x800))) x2761) (and (=> (and (and (= x1596 x672) (= x201 x867)) x345) x663) (=> (and (not x345) (and (= (= (x1157 x2014 2) 0) x678) (= (x256 896) x930))) (and (=> (not x678) x2941) (=> x678 x2457)))))))))
(assert (x2951 x881))
(assert (x2264 x2490))
(assert (= x1584 (and x910 x1978)))
(assert (= x2865 (x666 (x1049 x2865))))
(assert (x2951 64))
(assert (x2264 x1067))
(assert (x1412 x2664))
(assert (=> (<= (x711 (x435 (+ x2495 160))) 10000) (= (x666 (x711 (x435 (+ 160 x2495)))) (x450 (x711 (x435 (+ 160 x2495)))))))
(assert (= (x1049 (x450 281474976710655)) 281474976710655))
(assert (x2264 x955))
(assert (x2264 x961))
(assert (= (x1049 (x450 43823624232495526908365875064542283096883394343879224506338352425602196996609)) 43823624232495526908365875064542283096883394343879224506338352425602196996609))
(assert (x2629 x2386))
(assert (x2264 x994))
(assert (= (x1235 (x435 (+ x2767 32))) 0))
(assert (x2264 x624))
(assert (x2010 x2867 x348))
(assert (and (x2060 x946 65536) (x174 x946 65536) (x1580 x946 65536) (=> (< 0 65536) (= x946 (+ (* (x2238 x946 65536) 65536) (x1157 x946 65536))))))
(assert (= (x1049 (x450 1605692210171759198593486134459926266631754590294699023644268857716152816374)) 1605692210171759198593486134459926266631754590294699023644268857716152816374))
(assert (x2159 x224))
(assert (= (and x1166 x1254) x717))
(assert (= (and x2618 x2328) x995))
(assert (x2264 x1202))
(assert (x255 x1273))
(assert (x2264 x394))
(assert (x643 x1273))
(assert (x2264 x2383))
(assert (x1700 (x2655 (x435 (+ 192 x2415)))))
(assert (x2264 x1962))
(assert (x2159 x1667))
(assert (x2264 x578))
(assert (= 14420127946689298182407702599477844824481568136069666058437024779945048596988 (x1049 (x450 14420127946689298182407702599477844824481568136069666058437024779945048596988))))
(assert (= (and (not x781) x2635) x2193))
(assert (and (x2060 x1076 1073741824) (x174 x1076 1073741824) (x1580 x1076 1073741824) (=> (< 0 1073741824) (= x1076 (+ (* (x2238 x1076 1073741824) 1073741824) (x1157 x1076 1073741824))))))
(assert (x2951 x2983))
(assert (= (or x2423 x1335) x1507))
(assert (= 0 (x799 x2799)))
(assert (x2264 x53))
(assert (x2264 x470))
(assert (= (x2556 768) (x1049 (x666 (x2556 768)))))
(assert (x2264 x2653))
(assert (= (x1258 x2767) (x1049 (x666 (x1258 x2767)))))
(assert (x2951 16384))
(assert (x2264 x1219))
(assert (x2264 x2603))
(assert (= (x2115 (x435 (+ 96 x988))) (x1049 (x666 (x2115 (x435 (+ 96 x988)))))))
(assert (x2264 x1512))
(assert (= 0 (x1235 x1184)))
(assert (x2592 x228))
(assert (x2264 x1579))
(assert (x2264 x1789))
(assert (= (x666 16777216) (x450 16777216)))
(assert (= (and x1697 x964) x875))
(assert (x1098 x946))
(assert (= x2911 (and x2338 (not x1206))))
(assert (= x2809 (=> (and (= x253 (> x2169 x1273)) (= x2397 (x101 1 x2851)) (= x2169 (x2453 4294967295 x1775))) (and (=> (and (and (= x1510 (> x2153 x1190)) (= (x2453 4294967295 x1775) x2153)) (not x253)) (and (=> x1510 x1373) (=> (and (not x1510) (and (= x468 (< x2397 x2222)) (= (x2453 4294967295 x1453) x2222) (= (x668 (- x1190 x2153)) x1453))) (and (=> (and (and (= x272 (x2453 4294967295 x1903)) (= x1344 (> x272 x1273)) (= (x668 (- x2397 x2222)) x1903)) (not x468)) (and (=> (and x1344 (and (= (x2453 4294967295 x1775) x1750) (= x2781 (< x1273 x1750)))) (and (=> x2781 x1373) (=> (and (not x2781) (and (= (x2453 4294967295 x881) x2087) (= (x668 (- 4294967295 x1190)) x1643) (= x2400 (< x1643 x2087)) (= (x668 (- x1273 x1750)) x881))) (and (=> x2400 x1373) (=> (and (and (= (> x2397 0) x785) (= (x435 (+ x1190 x2087)) x128)) (not x2400)) (and (=> (not x785) x1373) (=> (and x785 (= (= x2397 1) x2662)) (and (=> (not x2662) x237) (=> (and (= 0 x693) x2662) x2209))))))))) (=> (not x1344) x1373))) (=> x468 x1373))))) (=> (and (= x2393 (> x2397 0)) x253) (and (=> (and x2393 (= x744 (= x2397 1))) (and (=> (not x744) x115) (=> (and (= x2357 0) x744) x2088))) (=> (not x2393) x1373)))))))
(assert (= x1314 (and x1873 x2816)))
(assert (x2264 x2478))
(assert (x1516 x2314))
(assert (and (x2060 x2141 65536) (x174 x2141 65536) (x1580 x2141 65536) (=> (< 0 65536) (= x2141 (+ (* (x2238 x2141 65536) 65536) (x1157 x2141 65536))))))
(assert (= x346 (and (not x2033) x647)))
(assert (x209 x511))
(assert (x2264 x1748))
(assert (x2264 x1556))
(assert (x894 x2625))
(assert (x2629 x742))
(assert (x2264 x2630))
(assert (= x2939 (and x1022 x621)))
(assert (x2264 x722))
(assert (= (x2414 x40 x2980) (ite (< x2980 256) (x2238 x40 (x1082 2 x2980)) 0)))
(assert (x2416 x1798))
(assert (x2731 x612 (- x674 x1768)))
(assert (x2264 x1736))
(assert (x1496 x1752))
(assert (x2264 x223))
(assert (x18 (x1082 2 x263)))
(assert (x2731 x1190 (- x1768 x612)))
(assert (= (x1235 x374) 0))
(assert (x2264 x899))
(assert (x2409 x1190 x1768 x612 x674))
(assert (let ((x1379 (x1049 (ite (<= x1352 32) (x581 (x666 (x2917 x2850)) 0) (ite (>= 64 x1352) (x2829 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) 0) (ite (>= 96 x1352) (x2290 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) (x666 (x2917 (x435 (+ x2850 64)))) 0) (ite (>= 128 x1352) (x1109 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) (x666 (x2917 (x435 (+ x2850 64)))) (x666 (x2917 (x435 (+ x2850 96)))) 0) (ite (<= x1352 160) (x1623 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) (x666 (x2917 (x435 (+ x2850 64)))) (x666 (x2917 (x435 (+ 96 x2850)))) (x666 (x2917 (x435 (+ 128 x2850)))) 0) (ite (>= 192 x1352) (x935 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) (x666 (x2917 (x435 (+ x2850 64)))) (x666 (x2917 (x435 (+ x2850 96)))) (x666 (x2917 (x435 (+ 128 x2850)))) (x666 (x2917 (x435 (+ 160 x2850)))) 0) (ite (>= 224 x1352) (x582 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) (x666 (x2917 (x435 (+ 64 x2850)))) (x666 (x2917 (x435 (+ 96 x2850)))) (x666 (x2917 (x435 (+ x2850 128)))) (x666 (x2917 (x435 (+ x2850 160)))) (x666 (x2917 (x435 (+ x2850 192)))) 0) (x666 x870))))))))))) (and (x2060 x1379 21888242871839275222246405745257275088548364400416034343698204186575808495617) (x174 x1379 21888242871839275222246405745257275088548364400416034343698204186575808495617) (x1580 x1379 21888242871839275222246405745257275088548364400416034343698204186575808495617) (=> (< 0 21888242871839275222246405745257275088548364400416034343698204186575808495617) (= x1379 (+ (* (x2238 x1379 21888242871839275222246405745257275088548364400416034343698204186575808495617) 21888242871839275222246405745257275088548364400416034343698204186575808495617) (x1157 x1379 21888242871839275222246405745257275088548364400416034343698204186575808495617)))))))
(assert (x2264 x2855))
(assert (x2264 x524))
(assert (x2629 1024))
(assert (x2264 x612))
(assert (x2264 x202))
(assert (= x780 (=> (and (= (x435 (+ x69 896)) x1011) (= (x2931 864) x444) (= x162 (x435 (+ 32 x2320))) (= (x2238 x1329 32) x384) (= x1048 (x435 (+ 864 x162))) (= 864 x78) (= x2320 (x144 (* x384 32))) (= (= (x1157 x444 32) 0) x2790) (= x1329 (x435 (+ x69 31)))) (and (=> (not x2790) x1373) (=> (and (and (= x1603 (x2931 864)) (= x1365 (x2238 x1603 32)) (= (< 0 x1365) x2978)) x2790) (and (=> (and (= 1 x2042) (not x2978)) x834) (=> (and (= (> x1365 255) x660) x2978) (and (=> x660 x1373) (=> (and (and (= x1843 (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2726)) (= (x101 1 x1365) x2726)) (not x660)) (and (=> x1843 x1373) (=> (and (not x1843) (= x2726 x2042)) x834)))))))))))
(assert (x2629 x2418))
(assert (x18 (- x1190 x612)))
(assert (x2264 x327))
(assert (= (x1823 (x435 (+ 64 x1026))) (x1049 (x666 (x1823 (x435 (+ x1026 64)))))))
(assert (and (x2060 x1968 262144) (x174 x1968 262144) (x1580 x1968 262144) (=> (< 0 262144) (= x1968 (+ (* (x2238 x1968 262144) 262144) (x1157 x1968 262144))))))
(assert (= (and x2055 x2009) x1154))
(assert (x1470 x946))
(assert (x2264 x985))
(assert (x2061 x1807))
(assert (x2264 x1368))
(assert (= (x666 2097152) (x450 2097152)))
(assert (x2264 x1012))
(assert (= x2982 (and x2448 (not x2291))))
(assert (= (and x2040 x2911) x2559))
(assert (x2264 x606))
(assert (= x1145 (and x1639 x123)))
(assert (and (x2060 x1767 32) (x174 x1767 32) (x1580 x1767 32) (=> (< 0 32) (= x1767 (+ (* (x2238 x1767 32) 32) (x1157 x1767 32))))))
(assert (x2951 (ite (> 256 x2851) (x1082 2 x2851) 0)))
(assert (x2159 x727))
(assert (x2264 x1896))
(assert (x1700 (x1823 (x435 (+ 128 x1026)))))
(assert (= x1004 (and (not x2501) x1261)))
(assert (x2629 x1439))
(assert (x2264 x1583))
(assert (= (and (not x1111) x2863) x2958))
(assert (and (x2060 x143 131072) (x174 x143 131072) (x1580 x143 131072) (=> (< 0 131072) (= x143 (+ (* (x2238 x143 131072) 131072) (x1157 x143 131072))))))
(assert (= x2694 (=> (and (= (not x1934) x1503) (= x1994 x1503) (= x1009 x802) (= x1225 x1934) (= (not x858) x199) (= x858 (and x1994 x1009))) x199)))
(assert (= (and x2942 x1778) x1824))
(assert (= (and (not x1193) x1906) x893))
(assert (x2264 x682))
(assert (= (or x2396 x1230) x2861))
(assert (x2264 x2759))
(assert (=> (<= (x2917 (x435 (+ x2850 128))) 10000) (= (x450 (x2917 (x435 (+ x2850 128)))) (x666 (x2917 (x435 (+ 128 x2850)))))))
(assert (x2264 x154))
(assert (x2264 x228))
(assert (x2264 x2063))
(assert (= (x2414 x1523 224) (x2238 x1523 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= (and x1635 x1602) x2150))
(assert (x2159 32768))
(assert (and (x2060 x420 8192) (x174 x420 8192) (x1580 x420 8192) (=> (< 0 8192) (= x420 (+ (* (x2238 x420 8192) 8192) (x1157 x420 8192))))))
(assert (x2680 281474976710655 x1291))
(assert (= x2028 (and (not x1843) x2201)))
(assert (= (x711 (x435 (+ 128 x2495))) (x1049 (x666 (x711 (x435 (+ 128 x2495)))))))
(assert (= x2477 (and x2828 x34)))
(assert (x2264 x89))
(assert (x2264 x2195))
(assert (x2680 4294967295 x674))
(assert (x2159 x495))
(assert (x2264 x2968))
(assert (= (or x861 (and x157 (not x422)) x3001 (and x2448 x2291) (and x526 (not x1422)) (and x24 (not x1177)) x1567 x857 (and (not x2328) x2618) x1159 x2021 (and x673 x995) (and x952 x2706) x699 (and x2333 x2214) x289 (and x1196 x421) x2678 x197 (and (not x21) x555) x1751 (and (not x1457) x2488) x2204 x1144 (and x1276 x1869) x1616 x736 x1688 x2376 (and (not x2303) x661) (and x1973 x1654) x1945 x2506 (and (not x2053) x2296) x2193 x2847 x2665 (and x2596 x803) x2369 x3 (and x901 x1004) x1795 x318 (and x382 x1301) (and (not x2311) x1317) x1296 (and x2501 x1261) x1393 (and x353 x1563) x669 (and x1547 (not x1152)) x1388 x584 (and x2168 x1568) x1757 (and x61 x949) x2795 (and x2288 x2543) (and x1155 (not x1660)) (and x1280 x749) x599 (and (not x1188) x322) x443 (and (not x452) x1924) (and x1815 (not x1627)) x2432 x2150 (and x1251 x977) (and x2546 x2364) x2948 x2090 x1081 x849 (and x627 x997) (and x522 x900) x908 x537 (and (not x1515) x2331) (and x2084 x2191) x126 x1965 x375 x2471 (and x708 x145) (and x706 x710) x605 x984 (and x2350 x2541) x2524 x1334 (and x2221 x695) (and x1454 x2286)) x1156))
(assert (x2540 x1273))
(assert (x2264 x374))
(assert (= 0 (x1235 x280)))
(assert (x2647 x946))
(assert (and (x2060 x53 65536) (x174 x53 65536) (x1580 x53 65536) (=> (< 0 65536) (= x53 (+ (* (x2238 x53 65536) 65536) (x1157 x53 65536))))))
(assert (= (x799 x2059) 0))
(assert (and (x2060 x240 536870912) (x174 x240 536870912) (x1580 x240 536870912) (=> (< 0 536870912) (= x240 (+ (* (x2238 x240 536870912) 536870912) (x1157 x240 536870912))))))
(assert (=> (<= x1030 10000) (= (x450 x1030) (x666 x1030))))
(assert (and (x2060 x53 32768) (x174 x53 32768) (x1580 x53 32768) (=> (< 0 32768) (= x53 (+ (* (x2238 x53 32768) 32768) (x1157 x53 32768))))))
(assert (x1700 x2791))
(assert (= (and x1843 x2201) x2661))
(assert (x2629 x2668))
(assert (= x849 (and (not x740) x2617)))
(assert (x2629 x2743))
(assert (x2264 x608))
(assert (x2264 x870))
(assert (x729 x951))
(assert (x1813 x1273))
(assert (x1797 x1273))
(assert (x2264 x2122))
(assert (x2951 32))
(assert (and (x2060 x1273 1048576) (x174 x1273 1048576) (x1580 x1273 1048576) (=> (< 0 1048576) (= x1273 (+ (* (x2238 x1273 1048576) 1048576) (x1157 x1273 1048576))))))
(assert (= x1727 (and x2672 x2400)))
(assert (= (x1049 (x666 (x2556 864))) (x2556 864)))
(assert (= x2055 (and x2217 x2739)))
(assert (= (=> (= x1497 (not (< 4 x2176))) (and x1497 (=> (= 2 x263) x2075))) x1900))
(assert (=> (>= 10000 x1033) (= (x666 x1033) (x450 x1033))))
(assert (x2264 x2451))
(assert (x2264 x2799))
(assert (and (x2060 x2518 4294967296) (x174 x2518 4294967296) (x1580 x2518 4294967296) (=> (< 0 4294967296) (= x2518 (+ (* (x2238 x2518 4294967296) 4294967296) (x1157 x2518 4294967296))))))
(assert (=> (<= (x711 x2495) 10000) (= (x450 (x711 x2495)) (x666 (x711 x2495)))))
(assert (= x137 (and x1093 x1832)))
(assert (= x1546 (and x1725 x1530)))
(assert (and (x2060 x445 8) (x174 x445 8) (x1580 x445 8) (=> (< 0 8) (= x445 (+ (* (x2238 x445 8) 8) (x1157 x445 8))))))
(assert (and (x2060 x1273 16384) (x174 x1273 16384) (x1580 x1273 16384) (=> (< 0 16384) (= x1273 (+ (* (x2238 x1273 16384) 16384) (x1157 x1273 16384))))))
(assert (x2264 x2354))
(assert (x894 x981))
(assert (x2264 x1222))
(assert (x2951 x1518))
(assert (x2159 x741))
(assert (x2951 x596))
(assert (= x286 (and x2533 x1550)))
(assert (and (x2060 x80 33554432) (x174 x80 33554432) (x1580 x80 33554432) (=> (< 0 33554432) (= x80 (+ (* (x2238 x80 33554432) 33554432) (x1157 x80 33554432))))))
(assert (x2264 x978))
(assert (= (and x67 x1694) x2919))
(assert (x2264 x1014))
(assert (= x915 (and x1463 (not x824))))
(assert (= x1363 (and x1378 x1140)))
(assert (= (x1049 (x666 (x747 (x435 (+ 64 x1059))))) (x747 (x435 (+ x1059 64)))))
(assert (x2264 x1273))
(assert (x2264 x1179))
(assert (x2951 x790))
(assert (x2264 x249))
(assert (x2264 x304))
(assert (x2264 x205))
(assert (x2264 x2405))
(assert (= (x1235 x29) 0))
(assert (x826 x1383))
(assert (x2264 x1668))
(assert (x1700 x870))
(assert (= (and x2667 (not x1369)) x805))
(assert (= 0 (x799 (x435 (+ x1883 160)))))
(assert (x245 x1500))
(assert (=> (>= 10000 (x2556 864)) (= (x450 (x2556 864)) (x666 (x2556 864)))))
(assert (= (and (not x1344) x351) x685))
(assert (x1412 x985))
(assert (x2951 x2848))
(assert (x2951 2147483648))
(assert (x2010 x2595 x2464))
(assert (x226 x946))
(assert (= (and x31 x1910) x1209))
(assert (and (x2060 x1096 134217728) (x174 x1096 134217728) (x1580 x1096 134217728) (=> (< 0 134217728) (= x1096 (+ (* (x2238 x1096 134217728) 134217728) (x1157 x1096 134217728))))))
(assert (x2264 x1311))
(assert (x2264 x1291))
(assert (x2264 x162))
(assert (and (x2060 x946 4194304) (x174 x946 4194304) (x1580 x946 4194304) (=> (< 0 4194304) (= x946 (+ (* (x2238 x946 4194304) 4194304) (x1157 x946 4194304))))))
(assert (x2159 (ite x723 x1955 (x54 2 x1955))))
(assert (x2264 x2500))
(assert (= x2491 (and (not x2286) x1454)))
(assert (x2264 x1833))
(assert (let ((x1379 (ite x2072 x1667 (x54 2 x1667)))) (and (x2060 x1379 2) (x174 x1379 2) (x1580 x1379 2) (=> (< 0 2) (= x1379 (+ (* (x2238 x1379 2) 2) (x1157 x1379 2)))))))
(assert (and (x2060 x1273 262144) (x174 x1273 262144) (x1580 x1273 262144) (=> (< 0 262144) (= x1273 (+ (* (x2238 x1273 262144) 262144) (x1157 x1273 262144))))))
(assert (x2264 x2483))
(assert (= x984 (and x1800 (not x876))))
(assert (= (and x2333 (not x2214)) x1276))
(assert (x2731 x1190 x1768))
(assert (x2264 x2327))
(assert (x2264 x177))
(assert (x2264 x1234))
(assert (x2264 x1989))
(assert (= x696 (and x2304 x691)))
(assert (x2264 x2883))
(assert (x2264 x741))
(assert (x2159 x2148))
(assert (x2264 x2708))
(assert (= (x1049 (x450 63660573315282705801001086741532748704021327057287729713677662699241823960296)) 63660573315282705801001086741532748704021327057287729713677662699241823960296))
(assert (x2264 x1353))
(assert (x1700 (x1258 x2767)))
(assert (x2264 x335))
(assert (= x2689 (and x1206 x2338)))
(assert (and (x2060 x66 512) (x174 x66 512) (x1580 x66 512) (=> (< 0 512) (= x66 (+ (* (x2238 x66 512) 512) (x1157 x66 512))))))
(assert (x2264 x132))
(assert (x2264 x1767))
(assert (x2264 x2704))
(assert (x2264 x790))
(assert (x2629 x981))
(assert (x2264 x1918))
(assert (x2264 x1313))
(assert (x962 x2977))
(assert (x2951 x1096))
(assert (x2264 x2144))
(assert (= (and x2180 x2103) x2920))
(assert (x2264 x1189))
(assert (x2629 x2408))
(assert (and (x2060 x2104 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x174 x2104 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x1580 x2104 21888242871839275222246405745257275088696311157297823662689037894645226208583) (=> (< 0 21888242871839275222246405745257275088696311157297823662689037894645226208583) (= x2104 (+ (* (x2238 x2104 21888242871839275222246405745257275088696311157297823662689037894645226208583) 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x1157 x2104 21888242871839275222246405745257275088696311157297823662689037894645226208583))))))
(assert (x209 x959))
(assert (and (x2060 x1684 281474976710656) (x174 x1684 281474976710656) (x1580 x1684 281474976710656) (=> (< 0 281474976710656) (= x1684 (+ (* (x2238 x1684 281474976710656) 281474976710656) (x1157 x1684 281474976710656))))))
(assert (=> (>= 10000 (x257 x1883)) (= (x450 (x257 x1883)) (x666 (x257 x1883)))))
(assert (x2264 x1867))
(assert (x2264 x548))
(assert (and (x2060 x1273 4294967296) (x174 x1273 4294967296) (x1580 x1273 4294967296) (=> (< 0 4294967296) (= x1273 (+ (* (x2238 x1273 4294967296) 4294967296) (x1157 x1273 4294967296))))))
(assert (x2248 x974))
(assert (x2264 x592))
(assert (x729 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x1700 (x2655 (x435 (+ 64 x2415)))))
(assert (x2264 x69))
(assert (x2264 x906))
(assert (x2054 x1273))
(assert (= (x1235 x2071) 0))
(assert (=> (>= 10000 (x747 (x435 (+ x1059 128)))) (= (x666 (x747 (x435 (+ 128 x1059)))) (x450 (x747 (x435 (+ x1059 128)))))))
(assert (= (x799 (x435 (+ x1883 192))) 0))
(assert (x2264 x373))
(assert (x2159 131072))
(assert (x2264 x1521))
(assert (= 0 (x1235 x2172)))
(assert (= (x450 4150754238950871990496398701790393298955498680186071184456654025675166573995) (x666 4150754238950871990496398701790393298955498680186071184456654025675166573995)))
(assert (x2951 x2049))
(assert (= x86 (or x2348 x1642)))
(assert (= x976 (and (not x343) x1488)))
(assert (x2629 x2049))
(assert (x2951 x578))
(assert (x2264 x1557))
(assert (= 0 (x799 896)))
(assert (= (and x898 x2982) x2276))
(assert (=> (<= (x2917 x2850) 10000) (= (x666 (x2917 x2850)) (x450 (x2917 x2850)))))
(assert (x2416 x946))
(assert (and (x2060 x1273 131072) (x174 x1273 131072) (x1580 x1273 131072) (=> (< 0 131072) (= x1273 (+ (* (x2238 x1273 131072) 131072) (x1157 x1273 131072))))))
(assert (x2951 x240))
(assert (x18 x384))
(assert (and (x2060 x377 16777216) (x174 x377 16777216) (x1580 x377 16777216) (=> (< 0 16777216) (= x377 (+ (* (x2238 x377 16777216) 16777216) (x1157 x377 16777216))))))
(assert (x2264 x1780))
(assert (x2951 x1856))
(assert (x18 (- x1190 x674)))
(assert (x2159 x223))
(assert (x2159 x365))
(assert (and (x2060 x2668 262144) (x174 x2668 262144) (x1580 x2668 262144) (=> (< 0 262144) (= x2668 (+ (* (x2238 x2668 262144) 262144) (x1157 x2668 262144))))))
(assert (= (and x2739 (not x2217)) x761))
(assert (x2159 x1807))
(assert (x894 x1430))
(assert (and (x2060 x888 8192) (x174 x888 8192) (x1580 x888 8192) (=> (< 0 8192) (= x888 (+ (* (x2238 x888 8192) 8192) (x1157 x888 8192))))))
(assert (and (x2060 x790 536870912) (x174 x790 536870912) (x1580 x790 536870912) (=> (< 0 536870912) (= x790 (+ (* (x2238 x790 536870912) 536870912) (x1157 x790 536870912))))))
(assert (x2264 x1071))
(assert (x2264 x2308))
(assert (x2264 x312))
(assert (= (x1823 (x435 (+ x1026 96))) (x1049 (x666 (x1823 (x435 (+ 96 x1026)))))))
(assert (x1516 x1241))
(assert (x1700 (x747 x1059)))
(assert (x2264 x2048))
(assert (x2264 x1190))
(assert (x2264 x1150))
(assert (= x332 (=> (and (= x1953 x1762) (= (x435 (+ x1953 x988)) x1919) (= x1723 (<= x1762 224))) (and (=> (and (= (x435 (+ x988 32)) x961) (= (x435 (+ 32 x992)) x2043) (= x1830 (x668 (- x960 x988))) (= (x2917 x988) x1352) (= (x435 (+ x988 32)) x2850) (= x1105 (x2118 x2952)) (= x960 (x435 (+ x2043 32))) (= (x435 (+ x961 32)) x992) (= x1458 (x668 (- x1830 32))) (= (ite (<= x1762 32) (x581 (x666 (x2115 x988)) 0) (ite (>= 64 x1762) (x2829 (x666 (x2115 x988)) (x666 (x2115 (x435 (+ 32 x988)))) 0) (ite (<= x1762 96) (x2290 (x666 (x2115 x988)) (x666 (x2115 (x435 (+ x988 32)))) (x666 (x2115 (x435 (+ x988 64)))) 0) (ite (<= x1762 128) (x1109 (x666 (x2115 x988)) (x666 (x2115 (x435 (+ 32 x988)))) (x666 (x2115 (x435 (+ 64 x988)))) (x666 (x2115 (x435 (+ x988 96)))) 0) (ite (<= x1762 160) (x1623 (x666 (x2115 x988)) (x666 (x2115 (x435 (+ x988 32)))) (x666 (x2115 (x435 (+ x988 64)))) (x666 (x2115 (x435 (+ x988 96)))) (x666 (x2115 (x435 (+ 128 x988)))) 0) (ite (<= x1762 192) (x935 (x666 (x2115 x988)) (x666 (x2115 (x435 (+ 32 x988)))) (x666 (x2115 (x435 (+ 64 x988)))) (x666 (x2115 (x435 (+ 96 x988)))) (x666 (x2115 (x435 (+ x988 128)))) (x666 (x2115 (x435 (+ x988 160)))) 0) (ite (>= 224 x1762) (x582 (x666 (x2115 x988)) (x666 (x2115 (x435 (+ x988 32)))) (x666 (x2115 (x435 (+ x988 64)))) (x666 (x2115 (x435 (+ x988 96)))) (x666 (x2115 (x435 (+ 128 x988)))) (x666 (x2115 (x435 (+ x988 160)))) (x666 (x2115 (x435 (+ x988 192)))) 0) (x666 x2744)))))))) x564) (= (x2118 x1174) x633) (= x1349 (>= 224 x1352))) (and x1349 (=> (and (= x1197 1) (= (x1157 (x1049 (ite (>= 32 x1352) (x581 (x666 (x2917 x2850)) 0) (ite (>= 64 x1352) (x2829 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) 0) (ite (>= 96 x1352) (x2290 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ x2850 32)))) (x666 (x2917 (x435 (+ x2850 64)))) 0) (ite (<= x1352 128) (x1109 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ x2850 32)))) (x666 (x2917 (x435 (+ x2850 64)))) (x666 (x2917 (x435 (+ x2850 96)))) 0) (ite (<= x1352 160) (x1623 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ x2850 32)))) (x666 (x2917 (x435 (+ 64 x2850)))) (x666 (x2917 (x435 (+ x2850 96)))) (x666 (x2917 (x435 (+ 128 x2850)))) 0) (ite (<= x1352 192) (x935 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) (x666 (x2917 (x435 (+ 64 x2850)))) (x666 (x2917 (x435 (+ x2850 96)))) (x666 (x2917 (x435 (+ x2850 128)))) (x666 (x2917 (x435 (+ 160 x2850)))) 0) (ite (<= x1352 224) (x582 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ x2850 32)))) (x666 (x2917 (x435 (+ x2850 64)))) (x666 (x2917 (x435 (+ 96 x2850)))) (x666 (x2917 (x435 (+ 128 x2850)))) (x666 (x2917 (x435 (+ 160 x2850)))) (x666 (x2917 (x435 (+ 192 x2850)))) 0) (x666 x870))))))))) 21888242871839275222246405745257275088548364400416034343698204186575808495617) x2632) (= x1564 (< 0 x1953)) (= 0 x1229)) (and (=> (and (not x1564) (= 0 x2327)) x2804) (=> (and x1564 (= x2943 (> 32 x1953))) (and (=> (not x2943) x2402) (=> x2943 x1373))))))) x1723))))
(assert (x2264 x2285))
(assert (x2264 x454))
(assert (= x1959 (and x882 x427)))
(assert (x962 x265))
(assert (x1700 (x2917 (x435 (+ 32 x2850)))))
(assert (x2629 65536))
(assert (= 0 (x799 x2495)))
(assert (and (x2060 x2185 1048576) (x174 x2185 1048576) (x1580 x2185 1048576) (=> (< 0 1048576) (= x2185 (+ (* (x2238 x2185 1048576) 1048576) (x1157 x2185 1048576))))))
(assert (x2264 x275))
(assert (= (=> (and (and (= x790 (x2453 4294967295 x128)) (= (ite x1460 x2041 (x54 16777216 x2041)) x853) (= (x2453 67108864 x1573) x2729) (= x260 (ite x1755 x2921 (x54 32768 x2921))) (= (ite (= x1123 0) (ite x1122 x1792 (x54 2 x1792)) (x54 1 (ite x1122 x1792 (x54 2 x1792)))) x2027) (= (x2453 4294967295 x128) x1752) (= (x2453 32768 x2141) x2633) (= (x2453 4294967295 x128) x1096) (= x2553 (= x734 0)) (= x1792 (ite x68 x2336 (x54 4 x2336))) (= (x2453 4294967295 x128) x888) (= (x2453 4294967295 x128) x2185) (= (ite x2659 x2239 (x54 1048576 x2239)) x1241) (= (ite x1853 x1136 (x54 65536 x1136)) x2921) (= x732 (x2453 1073741824 x2154)) (= (= 0 x1043) x2659) (= (= x2932 0) x68) (= x250 (= x1315 0)) (= x2932 (x2453 536870912 x240)) (= (= 0 x2924) x1825) (= (x2453 4294967295 x128) x2465) (= x1914 (x2453 65536 x1110)) (= (= x227 0) x356) (= (= x2729 0) x1691) (= x1971 (= 0 x1640)) (= x2141 (x2453 4294967295 x128)) (= x80 (x2453 4294967295 x128)) (= (= 0 x1876) x574) (= x559 (x2453 4 x2079)) (= (x2453 4294967295 x128) x2848) (= (ite x2571 x1114 (x54 16 x1114)) x1279) (= (= x1228 0) x1569) (= (ite x574 x1268 (x54 67108864 x1268)) x1218) (= (x2453 16 x2381) x147) (= (x2453 32 x1767) x1876) (= (x2453 128 x2465) x428) (= x2924 (x2453 16777216 x80)) (= x122 (x2453 16384 x2374)) (= x446 (x2453 2 x2848)) (= (= x202 0) x1305) (= (x2453 268435456 x790) x2177) (= (ite x689 x897 (x54 268435456 x897)) x1189) (= (x2453 4294967295 x128) x986) (= x2651 (= 0 x122)) (= x244 (= 0 x739)) (= (x2453 4294967295 x128) x1798) (= x1288 (x2453 4294967295 x128)) (= (ite x1013 0 2147483648) x1167) (= x1 (x2453 1024 x2481)) (= x2381 (x2453 4294967295 x128)) (= x1367 (x2453 256 x548)) (= x2658 (ite x813 x1167 (x54 1073741824 x1167))) (= x2763 (= x1034 0)) (= (x2453 4294967295 x128) x2107) (= x1168 (ite x1971 x260 (x54 16384 x260))) (= (x2453 4294967295 x128) x1408) (= x2229 (= x559 0)) (= (x2453 4294967295 x128) x2735) (= (x2453 4294967295 x128) x1886) (= x1640 (x2453 131072 x2735)) (= (x2453 4294967295 x128) x2743) (= (ite x250 x1785 (x54 1024 x1785)) x1852) (= x1122 (= 0 x732)) (= x2964 (x2453 1048576 x1752)) (= x815 (ite x1305 x2664 (x54 4194304 x2664))) (= x1345 (= x1367 0)) (= (x2453 8192 x1047) x75) (= (= 0 x774) x426) (= x774 (x2453 262144 x2152)) (= x1114 (ite x1691 x1982 (x54 32 x1982))) (= x202 (x2453 512 x636)) (= x1228 (x2453 4096 x888)) (= x1785 (ite x2019 x412 (x54 2048 x412))) (= (x2453 4294967295 x128) x240) (= (= 0 x2964) x2019) (= (x2453 4294967295 x128) x2481) (= x1460 (= 0 x428)) (= x2664 (ite x1345 x853 (x54 8388608 x853))) (= x496 (x2453 8 x1255)) (= (ite x426 x1168 (x54 8192 x1168)) x546) (= (x2453 4294967295 x128) x1573) (= (x2453 4294967295 x128) x2079) (= x1982 (ite x2553 x1452 (x54 64 x1452))) (= (x2453 524288 x2185) x739) (= x1034 (x2453 4194304 x1798)) (= x365 (ite x2763 x1852 (x54 512 x1852))) (= (x668 (- 32 x693)) x2073) (= x2858 (x2453 134217728 x1096)) (= x227 (x2453 8388608 x2107)) (= (x2453 1 x852) x1668) (= x1047 (x2453 4294967295 x128)) (= (= x147 0) x287) (= (ite x356 x365 (x54 256 x365)) x1358) (= (x2453 2097152 x1886) x1315) (= (ite x2651 x1997 (x54 131072 x1997)) x1136) (= x1997 (ite x629 x511 (x54 262144 x511))) (= x2239 (ite x1782 x815 (x54 2097152 x815))) (= (x2453 4294967295 x128) x636) (= x2041 (ite x1669 x1218 (x54 33554432 x1218))) (= x548 (x2453 4294967295 x128)) (= (x2453 2048 x1408) x1043) (= (= x1914 0) x1755) (= x1110 (x2453 4294967295 x128)) (= x412 (ite x244 x546 (x54 4096 x546))) (= x1767 (x2453 4294967295 x128)) (= x1268 (ite x287 x1189 (x54 134217728 x1189))) (= (x2453 4294967295 x128) x2152) (= (= 0 x2875) x1669) (= (= 0 x2177) x1558) (= x1123 (x2453 2147483648 x2743)) (= x1782 (= x1 0)) (= x629 (= 0 x75)) (= (x2453 4294967295 x128) x1255) (= x1452 (ite x1825 x1358 (x54 128 x1358))) (= (x2453 64 x986) x2875) (= (x2453 4294967295 x128) x852) (= (x2453 33554432 x1288) x734) (= x2571 (= 0 x2858)) (= x689 (= x496 0)) (= x2154 (x2453 4294967295 x128)) (= (ite x2229 x2658 (x54 536870912 x2658)) x897) (= (x2453 4294967295 x128) x2374) (= x2336 (ite x1558 x1279 (x54 8 x1279))) (= (= 0 x2633) x1853) (= x1013 (= x1668 0)) (= x813 (= 0 x446)) (= (ite x1569 x1241 (x54 524288 x1241)) x511)) (and (= x1028 (ite (< x523 256) 1 0)) (= x415 (ite (not x465) 1 0)) (= (x2238 4294967295 x1587) x523) (= x1587 (x2414 x2027 x2073)) (= x2217 (= 0 x2963)) (= x465 (= 0 x1587)) (= (x2453 x415 x1028) x2963))) (and (=> (not x2217) x1373) (=> (and x2217 (and (= x2009 (< 0 x2397)) (= x951 (x2453 4294967295 x1169)) (= x1169 (x144 (* 256 x1587))))) (and (=> (and x2009 (and (= x578 x1143) (= x1143 (x2238 x951 x2397)))) x1403) (=> (not x2009) x1373))))) x520))
(assert (and (x2060 x2386 4096) (x174 x2386 4096) (x1580 x2386 4096) (=> (< 0 4096) (= x2386 (+ (* (x2238 x2386 4096) 4096) (x1157 x2386 4096))))))
(assert (x2264 x169))
(assert (x2264 x533))
(assert (x1700 (x2979 736)))
(assert (x2264 x2607))
(assert (=> (<= x2563 10000) (= (x450 x2563) (x666 x2563))))
(assert (x2951 21888242871839275222246405745257275088696311157297823662689037894645226208583))
(assert (x2264 x2765))
(assert (= x1246 (and x2957 x589)))
(assert (x1849 x2435))
(assert (x2264 x1528))
(assert (x2264 x45))
(assert (and (x2060 x80 16777216) (x174 x80 16777216) (x1580 x80 16777216) (=> (< 0 16777216) (= x80 (+ (* (x2238 x80 16777216) 16777216) (x1157 x80 16777216))))))
(assert (= (and x2806 x1952) x595))
(assert (x786 x1518))
(assert (x18 32))
(assert (x2264 x951))
(assert (= (and x2976 x2811) x329))
(assert (= 0 (x1235 (x435 (+ x1059 64)))))
(assert (x2264 x890))
(assert (and (x2060 x1273 4) (x174 x1273 4) (x1580 x1273 4) (=> (< 0 4) (= x1273 (+ (* (x2238 x1273 4) 4) (x1157 x1273 4))))))
(assert (= (x799 x380) 0))
(assert (x2951 16))
(assert (x1211 x1483))
(assert (x2264 x499))
(assert (let ((x1379 (ite (< x263 256) (x1082 2 x263) 0))) (and (x2060 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x174 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1580 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1379 (+ (* (x2238 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1157 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(assert (and (x2060 x1518 16384) (x174 x1518 16384) (x1580 x1518 16384) (=> (< 0 16384) (= x1518 (+ (* (x2238 x1518 16384) 16384) (x1157 x1518 16384))))))
(assert (= (x1049 (x666 (x1258 (x435 (+ 160 x2767))))) (x1258 (x435 (+ 160 x2767)))))
(assert (x2264 x1756))
(assert (x2159 x1604))
(assert (x2264 x420))
(assert (x2264 x2152))
(assert (x2951 x1067))
(assert (= (and x1264 (not x2132)) x1646))
(assert (x2264 x1838))
(assert (x2264 x1739))
(assert (= 1461501637330902918203684832716283019655932542975 (x1049 (x450 1461501637330902918203684832716283019655932542975))))
(assert (x2264 x1740))
(assert (x894 x1775))
(assert (x894 x1281))
(assert (x2264 x1416))
(assert (= (and (not x539) x2960) x909))
(assert (x1017 x833))
(assert (= (and x253 x639) x534))
(assert (x2264 x693))
(assert (x2264 x2813))
(assert (x2264 x1929))
(assert (= x1165 (and x283 x196)))
(assert (x2264 x2862))
(assert (x245 x623))
(assert (= x2678 (and (not x1380) x346)))
(assert (x729 x2359))
(assert (=> (>= 10000 (x747 (x435 (+ x1059 192)))) (= (x666 (x747 (x435 (+ x1059 192)))) (x450 (x747 (x435 (+ 192 x1059)))))))
(assert (and (x1600 256 x679) (x2853 256 x679) (x831 256 x679) (and (= (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x679) (- (* 256 x679) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679))) (= (- (* (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (x2427 256 (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* 256 x679) (x2427 256 x679)) (x2434 256 x679) (x795 256 x679)))
(assert (= x193 (and (not x565) x893)))
(assert (x1700 (x2115 (x435 (+ x988 192)))))
(assert (= (x144 (ite (< x263 256) (x1082 2 x263) 0)) (x101 1 x263)))
(assert (and (x2060 x946 256) (x174 x946 256) (x1580 x946 256) (=> (< 0 256) (= x946 (+ (* (x2238 x946 256) 256) (x1157 x946 256))))))
(assert (x2628 x674 x612 x1190 x1768))
(assert (= (and x81 x980) x236))
(assert (= x145 (and x1547 x1152)))
(assert (= 0 (x1235 896)))
(assert (x2264 x19))
(assert (x2375 x548))
(assert (x2159 x2916))
(assert (x2951 x833))
(assert (x2264 x2458))
(assert (x2629 134217728))
(assert (x2264 x1548))
(assert (x2264 x2302))
(assert (=> (<= (x2556 800) 10000) (= (x450 (x2556 800)) (x666 (x2556 800)))))
(assert (x2264 x1713))
(assert (x2264 x2595))
(assert (let ((x1379 (ite (> 256 x912) (x1082 2 x912) 0))) (and (x2060 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x174 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1580 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1379 (+ (* (x2238 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1157 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(assert (= (x666 33151575924830116202563342662843668884515279537950960006535658598482582730581) (x450 33151575924830116202563342662843668884515279537950960006535658598482582730581)))
(assert (and (x2060 x1408 4096) (x174 x1408 4096) (x1580 x1408 4096) (=> (< 0 4096) (= x1408 (+ (* (x2238 x1408 4096) 4096) (x1157 x1408 4096))))))
(assert (= x2639 (and x389 x2943)))
(assert (= x710 (and x997 (not x627))))
(assert (= (x1049 (x450 536870912)) 536870912))
(assert (x2629 x576))
(assert (x2264 x2663))
(assert (=> (<= (x1823 (x435 (+ 64 x1026))) 10000) (= (x666 (x1823 (x435 (+ x1026 64)))) (x450 (x1823 (x435 (+ x1026 64)))))))
(assert (x2264 x1822))
(assert (x2264 x930))
(assert (and (x2060 x1110 65536) (x174 x1110 65536) (x1580 x1110 65536) (=> (< 0 65536) (= x1110 (+ (* (x2238 x1110 65536) 65536) (x1157 x1110 65536))))))
(assert (x2264 x2043))
(assert (x2680 x887 x2175))
(assert (= x2325 (=> (= x969 (= (x2414 x1962 1) 1)) (and (=> (= x2990 1) x1231) x969))))
(assert (x2038 x946))
(assert (= 108844151692519000452708220636741476915984311376032675733692602838339372004332 (x1049 (x450 108844151692519000452708220636741476915984311376032675733692602838339372004332))))
(assert (= x13 (and (not x1857) x11)))
(assert (= x2948 (and x355 (not x1993))))
(assert (x457 x420))
(assert (x2159 x1655))
(assert (=> (<= (x2917 (x435 (+ x2850 32))) 10000) (= (x450 (x2917 (x435 (+ 32 x2850)))) (x666 (x2917 (x435 (+ 32 x2850)))))))
(assert (= (=> (and (= x422 (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2093) (> x1442 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1442 x2093) (= (<= x1442 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2093))))) (= (x668 (- x335 31)) x2093) (= (x225 x2463) x1442)) (and (=> (not x422) x1108) (=> (and x422 (and (= (> x411 18446744073709551615) x2706) (= x2843 (x435 (+ x2136 x1442))) (= x411 (x225 x2843)))) (and (=> x2706 x1108) (=> (and (not x2706) (and (= x2653 (x435 (+ 32 x2843))) (= (or (and (= (<= x2936 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2653)) (> x2653 x2936)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2936) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2653))) x2221) (= x2936 (x668 (- x519 x411))))) (and (=> (and (not x2221) (and (<= 0 x1095) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1095) (= (x2238 x411 32) x1416) (= (= x1095 x1416) x1198))) (and (=> x1198 x2446) (=> (not x1198) x1108))) (=> x2221 x1108))))))) x933))
(assert (x2159 x260))
(assert (x2264 x184))
(assert (x2038 x1273))
(assert (x2264 x885))
(assert (= x584 (and x2967 (not x1835))))
(assert (x2264 x2734))
(assert (x2264 x676))
(assert (x2264 x1208))
(assert (x2264 x2267))
(assert (= x2508 (and x1153 (not x2693))))
(assert (x2264 x2807))
(assert (x2264 x644))
(assert (x2951 4294967296))
(assert (and (x2060 x888 4096) (x174 x888 4096) (x1580 x888 4096) (=> (< 0 4096) (= x888 (+ (* (x2238 x888 4096) 4096) (x1157 x888 4096))))))
(assert (= (x450 1048576) (x666 1048576)))
(assert (x2264 x282))
(assert (= (=> (or x1225 (not x1225)) x2694) x1519))
(assert (x2731 x674 x612))
(assert (x2264 x1898))
(assert (and (x2060 x140 16) (x174 x140 16) (x1580 x140 16) (=> (< 0 16) (= x140 (+ (* (x2238 x140 16) 16) (x1157 x140 16))))))
(assert (x2297 x2916))
(assert (x2264 x1429))
(assert (= x2640 (and x355 x1993)))
(assert (= (and (not x2380) x1204) x360))
(assert (x2264 x1072))
(assert (=> (>= 10000 (x2655 (x435 (+ x2415 192)))) (= (x450 (x2655 (x435 (+ x2415 192)))) (x666 (x2655 (x435 (+ 192 x2415)))))))
(assert (x2264 x2625))
(assert (x2264 x1244))
(assert (x191 x946))
(assert (and (x2060 x2141 32768) (x174 x2141 32768) (x1580 x2141 32768) (=> (< 0 32768) (= x2141 (+ (* (x2238 x2141 32768) 32768) (x1157 x2141 32768))))))
(assert (x2264 x78))
(assert (x2951 x2386))
(assert (x2264 x545))
(assert (x2264 x2015))
(assert (x2264 x240))
(assert (x2264 x242))
(assert (x1531 x2465))
(assert (= (and x1959 (not x2616)) x252))
(assert (= x2333 (and x2191 (not x2084))))
(assert (x2264 x847))
(assert (x2264 x2843))
(assert (and (x2060 x1408 2048) (x174 x1408 2048) (x1580 x1408 2048) (=> (< 0 2048) (= x1408 (+ (* (x2238 x1408 2048) 2048) (x1157 x1408 2048))))))
(assert (x2264 x1742))
(assert (x2264 x735))
(assert (x2264 x1066))
(assert (= (x1049 (x450 17805874995975841540914202342111839520379459829704422454583296818431106115052)) 17805874995975841540914202342111839520379459829704422454583296818431106115052))
(assert (x2264 x2523))
(assert (x2951 512))
(assert (= (x799 (x435 (+ x988 128))) 0))
(assert (= x2494 (and x811 (not x2790))))
(assert (= x1335 (and (not x1514) x360)))
(assert (and (x211 x1603 32) (x2430 x1603 32) (=> (and (> x1603 0) (> 32 0)) (and (<= (* 32 (x2238 x1603 32)) x1603) (> (* (x2238 x1603 32) 32) (- x1603 32)))) (x1972 x1603 32) (= (- x1603 (x2453 31 x1603)) (* (x2238 x1603 32) 32)) (x2736 x1603 32)))
(assert (x2264 x2463))
(assert (x2629 x1272))
(assert (= (x799 (x435 (+ 160 x988))) 0))
(assert (x1849 x200))
(assert (let ((x1379 (ite x723 x1955 (x54 2 x1955)))) (and (x2060 x1379 2) (x174 x1379 2) (x1580 x1379 2) (=> (< 0 2) (= x1379 (+ (* (x2238 x1379 2) 2) (x1157 x1379 2)))))))
(assert (x2264 x2767))
(assert (and (x2060 x2841 4294967296) (x174 x2841 4294967296) (x1580 x2841 4294967296) (=> (< 0 4294967296) (= x2841 (+ (* (x2238 x2841 4294967296) 4294967296) (x1157 x2841 4294967296))))))
(assert (= (x450 43823624232495526908365875064542283096883394343879224506338352425602196996609) (x666 43823624232495526908365875064542283096883394343879224506338352425602196996609)))
(assert (=> (>= 10000 (x1823 x1026)) (= (x450 (x1823 x1026)) (x666 (x1823 x1026)))))
(assert (x2264 x2315))
(assert (x2264 x1308))
(assert (x659 x1963))
(assert (= 0 (x799 (x435 (+ 128 x2850)))))
(assert (and (x2060 x1439 1048576) (x174 x1439 1048576) (x1580 x1439 1048576) (=> (< 0 1048576) (= x1439 (+ (* (x2238 x1439 1048576) 1048576) (x1157 x1439 1048576))))))
(assert (x2054 x946))
(assert (= (x1049 (x666 (x2115 x988))) (x2115 x988)))
(assert (= (or x1431 x2210) x2890))
(assert (x2264 x1466))
(assert (= (x1823 (x435 (+ x1026 32))) (x1049 (x666 (x1823 (x435 (+ x1026 32)))))))
(assert (x729 x1257))
(assert (x2159 x2435))
(assert (x1607 x1096))
(assert (x729 x169))
(assert (x2264 x990))
(assert (x894 x1555))
(assert (x2629 x2481))
(assert (x2629 x2841))
(assert (= x2273 (and x591 x657)))
(assert (= (and x2674 x2955) x594))
(assert (= 0 (x799 (x435 (+ 32 x1883)))))
(assert (x553 x77))
(assert (x2264 x1977))
(assert (x1622 x946))
(assert (and (x2060 x1288 67108864) (x174 x1288 67108864) (x1580 x1288 67108864) (=> (< 0 67108864) (= x1288 (+ (* (x2238 x1288 67108864) 67108864) (x1157 x1288 67108864))))))
(assert (not x1356))
(assert (x2629 1073741824))
(assert (x2264 x1309))
(assert (=> (>= 10000 x1319) (= (x450 x1319) (x666 x1319))))
(assert (x1700 x1033))
(assert (= (x1235 x943) 0))
(assert (= 0 (x1235 (x435 (+ 64 x2415)))))
(assert (x2951 x265))
(assert (x2264 x1656))
(assert (x2264 x2632))
(assert (x2951 x1273))
(assert (= 10857046999023057135944570762232829481370756359578518086990519993285655852781 (x1049 (x450 10857046999023057135944570762232829481370756359578518086990519993285655852781))))
(assert (x2264 x2429))
(assert (x18 (x1082 2 x579)))
(assert (= (or x2572 x865) x879))
(assert (x2264 x1055))
(assert (x2264 x2339))
(assert (= (x799 x2650) 0))
(assert (x2264 x1587))
(assert (x2951 x210))
(assert (and (x2060 x2384 4294967296) (x174 x2384 4294967296) (x1580 x2384 4294967296) (=> (< 0 4294967296) (= x2384 (+ (* (x2238 x2384 4294967296) 4294967296) (x1157 x2384 4294967296))))))
(assert (x2264 x1525))
(assert (x2951 x1765))
(assert (x2264 x2838))
(assert (x2629 x918))
(assert (= 0 (x799 (x435 (+ x988 96)))))
(assert (x2264 x268))
(assert (= x964 (and x862 x2037)))
(assert (x2629 x1583))
(assert (x1570 x1468))
(assert (= x2791 (x1049 (x666 x2791))))
(assert (x2264 x2323))
(assert (x2264 x2466))
(assert (= x1527 (or x1199 x2013)))
(assert (x2264 x654))
(assert (= x120 (and x1783 x12)))
(assert (= (and (not x1950) x137) x289))
(assert (x894 x1903))
(assert (x1470 x636))
(assert (= x2413 (=> (= (= x2318 (x666 x1030)) x2806) (and (=> (not x2806) x1373) (=> (and x2806 (and (= x1532 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x967) (and (< x967 64) (= (<= x967 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x1609 (x1371 384)))) (and (=> (and (= (or (> x967 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x967 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x967)))) x1649) (not x1532)) (and (=> (and (not x1649) (and (= x1212 (= (ite x913 1 0) 0)) (= (or x1295 x2560) x913) (= x2560 (> x133 18446744073709551615)) (= x1295 (> x2523 x133)) (= (x435 (+ 64 x2523)) x133))) (and (=> (and x1212 (and (= x885 (x2118 x1174)) (= true x31))) (and (=> (not x31) x1373) (=> (and (and (= x337 true) (= x2952 (x435 (+ 32 x1174))) (= x87 (x2118 x2952))) x31) (and (=> (not x337) x1373) (=> (and (and (and (= x2987 (= 0 x2174)) (= (x435 (+ 64 x133)) x1216) (= x1274 (x435 (+ x2523 32))) (= x1248 (x435 (+ 32 x133))) (= (x2468 x2523) x2174)) (or (and (= x2987 x303) (not x2987)) (and x2987 (and (= x303 (= 0 x715)) (= (x2468 x1274) x715))))) x337) x2642))))) (=> (not x1212) x1373))) (=> x1649 x1373))) (=> x1532 x1373)))))))
(assert (x2264 x2133))
(assert (x2264 x2044))
(assert (and (x2060 x946 268435456) (x174 x946 268435456) (x1580 x946 268435456) (=> (< 0 268435456) (= x946 (+ (* (x2238 x946 268435456) 268435456) (x1157 x946 268435456))))))
(assert (= (x2414 x756 224) (x2238 x756 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x1987 x796))
(assert (and (x2060 x1110 131072) (x174 x1110 131072) (x1580 x1110 131072) (=> (< 0 131072) (= x1110 (+ (* (x2238 x1110 131072) 131072) (x1157 x1110 131072))))))
(assert (x2264 x1650))
(assert (x2264 x2085))
(assert (= (and (not x1672) x1053) x99))
(assert (x2264 x2257))
(assert (x2264 x35))
(assert (x2264 x2366))
(assert (x2264 x587))
(assert (x2629 x986))
(assert (x2629 x1169))
(assert (x2681 x546))
(assert (x786 x1273))
(assert (x894 x1272))
(assert (x2264 x756))
(assert (x2264 x2459))
(assert (= x1693 (=> (= x2000 (= x782 0)) (and (=> (and (not x2000) (= x2884 (< 0 x782))) (and (=> (and x2884 (and (= (x927 x2493) x1450) (= x2766 (not (= 0 x1450))))) (and (=> (and x2766 (and (= (> x2243 281474976710654) x1206) (= (x2453 281474976710655 x265) x2243) (= (x927 416) x265))) (and (=> (and (and (= x2142 (= x1291 0)) (= (x2453 x2867 x348) x2405) (= (x2238 281474976710655 x1291) x755) (= (x435 (+ x2243 1)) x1291) (= (ite (< x755 32) 1 0) x348) (= x2867 (ite (not x2142) 1 0)) (= (= 0 x2405) x2040)) (not x1206)) (and (=> (and (and (= x2977 (x144 (* x1291 32))) (= x1683 (x2453 281474976710655 x2977)) (= x521 (= x1953 x1683))) x2040) (and (=> (not x521) x1373) (=> x521 x332))) (=> (not x2040) x1373))) (=> x1206 x1373))) (=> (not x2766) x1373))) (=> (not x2884) x1373))) (=> x2000 x290)))))
(assert (x2264 x2071))
(assert (x2264 x1871))
(assert (x2054 x2386))
(assert (= (and (not x1674) x611) x1227))
(assert (x2629 x1949))
(assert (x2629 x1926))
(assert (= (and x386 x976) x1689))
(assert (x2264 x2406))
(assert (x2264 x934))
(assert (= (and x924 (not x303)) x1077))
(assert (= x2090 (and x2426 x1112)))
(assert (= x1568 (and (not x382) x1301)))
(assert (x2264 x798))
(assert (x2264 x2608))
(assert (x2629 x845))
(assert (x2951 x2384))
(assert (and (x2060 x2530 4294967296) (x174 x2530 4294967296) (x1580 x2530 4294967296) (=> (< 0 4294967296) (= x2530 (+ (* (x2238 x2530 4294967296) 4294967296) (x1157 x2530 4294967296))))))
(assert (x2264 x2184))
(assert (and (x2060 x946 524288) (x174 x946 524288) (x1580 x946 524288) (=> (< 0 524288) (= x946 (+ (* (x2238 x946 524288) 524288) (x1157 x946 524288))))))
(assert (= 0 (x1235 x1925)))
(assert (x2264 x48))
(assert (x2264 x77))
(assert (x2264 x1069))
(assert (x2264 x1288))
(assert (and (x2060 x1861 16) (x174 x1861 16) (x1580 x1861 16) (=> (< 0 16) (= x1861 (+ (* (x2238 x1861 16) 16) (x1157 x1861 16))))))
(assert (and (x2060 x946 1073741824) (x174 x946 1073741824) (x1580 x946 1073741824) (=> (< 0 1073741824) (= x946 (+ (* (x2238 x946 1073741824) 1073741824) (x1157 x946 1073741824))))))
(assert (and (x2060 x1273 2097152) (x174 x1273 2097152) (x1580 x1273 2097152) (=> (< 0 2097152) (= x1273 (+ (* (x2238 x1273 2097152) 2097152) (x1157 x1273 2097152))))))
(assert (x2264 x2099))
(assert (= x599 (and (not x295) x413)))
(assert (x2264 x2397))
(assert (x2159 2))
(assert (x2629 x596))
(assert (= (and (not x2884) x1786) x241))
(assert (and (x2060 x2154 2147483648) (x174 x2154 2147483648) (x1580 x2154 2147483648) (=> (< 0 2147483648) (= x2154 (+ (* (x2238 x2154 2147483648) 2147483648) (x1157 x2154 2147483648))))))
(assert (and (x2060 x1281 4294967296) (x174 x1281 4294967296) (x1580 x1281 4294967296) (=> (< 0 4294967296) (= x1281 (+ (* (x2238 x1281 4294967296) 4294967296) (x1157 x1281 4294967296))))))
(assert (x381 x2481))
(assert (x2264 x1766))
(assert (= x325 (and x1260 x175)))
(assert (x18 (- x674 x1190)))
(assert (x2264 x2762))
(assert (let ((x1379 (ite (> 256 x1365) (x1082 2 x1365) 0))) (and (x2060 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x174 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1580 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1379 (+ (* (x2238 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1157 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(assert (=> (<= x2186 10000) (= (x450 x2186) (x666 x2186))))
(assert (= (and x2276 (not x877)) x2204))
(assert (= x1970 (and x2164 x208)))
(assert (= (and x877 x2276) x2927))
(assert (x2159 x1739))
(assert (x2264 x866))
(assert (= (=> (and (and (= x488 (x155 x470)) (= x994 (x2589 x410)) (= (x435 (+ 128 x1129)) x2892) (= x1129 (x435 (+ 64 x2568))) (= (x1327 x1925) x1612) (= x319 (x435 (+ 32 x2568))) (= (x435 (+ 32 x809)) x1925) (= (x435 (+ 32 x2603)) x1413) (= x410 (x435 (+ 32 x470))) (= x1744 (x2420 x809)) (= x1674 (> x1433 0)) (= x1512 (x435 (+ 32 x1129))) (= x2603 (x435 (+ 32 x1512)))) (or (and (= x903 x1433) (not x1674)) (and x1674 (and (= 1 x903) (< x1541 4294967296))))) x709) x41))
(assert (x1622 x1273))
(assert (and (x2060 x1765 8388608) (x174 x1765 8388608) (x1580 x1765 8388608) (=> (< 0 8388608) (= x1765 (+ (* (x2238 x1765 8388608) 8388608) (x1157 x1765 8388608))))))
(assert (x2264 x377))
(assert (x2264 x2850))
(assert (x2951 (x1049 (ite (>= 32 x1051) (x581 (x666 (x1258 x2767)) 0) (ite (<= x1051 64) (x2829 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ 32 x2767)))) 0) (ite (>= 96 x1051) (x2290 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ x2767 32)))) (x666 (x1258 (x435 (+ x2767 64)))) 0) (ite (<= x1051 128) (x1109 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ 32 x2767)))) (x666 (x1258 (x435 (+ 64 x2767)))) (x666 (x1258 (x435 (+ x2767 96)))) 0) (ite (<= x1051 160) (x1623 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ x2767 32)))) (x666 (x1258 (x435 (+ 64 x2767)))) (x666 (x1258 (x435 (+ 96 x2767)))) (x666 (x1258 (x435 (+ 128 x2767)))) 0) (ite (>= 192 x1051) (x935 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ x2767 32)))) (x666 (x1258 (x435 (+ 64 x2767)))) (x666 (x1258 (x435 (+ x2767 96)))) (x666 (x1258 (x435 (+ x2767 128)))) (x666 (x1258 (x435 (+ 160 x2767)))) 0) (ite (>= 224 x1051) (x582 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ 32 x2767)))) (x666 (x1258 (x435 (+ 64 x2767)))) (x666 (x1258 (x435 (+ 96 x2767)))) (x666 (x1258 (x435 (+ 128 x2767)))) (x666 (x1258 (x435 (+ 160 x2767)))) (x666 (x1258 (x435 (+ 192 x2767)))) 0) (x666 x1471)))))))))))
(assert (x1921 x1268))
(assert (x2264 x2041))
(assert (x2264 x2126))
(assert (x2264 x2972))
(assert (x2264 x1174))
(assert (x2264 x2134))
(assert (and (x2060 x2703 256) (x174 x2703 256) (x1580 x2703 256) (=> (< 0 256) (= x2703 (+ (* (x2238 x2703 256) 256) (x1157 x2703 256))))))
(assert (x2159 x1279))
(assert (x2264 x2355))
(assert (x2264 x2083))
(assert (and (x2060 x1273 1073741824) (x174 x1273 1073741824) (x1580 x1273 1073741824) (=> (< 0 1073741824) (= x1273 (+ (* (x2238 x1273 1073741824) 1073741824) (x1157 x1273 1073741824))))))
(assert (x2264 x630))
(assert (x2629 x1115))
(assert (= (=> (and (= x2112 (x435 (+ 32 x2972))) (= (x957 x843) x1318) (= (x957 x2346) x312) (= (x435 (+ 32 x1429)) x2346) (= (x957 512) x843) (= x1321 (>= 224 x2630)) (= x2630 (x2979 704)) (= (x957 544) x1455) (= x2972 (x957 512)) (= x1429 (x957 544)) (= x2515 (x957 x2112)) (= (x957 x1455) x646)) (and (=> (and (= (ite (>= 32 x2630) (x581 (x666 (x2979 736)) 0) (ite (<= x2630 64) (x2829 (x666 (x2979 736)) (x666 (x2979 768)) 0) (ite (>= 96 x2630) (x2290 (x666 (x2979 736)) (x666 (x2979 768)) (x666 (x2979 800)) 0) (ite (<= x2630 128) (x1109 (x666 (x2979 736)) (x666 (x2979 768)) (x666 (x2979 800)) (x666 (x2979 832)) 0) (ite (>= 160 x2630) (x1623 (x666 (x2979 736)) (x666 (x2979 768)) (x666 (x2979 800)) (x666 (x2979 832)) (x666 (x2979 864)) 0) (ite (<= x2630 192) (x935 (x666 (x2979 736)) (x666 (x2979 768)) (x666 (x2979 800)) (x666 (x2979 832)) (x666 (x2979 864)) (x666 (x2979 896)) 0) (ite (>= 224 x2630) (x582 (x666 (x2979 736)) (x666 (x2979 768)) (x666 (x2979 800)) (x666 (x2979 832)) (x666 (x2979 864)) (x666 (x2979 896)) (x666 (x2979 928)) 0) (x666 x330)))))))) x2078) (= x2001 (x2453 4294967295 x845)) (= x2817 (x2453 4294967295 x1775)) (= x2496 (x668 (- 4294967295 x2001))) (= (< x2496 x2817) x1172) (= x845 (x2979 480)) (= x1775 (x2979 448))) (and (=> x1172 x1373) (=> (and (and (= x910 (> x1829 2)) (= (x435 (+ x2001 x2817)) x540) (= (x2453 4294967295 x1775) x1829)) (not x1172)) (and (=> (and (not x910) (= x579 1)) x1577) (=> x910 x895))))) x1321)) x2745))
(assert (= (and x2447 x1895) x170))
(assert (x1933 x2148))
(assert (= x2180 (or x1434 x1970 x1156)))
(assert (x1211 x1189))
(assert (x2264 x1609))
(assert (x2159 8192))
(assert (x2264 x960))
(assert (= (x1235 x812) 0))
(assert (x2264 x2087))
(assert (x1576 x1286))
(assert (= (=> (and (and (= (x2453 4294967295 x1191) x445) (= x2509 (= x1960 0)) (= (x2453 4294967295 x1191) x833) (= x2064 (= x572 0)) (= (x2453 4294967295 x1191) x420) (= (ite x1749 x390 (x54 128 x390)) x1739) (= x2789 (ite x1763 x1760 (x54 4 x1760))) (= x2544 (x2453 8388608 x974)) (= (ite x720 x1641 (x54 32 x1641)) x104) (= x2220 (= x1187 0)) (= x1760 (ite x262 x1158 (x54 8 x1158))) (= x2226 (ite x2776 x727 (x54 1073741824 x727))) (= x2574 (= x1466 0)) (= x1089 (= x2581 0)) (= x1807 (ite x2574 x787 (x54 65536 x787))) (= x377 (x2453 4294967295 x1191)) (= (x2453 256 x1926) x1187) (= x393 (x2453 268435456 x2683)) (= x1763 (= x587 0)) (= (x2453 32768 x53) x1466) (= (x2453 64 x2418) x1966) (= x2836 (ite x2334 x1500 (x54 2097152 x1500))) (= (x2453 4294967295 x1191) x140) (= (x2453 1073741824 x2714) x2581) (= (= 0 x2822) x2003) (= (x2453 2048 x2386) x2822) (= x2386 (x2453 4294967295 x1191)) (= x2157 (x2453 2147483648 x228)) (= (= 0 x2144) x1498) (= (x2453 2 x1468) x2478) (= (x2453 1048576 x1439) x1071) (= x1655 (ite x1062 x684 (x54 512 x684))) (= x598 (= x2460 0)) (= x390 (ite x2566 x1655 (x54 256 x1655))) (= x1161 (x2453 4294967295 x1191)) (= (ite x2922 x2226 (x54 536870912 x2226)) x357) (= (x2453 4294967295 x1191) x2499) (= (= x493 0) x1932) (= (= x1232 0) x151) (= x1397 (x2453 65536 x143)) (= (ite x2220 x200 (x54 8388608 x200)) x1064) (= x2668 (x2453 4294967295 x1191)) (= x596 (x2453 4294967295 x1191)) (= x233 (x2453 1024 x1390)) (= (x2453 4294967295 x1191) x1765) (= x1192 (ite x1036 x730 (x54 2048 x730))) (= x1650 (ite x246 x1094 (x54 524288 x1094))) (= x62 (x2453 4294967295 x1191)) (= (= x2232 0) x2922) (= (x2453 4096 x420) x2293) (= x587 (x2453 536870912 x1076)) (= x730 (ite x215 x74 (x54 4096 x74))) (= x2666 (x2453 8192 x62)) (= x1926 (x2453 4294967295 x1191)) (= x1297 (= x288 0)) (= x1518 (x2453 4294967295 x1191)) (= (= 0 x233) x2334) (= x163 (x2453 4294967295 x1191)) (= x143 (x2453 4294967295 x1191)) (= x572 (x2453 8 x140)) (= (x2453 33554432 x1161) x1960) (= (ite x1297 x1064 (x54 4194304 x1064)) x1500) (= x213 (x2453 16777216 x377)) (= (x2453 4294967295 x1191) x1076) (= x424 (ite x1686 x2235 (x54 16384 x2235))) (= (= 0 x2666) x2526) (= x2351 (= x2660 0)) (= (= x2866 0) x215) (= x74 (ite x598 x424 (x54 8192 x424))) (= (x2453 4294967295 x1191) x1014) (= (ite x2092 x2915 (x54 67108864 x2915)) x1809) (= x458 (x2453 134217728 x596)) (= x1036 (= x1071 0)) (= (x2453 4294967295 x1191) x1968) (= x1787 (= 0 x1966)) (= (x2453 2097152 x833) x2277) (= (ite x1498 0 2147483648) x727) (= (ite x2230 x1807 (x54 32768 x1807)) x2235) (= x1861 (x2453 4294967295 x1191)) (= (x2453 4 x445) x2232) (= (x2453 4294967295 x1191) x918) (= x2905 (x2453 131072 x2668)) (= x1468 (x2453 4294967295 x1191)) (= x246 (= 0 x2293)) (= x2714 (x2453 4294967295 x1191)) (= (x2453 512 x66) x288) (= (ite (= x2157 0) (ite x1089 x2789 (x54 2 x2789)) (x54 1 (ite x1089 x2789 (x54 2 x2789)))) x2359) (= x1062 (= x1372 0)) (= x2283 (ite x1787 x1809 (x54 33554432 x1809))) (= x2683 (x2453 4294967295 x1191)) (= x2866 (x2453 524288 x163)) (= x615 (= x458 0)) (= (= 0 x2196) x720) (= (= x2905 0) x1686) (= (= x1679 0) x2092) (= x1232 (x2453 16 x1861)) (= (= x393 0) x262) (= (ite x2351 x1743 (x54 131072 x1743)) x787) (= x1372 (x2453 4194304 x1765)) (= (x2453 32 x918) x1679) (= (x2453 4294967295 x1191) x53) (= (x2453 16384 x1518) x2660) (= x1158 (ite x615 x104 (x54 16 x104))) (= (x2453 4294967295 x1191) x1439) (= (x668 (- 32 x2205)) x2371) (= (ite x151 x1483 (x54 134217728 x1483)) x2915) (= (x2453 4294967295 x1191) x228) (= x200 (ite x1932 x2283 (x54 16777216 x2283))) (= x2566 (= x2544 0)) (= (ite x2003 x2836 (x54 1048576 x2836)) x1094) (= (= 0 x2478) x2776) (= x2460 (x2453 262144 x1968)) (= (x2453 4294967295 x1191) x974) (= (ite x299 x1192 (x54 1024 x1192)) x684) (= x2418 (x2453 4294967295 x1191)) (= (= x213 0) x1749) (= x1743 (ite x2526 x1650 (x54 262144 x1650))) (= (x2453 4294967295 x1191) x1390) (= x2196 (x2453 67108864 x2499)) (= (x2453 4294967295 x1191) x2703) (= (ite x2509 x1739 (x54 64 x1739)) x1641) (= (= x2277 0) x299) (= (x2453 4294967295 x1191) x66) (= x2144 (x2453 1 x1014)) (= x1483 (ite x2064 x357 (x54 268435456 x357))) (= (x2453 128 x2703) x493) (= (= 0 x1397) x2230)) (and (= (x2453 x1148 x1949) x275) (= x1559 (= 0 x275)) (= (= x1493 0) x2385) (= x1949 (ite (< x1814 256) 1 0)) (= x1814 (x2238 4294967295 x1493)) (= (x2414 x2359 x2371) x1493) (= (ite (not x2385) 1 0) x1148))) (and (=> (not x1559) x1108) (=> (and x1559 (and (= (x144 (* x1493 256)) x1555) (= x1908 (> x2175 0)) (= x887 (x2453 4294967295 x1555)))) (and (=> (and (and (= x955 (x2238 x887 x2175)) (= x1282 x955)) x1908) x165) (=> (not x1908) x1108))))) x1553))
(assert (x2264 x2046))
(assert (x2264 x1134))
(assert (x2264 x271))
(assert (x2264 x207))
(assert (x2264 x1764))
(assert (= 0 (x1235 x592)))
(assert (= x1280 (and x2303 x661)))
(assert (x2264 x2779))
(assert (x2159 x1650))
(assert (x209 x2985))
(assert (= (or x2356 x1931) x1254))
(assert (x2264 x2467))
(assert (= x2151 (and (not x489) x1690)))
(assert (x1531 x2703))
(assert (x1797 x2735))
(assert (= (and (not x1175) x525) x1378))
(assert (x2264 x2371))
(assert (x2159 x2122))
(assert (x2264 x1899))
(assert (x2626 x2352 x2483))
(assert (= x552 (=> (= (= (x2414 x2695 1) 1) x1536) (and x1536 (=> (= x2401 1) x1610)))))
(assert (= x1995 (and (not x308) x909)))
(assert (= (and x1908 x1323) x1794))
(assert (x2629 x658))
(assert (= 107484826361731917731093150060856243723248667544379670577376733939481877207500 (x1049 (x450 107484826361731917731093150060856243723248667544379670577376733939481877207500))))
(assert (= x1030 (x1049 (x666 x1030))))
(assert (x729 x880))
(assert (x2264 x1182))
(assert (x2264 x2664))
(assert (x2264 x221))
(assert (x2264 x2263))
(assert (x2264 x1643))
(assert (=> (>= 10000 (x2556 832)) (= (x666 (x2556 832)) (x450 (x2556 832)))))
(assert (x729 x2722))
(assert (x2264 x2990))
(assert (and (x2060 x1273 2048) (x174 x1273 2048) (x1580 x1273 2048) (=> (< 0 2048) (= x1273 (+ (* (x2238 x1273 2048) 2048) (x1157 x1273 2048))))))
(assert (x2951 x946))
(assert (x2264 x917))
(assert (= (or x236 x907 x1415 x594 x2707 x425 x514 x1075 x792 x2657 x1689 x2299 x2340 x1720) x1511))
(assert (x2264 x653))
(assert (= x2388 (and x2350 (not x2541))))
(assert (= (or x234 x1154) x2037))
(assert (= x2006 (or x2562 x1162)))
(assert (x2629 x946))
(assert (x2264 x1479))
(assert (= x64 (and x794 x1077)))
(assert (x2264 x2312))
(assert (x2264 x2271))
(assert (x2901 x1114))
(assert (x2264 x1671))
(assert (= (and x657 (not x591)) x1945))
(assert (x2264 x1265))
(assert (x2264 x2634))
(assert (x2264 x14))
(assert (x2159 x2490))
(assert (= x298 (and x507 x2158)))
(assert (x2264 x2419))
(assert (= x93 (or x2885 x2818)))
(assert (= (and x1527 (not x922)) x208))
(assert (x2409 x1768 x1190 x674 x612))
(assert (x2264 x2758))
(assert (x2264 x131))
(assert (x2951 x2154))
(assert (= (and (not x905) x1698) x2160))
(assert (and (x211 x2695 2) (x2430 x2695 2) (=> (and (> x2695 0) (> 2 0)) (and (<= (* 2 (x2238 x2695 2)) x2695) (> (* (x2238 x2695 2) 2) (- x2695 2)))) (x1972 x2695 2) (= (- x2695 (x2453 1 x2695)) (* (x2238 x2695 2) 2)) (x2736 x2695 2)))
(assert (x729 x2695))
(assert (x2159 x1192))
(assert (x2264 x2945))
(assert (x2159 4))
(assert (x2264 x2225))
(assert (x2264 x1256))
(assert (x2159 16))
(assert (=> (>= 10000 x330) (= (x666 x330) (x450 x330))))
(assert (x2264 x1968))
(assert (= x1231 (=> (= (= 0 x2990) x1111) (and (=> (and (= x1030 105015941155238675870317744051118741627952855755073633622858957636564748080881) x1111) x780) (=> (and (not x1111) (= (= 1 x2990) x1862)) (and (=> (and x1862 (= x1030 32685727167770504628014968172621197755414673299042699869126213917920315318119)) x780) (=> (and (not x1862) (= x1100 (= 2 x2990))) (and (=> (and (not x1100) (= x2158 (= 3 x2990))) (and (=> (and (= (= x2990 4) x1214) (not x2158)) (and (=> (and (not x1214) (= x824 (= 5 x2990))) (and (=> (and (= x2228 (= 6 x2990)) (not x824)) (and (=> (and (= 84684860692432345508815850111325460890268974937005065116925575048889747129104 x1030) x2228) x780) (=> (and (= (= x2990 7) x2768) (not x2228)) (and (=> (and x2768 (= 108844151692519000452708220636741476915984311376032675733692602838339372004332 x1030)) x780) (=> (and (not x2768) (= x2701 (= x2990 8))) (and (=> (and (not x2701) (= x539 (= x2990 9))) (and (=> (and (not x539) (= x308 (= 10 x2990))) (and (=> (and x308 (= x1030 14420127946689298182407702599477844824481568136069666058437024779945048596988)) x780) (=> (and (= x2390 (= 11 x2990)) (not x308)) (and (=> (and (not x2390) (= (= 12 x2990) x1682)) (and (=> (and (= 107484826361731917731093150060856243723248667544379670577376733939481877207500 x1030) x1682) x780) (=> (and (= x832 (= x2990 13)) (not x1682)) (and (=> (not x832) x1373) (=> (and x832 (= x1030 63660573315282705801001086741532748704021327057287729713677662699241823960296)) x780))))) (=> (and x2390 (= 43823624232495526908365875064542283096883394343879224506338352425602196996609 x1030)) x780))))) (=> (and (= x1030 19065496825945555802944500459784659360370071723095918844459983366851717029121) x539) x780))) (=> (and (= 1605692210171759198593486134459926266631754590294699023644268857716152816374 x1030) x2701) x780))))))) (=> (and x824 (= x1030 28638458499813953387342862576031799503806270899767427533215561966834731185108)) x780))) (=> (and (= x1030 114753704370624632363032878036054255364325328913606075139752535216297399631138) x1214) x780))) (=> (and (= 33151575924830116202563342662843668884515279537950960006535658598482582730581 x1030) x2158) x780))) (=> (and (= x1030 4150754238950871990496398701790393298955498680186071184456654025675166573995) x1100) x780)))))))))
(assert (x2264 x1104))
(assert (x2264 x2324))
(assert (x2264 x1136))
(assert (and (x211 x1149 26959946667150639794667015087019630673637144422540572481103610249216) (x2430 x1149 26959946667150639794667015087019630673637144422540572481103610249216) (=> (and (> x1149 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 0)) (and (<= (* 26959946667150639794667015087019630673637144422540572481103610249216 (x2238 x1149 26959946667150639794667015087019630673637144422540572481103610249216)) x1149) (> (* (x2238 x1149 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) (- x1149 26959946667150639794667015087019630673637144422540572481103610249216)))) (x1972 x1149 26959946667150639794667015087019630673637144422540572481103610249216) (= (- x1149 (x2453 26959946667150639794667015087019630673637144422540572481103610249215 x1149)) (* (x2238 x1149 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)) (x2736 x1149 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= x3001 (and x314 (not x350))))
(assert (x2159 x623))
(assert (= x589 (and x2155 (not x432))))
(assert (= (x666 84684860692432345508815850111325460890268974937005065116925575048889747129104) (x450 84684860692432345508815850111325460890268974937005065116925575048889747129104)))
(assert (x2264 x2479))
(assert (= 0 (x1235 (x435 (+ 160 x1026)))))
(assert (= x691 (and (not x12) x1783)))
(assert (= x1952 (or x1399 x638)))
(assert (x2264 x2519))
(assert (= (x747 (x435 (+ 192 x1059))) (x1049 (x666 (x747 (x435 (+ 192 x1059)))))))
(assert (x729 x2175))
(assert (x2264 x1493))
(assert (x2264 x2374))
(assert (x2264 x1129))
(assert (= x1120 (and (not x2996) x2903)))
(assert (and (x2060 x1047 16384) (x174 x1047 16384) (x1580 x1047 16384) (=> (< 0 16384) (= x1047 (+ (* (x2238 x1047 16384) 16384) (x1157 x1047 16384))))))
(assert (= (x711 (x435 (+ 192 x2495))) (x1049 (x666 (x711 (x435 (+ 192 x2495)))))))
(assert (x2264 x65))
(assert (x2264 x2370))
(assert (x2264 x72))
(assert (x2264 x544))
(assert (= (x799 x1977) 0))
(assert (x2159 1073741824))
(assert (= 0 (x1235 x359)))
(assert (= (x666 107484826361731917731093150060856243723248667544379670577376733939481877207500) (x450 107484826361731917731093150060856243723248667544379670577376733939481877207500)))
(assert (x2264 x1803))
(assert (x2264 x2798))
(assert (x2264 x738))
(assert (x2264 x2650))
(assert (x2264 x479))
(assert (x2264 x390))
(assert (x2264 x1435))
(assert (= (and x2702 x407) x1264))
(assert (x18 (- x1768 x612)))
(assert (x1987 x365))
(assert (x2264 x967))
(assert (x2264 x2555))
(assert (=> (>= 10000 (x2115 (x435 (+ x988 160)))) (= (x450 (x2115 (x435 (+ 160 x988)))) (x666 (x2115 (x435 (+ x988 160)))))))
(assert (x2264 x609))
(assert (= (=> (and (= x1704 (x435 (+ x1637 32))) (= x1086 (>= 224 x1894)) (= (x2254 x1844) x48) (= x2793 (x2254 512)) (= (x2556 704) x1894) (= x2172 (x2254 544)) (= (x2254 x492) x2539) (= (x2254 544) x1637) (= x1844 (x435 (+ 32 x2793))) (= (x2254 x2172) x1311) (= x613 (x2254 x1704)) (= x492 (x2254 512))) (and (=> (and (= x449 (x2453 4294967295 x210)) (= (x2556 448) x210) (= x2623 (x668 (- 4294967295 x883))) (= x1112 (> x449 x2623)) (= (x2453 4294967295 x2625) x883) (= x2625 (x2556 480)) (= (ite (>= 32 x1894) (x581 (x666 (x2556 736)) 0) (ite (<= x1894 64) (x2829 (x666 (x2556 736)) (x666 (x2556 768)) 0) (ite (<= x1894 96) (x2290 (x666 (x2556 736)) (x666 (x2556 768)) (x666 (x2556 800)) 0) (ite (>= 128 x1894) (x1109 (x666 (x2556 736)) (x666 (x2556 768)) (x666 (x2556 800)) (x666 (x2556 832)) 0) (ite (<= x1894 160) (x1623 (x666 (x2556 736)) (x666 (x2556 768)) (x666 (x2556 800)) (x666 (x2556 832)) (x666 (x2556 864)) 0) (ite (<= x1894 192) (x935 (x666 (x2556 736)) (x666 (x2556 768)) (x666 (x2556 800)) (x666 (x2556 832)) (x666 (x2556 864)) (x666 (x2556 896)) 0) (ite (>= 224 x1894) (x582 (x666 (x2556 736)) (x666 (x2556 768)) (x666 (x2556 800)) (x666 (x2556 832)) (x666 (x2556 864)) (x666 (x2556 896)) (x666 (x2556 928)) 0) (x666 x2563)))))))) x201)) (and (=> (and (and (= (> x989 2) x2590) (= x989 (x2453 4294967295 x210)) (= (x435 (+ x883 x449)) x2518)) (not x1112)) (and (=> (and (= x121 1) (not x2590)) x1951) (=> x2590 x2321))) (=> x1112 x1108))) x1086)) x2446))
(assert (x2264 x2442))
(assert (= (and (not x2304) x691) x1073))
(assert (x1271 x1667))
(assert (x2264 x2926))
(assert (= (and (not x1198) x1777) x537))
(assert (x2264 x2881))
(assert (x18 1))
(assert (= x2524 (and x1446 x614)))
(assert (= x1567 (and x2812 x1223)))
(assert (= (and x1510 x2797) x2710))
(assert (x1001 x1809))
(assert (x2901 x104))
(assert (x2264 x1487))
(assert (x2264 x1205))
(assert (x2629 x2769))
(assert (x2159 x1136))
(assert (x2264 x2633))
(assert (= x1606 (and x1682 x2262)))
(assert (= (x1049 (x666 x2744)) x2744))
(assert (x2159 x1955))
(assert (and (x2060 x636 1024) (x174 x636 1024) (x1580 x636 1024) (=> (< 0 1024) (= x636 (+ (* (x2238 x636 1024) 1024) (x1157 x636 1024))))))
(assert (x2629 x1968))
(assert (x2264 x2239))
(assert (= (and (not x434) x1562) x1476))
(assert (= (x666 4051901473739185471504766068400292374549287637553596337727654132125147894034) (x450 4051901473739185471504766068400292374549287637553596337727654132125147894034)))
(assert (= (and (not x2447) x1895) x2760))
(assert (x1001 x1789))
(assert (and (x211 x1962 2) (x2430 x1962 2) (=> (and (> x1962 0) (> 2 0)) (and (<= (* 2 (x2238 x1962 2)) x1962) (> (* (x2238 x1962 2) 2) (- x1962 2)))) (x1972 x1962 2) (= (- x1962 (x2453 1 x1962)) (* (x2238 x1962 2) 2)) (x2736 x1962 2)))
(assert (x2264 x1418))
(assert (and (x2060 x2152 524288) (x174 x2152 524288) (x1580 x2152 524288) (=> (< 0 524288) (= x2152 (+ (* (x2238 x2152 524288) 524288) (x1157 x2152 524288))))))
(assert (x2264 x1217))
(assert (x2264 x315))
(assert (and (x1600 32 x1291) (x2853 32 x1291) (x831 32 x1291) (and (= (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1291) (- (* 32 x1291) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1291))) (= (- (* (- x1291 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1291 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1291 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x1291 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x2427 32 (- x1291 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* 32 x1291) (x2427 32 x1291)) (x2434 32 x1291) (x795 32 x1291)))
(assert (= (x1235 x2097) 0))
(assert (x2264 x2558))
(assert (x1271 x2789))
(assert (x2264 x2502))
(assert (= x1347 (=> (and (= x2062 (not (< x2798 x2463))) (= (x435 (+ 32 x476)) x2798)) (and x933 x2062))))
(assert (and (x2060 x1273 16) (x174 x1273 16) (x1580 x1273 16) (=> (< 0 16) (= x1273 (+ (* (x2238 x1273 16) 16) (x1157 x1273 16))))))
(assert (x2159 x1867))
(assert (x1700 (x1823 (x435 (+ x1026 96)))))
(assert (x2264 x2536))
(assert (and (x2060 x918 64) (x174 x918 64) (x1580 x918 64) (=> (< 0 64) (= x918 (+ (* (x2238 x918 64) 64) (x1157 x918 64))))))
(assert (and (x2060 x1272 4294967296) (x174 x1272 4294967296) (x1580 x1272 4294967296) (=> (< 0 4294967296) (= x1272 (+ (* (x2238 x1272 4294967296) 4294967296) (x1157 x1272 4294967296))))))
(assert (x2264 x2970))
(assert (= (x1258 (x435 (+ 96 x2767))) (x1049 (x666 (x1258 (x435 (+ 96 x2767)))))))
(assert (= (x450 1461501637330902918203684832716283019655932542975) (x666 1461501637330902918203684832716283019655932542975)))
(assert (x2264 x2714))
(assert (= x1033 (x1049 (x666 x1033))))
(assert (= (x1235 x2767) 0))
(assert (x2264 x2232))
(assert (= x547 (and x2604 x2662)))
(assert (= 0 (x799 x2121)))
(assert (x2264 x2848))
(assert (= (and x429 x467) x555))
(assert (x1987 x1655))
(assert (= (x101 1 x2851) (x144 (ite (< x2851 256) (x1082 2 x2851) 0))))
(assert (= (and x218 x2485) x997))
(assert (x2297 x1168))
(assert (and (x2060 x2714 1073741824) (x174 x2714 1073741824) (x1580 x2714 1073741824) (=> (< 0 1073741824) (= x2714 (+ (* (x2238 x2714 1073741824) 1073741824) (x1157 x2714 1073741824))))))
(assert (x2264 x10))
(assert (x2289 x1273))
(assert (and (x2060 x1273 512) (x174 x1273 512) (x1580 x1273 512) (=> (< 0 512) (= x1273 (+ (* (x2238 x1273 512) 512) (x1157 x1273 512))))))
(assert (x2951 x2499))
(assert (= x2684 (and x2790 x811)))
(assert (x2264 x757))
(assert (let ((x399 (x1082 2 x579))) (and (x1600 1 x399) (x2853 1 x399) (x831 1 x399) (and (= (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935) x399) (- (* 1 x399) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x399))) (= (- (* (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935) (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (x2427 1 (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* 1 x399) (x2427 1 x399)) (x2434 1 x399) (x795 1 x399))))
(assert (x2951 x1573))
(assert (= x2511 (and (not x1564) x92)))
(assert (x2264 x2036))
(assert (x2951 x377))
(assert (x2264 x320))
(assert (x2159 x2195))
(assert (x2264 x2544))
(assert (x2629 x833))
(assert (= x1562 (and x2484 (not x1484))))
(assert (x2951 x636))
(assert (x2264 x2170))
(assert (and (x211 x880 32) (x2430 x880 32) (=> (and (> x880 0) (> 32 0)) (and (<= (* 32 (x2238 x880 32)) x880) (> (* (x2238 x880 32) 32) (- x880 32)))) (x1972 x880 32) (= (- x880 (x2453 31 x880)) (* (x2238 x880 32) 32)) (x2736 x880 32)))
(assert (x2264 x2841))
(assert (x1607 x1273))
(assert (x2629 x2384))
(assert (x729 x1291))
(assert (x2264 x1785))
(assert (x2264 x469))
(assert (and (x2060 x1838 4294967296) (x174 x1838 4294967296) (x1580 x1838 4294967296) (=> (< 0 4294967296) (= x1838 (+ (* (x2238 x1838 4294967296) 4294967296) (x1157 x1838 4294967296))))))
(assert (x2264 x912))
(assert (= (and x1614 (not x1943)) x2562))
(assert (x2629 x140))
(assert (x2264 x2031))
(assert (x2264 x2067))
(assert (= (x799 928) 0))
(assert (and (x2060 x596 134217728) (x174 x596 134217728) (x1580 x596 134217728) (=> (< 0 134217728) (= x596 (+ (* (x2238 x596 134217728) 134217728) (x1157 x596 134217728))))))
(assert (and (x2060 x833 2097152) (x174 x833 2097152) (x1580 x833 2097152) (=> (< 0 2097152) (= x833 (+ (* (x2238 x833 2097152) 2097152) (x1157 x833 2097152))))))
(assert (= (and x2480 x484) x1399))
(assert (x2629 x2152))
(assert (x2159 268435456))
(assert (x2264 x2935))
(assert (x2264 x306))
(assert (and (x2060 x946 128) (x174 x946 128) (x1580 x946 128) (=> (< 0 128) (= x946 (+ (* (x2238 x946 128) 128) (x1157 x946 128))))))
(assert (= (x144 (ite (< x1365 256) (x1082 2 x1365) 0)) (x101 1 x1365)))
(assert (x2264 x495))
(assert (= (and x1077 (not x794)) x113))
(assert (= (and (not x804) x1566) x16))
(assert (x729 x40))
(assert (x2264 x2730))
(assert (x2264 x1534))
(assert (and (x2060 x2107 8388608) (x174 x2107 8388608) (x1580 x2107 8388608) (=> (< 0 8388608) (= x2107 (+ (* (x2238 x2107 8388608) 8388608) (x1157 x2107 8388608))))))
(assert (= x895 (=> (= x1802 (not (> x1829 4))) (and (=> (= 2 x579) x1577) x1802))))
(assert (x2264 x511))
(assert (x2264 x2854))
(assert (and (x2060 x2418 64) (x174 x2418 64) (x1580 x2418 64) (=> (< 0 64) (= x2418 (+ (* (x2238 x2418 64) 64) (x1157 x2418 64))))))
(assert (x2264 x1667))
(assert (= (x666 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x450 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x2629 x1518))
(assert (x2629 32768))
(assert (and (x2060 x1573 67108864) (x174 x1573 67108864) (x1580 x1573 67108864) (=> (< 0 67108864) (= x1573 (+ (* (x2238 x1573 67108864) 67108864) (x1157 x1573 67108864))))))
(assert (x18 x1768))
(assert (x2264 x1744))
(assert (x2264 x172))
(assert (= 1073741824 (x1049 (x450 1073741824))))
(assert (x2264 x1745))
(assert (x2264 x1911))
(assert (x2629 8192))
(assert (x2264 x1465))
(assert (x1700 (x2115 (x435 (+ x988 32)))))
(assert (x2264 x1604))
(assert (x2951 x845))
(assert (x2629 536870912))
(assert (and (x1600 32 x1257) (x2853 32 x1257) (x831 32 x1257) (and (= (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1257) (- (* 32 x1257) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1257))) (= (- (* (- x1257 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1257 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1257 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x1257 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x2427 32 (- x1257 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* 32 x1257) (x2427 32 x1257)) (x2434 32 x1257) (x795 32 x1257)))
(assert (and (x2060 x892 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x174 x892 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x1580 x892 21888242871839275222246405745257275088696311157297823662689037894645226208583) (=> (< 0 21888242871839275222246405745257275088696311157297823662689037894645226208583) (= x892 (+ (* (x2238 x892 21888242871839275222246405745257275088696311157297823662689037894645226208583) 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x1157 x892 21888242871839275222246405745257275088696311157297823662689037894645226208583))))))
(assert (x894 x2518))
(assert (= (x1049 (x666 (x2917 x2850))) (x2917 x2850)))
(assert (x2264 x114))
(assert (= x704 (and (not x2585) x1476)))
(assert (x2264 x2208))
(assert (x2264 x2980))
(assert (= x1323 (and x1559 x2503)))
(assert (x2159 1))
(assert (x2520 x2490))
(assert (= (and (not x2181) x2965) x857))
(assert (x2264 x1051))
(assert (= x164 (and (not x2766) x2322)))
(assert (x2264 x2916))
(assert (= (and x2617 x740) x1426))
(assert (and (x2060 x946 512) (x174 x946 512) (x1580 x946 512) (=> (< 0 512) (= x946 (+ (* (x2238 x946 512) 512) (x1157 x946 512))))))
(assert (= (x711 (x435 (+ x2495 160))) (x1049 (x666 (x711 (x435 (+ x2495 160)))))))
(assert (x2264 x1578))
(assert (x18 256))
(assert (= (and (not x105) x1907) x2533))
(assert (x2264 x2337))
(assert (x2264 x80))
(assert (x894 x210))
(assert (= (and x526 x1422) x2488))
(assert (= x340 (and x1533 x2590)))
(assert (x463 x454))
(assert (= (=> (and (= x1060 (x435 (+ 32 x2166))) (= x807 (not (< x1060 x2319)))) (and x807 x2138)) x459))
(assert (x2264 x554))
(assert (x2264 x827))
(assert (x2264 x2593))
(assert (x2264 x1303))
(assert (= (and x565 x893) x1720))
(assert (= (x450 268435456) (x666 268435456)))
(assert (= x1144 (and x1093 (not x1832))))
(assert (x894 x742))
(assert (x2264 x2032))
(assert (x2264 x90))
(assert (=> (>= 10000 x1658) (= (x450 x1658) (x666 x1658))))
(assert (x2264 x1585))
(assert (and (x1600 32 x950) (x2853 32 x950) (x831 32 x950) (and (= (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x950) (- (* 32 x950) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x950))) (= (- (* (- x950 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x950 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x950 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x950 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x2427 32 (- x950 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* 32 x950) (x2427 32 x950)) (x2434 32 x950) (x795 32 x950)))
(assert (x2264 x1861))
(assert (x2264 x328))
(assert (= (=> (and (and (= x2525 (x435 (+ 64 x2456))) (= (x435 (+ x119 32)) x943) (= x1124 (x435 (+ x2525 32))) (= (x2280 x943) x1024) (= x1525 (x435 (+ x2525 96))) (= (x620 x119) x131) (= x1234 (x435 (+ 32 x1124))) (= x364 (< 0 x1715)) (= (x435 (+ 32 x2456)) x97)) (or (and (and (> 4294967296 x366) (= 1 x1200)) x364) (and (= x1715 x1200) (not x364)))) x527) x2749))
(assert (= (and x1459 (not x229)) x1316))
(assert (x1570 x1273))
(assert (x2264 x1774))
(assert (x2264 x2417))
(assert (= (x666 536870912) (x450 536870912)))
(assert (x2264 x2512))
(assert (= x2808 (=> (= x2103 true) x1509)))
(assert (x2264 x2403))
(assert (= 0 (x799 (x435 (+ x2495 128)))))
(assert (and (x2060 x1439 2097152) (x174 x1439 2097152) (x1580 x1439 2097152) (=> (< 0 2097152) (= x1439 (+ (* (x2238 x1439 2097152) 2097152) (x1157 x1439 2097152))))))
(assert (x2159 x2985))
(assert (x2264 x2027))
(assert (x2264 x1390))
(assert (= (=> (= x532 (= x397 0)) (and (=> (and (not x532) (= x229 (> x397 0))) (and (=> (not x229) x1373) (=> (and (and (and (= x440 (x435 (+ x2417 64))) (= (x543 x2274) x2779) (= x7 (x2594 x1128)) (= x2775 (x925 x409)) (= x2046 (x435 (+ x440 32))) (= (< 0 x2250) x2407) (= (x2284 x960) x1338) (= (x435 (+ 32 x1128)) x2274) (= x502 (x435 (+ x2417 32))) (= x2197 (x435 (+ x1598 32))) (= (x435 (+ x440 128)) x207) (= (x435 (+ 32 x2046)) x1598)) (or (and (not x2407) (= x2479 x2250)) (and x2407 (and (< x2422 4294967296) (= x2479 1))))) x229) x2131))) (=> x532 x290))) x1879))
(assert (and (x2060 x1273 8388608) (x174 x1273 8388608) (x1580 x1273 8388608) (=> (< 0 8388608) (= x1273 (+ (* (x2238 x1273 8388608) 8388608) (x1157 x1273 8388608))))))
(assert (x2264 x853))
(assert (x2264 x1084))
(assert (x2264 x1229))
(assert (= (or x577 x875) x2863))
(assert (x1700 (x2655 (x435 (+ x2415 160)))))
(assert (= (and x604 x1827) x1635))
(assert (x2264 x2962))
(assert (x2264 x628))
(assert (= (and x539 x2960) x2614))
(assert (= (or x2173 x99) x1690))
(assert (x729 x654))
(assert (x2492 x1192))
(assert (= (and (not x2040) x2911) x2198))
(assert (x2264 x330))
(assert (and (x2060 x578 4294967296) (x174 x578 4294967296) (x1580 x578 4294967296) (=> (< 0 4294967296) (= x578 (+ (* (x2238 x578 4294967296) 4294967296) (x1157 x578 4294967296))))))
(assert (x2264 x523))
(assert (x2159 x828))
(assert (x2264 x1249))
(assert (= x2399 (and (not x1183) x2094)))
(assert (x2264 x535))
(assert (and (x2060 x1273 268435456) (x174 x1273 268435456) (x1580 x1273 268435456) (=> (< 0 268435456) (= x1273 (+ (* (x2238 x1273 268435456) 268435456) (x1157 x1273 268435456))))))
(assert (= (x666 19065496825945555802944500459784659360370071723095918844459983366851717029121) (x450 19065496825945555802944500459784659360370071723095918844459983366851717029121)))
(assert (and (x2060 x420 4096) (x174 x420 4096) (x1580 x420 4096) (=> (< 0 4096) (= x420 (+ (* (x2238 x420 4096) 4096) (x1157 x420 4096))))))
(assert (x2297 x1867))
(assert (and (x2060 x2081 2) (x174 x2081 2) (x1580 x2081 2) (=> (< 0 2) (= x2081 (+ (* (x2238 x2081 2) 2) (x1157 x2081 2))))))
(assert (x2264 x2910))
(assert (= (and x1440 x1677) x2278))
(assert (x1516 x1094))
(assert (= (x1258 (x435 (+ x2767 32))) (x1049 (x666 (x1258 (x435 (+ x2767 32)))))))
(assert (x2264 x662))
(assert (= x797 (or x2511 x442)))
(assert (=> (<= (x2979 736) 10000) (= (x450 (x2979 736)) (x666 (x2979 736)))))
(assert (x1700 (x1823 (x435 (+ x1026 160)))))
(assert (= x1594 (and x924 x303)))
(assert (x1700 (x711 (x435 (+ 96 x2495)))))
(assert (x894 x2384))
(assert (x2264 x274))
(assert (x2409 x1190 x1768 x674 x612))
(assert (= (=> (and (= x437 (>= 224 x1593)) (= (x435 (+ x405 32)) x1742) (= x1593 (x257 x1048)) (= x1125 (x668 (- x416 x1048))) (= (x435 (+ 32 x1048)) x1883) (= (x435 (+ 32 x1048)) x405) (= x1019 (x668 (- x1125 32))) (= x416 (x435 (+ 32 x1742)))) (and x437 (=> (and (= (ite (>= 32 x1593) (x581 (x666 (x257 x1883)) 0) (ite (<= x1593 64) (x2829 (x666 (x257 x1883)) (x666 (x257 (x435 (+ x1883 32)))) 0) (ite (>= 96 x1593) (x2290 (x666 (x257 x1883)) (x666 (x257 (x435 (+ 32 x1883)))) (x666 (x257 (x435 (+ x1883 64)))) 0) (ite (<= x1593 128) (x1109 (x666 (x257 x1883)) (x666 (x257 (x435 (+ 32 x1883)))) (x666 (x257 (x435 (+ 64 x1883)))) (x666 (x257 (x435 (+ 96 x1883)))) 0) (ite (>= 160 x1593) (x1623 (x666 (x257 x1883)) (x666 (x257 (x435 (+ x1883 32)))) (x666 (x257 (x435 (+ 64 x1883)))) (x666 (x257 (x435 (+ x1883 96)))) (x666 (x257 (x435 (+ x1883 128)))) 0) (ite (<= x1593 192) (x935 (x666 (x257 x1883)) (x666 (x257 (x435 (+ 32 x1883)))) (x666 (x257 (x435 (+ 64 x1883)))) (x666 (x257 (x435 (+ 96 x1883)))) (x666 (x257 (x435 (+ 128 x1883)))) (x666 (x257 (x435 (+ x1883 160)))) 0) (ite (<= x1593 224) (x582 (x666 (x257 x1883)) (x666 (x257 (x435 (+ x1883 32)))) (x666 (x257 (x435 (+ x1883 64)))) (x666 (x257 (x435 (+ x1883 96)))) (x666 (x257 (x435 (+ x1883 128)))) (x666 (x257 (x435 (+ 160 x1883)))) (x666 (x257 (x435 (+ 192 x1883)))) 0) (x666 x1736)))))))) x1840) (= x416 x274)) x2532))) x112))
(assert (x2264 x2964))
(assert (and (x2060 x2465 256) (x174 x2465 256) (x1580 x2465 256) (=> (< 0 256) (= x2465 (+ (* (x2238 x2465 256) 256) (x1157 x2465 256))))))
(assert (x2264 x727))
(assert (x2264 x607))
(assert (x1700 (x1258 (x435 (+ x2767 64)))))
(assert (= (and x1369 x2667) x1719))
(assert (x2951 (ite x723 x1955 (x54 2 x1955))))
(assert (x2680 x2593 (x1082 2 x2537)))
(assert (x1813 x946))
(assert (x2264 x2531))
(assert (x2629 x2185))
(assert (x2264 x2065))
(assert (x2264 x504))
(assert (x1061 x2185))
(assert (x159 (ite x723 x1955 (x54 2 x1955))))
(assert (x2264 x2465))
(assert (x2159 x1833))
(assert (= (x2556 736) (x1049 (x666 (x2556 736)))))
(assert (x2731 x1768 (- x1190 x612)))
(assert (= (x666 262144) (x450 262144)))
(assert (= (x450 65536) (x666 65536)))
(assert (x2629 x1273))
(assert (x2264 x409))
(assert (x2629 x2518))
(assert (= x2288 (and x2687 x1608)))
(assert (and (x2060 x2499 134217728) (x174 x2499 134217728) (x1580 x2499 134217728) (=> (< 0 134217728) (= x2499 (+ (* (x2238 x2499 134217728) 134217728) (x1157 x2499 134217728))))))
(assert (x1700 (x2917 (x435 (+ x2850 96)))))
(assert (x2264 x2386))
(assert (x2951 x2014))
(assert (= (and x2912 x785) x2604))
(assert (x729 2))
(assert (x2264 x2014))
(assert (and (x2060 x946 64) (x174 x946 64) (x1580 x946 64) (=> (< 0 64) (= x946 (+ (* (x2238 x946 64) 64) (x1157 x946 64))))))
(assert (x2264 x2726))
(assert (x729 x1962))
(assert (= (=> (= x1225 true) x1519) x1373))
(assert (x2264 x1433))
(assert (x2629 x1191))
(assert (x2264 x892))
(assert (x2264 x1848))
(assert (x2375 x1926))
(assert (x2264 x2381))
(assert (x2951 x2418))
(assert (x2264 x987))
(assert (x729 (x1082 2 x2537)))
(assert (= x1901 (or x113 x1594)))
(assert (x2264 x655))
(assert (x2264 x25))
(assert (= x811 (or x1402 x298 x2613 x1270 x2614 x1411 x929 x2077 x1360 x1529 x1937 x1606 x680 x1461)))
(assert (x2159 x1383))
(assert (x2159 x959))
(assert (x2264 x2904))
(assert (and (x2060 x986 64) (x174 x986 64) (x1580 x986 64) (=> (< 0 64) (= x986 (+ (* (x2238 x986 64) 64) (x1157 x986 64))))))
(assert (x2951 x1430))
(assert (= x1712 (and x2996 x2903)))
(assert (x1404 x946))
(assert (= x2572 (and (not x1974) x939)))
(assert (x2628 x1190 x1768 x674 x612))
(assert (= (and (not x2994) x743) x67))
(assert (= (x1049 (x450 3012569127)) 3012569127))
(assert (x2264 x787))
(assert (x2951 (ite (> 256 x912) (x1082 2 x912) 0)))
(assert (x2264 x1224))
(assert (=> (<= (x2556 768) 10000) (= (x666 (x2556 768)) (x450 (x2556 768)))))
(assert (x2264 x656))
(assert (x2289 x2499))
(assert (x2264 x2817))
(assert (= (=> (= x1275 (= 1 (x2414 x2175 1))) (and (=> (= 1 x1032) x2231) x1275)) x2162))
(assert (x2264 x2097))
(assert (and (x2060 x946 1048576) (x174 x946 1048576) (x1580 x946 1048576) (=> (< 0 1048576) (= x946 (+ (* (x2238 x946 1048576) 1048576) (x1157 x946 1048576))))))
(assert (x2264 x2187))
(assert (x1700 (x2655 (x435 (+ 96 x2415)))))
(assert (and (x2060 x2079 8) (x174 x2079 8) (x1580 x2079 8) (=> (< 0 8) (= x2079 (+ (* (x2238 x2079 8) 8) (x1157 x2079 8))))))
(assert (and (x2060 x974 16777216) (x174 x974 16777216) (x1580 x974 16777216) (=> (< 0 16777216) (= x974 (+ (* (x2238 x974 16777216) 16777216) (x1157 x974 16777216))))))
(assert (= (or x2671 x464) x22))
(assert (and (x2060 x1861 32) (x174 x1861 32) (x1580 x1861 32) (=> (< 0 32) (= x1861 (+ (* (x2238 x1861 32) 32) (x1157 x1861 32))))))
(assert (x2264 x15))
(assert (and (x2060 x2735 262144) (x174 x2735 262144) (x1580 x2735 262144) (=> (< 0 262144) (= x2735 (+ (* (x2238 x2735 262144) 262144) (x1157 x2735 262144))))))
(assert (= (x1049 (x666 x330)) x330))
(assert (x2264 x1372))
(assert (and (x2060 x2386 2048) (x174 x2386 2048) (x1580 x2386 2048) (=> (< 0 2048) (= x2386 (+ (* (x2238 x2386 2048) 2048) (x1157 x2386 2048))))))
(assert (x1023 x1743))
(assert (= (=> (= x2242 (= 0 x2479)) (and (=> (and (not x2242) (= x1857 (< 0 x2479))) (and (=> (and (and (= x2926 (x435 (+ x1179 64))) (= (or (and (> 128 x1779) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1779))) (> x1779 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1484) (= x968 (x435 (+ 32 x2926))) (= x1179 (x435 (+ 64 x207))) (= x778 (x435 (+ x1179 32))) (= x840 (x435 (+ 64 x2926))) (= x923 (x435 (+ 32 x207)))) x1857) (and (=> (and (not x1484) (= x434 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1779) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1779)) (< x1779 128))))) (and (=> (and (not x434) (and (= (> x840 x2792) x770) (= x2585 (= 0 (ite x1708 1 0))) (= x838 (> x2792 18446744073709551615)) (= (or x838 x770) x1708) (= x2792 (x435 (+ 64 x840))))) (and (=> (not x2585) x1373) (=> (and (= x407 (and (= (<= x2128 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x2128 163))) x2585) (and (=> (and x407 (and (= (> x2792 x1238) x1178) (= (x435 (+ 64 x2792)) x1238) (= x2344 (or x1381 x1178)) (= (< 18446744073709551615 x1238) x1381) (= x2132 (= (ite x2344 1 0) 0)))) (and (=> (not x2132) x1373) (=> (and (= (> 196 x2128) x501) x2132) (and (=> x501 x1373) (=> (and (not x501) (and (= x804 true) (= (x2118 132) x854))) (and (=> x804 x618) (=> (not x804) x1373))))))) (=> (not x407) x1373))))) (=> x434 x1373))) (=> x1484 x1373))) (=> (not x1857) x1373))) (=> x2242 x290))) x2131))
(assert (x894 x1191))
(assert (x18 x612))
(assert (x2264 x2764))
(assert (= (and x1719 x300) x17))
(assert (x2592 x946))
(assert (x2264 x881))
(assert (x2264 x716))
(assert (x2264 x2624))
(assert (x2264 x1241))
(assert (= (x2115 (x435 (+ 128 x988))) (x1049 (x666 (x2115 (x435 (+ x988 128)))))))
(assert (x2264 x1975))
(assert (= (and x1209 x337) x701))
(assert (x18 x679))
(assert (= (x450 33554432) (x666 33554432)))
(assert (x2264 x37))
(assert (x2264 x800))
(assert (x2951 16777216))
(assert (= (x2917 (x435 (+ x2850 160))) (x1049 (x666 (x2917 (x435 (+ 160 x2850)))))))
(assert (x2159 x1452))
(assert (= x1317 (and x349 x2388)))
(assert (= (x799 x890) 0))
(assert (x2159 x1361))
(assert (= (or x593 x547) x217))
(assert (= (and x109 x2006) x2021))
(assert (x2264 x2143))
(assert (x2264 x1856))
(assert (x2264 x2104))
(assert (x1700 (x747 (x435 (+ x1059 192)))))
(assert (x2264 x1279))
(assert (x2951 x548))
(assert (x255 x1014))
(assert (x2264 x836))
(assert (x729 x2146))
(assert (= x1725 (or x512 x3000)))
(assert (x2264 x1517))
(assert (= x2341 (or x1887 x1546)))
(assert (= x2528 (or x2538 x1165)))
(assert (x2951 x888))
(assert (= (x1235 (x435 (+ x1059 96))) 0))
(assert (x2540 x377))
(assert (= x1393 (and x26 (not x1714))))
(assert (=> (<= x2744 10000) (= (x666 x2744) (x450 x2744))))
(assert (= (and x1492 x2110) x2903))
(assert (= (and x1554 x1799) x425))
(assert (= x103 (=> (and (and (= (x435 (+ x1615 32)) x1052) (= x1038 (x2391 x1491)) (= (x435 (+ x516 32)) x2799) (= (x435 (+ 32 x2074)) x2746) (= (x435 (+ x1328 32)) x1571) (= x2610 (x1417 x656)) (= (x435 (+ x367 32)) x2874) (= x1359 (x111 x2052)) (= (x597 x3002) x1467) (= (x725 x461) x644) (= x2121 (x173 x2953)) (= (x435 (+ x746 32)) x2872) (= x1671 (x2988 x65)) (= x301 (x2391 x1038)) (= (x597 x1571) x3002) (= x2953 (x173 x2758)) (= x890 (x2023 x380)) (= x2007 (x435 (+ x1377 64))) (= x2059 (x418 x2825)) (= x2187 (x435 (+ 32 x1780))) (= (x435 (+ x1889 32)) x2535) (= (x2391 x2807) x2100) (= x499 (x435 (+ 32 x1377))) (= x1377 x2758) (= x2940 (x435 (+ 192 x2007))) (= x1780 (x1425 x2799)) (= x2968 (x1417 x1911)) (= (x2988 x2216) x2218) (= x2720 (x435 (+ 32 x516))) (= (x793 x2872) x2213) (= x2807 (x435 (+ x1377 32))) (= x380 x516) (= (x435 (+ x116 32)) x1104) (= (x418 x2059) x1127) (= (x649 x392) x731) (= (x793 x2807) x2074) (= (x435 (+ 32 x1482)) x65) (= (x435 (+ 32 x1052)) x1889) (= x1988 (x435 (+ x644 32))) (= (x725 x1988) x2814) (= x2825 (x418 x2807)) (= (x2023 x890) x686) (= (x1425 x2187) x2353) (= x1482 (x2988 x2758)) (= (x793 x2746) x746) (= (x435 (+ x2535 32)) x1918) (= x1615 (x435 (+ x2940 32))) (= x116 (x435 (+ x419 32))) (= x1377 (x435 (+ x516 64))) (= (x597 x2758) x1328) (= x1224 (x435 (+ 32 x2803))) (= (x1417 x2758) x1911) (= (x173 x2121) x716) (= x367 (x435 (+ 32 x1104))) (= (x435 (+ x19 32)) x419) (= (x435 (+ 32 x2100)) x1491) (= x1477 (x649 x380)) (= (x111 x2799) x2052) (= (x435 (+ x2968 32)) x656) (= (x435 (+ x1477 32)) x392) (= x2007 x19) (= x2216 (x435 (+ 32 x1671))) (= x461 (x725 x2807)) (= (x435 (+ 384 x2007)) x2493)) (and (and (= x2996 (> x2137 0)) (= x988 (x435 (+ x2493 32)))) (or (and x2996 (and (= x782 1) (> 4294967296 x38))) (and (not x2996) (= x782 x2137))))) x1693)))
(assert (x2264 x1541))
(assert (x2264 x2505))
(assert (= (x1049 (x666 (x1258 (x435 (+ 192 x2767))))) (x1258 (x435 (+ 192 x2767)))))
(assert (x2159 x897))
(assert (= x1563 (and x2296 x2053)))
(assert (x2159 x2836))
(assert (x2264 x2487))
(assert (x2264 x1215))
(assert (x2264 x428))
(assert (x2264 x1684))
(assert (= (x1235 (x435 (+ 192 x2415))) 0))
(assert (x2264 x1262))
(assert (x2264 x1966))
(assert (x2264 x2891))
(assert (x1707 x310))
(assert (x2159 x1252))
(assert (x2747 x1273))
(assert (x2264 x646))
(assert (x894 x845))
(assert (x2264 x1359))
(assert (=> (>= 10000 (x2556 736)) (= (x450 (x2556 736)) (x666 (x2556 736)))))
(assert (= (and (not x1681) x823) x51))
(assert (x729 x1523))
(assert (x2264 x447))
(assert (x2264 x2921))
(assert (= (x666 3012569127) (x450 3012569127)))
(assert (x2647 x2141))
(assert (x2951 8192))
(assert (= x1302 (and x1225 x1696)))
(assert (x2264 x456))
(assert (x2951 x1014))
(assert (= x2882 (and (not x2158) x507)))
(assert (x2264 x968))
(assert (x2264 x400))
(assert (x2680 x2027 (x1082 2 x2073)))
(assert (= (and x1652 x1575) x2356))
(assert (x2520 x2235))
(assert (= (and (not x2390) x1995) x2262))
(assert (x2951 x1752))
(assert (x2264 x2940))
(assert (= x1831 (or x1584 x60)))
(assert (= 0 (x799 x1491)))
(assert (= x2436 (and (not x652) x797)))
(assert (x2264 x1033))
(assert (= (x1049 (x666 (x2917 (x435 (+ x2850 96))))) (x2917 (x435 (+ x2850 96)))))
(assert (x2264 x2874))
(assert (x1412 x127))
(assert (x2264 x288))
(assert (and (x2060 x2625 4294967296) (x174 x2625 4294967296) (x1580 x2625 4294967296) (=> (< 0 4294967296) (= x2625 (+ (* (x2238 x2625 4294967296) 4294967296) (x1157 x2625 4294967296))))))
(assert (x2264 x294))
(assert (= (and x1254 (not x1166)) x2950))
(assert (= (=> (and (= (x435 (+ x1048 32)) x2505) (= x2800 (x435 (+ 32 x2505))) (= x1465 (x668 (- x1772 32))) (= (x668 (- x847 x1048)) x1772) (= (x435 (+ x1048 32)) x2495) (= x847 (x435 (+ 32 x2800))) (= x2342 (x711 x1048)) (= x370 (<= x2342 224))) (and x370 (=> (and (= x847 x274) (= x1840 (ite (<= x2342 32) (x581 (x666 (x711 x2495)) 0) (ite (>= 64 x2342) (x2829 (x666 (x711 x2495)) (x666 (x711 (x435 (+ 32 x2495)))) 0) (ite (<= x2342 96) (x2290 (x666 (x711 x2495)) (x666 (x711 (x435 (+ 32 x2495)))) (x666 (x711 (x435 (+ 64 x2495)))) 0) (ite (>= 128 x2342) (x1109 (x666 (x711 x2495)) (x666 (x711 (x435 (+ 32 x2495)))) (x666 (x711 (x435 (+ x2495 64)))) (x666 (x711 (x435 (+ 96 x2495)))) 0) (ite (>= 160 x2342) (x1623 (x666 (x711 x2495)) (x666 (x711 (x435 (+ 32 x2495)))) (x666 (x711 (x435 (+ 64 x2495)))) (x666 (x711 (x435 (+ 96 x2495)))) (x666 (x711 (x435 (+ x2495 128)))) 0) (ite (<= x2342 192) (x935 (x666 (x711 x2495)) (x666 (x711 (x435 (+ 32 x2495)))) (x666 (x711 (x435 (+ 64 x2495)))) (x666 (x711 (x435 (+ 96 x2495)))) (x666 (x711 (x435 (+ x2495 128)))) (x666 (x711 (x435 (+ 160 x2495)))) 0) (ite (>= 224 x2342) (x582 (x666 (x711 x2495)) (x666 (x711 (x435 (+ 32 x2495)))) (x666 (x711 (x435 (+ 64 x2495)))) (x666 (x711 (x435 (+ x2495 96)))) (x666 (x711 (x435 (+ x2495 128)))) (x666 (x711 (x435 (+ 160 x2495)))) (x666 (x711 (x435 (+ x2495 192)))) 0) (x666 x1319)))))))))) x2532))) x2575))
(assert (x2264 x1041))
(assert (= (and (not x944) x1753) x2155))
(assert (= (x2655 x2415) (x1049 (x666 (x2655 x2415)))))
(assert (x2159 1024))
(assert (x2264 x2005))
(assert (x2264 x403))
(assert (x729 281474976710655))
(assert (x2951 x2104))
(assert (x737 x2837))
(assert (= (and (=> (and x2086 (and (= x2879 x1340) (= x850 (x435 (+ x1387 32))) (= x2879 (x435 (+ x1387 64))) (= x1307 x1387))) x2711) (=> (and (and (= x899 (x435 (+ 64 x1387))) (= (x435 (+ 32 x1387)) x1396) (= (x1986 x94) x2326) (= x1201 (< 21888242871839275222246405745257275088696311157297823662689037894645226208583 x2215)) (= (x2991 x2365) x2937) (= (x1157 x2937 21888242871839275222246405745257275088696311157297823662689037894645226208583) x2215)) (not x2086)) (and (=> (and (and (= x1307 x1387) (= (x668 (- 21888242871839275222246405745257275088696311157297823662689037894645226208583 x2215)) x1819) (= x1340 x899)) (not x1201)) x2711) (=> x1201 x1108)))) x142))
(assert (= x1771 (and x217 x2116)))
(assert (x2159 x1500))
(assert (x2264 x777))
(assert (= x1922 (and (not x259) x2716)))
(assert (= (and x1488 x343) x1075))
(assert (=> (<= (x1258 (x435 (+ 128 x2767))) 10000) (= (x450 (x1258 (x435 (+ x2767 128)))) (x666 (x1258 (x435 (+ 128 x2767)))))))
(assert (x2264 x1894))
(assert (x2264 x1874))
(assert (x1797 x946))
(assert (x2264 x1038))
(assert (x2951 x1161))
(assert (x2264 x227))
(assert (x2629 x2079))
(assert (x2264 x1930))
(assert (=> (>= 10000 (x2556 928)) (= (x666 (x2556 928)) (x450 (x2556 928)))))
(assert (x2264 x1037))
(assert (= 0 (x799 x2052)))
(assert (x2264 x1997))
(assert (x2264 x950))
(assert (x2951 x1453))
(assert (x2264 x117))
(assert (= x1155 (and x49 x2491)))
(assert (=> (>= 10000 (x2115 x988)) (= (x666 (x2115 x988)) (x450 (x2115 x988)))))
(assert (x2264 x2384))
(assert (x2264 x313))
(assert (x255 x946))
(assert (x729 x1186))
(assert (x2264 x1676))
(assert (x2264 x1640))
(assert (x2264 x392))
(assert (and (x2060 x2743 2147483648) (x174 x2743 2147483648) (x1580 x2743 2147483648) (=> (< 0 2147483648) (= x2743 (+ (* (x2238 x2743 2147483648) 2147483648) (x1157 x2743 2147483648))))))
(assert (x2159 x2283))
(assert (= (x1235 (x435 (+ x2415 160))) 0))
(assert (x2951 x1798))
(assert (x2264 x1326))
(assert (x2264 x2835))
(assert (= 0 (x1235 x2415)))
(assert (x2264 x2915))
(assert (= (x666 (x1049 x564)) x564))
(assert (= (and x2165 x1293) x471))
(assert (x2264 x393))
(assert (x2159 x815))
(assert (x2264 x556))
(assert (x2264 x361))
(assert (x2629 x1555))
(assert (= (x2414 x2397 1) (x2238 x2397 2)))
(assert (x2264 x938))
(assert (x2159 x2041))
(assert (and (x2060 x881 4294967296) (x174 x881 4294967296) (x1580 x881 4294967296) (=> (< 0 4294967296) (= x881 (+ (* (x2238 x881 4294967296) 4294967296) (x1157 x881 4294967296))))))
(assert (and (x2060 x2597 32) (x174 x2597 32) (x1580 x2597 32) (=> (< 0 32) (= x2597 (+ (* (x2238 x2597 32) 32) (x1157 x2597 32))))))
(assert (x2264 x1278))
(assert (x2951 33554432))
(assert (x2264 x1019))
(assert (= (and x2682 x468) x999))
(assert (x2264 x107))
(assert (= x707 (and x2761 x2643)))
(assert (= (or x2026 x325) x135))
(assert (and (x2060 x1765 4194304) (x174 x1765 4194304) (x1580 x1765 4194304) (=> (< 0 4194304) (= x1765 (+ (* (x2238 x1765 4194304) 4194304) (x1157 x1765 4194304))))))
(assert (x1700 (x257 (x435 (+ 32 x1883)))))
(assert (x2159 x641))
(assert (= (=> (= (= x2569 0) x1859) (and (=> x1859 x290) (=> (and (= x1357 (< 0 x2569)) (not x1859)) (and (=> (not x1357) x1373) (=> (and (and (and (= (x435 (+ x2918 32)) x282) (= (x435 (+ 32 x2620)) x2918) (= (x1106 x231) x1695) (= x1354 (x435 (+ 128 x788))) (= x1624 (x549 x2782)) (= x2620 (x435 (+ 32 x788))) (= x2785 (x435 (+ x2782 64))) (= (x435 (+ 64 x2785)) x788) (= x676 (x435 (+ x2785 32))) (= x231 (x435 (+ 32 x2782))) (= (x100 x2813) x2255) (= (x435 (+ 32 x2813)) x239) (= x1981 (x2202 x239)) (= (< 0 x640) x259)) (or (and x259 (and (= x186 1) (< x2190 4294967296))) (and (not x259) (= x640 x186)))) x1357) x2029))))) x168))
(assert (x1700 (x2655 x2415)))
(assert (= (=> (and (= (x940 864) x1848) (= x150 (< x1848 64))) (and x150 (=> (and (= x274 x2523) (= x2318 x1840)) x2413))) x2532))
(assert (x2264 x2415))
(assert (= (and (not x2543) x2288) x1022))
(assert (and (x2060 x1273 1024) (x174 x1273 1024) (x1580 x1273 1024) (=> (< 0 1024) (= x1273 (+ (* (x2238 x1273 1024) 1024) (x1157 x1273 1024))))))
(assert (x894 x2841))
(assert (= x475 (and (=> (and (and (= x1870 (x1157 x1856 21888242871839275222246405745257275088696311157297823662689037894645226208583)) (= (x435 (+ x2608 64)) x2584) (= (x214 x1044) x1118) (= x2811 (< 21888242871839275222246405745257275088696311157297823662689037894645226208583 x1870)) (= x1856 (x2455 x2171)) (= (x435 (+ x2608 32)) x160)) (not x844)) (and (=> x2811 x1373) (=> (and (not x2811) (and (= x1998 x2608) (= x1128 x2584) (= (x668 (- 21888242871839275222246405745257275088696311157297823662689037894645226208583 x1870)) x2236))) x2440))) (=> (and x844 (and (= x1128 x2611) (= x1998 x2608) (= x238 (x435 (+ x2608 32))) (= (x435 (+ x2608 64)) x2611))) x2440))))
(assert (= 0 (x799 (x435 (+ x2495 96)))))
(assert (x2264 x204))
(assert (x2264 x1621))
(assert (= x817 false))
(assert (= (and x1905 (not x2242)) x11))
(assert (= 0 (x799 x1571)))
(assert (= (x1235 (x435 (+ x2767 192))) 0))
(assert (x2264 x2929))
(assert (x2264 x1664))
(assert (x2159 x2835))
(assert (x2020 x1852))
(assert (x226 x1273))
(assert (x2264 x2389))
(assert (x737 x1641))
(assert (x2951 x1047))
(assert (x2264 x1185))
(assert (x2264 x1573))
(assert (x2951 8388608))
(assert (x2264 x2222))
(assert (x1700 (x2979 928)))
(assert (x2264 x2353))
(assert (x2264 x1095))
(assert (x2159 x2368))
(assert (x2264 x1306))
(assert (= x664 (and x667 (not x307))))
(assert (x2264 x2277))
(assert (= 0 (x799 x656)))
(assert (x894 x578))
(assert (x1700 (x2979 832)))
(assert (= (and (not x2497) x886) x2471))
(assert (x729 x2609))
(assert (x2264 x2495))
(assert (x2629 x852))
(assert (x2264 x1597))
(assert (x2731 x612 (- x674 x1190)))
(assert (x2264 x1032))
(assert (x2264 x2606))
(assert (x1700 (x2556 832)))
(assert (= (x799 x392) 0))
(assert (x2264 x1477))
(assert (x2264 x2096))
(assert (x2264 x2627))
(assert (x1700 (x2917 x2850)))
(assert (x1700 (x1823 x1026)))
(assert (x2264 x247))
(assert (x2264 x1711))
(assert (= (or x1316 x2821 (and x134 x2482) x1728 (and x212 (not x1068)) x1145 x2591 x2494 (and x2981 x1363) x2827 (and x1164 x1948) x2639 x1504 (and (not x1909) x17) (and x501 x152) (and (not x2212) x2919) x33 x120 x1834 x471 (and x1492 (not x2110)) (and x551 x2548) x996 (and x954 x2564) x1163 x2399 (and x433 x1649) x329 x685 (and x2332 x2161) x805 (and x1959 x2616) x138 x16 x1771 (and (not x407) x2702) (and x1532 x595) x63 (and x44 x1243) x979 (and x1138 (not x1957)) x1727 x2685 (and x797 x652) x2615 (and x2394 x230) x1073 (and x404 x2156) (and (not x337) x1209) x2661 (and x784 x2454) x704 x164 x2689 x64 x2755 x1754 x2710 (and x1378 (not x1140)) x51 (and x252 (not x1811)) x1406 (and (not x2718) x93) (and x1753 x944) x753 x1646 (and x1703 (not x1759)) (and x2436 x585) x417 (and x427 (not x882)) x13 (and x2484 x1484) (and x1770 x1645) (and x1440 (not x1677)) (and x525 x1175) (and x2994 x743) x241 x2294 (and x1562 x434) x2508 x2721 (and x2717 x789) x167 x91 (and x432 x2155) (and x1907 x105) (and x1910 (not x31)) x2198 (and x1719 (not x300)) x761 (and x2830 x2641) x999) x726))
(assert (= 18446744073709551615 (x1049 (x450 18446744073709551615))))
(assert (x1700 (x2917 (x435 (+ 160 x2850)))))
(assert (x2264 x1733))
(assert (x2629 x2735))
(assert (= (x666 (x1049 (ite (>= 32 x1352) (x581 (x666 (x2917 x2850)) 0) (ite (<= x1352 64) (x2829 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ x2850 32)))) 0) (ite (>= 96 x1352) (x2290 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ x2850 32)))) (x666 (x2917 (x435 (+ 64 x2850)))) 0) (ite (>= 128 x1352) (x1109 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) (x666 (x2917 (x435 (+ 64 x2850)))) (x666 (x2917 (x435 (+ x2850 96)))) 0) (ite (>= 160 x1352) (x1623 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) (x666 (x2917 (x435 (+ x2850 64)))) (x666 (x2917 (x435 (+ 96 x2850)))) (x666 (x2917 (x435 (+ 128 x2850)))) 0) (ite (>= 192 x1352) (x935 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ x2850 32)))) (x666 (x2917 (x435 (+ 64 x2850)))) (x666 (x2917 (x435 (+ x2850 96)))) (x666 (x2917 (x435 (+ 128 x2850)))) (x666 (x2917 (x435 (+ x2850 160)))) 0) (ite (>= 224 x1352) (x582 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) (x666 (x2917 (x435 (+ x2850 64)))) (x666 (x2917 (x435 (+ 96 x2850)))) (x666 (x2917 (x435 (+ x2850 128)))) (x666 (x2917 (x435 (+ x2850 160)))) (x666 (x2917 (x435 (+ x2850 192)))) 0) (x666 x870)))))))))) (ite (>= 32 x1352) (x581 (x666 (x2917 x2850)) 0) (ite (>= 64 x1352) (x2829 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ x2850 32)))) 0) (ite (>= 96 x1352) (x2290 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) (x666 (x2917 (x435 (+ x2850 64)))) 0) (ite (>= 128 x1352) (x1109 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) (x666 (x2917 (x435 (+ 64 x2850)))) (x666 (x2917 (x435 (+ x2850 96)))) 0) (ite (>= 160 x1352) (x1623 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) (x666 (x2917 (x435 (+ x2850 64)))) (x666 (x2917 (x435 (+ x2850 96)))) (x666 (x2917 (x435 (+ x2850 128)))) 0) (ite (>= 192 x1352) (x935 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ x2850 32)))) (x666 (x2917 (x435 (+ 64 x2850)))) (x666 (x2917 (x435 (+ 96 x2850)))) (x666 (x2917 (x435 (+ x2850 128)))) (x666 (x2917 (x435 (+ 160 x2850)))) 0) (ite (<= x1352 224) (x582 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ x2850 32)))) (x666 (x2917 (x435 (+ 64 x2850)))) (x666 (x2917 (x435 (+ x2850 96)))) (x666 (x2917 (x435 (+ 128 x2850)))) (x666 (x2917 (x435 (+ 160 x2850)))) (x666 (x2917 (x435 (+ x2850 192)))) 0) (x666 x870))))))))))
(assert (= x2350 (and x1251 (not x977))))
(assert (x2264 x200))
(assert (x2264 x2247))
(assert (x2264 x640))
(assert (x2264 x1216))
(assert (= x2960 (and (not x2701) x2070)))
(assert (and (x2060 x1255 16) (x174 x1255 16) (x1580 x1255 16) (=> (< 0 16) (= x1255 (+ (* (x2238 x1255 16) 16) (x1157 x1255 16))))))
(assert (=> (>= 10000 (x747 (x435 (+ 96 x1059)))) (= (x666 (x747 (x435 (+ 96 x1059)))) (x450 (x747 (x435 (+ x1059 96)))))))
(assert (x2264 x2748))
(assert (x463 x897))
(assert (x2264 x430))
(assert (let ((x1379 (ite x1089 x2789 (x54 2 x2789)))) (and (x2060 x1379 2) (x174 x1379 2) (x1580 x1379 2) (=> (< 0 2) (= x1379 (+ (* (x2238 x1379 2) 2) (x1157 x1379 2)))))))
(assert (x2629 x460))
(assert (x2264 x809))
(assert (and (x2060 x2154 1073741824) (x174 x2154 1073741824) (x1580 x2154 1073741824) (=> (< 0 1073741824) (= x2154 (+ (* (x2238 x2154 1073741824) 1073741824) (x1157 x2154 1073741824))))))
(assert (= x2091 (or x567 x1824)))
(assert (x729 x1587))
(assert (x2629 x2107))
(assert (= (and x1799 (not x1554)) x2805))
(assert (= 0 (x1235 x1722)))
(assert (= (x2115 (x435 (+ 64 x988))) (x1049 (x666 (x2115 (x435 (+ x988 64)))))))
(assert (x2264 x1954))
(assert (= x2379 (and x542 (not x1859))))
(assert (= (x1235 x119) 0))
(assert (= (x450 8388608) (x666 8388608)))
(assert (x2264 x1377))
(assert (= x2845 (=> (= (or (and (> 64 x335) (= (<= x335 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x335)) x977) (and (=> x977 x1108) (=> (and (not x977) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x335) (and (> 64 x335) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x335)))) x2541)) (and (=> (and (not x2541) (and (= (x435 (+ 64 x2469)) x94) (= (< x94 x2469) x130) (= (or x2887 x130) x1769) (= (> x94 18446744073709551615) x2887) (= x349 (= 0 (ite x1769 1 0))))) (and (=> (and x349 (and (= x2056 (x225 x2136)) (= x2311 true))) (and (=> (and (and (= x1515 true) (= (x225 x2032) x1846)) x2311) (and (=> (not x1515) x1108) (=> (and (and (or (and x1091 (and (= (= x1116 0) x2086) (= (x1986 x2365) x1116))) (and (= x1091 x2086) (not x1091))) (and (= x2251 (x435 (+ 32 x2469))) (= (x435 (+ 64 x94)) x2675) (= (= 0 x2305) x1091) (= x2365 (x435 (+ 32 x94))) (= x2305 (x1986 x94)) (= x1387 (x435 (+ 64 x2675))) (= (x435 (+ x2675 32)) x32))) x1515) x142))) (=> (not x2311) x1108))) (=> (not x349) x1108))) (=> x2541 x1108)))))))
(assert (= 0 (x799 x1455)))
(assert (= x2804 (=> (= (or (and (> 64 x967) (= true (<= x967 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x967 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x652) (and (=> (and (= (or (and (= (<= x967 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x967 64)) (> x967 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x585) (not x652)) (and (=> x585 x1373) (=> (and (not x585) (and (= x1369 (= (ite x1979 1 0) 0)) (= x1979 (or x1638 x1284)) (= (< 18446744073709551615 x1044) x1638) (= (x435 (+ 64 x960)) x1044) (= (> x960 x1044) x1284))) (and (=> (and (and (= (x2118 x1174) x2762) (= x300 true)) x1369) (and (=> (not x300) x1373) (=> (and x300 (and (= x868 (x2118 x2952)) (= true x1909))) (and (=> (and x1909 (and (and (= x1560 (x435 (+ x2513 32))) (= (x1135 x1044) x2105) (= x2171 (x435 (+ x1044 32))) (= (= x2105 0) x905) (= (x435 (+ 64 x2513)) x1585) (= x409 (x435 (+ x960 32))) (= x2513 (x435 (+ x1044 64)))) (or (and (and (= (= 0 x2801) x1652) (= (x1135 x2171) x2801)) x905) (and (not x905) (= x1652 x905))))) x1902) (=> (not x1909) x1373))))) (=> (not x1369) x1373))))) (=> x652 x1373)))))
(assert (x2629 x348))
(assert (= 134217728 (x1049 (x450 134217728))))
(assert (and (x2060 x1430 4294967296) (x174 x1430 4294967296) (x1580 x1430 4294967296) (=> (< 0 4294967296) (= x1430 (+ (* (x2238 x1430 4294967296) 4294967296) (x1157 x1430 4294967296))))))
(assert (= (and (not x1522) x771) x2253))
(assert (=> (<= (x2979 896) 10000) (= (x450 (x2979 896)) (x666 (x2979 896)))))
(assert (x1700 (x747 (x435 (+ x1059 128)))))
(assert (x2629 x2977))
(assert (= x2343 (and x1674 x611)))
(assert (and (x2060 x2977 281474976710656) (x174 x2977 281474976710656) (x1580 x2977 281474976710656) (=> (< 0 281474976710656) (= x2977 (+ (* (x2238 x2977 281474976710656) 281474976710656) (x1157 x2977 281474976710656))))))
(assert (x2629 x1281))
(assert (x2264 x2234))
(assert (=> (<= (x1823 (x435 (+ x1026 160))) 10000) (= (x450 (x1823 (x435 (+ x1026 160)))) (x666 (x1823 (x435 (+ 160 x1026)))))))
(assert (x2264 x2774))
(assert (= x2484 (and x11 x1857)))
(assert (and (x211 x2397 2) (x2430 x2397 2) (=> (and (> x2397 0) (> 2 0)) (and (<= (* 2 (x2238 x2397 2)) x2397) (> (* (x2238 x2397 2) 2) (- x2397 2)))) (x1972 x2397 2) (= (- x2397 (x2453 1 x2397)) (* (x2238 x2397 2) 2)) (x2736 x2397 2)))
(assert (= (x1049 (x450 262144)) 262144))
(assert (x2264 x748))
(assert (x2951 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x21 x555) x322))
(assert (= (and x2379 (not x1357)) x2615))
(assert (= x1658 (x1049 (x666 x1658))))
(assert (x1700 x1548))
(assert (x1700 x1471))
(assert (= (and x2069 (not x354)) x314))
(assert (x1570 x946))
(assert (= (and x1657 x2820) x2617))
(assert (x2264 x1367))
(assert (x2264 x724))
(assert (= 131072 (x1049 (x450 131072))))
(assert (x2629 1))
(assert (x2264 x1722))
(assert (x2264 x1752))
(assert (x2951 131072))
(assert (= x2070 (and x106 (not x2768))))
(assert (and (x2060 x2499 67108864) (x174 x2499 67108864) (x1580 x2499 67108864) (=> (< 0 67108864) (= x2499 (+ (* (x2238 x2499 67108864) 67108864) (x1157 x2499 67108864))))))
(assert (x2264 x2697))
(assert (and (x2060 x2848 4) (x174 x2848 4) (x1580 x2848 4) (=> (< 0 4) (= x2848 (+ (* (x2238 x2848 4) 4) (x1157 x2848 4))))))
(assert (x729 x69))
(assert (x2629 x80))
(assert (x2159 x1982))
(assert (x1470 x66))
(assert (x1023 x2015))
(assert (= (=> (and (and (= (= x2759 0) x765) (= x127 (ite x149 x1252 (x54 8388608 x1252))) (= (x2453 4096 x1273) x798) (= (= x2335 0) x1665) (= x762 (x2453 268435456 x1273)) (= (ite x1220 x623 (x54 2097152 x623)) x310) (= x608 (x2453 512 x1273)) (= x1040 (x2453 128 x1273)) (= (= x608 0) x2725) (= (= 0 x2194) x2130) (= (= 0 x154) x270) (= (= x1040 0) x2550) (= (= 0 x2773) x723) (= x557 (= x1041 0)) (= x2080 (x2453 4194304 x1273)) (= (x2453 256 x1273) x1486) (= (x668 (- 32 x2357)) x2537) (= (= 0 x762) x1718) (= (x2453 4 x1273) x2370) (= (ite x2473 x2974 (x54 536870912 x2974)) x2835) (= x1252 (ite x2550 x1361 (x54 16777216 x1361))) (= (= 0 x515) x973) (= x959 (ite x1565 x2314 (x54 524288 x2314))) (= (= x1207 0) x2424) (= (x2453 8 x1273) x1299) (= x2473 (= 0 x2370)) (= x1324 (= x2928 0)) (= (x2453 8388608 x1273) x515) (= (x2453 1024 x1273) x180) (= x1617 (= x1634 0)) (= (x2453 16777216 x1273) x2316) (= x2122 (ite x1617 x1286 (x54 64 x1286))) (= (= x798 0) x1565) (= (= x180 0) x1220) (= x1955 (ite x2130 x714 (x54 4 x714))) (= x194 (= x920 0)) (= (ite x1348 x2122 (x54 32 x2122)) x1864) (= (= x2962 0) x2034) (= (x2453 16 x1273) x1364) (= x917 (x2453 32 x1273)) (= x714 (ite x1718 x2891 (x54 8 x2891))) (= x2852 (= 0 x436)) (= x224 (ite x765 x334 (x54 65536 x334))) (= (x2453 1 x1273) x2335) (= (ite x1699 x2195 (x54 512 x2195)) x223) (= x1382 (= x1364 0)) (= x1579 (x2453 2097152 x1273)) (= x2194 (x2453 536870912 x1273)) (= (x2453 67108864 x1273) x1855) (= (x2453 64 x1273) x1226) (= (ite x2969 x2315 (x54 33554432 x2315)) x1361) (= (x2453 131072 x1273) x436) (= x2969 (= 0 x1226)) (= (ite x270 x2916 (x54 8192 x2916)) x931) (= (ite x2424 x1839 (x54 2048 x1839)) x1833) (= (= x2542 0) x2959) (= x2916 (ite x2852 x2490 (x54 16384 x2490))) (= x2602 (= 0 x1299)) (= (= 0 x2080) x1699) (= x2962 (x2453 2 x1273)) (= (ite x973 x223 (x54 256 x223)) x77) (= (= x2316 0) x1443) (= x1634 (x2453 33554432 x1273)) (= x2002 (= x1256 0)) (= (= 0 x917) x677) (= x2542 (x2453 2048 x1273)) (= (x2453 1048576 x1273) x1207) (= (ite x2034 x2148 (x54 1073741824 x2148)) x2974) (= (ite x2602 x2835 (x54 268435456 x2835)) x495) (= (x2453 524288 x1273) x1041) (= x1286 (ite x1443 x77 (x54 128 x77))) (= x2928 (x2453 8192 x1273)) (= x2593 (ite (= x1487 0) (ite x723 x1955 (x54 2 x1955)) (x54 1 (ite x723 x1955 (x54 2 x1955))))) (= x2018 (= 0 x1579)) (= (ite x1382 x495 (x54 134217728 x495)) x2368) (= x1487 (x2453 2147483648 x1273)) (= (ite x194 x741 (x54 131072 x741)) x334) (= x2315 (ite x677 x2368 (x54 67108864 x2368))) (= x154 (x2453 262144 x1273)) (= x2490 (ite x1341 x224 (x54 32768 x224))) (= (x2453 1073741824 x1273) x2773) (= x2195 (ite x2018 x1833 (x54 1024 x1833))) (= (x2453 134217728 x1273) x1256) (= x2148 (ite x1665 0 2147483648)) (= (= 0 x1306) x1341) (= (= 0 x1855) x1348) (= (ite x2959 x310 (x54 1048576 x310)) x2314) (= x1839 (ite x557 x931 (x54 4096 x931))) (= x920 (x2453 16384 x1273)) (= (x2453 32768 x1273) x2759) (= x741 (ite x1324 x959 (x54 262144 x959))) (= (= 0 x1486) x149) (= (x2453 65536 x1273) x1306) (= (ite x2002 x1864 (x54 16 x1864)) x2891) (= (ite x2725 x127 (x54 4194304 x127)) x623)) (and (= (x2453 x1213 x1850) x198) (= x884 (= 0 x654)) (= (= 0 x198) x2304) (= x1850 (ite (< x2241 256) 1 0)) (= (ite (not x884) 1 0) x1213) (= x2241 (x2238 4294967295 x654)) (= x654 (x2414 x2593 x2537)))) (and (=> (not x2304) x1373) (=> (and x2304 (and (= x2507 (> x2397 0)) (= x1838 (x144 (* x654 256))) (= x2609 (x2453 4294967295 x1838)))) (and (=> (and x2507 (and (= x822 x578) (= (x2238 x2609 x2397) x822))) x1403) (=> (not x2507) x1373))))) x953))
(assert (x2951 x1903))
(assert (and (x2060 x946 67108864) (x174 x946 67108864) (x1580 x946 67108864) (=> (< 0 67108864) (= x946 (+ (* (x2238 x946 67108864) 67108864) (x1157 x946 67108864))))))
(assert (= x1070 (and x26 x1714)))
(assert (x2264 x1897))
(assert (x2264 x272))
(assert (= (or x2343 x1227) x1141))
(assert (x2264 x239))
(assert (x2264 x395))
(assert (x2629 x2625))
(assert (= (x799 x2758) 0))
(assert (x659 x1136))
(assert (= (and x771 x1522) x699))
(assert (and (x2060 x66 1024) (x174 x66 1024) (x1580 x66 1024) (=> (< 0 1024) (= x66 (+ (* (x2238 x66 1024) 1024) (x1157 x66 1024))))))
(assert (= (and x360 x1514) x2665))
(assert (x2626 x2983 x2774))
(assert (x2264 x2421))
(assert (= x1924 (and (not x1869) x1276)))
(assert (x245 x815))
(assert (x2264 x1094))
(assert (= 21888242871839275222246405745257275088548364400416034343698204186575808495617 (x1049 (x450 21888242871839275222246405745257275088548364400416034343698204186575808495617))))
(assert (x2010 x1148 x1949))
(assert (= (and x2393 x534) x136))
(assert (x2264 x1817))
(assert (x2264 x1486))
(assert (x2629 x2530))
(assert (x2264 x2537))
(assert (= (x2115 (x435 (+ x988 32))) (x1049 (x666 (x2115 (x435 (+ 32 x988)))))))
(assert (x2159 x2915))
(assert (= x404 (and (not x2981) x1363)))
(assert (x2264 x835))
(assert (x2159 x2005))
(assert (= x2546 (and (not x673) x995)))
(assert (and (x2060 x946 1024) (x174 x946 1024) (x1580 x946 1024) (=> (< 0 1024) (= x946 (+ (* (x2238 x946 1024) 1024) (x1157 x946 1024))))))
(assert (and (x2060 x1273 524288) (x174 x1273 524288) (x1580 x1273 524288) (=> (< 0 524288) (= x1273 (+ (* (x2238 x1273 524288) 524288) (x1157 x1273 524288))))))
(assert (= (=> (= x2039 (= 1 (x2414 x2175 1))) (and x2039 (=> (= 1 x2205) x2089))) x379))
(assert (= x2739 (and x217 (not x2116))))
(assert (x2264 x1391))
(assert (= (x2414 x1962 1) (x2238 x1962 2)))
(assert (x2264 x2305))
(assert (= (and x491 (not x1201)) x512))
(assert (x1211 x495))
(assert (= (=> (= x563 (= (x2414 x2397 1) 1)) (and (=> (= 1 x2357) x2088) x563)) x115))
(assert (x1813 x2079))
(assert (= 0 (x1235 x2208)))
(assert (x2264 x1612))
(assert (= (x1235 x809) 0))
(assert (= x1006 (x1049 (x666 x1006))))
(assert (and (x2060 x946 16384) (x174 x946 16384) (x1580 x946 16384) (=> (< 0 16384) (= x946 (+ (* (x2238 x946 16384) 16384) (x1157 x946 16384))))))
(assert (= (x144 (ite (< x121 256) (x1082 2 x121) 0)) (x101 1 x121)))
(assert (x2731 x1190 (- x1768 x674)))
(assert (x457 x1273))
(assert (= (and x886 x2497) x522))
(assert (= (and x2766 x2322) x2338))
(assert (and (x2060 x1273 32) (x174 x1273 32) (x1580 x1273 32) (=> (< 0 32) (= x1273 (+ (* (x2238 x1273 32) 32) (x1157 x1273 32))))))
(assert (x2264 x235))
(assert (= x814 (and x1314 x1065)))
(assert (x2264 x2743))
(assert (x2264 x2136))
(assert (x2264 x2428))
(assert (= x1912 (and x2480 (not x484))))
(assert (x2264 x119))
(assert (x2264 x2215))
(assert (x18 x654))
(assert (x2264 x1724))
(assert (x1001 x1218))
(assert (= (and x2278 x1008) x2482))
(assert (= x2674 (and (not x966) x388)))
(assert (x2159 x1168))
(assert (x2264 x2452))
(assert (= (x1049 (x666 (x2979 864))) (x2979 864)))
(assert (= (and x402 x2259) x2818))
(assert (x2159 524288))
(assert (= (x799 (x435 (+ 32 x2495))) 0))
(assert (x2951 (ite (< x1365 256) (x1082 2 x1365) 0)))
(assert (let ((x399 (x1082 2 x2851))) (and (x1600 1 x399) (x2853 1 x399) (x831 1 x399) (and (= (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935) x399) (- (* 1 x399) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x399))) (= (- (* (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935) (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (x2427 1 (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* 1 x399) (x2427 1 x399)) (x2434 1 x399) (x795 1 x399))))
(assert (x2264 x2535))
(assert (x2264 x2600))
(assert (= (x2655 (x435 (+ x2415 32))) (x1049 (x666 (x2655 (x435 (+ x2415 32)))))))
(assert (x729 x2810))
(assert (x1700 x2563))
(assert (and (x2060 x2683 536870912) (x174 x2683 536870912) (x1580 x2683 536870912) (=> (< 0 536870912) (= x2683 (+ (* (x2238 x2683 536870912) 536870912) (x1157 x2683 536870912))))))
(assert (= (x1049 (x450 2578352110)) 2578352110))
(assert (x2159 x2265))
(assert (= (x1235 (x435 (+ 160 x1059))) 0))
(assert (= (x1049 (x666 x1471)) x1471))
(assert (x2264 x768))
(assert (x2264 x920))
(assert (x2264 x192))
(assert (= 0 (x799 864)))
(assert (x2159 x357))
(assert (x2264 x1332))
(assert (x2248 x946))
(assert (= (x257 (x435 (+ 128 x1883))) (x1049 (x666 (x257 (x435 (+ 128 x1883)))))))
(assert (= x1411 (and x1463 x824)))
(assert (x2264 x2326))
(assert (x2264 x104))
(assert (x2264 x2597))
(assert (x1700 (x711 (x435 (+ x2495 128)))))
(assert (x2264 x2840))
(assert (x2264 x2751))
(assert (x2264 x1468))
(assert (= (=> (= x759 (= x369 0)) (and (=> (and (= (> x369 0) x1681) (not x759)) (and (=> (and x1681 (and (= (x435 (+ 32 x662)) x926) (= (x435 (+ 32 x1808)) x1362) (= (x435 (+ 64 x395)) x2803) (= (x435 (+ x395 32)) x1374) (= (or (and (> 64 x760) (= (<= x760 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x760)) x2717) (= (x668 (- x2128 x2223)) x760) (= x395 (x435 (+ 64 x1808))) (= (x435 (+ 64 x662)) x1808))) (and (=> (and (not x2717) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x760) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x760) true) (< x760 64))) x2994)) (and (=> x2994 x1373) (=> (and (and (= (< x516 x2803) x2387) (= x516 (x435 (+ x2803 64))) (= (= 0 (ite x1710 1 0)) x1694) (= x1710 (or x2387 x1984)) (= (> x516 18446744073709551615) x1984)) (not x2994)) (and (=> (not x1694) x1373) (=> (and (and (= x2212 true) (= (x2118 x2223) x1631)) x1694) (and (=> (and x2212 (and (= true x2110) (= x757 (x435 (+ 32 x2223))) (= (x2118 x757) x57))) (and (=> (not x2110) x1373) (=> x2110 x103))) (=> (not x2212) x1373))))))) (=> x2717 x1373))) (=> (not x1681) x1373))) (=> x759 x290))) x588))
(assert (x2264 x1809))
(assert (x2020 x684))
(assert (x2264 x1648))
(assert (and (x2060 x1273 16777216) (x174 x1273 16777216) (x1580 x1273 16777216) (=> (< 0 16777216) (= x1273 (+ (* (x2238 x1273 16777216) 16777216) (x1157 x1273 16777216))))))
(assert (x2264 x2081))
(assert (= (x450 32768) (x666 32768)))
(assert (x2264 x1096))
(assert (= (and x781 x2635) x24))
(assert (= x443 (and x1083 x1426)))
(assert (x463 x357))
(assert (x2264 x1274))
(assert (= (x799 x1609) 0))
(assert (= (and (not x2485) x218) x126))
(assert (x1098 x1255))
(assert (x2264 x2735))
(assert (x2951 x2044))
(assert (x2264 x2258))
(assert (=> (>= 10000 x1548) (= (x666 x1548) (x450 x1548))))
(assert (x2951 x1767))
(assert (x2264 x852))
(assert (x2264 x1520))
(assert (x18 (- x1768 x674)))
(assert (x2264 x1960))
(assert (x2264 x883))
(assert (x2264 x2857))
(assert (x1700 (x257 (x435 (+ 128 x1883)))))
(assert (x18 x674))
(assert (= x2396 (and x1901 x1673)))
(assert (= (x1049 (x666 (x2979 832))) (x2979 832)))
(assert (x2521 x2362))
(assert (x2264 x224))
(assert (and (x2060 x163 524288) (x174 x163 524288) (x1580 x163 524288) (=> (< 0 524288) (= x163 (+ (* (x2238 x163 524288) 524288) (x1157 x163 524288))))))
(assert (x2159 x2891))
(assert (= (x257 (x435 (+ 160 x1883))) (x1049 (x666 (x257 (x435 (+ 160 x1883)))))))
(assert (x2264 x1591))
(assert (x2264 x1458))
(assert (= (or (and x1527 x922) (and x368 x1858) (and x1351 x1141) (and x135 x2947) (and x904 x2279) (and x879 x2192) (and x1741 x2341)) x1434))
(assert (x2680 x2359 (x1082 2 x2371)))
(assert (= x1454 (and x2649 x1605)))
(assert (x2264 x1042))
(assert (x2159 x1785))
(assert (x2592 x1273))
(assert (x2264 x1413))
(assert (x2264 x2129))
(assert (and (x2060 x946 8388608) (x174 x946 8388608) (x1580 x946 8388608) (=> (< 0 8388608) (= x946 (+ (* (x2238 x946 8388608) 8388608) (x1157 x946 8388608))))))
(assert (and (x2060 x2381 32) (x174 x2381 32) (x1580 x2381 32) (=> (< 0 32) (= x2381 (+ (* (x2238 x2381 32) 32) (x1157 x2381 32))))))
(assert (x2629 x1067))
(assert (= (x450 114753704370624632363032878036054255364325328913606075139752535216297399631138) (x666 114753704370624632363032878036054255364325328913606075139752535216297399631138)))
(assert (= (x1235 x2489) 0))
(assert (x2159 x787))
(assert (x2264 x1502))
(assert (x2264 x2961))
(assert (x2264 x2100))
(assert (= x291 (and x1507 (not x364))))
(assert (x2264 x341))
(assert (= (x1049 (x450 2097152)) 2097152))
(assert (= x2440 (=> (and (and (= (x435 (+ x361 96)) x2417) (= (x435 (+ x1128 64)) x361) (= x34 (> x439 0)) (= x982 (x2646 x1998)) (= x1702 (x2545 x403)) (= x1784 (x435 (+ 32 x1128))) (= x2796 (x435 (+ 32 x1027))) (= (x435 (+ x361 32)) x1027) (= (x435 (+ 32 x1998)) x403)) (or (and (and (= 1 x397) (> 4294967296 x479)) x34) (and (= x439 x397) (not x34)))) x1879)))
(assert (x2264 x2851))
(assert (= 0 (x1235 x1130)))
(assert (= (x799 (x435 (+ x988 192))) 0))
(assert (x1061 x163))
(assert (= 0 (x799 (x435 (+ x2850 160)))))
(assert (x159 (ite x2072 x1667 (x54 2 x1667))))
(assert (and (x2060 x1161 67108864) (x174 x1161 67108864) (x1580 x1161 67108864) (=> (< 0 67108864) (= x1161 (+ (* (x2238 x1161 67108864) 67108864) (x1157 x1161 67108864))))))
(assert (=> (<= (x257 (x435 (+ x1883 128))) 10000) (= (x450 (x257 (x435 (+ x1883 128)))) (x666 (x257 (x435 (+ 128 x1883)))))))
(assert (x2264 x1701))
(assert (x2010 x1758 x2408))
(assert (x2264 x2703))
(assert (= (and x1476 x2585) x2702))
(assert (= (and (not x660) x779) x2201))
(assert (x1412 x1064))
(assert (x2159 x796))
(assert (x2264 x398))
(assert (x2264 x982))
(assert (= 0 (x799 x2807)))
(assert (x1001 x2315))
(assert (= (and x2939 (not x1494)) x2013))
(assert (x2264 x2568))
(assert (x2264 x1047))
(assert (= (x1049 (x666 (x2655 (x435 (+ x2415 64))))) (x2655 (x435 (+ 64 x2415)))))
(assert (x2264 x2179))
(assert (x2264 x2924))
(assert (x1247 x2714))
(assert (x2264 x2223))
(assert (x2264 x718))
(assert (x2264 x2441))
(assert (= 0 (x799 x2216)))
(assert (x2264 x1478))
(assert (x1700 (x1258 (x435 (+ x2767 160)))))
(assert (x2264 x1651))
(assert (= x505 (and x145 (not x708))))
(assert (and (x2060 x2418 128) (x174 x2418 128) (x1580 x2418 128) (=> (< 0 128) (= x2418 (+ (* (x2238 x2418 128) 128) (x1157 x2418 128))))))
(assert (x2264 x921))
(assert (= (=> (or (not x2103) x2103) x1132) x1509))
(assert (= x861 (and x42 (not x1475))))
(assert (x2951 x2977))
(assert (x2264 x1535))
(assert (= (x1235 864) 0))
(assert (= 4194304 (x1049 (x450 4194304))))
(assert (and (= 91343852333181432387730302044767688728495783936 (x1082 2 156)) (= (x1082 2 101) 2535301200456458802993406410752) (= 17179869184 (x1082 2 34)) (= (x1082 2 122) 5316911983139663491615228241121378304) (= 55213970774324510299478046898216203619608871777363092441300193790394368 (x1082 2 235)) (= 205688069665150755269371147819668813122841983204197482918576128 (x1082 2 207)) (= (x1082 2 219) 842498333348457493583344221469363458551160763204392890034487820288) (= 220855883097298041197912187592864814478435487109452369765200775161577472 (x1082 2 237)) (= 3064991081731777716716694054300618367237478244367204352 (x1082 2 181)) (= 2722258935367507707706996859454145691648 (x1082 2 131)) (= (x1082 2 151) 2854495385411919762116571938898990272765493248) (= 174224571863520493293247799005065324265472 (x1082 2 137)) (= (x1082 2 0) 1) (= 79228162514264337593543950336 (x1082 2 96)) (= 131072 (x1082 2 17)) (= 2993155353253689176481146537402947624255349848014848 (x1082 2 171)) (= (x1082 2 97) 158456325028528675187087900672) (= (x1082 2 72) 4722366482869645213696) (= (x1082 2 106) 81129638414606681695789005144064) (= 11692013098647223345629478661730264157247460343808 (x1082 2 163)) (= 26959946667150639794667015087019630673637144422540572481103610249216 (x1082 2 224)) (= (x1082 2 188) 392318858461667547739736838950479151006397215279002157056) (= (x1082 2 94) 19807040628566084398385987584) (= (x1082 2 201) 3213876088517980551083924184682325205044405987565585670602752) (= (x1082 2 119) 664613997892457936451903530140172288) (= 295147905179352825856 (x1082 2 68)) (= 5444517870735015415413993718908291383296 (x1082 2 132)) (= (x1082 2 166) 93536104789177786765035829293842113257979682750464) (= (x1082 2 2) 4) (= (x1082 2 176) 95780971304118053647396689196894323976171195136475136) (= 3618502788666131106986593281521497120414687020801267626233049500247285301248 (x1082 2 251)) (= (x1082 2 112) 5192296858534827628530496329220096) (= (x1082 2 99) 633825300114114700748351602688) (= 210624583337114373395836055367340864637790190801098222508621955072 (x1082 2 217)) (= 784637716923335095479473677900958302012794430558004314112 (x1082 2 189)) (= (x1082 2 144) 22300745198530623141535718272648361505980416) (= (x1082 2 145) 44601490397061246283071436545296723011960832) (= 696898287454081973172991196020261297061888 (x1082 2 139)) (= (x1082 2 233) 13803492693581127574869511724554050904902217944340773110325048447598592) (= 128 (x1082 2 7)) (= (x1082 2 164) 23384026197294446691258957323460528314494920687616) (= (x1082 2 195) 50216813883093446110686315385661331328818843555712276103168) (= (x1082 2 81) 2417851639229258349412352) (= 28269553036454149273332760011886696253239742350009903329945699220681916416 (x1082 2 244)) (= 42535295865117307932921825928971026432 (x1082 2 125)) (= (x1082 2 232) 6901746346790563787434755862277025452451108972170386555162524223799296) (= (x1082 2 230) 1725436586697640946858688965569256363112777243042596638790631055949824) (= 302231454903657293676544 (x1082 2 78)) (= (x1082 2 104) 20282409603651670423947251286016) (= (x1082 2 71) 2361183241434822606848) (= (x1082 2 124) 21267647932558653966460912964485513216) (= (x1082 2 158) 365375409332725729550921208179070754913983135744) (= (x1082 2 157) 182687704666362864775460604089535377456991567872) (= 178405961588244985132285746181186892047843328 (x1082 2 147)) (= 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1082 2 248)) (= 766247770432944429179173513575154591809369561091801088 (x1082 2 179)) (= 2199023255552 (x1082 2 41)) (= (x1082 2 134) 21778071482940061661655974875633165533184) (= 46768052394588893382517914646921056628989841375232 (x1082 2 165)) (= 2251799813685248 (x1082 2 51)) (= 268435456 (x1082 2 28)) (= (x1082 2 113) 10384593717069655257060992658440192) (= (x1082 2 52) 4503599627370496) (= (x1082 2 155) 45671926166590716193865151022383844364247891968) (= 47890485652059026823698344598447161988085597568237568 (x1082 2 175)) (= 102844034832575377634685573909834406561420991602098741459288064 (x1082 2 206)) (= 52656145834278593348959013841835216159447547700274555627155488768 (x1082 2 215)) (= (x1082 2 141) 2787593149816327892691964784081045188247552) (= 604462909807314587353088 (x1082 2 79)) (= 1329227995784915872903807060280344576 (x1082 2 120)) (= (x1082 2 87) 154742504910672534362390528) (= 196159429230833773869868419475239575503198607639501078528 (x1082 2 187)) (= 431359146674410236714672241392314090778194310760649159697657763987456 (x1082 2 228)) (= 151115727451828646838272 (x1082 2 77)) (= 8589934592 (x1082 2 33)) (= 67108864 (x1082 2 26)) (= (x1082 2 37) 137438953472) (= (x1082 2 9) 512) (= (x1082 2 70) 1180591620717411303424) (= 348449143727040986586495598010130648530944 (x1082 2 138)) (= 1125899906842624 (x1082 2 50)) (= 39614081257132168796771975168 (x1082 2 95)) (= (x1082 2 241) 3533694129556768659166595001485837031654967793751237916243212402585239552) (= (x1082 2 148) 356811923176489970264571492362373784095686656) (= 822752278660603021077484591278675252491367932816789931674304512 (x1082 2 209)) (= (x1082 2 109) 649037107316853453566312041152512) (= 13479973333575319897333507543509815336818572211270286240551805124608 (x1082 2 223)) (= 5708990770823839524233143877797980545530986496 (x1082 2 152)) (= 6129982163463555433433388108601236734474956488734408704 (x1082 2 182)) (= 68719476736 (x1082 2 36)) (= (x1082 2 140) 1393796574908163946345982392040522594123776) (= (x1082 2 61) 2305843009213693952) (= (x1082 2 220) 1684996666696914987166688442938726917102321526408785780068975640576) (= 288230376151711744 (x1082 2 58)) (= (x1082 2 161) 2923003274661805836407369665432566039311865085952) (= (x1082 2 247) 226156424291633194186662080095093570025917938800079226639565593765455331328) (= 1496577676626844588240573268701473812127674924007424 (x1082 2 170)) (= 1606938044258990275541962092341162602522202993782792835301376 (x1082 2 200)) (= 1645504557321206042154969182557350504982735865633579863348609024 (x1082 2 210)) (= 6582018229284824168619876730229402019930943462534319453394436096 (x1082 2 212)) (= (x1082 2 203) 12855504354071922204335696738729300820177623950262342682411008) (= 22835963083295358096932575511191922182123945984 (x1082 2 154)) (= 5846006549323611672814739330865132078623730171904 (x1082 2 162)) (= 38685626227668133590597632 (x1082 2 85)) (= 411376139330301510538742295639337626245683966408394965837152256 (x1082 2 208)) (= 37778931862957161709568 (x1082 2 75)) (= (x1082 2 13) 8192) (= 23945242826029513411849172299223580994042798784118784 (x1082 2 174)) (= 2097152 (x1082 2 21)) (= (x1082 2 12) 4096) (= 1073741824 (x1082 2 30)) (= 16777216 (x1082 2 24)) (= (x1082 2 32) 4294967296) (= 11972621413014756705924586149611790497021399392059392 (x1082 2 173)) (= (x1082 2 142) 5575186299632655785383929568162090376495104) (= 9903520314283042199192993792 (x1082 2 93)) (= (x1082 2 202) 6427752177035961102167848369364650410088811975131171341205504) (= (x1082 2 76) 75557863725914323419136) (= (x1082 2 102) 5070602400912917605986812821504) (= (x1082 2 240) 1766847064778384329583297500742918515827483896875618958121606201292619776) (= (x1082 2 213) 13164036458569648337239753460458804039861886925068638906788872192) (= (x1082 2 172) 5986310706507378352962293074805895248510699696029696) (= 9444732965739290427392 (x1082 2 73)) (= 549755813888 (x1082 2 39)) (= 401734511064747568885490523085290650630550748445698208825344 (x1082 2 198)) (= 36893488147419103232 (x1082 2 65)) (= (x1082 2 57) 144115188075855872) (= 1298074214633706907132624082305024 (x1082 2 110)) (= (x1082 2 123) 10633823966279326983230456482242756608) (= (x1082 2 10) 1024) (= 35184372088832 (x1082 2 45)) (= 14134776518227074636666380005943348126619871175004951664972849610340958208 (x1082 2 243)) (= (x1082 2 194) 25108406941546723055343157692830665664409421777856138051584) (= 33554432 (x1082 2 25)) (= (x1082 2 135) 43556142965880123323311949751266331066368) (= 12554203470773361527671578846415332832204710888928069025792 (x1082 2 193)) (= 9671406556917033397649408 (x1082 2 83)) (= 166153499473114484112975882535043072 (x1082 2 117)) (= 3138550867693340381917894711603833208051177722232017256448 (x1082 2 191)) (= 89202980794122492566142873090593446023921664 (x1082 2 146)) (= (x1082 2 48) 281474976710656) (= (x1082 2 108) 324518553658426726783156020576256) (= 4398046511104 (x1082 2 42)) (= (x1082 2 218) 421249166674228746791672110734681729275580381602196445017243910144) (= (x1082 2 222) 6739986666787659948666753771754907668409286105635143120275902562304) (= (x1082 2 221) 3369993333393829974333376885877453834204643052817571560137951281152) (= (x1082 2 98) 316912650057057350374175801344) (= 11150372599265311570767859136324180752990208 (x1082 2 143)) (= 748288838313422294120286634350736906063837462003712 (x1082 2 169)) (= 8388608 (x1082 2 23)) (= 862718293348820473429344482784628181556388621521298319395315527974912 (x1082 2 229)) (= (x1082 2 1) 2) (= (x1082 2 54) 18014398509481984) (= (x1082 2 22) 4194304) (= (x1082 2 116) 83076749736557242056487941267521536) (= 140737488355328 (x1082 2 47)) (= (x1082 2 111) 2596148429267413814265248164610048) (= 34359738368 (x1082 2 35)) (= (x1082 2 225) 53919893334301279589334030174039261347274288845081144962207220498432) (= 87112285931760246646623899502532662132736 (x1082 2 136)) (= (x1082 2 91) 2475880078570760549798248448) (= 28948022309329048855892746252171976963317496166410141009864396001978282409984 (x1082 2 254)) (= (x1082 2 69) 590295810358705651712) (= (x1082 2 90) 1237940039285380274899124224) (= (x1082 2 19) 524288) (= (x1082 2 196) 100433627766186892221372630771322662657637687111424552206336) (= (x1082 2 89) 618970019642690137449562112) (= 1809251394333065553493296640760748560207343510400633813116524750123642650624 (x1082 2 250)) (= (x1082 2 129) 680564733841876926926749214863536422912) (= (x1082 2 128) 340282366920938463463374607431768211456) (= 105312291668557186697918027683670432318895095400549111254310977536 (x1082 2 216)) (= (x1082 2 231) 3450873173395281893717377931138512726225554486085193277581262111899648) (= (x1082 2 159) 730750818665451459101842416358141509827966271488) (= (x1082 2 5) 32) (= 57896044618658097711785492504343953926634992332820282019728792003956564819968 (x1082 2 255)) (= (x1082 2 227) 215679573337205118357336120696157045389097155380324579848828881993728) (= 1267650600228229401496703205376 (x1082 2 100)) (= 383123885216472214589586756787577295904684780545900544 (x1082 2 178)) (= (x1082 2 249) 904625697166532776746648320380374280103671755200316906558262375061821325312) (= (x1082 2 38) 274877906944) (= (x1082 2 40) 1099511627776) (= (x1082 2 130) 1361129467683753853853498429727072845824) (= (x1082 2 31) 2147483648) (= 110427941548649020598956093796432407239217743554726184882600387580788736 (x1082 2 236)) (= (x1082 2 14) 16384) (= (x1082 2 11) 2048) (= (x1082 2 121) 2658455991569831745807614120560689152) (= (x1082 2 18) 262144) (= (x1082 2 55) 36028797018963968) (= 7067388259113537318333190002971674063309935587502475832486424805170479104 (x1082 2 242)) (= (x1082 2 238) 441711766194596082395824375185729628956870974218904739530401550323154944) (= 803469022129495137770981046170581301261101496891396417650688 (x1082 2 199)) (= 1461501637330902918203684832716283019655932542976 (x1082 2 160)) (= (x1082 2 15) 32768) (= (x1082 2 80) 1208925819614629174706176) (= (x1082 2 62) 4611686018427387904) (= (x1082 2 239) 883423532389192164791648750371459257913741948437809479060803100646309888) (= (x1082 2 63) 9223372036854775808) (= (x1082 2 126) 85070591730234615865843651857942052864) (= (x1082 2 20) 1048576) (= 98079714615416886934934209737619787751599303819750539264 (x1082 2 186)) (= 187072209578355573530071658587684226515959365500928 (x1082 2 167)) (= 14474011154664524427946373126085988481658748083205070504932198000989141204992 (x1082 2 253)) (= (x1082 2 190) 1569275433846670190958947355801916604025588861116008628224) (= 191561942608236107294793378393788647952342390272950272 (x1082 2 177)) (= 4951760157141521099596496896 (x1082 2 92)) (= (x1082 2 56) 72057594037927936) (= (x1082 2 153) 11417981541647679048466287755595961091061972992) (= 56539106072908298546665520023773392506479484700019806659891398441363832832 (x1082 2 245)) (= 309485009821345068724781056 (x1082 2 88)) (= (x1082 2 103) 10141204801825835211973625643008) (= 20769187434139310514121985316880384 (x1082 2 114)) (= 40564819207303340847894502572032 (x1082 2 105)) (= (x1082 2 168) 374144419156711147060143317175368453031918731001856) (= (x1082 2 127) 170141183460469231731687303715884105728) (= 1532495540865888858358347027150309183618739122183602176 (x1082 2 180)) (= (x1082 2 59) 576460752303423488) (= 12259964326927110866866776217202473468949912977468817408 (x1082 2 183)) (= (x1082 2 185) 49039857307708443467467104868809893875799651909875269632) (= (x1082 2 184) 24519928653854221733733552434404946937899825954937634816) (= 9007199254740992 (x1082 2 53)) (= (x1082 2 3) 8) (= 65536 (x1082 2 16)) (= 18889465931478580854784 (x1082 2 74)) (= (x1082 2 118) 332306998946228968225951765070086144) (= (x1082 2 204) 25711008708143844408671393477458601640355247900524685364822016) (= (x1082 2 29) 536870912) (= (x1082 2 115) 41538374868278621028243970633760768) (= (x1082 2 149) 713623846352979940529142984724747568191373312) (= 162259276829213363391578010288128 (x1082 2 107)) (= 562949953421312 (x1082 2 49)) (= 26328072917139296674479506920917608079723773850137277813577744384 (x1082 2 214)) (= (x1082 2 234) 27606985387162255149739023449108101809804435888681546220650096895197184) (= (x1082 2 8) 256) (= (x1082 2 6) 64) (= 6277101735386680763835789423207666416102355444464034512896 (x1082 2 192)) (= (x1082 2 205) 51422017416287688817342786954917203280710495801049370729644032) (= (x1082 2 150) 1427247692705959881058285969449495136382746624) (= (x1082 2 64) 18446744073709551616) (= 19342813113834066795298816 (x1082 2 84)) (= 73786976294838206464 (x1082 2 66)) (= 147573952589676412928 (x1082 2 67)) (= (x1082 2 197) 200867255532373784442745261542645325315275374222849104412672) (= 77371252455336267181195264 (x1082 2 86)) (= (x1082 2 252) 7237005577332262213973186563042994240829374041602535252466099000494570602496) (= 134217728 (x1082 2 27)) (= (x1082 2 46) 70368744177664) (= (x1082 2 246) 113078212145816597093331040047546785012958969400039613319782796882727665664) (= (x1082 2 82) 4835703278458516698824704) (= 8796093022208 (x1082 2 43)) (= 3291009114642412084309938365114701009965471731267159726697218048 (x1082 2 211)) (= (x1082 2 4) 16) (= (x1082 2 133) 10889035741470030830827987437816582766592) (= 17592186044416 (x1082 2 44)) (= 1152921504606846976 (x1082 2 60)) (= 107839786668602559178668060348078522694548577690162289924414440996864 (x1082 2 226))))
(assert (x1700 (x257 (x435 (+ x1883 64)))))
(assert (x2264 x2141))
(assert (x2264 x2176))
(assert (x2951 x742))
(assert (x2264 x1659))
(assert (x2264 x1830))
(assert (x2264 x309))
(assert (x2264 x1471))
(assert (= (x711 (x435 (+ x2495 32))) (x1049 (x666 (x711 (x435 (+ 32 x2495)))))))
(assert (x2264 x79))
(assert (and (x2060 x1767 64) (x174 x1767 64) (x1580 x1767 64) (=> (< 0 64) (= x1767 (+ (* (x2238 x1767 64) 64) (x1157 x1767 64))))))
(assert (x2951 (ite (> 256 x579) (x1082 2 x579) 0)))
(assert (x2629 67108864))
(assert (x2629 x1767))
(assert (= x1800 (and (not x803) x2596)))
(assert (x2951 1048576))
(assert (x2264 x783))
(assert (= x2259 (and x2470 x2771)))
(assert (= x2711 (=> (and (and (= x266 (x435 (+ x2184 96))) (= (x435 (+ x2184 32)) x385) (= (x2412 x1307) x2531) (= x1621 (x326 x2208)) (= (> x1035 0) x1530) (= x2258 (x435 (+ 32 x1340))) (= x2208 (x435 (+ 32 x1307))) (= x2184 (x435 (+ 64 x1340))) (= (x435 (+ 32 x385)) x1150)) (or (and (and (= 1 x2970) (> 4294967296 x2167)) x1530) (and (= x2970 x1035) (not x1530)))) x1935)))
(assert (x2951 x576))
(assert (and (x2060 x946 4294967296) (x174 x946 4294967296) (x1580 x946 4294967296) (=> (< 0 4294967296) (= x946 (+ (* (x2238 x946 4294967296) 4294967296) (x1157 x946 4294967296))))))
(assert (x2264 x863))
(assert (= x453 (or x1916 x675)))
(assert (x2264 x503))
(assert (= 0 (x799 x2850)))
(assert (= x2797 (and x639 (not x253))))
(assert (= (x2414 x2359 x2371) (ite (> 256 x2371) (x2238 x2359 (x1082 2 x2371)) 0)))
(assert (= 0 (x1235 x470)))
(assert (x2264 x1784))
(assert (x2159 x1997))
(assert (x2629 524288))
(assert (x2264 x1781))
(assert (=> (>= 10000 (x2556 896)) (= (x450 (x2556 896)) (x666 (x2556 896)))))
(assert (= (x2238 x1149 26959946667150639794667015087019630673637144422540572481103610249216) (x2414 x1149 224)))
(assert (= (and (not x532) x1414) x1459))
(assert (x2951 2))
(assert (=> (>= 10000 (x2979 832)) (= (x450 (x2979 832)) (x666 (x2979 832)))))
(assert (x1700 (x2917 (x435 (+ x2850 64)))))
(assert (x2020 x1618))
(assert (x2159 x334))
(assert (and (x2060 x946 33554432) (x174 x946 33554432) (x1580 x946 33554432) (=> (< 0 33554432) (= x946 (+ (* (x2238 x946 33554432) 33554432) (x1157 x946 33554432))))))
(assert (x643 x1968))
(assert (x2159 x1358))
(assert (=> (>= 10000 (x1258 x2767)) (= (x450 (x1258 x2767)) (x666 (x1258 x2767)))))
(assert (x2264 x52))
(assert (x2951 (ite (< x121 256) (x1082 2 x121) 0)))
(assert (and (x2060 x1282 4294967296) (x174 x1282 4294967296) (x1580 x1282 4294967296) (=> (< 0 4294967296) (= x1282 (+ (* (x2238 x1282 4294967296) 4294967296) (x1157 x1282 4294967296))))))
(assert (x1395 x2891))
(assert (= (or x170 x2760) x2445))
(assert (= x2563 (x1049 (x666 x2563))))
(assert (x729 x2421))
(assert (=> (<= x1006 10000) (= (x666 x1006) (x450 x1006))))
(assert (= (and (not x123) x1639) x1931))
(assert (x1700 (x2115 x988)))
(assert (= x1499 (and x286 x333)))
(assert (= 0 (x799 x2764)))
(assert (x2159 x279))
(assert (x2264 x1221))
(assert (x2264 x1637))
(assert (x2264 x1615))
(assert (x2951 x2107))
(assert (x2159 x2403))
(assert (= (x666 16384) (x450 16384)))
(assert (= (x101 1 x912) (x144 (ite (> 256 x912) (x1082 2 x912) 0))))
(assert (x2264 x2395))
(assert (x2264 x1941))
(assert (x2747 x946))
(assert (= (=> (= (= x867 (x666 x1066)) x1240) (and (=> (not x1240) x1108) (=> (and (and (= (x273 384) x809) (= x2501 (or (> x335 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x335 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x335))))) x1240) (and (=> (and (not x2501) (= x901 (or (and (< x335 64) (= true (<= x335 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x335 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> x901 x1108) (=> (and (not x901) (and (= (= (ite x2012 1 0) 0) x429) (= x1016 (> x2234 18446744073709551615)) (= x2012 (or x171 x1016)) (= (x435 (+ 64 x672)) x2234) (= x171 (> x672 x2234)))) (and (=> (and x429 (and (= x1332 (x225 x2136)) (= x21 true))) (and (=> (not x21) x1108) (=> (and x21 (and (= true x1188) (= (x435 (+ x2136 32)) x2032) (= x1653 (x225 x2032)))) (and (=> (and (and (or (and (not x1881) (= x651 x1881)) (and x1881 (and (= (= 0 x1418) x651) (= (x2605 x504) x1418)))) (and (= (x435 (+ 32 x672)) x504) (= x1881 (= x590 0)) (= x1182 (x435 (+ 32 x2234))) (= x590 (x2605 x672)) (= x2139 (x435 (+ 64 x2234))))) x1188) x1940) (=> (not x1188) x1108))))) (=> (not x429) x1108))))) (=> x2501 x1108))))) x663))
(assert (x2264 x369))
(assert (= (x666 4294967295) (x450 4294967295)))
(assert (= (x666 17805874995975841540914202342111839520379459829704422454583296818431106115052) (x450 17805874995975841540914202342111839520379459829704422454583296818431106115052)))
(assert (= (=> (= (= x2401 0) x2554) (and (=> (and (not x2554) (= (= 1 x2401) x966)) (and (=> (and (= (= 2 x2401) x2955) (not x966)) (and (=> (and (= x1066 4150754238950871990496398701790393298955498680186071184456654025675166573995) x2955) x248) (=> (and (not x2955) (= x980 (= x2401 3))) (and (=> (and x980 (= 33151575924830116202563342662843668884515279537950960006535658598482582730581 x1066)) x248) (=> (and (= (= x2401 4) x343) (not x980)) (and (=> (and (= 114753704370624632363032878036054255364325328913606075139752535216297399631138 x1066) x343) x248) (=> (and (not x343) (= (= 5 x2401) x386)) (and (=> (and (= 28638458499813953387342862576031799503806270899767427533215561966834731185108 x1066) x386) x248) (=> (and (= (= x2401 6) x1554) (not x386)) (and (=> (and (not x1554) (= (= x2401 7) x2309)) (and (=> (and x2309 (= x1066 108844151692519000452708220636741476915984311376032675733692602838339372004332)) x248) (=> (and (not x2309) (= (= 8 x2401) x945)) (and (=> (and (= 1605692210171759198593486134459926266631754590294699023644268857716152816374 x1066) x945) x248) (=> (and (= x1193 (= 9 x2401)) (not x945)) (and (=> (and (= (= x2401 10) x565) (not x1193)) (and (=> (and (= x1066 14420127946689298182407702599477844824481568136069666058437024779945048596988) x565) x248) (=> (and (= x2361 (= x2401 11)) (not x565)) (and (=> (and (not x2361) (= x2033 (= x2401 12))) (and (=> (and (not x2033) (= x1380 (= x2401 13))) (and (=> (not x1380) x1108) (=> (and x1380 (= 63660573315282705801001086741532748704021327057287729713677662699241823960296 x1066)) x248))) (=> (and x2033 (= 107484826361731917731093150060856243723248667544379670577376733939481877207500 x1066)) x248))) (=> (and (= 43823624232495526908365875064542283096883394343879224506338352425602196996609 x1066) x2361) x248))))) (=> (and (= x1066 19065496825945555802944500459784659360370071723095918844459983366851717029121) x1193) x248))))))) (=> (and x1554 (= 84684860692432345508815850111325460890268974937005065116925575048889747129104 x1066)) x248))))))))))) (=> (and (= 32685727167770504628014968172621197755414673299042699869126213917920315318119 x1066) x966) x248))) (=> (and (= x1066 105015941155238675870317744051118741627952855755073633622858957636564748080881) x2554) x248))) x1610))
(assert (x2264 x397))
(assert (x2629 x415))
(assert (and (x2060 x946 16777216) (x174 x946 16777216) (x1580 x946 16777216) (=> (< 0 16777216) (= x946 (+ (* (x2238 x946 16777216) 16777216) (x1157 x946 16777216))))))
(assert (x2264 x1819))
(assert (x2264 x342))
(assert (= 0 (x799 x3002)))
(assert (x2264 x815))
(assert (= (x257 (x435 (+ x1883 192))) (x1049 (x666 (x257 (x435 (+ 192 x1883)))))))
(assert (x2264 x2963))
(assert (= (and x1788 x945) x1415))
(assert (x2159 x2362))
(assert (x431 x2226))
(assert (x1531 x946))
(assert (x2264 x1662))
(assert (= (and x2649 (not x1605)) x1965))
(assert (and (x2060 x2743 4294967296) (x174 x2743 4294967296) (x1580 x2743 4294967296) (=> (< 0 4294967296) (= x2743 (+ (* (x2238 x2743 4294967296) 4294967296) (x1157 x2743 4294967296))))))
(assert (x2264 x687))
(assert (x894 x946))
(assert (x894 x576))
(assert (x431 x2658))
(assert (x2264 x2584))
(assert (x2264 x758))
(assert (= x841 (and x42 x1475)))
(assert (x2264 x1464))
(assert (x2264 x1169))
(assert (= x1951 (=> (and (= x2483 (x2453 4294967295 x210)) (= (x2453 4294967295 x2518) x2352) (= x674 (x101 1 x121)) (= x1714 (< 0 x2483))) (and (=> (not x1714) x1108) (=> (and (and (= x2810 (x2453 4294967295 x210)) (= (ite (= 0 x1920) 0 1) x342) (= (x1157 x2352 x2483) x1272) (= (x2453 4294967295 x1272) x1920) (= x856 (> x2810 0)) (= x169 (x2453 4294967295 x2518))) x1714) (and (=> (and (and (= x2841 (x2238 x169 x2810)) (= x1732 (x2453 4294967295 x2841)) (= (< x1854 x1732) x354) (= (x668 (- 4294967295 x342)) x1854)) x856) (and (=> (and (and (= (x435 (+ x342 x1732)) x181) (= x658 (ite (> x612 x1185) 1 0)) (= x612 (x2453 4294967295 x181)) (= (= x674 0) x728) (= x1139 (x2453 x2129 x658)) (= x2129 (ite (not x728) 1 0)) (= x1185 (x2238 4294967295 x674)) (= x350 (= 0 x1139))) (not x354)) (and (=> (not x350) x1108) (=> (and x350 (and (= (< 2 x2176) x1672) (= (x2453 4294967295 x2530) x2176) (= (x144 (x2427 x674 x612)) x2530))) (and (=> x1672 x1900) (=> (and (= 1 x263) (not x1672)) x2075))))) (=> x354 x1108))) (=> (not x856) x1108)))))))
(assert (x245 x315))
(assert (= x870 (x1049 (x666 x870))))
(assert (=> (<= x1471 10000) (= (x450 x1471) (x666 x1471))))
(assert (x2747 x1110))
(assert (x1023 x741))
(assert (x2264 x1920))
(assert (x2629 x2703))
(assert (x2264 x493))
(assert (x729 x1493))
(assert (x2951 x540))
(assert (and (x2060 x1856 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x174 x1856 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x1580 x1856 21888242871839275222246405745257275088696311157297823662689037894645226208583) (=> (< 0 21888242871839275222246405745257275088696311157297823662689037894645226208583) (= x1856 (+ (* (x2238 x1856 21888242871839275222246405745257275088696311157297823662689037894645226208583) 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x1157 x1856 21888242871839275222246405745257275088696311157297823662689037894645226208583))))))
(assert (= (=> (= x2947 (= x718 0)) (and (=> (and (= (< 0 x718) x2485) (not x2947)) (and (=> (and (and (= (x435 (+ x510 64)) x2065) (= (or (> x1818 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1818)) (> 128 x1818))) x627) (= x37 (x435 (+ 32 x2065))) (= (x435 (+ 32 x510)) x509) (= (x435 (+ x2935 64)) x1222) (= (x435 (+ 32 x2935)) x1865) (= (x435 (+ x2065 64)) x2935)) x2485) (and (=> (and (not x627) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1818)) (> 128 x1818)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1818)) x706)) (and (=> (and (not x706) (and (= x2868 (or x702 x2245)) (= x2245 (< 18446744073709551615 x2933)) (= (< x2933 x1222) x702) (= x781 (= 0 (ite x2868 1 0))) (= (x435 (+ 64 x1222)) x2933))) (and (=> (and (= (and (= (<= x519 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< 163 x519)) x1177) x781) (and (=> (and x1177 (and (= x2203 (or x2880 x721)) (= (> x1249 18446744073709551615) x721) (= (x435 (+ 64 x2933)) x1249) (= (> x2933 x1249) x2880) (= (= (ite x2203 1 0) 0) x1605))) (and (=> (and x1605 (= x2286 (< x519 196))) (and (=> x2286 x1108) (=> (and (not x2286) (and (= x2114 (x225 132)) (= x49 true))) (and (=> (not x49) x1108) (=> x49 x971))))) (=> (not x1605) x1108))) (=> (not x1177) x1108))) (=> (not x781) x1108))) (=> x706 x1108))) (=> x627 x1108))) (=> (not x2485) x1108))) (=> x2947 x2808))) x2741))
(assert (x2264 x1687))
(assert (x962 x2044))
(assert (x2264 x2011))
(assert (x2951 2048))
(assert (= (and x433 (not x1649)) x1410))
(assert (x2264 x2346))
(assert (x2264 x713))
(assert (= (x1049 (x666 (x2979 928))) (x2979 928)))
(assert (x209 x1650))
(assert (x2492 x1833))
(assert (x2264 x1181))
(assert (= x2503 (and x2006 (not x109))))
(assert (and (x2060 x1076 536870912) (x174 x1076 536870912) (x1580 x1076 536870912) (=> (< 0 536870912) (= x1076 (+ (* (x2238 x1076 536870912) 536870912) (x1157 x1076 536870912))))))
(assert (x2264 x2365))
(assert (= 114753704370624632363032878036054255364325328913606075139752535216297399631138 (x1049 (x450 114753704370624632363032878036054255364325328913606075139752535216297399631138))))
(assert (=> (<= (x2115 (x435 (+ 128 x988))) 10000) (= (x450 (x2115 (x435 (+ 128 x988)))) (x666 (x2115 (x435 (+ x988 128)))))))
(assert (= (and x491 x1201) x908))
(assert (x2264 x2493))
(assert (= x421 (and x1815 x1627)))
(assert (x2264 x988))
(assert (and (x2060 x981 4294967296) (x174 x981 4294967296) (x1580 x981 4294967296) (=> (< 0 4294967296) (= x981 (+ (* (x2238 x981 4294967296) 4294967296) (x1157 x981 4294967296))))))
(assert (x2629 x2867))
(assert (and (x2060 x1273 33554432) (x174 x1273 33554432) (x1580 x1273 33554432) (=> (< 0 33554432) (= x1273 (+ (* (x2238 x1273 33554432) 33554432) (x1157 x1273 33554432))))))
(assert (x2951 x918))
(assert (= (and x229 x1459) x1085))
(assert (x2264 x2849))
(assert (and (x2060 x946 2147483648) (x174 x946 2147483648) (x1580 x946 2147483648) (=> (< 0 2147483648) (= x946 (+ (* (x2238 x946 2147483648) 2147483648) (x1157 x946 2147483648))))))
(assert (= x2322 (and x1786 x2884)))
(assert (x2264 x57))
(assert (x2264 x1272))
(assert (let ((x399 (x1082 2 x121))) (and (x1600 1 x399) (x2853 1 x399) (x831 1 x399) (and (= (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935) x399) (- (* 1 x399) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x399))) (= (- (* (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935) (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (x2427 1 (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* 1 x399) (x2427 1 x399)) (x2434 1 x399) (x795 1 x399))))
(assert (x2264 x2378))
(assert (= (x799 (x435 (+ 64 x2495))) 0))
(assert (x2289 x946))
(assert (= x1654 (and (not x353) x1563)))
(assert (= x1388 (and x2069 x354)))
(assert (x1707 x2836))
(assert (x2264 x2172))
(assert (x2264 x1213))
(assert (= (x666 11559732032986387107991004021392285783925812861821192530917403151452391805634) (x450 11559732032986387107991004021392285783925812861821192530917403151452391805634)))
(assert (x2629 x1148))
(assert (= (x666 1605692210171759198593486134459926266631754590294699023644268857716152816374) (x450 1605692210171759198593486134459926266631754590294699023644268857716152816374)))
(assert (x2264 x401))
(assert (x2264 x1726))
(assert (x2264 x686))
(assert (and (x2060 x2152 262144) (x174 x2152 262144) (x1580 x2152 262144) (=> (< 0 262144) (= x2152 (+ (* (x2238 x2152 262144) 262144) (x1157 x2152 262144))))))
(assert (x2264 x2683))
(assert (x2264 x2846))
(assert (= x26 (or x1394 x340)))
(assert (x729 x1479))
(assert (x2264 x2620))
(assert (x2264 x2401))
(assert (x2264 x670))
(assert (x2629 x790))
(assert (x2951 x974))
(assert (x2629 x2129))
(assert (= (x1235 x2904) 0))
(assert (x2264 x1926))
(assert (= x1000 (and x2982 (not x898))))
(assert (x2264 x2481))
(assert (x2264 x2966))
(assert (x2264 x1281))
(assert (x2264 x1928))
(assert (x1921 x2915))
(assert (x2264 x2243))
(assert (x2264 x492))
(assert (= x2619 (and x1085 (not x2407))))
(assert (=> (>= 10000 (x711 (x435 (+ 64 x2495)))) (= (x450 (x711 (x435 (+ x2495 64)))) (x666 (x711 (x435 (+ 64 x2495)))))))
(assert (x2264 x1170))
(assert (x2951 128))
(assert (= x1902 (and (=> (and x1652 (and (= x694 x2813) (= (x435 (+ x1585 32)) x1586) (= x1977 x1585) (= x694 (x435 (+ x1585 64))))) x1663) (=> (and (and (= (x1135 x1044) x1330) (= (x435 (+ x1585 64)) x1874) (= (x2275 x2171) x2846) (= x123 (< 21888242871839275222246405745257275088696311157297823662689037894645226208583 x362)) (= (x1157 x2846 21888242871839275222246405745257275088696311157297823662689037894645226208583) x362) (= (x435 (+ 32 x1585)) x2366)) (not x1652)) (and (=> x123 x1373) (=> (and (and (= x1977 x1585) (= x1874 x2813) (= x783 (x668 (- 21888242871839275222246405745257275088696311157297823662689037894645226208583 x362)))) (not x123)) x1663))))))
(assert (x2264 x2876))
(assert (and (x2060 x1273 4194304) (x174 x1273 4194304) (x1580 x1273 4194304) (=> (< 0 4194304) (= x1273 (+ (* (x2238 x1273 4194304) 4194304) (x1157 x1273 4194304))))))
(assert (= x1414 (or x2477 x683)))
(assert (x2264 x2869))
(assert (x2264 x476))
(assert (x894 x881))
(assert (= (and x1635 (not x1602)) x771))
(assert (and (x1600 256 x654) (x2853 256 x654) (x831 256 x654) (and (= (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x654) (- (* 256 x654) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x654))) (= (- (* (- x654 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x654 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x654 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x654 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (x2427 256 (- x654 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* 256 x654) (x2427 256 x654)) (x2434 256 x654) (x795 256 x654)))
(assert (x2159 x684))
(assert (x2264 x2476))
(assert (x2264 x502))
(assert (x2264 x1076))
(assert (x2264 x2609))
(assert (= x318 (and x2820 (not x1657))))
(assert (=> (<= (x257 (x435 (+ 160 x1883))) 10000) (= (x666 (x257 (x435 (+ x1883 160)))) (x450 (x257 (x435 (+ x1883 160)))))))
(assert (x2264 x1865))
(assert (x2159 x2314))
(assert (x159 (ite x1122 x1792 (x54 2 x1792))))
(assert (x2264 x1641))
(assert (= x2186 (x1049 (x666 x2186))))
(assert (x894 x181))
(assert (= (and (=> (and x303 (and (= x2500 (x435 (+ x1216 64))) (= x1117 x1216) (= x1137 x2500) (= (x435 (+ 32 x1216)) x247))) x2551) (=> (and (and (= (x82 x1274) x892) (= (x435 (+ 32 x1216)) x735) (= (x2468 x2523) x2323) (= x1298 (x1157 x892 21888242871839275222246405745257275088696311157297823662689037894645226208583)) (= x1031 (x435 (+ x1216 64))) (= x794 (< 21888242871839275222246405745257275088696311157297823662689037894645226208583 x1298))) (not x303)) (and (=> x794 x1373) (=> (and (not x794) (and (= x1117 x1216) (= (x668 (- 21888242871839275222246405745257275088696311157297823662689037894645226208583 x1298)) x2246) (= x1137 x1031))) x2551)))) x2642))
(assert (= (x666 281474976710655) (x450 281474976710655)))
(assert (x2264 x367))
(assert (= x2847 (and x1070 (not x856))))
(assert (x2264 x1387))
(assert (x2264 x1889))
(assert (x2264 x515))
(assert (= x2480 (and x2094 x1183)))
(assert (= (and (not x2228) x915) x106))
(assert (x2264 x2525))
(assert (x2680 x2609 x2397))
(assert (x2264 x1252))
(assert (= x234 (and x2507 x696)))
(assert (x2264 x788))
(assert (x2264 x2782))
(assert (= (and x2165 (not x1293)) x1841))
(assert (and (x2060 x1468 2) (x174 x1468 2) (x1580 x1468 2) (=> (< 0 2) (= x1468 (+ (* (x2238 x1468 2) 2) (x1157 x1468 2))))))
(assert (x2264 x1184))
(assert (and (x1600 256 x1493) (x2853 256 x1493) (x831 256 x1493) (and (= (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x1493) (- (* 256 x1493) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1493))) (= (- (* (- x1493 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1493 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x1493 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x1493 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (x2427 256 (- x1493 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* 256 x1493) (x2427 256 x1493)) (x2434 256 x1493) (x795 256 x1493)))
(assert (= x1948 (and x1243 (not x44))))
(assert (x2159 x104))
(assert (x2159 32))
(assert (x2264 x2316))
(assert (x2629 8))
(assert (= (and (not x2332) x2161) x2641))
(assert (x2264 x444))
(assert (x2264 x415))
(assert (x2629 x1903))
(assert (and (x2060 x1273 32768) (x174 x1273 32768) (x1580 x1273 32768) (=> (< 0 32768) (= x1273 (+ (* (x2238 x1273 32768) 32768) (x1157 x1273 32768))))))
(assert (and (x2060 x596 268435456) (x174 x596 268435456) (x1580 x596 268435456) (=> (< 0 268435456) (= x596 (+ (* (x2238 x596 268435456) 268435456) (x1157 x596 268435456))))))
(assert (x2264 x2803))
(assert (= x1577 (=> (and (= (x2453 4294967295 x1775) x2774) (= (x101 1 x579) x1190) (= (x2453 4294967295 x540) x2983) (= (< 0 x2774) x1424)) (and (=> (not x1424) x1373) (=> (and (and (= x1479 (x2453 4294967295 x540)) (= (x1157 x2983 x2774) x1430) (= x125 (x2453 4294967295 x1430)) (= x1947 (ite (= x125 0) 0 1)) (= (x2453 4294967295 x1775) x1186) (= x2902 (< 0 x1186))) x1424) (and (=> (and (and (= x1293 (< x313 x566)) (= x566 (x2453 4294967295 x742)) (= x742 (x2238 x1479 x1186)) (= x313 (x668 (- 4294967295 x1947)))) x2902) (and (=> x1293 x1373) (=> (and (and (= x2595 (ite (not x2433) 1 0)) (= x544 (x2238 4294967295 x1190)) (= x1438 (= 0 x1885)) (= x2464 (ite (> x1768 x544) 1 0)) (= (= x1190 0) x2433) (= x1885 (x2453 x2595 x2464)) (= x1768 (x2453 4294967295 x1281)) (= (x435 (+ x1947 x566)) x1281)) (not x1293)) (and (=> (and (and (= (x144 (x2427 x1190 x1768)) x1067) (= x396 (x2453 4294967295 x1067)) (= (> x396 2) x1996)) x1438) (and (=> (and (not x1996) (= x2851 1)) x2809) (=> x1996 x1294))) (=> (not x1438) x1373))))) (=> (not x2902) x1373)))))))
(assert (and (x2060 x1067 4294967296) (x174 x1067 4294967296) (x1580 x1067 4294967296) (=> (< 0 4294967296) (= x1067 (+ (* (x2238 x1067 4294967296) 4294967296) (x1157 x1067 4294967296))))))
(assert (x2951 21888242871839275222246405745257275088548364400416034343698204186575808495617))
(assert (= (x1235 x554) 0))
(assert (= (x2414 x2175 1) (x2238 x2175 2)))
(assert (x2264 x2283))
(assert (= 0 (x1235 x776)))
(assert (x2264 x222))
(assert (= x1730 (and x1344 x351)))
(assert (and (x2060 x2848 2) (x174 x2848 2) (x1580 x2848 2) (=> (< 0 2) (= x2848 (+ (* (x2238 x2848 2) 2) (x1157 x2848 2))))))
(assert (x2264 x2539))
(assert (x2264 x180))
(assert (= (x1049 (x450 11559732032986387107991004021392285783925812861821192530917403151452391805634)) 11559732032986387107991004021392285783925812861821192530917403151452391805634))
(assert (x2647 x53))
(assert (x2629 33554432))
(assert (and (x2060 x181 4294967296) (x174 x181 4294967296) (x1580 x181 4294967296) (=> (< 0 4294967296) (= x181 (+ (* (x2238 x181 4294967296) 4294967296) (x1157 x181 4294967296))))))
(assert (and (x2060 x2481 1024) (x174 x2481 1024) (x1580 x2481 1024) (=> (< 0 1024) (= x2481 (+ (* (x2238 x2481 1024) 1024) (x1157 x2481 1024))))))
(assert (x2264 x362))
(assert (x2264 x2157))
(assert (=> (>= 10000 (x711 (x435 (+ x2495 192)))) (= (x666 (x711 (x435 (+ x2495 192)))) (x450 (x711 (x435 (+ 192 x2495)))))))
(assert (x2264 x509))
(assert (x2264 x439))
(assert (= (or x2450 x726 x932) x1696))
(assert (= x2716 (and x2379 x1357)))
(assert (= (x2917 (x435 (+ x2850 32))) (x1049 (x666 (x2917 (x435 (+ 32 x2850)))))))
(assert (x2264 x2251))
(assert (x2264 x1818))
(assert (x2264 x2937))
(assert (x1395 x1158))
(assert (= (and x2768 x106) x1461))
(assert (x2159 134217728))
(assert (x2264 x2499))
(assert (x2264 x348))
(assert (= (x799 x2746) 0))
(assert (x2264 x376))
(assert (x2159 1048576))
(assert (x2264 x2236))
(assert (x2159 x985))
(assert (x2264 x1483))
(assert (x2264 x2769))
(assert (x2264 x3002))
(assert (let ((x1379 (ite (< x579 256) (x1082 2 x579) 0))) (and (x2060 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x174 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1580 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1379 (+ (* (x2238 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1157 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(assert (= (x1049 (x450 32768)) 32768))
(assert (x786 x2374))
(assert (= (x1235 x1704) 0))
(assert (= x526 (and x1800 x876)))
(assert (x2264 x1228))
(assert (= x1698 (and x1909 x17)))
(assert (x2159 262144))
(assert (x2264 x2800))
(assert (x2264 x2329))
(assert (x2264 x2900))
(assert (= (and (not x2811) x2976) x2631))
(assert (x2264 x1366))
(assert (and (x2060 x918 32) (x174 x918 32) (x1580 x918 32) (=> (< 0 32) (= x918 (+ (* (x2238 x918 32) 32) (x1157 x918 32))))))
(assert (x2680 4294967295 x1587))
(assert (x2264 x2858))
(assert (x1700 x2186))
(assert (= (x2414 x2421 224) (x2238 x2421 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x2264 x559))
(assert (= x1642 (and (not x108) x2640)))
(assert (= x507 (and x1376 (not x1100))))
(assert (x2159 x1618))
(assert (x2264 x1955))
(assert (x1700 (x257 (x435 (+ x1883 192)))))
(assert (x2629 x1684))
(assert (x2264 x603))
(assert (= 1736559843 (x1049 (x450 1736559843))))
(assert (= x1463 (and x2882 (not x1214))))
(assert (x2264 x2752))
(assert (x2264 x2775))
(assert (= x669 (and x1999 x6)))
(assert (x2951 x2841))
(assert (and (x2060 x265 281474976710656) (x174 x265 281474976710656) (x1580 x265 281474976710656) (=> (< 0 281474976710656) (= x265 (+ (* (x2238 x265 281474976710656) 281474976710656) (x1157 x265 281474976710656))))))
(assert (= x834 (=> (= x1183 (> x2042 x2081)) (and (=> (and x1183 (and (= x738 (x2931 864)) (= (> 32 x738) x484))) (and (=> (and (and (= (x2931 896) x1435) (= x766 (= (x1157 x2081 2) 0))) (not x484)) (and (=> (not x766) x112) (=> x766 x2575))) (=> (and (and (= x2078 x2318) (= x1048 x2523)) x484) x2413))) (=> (not x1183) x1373)))))
(assert (x2264 x461))
(assert (x2264 x1903))
(assert (and (x2060 x35 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x174 x35 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x1580 x35 21888242871839275222246405745257275088696311157297823662689037894645226208583) (=> (< 0 21888242871839275222246405745257275088696311157297823662689037894645226208583) (= x35 (+ (* (x2238 x35 21888242871839275222246405745257275088696311157297823662689037894645226208583) 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x1157 x35 21888242871839275222246405745257275088696311157297823662689037894645226208583))))))
(assert (x1700 (x2917 (x435 (+ x2850 128)))))
(assert (x2264 x406))
(assert (x2264 x2738))
(assert (x2264 x1482))
(assert (= (=> (= (< 32 x693) x2116) (and (=> (not x2116) x520) (=> x2116 x1373))) x2209))
(assert (x2264 x1634))
(assert (and (x2060 x444 32) (x174 x444 32) (x1580 x444 32) (=> (< 0 32) (= x444 (+ (* (x2238 x444 32) 32) (x1157 x444 32))))))
(assert (x2264 x2644))
(assert (= x2307 (=> (and (= false x1225) (and (= x222 (ite x1917 1 0)) (= (x352 x394) x58) (= x158 (not x1544)) (= (not (= 0 x58)) x1544) (= (not x158) x1917))) x1519)))
(assert (x1700 x1658))
(assert (= (x1049 (x450 1048576)) 1048576))
(assert (x2629 256))
(assert (x2264 x1439))
(assert (x2264 x2464))
(assert (x2951 x444))
(assert (and (x2060 x946 32) (x174 x946 32) (x1580 x946 32) (=> (< 0 32) (= x946 (+ (* (x2238 x946 32) 32) (x1157 x946 32))))))
(assert (x2264 x2985))
(assert (= (and x580 x916) x2965))
(assert (x2264 x1125))
(assert (x2409 x612 x674 x1768 x1190))
(assert (x2159 x1809))
(assert (and (x2060 x2846 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x174 x2846 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x1580 x2846 21888242871839275222246405745257275088696311157297823662689037894645226208583) (=> (< 0 21888242871839275222246405745257275088696311157297823662689037894645226208583) (= x2846 (+ (* (x2238 x2846 21888242871839275222246405745257275088696311157297823662689037894645226208583) 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x1157 x2846 21888242871839275222246405745257275088696311157297823662689037894645226208583))))))
(assert (x2264 x1807))
(assert (= x2667 (and (not x585) x2436)))
(assert (x2264 x380))
(assert (x2264 x1158))
(assert (and (x2060 x1453 4294967296) (x174 x1453 4294967296) (x1580 x1453 4294967296) (=> (< 0 4294967296) (= x1453 (+ (* (x2238 x1453 4294967296) 4294967296) (x1157 x1453 4294967296))))))
(assert (x2264 x181))
(assert (= x2287 (and x137 x1950)))
(assert (= x2657 (and x388 x966)))
(assert (x2264 x1048))
(assert (= (=> (and (= (x435 (+ x990 32)) x681) (= (not (< x681 x2166)) x1851)) (and x2638 x1851)) x2677))
(assert (= x736 (and x2491 (not x49))))
(assert (= 33151575924830116202563342662843668884515279537950960006535658598482582730581 (x1049 (x450 33151575924830116202563342662843668884515279537950960006535658598482582730581))))
(assert (x2629 x548))
(assert (=> (<= (x257 (x435 (+ x1883 96))) 10000) (= (x666 (x257 (x435 (+ x1883 96)))) (x450 (x257 (x435 (+ 96 x1883)))))))
(assert (x2264 x339))
(assert (= 0 (x1235 (x435 (+ 32 x2415)))))
(assert (x2264 x843))
(assert (= (x1235 (x435 (+ 128 x2415))) 0))
(assert (= false x618))
(assert (= (and x2604 (not x2662)) x593))
(assert (= x1940 (and (=> (and (not x651) (and (= (x1157 x35 21888242871839275222246405745257275088696311157297823662689037894645226208583) x1629) (= x2349 (x2605 x672)) (= (x435 (+ x2139 32)) x114) (= (< 21888242871839275222246405745257275088696311157297823662689037894645226208583 x1629) x1999) (= x573 (x435 (+ 64 x2139))) (= (x2732 x504) x35))) (and (=> (and (and (= x2568 x573) (= x2139 x470) (= x2673 (x668 (- 21888242871839275222246405745257275088696311157297823662689037894645226208583 x1629)))) (not x1999)) x41) (=> x1999 x1108))) (=> (and (and (= x2568 x2567) (= (x435 (+ 32 x2139)) x874) (= x470 x2139) (= (x435 (+ x2139 64)) x2567)) x651) x41))))
(assert (x2629 x1161))
(assert (x2629 x1047))
(assert (x2264 x1118))
(assert (= (=> (and (= (or (and (<= x2128 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x821)) (and (= (<= x821 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2128 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x2128 x821))) x1957) (= x821 (x435 (+ 31 x2166)))) (and (=> (and (and (= (x435 (+ x2166 64)) x2319) (= x2394 (> x2319 x2128))) x1957) (and (=> (and (not x2394) (= x2771 (> x2319 x2166))) (and (=> (not x2771) x2138) (=> (and x2771 (and (= x2929 (x2118 x2166)) (= x402 true))) (and (=> x402 x459) (=> (not x402) x1373))))) (=> x2394 x1373))) (=> (not x1957) x1373))) x2638))
(assert (x643 x2152))
(assert (x2592 x2743))
(assert (= x1356 (=> (and (and (= (<= x519 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< 387 x519)) (>= 1461501637330902918203684832716283019655932542975 x1006) (= x2652 false) (<= x1239 1461501637330902918203684832716283019655932542975) (>= x1333 0) (= x1346 (< 0 (x2944 (x666 x2791)))) (= (= x2367 x490) x1706) (not (= x1006 x1548)) (>= x698 0) x5 (<= 0 x2698) (= (< 0 (x2944 (x666 x1548))) x2498) (>= x1244 0) (= true x1287) (= (x2145 (x666 x1548)) x1244) (= x722 x2367) (<= x1548 1461501637330902918203684832716283019655932542975) (<= x2698 1461501637330902918203684832716283019655932542975) (not (= x1006 x2791)) (<= x1884 255) (<= x2271 1461501637330902918203684832716283019655932542975) (= x1680 false) (= x1025 x1791) (>= 1461501637330902918203684832716283019655932542975 x2791) (<= 0 x2896) (= x1074 2712691696) (<= x2233 1461501637330902918203684832716283019655932542975) (<= x1975 255) (= x1627 (= x763 0)) (<= x1791 1461501637330902918203684832716283019655932542975) (= (x2145 (x666 x2791)) x1333) x1346 x2498 (>= 1461501637330902918203684832716283019655932542975 x698) (>= x1239 0) (>= x1884 0) (> x1006 0) (>= x2233 0) (= x1474 (x2944 (x666 x1548))) (> x2791 0) (= x96 false) (< 0 x1474) (>= x1975 0) (>= x1791 0) (= x5 (< 0 (x2944 (x666 x1006)))) x1706 (= x2896 (x2145 (x666 x1006))) (= x2966 x698) (<= 0 x2271) (= x2966 x1278) (not (= x2791 x1548)) (= 5 x653) (= x490 x1239) (= x722 x2698) (> x1548 0) (= x2271 x722)) (and (=> (and (and (not (= x1969 2578352110)) (= 2712691696 x1969) (= x1196 (or (and (> 256 x2975) (= (<= x2975 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2975))) (not (= 712603760 x1969)) (not (> 4 x519)) (= (x668 (- x519 4)) x2975) (> 3012569127 x1969) (not (> 712603760 x1969)) (not (= x1969 1736559843))) x1627) (and (=> (and (not x1196) (and (= x958 (x225 4)) (= x61 (> x958 18446744073709551615)))) (and (=> (and (and (= x2910 (x435 (+ 4 x958))) (= x89 (x435 (+ 31 x2910))) (= x2328 (or (and (> x89 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x519 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x519) (<= x89 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x89 x519))))) (not x61)) (and (=> (not x2328) x1108) (=> (and (and (= (< 18446744073709551615 x2031) x673) (= x2031 (x225 x2910))) x2328) (and (=> (and (not x673) (and (= (x435 (+ x2910 32)) x373) (= x2364 (< x519 x545)) (= x545 (x435 (+ x373 x2031))))) (and (=> (and (not x2364) (and (= (x2453 4294967295 x946) x1037) (= x2303 (= x1037 x946)) (= x946 (x225 36)))) (and (=> (not x2303) x1108) (=> (and (and (= (x225 68) x2894) (= x749 (< 18446744073709551615 x2894))) x2303) (and (=> (and (not x749) (and (= (x435 (+ 4 x2894)) x2663) (= (or (and (> x519 x2536) (= (<= x519 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2536))) (and (<= x519 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2536))) x2053) (= (x435 (+ 31 x2663)) x2536))) (and (=> (and x2053 (and (= x438 (x225 x2663)) (= x353 (> x438 18446744073709551615)))) (and (=> (and (and (= x2573 (x435 (+ 32 x2663))) (= (x435 (+ x438 x2573)) x232) (= (> x232 x519) x1973)) (not x353)) (and (=> (and (and (= (x225 100) x2855) (= x382 (> x2855 18446744073709551615))) (not x1973)) (and (=> (and (not x382) (and (= (x668 (- x519 x2136)) x335) (= (or (> x335 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x335 288) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x335) true))) x2168) (= x2136 (x435 (+ 4 x2855))))) (and (=> (and (and (= x655 132) (= (x668 (- x519 132)) x1818) (= x2084 (or (> x1818 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 128 x1818) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1818)))))) (not x2168)) (and (=> x2084 x1108) (=> (and (and (= (x225 x373) x1308) (= (x225 x2644) x2421) (= (x668 (- x519 x2133)) x606) (= x1236 (x225 x1774)) (= (x435 (+ x373 32)) x1774) (= (x435 (+ 64 x192)) x2133) (= x192 (x435 (+ 64 x2136))) (= (or (and (< x606 128) (= true (<= x606 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x606)) x2214) (= 384 x1420) (= (x2414 x1149 224) x1822) (= (x225 x1375) x1149) (= (x435 (+ 68 x1375)) x2644) (= (x2414 x2421 224) x2237) (= (x435 (+ x1774 32)) x1375)) (not x2084)) (and (=> (and (not x2214) (= (or (> x606 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x606)) (> 128 x606))) x1869)) (and (=> (and (not x1869) (and (= (x435 (+ 64 x192)) x1055) (= x452 (or (and (> x519 x1866) (= (<= x1866 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x519))) (and (> x1866 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x519 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x1478 512) (= x1866 (x435 (+ 31 x1055))))) (and (=> (and x452 (and (= x2291 (> x476 x519)) (= x476 (x435 (+ x1055 64))))) (and (=> x2291 x1108) (=> (and (not x2291) (= (> x476 x1055) x898)) (and (=> (and x898 (and (= x877 true) (= x2355 (x225 x1055)))) (and (=> (not x877) x1108) (=> x877 x750))) (=> (not x898) x2794))))) (=> (not x452) x1108))) (=> x1869 x1108))) (=> x2214 x1108))))) (=> x2168 x1108))) (=> x382 x1108))) (=> x1973 x1108))) (=> x353 x1108))) (=> (not x2053) x1108))) (=> x749 x1108))))) (=> x2364 x1108))) (=> x673 x1108))))) (=> x61 x1108))) (=> x1196 x1108))) (=> (not x1627) x1108)))))
(assert (x2159 x1789))
(assert (x2264 x449))
(assert (x2264 x265))
(assert (= (x1049 (x450 21888242871839275222246405745257275088696311157297823662689037894645226208583)) 21888242871839275222246405745257275088696311157297823662689037894645226208583))
(assert (x2264 x2810))
(assert (= (=> (and (= (x435 (+ 32 x1055)) x1320) (= x2514 (not (> x476 x1320)))) (and x2794 x2514)) x750))
(assert (and (x2060 x833 4194304) (x174 x833 4194304) (x1580 x833 4194304) (=> (< 0 4194304) (= x833 (+ (* (x2238 x833 4194304) 4194304) (x1157 x833 4194304))))))
(assert (= (and x1410 (not x1212)) x2827))
(assert (x2159 16384))
(assert (= (and (not x61) x949) x2618))
(assert (x2264 x2114))
(assert (and (= (x2427 3 3) 9) (= (x2427 9 9) 81) (= 81 (x2427 27 3)) (= 27 (x2427 9 3))))
(assert (= (and x1091 x772) x464))
(assert (x1987 x223))
(assert (x1531 x1273))
(assert (x1700 (x257 x1883)))
(assert (x2159 4096))
(assert (x2159 512))
(assert (x894 x1282))
(assert (x2264 x1044))
(assert (x2951 262144))
(assert (x2264 x1814))
(assert (x2629 x62))
(assert (x2629 8388608))
(assert (x2264 x1364))
(assert (= (and x22 (not x2086)) x491))
(assert (= x1501 (or x1292 x1922)))
(assert (x2264 x1870))
(assert (x2951 67108864))
(assert (x2264 x623))
(assert (x2520 x2954))
(assert (x2951 x1115))
(assert (x2264 x1729))
(assert (x2264 x2149))
(assert (= (and x1703 x1759) x1907))
(assert (x2264 x2368))
(assert (x2264 x602))
(assert (x2951 x2668))
(assert (= x886 (and x1141 (not x1351))))
(assert (x2264 x714))
(assert (= (=> (and (= x1152 (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x519) (> x1464 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1464 x519) (= (<= x1464 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x519 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x1464 (x435 (+ x476 31)))) (and (=> (not x1152) x1108) (=> (and x1152 (and (= (x435 (+ 64 x476)) x2463) (= (> x2463 x519) x708))) (and (=> x708 x1108) (=> (and (= x942 (> x2463 x476)) (not x708)) (and (=> (and x942 (and (= (x225 x476) x1217) (= true x591))) (and (=> (not x591) x1108) (=> x591 x1347))) (=> (not x942) x933))))))) x2794))
(assert (x2629 x540))
(assert (= (and x2262 (not x1682)) x1355))
(assert (x1700 (x1823 (x435 (+ 192 x1026)))))
(assert (x1576 x2170))
(assert (x2264 x2265))
(assert (x2264 x822))
(assert (x2629 x265))
(assert (x2264 x2713))
(assert (x659 x334))
(assert (x2159 67108864))
(assert (x2264 x1105))
(assert (=> (<= x1736 10000) (= (x666 x1736) (x450 x1736))))
(assert (= x697 (and x1912 (not x766))))
(assert (x2264 x1760))
(assert (x2951 x2714))
(assert (x2264 x1148))
(assert (= (and x701 (not x2987)) x302))
(assert (x2264 x2933))
(assert (x2264 x1282))
(assert (= x433 (and x595 (not x1532))))
(assert (x2264 x2796))
(assert (x2264 x140))
(assert (x2264 x1330))
(assert (= x81 (and x2674 (not x2955))))
(assert (= (and x1022 (not x621)) x1334))
(assert (= (and (not x651) x453) x6))
(assert (and (x2060 x946 536870912) (x174 x946 536870912) (x1580 x946 536870912) (=> (< 0 536870912) (= x946 (+ (* (x2238 x946 536870912) 536870912) (x1157 x946 536870912))))))
(assert (= x1836 (and x1841 x1438)))
(assert (x894 x128))
(assert (x2264 x2080))
(assert (x2264 x2093))
(assert (x553 x806))
(assert (x2264 x1679))
(assert (x1933 x1167))
(assert (= 8388608 (x1049 (x450 8388608))))
(assert (x2264 x2139))
(assert (x2264 x1248))
(assert (x18 (- x612 x1768)))
(assert (x2159 x2664))
(assert (x2264 x2233))
(assert (x729 x2397))
(assert (= x952 (and x422 x157)))
(assert (= (x450 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x666 21888242871839275222246405745257275088696311157297823662689037894645226208583)))
(assert (x2951 x2141))
(assert (=> (<= (x2655 x2415) 10000) (= (x666 (x2655 x2415)) (x450 (x2655 x2415)))))
(assert (x2264 x1695))
(assert (=> (<= (x711 (x435 (+ 96 x2495))) 10000) (= (x450 (x711 (x435 (+ 96 x2495)))) (x666 (x711 (x435 (+ x2495 96)))))))
(assert (and (x2060 x2703 128) (x174 x2703 128) (x1580 x2703 128) (=> (< 0 128) (= x2703 (+ (* (x2238 x2703 128) 128) (x1157 x2703 128))))))
(assert (= (x1823 (x435 (+ 160 x1026))) (x1049 (x666 (x1823 (x435 (+ 160 x1026)))))))
(assert (x191 x2418))
(assert (and (x2060 x946 8) (x174 x946 8) (x1580 x946 8) (=> (< 0 8) (= x946 (+ (* (x2238 x946 8) 8) (x1157 x946 8))))))
(assert (= (and x844 x2091) x1626))
(assert (x2951 x1775))
(assert (= (or x2028 x1551) x2094))
(assert (x2951 x1861))
(assert (x2264 x125))
(assert (= x1230 (and (not x1673) x1901)))
(assert (x729 4294967295))
(assert (x2264 x2780))
(assert (x2264 x694))
(assert (= (=> (and (= x2285 x2573) (= (not (< 32 x438)) x278) (= x1804 (x225 x2285)) (= (x1157 (x2427 x1804 x1480) 21888242871839275222246405745257275088548364400416034343698204186575808495617) x719)) (and x278 (=> (= x2750 (x1157 (+ x635 x719) 21888242871839275222246405745257275088548364400416034343698204186575808495617)) x2845))) x2925))
(assert (x2521 x412))
(assert (= x1895 (and x183 x2742)))
(assert (= (x2115 (x435 (+ x988 192))) (x1049 (x666 (x2115 (x435 (+ x988 192)))))))
(assert (= x1301 (and (not x1973) x1654)))
(assert (and (x2060 x460 281474976710656) (x174 x460 281474976710656) (x1580 x460 281474976710656) (=> (< 0 281474976710656) (= x460 (+ (* (x2238 x460 281474976710656) 281474976710656) (x1157 x460 281474976710656))))))
(assert (x2264 x143))
(assert (x1570 x2848))
(assert (x2629 512))
(assert (x2264 x1947))
(assert (x88 x1361))
(assert (x2264 x730))
(assert (x2159 x1286))
(assert (= (and x1831 (not x1424)) x417))
(assert (and (x2060 x946 4096) (x174 x946 4096) (x1580 x946 4096) (=> (< 0 4096) (= x946 (+ (* (x2238 x946 4096) 4096) (x1157 x946 4096))))))
(assert (x962 x1684))
(assert (x2264 x2905))
(assert (= 0 (x1235 (x435 (+ 64 x1026)))))
(assert (x2264 x147))
(assert (and (x2060 x2185 524288) (x174 x2185 524288) (x1580 x2185 524288) (=> (< 0 524288) (= x2185 (+ (* (x2238 x2185 524288) 524288) (x1157 x2185 524288))))))
(assert (= (x799 (x435 (+ x988 32))) 0))
(assert (x1700 (x711 (x435 (+ x2495 160)))))
(assert (x2951 x460))
(assert (= (or x2631 x1626) x2828))
(assert (= (x1049 (x666 (x2917 (x435 (+ 192 x2850))))) (x2917 (x435 (+ x2850 192)))))
(assert (= x1199 (and x1494 x2939)))
(assert (x1700 (x711 (x435 (+ x2495 32)))))
(assert (= 0 (x1235 x1026)))
(assert (and (x2060 x2714 2147483648) (x174 x2714 2147483648) (x1580 x2714 2147483648) (=> (< 0 2147483648) (= x2714 (+ (* (x2238 x2714 2147483648) 2147483648) (x1157 x2714 2147483648))))))
(assert (= 0 (x799 x1998)))
(assert (and (x2060 x540 4294967296) (x174 x540 4294967296) (x1580 x540 4294967296) (=> (< 0 4294967296) (= x540 (+ (* (x2238 x540 4294967296) 4294967296) (x1157 x540 4294967296))))))
(assert (= (x2655 (x435 (+ x2415 160))) (x1049 (x666 (x2655 (x435 (+ 160 x2415)))))))
(assert (and (x2060 x1169 4294967296) (x174 x1169 4294967296) (x1580 x1169 4294967296) (=> (< 0 4294967296) (= x1169 (+ (* (x2238 x1169 4294967296) 4294967296) (x1157 x1169 4294967296))))))
(assert (x2264 x566))
(assert (x2264 x1588))
(assert (and (x2060 x1273 64) (x174 x1273 64) (x1580 x1273 64) (=> (< 0 64) (= x1273 (+ (* (x2238 x1273 64) 64) (x1157 x1273 64))))))
(assert (and (x2060 x140 8) (x174 x140 8) (x1580 x140 8) (=> (< 0 8) (= x140 (+ (* (x2238 x140 8) 8) (x1157 x140 8))))))
(assert (= (x799 (x435 (+ 192 x2495))) 0))
(assert (= 0 (x799 (x435 (+ 96 x1883)))))
(assert (and (x2060 x62 8192) (x174 x62 8192) (x1580 x62 8192) (=> (< 0 8192) (= x62 (+ (* (x2238 x62 8192) 8192) (x1157 x62 8192))))))
(assert (x2264 x2362))
(assert (x2264 x2443))
(assert (x2264 x2107))
(assert (x2264 x936))
(assert (x431 x2974))
(assert (= (and x700 x2151) x1751))
(assert (x2264 x2074))
(assert (x2951 x2374))
(assert (x2264 x1420))
(assert (= (x1235 (x435 (+ x1026 192))) 0))
(assert (x1849 x853))
(assert (x729 x411))
(assert (x2264 x854))
(assert (= x42 (and x1913 (not x1675))))
(assert (x2264 x411))
(assert (= (x1235 x630) 0))
(assert (x457 x946))
(assert (x2264 x1137))
(assert (and (x2060 x2049 281474976710656) (x174 x2049 281474976710656) (x1580 x2049 281474976710656) (=> (< 0 281474976710656) (= x2049 (+ (* (x2238 x2049 281474976710656) 281474976710656) (x1157 x2049 281474976710656))))))
(assert (= (and (not x1694) x67) x1406))
(assert (= (x1049 (x450 524288)) 524288))
(assert (x2264 x1982))
(assert (x1576 x1452))
(assert (x2951 x1076))
(assert (x2264 x185))
(assert (x1470 x1273))
(assert (x2264 x1613))
(assert (x2264 x715))
(assert (x2264 x1850))
(assert (x2264 x1791))
(assert (x2264 x285))
(assert (= x611 (or x188 x872)))
(assert (x2248 x1273))
(assert (x2264 x2669))
(assert (= (x666 524288) (x450 524288)))
(assert (x2264 x641))
(assert (= (=> (and (and (= x2096 (x1944 x1117)) (= x662 (x435 (+ 128 x1928))) (= (x435 (+ 64 x1137)) x1928) (= (x435 (+ 32 x1508)) x474) (= x571 (x435 (+ x474 32))) (= x293 (x435 (+ 32 x1137))) (= x2263 (x2268 x1609)) (= x2650 (x435 (+ x1117 32))) (= x2764 (x435 (+ 32 x1609))) (= (x176 x2650) x2126) (= x1647 (x59 x2764)) (= x1508 (x435 (+ x1928 32))) (= (> x469 0) x1673)) (or (and (= x469 x369) (not x1673)) (and (and (< x2260 4294967296) (= 1 x369)) x1673))) x588) x2551))
(assert (x2264 x372))
(assert (x2264 x993))
(assert (= (and x1457 x2488) x939))
(assert (= (x1049 (x450 4051901473739185471504766068400292374549287637553596337727654132125147894034)) 4051901473739185471504766068400292374549287637553596337727654132125147894034))
(assert (and (x2060 x845 4294967296) (x174 x845 4294967296) (x1580 x845 4294967296) (=> (< 0 4294967296) (= x845 (+ (* (x2238 x845 4294967296) 4294967296) (x1157 x845 4294967296))))))
(assert (= (=> (= x1741 (= x2970 0)) (and (=> x1741 x2808) (=> (and (not x1741) (= (< 0 x2970) x2816)) (and (=> (and (and (or (and (not x1065) (= x1010 x919)) (and (and (< x2854 4294967296) (= x919 1)) x1065)) (and (= x1326 (x435 (+ 32 x2051))) (= x280 (x435 (+ x1340 32))) (= x2051 (x435 (+ x2696 32))) (= x860 (x1964 x280)) (= (x219 x1340) x2900) (= x204 (x435 (+ x266 64))) (= (x435 (+ x204 32)) x808) (= x2670 (x2438 x266)) (= x2696 (x435 (+ 32 x2487))) (= (x435 (+ 128 x2487)) x1502) (= x2048 (x435 (+ 32 x266))) (= (x435 (+ 64 x204)) x2487) (= (x914 x2048) x107) (= (> x1010 0) x1065))) x2816) x2844) (=> (not x2816) x1108))))) x1935))
(assert (= (and (not x1091) x772) x2671))
(assert (x88 x2283))
(assert (x2159 x1189))
(assert (= (x450 2712691696) (x666 2712691696)))
(assert (x2264 x1119))
(assert (x2264 x1647))
(assert (x431 x2265))
(assert (x2951 x1110))
(assert (x2264 x2953))
(assert (= (x450 21888242871839275222246405745257275088548364400416034343698204186575808495617) (x666 21888242871839275222246405745257275088548364400416034343698204186575808495617)))
(assert (x2159 x806))
(assert (x2264 x2928))
(assert (and (x2060 x1288 33554432) (x174 x1288 33554432) (x1580 x1288 33554432) (=> (< 0 33554432) (= x1288 (+ (* (x2238 x1288 33554432) 33554432) (x1157 x1288 33554432))))))
(assert (x2159 x1743))
(assert (x2264 x1040))
(assert (= (=> (and (and (= x2082 (= x2558 0)) (= (x2453 4194304 x946) x1557) (= x758 (x2453 1 x946)) (= (ite x3003 x2005 (x54 16777216 x2005)) x2435) (= (ite x8 x2419 (x54 4096 x2419)) x2362) (= (x2453 1024 x946) x993) (= (= 0 x2862) x1384) (= x2909 (= x1549 0)) (= x2170 (ite x1126 x806 (x54 128 x806))) (= (x668 (- 32 x1032)) x2980) (= (= 0 x2598) x1350) (= (= x1181 0) x558) (= (= x372 0) x3003) (= x2016 (= x1557 0)) (= (x2453 16777216 x946) x2329) (= x1263 (= x937 0)) (= (ite x1384 x2403 (x54 8 x2403)) x1383) (= (ite x530 x2265 (x54 536870912 x2265)) x454) (= (= 0 x2467) x871) (= x2363 (x2453 1048576 x946)) (= (= 0 x1656) x970) (= x2558 (x2453 64 x946)) (= x2467 (x2453 256 x946)) (= (x2453 128 x946) x372) (= (ite x251 x713 (x54 1073741824 x713)) x2265) (= x1336 (= x294 0)) (= (ite x1595 x2954 (x54 16384 x2954)) x1867) (= x1604 (ite x1263 x304 (x54 134217728 x304))) (= (ite x970 x1867 (x54 8192 x1867)) x2419) (= (= x2363 0) x1063) (= (= 0 x2308) x8) (= x1195 (= x934 0)) (= (= x2765 0) x1409) (= (ite x1322 x2837 (x54 32 x2837)) x2502) (= x631 (x2453 134217728 x946)) (= (= x513 0) x1322) (= (= 0 x993) x85) (= x294 (x2453 512 x946)) (= x2765 (x2453 65536 x946)) (= (= x631 0) x1620) (= x1126 (= 0 x2329)) (= x40 (ite (= x2406 0) (ite x2072 x1667 (x54 2 x1667)) (x54 1 (ite x2072 x1667 (x54 2 x1667))))) (= x2754 (x2453 4 x946)) (= x2998 (= x1021 0)) (= x828 (ite x85 x315 (x54 2097152 x315))) (= (x2453 524288 x946) x2308) (= (= 0 x320) x2727) (= x1398 (x2453 1073741824 x946)) (= (ite x2998 x1963 (x54 65536 x1963)) x279) (= (x2453 4096 x946) x2163) (= (x2453 268435456 x946) x2862) (= x873 (= x758 0)) (= (x2453 67108864 x946) x513) (= (ite x626 x1383 (x54 4 x1383)) x1667) (= x937 (x2453 16 x946)) (= (ite x1409 x279 (x54 32768 x279)) x2954) (= (ite x2913 x1262 (x54 524288 x1262)) x2985) (= (x2453 8 x946) x934) (= (ite x2727 x2985 (x54 262144 x2985)) x2015) (= (= x1253 0) x626) (= x1764 (x2453 131072 x946)) (= x2913 (= x2163 0)) (= (= x2819 0) x1267) (= x985 (ite x871 x2435 (x54 8388608 x2435))) (= x2005 (ite x2082 x1789 (x54 33554432 x1789))) (= (ite x558 x828 (x54 1048576 x828)) x1262) (= x1618 (ite x1837 x641 (x54 1024 x641))) (= x1837 (= x625 0)) (= x1656 (x2453 262144 x946)) (= x806 (ite x1267 x796 (x54 256 x796))) (= (ite x1195 x454 (x54 268435456 x454)) x304) (= x1021 (x2453 32768 x946)) (= x2819 (x2453 8388608 x946)) (= (ite x1063 x2362 (x54 2048 x2362)) x641) (= x2179 (x2453 2 x946)) (= x1963 (ite x2909 x2015 (x54 131072 x2015))) (= (x2453 2048 x946) x1181) (= x2837 (ite x311 x2170 (x54 64 x2170))) (= x315 (ite x1336 x985 (x54 4194304 x985))) (= (= 0 x1764) x1595) (= x311 (= 0 x1242)) (= (= 0 x2754) x530) (= x1242 (x2453 33554432 x946)) (= x1549 (x2453 16384 x946)) (= (= 0 x1398) x2072) (= x1253 (x2453 536870912 x946)) (= x2403 (ite x1620 x2502 (x54 16 x2502))) (= x2598 (x2453 32 x946)) (= x713 (ite x873 0 2147483648)) (= x1789 (ite x1350 x1604 (x54 67108864 x1604))) (= (x2453 8192 x946) x320) (= x796 (ite x2016 x1618 (x54 512 x1618))) (= x625 (x2453 2097152 x946)) (= x251 (= 0 x2179)) (= (x2453 2147483648 x946) x2406)) (and (= x2408 (ite (< x1134 256) 1 0)) (= (x2414 x40 x2980) x679) (= x2786 (x2453 x1758 x2408)) (= x1134 (x2238 4294967295 x679)) (= x1832 (= x2786 0)) (= (= x679 0) x2437) (= x1758 (ite (not x2437) 1 0)))) (and (=> (and (and (= x2722 (x2453 4294967295 x576)) (= x1950 (< 0 x2175)) (= x576 (x144 (* x679 256)))) x1832) (and (=> (not x1950) x1108) (=> (and x1950 (and (= (x2238 x2722 x2175) x2570) (= x2570 x1282))) x165))) (=> (not x1832) x1108))) x1552))
(assert (x2264 x2893))
(assert (= x667 (and x2756 x2345)))
(assert (= (x1049 (x666 (x257 (x435 (+ x1883 64))))) (x257 (x435 (+ x1883 64)))))
(assert (x2264 x97))
(assert (x2264 x1658))
(assert (x2264 x66))
(assert (= x165 (=> (and (= x2014 (x2453 4294967295 x1282)) (= (x2453 281474976710655 x1684) x2695) (= x1993 (< 0 x2695)) (= x1684 (x2556 416))) (and (=> (not x1993) x1108) (=> (and x1993 (= x108 (= 1 x2695))) (and (=> (and (= 0 x2401) x108) x1610) (=> (not x108) x552)))))))
(assert (x2264 x2489))
(assert (x2264 x1888))
(assert (x2264 x1121))
(assert (=> (>= 10000 x870) (= (x666 x870) (x450 x870))))
(assert (x1146 x1288))
(assert (x2264 x1131))
(assert (x2264 x2696))
(assert (x2264 x1386))
(assert (= (x1049 (x666 (x1258 (x435 (+ 64 x2767))))) (x1258 (x435 (+ 64 x2767)))))
(assert (= (and x744 x136) x2833))
(assert (x1271 x1955))
(assert (x2264 x1884))
(assert (x2264 x263))
(assert (x2264 x319))
(assert (x737 x1982))
(assert (= 0 (x1235 x1588)))
(assert (= x2564 (and x1068 x212)))
(assert (= x2679 (or x1302 x2654)))
(assert (x2289 x1573))
(assert (x2264 x2792))
(assert (x2264 x2098))
(assert (= (x799 x1117) 0))
(assert (x2264 x2154))
(assert (= x657 (and x942 x505)))
(assert (= x1403 (=> (and (= (x2979 416) x2049) (= x862 (< 0 x1962)) (= (x2453 4294967295 x578) x2081) (= (x2453 281474976710655 x2049) x1962)) (and (=> (and x862 (= (= 1 x1962) x1697)) (and (=> (not x1697) x2325) (=> (and (= x2990 0) x1697) x1231))) (=> (not x862) x1373)))))
(assert (x2264 x1027))
(assert (x2629 2))
(assert (x2159 x1241))
(assert (x2264 x1167))
(assert (x2629 4194304))
(assert (x2629 x1282))
(assert (= (=> (= (= x2669 0) x2192) (and (=> x2192 x2808) (=> (and (= (> x2669 0) x1657) (not x2192)) (and (=> (not x1657) x1108) (=> (and x1657 (and (= x740 (not (= x1490 0))) (= (x387 x2097) x1490))) (and (=> (and (and (= x1083 (< 281474976710654 x1613)) (= (x387 416) x2044) (= (x2453 281474976710655 x2044) x1613)) x740) (and (=> (and (and (= (x2453 x1583 x2769) x1745) (= x2588 (= x1257 0)) (= (x435 (+ x1613 1)) x1257) (= x2769 (ite (> 32 x2621) 1 0)) (= (= x1745 0) x580) (= x2621 (x2238 281474976710655 x1257)) (= x1583 (ite (not x2588) 1 0))) (not x1083)) (and (=> (and (and (= x1726 (x2453 281474976710655 x460)) (= x460 (x144 (* x1257 32))) (= x2181 (= x438 x1726))) x580) (and (=> x2181 x1472) (=> (not x2181) x1108))) (=> (not x580) x1108))) (=> x1083 x1108))) (=> (not x740) x1108))))))) x1630))
(assert (= 65536 (x1049 (x450 65536))))
(assert (x2264 x2250))
(assert (x2264 x1130))
(assert (x2264 x1792))
(assert (= (and (not x1862) x2958) x1376))
(assert (x2264 x1455))
(assert (= (or x2579 x697) x638))
(assert (x1921 x1604))
(assert (x2264 x516))
(assert (x2264 x293))
(assert (x2520 x260))
(assert (x2264 x2249))
(assert (x737 x2122))
(assert (x2731 x674 (- x612 x1768)))
(assert (x2951 x2703))
(assert (= (and x2180 (not x2103)) x1103))
(assert (= x1053 (and x314 x350)))
(assert (x2264 x494))
(assert (x2159 x546))
(assert (x2264 x1186))
(assert (= (x1049 (x450 32685727167770504628014968172621197755414673299042699869126213917920315318119)) 32685727167770504628014968172621197755414673299042699869126213917920315318119))
(assert (x2264 x2695))
(assert (= x2448 (and x1924 x452)))
(assert (x1700 (x1258 (x435 (+ 128 x2767)))))
(assert (= (x450 131072) (x666 131072)))
(assert (x2264 x1207))
(assert (= x1608 (and x1660 x1155)))
(assert (x2264 x2722))
(assert (x2264 x1052))
(assert (= (or x2004 x1499) x1138))
(assert (x2264 x1432))
(assert (x826 x714))
(assert (x2951 x420))
(assert (and (x2060 x1273 65536) (x174 x1273 65536) (x1580 x1273 65536) (=> (< 0 65536) (= x1273 (+ (* (x2238 x1273 65536) 65536) (x1157 x1273 65536))))))
(assert (x2264 x946))
(assert (x2264 x2623))
(assert (x729 x2027))
(assert (let ((x1379 (ite (> 256 x2851) (x1082 2 x2851) 0))) (and (x2060 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x174 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1580 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1379 (+ (* (x2238 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1157 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(assert (and (x2060 x2735 131072) (x174 x2735 131072) (x1580 x2735 131072) (=> (< 0 131072) (= x2735 (+ (* (x2238 x2735 131072) 131072) (x1157 x2735 131072))))))
(assert (x2264 x1852))
(assert (x2628 x1768 x1190 x674 x612))
(assert (= (x799 x2112) 0))
(assert (x2629 2048))
(assert (x2951 x2079))
(assert (=> (<= (x257 (x435 (+ x1883 64))) 10000) (= (x450 (x257 (x435 (+ x1883 64)))) (x666 (x257 (x435 (+ 64 x1883)))))))
(assert (x148 x946))
(assert (x1700 x1736))
(assert (= (and (not x1196) x421) x949))
(assert (x2264 x1333))
(assert (x2264 x1011))
(assert (=> (>= 10000 (x2979 864)) (= (x666 (x2979 864)) (x450 (x2979 864)))))
(assert (=> (>= 10000 (x747 x1059)) (= (x450 (x747 x1059)) (x666 (x747 x1059)))))
(assert (x2747 x143))
(assert (and (x2060 x1555 4294967296) (x174 x1555 4294967296) (x1580 x1555 4294967296) (=> (< 0 4294967296) (= x1555 (+ (* (x2238 x1555 4294967296) 4294967296) (x1157 x1555 4294967296))))))
(assert (x2264 x829))
(assert (x2264 x1624))
(assert (and (x2060 x1273 2147483648) (x174 x1273 2147483648) (x1580 x1273 2147483648) (=> (< 0 2147483648) (= x1273 (+ (* (x2238 x1273 2147483648) 2147483648) (x1157 x1273 2147483648))))))
(assert (x2264 x1864))
(assert (x2951 x1288))
(assert (x2629 x2848))
(assert (x1098 x1273))
(assert (= (x799 (x435 (+ x2495 160))) 0))
(assert (x2264 x2899))
(assert (x2264 x195))
(assert (x2264 x1315))
(assert (x2010 x2129 x658))
(assert (= x1394 (and (not x2590) x1533)))
(assert (x2951 x62))
(assert (x2264 x2194))
(assert (x2264 x845))
(assert (= (x1049 (x666 (x2917 (x435 (+ 128 x2850))))) (x2917 (x435 (+ 128 x2850)))))
(assert (x2264 x948))
(assert (x2629 x143))
(assert (x2264 x2611))
(assert (x2159 x2336))
(assert (x2010 x1213 x1850))
(assert (x2159 x2239))
(assert (= 0 (x1235 x2441)))
(assert (x1700 (x2556 896)))
(assert (= (x1049 (x450 4294967295)) 4294967295))
(assert (x1921 x2368))
(assert (and (x2060 x2481 2048) (x174 x2481 2048) (x1580 x2481 2048) (=> (< 0 2048) (= x2481 (+ (* (x2238 x2481 2048) 2048) (x1157 x2481 2048))))))
(assert (x2264 x2954))
(assert (x2951 x228))
(assert (x2159 8388608))
(assert (x2264 x2462))
(assert (x2264 x1914))
(assert (= (and (not x942) x505) x2824))
(assert (x2264 x190))
(assert (x1395 x2403))
(assert (= 0 (x1235 x2634)))
(assert (x553 x1358))
(assert (x2159 x412))
(assert (x2629 x578))
(assert (= x743 (and (not x2717) x789)))
(assert (x463 x2835))
(assert (x2264 x2148))
(assert (x2264 x2300))
(assert (x2264 x860))
(assert (x2264 x2255))
(assert (x2264 x1028))
(assert (x729 x887))
(assert (= (and x286 (not x333)) x996))
(assert (x2264 x460))
(assert (= (x1049 (x450 2147483648)) 2147483648))
(assert (x2951 x80))
(assert (x2951 x143))
(assert (x1700 (x2979 768)))
(assert (x2629 x420))
(assert (x2951 x2846))
(assert (x1404 x1076))
(assert (x2264 x1319))
(assert (= (x1049 (x450 268435456)) 268435456))
(assert (x2264 x160))
(assert (x2159 256))
(assert (x2951 x1838))
(assert (x2264 x1031))
(assert (x2264 x1839))
(assert (x2264 x1847))
(assert (= (x2556 928) (x1049 (x666 (x2556 928)))))
(assert (= 0 (x1235 x1844)))
(assert (x2264 x1307))
(assert (x2264 x2235))
(assert (= (x450 281474976710654) (x666 281474976710654)))
(assert (= (x1235 (x435 (+ 32 x1026))) 0))
(assert (= (and x534 (not x2393)) x63))
(assert (x2629 x2683))
(assert (x2264 x440))
(assert (x2061 x279))
(assert (x2264 x87))
(assert (= x1820 (and x1446 (not x614))))
(assert (= (and x551 (not x2548)) x784))
(assert (x2159 65536))
(assert (x226 x1047))
(assert (= (and x193 (not x2361)) x647))
(assert (x2264 x1226))
(assert (= (and x93 x2718) x1753))
(assert (x2264 x2842))
(assert (x2680 4294967295 x1190))
(assert (x2264 x1844))
(assert (x1607 x946))
(assert (= x1736 (x1049 (x666 x1736))))
(assert (and (x2060 x1273 67108864) (x174 x1273 67108864) (x1580 x1273 67108864) (=> (< 0 67108864) (= x1273 (+ (* (x2238 x1273 67108864) 67108864) (x1157 x1273 67108864))))))
(assert (x2629 x1838))
(assert (= (x799 x461) 0))
(assert (x2264 x2791))
(assert (x2264 x2773))
(assert (= (and x1681 x823) x789))
(assert (= x290 (=> (= x1225 true) x1519)))
(assert (x1023 x1997))
(assert (x1404 x240))
(assert (x2951 1024))
(assert (x2264 x1383))
(assert (= (x450 10857046999023057135944570762232829481370756359578518086990519993285655852781) (x666 10857046999023057135944570762232829481370756359578518086990519993285655852781)))
(assert (= x2682 (and x2797 (not x1510))))
(assert (= (x799 (x435 (+ 192 x2850))) 0))
(assert (and (x2060 x636 512) (x174 x636 512) (x1580 x636 512) (=> (< 0 512) (= x636 (+ (* (x2238 x636 512) 512) (x1157 x636 512))))))
(assert (x2264 x2670))
(assert (x2951 x1408))
(assert (x2521 x730))
(assert (= x2029 (=> (= x39 (= x186 0)) (and (=> x39 x290) (=> (and (not x39) (= x2693 (> x186 0))) (and (=> (and x2693 (and (and (= (x214 x1044) x2734) (= x891 (x435 (+ x1354 32))) (= x2608 (x435 (+ x1354 64))) (= (= x2734 0) x2942)) (or (and (= x2942 x844) (not x2942)) (and (and (= x844 (= 0 x2324)) (= x2324 (x214 x2171))) x2942)))) x475) (=> (not x2693) x1373)))))))
(assert (x2264 x2496))
(assert (and (x2060 x1968 524288) (x174 x1968 524288) (x1580 x1968 524288) (=> (< 0 524288) (= x1968 (+ (* (x2238 x1968 524288) 524288) (x1157 x1968 524288))))))
(assert (and (x211 x69 32) (x2430 x69 32) (=> (and (> x69 0) (> 32 0)) (and (<= (* 32 (x2238 x69 32)) x69) (> (* (x2238 x69 32) 32) (- x69 32)))) (x1972 x69 32) (= (- x69 (x2453 31 x69)) (* (x2238 x69 32) 32)) (x2736 x69 32)))
(assert (x2159 33554432))
(assert (x2264 x583))
(assert (x2680 x169 x2810))
(assert (x2951 x1255))
(assert (x2264 x2007))
(assert (= (x1235 x2688) 0))
(assert (x2629 x2465))
(assert (x2264 x1923))
(assert (x2264 x1885))
(assert (x2264 x210))
(assert (x2264 x762))
(assert (x2264 x2293))
(assert (x2264 x632))
(assert (= (x1235 x2389) 0))
(assert (x2264 x2472))
(assert (and (x2060 x946 134217728) (x174 x946 134217728) (x1580 x946 134217728) (=> (< 0 134217728) (= x946 (+ (* (x2238 x946 134217728) 134217728) (x1157 x946 134217728))))))
(assert (= x527 (=> (= (= 0 x1200) x368) (and (=> (and (= x1835 (> x1200 0)) (not x368)) (and (=> (not x1835) x1108) (=> (and (and (or (and x175 (and (> 4294967296 x1449) (= 1 x718))) (and (not x175) (= x90 x718))) (and (= (> x90 0) x175) (= x1173 (x435 (+ 64 x1525))) (= x1985 (x435 (+ 32 x456))) (= x15 (x435 (+ x1173 32))) (= x1221 (x317 x2469)) (= x456 (x435 (+ 32 x15))) (= (x637 x2251) x1202) (= x2225 (x2310 x2071)) (= (x435 (+ x1525 32)) x1701) (= x2071 (x435 (+ 32 x2456))) (= x570 (x991 x2456)) (= (x435 (+ 128 x1173)) x510))) x1835) x2741))) (=> x368 x2808)))))
(assert (x2264 x1485))
(assert (= 0 (x1235 x1059)))
(assert (x2264 x2169))
(assert (and (x2060 x852 2) (x174 x852 2) (x1580 x852 2) (=> (< 0 2) (= x852 (+ (* (x2238 x852 2) 2) (x1157 x852 2))))))
(assert (x2264 x2789))
(assert (x1622 x790))
(assert (x2159 64))
(assert (= (and x216 x1820) x1614))
(assert (x2264 x1320))
(assert (x2375 x1273))
(assert (x2629 x1213))
(assert (x2629 x1752))
(assert (x2020 x2195))
(assert (= (x1049 (x450 84684860692432345508815850111325460890268974937005065116925575048889747129104)) 84684860692432345508815850111325460890268974937005065116925575048889747129104))
(assert (x2264 x531))
(assert (x2680 x951 x2397))
(assert (x2951 256))
(assert (and (x2060 x377 33554432) (x174 x377 33554432) (x1580 x377 33554432) (=> (< 0 33554432) (= x377 (+ (* (x2238 x377 33554432) 33554432) (x1157 x377 33554432))))))
(assert (= (x2979 768) (x1049 (x666 (x2979 768)))))
(assert (x1496 x1273))
(assert (x2264 x2024))
(assert (x2264 x742))
(assert (x2264 x519))
(assert (= (x799 x2872) 0))
(assert (x1797 x2668))
(assert (x2264 x384))
(assert (x1404 x1273))
(assert (x2264 x2358))
(assert (x2264 x2227))
(assert (and (x2060 x986 128) (x174 x986 128) (x1580 x986 128) (=> (< 0 128) (= x986 (+ (* (x2238 x986 128) 128) (x1157 x986 128))))))
(assert (x148 x2381))
(assert (x2264 x1721))
(assert (= (x1049 (x666 (x257 x1883))) (x257 x1883)))
(assert (x2264 x2418))
(assert (x2264 x672))
(assert (x2375 x946))
(assert (x2264 x1555))
(assert (x18 (x1082 2 x2851)))
(assert (= x683 (and x2828 (not x34))))
(assert (x2629 x163))
(assert (= (x1049 (x450 67108864)) 67108864))
(assert (= (or x2920 x1103) x212))
(assert (= 0 (x1235 (x435 (+ x1059 192)))))
(assert (x2264 x1571))
(assert (x2264 x232))
(assert (let ((x1379 (ite (< x121 256) (x1082 2 x121) 0))) (and (x2060 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x174 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1580 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1379 (+ (* (x2238 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1157 x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(assert (= (and x710 (not x706)) x2635))
(assert (= x2596 (and (not x900) x522)))
(assert (x2264 x636))
(assert (and (x2060 x143 65536) (x174 x143 65536) (x1580 x143 65536) (=> (< 0 65536) (= x143 (+ (* (x2238 x143 65536) 65536) (x1157 x143 65536))))))
(assert (= x2613 (and x1100 x1376)))
(assert (= x1002 (and (not x2812) x1223)))
(assert (= x33 (and (not x1538) x1992)))
(assert (x2264 x2352))
(assert (x2264 x1124))
(assert (x2264 x1161))
(assert (= x1616 (and x1323 (not x1908))))
(assert (x2951 x2625))
(assert (x2264 x573))
(assert (= 0 (x1235 (x435 (+ x2415 96)))))
(assert (x2264 x1631))
(assert (x2901 x1864))
(assert (x2264 x684))
(assert (= x467 (and (not x901) x1004)))
(assert (x729 x1603))
(assert (= x2672 (and (not x2781) x1730)))
(assert (= (x1049 (x450 712603760)) 712603760))
(assert (x2264 x40))
(assert (x2629 x1758))
(assert (x2264 x2814))
(assert (= (ite (< x2073 256) (x2238 x2027 (x1082 2 x2073)) 0) (x2414 x2027 x2073)))
(assert (= x1081 (and (not x429) x467)))
(assert (x1607 x596))
(assert (= x2231 (=> (= (< 32 x1032) x1644) (and (=> (not x1644) x1552) (=> x1644 x1108)))))
(assert (x2264 x2786))
(assert (= (x799 x1988) 0))
(assert (x2264 x2866))
(assert (x2159 128))
(assert (and (x2060 x1273 4096) (x174 x1273 4096) (x1580 x1273 4096) (=> (< 0 4096) (= x1273 (+ (* (x2238 x1273 4096) 4096) (x1157 x1273 4096))))))
(assert (x2731 x674 (- x612 x1190)))
(assert (x1700 (x1823 (x435 (+ x1026 64)))))
(assert (x2264 x2174))
(assert (x2264 x1232))
(assert (x226 x62))
(assert (x2264 x419))
(assert (= x167 (and x696 (not x2507))))
(assert (x2951 x1191))
(assert (x2264 x1474))
(assert (= (or x1002 x2565) x1251))
(assert (= x792 (and x2361 x193)))
(assert (x2264 x466))
(assert (= 0 (x799 x2493)))
(assert (x2264 x2666))
(assert (x2629 x881))
(assert (x894 x1067))
(assert (x2159 x454))
(assert (x2264 x1539))
(assert (x2264 x1026))
(assert (x2264 x2581))
(assert (x2264 x1998))
(assert (= (and x2684 x2978) x779))
(assert (= (=> (and (= x52 x438) (= (<= x52 224) x2601) (= (x435 (+ x1059 x438)) x1898)) (and (=> (and (= (x225 x2136) x172) (= x2767 (x435 (+ 32 x1059))) (= (x435 (+ x2787 32)) x1391) (= x628 (x435 (+ x1391 32))) (= x1721 (x668 (- x866 32))) (= (ite (>= 32 x52) (x581 (x666 (x747 x1059)) 0) (ite (>= 64 x52) (x2829 (x666 (x747 x1059)) (x666 (x747 (x435 (+ x1059 32)))) 0) (ite (<= x52 96) (x2290 (x666 (x747 x1059)) (x666 (x747 (x435 (+ x1059 32)))) (x666 (x747 (x435 (+ x1059 64)))) 0) (ite (>= 128 x52) (x1109 (x666 (x747 x1059)) (x666 (x747 (x435 (+ 32 x1059)))) (x666 (x747 (x435 (+ x1059 64)))) (x666 (x747 (x435 (+ x1059 96)))) 0) (ite (<= x52 160) (x1623 (x666 (x747 x1059)) (x666 (x747 (x435 (+ x1059 32)))) (x666 (x747 (x435 (+ x1059 64)))) (x666 (x747 (x435 (+ x1059 96)))) (x666 (x747 (x435 (+ x1059 128)))) 0) (ite (>= 192 x52) (x935 (x666 (x747 x1059)) (x666 (x747 (x435 (+ 32 x1059)))) (x666 (x747 (x435 (+ 64 x1059)))) (x666 (x747 (x435 (+ x1059 96)))) (x666 (x747 (x435 (+ 128 x1059)))) (x666 (x747 (x435 (+ x1059 160)))) 0) (ite (>= 224 x52) (x582 (x666 (x747 x1059)) (x666 (x747 (x435 (+ x1059 32)))) (x666 (x747 (x435 (+ x1059 64)))) (x666 (x747 (x435 (+ x1059 96)))) (x666 (x747 (x435 (+ 128 x1059)))) (x666 (x747 (x435 (+ x1059 160)))) (x666 (x747 (x435 (+ x1059 192)))) 0) (x666 x1658)))))))) x2865) (= x2787 (x435 (+ x1059 32))) (= x2149 (x225 x2032)) (= (x435 (+ 32 x628)) x2469) (= (>= 224 x1051) x2252) (= x1051 (x1258 x1059)) (= x866 (x668 (- x2469 x1059)))) (and (=> (and (= x1237 (> x438 0)) (= 0 x635) (= x533 (x1157 (x1049 (ite (>= 32 x1051) (x581 (x666 (x1258 x2767)) 0) (ite (>= 64 x1051) (x2829 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ 32 x2767)))) 0) (ite (>= 96 x1051) (x2290 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ x2767 32)))) (x666 (x1258 (x435 (+ 64 x2767)))) 0) (ite (<= x1051 128) (x1109 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ 32 x2767)))) (x666 (x1258 (x435 (+ x2767 64)))) (x666 (x1258 (x435 (+ x2767 96)))) 0) (ite (<= x1051 160) (x1623 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ x2767 32)))) (x666 (x1258 (x435 (+ 64 x2767)))) (x666 (x1258 (x435 (+ x2767 96)))) (x666 (x1258 (x435 (+ x2767 128)))) 0) (ite (<= x1051 192) (x935 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ 32 x2767)))) (x666 (x1258 (x435 (+ x2767 64)))) (x666 (x1258 (x435 (+ 96 x2767)))) (x666 (x1258 (x435 (+ 128 x2767)))) (x666 (x1258 (x435 (+ 160 x2767)))) 0) (ite (>= 224 x1051) (x582 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ x2767 32)))) (x666 (x1258 (x435 (+ 64 x2767)))) (x666 (x1258 (x435 (+ x2767 96)))) (x666 (x1258 (x435 (+ 128 x2767)))) (x666 (x1258 (x435 (+ 160 x2767)))) (x666 (x1258 (x435 (+ 192 x2767)))) 0) (x666 x1471))))))))) 21888242871839275222246405745257275088548364400416034343698204186575808495617)) (= x1480 1)) (and (=> (and (not x1237) (= 0 x2750)) x2845) (=> (and x1237 (= x2812 (> 32 x438))) (and (=> (not x2812) x2925) (=> x2812 x1108))))) x2252)) x2601)) x1472))
(assert (= (and (not x1559) x2503) x1688))
(assert (x2264 x1863))
(assert (and (x2060 x1798 8388608) (x174 x1798 8388608) (x1580 x1798 8388608) (=> (< 0 8388608) (= x1798 (+ (* (x2238 x1798 8388608) 8388608) (x1157 x1798 8388608))))))
(assert (x2159 x2502))
(assert (x2264 x2175))
(assert (= (and x1644 x2528) x2376))
(assert (x2264 x2359))
(assert (x2264 x1715))
(assert (x2264 x2105))
(assert (x2264 x445))
(assert (x2409 x674 x612 x1768 x1190))
(assert (and (x2060 x228 4294967296) (x174 x228 4294967296) (x1580 x228 4294967296) (=> (< 0 4294967296) (= x228 (+ (* (x2238 x228 4294967296) 4294967296) (x1157 x228 4294967296))))))
(assert (x2951 4194304))
(assert (= (and x856 x1070) x2069))
(assert (and (x2060 x946 262144) (x174 x946 262144) (x1580 x946 262144) (=> (< 0 262144) (= x946 (+ (* (x2238 x946 262144) 262144) (x1157 x946 262144))))))
(assert (x2264 x1405))
(assert (x2264 x2908))
(assert (x2264 x919))
(assert (= x1492 (and x2919 x2212)))
(assert (= 0 (x1235 (x435 (+ x2767 96)))))
(assert (x962 x460))
(assert (x2629 4096))
(assert (let ((x399 (x1082 2 x912))) (and (x1600 1 x399) (x2853 1 x399) (x831 1 x399) (and (= (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935) x399) (- (* 1 x399) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x399))) (= (- (* (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935) (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (x2427 1 (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* 1 x399) (x2427 1 x399)) (x2434 1 x399) (x795 1 x399))))
(assert (x2264 x2918))
(assert (x2264 x732))
(assert (= (and x1269 x678) x1431))
(assert (x2629 32))
(assert (= (x1235 x902) 0))
(assert (x2264 x1523))
(assert (= x1983 (and x307 x667)))
(assert (x2264 x2778))
(assert (x2264 x989))
(assert (x894 x540))
(assert (and (x2060 x946 4) (x174 x946 4) (x1580 x946 4) (=> (< 0 4) (= x946 (+ (* (x2238 x946 4) 4) (x1157 x946 4))))))
(assert (= (and (not x2454) x784) x1703))
(assert (= x413 (and x1690 x489)))
(assert (x2681 x2419))
(assert (= x1728 (and (not x862) x2037)))
(assert (=> (<= (x1258 (x435 (+ 160 x2767))) 10000) (= (x666 (x1258 (x435 (+ 160 x2767)))) (x450 (x1258 (x435 (+ 160 x2767)))))))
(assert (= x932 (or (and x1501 x39) (and x2242 x1905) (and x542 x1859) (and x1666 x2000) (and x1414 x532) (and x2861 x759) (and x347 x2445))))
(assert (and (x2060 x2079 4) (x174 x2079 4) (x1580 x2079 4) (=> (< 0 4) (= x2079 (+ (* (x2238 x2079 4) 4) (x1157 x2079 4))))))
(assert (x2264 x366))
(assert (x1700 (x2556 864)))
(assert (= 0 (x799 x2187)))
(assert (= (and x695 (not x2221)) x1777))
(assert (x2264 x2612))
(assert (x2264 x959))
(assert (= (and (not x1741) x2341) x1873))
(assert (x2264 x186))
(assert (x1017 x1886))
(assert (x2159 x2015))
(assert (x2264 x2892))
(assert (x2264 x2017))
(assert (x2159 x713))
(assert (= (x1049 (x666 (x2655 (x435 (+ 192 x2415))))) (x2655 (x435 (+ 192 x2415)))))
(assert (= x924 (or x2973 x302)))
(assert (= (and x2643 (not x2761)) x2432))
(assert (x2680 x40 (x1082 2 x2980)))
(assert (= (x1049 (x666 (x2979 800))) (x2979 800)))
(assert (x894 x1169))
(assert (x2264 x2660))
(assert (= (x1049 (x450 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x2629 2097152))
(assert (x2680 x1479 x1186))
(assert (x2951 x892))
(assert (x2264 x2896))
(assert (x2264 x1985))
(assert (= x907 (and x2033 x647)))
(assert (x2264 x2260))
(assert (=> (>= 10000 (x1823 (x435 (+ x1026 96)))) (= (x450 (x1823 (x435 (+ x1026 96)))) (x666 (x1823 (x435 (+ 96 x1026)))))))
(assert (x2951 x2381))
(assert (= x2294 (and (not x183) x2742)))
(assert (x2264 x2974))
(assert (= x1153 (and x1501 (not x39))))
(assert (x2264 x1171))
(assert (=> (>= 10000 (x257 (x435 (+ x1883 32)))) (= (x450 (x257 (x435 (+ x1883 32)))) (x666 (x257 (x435 (+ 32 x1883)))))))
(assert (let ((x1379 (ite x1122 x1792 (x54 2 x1792)))) (and (x2060 x1379 2) (x174 x1379 2) (x1580 x1379 2) (=> (< 0 2) (= x1379 (+ (* (x2238 x1379 2) 2) (x1157 x1379 2)))))))
(assert (and (x2060 x1161 33554432) (x174 x1161 33554432) (x1580 x1161 33554432) (=> (< 0 33554432) (= x1161 (+ (* (x2238 x1161 33554432) 33554432) (x1157 x1161 33554432))))))
(assert (= x514 (and x1906 x1193)))
(assert (x894 x1115))
(assert (x2264 x2073))
(assert (x2264 x1397))
(assert (x2264 x2705))
(assert (x2629 x240))
(assert (x1700 (x2115 (x435 (+ x988 64)))))
(assert (x2629 x2154))
(assert (x2264 x2196))
(assert (x2264 x1010))
(assert (x2159 x77))
(assert (x2159 x1864))
(assert (and (x2060 x1047 8192) (x174 x1047 8192) (x1580 x1047 8192) (=> (< 0 8192) (= x1047 (+ (* (x2238 x1047 8192) 8192) (x1157 x1047 8192))))))
(assert (= (x1049 (x450 16384)) 16384))
(assert (= (and x1608 (not x2687)) x1795))
(assert (x1707 x828))
(assert (and (x2060 x1752 1048576) (x174 x1752 1048576) (x1580 x1752 1048576) (=> (< 0 1048576) (= x1752 (+ (* (x2238 x1752 1048576) 1048576) (x1157 x1752 1048576))))))
(assert (x2264 x438))
(assert (x2264 x1253))
(assert (x2264 x1855))
(assert (= (x666 2147483648) (x450 2147483648)))
(assert (x2629 x53))
(assert (x2264 x1060))
(assert (= x2973 (and x2987 x701)))
(assert (= x2189 (and x2181 x2965)))
(assert (and (x2060 x2465 128) (x174 x2465 128) (x1580 x2465 128) (=> (< 0 128) (= x2465 (+ (* (x2238 x2465 128) 128) (x1157 x2465 128))))))
(assert (x2951 x2683))
(assert (= 0 (x799 x2953)))
(assert (x381 x946))
(assert (x2159 x1094))
(assert (= (=> (= (= 0 x919) x904) (and (=> x904 x2808) (=> (and (not x904) (= (> x919 0) x2345)) (and (=> (and (and (and (= (x1592 x94) x978) (= (x435 (+ 64 x1502)) x242) (= (x435 (+ x1502 32)) x2257) (= x307 (= 0 x978))) (or (and x307 (and (= x2512 (x1592 x2365)) (= (= x2512 0) x2380))) (and (not x307) (= x2380 x307)))) x2345) x1537) (=> (not x2345) x1108))))) x2844))
(assert (=> (>= 10000 (x2115 (x435 (+ 32 x988)))) (= (x666 (x2115 (x435 (+ x988 32)))) (x450 (x2115 (x435 (+ x988 32)))))))
(assert (x2264 x2211))
(assert (x2264 x1758))
(assert (and (x1600 32 x384) (x2853 32 x384) (x831 32 x384) (and (= (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x384) (- (* 32 x384) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x384))) (= (- (* (- x384 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x384 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x384 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x384 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x2427 32 (- x384 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* 32 x384) (x2427 32 x384)) (x2434 32 x384) (x795 32 x384)))
(assert (=> (>= 10000 (x257 (x435 (+ 192 x1883)))) (= (x450 (x257 (x435 (+ 192 x1883)))) (x666 (x257 (x435 (+ 192 x1883)))))))
(assert (x2951 x2185))
(assert (x1146 x1273))
(assert (and (x2060 x1390 1024) (x174 x1390 1024) (x1580 x1390 1024) (=> (< 0 1024) (= x1390 (+ (* (x2238 x1390 1024) 1024) (x1157 x1390 1024))))))
(assert (= (or x1891 x814) x2279))
(assert (= (and x2151 (not x700)) x1913))
(assert (= (and x2279 (not x904)) x2756))
(assert (x2264 x2218))
(assert (= (and x2331 x1515) x772))
(assert (and (x2060 x2381 16) (x174 x2381 16) (x1580 x2381 16) (=> (< 0 16) (= x2381 (+ (* (x2238 x2381 16) 16) (x1157 x2381 16))))))
(assert (x1395 x1279))
(assert (x2264 x760))
(assert (x2054 x1408))
(assert (= 0 (x1235 (x435 (+ 64 x2767)))))
(assert (=> (>= 10000 (x1823 (x435 (+ x1026 128)))) (= (x666 (x1823 (x435 (+ x1026 128)))) (x450 (x1823 (x435 (+ x1026 128)))))))
(assert (x2264 x2444))
(assert (x2061 x2921))
(assert (=> (<= (x2655 (x435 (+ x2415 96))) 10000) (= (x666 (x2655 (x435 (+ 96 x2415)))) (x450 (x2655 (x435 (+ 96 x2415)))))))
(assert (=> (>= 10000 (x2655 (x435 (+ x2415 64)))) (= (x666 (x2655 (x435 (+ x2415 64)))) (x450 (x2655 (x435 (+ x2415 64)))))))
(assert (x1700 x1006))
(assert (x2159 x2170))
(assert (= x442 (and (not x2943) x389)))
(assert (x2629 x1110))
(assert (x826 x2336))
(assert (= x1666 (or x1120 x1712)))
(assert (x2264 x2787))
(assert (x2264 x2121))
(assert (x2264 x2456))
(assert (= 0 (x799 (x435 (+ 96 x2850)))))
(assert (= (and x1204 x2380) x2423))
(assert (x2951 x163))
(assert (x729 x1190))
(assert (x2159 x1167))
(assert (= x1783 (or x2888 x2833)))
(assert (x2951 x981))
(assert (x2264 x1765))
(assert (x1017 x946))
(assert (x2264 x2205))
(assert (x2264 x1239))
(assert (= x1504 (and (not x2806) x1952)))
(assert (= (x799 x2825) 0))
(assert (x2264 x1946))
(assert (x2159 x1839))
(assert (x2159 x714))
(assert (x2629 x2464))
(assert (x2264 x496))
(assert (x2540 x80))
(assert (and (x2060 x946 16) (x174 x946 16) (x1580 x946 16) (=> (< 0 16) (= x946 (+ (* (x2238 x946 16) 16) (x1157 x946 16))))))
(assert (= (x2917 (x435 (+ x2850 64))) (x1049 (x666 (x2917 (x435 (+ 64 x2850)))))))
(assert (and (x2060 x946 2097152) (x174 x946 2097152) (x1580 x946 2097152) (=> (< 0 2097152) (= x946 (+ (* (x2238 x946 2097152) 2097152) (x1157 x946 2097152))))))
(assert (= (x1049 (x666 (x711 (x435 (+ 96 x2495))))) (x711 (x435 (+ 96 x2495)))))
(assert (= (and x964 (not x1697)) x577))
(assert (= 0 (x1235 x2708)))
(assert (= (and (not x1008) x2278) x979))
(assert (x2159 x310))
(assert (x2264 x635))
(assert (x2159 x2954))
(assert (= (x666 (x1049 (ite (>= 32 x1051) (x581 (x666 (x1258 x2767)) 0) (ite (>= 64 x1051) (x2829 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ x2767 32)))) 0) (ite (>= 96 x1051) (x2290 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ 32 x2767)))) (x666 (x1258 (x435 (+ 64 x2767)))) 0) (ite (>= 128 x1051) (x1109 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ x2767 32)))) (x666 (x1258 (x435 (+ 64 x2767)))) (x666 (x1258 (x435 (+ x2767 96)))) 0) (ite (<= x1051 160) (x1623 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ x2767 32)))) (x666 (x1258 (x435 (+ x2767 64)))) (x666 (x1258 (x435 (+ x2767 96)))) (x666 (x1258 (x435 (+ x2767 128)))) 0) (ite (>= 192 x1051) (x935 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ 32 x2767)))) (x666 (x1258 (x435 (+ 64 x2767)))) (x666 (x1258 (x435 (+ 96 x2767)))) (x666 (x1258 (x435 (+ x2767 128)))) (x666 (x1258 (x435 (+ 160 x2767)))) 0) (ite (<= x1051 224) (x582 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ x2767 32)))) (x666 (x1258 (x435 (+ x2767 64)))) (x666 (x1258 (x435 (+ x2767 96)))) (x666 (x1258 (x435 (+ 128 x2767)))) (x666 (x1258 (x435 (+ 160 x2767)))) (x666 (x1258 (x435 (+ x2767 192)))) 0) (x666 x1471)))))))))) (ite (>= 32 x1051) (x581 (x666 (x1258 x2767)) 0) (ite (>= 64 x1051) (x2829 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ 32 x2767)))) 0) (ite (>= 96 x1051) (x2290 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ x2767 32)))) (x666 (x1258 (x435 (+ x2767 64)))) 0) (ite (>= 128 x1051) (x1109 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ 32 x2767)))) (x666 (x1258 (x435 (+ 64 x2767)))) (x666 (x1258 (x435 (+ x2767 96)))) 0) (ite (>= 160 x1051) (x1623 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ x2767 32)))) (x666 (x1258 (x435 (+ 64 x2767)))) (x666 (x1258 (x435 (+ 96 x2767)))) (x666 (x1258 (x435 (+ 128 x2767)))) 0) (ite (<= x1051 192) (x935 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ x2767 32)))) (x666 (x1258 (x435 (+ 64 x2767)))) (x666 (x1258 (x435 (+ 96 x2767)))) (x666 (x1258 (x435 (+ 128 x2767)))) (x666 (x1258 (x435 (+ x2767 160)))) 0) (ite (>= 224 x1051) (x582 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ x2767 32)))) (x666 (x1258 (x435 (+ 64 x2767)))) (x666 (x1258 (x435 (+ x2767 96)))) (x666 (x1258 (x435 (+ x2767 128)))) (x666 (x1258 (x435 (+ x2767 160)))) (x666 (x1258 (x435 (+ x2767 192)))) 0) (x666 x1471))))))))))
(assert (x659 x787))
(assert (= (and x2716 x259) x1292))
(assert (x2951 x2152))
(assert (x2629 x2595))
(assert (x2951 (ite x2072 x1667 (x54 2 x1667))))
(assert (= (x1823 x1026) (x1049 (x666 (x1823 x1026)))))
(assert (x2264 x121))
(assert (x2264 x1762))
(assert (= 13392588948715843804641432497768002650278120570034223513918757245338268106653 (x1049 (x450 13392588948715843804641432497768002650278120570034223513918757245338268106653))))
(assert (x729 (x1082 2 x2980)))
(assert (x2629 x181))
(assert (= (x1235 (x435 (+ 160 x2767))) 0))
(assert (=> (>= 10000 (x2917 (x435 (+ x2850 64)))) (= (x450 (x2917 (x435 (+ x2850 64)))) (x666 (x2917 (x435 (+ x2850 64)))))))
(assert (x2264 x1596))
(assert (x2951 x1555))
(assert (x2264 x679))
(assert (x2159 x2226))
(assert (and (x2060 x1273 134217728) (x174 x1273 134217728) (x1580 x1273 134217728) (=> (< 0 134217728) (= x1273 (+ (* (x2238 x1273 134217728) 134217728) (x1157 x1273 134217728))))))
(assert (= (and (not x2554) x86) x388))
(assert (x2264 x2932))
(assert (x1700 (x1258 (x435 (+ 32 x2767)))))
(assert (x2264 x648))
(assert (x2264 x1024))
(assert (x2264 x926))
(assert (x2264 x2226))
(assert (=> (>= 10000 (x2979 800)) (= (x450 (x2979 800)) (x666 (x2979 800)))))
(assert (and (x2060 x2044 281474976710656) (x174 x2044 281474976710656) (x1580 x2044 281474976710656) (=> (< 0 281474976710656) (= x2044 (+ (* (x2238 x2044 281474976710656) 281474976710656) (x1157 x2044 281474976710656))))))
(assert (x2264 x1218))
(assert (= (=> (= x478 (not (< 4 x989))) (and (=> (= x121 2) x1951) x478)) x2321))
(assert (= x1916 (and x1881 x820)))
(assert (= x1992 (and (not x347) x2445)))
(assert (x2264 x153))
(assert (x2264 x2049))
(assert (x2264 x625))
(assert (x2264 x1298))
(assert (x2951 x2743))
(assert (= (and x1995 x2390) x680))
(assert (x1700 x330))
(assert (x2629 x1765))
(assert (x2264 x1116))
(assert (x2264 x357))
(assert (x2264 x2342))
(assert (x2264 x1560))
(assert (x2951 x445))
(assert (x2264 x423))
(assert (x2629 4294967295))
(assert (and (x2060 x790 268435456) (x174 x790 268435456) (x1580 x790 268435456) (=> (< 0 268435456) (= x790 (+ (* (x2238 x790 268435456) 268435456) (x1157 x790 268435456))))))
(assert (x2264 x128))
(assert (x826 x1760))
(assert (x2264 x2469))
(assert (x729 x1149))
(assert (= x1223 (and x1237 x2189)))
(assert (and (x211 x756 26959946667150639794667015087019630673637144422540572481103610249216) (x2430 x756 26959946667150639794667015087019630673637144422540572481103610249216) (=> (and (> x756 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 0)) (and (<= (* 26959946667150639794667015087019630673637144422540572481103610249216 (x2238 x756 26959946667150639794667015087019630673637144422540572481103610249216)) x756) (> (* (x2238 x756 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) (- x756 26959946667150639794667015087019630673637144422540572481103610249216)))) (x1972 x756 26959946667150639794667015087019630673637144422540572481103610249216) (= (- x756 (x2453 26959946667150639794667015087019630673637144422540572481103610249215 x756)) (* (x2238 x756 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)) (x2736 x756 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= (and x832 x1355) x1529))
(assert (= (x1049 (x666 (x1823 (x435 (+ x1026 192))))) (x1823 (x435 (+ 192 x1026)))))
(assert (and (x2060 x1518 32768) (x174 x1518 32768) (x1580 x1518 32768) (=> (< 0 32768) (= x1518 (+ (* (x2238 x1518 32768) 32768) (x1157 x1518 32768))))))
(assert (x2264 x1127))
(assert (and (x2060 x2683 268435456) (x174 x2683 268435456) (x1580 x2683 268435456) (=> (< 0 268435456) (= x2683 (+ (* (x2238 x2683 268435456) 268435456) (x1157 x2683 268435456))))))
(assert (x1813 x445))
(assert (x2264 x2269))
(assert (x2264 x2056))
(assert (x2264 x2983))
(assert (x2264 x1074))
(assert (x2264 x2992))
(assert (x2264 x1467))
(assert (and (x2060 x240 1073741824) (x174 x240 1073741824) (x1580 x240 1073741824) (=> (< 0 1073741824) (= x240 (+ (* (x2238 x240 1073741824) 1073741824) (x1157 x240 1073741824))))))
(assert (= x916 (and (not x1083) x1426)))
(assert (x2264 x62))
(assert (x2264 x1453))
(assert (x2264 x2567))
(assert (= (or x2619 x703) x1905))
(assert (x2264 x1768))
(assert (x2264 x1670))
(assert (x2264 x888))
(assert (= x1906 (and x1788 (not x945))))
(assert (=> (<= (x2917 (x435 (+ x2850 192))) 10000) (= (x450 (x2917 (x435 (+ 192 x2850)))) (x666 (x2917 (x435 (+ x2850 192)))))))
(assert (x2159 x1158))
(assert (x2264 x731))
(assert (= (and x1778 (not x2942)) x567))
(assert (x2264 x2785))
(assert (x2264 x1549))
(assert (and (x2060 x445 4) (x174 x445 4) (x1580 x445 4) (=> (< 0 4) (= x445 (+ (* (x2238 x445 4) 4) (x1157 x445 4))))))
(assert (and (x2060 x228 2147483648) (x174 x228 2147483648) (x1580 x228 2147483648) (=> (< 0 2147483648) (= x228 (+ (* (x2238 x228 2147483648) 2147483648) (x1157 x228 2147483648))))))
(assert (x643 x946))
(assert (x2264 x2367))
(assert (x2159 x390))
(assert (x2264 x7))
(assert (= (x666 105015941155238675870317744051118741627952855755073633622858957636564748080881) (x450 105015941155238675870317744051118741627952855755073633622858957636564748080881)))
(assert (x2264 x1883))
(assert (x2159 x1114))
(assert (=> (>= 10000 (x2979 768)) (= (x450 (x2979 768)) (x666 (x2979 768)))))
(assert (x2264 x812))
(assert (x2731 x1768 (- x1190 x674)))
(assert (x2264 x1398))
(assert (= (x799 x249) 0))
(assert (x2159 x315))
(assert (x2264 x74))
(assert (x2264 x1354))
(assert (= 0 (x1235 x2627)))
(assert (x2264 x974))
(assert (x2951 (ite x1122 x1792 (x54 2 x1792))))
(assert (x2264 x1020))
(assert (= (x1258 (x435 (+ 128 x2767))) (x1049 (x666 (x1258 (x435 (+ 128 x2767)))))))
(assert (= (or x754 x187) x639))
(assert (x2264 x2690))
(assert (x2264 x1618))
(assert (x2951 268435456))
(assert (= (x711 x2495) (x1049 (x666 (x711 x2495)))))
(assert (x1700 (x2556 736)))
(assert (= (x799 x2274) 0))
(assert (= (and (not x1827) x604) x2504))
(assert (=> (<= (x2655 (x435 (+ x2415 160))) 10000) (= (x666 (x2655 (x435 (+ x2415 160)))) (x450 (x2655 (x435 (+ x2415 160)))))))
(assert (x729 x756))
(assert (x2951 x1281))
(assert (x2264 x1866))
(assert (x2629 x1468))
(assert (x2159 x2974))
(assert (x2264 x1236))
(assert (= x230 (and x1957 x1138)))
(assert (= (x1049 (x450 19065496825945555802944500459784659360370071723095918844459983366851717029121)) 19065496825945555802944500459784659360370071723095918844459983366851717029121))
(assert (and (x2060 x2668 131072) (x174 x2668 131072) (x1580 x2668 131072) (=> (< 0 131072) (= x2668 (+ (* (x2238 x2668 131072) 131072) (x1157 x2668 131072))))))
(assert (= (and x1698 x905) x2076))
(assert (x2264 x2111))
(assert (= (x1049 (x666 (x257 (x435 (+ 32 x1883))))) (x257 (x435 (+ x1883 32)))))
(assert (x2629 4))
(assert (x2951 x2081))
(assert (x2264 x2819))
(assert (x2521 x1839))
(assert (x1700 (x2655 (x435 (+ 128 x2415)))))
(assert (= x2579 (and x766 x1912)))
(assert (x2264 x568))
(assert (x2951 x2530))
(assert (x2629 x1288))
(assert (= x929 (and x2882 x1214)))
(assert (x2264 x2137))
(assert (= x665 (=> (and (= (> 64 x602) x1339) (= x602 (x2757 864))) (and (=> (and (= x867 x2637) (= x2961 x672)) x663) x1339))))
(assert (= (and (not x2706) x952) x695))
(assert (= 4294967296 (x1049 (x450 4294967296))))
(assert (= x2004 (and x2533 (not x1550))))
(assert (x2264 x1490))
(assert (x2264 x1115))
(assert (= (and (not x1065) x1314) x1891))
(assert (= x872 (and x453 x651)))
(assert (= (and (not x759) x2861) x823))
(assert (x2264 x260))
(assert (x2264 x1542))
(assert (x2264 x1480))
(assert (x2010 x1583 x2769))
(assert (= x865 (and x939 x1974)))
(assert (x2264 x383))
(assert (x2264 x266))
(assert (x2264 x1969))
(assert (=> (<= x2791 10000) (= (x450 x2791) (x666 x2791))))
(assert (x2951 x2465))
(assert (=> (>= 10000 (x1258 (x435 (+ x2767 64)))) (= (x666 (x1258 (x435 (+ 64 x2767)))) (x450 (x1258 (x435 (+ x2767 64)))))))
(assert (x2159 x1852))
(assert (= x375 (and x1511 (not x1194))))
(assert (x2264 x1191))
(assert (=> (<= (x2115 (x435 (+ x988 64))) 10000) (= (x666 (x2115 (x435 (+ x988 64)))) (x450 (x2115 (x435 (+ 64 x988)))))))
(assert (= (x1049 (x666 (x747 x1059))) (x747 x1059)))
(assert (and (x2060 x1255 8) (x174 x1255 8) (x1580 x1255 8) (=> (< 0 8) (= x1255 (+ (* (x2238 x1255 8) 8) (x1157 x1255 8))))))
(assert (= x427 (and (not x2156) x404)))
(assert (x2264 x2598))
(assert (x2264 x2153))
(assert (x1098 x140))
(assert (=> (<= (x2979 928) 10000) (= (x450 (x2979 928)) (x666 (x2979 928)))))
(assert (x2492 x1785))
(assert (= (x450 63660573315282705801001086741532748704021327057287729713677662699241823960296) (x666 63660573315282705801001086741532748704021327057287729713677662699241823960296)))
(assert (x1017 x1273))
(assert (= x1551 (and (not x2978) x2684)))
(assert (x2629 x2381))
(assert (x1849 x1252))
(assert (x2264 x1436))
(assert (x2264 x2873))
(assert (x2264 x2875))
(assert (= x2191 (and (not x2168) x1568)))
(assert (and (x211 x2175 2) (x2430 x2175 2) (=> (and (> x2175 0) (> 2 0)) (and (<= (* 2 (x2238 x2175 2)) x2175) (> (* (x2238 x2175 2) 2) (- x2175 2)))) (x1972 x2175 2) (= (- x2175 (x2453 1 x2175)) (* (x2238 x2175 2) 2)) (x2736 x2175 2)))
(assert (x2629 x1408))
(assert (x2159 x511))
(assert (x2264 x2530))
(assert (x2264 x2435))
(assert (x18 x1587))
(assert (x2264 x1255))
(assert (x2264 x1168))
(assert (x2264 x1775))
(assert (x2629 x228))
(assert (x2264 x1338))
(assert (x2264 x2266))
(assert (x2038 x1767))
(assert (x2264 x2392))
(assert (x2264 x2298))
(assert (x2159 x304))
(assert (x2264 x1286))
(assert (=> (<= (x2115 (x435 (+ 192 x988))) 10000) (= (x666 (x2115 (x435 (+ x988 192)))) (x450 (x2115 (x435 (+ x988 192)))))))
(assert (x1271 x1792))
(assert (x2629 16777216))
(assert (= (x666 18446744073709551615) (x450 18446744073709551615)))
(assert (x2264 x1))
(assert (x2680 x2722 x2175))
(assert (x2629 x888))
(assert (= (x2655 (x435 (+ 96 x2415))) (x1049 (x666 (x2655 (x435 (+ x2415 96)))))))
(assert (x2264 x992))
(assert (x2264 x189))
(assert (= (or x2890 x2330) x2728))
(assert (x2264 x1064))
(assert (= x2707 (and x2554 x86)))
(assert (x2264 x2513))
(assert (= x2369 (and x841 x156)))
(assert (x1700 (x2115 (x435 (+ 128 x988)))))
(assert (x1700 (x711 (x435 (+ 64 x2495)))))
(assert (x2264 x2975))
(assert (x2951 65536))
(assert (x786 x946))
(assert (x1700 (x2917 (x435 (+ 192 x2850)))))
(assert (= (and x308 x909) x1402))
(assert (= (=> (= (> x2205 32) x109) (and (=> x109 x1108) (=> (not x109) x1553))) x2089))
(assert (= (x799 x239) 0))
(assert (let ((x1379 (x1049 (ite (>= 32 x1051) (x581 (x666 (x1258 x2767)) 0) (ite (>= 64 x1051) (x2829 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ 32 x2767)))) 0) (ite (<= x1051 96) (x2290 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ 32 x2767)))) (x666 (x1258 (x435 (+ x2767 64)))) 0) (ite (>= 128 x1051) (x1109 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ 32 x2767)))) (x666 (x1258 (x435 (+ x2767 64)))) (x666 (x1258 (x435 (+ 96 x2767)))) 0) (ite (>= 160 x1051) (x1623 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ x2767 32)))) (x666 (x1258 (x435 (+ x2767 64)))) (x666 (x1258 (x435 (+ 96 x2767)))) (x666 (x1258 (x435 (+ 128 x2767)))) 0) (ite (<= x1051 192) (x935 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ x2767 32)))) (x666 (x1258 (x435 (+ 64 x2767)))) (x666 (x1258 (x435 (+ x2767 96)))) (x666 (x1258 (x435 (+ x2767 128)))) (x666 (x1258 (x435 (+ 160 x2767)))) 0) (ite (>= 224 x1051) (x582 (x666 (x1258 x2767)) (x666 (x1258 (x435 (+ x2767 32)))) (x666 (x1258 (x435 (+ x2767 64)))) (x666 (x1258 (x435 (+ 96 x2767)))) (x666 (x1258 (x435 (+ 128 x2767)))) (x666 (x1258 (x435 (+ x2767 160)))) (x666 (x1258 (x435 (+ x2767 192)))) 0) (x666 x1471))))))))))) (and (x2060 x1379 21888242871839275222246405745257275088548364400416034343698204186575808495617) (x174 x1379 21888242871839275222246405745257275088548364400416034343698204186575808495617) (x1580 x1379 21888242871839275222246405745257275088548364400416034343698204186575808495617) (=> (< 0 21888242871839275222246405745257275088548364400416034343698204186575808495617) (= x1379 (+ (* (x2238 x1379 21888242871839275222246405745257275088548364400416034343698204186575808495617) 21888242871839275222246405745257275088548364400416034343698204186575808495617) (x1157 x1379 21888242871839275222246405745257275088548364400416034343698204186575808495617)))))))
(assert (= x60 (and x1978 (not x910))))
(assert (x2264 x2542))
(assert (x2264 x481))
(assert (x2951 4096))
(assert (x2951 524288))
(assert (x2264 x918))
(assert (x2264 x569))
(assert (x2264 x487))
(assert (= (and (not x1225) x1696) x2654))
(assert (= x1440 (and x1566 x804)))
(assert (x1933 x727))
(assert (x2159 x127))
(assert (x2264 x424))
(assert (x2264 x2347))
(assert (x2629 x445))
(assert (= x1488 (and (not x980) x81)))
(assert (= (and x1264 x2132) x152))
(assert (x2264 x818))
(assert (x2264 x943))
(assert (x2901 x2502))
(assert (= (x450 712603760) (x666 712603760)))
(assert (x2264 x746))
(assert (=> (>= 10000 (x747 (x435 (+ x1059 160)))) (= (x450 (x747 (x435 (+ 160 x1059)))) (x666 (x747 (x435 (+ 160 x1059)))))))
(assert (x2264 x2518))
(assert (x2264 x1518))
(assert (x2264 x29))
(assert (= (ite (> 256 x2537) (x2238 x2593 (x1082 2 x2537)) 0) (x2414 x2593 x2537)))
(assert (x2951 (x1049 (ite (<= x1352 32) (x581 (x666 (x2917 x2850)) 0) (ite (>= 64 x1352) (x2829 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ x2850 32)))) 0) (ite (<= x1352 96) (x2290 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ x2850 32)))) (x666 (x2917 (x435 (+ x2850 64)))) 0) (ite (<= x1352 128) (x1109 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) (x666 (x2917 (x435 (+ x2850 64)))) (x666 (x2917 (x435 (+ x2850 96)))) 0) (ite (<= x1352 160) (x1623 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) (x666 (x2917 (x435 (+ x2850 64)))) (x666 (x2917 (x435 (+ 96 x2850)))) (x666 (x2917 (x435 (+ 128 x2850)))) 0) (ite (>= 192 x1352) (x935 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) (x666 (x2917 (x435 (+ x2850 64)))) (x666 (x2917 (x435 (+ x2850 96)))) (x666 (x2917 (x435 (+ 128 x2850)))) (x666 (x2917 (x435 (+ x2850 160)))) 0) (ite (>= 224 x1352) (x582 (x666 (x2917 x2850)) (x666 (x2917 (x435 (+ 32 x2850)))) (x666 (x2917 (x435 (+ x2850 64)))) (x666 (x2917 (x435 (+ x2850 96)))) (x666 (x2917 (x435 (+ 128 x2850)))) (x666 (x2917 (x435 (+ x2850 160)))) (x666 (x2917 (x435 (+ 192 x2850)))) 0) (x666 x870)))))))))))
(assert (= (and x2805 (not x2309)) x1788))
(assert (x2264 x2569))
(assert (x2264 x2022))
(assert (= (x1049 (x450 4150754238950871990496398701790393298955498680186071184456654025675166573995)) 4150754238950871990496398701790393298955498680186071184456654025675166573995))
(assert (x2264 x412))
(assert (x1700 (x257 (x435 (+ x1883 96)))))
(assert (and (x211 x411 32) (x2430 x411 32) (=> (and (> x411 0) (> 32 0)) (and (<= (* 32 (x2238 x411 32)) x411) (> (* (x2238 x411 32) 32) (- x411 32)))) (x1972 x411 32) (= (- x411 (x2453 31 x411)) (* (x2238 x411 32) 32)) (x2736 x411 32)))
(assert (x2264 x2320))
(assert (= x2976 (and (not x844) x2091)))
(assert (= (and x252 x1811) x1243))
(assert (= (and (not x2394) x230) x2470))
(assert (x2264 x2952))
(assert (x2264 x486))
(assert (x2264 x931))
(assert (and (x2060 x128 4294967296) (x174 x128 4294967296) (x1580 x128 4294967296) (=> (< 0 4294967296) (= x128 (+ (* (x2238 x128 4294967296) 4294967296) (x1157 x128 4294967296))))))
(assert (= (and (not x954) x2564) x525))
(assert (x2264 x840))
(assert (x2264 x2675))
(assert (and (x2060 x1273 256) (x174 x1273 256) (x1580 x1273 256) (=> (< 0 256) (= x1273 (+ (* (x2238 x1273 256) 256) (x1157 x1273 256))))))
(assert (and (x2060 x1390 2048) (x174 x1390 2048) (x1580 x1390 2048) (=> (< 0 2048) (= x1390 (+ (* (x2238 x1390 2048) 2048) (x1157 x1390 2048))))))
(assert (x2629 x210))
(assert (x2264 x116))
(assert (= 0 (x799 (x435 (+ x1883 128)))))
(assert (x2264 x897))
(assert (= x1910 (and x1212 x1410)))
(assert (x2264 x127))
(assert (x2264 x1149))
(assert (x2264 x1804))
(assert (= x3000 (and x22 x2086)))
(assert (x2264 x782))
(assert (x2629 x1850))
(assert (x2264 x1586))
(assert (x2264 x2877))
(assert (x457 x888))
(assert (and (x2060 x2374 16384) (x174 x2374 16384) (x1580 x2374 16384) (=> (< 0 16384) (= x2374 (+ (* (x2238 x2374 16384) 16384) (x1157 x2374 16384))))))
(assert (x2264 x2744))
(assert (x2264 x58))
(assert (x2159 x2235))
(assert (x2264 x233))
(assert (x2264 x986))
(assert (x2264 x778))
(assert (= x605 (and (not x216) x1820)))
(assert (= false x971))
(assert (x2951 x1169))
(assert (x2061 x224))
(assert (x2264 x1500))
(assert (x2264 x163))
(assert (x2264 x2746))
(assert (x1496 x946))
(assert (x2159 4194304))
(assert (x1496 x1439))
(assert (and (x2060 x2937 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x174 x2937 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x1580 x2937 21888242871839275222246405745257275088696311157297823662689037894645226208583) (=> (< 0 21888242871839275222246405745257275088696311157297823662689037894645226208583) (= x2937 (+ (* (x2238 x2937 21888242871839275222246405745257275088696311157297823662689037894645226208583) 21888242871839275222246405745257275088696311157297823662689037894645226208583) (x1157 x2937 21888242871839275222246405745257275088696311157297823662689037894645226208583))))))
(assert (= (x666 15397661830938158195220872607788450164522003659458108417904919983213308643927) (x450 15397661830938158195220872607788450164522003659458108417904919983213308643927)))
(assert (x18 x950))
(assert (x2264 x490))
(assert (= 0 (x1235 x400)))
(assert (x2629 x1798))
(assert (x2264 x2729))
(assert (= (and x1862 x2958) x1937))
(assert (x2951 x2518))
(assert (x2951 x986))
(assert (= x2088 (=> (= (> x2357 32) x12) (and (=> x12 x1373) (=> (not x12) x953)))))
(assert (= (x799 x1883) 0))
(assert (x18 x1257))
(assert (x2629 262144))
(assert (and (x2060 x163 1048576) (x174 x163 1048576) (x1580 x163 1048576) (=> (< 0 1048576) (= x163 (+ (* (x2238 x163 1048576) 1048576) (x1157 x163 1048576))))))
(assert (= x2795 (and x2388 (not x349))))
(assert (x2264 x1450))
(assert (x2416 x1765))
(assert (x2629 x1775))
(assert (x2629 16384))
(assert (x2264 x658))
(assert (x1700 x1066))
(assert (x2264 x488))
(assert (x2264 x2686))
(assert (=> (<= (x711 (x435 (+ x2495 128))) 10000) (= (x450 (x711 (x435 (+ 128 x2495)))) (x666 (x711 (x435 (+ 128 x2495)))))))
(assert (= x2299 (and x1380 x346)))
(assert (x1700 (x747 (x435 (+ x1059 64)))))
(assert (x2264 x396))
(assert (x2264 x2754))
(assert (x2264 x774))
(assert (x2951 536870912))
(assert (=> (>= 10000 (x2115 (x435 (+ 96 x988)))) (= (x450 (x2115 (x435 (+ 96 x988)))) (x666 (x2115 (x435 (+ x988 96)))))))
(assert (x2159 x1641))
(assert (x2264 x2570))
(assert (x2680 281474976710655 x1257))
(assert (= (x1049 (x666 (x747 (x435 (+ 160 x1059))))) (x747 (x435 (+ 160 x1059)))))
(assert (= 2712691696 (x1049 (x450 2712691696))))
(assert (x2264 x2668))
(assert (x2264 x2825))
(assert (= x1270 (and x2228 x915)))
(assert (x2264 x1043))
(assert (x2416 x1273))
(assert (x2264 x2186))
(assert (x2264 x365))
(assert (x2629 x1573))
(assert (= 0 (x799 x403)))
(assert (= (and x1675 x1913) x1159))
(assert (x2264 x1021))
(assert (= (x450 2578352110) (x666 2578352110)))
(assert (x2264 x2989))
(assert (x2264 x2698))
(assert (x1700 (x1258 (x435 (+ x2767 96)))))
(assert (x2264 x1113))
(assert (= x2165 (and x2902 x118)))
(assert (x2264 x2993))
(assert (x1700 x1319))
(assert (x2264 x179))
(assert (x2159 x1218))
(assert (x1247 x1273))
(assert (= (and x2728 x1240) x1261))
(assert (x2629 x2714))
(assert (x2629 x128))
(assert (= x2565 (and x2189 (not x1237))))
(assert (x2629 64))
(assert (x2248 x2107))
(assert (= (and (not x749) x1280) x2296))
(assert (= x2340 (and x2805 x2309)))
(assert (x2264 x2936))
(assert (= (x2556 800) (x1049 (x666 (x2556 800)))))
(assert (=> (>= 10000 (x1258 (x435 (+ x2767 96)))) (= (x666 (x1258 (x435 (+ 96 x2767)))) (x450 (x1258 (x435 (+ 96 x2767)))))))
(assert (x2264 x2171))
(assert (x2409 x1768 x1190 x612 x674))
(assert (x2264 x1257))
(assert (x2264 x1396))
(assert (and (x2060 x576 4294967296) (x174 x576 4294967296) (x1580 x576 4294967296) (=> (< 0 4294967296) (= x576 (+ (* (x2238 x576 4294967296) 4294967296) (x1157 x576 4294967296))))))
(assert (=> (<= (x1258 (x435 (+ 32 x2767))) 10000) (= (x666 (x1258 (x435 (+ 32 x2767)))) (x450 (x1258 (x435 (+ x2767 32)))))))
(assert (x2264 x2319))
(assert (= x2888 (and (not x744) x136)))
(assert (x1700 (x2979 864)))
(assert (x729 32))
(assert (x1622 x2683))
(assert (x894 x1453))
(assert (x2264 x763))
(assert (x2264 x1035))
(assert (x2629 x1096))
(assert (= 281474976710654 (x1049 (x450 281474976710654))))
(assert (= x2450 (and x1992 x1538)))
(assert (x2264 x2422))
(assert (x2159 536870912))
(assert (= (and x779 x660) x91))
(assert (x2264 x2573))
(assert (x2629 16))
(assert (x18 (x1082 2 x1365)))
(assert (x2264 x1233))
(assert (x2264 x1593))
(assert (x2264 x2167))
(assert (x2951 x852))
(assert (x2629 x2141))
(assert (x2264 x1408))
(assert (x894 x2530))
(assert (x894 x1838))
(assert (x2264 x1090))
(assert (x2264 x2079))
(assert (=> (<= (x1258 (x435 (+ 192 x2767))) 10000) (= (x450 (x1258 (x435 (+ x2767 192)))) (x666 (x1258 (x435 (+ x2767 192)))))))
(assert (= (x1235 x2050) 0))
(assert (x2264 x1683))
(assert (x2264 x133))
(assert (= true x1815))
(assert (= 0 (x799 (x435 (+ 32 x2850)))))
(assert (x1247 x2154))
(assert (x2264 x2272))
(assert (x2264 x359))
(assert (x2264 x880))
(assert (= x2348 (and x2640 x108)))
(assert (x2951 x2483))
(assert (x2629 x377))
(assert (= (x799 (x435 (+ 64 x2850))) 0))
(assert (x2629 x1255))
(assert (x2264 x2166))
(assert (x1061 x946))
(assert (x2264 x1491))
(assert (= x604 (and x1511 x1194)))
(assert (x2629 x1886))
(assert (= (or x2207 x291) x1858))
(assert (= x1204 (or x664 x1983)))
(assert (x2951 x1886))
(assert (x2264 x596))
(assert (x2264 x1925))
(assert (= (and x2863 x1111) x1360))
(assert (x2264 x1343))
(assert (= x2742 (and (not x134) x2482)))
(assert (x2647 x1273))
(assert (x2264 x2363))
(assert (x2264 x1242))
(assert (x2264 x1128))
(assert (= (and x1053 x1672) x2173))
(assert (= (x1049 (x666 (x2979 896))) (x2979 896)))
(assert (= (and x1153 x2693) x1778))
(assert (x894 x1273))
(assert (x2264 x2872))
(assert (= (x1235 x410) 0))
(assert (x2264 x94))
(assert (and (x2060 x1752 2097152) (x174 x1752 2097152) (x1580 x1752 2097152) (=> (< 0 2097152) (= x1752 (+ (* (x2238 x1752 2097152) 2097152) (x1157 x1752 2097152))))))
(assert (and (x2060 x946 8192) (x174 x946 8192) (x1580 x946 8192) (=> (< 0 8192) (= x946 (+ (* (x2238 x946 8192) 8192) (x1157 x946 8192))))))
(assert (x2264 x279))
(assert (x2951 x2481))
(assert (= x1834 (and x2055 (not x2009))))
(assert (x2264 x2515))
(assert (= x92 (and x2559 x521)))
(assert (x2264 x338))
(assert (= x1887 (and x1725 (not x1530))))
(assert (x2264 x1133))
(assert (= x2538 (and (not x283) x196)))
(assert (= (x666 67108864) (x450 67108864)))
(assert (x2264 x1197))
(assert (x2264 x681))
(assert (x2629 x636))
(assert (x1700 (x711 x2495)))
(assert (x2264 x2720))
(assert (x2264 x510))
(assert (= (and x1172 x1246) x1163))
(assert (x2264 x75))
(assert (x2264 x2692))
(assert (x2264 x2750))
(assert (x2264 x739))
(assert (=> (<= (x1823 (x435 (+ x1026 192))) 10000) (= (x666 (x1823 (x435 (+ 192 x1026)))) (x450 (x1823 (x435 (+ 192 x1026)))))))
(assert (x191 x1273))
(assert (and (x2060 x742 4294967296) (x174 x742 4294967296) (x1580 x742 4294967296) (=> (< 0 4294967296) (= x742 (+ (* (x2238 x742 4294967296) 4294967296) (x1157 x742 4294967296))))))
(assert (x2264 x2475))
(assert (x2264 x2673))
(assert (x2264 x1808))
(assert (x2264 x2836))
(assert (x2264 x1653))
(assert (= (=> (= (= (x2414 x2397 1) 1) x1441) (and (=> (= 1 x693) x2209) x1441)) x237))
(assert (x2264 x755))
(assert (and (x2060 x1096 268435456) (x174 x1096 268435456) (x1580 x1096 268435456) (=> (< 0 268435456) (= x1096 (+ (* (x2238 x1096 268435456) 268435456) (x1157 x1096 268435456))))))
(assert (x1211 x304))
(assert (=> (<= (x1823 (x435 (+ 32 x1026))) 10000) (= (x666 (x1823 (x435 (+ 32 x1026)))) (x450 (x1823 (x435 (+ 32 x1026)))))))
(assert (x2264 x902))
(assert (x2264 x2197))
(assert (x2264 x1318))
(assert (= (and (not x175) x1260) x2026))
(assert (= (x799 (x435 (+ x988 64))) 0))
(assert (x2264 x821))
(assert (and (x2060 x1886 2097152) (x174 x1886 2097152) (x1580 x1886 2097152) (=> (< 0 2097152) (= x1886 (+ (* (x2238 x1886 2097152) 2097152) (x1157 x1886 2097152))))))
(assert (x2264 x1005))
(assert (= x2486 false))
(assert (x1700 (x2115 (x435 (+ x988 96)))))
(assert (x2159 x74))
(assert (x159 (ite x1089 x2789 (x54 2 x2789))))
(assert (x2264 x1508))
(assert (x1700 (x2556 928)))
(assert (x2264 x1709))
(assert (= x1066 (x1049 (x666 x1066))))
(assert (x2264 x1963))
(assert (x2264 x84))
(assert (= x1533 (and (not x1112) x2426)))
(assert (and (x2060 x1273 536870912) (x174 x1273 536870912) (x1580 x1273 536870912) (=> (< 0 536870912) (= x1273 (+ (* (x2238 x1273 536870912) 536870912) (x1157 x1273 536870912))))))
(assert (x2264 x806))
(assert (x2264 x416))
(assert (x2629 x1430))
(assert (x2264 x546))
(assert (x2264 x310))
(assert (and (x2060 x2374 32768) (x174 x2374 32768) (x1580 x2374 32768) (=> (< 0 32768) (= x2374 (+ (* (x2238 x2374 32768) 32768) (x1157 x2374 32768))))))
(assert (x2264 x1374))
(assert (x2680 4294967295 x1493))
(assert (= (and (not x1996) x1836) x754))
(assert (x2264 x2163))
(assert (x2264 x2128))
(assert (x2264 x2183))
(assert (= x1093 (and (not x1644) x2528)))
(assert (= (x1049 (x666 (x2655 (x435 (+ x2415 128))))) (x2655 (x435 (+ x2415 128)))))
(assert (x2264 x1080))
(assert (x2264 x1540))
(assert (x18 x1190))
(assert (x1146 x1161))
(assert (x2159 x1760))
(assert (x2264 x1059))
(assert (x2264 x1006))
(assert (x2264 x891))
(assert (x2264 x213))
(assert (= x1537 (and (=> (and (and (= (x1157 x2104 21888242871839275222246405745257275088696311157297823662689037894645226208583) x398) (= x2934 (x435 (+ x242 64))) (= x1069 (x435 (+ 32 x242))) (= (x497 x2365) x2104) (= (x1592 x94) x328) (= (< 21888242871839275222246405745257275088696311157297823662689037894645226208583 x398) x1514)) (not x2380)) (and (=> (and (not x1514) (and (= x2934 x2456) (= x119 x242) (= (x668 (- 21888242871839275222246405745257275088696311157297823662689037894645226208583 x398)) x1310))) x2749) (=> x1514 x1108))) (=> (and (and (= x2183 (x435 (+ 32 x242))) (= x965 x2456) (= x965 (x435 (+ 64 x242))) (= x242 x119)) x2380) x2749))))
(assert (= x2685 (and x1841 (not x1438))))
(assert (x2629 x1453))
(assert (x2159 x2658))
(assert (x2951 (ite x1089 x2789 (x54 2 x2789))))
(assert (= (=> (and (= x2869 (x668 (- x486 32))) (= x1072 (x435 (+ 32 x1596))) (= (x668 (- x987 x1596)) x486) (= (x2655 x1596) x2838) (= (x435 (+ x1596 32)) x2415) (= (<= x2838 224) x2410) (= x987 (x435 (+ 32 x383))) (= x383 (x435 (+ 32 x1072)))) (and x2410 (=> (and (= x2637 (ite (>= 32 x2838) (x581 (x666 (x2655 x2415)) 0) (ite (<= x2838 64) (x2829 (x666 (x2655 x2415)) (x666 (x2655 (x435 (+ x2415 32)))) 0) (ite (>= 96 x2838) (x2290 (x666 (x2655 x2415)) (x666 (x2655 (x435 (+ x2415 32)))) (x666 (x2655 (x435 (+ x2415 64)))) 0) (ite (>= 128 x2838) (x1109 (x666 (x2655 x2415)) (x666 (x2655 (x435 (+ 32 x2415)))) (x666 (x2655 (x435 (+ 64 x2415)))) (x666 (x2655 (x435 (+ 96 x2415)))) 0) (ite (<= x2838 160) (x1623 (x666 (x2655 x2415)) (x666 (x2655 (x435 (+ x2415 32)))) (x666 (x2655 (x435 (+ x2415 64)))) (x666 (x2655 (x435 (+ 96 x2415)))) (x666 (x2655 (x435 (+ 128 x2415)))) 0) (ite (>= 192 x2838) (x935 (x666 (x2655 x2415)) (x666 (x2655 (x435 (+ 32 x2415)))) (x666 (x2655 (x435 (+ x2415 64)))) (x666 (x2655 (x435 (+ x2415 96)))) (x666 (x2655 (x435 (+ x2415 128)))) (x666 (x2655 (x435 (+ 160 x2415)))) 0) (ite (<= x2838 224) (x582 (x666 (x2655 x2415)) (x666 (x2655 (x435 (+ x2415 32)))) (x666 (x2655 (x435 (+ 64 x2415)))) (x666 (x2655 (x435 (+ x2415 96)))) (x666 (x2655 (x435 (+ x2415 128)))) (x666 (x2655 (x435 (+ 160 x2415)))) (x666 (x2655 (x435 (+ 192 x2415)))) 0) (x666 x1033))))))))) (= x987 x2961)) x665))) x2941))
(assert (x2159 x1963))
(assert (= (x1049 (x450 16777216)) 16777216))
(assert (and (x2060 x1573 134217728) (x174 x1573 134217728) (x1580 x1573 134217728) (=> (< 0 134217728) (= x1573 (+ (* (x2238 x1573 134217728) 134217728) (x1157 x1573 134217728))))))
(assert (x2264 x46))
(assert (x2629 x1014))
(assert (x2264 x2793))
(assert (= 0 (x799 x65)))
(assert (x2951 32768))
(assert (x2264 x2313))
(assert (= (x2556 832) (x1049 (x666 (x2556 832)))))
(assert (x2264 x2068))
(assert (=> (>= 10000 (x747 (x435 (+ x1059 64)))) (= (x450 (x747 (x435 (+ 64 x1059)))) (x666 (x747 (x435 (+ x1059 64)))))))
(assert (x2264 x2042))
(assert (x2951 x1272))
(assert (= (x1049 (x666 (x747 (x435 (+ 128 x1059))))) (x747 (x435 (+ x1059 128)))))
(assert (= (x747 (x435 (+ x1059 96))) (x1049 (x666 (x747 (x435 (+ x1059 96)))))))
(assert (x1700 (x1823 (x435 (+ x1026 32)))))
(assert (x2264 x613))
(assert (x2264 x576))
(assert (x1700 (x747 (x435 (+ 32 x1059)))))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x948) (= x1113 x1748) (>= 1461501637330902918203684832716283019655932542975 x906) (>= 1461501637330902918203684832716283019655932542975 x607) (= x2856 (not (= x1662 x2068))) (>= x1113 0) (= x2876 x607) (<= 0 x607) (= x1068 (= 0 x268)) (= x531 x948) x2856 (>= x906 0) (= x906 x531) (= x2103 x1746) (<= 0 x338) (and (< 387 x2128) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2128) true)) (> x1923 0) (= x2876 x124) (= x531 x1662) (= (not x1746) x802) (= x1239 x2068) (<= x338 1461501637330902918203684832716283019655932542975) (<= x1113 1461501637330902918203684832716283019655932542975) (= x1923 (x2944 (x666 x1548))) (>= x948 0)) (and (=> (and (and (> 3012569127 x1729) (not (= 712603760 x1729)) (= x954 (or (and (> 256 x1309) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1309))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1309))) (not (= x1729 2578352110)) (= x1309 (x668 (- x2128 4))) (not (< x1729 712603760)) (not (< x2128 4)) (not (= 1736559843 x1729)) (= 2712691696 x1729)) x1068) (and (=> (and (not x954) (and (= (< 18446744073709551615 x2337) x1175) (= x2337 (x2118 4)))) (and (=> x1175 x1373) (=> (and (not x1175) (and (= (x435 (+ x327 31)) x306) (= x1140 (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x306) (<= x2128 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x306 x2128) (= (<= x2128 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x306 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x327 (x435 (+ x2337 4))))) (and (=> (and (and (= x177 (x2118 x327)) (= x2981 (< 18446744073709551615 x177))) x1140) (and (=> (and (not x2981) (and (= x2156 (< x2128 x2472)) (= x2472 (x435 (+ x177 x1012))) (= x1012 (x435 (+ x327 32))))) (and (=> x2156 x1373) (=> (and (and (= (= x1273 x1776) x882) (= x1776 (x2453 4294967295 x1273)) (= x1273 (x2118 36))) (not x2156)) (and (=> (not x882) x1373) (=> (and x882 (and (= x2945 (x2118 68)) (= x2616 (< 18446744073709551615 x2945)))) (and (=> (and (and (= x1811 (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2128) (> x2067 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x2067 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2128 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x2128 x2067)))) (= (x435 (+ x2945 4)) x1899) (= (x435 (+ x1899 31)) x2067)) (not x2616)) (and (=> (and (and (= x1953 (x2118 x1899)) (= x44 (< 18446744073709551615 x1953))) x1811) (and (=> (and (and (= x687 (x435 (+ x1899 32))) (= (> x1582 x2128) x1164) (= (x435 (+ x687 x1953)) x1582)) (not x44)) (and (=> x1164 x1373) (=> (and (not x1164) (and (= x1540 (x2118 100)) (= (> x1540 18446744073709551615) x2332))) (and (=> (and (not x2332) (and (= x2830 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x967) true) (< x967 288)) (> x967 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x967 (x668 (- x2128 x1174))) (= (x435 (+ x1540 4)) x1174))) (and (=> (and (not x2830) (and (= x1770 (or (> x1779 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1779 128) (= true (<= x1779 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= 132 x836) (= (x668 (- x2128 132)) x1779))) (and (=> x1770 x1373) (=> (and (and (= x2519 (x435 (+ x2223 64))) (= (x435 (+ 32 x1012)) x632) (= (x2118 x632) x2011) (= (x2118 x1303) x756) (= x2120 (x2414 x756 224)) (= (x668 (- x2128 x2519)) x1521) (= x2134 (x435 (+ 68 x1303))) (= 384 x195) (= x2971 (x2414 x1523 224)) (= x524 (x2118 x1012)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1521) true) (< x1521 128)) (> x1521 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2548) (= x2223 (x435 (+ 64 x1174))) (= x1523 (x2118 x2134)) (= x1303 (x435 (+ x632 32)))) (not x1770)) (and (=> (and (not x2548) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1521) true) (< x1521 128)) (> x1521 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2454)) (and (=> (and (and (= x609 512) (= x990 (x435 (+ x2223 64))) (= x1759 (or (and (> x2128 x132) (= (<= x2128 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x132))) (and (> x132 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2128 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x132 (x435 (+ x990 31)))) (not x2454)) (and (=> (and x1759 (and (= (> x2166 x2128) x105) (= x2166 (x435 (+ x990 64))))) (and (=> (and (not x105) (= x1550 (< x990 x2166))) (and (=> (and x1550 (and (= x333 true) (= (x2118 x990) x2247))) (and (=> (not x333) x1373) (=> x333 x2677))) (=> (not x1550) x2638))) (=> x105 x1373))) (=> (not x1759) x1373))) (=> x2454 x1373))) (=> x2548 x1373))))) (=> x2830 x1373))) (=> x2332 x1373))))) (=> x44 x1373))) (=> (not x1811) x1373))) (=> x2616 x1373))))))) (=> x2981 x1373))) (=> (not x1140) x1373))))) (=> x954 x1373))) (=> (not x1068) x1373))) x1132))
(assert (x2264 x269))
(assert (x2159 x2315))
(assert (x2264 x2645))
(assert (x2264 x2108))
(assert (x2492 x641))
(assert (x2264 x2213))
(assert (x1247 x946))
(assert (x2264 x1776))
(assert (= x2506 (and x2728 (not x1240))))
(assert (=> (<= (x2917 (x435 (+ 96 x2850))) 10000) (= (x666 (x2917 (x435 (+ 96 x2850)))) (x450 (x2917 (x435 (+ 96 x2850)))))))
(assert (and (x211 x1329 32) (x2430 x1329 32) (=> (and (> x1329 0) (> 32 0)) (and (<= (* 32 (x2238 x1329 32)) x1329) (> (* (x2238 x1329 32) 32) (- x1329 32)))) (x1972 x1329 32) (= (- x1329 (x2453 31 x1329)) (* (x2238 x1329 32) 32)) (x2736 x1329 32)))
(assert (x2264 x631))
(assert (= 0 (x799 x1911)))
(assert (x2264 x1603))
(assert (= (x1235 (x435 (+ x1026 96))) 0))
(assert (x2264 x2112))
(assert (x2264 x1743))
(assert (x1700 (x747 (x435 (+ 160 x1059)))))
(assert (= x1101 (=> (= x922 (= x2227 0)) (and (=> x922 x2808) (=> (and (not x922) (= x2164 (< 0 x2227))) (and (=> x2164 x1283) (=> (not x2164) x1108)))))))
(assert (x2628 x612 x674 x1190 x1768))
(assert (x2951 x1468))
(assert (= (x1049 (x666 (x2556 896))) (x2556 896)))
(assert (= x1799 (and (not x386) x976)))
(assert (= x2591 (and x2259 (not x402))))
(assert (and (x2060 x974 8388608) (x174 x974 8388608) (x1580 x974 8388608) (=> (< 0 8388608) (= x974 (+ (* (x2238 x974 8388608) 8388608) (x1157 x974 8388608))))))
(assert (x2951 (ite (> 256 x263) (x1082 2 x263) 0)))
(assert (and (x2060 x946 131072) (x174 x946 131072) (x1580 x946 131072) (=> (< 0 131072) (= x946 (+ (* (x2238 x946 131072) 131072) (x1157 x946 131072))))))
(assert (x2951 x2937))
(assert (x2264 x124))
(assert (x2159 8))
(assert (x2264 x1886))
(assert (x2264 x719))
(assert (x2629 x974))
(assert (= (=> (and (and (= (x878 x1366) x447) (= x1300 (not (= 0 x447))) (= x2300 (ite x983 1 0)) (= x1078 (not x1300)) (= x983 (not x1078))) (= false x2103)) x1509) x1283))
(assert (= (and x1831 x1424) x118))
(assert (x2951 x35))
(assert (x1700 x2744))
(assert (x2951 x1968))
(assert (= 0 (x1235 (x435 (+ x1026 128)))))
(assert (x18 (x1082 2 x121)))
(assert (= (x450 4194304) (x666 4194304)))
(assert (= x1489 (=> (and (and (and (= (< 0 x835) x1974) (= x1059 (x435 (+ x2097 32)))) (or (and (not x1974) (= x835 x2669)) (and (and (= 1 x2669) (> 4294967296 x1740)) x1974))) (and (= x1539 (x733 x1722)) (= (x2923 x1588) x776) (= (x435 (+ 32 x1888)) x2441) (= x554 (x435 (+ x1897 32))) (= x1896 (x435 (+ x1131 64))) (= x2904 (x2871 x2634)) (= (x435 (+ 64 x1896)) x568) (= x2249 (x518 x2489)) (= (x435 (+ 32 x46)) x2627) (= x592 (x2439 x630)) (= (x435 (+ x1539 32)) x2050) (= x1208 (x435 (+ x1368 32))) (= x2881 (x2119 x2627)) (= (x435 (+ x1208 32)) x1990) (= (x435 (+ x406 32)) x494) (= x401 (x2871 x2904)) (= x2476 (x2439 x592)) (= x1872 (x435 (+ 192 x568))) (= (x483 x2708) x466) (= (x506 x1130) x29) (= (x2206 x2688) x670) (= x1722 (x733 x1184)) (= x406 (x435 (+ 32 x1215))) (= (x435 (+ 32 x2690)) x1368) (= x25 (x435 (+ x1131 32))) (= x2634 x1131) (= x1556 (x483 x2441)) (= x46 (x2119 x2634)) (= x1888 (x483 x902)) (= x189 (x911 x400)) (= (x435 (+ 32 x2600)) x2690) (= x1588 (x2923 x902)) (= x1897 (x837 x902)) (= x1084 (x518 x812)) (= (x506 x1184) x1709) (= x400 (x911 x1648)) (= x1215 (x435 (+ x2730 32))) (= x1954 (x2923 x776)) (= (x2206 x1184) x2697) (= x2269 x568) (= x2708 (x435 (+ 32 x1556))) (= (x506 x29) x1119) (= x1687 (x435 (+ 32 x2269))) (= x1353 (x2206 x2389)) (= (x435 (+ x1709 32)) x1130) (= (x837 x359) x430) (= x1648 (x911 x1184)) (= (x435 (+ x1131 32)) x630) (= (x435 (+ 32 x1896)) x1184) (= x902 x1896) (= (x837 x554) x359) (= (x435 (+ x568 384)) x2097) (= x2389 (x435 (+ x670 32))) (= (x284 x630) x28) (= (x435 (+ 32 x2697)) x2688) (= x1676 (x435 (+ 32 x1896))) (= (x435 (+ 32 x28)) x374) (= x921 (x284 x374)) (= (x435 (+ 32 x1872)) x2600) (= (x733 x2050) x2989) (= (x435 (+ 32 x1651)) x117) (= x812 (x518 x902)) (= (x435 (+ 32 x1687)) x2730) (= x2489 (x435 (+ x1084 32))))) x1630)))
(assert (x553 x390))
(assert (= x187 (and x1996 x1836)))
(assert (x2264 x1173))
(assert (= (and x707 x345) x2330))
(assert (x2264 x280))
(assert (x2264 x27))
(assert (x2159 x2419))
(assert (= x675 (and x820 (not x1881))))
(assert (x2159 x931))
(assert (x2264 x2801))
(assert (x2264 x1329))
(assert (= (and x92 x1564) x389))
(assert (x2951 x140))
(assert (= (x1049 (x666 (x747 (x435 (+ 32 x1059))))) (x747 (x435 (+ x1059 32)))))
(assert (and (x2060 x1926 256) (x174 x1926 256) (x1580 x1926 256) (=> (< 0 256) (= x1926 (+ (* (x2238 x1926 256) 256) (x1157 x1926 256))))))
(assert (= (x450 4294967296) (x666 4294967296)))
(assert (x2264 x874))
(assert (x2264 x958))
(assert (x2264 x2408))
(assert (x2951 x1684))
(assert (= (x1235 (x435 (+ x2767 128))) 0))
(assert (= (and x2672 (not x2400)) x2912))
(assert (x1061 x1273))
(assert (x2264 x1732))
(assert (x2951 1073741824))
(assert (x2264 x458))
(assert (x2264 x1452))
(assert (x2264 x198))
(assert (x2264 x1362))
(assert (= x1162 (and x1943 x1614)))
(assert (and (x2060 x62 16384) (x174 x62 16384) (x1580 x62 16384) (=> (< 0 16384) (= x62 (+ (* (x2238 x62 16384) 16384) (x1157 x62 16384))))))
(assert (= (and x879 (not x2192)) x2820))
(assert (x1700 (x1258 (x435 (+ x2767 192)))))
(assert (= x2885 (and (not x2771) x2470)))
(assert (= (and x1777 x1198) x2426))
(assert (= (x799 (x435 (+ 64 x1883))) 0))
(assert (x2264 x2879))
(assert (= 0 (x799 x843)))
(assert (= x1754 (and (not x785) x2912)))
(assert (=> (>= 10000 (x711 (x435 (+ 32 x2495)))) (= (x450 (x711 (x435 (+ x2495 32)))) (x666 (x711 (x435 (+ x2495 32)))))))
(assert (x2264 x334))
(assert (= x2078 (x666 (x1049 x2078))))
(assert (x2159 x2921))
(assert (x2629 x2374))
(assert (x2264 x1845))
(assert (x729 x1329))
(assert (x2264 x2460))
(assert (x2159 x1064))
(assert (= (x2414 x2695 1) (x2238 x2695 2)))
(assert (and (x2060 x2014 2) (x174 x2014 2) (x1580 x2014 2) (=> (< 0 2) (= x2014 (+ (* (x2238 x2014 2) 2) (x1157 x2014 2))))))
(assert (= x2821 (and (not x2957) x589)))
(assert (x2159 (ite x1122 x1792 (x54 2 x1792))))
(assert (x2629 x66))
(assert (x2629 281474976710655))
(assert (x2629 268435456))
(assert (= (=> (and (= x2597 (x256 864)) (= (x435 (+ x179 32)) x1578) (= x1194 (= (x1157 x2597 32) 0)) (= x2748 864) (= (x435 (+ x411 896)) x2877) (= (x435 (+ x1578 864)) x1596) (= (x2238 x880 32) x950) (= x179 (x144 (* 32 x950))) (= (x435 (+ x411 31)) x880)) (and (=> (not x1194) x1108) (=> (and x1194 (and (= (x2238 x2146 32) x912) (= x1827 (< 0 x912)) (= x2146 (x256 864)))) (and (=> (and x1827 (= (> x912 255) x1602)) (and (=> (and (not x1602) (and (= x1522 (> x72 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x101 1 x912) x72))) (and (=> (and (not x1522) (= x72 x2347)) x1599) (=> x1522 x1108))) (=> x1602 x1108))) (=> (and (not x1827) (= x2347 1)) x1599))))) x248))
(assert (= (x666 108844151692519000452708220636741476915984311376032675733692602838339372004332) (x450 108844151692519000452708220636741476915984311376032675733692602838339372004332)))
(assert (x18 x1493))
(assert (= x2161 (and (not x1164) x1948)))
(assert (=> (>= 10000 (x747 (x435 (+ 32 x1059)))) (= (x666 (x747 (x435 (+ 32 x1059)))) (x450 (x747 (x435 (+ x1059 32)))))))
(assert (x2264 x903))
(assert (x2264 x513))
(assert (=> (>= 10000 (x2655 (x435 (+ x2415 128)))) (= (x666 (x2655 (x435 (+ x2415 128)))) (x450 (x2655 (x435 (+ 128 x2415)))))))
(assert (= x1108 (=> (= x2103 true) x1509)))
(assert (x2264 x2336))
(assert (= (x1049 (x666 (x2115 (x435 (+ 160 x988))))) (x2115 (x435 (+ 160 x988)))))
(assert (= (x1235 x1307) 0))
(assert (x1933 x713))
(assert (= x157 (or x2824 x2273)))
(assert (x2264 x1629))
(assert (= 0 (x1235 x1648)))
(assert (x1146 x946))
(assert (= x1296 (and x208 (not x2164))))
(assert (x2540 x946))
(assert (x2264 x1285))
(assert (x2159 x853))
(assert (x2264 x2837))
(assert (= (=> (and (= x1542 (x2453 4294967295 x210)) (= (x101 1 x263) x2175) (= (> x1542 x946) x489)) (and (=> (and x489 (= (< 0 x2175) x295)) (and (=> (not x295) x1108) (=> (and (= x283 (= 1 x2175)) x295) (and (=> (not x283) x2162) (=> (and (= x1032 0) x283) x2231))))) (=> (and (and (= (x2453 4294967295 x210) x1904) (= (< x674 x1904) x700)) (not x489)) (and (=> (and (and (= x1675 (> x1930 x2175)) (= x1930 (x2453 4294967295 x2384)) (= (x668 (- x674 x1904)) x2384)) (not x700)) (and (=> (and (and (= (> x2458 x946) x1475) (= (x668 (- x2175 x1930)) x981) (= x2458 (x2453 4294967295 x981))) (not x1675)) (and (=> (not x1475) x1108) (=> (and x1475 (and (= (x2453 4294967295 x210) x1670) (= (< x946 x1670) x156))) (and (=> x156 x1108) (=> (and (not x156) (and (= x1803 (x668 (- 4294967295 x674))) (= (x668 (- x946 x1670)) x1115) (= x614 (> x936 x1803)) (= x936 (x2453 4294967295 x1115)))) (and (=> x614 x1108) (=> (and (not x614) (and (= (x435 (+ x674 x936)) x1191) (= (< 0 x2175) x216))) (and (=> (not x216) x1108) (=> (and x216 (= x1943 (= 1 x2175))) (and (=> (and (= 0 x2205) x1943) x2089) (=> (not x1943) x379))))))))))) (=> x1675 x1108))) (=> x700 x1108))))) x2075))
(assert (= x2138 (=> (and (= (x668 (- x967 31)) x2849) (= (x2118 x2319) x1233) (= x2718 (or (and (= (<= x1233 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2849 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x2849 x1233)) (and (> x1233 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2849 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (and (=> (not x2718) x1373) (=> (and (and (= x69 (x2118 x1929)) (= x944 (< 18446744073709551615 x69)) (= x1929 (x435 (+ x1233 x1174)))) x2718) (and (=> (and (not x944) (and (= x432 (or (and (<= x2211 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x376)) (and (< x376 x2211) (= (<= x2211 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x376 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x435 (+ x1929 32)) x2211) (= (x668 (- x2128 x69)) x376))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1095) (= (x2238 x69 32) x2392) (>= x1095 0) (= x2957 (= x2392 x1095))) (not x432)) (and (=> (not x2957) x1373) (=> x2957 x2745))) (=> x432 x1373))) (=> x944 x1373)))))))
(assert (x2264 x1772))
(assert (x2264 x38))
(assert (x2264 x1829))
(assert (and (x1600 256 x1587) (x2853 256 x1587) (x831 256 x1587) (and (= (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x1587) (- (* 256 x1587) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1587))) (= (- (* (- x1587 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1587 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x1587 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x1587 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (x2427 256 (- x1587 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* 256 x1587) (x2427 256 x1587)) (x2434 256 x1587) (x795 256 x1587)))
(assert (x1700 x1030))
(assert (x148 x1273))
(assert (x2264 x462))
(assert (x2264 x2658))
(assert (x2264 x1892))
(assert (x2264 x1798))
(assert (x2264 x1449))
(assert (x2264 x1187))
(assert (x2264 x1846))
(assert (= (x1049 (x666 x1319)) x1319))
(assert (x2264 x1796))
(assert (= 0 (x799 x988)))
(assert (x2264 x2001))
(assert (x2264 x887))
(assert (x2264 x775))
(assert (x2264 x2190))
(assert (x2629 2147483648))
(assert (x2264 x674))
(assert (x2264 x2241))
(assert (x2264 x2621))
(assert (and (x2060 x1775 4294967296) (x174 x1775 4294967296) (x1580 x1775 4294967296) (=> (< 0 4294967296) (= x1775 (+ (* (x2238 x1775 4294967296) 4294967296) (x1157 x1775 4294967296))))))
(assert (and (x211 x2421 26959946667150639794667015087019630673637144422540572481103610249216) (x2430 x2421 26959946667150639794667015087019630673637144422540572481103610249216) (=> (and (> x2421 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 0)) (and (<= (* 26959946667150639794667015087019630673637144422540572481103610249216 (x2238 x2421 26959946667150639794667015087019630673637144422540572481103610249216)) x2421) (> (* (x2238 x2421 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) (- x2421 26959946667150639794667015087019630673637144422540572481103610249216)))) (x1972 x2421 26959946667150639794667015087019630673637144422540572481103610249216) (= (- x2421 (x2453 26959946667150639794667015087019630673637144422540572481103610249215 x2421)) (* (x2238 x2421 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)) (x2736 x2421 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x2264 x981))
(assert (= 15397661830938158195220872607788450164522003659458108417904919983213308643927 (x1049 (x450 15397661830938158195220872607788450164522003659458108417904919983213308643927))))
(assert (and (x2060 x1798 4194304) (x174 x1798 4194304) (x1580 x1798 4194304) (=> (< 0 4194304) (= x1798 (+ (* (x2238 x1798 4194304) 4194304) (x1157 x1798 4194304))))))
(assert (x962 x2049))
(assert (x2264 x1034))
(assert (x2264 x2335))
(assert (= 0 (x1235 928)))
(assert (= (x101 1 x579) (x144 (ite (> 256 x579) (x1082 2 x579) 0))))
(assert (=> (>= 10000 (x2917 (x435 (+ x2850 160)))) (= (x666 (x2917 (x435 (+ x2850 160)))) (x450 (x2917 (x435 (+ x2850 160)))))))
(assert (x2264 x1299))
(assert (= 0 (x1235 (x435 (+ 128 x1059)))))
(assert (x1576 x1739))
(assert (x2264 x238))
(assert (x2264 x776))
(assert (= (x1049 (x450 28638458499813953387342862576031799503806270899767427533215561966834731185108)) 28638458499813953387342862576031799503806270899767427533215561966834731185108))
(assert (x2264 x590))
(assert (= x753 (and (not x832) x1355)))
(assert (= (x450 1736559843) (x666 1736559843)))
(assert (x2264 x1737))
(assert (x2010 x415 x1028))
(assert (x2629 128))
(assert (x2264 x1442))
(assert (x2264 x2051))
(assert (x1707 x2239))
(assert (x2264 x2274))
(assert (= x1566 (and x152 (not x501))))
(assert (= x1269 (and (not x345) x707)))
(assert (x2264 x2185))
(assert (x148 x1861))
(assert (x2264 x1939))
(assert (= x1786 (and (not x2000) x1666)))
(assert (= (and x413 x295) x196))
(assert (x2264 x455))
(assert (x1700 (x2655 (x435 (+ x2415 32)))))
(assert (and (x2060 x548 256) (x174 x548 256) (x1580 x548 256) (=> (< 0 256) (= x548 (+ (* (x2238 x548 256) 256) (x1157 x548 256))))))
(assert (x2264 x410))
(assert (x2680 4294967295 x654))
(assert (x2951 281474976710656))
(assert (= (x666 134217728) (x450 134217728)))
(assert (x2264 x2357))
(assert (x2264 x1025))
(assert (= 0 (x799 x2346)))
(assert (x2264 x1192))
(assert (x2264 x1385))
(assert (x2159 x200))
(assert (and (x2060 x1886 4194304) (x174 x1886 4194304) (x1580 x1886 4194304) (=> (< 0 4194304) (= x1886 (+ (* (x2238 x1886 4194304) 4194304) (x1157 x1886 4194304))))))
(assert (x2159 x1262))
(assert (x2264 x2052))
(assert (x2264 x2146))
(assert (x2264 x1310))
(assert (x2038 x918))
(assert (x191 x986))
(assert (x2951 x2352))
(assert (x2264 x579))
(assert (x2264 x1702))
(assert (and (x2060 x1468 4) (x174 x1468 4) (x1580 x1468 4) (=> (< 0 4) (= x1468 (+ (* (x2238 x1468 4) 4) (x1157 x1468 4))))))
(assert (x1700 (x711 (x435 (+ 192 x2495)))))
(assert (and (x211 x1523 26959946667150639794667015087019630673637144422540572481103610249216) (x2430 x1523 26959946667150639794667015087019630673637144422540572481103610249216) (=> (and (> x1523 0) (> 26959946667150639794667015087019630673637144422540572481103610249216 0)) (and (<= (* 26959946667150639794667015087019630673637144422540572481103610249216 (x2238 x1523 26959946667150639794667015087019630673637144422540572481103610249216)) x1523) (> (* (x2238 x1523 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) (- x1523 26959946667150639794667015087019630673637144422540572481103610249216)))) (x1972 x1523 26959946667150639794667015087019630673637144422540572481103610249216) (= (- x1523 (x2453 26959946667150639794667015087019630673637144422540572481103610249215 x1523)) (* (x2238 x1523 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)) (x2736 x1523 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x2264 x1123))
(assert (x2159 x1268))
(assert (= x188 (and x6 (not x1999))))
(assert (x88 x2041))
(assert (= (x450 28638458499813953387342862576031799503806270899767427533215561966834731185108) (x666 28638458499813953387342862576031799503806270899767427533215561966834731185108)))
(assert (= x2755 (and x2559 (not x521))))
(assert (= (x666 (x1049 x201)) x201))
(assert (and (x2060 x1273 128) (x174 x1273 128) (x1580 x1273 128) (=> (< 0 128) (= x1273 (+ (* (x2238 x1273 128) 128) (x1157 x1273 128))))))
(assert (let ((x399 (x1082 2 x1365))) (and (x1600 1 x399) (x2853 1 x399) (x831 1 x399) (and (= (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935) x399) (- (* 1 x399) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x399))) (= (- (* (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2427 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935) (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1) (x2427 1 (- x399 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* 1 x399) (x2427 1 x399)) (x2434 1 x399) (x795 1 x399))))
(assert (= x1446 (and (not x156) x841)))
(assert (x2629 131072))
(assert (x2951 x1439))
(assert (x2264 x1919))
(assert (= x138 (and x118 (not x2902))))
(assert (x2264 x2894))
(assert (x2951 x66))
(assert (x2264 x1598))
(assert (x88 x2005))
(assert (x729 (x1082 2 x2073)))
(assert (x2264 x474))
(assert (x2951 x2774))
(assert (= (x1049 (x450 105015941155238675870317744051118741627952855755073633622858957636564748080881)) 105015941155238675870317744051118741627952855755073633622858957636564748080881))
(assert (x2629 1048576))
(assert (x2951 8))
(assert (and (x2060 x1273 8) (x174 x1273 8) (x1580 x1273 8) (=> (< 0 8) (= x1273 (+ (* (x2238 x1273 8) 8) (x1157 x1273 8))))))
(assert (x2264 x1200))
(assert (and (x2060 x1115 4294967296) (x174 x1115 4294967296) (x1580 x1115 4294967296) (=> (< 0 4294967296) (= x1115 (+ (* (x2238 x1115 4294967296) 4294967296) (x1157 x1115 4294967296))))))
(assert (x729 (x1082 2 x2371)))
(assert (x2159 2097152))
(assert (x1700 (x257 (x435 (+ x1883 160)))))
(assert (x2159 x2837))
(assert (x2264 x828))
(assert (= (x1235 x492) 0))
(assert (x2264 x1139))
(assert (= (=> (and (= x1026 (x435 (+ x1596 32))) (= x2188 (>= 224 x2704)) (= (x435 (+ 32 x556)) x2312) (= (x435 (+ 32 x1080)) x556) (= (x435 (+ x1596 32)) x1080) (= x2704 (x1823 x1596)) (= (x668 (- x2312 x1596)) x2606) (= x79 (x668 (- x2606 32)))) (and x2188 (=> (and (= x2312 x2961) (= (ite (<= x2704 32) (x581 (x666 (x1823 x1026)) 0) (ite (<= x2704 64) (x2829 (x666 (x1823 x1026)) (x666 (x1823 (x435 (+ 32 x1026)))) 0) (ite (<= x2704 96) (x2290 (x666 (x1823 x1026)) (x666 (x1823 (x435 (+ 32 x1026)))) (x666 (x1823 (x435 (+ x1026 64)))) 0) (ite (>= 128 x2704) (x1109 (x666 (x1823 x1026)) (x666 (x1823 (x435 (+ 32 x1026)))) (x666 (x1823 (x435 (+ 64 x1026)))) (x666 (x1823 (x435 (+ 96 x1026)))) 0) (ite (<= x2704 160) (x1623 (x666 (x1823 x1026)) (x666 (x1823 (x435 (+ 32 x1026)))) (x666 (x1823 (x435 (+ 64 x1026)))) (x666 (x1823 (x435 (+ 96 x1026)))) (x666 (x1823 (x435 (+ x1026 128)))) 0) (ite (>= 192 x2704) (x935 (x666 (x1823 x1026)) (x666 (x1823 (x435 (+ 32 x1026)))) (x666 (x1823 (x435 (+ x1026 64)))) (x666 (x1823 (x435 (+ 96 x1026)))) (x666 (x1823 (x435 (+ 128 x1026)))) (x666 (x1823 (x435 (+ x1026 160)))) 0) (ite (>= 224 x2704) (x582 (x666 (x1823 x1026)) (x666 (x1823 (x435 (+ x1026 32)))) (x666 (x1823 (x435 (+ 64 x1026)))) (x666 (x1823 (x435 (+ 96 x1026)))) (x666 (x1823 (x435 (+ x1026 128)))) (x666 (x1823 (x435 (+ 160 x1026)))) (x666 (x1823 (x435 (+ x1026 192)))) 0) (x666 x2186)))))))) x2637)) x665))) x2457))
(assert (= (and (not x2816) x1873) x3))
(assert (x2264 x1872))
(assert (x729 x679))
(assert (x2297 x424))
(assert (= x1978 (and x1246 (not x1172))))
(assert (x2264 x2246))
(assert (= (or x2950 x717) x542))
(assert (= (and x24 x1177) x2649))
(assert (x2951 2097152))
(assert (x2264 x102))
(assert (x2264 x2216))
(assert (x2264 x1358))
(assert (x2264 x2050))
(assert (= (and x2781 x1730) x2721))
(assert (x2264 x32))
(assert (x2264 x572))
(assert (and (x2060 x1273 2) (x174 x1273 2) (x1580 x1273 2) (=> (< 0 2) (= x1273 (+ (* (x2238 x1273 2) 2) (x1157 x1273 2))))))
(assert (and (x2060 x1926 512) (x174 x1926 512) (x1580 x1926 512) (=> (< 0 512) (= x1926 (+ (* (x2238 x1926 512) 512) (x1157 x1926 512))))))
(assert (x2264 x1953))
(assert (= (and (not x468) x2682) x351))
(assert (and (x2060 x548 512) (x174 x548 512) (x1580 x548 512) (=> (< 0 512) (= x548 (+ (* (x2238 x548 512) 512) (x1157 x548 512))))))
(assert (= x2207 (and x364 x1507)))
(assert (x2264 x1268))
(assert (x2264 x1582))
(assert (x2264 x2120))
(assert (x2951 x181))
(assert (x18 (- x674 x1768)))
(check-sat)
(exit)
