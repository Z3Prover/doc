(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x340 0)) (((x1326 (x1631 x340) (x1728 x340) (x2024 Int)) (x192 (x1811 x340) (x800 Int)) (x1400 (x1493 Int)))))
(declare-fun x596 () Int)
(declare-fun x1367 () Bool)
(declare-fun x1639 () Int)
(declare-fun x254 () Bool)
(declare-fun x1003 () Int)
(declare-fun x1895 () Bool)
(declare-fun x632 () Bool)
(declare-fun x221 () Bool)
(declare-fun x324 () x340)
(declare-fun x1687 () Int)
(declare-fun x1724 () Bool)
(declare-fun x2076 () Int)
(declare-fun x537 () Bool)
(declare-fun x1369 () Int)
(declare-fun x178 () Int)
(declare-fun x1576 () x340)
(declare-fun x496 () Bool)
(declare-fun x662 () Bool)
(declare-fun x1993 () Int)
(declare-fun x1699 () Bool)
(declare-fun x619 () Int)
(declare-fun x345 () Bool)
(declare-fun x868 () Bool)
(declare-fun x1491 () Int)
(declare-fun x1452 () Int)
(declare-fun x1318 () Bool)
(declare-fun x216 () Bool)
(declare-fun x903 () Bool)
(declare-fun x420 () Int)
(declare-fun x1129 () Int)
(declare-fun x1193 () Bool)
(declare-fun x45 () Int)
(declare-fun x827 () Bool)
(declare-fun x1102 () Int)
(declare-fun x674 () Int)
(declare-fun x290 () Bool)
(declare-fun x241 () Int)
(declare-fun x469 () Int)
(declare-fun x1626 () Bool)
(declare-fun x1529 () Int)
(declare-fun x98 () Bool)
(declare-fun x1233 () Int)
(declare-fun x385 () Int)
(declare-fun x1654 () Bool)
(declare-fun x424 () Int)
(declare-fun x1938 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x721 () Int)
(declare-fun x938 () Int)
(declare-fun x1500 () Int)
(declare-fun x1842 () Int)
(declare-fun x1758 () Bool)
(declare-fun x376 () Int)
(declare-fun x1086 () Bool)
(declare-fun x1287 () Bool)
(declare-fun x441 () Int)
(declare-fun x1751 () Int)
(declare-fun x1098 () Int)
(declare-fun x36 () Int)
(declare-fun x396 () Bool)
(declare-fun x2042 () Bool)
(declare-fun x1062 () x340)
(declare-fun x1486 () Int)
(declare-fun x629 () Int)
(declare-fun x1290 () Int)
(declare-fun x1942 () Int)
(declare-fun x2027 () Bool)
(declare-fun x652 () Bool)
(declare-fun x1580 () Bool)
(declare-fun x1523 () Bool)
(declare-fun x1653 () Int)
(declare-fun x1371 () Bool)
(declare-fun x451 () Bool)
(declare-fun x2090 () Bool)
(declare-fun x668 () Int)
(declare-fun x1897 () Bool)
(declare-fun x303 () Bool)
(declare-fun x1632 () Bool)
(declare-fun x1670 () Int)
(declare-fun x874 () Bool)
(declare-fun x1688 () Bool)
(declare-fun x710 () Bool)
(declare-fun x21 () Int)
(declare-fun x1069 () Bool)
(declare-fun x680 () Int)
(declare-fun x1068 () Int)
(declare-fun x1200 () Int)
(declare-fun x837 () x340)
(declare-fun x772 () Bool)
(declare-fun x209 () Bool)
(declare-fun x737 () Int)
(declare-fun x643 () Int)
(declare-fun x1027 () Bool)
(declare-fun x1025 () Bool)
(declare-fun x212 () Bool)
(declare-fun x1085 (Int) Int)
(declare-fun x1752 () Int)
(declare-fun x1830 () Bool)
(declare-fun x1395 () Int)
(declare-fun x1291 () Int)
(declare-fun x1130 () x340)
(declare-fun x1557 () Int)
(declare-fun x387 () Bool)
(declare-fun x391 () Int)
(declare-fun x162 () Bool)
(declare-fun x2035 () Int)
(declare-fun x143 () Int)
(declare-fun x472 () Int)
(declare-fun x556 () Int)
(declare-fun x1444 () Int)
(declare-fun x1950 () Bool)
(declare-fun x1894 () Int)
(declare-fun x403 () Int)
(declare-fun x657 () x340)
(declare-fun x274 () Int)
(declare-fun x1386 () Int)
(declare-fun x1415 () Bool)
(declare-fun x571 () Int)
(declare-fun x728 () Int)
(declare-fun x356 () Int)
(declare-fun x1208 () x340)
(declare-fun x1704 () Bool)
(declare-fun x1002 () Int)
(declare-fun x1804 () Int)
(declare-fun x1454 () Bool)
(declare-fun x70 () Bool)
(declare-fun x39 () Bool)
(declare-fun x43 () Bool)
(declare-fun x493 () Bool)
(declare-fun x1206 () Int)
(declare-fun x787 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x1419 () Bool)
(declare-fun x701 () Int)
(declare-fun x1037 () Int)
(declare-fun x976 () Bool)
(declare-fun x895 () Bool)
(declare-fun x1242 () Int)
(declare-fun x1496 () Bool)
(declare-fun x856 () Bool)
(declare-fun x460 () Bool)
(declare-fun x1482 () Int)
(declare-fun x172 () Int)
(declare-fun x2026 () Int)
(declare-fun x1914 () Int)
(declare-fun x842 () Int)
(declare-fun x444 () Int)
(declare-fun x471 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x1732 () Bool)
(declare-fun x2064 () x340)
(declare-fun x54 () Bool)
(declare-fun x834 () x340)
(declare-fun x516 () Bool)
(declare-fun x1634 () Int)
(declare-fun x1409 () Bool)
(declare-fun x258 () Int)
(declare-fun x59 () x340)
(declare-fun x573 () Bool)
(declare-fun x10 () Bool)
(declare-fun x1087 () Int)
(declare-fun x133 () Bool)
(declare-fun x144 () x340)
(declare-fun x501 () Int)
(declare-fun x572 () Int)
(declare-fun x972 () Bool)
(declare-fun x1778 () Int)
(declare-fun x538 () Bool)
(declare-fun x792 () Int)
(declare-fun x1908 () Bool)
(declare-fun x1701 () Int)
(declare-fun x751 () Bool)
(declare-fun x1418 () Int)
(declare-fun x1628 () Bool)
(declare-fun x1711 () Int)
(declare-fun x2065 () Bool)
(declare-fun x1481 () Bool)
(declare-fun x1598 () Bool)
(declare-fun x783 () Bool)
(declare-fun x1019 () Int)
(declare-fun x1479 () Bool)
(declare-fun x1655 () Int)
(declare-fun x1311 () Bool)
(declare-fun x1980 () Int)
(declare-fun x2033 () Bool)
(declare-fun x40 () Bool)
(declare-fun x102 () x340)
(declare-fun x370 (x340) Int)
(declare-fun x465 () Int)
(declare-fun x1958 () Bool)
(declare-fun x357 () Int)
(declare-fun x916 () Int)
(declare-fun x1792 () Bool)
(declare-fun x1047 () Int)
(declare-fun x1820 () Int)
(declare-fun x398 () Int)
(declare-fun x16 () Bool)
(declare-fun x197 () Int)
(declare-fun x663 () Int)
(declare-fun x160 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x1797 () Bool)
(declare-fun x454 () x340)
(declare-fun x1919 () Int)
(declare-fun x781 () Bool)
(declare-fun x1230 () x340)
(declare-fun x1602 () Bool)
(declare-fun x1278 () Int)
(declare-fun x1812 () Bool)
(declare-fun x1325 () Int)
(declare-fun x1126 () Int)
(declare-fun x1337 () Int)
(declare-fun x413 () x340)
(declare-fun x1823 () Bool)
(declare-fun x958 () Bool)
(declare-fun x1181 () Bool)
(declare-fun x1649 () Bool)
(declare-fun x560 () x340)
(declare-fun x307 () Bool)
(declare-fun x1472 () Int)
(declare-fun x2061 () Bool)
(declare-fun x684 () Bool)
(declare-fun x919 (x340) Int)
(declare-fun x1259 () Int)
(declare-fun x2081 () Bool)
(declare-fun x1709 () Bool)
(declare-fun x1365 () Int)
(declare-fun x862 () Int)
(declare-fun x139 () Bool)
(declare-fun x246 () Int)
(declare-fun x2074 () Int)
(declare-fun x231 () Int)
(declare-fun x848 () Int)
(declare-fun x1219 () Bool)
(declare-fun x831 () Int)
(declare-fun x943 () Bool)
(declare-fun x836 () Int)
(declare-fun x1994 () Int)
(declare-fun x50 () Bool)
(declare-fun x782 () Int)
(declare-fun x813 () Bool)
(declare-fun x734 () Bool)
(declare-fun x487 () Bool)
(declare-fun x743 () Bool)
(declare-fun x18 () Bool)
(declare-fun x870 () Bool)
(declare-fun x2038 () Int)
(declare-fun x305 () Bool)
(declare-fun x1522 () Int)
(declare-fun x1425 () x340)
(declare-fun x338 () Int)
(declare-fun x367 () x340)
(declare-fun x1734 () Bool)
(declare-fun x195 () Int)
(declare-fun x1007 () Bool)
(declare-fun x473 () Int)
(declare-fun x1660 () Int)
(declare-fun x1015 () Int)
(declare-fun x1137 () Bool)
(declare-fun x1847 () Int)
(declare-fun x1091 () Bool)
(declare-fun x2000 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x667 () Bool)
(declare-fun x1593 () x340)
(declare-fun x1967 () Bool)
(declare-fun x1073 () Int)
(declare-fun x1640 () Int)
(declare-fun x669 () Int)
(declare-fun x963 () Bool)
(declare-fun x1314 (Int) Int)
(declare-fun x1904 () Bool)
(declare-fun x410 () x340)
(declare-fun x1789 () Int)
(declare-fun x1934 () x340)
(declare-fun x1283 () Bool)
(declare-fun x1248 () Bool)
(declare-fun x283 () Int)
(declare-fun x116 () Int)
(declare-fun x1981 () Bool)
(declare-fun x1107 () Int)
(declare-fun x1826 () Int)
(declare-fun x1451 () Int)
(declare-fun x999 () Bool)
(declare-fun x1358 () Int)
(declare-fun x1635 () Int)
(declare-fun x1076 () Int)
(declare-fun x843 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x620 () Bool)
(declare-fun x567 () Int)
(declare-fun x1379 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x1267 () Int)
(declare-fun x19 () Bool)
(declare-fun x1195 () x340)
(declare-fun x691 () x340)
(declare-fun x361 () Int)
(declare-fun x1521 () Bool)
(declare-fun x991 () Int)
(declare-fun x1507 () Bool)
(declare-fun x1041 () Int)
(declare-fun x2086 () Bool)
(declare-fun x1428 () Bool)
(declare-fun x235 () Int)
(declare-fun x563 () Bool)
(declare-fun x518 () Bool)
(declare-fun x1777 () Bool)
(declare-fun x711 () Int)
(declare-fun x201 () Bool)
(declare-fun x713 () Int)
(declare-fun x185 () Bool)
(declare-fun x2007 () Bool)
(declare-fun x523 () Bool)
(declare-fun x1469 () Int)
(declare-fun x519 () Int)
(declare-fun x1105 () x340)
(declare-fun x375 () Bool)
(declare-fun x347 () Int)
(declare-fun x1361 () Bool)
(declare-fun x1354 () Int)
(declare-fun x763 () Bool)
(declare-fun x323 () Bool)
(declare-fun x1892 () Int)
(declare-fun x416 () Bool)
(declare-fun x458 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x646 () Bool)
(declare-fun x1925 () Int)
(declare-fun x1961 () Int)
(declare-fun x1995 () x340)
(declare-fun x1100 () Int)
(declare-fun x255 () Int)
(declare-fun x704 () Int)
(declare-fun x616 () Bool)
(declare-fun x608 () Int)
(declare-fun x368 () Int)
(declare-fun x1257 () x340)
(declare-fun x2057 () Int)
(declare-fun x313 () Int)
(declare-fun x2032 () Int)
(declare-fun x267 () Bool)
(declare-fun x1441 () Int)
(declare-fun x1749 () x340)
(declare-fun x1135 () Int)
(declare-fun x1702 () Bool)
(declare-fun x720 () Int)
(declare-fun x35 () Bool)
(declare-fun x650 () Bool)
(declare-fun x927 () x340)
(declare-fun x1972 () Bool)
(declare-fun x939 () Bool)
(declare-fun x2039 () Bool)
(declare-fun x377 () x340)
(declare-fun x1948 () Int)
(declare-fun x2037 () Bool)
(declare-fun x1333 () Int)
(declare-fun x656 () Bool)
(declare-fun x99 () Bool)
(declare-fun x546 () Bool)
(declare-fun x92 () Bool)
(declare-fun x1791 () Bool)
(declare-fun x1983 () Bool)
(declare-fun x1008 () Int)
(declare-fun x1182 () Bool)
(declare-fun x117 () Bool)
(declare-fun x1488 () Int)
(declare-fun x586 () Int)
(declare-fun x1139 () Int)
(declare-fun x698 () x340)
(declare-fun x816 () Bool)
(declare-fun x724 () Int)
(declare-fun x1666 () Bool)
(declare-fun x362 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x329 () Bool)
(declare-fun x1937 () Bool)
(declare-fun x1881 () Bool)
(declare-fun x541 () Bool)
(declare-fun x987 () Int)
(declare-fun x1387 () Int)
(declare-fun x1499 () Int)
(declare-fun x1237 () Bool)
(declare-fun x1657 () Int)
(declare-fun x1506 () Int)
(declare-fun x1243 () Bool)
(declare-fun x1305 () Int)
(declare-fun x626 () Int)
(declare-fun x252 () Bool)
(declare-fun x2073 () Bool)
(declare-fun x1800 () Int)
(declare-fun x906 () Bool)
(declare-fun x91 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x1385 () Bool)
(declare-fun x245 () x340)
(declare-fun x551 () Bool)
(declare-fun x124 () Int)
(declare-fun x128 () Bool)
(declare-fun x1155 () Int)
(declare-fun x510 () Bool)
(declare-fun x1936 () Int)
(declare-fun x1776 () Bool)
(declare-fun x262 () Int)
(declare-fun x270 () Int)
(declare-fun x227 () Int)
(declare-fun x118 () Int)
(declare-fun x1372 () Bool)
(declare-fun x474 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x1537 () Int)
(declare-fun x527 () Int)
(declare-fun x1977 () Int)
(declare-fun x1858 () Bool)
(declare-fun x240 () Int)
(declare-fun x1307 () Bool)
(declare-fun x1678 () Int)
(declare-fun x190 () Int)
(declare-fun x1669 () Bool)
(declare-fun x382 () Bool)
(declare-fun x1873 () Bool)
(declare-fun x624 () Int)
(declare-fun x1141 () x340)
(declare-fun x803 () Bool)
(declare-fun x666 () Int)
(declare-fun x350 () Bool)
(declare-fun x1591 () Int)
(declare-fun x801 () Bool)
(declare-fun x807 () x340)
(declare-fun x1601 () Bool)
(declare-fun x271 () Int)
(declare-fun x1545 () Bool)
(declare-fun x1274 () Bool)
(declare-fun x1985 () Bool)
(declare-fun x2059 () Int)
(declare-fun x32 () Bool)
(declare-fun x630 () Bool)
(declare-fun x1552 () x340)
(declare-fun x543 () Bool)
(declare-fun x872 () Bool)
(declare-fun x1074 () Bool)
(declare-fun x664 () Bool)
(declare-fun x912 () x340)
(declare-fun x427 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x812 () x340)
(declare-fun x1480 () Int)
(declare-fun x521 () Bool)
(declare-fun x325 () Bool)
(declare-fun x1281 () Int)
(declare-fun x1026 () Bool)
(declare-fun x703 () Int)
(declare-fun x1526 () Int)
(declare-fun x962 () Int)
(declare-fun x918 () Bool)
(declare-fun x1744 () Bool)
(declare-fun x1011 () Int)
(declare-fun x604 () Bool)
(declare-fun x1805 () Int)
(declare-fun x145 () Int)
(declare-fun x531 () Bool)
(declare-fun x1747 () Int)
(declare-fun x341 () Bool)
(declare-fun x717 () Bool)
(declare-fun x723 () Bool)
(declare-fun x1540 () Int)
(declare-fun x1727 () Int)
(declare-fun x1199 () Int)
(declare-fun x2088 () Bool)
(declare-fun x892 () x340)
(declare-fun x893 () Int)
(declare-fun x1108 () Int)
(declare-fun x1577 () Bool)
(declare-fun x784 () Int)
(declare-fun x824 () Int)
(declare-fun x1832 () x340)
(declare-fun x1202 () Bool)
(declare-fun x2048 () Bool)
(declare-fun x1875 () Int)
(declare-fun x2031 () Bool)
(declare-fun x1271 () Int)
(declare-fun x1151 () Int)
(declare-fun x486 () Bool)
(declare-fun x599 () Bool)
(declare-fun x780 () Bool)
(declare-fun x921 () Int)
(declare-fun x639 () Int)
(declare-fun x731 () Bool)
(declare-fun x1685 () Int)
(declare-fun x1790 () Int)
(declare-fun x1856 () Bool)
(declare-fun x348 () Bool)
(declare-fun x466 () Int)
(declare-fun x647 () Int)
(declare-fun x1198 () Int)
(declare-fun x1912 () Bool)
(declare-fun x534 () x340)
(declare-fun x749 () Int)
(declare-fun x1209 () Int)
(declare-fun x1163 () x340)
(declare-fun x1659 () x340)
(declare-fun x292 () Int)
(declare-fun x434 () Int)
(declare-fun x1527 () Int)
(declare-fun x818 () Int)
(declare-fun x1234 () Int)
(declare-fun x682 () Int)
(declare-fun x805 () Bool)
(declare-fun x1992 () Int)
(declare-fun x87 () Bool)
(declare-fun x383 () Bool)
(declare-fun x81 () Bool)
(declare-fun x148 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x1911 () Bool)
(declare-fun x1297 () Bool)
(declare-fun x223 () Bool)
(declare-fun x1378 () Int)
(declare-fun x1204 () Bool)
(declare-fun x924 () Bool)
(declare-fun x494 () Int)
(declare-fun x1738 () Bool)
(declare-fun x1490 () Int)
(declare-fun x970 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x1258 () Bool)
(declare-fun x156 () x340)
(declare-fun x1432 () Bool)
(declare-fun x2066 () Int)
(declare-fun x431 () Bool)
(declare-fun x1023 () Int)
(declare-fun x625 () Int)
(declare-fun x1718 () Int)
(declare-fun x457 () Int)
(declare-fun x1228 () Bool)
(declare-fun x675 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x1401 () Int)
(declare-fun x1766 () Int)
(declare-fun x1647 () Bool)
(declare-fun x1674 () Bool)
(declare-fun x1508 () Int)
(declare-fun x1638 () x340)
(declare-fun x1520 () Int)
(declare-fun x732 () Bool)
(declare-fun x2051 () Int)
(declare-fun x47 () Bool)
(declare-fun x1693 () x340)
(declare-fun x260 () Bool)
(declare-fun x25 () x340)
(declare-fun x130 () Int)
(declare-fun x794 () Int)
(declare-fun x242 () Bool)
(declare-fun x1677 () Int)
(declare-fun x352 () Bool)
(declare-fun x944 () Int)
(declare-fun x951 () Bool)
(declare-fun x1553 () Int)
(declare-fun x103 () x340)
(declare-fun x980 () x340)
(declare-fun x1268 () Bool)
(declare-fun x1652 () Bool)
(declare-fun x1539 () Int)
(declare-fun x371 () Int)
(declare-fun x1516 (Int Int) Int)
(declare-fun x514 () Bool)
(declare-fun x100 () Bool)
(declare-fun x641 () x340)
(declare-fun x1656 () Int)
(declare-fun x614 () x340)
(declare-fun x417 () Bool)
(declare-fun x125 () Int)
(declare-fun x1460 () Int)
(declare-fun x1550 () Bool)
(declare-fun x1920 () Bool)
(declare-fun x306 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x1781 () Bool)
(declare-fun x41 () Bool)
(declare-fun x829 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x1226 () Int)
(declare-fun x1821 () Bool)
(declare-fun x1870 () Int)
(declare-fun x1922 () Int)
(declare-fun x635 () Bool)
(declare-fun x1269 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x1783 () Bool)
(declare-fun x1633 (Int Int) Int)
(declare-fun x558 () Bool)
(declare-fun x1301 () Bool)
(declare-fun x761 () Bool)
(declare-fun x539 () Bool)
(declare-fun x566 () Int)
(declare-fun x1530 () x340)
(declare-fun x1160 () Int)
(declare-fun x923 () Int)
(declare-fun x1700 () x340)
(declare-fun x276 (x340) Int)
(declare-fun x1795 () Int)
(declare-fun x1745 () Int)
(declare-fun x1227 () Int)
(declare-fun x1510 () x340)
(declare-fun x1110 () Int)
(declare-fun x1106 () Int)
(declare-fun x225 (Int Int) Int)
(declare-fun x640 () Bool)
(declare-fun x1889 () Int)
(declare-fun x2034 () Int)
(declare-fun x1691 () Int)
(declare-fun x744 () Bool)
(declare-fun x904 () Int)
(declare-fun x1497 (x340) Int)
(declare-fun x1954 () Bool)
(declare-fun x445 () x340)
(declare-fun x887 () Int)
(declare-fun x1344 () Int)
(declare-fun x1604 () Int)
(declare-fun x1192 () Int)
(declare-fun x617 () Int)
(declare-fun x607 () Bool)
(declare-fun x1664 () Bool)
(declare-fun x671 () Int)
(declare-fun x1457 () Int)
(declare-fun x121 () Bool)
(declare-fun x318 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x969 () Bool)
(declare-fun x1574 () Int)
(declare-fun x1511 (x340) Int)
(declare-fun x628 () Int)
(declare-fun x1683 () Bool)
(declare-fun x483 () Int)
(declare-fun x1714 () Bool)
(declare-fun x568 () Int)
(declare-fun x406 () Int)
(declare-fun x997 () Int)
(declare-fun x1179 () Int)
(declare-fun x1146 () Int)
(declare-fun x1222 () Bool)
(declare-fun x672 () Bool)
(declare-fun x342 () Bool)
(declare-fun x2022 () Bool)
(declare-fun x108 () Int)
(declare-fun x1470 () Int)
(declare-fun x777 () Int)
(declare-fun x1578 () Bool)
(declare-fun x146 () Bool)
(declare-fun x1381 () Int)
(declare-fun x1817 () Bool)
(declare-fun x738 () Int)
(declare-fun x1353 () Bool)
(declare-fun x1715 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x204 () Int)
(declare-fun x175 () Int)
(declare-fun x1642 () Bool)
(declare-fun x65 () Int)
(declare-fun x1801 () x340)
(declare-fun x1864 () Bool)
(declare-fun x1988 () Int)
(declare-fun x1503 () Bool)
(declare-fun x450 () Bool)
(declare-fun x249 () Bool)
(declare-fun x795 () Bool)
(declare-fun x649 () Bool)
(declare-fun x1572 () Bool)
(declare-fun x1229 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x757 () Bool)
(declare-fun x408 () Bool)
(declare-fun x1122 () x340)
(declare-fun x2063 () Bool)
(declare-fun x1849 () Int)
(declare-fun x167 () Int)
(declare-fun x68 () Bool)
(declare-fun x1723 () Bool)
(declare-fun x1280 () Int)
(declare-fun x1081 () Int)
(declare-fun x1762 () Int)
(declare-fun x282 (x340) Int)
(declare-fun x1471 () Bool)
(declare-fun x1554 () Int)
(declare-fun x1083 () Bool)
(declare-fun x229 () Bool)
(declare-fun x1624 () Int)
(declare-fun x851 () Int)
(declare-fun x224 () x340)
(declare-fun x1569 () Bool)
(declare-fun x627 () Int)
(declare-fun x1214 () Bool)
(declare-fun x182 () Bool)
(declare-fun x2006 () x340)
(declare-fun x1078 () Bool)
(declare-fun x1514 () Int)
(declare-fun x1153 () Int)
(declare-fun x304 () x340)
(declare-fun x655 () Int)
(declare-fun x1623 () x340)
(declare-fun x1272 () Int)
(declare-fun x1330 () Bool)
(declare-fun x554 () Int)
(declare-fun x1389 () Int)
(declare-fun x1698 () Int)
(declare-fun x793 () Int)
(declare-fun x1886 () x340)
(declare-fun x44 () Int)
(declare-fun x349 () Bool)
(declare-fun x233 () Int)
(declare-fun x446 () Int)
(declare-fun x453 () Bool)
(declare-fun x830 (Int Int) Int)
(declare-fun x1210 () Int)
(declare-fun x785 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x86 () Int)
(declare-fun x75 (Int) Int)
(declare-fun x1422 () Bool)
(declare-fun x1816 () Bool)
(declare-fun x1916 () Bool)
(declare-fun x1304 () Bool)
(declare-fun x715 () Bool)
(declare-fun x1905 () x340)
(declare-fun x1614 () Bool)
(declare-fun x768 () Bool)
(declare-fun x1370 () Int)
(declare-fun x633 () Int)
(declare-fun x1809 () Bool)
(declare-fun x1851 () Bool)
(declare-fun x1854 () Bool)
(declare-fun x1884 () Bool)
(declare-fun x187 () Int)
(declare-fun x1899 () Bool)
(declare-fun x1850 () Bool)
(declare-fun x1533 () Bool)
(declare-fun x189 () Bool)
(declare-fun x525 () Bool)
(declare-fun x1722 () Bool)
(declare-fun x1147 () Int)
(declare-fun x1622 () Bool)
(declare-fun x591 () Int)
(declare-fun x1651 () Int)
(declare-fun x93 () x340)
(declare-fun x279 () Bool)
(declare-fun x1517 () Int)
(declare-fun x1080 () Int)
(declare-fun x1345 () Int)
(declare-fun x1459 () Bool)
(declare-fun x889 () Int)
(declare-fun x998 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x2017 () Bool)
(declare-fun x1054 () Int)
(declare-fun x930 () Int)
(declare-fun x1310 () Int)
(declare-fun x841 () Bool)
(declare-fun x559 () Int)
(declare-fun x536 () Int)
(declare-fun x24 () Int)
(declare-fun x512 () Int)
(declare-fun x526 () Int)
(declare-fun x685 () Bool)
(declare-fun x219 () Int)
(declare-fun x1466 () Int)
(declare-fun x1748 () Int)
(declare-fun x1145 () Bool)
(declare-fun x343 () Bool)
(declare-fun x1834 () Int)
(declare-fun x1546 () Bool)
(declare-fun x658 () Int)
(declare-fun x762 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x582 () Bool)
(declare-fun x1492 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x1412 () Bool)
(declare-fun x478 () Bool)
(declare-fun x132 () Int)
(declare-fun x168 () x340)
(declare-fun x1324 () Bool)
(declare-fun x297 () Bool)
(declare-fun x2055 () Bool)
(declare-fun x1117 () Int)
(declare-fun x1814 () Bool)
(declare-fun x1750 () Bool)
(declare-fun x1620 () x340)
(declare-fun x491 () Int)
(declare-fun x1104 () Bool)
(declare-fun x1394 () Int)
(declare-fun x1815 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x1608 (Int) Int)
(declare-fun x1648 () Bool)
(declare-fun x1978 () Bool)
(declare-fun x1405 () Int)
(declare-fun x1417 () Int)
(declare-fun x1970 () Bool)
(declare-fun x1940 () x340)
(declare-fun x1127 () Int)
(declare-fun x1191 () Bool)
(declare-fun x981 () Bool)
(declare-fun x1883 () Int)
(declare-fun x530 () Bool)
(declare-fun x929 () Int)
(declare-fun x920 () x340)
(declare-fun x503 () Int)
(declare-fun x1157 () x340)
(declare-fun x1531 () Int)
(declare-fun x636 () x340)
(declare-fun x1125 () Bool)
(declare-fun x492 () Bool)
(declare-fun x179 () Int)
(declare-fun x1757 () Bool)
(declare-fun x171 () Int)
(declare-fun x1799 () x340)
(declare-fun x1434 () Int)
(declare-fun x850 () Int)
(declare-fun x1043 () Int)
(declare-fun x1317 () Bool)
(declare-fun x700 () Bool)
(declare-fun x1263 () Bool)
(declare-fun x1841 () Bool)
(declare-fun x858 () Int)
(declare-fun x1167 () Int)
(declare-fun x2002 () Int)
(declare-fun x314 () Int)
(declare-fun x1878 () Bool)
(declare-fun x752 () Bool)
(declare-fun x618 () Int)
(declare-fun x1205 () Bool)
(declare-fun x1676 () Int)
(declare-fun x1270 () Bool)
(declare-fun x1549 () Bool)
(declare-fun x1391 () Int)
(declare-fun x988 () Bool)
(declare-fun x1684 () Int)
(declare-fun x894 () Int)
(declare-fun x1303 () Int)
(declare-fun x1332 () Int)
(declare-fun x1250 () Bool)
(declare-fun x1794 () Bool)
(declare-fun x982 () Bool)
(declare-fun x259 () Int)
(declare-fun x914 () Bool)
(declare-fun x766 () Int)
(declare-fun x1306 () Bool)
(declare-fun x206 () Bool)
(declare-fun x401 () Bool)
(declare-fun x594 () Int)
(declare-fun x1396 () Bool)
(declare-fun x1433 () Int)
(declare-fun x1946 (x340) Int)
(declare-fun x754 () Bool)
(declare-fun x580 () Int)
(declare-fun x287 () Int)
(declare-fun x1264 () x340)
(declare-fun x966 () Int)
(declare-fun x432 () Int)
(declare-fun x1483 () Bool)
(declare-fun x601 () Bool)
(declare-fun x1276 () Int)
(declare-fun x1953 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x936 () Int)
(declare-fun x910 () Bool)
(declare-fun x1819 () Bool)
(declare-fun x898 () Bool)
(declare-fun x722 () Int)
(declare-fun x164 () Bool)
(declare-fun x1538 () Bool)
(declare-fun x733 () Bool)
(declare-fun x869 () Bool)
(declare-fun x1184 () Int)
(declare-fun x1857 () Int)
(declare-fun x409 () Int)
(declare-fun x880 () Int)
(declare-fun x730 () Bool)
(declare-fun x364 () Int)
(declare-fun x2068 () Bool)
(declare-fun x1090 () Int)
(declare-fun x153 () Bool)
(declare-fun x1680 () Bool)
(declare-fun x412 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x1665 () Int)
(declare-fun x1710 () Int)
(declare-fun x745 () Bool)
(declare-fun x1813 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x992 () Bool)
(declare-fun x1124 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x786 () Int)
(declare-fun x1615 () Int)
(declare-fun x2071 () Int)
(declare-fun x353 () Bool)
(declare-fun x585 () Int)
(declare-fun x1239 () Bool)
(declare-fun x796 () Int)
(declare-fun x436 () Bool)
(declare-fun x217 () Bool)
(declare-fun x2056 () Int)
(declare-fun x1839 () Int)
(declare-fun x1203 () Bool)
(declare-fun x570 () Bool)
(declare-fun x517 () Bool)
(declare-fun x1712 () Bool)
(declare-fun x1721 () Bool)
(declare-fun x1172 () Int)
(declare-fun x1174 () Bool)
(declare-fun x384 () x340)
(declare-fun x1536 () Int)
(declare-fun x1597 () Int)
(declare-fun x1672 () Bool)
(declare-fun x961 () Bool)
(declare-fun x142 () Int)
(declare-fun x33 () Bool)
(declare-fun x1012 () Int)
(declare-fun x1349 () Bool)
(declare-fun x482 () Bool)
(declare-fun x954 () Int)
(declare-fun x623 () Int)
(declare-fun x1818 () Int)
(declare-fun x1445 () Bool)
(declare-fun x593 () Bool)
(declare-fun x452 () Bool)
(declare-fun x1998 () Int)
(declare-fun x228 () Int)
(declare-fun x1066 () Int)
(declare-fun x1903 () Bool)
(declare-fun x2050 () Bool)
(declare-fun x2 () Int)
(declare-fun x1644 () Bool)
(declare-fun x758 () Int)
(declare-fun x1212 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x2053 () Bool)
(declare-fun x648 () Bool)
(declare-fun x1298 (x340) Int)
(declare-fun x1390 () Bool)
(declare-fun x158 () Bool)
(declare-fun x602 () Bool)
(declare-fun x463 () Bool)
(declare-fun x660 () Int)
(declare-fun x1840 () x340)
(declare-fun x1455 () Int)
(declare-fun x1017 () Int)
(declare-fun x661 () Bool)
(declare-fun x2036 () Int)
(declare-fun x331 () Bool)
(declare-fun x1366 () Bool)
(declare-fun x468 () Int)
(declare-fun x1186 () Bool)
(declare-fun x1717 () Int)
(declare-fun x1999 () Bool)
(declare-fun x1254 () Bool)
(declare-fun x1149 () Int)
(declare-fun x1262 () Int)
(declare-fun x1871 () Bool)
(declare-fun x129 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x1035 () Int)
(declare-fun x798 () Int)
(declare-fun x1872 () Int)
(declare-fun x1282 () Bool)
(declare-fun x1294 () Int)
(declare-fun x1618 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x817 () Bool)
(declare-fun x533 () Bool)
(declare-fun x1148 () Int)
(declare-fun x27 () Int)
(declare-fun x1247 () Bool)
(declare-fun x1065 () Bool)
(declare-fun x1962 () Int)
(declare-fun x956 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x1435 () Bool)
(declare-fun x1225 () Int)
(declare-fun x392 () Int)
(declare-fun x1001 (Int Int) Int)
(declare-fun x289 () Int)
(declare-fun x613 () Int)
(declare-fun x1211 () Bool)
(declare-fun x583 () Int)
(declare-fun x1973 () Bool)
(declare-fun x131 () Bool)
(declare-fun x196 () Int)
(declare-fun x1600 () Int)
(declare-fun x1312 () Bool)
(declare-fun x2021 () Int)
(declare-fun x53 () Bool)
(declare-fun x181 () Int)
(declare-fun x1694 () Bool)
(declare-fun x1072 () Int)
(declare-fun x1 () x340)
(declare-fun x699 () Bool)
(declare-fun x193 () Bool)
(declare-fun x1093 () Int)
(declare-fun x1094 () Bool)
(declare-fun x545 () Bool)
(declare-fun x1982 () Bool)
(declare-fun x1991 () Int)
(declare-fun x665 () Bool)
(declare-fun x481 () Int)
(declare-fun x764 () Int)
(declare-fun x1563 () Int)
(declare-fun x832 () Int)
(declare-fun x1475 () Bool)
(declare-fun x2010 () Bool)
(declare-fun x1785 () Bool)
(declare-fun x933 () Int)
(declare-fun x1165 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x177 () Int)
(declare-fun x88 () Bool)
(declare-fun x524 () x340)
(declare-fun x2049 () Bool)
(declare-fun x736 () Bool)
(declare-fun x1876 () Int)
(declare-fun x1592 () Int)
(declare-fun x97 () x340)
(declare-fun x243 () Int)
(declare-fun x1140 () Bool)
(declare-fun x57 () Int)
(declare-fun x2083 () Int)
(declare-fun x15 () Int)
(declare-fun x1052 () Int)
(declare-fun x1097 () Int)
(declare-fun x205 () Int)
(declare-fun x2012 () Bool)
(declare-fun x1975 () Bool)
(declare-fun x1650 () x340)
(declare-fun x965 () Int)
(declare-fun x490 () Int)
(declare-fun x1703 () Int)
(declare-fun x1364 () Int)
(declare-fun x2047 () Bool)
(declare-fun x747 () Bool)
(declare-fun x275 () Bool)
(declare-fun x753 () Bool)
(declare-fun x687 () Bool)
(declare-fun x234 () Int)
(declare-fun x119 () Int)
(declare-fun x1430 () Int)
(declare-fun x326 () Int)
(declare-fun x1190 () Int)
(declare-fun x611 () Bool)
(declare-fun x394 () x340)
(declare-fun x1115 () Int)
(declare-fun x78 () Bool)
(declare-fun x475 (Int) Int)
(declare-fun x971 () Int)
(declare-fun x767 () Bool)
(declare-fun x2085 () Bool)
(declare-fun x1575 () Int)
(declare-fun x76 () Bool)
(declare-fun x902 () Int)
(declare-fun x1450 () Bool)
(declare-fun x42 () x340)
(declare-fun x1088 () Int)
(declare-fun x273 () x340)
(declare-fun x1763 () Bool)
(declare-fun x878 () Bool)
(declare-fun x135 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x90 () Int)
(declare-fun x932 () Int)
(declare-fun x693 (Int) Int)
(declare-fun x995 () Int)
(declare-fun x1180 () Bool)
(declare-fun x960 () Bool)
(declare-fun x51 () x340)
(declare-fun x1837 () Bool)
(declare-fun x1178 () Int)
(declare-fun x2067 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x284 () Int)
(declare-fun x428 () Int)
(declare-fun x1009 () Bool)
(declare-fun x688 () Bool)
(declare-fun x374 () Bool)
(declare-fun x581 () Int)
(declare-fun x1136 () Bool)
(declare-fun x2040 () Int)
(declare-fun x1273 () Int)
(declare-fun x1774 () Int)
(declare-fun x1866 () Int)
(declare-fun x1611 () Int)
(declare-fun x1498 () Bool)
(declare-fun x1468 () Int)
(declare-fun x547 () Bool)
(declare-fun x322 () x340)
(declare-fun x1542 () Int)
(declare-fun x1987 () Bool)
(declare-fun x107 () Int)
(declare-fun x603 () x340)
(declare-fun x1581 () Bool)
(declare-fun x378 () Int)
(declare-fun x926 () Int)
(declare-fun x948 () Bool)
(declare-fun x1260 (Int) Int)
(declare-fun x1969 () Bool)
(declare-fun x433 () Bool)
(declare-fun x1587 () Int)
(declare-fun x584 () Bool)
(declare-fun x809 () Bool)
(declare-fun x1594 () Int)
(declare-fun x1802 (Int) Int)
(declare-fun x317 () Bool)
(declare-fun x485 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x833 () Int)
(declare-fun x6 () Int)
(declare-fun x1513 () Bool)
(declare-fun x1882 () Bool)
(declare-fun x1029 () Int)
(declare-fun x96 () Bool)
(declare-fun x298 () Int)
(declare-fun x1599 () Bool)
(declare-fun x1512 () Int)
(declare-fun x232 () Bool)
(declare-fun x808 () Int)
(declare-fun x1476 () Int)
(declare-fun x134 () Int)
(declare-fun x1565 () Int)
(declare-fun x120 (Int) Int)
(declare-fun x854 () Int)
(declare-fun x742 () Int)
(declare-fun x1421 () Bool)
(declare-fun x126 () Int)
(declare-fun x1429 () Bool)
(declare-fun x1338 () Int)
(declare-fun x500 () Int)
(declare-fun x1275 () Bool)
(declare-fun x1289 () Int)
(declare-fun x335 () Int)
(declare-fun x136 (x340) Int)
(declare-fun x1736 () Int)
(declare-fun x1910 () Int)
(declare-fun x1621 () Bool)
(declare-fun x1443 () Bool)
(declare-fun x947 () x340)
(declare-fun x1032 () x340)
(declare-fun x522 () Bool)
(declare-fun x1641 () Int)
(declare-fun x2080 () Bool)
(declare-fun x1164 () Int)
(declare-fun x1357 () Bool)
(declare-fun x1077 () Int)
(declare-fun x1232 () Bool)
(declare-fun x281 () x340)
(declare-fun x740 () Int)
(declare-fun x550 () x340)
(declare-fun x1558 () Bool)
(declare-fun x1743 () Int)
(declare-fun x114 () Bool)
(declare-fun x1926 () Int)
(declare-fun x459 () Bool)
(declare-fun x1707 () Bool)
(declare-fun x1796 () Int)
(declare-fun x2075 () Bool)
(declare-fun x1584 () Int)
(declare-fun x52 () Bool)
(declare-fun x760 () Bool)
(declare-fun x400 () x340)
(declare-fun x562 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x405 () Int)
(declare-fun x499 () Bool)
(declare-fun x379 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x1824 () Bool)
(declare-fun x755 () x340)
(declare-fun x670 () Bool)
(declare-fun x750 () x340)
(declare-fun x990 () Bool)
(declare-fun x806 () x340)
(declare-fun x881 () Int)
(declare-fun x1770 () Bool)
(declare-fun x839 () Int)
(declare-fun x651 () Int)
(declare-fun x1764 () x340)
(declare-fun x479 () Int)
(declare-fun x590 () Bool)
(declare-fun x505 (x340) Int)
(declare-fun x1697 () Int)
(declare-fun x1822 () x340)
(declare-fun x1735 () Int)
(declare-fun x804 () Bool)
(declare-fun x1439 () Int)
(declare-fun x746 () Bool)
(declare-fun x3 () Int)
(declare-fun x1000 () Int)
(declare-fun x365 () x340)
(declare-fun x1739 () Int)
(declare-fun x363 () Int)
(declare-fun x256 () Bool)
(declare-fun x1142 () Int)
(declare-fun x1502 () Bool)
(declare-fun x1741 () Bool)
(declare-fun x106 () Int)
(declare-fun x900 () Bool)
(declare-fun x1658 () Int)
(declare-fun x578 () Bool)
(declare-fun x1979 () Int)
(declare-fun x358 () Bool)
(declare-fun x600 () Bool)
(declare-fun x511 () x340)
(declare-fun x300 () Int)
(declare-fun x104 () Bool)
(declare-fun x359 () Bool)
(declare-fun x264 () Bool)
(declare-fun x1014 () Bool)
(declare-fun x974 () Int)
(declare-fun x587 () Bool)
(declare-fun x964 () Int)
(declare-fun x769 () Int)
(declare-fun x1740 () Int)
(declare-fun x1548 () Int)
(declare-fun x1113 () Bool)
(declare-fun x1869 () Bool)
(declare-fun x2011 () Int)
(declare-fun x2041 () Int)
(declare-fun x8 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x14 () Int)
(declare-fun x1891 () Int)
(declare-fun x489 () Bool)
(declare-fun x1340 () Int)
(declare-fun x645 () Int)
(declare-fun x1893 () Int)
(declare-fun x344 () Bool)
(declare-fun x1663 () Int)
(declare-fun x1016 () Bool)
(declare-fun x1256 () Int)
(declare-fun x334 () Bool)
(declare-fun x802 () Bool)
(declare-fun x2069 () Bool)
(declare-fun x1566 () Bool)
(declare-fun x67 () x340)
(declare-fun x2014 () Bool)
(declare-fun x1808 () Int)
(declare-fun x151 () Int)
(declare-fun x2045 () Int)
(declare-fun x1775 () Bool)
(declare-fun x891 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x515 () x340)
(declare-fun x17 () Int)
(declare-fun x917 () Int)
(declare-fun x495 () Bool)
(declare-fun x1207 () Int)
(declare-fun x1772 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x1963 () Int)
(declare-fun x1309 () Bool)
(declare-fun x1754 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x2013 () Int)
(declare-fun x5 () x340)
(declare-fun x1359 () Int)
(declare-fun x1024 () Int)
(declare-fun x2020 () Int)
(declare-fun x1346 () Bool)
(declare-fun x61 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x989 () Bool)
(declare-fun x1114 () Bool)
(declare-fun x1695 () Bool)
(declare-fun x1173 () Bool)
(declare-fun x860 () Bool)
(declare-fun x504 () Int)
(declare-fun x1302 () Bool)
(declare-fun x188 () Bool)
(declare-fun x152 () Bool)
(declare-fun x277 () x340)
(declare-fun x230 () Bool)
(declare-fun x799 () Bool)
(declare-fun x456 () Bool)
(declare-fun x2043 () Bool)
(declare-fun x1966 () Int)
(declare-fun x1063 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x576 () Int)
(declare-fun x565 () Bool)
(declare-fun x1927 () Int)
(declare-fun x1224 () Int)
(declare-fun x1099 () Int)
(declare-fun x853 () Bool)
(declare-fun x165 () Bool)
(declare-fun x2008 () Bool)
(declare-fun x1989 () Int)
(declare-fun x1279 () x340)
(declare-fun x380 () x340)
(declare-fun x1350 () Int)
(declare-fun x95 () Bool)
(declare-fun x1185 () Int)
(declare-fun x109 () Bool)
(declare-fun x46 () Bool)
(declare-fun x1215 () Int)
(declare-fun x986 () Bool)
(declare-fun x1380 () Bool)
(declare-fun x520 () Bool)
(declare-fun x191 (x340) Int)
(declare-fun x1861 () Int)
(declare-fun x528 () Int)
(declare-fun x266 () Int)
(declare-fun x137 () Bool)
(declare-fun x1780 () Int)
(declare-fun x1246 () Int)
(declare-fun x1484 () Int)
(declare-fun x1399 () Bool)
(declare-fun x388 () Bool)
(declare-fun x351 () Bool)
(declare-fun x2079 () x340)
(declare-fun x316 () Bool)
(declare-fun x85 () Bool)
(declare-fun x575 () Bool)
(declare-fun x66 () Int)
(declare-fun x2084 () Int)
(declare-fun x1010 () Bool)
(declare-fun x140 () Bool)
(declare-fun x973 () Int)
(declare-fun x886 () Bool)
(declare-fun x123 () Int)
(declare-fun x702 () Bool)
(declare-fun x222 () Int)
(declare-fun x589 () Int)
(declare-fun x569 () Int)
(declare-fun x244 () Int)
(declare-fun x159 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x535 () Bool)
(declare-fun x154 () Int)
(declare-fun x149 () Int)
(declare-fun x615 () Bool)
(declare-fun x729 () Int)
(declare-fun x1048 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x1223 (x340) Int)
(declare-fun x308 (x340) Int)
(declare-fun x1045 () x340)
(declare-fun x1292 () Int)
(declare-fun x449 () Int)
(declare-fun x1964 () Int)
(declare-fun x295 () Bool)
(declare-fun x467 () Int)
(declare-fun x1150 (Int) Int)
(declare-fun x1308 () Bool)
(declare-fun x828 () Int)
(declare-fun x1868 () Bool)
(declare-fun x1534 () x340)
(declare-fun x1327 () Bool)
(declare-fun x714 () Bool)
(declare-fun x1930 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x1245 () Int)
(declare-fun x553 () Bool)
(declare-fun x1159 () Int)
(declare-fun x1564 () x340)
(declare-fun x1753 () Int)
(declare-fun x1874 () Int)
(declare-fun x609 () Int)
(declare-fun x1335 () Int)
(declare-fun x1909 () Int)
(declare-fun x1901 () Int)
(declare-fun x985 () Bool)
(declare-fun x1955 () Bool)
(declare-fun x907 () Int)
(declare-fun x1784 () Bool)
(declare-fun x1668 () Bool)
(declare-fun x438 (Int) Int)
(declare-fun x1583 () Bool)
(declare-fun x1342 () Int)
(declare-fun x790 () x340)
(declare-fun x1959 () Bool)
(declare-fun x1351 () Int)
(declare-fun x488 () Bool)
(declare-fun x775 () Int)
(declare-fun x1855 () Int)
(declare-fun x407 () Bool)
(declare-fun x1629 () x340)
(declare-fun x447 () Bool)
(declare-fun x2077 () Int)
(declare-fun x1030 () Int)
(declare-fun x1133 () x340)
(declare-fun x1442 () Int)
(declare-fun x2019 () Bool)
(declare-fun x1501 () Int)
(declare-fun x29 () Bool)
(declare-fun x875 () Bool)
(declare-fun x1730 () Int)
(declare-fun x163 () Int)
(declare-fun x1798 () Bool)
(declare-fun x1879 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x476 () Bool)
(declare-fun x448 () Bool)
(declare-fun x727 () x340)
(declare-fun x1478 () Bool)
(declare-fun x1056 () x340)
(declare-fun x1906 () Int)
(declare-fun x686 () Int)
(declare-fun x498 () Bool)
(declare-fun x1768 () Int)
(declare-fun x1535 () Int)
(declare-fun x239 () Int)
(declare-fun x1373 () Bool)
(declare-fun x696 () Bool)
(declare-fun x113 () x340)
(declare-fun x1551 () Bool)
(declare-fun x1582 () Int)
(declare-fun x1285 () Int)
(declare-fun x719 () x340)
(declare-fun x1828 () Int)
(declare-fun x1423 () Int)
(declare-fun x1313 () Bool)
(declare-fun x1134 () Int)
(declare-fun x1039 () Int)
(declare-fun x1833 () Int)
(declare-fun x1398 () Int)
(declare-fun x2082 () Int)
(declare-fun x2029 () Bool)
(declare-fun x138 () Bool)
(declare-fun x22 () Int)
(declare-fun x712 () Bool)
(declare-fun x339 () Bool)
(declare-fun x789 () Bool)
(declare-fun x975 () Bool)
(declare-fun x549 () Bool)
(declare-fun x679 () Bool)
(declare-fun x2046 () Bool)
(declare-fun x1939 () Bool)
(declare-fun x1944 () Bool)
(declare-fun x1853 () Int)
(declare-fun x776 (Int) Int)
(declare-fun x373 () Int)
(declare-fun x1092 () x340)
(declare-fun x72 () x340)
(declare-fun x984 () Int)
(declare-fun x1101 () Int)
(declare-fun x1771 () Int)
(declare-fun x372 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x423 () Bool)
(declare-fun x337 () Bool)
(declare-fun x203 () Bool)
(declare-fun x759 () Bool)
(declare-fun x286 () Int)
(declare-fun x788 () Bool)
(declare-fun x748 () Int)
(declare-fun x542 () Int)
(declare-fun x354 () Int)
(declare-fun x442 () Bool)
(declare-fun x1630 () Int)
(declare-fun x552 () Bool)
(declare-fun x555 () Bool)
(declare-fun x532 () Bool)
(declare-fun x470 () Bool)
(declare-fun x1960 () Int)
(declare-fun x1733 () x340)
(declare-fun x1974 () Int)
(declare-fun x1156 () Int)
(declare-fun x220 () Bool)
(declare-fun x1154 () Int)
(declare-fun x1158 () x340)
(declare-fun x1355 () Int)
(declare-fun x1765 () Int)
(declare-fun x55 () x340)
(declare-fun x183 () Bool)
(declare-fun x1810 () Bool)
(declare-fun x184 () Int)
(declare-fun x1729 () Bool)
(declare-fun x1965 () Bool)
(declare-fun x846 () Int)
(declare-fun x2001 () x340)
(declare-fun x1440 () Bool)
(declare-fun x253 () x340)
(declare-fun x931 () Int)
(declare-fun x1169 () Bool)
(declare-fun x110 () Int)
(declare-fun x957 () Int)
(declare-fun x1686 () Int)
(declare-fun x1945 () Bool)
(declare-fun x838 () Bool)
(declare-fun x967 () Int)
(declare-fun x1197 () Int)
(declare-fun x79 () Bool)
(declare-fun x1848 () Int)
(declare-fun x637 () Bool)
(declare-fun x622 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x389 () Bool)
(declare-fun x1220 () Int)
(declare-fun x993 () x340)
(declare-fun x1049 () Bool)
(declare-fun x327 () Int)
(declare-fun x1541 () Bool)
(declare-fun x38 () Bool)
(declare-fun x404 () Bool)
(declare-fun x908 () Int)
(declare-fun x1284 () Int)
(declare-fun x911 () Bool)
(declare-fun x863 () Bool)
(declare-fun x23 () Bool)
(declare-fun x513 () Bool)
(declare-fun x330 () Bool)
(declare-fun x683 () Bool)
(declare-fun x826 () Int)
(declare-fun x1343 () x340)
(declare-fun x706 () Bool)
(declare-fun x778 () Int)
(declare-fun x414 () Int)
(declare-fun x968 () Int)
(declare-fun x288 () Bool)
(declare-fun x194 () Int)
(declare-fun x1051 () Bool)
(declare-fun x84 () Bool)
(declare-fun x415 () Int)
(declare-fun x1755 () Int)
(declare-fun x847 () x340)
(declare-fun x952 () Int)
(declare-fun x1176 () Int)
(declare-fun x876 () Int)
(declare-fun x333 () x340)
(declare-fun x1266 () Bool)
(declare-fun x1844 () Int)
(declare-fun x12 () Bool)
(declare-fun x1708 () Int)
(declare-fun x1171 () Bool)
(declare-fun x1607 () Int)
(declare-fun x955 () Bool)
(declare-fun x1467 () Int)
(declare-fun x509 (x340) Int)
(declare-fun x1568 () Bool)
(declare-fun x937 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x2060 () Int)
(declare-fun x978 () Bool)
(declare-fun x577 (x340) Int)
(declare-fun x949 () Int)
(declare-fun x1089 () Int)
(declare-fun x2070 () Bool)
(declare-fun x1374 () Int)
(declare-fun x1217 () Bool)
(declare-fun x1595 () Bool)
(declare-fun x56 () Int)
(declare-fun x60 () Bool)
(declare-fun x2018 () Bool)
(declare-fun x1299 () Bool)
(declare-fun x422 (x340) Int)
(declare-fun x1079 () x340)
(declare-fun x1036 () Bool)
(declare-fun x226 () x340)
(declare-fun x1571 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x857 () Int)
(declare-fun x1407 () Int)
(declare-fun x169 () Int)
(declare-fun x507 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x897 () Int)
(declare-fun x261 () Bool)
(declare-fun x112 () Int)
(declare-fun x1240 () Int)
(declare-fun x1431 () Bool)
(declare-fun x953 () Int)
(declare-fun x7 () Bool)
(declare-fun x161 () Int)
(declare-fun x1984 () Bool)
(declare-fun x2016 () Bool)
(declare-fun x1556 () Int)
(declare-fun x1144 () Int)
(declare-fun x1661 () Bool)
(declare-fun x811 () x340)
(declare-fun x653 () Int)
(declare-fun x1846 () Bool)
(declare-fun x1759 () Bool)
(declare-fun x1044 () Int)
(declare-fun x1637 () Int)
(declare-fun x1293 () Int)
(declare-fun x1216 () Bool)
(declare-fun x1328 () Bool)
(declare-fun x1877 () Int)
(declare-fun x418 () Int)
(declare-fun x1426 () Bool)
(declare-fun x1131 () x340)
(declare-fun x1612 () Bool)
(declare-fun x211 () Int)
(declare-fun x1356 () Bool)
(declare-fun x2044 () Int)
(declare-fun x739 () Bool)
(declare-fun x1603 () Bool)
(declare-fun x877 () Bool)
(declare-fun x105 () Bool)
(declare-fun x905 () Bool)
(declare-fun x942 () Bool)
(declare-fun x1555 () Int)
(declare-fun x1055 () Bool)
(declare-fun x901 () Bool)
(declare-fun x979 () Int)
(declare-fun x592 () Bool)
(declare-fun x690 () Bool)
(declare-fun x250 () Bool)
(declare-fun x328 () Bool)
(declare-fun x1316 () Int)
(declare-fun x1336 () x340)
(declare-fun x265 () Bool)
(declare-fun x200 () Int)
(declare-fun x174 () Bool)
(declare-fun x251 () Bool)
(declare-fun x773 () Int)
(declare-fun x285 () Bool)
(declare-fun x1473 () Int)
(declare-fun x871 () Bool)
(declare-fun x1803 () Bool)
(declare-fun x1928 () x340)
(declare-fun x1075 () Int)
(declare-fun x1570 () Int)
(declare-fun x718 () Int)
(declare-fun x1585 () Bool)
(declare-fun x735 () Bool)
(declare-fun x529 () Bool)
(declare-fun x214 () Bool)
(declare-fun x1120 () Bool)
(declare-fun x419 () Int)
(declare-fun x692 () x340)
(declare-fun x1040 () Bool)
(declare-fun x141 () Bool)
(declare-fun x946 () Bool)
(declare-fun x257 () Int)
(declare-fun x1231 () Int)
(declare-fun x1996 () Bool)
(declare-fun x1018 () Int)
(declare-fun x928 () Bool)
(declare-fun x439 () Int)
(declare-fun x1836 () Int)
(declare-fun x909 () Int)
(declare-fun x1319 () Bool)
(declare-fun x155 () Int)
(declare-fun x299 () Bool)
(declare-fun x1084 () Int)
(declare-fun x37 () Bool)
(declare-fun x1923 () Int)
(declare-fun x4 () Bool)
(declare-fun x213 () Int)
(declare-fun x1673 () Int)
(declare-fun x676 () Int)
(declare-fun x845 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x20 () x340)
(declare-fun x1769 () Bool)
(declare-fun x1095 () Int)
(declare-fun x1890 () Bool)
(declare-fun x11 () Bool)
(declare-fun x9 () Int)
(declare-fun x1143 () Int)
(declare-fun x366 () Bool)
(declare-fun x1300 () Int)
(declare-fun x508 () Bool)
(declare-fun x819 () Int)
(declare-fun x435 () Int)
(declare-fun x294 () Bool)
(declare-fun x199 () Bool)
(declare-fun x147 () x340)
(declare-fun x1118 () Int)
(declare-fun x1719 () Int)
(declare-fun x612 () Bool)
(declare-fun x296 () Int)
(declare-fun x2028 () Bool)
(declare-fun x1956 () x340)
(declare-fun x291 () Int)
(declare-fun x694 () Int)
(declare-fun x1420 () Int)
(declare-fun x71 () Int)
(declare-fun x741 () Int)
(declare-fun x1779 () Bool)
(declare-fun x1867 () Bool)
(declare-fun x127 () Bool)
(declare-fun x1606 () Int)
(declare-fun x198 () Bool)
(declare-fun x278 () Bool)
(declare-fun x1756 () Bool)
(declare-fun x852 () Bool)
(declare-fun x588 () Int)
(declare-fun x935 () Bool)
(declare-fun x1838 () Bool)
(declare-fun x1619 () Int)
(declare-fun x1235 () Int)
(declare-fun x882 () Bool)
(declare-fun x1610 () Bool)
(declare-fun x173 () Bool)
(declare-fun x644 () Bool)
(declare-fun x247 () Bool)
(declare-fun x1662 () Bool)
(declare-fun x1456 () Bool)
(declare-fun x1392 () Int)
(declare-fun x215 () Bool)
(declare-fun x1761 () Int)
(declare-fun x654 () Bool)
(declare-fun x464 () Int)
(declare-fun x1261 () Int)
(declare-fun x62 () Bool)
(declare-fun x913 () Bool)
(declare-fun x598 () Bool)
(declare-fun x1465 () Bool)
(declare-fun x1487 () Bool)
(declare-fun x1885 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x320 () Bool)
(declare-fun x1414 () Bool)
(declare-fun x1862 () Bool)
(declare-fun x677 () Int)
(declare-fun x865 () Int)
(declare-fun x2015 () Int)
(declare-fun x1329 () Int)
(declare-fun x49 () Bool)
(declare-fun x605 () Bool)
(declare-fun x673 () Int)
(declare-fun x1737 () Int)
(declare-fun x1201 () Int)
(declare-fun x1949 () Int)
(declare-fun x1913 () Int)
(declare-fun x821 () Int)
(declare-fun x248 () Bool)
(declare-fun x1183 () Bool)
(declare-fun x1902 () Int)
(declare-fun x678 () Bool)
(declare-fun x1742 () Int)
(declare-fun x1446 () Int)
(declare-fun x1713 () x340)
(declare-fun x462 () Int)
(declare-fun x309 () Int)
(declare-fun x1859 () Int)
(declare-fun x207 () Bool)
(declare-fun x1255 () Bool)
(declare-fun x1020 () Int)
(declare-fun x369 () Int)
(declare-fun x1917 () Bool)
(declare-fun x122 () Bool)
(declare-fun x1957 () Bool)
(declare-fun x1505 () Int)
(declare-fun x1667 () Int)
(declare-fun x888 () Int)
(declare-fun x293 () Bool)
(declare-fun x779 () Int)
(declare-fun x840 () Int)
(declare-fun x1887 () Bool)
(declare-fun x996 () x340)
(declare-fun x1951 () Int)
(declare-fun x595 () x340)
(declare-fun x1605 () Bool)
(declare-fun x170 () Bool)
(declare-fun x1382 () Int)
(declare-fun x822 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x94 () x340)
(declare-fun x386 () Int)
(declare-fun x2089 () Bool)
(declare-fun x940 () Int)
(declare-fun x484 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x1494 () Int)
(declare-fun x1334 () Bool)
(declare-fun x280 () Int)
(declare-fun x810 () Bool)
(declare-fun x2072 () Bool)
(declare-fun x269 () Bool)
(declare-fun x355 () Bool)
(declare-fun x346 () Int)
(declare-fun x770 () Int)
(declare-fun x1921 () Bool)
(declare-fun x302 () Bool)
(declare-fun x791 () x340)
(declare-fun x1986 () Bool)
(declare-fun x1929 () x340)
(declare-fun x1726 () Bool)
(declare-fun x1082 () Int)
(declare-fun x1022 () x340)
(declare-fun x1005 () Bool)
(declare-fun x272 () x340)
(declare-fun x1408 () Int)
(declare-fun x638 () x340)
(declare-fun x883 () Bool)
(declare-fun x26 () Bool)
(declare-fun x1031 () Bool)
(declare-fun x689 (Int) x340)
(declare-fun x332 () Int)
(declare-fun x1976 () Bool)
(define-fun x218 ((x340 x340) (x311 Int)) x340 (ite ((_ is x192) x340) (x192 (x1811 x340) (+ x311 (x800 x340))) (ite ((_ is x1326) x340) (x1326 (x1631 x340) (x1728 x340) (+ (x2024 x340) x311)) (x1400 (+ (x1493 x340) x311)))))
(define-fun x2078 ((x1489 Int)) Int (ite (and (< x1489 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1489)) x1489 (- x1489 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1788 ((x1489 Int)) Int (ite (and (< x1489 0) (>= x1489 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489) x1489))
(define-fun x83 ((x1489 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489) (<= 0 x1489)) x1489 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1489) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x1489)) (- x1489 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1489) (< x1489 0)) (+ x1489 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1516 x1489 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x642 ((x835 Int)) Bool (and (< x835 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x835 0)))
(define-fun x941 ((x835 Int)) Bool (and (= (x1001 115792089237316195423570985008687907853269984665640564039457584007913129639935 x835) x835) (= (x1001 x835 115792089237316195423570985008687907853269984665640564039457584007913129639935) x835)))
(define-fun x899 ((x835 Int)) Bool (and (= (x1001 0 x835) 0) (= 0 (x1001 x835 0))))
(define-fun x1119 ((x835 Int)) Bool (= (x1001 x835 x835) x835))
(define-fun x1863 ((x835 Int)) Bool (and (x941 x835) (x1119 x835) (x899 x835)))
(define-fun x1952 ((x835 Int) (x1646 Int)) Bool (= (x1001 x1646 x835) (x1001 x835 x1646)))
(define-fun x1831 ((x835 Int) (x1646 Int)) Bool (and (<= 0 (x1001 x835 x1646)) (=> (>= x835 0) (>= x835 (x1001 x835 x1646))) (=> (<= 0 x1646) (>= x1646 (x1001 x835 x1646)))))
(define-fun x268 ((x835 Int) (x1646 Int)) Bool (and (x1952 x835 x1646) (x1831 x835 x1646)))
(define-fun x429 ((x835 Int)) Bool (= (x1001 x835 1461501637330902918203684832716283019655932542975) (x1516 x835 1461501637330902918203684832716283019655932542976)))
(define-fun x977 ((x835 Int)) Bool (and (x268 x835 1461501637330902918203684832716283019655932542975) (x429 x835)))
(define-fun x1464 ((x835 Int) (x1646 Int)) Bool (and (>= (x1516 x835 x1646) 0) (> x1646 (x1516 x835 x1646))))
(define-fun x631 ((x835 Int) (x1646 Int)) Bool (=> (and (>= x835 0) (< 0 x1646)) (= (< x835 x1646) (= (x1516 x835 x1646) x835))))
(define-fun x1238 ((x835 Int) (x1646 Int)) Bool (=> (and (and (<= x1646 x835) (> (+ x1646 x1646) x835)) (< 0 x1646)) (= (- x835 x1646) (x1516 x835 x1646))))
(define-fun x945 ((x835 Int)) Bool (= (x1516 0 x835) 0))
(define-fun x1562 ((x835 Int)) Bool (= (x1516 x835 1) 0))
(define-fun x1006 ((x835 Int)) Bool (= 0 (x1516 x835 x835)))
(define-fun x1786 ((x835 Int)) Bool (and (x1562 x835) (x945 x835) (x1006 x835)))
(define-fun x983 ((x835 Int) (x1646 Int)) Bool (=> (and (> x835 0) (> x1646 0)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x830 x835 x1646)) (= (x225 (x83 (x830 x835 x1646)) x835) x1646))))
(define-fun x301 ((x835 Int) (x1646 Int)) Bool (=> (and (not (= 0 x835)) (not (= 0 x1646))) (and (= x835 (x225 (x830 x835 x1646) x1646)) (= (x225 (x830 x835 x1646) x835) x1646))))
(define-fun x709 ((x835 Int) (x1646 Int)) Bool (=> (and (> x835 0) (< 0 x1646)) (= (> (x830 x835 x1646) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x1646 (x225 115792089237316195423570985008687907853269984665640564039457584007913129639935 x835)))))
(define-fun x1288 ((x835 Int) (x1646 Int)) Bool (and (= (x83 (x830 x835 x1646)) (x83 (x830 (- x835 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1646 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x83 (x830 (- x835 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1646)) (x83 (x830 x835 x1646))) (= (x83 (x830 x835 x1646)) (x83 (x830 x835 (- x1646 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(define-fun x157 ((x835 Int) (x1646 Int)) Bool (and (=> (and (and (<= x835 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x835)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1646) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1646))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1646) (x225 57896044618658097711785492504343953926634992332820282019728792003956564819968 x835)) (>= (x830 x835 (- x1646 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1646) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1646)) (and (> x835 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x835 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x835) (x225 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1646))) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x830 (- x835 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1646 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (<= x1646 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x1646)) (and (< 0 x835) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x835))) (= (<= x835 (x225 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1646)) (<= (x830 x835 x1646) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x835) (> x835 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (<= x1646 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x1646))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x830 (- x835 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1646)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x835) (x225 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1646))))))
(define-fun x771 ((x835 Int)) Bool (and (= 0 (x830 x835 0)) (= 0 (x830 0 x835))))
(define-fun x321 ((x835 Int)) Bool (and (= (x830 x835 1) x835) (= (x830 1 x835) x835)))
(define-fun x236 ((x835 Int)) Bool (and (x771 x835) (x321 x835)))
(define-fun x867 ((x835 Int)) Bool (= (x83 x835) (+ (x1001 x835 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1516 x835 32))))
(define-fun x1352 ((x835 Int)) Bool (and (x867 x835) (x268 x835 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x1835 ((x835 Int) (x1646 Int)) Bool (=> (and (> x1646 0) (> x835 0)) (and (<= (x225 x835 x1646) x835) (>= (x225 x835 x1646) 0))))
(define-fun x1888 ((x835 Int) (x1646 Int)) Bool (=> (and (and (< x835 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x835 0)) (and (<= 1 x1646) (< x1646 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x225 x835 x1646)) (>= (x225 x835 x1646) 0))))
(define-fun x823 ((x835 Int) (x1646 Int)) Bool (=> (and (> x1646 1) (< x1646 x835)) (> x835 (x225 x835 x1646))))
(define-fun x866 ((x835 Int) (x1646 Int)) Bool (=> (and (< 0 x835) (> x1646 0)) (= (> x1646 x835) (= 0 (x225 x835 x1646)))))
(define-fun x814 ((x835 Int)) Bool (= (x225 0 x835) 0))
(define-fun x1725 ((x835 Int)) Bool (= (x225 x835 1) x835))
(define-fun x659 ((x835 Int)) Bool (=> (not (= x835 0)) (= (x225 x835 x835) 1)))
(define-fun x1170 ((x835 Int)) Bool (and (x659 x835) (x1725 x835) (x814 x835)))
(define-fun x1509 ((x1504 Int)) Int (ite (> x572 x1504) (x120 x1504) 0))
(define-fun x1692 ((x1504 Int)) Int (x1085 x1504))
(define-fun x1613 ((x1504 Int)) Int (ite (= x1504 128) 61715998356568858511115630290676146828977781706927134410412890814919959642112 (x1802 x1504)))
(define-fun x861 ((x1504 Int)) Int (ite (= 132 x1504) x1127 (x1613 x1504)))
(define-fun x497 ((x1504 Int)) Int (ite (= x1504 164) 64 (x861 x1504)))
(define-fun x480 ((x1504 Int)) Int (ite (= x1504 196) x1800 (x497 x1504)))
(define-fun x1931 ((x1504 Int)) Int (ite (= 228 x1504) x1108 (x480 x1504)))
(define-fun x111 ((x1504 Int)) Int (ite x353 (x480 x1504) (x1931 x1504)))
(define-fun x89 ((x1504 Int)) Int (ite (= x1504 128) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1608 x1504)))
(define-fun x1046 ((x1504 Int)) Int (ite (= x1504 132) x686 (x89 x1504)))
(define-fun x1518 ((x1504 Int)) Int (ite (= x1504 164) x1160 (x1046 x1504)))
(define-fun x697 ((x1504 Int)) Int (ite (= 128 x1504) 1 (x1518 x1504)))
(define-fun x1760 ((x1504 Int)) Int (ite (= x1504 128) 1 (x1518 x1504)))
(define-fun x1213 ((x1504 Int)) Int (ite (= x1504 128) 1 (x1518 x1504)))
(define-fun x1406 ((x1504 Int)) Int (ite (= x1504 128) 1 (x1518 x1504)))
(define-fun x176 ((x1504 Int)) Int (ite (= x1504 128) 1 (x1518 x1504)))
(define-fun x716 ((x1504 Int)) Int (ite (= 128 x1504) 1 (x1518 x1504)))
(define-fun x1547 ((x1504 Int)) Int (ite (= 128 x1504) 1 (x1518 x1504)))
(define-fun x263 ((x1504 Int)) Int (ite x1972 (ite x295 (x1518 x1504) (x697 x1504)) (ite x783 (ite x1069 (x1518 x1504) (x1760 x1504)) (ite x2090 (ite x670 (x1518 x1504) (x1213 x1504)) (ite x1572 (ite x1384 (x1518 x1504) (x1406 x1504)) (ite x1507 (ite x1702 (x1518 x1504) (x176 x1504)) (ite x523 (ite x1440 (x1518 x1504) (x716 x1504)) (ite x1232 (x1518 x1504) (x1547 x1504)))))))))
(define-fun x1519 ((x1504 Int)) Int (ite (= x1504 x1630) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x263 x1504)))
(define-fun x774 ((x1504 Int)) Int (ite (= x2020 x1504) x686 (x1519 x1504)))
(define-fun x864 ((x1504 Int)) Int (ite (= x1068 x1504) x1848 (x774 x1504)))
(define-fun x1852 ((x1504 Int)) Int (ite (= x1504 x1630) 1 (x864 x1504)))
(define-fun x237 ((x1504 Int)) Int (ite (= x1504 x1630) 1 (x864 x1504)))
(define-fun x765 ((x1504 Int)) Int (ite (= x1630 x1504) 1 (x864 x1504)))
(define-fun x1689 ((x1504 Int)) Int (ite (= x1630 x1504) 1 (x864 x1504)))
(define-fun x707 ((x1504 Int)) Int (ite (= x1504 x1630) 1 (x864 x1504)))
(define-fun x115 ((x1504 Int)) Int (ite (= x1630 x1504) 1 (x864 x1504)))
(define-fun x1438 ((x1504 Int)) Int (ite (= x1630 x1504) 1 (x864 x1504)))
(define-fun x1627 ((x1504 Int)) Int (ite x804 (ite x736 (x864 x1504) (x1852 x1504)) (ite x1589 (ite x809 (x864 x1504) (x237 x1504)) (ite x611 (ite x484 (x864 x1504) (x765 x1504)) (ite x2022 (ite x355 (x864 x1504) (x1689 x1504)) (ite x900 (ite x1353 (x864 x1504) (x707 x1504)) (ite x104 (ite x545 (x864 x1504) (x115 x1504)) (ite x482 (x864 x1504) (x1438 x1504)))))))))
(define-fun x399 ((x1504 Int)) Int (ite (= x44 x1504) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1627 x1504)))
(define-fun x1843 ((x1504 Int)) Int (ite (= x22 x1504) x686 (x399 x1504)))
(define-fun x621 ((x1504 Int)) Int (ite (= x1504 x171) x1300 (x1843 x1504)))
(define-fun x1782 ((x1504 Int)) Int (ite (= x44 x1504) 1 (x621 x1504)))
(define-fun x564 ((x1504 Int)) Int (ite (= x44 x1504) 1 (x621 x1504)))
(define-fun x1187 ((x1504 Int)) Int (ite (= x1504 x44) 1 (x621 x1504)))
(define-fun x208 ((x1504 Int)) Int (ite (= x1504 x44) 1 (x621 x1504)))
(define-fun x2087 ((x1504 Int)) Int (ite (= x1504 x44) 1 (x621 x1504)))
(define-fun x48 ((x1504 Int)) Int (ite (= x1504 x44) 1 (x621 x1504)))
(define-fun x393 ((x1504 Int)) Int (ite (= x1504 x44) 1 (x621 x1504)))
(define-fun x1696 ((x1504 Int)) Int (ite x590 (ite x546 (x621 x1504) (x1782 x1504)) (ite x910 (ite x1409 (x621 x1504) (x564 x1504)) (ite x989 (ite x2016 (x621 x1504) (x1187 x1504)) (ite x801 (ite x350 (x621 x1504) (x208 x1504)) (ite x1379 (ite x687 (x621 x1504) (x2087 x1504)) (ite x607 (ite x1899 (x621 x1504) (x48 x1504)) (ite x2000 (x621 x1504) (x393 x1504)))))))))
(define-fun x1573 ((x1504 Int)) Int (ite (= x1504 x1148) x1522 (x1696 x1504)))
(define-fun x548 ((x1504 Int)) Int (ite (= x1504 x987) x124 (x1573 x1504)))
(define-fun x440 ((x1504 Int)) Int (ite (= x1504 x793) x1606 (x548 x1504)))
(define-fun x849 ((x1504 Int)) Int (ite (= x1790 x1504) x647 (x440 x1504)))
(define-fun x1515 ((x1504 Int)) Int (ite (= x1504 x1655) x428 (x849 x1504)))
(define-fun x1935 ((x1504 Int)) Int (ite (= x1504 x1893) x2056 (x1515 x1504)))
(define-fun x1544 ((x1504 Int)) Int (ite x1396 (x1515 x1504) (ite x1443 (x849 x1504) (ite x688 (x440 x1504) (ite x1907 (x548 x1504) (x1935 x1504))))))
(define-fun x1643 ((x1504 Int)) Int (ite (and (>= x1504 128) (> (+ 128 (ite (< x887 0) x887 0)) x1504)) (x1544 (+ x1148 (- x1504 128))) (x111 x1504)))
(define-fun x1458 ((x1504 Int)) Int (ite x98 (x111 x1504) (ite x148 (x1643 x1504) (x111 x1504))))
(define-fun x915 ((x1504 Int)) Int (ite (= 128 x1504) x1508 (x1458 x1504)))
(define-fun x797 ((x1504 Int)) Int (ite (and (<= 0 x1504) (< x1504 (+ 0 x887))) (x1544 (+ x1148 (- x1504 0))) (x693 x1504)))
(define-fun x1773 ((x1504 Int)) Int (ite x98 (x693 x1504) (ite x148 (x797 x1504) (x693 x1504))))
(define-fun x1132 ((x1504 Int)) Int (ite (and (< x1504 (+ 160 x1508)) (>= x1504 160)) (x1773 (+ 0 (- x1504 160))) (x915 x1504)))
(define-fun x1524 ((x1504 Int)) Int (ite (= x1796 x1504) x1857 (x1132 x1504)))
(define-fun x1244 ((x1504 Int)) Int (ite (= x1570 x1504) x1417 (x1524 x1504)))
(define-fun x1705 ((x1504 Int)) Int (ite x644 (x1524 x1504) (x1244 x1504)))
(define-fun x402 ((x1504 Int)) Int (ite (= x1504 x623) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1705 x1504)))
(define-fun x1671 ((x1504 Int)) Int (ite (= x1504 x962) x663 (x402 x1504)))
(define-fun x166 ((x1504 Int)) Int (ite (= x1504 x1023) x1640 (x1671 x1504)))
(define-fun x202 ((x1504 Int)) Int (ite (= x1504 0) x134 (x166 x1504)))
(define-fun x1860 ((x1504 Int)) Int (ite (= 0 x1504) x704 (x166 x1504)))
(define-fun x2009 ((x1504 Int)) Int (ite (= 0 x1504) x118 (x166 x1504)))
(define-fun x1845 ((x1504 Int)) Int (ite (= 0 x1504) x468 (x166 x1504)))
(define-fun x319 ((x1504 Int)) Int (ite (= x1504 0) x1488 (x166 x1504)))
(define-fun x1477 ((x1504 Int)) Int (ite (= 0 x1504) x270 (x166 x1504)))
(define-fun x1616 ((x1504 Int)) Int (ite (= x1504 0) x3 (x166 x1504)))
(define-fun x1675 ((x1504 Int)) Int (ite x1282 (ite x1825 (x166 x1504) (x202 x1504)) (ite x1169 (ite x229 (x166 x1504) (x1860 x1504)) (ite x337 (ite x2047 (x166 x1504) (x2009 x1504)) (ite x1021 (ite x1471 (x166 x1504) (x1845 x1504)) (ite x265 (ite x1999 (x166 x1504) (x319 x1504)) (ite x1254 (ite x1319 (x166 x1504) (x1477 x1504)) (ite x1180 (x166 x1504) (x1616 x1504)))))))))
(define-fun x855 ((x1504 Int)) Int (ite (= 0 x1504) 1 (x75 x1504)))
(define-fun x1720 ((x1504 Int)) Int (ite x1825 (x75 x1504) (x855 x1504)))
(define-fun x1453 ((x1504 Int)) Int (ite (= 0 x1504) 1 (x75 x1504)))
(define-fun x1393 ((x1504 Int)) Int (ite x229 (x75 x1504) (x1453 x1504)))
(define-fun x461 ((x1504 Int)) Int (ite (= x1504 0) 1 (x75 x1504)))
(define-fun x708 ((x1504 Int)) Int (ite x2047 (x75 x1504) (x461 x1504)))
(define-fun x1495 ((x1504 Int)) Int (ite (= 0 x1504) 1 (x75 x1504)))
(define-fun x2003 ((x1504 Int)) Int (ite x1471 (x75 x1504) (x1495 x1504)))
(define-fun x180 ((x1504 Int)) Int (ite (= 0 x1504) 1 (x75 x1504)))
(define-fun x1898 ((x1504 Int)) Int (ite x1999 (x75 x1504) (x180 x1504)))
(define-fun x925 ((x1504 Int)) Int (ite (= 0 x1504) 1 (x75 x1504)))
(define-fun x1152 ((x1504 Int)) Int (ite x1319 (x75 x1504) (x925 x1504)))
(define-fun x1360 ((x1504 Int)) Int (ite (= 0 x1504) 1 (x75 x1504)))
(define-fun x397 ((x1504 Int)) Int (ite x1180 (x75 x1504) (x1360 x1504)))
(define-fun x1116 ((x1504 Int)) Int (ite x1282 (x1720 x1504) (ite x1169 (x1393 x1504) (ite x337 (x708 x1504) (ite x1021 (x2003 x1504) (ite x265 (x1898 x1504) (ite x1254 (x1152 x1504) (x397 x1504))))))))
(define-fun x1787 ((x1504 Int)) Int (ite (and (>= x1504 0) (> (+ x1044 0) x1504)) (x1116 (+ (- x1504 0) 0)) (x1675 x1504)))
(define-fun x1347 ((x1504 Int)) Int (ite x1136 (x1705 x1504) (ite x2049 (x1675 x1504) (x1787 x1504))))
(define-fun x1807 ((x1504 x340)) Int (x1511 x1504))
(define-fun x1348 ((x1504 x340)) Int (x505 x1504))
(define-fun x1943 ((x1504 x340)) Int (x919 x1504))
(define-fun x1053 ((x1504 x340)) Int (x509 x1504))
(define-fun x1161 ((x1504 Int)) Int (ite (and (> (+ 100 (x1788 (- x108 100))) x1504) (<= 100 x1504)) (x111 (+ (- x1504 100) 228)) (x1509 x1504)))
(define-fun x634 ((x1504 x340)) Int (ite (= x380 x1504) x1134 (x276 x1504)))
(define-fun x1990 ((x1504 x340)) Int (ite (= x791 x1504) x1088 (x308 x1504)))
(define-fun x844 ((x1504 x340)) Int (ite (= x947 x1504) x1451 (x1990 x1504)))
(define-fun x1341 ((x1504 Int)) Int (ite (= x1504 0) 1 (x1260 x1504)))
(define-fun x2004 ((x1504 x340)) Int (ite (= x1504 x511) x204 (x282 x1504)))
(define-fun x1806 ((x1504 x340)) Int (ite (= x1504 x993) x1563 (x2004 x1504)))
(define-fun x959 ((x1504 Int)) Int (ite (= 0 x1504) 1 (x1260 x1504)))
(define-fun x2023 ((x1504 x340)) Int (ite (= x1504 x1534) x405 (x191 x1504)))
(define-fun x455 ((x1504 x340)) Int (ite (= x1504 x277) x1739 (x2023 x1504)))
(define-fun x31 ((x1504 Int)) Int (ite (= 0 x1504) 1 (x1260 x1504)))
(define-fun x873 ((x1504 x340)) Int (ite (= x102 x1504) x503 (x1298 x1504)))
(define-fun x934 ((x1504 x340)) Int (ite (= x1257 x1504) x2015 (x873 x1504)))
(define-fun x1028 ((x1504 Int)) Int (ite (= x1504 0) 1 (x1260 x1504)))
(define-fun x30 ((x1504 x340)) Int (ite (= x1504 x1230) x1351 (x422 x1504)))
(define-fun x310 ((x1504 x340)) Int (ite (= x1504 x272) x441 (x30 x1504)))
(define-fun x610 ((x1504 Int)) Int (ite (= x1504 0) 1 (x1260 x1504)))
(define-fun x150 ((x1504 x340)) Int (ite (= x1504 x245) x71 (x577 x1504)))
(define-fun x312 ((x1504 x340)) Int (ite (= x719 x1504) x738 (x150 x1504)))
(define-fun x725 ((x1504 Int)) Int (ite (= 0 x1504) 1 (x1260 x1504)))
(define-fun x1767 ((x1504 x340)) Int (ite (= x1504 x1157) x1080 (x1946 x1504)))
(define-fun x896 ((x1504 x340)) Int (ite (= x1504 x1564) x677 (x1767 x1504)))
(define-fun x1485 ((x1504 Int)) Int (ite (= 0 x1504) 1 (x1260 x1504)))
(define-fun x1679 ((x1504 x340)) Int (ite x2063 (x1990 x1504) (ite x539 (x308 x1504) (ite x895 (x308 x1504) (ite x1083 (x308 x1504) (ite x183 (x1990 x1504) (x308 x1504)))))))
(define-fun x1138 ((x1504 x340)) Int (ite x1972 (ite x295 (x1679 x1504) (x844 x1504)) (x308 x1504)))
(define-fun x13 ((x1504 x340)) Int (ite (= x1504 x1623) x1494 (x1138 x1504)))
(define-fun x681 ((x1504 x340)) Int (ite x517 (x13 x1504) (ite x985 (x1138 x1504) (ite x943 (x1138 x1504) (ite x1309 (x1138 x1504) (ite x1939 (x13 x1504) (x1138 x1504)))))))
(define-fun x922 ((x1504 x340)) Int (ite (= x806 x1504) x784 (x13 x1504)))
(define-fun x1123 ((x1504 x340)) Int (ite x804 (ite x736 (x681 x1504) (x922 x1504)) (x1138 x1504)))
(define-fun x1403 ((x1504 x340)) Int (ite (= x1504 x400) x1199 (x1123 x1504)))
(define-fun x1004 ((x1504 x340)) Int (ite x1709 (x1403 x1504) (ite x35 (x1123 x1504) (ite x1869 (x1123 x1504) (ite x768 (x1123 x1504) (ite x1813 (x1403 x1504) (x1123 x1504)))))))
(define-fun x63 ((x1504 x340)) Int (ite (= x834 x1504) x1430 (x1403 x1504)))
(define-fun x1034 ((x1504 x340)) Int (ite x546 (x1004 x1504) (x63 x1504)))
(define-fun x1968 ((x1504 x340)) Int (ite x98 (x308 x1504) (ite x148 (ite x590 (x1034 x1504) (x1123 x1504)) (x308 x1504))))
(define-fun x58 ((x1504 x340)) Int (ite (= x1504 x750) x1949 (x1968 x1504)))
(define-fun x1410 ((x1504 x340)) Int (ite x450 (x2004 x1504) (ite x1707 (x282 x1504) (ite x735 (x282 x1504) (ite x635 (x282 x1504) (ite x1722 (x2004 x1504) (x282 x1504)))))))
(define-fun x80 ((x1504 x340)) Int (ite x1972 (x282 x1504) (ite x783 (ite x1069 (x1410 x1504) (x1806 x1504)) (x282 x1504))))
(define-fun x426 ((x1504 x340)) Int (ite (= x1504 x1208) x1922 (x80 x1504)))
(define-fun x1277 ((x1504 x340)) Int (ite x752 (x426 x1504) (ite x552 (x80 x1504) (ite x2089 (x80 x1504) (ite x1040 (x80 x1504) (ite x165 (x426 x1504) (x80 x1504)))))))
(define-fun x2058 ((x1504 x340)) Int (ite (= x1504 x524) x1418 (x426 x1504)))
(define-fun x1411 ((x1504 x340)) Int (ite x804 (x80 x1504) (ite x1589 (ite x809 (x1277 x1504) (x2058 x1504)) (x80 x1504))))
(define-fun x820 ((x1504 x340)) Int (ite (= x1504 x253) x633 (x1411 x1504)))
(define-fun x2025 ((x1504 x340)) Int (ite x1812 (x820 x1504) (ite x128 (x1411 x1504) (ite x780 (x1411 x1504) (ite x1973 (x1411 x1504) (ite x160 (x820 x1504) (x1411 x1504)))))))
(define-fun x1189 ((x1504 x340)) Int (ite (= x1504 x97) x161 (x820 x1504)))
(define-fun x1865 ((x1504 x340)) Int (ite x1409 (x2025 x1504) (x1189 x1504)))
(define-fun x1461 ((x1504 x340)) Int (ite x98 (x282 x1504) (ite x148 (ite x590 (x1411 x1504) (ite x910 (x1865 x1504) (x1411 x1504))) (x282 x1504))))
(define-fun x1368 ((x1504 x340)) Int (ite (= x1158 x1504) x940 (x1461 x1504)))
(define-fun x1645 ((x1504 x340)) Int (ite x499 (x2023 x1504) (ite x141 (x191 x1504) (ite x622 (x191 x1504) (ite x1479 (x191 x1504) (ite x763 (x2023 x1504) (x191 x1504)))))))
(define-fun x890 ((x1504 x340)) Int (ite x1972 (x191 x1504) (ite x783 (x191 x1504) (ite x2090 (ite x670 (x1645 x1504) (x455 x1504)) (x191 x1504)))))
(define-fun x1588 ((x1504 x340)) Int (ite (= x1504 x1343) x369 (x890 x1504)))
(define-fun x1448 ((x1504 x340)) Int (ite x279 (x1588 x1504) (ite x212 (x890 x1504) (ite x471 (x890 x1504) (ite x1498 (x890 x1504) (ite x1450 (x1588 x1504) (x890 x1504)))))))
(define-fun x1543 ((x1504 x340)) Int (ite (= x1504 x168) x1634 (x1588 x1504)))
(define-fun x506 ((x1504 x340)) Int (ite x804 (x890 x1504) (ite x1589 (x890 x1504) (ite x611 (ite x484 (x1448 x1504) (x1543 x1504)) (x890 x1504)))))
(define-fun x557 ((x1504 x340)) Int (ite (= x1079 x1504) x1276 (x506 x1504)))
(define-fun x430 ((x1504 x340)) Int (ite x1357 (x557 x1504) (ite x1669 (x506 x1504) (ite x787 (x506 x1504) (ite x285 (x506 x1504) (ite x1274 (x557 x1504) (x506 x1504)))))))
(define-fun x1918 ((x1504 x340)) Int (ite (= x324 x1504) x1285 (x557 x1504)))
(define-fun x1560 ((x1504 x340)) Int (ite x2016 (x430 x1504) (x1918 x1504)))
(define-fun x1827 ((x1504 x340)) Int (ite x98 (x191 x1504) (ite x148 (ite x590 (x506 x1504) (ite x910 (x506 x1504) (ite x989 (x1560 x1504) (x506 x1504)))) (x191 x1504))))
(define-fun x1323 ((x1504 x340)) Int (ite (= x1504 x394) x2045 (x1827 x1504)))
(define-fun x1997 ((x1504 x340)) Int (ite x12 (x873 x1504) (ite x379 (x1298 x1504) (ite x598 (x1298 x1504) (ite x1247 (x1298 x1504) (ite x401 (x873 x1504) (x1298 x1504)))))))
(define-fun x1731 ((x1504 x340)) Int (ite x1972 (x1298 x1504) (ite x783 (x1298 x1504) (ite x2090 (x1298 x1504) (ite x1572 (ite x1384 (x1997 x1504) (x934 x1504)) (x1298 x1504))))))
(define-fun x1236 ((x1504 x340)) Int (ite (= x1504 x144) x1398 (x1731 x1504)))
(define-fun x82 ((x1504 x340)) Int (ite x1070 (x1236 x1504) (ite x1317 (x1731 x1504) (ite x1809 (x1731 x1504) (ite x868 (x1731 x1504) (ite x459 (x1236 x1504) (x1731 x1504)))))))
(define-fun x1463 ((x1504 x340)) Int (ite (= x1032 x1504) x1526 (x1236 x1504)))
(define-fun x77 ((x1504 x340)) Int (ite x804 (x1731 x1504) (ite x1589 (x1731 x1504) (ite x611 (x1731 x1504) (ite x2022 (ite x355 (x82 x1504) (x1463 x1504)) (x1731 x1504))))))
(define-fun x1690 ((x1504 x340)) Int (ite (= x1195 x1504) x1164 (x77 x1504)))
(define-fun x74 ((x1504 x340)) Int (ite x1362 (x1690 x1504) (ite x1380 (x77 x1504) (ite x1193 (x77 x1504) (ite x1078 (x77 x1504) (ite x1373 (x1690 x1504) (x77 x1504)))))))
(define-fun x238 ((x1504 x340)) Int (ite (= x996 x1504) x1641 (x1690 x1504)))
(define-fun x859 ((x1504 x340)) Int (ite x350 (x74 x1504) (x238 x1504)))
(define-fun x1427 ((x1504 x340)) Int (ite x98 (x1298 x1504) (ite x148 (ite x590 (x77 x1504) (ite x910 (x77 x1504) (ite x989 (x77 x1504) (ite x801 (x859 x1504) (x77 x1504))))) (x1298 x1504))))
(define-fun x421 ((x1504 x340)) Int (ite (= x1163 x1504) x1143 (x1427 x1504)))
(define-fun x695 ((x1504 x340)) Int (ite x1372 (x30 x1504) (ite x2031 (x422 x1504) (ite x1595 (x422 x1504) (ite x431 (x422 x1504) (ite x816 (x30 x1504) (x422 x1504)))))))
(define-fun x1941 ((x1504 x340)) Int (ite x1972 (x422 x1504) (ite x783 (x422 x1504) (ite x2090 (x422 x1504) (ite x1572 (x422 x1504) (ite x1507 (ite x1702 (x695 x1504) (x310 x1504)) (x422 x1504)))))))
(define-fun x28 ((x1504 x340)) Int (ite (= x847 x1504) x2011 (x1941 x1504)))
(define-fun x815 ((x1504 x340)) Int (ite x1449 (x28 x1504) (ite x1756 (x1941 x1504) (ite x290 (x1941 x1504) (ite x1251 (x1941 x1504) (ite x131 (x28 x1504) (x1941 x1504)))))))
(define-fun x1682 ((x1504 x340)) Int (ite (= x1141 x1504) x490 (x28 x1504)))
(define-fun x64 ((x1504 x340)) Int (ite x804 (x1941 x1504) (ite x1589 (x1941 x1504) (ite x611 (x1941 x1504) (ite x2022 (x1941 x1504) (ite x900 (ite x1353 (x815 x1504) (x1682 x1504)) (x1941 x1504)))))))
(define-fun x884 ((x1504 x340)) Int (ite (= x1504 x20) x1747 (x64 x1504)))
(define-fun x1528 ((x1504 x340)) Int (ite x683 (x884 x1504) (ite x1864 (x64 x1504) (ite x998 (x64 x1504) (ite x199 (x64 x1504) (ite x1550 (x884 x1504) (x64 x1504)))))))
(define-fun x390 ((x1504 x340)) Int (ite (= x1504 x226) x2060 (x884 x1504)))
(define-fun x101 ((x1504 x340)) Int (ite x687 (x1528 x1504) (x390 x1504)))
(define-fun x1377 ((x1504 x340)) Int (ite x98 (x422 x1504) (ite x148 (ite x590 (x64 x1504) (ite x910 (x64 x1504) (ite x989 (x64 x1504) (ite x801 (x64 x1504) (ite x1379 (x101 x1504) (x64 x1504)))))) (x422 x1504))))
(define-fun x994 ((x1504 x340)) Int (ite (= x1504 x59) x839 (x1377 x1504)))
(define-fun x437 ((x1504 x340)) Int (ite x2042 (x150 x1504) (ite x1953 (x577 x1504) (ite x1945 (x577 x1504) (ite x458 (x577 x1504) (ite x570 (x150 x1504) (x577 x1504)))))))
(define-fun x1375 ((x1504 x340)) Int (ite x1972 (x577 x1504) (ite x783 (x577 x1504) (ite x2090 (x577 x1504) (ite x1572 (x577 x1504) (ite x1507 (x577 x1504) (ite x523 (ite x1440 (x437 x1504) (x312 x1504)) (x577 x1504))))))))
(define-fun x1590 ((x1504 x340)) Int (ite (= x1504 x377) x1553 (x1375 x1504)))
(define-fun x825 ((x1504 x340)) Int (ite x412 (x1590 x1504) (ite x1014 (x1375 x1504) (ite x856 (x1375 x1504) (ite x1304 (x1375 x1504) (ite x843 (x1590 x1504) (x1375 x1504)))))))
(define-fun x1376 ((x1504 x340)) Int (ite (= x1934 x1504) x1129 (x1590 x1504)))
(define-fun x1933 ((x1504 x340)) Int (ite x804 (x1375 x1504) (ite x1589 (x1375 x1504) (ite x611 (x1375 x1504) (ite x2022 (x1375 x1504) (ite x900 (x1375 x1504) (ite x104 (ite x545 (x825 x1504) (x1376 x1504)) (x1375 x1504))))))))
(define-fun x579 ((x1504 x340)) Int (ite (= x1504 x1045) x1381 (x1933 x1504)))
(define-fun x360 ((x1504 x340)) Int (ite x1793 (x579 x1504) (ite x1218 (x1933 x1504) (ite x883 (x1933 x1504) (ite x1661 (x1933 x1504) (ite x1009 (x579 x1504) (x1933 x1504)))))))
(define-fun x879 ((x1504 x340)) Int (ite (= x1504 x367) x902 (x579 x1504)))
(define-fun x574 ((x1504 x340)) Int (ite x1899 (x360 x1504) (x879 x1504)))
(define-fun x1413 ((x1504 x340)) Int (ite x98 (x577 x1504) (ite x148 (ite x590 (x1933 x1504) (ite x910 (x1933 x1504) (ite x989 (x1933 x1504) (ite x801 (x1933 x1504) (ite x1379 (x1933 x1504) (ite x607 (x574 x1504) (x1933 x1504))))))) (x577 x1504))))
(define-fun x1050 ((x1504 x340)) Int (ite (= x927 x1504) x1942 (x1413 x1504)))
(define-fun x1617 ((x1504 x340)) Int (ite x1253 (x1767 x1504) (ite x374 (x1946 x1504) (ite x1757 (x1946 x1504) (ite x1652 (x1946 x1504) (ite x1483 (x1767 x1504) (x1946 x1504)))))))
(define-fun x1071 ((x1504 x340)) Int (ite x1972 (x1946 x1504) (ite x783 (x1946 x1504) (ite x2090 (x1946 x1504) (ite x1572 (x1946 x1504) (ite x1507 (x1946 x1504) (ite x523 (x1946 x1504) (ite x1232 (x1617 x1504) (x896 x1504)))))))))
(define-fun x1033 ((x1504 x340)) Int (ite (= x1504 x413) x2059 (x1071 x1504)))
(define-fun x1559 ((x1504 x340)) Int (ite x127 (x1033 x1504) (ite x137 (x1071 x1504) (ite x2068 (x1071 x1504) (ite x690 (x1071 x1504) (ite x138 (x1033 x1504) (x1071 x1504)))))))
(define-fun x443 ((x1504 x340)) Int (ite (= x1133 x1504) x1778 (x1033 x1504)))
(define-fun x1681 ((x1504 x340)) Int (ite x804 (x1071 x1504) (ite x1589 (x1071 x1504) (ite x611 (x1071 x1504) (ite x2022 (x1071 x1504) (ite x900 (x1071 x1504) (ite x104 (x1071 x1504) (ite x482 (x1559 x1504) (x443 x1504)))))))))
(define-fun x1112 ((x1504 x340)) Int (ite (= x281 x1504) x1910 (x1681 x1504)))
(define-fun x381 ((x1504 x340)) Int (ite x2075 (x1112 x1504) (ite x1221 (x1681 x1504) (ite x416 (x1681 x1504) (ite x1612 (x1681 x1504) (ite x1769 (x1112 x1504) (x1681 x1504)))))))
(define-fun x1436 ((x1504 x340)) Int (ite (= x1504 x365) x818 (x1112 x1504)))
(define-fun x950 ((x1504 x340)) Int (ite x2000 (x381 x1504) (x1436 x1504)))
(define-fun x1880 ((x1504 x340)) Int (ite x98 (x1946 x1504) (ite x148 (ite x590 (x1681 x1504) (ite x910 (x1681 x1504) (ite x989 (x1681 x1504) (ite x801 (x1681 x1504) (ite x1379 (x1681 x1504) (ite x607 (x1681 x1504) (x950 x1504))))))) (x1946 x1504))))
(define-fun x2054 ((x1504 x340)) Int (ite (= x1504 x72) x1998 (x1880 x1504)))
(define-fun x2052 ((x1504 x340)) Int (ite (= x410 x1504) x479 (x634 x1504)))
(define-fun x502 ((x1504 Int)) Int (ite (= 0 x1504) 1 (x776 x1504)))
(define-fun x2005 ((x1504 Int)) Int (ite (= x1504 0) 1 (x776 x1504)))
(define-fun x1013 ((x1504 Int)) Int (ite (= x1504 0) 1 (x776 x1504)))
(define-fun x1706 ((x1504 Int)) Int (ite (= 0 x1504) 1 (x776 x1504)))
(define-fun x336 ((x1504 Int)) Int (ite (= 0 x1504) 1 (x776 x1504)))
(define-fun x1625 ((x1504 Int)) Int (ite (= 0 x1504) 1 (x776 x1504)))
(define-fun x1321 ((x1504 Int)) Int (ite (= 0 x1504) 1 (x776 x1504)))
(define-fun x69 ((x1504 x340)) Int (ite (= x1504 x1956) x880 (x2052 x1504)))
(define-fun x1746 ((x1504 Int)) Int (ite (= 0 x1504) 1 (x438 x1504)))
(define-fun x2062 ((x1504 Int)) Int (ite (= x1504 0) 1 (x438 x1504)))
(define-fun x411 ((x1504 Int)) Int (ite (= x1504 0) 1 (x438 x1504)))
(define-fun x561 ((x1504 Int)) Int (ite (= 0 x1504) 1 (x438 x1504)))
(define-fun x1525 ((x1504 Int)) Int (ite (= x1504 0) 1 (x438 x1504)))
(define-fun x1175 ((x1504 Int)) Int (ite (= x1504 0) 1 (x438 x1504)))
(define-fun x315 ((x1504 Int)) Int (ite (= x1504 0) 1 (x438 x1504)))
(define-fun x885 ((x1504 Int)) Int (ite (= x481 x1504) x833 (x475 x1504)))
(define-fun x726 ((x1504 Int)) Int (ite (= x1901 x1504) x391 (x1314 x1504)))
(define-fun x477 ((x1504 Int)) Int (ite (= x1504 x1473) x824 (x726 x1504)))
(define-fun x756 ((x1504 Int)) Int (ite x1145 (x1314 x1504) (ite x100 (x726 x1504) (x477 x1504))))
(define-fun x1241 ((x1504 Int)) Int (ite x736 (x776 x1504) (x502 x1504)))
(define-fun x34 ((x1504 Int)) Int (ite x809 (x776 x1504) (x2005 x1504)))
(define-fun x210 ((x1504 Int)) Int (ite x484 (x776 x1504) (x1013 x1504)))
(define-fun x1971 ((x1504 Int)) Int (ite x355 (x776 x1504) (x1706 x1504)))
(define-fun x2030 ((x1504 Int)) Int (ite x1353 (x776 x1504) (x336 x1504)))
(define-fun x73 ((x1504 Int)) Int (ite x545 (x776 x1504) (x1625 x1504)))
(define-fun x1915 ((x1504 Int)) Int (ite x482 (x776 x1504) (x1321 x1504)))
(define-fun x597 ((x1504 Int)) Int (ite x804 (x1241 x1504) (ite x1589 (x34 x1504) (ite x611 (x210 x1504) (ite x2022 (x1971 x1504) (ite x900 (x2030 x1504) (ite x104 (x73 x1504) (x1915 x1504))))))))
(define-fun x540 ((x1504 Int)) Int (ite x546 (x438 x1504) (x1746 x1504)))
(define-fun x1924 ((x1504 Int)) Int (ite x1409 (x438 x1504) (x2062 x1504)))
(define-fun x1111 ((x1504 Int)) Int (ite x2016 (x438 x1504) (x411 x1504)))
(define-fun x705 ((x1504 Int)) Int (ite x350 (x438 x1504) (x561 x1504)))
(define-fun x1829 ((x1504 Int)) Int (ite x687 (x438 x1504) (x1525 x1504)))
(define-fun x544 ((x1504 Int)) Int (ite x1899 (x438 x1504) (x1175 x1504)))
(define-fun x1932 ((x1504 Int)) Int (ite x2000 (x438 x1504) (x315 x1504)))
(define-fun x1896 ((x1504 Int)) Int (ite x590 (x540 x1504) (ite x910 (x1924 x1504) (ite x989 (x1111 x1504) (ite x801 (x705 x1504) (ite x1379 (x1829 x1504) (ite x607 (x544 x1504) (x1932 x1504))))))))
(define-fun x606 ((x835 Int)) Bool (=> (and (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x835)) (not (= 2514000705 x835)) (< 10000 x835) (not (= x835 1083311676)) (not (= 2835717307 x835)) (not (= 3065339685 x835)) (not (= x835 61715998356568858511115630290676146828977781706927134410412890814919959642112)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x835)) (not (= 1173398607 x835)) (not (= x835 893399075)) (not (= 1762712782 x835)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x835)) (not (= x835 2678909723)) (not (= 3645313523 x835)) (not (= x835 1461501637330902918203684832716283019655932542975)) (not (= x835 18446744073709551615)) (not (= 1889567281 x835)) (not (= x835 3714247998)) (not (= 1086394137 x835)) (not (= x835 2569309863)) (not (= 2289173607 x835)) (not (= 1195755010 x835)) (not (= x835 2952933380)) (not (= x835 2376452955)) (not (= 3703996404 x835)) (not (= x835 826074471))) (not ((_ is x1400) (x689 x835)))))
(assert (x606 x997))
(assert (= (and x1091 (not x1297)) x334))
(assert (= x1414 (and x871 (not x1858))))
(assert (= (and x1165 x460) x2073))
(assert (= x2065 (and x1596 x1266)))
(assert (= x1372 (and x323 x493)))
(assert (x642 x233))
(assert (= (and x1890 x715) x1168))
(assert (= x1498 (and x1533 x1699)))
(assert (x642 x2038))
(assert (= x1793 (and x84 x1545)))
(assert (= (x1497 (x1400 3703996404)) 3703996404))
(assert (x642 x1482))
(assert (x642 x663))
(assert (x642 x363))
(assert (= (x1497 (x689 x559)) x559))
(assert (= x60 (and (not x323) x493)))
(assert (= x229 (or x1598 (and x1819 (not x47)) (and x1986 x1104) (and x1086 x1250) x1492 (and x1672 x1307))))
(assert (= (and (not x538) x247) x662))
(assert (= (and x2073 (not x563)) x1424))
(assert (x1786 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x642 x1592))
(assert (= x1182 (and x600 x54)))
(assert (x606 x466))
(assert (x642 x1765))
(assert (= (x1497 (x218 x790 1)) (+ (x1497 x790) 1)))
(assert (x642 x1736))
(assert (x642 x1514))
(assert (x642 x1663))
(assert (= (or x1136 x220) x345))
(assert (x642 x1446))
(assert (= (and x366 x121) x924))
(assert (= x592 (and (not x1203) x537)))
(assert (= (and x182 (not x1549)) x396))
(assert (x642 x428))
(assert (= x1471 (or (and x1976 x139) (and x1632 x558) x1605 (and (not x1571) x1120) (and x1987 x684) x1688)))
(assert (=> (<= x1098 10000) (= (x1400 x1098) (x689 x1098))))
(assert (= (and (not x1823) x188) x1763))
(assert (= x1702 (or x816 x1595 x431 x1096 x1372 x2031)))
(assert (= (x689 2835717307) (x1400 2835717307)))
(assert (x642 x1861))
(assert (x642 x1154))
(assert (= x730 (and x1851 x318)))
(assert (x642 x373))
(assert (= (and x813 x1873) x293))
(assert (x642 x2076))
(assert (x642 x865))
(assert (x642 x473))
(assert (x642 x1960))
(assert (x642 x1294))
(assert (x642 x197))
(assert (= (and x986 x712) x1450))
(assert (x642 x149))
(assert (= (x1497 (x689 x1753)) x1753))
(assert (x1352 x1678))
(assert (x606 x666))
(assert (x642 x512))
(assert (x642 x979))
(assert (= x307 (or x1589 x900 x611 x804 x2022 x1248 x104)))
(assert (x642 x1727))
(assert (=> (>= 10000 x338) (= (x689 x338) (x1400 x338))))
(assert (= (=> (and (= x219 x1826) (= x1044 x1748)) x656) x632))
(assert (x642 x181))
(assert (x642 x1245))
(assert (and (x301 32 x833) (x983 32 x833) (x157 32 x833) (and (= (* 32 (- x833 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x830 32 (- x833 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x830 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x833) (- (* 32 x833) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x833))) (= (x830 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x833 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x833 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x833 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* 32 x833) (x830 32 x833)) (x1288 32 x833) (x709 32 x833)))
(assert (x642 x676))
(assert (x642 x262))
(assert (x642 x1508))
(assert (x642 x1624))
(assert (= x1178 (x1497 (x689 x1178))))
(assert (= x1328 (and x478 (not x70))))
(assert (= (x689 1086394137) (x1400 1086394137)))
(assert (= (and x2081 x1984) x1049))
(assert (x606 x1444))
(assert (x642 x1292))
(assert (x642 x179))
(assert (x642 x625))
(assert (x642 x571))
(assert (= (and x584 x1168) x635))
(assert (= (x1314 x1698) 0))
(assert (= x1586 x1577))
(assert (x642 x227))
(assert (= (or x1939 x517 x985 x1309 x943 x1878) x736))
(assert (x642 x1902))
(assert (x642 x2))
(assert (= (and x1402 x408) x1546))
(assert (= (and x1986 (not x1104)) x2019))
(assert (x642 x1656))
(assert (= 1173398607 (x1497 (x1400 1173398607))))
(assert (x642 x703))
(assert (= x18 (and x582 x664)))
(assert (= (or x374 x1695 x1652 x1483 x1757 x1253) x1232))
(assert (x642 x1619))
(assert (= x37 (and (not x863) x2028)))
(assert (= x344 (or x345 (and x1283 (not x1803)))))
(assert (= x255 (x1497 (x689 x255))))
(assert (=> (<= x1024 10000) (= (x689 x1024) (x1400 x1024))))
(assert (=> (<= x1961 10000) (= (x1400 x1961) (x689 x1961))))
(assert (x642 x1701))
(assert (= (and (not x1930) x1328) x1884))
(assert (= x316 (or x1601 x2000)))
(assert (x642 x1391))
(assert (x642 x467))
(assert (x642 x826))
(assert (= x871 (or x329 (and x1954 (not x1445)))))
(assert (= x799 (=> (and (= x1820 x1748) (= 0 x219)) x632)))
(assert (x642 x449))
(assert (x642 x1473))
(assert (= (and x757 (not x549)) x1921))
(assert (x642 x2015))
(assert (x642 x1874))
(assert (x642 x1075))
(assert (x642 x1630))
(assert (= x1816 (=> (and (= x1044 x239) (= x1517 x1826)) x656)))
(assert (x642 x1762))
(assert (= (and x937 x1211) x1432))
(assert (x642 x1771))
(assert (= x1890 (and x38 (not x1399))))
(assert (=> (>= 10000 x414) (= (x689 x414) (x1400 x414))))
(assert (= x1165 (and x1569 (not x1239))))
(assert (= x731 (and (not x8) x207)))
(assert (= x1402 (and x955 (not x1982))))
(assert (x642 x738))
(assert (x642 x831))
(assert (x642 x862))
(assert (x642 x469))
(assert (= x249 (=> (and (= x1090 x2066) (= x953 x283)) x1412)))
(assert (x642 x1233))
(assert (x606 x1098))
(assert (x642 x526))
(assert (= x1642 (and x10 x578)))
(assert (x642 x964))
(assert (= (and x696 x396) x1603))
(assert (= (and x1007 x679) x760))
(assert (= (or (and x1422 x217) x1478 x1318 (and x573 x1349) (and x1462 (not x520)) (and x1322 x1331)) x1180))
(assert (x642 x933))
(assert (= 2569309863 (x1497 (x1400 2569309863))))
(assert (= x466 (x1497 (x689 x466))))
(assert (= x1118 (x1497 (x689 x1118))))
(assert (= (x1400 2514000705) (x689 2514000705)))
(assert (x642 x494))
(assert (= x1412 (=> (and (= (= 0 x953) x875) (or x875 (not x875))) x1850)))
(assert (= (and (not x612) x1603) x1541))
(assert (=> (<= x1245 10000) (= (x1400 x1245) (x689 x1245))))
(assert (x642 x987))
(assert (= (and x173 (not x206)) x700))
(assert (x642 x519))
(assert (= (and x1704 x1754) x32))
(assert (= (=> (and (= x1002 0) (= x1184 x957)) x320) x1404))
(assert (= x159 (and x1911 x1744)))
(assert (x642 x1527))
(assert (x642 x1106))
(assert (x642 x1179))
(assert (x1786 x1961))
(assert (and (x1464 x1272 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1238 x1272 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x1516 x1272 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x225 x1272 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1272)) (x631 x1272 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x1622 (and (not x2033) x1912)))
(assert (x642 x940))
(assert (x642 x500))
(assert (x642 x851))
(assert (x642 x1149))
(assert (= (and x1204 x1792) x1318))
(assert (= x359 (and x951 (not x341))))
(assert (= x1384 (or x12 x1177 x401 x1247 x379 x598)))
(assert (= (and (not x91) x1181) x2081))
(assert (= (and x1868 (not x489)) x937))
(assert (= (or x265 x1282 x337 x1254 x1169 x1721 x1021) x874))
(assert (= (and x615 x1610) x517))
(assert (x642 x936))
(assert (=> (>= 10000 x1126) (= (x689 x1126) (x1400 x1126))))
(assert (x642 x1651))
(assert (x642 x1685))
(assert (and (x1464 x1961 1461501637330902918203684832716283019655932542976) (x1238 x1961 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x1516 x1961 1461501637330902918203684832716283019655932542976) (* (x225 x1961 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x1961)) (x631 x1961 1461501637330902918203684832716283019655932542976)))
(assert (= (=> (and (= x609 x1039) (= x300 x1962)) x1196) x254))
(assert (= x350 (or x1373 x1193 x1487 x1362 x1078 x1380)))
(assert (= x1243 (=> (and (= x1964 x782) (= x420 0)) x1038)))
(assert (x642 x175))
(assert (x642 x1066))
(assert (x642 x854))
(assert (x642 x1081))
(assert (x642 x1991))
(assert (= x1247 (and x61 x744)))
(assert (= (=> (and (= x1184 x1090) (= x953 x1002)) x1412) x320))
(assert (x642 x929))
(assert (and (x301 32 x1857) (x983 32 x1857) (x157 32 x1857) (and (= (* 32 (- x1857 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x830 32 (- x1857 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x830 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1857) (- (* 32 x1857) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1857))) (= (x830 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1857 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x1857 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1857 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* 32 x1857) (x830 32 x1857)) (x1288 32 x1857) (x709 32 x1857)))
(assert (x977 x469))
(assert (= (x1608 (+ (- x1102 128) x1148)) 0))
(assert (= (=> (and (= x1090 x658) (= x953 x1142)) x1412) x745))
(assert (= 0 (x1802 160)))
(assert (= (x1497 (x218 x636 2)) (+ 2 (x1497 x636))))
(assert (= (and x744 (not x61)) x555))
(assert (x642 x414))
(assert (= x463 (and (not x510) x739)))
(assert (x642 x1687))
(assert (x642 x1143))
(assert (= 0 (x1802 260)))
(assert (= x1750 (and x1194 (not x1917))))
(assert (x642 x1467))
(assert (x642 x819))
(assert (x642 x1848))
(assert (= (x1497 (x689 x686)) x686))
(assert (= x1939 (and x961 x616)))
(assert (= (and x507 x1724) x1661))
(assert (= (=> (and (= x1708 (x2078 (+ x2071 32))) (= x2056 (x756 x2071)) (= x1025 (not (> x124 4))) (= (x2078 (+ x1893 32)) x1110)) (and (=> (and (= x1110 x231) (= 4 x142) (= x57 x1708)) x23) x1025)) x203))
(assert (=> (>= 10000 x628) (= (x689 x628) (x1400 x628))))
(assert (= (and x1967 x1214) x886))
(assert (and (x1464 x1355 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1238 x1355 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x1516 x1355 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x225 x1355 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1355)) (x631 x1355 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (or x1702 x60) x1507))
(assert (= (and x1367 x702) x772))
(assert (x606 x1126))
(assert (= 0 (x1802 x1651)))
(assert (x642 x1364))
(assert (x642 x1290))
(assert (x1170 (x83 (- (x1497 x790) (x1497 x1886)))))
(assert (= (x1497 (x689 x1600)) x1600))
(assert (x642 x468))
(assert (x642 x1866))
(assert (x642 x1335))
(assert (x642 x1570))
(assert (= (x1497 (x689 x1077)) x1077))
(assert (x642 x1836))
(assert (= 0 (x1608 (+ (- x1472 160) x1148))))
(assert (x642 x1240))
(assert (= (=> (= (= 0 x953) x351) (and (=> (and (= x205 0) x351) x11) (=> (and (and (= (x2078 (+ 128 x1685)) x1630) (= x1685 (x1001 115792089237316195423570985008687907853269984665640564039457584007913129639904 x798)) (= x1239 (or (> x1090 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1090 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x1090)))) (= x798 (x2078 (+ x1090 31)))) (not x351)) (and (=> (and (not x1239) (and (= x460 (> x893 1)) (= (x1326 (x689 x686) (x1400 0) 0) x1799))) (and (=> (and (and (= (x1161 132) x286) (= x563 (= x286 x1575)) (= x1575 (x1001 1461501637330902918203684832716283019655932542975 x286))) x460) (and (=> (and x563 (and (>= x479 0) (= (x1223 x1928) x479) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x479) (= (x1326 (x689 x286) x1799 0) x1928) (= (> x833 1) x1583))) (and (=> (and (and (= x811 (x192 (x1400 1) 0)) (= (x1161 132) x469) (= (= x469 x1197) x109) (= (x1001 1461501637330902918203684832716283019655932542975 x469) x1197) (= (x218 x811 1) x410)) x1583) (and (=> (and (= 0 x205) (not x109)) x11) (=> (and x109 (= x1426 (< 1 x833))) (and (=> (and (and (= (= x469 x414) x1704) (= (x1788 (- x608 x1630)) x944) (= x113 (x218 x1749 1)) (= x1749 (x192 (x1400 1) 0)) (<= x1848 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2078 (+ 32 x2020)) x1068) (= x2020 (x2078 (+ x1630 4))) (<= 0 x1848) (= x1848 (x2052 x113)) (= (x2078 (+ 64 x2020)) x608)) x1426) (and (=> (and (not x1704) (= (= x1242 x469) x189)) (and (=> (and (= x242 (= x469 x1484)) (not x189)) (and (=> (and (not x242) (= (= x187 x469) x1978)) (and (=> (and x1978 (and (= x1420 2835717307) (= (x136 (x689 x187)) x1340) (= x923 x491) (= x1848 x952) (not (= x1420 2514000705)) (> x1340 0) (= x1505 68) (= x661 (or (> x1520 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1520 64) (= true (<= x1520 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1531) (not (> 826074471 x1420)) (= x944 x1505) (not (= 1889567281 x1420)) (not (= x1420 826074471)) (not (> 4 x1505)) (not (= 2376452955 x1420)) (= x1520 (x1788 (- x1505 4))))) (and (=> x661 x732) (=> (and (and (= x491 x1210) (= x508 (= x923 x491))) (not x661)) (and (=> (and x508 (and (= x1657 x952) (<= 0 x1740) (= x1650 (x1326 (x689 x409) (x1400 2) 0)) (= x1810 (< x1740 x1848)) (= x1740 (x1731 x1650)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1740))) (and (=> (and (= x1895 (< x1740 x952)) (not x1810)) (and (=> x1895 x732) (=> (and (not x1895) (and (= (< x821 x1963) x1581) (= (x1326 (x689 x409) (x1400 2) 0) x144) (= (x1788 (- x1740 x952)) x1398) (= (x1326 (x689 x491) (x1400 2) 0) x273) (= (x1236 x273) x1963) (= x821 (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x952))) (<= x1963 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1963))) (and (=> (and (and (= (x2078 (+ x952 x1963)) x1526) (= (< x1526 x1963) x1917)) (not x1581)) (and (=> (and (not x1917) (and (= x1032 (x1326 (x689 x491) (x1400 2) 0)) (= 1 x769) (= 32 x583))) x1055) (=> x1917 x732))) (=> x1581 x732))))) (=> x1810 x732))) (=> (not x508) x732))))) (=> (and (not x1978) (= (= x469 x713) x521)) (and (=> (and (not x521) (= (= x1876 x469) x1048)) (and (=> (and (and (not (< x1703 4)) (not (= x313 2514000705)) (= x1703 68) (not (= 826074471 x313)) (not (< x313 826074471)) (= x1663 (x136 (x689 x1876))) (= (x1788 (- x1703 4)) x1556) (> x1663 0) (= x1703 x944) (= x1848 x1883) (= x1774 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 2376452955 x313)) (= x923 x466) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1556) (and (= (<= x1556 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1556 64))) x1513) (not (= x313 1889567281)) (= x313 2835717307)) x1048) (and (=> (and (and (= x1101 x466) (= x1339 (= x466 x923))) (not x1513)) (and (=> (not x1339) x1397) (=> (and x1339 (and (<= 0 x1752) (= (x1375 x1131) x1752) (= (x1326 (x689 x409) (x1400 2) 0) x1131) (= x2044 x1883) (= (< x1752 x1848) x1361) (<= x1752 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x1361) (= x1474 (> x1883 x1752))) (and (=> x1474 x1397) (=> (and (and (<= x227 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x227 (x1590 x812)) (= (x1326 (x689 x466) (x1400 2) 0) x812) (= x377 (x1326 (x689 x409) (x1400 2) 0)) (= (x1788 (- x1752 x1883)) x1553) (= x1278 (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1883))) (>= x227 0) (= (> x227 x1278) x1269)) (not x1474)) (and (=> (and (not x1269) (and (= x2086 (> x227 x1129)) (= x1129 (x2078 (+ x1883 x227))))) (and (=> x2086 x1397) (=> (and (and (= x1934 (x1326 (x689 x466) (x1400 2) 0)) (= 1 x536) (= 32 x1735)) (not x2086)) x269))) (=> x1269 x1397))))) (=> x1361 x1397))))) (=> x1513 x1397))) (=> (and (not x1048) (and (= (= x1594 x469) x297) (and x297 (and (= x1506 x944) (= x1506 68) (= x923 x1753) (not (= 2376452955 x2021)) (not (< x1506 4)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1153) (not (= 1889567281 x2021)) (not (= x2021 826074471)) (= (x1788 (- x1506 4)) x1047) (= 2835717307 x2021) (not (= x2021 2514000705)) (= x19 (or (and (= (<= x1047 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1047)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1047))) (not (> 826074471 x2021)) (= x1848 x775) (< 0 x2082) (= (x136 (x689 x1594)) x2082))))) (and (=> x19 x485) (=> (and (and (= x972 (= x923 x1753)) (= x1753 x585)) (not x19)) (and (=> (not x972) x485) (=> (and x972 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x655) (= (> x1848 x655) x882) (= (x1326 (x689 x409) (x1400 2) 0) x603) (= x775 x1291) (= (x1071 x603) x655) (>= x655 0))) (and (=> x882 x485) (=> (and (not x882) (= (> x775 x655) x1791)) (and (=> x1791 x485) (=> (and (and (= (x1033 x384) x1107) (= (> x1107 x1536) x1252) (= (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x775)) x1536) (= (x1326 (x689 x409) (x1400 2) 0) x413) (= x384 (x1326 (x689 x1753) (x1400 2) 0)) (= x2059 (x1788 (- x655 x775))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1107) (>= x1107 0)) (not x1791)) (and (=> x1252 x485) (=> (and (not x1252) (and (= x1778 (x2078 (+ x1107 x775))) (= x1538 (> x1107 x1778)))) (and (=> x1538 x485) (=> (and (not x1538) (and (= x850 1) (= 32 x1075) (= (x1326 (x689 x1753) (x1400 2) 0) x1133))) x1947))))))))))))))) (=> (and x521 (and (= x668 x1848) (not (= 2376452955 x938)) (= (x136 (x689 x713)) x149) (not (= 1889567281 x938)) (= x944 x526) (> x149 0) (= x938 2835717307) (not (= x938 2514000705)) (= x1457 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 68 x526) (not (> 4 x526)) (not (> 1086394137 x938)) (not (= x938 1086394137)) (= x923 x1877) (= x613 (x1788 (- x526 4))) (= x1549 (or (> x613 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x613 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x613)))))) (and (=> x1549 x1437) (=> (and (not x1549) (and (= x696 (= x923 x1877)) (= x591 x1877))) (and (=> (not x696) x1437) (=> (and (and (= x912 (x1326 (x689 x409) (x1400 2) 0)) (= (x1941 x912) x1966) (= (> x1848 x1966) x612) (= x668 x346) (<= 0 x1966) (<= x1966 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x696) (and (=> (and (= (> x668 x1966) x1496) (not x612)) (and (=> x1496 x1437) (=> (and (not x1496) (and (= x2036 (x28 x1638)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2036) (<= 0 x2036) (= x853 (< x930 x2036)) (= x2011 (x1788 (- x1966 x668))) (= (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x668)) x930) (= x847 (x1326 (x689 x409) (x1400 2) 0)) (= (x1326 (x689 x1877) (x1400 2) 0) x1638))) (and (=> (and (and (= x490 (x2078 (+ x2036 x668))) (= (> x2036 x490) x252)) (not x853)) (and (=> (and (not x252) (and (= 32 x1292) (= (x1326 (x689 x1877) (x1400 2) 0) x1141) (= x984 1))) x52) (=> x252 x1437))) (=> x853 x1437))))) (=> x612 x1437))))))))))) (=> (and (and (< 0 x1951) (not (< x179 4)) (= x179 x944) (= x966 (x1788 (- x179 4))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1656) (= x1391 x1848) (= (or (and (> 64 x966) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x966) true)) (> x966 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1533) (not (= x651 826074471)) (not (= 2376452955 x651)) (= x651 2835717307) (= x923 x1154) (not (= 2514000705 x651)) (= (x136 (x689 x1484)) x1951) (not (> 826074471 x651)) (not (= x651 1889567281)) (= x179 68)) x242) (and (=> x1533 x29) (=> (and (not x1533) (and (= x970 (= x923 x1154)) (= x1154 x356))) (and (=> (and x970 (and (= x1391 x1828) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x266) (<= 0 x266) (= (x890 x1425) x266) (= x1523 (> x1848 x266)) (= x1425 (x1326 (x689 x409) (x1400 2) 0)))) (and (=> x1523 x29) (=> (and (= x2029 (< x266 x1391)) (not x1523)) (and (=> (and (not x2029) (and (= x1310 (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1391))) (= (x1326 (x689 x409) (x1400 2) 0) x1343) (<= x1149 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1788 (- x266 x1391)) x369) (<= 0 x1149) (= x712 (< x1310 x1149)) (= x1 (x1326 (x689 x1154) (x1400 2) 0)) (= x1149 (x1588 x1)))) (and (=> x712 x29) (=> (and (and (= (> x1149 x1634) x303) (= x1634 (x2078 (+ x1149 x1391)))) (not x712)) (and (=> x303 x29) (=> (and (not x303) (and (= x168 (x1326 (x689 x1154) (x1400 2) 0)) (= 1 x1891) (= 32 x673))) x667))))) (=> x2029 x29))))) (=> (not x970) x29))))))) (=> (and x189 (and (not (> 2376452955 x1041)) (= x944 x1466) (not (= 2678909723 x1041)) (< 0 x1439) (= x1466 68) (= (x1788 (- x1466 4)) x749) (> 3065339685 x1041) (= x1041 2835717307) (not (< x1041 2678909723)) (= x1118 x923) (= x2010 (or (and (< x749 64) (= (<= x749 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x749))) (not (< x1466 4)) (= x1018 x1848) (= x1818 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1439 (x136 (x689 x1242))))) (and (=> (and (and (= x1118 x618) (= (= x923 x1118) x1959)) (not x2010)) (and (=> (and (and (= x1837 (> x1848 x1350)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350) (= x1018 x1926) (= (x80 x1510) x1350) (= (x1326 (x689 x409) (x1400 2) 0) x1510) (<= 0 x1350)) x1959) (and (=> x1837 x1067) (=> (and (= (< x1350 x1018) x860) (not x1837)) (and (=> (and (not x860) (and (= (x426 x1659) x500) (= x1659 (x1326 (x689 x1118) (x1400 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x500) (<= 0 x500) (= x1208 (x1326 (x689 x409) (x1400 2) 0)) (= x433 (< x106 x500)) (= (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1018)) x106) (= (x1788 (- x1350 x1018)) x1922))) (and (=> (and (and (= (x2078 (+ x1018 x500)) x1418) (= x802 (< x1418 x500))) (not x433)) (and (=> x802 x1067) (=> (and (not x802) (and (= x524 (x1326 (x689 x1118) (x1400 2) 0)) (= 32 x619) (= x262 1))) x256))) (=> x433 x1067))) (=> x860 x1067))))) (=> (not x1959) x1067))) (=> x2010 x1067))))) (=> (and x1704 (and (= x195 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (or (and (< x1037 64) (= (<= x1037 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1037)) x1383) (not (= 2678909723 x2084)) (not (> 4 x786)) (not (> 2678909723 x2084)) (= x786 68) (= x786 x944) (= x2084 2835717307) (> x865 0) (= (x1788 (- x786 4)) x1037) (not (< x2084 2376452955)) (= (x136 (x689 x414)) x865) (= x1960 x923) (> 3065339685 x2084) (= x1848 x1736))) (and (=> x1383 x969) (=> (and (and (= (= x923 x1960) x2072) (= x1992 x1960)) (not x1383)) (and (=> (and x2072 (and (= x55 (x1326 (x689 x409) (x1400 2) 0)) (= x1736 x1235) (= x1833 (x1138 x55)) (>= x1833 0) (= (< x1833 x1848) x1297) (<= x1833 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x1297) (= (> x1736 x1833) x535)) (and (=> x535 x969) (=> (and (not x535) (and (= (x1788 (- x1833 x1736)) x1494) (= (< x1677 x432) x616) (>= x432 0) (= (x1326 (x689 x409) (x1400 2) 0) x1623) (= x432 (x13 x1130)) (<= x432 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1326 (x689 x1960) (x1400 2) 0) x1130) (= (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1736)) x1677))) (and (=> (and (not x616) (and (= (x2078 (+ x1736 x432)) x784) (= (< x784 x432) x615))) (and (=> x615 x969) (=> (and (and (= 1 x609) (= (x1326 (x689 x1960) (x1400 2) 0) x806) (= x300 32)) (not x615)) x254))) (=> x616 x969))))) (=> x1297 x969))) (=> (not x2072) x969))))))) (=> (and (not x1426) (= 0 x205)) x11))))) (=> (and (not x1583) (= x205 0)) x11))) (=> (and (not x563) (= 0 x205)) x11))) (=> (and (= x205 0) (not x460)) x11))) (=> (and x1239 (= x205 0)) x11))))) x1850))
(assert (= x1265 (and (not x869) x1058)))
(assert (x642 x398))
(assert (= (=> (and (= x1853 x831) (= x1660 x1737)) x1887) x1566))
(assert (= x2028 (and (not x456) x1315)))
(assert (= x207 (and (not x1841) x1419)))
(assert (= (x689 (x1497 x1886)) x1886))
(assert (x642 x1994))
(assert (= x2031 (and x1970 x1647)))
(assert (= x230 (=> (and (= x403 x953) (= x1804 x1090)) x1412)))
(assert (= (and x448 x1567) x87))
(assert (x642 x1267))
(assert (x606 x1127))
(assert (x642 x196))
(assert (= (and x117 (not x1775)) x275))
(assert (and (x1464 x742 1461501637330902918203684832716283019655932542976) (x1238 x742 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x1516 x742 1461501637330902918203684832716283019655932542976) (* (x225 x742 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x742)) (x631 x742 1461501637330902918203684832716283019655932542976)))
(assert (x642 x2013))
(assert (= x173 (and x146 (not x1741))))
(assert (= (and x404 (not x1074)) x2048))
(assert (= (and x1212 (not x164)) x1907))
(assert (= (and (not x460) x1165) x587))
(assert (x606 x1245))
(assert (x606 x1565))
(assert (x642 x86))
(assert (x642 x857))
(assert (x642 x483))
(assert (x642 x848))
(assert (= x1096 (and x7 x2080)))
(assert (= x963 (and (not x109) x852)))
(assert (x642 x897))
(assert (= (and (not x1959) x1985) x2089))
(assert (x642 x1300))
(assert (x642 x1778))
(assert (=> (<= x418 10000) (= (x1400 x418) (x689 x418))))
(assert (x642 x1554))
(assert (x642 x653))
(assert (= x4 (and x1987 (not x684))))
(assert (x1786 (- (x1497 x790) (x1497 x1886))))
(assert (= (x1497 (x1400 893399075)) 893399075))
(assert (= x1051 (and (not x189) x99)))
(assert (= x1967 (and (not x2070) x767)))
(assert (= (or (and x1094 x492) (and x1103 x85) (and x1777 x221) x159 x474 (and (not x956) x1416)) x1999))
(assert (= (and x1714 x114) x1057))
(assert (= 3645313523 (x1497 (x1400 3645313523))))
(assert (x642 x2020))
(assert (= (and x1121 x92) x1177))
(assert (x642 x1488))
(assert (x1352 x1537))
(assert (= (and x1057 (not x1026)) x1712))
(assert (=> (<= x1233 10000) (= (x689 x1233) (x1400 x1233))))
(assert (= (and (not x294) x891) x883))
(assert (x642 x1102))
(assert (= (and x739 x510) x1253))
(assert (x642 x916))
(assert (= (and x201 x2050) x1183))
(assert (= (and x875 x185) x1255))
(assert (x642 x1015))
(assert (x642 x1745))
(assert (= x1483 (and x129 x250)))
(assert (= (and x1912 x2033) x217))
(assert (x642 x347))
(assert (x642 x1847))
(assert (x642 x1517))
(assert (= (and x68 (not x1583)) x827))
(assert (= (+ (x1497 x103) 2) (x1497 (x218 x103 2))))
(assert (x642 x997))
(assert (x642 x314))
(assert (= (and x1819 x47) x1986))
(assert (x1863 x286))
(assert (= (and x1626 x1005) x260))
(assert (x642 x1207))
(assert (x642 x966))
(assert (x642 x291))
(assert (x642 x967))
(assert (x606 x414))
(assert (x642 x1676))
(assert (x642 x1660))
(assert (= (and (not x1426) x710) x1125))
(assert (= x530 (and x1967 (not x1214))))
(assert (x642 x204))
(assert (x642 x1135))
(assert (= x78 (=> (and (= x957 x1804) (= x403 0)) x230)))
(assert (x642 x1420))
(assert (= (and x1628 (not x1269)) x1521))
(assert (= (and x372 x605) x714))
(assert (= (and x198 x874) x841))
(assert (= (x1497 (x218 x1749 1)) (+ (x1497 x1749) 1)))
(assert (= x1126 (x1497 (x689 x1126))))
(assert (= (=> (and (= x1909 0) (= x1820 x1676)) x140) x533))
(assert (x642 x1505))
(assert (x642 x2084))
(assert (x642 x171))
(assert (x642 x1795))
(assert (= (and (not x2069) x2037) x948))
(assert (= x1459 (=> (= x702 (= 0 x1039)) (and (=> (and (and (= (x2078 (+ x1470 x1630)) x44) (= x1578 (or (> x1962 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1962)) (> 32 x1962)))) (= (x1001 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1678) x1470) (= (x2078 (+ 31 x1962)) x1678)) (not x702)) (and (=> (and x1578 (= 0 x205)) x11) (=> (and (not x1578) (and (= (> x893 2) x990) (= x1940 (x1326 (x689 x686) (x1400 0) 0)))) (and (=> (and (not x990) (= 0 x205)) x11) (=> (and x990 (and (= (x1161 164) x9) (= x1730 (x1001 1461501637330902918203684832716283019655932542975 x9)) (= (= x9 x1730) x2069))) (and (=> (and x2069 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x880) (= x16 (< 2 x833)) (<= 0 x880) (= (x1223 x657) x880) (= (x1326 (x689 x9) x1940 0) x657))) (and (=> (and x16 (and (= x341 (= x1719 x1231)) (= (x218 x103 2) x1956) (= x1719 (x1001 1461501637330902918203684832716283019655932542975 x1231)) (= (x192 (x1400 1) 0) x103) (= (x1161 164) x1231))) (and (=> (and (= 0 x205) (not x341)) x11) (=> (and (= (< 2 x833) x1311) x341) (and (=> (and (not x1311) (= x205 0)) x11) (=> (and x1311 (and (= (x1788 (- x296 x44)) x1501) (= x1832 (x218 x636 2)) (>= x1300 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1300) (= (= x1231 x414) x2007) (= x171 (x2078 (+ x22 32))) (= x22 (x2078 (+ 4 x44))) (= x1300 (x69 x1832)) (= (x2078 (+ 64 x22)) x296) (= x636 (x192 (x1400 1) 0)))) (and (=> (and (= (= x1231 x1242) x1263) (not x2007)) (and (=> (and (and (= x1501 x1771) (> 3065339685 x240) (= (x136 (x689 x1242)) x1913) (= x741 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x240 2835717307) (= x1686 x1300) (not (= 2678909723 x240)) (not (> 4 x1771)) (= (x1788 (- x1771 4)) x1539) (= 68 x1771) (= x923 x568) (= (or (> x1539 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1539 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1539 64))) x1983) (not (> 2678909723 x240)) (not (> 2376452955 x240)) (> x1913 0)) x1263) (and (=> (and (not x1983) (and (= x1007 (= x568 x923)) (= x568 x228))) (and (=> (not x1007) x2018) (=> (and x1007 (and (>= x566 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x566) (= x1548 x1686) (= x322 (x1326 (x689 x409) (x1400 2) 0)) (= (x1411 x322) x566) (= x1862 (> x1300 x566)))) (and (=> (and (= x1823 (< x566 x1686)) (not x1862)) (and (=> x1823 x2018) (=> (and (not x1823) (and (= x633 (x1788 (- x566 x1686))) (<= x1555 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1389 (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1686))) (= (x1326 (x689 x568) (x1400 2) 0) x1700) (= (x820 x1700) x1555) (= x253 (x1326 (x689 x409) (x1400 2) 0)) (<= 0 x1555) (= x358 (< x1389 x1555)))) (and (=> (and (not x358) (and (= x161 (x2078 (+ x1686 x1555))) (= x999 (> x1555 x161)))) (and (=> x999 x2018) (=> (and (not x999) (and (= x97 (x1326 (x689 x568) (x1400 2) 0)) (= x1273 32) (= x1597 1))) x810))) (=> x358 x2018))))) (=> x1862 x2018))))) (=> x1983 x2018))) (=> (and (= (= x1484 x1231) x456) (not x1263)) (and (=> (and x456 (and (= x1167 x923) (= x1329 (x136 (x689 x1484))) (not (= 2376452955 x1768)) (= x1768 2835717307) (= x1667 x1501) (< 0 x1329) (= x1300 x908) (not (= 2514000705 x1768)) (not (> 826074471 x1768)) (not (= 1889567281 x1768)) (= 68 x1667) (= (x1788 (- x1667 4)) x200) (not (< x1667 4)) (not (= 826074471 x1768)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x200) true) (> 64 x200)) (> x200 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1074) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x909))) (and (=> (and (and (= (= x1167 x923) x522) (= x703 x1167)) (not x1074)) (and (=> (and x522 (and (<= x965 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x965) (= x1881 (> x1300 x965)) (= x908 x2032) (= x965 (x506 x1995)) (= x1995 (x1326 (x689 x409) (x1400 2) 0)))) (and (=> x1881 x278) (=> (and (= (< x965 x908) x81) (not x1881)) (and (=> x81 x278) (=> (and (not x81) (and (= x857 (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x908))) (= x1276 (x1788 (- x965 x908))) (<= x1587 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1326 (x689 x409) (x1400 2) 0) x1079) (= (> x1587 x857) x543) (<= 0 x1587) (= (x1326 (x689 x1167) (x1400 2) 0) x1062) (= x1587 (x557 x1062)))) (and (=> (and (not x543) (and (= (x2078 (+ x908 x1587)) x1285) (= x264 (< x1285 x1587)))) (and (=> x264 x278) (=> (and (not x264) (and (= 1 x737) (= x123 32) (= x324 (x1326 (x689 x1167) (x1400 2) 0)))) x2008))) (=> x543 x278))))))) (=> (not x522) x278))) (=> x1074 x278))) (=> (and (= (= x1231 x187) x863) (not x456)) (and (=> (and x863 (and (= (x1788 (- x177 4)) x2076) (= 68 x177) (> x1089 0) (= (x136 (x689 x187)) x1089) (= (or (> x2076 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2076 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2076 64))) x489) (not (= 2376452955 x1859)) (= x184 x1300) (not (= x1859 1889567281)) (not (> 4 x177)) (= x923 x418) (not (= 2514000705 x1859)) (= x1859 2835717307) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x724) (= x1501 x177) (not (> 826074471 x1859)) (not (= 826074471 x1859)))) (and (=> (and (not x489) (and (= (= x418 x923) x1211) (= x1691 x418))) (and (=> (and (and (= x836 x184) (= x1481 (< x1687 x1300)) (<= 0 x1687) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1687) (= (x77 x755) x1687) (= x755 (x1326 (x689 x409) (x1400 2) 0))) x1211) (and (=> (and (= (> x184 x1687) x1217) (not x1481)) (and (=> x1217 x1243) (=> (and (and (= (x1326 (x689 x418) (x1400 2) 0) x614) (= x175 (x1690 x614)) (= (< x1294 x175) x70) (>= x175 0) (= (x1788 (- x1687 x184)) x1164) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x175) (= x1195 (x1326 (x689 x409) (x1400 2) 0)) (= x1294 (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x184)))) (not x1217)) (and (=> x70 x1243) (=> (and (not x70) (and (= (x2078 (+ x184 x175)) x1641) (= (> x175 x1641) x1930))) (and (=> x1930 x1243) (=> (and (not x1930) (and (= x782 32) (= x420 1) (= x996 (x1326 (x689 x418) (x1400 2) 0)))) x1038))))))) (=> x1481 x1243))) (=> (not x1211) x1243))) (=> x489 x1243))) (=> (and (= (= x713 x1231) x743) (not x863)) (and (=> (and (not x743) (= x1779 (= x1231 x1876))) (and (=> (and (not x1779) (and (= x1188 (= x1594 x1231)) (and x1188 (and (= (or (and (> 64 x1948) (= (<= x1948 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1948 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x232) (not (= 2514000705 x794)) (= 68 x27) (not (= x794 1889567281)) (> x1639 0) (= x794 2835717307) (= (x1788 (- x27 4)) x1948) (not (= x794 826074471)) (not (> 4 x27)) (not (= x794 2376452955)) (not (> 826074471 x794)) (= x1405 x1300) (= x594 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x27 x1501) (= x923 x1098) (= x1639 (x136 (x689 x1594))))))) (and (=> x232 x162) (=> (and (and (= x347 x1098) (= x448 (= x923 x1098))) (not x232)) (and (=> (not x448) x162) (=> (and x448 (and (= x1785 (> x1300 x1442)) (= x1405 x1557) (= (x1326 (x689 x409) (x1400 2) 0) x980) (>= x1442 0) (<= x1442 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1681 x980) x1442))) (and (=> x1785 x162) (=> (and (not x1785) (= (> x1405 x1442) x538)) (and (=> x538 x162) (=> (and (and (<= 0 x1469) (= x281 (x1326 (x689 x409) (x1400 2) 0)) (= (x1112 x1620) x1469) (= x1620 (x1326 (x689 x1098) (x1400 2) 0)) (= x1910 (x1788 (- x1442 x1405))) (= x581 (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1405))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1469) (= (> x1469 x581) x620)) (not x538)) (and (=> x620 x162) (=> (and (and (= x174 (> x1469 x818)) (= x818 (x2078 (+ x1469 x1405)))) (not x620)) (and (=> (and (not x174) (and (= 1 x1853) (= (x1326 (x689 x1098) (x1400 2) 0) x365) (= x1737 32))) x1566) (=> x174 x162))))))))))))) (=> (and (and (= x923 x1977) (= x1724 (or (and (> 64 x1433) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1433))) (> x1433 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= 2376452955 x1480)) (not (> 826074471 x1480)) (< 0 x792) (= x332 68) (= 2835717307 x1480) (not (= x1480 826074471)) (not (> 4 x332)) (= x332 x1501) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x483) (= x792 (x136 (x689 x1876))) (= (x1788 (- x332 4)) x1433) (not (= x1480 1889567281)) (= x1300 x194) (not (= x1480 2514000705))) x1779) (and (=> x1724 x389) (=> (and (and (= x1305 x1977) (= (= x923 x1977) x294)) (not x1724)) (and (=> (not x294) x389) (=> (and (and (= x156 (x1326 (x689 x409) (x1400 2) 0)) (= x1299 (> x1300 x917)) (= x1455 x194) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x917) (>= x917 0) (= x917 (x1933 x156))) x294) (and (=> (and (= x982 (< x917 x194)) (not x1299)) (and (=> x982 x389) (=> (and (not x982) (and (<= x472 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x472 (x579 x1336)) (= x1045 (x1326 (x689 x409) (x1400 2) 0)) (= (x1326 (x689 x1977) (x1400 2) 0) x1336) (= x1186 (> x472 x90)) (>= x472 0) (= x90 (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x194))) (= (x1788 (- x917 x194)) x1381))) (and (=> x1186 x389) (=> (and (and (= (x2078 (+ x194 x472)) x902) (= (< x902 x472) x1545)) (not x1186)) (and (=> (and (and (= 32 x415) (= x367 (x1326 (x689 x1977) (x1400 2) 0)) (= x2083 1)) (not x1545)) x1579) (=> x1545 x389))))))) (=> x1299 x389))))))))) (=> (and (and (not (= 2514000705 x419)) (= x233 x1300) (= 68 x676) (not (= 1889567281 x419)) (= x419 2835717307) (= (x136 (x689 x713)) x243) (= x1658 (x1788 (- x676 4))) (not (= 1086394137 x419)) (> x243 0) (not (= x419 2376452955)) (not (> 4 x676)) (not (< x419 1086394137)) (= x1216 (or (> x1658 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x1658) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1658))))) (= x169 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x676 x1501) (= x923 x1766)) x743) (and (=> x1216 x838) (=> (and (and (= x1019 x1766) (= x1296 (= x1766 x923))) (not x1216)) (and (=> (not x1296) x838) (=> (and x1296 (and (= x1839 (x64 x5)) (= x640 (< x1839 x1300)) (= x233 x1468) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1839) (<= 0 x1839) (= x5 (x1326 (x689 x409) (x1400 2) 0)))) (and (=> x640 x838) (=> (and (not x640) (= x318 (> x233 x1839))) (and (=> (and (and (= x20 (x1326 (x689 x409) (x1400 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x110) (= x1500 (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233))) (= (x884 x1122) x110) (= (x1326 (x689 x1766) (x1400 2) 0) x1122) (= x1618 (< x1500 x110)) (>= x110 0) (= (x1788 (- x1839 x233)) x1747)) (not x318)) (and (=> x1618 x838) (=> (and (not x1618) (and (= x1903 (< x2060 x110)) (= x2060 (x2078 (+ x110 x233))))) (and (=> x1903 x838) (=> (and (not x1903) (and (= 32 x473) (= (x1326 (x689 x1766) (x1400 2) 0) x226) (= x465 1))) x1390))))) (=> x318 x838))))))))))))))))) (=> (and x2007 (and (< x1670 3065339685) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1742) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1742)) (> 64 x1742))) x754) (= 68 x1144) (not (< x1670 2678909723)) (= x1300 x1262) (= x1742 (x1788 (- x1144 4))) (not (< x1670 2376452955)) (= x1144 x1501) (= x1554 x923) (= 2835717307 x1670) (> x197 0) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x86) (not (> 4 x1144)) (not (= 2678909723 x1670)) (= (x136 (x689 x414)) x197))) (and (=> x754 x1879) (=> (and (and (= x366 (= x1554 x923)) (= x936 x1554)) (not x754)) (and (=> (and (and (= x1262 x1847) (= x1392 (x1123 x1822)) (<= x1392 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x1300 x1392) x1726) (<= 0 x1392) (= x1822 (x1326 (x689 x409) (x1400 2) 0))) x366) (and (=> (and (not x1726) (= x1873 (> x1262 x1392))) (and (=> (and (not x1873) (and (= x1636 (< x1043 x625)) (= (x1788 (- x1392 x1262)) x1199) (= x1043 (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1262))) (>= x625 0) (= x625 (x1403 x1840)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x625) (= x400 (x1326 (x689 x409) (x1400 2) 0)) (= x1840 (x1326 (x689 x1554) (x1400 2) 0)))) (and (=> x1636 x1879) (=> (and (not x1636) (and (= (x2078 (+ x1262 x625)) x1430) (= x913 (< x1430 x625)))) (and (=> x913 x1879) (=> (and (and (= 1 x1344) (= x834 (x1326 (x689 x1554) (x1400 2) 0)) (= 32 x858)) (not x913)) x1137))))) (=> x1873 x1879))) (=> x1726 x1879))) (=> (not x366) x1879))))))))))) (=> (and (= x205 0) (not x16)) x11))) (=> (and (not x2069) (= x205 0)) x11))))))) (=> (and (= x205 0) x702) x11)))))
(assert (= (and x942 (not x521)) x761))
(assert (= (and x1212 x164) x1005))
(assert (= (x689 2678909723) (x1400 2678909723)))
(assert (= x1916 (and (not x982) x1770)))
(assert (x642 x1030))
(assert (x642 x1178))
(assert (= (or x688 x630 x1907 x1443 x1396) x148))
(assert (x642 x1011))
(assert (x642 x1284))
(assert (x642 x1615))
(assert (x642 x1678))
(assert (x642 x6))
(assert (x642 x1156))
(assert (x642 x346))
(assert (= (or x1471 x1821) x1021))
(assert (x642 x446))
(assert (x642 x90))
(assert (= x1869 (and x121 (not x366))))
(assert (x642 x1591))
(assert (= 1195755010 (x1497 (x1400 1195755010))))
(assert (x642 x944))
(assert (x1352 x798))
(assert (x642 x190))
(assert (=> (<= x1035 10000) (= (x1400 x1035) (x689 x1035))))
(assert (x642 x1100))
(assert (x642 x194))
(assert (= (and (not x221) x1777) x1882))
(assert (= (and (not x882) x518) x988))
(assert (x642 x832))
(assert (= (or x1255 (and (not x875) x185)) x488))
(assert (x1863 x1537))
(assert (= x265 (or x1999 x1871)))
(assert (x642 x1768))
(assert (x1863 x742))
(assert (x642 x1394))
(assert (x642 x580))
(assert (= (=> (and (= (= x1039 0) x1324) (or (not x1324) x1324)) x1459) x1196))
(assert (x606 x418))
(assert (x236 x833))
(assert (= (and x1219 x1957) x1166))
(assert (= (and x1414 x26) x39))
(assert (x642 x361))
(assert (x642 x581))
(assert (x642 x1480))
(assert (and (x1464 x1701 1461501637330902918203684832716283019655932542976) (x1238 x1701 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x1516 x1701 1461501637330902918203684832716283019655932542976) (* (x225 x1701 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x1701)) (x631 x1701 1461501637330902918203684832716283019655932542976)))
(assert (= (and x961 (not x616)) x1610))
(assert (x606 x1178))
(assert (= (or x199 x1864 x998 x683 x1550 x730) x687))
(assert (= x1103 (and (not x1744) x1911)))
(assert (= x1390 (=> (and (= x465 x831) (= x473 x1660)) x1887)))
(assert (= x220 (or x747 x2049)))
(assert (x642 x904))
(assert (x642 x1099))
(assert (x642 x1774))
(assert (x642 x1717))
(assert (= (and (not x1545) x84) x1301))
(assert (= x744 (and x1715 x935)))
(assert (= (x1497 (x689 x1805)) x1805))
(assert (= x1958 (and x1363 (not x1830))))
(assert (x642 x1405))
(assert (= x1554 (x1497 (x689 x1554))))
(assert (x642 x1000))
(assert (= x1312 (=> (and (= x1820 x1054) (= x235 0)) x1447)))
(assert (= (and (not x2050) x201) x870))
(assert (=> (<= x1584 10000) (= (x1400 x1584) (x689 x1584))))
(assert (x642 x1351))
(assert (x642 x491))
(assert (x642 x1350))
(assert (= x1812 (and x999 x349)))
(assert (x642 x888))
(assert (= (x689 1195755010) (x1400 1195755010)))
(assert (x642 x798))
(assert (= (x1497 (x689 x1877)) x1877))
(assert (x642 x740))
(assert (x642 x163))
(assert (x642 x1872))
(assert (x642 x1176))
(assert (= (and x956 x1416) x1777))
(assert (= (and x1916 (not x1186)) x84))
(assert (= (or x1353 x1937) x900))
(assert (x642 x1936))
(assert (x606 x1554))
(assert (x642 x655))
(assert (=> (<= x929 10000) (= (x689 x929) (x1400 x929))))
(assert (= (and x2027 x805) x1596))
(assert (x977 x1231))
(assert (= (and x1063 x95) x1885))
(assert (= (or x295 x1124) x1972))
(assert (= (and x878 x960) x431))
(assert (x642 x957))
(assert (= (and x870 x553) x1897))
(assert (= (=> (and (= x205 x1460) (= x1861 x1508)) x1996) x11))
(assert (= x2063 (and x601 x1815)))
(assert (=> (>= 10000 x1960) (= (x1400 x1960) (x689 x1960))))
(assert (= (and x452 x1042) x699))
(assert (= 0 (x1314 x354)))
(assert (= (and x1258 (not x223)) x498))
(assert (x642 x1197))
(assert (= (and x1628 x1269) x843))
(assert (x642 x1246))
(assert (x642 x1198))
(assert (x642 x457))
(assert (x642 x1280))
(assert (= (and x845 x133) x38))
(assert (and (x1464 x1355 32) (x1238 x1355 32) (=> (< 0 32) (= (+ (x1516 x1355 32) (* (x225 x1355 32) 32)) x1355)) (x631 x1355 32)))
(assert (= (and x40 x1465) x1647))
(assert (x642 x1395))
(assert (x642 x1844))
(assert (x642 x1526))
(assert (= 0 (x1802 228)))
(assert (x642 x623))
(assert (= (and x348 (not x913)) x1356))
(assert (x642 x284))
(assert (x642 x1291))
(assert (let ((x835 (x83 (- (x1497 x790) (x1497 x1886))))) (and (x1888 x835 1) (x1835 x835 1) (x823 x835 1) (=> (and (> x835 0) (> 1 0)) (and (>= x835 (* 1 (x225 x835 1))) (< (- x835 1) (* 1 (x225 x835 1))))) (= (- x835 (x1001 0 x835)) (* (x225 x835 1) 1)) (x866 x835 1))))
(assert (= x810 (=> (and (= x1597 x831) (= x1273 x1660)) x1887)))
(assert (x606 x56))
(assert (=> (<= x9 10000) (= (x689 x9) (x1400 x9))))
(assert (x642 x542))
(assert (= x1456 (and (not x860) x2017)))
(assert (x1786 1461501637330902918203684832716283019655932542976))
(assert (x642 x119))
(assert (= x541 (or x841 (and x874 (not x198)))))
(assert (x977 x286))
(assert (x642 x1718))
(assert (and (x1464 x1678 32) (x1238 x1678 32) (=> (< 0 32) (= (+ (x1516 x1678 32) (* (x225 x1678 32) 32)) x1678)) (x631 x1678 32)))
(assert (= x1173 (and x1578 x531)))
(assert (x642 x1259))
(assert (= (x1497 (x689 x1024)) x1024))
(assert (x642 x926))
(assert (=> (<= x1444 10000) (= (x689 x1444) (x1400 x1444))))
(assert (= (and x1295 (not x1978)) x942))
(assert (= x599 (and (not x990) x516)))
(assert (= x1415 (and x1311 x822)))
(assert (x236 x893))
(assert (= x1309 (and x32 x1383)))
(assert (x642 x1201))
(assert (x642 x1329))
(assert (= (=> (and (= 0 x1597) (= x1964 x1273)) x810) x2018))
(assert (x642 x1310))
(assert (x642 x1305))
(assert (= x1446 (x1497 (x689 x1446))))
(assert (= (=> (and (= x1039 x262) (= x619 x1962)) x1196) x256))
(assert (x642 x1607))
(assert (= (and (not x1791) x988) x958))
(assert (x642 x881))
(assert (x642 x1490))
(assert (x642 x647))
(assert (= (or x910 x801 x1379 x316 x590 x607 x989) x1954))
(assert (= (and (not x2027) x805) x1136))
(assert (= x1218 (and x2014 x1299)))
(assert (= (and x105 x1558) x767))
(assert (= x1162 (and x982 x1770)))
(assert (x642 x1468))
(assert (x642 x974))
(assert (= x593 (and (not x802) x325)))
(assert (= x1973 (and x442 x1983)))
(assert (= x568 (x1497 (x689 x568))))
(assert (= (x689 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1400 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= x1867 (and (not x417) x2065)))
(assert (x642 x1857))
(assert (= (=> (and (= x964 x953) (= x2074 x1090)) x1412) x209))
(assert (x642 x1382))
(assert (= x1363 (and x343 x1856)))
(assert (= 1083311676 (x1497 (x1400 1083311676))))
(assert (x642 x720))
(assert (x642 x1118))
(assert (= x1428 (and x530 (not x604))))
(assert (x606 x1118))
(assert (x642 x1989))
(assert (x642 x567))
(assert (x642 x1108))
(assert (x642 x1097))
(assert (= x1009 (and x1916 x1186)))
(assert (x642 x1337))
(assert (= (=> (and (= x1826 x235) (= x1044 x1054)) x656) x1447))
(assert (x642 x1901))
(assert (= (and x1803 x1283) x805))
(assert (= x1579 (=> (and (= x2083 x831) (= x1660 x415)) x1887)))
(assert (= x918 (and (not x543) x2088)))
(assert (= (or x803 x1180) x1721))
(assert (x642 x840))
(assert (= (=> (and (= x660 x1292) (= 0 x984)) x52) x1437))
(assert (= (and x122 x640) x1864))
(assert (= x1154 (x1497 (x689 x1154))))
(assert (= (and x1903 x1814) x683))
(assert (= x2049 (and x541 x1561)))
(assert (x642 x880))
(assert (=> (>= 10000 x1974) (= (x1400 x1974) (x689 x1974))))
(assert (x1863 x1227))
(assert (= x409 (x1497 (x689 x409))))
(assert (=> (<= x24 10000) (= (x689 x24) (x1400 x24))))
(assert (x642 x441))
(assert (= x352 (and x1981 (not x16))))
(assert (x642 x1735))
(assert (x642 x1553))
(assert (= (=> (and (= x1962 x1735) (= x536 x1039)) x1196) x269))
(assert (x642 x1052))
(assert (= (and (not x1895) x1532) x746))
(assert (x642 x1148))
(assert (x606 x1035))
(assert (x642 x405))
(assert (x642 x110))
(assert (= x578 (and x1010 (not x665))))
(assert (= (and x760 (not x1862)) x188))
(assert (= x1242 (x1497 (x689 x1242))))
(assert (= x258 (x1497 (x689 x258))))
(assert (= x801 (or x1884 x350)))
(assert (x642 x1378))
(assert (= x817 (=> (and (= x957 x1407) (= x284 0)) x1346)))
(assert (x642 x2036))
(assert (= x717 (and x328 x1969)))
(assert (= (or x1953 x1945 x2042 x458 x570 x886) x1440))
(assert (= x975 (and x88 x1339)))
(assert (x642 x1172))
(assert (x642 x2082))
(assert (x642 x1340))
(assert (= x1315 (and (not x1263) x1308)))
(assert (=> (>= 10000 x1178) (= (x689 x1178) (x1400 x1178))))
(assert (x642 x465))
(assert (= x648 (and x146 x1741)))
(assert (= x1695 (and x1712 x331)))
(assert (x642 x418))
(assert (= x1365 (x1497 (x689 x1365))))
(assert (= x914 (and x1428 (not x1306))))
(assert (x642 x673))
(assert (= (and x447 x1666) x401))
(assert (= (x689 18446744073709551615) (x1400 18446744073709551615)))
(assert (= x485 (=> (and (= x850 0) (= x1075 x660)) x1947)))
(assert (x977 x742))
(assert (= x368 (x1497 (x689 x368))))
(assert (= x2017 (and (not x1837) x2085)))
(assert (x642 x106))
(assert (x642 x893))
(assert (x642 x65))
(assert (x642 x219))
(assert (= x1058 (and x1551 (not x317))))
(assert (= (and x1426 x710) x1754))
(assert (x642 x1200))
(assert (x642 x680))
(assert (= x1465 (and x960 (not x878))))
(assert (x1863 x798))
(assert (x642 x1737))
(assert (=> (<= x1242 10000) (= (x1400 x1242) (x689 x1242))))
(assert (x642 x682))
(assert (= x1584 (x1497 (x689 x1584))))
(assert (x642 x2002))
(assert (x642 x658))
(assert (= (and x1331 (not x1322)) x803))
(assert (x642 x666))
(assert (x642 x266))
(assert (= x759 (and (not x1216) x470)))
(assert (x642 x287))
(assert (= (and x1228 x1965) x141))
(assert (x642 x479))
(assert (=> (>= 10000 x255) (= (x1400 x255) (x689 x255))))
(assert (= x852 (and x68 x1583)))
(assert (= (or x670 x1776) x2090))
(assert (= (and x1549 x182) x1251))
(assert (=> (>= 10000 x1876) (= (x1400 x1876) (x689 x1876))))
(assert (and (x1464 x1678 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1238 x1678 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x1516 x1678 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x225 x1678 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1678)) (x631 x1678 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x279 (and x303 x1648)))
(assert (= (and x1194 x1917) x1070))
(assert (= x649 (and (not x615) x1610)))
(assert (x642 x1476))
(assert (= (and x605 (not x372)) x427))
(assert (x642 x1747))
(assert (=> (>= 10000 x1877) (= (x689 x1877) (x1400 x1877))))
(assert (x642 x246))
(assert (x642 x386))
(assert (= x1770 (and (not x1299) x2014)))
(assert (x642 x1303))
(assert (x642 x1870))
(assert (x642 x200))
(assert (x642 x769))
(assert (= x1550 (and x1618 x1270)))
(assert (x606 x257))
(assert (x642 x1008))
(assert (x642 x286))
(assert (x642 x154))
(assert (=> (>= 10000 x1919) (= (x1400 x1919) (x689 x1919))))
(assert (x642 x2011))
(assert (= (and x252 x2061) x1449))
(assert (= (and x174 x388) x2075))
(assert (x642 x628))
(assert (x642 x1192))
(assert (= (x1497 (x1400 18446744073709551615)) 18446744073709551615))
(assert (= x1688 (and x575 x1758)))
(assert (x642 x1160))
(assert (= (and (not x382) x1431) x353))
(assert (x642 x1923))
(assert (x642 x1790))
(assert (= x877 (and x1648 (not x303))))
(assert (= x1851 (and (not x640) x122)))
(assert (x1863 x1678))
(assert (x642 x742))
(assert (= (and x530 x604) x570))
(assert (= x1854 (and x1010 x665)))
(assert (=> (<= x1565 10000) (= (x1400 x1565) (x689 x1565))))
(assert (=> (>= 10000 x1446) (= (x689 x1446) (x1400 x1446))))
(assert (= x499 (and x1371 x562)))
(assert (x642 x821))
(assert (= x286 (x1497 (x689 x286))))
(assert (x642 x435))
(assert (= x1567 (and (not x232) x1065)))
(assert (= (and (not x135) x260) x1443))
(assert (x642 x1139))
(assert (= x739 (and (not x250) x129)))
(assert (x642 x1665))
(assert (= (x1497 (x689 x56)) x56))
(assert (x642 x2051))
(assert (x977 x1961))
(assert (=> (>= 10000 x713) (= (x689 x713) (x1400 x713))))
(assert (= (and x232 x1065) x1612))
(assert (=> (>= 10000 x1167) (= (x689 x1167) (x1400 x1167))))
(assert (x642 x1068))
(assert (x642 x1730))
(assert (= (=> (and (= 0 x449) (= x1209 x957)) x646) x939))
(assert (= (and x1674 x1846) x1707))
(assert (= (and x789 (not x1734)) x978))
(assert (= (and (not x575) x1758) x139))
(assert (x642 x1998))
(assert (x642 x1107))
(assert (= (and x1048 x761) x723))
(assert (x642 x1805))
(assert (= (and x407 x661) x868))
(assert (x642 x1535))
(assert (= x552 (and x1837 x2085)))
(assert (x642 x271))
(assert (= (x1400 1173398607) (x689 1173398607)))
(assert (= x1121 (and (not x1794) x1614)))
(assert (x642 x504))
(assert (x606 x713))
(assert (x642 x1261))
(assert (x1786 x1355))
(assert (x642 x354))
(assert (x642 x784))
(assert (and (x301 32 x1800) (x983 32 x1800) (x157 32 x1800) (and (= (* 32 (- x1800 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x830 32 (- x1800 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x830 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1800) (- (* 32 x1800) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1800))) (= (x830 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1800 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x1800 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1800 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* 32 x1800) (x830 32 x1800)) (x1288 32 x1800) (x709 32 x1800)))
(assert (= x165 (and x1456 x433)))
(assert (x1863 x469))
(assert (x642 x313))
(assert (= x121 (and x288 (not x754))))
(assert (x642 x583))
(assert (x642 x1587))
(assert (= x1036 (and (not x1204) x1792)))
(assert (= (x1497 (x218 x811 1)) (+ (x1497 x811) 1)))
(assert (= (=> (and (= x619 x660) (= x262 0)) x256) x1067))
(assert (x642 x2057))
(assert (x642 x335))
(assert (= (or x731 x1069) x783))
(assert (= (and (not x331) x1712) x129))
(assert (x642 x930))
(assert (= (and x4 (not x487)) x1758))
(assert (x642 x894))
(assert (= x565 (and x911 (not x1188))))
(assert (x642 x1800))
(assert (x642 x1876))
(assert (= (x1497 (x689 x187)) x187))
(assert (x642 x1019))
(assert (x642 x332))
(assert (= x261 (=> (and (or (and (not x1561) (and (= x795 (not x33)) (= x33 (= x494 0)) (= 32 x1044) (= x1718 (ite x795 1 0)))) (and x1561 (and (= x241 (x136 (x689 x997))) (< 0 x241) (= 1 x1718)))) (and (= (= 0 x1044) x1561) (< 0 x1826))) x2053)))
(assert (x642 x1637))
(assert (x642 x748))
(assert (= (x1400 1461501637330902918203684832716283019655932542975) (x689 1461501637330902918203684832716283019655932542975)))
(assert (= (x1497 (x689 x1072)) x1072))
(assert (= x1042 (or x98 x1183 x148)))
(assert (= (x689 (x1497 x1576)) x1576))
(assert (= x654 (and x488 x351)))
(assert (x642 x385))
(assert (= x374 (and x1026 x1057)))
(assert (x642 x1893))
(assert (x642 x1839))
(assert (= x35 (and x924 x1726)))
(assert (= (and x508 x1680) x637))
(assert (= x306 (and (not x1881) x650)))
(assert (x642 x1828))
(assert (x642 x643))
(assert (= (and (not x19) x1838) x1222))
(assert (x642 x556))
(assert (x642 x1698))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1497 (x1400 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (= (x1497 (x689 x1233)) x1233))
(assert (= x1722 (and x1419 x1841)))
(assert (= x1100 (x1497 (x689 x1100))))
(assert (x642 x1574))
(assert (x642 x241))
(assert (= (x1497 (x689 x1974)) x1974))
(assert (=> (<= x1842 10000) (= (x689 x1842) (x1400 x1842))))
(assert (x642 x1151))
(assert (x642 x326))
(assert (x642 x1667))
(assert (= x1674 (and x1904 x96)))
(assert (= (and x1649 x1538) x127))
(assert (= x1825 (or x1049 x648 (and x91 x1181) (and x173 x206) (and (not x215) x1867) (and x417 x2065))))
(assert (= (and x49 (not x788)) x1672))
(assert (= (x1400 826074471) (x689 826074471)))
(assert (x642 x782))
(assert (x642 x1325))
(assert (= x2061 (and x1385 (not x853))))
(assert (x642 x415))
(assert (x642 x1262))
(assert (x642 x1018))
(assert (= (and x41 (not x2072)) x943))
(assert (= x1797 (and (not x602) x1568)))
(assert (and (= (x830 27 3) 81) (= (x830 3 3) 9) (= 27 (x830 9 3)) (= 81 (x830 9 9))))
(assert (x1170 1))
(assert (= x1317 (and x637 x1810)))
(assert (= x412 (and x1521 x2086)))
(assert (= (and x761 (not x1048)) x1237))
(assert (x1786 (- (x1497 x560) (x1497 x1576))))
(assert (x642 x1035))
(assert (= x910 (or x1409 x1824)))
(assert (=> (<= x286 10000) (= (x689 x286) (x1400 x286))))
(assert (x642 x1153))
(assert (x642 x991))
(assert (x642 x240))
(assert (x642 x2034))
(assert (= (and x95 (not x1063)) x1419))
(assert (x642 x609))
(assert (x642 x1359))
(assert (= (and x76 x1113) x1086))
(assert (x642 x1529))
(assert (x642 x1563))
(assert (= (=> (and (and (= x991 x1024) (>= 1461501637330902918203684832716283019655932542975 x24) (not (= 2514000705 x1147)) (< 0 x1335) (= x457 x894) (= x1751 x24) (= 3714247998 x1147) (not (= x1147 2376452955)) (not (= x1147 1889567281)) (not (= x1147 2835717307)) (= (x136 (x689 x1594)) x1335) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x457) (= x457 (x1807 x515)) (= (x1326 (x689 x24) (x1400 3) 0) x837) (not (< x1147 826074471)) (not (= x1147 826074471)) (>= 1461501637330902918203684832716283019655932542975 x1024) (= x515 (x1326 (x689 x1024) x837 0)) (<= 0 x457)) (and (and (and (and (= (= x1808 x1491) x2012) (= x828 x1139) (= x1491 x1256) (= x1808 x45)) (and (= x1805 x991) (= (x1326 (x689 x1805) x1929 0) x698) (not (= x112 2514000705)) (= x1093 x680) (>= 1461501637330902918203684832716283019655932542975 x559) (= x718 (x1053 x698)) (= x1751 x559) (<= x1805 1461501637330902918203684832716283019655932542975) (not (= x112 2376452955)) (not (= x112 1889567281)) (<= x718 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1929 (x1326 (x689 x559) (x1400 3) 0)) (<= 0 x718) (= x1711 (x136 (x689 x713))) (not (= 1086394137 x112)) (not (= x112 2835717307)) (< 0 x1711) (= x718 x1139) (not (> 1086394137 x112)) (= 3714247998 x112))) (and (<= 0 x1220) (not (= 1889567281 x1267)) (not (= x1267 2514000705)) (= x1751 x1565) (not (> 826074471 x1267)) (= x692 (x1326 (x689 x1072) x1264 0)) (> x1290 0) (not (= x1267 2376452955)) (= x991 x1072) (= x680 x1220) (= x1220 (x1943 x692)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1220) (= x1264 (x1326 (x689 x1565) (x1400 3) 0)) (>= 1461501637330902918203684832716283019655932542975 x1072) (= x1889 x846) (not (= 826074471 x1267)) (= (x136 (x689 x187)) x1290) (not (= 2835717307 x1267)) (>= 1461501637330902918203684832716283019655932542975 x1565) (= x1267 3714247998))) (and (>= 1461501637330902918203684832716283019655932542975 x1444) (not (= 3703996404 x968)) (= x1693 (x1326 (x689 x1444) x1713 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1993) (<= 0 x1993) (= x968 3714247998) (= x991 x1444) (not (< x968 3645313523)) (= (x1326 (x689 x338) (x1400 3) 0) x1713) (not (> 3065339685 x968)) (< 0 x1303) (= x1751 x338) (= x894 x1256) (= (x136 (x689 x1242)) x1303) (not (< x968 2376452955)) (<= x338 1461501637330902918203684832716283019655932542975) (= x1889 x1993) (= x1993 (x1348 x1693)) (not (= x968 3645313523))))) (and (=> (and (= x981 (= x639 x1512)) (= x1358 x1512) (= x639 x846)) (and x981 (=> (and (= x1095 x1093) (= x1668 (= x1206 x1095)) (= x1697 x1206)) (and x1668 (=> (and (= x214 (= x626 x1925)) (= x1925 x828) (= x674 x626)) x214))))) x2012)) x1599))
(assert (= (and x4 x487) x1605))
(assert (x642 x1012))
(assert (x642 x1753))
(assert (= (and x1571 x1120) x1987))
(assert (x642 x107))
(assert (= (x1497 (x689 x1035)) x1035))
(assert (x642 x2041))
(assert (= x531 (and (not x702) x1367)))
(assert (= (and (not x584) x1168) x96))
(assert (= x1878 (and x334 x535)))
(assert (x642 x718))
(assert (= x1167 (x1497 (x689 x1167))))
(assert (x642 x1740))
(assert (x642 x1225))
(assert (= (x1497 (x1400 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x642 x1892))
(assert (= (and x139 (not x1976)) x1821))
(assert (= (and x612 x1603) x1756))
(assert (x642 x1452))
(assert (x1863 x1701))
(assert (x642 x778))
(assert (= x185 (or x1507 x1572 x523 x1972 x783 x2090 x1955)))
(assert (x642 x968))
(assert (and (x1464 x1231 1461501637330902918203684832716283019655932542976) (x1238 x1231 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x1516 x1231 1461501637330902918203684832716283019655932542976) (* (x225 x1231 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x1231)) (x631 x1231 1461501637330902918203684832716283019655932542976)))
(assert (= 1889567281 (x1497 (x1400 1889567281))))
(assert (x1863 x1961))
(assert (x642 x1739))
(assert (x642 x596))
(assert (x642 x1127))
(assert (x642 x2044))
(assert (= (and (not x451) x906) x1815))
(assert (x642 x1144))
(assert (x642 x796))
(assert (= (or (and x1042 (not x452)) x699) x54))
(assert (= (and x924 (not x1726)) x813))
(assert (x642 x222))
(assert (= x1649 (and x958 (not x1252))))
(assert (x642 x1611))
(assert (= (and x1823 x188) x299))
(assert (x606 x568))
(assert (= x757 (and x1414 (not x26))))
(assert (x642 x721))
(assert (= (=> (and (= 0 x964) (= x2074 x957)) x209) x753))
(assert (x642 x134))
(assert (= 0 (x1608 (+ x1148 (- x1472 128)))))
(assert (= x459 (and x746 x1581)))
(assert (x642 x1289))
(assert (= (and x860 x2017) x1783))
(assert (x606 x559))
(assert (x642 x124))
(assert (= (and (not x1007) x679) x780))
(assert (x642 x1044))
(assert (= x1270 (and (not x318) x1851)))
(assert (= (and x1327 (not x267)) x1388))
(assert (x642 x792))
(assert (x236 32))
(assert (x642 x1072))
(assert (= (and x1890 (not x715)) x362))
(assert (x642 x403))
(assert (x642 x432))
(assert (= x442 (and x1308 x1263)))
(assert (= x418 (x1497 (x689 x418))))
(assert (x642 x1655))
(assert (x642 x1134))
(assert (= (and x1415 x2007) x288))
(assert (x606 x1514))
(assert (x642 x296))
(assert (x642 x132))
(assert (x642 x1606))
(assert (x642 x1670))
(assert (= x762 (=> (and (= x1844 x108) (not (> 4 x1844)) (= (or (> x1989 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1989 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x1989))) x2050) (= x686 x1127) (< 0 x1780) (= x854 128) (= x1529 61715998356568858511115630290676146828977781706927134410412890814919959642112) (not (= 1173398607 x576)) x992 (= (x1788 (- x1844 4)) x1989) (<= 100 x1844) (= (= x1800 (x1509 68)) x992) (= (x1788 (- x932 128)) x108) (= 2289173607 x576) (= x1780 (x136 (x689 x409)))) (and (=> (and (and (= true x553) (= x923 x686)) (not x2050)) (and (=> (and (not x553) (= x205 0)) x11) (=> (and x553 (= x383 (and (= true (<= x1844 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1844 99)))) (and (=> (and (and (= (< 18446744073709551615 x893) x665) (= x893 (x1161 68))) x383) (and (=> (and (and (= (< x1844 x808) x10) (= x766 (x83 (* 32 x893))) (= (x2078 (+ x766 100)) x808)) (not x665)) (and (=> (and (not x10) (and (= (< 0 x893) x1734) (= x147 (x1326 (x689 x686) (x1400 0) 0)))) (and (=> (and (= x205 0) (not x1734)) x11) (=> (and (and (= (x1001 1461501637330902918203684832716283019655932542975 x1961) x916) (= x1961 (x1161 100)) (= (= x1961 x916) x223)) x1734) (and (=> (and x223 (and (= x1134 (x1223 x1764)) (>= x1134 0) (= x1775 (> x833 0)) (<= x1134 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1326 (x689 x1961) x147 0) x1764))) (and (=> (and (= 0 x205) (not x1775)) x11) (=> (and (and (= x1156 (x1001 1461501637330902918203684832716283019655932542975 x742)) (= (x192 (x1400 1) 0) x380) (= x1203 (= x1156 x742)) (= (x1161 100) x742)) x1775) (and (=> (and (= (< 0 x833) x845) x1203) (and (=> (and (= x205 0) (not x845)) x11) (=> (and x845 (and (>= x1160 0) (= x1160 (x634 x93)) (= (= x742 x414) x1399) (= x589 128) (= (x192 (x1400 1) 0) x93) (<= x1160 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x1399) (= (= x1242 x742) x715)) (and (=> (and (and (not (< x1923 4)) (= x923 x1600) (= x1923 68) (= x2 (x136 (x689 x1242))) (= x584 (or (> x528 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x528)) (> 64 x528)))) (= x528 (x1788 (- x1923 4))) (= x1482 2835717307) (not (< x1482 2376452955)) (> x2 0) (= x1923 68) (= x1980 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x1160 x1234) (> 3065339685 x1482) (not (= x1482 2678909723)) (not (> 2678909723 x1482))) x715) (and (=> x584 x685) (=> (and (and (= x1904 (= x923 x1600)) (= x1600 x446)) (not x584)) (and (=> (not x1904) x685) (=> (and (and (= x1846 (< x1097 x1160)) (= x1624 x1234) (= (x282 x691) x1097) (<= x1097 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1326 (x689 x409) (x1400 2) 0) x691) (<= 0 x1097)) x1904) (and (=> (and (not x1846) (= x1063 (> x1234 x1097))) (and (=> (and (not x1063) (and (= (x1326 (x689 x409) (x1400 2) 0) x511) (= (x1788 (- x1097 x1234)) x204) (>= x244 0) (= x1841 (> x244 x1762)) (= (x1326 (x689 x1600) (x1400 2) 0) x1801) (= x244 (x2004 x1801)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x244) (= (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1234)) x1762))) (and (=> (and (and (= (x2078 (+ x244 x1234)) x1563) (= (> x244 x1563) x8)) (not x1841)) (and (=> x8 x685) (=> (and (not x8) (and (= x658 32) (= x993 (x1326 (x689 x1600) (x1400 2) 0)) (= x1142 1))) x745))) (=> x1841 x685))) (=> x1063 x685))) (=> x1846 x685))))))) (=> (and (not x715) (= x375 (= x1484 x742))) (and (=> (and x375 (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x888) (= x1160 x1012) (not (= 2376452955 x682)) (not (= 826074471 x682)) (= x682 2835717307) (= x1225 (x1788 (- x1333 4))) (= x923 x1919) (= 68 x1333) (not (> 4 x1333)) (not (< x682 826074471)) (= (or (and (> 64 x1225) (= true (<= x1225 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1225)) x2055) (> x259 0) (= x1333 68) (not (= 1889567281 x682)) (= x259 (x136 (x689 x1484))) (not (= 2514000705 x682)))) (and (=> (and (not x2055) (and (= x1302 (= x1919 x923)) (= x1919 x444))) (and (=> (not x1302) x1404) (=> (and (and (= x1965 (> x1160 x1789)) (<= x1789 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1326 (x689 x409) (x1400 2) 0) x638) (= x1012 x1073) (= x1789 (x191 x638)) (<= 0 x1789)) x1302) (and (=> (and (= x372 (> x1012 x1789)) (not x1965)) (and (=> (and (not x372) (and (= (x1788 (- x1789 x1012)) x405) (<= x832 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x2077 x832) x532) (= x1534 (x1326 (x689 x409) (x1400 2) 0)) (>= x832 0) (= x42 (x1326 (x689 x1919) (x1400 2) 0)) (= (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1012)) x2077) (= (x2023 x42) x832))) (and (=> x532 x1404) (=> (and (and (= x562 (< x1739 x832)) (= (x2078 (+ x1012 x832)) x1739)) (not x532)) (and (=> (and (not x562) (and (= x277 (x1326 (x689 x1919) (x1400 2) 0)) (= 32 x1184) (= 1 x1002))) x320) (=> x562 x1404))))) (=> x372 x1404))) (=> x1965 x1404))))) (=> x2055 x1404))) (=> (and (= x1715 (= x742 x187)) (not x375)) (and (=> (and x1715 (and (= x1178 x923) (= x274 x1160) (= x773 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 826074471 x1476)) (not (< x467 4)) (= x467 68) (not (= 2514000705 x1476)) (= x376 (x1788 (- x467 4))) (< 0 x222) (= x467 68) (not (= 826074471 x1476)) (= (or (and (> 64 x376) (= true (<= x376 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x376 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x61) (not (= x1476 2376452955)) (= x222 (x136 (x689 x187))) (not (= x1476 1889567281)) (= 2835717307 x1476))) (and (=> (and (and (= x1178 x720) (= (= x923 x1178) x1016)) (not x61)) (and (=> (not x1016) x817) (=> (and x1016 (and (= (< x1338 x1160) x1794) (= x274 x554) (<= x1338 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x920 (x1326 (x689 x409) (x1400 2) 0)) (= x1338 (x1298 x920)) (>= x1338 0))) (and (=> (and (= x92 (< x1338 x274)) (not x1794)) (and (=> x92 x817) (=> (and (and (= (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x274)) x234) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1874) (= x1552 (x1326 (x689 x1178) (x1400 2) 0)) (= (x873 x1552) x1874) (>= x1874 0) (= x102 (x1326 (x689 x409) (x1400 2) 0)) (= (x1788 (- x1338 x274)) x503) (= (< x234 x1874) x1666)) (not x92)) (and (=> x1666 x817) (=> (and (and (= (> x1874 x2015) x305) (= (x2078 (+ x1874 x274)) x2015)) (not x1666)) (and (=> x305 x817) (=> (and (and (= x1257 (x1326 (x689 x1178) (x1400 2) 0)) (= x284 1) (= 32 x1407)) (not x305)) x1346))))))) (=> x1794 x817))))) (=> x61 x817))) (=> (and (not x1715) (= (= x713 x742) x1454)) (and (=> (and x1454 (and (= x926 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x136 (x689 x713)) x287) (= 2835717307 x1582) (= 68 x512) (not (= x1582 1889567281)) (= x1100 x923) (> x287 0) (not (= 2514000705 x1582)) (= (or (> x1015 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1015) true) (< x1015 64))) x878) (= x1834 x1160) (not (> 4 x512)) (not (> 1086394137 x1582)) (not (= x1582 2376452955)) (= (x1788 (- x512 4)) x1015) (= 68 x512) (not (= x1582 1086394137)))) (and (=> (and (and (= (= x1100 x923) x40) (= x777 x1100)) (not x878)) (and (=> (not x40) x753) (=> (and x40 (and (= (x1326 (x689 x409) (x1400 2) 0) x1905) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6) (= x1970 (> x1160 x6)) (= (x422 x1905) x6) (<= 0 x6) (= x1342 x1834))) (and (=> x1970 x753) (=> (and (= (< x6 x1834) x7) (not x1970)) (and (=> x7 x753) (=> (and (and (= (x1326 (x689 x1100) (x1400 2) 0) x51) (= x1230 (x1326 (x689 x409) (x1400 2) 0)) (= x1351 (x1788 (- x6 x1834))) (= x216 (> x132 x1875)) (= (x30 x51) x132) (= (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1834)) x1875) (<= x132 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x132 0)) (not x7)) (and (=> (and (not x216) (and (= (< x441 x132) x323) (= x441 (x2078 (+ x1834 x132))))) (and (=> x323 x753) (=> (and (and (= x2074 32) (= (x1326 (x689 x1100) (x1400 2) 0) x272) (= x964 1)) (not x323)) x209))) (=> x216 x753))))))))) (=> x878 x753))) (=> (and (not x1454) (= x706 (= x1876 x742))) (and (=> (and (and (not (= 1889567281 x167)) (= x65 68) (not (< x167 826074471)) (= (x1788 (- x65 4)) x1337) (not (< x65 4)) (< 0 x949) (not (= x167 826074471)) (= x1694 (or (> x1337 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1337)) (< x1337 64)))) (not (= 2514000705 x167)) (= x1527 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 2835717307 x167) (= 68 x65) (= x758 x1160) (= x949 (x136 (x689 x1876))) (= x56 x923) (not (= x167 2376452955))) x706) (and (=> x1694 x903) (=> (and (and (= (= x56 x923) x1558) (= x56 x542)) (not x1694)) (and (=> (not x1558) x903) (=> (and (and (= x2070 (< x462 x1160)) (>= x462 0) (= x1099 x758) (= (x1326 (x689 x409) (x1400 2) 0) x25) (= (x577 x25) x462) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x462)) x1558) (and (=> x2070 x903) (=> (and (= x1214 (< x462 x758)) (not x2070)) (and (=> x1214 x903) (=> (and (and (= x163 (x150 x454)) (= x454 (x1326 (x689 x56) (x1400 2) 0)) (= (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x758)) x1441) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x163) (= x71 (x1788 (- x462 x758))) (= (< x1441 x163) x604) (= (x1326 (x689 x409) (x1400 2) 0) x245) (<= 0 x163)) (not x1214)) (and (=> (and (not x604) (and (= x738 (x2078 (+ x758 x163))) (= x1306 (> x163 x738)))) (and (=> (and (and (= (x1326 (x689 x56) (x1400 2) 0) x719) (= 1 x283) (= 32 x2066)) (not x1306)) x249) (=> x1306 x903))) (=> x604 x903))))))))))) (=> (and (not x706) (and (and (and (= x923 x929) (= x1160 x1710) (< 0 x897) (= x770 68) (not (= 1889567281 x764)) (not (< x770 4)) (= (x1788 (- x770 4)) x1293) (= x770 68) (not (= x764 2376452955)) (= x1664 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1293) (and (< x1293 64) (= (<= x1293 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x897 (x136 (x689 x1594))) (not (= 826074471 x764)) (not (< x764 826074471)) (= x1087 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x764 2514000705)) (= x764 2835717307)) x267) (= (= x1594 x742) x267))) (and (=> x1664 x78) (=> (and (and (= x1727 x929) (= (= x929 x923) x114)) (not x1664)) (and (=> (not x114) x78) (=> (and x114 (and (= x378 (x1946 x224)) (= x504 x1710) (<= x378 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x224 (x1326 (x689 x409) (x1400 2) 0)) (= x1026 (> x1160 x378)) (<= 0 x378))) (and (=> (and (not x1026) (= x331 (> x1710 x378))) (and (=> x331 x78) (=> (and (and (= (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1710)) x196) (= x1226 (x1767 x892)) (= x892 (x1326 (x689 x929) (x1400 2) 0)) (>= x1226 0) (= x1157 (x1326 (x689 x409) (x1400 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1226) (= x250 (< x196 x1226)) (= x1080 (x1788 (- x378 x1710)))) (not x331)) (and (=> x250 x78) (=> (and (not x250) (and (= x510 (> x1226 x677)) (= (x2078 (+ x1226 x1710)) x677))) (and (=> (and (and (= (x1326 (x689 x929) (x1400 2) 0) x1564) (= 32 x1804) (= 1 x403)) (not x510)) x230) (=> x510 x78))))))) (=> x1026 x78))))))))))))))))) (=> (and (and (> x1198 0) (> 3065339685 x1172) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2051) (= x1172 2835717307) (= x1365 x923) (= (or (> x1281 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x1281) (= true (<= x1281 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1249) (not (> 2376452955 x1172)) (= (x136 (x689 x414)) x1198) (not (> 4 x1991)) (= (x1788 (- x1991 4)) x1281) (= 68 x1991) (= 68 x1991) (= x1151 x1160) (not (= 2678909723 x1172)) (not (> 2678909723 x1172))) x1399) (and (=> (and (not x1249) (and (= x1354 x1365) (= x1969 (= x923 x1365)))) (and (=> (not x1969) x939) (=> (and x1969 (and (= x1401 (x308 x1105)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1401) (= (x1326 (x689 x409) (x1400 2) 0) x1105) (= x385 x1151) (<= 0 x1401) (= x1817 (< x1401 x1160)))) (and (=> x1817 x939) (=> (and (= x1957 (> x1151 x1401)) (not x1817)) (and (=> (and (and (= x791 (x1326 (x689 x409) (x1400 2) 0)) (= x451 (< x1374 x1755)) (= x1374 (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1151))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1755) (= x1755 (x1990 x445)) (>= x1755 0) (= x1088 (x1788 (- x1401 x1151))) (= (x1326 (x689 x1365) (x1400 2) 0) x445)) (not x1957)) (and (=> x451 x939) (=> (and (not x451) (and (= (x2078 (+ x1755 x1151)) x1451) (= (> x1755 x1451) x601))) (and (=> x601 x939) (=> (and (not x601) (and (= (x1326 (x689 x1365) (x1400 2) 0) x947) (= x449 1) (= 32 x1209))) x646))))) (=> x1957 x939))))))) (=> x1249 x939))))))) (=> (and (= 0 x205) (not x1203)) x11))))) (=> (and (= 0 x205) (not x223)) x11))))) (=> (and x10 (= 0 x205)) x11))) (=> (and x665 (= 0 x205)) x11))) (=> (and (= x205 0) (not x383)) x11))))) (=> (and (and (= 0 x1460) (= x1508 x1861)) x2050) x1996)))))
(assert (x642 x1101))
(assert (x606 x1100))
(assert (x642 x327))
(assert (= (and x1445 x1954) x329))
(assert (= x935 (and (not x375) x362)))
(assert (=> (>= 10000 x1365) (= (x1400 x1365) (x689 x1365))))
(assert (x642 x1584))
(assert (x642 x1710))
(assert (= x2080 (and x1647 (not x1970))))
(assert (x642 x1748))
(assert (= (=> (and (and (>= x1364 0) (not (= x187 x1974)) (<= 0 x373) (not (< x1000 2376452955)) (not (= x1446 x414)) (= x1268 (< 0 (x136 (x689 x409)))) (<= x2038 1461501637330902918203684832716283019655932542975) (= x1876 x1185) (>= 1461501637330902918203684832716283019655932542975 x1030) (not (= x1127 x1446)) (<= x1594 1461501637330902918203684832716283019655932542975) (<= x1446 1461501637330902918203684832716283019655932542975) (= x1030 x1594) (not (= x1876 x409)) (<= 0 x1081) (not (= x1974 x1876)) (<= x398 1461501637330902918203684832716283019655932542975) (= x1944 (> (x136 (x689 x187)) 0)) (>= x1332 0) (not (= x414 x409)) (= x1607 x1866) (>= x1408 0) (not (= x1484 x187)) (= x1020 x713) (<= x187 1461501637330902918203684832716283019655932542975) (not (= x1446 x1974)) (= x291 x713) (= x1115 (x136 (x689 x1127))) (not (= x1446 x1876)) (not (= x1127 x414)) (= x392 (x370 (x689 x1242))) (not (= x1594 x713)) (not (= x1974 x414)) (not (= x1484 x1446)) (not (= x1446 x713)) (< 0 x1446) (= (> (x136 (x689 x1484)) 0) x1205) (>= 1461501637330902918203684832716283019655932542975 x373) (>= 1461501637330902918203684832716283019655932542975 x1008) (>= 1461501637330902918203684832716283019655932542975 x1020) x1944 x1268 (>= x851 0) (<= x1542 1461501637330902918203684832716283019655932542975) (not (= x713 x1974)) (not (= x187 x414)) (= (x370 (x689 x187)) x145) (not (= x713 x414)) (<= x1370 1461501637330902918203684832716283019655932542975) (> x713 0) (>= x1030 0) (= x722 (x370 (x689 x713))) (> x1974 0) (< 0 x187) (= (x370 (x689 x1876)) x66) (not (= x1242 x1484)) (not (= x1876 x414)) (= x1876 x1240) (not (= x1484 x1127)) (<= 0 x145) (>= x1185 0) (not (= x1484 x1594)) (>= x398 0) (= (x370 (x689 x1484)) x1936) (= (< 0 (x136 (x689 x414))) x79) (not (= x1484 x1974)) (not (= x1242 x1127)) (< 0 x409) (not (= x713 x1242)) (= x672 false) (<= x409 1461501637330902918203684832716283019655932542975) (= x652 false) (>= 1461501637330902918203684832716283019655932542975 x119) (not (= x1974 x1127)) (not (< x1000 2569309863)) (<= x2013 1461501637330902918203684832716283019655932542975) (>= x291 0) (= x829 false) (>= x66 0) (= x629 (x370 (x689 x414))) (>= x2013 0) (not (= x414 x1242)) (not (= x713 x1127)) (= x713 x1542) (>= x1370 0) (= x1654 (> (x136 (x689 x1446)) 0)) (>= x1490 0) (< 0 x1876) (not (= x1242 x1446)) (not (= x414 x1594)) (>= 1461501637330902918203684832716283019655932542975 x1484) (>= 1461501637330902918203684832716283019655932542975 x1240) (<= 0 x1008) (< 0 x1115) (not (= x409 x1127)) (= (x1001 1461501637330902918203684832716283019655932542975 x1701) x1607) (<= x1127 1461501637330902918203684832716283019655932542975) (not (= x1876 x1242)) (not (= x409 x1594)) (= (x370 (x689 x1127)) x1190) (>= 1461501637330902918203684832716283019655932542975 x414) (>= x1870 0) (not (= x1242 x409)) (<= x1876 1461501637330902918203684832716283019655932542975) (not (= x713 x1484)) x1334 (= (< 0 (x136 (x689 x713))) x1334) x152 (= x398 x1146) (<= 0 x1936) (= 1195755010 x862) (< x1000 2952933380) (> x1127 0) x158 (not (= x1876 x1594)) (>= 1461501637330902918203684832716283019655932542975 x1155) (<= 0 x1240) x79 (= (> (x136 (x689 x1127)) 0) x496) (<= 0 x119) x1205 (<= 0 x2038) (not (= x1242 x187)) (< 0 x1484) (>= x1637 0) (>= 1461501637330902918203684832716283019655932542975 x1332) (>= 1461501637330902918203684832716283019655932542975 x713) (= x158 (> (x136 (x689 x1242)) 0)) (>= 1461501637330902918203684832716283019655932542975 x291) (not (= x1594 x1242)) (not (= x1484 x414)) (not (= x187 x1594)) (not (= x409 x1484)) (<= x1242 1461501637330902918203684832716283019655932542975) (not (= x187 x409)) (not (= x1876 x1127)) (not (= x1594 x1446)) (= (x370 (x689 x1974)) x1345) (not (= x187 x1446)) x1654 (not (= x187 x713)) (> x414 0) (<= x851 1461501637330902918203684832716283019655932542975) (= (x370 (x689 x1446)) x1081) (>= 1461501637330902918203684832716283019655932542975 x1974) (<= 0 x1155) (not (= x187 x1127)) (= (> (x136 (x689 x1594)) 0) x330) (>= 1461501637330902918203684832716283019655932542975 x1870) x153 (not (= x713 x1876)) (= x119 x371) (= x1594 x1008) (<= x1185 1461501637330902918203684832716283019655932542975) (= x1000 2569309863) (>= 1461501637330902918203684832716283019655932542975 x1117) (<= 0 x1020) (< 0 x1594) (not (= x1974 x409)) (= x1394 1) (>= 1461501637330902918203684832716283019655932542975 x1408) (not (= x409 x1446)) (<= 0 x1190) (= (< 0 (x136 (x689 x1876))) x152) (= x153 (< 0 (x136 (x689 x1974)))) (<= 0 x629) (<= 0 x392) (<= x1364 1461501637330902918203684832716283019655932542975) (<= x1653 1461501637330902918203684832716283019655932542975) (>= x1345 0) x330 x496 (not (= x713 x409)) (< 0 x1242) (not (= x1594 x1974)) (not (= x187 x1876)) (not (= x1484 x1876)) (>= x1653 0) (>= x1117 0) (= x1637 (x370 (x689 x1594))) (not (= x1242 x1974)) (= x1490 (x370 (x689 x409))) (>= x722 0) (not (= x1127 x1594)) (<= 0 x1542) (= x529 false)) (and (and (not (< x434 2569309863)) (= x1866 x671) (= x967 x519) (> x694 0) (= x525 (= x671 x1289)) (not (< x434 2376452955)) (= x694 (x136 (x689 x1127))) (= (x1001 1461501637330902918203684832716283019655932542975 x1701) x967) (= 2569309863 x434) (< x434 2952933380) (= x1289 x1594)) (and (and (and (= x1855 (x505 x333)) (not (< x1076 3645313523)) (not (< x1076 3065339685)) (>= 1461501637330902918203684832716283019655932542975 x1077) (not (> 2376452955 x1076)) (not (= x1076 3645313523)) (= x364 (x136 (x689 x1242))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1855) (= x333 (x1326 (x689 x1077) x595 0)) (> x364 0) (= (x1326 (x689 x1126) (x1400 3) 0) x595) (= x1076 3714247998) (>= 1461501637330902918203684832716283019655932542975 x1126) (= x571 x45) (= x1855 x1280) (not (= x1076 3703996404)) (= x991 x1077) (= x1126 x1751) (>= x1855 0)) (and (and (= x991 x1842) (= x1979 3714247998) (= x1358 x1280) (< 0 x292) (= x292 (x136 (x689 x187))) (not (= x1979 826074471)) (<= 0 x876) (not (= x1979 2376452955)) (not (> 826074471 x1979)) (not (= x1979 2514000705)) (= (x1326 (x689 x1842) x94 0) x727) (= x876 (x919 x727)) (not (= x1979 1889567281)) (>= 1461501637330902918203684832716283019655932542975 x1842) (= x1584 x1751) (not (= x1979 2835717307)) (= x627 x876) (>= 1461501637330902918203684832716283019655932542975 x1584) (<= x876 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x94 (x1326 (x689 x1584) (x1400 3) 0))) (and (and (= x643 (x2078 (+ x213 4))) (not (< 18446744073709551615 x1800)) (= x1591 x586) (not (< x1836 893399075)) (not (> x645 x572)) (not (> 4 x572)) (= x580 x1591) (<= x728 1461501637330902918203684832716283019655932542975) (= x14 (x136 (x689 x1127))) (> 1762712782 x1836) (<= 0 x1894) (<= 0 x728) (= x728 x371) (<= 0 x580) (= x819 (x2078 (+ 31 x643))) (> x14 0) (and (> x572 35) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x572))) (= (x1788 (- x572 4)) x1684) (= x1745 x213) (not (or (> x1684 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x1684) (= true (<= x1684 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= 1195755010 x1836) (not (= x1836 893399075)) (= x1003 0) (> 2376452955 x1836) (= (x83 (* x1800 32)) x15) (>= 1461501637330902918203684832716283019655932542975 x580) (or (and (> x572 x819) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x819) (<= x572 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x819 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x572))) (not (= 1083311676 x1836)) (not (> x1745 18446744073709551615)) (= (> x1800 0) x382) (= x1800 (x1085 x643)) (= x1359 x674) (= (x2078 (+ x643 32)) x1387) (= x645 (x2078 (+ x15 x1387))) (= x527 x1003) (>= 1461501637330902918203684832716283019655932542975 x1894)) (and (not (= 1889567281 x826)) (= (x1326 (x689 x258) x1629 0) x304) (= x1359 x1246) (= x991 x258) (not (> 1086394137 x826)) (not (= 2376452955 x826)) (= (x1326 (x689 x257) (x1400 3) 0) x1629) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1246) (not (= x826 2835717307)) (= x627 x1697) (not (= 1086394137 x826)) (= x1246 (x509 x304)) (<= x257 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x258) (not (= 2514000705 x826)) (>= x1246 0) (= (x136 (x689 x713)) x363) (= x1751 x257) (= 3714247998 x826) (> x363 0))))) (and (<= 0 x588) (>= 1461501637330902918203684832716283019655932542975 x1751) (<= 0 x991) (not (= x1434 2376452955)) (<= x666 1461501637330902918203684832716283019655932542975) x551 (not (< x1434 826074471)) (= x1434 3714247998) (< 0 x2034) (= (x1326 (x689 x1245) (x1400 3) 0) x1733) (not (= x1434 2835717307)) (= (x1511 x1056) x588) (= x666 x991) (>= x1751 0) (>= 1461501637330902918203684832716283019655932542975 x991) (= x596 x519) (= (x1326 (x689 x666) x1733 0) x1056) (not (= 826074471 x1434)) (= x439 x1876) (= (or x525 x2067) x551) (= x2067 (= x596 x439)) (not (= x1434 1889567281)) (= (x136 (x689 x1594)) x2034) (>= 1461501637330902918203684832716283019655932542975 x1245) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x588) (= x1751 x1245) (= x588 x571) (not (= 2514000705 x1434)))))) (and (=> (and (= x932 228) (not x382)) x762) (=> x382 x1064))) x2046))
(assert (and (x1464 x798 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1238 x798 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x1516 x798 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x225 x798 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x798)) (x631 x798 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x642 x917))
(assert (x642 x1653))
(assert (x642 x462))
(assert (= (x1497 (x689 x1842)) x1842))
(assert (= (and x759 (not x1296)) x998))
(assert (= (and x1532 x1895) x1027))
(assert (x642 x155))
(assert (= x146 (and (not x1984) x2081)))
(assert (= x1985 (and x1621 (not x2010))))
(assert (= (x1802 292) 0))
(assert (= x816 (and x216 x342)))
(assert (x642 x923))
(assert (= (and x1814 (not x1903)) x251))
(assert (= 1762712782 (x1497 (x1400 1762712782))))
(assert (= (and x871 x1858) x1683))
(assert (= (and x869 x1058) x1632))
(assert (x642 x1469))
(assert (= x1572 (or x1384 x486)))
(assert (= (and x288 x754) x768))
(assert (x642 x938))
(assert (x642 x112))
(assert (x642 x1640))
(assert (= (=> (and (= x473 x1964) (= 0 x465)) x1390) x838))
(assert (= (and x2069 x2037) x1981))
(assert (=> (<= x187 10000) (= (x1400 x187) (x689 x187))))
(assert (x1170 (x83 (- (x1497 x560) (x1497 x1576)))))
(assert (x642 x932))
(assert (x642 x406))
(assert (x642 x1129))
(assert (= (=> (and (= (x1347 x1796) x954) (= x1140 (not (> x954 1)))) (and x1599 x1140)) x514))
(assert (= x1871 (and (not x85) x1103)))
(assert (x642 x766))
(assert (x642 x1439))
(assert (= x1776 (and x1371 (not x562))))
(assert (= (and x1252 x958) x138))
(assert (x642 x1604))
(assert (x642 x777))
(assert (x1786 x798))
(assert (x642 x704))
(assert (= (and (not x1523) x1938) x339))
(assert (x642 x1977))
(assert (x642 x729))
(assert (x642 x1658))
(assert (= x1809 (and (not x508) x1680)))
(assert (= (and x781 x1036) x1478))
(assert (= x1947 (=> (and (= x850 x1039) (= x1962 x1075)) x1196)))
(assert (x642 x1147))
(assert (x642 x627))
(assert (= (or x1301 x1899) x607))
(assert (x642 x167))
(assert (= (x1400 61715998356568858511115630290676146828977781706927134410412890814919959642112) (x689 61715998356568858511115630290676146828977781706927134410412890814919959642112)))
(assert (= (and x1785 x87) x1221))
(assert (x642 x713))
(assert (x642 x444))
(assert (x642 x17))
(assert (x642 x876))
(assert (x1786 32))
(assert (= (and (not x970) x1784) x471))
(assert (x642 x1231))
(assert (= (=> (and (= x1673 (x1705 x1796)) (= x1803 (> x1673 0))) (and (=> (not x1803) x1599) (=> (and (and (= x2027 (> x1011 0)) (= x1102 (x2078 (+ 32 x1796))) (< 0 x406) (= (x1705 x1102) x1011) (= (x1705 x1796) x406)) x1803) (and (=> (not x2027) x514) (=> (and x2027 (and (= x1387 x464) (= (x1705 x1102) x1640) (= x962 (x2078 (+ x623 4))) (= (x1085 x464) x997) (= (x1001 1461501637330902918203684832716283019655932542975 x1227) x663) (= (x1705 x1796) x740) (= x1266 (= x414 x997)) (= x1023 (x2078 (+ 32 x962))) (< 0 x1800) (> x740 0) (>= 1461501637330902918203684832716283019655932542975 x997))) (and (=> (and (and (not (> 2678909723 x1224)) (= x1604 68) (= x501 (x136 (x689 x414))) (> 3065339685 x1224) (not (= 2678909723 x1224)) (< 0 x501) (= (or (and (> 64 x931) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x931))) (> x931 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x417) (= x931 (x1788 (- x1604 4))) (= x1452 x1640) (= x1224 2835717307) (not (< x1604 4)) (not (> 2376452955 x1224)) (= x628 x663) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1176)) x1266) (and (=> (and (not x417) (and (= x628 x178) (= (= x663 x628) x215))) (and (=> (and (and (<= 0 x36) (= x1452 x326) (= x36 (x1968 x67)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x36) (= x67 (x1326 (x689 x1127) (x1400 2) 0)) (= x91 (> x1640 x36))) x215) (and (=> (and (= x1984 (> x1452 x36)) (not x91)) (and (=> x1984 x1312) (=> (and (not x1984) (and (= (> x309 x1259) x1741) (= x1530 (x1326 (x689 x628) (x1400 2) 0)) (= x1259 (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1452))) (= x1949 (x1788 (- x36 x1452))) (>= x309 0) (= x750 (x1326 (x689 x1127) (x1400 2) 0)) (= (x58 x1530) x309) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x309))) (and (=> (and (not x1741) (and (= x1192 (x2078 (+ x309 x1452))) (= (> x309 x1192) x206))) (and (=> (and (not x206) (and (= 1 x235) (= x134 x280) (= 32 x1054))) x1447) (=> x206 x1312))) (=> x1741 x1312))))) (=> x91 x1312))) (=> (not x215) x1312))) (=> x417 x1312))) (=> (and (not x1266) (= (= x997 x1242) x1113)) (and (=> (and (and (= x1250 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x995)) (> 64 x995)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x995))) (< 0 x126) (= x701 68) (= x995 (x1788 (- x701 4))) (not (< x1084 2678909723)) (not (> 2376452955 x1084)) (< x1084 3065339685) (not (< x701 4)) (= x126 (x136 (x689 x1242))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x729) (= x1084 2835717307) (not (= x1084 2678909723)) (= x1640 x1135) (= x255 x663)) x1113) (and (=> x1250 x1475) (=> (and (not x1250) (and (= (= x255 x663) x47) (= x1994 x255))) (and (=> (and x47 (and (<= 0 x711) (= x1104 (< x711 x1640)) (= (x1326 (x689 x1127) (x1400 2) 0) x2064) (= x17 x1135) (<= x711 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1461 x2064) x711))) (and (=> x1104 x1475) (=> (and (= (< x711 x1135) x872) (not x1104)) (and (=> (and (and (= (x1326 (x689 x255) (x1400 2) 0) x807) (= x1158 (x1326 (x689 x1127) (x1400 2) 0)) (= (x1788 (- x711 x1135)) x940) (= x130 (x1368 x807)) (<= 0 x130) (= (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1135)) x1892) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x130) (= x788 (> x130 x1892))) (not x872)) (and (=> x788 x1475) (=> (and (and (= (x2078 (+ x130 x1135)) x107) (= x1307 (> x130 x107))) (not x788)) (and (=> x1307 x1475) (=> (and (not x1307) (and (= x1467 32) (= x1635 1) (= x704 x1615))) x1602))))) (=> x872 x1475))))) (=> (not x47) x1475))))) (=> (and (= x317 (= x1484 x997)) (not x1113)) (and (=> (and (not x317) (= x869 (= x997 x187))) (and (=> (and (and (not (= 1889567281 x155)) (not (< x155 826074471)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x314) (not (< x1029 4)) (not (= x155 2514000705)) (= 68 x1029) (not (= x155 826074471)) (= (x136 (x689 x187)) x840) (= (or (> x1207 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1207 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1207))) x558) (not (= 2376452955 x155)) (> x840 0) (= x155 2835717307) (= x1514 x663) (= x624 x1640) (= (x1788 (- x1029 4)) x1207)) x869) (and (=> (and (and (= x1571 (= x663 x1514)) (= x1514 x721)) (not x558)) (and (=> (and (and (= x271 x624) (= x2079 (x1326 (x689 x1127) (x1400 2) 0)) (>= x904 0) (= (< x904 x1640) x684) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x904) (= x904 (x1427 x2079))) x1571) (and (=> (and (not x684) (= (> x624 x904) x487)) (and (=> x487 x1421) (=> (and (not x487) (and (= x1143 (x1788 (- x904 x624))) (= (x421 x534) x327) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x327) (= (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x624)) x386) (<= 0 x327) (= x575 (> x327 x386)) (= (x1326 (x689 x1514) (x1400 2) 0) x534) (= x1163 (x1326 (x689 x1127) (x1400 2) 0)))) (and (=> x575 x1421) (=> (and (and (= (> x327 x1159) x1976) (= (x2078 (+ x624 x327)) x1159)) (not x575)) (and (=> (and (not x1976) (and (= x1988 x468) (= 32 x335) (= 1 x125))) x1662) (=> x1976 x1421))))))) (=> x684 x1421))) (=> (not x1571) x1421))) (=> x558 x1421))) (=> (and (not x869) (= x1128 (= x997 x713))) (and (=> (and (not x1128) (= (= x997 x1876) x898)) (and (=> (and (and (= (= x1594 x997) x2033) (and (and (= (x1788 (- x21 4)) x973) (= x1422 (or (and (= true (<= x973 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x973)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x973))) (not (= 1889567281 x1927)) (not (= 826074471 x1927)) (= x1717 (x136 (x689 x1594))) (= 2835717307 x1927) (not (< x21 4)) (not (= x1927 2514000705)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x653) (= x1640 x1271) (not (> 826074471 x1927)) (= 68 x21) (not (= 2376452955 x1927)) (= x368 x663) (> x1717 0)) x2033)) (not x898)) (and (=> x1422 x1738) (=> (and (not x1422) (and (= x520 (= x368 x663)) (= x172 x368))) (and (=> (not x520) x1738) (=> (and x520 (and (= x573 (< x1179 x1640)) (= x1179 (x1880 x2006)) (>= x1179 0) (= x2040 x1271) (<= x1179 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2006 (x1326 (x689 x1127) (x1400 2) 0)))) (and (=> x573 x1738) (=> (and (not x573) (= (> x1271 x1179) x1204)) (and (=> (and (not x1204) (and (= (x1326 (x689 x368) (x1400 2) 0) x1593) (= (x1326 (x689 x1127) (x1400 2) 0) x72) (<= x298 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1788 (- x1179 x1271)) x1998) (= (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1271)) x1423) (= (x2054 x1593) x298) (<= 0 x298) (= x781 (< x1423 x298)))) (and (=> (and (not x781) (and (= x1322 (< x246 x298)) (= (x2078 (+ x298 x1271)) x246))) (and (=> x1322 x1738) (=> (and (not x1322) (and (= x3 x2002) (= 32 x1499) (= 1 x361))) x1729))) (=> x781 x1738))) (=> x1204 x1738))))))))) (=> (and (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x567) (not (= x1215 826074471)) (= x1849 (x136 (x689 x1876))) (= (or (and (= (<= x1906 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1906)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1906)) x1503) (not (= x1215 2514000705)) (not (< x1215 826074471)) (= (x1788 (- x1325 4)) x1906) (not (= x1215 1889567281)) (= x1640 x669) (not (> 4 x1325)) (= x1215 2835717307) (not (= 2376452955 x1215)) (> x1849 0) (= x1325 68) (= x1233 x663)) x898) (and (=> x1503 x799) (=> (and (and (= x343 (= x663 x1233)) (= x1233 x1765)) (not x1503)) (and (=> (not x343) x799) (=> (and (and (= (< x1914 x1640) x1830) (= (x1326 (x689 x1127) (x1400 2) 0) x641) (= x1914 (x1413 x641)) (= x1378 x669) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1914) (>= x1914 0)) x343) (and (=> (and (not x1830) (= x1031 (< x1914 x669))) (and (=> (and (not x1031) (and (= x1092 (x1326 (x689 x1233) (x1400 2) 0)) (<= 0 x1743) (= (> x1743 x1201) x582) (= (x1050 x1092) x1743) (= x927 (x1326 (x689 x1127) (x1400 2) 0)) (= (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x669)) x1201) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1743) (= x1942 (x1788 (- x1914 x669))))) (and (=> (and (and (= (x2078 (+ x669 x1743)) x181) (= x495 (< x181 x1743))) (not x582)) (and (=> (and (and (= x748 x270) (= x1748 32) (= 1 x219)) (not x495)) x632) (=> x495 x799))) (=> x582 x799))) (=> x1031 x799))) (=> x1830 x799))))))))) (=> (and x1128 (and (= x1369 2835717307) (= x1395 68) (= x190 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 2376452955 x1369)) (= x1640 x1284) (not (= x1369 1889567281)) (= (or (and (= (<= x143 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x143)) (> x143 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x492) (not (> 1086394137 x1369)) (not (= 1086394137 x1369)) (= x143 (x1788 (- x1395 4))) (not (> 4 x1395)) (= x974 (x136 (x689 x713))) (< 0 x974) (= x663 x1611) (not (= x1369 2514000705)))) (and (=> x492 x675) (=> (and (not x492) (and (= x956 (= x1611 x663)) (= x1611 x907))) (and (=> (and (and (= (x1326 (x689 x1127) (x1400 2) 0) x2001) (= x1284 x1619) (<= 0 x1200) (<= x1200 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x1200 x1640) x221) (= x1200 (x1377 x2001))) x956) (and (=> (and (not x221) (= x905 (< x1200 x1284))) (and (=> (and (not x905) (and (>= x2041 0) (= (x1788 (- x1200 x1284)) x839) (= x1902 (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1284))) (= (> x2041 x1902) x1744) (= x2041 (x994 x1279)) (= x1279 (x1326 (x689 x1611) (x1400 2) 0)) (<= x2041 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x59 (x1326 (x689 x1127) (x1400 2) 0)))) (and (=> x1744 x675) (=> (and (and (= x1017 (x2078 (+ x2041 x1284))) (= x85 (< x1017 x2041))) (not x1744)) (and (=> x85 x675) (=> (and (and (= x1488 x1574) (= 32 x239) (= 1 x1517)) (not x85)) x1816))))) (=> x905 x675))) (=> x221 x675))) (=> (not x956) x675))))))))) (=> (and x317 (and (not (< x1665 826074471)) (= (x1788 (- x1106 4)) x617) (not (= x1665 1889567281)) (= x1429 (or (> x617 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x617)) (< x617 64)))) (= x1665 2835717307) (= x556 x1640) (not (< x1106 4)) (= x1035 x663) (not (= 2376452955 x1665)) (= (x136 (x689 x1484)) x796) (< 0 x796) (not (= 826074471 x1665)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x778) (not (= 2514000705 x1665)) (= 68 x1106))) (and (=> (and (and (= x1313 (= x663 x1035)) (= x848 x1035)) (not x1429)) (and (=> (not x1313) x533) (=> (and (and (<= 0 x1382) (= (< x1382 x1640) x785) (= (x1827 x1022) x1382) (= x889 x556) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1382) (= x1022 (x1326 (x689 x1127) (x1400 2) 0))) x1313) (and (=> (and (not x785) (= x1982 (< x1382 x556))) (and (=> x1982 x533) (=> (and (not x1982) (and (= (x1788 (- x1382 x556)) x2045) (= x1066 (x1788 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x556))) (= x408 (> x2057 x1066)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2057) (= x394 (x1326 (x689 x1127) (x1400 2) 0)) (<= 0 x2057) (= x2057 (x1323 x550)) (= x550 (x1326 (x689 x1035) (x1400 2) 0)))) (and (=> (and (and (= (x2078 (+ x2057 x556)) x424) (= x602 (> x2057 x424))) (not x408)) (and (=> x602 x533) (=> (and (and (= x1909 1) (= x1676 32) (= x118 x569)) (not x602)) x140))) (=> x408 x533))))) (=> x785 x533))))) (=> x1429 x533))))))))))))) x1229))
(assert (x642 x624))
(assert (= x598 (and x555 (not x1016))))
(assert (= (x1497 (x689 x414)) x414))
(assert (x642 x1677))
(assert (x642 x161))
(assert (x642 x283))
(assert (x642 x1285))
(assert (= x1416 (and x1094 (not x492))))
(assert (= (and x1897 (not x383)) x193))
(assert (= x685 (=> (and (= x1142 0) (= x658 x957)) x745)))
(assert (= (and x1296 x759) x122))
(assert (= x1330 (and x1061 x1921)))
(assert (= x1601 (and x388 (not x174))))
(assert (=> (<= x1072 10000) (= (x1400 x1072) (x689 x1072))))
(assert (x642 x1484))
(assert (x642 x309))
(assert (= x23 (=> (and (= x124 x142) (= x1795 x57) (= (x1788 (- x231 x1148)) x887) (= x1386 x231) (= x779 (x83 (* x124 32))) (= (x2078 (+ x779 x1901)) x1795) (= x887 x1508) (= x1386 (x2078 (+ x793 x2035))) (= x1460 1) (= x2035 (x83 (* x124 32)))) x1996)))
(assert (= x482 (or x138 x2068 x733 x137 x690 x127)))
(assert (x977 x9))
(assert (= 61715998356568858511115630290676146828977781706927134410412890814919959642112 (x1497 (x1400 61715998356568858511115630290676146828977781706927134410412890814919959642112))))
(assert (x642 x257))
(assert (x1863 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (and x723 x1513) x1304))
(assert (= x809 (or x2089 x752 x1040 x1783 x165 x552)))
(assert (x642 x931))
(assert (=> (>= 10000 x1554) (= (x689 x1554) (x1400 x1554))))
(assert (= (x689 3714247998) (x1400 3714247998)))
(assert (x642 x142))
(assert (= (and x2048 (not x522)) x787))
(assert (= x1723 (and (not x1538) x1649)))
(assert (= x1792 (and (not x573) x1349)))
(assert (let ((x835 (- (x1497 x560) (x1497 x1576)))) (and (x1464 x835 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1238 x835 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x1516 x835 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x225 x835 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x835)) (x631 x835 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (x642 x1087))
(assert (x642 x711))
(assert (x606 x491))
(assert (= x1769 (and x620 x662)))
(assert (x642 x758))
(assert (x642 x1110))
(assert (= x478 (and (not x1217) x946)))
(assert (= (and (not x1513) x723) x88))
(assert (x642 x1582))
(assert (= x2085 (and x1985 x1959)))
(assert (= (or x687 x251) x1379))
(assert (= (and (not x1694) x1320) x105))
(assert (= (and x1521 (not x2086)) x476))
(assert (x606 x1484))
(assert (x642 x694))
(assert (x642 x1966))
(assert (x642 x1752))
(assert (x642 x1398))
(assert (and (x1464 x1272 32) (x1238 x1272 32) (=> (< 0 32) (= (+ (x1516 x1272 32) (* (x225 x1272 32) 32)) x1272)) (x631 x1272 32)))
(assert (= (and x387 (not x1249)) x328))
(assert (x642 x1142))
(assert (= (x1497 (x1400 2835717307)) 2835717307))
(assert (= x670 (or x622 x499 x1479 x714 x141 x763)))
(assert (= x1064 (=> (and (= (not (> x1800 1)) x1287) (= x1108 (x1085 x1387)) (<= x1108 1461501637330902918203684832716283019655932542975)) (and x1287 (=> (= x932 260) x762)))))
(assert (x642 x1115))
(assert (= (and x1091 x1297) x985))
(assert (x642 x1043))
(assert (x606 x1024))
(assert (x642 x1430))
(assert (x642 x2032))
(assert (= x1254 (or x1319 x734)))
(assert (= x1960 (x1497 (x689 x1960))))
(assert (= x53 (and (not x553) x870)))
(assert (x642 x1486))
(assert (= x955 (and x436 (not x785))))
(assert (= x2014 (and x891 x294)))
(assert (x642 x677))
(assert (x642 x22))
(assert (x642 x255))
(assert (x642 x1281))
(assert (x642 x434))
(assert (= (x1497 (x689 x1611)) x1611))
(assert (x642 x629))
(assert (x642 x1423))
(assert (= x747 (and x541 (not x1561))))
(assert (= x1367 (or (and (not x1324) x307) x50)))
(assert (= (and x2055 x1191) x1479))
(assert (x642 x1082))
(assert (x642 x2077))
(assert (and (x301 32 x893) (x983 32 x893) (x157 32 x893) (and (= (* 32 (- x893 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x830 32 (- x893 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x830 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x893) (- (* 32 x893) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x893))) (= (x830 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x893 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x893 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x893 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* 32 x893) (x830 32 x893)) (x1288 32 x893) (x709 32 x893)))
(assert (x642 x1948))
(assert (x642 x2045))
(assert (x642 x833))
(assert (x642 x1684))
(assert (= x1757 (and x1714 (not x114))))
(assert (x642 x1961))
(assert (x642 x1470))
(assert (= (=> (and (= (x885 x481) x124) (= (x2078 (+ x987 32)) x793) (= (x2078 (+ x1148 32)) x987) (= x164 (< 0 x124)) (= x1522 32)) (and (=> (and x164 (and (= x1606 (x756 x1901)) (= (> x124 1) x1626) (= x1698 (x2078 (+ 32 x1901))) (= x1790 (x2078 (+ x793 32))))) (and (=> (and (and (= x142 1) (= x1790 x231) (= x57 x1698)) (not x1626)) x23) (=> (and x1626 (and (= x1655 (x2078 (+ x1790 32))) (= x354 (x2078 (+ x1698 32))) (= x135 (< 2 x124)) (= x647 (x756 x1698)))) (and (=> (and (not x135) (and (= x1655 x231) (= x354 x57) (= x142 2))) x23) (=> (and x135 (and (= x2039 (< 3 x124)) (= (x2078 (+ x1655 32)) x1893) (= (x756 x354) x428) (= x2071 (x2078 (+ 32 x354))))) (and (=> x2039 x203) (=> (and (not x2039) (and (= 3 x142) (= x1893 x231) (= x2071 x57))) x23))))))) (=> (and (and (= 0 x142) (= x57 x1901) (= x231 x793)) (not x164)) x23))) x1577))
(assert (x642 x887))
(assert (x642 x909))
(assert (x642 x289))
(assert (= (and x2072 x41) x1091))
(assert (x642 x568))
(assert (= (or x476 x545) x104))
(assert (= x545 (or x843 x1014 x856 x62 x412 x1304)))
(assert (x642 x27))
(assert (= (and x427 (not x532)) x1371))
(assert (= (and x1121 (not x92)) x447))
(assert (x642 x1537))
(assert (= (x1608 (+ x1148 (- x1651 160))) 0))
(assert (=> (>= 10000 x491) (= (x1400 x491) (x689 x491))))
(assert (= (and x1882 (not x905)) x1911))
(assert (= x379 (and x1794 x1614)))
(assert (x642 x728))
(assert (= (and x1817 x717) x539))
(assert (x642 x1992))
(assert (= (and x1171 (not x1302)) x622))
(assert (= x1609 (and (not x582) x664)))
(assert (= (=> (and (= (x2078 (+ 32 x1651)) x842) (= x1417 (x1524 x1651)) (= (not (< x842 x151)) x1114)) (and x1114 x1229)) x1900))
(assert (= (x1314 x2071) 0))
(assert (=> (>= 10000 x466) (= (x689 x466) (x1400 x466))))
(assert (x642 x1374))
(assert (= x1010 (and x383 x1897)))
(assert (x642 x2074))
(assert (= (=> (and (= x1660 x858) (= x831 x1344)) x1887) x1137))
(assert (= x46 (and (not x297) x1237)))
(assert (x642 x908))
(assert (= x41 (and x32 (not x1383))))
(assert (x642 x1002))
(assert (= (and x305 x423) x12))
(assert (= x1714 (and x1759 (not x1664))))
(assert (= x1373 (and x70 x478)))
(assert (x642 x1520))
(assert (x606 x1446))
(assert (x642 x554))
(assert (x642 x2083))
(assert (= 3714247998 (x1497 (x1400 3714247998))))
(assert (= x1551 (and (not x1113) x76)))
(assert (x642 x1199))
(assert (= (and x207 x8) x450))
(assert (x642 x143))
(assert (= x1856 (and (not x1503) x976)))
(assert (x642 x1167))
(assert (x642 x1126))
(assert (= (and x751 x706) x1320))
(assert (= (and x1551 x317) x248))
(assert (x642 x660))
(assert (x642 x793))
(assert (x642 x280))
(assert (x606 x1365))
(assert (= x491 (x1497 (x689 x491))))
(assert (x1786 x742))
(assert (x642 x1455))
(assert (x606 x1766))
(assert (x642 x1993))
(assert (= (and (not x1429) x248) x1502))
(assert (x642 x1024))
(assert (= x1258 (and x1734 x789)))
(assert (x642 x839))
(assert (x606 x1154))
(assert (x1786 x286))
(assert (= (x1497 (x689 x1565)) x1565))
(assert (x642 x1853))
(assert (= (and x918 (not x264)) x1580))
(assert (= x901 (and x133 (not x845))))
(assert (= x349 (and x1763 (not x358))))
(assert (= (and x135 x260) x302))
(assert (x642 x586))
(assert (= (x1497 (x689 x24)) x24))
(assert (x642 x501))
(assert (= (x689 3703996404) (x1400 3703996404)))
(assert (x642 x588))
(assert (x642 x1370))
(assert (= x1171 (and (not x2055) x1191)))
(assert (= (and x307 x1324) x50))
(assert (x642 x1639))
(assert (x642 x368))
(assert (x642 x1089))
(assert (x642 x1796))
(assert (x642 x1020))
(assert (x642 x1365))
(assert (x642 x589))
(assert (x642 x2060))
(assert (= x1738 (=> (and (= x1820 x1499) (= x361 0)) x1729)))
(assert (x642 x1460))
(assert (not x2046))
(assert (= (x1497 (x1400 2376452955)) 2376452955))
(assert (= (and x217 (not x1422)) x1462))
(assert (= (x689 3065339685) (x1400 3065339685)))
(assert (x642 x123))
(assert (x642 x764))
(assert (= x1069 (or x635 x1722 x450 x1885 x1707 x735)))
(assert (x642 x1224))
(assert (x642 x172))
(assert (= (and x746 (not x1581)) x1194))
(assert (x642 x1557))
(assert (= x546 (or x768 x293 x1709 x35 x1869 x1813)))
(assert (= (and x1882 x905) x474))
(assert (x642 x619))
(assert (= x735 (and (not x1904) x96)))
(assert (x642 x1210))
(assert (x642 x576))
(assert (x642 x1434))
(assert (= (or x1723 x482) x1248))
(assert (x642 x1354))
(assert (= x713 (x1497 (x689 x713))))
(assert (x606 x1876))
(assert (x642 x1826))
(assert (x642 x1875))
(assert (x642 x1927))
(assert (x642 x613))
(assert (= (and x1502 x1313) x436))
(assert (= (=> (and (= x1891 0) (= x673 x660)) x667) x29))
(assert (x642 x1316))
(assert (x606 x1960))
(assert (x642 x1401))
(assert (x642 x1842))
(assert (= (x1497 (x1400 2678909723)) 2678909723))
(assert (= x1212 (or x1975 x1145)))
(assert (= x1083 (and x1249 x387)))
(assert (= (x1400 893399075) (x689 893399075)))
(assert (x642 x235))
(assert (x642 x824))
(assert (x642 x2021))
(assert (= (and x1275 x1474) x62))
(assert (x642 x490))
(assert (x642 x1942))
(assert (x642 x1964))
(assert (x606 x368))
(assert (= (and x507 (not x1724)) x891))
(assert (x642 x116))
(assert (x642 x300))
(assert (x642 x1641))
(assert (x642 x1220))
(assert (x642 x356))
(assert (= (and x955 x1982) x1174))
(assert (= (or x279 x1498 x1450 x453 x471 x212) x484))
(assert (= x1421 (=> (and (= x125 0) (= x335 x1820)) x1662)))
(assert (x642 x1407))
(assert (x642 x1883))
(assert (=> (>= 10000 x559) (= (x689 x559) (x1400 x559))))
(assert (x642 x1542))
(assert (x642 x527))
(assert (= (x1497 (x689 x1961)) x1961))
(assert (= x1652 (and x1759 x1664)))
(assert (x606 x628))
(assert (x1863 x9))
(assert (= x1594 (x1497 (x689 x1594))))
(assert (x1786 x1231))
(assert (x642 x701))
(assert (x642 x569))
(assert (= (=> (and (= x1316 (x2078 (+ 31 x1472))) (= x921 (x83 (* x1857 32))) (= (x2078 (+ 31 x1535)) x1537) (= x1355 (x2078 (+ 31 x1508))) (not (< x1592 x151)) (not (> x1261 18446744073709551615)) (= (x83 (* x1857 32)) x1761) (= (x2078 (+ 160 x2026)) x1796) (= (x2078 (+ x1796 x1486)) x623) (= (> x1796 x623) x678) (= (x2078 (+ x1508 160)) x1592) (not (= 0 x1460)) (= (x2078 (+ x1472 32)) x1651) (not (< 18446744073709551615 x1857)) (= (x1132 x1472) x1857) (or (and (> x1316 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1592)) (and (= (<= x1592 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1316 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1316 x1592))) (= x151 (x2078 (+ x1761 x1651))) (= x600 (> x151 x1651)) (= x513 (< 18446744073709551615 x623)) (= x933 0) (= x1570 (x2078 (+ 32 x1796))) (= (x2078 (+ 32 x921)) x1535) (= x2026 (x1001 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1355)) (= x1920 (or x513 x678)) (= (ite x1920 1 0) x933) (= (x1132 160) x1261) (= (x2078 (+ 160 x1261)) x1472) (not (or (> x1508 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1508 32) (= true (<= x1508 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x1486 (x1001 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1537))) (and (=> (not x600) x1229) (=> x600 x1900))) x1585))
(assert (= x1431 true))
(assert (x642 x1190))
(assert (x642 x1023))
(assert (x642 x1499))
(assert (x606 x1072))
(assert (=> (<= x1977 10000) (= (x1400 x1977) (x689 x1977))))
(assert (= x133 (and x1203 x537)))
(assert (x642 x1506))
(assert (x642 x1910))
(assert (x642 x1381))
(assert (= (and x549 x757) x1145))
(assert (= x1484 (x1497 (x689 x1484))))
(assert (x642 x1077))
(assert (and (x1464 x1227 1461501637330902918203684832716283019655932542976) (x1238 x1227 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x1516 x1227 1461501637330902918203684832716283019655932542976) (* (x225 x1227 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x1227)) (x631 x1227 1461501637330902918203684832716283019655932542976)))
(assert (x642 x775))
(assert (= (or x895 x2063 x1166 x183 x1083 x539) x295))
(assert (x642 x1859))
(assert (= x1349 (and x520 x1462)))
(assert (= 1086394137 (x1497 (x1400 1086394137))))
(assert (x642 x424))
(assert (x642 x1743))
(assert (x642 x722))
(assert (x642 x984))
(assert (= (and (not x1578) x531) x516))
(assert (= x1444 (x1497 (x689 x1444))))
(assert (x642 x298))
(assert (x642 x1088))
(assert (x642 x21))
(assert (= x989 (or x1580 x2016)))
(assert (x642 x572))
(assert (x642 x1338))
(assert (x642 x292))
(assert (= (and x37 x743) x470))
(assert (= x1362 (and x1930 x1328)))
(assert (x642 x591))
(assert (= x1040 (and x2010 x1621)))
(assert (= (and x1950 (not x1636)) x348))
(assert (x642 x773))
(assert (= x1014 (and x1361 x975)))
(assert (x642 x749))
(assert (x642 x1080))
(assert (= (and x1222 x972) x518))
(assert (= x95 (and x1674 (not x1846))))
(assert (= x2053 (=> (> x1718 0) x514)))
(assert (=> (>= 10000 x1118) (= (x1400 x1118) (x689 x1118))))
(assert (=> (>= 10000 x997) (= (x689 x997) (x1400 x997))))
(assert (= (and (not x81) x306) x2088))
(assert (x642 x259))
(assert (= x1346 (=> (and (= x953 x284) (= x1090 x1407)) x1412)))
(assert (x642 x1215))
(assert (x642 x1278))
(assert (= (x1497 (x689 x1098)) x1098))
(assert (= (and x49 x788) x1492))
(assert (x642 x594))
(assert (x606 x9))
(assert (= x1937 (and x2061 (not x252))))
(assert (x642 x125))
(assert (x642 x1974))
(assert (x642 x1703))
(assert (x642 x1556))
(assert (=> (>= 10000 x666) (= (x689 x666) (x1400 x666))))
(assert (=> (>= 10000 x1127) (= (x689 x1127) (x1400 x1127))))
(assert (x642 x1389))
(assert (x642 x1949))
(assert (x606 x1961))
(assert (x642 x1098))
(assert (= x650 (and x2048 x522)))
(assert (x642 x1466))
(assert (x642 x585))
(assert (x642 x376))
(assert (x1863 x1355))
(assert (= (and x1036 (not x781)) x1331))
(assert (= x117 (and x223 x1258)))
(assert (x642 x645))
(assert (= 2289173607 (x1497 (x1400 2289173607))))
(assert (=> (<= x1484 10000) (= (x689 x1484) (x1400 x1484))))
(assert (x642 x409))
(assert (x642 x503))
(assert (= x1219 (and (not x1817) x717)))
(assert (x642 x1472))
(assert (x606 x686))
(assert (= (and (not x1626) x1005) x688))
(assert (=> (<= x1753 10000) (= (x689 x1753) (x1400 x1753))))
(assert (= (=> (and (or x198 (not x198)) (= x198 (= x1826 0))) x261) x656))
(assert (= x911 (and (not x1779) x1644)))
(assert (x642 x1273))
(assert (= x68 (and x563 x2073)))
(assert (x642 x1539))
(assert (x642 x1451))
(assert (x1863 1461501637330902918203684832716283019655932542975))
(assert (x642 x258))
(assert (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1497 (x1400 76450787359836037641860180984291677749980919077056822294353438043884394381312))))
(assert (x642 x274))
(assert (x642 x369))
(assert (x642 x1017))
(assert (= x1598 (and x2019 x872)))
(assert (x642 x231))
(assert (x642 x1271))
(assert (x642 x1418))
(assert (x642 x1442))
(assert (x642 x177))
(assert (= (and x358 x1763) x160))
(assert (= x1191 (and x362 x375)))
(assert (x642 x1500))
(assert (= (and x38 x1399) x387))
(assert (x642 x44))
(assert (x1786 x1227))
(assert (x606 x1753))
(assert (x642 x439))
(assert (= (and x1978 x1295) x407))
(assert (x642 x1164))
(assert (= (x1400 1083311676) (x689 1083311676)))
(assert (x642 x1369))
(assert (= x590 (or x1356 x546)))
(assert (= x997 (x1497 (x689 x997))))
(assert (x642 x1146))
(assert (= (and x882 x518) x137))
(assert (x642 x36))
(assert (x642 x419))
(assert (= (and x19 x1838) x690))
(assert (x642 x1914))
(assert (x642 x1634))
(assert (= x1953 (and x2070 x767)))
(assert (x642 x1708))
(assert (= x752 (and x325 x802)))
(assert (= (and x2028 x863) x1868))
(assert (= (=> (and (= x1635 0) (= x1467 x1820)) x1602) x1475))
(assert (= x1078 (and x1868 x489)))
(assert (x642 x1963))
(assert (= x969 (=> (and (= x609 0) (= x300 x660)) x254)))
(assert (x642 x2026))
(assert (x642 x1531))
(assert (and (x1464 x469 1461501637330902918203684832716283019655932542976) (x1238 x469 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x1516 x469 1461501637330902918203684832716283019655932542976) (* (x225 x469 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x469)) (x631 x469 1461501637330902918203684832716283019655932542976)))
(assert (let ((x835 (x83 (- (x1497 x560) (x1497 x1576))))) (and (x1888 x835 1) (x1835 x835 1) (x823 x835 1) (=> (and (> x835 0) (> 1 0)) (and (>= x835 (* 1 (x225 x835 1))) (< (- x835 1) (* 1 (x225 x835 1))))) (= (- x835 (x1001 0 x835)) (* (x225 x835 1) 1)) (x866 x835 1))))
(assert (= x961 (and x334 (not x535))))
(assert (x642 x1548))
(assert (x642 x1877))
(assert (= x1308 (and (not x2007) x1415)))
(assert (= (and x382 x1431) x1366))
(assert (= (and x1815 (not x601)) x1124))
(assert (x642 x1073))
(assert (= (x1497 (x1400 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x642 x836))
(assert (x642 x1235))
(assert (= x976 (and x898 x1798)))
(assert (x606 x1805))
(assert (x642 x818))
(assert (x642 x1926))
(assert (= (and x427 x532) x763))
(assert (x642 x1834))
(assert (= x1245 (x1497 (x689 x1245))))
(assert (= (and x751 (not x706)) x1327))
(assert (= (and x1958 (not x1031)) x664))
(assert (x1786 x1701))
(assert (= x1120 (and (not x558) x1632)))
(assert (x642 x949))
(assert (x642 x1766))
(assert (x642 x1408))
(assert (= (and x1775 x117) x537))
(assert (x606 x1842))
(assert (and (x1464 x1537 32) (x1238 x1537 32) (=> (< 0 32) (= (+ (x1516 x1537 32) (* (x225 x1537 32) 32)) x1537)) (x631 x1537 32)))
(assert (x1863 x1231))
(assert (= x140 (=> (and (= x1826 x1909) (= x1044 x1676)) x656)))
(assert (let ((x835 (- (x1497 x790) (x1497 x1886)))) (and (x1464 x835 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1238 x835 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x1516 x835 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x225 x835 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x835)) (x631 x835 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (x642 x2056))
(assert (x606 x1242))
(assert (= (and (not x1810) x637) x1532))
(assert (x642 x1344))
(assert (= (x1497 (x1400 2514000705)) 2514000705))
(assert (x977 x1701))
(assert (= (and x988 x1791) x733))
(assert (= x790 (x689 (x1497 x790))))
(assert (= x906 (and (not x1957) x1219)))
(assert (x642 x1342))
(assert (= x1065 (and x1188 x911)))
(assert (x642 x1789))
(assert (= (and x1456 (not x433)) x325))
(assert (x642 x902))
(assert (= x1628 (and x1275 (not x1474))))
(assert (= (x1400 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x689 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x606 x929))
(assert (= (and (not x1339) x88) x856))
(assert (x642 x391))
(assert (= x1282 (or x1825 x700)))
(assert (x1786 x1272))
(assert (= (and x404 x1074) x285))
(assert (= x1729 (=> (and (= x1826 x361) (= x1044 x1499)) x656)))
(assert (= (or (and x976 x1503) x1781 (and x1609 x495) x18 (and (not x343) x1856) (and x1363 x1830)) x1319))
(assert (= 826074471 (x1497 (x1400 826074471))))
(assert (x642 x1185))
(assert (= (and x2080 (not x7)) x342))
(assert (= x278 (=> (and (= x737 0) (= x123 x1964)) x2008)))
(assert (= x1950 (and (not x1873) x813)))
(assert (= (x689 (x1497 x560)) x560))
(assert (= x201 (or x1366 x353)))
(assert (= (x1802 x1102) 0))
(assert (x642 x2059))
(assert (= x1648 (and (not x712) x986)))
(assert (=> (<= x1611 10000) (= (x1400 x1611) (x689 x1611))))
(assert (= x453 (and x2029 x339)))
(assert (= (x1497 (x1400 2952933380)) 2952933380))
(assert (= (x1497 (x1400 3065339685)) 3065339685))
(assert (x642 x1919))
(assert (= x960 (and x1454 x2043)))
(assert (x642 x1226))
(assert (x642 x1501))
(assert (= (and x822 (not x1311)) x1772))
(assert (x642 x1600))
(assert (x642 x24))
(assert (x236 x1800))
(assert (x642 x364))
(assert (= x1127 (x1497 (x689 x1127))))
(assert (= (and x951 x341) x822))
(assert (= x1814 (and (not x1618) x1270)))
(assert (x642 x1333))
(assert (x642 x1387))
(assert (= (and x267 x1327) x1759))
(assert (=> (>= 10000 x1100) (= (x1400 x1100) (x689 x1100))))
(assert (x642 x1673))
(assert (x642 x151))
(assert (x642 x633))
(assert (x642 x724))
(assert (x642 x858))
(assert (= (or x1661 x1218 x1793 x883 x1009 x1162) x1899))
(assert (= (and x1541 x1496) x1908))
(assert (x606 x409))
(assert (x642 x56))
(assert (x642 x651))
(assert (x642 x9))
(assert (x642 x770))
(assert (= x611 (or x484 x877)))
(assert (= (and x1981 x16) x951))
(assert (= (and (not x972) x1222) x2068))
(assert (= x100 (and (not x1061) x1921)))
(assert (x642 x1761))
(assert (= x1813 (and x1950 x1636)))
(assert (= x644 (and (not x600) x54)))
(assert (= x247 (and x87 (not x1785))))
(assert (= x547 (and x247 x538)))
(assert (x642 x1441))
(assert (= (and x2019 (not x872)) x49))
(assert (= (and x1237 x297) x1838))
(assert (x642 x1037))
(assert (= x52 (=> (and (= x1962 x1292) (= x1039 x984)) x1196)))
(assert (x642 x1457))
(assert (x642 x420))
(assert (= x1038 (=> (and (= x782 x1660) (= x420 x831)) x1887)))
(assert (= (=> (and (= x1820 x239) (= x1517 0)) x1816) x675))
(assert (= x928 (and (not x1307) x1672)))
(assert (= (=> (and (= x769 0) (= x583 x660)) x1055) x732))
(assert (x606 x258))
(assert (= (x689 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1400 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x606 x286))
(assert (x606 x1919))
(assert (x642 x211))
(assert (x642 x1047))
(assert (x642 x965))
(assert (=> (<= x257 10000) (= (x689 x257) (x1400 x257))))
(assert (x642 x481))
(assert (x642 x184))
(assert (x606 x1611))
(assert (= (or x928 x229) x1169))
(assert (and (x1464 x286 1461501637330902918203684832716283019655932542976) (x1238 x286 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x1516 x286 1461501637330902918203684832716283019655932542976) (* (x225 x286 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x286)) (x631 x286 1461501637330902918203684832716283019655932542976)))
(assert (x642 x243))
(assert (x642 x1804))
(assert (x642 x1392))
(assert (= x458 (and x1320 x1694)))
(assert (x642 x1818))
(assert (= (=> (and (or (not x1445) x1445) (= x1445 (= 0 x831))) x170) x1887))
(assert (x642 x953))
(assert (=> (>= 10000 x409) (= (x1400 x409) (x689 x409))))
(assert (x977 x1227))
(assert (= (and x2088 x543) x1274))
(assert (= (and (not x1558) x105) x1945))
(assert (= x212 (and x1523 x1938)))
(assert (x642 x1855))
(assert (x642 x1039))
(assert (= x170 (=> (= x1858 (= 0 x831)) (and (=> (and (and (= x1082 (x1001 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1272)) (= x1272 (x2078 (+ 31 x1660))) (= x26 (or (and (= true (<= x1660 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1660)) (> x1660 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x2078 (+ x1082 x44)) x481)) (not x1858)) (and (=> (and (= x205 0) x26) x11) (=> (and (and (= (x2078 (+ x481 x1872)) x1148) (= x549 (= x833 0)) (= (x2078 (+ x481 32)) x1901) (= (x2078 (+ x881 32)) x1872) (= x881 (x83 (* x833 32)))) (not x26)) (and (=> (and (and (= (x218 x790 1) x560) (= x1886 (x192 (x1400 1) 0)) (= (x2078 (+ x1901 x971)) x211) (<= x391 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1540 (x225 (x83 (- (x1497 x790) (x1497 x1886))) 1)) (= (x2078 (+ 32 x1901)) x1473) (= (x192 (x1400 1) 0) x790) (= x1061 (< x1473 x211)) (= (x69 x790) x391) (= x971 (x83 (* x833 32))) (>= x391 0)) (not x549)) (and (=> (not x1061) x1586) (=> x1061 x43))) (=> x549 x1577))))) (=> (and (= x205 0) x1858) x11)))))
(assert (x642 x1913))
(assert (x606 x24))
(assert (= x605 (and (not x1965) x1228)))
(assert (= (and (not x1969) x328) x895))
(assert (x642 x1555))
(assert (x642 x234))
(assert (= (and x447 (not x1666)) x423))
(assert (x642 x1686))
(assert (= x1919 (x1497 (x689 x1919))))
(assert (x1786 x1537))
(assert (= (or x1750 x355) x2022))
(assert (x642 x671))
(assert (= x646 (=> (and (= x953 x449) (= x1209 x1090)) x1412)))
(assert (= (or x100 x1330) x1975))
(assert (= x162 (=> (and (= 0 x1853) (= x1964 x1737)) x1566)))
(assert (x642 x213))
(assert (=> (<= x258 10000) (= (x1400 x258) (x689 x258))))
(assert (x642 x118))
(assert (= x628 (x1497 (x689 x628))))
(assert (x642 x1184))
(assert (x642 x2035))
(assert (and (x1464 x9 1461501637330902918203684832716283019655932542976) (x1238 x9 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x1516 x9 1461501637330902918203684832716283019655932542976) (* (x225 x9 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x9)) (x631 x9 1461501637330902918203684832716283019655932542976)))
(assert (= (and x1609 (not x495)) x734))
(assert (x1352 x1272))
(assert (= x667 (=> (and (= x1962 x673) (= x1891 x1039)) x1196)))
(assert (x642 x1494))
(assert (= (=> (and (= x1735 x660) (= x536 0)) x269) x1397))
(assert (x606 x1594))
(assert (x642 x3))
(assert (x642 x71))
(assert (x642 x1979))
(assert (x642 x1565))
(assert (=> (<= x56 10000) (= (x689 x56) (x1400 x56))))
(assert (x642 x1575))
(assert (x642 x1155))
(assert (=> (<= x1600 10000) (= (x689 x1600) (x1400 x1600))))
(assert (= (and x853 x1385) x131))
(assert (x642 x779))
(assert (and (x301 32 x124) (x983 32 x124) (x157 32 x124) (and (= (* 32 (- x124 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x830 32 (- x124 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x830 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x124) (- (* 32 x124) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x124))) (= (x830 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x124 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x124 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x124 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* 32 x124) (x830 32 x124)) (x1288 32 x124) (x709 32 x124)))
(assert (x642 x195))
(assert (= x630 (and x302 x2039)))
(assert (= x388 (and (not x620) x662)))
(assert (x642 x1657))
(assert (= (and x1798 (not x898)) x1912))
(assert (x642 x1272))
(assert (x642 x1332))
(assert (x642 x130))
(assert (= (and x1862 x760) x128))
(assert (x642 x178))
(assert (=> (<= x1766 10000) (= (x1400 x1766) (x689 x1766))))
(assert (x642 x1054))
(assert (x642 x1117))
(assert (= x2047 (or (and x785 x436) x1174 x1546 (and x1568 x602) (and x1502 (not x1313)) (and x1429 x248))))
(assert (x642 x1891))
(assert (x642 x737))
(assert (= x1385 (and (not x1496) x1541)))
(assert (x642 x921))
(assert (x642 x808))
(assert (x642 x536))
(assert (x642 x1780))
(assert (= (x1400 1762712782) (x689 1762712782)))
(assert (= x1879 (=> (and (= x858 x1964) (= x1344 0)) x1137)))
(assert (x642 x270))
(assert (= (and (not x1715) x935) x2043))
(assert (x642 x1386))
(assert (= x404 (and x1315 x456)))
(assert (x236 x1857))
(assert (= x1621 (and x189 x99)))
(assert (x642 x954))
(assert (x642 x466))
(assert (= (x1497 (x689 x1977)) x1977))
(assert (x606 x1877))
(assert (x642 x14))
(assert (x642 x1742))
(assert (x642 x1833))
(assert (x642 x1635))
(assert (= (and x1216 x470) x199))
(assert (= (=> (and (= x452 (= x1460 0)) (or (not x452) x452)) x1585) x1996))
(assert (x642 x741))
(assert (= x1662 (=> (and (= x335 x1044) (= x1826 x125)) x656)))
(assert (= x337 (or x1797 x2047)))
(assert (x236 x124))
(assert (= (and x650 x1881) x1669))
(assert (= (and (not x1266) x1596) x76))
(assert (x642 x971))
(assert (= (and x109 x852) x710))
(assert (x642 x686))
(assert (= (and x1086 (not x1250)) x1819))
(assert (x642 x1889))
(assert (x642 x1540))
(assert (x642 x842))
(assert (= (x689 1889567281) (x1400 1889567281)))
(assert (= x1589 (or x593 x809)))
(assert (= x1094 (and x1265 x1128)))
(assert (x642 x1894))
(assert (x642 x1849))
(assert (=> (<= x1514 10000) (= (x1400 x1514) (x689 x1514))))
(assert (x642 x962))
(assert (x642 x1084))
(assert (= x1487 (and x946 x1217)))
(assert (x642 x794))
(assert (x642 x1719))
(assert (= (or x547 x1221 x416 x1769 x2075 x1612) x2000))
(assert (x642 x1820))
(assert (x642 x608))
(assert (x606 x1077))
(assert (=> (>= 10000 x1077) (= (x689 x1077) (x1400 x1077))))
(assert (x642 x566))
(assert (= x1699 (and x1051 x242)))
(assert (= (and (not x408) x1402) x1568))
(assert (x642 x1444))
(assert (= (and x1051 (not x242)) x1295))
(assert (x642 x1355))
(assert (x642 x907))
(assert (= (x1497 (x689 x338)) x338))
(assert (x642 x371))
(assert (= x1275 (and x975 (not x1361))))
(assert (x642 x357))
(assert (= x98 (or x359 x1772 x39 x963 x948 x599 x1642 x772 x1173 x587 x352 x1424 x901 x1435 x498 x53 x827 x592 x1854 x978 x1683 x1125 x193 x654 x275)))
(assert (=> (>= 10000 x368) (= (x1400 x368) (x689 x368))))
(assert (= (x1497 (x689 x257)) x257))
(assert (x642 x1417))
(assert (= x1181 (and x1867 x215)))
(assert (= (and x1569 x1239) x1435))
(assert (= (and x1958 x1031) x1781))
(assert (x1786 x1678))
(assert (= x1380 (and x1432 x1481)))
(assert (= (and x913 x348) x1709))
(assert (= (and (not x448) x1567) x416))
(assert (x642 x1980))
(assert (= (and x942 x521) x182))
(assert (and (x1464 x798 32) (x1238 x798 32) (=> (< 0 32) (= (+ (x1516 x798 32) (* (x225 x798 32) 32)) x798)) (x631 x798 32)))
(assert (= (x1497 (x689 x1876)) x1876))
(assert (x642 x187))
(assert (= x523 (or x1440 x914)))
(assert (= (or x649 x736) x804))
(assert (= (or x644 x1182) x1283))
(assert (= (=> (and (= x1635 x1826) (= x1044 x1467)) x656) x1602))
(assert (= (x1497 (x689 x1514)) x1514))
(assert (x642 x1988))
(assert (x606 x187))
(assert (x606 x1584))
(assert (x642 x1536))
(assert (= x789 (and x578 (not x10))))
(assert (= (and x555 x1016) x1614))
(assert (x642 x850))
(assert (= (=> (and (= (x225 (x83 (- (x1497 x560) (x1497 x1576))) 1) x979) (= x1202 (not (> x211 x1052))) (= (x2078 (+ 32 x1473)) x1052) (<= x824 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x824) (= x824 (x69 x560)) (= (x192 (x1400 1) 0) x1576)) (and x1586 x1202)) x43))
(assert (x606 x338))
(assert (x642 x669))
(assert (x642 x2066))
(assert (x642 x1755))
(assert (= (and (not x2039) x302) x1396))
(assert (= (x1497 (x689 x9)) x9))
(assert (x642 x559))
(assert (= (x1608 (+ (- x1102 160) x1148)) 0))
(assert (= (and (not x1454) x2043) x751))
(assert (= 0 (x1608 (+ x1148 32))))
(assert (x642 x1711))
(assert (x642 x1276))
(assert (=> (>= 10000 x1154) (= (x689 x1154) (x1400 x1154))))
(assert (x642 x464))
(assert (= (=> (and (= x1660 x123) (= x737 x831)) x1887) x2008))
(assert (x642 x973))
(assert (x642 x1227))
(assert (= x1409 (or x1812 x160 x780 x299 x1973 x128)))
(assert (x642 x1433))
(assert (= (and x1644 x1779) x507))
(assert (x642 x1691))
(assert (= x929 (x1497 (x689 x929))))
(assert (= x1595 (and x1465 (not x40))))
(assert (x642 x1962))
(assert (x642 x244))
(assert (= (and x349 (not x999)) x1824))
(assert (x642 x1003))
(assert (= (or x1232 x463) x1955))
(assert (=> (>= 10000 x686) (= (x689 x686) (x1400 x686))))
(assert (= (and (not x1211) x937) x1193))
(assert (x642 x1159))
(assert (x642 x472))
(assert (= (x1608 (+ x1148 (- x1651 128))) 0))
(assert (x606 x255))
(assert (x642 x668))
(assert (= (and x423 (not x305)) x486))
(assert (= x1732 (and x306 x81)))
(assert (= x1569 (and (not x351) x488)))
(assert (= (x1400 2376452955) (x689 2376452955)))
(assert (x642 x952))
(assert (= (=> (and (= 0 x283) (= x957 x2066)) x249) x903))
(assert (x642 x145))
(assert (x642 x1209))
(assert (x642 x1234))
(assert (= (or x1317 x1027 x868 x1070 x1809 x459) x355))
(assert (x642 x239))
(assert (= x2037 (and x516 x990)))
(assert (x642 x1597))
(assert (x642 x1522))
(assert (= x1055 (=> (and (= x1039 x769) (= x1962 x583)) x1196)))
(assert (= (or x1357 x285 x1274 x787 x1669 x1732) x2016))
(assert (x642 x2040))
(assert (x642 x1041))
(assert (= (x1497 (x689 x1766)) x1766))
(assert (x606 x1600))
(assert (x1352 x1355))
(assert (and (x1464 x1537 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1238 x1537 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x1516 x1537 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x225 x1537 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1537)) (x631 x1537 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x642 x1906))
(assert (=> (<= x1805 10000) (= (x689 x1805) (x1400 x1805))))
(assert (x642 x1922))
(assert (x642 x338))
(assert (x642 x392))
(assert (= (and x342 (not x216)) x493))
(assert (= (and x1306 x1428) x2042))
(assert (x642 x786))
(assert (= x183 (and x906 x451)))
(assert (= (and x442 (not x1983)) x679))
(assert (x642 x889))
(assert (x642 x1951))
(assert (= (and (not x1533) x1699) x1784))
(assert (= (and x918 x264) x1357))
(assert (x642 x1751))
(assert (x642 x1909))
(assert (= (and (not x2029) x339) x986))
(assert (x642 x1076))
(assert (x642 x2071))
(assert (= (and x1784 x970) x1938))
(assert (x642 x617))
(assert (= 0 (x1314 x1901)))
(assert (x606 x1233))
(assert (= x389 (=> (and (= x1964 x415) (= x2083 0)) x1579)))
(assert (= x1798 (and x1265 (not x1128))))
(assert (x642 x108))
(assert (x642 x1242))
(assert (= (x1400 2569309863) (x689 2569309863)))
(assert (= 0 (x1802 x1472)))
(assert (x642 x126))
(assert (x642 x618))
(assert (x642 x528))
(assert (x642 x228))
(assert (= x290 (and (not x696) x396)))
(assert (=> (>= 10000 x568) (= (x689 x568) (x1400 x568))))
(assert (x642 x1029))
(assert (x642 x1345))
(assert (x642 x1293))
(assert (x1863 x1272))
(assert (x606 x1974))
(assert (x606 x1167))
(assert (x642 x1090))
(assert (= x1353 (or x131 x290 x1449 x1908 x1251 x1756)))
(assert (x606 x1977))
(assert (x642 x57))
(assert (x642 x205))
(assert (= x1680 (and x407 (not x661))))
(assert (= (and x37 (not x743)) x1644))
(assert (x642 x1594))
(assert (= (and x1754 (not x1704)) x99))
(assert (x642 x15))
(assert (x1786 x9))
(assert (x1786 x469))
(assert (= (and (not x1481) x1432) x946))
(assert (= (x1400 3645313523) (x689 3645313523)))
(assert (= x666 (x1497 (x689 x666))))
(assert (x642 x378))
(assert (x642 x995))
(assert (x642 x66))
(assert (= (and x1171 x1302) x1228))
(assert (= (x1400 2952933380) (x689 2952933380)))
(assert (x642 x169))
(assert (=> (<= x1594 10000) (= (x689 x1594) (x1400 x1594))))
(assert (= (x1400 2289173607) (x689 2289173607)))
(check-sat)
(exit)
