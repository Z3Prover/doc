(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x1127 0)) (((x223 (x1174 x1127) (x1028 x1127) (x462 x1127) (x259 Int)) (x898 (x203 x1127) (x631 Int)) (x1801 (x557 x1127) (x1796 x1127) (x1230 x1127) (x1294 x1127) (x1327 Int)) (x1436 (x1095 x1127) (x2117 x1127) (x58 Int)) (x1379 (x1757 x1127) (x1426 x1127) (x396 x1127) (x660 x1127) (x151 x1127) (x1296 Int)) (x1231 (x1590 x1127) (x516 x1127) (x731 x1127) (x636 x1127) (x1919 x1127) (x1040 x1127) (x1565 x1127) (x2109 Int)) (x1946 (x1577 x1127) (x1244 x1127) (x72 x1127) (x822 x1127) (x2066 x1127) (x828 x1127) (x942 Int)) (x53 (x62 Int)))))
(declare-fun x1689 () Bool)
(declare-fun x1845 () Bool)
(declare-fun x1594 () Int)
(declare-fun x712 (Int) Int)
(declare-fun x665 () Bool)
(declare-fun x984 () Int)
(declare-fun x245 () Bool)
(declare-fun x930 () Int)
(declare-fun x1132 () Int)
(declare-fun x1269 () Int)
(declare-fun x1336 () Bool)
(declare-fun x1914 () Int)
(declare-fun x710 (Int) Int)
(declare-fun x2005 () Bool)
(declare-fun x1642 () Int)
(declare-fun x1766 () Bool)
(declare-fun x5 () Int)
(declare-fun x1509 () Bool)
(declare-fun x430 () x1127)
(declare-fun x1136 () Bool)
(declare-fun x250 () Bool)
(declare-fun x618 () Int)
(declare-fun x569 () Bool)
(declare-fun x1848 () Int)
(declare-fun x648 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x2150 () Bool)
(declare-fun x1235 () Bool)
(declare-fun x328 () Bool)
(declare-fun x475 () Bool)
(declare-fun x1961 () Int)
(declare-fun x170 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x392 () Int)
(declare-fun x1586 () Bool)
(declare-fun x2153 () Bool)
(declare-fun x1197 () Int)
(declare-fun x589 () Int)
(declare-fun x1775 () Bool)
(declare-fun x1247 () Int)
(declare-fun x19 () Bool)
(declare-fun x1660 () Bool)
(declare-fun x1005 () Bool)
(declare-fun x355 () Int)
(declare-fun x66 () Int)
(declare-fun x815 () Int)
(declare-fun x753 () Bool)
(declare-fun x100 () Int)
(declare-fun x427 () Int)
(declare-fun x419 () Int)
(declare-fun x1918 () Bool)
(declare-fun x169 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x1091 () Bool)
(declare-fun x613 () Bool)
(declare-fun x1332 () Int)
(declare-fun x117 () Bool)
(declare-fun x547 () Int)
(declare-fun x2097 () Int)
(declare-fun x1973 () Int)
(declare-fun x173 () Int)
(declare-fun x1687 () Bool)
(declare-fun x503 () Bool)
(declare-fun x1854 () Bool)
(declare-fun x92 () Int)
(declare-fun x15 () Int)
(declare-fun x214 () Bool)
(declare-fun x967 (Int) Int)
(declare-fun x1 () Bool)
(declare-fun x2021 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x253 () Bool)
(declare-fun x1435 () Bool)
(declare-fun x880 () Bool)
(declare-fun x686 () Bool)
(declare-fun x500 () Int)
(declare-fun x30 () Bool)
(declare-fun x1991 () Bool)
(declare-fun x1647 () Int)
(declare-fun x306 () Bool)
(declare-fun x1957 () Int)
(declare-fun x356 () Bool)
(declare-fun x1255 (x1127) Int)
(declare-fun x900 () Bool)
(declare-fun x1410 () Int)
(declare-fun x998 () Int)
(declare-fun x929 () Int)
(declare-fun x1808 () Int)
(declare-fun x197 (Int) Int)
(declare-fun x379 () Int)
(declare-fun x2013 () Int)
(declare-fun x1610 () Int)
(declare-fun x1720 () Bool)
(declare-fun x1043 () Int)
(declare-fun x1069 () Bool)
(declare-fun x1971 () Int)
(declare-fun x1498 () Int)
(declare-fun x149 () Int)
(declare-fun x410 () Bool)
(declare-fun x680 () Int)
(declare-fun x1193 () Int)
(declare-fun x1955 () Int)
(declare-fun x1829 () Bool)
(declare-fun x915 () Bool)
(declare-fun x911 () Bool)
(declare-fun x605 () Int)
(declare-fun x1508 () Int)
(declare-fun x278 () Bool)
(declare-fun x162 () Int)
(declare-fun x1506 () Bool)
(declare-fun x1501 () Int)
(declare-fun x1461 () Int)
(declare-fun x1671 (Int) Int)
(declare-fun x1896 () Bool)
(declare-fun x1948 () Bool)
(declare-fun x874 () Bool)
(declare-fun x1232 () Int)
(declare-fun x320 () Bool)
(declare-fun x17 () Int)
(declare-fun x788 () Int)
(declare-fun x823 () Int)
(declare-fun x816 () Int)
(declare-fun x587 () Int)
(declare-fun x812 () Bool)
(declare-fun x1276 () Bool)
(declare-fun x350 () Int)
(declare-fun x645 () Bool)
(declare-fun x191 () x1127)
(declare-fun x1388 () Int)
(declare-fun x283 () Bool)
(declare-fun x256 () Bool)
(declare-fun x512 () Bool)
(declare-fun x1923 () Bool)
(declare-fun x1748 () Bool)
(declare-fun x185 () Int)
(declare-fun x2041 () Bool)
(declare-fun x295 () Int)
(declare-fun x2167 () Bool)
(declare-fun x2067 () Int)
(declare-fun x1205 () Bool)
(declare-fun x1739 () Int)
(declare-fun x852 () Bool)
(declare-fun x716 () x1127)
(declare-fun x1321 () Int)
(declare-fun x1198 () x1127)
(declare-fun x1688 () x1127)
(declare-fun x1378 () Int)
(declare-fun x528 () Bool)
(declare-fun x1389 () Bool)
(declare-fun x819 () Bool)
(declare-fun x2052 () Int)
(declare-fun x200 () Int)
(declare-fun x1789 () Bool)
(declare-fun x899 () Int)
(declare-fun x1731 () Bool)
(declare-fun x913 () Bool)
(declare-fun x1721 () Int)
(declare-fun x1760 () Bool)
(declare-fun x2122 () Int)
(declare-fun x241 () Int)
(declare-fun x493 () Bool)
(declare-fun x1460 () Int)
(declare-fun x742 () Int)
(declare-fun x2060 () Bool)
(declare-fun x2103 (x1127) Int)
(declare-fun x1179 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x1409 () Bool)
(declare-fun x1256 () Bool)
(declare-fun x105 () Int)
(declare-fun x785 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x2147 () Bool)
(declare-fun x1060 () Int)
(declare-fun x176 () Int)
(declare-fun x540 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x230 () Bool)
(declare-fun x143 (Int) Int)
(declare-fun x2157 () Bool)
(declare-fun x2159 () Bool)
(declare-fun x1658 () Int)
(declare-fun x1588 () Int)
(declare-fun x286 () Int)
(declare-fun x83 () Bool)
(declare-fun x829 () Int)
(declare-fun x1976 () Bool)
(declare-fun x265 () Int)
(declare-fun x546 () Bool)
(declare-fun x33 () Bool)
(declare-fun x264 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x152 () Int)
(declare-fun x1531 () Bool)
(declare-fun x907 () Bool)
(declare-fun x565 (Int) Int)
(declare-fun x1741 () Bool)
(declare-fun x700 () Int)
(declare-fun x126 () Int)
(declare-fun x1758 () Bool)
(declare-fun x2053 () Int)
(declare-fun x1982 () Bool)
(declare-fun x220 () Bool)
(declare-fun x1143 () Int)
(declare-fun x374 () Bool)
(declare-fun x1481 () Int)
(declare-fun x889 () Bool)
(declare-fun x1191 () Int)
(declare-fun x761 () Int)
(declare-fun x1429 () Bool)
(declare-fun x922 () Bool)
(declare-fun x952 () Int)
(declare-fun x287 () Bool)
(declare-fun x1921 () Bool)
(declare-fun x1527 () Int)
(declare-fun x990 () Int)
(declare-fun x1987 () Bool)
(declare-fun x831 () Bool)
(declare-fun x544 () Int)
(declare-fun x294 () Bool)
(declare-fun x2120 () Int)
(declare-fun x650 () Bool)
(declare-fun x1832 () Int)
(declare-fun x184 () Int)
(declare-fun x1932 () Bool)
(declare-fun x3 () Int)
(declare-fun x1302 () Bool)
(declare-fun x1888 () Bool)
(declare-fun x403 () Bool)
(declare-fun x1443 () Int)
(declare-fun x150 () Bool)
(declare-fun x904 () Bool)
(declare-fun x1540 () Int)
(declare-fun x215 () Bool)
(declare-fun x1550 () x1127)
(declare-fun x1668 () Int)
(declare-fun x932 () Bool)
(declare-fun x866 (Int) Int)
(declare-fun x385 () Int)
(declare-fun x1810 () Bool)
(declare-fun x1268 () Bool)
(declare-fun x414 () Int)
(declare-fun x299 () Int)
(declare-fun x1837 () Bool)
(declare-fun x1121 () Int)
(declare-fun x586 () Bool)
(declare-fun x1515 () Int)
(declare-fun x2064 () Int)
(declare-fun x1542 () Bool)
(declare-fun x1056 () Int)
(declare-fun x2054 () Int)
(declare-fun x1108 () Bool)
(declare-fun x1214 () Bool)
(declare-fun x2107 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x1656 () Bool)
(declare-fun x1552 () Int)
(declare-fun x1249 () Bool)
(declare-fun x1176 () Bool)
(declare-fun x451 () Bool)
(declare-fun x1726 () Bool)
(declare-fun x94 (Int) Int)
(declare-fun x411 () Int)
(declare-fun x318 () Bool)
(declare-fun x399 () Bool)
(declare-fun x463 () Bool)
(declare-fun x1819 () Bool)
(declare-fun x1125 () Int)
(declare-fun x1187 () Bool)
(declare-fun x167 () Int)
(declare-fun x1222 () Bool)
(declare-fun x2026 () Bool)
(declare-fun x583 () Int)
(declare-fun x216 () Int)
(declare-fun x947 () Bool)
(declare-fun x2123 () Bool)
(declare-fun x1924 () Int)
(declare-fun x1273 () Bool)
(declare-fun x1236 () Int)
(declare-fun x789 () x1127)
(declare-fun x1433 () Bool)
(declare-fun x477 () Int)
(declare-fun x628 () Int)
(declare-fun x1547 () Bool)
(declare-fun x316 () Bool)
(declare-fun x834 () Bool)
(declare-fun x120 () Bool)
(declare-fun x538 () Bool)
(declare-fun x954 () Bool)
(declare-fun x329 () Int)
(declare-fun x975 () Int)
(declare-fun x1926 (Int) Int)
(declare-fun x1892 () Bool)
(declare-fun x153 () Bool)
(declare-fun x13 () Bool)
(declare-fun x1355 () Int)
(declare-fun x600 () Bool)
(declare-fun x276 () Bool)
(declare-fun x1913 () Int)
(declare-fun x1608 () Bool)
(declare-fun x1949 () Int)
(declare-fun x1834 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x1996 () Bool)
(declare-fun x1953 () Bool)
(declare-fun x378 () Int)
(declare-fun x407 () Bool)
(declare-fun x663 () Int)
(declare-fun x517 () Int)
(declare-fun x1444 () Int)
(declare-fun x310 () Bool)
(declare-fun x1755 () Int)
(declare-fun x1734 () Int)
(declare-fun x305 () Bool)
(declare-fun x607 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x725 () Bool)
(declare-fun x2037 () Bool)
(declare-fun x1745 () Int)
(declare-fun x552 () Bool)
(declare-fun x1749 () Bool)
(declare-fun x1141 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x535 () Bool)
(declare-fun x1088 () x1127)
(declare-fun x1025 () x1127)
(declare-fun x2028 () Bool)
(declare-fun x464 () Int)
(declare-fun x891 () Int)
(declare-fun x1297 () Int)
(declare-fun x1725 () Bool)
(declare-fun x1992 () Int)
(declare-fun x1311 () Int)
(declare-fun x1585 () Bool)
(declare-fun x1139 () Int)
(declare-fun x163 () Int)
(declare-fun x757 () Bool)
(declare-fun x1840 () Bool)
(declare-fun x1752 () x1127)
(declare-fun x2029 () Int)
(declare-fun x1318 () x1127)
(declare-fun x1014 () Bool)
(declare-fun x2142 () Int)
(declare-fun x69 () Bool)
(declare-fun x60 () Bool)
(declare-fun x1451 () Int)
(declare-fun x76 () Bool)
(declare-fun x1906 (Int) Int)
(declare-fun x231 () Int)
(declare-fun x885 () Int)
(declare-fun x1200 () Int)
(declare-fun x617 () Bool)
(declare-fun x234 () Bool)
(declare-fun x1634 () x1127)
(declare-fun x186 () Int)
(declare-fun x284 () x1127)
(declare-fun x1707 () Bool)
(declare-fun x721 (Int) Int)
(declare-fun x1252 () Int)
(declare-fun x1943 () Int)
(declare-fun x1488 () Int)
(declare-fun x1358 () Int)
(declare-fun x669 () Int)
(declare-fun x134 () Int)
(declare-fun x727 () Bool)
(declare-fun x1905 () Bool)
(declare-fun x501 () Bool)
(declare-fun x814 () Int)
(declare-fun x924 () Bool)
(declare-fun x2098 () Bool)
(declare-fun x37 () Int)
(declare-fun x2148 () Int)
(declare-fun x2002 () Int)
(declare-fun x884 () Bool)
(declare-fun x2083 () Int)
(declare-fun x1476 () Int)
(declare-fun x531 () Bool)
(declare-fun x2100 () x1127)
(declare-fun x996 () Bool)
(declare-fun x940 () x1127)
(declare-fun x1000 (x1127) Int)
(declare-fun x1189 () Bool)
(declare-fun x2173 () Bool)
(declare-fun x933 () Bool)
(declare-fun x304 () Int)
(declare-fun x189 () Bool)
(declare-fun x248 () Bool)
(declare-fun x1413 () x1127)
(declare-fun x373 () Int)
(declare-fun x706 () Int)
(declare-fun x1119 () x1127)
(declare-fun x1437 () Int)
(declare-fun x1182 () x1127)
(declare-fun x129 () Bool)
(declare-fun x456 () Int)
(declare-fun x2151 () Bool)
(declare-fun x115 () Bool)
(declare-fun x1664 () Int)
(declare-fun x1015 () Int)
(declare-fun x626 () Bool)
(declare-fun x1478 () x1127)
(declare-fun x2022 () Int)
(declare-fun x1619 () Bool)
(declare-fun x317 () Int)
(declare-fun x2164 () Int)
(declare-fun x1544 () Bool)
(declare-fun x1239 () Bool)
(declare-fun x1304 () Bool)
(declare-fun x818 (x1127) Int)
(declare-fun x778 () Bool)
(declare-fun x699 () Bool)
(declare-fun x85 () Bool)
(declare-fun x1032 () Int)
(declare-fun x545 () Int)
(declare-fun x1082 () Bool)
(declare-fun x969 () Int)
(declare-fun x1036 () Bool)
(declare-fun x714 () Bool)
(declare-fun x239 () Bool)
(declare-fun x353 () Bool)
(declare-fun x124 () Bool)
(declare-fun x839 () Bool)
(declare-fun x1904 () Bool)
(declare-fun x323 () Bool)
(declare-fun x38 () Bool)
(declare-fun x236 () Int)
(declare-fun x361 () Bool)
(declare-fun x575 () Bool)
(declare-fun x801 () Bool)
(declare-fun x217 () Bool)
(declare-fun x949 () Bool)
(declare-fun x1916 () Int)
(declare-fun x1703 () Bool)
(declare-fun x1709 (x1127) Int)
(declare-fun x187 () Bool)
(declare-fun x113 () x1127)
(declare-fun x57 () Bool)
(declare-fun x1712 () Int)
(declare-fun x523 (Int) Int)
(declare-fun x349 () Int)
(declare-fun x1920 () Bool)
(declare-fun x362 () x1127)
(declare-fun x661 () Int)
(declare-fun x1118 () x1127)
(declare-fun x408 () Bool)
(declare-fun x1392 () Int)
(declare-fun x1884 () x1127)
(declare-fun x192 () Int)
(declare-fun x2025 () Int)
(declare-fun x1696 () Int)
(declare-fun x395 (Int) Int)
(declare-fun x1033 () Bool)
(declare-fun x1963 () Bool)
(declare-fun x2063 () Int)
(declare-fun x879 () Bool)
(declare-fun x309 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x2030 () Bool)
(declare-fun x1986 () Bool)
(declare-fun x1375 () Bool)
(declare-fun x763 () Bool)
(declare-fun x2101 () Int)
(declare-fun x91 () Bool)
(declare-fun x326 () Bool)
(declare-fun x568 () Bool)
(declare-fun x1786 () Int)
(declare-fun x78 () Bool)
(declare-fun x1400 () Int)
(declare-fun x1891 () Bool)
(declare-fun x2112 () Bool)
(declare-fun x359 (Int) Int)
(declare-fun x1292 () Bool)
(declare-fun x701 () Int)
(declare-fun x1623 () Bool)
(declare-fun x268 () Bool)
(declare-fun x2125 () Int)
(declare-fun x1763 () Int)
(declare-fun x1606 () Bool)
(declare-fun x225 () Int)
(declare-fun x1300 () Int)
(declare-fun x2023 () Bool)
(declare-fun x1049 () Int)
(declare-fun x84 () Bool)
(declare-fun x979 () Bool)
(declare-fun x1897 () Bool)
(declare-fun x1445 () Int)
(declare-fun x671 () Int)
(declare-fun x1636 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x52 () Bool)
(declare-fun x707 () Int)
(declare-fun x2127 () Int)
(declare-fun x1511 () Int)
(declare-fun x1412 () Int)
(declare-fun x868 () Bool)
(declare-fun x453 () Int)
(declare-fun x1020 () Bool)
(declare-fun x914 () Bool)
(declare-fun x653 () Bool)
(declare-fun x439 () Int)
(declare-fun x1604 () Int)
(declare-fun x972 () Bool)
(declare-fun x1440 () Int)
(declare-fun x1679 () Int)
(declare-fun x2073 () Int)
(declare-fun x1856 () Bool)
(declare-fun x11 () Int)
(declare-fun x804 () Bool)
(declare-fun x796 () Bool)
(declare-fun x1828 () x1127)
(declare-fun x502 () Int)
(declare-fun x137 () Int)
(declare-fun x23 () Bool)
(declare-fun x1822 () Bool)
(declare-fun x1933 () Int)
(declare-fun x1241 () Int)
(declare-fun x1497 () Int)
(declare-fun x1186 () Int)
(declare-fun x595 () Bool)
(declare-fun x51 () Int)
(declare-fun x431 () Bool)
(declare-fun x890 () Int)
(declare-fun x1817 () Bool)
(declare-fun x2169 () Int)
(declare-fun x903 () Bool)
(declare-fun x2121 () Bool)
(declare-fun x1438 () Bool)
(declare-fun x1710 () Bool)
(declare-fun x1489 () Int)
(declare-fun x1383 () Int)
(declare-fun x1711 () Int)
(declare-fun x601 () Int)
(declare-fun x1447 () Int)
(declare-fun x1387 () Bool)
(declare-fun x1974 () Int)
(declare-fun x2072 () Bool)
(declare-fun x436 () Int)
(declare-fun x1468 () Bool)
(declare-fun x1778 () Int)
(declare-fun x2089 () Bool)
(declare-fun x1615 () Int)
(declare-fun x1546 () Int)
(declare-fun x1039 () Bool)
(declare-fun x404 () Bool)
(declare-fun x332 () Bool)
(declare-fun x1517 () Int)
(declare-fun x1654 () Bool)
(declare-fun x1492 () Bool)
(declare-fun x809 () Int)
(declare-fun x1011 () x1127)
(declare-fun x1806 (Int) Int)
(declare-fun x102 () Bool)
(declare-fun x1361 () Int)
(declare-fun x1784 () Bool)
(declare-fun x724 () Bool)
(declare-fun x1700 () Int)
(declare-fun x8 () Bool)
(declare-fun x445 () Bool)
(declare-fun x2145 () Int)
(declare-fun x155 () Int)
(declare-fun x953 () Bool)
(declare-fun x786 () x1127)
(declare-fun x1290 () Bool)
(declare-fun x787 () Bool)
(declare-fun x2140 () Int)
(declare-fun x734 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x806 () Bool)
(declare-fun x242 () Bool)
(declare-fun x1484 () Int)
(declare-fun x2031 () Int)
(declare-fun x1774 () Bool)
(declare-fun x486 () Bool)
(declare-fun x2137 () Int)
(declare-fun x614 () Int)
(declare-fun x1419 () Bool)
(declare-fun x290 () Bool)
(declare-fun x527 () Bool)
(declare-fun x484 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x1652 () Int)
(declare-fun x1673 () Int)
(declare-fun x334 () Bool)
(declare-fun x1855 () Int)
(declare-fun x1556 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x1044 () Int)
(declare-fun x1876 () Int)
(declare-fun x2019 () Bool)
(declare-fun x257 () Int)
(declare-fun x394 () Int)
(declare-fun x962 () Int)
(declare-fun x598 () Int)
(declare-fun x722 () Int)
(declare-fun x2017 () Bool)
(declare-fun x704 () Int)
(declare-fun x1421 () Bool)
(declare-fun x687 () Int)
(declare-fun x1337 () Int)
(declare-fun x1549 () Bool)
(declare-fun x1792 () x1127)
(declare-fun x1150 () Int)
(declare-fun x2095 () Int)
(declare-fun x390 () Int)
(declare-fun x426 () Bool)
(declare-fun x1682 () Int)
(declare-fun x494 () Bool)
(declare-fun x1333 () Int)
(declare-fun x1663 () Int)
(declare-fun x136 () Int)
(declare-fun x1041 () x1127)
(declare-fun x1393 () x1127)
(declare-fun x1359 () Int)
(declare-fun x1629 () Bool)
(declare-fun x211 () Bool)
(declare-fun x235 () Int)
(declare-fun x692 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x905 () Bool)
(declare-fun x1827 () Bool)
(declare-fun x1927 () Bool)
(declare-fun x384 () x1127)
(declare-fun x1750 () Bool)
(declare-fun x802 () Int)
(declare-fun x454 () Int)
(declare-fun x798 () Int)
(declare-fun x676 () Bool)
(declare-fun x247 () Int)
(declare-fun x128 () Int)
(declare-fun x691 () Int)
(declare-fun x708 () Bool)
(declare-fun x711 () x1127)
(declare-fun x1075 () Int)
(declare-fun x302 () Bool)
(declare-fun x1377 () Int)
(declare-fun x563 () Int)
(declare-fun x1007 () Bool)
(declare-fun x965 () Bool)
(declare-fun x2038 () Int)
(declare-fun x1023 () Bool)
(declare-fun x821 () Int)
(declare-fun x93 () Int)
(declare-fun x800 () Bool)
(declare-fun x2040 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x2059 () Bool)
(declare-fun x1391 () Int)
(declare-fun x2093 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x2141 () Int)
(declare-fun x89 () Int)
(declare-fun x16 () Bool)
(declare-fun x110 () Int)
(declare-fun x335 () Int)
(declare-fun x251 () Bool)
(declare-fun x1998 () Bool)
(declare-fun x175 () Bool)
(declare-fun x1245 () Int)
(declare-fun x2124 () Bool)
(declare-fun x794 () x1127)
(declare-fun x649 () Int)
(declare-fun x1258 () Int)
(declare-fun x772 () Int)
(declare-fun x542 () Bool)
(declare-fun x1698 () Bool)
(declare-fun x641 () Int)
(declare-fun x551 () Bool)
(declare-fun x1455 () Int)
(declare-fun x2146 () Int)
(declare-fun x1630 () Bool)
(declare-fun x524 () Bool)
(declare-fun x887 () Bool)
(declare-fun x1807 () Bool)
(declare-fun x1736 () Bool)
(declare-fun x968 () Bool)
(declare-fun x1153 () Bool)
(declare-fun x1691 () Int)
(declare-fun x409 () Int)
(declare-fun x928 () Int)
(declare-fun x640 () Int)
(declare-fun x1533 () Bool)
(declare-fun x596 () Bool)
(declare-fun x1148 () Bool)
(declare-fun x1675 () Int)
(declare-fun x1637 () Int)
(declare-fun x797 () Bool)
(declare-fun x1599 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x717 () Bool)
(declare-fun x1980 () Bool)
(declare-fun x1626 () Int)
(declare-fun x1579 () Bool)
(declare-fun x824 () Bool)
(declare-fun x1532 () Bool)
(declare-fun x1639 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x1566 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x171 () Bool)
(declare-fun x1279 () Int)
(declare-fun x1966 () Bool)
(declare-fun x1341 () Bool)
(declare-fun x423 () Bool)
(declare-fun x2163 () Int)
(declare-fun x558 () Bool)
(declare-fun x1439 () x1127)
(declare-fun x1815 () Bool)
(declare-fun x976 () Bool)
(declare-fun x1875 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x255 () Bool)
(declare-fun x532 () Int)
(declare-fun x1567 () Bool)
(declare-fun x112 () Bool)
(declare-fun x1518 () Int)
(declare-fun x77 (x1127) Int)
(declare-fun x1335 () Int)
(declare-fun x1265 () Bool)
(declare-fun x793 () Bool)
(declare-fun x581 () Int)
(declare-fun x1373 () Int)
(declare-fun x249 () Int)
(declare-fun x720 () Bool)
(declare-fun x506 () Int)
(declare-fun x2133 () Bool)
(declare-fun x941 () Bool)
(declare-fun x1086 () Int)
(declare-fun x733 () Int)
(declare-fun x525 () Bool)
(declare-fun x56 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x2136 () Bool)
(declare-fun x673 () Int)
(declare-fun x1071 () Bool)
(declare-fun x678 () Int)
(declare-fun x919 () Int)
(declare-fun x443 () Int)
(declare-fun x1050 () Bool)
(declare-fun x1644 () Int)
(declare-fun x1836 () Bool)
(declare-fun x206 () Bool)
(declare-fun x1106 () Int)
(declare-fun x159 () Bool)
(declare-fun x2020 () Bool)
(declare-fun x1627 () Int)
(declare-fun x108 () Int)
(declare-fun x1441 () Int)
(declare-fun x791 () Bool)
(declare-fun x172 () Bool)
(declare-fun x244 () Int)
(declare-fun x1560 () Int)
(declare-fun x246 () Int)
(declare-fun x895 () Bool)
(declare-fun x180 (x1127) Int)
(declare-fun x1938 () Int)
(declare-fun x843 () Bool)
(declare-fun x35 () Bool)
(declare-fun x750 () Bool)
(declare-fun x864 () Bool)
(declare-fun x1169 () Int)
(declare-fun x1733 () Int)
(declare-fun x1911 () Bool)
(declare-fun x74 () x1127)
(declare-fun x1598 () Int)
(declare-fun x743 () Bool)
(declare-fun x948 () Int)
(declare-fun x1584 (x1127) Int)
(declare-fun x902 () Bool)
(declare-fun x526 () Int)
(declare-fun x1581 () Bool)
(declare-fun x1272 () Bool)
(declare-fun x1824 () Int)
(declare-fun x198 () Bool)
(declare-fun x1858 () Int)
(declare-fun x1583 () Bool)
(declare-fun x440 () Int)
(declare-fun x1395 () Int)
(declare-fun x1046 () Bool)
(declare-fun x1551 () Int)
(declare-fun x2000 () Bool)
(declare-fun x2165 () Bool)
(declare-fun x1263 () Bool)
(declare-fun x2132 () Int)
(declare-fun x498 () Int)
(declare-fun x684 () Bool)
(declare-fun x955 () Bool)
(declare-fun x1870 () Int)
(declare-fun x1448 () Bool)
(declare-fun x1417 () Int)
(declare-fun x1374 () Int)
(declare-fun x1093 () Int)
(declare-fun x872 () x1127)
(declare-fun x347 () Int)
(declare-fun x372 () Int)
(declare-fun x748 () Bool)
(declare-fun x770 () Int)
(declare-fun x2111 () Bool)
(declare-fun x1349 () Bool)
(declare-fun x324 () x1127)
(declare-fun x567 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x422 () Bool)
(declare-fun x851 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x2144 () Bool)
(declare-fun x194 (Int Int) Int)
(declare-fun x1224 (Int Int) Int)
(declare-fun x1936 () Bool)
(declare-fun x222 () Bool)
(declare-fun x825 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x1334 () Int)
(declare-fun x480 () Int)
(declare-fun x2014 () Bool)
(declare-fun x566 () Int)
(declare-fun x2162 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x1990 () Bool)
(declare-fun x1940 () Bool)
(declare-fun x2047 () Bool)
(declare-fun x450 () Bool)
(declare-fun x1573 () Int)
(declare-fun x1894 () Int)
(declare-fun x1371 () Bool)
(declare-fun x1543 () Bool)
(declare-fun x331 () Bool)
(declare-fun x705 () Bool)
(declare-fun x2130 () Bool)
(declare-fun x896 () Int)
(declare-fun x1735 () x1127)
(declare-fun x114 () Bool)
(declare-fun x958 () Bool)
(declare-fun x1912 () Int)
(declare-fun x511 () Bool)
(declare-fun x261 () Int)
(declare-fun x1813 () Int)
(declare-fun x1903 () Int)
(declare-fun x1022 (Int) Int)
(declare-fun x1192 () x1127)
(declare-fun x1338 () Bool)
(declare-fun x1089 () Int)
(declare-fun x1677 () x1127)
(declare-fun x1526 () Bool)
(declare-fun x637 () Bool)
(declare-fun x1964 () Bool)
(declare-fun x146 () x1127)
(declare-fun x6 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x805 () Bool)
(declare-fun x656 () Bool)
(declare-fun x702 () Bool)
(declare-fun x1248 () Bool)
(declare-fun x313 () Int)
(declare-fun x1929 () Int)
(declare-fun x1871 () Int)
(declare-fun x416 () Int)
(declare-fun x205 () Bool)
(declare-fun x2139 () Int)
(declare-fun x1535 (Int Int) Int)
(declare-fun x849 () Int)
(declare-fun x1228 () Int)
(declare-fun x1305 () Bool)
(declare-fun x2082 () Int)
(declare-fun x910 () Bool)
(declare-fun x1522 () Bool)
(declare-fun x18 () Bool)
(declare-fun x277 () Int)
(declare-fun x1450 () Int)
(declare-fun x548 () Int)
(declare-fun x559 () Int)
(declare-fun x1172 () Int)
(declare-fun x1175 () Int)
(declare-fun x429 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x883 () Bool)
(declare-fun x1467 () Int)
(declare-fun x1970 () Bool)
(declare-fun x2108 () Int)
(declare-fun x1059 () x1127)
(declare-fun x1983 () Int)
(declare-fun x1889 () Int)
(declare-fun x418 () Int)
(declare-fun x1178 () Bool)
(declare-fun x751 () Int)
(declare-fun x1849 () Bool)
(declare-fun x846 () Int)
(declare-fun x1312 () Int)
(declare-fun x446 (Int Int) Int)
(declare-fun x670 () Int)
(declare-fun x519 () Int)
(declare-fun x1576 () Bool)
(declare-fun x1715 () Int)
(declare-fun x179 () Int)
(declare-fun x269 () Int)
(declare-fun x315 () x1127)
(declare-fun x978 () Int)
(declare-fun x1073 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x1937 () Bool)
(declare-fun x603 () Int)
(declare-fun x460 () Bool)
(declare-fun x871 () Int)
(declare-fun x781 () Int)
(declare-fun x2143 () Bool)
(declare-fun x709 () Bool)
(declare-fun x983 () Int)
(declare-fun x1738 () Bool)
(declare-fun x406 () x1127)
(declare-fun x1240 () Bool)
(declare-fun x876 () Bool)
(declare-fun x260 () Bool)
(declare-fun x1351 () Int)
(declare-fun x1206 () Int)
(declare-fun x774 () Bool)
(declare-fun x1418 () Bool)
(declare-fun x703 () Bool)
(declare-fun x582 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x571 () Int)
(declare-fun x338 () Int)
(declare-fun x1405 () Bool)
(declare-fun x1737 () Int)
(declare-fun x1880 () Bool)
(declare-fun x1772 () Bool)
(declare-fun x638 () Bool)
(declare-fun x1466 () Bool)
(declare-fun x1650 () Bool)
(declare-fun x303 () Int)
(declare-fun x606 () Int)
(declare-fun x357 () Int)
(declare-fun x49 () Int)
(declare-fun x1575 () Int)
(declare-fun x2077 () Int)
(declare-fun x624 () Int)
(declare-fun x495 () Bool)
(declare-fun x336 () Int)
(declare-fun x1220 () Int)
(declare-fun x483 () Int)
(declare-fun x22 () Bool)
(declare-fun x1414 () Int)
(declare-fun x434 () Bool)
(declare-fun x1064 () Int)
(declare-fun x201 () Bool)
(declare-fun x562 () Int)
(declare-fun x1491 () Int)
(declare-fun x1843 () Int)
(declare-fun x1616 () Int)
(declare-fun x73 () Bool)
(declare-fun x190 () Bool)
(declare-fun x1831 () Int)
(declare-fun x292 () Bool)
(declare-fun x1802 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x577 () Int)
(declare-fun x1052 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x1100 () Int)
(declare-fun x2001 () Int)
(declare-fun x293 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x739 () Int)
(declare-fun x39 () Bool)
(declare-fun x2174 () Int)
(declare-fun x1601 () Int)
(declare-fun x1031 () Bool)
(declare-fun x1329 () Bool)
(declare-fun x1472 () Bool)
(declare-fun x64 () Int)
(declare-fun x533 () Int)
(declare-fun x740 () Int)
(declare-fun x48 () Int)
(declare-fun x1173 () Bool)
(declare-fun x398 () Bool)
(declare-fun x634 () Int)
(declare-fun x382 () Int)
(declare-fun x1291 () Int)
(declare-fun x1945 () Int)
(declare-fun x370 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x1168 () Int)
(declare-fun x21 () Int)
(declare-fun x351 () Int)
(declare-fun x144 () Bool)
(declare-fun x330 () Bool)
(declare-fun x67 () Bool)
(declare-fun x773 () Bool)
(declare-fun x2055 () Bool)
(declare-fun x1568 () Int)
(declare-fun x1690 () Int)
(declare-fun x2078 () Int)
(declare-fun x1967 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x1699 () Bool)
(declare-fun x111 () Bool)
(declare-fun x1293 () Int)
(declare-fun x1242 () Bool)
(declare-fun x363 () Int)
(declare-fun x1281 () Bool)
(declare-fun x1847 () Int)
(declare-fun x360 () Bool)
(declare-fun x271 () Int)
(declare-fun x1219 () Bool)
(declare-fun x1770 () Bool)
(declare-fun x857 () Bool)
(declare-fun x369 () Bool)
(declare-fun x98 () Bool)
(declare-fun x765 () Bool)
(declare-fun x2051 () Bool)
(declare-fun x1503 () Int)
(declare-fun x592 () Int)
(declare-fun x1812 () Bool)
(declare-fun x183 () Int)
(declare-fun x1072 () Bool)
(declare-fun x2149 () Int)
(declare-fun x1701 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x1325 () Bool)
(declare-fun x1018 () Bool)
(declare-fun x1795 () Int)
(declare-fun x1452 () Bool)
(declare-fun x1485 () Int)
(declare-fun x2092 () Bool)
(declare-fun x572 () Bool)
(declare-fun x1326 (Int) Int)
(declare-fun x1719 () Int)
(declare-fun x1323 () Int)
(declare-fun x1830 () Int)
(declare-fun x1694 () Int)
(declare-fun x931 () Bool)
(declare-fun x1084 () Int)
(declare-fun x1899 () Int)
(declare-fun x321 () Bool)
(declare-fun x2166 (Int) Int)
(declare-fun x1600 () Bool)
(declare-fun x1366 () Bool)
(declare-fun x341 () Bool)
(declare-fun x2036 () Bool)
(declare-fun x1066 () Bool)
(declare-fun x482 () Bool)
(declare-fun x982 () Bool)
(declare-fun x1717 () Int)
(declare-fun x530 () x1127)
(declare-fun x2161 () Int)
(declare-fun x1065 () Bool)
(declare-fun x1218 () x1127)
(declare-fun x455 () Bool)
(declare-fun x690 () Bool)
(declare-fun x1935 () Int)
(declare-fun x43 () Bool)
(declare-fun x389 () Bool)
(declare-fun x543 () Bool)
(declare-fun x387 () Bool)
(declare-fun x923 () Int)
(declare-fun x1105 () Int)
(declare-fun x666 () Int)
(declare-fun x1137 () Bool)
(declare-fun x576 () Int)
(declare-fun x956 () Bool)
(declare-fun x1723 () Bool)
(declare-fun x262 () Bool)
(declare-fun x210 () Bool)
(declare-fun x272 () Bool)
(declare-fun x865 () Int)
(declare-fun x274 () Int)
(declare-fun x859 () Bool)
(declare-fun x1157 () Int)
(declare-fun x131 () x1127)
(declare-fun x1328 () Bool)
(declare-fun x746 () Bool)
(declare-fun x807 (Int) Int)
(declare-fun x1512 () Bool)
(declare-fun x1158 () Bool)
(declare-fun x1975 () Int)
(declare-fun x342 () Bool)
(declare-fun x1386 () x1127)
(declare-fun x438 () Bool)
(declare-fun x1394 () Int)
(declare-fun x86 () Bool)
(declare-fun x1866 () Bool)
(declare-fun x1523 () Int)
(declare-fun x1655 () Int)
(declare-fun x1536 () Bool)
(declare-fun x40 () Int)
(declare-fun x991 (Int) Int)
(declare-fun x1411 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x104 () Bool)
(declare-fun x1844 () Int)
(declare-fun x620 () Bool)
(declare-fun x213 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x1554 () Int)
(declare-fun x1385 () Bool)
(declare-fun x1534 () Int)
(declare-fun x202 () Bool)
(declare-fun x312 () Bool)
(declare-fun x491 () Int)
(declare-fun x1226 () Int)
(declare-fun x529 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x2 () Bool)
(declare-fun x1777 () Int)
(declare-fun x1968 () Bool)
(declare-fun x1167 () Int)
(declare-fun x639 () Bool)
(declare-fun x226 () Int)
(declare-fun x909 () Bool)
(declare-fun x737 () Bool)
(declare-fun x44 () Int)
(declare-fun x1221 () Int)
(declare-fun x855 () Int)
(declare-fun x393 () Int)
(declare-fun x1984 () Int)
(declare-fun x307 () Bool)
(declare-fun x713 () Bool)
(declare-fun x1490 () Int)
(declare-fun x1788 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x1648 () Bool)
(declare-fun x1821 () Int)
(declare-fun x285 () Bool)
(declare-fun x243 () Int)
(declare-fun x730 () Bool)
(declare-fun x1713 () Bool)
(declare-fun x1081 (Int) Int)
(declare-fun x221 () Bool)
(declare-fun x2135 () Int)
(declare-fun x1507 () Int)
(declare-fun x1070 () Int)
(declare-fun x1376 () Int)
(declare-fun x1754 () Bool)
(declare-fun x594 () Int)
(declare-fun x1331 () Bool)
(declare-fun x42 (Int Int) Int)
(declare-fun x1502 () Int)
(declare-fun x2050 () Bool)
(declare-fun x1934 () Int)
(declare-fun x492 () Bool)
(declare-fun x2033 () Bool)
(declare-fun x811 () Bool)
(declare-fun x682 () Bool)
(declare-fun x481 () Int)
(declare-fun x2128 () Int)
(declare-fun x1798 () Int)
(declare-fun x95 () Int)
(declare-fun x1952 () Int)
(declare-fun x1857 () Int)
(declare-fun x611 () x1127)
(declare-fun x1123 () Bool)
(declare-fun x1495 () Int)
(declare-fun x878 () Int)
(declare-fun x767 () Int)
(declare-fun x233 () Bool)
(declare-fun x24 () Int)
(declare-fun x1768 () Bool)
(declare-fun x1264 () x1127)
(declare-fun x1751 () Bool)
(declare-fun x1883 () Bool)
(declare-fun x685 () Int)
(declare-fun x1420 () Bool)
(declare-fun x897 () x1127)
(declare-fun x2168 () Bool)
(declare-fun x1216 (x1127) Int)
(declare-fun x1117 () Int)
(declare-fun x783 () Int)
(declare-fun x2070 () Int)
(declare-fun x1154 () Bool)
(declare-fun x1428 () Int)
(declare-fun x99 () Int)
(declare-fun x912 () Int)
(declare-fun x848 () Bool)
(declare-fun x1480 () Int)
(declare-fun x2015 (Int) Int)
(declare-fun x1079 () Bool)
(declare-fun x1839 () Int)
(declare-fun x1578 () Bool)
(declare-fun x1603 () Bool)
(declare-fun x1893 () x1127)
(declare-fun x1431 () Bool)
(declare-fun x1055 () Bool)
(declare-fun x863 () Int)
(declare-fun x1569 () Int)
(declare-fun x946 () Bool)
(declare-fun x832 () Bool)
(declare-fun x536 () Int)
(declare-fun x756 () Int)
(declare-fun x301 () Bool)
(declare-fun x842 () Int)
(declare-fun x862 () Bool)
(declare-fun x68 () Int)
(declare-fun x1238 () Int)
(declare-fun x1142 () Int)
(declare-fun x1618 () Bool)
(declare-fun x2008 () Bool)
(declare-fun x444 () Bool)
(declare-fun x1345 () Int)
(declare-fun x308 () Bool)
(declare-fun x1591 () Bool)
(declare-fun x957 () Bool)
(declare-fun x1628 () Int)
(declare-fun x2152 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x784 () Bool)
(declare-fun x1769 () Int)
(declare-fun x127 () Bool)
(declare-fun x80 () Bool)
(declare-fun x695 () Int)
(declare-fun x2119 () Int)
(declare-fun x881 () Bool)
(declare-fun x1275 () Int)
(declare-fun x1254 () Bool)
(declare-fun x1277 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x1237 () Bool)
(declare-fun x1152 () Int)
(declare-fun x471 () Int)
(declare-fun x1886 () Bool)
(declare-fun x1348 (Int) Int)
(declare-fun x2062 () Bool)
(declare-fun x1816 () Bool)
(declare-fun x343 () Int)
(declare-fun x987 () Bool)
(declare-fun x1901 () Int)
(declare-fun x1423 () Int)
(declare-fun x1562 () Bool)
(declare-fun x376 () Int)
(declare-fun x921 () Bool)
(declare-fun x780 () Bool)
(declare-fun x776 () Bool)
(declare-fun x1181 () Bool)
(declare-fun x1587 () Int)
(declare-fun x90 () Int)
(declare-fun x1430 () Int)
(declare-fun x1339 () Bool)
(declare-fun x388 () Bool)
(declare-fun x1103 () Int)
(declare-fun x1833 () Bool)
(declare-fun x1695 () Bool)
(declare-fun x2061 () Int)
(declare-fun x1026 () Int)
(declare-fun x2065 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x2007 () Bool)
(declare-fun x2110 () Bool)
(declare-fun x964 () Int)
(declare-fun x790 () Int)
(declare-fun x2115 () Bool)
(declare-fun x195 () Int)
(declare-fun x1063 () Bool)
(declare-fun x401 () Int)
(declare-fun x803 (Int) Int)
(declare-fun x75 () Int)
(declare-fun x916 () Bool)
(declare-fun x888 () Int)
(declare-fun x630 () x1127)
(declare-fun x1259 () Bool)
(declare-fun x1596 () Int)
(declare-fun x1765 () Int)
(declare-fun x1004 () x1127)
(declare-fun x1593 () Bool)
(declare-fun x2106 () Bool)
(declare-fun x574 () Int)
(declare-fun x513 () Int)
(declare-fun x2156 () Bool)
(declare-fun x31 () Bool)
(declare-fun x1794 () Int)
(declare-fun x1092 () x1127)
(declare-fun x1009 () Bool)
(declare-fun x36 () Bool)
(declare-fun x1149 () Int)
(declare-fun x1067 () Int)
(declare-fun x65 () Int)
(declare-fun x2010 (Int) Int)
(declare-fun x1972 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x675 () Bool)
(declare-fun x1513 () Int)
(declare-fun x273 () Bool)
(declare-fun x1074 () Int)
(declare-fun x735 () Bool)
(declare-fun x580 () Int)
(declare-fun x467 () Bool)
(declare-fun x597 () Bool)
(declare-fun x485 () Bool)
(declare-fun x238 () Int)
(declare-fun x142 () Bool)
(declare-fun x1083 () Int)
(declare-fun x759 () Bool)
(declare-fun x479 () Bool)
(declare-fun x2049 () Bool)
(declare-fun x1993 () Bool)
(declare-fun x847 () Bool)
(declare-fun x1528 () Int)
(declare-fun x1756 () Bool)
(declare-fun x992 () Bool)
(declare-fun x1666 () Bool)
(declare-fun x504 () Bool)
(declare-fun x1270 () Bool)
(declare-fun x813 () Bool)
(declare-fun x119 () Int)
(declare-fun x2046 () Int)
(declare-fun x281 () Int)
(declare-fun x1368 () Int)
(declare-fun x1155 () Bool)
(declare-fun x1767 () Bool)
(declare-fun x683 () Bool)
(declare-fun x658 () x1127)
(declare-fun x20 () Int)
(declare-fun x297 () Bool)
(declare-fun x1597 () Bool)
(declare-fun x2034 () Bool)
(declare-fun x457 () Bool)
(declare-fun x971 () Int)
(declare-fun x870 () Int)
(declare-fun x1390 () Int)
(declare-fun x27 () Bool)
(declare-fun x615 () Bool)
(declare-fun x1110 (Int Int) Int)
(declare-fun x1138 () Bool)
(declare-fun x358 () Bool)
(declare-fun x106 () Bool)
(declare-fun x1456 () Bool)
(declare-fun x1771 () Int)
(declare-fun x860 () Int)
(declare-fun x1582 () Int)
(declare-fun x1284 () Int)
(declare-fun x1684 () Bool)
(declare-fun x1783 () Bool)
(declare-fun x333 () Bool)
(declare-fun x1820 () x1127)
(declare-fun x1960 () x1127)
(declare-fun x1692 () Int)
(declare-fun x371 () Bool)
(declare-fun x799 () x1127)
(declare-fun x1846 () Int)
(declare-fun x164 () Bool)
(declare-fun x1931 () Int)
(declare-fun x1320 () Int)
(declare-fun x1356 () Bool)
(declare-fun x1667 () Int)
(declare-fun x537 () Int)
(declare-fun x1898 () Bool)
(declare-fun x741 () Int)
(declare-fun x1922 () Bool)
(declare-fun x2045 () x1127)
(declare-fun x1163 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x2004 () Int)
(declare-fun x917 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x999 () Int)
(declare-fun x123 () Bool)
(declare-fun x1396 () Int)
(declare-fun x1145 () Bool)
(declare-fun x758 () Bool)
(declare-fun x1605 () Int)
(declare-fun x541 () Bool)
(declare-fun x1842 () x1127)
(declare-fun x252 () Int)
(declare-fun x1951 () Bool)
(declare-fun x2056 () Int)
(declare-fun x986 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x1262 () Int)
(declare-fun x296 () Int)
(declare-fun x766 () Int)
(declare-fun x2076 () Int)
(declare-fun x1838 () Bool)
(declare-fun x266 () Int)
(declare-fun x2114 () Bool)
(declare-fun x664 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x1545 () Int)
(declare-fun x1257 () Bool)
(declare-fun x2134 () Bool)
(declare-fun x267 () Bool)
(declare-fun x1803 () Bool)
(declare-fun x2074 () Bool)
(declare-fun x1910 () Int)
(declare-fun x1956 () Int)
(declare-fun x1702 () Bool)
(declare-fun x381 () Int)
(declare-fun x1782 () Bool)
(declare-fun x209 () Bool)
(declare-fun x367 () Int)
(declare-fun x458 () Bool)
(declare-fun x435 () Int)
(declare-fun x1496 () Bool)
(declare-fun x944 () Bool)
(declare-fun x400 () Int)
(declare-fun x1499 () Bool)
(declare-fun x1862 () Bool)
(declare-fun x672 () Bool)
(declare-fun x1646 () Bool)
(declare-fun x901 () Bool)
(declare-fun x1853 () Bool)
(declare-fun x118 (Int) x1127)
(declare-fun x196 () Int)
(declare-fun x893 () Int)
(declare-fun x1574 () Bool)
(declare-fun x579 () Int)
(declare-fun x1107 () Bool)
(declare-fun x1773 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x2105 () Bool)
(declare-fun x608 () Bool)
(declare-fun x935 () Int)
(declare-fun x289 (Int) Int)
(declare-fun x166 () Bool)
(declare-fun x1548 () Int)
(declare-fun x792 () Bool)
(declare-fun x1246 () Int)
(declare-fun x1126 () Bool)
(declare-fun x258 () Int)
(declare-fun x657 () Int)
(declare-fun x452 () Bool)
(declare-fun x1958 () Int)
(declare-fun x1077 () Int)
(declare-fun x688 () Bool)
(declare-fun x970 () Bool)
(declare-fun x1685 () Int)
(declare-fun x633 (x1127) Int)
(declare-fun x1805 () Bool)
(declare-fun x1867 () Bool)
(declare-fun x1874 () Bool)
(declare-fun x218 () Bool)
(declare-fun x1804 () Bool)
(declare-fun x368 () Bool)
(declare-fun x1160 () Int)
(declare-fun x1705 () Int)
(declare-fun x1261 () Bool)
(declare-fun x1464 () Int)
(declare-fun x585 (Int) Int)
(declare-fun x1161 () Int)
(declare-fun x539 () Int)
(declare-fun x366 () x1127)
(declare-fun x1863 () Bool)
(declare-fun x1229 () Int)
(declare-fun x908 () Bool)
(declare-fun x204 () Int)
(declare-fun x1367 () Bool)
(declare-fun x854 () Bool)
(declare-fun x1555 () Int)
(declare-fun x2104 () Bool)
(declare-fun x697 () Int)
(declare-fun x646 () x1127)
(declare-fun x1872 () Bool)
(declare-fun x279 () Bool)
(declare-fun x1793 () Int)
(declare-fun x298 () Int)
(declare-fun x219 () Bool)
(declare-fun x207 () Bool)
(declare-fun x623 () Bool)
(declare-fun x715 () Bool)
(declare-fun x1024 () Bool)
(declare-fun x1208 () x1127)
(declare-fun x510 (x1127) Int)
(declare-fun x817 () Int)
(declare-fun x1309 () Int)
(declare-fun x777 (x1127) Int)
(declare-fun x275 () Int)
(declare-fun x1954 () Int)
(declare-fun x227 () Bool)
(declare-fun x2024 () Int)
(declare-fun x139 () Bool)
(declare-fun x1925 () Int)
(declare-fun x364 () Bool)
(declare-fun x122 () Bool)
(declare-fun x1486 () Int)
(declare-fun x1002 () Int)
(declare-fun x768 () x1127)
(declare-fun x45 () Bool)
(declare-fun x1799 () Bool)
(declare-fun x621 () Bool)
(declare-fun x383 () Bool)
(declare-fun x1078 () Int)
(declare-fun x82 () Bool)
(declare-fun x1722 () Bool)
(declare-fun x2084 () Bool)
(declare-fun x1595 () Bool)
(declare-fun x1306 () Int)
(declare-fun x1384 () Bool)
(declare-fun x88 () Bool)
(declare-fun x1111 () Int)
(declare-fun x1714 () Int)
(declare-fun x141 () Int)
(declare-fun x554 () Bool)
(declare-fun x578 () Bool)
(declare-fun x1811 () Int)
(declare-fun x101 () Bool)
(declare-fun x1800 () Int)
(declare-fun x764 () Int)
(declare-fun x448 () Int)
(declare-fun x1859 () Bool)
(declare-fun x518 () Int)
(declare-fun x951 () Int)
(declare-fun x1742 () Bool)
(declare-fun x1109 () Int)
(declare-fun x629 () Int)
(declare-fun x1076 () Bool)
(declare-fun x1128 () Int)
(declare-fun x1213 () x1127)
(declare-fun x2096 () Int)
(declare-fun x391 () Bool)
(declare-fun x830 () Bool)
(declare-fun x1133 () Int)
(declare-fun x1979 () Bool)
(declare-fun x961 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x1427 () Int)
(declare-fun x1865 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x135 () Int)
(declare-fun x103 () Bool)
(declare-fun x28 () Bool)
(declare-fun x29 () Bool)
(declare-fun x644 () Bool)
(declare-fun x1724 () Bool)
(declare-fun x46 () Bool)
(declare-fun x71 () Int)
(declare-fun x1097 () Int)
(declare-fun x1868 () Bool)
(declare-fun x1861 () Int)
(declare-fun x1797 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x1978 () Bool)
(declare-fun x564 () Bool)
(declare-fun x939 () Int)
(declare-fun x7 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x1592 () Int)
(declare-fun x1113 () Bool)
(declare-fun x681 () Int)
(declare-fun x145 () Bool)
(declare-fun x417 () Bool)
(declare-fun x1310 () Int)
(declare-fun x2068 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x1463 () Int)
(declare-fun x193 () Int)
(declare-fun x402 () Int)
(declare-fun x1211 () Bool)
(declare-fun x869 () Bool)
(declare-fun x993 () Bool)
(declare-fun x1183 () Bool)
(declare-fun x1372 () Int)
(declare-fun x1295 () Int)
(declare-fun x1401 () Bool)
(declare-fun x744 () Bool)
(declare-fun x521 () Bool)
(declare-fun x1001 () Int)
(declare-fun x966 () Int)
(declare-fun x936 () Bool)
(declare-fun x1570 () Bool)
(declare-fun x906 () Bool)
(declare-fun x1850 () Int)
(declare-fun x973 () Bool)
(declare-fun x188 () Int)
(declare-fun x1909 () Bool)
(declare-fun x1217 () x1127)
(declare-fun x619 () Int)
(declare-fun x1299 () Bool)
(declare-fun x2172 () Bool)
(declare-fun x1267 () Int)
(declare-fun x208 () Bool)
(declare-fun x505 () Int)
(declare-fun x1728 () Int)
(declare-fun x1314 () Int)
(declare-fun x1580 () Int)
(declare-fun x1209 () Bool)
(declare-fun x168 () Bool)
(declare-fun x604 () Bool)
(declare-fun x1826 () Int)
(declare-fun x1301 () Bool)
(declare-fun x980 () Int)
(declare-fun x616 () Bool)
(declare-fun x1362 () Int)
(declare-fun x674 () Int)
(declare-fun x1631 () x1127)
(declare-fun x838 () Bool)
(declare-fun x1624 () Int)
(declare-fun x1902 () Bool)
(declare-fun x1915 () Int)
(declare-fun x654 () Bool)
(declare-fun x282 () Bool)
(declare-fun x837 () Int)
(declare-fun x1823 () Int)
(declare-fun x1563 () Int)
(declare-fun x228 () Bool)
(declare-fun x2012 () Bool)
(declare-fun x2085 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x177 () Int)
(declare-fun x1780 () Int)
(declare-fun x1632 () Bool)
(declare-fun x1659 () Bool)
(declare-fun x397 () Int)
(declare-fun x428 () Bool)
(declare-fun x844 () Int)
(declare-fun x161 () Int)
(declare-fun x1185 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x875 () Int)
(declare-fun x449 (Int) Int)
(declare-fun x1346 () Bool)
(declare-fun x1730 () Bool)
(declare-fun x1638 () Int)
(declare-fun x2069 () Bool)
(declare-fun x988 (x1127) Int)
(declare-fun x1669 () Int)
(declare-fun x1425 () Int)
(declare-fun x1057 () Int)
(declare-fun x642 () Int)
(declare-fun x1042 () Bool)
(declare-fun x1649 () Int)
(declare-fun x668 () Int)
(declare-fun x652 () Bool)
(declare-fun x1114 () Int)
(declare-fun x1928 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x1981 () Int)
(declare-fun x795 () Bool)
(declare-fun x2080 () Int)
(declare-fun x133 () Bool)
(declare-fun x850 () Bool)
(declare-fun x59 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x1188 () Int)
(declare-fun x1061 () Int)
(declare-fun x963 () Int)
(declare-fun x447 () Bool)
(declare-fun x509 () Int)
(declare-fun x522 () Bool)
(declare-fun x14 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x1434 () Int)
(declare-fun x762 () Bool)
(declare-fun x130 () Bool)
(declare-fun x280 () Bool)
(declare-fun x853 () Bool)
(declare-fun x413 () Bool)
(declare-fun x1676 () Bool)
(declare-fun x1019 () Bool)
(declare-fun x1454 () Bool)
(declare-fun x50 () Bool)
(declare-fun x224 () Bool)
(declare-fun x1471 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x32 () Bool)
(declare-fun x1062 () Int)
(declare-fun x254 () Int)
(declare-fun x1504 () Int)
(declare-fun x158 () Int)
(declare-fun x2087 (Int) Int)
(declare-fun x9 () Int)
(declare-fun x314 () Int)
(declare-fun x1180 () Int)
(declare-fun x468 () Int)
(declare-fun x1397 () Bool)
(declare-fun x1465 () Bool)
(declare-fun x1459 () Int)
(declare-fun x989 () Bool)
(declare-fun x1878 () Int)
(declare-fun x593 () Bool)
(declare-fun x627 () Bool)
(declare-fun x148 () Int)
(declare-fun x1693 () Int)
(declare-fun x719 () Int)
(declare-fun x760 () Bool)
(declare-fun x1006 () Int)
(declare-fun x346 () Int)
(declare-fun x96 () Bool)
(declare-fun x1087 () Int)
(declare-fun x1558 () Int)
(declare-fun x873 () Bool)
(declare-fun x354 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x1651 () Bool)
(declare-fun x1223 () Bool)
(declare-fun x1785 () Bool)
(declare-fun x420 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x591 () Int)
(declare-fun x1415 () Int)
(declare-fun x560 () Int)
(declare-fun x344 () Int)
(declare-fun x377 () Bool)
(declare-fun x977 () Bool)
(declare-fun x882 (Int) Int)
(declare-fun x1233 () Int)
(declare-fun x754 () Int)
(declare-fun x662 () Int)
(declare-fun x380 () Bool)
(declare-fun x1908 () Bool)
(declare-fun x348 () Bool)
(declare-fun x894 () Bool)
(declare-fun x877 () Bool)
(declare-fun x723 () Int)
(declare-fun x995 () Bool)
(declare-fun x1939 () Bool)
(declare-fun x1524 () Int)
(declare-fun x1124 (Int) Int)
(declare-fun x1317 () Int)
(declare-fun x2099 () Int)
(declare-fun x1890 () Int)
(declare-fun x270 () Int)
(declare-fun x718 () Int)
(declare-fun x2044 () Bool)
(declare-fun x1611 () Bool)
(declare-fun x836 () Int)
(declare-fun x327 () Bool)
(declare-fun x2086 () Bool)
(declare-fun x2011 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x174 () Bool)
(declare-fun x1382 () Int)
(declare-fun x1080 () Bool)
(declare-fun x1449 () Int)
(declare-fun x237 () x1127)
(declare-fun x752 () Bool)
(declare-fun x1364 () Int)
(declare-fun x1841 () Int)
(declare-fun x514 () Bool)
(declare-fun x1962 () Bool)
(declare-fun x1068 () Int)
(declare-fun x507 () Bool)
(declare-fun x337 () Int)
(declare-fun x2154 () Int)
(declare-fun x496 () Int)
(declare-fun x432 () Bool)
(declare-fun x981 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x470 () Int)
(declare-fun x240 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x469 () Int)
(declare-fun x747 () Bool)
(declare-fun x263 () Int)
(declare-fun x2081 () Int)
(declare-fun x488 () Int)
(declare-fun x945 () Int)
(declare-fun x835 () Bool)
(declare-fun x745 () Bool)
(declare-fun x1316 () Int)
(declare-fun x121 () x1127)
(declare-fun x1029 () Int)
(declare-fun x2032 () Int)
(declare-fun x1482 () Int)
(declare-fun x775 () Int)
(declare-fun x1085 () Bool)
(declare-fun x433 () Bool)
(declare-fun x1203 () Int)
(declare-fun x81 () Bool)
(declare-fun x2160 () Int)
(declare-fun x1860 () Bool)
(declare-fun x808 () Bool)
(declare-fun x1519 () Bool)
(declare-fun x288 () Bool)
(declare-fun x1370 () Bool)
(declare-fun x782 () Bool)
(declare-fun x1553 () Bool)
(declare-fun x625 () Bool)
(declare-fun x1343 () Int)
(declare-fun x959 () Bool)
(declare-fun x588 (Int) Int)
(declare-fun x1170 () Bool)
(declare-fun x769 () Int)
(declare-fun x461 () Bool)
(declare-fun x1134 () Bool)
(declare-fun x1130 () Bool)
(declare-fun x1697 () Bool)
(declare-fun x1027 () Bool)
(declare-fun x2158 () Bool)
(declare-fun x2129 () Int)
(declare-fun x726 () Bool)
(declare-fun x1633 () Bool)
(declare-fun x755 () Bool)
(declare-fun x424 () x1127)
(declare-fun x749 () Int)
(declare-fun x178 () Int)
(declare-fun x459 () Bool)
(declare-fun x985 () Int)
(declare-fun x1704 () Bool)
(declare-fun x322 () Int)
(declare-fun x1165 () Bool)
(declare-fun x1999 () Int)
(declare-fun x138 () Int)
(declare-fun x2126 () x1127)
(declare-fun x291 () Int)
(declare-fun x1099 () Int)
(declare-fun x352 () Bool)
(declare-fun x87 () Int)
(declare-fun x489 () Int)
(declare-fun x1814 () Bool)
(declare-fun x1340 () Bool)
(declare-fun x1146 () Int)
(declare-fun x472 () Bool)
(declare-fun x1614 () Int)
(declare-fun x1977 () Bool)
(declare-fun x728 () Int)
(declare-fun x1887 () Bool)
(declare-fun x651 () Int)
(declare-fun x499 () Int)
(declare-fun x840 (Int Int) Int)
(declare-fun x478 () Bool)
(declare-fun x1753 () Bool)
(define-fun x12 ((x1127 x1127) (x54 Int)) x1127 (ite ((_ is x1231) x1127) (x1231 (x1590 x1127) (x516 x1127) (x731 x1127) (x636 x1127) (x1919 x1127) (x1040 x1127) (x1565 x1127) (+ x54 (x2109 x1127))) (ite ((_ is x1946) x1127) (x1946 (x1577 x1127) (x1244 x1127) (x72 x1127) (x822 x1127) (x2066 x1127) (x828 x1127) (+ x54 (x942 x1127))) (ite ((_ is x1379) x1127) (x1379 (x1757 x1127) (x1426 x1127) (x396 x1127) (x660 x1127) (x151 x1127) (+ (x1296 x1127) x54)) (ite ((_ is x1801) x1127) (x1801 (x557 x1127) (x1796 x1127) (x1230 x1127) (x1294 x1127) (+ x54 (x1327 x1127))) (ite ((_ is x223) x1127) (x223 (x1174 x1127) (x1028 x1127) (x462 x1127) (+ x54 (x259 x1127))) (ite ((_ is x898) x1127) (x898 (x203 x1127) (+ x54 (x631 x1127))) (ite ((_ is x1436) x1127) (x1436 (x1095 x1127) (x2117 x1127) (+ (x58 x1127) x54)) (x53 (+ (x62 x1127) x54))))))))))
(define-fun x97 ((x1510 Int)) Int (ite (and (<= 0 x1510) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1510)) x1510 (- x1510 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x473 ((x1510 Int)) Int (ite (and (>= x1510 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x1510)) (+ x1510 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1510))
(define-fun x375 ((x1510 Int)) Int (ite (and (>= x1510 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1510)) x1510 (ite (and (>= x1510 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< x1510 231584178474632390847141970017375815706539969331281128078915168015826259279872)) (- x1510 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (> 0 x1510) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1510)) (+ x1510 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x1510 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x590 ((x679 Int)) Bool (and (<= 0 x679) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679)))
(define-fun x212 ((x679 Int) (x1048 Int)) Bool (and (> x1048 (x1224 x679 x1048)) (>= (x1224 x679 x1048) 0)))
(define-fun x1681 ((x679 Int) (x1048 Int)) Bool (=> (and (> x1048 0) (>= x679 0)) (= (< x679 x1048) (= (x1224 x679 x1048) x679))))
(define-fun x2027 ((x679 Int) (x1048 Int)) Bool (=> (and (> x1048 0) (and (>= x679 x1048) (< x679 (+ x1048 x1048)))) (= (- x679 x1048) (x1224 x679 x1048))))
(define-fun x1881 ((x679 Int)) Bool (= (x1224 0 x679) 0))
(define-fun x229 ((x679 Int)) Bool (= (x1224 x679 1) 0))
(define-fun x2042 ((x679 Int)) Bool (= (x1224 x679 x679) 0))
(define-fun x34 ((x679 Int)) Bool (and (x229 x679) (x1881 x679) (x2042 x679)))
(define-fun x1505 ((x679 Int) (x1048 Int)) Bool (=> (and (< 0 x1048) (> x679 0)) (= (= x1048 (x1110 (x375 (x446 x679 x1048)) x679)) (< (x446 x679 x1048) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x677 ((x679 Int) (x1048 Int)) Bool (=> (and (not (= 0 x1048)) (not (= x679 0))) (and (= x679 (x1110 (x446 x679 x1048) x1048)) (= x1048 (x1110 (x446 x679 x1048) x679)))))
(define-fun x319 ((x679 Int) (x1048 Int)) Bool (=> (and (> x1048 0) (> x679 0)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x446 x679 x1048)) (> x1048 (x1110 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)))))
(define-fun x1825 ((x679 Int) (x1048 Int)) Bool (and (= (x375 (x446 (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1048 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x375 (x446 x679 x1048))) (= (x375 (x446 x679 x1048)) (x375 (x446 (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1048))) (= (x375 (x446 x679 (- x1048 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x375 (x446 x679 x1048)))))
(define-fun x1215 ((x679 Int) (x1048 Int)) Bool (and (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x679) (<= x679 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (> x1048 0) (<= x1048 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x1110 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1048) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x446 (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1048)))) (=> (and (and (> x679 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x679)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1048) (< 0 x1048))) (= (<= x679 (x1110 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1048)) (<= (x446 x679 x1048) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (<= x679 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x679 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1048) (> x1048 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (x446 (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1048 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x1110 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1048)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1048) (> x1048 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (<= x679 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x679 0))) (= (>= (x1110 57896044618658097711785492504343953926634992332820282019728792003956564819968 x679) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1048)) (>= (x446 x679 (- x1048 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968))))))
(define-fun x1744 ((x679 Int)) Bool (and (= (x446 x679 0) 0) (= 0 (x446 0 x679))))
(define-fun x1641 ((x679 Int)) Bool (and (= x679 (x446 1 x679)) (= (x446 x679 1) x679)))
(define-fun x696 ((x679 Int)) Bool (and (x1641 x679) (x1744 x679)))
(define-fun x165 ((x679 Int)) Bool (and (= x679 (x1535 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679)) (= x679 (x1535 x679 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x2006 ((x679 Int)) Bool (and (= (x1535 x679 0) 0) (= (x1535 0 x679) 0)))
(define-fun x79 ((x679 Int)) Bool (= x679 (x1535 x679 x679)))
(define-fun x1640 ((x679 Int)) Bool (and (x165 x679) (x2006 x679) (x79 x679)))
(define-fun x1729 ((x679 Int) (x1048 Int)) Bool (= (x1535 x1048 x679) (x1535 x679 x1048)))
(define-fun x1282 ((x679 Int) (x1048 Int)) Bool (and (=> (<= 0 x1048) (<= (x1535 x679 x1048) x1048)) (=> (<= 0 x679) (>= x679 (x1535 x679 x1048))) (<= 0 (x1535 x679 x1048))))
(define-fun x1997 ((x679 Int) (x1048 Int)) Bool (and (x1282 x679 x1048) (x1729 x679 x1048)))
(define-fun x1621 ((x679 Int)) Bool (= (x1535 x679 26959946667150639794667015087019630673637144422540572481103610249215) (x1224 x679 26959946667150639794667015087019630673637144422540572481103610249216)))
(define-fun x632 ((x679 Int)) Bool (and (x1997 x679 26959946667150639794667015087019630673637144422540572481103610249215) (x1621 x679)))
(define-fun x1781 ((x679 Int)) Bool (= (x375 x679) (+ (x1535 x679 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1224 x679 32))))
(define-fun x156 ((x679 Int)) Bool (and (x1997 x679 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1781 x679)))
(define-fun x1791 ((x679 Int) (x1048 Int)) Bool (=> (and (< 0 x1048) (< 0 x679)) (and (>= (x1110 x679 x1048) 0) (<= (x1110 x679 x1048) x679))))
(define-fun x1354 ((x679 Int) (x1048 Int)) Bool (=> (and (and (<= 1 x1048) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1048)) (and (>= x679 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1110 x679 x1048)) (<= 0 (x1110 x679 x1048)))))
(define-fun x698 ((x679 Int) (x1048 Int)) Bool (=> (and (> x679 x1048) (< 1 x1048)) (> x679 (x1110 x679 x1048))))
(define-fun x1131 ((x679 Int) (x1048 Int)) Bool (=> (and (> x1048 0) (< 0 x679)) (= (< x679 x1048) (= 0 (x1110 x679 x1048)))))
(define-fun x826 ((x679 Int)) Bool (= (x1110 0 x679) 0))
(define-fun x659 ((x679 Int)) Bool (= (x1110 x679 1) x679))
(define-fun x570 ((x679 Int)) Bool (=> (not (= 0 x679)) (= 1 (x1110 x679 x679))))
(define-fun x643 ((x679 Int)) Bool (and (x659 x679) (x826 x679) (x570 x679)))
(define-fun x1474 ((x679 Int)) Bool (= (x1224 x679 2) (x1535 x679 1)))
(define-fun x1274 ((x679 Int)) Bool (and (x1474 x679) (x1997 x679 1)))
(define-fun x1662 ((x679 Int)) Bool (= (x1224 x679 128) (x1535 x679 127)))
(define-fun x856 ((x679 Int)) Bool (and (x1662 x679) (x1997 x679 127)))
(define-fun x861 ((x679 Int)) Bool (= (x375 x679) (+ (x1535 x679 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x1224 x679 256))))
(define-fun x1718 ((x679 Int)) Bool (and (x1997 x679 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x861 x679)))
(define-fun x1458 ((x679 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x194 x679 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x194 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x199 ((x679 Int)) Bool (and (= x679 (x194 0 x679)) (= (x194 x679 0) x679)))
(define-fun x960 ((x679 Int)) Bool (= (x194 x679 x679) x679))
(define-fun x1895 ((x679 Int)) Bool (and (x960 x679) (x199 x679) (x1458 x679)))
(define-fun x1003 ((x679 Int) (x1048 Int)) Bool (= (x194 x1048 x679) (x194 x679 x1048)))
(define-fun x729 ((x679 Int) (x1048 Int)) Bool (and (=> (>= x679 0) (>= (x194 x679 x1048) x679)) (<= (x194 x679 x1048) (+ x1048 x679)) (=> (<= 0 x1048) (<= x1048 (x194 x679 x1048)))))
(define-fun x1529 ((x679 Int) (x1048 Int)) Bool (and (x729 x679 x1048) (x1003 x679 x1048)))
(define-fun x694 ((x1941 Int)) Int (ite (> x1598 x1941) (x2087 x1941) 0))
(define-fun x1120 ((x1941 Int)) Int (ite (< x1941 x781) (x1926 x1941) 0))
(define-fun x610 ((x1941 Int)) Int (ite (< x1941 x680) (x1081 x1941) 0))
(define-fun x140 ((x1941 Int)) Int (ite (> x357 x1941) (x588 x1941) 0))
(define-fun x2058 ((x1941 Int)) Int (ite (= x1694 x1941) x1333 (x1022 x1941)))
(define-fun x421 ((x1941 Int)) Int (ite (= x1941 x837) x1694 (x197 x1941)))
(define-fun x340 ((x1941 Int)) Int (ite x1405 (x1022 x1941) (x2058 x1941)))
(define-fun x1308 ((x1941 Int)) Int (ite x1405 (x197 x1941) (x421 x1941)))
(define-fun x2016 ((x1941 Int)) Int (ite (= x2120 x1941) x296 (x340 x1941)))
(define-fun x1516 ((x1941 Int)) Int (ite (= x1941 x1663) x2120 (x1308 x1941)))
(define-fun x1538 ((x1941 Int)) Int (ite x895 (x1308 x1941) (x1516 x1941)))
(define-fun x1462 ((x1941 Int)) Int (ite x895 (x340 x1941) (x2016 x1941)))
(define-fun x1873 ((x1941 Int)) Int (ite (= x1941 x1444) x1518 (x1462 x1941)))
(define-fun x2088 ((x1941 Int)) Int (ite (= x1941 x2125) x1373 (x1538 x1941)))
(define-fun x534 ((x1941 Int)) Int (ite x1868 (ite x2111 (x1462 x1941) (x1873 x1941)) (x1873 x1941)))
(define-fun x490 ((x1941 Int)) Int (ite x1868 (ite x2111 (x1538 x1941) (x2088 x1941)) (x2088 x1941)))
(define-fun x584 ((x1941 Int)) Int (x490 x1941))
(define-fun x655 ((x1941 Int)) Int (ite x272 (x584 x1941) (ite x290 (x490 x1941) (x584 x1941))))
(define-fun x1661 ((x1941 Int)) Int (ite x637 (x655 x1941) (x490 x1941)))
(define-fun x732 ((x1941 Int)) Int (x490 x1941))
(define-fun x1403 ((x1941 Int)) Int (ite (= x1941 x1068) x1596 (x490 x1941)))
(define-fun x934 ((x1941 Int)) Int (ite x1051 (x490 x1941) (x1403 x1941)))
(define-fun x1010 ((x1941 Int)) Int (ite x1136 (x732 x1941) (x934 x1941)))
(define-fun x1017 ((x1941 Int)) Int (ite x1593 (x1010 x1941) (ite x1039 (x490 x1941) (x1010 x1941))))
(define-fun x1762 ((x1941 Int)) Int (ite x209 (x1661 x1941) (x1017 x1941)))
(define-fun x1864 ((x1941 Int)) Int (x490 x1941))
(define-fun x1716 ((x1941 Int)) Int (ite (= x1068 x1941) x1061 (x490 x1941)))
(define-fun x1190 ((x1941 Int)) Int (ite (= x1941 x90) x571 (x1716 x1941)))
(define-fun x1307 ((x1941 Int)) Int (ite x1578 (x490 x1941) (x1716 x1941)))
(define-fun x997 ((x1941 Int)) Int (ite x1239 (x1190 x1941) (x1307 x1941)))
(define-fun x1520 ((x1941 Int)) Int (ite x1402 (x490 x1941) (x997 x1941)))
(define-fun x1942 ((x1941 Int)) Int (ite x2168 (x1864 x1941) (x1520 x1941)))
(define-fun x2155 ((x1941 Int)) Int (ite x1940 (x1942 x1941) (ite x1767 (x490 x1941) (x1942 x1941))))
(define-fun x465 ((x1941 Int)) Int (ite x1549 (x1762 x1941) (x2155 x1941)))
(define-fun x892 ((x1941 Int)) Int (x490 x1941))
(define-fun x339 ((x1941 Int)) Int (ite (= x1068 x1941) x347 (x490 x1941)))
(define-fun x561 ((x1941 Int)) Int (ite (= x1489 x1941) x1931 (x339 x1941)))
(define-fun x311 ((x1941 Int)) Int (ite (= x1941 x1467) x1914 (x561 x1941)))
(define-fun x925 ((x1941 Int)) Int (ite x625 (x311 x1941) (x490 x1941)))
(define-fun x1607 ((x1941 Int)) Int (ite (= x1941 x788) x1236 (x925 x1941)))
(define-fun x1243 ((x1941 Int)) Int (ite x251 (x490 x1941) (x1607 x1941)))
(define-fun x920 ((x1941 Int)) Int (ite x1499 (x892 x1941) (ite x1542 (x1243 x1941) (x490 x1941))))
(define-fun x926 ((x1941 Int)) Int (ite x616 (x920 x1941) (ite x986 (x490 x1941) (x920 x1941))))
(define-fun x1612 ((x1941 Int)) Int (ite x69 (x465 x1941) (x926 x1941)))
(define-fun x1129 ((x1941 Int)) Int (ite x745 (x490 x1941) (ite x1319 (x1612 x1941) (x490 x1941))))
(define-fun x1054 ((x1941 Int)) Int (x1124 x1941))
(define-fun x1453 ((x1941 Int)) Int (ite x272 (x1054 x1941) (ite x290 (x1124 x1941) (x1054 x1941))))
(define-fun x612 ((x1941 Int)) Int (ite x637 (x1453 x1941) (x1124 x1941)))
(define-fun x1988 ((x1941 Int)) Int (x1124 x1941))
(define-fun x1759 ((x1941 Int)) Int (x1124 x1941))
(define-fun x181 ((x1941 Int)) Int (ite x1136 (x1988 x1941) (x1759 x1941)))
(define-fun x405 ((x1941 Int)) Int (ite x1593 (x181 x1941) (ite x1039 (x1124 x1941) (x181 x1941))))
(define-fun x232 ((x1941 Int)) Int (ite x209 (x612 x1941) (x405 x1941)))
(define-fun x1790 ((x1941 Int)) Int (x1124 x1941))
(define-fun x1613 ((x1941 Int)) Int (x1124 x1941))
(define-fun x25 ((x1941 Int)) Int (ite x2168 (x1790 x1941) (x1613 x1941)))
(define-fun x160 ((x1941 Int)) Int (ite x1940 (x25 x1941) (ite x1767 (x1124 x1941) (x25 x1941))))
(define-fun x1995 ((x1941 Int)) Int (ite x1549 (x232 x1941) (x160 x1941)))
(define-fun x520 ((x1941 Int)) Int (x1124 x1941))
(define-fun x1021 ((x1941 Int)) Int (x1124 x1941))
(define-fun x487 ((x1941 Int)) Int (ite x1499 (x520 x1941) (ite x1542 (x1021 x1941) (x1124 x1941))))
(define-fun x2057 ((x1941 Int)) Int (ite x616 (x487 x1941) (ite x986 (x1124 x1941) (x487 x1941))))
(define-fun x442 ((x1941 Int)) Int (ite x69 (x1995 x1941) (x2057 x1941)))
(define-fun x2171 ((x1941 Int)) Int (ite x745 (x1124 x1941) (ite x1319 (x442 x1941) (x1124 x1941))))
(define-fun x1202 ((x1941 x1127)) Int (x777 x1941))
(define-fun x2113 ((x1941 x1127)) Int (ite x272 (x1202 x1941) (ite x290 (x777 x1941) (x1202 x1941))))
(define-fun x1643 ((x1941 x1127)) Int (ite x637 (x2113 x1941) (x777 x1941)))
(define-fun x2009 ((x1941 x1127)) Int (ite (= x1941 x1182) x1813 (x777 x1941)))
(define-fun x1521 ((x1941 x1127)) Int (ite x1051 (x777 x1941) (x2009 x1941)))
(define-fun x1487 ((x1941 x1127)) Int (ite x1136 (x777 x1941) (x1521 x1941)))
(define-fun x858 ((x1941 x1127)) Int (ite x1593 (x1487 x1941) (ite x1039 (x777 x1941) (x1487 x1941))))
(define-fun x1747 ((x1941 x1127)) Int (ite x209 (x1643 x1941) (x858 x1941)))
(define-fun x974 ((x1941 x1127)) Int (ite (= x1059 x1941) x1056 (x777 x1941)))
(define-fun x1879 ((x1941 x1127)) Int (ite x1239 (x974 x1941) (x777 x1941)))
(define-fun x476 ((x1941 x1127)) Int (ite x1402 (x777 x1941) (x1879 x1941)))
(define-fun x386 ((x1941 x1127)) Int (ite x2168 (x777 x1941) (x476 x1941)))
(define-fun x1280 ((x1941 x1127)) Int (ite x1940 (x386 x1941) (ite x1767 (x777 x1941) (x386 x1941))))
(define-fun x2090 ((x1941 x1127)) Int (ite x1549 (x1747 x1941) (x1280 x1941)))
(define-fun x1969 ((x1941 x1127)) Int (x777 x1941))
(define-fun x1672 ((x1941 x1127)) Int (x777 x1941))
(define-fun x1746 ((x1941 x1127)) Int (ite (= x1941 x1820) x1794 (x777 x1941)))
(define-fun x1907 ((x1941 x1127)) Int (ite x625 (x1746 x1941) (x777 x1941)))
(define-fun x1144 ((x1941 x1127)) Int (ite (= x716 x1941) 0 (x1907 x1941)))
(define-fun x2116 ((x1941 x1127)) Int (ite x251 (x1672 x1941) (x1144 x1941)))
(define-fun x918 ((x1941 x1127)) Int (ite x1499 (x1969 x1941) (ite x1542 (x2116 x1941) (x777 x1941))))
(define-fun x1151 ((x1941 x1127)) Int (ite x616 (x918 x1941) (ite x986 (x777 x1941) (x918 x1941))))
(define-fun x2048 ((x1941 x1127)) Int (ite x69 (x2090 x1941) (x1151 x1941)))
(define-fun x994 ((x1941 x1127)) Int (ite x745 (x777 x1941) (ite x1319 (x2048 x1941) (x777 x1941))))
(define-fun x845 ((x1941 Int)) Int (x534 x1941))
(define-fun x1764 ((x1941 Int)) Int (ite x272 (x845 x1941) (ite x290 (x534 x1941) (x845 x1941))))
(define-fun x1809 ((x1941 Int)) Int (ite x637 (x1764 x1941) (x534 x1941)))
(define-fun x1959 ((x1941 Int)) Int (x534 x1941))
(define-fun x1776 ((x1941 Int)) Int (ite (= x1596 x1941) x1839 (x534 x1941)))
(define-fun x2079 ((x1941 Int)) Int (ite x1051 (x534 x1941) (x1776 x1941)))
(define-fun x1514 ((x1941 Int)) Int (ite x1136 (x1959 x1941) (x2079 x1941)))
(define-fun x1602 ((x1941 Int)) Int (ite x1593 (x1514 x1941) (ite x1039 (x534 x1941) (x1514 x1941))))
(define-fun x1381 ((x1941 Int)) Int (ite x209 (x1809 x1941) (x1602 x1941)))
(define-fun x1201 ((x1941 Int)) Int (x534 x1941))
(define-fun x147 ((x1941 Int)) Int (ite (= x427 x1941) x846 (x534 x1941)))
(define-fun x2018 ((x1941 Int)) Int (ite (= x261 x1941) x246 (x147 x1941)))
(define-fun x441 ((x1941 Int)) Int (ite x1578 (x534 x1941) (x147 x1941)))
(define-fun x1330 ((x1941 Int)) Int (ite x1239 (x2018 x1941) (x441 x1941)))
(define-fun x125 ((x1941 Int)) Int (ite x1402 (x534 x1941) (x1330 x1941)))
(define-fun x412 ((x1941 Int)) Int (ite x2168 (x1201 x1941) (x125 x1941)))
(define-fun x1657 ((x1941 Int)) Int (ite x1940 (x412 x1941) (ite x1767 (x534 x1941) (x412 x1941))))
(define-fun x1096 ((x1941 Int)) Int (ite x1549 (x1381 x1941) (x1657 x1941)))
(define-fun x1743 ((x1941 Int)) Int (x534 x1941))
(define-fun x26 ((x1941 Int)) Int (ite (= x2063 x1941) x265 (x534 x1941)))
(define-fun x1708 ((x1941 Int)) Int (ite (= x1931 x1941) x137 (x26 x1941)))
(define-fun x1408 ((x1941 Int)) Int (ite (= x1941 x772) x728 (x1708 x1941)))
(define-fun x4 ((x1941 Int)) Int (ite x625 (x1408 x1941) (x534 x1941)))
(define-fun x107 ((x1941 Int)) Int (ite (= x1941 x1236) x1309 (x4 x1941)))
(define-fun x1350 ((x1941 Int)) Int (ite x251 (x534 x1941) (x107 x1941)))
(define-fun x415 ((x1941 Int)) Int (ite x1499 (x1743 x1941) (ite x1542 (x1350 x1941) (x534 x1941))))
(define-fun x549 ((x1941 Int)) Int (ite x616 (x415 x1941) (ite x986 (x534 x1941) (x415 x1941))))
(define-fun x1303 ((x1941 Int)) Int (ite x69 (x1096 x1941) (x549 x1941)))
(define-fun x1407 ((x1941 Int)) Int (ite x745 (x534 x1941) (ite x1319 (x1303 x1941) (x534 x1941))))
(define-fun x550 ((x1941 Int)) Int (ite (= x1941 128) 4 (x449 x1941)))
(define-fun x1477 ((x1941 Int)) Int (ite (= 160 x1941) x1359 (x710 x1941)))
(define-fun x1670 ((x1941 Int)) Int (ite (= 164 x1941) x1006 (x866 x1941)))
(define-fun x1162 ((x1941 Int)) Int (ite (= 196 x1941) x105 (x1670 x1941)))
(define-fun x937 ((x1941 Int)) Int (ite (= 228 x1941) x517 (x1162 x1941)))
(define-fun x300 ((x1941 Int)) Int (ite (= x1941 128) 4 (x143 x1941)))
(define-fun x2043 ((x1941 Int)) Int (ite (= x1941 160) x502 (x2015 x1941)))
(define-fun x1012 ((x1941 Int)) Int (ite (= 164 x1941) x963 (x866 x1941)))
(define-fun x1665 ((x1941 Int)) Int (ite (= 196 x1941) x1378 (x1012 x1941)))
(define-fun x938 ((x1941 Int)) Int (ite (= 228 x1941) x871 (x1665 x1941)))
(define-fun x1985 ((x1941 Int)) Int (ite (= 128 x1941) 4 (x712 x1941)))
(define-fun x425 ((x1941 Int)) Int (ite (= 160 x1941) x1345 (x803 x1941)))
(define-fun x55 ((x1941 Int)) Int (ite (= x1941 164) x167 (x866 x1941)))
(define-fun x1045 ((x1941 Int)) Int (ite (= x1941 196) x539 (x55 x1941)))
(define-fun x1779 ((x1941 Int)) Int (ite (= 228 x1941) x295 (x1045 x1941)))
(define-fun x1674 ((x1941 Int)) Int (ite (= x1941 164) x1146 (x1326 x1941)))
(define-fun x1352 ((x1941 Int)) Int (ite (= x1941 196) 64 (x1674 x1941)))
(define-fun x635 ((x1941 Int)) Int (ite (= 228 x1941) x64 (x1352 x1941)))
(define-fun x1038 ((x1941 Int)) Int (ite (= 128 x1941) x1588 (x1671 x1941)))
(define-fun x1882 ((x1941 Int)) Int (ite (= 160 x1941) x1172 (x635 x1941)))
(define-fun x833 ((x1941 Int)) Int (ite (= x1592 x1941) x1310 (x866 x1941)))
(define-fun x1116 ((x1941 Int)) Int (ite (= x1941 x196) x92 (x833 x1941)))
(define-fun x508 ((x1941 Int)) Int (ite (= x1765 x1941) x135 (x1116 x1941)))
(define-fun x1537 ((x1941 x1127)) Int (x2103 x1941))
(define-fun x1885 ((x1941 x1127)) Int (ite x272 (x1537 x1941) (ite x290 (x2103 x1941) (x1537 x1941))))
(define-fun x827 ((x1941 x1127)) Int (ite x637 (x1885 x1941) (x2103 x1941)))
(define-fun x1944 ((x1941 x1127)) Int (x2103 x1941))
(define-fun x1171 ((x1941 x1127)) Int (ite x1136 (x2103 x1941) (x1944 x1941)))
(define-fun x779 ((x1941 x1127)) Int (ite x1593 (x1171 x1941) (ite x1039 (x2103 x1941) (x1171 x1941))))
(define-fun x573 ((x1941 x1127)) Int (ite x209 (x827 x1941) (x779 x1941)))
(define-fun x1930 ((x1941 x1127)) Int (x2103 x1941))
(define-fun x736 ((x1941 x1127)) Int (ite x2168 (x2103 x1941) (x1930 x1941)))
(define-fun x1347 ((x1941 x1127)) Int (ite x1940 (x736 x1941) (ite x1767 (x2103 x1941) (x736 x1941))))
(define-fun x771 ((x1941 x1127)) Int (ite x1549 (x573 x1941) (x1347 x1941)))
(define-fun x1380 ((x1941 x1127)) Int (x2103 x1941))
(define-fun x1285 ((x1941 x1127)) Int (x2103 x1941))
(define-fun x841 ((x1941 x1127)) Int (ite x251 (x1285 x1941) (x2103 x1941)))
(define-fun x1680 ((x1941 x1127)) Int (ite x1499 (x1380 x1941) (ite x1542 (x841 x1941) (x2103 x1941))))
(define-fun x1156 ((x1941 x1127)) Int (ite x616 (x1680 x1941) (ite x986 (x2103 x1941) (x1680 x1941))))
(define-fun x2118 ((x1941 x1127)) Int (ite x1319 (ite x69 (x771 x1941) (x1156 x1941)) (x2103 x1941)))
(define-fun x667 ((x1941 x1127)) Int (ite (= (x118 x984) x1941) x547 (x1255 x1941)))
(define-fun x738 ((x1941 x1127)) Int (ite (= (x118 x966) x1941) x1428 (x667 x1941)))
(define-fun x599 ((x1941 Int)) Int (ite (= x1941 x1376) x1649 (x508 x1941)))
(define-fun x1869 ((x1941 Int)) Int (ite x552 (x508 x1941) (ite x2086 (x1116 x1941) (ite x2020 (x833 x1941) (ite x2033 (x866 x1941) (x599 x1941))))))
(define-fun x61 ((x1941 Int)) Int (ite (= x2053 x1941) 0 (x1869 x1941)))
(define-fun x1571 ((x1941 Int)) Int (ite (= x1941 260) x1169 (x937 x1941)))
(define-fun x41 ((x1941 Int)) Int (ite x1419 (x937 x1941) (ite x792 (x1162 x1941) (ite x1909 (x1670 x1941) (ite x240 (x866 x1941) (x1571 x1941))))))
(define-fun x1761 ((x1941 Int)) Int (ite (= x1610 x1941) 0 (x41 x1941)))
(define-fun x1852 ((x1941 Int)) Int (ite (= 260 x1941) x1111 (x938 x1941)))
(define-fun x2170 ((x1941 Int)) Int (ite x1178 (x938 x1941) (ite x1101 (x1665 x1941) (ite x479 (x1012 x1941) (ite x1421 (x866 x1941) (x1852 x1941))))))
(define-fun x622 ((x1941 Int)) Int (ite (= x1941 x1323) 0 (x2170 x1941)))
(define-fun x1353 ((x1941 Int)) Int (ite (= 260 x1941) x1894 (x1779 x1941)))
(define-fun x1493 ((x1941 Int)) Int (ite x873 (x1779 x1941) (ite x675 (x1045 x1941) (ite x720 (x55 x1941) (ite x38 (x866 x1941) (x1353 x1941))))))
(define-fun x437 ((x1941 Int)) Int (ite (= x266 x1941) 0 (x1493 x1941)))
(define-fun x154 ((x1941 Int)) Int (ite x1923 (x1869 x1941) (x61 x1941)))
(define-fun x810 ((x1941 x1127)) Int (ite (= (x118 x984) x1941) x1501 (x1255 x1941)))
(define-fun x2091 ((x1941 x1127)) Int (ite (= x1941 (x118 x984)) x969 (x810 x1941)))
(define-fun x1104 ((x1941 Int)) Int (ite (and (>= x1941 100) (< x1941 (+ 100 (x473 (- x912 100))))) (x154 (+ (- x1941 100) (x97 (+ 100 x1763)))) (x694 x1941)))
(define-fun x466 ((x1941 Int)) Int (ite x80 (x41 x1941) (x1761 x1941)))
(define-fun x1727 ((x1941 x1127)) Int (ite (= x1941 (x118 x984)) x1388 (x1255 x1941)))
(define-fun x1622 ((x1941 x1127)) Int (ite (= (x118 x984) x1941) x1311 (x1727 x1941)))
(define-fun x325 ((x1941 Int)) Int (ite (= 128 x1941) 33277650900348105781121326340019631498405652329376380866381358124409588547584 (x359 x1941)))
(define-fun x1286 ((x1941 Int)) Int (ite (= x1941 132) x2140 (x325 x1941)))
(define-fun x1787 ((x1941 Int)) Int (ite (= x1941 164) x1146 (x1286 x1941)))
(define-fun x950 ((x1941 Int)) Int (ite (= 196 x1941) 96 (x1787 x1941)))
(define-fun x820 ((x1941 Int)) Int (ite (= 228 x1941) x178 (x950 x1941)))
(define-fun x70 ((x1941 Int)) Int (ite x843 (x2170 x1941) (x622 x1941)))
(define-fun x1620 ((x1941 x1127)) Int (ite (= x1941 (x118 x984)) x382 (x1255 x1941)))
(define-fun x602 ((x1941 x1127)) Int (ite (= (x118 x984) x1941) x1262 (x1620 x1941)))
(define-fun x1917 ((x1941 Int)) Int (ite (= 128 x1941) 78829575338057407266098799593532030895783219923606930547737006156155256307712 (x882 x1941)))
(define-fun x1877 ((x1941 Int)) Int (ite (= 132 x1941) x2140 (x1917 x1941)))
(define-fun x2071 ((x1941 Int)) Int (ite (= x1941 164) x1044 (x1877 x1941)))
(define-fun x1315 ((x1941 Int)) Int (ite (= 196 x1941) 96 (x2071 x1941)))
(define-fun x345 ((x1941 Int)) Int (ite (= x1941 228) x1823 (x1315 x1941)))
(define-fun x1360 ((x1941 Int)) Int (ite x408 (x1493 x1941) (x437 x1941)))
(define-fun x1851 ((x1941 x1127)) Int (ite (= x1941 (x118 x984)) x1449 (x1255 x1941)))
(define-fun x1965 ((x1941 x1127)) Int (ite (= (x118 x984) x1941) x2054 (x1851 x1941)))
(define-fun x647 ((x1941 Int)) Int (ite (= 128 x1941) 656247078515407326148355443760548300161286948278503429861414951787075469312 (x523 x1941)))
(define-fun x474 ((x1941 Int)) Int (ite (= x1941 132) x1044 (x647 x1941)))
(define-fun x10 ((x1941 Int)) Int (ite (= x1941 164) x1146 (x474 x1941)))
(define-fun x1147 ((x1941 Int)) Int (ite (= 196 x1941) 96 (x10 x1941)))
(define-fun x1530 ((x1941 Int)) Int (ite (= x1941 228) x1149 (x1147 x1941)))
(define-fun x556 ((x1941 x1127)) Int (x1622 x1941))
(define-fun x2039 ((x1941 x1127)) Int (ite (= x1941 (x118 x984)) x1658 (x556 x1941)))
(define-fun x1740 ((x1941 Int)) Int (ite (= x1941 260) x1624 (x820 x1941)))
(define-fun x1207 ((x1941 Int)) Int (ite x832 (x820 x1941) (x1740 x1941)))
(define-fun x47 ((x1941 Int)) Int (ite (= x1941 x860) 0 (x1207 x1941)))
(define-fun x1287 ((x1941 Int)) Int (ite x1817 (x1207 x1941) (x47 x1941)))
(define-fun x1406 ((x1941 Int)) Int (ite (and (< x1941 (+ 132 (x473 (- x1372 132)))) (>= x1941 132)) (x1287 (+ (- x1941 132) 260)) (x1120 x1941)))
(define-fun x1122 ((x1941 Int)) Int (ite (and (>= x1941 128) (< x1941 (+ 128 x1275))) (x1406 (+ (- x1941 128) 132)) (x565 x1941)))
(define-fun x1835 ((x1941 Int)) Int (ite (= x1941 x373) 0 (x1122 x1941)))
(define-fun x1469 ((x1941 Int)) Int (ite (= 128 x1941) x855 (x1835 x1941)))
(define-fun x2003 ((x1941 Int)) Int (ite (= x1941 128) x701 (x1835 x1941)))
(define-fun x1539 ((x1941 Int)) Int (ite x170 (x1835 x1941) (x2003 x1941)))
(define-fun x365 ((x1941 Int)) Int (ite x438 (x1469 x1941) (x1539 x1941)))
(define-fun x1732 ((x1941 x1127)) Int (x602 x1941))
(define-fun x2035 ((x1941 x1127)) Int (ite (= (x118 x984) x1941) x670 (x1732 x1941)))
(define-fun x553 ((x1941 Int)) Int (ite (= 260 x1941) x44 (x345 x1941)))
(define-fun x109 ((x1941 Int)) Int (ite x331 (x345 x1941) (x553 x1941)))
(define-fun x1678 ((x1941 Int)) Int (ite (= x1941 x1778) 0 (x109 x1941)))
(define-fun x63 ((x1941 Int)) Int (ite x2028 (x109 x1941) (x1678 x1941)))
(define-fun x1686 ((x1941 Int)) Int (ite (and (< x1941 (+ (x473 (- x381 132)) 132)) (>= x1941 132)) (x63 (+ 260 (- x1941 132))) (x610 x1941)))
(define-fun x2102 ((x1941 Int)) Int (ite (and (< x1941 (+ 128 x1390)) (<= 128 x1941)) (x1686 (+ 132 (- x1941 128))) (x585 x1941)))
(define-fun x943 ((x1941 Int)) Int (ite (= x483 x1941) 0 (x2102 x1941)))
(define-fun x497 ((x1941 Int)) Int (ite (= x1941 128) x179 (x943 x1941)))
(define-fun x2138 ((x1941 Int)) Int (ite (= 128 x1941) x344 (x943 x1941)))
(define-fun x2094 ((x1941 Int)) Int (ite x1076 (x943 x1941) (x2138 x1941)))
(define-fun x2131 ((x1941 Int)) Int (ite x1164 (x497 x1941) (x2094 x1941)))
(define-fun x132 ((x1941 x1127)) Int (x1965 x1941))
(define-fun x1404 ((x1941 x1127)) Int (ite (= (x118 x984) x1941) x2169 (x132 x1941)))
(define-fun x157 ((x1941 Int)) Int (ite (= x1941 260) x1903 (x1530 x1941)))
(define-fun x1227 ((x1941 Int)) Int (ite x597 (x1530 x1941) (x157 x1941)))
(define-fun x867 ((x1941 Int)) Int (ite (= x2024 x1941) 0 (x1227 x1941)))
(define-fun x515 ((x1941 Int)) Int (ite x1749 (x1227 x1941) (x867 x1941)))
(define-fun x1572 ((x1941 Int)) Int (ite (and (< x1941 (+ (x473 (- x269 132)) 132)) (>= x1941 132)) (x515 (+ (- x1941 132) 260)) (x140 x1941)))
(define-fun x1298 ((x1941 Int)) Int (ite (and (> (+ 128 x770) x1941) (<= 128 x1941)) (x1572 (+ (- x1941 128) 132)) (x1348 x1941)))
(define-fun x1253 ((x1941 Int)) Int (ite (= x1941 x722) 0 (x1298 x1941)))
(define-fun x116 ((x1941 Int)) Int (ite (= x1941 128) x559 (x1253 x1941)))
(define-fun x555 ((x1941 Int)) Int (ite (= x1941 128) x1999 (x1253 x1941)))
(define-fun x1483 ((x1941 Int)) Int (ite x1570 (x1253 x1941) (x555 x1941)))
(define-fun x1266 ((x1941 Int)) Int (ite x190 (x116 x1941) (x1483 x1941)))
(define-fun x1112 ((x1941 x1127)) Int (x2091 x1941))
(define-fun x927 ((x1941 x1127)) Int (ite (= (x118 x984) x1941) x1246 (x1112 x1941)))
(define-fun x1818 ((x1941 Int)) Int (ite (and (< x1941 (+ x1545 128)) (<= 128 x1941)) (x1104 (+ (- x1941 128) 100)) (x94 x1941)))
(define-fun x1625 ((x1941 Int)) Int (ite (= x849 x1941) 0 (x1818 x1941)))
(define-fun x1645 ((x1941 Int)) Int (ite (= 128 x1941) x723 (x1625 x1941)))
(define-fun x1653 ((x1941 Int)) Int (ite (= 128 x1941) x1361 (x1625 x1941)))
(define-fun x1947 ((x1941 Int)) Int (ite x1159 (x1625 x1941) (x1653 x1941)))
(define-fun x1950 ((x1941 Int)) Int (ite x1576 (x1645 x1941) (x1947 x1941)))
(define-fun x886 ((x1941 x1127)) Int (ite x233 (x180 x1941) (x738 x1941)))
(define-fun x693 ((x1941 x1127)) Int (ite (= x1941 (x118 x966)) x258 (x886 x1941)))
(define-fun x609 ((x679 Int)) Bool (=> (and (not (= x679 2279315017)) (not (= x679 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 2726977199 x679)) (not (= 288768741 x679)) (not (= x679 3189536363)) (not (= x679 33277650900348105781121326340019631498405652329376380866381358124409588547584)) (not (= x679 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 100641684887429822015232653770480429695213136867978658013931169090238473568256 x679)) (not (= x679 100000000000000000)) (not (= 2112976665 x679)) (not (= x679 3733007566)) (not (= 50455196340412629536459377552246818957342304218644716315923982585962625499136 x679)) (not (= x679 1461501637330902918203684832716283019655932542975)) (< 10000 x679) (not (= x679 106459005500898838667931598610041423549574964228674563513410788872267948359680)) (not (= x679 3948783980)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639680 x679)) (not (= x679 2923951457)) (not (= x679 4294967296)) (not (= 1234336674 x679)) (not (= 3018310333 x679)) (not (= x679 1461501637330902918203684832716283019655932542976)) (not (= 3285302901 x679)) (not (= 3081457077 x679)) (not (= 56965738197333823925951794324075424010313516842063129668313081903848242544640 x679)) (not (= 24341557 x679)) (not (= x679 1871487246)) (not (= 3050870311 x679)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x679)) (not (= 656247078515407326148355443760548300161286948278503429861414951787075469312 x679)) (not (= 1680813743 x679)) (not (= 839595567 x679)) (not (= x679 4294967295)) (not (= 78829575338057407266098799593532030895783219923606930547737006156155256307712 x679)) (not (= x679 2867924802)) (not (= x679 1030951317)) (not (= 18446744073709551615 x679)) (not (= 115792089237316195423570985008687907853269984665640564039457484007913129639935 x679)) (not (= x679 1039635593))) (not ((_ is x53) (x118 x679)))))
(assert (x590 x1321))
(assert (= x60 (and (not x879) x1090)))
(assert (x590 x1490))
(assert (x34 x1517))
(assert (x590 x1551))
(assert (= (x818 (x118 (x1625 192))) (x1625 192)))
(assert (x609 x2073))
(assert (= x451 (and x1107 x1770)))
(assert (x590 x1592))
(assert (= (and x1911 (not x1389)) x444))
(assert (x34 x200))
(assert (x609 (x943 192)))
(assert (= x262 (and x854 x911)))
(assert (x590 x152))
(assert (x590 x1105))
(assert (x609 (x1625 224)))
(assert (= (x118 (x818 x799)) x799))
(assert (x590 x1721))
(assert (= (and x682 (not x1237)) x2000))
(assert (x856 x152))
(assert (= (x818 (x53 1871487246)) 1871487246))
(assert (x590 x1899))
(assert (= (=> (and (= x75 x1121) (= x1596 x1450) (= x1857 1) (= x1819 x801) (= x95 x1983)) x255) x542))
(assert (x590 x728))
(assert (x590 x186))
(assert (= x1399 (or x811 x413)))
(assert (x590 x1679))
(assert (= (x943 128) (x818 (x118 (x943 128)))))
(assert (= (=> (and (= x975 x930) (= x786 x2100)) x1782) x955))
(assert (= (and x1994 (not x1091)) x1863))
(assert (x590 x871))
(assert (=> (>= 10000 (x1950 320)) (= (x53 (x1950 320)) (x118 (x1950 320)))))
(assert (x34 x1664))
(assert (x590 x1464))
(assert (x590 x1447))
(assert (= (and x1065 x1248) x220))
(assert (= (and x1606 (not x371)) x1090))
(assert (= (or x1136 x1784) x1304))
(assert (= (or x1256 x2111) x1868))
(assert (x590 x1229))
(assert (x590 x891))
(assert (x590 x1317))
(assert (= (x53 50455196340412629536459377552246818957342304218644716315923982585962625499136) (x118 50455196340412629536459377552246818957342304218644716315923982585962625499136)))
(assert (x590 x1956))
(assert (= (and (not x644) x653) x796))
(assert (=> (>= 10000 x1317) (= (x53 x1317) (x118 x1317))))
(assert (x590 x1125))
(assert (= (=> (= (= 0 x1238) x217) (and (=> (and (and (and (>= x195 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x195) (= x1208 (x12 x1439 1)) (= (x1436 (x118 x2073) (x53 7) 0) x1439) (= x195 (x1584 x1208)) (> 256 x5) (= (x2103 x74) x5) (= (x12 x1439 3) x74) (= (= x5 0) x800) (<= 0 x5) (>= 255 x5)) (or (and (= x195 x1078) x800) (and (and (not (> 100000000000000000 x195)) (= x1938 x1078) (= x1938 (x473 (- x195 100000000000000000)))) (not x800)))) (not x217)) x1098) (=> (and (and (= x1596 x817) (= x2124 x1819) (= x962 x1068)) x217) x248))) x221))
(assert (= x1336 (and x285 x1710)))
(assert (x590 x766))
(assert (= x1420 (and x1210 x522)))
(assert (= (and x380 (not x1009)) x894))
(assert (x590 x700))
(assert (x590 x1377))
(assert (= (x1625 128) (x818 (x118 (x1625 128)))))
(assert (= (x818 (x12 x406 x1236)) (+ x1236 (x818 x406))))
(assert (= x1145 (=> (and (or (not x1211) x1211) (= (= 0 x1551) x1211)) x43)))
(assert (x590 x367))
(assert (x590 x935))
(assert (and (=> (> 256 0) (= (+ (* (x1110 x411 256) 256) (x1224 x411 256)) x411)) (x212 x411 256) (x1681 x411 256) (x2027 x411 256)))
(assert (= x572 (=> (and (and (= x1677 (x1436 (x53 0) (x53 2) 0)) (= x1391 1030951317) (= x2121 false) x1918 (<= x1293 255) (<= x1712 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1044) (<= 0 x1482) (= 3285302901 x1692) (>= x1044 0) (< x1391 2112976665) (<= x1043 255) (not (< x1391 839595567)) (>= x1306 0) (= x306 (= 0 x1910)) (>= 1461501637330902918203684832716283019655932542975 x1427) (>= x1427 0) (= x336 0) (> 256 x1910) (<= x1568 1461501637330902918203684832716283019655932542975) (<= x2140 1461501637330902918203684832716283019655932542975) (>= x1568 0) (= false x1753) (= x929 1) (>= x2140 0) (= (< 0 (x1216 (x118 x984))) x1918) (> x1715 0) (= x1568 x1383) (= x1137 false) (<= 0 x1293) (< 0 x984) (<= x984 1461501637330902918203684832716283019655932542975) (= x1802 false) (= x1306 (x1255 (x118 x984))) (= (ite x931 1 0) x1563) (>= x1712 0) (= x1712 x668) (= (not x306) x931) (>= 255 x1910) (>= x1910 0) (<= 0 x1043) (= x1715 (x1216 (x118 x984))) (not (< x1391 1030951317)) (= (x77 x1677) x1910) (<= x1482 4294967295) (> 1680813743 x1391)) (and (and (not (< x176 3081457077)) (= (x1216 (x118 x984)) x1415) (= x1596 x2001) (> 3285302901 x176) x1723 (not (= 3081457077 x176)) (= x176 3189536363) (> 3733007566 x176) (= x420 (not (= x1563 0))) (not (< x176 2112976665)) (= x1723 (not x2162)) (< 0 x1415) (= x420 x2162)) (and (and (and (= x1503 x761) (not (= x1258 3081457077)) (> 3285302901 x1258) (= x951 x1596) (= 3189536363 x1258) (= (x1216 (x118 x984)) x1717) (not (< x1258 3081457077)) (< 0 x1717) (< x1258 3733007566) (not (> 2112976665 x1258)) (= x1585 (< x244 x761))) (and (and (not (< x1314 2112976665)) (= x2052 (- x349 1)) (= 1 x1534) (= x1694 (x375 x2052)) (not (= 2867924802 x1314)) (= x1248 (> x1596 x1694)) (= x349 x951) (< x1314 3081457077) (< 0 x161) (= 3050870311 x1314) (not (= x1314 2923951457)) (not (< x1314 2726977199)) (not (< x1314 2867924802)) (not (= x1314 3018310333)) (= x161 (x1216 (x118 x984)))) (or (and x1248 (and (= (x375 x1739) x875) (= 1 x1423) (= x1702 (or x1803 (not x916))) (= (and x1819 x1401) x916) (= x1803 (or x1433 (not x664))) (= (or x765 x652) x1401) (= (x898 (x53 1) 0) x768) (= x2095 x1663) (= x664 (not (= x769 0))) (= x695 (x1022 x1694)) (= (x197 x1488) x1899) (= (ite x1401 x964 x875) x448) (= (x1022 x1694) x1488) (= x1739 0) (= x1495 x769) (= x315 (x12 x768 x1694)) (= x304 (x1124 x769)) (= (not (= x1899 x1694)) x765) (= x769 (x777 x315)) (< x769 1461501637330902918203684832716283019655932542976) (= (x375 x1423) x964) (= x652 (>= x1488 x837)) (= (= x304 x1694) x1433) (= (x97 (+ x837 x448)) x2095) (>= 1461501637330902918203684832716283019655932542975 x769) (= x1333 (ite x1401 x837 x695)) (> x1596 x1694) (<= 0 x769) x1702)) (and (and (= 0 x1495) (= x1663 x837)) (not x1248))))) (and (not (= 3081457077 x1175)) (< 0 x1956) (= x1175 3189536363) (< x1175 3285302901) (= x244 (x375 x491)) (= x2001 x767) (= x491 (- x767 1)) (not (> 3081457077 x1175)) (= 1 x1364) (= (x1216 (x118 x984)) x1956) (= x1596 x1503) (> 3733007566 x1175) (not (> 2112976665 x1175)))))) x1184)))
(assert (x590 x733))
(assert (and (= (- x1157 (x1535 31 x1157)) (* (x1110 x1157 32) 32)) (x1354 x1157 32) (x1131 x1157 32) (=> (and (< 0 32) (> x1157 0)) (and (> (* 32 (x1110 x1157 32)) (- x1157 32)) (>= x1157 (* (x1110 x1157 32) 32)))) (x1791 x1157 32) (x698 x1157 32)))
(assert (x590 x1604))
(assert (= (=> (and (= x470 x1540) (and (= x2127 x673) (= x2073 x640) (< 0 x2070) (= x673 x397) (< x641 256) (= (x1709 x1092) x641) (= x1719 x668) (= x641 0) (<= 0 x641) (= x435 0) (<= x1719 1461501637330902918203684832716283019655932542975) (>= x983 0) x1154 (not (> 3081457077 x2129)) (= 0 x1871) (> 3733007566 x2129) (>= 255 x641) (not (< x2129 3285302901)) (<= 0 x1719) (= x177 (x473 (- x1598 4))) (not (or (and (< x177 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x177))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x177))) (not (< x1598 4)) (and (> x1598 35) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1598))) (= (x12 x191 3) x1092) (= (x1216 (x118 x984)) x2070) (>= 1461501637330902918203684832716283019655932542975 x397) (= x1533 (not (= 0 x619))) (= x1540 x619) (= (x1436 (x118 x2073) (x53 7) 0) x191) (= 3285302901 x2129) (= x1560 x1133) (= x1133 0) (= x656 (> x1596 0)) (not (> 2112976665 x2129)) (= x1154 (or (not x426) x1533)) (<= 0 x397) (= x2073 x1297) (>= 1461501637330902918203684832716283019655932542975 x983))) (and (=> (and (= x2125 x1847) (not x656)) x665) (=> (and (and (= 0 x481) (= (x1436 (x118 x158) x324 0) x284) (= (or (not x853) x1814) x1736) (< x158 1461501637330902918203684832716283019655932542976) (>= 255 x614) x214 (= x1518 (ite x50 x2125 x1026)) (= (= x2004 (ite x1707 0 1)) x1079) (<= 0 x158) (= (x1538 x719) x783) (= x1026 (x1462 x890)) (= x214 (or x1736 (not x482))) (= x158 (x777 x794)) (= (not (= x783 0)) x485) (<= x158 1461501637330902918203684832716283019655932542975) (= x324 (x1436 (x118 x2073) (x53 9) 0)) (<= 0 x2004) (= x671 1) (= 0 x1373) (< 0 x1596) (> 256 x614) (= x890 0) (= x794 x1688) (= (x1462 x188) x719) (<= 0 x614) (= x2132 (ite x50 x2108 x2137)) (= (x898 (x53 1) 0) x1688) (= 0 x1444) (= (and x50 x1819) x482) (= x566 (x97 (+ x2125 x2132))) (= x1707 (= x614 0)) (= (not (= 0 x158)) x853) (= x50 (or x485 x1840)) (= x2108 (x375 x671)) (= (x1000 x284) x614) (= (x375 x481) x2137) (= (x1124 x158) x183) (<= x2004 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1814 (= x183 0)) (= x1840 (>= x719 x2125)) (= x188 0)) x656) (and (=> (not x1079) x1470) (=> (and x1079 (and (= x1068 x566) (= x1238 1))) x221))))) x949))
(assert (= x486 (=> (= (not (> x1596 1)) x1344) (and x1344 (=> (= x562 x90) x501)))))
(assert (= (=> (and (= x1953 x1819) (= x75 x1734) (= x1109 x1068) (= x185 x1596) (= 0 x1279)) x705) x1338))
(assert (= (or x1313 x2055) x637))
(assert (x590 x440))
(assert (x590 x499))
(assert (= (x1266 224) (x818 (x118 (x1266 224)))))
(assert (= x1119 (x118 (x818 x1119))))
(assert (= x786 (x118 (x818 x786))))
(assert (= (or x914 x1923) x1557))
(assert (= x2033 (and x2107 (not x1055))))
(assert (x609 (x1950 224)))
(assert (x590 x346))
(assert (x590 x241))
(assert (=> (>= 10000 (x365 256)) (= (x53 (x365 256)) (x118 (x365 256)))))
(assert (= (=> (and (= x373 (x97 (+ x1275 128))) (= (>= 224 x1527) x1932) (= x1527 (x473 (- x373 128)))) (and x1932 (=> (and (= x1991 (= x49 (ite x1292 1 0))) (= x424 (ite (<= x1527 32) (x898 (x118 (x1835 128)) 0) (ite (<= x1527 64) (x1436 (x118 (x1835 128)) (x118 (x1835 160)) 0) (ite (<= x1527 96) (x223 (x118 (x1835 128)) (x118 (x1835 160)) (x118 (x1835 192)) 0) (ite (>= 128 x1527) (x1801 (x118 (x1835 128)) (x118 (x1835 160)) (x118 (x1835 192)) (x118 (x1835 224)) 0) (ite (>= 160 x1527) (x1379 (x118 (x1835 128)) (x118 (x1835 160)) (x118 (x1835 192)) (x118 (x1835 224)) (x118 (x1835 256)) 0) (ite (<= x1527 192) (x1946 (x118 (x1835 128)) (x118 (x1835 160)) (x118 (x1835 192)) (x118 (x1835 224)) (x118 (x1835 256)) (x118 (x1835 288)) 0) (ite (<= x1527 224) (x1231 (x118 (x1835 128)) (x118 (x1835 160)) (x118 (x1835 192)) (x118 (x1835 224)) (x118 (x1835 256)) (x118 (x1835 288)) (x118 (x1835 320)) 0) (x118 x1317))))))))) (= x1292 (< x1604 32)) (= x49 (x1535 1 x17)) (= (ite (> x49 0) x2025 (x1535 127 x2025)) x1604) (= (x1110 x17 2) x2025)) (and (=> (and x1991 (and (= x1897 x1819) (= x1696 x75) (= x1068 x1267) (= x1596 x1412) (= x2029 0))) x1281) (=> (and (and (= x1591 (= x454 0)) (= (x1535 1 x17) x454)) (not x1991)) (and (=> (and (and (= x121 (x898 (x53 5) 0)) (= (> x1604 0) x2172)) (not x1591)) (and (=> x2172 x1432) (=> (not x2172) x746))) (=> (and x1591 (and (= (x97 (+ 128 x1604)) x89) (= x935 x89) (= (x1535 115792089237316195423570985008687907853269984665640564039457584007913129639680 x17) x855))) x758))))))) x744))
(assert (x590 x192))
(assert (= x1701 (=> (and (= (x1255 (x118 x984)) x1901) (= x863 (x97 (+ 164 x2139))) (= x685 (x473 (- x863 164))) (= x1875 (and (<= x1078 x1901) (< (+ x1078 x141) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1255 (x118 x984)) x141) (= x1679 164)) (and (=> (and x1875 (and (= x613 (= x1078 0)) (= (x1216 (x118 x984)) x1461) (= x382 (- x1691 x1078)) (= 4 x680) (= (x1255 (x118 x984)) x1691) (> x1461 0) (= 100641684887429822015232653770480429695213136867978658013931169090238473568256 x809) (= (x1620 (x118 x984)) x2128) (= x685 x680) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1078 x2128)) (= (x97 (+ x1078 x2128)) x1262))) (and (=> (and (not x613) (and (= x1068 x1890) (= x1819 x1874))) x1827) (=> (and (and (not (< x2154 3081457077)) (= (< 0 x1823) x1283) (< x2154 3948783980) (>= 1461501637330902918203684832716283019655932542975 x2140) (not (< x2154 3733007566)) (not (< x2154 2112976665)) (<= 0 x1044) (<= 0 x2140) (> 1461501637330902918203684832716283019655932542976 x2140) (not (< x680 4)) (< x1044 1461501637330902918203684832716283019655932542976) (= 3733007566 x2154) (<= x1044 1461501637330902918203684832716283019655932542975) (= x1823 (x807 96))) x613) (and (=> (and (not x1283) (= x400 0)) x851) (=> x1283 x120))))) (=> (and (and (= x75 x980) (= 0 x15) (= x1128 0) (= x752 x1819) (= x1430 x1596) (= x1068 x1001)) (not x1875)) x205)))))
(assert (x590 x1335))
(assert (x609 (x1266 256)))
(assert (= (or x2065 x112 x708) x1177))
(assert (x590 x338))
(assert (= (x818 (x118 (x2131 288))) (x2131 288)))
(assert (= 18446744073709551615 (x818 (x53 18446744073709551615))))
(assert (x1640 x1668))
(assert (= x1788 (or x358 x1094)))
(assert (and (= (- x2038 (x1535 31 x2038)) (* (x1110 x2038 32) 32)) (x1354 x2038 32) (x1131 x2038 32) (=> (and (< 0 32) (> x2038 0)) (and (> (* 32 (x1110 x2038 32)) (- x2038 32)) (>= x2038 (* (x1110 x2038 32) 32)))) (x1791 x2038 32) (x698 x2038 32)))
(assert (= x1479 (and x352 x1583)))
(assert (x34 x1824))
(assert (= x171 (or x240 x792 x1416 x1909 x1419)))
(assert (=> (<= (x1625 128) 10000) (= (x53 (x1625 128)) (x118 (x1625 128)))))
(assert (x590 x1044))
(assert (= (=> (and (= (x97 (+ 128 x770)) x722) (= x1295 (x473 (- x722 128))) (= (<= x1295 224) x564)) (and x564 (=> (and (= (ite (> x2076 0) x1915 (x1535 127 x1915)) x1064) (= (x1535 1 x17) x2076) (= x1442 (> 32 x1064)) (= x189 (= x2076 (ite x1442 1 0))) (= (x1110 x17 2) x1915) (= (ite (<= x1295 32) (x898 (x118 (x1253 128)) 0) (ite (>= 64 x1295) (x1436 (x118 (x1253 128)) (x118 (x1253 160)) 0) (ite (>= 96 x1295) (x223 (x118 (x1253 128)) (x118 (x1253 160)) (x118 (x1253 192)) 0) (ite (<= x1295 128) (x1801 (x118 (x1253 128)) (x118 (x1253 160)) (x118 (x1253 192)) (x118 (x1253 224)) 0) (ite (>= 160 x1295) (x1379 (x118 (x1253 128)) (x118 (x1253 160)) (x118 (x1253 192)) (x118 (x1253 224)) (x118 (x1253 256)) 0) (ite (>= 192 x1295) (x1946 (x118 (x1253 128)) (x118 (x1253 160)) (x118 (x1253 192)) (x118 (x1253 224)) (x118 (x1253 256)) (x118 (x1253 288)) 0) (ite (<= x1295 224) (x1231 (x118 (x1253 128)) (x118 (x1253 160)) (x118 (x1253 192)) (x118 (x1253 224)) (x118 (x1253 256)) (x118 (x1253 288)) (x118 (x1253 320)) 0) (x118 x1049)))))))) x1004)) (and (=> x189 x1338) (=> (and (and (= x471 (x1535 1 x17)) (= (= 0 x471) x2023)) (not x189)) (and (=> (and (not x2023) (and (= (< 0 x1064) x1967) (= (x898 (x53 5) 0) x1011))) (and (=> (not x1967) x1849) (=> x1967 x1357))) (=> (and (and (= (x1535 115792089237316195423570985008687907853269984665640564039457584007913129639680 x17) x559) (= x1861 x1284) (= (x97 (+ x1064 128)) x1284)) x2023) x81))))))) x1398))
(assert (x590 x1616))
(assert (x590 x1568))
(assert (x590 x1857))
(assert (= (x807 96) 0))
(assert (=> (>= 10000 x313) (= (x118 x313) (x53 x313))))
(assert (x856 x1915))
(assert (= (x118 78829575338057407266098799593532030895783219923606930547737006156155256307712) (x53 78829575338057407266098799593532030895783219923606930547737006156155256307712)))
(assert (= x1923 (and x1385 (not x725))))
(assert (= x859 (=> (and (or (not x1531) (and x1531 (= (x97 (+ 260 x1149)) x2024))) (= x1531 (> x440 x1149))) x847)))
(assert (= 0 (x710 224)))
(assert (x590 x1534))
(assert (x590 x1267))
(assert (x590 x1117))
(assert (= (or x272 x290 x1365) x1834))
(assert (= (and x2019 x511) x1599))
(assert (x590 x1734))
(assert (= (x818 (x53 3081457077)) 3081457077))
(assert (= (and x352 (not x1583)) x895))
(assert (= (=> (and (= (= 0 x402) x904) (or (and (and (= (ite (= x402 0) x1078 0) x235) (= (x1732 (x118 x984)) x329) (= x1558 x1128) (= x15 x402) (= x1491 x1430) (= x40 x1001) (= x1838 x752) (= (x2035 (x118 x984)) x2174) (= x670 (- x329 x235)) (= x888 (x97 (+ x235 x2174))) (= x980 x162) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x235 x2174))) x904) (and (and (= x15 x402) (= x1001 x40) (= x1558 x1128) (= x752 x1838) (= x980 x162) (= x1491 x1430)) (not x904)))) x205) x7))
(assert (=> (<= (x365 320) 10000) (= (x118 (x365 320)) (x53 (x365 320)))))
(assert (= (and x326 (not x825)) x2147))
(assert (x590 x402))
(assert (x590 x964))
(assert (x643 2))
(assert (= x153 (or x1039 x1593 x551)))
(assert (= (=> (and (= (= x1128 0) x1541) (or x1541 (not x1541))) x422) x205))
(assert (= (x53 2279315017) (x118 2279315017)))
(assert (= (or x1656 x1260) x857))
(assert (=> (<= x1523 10000) (= (x118 x1523) (x53 x1523))))
(assert (x643 x823))
(assert (x590 x2001))
(assert (= (and (not x127) x1177) x1656))
(assert (x590 x1443))
(assert (x590 x454))
(assert (x1640 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (and (= (- x17 (x1535 1 x17)) (* (x1110 x17 2) 2)) (x1354 x17 2) (x1131 x17 2) (=> (and (< 0 2) (> x17 0)) (and (> (* 2 (x1110 x17 2)) (- x17 2)) (>= x17 (* (x1110 x17 2) 2)))) (x1791 x17 2) (x698 x17 2)))
(assert (= (x1835 224) (x818 (x118 (x1835 224)))))
(assert (= (and x1411 x1223) x1807))
(assert (= (x565 224) 0))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x1554 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x1554 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1554)) (x212 x1554 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x1554 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x1554 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (or x2059 x76) x812))
(assert (x590 x536))
(assert (x590 x372))
(assert (x590 x781))
(assert (and (=> (> 256 0) (= (+ (* (x1110 x17 256) 256) (x1224 x17 256)) x17)) (x212 x17 256) (x1681 x17 256) (x2027 x17 256)))
(assert (x609 x1974))
(assert (=> (>= 10000 x2073) (= (x118 x2073) (x53 x2073))))
(assert (= x43 (=> (and (= x1669 x1714) (= x1862 x253) (= x1451 x733) (= x1161 x657) (= x1226 x1616)) x1756)))
(assert (x590 x1451))
(assert (x590 x1467))
(assert (= (or x947 x1272) x1639))
(assert (x590 x888))
(assert (x590 x1848))
(assert (= x112 (or x2085 x492)))
(assert (x590 x1524))
(assert (= x2005 (and (not x1141) x834)))
(assert (= x1371 (and x656 x1731)))
(assert (= (and x2000 (not x900)) x83))
(assert (x609 (x1835 256)))
(assert (= (and (not x793) x460) x1013))
(assert (=> (>= 10000 x1252) (= (x53 x1252) (x118 x1252))))
(assert (= (and (not x1456) x932) x1290))
(assert (= (x818 (x53 2279315017)) 2279315017))
(assert (=> (>= 10000 (x1266 192)) (= (x118 (x1266 192)) (x53 (x1266 192)))))
(assert (= 0 (x882 292)))
(assert (= (and x881 (not x101)) x210))
(assert (x609 (x365 224)))
(assert (= x597 (and x1173 (not x353))))
(assert (x34 x443))
(assert (x590 x1523))
(assert (= (x53 3733007566) (x118 3733007566)))
(assert (= (and (not x1325) x1512) x1472))
(assert (= 100641684887429822015232653770480429695213136867978658013931169090238473568256 (x818 (x53 100641684887429822015232653770480429695213136867978658013931169090238473568256))))
(assert (= (x818 (x118 (x1950 288))) (x1950 288)))
(assert (=> (<= (x1950 128) 10000) (= (x53 (x1950 128)) (x118 (x1950 128)))))
(assert (x590 x436))
(assert (= (x818 (x53 2726977199)) 2726977199))
(assert (x590 x704))
(assert (x590 x464))
(assert (= x745 (and x1261 x217)))
(assert (= (x585 192) 0))
(assert (= (x53 3018310333) (x118 3018310333)))
(assert (x590 x148))
(assert (= 0 (x289 128)))
(assert (=> (>= 10000 x642) (= (x118 x642) (x53 x642))))
(assert (= (x818 (x53 24341557)) 24341557))
(assert (x590 x1808))
(assert (x590 x719))
(assert (x609 (x2131 224)))
(assert (x590 x1955))
(assert (x609 (x1835 320)))
(assert (x1895 x1229))
(assert (= (and x144 x538) x932))
(assert (= (and (=> x1339 x593) (=> (and (and (= x1496 (> x1573 x2004)) (= (x1110 x1596 2) x681) (= (x97 (+ 1 x681)) x1573)) (not x1339)) (and (=> (and (and (= x207 false) (<= 0 x2004) (<= x2004 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1496)) (and (=> (and x207 (= x835 x207)) x198) (=> (not x207) x2030))) (=> x1496 x593)))) x748))
(assert (x1640 x480))
(assert (x590 x167))
(assert (= (x803 224) 0))
(assert (= (=> (and (= (x473 (- x849 128)) x378) (= x849 (x97 (+ x1545 128))) (= x1609 (>= 224 x378))) (and (=> (and (= (ite (<= x378 32) (x898 (x118 (x1625 128)) 0) (ite (<= x378 64) (x1436 (x118 (x1625 128)) (x118 (x1625 160)) 0) (ite (<= x378 96) (x223 (x118 (x1625 128)) (x118 (x1625 160)) (x118 (x1625 192)) 0) (ite (<= x378 128) (x1801 (x118 (x1625 128)) (x118 (x1625 160)) (x118 (x1625 192)) (x118 (x1625 224)) 0) (ite (<= x378 160) (x1379 (x118 (x1625 128)) (x118 (x1625 160)) (x118 (x1625 192)) (x118 (x1625 224)) (x118 (x1625 256)) 0) (ite (>= 192 x378) (x1946 (x118 (x1625 128)) (x118 (x1625 160)) (x118 (x1625 192)) (x118 (x1625 224)) (x118 (x1625 256)) (x118 (x1625 288)) 0) (ite (>= 224 x378) (x1231 (x118 (x1625 128)) (x118 (x1625 160)) (x118 (x1625 192)) (x118 (x1625 224)) (x118 (x1625 256)) (x118 (x1625 288)) (x118 (x1625 320)) 0) (x118 x1523)))))))) x940) (= x480 (x1110 x17 2)) (= (= x829 (ite x1741 1 0)) x970) (= x393 (ite (< 0 x829) x480 (x1535 127 x480))) (= (x1535 1 x17) x829) (= (> 32 x393) x1741)) (and (=> x970 x717) (=> (and (and (= x784 (= 0 x1615)) (= (x1535 1 x17) x1615)) (not x970)) (and (=> (and x784 (and (= x136 (x97 (+ 128 x393))) (= x723 (x1535 115792089237316195423570985008687907853269984665640564039457584007913129639680 x17)) (= x1247 x136))) x1235) (=> (and (not x784) (and (= (< 0 x393) x1263) (= (x898 (x53 5) 0) x1828))) (and (=> x1263 x830) (=> (not x1263) x431))))))) x1609)) x1724))
(assert (x590 x1763))
(assert (x856 x1337))
(assert (x590 x1236))
(assert (x609 (x1835 288)))
(assert (= 0 (x585 320)))
(assert (x590 x1097))
(assert (x590 x1943))
(assert (x34 x152))
(assert (= (or x2033 x552 x961 x2086 x2020) x1385))
(assert (x632 x1929))
(assert (x590 x788))
(assert (x1640 x1627))
(assert (= x1660 (=> (and (= x65 x419) (and (= (or (not x1301) x1212) x2114) (= x1015 x65) (= x526 0) (= (not (= 0 x1015)) x1212))) x2114)))
(assert (= x914 (and x725 x1385)))
(assert (x590 x155))
(assert (= x56 (and x936 x627)))
(assert (x1640 x1517))
(assert (= (=> (and (= x1685 x173) (= x1685 (x97 (+ 128 x704)))) x342) x1810))
(assert (x590 x2120))
(assert (x34 x491))
(assert (x590 x1847))
(assert (x590 x1745))
(assert (= x1710 (or x1322 x1250)))
(assert (=> (>= 10000 (x1950 192)) (= (x53 (x1950 192)) (x118 (x1950 192)))))
(assert (x590 x2077))
(assert (x590 x2141))
(assert (= (x118 (x818 x1884)) x1884))
(assert (= x45 (or x880 x450)))
(assert (x590 x673))
(assert (= x1051 (or x1047 (and x793 x460) (and x29 (not x1102)) x1494 x1773 x648 x957 x368 (and x445 x1559) x1336 x535 (and x389 x1424) (and x1636 (not x1506)) x1225)))
(assert (= (=> (= x958 (= 0 x1857)) (and (=> (and (not x958) (and (= x1121 x162) (= 0 x1558) (= x1491 x1450) (= x402 1) (= x1838 x801) (= x40 x95))) x7) (=> (and (and (= x1819 x1874) (= x1890 x1068)) x958) x1827))) x1366))
(assert (x590 x1161))
(assert (x590 x1605))
(assert (= (x818 (x12 x131 x749)) (+ x749 (x818 x131))))
(assert (= (=> (and (= x1894 (x425 256)) (= (not (< 128 x1485)) x410)) (and (=> (= x1490 128) x2072) x410)) x2157))
(assert (x590 x651))
(assert (= x908 (or x824 x1163)))
(assert (x34 x1721))
(assert (x590 x216))
(assert (x590 x1410))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x1513 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x1513 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1513)) (x212 x1513 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x1513 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x1513 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (and (not x145) x215) x1697))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x1332 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x1332 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1332)) (x212 x1332 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x1332 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x1332 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x365 224) (x818 (x118 (x365 224)))))
(assert (x609 (x1625 192)))
(assert (x590 x951))
(assert (= (x818 (x12 x237 1)) (+ (x818 x237) 1)))
(assert (= x80 (and x171 (not x1921))))
(assert (x590 x1992))
(assert (x590 x641))
(assert (= (and x169 (not x2023)) x307))
(assert (x590 x1395))
(assert (x590 x592))
(assert (x609 (x1950 320)))
(assert (x590 x1498))
(assert (x590 x1074))
(assert (=> (<= (x1253 192) 10000) (= (x118 (x1253 192)) (x53 (x1253 192)))))
(assert (x590 x1378))
(assert (x590 x772))
(assert (= (=> (= x447 (= x589 0)) (and (=> (and (not x447) (and (= x2135 1) (= x1396 x1924) (= x1108 x1349) (= x418 0) (= x1197 x24) (= x1582 x1029))) x2041) (=> (and (and (= x1596 x513) (= x75 x119) (= x257 x1068) (= x1819 x905) (= x1125 0)) x447) x776))) x909))
(assert (= x989 (or x1076 x684)))
(assert (= 4294967295 (x818 (x53 4294967295))))
(assert (x590 x1673))
(assert (x590 x1372))
(assert (=> (<= (x1625 160) 10000) (= (x53 (x1625 160)) (x118 (x1625 160)))))
(assert (= x242 (or x1689 x1166 x852)))
(assert (= (and (not x921) x2047) x852))
(assert (x590 x589))
(assert (x1895 x1935))
(assert (= (=> (= x1185 (not (> x1291 32))) (and x1185 x222)) x334))
(assert (= (x1253 288) (x818 (x118 (x1253 288)))))
(assert (= (and x1829 (not x1014)) x1578))
(assert (x1718 x17))
(assert (= x267 (=> (and (= x1206 x580) (= x1041 x611)) x1058)))
(assert (= (x1266 320) (x818 (x118 (x1266 320)))))
(assert (x590 x1652))
(assert (x590 x1481))
(assert (= (and (not x377) x8) x1322))
(assert (x590 x1075))
(assert (x590 x1064))
(assert (x590 x978))
(assert (= (or x1239 x2069) x2036))
(assert (x590 x948))
(assert (= x957 (and x1617 x757)))
(assert (x590 x816))
(assert (= (x818 (x12 x1413 x291)) (+ (x818 x1413) x291)))
(assert (and (= (- x500 (x1535 1 x500)) (* (x1110 x500 2) 2)) (x1354 x500 2) (x1131 x500 2) (=> (and (< 0 2) (> x500 0)) (and (> (* 2 (x1110 x500 2)) (- x500 2)) (>= x500 (* (x1110 x500 2) 2)))) (x1791 x500 2) (x698 x500 2)))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x2052 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x2052 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2052)) (x212 x2052 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x2052 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x2052 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x53 24341557) (x118 24341557)))
(assert (= (x118 4294967296) (x53 4294967296)))
(assert (= (and x96 (not x1854)) x2089))
(assert (= (and x1600 (not x784)) x686))
(assert (x590 x1228))
(assert (x590 x1093))
(assert (= x2111 (and x1731 (not x656))))
(assert (x609 (x1253 224)))
(assert (= 839595567 (x818 (x53 839595567))))
(assert (x590 x1284))
(assert (x590 x200))
(assert (= (and (not x1251) x762) x1419))
(assert (= (x118 1871487246) (x53 1871487246)))
(assert (x34 x216))
(assert (= (and x1904 x308) x995))
(assert (x1718 x1554))
(assert (=> (<= (x1253 160) 10000) (= (x53 (x1253 160)) (x118 (x1253 160)))))
(assert (= x1159 (and x686 (not x1263))))
(assert (x590 x1241))
(assert (= (and x455 (not x283)) x954))
(assert (= x1179 (or x1375 x1570)))
(assert (x590 x878))
(assert (x590 x1511))
(assert (= (or x956 x1346) x1499))
(assert (= (x118 1680813743) (x53 1680813743)))
(assert (x590 x343))
(assert (x590 x1049))
(assert (= x1845 (or x479 x1421 x1101 x1 x1178)))
(assert (x609 (x2131 160)))
(assert (= (x1835 160) (x818 (x118 (x1835 160)))))
(assert (=> (>= 10000 (x365 192)) (= (x118 (x365 192)) (x53 (x365 192)))))
(assert (x1640 x416))
(assert (x609 (x1266 128)))
(assert (x590 x1694))
(assert (x590 x1486))
(assert (x590 x1973))
(assert (= x913 (=> (and (= (not (> (x818 x366) (x818 x872))) x234) (= x872 (x12 x786 1))) (and x234 x14))))
(assert (=> (<= (x943 224) 10000) (= (x118 (x943 224)) (x53 (x943 224)))))
(assert (x590 x1291))
(assert (= (and x2060 (not x256)) x831))
(assert (x590 x2163))
(assert (x34 x754))
(assert (x590 x1765))
(assert (x609 (x1950 256)))
(assert (= x458 (=> (= x1454 (not (< 32 x1971))) (and x399 x1454))))
(assert (x590 x176))
(assert (= (x818 (x118 (x943 256))) (x943 256)))
(assert (x590 x1931))
(assert (x590 x865))
(assert (= x1813 (x818 (x118 x1813))))
(assert (= 0 (x565 192)))
(assert (= (and (=> (and (and (= x1984 (ite (> x37 0) x1337 (x1535 127 x1337))) (= (= (ite x554 1 0) x37) x1986) (= (< x1984 32) x554) (= (x1110 x17 2) x1337) (= (x1535 1 x17) x37)) x1189) (and (=> (and (not x1986) (and (= x113 (x898 (x53 5) 0)) (= x1690 (x1110 x2038 32)) (= x428 (< 0 x770)) (= x1218 (x12 x113 x1690)) (= x2038 (x97 (+ 31 x1984))))) (and (=> (and (and (= x1002 0) (= x237 x113)) (not x428)) x902) (=> (and x428 (= x1209 (< 31 x770))) (and (=> (and (and (= x1150 (x97 (+ x1844 1))) (= x1789 (> x1793 132)) (= x1793 (x97 (+ 132 x770))) (= x1844 (x97 (+ x770 x770)))) x1209) (and (=> (and (= x113 x897) (not x1789)) x1465) (=> x1789 x785))) (=> (and (and (= x1979 (>= 255 x999)) (= x1664 (x1572 132)) (= x1126 (<= x999 255)) (= (x97 (+ x770 x770)) x999) (= x548 (x97 (+ x697 x999))) (= x1355 (ite x1979 x1912 x1826)) (= x1912 (x97 (+ x697 x999))) (= x1002 (ite x1126 x548 x1355)) (= x113 x237) (= x1826 (x194 x999 x697)) (= x697 (x1535 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1664))) (not x1209)) x902))))) (=> x1986 x1338))) (=> (not x1189) x1016)) x524))
(assert (x609 (x365 128)))
(assert (x590 x1193))
(assert (x590 x1700))
(assert (= x541 (and x1071 x1176)))
(assert (x590 x1830))
(assert (x590 x1121))
(assert (x34 x1915))
(assert (= (x818 (x12 x786 1)) (+ (x818 x786) 1)))
(assert (x609 x984))
(assert (x1895 x1841))
(assert (x590 x544))
(assert (= 1461501637330902918203684832716283019655932542975 (x818 (x53 1461501637330902918203684832716283019655932542975))))
(assert (x590 x1894))
(assert (= (x1348 128) 0))
(assert (=> (<= x1974 10000) (= (x118 x1974) (x53 x1974))))
(assert (= 2923951457 (x818 (x53 2923951457))))
(assert (x609 (x1253 160)))
(assert (x590 x1580))
(assert (x590 x496))
(assert (= (and x288 x172) x1183))
(assert (= x984 (x818 (x118 x984))))
(assert (x590 x1337))
(assert (x590 x21))
(assert (x590 x1414))
(assert (x590 x137))
(assert (x590 x1484))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x186 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x186 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x186)) (x212 x186 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x186 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x186 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x590 x414))
(assert (x609 (x1266 160)))
(assert (=> (<= (x1266 288) 10000) (= (x53 (x1266 288)) (x118 (x1266 288)))))
(assert (= x308 (and (not x713) x302)))
(assert (= (x818 (x53 78829575338057407266098799593532030895783219923606930547737006156155256307712)) 78829575338057407266098799593532030895783219923606930547737006156155256307712))
(assert (x34 128))
(assert (x590 x1655))
(assert (= x455 (or x98 x2021)))
(assert (= (=> (and (= x823 x185) (= x1819 x1953) (= x1734 x75) (= x1109 x2146) (= 1 x1279)) x705) x1016))
(assert (= 0 (x94 160)))
(assert (= x1749 (and (not x1531) x1920)))
(assert (x590 x657))
(assert (= x2075 (and x908 x1189)))
(assert (x632 x200))
(assert (x590 x1167))
(assert (x1640 x1394))
(assert (= x211 (=> (= (= x1279 0) x1071) (and (=> (and (and (= x1068 x1508) (= x206 x1819)) x1071) x965) (=> (and (not x1071) (and (= x1734 x322) (= x2032 0) (= x2046 x1109) (= x110 1) (= x298 x185) (= x1953 x726))) x1037)))))
(assert (= x1856 (and x2158 (not x1532))))
(assert (x590 x718))
(assert (x590 x75))
(assert (x590 x20))
(assert (x590 x2122))
(assert (= x2062 x1859))
(assert (and (=> (> 2 0) (= (+ (* (x1110 x17 2) 2) (x1224 x17 2)) x17)) (x212 x17 2) (x1681 x17 2) (x2027 x17 2)))
(assert (= (and x1920 x1531) x1181))
(assert (= (x818 (x12 x191 3)) (+ 3 (x818 x191))))
(assert (and (=> (> 128 0) (= (+ (* (x1110 x247 128) 128) (x1224 x247 128)) x247)) (x212 x247 128) (x1681 x247 128) (x2027 x247 128)))
(assert (= 3189536363 (x818 (x53 3189536363))))
(assert (= (x818 (x118 (x1625 224))) (x1625 224)))
(assert (= (x882 260) 0))
(assert (= (x53 106459005500898838667931598610041423549574964228674563513410788872267948359680) (x118 106459005500898838667931598610041423549574964228674563513410788872267948359680)))
(assert (= (x818 (x118 (x1253 192))) (x1253 192)))
(assert (= (x118 3050870311) (x53 3050870311)))
(assert (x590 x1614))
(assert (= (and x1799 (not x1080)) x2144))
(assert (= (and x1611 x139) x762))
(assert (x609 (x365 160)))
(assert (x590 x1668))
(assert (= (x818 (x118 (x2131 320))) (x2131 320)))
(assert (= (x118 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x53 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (and (= (- x343 (x1535 31 x343)) (* (x1110 x343 32) 32)) (x1354 x343 32) (x1131 x343 32) (=> (and (< 0 32) (> x343 0)) (and (> (* 32 (x1110 x343 32)) (- x343 32)) (>= x343 (* (x1110 x343 32) 32)))) (x1791 x343 32) (x698 x343 32)))
(assert (x590 x1596))
(assert (x590 x411))
(assert (x590 x1455))
(assert (x590 x350))
(assert (= x1254 x850))
(assert (x590 x1719))
(assert (= (x818 (x118 (x1625 320))) (x1625 320)))
(assert (= (and x1409 x117) x869))
(assert (= (and (not x111) x327) x1887))
(assert (x1640 x337))
(assert (x590 x393))
(assert (= x354 (and x607 x730)))
(assert (x590 x532))
(assert (x590 x975))
(assert (x1640 x1335))
(assert (x590 x1502))
(assert (x590 x1737))
(assert (= (and x1853 x787) x1271))
(assert (x609 x1813))
(assert (x590 x1293))
(assert (x609 (x1625 320)))
(assert (x590 x162))
(assert (=> (<= (x1950 256) 10000) (= (x53 (x1950 256)) (x118 (x1950 256)))))
(assert (x590 x1777))
(assert (and (= (- x155 (x1535 31 x155)) (* (x1110 x155 32) 32)) (x1354 x155 32) (x1131 x155 32) (=> (and (< 0 32) (> x155 0)) (and (> (* 32 (x1110 x155 32)) (- x155 32)) (>= x155 (* (x1110 x155 32) 32)))) (x1791 x155 32) (x698 x155 32)))
(assert (and (= (- x1206 (x1535 1 x1206)) (* (x1110 x1206 2) 2)) (x1354 x1206 2) (x1131 x1206 2) (=> (and (< 0 2) (> x1206 0)) (and (> (* 2 (x1110 x1206 2)) (- x1206 2)) (>= x1206 (* (x1110 x1206 2) 2)))) (x1791 x1206 2) (x698 x1206 2)))
(assert (x590 x1554))
(assert (x590 x401))
(assert (x590 x663))
(assert (x590 x1696))
(assert (= (and x2107 x1055) x1770))
(assert (x1529 x1229 x574))
(assert (= (=> (= x127 (< (x818 x237) (x818 x1218))) (and (=> x127 x1725) (=> (not x127) x1329))) x902))
(assert (= (=> (and (or (not x1646) (and x1646 (= x1778 (x97 (+ x1823 260))))) (= x1646 (< x1823 x400))) x531) x851))
(assert (x590 x1275))
(assert (= x364 (or x1159 x1500)))
(assert (x590 x761))
(assert (x590 x695))
(assert (x590 x1295))
(assert (x34 x481))
(assert (x1718 x411))
(assert (x590 x814))
(assert (= x876 (and (not x540) x796)))
(assert (= (x840 x1482 224) (x375 (* x1482 26959946667150639794667015087019630673637144422540572481103610249216))))
(assert (= x1270 (and x1007 x451)))
(assert (x590 x598))
(assert (x590 x2095))
(assert (= x535 (and x2012 x857)))
(assert (x590 x337))
(assert (x590 x2096))
(assert (x590 x1368))
(assert (= x1340 (=> (and (= 128 x545) (= (= x385 0) x1522) (= x1372 (x473 (- x842 128))) (= x1335 (x97 (+ 31 x178))) (= x842 (x97 (+ 260 x241))) (= (x1535 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1335) x241) (= x385 (x1216 (x118 x984)))) (and (=> (and (and (= x1349 x1819) (= x418 x2122) (= x1596 x1924) (= 0 x2135) (= x1068 x1582) (= x75 x24)) x1522) x2041) (=> (and (not x1522) (and (< x464 2112976665) (< 0 x865) (= x1974 x2140) (= x739 x1372) (= (= (x1120 100) x178) x1187) (= x1117 x1146) (not (< x464 839595567)) (not (= x464 1039635593)) (= x1032 33277650900348105781121326340019631498405652329376380866381358124409588547584) (not (= x464 1030951317)) (= (or (> x1343 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1343 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1343 96))) x1854) (= x865 (x1216 (x118 x984))) (<= 132 x739) (not (> 1030951317 x464)) (= x1343 (x473 (- x739 4))) (not (< x739 4)) (> 1680813743 x464) (= x464 1234336674) x1187)) (and (=> (and (and (= (= x2140 x1974) x1833) (= x1974 x1889)) (not x1854)) (and (=> (and x1833 (and (= x1117 x1933) (= (and (= (<= x739 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x739 131)) x1024))) (and (=> (and x1024 (and (= x1275 (x1406 100)) (= x825 (< 18446744073709551615 x1275)))) (and (=> (and (and (= x1819 x1897) (= x2029 0) (= x1068 x1267) (= x75 x1696) (= x1412 x1596)) x825) x1281) (=> (and (not x825) (and (= 132 x93) (= (x97 (+ x1275 132)) x351) (= x1865 (> x351 x739)))) (and (=> (and x1865 (and (= x1897 x1819) (= x1267 x1068) (= x1596 x1412) (= x75 x1696) (= x2029 0))) x1281) (=> (and (= true x348) (not x1865)) (and (=> (and (and (= x1068 x1267) (= x1696 x75) (= x1596 x1412) (= x2029 0) (= x1819 x1897)) (not x348)) x1281) (=> (and (and (<= x971 255) (= x384 (x1436 (x118 x1974) (x53 2) 0)) (>= x971 0) (> 256 x971) (= x1742 (> x971 0)) (= (x77 x384) x971)) x348) (and (=> (and (and (= 0 x372) (= (> 1 x1596) x321)) x1742) (and (=> (and (and (= (> x1832 0) x558) (= x1832 (x473 (- x1596 1)))) (not x321)) (and (=> (and (= x788 x1068) (not x558)) x2008) (=> (and (= (> x1596 0) x1135) x558) (and (=> (and (and (= (not (= x2080 0)) x1892) (= x163 (x1124 x243)) (= x186 0) (= x766 (x375 x317)) (= x20 (x375 x186)) (= x2063 0) (= x1341 (and x1819 x175)) (>= 1461501637330902918203684832716283019655932542975 x243) (= x530 (x898 (x53 1) 0)) x1977 (> 1461501637330902918203684832716283019655932542976 x243) (= x530 x1318) (>= x243 0) (= 1 x317) (= x1080 (= x243 x1974)) (= (x97 (+ x1068 x1605)) x1489) (= x1605 (ite x175 x766 x20)) (= (or x434 x1892) x175) (= x1241 0) (= (or x773 (not x1341)) x1977) (= x433 (= x163 0)) (= x815 (x534 x1555)) (= (x534 x1241) x1952) (= x434 (>= x1952 x1068)) (= x773 (or (not x1170) x433)) (= x1170 (not (= x243 0))) (= x1555 0) (= x265 (ite x175 x1068 x815)) (= x243 (x777 x1318)) (= x2080 (x490 x1952)) (= x347 0)) x1135) (and (=> (not x1080) x36) (=> (and (= x78 (< x1596 1)) x1080) (and (=> (and (not x78) (and (= x1931 (x473 (- x1596 1))) (= x117 (> x1596 x1931)))) (and (=> (and (not x117) (and (= x1897 x1819) (= x2029 0) (= x1267 x1068) (= x1696 x75) (= x1412 x1596))) x1281) (=> (and x117 (and (= 1 x1332) (= (< 0 x1596) x795) (= x1213 (x898 (x53 1) 0)) (= x11 (x1124 x1794)) (= (x777 x2045) x1794) (= (x375 x1332) x21) (= (x26 x1931) x629) (= x2045 (x12 x1213 x1931)) (= (or (not x582) x1324) x1036) (= (<= x1489 x629) x690) (= (x375 x66) x506) (= (not (= x663 x1931)) x1908) (<= 0 x1794) (= (x97 (+ x691 x1489)) x1467) (= (= x1931 x11) x1772) (= (ite x996 x21 x506) x691) (= (or (not x260) x1772) x1324) (= x66 0) (= (ite x996 x1489 x1961) x137) (= (and x1819 x996) x582) (= (x26 x1931) x1961) x1036 (= (not (= 0 x1794)) x260) (> 1461501637330902918203684832716283019655932542976 x1794) (= (x339 x629) x663) (>= 1461501637330902918203684832716283019655932542975 x1794) (= x996 (or x1908 x690)))) (and (=> (and (not x795) (and (= x1897 x1819) (= x1596 x1412) (= x1068 x1267) (= x2029 0) (= x1696 x75))) x1281) (=> (and x795 (and (= x1735 x1820) (= 0 x271) (= 0 x2164) (= x2013 x788) (= x51 (x375 x1546)) (= (or (not x1082) x1148) x166) (= x1675 (x777 x1820)) (= x2097 (x375 x2164)) (= (not (= x1675 0)) x1082) (= x899 (x1124 x1675)) (= (x97 (+ x1467 x1870)) x2013) (>= x1675 0) (= x87 (x1708 x271)) (= (not (= 0 x601)) x848) (= (ite x1783 x51 x2097) x1870) (= (x561 x1858) x601) (= x953 (>= x1858 x1467)) (= x728 (ite x1783 x1467 x87)) (= x292 (or x166 (not x2110))) (= (x898 (x53 1) 0) x1735) (= x1783 (or x848 x953)) (>= 1461501637330902918203684832716283019655932542975 x1675) (= x1546 1) (= x1755 0) (= (and x1783 x1819) x2110) (= x1858 (x1708 x1755)) (= (= x899 0) x1148) (= 0 x1914) (= x772 0) x292)) x2008))))) (=> (and (and (= 0 x2029) (= x1897 x1819) (= x1068 x1267) (= x1696 x75) (= x1596 x1412)) x78) x1281))))) (=> (and (and (= x1897 x1819) (= x1696 x75) (= x1267 x1068) (= x2029 0) (= x1412 x1596)) (not x1135)) x1281))))) (=> x321 x1982))) (=> (and (and (= x1819 x1897) (= x75 x1696) (= x1596 x1412) (= 0 x2029) (= x1267 x1068)) (not x1742)) x1281))))))))) (=> (and (and (= x2029 0) (= x1267 x1068) (= x1897 x1819) (= x1412 x1596) (= x75 x1696)) (not x1024)) x1281))) (=> (and (and (= 0 x2029) (= x1897 x1819) (= x1267 x1068) (= x1696 x75) (= x1596 x1412)) (not x1833)) x1281))) (=> (and x1854 (and (= x75 x1696) (= x2029 0) (= x1897 x1819) (= x1596 x1412) (= x1068 x1267))) x1281)))))))
(assert (x590 x1382))
(assert (= (and (not x1630) x1030) x1911))
(assert (x643 32))
(assert (= (x53 33277650900348105781121326340019631498405652329376380866381358124409588547584) (x118 33277650900348105781121326340019631498405652329376380866381358124409588547584)))
(assert (x590 x347))
(assert (x590 x363))
(assert (= x1478 (x118 (x818 x1478))))
(assert (= x758 (=> (and (= (x473 (- x935 128)) x1850) (= (>= 224 x1850) x1063)) (and (=> (and (= x1342 (not x1698)) (= x1698 (= x424 x1792)) (= (ite (>= 32 x1850) (x898 (x118 (x365 128)) 0) (ite (>= 64 x1850) (x1436 (x118 (x365 128)) (x118 (x365 160)) 0) (ite (<= x1850 96) (x223 (x118 (x365 128)) (x118 (x365 160)) (x118 (x365 192)) 0) (ite (>= 128 x1850) (x1801 (x118 (x365 128)) (x118 (x365 160)) (x118 (x365 192)) (x118 (x365 224)) 0) (ite (>= 160 x1850) (x1379 (x118 (x365 128)) (x118 (x365 160)) (x118 (x365 192)) (x118 (x365 224)) (x118 (x365 256)) 0) (ite (>= 192 x1850) (x1946 (x118 (x365 128)) (x118 (x365 160)) (x118 (x365 192)) (x118 (x365 224)) (x118 (x365 256)) (x118 (x365 288)) 0) (ite (>= 224 x1850) (x1231 (x118 (x365 128)) (x118 (x365 160)) (x118 (x365 192)) (x118 (x365 224)) (x118 (x365 256)) (x118 (x365 288)) (x118 (x365 320)) 0) (x118 x1481)))))))) x1792)) x84) x1063))))
(assert (x590 x1649))
(assert (= (and x1789 x23) x2085))
(assert (x590 x1362))
(assert (= (x818 (x53 3948783980)) 3948783980))
(assert (x590 x2132))
(assert (x34 x662))
(assert (x590 x1935))
(assert (= (and x819 (not x1135)) x1996))
(assert (= x568 (=> (and (= x2077 (x1255 (x118 x966))) (= x1374 (x1255 (x118 x984))) (= (and (>= x1374 x1078) (< (+ x2077 x1078) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x283)) (and (=> (and (and (= 0 x544) (= 0 x666)) (not x283)) x760) (=> (and (and (and (= x1265 (> x1441 0)) (= x547 (- x2061 x1078)) (< (+ x1078 x1351) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x667 (x118 x966)) x1351) (= (x1255 (x118 x984)) x2061) (= x1428 (x97 (+ x1078 x1351)))) (or (not x1265) (and x1265 (and (= x332 (= (x180 (x118 x966)) x798)) x755 x332 (= (x738 (x118 x984)) x148) (< x844 4294967296) (= (x738 (x118 x966)) x798) (= (>= (x180 (x118 x984)) x148) x755))))) x283) x1751)))))
(assert (x609 x1056))
(assert (x590 x2127))
(assert (= (and (not x348) x1948) x278))
(assert (x590 x1306))
(assert (= x457 (and x144 (not x538))))
(assert (x34 x1460))
(assert (=> (>= 10000 (x943 192)) (= (x53 (x943 192)) (x118 (x943 192)))))
(assert (= (x818 (x53 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (=> (and (or (and x1815 (= x860 (x97 (+ 260 x178)))) (not x1815)) (= (< x178 x71) x1815)) x1340) x973))
(assert (x590 x2160))
(assert (x590 x1149))
(assert (x34 x2025))
(assert (x590 x837))
(assert (x590 x373))
(assert (= 0 (x359 260)))
(assert (and (=> (> 256 0) (= (+ (* (x1110 x1664 256) 256) (x1224 x1664 256)) x1664)) (x212 x1664 256) (x1681 x1664 256) (x2027 x1664 256)))
(assert (and (=> (> 128 0) (= (+ (* (x1110 x152 128) 128) (x1224 x152 128)) x152)) (x212 x152 128) (x1681 x152 128) (x2027 x152 128)))
(assert (x1640 x1664))
(assert (= (and (not x103) x596) x936))
(assert (= x2153 (and (not x1619) x1370)))
(assert (x590 x1558))
(assert (= (and x276 x703) x1475))
(assert (x590 x2031))
(assert (x590 x158))
(assert (x34 x1335))
(assert (x590 x2119))
(assert (= (and x2047 x921) x1603))
(assert (x609 (x1253 288)))
(assert (=> (<= (x2131 160) 10000) (= (x53 (x2131 160)) (x118 (x2131 160)))))
(assert (x590 x95))
(assert (x590 x1575))
(assert (x590 x134))
(assert (x590 x65))
(assert (=> (<= (x2131 320) 10000) (= (x53 (x2131 320)) (x118 (x2131 320)))))
(assert (= (and (not x1265) x383) x1446))
(assert (x590 x1191))
(assert (= x2158 (and (not x297) x759)))
(assert (= x507 (and (not x1496) x403)))
(assert (and (= (- x823 (x1535 1 x823)) (* (x1110 x823 2) 2)) (x1354 x823 2) (x1131 x823 2) (=> (and (< 0 2) (> x823 0)) (and (> (* 2 (x1110 x823 2)) (- x823 2)) (>= x823 (* (x1110 x823 2) 2)))) (x1791 x823 2) (x698 x823 2)))
(assert (x590 x100))
(assert (x590 x17))
(assert (x590 x196))
(assert (=> (>= 10000 x158) (= (x53 x158) (x118 x158))))
(assert (= 0 (x882 388)))
(assert (= x1219 (=> (and (= (x633 x1893) x344) (= x1659 (not (> x704 32)))) (and x1810 x1659))))
(assert (and (=> (> 128 0) (= (+ (* (x1110 x480 128) 128) (x1224 x480 128)) x480)) (x212 x480 128) (x1681 x480 128) (x2027 x480 128)))
(assert (x590 x870))
(assert (and (=> (> 128 0) (= (+ (* (x1110 x1084 128) 128) (x1224 x1084 128)) x1084)) (x212 x1084 128) (x1681 x1084 128) (x2027 x1084 128)))
(assert (= (and x1898 x1050) x8))
(assert (= (=> (and (and (and (= (x1216 (x118 x984)) x1221) x2134 (= x225 3189536363) (= x346 x1495) (= (or x1005 (not x1585)) x2134) (= 0 x2148) (not (< x225 2112976665)) (= (not (= x346 0)) x1005) (< x225 3285302901) (< 0 x1221) (= x2163 x1203) (not (= x225 3081457077)) (< x225 3733007566) (= x1486 x1596) (not (> 3081457077 x225))) (and (or (and x1583 (and (= 0 x1400) (= x1937 (and x1819 x305)) (= x1057 (x340 x2120)) (= x1397 (= x2120 x583)) (= (not (= x990 x2120)) x709) (= x990 (x1308 x1057)) (= x658 (x12 x1550 x2120)) (>= x1459 0) (= (or x709 x174) x305) (= x1968 (not (= x1459 0))) (< x1459 1461501637330902918203684832716283019655932542976) (= (ite x305 x1077 x1975) x1089) (= x1459 x1540) (= x583 (x1124 x1459)) (>= 1461501637330902918203684832716283019655932542975 x1459) x1816 (= 1 x662) (= (ite x305 x1663 x236) x296) (= (x97 (+ x1089 x1663)) x299) (= x299 x2125) (= (x898 (x53 1) 0) x1550) (= x1077 (x375 x662)) (= x1328 (or (not x1968) x1397)) (= (x375 x1400) x1975) (= x1816 (or x1328 (not x1937))) (< x2120 x1596) (= x236 (x340 x2120)) (= x174 (>= x1057 x1663)) (= x1459 (x777 x658)))) (and (and (= x1663 x2125) (= x1540 0)) (not x1583))) (and (= 3050870311 x1511) (not (< x1511 2112976665)) (not (< x1511 2726977199)) (= x426 (< x1203 x9)) (not (> 2867924802 x1511)) (> x263 0) (not (= x1511 2923951457)) (= (x1216 (x118 x984)) x263) (= x2163 x2120) (= x1486 x9) (not (= x1511 2867924802)) (= x1583 (> x1596 x2120)) (not (= 3018310333 x1511)) (> 3081457077 x1511)))) (= x1495 x2056)) x949) x1184))
(assert (=> (<= (x1625 288) 10000) (= (x53 (x1625 288)) (x118 (x1625 288)))))
(assert (= (and x78 x922) x514))
(assert (= x1738 (or x2144 (and x321 x1589))))
(assert (= x804 (and x2036 x750)))
(assert (x590 x1916))
(assert (x590 x128))
(assert (= (and x1270 x527) x961))
(assert (= x1050 (and x1617 (not x757))))
(assert (= (x818 (x118 (x1266 160))) (x1266 160)))
(assert (= (and x540 x796) x2068))
(assert (x590 x860))
(assert (= (=> (and (= x1564 (> x751 x2139)) (or (and x1564 (= x1323 (x97 (+ 164 x2139)))) (not x1564))) x1701) x1562))
(assert (= x968 (and x348 x1948)))
(assert (x590 x400))
(assert (= x1909 (and (not x1608) x1544)))
(assert (=> (<= (x1950 288) 10000) (= (x53 (x1950 288)) (x118 (x1950 288)))))
(assert (= x1618 (=> (and (= x224 (not (> x1321 132))) (= x1393 (x12 x1192 1))) (and (=> (= x2100 x1393) x955) x224))))
(assert (= (x1835 128) (x818 (x118 (x1835 128)))))
(assert (x590 x1109))
(assert (= 0 (x94 192)))
(assert (x590 x1488))
(assert (= (and x1370 x1619) x881))
(assert (= (x818 (x53 3733007566)) 3733007566))
(assert (= x312 (and (not x1024) x543)))
(assert (x1640 x706))
(assert (x590 x601))
(assert (= x2047 (and x46 x452)))
(assert (x590 x263))
(assert (= (or x2028 x2115) x1196))
(assert (= x1866 (and x699 x876)))
(assert (= (x365 288) (x818 (x118 (x365 288)))))
(assert (= 0 (x803 256)))
(assert (x590 x629))
(assert (= (x585 128) 0))
(assert (= 0 (x882 420)))
(assert (= (and (not x1541) x1299) x811))
(assert (= x1329 (=> (and (= (ite (< 0 x204) x416 (x1535 127 x416)) x1152) (= (x1110 x1002 2) x416) (= x204 (x1535 1 x1002)) (>= x928 0) (<= x928 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2012 (= x204 (ite x461 1 0))) (= x461 (> 32 x1152))) (and (=> (and (and (= (x1535 1 x1002) x1060) (= (= x1060 0) x874)) (not x2012)) (and (=> x874 x715) (=> (and (= x2011 (> x1152 0)) (not x874)) (and (=> x2011 x944) (=> (not x2011) x529))))) (=> x2012 x1338)))))
(assert (x590 x1715))
(assert (x590 x392))
(assert (x590 x1489))
(assert (x590 x1437))
(assert (= x1722 (and (not x293) x2165)))
(assert (= x977 (or x1964 x654)))
(assert (x590 x138))
(assert (x590 x1795))
(assert (=> (<= (x1625 192) 10000) (= (x53 (x1625 192)) (x118 (x1625 192)))))
(assert (= 0 (x866 (+ (x97 (+ 100 x1763)) 64))))
(assert (= x1313 (and (not x1211) x1834)))
(assert (x590 x1226))
(assert (and (=> (> 128 0) (= (+ (* (x1110 x1668 128) 128) (x1224 x1668 128)) x1668)) (x212 x1668 128) (x1681 x1668 128) (x2027 x1668 128)))
(assert (= (x365 192) (x818 (x118 (x365 192)))))
(assert (x590 x1300))
(assert (= x46 (and x1411 (not x1223))))
(assert (= (and x1902 x495) x168))
(assert (= (and x475 x915) x208))
(assert (x590 x1333))
(assert (x156 x1394))
(assert (and (=> (> 26959946667150639794667015087019630673637144422540572481103610249216 0) (= (+ (* (x1110 x1929 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) (x1224 x1929 26959946667150639794667015087019630673637144422540572481103610249216)) x1929)) (x212 x1929 26959946667150639794667015087019630673637144422540572481103610249216) (x1681 x1929 26959946667150639794667015087019630673637144422540572481103610249216) (x2027 x1929 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x590 x110))
(assert (x590 x90))
(assert (x1640 x152))
(assert (x590 x576))
(assert (x590 x235))
(assert (= (or x747 x1817) x1936))
(assert (= (=> (= x1019 (not (< 32 x48))) (and x1019 x1581)) x1525))
(assert (= (or x80 x1033) x1194))
(assert (and (=> (> 2 0) (= (+ (* (x1110 x1627 2) 2) (x1224 x1627 2)) x1627)) (x212 x1627 2) (x1681 x1627 2) (x2027 x1627 2)))
(assert (x590 x1733))
(assert (x590 x642))
(assert (x609 (x365 288)))
(assert (x34 x1739))
(assert (x590 x1800))
(assert (x590 x706))
(assert (x590 x1001))
(assert (= (and x1080 x1799) x922))
(assert (x590 x2073))
(assert (= (and (not x1567) x575) x1654))
(assert (x609 (x1266 224)))
(assert (x609 (x2131 320)))
(assert (x590 x1029))
(assert (x590 x809))
(assert (= (=> (= x1134 (not (> x1596 1))) (and x1134 (=> (= x1847 x566) x665))) x1470))
(assert (= x1452 (and x1603 x1922)))
(assert (= x233 (and x1265 x383)))
(assert (x856 x1824))
(assert (= (or x977 (and x908 (not x1189))) x567))
(assert (x643 x930))
(assert (x590 x545))
(assert (= (or x69 x1519) x1319))
(assert (x590 x477))
(assert (=> (>= 10000 (x1266 256)) (= (x53 (x1266 256)) (x118 (x1266 256)))))
(assert (x590 x945))
(assert (= x316 (or x56 x2151)))
(assert (x590 x357))
(assert (x34 x1627))
(assert (x590 x89))
(assert (x1640 x1084))
(assert (x1640 x1460))
(assert (= (x1835 192) (x818 (x118 (x1835 192)))))
(assert (x590 x2129))
(assert (x590 x322))
(assert (x1640 x1721))
(assert (= x403 (and x52 (not x1339))))
(assert (= x1804 (and x1939 x1448)))
(assert (x609 (x1253 256)))
(assert (x590 x1771))
(assert (x609 (x2131 288)))
(assert (= x638 (and x1703 x1509)))
(assert (x590 x37))
(assert (x590 x44))
(assert (x590 x1615))
(assert (x590 x1314))
(assert (x590 x376))
(assert (= (x1326 256) 0))
(assert (= x1650 (and x239 (not x874))))
(assert (= (or x91 x251) x1210))
(assert (= (and x1356 x1815) x747))
(assert (x590 x836))
(assert (= (x943 160) (x818 (x118 (x943 160)))))
(assert (= (and x101 x881) x854))
(assert (x1640 x247))
(assert (= (and (not x800) x1018) x1123))
(assert (x590 x1057))
(assert (= (x118 56965738197333823925951794324075424010313516842063129668313081903848242544640) (x53 56965738197333823925951794324075424010313516842063129668313081903848242544640)))
(assert (x590 x68))
(assert (= x1547 (and x1091 x1994)))
(assert (x590 x1826))
(assert (x590 x1361))
(assert (= (or x1113 x1578) x2069))
(assert (x609 (x365 256)))
(assert (= (and (not x1522) x1936) x96))
(assert (= (=> (and (= x40 x1890) (= x1558 x1188) (= x1838 x1874) (= x75 x162) (= x402 0) (= x1596 x1491)) x7) x1827))
(assert (x590 x1152))
(assert (=> (<= (x2131 256) 10000) (= (x118 (x2131 256)) (x53 (x2131 256)))))
(assert (x590 x519))
(assert (= x1773 (and x189 x1856)))
(assert (= x399 x615))
(assert (x590 x1364))
(assert (x590 x149))
(assert (x590 x1390))
(assert (x590 x701))
(assert (= (and x2133 x39) x976))
(assert (= (x1348 320) 0))
(assert (= x57 (and x242 x287)))
(assert (x590 x2053))
(assert (x590 x1793))
(assert (= (or (and x1911 x1389) x444) x1008))
(assert (x34 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (=> (<= (x365 160) 10000) (= (x53 (x365 160)) (x118 (x365 160)))))
(assert (=> (<= (x1266 160) 10000) (= (x53 (x1266 160)) (x118 (x1266 160)))))
(assert (= (and (not x1939) x1448) x1421))
(assert (x609 (x1835 128)))
(assert (x590 x1503))
(assert (x590 x767))
(assert (= x672 (and (not x1591) x1052)))
(assert (x590 x2135))
(assert (x590 x1913))
(assert (= x445 (and x1102 x29)))
(assert (x590 x2140))
(assert (=> (>= 10000 (x1835 192)) (= (x53 (x1835 192)) (x118 (x1835 192)))))
(assert (= x218 (or x1420 (and x1210 (not x522)))))
(assert (= x1418 (=> (and (= (not (> x1149 32)) x86) (= (x395 128) x1903)) (and x86 (=> (= 32 x440) x859)))))
(assert (x1895 x697))
(assert (x590 x563))
(assert (x590 x890))
(assert (= x596 (and (not x1579) x1085)))
(assert (=> (<= x885 10000) (= (x118 x885) (x53 x885))))
(assert (= (and x1547 (not x318)) x1240))
(assert (= x1047 (and (not x1898) x1050)))
(assert (= x1037 (=> (and (or (and x356 (and (= (x132 (x118 x984)) x1233) (< (+ x2078 x1377) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x429 x726) (= x1667 x298) (= x1655 x2032) (= x2160 (x97 (+ x2078 x1377))) (= (x1404 (x118 x984)) x2078) (= x2046 x1498) (= x322 x1957) (= x1377 (ite (= 0 x110) x1078 0)) (= x2169 (- x1233 x1377)) (= x231 x110))) (and (and (= x1498 x2046) (= x231 x110) (= x322 x1957) (= x2032 x1655) (= x726 x429) (= x1667 x298)) (not x356))) (= x356 (= x110 0))) x82)))
(assert (x1640 x1915))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x1739 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x1739 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1739)) (x212 x1739 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x1739 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x1739 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (=> (>= 10000 x1813) (= (x53 x1813) (x118 x1813))))
(assert (= x1448 (and x371 x1606)))
(assert (= (or x202 x2068) x2007))
(assert (= (=> (and (= x102 (and (>= x1808 x1078) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1078 x392)))) (= x1808 (x1255 (x118 x984))) (= x392 (x1255 (x118 x984))) (= x1848 x912)) (and (=> (and (not x102) (and (= 0 x1551) (= 0 x1714) (= x1451 x75) (= x1226 x1596) (= x1161 x1068) (= x1862 x1819))) x1145) (=> (and (and (= (x1255 (x118 x984)) x1644) (= (= 0 x1078) x1438) (= x912 x1160) (>= x1160 100) (= (x810 (x118 x984)) x923) (< (+ x923 x1078) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x97 (+ x923 x1078)) x969) (= x1146 x1711) x88 (= (- x1644 x1078) x1501) (= x88 (= (x694 68) 0)) (> x718 0) (= x1700 50455196340412629536459377552246818957342304218644716315923982585962625499136) (= x718 (x1216 (x118 x984)))) x102) (and (=> (not x1438) x717) (=> (and (and (not (> 1871487246 x1575)) (= (or (and (> 64 x1245) (= true (<= x1245 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1245 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x713) (not (> 839595567 x1575)) (= 1871487246 x1575) (< x1575 2112976665) (not (< x1160 4)) (= (x473 (- x1160 4)) x1245) (not (> 1680813743 x1575))) x1438) (and (=> x713 x717) (=> (and (not x713) (and (= x1647 x1711) (= x1904 (and (= true (<= x1160 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 99 x1160))))) (and (=> (and (and (= x1545 (x1104 68)) (= (< 18446744073709551615 x1545) x360)) x1904) (and (=> x360 x717) (=> (and (and (= (x97 (+ x1545 100)) x1497) (= x1140 (> x1497 x1160)) (= 100 x335)) (not x360)) (and (=> x1140 x717) (=> (and (= x1561 true) (not x1140)) (and (=> (not x1561) x717) (=> (and x1561 (and (or (and (= x727 x525) x727) (and (not x727) (and (= (ite x1760 x1760 (= 0 x1596)) x525) (= x1760 (= 0 x1647))))) (= x727 (> x1711 x1596)))) x463))))))) (=> (not x1904) x717))))))))) x2037))
(assert (x590 x594))
(assert (x590 x506))
(assert (= (x818 (x12 x1634 x314)) (+ x314 (x818 x1634))))
(assert (x856 x1410))
(assert (= (+ (x818 x1192) x1097) (x818 (x12 x1192 x1097))))
(assert (= x1581 x1387))
(assert (x590 x1769))
(assert (x590 x1188))
(assert (= (x94 128) 0))
(assert (= (and x1194 (not x993)) x986))
(assert (= (x118 1030951317) (x53 1030951317)))
(assert (= (and x672 (not x2172)) x170))
(assert (x34 2))
(assert (x590 x1682))
(assert (= (x818 (x118 (x1253 256))) (x1253 256)))
(assert (x609 x885))
(assert (= (and x23 (not x1789)) x492))
(assert (= x883 (and (not x911) x854)))
(assert (x1640 x1554))
(assert (= x979 (and (=> (and (and (= (x1110 x823 2) x1569) (= (> x1528 x1637) x297) (= x1528 (x97 (+ x1569 1)))) (not x285)) (and (=> x297 x1338) (=> (and (not x297) (and (<= 0 x2004) (<= x2004 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1532 (not (= x2004 x928))))) (and (=> (not x1532) x1398) (=> (and x1532 (= x1189 x1532)) x524))))) (=> x285 x1338))))
(assert (= x18 (and x370 x959)))
(assert (x590 x1563))
(assert (= (x53 1461501637330902918203684832716283019655932542975) (x118 1461501637330902918203684832716283019655932542975)))
(assert (x590 x1637))
(assert (x590 x580))
(assert (x590 x1912))
(assert (x590 x513))
(assert (x590 x1482))
(assert (x590 x939))
(assert (= x531 (=> (and (= (x97 (+ 31 x1823)) x1460) (= x1100 (x1216 (x118 x984))) (= x1777 128) (= (= 0 x1100) x1648) (= x381 (x473 (- x1180 128))) (= (x1535 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1460) x1417) (= x1180 (x97 (+ x1417 260)))) (and (=> (and (not x1648) (and (not (= 2867924802 x338)) (= x1056 x1044) (= x381 x587) x1998 (>= x587 132) (not (> 4 x587)) (< 0 x1445) (> 3081457077 x338) (= 78829575338057407266098799593532030895783219923606930547737006156155256307712 x893) (= x2140 x313) (= x1998 (= x1823 (x610 100))) (not (> 2726977199 x338)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x919) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x919) true) (< x919 96))) x227) (= x1445 (x1216 (x118 x984))) (= x338 2923951457) (not (< x338 2867924802)) (= (x473 (- x587 4)) x919) (not (< x338 2112976665)))) (and (=> x227 x593) (=> (and (and (= (= x2140 x313) x2092) (= x108 x313)) (not x227)) (and (=> (not x2092) x593) (=> (and x2092 (and (= x1312 x1056) (= x1902 (= x1044 x1056)))) (and (=> (and (= (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x587)) (< 131 x587)) x2152) x1902) (and (=> (not x2152) x593) (=> (and x2152 (and (= x1390 (x1686 100)) (= x407 (> x1390 18446744073709551615)))) (and (=> (and (and (= x1237 (> x836 x587)) (= (x97 (+ 132 x1390)) x836) (= 132 x1220)) (not x407)) (and (=> x1237 x593) (=> (and (= true x900) (not x1237)) (and (=> (not x900) x593) (=> (and (and (<= x1168 255) (= (< 0 x1168) x1091) (< x1168 256) (= (x1436 (x118 x313) (x53 2) 0) x711) (>= x1168 0) (= x1168 (x77 x711))) x900) (and (=> (not x1091) x593) (=> (and (and (>= x756 0) (= (= x756 0) x318) (>= 255 x756) (> 256 x756) (= (x1436 (x118 x1056) (x53 2) 0) x1752) (= (x77 x1752) x756)) x1091) (and (=> (and (= x484 (= x1056 0)) x318) (and (=> x484 x593) (=> (and (and (= (< 0 x1596) x1014) (= x1437 0)) (not x484)) (and (=> (and (= x1068 x562) (not x1014)) x501) (=> (and (= x910 (< 0 x1596)) x1014) (and (=> (not x910) x593) (=> (and x910 (and (< x286 1461501637330902918203684832716283019655932542976) (= x846 (ite x32 x1068 x252)) (= (x777 x1025) x286) (= (or (not x2026) x862) x2123) (= x32 (or x27 x1302)) (= x184 (x490 x576)) (= x1217 x1025) (= (x898 (x53 1) 0) x1217) (= x1259 (= x313 x286)) (= (not (= 0 x184)) x1302) (= (= x303 0) x862) (= x27 (>= x576 x1068)) (= x576 (x534 x1083)) (= 0 x427) (= x2026 (not (= 0 x286))) (<= 0 x286) (= (x1124 x286) x303) (= (x97 (+ x128 x1068)) x90) (= x1745 0) (= 0 x1061) (>= 1461501637330902918203684832716283019655932542975 x286) (= (or (not x1651) x2123) x1492) (= (x534 x1745) x252) (= (x375 x414) x1737) (= (and x32 x1819) x1651) (= (ite x32 x1737 x1062) x128) (= (x375 x1103) x1062) (= 1 x414) x1492 (= 0 x1103) (= x1083 0))) (and (=> (and x1259 (= (> x1596 0) x578)) (and (=> (and (and (= (= x669 0) x1586) (= (or x1586 (not x546)) x341) (= 0 x571) (= x1167 (x375 x498)) (= (x97 (+ x2141 x90)) x363) (= (ite x688 x90 x2119) x246) x1687 (= x1513 0) (<= 0 x1087) (= (and x1819 x688) x115) (= x363 x1983) (= x533 (x375 x1513)) (= x1386 x1059) (= x1232 (x147 x436)) (= x546 (not (= 0 x1087))) (= x261 0) (= x669 (x1124 x1087)) (= x2141 (ite x688 x1167 x533)) (= x1699 (not (= x1798 0))) (= x498 1) (= (x777 x1059) x1087) (= (x147 x1705) x2119) (= (x898 (x53 1) 0) x1386) (= (<= x90 x1232) x1905) (= x688 (or x1905 x1699)) (= 0 x1705) (= x1798 (x1716 x1232)) (= x1687 (or x341 (not x115))) (= 0 x436) (<= x1087 1461501637330902918203684832716283019655932542975)) x578) x273) (=> (not x578) x593))) (=> (not x1259) x486))))))))) (=> (not x318) x593))))))))) (=> x407 x593))))) (=> (not x1902) x593))))))) (=> (and (and (= x1819 x1874) (= x1890 x1068)) x1648) x1827)))))
(assert (x590 x453))
(assert (= (x1950 256) (x818 (x118 (x1950 256)))))
(assert (= x82 (=> (and (= x838 (= 0 x1655)) (or x838 (not x838))) x889)))
(assert (not x572))
(assert (= (x1326 192) 0))
(assert (x34 x186))
(assert (x1640 x1855))
(assert (= (and x1564 x1845) x1556))
(assert (= (x943 192) (x818 (x118 (x943 192)))))
(assert (= (x53 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x118 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= 0 (x289 96)))
(assert (and (=> (> 128 0) (= (+ (* (x1110 x1410 128) 128) (x1224 x1410 128)) x1410)) (x212 x1410 128) (x1681 x1410 128) (x2027 x1410 128)))
(assert (x590 x1373))
(assert (= x331 (and (not x1283) x478)))
(assert (=> (<= (x1253 256) 10000) (= (x53 (x1253 256)) (x118 (x1253 256)))))
(assert (x590 x1915))
(assert (x590 x1262))
(assert (= 1039635593 (x818 (x53 1039635593))))
(assert (= x947 (and x1993 (not x780))))
(assert (= (or x457 x1290 x2084) x2060))
(assert (= x1466 (=> (and (= x1831 x661) (= x1471 x1422) (= x594 x1638) (= x2161 x1086) (= x896 x1945)) x323)))
(assert (= (and (not x1115) x528) x408))
(assert (=> (<= x1049 10000) (= (x53 x1049) (x118 x1049))))
(assert (x590 x1400))
(assert (= (=> (and (= (x12 x799 1) x1119) (= x2173 (not (< (x818 x1119) (x818 x1478))))) (and x1966 x2173)) x1768))
(assert (= (and x812 x1342) x1411))
(assert (x590 x1186))
(assert (= (x1950 320) (x818 (x118 (x1950 320)))))
(assert (= (and x1536 x835) x1797))
(assert (x590 x1279))
(assert (x643 x343))
(assert (x856 x416))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x818 (x53 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (x34 x2164))
(assert (x590 x1786))
(assert (= (and (not x1726) x1165) x1424))
(assert (= (and (not x310) x1633) x1606))
(assert (x590 x390))
(assert (= (and (not x1875) x2044) x1767))
(assert (x590 x1870))
(assert (x590 x105))
(assert (x34 x17))
(assert (= (x118 100641684887429822015232653770480429695213136867978658013931169090238473568256) (x53 100641684887429822015232653770480429695213136867978658013931169090238473568256)))
(assert (= (and x2165 x293) x2136))
(assert (= 0 (x523 292)))
(assert (= 1234336674 (x818 (x53 1234336674))))
(assert (x590 x1355))
(assert (= (or x625 x219) x2133))
(assert (x590 x783))
(assert (= (and (not x321) x1589) x73))
(assert (= 0 (x710 256)))
(assert (x590 x1934))
(assert (x590 x40))
(assert (x1274 x1002))
(assert (x590 x640))
(assert (x590 x634))
(assert (= (and x428 x1978) x797))
(assert (x590 x1794))
(assert (= (x1253 128) (x818 (x118 (x1253 128)))))
(assert (= 0 (x94 320)))
(assert (x590 x674))
(assert (= (and x1611 (not x139)) x792))
(assert (=> (<= (x943 320) 10000) (= (x118 (x943 320)) (x53 (x943 320)))))
(assert (and (=> (> 32 0) (= (+ (* (x1110 x1335 32) 32) (x1224 x1335 32)) x1335)) (x212 x1335 32) (x1681 x1335 32) (x2027 x1335 32)))
(assert (= (and x1532 x2158) x824))
(assert (x590 x1245))
(assert (= x2086 (and x451 (not x1007))))
(assert (x156 x1460))
(assert (= (x818 (x53 106459005500898838667931598610041423549574964228674563513410788872267948359680)) 106459005500898838667931598610041423549574964228674563513410788872267948359680))
(assert (x856 x2025))
(assert (= (and (not x941) x604) x1812))
(assert (= x884 (=> (and (= x1198 (x12 x611 1)) (= x1130 (not (> (x818 x1884) (x818 x1198))))) (and x1130 x1704))))
(assert (= x1494 (and x759 x297)))
(assert (= (x523 356) 0))
(assert (x609 (x943 288)))
(assert (x590 x769))
(assert (x590 x1374))
(assert (x609 (x943 160)))
(assert (x34 x1332))
(assert (= (and x1797 x361) x16))
(assert (and (=> (> 26959946667150639794667015087019630673637144422540572481103610249216 0) (= (+ (* (x1110 x706 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) (x1224 x706 26959946667150639794667015087019630673637144422540572481103610249216)) x706)) (x212 x706 26959946667150639794667015087019630673637144422540572481103610249216) (x1681 x706 26959946667150639794667015087019630673637144422540572481103610249216) (x2027 x706 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x590 x1504))
(assert (x590 x998))
(assert (= x1849 (=> (and (= x1861 x134) (= (x97 (+ 128 x1064)) x134)) x81)))
(assert (x590 x1871))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x411 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x411 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x411)) (x212 x411 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x411 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x411 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x590 x92))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x498 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x498 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x498)) (x212 x498 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x498 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x498 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x1370 (and (not x959) x370)))
(assert (= x830 (=> (and (= x1361 (x633 x1828)) (= (not (< 32 x393)) x1367)) (and x1367 x431))))
(assert (= (and x915 (not x475)) x604))
(assert (x590 x662))
(assert (= (x818 (x118 x2101)) x2101))
(assert (= x22 (and x1775 x33)))
(assert (= x2072 (=> (and (or (not x1115) (and (= x266 (x97 (+ x1485 164))) x1115)) (= (< x1485 x1490) x1115)) x1754)))
(assert (x590 x313))
(assert (= (and x1183 (not x1683)) x1178))
(assert (= (and (not x389) x1424) x1636))
(assert (and (=> (> 2 0) (= (+ (* (x1110 x930 2) 2) (x1224 x930 2)) x930)) (x212 x930 2) (x1681 x930 2) (x2027 x930 2)))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x1394 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x1394 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1394)) (x212 x1394 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x1394 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x1394 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x818 (x53 115792089237316195423570985008687907853269984665640564039457584007913129639680)) 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x1640 x216))
(assert (= (or x1181 x1749) x1165))
(assert (x696 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x590 x821))
(assert (x590 x2038))
(assert (x590 x1480))
(assert (x590 x1450))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x707 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x707 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x707)) (x212 x707 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x707 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x707 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (=> (and (and (= x817 x536) (not (= 3081457077 x2067)) (= x2163 x740) (= x2067 3189536363) (not (> 3081457077 x2067)) (= x100 (x1216 (x118 x984))) (not (> 2112976665 x2067)) (< x2067 3733007566) (> 3285302901 x2067) (< 0 x100)) (and (or (and (and (= x1595 (<= x962 x560)) (= x887 (or (not x617) x743)) (< x314 x817) (= (or x1276 x1595) x877) (= x65 x274) (= x1276 (not (= x2099 x314))) (= (and x877 x2124) x617) (= x274 (x994 x646)) (>= 1461501637330902918203684832716283019655932542975 x274) (>= x274 0) (= (not (= x274 0)) x28) (= (x1129 x560) x2099) (= x651 (x2171 x274)) (= x560 (x1407 x314)) (< x274 1461501637330902918203684832716283019655932542976) (= (x898 (x53 1) 0) x1634) (= (or x228 (not x28)) x743) x887 (= x228 (= x651 x314)) (= x646 (x12 x1634 x314))) x1199) (and (= x65 0) (not x1199))) (and (not (< x891 2112976665)) (= (x1216 (x118 x984)) x1316) (= (< x740 x390) x1301) (= x314 x2163) (= x1199 (< x314 x817)) (> 3081457077 x891) (not (= x891 2923951457)) (= x390 x536) (> x1316 0) (not (> 2867924802 x891)) (= 3050870311 x891) (not (= 3018310333 x891)) (not (= x891 2867924802)) (not (> 2726977199 x891))))) x1660) x248))
(assert (= (and x1194 x993) x1888))
(assert (x590 x790))
(assert (x590 x470))
(assert (= (x818 (x118 (x943 288))) (x943 288)))
(assert (=> (<= (x1625 320) 10000) (= (x118 (x1625 320)) (x53 (x1625 320)))))
(assert (x590 x1142))
(assert (x590 x802))
(assert (= x864 (and x1936 x1522)))
(assert (= (or x1940 x1767 x933) x1299))
(assert (x34 x247))
(assert (x590 x193))
(assert (x590 x419))
(assert (x590 x1128))
(assert (= (and x1650 (not x2011)) x2049))
(assert (=> (<= (x2131 224) 10000) (= (x118 (x2131 224)) (x53 (x2131 224)))))
(assert (= x1046 (=> (and (= x1093 x1596) (= x1821 x666) (= x75 x355) (= x724 x1819) (= x1068 x456)) x1042)))
(assert (x590 x517))
(assert (x590 x980))
(assert (= x650 (and x330 x1599)))
(assert (x590 x2061))
(assert (= x1666 (and x672 x2172)))
(assert (x590 x1143))
(assert (= (and (not x787) x1853) x616))
(assert (x1640 x1824))
(assert (x590 x571))
(assert (x590 x184))
(assert (x590 x261))
(assert (x590 x1311))
(assert (x590 x188))
(assert (x590 x246))
(assert (x590 x1150))
(assert (x590 x1507))
(assert (x856 x1084))
(assert (= (or x1887 x1837) x2084))
(assert (= x1784 (and (not x1071) x1176)))
(assert (= (or x986 x1271 x616) x778))
(assert (x590 x1903))
(assert (= (=> (and (= x110 0) (= x2032 x192) (= x726 x206) (= x1508 x2046) (= x75 x322) (= x298 x1596)) x1037) x965))
(assert (x590 x1832))
(assert (x34 x706))
(assert (= (x818 (x53 50455196340412629536459377552246818957342304218644716315923982585962625499136)) 50455196340412629536459377552246818957342304218644716315923982585962625499136))
(assert (x590 x537))
(assert (= (and x1090 x879) x276))
(assert (x590 x919))
(assert (x590 x349))
(assert (x590 x1232))
(assert (x590 x1712))
(assert (x590 x1999))
(assert (= (=> (and (= x75 x1121) (= x1819 x801) (= x1596 x1450) (= x95 x1068) (= x1857 0)) x255) x593))
(assert (= (and x2147 x1865) x67))
(assert (x590 x271))
(assert (and (=> (> 128 0) (= (+ (* (x1110 x1824 128) 128) (x1224 x1824 128)) x1824)) (x212 x1824 128) (x1681 x1824 128) (x2027 x1824 128)))
(assert (= (=> (and (or (and (and (= x1714 x1414) (= x1758 x1862) (= x1780 x1226) (= (- x1771 x1594) x1246) (= x277 x1551) (= (x927 (x118 x984)) x2081) (= (ite (= x1414 0) x1078 0) x1594) (= x605 (x97 (+ x1594 x2081))) (= x1628 x1161) (= x1771 (x1112 (x118 x984))) (= x1504 x1451) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2081 x1594))) x129) (and (not x129) (and (= x1414 x1714) (= x277 x1551) (= x1758 x1862) (= x1161 x1628) (= x1780 x1226) (= x1451 x1504)))) (= (= 0 x1414) x129)) x1145) x374))
(assert (x590 x1476))
(assert (= x608 (and x995 (not x360))))
(assert (x632 x706))
(assert (x590 x1515))
(assert (x590 x385))
(assert (= x1218 (x118 (x818 x1218))))
(assert (x590 x1111))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x17 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x17 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x17)) (x212 x17 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x17 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x17 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x590 x295))
(assert (= (and (not x527) x1270) x552))
(assert (= x1951 (and x52 x1339)))
(assert (x590 x1203))
(assert (= x595 (and x804 (not x753))))
(assert (= x1052 (and x894 (not x1991))))
(assert (x590 x141))
(assert (= (and x797 x1209) x23))
(assert (x590 x481))
(assert (x609 x1317))
(assert (= (and x982 x1259) x1384))
(assert (= (x2015 256) 0))
(assert (= x1676 (or x106 x745)))
(assert (= x850 (=> (and (= x1093 x817) (= x456 x962) (= x724 x2124)) x248)))
(assert (x590 x1824))
(assert (x590 x1376))
(assert (x590 x1180))
(assert (x590 x1798))
(assert (= x1153 (or x262 x883)))
(assert (x590 x314))
(assert (= (and x2147 (not x1865)) x1948))
(assert (= (and x31 x1438) x302))
(assert (x590 x985))
(assert (x590 x1839))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x1664 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x1664 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1664)) (x212 x1664 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x1664 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x1664 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x590 x1461))
(assert (= (x818 (x53 3050870311)) 3050870311))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x317 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x317 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x317)) (x212 x317 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x317 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x317 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (or x2034 x2017) x987))
(assert (= (and x73 (not x558)) x219))
(assert (x34 x498))
(assert (= x1409 (and x922 (not x78))))
(assert (= (x882 324) 0))
(assert (= x327 (and x1456 x932)))
(assert (= x630 (x118 (x818 x630))))
(assert (x590 x1169))
(assert (x590 x844))
(assert (x1640 1))
(assert (= (x818 (x118 x966)) x966))
(assert (= x1544 (and x19 x972)))
(assert (= (or x645 x714) x2021))
(assert (=> (>= 10000 (x2131 128)) (= (x118 (x2131 128)) (x53 (x2131 128)))))
(assert (= (x53 2112976665) (x118 2112976665)))
(assert (x590 x177))
(assert (x590 x1358))
(assert (x590 x1855))
(assert (x590 x1588))
(assert (x1640 x1337))
(assert (= (x866 (+ 128 (x97 (+ x1763 100)))) 0))
(assert (x590 x1269))
(assert (=> (>= 10000 x966) (= (x118 x966) (x53 x966))))
(assert (x590 x329))
(assert (= (=> (and (or (not x1031) x1031) (= (= x1279 0) x1031)) x211) x705))
(assert (and (=> (> 128 0) (= (+ (* (x1110 x416 128) 128) (x1224 x416 128)) x416)) (x212 x416 128) (x1681 x416 128) (x2027 x416 128)))
(assert (x590 x1667))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x2164 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x2164 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2164)) (x212 x2164 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x2164 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x2164 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x590 x983))
(assert (x590 x1309))
(assert (= (+ 1 (x818 x1413)) (x818 (x12 x1413 1))))
(assert (x1640 x200))
(assert (x590 x1601))
(assert (= (and x1073 x976) x834))
(assert (x590 x1061))
(assert (= (x359 388) 0))
(assert (x590 x798))
(assert (= (and (not x207) x507) x915))
(assert (= (=> (and (= (= 0 x589) x522) (or x522 (not x522))) x909) x1468))
(assert (x590 x1423))
(assert (= (x818 (x118 x642)) x642))
(assert (= 0 (x1348 224)))
(assert (= x1094 (and (not x727) x1543)))
(assert (x590 x539))
(assert (= (x118 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x53 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (= (and x608 (not x1140)) x917))
(assert (= (x118 1234336674) (x53 1234336674)))
(assert (= (x818 (x118 (x1625 288))) (x1625 288)))
(assert (= x342 (=> (and (= (x473 (- x173 128)) x1320) (= x388 (<= x1320 224))) (and (=> (and (= (= x362 x1842) x868) (= (not x868) x835) (= (ite (<= x1320 32) (x898 (x118 (x2131 128)) 0) (ite (>= 64 x1320) (x1436 (x118 (x2131 128)) (x118 (x2131 160)) 0) (ite (<= x1320 96) (x223 (x118 (x2131 128)) (x118 (x2131 160)) (x118 (x2131 192)) 0) (ite (<= x1320 128) (x1801 (x118 (x2131 128)) (x118 (x2131 160)) (x118 (x2131 192)) (x118 (x2131 224)) 0) (ite (>= 160 x1320) (x1379 (x118 (x2131 128)) (x118 (x2131 160)) (x118 (x2131 192)) (x118 (x2131 224)) (x118 (x2131 256)) 0) (ite (<= x1320 192) (x1946 (x118 (x2131 128)) (x118 (x2131 160)) (x118 (x2131 192)) (x118 (x2131 224)) (x118 (x2131 256)) (x118 (x2131 288)) 0) (ite (>= 224 x1320) (x1231 (x118 (x2131 128)) (x118 (x2131 160)) (x118 (x2131 192)) (x118 (x2131 224)) (x118 (x2131 256)) (x118 (x2131 288)) (x118 (x2131 320)) 0) (x118 x1252)))))))) x1842)) x198) x388))))
(assert (x590 x2080))
(assert (x590 x1247))
(assert (x156 x1335))
(assert (x590 x2032))
(assert (= (or x639 x637) x209))
(assert (x590 x1168))
(assert (x1529 x1841 x1935))
(assert (= x2074 (or (and x1140 x608) (and (not x1904) x308) x59 x18 (and x302 x713) x391 x1880 x763 x22 (and (not x1438) x31) (and x995 x360))))
(assert (x643 x1596))
(assert (= x290 (and x1557 (not x102))))
(assert (x590 x1297))
(assert (= (and x1630 x1030) x1836))
(assert (= (x807 128) 0))
(assert (x609 (x1266 320)))
(assert (= (and x1196 (not x1648)) x104))
(assert (x590 x448))
(assert (= 0 (x359 356)))
(assert (= x413 (and x1541 x1299)))
(assert (x34 x317))
(assert (x609 x2101))
(assert (= 0 (x1348 160)))
(assert (= (=> (= x287 (> (x818 x1478) (x818 x799))) (and (=> (not x287) x1966) (=> x287 x1768))) x404))
(assert (= 0 (x1348 256)))
(assert (x590 x1664))
(assert (x590 x126))
(assert (x34 x1929))
(assert (x590 x1901))
(assert (and (= (- x1596 (x1535 1 x1596)) (* (x1110 x1596 2) 2)) (x1354 x1596 2) (x1131 x1596 2) (=> (and (< 0 2) (> x1596 0)) (and (> (* 2 (x1110 x1596 2)) (- x1596 2)) (>= x1596 (* (x1110 x1596 2) 2)))) (x1791 x1596 2) (x698 x1596 2)))
(assert (= (=> (and (= x130 (not (< (x818 x630) (x818 x1218)))) (= (x12 x237 1) x630)) (and x1329 x130)) x1725))
(assert (x590 x1332))
(assert (x590 x1391))
(assert (x590 x281))
(assert (=> (<= (x1835 224) 10000) (= (x118 (x1835 224)) (x53 (x1835 224)))))
(assert (x1640 x1929))
(assert (x590 x2125))
(assert (x590 x11))
(assert (= (x818 (x12 x113 1)) (+ 1 (x818 x113))))
(assert (= (x53 115792089237316195423570985008687907853269984665640564039457484007913129639935) (x118 115792089237316195423570985008687907853269984665640564039457484007913129639935)))
(assert (= (and x356 x1304) x551))
(assert (= (x94 256) 0))
(assert (x590 x1491))
(assert (x609 (x943 320)))
(assert (x590 x923))
(assert (= x1239 (and x1384 x578)))
(assert (x590 x691))
(assert (= 3285302901 (x818 (x53 3285302901))))
(assert (x590 x274))
(assert (x590 x2002))
(assert (= 0 (x395 128)))
(assert (= 2112976665 (x818 (x53 2112976665))))
(assert (and (=> (> 32 0) (= (+ (* (x1110 x1460 32) 32) (x1224 x1460 32)) x1460)) (x212 x1460 32) (x1681 x1460 32) (x2027 x1460 32)))
(assert (= (or x1051 x567) x2112))
(assert (x590 x2076))
(assert (= (or x2049 x294) x654))
(assert (x590 x119))
(assert (=> (>= 10000 x1481) (= (x53 x1481) (x118 x1481))))
(assert (= x333 (and (not x287) x242)))
(assert (x590 x1546))
(assert (= 3018310333 (x818 (x53 3018310333))))
(assert (x590 x1890))
(assert (= 0 (x866 (x97 (+ 100 x1763)))))
(assert (x1895 x574))
(assert (= x202 (or x1866 x2130)))
(assert (x590 x1914))
(assert (= (=> (and (= (x473 (- x1247 128)) x1843) (= (<= x1843 224) x2040)) (and x2040 (=> (and (= (ite (<= x1843 32) (x898 (x118 (x1950 128)) 0) (ite (>= 64 x1843) (x1436 (x118 (x1950 128)) (x118 (x1950 160)) 0) (ite (<= x1843 96) (x223 (x118 (x1950 128)) (x118 (x1950 160)) (x118 (x1950 192)) 0) (ite (>= 128 x1843) (x1801 (x118 (x1950 128)) (x118 (x1950 160)) (x118 (x1950 192)) (x118 (x1950 224)) 0) (ite (<= x1843 160) (x1379 (x118 (x1950 128)) (x118 (x1950 160)) (x118 (x1950 192)) (x118 (x1950 224)) (x118 (x1950 256)) 0) (ite (>= 192 x1843) (x1946 (x118 (x1950 128)) (x118 (x1950 160)) (x118 (x1950 192)) (x118 (x1950 224)) (x118 (x1950 256)) (x118 (x1950 288)) 0) (ite (<= x1843 224) (x1231 (x118 (x1950 128)) (x118 (x1950 160)) (x118 (x1950 192)) (x118 (x1950 224)) (x118 (x1950 256)) (x118 (x1950 288)) (x118 (x1950 320)) 0) (x118 x2101)))))))) x1960) (= x737 (= x940 x1960)) (= (not x737) x1069)) x268))) x1235))
(assert (= x1526 (=> (and (= x1733 x1638) (= x2161 x1800) (= x3 x661) (= x896 x1916) (= x1422 x1473)) x323)))
(assert (x590 x1843))
(assert (x590 x681))
(assert (= x158 (x818 (x118 x158))))
(assert (x34 (* x1482 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= 0 (x1348 192)))
(assert (= (x118 839595567) (x53 839595567)))
(assert (x590 x1427))
(assert (x590 x1582))
(assert (= x120 (=> (and (= (x807 128) x44) (= (not (< 32 x1823)) x1970)) (and x1970 (=> (= 32 x400) x851)))))
(assert (= x529 x715))
(assert (x590 x1945))
(assert (= (and x857 (not x2012)) x239))
(assert (= (and (not x1833) x2089) x164))
(assert (x590 x183))
(assert (x590 x1320))
(assert (= (and x1867 x1684) x1633))
(assert (and (=> (> 128 0) (= (+ (* (x1110 x1337 128) 128) (x1224 x1337 128)) x1337)) (x212 x1337 128) (x1681 x1337 128) (x2027 x1337 128)))
(assert (= x1039 (and (not x730) x607)))
(assert (= (x1625 160) (x818 (x118 (x1625 160)))))
(assert (and (=> (> 256 0) (= (+ (* (x1110 x443 256) 256) (x1224 x443 256)) x443)) (x212 x443 256) (x1681 x443 256) (x2027 x443 256)))
(assert (= (and x168 x2152) x309))
(assert (= (and x1472 x970) x1880))
(assert (= (and (=> (not x1342) x1859) (=> (and (and (= (x1535 1 x17) x945) (= (x1110 x17 2) x247) (= x2002 (ite (> x945 0) x247 (x1535 127 x247))) (= x1928 (> 32 x2002)) (= x1223 (= (ite x1928 1 0) x945))) x1342) (and (=> (and (and (= x749 (x1110 x155 32)) (= x155 (x97 (+ x2002 31))) (= x452 (< 0 x1275)) (= (x12 x131 x749) x1478) (= x131 (x898 (x53 5) 0))) (not x1223)) (and (=> (and x452 (= (> x1275 31) x921)) (and (=> (and (and (= (x1535 115792089237316195423570985008687907853269984665640564039457584007913129639680 x443) x574) (= x1855 (ite x493 x379 x1074)) (= (ite x1976 x1728 x1524) x1074) (= (x194 x1229 x574) x1524) (= (x97 (+ x574 x1229)) x1728) (= (>= 255 x1229) x493) (= (x97 (+ x1275 x1275)) x1229) (= (x97 (+ x1229 x574)) x379) (= x131 x799) (= x443 (x1406 132)) (= (>= 255 x1229) x1976)) (not x921)) x404) (=> (and (and (= (x97 (+ x1275 x1275)) x1368) (= (x97 (+ 132 x1275)) x453) (= x1876 (x97 (+ x1368 1))) (= (> x453 132) x1922)) x921) (and (=> x1922 x1305) (=> (and (= x1631 x131) (not x1922)) x676))))) (=> (and (not x452) (and (= x1855 0) (= x799 x131))) x404))) (=> (and x1223 (and (= x2029 0) (= x1696 x75) (= x1819 x1897) (= x1068 x1267) (= x1596 x1412))) x1281)))) x84))
(assert (= x326 (and x1024 x543)))
(assert (x590 x1587))
(assert (= (and x762 x1251) x1416))
(assert (x590 x518))
(assert (x34 x671))
(assert (x590 x1485))
(assert (= (and x507 x207) x623))
(assert (= (x523 388) 0))
(assert (= x715 x1016))
(assert (= x1053 (and x1031 x2112)))
(assert (x1640 127))
(assert (= (=> (and (<= 0 x2004) (= true x750) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2004)) (and (=> (not x750) x593) (=> (and x750 (and (or (and (= x753 x1339) x753) (and (not x753) (and (= (ite x387 x387 (= 0 x1596)) x1339) (= x387 (= 0 x2004))))) (= x753 (> x2004 x1596)))) x748))) x273))
(assert (= x1042 (=> (= x1630 (= x1821 0)) (and (=> x1630 x850) (=> (and (not x1630) (and (or (and (and (= (x97 (+ 100000000000000000 x355)) x1139) (<= 0 x355) (not (< 115792089237316195423570985008687907853269984665640564039457484007913129639935 x355)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x355)) (not x1389)) x1389) (and (= (= x624 0) x1389) (> 256 x624) (<= 0 x624) (= x624 (x2118 x74)) (<= x624 255)))) x1254)))))
(assert (x609 (x2131 256)))
(assert (= (=> (and (= x1264 (x12 x131 1)) (= x1195 (not (> x453 164)))) (and x1195 (=> (= x1264 x1631) x676))) x1305))
(assert (x590 x1644))
(assert (= (and x2104 x907) x1629))
(assert (= x69 (or x1399 x1549)))
(assert (x590 x231))
(assert (= (x53 4294967295) (x118 4294967295)))
(assert (= (x118 2726977199) (x53 2726977199)))
(assert (x590 x896))
(assert (x590 x581))
(assert (= (x818 (x53 56965738197333823925951794324075424010313516842063129668313081903848242544640)) 56965738197333823925951794324075424010313516842063129668313081903848242544640))
(assert (x590 x277))
(assert (x34 x66))
(assert (x590 x1844))
(assert (= x1252 (x818 (x118 x1252))))
(assert (x590 x1669))
(assert (x590 x885))
(assert (x590 x2154))
(assert (= (and x46 (not x452)) x1689))
(assert (x590 x1415))
(assert (and (= (- x1002 (x1535 1 x1002)) (* (x1110 x1002 2) 2)) (x1354 x1002 2) (x1131 x1002 2) (=> (and (< 0 2) (> x1002 0)) (and (> (* 2 (x1110 x1002 2)) (- x1002 2)) (>= x1002 (* (x1110 x1002 2) 2)))) (x1791 x1002 2) (x698 x1002 2)))
(assert (x590 x1359))
(assert (x590 x1861))
(assert (= (and x1173 x353) x2051))
(assert (x590 x270))
(assert (= (x2131 256) (x818 (x118 (x2131 256)))))
(assert (x590 x416))
(assert (x34 x2022))
(assert (x590 x1032))
(assert (= x250 (and x1888 x813)))
(assert (=> (>= 10000 (x1266 224)) (= (x53 (x1266 224)) (x118 (x1266 224)))))
(assert (x34 x1084))
(assert (x609 (x943 128)))
(assert (x34 x1103))
(assert (x590 x666))
(assert (= (x2131 160) (x818 (x118 (x2131 160)))))
(assert (x590 x1383))
(assert (x1640 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (= (and x2092 x1214) x495))
(assert (= (=> (and (= x138 (x97 (+ x393 128))) (= x138 x1247)) x1235) x431))
(assert (x590 x1929))
(assert (= (or x85 x1123) x1867))
(assert (= (=> (and (= (x97 (+ 164 x1485)) x1943) (= (and (< (+ x1078 x1878) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x1078 x618)) x730) (= (x1255 (x118 x984)) x1878) (= 164 x1105) (= x618 (x1255 (x118 x984))) (= x592 (x473 (- x1943 164)))) (and (=> (and (not x730) (and (= x1498 x1068) (= x1667 x1596) (= 0 x231) (= x1655 0) (= x1819 x429) (= x1957 x75))) x82) (=> (and x730 (and (= x1443 56965738197333823925951794324075424010313516842063129668313081903848242544640) (= x1652 (x1216 (x118 x984))) (< 0 x1652) (= (x1255 (x118 x984)) x149) (= x357 4) (= x1449 (- x149 x1078)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1078 x1106)) (= (= x1078 0) x946) (= x592 x357) (= x1106 (x1851 (x118 x984))) (= x2054 (x97 (+ x1078 x1106))))) (and (=> (and (and (= x1068 x1508) (= x1819 x206)) (not x946)) x965) (=> (and (and (< x1132 2279315017) (< x1132 2726977199) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1146) (= x1149 (x395 96)) (<= 0 x1044) (>= x1146 0) (not (< x1132 2112976665)) (> 1461501637330902918203684832716283019655932542976 x1044) (= (< 0 x1149) x353) (not (< x357 4)) (<= x1044 1461501637330902918203684832716283019655932542975) (= 2112976665 x1132) (> 3081457077 x1132)) x946) (and (=> (and (= x440 0) (not x353)) x859) (=> x353 x1418))))))) x1754))
(assert (x34 x414))
(assert (x590 x24))
(assert (= x1375 (and x1967 x307)))
(assert (= (and x1845 (not x1564)) x843))
(assert (= x1553 (and (not x795) x869)))
(assert (= x1058 (=> (= (< (x818 x611) (x818 x1884)) x256) (and (=> x256 x884) (=> (not x256) x1704)))))
(assert (= (x818 (x12 x1208 1)) (+ (x818 x1208) 1)))
(assert (= (=> (and (= (> x870 x1447) x1921) (or (and (= x1610 (x97 (+ 164 x1447))) x1921) (not x1921))) x320) x1927))
(assert (x609 (x1625 128)))
(assert (x590 x135))
(assert (x590 x439))
(assert (= x682 (and (not x407) x309)))
(assert (=> (>= 10000 (x365 128)) (= (x53 (x365 128)) (x118 (x365 128)))))
(assert (x590 x489))
(assert (x590 x963))
(assert (x590 x1831))
(assert (= (and x825 x326) x2093))
(assert (= x607 (or x2143 x408)))
(assert (= 0 (x94 288)))
(assert (=> (>= 10000 (x943 256)) (= (x53 (x943 256)) (x118 (x943 256)))))
(assert (and (=> (> 2 0) (= (+ (* (x1110 x1002 2) 2) (x1224 x1002 2)) x1002)) (x212 x1002 2) (x1681 x1002 2) (x2027 x1002 2)))
(assert (x590 x741))
(assert (= (x359 324) 0))
(assert (x590 x108))
(assert (x590 x1573))
(assert (= (=> (and (= x752 x1471) (= x1945 x1001) (= x594 x15) (= x1086 x980) (= x1430 x1831)) x1466) x422))
(assert (x590 x5))
(assert (= x472 (and x478 x1283)))
(assert (= x33 (and x1788 (not x525))))
(assert (= (=> (and (= x429 x1435) (= x579 x1667) (= x1498 x2149) (= x1957 x1392) (= x532 x231)) x122) x889))
(assert (= x847 (=> (and (= (x1535 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1517) x814) (= x269 (x473 (- x1070 128))) (= x1726 (= 0 x1955)) (= 128 x1193) (= x1517 (x97 (+ x1149 31))) (= (x1216 (x118 x984)) x1955) (= x1070 (x97 (+ x814 260)))) (and (=> (and (and (= x1508 x1068) (= x206 x1819)) x1726) x965) (=> (and (and (= (x1216 (x118 x984)) x439) (= x1146 x1637) (> 839595567 x1580) (= x389 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x489) (and (= (<= x489 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x489)))) (not (< x1693 4)) (= 24341557 x1580) (<= 132 x1693) (= x489 (x473 (- x1693 4))) (= x906 (= (x140 100) x1149)) (< x1580 288768741) (= x1813 x1044) (= x1693 x269) x906 (< x1580 2112976665) (> x439 0) (= 656247078515407326148355443760548300161286948278503429861414951787075469312 x821)) (not x1726)) (and (=> (and (and (= (= x1813 x1044) x1506) (= x254 x1813)) (not x389)) (and (=> (and x1506 (and (= x1637 x928) (= x1102 (and (= true (<= x1693 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x1693 131))))) (and (=> (and (and (= (x1572 100) x770) (= x1559 (< 18446744073709551615 x770))) x1102) (and (=> x1559 x1338) (=> (and (not x1559) (and (= (x97 (+ 132 x770)) x1786) (= x793 (< x1693 x1786)) (= x401 132))) (and (=> x793 x1338) (=> (and (not x793) (= x512 true)) (and (=> (not x512) x1338) (=> (and x512 (and (= x586 (= x1587 0)) (<= 0 x1587) (<= x1587 255) (= x789 (x1436 (x118 x1813) (x53 2) 0)) (= x1587 (x77 x789)) (> 256 x1587))) (and (=> (and x586 (= (= 0 x1813) x757)) (and (=> x757 x1338) (=> (and (and (= x226 (x375 x2022)) (= (or x1886 (not x808)) x279) (= x467 (or x494 x981)) (= (x97 (+ x1068 x1425)) x2146) (= x1425 (ite x467 x1913 x226)) (= x1099 (x534 x1596)) (= x459 (not (= 0 x1846))) (= true x1898) (= x707 1) (= (x898 (x53 1) 0) x1118) (= (x1124 x1846) x1769) (= 0 x2022) (= x808 (and x467 x1819)) x279 (= x1839 (ite x467 x1068 x496)) (= (x97 (+ x1596 1)) x823) (= x1886 (or (not x459) x282)) (= (x534 x1596) x496) (= x981 (>= x1099 x1068)) (= x1846 (x777 x1182)) (= x494 (not (= x1596 x2145))) (= x2145 (x490 x1099)) (>= 1461501637330902918203684832716283019655932542975 x1846) (= x1182 (x12 x1118 x1596)) (= (= x1769 x1596) x282) (>= x1846 0) (= (x375 x707) x1913)) (not x757)) (and (=> (not x1898) x1338) (=> (and x1898 (and (or (and (and (= (ite x924 x924 (= 0 x823)) x285) (= x924 (= x928 0))) (not x377)) (and x377 (= x377 x285))) (= x377 (> x1637 x823)))) x979))))) (=> (not x586) x1338))))))))) (=> (not x1102) x1338))) (=> (not x1506) x1338))) (=> x389 x1338)))))))
(assert (=> (>= 10000 (x1266 128)) (= (x118 (x1266 128)) (x53 (x1266 128)))))
(assert (= x288 (and x1804 x1632)))
(assert (x590 x2063))
(assert (x590 x1555))
(assert (x590 x1527))
(assert (x34 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (= (and x354 (not x946)) x1623))
(assert (x590 x1961))
(assert (= x1365 (and x129 x521)))
(assert (= (x53 3081457077) (x118 3081457077)))
(assert (= (x565 160) 0))
(assert (= 2867924802 (x818 (x53 2867924802))))
(assert (= (=> (and (= x1108 x1897) (= x1029 x1267) (= x1696 x1197) (= x1396 x1412) (= x589 x2029)) x1468) x1281))
(assert (= (and x1788 x525) x59))
(assert (and (=> (> 2 0) (= (+ (* (x1110 x1855 2) 2) (x1224 x1855 2)) x1855)) (x212 x1855 2) (x1681 x1855 2) (x2027 x1855 2)))
(assert (= 0 (x359 452)))
(assert (x590 x1006))
(assert (= x1704 (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2004) (= (x1535 1 x1206) x598) (= x48 (ite (< 0 x598) x216 (x1535 127 x216))) (= x216 (x1110 x1206 2)) (>= x2004 0) (= (= x598 (ite x6 1 0)) x1579) (= x6 (< x48 32))) (and (=> (and (and (= x103 (= 0 x505)) (= (x1535 1 x1206) x505)) (not x1579)) (and (=> x103 x1387) (=> (and (= (> x48 0) x627) (not x103)) (and (=> (not x627) x1581) (=> x627 x1525))))) (=> x1579 x593)))))
(assert (x590 x1252))
(assert (x590 x1157))
(assert (=> (>= 10000 (x1625 256)) (= (x118 (x1625 256)) (x53 (x1625 256)))))
(assert (x590 x1594))
(assert (= 1030951317 (x818 (x53 1030951317))))
(assert (x590 x2029))
(assert (x590 x618))
(assert (= (x818 (x118 (x1253 224))) (x1253 224)))
(assert (x590 x1160))
(assert (x590 x1070))
(assert (=> (>= 10000 (x2131 192)) (= (x118 (x2131 192)) (x53 (x2131 192)))))
(assert (x590 x1813))
(assert (x590 x1626))
(assert (x590 x775))
(assert (= (and x239 x874) x1964))
(assert (=> (<= (x1835 320) 10000) (= (x118 (x1835 320)) (x53 (x1835 320)))))
(assert (= (x118 100000000000000000) (x53 100000000000000000)))
(assert (= x1920 (or x2051 x597)))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x443 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x443 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x443)) (x212 x443 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x443 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x443 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x1972 (or x683 (and (not x835) x1536))))
(assert (x590 x1984))
(assert (= (and x1579 x1085) x2159))
(assert (x590 x247))
(assert (= (x1266 288) (x818 (x118 (x1266 288)))))
(assert (= x872 (x118 (x818 x872))))
(assert (= (and (not x750) x2036) x735))
(assert (and (= (x446 3 3) 9) (= 81 (x446 27 3)) (= (x446 9 3) 27) (= (x446 9 9) 81)))
(assert (=> (<= (x1253 320) 10000) (= (x53 (x1253 320)) (x118 (x1253 320)))))
(assert (x590 x1983))
(assert (= (x818 (x12 x113 x1690)) (+ x1690 (x818 x113))))
(assert (= (=> (and (= (x473 (- x483 128)) x509) (= (>= 224 x509) x782) (= x483 (x97 (+ x1390 128)))) (and (=> (and (= (ite (>= 32 x509) (x898 (x118 (x943 128)) 0) (ite (>= 64 x509) (x1436 (x118 (x943 128)) (x118 (x943 160)) 0) (ite (>= 96 x509) (x223 (x118 (x943 128)) (x118 (x943 160)) (x118 (x943 192)) 0) (ite (<= x509 128) (x1801 (x118 (x943 128)) (x118 (x943 160)) (x118 (x943 192)) (x118 (x943 224)) 0) (ite (>= 160 x509) (x1379 (x118 (x943 128)) (x118 (x943 160)) (x118 (x943 192)) (x118 (x943 224)) (x118 (x943 256)) 0) (ite (<= x509 192) (x1946 (x118 (x943 128)) (x118 (x943 160)) (x118 (x943 192)) (x118 (x943 224)) (x118 (x943 256)) (x118 (x943 288)) 0) (ite (>= 224 x509) (x1231 (x118 (x943 128)) (x118 (x943 160)) (x118 (x943 192)) (x118 (x943 224)) (x118 (x943 256)) (x118 (x943 288)) (x118 (x943 320)) 0) (x118 x642)))))))) x362) (= x337 (x1110 x17 2)) (= x704 (ite (< 0 x1269) x337 (x1535 127 x337))) (= x1269 (x1535 1 x17)) (= x475 (= x1269 (ite x626 1 0))) (= x626 (< x704 32))) (and (=> (and (not x475) (and (= x941 (= x1228 0)) (= x1228 (x1535 1 x17)))) (and (=> (and (not x941) (and (= x1155 (> x704 0)) (= x1893 (x898 (x53 5) 0)))) (and (=> x1155 x1219) (=> (not x1155) x1810))) (=> (and (and (= (x1535 115792089237316195423570985008687907853269984665640564039457584007913129639680 x17) x179) (= x537 (x97 (+ x704 128))) (= x173 x537)) x941) x342))) (=> x475 x593))) x782)) x2030))
(assert (= (and (not x600) x1138) x645))
(assert (= x1198 (x118 (x818 x1198))))
(assert (= (x818 (x118 x313)) x313))
(assert (= (or x638 (and (not x1509) x1703)) x114))
(assert (= x1519 (or x1289 x774)))
(assert (= x1576 (and x784 x1600)))
(assert (x1895 x628))
(assert (= (x818 (x53 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x590 x1610))
(assert (= (or x901 x2167 x398) x2168))
(assert (x34 x411))
(assert (x590 x1497))
(assert (= x760 (=> (and (or x780 (not x780)) (= (= 0 x544) x780)) x1046)))
(assert (x590 x1172))
(assert (x590 x418))
(assert (= x230 (=> (and (= x201 (not (> x790 164))) (= x1088 (x12 x1413 1))) (and (=> (= x1041 x1088) x267) x201))))
(assert (x590 x299))
(assert (= (or x2159 x1730 x1240 x805 x208 (and x168 (not x2152)) x1277 (and x1214 (not x2092)) (and x309 x407) x1951 (and (not x1902) x495) (and x227 x104) x83 x1863 x16 (and x1237 x682) x1720 x735) x1402))
(assert (= (x118 288768741) (x53 288768741)))
(assert (x590 x1086))
(assert (= x38 (and x276 (not x703))))
(assert (x590 x344))
(assert (x590 x764))
(assert (=> (>= 10000 (x943 160)) (= (x118 (x943 160)) (x53 (x943 160)))))
(assert (x590 x1954))
(assert (x34 x952))
(assert (= x417 (or x989 x1164)))
(assert (x590 x1971))
(assert (= (x53 18446744073709551615) (x118 18446744073709551615)))
(assert (x590 x1540))
(assert (x590 x1876))
(assert (x590 x236))
(assert (=> (<= (x365 224) 10000) (= (x53 (x365 224)) (x118 (x365 224)))))
(assert (= 0 (x710 192)))
(assert (and (= (- x1855 (x1535 1 x1855)) (* (x1110 x1855 2) 2)) (x1354 x1855 2) (x1131 x1855 2) (=> (and (< 0 2) (> x1855 0)) (and (> (* 2 (x1110 x1855 2)) (- x1855 2)) (>= x1855 (* (x1110 x1855 2) 2)))) (x1791 x1855 2) (x698 x1855 2)))
(assert (x590 x2145))
(assert (x590 x526))
(assert (= x1695 x615))
(assert (= (x1253 320) (x818 (x118 (x1253 320)))))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x481 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x481 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x481)) (x212 x481 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x481 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x481 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x590 x574))
(assert (x632 x1721))
(assert (= (x1950 192) (x818 (x118 (x1950 192)))))
(assert (x590 x2056))
(assert (x590 x173))
(assert (x590 x999))
(assert (x590 x1200))
(assert (x590 x179))
(assert (x590 x722))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x414 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x414 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x414)) (x212 x414 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x414 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x414 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x590 x2054))
(assert (= (or x333 x57) x2165))
(assert (x590 x1598))
(assert (x590 x2139))
(assert (x590 x1508))
(assert (x590 x1068))
(assert (x590 x3))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x1103 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x1103 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1103)) (x212 x1103 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x1103 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x1103 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x1950 128) (x818 (x118 (x1950 128)))))
(assert (= x36 (=> (= (> 1 x1596) x1574) (and x1982 x1574))))
(assert (= x2107 (and x1713 x60)))
(assert (= (and x1155 x1812) x684))
(assert (x590 x1083))
(assert (= x1066 (and x1013 x512)))
(assert (= (x1835 256) (x818 (x118 (x1835 256)))))
(assert (x590 x1430))
(assert (x590 x254))
(assert (= x123 (and (not x1742) x968)))
(assert (x590 x952))
(assert (x590 x71))
(assert (x590 x1146))
(assert (= (x118 1461501637330902918203684832716283019655932542976) (x53 1461501637330902918203684832716283019655932542976)))
(assert (let ((x679 (* x1482 26959946667150639794667015087019630673637144422540572481103610249216))) (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x679 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x679 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x679)) (x212 x679 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x679 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x679 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (= (and x727 x1543) x358))
(assert (x590 x1114))
(assert (= x2143 (and x528 x1115)))
(assert (x590 x1106))
(assert (= x2098 (or x2007 (and (not x1069) x35))))
(assert (x590 x471))
(assert (x590 x1078))
(assert (x590 x756))
(assert (= 0 (x523 260)))
(assert (x590 x502))
(assert (x590 x579))
(assert (x590 x2024))
(assert (= (x53 3189536363) (x118 3189536363)))
(assert (x590 x606))
(assert (x590 x754))
(assert (= x294 (and x1650 x2011)))
(assert (x590 x1459))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x1423 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x1423 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1423)) (x212 x1423 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x1423 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x1423 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x590 x225))
(assert (= (x818 (x53 33277650900348105781121326340019631498405652329376380866381358124409588547584)) 33277650900348105781121326340019631498405652329376380866381358124409588547584))
(assert (x590 x1675))
(assert (= (and x1371 (not x1079)) x1256))
(assert (= x1730 (and (not x578) x1384)))
(assert (= (and x8 x377) x1250))
(assert (= (x2166 96) 0))
(assert (x643 x1627))
(assert (= (and x1512 x1325) x1750))
(assert (x590 x1444))
(assert (= x1978 (and (not x1986) x2075)))
(assert (x590 x971))
(assert (= x1829 (and (not x484) x1900)))
(assert (x590 x2022))
(assert (=> (<= (x943 128) 10000) (= (x53 (x943 128)) (x118 (x943 128)))))
(assert (= x251 (or x1738 x312 x1996 x514 x264 x1807 x123 x2105 x620 x278 x2093 x992 x1553 x2136 x164 x1629 x621 x67 x1204)))
(assert (and (=> (> 26959946667150639794667015087019630673637144422540572481103610249216 0) (= (+ (* (x1110 x200 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) (x1224 x200 26959946667150639794667015087019630673637144422540572481103610249216)) x200)) (x212 x200 26959946667150639794667015087019630673637144422540572481103610249216) (x1681 x200 26959946667150639794667015087019630673637144422540572481103610249216) (x2027 x200 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x609 (x365 320)))
(assert (= x1317 (x818 (x118 x1317))))
(assert (= x1173 (and x946 x354)))
(assert (= (and x1872 (not x613)) x901))
(assert (x856 x216))
(assert (x590 x249))
(assert (x590 x751))
(assert (x34 x2052))
(assert (= 0 (x2015 160)))
(assert (= (x818 (x12 x131 1)) (+ (x818 x131) 1)))
(assert (= (=> (and (= x2122 x418) (= x1924 x513) (= x119 x24) (= x1125 x2135) (= x1582 x257) (= x905 x1349)) x2041) x776))
(assert (= x463 (and (=> x525 x717) (=> (and (not x525) (and (= x1601 (x1110 x1596 2)) (= x674 (x97 (+ 1 x1601))) (= x1775 (> x674 x1711)))) (and (=> (and (not x1775) (and (= x1325 (not (= x2004 x1647))) (<= 0 x2004) (<= x2004 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (not x1325) x1724) (=> (and (= x1069 x1325) x1325) x268))) (=> x1775 x717))))))
(assert (x590 x2082))
(assert (x590 x1739))
(assert (x590 x1043))
(assert (x590 x2097))
(assert (x609 x642))
(assert (= x1289 (and x1987 x778)))
(assert (x590 x2083))
(assert (= x383 (and x283 x455)))
(assert (x1640 x930))
(assert (= (x53 3285302901) (x118 3285302901)))
(assert (x590 x560))
(assert (x609 (x1835 224)))
(assert (x590 x661))
(assert (x609 x1049))
(assert (= (and x1833 x2089) x543))
(assert (= x1994 (and x2000 x900)))
(assert (x696 x1482))
(assert (= x1940 (and (not x904) x423)))
(assert (x609 (x943 224)))
(assert (x590 x266))
(assert (x590 x929))
(assert (= x568 x222))
(assert (= x1261 (or x2014 x1868)))
(assert (= 0 (x395 96)))
(assert (= x639 (and x60 (not x1713))))
(assert (= (and (not x1987) x778) x774))
(assert (x590 x500))
(assert (= (and x1993 x780) x1272))
(assert (= x956 (and x447 x218)))
(assert (= 0 (x1326 160)))
(assert (x590 x1841))
(assert (= (or x233 x1446) x575))
(assert (= (or x987 x209) x1549))
(assert (x590 x1691))
(assert (= (and x1648 x1196) x2167))
(assert (= x1429 (and x114 (not x958))))
(assert (= (or x1402 x1972) x1703))
(assert (x1274 x1855))
(assert (x609 x313))
(assert (x590 x1705))
(assert (=> (>= 10000 (x2131 288)) (= (x118 (x2131 288)) (x53 (x2131 288)))))
(assert (x590 x829))
(assert (= (and x869 x795) x625))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x952 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x952 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x952)) (x212 x952 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x952 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x952 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x590 x1316))
(assert (= x14 (=> (and (<= x1647 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x1971 32) x1962) (= (x1110 x930 2) x1668) (= (x1535 1 x930) x1552) (>= x1647 0) (= (= (ite x1962 1 0) x1552) x644) (= x1971 (ite (> x1552 0) x1668 (x1535 127 x1668)))) (and (=> (and (and (= (x1535 1 x930) x1440) (= (= x1440 0) x540)) (not x644)) (and (=> x540 x615) (=> (and (not x540) (= (< 0 x1971) x699)) (and (=> x699 x458) (=> (not x699) x399))))) (=> x644 x717)))))
(assert (x590 x1060))
(assert (x590 x1392))
(assert (x856 x480))
(assert (= (x818 (x53 100000000000000000)) 100000000000000000))
(assert (= x702 x2062))
(assert (= (=> (and (= x75 x1504) (= 1 x1414) (= x1780 x1596) (= x1819 x1758) (= x1068 x1628) (= x277 0)) x374) x1695))
(assert (= 0 (x882 356)))
(assert (= x1405 (and x1065 (not x1248))))
(assert (x609 (x1266 288)))
(assert (= x159 (and (not x1684) x1867)))
(assert (x590 x1846))
(assert (= x806 (and x1891 x250)))
(assert (= x1204 (and x1158 x2150)))
(assert (= (and x1135 x819) x1799))
(assert (x1895 x68))
(assert (= (and (not x1035) x1722) x215))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x66 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x66 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x66)) (x212 x66 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x66 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x66 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x671 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x671 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x671)) (x212 x671 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x671 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x671 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1640 x443))
(assert (x643 x1002))
(assert (= x2034 (and x838 x153)))
(assert (x590 x707))
(assert (x590 x2078))
(assert (= x122 (=> (and (= x1471 x1435) (= x1831 x579) (= x2149 x1945) (= x532 x594) (= x1086 x1392)) x1466)))
(assert (= (x818 (x118 (x365 320))) (x365 320)))
(assert (x590 x1197))
(assert (= x398 (and x114 x958)))
(assert (=> (>= 10000 (x365 288)) (= (x53 (x365 288)) (x118 (x365 288)))))
(assert (=> (>= 10000 (x1253 288)) (= (x53 (x1253 288)) (x118 (x1253 288)))))
(assert (x590 x498))
(assert (= (and x1872 x613) x478))
(assert (x34 x416))
(assert (x590 x1528))
(assert (x590 x1132))
(assert (x590 x1310))
(assert (x590 x296))
(assert (x590 x1974))
(assert (x590 x488))
(assert (and (=> (> 26959946667150639794667015087019630673637144422540572481103610249216 0) (= (+ (* (x1110 x1721 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) (x1224 x1721 26959946667150639794667015087019630673637144422540572481103610249216)) x1721)) (x212 x1721 26959946667150639794667015087019630673637144422540572481103610249216) (x1681 x1721 26959946667150639794667015087019630673637144422540572481103610249216) (x2027 x1721 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x34 x1423))
(assert (= (x565 288) 0))
(assert (x590 x2070))
(assert (= x2017 (and (not x838) x153)))
(assert (x590 x335))
(assert (= (and (not x503) x159) x1138))
(assert (x1274 x1206))
(assert (x34 x1206))
(assert (x590 x1345))
(assert (x590 x1933))
(assert (x590 x394))
(assert (x590 x628))
(assert (x643 x1157))
(assert (x590 x1560))
(assert (= 0 (x866 (+ (x97 (+ x1763 100)) 96))))
(assert (x590 x624))
(assert (= x675 (and (not x511) x2019)))
(assert (x590 x1077))
(assert (= x1098 (=> (and (= x1684 (= x984 x1464)) (= (x510 x1439) x1464) (> 1461501637330902918203684832716283019655932542976 x1464) (>= 1461501637330902918203684832716283019655932542975 x1464) (>= x1464 0)) (and (=> (and x1684 (and (<= x1482 4294967295) (> 4294967296 x1482) (= (= (x840 x1482 224) 106459005500898838667931598610041423549574964228674563513410788872267948359680) x310) (>= x1482 0))) (and (=> (and (and (= x1929 (x710 160)) (= x1447 (x550 128)) (= x19 (> x1447 0)) (= (x1535 26959946667150639794667015087019630673637144422540572481103610249215 x1929) x649) (= (x97 (+ x649 106459005500898838667931598610041423549574964228674563513410788872267948359680)) x1359)) x310) (and (=> (and (not x19) (= 0 x870)) x1927) (=> (and x19 (and (= x1006 (x1477 160)) (= (< 32 x1447) x1608))) (and (=> (and (not x1608) (= 32 x870)) x1927) (=> (and (and (= (< 64 x1447) x139) (= (x1477 192) x105)) x1608) (and (=> (and (and (= (x1477 224) x517) (= (> x1447 96) x1251)) x139) (and (=> x1251 x692) (=> (and (= 96 x870) (not x1251)) x1927))) (=> (and (= 64 x870) (not x139)) x1927))))))) (=> (and (not x310) (and (= x371 (= (x840 x1482 224) 100641684887429822015232653770480429695213136867978658013931169090238473568256)) (>= x1482 0) (< x1482 4294967296) (<= x1482 4294967295))) (and (=> (and (and (= x1939 (> x2139 0)) (= x502 (x97 (+ 100641684887429822015232653770480429695213136867978658013931169090238473568256 x1502))) (= x200 (x2015 160)) (= (x300 128) x2139) (= x1502 (x1535 26959946667150639794667015087019630673637144422540572481103610249215 x200))) x371) (and (=> (and (= x751 0) (not x1939)) x1562) (=> (and (and (= x963 (x2043 160)) (= x1632 (> x2139 32))) x1939) (and (=> (and (= x751 32) (not x1632)) x1562) (=> (and x1632 (and (= (> x2139 64) x172) (= x1378 (x2043 192)))) (and (=> (and (and (= (< 96 x2139) x1683) (= (x2043 224) x871)) x172) (and (=> (and (= 96 x751) (not x1683)) x1562) (=> x1683 x1980))) (=> (and (not x172) (= 64 x751)) x1562))))))) (=> (and (not x371) (and (< x1482 4294967296) (>= 4294967295 x1482) (= x879 (= (x840 x1482 224) 56965738197333823925951794324075424010313516842063129668313081903848242544640)) (>= x1482 0))) (and (=> (and (not x879) (and (<= x1482 4294967295) (> 4294967296 x1482) (>= x1482 0) (= x1713 (= (x840 x1482 224) 50455196340412629536459377552246818957342304218644716315923982585962625499136)))) (and (=> (and (not x1713) (and (= x1596 x1616) (= x253 x1819) (= x1068 x657) (= 1 x1669) (= x733 x75))) x1756) (=> (and (and (= x1721 (x635 160)) (= (x473 (- x1484 32)) x1588) (= x1455 (x1535 26959946667150639794667015087019630673637144422540572481103610249215 x1721)) (= (x97 (+ x1455 50455196340412629536459377552246818957342304218644716315923982585962625499136)) x1172) (<= 0 x1146) (<= x1146 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1055 (< 0 x1848)) (= (x2166 96) x64) (= (x1535 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1394) x1476) (= (x1038 128) x1848) (= (x97 (+ x1476 260)) x1763) (= x1394 (x97 (+ x64 31))) (= x1484 (x473 (- x1763 128)))) x1713) (and (=> (and (not x1055) (= 0 x1507)) x187) (=> (and x1055 (and (= x1763 x1592) (= (> x1848 32) x1107) (= x1310 (x1882 160)))) (and (=> (and x1107 (and (= x1007 (> x1848 64)) (= (x97 (+ x1763 32)) x196) (= (x1882 192) x92))) (and (=> (and (not x1007) (= x1507 64)) x187) (=> (and (and (= (< 96 x1848) x527) (= (x97 (+ x1763 64)) x1765) (= (x1882 224) x135)) x1007) (and (=> (and (= x1507 96) (not x527)) x187) (=> x527 x1963))))) (=> (and (not x1107) (= 32 x1507)) x187))))))) (=> (and x879 (and (= x706 (x803 160)) (= x703 (> x1485 0)) (= (x1535 26959946667150639794667015087019630673637144422540572481103610249215 x706) x1142) (= x1345 (x97 (+ x1142 56965738197333823925951794324075424010313516842063129668313081903848242544640))) (= x1485 (x1985 128)))) (and (=> (and (= x1490 0) (not x703)) x2072) (=> (and x703 (and (= x1288 (< 32 x1485)) (= x167 (x425 160)))) (and (=> (and x1288 (and (= x539 (x425 192)) (= x511 (> x1485 64)))) (and (=> (and (not x511) (= 64 x1490)) x2072) (=> (and x511 (and (= x295 (x425 224)) (= (< 96 x1485) x330))) (and (=> x330 x2157) (=> (and (not x330) (= x1490 96)) x2072))))) (=> (and (not x1288) (= 32 x1490)) x2072))))))))))) (=> (and (and (= x1291 (ite (< 0 x985) x1410 (x1535 127 x1410))) (> 1461501637330902918203684832716283019655932542976 x966) (= (x510 x1439) x966) (not (= x985 x1925)) (= (x1535 1 x1627) x985) (<= 0 x966) (= x1925 (ite x1748 1 0)) (= (x988 x2126) x1627) (>= 1461501637330902918203684832716283019655932542975 x966) (= x1410 (x1110 x1627 2)) (= x503 (= x468 0)) (= x1748 (< x1291 32)) (= x2126 (x12 x1208 1)) (= (x1535 1 x1627) x468)) (not x1684)) (and (=> (and (not x503) (= x600 (< 0 x1291))) (and (=> x600 x334) (=> (not x600) x222))) (=> x503 x568)))))))
(assert (= (and x1676 (not x1199)) x1597))
(assert (= 4294967296 (x818 (x53 4294967296))))
(assert (= (x818 (x118 x1049)) x1049))
(assert (= x2156 (and x596 x103)))
(assert (= x2019 (and x1288 x1475)))
(assert (x590 x1002))
(assert (x856 x337))
(assert (x590 x99))
(assert (x1274 x930))
(assert (x590 x687))
(assert (= x35 (or x1750 x1766)))
(assert (x590 x603))
(assert (x643 x2038))
(assert (x590 x1026))
(assert (x590 x1323))
(assert (= x1249 (and x1199 x1676)))
(assert (x590 x336))
(assert (= x479 (and x1804 (not x1632))))
(assert (x590 x1206))
(assert (= (and x1875 x2044) x1872))
(assert (= 0 (x523 324)))
(assert (x590 x1441))
(assert (= x280 (and x804 x753)))
(assert (x590 x2161))
(assert (= x1030 (or x1639 x1319)))
(assert (= (or x1836 x1008) x106))
(assert (x1718 x443))
(assert (x590 x1343))
(assert (= (x365 256) (x818 (x118 (x365 256)))))
(assert (x590 x1460))
(assert (= (x818 (x53 115792089237316195423570985008687907853269984665640564039457484007913129639935)) 115792089237316195423570985008687907853269984665640564039457484007913129639935))
(assert (= x1600 (and x1472 (not x970))))
(assert (x590 x591))
(assert (= x237 (x118 (x818 x237))))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x1517 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x1517 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1517)) (x212 x1517 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x1517 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x1517 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1640 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x609 (x2131 192)))
(assert (= (=> (and (= x1108 x1819) (= x589 1) (= x1396 x500) (= x1029 x409) (= x75 x1197)) x1468) x1859))
(assert (= (x118 3948783980) (x53 3948783980)))
(assert (= (x818 (x12 x1192 1)) (+ 1 (x818 x1192))))
(assert (= x714 (and x600 x1138)))
(assert (= x1166 (or x1452 x1023)))
(assert (= x268 (and (=> (and x1069 (and (= x959 (= x1434 (ite x1222 1 0))) (= (ite (< 0 x1434) x1084 (x1535 127 x1084)) x802) (= x1434 (x1535 1 x17)) (= (> 32 x802) x1222) (= x1084 (x1110 x17 2)))) (and (=> (and (not x959) (and (= x1619 (< 0 x1545)) (= x343 (x97 (+ x802 31))) (= x1097 (x1110 x343 32)) (= x366 (x12 x1192 x1097)) (= x1192 (x898 (x53 5) 0)))) (and (=> (and (and (= x786 x1192) (= 0 x930)) (not x1619)) x1782) (=> (and (= (> x1545 31) x101) x1619) (and (=> (and (and (= (x97 (+ x1545 100)) x1321) (= x975 (x97 (+ x1114 1))) (= (< 100 x1321) x911) (= (x97 (+ x1545 x1545)) x1114)) x101) (and (=> (and (not x911) (= x2100 x1192)) x955) (=> x911 x1618))) (=> (and (and (= (>= 255 x1841) x2050) (= (x1104 100) x1554) (= (x194 x1841 x1935) x281) (= (<= x1841 255) x2106) (= x786 x1192) (= x1935 (x1535 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1554)) (= (x97 (+ x1841 x1935)) x1934) (= (ite x2050 x1934 x281) x603) (= x1841 (x97 (+ x1545 x1545))) (= (x97 (+ x1841 x1935)) x1626) (= x930 (ite x2106 x1626 x603))) (not x101)) x1782))))) (=> x959 x717))) (=> (not x1069) x1695))))
(assert (= x213 (and x1829 x1014)))
(assert (= 0 (x359 420)))
(assert (x1718 x1664))
(assert (x590 x269))
(assert (= (or x1053 (and x2112 (not x1031))) x1176))
(assert (x590 x195))
(assert (x609 x1523))
(assert (=> (<= (x1253 128) 10000) (= (x53 (x1253 128)) (x118 (x1253 128)))))
(assert (= (and x327 x111) x1837))
(assert (= (and x1822 (not x245)) x903))
(assert (and (x1505 x1482 26959946667150639794667015087019630673637144422540572481103610249216) (x319 x1482 26959946667150639794667015087019630673637144422540572481103610249216) (and (= (x446 x1482 (- 115792089210356248756420345214020892766250353992003419616917011526809519390720)) (* (- 115792089210356248756420345214020892766250353992003419616917011526809519390720) x1482)) (= (- (* (- 115792089210356248756420345214020892766250353992003419616917011526809519390720) x1482) (- 13407807926820848549258032766824248897686199514843795235058590292862607070448175237982108678046597324626539887026659119732347259916498594267145363699793920)) (x446 (- x1482 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089210356248756420345214020892766250353992003419616917011526809519390720))) (= (x446 (- x1482 115792089237316195423570985008687907853269984665640564039457584007913129639936) 26959946667150639794667015087019630673637144422540572481103610249216) (- (* 26959946667150639794667015087019630673637144422540572481103610249216 x1482) 3121748550315992231381597229793166305748598142664971150859156959625371738819765620120306103063491971159826931121406622895447975679288285306290176))) (= (x446 x1482 26959946667150639794667015087019630673637144422540572481103610249216) (* 26959946667150639794667015087019630673637144422540572481103610249216 x1482)) (x1825 x1482 26959946667150639794667015087019630673637144422540572481103610249216) (x1215 x1482 26959946667150639794667015087019630673637144422540572481103610249216) (x677 x1482 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= (and x968 x1742) x1589))
(assert (= x31 (and x102 x1557)))
(assert (x590 x468))
(assert (= x621 (and x2133 (not x39))))
(assert (= (x365 160) (x818 (x118 (x365 160)))))
(assert (x590 x1981))
(assert (x590 x962))
(assert (x34 x1400))
(assert (x590 x533))
(assert (x856 x247))
(assert (x590 x1545))
(assert (x590 x817))
(assert (x590 x842))
(assert (x1640 x17))
(assert (=> (<= x2101 10000) (= (x118 x2101) (x53 x2101))))
(assert (= x370 (and x1069 x35)))
(assert (x609 (x1835 192)))
(assert (x156 x1517))
(assert (x590 x2174))
(assert (= (x818 (x12 x611 1)) (+ (x818 x611) 1)))
(assert (x590 x2164))
(assert (x590 x1103))
(assert (x590 x1627))
(assert (x590 x2064))
(assert (x590 x1425))
(assert (= (x53 656247078515407326148355443760548300161286948278503429861414951787075469312) (x118 656247078515407326148355443760548300161286948278503429861414951787075469312)))
(assert (= x1163 (or x1179 x190)))
(assert (x590 x678))
(assert (x590 x1638))
(assert (x590 x669))
(assert (x590 x1258))
(assert (x590 x1056))
(assert (x590 x1238))
(assert (= (and x982 (not x1259)) x1113))
(assert (= 0 (x882 452)))
(assert (x590 x1975))
(assert (= x2044 (or x1556 x843)))
(assert (= (=> (and (= x1150 x1002) (= x237 x897)) x902) x1465))
(assert (x590 x1394))
(assert (and (=> (> 2 0) (= (+ (* (x1110 x1206 2) 2) (x1224 x1206 2)) x1206)) (x212 x1206 2) (x1681 x1206 2) (x2027 x1206 2)))
(assert (x590 x1693))
(assert (x590 x823))
(assert (= 1461501637330902918203684832716283019655932542976 (x818 (x53 1461501637330902918203684832716283019655932542976))))
(assert (= (=> (and (<= 0 x1933) (= x293 (= (ite x142 1 0) x2031)) (= x1824 (x1110 x1855 2)) (<= x1933 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1673 (ite (< 0 x2031) x1824 (x1535 127 x1824))) (= (x1535 1 x1855) x2031) (= x142 (< x1673 32))) (and (=> (and (not x293) (and (= x1035 (= 0 x998)) (= (x1535 1 x1855) x998))) (and (=> x1035 x2062) (=> (and (not x1035) (= (< 0 x1673) x145)) (and (=> x145 x1205) (=> (not x145) x702))))) (=> (and (and (= x1412 x1596) (= x1696 x75) (= 0 x2029) (= x1267 x1068) (= x1819 x1897)) x293) x1281))) x1966))
(assert (x34 x1554))
(assert (x643 x500))
(assert (= (x1266 192) (x818 (x118 (x1266 192)))))
(assert (x34 x1546))
(assert (x34 x707))
(assert (x590 x984))
(assert (= x1260 (and x127 x1177)))
(assert (= x2041 (=> (and (= x787 (= 0 x2135)) (or (and (not x787) (and (= x24 x1800) (= x1582 x1916) (= x275 x418) (= x1733 x2135) (= x3 x1924) (= x1349 x1473))) (and x787 (and (= x1916 x1582) (= x99 (x97 (+ x2083 x1614))) (= (x556 (x118 x984)) x238) (= x1924 x3) (= x2135 x1733) (< (+ x1614 x2083) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1800 x24) (= x1349 x1473) (= x418 x275) (= (ite (= 0 x2135) x1078 0) x2083) (= x1658 (- x238 x2083)) (= x1614 (x2039 (x118 x984))))))) x1242)))
(assert (x590 x2046))
(assert (= x1593 (and (not x356) x1304)))
(assert (= x255 (=> (and (or x1509 (not x1509)) (= (= x1857 0) x1509)) x1366)))
(assert (=> (>= 10000 (x943 288)) (= (x118 (x943 288)) (x53 (x943 288)))))
(assert (x590 x304))
(assert (=> (>= 10000 (x1266 320)) (= (x53 (x1266 320)) (x118 (x1266 320)))))
(assert (x590 x928))
(assert (x1895 x999))
(assert (= (and (not x172) x288) x1101))
(assert (x590 x990))
(assert (= (and (not x699) x876) x2130))
(assert (and (=> (> 128 0) (= (+ (* (x1110 x216 128) 128) (x1224 x216 128)) x216)) (x212 x216 128) (x1681 x216 128) (x2027 x216 128)))
(assert (x590 x1938))
(assert (x590 x1221))
(assert (x590 x1924))
(assert (= x1136 (or x1623 x541 x1273)))
(assert (= (and x145 x215) x734))
(assert (= (x565 320) 0))
(assert (= (=> (= (not (> x1152 32)) x30) (and x529 x30)) x944))
(assert (x590 x1518))
(assert (= (and (not x1815) x1356) x1817))
(assert (x590 x1642))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x491 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x491 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x491)) (x212 x491 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x491 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x491 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x1266 256) (x818 (x118 (x1266 256)))))
(assert (= x620 (and x976 (not x1073))))
(assert (x590 x1396))
(assert (x590 x1628))
(assert (= (x585 224) 0))
(assert (x590 x265))
(assert (=> (<= x984 10000) (= (x53 x984) (x118 x984))))
(assert (x590 x244))
(assert (x590 x1717))
(assert (= (=> (and (= (x289 128) x1624) (= (not (< 32 x178)) x791)) (and (=> (= 32 x71) x973) x791)) x1896))
(assert (x590 x1811))
(assert (x1640 x411))
(assert (= x1980 (=> (and (= x1111 (x2043 256)) (= (not (> x2139 128)) x1785)) (and x1785 (=> (= x751 128) x1562)))))
(assert (x609 (x1625 288)))
(assert (= x352 (or x1405 x220)))
(assert (x590 x846))
(assert (x590 x443))
(assert (= (and x1066 (not x586)) x1225))
(assert (= (x943 320) (x818 (x118 (x943 320)))))
(assert (= x460 (and (not x1559) x445)))
(assert (x590 x303))
(assert (x590 x87))
(assert (x590 x1417))
(assert (x590 x1952))
(assert (= x2028 (and (not x1646) x369)))
(assert (= (=> (and (= (x1477 256) x1169) (= x13 (not (< 128 x1447)))) (and (=> (= 128 x870) x1927) x13)) x692))
(assert (x609 (x2131 128)))
(assert (= (x818 (x118 (x1253 160))) (x1253 160)))
(assert (x590 x1850))
(assert (= x2104 (or x839 x2005)))
(assert (x590 x605))
(assert (= (and (not x285) x1710) x759))
(assert (x590 x1624))
(assert (x590 x2148))
(assert (x590 x1351))
(assert (x590 x397))
(assert (= (and x800 x1018) x85))
(assert (= (or x124 x903) x653))
(assert (x590 x1513))
(assert (x590 x2013))
(assert (x609 (x1253 128)))
(assert (= (and x686 x1263) x1500))
(assert (= (and x73 x558) x819))
(assert (= (x1835 288) (x818 (x118 (x1835 288)))))
(assert (= (and x104 (not x227)) x1214))
(assert (x590 x1139))
(assert (x643 x155))
(assert (= (and x1636 x1506) x29))
(assert (= (and (not x910) x213) x1720))
(assert (x609 x158))
(assert (= x1993 (or x954 x1257 x1654)))
(assert (= (x118 (x818 x611)) x611))
(assert (x590 x742))
(assert (x590 x1100))
(assert (x1640 x1206))
(assert (x590 x548))
(assert (= x1756 (=> (and (= x1616 x579) (= x1669 x532) (= x657 x2149) (= x733 x1392) (= x1435 x253)) x122)))
(assert (x1640 x1002))
(assert (x590 x559))
(assert (x590 x1755))
(assert (x643 x17))
(assert (x590 x185))
(assert (x643 x1206))
(assert (x590 x930))
(assert (x590 x739))
(assert (x590 x483))
(assert (=> (>= 10000 (x1835 288)) (= (x53 (x1835 288)) (x118 (x1835 288)))))
(assert (x590 x238))
(assert (= x1277 (and x403 x1496)))
(assert (= (and x1856 (not x189)) x169))
(assert (= 1680813743 (x818 (x53 1680813743))))
(assert (= (x2131 192) (x818 (x118 (x2131 192)))))
(assert (x590 x969))
(assert (x590 x2142))
(assert (x590 x93))
(assert (= (x118 26959946667150639794667015087019630673637144422540572481103610249215) (x53 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= (=> (and (= x1855 x1876) (= x799 x1631)) x404) x676))
(assert (x590 x379))
(assert (= (x803 160) 0))
(assert (x590 x48))
(assert (= (=> (and (or (and x1567 (and (< (+ x577 x563) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x97 (+ x577 x563)) x2096) (= x1441 x666) (= x258 (- x350 x577)) (= x577 (ite (= 0 x1441) x1078 0)) (= (x886 (x118 x966)) x350) (= x563 (x693 (x118 x984))) (= x544 x844))) (and (not x1567) (and (= x544 x844) (= x666 x1441)))) (= x1567 (= 0 x1441))) x760) x1751))
(assert (= (x818 (x118 (x1950 160))) (x1950 160)))
(assert (= (and x1165 x1726) x1273))
(assert (= (and x1834 x1211) x2055))
(assert (and (=> (> 128 0) (= (+ (* (x1110 x337 128) 128) (x1224 x337 128)) x337)) (x212 x337 128) (x1681 x337 128) (x2027 x337 128)))
(assert (and (=> (> 32 0) (= (+ (* (x1110 x1394 32) 32) (x1224 x1394 32)) x1394)) (x212 x1394 32) (x1681 x1394 32) (x2027 x1394 32)))
(assert (x590 x1714))
(assert (= x1566 (or x1597 x1249)))
(assert (x590 x2149))
(assert (=> (>= 10000 (x1625 224)) (= (x118 (x1625 224)) (x53 (x1625 224)))))
(assert (= (x1348 288) 0))
(assert (= (x818 (x118 (x1835 320))) (x1835 320)))
(assert (= (x818 (x118 (x365 128))) (x365 128)))
(assert (x590 x1569))
(assert (x34 x1410))
(assert (and (=> (> 128 0) (= (+ (* (x1110 x1915 128) 128) (x1224 x1915 128)) x1915)) (x212 x1915 128) (x1681 x1915 128) (x2027 x1915 128)))
(assert (x590 x1711))
(assert (= (=> (and (= x1267 x1068) (= x1596 x1412) (= x1897 x1819) (= x2029 0) (= x75 x1696)) x1281) x1982))
(assert (= (or x38 x650 x720 x675 x873) x528))
(assert (= x264 (and x96 x1854)))
(assert (x590 x577))
(assert (x590 x178))
(assert (= (or x2168 x1429) x423))
(assert (= x1056 (x818 (x118 x1056))))
(assert (x590 x2025))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x662 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x662 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x662)) (x212 x662 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x662 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x662 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (or x1542 x864 x1499) x1853))
(assert (=> (>= 10000 (x1835 160)) (= (x118 (x1835 160)) (x53 (x1835 160)))))
(assert (x643 x1855))
(assert (= (and (not x1891) x250) x832))
(assert (x590 x1133))
(assert (= x1570 (and (not x1967) x307)))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x1400 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x1400 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1400)) (x212 x1400 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x1400 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x1400 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x590 x49))
(assert (x590 x505))
(assert (= (x2015 224) 0))
(assert (x590 x2137))
(assert (x590 x1647))
(assert (x590 x2101))
(assert (= (x943 224) (x818 (x118 (x943 224)))))
(assert (=> (<= x1056 10000) (= (x118 x1056) (x53 x1056))))
(assert (= x320 (=> (and (= x193 164) (= (x1255 (x118 x984)) x1992) (= x1382 (x1255 (x118 x984))) (= (x473 (- x1954 164)) x1973) (= (x97 (+ x1447 164)) x1954) (= x993 (and (>= x1382 x1078) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1992 x1078))))) (and (=> (and (and (= x1733 0) (= 0 x275) (= x1916 x1068) (= x1596 x3) (= x1800 x75) (= x1473 x1819)) (not x993)) x1242) (=> (and x993 (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1078 x1949)) (< 0 x488) (= (x1727 (x118 x984)) x1949) (= 4 x781) (= (x1255 (x118 x984)) x978) (= 106459005500898838667931598610041423549574964228674563513410788872267948359680 x1067) (= (x1216 (x118 x984)) x488) (= x1973 x781) (= (= 0 x1078) x813) (= (- x978 x1078) x1388) (= (x97 (+ x1078 x1949)) x1311))) (and (=> (and x813 (and (not (< x1548 3081457077)) (not (> 3948783980 x1548)) (= (x289 96) x178) (<= 0 x1146) (<= x1146 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 3948783980 x1548) (not (> 3733007566 x1548)) (not (> 4 x781)) (<= x2140 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x2140) (= (< 0 x178) x1891) (<= 0 x2140) (not (< x1548 2112976665)))) (and (=> (and (= 0 x71) (not x1891)) x973) (=> x1891 x1896))) (=> (and (not x813) (and (= 0 x1125) (= x1596 x513) (= x1068 x257) (= x75 x119) (= x1819 x905))) x776)))))))
(assert (= (x818 (x12 x1439 1)) (+ (x818 x1439) 1)))
(assert (x590 x51))
(assert (x590 x257))
(assert (= (and x797 (not x1209)) x708))
(assert (x609 x1252))
(assert (= x1065 true))
(assert (= (+ x1694 (x818 x768)) (x818 (x12 x768 x1694))))
(assert (= (x53 2923951457) (x118 2923951457)))
(assert (x609 (x1950 192)))
(assert (= x438 (and x1591 x1052)))
(assert (x590 x899))
(assert (x590 x1780))
(assert (x590 x668))
(assert (= (x359 292) 0))
(assert (x590 x1878))
(assert (x590 x1084))
(assert (= 0 (x2015 192)))
(assert (= (and (=> (and (not x907) (and (= (x97 (+ x764 1)) x634) (= x2150 (< x1117 x634)) (= (x1110 x500 2) x764))) (and (=> (and (not x2150) (and (>= x2004 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2004) (= x1009 (not (= x2004 x1933))))) (and (=> (not x1009) x744) (=> (and x1009 (= x1009 x1342)) x84))) (=> (and x2150 (and (= x1596 x1412) (= x2029 0) (= x75 x1696) (= x1068 x1267) (= x1819 x1897))) x1281))) (=> (and x907 (and (= x1267 x1068) (= x2029 0) (= x1897 x1819) (= x1696 x75) (= x1412 x1596))) x1281)) x328))
(assert (x609 (x1253 192)))
(assert (x590 x1428))
(assert (= 0 (x94 224)))
(assert (x590 x1548))
(assert (= (and x1888 (not x813)) x1346))
(assert (= (or x1666 x170) x1457))
(assert (x590 x509))
(assert (x590 x1925))
(assert (x590 x64))
(assert (x34 x930))
(assert (x590 x15))
(assert (= x648 (and x2075 x1986)))
(assert (= (x818 (x118 (x1950 224))) (x1950 224)))
(assert (x590 x291))
(assert (x34 x480))
(assert (= (and x1770 (not x1107)) x2020))
(assert (= (x818 (x12 x1213 x1931)) (+ (x818 x1213) x1931)))
(assert (x590 x1949))
(assert (= (=> (and (= (= 0 x275) x1987) (or x1987 (not x1987))) x1526) x1242))
(assert (x609 (x1625 256)))
(assert (x590 x161))
(assert (=> (>= 10000 (x1835 256)) (= (x118 (x1835 256)) (x53 (x1835 256)))))
(assert (= x1481 (x818 (x118 x1481))))
(assert (x590 x740))
(assert (x34 x337))
(assert (= x2151 (and x936 (not x627))))
(assert (= x1387 x542))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x1460 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x1460 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1460)) (x212 x1460 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x1460 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x1460 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x590 x2067))
(assert (= (=> (and (= (not (> x1604 32)) x1774) (= x701 (x633 x121))) (and x1774 x746)) x1432))
(assert (x609 (x1625 160)))
(assert (= (and x318 x1547) x1900))
(assert (and (=> (> 256 0) (= (+ (* (x1110 x1554 256) 256) (x1224 x1554 256)) x1554)) (x212 x1554 256) (x1681 x1554 256) (x2027 x1554 256)))
(assert (x590 x893))
(assert (x590 x317))
(assert (= (and x604 x941) x1164))
(assert (x590 x1445))
(assert (= (x523 452) 0))
(assert (= x1023 (and x1603 (not x1922))))
(assert (and (= (- x1627 (x1535 1 x1627)) (* (x1110 x1627 2) 2)) (x1354 x1627 2) (x1131 x1627 2) (=> (and (< 0 2) (> x1627 0)) (and (> (* 2 (x1110 x1627 2)) (- x1627 2)) (>= x1627 (* (x1110 x1627 2) 2)))) (x1791 x1627 2) (x698 x1627 2)))
(assert (= x1543 (and x1561 x917)))
(assert (= x763 (and x917 (not x1561))))
(assert (= (or x280 x595) x52))
(assert (= (=> (and (= x1780 x1596) (= x75 x1504) (= x1819 x1758) (= x499 x277) (= 0 x1414) (= x1628 x1068)) x374) x717))
(assert (= x2065 (and (not x428) x1978)))
(assert (= (and x1141 x834) x839))
(assert (x590 x562))
(assert (= x501 (=> (= x1983 x562) x273)))
(assert (= (and (not x217) x1261) x1018))
(assert (x590 x1233))
(assert (and (=> (> 128 0) (= (+ (* (x1110 x2025 128) 128) (x1224 x2025 128)) x2025)) (x212 x2025 128) (x1681 x2025 128) (x2027 x2025 128)))
(assert (x590 x381))
(assert (=> (>= 10000 (x1950 160)) (= (x118 (x1950 160)) (x53 (x1950 160)))))
(assert (= (x818 (x12 x799 1)) (+ 1 (x818 x799))))
(assert (x1640 x1410))
(assert (= (=> (and (= (> x1507 x1848) x725) (or (not x725) (and x725 (= (x97 (+ x1848 x1763)) x2053)))) x2037) x187))
(assert (=> (<= (x1835 128) 10000) (= (x118 (x1835 128)) (x53 (x1835 128)))))
(assert (x590 x1728))
(assert (= (x53 1039635593) (x118 1039635593)))
(assert (x590 x697))
(assert (= x240 (and (not x19) x972)))
(assert (x590 x1692))
(assert (= (or x831 x569) x1085))
(assert (= x982 (and x910 x213)))
(assert (= (+ 3 (x818 x1439)) (x818 (x12 x1439 3))))
(assert (x590 x1089))
(assert (x609 (x1266 192)))
(assert (x590 x863))
(assert (x856 x1668))
(assert (= (x818 (x118 (x2131 128))) (x2131 128)))
(assert (= x569 (and x256 x2060)))
(assert (x590 x685))
(assert (= (x818 (x118 x2073)) x2073))
(assert (= (+ x2120 (x818 x1550)) (x818 (x12 x1550 x2120))))
(assert (x1274 x17))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x1546 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x1546 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1546)) (x212 x1546 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x1546 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x1546 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x1326 224) 0))
(assert (= (or x1153 x2153 x210) x1822))
(assert (x590 x680))
(assert (x590 x1910))
(assert (= (x818 (x118 x885)) x885))
(assert (x590 x1517))
(assert (x590 x66))
(assert (= (and x644 x653) x391))
(assert (x590 x2004))
(assert (x590 x2128))
(assert (= (=> (and (= (x97 (+ 96 x1763)) x1376) (= (not (> x1848 128)) x301) (= (x1882 256) x1649)) (and x301 (=> (= 128 x1507) x187))) x1963))
(assert (= x366 (x118 (x818 x366))))
(assert (x590 x2146))
(assert (x590 x226))
(assert (x590 x671))
(assert (= x2008 (=> (= (> x1596 0) x39) (and (=> (and (and (= 0 x2029) (= x1267 x1068) (= x1696 x75) (= x1412 x1596) (= x1897 x1819)) (not x39)) x1281) (=> (and (and (= x2142 (x375 x754)) (= (or (not x432) x1860) x1990) (= x1860 (or x1431 (not x1268))) (= (not (= x1463 x1236)) x1331) (= x409 (x97 (+ x788 x270))) (= (x898 (x53 1) 0) x406) (= 1 x952) (= x1463 (x925 x249)) (= x432 (and x1805 x1819)) (= (x473 (- x1596 1)) x500) (= (x12 x406 x1236) x716) (= (x1907 x716) x1981) (= true x1073) (= (x375 x952) x591) (>= 1461501637330902918203684832716283019655932542975 x1981) x1990 (= (not (= x1981 0)) x1268) (= (x473 (- x1596 1)) x1236) (= (x4 x1236) x249) (= (x4 x1236) x1480) (= x376 (x1124 x1981)) (= (ite x1805 x591 x2142) x270) (= (= x376 x1236) x1431) (= (or x1331 x133) x1805) (= (>= x249 x788) x133) (= x754 0) (<= 0 x1981) (= x1309 (ite x1805 x788 x1480))) x39) (and (=> (and (and (= x1596 x1412) (= x1068 x1267) (= x1897 x1819) (= x1696 x75) (= 0 x2029)) (not x1073)) x1281) (=> (and x1073 (and (or (and (not x1141) (and (= x907 (ite x2 x2 (= x500 0))) (= x2 (= 0 x1933)))) (and (= x907 x1141) x1141)) (= (> x1117 x500) x1141))) x328)))))))
(assert (x590 x2108))
(assert (= 0 (x523 420)))
(assert (= (x710 160) 0))
(assert (= (x818 (x118 x1974)) x1974))
(assert (x590 x286))
(assert (= x785 (=> (and (= (not (< 164 x1793)) x1883) (= x430 (x12 x113 1))) (and x1883 (=> (= x897 x430) x1465)))))
(assert (= 656247078515407326148355443760548300161286948278503429861414951787075469312 (x818 (x53 656247078515407326148355443760548300161286948278503429861414951787075469312))))
(assert (= x1257 (and x575 x1567)))
(assert (= (x818 (x118 (x2131 224))) (x2131 224)))
(assert (x590 x427))
(assert (x590 x456))
(assert (x609 x966))
(assert (x590 x1220))
(assert (= (and x1158 (not x2150)) x380))
(assert (= (x1266 128) (x818 (x118 (x1266 128)))))
(assert (x609 (x365 192)))
(assert (x590 x749))
(assert (x590 x587))
(assert (x590 x723))
(assert (x590 x1958))
(assert (x590 x1440))
(assert (x590 x136))
(assert (= (and x1822 x245) x124))
(assert (x590 x1552))
(assert (= (x818 (x53 288768741)) 288768741))
(assert (= x81 (=> (and (= (x473 (- x1861 128)) x1191) (= x1635 (>= 224 x1191))) (and (=> (and (= (ite (<= x1191 32) (x898 (x118 (x1266 128)) 0) (ite (>= 64 x1191) (x1436 (x118 (x1266 128)) (x118 (x1266 160)) 0) (ite (>= 96 x1191) (x223 (x118 (x1266 128)) (x118 (x1266 160)) (x118 (x1266 192)) 0) (ite (>= 128 x1191) (x1801 (x118 (x1266 128)) (x118 (x1266 160)) (x118 (x1266 192)) (x118 (x1266 224)) 0) (ite (<= x1191 160) (x1379 (x118 (x1266 128)) (x118 (x1266 160)) (x118 (x1266 192)) (x118 (x1266 224)) (x118 (x1266 256)) 0) (ite (<= x1191 192) (x1946 (x118 (x1266 128)) (x118 (x1266 160)) (x118 (x1266 192)) (x118 (x1266 224)) (x118 (x1266 256)) (x118 (x1266 288)) 0) (ite (<= x1191 224) (x1231 (x118 (x1266 128)) (x118 (x1266 160)) (x118 (x1266 192)) (x118 (x1266 224)) (x118 (x1266 256)) (x118 (x1266 288)) (x118 (x1266 320)) 0) (x118 x885)))))))) x146) (= (not x1020) x1189) (= x1020 (= x146 x1004))) x524) x1635))))
(assert (= (and x218 (not x447)) x1542))
(assert (x590 x204))
(assert (x590 x1663))
(assert (x609 x1481))
(assert (x590 x1175))
(assert (x34 32))
(assert (x590 x1434))
(assert (= (=> (and (= (x633 x1011) x1999) (= (not (> x1064 32)) x1034)) (and x1849 x1034)) x1357))
(assert (= (and x171 x1921) x1033))
(assert (= (+ (x818 x1118) x1596) (x818 (x12 x1118 x1596))))
(assert (= (x818 (x118 (x1625 256))) (x1625 256)))
(assert (x590 x912))
(assert (= x1617 (and x1066 x586)))
(assert (= (or x734 x1697) x880))
(assert (= x76 (and x380 x1009)))
(assert (x590 x1312))
(assert (x1529 x628 x68))
(assert (= (x585 160) 0))
(assert (= x1512 (and x33 (not x1775))))
(assert (x590 x1087))
(assert (x34 x1855))
(assert (= (x585 288) 0))
(assert (x590 x1067))
(assert (= (and x1991 x894) x2105))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x2022 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x2022 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2022)) (x212 x2022 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x2022 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x2022 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x805 (and x1900 x484)))
(assert (= x1731 (or x895 x1479)))
(assert (x1529 x999 x697))
(assert (=> (>= 10000 (x1950 224)) (= (x118 (x1950 224)) (x53 (x1950 224)))))
(assert (x590 x435))
(assert (x590 x1099))
(assert (x34 x1513))
(assert (x590 x1463))
(assert (= (and (not x117) x1409) x992))
(assert (x590 x351))
(assert (= (and x1599 (not x330)) x873))
(assert (x590 x1778))
(assert (= x369 (or x331 x472)))
(assert (= (and x503 x159) x98))
(assert (x590 x566))
(assert (x34 x1002))
(assert (= (and (not x907) x2104) x1158))
(assert (x609 (x1950 160)))
(assert (= x1 (and x1683 x1183)))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x754 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x754 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x754)) (x212 x754 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x754 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x754 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x272 (and (not x129) x521)))
(assert (x590 x770))
(assert (x34 x1337))
(assert (= x746 (=> (and (= (x97 (+ 128 x1604)) x1811) (= x1811 x935)) x758)))
(assert (= (x818 (x118 x1523)) x1523))
(assert (= x933 (and x423 x904)))
(assert (= (x53 2867924802) (x118 2867924802)))
(assert (= x1766 (or x1576 x364)))
(assert (= 0 (x866 (+ (x97 (+ x1763 100)) 192))))
(assert (x590 x815))
(assert (x590 x409))
(assert (=> (>= 10000 (x1253 224)) (= (x118 (x1253 224)) (x53 (x1253 224)))))
(assert (x590 x243))
(assert (= x450 (and x1722 x1035)))
(assert (= 0 (x803 192)))
(assert (x590 x1823))
(assert (= (or x623 x417) x1536))
(assert (x590 x275))
(assert (x590 x378))
(assert (x590 x1690))
(assert (= x521 (or x2098 x2074)))
(assert (x590 x855))
(assert (x609 (x1950 128)))
(assert (= 0 (x585 256)))
(assert (x590 x1685))
(assert (= x323 (=> (and (= x661 x1093) (= x1422 x724) (= x456 x896) (= x355 x2161) (= x1821 x1638)) x1042)))
(assert (= (and x1797 (not x361)) x144))
(assert (x609 (x1835 160)))
(assert (x590 x849))
(assert (x590 x966))
(assert (and (=> (> 32 0) (= (+ (* (x1110 x1517 32) 32) (x1224 x1517 32)) x1517)) (x212 x1517 32) (x1681 x1517 32) (x2027 x1517 32)))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x1110 x1335 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1224 x1335 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1335)) (x212 x1335 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1681 x1335 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2027 x1335 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (or x832 x806) x1356))
(assert (= (or x45 (and (not x1342) x812)) x91))
(assert (x590 x1821))
(assert (x590 x583))
(assert (= x665 (=> (and (= x1068 x1847) (= x1238 0)) x221)))
(assert (x34 x1394))
(assert (= x190 (and x2023 x169)))
(assert (= (=> (= x1072 (not (< 32 x1673))) (and x702 x1072)) x1205))
(assert (= 0 (x565 128)))
(assert (x1640 x2025))
(assert (x590 x469))
(assert (= (and x1812 (not x1155)) x1076))
(assert (x590 x298))
(assert (= (and (=> (and (and (= (x1535 1 x17) x126) (= x394 (ite (< 0 x126) x152 (x1535 127 x152))) (= x504 (< x394 32)) (= x361 (= x126 (ite x504 1 0))) (= x152 (x1110 x17 2))) x835) (and (=> x361 x593) (=> (and (and (= x1157 (x97 (+ x394 31))) (= (> x1390 0) x538) (= (x1110 x1157 32) x291) (= (x898 (x53 5) 0) x1413) (= x1884 (x12 x1413 x291))) (not x361)) (and (=> (and (not x538) (and (= 0 x1206) (= x611 x1413))) x1058) (=> (and (= x1456 (> x1390 31)) x538) (and (=> (and x1456 (and (= x1958 (x97 (+ x1390 x1390))) (= x790 (x97 (+ 132 x1390))) (= x111 (> x790 132)) (= (x97 (+ x1958 1)) x580))) (and (=> x111 x230) (=> (and (not x111) (= x1413 x1041)) x267))) (=> (and (not x1456) (and (= x1027 (>= 255 x628)) (= x68 (x1535 115792089237316195423570985008687907853269984665640564039457584007913129639680 x411)) (= (ite x150 x1682 x1395) x1206) (= x1682 (x97 (+ x68 x628))) (= (>= 255 x628) x150) (= x519 (x194 x628 x68)) (= (x97 (+ x1390 x1390)) x628) (= (ite x1027 x1515 x519) x1395) (= (x1686 132) x411) (= x1413 x611) (= (x97 (+ x628 x68)) x1515))) x1058))))))) (=> (not x835) x542)) x198))
(assert (x609 (x943 256)))
(assert (= 0 (x866 (+ (x97 (+ 100 x1763)) 32))))
(assert (x34 256))
(assert (x34 x1668))
(assert (= (and x1544 x1608) x1611))
(assert (= x2115 (and x369 x1646)))
(assert (= x2059 (or x1457 x438)))
(assert (= x683 (or x2156 x316)))
(assert (x590 x619))
(assert (x590 x875))
(assert (x590 x614))
(assert (x590 x1858))
(assert (x590 x2081))
(assert (x590 x163))
(assert (x590 x1015))
(assert (and (= (- x930 (x1535 1 x930)) (* (x1110 x930 2) 2)) (x1354 x930 2) (x1131 x930 2) (=> (and (< 0 2) (> x930 0)) (and (> (* 2 (x1110 x930 2)) (- x930 2)) (>= x930 (* (x1110 x930 2) 2)))) (x1791 x930 2) (x698 x930 2)))
(assert (= (and x1371 x1079) x2014))
(assert (x590 x1495))
(assert (= 0 (x866 (+ 160 (x97 (+ x1763 100))))))
(assert (= (and x1013 (not x512)) x368))
(assert (x590 x2099))
(assert (x590 x1889))
(assert (= 0 (x565 256)))
(assert (x1274 x1627))
(assert (x590 x1334))
(assert (x609 (x1950 288)))
(assert (= (=> (= (< (x818 x786) (x818 x366)) x245) (and (=> (not x245) x14) (=> x245 x913))) x1782))
(assert (x590 x1412))
(assert (x590 x649))
(assert (x590 x480))
(assert (x590 x1957))
(assert (x590 x252))
(assert (= x720 (and (not x1288) x1475)))
(assert (= x972 (and x310 x1633)))
(assert (x590 x355))
(assert (x609 (x1253 320)))
(assert (x590 x9))
(assert (x590 x1062))
(check-sat)
(exit)
