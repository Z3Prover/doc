(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x550 0)) (((x314 (x1171 x550) (x350 x550) (x1139 x550) (x1490 x550) (x1856 x550) (x872 x550) (x371 x550) (x1125 Int)) (x779 (x945 Int)) (x523 (x2138 x550) (x2462 x550) (x6 x550) (x1130 x550) (x493 Int)) (x2298 (x1726 x550) (x2103 x550) (x1000 x550) (x2162 Int)) (x1254 (x719 x550) (x515 x550) (x1147 x550) (x2271 x550) (x1460 x550) (x2290 x550) (x757 Int)) (x1365 (x540 x550) (x108 Int)) (x115 (x795 x550) (x2364 x550) (x2120 Int)) (x1068 (x2229 x550) (x1013 x550) (x2009 x550) (x1164 x550) (x410 x550) (x869 Int)))))
(declare-fun x2259 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x2447 () Bool)
(declare-fun x267 () Int)
(declare-fun x1559 () Bool)
(declare-fun x1396 () Int)
(declare-fun x1612 () Int)
(declare-fun x2473 () Int)
(declare-fun x755 () Bool)
(declare-fun x1497 () Int)
(declare-fun x1322 () Int)
(declare-fun x1841 () Bool)
(declare-fun x92 () Int)
(declare-fun x1963 () Bool)
(declare-fun x838 () Bool)
(declare-fun x2472 () Int)
(declare-fun x917 () Bool)
(declare-fun x2006 () Int)
(declare-fun x498 () Int)
(declare-fun x952 () Int)
(declare-fun x374 () Bool)
(declare-fun x2182 () Int)
(declare-fun x414 () Int)
(declare-fun x914 () x550)
(declare-fun x1399 () Bool)
(declare-fun x1031 () Bool)
(declare-fun x1920 () Bool)
(declare-fun x1439 () x550)
(declare-fun x471 () Int)
(declare-fun x1693 (Int) Int)
(declare-fun x758 () Bool)
(declare-fun x1055 () Int)
(declare-fun x1745 () Int)
(declare-fun x1243 () Bool)
(declare-fun x2145 () x550)
(declare-fun x507 () Int)
(declare-fun x652 () Int)
(declare-fun x1252 () Bool)
(declare-fun x118 () Bool)
(declare-fun x938 () x550)
(declare-fun x852 () Bool)
(declare-fun x377 () Bool)
(declare-fun x1473 () x550)
(declare-fun x590 () Bool)
(declare-fun x903 () Int)
(declare-fun x1740 () Int)
(declare-fun x2420 () Int)
(declare-fun x551 () Bool)
(declare-fun x1898 () x550)
(declare-fun x1569 () Bool)
(declare-fun x120 () x550)
(declare-fun x54 () Int)
(declare-fun x526 () x550)
(declare-fun x2299 () Int)
(declare-fun x1210 () Bool)
(declare-fun x200 () Int)
(declare-fun x2232 () Int)
(declare-fun x2492 () Int)
(declare-fun x309 () Bool)
(declare-fun x2131 () Bool)
(declare-fun x656 () Int)
(declare-fun x2295 () Bool)
(declare-fun x438 () Bool)
(declare-fun x1229 () Bool)
(declare-fun x2003 () Int)
(declare-fun x2307 () Bool)
(declare-fun x1099 () Int)
(declare-fun x2067 () x550)
(declare-fun x1668 () Int)
(declare-fun x625 () Int)
(declare-fun x2346 () Int)
(declare-fun x59 () x550)
(declare-fun x891 () Int)
(declare-fun x1967 () Bool)
(declare-fun x1808 () Int)
(declare-fun x1305 () Int)
(declare-fun x1801 () Int)
(declare-fun x1722 () Int)
(declare-fun x352 () Bool)
(declare-fun x1041 () Int)
(declare-fun x1176 () Int)
(declare-fun x546 () Bool)
(declare-fun x61 () Int)
(declare-fun x1247 (Int) Int)
(declare-fun x1369 () Bool)
(declare-fun x1670 () Int)
(declare-fun x2450 () Int)
(declare-fun x1145 () Int)
(declare-fun x1346 () Int)
(declare-fun x445 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x1754 () Int)
(declare-fun x344 () Int)
(declare-fun x30 () Int)
(declare-fun x2000 () Bool)
(declare-fun x1948 () Bool)
(declare-fun x2168 () Int)
(declare-fun x1387 () Bool)
(declare-fun x598 () x550)
(declare-fun x203 () Bool)
(declare-fun x2359 () Int)
(declare-fun x1594 () x550)
(declare-fun x898 () Int)
(declare-fun x2028 () Bool)
(declare-fun x661 () Bool)
(declare-fun x1743 () Int)
(declare-fun x813 () Int)
(declare-fun x983 () Bool)
(declare-fun x2433 () Int)
(declare-fun x776 () Int)
(declare-fun x1350 () Bool)
(declare-fun x465 () Bool)
(declare-fun x846 () Bool)
(declare-fun x343 () Int)
(declare-fun x2065 () Bool)
(declare-fun x1619 () Int)
(declare-fun x307 () Int)
(declare-fun x143 () Int)
(declare-fun x603 () Int)
(declare-fun x405 () Int)
(declare-fun x1418 () Int)
(declare-fun x617 () Bool)
(declare-fun x192 () Int)
(declare-fun x1413 () Bool)
(declare-fun x2402 () Int)
(declare-fun x2062 () Int)
(declare-fun x1066 () Int)
(declare-fun x166 () Bool)
(declare-fun x2106 () Int)
(declare-fun x1624 (Int) Int)
(declare-fun x196 () Bool)
(declare-fun x2219 () Bool)
(declare-fun x7 () Bool)
(declare-fun x388 () Bool)
(declare-fun x1423 () Int)
(declare-fun x1786 () Bool)
(declare-fun x923 () Bool)
(declare-fun x188 () Bool)
(declare-fun x1579 () Int)
(declare-fun x1776 () Int)
(declare-fun x881 () Int)
(declare-fun x648 () Bool)
(declare-fun x1081 () Int)
(declare-fun x1218 () Int)
(declare-fun x1376 () Int)
(declare-fun x737 () Int)
(declare-fun x654 () Int)
(declare-fun x240 () Int)
(declare-fun x1338 () Bool)
(declare-fun x1685 () Int)
(declare-fun x14 () Int)
(declare-fun x2144 () Int)
(declare-fun x1444 () Bool)
(declare-fun x1991 () Bool)
(declare-fun x1194 () Int)
(declare-fun x1924 () Bool)
(declare-fun x2018 () Int)
(declare-fun x2125 () Bool)
(declare-fun x612 () Int)
(declare-fun x1628 () Bool)
(declare-fun x2247 () Int)
(declare-fun x2109 () Int)
(declare-fun x262 () Int)
(declare-fun x1973 () Bool)
(declare-fun x121 () Int)
(declare-fun x213 () Bool)
(declare-fun x2369 () Int)
(declare-fun x80 () Bool)
(declare-fun x2293 () Bool)
(declare-fun x1353 () Int)
(declare-fun x1334 () Bool)
(declare-fun x1514 () Bool)
(declare-fun x2452 () Int)
(declare-fun x1627 () Bool)
(declare-fun x1161 () Int)
(declare-fun x2334 () Int)
(declare-fun x605 () x550)
(declare-fun x138 () Int)
(declare-fun x16 () Bool)
(declare-fun x512 () x550)
(declare-fun x252 () Bool)
(declare-fun x649 () Int)
(declare-fun x1846 () x550)
(declare-fun x119 () Bool)
(declare-fun x1864 () Bool)
(declare-fun x502 () x550)
(declare-fun x1970 () Int)
(declare-fun x2341 () Int)
(declare-fun x1144 () Bool)
(declare-fun x316 () Bool)
(declare-fun x717 () Bool)
(declare-fun x1335 () Bool)
(declare-fun x313 () Bool)
(declare-fun x2072 () Bool)
(declare-fun x1910 () Bool)
(declare-fun x1469 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x1076 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x1902 () Int)
(declare-fun x1472 () Bool)
(declare-fun x2440 () Int)
(declare-fun x517 () Bool)
(declare-fun x970 () Int)
(declare-fun x819 () Bool)
(declare-fun x2177 () Int)
(declare-fun x95 () Bool)
(declare-fun x1039 () Int)
(declare-fun x1296 () Int)
(declare-fun x1958 () Int)
(declare-fun x2240 () Int)
(declare-fun x1610 () Int)
(declare-fun x258 () Int)
(declare-fun x2005 () Bool)
(declare-fun x1956 () Int)
(declare-fun x569 () Bool)
(declare-fun x1803 () Int)
(declare-fun x700 () Int)
(declare-fun x339 () Bool)
(declare-fun x340 () Int)
(declare-fun x924 () Int)
(declare-fun x315 () Int)
(declare-fun x829 () Bool)
(declare-fun x1257 () Bool)
(declare-fun x511 () Bool)
(declare-fun x187 () Bool)
(declare-fun x1629 () Bool)
(declare-fun x1248 () Bool)
(declare-fun x874 () x550)
(declare-fun x1891 () Bool)
(declare-fun x2223 () Int)
(declare-fun x2360 () Int)
(declare-fun x1524 () Int)
(declare-fun x682 () Int)
(declare-fun x1228 () Bool)
(declare-fun x967 () x550)
(declare-fun x911 () x550)
(declare-fun x1047 () Int)
(declare-fun x558 () Bool)
(declare-fun x127 () Int)
(declare-fun x1609 () Bool)
(declare-fun x1284 () Int)
(declare-fun x831 () Bool)
(declare-fun x960 (Int) Int)
(declare-fun x1087 () Bool)
(declare-fun x1103 () Int)
(declare-fun x750 () Bool)
(declare-fun x2112 () Bool)
(declare-fun x771 () Int)
(declare-fun x1877 () Bool)
(declare-fun x611 () Bool)
(declare-fun x705 () Int)
(declare-fun x907 () Bool)
(declare-fun x780 () Bool)
(declare-fun x2303 () Int)
(declare-fun x1855 () Bool)
(declare-fun x527 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x1506 () Bool)
(declare-fun x109 () Bool)
(declare-fun x963 () Int)
(declare-fun x248 () Bool)
(declare-fun x697 () Bool)
(declare-fun x2121 () Int)
(declare-fun x545 () Bool)
(declare-fun x2411 () Int)
(declare-fun x1858 () Int)
(declare-fun x2211 (Int) Int)
(declare-fun x2413 () Bool)
(declare-fun x481 () Int)
(declare-fun x1150 () Bool)
(declare-fun x627 () Int)
(declare-fun x1556 () Bool)
(declare-fun x106 () Bool)
(declare-fun x2488 () Int)
(declare-fun x1212 () Bool)
(declare-fun x1480 () Int)
(declare-fun x255 (Int Int) Int)
(declare-fun x893 () Int)
(declare-fun x2409 () Bool)
(declare-fun x542 () Int)
(declare-fun x826 () Int)
(declare-fun x390 () Bool)
(declare-fun x1758 () Bool)
(declare-fun x1842 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x1869 () Int)
(declare-fun x2363 () Bool)
(declare-fun x1105 () Bool)
(declare-fun x650 () Int)
(declare-fun x2087 () Int)
(declare-fun x1148 () Int)
(declare-fun x870 () Int)
(declare-fun x1489 () Int)
(declare-fun x1632 () Int)
(declare-fun x1493 () Bool)
(declare-fun x1578 () x550)
(declare-fun x393 () Bool)
(declare-fun x2134 () Bool)
(declare-fun x1817 () Int)
(declare-fun x2235 () Bool)
(declare-fun x1686 () Bool)
(declare-fun x2414 () Bool)
(declare-fun x2184 () Int)
(declare-fun x77 () Int)
(declare-fun x1367 (x550) Int)
(declare-fun x1709 () Bool)
(declare-fun x2207 () Int)
(declare-fun x104 () Bool)
(declare-fun x1096 () Int)
(declare-fun x1660 () Bool)
(declare-fun x805 () Int)
(declare-fun x416 () x550)
(declare-fun x918 () Int)
(declare-fun x694 () Bool)
(declare-fun x4 () Bool)
(declare-fun x186 () Bool)
(declare-fun x2474 () Int)
(declare-fun x1596 () Int)
(declare-fun x2221 () Bool)
(declare-fun x868 () Bool)
(declare-fun x732 () Bool)
(declare-fun x398 () Bool)
(declare-fun x1741 () Int)
(declare-fun x1234 () Int)
(declare-fun x1965 () x550)
(declare-fun x1445 () Int)
(declare-fun x1382 () Int)
(declare-fun x1863 () Bool)
(declare-fun x2097 () Int)
(declare-fun x1101 () Bool)
(declare-fun x644 () Bool)
(declare-fun x794 () Int)
(declare-fun x477 () Bool)
(declare-fun x55 () Int)
(declare-fun x2279 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x174 () Bool)
(declare-fun x1197 () Int)
(declare-fun x51 () Int)
(declare-fun x762 () Int)
(declare-fun x2309 () Int)
(declare-fun x45 () Bool)
(declare-fun x1263 () Bool)
(declare-fun x1675 () Bool)
(declare-fun x235 () Bool)
(declare-fun x2178 () Bool)
(declare-fun x1702 () Int)
(declare-fun x2012 () Bool)
(declare-fun x768 () Int)
(declare-fun x801 () Bool)
(declare-fun x1843 () Int)
(declare-fun x1415 () Int)
(declare-fun x1288 () Bool)
(declare-fun x2169 () x550)
(declare-fun x1994 (Int) Int)
(declare-fun x2373 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x1060 () Int)
(declare-fun x808 () Bool)
(declare-fun x926 () Int)
(declare-fun x2041 () Int)
(declare-fun x949 () x550)
(declare-fun x2026 () Int)
(declare-fun x2220 () Int)
(declare-fun x556 () Int)
(declare-fun x1916 () Int)
(declare-fun x2056 () Bool)
(declare-fun x2371 () Int)
(declare-fun x2155 () x550)
(declare-fun x1016 () Int)
(declare-fun x306 () x550)
(declare-fun x1077 () Bool)
(declare-fun x489 () Int)
(declare-fun x2224 () Int)
(declare-fun x407 () x550)
(declare-fun x1379 () Int)
(declare-fun x2276 () Int)
(declare-fun x2389 () Int)
(declare-fun x1089 () Int)
(declare-fun x604 () Bool)
(declare-fun x896 () Bool)
(declare-fun x1673 () Bool)
(declare-fun x1807 () Bool)
(declare-fun x62 () Int)
(declare-fun x1348 () Int)
(declare-fun x2185 () Int)
(declare-fun x2029 () Bool)
(declare-fun x1985 () Bool)
(declare-fun x2105 () x550)
(declare-fun x1131 () Int)
(declare-fun x1341 () Bool)
(declare-fun x2358 () Int)
(declare-fun x1351 () Int)
(declare-fun x1860 () Int)
(declare-fun x778 () Int)
(declare-fun x1576 () Bool)
(declare-fun x1015 () Bool)
(declare-fun x1291 () x550)
(declare-fun x1531 () Int)
(declare-fun x925 () Bool)
(declare-fun x1874 () Bool)
(declare-fun x334 () Bool)
(declare-fun x913 () Int)
(declare-fun x2444 () Int)
(declare-fun x327 () Bool)
(declare-fun x1312 () Bool)
(declare-fun x1784 () Bool)
(declare-fun x2048 () Int)
(declare-fun x1699 () Int)
(declare-fun x490 () Int)
(declare-fun x2506 () Bool)
(declare-fun x731 () Int)
(declare-fun x332 () Int)
(declare-fun x369 () Int)
(declare-fun x979 () Bool)
(declare-fun x2396 () x550)
(declare-fun x2059 () Int)
(declare-fun x698 () Int)
(declare-fun x1936 () Int)
(declare-fun x399 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x713 () Bool)
(declare-fun x1599 () Int)
(declare-fun x1944 () x550)
(declare-fun x280 () Bool)
(declare-fun x1533 () Int)
(declare-fun x947 () x550)
(declare-fun x687 () Bool)
(declare-fun x1025 () Int)
(declare-fun x1635 () Bool)
(declare-fun x2199 () Int)
(declare-fun x1123 () Bool)
(declare-fun x2166 () Int)
(declare-fun x2308 () Int)
(declare-fun x1277 () Bool)
(declare-fun x2469 () Bool)
(declare-fun x783 () Int)
(declare-fun x470 () Int)
(declare-fun x290 () Int)
(declare-fun x2091 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x1976 () Bool)
(declare-fun x161 (x550) Int)
(declare-fun x1853 () Bool)
(declare-fun x283 () Int)
(declare-fun x1085 () Bool)
(declare-fun x2332 () Int)
(declare-fun x1725 () Int)
(declare-fun x105 () Int)
(declare-fun x1511 () x550)
(declare-fun x2217 () Bool)
(declare-fun x2210 () Int)
(declare-fun x1328 () Int)
(declare-fun x560 () Bool)
(declare-fun x1253 () Int)
(declare-fun x766 () Bool)
(declare-fun x2264 () Int)
(declare-fun x1488 () Bool)
(declare-fun x1393 () Bool)
(declare-fun x573 () Bool)
(declare-fun x2470 () Int)
(declare-fun x2347 () Bool)
(declare-fun x162 () Bool)
(declare-fun x2142 () Bool)
(declare-fun x1720 () Int)
(declare-fun x238 () x550)
(declare-fun x116 () Bool)
(declare-fun x1865 () Int)
(declare-fun x1362 () Int)
(declare-fun x1873 () Bool)
(declare-fun x423 () Int)
(declare-fun x491 () Bool)
(declare-fun x1757 () Int)
(declare-fun x146 () Bool)
(declare-fun x1695 () Int)
(declare-fun x1271 () Bool)
(declare-fun x1783 () Bool)
(declare-fun x2432 () Bool)
(declare-fun x1436 () Int)
(declare-fun x1046 () Int)
(declare-fun x1126 () Int)
(declare-fun x1384 () Bool)
(declare-fun x2104 () Int)
(declare-fun x2216 () Bool)
(declare-fun x1044 () Int)
(declare-fun x440 () Int)
(declare-fun x1608 () Int)
(declare-fun x266 () Bool)
(declare-fun x392 () Bool)
(declare-fun x738 () Int)
(declare-fun x1894 () Int)
(declare-fun x1446 () Bool)
(declare-fun x223 () Bool)
(declare-fun x431 () Int)
(declare-fun x1724 () Bool)
(declare-fun x528 () Bool)
(declare-fun x1814 () Int)
(declare-fun x685 () Bool)
(declare-fun x449 () Bool)
(declare-fun x1082 () Int)
(declare-fun x2107 () Int)
(declare-fun x676 () Bool)
(declare-fun x2157 () Int)
(declare-fun x253 () Bool)
(declare-fun x2197 () Bool)
(declare-fun x986 () Int)
(declare-fun x1193 () Int)
(declare-fun x417 () Int)
(declare-fun x1545 () Int)
(declare-fun x1969 () Int)
(declare-fun x1185 () Bool)
(declare-fun x1036 () Bool)
(declare-fun x296 () Bool)
(declare-fun x2063 () Int)
(declare-fun x1890 () Bool)
(declare-fun x666 () Bool)
(declare-fun x722 () Bool)
(declare-fun x2498 () Bool)
(declare-fun x358 () Bool)
(declare-fun x707 () Int)
(declare-fun x1361 () Int)
(declare-fun x1558 () Bool)
(declare-fun x2285 () Int)
(declare-fun x1620 () Int)
(declare-fun x785 () Int)
(declare-fun x744 () Int)
(declare-fun x995 () Int)
(declare-fun x1411 () Int)
(declare-fun x112 () Bool)
(declare-fun x845 () Bool)
(declare-fun x2102 () Bool)
(declare-fun x1380 () Int)
(declare-fun x284 () Int)
(declare-fun x562 () Int)
(declare-fun x397 () Bool)
(declare-fun x2215 (Int Int) Int)
(declare-fun x1307 () Int)
(declare-fun x825 () Int)
(declare-fun x413 () Int)
(declare-fun x1701 () Bool)
(declare-fun x167 () Int)
(declare-fun x643 (Int) Int)
(declare-fun x2335 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x1649 () Bool)
(declare-fun x2243 () Int)
(declare-fun x476 () Int)
(declare-fun x1424 () Int)
(declare-fun x2244 () Bool)
(declare-fun x1648 () Bool)
(declare-fun x1781 () Bool)
(declare-fun x1589 () Int)
(declare-fun x1917 () Int)
(declare-fun x2129 () Int)
(declare-fun x619 () Bool)
(declare-fun x1557 () Bool)
(declare-fun x1227 () Bool)
(declare-fun x1951 () Bool)
(declare-fun x1160 () Int)
(declare-fun x1911 () Int)
(declare-fun x400 () Int)
(declare-fun x887 () Int)
(declare-fun x485 () Bool)
(declare-fun x714 () Bool)
(declare-fun x242 () Bool)
(declare-fun x839 () Bool)
(declare-fun x2043 () Bool)
(declare-fun x1466 () Bool)
(declare-fun x875 () Bool)
(declare-fun x499 () Int)
(declare-fun x464 () Bool)
(declare-fun x1812 () Bool)
(declare-fun x2485 () Int)
(declare-fun x602 () Bool)
(declare-fun x2127 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x756 () Int)
(declare-fun x2218 () Int)
(declare-fun x1904 () x550)
(declare-fun x31 () Bool)
(declare-fun x1790 () Bool)
(declare-fun x815 () Bool)
(declare-fun x1010 () Int)
(declare-fun x1455 () x550)
(declare-fun x2328 () Int)
(declare-fun x574 () Bool)
(declare-fun x1192 () Bool)
(declare-fun x1347 () Int)
(declare-fun x279 () Bool)
(declare-fun x2017 () Int)
(declare-fun x1949 () Int)
(declare-fun x1601 () Bool)
(declare-fun x1366 () x550)
(declare-fun x2455 () Int)
(declare-fun x1244 () Bool)
(declare-fun x257 () Bool)
(declare-fun x1017 () Int)
(declare-fun x646 () Bool)
(declare-fun x1580 () Int)
(declare-fun x2057 () Int)
(declare-fun x2025 () Bool)
(declare-fun x2481 () Bool)
(declare-fun x743 () Int)
(declare-fun x1477 () Bool)
(declare-fun x56 () Int)
(declare-fun x298 () x550)
(declare-fun x1313 () Int)
(declare-fun x139 () Int)
(declare-fun x2143 () Bool)
(declare-fun x155 () Int)
(declare-fun x2441 () Bool)
(declare-fun x1867 () Int)
(declare-fun x1205 () Int)
(declare-fun x608 () Int)
(declare-fun x2442 () Int)
(declare-fun x2226 () Bool)
(declare-fun x2378 () Bool)
(declare-fun x1974 () x550)
(declare-fun x1414 () Int)
(declare-fun x1718 () Int)
(declare-fun x748 () Bool)
(declare-fun x635 () Int)
(declare-fun x580 () Int)
(declare-fun x2203 () Int)
(declare-fun x76 () Int)
(declare-fun x1468 () Int)
(declare-fun x1501 () Int)
(declare-fun x1953 () Int)
(declare-fun x168 () Int)
(declare-fun x792 () Int)
(declare-fun x1939 () Bool)
(declare-fun x1618 () Bool)
(declare-fun x860 () Bool)
(declare-fun x1597 () Bool)
(declare-fun x994 () x550)
(declare-fun x2426 () Int)
(declare-fun x1005 () Int)
(declare-fun x1876 () Int)
(declare-fun x1992 () Bool)
(declare-fun x1795 () Bool)
(declare-fun x1187 () x550)
(declare-fun x1142 () Int)
(declare-fun x222 () Int)
(declare-fun x1476 () Bool)
(declare-fun x1299 () Int)
(declare-fun x2269 () Bool)
(declare-fun x1308 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x291 () Int)
(declare-fun x1425 () x550)
(declare-fun x326 () Int)
(declare-fun x268 () Int)
(declare-fun x2348 () Int)
(declare-fun x686 () Bool)
(declare-fun x1605 () Bool)
(declare-fun x993 () Int)
(declare-fun x2507 () Int)
(declare-fun x141 () Bool)
(declare-fun x1191 () Int)
(declare-fun x503 () Int)
(declare-fun x2277 () Int)
(declare-fun x2208 () x550)
(declare-fun x2431 () Bool)
(declare-fun x96 () Int)
(declare-fun x576 () Bool)
(declare-fun x152 (x550) Int)
(declare-fun x1021 () Bool)
(declare-fun x2222 () Bool)
(declare-fun x176 () Bool)
(declare-fun x2390 () Int)
(declare-fun x1214 () Bool)
(declare-fun x1121 () Int)
(declare-fun x1737 () Int)
(declare-fun x1581 () Int)
(declare-fun x709 () x550)
(declare-fun x1723 () Int)
(declare-fun x2463 () Bool)
(declare-fun x2304 () Int)
(declare-fun x50 () Bool)
(declare-fun x1818 () Int)
(declare-fun x1246 () Bool)
(declare-fun x2147 () Int)
(declare-fun x1896 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x1616 () Int)
(declare-fun x408 () Int)
(declare-fun x2478 () Int)
(declare-fun x1321 () Bool)
(declare-fun x384 () Int)
(declare-fun x2153 () Int)
(declare-fun x2181 () Int)
(declare-fun x451 () x550)
(declare-fun x1704 () Bool)
(declare-fun x409 () Bool)
(declare-fun x2150 () Int)
(declare-fun x1285 (Int) Int)
(declare-fun x807 () Int)
(declare-fun x1317 () Int)
(declare-fun x430 () Bool)
(declare-fun x1259 () Int)
(declare-fun x2460 () Int)
(declare-fun x1162 () Bool)
(declare-fun x2278 () Int)
(declare-fun x368 () Int)
(declare-fun x456 () Int)
(declare-fun x202 () Int)
(declare-fun x2287 () Int)
(declare-fun x613 () Bool)
(declare-fun x2427 () Int)
(declare-fun x1691 () Int)
(declare-fun x2319 () Bool)
(declare-fun x2238 () Int)
(declare-fun x237 () Bool)
(declare-fun x2186 () Int)
(declare-fun x1239 () Bool)
(declare-fun x1761 () Bool)
(declare-fun x1352 () Int)
(declare-fun x277 () Bool)
(declare-fun x787 () Bool)
(declare-fun x2504 () Int)
(declare-fun x736 () Int)
(declare-fun x802 () Int)
(declare-fun x1775 () Bool)
(declare-fun x791 () Int)
(declare-fun x2317 () Int)
(declare-fun x479 () Bool)
(declare-fun x1837 () Bool)
(declare-fun x2375 () Bool)
(declare-fun x324 () Bool)
(declare-fun x212 () Int)
(declare-fun x1200 () Int)
(declare-fun x403 () Int)
(declare-fun x436 () Bool)
(declare-fun x711 () Bool)
(declare-fun x935 () Int)
(declare-fun x533 () Int)
(declare-fun x2078 () Int)
(declare-fun x2471 () Int)
(declare-fun x539 () Bool)
(declare-fun x584 () Int)
(declare-fun x2068 () Bool)
(declare-fun x2497 () Bool)
(declare-fun x2454 () Int)
(declare-fun x592 () Bool)
(declare-fun x857 () Bool)
(declare-fun x302 () Int)
(declare-fun x2336 () Bool)
(declare-fun x2014 () Bool)
(declare-fun x1908 () Int)
(declare-fun x1574 () Bool)
(declare-fun x1978 () Int)
(declare-fun x107 () Int)
(declare-fun x1625 () Int)
(declare-fun x972 () Bool)
(declare-fun x2035 () Int)
(declare-fun x2190 () Bool)
(declare-fun x250 () Int)
(declare-fun x1360 () Int)
(declare-fun x624 () Int)
(declare-fun x680 () Int)
(declare-fun x941 () Int)
(declare-fun x557 () Int)
(declare-fun x2039 () Bool)
(declare-fun x863 () Bool)
(declare-fun x319 () Int)
(declare-fun x1912 () Bool)
(declare-fun x715 () Int)
(declare-fun x1527 () Bool)
(declare-fun x1642 () Bool)
(declare-fun x184 () Int)
(declare-fun x195 () x550)
(declare-fun x1721 () Bool)
(declare-fun x980 () Bool)
(declare-fun x1462 () Int)
(declare-fun x888 () Int)
(declare-fun x329 () Bool)
(declare-fun x1084 () Int)
(declare-fun x1315 () Int)
(declare-fun x1265 () Int)
(declare-fun x1475 () Int)
(declare-fun x433 () Int)
(declare-fun x91 () Int)
(declare-fun x2089 () Int)
(declare-fun x1907 () Int)
(declare-fun x169 () Bool)
(declare-fun x466 () Int)
(declare-fun x1401 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x278 () Bool)
(declare-fun x742 () Int)
(declare-fun x1302 () Int)
(declare-fun x2206 () Int)
(declare-fun x1022 () Int)
(declare-fun x889 () x550)
(declare-fun x1479 () Bool)
(declare-fun x2202 () Bool)
(declare-fun x2388 () Int)
(declare-fun x1226 (x550) Int)
(declare-fun x806 () Int)
(declare-fun x2038 () Int)
(declare-fun x2124 () Int)
(declare-fun x362 () Bool)
(declare-fun x1375 () Bool)
(declare-fun x1747 () Int)
(declare-fun x304 () x550)
(declare-fun x1848 () Int)
(declare-fun x1893 () Bool)
(declare-fun x148 () Int)
(declare-fun x86 (Int) Int)
(declare-fun x1984 () Bool)
(declare-fun x2464 () Bool)
(declare-fun x2351 () Bool)
(declare-fun x1770 () x550)
(declare-fun x1544 () Bool)
(declare-fun x665 () Int)
(declare-fun x2372 () Bool)
(declare-fun x439 () Int)
(declare-fun x380 () Int)
(declare-fun x1481 () Bool)
(declare-fun x1236 () Int)
(declare-fun x144 () Bool)
(declare-fun x2493 () Int)
(declare-fun x1207 (x550) Int)
(declare-fun x1688 () Bool)
(declare-fun x1011 () Int)
(declare-fun x2117 () Int)
(declare-fun x534 () Int)
(declare-fun x1149 () Int)
(declare-fun x1040 () Bool)
(declare-fun x928 () Bool)
(declare-fun x78 () Int)
(declare-fun x2148 () Bool)
(declare-fun x2045 () Bool)
(declare-fun x233 () Bool)
(declare-fun x1217 () Bool)
(declare-fun x1525 () Int)
(declare-fun x2429 () Int)
(declare-fun x810 () Int)
(declare-fun x948 () Int)
(declare-fun x529 () x550)
(declare-fun x486 () Int)
(declare-fun x443 () Bool)
(declare-fun x100 () Int)
(declare-fun x933 () Int)
(declare-fun x286 () Int)
(declare-fun x273 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x1995 () Bool)
(declare-fun x1889 () Bool)
(declare-fun x2004 () Int)
(declare-fun x733 () Bool)
(declare-fun x2082 () Int)
(declare-fun x2146 () Bool)
(declare-fun x505 () Int)
(declare-fun x26 () Int)
(declare-fun x2398 () Bool)
(declare-fun x1029 () Bool)
(declare-fun x2502 () Int)
(declare-fun x2049 () Int)
(declare-fun x1178 () Bool)
(declare-fun x1065 () Bool)
(declare-fun x1186 () Bool)
(declare-fun x1689 () Bool)
(declare-fun x777 () Int)
(declare-fun x1696 () Bool)
(declare-fun x1957 () Bool)
(declare-fun x1456 () x550)
(declare-fun x1972 () Bool)
(declare-fun x159 () Bool)
(declare-fun x2362 () Int)
(declare-fun x691 () Bool)
(declare-fun x2350 () Bool)
(declare-fun x959 () Bool)
(declare-fun x354 () Bool)
(declare-fun x1370 () Int)
(declare-fun x1585 () Bool)
(declare-fun x961 () Bool)
(declare-fun x1551 () Int)
(declare-fun x181 () Int)
(declare-fun x3 () Bool)
(declare-fun x1141 () Int)
(declare-fun x1656 () Int)
(declare-fun x256 () Int)
(declare-fun x2412 () Int)
(declare-fun x1762 () Int)
(declare-fun x1805 () Bool)
(declare-fun x2404 () Bool)
(declare-fun x968 () Int)
(declare-fun x2333 () Bool)
(declare-fun x607 () Bool)
(declare-fun x2046 () Int)
(declare-fun x673 () Bool)
(declare-fun x588 () Bool)
(declare-fun x441 () Int)
(declare-fun x2179 () Int)
(declare-fun x1199 () Bool)
(declare-fun x264 () Bool)
(declare-fun x1736 () Int)
(declare-fun x142 () Int)
(declare-fun x937 () Int)
(declare-fun x2401 () Int)
(declare-fun x1751 () Bool)
(declare-fun x1505 () Int)
(declare-fun x1671 () Bool)
(declare-fun x788 () Bool)
(declare-fun x207 () Int)
(declare-fun x927 () Int)
(declare-fun x254 () Int)
(declare-fun x589 () Bool)
(declare-fun x763 () Int)
(declare-fun x204 () x550)
(declare-fun x1652 () Bool)
(declare-fun x751 (Int) Int)
(declare-fun x1441 () Int)
(declare-fun x1028 () Bool)
(declare-fun x1526 () Int)
(declare-fun x2439 () Bool)
(declare-fun x1603 () Int)
(declare-fun x554 () Int)
(declare-fun x2368 () Int)
(declare-fun x2108 () Int)
(declare-fun x984 () Bool)
(declare-fun x1733 () Bool)
(declare-fun x942 () Int)
(declare-fun x2310 () Bool)
(declare-fun x653 () Int)
(declare-fun x1772 () Int)
(declare-fun x289 () Bool)
(declare-fun x1283 () x550)
(declare-fun x1906 () Bool)
(declare-fun x2010 () Bool)
(declare-fun x548 () Int)
(declare-fun x1840 () Int)
(declare-fun x1614 () Bool)
(declare-fun x365 () Bool)
(declare-fun x2475 () Bool)
(declare-fun x1595 (Int Int) Int)
(declare-fun x856 () Int)
(declare-fun x216 () Int)
(declare-fun x282 () Bool)
(declare-fun x1591 () Int)
(declare-fun x909 () Int)
(declare-fun x1264 () Bool)
(declare-fun x2294 () Int)
(declare-fun x39 () Int)
(declare-fun x469 () Bool)
(declare-fun x1859 () Bool)
(declare-fun x245 () Bool)
(declare-fun x2126 () Bool)
(declare-fun x1577 () Int)
(declare-fun x1007 () Bool)
(declare-fun x2268 () Int)
(declare-fun x900 () Bool)
(declare-fun x1999 () x550)
(declare-fun x210 () Int)
(declare-fun x1566 () Bool)
(declare-fun x2252 () Bool)
(declare-fun x1002 () Int)
(declare-fun x1919 () Bool)
(declare-fun x2008 () Int)
(declare-fun x1824 () Bool)
(declare-fun x1083 () Int)
(declare-fun x683 () Int)
(declare-fun x1666 () Bool)
(declare-fun x1694 () Int)
(declare-fun x678 () x550)
(declare-fun x1213 () Bool)
(declare-fun x921 () Int)
(declare-fun x2370 () Int)
(declare-fun x858 () Int)
(declare-fun x1913 () Bool)
(declare-fun x228 () Int)
(declare-fun x943 () Bool)
(declare-fun x2446 () Int)
(declare-fun x2379 () x550)
(declare-fun x2403 () Bool)
(declare-fun x841 () Bool)
(declare-fun x2083 () Bool)
(declare-fun x1293 () Int)
(declare-fun x1659 () Bool)
(declare-fun x2386 () Bool)
(declare-fun x2322 () Int)
(declare-fun x1708 () Bool)
(declare-fun x1561 () Int)
(declare-fun x854 () Int)
(declare-fun x1057 () Int)
(declare-fun x1498 () Int)
(declare-fun x136 () Bool)
(declare-fun x2245 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x2381 () Bool)
(declare-fun x2296 () Int)
(declare-fun x2098 () Int)
(declare-fun x1392 () Bool)
(declare-fun x670 () Bool)
(declare-fun x156 () Bool)
(declare-fun x1540 () Int)
(declare-fun x1435 () Bool)
(declare-fun x102 () Bool)
(declare-fun x357 () Bool)
(declare-fun x1049 () Bool)
(declare-fun x1962 () Bool)
(declare-fun x1931 () Bool)
(declare-fun x565 (Int) Int)
(declare-fun x189 () Int)
(declare-fun x1509 () Int)
(declare-fun x721 () Int)
(declare-fun x902 () Int)
(declare-fun x2436 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x293 () Int)
(declare-fun x2449 () Int)
(declare-fun x151 () Int)
(declare-fun x1059 () Bool)
(declare-fun x346 () Int)
(declare-fun x1450 () Int)
(declare-fun x1406 () Int)
(declare-fun x1552 () Int)
(declare-fun x1621 () Bool)
(declare-fun x484 () Bool)
(declare-fun x535 () Bool)
(declare-fun x571 () Bool)
(declare-fun x2154 () Int)
(declare-fun x916 (Int) x550)
(declare-fun x2380 () x550)
(declare-fun x1598 () Int)
(declare-fun x2175 () Int)
(declare-fun x2020 () Bool)
(declare-fun x1274 () Bool)
(declare-fun x628 () Bool)
(declare-fun x729 () Int)
(declare-fun x1495 () Int)
(declare-fun x1510 () Int)
(declare-fun x179 () Bool)
(declare-fun x53 () Int)
(declare-fun x1785 () Int)
(declare-fun x567 () Int)
(declare-fun x34 () Int)
(declare-fun x559 () Int)
(declare-fun x12 () Int)
(declare-fun x641 () Bool)
(declare-fun x1630 () Bool)
(declare-fun x629 () Int)
(declare-fun x1779 () Bool)
(declare-fun x1474 () Int)
(declare-fun x331 () Bool)
(declare-fun x2505 () Bool)
(declare-fun x1664 (Int Int) Int)
(declare-fun x1679 () Bool)
(declare-fun x1854 () Int)
(declare-fun x882 () Int)
(declare-fun x226 () Int)
(declare-fun x2100 () Bool)
(declare-fun x1622 () Int)
(declare-fun x850 () Int)
(declare-fun x299 () Bool)
(declare-fun x920 () x550)
(declare-fun x1534 () Bool)
(declare-fun x1071 () Int)
(declare-fun x47 () Bool)
(declare-fun x1070 () Int)
(declare-fun x1606 () Bool)
(declare-fun x759 () Bool)
(declare-fun x2158 () Bool)
(declare-fun x1639 () Int)
(declare-fun x125 () x550)
(declare-fun x424 () Bool)
(declare-fun x1169 () Bool)
(declare-fun x206 () x550)
(declare-fun x1903 () Bool)
(declare-fun x879 () Bool)
(declare-fun x2291 () Int)
(declare-fun x1030 () Bool)
(declare-fun x2246 () x550)
(declare-fun x2110 () Bool)
(declare-fun x954 () Int)
(declare-fun x2055 () Bool)
(declare-fun x1349 () Bool)
(declare-fun x1294 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x208 () Int)
(declare-fun x746 () Int)
(declare-fun x1434 () Int)
(declare-fun x41 () Bool)
(declare-fun x1952 () Bool)
(declare-fun x1532 () Int)
(declare-fun x247 () Bool)
(declare-fun x2305 () Bool)
(declare-fun x330 () Int)
(declare-fun x764 () x550)
(declare-fun x1182 () Bool)
(declare-fun x1825 (Int) Int)
(declare-fun x2366 () Int)
(declare-fun x2192 () Int)
(declare-fun x177 () Bool)
(declare-fun x1881 () Bool)
(declare-fun x2323 () Bool)
(declare-fun x1054 () Int)
(declare-fun x1320 () Bool)
(declare-fun x420 () Int)
(declare-fun x1309 () Bool)
(declare-fun x40 () Int)
(declare-fun x2423 () Int)
(declare-fun x2258 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x712 () Int)
(declare-fun x638 () Bool)
(declare-fun x1091 () Bool)
(declare-fun x1584 () Int)
(declare-fun x1100 () Int)
(declare-fun x180 () Int)
(declare-fun x348 () Bool)
(declare-fun x128 () Bool)
(declare-fun x297 () Int)
(declare-fun x190 () Bool)
(declare-fun x1809 () Int)
(declare-fun x2430 () Int)
(declare-fun x1567 () Bool)
(declare-fun x2418 () Bool)
(declare-fun x132 () Bool)
(declare-fun x784 () Bool)
(declare-fun x1941 () Bool)
(declare-fun x1535 (Int) Int)
(declare-fun x1222 () Int)
(declare-fun x1665 () Bool)
(declare-fun x1835 () Bool)
(declare-fun x2037 () Bool)
(declare-fun x1454 () Bool)
(declare-fun x1988 () Int)
(declare-fun x1152 (x550) Int)
(declare-fun x2122 () Int)
(declare-fun x428 () Int)
(declare-fun x88 (Int) Int)
(declare-fun x1482 () Int)
(declare-fun x932 () Int)
(declare-fun x2111 () Bool)
(declare-fun x549 () Int)
(declare-fun x2200 () Bool)
(declare-fun x547 () Int)
(declare-fun x2191 () Int)
(declare-fun x1658 () Bool)
(declare-fun x1069 () Int)
(declare-fun x2392 () Int)
(declare-fun x288 () Bool)
(declare-fun x444 () Bool)
(declare-fun x873 () Int)
(declare-fun x2311 () Bool)
(declare-fun x1513 () Int)
(declare-fun x448 () Bool)
(declare-fun x2344 () Int)
(declare-fun x1943 () Int)
(declare-fun x1237 (x550) Int)
(declare-fun x243 () Int)
(declare-fun x541 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x966 () Int)
(declare-fun x1987 () Bool)
(declare-fun x681 () Int)
(declare-fun x473 () x550)
(declare-fun x798 () x550)
(declare-fun x1926 () Bool)
(declare-fun x789 () Bool)
(declare-fun x2417 () Int)
(declare-fun x1572 () Bool)
(declare-fun x1573 () Int)
(declare-fun x482 (Int Int) Int)
(declare-fun x35 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x225 () Bool)
(declare-fun x265 () Int)
(declare-fun x1555 () Bool)
(declare-fun x1851 () x550)
(declare-fun x1993 () Int)
(declare-fun x1395 () Int)
(declare-fun x355 () Bool)
(declare-fun x1887 () x550)
(declare-fun x989 () Int)
(declare-fun x1405 () Int)
(declare-fun x575 () Int)
(declare-fun x631 () Bool)
(declare-fun x886 () Int)
(declare-fun x1269 () Bool)
(declare-fun x1748 () x550)
(declare-fun x2324 (Int) Int)
(declare-fun x1090 () Bool)
(declare-fun x322 () Int)
(declare-fun x1687 () Int)
(declare-fun x716 () Int)
(declare-fun x1676 () Bool)
(declare-fun x657 () Int)
(declare-fun x1465 () Bool)
(declare-fun x965 () Int)
(declare-fun x294 () Int)
(declare-fun x1258 () Bool)
(declare-fun x49 () Int)
(declare-fun x1830 () Bool)
(declare-fun x1356 () Int)
(declare-fun x1431 () Int)
(declare-fun x1098 () Int)
(declare-fun x922 () Bool)
(declare-fun x1852 () Bool)
(declare-fun x363 () Bool)
(declare-fun x912 () Int)
(declare-fun x411 () Bool)
(declare-fun x957 () Bool)
(declare-fun x1337 () Int)
(declare-fun x263 () Int)
(declare-fun x1459 () Bool)
(declare-fun x2397 () x550)
(declare-fun x412 () Int)
(declare-fun x583 () Int)
(declare-fun x1232 () Int)
(declare-fun x37 () x550)
(declare-fun x285 () Bool)
(declare-fun x1443 () Int)
(declare-fun x1667 () Bool)
(declare-fun x2385 () Int)
(declare-fun x2015 () Bool)
(declare-fun x1231 () Int)
(declare-fun x1669 () Bool)
(declare-fun x356 () Bool)
(declare-fun x2034 () Bool)
(declare-fun x752 () Int)
(declare-fun x950 () Int)
(declare-fun x1225 () Bool)
(declare-fun x2318 () x550)
(declare-fun x214 () Bool)
(declare-fun x1788 () Int)
(declare-fun x79 () Int)
(declare-fun x2459 () Bool)
(declare-fun x1600 () Int)
(declare-fun x976 () Bool)
(declare-fun x468 () x550)
(declare-fun x1235 () Int)
(declare-fun x42 () Int)
(declare-fun x1880 () Int)
(declare-fun x1940 () Int)
(declare-fun x492 () Int)
(declare-fun x335 () Int)
(declare-fun x361 () Bool)
(declare-fun x1570 () Int)
(declare-fun x1270 () Int)
(declare-fun x135 () Int)
(declare-fun x1760 () Int)
(declare-fun x2113 () Int)
(declare-fun x1050 () Int)
(declare-fun x227 () Int)
(declare-fun x516 () Int)
(declare-fun x1966 () Int)
(declare-fun x1878 () Int)
(declare-fun x1568 () Int)
(declare-fun x1398 () Bool)
(declare-fun x536 () Bool)
(declare-fun x1892 () Int)
(declare-fun x1421 () Bool)
(declare-fun x1587 () Int)
(declare-fun x1019 () Bool)
(declare-fun x1766 () Bool)
(declare-fun x1707 () Int)
(declare-fun x774 () Int)
(declare-fun x978 () Int)
(declare-fun x71 () Bool)
(declare-fun x2312 () x550)
(declare-fun x2044 () x550)
(declare-fun x955 () Bool)
(declare-fun x582 () Int)
(declare-fun x800 () Int)
(declare-fun x969 () Int)
(declare-fun x1343 () Int)
(declare-fun x1794 () Int)
(declare-fun x69 () Bool)
(declare-fun x1637 () x550)
(declare-fun x723 () Bool)
(declare-fun x2019 () Int)
(declare-fun x561 () Bool)
(declare-fun x391 () Int)
(declare-fun x1983 () Bool)
(declare-fun x1260 () Int)
(declare-fun x1662 () Int)
(declare-fun x1820 () Int)
(declare-fun x1813 () Int)
(declare-fun x1429 () Int)
(declare-fun x835 () Bool)
(declare-fun x271 () Int)
(declare-fun x1980 () Int)
(declare-fun x1861 () Int)
(declare-fun x2494 () Bool)
(declare-fun x651 () x550)
(declare-fun x2300 () Int)
(declare-fun x1203 () Bool)
(declare-fun x94 () Bool)
(declare-fun x2340 () Int)
(declare-fun x1279 () Bool)
(declare-fun x2123 () Bool)
(declare-fun x1836 () Int)
(declare-fun x2201 () Bool)
(declare-fun x458 () Int)
(declare-fun x418 () Bool)
(declare-fun x1998 () Bool)
(declare-fun x1782 () Int)
(declare-fun x594 () Int)
(declare-fun x1381 () Int)
(declare-fun x1448 () x550)
(declare-fun x454 () Bool)
(declare-fun x2266 () Bool)
(declare-fun x1064 () x550)
(declare-fun x2320 () Bool)
(declare-fun x2139 () Int)
(declare-fun x1166 () Int)
(declare-fun x1158 () Int)
(declare-fun x724 () Int)
(declare-fun x163 () Int)
(declare-fun x1452 () Bool)
(declare-fun x1134 () Bool)
(declare-fun x1831 () Int)
(declare-fun x426 () Int)
(declare-fun x2482 (Int Int) Int)
(declare-fun x1133 () Bool)
(declare-fun x2468 () Int)
(declare-fun x501 () Int)
(declare-fun x2024 () Int)
(declare-fun x1715 () Int)
(declare-fun x1640 () Int)
(declare-fun x467 () Bool)
(declare-fun x1304 () x550)
(declare-fun x2140 () Int)
(declare-fun x145 () Int)
(declare-fun x1261 () Int)
(declare-fun x1363 () Int)
(declare-fun x1128 () Int)
(declare-fun x9 () Int)
(declare-fun x934 () Bool)
(declare-fun x385 () Bool)
(declare-fun x2204 () Bool)
(declare-fun x157 () Int)
(declare-fun x367 () Int)
(declare-fun x1120 () Bool)
(declare-fun x2329 () x550)
(declare-fun x101 () Bool)
(declare-fun x347 () Bool)
(declare-fun x1427 () Int)
(declare-fun x84 () Bool)
(declare-fun x1546 () Int)
(declare-fun x300 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x337 () Bool)
(declare-fun x2074 () Int)
(declare-fun x2477 () Bool)
(declare-fun x1879 () Bool)
(declare-fun x988 () Bool)
(declare-fun x2383 () Bool)
(declare-fun x1538 () Int)
(declare-fun x1034 () Bool)
(declare-fun x1623 () Int)
(declare-fun x880 () Int)
(declare-fun x834 () Int)
(declare-fun x1272 () x550)
(declare-fun x1499 () Int)
(declare-fun x1327 () Bool)
(declare-fun x702 () Bool)
(declare-fun x2349 () Int)
(declare-fun x389 () Bool)
(declare-fun x814 () Bool)
(declare-fun x215 () Bool)
(declare-fun x131 () x550)
(declare-fun x1003 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x578 () Int)
(declare-fun x1900 () Bool)
(declare-fun x25 () Bool)
(declare-fun x338 () Bool)
(declare-fun x1336 () Bool)
(declare-fun x494 () Bool)
(declare-fun x696 () Int)
(declare-fun x1442 () Bool)
(declare-fun x2161 () Int)
(declare-fun x675 () Int)
(declare-fun x2476 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x2196 () Int)
(declare-fun x1280 () Int)
(declare-fun x1471 () x550)
(declare-fun x797 () x550)
(declare-fun x1700 () Int)
(declare-fun x2405 () Int)
(declare-fun x372 () Bool)
(declare-fun x532 () Int)
(declare-fun x1611 () Int)
(declare-fun x20 () Bool)
(declare-fun x1426 () Int)
(declare-fun x552 () Int)
(declare-fun x1593 () Int)
(declare-fun x521 () Int)
(declare-fun x609 () Bool)
(declare-fun x2496 () Int)
(declare-fun x2167 () Bool)
(declare-fun x2422 () Bool)
(declare-fun x745 () Int)
(declare-fun x2194 () Int)
(declare-fun x761 () Bool)
(declare-fun x2393 () Bool)
(declare-fun x1287 () Bool)
(declare-fun x150 () Int)
(declare-fun x1960 () Bool)
(declare-fun x447 () Int)
(declare-fun x1571 () Int)
(declare-fun x2116 () Int)
(declare-fun x239 () Int)
(declare-fun x633 () Bool)
(declare-fun x2306 () Bool)
(declare-fun x1390 () Int)
(declare-fun x197 () Bool)
(declare-fun x1935 () Bool)
(declare-fun x659 () Int)
(declare-fun x2156 () Bool)
(declare-fun x249 () Bool)
(declare-fun x2228 () Int)
(declare-fun x1537 () Int)
(declare-fun x198 () Bool)
(declare-fun x2257 () Int)
(declare-fun x1170 () Int)
(declare-fun x1461 () Bool)
(declare-fun x1530 () x550)
(declare-fun x19 () Int)
(declare-fun x1732 () x550)
(declare-fun x1655 () Int)
(declare-fun x217 () Bool)
(declare-fun x383 () Int)
(declare-fun x1063 () Bool)
(declare-fun x1657 () Int)
(declare-fun x1027 () Int)
(declare-fun x2212 () Int)
(declare-fun x1240 () Bool)
(declare-fun x2253 () Int)
(declare-fun x2415 () Int)
(declare-fun x1870 () Int)
(declare-fun x1256 () Bool)
(declare-fun x1286 () Bool)
(declare-fun x173 () Int)
(declare-fun x2302 () Int)
(declare-fun x2195 () Bool)
(declare-fun x1440 () Int)
(declare-fun x1340 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x725 () Bool)
(declare-fun x1223 () Bool)
(declare-fun x305 (x550) Int)
(declare-fun x1882 () Int)
(declare-fun x2052 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x2448 () Bool)
(declare-fun x1646 () Bool)
(declare-fun x2272 (Int) Int)
(declare-fun x1661 () Bool)
(declare-fun x2354 () Bool)
(declare-fun x406 () Bool)
(declare-fun x1154 () Int)
(declare-fun x1804 () Bool)
(declare-fun x513 () Int)
(declare-fun x865 () Bool)
(declare-fun x1777 () Bool)
(declare-fun x434 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x769 () Bool)
(declare-fun x1959 () Bool)
(declare-fun x518 () Bool)
(declare-fun x987 () Bool)
(declare-fun x2130 () Int)
(declare-fun x975 () Bool)
(declare-fun x437 (Int) Int)
(declare-fun x349 () Bool)
(declare-fun x2458 () Bool)
(declare-fun x572 () Int)
(declare-fun x1930 () Int)
(declare-fun x1746 () Int)
(declare-fun x1136 () Bool)
(declare-fun x632 () Int)
(declare-fun x1023 () Bool)
(declare-fun x1647 () Int)
(declare-fun x2070 () Int)
(declare-fun x593 () Int)
(declare-fun x730 () Int)
(declare-fun x1297 () Int)
(declare-fun x1094 () Int)
(declare-fun x2173 () Int)
(declare-fun x1323 () Bool)
(declare-fun x2424 () Bool)
(declare-fun x2090 () Bool)
(declare-fun x818 () Bool)
(declare-fun x2327 () Int)
(declare-fun x1923 () Int)
(declare-fun x2387 () Int)
(declare-fun x1198 () Int)
(declare-fun x1520 () Bool)
(declare-fun x1885 () Bool)
(declare-fun x1979 () Bool)
(declare-fun x2325 () Bool)
(declare-fun x1517 () Int)
(declare-fun x98 () Bool)
(declare-fun x2079 () Int)
(declare-fun x645 () Int)
(declare-fun x1780 () Bool)
(declare-fun x110 () Bool)
(declare-fun x1811 () Int)
(declare-fun x310 () Bool)
(declare-fun x1088 () Int)
(declare-fun x2313 () Int)
(declare-fun x1290 () x550)
(declare-fun x241 () Int)
(declare-fun x2437 () Int)
(declare-fun x1634 () Int)
(declare-fun x220 () Bool)
(declare-fun x2391 () Bool)
(declare-fun x130 () Int)
(declare-fun x1153 () Int)
(declare-fun x83 () Int)
(declare-fun x1163 () Int)
(declare-fun x2234 () Bool)
(declare-fun x1838 () Bool)
(declare-fun x1503 () Int)
(declare-fun x1447 () Bool)
(declare-fun x1744 () Bool)
(declare-fun x182 () Int)
(declare-fun x1389 () Int)
(declare-fun x2132 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x450 () x550)
(declare-fun x563 () Bool)
(declare-fun x1682 () Bool)
(declare-fun x421 () Bool)
(declare-fun x2115 () Int)
(declare-fun x2343 () Int)
(declare-fun x555 () Int)
(declare-fun x1849 () Int)
(declare-fun x1823 (Int) Int)
(declare-fun x1636 () Int)
(declare-fun x460 () Bool)
(declare-fun x2077 () Int)
(declare-fun x81 () Int)
(declare-fun x274 () Int)
(declare-fun x1997 () Bool)
(declare-fun x2461 () Int)
(declare-fun x68 () Bool)
(declare-fun x2456 () Int)
(declare-fun x1975 () Int)
(declare-fun x1717 () Bool)
(declare-fun x971 () Int)
(declare-fun x1108 () Int)
(declare-fun x1769 () x550)
(declare-fun x1542 () Bool)
(declare-fun x899 () Int)
(declare-fun x2377 () Bool)
(declare-fun x1548 () Int)
(declare-fun x2093 () Bool)
(declare-fun x597 () Bool)
(declare-fun x2174 () Bool)
(declare-fun x765 () x550)
(declare-fun x828 () Int)
(declare-fun x1230 () Bool)
(declare-fun x1430 () Int)
(declare-fun x38 () Int)
(declare-fun x2084 () Int)
(declare-fun x799 () Int)
(declare-fun x600 () x550)
(declare-fun x1045 () Int)
(declare-fun x1268 () Bool)
(declare-fun x2297 () Bool)
(declare-fun x474 () Bool)
(declare-fun x24 () Int)
(declare-fun x2339 () Bool)
(declare-fun x1850 () Int)
(declare-fun x2326 () Bool)
(declare-fun x2352 () Int)
(declare-fun x1155 () x550)
(declare-fun x2118 () Int)
(declare-fun x1463 () Bool)
(declare-fun x2261 () Int)
(declare-fun x1492 () Int)
(declare-fun x2073 () Int)
(declare-fun x375 () Int)
(declare-fun x1358 () Bool)
(declare-fun x708 () Bool)
(declare-fun x137 () Bool)
(declare-fun x495 () Int)
(declare-fun x1378 () Int)
(declare-fun x1683 () Bool)
(declare-fun x790 () Int)
(declare-fun x1981 () Int)
(declare-fun x1332 () Int)
(declare-fun x568 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x1946 () Bool)
(declare-fun x114 () Int)
(declare-fun x2188 () Bool)
(declare-fun x1385 () Int)
(declare-fun x2267 () Int)
(declare-fun x275 () Bool)
(declare-fun x178 () Bool)
(declare-fun x2187 () Bool)
(declare-fun x2101 () Int)
(declare-fun x2047 () Bool)
(declare-fun x463 () Int)
(declare-fun x851 () Int)
(declare-fun x325 () Int)
(declare-fun x1318 () Bool)
(declare-fun x308 () Bool)
(declare-fun x1173 () Bool)
(declare-fun x1826 () Bool)
(declare-fun x1174 () Int)
(declare-fun x64 () Int)
(declare-fun x843 () Int)
(declare-fun x2170 () Bool)
(declare-fun x1116 () Int)
(declare-fun x211 () Int)
(declare-fun x520 () x550)
(declare-fun x1883 () Bool)
(declare-fun x672 () Int)
(declare-fun x894 () Bool)
(declare-fun x2479 () x550)
(declare-fun x2085 () Bool)
(declare-fun x1553 (x550) Int)
(declare-fun x1947 () Bool)
(declare-fun x876 () Int)
(declare-fun x1024 () Bool)
(declare-fun x890 () x550)
(declare-fun x292 () Int)
(declare-fun x1547 () Int)
(declare-fun x1554 () Int)
(declare-fun x461 () Bool)
(declare-fun x462 () Bool)
(declare-fun x1504 () Int)
(declare-fun x1792 () Int)
(declare-fun x1428 () Int)
(declare-fun x2225 () Int)
(declare-fun x2353 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x1759 () x550)
(declare-fun x1127 () Int)
(declare-fun x2484 () Bool)
(declare-fun x1915 () Int)
(declare-fun x260 () Bool)
(declare-fun x1316 () Int)
(declare-fun x908 () Int)
(declare-fun x514 () Bool)
(declare-fun x218 () Bool)
(declare-fun x577 () Bool)
(declare-fun x1484 () Int)
(declare-fun x2061 () Bool)
(declare-fun x1705 () Int)
(declare-fun x488 () Int)
(declare-fun x904 () Bool)
(declare-fun x824 () Bool)
(declare-fun x1929 () Int)
(declare-fun x1093 () Bool)
(declare-fun x2030 () Bool)
(declare-fun x2434 () Int)
(declare-fun x301 () Bool)
(declare-fun x998 (x550) Int)
(declare-fun x544 () Bool)
(declare-fun x734 () Int)
(declare-fun x595 () Int)
(declare-fun x394 () x550)
(declare-fun x1645 () Int)
(declare-fun x1866 () Int)
(declare-fun x422 () Bool)
(declare-fun x718 () Int)
(declare-fun x519 () Bool)
(declare-fun x2284 () Bool)
(declare-fun x1834 () x550)
(declare-fun x2465 () Bool)
(declare-fun x704 () Int)
(declare-fun x1613 () Int)
(declare-fun x1833 () Bool)
(declare-fun x2033 () Bool)
(declare-fun x1289 () Int)
(declare-fun x2249 () Int)
(declare-fun x1802 () Bool)
(declare-fun x793 () Int)
(declare-fun x93 () x550)
(declare-fun x1209 () Int)
(declare-fun x1986 () Int)
(declare-fun x999 () Int)
(declare-fun x809 () Int)
(declare-fun x154 () Int)
(declare-fun x820 () Int)
(declare-fun x1897 () Int)
(declare-fun x830 () Int)
(declare-fun x2316 () Bool)
(declare-fun x11 () Int)
(declare-fun x1118 () Int)
(declare-fun x2273 () Bool)
(declare-fun x944 () Int)
(declare-fun x73 () Bool)
(declare-fun x82 () Bool)
(declare-fun x1692 () Int)
(declare-fun x1298 () Bool)
(declare-fun x973 () Bool)
(declare-fun x1756 () Int)
(declare-fun x90 () Bool)
(declare-fun x2054 () Bool)
(declare-fun x1052 () Int)
(declare-fun x1124 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x727 () Int)
(declare-fun x812 () Int)
(declare-fun x2242 () Int)
(declare-fun x775 () Bool)
(declare-fun x429 () Int)
(declare-fun x1303 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x1816 () Bool)
(declare-fun x376 () Int)
(declare-fun x1333 () Int)
(declare-fun x244 () Bool)
(declare-fun x425 () Int)
(declare-fun x655 () Int)
(declare-fun x1117 () Int)
(declare-fun x832 () x550)
(declare-fun x749 () Int)
(declare-fun x901 () Int)
(declare-fun x487 () Int)
(declare-fun x386 () Int)
(declare-fun x1419 () Int)
(declare-fun x113 () x550)
(declare-fun x1301 () Int)
(declare-fun x419 () Int)
(declare-fun x1698 () Bool)
(declare-fun x2254 () Bool)
(declare-fun x1220 () Int)
(declare-fun x1458 () Int)
(declare-fun x2270 () Bool)
(declare-fun x1827 () Int)
(declare-fun x1324 () Int)
(declare-fun x1971 () Bool)
(declare-fun x1408 () Int)
(declare-fun x1950 () Bool)
(declare-fun x27 () Bool)
(declare-fun x2406 () Int)
(declare-fun x620 () Int)
(declare-fun x351 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x2374 () Int)
(declare-fun x1875 () Int)
(declare-fun x1009 () Int)
(declare-fun x1179 () Int)
(declare-fun x67 () Bool)
(declare-fun x953 () Int)
(declare-fun x524 () Int)
(declare-fun x1206 () Bool)
(declare-fun x475 () Int)
(declare-fun x74 () x550)
(declare-fun x1925 () x550)
(declare-fun x379 () Int)
(declare-fun x2001 () Bool)
(declare-fun x621 () Bool)
(declare-fun x2382 () x550)
(declare-fun x2508 () Int)
(declare-fun x905 () Int)
(declare-fun x1768 (Int) Int)
(declare-fun x1276 () Bool)
(declare-fun x446 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x760 () Bool)
(declare-fun x623 () Bool)
(declare-fun x804 () Int)
(declare-fun x1684 () Int)
(declare-fun x706 () Int)
(declare-fun x10 () Int)
(declare-fun x1753 () Int)
(declare-fun x17 () Bool)
(declare-fun x1697 () Bool)
(declare-fun x2198 () Int)
(declare-fun x1001 () Int)
(declare-fun x1749 () x550)
(declare-fun x883 () Bool)
(declare-fun x1539 () Int)
(declare-fun x2286 () Bool)
(declare-fun x739 () Int)
(declare-fun x930 () Int)
(declare-fun x1107 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x1168 () Int)
(declare-fun x1815 () Bool)
(declare-fun x2428 () Bool)
(declare-fun x33 () Int)
(declare-fun x1582 () Bool)
(declare-fun x1372 () Int)
(declare-fun x640 () x550)
(declare-fun x803 () Int)
(declare-fun x1080 () Bool)
(declare-fun x1146 () Int)
(declare-fun x1868 () Int)
(declare-fun x2160 () Bool)
(declare-fun x2443 () Int)
(declare-fun x2237 () Bool)
(declare-fun x1549 () Bool)
(declare-fun x2193 () Int)
(declare-fun x570 () Int)
(declare-fun x1157 () Int)
(declare-fun x8 () Bool)
(declare-fun x618 () Bool)
(declare-fun x1767 () Bool)
(declare-fun x328 () Int)
(declare-fun x990 () Bool)
(declare-fun x72 () Int)
(declare-fun x191 () Int)
(declare-fun x2491 () Bool)
(declare-fun x22 () Bool)
(declare-fun x1183 () Int)
(declare-fun x1295 () Bool)
(declare-fun x2445 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x1151 () Int)
(declare-fun x636 () Bool)
(declare-fun x1927 () Bool)
(declare-fun x866 () Bool)
(declare-fun x199 () Int)
(declare-fun x1592 () Int)
(declare-fun x1847 () Bool)
(declare-fun x1310 () Int)
(declare-fun x1529 () Bool)
(declare-fun x1216 (Int) Int)
(declare-fun x538 () Int)
(declare-fun x2180 () Bool)
(declare-fun x99 () Int)
(declare-fun x36 () Int)
(declare-fun x2355 () Int)
(declare-fun x1990 () Bool)
(declare-fun x2338 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x2058 () Bool)
(declare-fun x1201 () Bool)
(declare-fun x1391 () Bool)
(declare-fun x2209 () Int)
(declare-fun x531 () Bool)
(declare-fun x859 () Int)
(declare-fun x1138 () Bool)
(declare-fun x1677 () Int)
(declare-fun x796 () Int)
(declare-fun x459 () Int)
(declare-fun x472 () Bool)
(declare-fun x85 () Bool)
(declare-fun x1968 () Int)
(declare-fun x773 () Int)
(declare-fun x2315 () Bool)
(declare-fun x2036 () Int)
(declare-fun x2141 () Int)
(declare-fun x596 () Bool)
(declare-fun x770 () Bool)
(declare-fun x1942 () Int)
(declare-fun x2342 () Bool)
(declare-fun x2095 () Int)
(declare-fun x767 () Bool)
(declare-fun x1224 () Int)
(declare-fun x2365 () Int)
(declare-fun x2384 () Int)
(declare-fun x1219 () Bool)
(declare-fun x396 () Int)
(declare-fun x1106 () Int)
(declare-fun x741 () Bool)
(declare-fun x147 () Bool)
(declare-fun x2345 () Bool)
(declare-fun x1918 () Int)
(declare-fun x2314 () Int)
(declare-fun x1397 () Int)
(declare-fun x530 () Int)
(declare-fun x303 () Bool)
(declare-fun x974 () Bool)
(declare-fun x1097 (Int) Int)
(declare-fun x1560 () Bool)
(declare-fun x1713 () Int)
(declare-fun x1114 () Int)
(declare-fun x1137 (Int Int) Int)
(declare-fun x566 () Int)
(declare-fun x1339 () Int)
(declare-fun x1921 (Int) Int)
(declare-fun x1651 () Bool)
(declare-fun x674 () Bool)
(declare-fun x2466 () Bool)
(declare-fun x853 () x550)
(declare-fun x1644 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x786 () Bool)
(declare-fun x2281 () Int)
(declare-fun x553 () Bool)
(declare-fun x2490 () Int)
(declare-fun x171 () Int)
(declare-fun x2060 () Bool)
(declare-fun x1521 () Bool)
(declare-fun x402 () Int)
(declare-fun x610 () x550)
(declare-fun x209 () Bool)
(declare-fun x2092 (Int Int) Int)
(declare-fun x2022 () Int)
(declare-fun x684 () Int)
(declare-fun x1543 () Bool)
(declare-fun x1796 () Int)
(declare-fun x272 () Int)
(declare-fun x2408 () Int)
(declare-fun x2213 () Int)
(declare-fun x1267 () Bool)
(declare-fun x149 () Int)
(declare-fun x1674 () Bool)
(declare-fun x2137 () Int)
(declare-fun x1438 () Int)
(declare-fun x867 () x550)
(declare-fun x929 () Bool)
(declare-fun x537 () Int)
(declare-fun x341 () Int)
(declare-fun x781 () Int)
(declare-fun x1273 () x550)
(declare-fun x2292 () Bool)
(declare-fun x1292 () Int)
(declare-fun x1386 () Int)
(declare-fun x996 () Bool)
(declare-fun x359 () Bool)
(declare-fun x1342 () Int)
(declare-fun x111 () Int)
(declare-fun x2069 () Int)
(declare-fun x194 () Bool)
(declare-fun x2114 () Int)
(declare-fun x1266 (Int Int) Int)
(declare-fun x1195 () Int)
(declare-fun x432 () Int)
(declare-fun x639 () Bool)
(declare-fun x52 () x550)
(declare-fun x964 () Int)
(declare-fun x2002 () Bool)
(declare-fun x44 () Int)
(declare-fun x915 () Int)
(declare-fun x647 () Int)
(declare-fun x342 () Int)
(declare-fun x1208 () Bool)
(declare-fun x1113 () Int)
(declare-fun x2096 () Int)
(declare-fun x1738 () Bool)
(declare-fun x1006 () Bool)
(declare-fun x2081 () Bool)
(declare-fun x13 () Int)
(declare-fun x1215 () Bool)
(declare-fun x871 () Bool)
(declare-fun x822 () Bool)
(declare-fun x1716 () x550)
(declare-fun x1633 () Bool)
(declare-fun x837 () Int)
(declare-fun x2499 () Int)
(declare-fun x2416 () Bool)
(declare-fun x823 () Bool)
(declare-fun x599 () Bool)
(declare-fun x60 () Int)
(declare-fun x1078 () Int)
(declare-fun x1922 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x1541 () Int)
(declare-fun x2189 () Int)
(declare-fun x1933 () Bool)
(declare-fun x259 () Bool)
(declare-fun x2282 () Bool)
(declare-fun x2050 () Int)
(declare-fun x1221 () Bool)
(declare-fun x642 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x2023 () Bool)
(declare-fun x1377 () Int)
(declare-fun x2152 () Bool)
(declare-fun x1886 () x550)
(declare-fun x833 () Int)
(declare-fun x1020 () Int)
(declare-fun x1457 () Bool)
(declare-fun x1798 () Bool)
(declare-fun x2042 () Bool)
(declare-fun x997 () Int)
(declare-fun x2419 () Int)
(declare-fun x1519 () Int)
(declare-fun x2099 () Bool)
(declare-fun x1325 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x836 () Int)
(declare-fun x1964 () Bool)
(declare-fun x1982 () Bool)
(declare-fun x710 () Int)
(declare-fun x525 () Int)
(declare-fun x1502 () Int)
(declare-fun x703 () Int)
(declare-fun x677 () Bool)
(declare-fun x2088 () Bool)
(declare-fun x1731 () Int)
(declare-fun x1410 () Bool)
(declare-fun x1793 () Int)
(declare-fun x2288 () Int)
(declare-fun x2265 () Bool)
(declare-fun x630 () Int)
(declare-fun x1789 () Int)
(declare-fun x70 () Bool)
(declare-fun x2236 () Bool)
(declare-fun x158 () Int)
(declare-fun x1409 () Int)
(declare-fun x884 () Int)
(declare-fun x1678 () x550)
(declare-fun x1233 () Int)
(declare-fun x1135 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x668 () Int)
(declare-fun x2256 () Int)
(declare-fun x510 () Int)
(declare-fun x364 () Bool)
(declare-fun x65 () Bool)
(declare-fun x931 () Int)
(declare-fun x321 () Bool)
(declare-fun x2489 () Int)
(declare-fun x1934 () Bool)
(declare-fun x1680 () Bool)
(declare-fun x381 () Int)
(declare-fun x21 () Int)
(declare-fun x1735 () Bool)
(declare-fun x1797 () Int)
(declare-fun x606 () Bool)
(declare-fun x1536 () Bool)
(declare-fun x1773 () Bool)
(declare-fun x679 () Bool)
(declare-fun x1086 () Int)
(declare-fun x1641 () Int)
(declare-fun x1241 () Bool)
(declare-fun x985 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x224 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x201 () x550)
(declare-fun x720 () Int)
(declare-fun x333 () Int)
(declare-fun x701 () Bool)
(declare-fun x939 () Int)
(declare-fun x230 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x936 () Int)
(declare-fun x1508 () Bool)
(declare-fun x991 () Bool)
(declare-fun x336 () Int)
(declare-fun x160 () Int)
(declare-fun x671 () Int)
(declare-fun x2135 () Int)
(declare-fun x992 () Int)
(declare-fun x1583 () Bool)
(declare-fun x782 () Int)
(declare-fun x1417 () Bool)
(declare-fun x1774 () Bool)
(declare-fun x2275 () Int)
(declare-fun x2480 () Int)
(declare-fun x496 () Bool)
(declare-fun x1806 () Int)
(declare-fun x1765 () Int)
(declare-fun x2367 () Int)
(declare-fun x690 () Int)
(declare-fun x616 () Int)
(declare-fun x662 () Bool)
(declare-fun x1172 () Bool)
(declare-fun x878 () Bool)
(declare-fun x370 () Int)
(declare-fun x2016 () Int)
(declare-fun x345 () Bool)
(declare-fun x2051 () x550)
(declare-fun x1355 () Int)
(declare-fun x1159 () Int)
(declare-fun x2021 () Int)
(declare-fun x1451 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x1654 () Int)
(declare-fun x772 () Bool)
(declare-fun x453 () Int)
(declare-fun x1453 () Bool)
(declare-fun x622 () Bool)
(declare-fun x2500 () Bool)
(declare-fun x614 () Bool)
(declare-fun x1961 () Int)
(declare-fun x175 () Int)
(declare-fun x401 () Int)
(declare-fun x312 () Bool)
(declare-fun x1464 (x550) Int)
(declare-fun x2172 (x550) Int)
(declare-fun x66 () Int)
(declare-fun x1500 () Int)
(define-fun x295 ((x550 x550) (x18 Int)) x550 (ite ((_ is x314) x550) (x314 (x1171 x550) (x350 x550) (x1139 x550) (x1490 x550) (x1856 x550) (x872 x550) (x371 x550) (+ x18 (x1125 x550))) (ite ((_ is x1254) x550) (x1254 (x719 x550) (x515 x550) (x1147 x550) (x2271 x550) (x1460 x550) (x2290 x550) (+ (x757 x550) x18)) (ite ((_ is x1068) x550) (x1068 (x2229 x550) (x1013 x550) (x2009 x550) (x1164 x550) (x410 x550) (+ x18 (x869 x550))) (ite ((_ is x523) x550) (x523 (x2138 x550) (x2462 x550) (x6 x550) (x1130 x550) (+ x18 (x493 x550))) (ite ((_ is x2298) x550) (x2298 (x1726 x550) (x2103 x550) (x1000 x550) (+ x18 (x2162 x550))) (ite ((_ is x1365) x550) (x1365 (x540 x550) (+ (x108 x550) x18)) (ite ((_ is x115) x550) (x115 (x795 x550) (x2364 x550) (+ (x2120 x550) x18)) (x779 (+ (x945 x550) x18))))))))))
(define-fun x2260 ((x205 Int)) Int (ite (and (< x205 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x205)) x205 (- x205 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x287 ((x205 Int)) Int (ite (and (> 0 x205) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x205)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x205) x205))
(define-fun x2183 ((x205 Int)) Int (ite (and (< x205 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x205 0)) x205 (ite (and (< x205 231584178474632390847141970017375815706539969331281128078915168015826259279872) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x205)) (- x205 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x205 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x205)) (+ x205 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x255 x205 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x2007 ((x1706 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1706) (<= 0 x1706)))
(define-fun x1563 ((x1706 Int)) Bool (and (= x1706 (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1706)) (= (x1595 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1706)))
(define-fun x2356 ((x1706 Int)) Bool (and (= 0 (x1595 x1706 0)) (= 0 (x1595 0 x1706))))
(define-fun x1432 ((x1706 Int)) Bool (= (x1595 x1706 x1706) x1706))
(define-fun x747 ((x1706 Int)) Bool (and (x1563 x1706) (x2356 x1706) (x1432 x1706)))
(define-fun x1048 ((x1706 Int) (x373 Int)) Bool (= (x1595 x373 x1706) (x1595 x1706 x373)))
(define-fun x32 ((x1706 Int) (x373 Int)) Bool (and (>= (x1595 x1706 x373) 0) (=> (<= 0 x373) (<= (x1595 x1706 x373) x373)) (=> (>= x1706 0) (<= (x1595 x1706 x373) x1706))))
(define-fun x1791 ((x1706 Int) (x373 Int)) Bool (and (x1048 x1706 x373) (x32 x1706 x373)))
(define-fun x1014 ((x1706 Int)) Bool (= (+ (x1595 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x255 x1706 32)) (x2183 x1706)))
(define-fun x2250 ((x1706 Int)) Bool (and (x1791 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1014 x1706)))
(define-fun x48 ((x1706 Int) (x373 Int)) Bool (and (> x373 (x255 x1706 x373)) (<= 0 (x255 x1706 x373))))
(define-fun x1129 ((x1706 Int) (x373 Int)) Bool (=> (and (> x373 0) (>= x1706 0)) (= (= x1706 (x255 x1706 x373)) (> x373 x1706))))
(define-fun x270 ((x1706 Int) (x373 Int)) Bool (=> (and (< 0 x373) (and (> (+ x373 x373) x1706) (>= x1706 x373))) (= (x255 x1706 x373) (- x1706 x373))))
(define-fun x1255 ((x1706 Int)) Bool (= 0 (x255 0 x1706)))
(define-fun x29 ((x1706 Int)) Bool (= (x255 x1706 1) 0))
(define-fun x1615 ((x1706 Int)) Bool (= (x255 x1706 x1706) 0))
(define-fun x877 ((x1706 Int)) Bool (and (x29 x1706) (x1255 x1706) (x1615 x1706)))
(define-fun x1764 ((x1706 Int) (x373 Int)) Bool (=> (and (> x1706 0) (< 0 x373)) (and (<= 0 (x1266 x1706 x373)) (>= x1706 (x1266 x1706 x373)))))
(define-fun x2165 ((x1706 Int) (x373 Int)) Bool (=> (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1706) (>= x1706 0)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x373) (>= x373 1))) (and (< (x1266 x1706 x373) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 (x1266 x1706 x373)))))
(define-fun x1404 ((x1706 Int) (x373 Int)) Bool (=> (and (< x373 x1706) (> x373 1)) (< (x1266 x1706 x373) x1706)))
(define-fun x2501 ((x1706 Int) (x373 Int)) Bool (=> (and (< 0 x373) (< 0 x1706)) (= (= 0 (x1266 x1706 x373)) (> x373 x1706))))
(define-fun x1828 ((x1706 Int)) Bool (= (x1266 0 x1706) 0))
(define-fun x234 ((x1706 Int)) Bool (= x1706 (x1266 x1706 1)))
(define-fun x2128 ((x1706 Int)) Bool (=> (not (= 0 x1706)) (= 1 (x1266 x1706 x1706))))
(define-fun x885 ((x1706 Int)) Bool (and (x1828 x1706) (x2128 x1706) (x234 x1706)))
(define-fun x2274 ((x1706 Int)) Bool (= (+ (x1595 x1706 131072) (x255 x1706 131072)) (x255 x1706 262144)))
(define-fun x1954 ((x1706 Int)) Bool (and (x1791 x1706 131072) (x2274 x1706)))
(define-fun x1188 ((x1706 Int)) Bool (= (x255 x1706 2) (x1595 x1706 1)))
(define-fun x1750 ((x1706 Int)) Bool (and (x1791 x1706 1) (x1188 x1706)))
(define-fun x378 ((x1706 Int)) Bool (= (x255 x1706 128) (x1595 x1706 127)))
(define-fun x15 ((x1706 Int)) Bool (and (x378 x1706) (x1791 x1706 127)))
(define-fun x1778 ((x1706 Int) (x373 Int)) Bool (=> (and (> x373 0) (> x1706 0)) (= (< (x482 x1706 x373) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1266 (x2183 (x482 x1706 x373)) x1706) x373))))
(define-fun x699 ((x1706 Int) (x373 Int)) Bool (=> (and (not (= x373 0)) (not (= 0 x1706))) (and (= x1706 (x1266 (x482 x1706 x373) x373)) (= (x1266 (x482 x1706 x373) x1706) x373))))
(define-fun x2495 ((x1706 Int) (x373 Int)) Bool (=> (and (> x1706 0) (> x373 0)) (= (< (x1266 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1706) x373) (> (x482 x1706 x373) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x509 ((x1706 Int) (x373 Int)) Bool (and (= (x2183 (x482 (- x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x373 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2183 (x482 x1706 x373))) (= (x2183 (x482 x1706 (- x373 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x2183 (x482 x1706 x373))) (= (x2183 (x482 x1706 x373)) (x2183 (x482 (- x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) x373)))))
(define-fun x1905 ((x1706 Int) (x373 Int)) Bool (and (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1706) (> x1706 0)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x373) (> x373 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x373) (x1266 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1706)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x482 x1706 (- x373 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (<= x1706 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1706)) (and (<= x373 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x373))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x482 (- x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) x373)) (>= (x1266 57896044618658097711785492504343953926634992332820282019728792003956564819968 x373) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1706)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x373) (<= x373 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (> x1706 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1706))) (= (>= (x1266 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x373)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1706)) (<= (x482 (- x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x373 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (<= x1706 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1706 0)) (and (<= x373 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x373))) (= (>= (x1266 57896044618658097711785492504343953926634992332820282019728792003956564819967 x373) x1706) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x482 x1706 x373))))))
(define-fun x1042 ((x1706 Int)) Bool (and (= (x482 0 x1706) 0) (= (x482 x1706 0) 0)))
(define-fun x1189 ((x1706 Int)) Bool (and (= x1706 (x482 x1706 1)) (= x1706 (x482 1 x1706))))
(define-fun x1330 ((x1706 Int)) Bool (and (x1042 x1706) (x1189 x1706)))
(define-fun x2163 ((x1706 Int)) Bool (= (+ (x255 x1706 65536) (x1595 x1706 65536)) (x255 x1706 131072)))
(define-fun x669 ((x1706 Int)) Bool (and (x1791 x1706 65536) (x2163 x1706)))
(define-fun x2171 ((x1706 Int)) Bool (= (x255 x1706 4294967296) (+ (x1595 x1706 4294901760) (x255 x1706 65536))))
(define-fun x1763 ((x1706 Int)) Bool (and (x1791 x1706 4294901760) (x2171 x1706)))
(define-fun x1810 ((x1706 Int)) Bool (= (+ (x255 x1706 32) (x1595 x1706 32)) (x255 x1706 64)))
(define-fun x2421 ((x1706 Int)) Bool (and (x1810 x1706) (x1791 x1706 32)))
(define-fun x692 ((x1706 Int)) Bool (= (x1595 x1706 18446744073709551615) (x255 x1706 18446744073709551616)))
(define-fun x811 ((x1706 Int)) Bool (and (x692 x1706) (x1791 x1706 18446744073709551615)))
(define-fun x124 ((x1706 Int)) Bool (and (= (x2215 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2215 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1706) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x586 ((x1706 Int)) Bool (and (= (x2215 x1706 0) x1706) (= x1706 (x2215 0 x1706))))
(define-fun x840 ((x1706 Int)) Bool (= (x2215 x1706 x1706) x1706))
(define-fun x1711 ((x1706 Int)) Bool (and (x124 x1706) (x586 x1706) (x840 x1706)))
(define-fun x2071 ((x1706 Int) (x373 Int)) Bool (= (x2215 x1706 x373) (x2215 x373 x1706)))
(define-fun x1004 ((x1706 Int) (x373 Int)) Bool (and (>= (+ x373 x1706) (x2215 x1706 x373)) (=> (<= 0 x1706) (>= (x2215 x1706 x373) x1706)) (=> (<= 0 x373) (>= (x2215 x1706 x373) x373))))
(define-fun x1061 ((x1706 Int) (x373 Int)) Bool (and (x2071 x1706 x373) (x1004 x1706 x373)))
(define-fun x1901 ((x1706 Int)) Bool (= (x1595 x1706 1461501637330902918203684832716283019655932542975) (x255 x1706 1461501637330902918203684832716283019655932542976)))
(define-fun x2149 ((x1706 Int)) Bool (and (x1791 x1706 1461501637330902918203684832716283019655932542975) (x1901 x1706)))
(define-fun x587 ((x1706 Int)) Bool (= (x1595 x1706 4294967295) (x255 x1706 4294967296)))
(define-fun x1112 ((x1706 Int)) Bool (and (x587 x1706) (x1791 x1706 4294967295)))
(define-fun x87 ((x1706 Int)) Bool (=> (and (> 131072 x1706) (>= x1706 0)) (= 4294836223 (x2215 4294836223 x1706))))
(define-fun x2011 ((x1706 Int)) Bool (and (x87 x1706) (x1061 x1706 4294836223)))
(define-fun x1371 ((x1706 Int)) Bool (= (x255 x1706 256) (x1595 x1706 255)))
(define-fun x855 ((x1706 Int)) Bool (and (x1371 x1706) (x1791 x1706 255)))
(define-fun x133 ((x1706 Int)) Bool (= (- x1706 (x1595 x1706 4294901760)) (x1595 x1706 115792089237316195423570985008687907853269984665640564039457584007908834738175)))
(define-fun x2376 ((x1706 Int)) Bool (and (x1791 x1706 115792089237316195423570985008687907853269984665640564039457584007908834738175) (x133 x1706)))
(define-fun x861 ((x1706 Int)) Bool (= (x1595 x1706 65535) (x255 x1706 65536)))
(define-fun x452 ((x1706 Int)) Bool (and (x1791 x1706 65535) (x861 x1706)))
(define-fun x2164 ((x1706 Int)) Bool (=> (and (>= x1706 0) (> 2 x1706)) (= x1706 (x1595 65537 x1706))))
(define-fun x1275 ((x1706 Int)) Bool (and (x2164 x1706) (x1791 x1706 65537)))
(define-fun x1884 ((x1706 Int)) Bool (= (+ (x1595 x1706 4) (x255 x1706 4)) (x255 x1706 8)))
(define-fun x1590 ((x1706 Int)) Bool (and (x1884 x1706) (x1791 x1706 4)))
(define-fun x276 ((x1706 Int)) Bool (= (+ (x1595 x1706 115792089210356248756420345214020892766250353992003419616917011526809519390720) (x255 x1706 26959946667150639794667015087019630673637144422540572481103610249216)) (x2183 x1706)))
(define-fun x601 ((x1706 Int)) Bool (and (x1791 x1706 115792089210356248756420345214020892766250353992003419616917011526809519390720) (x276 x1706)))
(define-fun x1326 ((x1706 Int) (x373 Int)) Bool (=> (and (< 0 x1706) (> x373 0)) (and (<= (x482 (x1266 x1706 x373) x373) x1706) (> (x482 (x1266 x1706 x373) x373) (- x1706 x373)))))
(define-fun x1056 ((x1706 Int) (x373 Int)) Bool (and (x2501 x1706 x373) (x1404 x1706 x373) (x2165 x1706 x373) (x1764 x1706 x373) (x1326 x1706 x373)))
(define-fun x317 ((x1706 Int)) Bool (= (x255 x1706 32) (x1595 x1706 31)))
(define-fun x842 ((x1706 Int)) Bool (and (x1791 x1706 31) (x317 x1706)))
(define-fun x1631 ((x1653 Int)) Int (x1216 x1653))
(define-fun x103 ((x1653 Int)) Int (ite (= x1653 128) x1198 (x565 x1653)))
(define-fun x455 ((x1653 Int)) Int (ite (and (< x1653 (+ x1198 160)) (<= 160 x1653)) (x1216 (+ (- x1653 160) x319)) (x103 x1653)))
(define-fun x522 ((x1653 Int)) Int (ite (= x2365 x1653) 0 (x455 x1653)))
(define-fun x753 ((x1653 Int)) Int (ite (= x1653 x405) x2114 (x522 x1653)))
(define-fun x2255 ((x1653 Int)) Int (ite (= x1653 x999) x595 (x753 x1653)))
(define-fun x2 ((x1653 Int)) Int (ite (= x999 x1653) x909 (x753 x1653)))
(define-fun x1412 ((x1653 Int)) Int (ite (= x683 x1653) x2343 (x2255 x1653)))
(define-fun x232 ((x1653 Int)) Int (ite x701 (x753 x1653) (ite x1288 (ite x1350 (x2255 x1653) (x1412 x1653)) (x2 x1653))))
(define-fun x2176 ((x1653 Int)) Int (ite x2132 (x522 x1653) (x232 x1653)))
(define-fun x1752 ((x1653 Int)) Int (ite (= x1625 x1653) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x2176 x1653)))
(define-fun x1073 ((x1653 Int)) Int (ite (= x1653 x2434) (x998 x201) (x1752 x1653)))
(define-fun x2230 ((x1653 Int)) Int (ite (and (< x1653 (+ x1625 32)) (<= x1625 x1653)) (x2211 (+ 0 (- x1653 x1625))) (x1073 x1653)))
(define-fun x827 ((x1653 Int)) Int (ite x1472 (x2230 x1653) (x1073 x1653)))
(define-fun x2283 ((x1653 Int)) Int (ite x106 (x827 x1653) (x2176 x1653)))
(define-fun x591 ((x1653 Int)) Int (ite (= x1195 x1653) x1531 (x2283 x1653)))
(define-fun x504 ((x1653 Int)) Int (ite (= x1653 x2508) (x998 x2246) (x591 x1653)))
(define-fun x1895 ((x1653 Int)) Int (ite (= x1694 x1653) x2402 (x504 x1653)))
(define-fun x1486 ((x1653 Int)) Int (ite (= x1653 x1429) 1058533858861509001837889330765714424124041949802528273061784713247848398848 (x1895 x1653)))
(define-fun x480 ((x1653 Int)) Int (ite (= x1653 x1183) (x998 x651) (x1486 x1653)))
(define-fun x2119 ((x1653 Int)) Int (ite (and (< x1653 (+ 32 x1429)) (<= x1429 x1653)) (x1768 (+ (- x1653 x1429) 0)) (x480 x1653)))
(define-fun x311 ((x1653 Int)) Int (ite x85 (x2119 x1653) (x480 x1653)))
(define-fun x2410 ((x1653 Int)) Int (ite (= x1653 x1579) x2175 (x311 x1653)))
(define-fun x726 ((x1653 Int)) Int (ite (= x1653 x2035) x155 (x2410 x1653)))
(define-fun x1650 ((x1653 Int)) Int (ite (= x682 x1653) x1892 (x726 x1653)))
(define-fun x427 ((x1653 Int)) Int (ite (= x1653 x2035) x13 (x2410 x1653)))
(define-fun x497 ((x1653 Int)) Int (ite x1967 (x2410 x1653) (ite x16 (ite x1883 (x726 x1653) (x1650 x1653)) (x427 x1653))))
(define-fun x360 ((x1653 Int)) Int (ite x2056 (x497 x1653) (x311 x1653)))
(define-fun x2094 ((x1653 Int)) Int (ite (= x1653 x91) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x360 x1653)))
(define-fun x1862 ((x1653 Int)) Int (ite (= x1653 x549) (x998 x967) (x2094 x1653)))
(define-fun x1602 ((x1653 Int)) Int (ite (and (>= x1653 x91) (< x1653 (+ 32 x91))) (x437 (+ (- x1653 x91) 0)) (x1862 x1653)))
(define-fun x862 ((x1653 Int)) Int (ite x41 (x1602 x1653) (x1862 x1653)))
(define-fun x1104 ((x1653 Int)) Int (ite (= x1579 x1653) x417 (x311 x1653)))
(define-fun x1300 ((x1653 Int)) Int (ite (= x1988 x1653) x2232 (x1104 x1653)))
(define-fun x1388 ((x1653 Int)) Int (ite (= x1653 x993) x1100 (x1300 x1653)))
(define-fun x2066 ((x1653 Int)) Int (ite (= x1988 x1653) x800 (x1104 x1653)))
(define-fun x506 ((x1653 Int)) Int (ite x2152 (x1104 x1653) (ite x462 (ite x1323 (x1300 x1653) (x1388 x1653)) (x2066 x1653))))
(define-fun x1871 ((x1653 Int)) Int (ite x359 (x506 x1653) (x311 x1653)))
(define-fun x164 ((x1653 Int)) Int (ite (= x1653 x239) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x1871 x1653)))
(define-fun x246 ((x1653 Int)) Int (ite (= x1653 x1405) (x998 x93) (x164 x1653)))
(define-fun x1282 ((x1653 Int)) Int (ite (and (< x1653 (+ 32 x239)) (<= x239 x1653)) (x1535 (+ 0 (- x1653 x239))) (x246 x1653)))
(define-fun x1607 ((x1653 Int)) Int (ite x1775 (x1282 x1653) (x246 x1653)))
(define-fun x1433 ((x1653 Int)) Int (ite x2142 (ite x279 (x862 x1653) (x360 x1653)) (ite x1987 (x1607 x1653) (x1871 x1653))))
(define-fun x2241 ((x1653 Int)) Int (ite (= x1653 x171) x1531 (x1433 x1653)))
(define-fun x1038 ((x1653 Int)) Int (ite (= x458 x1653) (x998 x2169) (x2241 x1653)))
(define-fun x940 ((x1653 Int)) Int (ite (= x1653 x2166) x2116 (x1038 x1653)))
(define-fun x1165 ((x1653 Int)) Int (ite (= x1653 x926) x2384 (x940 x1653)))
(define-fun x1110 ((x1653 Int)) Int (ite (= x1662 x1653) x2109 (x1165 x1653)))
(define-fun x165 ((x1653 Int)) Int (ite (= x367 x1653) x64 (x1110 x1653)))
(define-fun x2214 ((x1653 Int)) Int (ite (= x1662 x1653) x2322 (x1165 x1653)))
(define-fun x946 ((x1653 Int)) Int (ite x67 (x1165 x1653) (ite x1872 (ite x259 (x1110 x1653) (x165 x1653)) (x2214 x1653))))
(define-fun x1771 ((x1653 Int)) Int (ite (= x1653 x401) x1551 (x946 x1653)))
(define-fun x2248 ((x1653 Int)) Int (ite (= x2048 x1653) x700 (x1771 x1653)))
(define-fun x153 ((x1653 Int)) Int (ite (= x2450 x1653) x1814 (x2248 x1653)))
(define-fun x689 ((x1653 Int)) Int (ite (= x2473 x1653) x1869 (x153 x1653)))
(define-fun x1238 ((x1653 Int)) Int (ite (= x1653 x578) x447 (x689 x1653)))
(define-fun x1899 ((x1653 Int)) Int (ite x2315 (x689 x1653) (ite x252 (x153 x1653) (ite x835 (x2248 x1653) (ite x818 (x1771 x1653) (x1238 x1653))))))
(define-fun x1143 ((x1653 Int)) Int (ite (= x1078 x1653) 0 (x1899 x1653)))
(define-fun x1819 ((x1653 Int)) Int (ite (= x1653 x96) x1428 (x1143 x1653)))
(define-fun x1487 ((x1653 Int)) Int (ite (= x1584 x1653) x745 (x1819 x1653)))
(define-fun x1528 ((x1653 Int)) Int (ite (= x1653 x1907) x594 (x1487 x1653)))
(define-fun x1026 ((x1653 Int)) Int (ite (= x1653 x328) x734 (x1528 x1653)))
(define-fun x1374 ((x1653 Int)) Int (ite x972 (x1528 x1653) (ite x303 (x1487 x1653) (ite x1219 (x1819 x1653) (ite x1838 (x1143 x1653) (x1026 x1653))))))
(define-fun x23 ((x1653 Int)) Int (ite (= x1653 x105) 0 (x1374 x1653)))
(define-fun x2280 ((x1653 Int)) Int (ite (= x1653 x1619) x1305 (x23 x1653)))
(define-fun x1402 ((x1653 Int)) Int (ite (= x105 x1653) x2327 (x2280 x1653)))
(define-fun x28 ((x1653 Int)) Int (ite (= x1332 x1653) x785 (x1402 x1653)))
(define-fun x2076 ((x1653 Int)) Int (ite (= x489 x1653) x1089 (x28 x1653)))
(define-fun x117 ((x1653 Int)) Int (ite (= x1332 x1653) x1419 (x1402 x1653)))
(define-fun x2032 ((x1653 Int)) Int (ite x474 (x1402 x1653) (ite x2002 (ite x1900 (x28 x1653) (x2076 x1653)) (x117 x1653))))
(define-fun x1072 ((x1653 Int)) Int (ite x162 (x2280 x1653) (x2032 x1653)))
(define-fun x404 ((x1653 Int)) Int (ite (= x1653 x1539) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x1072 x1653)))
(define-fun x89 ((x1653 Int)) Int (ite (= x778 x1653) (x998 x37) (x404 x1653)))
(define-fun x183 ((x1653 Int)) Int (ite (and (>= x1653 x1539) (> (+ x1539 32) x1653)) (x2324 (+ 0 (- x1653 x1539))) (x89 x1653)))
(define-fun x2040 ((x1653 Int)) Int (ite x2127 (x183 x1653) (x89 x1653)))
(define-fun x500 ((x1653 Int)) Int (ite x1192 (x2040 x1653) (x1072 x1653)))
(define-fun x849 ((x1653 Int)) Int (ite (= x649 x1653) x1348 (x500 x1653)))
(define-fun x75 ((x1653 Int)) Int (ite (= x1653 x375) x580 (x849 x1653)))
(define-fun x1357 ((x1653 Int)) Int (ite (= x2079 x1653) x274 (x75 x1653)))
(define-fun x318 ((x1653 Int)) Int (ite (= x1653 x375) x1106 (x849 x1653)))
(define-fun x634 ((x1653 Int)) Int (ite x2326 (x849 x1653) (ite x2045 (ite x990 (x75 x1653) (x1357 x1653)) (x318 x1653))))
(define-fun x193 ((x1653 Int)) Int (ite x1680 (x634 x1653) (x500 x1653)))
(define-fun x958 ((x1653 Int)) Int (ite (= x1537 x1653) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x193 x1653)))
(define-fun x483 ((x1653 Int)) Int (ite (= x495 x1653) (x998 x2067) (x958 x1653)))
(define-fun x2425 ((x1653 Int)) Int (ite (and (<= x1537 x1653) (> (+ 32 x1537) x1653)) (x1285 (+ 0 (- x1653 x1537))) (x483 x1653)))
(define-fun x1132 ((x1653 Int)) Int (ite x1239 (x2425 x1653) (x483 x1653)))
(define-fun x981 ((x1653 Int)) Int (ite x1669 (x1132 x1653) (x193 x1653)))
(define-fun x1491 ((x1653 Int)) Int (ite (= x876 x1653) x297 (x981 x1653)))
(define-fun x123 ((x1653 Int)) Int (ite (= x1653 x2408) x1099 (x1491 x1653)))
(define-fun x1522 ((x1653 Int)) Int (ite (= x294 x1653) x1541 (x123 x1653)))
(define-fun x626 ((x1653 Int)) Int (ite (= x2408 x1653) x1445 (x1491 x1653)))
(define-fun x660 ((x1653 Int)) Int (ite x819 (x1491 x1653) (ite x1051 (ite x1335 (x123 x1653) (x1522 x1653)) (x626 x1653))))
(define-fun x1989 ((x1653 Int)) Int (ite x2020 (x660 x1653) (x981 x1653)))
(define-fun x2262 ((x1653 Int)) Int (ite (= x1653 x2411) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x1989 x1653)))
(define-fun x1032 ((x1653 Int)) Int (ite (= x83 x1653) (x998 x2155) (x2262 x1653)))
(define-fun x1588 ((x1653 Int)) Int (ite (and (< x1653 (+ 32 x2411)) (<= x2411 x1653)) (x88 (+ (- x1653 x2411) 0)) (x1032 x1653)))
(define-fun x1373 ((x1653 Int)) Int (ite x137 (x1588 x1653) (x1032 x1653)))
(define-fun x1329 ((x1653 Int)) Int (ite x377 (x1373 x1653) (x1989 x1653)))
(define-fun x2487 ((x1653 Int)) Int (ite (= x1653 x2161) 42946364674413620953198879289557591458479223041058917712765633135805412147200 (x1329 x1653)))
(define-fun x170 ((x1653 Int)) Int (ite (= x1653 x1462) x1531 (x2487 x1653)))
(define-fun x1643 ((x1653 Int)) Int (ite (= x1653 x2238) (x998 x2169) (x170 x1653)))
(define-fun x2136 ((x1653 Int)) Int (ite (= x1653 x40) x160 (x1643 x1653)))
(define-fun x478 ((x1653 Int)) Int (ite (= x1526 x1653) x453 (x2136 x1653)))
(define-fun x2205 ((x1653 Int)) Int (ite (= x1653 x891) x340 (x478 x1653)))
(define-fun x910 ((x1653 Int)) Int (ite (and (<= x2161 x1653) (> (+ 0 x2161) x1653)) (x1823 (+ 0 (- x1653 x2161))) (x2205 x1653)))
(define-fun x895 ((x1653 Int)) Int (ite x2463 (x910 x1653) (x2205 x1653)))
(define-fun x236 ((x1653 Int)) Int (ite (= x2161 x1653) x893 (x895 x1653)))
(define-fun x1996 ((x1653 Int)) Int (ite (= x986 x1653) x2256 (x236 x1653)))
(define-fun x1496 ((x1653 Int)) Int (ite (= x1653 x302) x1519 (x1996 x1653)))
(define-fun x43 ((x1653 Int)) Int (ite (= x1653 x986) x2107 (x236 x1653)))
(define-fun x46 ((x1653 Int)) Int (ite x1863 (x236 x1653) (ite x1681 (ite x1529 (x1996 x1653) (x1496 x1653)) (x43 x1653))))
(define-fun x864 ((x1653 Int)) Int (ite (= x826 x1653) x433 (x46 x1653)))
(define-fun x1857 ((x1653 Int)) Int (ite (= x1653 x1632) x887 (x864 x1653)))
(define-fun x129 ((x1653 Int)) Int (ite (= x1653 x1071) x744 (x1857 x1653)))
(define-fun x1690 ((x1653 Int)) Int (ite (= x1653 x180) x777 (x129 x1653)))
(define-fun x1755 ((x1653 Int)) Int (ite (= x1653 x1265) x2150 (x1690 x1653)))
(define-fun x1626 ((x1653 Int)) Int (ite x1633 (x1690 x1653) (ite x2338 (x129 x1653) (ite x694 (x1857 x1653) (ite x2258 (x864 x1653) (x1755 x1653))))))
(define-fun x2239 ((x1653 Int)) Int (ite (= x843 x1653) 0 (x1626 x1653)))
(define-fun x2486 ((x1653 Int)) Int (ite (= x1653 x1114) x1670 (x2239 x1653)))
(define-fun x5 ((x1653 Int)) Int (ite (= x2018 x1653) x2096 (x2486 x1653)))
(define-fun x1053 ((x1653 Int)) Int (ite (= x1653 x343) x834 (x5 x1653)))
(define-fun x695 ((x1653 Int)) Int (ite (= x612 x1653) x163 (x1053 x1653)))
(define-fun x2013 ((x1653 Int)) Int (ite x2061 (x1053 x1653) (ite x217 (x5 x1653) (ite x1251 (x2486 x1653) (ite x2445 (x2239 x1653) (x695 x1653))))))
(define-fun x581 ((x1653 Int)) Int (ite (= x2417 x1653) 0 (x2013 x1653)))
(define-fun x1710 ((x1653 Int)) Int (ite (= x1653 x11) x1423 (x581 x1653)))
(define-fun x1829 ((x1653 Int)) Int (ite (= x2417 x1653) x2276 (x1710 x1653)))
(define-fun x754 ((x1653 Int)) Int (ite (= x1653 x1636) x1362 (x1829 x1653)))
(define-fun x1839 ((x1653 Int)) Int (ite (= x1653 x1328) x905 (x754 x1653)))
(define-fun x892 ((x1653 Int)) Int (ite (= x1653 x1636) x1232 (x1829 x1653)))
(define-fun x1714 ((x1653 Int)) Int (ite x1618 (x1829 x1653) (ite x2143 (ite x1912 (x754 x1653) (x1839 x1653)) (x892 x1653))))
(define-fun x1663 ((x1653 Int)) Int (ite x822 (x1710 x1653) (x1714 x1653)))
(define-fun x2394 ((x1653 Int)) Int (ite (= x1653 x635) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x1663 x1653)))
(define-fun x58 ((x1653 Int)) Int (ite (= x1284 x1653) (x998 x1925) (x2394 x1653)))
(define-fun x1730 ((x1653 Int)) Int (ite (and (>= x1653 x635) (> (+ 32 x635) x1653)) (x643 (+ 0 (- x1653 x635))) (x58 x1653)))
(define-fun x2503 ((x1653 Int)) Int (ite x364 (x1730 x1653) (x58 x1653)))
(define-fun x1977 ((x1653 Int)) Int (ite x1006 (x2503 x1653) (x1663 x1653)))
(define-fun x435 ((x1653 Int)) Int (ite (= x1653 x2084) x2299 (x1977 x1653)))
(define-fun x1354 ((x1653 Int)) Int (ite (= x1653 x2193) x413 (x435 x1653)))
(define-fun x2251 ((x1653 Int)) Int (ite (= x1653 x1324) x1600 (x1354 x1653)))
(define-fun x2361 ((x1653 Int)) Int (ite (= x1653 x2193) x881 (x435 x1653)))
(define-fun x1074 ((x1653 Int)) Int (ite x422 (x435 x1653) (ite x1597 (ite x2005 (x1354 x1653) (x2251 x1653)) (x2361 x1653))))
(define-fun x2133 ((x1653 Int)) Int (ite x761 (x1977 x1653) (x1074 x1653)))
(define-fun x1575 ((x1653 Int)) Int (ite (= x1653 x1153) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x2133 x1653)))
(define-fun x1937 ((x1653 Int)) Int (ite (= x423 x1653) (x998 x468) (x1575 x1653)))
(define-fun x816 ((x1653 Int)) Int (ite (and (>= x1653 x1153) (> (+ 32 x1153) x1653)) (x1097 (+ 0 (- x1653 x1153))) (x1937 x1653)))
(define-fun x1483 ((x1653 Int)) Int (ite x1556 (x816 x1653) (x1937 x1653)))
(define-fun x1523 ((x1653 Int)) Int (ite x1585 (x1483 x1653) (x2133 x1653)))
(define-fun x508 ((x1653 Int)) Int (ite (= x1653 x1915) (x998 x1851) (x1523 x1653)))
(define-fun x2331 ((x1653 Int)) Int (ite (= x530 x1653) 1 (x508 x1653)))
(define-fun x564 ((x1653 Int)) Int (ite (= x1653 x1915) 0 (x2331 x1653)))
(define-fun x2407 ((x1653 Int)) Int (ite x1688 (x1977 x1653) (x564 x1653)))
(define-fun x1331 ((x1653 Int)) Int (ite (= x1653 x1197) x2003 (x2407 x1653)))
(define-fun x1018 ((x1653 Int)) Int (ite (= x715 x1653) x1917 (x1331 x1653)))
(define-fun x1938 ((x1653 Int)) Int (ite (= x1653 x1943) x2212 (x1018 x1653)))
(define-fun x615 ((x1653 Int)) Int (ite (= x1653 x715) x1235 (x1331 x1653)))
(define-fun x2263 ((x1653 Int)) Int (ite x1576 (x1331 x1653) (ite x1689 (ite x334 (x1018 x1653) (x1938 x1653)) (x615 x1653))))
(define-fun x2031 ((x1653 Int)) Int (ite x1281 (x2407 x1653) (x2263 x1653)))
(define-fun x817 ((x1653 Int)) Int (ite (= x1653 x1740) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x2031 x1653)))
(define-fun x1729 ((x1653 Int)) Int (ite (= x1653 x1050) (x998 x407) (x817 x1653)))
(define-fun x585 ((x1653 Int)) Int (ite (and (<= x1740 x1653) (> (+ x1740 32) x1653)) (x1825 (+ 0 (- x1653 x1740))) (x1729 x1653)))
(define-fun x1638 ((x1653 Int)) Int (ite x2125 (x585 x1653) (x1729 x1653)))
(define-fun x269 ((x1653 Int)) Int (ite x1225 (x1638 x1653) (x2031 x1653)))
(define-fun x1719 ((x1653 Int)) Int (ite (= x2161 x1653) 42946364674413620953198879289557591458479223041058917712765633135805412147200 (x1329 x1653)))
(define-fun x1787 ((x1653 Int)) Int (ite (= x1653 x1803) x1531 (x1719 x1653)))
(define-fun x693 ((x1653 Int)) Int (ite (= x1653 x2104) (x998 x2169) (x1787 x1653)))
(define-fun x185 ((x1653 Int)) Int (ite (= x1813 x1653) x160 (x693 x1653)))
(define-fun x2330 ((x1653 Int)) Int (ite (= x1653 x2118) x2472 (x185 x1653)))
(define-fun x735 ((x1653 Int)) Int (ite (= x1193 x1653) x655 (x2330 x1653)))
(define-fun x1888 ((x1653 Int)) Int (ite (and (<= x2161 x1653) (> (+ x2161 0) x1653)) (x1624 (+ 0 (- x1653 x2161))) (x735 x1653)))
(define-fun x1181 ((x1653 Int)) Int (ite x203 (x1888 x1653) (x735 x1653)))
(define-fun x1822 ((x1653 Int)) Int (ite (= x2161 x1653) x1968 (x1181 x1653)))
(define-fun x1079 ((x1653 Int)) Int (ite (= x1653 x1052) x807 (x1822 x1653)))
(define-fun x1800 ((x1653 Int)) Int (ite (= x1253 x1653) x566 (x1079 x1653)))
(define-fun x1008 ((x1653 Int)) Int (ite (= x1052 x1653) x1705 (x1822 x1653)))
(define-fun x1832 ((x1653 Int)) Int (ite x1564 (x1822 x1653) (ite x551 (ite x411 (x1079 x1653) (x1800 x1653)) (x1008 x1653))))
(define-fun x1507 ((x1653 Int)) Int (ite x2391 (x1832 x1653) (x1181 x1653)))
(define-fun x2233 ((x1653 Int)) Int (ite (= x1653 x2008) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x1507 x1653)))
(define-fun x395 ((x1653 Int)) Int (ite (= x2471 x1653) (x998 x1637) (x2233 x1653)))
(define-fun x1909 ((x1653 Int)) Int (ite (and (< x1653 (+ 32 x2008)) (<= x2008 x1653)) (x1247 (+ (- x1653 x2008) 0)) (x395 x1653)))
(define-fun x2080 ((x1653 Int)) Int (ite x159 (x1909 x1653) (x395 x1653)))
(define-fun x2053 ((x1653 Int)) Int (ite x2202 (x2080 x1653) (x1507 x1653)))
(define-fun x664 ((x1653 Int)) Int (ite (= x1011 x1653) x1389 (x2053 x1653)))
(define-fun x1928 ((x1653 Int)) Int (ite (= x727 x1653) x1865 (x664 x1653)))
(define-fun x172 ((x1653 Int)) Int (ite (= x1653 x1827) x503 (x1928 x1653)))
(define-fun x847 ((x1653 Int)) Int (ite (= x1653 x727) x55 (x664 x1653)))
(define-fun x2467 ((x1653 Int)) Int (ite x2404 (x664 x1653) (ite x670 (ite x860 (x1928 x1653) (x172 x1653)) (x847 x1653))))
(define-fun x2451 ((x1653 Int)) Int (ite (= x939 x1653) x2309 (x2467 x1653)))
(define-fun x382 ((x1653 Int)) Int (ite (= x1653 x950) x510 (x2451 x1653)))
(define-fun x1617 ((x1653 Int)) Int (ite (= x1653 x918) x1159 (x382 x1653)))
(define-fun x1394 ((x1653 Int)) Int (ite (= x1653 x158) x2371 (x1617 x1653)))
(define-fun x2227 ((x1653 Int)) Int (ite (= x2253 x1653) x2454 (x1394 x1653)))
(define-fun x1478 ((x1653 Int)) Int (ite x1973 (x1394 x1653) (ite x82 (x1617 x1653) (ite x1182 (x382 x1653) (ite x1230 (x2451 x1653) (x2227 x1653))))))
(define-fun x1095 ((x1653 Int)) Int (ite (= x1653 x1792) 0 (x1478 x1653)))
(define-fun x663 ((x1653 Int)) Int (ite (= x1653 x1870) x557 (x1095 x1653)))
(define-fun x897 ((x1653 Int)) Int (ite (= x1653 x292) x1142 (x663 x1653)))
(define-fun x2151 ((x1653 Int)) Int (ite (= x1653 x222) x548 (x897 x1653)))
(define-fun x323 ((x1653 Int)) Int (ite (= x1653 x2468) x882 (x2151 x1653)))
(define-fun x1703 ((x1653 Int)) Int (ite x2072 (x2151 x1653) (ite x883 (x897 x1653) (ite x943 (x663 x1653) (ite x2167 (x1095 x1653) (x323 x1653))))))
(define-fun x1319 ((x1653 Int)) Int (ite (= x806 x1653) 0 (x1703 x1653)))
(define-fun x2453 ((x1653 Int)) Int (ite (= x403 x1653) x1504 (x1319 x1653)))
(define-fun x231 ((x1653 Int)) Int (ite (= x1653 x806) x243 (x2453 x1653)))
(define-fun x353 ((x1653 Int)) Int (ite (= x1653 x1414) x915 (x231 x1653)))
(define-fun x2337 ((x1653 Int)) Int (ite (= x1653 x1386) x2078 (x353 x1653)))
(define-fun x1712 ((x1653 Int)) Int (ite (= x1653 x1953) x1118 (x2337 x1653)))
(define-fun x1119 ((x1653 Int)) Int (ite (= x2412 x1653) x1498 (x1712 x1653)))
(define-fun x2457 ((x1653 Int)) Int (ite (= x1953 x1653) x830 (x2337 x1653)))
(define-fun x1202 ((x1653 Int)) Int (ite x1451 (x2337 x1653) (ite x1859 (ite x1614 (x1712 x1653) (x1119 x1653)) (x2457 x1653))))
(define-fun x1845 ((x1653 Int)) Int (ite x568 (x1202 x1653) (x353 x1653)))
(define-fun x2399 ((x1653 Int)) Int (ite (= x1653 x969) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x1845 x1653)))
(define-fun x906 ((x1653 Int)) Int (ite (= x26 x1653) (x998 x2382) (x2399 x1653)))
(define-fun x2435 ((x1653 Int)) Int (ite (and (> (+ x969 32) x1653) (>= x1653 x969)) (x751 (+ (- x1653 x969) 0)) (x906 x1653)))
(define-fun x1516 ((x1653 Int)) Int (ite x1919 (x2435 x1653) (x906 x1653)))
(define-fun x2301 ((x1653 Int)) Int (ite x1515 (x1516 x1653) (x1845 x1653)))
(define-fun x688 ((x1653 Int)) Int (ite (= x1653 x806) x2074 (x353 x1653)))
(define-fun x1728 ((x1653 Int)) Int (ite (= x1653 x567) x936 (x688 x1653)))
(define-fun x1175 ((x1653 Int)) Int (ite (= x1653 x1377) x650 (x1728 x1653)))
(define-fun x1 ((x1653 Int)) Int (ite (= x567 x1653) x2181 (x688 x1653)))
(define-fun x2027 ((x1653 Int)) Int (ite x984 (x688 x1653) (ite x1972 (ite x2311 (x1728 x1653) (x1175 x1653)) (x1 x1653))))
(define-fun x1742 ((x1653 Int)) Int (ite x1833 (x2027 x1653) (x353 x1653)))
(define-fun x1033 ((x1653 Int)) Int (ite (= x1370 x1653) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x1742 x1653)))
(define-fun x2064 ((x1653 Int)) Int (ite (= x262 x1653) (x998 x1456) (x1033 x1653)))
(define-fun x951 ((x1653 Int)) Int (ite (and (>= x1653 x1370) (< x1653 (+ x1370 32))) (x1693 (+ 0 (- x1653 x1370))) (x2064 x1653)))
(define-fun x1180 ((x1653 Int)) Int (ite x648 (x951 x1653) (x2064 x1653)))
(define-fun x2400 ((x1653 Int)) Int (ite x1028 (x1180 x1653) (x1742 x1653)))
(define-fun x219 ((x1653 x550)) Int (ite (= x598 x1653) x1929 (x1464 x1653)))
(define-fun x1914 ((x1653 x550)) Int (ite (= x1653 x52) x1372 (x305 x1653)))
(define-fun x97 ((x1653 x550)) Int (ite (= x52 x1653) x1005 (x305 x1653)))
(define-fun x658 ((x1653 x550)) Int (ite x1485 (x1914 x1653) (x97 x1653)))
(define-fun x1306 ((x1653 x550)) Int (ite (= x1653 x304) x207 (x658 x1653)))
(define-fun x2321 ((x1653 x550)) Int (ite (= x1653 x304) x1307 (x658 x1653)))
(define-fun x281 ((x1653 x550)) Int (ite x1781 (x658 x1653) (ite x196 (x1306 x1653) (x2321 x1653))))
(define-fun x982 ((x1653 Int)) Int (ite (= x1653 x440) x724 (x2400 x1653)))
(define-fun x1844 ((x1653 x550)) Int (ite (= x204 x1653) 0 (x1237 x1653)))
(define-fun x251 ((x1653 x550)) Int (ite x531 (x1237 x1653) (ite x448 (x1237 x1653) (x1844 x1653))))
(define-fun x1799 ((x1653 x550)) Int (ite (= x1439 x1653) x1293 (x251 x1653)))
(define-fun x126 ((x1653 x550)) Int (ite x1162 (x251 x1653) (x1799 x1653)))
(define-fun x667 ((x1653 x550)) Int (ite (= x1944 x1653) x39 (x126 x1653)))
(define-fun x1739 ((x1653 x550)) Int (ite x1485 (ite x1003 (x126 x1653) (x667 x1653)) (x251 x1653)))
(define-fun x229 ((x1653 x550)) Int (ite (= x1653 x502) 0 (x1739 x1653)))
(define-fun x2159 ((x1653 x550)) Int (ite x539 (x1739 x1653) (ite x788 (x1739 x1653) (x229 x1653))))
(define-fun x2357 ((x1653 x550)) Int (ite (= x1530 x1653) x665 (x2159 x1653)))
(define-fun x261 ((x1653 x550)) Int (ite x518 (x2159 x1653) (x2357 x1653)))
(define-fun x2438 ((x1653 x550)) Int (ite (= x2396 x1653) x524 (x261 x1653)))
(define-fun x63 ((x1653 x550)) Int (ite x1477 (x261 x1653) (x2438 x1653)))
(define-fun x728 ((x1653 x550)) Int (ite x1781 (x1739 x1653) (ite x196 (x63 x1653) (x2159 x1653))))
(define-fun x1512 ((x1653 Int)) Int (ite (= x873 x1653) x898 (x982 x1653)))
(define-fun x2483 ((x1653 Int)) Int (ite (= x1653 x873) x1497 (x982 x1653)))
(define-fun x442 ((x1653 Int)) Int (ite (= x1653 x1501) (x998 x1851) (x269 x1653)))
(define-fun x2395 ((x1653 Int)) Int (ite (= x1653 x2470) 1 (x442 x1653)))
(define-fun x457 ((x1653 Int)) Int (ite (= x2277 x1653) 109562948294120585953088955926913691080166221410047079322077399086870164406272 (x2395 x1653)))
(define-fun x1177 ((x1653 Int)) Int (ite (= x1745 x1653) x2036 (x457 x1653)))
(define-fun x956 ((x1653 Int)) Int (ite (= x1653 x790) 0 (x1177 x1653)))
(define-fun x977 ((x1653 Int)) Int (ite (= x1066 x1653) (x998 x1851) (x956 x1653)))
(define-fun x122 ((x1653 Int)) Int (ite (= x1653 x2026) 1 (x977 x1653)))
(define-fun x1932 ((x1653 Int)) Int (ite (= x2049 x1653) 160 (x122 x1653)))
(define-fun x1955 ((x1653 Int)) Int (ite (= x2415 x1653) 0 (x1932 x1653)))
(define-fun x579 ((x1653 Int)) Int (ite (= x42 x1653) 0 (x1955 x1653)))
(define-fun x1102 ((x1653 Int)) Int (ite (and (< x1653 (+ x2277 32)) (>= x1653 x2277)) (x2272 (+ 0 (- x1653 x2277))) (x579 x1653)))
(define-fun x134 ((x1653 x550)) Int (ite x2463 (x2172 x1653) (x1226 x1653)))
(define-fun x1383 ((x1653 x550)) Int (ite (= x1834 x1653) x2278 (x1464 x1653)))
(define-fun x2086 ((x1653 x550)) Int (ite x203 (x1553 x1653) (x1226 x1653)))
(define-fun x1945 ((x1653 x550)) Int (ite x1688 (x1464 x1653) (x1383 x1653)))
(define-fun x1437 ((x1653 Int)) Int (ite (= x1653 x2304) x2423 (x1512 x1653)))
(define-fun x1092 ((x1653 Int)) Int (ite x1951 (x982 x1653) (ite x1864 (ite x2187 (x1512 x1653) (x1437 x1653)) (x2483 x1653))))
(define-fun x1565 ((x1653 Int)) Int (ite x1059 (x1092 x1653) (x2400 x1653)))
(define-fun x1043 ((x1653 Int)) Int (ite (= x1653 x2480) 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x1565 x1653)))
(define-fun x1562 ((x1653 Int)) Int (ite (= x1653 x463) (x998 x1283) (x1043 x1653)))
(define-fun x1122 ((x1653 Int)) Int (ite (and (>= x1653 x2480) (< x1653 (+ 32 x2480))) (x1994 (+ (- x1653 x2480) 0)) (x1562 x1653)))
(define-fun x1734 ((x1653 Int)) Int (ite (= x1598 x1653) (x998 x1851) (x2301 x1653)))
(define-fun x821 ((x1653 Int)) Int (ite (= x1653 x562) 1 (x1734 x1653)))
(define-fun x140 ((x1653 Int)) Int (ite (= x1653 x1598) 109562948294120585953088955926913691080166221410047079322077399086870164406272 (x821 x1653)))
(define-fun x637 ((x1653 Int)) Int (ite (= x1653 x1762) x2036 (x140 x1653)))
(define-fun x415 ((x1653 Int)) Int (ite (= x1653 x2097) x899 (x637 x1653)))
(define-fun x1467 ((x1653 Int)) Int (ite (= x1608 x1653) (x998 x1851) (x415 x1653)))
(define-fun x221 ((x1653 Int)) Int (ite (= x809 x1653) 1 (x1467 x1653)))
(define-fun x962 ((x1653 Int)) Int (ite (= x2406 x1653) 160 (x221 x1653)))
(define-fun x1184 ((x1653 Int)) Int (ite (= x812 x1653) 0 (x962 x1653)))
(define-fun x2289 ((x1653 Int)) Int (ite (= x379 x1653) 0 (x1184 x1653)))
(define-fun x57 ((x1653 Int)) Int (ite (and (>= x1653 x1598) (< x1653 (+ 32 x1598))) (x1921 (+ (- x1653 x1598) 0)) (x2289 x1653)))
(define-fun x1727 ((x1653 Int)) Int (ite x1454 (x1102 x1653) (x579 x1653)))
(define-fun x919 ((x1653 Int)) Int (ite x1506 (x57 x1653) (x2289 x1653)))
(define-fun x844 ((x1653 Int)) Int (ite x808 (x2395 x1653) (x1727 x1653)))
(define-fun x848 ((x1653 Int)) Int (ite (= x1653 x1220) x2455 (x844 x1653)))
(define-fun x320 ((x1653 Int)) Int (ite x852 (x1122 x1653) (x1562 x1653)))
(define-fun x2231 ((x1706 Int)) Bool (=> (and (not (= x1706 65535)) (not (= x1706 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 131072 x1706)) (not (= 7776000 x1706)) (not (= 549686827 x1706)) (not (= 4294967296 x1706)) (< 10000 x1706) (not (= 65536 x1706)) (not (= 97199519776808029778168953285215024309695167179541945341261303444449322336256 x1706)) (not (= 42946364674413620953198879289557591458479223041058917712765633135805412147200 x1706)) (not (= x1706 4294967295)) (not (= x1706 109562948294120585953088955926913691080166221410047079322077399086870164406272)) (not (= x1706 4294836223)) (not (= 115792089237316195423570985008687907853269984665640564039457584007908834738175 x1706)) (not (= x1706 18446744073709551615)) (not (= x1706 1461501637330902918203684832716283019655932542975)) (not (= 65537 x1706)) (not (= x1706 1666326814)) (not (= 4294901760 x1706)) (not (= 1058358655 x1706)) (not (= x1706 1058533858861509001837889330765714424124041949802528273061784713247848398848)) (not (= 115792089210356248756420345214020892766250353992003419616917011526809519390720 x1706)) (not (= x1706 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 616673092 x1706))) (not ((_ is x779) (x916 x1706)))))
(assert (x1330 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (x2007 x1591))
(assert (= 0 (x565 (x2260 (+ x402 64)))))
(assert (x2007 x1969))
(assert (and (=> (< 0 18446744073709551616) (= x1161 (+ (x255 x1161 18446744073709551616) (* (x1266 x1161 18446744073709551616) 18446744073709551616)))) (x1129 x1161 18446744073709551616) (x270 x1161 18446744073709551616) (x48 x1161 18446744073709551616)))
(assert (x747 x2303))
(assert (x2007 x319))
(assert (x2007 x1741))
(assert (x2007 x908))
(assert (x2007 x1613))
(assert (=> (>= 10000 (x2263 x1866)) (= (x916 (x2263 x1866)) (x779 (x2263 x1866)))))
(assert (x877 x1411))
(assert (x2007 x2446))
(assert (x2231 (x660 (x2260 (+ 128 x859)))))
(assert (= 97199519776808029778168953285215024309695167179541945341261303444449322336256 (x998 (x779 97199519776808029778168953285215024309695167179541945341261303444449322336256))))
(assert (x877 x426))
(assert (x2007 x1532))
(assert (= 0 (x565 (x2260 (+ x743 128)))))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1145 (+ (x255 x1145 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1145 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1145 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1145 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1145 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x2007 x649))
(assert (= (and (not x2222) x1520) x725))
(assert (x877 x903))
(assert (x2007 x26))
(assert (= (x232 x2366) (x998 (x916 (x232 x2366)))))
(assert (x2007 x510))
(assert (and (=> (< 0 128) (= x2199 (+ (x255 x2199 128) (* (x1266 x2199 128) 128)))) (x1129 x2199 128) (x270 x2199 128) (x48 x2199 128)))
(assert (=> (>= 10000 (x660 (x2260 (+ 192 x859)))) (= (x916 (x660 (x2260 (+ x859 192)))) (x779 (x660 (x2260 (+ x859 192)))))))
(assert (= (x2263 x1866) (x998 (x916 (x2263 x1866)))))
(assert (x2007 x1503))
(assert (x2376 x1513))
(assert (x2007 x51))
(assert (= (x2482 115792089237316195423570985008687907853269984665640564039457584007913129639935 x582) (ite (< x582 256) (x1266 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1137 2 x582)) 0)))
(assert (x2231 (x497 (x2260 (+ 32 x933)))))
(assert (= 0 (x565 (x2260 (+ 192 x859)))))
(assert (x747 65536))
(assert (x877 x712))
(assert (x2007 x1380))
(assert (x2007 x542))
(assert (= x2258 (and (not x438) x2269)))
(assert (x2231 (x2283 192)))
(assert (= x162 (and x2015 (not x604))))
(assert (= (x565 (x2260 (+ x1060 160))) 0))
(assert (x2007 x142))
(assert (x1750 x1623))
(assert (x2231 (x1832 (x2260 (+ 160 x537)))))
(assert (x2007 x936))
(assert (x15 x833))
(assert (= (or x1447 x1059) x1420))
(assert (= x1454 (and x2039 x1228)))
(assert (= (=> (and (= (x2260 (+ x403 32)) x2140) (= (not (> x227 32)) x461) (= (x2453 x2140) x665) (= x874 (x295 x1530 1))) (and x461 (=> (and (= x2396 x874) (= 64 x2177)) x592))) x1213))
(assert (x2231 (x2032 (x2260 (+ 160 x2157)))))
(assert (= x2404 (and x2188 x1696)))
(assert (x2007 x1489))
(assert (x877 (* 6277101735386680763835789423207666416102355444464034512896 x1867)))
(assert (= (+ (x998 x678) 1) (x998 (x295 x678 1))))
(assert (and (=> (< 0 18446744073709551616) (= x903 (+ (x255 x903 18446744073709551616) (* (x1266 x903 18446744073709551616) 18446744073709551616)))) (x1129 x903 18446744073709551616) (x270 x903 18446744073709551616) (x48 x903 18446744073709551616)))
(assert (x885 x431))
(assert (x2007 x707))
(assert (= (x2482 x439 160) (x1266 x439 1461501637330902918203684832716283019655932542976)))
(assert (= 0 (x565 (x2260 (+ 96 x2366)))))
(assert (x2007 x1713))
(assert (=> (>= 10000 x902) (= (x916 x902) (x779 x902))))
(assert (= (x998 (x779 18446744073709551615)) 18446744073709551615))
(assert (and (x1778 256 x315) (x1905 256 x315) (= (x482 256 x315) (* x315 256)) (x509 256 x315) (x699 256 x315) (x2495 256 x315) (and (= (- (* (- x315 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* (- x315 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x315 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x315) (- (* x315 256) (* x315 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 256 (- x315 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x315 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256)))))
(assert (= x1950 (and x1773 (not x974))))
(assert (x2007 x1088))
(assert (x1330 x2367))
(assert (= (and x2037 (not x1063)) x2335))
(assert (= (=> (and (= (= 0 x1443) x2372) (or x2372 (not x2372))) x248) x235))
(assert (= (and (not x214) x528) x1709))
(assert (x2007 x2455))
(assert (=> (>= 10000 (x2283 352)) (= (x779 (x2283 352)) (x916 (x2283 352)))))
(assert (x2007 x1082))
(assert (x877 32))
(assert (x2007 x405))
(assert (x1330 x1587))
(assert (=> (>= 10000 (x506 (x2260 (+ 192 x381)))) (= (x779 (x506 (x2260 (+ x381 192)))) (x916 (x506 (x2260 (+ 192 x381)))))))
(assert (= (x998 (x295 x1448 x1081)) (+ (x998 x1448) x1081)))
(assert (= x47 (and x646 x68)))
(assert (x2007 x1100))
(assert (x2007 x265))
(assert (x2231 (x1092 (x2260 (+ 128 x1060)))))
(assert (and (x1764 x2117 1461501637330902918203684832716283019655932542976) (x2501 x2117 1461501637330902918203684832716283019655932542976) (= (* 1461501637330902918203684832716283019655932542976 (x1266 x2117 1461501637330902918203684832716283019655932542976)) (- x2117 (x1595 1461501637330902918203684832716283019655932542975 x2117))) (=> (and (< 0 x2117) (> 1461501637330902918203684832716283019655932542976 0)) (and (<= (* 1461501637330902918203684832716283019655932542976 (x1266 x2117 1461501637330902918203684832716283019655932542976)) x2117) (> (* 1461501637330902918203684832716283019655932542976 (x1266 x2117 1461501637330902918203684832716283019655932542976)) (- x2117 1461501637330902918203684832716283019655932542976)))) (x1404 x2117 1461501637330902918203684832716283019655932542976) (x2165 x2117 1461501637330902918203684832716283019655932542976)))
(assert (=> (<= (x2032 (x2260 (+ 96 x2157))) 10000) (= (x779 (x2032 (x2260 (+ x2157 96)))) (x916 (x2032 (x2260 (+ 96 x2157)))))))
(assert (x877 x1911))
(assert (x2007 x657))
(assert (x2007 x2365))
(assert (= (x998 (x295 x600 1)) (+ 1 (x998 x600))))
(assert (x2007 x1878))
(assert (=> (<= (x1202 (x2260 (+ 160 x2489))) 10000) (= (x779 (x1202 (x2260 (+ x2489 160)))) (x916 (x1202 (x2260 (+ x2489 160)))))))
(assert (= (or x2326 x2045 x1476) x2235))
(assert (= 1666326814 (x998 (x779 1666326814))))
(assert (x877 18446744073709551616))
(assert (and (x1764 x793 6277101735386680763835789423207666416102355444464034512896) (x2501 x793 6277101735386680763835789423207666416102355444464034512896) (= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x793 6277101735386680763835789423207666416102355444464034512896)) (- x793 (x1595 6277101735386680763835789423207666416102355444464034512895 x793))) (=> (and (< 0 x793) (> 6277101735386680763835789423207666416102355444464034512896 0)) (and (<= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x793 6277101735386680763835789423207666416102355444464034512896)) x793) (> (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x793 6277101735386680763835789423207666416102355444464034512896)) (- x793 6277101735386680763835789423207666416102355444464034512896)))) (x1404 x793 6277101735386680763835789423207666416102355444464034512896) (x2165 x793 6277101735386680763835789423207666416102355444464034512896)))
(assert (x2007 x705))
(assert (x2007 x145))
(assert (and (x1764 x1148 32) (x2501 x1148 32) (= (* 32 (x1266 x1148 32)) (- x1148 (x1595 31 x1148))) (=> (and (< 0 x1148) (> 32 0)) (and (<= (* 32 (x1266 x1148 32)) x1148) (> (* 32 (x1266 x1148 32)) (- x1148 32)))) (x1404 x1148 32) (x2165 x1148 32)))
(assert (and (x1764 x2247 2) (x2501 x2247 2) (= (* 2 (x1266 x2247 2)) (- x2247 (x1595 1 x2247))) (=> (and (< 0 x2247) (> 2 0)) (and (<= (* 2 (x1266 x2247 2)) x2247) (> (* 2 (x1266 x2247 2)) (- x2247 2)))) (x1404 x2247 2) (x2165 x2247 2)))
(assert (x2007 x1054))
(assert (and (=> (< 0 2) (= x212 (+ (x255 x212 2) (* (x1266 x212 2) 2)))) (x1129 x212 2) (x270 x212 2) (x48 x212 2)))
(assert (= (x998 (x779 4294836223)) 4294836223))
(assert (x1330 x2022))
(assert (= (x998 (x916 (x634 (x2260 (+ 128 x1718))))) (x634 (x2260 (+ 128 x1718)))))
(assert (= x1637 (x916 (x998 x1637))))
(assert (x2007 x1057))
(assert (= x2002 (or x45 x1900)))
(assert (= (=> (and (= x1172 (not (< x730 x1571))) (= (x728 x451) x2423) (= (x2260 (+ 32 x2304)) x730)) (and x723 x1172)) x511))
(assert (= x2033 (and x988 x2353)))
(assert (and (x1764 x1395 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2501 x1395 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1395 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1395 (x1595 452312848583266388373324160190187140051835877600158453279131187530910662655 x1395))) (=> (and (< 0 x1395) (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0)) (and (<= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1395 452312848583266388373324160190187140051835877600158453279131187530910662656)) x1395) (> (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1395 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1395 452312848583266388373324160190187140051835877600158453279131187530910662656)))) (x1404 x1395 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2165 x1395 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x2007 x2281))
(assert (x1330 x2220))
(assert (x747 x127))
(assert (= x392 (=> (= x575 x400) x976)))
(assert (= (and x1627 (not x1671)) x1182))
(assert (= x1481 (=> (and (= (x2260 (+ 32 x1328)) x61) (= (not (> x971 x61)) x1976) (= x905 (x1739 x529))) (and x1369 x1976))))
(assert (= x1241 (or x1264 x1281)))
(assert (= (x1266 x2115 1461501637330902918203684832716283019655932542976) (x2482 x2115 160)))
(assert (= (x998 (x916 (x506 x381))) (x506 x381)))
(assert (x885 x2117))
(assert (x877 x191))
(assert (= (x2183 (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x1811)) (x1664 x1811 248)))
(assert (x2007 x1820))
(assert (and (x1764 x175 32) (x2501 x175 32) (= (* 32 (x1266 x175 32)) (- x175 (x1595 31 x175))) (=> (and (< 0 x175) (> 32 0)) (and (<= (* 32 (x1266 x175 32)) x175) (> (* 32 (x1266 x175 32)) (- x175 32)))) (x1404 x175 32) (x2165 x175 32)))
(assert (x2007 x752))
(assert (x2007 x1232))
(assert (x2007 x283))
(assert (= x2279 (and x2506 (not x1136))))
(assert (=> (<= (x1074 (x2260 (+ 192 x402))) 10000) (= (x779 (x1074 (x2260 (+ x402 192)))) (x916 (x1074 (x2260 (+ 192 x402)))))))
(assert (and (=> (< 0 256) (= x1966 (+ (x255 x1966 256) (* (x1266 x1966 256) 256)))) (x1129 x1966 256) (x270 x1966 256) (x48 x1966 256)))
(assert (= x2245 (and (not x289) x1494)))
(assert (= x1413 (and x923 x2025)))
(assert (x2007 x1596))
(assert (= (x779 131072) (x916 131072)))
(assert (x2231 (x232 (x2260 (+ 192 x2366)))))
(assert (= (x998 (x916 (x660 (x2260 (+ x859 96))))) (x660 (x2260 (+ 96 x859)))))
(assert (x2007 x1386))
(assert (x2007 x2349))
(assert (x877 x1808))
(assert (and (x1764 x2314 2) (x2501 x2314 2) (= (* 2 (x1266 x2314 2)) (- x2314 (x1595 1 x2314))) (=> (and (< 0 x2314) (> 2 0)) (and (<= (* 2 (x1266 x2314 2)) x2314) (> (* 2 (x1266 x2314 2)) (- x2314 2)))) (x1404 x2314 2) (x2165 x2314 2)))
(assert (= x535 (and x1709 (not x1169))))
(assert (= (or x631 x517) x359))
(assert (x877 x271))
(assert (= (x998 (x295 x1425 1)) (+ 1 (x998 x1425))))
(assert (x2007 x898))
(assert (x2007 x1440))
(assert (x747 x1484))
(assert (= x253 (or (and (not x2372) x1271) x278)))
(assert (x877 x1599))
(assert (=> (<= (x634 x1718) 10000) (= (x916 (x634 x1718)) (x779 (x634 x1718)))))
(assert (= x1773 (or x1972 x984 x2029)))
(assert (x877 x1975))
(assert (= x1225 (or x1203 x2125)))
(assert (and (=> (< 0 18446744073709551616) (= x707 (+ (x255 x707 18446744073709551616) (* (x1266 x707 18446744073709551616) 18446744073709551616)))) (x1129 x707 18446744073709551616) (x270 x707 18446744073709551616) (x48 x707 18446744073709551616)))
(assert (x2007 x151))
(assert (x885 x1128))
(assert (= (and x2158 x2469) x159))
(assert (x747 x2291))
(assert (= (or x2061 x1251 x3 x2445 x217) x1178))
(assert (x2007 x1081))
(assert (x1330 x346))
(assert (= (and (not x1651) x1962) x2216))
(assert (x747 x1351))
(assert (= (x2283 160) (x998 (x916 (x2283 160)))))
(assert (x877 x2449))
(assert (= (or x1697 x1556) x1585))
(assert (and (x1764 x828 6277101735386680763835789423207666416102355444464034512896) (x2501 x828 6277101735386680763835789423207666416102355444464034512896) (= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x828 6277101735386680763835789423207666416102355444464034512896)) (- x828 (x1595 6277101735386680763835789423207666416102355444464034512895 x828))) (=> (and (< 0 x828) (> 6277101735386680763835789423207666416102355444464034512896 0)) (and (<= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x828 6277101735386680763835789423207666416102355444464034512896)) x828) (> (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x828 6277101735386680763835789423207666416102355444464034512896)) (- x828 6277101735386680763835789423207666416102355444464034512896)))) (x1404 x828 6277101735386680763835789423207666416102355444464034512896) (x2165 x828 6277101735386680763835789423207666416102355444464034512896)))
(assert (= (x998 (x916 (x2032 (x2260 (+ x2157 96))))) (x2032 (x2260 (+ x2157 96)))))
(assert (= x377 (or x137 x769)))
(assert (= (x916 (x998 x1456)) x1456))
(assert (x747 x858))
(assert (= x2201 (and (not x2226) x838)))
(assert (x747 x521))
(assert (x2007 x384))
(assert (= 0 (x565 352)))
(assert (= x824 (=> (= (= (x779 0) x201) x357) (and (=> (and (and (= x1694 x1625) (= (x2482 x2115 192) x1577)) x357) x714) (=> (and (not x357) (and (or (and (= x10 x2281) (not x1934)) (and (and (< x326 4294967296) (= x2281 1)) x1934)) (and (= (< 0 x10) x1934) (= x2434 (x2260 (+ 4 x1625)))))) x1287)))))
(assert (x2007 x33))
(assert (x2007 x1517))
(assert (x747 x1902))
(assert (x747 x1623))
(assert (x2231 (x1074 x402)))
(assert (x2007 x992))
(assert (x2007 x1174))
(assert (and (x1764 x19 6277101735386680763835789423207666416102355444464034512896) (x2501 x19 6277101735386680763835789423207666416102355444464034512896) (= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x19 6277101735386680763835789423207666416102355444464034512896)) (- x19 (x1595 6277101735386680763835789423207666416102355444464034512895 x19))) (=> (and (< 0 x19) (> 6277101735386680763835789423207666416102355444464034512896 0)) (and (<= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x19 6277101735386680763835789423207666416102355444464034512896)) x19) (> (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x19 6277101735386680763835789423207666416102355444464034512896)) (- x19 6277101735386680763835789423207666416102355444464034512896)))) (x1404 x19 6277101735386680763835789423207666416102355444464034512896) (x2165 x19 6277101735386680763835789423207666416102355444464034512896)))
(assert (= 0 (x565 x1495)))
(assert (= (or x1576 x1689 x119) x1422))
(assert (=> (<= (x660 (x2260 (+ 128 x859))) 10000) (= (x916 (x660 (x2260 (+ 128 x859)))) (x779 (x660 (x2260 (+ 128 x859)))))))
(assert (= x1444 (=> (and (= x1480 (x2482 x1668 160)) (= x1295 (= x1353 131072)) (<= x1668 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1668 (x219 x450)) (= x450 (x115 x1851 (x779 1) 0)) (<= 0 x1668) (= x1353 (x1595 131072 x1480)) (= x208 (x1595 1 x212)) (= x212 (ite (> x100 x1981) 0 x1613)) (not (= x208 1))) (and (=> (and (and (= x175 (x2260 (+ 31 x724))) (= (< x724 32) x209) (= (x2183 (- x2437 (ite x209 1 0))) x825) (= (x2183 (* x625 32)) x2243) (= (x115 x1851 (x779 5) 0) x416) (= (= 0 x724) x388) (= x2446 (x2260 (+ 32 x2243))) (= x724 (ite (< 0 x2437) x191 (x1595 127 x191))) (= (x2260 (+ x440 x2446)) x1057) (> x825 0) (= (x281 x416) x2247) (= (x2260 (+ 32 x440)) x873) (= (x1595 1 x2247) x2437) (= (x1266 x175 32) x625) (= x191 (x1266 x2247 2))) x1295) (and (=> (and (not x388) (= x479 (< 31 x724))) (and (=> (and x479 (and (= (> x1571 x2304) x917) (= (x1365 x416 0) x113) (= x898 (x728 x113)) (= (x2260 (+ x873 x724)) x1571) (= (x2260 (+ x873 32)) x2304) (= (x295 x113 1) x451))) (and (=> (not x917) x723) (=> x917 x511))) (=> (and (and (= x1497 (x2183 (* x2108 256))) (= x2108 (x1266 x307 256)) (= (x281 x416) x307)) (not x479)) x275))) (=> x388 x275))) (=> (and (and (= x2480 x440) (= (x779 0) x1283)) (not x1295)) x301)))))
(assert (x2007 x1176))
(assert (= x597 (and x1893 x1295)))
(assert (=> (<= x559 10000) (= (x779 x559) (x916 x559))))
(assert (x1330 256))
(assert (= (x634 (x2260 (+ x1718 192))) (x998 (x916 (x634 (x2260 (+ x1718 192)))))))
(assert (x2250 x1458))
(assert (x2007 x903))
(assert (x2007 x2089))
(assert (and (=> (< 0 262144) (= x2069 (+ (x255 x2069 262144) (* (x1266 x2069 262144) 262144)))) (x1129 x2069 262144) (x270 x2069 262144) (x48 x2069 262144)))
(assert (x2007 x381))
(assert (x15 x2199))
(assert (x2007 x1801))
(assert (= x374 (=> (and (= (x2260 (+ x2412 32)) x675) (= (not (< x675 x60)) x128) (= x1498 (x728 x74))) (and x128 x1358))))
(assert (x2007 x690))
(assert (x2007 x2474))
(assert (x2007 x2268))
(assert (= x194 (=> (= x2497 (= (x779 0) x2382)) (and (=> (and (and (and (= x26 (x2260 (+ x969 4))) (= (> x1468 0) x611)) (or (and (= x1509 x1468) (not x611)) (and (and (= 1 x1509) (> 4294967296 x706)) x611))) (not x2497)) x288) (=> (and x2497 (and (= x969 x1598) (= (x2482 x488 192) x2367))) x2464)))))
(assert (=> (<= (x497 x933) 10000) (= (x916 (x497 x933)) (x779 (x497 x933)))))
(assert (x2007 x2008))
(assert (and (x1764 x488 6277101735386680763835789423207666416102355444464034512896) (x2501 x488 6277101735386680763835789423207666416102355444464034512896) (= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x488 6277101735386680763835789423207666416102355444464034512896)) (- x488 (x1595 6277101735386680763835789423207666416102355444464034512895 x488))) (=> (and (< 0 x488) (> 6277101735386680763835789423207666416102355444464034512896 0)) (and (<= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x488 6277101735386680763835789423207666416102355444464034512896)) x488) (> (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x488 6277101735386680763835789423207666416102355444464034512896)) (- x488 6277101735386680763835789423207666416102355444464034512896)))) (x1404 x488 6277101735386680763835789423207666416102355444464034512896) (x2165 x488 6277101735386680763835789423207666416102355444464034512896)))
(assert (x2007 x77))
(assert (and (=> (< 0 262144) (= x1975 (+ (x255 x1975 262144) (* (x1266 x1975 262144) 262144)))) (x1129 x1975 262144) (x270 x1975 262144) (x48 x1975 262144)))
(assert (= x1485 (or x1910 x1003)))
(assert (x2250 x1760))
(assert (= (and x1459 x2436) x390))
(assert (= (and (not x975) x2342) x2282))
(assert (x2231 x2036))
(assert (x2007 x167))
(assert (x2231 (x506 (x2260 (+ 32 x381)))))
(assert (x877 x1513))
(assert (= (x998 (x916 (x2027 (x2260 (+ x182 192))))) (x2027 (x2260 (+ 192 x182)))))
(assert (x2007 x1561))
(assert (= x1697 (and x2245 (not x1341))))
(assert (x2007 x1045))
(assert (x1750 x1616))
(assert (and (x1764 x1044 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2501 x1044 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1044 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1044 (x1595 452312848583266388373324160190187140051835877600158453279131187530910662655 x1044))) (=> (and (< 0 x1044) (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0)) (and (<= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1044 452312848583266388373324160190187140051835877600158453279131187530910662656)) x1044) (> (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1044 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1044 452312848583266388373324160190187140051835877600158453279131187530910662656)))) (x1404 x1044 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2165 x1044 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x885 x268))
(assert (x747 x2340))
(assert (x885 x1010))
(assert (x2007 x11))
(assert (= (+ 1 (x998 x1530)) (x998 (x295 x1530 1))))
(assert (not x1984))
(assert (x2231 (x634 (x2260 (+ 96 x1718)))))
(assert (x2007 x1234))
(assert (x2007 x408))
(assert (x2007 x2437))
(assert (x2007 x379))
(assert (x2231 x794))
(assert (x877 x752))
(assert (x877 256))
(assert (x2231 x2313))
(assert (x2007 x562))
(assert (= (x916 7776000) (x779 7776000)))
(assert (x2007 x1385))
(assert (= x1795 (=> (and (= (x2260 (+ x1222 31)) x1411) (= x2185 (x2260 (+ 7776000 x2420))) (= x2185 x2186) (= x1440 (x2080 x2008)) (= x2021 (x2260 (+ x2008 x1315))) (not (= 0 x746)) (= x1011 x2021) (= x2420 (x1595 18446744073709551615 x1440)) (not (or (and (= true (<= x1222 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1222)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1222))) (= (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1411) x1315) (not (> x2185 18446744073709551615))) x273)))
(assert (= (x998 (x916 (x634 x1718))) (x634 x1718)))
(assert (= 0 (x565 x2059)))
(assert (x747 x391))
(assert (= x67 (and x2413 x846)))
(assert (= (x998 (x916 (x1092 (x2260 (+ 128 x1060))))) (x1092 (x2260 (+ 128 x1060)))))
(assert (x2007 x603))
(assert (x747 x533))
(assert (x747 4294901760))
(assert (x885 x2461))
(assert (x2007 x55))
(assert (=> (<= (x2027 (x2260 (+ x182 192))) 10000) (= (x779 (x2027 (x2260 (+ x182 192)))) (x916 (x2027 (x2260 (+ 192 x182)))))))
(assert (and (x1764 x1151 32) (x2501 x1151 32) (= (* 32 (x1266 x1151 32)) (- x1151 (x1595 31 x1151))) (=> (and (< 0 x1151) (> 32 0)) (and (<= (* 32 (x1266 x1151 32)) x1151) (> (* 32 (x1266 x1151 32)) (- x1151 32)))) (x1404 x1151 32) (x2165 x1151 32)))
(assert (x747 x1020))
(assert (= x215 (and x1686 x249)))
(assert (x877 x1020))
(assert (=> (<= (x232 (x2260 (+ x2366 32))) 10000) (= (x916 (x232 (x2260 (+ x2366 32)))) (x779 (x232 (x2260 (+ x2366 32)))))))
(assert (x877 x431))
(assert (= (and x443 x1012) x1399))
(assert (= (=> (and (= x1906 (> x429 0)) (= (x1143 x926) x429) (= x1078 (x2260 (+ x1794 x952)))) (and (=> (not x1906) x477) (=> (and x1906 (and (= x1078 x96) (= x749 x1662) (= x1150 (< 32 x429)) (= x1428 (x1143 x749)))) (and (=> (and (and (= x686 (< 64 x429)) (= (x2260 (+ x1078 32)) x1584) (= x745 (x1819 x1025)) (= (x2260 (+ 32 x1662)) x1025)) x1150) (and (=> (not x686) x477) (=> (and (and (= x594 (x1487 x2268)) (= (> x429 96) x1766) (= x1907 (x2260 (+ x1078 64))) (= (x2260 (+ x1662 64)) x2268)) x686) (and (=> (not x1766) x477) (=> x1766 x1661))))) (=> (not x1150) x477))))) x1387))
(assert (and (=> (< 0 262144) (= x763 (+ (x255 x763 262144) (* (x1266 x763 262144) 262144)))) (x1129 x763 262144) (x270 x763 262144) (x48 x763 262144)))
(assert (x2007 x2341))
(assert (= x1281 (and x1874 (not x666))))
(assert (and (=> (< 0 2) (= x1194 (+ (x255 x1194 2) (* (x1266 x1194 2) 2)))) (x1129 x1194 2) (x270 x1194 2) (x48 x1194 2)))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x672 (+ (x255 x672 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x672 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x672 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x672 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x672 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (or x2279 x866) x2381))
(assert (and (x1764 x2385 32) (x2501 x2385 32) (= (* 32 (x1266 x2385 32)) (- x2385 (x1595 31 x2385))) (=> (and (< 0 x2385) (> 32 0)) (and (<= (* 32 (x1266 x2385 32)) x2385) (> (* 32 (x1266 x2385 32)) (- x2385 32)))) (x1404 x2385 32) (x2165 x2385 32)))
(assert (x2007 x1700))
(assert (=> (<= (x497 (x2260 (+ 96 x933))) 10000) (= (x779 (x497 (x2260 (+ x933 96)))) (x916 (x497 (x2260 (+ 96 x933)))))))
(assert (= 0 (x565 x1953)))
(assert (= (or x1359 x1006) x299))
(assert (=> (<= (x2283 288) 10000) (= (x916 (x2283 288)) (x779 (x2283 288)))))
(assert (x2231 (x1433 256)))
(assert (x877 x2341))
(assert (and (=> (< 0 2) (= x1797 (+ (x255 x1797 2) (* (x1266 x1797 2) 2)))) (x1129 x1797 2) (x270 x1797 2) (x48 x1797 2)))
(assert (= (or x177 x196) x1527))
(assert (= x1783 (and x2237 (not x260))))
(assert (x877 x1440))
(assert (= x599 x257))
(assert (= x204 (x916 (x998 x204))))
(assert (x1330 x1322))
(assert (x2007 x2344))
(assert (= (x2283 192) (x998 (x916 (x2283 192)))))
(assert (= (x998 (x916 (x660 (x2260 (+ 160 x859))))) (x660 (x2260 (+ 160 x859)))))
(assert (= (and (not x1879) x22) x676))
(assert (and (x1778 x2296 6277101735386680763835789423207666416102355444464034512896) (x1905 x2296 6277101735386680763835789423207666416102355444464034512896) (= (x482 x2296 6277101735386680763835789423207666416102355444464034512896) (* 6277101735386680763835789423207666416102355444464034512896 x2296)) (x509 x2296 6277101735386680763835789423207666416102355444464034512896) (x699 x2296 6277101735386680763835789423207666416102355444464034512896) (x2495 x2296 6277101735386680763835789423207666416102355444464034512896) (and (= (- (* (- 115792089237316195417293883273301227089434195242432897623355228563449095127040) x2296) (- 13407807929942597098847186273910239236930042012704388843369920083034445969792056777621235010053505504363840807472722485292991361205680392012899047377469440)) (x482 (- x2296 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089237316195417293883273301227089434195242432897623355228563449095127040))) (= (x482 (- x2296 115792089237316195423570985008687907853269984665640564039457584007913129639936) 6277101735386680763835789423207666416102355444464034512896) (- (* 6277101735386680763835789423207666416102355444464034512896 x2296) 726838724295606890549323807888004534353641360687318060281490199180639288113397923326191050713763565560762521606266177933534601628614656)) (= (x482 x2296 (- 115792089237316195417293883273301227089434195242432897623355228563449095127040)) (* (- 115792089237316195417293883273301227089434195242432897623355228563449095127040) x2296)))))
(assert (= x631 (and (not x1257) x545)))
(assert (x2007 x2220))
(assert (x2007 x1570))
(assert (x2007 x1814))
(assert (x2007 x2261))
(assert (x2007 x258))
(assert (and (x1764 x1596 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2501 x1596 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1596 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1596 (x1595 452312848583266388373324160190187140051835877600158453279131187530910662655 x1596))) (=> (and (< 0 x1596) (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0)) (and (<= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1596 452312848583266388373324160190187140051835877600158453279131187530910662656)) x1596) (> (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1596 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1596 452312848583266388373324160190187140051835877600158453279131187530910662656)))) (x1404 x1596 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2165 x1596 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x2007 x2109))
(assert (x1750 x1599))
(assert (x2231 (x2027 (x2260 (+ x182 128)))))
(assert (= x1777 (and x2269 x438)))
(assert (= x896 (and x385 x1327)))
(assert (= (x998 (x916 x794)) x794))
(assert (= (or x1210 x203) x1453))
(assert (= (x998 (x916 (x1832 (x2260 (+ x537 32))))) (x1832 (x2260 (+ x537 32)))))
(assert (x2250 x1737))
(assert (x2231 (x660 (x2260 (+ x859 64)))))
(assert (and (x1778 256 x1756) (x1905 256 x1756) (= (x482 256 x1756) (* x1756 256)) (x509 256 x1756) (x699 256 x1756) (x2495 256 x1756) (and (= (- (* (- x1756 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* (- x1756 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x1756 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x1756) (- (* x1756 256) (* x1756 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 256 (- x1756 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1756 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256)))))
(assert (x877 x645))
(assert (= x278 (and x1271 x2372)))
(assert (and (x1778 256 x1098) (x1905 256 x1098) (= (x482 256 x1098) (* x1098 256)) (x509 256 x1098) (x699 256 x1098) (x2495 256 x1098) (and (= (- (* (- x1098 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* (- x1098 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x1098 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x1098) (- (* x1098 256) (* x1098 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 256 (- x1098 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1098 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256)))))
(assert (x2007 x476))
(assert (x2007 x2471))
(assert (x2007 x806))
(assert (x2007 x2207))
(assert (let ((x1706 (* 6277101735386680763835789423207666416102355444464034512896 x2296))) (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1706 (+ (x255 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (= (and x1420 x1227) x1629))
(assert (x885 x72))
(assert (and (x1764 x1224 2) (x2501 x1224 2) (= (* 2 (x1266 x1224 2)) (- x1224 (x1595 1 x1224))) (=> (and (< 0 x1224) (> 2 0)) (and (<= (* 2 (x1266 x1224 2)) x1224) (> (* 2 (x1266 x1224 2)) (- x1224 2)))) (x1404 x1224 2) (x2165 x1224 2)))
(assert (x2007 x836))
(assert (and (x1778 x1379 1461501637330902918203684832716283019655932542976) (x1905 x1379 1461501637330902918203684832716283019655932542976) (= (x482 x1379 1461501637330902918203684832716283019655932542976) (* 1461501637330902918203684832716283019655932542976 x1379)) (x509 x1379 1461501637330902918203684832716283019655932542976) (x699 x1379 1461501637330902918203684832716283019655932542976) (x2495 x1379 1461501637330902918203684832716283019655932542976) (and (= (- (* (- 115792089237316195423570985007226406215939081747436879206741300988257197096960) x1379) (- 13407807929942597099574024998036615799469062179260703058867172057525692431234690984665004206576655545133536153655237612981186769890963219668027669280194560)) (x482 (- x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089237316195423570985007226406215939081747436879206741300988257197096960))) (= (x482 (- x1379 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1461501637330902918203684832716283019655932542976) (- (* 1461501637330902918203684832716283019655932542976 x1379) 169230328010303641331690318856389386196071598838855992136870091590247882556495704531248437872567112920983350278405979725889536)) (= (x482 x1379 (- 115792089237316195423570985007226406215939081747436879206741300988257197096960)) (* (- 115792089237316195423570985007226406215939081747436879206741300988257197096960) x1379)))))
(assert (=> (>= 10000 (x2283 320)) (= (x916 (x2283 320)) (x779 (x2283 320)))))
(assert (x747 x1480))
(assert (= x1779 (and x20 x7)))
(assert (and (x1778 32 x1657) (x1905 32 x1657) (= (x482 32 x1657) (* x1657 32)) (x509 32 x1657) (x699 32 x1657) (x2495 32 x1657) (and (= (- (* (- x1657 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x1657 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1657 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1657) (- (* x1657 32) (* x1657 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 32 (- x1657 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1657 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)))))
(assert (x2149 x181))
(assert (x2007 x2003))
(assert (= (x1202 x2489) (x998 (x916 (x1202 x2489)))))
(assert (x877 x1484))
(assert (= (x660 (x2260 (+ 128 x859))) (x998 (x916 (x660 (x2260 (+ 128 x859)))))))
(assert (and (x1764 x79 32) (x2501 x79 32) (= (* 32 (x1266 x79 32)) (- x79 (x1595 31 x79))) (=> (and (< 0 x79) (> 32 0)) (and (<= (* 32 (x1266 x79 32)) x79) (> (* 32 (x1266 x79 32)) (- x79 32)))) (x1404 x79 32) (x2165 x79 32)))
(assert (= (=> (= x2336 (= x1637 (x779 0))) (and (=> (and x2336 (and (= x2186 (x2482 x268 192)) (= x2008 x1011))) x273) (=> (and (not x2336) (and (or (and (not x2469) (= x746 x1699)) (and x2469 (and (< x1222 4294967296) (= 1 x746)))) (and (= (x2260 (+ 4 x2008)) x2471) (= (> x1699 0) x2469)))) x1795))) x1542))
(assert (= (=> (and (or (and (and (> 256 x1317) (<= 0 x1317) (= x836 (x1595 1461501637330902918203684832716283019655932542975 x629)) (= x1317 x344) (= (x1207 x306) x1317) (<= x1317 255) (= x306 (x115 (x916 x2036) x2051 0)) (= (x115 (x916 x836) (x779 2) 0) x2051)) (not x2319)) (and (= (ite x2319 1 0) x344) x2319)) (and (= x1878 (x1595 1461501637330902918203684832716283019655932542975 x629)) (= (= x1878 x2036) x2319))) x1107) x957))
(assert (x1330 x130))
(assert (x2250 x752))
(assert (= (or x1190 x2132) x979))
(assert (x2007 x1149))
(assert (= (x565 (x2260 (+ x182 32))) 0))
(assert (= (and x1927 x1214) x2075))
(assert (and (=> (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (= x1145 (+ (x255 x1145 26959946667150639794667015087019630673637144422540572481103610249216) (* (x1266 x1145 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)))) (x1129 x1145 26959946667150639794667015087019630673637144422540572481103610249216) (x270 x1145 26959946667150639794667015087019630673637144422540572481103610249216) (x48 x1145 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x2007 x2317))
(assert (x1330 x1677))
(assert (=> (>= 10000 (x1832 (x2260 (+ x537 64)))) (= (x779 (x1832 (x2260 (+ x537 64)))) (x916 (x1832 (x2260 (+ x537 64)))))))
(assert (x2007 x931))
(assert (x2007 x425))
(assert (x2007 x1670))
(assert (= (and (not x2065) x349) x2030))
(assert (= (x916 42946364674413620953198879289557591458479223041058917712765633135805412147200) (x779 42946364674413620953198879289557591458479223041058917712765633135805412147200)))
(assert (= (or x1488 x1323) x462))
(assert (x2007 x2189))
(assert (x877 4))
(assert (x877 8))
(assert (x15 x796))
(assert (= (x565 x1409) 0))
(assert (x2231 (x634 (x2260 (+ x1718 128)))))
(assert (=> (<= (x1074 (x2260 (+ 64 x402))) 10000) (= (x916 (x1074 (x2260 (+ 64 x402)))) (x779 (x1074 (x2260 (+ 64 x402)))))))
(assert (x747 x2419))
(assert (x2007 x272))
(assert (x2007 x2359))
(assert (x747 32))
(assert (= x69 (or x1544 x2500)))
(assert (and (x1778 8 x2168) (x1905 8 x2168) (= (x482 8 x2168) (* x2168 8)) (x509 8 x2168) (x699 8 x2168) (x2495 8 x2168) (and (= (- (* (- x2168 115792089237316195423570985008687907853269984665640564039457584007913129639936) 8) (* (- x2168 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639928) (- x2168 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639928) x2168) (- (* x2168 8) (* x2168 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 8 (- x2168 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2168 115792089237316195423570985008687907853269984665640564039457584007913129639936) 8)))))
(assert (and (x1764 x1289 256) (x2501 x1289 256) (= (* 256 (x1266 x1289 256)) (- x1289 (x1595 255 x1289))) (=> (and (< 0 x1289) (> 256 0)) (and (<= (* 256 (x1266 x1289 256)) x1289) (> (* 256 (x1266 x1289 256)) (- x1289 256)))) (x1404 x1289 256) (x2165 x1289 256)))
(assert (x2231 (x232 (x2260 (+ x2366 160)))))
(assert (x747 255))
(assert (x2007 x1620))
(assert (and (x1778 256 x2179) (x1905 256 x2179) (= (x482 256 x2179) (* x2179 256)) (x509 256 x2179) (x699 256 x2179) (x2495 256 x2179) (and (= (- (* (- x2179 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* (- x2179 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x2179 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x2179) (- (* x2179 256) (* x2179 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 256 (- x2179 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2179 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256)))))
(assert (x2250 x712))
(assert (and (=> (< 0 18446744073709551616) (= x1736 (+ (x255 x1736 18446744073709551616) (* (x1266 x1736 18446744073709551616) 18446744073709551616)))) (x1129 x1736 18446744073709551616) (x270 x1736 18446744073709551616) (x48 x1736 18446744073709551616)))
(assert (= (or x865 x1885) x1334))
(assert (= (x2027 (x2260 (+ 128 x182))) (x998 (x916 (x2027 (x2260 (+ x182 128)))))))
(assert (= (or x225 x411) x551))
(assert (x885 (x1137 2 x1545)))
(assert (x2007 x672))
(assert (x2007 x698))
(assert (= x1661 (=> (and (= (x2260 (+ x1662 96)) x1495) (= x328 (x2260 (+ x1078 96))) (= (x1528 x1495) x734) (= (not (> x429 128)) x98)) (and x477 x98))))
(assert (= (=> (and (= x2117 (x1464 x1999)) (<= x2117 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1149 (x2482 x2117 160)) (= (x115 x1851 (x779 1) 0) x1999) (>= x2117 0) (= x604 (= 131072 x54)) (= (x1595 131072 x1149) x54)) (and (=> (and (not x604) (and (= (x779 0) x37) (= x1539 x105))) x363) (=> (and (and (= (x115 x1851 (x779 5) 0) x1749) (= (x2260 (+ x1753 x105)) x21) (= (ite (> x2474 0) x2199 (x1595 127 x2199)) x2327) (= x2474 (x1595 1 x335)) (= x1971 (= x2327 0)) (= (x1266 x202 32) x1322) (= (> 32 x2327) x187) (> x293 0) (= x1753 (x2260 (+ 32 x1592))) (= (x1266 x335 2) x2199) (= x1592 (x2183 (* x1322 32))) (= (x2183 (- x2474 (ite x187 1 0))) x293) (= x1332 (x2260 (+ 32 x105))) (= x335 (x658 x1749)) (= (x2260 (+ x2327 31)) x202)) x604) (and (=> x1971 x1140) (=> (and (not x1971) (= x923 (< 31 x2327))) (and (=> (and (not x923) (and (= (x658 x1749) x630) (= x2264 (x1266 x630 256)) (= (x2183 (* 256 x2264)) x1419))) x1140) (=> (and x923 (and (= (x295 x1155 1) x1473) (= x1930 (x2260 (+ x1332 x2327))) (= x785 (x1739 x1155)) (= x2236 (< x489 x1930)) (= (x2260 (+ 32 x1332)) x489) (= x1155 (x1365 x1749 0)))) (and (=> x2236 x110) (=> (not x2236) x607))))))))) x633))
(assert (= (=> (and (not (= 0 x810)) (not (> x948 18446744073709551615)) (= x2161 x1191) (= x1554 (x2260 (+ x150 31))) (= x1191 (x2260 (+ x774 x2411))) (= x774 (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1554)) (= (x2260 (+ x703 7776000)) x948) (not (or (and (= (<= x150 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x150 32)) (> x150 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1373 x2411) x2287) (= x710 x948) (= (x1595 18446744073709551615 x2287) x703)) x1212) x1105))
(assert (x2007 x1168))
(assert (x1750 x533))
(assert (x1954 x2069))
(assert (x2231 (x1074 (x2260 (+ 160 x402)))))
(assert (x877 x2485))
(assert (x2007 x2135))
(assert (x877 x532))
(assert (= (and x47 x2083) x619))
(assert (and (=> (< 0 18446744073709551616) (= x1424 (+ (x255 x1424 18446744073709551616) (* (x1266 x1424 18446744073709551616) 18446744073709551616)))) (x1129 x1424 18446744073709551616) (x270 x1424 18446744073709551616) (x48 x1424 18446744073709551616)))
(assert (and (x1764 x307 256) (x2501 x307 256) (= (* 256 (x1266 x307 256)) (- x307 (x1595 255 x307))) (=> (and (< 0 x307) (> 256 0)) (and (<= (* 256 (x1266 x307 256)) x307) (> (* 256 (x1266 x307 256)) (- x307 256)))) (x1404 x307 256) (x2165 x307 256)))
(assert (x2007 x470))
(assert (x2007 x175))
(assert (x2007 x1116))
(assert (= (x1266 x488 1461501637330902918203684832716283019655932542976) (x2482 x488 160)))
(assert (= 0 (x565 (x2260 (+ x859 32)))))
(assert (x747 x1194))
(assert (= (or x2335 x1051 x819) x2254))
(assert (and (x1764 x1160 256) (x2501 x1160 256) (= (* 256 (x1266 x1160 256)) (- x1160 (x1595 255 x1160))) (=> (and (< 0 x1160) (> 256 0)) (and (<= (* 256 (x1266 x1160 256)) x1160) (> (* 256 (x1266 x1160 256)) (- x1160 256)))) (x1404 x1160 256) (x2165 x1160 256)))
(assert (x2007 x744))
(assert (x747 x833))
(assert (x2007 x2327))
(assert (= x1476 (and x732 (not x2081))))
(assert (x747 x782))
(assert (x1330 x2504))
(assert (=> (<= (x2027 (x2260 (+ 160 x182))) 10000) (= (x779 (x2027 (x2260 (+ x182 160)))) (x916 (x2027 (x2260 (+ x182 160)))))))
(assert (= (x998 (x916 (x1074 (x2260 (+ x402 160))))) (x1074 (x2260 (+ 160 x402)))))
(assert (x747 x2069))
(assert (= x2180 (=> (and (or x558 (not x558)) (= x558 (= 0 x33))) x748)))
(assert (x2007 x1794))
(assert (= 0 (x565 x1025)))
(assert (= x1210 (and (not x1029) x1606)))
(assert (x2007 x2362))
(assert (x2007 x793))
(assert (x2007 x2322))
(assert (x747 x1677))
(assert (= (=> (and (= x2387 (x2260 (+ x683 32))) (= (x1237 x1304) x2343) (= x2234 (not (> x1355 x2387)))) (and x1338 x2234)) x2418))
(assert (= x300 (and x2015 x604)))
(assert (x877 (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x1116)))
(assert (=> (>= 10000 (x1202 (x2260 (+ x2489 96)))) (= (x916 (x1202 (x2260 (+ x2489 96)))) (x779 (x1202 (x2260 (+ x2489 96)))))))
(assert (x885 x271))
(assert (= (x998 (x916 (x1202 (x2260 (+ x2489 32))))) (x1202 (x2260 (+ 32 x2489)))))
(assert (x2231 x804))
(assert (x2007 x1811))
(assert (= (x565 (x2260 (+ 192 x2489))) 0))
(assert (x2007 x2454))
(assert (x2421 x2429))
(assert (and (=> (< 0 2) (= x1581 (+ (x255 x1581 2) (* (x1266 x1581 2) 2)))) (x1129 x1581 2) (x270 x1581 2) (x48 x1581 2)))
(assert (x1330 x1116))
(assert (x2007 x909))
(assert (= x2295 (=> (and (not (>= (+ x2139 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x468 x911) (= x1292 x1153)) x1659)))
(assert (x1330 x216))
(assert (= 0 (x565 (x2260 (+ 128 x402)))))
(assert (x2007 x2006))
(assert (and (=> (< 0 4294967296) (= x1782 (+ (x255 x1782 4294967296) (* (x1266 x1782 4294967296) 4294967296)))) (x1129 x1782 4294967296) (x270 x1782 4294967296) (x48 x1782 4294967296)))
(assert (x2007 x1197))
(assert (= (x998 (x916 (x1832 (x2260 (+ 160 x537))))) (x1832 (x2260 (+ 160 x537)))))
(assert (x2007 x2249))
(assert (= (x916 115792089210356248756420345214020892766250353992003419616917011526809519390720) (x779 115792089210356248756420345214020892766250353992003419616917011526809519390720)))
(assert (x885 x773))
(assert (let ((x1706 (* x1867 6277101735386680763835789423207666416102355444464034512896))) (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1706 (+ (x255 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (x2007 x2062))
(assert (x1954 x696))
(assert (x747 x1797))
(assert (x2007 x81))
(assert (x2007 x1647))
(assert (x747 x1296))
(assert (and (x1778 x1867 6277101735386680763835789423207666416102355444464034512896) (x1905 x1867 6277101735386680763835789423207666416102355444464034512896) (= (x482 x1867 6277101735386680763835789423207666416102355444464034512896) (* 6277101735386680763835789423207666416102355444464034512896 x1867)) (x509 x1867 6277101735386680763835789423207666416102355444464034512896) (x699 x1867 6277101735386680763835789423207666416102355444464034512896) (x2495 x1867 6277101735386680763835789423207666416102355444464034512896) (and (= (- (* (- 115792089237316195417293883273301227089434195242432897623355228563449095127040) x1867) (- 13407807929942597098847186273910239236930042012704388843369920083034445969792056777621235010053505504363840807472722485292991361205680392012899047377469440)) (x482 (- x1867 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089237316195417293883273301227089434195242432897623355228563449095127040))) (= (x482 (- x1867 115792089237316195423570985008687907853269984665640564039457584007913129639936) 6277101735386680763835789423207666416102355444464034512896) (- (* 6277101735386680763835789423207666416102355444464034512896 x1867) 726838724295606890549323807888004534353641360687318060281490199180639288113397923326191050713763565560762521606266177933534601628614656)) (= (x482 x1867 (- 115792089237316195417293883273301227089434195242432897623355228563449095127040)) (* (- 115792089237316195417293883273301227089434195242432897623355228563449095127040) x1867)))))
(assert (= (x779 4294967296) (x916 4294967296)))
(assert (x885 x781))
(assert (= (x565 (x2260 (+ x859 64))) 0))
(assert (x2007 x570))
(assert (x2007 x2228))
(assert (= (x998 (x295 x1448 x516)) (+ x516 (x998 x1448))))
(assert (x2231 (x1433 224)))
(assert (x2007 x2101))
(assert (x877 x1296))
(assert (= (and x685 x2099) x988))
(assert (=> (<= (x1433 320) 10000) (= (x916 (x1433 320)) (x779 (x1433 320)))))
(assert (= x546 (and x266 x1812)))
(assert (= x1947 (and x1841 x2254)))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x555 (+ (x255 x555 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x555 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x555 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x555 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x555 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x2007 x1052))
(assert (= 0 (x565 x2035)))
(assert (x2007 x1632))
(assert (x2007 x2443))
(assert (x2007 x2108))
(assert (= (x1266 x1668 6277101735386680763835789423207666416102355444464034512896) (x2482 x1668 192)))
(assert (and (x1764 x533 2) (x2501 x533 2) (= (* 2 (x1266 x533 2)) (- x533 (x1595 1 x533))) (=> (and (< 0 x533) (> 2 0)) (and (<= (* 2 (x1266 x533 2)) x533) (> (* 2 (x1266 x533 2)) (- x533 2)))) (x1404 x533 2) (x2165 x533 2)))
(assert (=> (<= (x2263 (x2260 (+ x1866 64))) 10000) (= (x916 (x2263 (x2260 (+ x1866 64)))) (x779 (x2263 (x2260 (+ x1866 64)))))))
(assert (x885 x19))
(assert (= x1851 (x916 (x998 x1851))))
(assert (= (x2482 x1128 160) (x1266 x1128 1461501637330902918203684832716283019655932542976)))
(assert (x2231 x419))
(assert (and (x1764 x2460 256) (x2501 x2460 256) (= (* 256 (x1266 x2460 256)) (- x2460 (x1595 255 x2460))) (=> (and (< 0 x2460) (> 256 0)) (and (<= (* 256 (x1266 x2460 256)) x2460) (> (* 256 (x1266 x2460 256)) (- x2460 256)))) (x1404 x2460 256) (x2165 x2460 256)))
(assert (x2007 x1009))
(assert (x2007 x533))
(assert (x877 x1616))
(assert (= (and x1344 x2325) x2152))
(assert (x877 x1458))
(assert (= (=> (and (not (> x1849 x1993)) (= x402 (x2260 (+ 1 x2193))) (= (x1074 x2084) x1993) (= x1849 (x2260 (+ x2139 1))) (= (>= 224 x2139) x1267)) (and (=> (= (ite (<= x2139 32) (x1365 (x916 (x1074 x402)) 0) (ite (>= 64 x2139) (x115 (x916 (x1074 x402)) (x916 (x1074 (x2260 (+ 32 x402)))) 0) (ite (<= x2139 96) (x2298 (x916 (x1074 x402)) (x916 (x1074 (x2260 (+ 32 x402)))) (x916 (x1074 (x2260 (+ 64 x402)))) 0) (ite (>= 128 x2139) (x523 (x916 (x1074 x402)) (x916 (x1074 (x2260 (+ x402 32)))) (x916 (x1074 (x2260 (+ x402 64)))) (x916 (x1074 (x2260 (+ 96 x402)))) 0) (ite (>= 160 x2139) (x1068 (x916 (x1074 x402)) (x916 (x1074 (x2260 (+ x402 32)))) (x916 (x1074 (x2260 (+ x402 64)))) (x916 (x1074 (x2260 (+ 96 x402)))) (x916 (x1074 (x2260 (+ 128 x402)))) 0) (ite (>= 192 x2139) (x1254 (x916 (x1074 x402)) (x916 (x1074 (x2260 (+ x402 32)))) (x916 (x1074 (x2260 (+ 64 x402)))) (x916 (x1074 (x2260 (+ x402 96)))) (x916 (x1074 (x2260 (+ x402 128)))) (x916 (x1074 (x2260 (+ x402 160)))) 0) (ite (<= x2139 224) (x314 (x916 (x1074 x402)) (x916 (x1074 (x2260 (+ x402 32)))) (x916 (x1074 (x2260 (+ 64 x402)))) (x916 (x1074 (x2260 (+ x402 96)))) (x916 (x1074 (x2260 (+ 128 x402)))) (x916 (x1074 (x2260 (+ 160 x402)))) (x916 (x1074 (x2260 (+ 192 x402)))) 0) (x916 x38)))))))) x911) x2295) x1267)) x409))
(assert (and (=> (< 0 131072) (= x2442 (+ (x255 x2442 131072) (* (x1266 x2442 131072) 131072)))) (x1129 x2442 131072) (x270 x2442 131072) (x48 x2442 131072)))
(assert (x747 115792089210356248756420345214020892766250353992003419616917011526809519390720))
(assert (x2007 x1776))
(assert (= x1465 (and x1320 x1422)))
(assert (x2007 x671))
(assert (= (and (not x1167) x770) x2061))
(assert (x1954 x1613))
(assert (=> (<= (x660 (x2260 (+ x859 160))) 10000) (= (x916 (x660 (x2260 (+ 160 x859)))) (x779 (x660 (x2260 (+ 160 x859)))))))
(assert (and (=> (< 0 32) (= x2456 (+ (x255 x2456 32) (* (x1266 x2456 32) 32)))) (x1129 x2456 32) (x270 x2456 32) (x48 x2456 32)))
(assert (= (x1433 352) (x998 (x916 (x1433 352)))))
(assert (and (=> (< 0 65536) (= x1975 (+ (x255 x1975 65536) (* (x1266 x1975 65536) 65536)))) (x1129 x1975 65536) (x270 x1975 65536) (x48 x1975 65536)))
(assert (x2007 x1573))
(assert (x2007 x582))
(assert (x885 x1044))
(assert (= x1669 (or x1239 x2297)))
(assert (= x1269 (and x1982 x1277)))
(assert (x2007 x1154))
(assert (x1330 x490))
(assert (= x2056 (or x146 x1569)))
(assert (x2007 x926))
(assert (x2007 x396))
(assert (= (x998 (x779 1058533858861509001837889330765714424124041949802528273061784713247848398848)) 1058533858861509001837889330765714424124041949802528273061784713247848398848))
(assert (x2007 x1363))
(assert (x2007 x620))
(assert (= x2187 (and x1896 (not x917))))
(assert (= (=> (and (= x1108 x1981) (= x440 x507) (= x2017 (x1595 18446744073709551615 x501)) (= x1868 (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1458)) (not (< 18446744073709551615 x1108)) (= x507 (x2260 (+ x1868 x1370))) (= x1108 (x2260 (+ 7776000 x2017))) (= x1458 (x2260 (+ x1045 31))) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1045) (and (> 32 x1045) (= true (<= x1045 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x501 (x1180 x1370)) (not (= x921 0))) x1444) x2000))
(assert (= (=> (and (= x384 (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x532)) (= (x2260 (+ 7776000 x964)) x1610) (not (> x1610 18446744073709551615)) (= (x2260 (+ x1537 x384)) x2198) (not (or (> x1001 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1001) true) (> 32 x1001)))) (not (= x228 0)) (= x1610 x2050) (= x964 (x1595 18446744073709551615 x391)) (= x391 (x1132 x1537)) (= x532 (x2260 (+ 31 x1001))) (= x2198 x876)) x934) x815))
(assert (= (x2482 x2117 160) (x1266 x2117 1461501637330902918203684832716283019655932542976)))
(assert (x2007 x210))
(assert (= x1190 (or x563 x310)))
(assert (let ((x1706 (* 1461501637330902918203684832716283019655932542976 x216))) (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1706 (+ (x255 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (x747 x2390))
(assert (x2007 x1760))
(assert (and (x1778 x2367 6277101735386680763835789423207666416102355444464034512896) (x1905 x2367 6277101735386680763835789423207666416102355444464034512896) (= (x482 x2367 6277101735386680763835789423207666416102355444464034512896) (* 6277101735386680763835789423207666416102355444464034512896 x2367)) (x509 x2367 6277101735386680763835789423207666416102355444464034512896) (x699 x2367 6277101735386680763835789423207666416102355444464034512896) (x2495 x2367 6277101735386680763835789423207666416102355444464034512896) (and (= (- (* (- 115792089237316195417293883273301227089434195242432897623355228563449095127040) x2367) (- 13407807929942597098847186273910239236930042012704388843369920083034445969792056777621235010053505504363840807472722485292991361205680392012899047377469440)) (x482 (- x2367 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089237316195417293883273301227089434195242432897623355228563449095127040))) (= (x482 (- x2367 115792089237316195423570985008687907853269984665640564039457584007913129639936) 6277101735386680763835789423207666416102355444464034512896) (- (* 6277101735386680763835789423207666416102355444464034512896 x2367) 726838724295606890549323807888004534353641360687318060281490199180639288113397923326191050713763565560762521606266177933534601628614656)) (= (x482 x2367 (- 115792089237316195417293883273301227089434195242432897623355228563449095127040)) (* (- 115792089237316195417293883273301227089434195242432897623355228563449095127040) x2367)))))
(assert (and (x1778 256 x2108) (x1905 256 x2108) (= (x482 256 x2108) (* x2108 256)) (x509 256 x2108) (x699 256 x2108) (x2495 256 x2108) (and (= (- (* (- x2108 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* (- x2108 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x2108 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x2108) (- (* x2108 256) (* x2108 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 256 (- x2108 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2108 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256)))))
(assert (x1954 x668))
(assert (= (x2032 (x2260 (+ 192 x2157))) (x998 (x916 (x2032 (x2260 (+ 192 x2157)))))))
(assert (= x1583 (or x1007 x1123)))
(assert (= x136 (and (not x1314) x1401)))
(assert (= x1087 (and x2497 x1957)))
(assert (=> (>= 10000 (x1714 x743)) (= (x916 (x1714 x743)) (x779 (x1714 x743)))))
(assert (and (x1778 8 x1677) (x1905 8 x1677) (= (x482 8 x1677) (* x1677 8)) (x509 8 x1677) (x699 8 x1677) (x2495 8 x1677) (and (= (- (* (- x1677 115792089237316195423570985008687907853269984665640564039457584007913129639936) 8) (* (- x1677 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639928) (- x1677 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639928) x1677) (- (* x1677 8) (* x1677 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 8 (- x1677 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1677 115792089237316195423570985008687907853269984665640564039457584007913129639936) 8)))))
(assert (x2007 x825))
(assert (x2007 x2113))
(assert (x2007 x1348))
(assert (= (x660 (x2260 (+ x859 64))) (x998 (x916 (x660 (x2260 (+ x859 64)))))))
(assert (=> (<= (x1092 (x2260 (+ x1060 64))) 10000) (= (x779 (x1092 (x2260 (+ 64 x1060)))) (x916 (x1092 (x2260 (+ 64 x1060)))))))
(assert (x2007 x180))
(assert (x2149 x1743))
(assert (= (and x372 x2491) x1910))
(assert (x2007 x1552))
(assert (x2007 x1409))
(assert (= x836 (x998 (x916 x836))))
(assert (x811 x1424))
(assert (=> (<= (x1433 192) 10000) (= (x779 (x1433 192)) (x916 (x1433 192)))))
(assert (x15 x1700))
(assert (x2007 x1525))
(assert (x2231 x160))
(assert (and (=> (< 0 131072) (= x1796 (+ (x255 x1796 131072) (* (x1266 x1796 131072) 131072)))) (x1129 x1796 131072) (x270 x1796 131072) (x48 x1796 131072)))
(assert (x2007 x1423))
(assert (x2007 x1099))
(assert (= x1913 x1375))
(assert (x747 x51))
(assert (= x1520 (and x1276 (not x621))))
(assert (= (x998 (x916 (x1074 (x2260 (+ x402 32))))) (x1074 (x2260 (+ x402 32)))))
(assert (=> (>= 10000 (x506 (x2260 (+ x381 128)))) (= (x779 (x506 (x2260 (+ 128 x381)))) (x916 (x506 (x2260 (+ 128 x381)))))))
(assert (x1750 x271))
(assert (and (x1764 x202 32) (x2501 x202 32) (= (* 32 (x1266 x202 32)) (- x202 (x1595 31 x202))) (=> (and (< 0 x202) (> 32 0)) (and (<= (* 32 (x1266 x202 32)) x202) (> (* 32 (x1266 x202 32)) (- x202 32)))) (x1404 x202 32) (x2165 x202 32)))
(assert (x2007 x2026))
(assert (= x519 (and x1244 (not x1798))))
(assert (= (or x1783 x1368) x1682))
(assert (= (or x2143 x1618 x1550) x84))
(assert (x2007 x1599))
(assert (=> (>= 10000 (x1202 (x2260 (+ 128 x2489)))) (= (x779 (x1202 (x2260 (+ 128 x2489)))) (x916 (x1202 (x2260 (+ x2489 128)))))))
(assert (= x2090 (and x244 (not x1077))))
(assert (= x1051 (or x1335 x2012)))
(assert (=> (>= 10000 (x1714 (x2260 (+ x743 192)))) (= (x916 (x1714 (x2260 (+ 192 x743)))) (x779 (x1714 (x2260 (+ 192 x743)))))))
(assert (= (x1202 (x2260 (+ 64 x2489))) (x998 (x916 (x1202 (x2260 (+ 64 x2489)))))))
(assert (and (x1764 x1205 1461501637330902918203684832716283019655932542976) (x2501 x1205 1461501637330902918203684832716283019655932542976) (= (* 1461501637330902918203684832716283019655932542976 (x1266 x1205 1461501637330902918203684832716283019655932542976)) (- x1205 (x1595 1461501637330902918203684832716283019655932542975 x1205))) (=> (and (< 0 x1205) (> 1461501637330902918203684832716283019655932542976 0)) (and (<= (* 1461501637330902918203684832716283019655932542976 (x1266 x1205 1461501637330902918203684832716283019655932542976)) x1205) (> (* 1461501637330902918203684832716283019655932542976 (x1266 x1205 1461501637330902918203684832716283019655932542976)) (- x1205 1461501637330902918203684832716283019655932542976)))) (x1404 x1205 1461501637330902918203684832716283019655932542976) (x2165 x1205 1461501637330902918203684832716283019655932542976)))
(assert (x2007 x1195))
(assert (and (=> (< 0 131072) (= x2069 (+ (x255 x2069 131072) (* (x1266 x2069 131072) 131072)))) (x1129 x2069 131072) (x270 x2069 131072) (x48 x2069 131072)))
(assert (x2231 (x1832 (x2260 (+ x537 192)))))
(assert (= (x565 x2193) 0))
(assert (x2007 x1718))
(assert (= x1075 (=> (and (= (x864 128) x1342) (= x433 (x1664 x813 248)) (= (x2260 (+ x826 1)) x505) (= x813 (x1595 255 x1958)) (= (< 0 x1342) x438) (= (x46 128) x1958) (= x826 (x2260 (+ 32 x11)))) (and (=> (not x438) x1842) (=> (and (and (= x887 (x864 160)) (= x505 x1632) (= x2023 (> x1342 32))) x438) (and (=> (not x2023) x1842) (=> (and x2023 (and (= (< 64 x1342) x389) (= (x2260 (+ 32 x505)) x1071) (= (x1857 192) x744))) (and (=> (not x389) x1842) (=> (and x389 (and (= (x2260 (+ 64 x505)) x180) (= (< 96 x1342) x174) (= (x129 224) x777))) (and (=> (not x174) x1842) (=> x174 x50)))))))))))
(assert (and (x1764 x2449 2) (x2501 x2449 2) (= (* 2 (x1266 x2449 2)) (- x2449 (x1595 1 x2449))) (=> (and (< 0 x2449) (> 2 0)) (and (<= (* 2 (x1266 x2449 2)) x2449) (> (* 2 (x1266 x2449 2)) (- x2449 2)))) (x1404 x2449 2) (x2165 x2449 2)))
(assert (x15 x114))
(assert (x2007 x1831))
(assert (x1330 x2108))
(assert (= x448 (and x1384 (not x176))))
(assert (= 0 (x565 (x2260 (+ 192 x2366)))))
(assert (x747 131072))
(assert (and (x1764 x1616 2) (x2501 x1616 2) (= (* 2 (x1266 x1616 2)) (- x1616 (x1595 1 x1616))) (=> (and (< 0 x1616) (> 2 0)) (and (<= (* 2 (x1266 x1616 2)) x1616) (> (* 2 (x1266 x1616 2)) (- x1616 2)))) (x1404 x1616 2) (x2165 x1616 2)))
(assert (x2007 x2355))
(assert (= x868 (and x2319 x198)))
(assert (x2007 x1017))
(assert (x2007 x2069))
(assert (= (=> (= x2350 (= x407 (x779 0))) (and (=> (and (and (or (and (and (> 4294967296 x1438) (= x1684 1)) x2219) (and (= x466 x1684) (not x2219))) (and (= (< 0 x466) x2219) (= (x2260 (+ 4 x1740)) x1050))) (not x2350)) x1701) (=> (and x2350 (and (= x1501 x1740) (= x2388 (x2482 x1205 192)))) x436))) x186))
(assert (x2007 x2452))
(assert (x2250 x555))
(assert (= (x1092 (x2260 (+ 160 x1060))) (x998 (x916 (x1092 (x2260 (+ 160 x1060)))))))
(assert (x811 x2433))
(assert (x2007 x207))
(assert (x2007 x1010))
(assert (x2007 x2124))
(assert (= (or x2378 x2002 x474) x2190))
(assert (= (=> (and (= x1036 (not (< 128 x542))) (= x163 (x1053 x1158)) (= x612 (x2260 (+ 96 x843))) (= (x2260 (+ 96 x986)) x1158)) (and x1036 x1091)) x955))
(assert (= (=> (and (or (and (not x70) (and (= x1297 x1094) (= x629 x2115))) (and (and (= x629 (ite x1452 0 x2115)) (= x1452 (= 65536 x1361)) (= x1361 (x1595 65536 x1094)) (= 0 x1297)) x70)) (= (> x111 x1577) x70)) x957) x714))
(assert (x2007 x76))
(assert (= 0 (x565 (x2260 (+ 96 x743)))))
(assert (x2007 x1668))
(assert (x1330 8))
(assert (= (x779 65535) (x916 65535)))
(assert (x747 x2442))
(assert (x2007 x749))
(assert (x2231 (x1832 (x2260 (+ 128 x537)))))
(assert (x2007 x1745))
(assert (= x1606 (and x418 (not x1457))))
(assert (x2007 x785))
(assert (x2007 x1526))
(assert (x2007 x1869))
(assert (and (=> (< 0 131072) (= x1020 (+ (x255 x1020 131072) (* (x1266 x1020 131072) 131072)))) (x1129 x1020 131072) (x270 x1020 131072) (x48 x1020 131072)))
(assert (x877 x696))
(assert (= x330 (x998 (x916 x330))))
(assert (=> (<= x794 10000) (= (x916 x794) (x779 x794))))
(assert (x2007 x302))
(assert (= (and x1399 (not x345)) x539))
(assert (= (x2263 (x2260 (+ x1866 192))) (x998 (x916 (x2263 (x2260 (+ x1866 192)))))))
(assert (x2231 (x2027 (x2260 (+ 32 x182)))))
(assert (x2007 x2352))
(assert (= (and (not x1717) x1779) x1912))
(assert (and (=> (< 0 18446744073709551616) (= x2341 (+ (x255 x2341 18446744073709551616) (* (x1266 x2341 18446744073709551616) 18446744073709551616)))) (x1129 x2341 18446744073709551616) (x270 x2341 18446744073709551616) (x48 x2341 18446744073709551616)))
(assert (= (or x1506 x2042) x2126))
(assert (x2007 x66))
(assert (x2007 x1293))
(assert (x2007 x1316))
(assert (x877 x931))
(assert (x877 x30))
(assert (= (=> (and (= (not (< 128 x1342)) x1245) (= x2150 (x1690 256)) (= x1265 (x2260 (+ 96 x505)))) (and x1245 x1842)) x50))
(assert (and (=> (< 0 131072) (= x1297 (+ (x255 x1297 131072) (* (x1266 x1297 131072) 131072)))) (x1129 x1297 131072) (x270 x1297 131072) (x48 x1297 131072)))
(assert (= 0 (x565 (x2260 (+ 64 x933)))))
(assert (= x2041 (x998 (x916 x2041))))
(assert (x2007 x2314))
(assert (x877 x2199))
(assert (x2007 x1808))
(assert (and (x1764 x970 32) (x2501 x970 32) (= (* 32 (x1266 x970 32)) (- x970 (x1595 31 x970))) (=> (and (< 0 x970) (> 32 0)) (and (<= (* 32 (x1266 x970 32)) x970) (> (* 32 (x1266 x970 32)) (- x970 32)))) (x1404 x970 32) (x2165 x970 32)))
(assert (let ((x1706 (* x78 1461501637330902918203684832716283019655932542976))) (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1706 (+ (x255 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (x2007 x36))
(assert (= x101 (=> (and (= (x1832 x2161) x341) (= x147 (<= x2124 224)) (not (> x2240 x341)) (= (x2260 (+ 1 x1052)) x537) (= x2240 (x2260 (+ x2124 1)))) (and (=> (= (ite (<= x2124 32) (x1365 (x916 (x1832 x537)) 0) (ite (<= x2124 64) (x115 (x916 (x1832 x537)) (x916 (x1832 (x2260 (+ x537 32)))) 0) (ite (>= 96 x2124) (x2298 (x916 (x1832 x537)) (x916 (x1832 (x2260 (+ 32 x537)))) (x916 (x1832 (x2260 (+ 64 x537)))) 0) (ite (>= 128 x2124) (x523 (x916 (x1832 x537)) (x916 (x1832 (x2260 (+ x537 32)))) (x916 (x1832 (x2260 (+ x537 64)))) (x916 (x1832 (x2260 (+ x537 96)))) 0) (ite (>= 160 x2124) (x1068 (x916 (x1832 x537)) (x916 (x1832 (x2260 (+ x537 32)))) (x916 (x1832 (x2260 (+ x537 64)))) (x916 (x1832 (x2260 (+ x537 96)))) (x916 (x1832 (x2260 (+ 128 x537)))) 0) (ite (>= 192 x2124) (x1254 (x916 (x1832 x537)) (x916 (x1832 (x2260 (+ 32 x537)))) (x916 (x1832 (x2260 (+ x537 64)))) (x916 (x1832 (x2260 (+ 96 x537)))) (x916 (x1832 (x2260 (+ 128 x537)))) (x916 (x1832 (x2260 (+ x537 160)))) 0) (ite (>= 224 x2124) (x314 (x916 (x1832 x537)) (x916 (x1832 (x2260 (+ 32 x537)))) (x916 (x1832 (x2260 (+ x537 64)))) (x916 (x1832 (x2260 (+ x537 96)))) (x916 (x1832 (x2260 (+ x537 128)))) (x916 (x1832 (x2260 (+ x537 160)))) (x916 (x1832 (x2260 (+ x537 192)))) 0) (x916 x656)))))))) x131) x2259) x147))))
(assert (= x197 (=> (and (= (ite (< x2388 x100) x1513 (ite (>= 65535 x1513) (x2260 (+ x2141 x1513)) (x2215 x1513 x2141))) x1296) (= x2242 (x1595 18446744073709551615 x1424)) (= (x1595 1461501637330902918203684832716283019655932542975 x2106) x143) (= (< 0 x742) x857) (= (x287 (- x791 x160)) x286) (= (x1595 1461501637330902918203684832716283019655932542975 x2106) x791) (= x2135 (x2260 (+ x2203 (x2183 (x1664 x1867 192))))) (= (x1595 1461501637330902918203684832716283019655932542975 x2106) x1113) (= 0 x1016) (= x2470 (x2260 (+ x1501 32))) (not (= x143 0)) (= (x152 (x916 x1113)) x742) (= x383 (x1595 1461501637330902918203684832716283019655932542975 x2106)) (= x2203 (x2260 (+ x383 (x2183 (x1664 x2328 160))))) (= x2141 (x1595 4294901760 x858)) (> x286 0) (= (ite (< x2242 x2388) x2388 x1424) x2341) (= x2328 (x1595 4294967295 x1296)) (= (x1595 18446744073709551615 x2341) x1867) (= (x1595 1461501637330902918203684832716283019655932542975 x1157) x1016) (= (x2260 (+ 32 x1501)) x2277)) (and (=> (and (and (and (= (x2260 (+ x1745 160)) x2415) (= (x2260 (+ x2277 4)) x1745) (= (< 0 x1443) x1228) (= x2182 (x1595 1461501637330902918203684832716283019655932542975 x2106)) (= (x2260 (+ 32 x1066)) x2026) (= (x2260 (+ 32 x2415)) x42) (= (x2260 (+ 32 x1745)) x790) (= (x2260 (+ 32 x2026)) x2049) (= x1066 (x2260 (+ x790 32)))) (or (and x1228 (and x73 x1035 (= x1035 (= x2095 (x161 (x916 x2182)))) (= (x134 (x916 x2182)) x2095) (= (x134 (x916 x160)) x1127) (> 4294967296 x1313) (= x73 (<= x1127 (x161 (x916 x160)))))) (not x1228))) x857) x235) (=> (and (not x857) (= x1220 x2277)) x1673)))))
(assert (x2007 x1084))
(assert (x2007 x1235))
(assert (= (x1664 x1116 248) (x2183 (* x1116 452312848583266388373324160190187140051835877600158453279131187530910662656))))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2218 (+ (x255 x2218 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x2218 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x2218 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x2218 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x2218 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x2482 115792089237316195423570985008687907853269984665640564039457584007913129639935 x783) (ite (> 256 x783) (x1266 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1137 2 x783)) 0)))
(assert (x747 x1145))
(assert (x877 x2287))
(assert (= (=> (and (> x1083 0) (= (x1714 x2417) x1083) (= x963 (x2482 x1337 248)) (= (x1714 x1636) x1337) (= x2112 (> x963 0))) (and (=> x2112 x1733) (=> (and (not x2112) (= (x779 0) x2379)) x132))) x569))
(assert (= x2305 (and (not x355) x2266)))
(assert (= x808 (and (not x857) x2447)))
(assert (= x1919 (and x1508 x611)))
(assert (= (x565 (x2260 (+ x859 96))) 0))
(assert (x2007 x2129))
(assert (= x1852 (and x1214 (not x1927))))
(assert (x2007 x2070))
(assert (= (x1266 x2507 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2482 x2507 248)))
(assert (x2007 x525))
(assert (x2007 x837))
(assert (x2007 x2059))
(assert (=> (<= (x1074 (x2260 (+ x402 32))) 10000) (= (x779 (x1074 (x2260 (+ 32 x402)))) (x916 (x1074 (x2260 (+ x402 32)))))))
(assert (x2007 x158))
(assert (x2007 x893))
(assert (x2007 x1988))
(assert (and (=> (< 0 64) (= x2429 (+ (x255 x2429 64) (* (x1266 x2429 64) 64)))) (x1129 x2429 64) (x270 x2429 64) (x48 x2429 64)))
(assert (=> (<= x656 10000) (= (x779 x656) (x916 x656))))
(assert (= (and (not x1952) x1605) x259))
(assert (= x279 (or x397 x41)))
(assert (x2231 (x497 x933)))
(assert (= (x998 (x916 (x506 (x2260 (+ 64 x381))))) (x506 (x2260 (+ x381 64)))))
(assert (x2231 (x1074 (x2260 (+ x402 128)))))
(assert (= (x565 (x2260 (+ 192 x743))) 0))
(assert (= (x565 x935) 0))
(assert (x2007 x1179))
(assert (= (and (not x2219) x327) x1203))
(assert (x2007 x368))
(assert (x877 128))
(assert (= x1733 (=> (and (= (x1714 x2417) x1280) (= x743 (x2260 (+ 1 x1636))) (= (x2260 (+ 1 x963)) x2249) (not (> x2249 x1280)) (= (<= x963 224) x1665)) (and x1665 (=> (= (ite (<= x963 32) (x1365 (x916 (x1714 x743)) 0) (ite (>= 64 x963) (x115 (x916 (x1714 x743)) (x916 (x1714 (x2260 (+ 32 x743)))) 0) (ite (<= x963 96) (x2298 (x916 (x1714 x743)) (x916 (x1714 (x2260 (+ x743 32)))) (x916 (x1714 (x2260 (+ x743 64)))) 0) (ite (>= 128 x963) (x523 (x916 (x1714 x743)) (x916 (x1714 (x2260 (+ x743 32)))) (x916 (x1714 (x2260 (+ x743 64)))) (x916 (x1714 (x2260 (+ 96 x743)))) 0) (ite (>= 160 x963) (x1068 (x916 (x1714 x743)) (x916 (x1714 (x2260 (+ x743 32)))) (x916 (x1714 (x2260 (+ 64 x743)))) (x916 (x1714 (x2260 (+ x743 96)))) (x916 (x1714 (x2260 (+ x743 128)))) 0) (ite (>= 192 x963) (x1254 (x916 (x1714 x743)) (x916 (x1714 (x2260 (+ x743 32)))) (x916 (x1714 (x2260 (+ x743 64)))) (x916 (x1714 (x2260 (+ x743 96)))) (x916 (x1714 (x2260 (+ 128 x743)))) (x916 (x1714 (x2260 (+ 160 x743)))) 0) (ite (>= 224 x963) (x314 (x916 (x1714 x743)) (x916 (x1714 (x2260 (+ 32 x743)))) (x916 (x1714 (x2260 (+ x743 64)))) (x916 (x1714 (x2260 (+ 96 x743)))) (x916 (x1714 (x2260 (+ 128 x743)))) (x916 (x1714 (x2260 (+ 160 x743)))) (x916 (x1714 (x2260 (+ 192 x743)))) 0) (x916 x794)))))))) x2379) x132)))))
(assert (x2007 x675))
(assert (x2007 x1723))
(assert (= x1248 (and (not x2188) x1696)))
(assert (and (x1778 256 x1620) (x1905 256 x1620) (= (x482 256 x1620) (* x1620 256)) (x509 256 x1620) (x699 256 x1620) (x2495 256 x1620) (and (= (- (* (- x1620 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* (- x1620 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x1620 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x1620) (- (* x1620 256) (* x1620 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 256 (- x1620 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1620 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256)))))
(assert (=> (<= (x1832 (x2260 (+ x537 160))) 10000) (= (x779 (x1832 (x2260 (+ 160 x537)))) (x916 (x1832 (x2260 (+ x537 160)))))))
(assert (x747 x781))
(assert (= x2170 (=> (and (= (x1739 x125) x2212) (= x547 (x2260 (+ 32 x1943))) (= (not (< x547 x718)) x871)) (and x602 x871))))
(assert (= x1140 x607))
(assert (x2007 x256))
(assert (= (or x574 x1192) x1767))
(assert (and (=> (< 0 4294967296) (= x1975 (+ (x255 x1975 4294967296) (* (x1266 x1975 4294967296) 4294967296)))) (x1129 x1975 4294967296) (x270 x1975 4294967296) (x48 x1975 4294967296)))
(assert (= x2132 (and (not x1417) x606)))
(assert (x2007 x1715))
(assert (and (=> (< 0 2) (= x431 (+ (x255 x431 2) (* (x1266 x431 2) 2)))) (x1129 x431 2) (x270 x431 2) (x48 x431 2)))
(assert (x2007 x683))
(assert (= 0 (x565 x537)))
(assert (x2007 x2046))
(assert (x2007 x830))
(assert (= (and x2373 x1120) x1837))
(assert (x877 x487))
(assert (=> (<= (x1074 x402) 10000) (= (x916 (x1074 x402)) (x779 (x1074 x402)))))
(assert (x1954 x1975))
(assert (x1330 1461501637330902918203684832716283019655932542976))
(assert (x2007 x645))
(assert (and (=> (< 0 262144) (= x668 (+ (x255 x668 262144) (* (x1266 x668 262144) 262144)))) (x1129 x668 262144) (x270 x668 262144) (x48 x668 262144)))
(assert (= (x2263 (x2260 (+ x1866 64))) (x998 (x916 (x2263 (x2260 (+ 64 x1866)))))))
(assert (= (x565 (x2260 (+ x182 160))) 0))
(assert (x2007 x2242))
(assert (x2007 x2084))
(assert (x2007 x1593))
(assert (= (x565 (x2260 (+ x2366 128))) 0))
(assert (x2231 (x1202 (x2260 (+ x2489 192)))))
(assert (x2007 x1579))
(assert (x2007 x1200))
(assert (= 0 (x565 x999)))
(assert (= (=> (and (= x2099 (> x952 0)) (= (x946 128) x1966) (= (x946 128) x737) (= (x1664 x1811 248) x1551) (not (> 1 x2344)) (= (x1595 255 x1966) x1811) (= x2344 (x946 128)) (not (< 255 x737)) (= (x1771 128) x952) (= (x2260 (+ 32 x1619)) x401) (= (x2260 (+ 1 x401)) x1794)) (and (=> (and x2099 (and (= (> x952 32) x2353) (= x700 (x1771 160)) (= x1794 x2048))) (and (=> (and x2353 (and (= x2148 (< 64 x952)) (= (x2248 192) x1814) (= (x2260 (+ 32 x1794)) x2450))) (and (=> (and (and (= x2473 (x2260 (+ 64 x1794))) (= (x153 224) x1869) (= x2310 (< 96 x952))) x2148) (and (=> (not x2310) x1387) (=> x2310 x1586))) (=> (not x2148) x1387))) (=> (not x2353) x1387))) (=> (not x2099) x1387))) x2347))
(assert (x2007 x1094))
(assert (x2007 x1940))
(assert (x2007 x78))
(assert (x2007 x1160))
(assert (x2007 x1083))
(assert (x2231 (x2032 x2157)))
(assert (x2007 x1191))
(assert (= 0 (x565 (x2260 (+ x182 64)))))
(assert (= x242 (and (not x329) x2393)))
(assert (x2007 x192))
(assert (x2007 x1005))
(assert (= x677 x218))
(assert (and (x1778 2 x645) (x1905 2 x645) (= (x482 2 x645) (* x645 2)) (x509 2 x645) (x699 2 x645) (x2495 2 x645) (and (= (- (* (- x645 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2) (* (- x645 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x645 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x645) (- (* x645 2) (* x645 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 2 (- x645 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x645 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2)))))
(assert (=> (<= (x1074 (x2260 (+ x402 96))) 10000) (= (x916 (x1074 (x2260 (+ x402 96)))) (x779 (x1074 (x2260 (+ x402 96)))))))
(assert (and (x1764 x1668 6277101735386680763835789423207666416102355444464034512896) (x2501 x1668 6277101735386680763835789423207666416102355444464034512896) (= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x1668 6277101735386680763835789423207666416102355444464034512896)) (- x1668 (x1595 6277101735386680763835789423207666416102355444464034512895 x1668))) (=> (and (< 0 x1668) (> 6277101735386680763835789423207666416102355444464034512896 0)) (and (<= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x1668 6277101735386680763835789423207666416102355444464034512896)) x1668) (> (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x1668 6277101735386680763835789423207666416102355444464034512896)) (- x1668 6277101735386680763835789423207666416102355444464034512896)))) (x1404 x1668 6277101735386680763835789423207666416102355444464034512896) (x2165 x1668 6277101735386680763835789423207666416102355444464034512896)))
(assert (x1711 x2141))
(assert (x2007 x2077))
(assert (= x285 (and x176 x1384)))
(assert (= (x916 (x998 x37)) x37))
(assert (= x685 (or x1872 x67 x136)))
(assert (x1590 x1975))
(assert (and (=> (< 0 4294967296) (= x931 (+ (x255 x931 4294967296) (* (x1266 x931 4294967296) 4294967296)))) (x1129 x931 4294967296) (x270 x931 4294967296) (x48 x931 4294967296)))
(assert (x2007 x2074))
(assert (x877 x342))
(assert (x1112 x931))
(assert (x2007 x1183))
(assert (x2007 x1702))
(assert (x811 x250))
(assert (x2007 x1376))
(assert (and (=> (< 0 128) (= x441 (+ (x255 x441 128) (* (x1266 x441 128) 128)))) (x1129 x441 128) (x270 x441 128) (x48 x441 128)))
(assert (= 65537 (x998 (x779 65537))))
(assert (x2007 x1677))
(assert (x877 x707))
(assert (= (x2482 x200 248) (x1266 x200 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x2007 x731))
(assert (and (x1764 x2440 2) (x2501 x2440 2) (= (* 2 (x1266 x2440 2)) (- x2440 (x1595 1 x2440))) (=> (and (< 0 x2440) (> 2 0)) (and (<= (* 2 (x1266 x2440 2)) x2440) (> (* 2 (x1266 x2440 2)) (- x2440 2)))) (x1404 x2440 2) (x2165 x2440 2)))
(assert (x2007 x181))
(assert (= (and x662 x27) x1090))
(assert (x2231 x1022))
(assert (= (and (not x464) x1941) x732))
(assert (x2007 x332))
(assert (= (x2482 x1843 160) (x1266 x1843 1461501637330902918203684832716283019655932542976)))
(assert (x2007 x738))
(assert (x1954 x1836))
(assert (x15 x1039))
(assert (= 0 (x565 (x2260 (+ x1866 128)))))
(assert (= (=> (and (or (not x775) x775) (= x775 (= 0 x1639))) x1085) x2197))
(assert (= (=> (and (= x1740 x1861) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ 1 x1818))) (= x1770 x407)) x186) x1258))
(assert (x2007 x1788))
(assert (x1330 x2328))
(assert (= (and x2266 x355) x984))
(assert (and (x1764 x2223 2) (x2501 x2223 2) (= (* 2 (x1266 x2223 2)) (- x2223 (x1595 1 x2223))) (=> (and (< 0 x2223) (> 2 0)) (and (<= (* 2 (x1266 x2223 2)) x2223) (> (* 2 (x1266 x2223 2)) (- x2223 2)))) (x1404 x2223 2) (x2165 x2223 2)))
(assert (= (x1074 (x2260 (+ 64 x402))) (x998 (x916 (x1074 (x2260 (+ 64 x402)))))))
(assert (and (x1764 x1746 32) (x2501 x1746 32) (= (* 32 (x1266 x1746 32)) (- x1746 (x1595 31 x1746))) (=> (and (< 0 x1746) (> 32 0)) (and (<= (* 32 (x1266 x1746 32)) x1746) (> (* 32 (x1266 x1746 32)) (- x1746 32)))) (x1404 x1746 32) (x2165 x1746 32)))
(assert (= (x998 (x916 (x2283 352))) (x2283 352)))
(assert (= x1469 (=> (and (not (> x736 18446744073709551615)) (= x1209 (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1737)) (= (x2260 (+ x2389 31)) x1737) (= (x2260 (+ x1209 x239)) x139) (= x736 x1640) (= (x2260 (+ 7776000 x1655)) x736) (= x459 x139) (= x1655 (x1595 18446744073709551615 x1736)) (= x1736 (x1607 x239)) (not (= 0 x291)) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2389) true) (> 32 x2389)) (> x2389 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1435)))
(assert (x747 x1788))
(assert (x2007 x2181))
(assert (x885 x1339))
(assert (x877 x521))
(assert (x2007 x1908))
(assert (= x1681 (or x1529 x925)))
(assert (x2007 x2412))
(assert (= x596 (and (not x1982) x1277)))
(assert (=> (<= x1531 10000) (= (x916 x1531) (x779 x1531))))
(assert (= (and x1093 x65) x1933))
(assert (=> (>= 10000 (x1074 (x2260 (+ x402 160)))) (= (x916 (x1074 (x2260 (+ 160 x402)))) (x779 (x1074 (x2260 (+ 160 x402)))))))
(assert (= (and x2217 x1249) x1775))
(assert (x2007 x138))
(assert (x1330 x376))
(assert (= x1920 (and x2037 x1063)))
(assert (x2007 x1501))
(assert (x885 x36))
(assert (= (and (not x923) x2025) x2378))
(assert (=> (<= x1390 10000) (= (x779 x1390) (x916 x1390))))
(assert (x747 x1149))
(assert (= x1034 (=> (and (= (x1433 128) x2209) (= (<= x2209 224) x1805)) (and (=> (and (= (x2260 (+ x171 32)) x458) (= (x2260 (+ x926 32)) x1662) (= x2275 (x1595 4294967295 x931)) (= (> 32 x2384) x2398) (= x428 (x2260 (+ x2153 32))) (= (x2183 (- x556 (ite x2398 1 0))) x2147) (= x556 (x1595 1 x271)) (= x1619 (x2260 (+ x428 x926))) (= x931 (x2215 4294836223 x1513)) (< 0 x2147) (= x2169 (ite (<= x2209 32) (x1365 (x916 (x1433 160)) 0) (ite (<= x2209 64) (x115 (x916 (x1433 160)) (x916 (x1433 192)) 0) (ite (<= x2209 96) (x2298 (x916 (x1433 160)) (x916 (x1433 192)) (x916 (x1433 224)) 0) (ite (>= 128 x2209) (x523 (x916 (x1433 160)) (x916 (x1433 192)) (x916 (x1433 224)) (x916 (x1433 256)) 0) (ite (<= x2209 160) (x1068 (x916 (x1433 160)) (x916 (x1433 192)) (x916 (x1433 224)) (x916 (x1433 256)) (x916 (x1433 288)) 0) (ite (<= x2209 192) (x1254 (x916 (x1433 160)) (x916 (x1433 192)) (x916 (x1433 224)) (x916 (x1433 256)) (x916 (x1433 288)) (x916 (x1433 320)) 0) (ite (>= 224 x2209) (x314 (x916 (x1433 160)) (x916 (x1433 192)) (x916 (x1433 224)) (x916 (x1433 256)) (x916 (x1433 288)) (x916 (x1433 320)) (x916 (x1433 352)) 0) (x916 x1022))))))))) (= (x2260 (+ 32 x458)) x926) (= (x2260 (+ 32 x2166)) x171) (= (x115 (x916 x1531) (x779 5) 0) x1511) (= x2275 4294836223) (= (x115 (x916 x1531) x2169 0) x1851) (= (x2183 (* x376 32)) x2153) (= x2413 (= 0 x2384)) (= x2116 (x287 (- x2346 32))) (= (x1266 x271 2) x127) (= (x287 (- x926 x2166)) x2346) (= x271 (x305 x1511)) (= (x2260 (+ 31 x2384)) x1352) (= x376 (x1266 x1352 32)) (= (ite (> x556 0) x127 (x1595 127 x127)) x2384)) (and (=> x2413 x2347) (=> (and (not x2413) (= x1314 (< 31 x2384))) (and (=> (and x1314 (and (= x367 (x2260 (+ x1662 32))) (= (x295 x1759 1) x238) (= (x2260 (+ x2384 x1662)) x2392) (= (> x2392 x367) x1952) (= (x1365 x1511 0) x1759) (= (x1237 x1759) x2109))) (and (=> (not x1952) x1442) (=> x1952 x2284))) (=> (and (and (= x1510 (x305 x1511)) (= x1163 (x1266 x1510 256)) (= x2322 (x2183 (* 256 x1163)))) (not x1314)) x2347))))) x1805))))
(assert (x885 x2460))
(assert (= (=> (and (= (x1202 x1953) x1596) (< 0 x370) (= x370 (x1202 x1386)) (= (< 0 x1580) x65) (= (x2482 x1596 248) x1580)) (and (=> (and (= (x779 0) x2208) (not x65)) x1601) (=> x65 x514))) x1635))
(assert (x877 x1613))
(assert (x2007 x1482))
(assert (x2007 x810))
(assert (x2007 x2096))
(assert (= x1242 (and x1709 x1169)))
(assert (x747 x2478))
(assert (and (=> (< 0 65536) (= x1836 (+ (x255 x1836 65536) (* (x1266 x1836 65536) 65536)))) (x1129 x1836 65536) (x270 x1836 65536) (x48 x1836 65536)))
(assert (and (=> (< 0 4294967296) (= x2390 (+ (x255 x2390 4294967296) (* (x1266 x2390 4294967296) 4294967296)))) (x1129 x2390 4294967296) (x270 x2390 4294967296) (x48 x2390 4294967296)))
(assert (= (or x551 x1564 x460) x814))
(assert (x877 x796))
(assert (x2007 x64))
(assert (= x1597 (or x2091 x2005)))
(assert (= x1015 (and x1246 x1891)))
(assert (x1330 x645))
(assert (= x1738 (or x285 x448)))
(assert (x2007 x391))
(assert (x2007 x2232))
(assert (x2007 x1145))
(assert (x1750 x486))
(assert (x2007 x1539))
(assert (= (x998 (x916 (x2032 x2157))) (x2032 x2157)))
(assert (x877 x181))
(assert (= 0 (x565 (x2260 (+ 128 x933)))))
(assert (x2007 x2223))
(assert (= (x916 (x998 x468)) x468))
(assert (= (and x2447 x857) x2039))
(assert (x2007 x1880))
(assert (= x444 (=> (and (= (< 31 x645) x1240) (= x1991 (= (ite x1240 1 0) 1))) (and (=> (and (and (= (x1365 x52 0) x1439) (= x1146 (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x645)) (= x662 (< 0 x1146))) x1991) (and (=> x662 x823) (=> (and (and (= x184 32) (= x1944 x1439)) (not x662)) x1124))) (=> (and (and (= x1261 (x2183 (* x645 2))) (= (x2215 x850 x1261) x721) (= (>= 1 x850) x1493) (= x850 (x1595 x901 x475)) (= x901 (x2280 x572)) (= x1005 (ite (>= 1 x850) x2006 (ite x1493 x1505 x721))) (= (x2260 (+ x1619 32)) x572) (= (x2183 (* x645 8)) x1545) (= x1505 (x2260 (+ x850 x1261))) (= x475 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2482 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1545))) (= (x2260 (+ x850 x1261)) x2006)) (not x1991)) x633)))))
(assert (x877 x2478))
(assert (x1711 x995))
(assert (x1750 x335))
(assert (=> (<= (x1092 x1060) 10000) (= (x916 (x1092 x1060)) (x779 (x1092 x1060)))))
(assert (x2007 x1222))
(assert (x877 x533))
(assert (x747 x501))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1554 (+ (x255 x1554 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1554 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1554 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1554 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1554 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x747 x1975))
(assert (x2007 x1372))
(assert (x2231 (x2283 288)))
(assert (= 0 (x565 (x2260 (+ x933 96)))))
(assert (= x1816 (or x1815 x2010)))
(assert (x2007 x99))
(assert (x2007 x630))
(assert (x2007 x294))
(assert (x2231 (x1092 (x2260 (+ x1060 192)))))
(assert (x2007 x1265))
(assert (x2007 x706))
(assert (x2007 x1339))
(assert (x2231 (x232 (x2260 (+ x2366 32)))))
(assert (x2007 x2041))
(assert (= true x606))
(assert (x1330 x1163))
(assert (and (x1764 x99 32) (x2501 x99 32) (= (* 32 (x1266 x99 32)) (- x99 (x1595 31 x99))) (=> (and (< 0 x99) (> 32 0)) (and (<= (* 32 (x1266 x99 32)) x99) (> (* 32 (x1266 x99 32)) (- x99 32)))) (x1404 x99 32) (x2165 x99 32)))
(assert (and (x1764 x1986 32) (x2501 x1986 32) (= (* 32 (x1266 x1986 32)) (- x1986 (x1595 31 x1986))) (=> (and (< 0 x1986) (> 32 0)) (and (<= (* 32 (x1266 x1986 32)) x1986) (> (* 32 (x1266 x1986 32)) (- x1986 32)))) (x1404 x1986 32) (x2165 x1986 32)))
(assert (= (x916 (x998 x2067)) x2067))
(assert (= (and (not x1830) x1816) x2252))
(assert (x2231 (x497 (x2260 (+ x933 128)))))
(assert (x2007 x2087))
(assert (x885 x1289))
(assert (x2007 x291))
(assert (= (x565 x1168) 0))
(assert (x747 x2019))
(assert (and (=> (< 0 65536) (= x1513 (+ (x255 x1513 65536) (* (x1266 x1513 65536) 65536)))) (x1129 x1513 65536) (x270 x1513 65536) (x48 x1513 65536)))
(assert (= (x916 (x998 x407)) x407))
(assert (and (=> (< 0 18446744073709551616) (= x283 (+ (x255 x283 18446744073709551616) (* (x1266 x283 18446744073709551616) 18446744073709551616)))) (x1129 x283 18446744073709551616) (x270 x283 18446744073709551616) (x48 x283 18446744073709551616)))
(assert (x2007 x804))
(assert (x885 x647))
(assert (= (and (not x389) x2403) x2338))
(assert (and (=> (< 0 2) (= x2247 (+ (x255 x2247 2) (* (x1266 x2247 2) 2)))) (x1129 x2247 2) (x270 x2247 2) (x48 x2247 2)))
(assert (and (=> (< 0 2) (= x486 (+ (x255 x486 2) (* (x1266 x486 2) 2)))) (x1129 x486 2) (x270 x486 2) (x48 x486 2)))
(assert (x2007 x14))
(assert (= (and x1717 x1779) x324))
(assert (x2007 x969))
(assert (x2007 x2182))
(assert (and (x1764 x1843 6277101735386680763835789423207666416102355444464034512896) (x2501 x1843 6277101735386680763835789423207666416102355444464034512896) (= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x1843 6277101735386680763835789423207666416102355444464034512896)) (- x1843 (x1595 6277101735386680763835789423207666416102355444464034512895 x1843))) (=> (and (< 0 x1843) (> 6277101735386680763835789423207666416102355444464034512896 0)) (and (<= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x1843 6277101735386680763835789423207666416102355444464034512896)) x1843) (> (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x1843 6277101735386680763835789423207666416102355444464034512896)) (- x1843 6277101735386680763835789423207666416102355444464034512896)))) (x1404 x1843 6277101735386680763835789423207666416102355444464034512896) (x2165 x1843 6277101735386680763835789423207666416102355444464034512896)))
(assert (x2007 x1765))
(assert (= x990 (and x31 (not x1024))))
(assert (= (and x94 (not x352)) x1311))
(assert (and (x1764 x941 32) (x2501 x941 32) (= (* 32 (x1266 x941 32)) (- x941 (x1595 31 x941))) (=> (and (< 0 x941) (> 32 0)) (and (<= (* 32 (x1266 x941 32)) x941) (> (* 32 (x1266 x941 32)) (- x941 32)))) (x1404 x941 32) (x2165 x941 32)))
(assert (x877 x858))
(assert (x2007 x833))
(assert (x2007 x2141))
(assert (x2007 x552))
(assert (x2007 x1619))
(assert (= x761 (and x2252 (not x1628))))
(assert (= 0 (x565 x567)))
(assert (x877 (* 1461501637330902918203684832716283019655932542976 x216)))
(assert (x2007 x850))
(assert (x885 x1596))
(assert (x2007 x2429))
(assert (and (x1778 32 x1381) (x1905 32 x1381) (= (x482 32 x1381) (* x1381 32)) (x509 32 x1381) (x699 32 x1381) (x2495 32 x1381) (and (= (- (* (- x1381 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x1381 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1381 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1381) (- (* x1381 32) (* x1381 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 32 (- x1381 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1381 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)))))
(assert (x2007 x2507))
(assert (= x248 (=> (and (= x2130 x672) (= (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x752) x698) (= x672 (x1727 x2277)) (= x672 109562948294120585953088955926913691080166221410047079322077399086870164406272) (= x1723 (x2260 (+ x2277 x698))) (= (x2260 (+ x1313 31)) x752) (not (or (and (= (<= x1313 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1313 32)) (> x1313 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1723 x1220) (not (= 0 x1443)) (= x2130 (x1595 115792089210356248756420345214020892766250353992003419616917011526809519390720 x672))) x1673)))
(assert (x2007 x2460))
(assert (x877 x1788))
(assert (=> (>= 10000 (x1433 224)) (= (x779 (x1433 224)) (x916 (x1433 224)))))
(assert (and (=> (< 0 65536) (= x2485 (+ (x255 x2485 65536) (* (x1266 x2485 65536) 65536)))) (x1129 x2485 65536) (x270 x2485 65536) (x48 x2485 65536)))
(assert (=> (<= (x497 (x2260 (+ 160 x933))) 10000) (= (x916 (x497 (x2260 (+ 160 x933)))) (x779 (x497 (x2260 (+ 160 x933)))))))
(assert (x2007 x887))
(assert (x2007 x1066))
(assert (x2007 x1616))
(assert (x2007 x791))
(assert (x811 x944))
(assert (= 0 (x565 x381)))
(assert (= x1019 (and x2123 x1698)))
(assert (x2231 (x1202 (x2260 (+ 128 x2489)))))
(assert (x2007 x1656))
(assert (x877 x2429))
(assert (x2007 x1419))
(assert (x2007 x499))
(assert (and (=> (< 0 131072) (= x1836 (+ (x255 x1836 131072) (* (x1266 x1836 131072) 131072)))) (x1129 x1836 131072) (x270 x1836 131072) (x48 x1836 131072)))
(assert (x747 x1969))
(assert (= (x1832 (x2260 (+ x537 192))) (x998 (x916 (x1832 (x2260 (+ 192 x537)))))))
(assert (x2007 x1170))
(assert (= x1368 (and x2237 x260)))
(assert (x2250 x1411))
(assert (x2007 x127))
(assert (x2007 x2057))
(assert (=> (>= 10000 (x2032 (x2260 (+ 160 x2157)))) (= (x916 (x2032 (x2260 (+ x2157 160)))) (x779 (x2032 (x2260 (+ 160 x2157)))))))
(assert (and (x1764 x439 1461501637330902918203684832716283019655932542976) (x2501 x439 1461501637330902918203684832716283019655932542976) (= (* 1461501637330902918203684832716283019655932542976 (x1266 x439 1461501637330902918203684832716283019655932542976)) (- x439 (x1595 1461501637330902918203684832716283019655932542975 x439))) (=> (and (< 0 x439) (> 1461501637330902918203684832716283019655932542976 0)) (and (<= (* 1461501637330902918203684832716283019655932542976 (x1266 x439 1461501637330902918203684832716283019655932542976)) x439) (> (* 1461501637330902918203684832716283019655932542976 (x1266 x439 1461501637330902918203684832716283019655932542976)) (- x439 1461501637330902918203684832716283019655932542976)))) (x1404 x439 1461501637330902918203684832716283019655932542976) (x2165 x439 1461501637330902918203684832716283019655932542976)))
(assert (= x1217 (or x358 x539)))
(assert (x2007 x2308))
(assert (x2007 x375))
(assert (= (x998 (x916 (x1714 (x2260 (+ x743 160))))) (x1714 (x2260 (+ x743 160)))))
(assert (x2007 x580))
(assert (= 0 (x565 x1636)))
(assert (= (x1266 x616 1461501637330902918203684832716283019655932542976) (x2482 x616 160)))
(assert (x2231 (x2263 (x2260 (+ x1866 192)))))
(assert (x2007 x1531))
(assert (=> (<= (x2263 (x2260 (+ x1866 96))) 10000) (= (x916 (x2263 (x2260 (+ 96 x1866)))) (x779 (x2263 (x2260 (+ 96 x1866)))))))
(assert (= x1049 (and (not x449) x2282)))
(assert (x1330 x2213))
(assert (x2007 x608))
(assert (x1330 x625))
(assert (x2007 x2049))
(assert (x2149 x1484))
(assert (x2007 x1641))
(assert (= (x1202 (x2260 (+ 160 x2489))) (x998 (x916 (x1202 (x2260 (+ 160 x2489)))))))
(assert (= (and x1257 x545) x517))
(assert (= x2020 (or x687 x1947)))
(assert (x15 x2291))
(assert (= (and x2481 (not x2383)) x646))
(assert (x2231 (x2027 (x2260 (+ 96 x182)))))
(assert (= x1881 (and x2043 x558)))
(assert (= (x565 (x2260 (+ 64 x381))) 0))
(assert (x2007 x746))
(assert (= (and x1138 x1514) x95))
(assert (x452 x2485))
(assert (x1954 x2019))
(assert (x2007 x148))
(assert (x2007 x241))
(assert (and (x1764 x1356 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2501 x1356 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1356 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1356 (x1595 452312848583266388373324160190187140051835877600158453279131187530910662655 x1356))) (=> (and (< 0 x1356) (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0)) (and (<= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1356 452312848583266388373324160190187140051835877600158453279131187530910662656)) x1356) (> (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1356 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1356 452312848583266388373324160190187140051835877600158453279131187530910662656)))) (x1404 x1356 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2165 x1356 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (= x1477 (and (not x1067) x1676)))
(assert (x2007 x1917))
(assert (x2007 x1918))
(assert (x2231 (x1832 (x2260 (+ 96 x537)))))
(assert (= 0 (x565 160)))
(assert (x2007 x376))
(assert (= x275 x723))
(assert (x877 x1677))
(assert (= 0 (x565 (x2260 (+ x537 64)))))
(assert (= 0 (x565 (x2260 (+ 96 x2489)))))
(assert (= (=> (and (= (x2260 (+ x1792 x76)) x806) (= x1525 (ite (< 0 x2228) x114 (x1595 127 x114))) (= (x287 (- x414 32)) x1504) (= (x658 x1748) x2223) (= x114 (x1266 x2223 2)) (= x414 (x287 (- x806 x403))) (= (x2183 (- x2228 (ite x1646 1 0))) x499) (= x1748 (x115 x1851 (x779 5) 0)) (= (= x1525 0) x443) (= (x1595 1 x2223) x2228) (< 0 x499) (= (> 32 x1525) x1646)) (and (=> (and (and (not (> x1677 18446744073709551615)) (= (x1266 x2440 2) x1801) (= x456 (x1595 1 x2440)) (= x304 (x115 x1851 (x779 5) 0)) (= (< 31 x2317) x345) (= (x2453 x403) x1677) (> x2129 0) (= (x2183 (- x456 (ite x1303 1 0))) x2129) (= (< x2317 32) x1303) (= (x658 x304) x2440) (= x2317 (ite (> x456 0) x1801 (x1595 127 x1801)))) x443) (and (=> (not x345) x218) (=> (and x345 (and (= (x2260 (+ 31 x2317)) x1151) (= (x295 x1272 x2492) x1291) (= (> (x998 x1291) (x998 x502)) x266) (= x2492 (x1266 x1151 32)) (= (ite (< x1677 32) x1272 x1678) x502) (= x1272 (x1365 x304 0)) (= x1678 (x295 x1272 x2488)) (= (x2260 (+ 31 x1677)) x1010) (= (x1266 x1010 32) x2488))) (and (=> (not x266) x677) (=> x266 x959))))) (=> (not x443) x213))) x280))
(assert (= (and x434 (not x2200)) x217))
(assert (= (x565 256) 0))
(assert (x2007 x952))
(assert (x2007 x1307))
(assert (= (and x2416 (not x845)) x2311))
(assert (= (and x2351 (not x2336)) x2158))
(assert (x2007 x796))
(assert (x747 x1513))
(assert (= x1995 (=> (= x1652 (= x1925 (x779 0))) (and (=> (and (and (or (and (and (= x1840 1) (> 4294967296 x654)) x1040) (and (not x1040) (= x2154 x1840))) (and (= (> x2154 0) x1040) (= x1284 (x2260 (+ x635 4))))) (not x1652)) x1252) (=> (and x1652 (and (= x635 x2084) (= (x2482 x439 192) x1850))) x789)))))
(assert (x2007 x189))
(assert (x1330 x2264))
(assert (x747 x1796))
(assert (= x110 (=> (and (= x2156 (not (< x2063 x1930))) (= x1089 (x1739 x1473)) (= x2063 (x2260 (+ 32 x489)))) (and x607 x2156))))
(assert (= (=> (and (= (< x1218 x111) x1263) (or x1263 (not x1263))) x2459) x445))
(assert (= x1291 (x916 (x998 x1291))))
(assert (x2007 x293))
(assert (= (x1714 (x2260 (+ x743 96))) (x998 (x916 (x1714 (x2260 (+ 96 x743)))))))
(assert (x2007 x2499))
(assert (= (and x2305 x1604) x2416))
(assert (x2007 x1429))
(assert (x2007 x1625))
(assert (x2007 x1836))
(assert (x2007 x884))
(assert (= x1407 (=> (and (= x1843 (x1464 x2397)) (= x696 (x2482 x1843 160)) (= (x1595 18446744073709551615 x1161) x657) (= (ite (> x2004 x2050) x2050 x2433) x1161) (= x2004 (x1595 18446744073709551615 x2433)) (<= x1843 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1424 (ite (< x657 x1218) x1218 x1161)) (= (x1595 131072 x696) x739) (= (x115 x1851 (x779 1) 0) x2397) (= x308 (= x739 131072)) (>= x1843 0)) (and (=> (and (not x308) (and (= x2155 (x779 0)) (= x876 x2411))) x697) (=> (and (and (= (x658 x2044) x1224) (= (x2260 (+ x2332 x876)) x1121) (= (x2183 (- x412 (ite x2428 1 0))) x2038) (= x346 (x1266 x99 32)) (< 0 x2038) (= x2408 (x2260 (+ 32 x876))) (= x99 (x2260 (+ x297 31))) (= x1347 (x2183 (* 32 x346))) (= (ite (< 0 x412) x342 (x1595 127 x342)) x297) (= (> 32 x297) x2428) (= (= x297 0) x1312) (= x412 (x1595 1 x1224)) (= (x115 x1851 (x779 5) 0) x2044) (= x2332 (x2260 (+ x1347 32))) (= (x1266 x1224 2) x342)) x308) (and (=> (and (not x1312) (= x1063 (> x297 31))) (and (=> (and (and (= x1568 (x658 x2044)) (= x315 (x1266 x1568 256)) (= x1445 (x2183 (* 256 x315)))) (not x1063)) x1674) (=> (and (and (= x1099 (x1739 x526)) (= (< x294 x1691) x331) (= (x2260 (+ x297 x2408)) x1691) (= (x295 x526 1) x1965) (= (x1365 x2044 0) x526) (= (x2260 (+ 32 x2408)) x294)) x1063) (and (=> x331 x1679) (=> (not x331) x1992))))) (=> x1312 x1674)))))))
(assert (= (+ x2492 (x998 x1272)) (x998 (x295 x1272 x2492))))
(assert (= (and x1924 x118) x1391))
(assert (x2007 x263))
(assert (= (=> (and (= x702 (not (> x2392 x851))) (= (x1237 x238) x64) (= (x2260 (+ 32 x367)) x851)) (and x1442 x702)) x2284))
(assert (x2007 x419))
(assert (and (x1764 x1339 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2501 x1339 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1339 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1339 (x1595 452312848583266388373324160190187140051835877600158453279131187530910662655 x1339))) (=> (and (< 0 x1339) (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0)) (and (<= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1339 452312848583266388373324160190187140051835877600158453279131187530910662656)) x1339) (> (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1339 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1339 452312848583266388373324160190187140051835877600158453279131187530910662656)))) (x1404 x1339 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2165 x1339 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2340 (+ (x255 x2340 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x2340 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x2340 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x2340 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x2340 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x446 x444))
(assert (x747 x470))
(assert (x2231 (x232 (x2260 (+ x2366 128)))))
(assert (=> (>= 10000 (x2283 160)) (= (x779 (x2283 160)) (x916 (x2283 160)))))
(assert (x2007 x1382))
(assert (x2231 (x1074 (x2260 (+ 64 x402)))))
(assert (= (x998 (x779 4294901760)) 4294901760))
(assert (x669 x696))
(assert (=> (>= 10000 (x634 (x2260 (+ x1718 64)))) (= (x916 (x634 (x2260 (+ x1718 64)))) (x779 (x634 (x2260 (+ x1718 64)))))))
(assert (x2231 (x1433 192)))
(assert (=> (>= 10000 (x2263 (x2260 (+ x1866 32)))) (= (x916 (x2263 (x2260 (+ 32 x1866)))) (x779 (x2263 (x2260 (+ 32 x1866)))))))
(assert (x2007 x414))
(assert (= x35 (and (not x388) x597)))
(assert (and (x1778 x813 452312848583266388373324160190187140051835877600158453279131187530910662656) (x1905 x813 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (x482 x813 452312848583266388373324160190187140051835877600158453279131187530910662656) (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x813)) (x509 x813 452312848583266388373324160190187140051835877600158453279131187530910662656) (x699 x813 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2495 x813 452312848583266388373324160190187140051835877600158453279131187530910662656) (and (= (- (* (- 115339776388732929035197660848497720713218148788040405586178452820382218977280) x813) (- 13355433680216258829653813963056604541043899547855704341091828781832225889331072183923741976689688961175617671240445089717606406707212403657580392564654080)) (x482 (- x813 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115339776388732929035197660848497720713218148788040405586178452820382218977280))) (= (x482 (- x813 115792089237316195423570985008687907853269984665640564039457584007913129639936) 452312848583266388373324160190187140051835877600158453279131187530910662656) (- (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x813) 52374249726338269920211035149241586435466272736689036631732661889538140742474792878132321477214466514414186946040961136147476104734166288853256441430016)) (= (x482 x813 (- 115339776388732929035197660848497720713218148788040405586178452820382218977280)) (* (- 115339776388732929035197660848497720713218148788040405586178452820382218977280) x813)))))
(assert (x2231 (x634 (x2260 (+ x1718 192)))))
(assert (and (=> (< 0 131072) (= x2019 (+ (x255 x2019 131072) (* (x1266 x2019 131072) 131072)))) (x1129 x2019 131072) (x270 x2019 131072) (x48 x2019 131072)))
(assert (= x1461 (and x190 (not x1309))))
(assert (x877 (* 6277101735386680763835789423207666416102355444464034512896 x2077)))
(assert (and (=> (< 0 128) (= x521 (+ (x255 x521 128) (* (x1266 x521 128) 128)))) (x1129 x521 128) (x270 x521 128) (x48 x521 128)))
(assert (= 0 (x565 x402)))
(assert (x2149 x629))
(assert (x2231 (x1714 (x2260 (+ x743 64)))))
(assert (x2007 x1332))
(assert (= (and x1941 x464) x2326))
(assert (x747 65537))
(assert (x2007 x1353))
(assert (x2007 x2115))
(assert (= (x998 (x295 x120 1)) (+ (x998 x120) 1)))
(assert (= x244 (and x2244 (not x2221))))
(assert (and (=> (< 0 128) (= x1700 (+ (x255 x1700 128) (* (x1266 x1700 128) 128)))) (x1129 x1700 128) (x270 x1700 128) (x48 x1700 128)))
(assert (x1056 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1137 2 x783)))
(assert (and (=> (< 0 262144) (= x696 (+ (x255 x696 262144) (* (x1266 x696 262144) 262144)))) (x1129 x696 262144) (x270 x696 262144) (x48 x696 262144)))
(assert (x2007 x1986))
(assert (x2007 x2492))
(assert (= (and (not x2373) x1120) x943))
(assert (x2007 x1427))
(assert (= (=> (and (= (x2260 (+ x1953 1)) x2489) (= (x2260 (+ x1580 1)) x325) (= (x1202 x1386) x145) (not (> x325 x145)) (= (<= x1580 224) x1549)) (and x1549 (=> (= (ite (>= 32 x1580) (x1365 (x916 (x1202 x2489)) 0) (ite (<= x1580 64) (x115 (x916 (x1202 x2489)) (x916 (x1202 (x2260 (+ x2489 32)))) 0) (ite (>= 96 x1580) (x2298 (x916 (x1202 x2489)) (x916 (x1202 (x2260 (+ x2489 32)))) (x916 (x1202 (x2260 (+ 64 x2489)))) 0) (ite (>= 128 x1580) (x523 (x916 (x1202 x2489)) (x916 (x1202 (x2260 (+ 32 x2489)))) (x916 (x1202 (x2260 (+ 64 x2489)))) (x916 (x1202 (x2260 (+ x2489 96)))) 0) (ite (>= 160 x1580) (x1068 (x916 (x1202 x2489)) (x916 (x1202 (x2260 (+ 32 x2489)))) (x916 (x1202 (x2260 (+ x2489 64)))) (x916 (x1202 (x2260 (+ x2489 96)))) (x916 (x1202 (x2260 (+ 128 x2489)))) 0) (ite (<= x1580 192) (x1254 (x916 (x1202 x2489)) (x916 (x1202 (x2260 (+ x2489 32)))) (x916 (x1202 (x2260 (+ 64 x2489)))) (x916 (x1202 (x2260 (+ 96 x2489)))) (x916 (x1202 (x2260 (+ x2489 128)))) (x916 (x1202 (x2260 (+ x2489 160)))) 0) (ite (<= x1580 224) (x314 (x916 (x1202 x2489)) (x916 (x1202 (x2260 (+ 32 x2489)))) (x916 (x1202 (x2260 (+ 64 x2489)))) (x916 (x1202 (x2260 (+ x2489 96)))) (x916 (x1202 (x2260 (+ 128 x2489)))) (x916 (x1202 (x2260 (+ 160 x2489)))) (x916 (x1202 (x2260 (+ 192 x2489)))) 0) (x916 x419)))))))) x2208) x1601))) x514))
(assert (and (x1778 32 x525) (x1905 32 x525) (= (x482 32 x525) (* x525 32)) (x509 32 x525) (x699 32 x525) (x2495 32 x525) (and (= (- (* (- x525 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x525 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x525 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x525) (- (* x525 32) (* x525 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 32 (- x525 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x525 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)))))
(assert (x747 x2429))
(assert (and (=> (< 0 2) (= x1616 (+ (x255 x1616 2) (* (x1266 x1616 2) 2)))) (x1129 x1616 2) (x270 x1616 2) (x48 x1616 2)))
(assert (= (=> (and (= (not (< x189 x1069)) x2377) (= (x2260 (+ 32 x302)) x189) (= x1519 (x1739 x1974))) (and x2377 x1156)) x1574))
(assert (x2007 x1047))
(assert (x2007 x56))
(assert (x2007 x1441))
(assert (x2007 x1636))
(assert (=> (<= (x1202 (x2260 (+ 64 x2489))) 10000) (= (x916 (x1202 (x2260 (+ 64 x2489)))) (x779 (x1202 (x2260 (+ 64 x2489)))))))
(assert (and (x1764 x439 6277101735386680763835789423207666416102355444464034512896) (x2501 x439 6277101735386680763835789423207666416102355444464034512896) (= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x439 6277101735386680763835789423207666416102355444464034512896)) (- x439 (x1595 6277101735386680763835789423207666416102355444464034512895 x439))) (=> (and (< 0 x439) (> 6277101735386680763835789423207666416102355444464034512896 0)) (and (<= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x439 6277101735386680763835789423207666416102355444464034512896)) x439) (> (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x439 6277101735386680763835789423207666416102355444464034512896)) (- x439 6277101735386680763835789423207666416102355444464034512896)))) (x1404 x439 6277101735386680763835789423207666416102355444464034512896) (x2165 x439 6277101735386680763835789423207666416102355444464034512896)))
(assert (x885 32))
(assert (x2007 x2184))
(assert (x2007 x431))
(assert (=> (>= 10000 (x1832 (x2260 (+ 128 x537)))) (= (x779 (x1832 (x2260 (+ 128 x537)))) (x916 (x1832 (x2260 (+ 128 x537)))))))
(assert (= (and (not x1321) x406) x1214))
(assert (x2007 x1159))
(assert (= (and x2310 x223) x1724))
(assert (x877 x2314))
(assert (= (x565 x2408) 0))
(assert (x2007 x2360))
(assert (x2231 (x1714 (x2260 (+ 192 x743)))))
(assert (x2007 x2004))
(assert (x2007 x2449))
(assert (x877 x1480))
(assert (x2007 x417))
(assert (x885 1461501637330902918203684832716283019655932542976))
(assert (x2007 x2157))
(assert (x2231 x559))
(assert (and (=> (< 0 8) (= x1975 (+ (x255 x1975 8) (* (x1266 x1975 8) 8)))) (x1129 x1975 8) (x270 x1975 8) (x48 x1975 8)))
(assert (x2007 x2267))
(assert (x1711 4294836223))
(assert (x2007 x729))
(assert (x885 x486))
(assert (x747 x486))
(assert (x2007 x1868))
(assert (x2007 x1148))
(assert (= (x565 x1060) 0))
(assert (x877 x1736))
(assert (= x2342 (and x606 x1417)))
(assert (x1330 x1940))
(assert (= x1544 (and x2190 (not x1666))))
(assert (x2007 x1395))
(assert (= x1877 (and x2416 x845)))
(assert (=> (>= 10000 (x232 (x2260 (+ x2366 64)))) (= (x779 (x232 (x2260 (+ 64 x2366)))) (x916 (x232 (x2260 (+ x2366 64)))))))
(assert (x1112 x1513))
(assert (= x1274 (=> (and (= (x2260 (+ 32 x1827)) x333) (= x351 (not (> x1532 x333))) (= x503 (x1739 x2479))) (and x351 x1913))))
(assert (and (x1764 x1352 32) (x2501 x1352 32) (= (* 32 (x1266 x1352 32)) (- x1352 (x1595 31 x1352))) (=> (and (< 0 x1352) (> 32 0)) (and (<= (* 32 (x1266 x1352 32)) x1352) (> (* 32 (x1266 x1352 32)) (- x1352 32)))) (x1404 x1352 32) (x2165 x1352 32)))
(assert (= 0 (x565 x1988)))
(assert (x2007 x1041))
(assert (x2007 x24))
(assert (x885 x828))
(assert (x2007 x1861))
(assert (x2007 x854))
(assert (=> (<= (x1433 160) 10000) (= (x916 (x1433 160)) (x779 (x1433 160)))))
(assert (x2007 x1554))
(assert (x877 x1760))
(assert (= (=> (and (= 128 x2455) (= (x848 x11) x1707) (= x398 (< 0 x1707))) (and (=> (not x398) x2055) (=> (and (= x1211 (< 32 x1707)) x398) (and (=> (not x1211) x2055) (=> (and (= x352 (< 64 x1707)) x1211) (and (=> (and (= (< 96 x1707) x2065) x352) (and (=> x2065 x636) (=> (not x2065) x2055))) (=> (not x352) x2055))))))) x1673))
(assert (x2231 x534))
(assert (x1056 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1137 2 x1545)))
(assert (= 0 (x565 x375)))
(assert (x747 x1297))
(assert (x2007 x267))
(assert (= (and x1627 x1671) x8))
(assert (= (x1433 288) (x998 (x916 (x1433 288)))))
(assert (x2007 x2480))
(assert (= (x998 (x916 (x1832 (x2260 (+ x537 64))))) (x1832 (x2260 (+ 64 x537)))))
(assert (x877 x2019))
(assert (x2007 x1541))
(assert (= x929 (and x979 x357)))
(assert (and (x1778 8 x645) (x1905 8 x645) (= (x482 8 x645) (* x645 8)) (x509 8 x645) (x699 8 x645) (x2495 8 x645) (and (= (- (* (- x645 115792089237316195423570985008687907853269984665640564039457584007913129639936) 8) (* (- x645 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639928) (- x645 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639928) x645) (- (* x645 8) (* x645 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 8 (- x645 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x645 115792089237316195423570985008687907853269984665640564039457584007913129639936) 8)))))
(assert (x2007 x1654))
(assert (x885 x1151))
(assert (x747 x696))
(assert (x2007 x453))
(assert (and (=> (< 0 2) (= x533 (+ (x255 x533 2) (* (x1266 x533 2) 2)))) (x1129 x533 2) (x270 x533 2) (x48 x533 2)))
(assert (x2007 x400))
(assert (x811 x2287))
(assert (= 0 (x565 (x2260 (+ x381 192)))))
(assert (x811 x1736))
(assert (x2007 x966))
(assert (x2007 x2114))
(assert (x2007 x1355))
(assert (and (x1764 x271 2) (x2501 x271 2) (= (* 2 (x1266 x271 2)) (- x271 (x1595 1 x271))) (=> (and (< 0 x271) (> 2 0)) (and (<= (* 2 (x1266 x271 2)) x271) (> (* 2 (x1266 x271 2)) (- x271 2)))) (x1404 x271 2) (x2165 x271 2)))
(assert (=> (<= x1970 10000) (= (x779 x1970) (x916 x1970))))
(assert (= (=> (and (= x1339 (x2032 x1332)) (= (x2032 x105) x1502) (= x1666 (< 0 x24)) (= (x2482 x1339 248) x24) (< 0 x1502)) (and (=> x1666 x2354) (=> (and (= (x779 0) x889) (not x1666)) x2273))) x1140))
(assert (= (x1433 256) (x998 (x916 (x1433 256)))))
(assert (x877 x803))
(assert (= (and (not x1766) x312) x972))
(assert (x2007 x1792))
(assert (and (x1778 x2077 6277101735386680763835789423207666416102355444464034512896) (x1905 x2077 6277101735386680763835789423207666416102355444464034512896) (= (x482 x2077 6277101735386680763835789423207666416102355444464034512896) (* 6277101735386680763835789423207666416102355444464034512896 x2077)) (x509 x2077 6277101735386680763835789423207666416102355444464034512896) (x699 x2077 6277101735386680763835789423207666416102355444464034512896) (x2495 x2077 6277101735386680763835789423207666416102355444464034512896) (and (= (- (* (- 115792089237316195417293883273301227089434195242432897623355228563449095127040) x2077) (- 13407807929942597098847186273910239236930042012704388843369920083034445969792056777621235010053505504363840807472722485292991361205680392012899047377469440)) (x482 (- x2077 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089237316195417293883273301227089434195242432897623355228563449095127040))) (= (x482 (- x2077 115792089237316195423570985008687907853269984665640564039457584007913129639936) 6277101735386680763835789423207666416102355444464034512896) (- (* 6277101735386680763835789423207666416102355444464034512896 x2077) 726838724295606890549323807888004534353641360687318060281490199180639288113397923326191050713763565560762521606266177933534601628614656)) (= (x482 x2077 (- 115792089237316195417293883273301227089434195242432897623355228563449095127040)) (* (- 115792089237316195417293883273301227089434195242432897623355228563449095127040) x2077)))))
(assert (x1330 x1756))
(assert (=> (>= 10000 (x497 (x2260 (+ 64 x933)))) (= (x779 (x497 (x2260 (+ x933 64)))) (x916 (x497 (x2260 (+ 64 x933)))))))
(assert (x1711 x850))
(assert (x2007 x507))
(assert (x747 x250))
(assert (= (x998 (x916 (x497 (x2260 (+ 96 x933))))) (x497 (x2260 (+ 96 x933)))))
(assert (= x2459 (=> (and (<= 0 x828) (= (x1464 x1732) x828) (= (x2482 x828 160) x2442) (<= x828 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x115 (x916 x1531) (x779 1) 0) x1732) (= x1890 (= x2288 131072)) (= x2288 (x1595 131072 x2442))) (and (=> (and (not x1890) (and (= (x779 0) x2067) (= x1537 x649))) x609) (=> (and (and (= (x2260 (+ 32 x681)) x2374) (= x1548 (x2183 (- x14 (ite x2424 1 0)))) (= x2385 (x2260 (+ 31 x1348))) (= x14 (x1595 1 x533)) (= x640 (x115 (x916 x1531) (x779 5) 0)) (= x464 (= 0 x1348)) (= (x2260 (+ 32 x649)) x375) (= (x1266 x533 2) x30) (= x1348 (ite (> x14 0) x30 (x1595 127 x30))) (= x583 (x2260 (+ x2374 x649))) (= x2424 (< x1348 32)) (= (x2183 (* x2022 32)) x681) (= x533 (x658 x640)) (= (x1266 x2385 32) x2022) (> x1548 0)) x1890) (and (=> x464 x1336) (=> (and (= x2081 (> x1348 31)) (not x464)) (and (=> (and x2081 (and (= x1455 (x295 x520 1)) (= (x1739 x520) x580) (= x520 (x1365 x640 0)) (= x1765 (x2260 (+ x1348 x375))) (= x1024 (> x1765 x2079)) (= (x2260 (+ 32 x375)) x2079))) (and (=> (not x1024) x2068) (=> x1024 x760))) (=> (and (not x2081) (and (= (x1266 x647 256) x1620) (= (x658 x640) x647) (= (x2183 (* x1620 256)) x1106))) x1336)))))))))
(assert (x2007 x1502))
(assert (= (x1266 x1339 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2482 x1339 248)))
(assert (x2007 x154))
(assert (= (and (not x686) x2432) x303))
(assert (=> (>= 10000 (x2032 (x2260 (+ 192 x2157)))) (= (x779 (x2032 (x2260 (+ x2157 192)))) (x916 (x2032 (x2260 (+ 192 x2157)))))))
(assert (and (x1764 x616 1461501637330902918203684832716283019655932542976) (x2501 x616 1461501637330902918203684832716283019655932542976) (= (* 1461501637330902918203684832716283019655932542976 (x1266 x616 1461501637330902918203684832716283019655932542976)) (- x616 (x1595 1461501637330902918203684832716283019655932542975 x616))) (=> (and (< 0 x616) (> 1461501637330902918203684832716283019655932542976 0)) (and (<= (* 1461501637330902918203684832716283019655932542976 (x1266 x616 1461501637330902918203684832716283019655932542976)) x616) (> (* 1461501637330902918203684832716283019655932542976 (x1266 x616 1461501637330902918203684832716283019655932542976)) (- x616 1461501637330902918203684832716283019655932542976)))) (x1404 x616 1461501637330902918203684832716283019655932542976) (x2165 x616 1461501637330902918203684832716283019655932542976)))
(assert (x2007 x1342))
(assert (x2007 x290))
(assert (x877 x2442))
(assert (x2007 x2405))
(assert (and (x1764 x335 2) (x2501 x335 2) (= (* 2 (x1266 x335 2)) (- x335 (x1595 1 x335))) (=> (and (< 0 x335) (> 2 0)) (and (<= (* 2 (x1266 x335 2)) x335) (> (* 2 (x1266 x335 2)) (- x335 2)))) (x1404 x335 2) (x2165 x335 2)))
(assert (= (x916 (x998 x651)) x651))
(assert (x2007 x1458))
(assert (and (=> (< 0 128) (= x191 (+ (x255 x191 128) (* (x1266 x191 128) 128)))) (x1129 x191 128) (x270 x191 128) (x48 x191 128)))
(assert (x2007 x1612))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1737 (+ (x255 x1737 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1737 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1737 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1737 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1737 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x2231 (x2032 (x2260 (+ 64 x2157)))))
(assert (x2007 x1370))
(assert (= (or x648 x725) x1028))
(assert (x2231 (x497 (x2260 (+ x933 192)))))
(assert (x2007 x173))
(assert (= (or x1935 x85) x2244))
(assert (and (=> (< 0 262144) (= x2442 (+ (x255 x2442 262144) (* (x1266 x2442 262144) 262144)))) (x1129 x2442 262144) (x270 x2442 262144) (x48 x2442 262144)))
(assert (= (x565 x933) 0))
(assert (= (=> (and (= x2306 (>= 224 x1360)) (= (x2260 (+ 1 x873)) x1060) (= (x1092 x440) x1047) (= x1692 (x2260 (+ 1 x1360))) (not (> x1692 x1047))) (and x2306 (=> (= (ite (>= 32 x1360) (x1365 (x916 (x1092 x1060)) 0) (ite (>= 64 x1360) (x115 (x916 (x1092 x1060)) (x916 (x1092 (x2260 (+ 32 x1060)))) 0) (ite (>= 96 x1360) (x2298 (x916 (x1092 x1060)) (x916 (x1092 (x2260 (+ x1060 32)))) (x916 (x1092 (x2260 (+ x1060 64)))) 0) (ite (>= 128 x1360) (x523 (x916 (x1092 x1060)) (x916 (x1092 (x2260 (+ x1060 32)))) (x916 (x1092 (x2260 (+ 64 x1060)))) (x916 (x1092 (x2260 (+ 96 x1060)))) 0) (ite (>= 160 x1360) (x1068 (x916 (x1092 x1060)) (x916 (x1092 (x2260 (+ 32 x1060)))) (x916 (x1092 (x2260 (+ x1060 64)))) (x916 (x1092 (x2260 (+ x1060 96)))) (x916 (x1092 (x2260 (+ 128 x1060)))) 0) (ite (>= 192 x1360) (x1254 (x916 (x1092 x1060)) (x916 (x1092 (x2260 (+ x1060 32)))) (x916 (x1092 (x2260 (+ x1060 64)))) (x916 (x1092 (x2260 (+ 96 x1060)))) (x916 (x1092 (x2260 (+ 128 x1060)))) (x916 (x1092 (x2260 (+ x1060 160)))) 0) (ite (<= x1360 224) (x314 (x916 (x1092 x1060)) (x916 (x1092 (x2260 (+ 32 x1060)))) (x916 (x1092 (x2260 (+ 64 x1060)))) (x916 (x1092 (x2260 (+ x1060 96)))) (x916 (x1092 (x2260 (+ x1060 128)))) (x916 (x1092 (x2260 (+ x1060 160)))) (x916 (x1092 (x2260 (+ x1060 192)))) 0) (x916 x2173)))))))) x1887) x2439))) x1349))
(assert (= x2363 (=> (and (<= x2070 1461501637330902918203684832716283019655932542975) (= (x2260 (+ x729 x1429)) x1579) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x608) (and (> 32 x608) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x608))))) (= x2070 (x311 x1429)) (= x729 (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1760)) (not (= x1561 0)) (= x2221 (= x2070 0)) (= (x2260 (+ 31 x608)) x1760)) (and (=> (and (not x2221) (and (= x1366 (x115 x651 (x779 1) 0)) (= (x1595 131072 x470) x1017) (<= x616 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x616 (x1464 x1366)) (= x1077 (= x1017 131072)) (= x470 (x2482 x616 160)) (<= 0 x616))) (and (=> (and x1077 (and (= (x115 x651 (x779 5) 0) x298) (= (x2260 (+ 32 x1860)) x476) (= (x2183 (* 32 x1657)) x1860) (> x624 0) (= x1148 (x2260 (+ 31 x417))) (= x1988 (x2260 (+ 32 x1579))) (= (ite (> x2016 0) x1700 (x1595 127 x1700)) x417) (= x2016 (x1595 1 x781)) (= x1376 (x2260 (+ x1579 x476))) (= x781 (x305 x298)) (= x1700 (x1266 x781 2)) (= x1657 (x1266 x1148 32)) (= (< x417 32) x875) (= x2325 (= x417 0)) (= x624 (x2183 (- x2016 (ite x875 1 0)))))) (and (=> (and (= x589 (> x417 31)) (not x2325)) (and (=> (and (and (= x206 (x295 x1846 1)) (= (x1237 x1846) x2232) (= (x2260 (+ x1988 32)) x993) (= x313 (> x1589 x993)) (= x1846 (x1365 x298 0)) (= (x2260 (+ x1988 x417)) x1589)) x589) (and (=> (not x313) x1037) (=> x313 x2014))) (=> (and (not x589) (and (= x800 (x2183 (* x1098 256))) (= x1820 (x305 x298)) (= x1098 (x1266 x1820 256)))) x1983))) (=> x2325 x1983))) (=> (and (not x1077) (and (= x1579 x239) (= x93 (x779 0)))) x465))) (=> (and x2221 (and (<= x1128 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1187 (x115 (x916 x1531) (x779 1) 0)) (= x2019 (x2482 x1128 160)) (>= x1128 0) (= (x1595 131072 x2019) x1396) (= (x1464 x1187) x1128) (= (= x1396 131072) x467))) (and (=> (and (and (> x1894 0) (= (x1595 1 x2478) x1046) (= (x1266 x792 32) x1380) (= x2175 (ite (< 0 x1046) x796 (x1595 127 x796))) (= x2111 (< x2175 32)) (= x1894 (x2183 (- x1046 (ite x2111 1 0)))) (= (= x2175 0) x214) (= (x2260 (+ x56 32)) x1524) (= x792 (x2260 (+ x2175 31))) (= x56 (x2183 (* x1380 32))) (= (x305 x1273) x2478) (= (x115 (x916 x1531) (x779 5) 0) x1273) (= x796 (x1266 x2478 2)) (= (x2260 (+ x1579 x1524)) x151) (= x2035 (x2260 (+ x1579 32)))) x467) (and (=> (and (= x1169 (< 31 x2175)) (not x214)) (and (=> (and x1169 (and (= x937 (x2260 (+ x2035 x2175))) (= x1721 (> x937 x682)) (= x1290 (x295 x798 1)) (= x798 (x1365 x1273 0)) (= (x1237 x798) x155) (= x682 (x2260 (+ 32 x2035))))) (and (=> x1721 x1076) (=> (not x1721) x25))) (=> (and (not x1169) (and (= x2267 (x1266 x1160 256)) (= x1160 (x305 x1273)) (= (x2183 (* 256 x2267)) x13))) x224))) (=> x214 x224))) (=> (and (and (= (x779 0) x967) (= x91 x1579)) (not x467)) x1186)))))))
(assert (x2007 x79))
(assert (= x2475 x1660))
(assert (x1330 2))
(assert (x877 x1782))
(assert (and (=> (< 0 128) (= x2073 (+ (x255 x2073 128) (* (x1266 x2073 128) 128)))) (x1129 x2073 128) (x270 x2073 128) (x48 x2073 128)))
(assert (x2007 x1692))
(assert (= (x565 (x2260 (+ x859 128))) 0))
(assert (= x959 (=> (and (= x1471 (x295 x502 1)) (= x987 (not (> (x998 x1291) (x998 x1471))))) (and x987 x677))))
(assert (x2007 x1324))
(assert (and (=> (< 0 32) (= x555 (+ (x255 x555 32) (* (x1266 x555 32) 32)))) (x1129 x555 32) (x270 x555 32) (x48 x555 32)))
(assert (= x1252 (=> (and (= (x2260 (+ x654 31)) x1141) (= x1956 (x2260 (+ x154 x635))) (= (x2503 x635) x250) (= (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1141) x154) (not (= x1840 0)) (not (> x716 18446744073709551615)) (not (or (> x654 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x654) true) (> 32 x654)))) (= x368 (x1595 18446744073709551615 x250)) (= x1956 x2084) (= x1850 x716) (= x716 (x2260 (+ 7776000 x368)))) x789)))
(assert (x2231 (x1202 (x2260 (+ 96 x2489)))))
(assert (= (=> (= x1309 (= x37 (x779 0))) (and (=> (and x1309 (and (= x1539 x649) (= x1218 (x2482 x2117 192)))) x445) (=> (and (not x1309) (and (or (and (= x2087 x1234) (not x1196)) (and x1196 (and (< x1070 4294967296) (= 1 x2087)))) (and (= x778 (x2260 (+ x1539 4))) (= (< 0 x1234) x1196)))) x188))) x363))
(assert (x747 x2106))
(assert (x2007 x2287))
(assert (x2007 x902))
(assert (x2007 x380))
(assert (x811 x707))
(assert (x2007 x2048))
(assert (x2007 x1414))
(assert (x2007 x1953))
(assert (x2007 x486))
(assert (x2007 x456))
(assert (x2007 x2166))
(assert (x747 x272))
(assert (and (x1764 x1654 32) (x2501 x1654 32) (= (* 32 (x1266 x1654 32)) (- x1654 (x1595 31 x1654))) (=> (and (< 0 x1654) (> 32 0)) (and (<= (* 32 (x1266 x1654 32)) x1654) (> (* 32 (x1266 x1654 32)) (- x1654 32)))) (x1404 x1654 32) (x2165 x1654 32)))
(assert (x2007 x184))
(assert (= (+ 1 (x998 x204)) (x998 (x295 x204 1))))
(assert (and (x1778 32 x1380) (x1905 32 x1380) (= (x482 32 x1380) (* x1380 32)) (x509 32 x1380) (x699 32 x1380) (x2495 32 x1380) (and (= (- (* (- x1380 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x1380 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1380 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1380) (- (* x1380 32) (* x1380 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 32 (- x1380 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1380 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)))))
(assert (= x1206 (or (and x2043 (not x558)) x1881)))
(assert (= (and x2336 x2351) x767))
(assert (x2007 x250))
(assert (= (or x561 x822) x2178))
(assert (x1330 x149))
(assert (=> (<= (x634 (x2260 (+ x1718 96))) 10000) (= (x916 (x634 (x2260 (+ x1718 96)))) (x779 (x634 (x2260 (+ 96 x1718)))))))
(assert (x2007 x1408))
(assert (= x573 (and x1560 x589)))
(assert (= (+ (x998 x1272) x2488) (x998 (x295 x1272 x2488))))
(assert (x747 x712))
(assert (=> (<= (x1092 (x2260 (+ 128 x1060))) 10000) (= (x916 (x1092 (x2260 (+ x1060 128)))) (x779 (x1092 (x2260 (+ x1060 128)))))))
(assert (x1750 x2449))
(assert (x2007 x886))
(assert (= x1215 (and x289 x1494)))
(assert (and (=> (< 0 2) (= x2478 (+ (x255 x2478 2) (* (x1266 x2478 2) 2)))) (x1129 x2478 2) (x270 x2478 2) (x48 x2478 2)))
(assert (let ((x1706 (* x813 452312848583266388373324160190187140051835877600158453279131187530910662656))) (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1706 (+ (x255 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (x2007 x2299))
(assert (x2007 x718))
(assert (and (x1764 x36 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2501 x36 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x36 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x36 (x1595 452312848583266388373324160190187140051835877600158453279131187530910662655 x36))) (=> (and (< 0 x36) (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0)) (and (<= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x36 452312848583266388373324160190187140051835877600158453279131187530910662656)) x36) (> (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x36 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x36 452312848583266388373324160190187140051835877600158453279131187530910662656)))) (x1404 x36 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2165 x36 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (and (=> (< 0 18446744073709551616) (= x250 (+ (x255 x250 18446744073709551616) (* (x1266 x250 18446744073709551616) 18446744073709551616)))) (x1129 x250 18446744073709551616) (x270 x250 18446744073709551616) (x48 x250 18446744073709551616)))
(assert (= 0 (x565 x2489)))
(assert (=> (>= 10000 x1809) (= (x916 x1809) (x779 x1809))))
(assert (= (or x990 x2448) x2045))
(assert (= (x565 192) 0))
(assert (x2007 x105))
(assert (=> (>= 10000 (x2027 (x2260 (+ 32 x182)))) (= (x916 (x2027 (x2260 (+ 32 x182)))) (x779 (x2027 (x2260 (+ x182 32)))))))
(assert (x2007 x905))
(assert (and (x1764 x1568 256) (x2501 x1568 256) (= (* 256 (x1266 x1568 256)) (- x1568 (x1595 255 x1568))) (=> (and (< 0 x1568) (> 256 0)) (and (<= (* 256 (x1266 x1568 256)) x1568) (> (* 256 (x1266 x1568 256)) (- x1568 256)))) (x1404 x1568 256) (x2165 x1568 256)))
(assert (x2007 x2343))
(assert (= (or x670 x169 x2404) x485))
(assert (x2007 x650))
(assert (= (x2482 x268 160) (x1266 x268 1461501637330902918203684832716283019655932542976)))
(assert (x2007 x1705))
(assert (x2007 x1923))
(assert (= 0 (x565 (x2260 (+ 192 x2157)))))
(assert (= (or x162 x69) x190))
(assert (= (x2263 (x2260 (+ x1866 128))) (x998 (x916 (x2263 (x2260 (+ 128 x1866)))))))
(assert (x885 x1843))
(assert (and (x1778 32 x1322) (x1905 32 x1322) (= (x482 32 x1322) (* x1322 32)) (x509 32 x1322) (x699 32 x1322) (x2495 32 x1322) (and (= (- (* (- x1322 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x1322 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1322 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1322) (- (* x1322 32) (* x1322 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 32 (- x1322 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1322 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)))))
(assert (x2007 x1220))
(assert (= (x998 (x916 x1022)) x1022))
(assert (= x2012 (and x331 x1920)))
(assert (x877 x781))
(assert (= x1514 (or x2060 x1864 x1951)))
(assert (x2007 x1055))
(assert (x2007 x1743))
(assert (x2007 x1405))
(assert (x747 x1096))
(assert (and (=> (< 0 32) (= x532 (+ (x255 x532 32) (* (x1266 x532 32) 32)))) (x1129 x532 32) (x270 x532 32) (x48 x532 32)))
(assert (=> (>= 10000 x2225) (= (x779 x2225) (x916 x2225))))
(assert (x877 x2433))
(assert (= x472 (or x2202 x767)))
(assert (and (=> (< 0 4294967296) (= x858 (+ (x255 x858 4294967296) (* (x1266 x858 4294967296) 4294967296)))) (x1129 x858 4294967296) (x270 x858 4294967296) (x48 x858 4294967296)))
(assert (= (=> (= x621 (= (x779 0) x1456)) (and (=> (and (and (or (and x2222 (and (> 4294967296 x1045) (= 1 x921))) (and (= x2089 x921) (not x2222))) (and (= (x2260 (+ 4 x1370)) x262) (= x2222 (< 0 x2089)))) (not x621)) x2000) (=> (and (and (= x1370 x440) (= (x2482 x19 192) x1981)) x621) x1444))) x2375))
(assert (x2007 x927))
(assert (and (x1764 x632 256) (x2501 x632 256) (= (* 256 (x1266 x632 256)) (- x632 (x1595 255 x632))) (=> (and (< 0 x632) (> 256 0)) (and (<= (* 256 (x1266 x632 256)) x632) (> (* 256 (x1266 x632 256)) (- x632 256)))) (x1404 x632 256) (x2165 x632 256)))
(assert (x877 x555))
(assert (x2007 x820))
(assert (= x1946 (=> (and (or (and (= x1782 x1480) (not x2320)) (and (= 0 x1782) x2320)) (= x2320 (< x2296 x111))) x2085)))
(assert (x15 x441))
(assert (= (or x1515 x1087) x2393))
(assert (x885 x2440))
(assert (= (x2482 115792089237316195423570985008687907853269984665640564039457584007913129639935 x241) (ite (< x241 256) (x1266 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1137 2 x241)) 0)))
(assert (x2007 x1510))
(assert (x2231 (x634 (x2260 (+ x1718 64)))))
(assert (x2007 x2196))
(assert (x2231 x656))
(assert (= (and x1667 x661) x1133))
(assert (= x1572 (or x1738 x531)))
(assert (x2007 x227))
(assert (and (x1764 x1205 6277101735386680763835789423207666416102355444464034512896) (x2501 x1205 6277101735386680763835789423207666416102355444464034512896) (= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x1205 6277101735386680763835789423207666416102355444464034512896)) (- x1205 (x1595 6277101735386680763835789423207666416102355444464034512895 x1205))) (=> (and (< 0 x1205) (> 6277101735386680763835789423207666416102355444464034512896 0)) (and (<= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x1205 6277101735386680763835789423207666416102355444464034512896)) x1205) (> (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x1205 6277101735386680763835789423207666416102355444464034512896)) (- x1205 6277101735386680763835789423207666416102355444464034512896)))) (x1404 x1205 6277101735386680763835789423207666416102355444464034512896) (x2165 x1205 6277101735386680763835789423207666416102355444464034512896)))
(assert (x885 x793))
(assert (= x1560 (and x1344 (not x2325))))
(assert (= (x998 (x916 (x1092 (x2260 (+ 96 x1060))))) (x1092 (x2260 (+ x1060 96)))))
(assert (x2007 x2417))
(assert (x747 x212))
(assert (and (x1764 x1820 256) (x2501 x1820 256) (= (* 256 (x1266 x1820 256)) (- x1820 (x1595 255 x1820))) (=> (and (< 0 x1820) (> 256 0)) (and (<= (* 256 (x1266 x1820 256)) x1820) (> (* 256 (x1266 x1820 256)) (- x1820 256)))) (x1404 x1820 256) (x2165 x1820 256)))
(assert (x2007 x891))
(assert (x2007 x2440))
(assert (= (x998 (x916 (x2263 (x2260 (+ 32 x1866))))) (x2263 (x2260 (+ 32 x1866)))))
(assert (= (x998 (x779 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x2007 x716))
(assert (let ((x1706 (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x1811))) (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1706 (+ (x255 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (= (and x494 (not x398)) x996))
(assert (and (x1778 32 x2213) (x1905 32 x2213) (= (x482 32 x2213) (* x2213 32)) (x509 32 x2213) (x699 32 x2213) (x2495 32 x2213) (and (= (- (* (- x2213 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x2213 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x2213 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x2213) (- (* x2213 32) (* x2213 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 32 (- x2213 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2213 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)))))
(assert (x2007 x1785))
(assert (x2007 x2367))
(assert (= x4 (and x1093 (not x65))))
(assert (= (=> (and (= (x2032 x105) x1573) (= (x2260 (+ 1 x24)) x66) (= x1518 (<= x24 224)) (not (< x1573 x66)) (= (x2260 (+ x1332 1)) x2157)) (and x1518 (=> (= x889 (ite (>= 32 x24) (x1365 (x916 (x2032 x2157)) 0) (ite (>= 64 x24) (x115 (x916 (x2032 x2157)) (x916 (x2032 (x2260 (+ 32 x2157)))) 0) (ite (>= 96 x24) (x2298 (x916 (x2032 x2157)) (x916 (x2032 (x2260 (+ 32 x2157)))) (x916 (x2032 (x2260 (+ x2157 64)))) 0) (ite (>= 128 x24) (x523 (x916 (x2032 x2157)) (x916 (x2032 (x2260 (+ x2157 32)))) (x916 (x2032 (x2260 (+ x2157 64)))) (x916 (x2032 (x2260 (+ 96 x2157)))) 0) (ite (<= x24 160) (x1068 (x916 (x2032 x2157)) (x916 (x2032 (x2260 (+ 32 x2157)))) (x916 (x2032 (x2260 (+ 64 x2157)))) (x916 (x2032 (x2260 (+ x2157 96)))) (x916 (x2032 (x2260 (+ 128 x2157)))) 0) (ite (>= 192 x24) (x1254 (x916 (x2032 x2157)) (x916 (x2032 (x2260 (+ x2157 32)))) (x916 (x2032 (x2260 (+ 64 x2157)))) (x916 (x2032 (x2260 (+ x2157 96)))) (x916 (x2032 (x2260 (+ 128 x2157)))) (x916 (x2032 (x2260 (+ 160 x2157)))) 0) (ite (<= x24 224) (x314 (x916 (x2032 x2157)) (x916 (x2032 (x2260 (+ 32 x2157)))) (x916 (x2032 (x2260 (+ x2157 64)))) (x916 (x2032 (x2260 (+ 96 x2157)))) (x916 (x2032 (x2260 (+ 128 x2157)))) (x916 (x2032 (x2260 (+ 160 x2157)))) (x916 (x2032 (x2260 (+ 192 x2157)))) 0) (x916 x942))))))))) x2273))) x2354))
(assert (and (=> (< 0 131072) (= x763 (+ (x255 x763 131072) (* (x1266 x763 131072) 131072)))) (x1129 x763 131072) (x270 x763 131072) (x48 x763 131072)))
(assert (= 0 (x565 x743)))
(assert (x747 x629))
(assert (x2007 x933))
(assert (x877 131072))
(assert (= (x565 x2366) 0))
(assert (x877 x127))
(assert (= (=> (= (= (x779 0) x967) x484) (and (=> (and x484 (and (= (x2482 x1128 192) x908) (= x1450 x91))) x1023) (=> (and (and (and (= (< 0 x173) x141) (= (x2260 (+ x91 4)) x549)) (or (and (not x141) (= x1363 x173)) (and x141 (and (> 4294967296 x1174) (= x1363 1))))) (not x484)) x1479))) x1186))
(assert (= (and x1401 x1314) x1605))
(assert (=> (>= 10000 (x497 (x2260 (+ x933 192)))) (= (x779 (x497 (x2260 (+ 192 x933)))) (x916 (x497 (x2260 (+ 192 x933)))))))
(assert (= (or (and x1392 (not x775)) x80) x894))
(assert (= (=> (and (= (= x2362 0) x1457) (= (x1595 1461501637330902918203684832716283019655932542975 x181) x2362)) (and (=> (and (and (or (not x1029) (and (and x1318 (= (x1226 (x916 x160)) x802) (= (<= x802 (x1553 (x916 x160))) x491) (> 4294967296 x1817) (= x1318 (= x408 (x1553 (x916 x1970)))) x491 (= (x1226 (x916 x1970)) x408)) x1029)) (and (= (x2260 (+ 32 x1813)) x2118) (= (x2260 (+ 32 x2118)) x1193) (= x1803 (x2260 (+ 4 x2161))) (= x226 (x152 (x916 x1970))) (= (x1595 18446744073709551615 x51) x655) (not (= x226 0)) (= x1813 (x2260 (+ x2104 32))) (= (x1595 1461501637330902918203684832716283019655932542975 x1743) x1970) (= (x2260 (+ 32 x1803)) x2104) (= (x1595 1461501637330902918203684832716283019655932542975 x1096) x2472) (= (< 0 x1236) x1029))) (not x1457)) x2195) (=> (and x1457 (and (or (and (and (= x498 (x1226 (x916 x1166))) (= (x1226 (x916 x160)) x1747) (= (<= x1747 (x2172 (x916 x160))) x1080) x1080 (= (= (x2172 (x916 x1166)) x498) x71) x71 (< x2137 4294967296)) x1922) (not x1922)) (and (= (< 0 x33) x1922) (= (x1595 1461501637330902918203684832716283019655932542975 x1743) x1166) (= (x1595 1461501637330902918203684832716283019655932542975 x1096) x453) (= (x2260 (+ x2161 4)) x1462) (not (= x1591 0)) (= (x2260 (+ 32 x40)) x1526) (= x1591 (x152 (x916 x1166))) (= (x2260 (+ x2238 32)) x40) (= x2238 (x2260 (+ x1462 32))) (= x340 (x1595 18446744073709551615 x51)) (= x891 (x2260 (+ x1526 32)))))) x2180))) x1223))
(assert (x1750 x1880))
(assert (x2007 x1537))
(assert (x2007 x44))
(assert (x2007 x1497))
(assert (and (x1778 8 x2359) (x1905 8 x2359) (= (x482 8 x2359) (* x2359 8)) (x509 8 x2359) (x699 8 x2359) (x2495 8 x2359) (and (= (- (* (- x2359 115792089237316195423570985008687907853269984665640564039457584007913129639936) 8) (* (- x2359 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639928) (- x2359 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639928) x2359) (- (* x2359 8) (* x2359 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 8 (- x2359 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2359 115792089237316195423570985008687907853269984665640564039457584007913129639936) 8)))))
(assert (x2007 x1699))
(assert (x15 x782))
(assert (= x1555 (and x1019 x1761)))
(assert (and (x1764 x2210 32) (x2501 x2210 32) (= (* 32 (x1266 x2210 32)) (- x2210 (x1595 31 x2210))) (=> (and (< 0 x2210) (> 32 0)) (and (<= (* 32 (x1266 x2210 32)) x2210) (> (* 32 (x1266 x2210 32)) (- x2210 32)))) (x1404 x2210 32) (x2165 x2210 32)))
(assert (= x397 (and x1101 (not x141))))
(assert (and (x1764 x488 1461501637330902918203684832716283019655932542976) (x2501 x488 1461501637330902918203684832716283019655932542976) (= (* 1461501637330902918203684832716283019655932542976 (x1266 x488 1461501637330902918203684832716283019655932542976)) (- x488 (x1595 1461501637330902918203684832716283019655932542975 x488))) (=> (and (< 0 x488) (> 1461501637330902918203684832716283019655932542976 0)) (and (<= (* 1461501637330902918203684832716283019655932542976 (x1266 x488 1461501637330902918203684832716283019655932542976)) x488) (> (* 1461501637330902918203684832716283019655932542976 (x1266 x488 1461501637330902918203684832716283019655932542976)) (- x488 1461501637330902918203684832716283019655932542976)))) (x1404 x488 1461501637330902918203684832716283019655932542976) (x2165 x488 1461501637330902918203684832716283019655932542976)))
(assert (and (x1778 32 x2022) (x1905 32 x2022) (= (x482 32 x2022) (* x2022 32)) (x509 32 x2022) (x699 32 x2022) (x2495 32 x2022) (and (= (- (* (- x2022 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x2022 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x2022 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x2022) (- (* x2022 32) (* x2022 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 32 (- x2022 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2022 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)))))
(assert (x2007 x656))
(assert (x2007 x1747))
(assert (= (x2482 x1725 248) (x1266 x1725 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x877 x1695))
(assert (x15 x487))
(assert (and (=> (< 0 32) (= x1737 (+ (x255 x1737 32) (* (x1266 x1737 32) 32)))) (x1129 x1737 32) (x270 x1737 32) (x48 x1737 32)))
(assert (x1330 x2499))
(assert (= (x2482 x1337 248) (x1266 x1337 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x2007 x768))
(assert (x2007 x1694))
(assert (= x642 (=> (and (= x2294 x1915) (= x240 x2077) (= x1200 (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2419)) (not (> x240 18446744073709551615)) (= x240 (x2260 (+ x2192 7776000))) (not (= 0 x930)) (= x2294 (x2260 (+ x1153 x1200))) (= x2192 (x1595 18446744073709551615 x148)) (= x2419 (x2260 (+ x138 31))) (= x148 (x1483 x1153)) (not (or (> x138 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x138) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x138)))))) x2047)))
(assert (x2007 x1548))
(assert (and (=> (< 0 262144) (= x1297 (+ (x255 x1297 262144) (* (x1266 x1297 262144) 262144)))) (x1129 x1297 262144) (x270 x1297 262144) (x48 x1297 262144)))
(assert (x747 x1911))
(assert (x2007 x2185))
(assert (= (x998 (x916 (x2027 (x2260 (+ 32 x182))))) (x2027 (x2260 (+ 32 x182)))))
(assert (= (x2183 (* 6277101735386680763835789423207666416102355444464034512896 x490)) (x1664 x490 192)))
(assert (= (or x1784 x1775) x1987))
(assert (x2007 x1865))
(assert (and (=> (< 0 2) (= x1880 (+ (x255 x1880 2) (* (x1266 x1880 2) 2)))) (x1129 x1880 2) (x270 x1880 2) (x48 x1880 2)))
(assert (x2231 (x2283 352)))
(assert (x2007 x1443))
(assert (= (=> (and (= (not (< x1103 x1540)) x1889) (= x1103 (x2260 (+ 32 x1253))) (= (x1739 x1716) x566)) (and x1889 x2498)) x469))
(assert (= (and x1896 x917) x2476))
(assert (= (x565 (x2260 (+ 64 x1866))) 0))
(assert (= x1569 (and (not x1979) x1021)))
(assert (x2007 x1377))
(assert (= x1676 (or x1173 x518)))
(assert (= (x998 (x779 1058358655)) 1058358655))
(assert (x2007 x2177))
(assert (= x1364 (=> (and (= x650 (x728 x914)) (= (not (> x1570 x2334)) x166) (= x2334 (x2260 (+ 32 x1377)))) (and x2475 x166))))
(assert (and (=> (< 0 65536) (= x1020 (+ (x255 x1020 65536) (* (x1266 x1020 65536) 65536)))) (x1129 x1020 65536) (x270 x1020 65536) (x48 x1020 65536)))
(assert (x2231 x2173))
(assert (x601 x672))
(assert (= (x998 (x916 (x1832 (x2260 (+ 128 x537))))) (x1832 (x2260 (+ 128 x537)))))
(assert (and (=> (< 0 1461501637330902918203684832716283019655932542976) (= x181 (+ (x255 x181 1461501637330902918203684832716283019655932542976) (* (x1266 x181 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x1129 x181 1461501637330902918203684832716283019655932542976) (x270 x181 1461501637330902918203684832716283019655932542976) (x48 x181 1461501637330902918203684832716283019655932542976)))
(assert (= 0 (x565 x2268)))
(assert (x877 x1161))
(assert (x2007 x1551))
(assert (= x2029 (and x2305 (not x1604))))
(assert (and (x1764 x1668 1461501637330902918203684832716283019655932542976) (x2501 x1668 1461501637330902918203684832716283019655932542976) (= (* 1461501637330902918203684832716283019655932542976 (x1266 x1668 1461501637330902918203684832716283019655932542976)) (- x1668 (x1595 1461501637330902918203684832716283019655932542975 x1668))) (=> (and (< 0 x1668) (> 1461501637330902918203684832716283019655932542976 0)) (and (<= (* 1461501637330902918203684832716283019655932542976 (x1266 x1668 1461501637330902918203684832716283019655932542976)) x1668) (> (* 1461501637330902918203684832716283019655932542976 (x1266 x1668 1461501637330902918203684832716283019655932542976)) (- x1668 1461501637330902918203684832716283019655932542976)))) (x1404 x1668 1461501637330902918203684832716283019655932542976) (x2165 x1668 1461501637330902918203684832716283019655932542976)))
(assert (= x309 (not (= x1898 x1851))))
(assert (= x1874 (or x1682 x1688)))
(assert (and (=> (< 0 2) (= x781 (+ (x255 x781 2) (* (x1266 x781 2) 2)))) (x1129 x781 2) (x270 x781 2) (x48 x781 2)))
(assert (x2231 x1113))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2456 (+ (x255 x2456 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x2456 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x2456 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x2456 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x2456 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x877 x1039))
(assert (x2007 x2346))
(assert (x877 x2223))
(assert (x2007 x1571))
(assert (= (and x2033 (not x2148)) x252))
(assert (and (=> (< 0 256) (= x1958 (+ (x255 x1958 256) (* (x1266 x1958 256) 256)))) (x1129 x1958 256) (x270 x1958 256) (x48 x1958 256)))
(assert (= (x1074 (x2260 (+ x402 128))) (x998 (x916 (x1074 (x2260 (+ x402 128)))))))
(assert (x2007 x2212))
(assert (x2007 x1468))
(assert (= (x998 (x916 x1970)) x1970))
(assert (= x1893 (or x1028 x247)))
(assert (= (x2027 (x2260 (+ 160 x182))) (x998 (x916 (x2027 (x2260 (+ 160 x182)))))))
(assert (x2007 x1328))
(assert (x2007 x1027))
(assert (= x1957 (or x568 x1852)))
(assert (= x144 (and x527 x337)))
(assert (x1112 x1296))
(assert (= (x998 (x916 (x506 (x2260 (+ x381 32))))) (x506 (x2260 (+ 32 x381)))))
(assert (= (x565 x715) 0))
(assert (x2231 (x1433 288)))
(assert (= x1885 (or x2030 x1311 x541 x996 x1543)))
(assert (x2007 x458))
(assert (x2231 (x2263 x1866)))
(assert (x2007 x1209))
(assert (= 0 (x565 (x2260 (+ x2489 128)))))
(assert (and (x1778 256 x290) (x1905 256 x290) (= (x482 256 x290) (* x290 256)) (x509 256 x290) (x699 256 x290) (x2495 256 x290) (and (= (- (* (- x290 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* (- x290 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x290 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x290) (- (* x290 256) (* x290 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 256 (- x290 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x290 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256)))))
(assert (x885 x533))
(assert (and (=> (< 0 32) (= x1141 (+ (x255 x1141 32) (* (x1266 x1141 32) 32)))) (x1129 x1141 32) (x270 x1141 32) (x48 x1141 32)))
(assert (x2007 x1720))
(assert (= (x1266 x1205 1461501637330902918203684832716283019655932542976) (x2482 x1205 160)))
(assert (x885 x1725))
(assert (= (and x571 (not x980)) x518))
(assert (x2007 x1968))
(assert (= x766 (and (not x1256) x220)))
(assert (x877 x2247))
(assert (= 0 (x565 (x2260 (+ 96 x381)))))
(assert (x2007 x555))
(assert (x2007 x107))
(assert (x2007 x2199))
(assert (x2007 x2366))
(assert (x747 x1310))
(assert (x2007 x271))
(assert (x747 x431))
(assert (x2007 x799))
(assert (= (or x787 x623) x561))
(assert (= 0 (x565 224)))
(assert (x747 x668))
(assert (= (=> (and (= (x2260 (+ x380 1)) x684) (= x933 (x2260 (+ 1 x2035))) (= (<= x380 224) x1675) (not (> x684 x1622)) (= (x497 x1579) x1622)) (and (=> (= (ite (>= 32 x380) (x1365 (x916 (x497 x933)) 0) (ite (<= x380 64) (x115 (x916 (x497 x933)) (x916 (x497 (x2260 (+ 32 x933)))) 0) (ite (<= x380 96) (x2298 (x916 (x497 x933)) (x916 (x497 (x2260 (+ 32 x933)))) (x916 (x497 (x2260 (+ x933 64)))) 0) (ite (>= 128 x380) (x523 (x916 (x497 x933)) (x916 (x497 (x2260 (+ 32 x933)))) (x916 (x497 (x2260 (+ x933 64)))) (x916 (x497 (x2260 (+ 96 x933)))) 0) (ite (<= x380 160) (x1068 (x916 (x497 x933)) (x916 (x497 (x2260 (+ x933 32)))) (x916 (x497 (x2260 (+ x933 64)))) (x916 (x497 (x2260 (+ x933 96)))) (x916 (x497 (x2260 (+ x933 128)))) 0) (ite (>= 192 x380) (x1254 (x916 (x497 x933)) (x916 (x497 (x2260 (+ x933 32)))) (x916 (x497 (x2260 (+ 64 x933)))) (x916 (x497 (x2260 (+ 96 x933)))) (x916 (x497 (x2260 (+ x933 128)))) (x916 (x497 (x2260 (+ x933 160)))) 0) (ite (<= x380 224) (x314 (x916 (x497 x933)) (x916 (x497 (x2260 (+ 32 x933)))) (x916 (x497 (x2260 (+ 64 x933)))) (x916 (x497 (x2260 (+ 96 x933)))) (x916 (x497 (x2260 (+ 128 x933)))) (x916 (x497 (x2260 (+ x933 160)))) (x916 (x497 (x2260 (+ 192 x933)))) 0) (x916 x330)))))))) x605) x362) x1675)) x2323))
(assert (x877 x1141))
(assert (= 7776000 (x998 (x779 7776000))))
(assert (= (x998 (x295 x502 1)) (+ (x998 x502) 1)))
(assert (x2007 x160))
(assert (=> (>= 10000 (x2283 224)) (= (x779 (x2283 224)) (x916 (x2283 224)))))
(assert (x2231 (x2263 (x2260 (+ x1866 64)))))
(assert (x1763 x858))
(assert (x885 x2247))
(assert (x811 x1161))
(assert (x2007 x328))
(assert (x1954 x1297))
(assert (x2007 x703))
(assert (x2250 x532))
(assert (x2007 x556))
(assert (= x177 (and (not x1286) x1217)))
(assert (= x1807 (and (not x2307) x2235)))
(assert (x2007 x2095))
(assert (= x146 (and x1979 x1021)))
(assert (=> (<= (x506 (x2260 (+ 32 x381))) 10000) (= (x916 (x506 (x2260 (+ x381 32)))) (x779 (x506 (x2260 (+ x381 32)))))))
(assert (x2007 x149))
(assert (x877 x944))
(assert (= (=> (and (> x1431 0) (= (x506 x1579) x1431) (= x1257 (< 0 x2062)) (= x1415 (x506 x1988)) (= (x2482 x1415 248) x2062)) (and (=> (and (= x994 (x779 0)) (not x1257)) x2001) (=> x1257 x339))) x1983))
(assert (x885 x1086))
(assert (= x1162 (and (not x662) x27)))
(assert (= (x998 (x916 (x2027 (x2260 (+ x182 96))))) (x2027 (x2260 (+ x182 96)))))
(assert (= (and (not x156) x1853) x531))
(assert (x747 x2485))
(assert (= x722 (or x818 x835 x252 x1724 x2315)))
(assert (= x25 x224))
(assert (= (x998 (x916 x419)) x419))
(assert (x2007 x1310))
(assert (x1330 x1811))
(assert (x2007 x413))
(assert (= (and x711 (not x1463)) x1935))
(assert (= (x998 (x779 65536)) 65536))
(assert (= x2463 (and x733 x1922)))
(assert (= x2269 (or x1863 x1681 x766)))
(assert (= 0 (x565 (x2260 (+ x2489 160)))))
(assert (x2231 (x2027 (x2260 (+ x182 160)))))
(assert (= (x998 (x916 x38)) x38))
(assert (and (=> (< 0 18446744073709551616) (= x2287 (+ (x255 x2287 18446744073709551616) (* (x1266 x2287 18446744073709551616) 18446744073709551616)))) (x1129 x2287 18446744073709551616) (x270 x2287 18446744073709551616) (x48 x2287 18446744073709551616)))
(assert (x2007 x1929))
(assert (x2231 (x1714 (x2260 (+ x743 128)))))
(assert (x2231 (x497 (x2260 (+ 160 x933)))))
(assert (x2007 x1121))
(assert (x877 64))
(assert (and (x1778 256 x149) (x1905 256 x149) (= (x482 256 x149) (* x149 256)) (x509 256 x149) (x699 256 x149) (x2495 256 x149) (and (= (- (* (- x149 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* (- x149 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x149 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x149) (- (* x149 256) (* x149 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 256 (- x149 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x149 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256)))))
(assert (x2007 x632))
(assert (x2007 x1756))
(assert (and (x1764 x19 1461501637330902918203684832716283019655932542976) (x2501 x19 1461501637330902918203684832716283019655932542976) (= (* 1461501637330902918203684832716283019655932542976 (x1266 x19 1461501637330902918203684832716283019655932542976)) (- x19 (x1595 1461501637330902918203684832716283019655932542975 x19))) (=> (and (< 0 x19) (> 1461501637330902918203684832716283019655932542976 0)) (and (<= (* 1461501637330902918203684832716283019655932542976 (x1266 x19 1461501637330902918203684832716283019655932542976)) x19) (> (* 1461501637330902918203684832716283019655932542976 (x1266 x19 1461501637330902918203684832716283019655932542976)) (- x19 1461501637330902918203684832716283019655932542976)))) (x1404 x19 1461501637330902918203684832716283019655932542976) (x2165 x19 1461501637330902918203684832716283019655932542976)))
(assert (= (=> (= (not (> x1707 128)) x338) (and x2055 x338)) x636))
(assert (=> (<= (x497 (x2260 (+ 32 x933))) 10000) (= (x779 (x497 (x2260 (+ 32 x933)))) (x916 (x497 (x2260 (+ 32 x933)))))))
(assert (x2007 x1657))
(assert (= 0 (x565 (x2260 (+ 96 x1060)))))
(assert (x877 x1310))
(assert (= x2085 (=> (and (and (= (x1595 4294967295 x1782) x78) (= x2401 (x2183 (+ (x1664 x2296 192) (x1664 x78 160)))) (= x1390 (x1595 1461501637330902918203684832716283019655932542975 x1743)) (= x1333 (x152 (x916 x1390))) (not (= 0 x1333)) (= (< 0 x1639) x879)) (or (not x879) (and (and (= x1302 (x2086 (x916 x1390))) x1774 (= x1250 (>= (x1152 (x916 x160)) x776)) (= x1774 (= (x1152 (x916 x1390)) x1302)) x1250 (> 4294967296 x1785) (= x776 (x2086 (x916 x160)))) x879))) x2197)))
(assert (= x983 (and (not x1320) x1422)))
(assert (x877 x1351))
(assert (x2231 x2427))
(assert (x2007 x2388))
(assert (x2007 x1854))
(assert (x877 (* x1811 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (= x198 (or x1400 x1115)))
(assert (= x1323 (and x573 (not x313))))
(assert (x747 x752))
(assert (= (and x980 x571) x1173))
(assert (= (x1266 x828 6277101735386680763835789423207666416102355444464034512896) (x2482 x828 192)))
(assert (= (x998 (x916 (x2263 (x2260 (+ 160 x1866))))) (x2263 (x2260 (+ x1866 160)))))
(assert (= x574 (and x1309 x190)))
(assert (= x1076 (=> (and (= (x1237 x1290) x1892) (= x2257 (x2260 (+ x682 32))) (= (not (< x2257 x937)) x1649)) (and x1649 x25))))
(assert (x2231 (x1092 (x2260 (+ 96 x1060)))))
(assert (x2007 x2210))
(assert (= x1925 (x916 (x998 x1925))))
(assert (x452 x426))
(assert (x885 x79))
(assert (x2007 x2021))
(assert (= (and x1651 x1962) x1567))
(assert (= 0 (x565 (x2260 (+ 96 x402)))))
(assert (x2007 x268))
(assert (let ((x1706 (* 6277101735386680763835789423207666416102355444464034512896 x2077))) (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1706 (+ (x255 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (x877 x501))
(assert (x2250 x1677))
(assert (x2231 (x1074 (x2260 (+ x402 192)))))
(assert (x877 x1836))
(assert (and (=> (< 0 1461501637330902918203684832716283019655932542976) (= x1911 (+ (x255 x1911 1461501637330902918203684832716283019655932542976) (* (x1266 x1911 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x1129 x1911 1461501637330902918203684832716283019655932542976) (x270 x1911 1461501637330902918203684832716283019655932542976) (x48 x1911 1461501637330902918203684832716283019655932542976)))
(assert (x747 x645))
(assert (x1112 x1975))
(assert (x2007 x191))
(assert (x2007 x2371))
(assert (and (=> (< 0 32) (= x2419 (+ (x255 x2419 32) (* (x1266 x2419 32) 32)))) (x1129 x2419 32) (x270 x2419 32) (x48 x2419 32)))
(assert (x2007 x1848))
(assert (x2007 x1818))
(assert (x2007 x2508))
(assert (x877 x1224))
(assert (x2007 x826))
(assert (x2007 x2276))
(assert (x877 x250))
(assert (= x2182 (x998 (x916 x2182))))
(assert (x885 x488))
(assert (x747 x672))
(assert (= (x1714 (x2260 (+ x743 128))) (x998 (x916 (x1714 (x2260 (+ x743 128)))))))
(assert (= (and x1931 (not x1847)) x1208))
(assert (x747 x1760))
(assert (x669 x1796))
(assert (= (x779 1461501637330902918203684832716283019655932542975) (x916 1461501637330902918203684832716283019655932542975)))
(assert (and (=> (< 0 65536) (= x763 (+ (x255 x763 65536) (* (x1266 x763 65536) 65536)))) (x1129 x763 65536) (x270 x763 65536) (x48 x763 65536)))
(assert (=> (<= x2313 10000) (= (x779 x2313) (x916 x2313))))
(assert (x2007 x1547))
(assert (x2007 x668))
(assert (= (=> (and (= x1642 (> x111 x1850)) (or (and (= x1911 x439) (not x1642)) (and x1642 (and (= x2206 (x1595 65536 x1020)) (= (= 65536 x2206) x1744) (= x1911 (ite x1744 0 x439)))))) x2339) x789))
(assert (and (=> (< 0 18446744073709551616) (= x148 (+ (x255 x148 18446744073709551616) (* (x1266 x148 18446744073709551616) 18446744073709551616)))) (x1129 x148 18446744073709551616) (x270 x148 18446744073709551616) (x48 x148 18446744073709551616)))
(assert (x2007 x2426))
(assert (x2007 x1261))
(assert (x1954 x1480))
(assert (=> (>= 10000 (x1092 (x2260 (+ x1060 160)))) (= (x916 (x1092 (x2260 (+ x1060 160)))) (x779 (x1092 (x2260 (+ x1060 160)))))))
(assert (x877 x2419))
(assert (x2007 x420))
(assert (x2007 x495))
(assert (and (=> (< 0 128) (= x1801 (+ (x255 x1801 128) (* (x1266 x1801 128) 128)))) (x1129 x1801 128) (x270 x1801 128) (x48 x1801 128)))
(assert (and (x1778 32 x2499) (x1905 32 x2499) (= (x482 32 x2499) (* x2499 32)) (x509 32 x2499) (x699 32 x2499) (x2495 32 x2499) (and (= (- (* (- x2499 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x2499 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x2499 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x2499) (- (* x2499 32) (* x2499 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 32 (- x2499 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2499 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)))))
(assert (x2007 x2309))
(assert (x2007 x743))
(assert (x747 x1157))
(assert (x2007 x807))
(assert (= (x565 x704) 0))
(assert (x1330 x1231))
(assert (x885 x1510))
(assert (x15 x1713))
(assert (x2007 x2192))
(assert (= (or x546 x788) x358))
(assert (and (x1764 x2117 6277101735386680763835789423207666416102355444464034512896) (x2501 x2117 6277101735386680763835789423207666416102355444464034512896) (= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x2117 6277101735386680763835789423207666416102355444464034512896)) (- x2117 (x1595 6277101735386680763835789423207666416102355444464034512895 x2117))) (=> (and (< 0 x2117) (> 6277101735386680763835789423207666416102355444464034512896 0)) (and (<= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x2117 6277101735386680763835789423207666416102355444464034512896)) x2117) (> (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x2117 6277101735386680763835789423207666416102355444464034512896)) (- x2117 6277101735386680763835789423207666416102355444464034512896)))) (x1404 x2117 6277101735386680763835789423207666416102355444464034512896) (x2165 x2117 6277101735386680763835789423207666416102355444464034512896)))
(assert (x2007 x1803))
(assert (x2007 x135))
(assert (x2007 x1484))
(assert (= x819 (and x576 x1312)))
(assert (= (and x2316 (not x1040)) x316))
(assert (= (x1092 x1060) (x998 (x916 (x1092 x1060)))))
(assert (= x1006 (or x364 x316)))
(assert (= x477 (=> (and (= x1623 (x305 x52)) (= (x287 (- x105 x1619)) x1793) (= x2291 (x1266 x1623 2)) (= (< 31 x369) x156) (> x432 0) (not (< 18446744073709551615 x645)) (= (x2280 x1619) x645) (= x1427 (x1595 1 x1623)) (= x1985 (> 32 x369)) (= x432 (x2183 (- x1427 (ite x1985 1 0)))) (= (x2260 (+ x1078 x429)) x105) (= (x115 x1851 (x779 5) 0) x52) (= x369 (ite (> x1427 0) x2291 (x1595 127 x2291))) (= x1305 (x287 (- x1793 32)))) (and (=> (not x156) x444) (=> (and x156 (and (= (ite (> 32 x645) x1448 x1594) x204) (= x1448 (x1365 x52 0)) (= x1081 (x1266 x1986 32)) (= x1594 (x295 x1448 x1081)) (= (x2260 (+ 31 x369)) x941) (= (x295 x1448 x516) x59) (= x176 (> (x998 x59) (x998 x204))) (= x1986 (x2260 (+ x645 31))) (= (x1266 x941 32) x516))) (and (=> x176 x2333) (=> (not x176) x446)))))))
(assert (= x494 (or x808 x253)))
(assert (= x275 (=> (and (= x1360 (x2482 x1356 248)) (= x142 (x1092 x440)) (= (x1092 x873) x1356) (= x1138 (> x1360 0)) (< 0 x142)) (and (=> x1138 x1349) (=> (and (not x1138) (= (x779 0) x1887)) x2439)))))
(assert (= (x779 549686827) (x916 549686827)))
(assert (x747 x856))
(assert (= (x779 4294901760) (x916 4294901760)))
(assert (and (=> (< 0 128) (= x1713 (+ (x255 x1713 128) (* (x1266 x1713 128) 128)))) (x1129 x1713 128) (x270 x1713 128) (x48 x1713 128)))
(assert (x877 x2303))
(assert (x2007 x1462))
(assert (= x1031 (or x2477 x2056)))
(assert (x2007 x594))
(assert (= (x916 1666326814) (x779 1666326814)))
(assert (and (=> (< 0 18446744073709551616) (= x1440 (+ (x255 x1440 18446744073709551616) (* (x1266 x1440 18446744073709551616) 18446744073709551616)))) (x1129 x1440 18446744073709551616) (x270 x1440 18446744073709551616) (x48 x1440 18446744073709551616)))
(assert (= (+ (x998 x526) 1) (x998 (x295 x526 1))))
(assert (x2231 x481))
(assert (x2007 x1843))
(assert (= x1283 (x916 (x998 x1283))))
(assert (x2007 x2433))
(assert (= (x1433 160) (x998 (x916 (x1433 160)))))
(assert (= (=> (and (not (< x1656 x2369)) (= (>= 224 x992) x1229) (= (x2260 (+ x999 1)) x2366) (= (x232 x405) x1656) (= x2369 (x2260 (+ 1 x992)))) (and x1229 (=> (= (ite (>= 32 x992) (x1365 (x916 (x232 x2366)) 0) (ite (>= 64 x992) (x115 (x916 (x232 x2366)) (x916 (x232 (x2260 (+ x2366 32)))) 0) (ite (<= x992 96) (x2298 (x916 (x232 x2366)) (x916 (x232 (x2260 (+ 32 x2366)))) (x916 (x232 (x2260 (+ 64 x2366)))) 0) (ite (>= 128 x992) (x523 (x916 (x232 x2366)) (x916 (x232 (x2260 (+ x2366 32)))) (x916 (x232 (x2260 (+ 64 x2366)))) (x916 (x232 (x2260 (+ 96 x2366)))) 0) (ite (>= 160 x992) (x1068 (x916 (x232 x2366)) (x916 (x232 (x2260 (+ 32 x2366)))) (x916 (x232 (x2260 (+ x2366 64)))) (x916 (x232 (x2260 (+ 96 x2366)))) (x916 (x232 (x2260 (+ x2366 128)))) 0) (ite (<= x992 192) (x1254 (x916 (x232 x2366)) (x916 (x232 (x2260 (+ 32 x2366)))) (x916 (x232 (x2260 (+ x2366 64)))) (x916 (x232 (x2260 (+ 96 x2366)))) (x916 (x232 (x2260 (+ 128 x2366)))) (x916 (x232 (x2260 (+ 160 x2366)))) 0) (ite (>= 224 x992) (x314 (x916 (x232 x2366)) (x916 (x232 (x2260 (+ 32 x2366)))) (x916 (x232 (x2260 (+ x2366 64)))) (x916 (x232 (x2260 (+ 96 x2366)))) (x916 (x232 (x2260 (+ 128 x2366)))) (x916 (x232 (x2260 (+ 160 x2366)))) (x916 (x232 (x2260 (+ 192 x2366)))) 0) (x916 x2225)))))))) x949) x1903))) x1708))
(assert (x2231 (x1714 (x2260 (+ x743 96)))))
(assert (= x2464 (=> (and (or (and (and (= x763 x1975) (= x1484 x488)) (not x329)) (and x329 (and (= (ite x829 0 x488) x1484) (= x829 (= x912 65536)) (= 0 x1975) (= x912 (x1595 65536 x763))))) (= x329 (< x2367 x111))) x1609)))
(assert (x2007 x1867))
(assert (= (+ 1 (x998 x853)) (x998 (x295 x853 1))))
(assert (= (and x389 x2403) x1534))
(assert (x2007 x881))
(assert (x2007 x1218))
(assert (x2007 x1970))
(assert (= (x2183 (* x813 452312848583266388373324160190187140051835877600158453279131187530910662656)) (x1664 x813 248)))
(assert (x2007 x2104))
(assert (= x1075 x1156))
(assert (= (x998 (x916 (x1074 (x2260 (+ 192 x402))))) (x1074 (x2260 (+ x402 192)))))
(assert (x877 x391))
(assert (= x1276 (or x1208 x1833)))
(assert (and (=> (< 0 262144) (= x470 (+ (x255 x470 262144) (* (x1266 x470 262144) 262144)))) (x1129 x470 262144) (x270 x470 262144) (x48 x470 262144)))
(assert (x747 x796))
(assert (x877 (* 1461501637330902918203684832716283019655932542976 x1231)))
(assert (x2007 x1858))
(assert (and (=> (< 0 131072) (= x1094 (+ (x255 x1094 131072) (* (x1266 x1094 131072) 131072)))) (x1129 x1094 131072) (x270 x1094 131072) (x48 x1094 131072)))
(assert (x2007 x1113))
(assert (x2007 x1993))
(assert (x2007 x2078))
(assert (x2007 x1431))
(assert (x2007 x1796))
(assert (x2007 x2406))
(assert (= 0 (x565 x1866)))
(assert (x2007 x2415))
(assert (= x1358 x1635))
(assert (= (x565 (x2260 (+ x1060 64))) 0))
(assert (x2007 x2285))
(assert (= (x998 (x916 (x2283 288))) (x2283 288)))
(assert (x2007 x1740))
(assert (x2007 x2147))
(assert (= (x1832 x537) (x998 (x916 (x1832 x537)))))
(assert (= x2237 (or x1215 x1585)))
(assert (x811 x148))
(assert (x877 x782))
(assert (x2007 x1292))
(assert (= (and (not x1325) x1178) x822))
(assert (= (x1433 192) (x998 (x916 (x1433 192)))))
(assert (= (x565 x2444) 0))
(assert (= x2266 (and x1931 x1847)))
(assert (and (=> (< 0 1461501637330902918203684832716283019655932542976) (= x2303 (+ (x255 x2303 1461501637330902918203684832716283019655932542976) (* (x1266 x2303 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x1129 x2303 1461501637330902918203684832716283019655932542976) (x270 x2303 1461501637330902918203684832716283019655932542976) (x48 x2303 1461501637330902918203684832716283019655932542976)))
(assert (and (x1764 x1010 32) (x2501 x1010 32) (= (* 32 (x1266 x1010 32)) (- x1010 (x1595 31 x1010))) (=> (and (< 0 x1010) (> 32 0)) (and (<= (* 32 (x1266 x1010 32)) x1010) (> (* 32 (x1266 x1010 32)) (- x1010 32)))) (x1404 x1010 32) (x2165 x1010 32)))
(assert (x2250 x1554))
(assert (x2007 x965))
(assert (x2007 x530))
(assert (x885 x1148))
(assert (x2231 (x232 (x2260 (+ x2366 64)))))
(assert (and (=> (< 0 65536) (= x1094 (+ (x255 x1094 65536) (* (x1266 x1094 65536) 65536)))) (x1129 x1094 65536) (x270 x1094 65536) (x48 x1094 65536)))
(assert (x2007 x2340))
(assert (x885 x202))
(assert (x877 x1623))
(assert (x2231 (x660 (x2260 (+ 160 x859)))))
(assert (x2231 (x660 (x2260 (+ 192 x859)))))
(assert (x747 x426))
(assert (= (and (not x2083) x47) x334))
(assert (x2007 x2472))
(assert (= (x998 (x916 (x232 (x2260 (+ x2366 96))))) (x232 (x2260 (+ 96 x2366)))))
(assert (x2007 x1474))
(assert (x1750 x2478))
(assert (= (and x141 x1101) x41))
(assert (x747 x30))
(assert (x2007 x1598))
(assert (= x213 x277))
(assert (= x2448 (and x31 x1024)))
(assert (= (and (not x928) x112) x780))
(assert (= (=> (and (= x890 (x295 x204 1)) (= x361 (not (< (x998 x890) (x998 x59))))) (and x361 x446)) x2333))
(assert (= x2052 (or x1182 x1973 x82 x424 x1230)))
(assert (= (x998 (x916 x1166)) x1166))
(assert (x2007 x2161))
(assert (x747 x532))
(assert (x811 x903))
(assert (x747 x114))
(assert (= x883 (and x1837 (not x230))))
(assert (x877 (* 1461501637330902918203684832716283019655932542976 x1379)))
(assert (x2007 x1131))
(assert (x2007 x121))
(assert (= (and x879 x1583) x1521))
(assert (x747 x2218))
(assert (=> (<= (x2027 (x2260 (+ x182 64))) 10000) (= (x779 (x2027 (x2260 (+ x182 64)))) (x916 (x2027 (x2260 (+ 64 x182)))))))
(assert (=> (<= (x1832 (x2260 (+ 32 x537))) 10000) (= (x779 (x1832 (x2260 (+ x537 32)))) (x916 (x1832 (x2260 (+ 32 x537)))))))
(assert (x2007 x2050))
(assert (x747 x901))
(assert (x2231 (x2283 256)))
(assert (=> (>= 10000 (x660 x859)) (= (x916 (x660 x859)) (x779 (x660 x859)))))
(assert (x877 x335))
(assert (x2007 x91))
(assert (x2231 (x2032 (x2260 (+ 32 x2157)))))
(assert (and (=> (< 0 128) (= x2291 (+ (x255 x2291 128) (* (x1266 x2291 128) 128)))) (x1129 x2291 128) (x270 x2291 128) (x48 x2291 128)))
(assert (= x1442 x2347))
(assert (x2007 x72))
(assert (x877 x283))
(assert (x2007 x1142))
(assert (x1711 x1513))
(assert (= x2043 (or x454 x2463)))
(assert (x2007 x1695))
(assert (= (x998 (x916 (x2032 (x2260 (+ 128 x2157))))) (x2032 (x2260 (+ x2157 128)))))
(assert (x747 x1224))
(assert (x2007 x1533))
(assert (x2007 x2193))
(assert (x2007 x1259))
(assert (x601 x1145))
(assert (= 0 (x565 x572)))
(assert (= (x565 (x2260 (+ x2157 96))) 0))
(assert (= (x1433 224) (x998 (x916 (x1433 224)))))
(assert (x2007 x756))
(assert (= (=> (and (= x1176 (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1695)) (>= x2115 0) (>= 1461501637330902918203684832716283019655932542975 x160) (<= 0 x336) (= x107 (ite x1065 1 0)) (= x1531 x1978) (= x100 x111) (= x267 0) x553 (>= 1461501637330902918203684832716283019655932542975 x2207) (= x1513 x1848) (> x160 0) (= x2365 (x2260 (+ x1198 160))) (<= x51 18446744073709551615) (<= x705 1461501637330902918203684832716283019655932542975) (> 1058358655 x1301) (= x1557 (> (x152 (x916 x902)) 0)) (>= 1461501637330902918203684832716283019655932542975 x593) (= x2036 x1170) (= x1065 (or x1144 x2292)) (= x2405 x513) (>= 1461501637330902918203684832716283019655932542975 x210) (= x386 x2405) (<= 0 x593) (= x2106 x1343) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2115) (>= x513 0) (= 7 x9) (not (< x322 4)) (<= x513 1461501637330902918203684832716283019655932542975) (<= x2433 18446744073709551615) (= x1695 (x2260 (+ 31 x1259))) (= x1382 (x1226 (x916 x160))) (< 0 x902) (= x2292 (< 18446744073709551615 x405)) (= x1406 x1531) (not (< x1301 549686827)) (= (x1595 131072 x1094) x1233) (= (x1226 (x916 x2313)) x1482) (>= x1482 0) (>= 1461501637330902918203684832716283019655932542975 x2106) (or (and (< x157 x322) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x157) (<= x322 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x322) (> x157 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x2313 x160)) (= x1908 x552) (<= 0 x1789) (= x1641 (x152 (x916 x160))) (= 0 x107) (<= x1789 1461501637330902918203684832716283019655932542975) x1557 (= (x1216 x1538) x1198) (= x2102 (< 0 (x152 (x916 x160)))) (= (x115 (x916 x1531) (x779 1) 0) x867) (>= 1461501637330902918203684832716283019655932542975 x1096) (= x1960 false) (= (< 0 (x152 (x916 x2313))) x553) (= x1310 (x2260 (+ x1198 31))) (= x51 x1546) (= x1301 616673092) (= x2484 false) (not (= x902 x160)) (= (x1464 x867) x2115) (= (< x405 128) x1144) (= x210 x49) (= x593 x2036) (<= 0 x1170) (= false x801) (= x1517 x2433) (= x1949 (x2260 (+ x319 x1198))) (>= x210 0) (>= x1382 0) (not (= x1301 549686827)) (<= 0 x2207) (= x267 x471) (= (x1226 (x916 x902)) x336) (= (x2260 (+ x1538 32)) x319) (not (or (> x620 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x620)) (< x620 224)))) (> x2313 0) (<= 0 x2057) (not (< 18446744073709551615 x1198)) (<= x2313 1461501637330902918203684832716283019655932542975) (<= 0 x705) (= x1096 x2368) (not (= x2313 x902)) (and (= (<= x322 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> x322 227)) (= x2184 (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1310)) (= (x287 (- x322 4)) x620) x2102 (= (x2482 x2115 160) x1094) (>= 1461501637330902918203684832716283019655932542975 x1170) (<= x1513 4294967295) (= x405 (x2260 (+ x1176 128))) (< x1301 1666326814) (= x1531 x2308) (= 616673092 x880) (= false x1199) (not (> x1949 x322)) (= (x2260 (+ x1538 31)) x157) (= x1417 (= 131072 x1233)) (> x1641 0) (>= 1461501637330902918203684832716283019655932542975 x2057) (= x1538 (x2260 (+ 4 x1908))) (= x1531 x1980) (not (> x552 18446744073709551615)) (<= x902 1461501637330902918203684832716283019655932542975) (= x965 x1513) (= (x2260 (+ 32 x2184)) x1259)) (and (=> (and (and (= (x2183 (* 32 x1179)) x2046) (= x2114 (ite (> x121 0) x487 (x1595 127 x487))) (= (x115 (x916 x1531) (x779 5) 0) x709) (= x975 (= 0 x2114)) (= x263 (x2260 (+ x720 x405))) (= x2098 (x2260 (+ 31 x2114))) (= x999 (x2260 (+ 32 x405))) (< 0 x1685) (= (x1266 x486 2) x487) (= (x2183 (- x121 (ite x1185 1 0))) x1685) (= x1185 (> 32 x2114)) (= (x305 x709) x486) (= x1179 (x1266 x2098 32)) (= (x1595 1 x486) x121) (= x720 (x2260 (+ x2046 32)))) x1417) (and (=> x975 x2414) (=> (and (= x449 (> x2114 31)) (not x975)) (and (=> (and (not x449) (and (= x913 (x1266 x1876 256)) (= x909 (x2183 (* x913 256))) (= (x305 x709) x1876))) x2414) (=> (and x449 (and (= x1355 (x2260 (+ x999 x2114))) (= x595 (x1237 x2145)) (= x1304 (x295 x2145 1)) (= x2145 (x1365 x709 0)) (= x1891 (< x683 x1355)) (= (x2260 (+ x999 32)) x683))) (and (=> x1891 x2418) (=> (not x1891) x1338))))))) (=> (and (and (= x201 (x779 0)) (= x405 x1625)) (not x1417)) x824))) x1984))
(assert (x2007 x652))
(assert (x1275 x1848))
(assert (= (or x755 x894) x865))
(assert (x2007 x1817))
(assert (x877 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x2007 x2130))
(assert (and (=> (< 0 128) (= x30 (+ (x255 x30 128) (* (x1266 x30 128) 128)))) (x1129 x30 128) (x270 x30 128) (x48 x30 128)))
(assert (= 0 (x565 (x2260 (+ 192 x402)))))
(assert (x2007 x1390))
(assert (= x1239 (and x676 x900)))
(assert (x877 x2291))
(assert (= (x565 (x2260 (+ x537 32))) 0))
(assert (x2007 x1397))
(assert (= (and x838 x2226) x560))
(assert (= (x1266 x19 6277101735386680763835789423207666416102355444464034512896) (x2482 x19 192)))
(assert (x885 x632))
(assert (x2007 x1117))
(assert (and (x1764 x1415 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2501 x1415 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1415 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1415 (x1595 452312848583266388373324160190187140051835877600158453279131187530910662655 x1415))) (=> (and (< 0 x1415) (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0)) (and (<= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1415 452312848583266388373324160190187140051835877600158453279131187530910662656)) x1415) (> (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1415 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1415 452312848583266388373324160190187140051835877600158453279131187530910662656)))) (x1404 x1415 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2165 x1415 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (and (x1778 x1231 1461501637330902918203684832716283019655932542976) (x1905 x1231 1461501637330902918203684832716283019655932542976) (= (x482 x1231 1461501637330902918203684832716283019655932542976) (* 1461501637330902918203684832716283019655932542976 x1231)) (x509 x1231 1461501637330902918203684832716283019655932542976) (x699 x1231 1461501637330902918203684832716283019655932542976) (x2495 x1231 1461501637330902918203684832716283019655932542976) (and (= (- (* (- 115792089237316195423570985007226406215939081747436879206741300988257197096960) x1231) (- 13407807929942597099574024998036615799469062179260703058867172057525692431234690984665004206576655545133536153655237612981186769890963219668027669280194560)) (x482 (- x1231 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089237316195423570985007226406215939081747436879206741300988257197096960))) (= (x482 (- x1231 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1461501637330902918203684832716283019655932542976) (- (* 1461501637330902918203684832716283019655932542976 x1231) 169230328010303641331690318856389386196071598838855992136870091590247882556495704531248437872567112920983350278405979725889536)) (= (x482 x1231 (- 115792089237316195423570985007226406215939081747436879206741300988257197096960)) (* (- 115792089237316195423570985007226406215939081747436879206741300988257197096960) x1231)))))
(assert (= (x2032 (x2260 (+ x2157 32))) (x998 (x916 (x2032 (x2260 (+ 32 x2157)))))))
(assert (x2007 x216))
(assert (x885 x1797))
(assert (x2007 x1840))
(assert (x2231 (x2027 (x2260 (+ 64 x182)))))
(assert (x2007 x970))
(assert (x2007 x534))
(assert (= x1672 (=> (and (= (<= x92 224) x1644) (= (x2260 (+ 1 x92)) x978) (= (x660 x876) x44) (= (x2260 (+ 1 x2408)) x859) (not (> x978 x44))) (and x1644 (=> (= x195 (ite (<= x92 32) (x1365 (x916 (x660 x859)) 0) (ite (<= x92 64) (x115 (x916 (x660 x859)) (x916 (x660 (x2260 (+ x859 32)))) 0) (ite (<= x92 96) (x2298 (x916 (x660 x859)) (x916 (x660 (x2260 (+ x859 32)))) (x916 (x660 (x2260 (+ x859 64)))) 0) (ite (<= x92 128) (x523 (x916 (x660 x859)) (x916 (x660 (x2260 (+ x859 32)))) (x916 (x660 (x2260 (+ x859 64)))) (x916 (x660 (x2260 (+ x859 96)))) 0) (ite (<= x92 160) (x1068 (x916 (x660 x859)) (x916 (x660 (x2260 (+ 32 x859)))) (x916 (x660 (x2260 (+ x859 64)))) (x916 (x660 (x2260 (+ 96 x859)))) (x916 (x660 (x2260 (+ x859 128)))) 0) (ite (<= x92 192) (x1254 (x916 (x660 x859)) (x916 (x660 (x2260 (+ x859 32)))) (x916 (x660 (x2260 (+ x859 64)))) (x916 (x660 (x2260 (+ 96 x859)))) (x916 (x660 (x2260 (+ x859 128)))) (x916 (x660 (x2260 (+ x859 160)))) 0) (ite (>= 224 x92) (x314 (x916 (x660 x859)) (x916 (x660 (x2260 (+ x859 32)))) (x916 (x660 (x2260 (+ 64 x859)))) (x916 (x660 (x2260 (+ x859 96)))) (x916 (x660 (x2260 (+ x859 128)))) (x916 (x660 (x2260 (+ x859 160)))) (x916 (x660 (x2260 (+ 192 x859)))) 0) (x916 x481))))))))) x904)))))
(assert (= (x232 (x2260 (+ 192 x2366))) (x998 (x916 (x232 (x2260 (+ 192 x2366)))))))
(assert (x2231 x1390))
(assert (x2007 x593))
(assert (=> (<= x836 10000) (= (x779 x836) (x916 x836))))
(assert (= (and (not x1249) x2217) x1784))
(assert (= 42946364674413620953198879289557591458479223041058917712765633135805412147200 (x998 (x779 42946364674413620953198879289557591458479223041058917712765633135805412147200))))
(assert (= x460 (and (not x118) x1924)))
(assert (= (x998 (x779 109562948294120585953088955926913691080166221410047079322077399086870164406272)) 109562948294120585953088955926913691080166221410047079322077399086870164406272))
(assert (=> (<= (x1832 x537) 10000) (= (x779 (x1832 x537)) (x916 (x1832 x537)))))
(assert (and (=> (< 0 262144) (= x1480 (+ (x255 x1480 262144) (* (x1266 x1480 262144) 262144)))) (x1129 x1480 262144) (x270 x1480 262144) (x48 x1480 262144)))
(assert (x15 x1351))
(assert (x2007 x2302))
(assert (x2007 x2369))
(assert (= (x998 (x779 115792089210356248756420345214020892766250353992003419616917011526809519390720)) 115792089210356248756420345214020892766250353992003419616917011526809519390720))
(assert (x2007 x1044))
(assert (x2007 x1685))
(assert (= (and x2222 x1520) x648))
(assert (x747 x342))
(assert (and (x1764 x2507 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2501 x2507 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x2507 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x2507 (x1595 452312848583266388373324160190187140051835877600158453279131187530910662655 x2507))) (=> (and (< 0 x2507) (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0)) (and (<= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x2507 452312848583266388373324160190187140051835877600158453279131187530910662656)) x2507) (> (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x2507 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x2507 452312848583266388373324160190187140051835877600158453279131187530910662656)))) (x1404 x2507 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2165 x2507 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x2007 x1916))
(assert (= x786 (=> (and (= x1772 (x634 x649)) (= (>= 224 x2285) x2265) (= x1718 (x2260 (+ x375 1))) (not (< x1772 x2196)) (= x2196 (x2260 (+ 1 x2285)))) (and (=> (= x1769 (ite (<= x2285 32) (x1365 (x916 (x634 x1718)) 0) (ite (>= 64 x2285) (x115 (x916 (x634 x1718)) (x916 (x634 (x2260 (+ 32 x1718)))) 0) (ite (>= 96 x2285) (x2298 (x916 (x634 x1718)) (x916 (x634 (x2260 (+ x1718 32)))) (x916 (x634 (x2260 (+ x1718 64)))) 0) (ite (>= 128 x2285) (x523 (x916 (x634 x1718)) (x916 (x634 (x2260 (+ x1718 32)))) (x916 (x634 (x2260 (+ 64 x1718)))) (x916 (x634 (x2260 (+ 96 x1718)))) 0) (ite (>= 160 x2285) (x1068 (x916 (x634 x1718)) (x916 (x634 (x2260 (+ 32 x1718)))) (x916 (x634 (x2260 (+ x1718 64)))) (x916 (x634 (x2260 (+ 96 x1718)))) (x916 (x634 (x2260 (+ 128 x1718)))) 0) (ite (<= x2285 192) (x1254 (x916 (x634 x1718)) (x916 (x634 (x2260 (+ 32 x1718)))) (x916 (x634 (x2260 (+ 64 x1718)))) (x916 (x634 (x2260 (+ 96 x1718)))) (x916 (x634 (x2260 (+ 128 x1718)))) (x916 (x634 (x2260 (+ 160 x1718)))) 0) (ite (>= 224 x2285) (x314 (x916 (x634 x1718)) (x916 (x634 (x2260 (+ 32 x1718)))) (x916 (x634 (x2260 (+ x1718 64)))) (x916 (x634 (x2260 (+ x1718 96)))) (x916 (x634 (x2260 (+ x1718 128)))) (x916 (x634 (x2260 (+ x1718 160)))) (x916 (x634 (x2260 (+ 192 x1718)))) 0) (x916 x559))))))))) x1262) x2265))))
(assert (x2007 x168))
(assert (x2007 x1296))
(assert (and (x1764 x72 32) (x2501 x72 32) (= (* 32 (x1266 x72 32)) (- x72 (x1595 31 x72))) (=> (and (< 0 x72) (> 32 0)) (and (<= (* 32 (x1266 x72 32)) x72) (> (* 32 (x1266 x72 32)) (- x72 32)))) (x1404 x72 32) (x2165 x72 32)))
(assert (x2231 (x2263 (x2260 (+ x1866 32)))))
(assert (x2007 x471))
(assert (and (=> (< 0 2) (= x2440 (+ (x255 x2440 2) (* (x1266 x2440 2) 2)))) (x1129 x2440 2) (x270 x2440 2) (x48 x2440 2)))
(assert (x2007 x1161))
(assert (= (x998 (x779 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= (and x329 x2393) x1062))
(assert (x2231 (x660 (x2260 (+ x859 96)))))
(assert (x855 x1808))
(assert (x2007 x1333))
(assert (x2007 x1158))
(assert (x2231 (x506 (x2260 (+ 192 x381)))))
(assert (x2007 x876))
(assert (x2007 x1762))
(assert (and (=> (< 0 4294967296) (= x1296 (+ (x255 x1296 4294967296) (* (x1266 x1296 4294967296) 4294967296)))) (x1129 x1296 4294967296) (x270 x1296 4294967296) (x48 x1296 4294967296)))
(assert (x2007 x575))
(assert (= x1674 (=> (and (> x1806 0) (= (x2482 x200 248) x92) (= (< 0 x92) x1841) (= x1806 (x660 x876)) (= x200 (x660 x2408))) (and (=> (and (not x1841) (= (x779 0) x195)) x904) (=> x1841 x1672)))))
(assert (and (x1778 256 x884) (x1905 256 x884) (= (x482 256 x884) (* x884 256)) (x509 256 x884) (x699 256 x884) (x2495 256 x884) (and (= (- (* (- x884 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* (- x884 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x884 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x884) (- (* x884 256) (* x884 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 256 (- x884 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x884 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256)))))
(assert (and (=> (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (= x672 (+ (x255 x672 26959946667150639794667015087019630673637144422540572481103610249216) (* (x1266 x672 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)))) (x1129 x672 26959946667150639794667015087019630673637144422540572481103610249216) (x270 x672 26959946667150639794667015087019630673637144422540572481103610249216) (x48 x672 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x885 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (and (x1764 x486 2) (x2501 x486 2) (= (* 2 (x1266 x486 2)) (- x486 (x1595 1 x486))) (=> (and (< 0 x486) (> 2 0)) (and (<= (* 2 (x1266 x486 2)) x486) (> (* 2 (x1266 x486 2)) (- x486 2)))) (x1404 x486 2) (x2165 x486 2)))
(assert (x2007 x2154))
(assert (x669 x2069))
(assert (x2007 x612))
(assert (= x2072 (and (not x759) x430)))
(assert (x2007 x254))
(assert (x2231 (x506 (x2260 (+ 128 x381)))))
(assert (x885 x1581))
(assert (x885 x1337))
(assert (= (and x1206 x1201) x1863))
(assert (x885 x2507))
(assert (= x2505 (and x484 x1031)))
(assert (and (x1764 x1880 2) (x2501 x1880 2) (= (* 2 (x1266 x1880 2)) (- x1880 (x1595 1 x1880))) (=> (and (< 0 x1880) (> 2 0)) (and (<= (* 2 (x1266 x1880 2)) x1880) (> (* 2 (x1266 x1880 2)) (- x1880 2)))) (x1404 x1880 2) (x2165 x1880 2)))
(assert (x2007 x1902))
(assert (x2007 x856))
(assert (and (x1778 32 x1587) (x1905 32 x1587) (= (x482 32 x1587) (* x1587 32)) (x509 32 x1587) (x699 32 x1587) (x2495 32 x1587) (and (= (- (* (- x1587 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x1587 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1587 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1587) (- (* x1587 32) (* x1587 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 32 (- x1587 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1587 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)))))
(assert (= x422 (and x116 x1559)))
(assert (let ((x1706 (* 1461501637330902918203684832716283019655932542976 x1379))) (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1706 (+ (x255 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (= (and x1853 x156) x1384))
(assert (and (=> (< 0 32) (= x1760 (+ (x255 x1760 32) (* (x1266 x1760 32) 32)))) (x1129 x1760 32) (x270 x1760 32) (x48 x1760 32)))
(assert (x2250 x2456))
(assert (x2007 x1753))
(assert (x2007 x2374))
(assert (and (x1778 32 x2504) (x1905 32 x2504) (= (x482 32 x2504) (* x2504 32)) (x509 32 x2504) (x699 32 x2504) (x2495 32 x2504) (and (= (- (* (- x2504 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x2504 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x2504 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x2504) (- (* x2504 32) (* x2504 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 32 (- x2504 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2504 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)))))
(assert (= x1951 (and x388 x597)))
(assert (x877 (* x78 1461501637330902918203684832716283019655932542976)))
(assert (let ((x1706 (* x1231 1461501637330902918203684832716283019655932542976))) (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1706 (+ (x255 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (= x878 (and x1560 (not x589))))
(assert (= (=> (and (= x37 x889) (not (>= (+ 1 x24) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x21 x1539)) x363) x2273))
(assert (let ((x1706 (* 1461501637330902918203684832716283019655932542976 x2328))) (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1706 (+ (x255 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (x885 x1160))
(assert (= 616673092 (x998 (x779 616673092))))
(assert (= (=> (and (= (x2260 (+ x1794 96)) x578) (= x1536 (not (< 128 x952))) (= x447 (x689 256))) (and x1387 x1536)) x1586))
(assert (= (=> (and (or (not x2491) (and x2491 (and (= x2359 (x1595 31 x645)) (= (x2260 (+ x184 x1619)) x1533) (= x272 (x2280 x1533)) (= x39 (x1595 x272 x856)) (= (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2482 115792089237316195423570985008687907853269984665640564039457584007913129639935 x241)) x856) (= x241 (x2183 (* 8 x2359)))))) (= (< x1146 x645) x2491)) x90) x1124))
(assert (and (=> (< 0 131072) (= x668 (+ (x255 x668 131072) (* (x1266 x668 131072) 131072)))) (x1129 x668 131072) (x270 x668 131072) (x48 x668 131072)))
(assert (x885 x2210))
(assert (x2007 x1480))
(assert (= (x1714 (x2260 (+ 32 x743))) (x998 (x916 (x1714 (x2260 (+ x743 32)))))))
(assert (= x421 x628))
(assert (= x1883 (and x1242 (not x1721))))
(assert (x2007 x2434))
(assert (x2007 x1096))
(assert (x2007 x1492))
(assert (x2007 x1046))
(assert (= x1983 x1037))
(assert (x2231 (x497 (x2260 (+ x933 64)))))
(assert (x2007 x2024))
(assert (and (=> (< 0 262144) (= x1094 (+ (x255 x1094 262144) (* (x1266 x1094 262144) 262144)))) (x1129 x1094 262144) (x270 x1094 262144) (x48 x1094 262144)))
(assert (= x2458 (and x1446 x590)))
(assert (x2007 x2122))
(assert (x1056 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1137 2 x241)))
(assert (x2007 x2427))
(assert (x747 x1554))
(assert (x747 x2314))
(assert (= x1101 (and x1031 (not x484))))
(assert (and (x1778 2 x1677) (x1905 2 x1677) (= (x482 2 x1677) (* x1677 2)) (x509 2 x1677) (x699 2 x1677) (x2495 2 x1677) (and (= (- (* (- x1677 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2) (* (- x1677 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x1677 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x1677) (- (* x1677 2) (* x1677 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 2 (- x1677 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1677 115792089237316195423570985008687907853269984665640564039457584007913129639936) 2)))))
(assert (x877 x51))
(assert (= (or x365 x1964) x1696))
(assert (x747 x1411))
(assert (= (x1202 (x2260 (+ x2489 192))) (x998 (x916 (x1202 (x2260 (+ 192 x2489)))))))
(assert (x2231 (x1202 (x2260 (+ 160 x2489)))))
(assert (= (and x2221 x2244) x641))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x532 (+ (x255 x532 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x532 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x532 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x532 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x532 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x2007 x1809))
(assert (= x1244 (and x1420 (not x1227))))
(assert (x2007 x805))
(assert (= (x506 (x2260 (+ 192 x381))) (x998 (x916 (x506 (x2260 (+ x381 192)))))))
(assert (= x1506 (and x390 x1855)))
(assert (x747 x181))
(assert (x2007 x403))
(assert (= (x2482 x1668 160) (x1266 x1668 1461501637330902918203684832716283019655932542976)))
(assert (x877 x2073))
(assert (and (x1778 x490 6277101735386680763835789423207666416102355444464034512896) (x1905 x490 6277101735386680763835789423207666416102355444464034512896) (= (x482 x490 6277101735386680763835789423207666416102355444464034512896) (* 6277101735386680763835789423207666416102355444464034512896 x490)) (x509 x490 6277101735386680763835789423207666416102355444464034512896) (x699 x490 6277101735386680763835789423207666416102355444464034512896) (x2495 x490 6277101735386680763835789423207666416102355444464034512896) (and (= (- (* (- 115792089237316195417293883273301227089434195242432897623355228563449095127040) x490) (- 13407807929942597098847186273910239236930042012704388843369920083034445969792056777621235010053505504363840807472722485292991361205680392012899047377469440)) (x482 (- x490 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089237316195417293883273301227089434195242432897623355228563449095127040))) (= (x482 (- x490 115792089237316195423570985008687907853269984665640564039457584007913129639936) 6277101735386680763835789423207666416102355444464034512896) (- (* 6277101735386680763835789423207666416102355444464034512896 x490) 726838724295606890549323807888004534353641360687318060281490199180639288113397923326191050713763565560762521606266177933534601628614656)) (= (x482 x490 (- 115792089237316195417293883273301227089434195242432897623355228563449095127040)) (* (- 115792089237316195417293883273301227089434195242432897623355228563449095127040) x490)))))
(assert (x2007 x439))
(assert (= x2025 (and x300 (not x1971))))
(assert (and (x1764 x1876 256) (x2501 x1876 256) (= (* 256 (x1266 x1876 256)) (- x1876 (x1595 255 x1876))) (=> (and (< 0 x1876) (> 256 0)) (and (<= (* 256 (x1266 x1876 256)) x1876) (> (* 256 (x1266 x1876 256)) (- x1876 256)))) (x1404 x1876 256) (x2165 x1876 256)))
(assert (= x106 (or x1268 x1472)))
(assert (x2007 x1406))
(assert (= x2403 (and x1777 x2023)))
(assert (x877 x1094))
(assert (= (=> (= x1446 (= x2155 (x779 0))) (and (=> (and x1446 (and (= x710 (x2482 x1843 192)) (= x2411 x2161))) x1212) (=> (and (and (or (and (and (= x810 1) (< x150 4294967296)) x1403) (and (= x810 x2194) (not x1403))) (and (= x83 (x2260 (+ x2411 4))) (= (> x2194 0) x1403))) (not x1446)) x1105))) x697))
(assert (= (x232 (x2260 (+ x2366 64))) (x998 (x916 (x232 (x2260 (+ 64 x2366)))))))
(assert (x2007 x629))
(assert (= (x565 (x2260 (+ x381 32))) 0))
(assert (x1330 x290))
(assert (x2007 x212))
(assert (= x2047 (=> (and (or (and (= 0 x2390) x260) (and (= x668 x2390) (not x260))) (= x260 (> x111 x2077))) x618)))
(assert (x2007 x1911))
(assert (x2007 x1153))
(assert (x885 x792))
(assert (=> (>= 10000 (x1433 256)) (= (x779 (x1433 256)) (x916 (x1433 256)))))
(assert (x2007 x2300))
(assert (= (and x1308 x1990) x1618))
(assert (x2007 x307))
(assert (x2007 x1789))
(assert (= x2005 (and (not x639) x2034)))
(assert (x2007 x2470))
(assert (x2007 x412))
(assert (= x1093 (or x1859 x1111 x1451)))
(assert (x2007 x1231))
(assert (x2007 x1498))
(assert (x2007 x2191))
(assert (x2007 x1071))
(assert (x2007 x1505))
(assert (x2007 x428))
(assert (x2007 x1438))
(assert (x877 (* x2296 6277101735386680763835789423207666416102355444464034512896)))
(assert (x885 x1599))
(assert (x2007 x567))
(assert (x2007 x2225))
(assert (= (x998 (x916 (x232 (x2260 (+ 32 x2366))))) (x232 (x2260 (+ 32 x2366)))))
(assert (x2007 x1655))
(assert (x811 x283))
(assert (x747 x2287))
(assert (and (x1764 x431 2) (x2501 x431 2) (= (* 2 (x1266 x431 2)) (- x431 (x1595 1 x431))) (=> (and (< 0 x431) (> 2 0)) (and (<= (* 2 (x1266 x431 2)) x431) (> (* 2 (x1266 x431 2)) (- x431 2)))) (x1404 x431 2) (x2165 x431 2)))
(assert (x2007 x2082))
(assert (x2007 x870))
(assert (and (x1764 x2461 256) (x2501 x2461 256) (= (* 256 (x1266 x2461 256)) (- x2461 (x1595 255 x2461))) (=> (and (< 0 x2461) (> 256 0)) (and (<= (* 256 (x1266 x2461 256)) x2461) (> (* 256 (x1266 x2461 256)) (- x2461 256)))) (x1404 x2461 256) (x2165 x2461 256)))
(assert (x15 x1801))
(assert (x2007 x2296))
(assert (and (=> (< 0 2) (= x271 (+ (x255 x271 2) (* (x1266 x271 2) 2)))) (x1129 x271 2) (x270 x271 2) (x48 x271 2)))
(assert (x2007 x2097))
(assert (x2007 x21))
(assert (x747 18446744073709551615))
(assert (x811 x391))
(assert (= (and x327 x2219) x2125))
(assert (x2007 x2209))
(assert (x2231 (x232 x2366)))
(assert (x2007 x1224))
(assert (=> (<= (x2032 (x2260 (+ x2157 128))) 10000) (= (x779 (x2032 (x2260 (+ 128 x2157)))) (x916 (x2032 (x2260 (+ x2157 128)))))))
(assert (= (x998 (x916 (x2027 x182))) (x2027 x182)))
(assert (= (x1266 x19 1461501637330902918203684832716283019655932542976) (x2482 x19 160)))
(assert (= x2100 (and x249 (not x1686))))
(assert (= x225 (and x2345 x1391)))
(assert (x2007 x1069))
(assert (and (x1764 x1510 256) (x2501 x1510 256) (= (* 256 (x1266 x1510 256)) (- x1510 (x1595 255 x1510))) (=> (and (< 0 x1510) (> 256 0)) (and (<= (* 256 (x1266 x1510 256)) x1510) (> (* 256 (x1266 x1510 256)) (- x1510 256)))) (x1404 x1510 256) (x2165 x1510 256)))
(assert (= (x565 (x2260 (+ 32 x933))) 0))
(assert (x2007 x92))
(assert (x747 x2199))
(assert (= x2036 (x998 (x916 x2036))))
(assert (x2007 x13))
(assert (= (and x1559 (not x116)) x741))
(assert (x2007 x2168))
(assert (=> (<= (x506 (x2260 (+ 160 x381))) 10000) (= (x779 (x506 (x2260 (+ x381 160)))) (x916 (x506 (x2260 (+ 160 x381)))))))
(assert (x885 x1415))
(assert (x2007 x2294))
(assert (x2231 (x506 (x2260 (+ x381 64)))))
(assert (x747 x2449))
(assert (= x2169 (x916 (x998 x2169))))
(assert (x877 x486))
(assert (= x1268 (and (not x1934) x863)))
(assert (= (or x2216 x1567) x1804))
(assert (= x772 (and x1514 (not x1138))))
(assert (= (and x1457 x418) x733))
(assert (x2007 x1194))
(assert (= (x497 (x2260 (+ 160 x933))) (x998 (x916 (x497 (x2260 (+ 160 x933)))))))
(assert (x885 (x1137 2 x783)))
(assert (x877 x1700))
(assert (x2007 x30))
(assert (= (and (not x985) x741) x237))
(assert (x2231 (x1092 (x2260 (+ 160 x1060)))))
(assert (x2007 x1151))
(assert (x2007 x790))
(assert (=> (>= 10000 x942) (= (x916 x942) (x779 x942))))
(assert (x2231 (x2263 (x2260 (+ x1866 96)))))
(assert (x2007 x367))
(assert (= (x565 (x2260 (+ x2489 32))) 0))
(assert (= (=> (and (not (> x1346 x731)) (= x381 (x2260 (+ x1988 1))) (= (>= 224 x2062) x1582) (= x1346 (x2260 (+ 1 x2062))) (= (x506 x1579) x731)) (and (=> (= (ite (<= x2062 32) (x1365 (x916 (x506 x381)) 0) (ite (>= 64 x2062) (x115 (x916 (x506 x381)) (x916 (x506 (x2260 (+ 32 x381)))) 0) (ite (>= 96 x2062) (x2298 (x916 (x506 x381)) (x916 (x506 (x2260 (+ x381 32)))) (x916 (x506 (x2260 (+ x381 64)))) 0) (ite (>= 128 x2062) (x523 (x916 (x506 x381)) (x916 (x506 (x2260 (+ 32 x381)))) (x916 (x506 (x2260 (+ x381 64)))) (x916 (x506 (x2260 (+ 96 x381)))) 0) (ite (<= x2062 160) (x1068 (x916 (x506 x381)) (x916 (x506 (x2260 (+ 32 x381)))) (x916 (x506 (x2260 (+ x381 64)))) (x916 (x506 (x2260 (+ x381 96)))) (x916 (x506 (x2260 (+ x381 128)))) 0) (ite (<= x2062 192) (x1254 (x916 (x506 x381)) (x916 (x506 (x2260 (+ 32 x381)))) (x916 (x506 (x2260 (+ 64 x381)))) (x916 (x506 (x2260 (+ x381 96)))) (x916 (x506 (x2260 (+ 128 x381)))) (x916 (x506 (x2260 (+ 160 x381)))) 0) (ite (>= 224 x2062) (x314 (x916 (x506 x381)) (x916 (x506 (x2260 (+ x381 32)))) (x916 (x506 (x2260 (+ 64 x381)))) (x916 (x506 (x2260 (+ 96 x381)))) (x916 (x506 (x2260 (+ 128 x381)))) (x916 (x506 (x2260 (+ x381 160)))) (x916 (x506 (x2260 (+ 192 x381)))) 0) (x916 x1809)))))))) x994) x2001) x1582)) x339))
(assert (x1061 x1513 x2141))
(assert (x15 x191))
(assert (=> (>= 10000 x1113) (= (x916 x1113) (x779 x1113))))
(assert (x2007 x2035))
(assert (x2007 x782))
(assert (= (=> (and (= (x2260 (+ 1 x924)) x396) (= (x2260 (+ 1 x567)) x182) (= x2466 (<= x924 224)) (= (x2027 x806) x1552) (not (< x1552 x396))) (and (=> (= x394 (ite (>= 32 x924) (x1365 (x916 (x2027 x182)) 0) (ite (<= x924 64) (x115 (x916 (x2027 x182)) (x916 (x2027 (x2260 (+ x182 32)))) 0) (ite (<= x924 96) (x2298 (x916 (x2027 x182)) (x916 (x2027 (x2260 (+ x182 32)))) (x916 (x2027 (x2260 (+ x182 64)))) 0) (ite (<= x924 128) (x523 (x916 (x2027 x182)) (x916 (x2027 (x2260 (+ x182 32)))) (x916 (x2027 (x2260 (+ x182 64)))) (x916 (x2027 (x2260 (+ x182 96)))) 0) (ite (>= 160 x924) (x1068 (x916 (x2027 x182)) (x916 (x2027 (x2260 (+ x182 32)))) (x916 (x2027 (x2260 (+ 64 x182)))) (x916 (x2027 (x2260 (+ x182 96)))) (x916 (x2027 (x2260 (+ x182 128)))) 0) (ite (<= x924 192) (x1254 (x916 (x2027 x182)) (x916 (x2027 (x2260 (+ x182 32)))) (x916 (x2027 (x2260 (+ x182 64)))) (x916 (x2027 (x2260 (+ x182 96)))) (x916 (x2027 (x2260 (+ x182 128)))) (x916 (x2027 (x2260 (+ x182 160)))) 0) (ite (>= 224 x924) (x314 (x916 (x2027 x182)) (x916 (x2027 (x2260 (+ x182 32)))) (x916 (x2027 (x2260 (+ x182 64)))) (x916 (x2027 (x2260 (+ x182 96)))) (x916 (x2027 (x2260 (+ 128 x182)))) (x916 (x2027 (x2260 (+ 160 x182)))) (x916 (x2027 (x2260 (+ 192 x182)))) 0) (x916 x2427))))))))) x393) x2466)) x617))
(assert (x885 x1041))
(assert (= (x497 x933) (x998 (x916 (x497 x933)))))
(assert (= (x998 (x916 (x660 x859))) (x660 x859)))
(assert (x2007 x1827))
(assert (x1330 32))
(assert (= (or x1780 x1919) x1515))
(assert (x2007 x490))
(assert (x2007 x100))
(assert (and (=> (< 0 65536) (= x2069 (+ (x255 x2069 65536) (* (x1266 x2069 65536) 65536)))) (x1129 x2069 65536) (x270 x2069 65536) (x48 x2069 65536)))
(assert (= (x565 (x2260 (+ x1060 128))) 0))
(assert (=> (>= 10000 (x1714 (x2260 (+ x743 160)))) (= (x779 (x1714 (x2260 (+ 160 x743)))) (x916 (x1714 (x2260 (+ 160 x743)))))))
(assert (= x1120 (and x1835 x2052)))
(assert (= (x916 (x998 x93)) x93))
(assert (= (or x1555 x1614) x1859))
(assert (= (=> (and (= x1918 (x2263 x1197)) (= x1082 (x2263 x715)) (= x1818 (x2482 x1082 248)) (> x1918 0) (= x1320 (< 0 x1818))) (and (=> x1320 x1824) (=> (and (= (x779 0) x1770) (not x1320)) x1258))) x922))
(assert (=> (>= 10000 x2173) (= (x779 x2173) (x916 x2173))))
(assert (=> (<= (x1092 (x2260 (+ 32 x1060))) 10000) (= (x916 (x1092 (x2260 (+ x1060 32)))) (x779 (x1092 (x2260 (+ x1060 32)))))))
(assert (x2007 x559))
(assert (= x1550 (and x7 (not x20))))
(assert (x2007 x537))
(assert (= x576 (and x1804 x308)))
(assert (= (or (and x2381 (not x1221)) (and x2436 (not x1459)) x2286) x755))
(assert (x2007 x1362))
(assert (x2007 x2313))
(assert (= x544 (and x1767 x1263)))
(assert (x811 x1788))
(assert (x2250 x2340))
(assert (= x860 (and (not x1667) x661)))
(assert (= x1614 (and x1019 (not x1761))))
(assert (x2231 (x1074 (x2260 (+ x402 96)))))
(assert (x2007 x1949))
(assert (= (x779 4294967295) (x916 4294967295)))
(assert (x747 x1880))
(assert (x2007 x1128))
(assert (= (x565 (x2260 (+ x1866 32))) 0))
(assert (x885 x1986))
(assert (x747 x2247))
(assert (and (=> (< 0 1461501637330902918203684832716283019655932542976) (= x2106 (+ (x255 x2106 1461501637330902918203684832716283019655932542976) (* (x1266 x2106 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x1129 x2106 1461501637330902918203684832716283019655932542976) (x270 x2106 1461501637330902918203684832716283019655932542976) (x48 x2106 1461501637330902918203684832716283019655932542976)))
(assert (x877 x2390))
(assert (= (x565 x1533) 0))
(assert (x2007 x944))
(assert (= (and (not x1558) x1248) x169))
(assert (x2007 x34))
(assert (x2231 x902))
(assert (x885 x1616))
(assert (and (x1764 x647 256) (x2501 x647 256) (= (* 256 (x1266 x647 256)) (- x647 (x1595 255 x647))) (=> (and (< 0 x647) (> 256 0)) (and (<= (* 256 (x1266 x647 256)) x647) (> (* 256 (x1266 x647 256)) (- x647 256)))) (x1404 x647 256) (x2165 x647 256)))
(assert (= (and x1134 x496) x310))
(assert (and (x1764 x1612 32) (x2501 x1612 32) (= (* 32 (x1266 x1612 32)) (- x1612 (x1595 31 x1612))) (=> (and (< 0 x1612) (> 32 0)) (and (<= (* 32 (x1266 x1612 32)) x1612) (> (* 32 (x1266 x1612 32)) (- x1612 32)))) (x1404 x1612 32) (x2165 x1612 32)))
(assert (x2007 x2387))
(assert (= x1392 (or x1521 x1826)))
(assert (x1750 x2223))
(assert (= x1543 (and x2065 x349)))
(assert (x877 x1966))
(assert (x2007 x1270))
(assert (x2007 x762))
(assert (x2231 x1531))
(assert (x885 x1224))
(assert (and (x1778 32 x1179) (x1905 32 x1179) (= (x482 32 x1179) (* x1179 32)) (x509 32 x1179) (x699 32 x1179) (x2495 32 x1179) (and (= (- (* (- x1179 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x1179 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1179 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1179) (- (* x1179 32) (* x1179 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 32 (- x1179 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1179 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)))))
(assert (x877 x1581))
(assert (= x934 (=> (and (or (and (not x1651) (not x1651)) (and x1651 (not x102))) (and (= (x1595 4294901760 x1513) x1923) (= (ite (< x2050 x100) 0 x2442) x1194) (= (= 0 x2300) x102) (= (not (= 0 x1923)) x1651) (= x2300 (x1595 1 x1194)))) x1407)))
(assert (x15 x2073))
(assert (=> (>= 10000 (x1714 (x2260 (+ 32 x743)))) (= (x916 (x1714 (x2260 (+ x743 32)))) (x779 (x1714 (x2260 (+ x743 32)))))))
(assert (x747 x335))
(assert (x2007 x1315))
(assert (x2007 x1146))
(assert (x2007 x226))
(assert (=> (>= 10000 x160) (= (x779 x160) (x916 x160))))
(assert (and (x1778 256 x1163) (x1905 256 x1163) (= (x482 256 x1163) (* x1163 256)) (x509 256 x1163) (x699 256 x1163) (x2495 256 x1163) (and (= (- (* (- x1163 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* (- x1163 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x1163 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x1163) (- (* x1163 256) (* x1163 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 256 (- x1163 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1163 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256)))))
(assert (= (x2283 256) (x998 (x916 (x2283 256)))))
(assert (= x1294 (and x2039 (not x1228))))
(assert (= (and (not x337) x527) x2217))
(assert (x2149 x1911))
(assert (and (=> (< 0 32) (= x1310 (+ (x255 x1310 32) (* (x1266 x1310 32) 32)))) (x1129 x1310 32) (x270 x1310 32) (x48 x1310 32)))
(assert (= x1369 x569))
(assert (= x273 (=> (and (= (< x2186 x111) x2093) (or (and x2093 (and (= x888 (x1595 65536 x1836)) (= x2303 (ite x2110 0 x268)) (= (= 65536 x888) x2110))) (and (= x268 x2303) (not x2093)))) x991)))
(assert (x885 x2314))
(assert (x2007 x913))
(assert (x2007 x2139))
(assert (x747 31))
(assert (and (=> (< 0 32) (= x1554 (+ (x255 x1554 32) (* (x1266 x1554 32) 32)))) (x1129 x1554 32) (x270 x1554 32) (x48 x1554 32)))
(assert (x2007 x2332))
(assert (x2007 x1317))
(assert (x2007 x1098))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1141 (+ (x255 x1141 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1141 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1141 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1141 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1141 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x2007 x1297))
(assert (= x568 (or x4 x1933)))
(assert (= (and x975 x2342) x701))
(assert (= x1113 (x998 (x916 x1113))))
(assert (= (x779 97199519776808029778168953285215024309695167179541945341261303444449322336256) (x916 97199519776808029778168953285215024309695167179541945341261303444449322336256)))
(assert (= (and x215 x1340) x1564))
(assert (x2007 x2456))
(assert (=> (>= 10000 x38) (= (x916 x38) (x779 x38))))
(assert (= x2414 x1338))
(assert (= (=> (and (= (x2482 x1044 248) x2124) (= (< 0 x2124) x750) (< 0 x932) (= (x1832 x1052) x1044) (= x932 (x1832 x2161))) (and (=> x750 x101) (=> (and (= (x779 0) x131) (not x750)) x2259))) x613))
(assert (x669 x1836))
(assert (x2007 x1430))
(assert (x877 65536))
(assert (x2007 x963))
(assert (x2231 (x2263 (x2260 (+ 160 x1866)))))
(assert (x2007 x1942))
(assert (x885 (x1137 2 x582)))
(assert (x2007 x2291))
(assert (= (=> (and (= (> x111 x2388) x928) (or (and (and (= x1157 (ite x2146 0 x1205)) (= x858 0) (= x2146 (= 65536 x690)) (= (x1595 65536 x2069) x690)) x928) (and (and (= x2069 x858) (= x1205 x1157)) (not x928)))) x197) x436))
(assert (x885 x99))
(assert (x2007 x2468))
(assert (= (=> (and (= x2191 (x1595 131072 x1836)) (= (= x2191 131072) x1686) (= x268 (x1464 x2329)) (= (x115 x1851 (x779 1) 0) x2329) (<= x268 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x1236 0)) (<= 0 x268) (= x1836 (x2482 x268 160))) (and (=> (and (and (= x2008 x2161) (= (x779 0) x1637)) (not x1686)) x1542) (=> (and (and (< 0 x1426) (= (x2183 (* x2452 32)) x2101) (= x521 (x1266 x2314 2)) (= x2452 (x1266 x773 32)) (= (= 0 x1968) x1340) (= x773 (x2260 (+ x1968 31))) (= (x2260 (+ x2161 x2358)) x738) (= (x2183 (- x1385 (ite x784 1 0))) x1426) (= x784 (< x1968 32)) (= (x2260 (+ x2101 32)) x2358) (= (x1595 1 x2314) x1385) (= x1578 (x115 x1851 (x779 5) 0)) (= (x658 x1578) x2314) (= (x2260 (+ 32 x2161)) x1052) (= x1968 (ite (> x1385 0) x521 (x1595 127 x521)))) x1686) (and (=> x1340 x613) (=> (and (= x118 (> x1968 31)) (not x1340)) (and (=> (and (not x118) (and (= (x658 x1578) x2461) (= x1705 (x2183 (* x290 256))) (= (x1266 x2461 256) x290))) x613) (=> (and x118 (and (= (x2260 (+ x1052 x1968)) x1540) (= x1716 (x295 x600 1)) (= x807 (x1739 x600)) (= (x2260 (+ x1052 32)) x1253) (= x2345 (> x1540 x1253)) (= x600 (x1365 x1578 0)))) (and (=> x2345 x469) (=> (not x2345) x2498))))))))) x347))
(assert (x747 x2223))
(assert (x2007 x1078))
(assert (x747 x1966))
(assert (x2007 x554))
(assert (= (and x1873 x2126) x638))
(assert (= (x998 (x916 (x232 (x2260 (+ x2366 128))))) (x232 (x2260 (+ 128 x2366)))))
(assert (= (x2183 (* x2296 6277101735386680763835789423207666416102355444464034512896)) (x1664 x2296 192)))
(assert (x2007 x1351))
(assert (= x137 (and x1403 x536)))
(assert (= (x2027 (x2260 (+ 64 x182))) (x998 (x916 (x2027 (x2260 (+ x182 64)))))))
(assert (x2149 x2303))
(assert (= x454 (and x733 (not x1922))))
(assert (x747 x441))
(assert (= (and x198 (not x2319)) x1658))
(assert (and (=> (< 0 128) (= x487 (+ (x255 x487 128) (* (x1266 x487 128) 128)))) (x1129 x487 128) (x270 x487 128) (x48 x487 128)))
(assert (x2007 x2278))
(assert (and (=> (< 0 32) (= x1458 (+ (x255 x1458 32) (* (x1266 x1458 32) 32)))) (x1129 x1458 32) (x270 x1458 32) (x48 x1458 32)))
(assert (x1750 x1581))
(assert (=> (<= (x660 (x2260 (+ 32 x859))) 10000) (= (x916 (x660 (x2260 (+ 32 x859)))) (x779 (x660 (x2260 (+ 32 x859)))))))
(assert (x2007 x139))
(assert (= (x565 (x2260 (+ x2157 128))) 0))
(assert (= x1123 (and x2386 (not x2320))))
(assert (= x257 x309))
(assert (x747 x903))
(assert (= x1359 (and x1652 x2178)))
(assert (= (x916 (x998 x2382)) x2382))
(assert (x747 x1599))
(assert (= (x998 (x916 x534)) x534))
(assert (x2007 x401))
(assert (= x2427 (x998 (x916 x2427))))
(assert (= x406 (or x1527 x1781)))
(assert (x2007 x1589))
(assert (= x1107 (=> (= (= 0 x344) x348) (and (=> (and (= x344 x400) x348) x976) (=> (and (and (and (= (x1595 131072 x1297) x1270) (= (= 0 x1270) x1982)) (or (and (and (= x575 (ite x321 1 0)) (= (> x100 x671) x708) (= (not x708) x321) (= x671 (x287 (- x1577 7776000))) (not (> x671 18446744073709551615))) (not x1982)) (and (= (ite x1982 1 0) x575) x1982))) (not x348)) x392)))))
(assert (= (x1664 x2328 160) (x2183 (* x2328 1461501637330902918203684832716283019655932542976))))
(assert (x2007 x625))
(assert (= (x1433 320) (x998 (x916 (x1433 320)))))
(assert (and (x1764 x781 2) (x2501 x781 2) (= (* 2 (x1266 x781 2)) (- x781 (x1595 1 x781))) (=> (and (< 0 x781) (> 2 0)) (and (<= (* 2 (x1266 x781 2)) x781) (> (* 2 (x1266 x781 2)) (- x781 2)))) (x1404 x781 2) (x2165 x781 2)))
(assert (x2007 x954))
(assert (x2007 x341))
(assert (x2231 (x660 x859)))
(assert (and (=> (< 0 32) (= x1677 (+ (x255 x1677 32) (* (x1266 x1677 32) 32)))) (x1129 x1677 32) (x270 x1677 32) (x48 x1677 32)))
(assert (x747 4))
(assert (= (x1266 x793 1461501637330902918203684832716283019655932542976) (x2482 x793 160)))
(assert (x2007 x19))
(assert (= (and x722 x1906) x644))
(assert (x747 x1782))
(assert (x2250 x645))
(assert (= x179 (and x2431 x8)))
(assert (= x1627 (and x1621 x485)))
(assert (x2007 x1610))
(assert (= (and (not x1891) x1246) x1350))
(assert (and (=> (< 0 128) (= x1039 (+ (x255 x1039 128) (* (x1266 x1039 128) 128)))) (x1129 x1039 128) (x270 x1039 128) (x48 x1039 128)))
(assert (x2231 x2182))
(assert (= (x2482 x1395 248) (x1266 x1395 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x2007 x930))
(assert (x2007 x1623))
(assert (x1330 x1098))
(assert (x15 x521))
(assert (x2007 x1089))
(assert (x2007 x1436))
(assert (= (and x1030 x1211) x94))
(assert (= (x998 (x916 x1531)) x1531))
(assert (x1112 x1782))
(assert (= (x565 (x2260 (+ x743 64))) 0))
(assert (x747 115792089237316195423570985008687907853269984665640564039457584007908834738175))
(assert (x747 x1161))
(assert (x2007 x2496))
(assert (= (x2183 (* x2077 6277101735386680763835789423207666416102355444464034512896)) (x1664 x2077 192)))
(assert (=> (>= 10000 (x1202 x2489)) (= (x779 (x1202 x2489)) (x916 (x1202 x2489)))))
(assert (x2007 x2257))
(assert (x811 x501))
(assert (x747 x1094))
(assert (= (x565 (x2260 (+ x402 160))) 0))
(assert (x877 x833))
(assert (=> (>= 10000 (x660 (x2260 (+ 64 x859)))) (= (x916 (x660 (x2260 (+ 64 x859)))) (x779 (x660 (x2260 (+ x859 64)))))))
(assert (x2007 x1343))
(assert (x877 x2106))
(assert (= (+ (x998 x113) 1) (x998 (x295 x113 1))))
(assert (=> (<= (x1202 (x2260 (+ 192 x2489))) 10000) (= (x916 (x1202 (x2260 (+ 192 x2489)))) (x779 (x1202 (x2260 (+ x2489 192)))))))
(assert (x747 x487))
(assert (= x2339 (=> (and (= x854 (x1595 1461501637330902918203684832716283019655932542975 x1911)) (= (= x854 0) x1830)) (and (=> (and (and (= (x2482 x793 160) x668) (= x793 (x1464 x947)) (= (= 131072 x799) x1628) (>= x793 0) (= x947 (x115 x1851 (x779 1) 0)) (<= x793 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1595 131072 x668) x799)) (not x1830)) (and (=> (and x1628 (and (= x1039 (x1266 x1880 2)) (= x1397 (x2183 (* x2499 32))) (= (x1595 1 x1880) x284) (= (< x2299 32) x1204) (= x870 (x2183 (- x284 (ite x1204 1 0)))) (= x2193 (x2260 (+ x2084 32))) (= x116 (= x2299 0)) (= x1880 (x658 x512)) (= x2499 (x1266 x1612 32)) (= x805 (x2260 (+ 32 x1397))) (= (x2260 (+ x805 x2084)) x1292) (= x512 (x115 x1851 (x779 5) 0)) (< 0 x870) (= (ite (> x284 0) x1039 (x1595 127 x1039)) x2299) (= (x2260 (+ 31 x2299)) x1612))) (and (=> (and (= (> x2299 31) x985) (not x116)) (and (=> (and x985 (and (= x1430 (x2260 (+ x2299 x2193))) (= (x1739 x678) x413) (= (> x1430 x1324) x639) (= x1886 (x295 x678 1)) (= x1324 (x2260 (+ 32 x2193))) (= (x1365 x512 0) x678))) (and (=> (not x639) x628) (=> x639 x245))) (=> (and (not x985) (and (= (x1266 x1041 256) x1756) (= (x2183 (* x1756 256)) x881) (= x1041 (x658 x512)))) x421))) (=> x116 x421))) (=> (and (not x1628) (and (= x1153 x2084) (= x468 (x779 0)))) x1659))) (=> (and x1830 (= x2084 x1197)) x264)))))
(assert (= x1447 (and (not x1295) x1893)))
(assert (x747 x475))
(assert (= x1277 (and (not x348) x2494)))
(assert (x2007 x12))
(assert (= (=> (and (= x34 (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2218)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1174) (and (= true (<= x1174 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1174 32)))) (not (= x1363 0)) (= x903 (x862 x91)) (= (x1595 18446744073709551615 x903) x2430) (= x953 x1450) (= x908 x1882) (not (< 18446744073709551615 x1882)) (= (x2260 (+ 31 x1174)) x2218) (= x1882 (x2260 (+ 7776000 x2430))) (= x953 (x2260 (+ x91 x34)))) x1023) x1479))
(assert (x2007 x1580))
(assert (=> (>= 10000 x2427) (= (x779 x2427) (x916 x2427))))
(assert (x2007 x1475))
(assert (x885 x1082))
(assert (=> (<= (x1202 (x2260 (+ x2489 32))) 10000) (= (x916 (x1202 (x2260 (+ x2489 32)))) (x779 (x1202 (x2260 (+ x2489 32)))))))
(assert (= (x565 (x2260 (+ x537 192))) 0))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1458 (+ (x255 x1458 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1458 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1458 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1458 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1458 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (or x519 x852) x2409))
(assert (= (or x279 x2505) x2142))
(assert (x2231 x836))
(assert (x2231 (x1092 x1060)))
(assert (x1061 x995 x1647))
(assert (x885 x1623))
(assert (x2007 x524))
(assert (x2007 x739))
(assert (=> (<= (x2032 (x2260 (+ 32 x2157))) 10000) (= (x916 (x2032 (x2260 (+ 32 x2157)))) (x779 (x2032 (x2260 (+ x2157 32)))))))
(assert (= (x1266 x1128 6277101735386680763835789423207666416102355444464034512896) (x2482 x1128 192)))
(assert (= x1780 (and x1508 (not x611))))
(assert (= (=> (and (= x652 x969) (= x2208 x2382) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ 1 x1580)))) x194) x1601))
(assert (x747 x2341))
(assert (x2231 (x232 (x2260 (+ x2366 96)))))
(assert (x885 x1612))
(assert (x2007 x1592))
(assert (x2007 x503))
(assert (x2007 x2420))
(assert (x2007 x937))
(assert (x2007 x2303))
(assert (x2007 x858))
(assert (= (and (not x2413) x846) x1401))
(assert (x2007 x143))
(assert (x2007 x335))
(assert (and (x1764 x1337 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2501 x1337 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1337 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1337 (x1595 452312848583266388373324160190187140051835877600158453279131187530910662655 x1337))) (=> (and (< 0 x1337) (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0)) (and (<= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1337 452312848583266388373324160190187140051835877600158453279131187530910662656)) x1337) (> (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1337 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1337 452312848583266388373324160190187140051835877600158453279131187530910662656)))) (x1404 x1337 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2165 x1337 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x747 x1801))
(assert (=> (<= (x506 (x2260 (+ 96 x381))) 10000) (= (x916 (x506 (x2260 (+ x381 96)))) (x779 (x506 (x2260 (+ 96 x381)))))))
(assert (= x2037 (and (not x1312) x576)))
(assert (= x1059 (or x772 x95)))
(assert (=> (>= 10000 (x1433 288)) (= (x779 (x1433 288)) (x916 (x1433 288)))))
(assert (x885 x1880))
(assert (= x1903 (=> (and (= x949 x201) (= x263 x1625) (not (>= (+ 1 x992) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x824)))
(assert (x2007 x964))
(assert (x2007 x2116))
(assert (x2231 (x2027 (x2260 (+ 192 x182)))))
(assert (x2231 x38))
(assert (x2007 x932))
(assert (=> (>= 10000 (x2263 (x2260 (+ 192 x1866)))) (= (x916 (x2263 (x2260 (+ 192 x1866)))) (x779 (x2263 (x2260 (+ 192 x1866)))))))
(assert (and (=> (< 0 65536) (= x696 (+ (x255 x696 65536) (* (x1266 x696 65536) 65536)))) (x1129 x696 65536) (x270 x696 65536) (x48 x696 65536)))
(assert (= x863 (and (not x357) x979)))
(assert (x885 x1820))
(assert (x2007 x616))
(assert (= x2316 (and x2178 (not x1652))))
(assert (= (and x2254 (not x1841)) x687))
(assert (x2007 x1930))
(assert (= x818 (and (not x2099) x685)))
(assert (= (or x2422 x943 x2072 x2167 x883) x1012))
(assert (and (x1764 x135 256) (x2501 x135 256) (= (* 256 (x1266 x135 256)) (- x135 (x1595 255 x135))) (=> (and (< 0 x135) (> 256 0)) (and (<= (* 256 (x1266 x135 256)) x135) (> (* 256 (x1266 x135 256)) (- x135 256)))) (x1404 x135 256) (x2165 x135 256)))
(assert (= (x998 (x916 (x634 (x2260 (+ x1718 64))))) (x634 (x2260 (+ x1718 64)))))
(assert (x2007 x1754))
(assert (=> (>= 10000 (x634 (x2260 (+ x1718 160)))) (= (x916 (x634 (x2260 (+ 160 x1718)))) (x779 (x634 (x2260 (+ 160 x1718)))))))
(assert (x2007 x53))
(assert (and (x1764 x2115 1461501637330902918203684832716283019655932542976) (x2501 x2115 1461501637330902918203684832716283019655932542976) (= (* 1461501637330902918203684832716283019655932542976 (x1266 x2115 1461501637330902918203684832716283019655932542976)) (- x2115 (x1595 1461501637330902918203684832716283019655932542975 x2115))) (=> (and (< 0 x2115) (> 1461501637330902918203684832716283019655932542976 0)) (and (<= (* 1461501637330902918203684832716283019655932542976 (x1266 x2115 1461501637330902918203684832716283019655932542976)) x2115) (> (* 1461501637330902918203684832716283019655932542976 (x1266 x2115 1461501637330902918203684832716283019655932542976)) (- x2115 1461501637330902918203684832716283019655932542976)))) (x1404 x2115 1461501637330902918203684832716283019655932542976) (x2165 x2115 1461501637330902918203684832716283019655932542976)))
(assert (x885 x1352))
(assert (= x1243 (and x1572 (not x1991))))
(assert (x2007 x1070))
(assert (x2007 x1581))
(assert (x2007 x1381))
(assert (= (x916 (x998 x890)) x890))
(assert (x2007 x548))
(assert (= (x565 (x2260 (+ x1718 160))) 0))
(assert (and (=> (< 0 128) (= x782 (+ (x255 x782 128) (* (x1266 x782 128) 128)))) (x1129 x782 128) (x270 x782 128) (x48 x782 128)))
(assert (x2007 x777))
(assert (x2007 x62))
(assert (= (=> (and (= x583 x1537) (= x1769 x2067) (not (>= (+ x2285 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x609) x1262))
(assert (= (x916 616673092) (x779 616673092)))
(assert (x2007 x1980))
(assert (= (and (not x331) x1920) x1335))
(assert (x2007 x1126))
(assert (x2007 x1509))
(assert (= (x2183 (* 1461501637330902918203684832716283019655932542976 x1231)) (x1664 x1231 160)))
(assert (x2149 x1096))
(assert (x1791 x1902 x2426))
(assert (and (=> (< 0 1461501637330902918203684832716283019655932542976) (= x1743 (+ (x255 x1743 1461501637330902918203684832716283019655932542976) (* (x1266 x1743 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x1129 x1743 1461501637330902918203684832716283019655932542976) (x270 x1743 1461501637330902918203684832716283019655932542976) (x48 x1743 1461501637330902918203684832716283019655932542976)))
(assert (=> (>= 10000 x330) (= (x779 x330) (x916 x330))))
(assert (x2007 x1118))
(assert (x2007 x921))
(assert (x2007 x572))
(assert (=> (>= 10000 (x2032 x2157)) (= (x916 (x2032 x2157)) (x779 (x2032 x2157)))))
(assert (= (x2482 x439 192) (x1266 x439 6277101735386680763835789423207666416102355444464034512896)))
(assert (= x1288 (or x1015 x1350)))
(assert (= x760 (=> (and (= (x2260 (+ 32 x2079)) x768) (= x274 (x1739 x1455)) (= x679 (not (< x768 x1765)))) (and x2068 x679))))
(assert (x2007 x2358))
(assert (x2007 x995))
(assert (= x1633 (and (not x174) x1534)))
(assert (x2007 x171))
(assert (=> (<= (x1714 (x2260 (+ x743 128))) 10000) (= (x916 (x1714 (x2260 (+ 128 x743)))) (x779 (x1714 (x2260 (+ 128 x743)))))))
(assert (and (=> (< 0 32) (= x712 (+ (x255 x712 32) (* (x1266 x712 32) 32)))) (x1129 x712 32) (x270 x712 32) (x48 x712 32)))
(assert (x2007 x2186))
(assert (= x288 (=> (and (= (x2260 (+ x2493 7776000)) x1489) (= (x2260 (+ x969 x1547)) x968) (= x707 (x1516 x969)) (= x1598 x968) (not (< 18446744073709551615 x1489)) (= (x1595 18446744073709551615 x707) x2493) (not (= 0 x1509)) (= x2367 x1489) (not (or (and (< x706 32) (= (<= x706 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x706))) (= (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2340) x1547) (= (x2260 (+ 31 x706)) x2340)) x2464)))
(assert (x2007 x10))
(assert (x747 1461501637330902918203684832716283019655932542975))
(assert (= x1896 (and x35 x479)))
(assert (x2007 x1915))
(assert (x2007 x163))
(assert (= (x565 (x2260 (+ x402 32))) 0))
(assert (= x247 (and x1276 x621)))
(assert (and (x1778 x2328 1461501637330902918203684832716283019655932542976) (x1905 x2328 1461501637330902918203684832716283019655932542976) (= (x482 x2328 1461501637330902918203684832716283019655932542976) (* 1461501637330902918203684832716283019655932542976 x2328)) (x509 x2328 1461501637330902918203684832716283019655932542976) (x699 x2328 1461501637330902918203684832716283019655932542976) (x2495 x2328 1461501637330902918203684832716283019655932542976) (and (= (- (* (- 115792089237316195423570985007226406215939081747436879206741300988257197096960) x2328) (- 13407807929942597099574024998036615799469062179260703058867172057525692431234690984665004206576655545133536153655237612981186769890963219668027669280194560)) (x482 (- x2328 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089237316195423570985007226406215939081747436879206741300988257197096960))) (= (x482 (- x2328 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1461501637330902918203684832716283019655932542976) (- (* 1461501637330902918203684832716283019655932542976 x2328) 169230328010303641331690318856389386196071598838855992136870091590247882556495704531248437872567112920983350278405979725889536)) (= (x482 x2328 (- 115792089237316195423570985007226406215939081747436879206741300988257197096960)) (* (- 115792089237316195423570985007226406215939081747436879206741300988257197096960) x2328)))))
(assert (x2007 x684))
(assert (x2231 (x2283 224)))
(assert (x2231 x2360))
(assert (= x1375 (=> (and (= x1831 (x2451 128)) (= (x2467 128) x1808) (= (x1664 x1116 248) x2309) (= (x2260 (+ x403 32)) x939) (= x1621 (< 0 x1831)) (= (x2260 (+ 1 x939)) x1897) (= x1116 (x1595 255 x1808))) (and (=> (and (and (= x510 (x2451 160)) (= x950 x1897) (= x1671 (< 32 x1831))) x1621) (and (=> (not x1671) x1948) (=> (and x1671 (and (= (x382 192) x1159) (= (< 64 x1831) x2431) (= x918 (x2260 (+ x1897 32))))) (and (=> (not x2431) x1948) (=> (and (and (= x1648 (> x1831 96)) (= x2371 (x1617 224)) (= x158 (x2260 (+ 64 x1897)))) x2431) (and (=> (not x1648) x1948) (=> x1648 x1398))))))) (=> (not x1621) x1948)))))
(assert (=> (<= (x1074 (x2260 (+ x402 128))) 10000) (= (x779 (x1074 (x2260 (+ 128 x402)))) (x916 (x1074 (x2260 (+ x402 128)))))))
(assert (and (=> (< 0 2) (= x335 (+ (x255 x335 2) (* (x1266 x335 2) 2)))) (x1129 x335 2) (x270 x335 2) (x48 x335 2)))
(assert (x2007 x2019))
(assert (= x2414 (=> (and (= x1603 (x232 x405)) (> x1603 0) (= x992 (x2482 x256 248)) (= (x232 x999) x256) (= (> x992 0) x496)) (and (=> (and (= (x779 0) x949) (not x496)) x1903) (=> x496 x1708)))))
(assert (x2007 x1347))
(assert (x1791 x901 x475))
(assert (and (x1778 256 x2267) (x1905 256 x2267) (= (x482 256 x2267) (* x2267 256)) (x509 256 x2267) (x699 256 x2267) (x2495 256 x2267) (and (= (- (* (- x2267 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* (- x2267 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x2267 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x2267) (- (* x2267 256) (* x2267 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 256 (- x2267 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2267 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256)))))
(assert (x2007 x730))
(assert (x2007 x1499))
(assert (= (x1266 x488 6277101735386680763835789423207666416102355444464034512896) (x2482 x488 192)))
(assert (x747 x1424))
(assert (x2231 (x1832 (x2260 (+ 32 x537)))))
(assert (x877 x1797))
(assert (and (x1778 32 x376) (x1905 32 x376) (= (x482 32 x376) (* x376 32)) (x509 32 x376) (x699 32 x376) (x2495 32 x376) (and (= (- (* (- x376 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x376 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x376 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x376) (- (* x376 32) (* x376 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 32 (- x376 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x376 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)))))
(assert (= (+ (x998 x2105) 1) (x998 (x295 x2105 1))))
(assert (x747 x931))
(assert (= x502 (x916 (x998 x502))))
(assert (x2007 x1943))
(assert (and (x1778 x1116 452312848583266388373324160190187140051835877600158453279131187530910662656) (x1905 x1116 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (x482 x1116 452312848583266388373324160190187140051835877600158453279131187530910662656) (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x1116)) (x509 x1116 452312848583266388373324160190187140051835877600158453279131187530910662656) (x699 x1116 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2495 x1116 452312848583266388373324160190187140051835877600158453279131187530910662656) (and (= (- (* (- 115339776388732929035197660848497720713218148788040405586178452820382218977280) x1116) (- 13355433680216258829653813963056604541043899547855704341091828781832225889331072183923741976689688961175617671240445089717606406707212403657580392564654080)) (x482 (- x1116 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115339776388732929035197660848497720713218148788040405586178452820382218977280))) (= (x482 (- x1116 115792089237316195423570985008687907853269984665640564039457584007913129639936) 452312848583266388373324160190187140051835877600158453279131187530910662656) (- (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x1116) 52374249726338269920211035149241586435466272736689036631732661889538140742474792878132321477214466514414186946040961136147476104734166288853256441430016)) (= (x482 x1116 (- 115339776388732929035197660848497720713218148788040405586178452820382218977280)) (* (- 115339776388732929035197660848497720713218148788040405586178452820382218977280) x1116)))))
(assert (x2007 x2198))
(assert (= (or x17 x2142) x846))
(assert (x1954 x1020))
(assert (x747 x1581))
(assert (=> (<= x534 10000) (= (x779 x534) (x916 x534))))
(assert (=> (<= x481 10000) (= (x916 x481) (x779 x481))))
(assert (= (x1266 x1415 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2482 x1415 248)))
(assert (and (x1764 x793 1461501637330902918203684832716283019655932542976) (x2501 x793 1461501637330902918203684832716283019655932542976) (= (* 1461501637330902918203684832716283019655932542976 (x1266 x793 1461501637330902918203684832716283019655932542976)) (- x793 (x1595 1461501637330902918203684832716283019655932542975 x793))) (=> (and (< 0 x793) (> 1461501637330902918203684832716283019655932542976 0)) (and (<= (* 1461501637330902918203684832716283019655932542976 (x1266 x793 1461501637330902918203684832716283019655932542976)) x793) (> (* 1461501637330902918203684832716283019655932542976 (x1266 x793 1461501637330902918203684832716283019655932542976)) (- x793 1461501637330902918203684832716283019655932542976)))) (x1404 x793 1461501637330902918203684832716283019655932542976) (x2165 x793 1461501637330902918203684832716283019655932542976)))
(assert (= (=> (and (= x283 (x320 x2480)) (= x1503 x2296) (not (or (> x2352 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x2352) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2352) true)))) (not (< 18446744073709551615 x1503)) (= x1503 (x2260 (+ 7776000 x2024))) (not (= x81 0)) (= x2024 (x1595 18446744073709551615 x283))) x1946) x2160))
(assert (and (x1778 32 x346) (x1905 32 x346) (= (x482 32 x346) (* x346 32)) (x509 32 x346) (x699 32 x346) (x2495 32 x346) (and (= (- (* (- x346 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x346 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x346 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x346) (- (* x346 32) (* x346 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 32 (- x346 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x346 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)))))
(assert (x2007 x2224))
(assert (x2007 x1546))
(assert (x2007 x1519))
(assert (x747 x944))
(assert (= (or (and x1453 (not x1410)) x2131) x249))
(assert (x2007 x899))
(assert (x2007 x935))
(assert (= (+ (x998 x1759) 1) (x998 (x295 x1759 1))))
(assert (x2007 x1634))
(assert (x2007 x1361))
(assert (and (=> (< 0 18446744073709551616) (= x944 (+ (x255 x944 18446744073709551616) (* (x1266 x944 18446744073709551616) 18446744073709551616)))) (x1129 x944 18446744073709551616) (x270 x944 18446744073709551616) (x48 x944 18446744073709551616)))
(assert (= 0 (x565 (x2260 (+ x182 128)))))
(assert (x2007 x111))
(assert (x2007 x1978))
(assert (x855 x1966))
(assert (x2007 x1797))
(assert (= (and x674 x2293) x104))
(assert (x2007 x2401))
(assert (= x804 (x998 (x916 x804))))
(assert (x2007 x423))
(assert (x2007 x1022))
(assert (x885 x2449))
(assert (x2007 x873))
(assert (x2007 x42))
(assert (x2231 x2041))
(assert (and (=> (< 0 2) (= x1623 (+ (x255 x1623 2) (* (x1266 x1623 2) 2)))) (x1129 x1623 2) (x270 x1623 2) (x48 x1623 2)))
(assert (= (and x1971 x300) x474))
(assert (= x602 x922))
(assert (x2007 x228))
(assert (x2007 x1622))
(assert (= x59 (x916 (x998 x59))))
(assert (= (=> (and (= x771 (x2183 (* 2 x1677))) (= x207 (x2260 (+ x771 1)))) x277) x1421))
(assert (x811 x803))
(assert (= (x565 (x2260 (+ 96 x182))) 0))
(assert (= (x2263 (x2260 (+ 96 x1866))) (x998 (x916 (x2263 (x2260 (+ x1866 96)))))))
(assert (= x527 (or x359 x2090)))
(assert (x2007 x39))
(assert (= (and x1030 (not x1211)) x541))
(assert (= x372 (or x1090 x1162)))
(assert (x2007 x346))
(assert (=> (<= (x2027 (x2260 (+ 128 x182))) 10000) (= (x779 (x2027 (x2260 (+ 128 x182)))) (x916 (x2027 (x2260 (+ x182 128)))))))
(assert (= (x565 x1418) 0))
(assert (x2007 x475))
(assert (x2007 x1956))
(assert (=> (>= 10000 (x2283 256)) (= (x779 (x2283 256)) (x916 (x2283 256)))))
(assert (x2007 x1907))
(assert (= x301 (=> (= (= (x779 0) x1283) x1227) (and (=> (and (= (x2482 x1668 192) x2296) x1227) x1946) (=> (and (not x1227) (and (or (and x1798 (and (> 4294967296 x2352) (= 1 x81))) (and (not x1798) (= x81 x1757))) (and (= (x2260 (+ 4 x2480)) x463) (= (> x1757 0) x1798)))) x2160)))))
(assert (x1954 x470))
(assert (= x362 (=> (and (= x91 x151) (not (>= (+ x380 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x605 x967)) x1186)))
(assert (= (x565 x1715) 0))
(assert (x747 65535))
(assert (and (=> (< 0 128) (= x127 (+ (x255 x127 128) (* (x1266 x127 128) 128)))) (x1129 x127 128) (x270 x127 128) (x48 x127 128)))
(assert (=> (>= 10000 (x2032 (x2260 (+ 64 x2157)))) (= (x779 (x2032 (x2260 (+ x2157 64)))) (x916 (x2032 (x2260 (+ x2157 64)))))))
(assert (= (x998 (x916 (x634 (x2260 (+ 160 x1718))))) (x634 (x2260 (+ x1718 160)))))
(assert (x2007 x1166))
(assert (= (and x1804 (not x308)) x841))
(assert (= 0 (x565 (x2260 (+ 64 x2366)))))
(assert (x2007 x96))
(assert (x2007 x297))
(assert (x1954 x763))
(assert (= (x1664 x216 160) (x2183 (* 1461501637330902918203684832716283019655932542976 x216))))
(assert (= (x2482 x828 160) (x1266 x828 1461501637330902918203684832716283019655932542976)))
(assert (x2007 x763))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x645 (+ (x255 x645 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x645 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x645 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x645 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x645 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (and (x1764 x792 32) (x2501 x792 32) (= (* 32 (x1266 x792 32)) (- x792 (x1595 31 x792))) (=> (and (< 0 x792) (> 32 0)) (and (<= (* 32 (x1266 x792 32)) x792) (> (* 32 (x1266 x792 32)) (- x792 32)))) (x1404 x792 32) (x2165 x792 32)))
(assert (and (x1764 x1581 2) (x2501 x1581 2) (= (* 2 (x1266 x1581 2)) (- x1581 (x1595 1 x1581))) (=> (and (< 0 x1581) (> 2 0)) (and (<= (* 2 (x1266 x1581 2)) x1581) (> (* 2 (x1266 x1581 2)) (- x1581 2)))) (x1404 x1581 2) (x2165 x1581 2)))
(assert (= (x916 18446744073709551615) (x779 18446744073709551615)))
(assert (= x80 (and x1392 x775)))
(assert (x2007 x912))
(assert (= (and x299 (not x1642)) x2010))
(assert (= x623 (and x84 x2112)))
(assert (= x1264 (or x1465 x983)))
(assert (= (=> (and (= (x2260 (+ x1342 x505)) x843) (= x542 (x2239 x2161)) (= (> x542 0) x2293)) (and (=> (and (and (= x282 (> x542 32)) (= x1715 x986) (= x843 x1114) (= (x2239 x1715) x1670)) x2293) (and (=> (and (and (= x2096 (x2486 x966)) (= x2018 (x2260 (+ 32 x843))) (= x2200 (< 64 x542)) (= (x2260 (+ 32 x986)) x966)) x282) (and (=> (and x2200 (and (= x1418 (x2260 (+ 64 x986))) (= x343 (x2260 (+ 64 x843))) (= x834 (x5 x1418)) (= (< 96 x542) x1167))) (and (=> x1167 x955) (=> (not x1167) x1091))) (=> (not x2200) x1091))) (=> (not x282) x1091))) (=> (not x2293) x1091))) x1842))
(assert (x2007 x993))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1310 (+ (x255 x1310 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1310 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1310 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1310 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1310 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (and (=> (< 0 1461501637330902918203684832716283019655932542976) (= x1484 (+ (x255 x1484 1461501637330902918203684832716283019655932542976) (* (x1266 x1484 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x1129 x1484 1461501637330902918203684832716283019655932542976) (x270 x1484 1461501637330902918203684832716283019655932542976) (x48 x1484 1461501637330902918203684832716283019655932542976)))
(assert (= (and x1410 x1453) x2131))
(assert (= x1972 (or x1877 x2311)))
(assert (x1330 x2359))
(assert (x2007 x915))
(assert (= x2297 (and x676 (not x900))))
(assert (x2007 x942))
(assert (x2007 x1396))
(assert (x877 x1554))
(assert (= (and x1242 x1721) x973))
(assert (and (=> (< 0 2) (= x2223 (+ (x255 x2223 2) (* (x1266 x2223 2) 2)))) (x1129 x2223 2) (x270 x2223 2) (x48 x2223 2)))
(assert (x2007 x655))
(assert (x2231 (x660 (x2260 (+ 32 x859)))))
(assert (x1330 x1867))
(assert (= x2014 (=> (and (= (x2260 (+ x993 32)) x2082) (= x2270 (not (> x1589 x2082))) (= x1100 (x1237 x206))) (and x2270 x1037))))
(assert (= (and x1890 x1416) x1941))
(assert (x2007 x1806))
(assert (= (or x1393 x1477) x196))
(assert (x2007 x710))
(assert (x2007 x736))
(assert (= 0 (x565 (x2260 (+ x2157 64)))))
(assert (= (and x1463 x711) x85))
(assert (= x590 (or x841 x2020)))
(assert (= (or x259 x356) x1872))
(assert (x2007 x997))
(assert (= (x998 (x916 (x2032 (x2260 (+ 160 x2157))))) (x2032 (x2260 (+ 160 x2157)))))
(assert (= x264 (=> (and (= (x115 x1851 (x779 1) 0) x765) (= (x1595 131072 x2069) x1054) (= (= x1054 131072) x666) (<= x1205 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1205 (x1945 x765)) (<= 0 x1205) (= x2069 (x2482 x1205 160))) (and (=> (and (and (= (x1595 1 x1599) x1126) (= (x2260 (+ 31 x2003)) x2210) (= x2003 (ite (< 0 x1126) x441 (x1595 127 x441))) (= (x1266 x1599 2) x441) (= (x115 x1851 (x779 5) 0) x1904) (= x1599 (x658 x1904)) (= x715 (x2260 (+ 32 x1197))) (= x1861 (x2260 (+ x1197 x837))) (= x2383 (= 0 x2003)) (= x1131 (x2183 (* x1587 32))) (< 0 x1722) (= x837 (x2260 (+ x1131 32))) (= (x2183 (- x1126 (ite x399 1 0))) x1722) (= (< x2003 32) x399) (= (x1266 x2210 32) x1587)) x666) (and (=> (and (= x68 (< 31 x2003)) (not x2383)) (and (=> (and x68 (and (= x2083 (> x718 x1943)) (= (x2260 (+ x715 32)) x1943) (= x125 (x295 x1425 1)) (= (x1739 x1425) x1917) (= x1425 (x1365 x1904 0)) (= x718 (x2260 (+ x715 x2003))))) (and (=> (not x2083) x602) (=> x2083 x2170))) (=> (and (and (= x1235 (x2183 (* 256 x2490))) (= x2490 (x1266 x135 256)) (= (x658 x1904) x135)) (not x68)) x922))) (=> x2383 x922))) (=> (and (and (= x1197 x1740) (= (x779 0) x407)) (not x666)) x186)))))
(assert (x2007 x333))
(assert (x2007 x1882))
(assert (x877 1461501637330902918203684832716283019655932542976))
(assert (= 0 (x565 x1332)))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x752 (+ (x255 x752 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x752 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x752 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x752 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x752 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x998 (x779 131072)) 131072))
(assert (= x613 x2498))
(assert (x747 x1713))
(assert (x1750 x781))
(assert (and (x1764 x1117 256) (x2501 x1117 256) (= (* 256 (x1266 x1117 256)) (- x1117 (x1595 255 x1117))) (=> (and (< 0 x1117) (> 256 0)) (and (<= (* 256 (x1266 x1117 256)) x1117) (> (* 256 (x1266 x1117 256)) (- x1117 256)))) (x1404 x1117 256) (x2165 x1117 256)))
(assert (and (x1778 256 x2490) (x1905 256 x2490) (= (x482 256 x2490) (* x2490 256)) (x509 256 x2490) (x699 256 x2490) (x2495 256 x2490) (and (= (- (* (- x2490 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* (- x2490 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x2490 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x2490) (- (* x2490 256) (* x2490 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 256 (- x2490 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2490 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256)))))
(assert (and (=> (< 0 128) (= x342 (+ (x255 x342 128) (* (x1266 x342 128) 128)))) (x1129 x342 128) (x270 x342 128) (x48 x342 128)))
(assert (and (=> (< 0 262144) (= x1613 (+ (x255 x1613 262144) (* (x1266 x1613 262144) 262144)))) (x1129 x1613 262144) (x270 x1613 262144) (x48 x1613 262144)))
(assert (x2007 x2213))
(assert (= x2091 (and x2034 x639)))
(assert (= (and x2052 (not x1835)) x2167))
(assert (= (x2482 x268 192) (x1266 x268 6277101735386680763835789423207666416102355444464034512896)))
(assert (and (=> (< 0 32) (= x1411 (+ (x255 x1411 32) (* (x1266 x1411 32) 32)))) (x1129 x1411 32) (x270 x1411 32) (x48 x1411 32)))
(assert (x2250 x1695))
(assert (=> (>= 10000 (x1832 (x2260 (+ 192 x537)))) (= (x916 (x1832 (x2260 (+ x537 192)))) (x779 (x1832 (x2260 (+ x537 192)))))))
(assert (x2011 x1513))
(assert (x2007 x54))
(assert (and (=> (< 0 1461501637330902918203684832716283019655932542976) (= x1096 (+ (x255 x1096 1461501637330902918203684832716283019655932542976) (* (x1266 x1096 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x1129 x1096 1461501637330902918203684832716283019655932542976) (x270 x1096 1461501637330902918203684832716283019655932542976) (x48 x1096 1461501637330902918203684832716283019655932542976)))
(assert (= (x565 x2140) 0))
(assert (let ((x1706 (* 6277101735386680763835789423207666416102355444464034512896 x490))) (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1706 (+ (x255 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (= (or x1294 x1454) x1271))
(assert (x2231 (x2283 320)))
(assert (= (or x758 x1225) x112))
(assert (= x224 (=> (and (= (x2482 x1395 248) x380) (= x1979 (< 0 x380)) (= x1942 (x497 x1579)) (= x1395 (x497 x2035)) (> x1942 0)) (and (=> (and (= x605 (x779 0)) (not x1979)) x362) (=> x1979 x2323)))))
(assert (= x1964 (and x472 x2093)))
(assert (= (x1714 x743) (x998 (x916 (x1714 x743)))))
(assert (= (and (not x2491) x372) x1003))
(assert (x2007 x939))
(assert (= (x497 (x2260 (+ x933 128))) (x998 (x916 (x497 (x2260 (+ x933 128)))))))
(assert (= (x565 (x2260 (+ x1718 192))) 0))
(assert (x2231 x330))
(assert (x2007 x2038))
(assert (x2231 (x2283 160)))
(assert (= 0 (x565 (x2260 (+ 128 x1718)))))
(assert (x2007 x155))
(assert (x1750 x212))
(assert (x2007 x1001))
(assert (x2007 x1378))
(assert (x2007 x2179))
(assert (x15 x30))
(assert (= (x916 (x998 x1471)) x1471))
(assert (and (=> (< 0 18446744073709551616) (= x51 (+ (x255 x51 18446744073709551616) (* (x1266 x51 18446744073709551616) 18446744073709551616)))) (x1129 x51 18446744073709551616) (x270 x51 18446744073709551616) (x48 x51 18446744073709551616)))
(assert (x2007 x851))
(assert (x2007 x834))
(assert (= x2055 x309))
(assert (x877 x763))
(assert (= (and x104 (not x282)) x1251))
(assert (x2007 x1691))
(assert (= (x2482 x1044 248) (x1266 x1044 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x2007 x1975))
(assert (x885 x2478))
(assert (= (x1202 (x2260 (+ 128 x2489))) (x998 (x916 (x1202 (x2260 (+ x2489 128)))))))
(assert (x2007 x653))
(assert (x2007 x1600))
(assert (x2007 x812))
(assert (= (x998 (x916 x1390)) x1390))
(assert (=> (>= 10000 (x660 (x2260 (+ 96 x859)))) (= (x779 (x660 (x2260 (+ 96 x859)))) (x916 (x660 (x2260 (+ x859 96)))))))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1411 (+ (x255 x1411 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1411 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1411 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1411 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1411 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1056 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1137 2 x582)))
(assert (x747 x1616))
(assert (= 0 (x565 x182)))
(assert (and (x1764 x773 32) (x2501 x773 32) (= (* 32 (x1266 x773 32)) (- x773 (x1595 31 x773))) (=> (and (< 0 x773) (> 32 0)) (and (<= (* 32 (x1266 x773 32)) x773) (> (* 32 (x1266 x773 32)) (- x773 32)))) (x1404 x773 32) (x2165 x773 32)))
(assert (x877 x1737))
(assert (x842 x1677))
(assert (x2007 x2140))
(assert (x2007 x1060))
(assert (x2007 x1424))
(assert (= x545 (or x878 x462 x2152)))
(assert (x2007 x1086))
(assert (x2007 x2121))
(assert (x2007 x336))
(assert (x877 x470))
(assert (x1763 x1513))
(assert (x2231 x1166))
(assert (= (+ (x998 x1439) 1) (x998 (x295 x1439 1))))
(assert (=> (>= 10000 (x232 x2366)) (= (x779 (x232 x2366)) (x916 (x232 x2366)))))
(assert (= (x565 (x2260 (+ x1718 96))) 0))
(assert (and (=> (< 0 4) (= x1975 (+ (x255 x1975 4) (* (x1266 x1975 4) 4)))) (x1129 x1975 4) (x270 x1975 4) (x48 x1975 4)))
(assert (x2007 x682))
(assert (x2149 x2106))
(assert (x2007 x1050))
(assert (x2231 (x1433 320)))
(assert (x2007 x1849))
(assert (x2007 x624))
(assert (= x465 (=> (= x337 (= x93 (x779 0))) (and (=> (and x337 (and (= (x2482 x616 192) x1640) (= x239 x459))) x1435) (=> (and (not x337) (and (and (= x1249 (< 0 x1055)) (= x1405 (x2260 (+ 4 x239)))) (or (and (not x1249) (= x291 x1055)) (and (and (= 1 x291) (< x2389 4294967296)) x1249)))) x1469)))))
(assert (= (=> (and (= (x658 x610) x431) (= (x115 (x916 x1531) (x779 5) 0) x610) (= (x2260 (+ 31 x893)) x1654) (= x2073 (x1266 x431 2)) (= (x2260 (+ 32 x2161)) x986) (= (x1595 1 x431) x1720) (= x525 (x1266 x1654 32)) (= x1441 (x2183 (* x525 32))) (= (x2260 (+ x1441 32)) x659) (= x1751 (< x893 32)) (= (ite (< 0 x1720) x2073 (x1595 127 x2073)) x893) (not (= x33 0)) (= x1201 (= 0 x893)) (> x997 0) (= (x2183 (- x1720 (ite x1751 1 0))) x997) (= (x2260 (+ x2161 x659)) x11)) (and (=> x1201 x1075) (=> (and (= x1256 (< 31 x893)) (not x1201)) (and (=> (and (not x1256) (and (= x2107 (x2183 (* 256 x149))) (= x1117 (x658 x610)) (= (x1266 x1117 256) x149))) x1075) (=> (and x1256 (and (= x1069 (x2260 (+ x986 x893))) (= (x2260 (+ x986 32)) x302) (= x1974 (x295 x832 1)) (= (> x1069 x302) x1790) (= x832 (x1365 x610 0)) (= (x1739 x832) x2256))) (and (=> x1790 x1574) (=> (not x1790) x1156))))))) x748))
(assert (x669 x1094))
(assert (x2250 x2218))
(assert (x2007 x2389))
(assert (x2007 x315))
(assert (x1112 x2390))
(assert (x2007 x1236))
(assert (x1330 x2452))
(assert (x2007 x426))
(assert (= (x2482 x36 248) (x1266 x36 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (= x411 (and x1391 (not x2345))))
(assert (x2007 x2036))
(assert (= (or x2391 x2100) x2351))
(assert (x2007 x1352))
(assert (= x424 (and x1648 x179)))
(assert (and (=> (< 0 2) (= x1224 (+ (x255 x1224 2) (* (x1266 x1224 2) 2)))) (x1129 x1224 2) (x270 x1224 2) (x48 x1224 2)))
(assert (x2007 x1418))
(assert (x885 x439))
(assert (x2007 x800))
(assert (x877 x212))
(assert (= 0 (x565 (x2260 (+ x2157 32)))))
(assert (x1791 x272 x856))
(assert (x1750 x2440))
(assert (x2007 x369))
(assert (x2007 x1360))
(assert (=> (<= (x232 (x2260 (+ 96 x2366))) 10000) (= (x916 (x232 (x2260 (+ 96 x2366)))) (x779 (x232 (x2260 (+ x2366 96)))))))
(assert (= (=> (and (= (> x2139 0) x1327) (= x1474 (x1074 x2084)) (< 0 x1474) (= x2139 (x2482 x1725 248)) (= x1725 (x1074 x2193))) (and (=> (and (= x911 (x779 0)) (not x1327)) x2295) (=> x1327 x409))) x421))
(assert (= (and (not x2353) x988) x835))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1760 (+ (x255 x1760 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1760 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1760 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1760 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1760 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x2007 x1584))
(assert (= (x565 320) 0))
(assert (= (=> (and (= x1593 x1218) (not (= 0 x2087)) (= (x2260 (+ x1070 31)) x555) (= x1776 (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x555)) (= (x1595 18446744073709551615 x944) x492) (= x167 (x2260 (+ x1539 x1776))) (= (x2040 x1539) x944) (= x649 x167) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1070) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1070) true) (> 32 x1070)))) (= (x2260 (+ x492 7776000)) x1593) (not (< 18446744073709551615 x1593))) x445) x188))
(assert (=> (>= 10000 (x232 (x2260 (+ x2366 128)))) (= (x779 (x232 (x2260 (+ x2366 128)))) (x916 (x232 (x2260 (+ 128 x2366)))))))
(assert (x2007 x1793))
(assert (= (x565 x603) 0))
(assert (= x563 (and (not x496) x1134)))
(assert (x877 x1880))
(assert (= 0 (x565 (x2260 (+ x743 32)))))
(assert (= (and x1766 x312) x691))
(assert (x2231 x1970))
(assert (x2007 x978))
(assert (and (x1778 256 x130) (x1905 256 x130) (= (x482 256 x130) (* x130 256)) (x509 256 x130) (x699 256 x130) (x2495 256 x130) (and (= (- (* (- x130 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* (- x130 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x130 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x130) (- (* x130 256) (* x130 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 256 (- x130 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x130 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256)))))
(assert (=> (>= 10000 x804) (= (x779 x804) (x916 x804))))
(assert (x877 4294967296))
(assert (x2007 x2390))
(assert (x2007 x1757))
(assert (and (=> (< 0 262144) (= x1020 (+ (x255 x1020 262144) (* (x1266 x1020 262144) 262144)))) (x1129 x1020 262144) (x270 x1020 262144) (x48 x1020 262144)))
(assert (= x1679 (=> (and (= (x2260 (+ x294 32)) x1875) (= x1939 (not (> x1691 x1875))) (= x1541 (x1739 x1965))) (and x1939 x1992))))
(assert (= x2068 x1336))
(assert (= (and x590 (not x1446)) x536))
(assert (= x661 (and x1248 x1558)))
(assert (and (x1778 x1811 452312848583266388373324160190187140051835877600158453279131187530910662656) (x1905 x1811 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (x482 x1811 452312848583266388373324160190187140051835877600158453279131187530910662656) (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x1811)) (x509 x1811 452312848583266388373324160190187140051835877600158453279131187530910662656) (x699 x1811 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2495 x1811 452312848583266388373324160190187140051835877600158453279131187530910662656) (and (= (- (* (- 115339776388732929035197660848497720713218148788040405586178452820382218977280) x1811) (- 13355433680216258829653813963056604541043899547855704341091828781832225889331072183923741976689688961175617671240445089717606406707212403657580392564654080)) (x482 (- x1811 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115339776388732929035197660848497720713218148788040405586178452820382218977280))) (= (x482 (- x1811 115792089237316195423570985008687907853269984665640564039457584007913129639936) 452312848583266388373324160190187140051835877600158453279131187530910662656) (- (* 452312848583266388373324160190187140051835877600158453279131187530910662656 x1811) 52374249726338269920211035149241586435466272736689036631732661889538140742474792878132321477214466514414186946040961136147476104734166288853256441430016)) (= (x482 x1811 (- 115339776388732929035197660848497720713218148788040405586178452820382218977280)) (* (- 115339776388732929035197660848497720713218148788040405586178452820382218977280) x1811)))))
(assert (and (=> (< 0 18446744073709551616) (= x1788 (+ (x255 x1788 18446744073709551616) (* (x1266 x1788 18446744073709551616) 18446744073709551616)))) (x1129 x1788 18446744073709551616) (x270 x1788 18446744073709551616) (x48 x1788 18446744073709551616)))
(assert (= x364 (and x1040 x2316)))
(assert (x2007 x429))
(assert (and (x1764 x268 6277101735386680763835789423207666416102355444464034512896) (x2501 x268 6277101735386680763835789423207666416102355444464034512896) (= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x268 6277101735386680763835789423207666416102355444464034512896)) (- x268 (x1595 6277101735386680763835789423207666416102355444464034512895 x268))) (=> (and (< 0 x268) (> 6277101735386680763835789423207666416102355444464034512896 0)) (and (<= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x268 6277101735386680763835789423207666416102355444464034512896)) x268) (> (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x268 6277101735386680763835789423207666416102355444464034512896)) (- x268 6277101735386680763835789423207666416102355444464034512896)))) (x1404 x268 6277101735386680763835789423207666416102355444464034512896) (x2165 x268 6277101735386680763835789423207666416102355444464034512896)))
(assert (x2007 x489))
(assert (x2007 x322))
(assert (= x2001 (=> (and (= x1376 x239) (= x994 x93) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ 1 x2062)))) x465)))
(assert (= (x998 (x295 x938 1)) (+ (x998 x938) 1)))
(assert (x2007 x2243))
(assert (and (=> (< 0 1461501637330902918203684832716283019655932542976) (= x629 (+ (x255 x629 1461501637330902918203684832716283019655932542976) (* (x1266 x629 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x1129 x629 1461501637330902918203684832716283019655932542976) (x270 x629 1461501637330902918203684832716283019655932542976) (x48 x629 1461501637330902918203684832716283019655932542976)))
(assert (x2007 x1299))
(assert (x2007 x2392))
(assert (x2007 x1662))
(assert (x747 x1039))
(assert (x1711 x1261))
(assert (x2007 x2117))
(assert (x1330 x2296))
(assert (x2007 x292))
(assert (= x17 (or x1987 x144)))
(assert (= (and (not x2023) x1777) x694))
(assert (=> (>= 10000 x419) (= (x916 x419) (x779 x419))))
(assert (x877 x114))
(assert (= (x634 (x2260 (+ x1718 96))) (x998 (x916 (x634 (x2260 (+ 96 x1718)))))))
(assert (= (x1092 (x2260 (+ 32 x1060))) (x998 (x916 (x1092 (x2260 (+ 32 x1060)))))))
(assert (= (or x1967 x16 x535) x1021))
(assert (x2007 x1687))
(assert (x2007 x566))
(assert (x2007 x2370))
(assert (x885 x941))
(assert (x2007 x326))
(assert (x2007 x1434))
(assert (x2007 x999))
(assert (= 0 (x565 (x2260 (+ 160 x2157)))))
(assert (= (x1266 x1082 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2482 x1082 248)))
(assert (= (x916 109562948294120585953088955926913691080166221410047079322077399086870164406272) (x779 109562948294120585953088955926913691080166221410047079322077399086870164406272)))
(assert (= (and (not x467) x641) x2477))
(assert (x2231 (x1092 (x2260 (+ 32 x1060)))))
(assert (x2007 x2444))
(assert (x15 x127))
(assert (= x1701 (=> (and (= x1378 (x2260 (+ 7776000 x1500))) (not (< 18446744073709551615 x1378)) (= (x2260 (+ x1438 31)) x2456) (= x77 (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2456)) (= x1501 x1434) (= (x2260 (+ x77 x1740)) x1434) (= x2388 x1378) (= x803 (x1638 x1740)) (not (= x1684 0)) (not (or (and (> 32 x1438) (= true (<= x1438 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1438 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1595 18446744073709551615 x803) x1500)) x436)))
(assert (and (x1778 32 x2452) (x1905 32 x2452) (= (x482 32 x2452) (* x2452 32)) (x509 32 x2452) (x699 32 x2452) (x2495 32 x2452) (and (= (- (* (- x2452 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x2452 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x2452 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x2452) (- (* x2452 32) (* x2452 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 32 (- x2452 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2452 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)))))
(assert (x2007 x547))
(assert (= (and (not x1648) x179) x1973))
(assert (and (=> (< 0 65536) (= x858 (+ (x255 x858 65536) (* (x1266 x858 65536) 65536)))) (x1129 x858 65536) (x270 x858 65536) (x48 x858 65536)))
(assert (= (or x839 x780) x2447))
(assert (x2007 x286))
(assert (x1750 x2247))
(assert (x885 x630))
(assert (and (x1764 x268 1461501637330902918203684832716283019655932542976) (x2501 x268 1461501637330902918203684832716283019655932542976) (= (* 1461501637330902918203684832716283019655932542976 (x1266 x268 1461501637330902918203684832716283019655932542976)) (- x268 (x1595 1461501637330902918203684832716283019655932542975 x268))) (=> (and (< 0 x268) (> 1461501637330902918203684832716283019655932542976 0)) (and (<= (* 1461501637330902918203684832716283019655932542976 (x1266 x268 1461501637330902918203684832716283019655932542976)) x268) (> (* 1461501637330902918203684832716283019655932542976 (x1266 x268 1461501637330902918203684832716283019655932542976)) (- x268 1461501637330902918203684832716283019655932542976)))) (x1404 x268 1461501637330902918203684832716283019655932542976) (x2165 x268 1461501637330902918203684832716283019655932542976)))
(assert (and (x1764 x1843 1461501637330902918203684832716283019655932542976) (x2501 x1843 1461501637330902918203684832716283019655932542976) (= (* 1461501637330902918203684832716283019655932542976 (x1266 x1843 1461501637330902918203684832716283019655932542976)) (- x1843 (x1595 1461501637330902918203684832716283019655932542975 x1843))) (=> (and (< 0 x1843) (> 1461501637330902918203684832716283019655932542976 0)) (and (<= (* 1461501637330902918203684832716283019655932542976 (x1266 x1843 1461501637330902918203684832716283019655932542976)) x1843) (> (* 1461501637330902918203684832716283019655932542976 (x1266 x1843 1461501637330902918203684832716283019655932542976)) (- x1843 1461501637330902918203684832716283019655932542976)))) (x1404 x1843 1461501637330902918203684832716283019655932542976) (x2165 x1843 1461501637330902918203684832716283019655932542976)))
(assert (x2007 x1305))
(assert (= (x998 (x916 x902)) x902))
(assert (= (=> (and (or x1410 (not x1410)) (= x1410 (= 0 x1236))) x347) x2195))
(assert (and (=> (< 0 256) (= x1808 (+ (x255 x1808 256) (* (x1266 x1808 256) 256)))) (x1129 x1808 256) (x270 x1808 256) (x48 x1808 256)))
(assert (= x1963 (=> (and (= (x2260 (+ 96 x1792)) x2468) (= x2444 (x2260 (+ 96 x727))) (= (not (> x76 128)) x907) (= x882 (x2151 x2444))) (and x280 x907))))
(assert (x2007 x1860))
(assert (x877 x1149))
(assert (x1330 x315))
(assert (and (x1764 x256 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2501 x256 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x256 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x256 (x1595 452312848583266388373324160190187140051835877600158453279131187530910662655 x256))) (=> (and (< 0 x256) (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0)) (and (<= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x256 452312848583266388373324160190187140051835877600158453279131187530910662656)) x256) (> (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x256 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x256 452312848583266388373324160190187140051835877600158453279131187530910662656)))) (x1404 x256 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2165 x256 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (= x1683 (or x896 x1630)))
(assert (= 0 (x565 (x2260 (+ 128 x537)))))
(assert (x2007 x647))
(assert (x2007 x1002))
(assert (= (x998 (x779 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (and (x1778 256 x2220) (x1905 256 x2220) (= (x482 256 x2220) (* x2220 256)) (x509 256 x2220) (x699 256 x2220) (x2495 256 x2220) (and (= (- (* (- x2220 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* (- x2220 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x2220 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x2220) (- (* x2220 256) (* x2220 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 256 (- x2220 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2220 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256)))))
(assert (x2007 x2328))
(assert (and (=> (< 0 131072) (= x1149 (+ (x255 x1149 131072) (* (x1266 x1149 131072) 131072)))) (x1129 x1149 131072) (x270 x1149 131072) (x48 x1149 131072)))
(assert (= x1398 (=> (and (= (x1394 256) x2454) (= (not (> x1831 128)) x1998) (= x2253 (x2260 (+ 96 x1897)))) (and x1998 x1948))))
(assert (x2007 x513))
(assert (= (x998 (x916 x2173)) x2173))
(assert (= x758 (and x2350 x1241)))
(assert (and (x1764 x1128 6277101735386680763835789423207666416102355444464034512896) (x2501 x1128 6277101735386680763835789423207666416102355444464034512896) (= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x1128 6277101735386680763835789423207666416102355444464034512896)) (- x1128 (x1595 6277101735386680763835789423207666416102355444464034512895 x1128))) (=> (and (< 0 x1128) (> 6277101735386680763835789423207666416102355444464034512896 0)) (and (<= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x1128 6277101735386680763835789423207666416102355444464034512896)) x1128) (> (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x1128 6277101735386680763835789423207666416102355444464034512896)) (- x1128 6277101735386680763835789423207666416102355444464034512896)))) (x1404 x1128 6277101735386680763835789423207666416102355444464034512896) (x2165 x1128 6277101735386680763835789423207666416102355444464034512896)))
(assert (= (and x1605 x1952) x356))
(assert (x15 x342))
(assert (x2007 x783))
(assert (x2007 x1289))
(assert (x885 x970))
(assert (= (and x536 (not x1403)) x769))
(assert (= 0 (x565 (x2260 (+ x859 160)))))
(assert (and (x1764 x1082 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2501 x1082 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1082 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1082 (x1595 452312848583266388373324160190187140051835877600158453279131187530910662655 x1082))) (=> (and (< 0 x1082) (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0)) (and (<= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1082 452312848583266388373324160190187140051835877600158453279131187530910662656)) x1082) (> (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1082 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1082 452312848583266388373324160190187140051835877600158453279131187530910662656)))) (x1404 x1082 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2165 x1082 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x2007 x2022))
(assert (x885 x2385))
(assert (x2007 x1958))
(assert (x2007 x344))
(assert (and (=> (< 0 32) (= x2429 (+ (x255 x2429 32) (* (x1266 x2429 32) 32)))) (x1129 x2429 32) (x270 x2429 32) (x48 x2429 32)))
(assert (= (x998 (x916 (x497 (x2260 (+ x933 64))))) (x497 (x2260 (+ x933 64)))))
(assert (x2007 x1813))
(assert (= (x565 (x2260 (+ x1866 160))) 0))
(assert (= (or x1658 x868) x2494))
(assert (and (=> (< 0 131072) (= x1613 (+ (x255 x1613 131072) (* (x1266 x1613 131072) 131072)))) (x1129 x1613 131072) (x270 x1613 131072) (x48 x1613 131072)))
(assert (= x1688 (and x1816 x1830)))
(assert (= (and (not x2093) x472) x365))
(assert (x2007 x1193))
(assert (x2007 x1233))
(assert (x2007 x1746))
(assert (= (x2183 (* x1379 1461501637330902918203684832716283019655932542976)) (x1664 x1379 160)))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1677 (+ (x255 x1677 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1677 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1677 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1677 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1677 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x747 x555))
(assert (= 0 (x565 x1718)))
(assert (= (x779 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x916 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x2007 x1876))
(assert (= x1680 (or x1807 x713)))
(assert (x2007 x2275))
(assert (x2007 x2408))
(assert (= x991 (=> (and (= (x2183 (* x1381 32)) x2355) (= (x2260 (+ 31 x1389)) x970) (= x1758 (> 32 x1389)) (> x2144 0) (= x1702 (x2260 (+ x2355 32))) (= (x2260 (+ x1011 x1702)) x403) (= x782 (x1266 x1616 2)) (= (x1266 x970 32) x1381) (= (ite (> x570 0) x782 (x1595 127 x782)) x1389) (= x2188 (= x1389 0)) (= (x2260 (+ 32 x1011)) x727) (= (x115 (x916 x1531) (x779 5) 0) x2318) (= x570 (x1595 1 x1616)) (= (x658 x2318) x1616) (= (x2183 (- x570 (ite x1758 1 0))) x2144)) (and (=> (and (= (< 31 x1389) x1558) (not x2188)) (and (=> (and x1558 (and (= x1865 (x1739 x853)) (= (x1365 x2318 0) x853) (= x1827 (x2260 (+ 32 x727))) (= x1532 (x2260 (+ x727 x1389))) (= x2479 (x295 x853 1)) (= (< x1827 x1532) x1667))) (and (=> x1667 x1274) (=> (not x1667) x1913))) (=> (and (and (= (x2183 (* x884 256)) x55) (= x2460 (x658 x2318)) (= x884 (x1266 x2460 256))) (not x1558)) x1375))) (=> x2188 x1375)))))
(assert (= (x998 (x295 x1846 1)) (+ 1 (x998 x1846))))
(assert (x2007 x774))
(assert (x885 x335))
(assert (x2007 x721))
(assert (x2007 x521))
(assert (= (and x2190 x1666) x2500))
(assert (x2007 x742))
(assert (= x1826 (and x1583 (not x879))))
(assert (x2007 x274))
(assert (x2231 (x1092 (x2260 (+ x1060 64)))))
(assert (= (and x814 x750) x622))
(assert (x2007 x1253))
(assert (x885 x1746))
(assert (and (=> (< 0 32) (= x2218 (+ (x255 x2218 32) (* (x1266 x2218 32) 32)))) (x1129 x2218 32) (x270 x2218 32) (x48 x2218 32)))
(assert (=> (>= 10000 (x232 (x2260 (+ x2366 192)))) (= (x779 (x232 (x2260 (+ 192 x2366)))) (x916 (x232 (x2260 (+ x2366 192)))))))
(assert (x1330 x2267))
(assert (= x385 (or x1597 x422 x237)))
(assert (= 0 (x565 (x2260 (+ x182 192)))))
(assert (and (=> (< 0 131072) (= x1975 (+ (x255 x1975 131072) (* (x1266 x1975 131072) 131072)))) (x1129 x1975 131072) (x270 x1975 131072) (x48 x1975 131072)))
(assert (= (and x1196 x1461) x2127))
(assert (= 0 (x565 x2157)))
(assert (= 0 (x565 (x2260 (+ 32 x1718)))))
(assert (x2007 x114))
(assert (= x2028 (and x1773 x974)))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x712 (+ (x255 x712 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x712 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x712 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x712 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x712 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= 0 (x565 (x2260 (+ x381 160)))))
(assert (and (=> (< 0 18446744073709551616) (= x501 (+ (x255 x501 18446744073709551616) (* (x1266 x501 18446744073709551616) 18446744073709551616)))) (x1129 x501 18446744073709551616) (x270 x501 18446744073709551616) (x48 x501 18446744073709551616)))
(assert (x2007 x803))
(assert (x2007 x1205))
(assert (x2007 x1603))
(assert (x747 x283))
(assert (x2007 x1897))
(assert (x2007 x1540))
(assert (x2007 x1725))
(assert (x2007 x492))
(assert (x885 x1654))
(assert (x2007 x2430))
(assert (x2007 x182))
(assert (x1330 x1657))
(assert (x2007 x1103))
(assert (x2007 x1337))
(assert (x877 x2069))
(assert (x2007 x199))
(assert (x2007 x2017))
(assert (=> (>= 10000 x1166) (= (x916 x1166) (x779 x1166))))
(assert (x2007 x325))
(assert (x877 x1796))
(assert (x885 6277101735386680763835789423207666416102355444464034512896))
(assert (= (x998 (x916 (x232 (x2260 (+ 160 x2366))))) (x232 (x2260 (+ 160 x2366)))))
(assert (= x223 (and x2148 x2033)))
(assert (x2007 x1782))
(assert (x877 (* x490 6277101735386680763835789423207666416102355444464034512896)))
(assert (= x1111 (and (not x1698) x2123)))
(assert (x2007 x2194))
(assert (x1330 x884))
(assert (x747 x803))
(assert (x2007 x2473))
(assert (x2007 x200))
(assert (x2007 x459))
(assert (= x1246 (and x449 x2282)))
(assert (and (=> (< 0 32) (= x2340 (+ (x255 x2340 32) (* (x1266 x2340 32) 32)))) (x1129 x2340 32) (x270 x2340 32) (x48 x2340 32)))
(assert (x1750 x431))
(assert (= x1576 (and x2383 x2481)))
(assert (and (=> (< 0 262144) (= x1836 (+ (x255 x1836 262144) (* (x1266 x1836 262144) 262144)))) (x1129 x1836 262144) (x270 x1836 262144) (x48 x1836 262144)))
(assert (= (and x1874 x666) x2481))
(assert (x2007 x882))
(assert (x811 x51))
(assert (= (x565 (x2260 (+ 160 x537))) 0))
(assert (= (and x1325 x1178) x1990))
(assert (x2231 x1809))
(assert (= x711 (or x2174 x1058)))
(assert (x747 x1736))
(assert (= (x1664 x78 160) (x2183 (* x78 1461501637330902918203684832716283019655932542976))))
(assert (x2007 x1870))
(assert (x885 x1205))
(assert (= (x2482 x1843 192) (x1266 x1843 6277101735386680763835789423207666416102355444464034512896)))
(assert (= (x998 (x916 x656)) x656))
(assert (x885 x2098))
(assert (x885 256))
(assert (= x418 (or x560 x2201)))
(assert (= (x565 x873) 0))
(assert (x747 x1458))
(assert (= (or x1269 x596) x1058))
(assert (x2007 x1426))
(assert (= (x565 x1052) 0))
(assert (x2007 x2206))
(assert (x2231 (x1832 x537)))
(assert (x2007 x441))
(assert (x747 x1958))
(assert (= x823 (=> (and (= (x2260 (+ 32 x1619)) x704) (= (not (< 32 x1146)) x178) (= (x295 x1439 1) x1064) (= (x2280 x704) x1293)) (and x178 (=> (and (= x184 64) (= x1944 x1064)) x1124)))))
(assert (x877 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (= x1781 (and (not x443) x1012)))
(assert (x1954 x1149))
(assert (x2231 (x634 (x2260 (+ x1718 160)))))
(assert (= (x998 (x779 65535)) 65535))
(assert (x2007 x40))
(assert (x1330 x2179))
(assert (= x1091 (=> (and (= (x1595 115792089237316195423570985008687907853269984665640564039457584007908834738175 x1513) x2485) (= x1959 (= 0 x886)) (= x2302 (x287 (- x2417 x11))) (not (ite x2134 (not (= (x1595 65537 x1848) 65537)) x2134)) (= x2312 (x115 x1851 (x779 1) 0)) (<= 0 x439) (= x1020 (x2482 x439 160)) (= x820 (x1595 131072 x1020)) (= x886 (x1595 65535 x2485)) (= (not x1959) x2134) (= (x287 (- x2302 32)) x1423) (<= x439 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 131072 x820) x1325) (= (x2260 (+ x542 x843)) x2417) (= (x1464 x2312) x439)) (and (=> (and (and (= x1925 (x779 0)) (= x635 x2417)) (not x1325)) x1995) (=> (and x1325 (and (= x1308 (= 0 x2276)) (= (x2260 (+ 32 x2417)) x1636) (= x296 (> 32 x2276)) (= (x2260 (+ 31 x2276)) x1746) (= (x1266 x1797 2) x833) (= x2276 (ite (< 0 x1009) x833 (x1595 127 x833))) (= (x658 x797) x1797) (> x1611 0) (= x1009 (x1595 1 x1797)) (= (x2260 (+ 32 x1088)) x1084) (= x797 (x115 x1851 (x779 5) 0)) (= x1940 (x1266 x1746 32)) (= (x2183 (- x1009 (ite x296 1 0))) x1611) (= (x2183 (* x1940 32)) x1088) (= x2443 (x2260 (+ x1084 x2417))))) (and (=> x1308 x569) (=> (and (not x1308) (= (> x2276 31) x20)) (and (=> (and (and (= x1232 (x2183 (* x2220 256))) (= (x1266 x632 256) x2220) (= (x658 x797) x632)) (not x20)) x569) (=> (and x20 (and (= x529 (x295 x938 1)) (= x1362 (x1739 x938)) (= x1328 (x2260 (+ x1636 32))) (= x938 (x1365 x797 0)) (= x971 (x2260 (+ x1636 x2276))) (= x1717 (< x1328 x971)))) (and (=> (not x1717) x1369) (=> x1717 x1481)))))))))))
(assert (= (and x467 x641) x528))
(assert (x747 x2073))
(assert (x2007 x2402))
(assert (= (x2482 x616 192) (x1266 x616 6277101735386680763835789423207666416102355444464034512896)))
(assert (= (x916 1058358655) (x779 1058358655)))
(assert (x2007 x440))
(assert (x2007 x83))
(assert (x2007 x1684))
(assert (x2007 x1611))
(assert (x2007 x724))
(assert (x2231 (x1202 (x2260 (+ x2489 32)))))
(assert (= x2123 (and (not x2088) x2075)))
(assert (x2007 x583))
(assert (= (or x1345 x1680) x22))
(assert (= (and x770 x1167) x3))
(assert (x2007 x2106))
(assert (x2007 x49))
(assert (x2007 x1280))
(assert (x747 x148))
(assert (and (=> (< 0 262144) (= x2019 (+ (x255 x2019 262144) (* (x1266 x2019 262144) 262144)))) (x1129 x2019 262144) (x270 x2019 262144) (x48 x2019 262144)))
(assert (x2007 x2264))
(assert (x2007 x130))
(assert (x2007 x971))
(assert (x747 x2440))
(assert (x2007 x828))
(assert (= (and (not x1201) x1206) x220))
(assert (x2007 x1163))
(assert (x2007 x720))
(assert (x885 x200))
(assert (= (x779 65537) (x916 65537)))
(assert (= x1435 (=> (and (= (ite (< x1640 x100) 0 x470) x1796) (= 0 x680) (= x2166 x459) (= (x1595 65536 x1796) x680)) x1034)))
(assert (x2007 x1639))
(assert (= x1864 (or x2476 x2187)))
(assert (x2007 x734))
(assert (= (x916 (x998 x2246)) x2246))
(assert (= (x779 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x916 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x2007 x696))
(assert (x2007 x463))
(assert (x2231 (x506 (x2260 (+ x381 160)))))
(assert (x2007 x778))
(assert (x669 x1020))
(assert (x885 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (= x1466 (or x242 x1062)))
(assert (and (x1764 x1086 256) (x2501 x1086 256) (= (* 256 (x1266 x1086 256)) (- x1086 (x1595 255 x1086))) (=> (and (< 0 x1086) (> 256 0)) (and (<= (* 256 (x1266 x1086 256)) x1086) (> (* 256 (x1266 x1086 256)) (- x1086 256)))) (x1404 x1086 256) (x2165 x1086 256)))
(assert (x2007 x2118))
(assert (= (x565 (x2260 (+ 32 x2366))) 0))
(assert (x2007 x2247))
(assert (x2007 x595))
(assert (x877 x1958))
(assert (= (=> (and (or (and (not x2226) (= x181 x1843)) (and x2226 (and (= (x1595 65536 x696) x425) (= (ite x1470 0 x1843) x181) (= x1470 (= x425 65536))))) (= (< x710 x111) x2226)) x1223) x1212))
(assert (= (x565 x966) 0))
(assert (x2007 x2150))
(assert (x1330 x813))
(assert (x885 x256))
(assert (= (x634 (x2260 (+ 32 x1718))) (x998 (x916 (x634 (x2260 (+ 32 x1718)))))))
(assert (= x160 (x998 (x916 x160))))
(assert (x885 x1876))
(assert (x2007 x1524))
(assert (x1750 x2314))
(assert (x1330 x78))
(assert (= x1451 (and x2088 x2075)))
(assert (x2007 x2485))
(assert (x2007 x1875))
(assert (and (x1778 32 x1940) (x1905 32 x1940) (= (x482 32 x1940) (* x1940 32)) (x509 32 x1940) (x699 32 x1940) (x2495 32 x1940) (and (= (- (* (- x1940 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x1940 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1940 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1940) (- (* x1940 32) (* x1940 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 32 (- x1940 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1940 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)))))
(assert (x2231 (x497 (x2260 (+ 96 x933)))))
(assert (x2149 x1157))
(assert (x855 x1958))
(assert (x2007 x737))
(assert (= x31 (and x2081 x732)))
(assert (x2007 x771))
(assert (x2007 x941))
(assert (= x82 (and x8 (not x2431))))
(assert (x2007 x950))
(assert (x2007 x1356))
(assert (x2007 x2504))
(assert (= (x2482 x1356 248) (x1266 x1356 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x2007 x2442))
(assert (x2007 x1379))
(assert (= x1997 (and x1461 (not x1196))))
(assert (=> (>= 10000 (x1832 (x2260 (+ x537 96)))) (= (x779 (x1832 (x2260 (+ 96 x537)))) (x916 (x1832 (x2260 (+ 96 x537)))))))
(assert (= (x565 x859) 0))
(assert (x2007 x1866))
(assert (x885 x175))
(assert (x877 x1157))
(assert (= (and x759 x430) x2422))
(assert (= (or (and (not x1873) x2126) x638) x2286))
(assert (= (x998 (x916 (x497 (x2260 (+ x933 32))))) (x497 (x2260 (+ 32 x933)))))
(assert (x2007 x781))
(assert (x2007 x880))
(assert (x2007 x240))
(assert (x747 x271))
(assert (and (x1764 x1623 2) (x2501 x1623 2) (= (* 2 (x1266 x1623 2)) (- x1623 (x1595 1 x1623))) (=> (and (< 0 x1623) (> 2 0)) (and (<= (* 2 (x1266 x1623 2)) x1623) (> (* 2 (x1266 x1623 2)) (- x1623 2)))) (x1404 x1623 2) (x2165 x1623 2)))
(assert (x2007 x712))
(assert (and (x1764 x616 6277101735386680763835789423207666416102355444464034512896) (x2501 x616 6277101735386680763835789423207666416102355444464034512896) (= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x616 6277101735386680763835789423207666416102355444464034512896)) (- x616 (x1595 6277101735386680763835789423207666416102355444464034512895 x616))) (=> (and (< 0 x616) (> 6277101735386680763835789423207666416102355444464034512896 0)) (and (<= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x616 6277101735386680763835789423207666416102355444464034512896)) x616) (> (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x616 6277101735386680763835789423207666416102355444464034512896)) (- x616 6277101735386680763835789423207666416102355444464034512896)))) (x1404 x616 6277101735386680763835789423207666416102355444464034512896) (x2165 x616 6277101735386680763835789423207666416102355444464034512896)))
(assert (x2007 x1322))
(assert (= (x998 (x916 x2225)) x2225))
(assert (x2007 x1020))
(assert (= (x1664 x1867 192) (x2183 (* 6277101735386680763835789423207666416102355444464034512896 x1867))))
(assert (x2007 x501))
(assert (x2007 x1411))
(assert (= (x998 (x916 (x1092 (x2260 (+ x1060 64))))) (x1092 (x2260 (+ x1060 64)))))
(assert (=> (>= 10000 (x2027 (x2260 (+ x182 96)))) (= (x779 (x2027 (x2260 (+ 96 x182)))) (x916 (x2027 (x2260 (+ 96 x182)))))))
(assert (x2007 x1346))
(assert (x2007 x1894))
(assert (x2007 x386))
(assert (and (=> (< 0 32) (= x645 (+ (x255 x645 32) (* (x1266 x645 32) 32)))) (x1129 x645 32) (x270 x645 32) (x48 x645 32)))
(assert (x2007 x2348))
(assert (= (and x2235 x2307) x713))
(assert (= (and x70 x1279) x1115))
(assert (x2007 x2450))
(assert (x2007 x1504))
(assert (and (=> (< 0 4294967296) (= x1513 (+ (x255 x1513 4294967296) (* (x1266 x1513 4294967296) 4294967296)))) (x1129 x1513 4294967296) (x270 x1513 4294967296) (x48 x1513 4294967296)))
(assert (x2007 x239))
(assert (= x967 (x916 (x998 x967))))
(assert (x2231 (x1433 352)))
(assert (= x2042 (and (not x1855) x390)))
(assert (= (and x434 x2200) x770))
(assert (x2007 x1966))
(assert (= (x1714 (x2260 (+ 64 x743))) (x998 (x916 (x1714 (x2260 (+ x743 64)))))))
(assert (= x2202 (or x673 x159)))
(assert (= x2015 (or x1243 x1485)))
(assert (x2007 x1389))
(assert (= x1494 (or x761 x1683)))
(assert (= (=> (and (not (= 0 x2496)) (= x756 x1145) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x62) (and (= (<= x62 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x62)))) (= 109562948294120585953088955926913691080166221410047079322077399086870164406272 x1145) (= (x1595 115792089210356248756420345214020892766250353992003419616917011526809519390720 x1145) x756) (= x1145 (x919 x1598))) x599) x233))
(assert (=> (>= 10000 (x232 (x2260 (+ x2366 160)))) (= (x779 (x232 (x2260 (+ x2366 160)))) (x916 (x232 (x2260 (+ 160 x2366)))))))
(assert (x2007 x2385))
(assert (= (x506 (x2260 (+ 128 x381))) (x998 (x916 (x506 (x2260 (+ 128 x381)))))))
(assert (x2231 (x1714 (x2260 (+ 160 x743)))))
(assert (x877 x441))
(assert (=> (<= (x1714 (x2260 (+ 96 x743))) 10000) (= (x779 (x1714 (x2260 (+ x743 96)))) (x916 (x1714 (x2260 (+ 96 x743)))))))
(assert (= (and x1812 (not x266)) x788))
(assert (x2007 x1198))
(assert (x2007 x727))
(assert (= x2174 (and x2494 x348)))
(assert (= (x2482 x256 248) (x1266 x256 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x2007 x2107))
(assert (x2007 x792))
(assert (x747 x1836))
(assert (x2007 x150))
(assert (x747 127))
(assert (x2007 x549))
(assert (= x393 (=> (and (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ 1 x924))) (= x394 x1456) (= x1370 x12)) x2375)))
(assert (x2007 x1284))
(assert (x2007 x2478))
(assert (x877 (* x2367 6277101735386680763835789423207666416102355444464034512896)))
(assert (x2007 x2016))
(assert (x1330 x2077))
(assert (= (and x1416 (not x1890)) x1345))
(assert (x811 x2341))
(assert (= (=> (and (> x2224 0) (= x2224 (x634 x649)) (= (x2482 x36 248) x2285) (= x2307 (> x2285 0)) (= (x634 x375) x36)) (and (=> x2307 x786) (=> (and (not x2307) (= x1769 (x779 0))) x1262))) x1336))
(assert (= 549686827 (x998 (x779 549686827))))
(assert (x2007 x2411))
(assert (= x1219 (and (not x1150) x644)))
(assert (= 0 (x565 x749)))
(assert (= (=> (and (> x762 0) (= (x2482 x2507 248) x924) (= x2507 (x2027 x567)) (= (x2027 x806) x762) (= (< 0 x924) x974)) (and (=> x974 x617) (=> (and (= x394 (x779 0)) (not x974)) x393))) x1660))
(assert (= x1488 (and x313 x573)))
(assert (and (x1764 x2478 2) (x2501 x2478 2) (= (* 2 (x1266 x2478 2)) (- x2478 (x1595 1 x2478))) (=> (and (< 0 x2478) (> 2 0)) (and (<= (* 2 (x1266 x2478 2)) x2478) (> (* 2 (x1266 x2478 2)) (- x2478 2)))) (x1404 x2478 2) (x2165 x2478 2)))
(assert (and (=> (< 0 128) (= x1351 (+ (x255 x1351 128) (* (x1266 x1351 128) 128)))) (x1129 x1351 128) (x270 x1351 128) (x48 x1351 128)))
(assert (let ((x1706 (* 6277101735386680763835789423207666416102355444464034512896 x2367))) (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1706 (+ (x255 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (= (and x1798 x1244) x852))
(assert (x2231 (x1202 x2489)))
(assert (x2007 x2288))
(assert (= (or x1997 x2127) x1192))
(assert (= x2204 (and x1256 x220)))
(assert (x885 x2223))
(assert (= (and x863 x1934) x1472))
(assert (x877 x1194))
(assert (x877 x1145))
(assert (x2231 (x2027 x182)))
(assert (and (=> (< 0 18446744073709551616) (= x391 (+ (x255 x391 18446744073709551616) (* (x1266 x391 18446744073709551616) 18446744073709551616)))) (x1129 x391 18446744073709551616) (x270 x391 18446744073709551616) (x48 x391 18446744073709551616)))
(assert (x877 x672))
(assert (= 0 (x565 (x2260 (+ 96 x537)))))
(assert (= (x1266 x1596 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2482 x1596 248)))
(assert (x2007 x2277))
(assert (x2007 x745))
(assert (= (and x1837 x230) x430))
(assert (x2007 x888))
(assert (x885 x1568))
(assert (x2007 x60))
(assert (and (= 1496577676626844588240573268701473812127674924007424 (x1137 2 170)) (= (x1137 2 160) 1461501637330902918203684832716283019655932542976) (= 2097152 (x1137 2 21)) (= (x1137 2 253) 14474011154664524427946373126085988481658748083205070504932198000989141204992) (= (x1137 2 248) 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (x1137 2 247) 226156424291633194186662080095093570025917938800079226639565593765455331328) (= 1361129467683753853853498429727072845824 (x1137 2 130)) (= 162259276829213363391578010288128 (x1137 2 107)) (= (x1137 2 99) 633825300114114700748351602688) (= (x1137 2 89) 618970019642690137449562112) (= 107839786668602559178668060348078522694548577690162289924414440996864 (x1137 2 226)) (= 113078212145816597093331040047546785012958969400039613319782796882727665664 (x1137 2 246)) (= 4194304 (x1137 2 22)) (= 1180591620717411303424 (x1137 2 70)) (= (x1137 2 141) 2787593149816327892691964784081045188247552) (= 34359738368 (x1137 2 35)) (= 13164036458569648337239753460458804039861886925068638906788872192 (x1137 2 213)) (= 75557863725914323419136 (x1137 2 76)) (= 5316911983139663491615228241121378304 (x1137 2 122)) (= 52656145834278593348959013841835216159447547700274555627155488768 (x1137 2 215)) (= 6129982163463555433433388108601236734474956488734408704 (x1137 2 182)) (= (x1137 2 103) 10141204801825835211973625643008) (= 41538374868278621028243970633760768 (x1137 2 115)) (= 5846006549323611672814739330865132078623730171904 (x1137 2 162)) (= 158456325028528675187087900672 (x1137 2 97)) (= (x1137 2 232) 6901746346790563787434755862277025452451108972170386555162524223799296) (= 13479973333575319897333507543509815336818572211270286240551805124608 (x1137 2 223)) (= (x1137 2 241) 3533694129556768659166595001485837031654967793751237916243212402585239552) (= 2417851639229258349412352 (x1137 2 81)) (= 11972621413014756705924586149611790497021399392059392 (x1137 2 173)) (= (x1137 2 124) 21267647932558653966460912964485513216) (= 730750818665451459101842416358141509827966271488 (x1137 2 159)) (= 4722366482869645213696 (x1137 2 72)) (= 4398046511104 (x1137 2 42)) (= (x1137 2 132) 5444517870735015415413993718908291383296) (= (x1137 2 185) 49039857307708443467467104868809893875799651909875269632) (= (x1137 2 111) 2596148429267413814265248164610048) (= (x1137 2 250) 1809251394333065553493296640760748560207343510400633813116524750123642650624) (= (x1137 2 219) 842498333348457493583344221469363458551160763204392890034487820288) (= 9903520314283042199192993792 (x1137 2 93)) (= 45671926166590716193865151022383844364247891968 (x1137 2 155)) (= (x1137 2 237) 220855883097298041197912187592864814478435487109452369765200775161577472) (= 748288838313422294120286634350736906063837462003712 (x1137 2 169)) (= (x1137 2 138) 348449143727040986586495598010130648530944) (= (x1137 2 24) 16777216) (= 11150372599265311570767859136324180752990208 (x1137 2 143)) (= 79228162514264337593543950336 (x1137 2 96)) (= (x1137 2 149) 713623846352979940529142984724747568191373312) (= 85070591730234615865843651857942052864 (x1137 2 126)) (= (x1137 2 133) 10889035741470030830827987437816582766592) (= (x1137 2 86) 77371252455336267181195264) (= 562949953421312 (x1137 2 49)) (= 324518553658426726783156020576256 (x1137 2 108)) (= (x1137 2 148) 356811923176489970264571492362373784095686656) (= 91343852333181432387730302044767688728495783936 (x1137 2 156)) (= 105312291668557186697918027683670432318895095400549111254310977536 (x1137 2 216)) (= 26959946667150639794667015087019630673637144422540572481103610249216 (x1137 2 224)) (= (x1137 2 83) 9671406556917033397649408) (= 512 (x1137 2 9)) (= 20769187434139310514121985316880384 (x1137 2 114)) (= (x1137 2 201) 3213876088517980551083924184682325205044405987565585670602752) (= 1024 (x1137 2 10)) (= (x1137 2 6) 64) (= (x1137 2 206) 102844034832575377634685573909834406561420991602098741459288064) (= (x1137 2 127) 170141183460469231731687303715884105728) (= (x1137 2 27) 134217728) (= (x1137 2 202) 6427752177035961102167848369364650410088811975131171341205504) (= (x1137 2 120) 1329227995784915872903807060280344576) (= 18014398509481984 (x1137 2 54)) (= 178405961588244985132285746181186892047843328 (x1137 2 147)) (= (x1137 2 67) 147573952589676412928) (= 2147483648 (x1137 2 31)) (= (x1137 2 1) 2) (= (x1137 2 249) 904625697166532776746648320380374280103671755200316906558262375061821325312) (= 1645504557321206042154969182557350504982735865633579863348609024 (x1137 2 210)) (= (x1137 2 134) 21778071482940061661655974875633165533184) (= 32 (x1137 2 5)) (= 44601490397061246283071436545296723011960832 (x1137 2 145)) (= (x1137 2 112) 5192296858534827628530496329220096) (= (x1137 2 144) 22300745198530623141535718272648361505980416) (= 392318858461667547739736838950479151006397215279002157056 (x1137 2 188)) (= (x1137 2 199) 803469022129495137770981046170581301261101496891396417650688) (= 549755813888 (x1137 2 39)) (= (x1137 2 92) 4951760157141521099596496896) (= (x1137 2 101) 2535301200456458802993406410752) (= (x1137 2 225) 53919893334301279589334030174039261347274288845081144962207220498432) (= (x1137 2 125) 42535295865117307932921825928971026432) (= 4503599627370496 (x1137 2 52)) (= 5986310706507378352962293074805895248510699696029696 (x1137 2 172)) (= (x1137 2 193) 12554203470773361527671578846415332832204710888928069025792) (= 8 (x1137 2 3)) (= 70368744177664 (x1137 2 46)) (= 8388608 (x1137 2 23)) (= (x1137 2 128) 340282366920938463463374607431768211456) (= (x1137 2 191) 3138550867693340381917894711603833208051177722232017256448) (= 365375409332725729550921208179070754913983135744 (x1137 2 158)) (= (x1137 2 29) 536870912) (= 2722258935367507707706996859454145691648 (x1137 2 131)) (= 20282409603651670423947251286016 (x1137 2 104)) (= 1 (x1137 2 0)) (= 140737488355328 (x1137 2 47)) (= (x1137 2 59) 576460752303423488) (= (x1137 2 12) 4096) (= 332306998946228968225951765070086144 (x1137 2 118)) (= (x1137 2 36) 68719476736) (= 51422017416287688817342786954917203280710495801049370729644032 (x1137 2 205)) (= 55213970774324510299478046898216203619608871777363092441300193790394368 (x1137 2 235)) (= 98079714615416886934934209737619787751599303819750539264 (x1137 2 186)) (= (x1137 2 245) 56539106072908298546665520023773392506479484700019806659891398441363832832) (= (x1137 2 88) 309485009821345068724781056) (= (x1137 2 166) 93536104789177786765035829293842113257979682750464) (= (x1137 2 161) 2923003274661805836407369665432566039311865085952) (= (x1137 2 195) 50216813883093446110686315385661331328818843555712276103168) (= (x1137 2 211) 3291009114642412084309938365114701009965471731267159726697218048) (= 1725436586697640946858688965569256363112777243042596638790631055949824 (x1137 2 230)) (= (x1137 2 68) 295147905179352825856) (= 187072209578355573530071658587684226515959365500928 (x1137 2 167)) (= (x1137 2 64) 18446744073709551616) (= 822752278660603021077484591278675252491367932816789931674304512 (x1137 2 209)) (= 1766847064778384329583297500742918515827483896875618958121606201292619776 (x1137 2 240)) (= 4611686018427387904 (x1137 2 62)) (= 401734511064747568885490523085290650630550748445698208825344 (x1137 2 198)) (= (x1137 2 43) 8796093022208) (= 5708990770823839524233143877797980545530986496 (x1137 2 152)) (= (x1137 2 142) 5575186299632655785383929568162090376495104) (= (x1137 2 87) 154742504910672534362390528) (= 4 (x1137 2 2)) (= (x1137 2 177) 191561942608236107294793378393788647952342390272950272) (= (x1137 2 116) 83076749736557242056487941267521536) (= (x1137 2 65) 36893488147419103232) (= (x1137 2 137) 174224571863520493293247799005065324265472) (= 590295810358705651712 (x1137 2 69)) (= (x1137 2 119) 664613997892457936451903530140172288) (= (x1137 2 163) 11692013098647223345629478661730264157247460343808) (= 1048576 (x1137 2 20)) (= 883423532389192164791648750371459257913741948437809479060803100646309888 (x1137 2 239)) (= 374144419156711147060143317175368453031918731001856 (x1137 2 168)) (= (x1137 2 53) 9007199254740992) (= 6277101735386680763835789423207666416102355444464034512896 (x1137 2 192)) (= (x1137 2 212) 6582018229284824168619876730229402019930943462534319453394436096) (= (x1137 2 254) 28948022309329048855892746252171976963317496166410141009864396001978282409984) (= (x1137 2 229) 862718293348820473429344482784628181556388621521298319395315527974912) (= (x1137 2 8) 256) (= (x1137 2 102) 5070602400912917605986812821504) (= (x1137 2 242) 7067388259113537318333190002971674063309935587502475832486424805170479104) (= (x1137 2 100) 1267650600228229401496703205376) (= (x1137 2 164) 23384026197294446691258957323460528314494920687616) (= 3450873173395281893717377931138512726225554486085193277581262111899648 (x1137 2 231)) (= 128 (x1137 2 7)) (= 262144 (x1137 2 18)) (= (x1137 2 44) 17592186044416) (= 26328072917139296674479506920917608079723773850137277813577744384 (x1137 2 214)) (= 39614081257132168796771975168 (x1137 2 95)) (= (x1137 2 51) 2251799813685248) (= 696898287454081973172991196020261297061888 (x1137 2 139)) (= 288230376151711744 (x1137 2 58)) (= 37778931862957161709568 (x1137 2 75)) (= (x1137 2 13) 8192) (= (x1137 2 251) 3618502788666131106986593281521497120414687020801267626233049500247285301248) (= 73786976294838206464 (x1137 2 66)) (= (x1137 2 154) 22835963083295358096932575511191922182123945984) (= 13803492693581127574869511724554050904902217944340773110325048447598592 (x1137 2 233)) (= 144115188075855872 (x1137 2 57)) (= (x1137 2 110) 1298074214633706907132624082305024) (= (x1137 2 146) 89202980794122492566142873090593446023921664) (= (x1137 2 197) 200867255532373784442745261542645325315275374222849104412672) (= (x1137 2 4) 16) (= 81129638414606681695789005144064 (x1137 2 106)) (= 680564733841876926926749214863536422912 (x1137 2 129)) (= 604462909807314587353088 (x1137 2 79)) (= (x1137 2 244) 28269553036454149273332760011886696253239742350009903329945699220681916416) (= 411376139330301510538742295639337626245683966408394965837152256 (x1137 2 208)) (= (x1137 2 37) 137438953472) (= 316912650057057350374175801344 (x1137 2 98)) (= 65536 (x1137 2 16)) (= (x1137 2 221) 3369993333393829974333376885877453834204643052817571560137951281152) (= (x1137 2 82) 4835703278458516698824704) (= 11417981541647679048466287755595961091061972992 (x1137 2 153)) (= (x1137 2 74) 18889465931478580854784) (= (x1137 2 91) 2475880078570760549798248448) (= (x1137 2 183) 12259964326927110866866776217202473468949912977468817408) (= (x1137 2 85) 38685626227668133590597632) (= 2658455991569831745807614120560689152 (x1137 2 121)) (= (x1137 2 228) 431359146674410236714672241392314090778194310760649159697657763987456) (= (x1137 2 32) 4294967296) (= 10633823966279326983230456482242756608 (x1137 2 123)) (= 1208925819614629174706176 (x1137 2 80)) (= (x1137 2 203) 12855504354071922204335696738729300820177623950262342682411008) (= (x1137 2 113) 10384593717069655257060992658440192) (= 383123885216472214589586756787577295904684780545900544 (x1137 2 178)) (= (x1137 2 171) 2993155353253689176481146537402947624255349848014848) (= 302231454903657293676544 (x1137 2 78)) (= (x1137 2 41) 2199023255552) (= 100433627766186892221372630771322662657637687111424552206336 (x1137 2 196)) (= (x1137 2 136) 87112285931760246646623899502532662132736) (= 649037107316853453566312041152512 (x1137 2 109)) (= (x1137 2 94) 19807040628566084398385987584) (= 166153499473114484112975882535043072 (x1137 2 117)) (= 25711008708143844408671393477458601640355247900524685364822016 (x1137 2 204)) (= 17179869184 (x1137 2 34)) (= 421249166674228746791672110734681729275580381602196445017243910144 (x1137 2 218)) (= 33554432 (x1137 2 25)) (= 40564819207303340847894502572032 (x1137 2 105)) (= (x1137 2 222) 6739986666787659948666753771754907668409286105635143120275902562304) (= 1606938044258990275541962092341162602522202993782792835301376 (x1137 2 200)) (= (x1137 2 190) 1569275433846670190958947355801916604025588861116008628224) (= (x1137 2 151) 2854495385411919762116571938898990272765493248) (= 784637716923335095479473677900958302012794430558004314112 (x1137 2 189)) (= 205688069665150755269371147819668813122841983204197482918576128 (x1137 2 207)) (= 9444732965739290427392 (x1137 2 73)) (= 25108406941546723055343157692830665664409421777856138051584 (x1137 2 194)) (= 151115727451828646838272 (x1137 2 77)) (= (x1137 2 174) 23945242826029513411849172299223580994042798784118784) (= (x1137 2 40) 1099511627776) (= (x1137 2 176) 95780971304118053647396689196894323976171195136475136) (= (x1137 2 55) 36028797018963968) (= (x1137 2 11) 2048) (= (x1137 2 140) 1393796574908163946345982392040522594123776) (= (x1137 2 179) 766247770432944429179173513575154591809369561091801088) (= (x1137 2 243) 14134776518227074636666380005943348126619871175004951664972849610340958208) (= (x1137 2 60) 1152921504606846976) (= (x1137 2 157) 182687704666362864775460604089535377456991567872) (= (x1137 2 45) 35184372088832) (= 32768 (x1137 2 15)) (= 1427247692705959881058285969449495136382746624 (x1137 2 150)) (= (x1137 2 56) 72057594037927936) (= 8589934592 (x1137 2 33)) (= (x1137 2 184) 24519928653854221733733552434404946937899825954937634816) (= (x1137 2 61) 2305843009213693952) (= 27606985387162255149739023449108101809804435888681546220650096895197184 (x1137 2 234)) (= 16384 (x1137 2 14)) (= 1684996666696914987166688442938726917102321526408785780068975640576 (x1137 2 220)) (= 215679573337205118357336120696157045389097155380324579848828881993728 (x1137 2 227)) (= 281474976710656 (x1137 2 48)) (= (x1137 2 26) 67108864) (= (x1137 2 181) 3064991081731777716716694054300618367237478244367204352) (= 19342813113834066795298816 (x1137 2 84)) (= (x1137 2 255) 57896044618658097711785492504343953926634992332820282019728792003956564819968) (= 46768052394588893382517914646921056628989841375232 (x1137 2 165)) (= (x1137 2 236) 110427941548649020598956093796432407239217743554726184882600387580788736) (= (x1137 2 28) 268435456) (= (x1137 2 19) 524288) (= (x1137 2 17) 131072) (= 1125899906842624 (x1137 2 50)) (= (x1137 2 238) 441711766194596082395824375185729628956870974218904739530401550323154944) (= (x1137 2 90) 1237940039285380274899124224) (= (x1137 2 217) 210624583337114373395836055367340864637790190801098222508621955072) (= (x1137 2 63) 9223372036854775808) (= 274877906944 (x1137 2 38)) (= 1532495540865888858358347027150309183618739122183602176 (x1137 2 180)) (= 1073741824 (x1137 2 30)) (= 2361183241434822606848 (x1137 2 71)) (= 7237005577332262213973186563042994240829374041602535252466099000494570602496 (x1137 2 252)) (= (x1137 2 175) 47890485652059026823698344598447161988085597568237568) (= (x1137 2 135) 43556142965880123323311949751266331066368) (= 196159429230833773869868419475239575503198607639501078528 (x1137 2 187))))
(assert (x2007 x2461))
(assert (x2007 x2419))
(assert (x2250 x2419))
(assert (= x2313 (x998 (x916 x2313))))
(assert (x2007 x1513))
(assert (= (and x1413 x2236) x45))
(assert (x747 4294967295))
(assert (= (x998 (x916 (x1714 (x2260 (+ 192 x743))))) (x1714 (x2260 (+ x743 192)))))
(assert (x2007 x681))
(assert (= (ite (> 256 x1545) (x1266 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1137 2 x1545)) 0) (x2482 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1545)))
(assert (and (x1778 x78 1461501637330902918203684832716283019655932542976) (x1905 x78 1461501637330902918203684832716283019655932542976) (= (x482 x78 1461501637330902918203684832716283019655932542976) (* 1461501637330902918203684832716283019655932542976 x78)) (x509 x78 1461501637330902918203684832716283019655932542976) (x699 x78 1461501637330902918203684832716283019655932542976) (x2495 x78 1461501637330902918203684832716283019655932542976) (and (= (- (* (- 115792089237316195423570985007226406215939081747436879206741300988257197096960) x78) (- 13407807929942597099574024998036615799469062179260703058867172057525692431234690984665004206576655545133536153655237612981186769890963219668027669280194560)) (x482 (- x78 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089237316195423570985007226406215939081747436879206741300988257197096960))) (= (x482 (- x78 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1461501637330902918203684832716283019655932542976) (- (* 1461501637330902918203684832716283019655932542976 x78) 169230328010303641331690318856389386196071598838855992136870091590247882556495704531248437872567112920983350278405979725889536)) (= (x482 x78 (- 115792089237316195423570985007226406215939081747436879206741300988257197096960)) (* (- 115792089237316195423570985007226406215939081747436879206741300988257197096960) x78)))))
(assert (x2007 x809))
(assert (=> (<= x2036 10000) (= (x779 x2036) (x916 x2036))))
(assert (= x1824 (=> (and (= (>= 224 x1818) x2465) (= x1866 (x2260 (+ x715 1))) (= (x2260 (+ x1818 1)) x1475) (= (x2263 x1197) x1687) (not (> x1475 x1687))) (and (=> (= x1770 (ite (>= 32 x1818) (x1365 (x916 (x2263 x1866)) 0) (ite (<= x1818 64) (x115 (x916 (x2263 x1866)) (x916 (x2263 (x2260 (+ x1866 32)))) 0) (ite (>= 96 x1818) (x2298 (x916 (x2263 x1866)) (x916 (x2263 (x2260 (+ x1866 32)))) (x916 (x2263 (x2260 (+ x1866 64)))) 0) (ite (>= 128 x1818) (x523 (x916 (x2263 x1866)) (x916 (x2263 (x2260 (+ 32 x1866)))) (x916 (x2263 (x2260 (+ 64 x1866)))) (x916 (x2263 (x2260 (+ 96 x1866)))) 0) (ite (<= x1818 160) (x1068 (x916 (x2263 x1866)) (x916 (x2263 (x2260 (+ x1866 32)))) (x916 (x2263 (x2260 (+ x1866 64)))) (x916 (x2263 (x2260 (+ 96 x1866)))) (x916 (x2263 (x2260 (+ 128 x1866)))) 0) (ite (>= 192 x1818) (x1254 (x916 (x2263 x1866)) (x916 (x2263 (x2260 (+ 32 x1866)))) (x916 (x2263 (x2260 (+ x1866 64)))) (x916 (x2263 (x2260 (+ x1866 96)))) (x916 (x2263 (x2260 (+ x1866 128)))) (x916 (x2263 (x2260 (+ 160 x1866)))) 0) (ite (<= x1818 224) (x314 (x916 (x2263 x1866)) (x916 (x2263 (x2260 (+ x1866 32)))) (x916 (x2263 (x2260 (+ 64 x1866)))) (x916 (x2263 (x2260 (+ x1866 96)))) (x916 (x2263 (x2260 (+ x1866 128)))) (x916 (x2263 (x2260 (+ 160 x1866)))) (x916 (x2263 (x2260 (+ 192 x1866)))) 0) (x916 x804))))))))) x1258) x2465))))
(assert (x747 x1440))
(assert (x885 x616))
(assert (x2231 (x1202 (x2260 (+ 64 x2489)))))
(assert (x747 x1613))
(assert (x2250 x1310))
(assert (x2007 x2073))
(assert (and (=> (< 0 131072) (= x470 (+ (x255 x470 131072) (* (x1266 x470 131072) 131072)))) (x1129 x470 131072) (x270 x470 131072) (x48 x470 131072)))
(assert (and (x1778 x216 1461501637330902918203684832716283019655932542976) (x1905 x216 1461501637330902918203684832716283019655932542976) (= (x482 x216 1461501637330902918203684832716283019655932542976) (* 1461501637330902918203684832716283019655932542976 x216)) (x509 x216 1461501637330902918203684832716283019655932542976) (x699 x216 1461501637330902918203684832716283019655932542976) (x2495 x216 1461501637330902918203684832716283019655932542976) (and (= (- (* (- 115792089237316195423570985007226406215939081747436879206741300988257197096960) x216) (- 13407807929942597099574024998036615799469062179260703058867172057525692431234690984665004206576655545133536153655237612981186769890963219668027669280194560)) (x482 (- x216 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089237316195423570985007226406215939081747436879206741300988257197096960))) (= (x482 (- x216 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1461501637330902918203684832716283019655932542976) (- (* 1461501637330902918203684832716283019655932542976 x216) 169230328010303641331690318856389386196071598838855992136870091590247882556495704531248437872567112920983350278405979725889536)) (= (x482 x216 (- 115792089237316195423570985007226406215939081747436879206741300988257197096960)) (* (- 115792089237316195423570985007226406215939081747436879206741300988257197096960) x216)))))
(assert (= (x1074 (x2260 (+ x402 96))) (x998 (x916 (x1074 (x2260 (+ x402 96)))))))
(assert (= (and x646 (not x68)) x119))
(assert (x877 x1096))
(assert (= (x998 (x295 x832 1)) (+ (x998 x832) 1)))
(assert (= (x565 (x2260 (+ x933 192))) 0))
(assert (x2007 x654))
(assert (x2007 x2334))
(assert (x2231 (x1832 (x2260 (+ x537 64)))))
(assert (x1330 x2490))
(assert (x2007 x986))
(assert (= 0 (x565 (x2260 (+ x1060 192)))))
(assert (x842 x645))
(assert (and (=> (< 0 2) (= x1599 (+ (x255 x1599 2) (* (x1266 x1599 2) 2)))) (x1129 x1599 2) (x270 x1599 2) (x48 x1599 2)))
(assert (x2007 x2144))
(assert (x2007 x989))
(assert (x2007 x813))
(assert (= (or x544 (and (not x1263) x1767)) x1416))
(assert (x2007 x2063))
(assert (x877 x1297))
(assert (x877 x2440))
(assert (x2007 x1577))
(assert (x2007 x1772))
(assert (x1330 x1620))
(assert (x877 x629))
(assert (and (x1778 256 x2264) (x1905 256 x2264) (= (x482 256 x2264) (* x2264 256)) (x509 256 x2264) (x699 256 x2264) (x2495 256 x2264) (and (= (- (* (- x2264 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* (- x2264 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x2264 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x2264) (- (* x2264 256) (* x2264 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 256 (- x2264 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2264 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256)))))
(assert (x747 x707))
(assert (=> (>= 10000 (x634 (x2260 (+ 32 x1718)))) (= (x779 (x634 (x2260 (+ 32 x1718)))) (x916 (x634 (x2260 (+ 32 x1718)))))))
(assert (x1750 x1194))
(assert (x2007 x2175))
(assert (x747 x1743))
(assert (x2007 x1737))
(assert (x1750 x1224))
(assert (= x942 (x998 (x916 x942))))
(assert (=> (>= 10000 x2182) (= (x916 x2182) (x779 x2182))))
(assert (x2007 x802))
(assert (x2007 x1736))
(assert (x2007 x2238))
(assert (= (x998 (x916 (x2283 320))) (x2283 320)))
(assert (x2007 x2490))
(assert (= (x998 (x916 (x660 (x2260 (+ x859 32))))) (x660 (x2260 (+ 32 x859)))))
(assert (= (x2482 x2115 192) (x1266 x2115 6277101735386680763835789423207666416102355444464034512896)))
(assert (= (x565 (x2260 (+ x743 160))) 0))
(assert (x877 x2456))
(assert (x877 (* x2328 1461501637330902918203684832716283019655932542976)))
(assert (x2007 x383))
(assert (and (x1764 x200 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2501 x200 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x200 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x200 (x1595 452312848583266388373324160190187140051835877600158453279131187530910662655 x200))) (=> (and (< 0 x200) (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0)) (and (<= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x200 452312848583266388373324160190187140051835877600158453279131187530910662656)) x200) (> (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x200 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x200 452312848583266388373324160190187140051835877600158453279131187530910662656)))) (x1404 x200 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2165 x200 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x2007 x700))
(assert (x747 x1754))
(assert (x877 x668))
(assert (and (x1778 32 x625) (x1905 32 x625) (= (x482 32 x625) (* x625 32)) (x509 32 x625) (x699 32 x625) (x2495 32 x625) (and (= (- (* (- x625 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x625 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x625 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x625) (- (* x625 32) (* x625 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 32 (- x625 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x625 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32)))))
(assert (and (=> (< 0 65536) (= x1796 (+ (x255 x1796 65536) (* (x1266 x1796 65536) 65536)))) (x1129 x1796 65536) (x270 x1796 65536) (x48 x1796 65536)))
(assert (x2007 x1108))
(assert (= (and (not x479) x35) x2060))
(assert (= x609 (=> (= (= (x779 0) x2067) x1879) (and (=> (and (and (= (x2482 x828 192) x2050) (= x1537 x876)) x1879) x934) (=> (and (and (and (= (< 0 x927) x900) (= x495 (x2260 (+ x1537 4)))) (or (and (not x900) (= x927 x228)) (and x900 (and (< x1001 4294967296) (= x228 1))))) (not x1879)) x815)))))
(assert (x2007 x447))
(assert (x747 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x998 (x295 x2145 1)) (+ 1 (x998 x2145))))
(assert (and (=> (< 0 131072) (= x696 (+ (x255 x696 131072) (* (x1266 x696 131072) 131072)))) (x1129 x696 131072) (x270 x696 131072) (x48 x696 131072)))
(assert (x2007 x466))
(assert (= 0 (x565 (x2260 (+ x1866 192)))))
(assert (x1330 x1179))
(assert (x2007 x704))
(assert (= (x916 115792089237316195423570985008687907853269984665640564039457584007908834738175) (x779 115792089237316195423570985008687907853269984665640564039457584007908834738175)))
(assert (x2007 x2153))
(assert (= (x2482 x2117 192) (x1266 x2117 6277101735386680763835789423207666416102355444464034512896)))
(assert (= (x565 (x2260 (+ x1060 32))) 0))
(assert (= x839 (and x928 x112)))
(assert (x2231 (x506 x381)))
(assert (x877 262144))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1695 (+ (x255 x1695 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1695 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1695 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1695 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1695 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x885 x1117))
(assert (x2007 x1114))
(assert (= (x998 (x779 4294967296)) 4294967296))
(assert (x2007 x1981))
(assert (x2007 x1608))
(assert (x2007 x918))
(assert (x2007 x330))
(assert (= x218 (=> (and (= (= (ite x614 1 0) 1) x1286) (= x614 (> x1677 31))) (and (=> (and (and (= (x2260 (+ 32 x403)) x1168) (= (>= 1 x995) x1704) (= x1647 (x2183 (* x1677 2))) (= (x2215 x995 x1647) x1961) (= x1307 (ite (>= 1 x995) x1408 (ite x1704 x538 x1961))) (= x1408 (x2260 (+ x995 x1647))) (= (x2183 (* x1677 8)) x783) (= x1902 (x2453 x1168)) (= (x1595 x1902 x2426) x995) (= x2426 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2482 115792089237316195423570985008687907853269984665640564039457584007913129639935 x783))) (= (x2260 (+ x1647 x995)) x538)) (not x1286)) x277) (=> (and (and (= (x1365 x304 0) x1530) (= x227 (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1677)) (= x980 (< 0 x227))) x1286) (and (=> x980 x1213) (=> (and (not x980) (and (= x2396 x1530) (= x2177 32))) x592)))))))
(assert (= x674 (or x2441 x1633 x2258 x694 x2338)))
(assert (x2007 x342))
(assert (x2007 x2488))
(assert (= 0 (x565 (x2260 (+ x2489 64)))))
(assert (x1330 x2168))
(assert (x2007 x2502))
(assert (= (or x1566 x961) x2506))
(assert (=> (>= 10000 (x1092 (x2260 (+ 192 x1060)))) (= (x916 (x1092 (x2260 (+ x1060 192)))) (x779 (x1092 (x2260 (+ x1060 192)))))))
(assert (x2231 (x1433 160)))
(assert (x2007 x202))
(assert (x885 x1356))
(assert (=> (>= 10000 (x497 (x2260 (+ x933 128)))) (= (x916 (x497 (x2260 (+ 128 x933)))) (x779 (x497 (x2260 (+ x933 128)))))))
(assert (= (x565 (x2260 (+ 160 x933))) 0))
(assert (= x2143 (or x1912 x324)))
(assert (x669 x763))
(assert (= x434 (and x104 x282)))
(assert (= x1853 (or x691 x1838 x1219 x972 x303)))
(assert (= (x565 (x2260 (+ x381 128))) 0))
(assert (= (and (not x2236) x1413) x1900))
(assert (= (and x1150 x644) x2432))
(assert (=> (>= 10000 x1022) (= (x916 x1022) (x779 x1022))))
(assert (x2007 x340))
(assert (x2007 x1428))
(assert (x747 x2456))
(assert (=> (<= (x2283 192) 10000) (= (x779 (x2283 192)) (x916 (x2283 192)))))
(assert (x2007 x1936))
(assert (and (x1764 x630 256) (x2501 x630 256) (= (* 256 (x1266 x630 256)) (- x630 (x1595 255 x630))) (=> (and (< 0 x630) (> 256 0)) (and (<= (* 256 (x1266 x630 256)) x630) (> (* 256 (x1266 x630 256)) (- x630 256)))) (x1404 x630 256) (x2165 x630 256)))
(assert (and (x1778 256 x913) (x1905 256 x913) (= (x482 256 x913) (* x913 256)) (x509 256 x913) (x699 256 x913) (x2495 256 x913) (and (= (- (* (- x913 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256) (* (- x913 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) (- x913 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 (- 115792089237316195423570985008687907853269984665640564039457584007913129639680) x913) (- (* x913 256) (* x913 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x482 256 (- x913 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x913 115792089237316195423570985008687907853269984665640564039457584007913129639936) 256)))))
(assert (x747 x1141))
(assert (and (=> (< 0 18446744073709551616) (= x803 (+ (x255 x803 18446744073709551616) (* (x1266 x803 18446744073709551616) 18446744073709551616)))) (x1129 x803 18446744073709551616) (x270 x803 18446744073709551616) (x48 x803 18446744073709551616)))
(assert (x2007 x773))
(assert (x2007 x2489))
(assert (= (=> (and (= x109 (not (> x1430 x258))) (= x1600 (x1739 x1886)) (= x258 (x2260 (+ 32 x1324)))) (and x109 x628)) x245))
(assert (= x481 (x998 (x916 x481))))
(assert (let ((x1706 (* x1116 452312848583266388373324160190187140051835877600158453279131187530910662656))) (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1706 (+ (x255 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x1706 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (x2007 x1961))
(assert (x2007 x1495))
(assert (x885 2))
(assert (x2007 x284))
(assert (x1061 x850 x1261))
(assert (and (=> (< 0 262144) (= x1149 (+ (x255 x1149 262144) (* (x1266 x1149 262144) 262144)))) (x1129 x1149 262144) (x270 x1149 262144) (x48 x1149 262144)))
(assert (x877 (* x813 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (= (=> (and (or (not x1873) x1873) (= (= 0 x2496) x1873)) x233) x831))
(assert (= (and (not x1340) x215) x1924))
(assert (= (and x1399 x345) x1812))
(assert (x2007 x665))
(assert (and (x1764 x2098 32) (x2501 x2098 32) (= (* 32 (x1266 x2098 32)) (- x2098 (x1595 31 x2098))) (=> (and (< 0 x2098) (> 32 0)) (and (<= (* 32 (x1266 x2098 32)) x2098) (> (* 32 (x1266 x2098 32)) (- x2098 32)))) (x1404 x2098 32) (x2165 x2098 32)))
(assert (x747 x1737))
(assert (x1954 x1094))
(assert (x2007 x2423))
(assert (= (x565 x1158) 0))
(assert (x2231 (x2032 (x2260 (+ 96 x2157)))))
(assert (x2007 x2203))
(assert (x2007 x2137))
(assert (= (x1092 (x2260 (+ x1060 192))) (x998 (x916 (x1092 (x2260 (+ 192 x1060)))))))
(assert (and (=> (< 0 128) (= x796 (+ (x255 x796 128) (* (x1266 x796 128) 128)))) (x1129 x796 128) (x270 x796 128) (x48 x796 128)))
(assert (x2007 x843))
(assert (x2007 x1301))
(assert (x2007 x1016))
(assert (= (=> (and (= x1372 (x2260 (+ x332 1))) (= (x2183 (* x645 2)) x332)) x633) x90))
(assert (x2007 x370))
(assert (x2007 x715))
(assert (x2007 x2018))
(assert (x2007 x1302))
(assert (x2007 x432))
(assert (= x1948 (=> (and (= x76 (x1095 x1011)) (= x1835 (> x76 0)) (= x1792 (x2260 (+ x1897 x1831)))) (and (=> (and x1835 (and (= x727 x2059) (= (x1095 x2059) x557) (= x1870 x1792) (= (> x76 32) x2373))) (and (=> (and (and (= x292 (x2260 (+ x1792 32))) (= (x663 x935) x1142) (= (> x76 64) x230) (= x935 (x2260 (+ 32 x727)))) x2373) (and (=> (and (and (= x548 (x897 x603)) (= (x2260 (+ x1792 64)) x222) (= x603 (x2260 (+ x727 64))) (= (< 96 x76) x759)) x230) (and (=> x759 x1963) (=> (not x759) x280))) (=> (not x230) x280))) (=> (not x2373) x280))) (=> (not x1835) x280)))))
(assert (x2007 x1707))
(assert (= (=> (and (or (and (and (= (x1595 65536 x1975) x1492) (= 0 x1492)) x1136) (and (and (= (x1595 4 x1975) x1645) (= 0 x1645)) (not x1136))) (= x1136 (< x1436 x111))) x1298) x1135))
(assert (x2007 x1892))
(assert (= (=> (and (= 0 x1299) (= x2166 x1450) (= x1299 (x1595 32 x2429)) (= (ite (> x100 x908) 0 x2019) x2429)) x1034) x1023))
(assert (x2007 x948))
(assert (= 4294967295 (x998 (x779 4294967295))))
(assert (x1330 x525))
(assert (= (x998 (x916 (x506 (x2260 (+ 160 x381))))) (x506 (x2260 (+ x381 160)))))
(assert (= (x998 (x916 (x2283 224))) (x2283 224)))
(assert (x2007 x487))
(assert (= x976 (=> (and (< 0 x400) (= (>= 224 x420) x2058) (= (x2283 128) x420)) (and x2058 (=> (and (or (and (= x53 x1561) (not x1463)) (and x1463 (and (> 4294967296 x608) (= 1 x1561)))) (and (= x651 (x115 (x916 x1531) x2246 0)) (= x1463 (> x53 0)) (= (x2260 (+ 32 x1195)) x2508) (= x1195 (x2260 (+ 32 x1694))) (= (x287 (- x1429 x1694)) x653) (= x1429 (x2260 (+ 32 x2508))) (= (ite (<= x420 32) (x1365 (x916 (x2283 160)) 0) (ite (<= x420 64) (x115 (x916 (x2283 160)) (x916 (x2283 192)) 0) (ite (>= 96 x420) (x2298 (x916 (x2283 160)) (x916 (x2283 192)) (x916 (x2283 224)) 0) (ite (>= 128 x420) (x523 (x916 (x2283 160)) (x916 (x2283 192)) (x916 (x2283 224)) (x916 (x2283 256)) 0) (ite (<= x420 160) (x1068 (x916 (x2283 160)) (x916 (x2283 192)) (x916 (x2283 224)) (x916 (x2283 256)) (x916 (x2283 288)) 0) (ite (<= x420 192) (x1254 (x916 (x2283 160)) (x916 (x2283 192)) (x916 (x2283 224)) (x916 (x2283 256)) (x916 (x2283 288)) (x916 (x2283 320)) 0) (ite (>= 224 x420) (x314 (x916 (x2283 160)) (x916 (x2283 192)) (x916 (x2283 224)) (x916 (x2283 256)) (x916 (x2283 288)) (x916 (x2283 320)) (x916 (x2283 352)) 0) (x916 x2041)))))))) x2246) (= (x287 (- x653 32)) x2402) (= x1183 (x2260 (+ 4 x1429))))) x2363)))))
(assert (x2007 x2253))
(assert (= x618 (=> (and (= x1231 (x1595 4294967295 x2390)) (= (x115 x1851 (x779 1) 0) x1834) (= x1915 x1197) (= x530 (x2260 (+ x1915 32))) (= (x2183 (+ (x1664 x2077 192) (x1664 x1231 160))) x2278)) x264)))
(assert (= x2391 (or x588 x622)))
(assert (= (x998 (x916 x559)) x559))
(assert (x2007 x1445))
(assert (= (and x2432 x686) x312))
(assert (x1330 x913))
(assert (x747 x2433))
(assert (x2007 x1722))
(assert (x2007 x1500))
(assert (= (and x528 x214) x1967))
(assert (x2007 x2384))
(assert (x2007 x1313))
(assert (= x571 (and x1286 x1217)))
(assert (= (x998 (x916 (x1074 x402))) (x1074 x402)))
(assert (x2007 x584))
(assert (x2007 x1450))
(assert (= (x998 (x916 (x1202 (x2260 (+ x2489 96))))) (x1202 (x2260 (+ x2489 96)))))
(assert (= (x916 65536) (x779 65536)))
(assert (x2007 x2098))
(assert (and (x1764 x2115 6277101735386680763835789423207666416102355444464034512896) (x2501 x2115 6277101735386680763835789423207666416102355444464034512896) (= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x2115 6277101735386680763835789423207666416102355444464034512896)) (- x2115 (x1595 6277101735386680763835789423207666416102355444464034512895 x2115))) (=> (and (< 0 x2115) (> 6277101735386680763835789423207666416102355444464034512896 0)) (and (<= (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x2115 6277101735386680763835789423207666416102355444464034512896)) x2115) (> (* 6277101735386680763835789423207666416102355444464034512896 (x1266 x2115 6277101735386680763835789423207666416102355444464034512896)) (- x2115 6277101735386680763835789423207666416102355444464034512896)))) (x1404 x2115 6277101735386680763835789423207666416102355444464034512896) (x2165 x2115 6277101735386680763835789423207666416102355444464034512896)))
(assert (=> (<= (x2263 (x2260 (+ x1866 128))) 10000) (= (x779 (x2263 (x2260 (+ x1866 128)))) (x916 (x2263 (x2260 (+ 128 x1866)))))))
(assert (= 0 (x565 (x2260 (+ x1866 96)))))
(assert (= (x998 (x916 x2360)) x2360))
(assert (x747 x1848))
(assert (= (x660 (x2260 (+ x859 192))) (x998 (x916 (x660 (x2260 (+ 192 x859)))))))
(assert (= x925 (and x2204 x1790)))
(assert (x2007 x794))
(assert (= (and x2320 x2386) x1007))
(assert (x877 x148))
(assert (= (and x494 x398) x1030))
(assert (x1791 x1969 x1754))
(assert (x2007 x2368))
(assert (= x1230 (and (not x1621) x485)))
(assert (x811 x1440))
(assert (x2231 (x2032 (x2260 (+ x2157 192)))))
(assert (x2007 x38))
(assert (x2007 x776))
(assert (x2007 x953))
(assert (x2007 x481))
(assert (x2007 x924))
(assert (= 0 (x565 (x2260 (+ x1718 64)))))
(assert (x2007 x402))
(assert (= x132 (=> (and (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ 1 x963))) (= x635 x2443) (= x1925 x2379)) x1995)))
(assert (x747 x1700))
(assert (x2007 x208))
(assert (x747 x763))
(assert (= (and x1067 x1676) x1393))
(assert (= (x916 (x998 x2155)) x2155))
(assert (x1330 6277101735386680763835789423207666416102355444464034512896))
(assert (x2007 x1850))
(assert (and (x1764 x1041 256) (x2501 x1041 256) (= (* 256 (x1266 x1041 256)) (- x1041 (x1595 255 x1041))) (=> (and (< 0 x1041) (> 256 0)) (and (<= (* 256 (x1266 x1041 256)) x1041) (> (* 256 (x1266 x1041 256)) (- x1041 256)))) (x1404 x1041 256) (x2165 x1041 256)))
(assert (= (and x299 x1642) x1815))
(assert (= x1833 (or x2028 x1950)))
(assert (= (=> (not (= 0 x1639)) x257) x1085))
(assert (= x1838 (and x722 (not x1906))))
(assert (x2007 x1731))
(assert (and (x1764 x1599 2) (x2501 x1599 2) (= (* 2 (x1266 x1599 2)) (- x1599 (x1595 1 x1599))) (=> (and (< 0 x1599) (> 2 0)) (and (<= (* 2 (x1266 x1599 2)) x1599) (> (* 2 (x1266 x1599 2)) (- x1599 2)))) (x1404 x1599 2) (x2165 x1599 2)))
(assert (x2007 x157))
(assert (= x27 (and x1991 x1572)))
(assert (=> (>= 10000 (x2027 x182)) (= (x779 (x2027 x182)) (x916 (x2027 x182)))))
(assert (x2007 x901))
(assert (x2007 x9))
(assert (= (and x2245 x1341) x1556))
(assert (= (x998 (x916 x1809)) x1809))
(assert (and (=> (< 0 32) (= x752 (+ (x255 x752 32) (* (x1266 x752 32) 32)))) (x1129 x752 32) (x270 x752 32) (x48 x752 32)))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2419 (+ (x255 x2419 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x1266 x2419 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1129 x2419 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x270 x2419 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x48 x2419 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (and (=> (< 0 1461501637330902918203684832716283019655932542976) (= x1157 (+ (x255 x1157 1461501637330902918203684832716283019655932542976) (* (x1266 x1157 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x1129 x1157 1461501637330902918203684832716283019655932542976) (x270 x1157 1461501637330902918203684832716283019655932542976) (x48 x1157 1461501637330902918203684832716283019655932542976)))
(assert (x2007 x1157))
(assert (x747 x191))
(assert (x2007 x2240))
(assert (x2007 x578))
(assert (x2007 x262))
(assert (and (x1764 x1128 1461501637330902918203684832716283019655932542976) (x2501 x1128 1461501637330902918203684832716283019655932542976) (= (* 1461501637330902918203684832716283019655932542976 (x1266 x1128 1461501637330902918203684832716283019655932542976)) (- x1128 (x1595 1461501637330902918203684832716283019655932542975 x1128))) (=> (and (< 0 x1128) (> 1461501637330902918203684832716283019655932542976 0)) (and (<= (* 1461501637330902918203684832716283019655932542976 (x1266 x1128 1461501637330902918203684832716283019655932542976)) x1128) (> (* 1461501637330902918203684832716283019655932542976 (x1266 x1128 1461501637330902918203684832716283019655932542976)) (- x1128 1461501637330902918203684832716283019655932542976)))) (x1404 x1128 1461501637330902918203684832716283019655932542976) (x2165 x1128 1461501637330902918203684832716283019655932542976)))
(assert (= (or x1629 x2409) x2386))
(assert (x2007 x1260))
(assert (= x904 (=> (and (= x195 x2155) (not (>= (+ x92 1) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2411 x1121)) x697)))
(assert (x2007 x433))
(assert (x2007 x2493))
(assert (x2231 x2225))
(assert (x2007 x2173))
(assert (= x2315 (and (not x2310) x223)))
(assert (x2007 x2256))
(assert (x2007 x343))
(assert (x2231 (x634 x1718)))
(assert (= (x998 (x916 (x1832 (x2260 (+ 96 x537))))) (x1832 (x2260 (+ x537 96)))))
(assert (= (or x1049 x701 x1288) x1134))
(assert (x2231 (x1714 (x2260 (+ x743 32)))))
(assert (= (or x334 x619) x1689))
(assert (x747 1))
(assert (and (=> (< 0 128) (= x833 (+ (x255 x833 128) (* (x1266 x833 128) 128)))) (x1129 x833 128) (x270 x833 128) (x48 x833 128)))
(assert (x2007 x1587))
(assert (= x1962 (or x1735 x1669)))
(assert (x2231 x942))
(assert (x877 x1713))
(assert (x885 x1668))
(assert (= (x2482 x1205 192) (x1266 x1205 6277101735386680763835789423207666416102355444464034512896)))
(assert (=> (<= x2041 10000) (= (x916 x2041) (x779 x2041))))
(assert (x2231 (x2263 (x2260 (+ x1866 128)))))
(assert (x2007 x1039))
(assert (and (=> (< 0 32) (= x1695 (+ (x255 x1695 32) (* (x1266 x1695 32) 32)))) (x1129 x1695 32) (x270 x1695 32) (x48 x1695 32)))
(assert (x2007 x1106))
(assert (= x787 (and (not x2112) x84)))
(assert (x2007 x532))
(assert (x2007 x1415))
(assert (x1954 x2442))
(assert (x877 x2218))
(assert (x2007 x211))
(assert (= x2436 (and x2381 x1221)))
(assert (x2007 x1568))
(assert (= x1287 (=> (and (not (< 18446744073709551615 x1499)) (= (x1595 18446744073709551615 x1788) x584) (= x199 (x2260 (+ x1625 x2349))) (not (= 0 x2281)) (= x1694 x199) (= (x2260 (+ 7776000 x584)) x1499) (= (x1595 115792089237316195423570985008687907853269984665640564039457584007913129639904 x712) x2349) (= x1499 x1577) (= (x827 x1625) x1788) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x326) (and (> 32 x326) (= true (<= x326 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x712 (x2260 (+ 31 x326)))) x714)))
(assert (=> (>= 10000 (x506 (x2260 (+ x381 64)))) (= (x779 (x506 (x2260 (+ 64 x381)))) (x916 (x506 (x2260 (+ 64 x381)))))))
(assert (=> (<= (x506 x381) 10000) (= (x916 (x506 x381)) (x779 (x506 x381)))))
(assert (and (x1764 x1797 2) (x2501 x1797 2) (= (* 2 (x1266 x1797 2)) (- x1797 (x1595 1 x1797))) (=> (and (< 0 x1797) (> 2 0)) (and (<= (* 2 (x1266 x1797 2)) x1797) (> (* 2 (x1266 x1797 2)) (- x1797 2)))) (x1404 x1797 2) (x2165 x1797 2)))
(assert (x885 (x1137 2 x241)))
(assert (= (+ (x998 x1155) 1) (x998 (x295 x1155 1))))
(assert (= (x2183 (* 6277101735386680763835789423207666416102355444464034512896 x2367)) (x1664 x2367 192)))
(assert (x2007 x635))
(assert (= (and x1321 x406) x1931))
(assert (=> (<= (x634 (x2260 (+ 128 x1718))) 10000) (= (x916 (x634 (x2260 (+ 128 x1718)))) (x779 (x634 (x2260 (+ x1718 128)))))))
(assert (x747 x1695))
(assert (= x1992 x1674))
(assert (x2007 x659))
(assert (= (and x2158 (not x2469)) x673))
(assert (x2007 x1011))
(assert (x877 x1743))
(assert (= (and (not x2293) x674) x2445))
(assert (x877 x1801))
(assert (and (=> (< 0 128) (= x114 (+ (x255 x114 128) (* (x1266 x114 128) 128)))) (x1129 x114 128) (x270 x114 128) (x48 x114 128)))
(assert (x1330 x1380))
(assert (= (x506 (x2260 (+ x381 96))) (x998 (x916 (x506 (x2260 (+ 96 x381)))))))
(assert (and (=> (< 0 2) (= x2449 (+ (x255 x2449 2) (* (x1266 x2449 2) 2)))) (x1129 x2449 2) (x270 x2449 2) (x48 x2449 2)))
(assert (x877 x2340))
(assert (=> (<= (x634 (x2260 (+ 192 x1718))) 10000) (= (x916 (x634 (x2260 (+ x1718 192)))) (x779 (x634 (x2260 (+ x1718 192)))))))
(assert (= x1529 (and x2204 (not x1790))))
(assert (x2007 x1141))
(assert (= x7 (and (not x1308) x1990)))
(assert (x885 x2115))
(assert (and (=> (< 0 2) (= x2314 (+ (x255 x2314 2) (* (x1266 x2314 2) 2)))) (x1129 x2314 2) (x270 x2314 2) (x48 x2314 2)))
(assert (= (x998 (x295 x798 1)) (+ 1 (x998 x798))))
(assert (=> (>= 10000 x2360) (= (x779 x2360) (x916 x2360))))
(assert (x669 x1975))
(assert (=> (<= (x1092 (x2260 (+ x1060 96))) 10000) (= (x916 (x1092 (x2260 (+ 96 x1060)))) (x779 (x1092 (x2260 (+ 96 x1060)))))))
(assert (x1711 x1647))
(assert (x2231 (x1074 (x2260 (+ 32 x402)))))
(assert (x1750 x1797))
(assert (= x961 (and x1466 (not x354))))
(assert (x2007 x859))
(assert (x2007 x627))
(assert (x1330 x1381))
(assert (x885 x135))
(assert (and (=> (< 0 18446744073709551616) (= x2433 (+ (x255 x2433 18446744073709551616) (* (x1266 x2433 18446744073709551616) 18446744073709551616)))) (x1129 x2433 18446744073709551616) (x270 x2433 18446744073709551616) (x48 x2433 18446744073709551616)))
(assert (= (=> (and (= x1283 x1887) (= x1057 x2480) (not (>= (+ 1 x1360) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) x301) x2439))
(assert (= (x565 (x2260 (+ x2366 160))) 0))
(assert (= x213 (=> (and (= (x1595 115792089237316195423570985008687907853269984665640564039457584007908834738175 x1513) x426) (= x490 (x1595 18446744073709551615 x1424)) (= (x2260 (+ 32 x806)) x1414) (= (x1595 4294967295 x1513) x243) (= (x1595 1461501637330902918203684832716283019655932542975 x2303) x1154) (= x598 (x115 x1851 (x779 1) 0)) (= (x1595 65535 x426) x254) (= x1929 (x2260 (+ x2370 (x2183 (x1664 x490 192))))) (= x2054 (= x254 0)) (= (x2260 (+ (x2183 (x1664 x216 160)) x1154)) x2370) (not (ite x1786 (not (= (x1595 65537 x1848) 65537)) x1786)) (= (x1595 1461501637330902918203684832716283019655932542975 x2106) x2122) (= x216 (x1595 4294967295 x1513)) (= x1786 (not x2054)) (= (x1595 18446744073709551615 x1424) x915) (= x1321 (= 0 x2122))) (and (=> (and (and (= x1854 (x1595 131072 x763)) (= x1386 (x2260 (+ x806 32))) (<= x488 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2482 x488 160) x763) (>= x488 0) (= x488 (x219 x2380)) (= x2380 (x115 x1851 (x779 1) 0)) (= x1927 (= x1854 131072))) (not x1321)) (and (=> (and (and (= x2382 (x779 0)) (= x969 x1386)) (not x1927)) x194) (=> (and x1927 (and (= x989 (x2183 (* 32 x2213))) (= x652 (x2260 (+ x1386 x1634))) (= (x1595 1 x2449) x1741) (= x1634 (x2260 (+ 32 x989))) (= x79 (x2260 (+ 31 x2078))) (= x1926 (< x2078 32)) (= (ite (< 0 x1741) x1351 (x1595 127 x1351)) x2078) (= x764 (x115 x1851 (x779 5) 0)) (> x1002 0) (= x2088 (= x2078 0)) (= x2449 (x281 x764)) (= (x2260 (+ x1386 32)) x1953) (= x1351 (x1266 x2449 2)) (= x1002 (x2183 (- x1741 (ite x1926 1 0)))) (= x2213 (x1266 x79 32)))) (and (=> x2088 x1635) (=> (and (not x2088) (= (< 31 x2078) x1698)) (and (=> (and (and (= (x2183 (* x2179 256)) x830) (= x2179 (x1266 x1289 256)) (= (x281 x764) x1289)) (not x1698)) x1635) (=> (and x1698 (and (= x120 (x1365 x764 0)) (= x60 (x2260 (+ x2078 x1953))) (= (x728 x120) x1118) (= (x2260 (+ 32 x1953)) x2412) (= x1761 (> x60 x2412)) (= (x295 x120 1) x74))) (and (=> (not x1761) x1358) (=> x1761 x374))))))))) (=> (and (and (= (x115 x1851 (x779 1) 0) x920) (= (x1595 131072 x1613) x192) (= (x219 x920) x19) (<= x19 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x192 131072) x1847) (>= x19 0) (= x1613 (x2482 x19 160))) x1321) (and (=> (and x1847 (and (= x1581 (x281 x473)) (= (> 32 x2074) x1802) (< 0 x2121) (= x2261 (x2260 (+ 32 x1260))) (= x1260 (x2183 (* 32 x2504))) (= (x1595 1 x1581) x1936) (= (x2260 (+ x806 x2261)) x12) (= (x1266 x72 32) x2504) (= (= 0 x2074) x355) (= x2074 (ite (> x1936 0) x1713 (x1595 127 x1713))) (= (x2183 (- x1936 (ite x1802 1 0))) x2121) (= (x115 x1851 (x779 5) 0) x473) (= x567 (x2260 (+ 32 x806))) (= (x2260 (+ x2074 31)) x72) (= x1713 (x1266 x1581 2)))) (and (=> x355 x1660) (=> (and (= x1604 (> x2074 31)) (not x355)) (and (=> (and x1604 (and (= x936 (x728 x2105)) (= (> x1570 x1377) x845) (= x1377 (x2260 (+ 32 x567))) (= (x1365 x473 0) x2105) (= (x2260 (+ x2074 x567)) x1570) (= (x295 x2105 1) x914))) (and (=> x845 x1364) (=> (not x845) x2475))) (=> (and (and (= x1086 (x281 x473)) (= (x1266 x1086 256) x130) (= (x2183 (* x130 256)) x2181)) (not x1604)) x1660))))) (=> (and (and (= x1456 (x779 0)) (= x806 x1370)) (not x1847)) x2375)))))))
(assert (= (x998 (x916 (x2032 (x2260 (+ x2157 64))))) (x2032 (x2260 (+ 64 x2157)))))
(assert (x2007 x1640))
(assert (x2007 x538))
(assert (x2007 x1538))
(assert (=> (>= 10000 (x1714 (x2260 (+ 64 x743)))) (= (x916 (x1714 (x2260 (+ x743 64)))) (x779 (x1714 (x2260 (+ 64 x743)))))))
(assert (x2007 x222))
(assert (= (or x1883 x973) x16))
(assert (= (=> (= (= x468 (x779 0)) x289) (and (=> (and x289 (and (= x1915 x1153) (= (x2482 x793 192) x2077))) x2047) (=> (and (not x289) (and (or (and (not x1341) (= x930 x211)) (and (and (< x138 4294967296) (= x930 1)) x1341)) (and (= x423 (x2260 (+ x1153 4))) (= (> x211 0) x1341)))) x642))) x1659))
(assert (x2231 (x506 (x2260 (+ x381 96)))))
(assert (and (=> (< 0 131072) (= x1480 (+ (x255 x1480 131072) (* (x1266 x1480 131072) 131072)))) (x1129 x1480 131072) (x270 x1480 131072) (x48 x1480 131072)))
(assert (= (x779 1058533858861509001837889330765714424124041949802528273061784713247848398848) (x916 1058533858861509001837889330765714424124041949802528273061784713247848398848)))
(assert (= (=> (and (= x1637 x131) (not (>= (+ 1 x2124) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x2008 x738)) x1542) x2259))
(assert (= (and x985 x741) x2034))
(assert (x885 x307))
(assert (x2007 x968))
(assert (x2231 (x634 (x2260 (+ x1718 32)))))
(assert (= x838 (or x377 x2458)))
(assert (x2007 x1025))
(assert (and (=> (< 0 65536) (= x426 (+ (x255 x426 65536) (* (x1266 x426 65536) 65536)))) (x1129 x426 65536) (x270 x426 65536) (x48 x426 65536)))
(assert (= x1630 (and x385 (not x1327))))
(assert (and (x1764 x1725 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2501 x1725 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1725 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1725 (x1595 452312848583266388373324160190187140051835877600158453279131187530910662655 x1725))) (=> (and (< 0 x1725) (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0)) (and (<= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1725 452312848583266388373324160190187140051835877600158453279131187530910662656)) x1725) (> (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x1266 x1725 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1725 452312848583266388373324160190187140051835877600158453279131187530910662656)))) (x1404 x1725 452312848583266388373324160190187140051835877600158453279131187530910662656) (x2165 x1725 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (= x592 (=> (and (= x1067 (> x1677 x227)) (or (not x1067) (and x1067 (and (= x2168 (x1595 31 x1677)) (= x582 (x2183 (* 8 x2168))) (= x1754 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2482 115792089237316195423570985008687907853269984665640564039457584007913129639935 x582))) (= x524 (x1595 x1969 x1754)) (= x1969 (x2453 x1409)) (= x1409 (x2260 (+ x403 x2177))))))) x1421)))
(assert (x2007 x61))
(assert (=> (>= 10000 (x1433 352)) (= (x916 (x1433 352)) (x779 (x1433 352)))))
(assert (x2007 x557))
(assert (= (+ 1 (x998 x520)) (x998 (x295 x520 1))))
(assert (= (x998 (x779 115792089237316195423570985008687907853269984665640564039457584007908834738175)) 115792089237316195423570985008687907853269984665640564039457584007908834738175))
(assert (= (and x1606 x1029) x203))
(assert (x2007 x1645))
(assert (= x201 (x916 (x998 x201))))
(assert (= (x1266 x793 6277101735386680763835789423207666416102355444464034512896) (x2482 x793 192)))
(assert (x2007 x2304))
(assert (= x1344 (and x244 x1077)))
(assert (x2007 x680))
(assert (x885 x1395))
(assert (x1330 x1379))
(assert (x2007 x1127))
(assert (= x327 (and x1241 (not x2350))))
(assert (= x2441 (and x174 x1534)))
(assert (= x1559 (and x2252 x1628)))
(assert (x2007 x488))
(assert (= (x916 4294836223) (x779 4294836223)))
(assert (and (x1764 x828 1461501637330902918203684832716283019655932542976) (x2501 x828 1461501637330902918203684832716283019655932542976) (= (* 1461501637330902918203684832716283019655932542976 (x1266 x828 1461501637330902918203684832716283019655932542976)) (- x828 (x1595 1461501637330902918203684832716283019655932542975 x828))) (=> (and (< 0 x828) (> 1461501637330902918203684832716283019655932542976 0)) (and (<= (* 1461501637330902918203684832716283019655932542976 (x1266 x828 1461501637330902918203684832716283019655932542976)) x828) (> (* 1461501637330902918203684832716283019655932542976 (x1266 x828 1461501637330902918203684832716283019655932542976)) (- x828 1461501637330902918203684832716283019655932542976)))) (x1404 x828 1461501637330902918203684832716283019655932542976) (x2165 x828 1461501637330902918203684832716283019655932542976)))
(assert (x2007 x516))
(assert (= x1609 (=> (and (and (= (x1595 131072 x1975) x1916) (= (= x1916 131072) x354)) (or (and x354 (and (= x1027 x1436) (not (> x1027 18446744073709551615)) (= (x287 (- x2367 7776000)) x1027))) (and (not x354) (= x2367 x1436)))) x1135)))
(assert (and (= 27 (x482 9 3)) (= 9 (x482 3 3)) (= (x482 27 3) 81) (= 81 (x482 9 9))))
(assert (= (x998 (x916 (x497 (x2260 (+ x933 192))))) (x497 (x2260 (+ 192 x933)))))
(assert (= x670 (or x1133 x860)))
(assert (x2231 (x2032 (x2260 (+ x2157 128)))))
(assert (= x866 (and x1136 x2506)))
(assert (x747 x2426))
(assert (x877 x1424))
(assert (x877 2))
(assert (x2231 (x1714 x743)))
(assert (=> (<= (x2263 (x2260 (+ 160 x1866))) 10000) (= (x779 (x2263 (x2260 (+ 160 x1866)))) (x916 (x2263 (x2260 (+ 160 x1866)))))))
(assert (x2007 x505))
(assert (= (x565 288) 0))
(assert (x747 x1808))
(assert (x2007 x243))
(assert (= (and x814 (not x750)) x588))
(assert (= x1400 (and x1279 (not x70))))
(assert (x2007 x1545))
(assert (x2007 x498))
(assert (= x349 (and x94 x352)))
(assert (= (and x1466 x354) x1566))
(assert (= (and x1879 x22) x1735))
(assert (= (and (not x2497) x1957) x1508))
(assert (= x1279 (or x929 x106)))
(assert (x2250 x1141))
(assert (= (=> (and (= x168 (x1595 1461501637330902918203684832716283019655932542975 x1484)) (= (x1595 1461501637330902918203684832716283019655932542975 x2106) x1858) (= x2189 (x1595 1461501637330902918203684832716283019655932542975 x2303)) (= (x287 (- x168 x1858)) x265) (= (> x265 0) x1221) (= x1316 (x1595 1461501637330902918203684832716283019655932542975 x1484)) (= x1316 x2189)) (and (=> (and x1221 (and (= x2502 (x2260 (+ x2348 (x2183 (x1664 x2367 192))))) (= x2360 (x1595 1461501637330902918203684832716283019655932542975 x2106)) (= (x1595 4294967295 x1975) x1379) (= (x2260 (+ (x2183 (x1664 x1379 160)) x954)) x2348) (= (x152 (x916 x2360)) x554) (= x562 (x2260 (+ x1598 32))) (= x954 (x1595 1461501637330902918203684832716283019655932542975 x2106)) (= (> x554 0) x1459))) (and (=> (and x1459 (and (or (and (and (< x62 4294967296) (= (x2086 (x916 x160)) x2113) (= (>= (x1367 (x916 x160)) x2113) x717) (= (x2086 (x916 x534)) x627) x717 (= (= (x1367 (x916 x534)) x627) x577) x577) x1855) (not x1855)) (and (= (> x2496 0) x1855) (= x534 (x1595 1461501637330902918203684832716283019655932542975 x2106)) (= x2097 (x2260 (+ 32 x1762))) (= (x2260 (+ x1608 32)) x809) (= x1762 (x2260 (+ x1598 4))) (= x899 (x1595 1461501637330902918203684832716283019655932542975 x2303)) (= (x2260 (+ x2097 32)) x1608) (= x812 (x2260 (+ x1762 160))) (= (x2260 (+ x809 32)) x2406) (= (x2260 (+ 32 x812)) x379)))) x831) (=> (not x1459) x599))) (=> (not x1221) x599))) x1298))
(assert (x2007 x2218))
(assert (x2007 x2079))
(check-sat)
(exit)
