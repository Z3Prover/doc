(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x3042 0)) (((x7158 (x6290 x3042) (x6876 x3042) (x1150 Int)) (x707 (x8654 x3042) (x2828 Int)) (x5361 (x1704 Int)))))
(declare-fun x1106 () Bool)
(declare-fun x7527 () Bool)
(declare-fun x7975 () x3042)
(declare-fun x1723 () Int)
(declare-fun x2913 () Bool)
(declare-fun x7794 () x3042)
(declare-fun x7872 () Bool)
(declare-fun x7628 (Int) Int)
(declare-fun x582 () Bool)
(declare-fun x3213 () Bool)
(declare-fun x7711 () Bool)
(declare-fun x5830 () Bool)
(declare-fun x4803 () Int)
(declare-fun x8484 () Int)
(declare-fun x2881 () Bool)
(declare-fun x6997 () x3042)
(declare-fun x1481 () Int)
(declare-fun x3270 () x3042)
(declare-fun x5569 () Bool)
(declare-fun x5360 () Int)
(declare-fun x3564 () Bool)
(declare-fun x7915 () Int)
(declare-fun x5169 () Int)
(declare-fun x3129 () Int)
(declare-fun x6902 () x3042)
(declare-fun x4115 () Bool)
(declare-fun x5142 () x3042)
(declare-fun x3188 () Int)
(declare-fun x4942 () Int)
(declare-fun x7000 () Bool)
(declare-fun x3867 () Int)
(declare-fun x1936 () Bool)
(declare-fun x4294 () Bool)
(declare-fun x6589 () Int)
(declare-fun x2494 () Int)
(declare-fun x5213 () Int)
(declare-fun x5454 () Int)
(declare-fun x7331 () Bool)
(declare-fun x5465 () Int)
(declare-fun x1755 () x3042)
(declare-fun x8985 () Bool)
(declare-fun x3946 () Bool)
(declare-fun x4605 () x3042)
(declare-fun x8387 () Bool)
(declare-fun x4193 () Int)
(declare-fun x3880 () Bool)
(declare-fun x6456 () x3042)
(declare-fun x4377 () Bool)
(declare-fun x4219 () Bool)
(declare-fun x2138 () Int)
(declare-fun x6265 () Int)
(declare-fun x6161 () Bool)
(declare-fun x8706 () Int)
(declare-fun x7123 () Int)
(declare-fun x7957 () Bool)
(declare-fun x7138 () Bool)
(declare-fun x2394 () Bool)
(declare-fun x8954 () Int)
(declare-fun x3846 () Bool)
(declare-fun x605 () Bool)
(declare-fun x2896 () Int)
(declare-fun x6081 () x3042)
(declare-fun x2306 () x3042)
(declare-fun x1160 () Int)
(declare-fun x8937 () Int)
(declare-fun x545 () Bool)
(declare-fun x4514 () Bool)
(declare-fun x1967 () Bool)
(declare-fun x2656 () Int)
(declare-fun x3650 () Bool)
(declare-fun x371 () Int)
(declare-fun x4410 () Bool)
(declare-fun x2952 () x3042)
(declare-fun x6627 () Bool)
(declare-fun x7868 () Bool)
(declare-fun x4136 () Int)
(declare-fun x4225 () Bool)
(declare-fun x2904 () Bool)
(declare-fun x8902 () Bool)
(declare-fun x7590 () Int)
(declare-fun x8279 () Bool)
(declare-fun x4157 () Int)
(declare-fun x3010 () x3042)
(declare-fun x2976 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x3870 () Bool)
(declare-fun x6421 () Bool)
(declare-fun x2419 () Bool)
(declare-fun x735 () Bool)
(declare-fun x3637 () Bool)
(declare-fun x4641 () Bool)
(declare-fun x1010 () Int)
(declare-fun x494 () Int)
(declare-fun x6234 () Bool)
(declare-fun x8832 () Bool)
(declare-fun x8244 () Int)
(declare-fun x356 () Bool)
(declare-fun x2417 () Bool)
(declare-fun x2647 () Bool)
(declare-fun x8326 () Int)
(declare-fun x4295 () Bool)
(declare-fun x8796 () Int)
(declare-fun x1891 () Int)
(declare-fun x7037 () Int)
(declare-fun x6312 () Int)
(declare-fun x8287 () Int)
(declare-fun x5292 () Bool)
(declare-fun x5289 () Bool)
(declare-fun x187 () Int)
(declare-fun x5974 () Int)
(declare-fun x551 () Int)
(declare-fun x1220 () Int)
(declare-fun x2843 () Bool)
(declare-fun x7631 () Bool)
(declare-fun x9148 () Int)
(declare-fun x6262 () Bool)
(declare-fun x8327 () x3042)
(declare-fun x372 () Bool)
(declare-fun x8963 () Bool)
(declare-fun x2052 () Bool)
(declare-fun x978 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x6825 () Bool)
(declare-fun x6131 () Bool)
(declare-fun x4002 () Bool)
(declare-fun x2873 () Int)
(declare-fun x1801 () Bool)
(declare-fun x3099 () Bool)
(declare-fun x2398 () Int)
(declare-fun x4081 () Bool)
(declare-fun x7351 () Bool)
(declare-fun x7930 () Bool)
(declare-fun x3180 () Int)
(declare-fun x3493 () Int)
(declare-fun x6170 () Bool)
(declare-fun x4764 () Bool)
(declare-fun x7168 () Bool)
(declare-fun x3512 () Int)
(declare-fun x6311 () Bool)
(declare-fun x2992 () Bool)
(declare-fun x3245 () x3042)
(declare-fun x3552 () Bool)
(declare-fun x5977 () Bool)
(declare-fun x2880 () Bool)
(declare-fun x2072 () Int)
(declare-fun x5397 () Bool)
(declare-fun x8980 () Int)
(declare-fun x5425 () Int)
(declare-fun x2573 () Bool)
(declare-fun x7323 () Bool)
(declare-fun x358 () Int)
(declare-fun x6972 () Int)
(declare-fun x795 () Int)
(declare-fun x3883 () Bool)
(declare-fun x3629 () Bool)
(declare-fun x7892 () Bool)
(declare-fun x353 () Bool)
(declare-fun x3806 () Int)
(declare-fun x7555 () Bool)
(declare-fun x6470 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x520 () x3042)
(declare-fun x1068 () Bool)
(declare-fun x8466 () Bool)
(declare-fun x1828 () x3042)
(declare-fun x3157 () Bool)
(declare-fun x738 () Int)
(declare-fun x6911 () Bool)
(declare-fun x2645 () Bool)
(declare-fun x8291 () Bool)
(declare-fun x2014 () Int)
(declare-fun x8204 () Bool)
(declare-fun x5352 () Bool)
(declare-fun x7694 () Bool)
(declare-fun x2169 () Bool)
(declare-fun x5870 () Bool)
(declare-fun x895 () Int)
(declare-fun x5518 () Int)
(declare-fun x5282 () Bool)
(declare-fun x2975 () x3042)
(declare-fun x1750 (x3042) Int)
(declare-fun x7795 () Bool)
(declare-fun x725 () Int)
(declare-fun x7162 () Int)
(declare-fun x2786 () Bool)
(declare-fun x4734 () Bool)
(declare-fun x614 () x3042)
(declare-fun x3337 () Bool)
(declare-fun x479 () x3042)
(declare-fun x2956 () Int)
(declare-fun x5860 () x3042)
(declare-fun x3869 () Bool)
(declare-fun x1528 () Int)
(declare-fun x7302 () Bool)
(declare-fun x7554 () Bool)
(declare-fun x7163 () Bool)
(declare-fun x1145 () Int)
(declare-fun x8241 () Bool)
(declare-fun x7345 () Int)
(declare-fun x3442 () Bool)
(declare-fun x4105 () Int)
(declare-fun x1716 () Int)
(declare-fun x3207 () Bool)
(declare-fun x7386 () x3042)
(declare-fun x3464 () Int)
(declare-fun x5449 () Bool)
(declare-fun x3624 () Int)
(declare-fun x7548 () Int)
(declare-fun x5205 () Int)
(declare-fun x1254 () Bool)
(declare-fun x3294 () Int)
(declare-fun x8360 () Bool)
(declare-fun x6519 () Int)
(declare-fun x6797 () Int)
(declare-fun x7170 () Bool)
(declare-fun x8496 () Bool)
(declare-fun x6232 () Int)
(declare-fun x1101 () Bool)
(declare-fun x3838 () x3042)
(declare-fun x3582 () Bool)
(declare-fun x2165 () Int)
(declare-fun x3218 () Bool)
(declare-fun x4752 () Int)
(declare-fun x3076 () x3042)
(declare-fun x3530 () Bool)
(declare-fun x1904 () Bool)
(declare-fun x1113 () Bool)
(declare-fun x20 () x3042)
(declare-fun x4315 () Bool)
(declare-fun x6841 () Bool)
(declare-fun x644 () Int)
(declare-fun x1525 () Int)
(declare-fun x8115 () Int)
(declare-fun x3659 () Int)
(declare-fun x2401 () Bool)
(declare-fun x2937 () Int)
(declare-fun x6024 () Int)
(declare-fun x5167 () Int)
(declare-fun x6747 () x3042)
(declare-fun x6742 () Int)
(declare-fun x4236 () Bool)
(declare-fun x7867 () x3042)
(declare-fun x1426 () Bool)
(declare-fun x300 () Bool)
(declare-fun x9013 () Int)
(declare-fun x3104 () Int)
(declare-fun x835 () Bool)
(declare-fun x2535 () Int)
(declare-fun x6189 () Bool)
(declare-fun x2766 () Int)
(declare-fun x3741 () Int)
(declare-fun x480 () Bool)
(declare-fun x4560 () x3042)
(declare-fun x8758 () Bool)
(declare-fun x37 () Bool)
(declare-fun x2844 () Int)
(declare-fun x7030 () Int)
(declare-fun x6703 () Int)
(declare-fun x1685 () Bool)
(declare-fun x8539 () Bool)
(declare-fun x5652 () Bool)
(declare-fun x4799 () Bool)
(declare-fun x6787 (x3042) Int)
(declare-fun x2575 () Int)
(declare-fun x2339 (x3042) Int)
(declare-fun x1245 () Bool)
(declare-fun x6836 () Int)
(declare-fun x8885 () Bool)
(declare-fun x4538 () Bool)
(declare-fun x4531 () Int)
(declare-fun x1202 () Int)
(declare-fun x4513 () Bool)
(declare-fun x6259 () Int)
(declare-fun x8317 () Int)
(declare-fun x7212 () Bool)
(declare-fun x7855 () Bool)
(declare-fun x7918 () Bool)
(declare-fun x9056 () Bool)
(declare-fun x7192 () Bool)
(declare-fun x8349 () Int)
(declare-fun x470 () Int)
(declare-fun x2004 () Int)
(declare-fun x5647 () Int)
(declare-fun x1986 () Bool)
(declare-fun x8563 () Bool)
(declare-fun x1599 () Int)
(declare-fun x1575 () Bool)
(declare-fun x3506 () Bool)
(declare-fun x4955 () Int)
(declare-fun x2890 () x3042)
(declare-fun x5914 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x6785 () x3042)
(declare-fun x5140 () x3042)
(declare-fun x2299 () Int)
(declare-fun x7733 () Bool)
(declare-fun x7560 () Int)
(declare-fun x7929 () Bool)
(declare-fun x1660 () Int)
(declare-fun x3663 (x3042) Int)
(declare-fun x6111 () Int)
(declare-fun x169 () Int)
(declare-fun x5060 () x3042)
(declare-fun x453 () Bool)
(declare-fun x6353 () x3042)
(declare-fun x6181 () Bool)
(declare-fun x6855 () Bool)
(declare-fun x7900 () Bool)
(declare-fun x2640 () Bool)
(declare-fun x6729 () Bool)
(declare-fun x4733 () Bool)
(declare-fun x9266 (Int) Int)
(declare-fun x6583 () x3042)
(declare-fun x252 () Bool)
(declare-fun x204 () Int)
(declare-fun x2630 () Bool)
(declare-fun x8604 () Bool)
(declare-fun x3151 () Bool)
(declare-fun x3489 () Bool)
(declare-fun x8463 () Bool)
(declare-fun x1611 () Bool)
(declare-fun x3461 () Int)
(declare-fun x182 () x3042)
(declare-fun x1978 () x3042)
(declare-fun x9255 () Bool)
(declare-fun x4428 () Int)
(declare-fun x2080 () Int)
(declare-fun x4022 () x3042)
(declare-fun x2101 () Bool)
(declare-fun x8462 () Bool)
(declare-fun x9172 () x3042)
(declare-fun x3604 () Bool)
(declare-fun x8229 () Int)
(declare-fun x3852 () Bool)
(declare-fun x5818 () Bool)
(declare-fun x5436 () Bool)
(declare-fun x1433 () Int)
(declare-fun x6983 () Int)
(declare-fun x7922 () Int)
(declare-fun x6760 () Int)
(declare-fun x2607 () Int)
(declare-fun x2201 () Bool)
(declare-fun x4271 () Int)
(declare-fun x2967 () Bool)
(declare-fun x2666 () x3042)
(declare-fun x7172 () Int)
(declare-fun x8415 () Bool)
(declare-fun x573 () Bool)
(declare-fun x762 () Bool)
(declare-fun x6473 () Int)
(declare-fun x7119 () Int)
(declare-fun x793 () Int)
(declare-fun x5972 () Int)
(declare-fun x7217 () Bool)
(declare-fun x3049 () x3042)
(declare-fun x3725 () Int)
(declare-fun x2833 () Bool)
(declare-fun x2112 () Bool)
(declare-fun x7169 () Bool)
(declare-fun x4705 () x3042)
(declare-fun x4840 () Int)
(declare-fun x8143 () Bool)
(declare-fun x3236 () Bool)
(declare-fun x3140 () Int)
(declare-fun x2081 () x3042)
(declare-fun x6986 () Bool)
(declare-fun x2217 () Int)
(declare-fun x8754 () Int)
(declare-fun x6979 () Int)
(declare-fun x8049 () Bool)
(declare-fun x4669 () Int)
(declare-fun x9213 () Bool)
(declare-fun x5416 () Bool)
(declare-fun x816 () Bool)
(declare-fun x1508 () Bool)
(declare-fun x3656 () Int)
(declare-fun x8955 () Int)
(declare-fun x7031 () Int)
(declare-fun x5144 () Int)
(declare-fun x2088 () Int)
(declare-fun x7327 () x3042)
(declare-fun x838 () Bool)
(declare-fun x6132 () Int)
(declare-fun x7042 () Bool)
(declare-fun x1227 () x3042)
(declare-fun x3713 () Int)
(declare-fun x8414 () Bool)
(declare-fun x1804 () Bool)
(declare-fun x1996 () Int)
(declare-fun x7004 () x3042)
(declare-fun x3300 () Bool)
(declare-fun x1773 () Int)
(declare-fun x6879 () Int)
(declare-fun x3455 () Bool)
(declare-fun x2564 () Int)
(declare-fun x1941 () Bool)
(declare-fun x506 () Bool)
(declare-fun x8862 () Bool)
(declare-fun x3371 () Int)
(declare-fun x5266 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x720 () Int)
(declare-fun x2861 () x3042)
(declare-fun x3061 () Bool)
(declare-fun x398 () Int)
(declare-fun x6301 () x3042)
(declare-fun x1290 () x3042)
(declare-fun x3859 () Bool)
(declare-fun x3710 () x3042)
(declare-fun x8693 () Bool)
(declare-fun x6932 () Bool)
(declare-fun x3153 () Int)
(declare-fun x7371 () Int)
(declare-fun x2091 () Bool)
(declare-fun x6827 () x3042)
(declare-fun x969 () x3042)
(declare-fun x3834 () Bool)
(declare-fun x2791 () Bool)
(declare-fun x4628 () Bool)
(declare-fun x7285 () Int)
(declare-fun x224 () Bool)
(declare-fun x7296 () x3042)
(declare-fun x7887 () Int)
(declare-fun x3842 () Bool)
(declare-fun x6631 () Bool)
(declare-fun x6698 () Int)
(declare-fun x1435 () Int)
(declare-fun x8062 () Bool)
(declare-fun x3882 () x3042)
(declare-fun x1505 () Bool)
(declare-fun x9262 () Int)
(declare-fun x6957 () Int)
(declare-fun x6605 () Bool)
(declare-fun x5918 () Int)
(declare-fun x3381 () Bool)
(declare-fun x2192 () Bool)
(declare-fun x999 () Bool)
(declare-fun x1726 () Int)
(declare-fun x6078 () Bool)
(declare-fun x4318 () Bool)
(declare-fun x4082 () x3042)
(declare-fun x2180 () Bool)
(declare-fun x7161 () Int)
(declare-fun x7292 () Int)
(declare-fun x9157 () Int)
(declare-fun x6671 () Bool)
(declare-fun x7515 () Bool)
(declare-fun x5200 () Bool)
(declare-fun x7532 () Int)
(declare-fun x7016 () Bool)
(declare-fun x6521 () x3042)
(declare-fun x6668 () Bool)
(declare-fun x4512 () Bool)
(declare-fun x3237 () Bool)
(declare-fun x3133 () Int)
(declare-fun x2922 () Bool)
(declare-fun x3305 () Int)
(declare-fun x3260 () Bool)
(declare-fun x3169 () Int)
(declare-fun x5503 () x3042)
(declare-fun x5539 () Bool)
(declare-fun x6599 () Int)
(declare-fun x924 () Bool)
(declare-fun x6249 () Int)
(declare-fun x7710 () Bool)
(declare-fun x3688 () Bool)
(declare-fun x5800 () Int)
(declare-fun x5547 () Int)
(declare-fun x285 () Bool)
(declare-fun x9102 () Int)
(declare-fun x3975 () Bool)
(declare-fun x45 () Int)
(declare-fun x1381 () Bool)
(declare-fun x7129 () Int)
(declare-fun x1908 () Bool)
(declare-fun x3819 () x3042)
(declare-fun x2654 () Int)
(declare-fun x2782 () Bool)
(declare-fun x4976 () Bool)
(declare-fun x7400 () Bool)
(declare-fun x3825 () Int)
(declare-fun x5849 () Bool)
(declare-fun x3040 () Bool)
(declare-fun x1279 () Int)
(declare-fun x6269 () Bool)
(declare-fun x7177 () Bool)
(declare-fun x5635 (Int) Int)
(declare-fun x5776 () Int)
(declare-fun x2496 () Bool)
(declare-fun x2246 () x3042)
(declare-fun x1007 () Int)
(declare-fun x6946 () Int)
(declare-fun x2592 () Int)
(declare-fun x3256 () Bool)
(declare-fun x5040 () Bool)
(declare-fun x7894 () Bool)
(declare-fun x5568 () Bool)
(declare-fun x5239 () Int)
(declare-fun x1539 () Int)
(declare-fun x267 () Bool)
(declare-fun x3087 () Int)
(declare-fun x6953 () Int)
(declare-fun x6387 () Bool)
(declare-fun x8744 () Bool)
(declare-fun x2020 () Bool)
(declare-fun x4424 () Int)
(declare-fun x7737 () Bool)
(declare-fun x6991 (Int) Int)
(declare-fun x4337 () x3042)
(declare-fun x8541 () Int)
(declare-fun x5639 () Int)
(declare-fun x3416 () Bool)
(declare-fun x4112 () Bool)
(declare-fun x9206 () Bool)
(declare-fun x8398 () Int)
(declare-fun x4784 () Int)
(declare-fun x688 () x3042)
(declare-fun x5963 () Bool)
(declare-fun x170 () Bool)
(declare-fun x8849 () Int)
(declare-fun x306 () Int)
(declare-fun x9043 () Bool)
(declare-fun x5177 () x3042)
(declare-fun x5688 () x3042)
(declare-fun x1114 () Int)
(declare-fun x6743 () Int)
(declare-fun x389 () Bool)
(declare-fun x6007 () x3042)
(declare-fun x1414 () Bool)
(declare-fun x6669 () Int)
(declare-fun x2945 () Int)
(declare-fun x6557 () Bool)
(declare-fun x8441 (x3042) Int)
(declare-fun x6062 () Int)
(declare-fun x4043 () x3042)
(declare-fun x3749 () Bool)
(declare-fun x2604 () Bool)
(declare-fun x1586 () Bool)
(declare-fun x5102 () Bool)
(declare-fun x2554 () Bool)
(declare-fun x8469 () Bool)
(declare-fun x5300 () Int)
(declare-fun x7167 () Bool)
(declare-fun x6031 () Bool)
(declare-fun x3022 () Bool)
(declare-fun x3890 () Bool)
(declare-fun x867 () Int)
(declare-fun x2096 () Int)
(declare-fun x6552 () x3042)
(declare-fun x695 () Int)
(declare-fun x4763 () Int)
(declare-fun x7356 () Int)
(declare-fun x8769 () Bool)
(declare-fun x4379 () Bool)
(declare-fun x436 () Int)
(declare-fun x4374 () Bool)
(declare-fun x5624 () Bool)
(declare-fun x4970 () Bool)
(declare-fun x9226 () Int)
(declare-fun x9258 () Bool)
(declare-fun x3406 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x6199 () x3042)
(declare-fun x8528 () Int)
(declare-fun x5019 () Bool)
(declare-fun x4174 () Int)
(declare-fun x2017 () Bool)
(declare-fun x3795 () Int)
(declare-fun x4637 () Bool)
(declare-fun x5823 () Bool)
(declare-fun x7339 () Bool)
(declare-fun x3817 () Bool)
(declare-fun x7283 () Bool)
(declare-fun x931 () Int)
(declare-fun x5522 () Bool)
(declare-fun x1930 () Bool)
(declare-fun x699 () Int)
(declare-fun x3728 () Bool)
(declare-fun x3500 () Int)
(declare-fun x7311 () Bool)
(declare-fun x7962 () Bool)
(declare-fun x6406 () Bool)
(declare-fun x4034 () Bool)
(declare-fun x2614 () Bool)
(declare-fun x9170 () Int)
(declare-fun x3773 () Bool)
(declare-fun x4966 () Bool)
(declare-fun x7971 () Bool)
(declare-fun x2995 () Int)
(declare-fun x3428 () Bool)
(declare-fun x6611 () Int)
(declare-fun x4936 () Int)
(declare-fun x1267 () Bool)
(declare-fun x3088 () Int)
(declare-fun x4307 () Bool)
(declare-fun x395 () Bool)
(declare-fun x1332 () Int)
(declare-fun x5881 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x7748 () x3042)
(declare-fun x715 () Int)
(declare-fun x1472 () Bool)
(declare-fun x6085 () Bool)
(declare-fun x3548 () Int)
(declare-fun x7822 () Bool)
(declare-fun x4478 () Bool)
(declare-fun x8871 () Int)
(declare-fun x7107 () Int)
(declare-fun x279 () Int)
(declare-fun x2821 () Bool)
(declare-fun x4352 () x3042)
(declare-fun x3065 () Int)
(declare-fun x1713 () Bool)
(declare-fun x1167 () x3042)
(declare-fun x3804 () Int)
(declare-fun x5048 () Int)
(declare-fun x8976 () Bool)
(declare-fun x8492 () Bool)
(declare-fun x5625 () Int)
(declare-fun x6744 () Int)
(declare-fun x4009 () Bool)
(declare-fun x869 () Bool)
(declare-fun x3823 () Bool)
(declare-fun x4414 () Int)
(declare-fun x7661 () Int)
(declare-fun x6942 () x3042)
(declare-fun x8728 () x3042)
(declare-fun x4744 (x3042) Int)
(declare-fun x6011 () Bool)
(declare-fun x2371 () Bool)
(declare-fun x929 () Int)
(declare-fun x7790 () Int)
(declare-fun x4018 () Int)
(declare-fun x8631 (Int) Int)
(declare-fun x9050 () Bool)
(declare-fun x3414 () x3042)
(declare-fun x608 () Int)
(declare-fun x4693 () x3042)
(declare-fun x3007 () Int)
(declare-fun x1684 () Bool)
(declare-fun x282 () x3042)
(declare-fun x905 () x3042)
(declare-fun x7001 () Bool)
(declare-fun x4587 () Bool)
(declare-fun x4054 () Bool)
(declare-fun x5548 () Bool)
(declare-fun x1794 () Bool)
(declare-fun x3697 () Bool)
(declare-fun x7541 () Bool)
(declare-fun x6053 () Bool)
(declare-fun x2315 (x3042) Int)
(declare-fun x6117 () Int)
(declare-fun x3193 () Bool)
(declare-fun x8760 () Int)
(declare-fun x4663 () x3042)
(declare-fun x5098 () Bool)
(declare-fun x4218 () Bool)
(declare-fun x6423 () Int)
(declare-fun x3460 () Bool)
(declare-fun x7330 () Bool)
(declare-fun x3584 () Int)
(declare-fun x1688 () Bool)
(declare-fun x2264 () Bool)
(declare-fun x7242 () Int)
(declare-fun x5532 () Int)
(declare-fun x6960 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x6095 () Bool)
(declare-fun x4922 () Bool)
(declare-fun x8433 () Int)
(declare-fun x5302 () Bool)
(declare-fun x1736 () Int)
(declare-fun x9173 () Bool)
(declare-fun x1691 () Bool)
(declare-fun x8315 () Bool)
(declare-fun x7189 () Bool)
(declare-fun x3483 () Bool)
(declare-fun x9202 () Bool)
(declare-fun x6532 () x3042)
(declare-fun x1060 () Int)
(declare-fun x5831 () Int)
(declare-fun x3588 () Int)
(declare-fun x283 () Bool)
(declare-fun x1834 () Bool)
(declare-fun x5661 () Bool)
(declare-fun x1746 () Bool)
(declare-fun x1979 () Bool)
(declare-fun x3060 () Bool)
(declare-fun x4016 () x3042)
(declare-fun x3628 () Bool)
(declare-fun x3653 (Int) Int)
(declare-fun x7173 () Int)
(declare-fun x5897 () x3042)
(declare-fun x1032 () Bool)
(declare-fun x8699 () Bool)
(declare-fun x143 () Int)
(declare-fun x629 () Int)
(declare-fun x4468 () Int)
(declare-fun x4539 () Int)
(declare-fun x3319 () Bool)
(declare-fun x448 () Bool)
(declare-fun x993 () Bool)
(declare-fun x8011 () Bool)
(declare-fun x1806 () Int)
(declare-fun x7633 () Bool)
(declare-fun x7808 () Int)
(declare-fun x8419 () Int)
(declare-fun x1392 () Bool)
(declare-fun x1201 () Bool)
(declare-fun x9104 () Bool)
(declare-fun x420 () Int)
(declare-fun x4458 () Int)
(declare-fun x2838 () Bool)
(declare-fun x6287 () Int)
(declare-fun x3730 () Bool)
(declare-fun x8194 () x3042)
(declare-fun x2587 () Int)
(declare-fun x8525 () Int)
(declare-fun x3533 () Bool)
(declare-fun x426 () Bool)
(declare-fun x6588 () Bool)
(declare-fun x5475 () Bool)
(declare-fun x2548 () Int)
(declare-fun x1149 () Bool)
(declare-fun x1415 () Bool)
(declare-fun x463 () x3042)
(declare-fun x5981 () Int)
(declare-fun x2938 () Bool)
(declare-fun x2623 () Bool)
(declare-fun x5946 () Bool)
(declare-fun x3835 () Int)
(declare-fun x5843 () Int)
(declare-fun x7205 () Int)
(declare-fun x2216 () Bool)
(declare-fun x1972 () Bool)
(declare-fun x3931 () Bool)
(declare-fun x1813 () Int)
(declare-fun x2233 () Int)
(declare-fun x5195 () Int)
(declare-fun x1074 () Int)
(declare-fun x3275 () Bool)
(declare-fun x456 () Bool)
(declare-fun x9154 () Bool)
(declare-fun x7467 () Bool)
(declare-fun x7735 () x3042)
(declare-fun x7250 () x3042)
(declare-fun x4879 () Bool)
(declare-fun x7716 () Int)
(declare-fun x8255 () Bool)
(declare-fun x4436 () Int)
(declare-fun x4433 () Bool)
(declare-fun x5150 () Int)
(declare-fun x7598 () Bool)
(declare-fun x3792 () Bool)
(declare-fun x8629 () Bool)
(declare-fun x1390 () Bool)
(declare-fun x6172 () Int)
(declare-fun x4047 () Int)
(declare-fun x8940 () x3042)
(declare-fun x1947 () x3042)
(declare-fun x6882 () x3042)
(declare-fun x2166 () Bool)
(declare-fun x6978 () Bool)
(declare-fun x1705 () Int)
(declare-fun x5089 () Bool)
(declare-fun x9122 () Int)
(declare-fun x1497 () Int)
(declare-fun x8827 () Int)
(declare-fun x5470 () Int)
(declare-fun x3945 () Bool)
(declare-fun x5693 () Bool)
(declare-fun x8692 () Bool)
(declare-fun x543 () Bool)
(declare-fun x4142 () Int)
(declare-fun x5398 () x3042)
(declare-fun x8346 () Int)
(declare-fun x3619 () Int)
(declare-fun x827 () Bool)
(declare-fun x3691 () Int)
(declare-fun x3578 () Bool)
(declare-fun x7876 () Int)
(declare-fun x8986 () Bool)
(declare-fun x2181 () Bool)
(declare-fun x6305 () Bool)
(declare-fun x3131 () x3042)
(declare-fun x1422 () Bool)
(declare-fun x8850 () Bool)
(declare-fun x7008 () x3042)
(declare-fun x5260 () Bool)
(declare-fun x2989 () Bool)
(declare-fun x7401 () x3042)
(declare-fun x9232 () Int)
(declare-fun x2210 () Int)
(declare-fun x5593 () Bool)
(declare-fun x2027 () Int)
(declare-fun x719 () x3042)
(declare-fun x51 () x3042)
(declare-fun x2648 () x3042)
(declare-fun x7540 () Int)
(declare-fun x1995 () Bool)
(declare-fun x5327 () Int)
(declare-fun x4056 () Int)
(declare-fun x2707 () Int)
(declare-fun x6847 () Bool)
(declare-fun x1701 () Bool)
(declare-fun x945 () Bool)
(declare-fun x5153 () Bool)
(declare-fun x778 () Bool)
(declare-fun x6468 () Bool)
(declare-fun x2026 () Bool)
(declare-fun x3035 () Bool)
(declare-fun x519 () Int)
(declare-fun x965 () Bool)
(declare-fun x5689 () Int)
(declare-fun x2475 () Bool)
(declare-fun x5574 () x3042)
(declare-fun x4111 () x3042)
(declare-fun x7549 () Bool)
(declare-fun x1236 () Int)
(declare-fun x354 () Int)
(declare-fun x3352 () Bool)
(declare-fun x3048 () Bool)
(declare-fun x7165 () Bool)
(declare-fun x2870 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x6293 () Int)
(declare-fun x8717 () Int)
(declare-fun x8503 () Bool)
(declare-fun x1092 () Int)
(declare-fun x4044 () Bool)
(declare-fun x4940 () Int)
(declare-fun x4555 () Bool)
(declare-fun x7070 () Int)
(declare-fun x1109 () x3042)
(declare-fun x2985 () Bool)
(declare-fun x8087 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x396 () Bool)
(declare-fun x4310 () Bool)
(declare-fun x6726 () Bool)
(declare-fun x4385 () Int)
(declare-fun x5868 () x3042)
(declare-fun x1082 () Bool)
(declare-fun x2145 () Bool)
(declare-fun x7640 () Bool)
(declare-fun x1406 () Int)
(declare-fun x5962 () Int)
(declare-fun x1829 () Int)
(declare-fun x7999 () Bool)
(declare-fun x2358 () Bool)
(declare-fun x1624 () Bool)
(declare-fun x7435 () Bool)
(declare-fun x2403 () Int)
(declare-fun x6961 () Int)
(declare-fun x990 () Bool)
(declare-fun x8389 () Bool)
(declare-fun x2054 () Int)
(declare-fun x7779 () Int)
(declare-fun x4483 () Bool)
(declare-fun x1264 () Bool)
(declare-fun x7488 () Bool)
(declare-fun x8192 () Bool)
(declare-fun x5566 () Bool)
(declare-fun x2597 () x3042)
(declare-fun x4493 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x3586 () Bool)
(declare-fun x601 () Bool)
(declare-fun x4237 () Bool)
(declare-fun x2498 () Int)
(declare-fun x5251 () x3042)
(declare-fun x2015 () Int)
(declare-fun x4046 () Bool)
(declare-fun x3772 () Int)
(declare-fun x2737 () Bool)
(declare-fun x7630 () Bool)
(declare-fun x5196 () Bool)
(declare-fun x1959 () Bool)
(declare-fun x2902 () Bool)
(declare-fun x222 () Int)
(declare-fun x2982 () Bool)
(declare-fun x4581 () Bool)
(declare-fun x144 () Bool)
(declare-fun x6415 () x3042)
(declare-fun x8594 () Bool)
(declare-fun x8134 () Bool)
(declare-fun x3640 () x3042)
(declare-fun x5561 () Bool)
(declare-fun x6191 () Int)
(declare-fun x6794 () Bool)
(declare-fun x4698 () Int)
(declare-fun x5429 () Bool)
(declare-fun x908 () Bool)
(declare-fun x8355 () Bool)
(declare-fun x3197 () Bool)
(declare-fun x7772 () Int)
(declare-fun x3617 () Int)
(declare-fun x8489 () Bool)
(declare-fun x3085 () Bool)
(declare-fun x359 () Int)
(declare-fun x622 () Int)
(declare-fun x7367 () Int)
(declare-fun x7289 () Bool)
(declare-fun x2108 () Bool)
(declare-fun x5820 () Bool)
(declare-fun x2856 () Int)
(declare-fun x8635 () Bool)
(declare-fun x7456 () Bool)
(declare-fun x6493 () Bool)
(declare-fun x8684 () Bool)
(declare-fun x403 () Int)
(declare-fun x368 () x3042)
(declare-fun x7423 () x3042)
(declare-fun x6036 () Bool)
(declare-fun x4199 () x3042)
(declare-fun x6819 () Bool)
(declare-fun x8066 () Int)
(declare-fun x8133 () x3042)
(declare-fun x4602 () Bool)
(declare-fun x4643 () Bool)
(declare-fun x8800 () Int)
(declare-fun x3152 () Bool)
(declare-fun x6149 () Bool)
(declare-fun x1252 () Int)
(declare-fun x1982 () x3042)
(declare-fun x3998 () Bool)
(declare-fun x6203 () Bool)
(declare-fun x6450 () Int)
(declare-fun x8481 () Int)
(declare-fun x3067 () Bool)
(declare-fun x2863 () Bool)
(declare-fun x4355 () Bool)
(declare-fun x1612 () Bool)
(declare-fun x4040 () Int)
(declare-fun x7881 (Int) Int)
(declare-fun x2810 () Int)
(declare-fun x1814 () x3042)
(declare-fun x1802 () Bool)
(declare-fun x5934 () x3042)
(declare-fun x7934 () Int)
(declare-fun x7970 () Int)
(declare-fun x5136 () Int)
(declare-fun x1818 () Int)
(declare-fun x5191 () Bool)
(declare-fun x858 () Bool)
(declare-fun x7312 () Int)
(declare-fun x7157 () Int)
(declare-fun x2651 () Bool)
(declare-fun x5404 () Bool)
(declare-fun x457 () Bool)
(declare-fun x2236 () Bool)
(declare-fun x9219 () Int)
(declare-fun x5442 () Int)
(declare-fun x1901 () Bool)
(declare-fun x4273 () x3042)
(declare-fun x2319 () Bool)
(declare-fun x8047 () Int)
(declare-fun x1387 () Bool)
(declare-fun x6499 () Bool)
(declare-fun x1877 () Int)
(declare-fun x1521 () Bool)
(declare-fun x7346 () Bool)
(declare-fun x7692 () x3042)
(declare-fun x7442 () x3042)
(declare-fun x5141 () Int)
(declare-fun x497 () Bool)
(declare-fun x8897 () Bool)
(declare-fun x2291 () Int)
(declare-fun x7606 () Bool)
(declare-fun x8483 () Bool)
(declare-fun x1977 () Bool)
(declare-fun x7561 () Bool)
(declare-fun x1682 () Bool)
(declare-fun x3678 () Bool)
(declare-fun x6717 () Int)
(declare-fun x8781 () Bool)
(declare-fun x8203 () Int)
(declare-fun x5581 () x3042)
(declare-fun x4438 () Bool)
(declare-fun x1418 () Bool)
(declare-fun x8909 () Bool)
(declare-fun x2822 () Bool)
(declare-fun x7512 () Int)
(declare-fun x6737 () x3042)
(declare-fun x4045 () Bool)
(declare-fun x3160 () Bool)
(declare-fun x3465 () Int)
(declare-fun x6968 () Int)
(declare-fun x2182 () Bool)
(declare-fun x90 () Bool)
(declare-fun x8906 () Bool)
(declare-fun x7644 () Int)
(declare-fun x8813 () Bool)
(declare-fun x5676 () Int)
(declare-fun x2872 () Bool)
(declare-fun x7803 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x290 () Int)
(declare-fun x2563 () Int)
(declare-fun x9004 () Bool)
(declare-fun x5667 () Int)
(declare-fun x4299 () Bool)
(declare-fun x4686 () x3042)
(declare-fun x8033 () Bool)
(declare-fun x6418 () Int)
(declare-fun x748 () Bool)
(declare-fun x5106 () x3042)
(declare-fun x4510 () Int)
(declare-fun x9162 () Bool)
(declare-fun x5975 () Int)
(declare-fun x8875 () Bool)
(declare-fun x2903 () Int)
(declare-fun x8550 () Bool)
(declare-fun x9164 () Int)
(declare-fun x5137 () Bool)
(declare-fun x2374 () Int)
(declare-fun x5720 () x3042)
(declare-fun x6204 () Int)
(declare-fun x5865 () Int)
(declare-fun x3136 () Int)
(declare-fun x9175 () Int)
(declare-fun x98 () Bool)
(declare-fun x6447 () Bool)
(declare-fun x2369 () Bool)
(declare-fun x1718 () Int)
(declare-fun x8612 () Int)
(declare-fun x4871 () Int)
(declare-fun x9033 () Bool)
(declare-fun x6209 () Int)
(declare-fun x60 () Bool)
(declare-fun x1533 () Bool)
(declare-fun x4601 () Bool)
(declare-fun x2531 () Int)
(declare-fun x2334 () Int)
(declare-fun x756 () Bool)
(declare-fun x6080 () Bool)
(declare-fun x107 () Bool)
(declare-fun x7353 () x3042)
(declare-fun x4450 () Int)
(declare-fun x2202 () Int)
(declare-fun x3494 () Bool)
(declare-fun x6437 () Int)
(declare-fun x8015 () Int)
(declare-fun x1970 () Bool)
(declare-fun x3068 () Int)
(declare-fun x4683 () Int)
(declare-fun x4464 () Int)
(declare-fun x43 () Bool)
(declare-fun x5234 () Int)
(declare-fun x3016 () Bool)
(declare-fun x5318 () x3042)
(declare-fun x8290 () Bool)
(declare-fun x2839 () Int)
(declare-fun x7724 () Int)
(declare-fun x723 () Int)
(declare-fun x8513 () Bool)
(declare-fun x3284 () Bool)
(declare-fun x5018 () Int)
(declare-fun x7812 () Bool)
(declare-fun x7528 () Bool)
(declare-fun x8500 () Int)
(declare-fun x6152 () Int)
(declare-fun x4408 () x3042)
(declare-fun x6948 () Int)
(declare-fun x4842 () Bool)
(declare-fun x2314 () Bool)
(declare-fun x4378 () Bool)
(declare-fun x4100 () Bool)
(declare-fun x5658 () Int)
(declare-fun x7925 () Bool)
(declare-fun x446 () Bool)
(declare-fun x1083 () Int)
(declare-fun x166 () Int)
(declare-fun x9030 () Int)
(declare-fun x5410 () Int)
(declare-fun x5042 (Int) Int)
(declare-fun x6719 () Bool)
(declare-fun x1812 () Bool)
(declare-fun x5448 () Int)
(declare-fun x6414 () Int)
(declare-fun x5008 () Int)
(declare-fun x1341 () Bool)
(declare-fun x3766 () Int)
(declare-fun x365 () Int)
(declare-fun x9003 () Bool)
(declare-fun x9215 () Bool)
(declare-fun x2702 () Bool)
(declare-fun x5374 () Bool)
(declare-fun x3644 () Bool)
(declare-fun x3712 () Int)
(declare-fun x2714 () Int)
(declare-fun x1711 () Bool)
(declare-fun x2489 () Bool)
(declare-fun x2629 () Bool)
(declare-fun x7833 () Int)
(declare-fun x534 () Bool)
(declare-fun x5602 () Bool)
(declare-fun x8638 () Bool)
(declare-fun x8351 () Bool)
(declare-fun x5443 () Int)
(declare-fun x5957 () Bool)
(declare-fun x9012 () Bool)
(declare-fun x4042 () Bool)
(declare-fun x7120 () Bool)
(declare-fun x3336 () Bool)
(declare-fun x4502 () Int)
(declare-fun x3807 () x3042)
(declare-fun x8501 () Int)
(declare-fun x7063 () Int)
(declare-fun x5559 () Bool)
(declare-fun x1186 () x3042)
(declare-fun x4303 () Bool)
(declare-fun x6833 () Int)
(declare-fun x2725 () Bool)
(declare-fun x5423 () Bool)
(declare-fun x6205 () Int)
(declare-fun x1511 () Int)
(declare-fun x2694 () Bool)
(declare-fun x517 () Int)
(declare-fun x3431 () Bool)
(declare-fun x8701 () Bool)
(declare-fun x5888 () Bool)
(declare-fun x2568 () Bool)
(declare-fun x6944 () Bool)
(declare-fun x660 () Bool)
(declare-fun x910 () Int)
(declare-fun x3940 () Bool)
(declare-fun x330 () Bool)
(declare-fun x273 () Bool)
(declare-fun x6491 () Int)
(declare-fun x2517 () Bool)
(declare-fun x5364 () x3042)
(declare-fun x1963 () Bool)
(declare-fun x4406 () Int)
(declare-fun x6586 (x3042) Int)
(declare-fun x6657 () Int)
(declare-fun x5933 () Bool)
(declare-fun x6110 () Bool)
(declare-fun x2133 () Bool)
(declare-fun x920 () Bool)
(declare-fun x7155 () Bool)
(declare-fun x8547 () Bool)
(declare-fun x1411 () x3042)
(declare-fun x576 () Int)
(declare-fun x3562 () Bool)
(declare-fun x5614 () Bool)
(declare-fun x3177 () Bool)
(declare-fun x5384 () Bool)
(declare-fun x3597 () Bool)
(declare-fun x5961 () x3042)
(declare-fun x3546 () Bool)
(declare-fun x6127 () Int)
(declare-fun x1031 () Bool)
(declare-fun x8475 () Int)
(declare-fun x6461 () Int)
(declare-fun x3897 () Int)
(declare-fun x3622 () Bool)
(declare-fun x2275 () Int)
(declare-fun x310 () Bool)
(declare-fun x347 () Bool)
(declare-fun x1232 () Bool)
(declare-fun x5702 () Int)
(declare-fun x6147 () Bool)
(declare-fun x1244 () Int)
(declare-fun x5893 () Int)
(declare-fun x245 () Int)
(declare-fun x2572 () Bool)
(declare-fun x6417 () Bool)
(declare-fun x1241 () Bool)
(declare-fun x7663 () Bool)
(declare-fun x25 () Int)
(declare-fun x7293 () Bool)
(declare-fun x5105 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x9044 () Bool)
(declare-fun x6434 () Bool)
(declare-fun x414 () x3042)
(declare-fun x7259 () Int)
(declare-fun x6728 () x3042)
(declare-fun x2146 () Int)
(declare-fun x1316 () Bool)
(declare-fun x2686 () Bool)
(declare-fun x9096 () Bool)
(declare-fun x5467 () Int)
(declare-fun x5020 () Bool)
(declare-fun x8696 () Int)
(declare-fun x8245 () Bool)
(declare-fun x5828 () Bool)
(declare-fun x284 () Int)
(declare-fun x6832 (Int) Int)
(declare-fun x4557 () Bool)
(declare-fun x8232 () Bool)
(declare-fun x7209 () Bool)
(declare-fun x1510 () Bool)
(declare-fun x8150 () Bool)
(declare-fun x2712 () Bool)
(declare-fun x7614 () Int)
(declare-fun x6084 () Int)
(declare-fun x6009 () Bool)
(declare-fun x5703 () x3042)
(declare-fun x8313 () Bool)
(declare-fun x8787 () Int)
(declare-fun x6916 () Int)
(declare-fun x5512 () Int)
(declare-fun x939 () Bool)
(declare-fun x8401 () Int)
(declare-fun x1269 () Bool)
(declare-fun x3816 () Int)
(declare-fun x7556 () Int)
(declare-fun x3498 () Int)
(declare-fun x3508 () Bool)
(declare-fun x8764 () Bool)
(declare-fun x3266 (Int) Int)
(declare-fun x1182 () Int)
(declare-fun x1175 () Bool)
(declare-fun x6458 () Int)
(declare-fun x6046 () Bool)
(declare-fun x2599 () Bool)
(declare-fun x9051 () Int)
(declare-fun x7939 () Bool)
(declare-fun x1719 () Bool)
(declare-fun x8422 () Int)
(declare-fun x6527 () Bool)
(declare-fun x6222 () Int)
(declare-fun x5070 () Bool)
(declare-fun x3395 () Int)
(declare-fun x3272 () Int)
(declare-fun x7297 () Int)
(declare-fun x1648 () x3042)
(declare-fun x4835 () Bool)
(declare-fun x652 () Bool)
(declare-fun x2352 () Int)
(declare-fun x6297 () Int)
(declare-fun x9066 () Bool)
(declare-fun x3519 () Bool)
(declare-fun x3459 () Bool)
(declare-fun x5736 () Bool)
(declare-fun x4425 () Bool)
(declare-fun x5626 () Bool)
(declare-fun x3572 () Bool)
(declare-fun x3987 () Int)
(declare-fun x7862 () x3042)
(declare-fun x2412 () x3042)
(declare-fun x8162 () x3042)
(declare-fun x8921 () Bool)
(declare-fun x3956 () Bool)
(declare-fun x709 () x3042)
(declare-fun x473 () Bool)
(declare-fun x6356 () x3042)
(declare-fun x6646 () Bool)
(declare-fun x5 () Bool)
(declare-fun x7898 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x2817 () Bool)
(declare-fun x4959 () Int)
(declare-fun x9166 () Int)
(declare-fun x1388 () Int)
(declare-fun x3044 () Int)
(declare-fun x6775 () Bool)
(declare-fun x1073 () Int)
(declare-fun x8461 () Int)
(declare-fun x6186 () Int)
(declare-fun x1438 () Int)
(declare-fun x6980 () Int)
(declare-fun x6873 () x3042)
(declare-fun x3853 () Bool)
(declare-fun x6889 () Int)
(declare-fun x947 () x3042)
(declare-fun x1862 () Bool)
(declare-fun x8467 (Int) Int)
(declare-fun x822 () Bool)
(declare-fun x1885 () x3042)
(declare-fun x7358 () Int)
(declare-fun x7676 () Int)
(declare-fun x4904 () Int)
(declare-fun x6661 () Int)
(declare-fun x5708 () Int)
(declare-fun x807 () Bool)
(declare-fun x2062 () Int)
(declare-fun x7432 () Int)
(declare-fun x8613 () Int)
(declare-fun x2830 () Bool)
(declare-fun x9210 () Int)
(declare-fun x698 () x3042)
(declare-fun x7938 () Bool)
(declare-fun x4654 () x3042)
(declare-fun x933 () Bool)
(declare-fun x604 () Bool)
(declare-fun x8007 () Int)
(declare-fun x114 () Bool)
(declare-fun x2034 () Int)
(declare-fun x8036 () x3042)
(declare-fun x4114 () Bool)
(declare-fun x2574 () x3042)
(declare-fun x5176 () x3042)
(declare-fun x1041 () Int)
(declare-fun x5326 () Int)
(declare-fun x6999 () Bool)
(declare-fun x2727 () Int)
(declare-fun x8221 () Int)
(declare-fun x260 () Int)
(declare-fun x2618 () Bool)
(declare-fun x8079 () Int)
(declare-fun x2445 () Bool)
(declare-fun x4694 () Bool)
(declare-fun x6886 () Int)
(declare-fun x8328 () Bool)
(declare-fun x4164 () x3042)
(declare-fun x4597 () Bool)
(declare-fun x7652 () Bool)
(declare-fun x4442 () Bool)
(declare-fun x1238 () Bool)
(declare-fun x1360 () Bool)
(declare-fun x6751 () Bool)
(declare-fun x3404 () x3042)
(declare-fun x2936 () Bool)
(declare-fun x7231 () Int)
(declare-fun x181 () Bool)
(declare-fun x6160 () Bool)
(declare-fun x5174 () Bool)
(declare-fun x6210 () x3042)
(declare-fun x2580 () Bool)
(declare-fun x118 () Bool)
(declare-fun x6282 () Int)
(declare-fun x7261 () Bool)
(declare-fun x171 () Int)
(declare-fun x8060 () Int)
(declare-fun x668 () Bool)
(declare-fun x8876 () Bool)
(declare-fun x6675 () Int)
(declare-fun x4760 () Bool)
(declare-fun x4882 () Bool)
(declare-fun x3083 () Bool)
(declare-fun x4441 () Bool)
(declare-fun x4527 () x3042)
(declare-fun x8627 () x3042)
(declare-fun x9040 () Bool)
(declare-fun x6738 () Bool)
(declare-fun x755 () Int)
(declare-fun x360 () Bool)
(declare-fun x7112 () Int)
(declare-fun x1474 () Bool)
(declare-fun x6642 () Bool)
(declare-fun x5157 () Int)
(declare-fun x4279 () Bool)
(declare-fun x6403 () x3042)
(declare-fun x1517 () Int)
(declare-fun x5780 () Bool)
(declare-fun x6216 () Int)
(declare-fun x6169 (Int) Int)
(declare-fun x4746 () Int)
(declare-fun x9106 () Int)
(declare-fun x5262 () Bool)
(declare-fun x6786 () Bool)
(declare-fun x6940 () Bool)
(declare-fun x727 () Bool)
(declare-fun x8704 () Bool)
(declare-fun x3556 () Int)
(declare-fun x4023 () Bool)
(declare-fun x3581 () Int)
(declare-fun x7896 () Bool)
(declare-fun x8136 () Bool)
(declare-fun x5338 () x3042)
(declare-fun x5271 () Bool)
(declare-fun x671 () Bool)
(declare-fun x324 () Bool)
(declare-fun x8187 () Int)
(declare-fun x8449 () x3042)
(declare-fun x4150 () Bool)
(declare-fun x9037 () Bool)
(declare-fun x7036 () Int)
(declare-fun x1756 () Bool)
(declare-fun x2857 () Bool)
(declare-fun x5989 () x3042)
(declare-fun x1690 () Bool)
(declare-fun x7441 () Bool)
(declare-fun x2228 () Bool)
(declare-fun x7577 () Int)
(declare-fun x7047 () x3042)
(declare-fun x2824 () Bool)
(declare-fun x212 () Int)
(declare-fun x1776 () Bool)
(declare-fun x5514 () Bool)
(declare-fun x5158 () Bool)
(declare-fun x552 () Bool)
(declare-fun x4064 () Bool)
(declare-fun x1788 () Bool)
(declare-fun x8295 () Bool)
(declare-fun x2404 () Bool)
(declare-fun x4399 () Int)
(declare-fun x4870 () Bool)
(declare-fun x4543 () Bool)
(declare-fun x6416 () x3042)
(declare-fun x1280 () Bool)
(declare-fun x5356 () Int)
(declare-fun x6358 () Bool)
(declare-fun x8277 () Bool)
(declare-fun x7845 () Bool)
(declare-fun x8189 () x3042)
(declare-fun x173 () Int)
(declare-fun x953 () Int)
(declare-fun x115 () Int)
(declare-fun x380 () Int)
(declare-fun x1715 () Bool)
(declare-fun x2703 () Int)
(declare-fun x8096 () Int)
(declare-fun x6005 () Int)
(declare-fun x7451 () Bool)
(declare-fun x6560 () x3042)
(declare-fun x7838 () Int)
(declare-fun x1943 () Bool)
(declare-fun x351 () Bool)
(declare-fun x5418 () Int)
(declare-fun x6478 () Int)
(declare-fun x1168 () x3042)
(declare-fun x2550 () Int)
(declare-fun x2928 () Bool)
(declare-fun x502 () Bool)
(declare-fun x3163 () Bool)
(declare-fun x1372 () Int)
(declare-fun x329 () Int)
(declare-fun x2585 () Bool)
(declare-fun x6839 () Bool)
(declare-fun x7255 () Int)
(declare-fun x4672 () Bool)
(declare-fun x2619 () Int)
(declare-fun x2357 () Int)
(declare-fun x6043 () Bool)
(declare-fun x8390 () Bool)
(declare-fun x7490 () Bool)
(declare-fun x3360 () Int)
(declare-fun x3187 () Bool)
(declare-fun x4065 () Int)
(declare-fun x1247 () Bool)
(declare-fun x4231 () Bool)
(declare-fun x4017 () Bool)
(declare-fun x5980 () Bool)
(declare-fun x6949 () Bool)
(declare-fun x774 () Int)
(declare-fun x7749 () x3042)
(declare-fun x7336 () Int)
(declare-fun x54 () Int)
(declare-fun x122 () Int)
(declare-fun x8618 () Bool)
(declare-fun x1484 () Int)
(declare-fun x4993 () Bool)
(declare-fun x3038 () Int)
(declare-fun x3326 () Bool)
(declare-fun x8418 () Bool)
(declare-fun x2841 () Int)
(declare-fun x3333 () Bool)
(declare-fun x9263 () Bool)
(declare-fun x8785 () Bool)
(declare-fun x9080 () Bool)
(declare-fun x8196 () Bool)
(declare-fun x1874 () Bool)
(declare-fun x870 () Int)
(declare-fun x3155 () Bool)
(declare-fun x2521 () Bool)
(declare-fun x2462 () Bool)
(declare-fun x684 () Bool)
(declare-fun x3222 () Bool)
(declare-fun x3695 () Bool)
(declare-fun x829 () x3042)
(declare-fun x9116 () Int)
(declare-fun x272 () Bool)
(declare-fun x6746 () Bool)
(declare-fun x1350 () Int)
(declare-fun x3408 () Int)
(declare-fun x8298 () Bool)
(declare-fun x5618 () Int)
(declare-fun x3871 () Bool)
(declare-fun x6027 () x3042)
(declare-fun x1250 () Bool)
(declare-fun x1826 () Bool)
(declare-fun x4567 () Bool)
(declare-fun x8473 () Int)
(declare-fun x5832 () Bool)
(declare-fun x578 () Bool)
(declare-fun x4371 () Int)
(declare-fun x7742 () x3042)
(declare-fun x3379 () Int)
(declare-fun x4541 () Bool)
(declare-fun x2019 () Int)
(declare-fun x1494 () Bool)
(declare-fun x3244 () Int)
(declare-fun x7901 () Bool)
(declare-fun x1780 () Bool)
(declare-fun x2023 () Int)
(declare-fun x8599 () Bool)
(declare-fun x8651 () x3042)
(declare-fun x1487 () Int)
(declare-fun x8864 () Bool)
(declare-fun x4850 () Int)
(declare-fun x357 () Bool)
(declare-fun x3554 () Bool)
(declare-fun x6302 () Int)
(declare-fun x6926 () Bool)
(declare-fun x2866 () Bool)
(declare-fun x2045 () Int)
(declare-fun x3192 () Bool)
(declare-fun x477 () x3042)
(declare-fun x692 () Int)
(declare-fun x7792 () Bool)
(declare-fun x6683 () Int)
(declare-fun x5385 () Bool)
(declare-fun x1876 () Int)
(declare-fun x4790 () x3042)
(declare-fun x2021 () Bool)
(declare-fun x172 () Int)
(declare-fun x3841 () Bool)
(declare-fun x7773 () Int)
(declare-fun x718 () Int)
(declare-fun x7472 () Int)
(declare-fun x6026 () Bool)
(declare-fun x1375 () Int)
(declare-fun x3612 () Bool)
(declare-fun x7820 () Int)
(declare-fun x6379 () Int)
(declare-fun x8016 () Int)
(declare-fun x1934 () Bool)
(declare-fun x6906 () Int)
(declare-fun x8942 () Int)
(declare-fun x3965 () x3042)
(declare-fun x1519 () Bool)
(declare-fun x3567 () x3042)
(declare-fun x8183 () Bool)
(declare-fun x2520 () Int)
(declare-fun x6025 () x3042)
(declare-fun x4991 () Bool)
(declare-fun x6666 () Bool)
(declare-fun x9007 () Bool)
(declare-fun x6093 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x600 () Bool)
(declare-fun x3602 () x3042)
(declare-fun x4285 () Bool)
(declare-fun x5297 () Int)
(declare-fun x5998 () Bool)
(declare-fun x2433 () Bool)
(declare-fun x196 (Int) Int)
(declare-fun x6042 () Bool)
(declare-fun x4580 () Int)
(declare-fun x2588 () x3042)
(declare-fun x9093 () Int)
(declare-fun x4290 () x3042)
(declare-fun x8880 () Int)
(declare-fun x1580 () Bool)
(declare-fun x682 () Bool)
(declare-fun x7534 () Bool)
(declare-fun x5363 () Bool)
(declare-fun x1639 () Bool)
(declare-fun x2504 () x3042)
(declare-fun x1577 () Bool)
(declare-fun x8718 () Bool)
(declare-fun x8490 () x3042)
(declare-fun x6044 () Int)
(declare-fun x3246 () Bool)
(declare-fun x979 () Bool)
(declare-fun x7461 () Int)
(declare-fun x4898 () Int)
(declare-fun x3591 () Bool)
(declare-fun x1275 () Bool)
(declare-fun x3874 () Int)
(declare-fun x7388 () Bool)
(declare-fun x7085 () Bool)
(declare-fun x7848 () Int)
(declare-fun x5892 () Int)
(declare-fun x5450 () Bool)
(declare-fun x5729 () Bool)
(declare-fun x5812 () Bool)
(declare-fun x771 () Bool)
(declare-fun x9075 () Bool)
(declare-fun x3889 () Int)
(declare-fun x6188 () Bool)
(declare-fun x7689 () Int)
(declare-fun x6382 () Bool)
(declare-fun x2633 () Int)
(declare-fun x8991 () Bool)
(declare-fun x2790 () Int)
(declare-fun x131 () Bool)
(declare-fun x4612 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x6813 () Bool)
(declare-fun x5554 () Bool)
(declare-fun x4801 () Int)
(declare-fun x2631 () Bool)
(declare-fun x349 () Int)
(declare-fun x8144 () Bool)
(declare-fun x7917 () Int)
(declare-fun x8625 () Bool)
(declare-fun x8188 () Int)
(declare-fun x5051 () Bool)
(declare-fun x6487 () Bool)
(declare-fun x9141 () Bool)
(declare-fun x2283 () Bool)
(declare-fun x8664 () x3042)
(declare-fun x907 () Bool)
(declare-fun x485 () Int)
(declare-fun x6184 () Bool)
(declare-fun x138 () Int)
(declare-fun x4634 () Int)
(declare-fun x8309 () Int)
(declare-fun x8950 () Bool)
(declare-fun x8379 () Int)
(declare-fun x4139 () Int)
(declare-fun x7851 () Bool)
(declare-fun x4994 () Bool)
(declare-fun x7475 () Bool)
(declare-fun x8262 () x3042)
(declare-fun x7734 () x3042)
(declare-fun x8771 () Int)
(declare-fun x5727 () Bool)
(declare-fun x8237 () x3042)
(declare-fun x8252 () Bool)
(declare-fun x2958 () Int)
(declare-fun x7520 () Bool)
(declare-fun x7073 () Bool)
(declare-fun x7684 () Bool)
(declare-fun x5916 () Bool)
(declare-fun x3181 () Int)
(declare-fun x8971 () Int)
(declare-fun x6540 () Int)
(declare-fun x6396 () Bool)
(declare-fun x2927 () Int)
(declare-fun x7413 () Int)
(declare-fun x5054 () Bool)
(declare-fun x437 () Bool)
(declare-fun x944 () Bool)
(declare-fun x8984 () Int)
(declare-fun x3105 () Bool)
(declare-fun x4761 () Bool)
(declare-fun x3951 () Bool)
(declare-fun x2637 () Int)
(declare-fun x9223 () x3042)
(declare-fun x5921 () Bool)
(declare-fun x5824 () Int)
(declare-fun x5138 () Bool)
(declare-fun x3499 () Bool)
(declare-fun x3092 () Bool)
(declare-fun x3394 () Int)
(declare-fun x5950 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x5192 () Bool)
(declare-fun x550 () Int)
(declare-fun x240 () Int)
(declare-fun x8077 () Bool)
(declare-fun x4288 () Bool)
(declare-fun x8220 () x3042)
(declare-fun x3523 () Bool)
(declare-fun x7288 () Int)
(declare-fun x2834 () Bool)
(declare-fun x706 () Int)
(declare-fun x4090 () Bool)
(declare-fun x7050 () Int)
(declare-fun x2384 () Bool)
(declare-fun x3550 () Bool)
(declare-fun x7686 () Int)
(declare-fun x5841 () Bool)
(declare-fun x2594 () Bool)
(declare-fun x8311 () Bool)
(declare-fun x5744 () x3042)
(declare-fun x625 () Int)
(declare-fun x2168 () Bool)
(declare-fun x8242 () Int)
(declare-fun x5319 () Int)
(declare-fun x6495 () Int)
(declare-fun x7379 (Int) x3042)
(declare-fun x4631 () Bool)
(declare-fun x985 () Int)
(declare-fun x7018 (Int) Int)
(declare-fun x716 () Bool)
(declare-fun x7310 () Int)
(declare-fun x6987 () Bool)
(declare-fun x7758 () Bool)
(declare-fun x4988 () Bool)
(declare-fun x5173 () Bool)
(declare-fun x1394 () Int)
(declare-fun x7434 () Bool)
(declare-fun x1795 () Bool)
(declare-fun x3812 () Int)
(declare-fun x6801 () Int)
(declare-fun x6537 () Int)
(declare-fun x2265 () Int)
(declare-fun x8838 () Bool)
(declare-fun x7665 () Int)
(declare-fun x2899 () Bool)
(declare-fun x4324 () Bool)
(declare-fun x8028 () x3042)
(declare-fun x1048 () Int)
(declare-fun x3301 () Int)
(declare-fun x1309 () Bool)
(declare-fun x1373 () Bool)
(declare-fun x4071 () Bool)
(declare-fun x7826 () Bool)
(declare-fun x1018 () Int)
(declare-fun x7969 () Bool)
(declare-fun x8222 () Bool)
(declare-fun x5864 () Bool)
(declare-fun x7484 () Bool)
(declare-fun x7270 () Int)
(declare-fun x691 () Bool)
(declare-fun x3079 () Int)
(declare-fun x6710 () Bool)
(declare-fun x6457 () Int)
(declare-fun x6375 () Bool)
(declare-fun x2155 () Int)
(declare-fun x7139 () Bool)
(declare-fun x1440 () Int)
(declare-fun x8587 () x3042)
(declare-fun x2126 () Bool)
(declare-fun x617 () Bool)
(declare-fun x5545 () Bool)
(declare-fun x1324 () Int)
(declare-fun x7647 () Int)
(declare-fun x6137 () x3042)
(declare-fun x5038 () Bool)
(declare-fun x6943 () Bool)
(declare-fun x7385 () Int)
(declare-fun x5477 () Bool)
(declare-fun x3671 () Int)
(declare-fun x9078 () x3042)
(declare-fun x5752 () Bool)
(declare-fun x4656 () x3042)
(declare-fun x5199 () Bool)
(declare-fun x7544 () x3042)
(declare-fun x3854 () Bool)
(declare-fun x2368 () Int)
(declare-fun x486 () Bool)
(declare-fun x6446 () x3042)
(declare-fun x5409 () Bool)
(declare-fun x6565 () Bool)
(declare-fun x5394 () Bool)
(declare-fun x2281 () Bool)
(declare-fun x5333 () Bool)
(declare-fun x4982 () x3042)
(declare-fun x5399 () Int)
(declare-fun x3925 () Bool)
(declare-fun x327 () Int)
(declare-fun x1045 () Int)
(declare-fun x8382 () Bool)
(declare-fun x3985 () Bool)
(declare-fun x9276 () Bool)
(declare-fun x4108 () Bool)
(declare-fun x6442 () Int)
(declare-fun x5013 () Int)
(declare-fun x6500 (Int) Int)
(declare-fun x7753 () Bool)
(declare-fun x4313 () Int)
(declare-fun x2638 () Bool)
(declare-fun x4658 () Bool)
(declare-fun x4678 () Int)
(declare-fun x7193 () x3042)
(declare-fun x2483 () Int)
(declare-fun x3672 () Bool)
(declare-fun x606 () x3042)
(declare-fun x6223 () Bool)
(declare-fun x7877 () Bool)
(declare-fun x4248 () Bool)
(declare-fun x8275 () Bool)
(declare-fun x2537 () Int)
(declare-fun x4004 () Int)
(declare-fun x1402 () Bool)
(declare-fun x5092 () Bool)
(declare-fun x1759 () Bool)
(declare-fun x8848 () Bool)
(declare-fun x4500 () Int)
(declare-fun x5808 () Bool)
(declare-fun x5413 () Bool)
(declare-fun x5080 () Bool)
(declare-fun x2804 () Int)
(declare-fun x3753 () Bool)
(declare-fun x2308 () Bool)
(declare-fun x959 () Int)
(declare-fun x3525 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x3921 () Int)
(declare-fun x5156 () x3042)
(declare-fun x8917 () Bool)
(declare-fun x505 () Int)
(declare-fun x3332 () Bool)
(declare-fun x4215 () Int)
(declare-fun x5770 () Bool)
(declare-fun x3264 () Bool)
(declare-fun x8887 () Int)
(declare-fun x2715 () Int)
(declare-fun x4107 () Bool)
(declare-fun x1900 () Int)
(declare-fun x2796 () Bool)
(declare-fun x5774 () Bool)
(declare-fun x7248 () x3042)
(declare-fun x3258 () Int)
(declare-fun x6585 () x3042)
(declare-fun x6796 () Bool)
(declare-fun x5298 () Bool)
(declare-fun x5705 () Int)
(declare-fun x3390 (Int) Int)
(declare-fun x4471 () Int)
(declare-fun x8446 () Bool)
(declare-fun x3285 () Int)
(declare-fun x3262 () Bool)
(declare-fun x1430 () Bool)
(declare-fun x7232 () x3042)
(declare-fun x3015 () Bool)
(declare-fun x3896 () Int)
(declare-fun x8960 () Bool)
(declare-fun x4902 () Bool)
(declare-fun x1367 () Int)
(declare-fun x3532 () Bool)
(declare-fun x2373 () Int)
(declare-fun x2276 () Int)
(declare-fun x8844 () Int)
(declare-fun x2082 () Bool)
(declare-fun x8504 () x3042)
(declare-fun x1596 () x3042)
(declare-fun x1355 () Bool)
(declare-fun x5316 () x3042)
(declare-fun x110 () x3042)
(declare-fun x1670 () Bool)
(declare-fun x4589 () Int)
(declare-fun x4250 () Bool)
(declare-fun x9045 () Bool)
(declare-fun x1651 () Bool)
(declare-fun x7981 () Bool)
(declare-fun x6183 () Int)
(declare-fun x5129 () Bool)
(declare-fun x6284 () Int)
(declare-fun x1821 () Bool)
(declare-fun x7817 () Int)
(declare-fun x4260 () Bool)
(declare-fun x3322 () Bool)
(declare-fun x2420 () Int)
(declare-fun x1343 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x216 () Int)
(declare-fun x6711 () Int)
(declare-fun x1597 () Bool)
(declare-fun x9035 () Bool)
(declare-fun x145 () Int)
(declare-fun x6182 () Bool)
(declare-fun x890 () Int)
(declare-fun x116 () Bool)
(declare-fun x289 () Bool)
(declare-fun x27 () Int)
(declare-fun x1761 () Int)
(declare-fun x8700 () Bool)
(declare-fun x4051 () Int)
(declare-fun x7214 () Bool)
(declare-fun x7280 () Bool)
(declare-fun x5345 () Bool)
(declare-fun x5657 () Int)
(declare-fun x6564 () x3042)
(declare-fun x7537 () x3042)
(declare-fun x7182 () Bool)
(declare-fun x7595 () Bool)
(declare-fun x5369 () Bool)
(declare-fun x4848 () Bool)
(declare-fun x1817 () Bool)
(declare-fun x6868 () Bool)
(declare-fun x4270 () Int)
(declare-fun x7197 () Int)
(declare-fun x6135 () Bool)
(declare-fun x4320 () x3042)
(declare-fun x3338 () Int)
(declare-fun x732 () Bool)
(declare-fun x8380 () Bool)
(declare-fun x2237 (Int Int) Int)
(declare-fun x6858 () Bool)
(declare-fun x9256 () Int)
(declare-fun x1807 () Int)
(declare-fun x1116 () Int)
(declare-fun x1001 () Int)
(declare-fun x528 () Int)
(declare-fun x5099 () Bool)
(declare-fun x6994 () Bool)
(declare-fun x405 () Int)
(declare-fun x2402 () Int)
(declare-fun x6914 () Int)
(declare-fun x7159 () Bool)
(declare-fun x4983 () Bool)
(declare-fun x7116 () Bool)
(declare-fun x1503 () Int)
(declare-fun x8926 () Int)
(declare-fun x9031 () Int)
(declare-fun x1278 () Bool)
(declare-fun x884 () Int)
(declare-fun x132 () Int)
(declare-fun x1287 () x3042)
(declare-fun x2148 () Bool)
(declare-fun x5726 () Bool)
(declare-fun x8607 () Int)
(declare-fun x9032 () Bool)
(declare-fun x1860 () Bool)
(declare-fun x7011 () Bool)
(declare-fun x8404 () Bool)
(declare-fun x5756 () Bool)
(declare-fun x6167 () Int)
(declare-fun x3451 () Bool)
(declare-fun x963 () x3042)
(declare-fun x5509 () Int)
(declare-fun x5312 () Int)
(declare-fun x2016 () Bool)
(declare-fun x4915 () Bool)
(declare-fun x4293 () x3042)
(declare-fun x5779 () Bool)
(declare-fun x6626 () Int)
(declare-fun x8659 () Bool)
(declare-fun x7907 () x3042)
(declare-fun x7091 () Int)
(declare-fun x3971 () Int)
(declare-fun x8632 (Int) Int)
(declare-fun x2920 () Bool)
(declare-fun x1771 () Int)
(declare-fun x4110 () Bool)
(declare-fun x3463 () x3042)
(declare-fun x2123 () Bool)
(declare-fun x8804 () Bool)
(declare-fun x1553 () Int)
(declare-fun x8310 () Bool)
(declare-fun x3737 () Int)
(declare-fun x9204 () x3042)
(declare-fun x3972 () Int)
(declare-fun x4133 () Bool)
(declare-fun x4086 () Int)
(declare-fun x3116 () Int)
(declare-fun x1679 () Int)
(declare-fun x8843 () Bool)
(declare-fun x7026 () Bool)
(declare-fun x8112 () Int)
(declare-fun x3017 () Int)
(declare-fun x577 () Int)
(declare-fun x5163 () Bool)
(declare-fun x653 () Int)
(declare-fun x7427 () Bool)
(declare-fun x1797 () Bool)
(declare-fun x2990 () x3042)
(declare-fun x5848 () Bool)
(declare-fun x1461 (x3042) Int)
(declare-fun x1157 () x3042)
(declare-fun x619 () Int)
(declare-fun x5097 () Int)
(declare-fun x2636 () Bool)
(declare-fun x9028 () Bool)
(declare-fun x2089 () Bool)
(declare-fun x2409 () Bool)
(declare-fun x62 () Bool)
(declare-fun x5396 () Bool)
(declare-fun x228 () Int)
(declare-fun x6733 () Bool)
(declare-fun x1870 () Bool)
(declare-fun x85 () Int)
(declare-fun x1399 () Bool)
(declare-fun x6336 (Int) Int)
(declare-fun x2196 () Int)
(declare-fun x4818 () Bool)
(declare-fun x812 () Int)
(declare-fun x1778 () Bool)
(declare-fun x5143 () Bool)
(declare-fun x5017 () Int)
(declare-fun x6264 () x3042)
(declare-fun x3641 () x3042)
(declare-fun x1939 () Int)
(declare-fun x3306 () Bool)
(declare-fun x2121 () Int)
(declare-fun x749 () Bool)
(declare-fun x3675 () x3042)
(declare-fun x7573 () Bool)
(declare-fun x8558 () Int)
(declare-fun x7603 () Int)
(declare-fun x2256 () Bool)
(declare-fun x4747 (x3042) Int)
(declare-fun x2871 () Int)
(declare-fun x6116 () Bool)
(declare-fun x2738 () Int)
(declare-fun x956 () Bool)
(declare-fun x4172 () x3042)
(declare-fun x4233 () Int)
(declare-fun x7482 () Bool)
(declare-fun x3186 () Bool)
(declare-fun x8578 () Bool)
(declare-fun x8497 () Int)
(declare-fun x2519 () Int)
(declare-fun x618 () Int)
(declare-fun x642 () Bool)
(declare-fun x950 () Bool)
(declare-fun x3230 () Int)
(declare-fun x8444 () Int)
(declare-fun x6828 () Int)
(declare-fun x3205 () x3042)
(declare-fun x1668 (x3042) Int)
(declare-fun x8333 () Bool)
(declare-fun x1694 () Bool)
(declare-fun x2736 () Bool)
(declare-fun x9253 () Bool)
(declare-fun x7788 () x3042)
(declare-fun x6083 () Int)
(declare-fun x1358 () Int)
(declare-fun x8019 () Bool)
(declare-fun x7653 () Int)
(declare-fun x3558 () Int)
(declare-fun x5742 () Bool)
(declare-fun x387 () Int)
(declare-fun x6233 () x3042)
(declare-fun x4934 () Bool)
(declare-fun x3930 () Int)
(declare-fun x8324 () Bool)
(declare-fun x1866 () Int)
(declare-fun x1717 () x3042)
(declare-fun x7329 () Bool)
(declare-fun x2859 () Int)
(declare-fun x2297 () Bool)
(declare-fun x6640 () Bool)
(declare-fun x2442 () Bool)
(declare-fun x6896 () x3042)
(declare-fun x4928 () Int)
(declare-fun x782 () Bool)
(declare-fun x2346 () x3042)
(declare-fun x7670 () Int)
(declare-fun x3020 () Bool)
(declare-fun x7505 () Int)
(declare-fun x754 () Bool)
(declare-fun x2179 () Int)
(declare-fun x5994 () Bool)
(declare-fun x7616 () Int)
(declare-fun x7824 () Bool)
(declare-fun x6039 () Bool)
(declare-fun x4314 () Int)
(declare-fun x7007 () Int)
(declare-fun x8928 () x3042)
(declare-fun x1966 () Bool)
(declare-fun x4083 () Bool)
(declare-fun x3474 () Int)
(declare-fun x229 () Bool)
(declare-fun x3159 () x3042)
(declare-fun x58 () Int)
(declare-fun x5202 () Bool)
(declare-fun x1895 () Int)
(declare-fun x205 () Bool)
(declare-fun x3868 () Bool)
(declare-fun x6514 () Int)
(declare-fun x4079 () x3042)
(declare-fun x7657 () Bool)
(declare-fun x8369 () Bool)
(declare-fun x2099 () Bool)
(declare-fun x4180 () Int)
(declare-fun x4122 () Bool)
(declare-fun x7271 () x3042)
(declare-fun x721 () Bool)
(declare-fun x8249 () Int)
(declare-fun x4431 () x3042)
(declare-fun x5242 () Bool)
(declare-fun x8375 () Bool)
(declare-fun x2124 () Bool)
(declare-fun x8663 () Int)
(declare-fun x4894 () Bool)
(declare-fun x6028 () Bool)
(declare-fun x683 () x3042)
(declare-fun x2106 () Bool)
(declare-fun x7097 () Bool)
(declare-fun x5261 () Bool)
(declare-fun x9198 () x3042)
(declare-fun x7902 () Int)
(declare-fun x1207 () Int)
(declare-fun x7113 () Int)
(declare-fun x9136 () Bool)
(declare-fun x7471 () Bool)
(declare-fun x1391 () Bool)
(declare-fun x3190 () Int)
(declare-fun x7130 () Int)
(declare-fun x5549 () Bool)
(declare-fun x8417 () Int)
(declare-fun x5827 () Bool)
(declare-fun x8905 () Int)
(declare-fun x5036 () Bool)
(declare-fun x5330 () Bool)
(declare-fun x3001 () Int)
(declare-fun x5966 () Bool)
(declare-fun x4877 () Bool)
(declare-fun x4147 () Int)
(declare-fun x6064 () Bool)
(declare-fun x2556 () Bool)
(declare-fun x4496 () Int)
(declare-fun x1698 (x3042) Int)
(declare-fun x7695 () Bool)
(declare-fun x88 () Bool)
(declare-fun x3368 () Int)
(declare-fun x596 () Bool)
(declare-fun x5882 () Int)
(declare-fun x7636 () Bool)
(declare-fun x2242 () Bool)
(declare-fun x2526 () Bool)
(declare-fun x401 () Bool)
(declare-fun x4980 () Bool)
(declare-fun x3287 () Int)
(declare-fun x9034 () Bool)
(declare-fun x7417 () Int)
(declare-fun x4793 () Bool)
(declare-fun x1724 () Bool)
(declare-fun x9237 () Int)
(declare-fun x268 () Int)
(declare-fun x6548 () Bool)
(declare-fun x4549 () Int)
(declare-fun x8904 () Bool)
(declare-fun x6872 () x3042)
(declare-fun x1889 () Int)
(declare-fun x1295 () Bool)
(declare-fun x6143 () x3042)
(declare-fun x690 () Int)
(declare-fun x7964 () Int)
(declare-fun x7032 () Int)
(declare-fun x7054 () Bool)
(declare-fun x7171 () Int)
(declare-fun x5112 () Bool)
(declare-fun x6777 () Int)
(declare-fun x2816 () Int)
(declare-fun x2717 () Int)
(declare-fun x7745 () x3042)
(declare-fun x2774 () Bool)
(declare-fun x2068 () Bool)
(declare-fun x8493 () Int)
(declare-fun x6156 () Bool)
(declare-fun x5288 () Int)
(declare-fun x5257 () Int)
(declare-fun x6440 () Int)
(declare-fun x6326 () Int)
(declare-fun x8044 () Bool)
(declare-fun x3776 () Bool)
(declare-fun x1282 () Int)
(declare-fun x5716 () Int)
(declare-fun x1034 () Bool)
(declare-fun x4728 () Bool)
(declare-fun x2391 () Bool)
(declare-fun x6377 () Bool)
(declare-fun x4137 () Int)
(declare-fun x5588 () Bool)
(declare-fun x1409 () x3042)
(declare-fun x3310 () Bool)
(declare-fun x3958 () Int)
(declare-fun x4646 () Bool)
(declare-fun x2751 () Bool)
(declare-fun x7990 () x3042)
(declare-fun x8866 () Int)
(declare-fun x1058 () x3042)
(declare-fun x5511 () Bool)
(declare-fun x4648 () Int)
(declare-fun x8524 () Int)
(declare-fun x1307 () Bool)
(declare-fun x6422 () Bool)
(declare-fun x5480 () Bool)
(declare-fun x2709 () Int)
(declare-fun x6381 () Int)
(declare-fun x2279 () Bool)
(declare-fun x5062 () Int)
(declare-fun x4278 () Bool)
(declare-fun x6361 () Int)
(declare-fun x3693 () Bool)
(declare-fun x8894 () Int)
(declare-fun x2186 () Bool)
(declare-fun x2584 () Bool)
(declare-fun x6328 () Int)
(declare-fun x5724 () Bool)
(declare-fun x2650 () Bool)
(declare-fun x1644 () Int)
(declare-fun x4910 () Bool)
(declare-fun x6891 () Bool)
(declare-fun x8628 () Bool)
(declare-fun x443 () Int)
(declare-fun x4777 () Bool)
(declare-fun x6975 () Bool)
(declare-fun x337 () Int)
(declare-fun x3144 () Bool)
(declare-fun x6367 () Int)
(declare-fun x4542 () Bool)
(declare-fun x1313 () Int)
(declare-fun x1000 () Int)
(declare-fun x7127 () Int)
(declare-fun x1500 () Bool)
(declare-fun x8572 () Bool)
(declare-fun x5571 () Int)
(declare-fun x4810 () Int)
(declare-fun x4347 () Bool)
(declare-fun x8948 () Bool)
(declare-fun x3609 () Bool)
(declare-fun x2197 () Bool)
(declare-fun x5071 () Int)
(declare-fun x3959 () Bool)
(declare-fun x5968 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x4893 () Bool)
(declare-fun x4426 () Int)
(declare-fun x2067 () x3042)
(declare-fun x3786 () Bool)
(declare-fun x2376 () Int)
(declare-fun x7277 () Bool)
(declare-fun x2807 () Int)
(declare-fun x332 () Int)
(declare-fun x7266 () Bool)
(declare-fun x4210 () Bool)
(declare-fun x2819 () Bool)
(declare-fun x760 () Int)
(declare-fun x3700 () Bool)
(declare-fun x5412 () Int)
(declare-fun x5740 () Int)
(declare-fun x3006 () Int)
(declare-fun x1296 () Bool)
(declare-fun x3347 () Int)
(declare-fun x8352 () Int)
(declare-fun x8127 () Int)
(declare-fun x7290 () Bool)
(declare-fun x7932 () Bool)
(declare-fun x3223 () Int)
(declare-fun x3935 () Bool)
(declare-fun x9022 () Bool)
(declare-fun x7671 () Int)
(declare-fun x5237 () Int)
(declare-fun x7842 () Bool)
(declare-fun x3189 () x3042)
(declare-fun x7166 () x3042)
(declare-fun x6506 () Bool)
(declare-fun x2601 () Bool)
(declare-fun x2994 () Bool)
(declare-fun x6424 () Int)
(declare-fun x18 () Int)
(declare-fun x1652 () Bool)
(declare-fun x6201 (x3042) Int)
(declare-fun x5859 () Bool)
(declare-fun x2095 () Int)
(declare-fun x3219 () Int)
(declare-fun x7649 () Bool)
(declare-fun x305 () Bool)
(declare-fun x7688 () Bool)
(declare-fun x6749 () Bool)
(declare-fun x8707 () Bool)
(declare-fun x7853 () Bool)
(declare-fun x539 () Int)
(declare-fun x3448 () Bool)
(declare-fun x3726 () Bool)
(declare-fun x5813 () Int)
(declare-fun x9054 () Int)
(declare-fun x6712 () Bool)
(declare-fun x394 () Int)
(declare-fun x1218 () Bool)
(declare-fun x1226 () Int)
(declare-fun x8964 () Int)
(declare-fun x5484 () Bool)
(declare-fun x2516 () Bool)
(declare-fun x6177 () Int)
(declare-fun x5281 () Bool)
(declare-fun x3590 () Int)
(declare-fun x8131 () Int)
(declare-fun x1601 () Bool)
(declare-fun x8303 () Bool)
(declare-fun x4196 () x3042)
(declare-fun x8057 () Bool)
(declare-fun x2973 () Int)
(declare-fun x3920 () Int)
(declare-fun x5348 () x3042)
(declare-fun x3278 () Bool)
(declare-fun x5663 () Bool)
(declare-fun x5620 () Int)
(declare-fun x2884 () Bool)
(declare-fun x3555 () Bool)
(declare-fun x7963 () Int)
(declare-fun x1896 () Int)
(declare-fun x3215 () Int)
(declare-fun x5495 () Bool)
(declare-fun x8091 () Bool)
(declare-fun x75 () x3042)
(declare-fun x8347 () Bool)
(declare-fun x8515 () Bool)
(declare-fun x7491 () Int)
(declare-fun x3677 () Bool)
(declare-fun x2781 () Int)
(declare-fun x952 () Bool)
(declare-fun x4323 () Bool)
(declare-fun x1297 () Bool)
(declare-fun x7673 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x7989 () Int)
(declare-fun x6660 (Int) Int)
(declare-fun x7153 () Bool)
(declare-fun x8270 () Int)
(declare-fun x518 () Int)
(declare-fun x8054 () Bool)
(declare-fun x3751 () Int)
(declare-fun x4943 () Bool)
(declare-fun x1805 () x3042)
(declare-fun x3095 () Int)
(declare-fun x5468 () Bool)
(declare-fun x1893 (Int Int) Int)
(declare-fun x8173 () Bool)
(declare-fun x4709 () Bool)
(declare-fun x8825 () Int)
(declare-fun x7708 () Bool)
(declare-fun x714 () Bool)
(declare-fun x1559 () Int)
(declare-fun x1470 () Bool)
(declare-fun x6690 () Int)
(declare-fun x4277 () Bool)
(declare-fun x6235 () Bool)
(declare-fun x1810 () Int)
(declare-fun x7412 () Bool)
(declare-fun x266 () Bool)
(declare-fun x4203 () Int)
(declare-fun x421 () Bool)
(declare-fun x5134 () Int)
(declare-fun x4269 () Bool)
(declare-fun x6443 () Int)
(declare-fun x7416 () Int)
(declare-fun x1478 () Bool)
(declare-fun x2649 () Int)
(declare-fun x1765 () Int)
(declare-fun x2317 () Bool)
(declare-fun x8616 () Int)
(declare-fun x7181 () Int)
(declare-fun x3064 () Bool)
(declare-fun x4092 () Int)
(declare-fun x4087 () Bool)
(declare-fun x318 () Bool)
(declare-fun x476 () Int)
(declare-fun x6524 () Bool)
(declare-fun x373 () x3042)
(declare-fun x1881 () Bool)
(declare-fun x8930 () Bool)
(declare-fun x938 () Int)
(declare-fun x1210 () Bool)
(declare-fun x1471 () Bool)
(declare-fun x8630 () Bool)
(declare-fun x8037 () Bool)
(declare-fun x9233 () Int)
(declare-fun x3501 () Int)
(declare-fun x4342 () Int)
(declare-fun x5100 () Int)
(declare-fun x5359 () Bool)
(declare-fun x5459 () Bool)
(declare-fun x2040 () x3042)
(declare-fun x6974 () Int)
(declare-fun x7028 () Int)
(declare-fun x1741 () Bool)
(declare-fun x3124 () Bool)
(declare-fun x3239 () Bool)
(declare-fun x1448 () Bool)
(declare-fun x6511 () Int)
(declare-fun x411 () Int)
(declare-fun x5586 () Bool)
(declare-fun x8195 () Bool)
(declare-fun x8259 () Int)
(declare-fun x8458 () Bool)
(declare-fun x319 () Int)
(declare-fun x4548 () Int)
(declare-fun x418 () Int)
(declare-fun x4168 () Bool)
(declare-fun x146 () Int)
(declare-fun x2500 () x3042)
(declare-fun x7066 () Bool)
(declare-fun x5478 () Int)
(declare-fun x1050 () Int)
(declare-fun x2079 () Bool)
(declare-fun x7740 () Int)
(declare-fun x5557 () Bool)
(declare-fun x2613 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x3589 () Int)
(declare-fun x5049 () Int)
(declare-fun x3296 () x3042)
(declare-fun x3788 () x3042)
(declare-fun x241 () x3042)
(declare-fun x2071 () Bool)
(declare-fun x5258 () Bool)
(declare-fun x1646 () Bool)
(declare-fun x1385 () Int)
(declare-fun x6840 () x3042)
(declare-fun x4640 () Bool)
(declare-fun x5969 () Bool)
(declare-fun x9103 () x3042)
(declare-fun x2221 () Bool)
(declare-fun x1883 () Int)
(declare-fun x3271 () Bool)
(declare-fun x101 () Bool)
(declare-fun x8841 () Bool)
(declare-fun x264 () Bool)
(declare-fun x7858 () Bool)
(declare-fun x8159 () Bool)
(declare-fun x5629 () Bool)
(declare-fun x9201 () Bool)
(declare-fun x5090 () Int)
(declare-fun x5252 () x3042)
(declare-fun x8606 () Bool)
(declare-fun x3745 () Bool)
(declare-fun x6150 () Bool)
(declare-fun x6770 () Bool)
(declare-fun x640 () x3042)
(declare-fun x7736 () Int)
(declare-fun x7029 (Int Int) Int)
(declare-fun x8677 () Bool)
(declare-fun x7240 () Bool)
(declare-fun x5456 (Int) Int)
(declare-fun x7111 () Bool)
(declare-fun x7687 () Bool)
(declare-fun x5739 () Bool)
(declare-fun x6022 () Int)
(declare-fun x8329 () x3042)
(declare-fun x361 () Int)
(declare-fun x647 () Int)
(declare-fun x4773 () Bool)
(declare-fun x4615 () Int)
(declare-fun x1181 () Bool)
(declare-fun x3668 () Int)
(declare-fun x3714 () Bool)
(declare-fun x5936 () Bool)
(declare-fun x7396 () Int)
(declare-fun x2407 () Bool)
(declare-fun x8736 () Bool)
(declare-fun x73 () Bool)
(declare-fun x2616 () Bool)
(declare-fun x542 () Int)
(declare-fun x1028 () Bool)
(declare-fun x3470 () Int)
(declare-fun x65 () Int)
(declare-fun x1077 () Int)
(declare-fun x4007 () x3042)
(declare-fun x3249 () Bool)
(declare-fun x9267 () x3042)
(declare-fun x8063 () Bool)
(declare-fun x2974 () Int)
(declare-fun x7154 () Bool)
(declare-fun x5250 () Bool)
(declare-fun x5847 () x3042)
(declare-fun x8236 () x3042)
(declare-fun x3960 () Bool)
(declare-fun x5126 () Bool)
(declare-fun x2499 () Int)
(declare-fun x4900 () Int)
(declare-fun x8854 () Bool)
(declare-fun x4391 () Int)
(declare-fun x2385 () x3042)
(declare-fun x3522 () Bool)
(declare-fun x6596 () Bool)
(declare-fun x7996 () Int)
(declare-fun x6566 () Bool)
(declare-fun x7931 () Int)
(declare-fun x2812 () Int)
(declare-fun x407 () Bool)
(declare-fun x483 () Int)
(declare-fun x8109 () Bool)
(declare-fun x8476 () x3042)
(declare-fun x4957 () Bool)
(declare-fun x7669 () Bool)
(declare-fun x7410 () Bool)
(declare-fun x5822 () Int)
(declare-fun x8509 () Int)
(declare-fun x6714 () Int)
(declare-fun x7767 () Bool)
(declare-fun x7681 () Bool)
(declare-fun x753 () Int)
(declare-fun x7599 () x3042)
(declare-fun x799 () x3042)
(declare-fun x8257 () x3042)
(declare-fun x8765 () Bool)
(declare-fun x1581 () Int)
(declare-fun x8688 () Bool)
(declare-fun x8436 () x3042)
(declare-fun x7383 (x3042) Int)
(declare-fun x3206 () Bool)
(declare-fun x5307 () Int)
(declare-fun x5575 () Int)
(declare-fun x39 () Bool)
(declare-fun x2569 () Bool)
(declare-fun x1732 () Int)
(declare-fun x8601 () Bool)
(declare-fun x6394 () Int)
(declare-fun x242 () Bool)
(declare-fun x8873 () Int)
(declare-fun x1791 () Bool)
(declare-fun x7135 () Int)
(declare-fun x328 () Bool)
(declare-fun x5432 () Int)
(declare-fun x4862 () Int)
(declare-fun x3995 () Bool)
(declare-fun x6773 () Int)
(declare-fun x3073 () Bool)
(declare-fun x1537 () Bool)
(declare-fun x6525 () Int)
(declare-fun x4948 () Bool)
(declare-fun x149 () Int)
(declare-fun x1047 () Int)
(declare-fun x8506 () x3042)
(declare-fun x1277 () Bool)
(declare-fun x464 () Int)
(declare-fun x922 () Bool)
(declare-fun x5284 () Bool)
(declare-fun x2732 () Bool)
(declare-fun x3719 () Bool)
(declare-fun x108 () Int)
(declare-fun x532 () Bool)
(declare-fun x2759 () Int)
(declare-fun x7299 () Int)
(declare-fun x1858 () Int)
(declare-fun x1283 () Bool)
(declare-fun x961 () Int)
(declare-fun x4459 () Bool)
(declare-fun x7398 () Bool)
(declare-fun x8412 () Bool)
(declare-fun x2061 () Bool)
(declare-fun x8884 () Int)
(declare-fun x2883 () Int)
(declare-fun x4574 () Bool)
(declare-fun x4935 () Bool)
(declare-fun x958 () Int)
(declare-fun x3888 () x3042)
(declare-fun x3495 () Bool)
(declare-fun x2278 () Bool)
(declare-fun x971 () Int)
(declare-fun x79 (x3042) Int)
(declare-fun x6485 () Bool)
(declare-fun x6856 () x3042)
(declare-fun x4792 () Int)
(declare-fun x7511 () Bool)
(declare-fun x6509 () Bool)
(declare-fun x9042 () Bool)
(declare-fun x1671 () Bool)
(declare-fun x7827 () x3042)
(declare-fun x3724 () Bool)
(declare-fun x1822 () x3042)
(declare-fun x2508 () Int)
(declare-fun x7954 () x3042)
(declare-fun x2760 () Bool)
(declare-fun x5541 () Int)
(declare-fun x5004 () Int)
(declare-fun x8014 () Bool)
(declare-fun x7635 () Bool)
(declare-fun x2424 () Bool)
(declare-fun x5210 () Int)
(declare-fun x3059 () Int)
(declare-fun x6119 () Bool)
(declare-fun x1327 () Bool)
(declare-fun x4501 (Int) Int)
(declare-fun x6453 () Int)
(declare-fun x4653 () Bool)
(declare-fun x168 () Bool)
(declare-fun x2065 () Bool)
(declare-fun x4445 () Bool)
(declare-fun x839 () Bool)
(declare-fun x7071 () Bool)
(declare-fun x2058 () Bool)
(declare-fun x7069 () x3042)
(declare-fun x8064 () Bool)
(declare-fun x1689 () Bool)
(declare-fun x3117 () Bool)
(declare-fun x1439 () Int)
(declare-fun x4732 () Bool)
(declare-fun x3265 () Int)
(declare-fun x5660 () x3042)
(declare-fun x9193 () Bool)
(declare-fun x4346 () Bool)
(declare-fun x2868 () Bool)
(declare-fun x1188 () Int)
(declare-fun x7180 () Bool)
(declare-fun x876 () Bool)
(declare-fun x7262 () Bool)
(declare-fun x8272 () Bool)
(declare-fun x8662 () x3042)
(declare-fun x8911 () Bool)
(declare-fun x3380 () Int)
(declare-fun x5743 () Bool)
(declare-fun x8468 () Bool)
(declare-fun x8943 () Bool)
(declare-fun x7857 () Bool)
(declare-fun x6492 () Int)
(declare-fun x5523 () Int)
(declare-fun x7104 () x3042)
(declare-fun x9160 () Int)
(declare-fun x6165 () Int)
(declare-fun x2235 () Bool)
(declare-fun x7650 () Int)
(declare-fun x4240 () Bool)
(declare-fun x6258 () Bool)
(declare-fun x8709 () Int)
(declare-fun x7133 () Bool)
(declare-fun x1628 () Int)
(declare-fun x745 () Int)
(declare-fun x4322 () Bool)
(declare-fun x4381 () Bool)
(declare-fun x4457 () Bool)
(declare-fun x8620 () Int)
(declare-fun x7268 () Int)
(declare-fun x8531 (x3042) Int)
(declare-fun x6822 () Int)
(declare-fun x7524 () Int)
(declare-fun x7878 () Bool)
(declare-fun x1969 () Bool)
(declare-fun x6804 () Int)
(declare-fun x4396 () Int)
(declare-fun x2530 () Bool)
(declare-fun x7713 () Bool)
(declare-fun x7978 () Bool)
(declare-fun x4701 () Bool)
(declare-fun x1990 () Bool)
(declare-fun x3138 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x8574 () x3042)
(declare-fun x4187 () Int)
(declare-fun x3560 () Bool)
(declare-fun x6606 () Int)
(declare-fun x2915 () Bool)
(declare-fun x7836 () Int)
(declare-fun x1957 () Int)
(declare-fun x6935 () Bool)
(declare-fun x6368 () Bool)
(declare-fun x1926 () Bool)
(declare-fun x2331 () Int)
(declare-fun x2464 () Int)
(declare-fun x5387 () Bool)
(declare-fun x8643 () Bool)
(declare-fun x4644 () Bool)
(declare-fun x4781 () Bool)
(declare-fun x1514 () Bool)
(declare-fun x5380 () Bool)
(declare-fun x5279 () Bool)
(declare-fun x111 () Bool)
(declare-fun x3761 () Int)
(declare-fun x6040 () Bool)
(declare-fun x4251 () Int)
(declare-fun x2742 () Int)
(declare-fun x4952 () Bool)
(declare-fun x1485 () x3042)
(declare-fun x9163 () Int)
(declare-fun x8679 () Int)
(declare-fun x1450 () Bool)
(declare-fun x6679 () x3042)
(declare-fun x1888 () Int)
(declare-fun x304 () Bool)
(declare-fun x2329 () Bool)
(declare-fun x5216 () Int)
(declare-fun x1699 () Int)
(declare-fun x2282 () Bool)
(declare-fun x6582 () Int)
(declare-fun x4828 () Int)
(declare-fun x2152 () Int)
(declare-fun x4645 () Bool)
(declare-fun x5487 () Int)
(declare-fun x8445 () Bool)
(declare-fun x5481 () Bool)
(declare-fun x355 () Bool)
(declare-fun x1396 () Bool)
(declare-fun x533 () Bool)
(declare-fun x906 () Bool)
(declare-fun x1592 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x6481 () Bool)
(declare-fun x8335 () Int)
(declare-fun x6869 () Bool)
(declare-fun x8199 () Int)
(declare-fun x4201 () Int)
(declare-fun x8118 () Int)
(declare-fun x7543 () x3042)
(declare-fun x9152 () Bool)
(declare-fun x4844 () Int)
(declare-fun x4827 () Bool)
(declare-fun x6465 () Int)
(declare-fun x3734 () Int)
(declare-fun x2053 () Int)
(declare-fun x8110 () Int)
(declare-fun x8408 () Int)
(declare-fun x9209 () Bool)
(declare-fun x488 () Int)
(declare-fun x5631 () Bool)
(declare-fun x2009 () Int)
(declare-fun x4124 () x3042)
(declare-fun x8416 () Bool)
(declare-fun x5533 () Int)
(declare-fun x2900 () Bool)
(declare-fun x8778 () x3042)
(declare-fun x7005 () Bool)
(declare-fun x8246 () Int)
(declare-fun x1419 () Bool)
(declare-fun x112 () x3042)
(declare-fun x6140 () x3042)
(declare-fun x1276 () Bool)
(declare-fun x381 () Int)
(declare-fun x4067 () Bool)
(declare-fun x8381 () Int)
(declare-fun x6892 () Bool)
(declare-fun x630 () Bool)
(declare-fun x6554 () Bool)
(declare-fun x3850 () Bool)
(declare-fun x7225 () Bool)
(declare-fun x5851 () Int)
(declare-fun x4896 () Bool)
(declare-fun x4836 () Int)
(declare-fun x4028 () Bool)
(declare-fun x3214 () Bool)
(declare-fun x7101 () Int)
(declare-fun x9165 () Int)
(declare-fun x6389 () Bool)
(declare-fun x7450 () Bool)
(declare-fun x1140 () Int)
(declare-fun x4521 () Bool)
(declare-fun x8486 () Int)
(declare-fun x4232 () Bool)
(declare-fun x7517 () Int)
(declare-fun x8264 () Bool)
(declare-fun x6227 () Bool)
(declare-fun x5427 () Bool)
(declare-fun x5910 () Bool)
(declare-fun x4968 () Bool)
(declare-fun x2191 () Int)
(declare-fun x9221 () Bool)
(declare-fun x3895 () Bool)
(declare-fun x949 () x3042)
(declare-fun x47 () Bool)
(declare-fun x6755 () Int)
(declare-fun x4470 () x3042)
(declare-fun x7237 () Int)
(declare-fun x2576 () Bool)
(declare-fun x9246 () Int)
(declare-fun x1747 () Bool)
(declare-fun x4053 () Bool)
(declare-fun x4205 () x3042)
(declare-fun x1989 () Bool)
(declare-fun x6118 () Int)
(declare-fun x5590 () Int)
(declare-fun x3643 () Int)
(declare-fun x3174 () Bool)
(declare-fun x4875 () Bool)
(declare-fun x4404 () Bool)
(declare-fun x3818 () Int)
(declare-fun x2668 () Bool)
(declare-fun x6901 () Bool)
(declare-fun x7190 () Bool)
(declare-fun x2541 () Bool)
(declare-fun x6837 () Int)
(declare-fun x6319 () x3042)
(declare-fun x2361 () Bool)
(declare-fun x1371 () x3042)
(declare-fun x2756 () Bool)
(declare-fun x3043 () x3042)
(declare-fun x7319 () Int)
(declare-fun x8814 () Bool)
(declare-fun x1677 () Int)
(declare-fun x7979 () Bool)
(declare-fun x6218 () Bool)
(declare-fun x5816 () x3042)
(declare-fun x4811 () x3042)
(declare-fun x6390 () Bool)
(declare-fun x4704 () Bool)
(declare-fun x7391 () Bool)
(declare-fun x3011 () Bool)
(declare-fun x2534 () Int)
(declare-fun x7952 () Bool)
(declare-fun x3132 () Bool)
(declare-fun x2296 () Int)
(declare-fun x16 () Bool)
(declare-fun x8035 () Int)
(declare-fun x1798 () Int)
(declare-fun x1465 () Bool)
(declare-fun x1 () Bool)
(declare-fun x4700 () x3042)
(declare-fun x6964 () Bool)
(declare-fun x5670 () Bool)
(declare-fun x7678 () Int)
(declare-fun x8757 () Bool)
(declare-fun x6641 () Int)
(declare-fun x7704 () Int)
(declare-fun x8325 () Int)
(declare-fun x5656 () Bool)
(declare-fun x7015 () x3042)
(declare-fun x4867 () Bool)
(declare-fun x1737 () Int)
(declare-fun x843 () Bool)
(declare-fun x4272 (Int) Int)
(declare-fun x1849 () Int)
(declare-fun x966 () Int)
(declare-fun x8052 () x3042)
(declare-fun x1602 () Bool)
(declare-fun x3356 () Bool)
(declare-fun x5986 () Int)
(declare-fun x5193 () Bool)
(declare-fun x3521 () Int)
(declare-fun x7149 () x3042)
(declare-fun x30 () Int)
(declare-fun x3276 () Int)
(declare-fun x2502 () Int)
(declare-fun x3329 () Int)
(declare-fun x3053 () Int)
(declare-fun x1096 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x8106 () Int)
(declare-fun x6776 () Bool)
(declare-fun x6933 () Int)
(declare-fun x588 () Bool)
(declare-fun x8835 () x3042)
(declare-fun x3902 () Bool)
(declare-fun x1187 () Bool)
(declare-fun x5323 () Bool)
(declare-fun x7769 () Bool)
(declare-fun x7263 () Bool)
(declare-fun x17 () Int)
(declare-fun x2524 () Bool)
(declare-fun x9088 () Int)
(declare-fun x4390 () Bool)
(declare-fun x5710 () Int)
(declare-fun x7715 () Int)
(declare-fun x8108 () Int)
(declare-fun x1509 () Bool)
(declare-fun x1800 () Int)
(declare-fun x3860 () Bool)
(declare-fun x2432 () Int)
(declare-fun x9247 () Bool)
(declare-fun x3908 () Bool)
(declare-fun x1991 () Int)
(declare-fun x3447 () x3042)
(declare-fun x658 () Int)
(declare-fun x7420 () Bool)
(declare-fun x9268 () Int)
(declare-fun x7804 () Bool)
(declare-fun x5395 () Bool)
(declare-fun x1830 () Int)
(declare-fun x4884 () Int)
(declare-fun x5546 () x3042)
(declare-fun x6708 () Bool)
(declare-fun x7406 () Int)
(declare-fun x8845 () Bool)
(declare-fun x8370 () Bool)
(declare-fun x3196 () Int)
(declare-fun x9203 () Bool)
(declare-fun x7208 () Int)
(declare-fun x2700 () Int)
(declare-fun x3422 () Bool)
(declare-fun x2272 () Bool)
(declare-fun x828 () Int)
(declare-fun x3327 () Bool)
(declare-fun x4155 () Int)
(declare-fun x6363 () x3042)
(declare-fun x3430 () Bool)
(declare-fun x6058 () Bool)
(declare-fun x3758 () Bool)
(declare-fun x8084 () Bool)
(declare-fun x3288 () Bool)
(declare-fun x1336 () Bool)
(declare-fun x2083 () Bool)
(declare-fun x5935 () Int)
(declare-fun x2665 () Bool)
(declare-fun x8105 () Int)
(declare-fun x2831 () Bool)
(declare-fun x2012 () Int)
(declare-fun x29 () Bool)
(declare-fun x5424 () Int)
(declare-fun x6562 () Bool)
(declare-fun x3757 () Int)
(declare-fun x8012 () Int)
(declare-fun x5678 () Bool)
(declare-fun x1268 () Bool)
(declare-fun x8748 (x3042) Int)
(declare-fun x1075 () x3042)
(declare-fun x4887 () Int)
(declare-fun x5685 () Bool)
(declare-fun x7722 () Bool)
(declare-fun x4491 () Int)
(declare-fun x8116 () Int)
(declare-fun x8443 () Bool)
(declare-fun x7142 () Bool)
(declare-fun x5741 () Int)
(declare-fun x3424 () Bool)
(declare-fun x277 () Bool)
(declare-fun x7320 () Int)
(declare-fun x4927 () Int)
(declare-fun x3330 () Bool)
(declare-fun x7539 () Bool)
(declare-fun x8730 () Bool)
(declare-fun x7619 () Int)
(declare-fun x2060 () x3042)
(declare-fun x5747 () Int)
(declare-fun x6854 (Int) Int)
(declare-fun x3252 () Bool)
(declare-fun x2586 () Bool)
(declare-fun x7762 () Bool)
(declare-fun x7239 () x3042)
(declare-fun x746 () Bool)
(declare-fun x8673 () Bool)
(declare-fun x1248 () Bool)
(declare-fun x4849 () Int)
(declare-fun x5944 () Bool)
(declare-fun x2293 () Bool)
(declare-fun x5731 () Bool)
(declare-fun x2084 () Int)
(declare-fun x5124 () Int)
(declare-fun x1852 () Int)
(declare-fun x8397 () Int)
(declare-fun x9178 () Int)
(declare-fun x1063 () x3042)
(declare-fun x970 () Int)
(declare-fun x9231 () Int)
(declare-fun x3078 () Bool)
(declare-fun x7866 () Bool)
(declare-fun x4332 () Bool)
(declare-fun x2921 () Int)
(declare-fun x593 () Bool)
(declare-fun x5572 () x3042)
(declare-fun x5024 () Bool)
(declare-fun x6068 () Bool)
(declare-fun x2688 () Bool)
(declare-fun x5400 () Bool)
(declare-fun x440 () Int)
(declare-fun x9052 () Int)
(declare-fun x1582 () Int)
(declare-fun x623 () Bool)
(declare-fun x287 () Bool)
(declare-fun x7567 () Bool)
(declare-fun x3273 () Bool)
(declare-fun x2874 () Bool)
(declare-fun x6878 () Bool)
(declare-fun x1146 () Bool)
(declare-fun x7321 () Int)
(declare-fun x3339 () Bool)
(declare-fun x299 () Int)
(declare-fun x2542 () Bool)
(declare-fun x3004 () Bool)
(declare-fun x2150 () Int)
(declare-fun x5669 () Int)
(declare-fun x2892 () Bool)
(declare-fun x4412 () Bool)
(declare-fun x2117 () Bool)
(declare-fun x1616 () x3042)
(declare-fun x6023 () Int)
(declare-fun x547 () Bool)
(declare-fun x4481 () Bool)
(declare-fun x8332 () Int)
(declare-fun x6967 () x3042)
(declare-fun x5161 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x7315 () x3042)
(declare-fun x6400 () Bool)
(declare-fun x8766 () Int)
(declare-fun x5003 () x3042)
(declare-fun x3137 () Int)
(declare-fun x3165 () Bool)
(declare-fun x6497 () Bool)
(declare-fun x4001 () Bool)
(declare-fun x23 () Bool)
(declare-fun x5337 () Bool)
(declare-fun x6870 () Bool)
(declare-fun x2209 () Bool)
(declare-fun x5997 () Int)
(declare-fun x7204 () Bool)
(declare-fun x3926 () x3042)
(declare-fun x4037 () Bool)
(declare-fun x9111 () Bool)
(declare-fun x8933 () Int)
(declare-fun x8008 () Bool)
(declare-fun x8477 () Bool)
(declare-fun x3954 () x3042)
(declare-fun x5025 () Bool)
(declare-fun x1869 () Int)
(declare-fun x2986 () Int)
(declare-fun x124 () Int)
(declare-fun x1605 () Bool)
(declare-fun x7198 () x3042)
(declare-fun x1850 () Bool)
(declare-fun x5270 () Bool)
(declare-fun x7134 () Bool)
(declare-fun x459 () Bool)
(declare-fun x7230 () Bool)
(declare-fun x9260 () Int)
(declare-fun x1108 () x3042)
(declare-fun x4419 () Bool)
(declare-fun x4834 () x3042)
(declare-fun x5680 () Int)
(declare-fun x8200 () Bool)
(declare-fun x1615 () Int)
(declare-fun x1468 () Bool)
(declare-fun x3733 () Int)
(declare-fun x6374 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x2208 () Bool)
(declare-fun x8939 () Bool)
(declare-fun x904 () Int)
(declare-fun x9264 () Bool)
(declare-fun x24 () Int)
(declare-fun x5000 () Bool)
(declare-fun x5940 () Bool)
(declare-fun x7099 () Bool)
(declare-fun x7006 () Bool)
(declare-fun x6568 () Int)
(declare-fun x7604 () x3042)
(declare-fun x7659 () Bool)
(declare-fun x3024 () Bool)
(declare-fun x5793 () Bool)
(declare-fun x4316 () x3042)
(declare-fun x6504 (x3042) Int)
(declare-fun x7944 () Int)
(declare-fun x4780 () Bool)
(declare-fun x5855 () Bool)
(declare-fun x1259 () Bool)
(declare-fun x9123 () x3042)
(declare-fun x7916 () x3042)
(declare-fun x3839 () Int)
(declare-fun x8125 () Int)
(declare-fun x3392 () Int)
(declare-fun x8533 () Bool)
(declare-fun x3779 () Bool)
(declare-fun x878 () Bool)
(declare-fun x1492 () Int)
(declare-fun x183 () Bool)
(declare-fun x6280 () Bool)
(declare-fun x8719 () Bool)
(declare-fun x2446 () Int)
(declare-fun x4126 () Bool)
(declare-fun x3881 () Bool)
(declare-fun x7615 () Bool)
(declare-fun x6608 () Int)
(declare-fun x8899 () Bool)
(declare-fun x8561 () Bool)
(declare-fun x3062 () x3042)
(declare-fun x8048 () Int)
(declare-fun x6628 () x3042)
(declare-fun x1770 () Int)
(declare-fun x6759 () Bool)
(declare-fun x8573 () Int)
(declare-fun x1258 () x3042)
(declare-fun x1407 () Int)
(declare-fun x4495 () Bool)
(declare-fun x2533 () Int)
(declare-fun x4523 () Bool)
(declare-fun x3832 () x3042)
(declare-fun x6072 () Int)
(declare-fun x8129 () x3042)
(declare-fun x1317 (Int) Int)
(declare-fun x4398 () x3042)
(declare-fun x4096 () Int)
(declare-fun x4967 () Bool)
(declare-fun x4725 () x3042)
(declare-fun x7228 () Bool)
(declare-fun x7702 () Int)
(declare-fun x4771 () Bool)
(declare-fun x6595 () Bool)
(declare-fun x2934 () Int)
(declare-fun x862 (Int) Int)
(declare-fun x6354 () Bool)
(declare-fun x832 () Bool)
(declare-fun x7393 () Bool)
(declare-fun x4775 () Int)
(declare-fun x6689 (x3042) Int)
(declare-fun x1549 () Bool)
(declare-fun x2713 () Int)
(declare-fun x424 () Bool)
(declare-fun x7141 () Bool)
(declare-fun x2823 () Bool)
(declare-fun x4301 () Int)
(declare-fun x6694 () Bool)
(declare-fun x8388 () x3042)
(declare-fun x1033 () x3042)
(declare-fun x3385 () Int)
(declare-fun x102 () Bool)
(declare-fun x6341 () Bool)
(declare-fun x3094 () Int)
(declare-fun x6816 () x3042)
(declare-fun x3491 () Bool)
(declare-fun x4981 () Int)
(declare-fun x6322 () Bool)
(declare-fun x1458 () x3042)
(declare-fun x8576 () Bool)
(declare-fun x4606 () Bool)
(declare-fun x2964 () Bool)
(declare-fun x4482 () Bool)
(declare-fun x5201 () Bool)
(declare-fun x1321 () Int)
(declare-fun x429 () x3042)
(declare-fun x4630 () Bool)
(declare-fun x8537 () Bool)
(declare-fun x3423 () Bool)
(declare-fun x4588 () Int)
(declare-fun x5072 () Bool)
(declare-fun x123 () Int)
(declare-fun x6089 () Int)
(declare-fun x130 () Int)
(declare-fun x5114 () Bool)
(declare-fun x4444 () Int)
(declare-fun x6815 () Bool)
(declare-fun x7739 () Bool)
(declare-fun x3593 () Int)
(declare-fun x490 () Int)
(declare-fun x4743 () Int)
(declare-fun x4214 () Int)
(declare-fun x4692 () Bool)
(declare-fun x9143 () Bool)
(declare-fun x2039 () Bool)
(declare-fun x3297 () Bool)
(declare-fun x2149 () Int)
(declare-fun x6650 () x3042)
(declare-fun x4075 () Int)
(declare-fun x3898 () Bool)
(declare-fun x72 () Int)
(declare-fun x5653 () Bool)
(declare-fun x8924 () Int)
(declare-fun x2785 () Bool)
(declare-fun x7933 () Bool)
(declare-fun x7117 () Bool)
(declare-fun x5679 () Bool)
(declare-fun x2963 () Int)
(declare-fun x5435 () Int)
(declare-fun x1189 () x3042)
(declare-fun x4449 () Bool)
(declare-fun x4987 () Bool)
(declare-fun x8341 () Bool)
(declare-fun x2997 () Int)
(declare-fun x8746 () Int)
(declare-fun x4561 () Int)
(declare-fun x6015 () Int)
(declare-fun x9149 () Bool)
(declare-fun x7731 () Bool)
(declare-fun x5760 () Bool)
(declare-fun x6636 () Bool)
(declare-fun x8923 () Int)
(declare-fun x8792 () Int)
(declare-fun x3822 () Int)
(declare-fun x4826 () Int)
(declare-fun x6809 () Int)
(declare-fun x5151 () Bool)
(declare-fun x7566 () x3042)
(declare-fun x7365 () Int)
(declare-fun x5889 () Int)
(declare-fun x2507 () Int)
(declare-fun x8997 () Int)
(declare-fun x1971 () x3042)
(declare-fun x3738 () Int)
(declare-fun x7717 () Bool)
(declare-fun x8058 () Bool)
(declare-fun x8947 () Bool)
(declare-fun x7332 () Int)
(declare-fun x1859 () Bool)
(declare-fun x8253 () Int)
(declare-fun x1292 () Bool)
(declare-fun x872 () Int)
(declare-fun x4819 () x3042)
(declare-fun x1445 () Int)
(declare-fun x8868 () Int)
(declare-fun x8945 () Int)
(declare-fun x7115 () x3042)
(declare-fun x5915 () x3042)
(declare-fun x8104 () Int)
(declare-fun x3894 () x3042)
(declare-fun x1301 () Bool)
(declare-fun x5317 () Bool)
(declare-fun x2602 () Int)
(declare-fun x4682 () x3042)
(declare-fun x8089 () Int)
(declare-fun x1093 () Bool)
(declare-fun x5075 () Int)
(declare-fun x5152 () Bool)
(declare-fun x5984 () Int)
(declare-fun x191 () Int)
(declare-fun x3621 () x3042)
(declare-fun x8750 () Bool)
(declare-fun x1386 () Bool)
(declare-fun x8471 () Int)
(declare-fun x8234 () Bool)
(declare-fun x7395 () x3042)
(declare-fun x9244 () Bool)
(declare-fun x3744 () Int)
(declare-fun x2698 () Int)
(declare-fun x4667 () Int)
(declare-fun x8126 () Bool)
(declare-fun x5453 () Bool)
(declare-fun x5919 () Int)
(declare-fun x1447 () Bool)
(declare-fun x7761 () Bool)
(declare-fun x2643 () Int)
(declare-fun x8776 () Bool)
(declare-fun x7785 () Int)
(declare-fun x2744 () Bool)
(declare-fun x5884 () Bool)
(declare-fun x2322 () Bool)
(declare-fun x2156 () Bool)
(declare-fun x6462 () Bool)
(declare-fun x8499 () Bool)
(declare-fun x3549 () x3042)
(declare-fun x6520 () Bool)
(declare-fun x722 () Int)
(declare-fun x5937 () Int)
(declare-fun x5955 () Bool)
(declare-fun x6175 () Bool)
(declare-fun x2811 () Int)
(declare-fun x6888 () Int)
(declare-fun x3783 () Bool)
(declare-fun x4608 () Int)
(declare-fun x315 () Bool)
(declare-fun x556 () Bool)
(declare-fun x3096 () Int)
(declare-fun x5772 () Bool)
(declare-fun x8703 () Bool)
(declare-fun x251 () Bool)
(declare-fun x7466 () Int)
(declare-fun x6448 () Int)
(declare-fun x7513 () Bool)
(declare-fun x3862 () Bool)
(declare-fun x4103 () Bool)
(declare-fun x3847 () Bool)
(declare-fun x7703 () Int)
(declare-fun x914 () Int)
(declare-fun x521 () Int)
(declare-fun x4517 () Bool)
(declare-fun x6681 () x3042)
(declare-fun x1070 () Int)
(declare-fun x2309 () Bool)
(declare-fun x6130 () Bool)
(declare-fun x5111 () Bool)
(declare-fun x5717 () x3042)
(declare-fun x1730 () Int)
(declare-fun x6604 () Bool)
(declare-fun x8312 () Bool)
(declare-fun x3769 () Int)
(declare-fun x263 () Int)
(declare-fun x40 () Int)
(declare-fun x8427 () Bool)
(declare-fun x3676 () Bool)
(declare-fun x8269 () Bool)
(declare-fun x5501 () Bool)
(declare-fun x8268 () Int)
(declare-fun x8901 () Bool)
(declare-fun x6739 () Int)
(declare-fun x6256 () Bool)
(declare-fun x7864 () x3042)
(declare-fun x948 () Int)
(declare-fun x2767 () Bool)
(declare-fun x3179 () x3042)
(declare-fun x3955 () Bool)
(declare-fun x8001 () Int)
(declare-fun x4129 () Int)
(declare-fun x2693 () Int)
(declare-fun x4735 () Bool)
(declare-fun x1148 () Int)
(declare-fun x8824 () Int)
(declare-fun x86 () Bool)
(declare-fun x6408 () x3042)
(declare-fun x6696 () Int)
(declare-fun x5633 () Bool)
(declare-fun x4749 () Bool)
(declare-fun x7654 () x3042)
(declare-fun x9005 () Int)
(declare-fun x2951 () Bool)
(declare-fun x8998 () Bool)
(declare-fun x6092 () Int)
(declare-fun x7328 () Bool)
(declare-fun x2434 () Int)
(declare-fun x3341 () x3042)
(declare-fun x6963 () Bool)
(declare-fun x5558 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x7747 () Int)
(declare-fun x4452 () Bool)
(declare-fun x8472 () Int)
(declare-fun x8973 () Bool)
(declare-fun x5898 () Int)
(declare-fun x4015 () Bool)
(declare-fun x7893 () x3042)
(declare-fun x8409 () Bool)
(declare-fun x7776 () Int)
(declare-fun x2695 () Int)
(declare-fun x6659 () Bool)
(declare-fun x1838 () Bool)
(declare-fun x4020 () Bool)
(declare-fun x9101 () x3042)
(declare-fun x8608 () Int)
(declare-fun x2684 () Int)
(declare-fun x730 () Bool)
(declare-fun x1697 () Bool)
(declare-fun x4841 () Int)
(declare-fun x2932 () Int)
(declare-fun x4553 () Int)
(declare-fun x1892 () Int)
(declare-fun x7122 () Int)
(declare-fun x849 () Bool)
(declare-fun x4903 () x3042)
(declare-fun x5646 () Int)
(declare-fun x8456 () Bool)
(declare-fun x8522 () Int)
(declare-fun x6539 () Bool)
(declare-fun x6594 () Bool)
(declare-fun x481 () Int)
(declare-fun x3844 () Bool)
(declare-fun x410 () Bool)
(declare-fun x6431 () Int)
(declare-fun x8078 () Bool)
(declare-fun x8636 (x3042) Int)
(declare-fun x4287 () Bool)
(declare-fun x3893 () Bool)
(declare-fun x1603 () Int)
(declare-fun x1515 () Int)
(declare-fun x1576 () Int)
(declare-fun x4622 () Int)
(declare-fun x5362 () Bool)
(declare-fun x2001 () Int)
(declare-fun x1659 () x3042)
(declare-fun x2443 () Int)
(declare-fun x4750 () Bool)
(declare-fun x6100 () x3042)
(declare-fun x6107 () Int)
(declare-fun x2729 () Int)
(declare-fun x3647 () Int)
(declare-fun x4216 () Bool)
(declare-fun x5995 () Int)
(declare-fun x4167 () x3042)
(declare-fun x1479 () x3042)
(declare-fun x6674 () Int)
(declare-fun x4831 () Bool)
(declare-fun x4528 () Bool)
(declare-fun x607 () Bool)
(declare-fun x1786 () x3042)
(declare-fun x3981 (x3042) Int)
(declare-fun x278 () Bool)
(declare-fun x3740 () Int)
(declare-fun x8554 () Int)
(declare-fun x1123 () Int)
(declare-fun x1975 () Int)
(declare-fun x6329 () Bool)
(declare-fun x100 () Int)
(declare-fun x2722 () Int)
(declare-fun x8847 () x3042)
(declare-fun x2463 () Int)
(declare-fun x3538 () Int)
(declare-fun x3 () Bool)
(declare-fun x1634 () Bool)
(declare-fun x5675 () Int)
(declare-fun x6317 () x3042)
(declare-fun x5700 () Bool)
(declare-fun x9024 () Int)
(declare-fun x3592 () Bool)
(declare-fun x3845 () Bool)
(declare-fun x7437 () Int)
(declare-fun x1566 () x3042)
(declare-fun x6159 () x3042)
(declare-fun x5148 () Int)
(declare-fun x820 () Bool)
(declare-fun x2972 () Bool)
(declare-fun x7564 () Bool)
(declare-fun x3969 () Int)
(declare-fun x1905 () Bool)
(declare-fun x4537 () Bool)
(declare-fun x6512 () Int)
(declare-fun x3524 () Int)
(declare-fun x5941 () Int)
(declare-fun x1695 () x3042)
(declare-fun x9115 () Bool)
(declare-fun x6075 () Bool)
(declare-fun x5871 () Bool)
(declare-fun x6808 () Int)
(declare-fun x4402 () Bool)
(declare-fun x133 () Bool)
(declare-fun x9083 () Bool)
(declare-fun x1645 () x3042)
(declare-fun x2901 () Int)
(declare-fun x5346 () Int)
(declare-fun x8163 () Int)
(declare-fun x4525 () Int)
(declare-fun x6357 () Bool)
(declare-fun x5046 () Int)
(declare-fun x3950 () Bool)
(declare-fun x7105 () Int)
(declare-fun x6800 () Int)
(declare-fun x1453 () Int)
(declare-fun x6224 () Bool)
(declare-fun x3939 () Bool)
(declare-fun x6050 () Bool)
(declare-fun x3113 () Int)
(declare-fun x1642 () Bool)
(declare-fun x9095 () Bool)
(declare-fun x4361 () Int)
(declare-fun x2127 () Bool)
(declare-fun x2190 () Int)
(declare-fun x9197 () x3042)
(declare-fun x5825 () Bool)
(declare-fun x5616 () Bool)
(declare-fun x4571 () Int)
(declare-fun x6108 () Int)
(declare-fun x4985 () Int)
(declare-fun x6909 () Int)
(declare-fun x2298 () Bool)
(declare-fun x1495 () x3042)
(declare-fun x9027 () Bool)
(declare-fun x3544 () Bool)
(declare-fun x902 () Bool)
(declare-fun x1942 () Bool)
(declare-fun x7287 () Int)
(declare-fun x8361 () Int)
(declare-fun x3008 () Int)
(declare-fun x6220 () x3042)
(declare-fun x1547 () x3042)
(declare-fun x1772 () Bool)
(declare-fun x8900 () Int)
(declare-fun x4820 () Int)
(declare-fun x2525 () x3042)
(declare-fun x246 () Int)
(declare-fun x2337 () Int)
(declare-fun x6079 () Bool)
(declare-fun x1951 () Int)
(declare-fun x6384 () x3042)
(declare-fun x5704 () Int)
(declare-fun x1365 () Int)
(declare-fun x4921 () Bool)
(declare-fun x4036 () x3042)
(declare-fun x5500 () Int)
(declare-fun x5047 (x3042) Int)
(declare-fun x3472 () Int)
(declare-fun x9227 () Bool)
(declare-fun x1036 () Bool)
(declare-fun x1551 () Int)
(declare-fun x261 () Bool)
(declare-fun x6463 () Bool)
(declare-fun x6086 () x3042)
(declare-fun x5735 () Bool)
(declare-fun x5031 () Bool)
(declare-fun x8820 () Bool)
(declare-fun x1110 () Int)
(declare-fun x9254 () Int)
(declare-fun x5992 () x3042)
(declare-fun x397 () Bool)
(declare-fun x6433 () Int)
(declare-fun x2386 () x3042)
(declare-fun x6122 () Bool)
(declare-fun x1753 () Int)
(declare-fun x1561 () Bool)
(declare-fun x2894 () Int)
(declare-fun x694 () Int)
(declare-fun x7419 () Bool)
(declare-fun x4552 () Bool)
(declare-fun x736 () Int)
(declare-fun x8546 () Bool)
(declare-fun x3072 () Int)
(declare-fun x1141 () Bool)
(declare-fun x864 () Int)
(declare-fun x2142 () Bool)
(declare-fun x5290 () Int)
(declare-fun x639 () Bool)
(declare-fun x471 () Bool)
(declare-fun x6310 () Int)
(declare-fun x4979 () x3042)
(declare-fun x7226 () Bool)
(declare-fun x6615 () Int)
(declare-fun x7384 () Int)
(declare-fun x2543 () Bool)
(declare-fun x6768 () Bool)
(declare-fun x8826 () Int)
(declare-fun x2307 () Bool)
(declare-fun x4515 () x3042)
(declare-fun x5754 () Bool)
(declare-fun x3178 () Bool)
(declare-fun x2664 () Int)
(declare-fun x386 () Bool)
(declare-fun x7508 () Bool)
(declare-fun x6676 () Bool)
(declare-fun x6102 () Bool)
(declare-fun x1992 () Bool)
(declare-fun x8872 () Bool)
(declare-fun x9217 (x3042) Int)
(declare-fun x9060 () Int)
(declare-fun x4572 () Bool)
(declare-fun x1919 () Bool)
(declare-fun x8806 () Bool)
(declare-fun x1700 () Bool)
(declare-fun x8318 () Int)
(declare-fun x7624 () Bool)
(declare-fun x5064 () Int)
(declare-fun x8343 () x3042)
(declare-fun x667 () Int)
(declare-fun x708 () Bool)
(declare-fun x4217 () Int)
(declare-fun x5902 () Bool)
(declare-fun x3692 () Bool)
(declare-fun x1216 () Int)
(declare-fun x5895 () Bool)
(declare-fun x5315 (Int) Int)
(declare-fun x9167 () Bool)
(declare-fun x6601 () Int)
(declare-fun x1929 () Bool)
(declare-fun x2143 () Bool)
(declare-fun x2877 () Int)
(declare-fun x9188 () Bool)
(declare-fun x670 () Bool)
(declare-fun x3122 () Int)
(declare-fun x9176 () Bool)
(declare-fun x1587 () Int)
(declare-fun x1014 () Bool)
(declare-fun x4949 () Bool)
(declare-fun x3514 () Int)
(declare-fun x6702 () x3042)
(declare-fun x3511 () Bool)
(declare-fun x8562 () Int)
(declare-fun x7469 () Bool)
(declare-fun x4181 () Int)
(declare-fun x7368 () x3042)
(declare-fun x2356 () Bool)
(declare-fun x3051 () Bool)
(declare-fun x9079 () Int)
(declare-fun x3019 () Bool)
(declare-fun x4941 () Bool)
(declare-fun x6076 () Bool)
(declare-fun x789 (x3042) Int)
(declare-fun x8768 () Bool)
(declare-fun x8340 () x3042)
(declare-fun x4369 () Bool)
(declare-fun x4195 () Bool)
(declare-fun x8858 () Bool)
(declare-fun x2268 () Int)
(declare-fun x5993 () Int)
(declare-fun x1413 () Int)
(declare-fun x6029 () Int)
(declare-fun x9047 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x8793 () x3042)
(declare-fun x7272 () Bool)
(declare-fun x4062 () Bool)
(declare-fun x4918 () x3042)
(declare-fun x1434 () Int)
(declare-fun x3147 () Bool)
(declare-fun x3938 () Bool)
(declare-fun x2173 () Bool)
(declare-fun x1554 () Int)
(declare-fun x6851 () Bool)
(declare-fun x7875 () Int)
(declare-fun x3405 () Bool)
(declare-fun x4052 () Int)
(declare-fun x3108 () Int)
(declare-fun x2423 () Int)
(declare-fun x2862 () Int)
(declare-fun x7314 () Int)
(declare-fun x6970 () Bool)
(declare-fun x1543 () Int)
(declare-fun x5738 () Int)
(declare-fun x2837 () Bool)
(declare-fun x9091 () Int)
(declare-fun x2482 () Bool)
(declare-fun x4677 () Int)
(declare-fun x8359 () Bool)
(declare-fun x7317 () x3042)
(declare-fun x3172 () Bool)
(declare-fun x2557 () Bool)
(declare-fun x2794 () Bool)
(declare-fun x4411 () Bool)
(declare-fun x4325 () Bool)
(declare-fun x3045 () x3042)
(declare-fun x6335 () Int)
(declare-fun x8235 () Bool)
(declare-fun x5777 () Int)
(declare-fun x8530 () Int)
(declare-fun x7955 () Int)
(declare-fun x882 () Bool)
(declare-fun x2842 () Bool)
(declare-fun x936 () Int)
(declare-fun x4173 () Bool)
(declare-fun x4264 () Int)
(declare-fun x3462 () Bool)
(declare-fun x3967 () Int)
(declare-fun x620 () Int)
(declare-fun x9171 () Int)
(declare-fun x932 () Int)
(declare-fun x151 () Int)
(declare-fun x2621 () Bool)
(declare-fun x7514 () Bool)
(declare-fun x7183 () Bool)
(declare-fun x3824 () Bool)
(declare-fun x8716 () Bool)
(declare-fun x6551 () Int)
(declare-fun x2187 () Bool)
(declare-fun x8121 () Int)
(declare-fun x4886 () Int)
(declare-fun x69 () Int)
(declare-fun x1516 () Bool)
(declare-fun x2260 () x3042)
(declare-fun x5166 () Bool)
(declare-fun x3115 () Int)
(declare-fun x3425 (Int) Int)
(declare-fun x6013 () Bool)
(declare-fun x7301 () Int)
(declare-fun x8042 () Bool)
(declare-fun x7276 () Bool)
(declare-fun x213 () x3042)
(declare-fun x2721 () Bool)
(declare-fun x1206 () Int)
(declare-fun x362 () Bool)
(declare-fun x8526 () Int)
(declare-fun x7547 () Bool)
(declare-fun x6617 () Bool)
(declare-fun x6162 () Bool)
(declare-fun x7194 () x3042)
(declare-fun x8003 () Bool)
(declare-fun x9046 () Bool)
(declare-fun x5469 () Int)
(declare-fun x1987 () Int)
(declare-fun x1125 () Bool)
(declare-fun x873 () Int)
(declare-fun x7976 () x3042)
(declare-fun x7763 () Bool)
(declare-fun x9107 () Int)
(declare-fun x8593 () Bool)
(declare-fun x7617 () Bool)
(declare-fun x1693 () Bool)
(declare-fun x636 () Bool)
(declare-fun x6687 () Bool)
(declare-fun x4783 () Int)
(declare-fun x6467 () Int)
(declare-fun x6767 () Bool)
(declare-fun x5303 () x3042)
(declare-fun x5188 () Bool)
(declare-fun x2916 () Bool)
(declare-fun x6362 () Int)
(declare-fun x7830 () Int)
(declare-fun x6398 () Bool)
(declare-fun x5108 () Int)
(declare-fun x6665 () Bool)
(declare-fun x8219 () Int)
(declare-fun x586 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x4590 () Bool)
(declare-fun x3503 () Bool)
(declare-fun x7605 () Int)
(declare-fun x562 () Bool)
(declare-fun x9008 () Int)
(declare-fun x6680 () Bool)
(declare-fun x995 () Bool)
(declare-fun x4012 () Int)
(declare-fun x5649 () Bool)
(declare-fun x9186 () Bool)
(declare-fun x2885 () Bool)
(declare-fun x5612 () Int)
(declare-fun x8107 () Int)
(declare-fun x8217 (Int) Int)
(declare-fun x808 () Int)
(declare-fun x1840 () Int)
(declare-fun x6603 () Bool)
(declare-fun x9243 () Int)
(declare-fun x4933 () Int)
(declare-fun x8074 () Bool)
(declare-fun x3615 () Bool)
(declare-fun x7666 () x3042)
(declare-fun x2981 () x3042)
(declare-fun x3314 () Int)
(declare-fun x7415 () Int)
(declare-fun x6505 () Bool)
(declare-fun x3411 () Int)
(declare-fun x7403 () Bool)
(declare-fun x7082 () Int)
(declare-fun x385 () Int)
(declare-fun x6807 () Int)
(declare-fun x1540 () Bool)
(declare-fun x6238 () Int)
(declare-fun x1454 () Bool)
(declare-fun x6145 () Bool)
(declare-fun x7634 () x3042)
(declare-fun x7574 () Int)
(declare-fun x2396 () Bool)
(declare-fun x7732 () Int)
(declare-fun x3409 () Bool)
(declare-fun x6318 () Bool)
(declare-fun x3608 () Bool)
(declare-fun x4575 () x3042)
(declare-fun x1044 () Int)
(declare-fun x7807 () Bool)
(declare-fun x4946 () Int)
(declare-fun x2876 () Int)
(declare-fun x5293 () x3042)
(declare-fun x813 () Int)
(declare-fun x6639 () Bool)
(declare-fun x2497 () Bool)
(declare-fun x5226 () Int)
(declare-fun x903 () Bool)
(declare-fun x729 () Int)
(declare-fun x5763 () Bool)
(declare-fun x8364 () x3042)
(declare-fun x1291 () Bool)
(declare-fun x7304 () Bool)
(declare-fun x8658 () x3042)
(declare-fun x81 () x3042)
(declare-fun x6510 () Int)
(declare-fun x3855 () Bool)
(declare-fun x6621 () Bool)
(declare-fun x9191 () Int)
(declare-fun x3952 () Bool)
(declare-fun x2889 () x3042)
(declare-fun x3364 () Bool)
(declare-fun x2758 () Bool)
(declare-fun x2003 () Bool)
(declare-fun x1917 () Bool)
(declare-fun x984 () Bool)
(declare-fun x2454 (Int) Int)
(declare-fun x8453 () Bool)
(declare-fun x6196 () Int)
(declare-fun x7090 () x3042)
(declare-fun x2488 () Bool)
(declare-fun x7258 () x3042)
(declare-fun x7802 () Bool)
(declare-fun x5168 () Bool)
(declare-fun x1735 () Int)
(declare-fun x8745 () Int)
(declare-fun x71 () Int)
(declare-fun x2598 () Bool)
(declare-fun x3699 () Int)
(declare-fun x4207 () Int)
(declare-fun x2748 () Bool)
(declare-fun x4005 () Int)
(declare-fun x5055 () Bool)
(declare-fun x6923 () x3042)
(declare-fun x2676 () Bool)
(declare-fun x194 () Bool)
(declare-fun x555 () Int)
(declare-fun x6236 () Bool)
(declare-fun x4625 () Bool)
(declare-fun x6848 () Bool)
(declare-fun x8603 () Int)
(declare-fun x8644 () Int)
(declare-fun x6106 () Bool)
(declare-fun x2745 () Bool)
(declare-fun x7493 () Bool)
(declare-fun x7897 () Int)
(declare-fun x8103 () Bool)
(declare-fun x6180 () Int)
(declare-fun x3694 () Bool)
(declare-fun x5948 () Int)
(declare-fun x271 () Bool)
(declare-fun x1656 () Bool)
(declare-fun x4891 () Int)
(declare-fun x4720 () Bool)
(declare-fun x7580 () Int)
(declare-fun x9020 () Bool)
(declare-fun x5231 () Bool)
(declare-fun x5247 () x3042)
(declare-fun x7436 () Bool)
(declare-fun x2375 () Bool)
(declare-fun x6376 () x3042)
(declare-fun x784 () Int)
(declare-fun x783 () Bool)
(declare-fun x1078 () Int)
(declare-fun x4420 () x3042)
(declare-fun x8732 () Bool)
(declare-fun x3988 () Bool)
(declare-fun x4847 () Bool)
(declare-fun x4308 () Int)
(declare-fun x1848 () Bool)
(declare-fun x3457 () x3042)
(declare-fun x4258 () Bool)
(declare-fun x120 () Int)
(declare-fun x8394 () Bool)
(declare-fun x303 () x3042)
(declare-fun x7829 () Int)
(declare-fun x8874 () Bool)
(declare-fun x3768 () Int)
(declare-fun x4668 () x3042)
(declare-fun x1676 () x3042)
(declare-fun x2438 () Bool)
(declare-fun x2354 () Int)
(declare-fun x2292 () Bool)
(declare-fun x435 () Bool)
(declare-fun x5943 () Bool)
(declare-fun x2527 () Bool)
(declare-fun x3070 () Int)
(declare-fun x6569 () Int)
(declare-fun x8212 () Bool)
(declare-fun x2950 () Bool)
(declare-fun x1591 () Int)
(declare-fun x5123 () Int)
(declare-fun x1437 () Bool)
(declare-fun x4998 () Bool)
(declare-fun x1980 () Bool)
(declare-fun x2567 () Bool)
(declare-fun x207 () Bool)
(declare-fun x2878 () Int)
(declare-fun x2290 () Bool)
(declare-fun x8846 () Int)
(declare-fun x441 () Bool)
(declare-fun x6291 () Bool)
(declare-fun x4963 () Bool)
(declare-fun x1964 () Bool)
(declare-fun x6821 () Int)
(declare-fun x113 () Bool)
(declare-fun x7507 () Bool)
(declare-fun x3241 () Int)
(declare-fun x2266 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x2063 () Bool)
(declare-fun x4600 () Bool)
(declare-fun x3467 () Bool)
(declare-fun x7683 () Bool)
(declare-fun x6176 () Int)
(declare-fun x5672 () Int)
(declare-fun x3307 () x3042)
(declare-fun x809 () Bool)
(declare-fun x5206 () Int)
(declare-fun x1674 () Bool)
(declare-fun x6315 () Bool)
(declare-fun x2114 () x3042)
(declare-fun x4795 () Bool)
(declare-fun x9055 () Bool)
(declare-fun x67 () Bool)
(declare-fun x8542 () Int)
(declare-fun x8023 () Int)
(declare-fun x2753 () Int)
(declare-fun x8710 () Bool)
(declare-fun x8896 () Int)
(declare-fun x1211 () Int)
(declare-fun x7612 () Bool)
(declare-fun x5613 () Bool)
(declare-fun x4263 () Int)
(declare-fun x4865 () Bool)
(declare-fun x1782 () Bool)
(declare-fun x6849 () Bool)
(declare-fun x8934 () Bool)
(declare-fun x7220 () Bool)
(declare-fun x8724 () Bool)
(declare-fun x7126 () Bool)
(declare-fun x772 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x8570 () Int)
(declare-fun x5430 () Int)
(declare-fun x8223 () Bool)
(declare-fun x2111 () Int)
(declare-fun x1686 () x3042)
(declare-fun x7059 () Int)
(declare-fun x4681 () Int)
(declare-fun x7998 () Bool)
(declare-fun x6578 () Bool)
(declare-fun x2383 () x3042)
(declare-fun x4113 () Int)
(declare-fun x4855 () Int)
(declare-fun x6063 () Bool)
(declare-fun x9144 () Bool)
(declare-fun x811 () Int)
(declare-fun x5493 () Bool)
(declare-fun x2320 () x3042)
(declare-fun x5804 () Int)
(declare-fun x4091 () Bool)
(declare-fun x3263 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x4824 () Bool)
(declare-fun x9181 () Bool)
(declare-fun x4498 () Bool)
(declare-fun x2801 () Bool)
(declare-fun x6090 () Bool)
(declare-fun x445 () Bool)
(declare-fun x6656 () x3042)
(declare-fun x7075 () x3042)
(declare-fun x6563 () Bool)
(declare-fun x6518 () Bool)
(declare-fun x6947 () Int)
(declare-fun x5389 () Int)
(declare-fun x4739 () Int)
(declare-fun x7641 () Int)
(declare-fun x5540 () x3042)
(declare-fun x7374 () Bool)
(declare-fun x3318 () Int)
(declare-fun x4808 () Bool)
(declare-fun x4956 () Bool)
(declare-fun x2073 () Int)
(declare-fun x2484 () Bool)
(declare-fun x9245 () Bool)
(declare-fun x8767 () Bool)
(declare-fun x3344 () Bool)
(declare-fun x9278 () Bool)
(declare-fun x4349 () Bool)
(declare-fun x4121 () Bool)
(declare-fun x6788 () Bool)
(declare-fun x4179 () Int)
(declare-fun x8482 () Bool)
(declare-fun x3346 () Int)
(declare-fun x8353 () Bool)
(declare-fun x7496 () Bool)
(declare-fun x1836 () Bool)
(declare-fun x1420 () Int)
(declare-fun x9169 () Int)
(declare-fun x6817 () Int)
(declare-fun x5238 () Int)
(declare-fun x215 () Bool)
(declare-fun x5171 () Bool)
(declare-fun x7380 () Int)
(declare-fun x7476 () Bool)
(declare-fun x492 () Bool)
(declare-fun x4132 () Bool)
(declare-fun x5228 () x3042)
(declare-fun x6995 () Bool)
(declare-fun x1008 () Int)
(declare-fun x739 () Bool)
(declare-fun x8322 () x3042)
(declare-fun x7579 () Bool)
(declare-fun x293 () Bool)
(declare-fun x3283 () Int)
(declare-fun x4620 () x3042)
(declare-fun x5714 () Bool)
(declare-fun x8158 () Bool)
(declare-fun x6654 () Bool)
(declare-fun x8356 () Int)
(declare-fun x8211 () Int)
(declare-fun x8169 () Bool)
(declare-fun x5806 () Bool)
(declare-fun x2935 () Int)
(declare-fun x1205 () Int)
(declare-fun x1071 () Bool)
(declare-fun x8013 () Bool)
(declare-fun x369 () Bool)
(declare-fun x7325 () Int)
(declare-fun x6010 () Bool)
(declare-fun x8017 () Bool)
(declare-fun x3861 () Bool)
(declare-fun x5821 () Bool)
(declare-fun x6928 () Bool)
(declare-fun x8759 () Bool)
(declare-fun x8050 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x1126 () Bool)
(declare-fun x2450 () Bool)
(declare-fun x8726 () Bool)
(declare-fun x2627 () Int)
(declare-fun x6245 () Bool)
(declare-fun x4456 () Int)
(declare-fun x1185 () Bool)
(declare-fun x8090 () Bool)
(declare-fun x7913 () Bool)
(declare-fun x4024 () Bool)
(declare-fun x4220 (x3042) Int)
(declare-fun x8925 () Int)
(declare-fun x3790 () Bool)
(declare-fun x7856 () Int)
(declare-fun x1823 () x3042)
(declare-fun x1683 () x3042)
(declare-fun x6087 () Bool)
(declare-fun x8385 () Bool)
(declare-fun x8831 () Bool)
(declare-fun x1172 () Bool)
(declare-fun x4508 () Int)
(declare-fun x6558 () Int)
(declare-fun x7552 () Bool)
(declare-fun x2487 () Bool)
(declare-fun x1161 () Int)
(declare-fun x4027 () Bool)
(declare-fun x7079 (Int) Int)
(declare-fun x3805 () Int)
(declare-fun x1459 () Int)
(declare-fun x8969 () Bool)
(declare-fun x7675 () Bool)
(declare-fun x8585 () Int)
(declare-fun x4059 () Bool)
(declare-fun x7655 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x535 () Bool)
(declare-fun x8956 () Int)
(declare-fun x2131 () x3042)
(declare-fun x1622 () Bool)
(declare-fun x3684 () Bool)
(declare-fun x3720 () Bool)
(declare-fun x9158 () x3042)
(declare-fun x3009 () Int)
(declare-fun x5964 () Bool)
(declare-fun x8543 () Int)
(declare-fun x344 () Int)
(declare-fun x7586 () Int)
(declare-fun x1299 () Bool)
(declare-fun x6795 () Int)
(declare-fun x5428 () x3042)
(declare-fun x5534 () x3042)
(declare-fun x6332 () Bool)
(declare-fun x3309 () x3042)
(declare-fun x336 () Int)
(declare-fun x7375 () Int)
(declare-fun x686 () Bool)
(declare-fun x7444 () Int)
(declare-fun x7519 () Int)
(declare-fun x4494 () Int)
(declare-fun x8102 () x3042)
(declare-fun x1229 () Bool)
(declare-fun x5862 () Bool)
(declare-fun x6734 () Bool)
(declare-fun x8789 () Int)
(declare-fun x4830 () Bool)
(declare-fun x879 () Int)
(declare-fun x3299 () Bool)
(declare-fun x2809 () Int)
(declare-fun x6193 () Bool)
(declare-fun x4395 () Bool)
(declare-fun x2942 () Int)
(declare-fun x2879 () Int)
(declare-fun x6187 () Bool)
(declare-fun x6898 () Bool)
(declare-fun x5197 () Bool)
(declare-fun x6798 () Bool)
(declare-fun x4944 () Int)
(declare-fun x3782 () Int)
(declare-fun x5707 () Bool)
(declare-fun x5970 () Bool)
(declare-fun x1262 () Int)
(declare-fun x4778 () x3042)
(declare-fun x1197 () x3042)
(declare-fun x2677 () x3042)
(declare-fun x2408 () Bool)
(declare-fun x3705 () x3042)
(declare-fun x4102 () Int)
(declare-fun x8990 () Int)
(declare-fun x6059 () Bool)
(declare-fun x6273 () Int)
(declare-fun x9076 () Int)
(declare-fun x3126 () Bool)
(declare-fun x1037 () Int)
(declare-fun x7443 (Int) Int)
(declare-fun x7886 () Int)
(declare-fun x3220 () Bool)
(declare-fun x2274 () Bool)
(declare-fun x5621 () Int)
(declare-fun x3984 () Int)
(declare-fun x4578 () Bool)
(declare-fun x2849 () Int)
(declare-fun x4465 () Bool)
(declare-fun x5232 () Int)
(declare-fun x4813 () Bool)
(declare-fun x2681 () Int)
(declare-fun x8952 () Int)
(declare-fun x2776 () Bool)
(declare-fun x3576 () x3042)
(declare-fun x8137 () Bool)
(declare-fun x1460 () Bool)
(declare-fun x8727 () Bool)
(declare-fun x6128 () Int)
(declare-fun x7200 () Int)
(declare-fun x2840 () Int)
(declare-fun x3821 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x5473 () Bool)
(declare-fun x9134 () Int)
(declare-fun x5256 () Int)
(declare-fun x4463 () Bool)
(declare-fun x3566 () Int)
(declare-fun x6572 () Bool)
(declare-fun x599 () Bool)
(declare-fun x7300 () Int)
(declare-fun x3282 () Bool)
(declare-fun x3573 () Bool)
(declare-fun x2608 () x3042)
(declare-fun x3803 () Bool)
(declare-fun x3968 () Bool)
(declare-fun x4908 () Bool)
(declare-fun x7865 () Int)
(declare-fun x5792 () Bool)
(declare-fun x5230 () Int)
(declare-fun x2697 () Bool)
(declare-fun x6662 () Int)
(declare-fun x967 () Bool)
(declare-fun x2473 () Bool)
(declare-fun x2359 () Int)
(declare-fun x7815 () x3042)
(declare-fun x1117 () Int)
(declare-fun x540 () Bool)
(declare-fun x6600 () Bool)
(declare-fun x1712 () Bool)
(declare-fun x404 () Bool)
(declare-fun x3746 () Bool)
(declare-fun x6857 () Int)
(declare-fun x1094 () Bool)
(declare-fun x4724 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x4298 () Int)
(declare-fun x3280 () Int)
(declare-fun x3435 () Bool)
(declare-fun x2185 () Bool)
(declare-fun x9110 () Int)
(declare-fun x6864 () Bool)
(declare-fun x2469 () Bool)
(declare-fun x7550 () Bool)
(declare-fun x5490 () Int)
(declare-fun x8265 () Bool)
(declare-fun x1403 () x3042)
(declare-fun x7188 () Bool)
(declare-fun x6385 () x3042)
(declare-fun x3580 () Bool)
(declare-fun x7234 () x3042)
(declare-fun x6748 () Bool)
(declare-fun x3674 () Bool)
(declare-fun x454 () Bool)
(declare-fun x6736 () Bool)
(declare-fun x8935 () Bool)
(declare-fun x2340 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x4077 (Int Int) Int)
(declare-fun x1649 () x3042)
(declare-fun x4360 () Bool)
(declare-fun x665 () Bool)
(declare-fun x3909 () Int)
(declare-fun x565 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x6151 () Bool)
(declare-fun x3662 () Int)
(declare-fun x2628 () x3042)
(declare-fun x5421 () Bool)
(declare-fun x2836 () Int)
(declare-fun x4249 () Bool)
(declare-fun x7044 () Bool)
(declare-fun x6529 () Bool)
(declare-fun x1153 () Int)
(declare-fun x7797 () Bool)
(declare-fun x4101 () Bool)
(declare-fun x7578 () x3042)
(declare-fun x5755 () Bool)
(declare-fun x5175 () Int)
(declare-fun x5370 () Bool)
(declare-fun x7920 () Bool)
(declare-fun x4209 () Bool)
(declare-fun x6904 () Bool)
(declare-fun x3473 () Int)
(declare-fun x2930 () Int)
(declare-fun x7034 () Bool)
(declare-fun x4533 () Bool)
(declare-fun x9272 () Int)
(declare-fun x2213 () Int)
(declare-fun x1408 () Bool)
(declare-fun x4192 () Bool)
(declare-fun x2590 () Int)
(declare-fun x810 () Bool)
(declare-fun x8646 () Int)
(declare-fun x152 () Bool)
(declare-fun x7022 () Bool)
(declare-fun x650 () Bool)
(declare-fun x5340 () Int)
(declare-fun x8567 () Bool)
(declare-fun x1085 () Int)
(declare-fun x3021 () Bool)
(declare-fun x6475 () Int)
(declare-fun x4706 () Bool)
(declare-fun x8907 () Bool)
(declare-fun x3323 () Bool)
(declare-fun x7260 () Bool)
(declare-fun x6320 (Int) Int)
(declare-fun x8994 () Int)
(declare-fun x8685 () Bool)
(declare-fun x7095 () Bool)
(declare-fun x2382 () Int)
(declare-fun x1808 () Bool)
(declare-fun x4208 () Int)
(declare-fun x5751 () Int)
(declare-fun x4647 () Int)
(declare-fun x7021 () Bool)
(declare-fun x4116 () x3042)
(declare-fun x4633 () Int)
(declare-fun x7363 () Int)
(declare-fun x9 () Int)
(declare-fun x3194 () Bool)
(declare-fun x8022 () x3042)
(declare-fun x4356 () Bool)
(declare-fun x3923 () Bool)
(declare-fun x8182 () Bool)
(declare-fun x3268 () Bool)
(declare-fun x3419 () Bool)
(declare-fun x1912 () Bool)
(declare-fun x8510 () Int)
(declare-fun x6549 () x3042)
(declare-fun x1665 () x3042)
(declare-fun x5746 () Bool)
(declare-fun x4534 () Int)
(declare-fun x7576 () Bool)
(declare-fun x103 () Int)
(declare-fun x898 () Int)
(declare-fun x6799 () Bool)
(declare-fun x5938 () Int)
(declare-fun x2639 () Int)
(declare-fun x7627 () Int)
(declare-fun x2472 () Int)
(declare-fun x5417 () Int)
(declare-fun x3441 () Bool)
(declare-fun x1027 () Int)
(declare-fun x3334 () Int)
(declare-fun x46 () Bool)
(declare-fun x9224 () Int)
(declare-fun x6052 () Bool)
(declare-fun x7455 () Int)
(declare-fun x3836 () Int)
(declare-fun x6226 () Bool)
(declare-fun x3887 () x3042)
(declare-fun x8166 () x3042)
(declare-fun x5185 () Int)
(declare-fun x2140 () Bool)
(declare-fun x1928 () Bool)
(declare-fun x3949 () Bool)
(declare-fun x1054 () Bool)
(declare-fun x1498 () Int)
(declare-fun x3827 () Bool)
(declare-fun x2515 () Bool)
(declare-fun x2405 () Int)
(declare-fun x6762 () Bool)
(declare-fun x1758 () Bool)
(declare-fun x8893 () Bool)
(declare-fun x8697 () Int)
(declare-fun x6846 () Bool)
(declare-fun x648 () Int)
(declare-fun x7967 () Bool)
(declare-fun x7043 () Bool)
(declare-fun x1377 () x3042)
(declare-fun x5466 () Int)
(declare-fun x4198 () Bool)
(declare-fun x7057 () Int)
(declare-fun x3509 () Int)
(declare-fun x28 () Bool)
(declare-fun x1594 () Bool)
(declare-fun x5606 () x3042)
(declare-fun x7782 () Int)
(declare-fun x7693 () Int)
(declare-fun x788 () Bool)
(declare-fun x737 () Bool)
(declare-fun x825 () Int)
(declare-fun x4267 () Int)
(declare-fun x1331 () Bool)
(declare-fun x3911 () Bool)
(declare-fun x2886 () Bool)
(declare-fun x7072 () Int)
(declare-fun x3626 () Int)
(declare-fun x1253 () Bool)
(declare-fun x4897 () Bool)
(declare-fun x4699 () Bool)
(declare-fun x9275 () Int)
(declare-fun x3090 () Bool)
(declare-fun x2678 () Bool)
(declare-fun x759 () Int)
(declare-fun x8046 () Bool)
(declare-fun x5900 () Bool)
(declare-fun x269 () Bool)
(declare-fun x7648 () Bool)
(declare-fun x6688 () Int)
(declare-fun x6922 () Int)
(declare-fun x4650 () Bool)
(declare-fun x7215 () Bool)
(declare-fun x4809 () Int)
(declare-fun x6401 () Int)
(declare-fun x6550 (Int) Int)
(declare-fun x4120 () Bool)
(declare-fun x489 () Int)
(declare-fun x1237 () Bool)
(declare-fun x5275 () x3042)
(declare-fun x4822 () Int)
(declare-fun x3743 () Int)
(declare-fun x3708 () Bool)
(declare-fun x4971 () Int)
(declare-fun x6214 () Bool)
(declare-fun x7642 () Bool)
(declare-fun x3497 () x3042)
(declare-fun x2657 () Bool)
(declare-fun x1760 () Int)
(declare-fun x8725 () Bool)
(declare-fun x4593 () Int)
(declare-fun x2070 () x3042)
(declare-fun x2102 (Int Int) Int)
(declare-fun x8762 () Bool)
(declare-fun x943 () Bool)
(declare-fun x4673 () Bool)
(declare-fun x158 () Bool)
(declare-fun x8479 () Bool)
(declare-fun x1293 () Int)
(declare-fun x1038 () Bool)
(declare-fun x1783 () Int)
(declare-fun x2262 () Int)
(declare-fun x1571 () Int)
(declare-fun x3066 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x7863 () Int)
(declare-fun x2087 () Bool)
(declare-fun x219 () Int)
(declare-fun x6200 () Bool)
(declare-fun x1588 () Int)
(declare-fun x1431 () Int)
(declare-fun x6449 () Int)
(declare-fun x3427 () Int)
(declare-fun x1839 () Bool)
(declare-fun x64 () Int)
(declare-fun x2798 () Int)
(declare-fun x5725 () Bool)
(declare-fun x253 () Int)
(declare-fun x7719 () Bool)
(declare-fun x6865 () x3042)
(declare-fun x2661 () Bool)
(declare-fun x8185 () Bool)
(declare-fun x8919 () Int)
(declare-fun x5587 () Int)
(declare-fun x591 () Bool)
(declare-fun x9208 () Int)
(declare-fun x589 () Int)
(declare-fun x846 () Bool)
(declare-fun x1412 () x3042)
(declare-fun x1899 () Bool)
(declare-fun x5952 () Int)
(declare-fun x7965 () Int)
(declare-fun x4416 () Bool)
(declare-fun x9087 () x3042)
(declare-fun x3669 () Bool)
(declare-fun x6945 () x3042)
(declare-fun x7128 () Bool)
(declare-fun x3480 () Bool)
(declare-fun x5840 () Bool)
(declare-fun x377 () Int)
(declare-fun x338 () Bool)
(declare-fun x6522 () Bool)
(declare-fun x2436 () Bool)
(declare-fun x6778 () Int)
(declare-fun x4526 (Int Int) Int)
(declare-fun x3486 () Bool)
(declare-fun x3953 () Int)
(declare-fun x6397 () Int)
(declare-fun x9120 () Bool)
(declare-fun x2764 () x3042)
(declare-fun x4073 () Bool)
(declare-fun x5452 () Bool)
(declare-fun x3449 () Bool)
(declare-fun x6859 () x3042)
(declare-fun x3386 () Int)
(declare-fun x431 () Int)
(declare-fun x8076 () Int)
(declare-fun x6436 () Bool)
(declare-fun x5634 () Int)
(declare-fun x3316 () Bool)
(declare-fun x9187 () Bool)
(declare-fun x4794 () Int)
(declare-fun x4599 () Int)
(declare-fun x8314 () Bool)
(declare-fun x6570 () Int)
(declare-fun x2855 () Int)
(declare-fun x165 () Bool)
(declare-fun x4905 () x3042)
(declare-fun x3176 () Bool)
(declare-fun x3445 () Bool)
(declare-fun x5623 () x3042)
(declare-fun x434 () Int)
(declare-fun x7094 () Int)
(declare-fun x2238 () Bool)
(declare-fun x5415 () Bool)
(declare-fun x3109 () Int)
(declare-fun x7206 () Int)
(declare-fun x3802 () Bool)
(declare-fun x4507 () x3042)
(declare-fun x8983 () Bool)
(declare-fun x3384 () Int)
(declare-fun x3879 () Int)
(declare-fun x2406 () Int)
(declare-fun x6364 () x3042)
(declare-fun x5723 () Int)
(declare-fun x3479 () Int)
(declare-fun x2267 () Bool)
(declare-fun x508 () Bool)
(declare-fun x3936 () Bool)
(declare-fun x2348 () Bool)
(declare-fun x6678 () Bool)
(declare-fun x4159 () Int)
(declare-fun x3979 () Int)
(declare-fun x1988 () x3042)
(declare-fun x7783 () x3042)
(declare-fun x1504 () Bool)
(declare-fun x9039 () Int)
(declare-fun x7049 () Int)
(declare-fun x5699 () Int)
(declare-fun x6298 () Bool)
(declare-fun x1916 () Bool)
(declare-fun x2139 () Int)
(declare-fun x6602 () Bool)
(declare-fun x5987 () Bool)
(declare-fun x976 () Bool)
(declare-fun x8944 () Bool)
(declare-fun x8293 () Bool)
(declare-fun x6033 () Int)
(declare-fun x6721 () Bool)
(declare-fun x3796 () Int)
(declare-fun x3484 () x3042)
(declare-fun x2135 () Bool)
(declare-fun x2425 () Bool)
(declare-fun x5377 () Bool)
(declare-fun x7108 () Int)
(declare-fun x4338 () x3042)
(declare-fun x5497 () Bool)
(declare-fun x8178 () Bool)
(declare-fun x740 () x3042)
(declare-fun x6984 () Int)
(declare-fun x6704 () Int)
(declare-fun x4094 () Bool)
(declare-fun x3928 () Int)
(declare-fun x7523 () Int)
(declare-fun x530 () Int)
(declare-fun x2561 () Int)
(declare-fun x2441 () Bool)
(declare-fun x8548 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x587 () Int)
(declare-fun x4435 () Bool)
(declare-fun x6652 () x3042)
(declare-fun x5245 () Bool)
(declare-fun x7959 () Bool)
(declare-fun x2372 () Bool)
(declare-fun x2674 () Int)
(declare-fun x6067 () Int)
(declare-fun x2943 () Bool)
(declare-fun x5125 () Bool)
(declare-fun x2959 () Bool)
(declare-fun x265 (x3042) Int)
(declare-fun x579 () Int)
(declare-fun x2460 () Bool)
(declare-fun x4492 () Int)
(declare-fun x2644 () x3042)
(declare-fun x2411 () Int)
(declare-fun x4171 () Bool)
(declare-fun x7077 () Bool)
(declare-fun x5061 () x3042)
(declare-fun x3616 () Int)
(declare-fun x3922 () Int)
(declare-fun x4997 () x3042)
(declare-fun x7178 () Bool)
(declare-fun x5913 () Int)
(declare-fun x6653 () Int)
(declare-fun x6741 () Int)
(declare-fun x3121 () Bool)
(declare-fun x3487 () Bool)
(declare-fun x5096 () Bool)
(declare-fun x2439 () Bool)
(declare-fun x4098 () Bool)
(declare-fun x4639 () Bool)
(declare-fun x2120 () x3042)
(declare-fun x7084 () x3042)
(declare-fun x1981 () Int)
(declare-fun x413 () Int)
(declare-fun x6877 () Int)
(declare-fun x1345 () Int)
(declare-fun x6598 () Int)
(declare-fun x1323 () Bool)
(declare-fun x703 () Int)
(declare-fun x7542 () x3042)
(declare-fun x2051 () x3042)
(declare-fun x6823 () Bool)
(declare-fun x235 () Int)
(declare-fun x7045 () x3042)
(declare-fun x2761 () x3042)
(declare-fun x1016 () Int)
(declare-fun x6303 () Int)
(declare-fun x8059 () Bool)
(declare-fun x2687 () x3042)
(declare-fun x7497 () Int)
(declare-fun x5039 () Int)
(declare-fun x1193 () Bool)
(declare-fun x4341 () Bool)
(declare-fun x524 () Bool)
(declare-fun x2109 () Int)
(declare-fun x2887 () Bool)
(declare-fun x5184 () Bool)
(declare-fun x8491 () Int)
(declare-fun x9196 (Int) Int)
(declare-fun x5310 () Int)
(declare-fun x5088 () Int)
(declare-fun x7390 () Int)
(declare-fun x3027 () Int)
(declare-fun x6206 () Int)
(declare-fun x6041 () Int)
(declare-fun x7754 () Int)
(declare-fun x1506 () x3042)
(declare-fun x8297 () Bool)
(declare-fun x2033 () Bool)
(declare-fun x475 () Bool)
(declare-fun x4336 () Bool)
(declare-fun x785 () Bool)
(declare-fun x3983 () Int)
(declare-fun x6649 () x3042)
(declare-fun x4331 () Bool)
(declare-fun x3240 () Int)
(declare-fun x1217 () Bool)
(declare-fun x6215 () Int)
(declare-fun x8538 () Int)
(declare-fun x9135 () Bool)
(declare-fun x4382 () Bool)
(declare-fun x7940 () Bool)
(declare-fun x5515 () Bool)
(declare-fun x3302 () Int)
(declare-fun x5386 () Int)
(declare-fun x6383 () Bool)
(declare-fun x9146 () Bool)
(declare-fun x4860 () Int)
(declare-fun x4973 () x3042)
(declare-fun x8093 () Int)
(declare-fun x1163 (x3042) Int)
(declare-fun x6803 () Bool)
(declare-fun x2923 () Int)
(declare-fun x6992 () x3042)
(declare-fun x270 () Int)
(declare-fun x4710 () Int)
(declare-fun x5996 () Bool)
(declare-fun x3833 () Bool)
(declare-fun x8598 () Bool)
(declare-fun x478 () Int)
(declare-fun x8260 () Int)
(declare-fun x2203 () Int)
(declare-fun x1890 () Int)
(declare-fun x3970 () Bool)
(declare-fun x9038 () x3042)
(declare-fun x2793 () Bool)
(declare-fun x7646 () Int)
(declare-fun x4807 () Bool)
(declare-fun x5358 () Bool)
(declare-fun x6648 () Bool)
(declare-fun x375 () Bool)
(declare-fun x1816 () Int)
(declare-fun x7529 () Bool)
(declare-fun x5422 () Bool)
(declare-fun x2492 () Bool)
(declare-fun x6419 () Bool)
(declare-fun x4568 () Bool)
(declare-fun x7480 () x3042)
(declare-fun x1739 () Bool)
(declare-fun x8122 () Bool)
(declare-fun x1832 () Bool)
(declare-fun x8568 () Bool)
(declare-fun x9011 () Bool)
(declare-fun x2199 () Bool)
(declare-fun x3321 () Bool)
(declare-fun x7343 () Bool)
(declare-fun x2941 () Int)
(declare-fun x7349 () Int)
(declare-fun x1520 () x3042)
(declare-fun x4559 () Bool)
(declare-fun x3596 () Bool)
(declare-fun x5189 () Int)
(declare-fun x7908 () x3042)
(declare-fun x4334 () Bool)
(declare-fun x2219 () Bool)
(declare-fun x6981 () Bool)
(declare-fun x311 () Int)
(declare-fun x4876 () Bool)
(declare-fun x7569 () Bool)
(declare-fun x3646 () Bool)
(declare-fun x6439 () Int)
(declare-fun x6954 () Bool)
(declare-fun x4609 () Int)
(declare-fun x474 () Int)
(declare-fun x6153 () x3042)
(declare-fun x26 () Bool)
(declare-fun x1799 () Int)
(declare-fun x6718 () Bool)
(declare-fun x4829 () Bool)
(declare-fun x7988 () Int)
(declare-fun x91 () Bool)
(declare-fun x5405 () x3042)
(declare-fun x5869 () Bool)
(declare-fun x1887 () Int)
(declare-fun x2610 () Bool)
(declare-fun x1633 () Int)
(declare-fun x3777 () x3042)
(declare-fun x693 () Bool)
(declare-fun x3232 () Bool)
(declare-fun x4753 () Bool)
(declare-fun x6051 () Bool)
(declare-fun x2486 () Bool)
(declare-fun x5170 () Bool)
(declare-fun x4519 () Bool)
(declare-fun x2814 () Int)
(declare-fun x6553 () x3042)
(declare-fun x8002 () Int)
(declare-fun x4869 () Int)
(declare-fun x1019 () Bool)
(declare-fun x2176 () Bool)
(declare-fun x5696 () Int)
(declare-fun x8966 () Bool)
(declare-fun x1286 () Bool)
(declare-fun x1618 () Bool)
(declare-fun x6094 () Int)
(declare-fun x78 () Int)
(declare-fun x2854 () Int)
(declare-fun x880 () Bool)
(declare-fun x4275 () Bool)
(declare-fun x1130 () Int)
(declare-fun x7376 () Bool)
(declare-fun x4632 () Int)
(declare-fun x8367 () x3042)
(declare-fun x42 () x3042)
(declare-fun x8981 () Bool)
(declare-fun x8931 () Bool)
(declare-fun x6853 () x3042)
(declare-fun x5506 () Bool)
(declare-fun x674 () Bool)
(declare-fun x3396 (x3042) Int)
(declare-fun x3595 () Bool)
(declare-fun x5761 () Bool)
(declare-fun x3934 () Bool)
(declare-fun x5350 () x3042)
(declare-fun x875 () Bool)
(declare-fun x2313 () Bool)
(declare-fun x6885 () Bool)
(declare-fun x5627 () Bool)
(declare-fun x2301 () Bool)
(declare-fun x865 () Bool)
(declare-fun x4384 () Int)
(declare-fun x3735 () Bool)
(declare-fun x150 () Int)
(declare-fun x1536 () Int)
(declare-fun x4718 () Bool)
(declare-fun x7362 () Int)
(declare-fun x2769 () Int)
(declare-fun x4109 () Bool)
(declare-fun x982 () Bool)
(declare-fun x6982 () Bool)
(declare-fun x9014 () Bool)
(declare-fun x6288 () Bool)
(declare-fun x837 () Int)
(declare-fun x5068 () Int)
(declare-fun x4019 () Bool)
(declare-fun x3600 () Bool)
(declare-fun x2518 () Int)
(declare-fun x3543 () Int)
(declare-fun x4238 () Int)
(declare-fun x3770 () Int)
(declare-fun x2270 () Int)
(declare-fun x3080 () Bool)
(declare-fun x8040 () Bool)
(declare-fun x5483 () Int)
(declare-fun x3171 () Bool)
(declare-fun x4072 () Bool)
(declare-fun x6459 () Int)
(declare-fun x7211 () Int)
(declare-fun x7626 () Int)
(declare-fun x89 () Bool)
(declare-fun x1023 () Int)
(declare-fun x2465 () Bool)
(declare-fun x7145 () Int)
(declare-fun x2345 () Bool)
(declare-fun x1376 () Bool)
(declare-fun x1334 () Bool)
(declare-fun x2969 () x3042)
(declare-fun x955 () Bool)
(declare-fun x6096 () Bool)
(declare-fun x3957 () Bool)
(declare-fun x6941 () Bool)
(declare-fun x5835 () Int)
(declare-fun x8705 () Bool)
(declare-fun x8517 () Bool)
(declare-fun x5979 () Bool)
(declare-fun x4070 () Bool)
(declare-fun x82 () Bool)
(declare-fun x5499 () Int)
(declare-fun x8914 () Bool)
(declare-fun x6410 () Bool)
(declare-fun x3541 () Int)
(declare-fun x1614 () Int)
(declare-fun x468 () Int)
(declare-fun x5852 () Bool)
(declare-fun x1815 () Bool)
(declare-fun x4624 () Bool)
(declare-fun x2867 () Int)
(declare-fun x4798 () Bool)
(declare-fun x8676 () Int)
(declare-fun x7506 () Int)
(declare-fun x6263 () Bool)
(declare-fun x7366 () Int)
(declare-fun x2611 () Int)
(declare-fun x2194 () Bool)
(declare-fun x2304 () x3042)
(declare-fun x6806 () Bool)
(declare-fun x352 () Int)
(declare-fun x6977 () x3042)
(declare-fun x1831 () Int)
(declare-fun x7760 () Bool)
(declare-fun x8861 () Bool)
(declare-fun x8656 () Bool)
(declare-fun x2719 () x3042)
(declare-fun x3415 () Int)
(declare-fun x7096 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x7131 () Bool)
(declare-fun x1749 () Int)
(declare-fun x9180 () Bool)
(declare-fun x602 () Int)
(declare-fun x9121 () Bool)
(declare-fun x697 () Int)
(declare-fun x3130 () Int)
(declare-fun x6774 () Bool)
(declare-fun x3937 () Bool)
(declare-fun x913 () Bool)
(declare-fun x7947 () Bool)
(declare-fun x2682 () Bool)
(declare-fun x9094 () Int)
(declare-fun x2948 () Bool)
(declare-fun x546 () x3042)
(declare-fun x2612 () x3042)
(declare-fun x805 () Bool)
(declare-fun x1653 () Bool)
(declare-fun x3403 () Bool)
(declare-fun x7637 () Bool)
(declare-fun x5283 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x2895 () Bool)
(declare-fun x7452 (Int) Int)
(declare-fun x9067 () Bool)
(declare-fun x3370 () Int)
(declare-fun x9092 () Bool)
(declare-fun x5441 () Bool)
(declare-fun x8545 () Bool)
(declare-fun x5207 () Bool)
(declare-fun x3798 () Int)
(declare-fun x7053 () x3042)
(declare-fun x6918 () Int)
(declare-fun x6278 () Int)
(declare-fun x4621 () Int)
(declare-fun x8803 () Bool)
(declare-fun x4386 () Int)
(declare-fun x4619 () Bool)
(declare-fun x6003 () Int)
(declare-fun x6017 () Bool)
(declare-fun x6663 () Bool)
(declare-fun x5403 () Bool)
(declare-fun x5875 () Int)
(declare-fun x6810 () x3042)
(declare-fun x13 () x3042)
(declare-fun x5259 () Int)
(declare-fun x8770 () Int)
(declare-fun x154 () Bool)
(declare-fun x5907 () Bool)
(declare-fun x5115 () Bool)
(declare-fun x7370 () Int)
(declare-fun x9211 () Bool)
(declare-fun x7798 () Bool)
(declare-fun x2468 () Bool)
(declare-fun x9086 () Bool)
(declare-fun x9229 () Bool)
(declare-fun x7485 () Int)
(declare-fun x5077 () Int)
(declare-fun x4680 () Int)
(declare-fun x6380 () x3042)
(declare-fun x6920 () Bool)
(declare-fun x5349 () Bool)
(declare-fun x6782 () Bool)
(declare-fun x4679 () Int)
(declare-fun x8579 () Int)
(declare-fun x2426 () Bool)
(declare-fun x8565 () Int)
(declare-fun x7810 () Bool)
(declare-fun x888 () Int)
(declare-fun x2223 () Bool)
(declare-fun x3175 () Bool)
(declare-fun x7757 () x3042)
(declare-fun x1090 () Int)
(declare-fun x8856 () Bool)
(declare-fun x3168 () x3042)
(declare-fun x2617 () Bool)
(declare-fun x1477 () Int)
(declare-fun x673 () Bool)
(declare-fun x1629 () Bool)
(declare-fun x3507 () Bool)
(declare-fun x2234 () Bool)
(declare-fun x4393 () Bool)
(declare-fun x1779 () Bool)
(declare-fun x1134 () Bool)
(declare-fun x1933 () x3042)
(declare-fun x4135 () Int)
(declare-fun x1910 () Bool)
(declare-fun x4417 () Bool)
(declare-fun x5037 () x3042)
(declare-fun x5873 () Int)
(declare-fun x6965 () Bool)
(declare-fun x1667 () Bool)
(declare-fun x388 (x3042) Int)
(declare-fun x6507 () Bool)
(declare-fun x95 () Int)
(declare-fun x2708 () x3042)
(declare-fun x1687 () Int)
(declare-fun x3166 () Int)
(declare-fun x6370 () Bool)
(declare-fun x5730 () Bool)
(declare-fun x3785 () Int)
(declare-fun x1486 () Bool)
(declare-fun x6197 () Bool)
(declare-fun x654 () Int)
(declare-fun x681 () Bool)
(declare-fun x734 () Int)
(declare-fun x5573 () x3042)
(declare-fun x3858 () Int)
(declare-fun x316 () Bool)
(declare-fun x6272 () Int)
(declare-fun x3097 () Int)
(declare-fun x3029 () Bool)
(declare-fun x8362 () Bool)
(declare-fun x7677 () Bool)
(declare-fun x3639 () Bool)
(declare-fun x4852 () x3042)
(declare-fun x580 () Bool)
(declare-fun x8487 () Bool)
(declare-fun x5552 () Int)
(declare-fun x7884 () x3042)
(declare-fun x378 () Int)
(declare-fun x2829 () Bool)
(declare-fun x7338 () x3042)
(declare-fun x1021 () Int)
(declare-fun x3231 () Int)
(declare-fun x4375 () Bool)
(declare-fun x5272 () Bool)
(declare-fun x5781 () Bool)
(declare-fun x2750 () Int)
(declare-fun x3199 () Int)
(declare-fun x4629 () Bool)
(declare-fun x1824 () Int)
(declare-fun x409 () Bool)
(declare-fun x6883 () Bool)
(declare-fun x119 () Bool)
(declare-fun x5372 () Bool)
(declare-fun x6365 () Bool)
(declare-fun x199 () Bool)
(declare-fun x2147 () Int)
(declare-fun x7756 () Bool)
(declare-fun x2675 () Bool)
(declare-fun x2055 () Int)
(declare-fun x7600 () Bool)
(declare-fun x8280 () x3042)
(declare-fun x3348 () Int)
(declare-fun x8821 () Int)
(declare-fun x2514 () Int)
(declare-fun x2229 () Bool)
(declare-fun x3815 () Int)
(declare-fun x2897 () Bool)
(declare-fun x1209 () Int)
(declare-fun x3685 () Bool)
(declare-fun x5789 () Bool)
(declare-fun x5222 () Bool)
(declare-fun x1208 () Int)
(declare-fun x3973 (x3042) Int)
(declare-fun x8092 () Bool)
(declare-fun x4923 () Bool)
(declare-fun x6985 () Bool)
(declare-fun x5845 () Int)
(declare-fun x609 () Int)
(declare-fun x1657 () x3042)
(declare-fun x8056 () Int)
(declare-fun x641 () Bool)
(declare-fun x4305 () Bool)
(declare-fun x4817 () Bool)
(declare-fun x525 () Int)
(declare-fun x2116 () x3042)
(declare-fun x7533 () Bool)
(declare-fun x7092 () Bool)
(declare-fun x2285 () Bool)
(declare-fun x3203 () Bool)
(declare-fun x6056 () Bool)
(declare-fun x2090 () Bool)
(declare-fun x5433 () Bool)
(declare-fun x5922 () Bool)
(declare-fun x5119 () Bool)
(declare-fun x3767 () Int)
(declare-fun x8167 () Int)
(declare-fun x1650 () Int)
(declare-fun x2755 () Bool)
(declare-fun x1333 () Int)
(declare-fun x3383 () Bool)
(declare-fun x8034 (Int) Int)
(declare-fun x7025 () Int)
(declare-fun x5874 () x3042)
(declare-fun x5498 () Bool)
(declare-fun x2946 () Bool)
(declare-fun x4880 () Int)
(declare-fun x4738 () Int)
(declare-fun x21 () Bool)
(declare-fun x2255 () Int)
(declare-fun x8731 () Int)
(declare-fun x7381 () Bool)
(declare-fun x9238 () Bool)
(declare-fun x9259 () Bool)
(declare-fun x2311 () Bool)
(declare-fun x4259 () Bool)
(declare-fun x7207 () Int)
(declare-fun x3028 () Bool)
(declare-fun x9241 () Int)
(declare-fun x1171 () Int)
(declare-fun x4025 () x3042)
(declare-fun x4524 () Int)
(declare-fun x4594 () Bool)
(declare-fun x1727 () Int)
(declare-fun x3212 () Int)
(declare-fun x2591 () x3042)
(declare-fun x3660 () Bool)
(declare-fun x227 () Bool)
(declare-fun x5713 () x3042)
(declare-fun x2435 () Int)
(declare-fun x6168 () Int)
(declare-fun x1183 () Int)
(declare-fun x8779 () Int)
(declare-fun x6073 () Int)
(declare-fun x4787 () Bool)
(declare-fun x6824 () Bool)
(declare-fun x5929 () Bool)
(declare-fun x2910 () Bool)
(declare-fun x2365 () Int)
(declare-fun x4740 () Bool)
(declare-fun x3311 () Int)
(declare-fun x8633 () Bool)
(declare-fun x5636 () Int)
(declare-fun x2679 () Int)
(declare-fun x8263 () Int)
(declare-fun x2286 () Bool)
(declare-fun x5419 () Bool)
(declare-fun x8041 () Bool)
(declare-fun x458 () Bool)
(declare-fun x2215 () x3042)
(declare-fun x9118 () Int)
(declare-fun x8292 () Bool)
(declare-fun x4380 () Bool)
(declare-fun x8669 () x3042)
(declare-fun x1962 () Bool)
(declare-fun x4666 () Bool)
(declare-fun x8617 () Bool)
(declare-fun x4397 () Bool)
(declare-fun x2529 () Bool)
(declare-fun x8478 () Bool)
(declare-fun x200 () Int)
(declare-fun x4321 () Bool)
(declare-fun x3505 () Bool)
(declare-fun x5406 () Bool)
(declare-fun x8566 () Bool)
(declare-fun x5278 () Int)
(declare-fun x1532 () Bool)
(declare-fun x836 () Int)
(declare-fun x8903 () Bool)
(declare-fun x8430 () Bool)
(declare-fun x7253 () Int)
(declare-fun x4652 () Int)
(declare-fun x3811 () Bool)
(declare-fun x4118 () Int)
(declare-fun x93 () Int)
(declare-fun x2429 () Int)
(declare-fun x4505 () x3042)
(declare-fun x331 () Bool)
(declare-fun x4302 () Int)
(declare-fun x8645 () Bool)
(declare-fun x509 () Int)
(declare-fun x1441 () Bool)
(declare-fun x893 () Bool)
(declare-fun x6613 () Int)
(declare-fun x5229 () Int)
(declare-fun x6630 () Bool)
(declare-fun x2646 () x3042)
(declare-fun x6542 () Bool)
(declare-fun x5101 () Bool)
(declare-fun x4843 () Int)
(declare-fun x498 () Bool)
(declare-fun x4366 () x3042)
(declare-fun x5181 () x3042)
(declare-fun x7852 () Bool)
(declare-fun x515 () Bool)
(declare-fun x140 () Bool)
(declare-fun x8186 () Int)
(declare-fun x5198 () x3042)
(declare-fun x1080 () Bool)
(declare-fun x3118 (x3042) Int)
(declare-fun x7825 () Bool)
(declare-fun x6444 () Bool)
(declare-fun x9100 () Bool)
(declare-fun x8273 () Bool)
(declare-fun x7572 () x3042)
(declare-fun x8801 () Int)
(declare-fun x2858 () Int)
(declare-fun x1103 () x3042)
(declare-fun x2947 () Int)
(declare-fun x8450 () Bool)
(declare-fun x6769 () Int)
(declare-fun x4770 () Bool)
(declare-fun x59 () x3042)
(declare-fun x3531 () Int)
(declare-fun x4422 () Bool)
(declare-fun x6405 () Bool)
(declare-fun x346 () Bool)
(declare-fun x2775 () Int)
(declare-fun x6763 () Bool)
(declare-fun x3235 () Bool)
(declare-fun x8799 () x3042)
(declare-fun x2906 () Bool)
(declare-fun x6242 () Int)
(declare-fun x5578 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x5439 () Bool)
(declare-fun x900 () Bool)
(declare-fun x3388 () x3042)
(declare-fun x6863 () Bool)
(declare-fun x2132 () Int)
(declare-fun x1572 () Int)
(declare-fun x8791 () Bool)
(declare-fun x8029 () Int)
(declare-fun x1922 () Int)
(declare-fun x5463 () x3042)
(declare-fun x7156 () x3042)
(declare-fun x2888 () Bool)
(declare-fun x5905 () Int)
(declare-fun x1370 () Bool)
(declare-fun x7430 () Bool)
(declare-fun x2085 () Int)
(declare-fun x8247 () Bool)
(declare-fun x3799 () Bool)
(declare-fun x2726 () Bool)
(declare-fun x1884 () Int)
(declare-fun x53 () Bool)
(declare-fun x6713 () Int)
(declare-fun x3587 () Int)
(declare-fun x1625 () Bool)
(declare-fun x1692 () Bool)
(declare-fun x9184 () Int)
(declare-fun x1560 () Int)
(declare-fun x5692 () x3042)
(declare-fun x5753 () Bool)
(declare-fun x6266 () Bool)
(declare-fun x6624 () Bool)
(declare-fun x581 () Bool)
(declare-fun x7109 () Bool)
(declare-fun x1308 () Int)
(declare-fun x8979 () Int)
(declare-fun x1043 () Bool)
(declare-fun x7424 () Int)
(declare-fun x4671 () Int)
(declare-fun x4873 () Bool)
(declare-fun x842 () x3042)
(declare-fun x8172 () Bool)
(declare-fun x1318 () Int)
(declare-fun x8723 () Bool)
(declare-fun x7269 () Int)
(declare-fun x852 () Int)
(declare-fun x3032 () Bool)
(declare-fun x2431 () Int)
(declare-fun x5183 () Bool)
(declare-fun x1006 () Int)
(declare-fun x7048 () Bool)
(declare-fun x3355 () Bool)
(declare-fun x3437 () Bool)
(declare-fun x2222 () Bool)
(declare-fun x7751 () Bool)
(declare-fun x2028 () Bool)
(declare-fun x4545 () Int)
(declare-fun x2692 () Bool)
(declare-fun x7905 () Int)
(declare-fun x8438 () Bool)
(declare-fun x804 () Bool)
(declare-fun x96 () Bool)
(declare-fun x2797 () Int)
(declare-fun x5058 () Bool)
(declare-fun x8511 () Bool)
(declare-fun x7991 () Bool)
(declare-fun x5925 () Bool)
(declare-fun x9239 () Int)
(declare-fun x3014 () Bool)
(declare-fun x3993 () Int)
(declare-fun x5507 () Int)
(declare-fun x7584 () Bool)
(declare-fun x5805 () Bool)
(declare-fun x1522 () Int)
(declare-fun x8641 () x3042)
(declare-fun x5220 () Bool)
(declare-fun x3636 () Bool)
(declare-fun x425 () Bool)
(declare-fun x4304 () Bool)
(declare-fun x5654 () Bool)
(declare-fun x6959 () Bool)
(declare-fun x3820 () Int)
(declare-fun x7144 () Int)
(declare-fun x1357 () x3042)
(declare-fun x161 () Int)
(declare-fun x6069 () Int)
(declare-fun x2773 () Int)
(declare-fun x33 () Bool)
(declare-fun x7992 () x3042)
(declare-fun x2170 () Bool)
(declare-fun x7017 () Int)
(declare-fun x8941 () Bool)
(declare-fun x844 () Int)
(declare-fun x1944 () Int)
(declare-fun x2056 () x3042)
(declare-fun x1105 () x3042)
(declare-fun x5553 () Int)
(declare-fun x7987 () Int)
(declare-fun x854 () Bool)
(declare-fun x3793 () Int)
(declare-fun x4657 () Int)
(declare-fun x2724 () Bool)
(declare-fun x8891 () Int)
(declare-fun x4177 () Bool)
(declare-fun x8495 () Bool)
(declare-fun x3325 () Bool)
(declare-fun x9019 () Bool)
(declare-fun x7428 () Bool)
(declare-fun x4413 () Bool)
(declare-fun x3145 () Bool)
(declare-fun x8061 () Int)
(declare-fun x1178 () Bool)
(declare-fun x2911 () Int)
(declare-fun x8691 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x761 () Int)
(declare-fun x3476 () Bool)
(declare-fun x1752 () Int)
(declare-fun x3209 () Int)
(declare-fun x4748 () Int)
(declare-fun x845 (Int) Int)
(declare-fun x2491 () Int)
(declare-fun x11 () Int)
(declare-fun x7995 () Bool)
(declare-fun x3259 () x3042)
(declare-fun x4348 () Bool)
(declare-fun x5985 (x3042) Int)
(declare-fun x1562 () Int)
(declare-fun x325 () Bool)
(declare-fun x7489 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x4125 () Int)
(declare-fun x1565 () Bool)
(declare-fun x6707 () Bool)
(declare-fun x2583 () Int)
(declare-fun x334 () Bool)
(declare-fun x210 () Bool)
(declare-fun x6484 () Int)
(declare-fun x3376 () Bool)
(declare-fun x467 () Bool)
(declare-fun x5241 () Int)
(declare-fun x9240 () Int)
(declare-fun x7449 () Bool)
(declare-fun x7279 () Bool)
(declare-fun x5543 () Bool)
(declare-fun x4674 () Int)
(declare-fun x3690 () x3042)
(declare-fun x1593 () Int)
(declare-fun x8197 () Int)
(declare-fun x664 () Bool)
(declare-fun x3112 () Int)
(declare-fun x8045 () Bool)
(declare-fun x7594 () Bool)
(declare-fun x6426 () Bool)
(declare-fun x7935 () Int)
(declare-fun x254 () x3042)
(declare-fun x5203 () Bool)
(declare-fun x8140 () Bool)
(declare-fun x4676 () Bool)
(declare-fun x218 () Bool)
(declare-fun x8336 () Bool)
(declare-fun x1913 (x3042) Int)
(declare-fun x6441 () Bool)
(declare-fun x5690 () Int)
(declare-fun x4759 () x3042)
(declare-fun x7361 () Bool)
(declare-fun x507 () Bool)
(declare-fun x7446 () Int)
(declare-fun x6619 () Bool)
(declare-fun x1658 () Bool)
(declare-fun x3025 () x3042)
(declare-fun x5908 () x3042)
(declare-fun x5444 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x5381 () Bool)
(declare-fun x1744 () Int)
(declare-fun x250 () Int)
(declare-fun x8331 () Bool)
(declare-fun x2741 () Bool)
(declare-fun x4243 () Bool)
(declare-fun x6584 () Bool)
(declare-fun x3577 () Bool)
(declare-fun x2784 () Bool)
(declare-fun x5978 () Bool)
(declare-fun x3759 () Bool)
(declare-fun x8132 () Bool)
(declare-fun x6812 () Int)
(declare-fun x4845 () Bool)
(declare-fun x2459 () Bool)
(declare-fun x5611 () Bool)
(declare-fun x3657 () Int)
(declare-fun x8932 () Bool)
(declare-fun x522 () Bool)
(declare-fun x5187 () Bool)
(declare-fun x8840 () Int)
(declare-fun x6593 () Int)
(declare-fun x9155 () Int)
(declare-fun x7977 () Bool)
(declare-fun x2600 () Int)
(declare-fun x382 () Int)
(declare-fun x6331 () x3042)
(declare-fun x1184 () Int)
(declare-fun x5440 () Bool)
(declare-fun x1914 () Bool)
(declare-fun x5347 () Bool)
(declare-fun x7700 () Bool)
(declare-fun x8101 () x3042)
(declare-fun x2136 () x3042)
(declare-fun x5383 () Bool)
(declare-fun x7333 () Bool)
(declare-fun x826 () Bool)
(declare-fun x6764 () Bool)
(declare-fun x2988 () Int)
(declare-fun x514 () Int)
(declare-fun x8160 () Int)
(declare-fun x2581 () x3042)
(declare-fun x4556 () Bool)
(declare-fun x1696 () Bool)
(declare-fun x4014 () Bool)
(declare-fun x3866 () Int)
(declare-fun x3436 () Bool)
(declare-fun x7859 () Int)
(declare-fun x3084 () Bool)
(declare-fun x8114 () Bool)
(declare-fun x7421 () x3042)
(declare-fun x1356 () Int)
(declare-fun x4123 () Bool)
(declare-fun x3963 () x3042)
(declare-fun x2360 () x3042)
(declare-fun x402 () Bool)
(declare-fun x1147 () Int)
(declare-fun x9090 () Int)
(declare-fun x4642 () Bool)
(declare-fun x2540 () Int)
(declare-fun x6294 () Bool)
(declare-fun x1953 () Bool)
(declare-fun x2437 () Int)
(declare-fun x5551 () Bool)
(declare-fun x4504 () x3042)
(declare-fun x3864 () Int)
(declare-fun x8650 () Int)
(declare-fun x7222 () Bool)
(declare-fun x3434 () Bool)
(declare-fun x1219 () x3042)
(declare-fun x5799 () Bool)
(declare-fun x9109 () Bool)
(declare-fun x5179 () x3042)
(declare-fun x8289 () Bool)
(declare-fun x8808 () Int)
(declare-fun x6966 () Int)
(declare-fun x2720 () Bool)
(declare-fun x9270 () Bool)
(declare-fun x8294 () x3042)
(declare-fun x5186 () Bool)
(declare-fun x1315 () Int)
(declare-fun x1057 () x3042)
(declare-fun x8399 () x3042)
(declare-fun x5788 () Bool)
(declare-fun x8274 () x3042)
(declare-fun x6348 (x3042) Int)
(declare-fun x1563 () Int)
(declare-fun x4714 () Bool)
(declare-fun x7701 () x3042)
(declare-fun x6934 () Bool)
(declare-fun x6021 () Bool)
(declare-fun x3198 () Int)
(declare-fun x3469 () Int)
(declare-fun x7738 () Bool)
(declare-fun x8855 () Bool)
(declare-fun x5373 () Bool)
(declare-fun x7726 () Bool)
(declare-fun x7895 () Int)
(declare-fun x8839 () Int)
(declare-fun x4076 () Bool)
(declare-fun x4175 () Bool)
(declare-fun x5009 () Int)
(declare-fun x9072 () x3042)
(declare-fun x4160 () Bool)
(declare-fun x5365 () Bool)
(declare-fun x5817 () Int)
(declare-fun x7337 () Bool)
(declare-fun x8833 () Int)
(declare-fun x8420 () Bool)
(declare-fun x7295 () Bool)
(declare-fun x5722 () Int)
(declare-fun x4169 () Int)
(declare-fun x973 () Bool)
(declare-fun x7667 () Bool)
(declare-fun x3226 () Bool)
(declare-fun x4292 () Int)
(declare-fun x6531 () Int)
(declare-fun x2770 () Bool)
(declare-fun x2363 () Bool)
(declare-fun x6164 () Int)
(declare-fun x1725 () Int)
(declare-fun x5682 () Bool)
(declare-fun x2918 () Bool)
(declare-fun x3046 () Bool)
(declare-fun x2805 () Int)
(declare-fun x3320 () Bool)
(declare-fun x6452 () Bool)
(declare-fun x3228 () Bool)
(declare-fun x5341 () Bool)
(declare-fun x2996 () Bool)
(declare-fun x7510 () Int)
(declare-fun x6454 () x3042)
(declare-fun x8154 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x5599 () Bool)
(declare-fun x2777 () Bool)
(declare-fun x4838 () x3042)
(declare-fun x2752 () Bool)
(declare-fun x9161 () Bool)
(declare-fun x1374 () Bool)
(declare-fun x8817 () Bool)
(declare-fun x4977 () Int)
(declare-fun x7899 () Bool)
(declare-fun x657 () Bool)
(declare-fun x855 () Int)
(declare-fun x798 () Bool)
(declare-fun x1065 () x3042)
(declare-fun x4851 () Int)
(declare-fun x4564 () Bool)
(declare-fun x3173 () Bool)
(declare-fun x465 () Int)
(declare-fun x1255 () Bool)
(declare-fun x31 () x3042)
(declare-fun x1578 () Int)
(declare-fun x5530 () Bool)
(declare-fun x7350 () Int)
(declare-fun x185 () Bool)
(declare-fun x5393 () Int)
(declare-fun x5299 () Bool)
(declare-fun x3286 () Bool)
(declare-fun x643 () Bool)
(declare-fun x2254 () Bool)
(declare-fun x7791 () Int)
(declare-fun x5291 () Int)
(declare-fun x1523 () x3042)
(declare-fun x1775 () Int)
(declare-fun x6528 () Bool)
(declare-fun x1965 () Bool)
(declare-fun x6730 () x3042)
(declare-fun x4550 () Int)
(declare-fun x860 () Bool)
(declare-fun x4429 () Bool)
(declare-fun x7705 () Bool)
(declare-fun x4197 () Bool)
(declare-fun x8031 () Int)
(declare-fun x3918 () Bool)
(declare-fun x8117 () Bool)
(declare-fun x7369 () Bool)
(declare-fun x3709 () Bool)
(declare-fun x3037 () Bool)
(declare-fun x3775 () Int)
(declare-fun x4415 () Int)
(declare-fun x6745 () Bool)
(declare-fun x3393 () Bool)
(declare-fun x8818 () Bool)
(declare-fun x1762 () Int)
(declare-fun x2277 () Int)
(declare-fun x7974 () Int)
(declare-fun x1353 () Int)
(declare-fun x2105 () Int)
(declare-fun x6121 () Bool)
(declare-fun x4919 () Bool)
(declare-fun x3023 () Bool)
(declare-fun x1558 () Bool)
(declare-fun x6802 () x3042)
(declare-fun x7086 () Bool)
(declare-fun x7849 () Bool)
(declare-fun x2771 () Bool)
(declare-fun x7530 () Int)
(declare-fun x2977 () Bool)
(declare-fun x6543 () Bool)
(declare-fun x6701 () x3042)
(declare-fun x2998 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x1853 () Bool)
(declare-fun x2287 () Bool)
(declare-fun x320 () Int)
(declare-fun x3742 () Bool)
(declare-fun x211 () Int)
(declare-fun x8153 () Int)
(declare-fun x1136 () Int)
(declare-fun x7551 () x3042)
(declare-fun x972 () Int)
(declare-fun x2006 () Bool)
(declare-fun x770 () Bool)
(declare-fun x5878 () Bool)
(declare-fun x3139 () Bool)
(declare-fun x3111 () Int)
(declare-fun x1845 () Int)
(declare-fun x6915 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x6091 () Bool)
(declare-fun x7303 () Bool)
(declare-fun x392 () Int)
(declare-fun x3382 (x3042) Int)
(declare-fun x1221 () Int)
(declare-fun x8357 () Int)
(declare-fun x5471 () Bool)
(declare-fun x8474 () Int)
(declare-fun x6386 () Int)
(declare-fun x8100 () x3042)
(declare-fun x3452 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x230 () Int)
(declare-fun x4861 () x3042)
(declare-fun x4443 () Int)
(declare-fun x5959 () Bool)
(declare-fun x3976 () x3042)
(declare-fun x6289 () Int)
(declare-fun x8124 () Int)
(declare-fun x1214 () Bool)
(declare-fun x393 () Int)
(declare-fun x6211 () Bool)
(declare-fun x5182 () Bool)
(declare-fun x2606 () Bool)
(declare-fun x333 (x3042) Int)
(declare-fun x7786 () Int)
(declare-fun x7012 () Int)
(declare-fun x4607 () Bool)
(declare-fun x1152 () Int)
(declare-fun x2718 () Bool)
(declare-fun x1024 () Int)
(declare-fun x2325 () Bool)
(declare-fun x3251 () Int)
(declare-fun x3649 (x3042) Int)
(declare-fun x5280 () Int)
(declare-fun x7622 () Int)
(declare-fun x2869 () Int)
(declare-fun x8393 () Int)
(declare-fun x8384 () Bool)
(declare-fun x2410 () Int)
(declare-fun x6014 () Bool)
(declare-fun x9001 () Bool)
(declare-fun x8536 () Bool)
(declare-fun x8508 () Int)
(declare-fun x3158 () x3042)
(declare-fun x5960 () Bool)
(declare-fun x2641 () Bool)
(declare-fun x7860 () Int)
(declare-fun x743 () Int)
(declare-fun x1239 () Int)
(declare-fun x7196 () Int)
(declare-fun x2005 () Int)
(declare-fun x2010 () Int)
(declare-fun x5214 () Bool)
(declare-fun x5550 () Int)
(declare-fun x988 () Bool)
(declare-fun x7033 () Int)
(declare-fun x4327 () x3042)
(declare-fun x3810 () Int)
(declare-fun x8421 () Int)
(declare-fun x1496 () Bool)
(declare-fun x5807 () Bool)
(declare-fun x1524 () Bool)
(declare-fun x8972 () Bool)
(declare-fun x5044 () Bool)
(declare-fun x4265 () Bool)
(declare-fun x2523 () Int)
(declare-fun x2615 () x3042)
(declare-fun x6727 () Bool)
(declare-fun x6805 () Int)
(declare-fun x4388 () Bool)
(declare-fun x2826 () Int)
(declare-fun x7354 () Int)
(declare-fun x2953 () Int)
(declare-fun x6517 () Int)
(declare-fun x2043 () Bool)
(declare-fun x1312 () Bool)
(declare-fun x3964 () Int)
(declare-fun x887 () Int)
(declare-fun x8592 () Bool)
(declare-fun x4815 () Int)
(declare-fun x4695 () Int)
(declare-fun x1330 () Bool)
(declare-fun x1948 () Bool)
(declare-fun x2387 () Bool)
(declare-fun x2765 () Int)
(declare-fun x5605 () Int)
(declare-fun x7936 () Int)
(declare-fun x1526 () Bool)
(declare-fun x4796 () Int)
(declare-fun x3389 () Int)
(declare-fun x7058 () Bool)
(declare-fun x8164 () Int)
(declare-fun x1921 () Bool)
(declare-fun x1369 () Bool)
(declare-fun x960 () Bool)
(declare-fun x8681 () Bool)
(declare-fun x4566 () Int)
(declare-fun x3281 () x3042)
(declare-fun x649 () Int)
(declare-fun x3216 () Bool)
(declare-fun x2183 () Int)
(declare-fun x6279 () x3042)
(declare-fun x1873 () Int)
(declare-fun x8807 () Int)
(declare-fun x5027 () Bool)
(declare-fun x7274 () Int)
(declare-fun x7780 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x777 () Int)
(declare-fun x8470 () Bool)
(declare-fun x2991 () Bool)
(declare-fun x7046 () Int)
(declare-fun x8330 () Int)
(declare-fun x8068 (Int) Int)
(declare-fun x3614 () Int)
(declare-fun x8888 () Bool)
(declare-fun x6261 () Bool)
(declare-fun x9113 () x3042)
(declare-fun x1213 () Bool)
(declare-fun x4255 () Int)
(declare-fun x6392 () x3042)
(declare-fun x4945 () Bool)
(declare-fun x5719 () Int)
(declare-fun x7553 () Int)
(declare-fun x9058 () Int)
(declare-fun x4805 () Int)
(declare-fun x8879 () Bool)
(declare-fun x8851 () Bool)
(declare-fun x983 () x3042)
(declare-fun x8936 () Int)
(declare-fun x9194 () Int)
(declare-fun x2344 () Bool)
(declare-fun x6866 () Int)
(declare-fun x427 () x3042)
(declare-fun x7891 () Bool)
(declare-fun x4165 () Int)
(declare-fun x5390 () Int)
(declare-fun x2853 () Int)
(declare-fun x7344 () Int)
(declare-fun x6309 () x3042)
(declare-fun x1389 () Bool)
(declare-fun x5026 () x3042)
(declare-fun x6793 () Int)
(declare-fun x2321 () Int)
(declare-fun x4363 () Int)
(declare-fun x4188 () Bool)
(declare-fun x4751 () Bool)
(declare-fun x1129 () Bool)
(declare-fun x4460 () Bool)
(declare-fun x998 () Bool)
(declare-fun x9127 () Bool)
(declare-fun x177 () Bool)
(declare-fun x8795 () Bool)
(declare-fun x8895 () Bool)
(declare-fun x7997 () Bool)
(declare-fun x7402 () Bool)
(declare-fun x4901 () x3042)
(declare-fun x6772 () Bool)
(declare-fun x4520 () Bool)
(declare-fun x2929 () Bool)
(declare-fun x897 () Bool)
(declare-fun x8354 () Int)
(declare-fun x4604 () x3042)
(declare-fun x4821 () Bool)
(declare-fun x117 () Int)
(declare-fun x2603 () Int)
(declare-fun x6125 () x3042)
(declare-fun x8230 () Int)
(declare-fun x4890 () Bool)
(declare-fun x561 () x3042)
(declare-fun x5677 () Bool)
(declare-fun x3610 () Int)
(declare-fun x233 () Int)
(declare-fun x8569 () Bool)
(declare-fun x923 () Int)
(declare-fun x174 () Int)
(declare-fun x2198 () Bool)
(declare-fun x1544 () Bool)
(declare-fun x5135 () Bool)
(declare-fun x3598 () Int)
(declare-fun x7326 () Int)
(declare-fun x5154 () Int)
(declare-fun x7986 () Bool)
(declare-fun x4333 () Bool)
(declare-fun x4965 () x3042)
(declare-fun x148 () Bool)
(declare-fun x2333 () Int)
(declare-fun x3876 () Bool)
(declare-fun x6490 () Int)
(declare-fun x5408 () Int)
(declare-fun x7089 () Int)
(declare-fun x1165 () Int)
(declare-fun x5286 () x3042)
(declare-fun x8708 () Bool)
(declare-fun x8686 () x3042)
(declare-fun x3843 () Int)
(declare-fun x4565 () Bool)
(declare-fun x9274 () Bool)
(declare-fun x6867 () Bool)
(declare-fun x9084 () Int)
(declare-fun x3202 () Int)
(declare-fun x4151 () Bool)
(declare-fun x4579 () Bool)
(declare-fun x5819 () Int)
(declare-fun x3648 () Bool)
(declare-fun x7914 () Bool)
(declare-fun x2961 () Int)
(declare-fun x5536 () Bool)
(declare-fun x4221 () Bool)
(declare-fun x2289 () x3042)
(declare-fun x6019 () x3042)
(declare-fun x7691 () Int)
(declare-fun x6573 () Bool)
(declare-fun x726 () Bool)
(declare-fun x930 () Bool)
(declare-fun x1923 () Int)
(declare-fun x1170 () Int)
(declare-fun x8670 () Int)
(declare-fun x8267 () Int)
(declare-fun x57 () Bool)
(declare-fun x7789 () Bool)
(declare-fun x2461 () Bool)
(declare-fun x3440 () Bool)
(declare-fun x6890 () x3042)
(declare-fun x6951 () Int)
(declare-fun x1222 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x104 () Int)
(declare-fun x3054 () Int)
(declare-fun x7718 () Bool)
(declare-fun x2787 () Int)
(declare-fun x572 () Bool)
(declare-fun x2251 () Bool)
(declare-fun x4716 () Bool)
(declare-fun x2130 () Int)
(declare-fun x4170 () Bool)
(declare-fun x8405 () Int)
(declare-fun x5785 () Bool)
(declare-fun x823 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x3012 () Int)
(declare-fun x6321 () Int)
(declare-fun x2031 () Int)
(declare-fun x8987 () Bool)
(declare-fun x8733 () Bool)
(declare-fun x4909 () Int)
(declare-fun x186 () Bool)
(declare-fun x6766 () x3042)
(declare-fun x6438 () Bool)
(declare-fun x638 () Bool)
(declare-fun x7357 () Int)
(declare-fun x6469 () Bool)
(declare-fun x1322 (Int) Int)
(declare-fun x9251 () Bool)
(declare-fun x6571 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x663 () Int)
(declare-fun x917 () Int)
(declare-fun x1570 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x7973 () x3042)
(declare-fun x7308 () Int)
(declare-fun x83 () Bool)
(declare-fun x1590 () Bool)
(declare-fun x6300 () x3042)
(declare-fun x4598 () Bool)
(declare-fun x8027 () x3042)
(declare-fun x5335 () Bool)
(declare-fun x7535 () Int)
(declare-fun x7746 () Int)
(declare-fun x1740 () x3042)
(declare-fun x9021 () Bool)
(declare-fun x3722 () Int)
(declare-fun x5253 () Bool)
(declare-fun x244 () x3042)
(declare-fun x455 () Bool)
(declare-fun x1932 () Bool)
(declare-fun x2447 () Bool)
(declare-fun x8672 () Int)
(declare-fun x776 () Int)
(declare-fun x1243 () Bool)
(declare-fun x752 () Int)
(declare-fun x7729 () Bool)
(declare-fun x4405 () Int)
(declare-fun x1731 () Bool)
(declare-fun x1436 () Int)
(declare-fun x1643 () Int)
(declare-fun x503 () Int)
(declare-fun x9265 () Int)
(declare-fun x4864 () Int)
(declare-fun x8181 () Bool)
(declare-fun x651 () Bool)
(declare-fun x5956 () Int)
(declare-fun x3808 () Int)
(declare-fun x1790 () Bool)
(declare-fun x8283 () Bool)
(declare-fun x5249 () x3042)
(declare-fun x7828 () Bool)
(declare-fun x1865 () Bool)
(declare-fun x1882 () x3042)
(declare-fun x4202 () Bool)
(declare-fun x7479 () Bool)
(declare-fun x4282 () Int)
(declare-fun x7020 () Bool)
(declare-fun x4888 () Int)
(declare-fun x5344 () Int)
(declare-fun x4439 () Int)
(declare-fun x6432 () Int)
(declare-fun x7422 () Int)
(declare-fun x34 () Int)
(declare-fun x7697 () x3042)
(declare-fun x7593 () Int)
(declare-fun x2800 () Int)
(declare-fun x7906 () Bool)
(declare-fun x6250 () Int)
(declare-fun x6567 () Int)
(declare-fun x5472 () Bool)
(declare-fun x6208 () Int)
(declare-fun x5562 () Bool)
(declare-fun x3063 () Bool)
(declare-fun x4226 () Int)
(declare-fun x3878 () x3042)
(declare-fun x5926 () Bool)
(declare-fun x8667 () Bool)
(declare-fun x2670 () Bool)
(declare-fun x2820 (Int) Int)
(declare-fun x8623 () Bool)
(declare-fun x7355 () Int)
(declare-fun x5826 () Bool)
(declare-fun x5932 () Bool)
(declare-fun x5764 () Bool)
(declare-fun x2075 () Int)
(declare-fun x8523 () Bool)
(declare-fun x5771 () Bool)
(declare-fun x3475 () Bool)
(declare-fun x8502 () x3042)
(declare-fun x2218 () Bool)
(declare-fun x6399 () Int)
(declare-fun x5366 () Int)
(declare-fun x1789 () x3042)
(declare-fun x1600 () Bool)
(declare-fun x4766 () Bool)
(declare-fun x6556 () Int)
(declare-fun x4490 () x3042)
(declare-fun x1300 () Bool)
(declare-fun x4661 () Int)
(declare-fun x8214 () Int)
(declare-fun x70 () Bool)
(declare-fun x6969 () Int)
(declare-fun x4063 () x3042)
(declare-fun x4546 () Bool)
(declare-fun x2987 () Int)
(declare-fun x156 () x3042)
(declare-fun x6292 () Int)
(declare-fun x935 () Bool)
(declare-fun x8999 () Bool)
(declare-fun x6903 () Int)
(declare-fun x557 () Int)
(declare-fun x7140 () x3042)
(declare-fun x5339 () Bool)
(declare-fun x7501 () Bool)
(declare-fun x8423 () Int)
(declare-fun x824 () Bool)
(declare-fun x3651 () Int)
(declare-fun x3873 () Bool)
(declare-fun x439 () Bool)
(declare-fun x6283 () Bool)
(declare-fun x8722 () Bool)
(declare-fun x7839 () Bool)
(declare-fun x2177 () Bool)
(declare-fun x5342 () Bool)
(declare-fun x1915 () Int)
(declare-fun x6667 () Bool)
(declare-fun x4931 () Bool)
(declare-fun x1025 () x3042)
(declare-fun x2327 () Bool)
(declare-fun x3365 () x3042)
(declare-fun x6231 () Bool)
(declare-fun x4736 () Bool)
(declare-fun x8176 () Int)
(declare-fun x1265 () Int)
(declare-fun x1366 () Int)
(declare-fun x4765 () Bool)
(declare-fun x8922 () Bool)
(declare-fun x6134 () Bool)
(declare-fun x214 () Bool)
(declare-fun x6113 () Bool)
(declare-fun x2178 () Bool)
(declare-fun x6006 () Int)
(declare-fun x597 () Bool)
(declare-fun x139 () Int)
(declare-fun x8320 () Bool)
(declare-fun x1569 () Bool)
(declare-fun x2245 (Int) Int)
(declare-fun x5073 () Bool)
(declare-fun x7191 () x3042)
(declare-fun x1661 () Bool)
(declare-fun x3123 () Int)
(declare-fun x8761 () Bool)
(declare-fun x4229 () Bool)
(declare-fun x2480 () x3042)
(declare-fun x4409 () Bool)
(declare-fun x8920 () Int)
(declare-fun x5264 () Bool)
(declare-fun x8829 () Bool)
(declare-fun x2302 () Bool)
(declare-fun x896 () Bool)
(declare-fun x2917 () x3042)
(declare-fun x2663 () Bool)
(declare-fun x1585 () Bool)
(declare-fun x6244 () Int)
(declare-fun x6057 () Bool)
(declare-fun x5854 () Bool)
(declare-fun x6996 (x3042) Int)
(declare-fun x3106 () Bool)
(declare-fun x1151 () Bool)
(declare-fun x8225 () Bool)
(declare-fun x7256 () Bool)
(declare-fun x12 () Int)
(declare-fun x206 () Bool)
(declare-fun x1984 () x3042)
(declare-fun x7526 () Bool)
(declare-fun x2007 () Bool)
(declare-fun x4972 () Bool)
(declare-fun x1734 () Int)
(declare-fun x3071 () Bool)
(declare-fun x7247 () Int)
(declare-fun x7685 () x3042)
(declare-fun x2094 () Int)
(declare-fun x8949 () Int)
(declare-fun x3711 () Bool)
(declare-fun x5132 () Bool)
(declare-fun x8119 () Int)
(declare-fun x4986 () Bool)
(declare-fun x3961 () Bool)
(declare-fun x6474 () Bool)
(declare-fun x4311 () Int)
(declare-fun x3787 () Bool)
(declare-fun x6930 () Bool)
(declare-fun x6587 () Int)
(declare-fun x8145 () Int)
(declare-fun x8857 () x3042)
(declare-fun x6054 () Int)
(declare-fun x500 () Bool)
(declare-fun x4804 () Int)
(declare-fun x4130 () x3042)
(declare-fun x3583 () x3042)
(declare-fun x6407 () Bool)
(declare-fun x3683 () Bool)
(declare-fun x2626 () Bool)
(declare-fun x5903 () Bool)
(declare-fun x2891 () Int)
(declare-fun x2818 () Bool)
(declare-fun x6477 () Bool)
(declare-fun x3991 () Int)
(declare-fun x5139 () Int)
(declare-fun x5050 () Int)
(declare-fun x4241 () Int)
(declare-fun x52 () Bool)
(declare-fun x2490 () Bool)
(declare-fun x775 () Bool)
(declare-fun x1004 () Bool)
(declare-fun x2813 () x3042)
(declare-fun x8794 () x3042)
(declare-fun x5113 () Int)
(declare-fun x5209 () x3042)
(declare-fun x6045 () Int)
(declare-fun x9023 () Bool)
(declare-fun x3652 () Int)
(declare-fun x5834 () Bool)
(declare-fun x679 () Int)
(declare-fun x8386 () x3042)
(declare-fun x1997 () Int)
(declare-fun x3089 () Bool)
(declare-fun x8695 () Bool)
(declare-fun x7291 () Int)
(declare-fun x2789 () x3042)
(declare-fun x6404 () Int)
(declare-fun x1796 () Bool)
(declare-fun x6 () Bool)
(declare-fun x3225 () Bool)
(declare-fun x2248 () Int)
(declare-fun x1410 () Int)
(declare-fun x223 () Bool)
(declare-fun x2578 () Int)
(declare-fun x2247 () x3042)
(declare-fun x7013 () x3042)
(declare-fun x8556 () Int)
(declare-fun x7956 () Int)
(declare-fun x6536 () Bool)
(declare-fun x6308 () Bool)
(declare-fun x4591 () Bool)
(declare-fun x5014 () Bool)
(declare-fun x6829 () x3042)
(declare-fun x6750 () Bool)
(declare-fun x1763 () x3042)
(declare-fun x6393 () Int)
(declare-fun x4093 () Int)
(declare-fun x339 () Bool)
(declare-fun x1738 () Bool)
(declare-fun x5116 () Int)
(declare-fun x7602 (Int) Int)
(declare-fun x7409 () Bool)
(declare-fun x5531 () Int)
(declare-fun x886 () Int)
(declare-fun x2579 () Bool)
(declare-fun x2792 () Bool)
(declare-fun x861 () Bool)
(declare-fun x2832 () Int)
(declare-fun x201 () Int)
(declare-fun x595 () x3042)
(declare-fun x5650 () Bool)
(declare-fun x1868 () Bool)
(declare-fun x7486 () Int)
(declare-fun x4400 () x3042)
(declare-fun x5382 () x3042)
(declare-fun x2970 () Int)
(declare-fun x7408 () Bool)
(declare-fun x5225 () Int)
(declare-fun x6658 () Int)
(declare-fun x964 () Int)
(declare-fun x5796 () Int)
(declare-fun x2341 () Int)
(declare-fun x2240 () Int)
(declare-fun x7651 () x3042)
(declare-fun x4144 () Bool)
(declare-fun x7364 () Bool)
(declare-fun x4011 () Bool)
(declare-fun x6115 () Bool)
(declare-fun x4430 () Bool)
(declare-fun x4329 () Int)
(declare-fun x4823 () Bool)
(declare-fun x1124 () x3042)
(declare-fun x4146 () Bool)
(declare-fun x2478 () x3042)
(declare-fun x3361 () Int)
(declare-fun x4616 () Bool)
(declare-fun x1878 () Int)
(declare-fun x8529 () Int)
(declare-fun x8714 () x3042)
(declare-fun x8605 () Int)
(declare-fun x383 () Bool)
(declare-fun x6927 () Bool)
(declare-fun x4440 () Bool)
(declare-fun x5877 () Bool)
(declare-fun x6155 () Bool)
(declare-fun x5535 () Int)
(declare-fun x4372 () Int)
(declare-fun x6643 () Bool)
(declare-fun x5958 () Bool)
(declare-fun x4326 () Bool)
(declare-fun x4117 () Bool)
(declare-fun x3036 (Int) Int)
(declare-fun x4917 () x3042)
(declare-fun x941 () Bool)
(declare-fun x8407 () Bool)
(declare-fun x1854 () Int)
(declare-fun x1455 () Bool)
(declare-fun x1132 () Bool)
(declare-fun x5640 () Bool)
(declare-fun x3353 () Bool)
(declare-fun x857 () Bool)
(declare-fun x4234 () Int)
(declare-fun x5942 () Bool)
(declare-fun x8424 () Bool)
(declare-fun x2364 () Int)
(declare-fun x4737 () Bool)
(declare-fun x7377 () Bool)
(declare-fun x4655 () Bool)
(declare-fun x6546 () Int)
(declare-fun x7216 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x7251 () Bool)
(declare-fun x5750 () Int)
(declare-fun x321 () Int)
(declare-fun x4912 () Int)
(declare-fun x1827 () Int)
(declare-fun x1042 () Bool)
(declare-fun x7431 () Int)
(declare-fun x831 () x3042)
(declare-fun x4061 () x3042)
(declare-fun x3729 () Int)
(declare-fun x6002 () Bool)
(declare-fun x6752 () Bool)
(declare-fun x7035 () Bool)
(declare-fun x1897 () Bool)
(declare-fun x6253 () Int)
(declare-fun x8171 () Bool)
(declare-fun x2907 () Int)
(declare-fun x4497 () Int)
(declare-fun x175 () x3042)
(declare-fun x4204 () Int)
(declare-fun x2955 () Int)
(declare-fun x3702 () Bool)
(declare-fun x7023 () Int)
(declare-fun x493 () x3042)
(declare-fun x8179 () Bool)
(declare-fun x6271 () Int)
(declare-fun x8282 () x3042)
(declare-fun x3905 () Bool)
(declare-fun x6756 () Bool)
(declare-fun x7286 () Int)
(declare-fun x3125 () Bool)
(declare-fun x5160 () Bool)
(declare-fun x5131 () Bool)
(declare-fun x1444 () x3042)
(declare-fun x7074 () Int)
(declare-fun x8682 () Bool)
(declare-fun x8285 () Bool)
(declare-fun x5683 () Int)
(declare-fun x5709 () Bool)
(declare-fun x2605 (x3042) Int)
(declare-fun x3317 () Int)
(declare-fun x989 () Bool)
(declare-fun x5343 () Int)
(declare-fun x786 () Int)
(declare-fun x9133 () Bool)
(declare-fun x4373 () Bool)
(declare-fun x5294 () Bool)
(declare-fun x4768 (x3042) Int)
(declare-fun x2596 () Bool)
(declare-fun x5052 () Int)
(declare-fun x7945 () Bool)
(declare-fun x7752 () Bool)
(declare-fun x2338 () Int)
(declare-fun x9099 (Int) Int)
(declare-fun x2153 () Bool)
(declare-fun x6700 () Bool)
(declare-fun x3107 () Bool)
(declare-fun x5839 () Bool)
(declare-fun x7926 () x3042)
(declare-fun x1809 () Int)
(declare-fun x335 () Bool)
(declare-fun x5794 () x3042)
(declare-fun x6591 () Bool)
(declare-fun x2257 () x3042)
(declare-fun x4833 () Bool)
(declare-fun x2377 () Bool)
(declare-fun x8877 () Bool)
(declare-fun x3732 () Bool)
(declare-fun x4754 () Bool)
(declare-fun x6530 () Bool)
(declare-fun x6070 () Int)
(declare-fun x7342 () Int)
(declare-fun x1466 () Int)
(declare-fun x2456 () x3042)
(declare-fun x2414 () Bool)
(declare-fun x8584 () Int)
(declare-fun x4089 () Bool)
(declare-fun x6483 () Bool)
(declare-fun x7750 () Int)
(declare-fun x4283 () Int)
(declare-fun x3986 () Int)
(declare-fun x8403 () Bool)
(declare-fun x412 () Int)
(declare-fun x5496 () Bool)
(declare-fun x6547 () Int)
(declare-fun x5617 () Bool)
(declare-fun x9249 () Bool)
(declare-fun x3569 () Bool)
(declare-fun x6917 () Int)
(declare-fun x6001 () Bool)
(declare-fun x2965 () Int)
(declare-fun x2160 () Bool)
(declare-fun x8798 () Int)
(declare-fun x5103 () Int)
(declare-fun x8912 () Bool)
(declare-fun x323 () Bool)
(declare-fun x4592 () Bool)
(declare-fun x523 () Bool)
(declare-fun x6212 () Int)
(declare-fun x3962 () Bool)
(declare-fun x3253 () Bool)
(declare-fun x7504 () Bool)
(declare-fun x6715 () x3042)
(declare-fun x7861 () Bool)
(declare-fun x4585 () Bool)
(declare-fun x4953 () Bool)
(declare-fun x8210 () Bool)
(declare-fun x9159 () Int)
(declare-fun x1421 () Bool)
(declare-fun x3077 () Int)
(declare-fun x5842 () Int)
(declare-fun x7559 () Int)
(declare-fun x3809 () Bool)
(declare-fun x4394 () Int)
(declare-fun x3221 () Int)
(declare-fun x5376 () Bool)
(declare-fun x6142 () Int)
(declare-fun x5285 () Int)
(declare-fun x8830 () Bool)
(declare-fun x7100 () x3042)
(declare-fun x2538 () Int)
(declare-fun x1443 () Bool)
(declare-fun x7993 () x3042)
(declare-fun x5043 () Bool)
(declare-fun x8863 () Bool)
(declare-fun x3050 () Bool)
(declare-fun x6479 () Bool)
(declare-fun x2690 () x3042)
(declare-fun x2332 () Bool)
(declare-fun x4467 () Int)
(declare-fun x2421 () Bool)
(declare-fun x937 () Bool)
(declare-fun x9130 () Bool)
(declare-fun x1920 () Bool)
(declare-fun x3204 () Bool)
(declare-fun x2076 () Int)
(declare-fun x794 () Bool)
(declare-fun x105 () Int)
(declare-fun x286 () Int)
(declare-fun x2184 (x3042) Int)
(declare-fun x36 () Int)
(declare-fun x7448 () Int)
(declare-fun x2378 () Int)
(declare-fun x7164 () Int)
(declare-fun x6146 () Int)
(declare-fun x733 () Bool)
(declare-fun x2570 () Bool)
(declare-fun x5095 () Bool)
(declare-fun x6761 () Bool)
(declare-fun x3696 () Bool)
(declare-fun x6740 () Bool)
(declare-fun x2660 () Int)
(declare-fun x5434 () Int)
(declare-fun x3977 (x3042) Int)
(declare-fun x7137 () Bool)
(declare-fun x2151 () Int)
(declare-fun x791 () Int)
(declare-fun x8071 () Int)
(declare-fun x3101 () Bool)
(declare-fun x928 () Int)
(declare-fun x4789 () Int)
(declare-fun x5212 () Bool)
(declare-fun x5901 () Bool)
(declare-fun x9147 () Bool)
(declare-fun x2925 () Bool)
(declare-fun x968 () Int)
(declare-fun x5836 () Bool)
(declare-fun x8596 () x3042)
(declare-fun x4776 () Bool)
(declare-fun x1469 () x3042)
(declare-fun x6939 () x3042)
(declare-fun x3579 () Int)
(declare-fun x6395 () Bool)
(declare-fun x8238 () Bool)
(declare-fun x4859 () Bool)
(declare-fun x1200 () Int)
(declare-fun x2036 () Int)
(declare-fun x3183 () Bool)
(declare-fun x259 () x3042)
(declare-fun x1005 () Bool)
(declare-fun x3863 () Bool)
(declare-fun x2457 () Bool)
(declare-fun x5983 () Bool)
(declare-fun x2230 () Bool)
(declare-fun x5065 () Bool)
(declare-fun x5891 () Int)
(declare-fun x974 () Bool)
(declare-fun x8395 () Bool)
(declare-fun x3754 () Int)
(declare-fun x4866 () x3042)
(declare-fun x5951 (x3042) Int)
(declare-fun x4932 () Int)
(declare-fun x2835 () Int)
(declare-fun x2893 (x3042) Int)
(declare-fun x1463 () Int)
(declare-fun x3698 () Bool)
(declare-fun x3156 () Bool)
(declare-fun x2086 () Int)
(declare-fun x4461 () Bool)
(declare-fun x6612 () Int)
(declare-fun x6138 () Int)
(declare-fun x7463 () Bool)
(declare-fun x5585 () Bool)
(declare-fun x3658 () Int)
(declare-fun x7928 () Int)
(declare-fun x8797 () Int)
(declare-fun x7531 () Bool)
(declare-fun x3642 () Bool)
(declare-fun x763 () Int)
(declare-fun x5783 () Bool)
(declare-fun x3534 () x3042)
(declare-fun x5906 () x3042)
(declare-fun x5858 () Int)
(declare-fun x1340 () Int)
(declare-fun x2224 () Bool)
(declare-fun x7065 () Bool)
(declare-fun x5644 () Bool)
(declare-fun x6323 () Bool)
(declare-fun x4638 () Bool)
(declare-fun x4368 () Bool)
(declare-fun x4907 () Int)
(declare-fun x7318 () x3042)
(declare-fun x3103 () Int)
(declare-fun x9126 () x3042)
(declare-fun x750 () Bool)
(declare-fun x5911 () Bool)
(declare-fun x5954 () x3042)
(declare-fun x3031 () Bool)
(declare-fun x926 () Int)
(declare-fun x3529 () Int)
(declare-fun x6144 () Bool)
(declare-fun x768 () Int)
(declare-fun x6148 () Bool)
(declare-fun x9236 () x3042)
(declare-fun x6268 () Int)
(declare-fun x3944 () Bool)
(declare-fun x8240 () Int)
(declare-fun x8226 () Int)
(declare-fun x6706 () Bool)
(declare-fun x4595 () Int)
(declare-fun x9168 () Bool)
(declare-fun x1945 () Int)
(declare-fun x7656 () Bool)
(declare-fun x14 () Int)
(declare-fun x6451 () Bool)
(declare-fun x9174 () x3042)
(declare-fun x1680 () Bool)
(declare-fun x3613 () Bool)
(declare-fun x2205 () Int)
(declare-fun x8248 (Int) Int)
(declare-fun x677 () Bool)
(declare-fun x384 () Bool)
(declare-fun x1127 () Bool)
(declare-fun x5227 () Int)
(declare-fun x8431 () x3042)
(declare-fun x2295 () Int)
(declare-fun x7414 () Bool)
(declare-fun x6330 () Bool)
(declare-fun x1143 () Bool)
(declare-fun x4962 () Bool)
(declare-fun x645 () Bool)
(declare-fun x8555 () Int)
(declare-fun x666 () Bool)
(declare-fun x2864 () Bool)
(declare-fun x9002 () Int)
(declare-fun x3102 () Int)
(declare-fun x1062 () Int)
(declare-fun x3052 () Bool)
(declare-fun x2479 () Bool)
(declare-fun x3907 () Int)
(declare-fun x1709 () x3042)
(declare-fun x4141 () Bool)
(declare-fun x5674 () Bool)
(declare-fun x3293 () Bool)
(declare-fun x7818 () Bool)
(declare-fun x188 () Bool)
(declare-fun x6830 () x3042)
(declare-fun x2379 () Bool)
(declare-fun x8365 () Int)
(declare-fun x7801 () Bool)
(declare-fun x2875 () Bool)
(declare-fun x2739 () Bool)
(declare-fun x6784 () Int)
(declare-fun x5078 () Bool)
(declare-fun x6425 () Int)
(declare-fun x8564 () x3042)
(declare-fun x1654 () Bool)
(declare-fun x7399 () Bool)
(declare-fun x8702 () Int)
(declare-fun x5556 () Bool)
(declare-fun x7821 () Int)
(declare-fun x5811 () Bool)
(declare-fun x5178 (Int) Int)
(declare-fun x6304 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x8687 () Int)
(declare-fun x815 () Int)
(declare-fun x7459 () Int)
(declare-fun x7741 () x3042)
(declare-fun x1328 () Int)
(declare-fun x1120 () Bool)
(declare-fun x5431 () Int)
(declare-fun x603 () Int)
(declare-fun x5757 () Int)
(declare-fun x5990 () x3042)
(declare-fun x1097 () Bool)
(declare-fun x2846 () Int)
(declare-fun x134 () Int)
(declare-fun x2418 (Int) Int)
(declare-fun x3731 () Bool)
(declare-fun x8559 () Int)
(declare-fun x6577 () Int)
(declare-fun x1879 () Bool)
(declare-fun x5850 () Bool)
(declare-fun x4370 () Bool)
(declare-fun x2390 () Bool)
(declare-fun x7067 () Int)
(declare-fun x1284 () Bool)
(declare-fun x68 () Int)
(declare-fun x275 () Bool)
(declare-fun x4389 () Int)
(declare-fun x742 () Bool)
(declare-fun x6884 () Int)
(declare-fun x2558 () Bool)
(declare-fun x7313 () Int)
(declare-fun x2642 () x3042)
(declare-fun x2244 () Bool)
(declare-fun x5608 () Int)
(declare-fun x6771 () Bool)
(declare-fun x8088 () Int)
(declare-fun x1490 () x3042)
(declare-fun x3446 () x3042)
(declare-fun x927 () Bool)
(declare-fun x6126 () Bool)
(declare-fun x8805 () Bool)
(declare-fun x9137 () Bool)
(declare-fun x1757 () Bool)
(declare-fun x5190 () Int)
(declare-fun x5924 () Int)
(declare-fun x2077 () Int)
(declare-fun x399 () Int)
(declare-fun x6012 () Bool)
(declare-fun x8600 () x3042)
(declare-fun x1451 () Int)
(declare-fun x5325 () Int)
(declare-fun x8276 () Int)
(declare-fun x7468 () Bool)
(declare-fun x3750 () Bool)
(declare-fun x2440 () Int)
(declare-fun x5508 () Int)
(declare-fun x1122 () Bool)
(declare-fun x1493 () Int)
(declare-fun x7132 () Bool)
(declare-fun x2174 () x3042)
(declare-fun x1158 () x3042)
(declare-fun x501 () Bool)
(declare-fun x4825 () Bool)
(declare-fun x8425 () Bool)
(declare-fun x6670 () Bool)
(declare-fun x4186 () Int)
(declare-fun x8910 () Bool)
(declare-fun x8025 () Bool)
(declare-fun x2310 () Int)
(declare-fun x2449 () Bool)
(declare-fun x8507 () Int)
(declare-fun x3450 () Bool)
(declare-fun x4162 () Int)
(declare-fun x2032 () Int)
(declare-fun x747 () Bool)
(declare-fun x2035 () Int)
(declare-fun x8148 () Int)
(declare-fun x3496 () Bool)
(declare-fun x1393 () x3042)
(declare-fun x2966 () Bool)
(declare-fun x6905 () Int)
(declare-fun x3359 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x7966 () Bool)
(declare-fun x4938 () Bool)
(declare-fun x6559 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x2852 () Bool)
(declare-fun x2444 () Int)
(declare-fun x5367 () Bool)
(declare-fun x8753 () Int)
(declare-fun x2802 () Bool)
(declare-fun x5244 () Bool)
(declare-fun x8802 () Bool)
(declare-fun x5686 () Bool)
(declare-fun x1359 () Int)
(declare-fun x5801 () Bool)
(declare-fun x495 () Int)
(declare-fun x128 () Int)
(declare-fun x7805 () Bool)
(declare-fun x4021 () Int)
(declare-fun x1743 () Int)
(declare-fun x1793 () Bool)
(declare-fun x5579 () Bool)
(declare-fun x7919 () Bool)
(declare-fun x5375 () Bool)
(declare-fun x4297 () Int)
(declare-fun x921 () Int)
(declare-fun x8413 () Bool)
(declare-fun x3257 () Bool)
(declare-fun x8774 () Int)
(declare-fun x6388 () Bool)
(declare-fun x9053 () Int)
(declare-fun x7841 () x3042)
(declare-fun x744 () Int)
(declare-fun x6345 () Bool)
(declare-fun x5215 () Bool)
(declare-fun x3980 () Int)
(declare-fun x5482 () Int)
(declare-fun x9156 () Int)
(declare-fun x6429 () Int)
(declare-fun x9207 () Bool)
(declare-fun x2013 () Int)
(declare-fun x8300 () Bool)
(declare-fun x4078 () Bool)
(declare-fun x7473 () Bool)
(declare-fun x4182 () Bool)
(declare-fun x6338 () Bool)
(declare-fun x8867 () Bool)
(declare-fun x432 () Int)
(declare-fun x193 () Int)
(declare-fun x8205 () Bool)
(declare-fun x2119 () Bool)
(declare-fun x4048 () Bool)
(declare-fun x9228 () Bool)
(declare-fun x2134 () Bool)
(declare-fun x2326 () Bool)
(declare-fun x704 () Bool)
(declare-fun x3840 () Bool)
(declare-fun x136 () x3042)
(declare-fun x6133 () Bool)
(declare-fun x5949 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x6635 () Bool)
(declare-fun x818 () Int)
(declare-fun x8666 () Int)
(declare-fun x8520 () Int)
(declare-fun x986 () Int)
(declare-fun x7983 () Bool)
(declare-fun x15 () x3042)
(declare-fun x1673 () Bool)
(declare-fun x1249 () Int)
(declare-fun x3369 () Bool)
(declare-fun x4627 () Bool)
(declare-fun x7462 () Int)
(declare-fun x50 () x3042)
(declare-fun x940 () Int)
(declare-fun x7950 () Int)
(declare-fun x7282 () Bool)
(declare-fun x2522 () x3042)
(declare-fun x4964 () Int)
(declare-fun x3150 () Int)
(declare-fun x451 () Int)
(declare-fun x4651 () Bool)
(declare-fun x8988 () Bool)
(declare-fun x2048 () Int)
(declare-fun x8460 () Bool)
(declare-fun x8083 () x3042)
(declare-fun x8763 () Bool)
(declare-fun x4010 () Bool)
(declare-fun x2701 () Bool)
(declare-fun x4003 () Int)
(declare-fun x7725 () Bool)
(declare-fun x5684 () Bool)
(declare-fun x2025 () Bool)
(declare-fun x4006 () Int)
(declare-fun x627 () Bool)
(declare-fun x885 () x3042)
(declare-fun x8712 () Bool)
(declare-fun x8512 () Bool)
(declare-fun x1604 () Int)
(declare-fun x4832 () Bool)
(declare-fun x8156 () Bool)
(declare-fun x8755 () Int)
(declare-fun x129 () Int)
(declare-fun x4883 () Bool)
(declare-fun x8307 () x3042)
(declare-fun x8233 () x3042)
(declare-fun x3444 () Bool)
(declare-fun x7014 () x3042)
(declare-fun x1111 () Bool)
(declare-fun x626 () Bool)
(declare-fun x4990 () Int)
(declare-fun x2303 () Bool)
(declare-fun x3250 () Int)
(declare-fun x3528 () Bool)
(declare-fun x2225 () Bool)
(declare-fun x5462 () Bool)
(declare-fun x3666 () Int)
(declare-fun x4670 () Int)
(declare-fun x1310 () Int)
(declare-fun x3892 () Bool)
(declare-fun x568 () x3042)
(declare-fun x8580 () Int)
(declare-fun x5758 () Int)
(declare-fun x5715 () Bool)
(declare-fun x2577 () Bool)
(declare-fun x6359 () Int)
(declare-fun x202 () Bool)
(declare-fun x1886 () Int)
(declare-fun x7118 () Int)
(declare-fun x342 () Int)
(declare-fun x9081 () Bool)
(declare-fun x97 () Int)
(declare-fun x4300 () Int)
(declare-fun x4665 () Bool)
(declare-fun x2747 () Bool)
(declare-fun x8614 () Int)
(declare-fun x3056 () Bool)
(declare-fun x894 () Bool)
(declare-fun x5643 () Int)
(declare-fun x1940 () Int)
(declare-fun x6355 () Bool)
(declare-fun x5718 () Int)
(declare-fun x5768 () Bool)
(declare-fun x1224 () Bool)
(declare-fun x2734 () Bool)
(declare-fun x7943 () Int)
(declare-fun x5762 () Int)
(declare-fun x1621 () Int)
(declare-fun x2207 () Bool)
(declare-fun x7743 () Bool)
(declare-fun x3349 () Bool)
(declare-fun x5584 () Int)
(declare-fun x3919 () Int)
(declare-fun x3904 () Bool)
(declare-fun x3217 () x3042)
(declare-fun x6346 () Int)
(declare-fun x4715 () Int)
(declare-fun x4576 () Bool)
(declare-fun x3233 () Int)
(declare-fun x2243 () Int)
(declare-fun x7847 () Bool)
(declare-fun x877 () Bool)
(declare-fun x2128 () Int)
(declare-fun x5402 () Int)
(declare-fun x2553 () Bool)
(declare-fun x8271 () x3042)
(declare-fun x4984 () Int)
(declare-fun x1574 () Bool)
(declare-fun x773 () Bool)
(declare-fun x5576 () Bool)
(declare-fun x7160 () Bool)
(declare-fun x4472 () Bool)
(declare-fun x5899 () Int)
(declare-fun x7904 () Bool)
(declare-fun x6897 () Bool)
(declare-fun x5917 () Int)
(declare-fun x6369 () Int)
(declare-fun x4857 () Int)
(declare-fun x9017 () x3042)
(declare-fun x6758 () Bool)
(declare-fun x8967 () Bool)
(declare-fun x4989 () Bool)
(declare-fun x5277 () Int)
(declare-fun x8305 () Bool)
(declare-fun x5529 () Bool)
(declare-fun x6783 () Bool)
(declare-fun x3412 () Int)
(declare-fun x5391 () x3042)
(declare-fun x2353 () Int)
(declare-fun x1898 () Bool)
(declare-fun x7778 () Int)
(declare-fun x7924 () Int)
(declare-fun x1346 () Bool)
(declare-fun x511 () x3042)
(declare-fun x504 () Bool)
(declare-fun x5526 () x3042)
(declare-fun x7477 () Bool)
(declare-fun x1319 () Int)
(declare-fun x8082 () Bool)
(declare-fun x8457 () Bool)
(declare-fun x7246 () Int)
(declare-fun x8898 () Int)
(declare-fun x8749 () Int)
(declare-fun x3162 () Int)
(declare-fun x7903 () Bool)
(declare-fun x847 () Bool)
(declare-fun x2495 () Int)
(declare-fun x6831 () Bool)
(declare-fun x1049 () Int)
(declare-fun x8377 () Bool)
(declare-fun x4339 () Bool)
(declare-fun x6154 () Bool)
(declare-fun x8610 () Int)
(declare-fun x4032 () Int)
(declare-fun x5133 () Int)
(declare-fun x8993 () Int)
(declare-fun x662 () Int)
(declare-fun x9214 () Int)
(declare-fun x7152 () Int)
(declare-fun x6838 () Int)
(declare-fun x5104 () Bool)
(declare-fun x6034 () Int)
(declare-fun x8890 () Bool)
(declare-fun x3607 () Bool)
(declare-fun x5863 () Bool)
(declare-fun x7679 () Int)
(declare-fun x7305 () Int)
(declare-fun x2757 () Bool)
(declare-fun x5379 () Int)
(declare-fun x6699 () Int)
(declare-fun x3375 () Int)
(declare-fun x6607 () Bool)
(declare-fun x2993 () Int)
(declare-fun x830 () Int)
(declare-fun x4080 () Bool)
(declare-fun x7946 () Int)
(declare-fun x1246 () Bool)
(declare-fun x243 () Int)
(declare-fun x4451 () Int)
(declare-fun x6976 () Bool)
(declare-fun x8720 () Bool)
(declare-fun x8621 () x3042)
(declare-fun x5093 () Int)
(declare-fun x6016 () Int)
(declare-fun x7438 () Int)
(declare-fun x3707 () Int)
(declare-fun x4185 () Int)
(declare-fun x6000 () Int)
(declare-fun x5706 () Bool)
(declare-fun x7766 () x3042)
(declare-fun x2683 (Int) Int)
(declare-fun x7601 () Bool)
(declare-fun x8010 () Bool)
(declare-fun x2625 () Int)
(declare-fun x1769 () Int)
(declare-fun x7148 () Bool)
(declare-fun x3335 () Bool)
(declare-fun x946 () x3042)
(declare-fun x5035 () Int)
(declare-fun x179 () Int)
(declare-fun x8306 () Bool)
(declare-fun x1620 () Int)
(declare-fun x7960 () x3042)
(declare-fun x4228 () Bool)
(declare-fun x447 () Int)
(declare-fun x5486 () Int)
(declare-fun x7840 () Int)
(declare-fun x2107 () x3042)
(declare-fun x1256 () Int)
(declare-fun x8009 () Int)
(declare-fun x6340 () Bool)
(declare-fun x1035 () Bool)
(declare-fun x7307 () Int)
(declare-fun x3362 () Bool)
(declare-fun x2393 () Bool)
(declare-fun x9235 () Int)
(declare-fun x5795 () x3042)
(declare-fun x3856 () x3042)
(declare-fun x560 () Bool)
(declare-fun x2905 () Bool)
(declare-fun x6989 () Bool)
(declare-fun x1352 () Bool)
(declare-fun x5615 () x3042)
(declare-fun x195 () Bool)
(declare-fun x3978 () Bool)
(declare-fun x5787 () x3042)
(declare-fun x2762 () Bool)
(declare-fun x7525 () Int)
(declare-fun x8494 () Bool)
(declare-fun x6555 () x3042)
(declare-fun x8288 () Bool)
(declare-fun x61 () Int)
(declare-fun x1742 () Bool)
(declare-fun x2189 () Int)
(declare-fun x8609 () Bool)
(declare-fun x106 () x3042)
(declare-fun x2453 () Bool)
(declare-fun x3354 () Int)
(declare-fun x1768 () Bool)
(declare-fun x1935 () Int)
(declare-fun x127 () Int)
(declare-fun x4723 () Int)
(declare-fun x340 () Int)
(declare-fun x7316 () Int)
(declare-fun x8698 () Bool)
(declare-fun x7175 () Bool)
(declare-fun x8602 () Bool)
(declare-fun x3421 () Bool)
(declare-fun x8773 () Int)
(declare-fun x7062 () Bool)
(declare-fun x3149 () Bool)
(declare-fun x4183 () x3042)
(declare-fun x322 () Bool)
(declare-fun x2847 (x3042) Int)
(declare-fun x5127 () Int)
(declare-fun x8024 () Bool)
(declare-fun x848 () Int)
(declare-fun x5712 () Bool)
(declare-fun x2555 () Int)
(declare-fun x7102 () Int)
(declare-fun x5885 () Bool)
(declare-fun x3756 () Bool)
(declare-fun x9225 () Bool)
(declare-fun x701 () x3042)
(declare-fun x840 () Bool)
(declare-fun x4383 () Int)
(declare-fun x4969 () Bool)
(declare-fun x6372 () Int)
(declare-fun x2582 () Bool)
(declare-fun x3513 () Bool)
(declare-fun x7093 () Bool)
(declare-fun x5321 () Bool)
(declare-fun x1176 () Int)
(declare-fun x4149 () x3042)
(declare-fun x3536 () Bool)
(declare-fun x5563 () Bool)
(declare-fun x4707 () Bool)
(declare-fun x6109 () Bool)
(declare-fun x1192 () Bool)
(declare-fun x6178 () Bool)
(declare-fun x4846 () x3042)
(declare-fun x5570 () Int)
(declare-fun x2030 () x3042)
(declare-fun x1354 () Int)
(declare-fun x3504 () Bool)
(declare-fun x8426 () Bool)
(declare-fun x1417 () Bool)
(declare-fun x1169 () Int)
(declare-fun x1998 () Bool)
(declare-fun x7440 () Int)
(declare-fun x3081 () Bool)
(declare-fun x8519 () Bool)
(declare-fun x326 () Int)
(declare-fun x5732 () Int)
(declare-fun x9057 () Int)
(declare-fun x6862 () Int)
(declare-fun x1784 () Bool)
(declare-fun x3601 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x8694 () Int)
(declare-fun x3910 () Int)
(declare-fun x8790 () Int)
(declare-fun x1425 () Bool)
(declare-fun x1011 () Int)
(declare-fun x8437 () Bool)
(declare-fun x6971 () x3042)
(declare-fun x3638 () Int)
(declare-fun x7698 () Bool)
(declare-fun x6104 () Bool)
(declare-fun x8586 () Bool)
(declare-fun x3358 () Bool)
(declare-fun x4200 () Int)
(declare-fun x4614 () x3042)
(declare-fun x3005 () x3042)
(declare-fun x8852 () Bool)
(declare-fun x6101 () Int)
(declare-fun x3254 () Int)
(declare-fun x301 () Int)
(declare-fun x7575 () Int)
(declare-fun x3563 () Int)
(declare-fun x5589 () x3042)
(declare-fun x7837 () Bool)
(declare-fun x4978 () x3042)
(declare-fun x841 () Bool)
(declare-fun x1825 () Int)
(declare-fun x1573 () Int)
(declare-fun x4000 () Int)
(declare-fun x8053 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x7185 () x3042)
(declare-fun x3401 () Int)
(declare-fun x7425 () Int)
(declare-fun x4163 () x3042)
(declare-fun x2413 () Bool)
(declare-fun x7352 () x3042)
(declare-fun x1748 () x3042)
(declare-fun x2318 () Int)
(declare-fun x9222 () Int)
(declare-fun x4477 () Bool)
(declare-fun x5856 () Int)
(declare-fun x9073 () Bool)
(declare-fun x7038 () Bool)
(declare-fun x5336 () Bool)
(declare-fun x6534 () Int)
(declare-fun x8583 () Int)
(declare-fun x2350 () Int)
(declare-fun x8081 () Bool)
(declare-fun x4266 () Bool)
(declare-fun x7985 () Bool)
(declare-fun x4812 () Bool)
(declare-fun x9200 () Int)
(declare-fun x5028 () Bool)
(declare-fun x3947 () Int)
(declare-fun x3100 () Bool)
(declare-fun x6219 () x3042)
(declare-fun x6267 () Bool)
(declare-fun x4474 () Int)
(declare-fun x5309 () Int)
(declare-fun x2528 () Int)
(declare-fun x4427 () Int)
(declare-fun x7213 () Bool)
(declare-fun x4351 () Bool)
(declare-fun x7968 () x3042)
(declare-fun x192 () Bool)
(declare-fun x3989 () Bool)
(declare-fun x996 () Int)
(declare-fun x769 () Bool)
(declare-fun x1906 (Int) Int)
(declare-fun x3996 () Int)
(declare-fun x8674 () Int)
(declare-fun x6590 () Int)
(declare-fun x5645 () Int)
(declare-fun x6158 () Int)
(declare-fun x5610 () Bool)
(declare-fun x4802 () Int)
(declare-fun x2933 () Int)
(declare-fun x3366 () Int)
(declare-fun x5458 () Bool)
(declare-fun x7306 () Bool)
(declare-fun x5880 () Bool)
(declare-fun x6260 () Int)
(declare-fun x167 () Bool)
(declare-fun x7076 () Bool)
(declare-fun x1480 () Bool)
(declare-fun x975 () Int)
(declare-fun x5797 () Bool)
(declare-fun x1637 () Int)
(declare-fun x472 () Bool)
(declare-fun x1156 () Int)
(declare-fun x6814 () Int)
(declare-fun x2506 () Int)
(declare-fun x2746 () Int)
(declare-fun x5577 () Bool)
(declare-fun x5798 () Bool)
(declare-fun x3331 () Bool)
(declare-fun x7210 () Bool)
(declare-fun x5583 () Int)
(declare-fun x7774 () Int)
(declare-fun x3142 () Int)
(declare-fun x3289 () Bool)
(declare-fun x5464 () Int)
(declare-fun x4660 () Bool)
(declare-fun x7143 () x3042)
(declare-fun x44 () Int)
(declare-fun x8713 () Bool)
(declare-fun x1311 () Int)
(declare-fun x4488 () Bool)
(declare-fun x6732 () x3042)
(declare-fun x1973 () Bool)
(declare-fun x4689 () Int)
(declare-fun x3466 () Int)
(declare-fun x5311 () Bool)
(declare-fun x4797 () Bool)
(declare-fun x7445 () Bool)
(declare-fun x8661 () Bool)
(declare-fun x7481 () Int)
(declare-fun x3200 () Bool)
(declare-fun x3274 () Int)
(declare-fun x203 () Bool)
(declare-fun x3119 () Int)
(declare-fun x2227 () Bool)
(declare-fun x4913 () Bool)
(declare-fun x8711 (Int) Int)
(declare-fun x8783 () Int)
(declare-fun x6561 () Bool)
(declare-fun x2022 () Bool)
(declare-fun x3851 () Int)
(declare-fun x5600 () Bool)
(declare-fun x3603 () Int)
(declare-fun x9063 () Int)
(declare-fun x3828 () Int)
(declare-fun x9261 () Int)
(declare-fun x4376 () x3042)
(declare-fun x2231 () Int)
(declare-fun x1598 () Bool)
(declare-fun x5622 () Int)
(declare-fun x9074 () Bool)
(declare-fun x1976 () Int)
(declare-fun x2914 () Bool)
(declare-fun x8590 () Int)
(declare-fun x954 () x3042)
(declare-fun x5243 () Int)
(declare-fun x295 () x3042)
(declare-fun x3242 () Int)
(declare-fun x4317 () Int)
(declare-fun x7518 () x3042)
(declare-fun x4432 () Bool)
(declare-fun x2044 () Bool)
(declare-fun x7464 () Bool)
(declare-fun x5306 () Bool)
(declare-fun x2316 () Int)
(declare-fun x10 () Int)
(declare-fun x4178 () Int)
(declare-fun x1871 (Int) Int)
(declare-fun x1347 () Bool)
(declare-fun x765 () Bool)
(declare-fun x1961 () Bool)
(declare-fun x6545 () Int)
(declare-fun x9089 () Bool)
(declare-fun x6207 () Bool)
(declare-fun x4688 () Int)
(declare-fun x4289 () x3042)
(declare-fun x7389 () Bool)
(declare-fun x2388 () Int)
(declare-fun x4421 () x3042)
(declare-fun x592 () Bool)
(declare-fun x5029 () Bool)
(declare-fun x4401 () Bool)
(declare-fun x8030 () Int)
(declare-fun x5254 () Bool)
(declare-fun x2141 () Bool)
(declare-fun x7110 () Int)
(declare-fun x3057 () Bool)
(declare-fun x6166 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x4711 () Int)
(declare-fun x4152 () Bool)
(declare-fun x8865 () Int)
(declare-fun x7439 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x5544 () Bool)
(declare-fun x8165 () Bool)
(declare-fun x9059 () Bool)
(declare-fun x1613 () Bool)
(declare-fun x1925 () Bool)
(declare-fun x3631 () Bool)
(declare-fun x1174 () x3042)
(declare-fun x2669 () x3042)
(declare-fun x2501 () Bool)
(declare-fun x460 () Int)
(declare-fun x4947 () Bool)
(declare-fun x1787 () Bool)
(declare-fun x6623 () Bool)
(declare-fun x3055 (Int) Int)
(declare-fun x5426 () Bool)
(declare-fun x8544 () Bool)
(declare-fun x9248 () x3042)
(declare-fun x2380 () x3042)
(declare-fun x5274 () Bool)
(declare-fun x2399 () Bool)
(declare-fun x6929 () Bool)
(declare-fun x2589 () x3042)
(declare-fun x2909 () Int)
(declare-fun x7474 () Bool)
(declare-fun x2343 () Int)
(declare-fun x5211 () Bool)
(declare-fun x3540 () Int)
(declare-fun x8428 () Bool)
(declare-fun x5460 () Int)
(declare-fun x5664 () x3042)
(declare-fun x3167 () Int)
(declare-fun x8878 () Int)
(declare-fun x3468 () Bool)
(declare-fun x1081 () x3042)
(declare-fun x8892 () Int)
(declare-fun x4246 () Int)
(declare-fun x6526 () Int)
(declare-fun x1335 () Int)
(declare-fun x624 () Int)
(declare-fun x7404 () Bool)
(declare-fun x9271 () Int)
(declare-fun x8516 () Int)
(declare-fun x4392 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x2249 () Bool)
(declare-fun x8883 () Int)
(declare-fun x6637 () Int)
(declare-fun x7958 () Bool)
(declare-fun x5445 () Bool)
(declare-fun x2324 () Int)
(declare-fun x6217 () Int)
(declare-fun x1260 () Int)
(declare-fun x594 () Bool)
(declare-fun x8191 () x3042)
(declare-fun x7083 () Bool)
(declare-fun x2092 () x3042)
(declare-fun x3399 () Bool)
(declare-fun x7608 () Int)
(declare-fun x258 () Bool)
(declare-fun x6684 () Bool)
(declare-fun x7953 () x3042)
(declare-fun x5011 () Int)
(declare-fun x2038 () Bool)
(declare-fun x3146 () Bool)
(declare-fun x3623 () Int)
(declare-fun x7254 () Bool)
(declare-fun x2259 () Int)
(declare-fun x8231 () Bool)
(declare-fun x8788 () x3042)
(declare-fun x7495 () Bool)
(declare-fun x8339 () Bool)
(declare-fun x5010 () Int)
(declare-fun x8740 () Bool)
(declare-fun x9230 () Int)
(declare-fun x8772 () Int)
(declare-fun x6194 () Bool)
(declare-fun x2336 () Int)
(declare-fun x8552 () Int)
(declare-fun x6919 () Bool)
(declare-fun x513 () Bool)
(declare-fun x8086 () Bool)
(declare-fun x7394 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x8429 () Int)
(declare-fun x176 () Int)
(declare-fun x38 () x3042)
(declare-fun x237 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x8406 () Int)
(declare-fun x3429 () Int)
(declare-fun x8916 () x3042)
(declare-fun x7179 () x3042)
(declare-fun x5023 () Bool)
(declare-fun x5236 () Bool)
(declare-fun x7227 () Int)
(declare-fun x8342 () Bool)
(declare-fun x2330 () Int)
(declare-fun x3933 () Int)
(declare-fun x8085 () Bool)
(declare-fun x1233 () Bool)
(declare-fun x3654 () Bool)
(declare-fun x5219 () Bool)
(declare-fun x3916 () Bool)
(declare-fun x5734 () Int)
(declare-fun x5642 () Bool)
(declare-fun x1745 () Bool)
(declare-fun x1104 () x3042)
(declare-fun x2195 () Bool)
(declare-fun x731 () Bool)
(declare-fun x4479 () Int)
(declare-fun x7765 () Bool)
(declare-fun x238 () Bool)
(declare-fun x6958 () Int)
(declare-fun x7620 () Int)
(declare-fun x2545 () Bool)
(declare-fun x4586 () Int)
(declare-fun x2122 () Bool)
(declare-fun x7218 () Int)
(declare-fun x5896 () Bool)
(declare-fun x5513 () x3042)
(declare-fun x159 () Bool)
(declare-fun x3255 () Int)
(declare-fun x7087 () Bool)
(declare-fun x5991 () Bool)
(declare-fun x5920 () Bool)
(declare-fun x7643 () Bool)
(declare-fun x918 () Bool)
(declare-fun x9132 () Bool)
(declare-fun x5887 () Int)
(declare-fun x2395 () Bool)
(declare-fun x5988 () Bool)
(declare-fun x4610 () Int)
(declare-fun x184 () x3042)
(declare-fun x7245 () Int)
(declare-fun x2037 () Bool)
(declare-fun x7883 () Int)
(declare-fun x3091 (Int) Int)
(declare-fun x6202 () Bool)
(declare-fun x298 () Bool)
(declare-fun x8737 () Int)
(declare-fun x8286 () Int)
(declare-fun x5953 () Int)
(declare-fun x911 () Int)
(declare-fun x611 () Int)
(declare-fun x3559 () Int)
(declare-fun x5698 () Bool)
(declare-fun x4874 () Bool)
(declare-fun x2696 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x6466 () Bool)
(declare-fun x8575 () Bool)
(declare-fun x3682 () Int)
(declare-fun x7252 () Bool)
(declare-fun x6351 () Int)
(declare-fun x4958 () Bool)
(declare-fun x4365 () x3042)
(declare-fun x189 () Int)
(declare-fun x6136 () Int)
(declare-fun x1040 () Bool)
(declare-fun x2944 () Bool)
(declare-fun x4782 () Int)
(declare-fun x5567 () Int)
(declare-fun x8410 () Bool)
(declare-fun x7223 () Bool)
(declare-fun x7378 () Bool)
(declare-fun x2162 () Bool)
(declare-fun x5455 () Bool)
(declare-fun x2671 () Int)
(declare-fun x1144 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x2763 () Bool)
(declare-fun x5673 () Bool)
(declare-fun x724 () Int)
(declare-fun x1669 () Int)
(declare-fun x1483 () Bool)
(declare-fun x5447 () Bool)
(declare-fun x3791 () Bool)
(declare-fun x3932 () Bool)
(declare-fun x2069 () Bool)
(declare-fun x7003 () Bool)
(declare-fun x8266 () Bool)
(declare-fun x3681 () Bool)
(declare-fun x7581 () x3042)
(declare-fun x5324 (x3042) Int)
(declare-fun x2103 () Int)
(declare-fun x2428 () Int)
(declare-fun x9250 () Int)
(declare-fun x3439 () Bool)
(declare-fun x5414 () x3042)
(declare-fun x7582 () Bool)
(declare-fun x9216 () Bool)
(declare-fun x5872 () Int)
(declare-fun x6476 () Bool)
(declare-fun x3594 () Bool)
(declare-fun x3492 () Bool)
(declare-fun x8488 () x3042)
(declare-fun x4769 () Bool)
(declare-fun x4856 () Int)
(declare-fun x538 () Bool)
(declare-fun x8485 () Int)
(declare-fun x4916 () Bool)
(declare-fun x8135 () Int)
(declare-fun x6047 () Int)
(declare-fun x1361 () Bool)
(declare-fun x6685 () Int)
(declare-fun x4611 () Int)
(declare-fun x4712 () Int)
(declare-fun x297 () Bool)
(declare-fun x2 () Bool)
(declare-fun x2349 () Bool)
(declare-fun x9212 () Int)
(declare-fun x2560 () Bool)
(declare-fun x3518 () Bool)
(declare-fun x309 () Int)
(declare-fun x8454 () Bool)
(declare-fun x3402 () Int)
(declare-fun x6990 () Bool)
(declare-fun x2539 () Int)
(declare-fun x5074 () Int)
(declare-fun x1112 () Int)
(declare-fun x5691 () Bool)
(declare-fun x8459 () Bool)
(declare-fun x135 () Int)
(declare-fun x6625 () Int)
(declare-fun x4161 () Bool)
(declare-fun x5351 () Bool)
(declare-fun x3599 () Bool)
(declare-fun x7039 () Int)
(declare-fun x2078 () Bool)
(declare-fun x3397 () Int)
(declare-fun x8591 () Int)
(declare-fun x3899 () Int)
(declare-fun x5766 () Int)
(declare-fun x7061 () Int)
(declare-fun x2448 () x3042)
(declare-fun x5420 () x3042)
(declare-fun x5607 () Bool)
(declare-fun x163 () Bool)
(declare-fun x3948 () Bool)
(declare-fun x5728 () Int)
(declare-fun x8626 () Bool)
(declare-fun x2562 () Int)
(declare-fun x3211 () Int)
(declare-fun x4211 () Int)
(declare-fun x1785 () Bool)
(declare-fun x3901 () Bool)
(declare-fun x8741 () x3042)
(declare-fun x1608 () Bool)
(declare-fun x7407 () Int)
(declare-fun x7151 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x9006 () Bool)
(declare-fun x2547 () Bool)
(declare-fun x9064 () Int)
(declare-fun x5601 () Bool)
(declare-fun x5630 () Bool)
(declare-fun x6574 () Bool)
(declare-fun x6060 () x3042)
(declare-fun x2513 () Int)
(declare-fun x3324 () Bool)
(declare-fun x2474 () Bool)
(declare-fun x8913 () Bool)
(declare-fun x1842 () Int)
(declare-fun x3633 () Bool)
(declare-fun x3490 () Int)
(declare-fun x5773 () x3042)
(declare-fun x8597 () Int)
(declare-fun x3974 () Int)
(declare-fun x9049 () Int)
(declare-fun x5308 () Int)
(declare-fun x4055 () Bool)
(declare-fun x6286 () x3042)
(declare-fun x3201 () Bool)
(declare-fun x9199 () Int)
(declare-fun x7834 () Bool)
(declare-fun x6887 (x3042) Int)
(declare-fun x5076 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x5479 () Bool)
(declare-fun x2827 () Bool)
(declare-fun x7492 () Bool)
(declare-fun x1927 () Bool)
(declare-fun x7589 () Bool)
(declare-fun x6455 () Int)
(declare-fun x3831 () Int)
(declare-fun x980 () Int)
(declare-fun x6925 () Bool)
(declare-fun x2815 () Bool)
(declare-fun x7052 () Bool)
(declare-fun x5085 () Int)
(declare-fun x4060 () Bool)
(declare-fun x4254 () x3042)
(declare-fun x4758 () Bool)
(declare-fun x6673 () Int)
(declare-fun x3148 () Int)
(declare-fun x8589 () Bool)
(declare-fun x5802 () Bool)
(declare-fun x6221 () x3042)
(declare-fun x7341 () Bool)
(declare-fun x255 () Bool)
(declare-fun x7610 () Bool)
(declare-fun x1627 () Int)
(declare-fun x3814 () Bool)
(declare-fun x6243 () Bool)
(declare-fun x9098 () Int)
(declare-fun x3837 () Bool)
(declare-fun x3170 () Bool)
(declare-fun x2731 () Int)
(declare-fun x6754 () Int)
(declare-fun x7588 () x3042)
(declare-fun x3433 () x3042)
(declare-fun x280 () Int)
(declare-fun x4703 () Bool)
(declare-fun x8174 () Bool)
(declare-fun x8177 () Int)
(declare-fun x612 () Bool)
(declare-fun x5597 () Int)
(declare-fun x8099 () Int)
(declare-fun x711 () Bool)
(declare-fun x6482 () Int)
(declare-fun x7596 () Bool)
(declare-fun x4577 () Bool)
(declare-fun x7759 () Int)
(declare-fun x8218 () Bool)
(declare-fun x8378 () Bool)
(declare-fun x3298 () Int)
(declare-fun x6327 () Int)
(declare-fun x7813 () Int)
(declare-fun x1329 () Bool)
(declare-fun x1344 () x3042)
(declare-fun x9026 () Int)
(declare-fun x8323 () Int)
(declare-fun x6826 () x3042)
(declare-fun x7937 () Int)
(declare-fun x19 () Bool)
(declare-fun x7010 () Int)
(declare-fun x3760 () Int)
(declare-fun x8442 () Int)
(declare-fun x8918 () Bool)
(declare-fun x4885 () Bool)
(declare-fun x2689 () Int)
(declare-fun x8043 () Bool)
(declare-fun x1198 () Bool)
(declare-fun x5525 () Bool)
(declare-fun x281 () Bool)
(declare-fun x3762 () Int)
(declare-fun x7418 () Bool)
(declare-fun x317 () Bool)
(declare-fun x8834 () x3042)
(declare-fun x7727 () Bool)
(declare-fun x4691 () Int)
(declare-fun x4206 () x3042)
(declare-fun x2783 () Bool)
(declare-fun x3655 () Int)
(declare-fun x160 () Int)
(declare-fun x41 () Int)
(declare-fun x7674 () Bool)
(declare-fun x7982 () Int)
(declare-fun x4854 () Bool)
(declare-fun x616 () Int)
(declare-fun x3120 () Int)
(declare-fun x6515 () Int)
(declare-fun x7244 () x3042)
(declare-fun x4697 () Bool)
(declare-fun x5248 () Bool)
(declare-fun x8652 () Int)
(declare-fun x9142 () Int)
(declare-fun x4486 () Int)
(declare-fun x9071 () Int)
(declare-fun x3093 () Bool)
(declare-fun x5894 () Bool)
(declare-fun x8138 () Bool)
(declare-fun x1039 () x3042)
(declare-fun x2366 () Bool)
(declare-fun x5982 () Bool)
(declare-fun x55 () Bool)
(declare-fun x8819 () Int)
(declare-fun x4702 () Bool)
(declare-fun x4772 () Int)
(declare-fun x4154 () x3042)
(declare-fun x1630 () Int)
(declare-fun x8721 () Bool)
(declare-fun x5146 () Bool)
(declare-fun x2544 () Bool)
(declare-fun x8073 () Int)
(declare-fun x8521 () Bool)
(declare-fun x4466 () Int)
(declare-fun x526 () Int)
(declare-fun x4057 () Bool)
(declare-fun x3872 () Bool)
(declare-fun x4367 () Bool)
(declare-fun x6270 () Bool)
(declare-fun x6818 () Bool)
(declare-fun x6895 () Int)
(declare-fun x6412 () Int)
(declare-fun x8747 () Bool)
(declare-fun x5082 () Int)
(declare-fun x4839 (Int) Int)
(declare-fun x5162 () Bool)
(declare-fun x834 () Bool)
(declare-fun x8886 () Bool)
(declare-fun x5022 () x3042)
(declare-fun x367 () Bool)
(declare-fun x8284 () Bool)
(declare-fun x8953 () Int)
(declare-fun x3269 () Int)
(declare-fun x6693 () Int)
(declare-fun x3000 () Int)
(declare-fun x2493 () Int)
(declare-fun x5759 () Int)
(declare-fun x584 () Bool)
(declare-fun x6931 () x3042)
(declare-fun x8452 () Bool)
(declare-fun x2258 () Bool)
(declare-fun x76 () Int)
(declare-fun x5474 () x3042)
(declare-fun x8337 (Int) Int)
(declare-fun x4387 () Int)
(declare-fun x3914 () x3042)
(declare-fun x1304 () Bool)
(declare-fun x687 () Bool)
(declare-fun x6065 () x3042)
(declare-fun x8649 () Bool)
(declare-fun x7264 () Bool)
(declare-fun x2159 () Int)
(declare-fun x3687 () Bool)
(declare-fun x2593 () Int)
(declare-fun x1584 () Int)
(declare-fun x598 () Int)
(declare-fun x3443 () Int)
(declare-fun x7591 () Bool)
(declare-fun x3568 () Bool)
(declare-fun x4446 () Bool)
(declare-fun x7870 () x3042)
(declare-fun x5516 () Bool)
(declare-fun x8278 () Int)
(declare-fun x6255 () Int)
(declare-fun x6973 () Bool)
(declare-fun x512 () Int)
(declare-fun x5265 () Bool)
(declare-fun x8075 () Bool)
(declare-fun x5528 () Bool)
(declare-fun x8647 () Bool)
(declare-fun x8168 () Bool)
(declare-fun x80 () Bool)
(declare-fun x1534 () x3042)
(declare-fun x4069 () Bool)
(declare-fun x2743 () Bool)
(declare-fun x8345 () Bool)
(declare-fun x3398 () Int)
(declare-fun x5628 () Bool)
(declare-fun x3990 () Bool)
(declare-fun x2137 () Int)
(declare-fun x6724 () Int)
(declare-fun x2510 () Int)
(declare-fun x569 () Int)
(declare-fun x3134 () Bool)
(declare-fun x8689 (x3042) Int)
(declare-fun x7521 () x3042)
(declare-fun x1902 () Bool)
(declare-fun x35 () Bool)
(declare-fun x3363 () Bool)
(declare-fun x4131 () Int)
(declare-fun x7613 () x3042)
(declare-fun x8227 () x3042)
(declare-fun x9242 () Int)
(declare-fun x9108 () Bool)
(declare-fun x4791 () Bool)
(declare-fun x8668 () Bool)
(declare-fun x1894 () Bool)
(declare-fun x4153 (x3042) Int)
(declare-fun x8775 () Bool)
(declare-fun x6962 () Bool)
(declare-fun x5301 () Bool)
(declare-fun x4858 () Int)
(declare-fun x4437 () Bool)
(declare-fun x9151 () Int)
(declare-fun x6622 () Bool)
(declare-fun x4029 () Bool)
(declare-fun x7027 () Int)
(declare-fun x433 () Bool)
(declare-fun x8301 () Int)
(declare-fun x7536 () x3042)
(declare-fun x3075 () Int)
(declare-fun x6908 () Int)
(declare-fun x8810 () Bool)
(declare-fun x4774 () Bool)
(declare-fun x406 () Bool)
(declare-fun x7775 () Bool)
(declare-fun x1728 () Bool)
(declare-fun x416 () x3042)
(declare-fun x8146 () Bool)
(declare-fun x5886 () Bool)
(declare-fun x3515 () Bool)
(declare-fun x9036 () Bool)
(declare-fun x2204 () Int)
(declare-fun x6692 () Bool)
(declare-fun x3679 () Bool)
(declare-fun x8978 () Bool)
(declare-fun x6664 () Int)
(declare-fun x6066 () Int)
(declare-fun x4296 () Bool)
(declare-fun x7660 () Bool)
(declare-fun x4418 () Int)
(declare-fun x5287 () Int)
(declare-fun x4050 () Int)
(declare-fun x4469 () Bool)
(declare-fun x1502 () Int)
(declare-fun x5392 () Bool)
(declare-fun x3701 () Int)
(declare-fun x2029 () Bool)
(declare-fun x767 () Bool)
(declare-fun x6228 () Int)
(declare-fun x2129 () Int)
(declare-fun x5502 () Bool)
(declare-fun x6339 () Bool)
(declare-fun x422 () Int)
(declare-fun x3715 () Bool)
(declare-fun x6998 () x3042)
(declare-fun x9070 () Bool)
(declare-fun x5223 () Int)
(declare-fun x3545 () Bool)
(declare-fun x713 () Int)
(declare-fun x8743 () Bool)
(declare-fun x883 () Bool)
(declare-fun x675 () Int)
(declare-fun x8439 () Bool)
(declare-fun x3374 () Int)
(declare-fun x1173 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x4026 () Int)
(declare-fun x5122 () Bool)
(declare-fun x4726 () Int)
(declare-fun x4961 () Int)
(declare-fun x8675 () Int)
(declare-fun x6581 () Bool)
(declare-fun x4455 () Int)
(declare-fun x2118 () Bool)
(declare-fun x6791 () Int)
(declare-fun x6254 () Bool)
(declare-fun x8611 () Bool)
(declare-fun x7494 () Bool)
(declare-fun x8965 () Bool)
(declare-fun x6077 () Bool)
(declare-fun x1501 () Bool)
(declare-fun x5592 () Bool)
(declare-fun x2532 () Bool)
(declare-fun x796 () Bool)
(declare-fun x567 () Int)
(declare-fun x934 () Bool)
(declare-fun x9192 () Int)
(declare-fun x705 () Int)
(declare-fun x8358 () Bool)
(declare-fun x541 () Bool)
(declare-fun x7483 () Int)
(declare-fun x1767 () Int)
(declare-fun x3765 () Bool)
(declare-fun x1619 () Bool)
(declare-fun x8938 () Int)
(declare-fun x6629 () Bool)
(declare-fun x856 () Int)
(declare-fun x6843 () Int)
(declare-fun x8735 () Int)
(declare-fun x6955 () Bool)
(declare-fun x5332 () Bool)
(declare-fun x7911 () Bool)
(declare-fun x2355 () Int)
(declare-fun x7809 () Bool)
(declare-fun x7885 () Bool)
(declare-fun x6240 () Bool)
(declare-fun x4099 () Bool)
(declare-fun x7498 () Int)
(declare-fun x6834 () Int)
(declare-fun x2214 () Bool)
(declare-fun x801 () Bool)
(declare-fun x8004 () Int)
(declare-fun x6779 () x3042)
(declare-fun x6579 () Bool)
(declare-fun x6938 () Int)
(declare-fun x8120 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x1792 () Bool)
(declare-fun x3074 () x3042)
(declare-fun x8527 () Bool)
(declare-fun x6239 () Bool)
(declare-fun x5030 () Int)
(declare-fun x1937 () Bool)
(declare-fun x4447 () Bool)
(declare-fun x6610 () Int)
(declare-fun x4696 () Bool)
(declare-fun x6697 () x3042)
(declare-fun x249 () Int)
(declare-fun x4328 () Int)
(declare-fun x9124 () Bool)
(declare-fun x5457 () Bool)
(declare-fun x570 () Bool)
(declare-fun x423 () Bool)
(declare-fun x8032 () Int)
(declare-fun x6753 () Bool)
(declare-fun x9129 () Bool)
(declare-fun x1046 () Int)
(declare-fun x4757 () Bool)
(declare-fun x487 () Bool)
(declare-fun x2984 () Bool)
(declare-fun x7195 () Bool)
(declare-fun x800 () Int)
(declare-fun x3739 () Int)
(declare-fun x6225 () Bool)
(declare-fun x5015 () Int)
(declare-fun x2002 () Bool)
(declare-fun x7611 () Int)
(declare-fun x3502 () Bool)
(declare-fun x8256 () Int)
(declare-fun x5109 () Int)
(declare-fun x2269 () Bool)
(declare-fun x3784 () x3042)
(declare-fun x7730 () Bool)
(declare-fun x428 () Bool)
(declare-fun x8889 () Int)
(declare-fun x559 () Int)
(declare-fun x1507 () Bool)
(declare-fun x2284 () Int)
(declare-fun x3943 () Int)
(declare-fun x1974 () Bool)
(declare-fun x6645 () Int)
(declare-fun x180 () Int)
(declare-fun x7221 () Int)
(declare-fun x438 () Int)
(declare-fun x2772 () Int)
(declare-fun x4357 () Bool)
(declare-fun x4291 () Bool)
(declare-fun x350 () Int)
(declare-fun x1363 () Bool)
(declare-fun x4268 () Int)
(declare-fun x5305 () Bool)
(declare-fun x6900 () Bool)
(declare-fun x8448 () Bool)
(declare-fun x8239 () Int)
(declare-fun x9205 () Bool)
(declare-fun x231 () Int)
(declare-fun x6352 () x3042)
(declare-fun x536 () Bool)
(declare-fun x3378 () x3042)
(declare-fun x7771 () x3042)
(declare-fun x4227 () Bool)
(declare-fun x5737 () Bool)
(declare-fun x2609 () Bool)
(declare-fun x5218 () Bool)
(declare-fun x1706 () Int)
(declare-fun x1819 () Bool)
(declare-fun x4213 () Int)
(declare-fun x942 () Int)
(declare-fun x6677 () x3042)
(declare-fun x5846 () Bool)
(declare-fun x8251 () x3042)
(declare-fun x3471 () Bool)
(declare-fun x6173 () Int)
(declare-fun x3013 () Int)
(declare-fun x408 () Bool)
(declare-fun x5542 () Bool)
(declare-fun x6844 () Bool)
(declare-fun x49 () Bool)
(declare-fun x4038 () Int)
(declare-fun x2546 () Bool)
(declare-fun x3627 () Bool)
(declare-fun x3903 () Bool)
(declare-fun x7629 () Int)
(declare-fun x8372 () Bool)
(declare-fun x8996 () Bool)
(declare-fun x3630 () Bool)
(declare-fun x6616 () Int)
(declare-fun x7125 () Bool)
(declare-fun x6907 () Bool)
(declare-fun x4837 () Int)
(declare-fun x2680 () Bool)
(declare-fun x6114 () Bool)
(declare-fun x7324 () Int)
(declare-fun x8588 () Int)
(declare-fun x8440 () Bool)
(declare-fun x291 () Int)
(declare-fun x780 () Bool)
(declare-fun x6899 () Bool)
(declare-fun x3143 () Int)
(declare-fun x4544 () Bool)
(declare-fun x7499 (x3042) Int)
(declare-fun x4729 () Int)
(declare-fun x2635 () Int)
(declare-fun x6252 () Bool)
(declare-fun x8680 () Bool)
(declare-fun x5786 () Int)
(declare-fun x4128 () Bool)
(declare-fun x6391 () Int)
(declare-fun x6277 () Bool)
(declare-fun x863 () Int)
(declare-fun x8882 () x3042)
(declare-fun x1552 () Int)
(declare-fun x3912 () Int)
(declare-fun x7064 () Int)
(declare-fun x1631 () Bool)
(declare-fun x2740 () Bool)
(declare-fun x6489 () Bool)
(declare-fun x1846 () Bool)
(declare-fun x3520 () Bool)
(declare-fun x7597 () Bool)
(declare-fun x288 () Int)
(declare-fun x1285 () Bool)
(declare-fun x6936 () Bool)
(declare-fun x157 () Int)
(declare-fun x4106 () x3042)
(declare-fun x7819 () Bool)
(declare-fun x7360 () Bool)
(declare-fun x751 () Bool)
(declare-fun x8822 () x3042)
(declare-fun x8951 (Int) Int)
(declare-fun x866 () Int)
(declare-fun x8411 () x3042)
(declare-fun x3571 () x3042)
(declare-fun x915 () Int)
(declare-fun x8302 () Bool)
(declare-fun x7243 () Bool)
(declare-fun x1843 () Bool)
(declare-fun x1368 () Int)
(declare-fun x8815 () Bool)
(declare-fun x343 () Int)
(declare-fun x5081 () x3042)
(declare-fun x6048 () Int)
(declare-fun x8782 () Bool)
(declare-fun x7405 () Bool)
(declare-fun x9190 () Int)
(declare-fun x5784 () Bool)
(declare-fun x2882 () Bool)
(declare-fun x4926 () Int)
(declare-fun x3041 () Bool)
(declare-fun x8334 () Int)
(declare-fun x8350 () x3042)
(declare-fun x2470 () Bool)
(declare-fun x6871 () x3042)
(declare-fun x7278 () x3042)
(declare-fun x8780 () Bool)
(declare-fun x6409 () Bool)
(declare-fun x6789 () Bool)
(declare-fun x4684 () Int)
(declare-fun x6494 () x3042)
(declare-fun x3915 () Int)
(declare-fun x1424 () Bool)
(declare-fun x2193 () Int)
(declare-fun x4569 () Bool)
(declare-fun x3703 () Bool)
(declare-fun x5671 () Int)
(declare-fun x4403 () Bool)
(declare-fun x3857 () x3042)
(declare-fun x4407 () Bool)
(declare-fun x1135 () x3042)
(declare-fun x1985 () Bool)
(declare-fun x8080 () Bool)
(declare-fun x8321 () Bool)
(declare-fun x5334 () Int)
(declare-fun x6471 () Int)
(declare-fun x6281 () Bool)
(declare-fun x2188 () Bool)
(declare-fun x3561 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x5782 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x6251 () Int)
(declare-fun x3574 () Bool)
(declare-fun x1066 () Bool)
(declare-fun x5695 () Int)
(declare-fun x1482 () Int)
(declare-fun x710 () Int)
(declare-fun x6765 () Bool)
(declare-fun x2634 () Bool)
(declare-fun x7607 () Bool)
(declare-fun x5687 () Int)
(declare-fun x2427 () Bool)
(declare-fun x2704 () Bool)
(declare-fun x7873 () Bool)
(declare-fun x7453 () x3042)
(declare-fun x2206 () Int)
(declare-fun x5701 () Bool)
(declare-fun x7150 () Int)
(declare-fun x1303 () Int)
(declare-fun x3261 () Int)
(declare-fun x5967 () Int)
(declare-fun x6295 () Bool)
(declare-fun x5524 () Bool)
(declare-fun x1133 () Int)
(declare-fun x2113 () Bool)
(declare-fun x198 () Int)
(declare-fun x909 () Int)
(declare-fun x8622 () Bool)
(declare-fun x2362 () Bool)
(declare-fun x7275 () Bool)
(declare-fun x5638 () Bool)
(declare-fun x2691 () Int)
(declare-fun x564 () Bool)
(declare-fun x3224 () Bool)
(declare-fun x1847 () Bool)
(declare-fun x8155 () Bool)
(declare-fun x4745 () Bool)
(declare-fun x1069 () Int)
(declare-fun x685 () Bool)
(declare-fun x1273 () Bool)
(declare-fun x3350 () Bool)
(declare-fun x3537 () Bool)
(declare-fun x4485 () Int)
(declare-fun x1055 () Int)
(declare-fun x4074 () Bool)
(declare-fun x633 () Bool)
(declare-fun x8180 () Bool)
(declare-fun x142 () Int)
(declare-fun x2865 () Bool)
(declare-fun x2685 () x3042)
(declare-fun x9085 () Int)
(declare-fun x1491 () Bool)
(declare-fun x9182 () Bool)
(declare-fun x7706 () Bool)
(declare-fun x1488 () Int)
(declare-fun x8400 () Int)
(declare-fun x1223 () Bool)
(declare-fun x7844 () Int)
(declare-fun x7557 () Bool)
(declare-fun x8396 () Int)
(declare-fun x8464 () Int)
(declare-fun x3929 () Bool)
(declare-fun x5438 () Bool)
(declare-fun x3195 () Bool)
(declare-fun x549 () Bool)
(declare-fun x9252 () Int)
(declare-fun x7284 () Bool)
(declare-fun x2008 () Int)
(declare-fun x7114 () Int)
(declare-fun x190 () Bool)
(declare-fun x8368 () Bool)
(declare-fun x6190 () Int)
(declare-fun x379 () Int)
(declare-fun x5596 () Int)
(declare-fun x6501 () Int)
(declare-fun x8201 () Int)
(declare-fun x1640 () Int)
(declare-fun x5086 () Bool)
(declare-fun x6037 () Bool)
(declare-fun x8207 () Int)
(declare-fun x5879 () Bool)
(declare-fun x529 () Bool)
(declare-fun x889 () Bool)
(declare-fun x3829 () Bool)
(declare-fun x4119 () Int)
(declare-fun x3208 () Int)
(declare-fun x5357 () Int)
(declare-fun x3343 () Bool)
(declare-fun x2851 () Int)
(declare-fun x3400 () Bool)
(declare-fun x8432 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x164 () Int)
(declare-fun x5659 () Bool)
(declare-fun x5904 () Bool)
(declare-fun x4 () Bool)
(declare-fun x5034 () x3042)
(declare-fun x6074 () Bool)
(declare-fun x8072 () Int)
(declare-fun x7942 () x3042)
(declare-fun x4925 () Bool)
(declare-fun x5021 () Int)
(declare-fun x2509 () Bool)
(declare-fun x3553 () Int)
(declare-fun x7565 () Bool)
(declare-fun x4664 () Bool)
(declare-fun x6541 () Bool)
(declare-fun x7429 () Int)
(declare-fun x7672 () Bool)
(declare-fun x676 () Bool)
(declare-fun x1950 () Int)
(declare-fun x6055 () Bool)
(declare-fun x3488 () Int)
(declare-fun x66 () Int)
(declare-fun x5505 () Bool)
(declare-fun x3086 () Int)
(declare-fun x4721 () Int)
(declare-fun x6952 () Bool)
(declare-fun x3182 () Int)
(declare-fun x1546 () Int)
(declare-fun x1166 () Bool)
(declare-fun x6402 () Int)
(declare-fun x4863 () Int)
(declare-fun x3826 () x3042)
(declare-fun x4649 () Int)
(declare-fun x6325 (Int) Int)
(declare-fun x7241 () Int)
(declare-fun x5749 () Bool)
(declare-fun x5067 () Bool)
(declare-fun x370 () Int)
(declare-fun x7764 () Bool)
(declare-fun x8067 () Int)
(declare-fun x7621 () Bool)
(declare-fun x5121 () x3042)
(declare-fun x4274 () x3042)
(declare-fun x3047 () Bool)
(declare-fun x419 () Bool)
(declare-fun x7961 (Int) Int)
(declare-fun x5745 () x3042)
(declare-fun x7781 () Bool)
(declare-fun x4252 () Int)
(declare-fun x5069 () Bool)
(declare-fun x7088 () Int)
(declare-fun x4330 () Int)
(declare-fun x6371 () Int)
(declare-fun x2018 () Bool)
(declare-fun x7843 () Int)
(declare-fun x1380 () Bool)
(declare-fun x8447 () Int)
(declare-fun x5145 () Bool)
(declare-fun x962 () Bool)
(declare-fun x5517 (Int) Int)
(declare-fun x8639 () Int)
(declare-fun x4190 () Bool)
(declare-fun x484 () Bool)
(declare-fun x2261 () Int)
(declare-fun x9009 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x925 () Bool)
(declare-fun x6198 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x466 () Int)
(declare-fun x1384 () Int)
(declare-fun x8823 () x3042)
(declare-fun x7098 () Int)
(declare-fun x6435 () Int)
(declare-fun x6937 () Bool)
(declare-fun x4140 () Bool)
(declare-fun x8551 () Bool)
(declare-fun x8258 () Bool)
(declare-fun x7994 () Bool)
(declare-fun x6695 () Bool)
(declare-fun x8657 () Bool)
(declare-fun x5255 () Bool)
(declare-fun x7503 () x3042)
(declare-fun x5165 () Bool)
(declare-fun x4583 () Bool)
(declare-fun x851 () Bool)
(declare-fun x348 () Int)
(declare-fun x5632 () Int)
(declare-fun x8655 () Bool)
(declare-fun x7382 () Int)
(declare-fun x6544 () Bool)
(declare-fun x6880 () Int)
(declare-fun x5876 () Bool)
(declare-fun x3372 () Int)
(declare-fun x4742 () Int)
(declare-fun x7921 () Int)
(declare-fun x8648 () x3042)
(declare-fun x6910 () Bool)
(declare-fun x5240 () Int)
(declare-fun x48 () Int)
(declare-fun x7814 () Int)
(declare-fun x2416 () Int)
(declare-fun x6614 () Int)
(declare-fun x4013 () Int)
(declare-fun x6620 () x3042)
(declare-fun x2064 () Int)
(declare-fun x1349 () Int)
(declare-fun x3634 () Bool)
(declare-fun x6792 () Bool)
(declare-fun x1766 () Int)
(declare-fun x563 () Bool)
(declare-fun x3243 () Bool)
(declare-fun x3736 () Int)
(declare-fun x1655 () Bool)
(declare-fun x1958 () Bool)
(declare-fun x8190 () Int)
(declare-fun x1274 () Int)
(declare-fun x6420 () Bool)
(declare-fun x3033 () Bool)
(declare-fun x1880 () Int)
(declare-fun x4814 () Bool)
(declare-fun x4184 () Int)
(declare-fun x7949 () Bool)
(declare-fun x2171 () x3042)
(declare-fun x7502 () x3042)
(declare-fun x4717 () Bool)
(declare-fun x8957 () x3042)
(declare-fun x6098 () Bool)
(declare-fun x3391 () Bool)
(declare-fun x7796 () x3042)
(declare-fun x3813 () Bool)
(declare-fun x575 () Bool)
(declare-fun x2430 () Int)
(declare-fun x7294 () Bool)
(declare-fun x2711 () Bool)
(declare-fun x6691 () Int)
(declare-fun x1541 () Int)
(declare-fun x178 () Int)
(declare-fun x4518 () Int)
(declare-fun x6071 () Int)
(declare-fun x3313 () Bool)
(declare-fun x2706 () Int)
(declare-fun x1820 () Bool)
(declare-fun x4257 () x3042)
(declare-fun x678 () Int)
(declare-fun x7592 () x3042)
(declare-fun x1703 () Int)
(declare-fun x1512 () Int)
(declare-fun x1567 () Bool)
(declare-fun x5001 () Bool)
(declare-fun x4785 () Int)
(declare-fun x4039 () Bool)
(declare-fun x4535 () Bool)
(declare-fun x7923 () Bool)
(declare-fun x5045 () Int)
(declare-fun x4335 () Bool)
(declare-fun x7249 () Bool)
(declare-fun x7235 () Int)
(declare-fun x5204 () Bool)
(declare-fun x2662 () Bool)
(declare-fun x5155 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x3277 () Int)
(declare-fun x5296 () Int)
(declare-fun x3645 () Bool)
(declare-fun x8908 () x3042)
(declare-fun x2323 () Int)
(declare-fun x5973 () x3042)
(declare-fun x6247 () Bool)
(declare-fun x7500 () Bool)
(declare-fun x8465 () Int)
(declare-fun x8690 () Int)
(declare-fun x634 () Int)
(declare-fun x6535 () x3042)
(declare-fun x5322 () Int)
(declare-fun x5537 () Bool)
(declare-fun x1632 () Bool)
(declare-fun x7545 () Bool)
(declare-fun x3781 () Int)
(declare-fun x3680 () x3042)
(declare-fun x4659 () Int)
(declare-fun x1338 () Int)
(declare-fun x3135 () Int)
(declare-fun x3345 () Int)
(declare-fun x5769 () Int)
(declare-fun x1003 () x3042)
(declare-fun x8149 () Bool)
(declare-fun x2057 () x3042)
(declare-fun x516 () x3042)
(declare-fun x802 () Bool)
(declare-fun x3210 () Bool)
(declare-fun x510 () Int)
(declare-fun x2653 () Bool)
(declare-fun x6893 () Int)
(declare-fun x4570 () Int)
(declare-fun x247 () Int)
(declare-fun x6850 () Int)
(declare-fun x696 () Bool)
(declare-fun x1452 () x3042)
(declare-fun x8929 () Bool)
(declare-fun x7373 () Int)
(declare-fun x3003 () Bool)
(declare-fun x5331 () Int)
(declare-fun x3877 () Bool)
(declare-fun x5354 () Int)
(declare-fun x4476 () Bool)
(declare-fun x3418 () Bool)
(declare-fun x5791 () Int)
(declare-fun x6757 () Bool)
(declare-fun x6723 () Int)
(declare-fun x3426 () x3042)
(declare-fun x4453 () Int)
(declare-fun x9048 () Int)
(declare-fun x5304 () Bool)
(declare-fun x2011 () Int)
(declare-fun x4362 () Bool)
(declare-fun x7426 () x3042)
(declare-fun x3632 () Int)
(declare-fun x6174 () Bool)
(declare-fun x7203 () Int)
(declare-fun x8020 () Bool)
(declare-fun x5451 () Bool)
(declare-fun x221 () Int)
(declare-fun x7682 () Int)
(declare-fun x8557 () Bool)
(declare-fun x6248 () Int)
(declare-fun x8161 () x3042)
(declare-fun x9145 () Bool)
(declare-fun x6008 () Bool)
(declare-fun x6141 () x3042)
(declare-fun x2400 () x3042)
(declare-fun x1663 () Bool)
(declare-fun x5810 () Bool)
(declare-fun x4853 () x3042)
(declare-fun x3312 () Int)
(declare-fun x32 () Bool)
(declare-fun x5947 () Int)
(declare-fun x7777 () Bool)
(declare-fun x3778 () Int)
(declare-fun x4762 () Bool)
(declare-fun x1030 () Int)
(declare-fun x6105 () Int)
(declare-fun x790 () Bool)
(declare-fun x7041 (Int) Int)
(declare-fun x2919 () Int)
(declare-fun x5491 () Bool)
(declare-fun x779 () Bool)
(declare-fun x7874 () Bool)
(declare-fun x2672 () Int)
(declare-fun x5971 () Bool)
(declare-fun x3982 () Bool)
(declare-fun x8870 () Bool)
(declare-fun x7024 () Bool)
(declare-fun x610 () Int)
(declare-fun x5733 () Bool)
(declare-fun x7709 () Bool)
(declare-fun x22 () Bool)
(declare-fun x3570 () Bool)
(declare-fun x8729 () Int)
(declare-fun x8678 () Int)
(declare-fun x6597 () Bool)
(declare-fun x8577 () Bool)
(declare-fun x5401 () Int)
(declare-fun x363 () Bool)
(declare-fun x2780 () Int)
(declare-fun x2954 () x3042)
(declare-fun x8836 () Bool)
(declare-fun x3128 () Bool)
(declare-fun x2536 () Int)
(declare-fun x8202 () Bool)
(declare-fun x4143 () Bool)
(declare-fun x7546 () Bool)
(declare-fun x8915 () Int)
(declare-fun x6924 () Bool)
(declare-fun x8560 (x3042) Int)
(declare-fun x1076 () Bool)
(declare-fun x6171 () Int)
(declare-fun x1325 () Int)
(declare-fun x3774 () Bool)
(declare-fun x3164 () Int)
(declare-fun x8653 () Bool)
(declare-fun x7068 () Int)
(declare-fun x1841 () Int)
(declare-fun x8742 () Bool)
(declare-fun x5665 () Bool)
(declare-fun x6334 () Int)
(declare-fun x6950 () Bool)
(declare-fun x7662 () Bool)
(declare-fun x2389 () Int)
(declare-fun x4596 () Int)
(declare-fun x2381 () Bool)
(declare-fun x2673 () Bool)
(declare-fun x5666 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x7347 () x3042)
(declare-fun x3340 () Bool)
(declare-fun x628 () Int)
(declare-fun x977 () x3042)
(declare-fun x8595 () Bool)
(declare-fun x8977 () Bool)
(declare-fun x2220 () Int)
(declare-fun x5276 () Bool)
(declare-fun x4499 () Bool)
(declare-fun x8069 () Int)
(declare-fun x8151 () Int)
(declare-fun x3800 () Int)
(declare-fun x7585 () Bool)
(declare-fun x8319 (Int) Int)
(declare-fun x7980 (x3042) Int)
(declare-fun x987 () Bool)
(declare-fun x9025 () Bool)
(declare-fun x1235 () x3042)
(declare-fun x1666 () Int)
(declare-fun x4563 () Int)
(declare-fun x7340 () Bool)
(declare-fun x4222 () Bool)
(declare-fun x728 () Bool)
(declare-fun x6592 () Bool)
(declare-fun x1064 () Int)
(declare-fun x7281 () Bool)
(declare-fun x3417 () Bool)
(declare-fun x8402 () Int)
(declare-fun x6333 () Int)
(declare-fun x5564 () x3042)
(declare-fun x2288 () Bool)
(declare-fun x9061 () Bool)
(declare-fun x5560 () Bool)
(declare-fun x1056 () Bool)
(declare-fun x125 () Bool)
(declare-fun x8304 () Int)
(declare-fun x7184 () Int)
(declare-fun x9139 () Bool)
(declare-fun x2226 () x3042)
(declare-fun x7411 () Bool)
(declare-fun x5668 () Bool)
(declare-fun x3517 () Int)
(declare-fun x5520 () Int)
(declare-fun x3453 () Bool)
(declare-fun x5117 () x3042)
(declare-fun x1397 () Bool)
(declare-fun x3026 () Int)
(declare-fun x7056 () Bool)
(declare-fun x7871 () Bool)
(declare-fun x209 () Bool)
(declare-fun x2999 () Bool)
(declare-fun x7257 () Bool)
(declare-fun x5269 () Bool)
(declare-fun x3516 () Bool)
(declare-fun x7298 () Bool)
(declare-fun x3141 () Bool)
(declare-fun x5233 () Int)
(declare-fun x631 () x3042)
(declare-fun x781 () Bool)
(declare-fun x7721 () Bool)
(declare-fun x8193 () Bool)
(declare-fun x5263 () Bool)
(declare-fun x2104 () Bool)
(declare-fun x4975 () Bool)
(declare-fun x217 () Int)
(declare-fun x2825 () Int)
(declare-fun x6781 (x3042) Int)
(declare-fun x6496 () Int)
(declare-fun x4448 () Bool)
(declare-fun x9018 () Int)
(declare-fun x6875 () Int)
(declare-fun x7081 () Bool)
(declare-fun x314 () Int)
(declare-fun x7457 () Int)
(declare-fun x2908 (x3042) Int)
(declare-fun x6921 () x3042)
(declare-fun x7888 () Bool)
(declare-fun x669 () x3042)
(declare-fun x7236 () Bool)
(declare-fun x7433 () Int)
(declare-fun x8018 () Bool)
(declare-fun x4618 () Bool)
(declare-fun x5005 () x3042)
(declare-fun x994 () Bool)
(declare-fun x2467 () Int)
(declare-fun x7470 () Int)
(declare-fun x2749 () Bool)
(declare-fun x5748 () Bool)
(declare-fun x4340 () Int)
(declare-fun x6099 () x3042)
(declare-fun x5555 () Int)
(declare-fun x7889 () x3042)
(declare-fun x364 () Bool)
(declare-fun x8371 () Bool)
(declare-fun x3291 () Bool)
(declare-fun x819 () Bool)
(declare-fun x2157 () Bool)
(declare-fun x8480 () Bool)
(define-fun x3789 ((x3042 x3042) (x5079 Int)) x3042 (ite ((_ is x707) x3042) (x707 (x8654 x3042) (+ x5079 (x2828 x3042))) (ite ((_ is x7158) x3042) (x7158 (x6290 x3042) (x6876 x3042) (+ (x1150 x3042) x5079)) (x5361 (+ (x1704 x3042) x5079)))))
(define-fun x2125 ((x5407 Int)) Int (ite (and (< x5407 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x5407)) x5407 (- x5407 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x7124 ((x5407 Int)) Int (ite (and (< x5407 0) (>= x5407 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5407) x5407))
(define-fun x5353 ((x5407 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5407) (<= 0 x5407)) x5407 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5407) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x5407)) (- x5407 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x5407) (< x5407 0)) (+ x5407 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4077 x5407 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x391 ((x4924 Int)) Bool (and (< x4924 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x4924 0)))
(define-fun x9189 ((x4924 Int)) Bool (and (= (x2237 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4924) x4924) (= (x2237 x4924 115792089237316195423570985008687907853269984665640564039457584007913129639935) x4924)))
(define-fun x2211 ((x4924 Int)) Bool (and (= (x2237 0 x4924) 0) (= 0 (x2237 x4924 0))))
(define-fun x7019 ((x4924 Int)) Bool (= (x2237 x4924 x4924) x4924))
(define-fun x8637 ((x4924 Int)) Bool (and (x9189 x4924) (x7019 x4924) (x2211 x4924)))
(define-fun x2620 ((x4924 Int) (x9125 Int)) Bool (= (x2237 x9125 x4924) (x2237 x4924 x9125)))
(define-fun x5107 ((x4924 Int) (x9125 Int)) Bool (and (<= 0 (x2237 x4924 x9125)) (=> (>= x4924 0) (>= x4924 (x2237 x4924 x9125))) (=> (<= 0 x9125) (>= x9125 (x2237 x4924 x9125)))))
(define-fun x1052 ((x4924 Int) (x9125 Int)) Bool (and (x2620 x4924 x9125) (x5107 x4924 x9125)))
(define-fun x3527 ((x4924 Int)) Bool (= (x2237 x4924 1461501637330902918203684832716283019655932542975) (x4077 x4924 1461501637330902918203684832716283019655932542976)))
(define-fun x3618 ((x4924 Int)) Bool (and (x1052 x4924 1461501637330902918203684832716283019655932542975) (x3527 x4924)))
(define-fun x3303 ((x4924 Int) (x9125 Int)) Bool (and (>= (x4077 x4924 x9125) 0) (> x9125 (x4077 x4924 x9125))))
(define-fun x5837 ((x4924 Int) (x9125 Int)) Bool (=> (and (>= x4924 0) (< 0 x9125)) (= (< x4924 x9125) (= (x4077 x4924 x9125) x4924))))
(define-fun x4253 ((x4924 Int) (x9125 Int)) Bool (=> (and (and (<= x9125 x4924) (> (+ x9125 x9125) x4924)) (< 0 x9125)) (= (- x4924 x9125) (x4077 x4924 x9125))))
(define-fun x8 ((x4924 Int)) Bool (= (x4077 0 x4924) 0))
(define-fun x981 ((x4924 Int)) Bool (= (x4077 x4924 1) 0))
(define-fun x1911 ((x4924 Int)) Bool (= 0 (x4077 x4924 x4924)))
(define-fun x1710 ((x4924 Int)) Bool (and (x981 x4924) (x8 x4924) (x1911 x4924)))
(define-fun x3357 ((x4924 Int)) Bool (= (x4077 x4924 26959946667150639794667015087019630673637144422540572481103610249216) (x2237 x4924 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1635 ((x4924 Int)) Bool (and (x3357 x4924) (x1052 x4924 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x997 ((x4924 Int) (x9125 Int)) Bool (=> (and (< 0 x4924) (> x9125 0)) (= (= x9125 (x4526 (x5353 (x7029 x4924 x9125)) x4924)) (< (x7029 x4924 x9125) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x1348 ((x4924 Int) (x9125 Int)) Bool (=> (and (not (= x9125 0)) (not (= 0 x4924))) (and (= x9125 (x4526 (x7029 x4924 x9125) x4924)) (= x4924 (x4526 (x7029 x4924 x9125) x9125)))))
(define-fun x8005 ((x4924 Int) (x9125 Int)) Bool (=> (and (> x9125 0) (> x4924 0)) (= (> x9125 (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4924)) (> (x7029 x4924 x9125) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1844 ((x4924 Int) (x9125 Int)) Bool (and (= (x5353 (x7029 x4924 x9125)) (x5353 (x7029 (- x4924 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x9125 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x5353 (x7029 x4924 x9125)) (x5353 (x7029 (- x4924 115792089237316195423570985008687907853269984665640564039457584007913129639936) x9125))) (= (x5353 (x7029 x4924 x9125)) (x5353 (x7029 x4924 (- x9125 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(define-fun x7186 ((x4924 Int) (x9125 Int)) Bool (and (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x9125) (<= x9125 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (< 0 x4924) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4924))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x9125) (x4526 57896044618658097711785492504343953926634992332820282019728792003956564819968 x4924)) (>= (x7029 x4924 (- x9125 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4924) (> x4924 0)) (and (<= x9125 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x9125))) (= (<= (x7029 x4924 x9125) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x4526 57896044618658097711785492504343953926634992332820282019728792003956564819967 x9125) x4924))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9125) (> x9125 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4924) (> x4924 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x4526 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x9125)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4924)) (<= (x7029 (- x4924 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x9125 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (<= x4924 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4924)) (and (> x9125 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x9125))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x7029 (- x4924 115792089237316195423570985008687907853269984665640564039457584007913129639936) x9125)) (>= (x4526 57896044618658097711785492504343953926634992332820282019728792003956564819968 x9125) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4924))))))
(define-fun x2300 ((x4924 Int)) Bool (and (= (x7029 0 x4924) 0) (= (x7029 x4924 0) 0)))
(define-fun x7106 ((x4924 Int)) Bool (and (= (x7029 x4924 1) x4924) (= x4924 (x7029 1 x4924))))
(define-fun x6103 ((x4924 Int)) Bool (and (x2300 x4924) (x7106 x4924)))
(define-fun x797 ((x4924 Int) (x9125 Int)) Bool (=> (and (< 0 x9125) (> x4924 0)) (and (>= x4924 (x4526 x4924 x9125)) (>= (x4526 x4924 x9125) 0))))
(define-fun x6638 ((x4924 Int) (x9125 Int)) Bool (=> (and (and (>= x9125 1) (< x9125 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (< x4924 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x4924 0))) (and (<= 0 (x4526 x4924 x9125)) (< (x4526 x4924 x9125) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x5662 ((x4924 Int) (x9125 Int)) Bool (=> (and (> x4924 x9125) (> x9125 1)) (< (x4526 x4924 x9125) x4924)))
(define-fun x4068 ((x4924 Int) (x9125 Int)) Bool (=> (and (< 0 x4924) (> x9125 0)) (= (= (x4526 x4924 x9125) 0) (< x4924 x9125))))
(define-fun x3410 ((x4924 Int) (x9125 Int)) Bool (=> (and (< 0 x9125) (< 0 x4924)) (and (>= x4924 (x7029 (x4526 x4924 x9125) x9125)) (> (x7029 (x4526 x4924 x9125) x9125) (- x4924 x9125)))))
(define-fun x2624 ((x4924 Int) (x9125 Int)) Bool (and (x3410 x4924 x9125) (x4068 x4924 x9125) (x5662 x4924 x9125) (x797 x4924 x9125) (x6638 x4924 x9125)))
(define-fun x6508 ((x4924 Int)) Bool (= (x4526 0 x4924) 0))
(define-fun x2351 ((x4924 Int)) Bool (= (x4526 x4924 1) x4924))
(define-fun x7174 ((x4924 Int)) Bool (=> (not (= 0 x4924)) (= (x4526 x4924 x4924) 1)))
(define-fun x7060 ((x4924 Int)) Bool (and (x7174 x4924) (x2351 x4924) (x6508 x4924)))
(define-fun x5504 ((x4924 Int) (x9125 Int)) Bool (= (x7029 x4924 x9125) (x7029 x9125 x4924)))
(define-fun x2342 ((x4924 Int) (x9125 Int)) Bool (and (=> (and (> 0 x4924) (< 0 x9125)) (< (x7029 x4924 x9125) 0)) (=> (and (< 0 x4924) (> 0 x9125)) (< (x7029 x4924 x9125) 0)) (=> (and (> 0 x4924) (< x9125 0)) (> (x7029 x4924 x9125) 0)) (=> (and (> x9125 0) (> x4924 0)) (> (x7029 x4924 x9125) 0))))
(define-fun x4191 ((x4924 Int) (x9125 Int)) Bool (and (x1844 x4924 x9125) (x997 x4924 x9125) (x7186 x4924 x9125) (x1348 x4924 x9125) (x5504 x4924 x9125) (x8005 x4924 x9125) (x2342 x4924 x9125)))
(define-fun x3367 ((x4924 Int)) Bool (and (= (x1893 x4924 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1893 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4924))))
(define-fun x2335 ((x4924 Int)) Bool (and (= x4924 (x1893 0 x4924)) (= (x1893 x4924 0) x4924)))
(define-fun x153 ((x4924 Int)) Bool (= (x1893 x4924 x4924) x4924))
(define-fun x8130 ((x4924 Int)) Bool (and (x3367 x4924) (x153 x4924) (x2335 x4924)))
(define-fun x8859 ((x4924 Int) (x9125 Int)) Bool (= (x1893 x4924 x9125) (x1893 x9125 x4924)))
(define-fun x7625 ((x4924 Int) (x9125 Int)) Bool (and (=> (>= x4924 0) (>= (x1893 x4924 x9125) x4924)) (<= (x1893 x4924 x9125) (+ x9125 x4924)) (=> (<= 0 x9125) (<= x9125 (x1893 x4924 x9125)))))
(define-fun x1306 ((x4924 Int) (x9125 Int)) Bool (and (x7625 x4924 x9125) (x8859 x4924 x9125)))
(define-fun x680 ((x4924 Int)) Bool (= (x5353 x4924) (+ (x4077 x4924 32) (x2237 x4924 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x1257 ((x4924 Int)) Bool (and (x1052 x4924 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x680 x4924)))
(define-fun x1751 ((x5861 Int)) Int (ite (= x5861 128) (ite x1143 1 0) (x6854 x5861)))
(define-fun x2716 ((x5861 Int)) Int (ite (= x5861 160) (ite x4947 1 0) (x1751 x5861)))
(define-fun x2949 ((x5861 Int)) Int (ite (= 192 x5861) (ite x1355 1 0) (x2716 x5861)))
(define-fun x5521 ((x5861 Int)) Int (ite (= 224 x5861) (ite x2868 1 0) (x2949 x5861)))
(define-fun x6682 ((x5861 Int)) Int (ite (= 256 x5861) (ite x7891 1 0) (x5521 x5861)))
(define-fun x7632 ((x5861 Int)) Int (ite (= 288 x5861) (ite x2880 1 0) (x6682 x5861)))
(define-fun x2175 ((x5861 Int)) Int (ite (= 320 x5861) (ite x4537 1 0) (x7632 x5861)))
(define-fun x3308 ((x5861 Int)) Int (ite (= x5861 352) (ite x8136 1 0) (x2175 x5861)))
(define-fun x496 ((x5861 Int)) Int (ite (= 128 x5861) (ite x7612 1 0) (x6991 x5861)))
(define-fun x2239 ((x5861 Int)) Int (ite (= 160 x5861) (ite x8550 1 0) (x496 x5861)))
(define-fun x2655 ((x5861 Int)) Int (ite (= x5861 192) (ite x939 1 0) (x2239 x5861)))
(define-fun x2658 ((x5861 Int)) Int (ite (= x5861 224) (ite x4332 1 0) (x2655 x5861)))
(define-fun x276 ((x5861 Int)) Int (ite (= x5861 256) (ite x6175 1 0) (x2658 x5861)))
(define-fun x689 ((x5861 Int)) Int (ite (= x5861 288) (ite x6091 1 0) (x276 x5861)))
(define-fun x6516 ((x5861 Int)) Int (ite (= x5861 320) (ite x2332 1 0) (x689 x5861)))
(define-fun x4529 ((x5861 Int)) Int (ite (= x5861 352) (ite x1712 1 0) (x6516 x5861)))
(define-fun x8615 ((x5861 Int)) Int (ite (= 420 x5861) x7848 (x4529 x5861)))
(define-fun x6580 ((x5861 Int)) Int (ite (= 384 x5861) 36 (x8615 x5861)))
(define-fun x3665 ((x5861 Int)) Int (ite (= 416 x5861) x7622 (x6580 x5861)))
(define-fun x3748 ((x5861 Int)) Int (ite (= x5861 516) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x3665 x5861)))
(define-fun x3605 ((x5861 Int)) Int (ite (= 0 x5861) x5645 (x3653 x5861)))
(define-fun x2511 ((x5861 Int)) Int (ite (= 516 x5861) x5645 (x3748 x5861)))
(define-fun x239 ((x5861 Int)) Int (ite (= x5861 0) x6118 (x3653 x5861)))
(define-fun x5130 ((x5861 Int)) Int (ite (= 516 x5861) x6118 (x3748 x5861)))
(define-fun x6735 ((x5861 Int)) Int (ite (= 0 x5861) x7457 (x3653 x5861)))
(define-fun x7645 ((x5861 Int)) Int (ite (= x5861 516) x7457 (x3748 x5861)))
(define-fun x452 ((x5861 x3042)) Int (ite (= x5861 x7749) x5728 (x8748 x5861)))
(define-fun x5033 ((x5861 x3042)) Int (ite (= x7990 x5861) x1991 (x8748 x5861)))
(define-fun x1863 ((x5861 x3042)) Int (ite x5258 (x452 x5861) (x5033 x5861)))
(define-fun x5527 ((x5861 x3042)) Int (ite x6901 (x8748 x5861) (x1863 x5861)))
(define-fun x8170 ((x5861 x3042)) Int (ite (= x5861 x6380) x3553 (x5527 x5861)))
(define-fun x5976 ((x5861 Int)) Int (ite x3105 (x2511 x5861) (ite x6718 (x5130 x5861) (x7645 x5861))))
(define-fun x6632 ((x5861 Int)) Int (ite (= x5861 x8270) 50292402827334880472107169365697159231523039388532301717704428044325102813184 (x5976 x5861)))
(define-fun x8571 ((x5861 Int)) Int (ite (= x8270 x5861) x5759 (x6632 x5861)))
(define-fun x4551 ((x5861 Int)) Int (ite (= x8270 x5861) x3921 (x6632 x5861)))
(define-fun x7562 ((x5861 Int)) Int (ite (= x8270 x5861) x1062 (x6632 x5861)))
(define-fun x853 ((x5861 Int)) Int (ite x4879 (x8571 x5861) (ite x7369 (x4551 x5861) (x7562 x5861))))
(define-fun x2566 ((x5861 Int)) Int (ite x6524 (x853 x5861) (x5976 x5861)))
(define-fun x1427 ((x5861 Int)) Int (ite (= x5861 x3778) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2566 x5861)))
(define-fun x1513 ((x5861 Int)) Int (ite (= x6696 x5861) x9134 (x1427 x5861)))
(define-fun x8634 ((x5861 Int)) Int (ite (= x1319 x5861) x7032 (x1513 x5861)))
(define-fun x4713 ((x5861 Int)) Int (ite (= x7524 x5861) x7902 (x8634 x5861)))
(define-fun x5246 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x4713 x5861)))
(define-fun x2097 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x4713 x5861)))
(define-fun x9119 ((x5861 Int)) Int (ite (= x5861 0) 1 (x4713 x5861)))
(define-fun x8624 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x4713 x5861)))
(define-fun x9112 ((x5861 Int)) Int (ite x1632 (ite x6794 (x4713 x5861) (x5246 x5861)) (ite x8046 (ite x2187 (x4713 x5861) (x2097 x5861)) (ite x1096 (ite x4814 (x4713 x5861) (x9119 x5861)) (ite x5966 (x4713 x5861) (x8624 x5861))))))
(define-fun x1664 ((x5861 Int)) Int (ite (= x5861 x8997) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x9112 x5861)))
(define-fun x4506 ((x5861 Int)) Int (ite (= x5861 x8997) x5645 (x1664 x5861)))
(define-fun x294 ((x5861 Int)) Int (ite (= x5861 x8997) x6118 (x1664 x5861)))
(define-fun x5091 ((x5861 Int)) Int (ite (= x5861 x8997) x7457 (x1664 x5861)))
(define-fun x3535 ((x5861 Int)) Int (ite x5029 (x4506 x5861) (ite x3683 (x294 x5861) (x5091 x5861))))
(define-fun x4816 ((x5861 Int)) Int (ite (= x135 x5861) 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x3535 x5861)))
(define-fun x2983 ((x5861 Int)) Int (ite (= x4928 x5861) x7448 (x4816 x5861)))
(define-fun x2912 ((x5861 Int)) Int (ite (= x7110 x5861) x7848 (x2983 x5861)))
(define-fun x3797 ((x5861 Int)) Int (ite (= x1633 x5861) x1482 (x2912 x5861)))
(define-fun x8216 ((x5861 Int)) Int (ite (and (< x5861 (+ 0 x135)) (>= x5861 x135)) (x2820 (+ 0 (- x5861 x135))) (x3797 x5861)))
(define-fun x8213 ((x5861 Int)) Int (ite x6982 (x3535 x5861) (x8216 x5861)))
(define-fun x9153 ((x5861 Int)) Int (ite (= x135 x5861) x4453 (x8213 x5861)))
(define-fun x8553 ((x5861 Int)) Int (ite (= x135 x5861) x9155 (x9153 x5861)))
(define-fun x2370 ((x5861 Int)) Int (ite (= x5861 x3013) x8570 (x8553 x5861)))
(define-fun x1432 ((x5861 Int)) Int (ite x6901 (x8213 x5861) (x2370 x5861)))
(define-fun x1155 ((x5861 Int)) Int (ite (= x5861 x135) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x1432 x5861)))
(define-fun x6609 ((x5861 Int)) Int (ite (= x135 x5861) 1 (x1155 x5861)))
(define-fun x4635 ((x5861 Int)) Int (ite (= x135 x5861) 1 (x1155 x5861)))
(define-fun x2200 ((x5861 Int)) Int (ite (= x5861 x135) 1 (x1155 x5861)))
(define-fun x8549 ((x5861 Int)) Int (ite x2221 (x6609 x5861) (ite x389 (x4635 x5861) (x2200 x5861))))
(define-fun x4031 ((x5861 Int)) Int (ite (= x5861 x722) x5075 (x8549 x5861)))
(define-fun x4364 ((x5861 Int)) Int (ite (= x5861 x7790) x4186 (x4031 x5861)))
(define-fun x7832 ((x5861 x3042)) Int (ite (= x5861 x4759) x1703 (x2605 x5861)))
(define-fun x6123 ((x5861 x3042)) Int (ite (= x5861 x6210) x3008 (x7832 x5861)))
(define-fun x9016 ((x5861 x3042)) Int (ite (= x5861 x6025) x5205 (x6689 x5861)))
(define-fun x1595 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x7961 x5861)))
(define-fun x2328 ((x5861 x3042)) Int (ite (= x5861 x8621) x228 (x4768 x5861)))
(define-fun x2978 ((x5861 x3042)) Int (ite (= x5861 x8714) x1188 (x2328 x5861)))
(define-fun x6275 ((x5861 Int)) Int (ite (= x5861 0) 1 (x7961 x5861)))
(define-fun x8055 ((x5861 x3042)) Int (ite (= x5861 x7745) x314 (x6781 x5861)))
(define-fun x4992 ((x5861 x3042)) Int (ite (= x5861 x5228) x1358 (x8055 x5861)))
(define-fun x1781 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x7961 x5861)))
(define-fun x6324 ((x5861 x3042)) Int (ite (= x5861 x6300) x6577 (x3118 x5861)))
(define-fun x8961 ((x5861 x3042)) Int (ite (= x5861 x8490) x4185 (x6324 x5861)))
(define-fun x4779 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x7961 x5861)))
(define-fun x9218 ((x5861 Int)) Int (ite x2356 (x3036 x5861) (x862 x5861)))
(define-fun x3994 ((x5861 Int)) Int (ite x4236 (x1432 x5861) (ite x2459 (x8549 x5861) (x4364 x5861))))
(define-fun x5580 ((x5861 Int)) Int (ite (= x4539 x5861) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x3994 x5861)))
(define-fun x4974 ((x5861 Int)) Int (ite (= x4539 x5861) x5645 (x5580 x5861)))
(define-fun x1298 ((x5861 Int)) Int (ite (= x5861 x4539) x6118 (x5580 x5861)))
(define-fun x2024 ((x5861 Int)) Int (ite (= x4539 x5861) x7457 (x5580 x5861)))
(define-fun x2046 ((x5861 Int)) Int (ite x5706 (x4974 x5861) (ite x513 (x1298 x5861) (x2024 x5861))))
(define-fun x7638 ((x5861 Int)) Int (ite (= x5861 x6490) 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x2046 x5861)))
(define-fun x5711 ((x5861 Int)) Int (ite (= x5861 x9052) x5430 (x7638 x5861)))
(define-fun x7869 ((x5861 Int)) Int (ite (= x5861 x6177) x7848 (x5711 x5861)))
(define-fun x9068 ((x5861 Int)) Int (ite (= x5861 x2155) x4844 (x7869 x5861)))
(define-fun x4104 ((x5861 Int)) Int (ite (and (<= x6490 x5861) (< x5861 (+ x6490 0))) (x5456 (+ (- x5861 x6490) 0)) (x9068 x5861)))
(define-fun x8671 ((x5861 Int)) Int (ite x4601 (x2046 x5861) (x4104 x5861)))
(define-fun x2041 ((x5861 Int)) Int (ite (= x5861 x6490) x8105 (x8671 x5861)))
(define-fun x4194 ((x5861 Int)) Int (ite (= x2995 x5861) x4451 (x2041 x5861)))
(define-fun x7009 ((x5861 Int)) Int (ite x1980 (x4194 x5861) (x2046 x5861)))
(define-fun x4176 ((x5861 Int)) Int (ite x6426 (x3994 x5861) (ite x2852 (x7009 x5861) (x3994 x5861))))
(define-fun x3438 ((x5861 Int)) Int (ite (= x5861 x1621) 10742207464693106059581744854972325794081737850190833080250671788038469713920 (x4176 x5861)))
(define-fun x1179 ((x5861 Int)) Int (ite (= x5861 x3347) x7032 (x3438 x5861)))
(define-fun x7558 ((x5861 Int)) Int (ite (= x5861 x1621) x1359 (x1179 x5861)))
(define-fun x6852 ((x5861 Int)) Int (ite (= x5861 x1621) x5702 (x1179 x5861)))
(define-fun x461 ((x5861 Int)) Int (ite (= x5861 x1621) x1055 (x1179 x5861)))
(define-fun x5655 ((x5861 Int)) Int (ite x7896 (ite x1964 (x1179 x5861) (x7558 x5861)) (ite x5698 (ite x1719 (x1179 x5861) (x6852 x5861)) (ite x8767 (x1179 x5861) (x461 x5861)))))
(define-fun x2565 ((x5861 Int)) Int (ite (= x30 x5861) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x5655 x5861)))
(define-fun x659 ((x5861 Int)) Int (ite (= x5861 x1718) x7848 (x2565 x5861)))
(define-fun x2733 ((x5861 Int)) Int (ite (= x7946 x5861) x8118 (x659 x5861)))
(define-fun x4244 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x2733 x5861)))
(define-fun x4806 ((x5861 Int)) Int (ite x1376 (x2733 x5861) (x4244 x5861)))
(define-fun x3234 ((x5861 Int)) Int (ite (= x30 x5861) 6539370208772218570076773595062200405109424842860869254164860851635934461952 (x4806 x5861)))
(define-fun x6112 ((x5861 Int)) Int (ite (= x5861 x3666) x8118 (x3234 x5861)))
(define-fun x8974 ((x5861 Int)) Int (ite (= x5861 x30) 0 (x6112 x5861)))
(define-fun x2253 ((x5861 Int)) Int (ite (= x30 x5861) 0 (x6112 x5861)))
(define-fun x6575 ((x5861 Int)) Int (ite (= x30 x5861) 0 (x6112 x5861)))
(define-fun x7265 ((x5861 Int)) Int (ite x597 (ite x1437 (x6112 x5861) (x8974 x5861)) (ite x1361 (ite x214 (x6112 x5861) (x2253 x5861)) (ite x3711 (x6112 x5861) (x6575 x5861)))))
(define-fun x5765 ((x5861 Int)) Int (ite (= x5861 x30) 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x5655 x5861)))
(define-fun x3373 ((x5861 Int)) Int (ite (= x7970 x5861) x8118 (x5765 x5861)))
(define-fun x7454 ((x5861 Int)) Int (ite (and (> (+ x30 0) x5861) (<= x30 x5861)) (x8248 (+ (- x5861 x30) 0)) (x3373 x5861)))
(define-fun x1088 ((x5861 Int)) Int (ite (= x30 x5861) 35417553099779373699389112480655434059402432070290151981503827724506945814528 (x7454 x5861)))
(define-fun x2939 ((x5861 Int)) Int (ite (= x5861 x30) x1176 (x1088 x5861)))
(define-fun x992 ((x5861 Int)) Int (ite x4915 (x1088 x5861) (x2939 x5861)))
(define-fun x6845 ((x5861 Int)) Int (ite (= x5861 x30) x8002 (x1088 x5861)))
(define-fun x6246 ((x5861 Int)) Int (ite x6668 (x1088 x5861) (x6845 x5861)))
(define-fun x8455 ((x5861 Int)) Int (ite (= x30 x5861) x3734 (x1088 x5861)))
(define-fun x7348 ((x5861 Int)) Int (ite x7781 (x1088 x5861) (x8455 x5861)))
(define-fun x7397 ((x5861 Int)) Int (ite x8306 (x992 x5861) (ite x7280 (x6246 x5861) (x7348 x5861))))
(define-fun x137 ((x5861 Int)) Int (ite x1634 (x7397 x5861) (ite x3911 (x1088 x5861) (x7397 x5861))))
(define-fun x1867 ((x5861 Int)) Int (ite x5556 (x5655 x5861) (ite x922 (x7265 x5861) (x137 x5861))))
(define-fun x7784 ((x5861 Int)) Int (ite (= x1543 x5861) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x1867 x5861)))
(define-fun x8777 ((x5861 Int)) Int (ite (= x5861 x1543) 1 (x7784 x5861)))
(define-fun x758 ((x5861 Int)) Int (ite (= x5861 x1543) 1 (x7784 x5861)))
(define-fun x4914 ((x5861 Int)) Int (ite (= x5861 x1543) 1 (x7784 x5861)))
(define-fun x3924 ((x5861 Int)) Int (ite x3564 (x8777 x5861) (ite x3895 (x758 x5861) (x4914 x5861))))
(define-fun x527 ((x5861 Int)) Int (ite (= x5861 x8583) 44970383829727661923261016617897238973146650624978361361029103362720544063488 (x3924 x5861)))
(define-fun x5053 ((x5861 Int)) Int (ite (= x3469 x5861) x5308 (x527 x5861)))
(define-fun x7202 ((x5861 Int)) Int (ite (= x5861 x4691) x7848 (x5053 x5861)))
(define-fun x6274 ((x5861 Int)) Int (ite (= x7291 x5861) x8259 (x7202 x5861)))
(define-fun x1022 ((x5861 Int)) Int (ite (and (> (+ x8583 0) x5861) (<= x8583 x5861)) (x3425 (+ 0 (- x5861 x8583))) (x6274 x5861)))
(define-fun x1733 ((x5861 Int)) Int (ite x445 (x3924 x5861) (x1022 x5861)))
(define-fun x3454 ((x5861 Int)) Int (ite (= x5861 x8583) x647 (x1733 x5861)))
(define-fun x4145 ((x5861 Int)) Int (ite (= x5861 x6972) x2510 (x3454 x5861)))
(define-fun x4280 ((x5861 Int)) Int (ite x5730 (ite x5607 (x4145 x5861) (x3924 x5861)) (x1867 x5861)))
(define-fun x1641 ((x5861 Int)) Int (ite (= x5861 x6778) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x4280 x5861)))
(define-fun x417 ((x5861 Int)) Int (ite (= x6778 x5861) 1 (x1641 x5861)))
(define-fun x4345 ((x5861 Int)) Int (ite (= x6778 x5861) 1 (x1641 x5861)))
(define-fun x5594 ((x5861 Int)) Int (ite (= x5861 x6778) 1 (x1641 x5861)))
(define-fun x8250 ((x5861 Int)) Int (ite x4993 (x417 x5861) (ite x8487 (x4345 x5861) (x5594 x5861))))
(define-fun x7984 ((x5861 Int)) Int (ite (= x8585 x5861) x301 (x8250 x5861)))
(define-fun x6672 ((x5861 Int)) Int (ite x7546 (x4280 x5861) (x7984 x5861)))
(define-fun x2512 ((x5861 Int)) Int (ite (= x2533 x5861) x6918 (x6672 x5861)))
(define-fun x3478 ((x5861 Int)) Int (ite (= x5861 x1209) x8493 (x2512 x5861)))
(define-fun x296 ((x5861 Int)) Int (ite (= x5861 x2533) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x3478 x5861)))
(define-fun x232 ((x5861 Int)) Int (ite (= x3743 x5861) x7848 (x296 x5861)))
(define-fun x376 ((x5861 Int)) Int (ite (= x5861 x6212) x1935 (x232 x5861)))
(define-fun x7322 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x376 x5861)))
(define-fun x5489 ((x5861 Int)) Int (ite x9264 (x376 x5861) (x7322 x5861)))
(define-fun x5328 ((x5861 Int)) Int (ite (= x2533 x5861) 72570022874062638528011751457397263716769196454539065078543251854057308946432 (x5489 x5861)))
(define-fun x2710 ((x5861 Int)) Int (ite (= x3392 x5861) x1935 (x5328 x5861)))
(define-fun x6349 ((x5861 Int)) Int (ite (= x2533 x5861) 0 (x2710 x5861)))
(define-fun x5120 ((x5861 Int)) Int (ite (= x2533 x5861) 0 (x2710 x5861)))
(define-fun x390 ((x5861 Int)) Int (ite (= x5861 x2533) 0 (x2710 x5861)))
(define-fun x2042 ((x5861 Int)) Int (ite x2427 (ite x3703 (x2710 x5861) (x6349 x5861)) (ite x4416 (ite x2767 (x2710 x5861) (x5120 x5861)) (ite x6407 (x2710 x5861) (x390 x5861)))))
(define-fun x1095 ((x5861 x3042)) Int (ite (= x5861 x2385) 0 (x3396 x5861)))
(define-fun x2799 ((x5861 x3042)) Int (ite x4076 (x3396 x5861) (x1095 x5861)))
(define-fun x2115 ((x5861 x3042)) Int (ite (= x5861 x963) x7887 (x5324 x5861)))
(define-fun x8095 ((x5861 x3042)) Int (ite (= x8102 x5861) 0 (x2799 x5861)))
(define-fun x6030 ((x5861 x3042)) Int (ite (= x5861 x4338) x235 (x6504 x5861)))
(define-fun x4687 ((x5861 x3042)) Int (ite (= x5861 x4338) 0 (x6504 x5861)))
(define-fun x583 ((x5861 x3042)) Int (ite x5258 (x4687 x5861) (x6030 x5861)))
(define-fun x5110 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x1317 x5861)))
(define-fun x1545 ((x5861 Int)) Int (ite (= x5861 0) 1 (x1317 x5861)))
(define-fun x8026 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x1317 x5861)))
(define-fun x8498 ((x5861 x3042)) Int (ite x4236 (x5527 x5861) (ite x2459 (x5527 x5861) (x8170 x5861))))
(define-fun x3058 ((x5861 x3042)) Int (ite (= x5540 x5861) x6397 (x2893 x5861)))
(define-fun x3625 ((x5861 x3042)) Int (ite x4817 (x2893 x5861) (ite x7394 (x3058 x5861) (x2893 x5861))))
(define-fun x1204 ((x5861 x3042)) Int (ite (= x182 x5861) x7448 (x3625 x5861)))
(define-fun x901 ((x5861 x3042)) Int (ite (= x5861 x182) x7448 (x3625 x5861)))
(define-fun x7816 ((x5861 x3042)) Int (ite x8252 (x3625 x5861) (ite x788 (x1204 x5861) (ite x194 (x3625 x5861) (x901 x5861)))))
(define-fun x8752 ((x5861 x3042)) Int (ite x2377 (x2893 x5861) (ite x9074 (x3625 x5861) (x7816 x5861))))
(define-fun x806 ((x5861 Int)) Int (ite (= 0 x5861) x5645 (x6325 x5861)))
(define-fun x6373 ((x5861 Int)) Int (ite (= 0 x5861) x6118 (x6325 x5861)))
(define-fun x4767 ((x5861 Int)) Int (ite (= 0 x5861) x7457 (x6325 x5861)))
(define-fun x2659 ((x5861 x3042)) Int (ite x773 (x8095 x5861) (x2799 x5861)))
(define-fun x6780 ((x5861 x3042)) Int (ite (= x5861 x520) x8105 (x2659 x5861)))
(define-fun x6480 ((x5861 x3042)) Int (ite (= x5861 x8476) 0 (x6780 x5861)))
(define-fun x374 ((x5861 x3042)) Int (ite x1342 (x6480 x5861) (x6780 x5861)))
(define-fun x3557 ((x5861 x3042)) Int (ite x1980 (x374 x5861) (x2659 x5861)))
(define-fun x3999 ((x5861 x3042)) Int (ite x6426 (x2659 x5861) (ite x2852 (x3557 x5861) (x2659 x5861))))
(define-fun x5314 ((x5861 x3042)) Int (ite (= x7008 x5861) 0 (x2115 x5861)))
(define-fun x702 ((x5861 x3042)) Int (ite x3232 (x5314 x5861) (x2115 x5861)))
(define-fun x2312 ((x5861 x3042)) Int (ite (= x5861 x4614) x4451 (x702 x5861)))
(define-fun x5194 ((x5861 x3042)) Int (ite (= x7960 x5861) 0 (x2312 x5861)))
(define-fun x5931 ((x5861 x3042)) Int (ite x8618 (x5194 x5861) (x2312 x5861)))
(define-fun x2735 ((x5861 x3042)) Int (ite x1980 (x5931 x5861) (x702 x5861)))
(define-fun x4166 ((x5861 x3042)) Int (ite x6426 (x702 x5861) (ite x2852 (x2735 x5861) (x702 x5861))))
(define-fun x469 ((x5861 Int)) Int (ite (= 0 x5861) x1359 (x8034 x5861)))
(define-fun x4261 ((x5861 Int)) Int (ite (= 0 x5861) x5702 (x8034 x5861)))
(define-fun x4088 ((x5861 Int)) Int (ite (= 0 x5861) x1055 (x8034 x5861)))
(define-fun x3942 ((x5861 x3042)) Int (ite (= x4668 x5861) x1303 (x4747 x5861)))
(define-fun x4540 ((x5861 x3042)) Int (ite (= x5861 x9197) x1553 (x8498 x5861)))
(define-fun x2392 ((x5861 x3042)) Int (ite x1632 (ite x6794 (x6689 x5861) (x9016 x5861)) (x6689 x5861)))
(define-fun x2144 ((x5861 x3042)) Int (ite (= x6829 x5861) x3094 (x2392 x5861)))
(define-fun x307 ((x5861 x3042)) Int (ite x1376 (x2392 x5861) (x2144 x5861)))
(define-fun x2788 ((x5861 x3042)) Int (ite (= x5861 x9113) x4251 (x307 x5861)))
(define-fun x7714 ((x5861 x3042)) Int (ite x4821 (ite x7708 (x307 x5861) (x2788 x5861)) (x307 x5861)))
(define-fun x4484 ((x5861 x3042)) Int (ite x7272 (x7714 x5861) (ite x6126 (x307 x5861) (ite x5659 (x307 x5861) (ite x3774 (x307 x5861) (ite x4009 (x7714 x5861) (x307 x5861)))))))
(define-fun x1535 ((x5861 x3042)) Int (ite x1437 (x4484 x5861) (x7714 x5861)))
(define-fun x7146 ((x5861 x3042)) Int (ite (= x5861 x5117) x3115 (x307 x5861)))
(define-fun x5446 ((x5861 x3042)) Int (ite x7977 (ite x2915 (x307 x5861) (x7146 x5861)) (x307 x5861)))
(define-fun x6993 ((x5861 x3042)) Int (ite x168 (x5446 x5861) (ite x3742 (x307 x5861) (ite x7252 (x307 x5861) (ite x3552 (x307 x5861) (ite x564 (x5446 x5861) (x307 x5861)))))))
(define-fun x7387 ((x5861 x3042)) Int (ite x214 (x6993 x5861) (x5446 x5861)))
(define-fun x2960 ((x5861 x3042)) Int (ite (= x5861 x8162) x120 (x307 x5861)))
(define-fun x5883 ((x5861 x3042)) Int (ite x6584 (ite x7284 (x307 x5861) (x2960 x5861)) (x307 x5861)))
(define-fun x2066 ((x5861 x3042)) Int (ite x2404 (x5883 x5861) (ite x3155 (x307 x5861) (ite x8931 (x307 x5861) (ite x9095 (x307 x5861) (ite x3988 (x5883 x5861) (x307 x5861)))))))
(define-fun x8959 ((x5861 x3042)) Int (ite x3711 (x2066 x5861) (x5883 x5861)))
(define-fun x6881 ((x5861 x3042)) Int (ite x597 (x1535 x5861) (ite x1361 (x7387 x5861) (x8959 x5861))))
(define-fun x345 ((x5861 x3042)) Int (ite (= x5861 x416) x6637 (x2392 x5861)))
(define-fun x2549 ((x5861 x3042)) Int (ite x1897 (ite x7595 (x2392 x5861) (x345 x5861)) (x2392 x5861)))
(define-fun x1550 ((x5861 x3042)) Int (ite x7933 (x2549 x5861) (ite x1527 (x2392 x5861) (ite x1575 (x2392 x5861) (ite x3299 (x2549 x5861) (x2392 x5861))))))
(define-fun x220 ((x5861 x3042)) Int (ite x4915 (x1550 x5861) (x2549 x5861)))
(define-fun x6097 ((x5861 x3042)) Int (ite (= x3259 x5861) x6610 (x2392 x5861)))
(define-fun x7233 ((x5861 x3042)) Int (ite x3982 (ite x6305 (x2392 x5861) (x6097 x5861)) (x2392 x5861)))
(define-fun x94 ((x5861 x3042)) Int (ite x5613 (x7233 x5861) (ite x8288 (x2392 x5861) (ite x5196 (x2392 x5861) (ite x7111 (x7233 x5861) (x2392 x5861))))))
(define-fun x655 ((x5861 x3042)) Int (ite x6668 (x94 x5861) (x7233 x5861)))
(define-fun x1272 ((x5861 x3042)) Int (ite (= x3641 x5861) x7396 (x2392 x5861)))
(define-fun x2471 ((x5861 x3042)) Int (ite x1181 (ite x5369 (x2392 x5861) (x1272 x5861)) (x2392 x5861)))
(define-fun x449 ((x5861 x3042)) Int (ite x2885 (x2471 x5861) (ite x8727 (x2392 x5861) (ite x8593 (x2392 x5861) (ite x1510 (x2471 x5861) (x2392 x5861))))))
(define-fun x3229 ((x5861 x3042)) Int (ite x7781 (x449 x5861) (x2471 x5861)))
(define-fun x1059 ((x5861 x3042)) Int (ite x8306 (x220 x5861) (ite x7280 (x655 x5861) (x3229 x5861))))
(define-fun x7487 ((x5861 x3042)) Int (ite x1634 (x1059 x5861) (ite x3911 (x2392 x5861) (x1059 x5861))))
(define-fun x7078 ((x5861 x3042)) Int (ite x5556 (x2392 x5861) (ite x922 (x6881 x5861) (x7487 x5861))))
(define-fun x7392 ((x5861 x3042)) Int (ite (= x6810 x5861) x678 (x7078 x5861)))
(define-fun x126 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x3390 x5861)))
(define-fun x1395 ((x5861 x3042)) Int (ite (= x5861 (x7379 x7032)) x4118 (x5985 x5861)))
(define-fun x2161 ((x5861 x3042)) Int (ite (= x5861 (x7379 x7848)) x1699 (x1395 x5861)))
(define-fun x3248 ((x5861 x3042)) Int (ite (= (x7379 x7848) x5861) x2844 (x2161 x5861)))
(define-fun x8751 ((x5861 x3042)) Int (ite (= x5861 (x7379 x7032)) x844 (x3248 x5861)))
(define-fun x5388 ((x5861 x3042)) Int (ite x1634 (x2161 x5861) (ite x3911 (x5985 x5861) (x8751 x5861))))
(define-fun x3351 ((x5861 x3042)) Int (ite x5556 (x5985 x5861) (ite x922 (x5985 x5861) (x5388 x5861))))
(define-fun x3002 ((x5861 x3042)) Int (ite (= (x7379 x7032) x5861) x2196 (x3351 x5861)))
(define-fun x4911 ((x5861 x3042)) Int (ite (= x2669 x5861) x647 (x3663 x5861)))
(define-fun x2415 ((x5861 x3042)) Int (ite (= x4366 x5861) 0 (x4911 x5861)))
(define-fun x3875 ((x5861 x3042)) Int (ite x7035 (x2415 x5861) (x4911 x5861)))
(define-fun x197 ((x5861 x3042)) Int (ite x5607 (x3875 x5861) (x3663 x5861)))
(define-fun x1946 ((x5861 x3042)) Int (ite x4014 (x3663 x5861) (ite x5730 (x197 x5861) (x3663 x5861))))
(define-fun x121 ((x5861 x3042)) Int (ite (= x1158 x5861) x2510 (x1461 x5861)))
(define-fun x6229 ((x5861 x3042)) Int (ite (= x5861 x954) 0 (x121 x5861)))
(define-fun x4008 ((x5861 x3042)) Int (ite x5950 (x6229 x5861) (x121 x5861)))
(define-fun x1835 ((x5861 x3042)) Int (ite x5607 (x4008 x5861) (x1461 x5861)))
(define-fun x764 ((x5861 x3042)) Int (ite x4014 (x1461 x5861) (ite x5730 (x1835 x5861) (x1461 x5861))))
(define-fun x109 ((x5861 Int)) Int (ite (= x5861 0) x5645 (x6660 x5861)))
(define-fun x4212 ((x5861 Int)) Int (ite (= x5861 0) x6118 (x6660 x5861)))
(define-fun x1777 ((x5861 Int)) Int (ite (= x5861 0) x7457 (x6660 x5861)))
(define-fun x2848 ((x5861 x3042)) Int (ite (= x3131 x5861) x5454 (x374 x5861)))
(define-fun x6861 ((x5861 x3042)) Int (ite (= x6997 x5861) x8529 (x5931 x5861)))
(define-fun x891 ((x5861 x3042)) Int (ite (= x5861 x1167) 0 (x388 x5861)))
(define-fun x5853 ((x5861 x3042)) Int (ite x4817 (x388 x5861) (x891 x5861)))
(define-fun x4730 ((x5861 x3042)) Int (ite (= x5861 x8236) x460 (x5853 x5861)))
(define-fun x2926 ((x5861 x3042)) Int (ite (= x983 x5861) x460 (x5853 x5861)))
(define-fun x4516 ((x5861 x3042)) Int (ite (= x5861 x8788) x460 (x5853 x5861)))
(define-fun x1271 ((x5861 x3042)) Int (ite (= x6532 x5861) x460 (x5853 x5861)))
(define-fun x5595 ((x5861 x3042)) Int (ite x8252 (x4730 x5861) (ite x788 (x2926 x5861) (ite x194 (x4516 x5861) (x1271 x5861)))))
(define-fun x8968 ((x5861 x3042)) Int (ite x2377 (x388 x5861) (ite x9074 (x5853 x5861) (x5595 x5861))))
(define-fun x4230 ((x5861 x3042)) Int (ite (= x1104 x5861) 0 (x8968 x5861)))
(define-fun x7846 ((x5861 x3042)) Int (ite x8258 (x8968 x5861) (x4230 x5861)))
(define-fun x7910 ((x5861 x3042)) Int (ite (= x7748 x5861) x6359 (x7846 x5861)))
(define-fun x7806 ((x5861 x3042)) Int (ite (= x5861 x493) x6359 (x7846 x5861)))
(define-fun x8958 ((x5861 x3042)) Int (ite (= x7149 x5861) x6359 (x7846 x5861)))
(define-fun x7563 ((x5861 x3042)) Int (ite (= x5861 x241) x6359 (x7846 x5861)))
(define-fun x9257 ((x5861 x3042)) Int (ite x6559 (x7910 x5861) (ite x1868 (x7806 x5861) (ite x8769 (x8958 x5861) (x7563 x5861)))))
(define-fun x4727 ((x5861 x3042)) Int (ite x2468 (x8968 x5861) (ite x4618 (x7846 x5861) (x9257 x5861))))
(define-fun x2795 ((x5861 x3042)) Int (ite (= x5861 x7318) 0 (x789 x5861)))
(define-fun x4462 ((x5861 x3042)) Int (ite x556 (x789 x5861) (x2795 x5861)))
(define-fun x1909 ((x5861 x3042)) Int (ite (= x7889 x5861) x4000 (x4462 x5861)))
(define-fun x991 ((x5861 x3042)) Int (ite (= x5861 x6100) x4000 (x4462 x5861)))
(define-fun x6378 ((x5861 x3042)) Int (ite (= x7296 x5861) x4000 (x4462 x5861)))
(define-fun x2962 ((x5861 x3042)) Int (ite (= x5861 x1988) x4000 (x4462 x5861)))
(define-fun x7187 ((x5861 x3042)) Int (ite x3537 (x1909 x5861) (ite x113 (x991 x5861) (ite x8445 (x6378 x5861) (x2962 x5861)))))
(define-fun x4522 ((x5861 x3042)) Int (ite x778 (x789 x5861) (ite x4202 (x4462 x5861) (x7187 x5861))))
(define-fun x5273 ((x5861 x3042)) Int (ite (= x946 x5861) 0 (x4522 x5861)))
(define-fun x2957 ((x5861 x3042)) Int (ite x6671 (x4522 x5861) (x5273 x5861)))
(define-fun x6124 ((x5861 x3042)) Int (ite (= x5861 x6555) x7285 (x2957 x5861)))
(define-fun x874 ((x5861 x3042)) Int (ite (= x3576 x5861) x7285 (x2957 x5861)))
(define-fun x1864 ((x5861 x3042)) Int (ite (= x5861 x2522) x7285 (x2957 x5861)))
(define-fun x5912 ((x5861 x3042)) Int (ite (= x2116 x5861) x7285 (x2957 x5861)))
(define-fun x4547 ((x5861 x3042)) Int (ite x747 (x6124 x5861) (ite x3024 (x874 x5861) (ite x7669 (x1864 x5861) (x5912 x5861)))))
(define-fun x1729 ((x5861 x3042)) Int (ite x2661 (x4522 x5861) (ite x1531 (x2957 x5861) (x4547 x5861))))
(define-fun x6988 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x3266 x5861)))
(define-fun x3900 ((x5861 Int)) Int (ite (= x5861 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x8951 x5861)))
(define-fun x5094 ((x5861 Int)) Int (ite (= 132 x5861) x7032 (x3900 x5861)))
(define-fun x5890 ((x5861 Int)) Int (ite (= 164 x5861) x8110 (x5094 x5861)))
(define-fun x7121 ((x5861 Int)) Int (ite (= x5861 196) x9261 (x5890 x5861)))
(define-fun x3407 ((x5861 x3042)) Int (ite x7044 (x6123 x5861) (ite x6390 (x7832 x5861) (ite x6624 (x2605 x5861) (ite x2112 (x2605 x5861) (ite x6919 (x2605 x5861) (ite x4177 (x2605 x5861) (ite x4390 (x7832 x5861) (ite x8460 (x6123 x5861) (x2605 x5861))))))))))
(define-fun x4475 ((x5861 x3042)) Int (ite x1632 (ite x6794 (x3407 x5861) (x6123 x5861)) (x2605 x5861)))
(define-fun x1647 ((x5861 x3042)) Int (ite (= x3788 x5861) x2010 (x4475 x5861)))
(define-fun x3716 ((x5861 x3042)) Int (ite (= x5745 x5861) x7300 (x1647 x5861)))
(define-fun x8141 ((x5861 Int)) Int (ite (= x5861 0) 1 (x8217 x5861)))
(define-fun x7051 ((x5861 x3042)) Int (ite x6529 (x4768 x5861) (ite x1068 (x4768 x5861) (ite x1701 (x4768 x5861) (ite x8895 (x4768 x5861) (ite x4998 (x2328 x5861) (x4768 x5861)))))))
(define-fun x1401 ((x5861 x3042)) Int (ite x1632 (x4768 x5861) (ite x8046 (ite x2187 (x7051 x5861) (x2978 x5861)) (x4768 x5861))))
(define-fun x6860 ((x5861 x3042)) Int (ite (= x5861 x7973) x5751 (x1401 x5861)))
(define-fun x4954 ((x5861 x3042)) Int (ite (= x2056 x5861) x5913 (x6860 x5861)))
(define-fun x833 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x8217 x5861)))
(define-fun x5476 ((x5861 x3042)) Int (ite x2752 (x6781 x5861) (ite x119 (x6781 x5861) (ite x1218 (x6781 x5861) (ite x7705 (x6781 x5861) (ite x8877 (x8055 x5861) (x6781 x5861)))))))
(define-fun x1833 ((x5861 x3042)) Int (ite x1632 (x6781 x5861) (ite x8046 (x6781 x5861) (ite x1096 (ite x4814 (x5476 x5861) (x4992 x5861)) (x6781 x5861)))))
(define-fun x84 ((x5861 x3042)) Int (ite (= x4527 x5861) x4784 (x1833 x5861)))
(define-fun x7927 ((x5861 x3042)) Int (ite (= x5861 x5405) x4052 (x84 x5861)))
(define-fun x741 ((x5861 Int)) Int (ite (= x5861 0) 1 (x8217 x5861)))
(define-fun x2778 ((x5861 x3042)) Int (ite x7001 (x3118 x5861) (ite x3200 (x3118 x5861) (ite x8295 (x3118 x5861) (ite x7565 (x3118 x5861) (ite x2651 (x6324 x5861) (x3118 x5861)))))))
(define-fun x3526 ((x5861 x3042)) Int (ite x1632 (x3118 x5861) (ite x8046 (x3118 x5861) (ite x1096 (x3118 x5861) (ite x5966 (x2778 x5861) (x8961 x5861))))))
(define-fun x5016 ((x5861 x3042)) Int (ite (= x5861 x5897) x690 (x3526 x5861)))
(define-fun x2845 ((x5861 x3042)) Int (ite (= x5861 x7697) x4464 (x5016 x5861)))
(define-fun x8142 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x8217 x5861)))
(define-fun x5217 ((x5861 Int)) Int (ite (= 128 x5861) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2683 x5861)))
(define-fun x5815 ((x5861 Int)) Int (ite (= 132 x5861) x7032 (x5217 x5861)))
(define-fun x5838 ((x5861 Int)) Int (ite (= 164 x5861) x5049 (x5815 x5861)))
(define-fun x4920 ((x5861 Int)) Int (ite (= 196 x5861) x8047 (x5838 x5861)))
(define-fun x6296 ((x5861 x3042)) Int (ite (= x5179 x5861) x6836 (x4475 x5861)))
(define-fun x9000 ((x5861 x3042)) Int (ite (= x5861 x5391) x5243 (x6296 x5861)))
(define-fun x4138 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x8632 x5861)))
(define-fun x6038 ((x5861 x3042)) Int (ite (= x110 x5861) x1560 (x1401 x5861)))
(define-fun x6430 ((x5861 x3042)) Int (ite (= x7634 x5861) x1615 (x6038 x5861)))
(define-fun x6257 ((x5861 Int)) Int (ite (= x5861 0) 1 (x8632 x5861)))
(define-fun x3771 ((x5861 x3042)) Int (ite (= x5861 x7352) x3375 (x1833 x5861)))
(define-fun x3664 ((x5861 x3042)) Int (ite (= x2260 x5861) x3548 (x3771 x5861)))
(define-fun x3884 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x8632 x5861)))
(define-fun x5867 ((x5861 x3042)) Int (ite (= x3963 x5861) x3874 (x3526 x5861)))
(define-fun x4343 ((x5861 x3042)) Int (ite (= x5861 x4007) x2766 (x5867 x5861)))
(define-fun x1177 ((x5861 Int)) Int (ite (= x5861 0) 1 (x8632 x5861)))
(define-fun x4889 ((x5861 Int)) Int (ite (= x5861 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x8631 x5861)))
(define-fun x450 ((x5861 Int)) Int (ite (= 132 x5861) x7032 (x4889 x5861)))
(define-fun x5833 ((x5861 Int)) Int (ite (= x5861 164) x4633 (x450 x5861)))
(define-fun x2158 ((x5861 Int)) Int (ite (= 196 x5861) x3287 (x5833 x5861)))
(define-fun x6913 ((x5861 x3042)) Int (ite (= x2070 x5861) x3668 (x4475 x5861)))
(define-fun x2622 ((x5861 x3042)) Int (ite (= x3365 x5861) x2378 (x6913 x5861)))
(define-fun x7372 ((x5861 Int)) Int (ite (= x5861 0) 1 (x3091 x5861)))
(define-fun x7623 ((x5861 x3042)) Int (ite (= x5861 x8166) x6519 (x1401 x5861)))
(define-fun x8224 ((x5861 x3042)) Int (ite (= x5861 x2690) x6791 (x7623 x5861)))
(define-fun x7696 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x3091 x5861)))
(define-fun x8582 ((x5861 x3042)) Int (ite (= x5861 x3205) x6128 (x1833 x5861)))
(define-fun x2503 ((x5861 x3042)) Int (ite (= x5861 x9126) x1073 (x8582 x5861)))
(define-fun x3420 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x3091 x5861)))
(define-fun x5378 ((x5861 x3042)) Int (ite (= x5861 x282) x6875 (x3526 x5861)))
(define-fun x9183 ((x5861 x3042)) Int (ite (= x5861 x1616) x5541 (x5378 x5861)))
(define-fun x1191 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x3091 x5861)))
(define-fun x7267 ((x5861 Int)) Int (ite (= x5861 x5962) 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x3535 x5861)))
(define-fun x613 ((x5861 Int)) Int (ite (= x4075 x5861) x7448 (x7267 x5861)))
(define-fun x5857 ((x5861 Int)) Int (ite (= x7039 x5861) x7848 (x613 x5861)))
(define-fun x5790 ((x5861 Int)) Int (ite (= x5861 x1492) x2729 (x5857 x5861)))
(define-fun x6307 ((x5861 Int)) Int (ite (and (> (+ 0 x5962) x5861) (<= x5962 x5861)) (x1322 (+ 0 (- x5861 x5962))) (x5790 x5861)))
(define-fun x4127 ((x5861 Int)) Int (ite x4833 (x3535 x5861) (x6307 x5861)))
(define-fun x7723 ((x5861 Int)) Int (ite (= x5962 x5861) 10742207464693106059581744854972325794081737850190833080250671788038469713920 (x4127 x5861)))
(define-fun x3997 ((x5861 Int)) Int (ite (= x5861 x3415) x7032 (x7723 x5861)))
(define-fun x8970 ((x5861 Int)) Int (ite (= x5962 x5861) x2130 (x3997 x5861)))
(define-fun x8392 ((x5861 Int)) Int (ite (= x5861 x5962) x3864 (x3997 x5861)))
(define-fun x4256 ((x5861 Int)) Int (ite (= x5962 x5861) x7385 (x3997 x5861)))
(define-fun x574 ((x5861 Int)) Int (ite x8713 (ite x4240 (x3997 x5861) (x8970 x5861)) (ite x5848 (ite x7729 (x3997 x5861) (x8392 x5861)) (ite x7251 (x3997 x5861) (x4256 x5861)))))
(define-fun x8738 ((x5861 Int)) Int (ite (= x5861 x7098) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x574 x5861)))
(define-fun x6523 ((x5861 Int)) Int (ite (= x3380 x5861) x7848 (x8738 x5861)))
(define-fun x4095 ((x5861 Int)) Int (ite (= x6491 x5861) x7535 (x6523 x5861)))
(define-fun x8786 ((x5861 x3042)) Int (ite (= x2789 x5861) x3584 (x2392 x5861)))
(define-fun x1626 ((x5861 Int)) Int (ite (= x5861 0) 1 (x7079 x5861)))
(define-fun x3127 ((x5861 Int)) Int (ite (= x5861 0) 1 (x4095 x5861)))
(define-fun x7002 ((x5861 Int)) Int (ite (= x5861 x7098) 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x574 x5861)))
(define-fun x5295 ((x5861 Int)) Int (ite (= x6228 x5861) x7535 (x7002 x5861)))
(define-fun x3292 ((x5861 Int)) Int (ite (and (> (+ x7098 0) x5861) (>= x5861 x7098)) (x7602 (+ (- x5861 x7098) 0)) (x5295 x5861)))
(define-fun x5087 ((x5861 Int)) Int (ite (= x7098 x5861) 35417553099779373699389112480655434059402432070290151981503827724506945814528 (x3292 x5861)))
(define-fun x6413 ((x5861 x3042)) Int (ite (= x5861 (x7379 x7032)) x6744 (x5985 x5861)))
(define-fun x2273 ((x5861 x3042)) Int (ite (= (x7379 x7848) x5861) x6327 (x6413 x5861)))
(define-fun x6192 ((x5861 Int)) Int (ite (= x5861 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x9196 x5861)))
(define-fun x7516 ((x5861 Int)) Int (ite (= x5861 132) x7032 (x6192 x5861)))
(define-fun x8927 ((x5861 Int)) Int (ite (= 164 x5861) x8110 (x7516 x5861)))
(define-fun x1856 ((x5861 Int)) Int (ite (= x5861 196) x5518 (x8927 x5861)))
(define-fun x6306 ((x5861 x3042)) Int (ite (= x3447 x5861) x8069 (x4475 x5861)))
(define-fun x803 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x8467 x5861)))
(define-fun x7823 ((x5861 x3042)) Int (ite (= x1344 x5861) x1939 (x1401 x5861)))
(define-fun x4511 ((x5861 Int)) Int (ite (= x5861 0) 1 (x8467 x5861)))
(define-fun x868 ((x5861 x3042)) Int (ite (= x5861 x885) x7905 (x1833 x5861)))
(define-fun x553 ((x5861 Int)) Int (ite (= x5861 0) 1 (x8467 x5861)))
(define-fun x7587 ((x5861 x3042)) Int (ite (= x8191 x5861) x4596 (x3526 x5861)))
(define-fun x8391 ((x5861 Int)) Int (ite (= x5861 0) 1 (x8467 x5861)))
(define-fun x3992 ((x5861 Int)) Int (ite (= 128 x5861) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x5178 x5861)))
(define-fun x5565 ((x5861 Int)) Int (ite (= x5861 132) x7032 (x3992 x5861)))
(define-fun x8434 ((x5861 Int)) Int (ite (= 164 x5861) x5049 (x5565 x5861)))
(define-fun x2808 ((x5861 Int)) Int (ite (= x5861 196) x4912 (x8434 x5861)))
(define-fun x4613 ((x5861 x3042)) Int (ite (= x7542 x5861) x837 (x4475 x5861)))
(define-fun x8995 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x5635 x5861)))
(define-fun x1015 ((x5861 x3042)) Int (ite (= x9038 x5861) x7063 (x1401 x5861)))
(define-fun x4423 ((x5861 Int)) Int (ite (= x5861 0) 1 (x5635 x5861)))
(define-fun x957 ((x5861 x3042)) Int (ite (= x6143 x5861) x8954 (x1833 x5861)))
(define-fun x2667 ((x5861 Int)) Int (ite (= x5861 0) 1 (x5635 x5861)))
(define-fun x8147 ((x5861 x3042)) Int (ite (= x4352 x5861) x7982 (x3526 x5861)))
(define-fun x1707 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x5635 x5861)))
(define-fun x5056 ((x5861 Int)) Int (ite (= 128 x5861) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1871 x5861)))
(define-fun x4800 ((x5861 Int)) Int (ite (= x5861 132) x7032 (x5056 x5861)))
(define-fun x1379 ((x5861 Int)) Int (ite (= 164 x5861) x4633 (x4800 x5861)))
(define-fun x4344 ((x5861 Int)) Int (ite (= x5861 196) x8919 (x1379 x5861)))
(define-fun x5063 ((x5861 x3042)) Int (ite (= x5318 x5861) x7350 (x4475 x5861)))
(define-fun x7720 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x6336 x5861)))
(define-fun x5041 ((x5861 x3042)) Int (ite (= x5861 x8834) x6302 (x1401 x5861)))
(define-fun x5149 ((x5861 Int)) Int (ite (= x5861 0) 1 (x6336 x5861)))
(define-fun x6502 ((x5861 x3042)) Int (ite (= x6830 x5861) x3180 (x1833 x5861)))
(define-fun x236 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x6336 x5861)))
(define-fun x7103 ((x5861 x3042)) Int (ite (= x7503 x5861) x1110 (x3526 x5861)))
(define-fun x9234 ((x5861 Int)) Int (ite (= x5861 0) 1 (x6336 x5861)))
(define-fun x2730 ((x5861 x3042)) Int (ite x3622 (x1401 x5861) (ite x6079 (x1401 x5861) (ite x3462 (x1401 x5861) (ite x4795 (x1401 x5861) (ite x8700 (x6860 x5861) (x1401 x5861)))))))
(define-fun x9062 ((x5861 x3042)) Int (ite x1897 (x1401 x5861) (ite x5876 (ite x552 (x2730 x5861) (x4954 x5861)) (x1401 x5861))))
(define-fun x4878 ((x5861 x3042)) Int (ite x7933 (x9062 x5861) (ite x1527 (x1401 x5861) (ite x1575 (x1401 x5861) (ite x3299 (x9062 x5861) (x1401 x5861))))))
(define-fun x9069 ((x5861 x3042)) Int (ite x4915 (x4878 x5861) (x9062 x5861)))
(define-fun x4582 ((x5861 x3042)) Int (ite x5577 (x1401 x5861) (ite x3243 (x1401 x5861) (ite x8548 (x1401 x5861) (ite x918 (x1401 x5861) (ite x37 (x6038 x5861) (x1401 x5861)))))))
(define-fun x1240 ((x5861 x3042)) Int (ite x3982 (x1401 x5861) (ite x6178 (ite x1154 (x4582 x5861) (x6430 x5861)) (x1401 x5861))))
(define-fun x3154 ((x5861 x3042)) Int (ite x5613 (x1240 x5861) (ite x8288 (x1401 x5861) (ite x5196 (x1401 x5861) (ite x7111 (x1240 x5861) (x1401 x5861))))))
(define-fun x6716 ((x5861 x3042)) Int (ite x6668 (x3154 x5861) (x1240 x5861)))
(define-fun x1529 ((x5861 x3042)) Int (ite x8743 (x1401 x5861) (ite x3288 (x1401 x5861) (ite x6245 (x1401 x5861) (ite x2195 (x1401 x5861) (ite x8780 (x7623 x5861) (x1401 x5861)))))))
(define-fun x635 ((x5861 x3042)) Int (ite x1181 (x1401 x5861) (ite x2650 (ite x572 (x1529 x5861) (x8224 x5861)) (x1401 x5861))))
(define-fun x6129 ((x5861 x3042)) Int (ite x2885 (x635 x5861) (ite x8727 (x1401 x5861) (ite x8593 (x1401 x5861) (ite x1510 (x635 x5861) (x1401 x5861))))))
(define-fun x8756 ((x5861 x3042)) Int (ite x7781 (x6129 x5861) (x635 x5861)))
(define-fun x3611 ((x5861 x3042)) Int (ite x8306 (x9069 x5861) (ite x7280 (x6716 x5861) (x8756 x5861))))
(define-fun x7309 ((x5861 x3042)) Int (ite x1634 (x3611 x5861) (ite x3911 (x1401 x5861) (x3611 x5861))))
(define-fun x3161 ((x5861 x3042)) Int (ite x1336 (x1833 x5861) (ite x3362 (x1833 x5861) (ite x3833 (x1833 x5861) (ite x3064 (x1833 x5861) (ite x7526 (x84 x5861) (x1833 x5861)))))))
(define-fun x2163 ((x5861 x3042)) Int (ite x1897 (x1833 x5861) (ite x5876 (x1833 x5861) (ite x4438 (ite x1785 (x3161 x5861) (x7927 x5861)) (x1833 x5861)))))
(define-fun x6360 ((x5861 x3042)) Int (ite x7933 (x2163 x5861) (ite x1527 (x1833 x5861) (ite x1575 (x1833 x5861) (ite x3299 (x2163 x5861) (x1833 x5861))))))
(define-fun x2455 ((x5861 x3042)) Int (ite x4915 (x6360 x5861) (x2163 x5861)))
(define-fun x3315 ((x5861 x3042)) Int (ite x6434 (x1833 x5861) (ite x480 (x1833 x5861) (ite x6226 (x1833 x5861) (ite x6518 (x1833 x5861) (ite x6329 (x3771 x5861) (x1833 x5861)))))))
(define-fun x415 ((x5861 x3042)) Int (ite x3982 (x1833 x5861) (ite x6178 (x1833 x5861) (ite x5212 (ite x5964 (x3315 x5861) (x3664 x5861)) (x1833 x5861)))))
(define-fun x4530 ((x5861 x3042)) Int (ite x5613 (x415 x5861) (ite x8288 (x1833 x5861) (ite x5196 (x1833 x5861) (ite x7111 (x415 x5861) (x1833 x5861))))))
(define-fun x2347 ((x5861 x3042)) Int (ite x6668 (x4530 x5861) (x415 x5861)))
(define-fun x3727 ((x5861 x3042)) Int (ite x3021 (x1833 x5861) (ite x2886 (x1833 x5861) (ite x3177 (x1833 x5861) (ite x7427 (x1833 x5861) (ite x1127 (x8582 x5861) (x1833 x5861)))))))
(define-fun x9185 ((x5861 x3042)) Int (ite x1181 (x1833 x5861) (ite x2650 (x1833 x5861) (ite x2547 (ite x1820 (x3727 x5861) (x2503 x5861)) (x1833 x5861)))))
(define-fun x7690 ((x5861 x3042)) Int (ite x2885 (x9185 x5861) (ite x8727 (x1833 x5861) (ite x8593 (x1833 x5861) (ite x1510 (x9185 x5861) (x1833 x5861))))))
(define-fun x6032 ((x5861 x3042)) Int (ite x7781 (x7690 x5861) (x9185 x5861)))
(define-fun x5965 ((x5861 x3042)) Int (ite x8306 (x2455 x5861) (ite x7280 (x2347 x5861) (x6032 x5861))))
(define-fun x7941 ((x5861 x3042)) Int (ite x1634 (x5965 x5861) (ite x3911 (x1833 x5861) (x5965 x5861))))
(define-fun x2476 ((x5861 x3042)) Int (ite x1462 (x3526 x5861) (ite x1036 (x3526 x5861) (ite x7500 (x3526 x5861) (ite x7900 (x3526 x5861) (ite x3720 (x5016 x5861) (x3526 x5861)))))))
(define-fun x9077 ((x5861 x3042)) Int (ite x1897 (x3526 x5861) (ite x5876 (x3526 x5861) (ite x4438 (x3526 x5861) (ite x6131 (x2476 x5861) (x2845 x5861))))))
(define-fun x3030 ((x5861 x3042)) Int (ite x7933 (x9077 x5861) (ite x1527 (x3526 x5861) (ite x1575 (x3526 x5861) (ite x3299 (x9077 x5861) (x3526 x5861))))))
(define-fun x2397 ((x5861 x3042)) Int (ite x4915 (x3030 x5861) (x9077 x5861)))
(define-fun x2167 ((x5861 x3042)) Int (ite x8008 (x3526 x5861) (ite x3850 (x3526 x5861) (ite x549 (x3526 x5861) (ite x2964 (x3526 x5861) (ite x2223 (x5867 x5861) (x3526 x5861)))))))
(define-fun x2049 ((x5861 x3042)) Int (ite x3982 (x3526 x5861) (ite x6178 (x3526 x5861) (ite x5212 (x3526 x5861) (ite x2026 (x2167 x5861) (x4343 x5861))))))
(define-fun x5538 ((x5861 x3042)) Int (ite x5613 (x2049 x5861) (ite x8288 (x3526 x5861) (ite x5196 (x3526 x5861) (ite x7111 (x2049 x5861) (x3526 x5861))))))
(define-fun x5083 ((x5861 x3042)) Int (ite x6668 (x5538 x5861) (x2049 x5861)))
(define-fun x5999 ((x5861 x3042)) Int (ite x4923 (x3526 x5861) (ite x7479 (x3526 x5861) (ite x7153 (x3526 x5861) (ite x4397 (x3526 x5861) (ite x7557 (x5378 x5861) (x3526 x5861)))))))
(define-fun x899 ((x5861 x3042)) Int (ite x1181 (x3526 x5861) (ite x2650 (x3526 x5861) (ite x2547 (x3526 x5861) (ite x2692 (x5999 x5861) (x9183 x5861))))))
(define-fun x141 ((x5861 x3042)) Int (ite x2885 (x899 x5861) (ite x8727 (x3526 x5861) (ite x8593 (x3526 x5861) (ite x1510 (x899 x5861) (x3526 x5861))))))
(define-fun x2050 ((x5861 x3042)) Int (ite x7781 (x141 x5861) (x899 x5861)))
(define-fun x6634 ((x5861 x3042)) Int (ite x8306 (x2397 x5861) (ite x7280 (x5083 x5861) (x2050 x5861))))
(define-fun x9150 ((x5861 x3042)) Int (ite x1634 (x6634 x5861) (ite x3911 (x3526 x5861) (x6634 x5861))))
(define-fun x4097 ((x5861 Int)) Int (ite (= x5861 0) 0 (x4839 x5861)))
(define-fun x208 ((x5861 Int)) Int (ite x4915 (x4839 x5861) (x4097 x5861)))
(define-fun x3191 ((x5861 Int)) Int (ite (= x5861 0) 0 (x4839 x5861)))
(define-fun x4473 ((x5861 Int)) Int (ite x6668 (x4839 x5861) (x3191 x5861)))
(define-fun x2806 ((x5861 Int)) Int (ite (= x5861 0) 0 (x4839 x5861)))
(define-fun x3295 ((x5861 Int)) Int (ite x7781 (x4839 x5861) (x2806 x5861)))
(define-fun x491 ((x5861 Int)) Int (ite x8306 (x208 x5861) (ite x7280 (x4473 x5861) (x3295 x5861))))
(define-fun x4950 ((x5861 Int)) Int (ite x1634 (x491 x5861) (ite x3911 (x2454 x5861) (x491 x5861))))
(define-fun x6004 ((x5861 x3042)) Int (ite x4060 (x3716 x5861) (ite x7298 (x1647 x5861) (ite x1902 (x4475 x5861) (ite x88 (x4475 x5861) (ite x3890 (x4475 x5861) (ite x8838 (x4475 x5861) (ite x8699 (x1647 x5861) (ite x2682 (x3716 x5861) (x4475 x5861))))))))))
(define-fun x5180 ((x5861 x3042)) Int (ite x1897 (ite x7595 (x6004 x5861) (x3716 x5861)) (x4475 x5861)))
(define-fun x2768 ((x5861 x3042)) Int (ite x7933 (x5180 x5861) (ite x1527 (x4475 x5861) (ite x1575 (x4475 x5861) (ite x3299 (x5180 x5861) (x4475 x5861))))))
(define-fun x3661 ((x5861 x3042)) Int (ite x4915 (x2768 x5861) (x5180 x5861)))
(define-fun x3891 ((x5861 x3042)) Int (ite x3672 (x9000 x5861) (ite x4812 (x6296 x5861) (ite x5864 (x4475 x5861) (ite x3837 (x4475 x5861) (ite x4769 (x4475 x5861) (ite x8169 (x4475 x5861) (ite x2037 (x6296 x5861) (ite x3125 (x9000 x5861) (x4475 x5861))))))))))
(define-fun x4892 ((x5861 x3042)) Int (ite x3982 (ite x6305 (x3891 x5861) (x9000 x5861)) (x4475 x5861)))
(define-fun x3913 ((x5861 x3042)) Int (ite x5613 (x4892 x5861) (ite x8288 (x4475 x5861) (ite x5196 (x4475 x5861) (ite x7111 (x4892 x5861) (x4475 x5861))))))
(define-fun x2850 ((x5861 x3042)) Int (ite x6668 (x3913 x5861) (x4892 x5861)))
(define-fun x4350 ((x5861 x3042)) Int (ite x300 (x2622 x5861) (ite x9245 (x6913 x5861) (ite x2675 (x4475 x5861) (ite x8154 (x4475 x5861) (ite x7918 (x4475 x5861) (ite x677 (x4475 x5861) (ite x3175 (x6913 x5861) (ite x600 (x2622 x5861) (x4475 x5861))))))))))
(define-fun x6411 ((x5861 x3042)) Int (ite x1181 (ite x5369 (x4350 x5861) (x2622 x5861)) (x4475 x5861)))
(define-fun x3342 ((x5861 x3042)) Int (ite x2885 (x6411 x5861) (ite x8727 (x4475 x5861) (ite x8593 (x4475 x5861) (ite x1510 (x6411 x5861) (x4475 x5861))))))
(define-fun x4354 ((x5861 x3042)) Int (ite x7781 (x3342 x5861) (x6411 x5861)))
(define-fun x2481 ((x5861 x3042)) Int (ite x8306 (x3661 x5861) (ite x7280 (x2850 x5861) (x4354 x5861))))
(define-fun x5609 ((x5861 x3042)) Int (ite x1634 (x2481 x5861) (ite x3911 (x4475 x5861) (x2481 x5861))))
(define-fun x2940 ((x5861 Int)) Int (ite (= x5861 0) 0 (x5517 x5861)))
(define-fun x4480 ((x5861 Int)) Int (ite x8339 (x5517 x5861) (x2940 x5861)))
(define-fun x6185 ((x5861 Int)) Int (ite (= 0 x5861) 0 (x5517 x5861)))
(define-fun x2250 ((x5861 Int)) Int (ite x9037 (x5517 x5861) (x6185 x5861)))
(define-fun x7744 ((x5861 Int)) Int (ite (= x5861 0) 0 (x5517 x5861)))
(define-fun x7770 ((x5861 Int)) Int (ite x5119 (x5517 x5861) (x7744 x5861)))
(define-fun x3387 ((x5861 Int)) Int (ite x5726 (x4480 x5861) (ite x8483 (x2250 x5861) (x7770 x5861))))
(define-fun x5945 ((x5861 Int)) Int (ite x7828 (x3387 x5861) (ite x2119 (x8337 x5861) (x3387 x5861))))
(define-fun x9277 ((x5861 Int)) Int (ite x2269 (x4095 x5861) (x3127 x5861)))
(define-fun x2110 ((x5861 Int)) Int (ite (= x5861 x7098) 6539370208772218570076773595062200405109424842860869254164860851635934461952 (x9277 x5861)))
(define-fun x5767 ((x5861 Int)) Int (ite (= x7415 x5861) x7535 (x2110 x5861)))
(define-fun x1339 ((x5861 Int)) Int (ite (= x5861 x7098) 0 (x5767 x5861)))
(define-fun x7658 ((x5861 Int)) Int (ite (= x5861 x7098) 0 (x5767 x5861)))
(define-fun x8505 ((x5861 Int)) Int (ite (= x5861 x7098) 0 (x5767 x5861)))
(define-fun x4929 ((x5861 Int)) Int (ite x3881 (ite x2638 (x5767 x5861) (x1339 x5861)) (ite x8081 (ite x2567 (x5767 x5861) (x7658 x5861)) (ite x5754 (x5767 x5861) (x8505 x5861)))))
(define-fun x4286 ((x5861 x3042)) Int (ite (= x5861 x8343) x443 (x1833 x5861)))
(define-fun x7668 ((x5861 x3042)) Int (ite x7003 (x1833 x5861) (ite x7034 (x1833 x5861) (ite x2614 (x1833 x5861) (ite x7304 (x1833 x5861) (ite x9104 (x4286 x5861) (x1833 x5861)))))))
(define-fun x5118 ((x5861 x3042)) Int (ite (= x5861 x6416) x7481 (x4286 x5861)))
(define-fun x5829 ((x5861 x3042)) Int (ite x4821 (x1833 x5861) (ite x5568 (x1833 x5861) (ite x227 (ite x5920 (x7668 x5861) (x5118 x5861)) (x1833 x5861)))))
(define-fun x821 ((x5861 x3042)) Int (ite x7272 (x5829 x5861) (ite x6126 (x1833 x5861) (ite x5659 (x1833 x5861) (ite x3774 (x1833 x5861) (ite x4009 (x5829 x5861) (x1833 x5861)))))))
(define-fun x9140 ((x5861 x3042)) Int (ite x1437 (x821 x5861) (x5829 x5861)))
(define-fun x3238 ((x5861 x3042)) Int (ite (= x1057 x5861) x7145 (x1833 x5861)))
(define-fun x3279 ((x5861 x3042)) Int (ite x8231 (x1833 x5861) (ite x3455 (x1833 x5861) (ite x6943 (x1833 x5861) (ite x5214 (x1833 x5861) (ite x3449 (x3238 x5861) (x1833 x5861)))))))
(define-fun x4085 ((x5861 x3042)) Int (ite (= x9223 x5861) x6006 (x3238 x5861)))
(define-fun x2074 ((x5861 x3042)) Int (ite x7977 (x1833 x5861) (ite x2771 (x1833 x5861) (ite x4188 (ite x2546 (x3279 x5861) (x4085 x5861)) (x1833 x5861)))))
(define-fun x7948 ((x5861 x3042)) Int (ite x168 (x2074 x5861) (ite x3742 (x1833 x5861) (ite x7252 (x1833 x5861) (ite x3552 (x1833 x5861) (ite x564 (x2074 x5861) (x1833 x5861)))))))
(define-fun x5928 ((x5861 x3042)) Int (ite x214 (x7948 x5861) (x2074 x5861)))
(define-fun x892 ((x5861 x3042)) Int (ite (= x5861 x698) x3026 (x1833 x5861)))
(define-fun x4731 ((x5861 x3042)) Int (ite x335 (x1833 x5861) (ite x5987 (x1833 x5861) (ite x5901 (x1833 x5861) (ite x6188 (x1833 x5861) (ite x4231 (x892 x5861) (x1833 x5861)))))))
(define-fun x7478 ((x5861 x3042)) Int (ite (= x6802 x5861) x4561 (x892 x5861)))
(define-fun x8006 ((x5861 x3042)) Int (ite x6584 (x1833 x5861) (ite x1817 (x1833 x5861) (ite x9187 (ite x2108 (x4731 x5861) (x7478 x5861)) (x1833 x5861)))))
(define-fun x3185 ((x5861 x3042)) Int (ite x2404 (x8006 x5861) (ite x3155 (x1833 x5861) (ite x8931 (x1833 x5861) (ite x9095 (x1833 x5861) (ite x3988 (x8006 x5861) (x1833 x5861)))))))
(define-fun x8038 ((x5861 x3042)) Int (ite x3711 (x3185 x5861) (x8006 x5861)))
(define-fun x248 ((x5861 x3042)) Int (ite x597 (x9140 x5861) (ite x1361 (x5928 x5861) (x8038 x5861))))
(define-fun x632 ((x5861 x3042)) Int (ite x5556 (x1833 x5861) (ite x922 (x248 x5861) (x7941 x5861))))
(define-fun x1662 ((x5861 x3042)) Int (ite (= x5861 x4257) x4282 (x3526 x5861)))
(define-fun x919 ((x5861 x3042)) Int (ite x8929 (x3526 x5861) (ite x2182 (x3526 x5861) (ite x1532 (x3526 x5861) (ite x8521 (x3526 x5861) (ite x2177 (x1662 x5861) (x3526 x5861)))))))
(define-fun x8374 ((x5861 x3042)) Int (ite (= x5860 x5861) x1884 (x1662 x5861)))
(define-fun x661 ((x5861 x3042)) Int (ite x4821 (x3526 x5861) (ite x5568 (x3526 x5861) (ite x227 (x3526 x5861) (ite x4793 (x919 x5861) (x8374 x5861))))))
(define-fun x5697 ((x5861 x3042)) Int (ite x7272 (x661 x5861) (ite x6126 (x3526 x5861) (ite x5659 (x3526 x5861) (ite x3774 (x3526 x5861) (ite x4009 (x661 x5861) (x3526 x5861)))))))
(define-fun x3413 ((x5861 x3042)) Int (ite x1437 (x5697 x5861) (x661 x5861)))
(define-fun x4049 ((x5861 x3042)) Int (ite (= x1227 x5861) x8076 (x3526 x5861)))
(define-fun x8366 ((x5861 x3042)) Int (ite x2417 (x3526 x5861) (ite x9014 (x3526 x5861) (ite x1969 (x3526 x5861) (ite x507 (x3526 x5861) (ite x5155 (x4049 x5861) (x3526 x5861)))))))
(define-fun x1993 ((x5861 x3042)) Int (ite (= x5861 x6408) x7779 (x4049 x5861)))
(define-fun x1228 ((x5861 x3042)) Int (ite x7977 (x3526 x5861) (ite x2771 (x3526 x5861) (ite x4188 (x3526 x5861) (ite x5317 (x8366 x5861) (x1993 x5861))))))
(define-fun x1429 ((x5861 x3042)) Int (ite x168 (x1228 x5861) (ite x3742 (x3526 x5861) (ite x7252 (x3526 x5861) (ite x3552 (x3526 x5861) (ite x564 (x1228 x5861) (x3526 x5861)))))))
(define-fun x4617 ((x5861 x3042)) Int (ite x214 (x1429 x5861) (x1228 x5861)))
(define-fun x4487 ((x5861 x3042)) Int (ite (= x8928 x5861) x7577 (x3526 x5861)))
(define-fun x8860 ((x5861 x3042)) Int (ite x1697 (x3526 x5861) (ite x7598 (x3526 x5861) (ite x1187 (x3526 x5861) (ite x6768 (x3526 x5861) (ite x9186 (x4487 x5861) (x3526 x5861)))))))
(define-fun x3551 ((x5861 x3042)) Int (ite (= x5861 x1103) x1318 (x4487 x5861)))
(define-fun x5057 ((x5861 x3042)) Int (ite x6584 (x3526 x5861) (ite x1817 (x3526 x5861) (ite x9187 (x3526 x5861) (ite x5799 (x8860 x5861) (x3551 x5861))))))
(define-fun x8992 ((x5861 x3042)) Int (ite x2404 (x5057 x5861) (ite x3155 (x3526 x5861) (ite x8931 (x3526 x5861) (ite x9095 (x3526 x5861) (ite x3988 (x5057 x5861) (x3526 x5861)))))))
(define-fun x7219 ((x5861 x3042)) Int (ite x3711 (x8992 x5861) (x5057 x5861)))
(define-fun x6139 ((x5861 x3042)) Int (ite x597 (x3413 x5861) (ite x1361 (x4617 x5861) (x7219 x5861))))
(define-fun x4281 ((x5861 x3042)) Int (ite x5556 (x3526 x5861) (ite x922 (x6139 x5861) (x9150 x5861))))
(define-fun x2047 ((x5861 x3042)) Int (ite (= x8449 x5861) x97 (x4475 x5861)))
(define-fun x3267 ((x5861 x3042)) Int (ite (= x5861 x2412) x5017 (x2047 x5861)))
(define-fun x2280 ((x5861 x3042)) Int (ite x5406 (x3267 x5861) (ite x6561 (x2047 x5861) (ite x8492 (x4475 x5861) (ite x3630 (x4475 x5861) (ite x4098 (x4475 x5861) (ite x6493 (x4475 x5861) (ite x967 (x2047 x5861) (ite x4585 (x3267 x5861) (x4475 x5861))))))))))
(define-fun x5164 ((x5861 x3042)) Int (ite x4821 (ite x7708 (x2280 x5861) (x3267 x5861)) (x4475 x5861)))
(define-fun x4868 ((x5861 x3042)) Int (ite x7272 (x5164 x5861) (ite x6126 (x4475 x5861) (ite x5659 (x4475 x5861) (ite x3774 (x4475 x5861) (ite x4009 (x5164 x5861) (x4475 x5861)))))))
(define-fun x6343 ((x5861 x3042)) Int (ite x1437 (x4868 x5861) (x5164 x5861)))
(define-fun x5591 ((x5861 x3042)) Int (ite (= x6890 x5861) x7112 (x4475 x5861)))
(define-fun x6285 ((x5861 x3042)) Int (ite (= x5861 x3433) x1349 (x5591 x5861)))
(define-fun x1754 ((x5861 x3042)) Int (ite x935 (x6285 x5861) (ite x2490 (x5591 x5861) (ite x3226 (x4475 x5861) (ite x5994 (x4475 x5861) (ite x1418 (x4475 x5861) (ite x645 (x4475 x5861) (ite x8086 (x5591 x5861) (ite x2329 (x6285 x5861) (x4475 x5861))))))))))
(define-fun x7712 ((x5861 x3042)) Int (ite x7977 (ite x2915 (x1754 x5861) (x6285 x5861)) (x4475 x5861)))
(define-fun x1400 ((x5861 x3042)) Int (ite x168 (x7712 x5861) (ite x3742 (x4475 x5861) (ite x7252 (x4475 x5861) (ite x3552 (x4475 x5861) (ite x564 (x7712 x5861) (x4475 x5861)))))))
(define-fun x1968 ((x5861 x3042)) Int (ite x214 (x1400 x5861) (x7712 x5861)))
(define-fun x7509 ((x5861 x3042)) Int (ite (= x6353 x5861) x4363 (x4475 x5861)))
(define-fun x6344 ((x5861 x3042)) Int (ite (= x7166 x5861) x4971 (x7509 x5861)))
(define-fun x912 ((x5861 x3042)) Int (ite x1264 (x6344 x5861) (ite x6789 (x7509 x5861) (ite x9202 (x4475 x5861) (ite x5542 (x4475 x5861) (ite x7209 (x4475 x5861) (ite x6736 (x4475 x5861) (ite x2497 (x7509 x5861) (ite x3970 (x6344 x5861) (x4475 x5861))))))))))
(define-fun x5411 ((x5861 x3042)) Int (ite x6584 (ite x7284 (x912 x5861) (x6344 x5861)) (x4475 x5861)))
(define-fun x9177 ((x5861 x3042)) Int (ite x2404 (x5411 x5861) (ite x3155 (x4475 x5861) (ite x8931 (x4475 x5861) (ite x9095 (x4475 x5861) (ite x3988 (x5411 x5861) (x4475 x5861)))))))
(define-fun x1100 ((x5861 x3042)) Int (ite x3711 (x9177 x5861) (x5411 x5861)))
(define-fun x8660 ((x5861 x3042)) Int (ite x597 (x6343 x5861) (ite x1361 (x1968 x5861) (x1100 x5861))))
(define-fun x3764 ((x5861 x3042)) Int (ite x5556 (x4475 x5861) (ite x922 (x8660 x5861) (x5609 x5861))))
(define-fun x6195 ((x5861 x3042)) Int (ite (= x5861 x8022) x8108 (x1401 x5861)))
(define-fun x8734 ((x5861 x3042)) Int (ite x26 (x1401 x5861) (ite x5298 (x1401 x5861) (ite x5588 (x1401 x5861) (ite x8225 (x1401 x5861) (ite x1446 (x6195 x5861) (x1401 x5861)))))))
(define-fun x5488 ((x5861 x3042)) Int (ite (= x5861 x8741) x2336 (x6195 x5861)))
(define-fun x7359 ((x5861 x3042)) Int (ite x4821 (x1401 x5861) (ite x5568 (ite x575 (x8734 x5861) (x5488 x5861)) (x1401 x5861))))
(define-fun x4309 ((x5861 x3042)) Int (ite x7272 (x7359 x5861) (ite x6126 (x1401 x5861) (ite x5659 (x1401 x5861) (ite x3774 (x1401 x5861) (ite x4009 (x7359 x5861) (x1401 x5861)))))))
(define-fun x1837 ((x5861 x3042)) Int (ite x1437 (x4309 x5861) (x7359 x5861)))
(define-fun x3539 ((x5861 x3042)) Int (ite (= x5861 x3819) x64 (x1401 x5861)))
(define-fun x4066 ((x5861 x3042)) Int (ite x7819 (x1401 x5861) (ite x2601 (x1401 x5861) (ite x2249 (x1401 x5861) (ite x60 (x1401 x5861) (ite x4660 (x3539 x5861) (x1401 x5861)))))))
(define-fun x2571 ((x5861 x3042)) Int (ite (= x5861 x2581) x2009 (x3539 x5861)))
(define-fun x1638 ((x5861 x3042)) Int (ite x7977 (x1401 x5861) (ite x2771 (ite x90 (x4066 x5861) (x2571 x5861)) (x1401 x5861))))
(define-fun x8254 ((x5861 x3042)) Int (ite x168 (x1638 x5861) (ite x3742 (x1401 x5861) (ite x7252 (x1401 x5861) (ite x3552 (x1401 x5861) (ite x564 (x1638 x5861) (x1401 x5861)))))))
(define-fun x1555 ((x5861 x3042)) Int (ite x214 (x8254 x5861) (x1638 x5861)))
(define-fun x8982 ((x5861 x3042)) Int (ite (= x5861 x4811) x5590 (x1401 x5861)))
(define-fun x4084 ((x5861 x3042)) Int (ite x8625 (x1401 x5861) (ite x1672 (x1401 x5861) (ite x3586 (x1401 x5861) (ite x1248 (x1401 x5861) (ite x5682 (x8982 x5861) (x1401 x5861)))))))
(define-fun x951 ((x5861 x3042)) Int (ite (= x463 x5861) x9053 (x8982 x5861)))
(define-fun x7882 ((x5861 x3042)) Int (ite x6584 (x1401 x5861) (ite x1817 (ite x3633 (x4084 x5861) (x951 x5861)) (x1401 x5861))))
(define-fun x6647 ((x5861 x3042)) Int (ite x2404 (x7882 x5861) (ite x3155 (x1401 x5861) (ite x8931 (x1401 x5861) (ite x9095 (x1401 x5861) (ite x3988 (x7882 x5861) (x1401 x5861)))))))
(define-fun x1416 ((x5861 x3042)) Int (ite x3711 (x6647 x5861) (x7882 x5861)))
(define-fun x2971 ((x5861 x3042)) Int (ite x597 (x1837 x5861) (ite x1361 (x1555 x5861) (x1416 x5861))))
(define-fun x1556 ((x5861 x3042)) Int (ite x5556 (x1401 x5861) (ite x922 (x2971 x5861) (x7309 x5861))))
(define-fun x1931 ((x5861 Int)) Int (ite (= x5861 0) 1 (x845 x5861)))
(define-fun x1302 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x845 x5861)))
(define-fun x1557 ((x5861 Int)) Int (ite (= x5861 0) 1 (x845 x5861)))
(define-fun x7951 ((x5861 x3042)) Int (ite (= x7004 x5861) x7462 (x7499 x5861)))
(define-fun x2154 ((x5861 x3042)) Int (ite x728 (x7499 x5861) (x7951 x5861)))
(define-fun x8065 ((x5861 x3042)) Int (ite (= x606 x5861) 0 (x2154 x5861)))
(define-fun x8640 ((x5861 x3042)) Int (ite x2529 (x7499 x5861) (x8065 x5861)))
(define-fun x4224 ((x5861 x3042)) Int (ite (= x5861 x8194) x1493 (x8640 x5861)))
(define-fun x5032 ((x5861 x3042)) Int (ite (= x5861 x1135) 0 (x8640 x5861)))
(define-fun x7890 ((x5861 x3042)) Int (ite (= x8662 x5861) x2691 (x8640 x5861)))
(define-fun x482 ((x5861 x3042)) Int (ite (= x5861 x8282) x5308 (x7890 x5861)))
(define-fun x4906 ((x5861 x3042)) Int (ite (= x5861 x8502) 0 (x8640 x5861)))
(define-fun x6835 ((x5861 x3042)) Int (ite (= x5861 x7701) x5308 (x4906 x5861)))
(define-fun x6464 ((x5861 x3042)) Int (ite x210 (x4224 x5861) (ite x3293 (x5032 x5861) (ite x7636 (x482 x5861) (x6835 x5861)))))
(define-fun x7850 ((x5861 x3042)) Int (ite x2148 (x7499 x5861) (ite x8466 (x8640 x5861) (x6464 x5861))))
(define-fun x7811 ((x5861 x3042)) Int (ite (= x5861 x905) x476 (x2847 x5861)))
(define-fun x4434 ((x5861 x3042)) Int (ite x6102 (x2847 x5861) (x7811 x5861)))
(define-fun x8198 ((x5861 x3042)) Int (ite (= x6827 x5861) 0 (x4434 x5861)))
(define-fun x8039 ((x5861 x3042)) Int (ite x2529 (x2847 x5861) (x8198 x5861)))
(define-fun x6230 ((x5861 x3042)) Int (ite (= x6199 x5861) 0 (x8039 x5861)))
(define-fun x6912 ((x5861 x3042)) Int (ite (= x5861 x373) x5308 (x6230 x5861)))
(define-fun x6720 ((x5861 x3042)) Int (ite (= x5474 x5861) 0 (x8039 x5861)))
(define-fun x5313 ((x5861 x3042)) Int (ite (= x5861 x4082) x3501 (x8039 x5861)))
(define-fun x6428 ((x5861 x3042)) Int (ite (= x7140 x5861) x5308 (x5313 x5861)))
(define-fun x5355 ((x5861 x3042)) Int (ite (= x5861 x3680) x3501 (x8039 x5861)))
(define-fun x3830 ((x5861 x3042)) Int (ite x210 (x6912 x5861) (ite x3293 (x6720 x5861) (ite x7636 (x6428 x5861) (x5355 x5861)))))
(define-fun x2241 ((x5861 x3042)) Int (ite x2148 (x2847 x5861) (ite x8466 (x8039 x5861) (x3830 x5861))))
(define-fun x548 ((x5861 x3042)) Int (ite (= x5861 x6060) 0 (x6996 x5861)))
(define-fun x8228 ((x5861 x3042)) Int (ite x2529 (x6996 x5861) (x548 x5861)))
(define-fun x8316 ((x5861 x3042)) Int (ite (= x5861 x4274) x5077 (x8228 x5861)))
(define-fun x9010 ((x5861 x3042)) Int (ite (= x5861 x7537) x5077 (x8228 x5861)))
(define-fun x3801 ((x5861 x3042)) Int (ite (= x5906 x5861) x5077 (x8228 x5861)))
(define-fun x3575 ((x5861 x3042)) Int (ite (= x5861 x7327) x5077 (x8228 x5861)))
(define-fun x1955 ((x5861 x3042)) Int (ite x210 (x8316 x5861) (ite x3293 (x9010 x5861) (ite x7636 (x3801 x5861) (x3575 x5861)))))
(define-fun x3906 ((x5861 x3042)) Int (ite x2148 (x6996 x5861) (ite x8466 (x8228 x5861) (x1955 x5861))))
(define-fun x8619 ((x5861 x3042)) Int (ite (= x5861 x7353) x476 (x8689 x5861)))
(define-fun x5012 ((x5861 x3042)) Int (ite x2529 (x8689 x5861) (ite x6102 (x8619 x5861) (x8689 x5861))))
(define-fun x7229 ((x5861 x3042)) Int (ite (= x6923 x5861) x5308 (x5012 x5861)))
(define-fun x6956 ((x5861 x3042)) Int (ite (= x6923 x5861) x5308 (x5012 x5861)))
(define-fun x6842 ((x5861 x3042)) Int (ite x210 (x5012 x5861) (ite x3293 (x7229 x5861) (ite x7636 (x5012 x5861) (x6956 x5861)))))
(define-fun x4562 ((x5861 x3042)) Int (ite x2148 (x8689 x5861) (ite x8466 (x5012 x5861) (x6842 x5861))))
(define-fun x3082 ((x5861 x3042)) Int (ite (= x5861 x6967) x6457 (x4562 x5861)))
(define-fun x2979 ((x5861 x3042)) Int (ite (= x6921 x5861) x6457 (x2241 x5861)))
(define-fun x3547 ((x5861 x3042)) Int (ite (= x5861 x6702) x7462 (x8636 x5861)))
(define-fun x4690 ((x5861 x3042)) Int (ite x2529 (x8636 x5861) (ite x728 (x3547 x5861) (x8636 x5861))))
(define-fun x8152 ((x5861 x3042)) Int (ite (= x2969 x5861) x5308 (x4690 x5861)))
(define-fun x9195 ((x5861 x3042)) Int (ite (= x5861 x1978) x5308 (x4690 x5861)))
(define-fun x3565 ((x5861 x3042)) Int (ite x210 (x8152 x5861) (ite x3293 (x9195 x5861) (x4690 x5861))))
(define-fun x5866 ((x5861 x3042)) Int (ite x2148 (x8636 x5861) (ite x8466 (x4690 x5861) (x3565 x5861))))
(define-fun x2754 ((x5861 x3042)) Int (ite (= x1393 x5861) x8106 (x5866 x5861)))
(define-fun x1623 ((x5861 x3042)) Int (ite x541 (x5866 x5861) (ite x3146 (x2754 x5861) (x5866 x5861))))
(define-fun x99 ((x5861 x3042)) Int (ite x541 (x4562 x5861) (ite x5496 (x3082 x5861) (x4562 x5861))))
(define-fun x3114 ((x5861 x3042)) Int (ite x5496 (x2241 x5861) (x2979 x5861)))
(define-fun x5619 ((x5861 x3042)) Int (ite (= x4470 x5861) 0 (x3114 x5861)))
(define-fun x74 ((x5861 x3042)) Int (ite x541 (x2241 x5861) (x5619 x5861)))
(define-fun x2552 ((x5861 x3042)) Int (ite (= x5816 x5861) 0 (x3906 x5861)))
(define-fun x5604 ((x5861 x3042)) Int (ite x541 (x3906 x5861) (x2552 x5861)))
(define-fun x8451 ((x5861 x3042)) Int (ite (= x4778 x5861) x8106 (x7850 x5861)))
(define-fun x256 ((x5861 x3042)) Int (ite x3146 (x7850 x5861) (x8451 x5861)))
(define-fun x6276 ((x5861 x3042)) Int (ite (= x2990 x5861) 0 (x256 x5861)))
(define-fun x1542 ((x5861 x3042)) Int (ite x541 (x7850 x5861) (x6276 x5861)))
(define-fun x4235 ((x5861 x3042)) Int (ite (= x9172 x5861) x3638 (x2315 x5861)))
(define-fun x6811 ((x5861 x3042)) Int (ite x4758 (x2315 x5861) (x4235 x5861)))
(define-fun x5329 ((x5861 x3042)) Int (ite (= x5861 x5847) 0 (x6811 x5861)))
(define-fun x2059 ((x5861 x3042)) Int (ite x7601 (x2315 x5861) (x5329 x5861)))
(define-fun x4937 ((x5861 x3042)) Int (ite (= x5861 x2597) x5123 (x2059 x5861)))
(define-fun x6651 ((x5861 x3042)) Int (ite (= x5861 x5249) 0 (x2059 x5861)))
(define-fun x871 ((x5861 x3042)) Int (ite (= x5861 x4790) x8007 (x2059 x5861)))
(define-fun x6472 ((x5861 x3042)) Int (ite (= x4164 x5861) x5308 (x871 x5861)))
(define-fun x1675 ((x5861 x3042)) Int (ite (= x5861 x8574) 0 (x2059 x5861)))
(define-fun x8123 ((x5861 x3042)) Int (ite (= x5861 x4167) x5308 (x1675 x5861)))
(define-fun x7912 ((x5861 x3042)) Int (ite x6479 (x4937 x5861) (ite x3083 (x6651 x5861) (ite x1826 (x6472 x5861) (x8123 x5861)))))
(define-fun x6342 ((x5861 x3042)) Int (ite x458 (x2315 x5861) (ite x8911 (x2059 x5861) (x7912 x5861))))
(define-fun x4245 ((x5861 x3042)) Int (ite (= x6560 x5861) x6599 (x2184 x5861)))
(define-fun x571 ((x5861 x3042)) Int (ite x7279 (x2184 x5861) (x4245 x5861)))
(define-fun x7609 ((x5861 x3042)) Int (ite (= x7100 x5861) 0 (x571 x5861)))
(define-fun x2551 ((x5861 x3042)) Int (ite x7601 (x2184 x5861) (x7609 x5861)))
(define-fun x1118 ((x5861 x3042)) Int (ite (= x8251 x5861) 0 (x2551 x5861)))
(define-fun x4041 ((x5861 x3042)) Int (ite (= x5861 x50) x5308 (x1118 x5861)))
(define-fun x8175 ((x5861 x3042)) Int (ite (= x5623 x5861) 0 (x2551 x5861)))
(define-fun x3110 ((x5861 x3042)) Int (ite (= x5861 x8294) x1536 (x2551 x5861)))
(define-fun x6350 ((x5861 x3042)) Int (ite (= x6859 x5861) x5308 (x3110 x5861)))
(define-fun x8128 ((x5861 x3042)) Int (ite (= x5861 x5060) x1536 (x2551 x5861)))
(define-fun x3886 ((x5861 x3042)) Int (ite x6479 (x4041 x5861) (ite x3083 (x8175 x5861) (ite x1826 (x6350 x5861) (x8128 x5861)))))
(define-fun x225 ((x5861 x3042)) Int (ite x458 (x2184 x5861) (ite x8911 (x2551 x5861) (x3886 x5861))))
(define-fun x4685 ((x5861 x3042)) Int (ite (= x5861 x614) 0 (x9217 x5861)))
(define-fun x2595 ((x5861 x3042)) Int (ite x7601 (x9217 x5861) (x4685 x5861)))
(define-fun x8157 ((x5861 x3042)) Int (ite (= x7968 x5861) x7424 (x2595 x5861)))
(define-fun x4554 ((x5861 x3042)) Int (ite (= x5861 x414) x7424 (x2595 x5861)))
(define-fun x4722 ((x5861 x3042)) Int (ite (= x8233 x5861) x7424 (x2595 x5861)))
(define-fun x1091 ((x5861 x3042)) Int (ite (= x3159 x5861) x7424 (x2595 x5861)))
(define-fun x1288 ((x5861 x3042)) Int (ite x6479 (x8157 x5861) (ite x3083 (x4554 x5861) (ite x1826 (x4722 x5861) (x1091 x5861)))))
(define-fun x1918 ((x5861 x3042)) Int (ite x458 (x9217 x5861) (ite x8911 (x2595 x5861) (x1288 x5861))))
(define-fun x7768 ((x5861 x3042)) Int (ite (= x5861 x1377) x6599 (x6348 x5861)))
(define-fun x2263 ((x5861 x3042)) Int (ite x7601 (x6348 x5861) (ite x7279 (x7768 x5861) (x6348 x5861))))
(define-fun x1583 ((x5861 x3042)) Int (ite (= x6939 x5861) x5308 (x2263 x5861)))
(define-fun x3098 ((x5861 x3042)) Int (ite (= x5861 x6939) x5308 (x2263 x5861)))
(define-fun x1861 ((x5861 x3042)) Int (ite x6479 (x2263 x5861) (ite x3083 (x1583 x5861) (ite x1826 (x2263 x5861) (x3098 x5861)))))
(define-fun x7238 ((x5861 x3042)) Int (ite x458 (x6348 x5861) (ite x8911 (x2263 x5861) (x1861 x5861))))
(define-fun x6337 ((x5861 x3042)) Int (ite (= x5861 x5176) x917 (x7238 x5861)))
(define-fun x6157 ((x5861 x3042)) Int (ite (= x3777 x5861) x917 (x225 x5861)))
(define-fun x8296 ((x5861 x3042)) Int (ite (= x5861 x3838) 0 (x1918 x5861)))
(define-fun x7136 ((x5861 x3042)) Int (ite x6970 (x1918 x5861) (x8296 x5861)))
(define-fun x5320 ((x5861 x3042)) Int (ite (= x5861 x4022) x1487 (x6342 x5861)))
(define-fun x6488 ((x5861 x3042)) Int (ite x1111 (x6342 x5861) (x5320 x5861)))
(define-fun x3704 ((x5861 x3042)) Int (ite (= x6564 x5861) 0 (x6488 x5861)))
(define-fun x3477 ((x5861 x3042)) Int (ite x6970 (x6342 x5861) (x3704 x5861)))
(define-fun x400 ((x5861 x3042)) Int (ite x4761 (x225 x5861) (x6157 x5861)))
(define-fun x916 ((x5861 x3042)) Int (ite (= x1174 x5861) 0 (x400 x5861)))
(define-fun x430 ((x5861 x3042)) Int (ite x6970 (x225 x5861) (x916 x5861)))
(define-fun x3849 ((x5861 x3042)) Int (ite (= x5861 x5934) x3638 (x265 x5861)))
(define-fun x5814 ((x5861 x3042)) Int (ite x7601 (x265 x5861) (ite x4758 (x3849 x5861) (x265 x5861))))
(define-fun x7909 ((x5861 x3042)) Int (ite (= x5861 x2813) x5308 (x5814 x5861)))
(define-fun x1610 ((x5861 x3042)) Int (ite (= x1235 x5861) x5308 (x5814 x5861)))
(define-fun x6709 ((x5861 x3042)) Int (ite x6479 (x7909 x5861) (ite x3083 (x1610 x5861) (x5814 x5861))))
(define-fun x9117 ((x5861 x3042)) Int (ite x458 (x265 x5861) (ite x8911 (x5814 x5861) (x6709 x5861))))
(define-fun x6427 ((x5861 x3042)) Int (ite (= x5861 x1789) x1487 (x9117 x5861)))
(define-fun x6894 ((x5861 x3042)) Int (ite x6970 (x9117 x5861) (ite x1111 (x6427 x5861) (x9117 x5861))))
(define-fun x1952 ((x5861 x3042)) Int (ite x6970 (x7238 x5861) (ite x4761 (x6337 x5861) (x7238 x5861))))
(define-fun x7538 ((x5861 x3042)) Int (ite (= x4420 x5861) x5851 (x5951 x5861)))
(define-fun x1956 ((x5861 x3042)) Int (ite x5557 (x5951 x5861) (x7538 x5861)))
(define-fun x8784 ((x5861 x3042)) Int (ite (= x5861 x1065) 0 (x1956 x5861)))
(define-fun x4899 ((x5861 x3042)) Int (ite x4817 (x5951 x5861) (x8784 x5861)))
(define-fun x4558 ((x5861 x3042)) Int (ite (= x8274 x5861) x3166 (x4899 x5861)))
(define-fun x7618 ((x5861 x3042)) Int (ite (= x7788 x5861) 0 (x4899 x5861)))
(define-fun x2723 ((x5861 x3042)) Int (ite (= x7179 x5861) x1582 (x4899 x5861)))
(define-fun x4584 ((x5861 x3042)) Int (ite (= x5861 x4997) x7448 (x2723 x5861)))
(define-fun x4623 ((x5861 x3042)) Int (ite (= x8411 x5861) 0 (x4899 x5861)))
(define-fun x2451 ((x5861 x3042)) Int (ite (= x2081 x5861) x7448 (x4623 x5861)))
(define-fun x4662 ((x5861 x3042)) Int (ite x8252 (x4558 x5861) (ite x788 (x7618 x5861) (ite x194 (x4584 x5861) (x2451 x5861)))))
(define-fun x3481 ((x5861 x3042)) Int (ite x2377 (x5951 x5861) (ite x9074 (x4899 x5861) (x4662 x5861))))
(define-fun x3458 ((x5861 x3042)) Int (ite (= x5861 x546) x200 (x3481 x5861)))
(define-fun x2699 ((x5861 x3042)) Int (ite x5036 (x3481 x5861) (x3458 x5861)))
(define-fun x5006 ((x5861 x3042)) Int (ite (= x7604 x5861) 0 (x2699 x5861)))
(define-fun x8021 ((x5861 x3042)) Int (ite x8258 (x3481 x5861) (x5006 x5861)))
(define-fun x1305 ((x5861 x3042)) Int (ite (= x5861 x1686) x624 (x8021 x5861)))
(define-fun x2477 ((x5861 x3042)) Int (ite (= x4560 x5861) 0 (x8021 x5861)))
(define-fun x8070 ((x5861 x3042)) Int (ite (= x5861 x3076) x6793 (x8021 x5861)))
(define-fun x5492 ((x5861 x3042)) Int (ite (= x5861 x3976) x5430 (x8070 x5861)))
(define-fun x8344 ((x5861 x3042)) Int (ite (= x5861 x3882) 0 (x8021 x5861)))
(define-fun x4454 ((x5861 x3042)) Int (ite (= x1458 x5861) x5430 (x8344 x5861)))
(define-fun x5235 ((x5861 x3042)) Int (ite x6559 (x1305 x5861) (ite x1868 (x2477 x5861) (ite x8769 (x5492 x5861) (x4454 x5861)))))
(define-fun x8373 ((x5861 x3042)) Int (ite x2468 (x3481 x5861) (ite x4618 (x8021 x5861) (x5235 x5861))))
(define-fun x7522 ((x5861 x3042)) Int (ite (= x5861 x8129) x6397 (x7383 x5861)))
(define-fun x9138 ((x5861 x3042)) Int (ite x7394 (x7383 x5861) (x7522 x5861)))
(define-fun x1678 ((x5861 x3042)) Int (ite (= x8504 x5861) 0 (x9138 x5861)))
(define-fun x8828 ((x5861 x3042)) Int (ite x4817 (x7383 x5861) (x1678 x5861)))
(define-fun x56 ((x5861 x3042)) Int (ite (= x5861 x6385) 0 (x8828 x5861)))
(define-fun x8376 ((x5861 x3042)) Int (ite (= x5861 x7993) x7448 (x56 x5861)))
(define-fun x7460 ((x5861 x3042)) Int (ite (= x7421 x5861) 0 (x8828 x5861)))
(define-fun x87 ((x5861 x3042)) Int (ite (= x5861 x479) x6372 (x8828 x5861)))
(define-fun x1702 ((x5861 x3042)) Int (ite (= x5861 x2120) x7448 (x87 x5861)))
(define-fun x5128 ((x5861 x3042)) Int (ite (= x7518 x5861) x6372 (x8828 x5861)))
(define-fun x3667 ((x5861 x3042)) Int (ite x8252 (x8376 x5861) (ite x788 (x7460 x5861) (ite x194 (x1702 x5861) (x5128 x5861)))))
(define-fun x1382 ((x5861 x3042)) Int (ite x2377 (x7383 x5861) (ite x9074 (x8828 x5861) (x3667 x5861))))
(define-fun x3585 ((x5861 x3042)) Int (ite (= x7654 x5861) x5237 (x1382 x5861)))
(define-fun x8208 ((x5861 x3042)) Int (ite x7435 (x1382 x5861) (x3585 x5861)))
(define-fun x2305 ((x5861 x3042)) Int (ite (= x5861 x6286) 0 (x8208 x5861)))
(define-fun x5844 ((x5861 x3042)) Int (ite x8258 (x1382 x5861) (x2305 x5861)))
(define-fun x2452 ((x5861 x3042)) Int (ite (= x5861 x5990) 0 (x5844 x5861)))
(define-fun x9128 ((x5861 x3042)) Int (ite (= x2215 x5861) x5430 (x2452 x5861)))
(define-fun x6082 ((x5861 x3042)) Int (ite (= x7317 x5861) 0 (x5844 x5861)))
(define-fun x554 ((x5861 x3042)) Int (ite (= x5861 x8101) x5412 (x5844 x5861)))
(define-fun x92 ((x5861 x3042)) Int (ite (= x3341 x5861) x5430 (x554 x5861)))
(define-fun x1774 ((x5861 x3042)) Int (ite (= x5861 x3158) x5412 (x5844 x5861)))
(define-fun x9065 ((x5861 x3042)) Int (ite x6559 (x9128 x5861) (ite x1868 (x6082 x5861) (ite x8769 (x92 x5861) (x1774 x5861)))))
(define-fun x7793 ((x5861 x3042)) Int (ite x2468 (x1382 x5861) (ite x4618 (x5844 x5861) (x9065 x5861))))
(define-fun x7335 ((x5861 x3042)) Int (ite (= x5861 x5573) x5237 (x8752 x5861)))
(define-fun x8812 ((x5861 x3042)) Int (ite x8258 (x8752 x5861) (ite x7435 (x7335 x5861) (x8752 x5861))))
(define-fun x1994 ((x5861 x3042)) Int (ite (= x8488 x5861) x5430 (x8812 x5861)))
(define-fun x7728 ((x5861 x3042)) Int (ite (= x5861 x8488) x5430 (x8812 x5861)))
(define-fun x6366 ((x5861 x3042)) Int (ite x6559 (x8812 x5861) (ite x1868 (x1994 x5861) (ite x8769 (x8812 x5861) (x7728 x5861)))))
(define-fun x3432 ((x5861 x3042)) Int (ite x2468 (x8752 x5861) (ite x4618 (x8812 x5861) (x6366 x5861))))
(define-fun x5371 ((x5861 x3042)) Int (ite (= x5861 x6301) x6717 (x3432 x5861)))
(define-fun x1960 ((x5861 x3042)) Int (ite (= x4124 x5861) x6717 (x7793 x5861)))
(define-fun x1568 ((x5861 x3042)) Int (ite (= x2385 x5861) x6455 (x3396 x5861)))
(define-fun x766 ((x5861 x3042)) Int (ite (= x9204 x5861) 0 (x1568 x5861)))
(define-fun x881 ((x5861 x3042)) Int (ite x7677 (x766 x5861) (x1568 x5861)))
(define-fun x3485 ((x5861 x3042)) Int (ite (= x7075 x5861) x1735 (x2893 x5861)))
(define-fun x4276 ((x5861 x3042)) Int (ite (= x5861 x6027) x1735 (x7383 x5861)))
(define-fun x1009 ((x5861 x3042)) Int (ite x8904 (x3432 x5861) (ite x3730 (x5371 x5861) (x3432 x5861))))
(define-fun x3227 ((x5861 x3042)) Int (ite (= x7271 x5861) x6176 (x8373 x5861)))
(define-fun x3606 ((x5861 x3042)) Int (ite x2796 (x8373 x5861) (x3227 x5861)))
(define-fun x312 ((x5861 x3042)) Int (ite (= x1947 x5861) 0 (x3606 x5861)))
(define-fun x8869 ((x5861 x3042)) Int (ite x8904 (x8373 x5861) (x312 x5861)))
(define-fun x3755 ((x5861 x3042)) Int (ite (= x4861 x5861) 0 (x4727 x5861)))
(define-fun x4881 ((x5861 x3042)) Int (ite x8904 (x4727 x5861) (x3755 x5861)))
(define-fun x814 ((x5861 x3042)) Int (ite x3730 (x7793 x5861) (x1960 x5861)))
(define-fun x8051 ((x5861 x3042)) Int (ite (= x5861 x8327) 0 (x814 x5861)))
(define-fun x9082 ((x5861 x3042)) Int (ite x8904 (x7793 x5861) (x8051 x5861)))
(define-fun x462 ((x5861 x3042)) Int (ite (= x1186 x5861) x5851 (x6586 x5861)))
(define-fun x4995 ((x5861 x3042)) Int (ite x4817 (x6586 x5861) (ite x5557 (x462 x5861) (x6586 x5861))))
(define-fun x4312 ((x5861 x3042)) Int (ite (= x5861 x3270) x7448 (x4995 x5861)))
(define-fun x1722 ((x5861 x3042)) Int (ite (= x5861 x4172) x7448 (x4995 x5861)))
(define-fun x4719 ((x5861 x3042)) Int (ite x8252 (x4312 x5861) (ite x788 (x1722 x5861) (x4995 x5861))))
(define-fun x8215 ((x5861 x3042)) Int (ite x2377 (x6586 x5861) (ite x9074 (x4995 x5861) (x4719 x5861))))
(define-fun x7583 ((x5861 x3042)) Int (ite (= x8823 x5861) x200 (x8215 x5861)))
(define-fun x4262 ((x5861 x3042)) Int (ite x8258 (x8215 x5861) (ite x5036 (x7583 x5861) (x8215 x5861))))
(define-fun x8540 ((x5861 x3042)) Int (ite (= x7258 x5861) x5430 (x4262 x5861)))
(define-fun x8348 ((x5861 x3042)) Int (ite (= x5861 x6873) x5430 (x4262 x5861)))
(define-fun x859 ((x5861 x3042)) Int (ite x6559 (x8540 x5861) (ite x1868 (x8348 x5861) (x4262 x5861))))
(define-fun x1137 ((x5861 x3042)) Int (ite x2468 (x8215 x5861) (ite x4618 (x4262 x5861) (x859 x5861))))
(define-fun x7570 ((x5861 x3042)) Int (ite (= x5861 x5973) x6176 (x1137 x5861)))
(define-fun x8097 ((x5861 x3042)) Int (ite x8904 (x1137 x5861) (ite x2796 (x7570 x5861) (x1137 x5861))))
(define-fun x1714 ((x5861 x3042)) Int (ite (= x2719 x5861) x5290 (x6586 x5861)))
(define-fun x566 ((x5861 x3042)) Int (ite x1259 (x6586 x5861) (ite x4931 (x1714 x5861) (x6586 x5861))))
(define-fun x6213 ((x5861 x3042)) Int (ite x1259 (x2893 x5861) (ite x4495 (x3485 x5861) (x2893 x5861))))
(define-fun x3718 ((x5861 x3042)) Int (ite (= x2092 x5861) x5290 (x5951 x5861)))
(define-fun x5485 ((x5861 x3042)) Int (ite x4931 (x5951 x5861) (x3718 x5861)))
(define-fun x4509 ((x5861 x3042)) Int (ite (= x3832 x5861) 0 (x5485 x5861)))
(define-fun x3377 ((x5861 x3042)) Int (ite x1259 (x5951 x5861) (x4509 x5861)))
(define-fun x1263 ((x5861 x3042)) Int (ite x4495 (x7383 x5861) (x4276 x5861)))
(define-fun x1499 ((x5861 x3042)) Int (ite (= x5861 x4918) 0 (x1263 x5861)))
(define-fun x147 ((x5861 x3042)) Int (ite x1259 (x7383 x5861) (x1499 x5861)))
(define-fun x6538 ((x5861 x3042)) Int (ite (= x5861 x1469) 0 (x388 x5861)))
(define-fun x7755 ((x5861 x3042)) Int (ite x1259 (x388 x5861) (x6538 x5861)))
(define-fun x6049 ((x5861 x3042)) Int (ite (= x5861 x8364) 0 (x5324 x5861)))
(define-fun x1012 ((x5861 x3042)) Int (ite (= x5861 x7588) x6458 (x1750 x5861)))
(define-fun x6486 ((x5861 x3042)) Int (ite x9278 (x1750 x5861) (x1012 x5861)))
(define-fun x8184 ((x5861 x3042)) Int (ite (= x7239 x5861) 0 (x6486 x5861)))
(define-fun x6686 ((x5861 x3042)) Int (ite x556 (x1750 x5861) (x8184 x5861)))
(define-fun x646 ((x5861 x3042)) Int (ite (= x5861 x7347) x4632 (x6686 x5861)))
(define-fun x1142 ((x5861 x3042)) Int (ite (= x7156 x5861) 0 (x6686 x5861)))
(define-fun x4239 ((x5861 x3042)) Int (ite (= x6728 x5861) x9164 (x6686 x5861)))
(define-fun x7639 ((x5861 x3042)) Int (ite (= x2685 x5861) x7448 (x4239 x5861)))
(define-fun x787 ((x5861 x3042)) Int (ite (= x5861 x1124) 0 (x6686 x5861)))
(define-fun x5494 ((x5861 x3042)) Int (ite (= x2666 x5861) x7448 (x787 x5861)))
(define-fun x3927 ((x5861 x3042)) Int (ite x3537 (x646 x5861) (ite x113 (x1142 x5861) (ite x8445 (x7639 x5861) (x5494 x5861)))))
(define-fun x3717 ((x5861 x3042)) Int (ite x778 (x1750 x5861) (ite x4202 (x6686 x5861) (x3927 x5861))))
(define-fun x8518 ((x5861 x3042)) Int (ite (= x5861 x2400) x4383 (x3717 x5861)))
(define-fun x302 ((x5861 x3042)) Int (ite x1598 (x3717 x5861) (x8518 x5861)))
(define-fun x1266 ((x5861 x3042)) Int (ite (= x6650 x5861) 0 (x302 x5861)))
(define-fun x817 ((x5861 x3042)) Int (ite x6671 (x3717 x5861) (x1266 x5861)))
(define-fun x6020 ((x5861 x3042)) Int (ite (= x5861 x3307) x2693 (x817 x5861)))
(define-fun x8853 ((x5861 x3042)) Int (ite (= x4700 x5861) 0 (x817 x5861)))
(define-fun x262 ((x5861 x3042)) Int (ite (= x5717 x5861) x1384 (x817 x5861)))
(define-fun x792 ((x5861 x3042)) Int (ite (= x8728 x5861) x5430 (x262 x5861)))
(define-fun x1225 ((x5861 x3042)) Int (ite (= x5861 x4973) 0 (x817 x5861)))
(define-fun x2898 ((x5861 x3042)) Int (ite (= x5861 x1805) x5430 (x1225 x5861)))
(define-fun x1564 ((x5861 x3042)) Int (ite x747 (x6020 x5861) (ite x3024 (x8853 x5861) (ite x7669 (x792 x5861) (x2898 x5861)))))
(define-fun x8532 ((x5861 x3042)) Int (ite x2661 (x3717 x5861) (ite x1531 (x817 x5861) (x1564 x5861))))
(define-fun x7055 ((x5861 x3042)) Int (ite (= x5861 x5364) x1353 (x5047 x5861)))
(define-fun x4189 ((x5861 x3042)) Int (ite x4541 (x5047 x5861) (x7055 x5861)))
(define-fun x4359 ((x5861 x3042)) Int (ite (= x5861 x8350) 0 (x4189 x5861)))
(define-fun x6820 ((x5861 x3042)) Int (ite x556 (x5047 x5861) (x4359 x5861)))
(define-fun x7664 ((x5861 x3042)) Int (ite (= x5861 x9248) 0 (x6820 x5861)))
(define-fun x4536 ((x5861 x3042)) Int (ite (= x5861 x2380) x7448 (x7664 x5861)))
(define-fun x585 ((x5861 x3042)) Int (ite (= x5861 x7864) 0 (x6820 x5861)))
(define-fun x8535 ((x5861 x3042)) Int (ite (= x9017 x5861) x3490 (x6820 x5861)))
(define-fun x5224 ((x5861 x3042)) Int (ite (= x2764 x5861) x7448 (x8535 x5861)))
(define-fun x2803 ((x5861 x3042)) Int (ite (= x3602 x5861) x3490 (x6820 x5861)))
(define-fun x4960 ((x5861 x3042)) Int (ite x3537 (x4536 x5861) (ite x113 (x585 x5861) (ite x8445 (x5224 x5861) (x2803 x5861)))))
(define-fun x1606 ((x5861 x3042)) Int (ite x778 (x5047 x5861) (ite x4202 (x6820 x5861) (x4960 x5861))))
(define-fun x850 ((x5861 x3042)) Int (ite (= x4504 x5861) x7470 (x1606 x5861)))
(define-fun x162 ((x5861 x3042)) Int (ite x8645 (x1606 x5861) (x850 x5861)))
(define-fun x4223 ((x5861 x3042)) Int (ite (= x3705 x5861) 0 (x162 x5861)))
(define-fun x7176 ((x5861 x3042)) Int (ite x6671 (x1606 x5861) (x4223 x5861)))
(define-fun x7568 ((x5861 x3042)) Int (ite (= x683 x5861) 0 (x7176 x5861)))
(define-fun x7854 ((x5861 x3042)) Int (ite (= x5861 x6081) x5430 (x7568 x5861)))
(define-fun x8809 ((x5861 x3042)) Int (ite (= x5861 x2608) 0 (x7176 x5861)))
(define-fun x8881 ((x5861 x3042)) Int (ite (= x6681 x5861) x3265 (x7176 x5861)))
(define-fun x2098 ((x5861 x3042)) Int (ite (= x9158 x5861) x5430 (x8881 x5861)))
(define-fun x6722 ((x5861 x3042)) Int (ite (= x7692 x5861) x3265 (x7176 x5861)))
(define-fun x6874 ((x5861 x3042)) Int (ite x747 (x7854 x5861) (ite x3024 (x8809 x5861) (ite x7669 (x2098 x5861) (x6722 x5861)))))
(define-fun x6725 ((x5861 x3042)) Int (ite x2661 (x1606 x5861) (ite x1531 (x7176 x5861) (x6874 x5861))))
(define-fun x2632 ((x5861 x3042)) Int (ite (= x1882 x5861) x1353 (x7980 x5861)))
(define-fun x1938 ((x5861 x3042)) Int (ite x556 (x7980 x5861) (ite x4541 (x2632 x5861) (x7980 x5861))))
(define-fun x5002 ((x5861 x3042)) Int (ite (= x4605 x5861) x7448 (x1938 x5861)))
(define-fun x3941 ((x5861 x3042)) Int (ite (= x5861 x4605) x7448 (x1938 x5861)))
(define-fun x8975 ((x5861 x3042)) Int (ite x3537 (x1938 x5861) (ite x113 (x5002 x5861) (ite x8445 (x1938 x5861) (x3941 x5861)))))
(define-fun x5598 ((x5861 x3042)) Int (ite x778 (x7980 x5861) (ite x4202 (x1938 x5861) (x8975 x5861))))
(define-fun x621 ((x5861 x3042)) Int (ite (= x7735 x5861) x7470 (x5598 x5861)))
(define-fun x1855 ((x5861 x3042)) Int (ite x6671 (x5598 x5861) (ite x8645 (x621 x5861) (x5598 x5861))))
(define-fun x8299 ((x5861 x3042)) Int (ite (= x831 x5861) x5430 (x1855 x5861)))
(define-fun x8111 ((x5861 x3042)) Int (ite (= x5861 x831) x5430 (x1855 x5861)))
(define-fun x3620 ((x5861 x3042)) Int (ite x747 (x1855 x5861) (ite x3024 (x8299 x5861) (ite x7669 (x1855 x5861) (x8111 x5861)))))
(define-fun x3966 ((x5861 x3042)) Int (ite x2661 (x5598 x5861) (ite x1531 (x1855 x5861) (x3620 x5861))))
(define-fun x226 ((x5861 x3042)) Int (ite (= x5861 x7916) x6895 (x3966 x5861)))
(define-fun x3670 ((x5861 x3042)) Int (ite (= x5861 x3690) x6895 (x6725 x5861)))
(define-fun x6705 ((x5861 x3042)) Int (ite x7711 (x6049 x5861) (x5324 x5861)))
(define-fun x6316 ((x5861 x3042)) Int (ite (= x5861 x5692) x2993 (x7980 x5861)))
(define-fun x4030 ((x5861 x3042)) Int (ite (= x5861 x1740) x2993 (x5047 x5861)))
(define-fun x7972 ((x5861 x3042)) Int (ite (= x5861 x4979) x6458 (x79 x5861)))
(define-fun x155 ((x5861 x3042)) Int (ite x556 (x79 x5861) (ite x9278 (x7972 x5861) (x79 x5861))))
(define-fun x3069 ((x5861 x3042)) Int (ite (= x701 x5861) x7448 (x155 x5861)))
(define-fun x1270 ((x5861 x3042)) Int (ite (= x5861 x2861) x7448 (x155 x5861)))
(define-fun x7334 ((x5861 x3042)) Int (ite x3537 (x3069 x5861) (ite x113 (x1270 x5861) (x155 x5861))))
(define-fun x3510 ((x5861 x3042)) Int (ite x778 (x79 x5861) (ite x4202 (x155 x5861) (x7334 x5861))))
(define-fun x9179 ((x5861 x3042)) Int (ite (= x5861 x1786) x4383 (x3510 x5861)))
(define-fun x4242 ((x5861 x3042)) Int (ite x6671 (x3510 x5861) (ite x1598 (x9179 x5861) (x3510 x5861))))
(define-fun x4930 ((x5861 x3042)) Int (ite (= x6701 x5861) x5430 (x4242 x5861)))
(define-fun x4035 ((x5861 x3042)) Int (ite (= x8388 x5861) x5430 (x4242 x5861)))
(define-fun x4996 ((x5861 x3042)) Int (ite x747 (x4930 x5861) (ite x3024 (x4035 x5861) (x4242 x5861))))
(define-fun x7571 ((x5861 x3042)) Int (ite x2661 (x3510 x5861) (ite x1531 (x4242 x5861) (x4996 x5861))))
(define-fun x3686 ((x5861 x3042)) Int (ite (= x244 x5861) x3538 (x7571 x5861)))
(define-fun x5084 ((x5861 x3042)) Int (ite x5818 (x7571 x5861) (ite x6899 (x3686 x5861) (x7571 x5861))))
(define-fun x2000 ((x5861 x3042)) Int (ite (= x5861 x8052) x3538 (x8532 x5861)))
(define-fun x3184 ((x5861 x3042)) Int (ite x6899 (x8532 x5861) (x2000 x5861)))
(define-fun x6237 ((x5861 x3042)) Int (ite (= x5861 x1109) 0 (x3184 x5861)))
(define-fun x5368 ((x5861 x3042)) Int (ite x5818 (x8532 x5861) (x6237 x5861)))
(define-fun x6445 ((x5861 x3042)) Int (ite x5818 (x3966 x5861) (ite x4749 (x226 x5861) (x3966 x5861))))
(define-fun x5775 ((x5861 x3042)) Int (ite (= x4408 x5861) 0 (x1729 x5861)))
(define-fun x8715 ((x5861 x3042)) Int (ite x5818 (x1729 x5861) (x5775 x5861)))
(define-fun x1851 ((x5861 x3042)) Int (ite x4749 (x6725 x5861) (x3670 x5861)))
(define-fun x637 ((x5861 x3042)) Int (ite (= x2677 x5861) 0 (x1851 x5861)))
(define-fun x6347 ((x5861 x3042)) Int (ite x5818 (x6725 x5861) (x637 x5861)))
(define-fun x3794 ((x5861 x3042)) Int (ite (= x5589 x5861) x8971 (x79 x5861)))
(define-fun x700 ((x5861 x3042)) Int (ite x6109 (x79 x5861) (ite x3834 (x3794 x5861) (x79 x5861))))
(define-fun x5519 ((x5861 x3042)) Int (ite (= x7953 x5861) 0 (x789 x5861)))
(define-fun x5648 ((x5861 x3042)) Int (ite x6109 (x789 x5861) (x5519 x5861)))
(define-fun x4708 ((x5861 x3042)) Int (ite x533 (x5047 x5861) (x4030 x5861)))
(define-fun x5651 ((x5861 x3042)) Int (ite (= x8436 x5861) 0 (x4708 x5861)))
(define-fun x8094 ((x5861 x3042)) Int (ite x6109 (x5047 x5861) (x5651 x5861)))
(define-fun x537 ((x5861 x3042)) Int (ite x6109 (x7980 x5861) (ite x533 (x6316 x5861) (x7980 x5861))))
(define-fun x3542 ((x5861 x3042)) Int (ite (= x5861 x6331) x8971 (x1750 x5861)))
(define-fun x3018 ((x5861 x3042)) Int (ite x3834 (x1750 x5861) (x3542 x5861)))
(define-fun x9015 ((x5861 x3042)) Int (ite (= x6553 x5861) 0 (x3018 x5861)))
(define-fun x292 ((x5861 x3042)) Int (ite x6109 (x1750 x5861) (x9015 x5861)))
(define-fun x2422 ((x5861 Int)) Int (ite (= 0 x5861) x2130 (x7628 x5861)))
(define-fun x4353 ((x5861 Int)) Int (ite (= 0 x5861) x3864 (x7628 x5861)))
(define-fun x8739 ((x5861 Int)) Int (ite (= x5861 0) x7385 (x7628 x5861)))
(define-fun x8816 ((x5861 Int)) Int (ite (= 128 x5861) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2245 x5861)))
(define-fun x8363 ((x5861 Int)) Int (ite (= x5861 132) x7032 (x8816 x5861)))
(define-fun x8946 ((x5861 Int)) Int (ite (= 164 x5861) x8110 (x8363 x5861)))
(define-fun x7 ((x5861 Int)) Int (ite (= x5861 196) x1935 (x8946 x5861)))
(define-fun x444 ((x5861 x3042)) Int (ite (= x7194 x5861) x7523 (x3764 x5861)))
(define-fun x7707 ((x5861 x3042)) Int (ite x9264 (x7078 x5861) (x7392 x5861)))
(define-fun x8338 ((x5861 Int)) Int (ite (= x5861 0) 1 (x8068 x5861)))
(define-fun x3723 ((x5861 x3042)) Int (ite (= x7013 x5861) x7319 (x1556 x5861)))
(define-fun x544 ((x5861 x3042)) Int (ite (= x1409 x5861) x65 (x3723 x5861)))
(define-fun x7147 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x8068 x5861)))
(define-fun x4503 ((x5861 x3042)) Int (ite (= x5861 x112) x243 (x632 x5861)))
(define-fun x1954 ((x5861 Int)) Int (ite (= x5861 0) 1 (x8068 x5861)))
(define-fun x2367 ((x5861 x3042)) Int (ite (= x1823 x5861) x503 (x4281 x5861)))
(define-fun x7699 ((x5861 Int)) Int (ite (= x5861 0) 1 (x8068 x5861)))
(define-fun x3673 ((x5861 Int)) Int (ite (= x5861 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x6550 x5861)))
(define-fun x8811 ((x5861 Int)) Int (ite (= 132 x5861) x7032 (x3673 x5861)))
(define-fun x6513 ((x5861 Int)) Int (ite (= 164 x5861) x5049 (x8811 x5861)))
(define-fun x7465 ((x5861 Int)) Int (ite (= x5861 196) x1935 (x6513 x5861)))
(define-fun x6163 ((x5861 x3042)) Int (ite (= x5861 x31) x9194 (x3764 x5861)))
(define-fun x9114 ((x5861 Int)) Int (ite (= x5861 0) 1 (x7443 x5861)))
(define-fun x8642 ((x5861 x3042)) Int (ite (= x8189 x5861) x358 (x1556 x5861)))
(define-fun x3328 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x7443 x5861)))
(define-fun x8098 ((x5861 x3042)) Int (ite (= x5861 x15) x2538 (x632 x5861)))
(define-fun x9220 ((x5861 x3042)) Int (ite (= x5503 x5861) x7732 (x8098 x5861)))
(define-fun x8000 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x7443 x5861)))
(define-fun x3747 ((x5861 x3042)) Int (ite (= x5861 x7423) x3581 (x4281 x5861)))
(define-fun x2931 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x7443 x5861)))
(define-fun x757 ((x5861 Int)) Int (ite (= x5861 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x8319 x5861)))
(define-fun x3885 ((x5861 Int)) Int (ite (= x5861 132) x7032 (x757 x5861)))
(define-fun x4158 ((x5861 Int)) Int (ite (= x5861 164) x4633 (x3885 x5861)))
(define-fun x5637 ((x5861 Int)) Int (ite (= x5861 196) x1935 (x4158 x5861)))
(define-fun x8261 ((x5861 x3042)) Int (ite (= x5861 x1748) x1546 (x3764 x5861)))
(define-fun x1215 ((x5861 Int)) Int (ite (= x5861 0) 1 (x6500 x5861)))
(define-fun x4603 ((x5861 x3042)) Int (ite (= x5861 x4106) x8868 (x1556 x5861)))
(define-fun x9041 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x6500 x5861)))
(define-fun x4284 ((x5861 x3042)) Int (ite (= x5861 x1444) x526 (x632 x5861)))
(define-fun x8514 ((x5861 Int)) Int (ite (= x5861 0) 1 (x6500 x5861)))
(define-fun x7680 ((x5861 x3042)) Int (ite (= x5861 x2975) x4748 (x4281 x5861)))
(define-fun x6313 ((x5861 x3042)) Int (ite (= x5861 x3887) x1627 (x7680 x5861)))
(define-fun x5930 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x6500 x5861)))
(define-fun x558 ((x5861 Int)) Int (ite (= x5861 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x8711 x5861)))
(define-fun x3763 ((x5861 Int)) Int (ite (= 132 x5861) x7032 (x558 x5861)))
(define-fun x4788 ((x5861 Int)) Int (ite (= x5861 164) x8110 (x3763 x5861)))
(define-fun x6299 ((x5861 Int)) Int (ite (= x5861 196) x4297 (x4788 x5861)))
(define-fun x7080 ((x5861 Int)) Int (ite (= x5861 0) 1 (x7452 x5861)))
(define-fun x442 ((x5861 Int)) Int (ite (= x5861 0) 1 (x7452 x5861)))
(define-fun x672 ((x5861 Int)) Int (ite (= x5861 0) 1 (x7452 x5861)))
(define-fun x2232 ((x5861 Int)) Int (ite (= x5861 0) 1 (x7452 x5861)))
(define-fun x5909 ((x5861 Int)) Int (ite (= x5861 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x5042 x5861)))
(define-fun x8139 ((x5861 Int)) Int (ite (= 132 x5861) x7032 (x5909 x5861)))
(define-fun x5268 ((x5861 Int)) Int (ite (= 164 x5861) x5049 (x8139 x5861)))
(define-fun x63 ((x5861 Int)) Int (ite (= 196 x5861) x8541 (x5268 x5861)))
(define-fun x4306 ((x5861 Int)) Int (ite (= x5861 0) 1 (x7018 x5861)))
(define-fun x8206 ((x5861 Int)) Int (ite (= x5861 0) 1 (x7018 x5861)))
(define-fun x4358 ((x5861 Int)) Int (ite (= x5861 0) 1 (x7018 x5861)))
(define-fun x8113 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x7018 x5861)))
(define-fun x6088 ((x5861 Int)) Int (ite (= x5861 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1906 x5861)))
(define-fun x9269 ((x5861 Int)) Int (ite (= x5861 132) x7032 (x6088 x5861)))
(define-fun x3848 ((x5861 Int)) Int (ite (= x5861 164) x4633 (x9269 x5861)))
(define-fun x7831 ((x5861 Int)) Int (ite (= 196 x5861) x6467 (x3848 x5861)))
(define-fun x1234 ((x5861 Int)) Int (ite (= x5861 0) 1 (x5315 x5861)))
(define-fun x6644 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x5315 x5861)))
(define-fun x6576 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x5315 x5861)))
(define-fun x7273 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x5315 x5861)))
(define-fun x7201 ((x5861 Int)) Int (ite (= x5861 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x9099 x5861)))
(define-fun x3290 ((x5861 Int)) Int (ite (= x5861 132) x7032 (x7201 x5861)))
(define-fun x4741 ((x5861 Int)) Int (ite (= 164 x5861) x8110 (x3290 x5861)))
(define-fun x1857 ((x5861 Int)) Int (ite (= x5861 196) x2352 (x4741 x5861)))
(define-fun x7224 ((x5861 x3042)) Int (ite (= x2574 x5861) x873 (x4475 x5861)))
(define-fun x1337 ((x5861 x3042)) Int (ite x2269 (x2392 x5861) (x8786 x5861)))
(define-fun x3780 ((x5861 Int)) Int (ite (= x5861 0) 1 (x196 x5861)))
(define-fun x1164 ((x5861 x3042)) Int (ite (= x5861 x4199) x7362 (x1401 x5861)))
(define-fun x5582 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x196 x5861)))
(define-fun x6655 ((x5861 x3042)) Int (ite (= x5861 x6140) x4880 (x1833 x5861)))
(define-fun x7880 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x196 x5861)))
(define-fun x8962 ((x5861 x3042)) Int (ite (= x2247 x5861) x2540 (x3526 x5861)))
(define-fun x1456 ((x5861 Int)) Int (ite (= x5861 0) 1 (x196 x5861)))
(define-fun x5510 ((x5861 Int)) Int (ite (= x5861 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x6832 x5861)))
(define-fun x5721 ((x5861 Int)) Int (ite (= 132 x5861) x7032 (x5510 x5861)))
(define-fun x2466 ((x5861 Int)) Int (ite (= x5861 164) x5049 (x5721 x5861)))
(define-fun x308 ((x5861 Int)) Int (ite (= x5861 196) x4548 (x2466 x5861)))
(define-fun x9029 ((x5861 x3042)) Int (ite (= x5398 x5861) x5523 (x4475 x5861)))
(define-fun x3917 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x9266 x5861)))
(define-fun x3635 ((x5861 x3042)) Int (ite (= x1357 x5861) x481 (x1401 x5861)))
(define-fun x1708 ((x5861 Int)) Int (ite (= x5861 0) 1 (x9266 x5861)))
(define-fun x5147 ((x5861 x3042)) Int (ite (= x7870 x5861) x8980 (x1833 x5861)))
(define-fun x274 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x9266 x5861)))
(define-fun x7458 ((x5861 x3042)) Int (ite (= x1755 x5861) x975 (x3526 x5861)))
(define-fun x5927 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x9266 x5861)))
(define-fun x2458 ((x5861 Int)) Int (ite (= x5861 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x6320 x5861)))
(define-fun x5809 ((x5861 Int)) Int (ite (= 132 x5861) x7032 (x2458 x5861)))
(define-fun x5681 ((x5861 Int)) Int (ite (= x5861 164) x4633 (x5809 x5861)))
(define-fun x1294 ((x5861 Int)) Int (ite (= x5861 196) x6514 (x5681 x5861)))
(define-fun x8243 ((x5861 x3042)) Int (ite (= x7234 x5861) x7246 (x4475 x5861)))
(define-fun x7787 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x7041 x5861)))
(define-fun x717 ((x5861 x3042)) Int (ite (= x5861 x7045) x4647 (x1401 x5861)))
(define-fun x4033 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x7041 x5861)))
(define-fun x4756 ((x5861 x3042)) Int (ite (= x8822 x5861) x117 (x1833 x5861)))
(define-fun x1013 ((x5861 Int)) Int (ite (= x5861 0) 1 (x7041 x5861)))
(define-fun x8837 ((x5861 x3042)) Int (ite (= x1075 x5861) x6974 (x3526 x5861)))
(define-fun x8435 ((x5861 Int)) Int (ite (= x5861 0) 1 (x7041 x5861)))
(define-fun x6061 ((x5861 x3042)) Int (ite (= x7942 x5861) x3044 (x3875 x5861)))
(define-fun x1803 ((x5861 x3042)) Int (ite (= x4905 x5861) x7813 (x4008 x5861)))
(define-fun x6633 ((x5861 Int)) Int (ite (= x5861 0) 1 (x6169 x5861)))
(define-fun x5267 ((x5861 Int)) Int (ite (= 0 x5861) 1 (x6169 x5861)))
(define-fun x3304 ((x5861 Int)) Int (ite (= x5861 0) 1 (x6169 x5861)))
(define-fun x6179 ((x5861 x3042)) Int (ite x7477 (x9082 x5861) (x5844 x5861)))
(define-fun x3752 ((x5861 x3042)) Int (ite x6929 (x6347 x5861) (x7176 x5861)))
(define-fun x9105 ((x5861 x3042)) Int (ite x19 (x74 x5861) (x8039 x5861)))
(define-fun x77 ((x5861 x3042)) Int (ite x6462 (x430 x5861) (x2551 x5861)))
(define-fun x6533 ((x5861 Int)) Int (ite x1964 (x8034 x5861) (x469 x5861)))
(define-fun x5939 ((x5861 Int)) Int (ite x1719 (x8034 x5861) (x4261 x5861)))
(define-fun x3689 ((x5861 Int)) Int (ite x8767 (x8034 x5861) (x4088 x5861)))
(define-fun x8534 ((x5861 Int)) Int (ite x7896 (x6533 x5861) (ite x5698 (x5939 x5861) (x3689 x5861))))
(define-fun x7199 ((x5861 x3042)) Int (ite (= (x7379 x7848) x5861) x1761 (x2273 x5861)))
(define-fun x257 ((x5861 Int)) Int (ite x4240 (x7628 x5861) (x2422 x5861)))
(define-fun x8683 ((x5861 Int)) Int (ite x7729 (x7628 x5861) (x4353 x5861)))
(define-fun x2980 ((x5861 Int)) Int (ite x7251 (x7628 x5861) (x8739 x5861)))
(define-fun x5923 ((x5861 Int)) Int (ite x8713 (x257 x5861) (ite x5848 (x8683 x5861) (x2980 x5861))))
(define-fun x4951 ((x5861 Int)) Int (ite (= 0 x5861) 0 (x7881 x5861)))
(define-fun x1190 ((x5861 Int)) Int (ite x3703 (x7881 x5861) (x4951 x5861)))
(define-fun x3721 ((x5861 Int)) Int (ite (= 0 x5861) 0 (x7881 x5861)))
(define-fun x4636 ((x5861 Int)) Int (ite x2767 (x7881 x5861) (x3721 x5861)))
(define-fun x6314 ((x5861 Int)) Int (ite (= x5861 0) 0 (x7881 x5861)))
(define-fun x3706 ((x5861 Int)) Int (ite x6407 (x7881 x5861) (x6314 x5861)))
(define-fun x7447 ((x5861 Int)) Int (ite x2427 (x1190 x5861) (ite x4416 (x4636 x5861) (x3706 x5861))))
(define-fun x1983 ((x5861 Int)) Int (ite (= 0 x5861) 0 (x3055 x5861)))
(define-fun x6120 ((x5861 Int)) Int (ite x1437 (x3055 x5861) (x1983 x5861)))
(define-fun x712 ((x5861 Int)) Int (ite (= 0 x5861) 0 (x3055 x5861)))
(define-fun x3247 ((x5861 Int)) Int (ite x214 (x3055 x5861) (x712 x5861)))
(define-fun x7879 ((x5861 Int)) Int (ite (= 0 x5861) 0 (x3055 x5861)))
(define-fun x7800 ((x5861 Int)) Int (ite x3711 (x3055 x5861) (x7879 x5861)))
(define-fun x1903 ((x5861 Int)) Int (ite x597 (x6120 x5861) (ite x1361 (x3247 x5861) (x7800 x5861))))
(define-fun x7040 ((x5861 Int)) Int (ite (= x5861 0) 0 (x2418 x5861)))
(define-fun x5694 ((x5861 Int)) Int (ite x2638 (x2418 x5861) (x7040 x5861)))
(define-fun x1428 ((x5861 Int)) Int (ite (= x5861 0) 0 (x2418 x5861)))
(define-fun x6731 ((x5861 Int)) Int (ite x2567 (x2418 x5861) (x1428 x5861)))
(define-fun x234 ((x5861 Int)) Int (ite (= 0 x5861) 0 (x2418 x5861)))
(define-fun x1098 ((x5861 Int)) Int (ite x5754 (x2418 x5861) (x234 x5861)))
(define-fun x1087 ((x5861 Int)) Int (ite x3881 (x5694 x5861) (ite x8081 (x6731 x5861) (x1098 x5861))))
(define-fun x4134 ((x5861 x3042)) Int (ite x9020 (x4281 x5861) (ite x5801 (x4281 x5861) (ite x5352 (x4281 x5861) (ite x8913 (x4281 x5861) (ite x89 (x7680 x5861) (x4281 x5861)))))))
(define-fun x1764 ((x5861 x3042)) Int (ite x2170 (x4281 x5861) (ite x1447 (x4281 x5861) (ite x8413 (x4281 x5861) (ite x353 (x4134 x5861) (x6313 x5861))))))
(define-fun x6618 ((x5861 x3042)) Int (ite x8724 (x632 x5861) (ite x8856 (x632 x5861) (ite x7635 (x632 x5861) (ite x5143 (x632 x5861) (ite x8986 (x8098 x5861) (x632 x5861)))))))
(define-fun x3865 ((x5861 x3042)) Int (ite x1119 (x632 x5861) (ite x5281 (x632 x5861) (ite x3052 (ite x2913 (x6618 x5861) (x9220 x5861)) (x632 x5861)))))
(define-fun x4755 ((x5861 x3042)) Int (ite x4818 (x1556 x5861) (ite x2760 (x1556 x5861) (ite x5654 (x1556 x5861) (ite x7169 (x1556 x5861) (ite x8685 (x3723 x5861) (x1556 x5861)))))))
(define-fun x4939 ((x5861 x3042)) Int (ite x6368 (x1556 x5861) (ite x5756 (ite x1850 (x4755 x5861) (x544 x5861)) (x1556 x5861))))
(define-fun x4675 ((x5861 Int)) Int (ite x5369 (x3091 x5861) (x7372 x5861)))
(define-fun x2924 ((x5861 Int)) Int (ite x572 (x3091 x5861) (x7696 x5861)))
(define-fun x4895 ((x5861 Int)) Int (ite x1820 (x3091 x5861) (x3420 x5861)))
(define-fun x4148 ((x5861 Int)) Int (ite x2692 (x3091 x5861) (x1191 x5861)))
(define-fun x2505 ((x5861 Int)) Int (ite x1181 (x4675 x5861) (ite x2650 (x2924 x5861) (ite x2547 (x4895 x5861) (x4148 x5861)))))
(define-fun x9273 ((x5861 Int)) Int (ite x6305 (x8632 x5861) (x4138 x5861)))
(define-fun x5066 ((x5861 Int)) Int (ite x1154 (x8632 x5861) (x6257 x5861)))
(define-fun x4058 ((x5861 Int)) Int (ite x5964 (x8632 x5861) (x3884 x5861)))
(define-fun x1180 ((x5861 Int)) Int (ite x2026 (x8632 x5861) (x1177 x5861)))
(define-fun x4319 ((x5861 Int)) Int (ite x3982 (x9273 x5861) (ite x6178 (x5066 x5861) (ite x5212 (x4058 x5861) (x1180 x5861)))))
(define-fun x2294 ((x5861 Int)) Int (ite x7595 (x8217 x5861) (x8141 x5861)))
(define-fun x1811 ((x5861 Int)) Int (ite x552 (x8217 x5861) (x833 x5861)))
(define-fun x4489 ((x5861 Int)) Int (ite x1785 (x8217 x5861) (x741 x5861)))
(define-fun x2559 ((x5861 Int)) Int (ite x6131 (x8217 x5861) (x8142 x5861)))
(define-fun x8209 ((x5861 Int)) Int (ite x1897 (x2294 x5861) (ite x5876 (x1811 x5861) (ite x4438 (x4489 x5861) (x2559 x5861)))))
(define-fun x590 ((x5861 Int)) Int (ite x7016 (x6336 x5861) (x7720 x5861)))
(define-fun x1721 ((x5861 Int)) Int (ite x8563 (x6336 x5861) (x5149 x5861)))
(define-fun x2779 ((x5861 Int)) Int (ite x9003 (x6336 x5861) (x236 x5861)))
(define-fun x3034 ((x5861 Int)) Int (ite x1636 (x6336 x5861) (x9234 x5861)))
(define-fun x1875 ((x5861 Int)) Int (ite x7997 (x590 x5861) (ite x1132 (x1721 x5861) (ite x2618 (x2779 x5861) (x3034 x5861)))))
(define-fun x4532 ((x5861 Int)) Int (ite x8172 (x5635 x5861) (x8995 x5861)))
(define-fun x5159 ((x5861 Int)) Int (ite x6869 (x5635 x5861) (x4423 x5861)))
(define-fun x6035 ((x5861 Int)) Int (ite x714 (x5635 x5861) (x2667 x5861)))
(define-fun x8383 ((x5861 Int)) Int (ite x8439 (x5635 x5861) (x1707 x5861)))
(define-fun x5437 ((x5861 Int)) Int (ite x3646 (x4532 x5861) (ite x2702 (x5159 x5861) (ite x4994 (x6035 x5861) (x8383 x5861)))))
(define-fun x615 ((x5861 Int)) Int (ite x7995 (x8467 x5861) (x803 x5861)))
(define-fun x2728 ((x5861 Int)) Int (ite x5453 (x8467 x5861) (x4511 x5861)))
(define-fun x2705 ((x5861 Int)) Int (ite x9012 (x8467 x5861) (x553 x5861)))
(define-fun x6460 ((x5861 Int)) Int (ite x154 (x8467 x5861) (x8391 x5861)))
(define-fun x9097 ((x5861 Int)) Int (ite x543 (x615 x5861) (ite x4478 (x2728 x5861) (ite x9173 (x2705 x5861) (x6460 x5861)))))
(define-fun x4999 ((x5861 Int)) Int (ite x7284 (x5315 x5861) (x1234 x5861)))
(define-fun x9131 ((x5861 Int)) Int (ite x3633 (x5315 x5861) (x6644 x5861)))
(define-fun x5803 ((x5861 Int)) Int (ite x2108 (x5315 x5861) (x6576 x5861)))
(define-fun x2652 ((x5861 Int)) Int (ite x5799 (x5315 x5861) (x7273 x5861)))
(define-fun x3456 ((x5861 Int)) Int (ite x6584 (x4999 x5861) (ite x1817 (x9131 x5861) (ite x9187 (x5803 x5861) (x2652 x5861)))))
(define-fun x1029 ((x5861 Int)) Int (ite x2915 (x7018 x5861) (x4306 x5861)))
(define-fun x7799 ((x5861 Int)) Int (ite x90 (x7018 x5861) (x8206 x5861)))
(define-fun x3482 ((x5861 Int)) Int (ite x2546 (x7018 x5861) (x4358 x5861)))
(define-fun x2212 ((x5861 Int)) Int (ite x5317 (x7018 x5861) (x8113 x5861)))
(define-fun x2172 ((x5861 Int)) Int (ite x7977 (x1029 x5861) (ite x2771 (x7799 x5861) (ite x4188 (x3482 x5861) (x2212 x5861)))))
(define-fun x2164 ((x5861 Int)) Int (ite x7708 (x7452 x5861) (x7080 x5861)))
(define-fun x4626 ((x5861 Int)) Int (ite x575 (x7452 x5861) (x442 x5861)))
(define-fun x6241 ((x5861 Int)) Int (ite x5920 (x7452 x5861) (x672 x5861)))
(define-fun x4247 ((x5861 Int)) Int (ite x4793 (x7452 x5861) (x2232 x5861)))
(define-fun x5208 ((x5861 Int)) Int (ite x4821 (x2164 x5861) (ite x5568 (x4626 x5861) (ite x227 (x6241 x5861) (x4247 x5861)))))
(define-fun x8308 ((x5861 Int)) Int (ite x5854 (x7041 x5861) (x7787 x5861)))
(define-fun x6018 ((x5861 Int)) Int (ite x6746 (x7041 x5861) (x4033 x5861)))
(define-fun x8989 ((x5861 Int)) Int (ite x7133 (x7041 x5861) (x1013 x5861)))
(define-fun x8581 ((x5861 Int)) Int (ite x6910 (x7041 x5861) (x8435 x5861)))
(define-fun x499 ((x5861 Int)) Int (ite x8659 (x8308 x5861) (ite x7847 (x6018 x5861) (ite x2818 (x8989 x5861) (x8581 x5861)))))
(define-fun x2968 ((x5861 Int)) Int (ite x2381 (x9266 x5861) (x3917 x5861)))
(define-fun x2485 ((x5861 Int)) Int (ite x7721 (x9266 x5861) (x1708 x5861)))
(define-fun x1107 ((x5861 Int)) Int (ite x3572 (x9266 x5861) (x274 x5861)))
(define-fun x4573 ((x5861 Int)) Int (ite x5601 (x9266 x5861) (x5927 x5861)))
(define-fun x1924 ((x5861 Int)) Int (ite x2298 (x2968 x5861) (ite x6354 (x2485 x5861) (ite x2442 (x1107 x5861) (x4573 x5861)))))
(define-fun x5603 ((x5861 Int)) Int (ite x2793 (x196 x5861) (x3780 x5861)))
(define-fun x5461 ((x5861 Int)) Int (ite x4266 (x196 x5861) (x5582 x5861)))
(define-fun x5641 ((x5861 Int)) Int (ite x4945 (x196 x5861) (x7880 x5861)))
(define-fun x6498 ((x5861 Int)) Int (ite x4935 (x196 x5861) (x1456 x5861)))
(define-fun x6503 ((x5861 Int)) Int (ite x2473 (x5603 x5861) (ite x83 (x5461 x5861) (ite x7256 (x5641 x5861) (x6498 x5861)))))
(define-fun x366 ((x5861 Int)) Int (ite x3105 (x3605 x5861) (ite x6718 (x239 x5861) (x6735 x5861))))
(define-fun x5221 ((x5861 Int)) Int (ite (= 0 x5861) x5759 (x4272 x5861)))
(define-fun x341 ((x5861 Int)) Int (ite (= 0 x5861) x3921 (x4272 x5861)))
(define-fun x8281 ((x5861 Int)) Int (ite (= 0 x5861) x1062 (x4272 x5861)))
(define-fun x531 ((x5861 Int)) Int (ite x4879 (x5221 x5861) (ite x7369 (x341 x5861) (x8281 x5861))))
(define-fun x5059 ((x5861 Int)) Int (ite x4993 (x6633 x5861) (ite x8487 (x5267 x5861) (x3304 x5861))))
(define-fun x656 ((x5861 x3042)) Int (ite (= x3463 x5861) x6217 (x4220 x5861)))
(define-fun x7835 ((x5861 Int)) Int (ite x5029 (x109 x5861) (ite x3683 (x4212 x5861) (x1777 x5861))))
(define-fun x2860 ((x5861 Int)) Int (ite x5706 (x806 x5861) (ite x513 (x6373 x5861) (x4767 x5861))))
(define-fun x2271 ((x5861 Int)) Int (ite x3564 (x1931 x5861) (ite x3895 (x1302 x5861) (x1557 x5861))))
(define-fun x6790 ((x5861 Int)) Int (ite x2221 (x5110 x5861) (ite x389 (x1545 x5861) (x8026 x5861))))
(define-fun x4156 ((x4924 Int) (x9125 Int) (x1538 Int) (x5778 Int)) Bool (=> (and (<= 0 x9125) (>= x4924 0) (<= x9125 x5778) (<= x4924 x1538)) (<= (x7029 x4924 x9125) (x7029 x1538 x5778))))
(define-fun x8665 ((x4924 Int) (x9125 Int) (x1538 Int) (x5778 Int)) Bool (=> (= x4924 x1538) (= (x7029 x4924 (- x9125 x5778)) (- (x7029 x4924 x9125) (x7029 x1538 x5778)))))
(define-fun x2252 ((x4924 Int)) Bool (=> (and (not (= 1461501637330902918203684832716283019655932542975 x4924)) (not (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x4924)) (not (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x4924)) (not (= 1313710058 x4924)) (not (= x4924 3047081080)) (not (= 2691771752 x4924)) (not (= 44970383829727661923261016617897238973146650624978361361029103362720544063488 x4924)) (not (= x4924 10936679508223583803006762266923565500374401145016910147028117655998246682624)) (not (= x4924 75483562)) (not (= x4924 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x4924)) (not (= x4924 3266287495)) (not (= x4924 398450620)) (not (= 1865448899 x4924)) (not (= 2929553584 x4924)) (not (= 1779720228 x4924)) (not (= 76833804140862540057647519496925185374644862498684814347804924264468996685824 x4924)) (not (= x4924 2858086653)) (not (= x4924 2217467699)) (not (= x4924 2023533118)) (not (= 3069361948 x4924)) (not (= x4924 35417553099779373699389112480655434059402432070290151981503827724506945814528)) (not (= x4924 1000000000000000000)) (not (= 18446744073709551615 x4924)) (not (= x4924 547091486)) (not (= x4924 1038142104)) (not (= 599290589 x4924)) (not (= 178855970 x4924)) (not (= x4924 24044834009420335638544845215851342251227478490780828673611325350056707489792)) (not (= 2835717307 x4924)) (not (= x4924 1913449218)) (not (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 x4924)) (not (= 1856199391 x4924)) (not (= x4924 1901074598)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4924)) (not (= 1857877511 x4924)) (not (= x4924 50292402827334880472107169365697159231523039388532301717704428044325102813184)) (not (= x4924 405663989)) (not (= 2678788150 x4924)) (not (= x4924 157198259)) (not (= 1466279372 x4924)) (not (= x4924 4294967296)) (not (= x4924 2796547477)) (not (= x4924 1461501637330902918203684832716283019655932542976)) (not (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x4924)) (not (= x4924 115792089237316195423570985008687907853269984665640564039457)) (not (= x4924 242558722)) (not (= 117300739 x4924)) (not (= 3583811254 x4924)) (not (= 2991318663 x4924)) (not (= 989455977 x4924)) (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4924)) (< 10000 x4924) (not (= 3842108676 x4924)) (not (= 1523576871 x4924)) (not (= 988262939 x4924)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x4924)) (not (= x4924 72570022874062638528011751457397263716769196454539065078543251854057308946432)) (not (= x4924 1608758631))) (not ((_ is x5361) (x7379 x4924)))))
(assert (= (and x4707 (not x3369)) x5599))
(assert (x391 x8579))
(assert (x391 x6801))
(assert (x391 x8190))
(assert (= x1370 (and x9007 x4402)))
(assert (= x8791 (and (not x3934) x780)))
(assert (x391 x8798))
(assert (x6103 (- x5766 x9039)))
(assert (= (or x6936 x6899) x7624))
(assert (= (and x6055 x9075) x2230))
(assert (= (and (not x6214) x1787) x5834))
(assert (x391 x6371))
(assert (x4156 x940 x1726 x5390 x530))
(assert (x4191 x4135 (- x2012 x5766)))
(assert (= x2547 (or x596 x1820)))
(assert (x391 x6769))
(assert (= (or x1701 x8895 x4998 x1068 x6529 x4957) x2187))
(assert (=> (>= 10000 x6453) (= (x7379 x6453) (x5361 x6453))))
(assert (x391 x6024))
(assert (x4191 x8031 (- x5766 x530)))
(assert (x2252 x5049))
(assert (= x3406 (and x6941 x3393)))
(assert (x391 x5622))
(assert (= x2134 (and (not x7640) x7610)))
(assert (= (and (not x772) x3423) x7131))
(assert (x8637 x3466))
(assert (= x6935 (and (not x8601) x4983)))
(assert (x6103 (- x1726 x3593)))
(assert (= x1237 (and (not x7591) x6927)))
(assert (= (and x2469 (not x4299)) x7657))
(assert (x8665 x4135 x2012 x5552 x7316))
(assert (x391 x6251))
(assert (x391 x1737))
(assert (= (x3649 (x3789 x4376 1)) (+ (x3649 x4376) 1)))
(assert (x4191 x8031 (- x5766 x3593)))
(assert (x6103 (- x9039 x3593)))
(assert (= x3861 (or x4249 x7520)))
(assert (x6103 (- x2780 x5766)))
(assert (= (+ (x3649 x5526) 2) (x3649 (x3789 x5526 2))))
(assert (x6103 (- x5766 x7316)))
(assert (= x788 (and x7760 x827)))
(assert (= x1462 (and x2234 x8599)))
(assert (x8665 x774 x490 x3593 x3579))
(assert (x391 x5680))
(assert (x391 x3129))
(assert (x391 x3795))
(assert (= x1336 (and x5114 x7962)))
(assert (=> (<= x2072 10000) (= (x5361 x2072) (x7379 x2072))))
(assert (x8665 x2012 x5116 x7316 x5552))
(assert (= (+ (x3649 x1490) 1) (x3649 (x3789 x1490 1))))
(assert (x391 x7505))
(assert (= (and x767 x2598) x7845))
(assert (= x4514 (and x4637 (not x8494))))
(assert (x8637 x7830))
(assert (x391 x2798))
(assert (x391 x5390))
(assert (= x612 (and (not x2488) x1792)))
(assert (x391 x8214))
(assert (x2252 x6895))
(assert (x391 x3915))
(assert (x391 x1434))
(assert (= (and (not x5630) x2736) x6594))
(assert (= (or x8222 x7155) x5400))
(assert (x4156 x1726 x940 x3593 x3579))
(assert (= (and x8297 x6878) x3596))
(assert (x4191 x490 (- x774 x1256)))
(assert (x391 x557))
(assert (= (+ (x3649 x2591) 1) (x3649 (x3789 x2591 1))))
(assert (x391 x3816))
(assert (x391 x4836))
(assert (= x5726 (or x2875 x8339)))
(assert (x391 x3984))
(assert (x391 x8153))
(assert (x391 x5796))
(assert (= (and x3829 (not x4229)) x8856))
(assert (x6103 (- x9039 x4135)))
(assert (= x7501 (=> (= (> x6515 0) x7683) (and (=> (not x7683) x562) (=> (and (and (= x5377 (= x2879 0)) (<= 0 x8334) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8334)) x7683) (and (=> x5377 x7894) (=> (and (and (= (x4881 x7053) x7750) (= (x7158 (x7379 x2879) x8587 0) x511) (>= x7750 0) (= (= x7750 0) x737) (<= x7750 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7053 (x3789 x511 2))) (not x5377)) (and (=> (not x737) x7042) (=> (and (and (or (and (and (<= 0 x2901) (= (< x2901 x6515) x4567) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2901) (= x2901 (x4881 x8564)) (= (x7158 (x7379 x2179) x8587 0) x7992) (= (not x4567) x4953) (= x8564 (x3789 x7992 2))) x3324) (and (= x4953 x3324) (not x3324))) (and (= (x1009 x8908) x2179) (= (x3789 x8587 1) x8908) (<= x2179 1461501637330902918203684832716283019655932542975) (= (ite (> x8334 0) (not (= 0 x2179)) (< 0 x8334)) x3324) (> 1461501637330902918203684832716283019655932542976 x2179) (<= 0 x2179))) x737) x7439)))))))))
(assert (= (or x2966 x4559) x693))
(assert (x1710 x134))
(assert (x1052 x7759 x3077))
(assert (x391 x3972))
(assert (x391 x8325))
(assert (x6103 (- x940 x172)))
(assert (= (and (not x4140) x4437) x9021))
(assert (= (and x5173 x1093) x8742))
(assert (x391 x4739))
(assert (= x6932 (=> (= x8318 0) x7011)))
(assert (x391 x8079))
(assert (= (and x2763 x7797) x2647))
(assert (x391 x2773))
(assert (x8665 x530 x5390 x2012 x4135))
(assert (x8665 x9039 x530 x5116 x2012))
(assert (= x2442 (or x3572 x5969)))
(assert (= (+ (x3649 x4327) 1) (x3649 (x3789 x4327 1))))
(assert (= (and (not x3409) x487) x5545))
(assert (= x3873 (and x261 x8695)))
(assert (= (and (not x4103) x5248) x6181))
(assert (x391 x1030))
(assert (x391 x3928))
(assert (x391 x6616))
(assert (x391 x3135))
(assert (= (and (not x8999) x998) x1213))
(assert (= x3813 (or x4019 x4395)))
(assert (x4156 x2012 x4135 x3593 x3579))
(assert (x391 x2851))
(assert (=> (>= 10000 x6458) (= (x5361 x6458) (x7379 x6458))))
(assert (= (x3649 (x5361 547091486)) 547091486))
(assert (x4156 x940 x1726 x7316 x5552))
(assert (x4191 x9039 (- x530 x774)))
(assert (= x453 (and (=> (and x7681 (and (or (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4863) (= x740 (x3789 x303 2)) (= (x2957 x740) x4863) (= (x7158 (x7379 x2738) x6992 0) x303) (= x1214 (> x7285 x4863)) (= x2863 (not x1214)) (>= x4863 0)) x6148) (and (= x6148 x2863) (not x6148))) (and (<= 0 x2738) (>= 1461501637330902918203684832716283019655932542975 x2738) (< x2738 1461501637330902918203684832716283019655932542976) (= (ite (< 1 x8334) (not (= x2738 0)) (> x8334 1)) x6148) (= x2738 (x7176 x8083)) (= x8083 (x3789 x3043 1)) (= (x7158 (x7379 x5225) x6992 0) x3043)))) x7204) (=> (and (and (= x5225 x3265) (= 0 x2128)) (not x7681)) x3985))))
(assert (= (and x1470 x6160) x4072))
(assert (= (and x3445 x6382) x2678))
(assert (x391 x7736))
(assert (= (and x3138 (not x5202)) x9137))
(assert (x391 x6778))
(assert (x6103 (- x774 x3593)))
(assert (= (and (not x3090) x6090) x6014))
(assert (x391 x7774))
(assert (= x8902 (and (not x6383) x1419)))
(assert (= (or x2459 x5522) x7662))
(assert (= (and x641 x6053) x6554))
(assert (= (and (not x1691) x5426) x6970))
(assert (= (or x3424 x5191 x6986 x2487 x6377 x5409 x6541 x4064 x1151 x3171 x735 x7969 x6995 x3339 x2887 x4646 x6539 x565 x6420 x3084 x8126 x1865 x5065 x5416 x7410 x8899 x994 x6017 x7775 x1082 x5830 x5825 x3582 x1631 x4326 x192 x8277 x8765 x5686 x756 x5869 x140) x8903))
(assert (x2252 x6599))
(assert (= (+ 2 (x3649 x5773)) (x3649 (x3789 x5773 2))))
(assert (x391 x3261))
(assert (x4191 x1726 (- x940 x5766)))
(assert (= (and x4024 x1930) x9216))
(assert (= x5229 (x3649 (x7379 x5229))))
(assert (= x3 (and (not x1038) x1908)))
(assert (x391 x1593))
(assert (= (and (not x3809) x927) x1201))
(assert (= x2426 (and x854 x9121)))
(assert (x4191 x2012 (- x4135 x3593)))
(assert (x391 x3007))
(assert (x6103 (- x2012 x8031)))
(assert (= (and (not x7872) x8633) x1269))
(assert (= (and (not x7826) x2918) x3462))
(assert (= (and x1948 x1277) x9043))
(assert (x8665 x5552 x7316 x9039 x530))
(assert (x391 x3953))
(assert (x8665 x940 x1726 x9039 x530))
(assert (x391 x7342))
(assert (x391 x1207))
(assert (x8665 x4135 x2012 x1256 x172))
(assert (= x6803 (and (not x8074) x3210)))
(assert (= (and x4847 (not x6113)) x7709))
(assert (= (and x3048 x7981) x8806))
(assert (= x1537 (or x6600 x2186)))
(assert (= x8324 (and x8171 x4225)))
(assert (= (and x9225 x2613) x2186))
(assert (x391 x6191))
(assert (x391 x6612))
(assert (x391 x4864))
(assert (= x6028 (=> (and (= (= (ite x4411 1 0) 0) x2606) (= (< 115792089237316195423570985008687907853269984665640564039457 x447) x4411)) (and (=> (not x2606) x5477) (=> (and x2606 (and (= x5683 (x2237 x6333 x5570)) (= (ite (not x824) 1 0) x6333) (= x2334 (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3384)) (= x824 (= x3384 0)) (= x7789 (= 0 x5683)) (= (x5353 (* x447 1000000000000000000)) x3384) (= x5570 (ite (> 1000000000000000000 x2334) 1 0)))) (and (=> (not x7789) x5477) (=> (and x7789 (and (= (x5353 (* x3384 1000000000000000000)) x634) (= (< 0 x5766) x6074))) (and (=> (not x6074) x1129) (=> (and (and (<= 0 x926) (= (x3789 x3463 2) x4668) (= (x4747 x4668) x926) (= (> x3386 x926) x8080) (= (x4526 x634 x5766) x6248) (= x3386 (x4526 x6248 1000000000000000000)) (<= x926 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x6074) (and (=> (and (not x8080) (and (= x1113 (< 115792089237316195423570985008687907853269984665640564039457 x1935)) (= x384 (= 0 (ite x1113 1 0))) (= x1303 (x7124 (- x926 x3386))))) (and (=> (not x384) x5477) (=> (and (and (= (x2237 x7759 x3077) x3368) (= (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5052) x1136) (= (ite (< x1136 1000000000000000000) 1 0) x3077) (= (ite (not x6243) 1 0) x7759) (= x6243 (= 0 x5052)) (= x2021 (= x3368 0)) (= (x5353 (* 1000000000000000000 x1935)) x5052)) x384) (and (=> (not x2021) x5477) (=> (and (and (= (< 0 x774) x3846) (= (x5353 (* 1000000000000000000 x5052)) x4491)) x2021) (and (=> (not x3846) x1129) (=> (and (and (= x1876 (x8498 x9197)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1876) (= (x3789 x4668 1) x9197) (= x1027 (x4526 x4491 x774)) (= x432 (x4526 x1027 1000000000000000000)) (= (> x432 x1876) x7261) (<= 0 x1876)) x3846) (and (=> (and (not x7261) (and (<= 0 x478) (= x1209 (x2125 (+ 32 x2533))) (= (x7124 (- x1876 x432)) x1553) (<= x6918 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 1461501637330902918203684832716283019655932542976 x478) (= x2753 (x7124 (- x7848 x478))) (<= 0 x6918) (= x3787 (< 0 x2753)) (= (x4540 x9197) x8493) (= x6918 (x3942 x4668)) (<= 0 x8493) (>= 1461501637330902918203684832716283019655932542975 x478) (<= x8493 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (= x164 (x6887 (x7379 x5229))) (= x1231 (= 0 x164)) (>= 1461501637330902918203684832716283019655932542975 x5229) (< x5229 1461501637330902918203684832716283019655932542976) (<= 0 x5229)) (not x3787)) (and (=> (and x1231 (= x847 true)) x4020) (=> (and (and (> 4294967296 x2956) (= (x6887 (x7379 x7848)) x3512) (= (= x3512 0) x5283)) (not x1231)) (and (=> (and (= x847 true) x5283) x4020) (=> (and (and (and (= (x3351 (x7379 x7848)) x4184) (= (and (< (+ x4184 x1935) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x8789 x1935)) x2228) (= x8789 (x3351 (x7379 x7032)))) (or (and (and (= x6598 (x3351 (x7379 x7032))) (= (x3002 (x7379 x7848)) x2603) (> 4294967296 x6271) (= (x2125 (+ x2603 x1935)) x848) (< (+ x1935 x2603) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (- x6598 x1935) x2196) (= x9118 1)) x2228) (and (not x2228) (= x9118 0)))) (not x5283)) x9176))))) (=> (and (and (and (= (x2125 (+ 4 x2533)) x3743) (= x8171 (= x1767 x5402)) (= (x2125 (+ x3743 32)) x6212)) (and (and (= (x6887 (x7379 x5402)) x3190) (= x678 x1935) (= x4136 68) (> 1466279372 x5331) (> x3190 0) (not (< x4136 4)) (= x2800 x8124) (not (= 117300739 x5331)) (= x5331 157198259) (< x5331 599290589) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x8702) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4165) true) (< x4165 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4165)) x1210) (= (x7124 (- x4136 4)) x4165)) x8171)) x3787) (and (=> (and (not x1210) (and (= (= x8124 x2800) x2439) (= x3242 x8124))) (and (=> (not x2439) x7381) (=> (and x2439 (and (= (x7158 (x7379 x8124) x7536 0) x6810) (= 32 x8357) (= 1 x3366) (= x7536 (x7158 (x7379 x7032) (x5361 2) 0)) (= x678 x4328))) x1343))) (=> x1210 x7381))))) (=> x7261 x5477))))))))) (=> x8080 x5477)))))))))))
(assert (x4156 x9039 x530 x5390 x530))
(assert (= x967 (and x1362 x6147)))
(assert (x2252 x1384))
(assert (= (and x3450 x3936) x4397))
(assert (= (and x3121 x8852) x7272))
(assert (x391 x887))
(assert (x391 x8260))
(assert (= (x5361 3069361948) (x7379 3069361948)))
(assert (x391 x8004))
(assert (x391 x812))
(assert (= (and x3236 (not x1250)) x4168))
(assert (x6103 (- x1726 x530)))
(assert (= x5477 x4807))
(assert (x2624 x8475 x774))
(assert (x8665 x5766 x8031 x2012 x5116))
(assert (x8665 x172 x1256 x530 x9039))
(assert (x391 x8471))
(assert (x391 x5195))
(assert (= x2760 (and (not x529) x3868)))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9039))
(assert (x391 x3509))
(assert (x391 x3059))
(assert (= (and x4412 x7311) x4601))
(assert (= x3783 (and (not x5098) x8146)))
(assert (x2252 x1593))
(assert (x8665 x774 x490 x5766 x8031))
(assert (x391 x160))
(assert (= (and (not x5714) x3560) x6825))
(assert (= (and (not x1454) x8987) x8972))
(assert (x6103 (- x5766 x2780)))
(assert (x391 x247))
(assert (and (x3303 x5213 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4253 x5213 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x4077 x5213 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x4526 x5213 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x5213)) (x5837 x5213 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x8637 x3624))
(assert (=> (<= x8530 10000) (= (x5361 x8530) (x7379 x8530))))
(assert (= (x3649 (x7379 x1512)) x1512))
(assert (x391 x1170))
(assert (= (=> (and (= x2519 x7865) (= 0 x2064) (= x6958 x7070)) x2078) x8149))
(assert (= (and x7826 x2918) x9045))
(assert (x391 x4680))
(assert (x391 x4131))
(assert (x391 x6455))
(assert (= (and x22 x6761) x2641))
(assert (x391 x996))
(assert (= (or x2399 x7192) x6254))
(assert (x391 x6253))
(assert (x8665 x5390 x530 x2012 x5116))
(assert (= (and x7681 x3340) x1692))
(assert (x8637 x5425))
(assert (x391 x1996))
(assert (= (and x107 x4583) x1853))
(assert (x391 x3221))
(assert (= (and (not x5823) x3898) x5788))
(assert (= (and x6055 (not x9075)) x4703))
(assert (x6103 (- x1256 x5766)))
(assert (= (and x1757 x8682) x6695))
(assert (=> (>= 10000 x2179) (= (x7379 x2179) (x5361 x2179))))
(assert (= x4295 (and (=> (and (not x4432) (and (= x3501 x3000) (= 0 x6797))) x4728) (=> (and (and (and (= x6816 (x3789 x2952 1)) (= x2952 (x7158 (x7379 x3000) x8027 0)) (<= 0 x1092) (>= 1461501637330902918203684832716283019655932542975 x1092) (= (ite (> x8334 1) (not (= 0 x1092)) (< 1 x8334)) x2665) (> 1461501637330902918203684832716283019655932542976 x1092) (= (x8039 x6816) x1092)) (or (and x2665 (and (>= x1628 0) (= x5992 (x3789 x4337 2)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1628) (= x3685 (> x5077 x1628)) (= x8010 (not x3685)) (= (x7158 (x7379 x1092) x8027 0) x4337) (= x1628 (x8228 x5992)))) (and (not x2665) (= x8010 x2665)))) x4432) x721))))
(assert (x1710 x291))
(assert (= x2544 (and x5055 (not x4017))))
(assert (x391 x485))
(assert (x391 x7616))
(assert (x2252 x7312))
(assert (= (and x5940 x5617) x2610))
(assert (= (or x6096 x4833) x8137))
(assert (= (and x560 x7663) x4259))
(assert (= (+ (x3649 x4025) 1) (x3649 (x3789 x4025 1))))
(assert (=> (<= x2738 10000) (= (x5361 x2738) (x7379 x2738))))
(assert (= x8965 (or x3711 x6738)))
(assert (= x3021 (and x4144 x3679)))
(assert (x4191 x3593 (- x3579 x2780)))
(assert (x391 x6118))
(assert (= (x3649 (x3789 x8857 x2590)) (+ (x3649 x8857) x2590)))
(assert (= (x3649 (x3789 x8237 2)) (+ 2 (x3649 x8237))))
(assert (= (or x8315 (and (not x3615) x2283) x8843 (and x4665 (not x1415)) (and x1175 x1671) (and x4638 x9274)) x714))
(assert (= (or x4219 x1342) x3802))
(assert (= (and x2227 (not x8313)) x6936))
(assert (= (and x3186 (not x7000)) x2018))
(assert (x391 x5356))
(assert (= x7230 (or x660 x1598)))
(assert (= x6170 (and (not x6074) x1051)))
(assert (= x4835 (and x6944 x4419)))
(assert (= (=> (and (= 0 x5722) (= x129 x7365)) x2091) x6489))
(assert (x6103 x1256))
(assert (= x9042 (and (not x6240) x6247)))
(assert (= x7398 (=> (and (= (= 0 x1687) x9109) (or (not x9109) x9109)) x5578)))
(assert (= x4076 (and x5805 (not x6281))))
(assert (= (and x7898 x1937) x8700))
(assert (x391 x286))
(assert (x391 x3762))
(assert (x391 x3287))
(assert (= x5472 (or (and x7967 (not x2922)) x4029 (and (not x7167) x6849) x748 (and x4010 x6332) (and x2785 x96))))
(assert (x391 x5708))
(assert (x7060 x1818))
(assert (= (and x5946 x5670) x3724))
(assert (= x3525 (and x7726 (not x7825))))
(assert (= (and x4512 x7180) x6093))
(assert (= (x5361 4294967296) (x7379 4294967296)))
(assert (x391 x7102))
(assert (= x423 (or x3256 x2419)))
(assert (x1052 x1160 x7089))
(assert (= (x3649 (x7379 x8007)) x8007))
(assert (=> (<= x3150 10000) (= (x7379 x3150) (x5361 x3150))))
(assert (= (x3649 (x7379 x5049)) x5049))
(assert (= (=> (and (= x8753 x1841) (= x6828 x2011) (= x9079 x887) (= x3133 x4428) (= x6265 x2932)) x6806) x7529))
(assert (x8665 x1256 x172 x3579 x3593))
(assert (x391 x4233))
(assert (x391 x422))
(assert (x2252 x7814))
(assert (= x2857 (and x8448 (not x3578))))
(assert (x8665 x5766 x8031 x5116 x2012))
(assert (x391 x5975))
(assert (x391 x6429))
(assert (x8665 x2012 x5116 x5766 x8031))
(assert (= x7979 (and x8688 x4080)))
(assert (x391 x1991))
(assert (= x252 (or x5936 x1524)))
(assert (= 1608758631 (x3649 (x5361 1608758631))))
(assert (x8665 x5552 x7316 x5766 x8031))
(assert (= x2770 (and (not x4538) x7213)))
(assert (= (x5361 405663989) (x7379 405663989)))
(assert (x391 x6568))
(assert (= (and x7451 x3358) x7969))
(assert (= x5666 (and (not x9035) x9154)))
(assert (x4191 x774 (- x490 x5552)))
(assert (x8665 x1256 x172 x4135 x2012))
(assert (= x7467 (and x1480 (not x3330))))
(assert (x6103 (- x774 x1726)))
(assert (x391 x3624))
(assert (= x4034 (and x5663 (not x7567))))
(assert (= (and x1301 (not x4627)) x1919))
(assert (x4191 x774 (- x490 x1256)))
(assert (= x955 (=> (and (= 0 x5300) (= x5676 x1725)) x3144)))
(assert (x6103 (- x2012 x172)))
(assert (= x8716 (and x8011 x7441)))
(assert (x8637 x8584))
(assert (= (x3649 (x3789 x3882 1)) (+ 1 (x3649 x3882))))
(assert (x391 x8833))
(assert (= (and (not x6648) x2409) x3468))
(assert (= (or (and x1094 x5349) x7236) x6318))
(assert (x391 x4671))
(assert (x391 x7481))
(assert (x391 x1829))
(assert (= (and (not x6304) x3239) x2143))
(assert (= (and x2604 x8458) x7249))
(assert (x391 x1571))
(assert (= (or (and x5242 x7606) (and x7489 x6395) (and x4161 x2946) x3264 x3436 (and x2017 (not x9133)) x2610 (and x4243 x6796) (and x1035 (not x6161))) x5854))
(assert (= (and x5558 (not x3003)) x5211))
(assert (= (and (not x4890) x6080) x762))
(assert (= x8981 (and x2665 x8045)))
(assert (x391 x1640))
(assert (= (or x2288 x4793) x1247))
(assert (x391 x6866))
(assert (= x7400 (or x7189 x3730)))
(assert (= (x3649 (x7379 x3638)) x3638))
(assert (= (and x5404 x8496) x9270))
(assert (x6103 (- x2780 x8031)))
(assert (x4191 x530 (- x5390 x940)))
(assert (x391 x3065))
(assert (x391 x5757))
(assert (= x4749 (and x5429 x3106)))
(assert (= (and x8623 x6562) x7006))
(assert (x2624 x3012 x774))
(assert (x391 x517))
(assert (x391 x8717))
(assert (x391 x9026))
(assert (x391 x3113))
(assert (x391 x9170))
(assert (x391 x4174))
(assert (= x8314 (=> (= (= 0 x2709) x1307) (and (=> (and (and (= x1518 (or (> x8798 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x8798 32) (= true (<= x8798 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x2125 (+ x6778 x71)) x8585) (= (x2125 (+ x8798 31)) x41) (= (x2237 115792089237316195423570985008687907853269984665640564039457584007913129639904 x41) x71)) (not x1307)) (and (=> (and x1518 (= x847 true)) x4020) (=> (and (and (= (x8250 x6778) x4458) (= (> x447 x1935) x2058)) (not x1518)) (and (=> x2058 x5477) (=> (and (not x2058) (and (= x589 (x7124 (- x1935 x447))) (= (> x589 115792089237316195423570985008687907853269984665640564039457) x4331) (= (= 0 (ite x4331 1 0)) x2951))) (and (=> (and (and (= (= x7963 0) x7217) (= (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1367) x8230) (= x3488 (ite (not x1690) 1 0)) (= x1367 (x5353 (* x589 1000000000000000000))) (= (x2237 x3488 x2731) x7963) (= x2731 (ite (< x8230 1000000000000000000) 1 0)) (= (= 0 x1367) x1690)) x2951) (and (=> (and (and (= (< 0 x4458) x4813) (= x2698 (x5353 (* 1000000000000000000 x1367)))) x7217) (and (=> (and (and (= (> x931 x1752) x6878) (= (x4526 x2698 x4458) x6005) (= x931 (x4220 x3463)) (<= x931 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4526 x6005 1000000000000000000) x4545) (<= 0 x931) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4545)) x1752)) x4813) (and (=> (and (and (= x301 (x656 x3463)) (= (x2125 (+ x4545 x931)) x6217) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x301) (= x2533 x8585) (<= 0 x301)) (not x6878)) x6028) (=> x6878 x5477))) (=> (not x4813) x1129))) (=> (not x7217) x5477))) (=> (not x2951) x5477))))))) (=> x1307 x2322)))))
(assert (= x6982 (and x5896 x5611)))
(assert (= (or x4248 x4014) x8850))
(assert (= (or x2524 x2567) x8081))
(assert (x391 x1110))
(assert (= (x3649 (x3789 x3463 1)) (+ (x3649 x3463) 1)))
(assert (x4191 x490 (- x774 x9039)))
(assert (x391 x1325))
(assert (x7060 x7433))
(assert (x391 x7574))
(assert (x391 x9233))
(assert (x7060 x8844))
(assert (= (and x6040 (not x1742)) x8598))
(assert (x391 x3472))
(assert (= x575 (or x5588 x5298 x1446 x8225 x26 x1624)))
(assert (x391 x3372))
(assert (= (and x2943 (not x3126)) x6063))
(assert (x6103 (- x490 x3593)))
(assert (x1257 x134))
(assert (x391 x863))
(assert (x391 x4871))
(assert (x391 x2611))
(assert (x391 x2316))
(assert (= (+ 1 (x3649 x5787)) (x3649 (x3789 x5787 1))))
(assert (x2252 x8030))
(assert (x391 x7559))
(assert (x6103 (- x5116 x9039)))
(assert (x6103 x9008))
(assert (x391 x7773))
(assert (= (and x2617 x1346) x8273))
(assert (x6103 (- x490 x5766)))
(assert (x6103 (- x2012 x5116)))
(assert (x391 x5238))
(assert (= (x3649 (x7379 x1385)) x1385))
(assert (= (and (not x3078) x4774) x8918))
(assert (= (and x2198 (not x5104)) x4896))
(assert (x391 x1873))
(assert (= x7374 (and x726 (not x865))))
(assert (= x6476 (and (not x5674) x2384)))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x5139 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x5139 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x5139 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x5139 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x5139 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x5139 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5139)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x5139))) (x8005 1000000000000000000 x5139) (= (x7029 1000000000000000000 x5139) (* 1000000000000000000 x5139)) (x1844 1000000000000000000 x5139) (x7186 1000000000000000000 x5139) (x997 1000000000000000000 x5139) (x1348 1000000000000000000 x5139)))
(assert (x2252 x3001))
(assert (x8665 x3593 x3579 x2780 x172))
(assert (x4156 x530 x5390 x7316 x5552))
(assert (x391 x5357))
(assert (x8665 x490 x774 x9039 x530))
(assert (x2252 x4137))
(assert (= x8050 (=> (and (= x6946 x1345) (= x2955 x1498)) x3696)))
(assert (= (x3649 (x3789 x4705 1)) (+ 1 (x3649 x4705))))
(assert (x391 x5777))
(assert (x391 x8883))
(assert (= (x3649 (x3789 x7864 1)) (+ (x3649 x7864) 1)))
(assert (x6103 (- x3593 x4135)))
(assert (x391 x9160))
(assert (x6103 (- x5552 x1726)))
(assert (x391 x2368))
(assert (= (+ 1 (x3649 x5247)) (x3649 (x3789 x5247 1))))
(assert (x2252 x7114))
(assert (x391 x2491))
(assert (= (+ (x3649 x5581) 1) (x3649 (x3789 x5581 1))))
(assert (= (x3649 (x3789 x2114 1)) (+ 1 (x3649 x2114))))
(assert (= (or x3634 x2182 x8521 x1532 x2177 x8929) x4793))
(assert (x391 x4858))
(assert (x391 x4531))
(assert (= (x7379 1901074598) (x5361 1901074598)))
(assert (= x3031 (and x7254 (not x8385))))
(assert (= (x3649 (x3789 x3307 1)) (+ (x3649 x3307) 1)))
(assert (= (and (not x4645) x1607) x4587))
(assert (= x6561 (and x8805 x4619)))
(assert (x391 x6205))
(assert (x6103 x8031))
(assert (= x1631 (or x7477 x5458)))
(assert (= (and x8499 (not x8247)) x933))
(assert (= (and x2264 (not x4392)) x4952))
(assert (x391 x3402))
(assert (= x8604 (or x210 x7636 x5481 x3293)))
(assert (x391 x4113))
(assert (= x4707 (and x8726 x1921)))
(assert (= (and (not x8967) x1958) x8302))
(assert (= x8468 (=> (and (= 0 x2531) (= x1453 x8240)) x8380)))
(assert (x391 x5645))
(assert (= x4983 (and (not x2777) x2090)))
(assert (= (or x4202 x6990) x3883))
(assert (x2624 x2014 x172))
(assert (x391 x2010))
(assert (= (=> (= (= 0 x6546) x4538) (and (=> x4538 x2322) (=> (and (and (= (x2237 115792089237316195423570985008687907853269984665640564039457584007913129639904 x736) x1581) (= (x2125 (+ x1581 x1621)) x30) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6250) true) (> 32 x6250)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6250)) x5372) (= x736 (x2125 (+ 31 x6250)))) (not x4538)) (and (=> (and (and (= x5643 (x5655 x1621)) (= (ite (> x5643 x4659) x4659 x5643) x8118) (= (> x8118 0) x3678)) (not x5372)) (and (=> (and (and (>= x478 0) (< x478 1461501637330902918203684832716283019655932542976) (= x8894 (x7124 (- x7848 x478))) (= (< 0 x8894) x5203) (>= 1461501637330902918203684832716283019655932542975 x478)) x3678) (and (=> (and x5203 (and (and (and (> 1466279372 x3298) (= x8406 68) (not (= 117300739 x3298)) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x85) (= 157198259 x3298) (= x3656 (x7124 (- x8406 4))) (= x3094 x8118) (not (> 4 x8406)) (< 0 x5952) (< x3298 599290589) (= x2800 x8933) (= (or (and (< x3656 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3656))) (> x3656 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4875) (= x5952 (x6887 (x7379 x5402)))) x1642) (and (= x7946 (x2125 (+ 32 x1718))) (= x1718 (x2125 (+ x30 4))) (= (= x1767 x5402) x1642)))) (and (=> (and (and (= (= x2800 x8933) x3145) (= x8933 x231)) (not x4875)) (and (=> (and (and (= x2226 (x7158 (x7379 x7032) (x5361 2) 0)) (= x7025 32) (= x3094 x609) (= x6829 (x7158 (x7379 x8933) x2226 0)) (= 1 x5535)) x3145) x9130) (=> (not x3145) x1879))) (=> x4875 x1879))) (=> (and (not x5203) (and (= x7970 (x2125 (+ 4 x30))) (= x2938 (= x6951 0)) (< x5229 1461501637330902918203684832716283019655932542976) (<= 0 x5229) (<= x5229 1461501637330902918203684832716283019655932542975) (= (x6887 (x7379 x5229)) x6951))) (and (=> (and (not x2938) (and (= x7950 4) (= x2276 (x6887 (x7379 x7848))) (= (= x2276 0) x1162) (> 4294967296 x4856))) (and (=> (and (and (= x914 (x5985 (x7379 x7848))) (= x5732 (x5985 (x7379 x7032))) (= x3383 (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x8118 x914)) (<= x8118 x5732)))) (not x1162)) (and (=> (and (and (= (= x7848 x8110) x2777) (= (- x5618 x8118) x4118) (< (+ x138 x8118) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x5985 (x7379 x7032)) x5618) (= (x2125 (+ x138 x8118)) x1699) (= x138 (x1395 (x7379 x7848)))) x3383) (and (=> (and (and (> x8153 0) (= x8800 35417553099779373699389112480655434059402432070290151981503827724506945814528) (= 4 x7785) (= x7950 x7785) (= x8153 (x6887 (x7379 x8110))) (= x4750 (= 0 x8118))) x2777) (and (=> (and x4750 (and (= (> x9261 x5009) x9253) (= x5142 (x7158 (x7379 x7032) (x5361 6) 0)) (< x7061 1856199391) (> 2217467699 x7061) (= x4901 (x7158 (x7379 x7032) (x5361 6) 0)) (not (> 988262939 x7061)) (not (= x7061 989455977)) (not (= 1038142104 x7061)) (>= x5009 0) (not (> 4 x7785)) (not (= x7061 988262939)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9261) (<= x5009 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x9261 (x333 x4901)) (<= 0 x9261) (= (x333 x5142) x5009) (= x7061 1313710058))) (and (=> (and (not x9253) (and (<= 0 x3133) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9261)) x8915) (= (< x8915 x3133) x4962) (= (x7124 (- x5009 x9261)) x5887) (<= x3133 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x4962) (and (< x5759 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x5759) (= (x2125 (+ x3133 x9261)) x8500) (= 128 x5354) (= (= x5759 x5402) x3746) (>= x5759 0) (= x4805 (x2125 (+ x3133 x9261))))) (and (=> (and (= (= x8110 x5759) x5537) (not x3746)) (and (=> (and (not x5537) (= x7834 (= x5759 x5049))) (and (=> (and (and (= (= x5759 x4633) x7812) (and (and (= x5741 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4869 599290589) (= x3001 x8110) (> x1169 0) (> 2217467699 x4869) (not (= x4869 405663989)) (> 988262939 x4869) (= x1169 (x6887 (x7379 x4633))) (= (x7124 (- x864 4)) x5791) (= x9261 x6371) (not (< x4869 405663989)) (= 100 x864) (not (> 4 x864)) (not (= x4869 547091486)) (= x2191 x7032) (= (or (and (< x5791 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5791) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5791)) x357) (= x864 100)) x7812)) (not x7834)) (and (=> (and (and (= (= x2191 x7032) x5282) (= x4534 x2191)) (not x357)) (and (=> (and (and (= x6548 (= x3001 x8110)) (= x3001 x3258)) x5282) (and (=> (and x6548 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1433) (= x4852 (x7158 (x7379 x2191) (x5361 5) 0)) (<= 0 x1433) (= x8599 (< x1433 x9261)) (= x4300 x6371) (= x1433 (x3526 x4852)))) (and (=> (and (not x8599) (and (<= 0 x8825) (= x6752 (> x6371 x8825)) (<= x8825 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3526 x5897) x8825) (= (x7158 (x7379 x2191) (x5361 5) 0) x5897))) (and (=> x6752 x9073) (=> (and (and (= x7697 (x7158 (x7379 x3001) (x5361 5) 0)) (= x1831 (x5016 x7697)) (<= 0 x1831) (= (> x1831 x413) x9258) (= (x7124 (- x8825 x6371)) x690) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1831) (= x413 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6371)))) (not x6752)) (and (=> (and (and (= 32 x9031) (= (x2125 (+ x6371 x1831)) x4464) (= x7425 1) (= x6186 1)) (not x9258)) x5502) (=> x9258 x9073))))) (=> x8599 x9073))) (=> (not x6548) x9073))) (=> (not x5282) x9073))) (=> x357 x9073))) (=> (and x7834 (and (< x1413 988262939) (= x3901 (or (and (> 96 x2891) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2891))) (> x2891 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x7074 0) (not (= 547091486 x1413)) (not (> 4 x1824)) (= x7032 x2111) (not (= x1413 405663989)) (= x1824 100) (= 100 x1824) (= x495 x8110) (= x1413 599290589) (= x7074 (x6887 (x7379 x5049))) (not (> 405663989 x1413)) (= x7691 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x2891 (x7124 (- x1824 4))) (< x1413 2217467699) (= x9261 x4984))) (and (=> x3901 x1296) (=> (and (and (= x8573 x2111) (= (= x2111 x7032) x8643)) (not x3901)) (and (=> (and (and (= x515 (= x495 x8110)) (= x249 x495)) x8643) (and (=> (and x515 (and (<= 0 x6449) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6449) (= x8133 (x7158 (x7379 x2111) (x5361 5) 0)) (= x7962 (> x9261 x6449)) (= x8405 x4984) (= x6449 (x1833 x8133)))) (and (=> x7962 x1296) (=> (and (not x7962) (and (<= x1807 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1833 x4527) x1807) (<= 0 x1807) (= (x7158 (x7379 x2111) (x5361 5) 0) x4527) (= x3608 (< x1807 x4984)))) (and (=> (and (and (<= 0 x8717) (= (x7124 (- x1807 x4984)) x4784) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4984)) x1854) (= x6304 (< x1854 x8717)) (= x5405 (x7158 (x7379 x495) (x5361 5) 0)) (= x8717 (x84 x5405)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8717)) (not x3608)) (and (=> (and (and (= 1 x2498) (= x4052 (x2125 (+ x4984 x8717))) (= 32 x8849) (= x8201 1)) (not x6304)) x1608) (=> x6304 x1296))) (=> x3608 x1296))))) (=> (not x515) x1296))) (=> (not x8643) x1296))))))) (=> (and x5537 (and (= x9261 x5465) (not (= x6136 405663989)) (not (= 547091486 x6136)) (= x217 x8110) (= 100 x7989) (= 599290589 x6136) (= x3908 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2434) (and (> 96 x2434) (= (<= x2434 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= 100 x7989) (= x7157 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x7936 x7032) (> 2217467699 x6136) (= (x6887 (x7379 x8110)) x6394) (= x2434 (x7124 (- x7989 4))) (not (> 405663989 x6136)) (> x6394 0) (< x6136 988262939) (not (< x7989 4)))) (and (=> (and (not x3908) (and (= x7936 x6653) (= (= x7936 x7032) x7826))) (and (=> (not x7826) x1139) (=> (and x7826 (and (= x8491 x217) (= (= x8110 x217) x5514))) (and (=> (and (and (= (x7158 (x7379 x7936) (x5361 5) 0) x3784) (<= x3566 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1401 x3784) x3566) (= x9085 x5465) (<= 0 x3566) (= x6870 (< x3566 x9261))) x5514) (and (=> (and (not x6870) (and (= (> x5465 x7164) x3187) (<= 0 x7164) (= (x1401 x7973) x7164) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7164) (= x7973 (x7158 (x7379 x7936) (x5361 5) 0)))) (and (=> (and (and (= x2056 (x7158 (x7379 x217) (x5361 5) 0)) (>= x4961 0) (= (x7124 (- x7164 x5465)) x5751) (= x1937 (< x7200 x4961)) (<= x4961 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5465)) x7200) (= x4961 (x6860 x2056))) (not x3187)) (and (=> (and (not x1937) (and (= 32 x7455) (= x1356 1) (= 1 x697) (= x5913 (x2125 (+ x4961 x5465))))) x3228) (=> x1937 x1139))) (=> x3187 x1139))) (=> x6870 x1139))) (=> (not x5514) x1139))))) (=> x3908 x1139))))) (=> (and x3746 (and (= x3682 100) (= x2851 x8110) (= (or (> x2607 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2607 96) (= true (<= x2607 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x3355) (= 599290589 x3529) (= x9261 x1539) (= (x7124 (- x3682 4)) x2607) (= x3682 100) (= x7032 x4426) (= x695 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x6693 (x6887 (x7379 x5402))) (> x6693 0) (not (< x3529 599290589)) (< x3529 1466279372) (not (< x3682 4)))) (and (=> x3355 x1314) (=> (and (and (= x5410 x4426) (= (= x4426 x7032) x8761)) (not x3355)) (and (=> (and (and (= x2583 x2851) (= (= x8110 x2851) x165)) x8761) (and (=> (and (and (= x5786 x1539) (= x6613 (x4475 x6279)) (= x5600 (< x6613 x9261)) (<= x6613 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7158 (x7379 x4426) (x5361 1) 0) x6279) (<= 0 x6613)) x165) (and (=> (and (not x5600) (= x3073 (< x6613 x1539))) (and (=> x3073 x1314) (=> (and (not x3073) (and (= (x7124 (- x6613 x1539)) x2010) (= x4959 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1539))) (= x3486 (< x4959 x2927)) (= (x1647 x4982) x2927) (= x3788 (x7158 (x7379 x4426) (x5361 1) 0)) (= x4982 (x7158 (x7379 x2851) (x5361 1) 0)) (>= x2927 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2927))) (and (=> (and (not x3486) (and (= (< x7300 x2927) x4375) (= (x2125 (+ x1539 x2927)) x7300))) (and (=> x4375 x1314) (=> (and (and (>= x7094 0) (= x7888 (> x1539 x7094)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7094) (= (x7158 (x7379 x2851) (x5361 1) 0) x5745) (= (x7158 (x7379 x8110) x213 0) x5026) (= x213 (x7158 (x7379 x4426) (x5361 2) 0)) (= x7094 (x2392 x5026))) (not x4375)) (and (=> (and (= x5279 (> x1539 x7094)) (not x7888)) (and (=> (and (and (= (x7124 (- x7094 x1539)) x6637) (= 1 x379) (= (x7158 (x7379 x8110) x2136 0) x416) (= x2136 (x7158 (x7379 x4426) (x5361 2) 0)) (= x6054 32)) (not x5279)) x1084) (=> x5279 x1314))) (=> x7888 x1314))))) (=> x3486 x1314))))) (=> x5600 x1314))) (=> (not x165) x1314))) (=> (not x8761) x1314))))))) (=> (and (= x3133 x7693) x4962) x6719))) (=> (and (= x7693 x3133) x9253) x6719))) (=> (and (= x7693 x3133) (not x4750)) x6719))) (=> (and (= (= x7848 x5049) x8601) (not x2777)) (and (=> (and x8601 (and (= x7627 (x6887 (x7379 x5049))) (< 0 x7627) (= x7950 x8650) (= x8650 4) (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x3738) (= (= 0 x8118) x158))) (and (=> (and (= x4990 x8790) (not x158)) x4745) (=> (and x158 (and (not (> 4 x8650)) (= x3554 (< x8679 x8047)) (= (x7158 (x7379 x7032) (x5361 6) 0) x7741) (not (< x6473 988262939)) (< x6473 1856199391) (not (= 1038142104 x6473)) (= (x8441 x7741) x8047) (= x6473 1313710058) (= x8679 (x8441 x2480)) (< x6473 2217467699) (<= x8679 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x6473 988262939)) (<= x8047 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x6473 989455977)) (<= 0 x8679) (= x2480 (x7158 (x7379 x7032) (x5361 6) 0)) (>= x8047 0))) (and (=> (and (not x3554) (and (= x5080 (> x8790 x4809)) (= x1599 (x7124 (- x8679 x8047))) (<= 0 x8790) (= x4809 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8047))) (<= x8790 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and x5080 (= x8790 x4990)) x4745) (=> (and (not x5080) (and (<= 0 x3921) (= x7308 (x2125 (+ x8047 x8790))) (= x8647 (= x5402 x3921)) (>= 1461501637330902918203684832716283019655932542975 x3921) (= x7371 (x2125 (+ x8790 x8047))) (= x3162 128) (< x3921 1461501637330902918203684832716283019655932542976))) (and (=> (and (not x8647) (= (= x3921 x8110) x4078)) (and (=> (and (not x4078) (= x2317 (= x5049 x3921))) (and (=> (and (not x2317) (and (= x5038 (= x4633 x3921)) (and (and (= x7032 x9122) (= x5049 x9058) (= 100 x2204) (not (< x3385 405663989)) (= x7559 (x7124 (- x2204 4))) (> x611 0) (= (or (and (= (<= x7559 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x7559 96)) (> x7559 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x7698) (= x1205 x8047) (not (= x3385 405663989)) (= x2204 100) (= x4815 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= 547091486 x3385)) (not (< x2204 4)) (< x3385 2217467699) (= x611 (x6887 (x7379 x4633))) (= x3385 599290589) (> 988262939 x3385)) x5038))) (and (=> (and (and (= x3272 x9122) (= x3193 (= x9122 x7032))) (not x7698)) (and (=> (not x3193) x7496) (=> (and x3193 (and (= x9058 x4652) (= (= x5049 x9058) x3516))) (and (=> (not x3516) x7496) (=> (and x3516 (and (= (> x8047 x8211) x865) (= x6404 x1205) (= x8211 (x3526 x4853)) (>= x8211 0) (= (x7158 (x7379 x9122) (x5361 5) 0) x4853) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8211))) (and (=> x865 x7496) (=> (and (and (= x3963 (x7158 (x7379 x9122) (x5361 5) 0)) (>= x7326 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7326) (= x1351 (> x1205 x7326)) (= x7326 (x3526 x3963))) (not x865)) (and (=> x1351 x7496) (=> (and (and (<= x4496 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5867 x4007) x4496) (= x3874 (x7124 (- x7326 x1205))) (= x5070 (< x8099 x4496)) (= x4007 (x7158 (x7379 x9058) (x5361 5) 0)) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1205)) x8099) (<= 0 x4496)) (not x1351)) (and (=> x5070 x7496) (=> (and (not x5070) (and (= x5046 1) (= (x2125 (+ x1205 x4496)) x2766) (= x8048 1) (= x942 32))) x9028))))))))))) (=> x7698 x7496))) (=> (and (and (not (< x6551 4)) (not (= 405663989 x6321)) (not (= 547091486 x6321)) (< x6321 988262939) (= x5699 (x7124 (- x6551 4))) (= 599290589 x6321) (< 0 x959) (= x1046 x7032) (> 2217467699 x6321) (= x8047 x2338) (not (> 405663989 x6321)) (= x6551 100) (= (x6887 (x7379 x5049)) x959) (= x5049 x2105) (= x1250 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5699) (and (< x5699 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5699) true)))) (= 100 x6551) (= x14 16156842317565293874272834530371880720966471053262404558597773956279093428224)) x2317) (and (=> x1250 x3577) (=> (and (and (= x1046 x7620) (= (= x1046 x7032) x6753)) (not x1250)) (and (=> (not x6753) x3577) (=> (and x6753 (and (= x3060 (= x2105 x5049)) (= x761 x2105))) (and (=> (not x3060) x3577) (=> (and x3060 (and (= x5534 (x7158 (x7379 x1046) (x5361 5) 0)) (= x5185 x2338) (= (x1833 x5534) x8926) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8926) (= x6154 (< x8926 x8047)) (<= 0 x8926))) (and (=> (and (not x6154) (and (= x8458 (> x2338 x2862)) (= x7352 (x7158 (x7379 x1046) (x5361 5) 0)) (= (x1833 x7352) x2862) (>= x2862 0) (<= x2862 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x8458 x3577) (=> (and (not x8458) (and (= x2260 (x7158 (x7379 x2105) (x5361 5) 0)) (= (x7124 (- x2862 x2338)) x3375) (= (< x620 x2321) x1486) (= x620 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2338))) (= (x3771 x2260) x2321) (>= x2321 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2321))) (and (=> x1486 x3577) (=> (and (and (= x525 1) (= 32 x8605) (= x3548 (x2125 (+ x2321 x2338))) (= x7382 1)) (not x1486)) x6077))))) (=> x6154 x3577))))))))))) (=> (and x4078 (and (= x4586 (x6887 (x7379 x8110))) (< x7017 2217467699) (= x2165 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 4 x6439)) (= (or (> x8396 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x8396 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8396) true))) x3268) (not (= 405663989 x7017)) (= x6439 100) (= x5049 x1385) (not (= x7017 547091486)) (= x7017 599290589) (> 988262939 x7017) (not (< x7017 405663989)) (= x5696 x8047) (= 100 x6439) (= x8396 (x7124 (- x6439 4))) (> x4586 0) (= x7032 x1951))) (and (=> x3268 x4859) (=> (and (not x3268) (and (= x7582 (= x1951 x7032)) (= x510 x1951))) (and (=> (and x7582 (and (= x1385 x1825) (= x3019 (= x5049 x1385)))) (and (=> (not x3019) x4859) (=> (and (and (= x1677 x5696) (<= 0 x1887) (= (< x1887 x8047) x1304) (= (x1401 x3404) x1887) (<= x1887 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3404 (x7158 (x7379 x1951) (x5361 5) 0))) x3019) (and (=> x1304 x4859) (=> (and (and (<= x201 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x201 x5696) x7096) (>= x201 0) (= x110 (x7158 (x7379 x1951) (x5361 5) 0)) (= (x1401 x110) x201)) (not x1304)) (and (=> (and (and (= x8694 (x6038 x7634)) (= (< x1133 x8694) x5823) (= (x7158 (x7379 x1385) (x5361 5) 0) x7634) (= (x7124 (- x201 x5696)) x1560) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8694) (= x1133 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5696))) (<= 0 x8694)) (not x7096)) (and (=> (and (and (= x1615 (x2125 (+ x5696 x8694))) (= 1 x986) (= 1 x2151) (= 32 x1603)) (not x5823)) x742) (=> x5823 x4859))) (=> x7096 x4859))))))) (=> (not x7582) x4859))))))) (=> (and (and (= (or (and (> 96 x8422) (= (<= x8422 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x8422 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x5392) (> 1466279372 x5937) (< 0 x7614) (= x4125 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x8559 100) (= x2508 x5049) (= x7032 x1354) (= x8422 (x7124 (- x8559 4))) (not (< x8559 4)) (= x8047 x2023) (= x7614 (x6887 (x7379 x5402))) (not (< x5937 599290589)) (= x8559 100) (= 599290589 x5937)) x8647) (and (=> (and (and (= (= x1354 x7032) x3862) (= x1354 x6795)) (not x5392)) (and (=> (not x3862) x5631) (=> (and (and (= x4424 x2508) (= (= x5049 x2508) x3570)) x3862) (and (=> (and (and (= (x7158 (x7379 x1354) (x5361 1) 0) x6585) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x66) (>= x66 0) (= (x4475 x6585) x66) (= x5379 x2023) (= x6383 (< x66 x8047))) x3570) (and (=> (and (= (> x2023 x66) x2207) (not x6383)) (and (=> x2207 x5631) (=> (and (not x2207) (and (= x2627 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2023))) (= (x7124 (- x66 x2023)) x6836) (<= 0 x4371) (= (x7158 (x7379 x1354) (x5361 1) 0) x5179) (<= x4371 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4371 (x6296 x561)) (= x7633 (< x2627 x4371)) (= x561 (x7158 (x7379 x2508) (x5361 1) 0)))) (and (=> x7633 x5631) (=> (and (not x7633) (and (= x2696 (< x5243 x4371)) (= x5243 (x2125 (+ x2023 x4371))))) (and (=> (and (and (= (x7158 (x7379 x5049) x7796 0) x8257) (= (x2392 x8257) x4466) (= x7796 (x7158 (x7379 x1354) (x5361 2) 0)) (>= x4466 0) (= (x7158 (x7379 x2508) (x5361 1) 0) x5391) (= (> x2023 x4466) x9096) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4466)) (not x2696)) (and (=> (and (= (> x2023 x4466) x2433) (not x9096)) (and (=> x2433 x5631) (=> (and (not x2433) (and (= x6610 (x7124 (- x4466 x2023))) (= x5035 32) (= (x7158 (x7379 x1354) (x5361 2) 0) x1676) (= x142 1) (= x3259 (x7158 (x7379 x5049) x1676 0)))) x1004))) (=> x9096 x5631))) (=> x2696 x5631))))))) (=> x6383 x5631))) (=> (not x3570) x5631))))) (=> x5392 x5631))))))) (=> (and x3554 (= x8790 x4990)) x4745))))) (=> (and (not x8601) (and (= x5131 (= x4633 x7848)) (and x5131 (and (= 4 x856) (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x5647) (= x856 x7950) (< 0 x6180) (= (= x8118 0) x924) (= x6180 (x6887 (x7379 x4633))))))) (and (=> (and x924 (and (not (> 988262939 x1069)) (not (= 1038142104 x1069)) (= x7386 (x7158 (x7379 x7032) (x5361 6) 0)) (= x5720 (x7158 (x7379 x7032) (x5361 6) 0)) (= x3287 (x1698 x5720)) (not (= x1069 989455977)) (> 2217467699 x1069) (<= x4267 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x3287 x4267) x5904) (not (> 4 x856)) (<= x3287 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4267 0) (>= x3287 0) (not (= 988262939 x1069)) (< x1069 1856199391) (= (x1698 x7386) x4267) (= x1069 1313710058))) (and (=> (and x5904 (= x1841 x5621)) x3669) (=> (and (and (= x812 (x7124 (- x4267 x3287))) (>= x1841 0) (= (< x240 x1841) x4612) (= x240 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3287))) (<= x1841 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x5904)) (and (=> (and (and (= x2077 (x2125 (+ x3287 x1841))) (<= 0 x1062) (= x4298 128) (= (x2125 (+ x1841 x3287)) x3240) (= (= x1062 x5402) x2580) (>= 1461501637330902918203684832716283019655932542975 x1062) (> 1461501637330902918203684832716283019655932542976 x1062)) (not x4612)) (and (=> (and (not x2580) (= x8385 (= x8110 x1062))) (and (=> (and x8385 (and (< x6714 988262939) (not (= 547091486 x6714)) (= 100 x4047) (< 0 x3233) (not (= x6714 405663989)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x528) (and (> 96 x528) (= (<= x528 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x5977) (= (x7124 (- x4047 4)) x528) (= x4047 100) (< x6714 2217467699) (= x4633 x8824) (= x5443 x3287) (= x4695 x7032) (not (> 4 x4047)) (= x1511 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3233 (x6887 (x7379 x8110))) (= 599290589 x6714) (not (< x6714 405663989)))) (and (=> x5977 x8120) (=> (and (and (= x7337 (= x7032 x4695)) (= x5776 x4695)) (not x5977)) (and (=> (and (and (= (= x8824 x4633) x937) (= x8824 x4032)) x7337) (and (=> (not x937) x8120) (=> (and (and (= x1700 (> x3287 x5882)) (= (x1401 x1547) x5882) (= x5443 x6289) (<= 0 x5882) (= x1547 (x7158 (x7379 x4695) (x5361 5) 0)) (<= x5882 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x937) (and (=> x1700 x8120) (=> (and (and (= (< x5567 x5443) x5739) (>= x5567 0) (= (x1401 x8166) x5567) (= x8166 (x7158 (x7379 x4695) (x5361 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5567)) (not x1700)) (and (=> (and (not x5739) (and (= x6519 (x7124 (- x5567 x5443))) (= (x7158 (x7379 x8824) (x5361 5) 0) x2690) (<= x6645 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8960 (< x2775 x6645)) (= x6645 (x7623 x2690)) (<= 0 x6645) (= x2775 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5443))))) (and (=> (and (not x8960) (and (= x2261 32) (= x6791 (x2125 (+ x5443 x6645))) (= 1 x1730) (= 1 x7715))) x1661) (=> x8960 x8120))) (=> x5739 x8120))))))) (=> (not x7337) x8120))))) (=> (and (= x3604 (= x1062 x5049)) (not x8385)) (and (=> (and x3604 (and (= x4497 599290589) (= x6094 (x6887 (x7379 x5049))) (= (x7124 (- x577 4)) x6000) (= x577 100) (not (= 405663989 x4497)) (= x577 100) (not (> 4 x577)) (= x4633 x130) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6000) (and (> 96 x6000) (= true (<= x6000 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1580) (= x3287 x3980) (< 0 x6094) (> 2217467699 x4497) (= x836 x7032) (not (= 547091486 x4497)) (> 988262939 x4497) (not (< x4497 405663989)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x576))) (and (=> (and (not x1580) (and (= x5804 x836) (= x4908 (= x836 x7032)))) (and (=> (and x4908 (and (= x1859 (= x4633 x130)) (= x4201 x130))) (and (=> (and (and (= (x1833 x5908) x509) (= x5908 (x7158 (x7379 x836) (x5361 5) 0)) (= x4144 (> x3287 x509)) (<= 0 x509) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x509) (= x3980 x6393)) x1859) (and (=> x4144 x5752) (=> (and (and (<= 0 x1262) (= x1262 (x1833 x3205)) (= x3205 (x7158 (x7379 x836) (x5361 5) 0)) (<= x1262 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4304 (> x3980 x1262))) (not x4144)) (and (=> x4304 x5752) (=> (and (and (= (x7158 (x7379 x130) (x5361 5) 0) x9126) (= (x7124 (- x1262 x3980)) x6128) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8755) (<= 0 x8755) (= (> x8755 x5103) x8719) (= x5103 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3980))) (= x8755 (x8582 x9126))) (not x4304)) (and (=> (and (and (= x3589 1) (= 32 x4394) (= x813 1) (= (x2125 (+ x8755 x3980)) x1073)) (not x8719)) x8832) (=> x8719 x5752))))))) (=> (not x1859) x5752))) (=> (not x4908) x5752))) (=> x1580 x5752))) (=> (and (and (= x6135 (= x1062 x4633)) (and (and (> 2217467699 x6850) (= x2986 100) (> 988262939 x6850) (not (< x2986 4)) (not (= 547091486 x6850)) (= x3287 x3394) (< 0 x3563) (= x3563 (x6887 (x7379 x4633))) (= x5344 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x6164 x4633) (= x2986 100) (not (> 405663989 x6850)) (not (= 405663989 x6850)) (= x6850 599290589) (= x173 x7032) (= x3936 (or (and (> 96 x2773) (= (<= x2773 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2773))) (= (x7124 (- x2986 4)) x2773)) x6135)) (not x3604)) (and (=> (and (and (= (= x173 x7032) x9180) (= x3781 x173)) (not x3936)) (and (=> (and (and (= x6164 x3810) (= (= x4633 x6164) x3066)) x9180) (and (=> (and (and (= (< x3465 x3287) x502) (= x3394 x5636) (<= x3465 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3465 0) (= (x3526 x3807) x3465) (= x3807 (x7158 (x7379 x173) (x5361 5) 0))) x3066) (and (=> x502 x5610) (=> (and (and (= x7938 (< x176 x3394)) (<= x176 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x176 (x3526 x282)) (= x282 (x7158 (x7379 x173) (x5361 5) 0)) (<= 0 x176)) (not x502)) (and (=> x7938 x5610) (=> (and (and (>= x6754 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6754) (= x6113 (> x6754 x6703)) (= (x7124 (- x176 x3394)) x6875) (= x1616 (x7158 (x7379 x6164) (x5361 5) 0)) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3394)) x6703) (= (x5378 x1616) x6754)) (not x7938)) (and (=> x6113 x5610) (=> (and (not x6113) (and (= x8145 32) (= x394 1) (= 1 x5470) (= (x2125 (+ x6754 x3394)) x5541))) x5174))))))) (=> (not x3066) x5610))) (=> (not x9180) x5610))) (=> x3936 x5610))))))) (=> (and x2580 (and (= 599290589 x9151) (> x2084 0) (= x4633 x2062) (> 1466279372 x9151) (= x3287 x2316) (= x9102 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x7032 x1996) (= x2084 (x6887 (x7379 x5402))) (not (> 4 x6450)) (not (< x9151 599290589)) (= x3111 (x7124 (- x6450 4))) (= x989 (or (and (= (<= x3111 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3111 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3111))) (= x6450 100) (= x6450 100))) (and (=> (and (and (= x1996 x4396) (= x8698 (= x1996 x7032))) (not x989)) (and (=> (and (and (= (= x4633 x2062) x5337) (= x2062 x953)) x8698) (and (=> (not x5337) x6846) (=> (and x5337 (and (= x555 x2316) (>= x1517 0) (= (x7158 (x7379 x1996) (x5361 1) 0) x6456) (<= x1517 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x6963 (> x3287 x1517)) (= x1517 (x4475 x6456)))) (and (=> x6963 x6846) (=> (and (= (< x1517 x2316) x242) (not x6963)) (and (=> (and (and (>= x8349 0) (= x5263 (> x8349 x3188)) (= x3668 (x7124 (- x1517 x2316))) (<= x8349 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2060 (x7158 (x7379 x2062) (x5361 1) 0)) (= x8349 (x6913 x2060)) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2316)) x3188) (= (x7158 (x7379 x1996) (x5361 1) 0) x2070)) (not x242)) (and (=> (and (not x5263) (and (= x6950 (< x2378 x8349)) (= (x2125 (+ x8349 x2316)) x2378))) (and (=> (and (not x6950) (and (= (x7158 (x7379 x4633) x4398 0) x2304) (= (x7158 (x7379 x2062) (x5361 1) 0) x3365) (= x4398 (x7158 (x7379 x1996) (x5361 2) 0)) (>= x2759 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2759) (= (x2392 x2304) x2759) (= (< x2759 x2316) x1166))) (and (=> (and (not x1166) (= (< x2759 x2316) x1193)) (and (=> (and (not x1193) (and (= (x7124 (- x2759 x2316)) x7396) (= x7593 32) (= 1 x6837) (= x3641 (x7158 (x7379 x4633) x2644 0)) (= (x7158 (x7379 x1996) (x5361 2) 0) x2644))) x8489) (=> x1193 x6846))) (=> x1166 x6846))) (=> x6950 x6846))) (=> x5263 x6846))) (=> x242 x6846))))))) (=> (not x8698) x6846))) (=> x989 x6846))))) (=> (and (= x5621 x1841) x4612) x3669))))) (=> (and (not x924) (= x1841 x5621)) x3669))))))) (=> (and (not x3383) (and (= 0 x5093) (= x1841 x3712) (= x8790 x2625) (= x6662 x3133))) x3759))) (=> (and (= x847 true) x1162) x4020))) (=> (and x2938 (= true x847)) x4020))))) (=> (and (and (= x30 x3412) (= x6807 x1841) (= x8790 x1090) (= x3133 x8330)) (not x3678)) x383))) (=> (and (= true x847) x5372) x4020))))) x3249))
(assert (x1052 x8542 x5622))
(assert (and (x5662 x6381 1000000000000000000) (x6638 x6381 1000000000000000000) (=> (and (< 0 x6381) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x6381 1000000000000000000)) (- x6381 1000000000000000000)) (>= x6381 (* 1000000000000000000 (x4526 x6381 1000000000000000000))))) (x4068 x6381 1000000000000000000) (x797 x6381 1000000000000000000)))
(assert (= x6231 (and (not x4278) x5381)))
(assert (x391 x9134))
(assert (= (x7379 1913449218) (x5361 1913449218)))
(assert (x6103 (- x3579 x2780)))
(assert (x391 x1810))
(assert (x8637 x1016))
(assert (= x3422 (and x7904 (not x1693))))
(assert (x391 x9085))
(assert (= (x3649 (x3789 x1982 2)) (+ 2 (x3649 x1982))))
(assert (x391 x115))
(assert (= x6341 (and x6788 (not x3403))))
(assert (x391 x7285))
(assert (x391 x7307))
(assert (x391 x5237))
(assert (= (x3649 (x7379 x6391)) x6391))
(assert (x391 x3392))
(assert (= (and x3183 x8723) x1374))
(assert (= (or (and x7393 x846) (and (not x8707) x4642)) x8767))
(assert (x391 x6297))
(assert (= x4369 (and (not x6867) x2904)))
(assert (x2252 x2691))
(assert (=> (>= 10000 x8106) (= (x7379 x8106) (x5361 x8106))))
(assert (x391 x9169))
(assert (= x8477 (and x1549 (not x1193))))
(assert (x4156 x1726 x940 x2780 x172))
(assert (x4191 x2012 (- x4135 x5552)))
(assert (x4191 x530 (- x9039 x7316)))
(assert (x391 x8508))
(assert (= x1607 (and x7281 x1233)))
(assert (= (=> (and (= x603 x6186) (= x8873 x9031)) x7561) x5502))
(assert (x391 x2909))
(assert (x391 x1252))
(assert (x391 x4214))
(assert (x391 x5154))
(assert (x391 x6850))
(assert (x391 x1762))
(assert (= x4821 (or x7708 x6774)))
(assert (= x5342 (and x1990 x7097)))
(assert (x391 x1147))
(assert (x391 x569))
(assert (x1052 x1406 x6461))
(assert (= (and x3197 (not x930)) x3100))
(assert (x391 x864))
(assert (= (and (not x3073) x5980) x6571))
(assert (x391 x3038))
(assert (= (+ 1 (x3649 x3680)) (x3649 (x3789 x3680 1))))
(assert (x391 x4789))
(assert (= x8487 (and x704 x1281)))
(assert (x391 x3199))
(assert (= x5698 (or x1719 x652)))
(assert (x4191 x2780 (- x172 x940)))
(assert (x2252 x8110))
(assert (x391 x5723))
(assert (x391 x2086))
(assert (= (and x2823 x6581) x4704))
(assert (x4191 x1256 (- x172 x5552)))
(assert (x391 x2965))
(assert (= (and x839 x8285) x513))
(assert (= (and x4643 x6985) x4655))
(assert (x391 x150))
(assert (x391 x6399))
(assert (x391 x5948))
(assert (x8130 x5769))
(assert (= (or x6388 x2852) x2028))
(assert (=> (>= 10000 x7107) (= (x7379 x7107) (x5361 x7107))))
(assert (= x1489 (=> (and (= x1687 x5015) (= x2953 x6268)) x7398)))
(assert (x391 x217))
(assert (x391 x2296))
(assert (= x1934 (or x1653 x6291)))
(assert (x391 x3329))
(assert (= x89 (and x4103 x5248)))
(assert (x391 x690))
(assert (= x4764 (and x8921 x3574)))
(assert (x391 x2103))
(assert (=> (>= 10000 x6232) (= (x7379 x6232) (x5361 x6232))))
(assert (x4191 x3593 (- x3579 x8031)))
(assert (x4191 x2012 (- x4135 x940)))
(assert (x391 x7218))
(assert (x391 x6158))
(assert (x391 x7556))
(assert (x4156 x5116 x2012 x2780 x172))
(assert (= x4378 (and x6952 x4288)))
(assert (= (and x4639 x8347) x4009))
(assert (= x2475 (and x3047 (not x3905))))
(assert (x391 x2202))
(assert (= x5903 (=> (and (= x3269 x5974) (= x5499 x2472)) x5099)))
(assert (x391 x1976))
(assert (x391 x5532))
(assert (= (and (not x560) x7663) x4975))
(assert (= (x7379 76833804140862540057647519496925185374644862498684814347804924264468996685824) (x5361 76833804140862540057647519496925185374644862498684814347804924264468996685824)))
(assert (x391 x4187))
(assert (x391 x9191))
(assert (x391 x1318))
(assert (x4156 x530 x5390 x4135 x2012))
(assert (x6103 (- x172 x490)))
(assert (x391 x4006))
(assert (= (and x2784 (not x4829)) x5969))
(assert (= x5749 (and x7175 x8132)))
(assert (= (and x1526 (not x9096)) x3824))
(assert (x8637 x1252))
(assert (= (and (not x2229) x5171) x8223))
(assert (= x2178 (and x5129 x5244)))
(assert (x6103 (- x774 x172)))
(assert (x7060 x2402))
(assert (x391 x5547))
(assert (x391 x2846))
(assert (= (and x2585 (not x3944)) x7958))
(assert (x4156 x5390 x530 x490 x774))
(assert (= (and x7722 x3591) x1586))
(assert (x391 x6003))
(assert (x4191 x8031 (- x5766 x3579)))
(assert (x8637 x6741))
(assert (= (and x7096 x3568) x2902))
(assert (= (x7379 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x5361 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x391 x7072))
(assert (x4191 x172 (- x2780 x1256)))
(assert (x391 x135))
(assert (x391 x5887))
(assert (x2252 x8952))
(assert (= (and (not x4432) x3337) x4442))
(assert (x391 x2592))
(assert (= (and x1929 x2201) x2225))
(assert (x4156 x2012 x4135 x5390 x530))
(assert (= (or x7035 x674) x2413))
(assert (x391 x4086))
(assert (x391 x4622))
(assert (= (and x8043 x5862) x7868))
(assert (= x6954 (and x2003 x6964)))
(assert (x4156 x9039 x530 x4135 x2012))
(assert (x391 x3395))
(assert (x391 x6714))
(assert (=> (>= 10000 x6793) (= (x5361 x6793) (x7379 x6793))))
(assert (x391 x5751))
(assert (x391 x6953))
(assert (x4191 x3579 (- x3593 x5766)))
(assert (= x9080 (=> (and (= x7653 x6250) (= x6546 x4179)) x3092)))
(assert (= x476 (x3649 (x7379 x476))))
(assert (= (x3649 (x3789 x7401 1)) (+ 1 (x3649 x7401))))
(assert (= (and x5628 (not x2892)) x7594))
(assert (x391 x609))
(assert (= (and (not x4702) x7138) x2112))
(assert (x6103 (- x4135 x3593)))
(assert (= x5359 (or x3902 x5525 (and x2371 x3322) (and x2375 (not x9139)) (and (not x1326) x6441) (and x7128 x500))))
(assert (= (and x4341 (not x4808)) x8245))
(assert (x391 x1311))
(assert (= (and x4265 x6270) x4347))
(assert (= x7431 (x3649 (x7379 x7431))))
(assert (x391 x6519))
(assert (x391 x7611))
(assert (= (x3649 (x5361 20853193852723734048814770637610870652489083209607696777694672748161462697984)) 20853193852723734048814770637610870652489083209607696777694672748161462697984))
(assert (x391 x5597))
(assert (x391 x7332))
(assert (= x5199 (and x3080 x9182)))
(assert (x4191 x940 (- x1726 x2780)))
(assert (x391 x5109))
(assert (x391 x745))
(assert (= (and (not x1602) x6594) x7507))
(assert (x2252 x1660))
(assert (x4156 x490 x774 x5116 x2012))
(assert (and (x5662 x5460 1000000000000000000) (x6638 x5460 1000000000000000000) (=> (and (< 0 x5460) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x5460 1000000000000000000)) (- x5460 1000000000000000000)) (>= x5460 (* 1000000000000000000 (x4526 x5460 1000000000000000000))))) (x4068 x5460 1000000000000000000) (x797 x5460 1000000000000000000)))
(assert (x8665 x172 x1256 x2780 x172))
(assert (= x2469 (and x4160 x9135)))
(assert (x391 x1117))
(assert (x391 x4105))
(assert (= x2099 (and x1246 x4883)))
(assert (x391 x7314))
(assert (= x1656 (and x6700 x2228)))
(assert (= x6077 (=> (and (= x8605 x2147) (= x7382 x569)) x6506)))
(assert (= x7216 (and x7615 x3877)))
(assert (= x7333 (=> (and (= x7407 x8190) (= x1152 0)) x5982)))
(assert (= (and x404 x4952) x8721))
(assert (= (and x8988 x3032) x4495))
(assert (= x1208 (x3649 (x7379 x1208))))
(assert (x8665 x3579 x3593 x530 x9039))
(assert (x391 x8971))
(assert (x391 x9156))
(assert (x4191 x5552 (- x7316 x530)))
(assert (x4191 x9039 (- x530 x2012)))
(assert (= x2281 (and x3938 x987)))
(assert (x391 x1584))
(assert (= x2994 (and (not x6941) x3393)))
(assert (= (x3649 (x3789 x4700 1)) (+ (x3649 x4700) 1)))
(assert (x4191 x2780 (- x172 x8031)))
(assert (= (x3649 (x7379 x7114)) x7114))
(assert (= x2776 (and x7600 x3846)))
(assert (x391 x8772))
(assert (= (and x3803 (not x3847)) x9100))
(assert (and (x5662 x5875 1000000000000000000) (x6638 x5875 1000000000000000000) (=> (and (< 0 x5875) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x5875 1000000000000000000)) (- x5875 1000000000000000000)) (>= x5875 (* 1000000000000000000 (x4526 x5875 1000000000000000000))))) (x4068 x5875 1000000000000000000) (x797 x5875 1000000000000000000)))
(assert (x6103 x6893))
(assert (x391 x139))
(assert (x6103 (- x1256 x9039)))
(assert (= (and x4304 x1448) x3925))
(assert (x391 x130))
(assert (x7060 x3012))
(assert (x391 x6127))
(assert (x2252 x6711))
(assert (= (and x5070 x2394) x2223))
(assert (x6103 (- x172 x5552)))
(assert (x8665 x940 x1726 x172 x2780))
(assert (x8665 x2012 x5116 x5390 x530))
(assert (= (x3649 (x3789 x6872 1)) (+ 1 (x3649 x6872))))
(assert (x8665 x5766 x8031 x530 x9039))
(assert (x4156 x8031 x5766 x3593 x3579))
(assert (x2252 x9254))
(assert (x391 x2009))
(assert (= x2322 x4842))
(assert (= x4701 (and x1694 x1617)))
(assert (x391 x2974))
(assert (x8665 x2780 x172 x2012 x4135))
(assert (x4156 x3579 x3593 x5390 x530))
(assert (= (and x8863 (not x3399)) x2069))
(assert (= (and x2694 x3688) x728))
(assert (x391 x1735))
(assert (x4156 x3593 x3579 x1726 x940))
(assert (x4156 x774 x490 x3593 x3579))
(assert (x8637 x1431))
(assert (= (x3649 (x3789 x2608 1)) (+ (x3649 x2608) 1)))
(assert (x8665 x3593 x3579 x5552 x7316))
(assert (x391 x2416))
(assert (= (x7379 4238056678808933066457772256406219440718756300954938350892797929791311314944) (x5361 4238056678808933066457772256406219440718756300954938350892797929791311314944)))
(assert (x391 x8221))
(assert (=> (>= 10000 x2096) (= (x5361 x2096) (x7379 x2096))))
(assert (x2252 x4698))
(assert (= (and x472 x8914) x101))
(assert (x391 x5319))
(assert (= (and x1374 (not x439)) x4970))
(assert (= x8805 (and x1362 (not x6147))))
(assert (x391 x1021))
(assert (= x4508 (x3649 (x7379 x4508))))
(assert (= (and x8870 (not x6622)) x5522))
(assert (= x8258 (and (not x5445) x960)))
(assert (x2252 x6067))
(assert (= x1053 (and x3124 x8173)))
(assert (=> (>= 10000 x5872) (= (x7379 x5872) (x5361 x5872))))
(assert (x6103 (- x4135 x1256)))
(assert (x391 x4933))
(assert (x1052 x9054 x7036))
(assert (= x4637 (and x8193 x4067)))
(assert (x391 x602))
(assert (x391 x8326))
(assert (x391 x2538))
(assert (x8665 x1726 x940 x172 x1256))
(assert (x391 x2811))
(assert (x391 x3119))
(assert (x391 x6047))
(assert (x391 x4981))
(assert (= (and x1715 x1782) x4356))
(assert (x391 x3384))
(assert (x391 x8525))
(assert (= x2325 (and x6074 x1051)))
(assert (x8665 x1726 x940 x530 x5390))
(assert (x391 x4485))
(assert (= x4126 (or x7151 x2837)))
(assert (x391 x8702))
(assert (= (x3649 (x3789 x9248 1)) (+ (x3649 x9248) 1)))
(assert (= (and x943 x8830) x19))
(assert (= x5496 (and x8178 x3629)))
(assert (= x7669 (and x651 x3853)))
(assert (x391 x6433))
(assert (x391 x3298))
(assert (= x2661 (and x7801 x5970)))
(assert (= x6868 (and (not x2207) x8902)))
(assert (x6103 (- x1726 x9039)))
(assert (x4156 x490 x774 x1256 x172))
(assert (=> (<= x6589 10000) (= (x5361 x6589) (x7379 x6589))))
(assert (x391 x4900))
(assert (= x2784 (and (not x4724) x4493)))
(assert (x391 x2590))
(assert (x7060 x151))
(assert (x4191 x2012 (- x5116 x530)))
(assert (= x3982 (or x6323 x6305)))
(assert (x391 x2766))
(assert (x8665 x530 x5390 x530 x9039))
(assert (x391 x3153))
(assert (x391 x8993))
(assert (= x5610 (=> (and (= 0 x394) (= x9192 x8145)) x5174)))
(assert (x6103 (- x2780 x7316)))
(assert (= (and x869 x8854) x3756))
(assert (x8665 x172 x1256 x4135 x2012))
(assert (x8665 x3593 x3579 x172 x1256))
(assert (x8665 x7316 x5552 x530 x5390))
(assert (= x8659 (or x1802 x5854)))
(assert (and (x5662 x2846 1000000000000000000) (x6638 x2846 1000000000000000000) (=> (and (< 0 x2846) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x2846 1000000000000000000)) (- x2846 1000000000000000000)) (>= x2846 (* 1000000000000000000 (x4526 x2846 1000000000000000000))))) (x4068 x2846 1000000000000000000) (x797 x2846 1000000000000000000)))
(assert (x8665 x530 x9039 x5766 x8031))
(assert (x4156 x3593 x3579 x9039 x530))
(assert (x4191 x8031 (- x5766 x1256)))
(assert (= x5374 (and (not x3124) x8173)))
(assert (x4191 x5552 (- x7316 x172)))
(assert (= (and x8114 x5269) x8293))
(assert (x391 x5229))
(assert (x391 x9098))
(assert (x391 x8614))
(assert (= (and x3631 x665) x7780))
(assert (= (and x1565 x9147) x1301))
(assert (= (and x4070 x2441) x4736))
(assert (x4191 x530 (- x5390 x8031)))
(assert (= (+ (x3649 x4790) 1) (x3649 (x3789 x4790 1))))
(assert (x391 x6334))
(assert (= (and x7852 x4321) x3634))
(assert (= (and (not x2224) x6667) x545))
(assert (x391 x7605))
(assert (x391 x1809))
(assert (x391 x2137))
(assert (= (and (not x8362) x2063) x7076))
(assert (= (+ (x3649 x4905) 1) (x3649 (x3789 x4905 1))))
(assert (= x6224 (or x9247 x4442)))
(assert (= x1096 (or x181 x4814)))
(assert (= (+ (x3649 x4183) 1) (x3649 (x3789 x4183 1))))
(assert (x8665 x530 x9039 x2012 x5116))
(assert (= (and x2724 x7656) x8762))
(assert (x391 x4726))
(assert (= x935 (and x5 x607)))
(assert (x4191 x5116 (- x2012 x5552)))
(assert (= x2403 (x3649 (x7379 x2403))))
(assert (x8665 x530 x5390 x8031 x5766))
(assert (= x5810 (and x7364 x1125)))
(assert (x391 x2722))
(assert (= (and x4753 x3194) x941))
(assert (x4191 x1726 (- x940 x172)))
(assert (x391 x72))
(assert (x391 x3075))
(assert (= (and x185 x2720) x7266))
(assert (x8665 x3579 x3593 x5552 x7316))
(assert (x391 x8672))
(assert (= (and x5774 x2219) x3929))
(assert (x391 x9060))
(assert (x391 x4652))
(assert (= 1313710058 (x3649 (x5361 1313710058))))
(assert (= (and (not x3066) x8858) x7479))
(assert (= (+ 2 (x3649 x8027)) (x3649 (x3789 x8027 2))))
(assert (= x3340 (or x32 x8759)))
(assert (= x4831 (and x599 x7873)))
(assert (= (x3649 (x3789 x8436 1)) (+ (x3649 x8436) 1)))
(assert (= x1414 (and x8742 x9129)))
(assert (x391 x7560))
(assert (x391 x7023))
(assert (x391 x1615))
(assert (x391 x250))
(assert (= x5191 (and x1101 x3353)))
(assert (x6103 x7286))
(assert (x391 x3563))
(assert (x391 x942))
(assert (x391 x5466))
(assert (= x4054 (and x6964 (not x2003))))
(assert (x2252 x173))
(assert (x391 x1349))
(assert (x391 x6321))
(assert (= (x3649 (x7379 x6809)) x6809))
(assert (x8665 x5116 x2012 x530 x5390))
(assert (x391 x3123))
(assert (= (+ 1 (x3649 x295)) (x3649 (x3789 x295 1))))
(assert (x2252 x180))
(assert (x391 x7750))
(assert (x391 x6273))
(assert (= x1617 (and (not x4089) x5599)))
(assert (= x6150 (and (not x847) x8903)))
(assert (= (and x7763 (not x6733)) x2288))
(assert (= (and (not x6761) x22) x7866))
(assert (= (and x6224 (not x7339)) x8592))
(assert (x391 x6691))
(assert (and (x5662 x3070 1000000000000000000) (x6638 x3070 1000000000000000000) (=> (and (< 0 x3070) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x3070 1000000000000000000)) (- x3070 1000000000000000000)) (>= x3070 (* 1000000000000000000 (x4526 x3070 1000000000000000000))))) (x4068 x3070 1000000000000000000) (x797 x3070 1000000000000000000)))
(assert (x8637 x4340))
(assert (= (and x6659 (not x592)) x3932))
(assert (x391 x7740))
(assert (= x7445 (and (not x3821) x8037)))
(assert (= x7621 (and x3430 x8782)))
(assert (x391 x1044))
(assert (= (and x498 (not x5771)) x6858))
(assert (x391 x2681))
(assert (x4156 x490 x774 x8031 x5766))
(assert (= (and x2301 x5727) x8460))
(assert (x391 x8422))
(assert (= x331 x5477))
(assert (x391 x9005))
(assert (= (and x3145 x5250) x5363))
(assert (x2252 x4102))
(assert (x391 x7931))
(assert (= x739 (and (not x5739) x7402)))
(assert (x8665 x1726 x940 x5390 x530))
(assert (x391 x6386))
(assert (x4191 x774 (- x490 x1726)))
(assert (=> (>= 10000 x4105) (= (x5361 x4105) (x7379 x4105))))
(assert (x391 x4491))
(assert (= x6529 (and x5691 x4600)))
(assert (= (and (not x5377) x6823) x9203))
(assert (and (x3303 x7512 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4253 x7512 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x4077 x7512 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x4526 x7512 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x7512)) (x5837 x7512 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x4191 x774 (- x490 x7316)))
(assert (x8637 x5705))
(assert (x391 x1572))
(assert (x391 x5550))
(assert (x391 x2382))
(assert (x391 x8240))
(assert (= x682 (and x7411 (not x2156))))
(assert (x4191 x172 (- x2780 x5766)))
(assert (= (and (not x8606) x7822) x4493))
(assert (x391 x7671))
(assert (= x6130 (and x5095 x4709)))
(assert (x391 x848))
(assert (= (and x6322 (not x2866)) x8466))
(assert (x4156 x7316 x5552 x4135 x2012))
(assert (= (+ 1 (x3649 x1174)) (x3649 (x3789 x1174 1))))
(assert (= (=> (and (= x5071 x3768) (= x1900 x3274)) x5272) x1516))
(assert (= (x3649 (x3789 x303 2)) (+ 2 (x3649 x303))))
(assert (x7060 x348))
(assert (x6103 (- x940 x490)))
(assert (= (x3649 (x7379 x2105)) x2105))
(assert (x6103 (- x3579 x1256)))
(assert (= (=> (and (= x667 x7455) (= 0 x697)) x3228) x1139))
(assert (=> (>= 10000 x9164) (= (x5361 x9164) (x7379 x9164))))
(assert (= x4814 (or x8877 x2752 x7705 x1218 x5270 x119)))
(assert (= (x3649 (x5361 157198259)) 157198259))
(assert (= (and x8331 x5921) x6059))
(assert (x6103 (- x3593 x172)))
(assert (= (or x2421 x8390) x2755))
(assert (= (and (not x7376) x2267) x880))
(assert (= (and x8384 (not x3678)) x5556))
(assert (x391 x514))
(assert (x2252 x1340))
(assert (x391 x971))
(assert (= x7824 (and x3746 x5586)))
(assert (x391 x7455))
(assert (= x5387 (and (not x6149) x5220)))
(assert (= (and x5413 x5025) x8090))
(assert (= (and x8854 (not x869)) x9081))
(assert (= (x3649 (x3789 x2448 2)) (+ (x3649 x2448) 2)))
(assert (= (and x6707 x8310) x838))
(assert (= x2532 (and x9141 (not x7264))))
(assert (x391 x9))
(assert (= x8685 (and x8633 x7872)))
(assert (x391 x6693))
(assert (= (and x6684 (not x8345)) x2319))
(assert (x391 x1767))
(assert (x391 x8187))
(assert (=> (>= 10000 x5123) (= (x7379 x5123) (x5361 x5123))))
(assert (= x8063 (and (not x2285) x3700)))
(assert (x391 x2742))
(assert (x391 x8573))
(assert (= (+ (x3649 x5316) 1) (x3649 (x3789 x5316 1))))
(assert (x6103 (- x172 x8031)))
(assert (= (and (not x3324) x7214) x2311))
(assert (x391 x6812))
(assert (x4191 x2780 (- x172 x774)))
(assert (= (and (not x9135) x4160) x6058))
(assert (x391 x5052))
(assert (x391 x2001))
(assert (= x2470 (and (not x2292) x6468)))
(assert (x391 x3996))
(assert (x8665 x3593 x3579 x5766 x8031))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3593))
(assert (x2252 x4313))
(assert (x391 x8160))
(assert (= (=> (and (or x5187 (not x5187)) (= x5187 (= x5535 0))) x6410) x9130))
(assert (= (=> (and (= x8942 x1576) (= x1065 (x7158 (x7379 x7448) x5954 0)) (= x8504 (x3789 x1065 1)) (= (x3789 x8504 1) x1167) (= x1083 x7448)) x2843) x2749))
(assert (= (x3649 (x7379 x3072)) x3072))
(assert (x391 x4580))
(assert (x391 x204))
(assert (x391 x470))
(assert (x2624 x348 x1420))
(assert (= x2796 (and x8415 x7400)))
(assert (x391 x8871))
(assert (x6103 (- x3579 x5766)))
(assert (= (and x457 (not x8845)) x2529))
(assert (x391 x1497))
(assert (= (+ 1 (x3649 x2107)) (x3649 (x3789 x2107 1))))
(assert (x4156 x490 x774 x3593 x3579))
(assert (x8665 x172 x2780 x8031 x5766))
(assert (x391 x8755))
(assert (= x6937 (and (not x1941) x4579)))
(assert (= (and x322 x2542) x6541))
(assert (x391 x4496))
(assert (= x3672 (and x1526 x9096)))
(assert (x391 x9063))
(assert (x391 x3879))
(assert (x391 x1006))
(assert (= x8963 (and x6355 x1784)))
(assert (x391 x5241))
(assert (= x6981 (and (not x1715) x1782)))
(assert (x4191 x5552 (- x7316 x3579)))
(assert (x8665 x5116 x2012 x172 x2780))
(assert (= (x3649 (x3789 x7613 2)) (+ 2 (x3649 x7613))))
(assert (= (x3649 (x5361 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (x391 x8323))
(assert (x391 x654))
(assert (= (and x6726 x5943) x6095))
(assert (x391 x5892))
(assert (x391 x1367))
(assert (x6103 (- x1256 x2780)))
(assert (x7060 x7286))
(assert (x8665 x2012 x4135 x7316 x5552))
(assert (x391 x2013))
(assert (x4156 x5766 x8031 x490 x774))
(assert (=> (<= x2493 10000) (= (x7379 x2493) (x5361 x2493))))
(assert (x391 x4179))
(assert (x391 x1723))
(assert (x391 x4178))
(assert (= x3931 (or x922 x6056)))
(assert (x4191 x7316 (- x5552 x5766)))
(assert (x391 x4942))
(assert (x8665 x172 x1256 x490 x774))
(assert (x391 x5216))
(assert (x391 x5718))
(assert (x391 x8002))
(assert (x391 x6268))
(assert (= (and (not x7999) x5700) x5168))
(assert (= (and x2740 x6026) x2329))
(assert (= (and x4279 (not x6897)) x7410))
(assert (= x956 (=> (and (= x729 0) (= x5064 x7336)) x6962)))
(assert (= x8594 (and x5471 (not x4441))))
(assert (= (x3649 (x3789 x5847 1)) (+ 1 (x3649 x5847))))
(assert (= (=> (= x6134 (= x715 0)) (and (=> (and (not x6134) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5227)) (< x5227 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5227)) x363)) (and (=> (and (= true x847) x363) x4020) (=> (and (not x363) (and (= x2220 (x4929 x7098)) (= (= x2220 0) x6197))) (and (=> x6197 x6474) (=> (not x6197) x2322))))) (=> x6134 x2322))) x1195))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4772))
(assert (= (=> (and (= x6926 (= x7848 x8110)) (= x1869 (x2125 (+ 32 x3415))) (= x3415 (x2125 (+ 4 x5962))) (= (x7124 (- x1869 x5962)) x2539)) (and (=> (and (not x6926) (= x7195 (= x5049 x7848))) (and (=> (and x7195 (and (= x2539 x4803) (= x2210 398450620) (= x4803 36) (> 405663989 x2210) (not (> 4 x4803)) (= (x7124 (- x4803 4)) x8365) (not (= x2210 178855970)) (not (= x2210 75483562)) (< 0 x3493) (> 2217467699 x2210) (= x4649 10742207464693106059581744854972325794081737850190833080250671788038469713920) (= x7032 x6495) (not (= 242558722 x2210)) (= (or (> x8365 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x8365) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8365)))) x2881) (> 988262939 x2210) (= (x6887 (x7379 x5049)) x3493))) (and (=> (and (not x2881) (and (= (= x7032 x6495) x7482) (= x4710 x6495))) (and (=> (not x7482) x8353) (=> (and (and (>= x3864 0) (= x6024 1) (= 32 x4311) (= x3414 (x7158 (x7379 x6495) (x5361 6) 0)) (<= x3864 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3864 (x8441 x3414))) x7482) x1794))) (=> x2881 x8353))) (=> (and (and (and x3905 (and (= x9018 x7032) (not (= 75483562 x4093)) (> 2217467699 x4093) (= 36 x8207) (< 0 x4763) (not (> 4 x8207)) (= (or (and (< x5297 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5297) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5297)) x781) (< x4093 988262939) (= x4093 398450620) (= x2539 x8207) (> 405663989 x4093) (not (= 178855970 x4093)) (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x2836) (= (x7124 (- x8207 4)) x5297) (= x4763 (x6887 (x7379 x4633))) (not (= 242558722 x4093)))) (= (= x4633 x7848) x3905)) (not x7195)) (and (=> x781 x4629) (=> (and (and (= x9018 x5531) (= x8733 (= x9018 x7032))) (not x781)) (and (=> (not x8733) x4629) (=> (and (and (<= 0 x7385) (= x5325 1) (= x5868 (x7158 (x7379 x9018) (x5361 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7385) (= x4729 32) (= (x1698 x5868) x7385)) x8733) x5204))))))) (=> (and (and (= x5948 398450620) (> 988262939 x5948) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2015) true) (< x2015 32)) (> x2015 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3841) (= (x7124 (- x8135 4)) x2015) (> 2217467699 x5948) (= x7032 x7114) (> x68 0) (not (= x5948 178855970)) (= x68 (x6887 (x7379 x8110))) (= x8135 36) (not (= x5948 75483562)) (= x8135 x2539) (< x5948 405663989) (= x3943 10742207464693106059581744854972325794081737850190833080250671788038469713920) (not (> 4 x8135)) (not (= 242558722 x5948))) x6926) (and (=> x3841 x2020) (=> (and (and (= x2428 x7114) (= (= x7114 x7032) x6965)) (not x3841)) (and (=> (and x6965 (and (= x4681 32) (= x4663 (x7158 (x7379 x7114) (x5361 6) 0)) (<= x2130 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2130 (x333 x4663)) (<= 0 x2130) (= x3658 1))) x7911) (=> (not x6965) x2020))))))) x3702))
(assert (x2252 x2096))
(assert (x391 x5584))
(assert (= (or x283 x2569) x4015))
(assert (x391 x2193))
(assert (= x1447 (or x8661 x2140)))
(assert (x391 x4828))
(assert (= (and (not x2065) x8264) x4334))
(assert (= x163 (and x8813 (not x6729))))
(assert (x6103 (- x3579 x5390)))
(assert (= (x3649 (x3789 x3217 1)) (+ 1 (x3649 x3217))))
(assert (x391 x7407))
(assert (= (or x5054 x9003) x2618))
(assert (x4156 x5552 x7316 x1726 x940))
(assert (x391 x7629))
(assert (= x4307 (and x5207 x5673)))
(assert (=> (>= 10000 x6916) (= (x7379 x6916) (x5361 x6916))))
(assert (= (and (not x6963) x5629) x6851))
(assert (x391 x438))
(assert (= x6736 (and x9092 x5373)))
(assert (x391 x4342))
(assert (=> (>= 10000 x2191) (= (x5361 x2191) (x7379 x2191))))
(assert (= (and x6463 (not x1486)) x5850))
(assert (x391 x6593))
(assert (x391 x4439))
(assert (= (=> (and (= x5356 x5233) (= x250 x1766)) x7177) x999))
(assert (x4191 x5766 (- x8031 x940)))
(assert (x391 x5213))
(assert (x391 x6837))
(assert (= x8378 (and x4953 x3687)))
(assert (= x3703 (or x91 x8360 (and x5685 x6911) x4072 (and x3422 x1613))))
(assert (x391 x58))
(assert (= x4624 (and x875 x7054)))
(assert (= x4146 (and x627 x6182)))
(assert (x391 x2423))
(assert (= (+ (x3649 x8793) 2) (x3649 (x3789 x8793 2))))
(assert (x7060 x6893))
(assert (x4191 x490 (- x774 x172)))
(assert (= x5158 (and x2387 x7282)))
(assert (x8637 x41))
(assert (x4191 x940 (- x1726 x490)))
(assert (= (and x7160 x118) x3204))
(assert (= (and x9035 x9154) x4998))
(assert (x391 x8524))
(assert (x4191 x774 (- x490 x5766)))
(assert (= x1181 (or x8477 x5369)))
(assert (= x2313 (and x860 x5137)))
(assert (= x3545 (and (not x9253) x116)))
(assert (= x4910 (and x8935 x346)))
(assert (= x2527 (and x8740 x6197)))
(assert (= (and x3337 x4432) x8045))
(assert (x6103 (- x774 x940)))
(assert (= (or x2815 x7677) x4440))
(assert (x391 x6310))
(assert (= x4101 (or x9270 x9033 x7134 x8078)))
(assert (= x7083 (and x8730 x401)))
(assert (= (or x1397 (and x4765 (not x7346)) (and x3197 x930) x3595 x7713) x5119))
(assert (x391 x1293))
(assert (x6103 (- x3579 x1726)))
(assert (= x2691 (x3649 (x7379 x2691))))
(assert (= x3437 (and x16 x5536)))
(assert (x8665 x4135 x2012 x8031 x5766))
(assert (x1257 x8278))
(assert (x391 x2233))
(assert (x391 x447))
(assert (= (+ (x3649 x5420) 1) (x3649 (x3789 x5420 1))))
(assert (x4156 x172 x1256 x5116 x2012))
(assert (= x3172 x562))
(assert (x391 x723))
(assert (x7060 x5680))
(assert (x2252 x7619))
(assert (x391 x7164))
(assert (= (and (not x6864) x7083) x1928))
(assert (= x5673 (and x5138 (not x6075))))
(assert (x391 x2330))
(assert (x391 x5873))
(assert (x6103 (- x172 x5766)))
(assert (= (and x7374 x1351) x2992))
(assert (x391 x4550))
(assert (= x318 (or (and x7514 (not x4074)) x6298)))
(assert (x8665 x172 x2780 x5552 x7316))
(assert (x4191 x4135 (- x2012 x9039)))
(assert (= x2191 (x3649 (x7379 x2191))))
(assert (x1052 x5425 x4026))
(assert (x391 x6465))
(assert (x391 x465))
(assert (x391 x3070))
(assert (= x1820 (or x3177 x1127 x3021 x7427 x2886 x3925)))
(assert (= (and x7038 x8457) x4393))
(assert (= x1261 (=> (and (= x6946 x800) (= x2955 x7203)) x3696)))
(assert (= x328 (and x318 (not x5183))))
(assert (x391 x1552))
(assert (x4156 x9039 x530 x5116 x2012))
(assert (= x5784 (and (=> (and (and (= x1679 x3250) (= x768 0)) (not x7125)) x5812) (=> (and x7125 (and (or (and (= x7695 x4874) (not x4874)) (and x4874 (and (<= x9246 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3789 x4116 2) x2646) (= (x7136 x2646) x9246) (<= 0 x9246) (= x4825 (< x9246 x5240)) (= (not x4825) x7695) (= (x7158 (x7379 x3590) x1566 0) x4116)))) (and (= (x3789 x4316 1) x6826) (= x4874 (ite (> x8334 1) (not (= x3590 0)) (> x8334 1))) (>= x3590 0) (<= x3590 1461501637330902918203684832716283019655932542975) (< x3590 1461501637330902918203684832716283019655932542976) (= (x430 x6826) x3590) (= (x7158 (x7379 x3250) x1566 0) x4316)))) x6258))))
(assert (x391 x1699))
(assert (= (and (not x2465) x4894) x419))
(assert (x6103 x7349))
(assert (x391 x9190))
(assert (x391 x3386))
(assert (x8665 x3593 x3579 x530 x9039))
(assert (x391 x4525))
(assert (x391 x1438))
(assert (x391 x539))
(assert (=> (>= 10000 x2879) (= (x5361 x2879) (x7379 x2879))))
(assert (x391 x8639))
(assert (x391 x5021))
(assert (= x8368 (=> (and (= x6777 x8956) (= x2291 0)) x2936)))
(assert (x2252 x4113))
(assert (x6103 x7472))
(assert (= x285 (and (not x1424) x716)))
(assert (x391 x171))
(assert (x391 x1824))
(assert (x391 x5127))
(assert (= x2626 (or x2118 x2169)))
(assert (= (and x2899 x5332) x3056))
(assert (= (x3649 (x3789 x3010 2)) (+ (x3649 x3010) 2)))
(assert (x4156 x1256 x172 x490 x774))
(assert (= (=> (= x3310 (= 0 x5154)) (and (=> x3310 x2322) (=> (not x3310) x6474))) x2579))
(assert (x8665 x5390 x530 x172 x1256))
(assert (= x5258 (and (not x6406) x2994)))
(assert (x391 x5049))
(assert (x391 x3701))
(assert (=> (<= x8199 10000) (= (x7379 x8199) (x5361 x8199))))
(assert (x391 x6515))
(assert (x4191 x530 (- x9039 x490)))
(assert (= (or x5545 x6847) x5806))
(assert (= x4789 (x3649 (x7379 x4789))))
(assert (= x7298 (and x4375 x6573)))
(assert (x391 x9246))
(assert (x391 x1582))
(assert (x391 x1256))
(assert (= (and x7706 x5283) x4646))
(assert (= x144 (and (not x4568) x2079)))
(assert (= x6104 (=> (and (= x5356 x8696) (= x250 x8614)) x7177)))
(assert (= x351 (=> (and (= x6525 x5547) (= x3825 x5842)) x5451)))
(assert (x8637 x8889))
(assert (x391 x97))
(assert (x391 x6922))
(assert (x391 x2064))
(assert (= x3016 (and x1651 x3344)))
(assert (= (and x1229 x8470) x8986))
(assert (= x1 (or x1569 x773)))
(assert (= (and x487 x3409) x1233))
(assert (= x347 (and x8726 (not x1921))))
(assert (x6103 (- x5766 x4135)))
(assert (x391 x464))
(assert (= x8693 (or x1159 x2796)))
(assert (= (+ 1 (x3649 x2588)) (x3649 (x3789 x2588 1))))
(assert (= (x3649 (x7379 x4698)) x4698))
(assert (= x88 (and x5132 (not x165))))
(assert (= x878 (and (not x4461) x6712)))
(assert (x4191 x1726 (- x940 x8031)))
(assert (= (and x9027 (not x3019)) x3243))
(assert (= x1185 (or x3100 x5119)))
(assert (x391 x2660))
(assert (x391 x3822))
(assert (x391 x8067))
(assert (x2252 x7366))
(assert (= (+ 1 (x3649 x8329)) (x3649 (x3789 x8329 1))))
(assert (and (x3303 x8429 1461501637330902918203684832716283019655932542976) (x4253 x8429 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x4077 x8429 1461501637330902918203684832716283019655932542976) (* (x4526 x8429 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x8429)) (x5837 x8429 1461501637330902918203684832716283019655932542976)))
(assert (x391 x2405))
(assert (= x4799 (and x1053 (not x8140))))
(assert (x391 x2750))
(assert (= (and x8174 x3940) x913))
(assert (= x3709 (=> (and (= x4056 x3920) (= x3729 0)) x2104)))
(assert (x391 x7535))
(assert (x7060 x9060))
(assert (= x2063 (and (not x7756) x9032)))
(assert (= (x3649 (x3789 x7047 2)) (+ 2 (x3649 x7047))))
(assert (=> (>= 10000 x4837) (= (x7379 x4837) (x5361 x4837))))
(assert (x391 x7286))
(assert (x391 x343))
(assert (= (and (not x1881) x7573) x6485))
(assert (x391 x2255))
(assert (x1710 x736))
(assert (x4156 x7316 x5552 x1726 x940))
(assert (= x9187 (or x2108 x7323)))
(assert (x391 x6249))
(assert (x2252 x8346))
(assert (x391 x7650))
(assert (x8637 x8278))
(assert (x391 x2787))
(assert (=> (>= 10000 x1765) (= (x5361 x1765) (x7379 x1765))))
(assert (x6103 (- x5116 x774)))
(assert (= (and x9027 x3019) x7777))
(assert (= (or x8081 x3881 x6144) x5957))
(assert (x391 x5103))
(assert (x4191 x7316 (- x5552 x172)))
(assert (= x4672 x5477))
(assert (= x5536 (and x35 x8479)))
(assert (x391 x263))
(assert (x391 x5227))
(assert (x391 x6152))
(assert (x8637 x5431))
(assert (x4191 x5116 (- x2012 x9039)))
(assert (x8665 x5116 x2012 x7316 x5552))
(assert (x391 x4633))
(assert (x391 x9151))
(assert (=> (<= x5851 10000) (= (x7379 x5851) (x5361 x5851))))
(assert (x391 x8807))
(assert (= (or x6226 x6329 x480 x7249 x6434 x6518) x5964))
(assert (x391 x6369))
(assert (= x6985 (or x4188 x7977 x2771 x7527)))
(assert (= x4383 (x3649 (x7379 x4383))))
(assert (x4191 x5116 (- x2012 x490)))
(assert (x4191 x4135 (- x2012 x2780)))
(assert (x7060 x4860))
(assert (x7060 x2810))
(assert (x7060 x7661))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x7525 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x7525 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x7525 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x7525 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x7525 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x7525 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x7525)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x7525))) (x8005 1000000000000000000 x7525) (= (x7029 1000000000000000000 x7525) (* 1000000000000000000 x7525)) (x1844 1000000000000000000 x7525) (x7186 1000000000000000000 x7525) (x997 1000000000000000000 x7525) (x1348 1000000000000000000 x7525)))
(assert (x391 x2268))
(assert (= x593 (and (not x7812) x1804)))
(assert (= x1491 (and x2613 (not x9225))))
(assert (= x5274 (and x9100 x272)))
(assert (x391 x6372))
(assert (= (=> (and (= x8849 x8873) (= x603 x8201)) x7561) x1608))
(assert (= (and (not x3439) x782) x1381))
(assert (= (+ 1 (x3649 x6385)) (x3649 (x3789 x6385 1))))
(assert (= x826 (and (not x3901) x3918)))
(assert (x6103 (- x530 x1256)))
(assert (= (and x5811 x6557) x8769))
(assert (x391 x8555))
(assert (= x1072 (and (not x1299) x5863)))
(assert (x391 x2583))
(assert (x4191 x1726 (- x940 x7316)))
(assert (= x5960 (and x2616 x7228)))
(assert (= x5884 (and (not x8200) x8947)))
(assert (x8665 x5766 x8031 x5552 x7316))
(assert (x391 x2012))
(assert (x391 x6431))
(assert (x391 x4371))
(assert (= x8901 (and x5299 x8985)))
(assert (= x6895 (x3649 (x7379 x6895))))
(assert (x4156 x3593 x3579 x7316 x5552))
(assert (x391 x2155))
(assert (= (and x6087 x2185) x5475))
(assert (= (x3649 (x3789 x8778 2)) (+ 2 (x3649 x8778))))
(assert (= (=> (and (or (and (= x166 x5532) x5674) (and (and (= x4838 (x7158 (x7379 x7848) (x5361 159) 0)) (= x8681 (= 0 x4858)) (= x4858 (x6705 x4290)) (= (ite x8681 1 0) x5532) (= x4290 (x7158 (x7379 x7448) x4838 0)) (<= x4858 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4858)) (not x5674))) (= (= 0 x166) x5674)) x626) x8003))
(assert (x4156 x5766 x8031 x5116 x2012))
(assert (= x778 (and x2905 x1776)))
(assert (x391 x7235))
(assert (x4191 x172 (- x1256 x2780)))
(assert (x391 x7702))
(assert (x391 x8894))
(assert (x391 x1092))
(assert (x391 x2323))
(assert (= x5706 (and x6920 x2821)))
(assert (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x3649 (x5361 4238056678808933066457772256406219440718756300954938350892797929791311314944))))
(assert (x391 x1359))
(assert (x391 x2809))
(assert (x391 x1077))
(assert (x6103 (- x9039 x5552)))
(assert (= (x3649 (x7379 x1716)) x1716))
(assert (= (and (not x7364) x1125) x1839))
(assert (x8665 x172 x1256 x5116 x2012))
(assert (= x5122 x3950))
(assert (= (+ 1 (x3649 x8194)) (x3649 (x3789 x8194 1))))
(assert (= x3650 (and x4645 x1607)))
(assert (x6103 (- x5552 x3579)))
(assert (x391 x2248))
(assert (x391 x3812))
(assert (x391 x2432))
(assert (= x5881 (and x5880 x5441)))
(assert (x4191 x5766 (- x8031 x774)))
(assert (=> (>= 10000 x3250) (= (x5361 x3250) (x7379 x3250))))
(assert (and (x5662 x8924 1000000000000000000) (x6638 x8924 1000000000000000000) (=> (and (< 0 x8924) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x8924 1000000000000000000)) (- x8924 1000000000000000000)) (>= x8924 (* 1000000000000000000 (x4526 x8924 1000000000000000000))))) (x4068 x8924 1000000000000000000) (x797 x8924 1000000000000000000)))
(assert (= x7700 (and x1097 x4465)))
(assert (x391 x923))
(assert (x391 x5552))
(assert (= (and (not x2670) x215) x8680))
(assert (= (and x861 x6596) x4761))
(assert (x391 x6402))
(assert (x6103 x8304))
(assert (x391 x679))
(assert (= (x3649 (x3789 x3043 1)) (+ 1 (x3649 x3043))))
(assert (= x572 (or x2195 x8743 x3592 x6245 x3288 x8780)))
(assert (x7060 x7316))
(assert (= (+ 1 (x3649 x4421)) (x3649 (x3789 x4421 1))))
(assert (= x5260 (or x170 x7866)))
(assert (x4156 x530 x5390 x490 x774))
(assert (= x1330 (and x3451 (not x237))))
(assert (x391 x4424))
(assert (= (or x4749 x8336) x2227))
(assert (= x2897 (and (not x2526) x2028)))
(assert (x391 x2535))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x4271 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x4271 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x4271 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x4271 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x4271 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x4271 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4271)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x4271))) (x8005 1000000000000000000 x4271) (= (x7029 1000000000000000000 x4271) (* 1000000000000000000 x4271)) (x1844 1000000000000000000 x4271) (x7186 1000000000000000000 x4271) (x997 1000000000000000000 x4271) (x1348 1000000000000000000 x4271)))
(assert (x8665 x530 x9039 x4135 x2012))
(assert (x8665 x5552 x7316 x1256 x172))
(assert (= (x3649 (x7379 x699)) x699))
(assert (x6103 (- x3579 x2012)))
(assert (= x6925 (and x5199 (not x6764))))
(assert (= x1448 (and x3679 (not x4144))))
(assert (= (x5361 1313710058) (x7379 1313710058)))
(assert (x8665 x2012 x4135 x172 x1256))
(assert (x6103 (- x9039 x5390)))
(assert (x391 x1340))
(assert (= x3306 (and x1681 (not x8647))))
(assert (= x4435 (and x3728 x446)))
(assert (x6103 x5766))
(assert (= x6572 (and x1728 (not x6663))))
(assert (= x3872 (and x5674 x2384)))
(assert (= x7600 (and x424 x2021)))
(assert (x8665 x1726 x940 x172 x2780))
(assert (= (x3649 (x7379 x1737)) x1737))
(assert (= x83 (or x4266 x7585)))
(assert (= x3195 (and x9023 (not x3421))))
(assert (x391 x6284))
(assert (x4156 x7316 x5552 x490 x774))
(assert (= x6536 (and x5236 x6937)))
(assert (= x1149 (=> (and (= (ite (< x1573 x8334) (not (= x5669 0)) (< x1573 x8334)) x8626) (or (and (and (and (< x7678 1461501637330902918203684832716283019655932542976) (>= x7678 0) (= x1042 (= 0 x7678)) (= (x99 x4705) x7678) (>= 1461501637330902918203684832716283019655932542975 x7678)) (or (and (and (<= x2203 1461501637330902918203684832716283019655932542975) (= (x1623 x7104) x2203) (>= x2203 0) (< x2203 1461501637330902918203684832716283019655932542976) (= (x3789 x4705 1) x7104)) (not x1042)) x1042)) (not x8626)) (and (and (and (< x890 1461501637330902918203684832716283019655932542976) (<= x890 1461501637330902918203684832716283019655932542975) (>= x890 0) (= (x99 x4705) x890) (= x8629 (< 0 x4661)) (= (x7124 (- x5669 x890)) x4661)) (or (and (and (>= x146 0) (= x175 (x7158 (x7379 x5669) x8957 0)) (<= x146 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x146) (= x146 (x1542 x175))) x8629) (not x8629))) x8626))) x258)))
(assert (x8665 x940 x1726 x2012 x4135))
(assert (x391 x837))
(assert (= (and (not x6978) x2266) x2249))
(assert (= (x3649 (x7379 x8676)) x8676))
(assert (x8665 x530 x5390 x1256 x172))
(assert (x391 x3366))
(assert (= x310 (and x7853 (not x6579))))
(assert (x6103 (- x9039 x5766)))
(assert (x391 x1069))
(assert (= (and x1162 x1612) x5065))
(assert (= x6225 (=> (= x152 (< 0 x7285)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8334) (>= x8334 0) (= x1961 (= 0 x5430))) x152) (and (=> (and (not x1961) (and (= (x7158 (x7379 x5430) x6992 0) x2504) (<= 0 x1311) (= (x3789 x2504 2) x8262) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1311) (= x925 (= x1311 0)) (= (x2957 x8262) x1311))) (and (=> (not x925) x3876) (=> (and x925 (and (or (and x2173 (and (= x7681 (not x7139)) (<= x1950 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7139 (> x7285 x1950)) (<= 0 x1950) (= x5572 (x3789 x7426 2)) (= (x7158 (x7379 x5225) x6992 0) x7426) (= (x2957 x5572) x1950))) (and (not x2173) (= x2173 x7681))) (and (> 1461501637330902918203684832716283019655932542976 x5225) (>= 1461501637330902918203684832716283019655932542975 x5225) (>= x5225 0) (= x831 (x3789 x6992 1)) (= (ite (> x8334 0) (not (= x5225 0)) (< 0 x8334)) x2173) (= (x1855 x831) x5225)))) x453))) (=> x1961 x4083))) (=> (and (not x152) (and (= x3464 x1226) (= x7297 x7206))) x441)))))
(assert (x391 x1308))
(assert (= (=> (= x3828 x123) x1471) x7739))
(assert (= x5805 (and x1848 (not x3852))))
(assert (x8637 x2364))
(assert (x391 x7820))
(assert (= (and x4482 x6051) x194))
(assert (= x1194 (or x7901 (and x4294 (not x7764)))))
(assert (= x8117 (and x9213 x4616)))
(assert (x391 x2869))
(assert (x8665 x940 x1726 x530 x9039))
(assert (x391 x7627))
(assert (x391 x45))
(assert (x391 x4052))
(assert (= (and x5579 x4310) x2616))
(assert (= (x5361 599290589) (x7379 599290589)))
(assert (x391 x2765))
(assert (= (and x8448 x3578) x8913))
(assert (= x5942 (=> (and (= x2959 (= x7437 0)) (or x2959 (not x2959))) x7919)))
(assert (x391 x813))
(assert (x391 x9230))
(assert (= (+ (x3649 x8662) 1) (x3649 (x3789 x8662 1))))
(assert (x391 x4748))
(assert (x391 x7162))
(assert (x391 x4809))
(assert (= x3719 (and x7360 (not x3562))))
(assert (= (=> (and (or (and (not x2509) (and (and (= (x8812 x8488) x4888) (>= x4888 0) (= (= x4888 0) x7240) (> 1461501637330902918203684832716283019655932542976 x4888) (<= x4888 1461501637330902918203684832716283019655932542975)) (or (and x7240 (and (= x4560 (x7158 (x7379 x5430) x8793 0)) (= x6873 (x3789 x8488 1)) (= (x3789 x7317 1) x493) (= x6877 (x2125 (+ 96 x7532))) (= x5430 x3500) (= x7964 x6877) (= x7317 (x3789 x4560 1)))) (and (not x7240) (and (<= 0 x624) (= x7748 (x3789 x5990 1)) (= x2215 (x3789 x2591 1)) (= x3500 x624) (= (x4262 x7258) x624) (< x624 1461501637330902918203684832716283019655932542976) (= (x7158 (x7379 x5430) x8793 0) x1686) (= (x7158 (x7379 x624) x8793 0) x2591) (= x7258 (x3789 x8488 1)) (<= x624 1461501637330902918203684832716283019655932542975) (= (x3789 x1686 1) x5990) (= (x2125 (+ x7532 96)) x2121) (= x7964 x2121)))))) (and (and (or (and (not x5811) (and (= x241 (x3789 x3158 1)) (= (x3789 x3882 1) x3158) (= (x2125 (+ x7532 96)) x8591) (= x5412 x3500) (= (x7158 (x7379 x5412) x8793 0) x1458) (= (x7158 (x7379 x5430) x8793 0) x3882) (= x8591 x7964))) (and x5811 (and (= (x2125 (+ 96 x7532)) x7665) (= x5412 x3500) (= (x7158 (x7379 x5430) x8793 0) x3076) (= x7665 x7964) (<= 0 x6793) (= (x7158 (x7379 x6793) x8793 0) x5022) (= (x3789 x8101 1) x7149) (= (x7158 (x7379 x5412) x8793 0) x3976) (>= 1461501637330902918203684832716283019655932542975 x6793) (= (x8021 x6521) x6793) (= x3341 (x3789 x5022 1)) (< x6793 1461501637330902918203684832716283019655932542976) (= (x7158 (x7379 x5412) x8793 0) x6521) (= x8101 (x3789 x3076 1))))) (and (= x9250 (x8812 x8488)) (= (> x1044 0) x5811) (<= x9250 1461501637330902918203684832716283019655932542975) (= (x7124 (- x5412 x9250)) x1044) (> 1461501637330902918203684832716283019655932542976 x9250) (<= 0 x9250))) x2509)) (= x2509 (ite (> x8334 x145) (not (= x5412 0)) (< x145 x8334)))) x6507) x4355))
(assert (x391 x7836))
(assert (= (and x6166 x8382) x2264))
(assert (= (x3649 (x3789 x4668 1)) (+ 1 (x3649 x4668))))
(assert (x4156 x530 x5390 x9039 x530))
(assert (x391 x1365))
(assert (x391 x3255))
(assert (= (and (not x7981) x3048) x2279))
(assert (x2252 x1858))
(assert (= (or x3286 (and x3573 (not x7877))) x2052))
(assert (= (and (not x82) x5652) x2301))
(assert (x6103 (- x8031 x3593)))
(assert (= x7021 (=> (and (or (and (and (= (x7158 (x7379 x7448) x3621 0) x5428) (= (= x5432 0) x2168) (= x5175 (ite x2168 1 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5432) (= x5432 (x764 x5428)) (>= x5432 0) (= x3621 (x7158 (x7379 x7848) (x5361 158) 0))) (not x3035)) (and x3035 (= x1077 x5175))) (and (= x3035 (= 0 x1077)) (= x427 (x7158 (x7379 x7448) x2171 0)) (= (x6201 x427) x1077) (< x1077 256) (= (x7158 (x7379 x7848) (x5361 160) 0) x2171) (<= x1077 255) (>= x1077 0))) x1383)))
(assert (= x325 (or x8879 x4382)))
(assert (= x6187 (and x5292 x4110)))
(assert (= (or x5384 x2972) x3871))
(assert (= (and x5729 x4591) x2631))
(assert (= (and x3507 x6277) x7419))
(assert (x391 x5995))
(assert (x391 x6092))
(assert (x391 x4314))
(assert (x391 x4936))
(assert (x391 x4363))
(assert (= (and (not x5436) x6706) x7209))
(assert (= (and x8763 (not x5337)) x8154))
(assert (x8637 x911))
(assert (= x660 (and (not x6642) x7673)))
(assert (x391 x3734))
(assert (= (and x819 x5668) x4870))
(assert (x391 x1769))
(assert (x391 x2240))
(assert (= x832 (or x4452 x2124)))
(assert (x2252 x6717))
(assert (x1052 x6168 x1644))
(assert (x391 x5226))
(assert (x391 x117))
(assert (x391 x1703))
(assert (x391 x7059))
(assert (= (or x7729 x2489) x5848))
(assert (x391 x4990))
(assert (= (and x7404 x8656) x5409))
(assert (= (and (not x3515) x7655) x7035))
(assert (= x2752 (and x6750 x4237)))
(assert (= (and x4377 x7971) x4569))
(assert (= x7983 (and x8425 x5450)))
(assert (x2252 x6391))
(assert (x391 x1559))
(assert (= (and x5755 x878) x6261))
(assert (x1710 x4804))
(assert (x391 x1439))
(assert (x391 x6437))
(assert (= x3622 (and x6870 x1391)))
(assert (x2624 x6857 x774))
(assert (x4191 x490 (- x774 x940)))
(assert (= (and (not x4968) x2287) x209))
(assert (= x5040 (and x3961 x4602)))
(assert (x391 x2353))
(assert (x391 x8520))
(assert (= (x3649 (x3789 x6319 2)) (+ (x3649 x6319) 2)))
(assert (x391 x4026))
(assert (= (=> (and (or (not x1061) x1061) (= x1061 (= x2011 0))) x750) x6806))
(assert (= (and (not x8389) x8044) x5031))
(assert (= x2180 (or x4597 x3165)))
(assert (x391 x866))
(assert (= x5512 (x3649 (x7379 x5512))))
(assert (x7060 x5052))
(assert (x391 x34))
(assert (= (x3649 (x3789 x2917 1)) (+ (x3649 x2917) 1)))
(assert (x2252 x1211))
(assert (x8637 x3329))
(assert (x391 x2402))
(assert (x7060 x5390))
(assert (= x8939 (and x7792 (not x5468))))
(assert (x4191 x2012 (- x4135 x2012)))
(assert (= (and x459 (not x3400)) x2601))
(assert (= x8474 (x3649 (x7379 x8474))))
(assert (= x8495 (=> (= x7849 (= 0 x9106)) (and (=> (and (= (or (and (< x8984 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8984))) (> x8984 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4607) (not x7849)) (and (=> (and (= x8318 1) (not x4607)) x7011) (=> x4607 x6932))) (=> x7849 x6932)))))
(assert (x391 x6244))
(assert (= (x3649 (x7379 x6587)) x6587))
(assert (and (x3303 x8278 32) (x4253 x8278 32) (=> (< 0 32) (= (+ (x4077 x8278 32) (* (x4526 x8278 32) 32)) x8278)) (x5837 x8278 32)))
(assert (x2252 x8530))
(assert (x391 x9053))
(assert (= x8736 (or x7546 x5311)))
(assert (= x7411 (and (not x4045) x3503)))
(assert (x8665 x5552 x7316 x1726 x940))
(assert (x8637 x6443))
(assert (x391 x9090))
(assert (= x908 (and x1312 (not x8416))))
(assert (= x1549 (and (not x1166) x7109)))
(assert (x2252 x6916))
(assert (x391 x7497))
(assert (= (+ 1 (x3649 x5177)) (x3649 (x3789 x5177 1))))
(assert (x8665 x5552 x7316 x2780 x172))
(assert (x391 x3077))
(assert (x4191 x5766 (- x8031 x172)))
(assert (x8665 x3579 x3593 x8031 x5766))
(assert (= x3506 (and x2585 x3944)))
(assert (= x2369 (or x6597 x2006)))
(assert (x6103 (- x5390 x3593)))
(assert (x4156 x9039 x530 x3593 x3579))
(assert (= x5998 (and (not x563) x4706)))
(assert (= x1284 (and x4011 (not x7939))))
(assert (x8665 x3593 x3579 x774 x490))
(assert (= x1004 (=> (and (= x5035 x2147) (= x569 x142)) x6506)))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x9060 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x9060 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x9060 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x9060 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x9060 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x9060 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x9060)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x9060))) (x8005 1000000000000000000 x9060) (= (x7029 1000000000000000000 x9060) (* 1000000000000000000 x9060)) (x1844 1000000000000000000 x9060) (x7186 1000000000000000000 x9060) (x997 1000000000000000000 x9060) (x1348 1000000000000000000 x9060)))
(assert (= x4771 (=> (and (= (x7158 (x7379 x7448) x3914 0) x7239) (= x7448 x1074) (= x9275 x474) (= x8350 (x3789 x7239 1)) (= (x3789 x8350 1) x7318)) x7511)))
(assert (= (and x8673 (not x8761)) x3890))
(assert (x2252 x1046))
(assert (x6103 (- x3593 x5552)))
(assert (= x5880 (and x101 x2345)))
(assert (x1052 x3795 x5535))
(assert (x391 x890))
(assert (x391 x7686))
(assert (= x4762 (and (not x3502) x5394)))
(assert (x391 x5634))
(assert (x1710 x653))
(assert (= (=> (and (= x3729 x6525) (= x5842 x4056)) x5451) x2104))
(assert (x7060 x5116))
(assert (= x6566 (=> (and (and (> 256 x8484) (= x7615 (= x8484 0)) (>= 255 x8484) (= (x7158 (x7379 x7848) (x5361 160) 0) x38) (= x8484 (x6201 x7198)) (>= x8484 0) (= x7198 (x7158 (x7379 x7448) x38 0))) (or (and x7615 (= x3984 x8484)) (and (and (= (ite x1585 1 0) x3984) (<= 0 x2373) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2373) (= (x1461 x3049) x2373) (= x1585 (= x2373 0)) (= x3049 (x7158 (x7379 x7448) x2057 0)) (= x2057 (x7158 (x7379 x7848) (x5361 158) 0))) (not x7615)))) x5640)))
(assert (x4191 x490 (- x774 x5390)))
(assert (x391 x6613))
(assert (x391 x791))
(assert (x391 x5123))
(assert (x4191 x490 (- x774 x5552)))
(assert (x8665 x2012 x4135 x2012 x5116))
(assert (= (x3649 (x3789 x963 1)) (+ 1 (x3649 x963))))
(assert (= (and x726 x865) x8008))
(assert (x8665 x8031 x5766 x5116 x2012))
(assert (x391 x9256))
(assert (x6103 (- x530 x5116)))
(assert (x391 x3798))
(assert (x391 x6795))
(assert (x391 x9254))
(assert (x391 x7848))
(assert (x391 x5500))
(assert (x4156 x172 x2780 x490 x774))
(assert (x391 x3744))
(assert (= x6426 (and x2002 x1934)))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x4677 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x4677 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x4677 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x4677 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x4677 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x4677 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4677)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x4677))) (x8005 1000000000000000000 x4677) (= (x7029 1000000000000000000 x4677) (* 1000000000000000000 x4677)) (x1844 1000000000000000000 x4677) (x7186 1000000000000000000 x4677) (x997 1000000000000000000 x4677) (x1348 1000000000000000000 x4677)))
(assert (x4156 x1726 x940 x7316 x5552))
(assert (x391 x2434))
(assert (x391 x6190))
(assert (x391 x2055))
(assert (= (and x6729 x8813) x8899))
(assert (= (and x7142 x4429) x4993))
(assert (x391 x7313))
(assert (x391 x8031))
(assert (= x5994 (and (not x1594) x4435)))
(assert (= (and x6700 (not x2228)) x2356))
(assert (x391 x620))
(assert (x4156 x172 x2780 x5116 x2012))
(assert (= (+ (x3649 x5106) 2) (x3649 (x3789 x5106 2))))
(assert (= (and x8629 x4457) x1622))
(assert (= x5818 (and x880 (not x8551))))
(assert (= x5958 (and (not x4619) x8805)))
(assert (= x2096 (x3649 (x7379 x2096))))
(assert (x8665 x774 x490 x530 x5390))
(assert (x8665 x5552 x7316 x530 x9039))
(assert (x391 x699))
(assert (x391 x1074))
(assert (= x6670 (and x6322 x2866)))
(assert (= (or x4381 x5498) x670))
(assert (= x7936 (x3649 (x7379 x7936))))
(assert (x8665 x172 x1256 x2012 x4135))
(assert (x391 x9171))
(assert (= x8895 (and x941 x5914)))
(assert (x391 x3375))
(assert (x391 x678))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x3649 (x5361 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (x391 x1818))
(assert (x391 x2428))
(assert (x8665 x4135 x2012 x2012 x5116))
(assert (x8665 x3579 x3593 x5116 x2012))
(assert (x391 x1477))
(assert (x391 x306))
(assert (= (or x685 x1797) x5171))
(assert (= (and x3262 (not x2881)) x5707))
(assert (x8665 x3579 x3593 x7316 x5552))
(assert (x4156 x940 x1726 x4135 x2012))
(assert (x391 x1628))
(assert (x391 x3909))
(assert (= (and x1312 x8416) x5244))
(assert (=> (<= x7498 10000) (= (x7379 x7498) (x5361 x7498))))
(assert (x391 x7988))
(assert (x391 x8270))
(assert (= (and x7683 x3419) x6823))
(assert (x391 x6531))
(assert (x6103 (- x490 x7316)))
(assert (x391 x5470))
(assert (x391 x5412))
(assert (x8637 x2103))
(assert (x391 x7196))
(assert (x4191 x5552 (- x7316 x940)))
(assert (x2252 x699))
(assert (= (=> (and (or (and x7339 (and (and (= x2977 (< 0 x2432)) (= (x5012 x6923) x6386) (>= 1461501637330902918203684832716283019655932542975 x6386) (> 1461501637330902918203684832716283019655932542976 x6386) (<= 0 x6386) (= x2432 (x7124 (- x3501 x6386)))) (or (and (and (= x3680 (x3789 x8502 1)) (= (x3789 x3680 1) x7327) (= x7955 (x2125 (+ x1588 96))) (= (x7158 (x7379 x5308) x8027 0) x8502) (= x2406 x3501) (= x1220 x7955) (= (x7158 (x7379 x3501) x8027 0) x7701)) (not x2977)) (and (and (= x1058 (x7158 (x7379 x3501) x8027 0)) (= x4082 (x3789 x8662 1)) (< x2691 1461501637330902918203684832716283019655932542976) (= (x7158 (x7379 x2691) x8027 0) x4421) (>= 1461501637330902918203684832716283019655932542975 x2691) (= (x3789 x4421 1) x7140) (= x8282 (x7158 (x7379 x3501) x8027 0)) (= (x3789 x4082 1) x5906) (= x3501 x2406) (<= 0 x2691) (= x2691 (x8640 x1058)) (= x1220 x2440) (= x8662 (x7158 (x7379 x5308) x8027 0)) (= (x2125 (+ 96 x1588)) x2440)) x2977)))) (and (not x7339) (and (and (= (= x1130 0) x5764) (>= 1461501637330902918203684832716283019655932542975 x1130) (< x1130 1461501637330902918203684832716283019655932542976) (<= 0 x1130) (= (x5012 x6923) x1130)) (or (and (not x5764) (and (= x1493 (x4690 x2969)) (= x1493 x2406) (= x8651 (x7158 (x7379 x1493) x8027 0)) (= (x3789 x6199 1) x4274) (= (x2125 (+ x1588 96)) x3701) (= (x3789 x6923 1) x2969) (= (x3789 x8194 1) x6199) (= (x3789 x8651 1) x373) (= (x7158 (x7379 x5308) x8027 0) x8194) (<= x1493 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x1493) (= x3701 x1220) (>= x1493 0))) (and x5764 (and (= x1978 (x3789 x6923 1)) (= x7067 x1220) (= x1135 (x7158 (x7379 x5308) x8027 0)) (= x7537 (x3789 x5474 1)) (= (x2125 (+ 96 x1588)) x7067) (= (x3789 x1135 1) x5474) (= x5308 x2406))))))) (= x7339 (ite (< x6797 x8334) (not (= 0 x3501)) (< x6797 x8334)))) x3496) x4728))
(assert (=> (>= 10000 x1439) (= (x7379 x1439) (x5361 x1439))))
(assert (= x7284 (or x9202 x2486 x2497 x1264 x6736 x3970 x5542 x7209 x6789)))
(assert (= (and x6883 x4720) x5155))
(assert (x391 x4142))
(assert (= x6444 (and (not x8867) x224)))
(assert (x391 x4862))
(assert (x4191 x172 (- x1256 x7316)))
(assert (= 1779720228 (x3649 (x5361 1779720228))))
(assert (= (=> (and (= x6534 x4729) (= 0 x5325)) x5204) x4629))
(assert (x391 x2520))
(assert (= x131 (=> (and (= x6268 x7786) (= x1687 x1436)) x7398)))
(assert (x391 x2231))
(assert (=> (<= x392 10000) (= (x7379 x392) (x5361 x392))))
(assert (= x1544 (and x3654 x5684)))
(assert (= x360 (and x3642 x8462)))
(assert (=> (>= 10000 x8214) (= (x5361 x8214) (x7379 x8214))))
(assert (x391 x3265))
(assert (x4191 x3579 (- x3593 x2012)))
(assert (x391 x3012))
(assert (x391 x146))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x7472 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x7472 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x7472 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x7472 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x7472 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x7472 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x7472)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x7472))) (x8005 1000000000000000000 x7472) (= (x7029 1000000000000000000 x7472) (* 1000000000000000000 x7472)) (x1844 1000000000000000000 x7472) (x7186 1000000000000000000 x7472) (x997 1000000000000000000 x7472) (x1348 1000000000000000000 x7472)))
(assert (= (x3649 (x3789 x3463 3)) (+ 3 (x3649 x3463))))
(assert (x391 x5157))
(assert (and (x3303 x134 32) (x4253 x134 32) (=> (< 0 32) (= (+ (x4077 x134 32) (* (x4526 x134 32) 32)) x134)) (x5837 x134 32)))
(assert (x6103 (- x9039 x5116)))
(assert (x2252 x9184))
(assert (= x1405 (and (not x3520) x8057)))
(assert (x391 x3464))
(assert (x391 x1752))
(assert (= x7598 (and (not x1985) x6536)))
(assert (= (and (not x1408) x8757) x1682))
(assert (= (+ (x3649 x516) 1) (x3649 (x3789 x516 1))))
(assert (= x6463 (and x2604 (not x8458))))
(assert (x391 x8104))
(assert (x2252 x3800))
(assert (= (not (and (<= x411 1461501637330902918203684832716283019655932542975) (= x2890 (x3789 x4725 1)) (<= 0 x411) (= x411 (x8094 x2890)) (> 1461501637330902918203684832716283019655932542976 x411) (= x4725 (x7158 (x7379 x6442) x4654 0)))) x1455))
(assert (x391 x5672))
(assert (= (x3649 (x7379 x3736)) x3736))
(assert (x391 x2932))
(assert (x391 x7759))
(assert (x391 x8110))
(assert (x391 x6514))
(assert (=> (<= x6440 10000) (= (x7379 x6440) (x5361 x6440))))
(assert (=> (>= 10000 x8030) (= (x5361 x8030) (x7379 x8030))))
(assert (=> (>= 10000 x5718) (= (x7379 x5718) (x5361 x5718))))
(assert (x391 x5085))
(assert (x4191 x5766 (- x8031 x530)))
(assert (=> (>= 10000 x8678) (= (x7379 x8678) (x5361 x8678))))
(assert (= x4216 (or x1330 x6524)))
(assert (x4156 x2780 x172 x490 x774))
(assert (x391 x6698))
(assert (x391 x387))
(assert (= x8530 (x3649 (x7379 x8530))))
(assert (= (and (not x2905) x1776) x8040))
(assert (x2252 x1951))
(assert (= x8371 (and (not x3554) x982)))
(assert (x6103 (- x172 x2780)))
(assert (x391 x7108))
(assert (x4156 x530 x9039 x7316 x5552))
(assert (x391 x7875))
(assert (= x7126 (and x4209 x9040)))
(assert (x4191 x4135 (- x2012 x1256)))
(assert (x391 x629))
(assert (=> (<= x7431 10000) (= (x5361 x7431) (x7379 x7431))))
(assert (x391 x521))
(assert (x4156 x774 x490 x8031 x5766))
(assert (x391 x7523))
(assert (x3618 x4743))
(assert (and (x3303 x291 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4253 x291 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x4077 x291 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x4526 x291 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x291)) (x5837 x291 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (+ (x3649 x182) 1) (x3649 (x3789 x182 1))))
(assert (x391 x6072))
(assert (x6103 (- x7316 x3579)))
(assert (x391 x5322))
(assert (= x6126 (and x2069 x5871)))
(assert (= (+ 2 (x3649 x2612)) (x3649 (x3789 x2612 2))))
(assert (= (and x6194 x1192) x3083))
(assert (= x8380 (=> (and (= x412 x1453) (= x5327 x2531)) x5440)))
(assert (x6103 (- x3579 x8031)))
(assert (x391 x5919))
(assert (x391 x100))
(assert (x391 x3524))
(assert (= x2524 (and (not x2199) x6444)))
(assert (x391 x2076))
(assert (x391 x1621))
(assert (= x3450 (and x6135 x8372)))
(assert (= x5105 (and x8721 x6042)))
(assert (x391 x2053))
(assert (x391 x1620))
(assert (= (and (not x7801) x5970) x7761))
(assert (= (x3649 (x5361 1856199391)) 1856199391))
(assert (= x5554 (and x8914 (not x472))))
(assert (= (and x2776 (not x7261)) x3863))
(assert (x4191 x3579 (- x3593 x2780)))
(assert (x391 x8613))
(assert (x391 x9178))
(assert (= x6377 (and (not x3480) x1920)))
(assert (=> (<= x3538 10000) (= (x5361 x3538) (x7379 x3538))))
(assert (x4191 x940 (- x1726 x2012)))
(assert (= x7721 (or (and (not x4989) x8202) (and x6712 x4461) x7769 x6261 (and (not x4460) x2900) (and x4325 x6505))))
(assert (x2252 x4837))
(assert (= x7043 (and (not x7962) x5114)))
(assert (x391 x4466))
(assert (= (and x7804 x7718) x5271))
(assert (x3618 x911))
(assert (x8665 x5116 x2012 x1726 x940))
(assert (x391 x2533))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5116))
(assert (x391 x8949))
(assert (= x5477 x5562))
(assert (= x7177 (=> (and (or x671 (not x671)) (= x671 (= x5356 0))) x3569)))
(assert (x391 x6238))
(assert (x391 x6699))
(assert (x391 x3000))
(assert (x391 x9214))
(assert (= x3834 (and x1122 x7991)))
(assert (x6103 (- x940 x5116)))
(assert (x8665 x774 x490 x1256 x172))
(assert (= x8482 (=> (and (= x5605 x6268) (= x1687 x3208)) x7398)))
(assert (x391 x68))
(assert (x6103 (- x2012 x5552)))
(assert (= x1383 (=> (and (= (= 0 x5175) x7212) (or (and (= x5175 x3241) x7212) (and (and (= (x1946 x6392) x6698) (<= x6698 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1219 (x7158 (x7379 x7848) (x5361 158) 0)) (= (x3789 x2917 1) x6392) (= x3241 (ite x7428 1 0)) (>= x6698 0) (= (x7158 (x7379 x7448) x1219 0) x2917) (= (= x6698 0) x7428)) (not x7212)))) x1396)))
(assert (x391 x2073))
(assert (= x4177 (and x3700 x2285)))
(assert (x391 x6440))
(assert (x6103 (- x5552 x774)))
(assert (x391 x7665))
(assert (= x190 (or x3275 x4339 x2532 x5367)))
(assert (x391 x2321))
(assert (and (x3303 x291 32) (x4253 x291 32) (=> (< 0 32) (= (+ (x4077 x291 32) (* (x4526 x291 32) 32)) x291)) (x5837 x291 32)))
(assert (= x630 (and x6098 x2297)))
(assert (x2252 x5229))
(assert (x391 x7046))
(assert (= (and (not x238) x2366) x3339))
(assert (= x8890 (and x3863 (not x3787))))
(assert (x4156 x2012 x5116 x8031 x5766))
(assert (x391 x6537))
(assert (= (+ 1 (x3649 x1403)) (x3649 (x3789 x1403 1))))
(assert (x391 x8474))
(assert (=> (>= 10000 x2420) (= (x5361 x2420) (x7379 x2420))))
(assert (x391 x7321))
(assert (x4191 x3579 (- x3593 x7316)))
(assert (= x8795 (and (not x807) x1203)))
(assert (x391 x2603))
(assert (x391 x6412))
(assert (x391 x8773))
(assert (= (or (and (not x8733) x4798) (and x781 x687)) x7251))
(assert (x8665 x2780 x172 x5116 x2012))
(assert (x391 x2337))
(assert (= x7878 (and x1284 (not x7504))))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x7349 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x7349 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x7349 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x7349 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x7349 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x7349 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x7349)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x7349))) (x8005 1000000000000000000 x7349) (= (x7029 1000000000000000000 x7349) (* 1000000000000000000 x7349)) (x1844 1000000000000000000 x7349) (x7186 1000000000000000000 x7349) (x997 1000000000000000000 x7349) (x1348 1000000000000000000 x7349)))
(assert (= (and (not x6920) x2821) x8285))
(assert (x391 x2706))
(assert (x2252 x6879))
(assert (= (and x4568 x2079) x3213))
(assert (x391 x1915))
(assert (x8665 x2012 x5116 x3579 x3593))
(assert (= x5362 (and x3513 (not x6740))))
(assert (x8665 x9039 x530 x5552 x7316))
(assert (= (and x7932 x5323) x1242))
(assert (x391 x1202))
(assert (= (+ (x3649 x7347) 1) (x3649 (x3789 x7347 1))))
(assert (x391 x2907))
(assert (x391 x3652))
(assert (=> (<= x1951 10000) (= (x7379 x1951) (x5361 x1951))))
(assert (x391 x4038))
(assert (= (x3649 (x3789 x4338 1)) (+ 1 (x3649 x4338))))
(assert (x391 x5618))
(assert (x391 x3770))
(assert (= (and x9059 (not x1801)) x6788))
(assert (x6103 (- x3579 x5552)))
(assert (= x5797 (and (not x6389) x7584)))
(assert (= (and x6849 x7167) x7967))
(assert (= x9201 (and x1352 x3612)))
(assert (x391 x2769))
(assert (= (x3649 (x3789 x6856 2)) (+ (x3649 x6856) 2)))
(assert (x391 x6809))
(assert (x391 x1813))
(assert (x6103 (- x4135 x940)))
(assert (x2624 x7433 x4860))
(assert (x391 x5141))
(assert (x391 x7363))
(assert (x4191 x172 (- x1256 x530)))
(assert (= (and x3448 x1812) x5480))
(assert (x391 x1453))
(assert (x391 x4570))
(assert (x391 x3775))
(assert (x1052 x4340 x5584))
(assert (x391 x3619))
(assert (x391 x5190))
(assert (= x9122 (x3649 (x7379 x9122))))
(assert (= (x3649 (x3789 x5581 2)) (+ (x3649 x5581) 2)))
(assert (x391 x2220))
(assert (x391 x6033))
(assert (x2252 x495))
(assert (= x8701 (and (not x3448) x1812)))
(assert (x391 x5993))
(assert (x391 x8035))
(assert (x391 x2810))
(assert (= (+ 1 (x3649 x7907)) (x3649 (x3789 x7907 1))))
(assert (x391 x8924))
(assert (x391 x2575))
(assert (x391 x8878))
(assert (= (or x2377 x2864) x3961))
(assert (= x858 (or x6592 x1519)))
(assert (= x5493 (and (not x6776) x397)))
(assert (= (and x819 (not x5668)) x5276))
(assert (x391 x2625))
(assert (= (x3649 (x7379 x8552)) x8552))
(assert (= (and (not x7743) x8341) x8427))
(assert (x391 x706))
(assert (= x6879 (x3649 (x7379 x6879))))
(assert (x391 x7935))
(assert (= (and x5245 x2782) x7220))
(assert (x391 x4805))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1935 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x1935 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x1935 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x1935 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x1935 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x1935 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1935)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1935))) (x8005 1000000000000000000 x1935) (= (x7029 1000000000000000000 x1935) (* 1000000000000000000 x1935)) (x1844 1000000000000000000 x1935) (x7186 1000000000000000000 x1935) (x997 1000000000000000000 x1935) (x1348 1000000000000000000 x1935)))
(assert (= x2298 (or x148 x2381)))
(assert (x7060 x4491))
(assert (x2252 x6164))
(assert (x391 x6287))
(assert (x391 x352))
(assert (= x5028 (or x2113 x8991)))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3384 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x3384 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x3384 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x3384 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x3384 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x3384 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3384)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3384))) (x8005 1000000000000000000 x3384) (= (x7029 1000000000000000000 x3384) (* 1000000000000000000 x3384)) (x1844 1000000000000000000 x3384) (x7186 1000000000000000000 x3384) (x997 1000000000000000000 x3384) (x1348 1000000000000000000 x3384)))
(assert (x391 x4593))
(assert (x391 x8239))
(assert (= x4426 (x3649 (x7379 x4426))))
(assert (x391 x8334))
(assert (= (or x534 x2460) x140))
(assert (x8665 x8031 x5766 x172 x1256))
(assert (= (and x2786 x8438) x6782))
(assert (x391 x2165))
(assert (= (or x3633 x2362) x1817))
(assert (x391 x2084))
(assert (x8665 x5552 x7316 x940 x1726))
(assert (x391 x7074))
(assert (x391 x4561))
(assert (= x1848 (and x4883 (not x1246))))
(assert (= (+ 1 (x3649 x8237)) (x3649 (x3789 x8237 1))))
(assert (= x3000 (x3649 (x7379 x3000))))
(assert (= (or (and (not x5187) x3160) x3224) x627))
(assert (x4191 x774 (- x490 x172)))
(assert (x391 x2635))
(assert (= x7138 (and x1222 x8063)))
(assert (x391 x8447))
(assert (= x6332 (and x3803 x3847)))
(assert (= (or x194 x8252 x788 x8557) x804))
(assert (= (x3649 (x7379 x6442)) x6442))
(assert (x1257 x736))
(assert (= (and x8886 (not x5642)) x7323))
(assert (= x3239 (and x7043 (not x3608))))
(assert (= (and x3419 (not x7683)) x3349))
(assert (x391 x5872))
(assert (= (and x2606 x8736) x86))
(assert (= x9245 (and x2568 x6950)))
(assert (x391 x5307))
(assert (= x893 (and x4766 x7659)))
(assert (x6103 (- x774 x2780)))
(assert (x4191 x940 (- x1726 x172)))
(assert (x391 x5935))
(assert (x4191 x2012 (- x5116 x5552)))
(assert (x391 x4869))
(assert (=> (>= 10000 x4383) (= (x7379 x4383) (x5361 x4383))))
(assert (x4191 x7316 (- x5552 x3593)))
(assert (x4191 x3579 (- x3593 x9039)))
(assert (x391 x8709))
(assert (x391 x6173))
(assert (x391 x7344))
(assert (x8637 x1160))
(assert (=> (>= 10000 x3590) (= (x7379 x3590) (x5361 x3590))))
(assert (= (and x5763 x4734) x3061))
(assert (x391 x9157))
(assert (x6103 x447))
(assert (x391 x7808))
(assert (x8665 x774 x490 x5390 x530))
(assert (x2624 x5758 x1420))
(assert (x6103 (- x490 x4135)))
(assert (x391 x9226))
(assert (x8665 x2012 x5116 x3593 x3579))
(assert (x391 x8244))
(assert (x8665 x172 x2780 x5116 x2012))
(assert (=> (>= 10000 x734) (= (x5361 x734) (x7379 x734))))
(assert (x391 x1027))
(assert (= x2303 (and x5166 x419)))
(assert (x2252 x2111))
(assert (= x918 (and x2194 x3268)))
(assert (x2624 x2698 x4458))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x6834 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x6834 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x6834 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x6834 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x6834 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x6834 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6834)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x6834))) (x8005 1000000000000000000 x6834) (= (x7029 1000000000000000000 x6834) (* 1000000000000000000 x6834)) (x1844 1000000000000000000 x6834) (x7186 1000000000000000000 x6834) (x997 1000000000000000000 x6834) (x1348 1000000000000000000 x6834)))
(assert (= (and x601 x7048) x8519))
(assert (= x2362 (and x8404 (not x4197))))
(assert (x391 x6176))
(assert (= x98 (and (not x2058) x2390)))
(assert (x2252 x8124))
(assert (x391 x3899))
(assert (x8665 x3593 x3579 x940 x1726))
(assert (x2252 x1878))
(assert (x6103 (- x4135 x530)))
(assert (= x9145 (and (not x2914) x9081)))
(assert (x391 x4479))
(assert (x8665 x8031 x5766 x2780 x172))
(assert (= (and x5028 (not x2680)) x5936))
(assert (x391 x6817))
(assert (x391 x4648))
(assert (x2252 x5669))
(assert (= x8483 (or x2865 x9037)))
(assert (x391 x8356))
(assert (x391 x405))
(assert (x2252 x4508))
(assert (x6103 (- x4135 x1726)))
(assert (= x6584 (or x2379 x7284)))
(assert (= x5968 (and x6174 x5782)))
(assert (x6103 (- x3579 x5116)))
(assert (x391 x5676))
(assert (= (and x9209 (not x5551)) x2117))
(assert (= x8843 (and x5339 x1639)))
(assert (x8665 x172 x2780 x4135 x2012))
(assert (= x5576 (and (not x1199) x2928)))
(assert (= x283 (and x5104 x2198)))
(assert (= (and (not x2785) x96) x6989))
(assert (x391 x3987))
(assert (x391 x2494))
(assert (x391 x3182))
(assert (x391 x4926))
(assert (x391 x4252))
(assert (= (and x2293 x2712) x3332))
(assert (x391 x5750))
(assert (x391 x6312))
(assert (= x2493 (x3649 (x7379 x2493))))
(assert (x8665 x1726 x940 x7316 x5552))
(assert (= x8053 (=> (= x4409 (< 0 x8709)) (and (=> (and x4409 (and (<= x8334 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x1640) x1483) (>= x8334 0))) (and (=> x1483 x6749) (=> (and (and (= x4043 (x7158 (x7379 x1640) x8957 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5972) (= (x5604 x6007) x5972) (= (= 0 x5972) x6643) (>= x5972 0) (= (x3789 x4043 2) x6007)) (not x1483)) (and (=> (not x6643) x8622) (=> (and (and (or (and (not x7981) (= x7981 x6375)) (and x7981 (and (= x810 (> x8709 x1236)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1236) (= x6375 (not x810)) (<= 0 x1236) (= (x5604 x5003) x1236) (= (x7158 (x7379 x8826) x8957 0) x1520) (= (x3789 x1520 2) x5003)))) (and (= x8826 (x99 x4705)) (< x8826 1461501637330902918203684832716283019655932542976) (>= x8826 0) (= x7981 (ite (< 0 x8334) (not (= x8826 0)) (> x8334 0))) (= x4705 (x3789 x8957 1)) (>= 1461501637330902918203684832716283019655932542975 x8826))) x6643) x4322))))) (=> (not x4409) x2653)))))
(assert (= x6338 (and x7874 x4696)))
(assert (= x6986 (and x8890 x1231)))
(assert (=> (<= x4113 10000) (= (x7379 x4113) (x5361 x4113))))
(assert (= x4060 (and x2747 x7888)))
(assert (x391 x761))
(assert (= (x3649 (x3789 x2990 1)) (+ (x3649 x2990) 1)))
(assert (x391 x7326))
(assert (= x2322 x7894))
(assert (= (and x3093 x1283) x4379))
(assert (x8637 x3556))
(assert (x391 x5889))
(assert (= (or x5613 x8288 x8394 x7111 x5196) x6668))
(assert (x391 x6186))
(assert (x6103 x4772))
(assert (x391 x9093))
(assert (= x4765 (and x4334 x4542)))
(assert (x391 x8357))
(assert (and (x5662 x3086 1000000000000000000) (x6638 x3086 1000000000000000000) (=> (and (< 0 x3086) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x3086 1000000000000000000)) (- x3086 1000000000000000000)) (>= x3086 (* 1000000000000000000 (x4526 x3086 1000000000000000000))))) (x4068 x3086 1000000000000000000) (x797 x3086 1000000000000000000)))
(assert (= (x7379 6539370208772218570076773595062200405109424842860869254164860851635934461952) (x5361 6539370208772218570076773595062200405109424842860869254164860851635934461952)))
(assert (x391 x4184))
(assert (= x2829 (=> (and (= x4301 x5508) (= x3302 x1841) (= x3133 x7181) (= x1957 x8687)) x1912)))
(assert (= x3903 (and x4121 x2087)))
(assert (= x5563 (and x1373 (not x4666))))
(assert (= (and x5495 x4324) x4395))
(assert (= (and (not x8010) x979) x9247))
(assert (= x5174 (=> (and (= x8145 x5150) (= x8608 x394)) x5027)))
(assert (= (or x8544 x8831) x5444))
(assert (x391 x8746))
(assert (x391 x3501))
(assert (x4191 x5116 (- x2012 x774)))
(assert (x8665 x172 x2780 x1256 x172))
(assert (x391 x1546))
(assert (= x5255 (=> (= x7998 (< 0 x5240)) (and (=> (not x7998) x1443) (=> (and x7998 (and (<= x8334 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x1640) x2895) (<= 0 x8334))) (and (=> x2895 x6469) (=> (and (and (= (= x7676 0) x2348) (= (x7136 x7815) x7676) (= x5773 (x7158 (x7379 x1640) x1566 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7676) (<= 0 x7676) (= (x3789 x5773 2) x7815)) (not x2895)) (and (=> (and (and (and (= (ite (> x8334 0) (not (= x3250 0)) (> x8334 0)) x767) (= x368 (x3789 x1566 1)) (>= x3250 0) (> 1461501637330902918203684832716283019655932542976 x3250) (= x3250 (x1952 x368)) (<= x3250 1461501637330902918203684832716283019655932542975)) (or (and (not x767) (= x7125 x767)) (and x767 (and (= x7836 (x7136 x6384)) (= x7143 (x7158 (x7379 x3250) x1566 0)) (= (x3789 x7143 2) x6384) (>= x7836 0) (= (not x3041) x7125) (<= x7836 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x7836 x5240) x3041))))) x2348) x5784) (=> (not x2348) x4842)))))))))
(assert (= (or x4349 x4369) x8576))
(assert (= x1618 (and x8384 x3678)))
(assert (= x2582 (and x43 x1278)))
(assert (= x9206 (and x841 x4094)))
(assert (x4191 x3593 (- x3579 x5766)))
(assert (= x6218 (and x4606 (not x1483))))
(assert (x391 x3167))
(assert (= (and x4457 (not x8629)) x5306))
(assert (= (or x1247 x4821 x5568 x227) x3823))
(assert (x391 x1858))
(assert (x8665 x2780 x172 x490 x774))
(assert (= x5991 (and (not x7698) x536)))
(assert (= (or x1636 x6008) x492))
(assert (x6103 (- x940 x1256)))
(assert (= (or x7721 x6339) x6354))
(assert (= (or x4963 x8533) x3358))
(assert (= (=> (and (= x7437 x3658) (= x7247 x4681)) x5942) x7911))
(assert (= x538 (and x3149 (not x5544))))
(assert (= x2991 (and x3935 x6924)))
(assert (x391 x9051))
(assert (= x775 (=> (and (= x4643 (= x7390 0)) (or x4643 (not x4643))) x7837)))
(assert (x391 x1047))
(assert (and (x3303 x9091 26959946667150639794667015087019630673637144422540572481103610249216) (x4253 x9091 26959946667150639794667015087019630673637144422540572481103610249216) (=> (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (= (+ (x4077 x9091 26959946667150639794667015087019630673637144422540572481103610249216) (* (x4526 x9091 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)) x9091)) (x5837 x9091 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x391 x4609))
(assert (x7060 x5239))
(assert (= (and (not x4380) x913) x8595))
(assert (= x5653 (and x1787 x6214)))
(assert (= (and x5491 x8536) x8931))
(assert (x2252 x8543))
(assert (x391 x1887))
(assert (x391 x2265))
(assert (x391 x3983))
(assert (x8665 x774 x490 x940 x1726))
(assert (= (x5361 1461501637330902918203684832716283019655932542975) (x7379 1461501637330902918203684832716283019655932542975)))
(assert (= (or (and x8456 (not x293)) x7925) x6944))
(assert (= (and x2904 x6867) x6751))
(assert (= x5290 (x3649 (x7379 x5290))))
(assert (= (and (not x6382) x3445) x1504))
(assert (= x6904 (or x4557 x1611)))
(assert (= x47 (and x4225 (not x8171))))
(assert (= (x3649 (x3789 x4605 1)) (+ 1 (x3649 x4605))))
(assert (x391 x8840))
(assert (x391 x1315))
(assert (x6103 (- x530 x5552)))
(assert (= x6597 (and x3246 x5614)))
(assert (x391 x9231))
(assert (x391 x246))
(assert (= (or x1850 x1269) x5756))
(assert (x7060 x1372))
(assert (= (x3649 (x3789 x8101 1)) (+ (x3649 x8101) 1)))
(assert (x8637 x8896))
(assert (x391 x2437))
(assert (x391 x4610))
(assert (x391 x8565))
(assert (= (and x9253 x116) x8930))
(assert (x391 x9164))
(assert (=> (>= 10000 x8676) (= (x7379 x8676) (x5361 x8676))))
(assert (= (and x7489 (not x6395)) x3271))
(assert (x391 x6394))
(assert (= (or x6407 x4988) x1067))
(assert (= (and x2629 (not x2721)) x541))
(assert (= (and x1286 x4874) x2837))
(assert (= (and (not x8710) x5115) x2044))
(assert (= (x3649 (x7379 x9018)) x9018))
(assert (x4191 x172 (- x2780 x5116)))
(assert (x391 x8516))
(assert (x391 x4159))
(assert (x6103 x7316))
(assert (= (=> (= x5183 (= x8608 0)) (and (=> (and (= x2077 x5621) x5183) x3669) (=> (and (not x5183) (= x2737 (or (> x5150 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x5150 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5150)))))) (and (=> (and (and (= x675 x3734) (= x2077 x4977) (= x7987 1)) (not x2737)) x2197) (=> (and x2737 (= x2077 x5621)) x3669))))) x1619))
(assert (x8665 x3593 x3579 x5390 x530))
(assert (x6103 (- x5766 x2012)))
(assert (x391 x9252))
(assert (x4191 x8031 (- x5766 x5552)))
(assert (x6103 x2780))
(assert (= x2322 x6133))
(assert (x391 x3980))
(assert (x4191 x8031 (- x5766 x172)))
(assert (x391 x2150))
(assert (x391 x1433))
(assert (x391 x5612))
(assert (= x3235 (and x1405 x7947)))
(assert (=> (<= x3006 10000) (= (x5361 x3006) (x7379 x3006))))
(assert (x391 x7883))
(assert (x391 x7506))
(assert (x391 x2443))
(assert (and (x5662 x3221 1000000000000000000) (x6638 x3221 1000000000000000000) (=> (and (< 0 x3221) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x3221 1000000000000000000)) (- x3221 1000000000000000000)) (>= x3221 (* 1000000000000000000 (x4526 x3221 1000000000000000000))))) (x4068 x3221 1000000000000000000) (x797 x3221 1000000000000000000)))
(assert (=> (>= 10000 x8826) (= (x5361 x8826) (x7379 x8826))))
(assert (x8665 x7316 x5552 x1726 x940))
(assert (x391 x2398))
(assert (x391 x6165))
(assert (= (+ (x3649 x4918) 1) (x3649 (x3789 x4918 1))))
(assert (=> (>= 10000 x9214) (= (x7379 x9214) (x5361 x9214))))
(assert (x391 x7779))
(assert (= (or x285 x8537) x5173))
(assert (= (and (not x5095) x4709) x8886))
(assert (= x1689 (and x7311 (not x4412))))
(assert (= x9202 (and x9055 x990)))
(assert (x391 x7817))
(assert (x2252 x1354))
(assert (= x8813 (and x3574 (not x8921))))
(assert (=> (>= 10000 x6176) (= (x7379 x6176) (x5361 x6176))))
(assert (x391 x7863))
(assert (= (+ 1 (x3649 x4654)) (x3649 (x3789 x4654 1))))
(assert (= (=> (and (= 0 x4252) (= x4857 x3920)) x6619) x2254))
(assert (= x591 (=> (and (= x3920 x8565) (= x5234 0)) x8950)))
(assert (x2252 x8824))
(assert (=> (<= x5658 10000) (= (x7379 x5658) (x5361 x5658))))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679))
(assert (x391 x3558))
(assert (x391 x8937))
(assert (= (+ 1 (x3649 x7008)) (x3649 (x3789 x7008 1))))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x4772 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x4772 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x4772 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x4772 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x4772 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x4772 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4772)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x4772))) (x8005 1000000000000000000 x4772) (= (x7029 1000000000000000000 x4772) (* 1000000000000000000 x4772)) (x1844 1000000000000000000 x4772) (x7186 1000000000000000000 x4772) (x997 1000000000000000000 x4772) (x1348 1000000000000000000 x4772)))
(assert (x391 x2986))
(assert (x391 x4508))
(assert (= (and (=> (and x2863 (and (= x5639 x2738) (= x6992 x8161) (= x6862 x7848))) x8973) (=> (and (not x2863) (and (= 1 x2128) (= x2738 x3265))) x3985)) x7204))
(assert (= (and x9229 x4716) x6624))
(assert (x6103 (- x5390 x3579)))
(assert (x391 x5658))
(assert (= (x3649 (x3789 x6785 x6968)) (+ (x3649 x6785) x6968)))
(assert (x391 x3712))
(assert (x2252 x7107))
(assert (x391 x5851))
(assert (x4156 x7316 x5552 x2780 x172))
(assert (x391 x3133))
(assert (x2252 x1996))
(assert (=> (<= x836 10000) (= (x5361 x836) (x7379 x836))))
(assert (x391 x8554))
(assert (= x3264 (and x1905 x5145)))
(assert (= x978 (and x2573 x8983)))
(assert (= x5357 (x3649 (x7379 x5357))))
(assert (= (=> (= x8305 (= x7390 0)) (and (=> (and (= x518 x4405) x8305) x5878) (=> (and (not x8305) (= (or (> x2769 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x2769) (= true (<= x2769 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x8235)) (and (=> (and (and (= 32 x9079) (= x6265 x4405) (= 1 x6828)) (not x8235)) x7529) (=> (and (= x518 x4405) x8235) x5878))))) x7837))
(assert (x391 x7716))
(assert (= (and (=> x6639 x2358) (=> (and (not x6639) (and (= x6101 x6372) (= x2035 1))) x7141)) x3530))
(assert (= (=> (and (= (= x6717 0) x8415) (or (and x8415 (= x5973 (x3789 x8587 2))) (and (not x8415) (= (x7158 (x7379 x6717) x8587 0) x7271)))) x1629) x5380))
(assert (= x4202 (and x1929 (not x2201))))
(assert (= x6566 x6474))
(assert (= x3998 (and x5980 x3073)))
(assert (= (x3649 (x5361 2678788150)) 2678788150))
(assert (= x7148 (=> (and (= x2873 x2769) (= x4157 x7390)) x775)))
(assert (x8665 x3593 x3579 x5116 x2012))
(assert (=> (<= x393 10000) (= (x7379 x393) (x5361 x393))))
(assert (x8665 x5766 x8031 x172 x1256))
(assert (= x2967 (=> (and (= x431 x5206) (= x6367 0)) x4845)))
(assert (x391 x2807))
(assert (= x133 (and (not x62) x4799)))
(assert (x391 x8256))
(assert (x391 x1889))
(assert (= (and (not x770) x2457) x3937))
(assert (x391 x4021))
(assert (= x6960 (and (not x8235) x1043)))
(assert (x2252 x4695))
(assert (= x6258 (and (=> (and (and (= x768 1) (= x1679 x3590)) (not x7695)) x5812) (=> (and x7695 (and (= x1566 x8220) (= x7358 x3590) (= x6601 x7848))) x1720))))
(assert (= (and x8385 x7254) x4285))
(assert (x7060 x2014))
(assert (x391 x7098))
(assert (= x8018 (and x5922 (not x3004))))
(assert (x8665 x7316 x5552 x9039 x530))
(assert (= x6734 (and x4334 (not x4542))))
(assert (= x1868 (and x1421 x7240)))
(assert (x391 x4502))
(assert (x391 x1900))
(assert (x6103 (- x172 x2012)))
(assert (x8665 x490 x774 x5116 x2012))
(assert (x391 x6704))
(assert (=> (>= 10000 x7936) (= (x7379 x7936) (x5361 x7936))))
(assert (x391 x9261))
(assert (x6103 (- x5390 x1726)))
(assert (= x564 (and x2258 x8305)))
(assert (x8665 x172 x2780 x940 x1726))
(assert (x391 x5905))
(assert (= x2577 (and x2242 x7178)))
(assert (x4191 x940 (- x1726 x5552)))
(assert (= (=> (= x847 false) x4020) x5438))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1372))
(assert (x6103 (- x5552 x4135)))
(assert (= (+ 1 (x3649 x5717)) (x3649 (x3789 x5717 1))))
(assert (= x5029 (and x1590 x5677)))
(assert (= x5289 (or x8223 x5846)))
(assert (= x7312 (x3649 (x7379 x7312))))
(assert (x391 x3785))
(assert (x4191 x7316 (- x5552 x2780)))
(assert (x391 x2933))
(assert (x6103 (- x2012 x3593)))
(assert (= (and x1795 (not x9061)) x4094))
(assert (= x6056 (and x5781 (not x7434))))
(assert (= x4053 (and x8561 x6156)))
(assert (x4191 x5116 (- x2012 x530)))
(assert (= (+ 1 (x3649 x6728)) (x3649 (x3789 x6728 1))))
(assert (x391 x378))
(assert (= (and x3451 x237) x6452))
(assert (= (and x5188 x1198) x6539))
(assert (x391 x4539))
(assert (x391 x7964))
(assert (x391 x161))
(assert (x391 x9242))
(assert (= x765 (=> (and (= x5285 0) (= x8525 x5322)) x2235)))
(assert (=> (>= 10000 x1858) (= (x7379 x1858) (x5361 x1858))))
(assert (x8665 x172 x2780 x5766 x8031))
(assert (x391 x6773))
(assert (x391 x7110))
(assert (x8665 x5552 x7316 x4135 x2012))
(assert (x6103 (- x5766 x490)))
(assert (= x1122 (or x533 x605)))
(assert (x391 x1981))
(assert (x391 x5297))
(assert (x391 x5225))
(assert (x391 x8507))
(assert (x391 x5223))
(assert (= x1967 (and x1961 x8409)))
(assert (= x8838 (and x7824 x3355)))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7316))
(assert (= x3273 (or (and x2819 x9144) x8569 x4379 (and x4441 x5471) (and (not x4463) x1561) (and (not x5044) x8594))))
(assert (= x7711 (and x2361 (not x8156))))
(assert (x8665 x1256 x172 x9039 x530))
(assert (x1052 x5705 x5417))
(assert (= x7474 (or x8972 x3594)))
(assert (= (and (not x6345) x209) x6096))
(assert (= x944 x1129))
(assert (= (and x1267 x5576) x2497))
(assert (x391 x128))
(assert (x4156 x2012 x5116 x5390 x530))
(assert (x391 x7101))
(assert (x1710 x41))
(assert (= x4555 (and (not x8935) x346)))
(assert (= (or x2290 x1131) x2361))
(assert (x391 x6703))
(assert (x391 x3104))
(assert (= (and x3599 (not x7582)) x8548))
(assert (x391 x132))
(assert (x391 x1760))
(assert (= x3855 (=> (and (= x1060 (ite (< 31 x8417) 1 0)) (= x5843 (ite (= 0 x8417) 1 0)) (= (ite (= 1 x7921) 1 0) x3230) (= (x2237 x2103 x7830) x6142) (= x8479 (< 0 x6142)) (= (x2237 x3230 x1060) x4246) (= (x1893 x4246 x5843) x2103)) (and (=> (and x8479 (and (= (x2125 (+ 4 x7098)) x7415) (= x2193 (x2125 (+ x7415 32))) (= x8188 (x7124 (- x2193 x7098))) (= x16 (= x8110 x7848)))) (and (=> (and (not x16) (= x2688 (= x5049 x7848))) (and (=> (and (and (= x904 (x7124 (- x1813 4))) (< x3096 405663989) (= x4932 (x6887 (x7379 x5049))) (= (or (> x904 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x904)) (> 32 x904))) x3809) (= x1813 36) (not (= x3096 75483562)) (not (= 178855970 x3096)) (not (> 4 x1813)) (> x4932 0) (= x4548 x7535) (< x3096 2217467699) (= x8188 x1813) (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x6760) (< x3096 988262939) (= x3096 242558722)) x2688) (and (=> (and (not x3809) (and (= x8246 x4548) (>= x8323 0) (= (x8441 x8799) x8323) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8323) (= x8799 (x7158 (x7379 x7032) (x5361 6) 0)) (= x8292 (> x7535 x8323)))) (and (=> (and (not x8292) (and (= (x7158 (x7379 x7032) (x5361 6) 0) x8100) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4836) (<= 0 x4836) (= x2344 (< x4836 x4548)) (= (x8441 x8100) x4836))) (and (=> x2344 x7617) (=> (and (not x2344) (and (= (> x8790 x309) x1646) (>= x8790 0) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4548)) x309) (<= x8790 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1620 (x7124 (- x4836 x4548))))) (and (=> (and (not x1646) (and (<= 0 x3921) (= (= x3921 x5402) x471) (= x3348 (x2125 (+ x8790 x4548))) (= 128 x4792) (> 1461501637330902918203684832716283019655932542976 x3921) (>= 1461501637330902918203684832716283019655932542975 x3921))) (and (=> (and x471 (and (not (> 4 x3616)) (= 100 x3616) (= x6961 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> x8937 0) (= 599290589 x1630) (= 100 x3616) (= x1183 (x7124 (- x3616 4))) (= x8937 (x6887 (x7379 x5402))) (= x7366 x5049) (not (< x1630 599290589)) (= x7032 x4313) (= x8481 x8246) (< x1630 1466279372) (= (or (and (> 96 x1183) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1183))) (> x1183 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x6930))) (and (=> x6930 x6489) (=> (and (not x6930) (and (= x3938 (= x7032 x4313)) (= x6812 x4313))) (and (=> (and (and (= x8737 x7366) (= (= x5049 x7366) x3081)) x3938) (and (=> (and (and (>= x4593 0) (= x8481 x1753) (<= x4593 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2673 (< x4593 x8246)) (= x4593 (x4475 x8036)) (= (x7158 (x7379 x4313) (x5361 1) 0) x8036)) x3081) (and (=> x2673 x6489) (=> (and (= (> x8481 x4593) x7825) (not x2673)) (and (=> x7825 x6489) (=> (and (and (= (x7158 (x7379 x7366) (x5361 1) 0) x9123) (= x2275 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8481))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5100) (= (x7124 (- x4593 x8481)) x5523) (= (< x2275 x5100) x4770) (= x5398 (x7158 (x7379 x4313) (x5361 1) 0)) (>= x5100 0) (= x5100 (x9029 x9123))) (not x7825)) (and (=> x4770 x6489) (=> (and (and (= (> x5100 x6172) x2157) (= (x2125 (+ x5100 x8481)) x6172)) (not x4770)) (and (=> (and (and (= x20 (x7158 (x7379 x4313) (x5361 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4794) (= (x7158 (x7379 x5049) x20 0) x5350) (= x4791 (< x4794 x8481)) (= (x1337 x5350) x4794) (>= x4794 0)) (not x2157)) (and (=> (and (not x4791) (= x7722 (> x8481 x4794))) (and (=> x7722 x6489) (=> (and (and (= x5722 1) (= (x7124 (- x4794 x8481)) x8938) (= 32 x7365)) (not x7722)) x2091))) (=> x4791 x6489))) (=> x2157 x6489))))))))) (=> (not x3081) x6489))) (=> (not x3938) x6489))))) (=> (and (= (= x3921 x8110) x9019) (not x471)) (and (=> (and (= x6235 (= x3921 x5049)) (not x9019)) (and (=> (and (not x6235) (and (= x7414 (= x4633 x3921)) (and x7414 (and (= (x6887 (x7379 x4633)) x4215) (not (= x2859 405663989)) (= 100 x5596) (= x8996 (or (and (= true (<= x6568 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x6568)) (> x6568 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x5596 100) (= x1830 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> 988262939 x2859) (not (= x2859 547091486)) (> x4215 0) (not (> 405663989 x2859)) (= x4102 x5049) (< x2859 2217467699) (= x2859 599290589) (= x8246 x8771) (= (x7124 (- x5596 4)) x6568) (not (> 4 x5596)) (= x8884 x7032))))) (and (=> x8996 x7277) (=> (and (not x8996) (and (= x8884 x7580) (= (= x8884 x7032) x8561))) (and (=> (not x8561) x7277) (=> (and (and (= x2970 x4102) (= x6357 (= x5049 x4102))) x8561) (and (=> (and (and (= x3402 (x3526 x3571)) (= x8771 x5085) (<= 0 x3402) (= (x7158 (x7379 x8884) (x5361 5) 0) x3571) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3402) (= (< x3402 x8246) x4336)) x6357) (and (=> x4336 x7277) (=> (and (and (<= x8356 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1755 (x7158 (x7379 x8884) (x5361 5) 0)) (<= 0 x8356) (= x5098 (> x8771 x8356)) (= (x3526 x1755) x8356)) (not x4336)) (and (=> (and (and (= x380 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8771))) (<= 0 x557) (<= x557 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7458 x6356) x557) (= x975 (x7124 (- x8356 x8771))) (= (> x557 x380) x4401) (= (x7158 (x7379 x4102) (x5361 5) 0) x6356)) (not x5098)) (and (=> (and (not x4401) (and (= x7817 32) (= x1239 1) (= (x2125 (+ x8771 x557)) x3899) (= 1 x5216))) x4422) (=> x4401 x7277))) (=> x5098 x7277))))) (=> (not x6357) x7277))))))) (=> (and (and (= x3443 100) (> 2217467699 x5587) (not (> 405663989 x5587)) (not (= x5587 405663989)) (= 100 x3443) (= x8246 x9178) (= (x6887 (x7379 x5049)) x6127) (= (x7124 (- x3443 4)) x5389) (= x1038 (or (and (= true (<= x5389 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x5389 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5389))) (< x5587 988262939) (not (= 547091486 x5587)) (> x6127 0) (= x5049 x6496) (not (< x3443 4)) (= x326 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x759 x7032) (= 599290589 x5587)) x6235) (and (=> x1038 x6422) (=> (and (and (= x3880 (= x7032 x759)) (= x8555 x759)) (not x1038)) (and (=> (and x3880 (and (= x6496 x4671) (= x2238 (= x5049 x6496)))) (and (=> (not x2238) x6422) (=> (and x2238 (and (= x9178 x174) (<= 0 x6641) (= (< x6641 x8246) x8606) (= (x1833 x5382) x6641) (= (x7158 (x7379 x759) (x5361 5) 0) x5382) (<= x6641 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (= x7870 (x7158 (x7379 x759) (x5361 5) 0)) (= x6351 (x1833 x7870)) (= (> x9178 x6351) x4724) (>= x6351 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6351)) (not x8606)) (and (=> (and (and (= (x7124 (- x6351 x9178)) x8980) (= (< x6957 x5467) x4829) (= x7185 (x7158 (x7379 x6496) (x5361 5) 0)) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9178)) x6957) (= x5467 (x5147 x7185)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5467) (>= x5467 0)) (not x4724)) (and (=> x4829 x6422) (=> (and (not x4829) (and (= (x2125 (+ x9178 x5467)) x2555) (= 32 x7844) (= 1 x2934) (= x5813 1))) x524))) (=> x4724 x6422))) (=> x8606 x6422))))) (=> (not x3880) x6422))))))) (=> (and x9019 (and (= 100 x3113) (< 0 x8883) (= (or (> x6664 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6664) true) (< x6664 96))) x6505) (not (= 405663989 x6435)) (= (x6887 (x7379 x8110)) x8883) (= x1945 x8246) (= 100 x3113) (not (= 547091486 x6435)) (= x6664 (x7124 (- x3113 4))) (< x6435 2217467699) (not (< x3113 4)) (= 599290589 x6435) (not (> 405663989 x6435)) (= x5512 x7032) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x6626) (< x6435 988262939) (= x5049 x6589))) (and (=> (and (and (= x4989 (= x5512 x7032)) (= x5512 x5312)) (not x6505)) (and (=> (and (and (= x4460 (= x6589 x5049)) (= x3164 x6589)) x4989) (and (=> (not x4460) x4948) (=> (and (and (= (x7158 (x7379 x5512) (x5361 5) 0) x429) (<= 0 x7486) (= (x1401 x429) x7486) (= (> x8246 x7486) x4461) (= x3251 x1945) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7486)) x4460) (and (=> (and (and (= (x1401 x1357) x8276) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8276) (<= 0 x8276) (= (x7158 (x7379 x5512) (x5361 5) 0) x1357) (= (< x8276 x1945) x5755)) (not x4461)) (and (=> (and (not x5755) (and (= x481 (x7124 (- x8276 x1945))) (= (< x7259 x8898) x3207) (= (x7158 (x7379 x6589) (x5361 5) 0) x6945) (>= x8898 0) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1945)) x7259) (= x8898 (x3635 x6945)) (<= x8898 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x3207) (and (= x3733 (x2125 (+ x8898 x1945))) (= x3209 32) (= x7829 1) (= x8260 1))) x7858) (=> x3207 x4948))) (=> x5755 x4948))) (=> x4461 x4948))))) (=> (not x4989) x4948))) (=> x6505 x4948))))))) (=> x1646 x7617))))) (=> x8292 x7617))) (=> x3809 x7617))) (=> (and (not x2688) (and (= (= x7848 x4633) x1921) (and (and (= x8188 x7704) (= (x7124 (- x7704 4)) x929) (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x3514) (> x5464 0) (not (= 178855970 x2988)) (not (= x2988 75483562)) (= 242558722 x2988) (< x2988 988262939) (= (x6887 (x7379 x4633)) x5464) (= 36 x7704) (= x3369 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x929) (and (= (<= x929 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x929 32)))) (> 2217467699 x2988) (= x6514 x7535) (> 405663989 x2988) (not (< x7704 4))) x1921))) (and (=> x3369 x2461) (=> (and (and (= x4089 (< x8073 x7535)) (>= x8073 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8073) (= (x1698 x2131) x8073) (= x2131 (x7158 (x7379 x7032) (x5361 6) 0)) (= x6514 x4241)) (not x3369)) (and (=> x4089 x2461) (=> (and (and (= (x7158 (x7379 x7032) (x5361 6) 0) x7572) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1541) (= x1694 (> x6514 x1541)) (= (x1698 x7572) x1541) (>= x1541 0)) (not x4089)) (and (=> x1694 x2461) (=> (and (not x1694) (and (>= x1841 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1841) (= (> x1841 x4712) x4210) (= (x7124 (- x1541 x6514)) x8675) (= x4712 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6514))))) (and (=> (and (not x4210) (and (>= 1461501637330902918203684832716283019655932542975 x1062) (> 1461501637330902918203684832716283019655932542976 x1062) (<= 0 x1062) (= (x2125 (+ x6514 x1841)) x8613) (= (= x5402 x1062) x3989) (= 128 x4855))) (and (=> (and (= x7932 (= x1062 x8110)) (not x3989)) (and (=> (and x7932 (and (= x4633 x2072) (= (or (and (> 96 x8473) (= true (<= x8473 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x8473 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x7289) (= x7113 x4241) (= x8473 (x7124 (- x1333 4))) (= x1006 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= x1551 547091486)) (< x1551 2217467699) (< x1551 988262939) (= x7032 x1737) (= 100 x1333) (= x1333 100) (not (= x1551 405663989)) (> x7218 0) (not (< x1551 405663989)) (not (> 4 x1333)) (= (x6887 (x7379 x8110)) x7218) (= 599290589 x1551))) (and (=> (and (and (= x2587 x1737) (= x2596 (= x7032 x1737))) (not x7289)) (and (=> (and x2596 (and (= x4389 x2072) (= x2407 (= x4633 x2072)))) (and (=> (not x2407) x4250) (=> (and (and (= x3740 (x1401 x6317)) (= x3126 (< x3740 x4241)) (>= x3740 0) (= x9157 x7113) (<= x3740 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x6317 (x7158 (x7379 x1737) (x5361 5) 0))) x2407) (and (=> x3126 x4250) (=> (and (not x3126) (and (= x2053 (x1401 x7045)) (<= 0 x2053) (<= x2053 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x2053 x7113) x5335) (= x7045 (x7158 (x7379 x1737) (x5361 5) 0)))) (and (=> (and (and (= x4647 (x7124 (- x2053 x7113))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x512) (= x512 (x717 x631)) (= x67 (> x512 x6418)) (= x6418 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7113))) (= x631 (x7158 (x7379 x2072) (x5361 5) 0)) (>= x512 0)) (not x5335)) (and (=> (and (not x67) (and (= x713 1) (= x2953 32) (= x2681 (x2125 (+ x7113 x512))) (= 1 x5015))) x1489) (=> x67 x4250))) (=> x5335 x4250))))))) (=> (not x2596) x4250))) (=> x7289 x4250))) (=> (and (not x7932) (= (= x1062 x5049) x1565)) (and (=> (and x1565 (and (< x3379 988262939) (not (= 405663989 x3379)) (not (> 405663989 x3379)) (= x4241 x1572) (< x3379 2217467699) (not (> 4 x966)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x9219) (= (x6887 (x7379 x5049)) x3969) (= (x7124 (- x966 4)) x7207) (= x3379 599290589) (= x7032 x4113) (> x3969 0) (= x4627 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7207) (and (> 96 x7207) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7207))))) (not (= 547091486 x3379)) (= x4633 x4802) (= 100 x966) (= x966 100))) (and (=> x4627 x3995) (=> (and (not x4627) (and (= x2295 x4113) (= x5302 (= x7032 x4113)))) (and (=> (and (and (= x6915 (= x4633 x4802)) (= x2877 x4802)) x5302) (and (=> (and x6915 (and (= (x1833 x4205) x6204) (>= x6204 0) (= x4205 (x7158 (x7379 x4113) (x5361 5) 0)) (= x332 x1572) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6204) (= x3869 (< x6204 x4241)))) (and (=> (and (and (= x8822 (x7158 (x7379 x4113) (x5361 5) 0)) (<= x7485 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x9227 (> x1572 x7485)) (>= x7485 0) (= x7485 (x1833 x8822))) (not x3869)) (and (=> (and (and (<= x5553 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x669 (x7158 (x7379 x4802) (x5361 5) 0)) (= x117 (x7124 (- x7485 x1572))) (<= 0 x5553) (= x3479 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1572))) (= x5553 (x4756 x669)) (= x584 (> x5553 x3479))) (not x9227)) (and (=> (and (and (= 32 x5605) (= x3208 1) (= x3816 (x2125 (+ x5553 x1572))) (= x4942 1)) (not x584)) x8482) (=> x584 x3995))) (=> x9227 x3995))) (=> x3869 x3995))) (=> (not x6915) x3995))) (=> (not x5302) x3995))))) (=> (and (and (and x772 (and (> x1030 0) (= 100 x5835) (= x8474 x4633) (= (x7124 (- x5835 4)) x6674) (= 100 x5835) (= x4241 x1783) (< x1147 2217467699) (= x4017 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6674) (and (> 96 x6674) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6674) true)))) (not (= x1147 405663989)) (= x1030 (x6887 (x7379 x4633))) (= x1147 599290589) (= x2094 x7032) (not (< x1147 405663989)) (> 988262939 x1147) (= x971 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= 547091486 x1147)) (not (> 4 x5835)))) (= (= x4633 x1062) x772)) (not x1565)) (and (=> x4017 x4902) (=> (and (not x4017) (and (= x6616 x2094) (= (= x2094 x7032) x5877))) (and (=> (and x5877 (and (= (= x4633 x8474) x2401) (= x8474 x161))) (and (=> (and (and (= x1783 x6567) (= x3313 (> x4241 x1438)) (= (x7158 (x7379 x2094) (x5361 5) 0) x4604) (>= x1438 0) (= (x3526 x4604) x1438) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1438)) x2401) (and (=> x3313 x4902) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3785) (= x1772 (< x3785 x1783)) (>= x3785 0) (= (x3526 x1075) x3785) (= x1075 (x7158 (x7379 x2094) (x5361 5) 0))) (not x3313)) (and (=> x1772 x4902) (=> (and (not x1772) (and (= x9026 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1783))) (= (> x3312 x9026) x6214) (<= x3312 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7124 (- x3785 x1783)) x6974) (>= x3312 0) (= x3312 (x8837 x75)) (= x75 (x7158 (x7379 x8474) (x5361 5) 0)))) (and (=> (and (not x6214) (and (= 1 x7702) (= x2649 32) (= 1 x852) (= x5310 (x2125 (+ x3312 x1783))))) x8150) (=> x6214 x4902))))))) (=> (not x2401) x4902))) (=> (not x5877) x4902))))))))) (=> (and x3989 (and (not (> 599290589 x9013)) (= x2946 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x377) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x377)) (> 96 x377)))) (= x4633 x6587) (= x2403 x7032) (= 100 x128) (> 1466279372 x9013) (= (x6887 (x7379 x5402)) x1260) (= x128 100) (= x1809 x4241) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x8485) (= x377 (x7124 (- x128 4))) (> x1260 0) (not (> 4 x128)) (= 599290589 x9013))) (and (=> x2946 x1667) (=> (and (and (= x1047 x2403) (= (= x2403 x7032) x6161)) (not x2946)) (and (=> (and (and (= x6587 x4615) (= (= x4633 x6587) x9133)) x6161) (and (=> (and x9133 (and (= (> x4241 x280) x5242) (>= x280 0) (= (x7158 (x7379 x2403) (x5361 1) 0) x5513) (= x378 x1809) (= (x4475 x5513) x280) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x280))) (and (=> (and (= (< x280 x1809) x5940) (not x5242)) (and (=> x5940 x1667) (=> (and (not x5940) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6432) (= (x8243 x7581) x6432) (>= x6432 0) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1809)) x4178) (= (x7124 (- x280 x1809)) x7246) (= x7581 (x7158 (x7379 x6587) (x5361 1) 0)) (= (> x6432 x4178) x1905) (= x7234 (x7158 (x7379 x2403) (x5361 1) 0)))) (and (=> x1905 x1667) (=> (and (and (= x4243 (> x6432 x9148)) (= x9148 (x2125 (+ x6432 x1809)))) (not x1905)) (and (=> (and (not x4243) (and (= (x7158 (x7379 x4633) x4365 0) x4320) (= (x1337 x4320) x5831) (= (x7158 (x7379 x2403) (x5361 2) 0) x4365) (<= x5831 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x5831 0) (= (< x5831 x1809) x6395))) (and (=> (and (= (< x5831 x1809) x4650) (not x6395)) (and (=> (and (not x4650) (and (= x1436 1) (= 32 x7786) (= x608 (x7124 (- x5831 x1809))))) x131) (=> x4650 x1667))) (=> x6395 x1667))) (=> x4243 x1667))))))) (=> x5242 x1667))) (=> (not x9133) x1667))) (=> (not x6161) x1667))))))) (=> x4210 x2461))))))))))) (=> (and x16 (and (> 2217467699 x9076) (= x7754 (x6887 (x7379 x8110))) (= 36 x5708) (= x3761 6539370208772218570076773595062200405109424842860869254164860851635934461952) (not (> 4 x5708)) (< x9076 988262939) (= x9076 242558722) (not (= 75483562 x9076)) (< 0 x7754) (= x1889 (x7124 (- x5708 4))) (= x7899 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1889) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1889) true) (< x1889 32)))) (= x7535 x2352) (< x9076 405663989) (not (= x9076 178855970)) (= x5708 x8188))) (and (=> (and (not x7899) (and (= x4456 x2352) (>= x3804 0) (= (x333 x8307) x3804) (= (x7158 (x7379 x7032) (x5361 6) 0) x8307) (<= x3804 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x3804 x7535) x2822))) (and (=> (and (not x2822) (and (<= x8920 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x333 x8835) x8920) (<= 0 x8920) (= x1347 (> x2352 x8920)) (= x8835 (x7158 (x7379 x7032) (x5361 6) 0)))) (and (=> x1347 x2967) (=> (and (and (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2352)) x263) (= x7718 (< x263 x3133)) (= x4525 (x7124 (- x8920 x2352))) (>= x3133 0) (<= x3133 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1347)) (and (=> (and (and (> 1461501637330902918203684832716283019655932542976 x5759) (= (x2125 (+ x3133 x2352)) x6092) (<= 0 x5759) (= x4882 (= x5759 x5402)) (>= 1461501637330902918203684832716283019655932542975 x5759) (= x7626 128)) (not x7718)) (and (=> (and (= x7939 (= x5759 x8110)) (not x4882)) (and (=> (and (= (= x5049 x5759) x7504) (not x7939)) (and (=> (and x7504 (and (> 2217467699 x7608) (= x3540 (x7124 (- x8953 4))) (not (= 405663989 x7608)) (> 988262939 x7608) (= x8819 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x7032 x8214) (not (= 547091486 x7608)) (not (< x7608 405663989)) (= x4456 x4721) (= x7586 (x6887 (x7379 x5049))) (= x8953 100) (= x8953 100) (= x3150 x8110) (> x7586 0) (not (> 4 x8953)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3540) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3540) true) (> 96 x3540))) x5633) (= 599290589 x7608))) (and (=> (and (not x5633) (and (= x5375 (= x8214 x7032)) (= x8214 x4468))) (and (=> (and (and (= x5133 x3150) (= x3063 (= x3150 x8110))) x5375) (and (=> (and (and (<= 0 x3140) (= x3169 x4721) (= x4938 (> x4456 x3140)) (= x3140 (x1833 x4289)) (= x4289 (x7158 (x7379 x8214) (x5361 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3140)) x3063) (and (=> x4938 x955) (=> (and (not x4938) (and (= (> x4721 x7161) x455) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7161) (= (x1833 x6140) x7161) (= x6140 (x7158 (x7379 x8214) (x5361 5) 0)) (<= 0 x7161))) (and (=> x455 x955) (=> (and (not x455) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3818) (= (< x1078 x3818) x3278) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4721)) x1078) (>= x3818 0) (= (x6655 x6099) x3818) (= (x7124 (- x7161 x4721)) x4880) (= (x7158 (x7379 x3150) (x5361 5) 0) x6099))) (and (=> x3278 x955) (=> (and (not x3278) (and (= 1 x5300) (= (x2125 (+ x4721 x3818)) x5956) (= 32 x1725) (= 1 x189))) x3144))))))) (=> (not x3063) x955))) (=> (not x5375) x955))) (=> x5633 x955))) (=> (and (not x7504) (and (= (= x4633 x5759) x9004) (and (and (= x9090 (x7124 (- x6244 4))) (not (> 4 x6244)) (= x8110 x204) (= (or (and (= true (<= x9090 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x9090)) (> x9090 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2222) (= x6244 100) (= x6423 (x6887 (x7379 x4633))) (= x4820 599290589) (= 100 x6244) (not (= 405663989 x4820)) (not (= x4820 547091486)) (not (> 405663989 x4820)) (< x4820 988262939) (< x4820 2217467699) (= x4456 x4944) (= x8779 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x7032 x6259) (< 0 x6423)) x9004))) (and (=> x2222 x4190) (=> (and (and (= x4159 x6259) (= x8848 (= x6259 x7032))) (not x2222)) (and (=> (not x8848) x4190) (=> (and (and (= x8983 (= x204 x8110)) (= x8612 x204)) x8848) (and (=> (and x8983 (and (= x1412 (x7158 (x7379 x6259) (x5361 5) 0)) (>= x6190 0) (= (< x6190 x4456) x52) (= x8160 x4944) (= (x3526 x1412) x6190) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6190))) (and (=> x52 x4190) (=> (and (and (= (< x7679 x4944) x4114) (= (x3526 x2247) x7679) (>= x7679 0) (= x2247 (x7158 (x7379 x6259) (x5361 5) 0)) (<= x7679 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x52)) (and (=> (and (and (= x6221 (x7158 (x7379 x204) (x5361 5) 0)) (= x2540 (x7124 (- x7679 x4944))) (<= x8221 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4944)) x7274) (= x6236 (< x7274 x8221)) (<= 0 x8221) (= (x8962 x6221) x8221)) (not x4114)) (and (=> x6236 x4190) (=> (and (not x6236) (and (= (x2125 (+ x8221 x4944)) x7417) (= x4909 1) (= 32 x7956) (= x6817 1))) x1979))) (=> x4114 x4190))))) (=> (not x8983) x4190))))))))) (=> (and x7939 (and (not (> 4 x470)) (= x2231 599290589) (not (> 405663989 x2231)) (= x4456 x5399) (= 100 x470) (not (= x2231 547091486)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1866) (= 100 x470) (< x2231 988262939) (< x2231 2217467699) (= (x6887 (x7379 x8110)) x5360) (= x7833 x8110) (= x7032 x8678) (< 0 x5360) (= (x7124 (- x470 4)) x8597) (= x6740 (or (and (= true (<= x8597 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x8597 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8597))) (not (= 405663989 x2231)))) (and (=> x6740 x4737) (=> (and (and (= x8678 x1045) (= x275 (= x7032 x8678))) (not x6740)) (and (=> (and x275 (and (= x7833 x1563) (= x2576 (= x8110 x7833)))) (and (=> (not x2576) x4737) (=> (and x2576 (and (= x7444 (x1401 x6535)) (>= x7444 0) (= x5399 x8187) (= x5385 (< x7444 x4456)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7444) (= x6535 (x7158 (x7379 x8678) (x5361 5) 0)))) (and (=> x5385 x4737) (=> (and (and (= (x7158 (x7379 x8678) (x5361 5) 0) x4199) (= (> x5399 x8167) x4024) (>= x8167 0) (= x8167 (x1401 x4199)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8167)) (not x5385)) (and (=> (and (and (= (x1164 x1063) x7310) (= x7362 (x7124 (- x8167 x5399))) (<= 0 x7310) (= x1770 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5399))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7310) (= x1063 (x7158 (x7379 x7833) (x5361 5) 0)) (= x9136 (> x7310 x1770))) (not x4024)) (and (=> x9136 x4737) (=> (and (and (= (x2125 (+ x5399 x7310)) x8994) (= 1 x9049) (= 1 x7883) (= 32 x6429)) (not x9136)) x3959))) (=> x4024 x4737))))))) (=> (not x275) x4737))))))) (=> (and x4882 (and (= x8110 x3112) (> 1466279372 x6614) (= (or (> x1161 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1161) true) (> 96 x1161))) x2488) (= x3305 100) (= (x7124 (- x3305 4)) x1161) (= x4456 x8354) (> x1145 0) (= x6614 599290589) (= x3397 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x1145 (x6887 (x7379 x5402))) (not (> 599290589 x6614)) (= x7032 x2008) (not (< x3305 4)) (= 100 x3305))) (and (=> x2488 x8312) (=> (and (not x2488) (and (= x2008 x8229) (= (= x2008 x7032) x7710))) (and (=> (not x7710) x8312) (=> (and x7710 (and (= x3183 (= x3112 x8110)) (= x3739 x3112))) (and (=> (not x3183) x8312) (=> (and (and (<= x6171 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x4456 x6171) x439) (= (x4475 x1695) x6171) (= x1695 (x7158 (x7379 x2008) (x5361 1) 0)) (<= 0 x6171) (= x1849 x8354)) x3183) (and (=> x439 x8312) (=> (and (not x439) (= x668 (> x8354 x6171))) (and (=> x668 x8312) (=> (and (not x668) (and (= x2574 (x7158 (x7379 x2008) (x5361 1) 0)) (<= x519 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7158 (x7379 x3112) (x5361 1) 0) x7250) (= (x7124 (- x6171 x8354)) x873) (<= 0 x519) (= (> x519 x2841) x8935) (= x2841 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8354))) (= x519 (x7224 x7250)))) (and (=> x8935 x8312) (=> (and (and (= (< x5195 x519) x5219) (= (x2125 (+ x8354 x519)) x5195)) (not x8935)) (and (=> x5219 x8312) (=> (and (and (<= 0 x6888) (= x6888 (x1337 x9236)) (= (x7158 (x7379 x2008) (x5361 2) 0) x8322) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6888) (= x9236 (x7158 (x7379 x8110) x8322 0)) (= x3440 (> x8354 x6888))) (not x5219)) (and (=> (and (not x3440) (= x8014 (< x6888 x8354))) (and (=> x8014 x8312) (=> (and (not x8014) (and (= x7235 32) (= 1 x5090) (= (x7124 (- x6888 x8354)) x1981))) x3331))) (=> x3440 x8312))))))))))))))))))) (=> x7718 x2967))))) (=> x2822 x2967))) (=> x7899 x2967))))) (=> (not x8479) x2322)))))
(assert (x1052 x6215 x7208))
(assert (x6103 (- x7316 x2780)))
(assert (= x180 (x3649 (x7379 x180))))
(assert (x2252 x217))
(assert (x391 x7917))
(assert (= (or x1508 x9211) x5511))
(assert (= x202 (and x7418 x3435)))
(assert (= x9074 (and x2617 (not x1346))))
(assert (= x750 (=> (= (= x2011 0) x4867) (and (=> (and (and (= x291 (x2125 (+ x887 31))) (= (or (> x887 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x887) true) (< x887 32))) x6574) (= x4936 (x2125 (+ x30 x8526))) (= (x2237 115792089237316195423570985008687907853269984665640564039457584007913129639904 x291) x8526)) (not x4867)) (and (=> (and (and (= x76 (x7265 x30)) (= (= x76 0) x5073)) (not x6574)) (and (=> (and x5073 (and (= x1637 x2932) (= x2159 x4936) (= x299 x8753) (= x4428 x1525))) x1779) (=> (not x5073) x2322))) (=> (and x6574 (= x847 true)) x4020))) (=> x4867 x2322)))))
(assert (x8665 x5552 x7316 x172 x2780))
(assert (= (and x3363 x4048) x9095))
(assert (x6103 (- x530 x490)))
(assert (x391 x5116))
(assert (= (and (not x1613) x3422) x6160))
(assert (= (or x1527 x8930 x3299 x7933 x1575) x4915))
(assert (= (or x1329 x5317) x7527))
(assert (x6103 (- x774 x1256)))
(assert (x391 x6917))
(assert (x1052 x3488 x2731))
(assert (x391 x2075))
(assert (= (and x5877 x2544) x5524))
(assert (x391 x8891))
(assert (x8130 x2746))
(assert (= x6295 (or x1868 x6559 x1327 x8769)))
(assert (x391 x1511))
(assert (x391 x6272))
(assert (= x8445 (and x3929 x3844)))
(assert (= (and (not x7289) x1242) x580))
(assert (x391 x1153))
(assert (x4191 x2780 (- x172 x3593)))
(assert (x391 x3088))
(assert (= (x3649 (x7379 x6495)) x6495))
(assert (= (and (not x5392) x5163) x3297))
(assert (x6103 (- x5116 x530)))
(assert (x391 x3180))
(assert (x391 x6946))
(assert (= x7305 (x3649 (x7379 x7305))))
(assert (= x1992 (and (not x357) x7923)))
(assert (= (or x6223 x2529) x6322))
(assert (= x4546 (and x5261 x4091)))
(assert (= (and (not x5423) x2052) x9215))
(assert (x391 x3529))
(assert (x6103 (- x5390 x4135)))
(assert (= (+ 1 (x3649 x4866)) (x3649 (x3789 x4866 1))))
(assert (x4191 x530 (- x5390 x7316)))
(assert (x391 x795))
(assert (x391 x4691))
(assert (x8665 x9039 x530 x4135 x2012))
(assert (= x5869 (and x5345 x6574)))
(assert (= x5601 (or (and x4336 x4388) x5925 (and x6156 (not x8561)) (and x5457 x8996) (and (not x6357) x4053) x1926)))
(assert (x391 x6674))
(assert (= (=> (and (= x7336 x4485) (= 0 x8012)) x6775) x6421))
(assert (x391 x1806))
(assert (x391 x5675))
(assert (x391 x3169))
(assert (x7060 x6248))
(assert (x391 x4792))
(assert (x4156 x3593 x3579 x2780 x172))
(assert (x2252 x8199))
(assert (= (and x3948 x8427) x5832))
(assert (x2624 x1818 x1420))
(assert (x391 x8278))
(assert (= (and x8033 x8804) x362))
(assert (x391 x9048))
(assert (x391 x616))
(assert (x391 x2970))
(assert (= x2078 (=> (and (= x8753 x7865) (= x8790 x2932) (= x3133 x4428) (= x2011 x2064) (= x887 x6958)) x6806)))
(assert (x1710 x8429))
(assert (x8665 x1726 x940 x774 x490))
(assert (x391 x7644))
(assert (x4191 x2012 (- x4135 x2780)))
(assert (x4191 x490 (- x774 x8031)))
(assert (x391 x2993))
(assert (x8665 x5116 x2012 x530 x9039))
(assert (x4156 x774 x490 x1726 x940))
(assert (x8665 x172 x1256 x5766 x8031))
(assert (= x2039 (and (not x8205) x5480)))
(assert (= (and x1953 (not x6236)) x876))
(assert (x6103 (- x530 x5390)))
(assert (= (and (not x4734) x5763) x5929))
(assert (= x6710 (and x2090 x2777)))
(assert (x391 x5018))
(assert (= (and x7643 x6280) x4237))
(assert (x391 x7356))
(assert (x391 x3254))
(assert (x391 x6601))
(assert (x391 x6857))
(assert (= x7595 (or x8838 x2682 x3998 x88 x1902 x7298 x4060 x8699 x3890)))
(assert (x6103 x1726))
(assert (x4191 x940 (- x1726 x5116)))
(assert (x391 x3274))
(assert (= x6288 (=> (and (or x293 (not x293)) (= (= x6414 0) x293)) x906)))
(assert (x391 x3120))
(assert (x2252 x8286))
(assert (x391 x4458))
(assert (= (and x6224 x7339) x7978))
(assert (x6103 (- x8031 x774)))
(assert (= x8452 (and (not x8599) x2234)))
(assert (= x5627 (=> (= (> x3707 x1935) x8463) (and (=> x8463 x5477) (=> (and (and (= x6287 x447) (= x6401 x6778) (= x4217 x3068) (= x6287 (x7124 (- x1935 x3707)))) (not x8463)) x3051)))))
(assert (= (x3649 (x7379 x3001)) x3001))
(assert (= x8199 (x3649 (x7379 x8199))))
(assert (= (x7379 989455977) (x5361 989455977)))
(assert (x6103 (- x1726 x774)))
(assert (=> (>= 10000 x1385) (= (x7379 x1385) (x5361 x1385))))
(assert (= x1086 (and x186 x693)))
(assert (x391 x5899))
(assert (x391 x478))
(assert (= (and x8592 (not x5764)) x210))
(assert (= x8673 (and (not x3355) x7824)))
(assert (= (and x639 (not x3908)) x2918))
(assert (x391 x1997))
(assert (= x6943 (and (not x404) x4952)))
(assert (= (and x1309 x2751) x289))
(assert (x8665 x1256 x172 x774 x490))
(assert (x391 x8069))
(assert (x391 x9219))
(assert (= (or x7005 (and x6002 (not x2314))) x3765))
(assert (x6103 (- x774 x7316)))
(assert (= x3628 (and x5274 (not x6666))))
(assert (x391 x618))
(assert (=> (>= 10000 x6587) (= (x5361 x6587) (x7379 x6587))))
(assert (= x5736 (and x4521 x7938)))
(assert (x391 x2528))
(assert (x6103 (- x1726 x1256)))
(assert (= (or x600 x300 x2675 x8154 x677 x7262 x3175 x9245 x7918) x5369))
(assert (= x8279 (and x3220 x8040)))
(assert (x391 x6066))
(assert (and (x3303 x653 1461501637330902918203684832716283019655932542976) (x4253 x653 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x4077 x653 1461501637330902918203684832716283019655932542976) (* (x4526 x653 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x653)) (x5837 x653 1461501637330902918203684832716283019655932542976)))
(assert (x8665 x1256 x172 x2012 x5116))
(assert (x7060 x178))
(assert (x391 x1488))
(assert (= (+ 1 (x3649 x2677)) (x3649 (x3789 x2677 1))))
(assert (x391 x2564))
(assert (= (=> (and (= (x7158 (x7379 x7448) x4654 0) x6553) (= x7953 (x3789 x8436 1)) (= x2772 x7088) (= x6691 x7448) (= (x3789 x6553 1) x8436)) x2802) x3546))
(assert (= x425 (and (not x7281) x1233)))
(assert (x391 x7457))
(assert (x4156 x490 x774 x2780 x172))
(assert (x4191 x8031 (- x5766 x5116)))
(assert (x391 x1854))
(assert (= (and (not x8178) x3629) x367))
(assert (x391 x1669))
(assert (= x3436 (and x3271 x4650)))
(assert (x6103 (- x1726 x7316)))
(assert (=> (>= 10000 x5290) (= (x7379 x5290) (x5361 x5290))))
(assert (= x3442 (and (not x7276) x5321)))
(assert (= (and (=> (and (and (= (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5390) x6249) (= (= 0 x5390) x409) (= x3769 (x2237 x9054 x7036)) (>= x5390 0) (= (ite (not x409) 1 0) x9054) (= x2346 (x7158 (x7379 x7848) (x5361 158) 0)) (= x4905 (x7158 (x7379 x1640) x2346 0)) (= x7036 (ite (> x530 x6249) 1 0)) (= (x4008 x4905) x5390) (<= x5390 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7160 (= 0 x3769))) x6294) (and (=> (not x7160) x6387) (=> (and (and (= x6685 (x5353 (x7029 x5390 x530))) (= x7361 (< x7144 x7438)) (= x7438 (x4526 x6685 1000000000000000000))) x7160) (and (=> (and (and (= (> x7144 115792089237316195423570985008687907853269984665640564039457) x2007) (= (= (ite x2007 1 0) 0) x4446)) x7361) (and (=> (not x4446) x4694) (=> (and (and (= (= 0 x5680) x8420) (= (= x7629 0) x1334) (= (ite (< x7432 1000000000000000000) 1 0) x1644) (= (ite (not x8420) 1 0) x6168) (= (x2237 x6168 x1644) x7629) (= x5680 (x5353 (* x7144 1000000000000000000))) (= (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5680) x7432)) x4446) (and (=> (not x1334) x9255) (=> (and (and (= (x5353 (* x5680 1000000000000000000)) x6044) (= x1574 (< 0 x4860))) x1334) (and (=> (not x1574) x8426) (=> (and (and (= (> x6117 x6107) x8589) (= x602 (x4526 x7173 1000000000000000000)) (= x7884 (x3789 x4905 1)) (<= x6117 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x6117 (x3875 x7884)) (<= 0 x6117) (= x6107 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x602))) (= (x4526 x6044 x4860) x7173)) x1574) (and (=> x8589 x6630) (=> (and (and (= x4780 (> x7144 115792089237316195423570985008687907853269984665640564039457)) (= x1975 (x2125 (+ x6117 x602))) (= x5473 (= 0 (ite x4780 1 0)))) (not x8589)) (and (=> (not x5473) x2888) (=> (and (and (= (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7525) x8666) (= x4752 (ite (not x4403) 1 0)) (= (x5353 (* 1000000000000000000 x7144)) x7525) (= (x2237 x4752 x4050) x8979) (= (ite (> 1000000000000000000 x8666) 1 0) x4050) (= x4403 (= x7525 0)) (= (= x8979 0) x1275)) x5473) (and (=> (and x1275 (and (= (> x530 0) x588) (= (x5353 (* x7525 1000000000000000000)) x1669))) (and (=> (and (and (= (x4526 x1669 x530) x8335) (= (x4526 x8335 1000000000000000000) x7325) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3812) (= (x4008 x4905) x3812) (= (< x3812 x7325) x9225) (<= 0 x3812)) x588) (and (=> x9225 x4296) (=> (and (and (= x7813 x7928) (= x1975 x3044) (= (x7124 (- x3812 x7325)) x7928)) (not x9225)) x1422))) (=> (not x588) x944))) (=> (not x1275) x3779))))))))))))) (=> (and (and (= (= (ite x9259 1 0) 0) x5151) (= (< 115792089237316195423570985008687907853269984665640564039457 x7438) x9259)) (not x7361)) (and (=> (not x5151) x4807) (=> (and x5151 (and (= (x5353 (* x7438 1000000000000000000)) x6814) (= x5943 (= 0 x3108)) (= (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6814) x2240) (= x3108 (x2237 x4340 x5584)) (= (= x6814 0) x386) (= x5584 (ite (> 1000000000000000000 x2240) 1 0)) (= x4340 (ite (not x386) 1 0)))) (and (=> (and (and (= (x5353 (* 1000000000000000000 x6814)) x7433) (= (> x4860 0) x2884)) x5943) (and (=> (not x2884) x3152) (=> (and x2884 (and (<= x198 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x3104 x198) x229) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3671)) x3104) (<= 0 x198) (= (x3789 x4905 1) x640) (= (x3875 x640) x198) (= (x4526 x3199 1000000000000000000) x3671) (= (x4526 x7433 x4860) x3199))) (and (=> x229 x3037) (=> (and (and (= (< x7144 x7438) x3660) (= x7068 (x2125 (+ x3671 x198)))) (not x229)) (and (=> x3660 x4824) (=> (and (not x3660) (and (= 0 x7813) (= x7068 x3044))) x1422))))))) (=> (not x5943) x1605))))))))) (=> (and (not x6294) (and (= x3068 x2027) (= x3707 x7144) (= x8583 x6401))) x5627)) x9022))
(assert (x391 x3647))
(assert (x7060 x2846))
(assert (= x3956 (and (not x1217) x7674)))
(assert (x4191 x5390 (- x530 x1256)))
(assert (x6103 (- x774 x530)))
(assert (= (and x2842 x7803) x8572))
(assert (x391 x4698))
(assert (x391 x7622))
(assert (x391 x7184))
(assert (= (and x133 x7630) x7775))
(assert (= x8678 (x3649 (x7379 x8678))))
(assert (= (and x4222 (not x8568)) x861))
(assert (=> (>= 10000 x5430) (= (x5361 x5430) (x7379 x5430))))
(assert (= x5560 (and x7226 x1999)))
(assert (x391 x8060))
(assert (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 (x3649 (x5361 10742207464693106059581744854972325794081737850190833080250671788038469713920))))
(assert (x391 x2410))
(assert (= x4310 (or x5911 x3431)))
(assert (x391 x6589))
(assert (x391 x5843))
(assert (x391 x7255))
(assert (x391 x6696))
(assert (x391 x3008))
(assert (= (x7379 1038142104) (x5361 1038142104)))
(assert (x6103 (- x8031 x3579)))
(assert (= (and (not x5197) x3492) x2852))
(assert (x391 x1727))
(assert (x8665 x2780 x172 x3579 x3593))
(assert (x7060 1000000000000000000))
(assert (= x8024 (=> (and (= x9070 (= x5237 0)) (or (and (= x546 (x7158 (x7379 x5237) x8793 0)) (not x9070)) (and (= (x3789 x8793 2) x8823) x9070))) x5644)))
(assert (x391 x644))
(assert (= (or x3840 x1964) x7896))
(assert (= (and x1544 x2833) x3676))
(assert (x391 x8797))
(assert (= (x3649 (x7379 x3590)) x3590))
(assert (= x2718 (and (not x1281) x704)))
(assert (x8665 x3579 x3593 x530 x5390))
(assert (= (and x6733 x7763) x2177))
(assert (= x5966 (or x2651 x3200 x7001 x8295 x1674 x7565)))
(assert (= x2523 (x3649 (x7379 x2523))))
(assert (= x7514 (or x2547 x2650 x5153 x1181)))
(assert (= x6053 (and (not x1910) x4592)))
(assert (x2252 x6259))
(assert (x8665 x530 x9039 x940 x1726))
(assert (x8637 x291))
(assert (x2252 x8242))
(assert (x391 x1123))
(assert (=> (>= 10000 x5357) (= (x7379 x5357) (x5361 x5357))))
(assert (x391 x5417))
(assert (= 1913449218 (x3649 (x5361 1913449218))))
(assert (x391 x663))
(assert (x391 x4292))
(assert (x391 x61))
(assert (x391 x2350))
(assert (= x3391 (and (=> (and (not x2218) (and (= x5412 x6206) (= x145 1))) x4355) (=> (and x2218 (and (= x6206 x1800) (= x4599 x7848) (= x8793 x1649))) x1821))))
(assert (x391 x1987))
(assert (x4156 x172 x1256 x9039 x530))
(assert (= x2170 (or x8210 x1815)))
(assert (= (and x9006 x8836) x2124))
(assert (= x8192 (or x1531 x4781)))
(assert (= x7153 (and (not x9180) x2882)))
(assert (x1635 x9091))
(assert (= (and x816 x8918) x5748))
(assert (= (and (not x6870) x1391) x2541))
(assert (= (or x1138 x4776) x7159))
(assert (x6103 (- x2012 x4135)))
(assert (x2252 x219))
(assert (x391 x5541))
(assert (x391 x6138))
(assert (= x1423 (or x3040 x6901)))
(assert (x2252 x4822))
(assert (x391 x512))
(assert (= (or x8439 x8058) x3252))
(assert (= x6565 (and x4 x7058)))
(assert (= (and x5445 x960) x8703))
(assert (= (and x3790 x7223) x1651))
(assert (= (+ 1 (x3649 x6997)) (x3649 (x3789 x6997 1))))
(assert (x4191 x1726 (- x940 x3579)))
(assert (x2252 x7358))
(assert (= x4523 (=> (and (= x2388 x5892) (= 0 x7313)) x2160)))
(assert (x4156 x5116 x2012 x1726 x940))
(assert (= (and x4367 x9047) x3730))
(assert (x391 x6838))
(assert (= (+ (x3649 x6732) 2) (x3649 (x3789 x6732 2))))
(assert (= x8457 (or x1054 x4090)))
(assert (= x662 (x3649 (x7379 x662))))
(assert (= x2486 (and x1199 x2928)))
(assert (x391 x653))
(assert (= x6156 (and (not x8996) x5457)))
(assert (x391 x2812))
(assert (x391 x1775))
(assert (x8665 x530 x5390 x774 x490))
(assert (x391 x5144))
(assert (= x2854 (x3649 (x7379 x2854))))
(assert (x391 x3623))
(assert (x391 x1830))
(assert (=> (>= 10000 x336) (= (x5361 x336) (x7379 x336))))
(assert (= (and (not x6134) x8503) x2308))
(assert (= (x3649 (x7379 x5658)) x5658))
(assert (x391 x6683))
(assert (x7060 x3593))
(assert (x8665 x4135 x2012 x530 x9039))
(assert (= x8414 (and x8269 (not x7903))))
(assert (= x4188 (or x933 x2546)))
(assert (x391 x7790))
(assert (= x3475 x1129))
(assert (x1052 x1431 x1265))
(assert (= (x7379 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x5361 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x2252 x724))
(assert (x391 x332))
(assert (x391 x8317))
(assert (= x8909 (and x3783 (not x4401))))
(assert (= (and x2479 x3561) x4055))
(assert (= (and x1692 x6148) x1745))
(assert (x391 x2109))
(assert (= x5735 (=> (and (= x5113 x776) (= x7118 x3521)) x796)))
(assert (= (=> (and (= x667 x8849) (= 0 x8201)) x1608) x1296))
(assert (x391 x5605))
(assert (= x448 (or x7394 x6654)))
(assert (x4156 x5552 x7316 x490 x774))
(assert (= x1794 (=> (and (= x7437 x6024) (= x4311 x7247)) x5942)))
(assert (x391 x5766))
(assert (x391 x6107))
(assert (= (and x8450 x1548) x4557))
(assert (x391 x7620))
(assert (x391 x1705))
(assert (= (and x6788 x3403) x3774))
(assert (= (x3649 (x3789 x7975 1)) (+ 1 (x3649 x7975))))
(assert (x2252 x6809))
(assert (x391 x6250))
(assert (= (and x8283 x7738) x1757))
(assert (x4191 x5116 x2012))
(assert (= (and x7777 (not x1304)) x3568))
(assert (x6103 (- x5766 x940)))
(assert (x4191 x2012 (- x4135 x5116)))
(assert (x4156 x1726 x940 x490 x774))
(assert (= x666 (and x7412 (not x4099))))
(assert (= (and x5700 x7999) x7252))
(assert (x391 x4185))
(assert (x4191 x5766 (- x8031 x2012)))
(assert (= (and (not x7337) x305) x6245))
(assert (= (=> (and (= x6060 (x3789 x6827 1)) (= x5308 x4608) (= x6827 (x3789 x606 1)) (= x606 (x7158 (x7379 x5308) x8027 0)) (= x1588 x7996)) x6762) x9168))
(assert (x391 x1420))
(assert (= (=> (and (= x8608 x813) (= x4394 x5150)) x5027) x8832))
(assert (x391 x2804))
(assert (x391 x4712))
(assert (x391 x1356))
(assert (x2252 x2713))
(assert (x391 x5478))
(assert (x391 x5148))
(assert (= (and x8589 x3099) x3916))
(assert (= x3759 (=> (= (= 0 x5093) x7434) (and (=> x7434 x2322) (=> (and (and (= x2159 x30) (= x1637 x2625) (= x3712 x299) (= x6662 x1525)) (not x7434)) x1779)))))
(assert (x391 x3044))
(assert (x391 x314))
(assert (= x445 (and x3732 x7906)))
(assert (x2252 x7367))
(assert (x391 x6534))
(assert (= x6786 (and x6745 (not x9227))))
(assert (= (=> (and (= 0 x5288) (= x6917 x4723)) x4897) x6039))
(assert (x391 x8461))
(assert (= x2221 (and x8109 x2496)))
(assert (x2252 x5357))
(assert (x391 x1603))
(assert (= (and (not x4121) x2087) x4552))
(assert (x391 x6491))
(assert (= x7848 (x3649 (x7379 x7848))))
(assert (x8665 x5116 x2012 x940 x1726))
(assert (x391 x3828))
(assert (= x2734 (and x7994 (not x3949))))
(assert (x391 x2129))
(assert (x4191 x1726 (- x940 x4135)))
(assert (x391 x7161))
(assert (= (and (not x586) x6687) x5901))
(assert (x391 x7772))
(assert (x391 x451))
(assert (x391 x7057))
(assert (x6103 (- x7316 x9039)))
(assert (= (x3649 (x3789 x3076 1)) (+ 1 (x3649 x3076))))
(assert (= (=> (and (= x2251 (ite (< x5448 x8334) (not (= x818 0)) (> x8334 x5448))) (or (and (not x2251) (and (or (and (not x4520) (and (= (x700 x7395) x9094) (>= 1461501637330902918203684832716283019655932542975 x9094) (>= x9094 0) (= x9094 x247) (= x7556 (x2125 (+ 96 x7088))) (> 1461501637330902918203684832716283019655932542976 x9094) (= x5740 x7556) (= (x3789 x7867 1) x7395))) (and (and (= x3964 x5740) (= x3964 (x2125 (+ 96 x7088))) (= x247 x7448)) x4520)) (and (= x4520 (= 0 x2518)) (>= 1461501637330902918203684832716283019655932542975 x2518) (>= x2518 0) (< x2518 1461501637330902918203684832716283019655932542976) (= x2518 (x537 x7867))))) (and (and (and (= (> x3285 0) x8705) (>= 1461501637330902918203684832716283019655932542975 x2353) (>= x2353 0) (= (x7124 (- x818 x2353)) x3285) (= x2353 (x537 x7867)) (> 1461501637330902918203684832716283019655932542976 x2353)) (or (and (and (> 1461501637330902918203684832716283019655932542976 x6105) (= x818 x247) (= x6766 (x7158 (x7379 x818) x4654 0)) (= x6033 x5740) (= x6105 (x292 x6766)) (= (x2125 (+ 96 x7088)) x6033) (>= x6105 0) (>= 1461501637330902918203684832716283019655932542975 x6105)) x8705) (and (and (= x7108 x5740) (= x247 x818) (= (x2125 (+ 96 x7088)) x7108)) (not x8705)))) x2251))) x581) x8143))
(assert (x8665 x1256 x172 x8031 x5766))
(assert (x1052 x1252 x8035))
(assert (x6103 (- x7316 x5116)))
(assert (= (and x9221 x2696) x4812))
(assert (x6103 (- x8031 x172)))
(assert (x391 x1528))
(assert (= (and x4099 x7412) x8303))
(assert (x391 x489))
(assert (x391 x3190))
(assert (x4156 x4135 x2012 x8031 x5766))
(assert (= (x3649 (x5361 242558722)) 242558722))
(assert (x391 x3581))
(assert (x391 x4659))
(assert (= (=> (and (= x4026 x5288) (= x4723 x5646)) x3597) x4897))
(assert (x391 x4139))
(assert (x391 x5667))
(assert (x391 x3614))
(assert (x391 x4453))
(assert (= (and x7329 x8966) x8638))
(assert (=> (<= x7033 10000) (= (x7379 x7033) (x5361 x7033))))
(assert (x2252 x6440))
(assert (x4191 x172 (- x2780 x172)))
(assert (= (and x584 x6786) x7818))
(assert (= (and x5802 x7531) x5020))
(assert (= (x3649 (x3789 x1947 1)) (+ 1 (x3649 x1947))))
(assert (=> (<= x5512 10000) (= (x5361 x5512) (x7379 x5512))))
(assert (x8665 x2012 x5116 x9039 x530))
(assert (x2252 x2879))
(assert (= (x3649 (x3789 x7788 1)) (+ 1 (x3649 x7788))))
(assert (x391 x7859))
(assert (= (not (and (< x5148 1461501637330902918203684832716283019655932542976) (= x5148 (x9105 x6125)) (<= x5148 1461501637330902918203684832716283019655932542975) (<= 0 x5148) (= x6125 (x3789 x7975 1)) (= x7975 (x7158 (x7379 x4105) x7794 0)))) x7731))
(assert (x7060 x4135))
(assert (= (and (not x1392) x4335) x3459))
(assert (= (or x3057 x8306 x7280) x857))
(assert (= (or x6818 x4101) x1131))
(assert (x4156 x2780 x172 x3593 x3579))
(assert (x4191 x5116 (- x2012 x3579)))
(assert (= (or x4915 x5146) x8306))
(assert (x391 x8731))
(assert (x6103 (- x774 x8031)))
(assert (= (+ (x3649 x7976) 1) (x3649 (x3789 x7976 1))))
(assert (x6103 x3384))
(assert (= x2145 (and x8944 x8762)))
(assert (x2252 x818))
(assert (x8665 x2780 x172 x7316 x5552))
(assert (=> (>= 10000 x7848) (= (x5361 x7848) (x7379 x7848))))
(assert (x4191 x2012 (- x5116 x5390)))
(assert (= (and (not x5080) x8371) x1681))
(assert (x391 x7946))
(assert (= (x3649 (x3789 x7100 1)) (+ (x3649 x7100) 1)))
(assert (= (and x8643 x826) x8861))
(assert (x391 x3347))
(assert (x6103 (- x172 x940)))
(assert (x391 x5520))
(assert (= x219 (x3649 (x7379 x219))))
(assert (x391 x7915))
(assert (= x4039 (and x1392 x4335)))
(assert (= (and x7710 x612) x8723))
(assert (x2252 x5241))
(assert (= (and (not x7656) x2724) x5588))
(assert (x391 x9194))
(assert (and (x5662 x5800 1000000000000000000) (x6638 x5800 1000000000000000000) (=> (and (< 0 x5800) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x5800 1000000000000000000)) (- x5800 1000000000000000000)) (>= x5800 (* 1000000000000000000 (x4526 x5800 1000000000000000000))))) (x4068 x5800 1000000000000000000) (x797 x5800 1000000000000000000)))
(assert (x391 x7530))
(assert (x4156 x172 x1256 x490 x774))
(assert (x391 x2836))
(assert (= (+ 2 (x3649 x7143)) (x3649 (x3789 x7143 2))))
(assert (x391 x18))
(assert (=> (>= 10000 x5412) (= (x7379 x5412) (x5361 x5412))))
(assert (x8665 x5390 x530 x774 x490))
(assert (x391 x1169))
(assert (x391 x7050))
(assert (= (or x1622 x6602 x5306 x4132) x7155))
(assert (= x4651 (=> (and (= (= x8900 0) x5611) (>= x8900 0) (>= 1461501637330902918203684832716283019655932542975 x8900) (< x8900 1461501637330902918203684832716283019655932542976)) (and (=> (and (not x5611) (and (= x2542 (= 0 x2368)) (> 1461501637330902918203684832716283019655932542976 x8900) (= (x6887 (x7379 x8900)) x2368) (>= 1461501637330902918203684832716283019655932542975 x8900) (= x4928 (x2125 (+ x135 4))) (= x7110 (x2125 (+ x4928 32))) (<= 0 x8900) (= (x2125 (+ 32 x7110)) x1633))) (and (=> (and x2542 (= true x847)) x4020) (=> (and (not x2542) (> 4294967296 x2534)) x6252))) (=> x5611 x6252)))))
(assert (x8665 x172 x1256 x7316 x5552))
(assert (x6103 (- x5552 x940)))
(assert (x391 x7693))
(assert (x391 x6303))
(assert (x391 x1353))
(assert (x391 x948))
(assert (= (and (not x4419) x6944) x5043))
(assert (x391 x249))
(assert (= (and x4122 (not x6595)) x4980))
(assert (x391 x3166))
(assert (x4191 x5116 (- x2012 x2780)))
(assert (= (or x8232 x8911) x5170))
(assert (= (or x804 x9074) x2864))
(assert (x391 x8938))
(assert (= (and x8064 (not x6678)) x3353))
(assert (x391 x7221))
(assert (x391 x3733))
(assert (= x2101 (and x7220 (not x3203))))
(assert (x8665 x1726 x940 x2780 x172))
(assert (x8665 x5390 x530 x2012 x4135))
(assert (x391 x2693))
(assert (= x5661 (=> (= x7517 0) x5561)))
(assert (= x2521 (=> (= x4976 (= x7616 x6515)) (and (=> (and (not x4976) (= x7469 (> x7616 0))) (and (=> (and (and (= x6176 (x8373 x4130)) (= x4063 (x3789 x7401 1)) (= (x7158 (x7379 x2879) x8587 0) x4130) (> 1461501637330902918203684832716283019655932542976 x6717) (>= x6717 0) (= x7129 (x4727 x4063)) (>= 1461501637330902918203684832716283019655932542975 x6717) (>= 1461501637330902918203684832716283019655932542975 x6176) (> 1461501637330902918203684832716283019655932542976 x6176) (<= 0 x7129) (= (= x7129 0) x7767) (= x7401 (x3789 x4130 1)) (= (x7793 x7401) x6717) (<= 0 x6176) (<= x7129 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x7469) (and (=> (and (not x7767) (and (= (= x6176 0) x9047) (or (and (= x6301 (x3789 x8587 1)) x9047) (and (not x9047) (and (= x4124 (x3789 x4327 1)) (= (x7158 (x7379 x6176) x8587 0) x4327)))))) x5380) (=> x7767 x3854))) (=> (not x7469) x7501))) (=> x4976 x3172)))))
(assert (and (x3303 x736 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4253 x736 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x4077 x736 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x4526 x736 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x736)) (x5837 x736 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x391 x2955))
(assert (x8637 x3346))
(assert (x4191 x2012 (- x5116 x7316)))
(assert (x391 x4251))
(assert (x391 x5710))
(assert (= x6026 (and x607 (not x5))))
(assert (= (and x982 x3554) x8394))
(assert (x391 x5346))
(assert (x4191 x5390 (- x530 x172)))
(assert (x7060 x9039))
(assert (x391 x3713))
(assert (x391 x7433))
(assert (x391 x959))
(assert (x6103 x7525))
(assert (x391 x4615))
(assert (x4156 x940 x1726 x2780 x172))
(assert (= x7550 (=> (= (< 0 x115) x2842) (and (=> (and (and (= x3897 x18) (= x7287 x5777)) (not x2842)) x7066) (=> (and x2842 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8334) (= (= x7448 0) x8575) (<= 0 x8334))) (and (=> (and (and (= (x3789 x5526 2) x7278) (= x5526 (x7158 (x7379 x7448) x7907 0)) (= (= x4689 0) x7293) (= x4689 (x7755 x7278)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4689) (<= 0 x4689)) (not x8575)) (and (=> (not x7293) x2322) (=> (and x7293 (and (and (= x5614 (ite (> x8334 0) (not (= 0 x7670)) (< 0 x8334))) (< x7670 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x7670) (>= x7670 0) (= x4903 (x3789 x7907 1)) (= (x6213 x4903) x7670)) (or (and (and (= x7241 (x7755 x6747)) (>= x7241 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7241) (= (x3789 x1828 2) x6747) (= (not x1364) x2236) (= x1828 (x7158 (x7379 x7670) x7907 0)) (= x1364 (< x7241 x115))) x5614) (and (= x5614 x2236) (not x5614))))) x1173))) (=> x8575 x2322)))))))
(assert (x391 x8167))
(assert (= (x3649 (x3789 x6923 1)) (+ 1 (x3649 x6923))))
(assert (= (or x7188 x5019) x8413))
(assert (= 1038142104 (x3649 (x5361 1038142104))))
(assert (x8637 x7122))
(assert (= (=> (and (= x2011 x2933) (= x5667 x887) (= x616 x4428) (= x1841 x8753) (= x8790 x2932)) x6806) x3201))
(assert (= x9011 (and x6680 x4517)))
(assert (x391 x5010))
(assert (x391 x808))
(assert (x6103 (- x1256 x7316)))
(assert (x4191 x7316 (- x5552 x5116)))
(assert (= (and x7125 x8725) x1286))
(assert (= x6050 (and (not x4448) x5808)))
(assert (= (and x6759 x467) x7369))
(assert (x6103 (- x490 x1726)))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1256))
(assert (= x549 (and x5991 (not x3193))))
(assert (x391 x5280))
(assert (x391 x4047))
(assert (x391 x8980))
(assert (x391 x3793))
(assert (x391 x3314))
(assert (x391 x3825))
(assert (= x173 (x3649 (x7379 x173))))
(assert (= (x7379 2217467699) (x5361 2217467699)))
(assert (x391 x6784))
(assert (= x168 (and x1043 x8235)))
(assert (x391 x2877))
(assert (x391 x7292))
(assert (= (x3649 (x7379 x6916)) x6916))
(assert (x391 x5647))
(assert (x391 x3867))
(assert (= x8952 (x3649 (x7379 x8952))))
(assert (x2252 x6232))
(assert (= x8831 (and x3859 x7914)))
(assert (x6103 (- x7316 x3593)))
(assert (x391 x11))
(assert (x391 x9200))
(assert (x6103 (- x4135 x8031)))
(assert (x391 x3068))
(assert (= (and (not x1267) x5576) x9127))
(assert (= x1017 (and x1386 (not x4318))))
(assert (= x6441 (and x7128 (not x500))))
(assert (x391 x8093))
(assert (x391 x9250))
(assert (x391 x7247))
(assert (= (and (not x3107) x5422) x3537))
(assert (=> (<= x3254 10000) (= (x7379 x3254) (x5361 x3254))))
(assert (= (and x7414 x7302) x5457))
(assert (x4191 x8031 (- x5766 x9039)))
(assert (x391 x777))
(assert (x8665 x5766 x8031 x4135 x2012))
(assert (= (x3649 (x3789 x7338 1)) (+ 1 (x3649 x7338))))
(assert (x2252 x2072))
(assert (x391 x5856))
(assert (x391 x4679))
(assert (= (+ 1 (x3649 x5990)) (x3649 (x3789 x5990 1))))
(assert (= (or x918 x5577 x3243 x8548 x2902 x37) x1154))
(assert (x1052 x4752 x4050))
(assert (x391 x725))
(assert (= x594 (and x8575 x8572)))
(assert (= (and x6678 x8064) x3698))
(assert (= (x5361 2023533118) (x7379 2023533118)))
(assert (x4191 x5766 (- x8031 x4135)))
(assert (x8665 x172 x1256 x3593 x3579))
(assert (= x2886 (and (not x1859) x4533)))
(assert (x391 x768))
(assert (= (and x8897 (not x9136)) x7585))
(assert (x391 x4524))
(assert (x391 x4451))
(assert (= (or x513 x5649 x5706) x1278))
(assert (x391 x3302))
(assert (= (and x3853 (not x651)) x7549))
(assert (x391 x1156))
(assert (= x2985 (=> (= (= x1482 x460) x8298) (and (=> (and (= x9182 (> x1482 0)) (not x8298)) (and (=> (and x9182 (and (> 1461501637330902918203684832716283019655932542976 x6397) (>= 1461501637330902918203684832716283019655932542975 x6397) (= x6853 (x3789 x5794 1)) (= x5851 (x5951 x5794)) (>= 1461501637330902918203684832716283019655932542975 x5851) (= (x7158 (x7379 x7448) x5954 0) x5794) (= (x2125 (+ 96 x1734)) x1576) (> 1461501637330902918203684832716283019655932542976 x5851) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8497) (= (x3789 x6853 1) x6652) (= x6397 (x7383 x6853)) (= (= 0 x8497) x6764) (<= 0 x6397) (>= x8497 0) (<= 0 x5851) (= (x388 x6652) x8497))) (and (=> x6764 x2322) (=> (and (and (or (and (= x5540 (x3789 x5954 1)) x3499) (and (not x3499) (and (= (x3789 x6840 1) x8129) (= (x7158 (x7379 x5851) x5954 0) x6840)))) (= x3499 (= x5851 0))) (not x6764)) x7660))) (=> (and (not x9182) (and (= x1083 x7448) (= x1734 x8942))) x2843))) (=> (and (and (= x7448 x5822) (= x1734 x7574)) x8298) x5770)))))
(assert (x4191 x1726 (- x940 x9039)))
(assert (= x2743 (=> (and (= 0 x6158) (= x5984 x2835)) x1746)))
(assert (x8665 x530 x5390 x3579 x3593))
(assert (x4191 x2780 (- x172 x7316)))
(assert (x391 x2354))
(assert (x391 x910))
(assert (x391 x9030))
(assert (= (x3649 (x3789 x8431 1)) (+ 1 (x3649 x8431))))
(assert (x6103 (- x2780 x2012)))
(assert (and (x5662 x8148 1000000000000000000) (x6638 x8148 1000000000000000000) (=> (and (< 0 x8148) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x8148 1000000000000000000)) (- x8148 1000000000000000000)) (>= x8148 (* 1000000000000000000 (x4526 x8148 1000000000000000000))))) (x4068 x8148 1000000000000000000) (x797 x8148 1000000000000000000)))
(assert (= x5112 (and x2450 (not x8014))))
(assert (x391 x9232))
(assert (= (x3649 (x7379 x5225)) x5225))
(assert (x391 x6168))
(assert (x391 x4003))
(assert (x391 x1637))
(assert (x391 x1849))
(assert (x7060 x6381))
(assert (and (x5662 x8507 1000000000000000000) (x6638 x8507 1000000000000000000) (=> (and (< 0 x8507) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x8507 1000000000000000000)) (- x8507 1000000000000000000)) (>= x8507 (* 1000000000000000000 (x4526 x8507 1000000000000000000))))) (x4068 x8507 1000000000000000000) (x797 x8507 1000000000000000000)))
(assert (x391 x8679))
(assert (x391 x9142))
(assert (x4191 x5390 (- x530 x5552)))
(assert (= (and x6239 x3428) x6911))
(assert (= x6891 (or x5447 x5557)))
(assert (x391 x6984))
(assert (x391 x8900))
(assert (x391 x8663))
(assert (x391 x2775))
(assert (x391 x8442))
(assert (x6103 (- x3593 x5116)))
(assert (= (and x6536 x1985) x1128))
(assert (= (=> (and (or x3735 (not x3735)) (= x3735 (= 0 x5113))) x902) x796))
(assert (x1257 x41))
(assert (= (and (not x1398) x7290) x3022))
(assert (x2252 x8009))
(assert (= (+ 1 (x3649 x1135)) (x3649 (x3789 x1135 1))))
(assert (= (or x5112 x2793) x2473))
(assert (= (=> (and (= (= x2993 0) x7991) (or (and x7991 (= (x3789 x4654 2) x5589)) (and (not x7991) (= x6331 (x7158 (x7379 x2993) x4654 0))))) x3546) x4987))
(assert (x8665 x2012 x4135 x530 x9039))
(assert (x4191 x2012 (- x5116 x9039)))
(assert (= (and x7967 x2922) x96))
(assert (x391 x5696))
(assert (x6103 x589))
(assert (= (or (and x7215 (not x2920)) x8320) x9023))
(assert (x4156 x774 x490 x9039 x530))
(assert (x391 x1008))
(assert (=> (<= x8990 10000) (= (x5361 x8990) (x7379 x8990))))
(assert (x4156 x490 x774 x9039 x530))
(assert (= x7919 (=> (= x5202 (= 0 x7437)) (and (=> (and (not x5202) (and (= x8889 (x2125 (+ 31 x7247))) (= x2903 (x2237 115792089237316195423570985008687907853269984665640564039457584007913129639904 x8889)) (= x5841 (or (and (= (<= x7247 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x7247 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7247))) (= x7098 (x2125 (+ x5962 x2903))))) (and (=> (and x5841 (= true x847)) x4020) (=> (and (not x5841) (and (= x3124 (> x7535 0)) (= x4427 (x574 x5962)) (= (ite (> x4427 x7902) x7902 x4427) x7535))) (and (=> (and (and (= x3360 (x7124 (- x7848 x478))) (<= x478 1461501637330902918203684832716283019655932542975) (>= x478 0) (> 1461501637330902918203684832716283019655932542976 x478) (= (> x3360 0) x8140)) x3124) (and (=> (and x8140 (and (and (and (= x1858 x2800) (= x3584 x7535) (not (> 4 x7736)) (< 0 x8865) (= x8865 (x6887 (x7379 x5402))) (< x3181 1466279372) (= x7736 68) (= 157198259 x3181) (< x3181 599290589) (= (or (and (< x4621 64) (= (<= x4621 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x4621 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4986) (= x4841 4238056678808933066457772256406219440718756300954938350892797929791311314944) (not (= 117300739 x3181)) (= (x7124 (- x7736 4)) x4621)) x3330) (and (= x6491 (x2125 (+ x3380 32))) (= (x2125 (+ x7098 4)) x3380) (= (= x5402 x1767) x3330)))) (and (=> x4986 x8103) (=> (and (not x4986) (and (= x8718 (= x2800 x1858)) (= x1858 x3896))) (and (=> (not x8718) x8103) (=> (and x8718 (and (= x8417 32) (= (x7158 (x7379 x1858) x6583 0) x2789) (= x3584 x6838) (= x7830 1) (= x6583 (x7158 (x7379 x7032) (x5361 2) 0)))) x5650))))) (=> (and (not x8140) (and (> 1461501637330902918203684832716283019655932542976 x5229) (= (= x2637 0) x62) (>= x5229 0) (<= x5229 1461501637330902918203684832716283019655932542975) (= x6228 (x2125 (+ x7098 4))) (= (x6887 (x7379 x5229)) x2637))) (and (=> (and (and (= x7630 (= 0 x8400)) (< x2139 4294967296) (= 4 x9241) (= x8400 (x6887 (x7379 x7848)))) (not x62)) (and (=> (and (not x7630) (and (= (x5985 (x7379 x7848)) x3760) (= (x5985 (x7379 x7032)) x5716) (= (and (< (+ x7535 x3760) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x7535 x5716)) x2763))) (and (=> (and (and (= (x6413 (x7379 x7848)) x3153) (= x6744 (- x6615 x7535)) (= (x2125 (+ x3153 x7535)) x6327) (< (+ x7535 x3153) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x6615 (x5985 (x7379 x7032))) (= (= x8110 x7848) x5160)) x2763) (and (=> (and (and (= x1021 4) (> x6517 0) (= (= x7535 0) x8403) (= x6517 (x6887 (x7379 x8110))) (= x9241 x1021) (= x5435 35417553099779373699389112480655434059402432070290151981503827724506945814528)) x5160) (and (=> (and (and (= (x7158 (x7379 x7032) (x5361 6) 0) x1168) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5518) (= 1313710058 x1011) (< x1011 1856199391) (= (x333 x1168) x5518) (= (> x5518 x3699) x2830) (= x3699 (x333 x7544)) (not (= 1038142104 x1011)) (= (x7158 (x7379 x7032) (x5361 6) 0) x7544) (<= 0 x3699) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3699) (not (< x1021 4)) (not (> 988262939 x1011)) (<= 0 x5518) (not (= 989455977 x1011)) (not (= x1011 988262939)) (< x1011 2217467699)) x8403) (and (=> x2830 x6932) (=> (and (not x2830) (and (= x753 (x7124 (- x3699 x5518))) (= (> x3133 x7821) x770) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3133) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5518)) x7821) (>= x3133 0))) (and (=> x770 x6932) (=> (and (not x770) (and (= (x2125 (+ x5518 x3133)) x872) (< x5759 1461501637330902918203684832716283019655932542976) (<= 0 x5759) (= 128 x4174) (= x8440 (= x5402 x5759)) (<= x5759 1461501637330902918203684832716283019655932542975))) (and (=> (and (= x4640 (= x5759 x8110)) (not x8440)) (and (=> (and (and (not (< x4474 405663989)) (= x7032 x4822) (= x8110 x393) (= (x6887 (x7379 x8110)) x7505) (= x5518 x3311) (not (< x2575 4)) (= x4474 599290589) (= 100 x2575) (= 100 x2575) (not (= 547091486 x4474)) (= (x7124 (- x2575 4)) x8955) (= x1829 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> x7505 0) (not (= 405663989 x4474)) (> 988262939 x4474) (< x4474 2217467699) (= x277 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8955) (and (> 96 x8955) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8955) true))))) x4640) (and (=> x277 x5894) (=> (and (and (= x4822 x5074) (= (= x7032 x4822) x7170)) (not x277)) (and (=> (and (and (= (= x8110 x393) x2823) (= x393 x1760)) x7170) (and (=> (not x2823) x5894) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1249) (= (x1401 x1971) x1249) (<= 0 x1249) (= x8398 x3311) (= (< x1249 x5518) x3811) (= x1971 (x7158 (x7379 x4822) (x5361 5) 0))) x2823) (and (=> (and (not x3811) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2088) (= x6283 (< x2088 x3311)) (= (x1401 x1344) x2088) (= x1344 (x7158 (x7379 x4822) (x5361 5) 0)) (>= x2088 0))) (and (=> x6283 x5894) (=> (and (not x6283) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3314) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3311)) x5401) (= (x7158 (x7379 x393) (x5361 5) 0) x1645) (= x1939 (x7124 (- x2088 x3311))) (= (x7823 x1645) x3314) (<= 0 x3314) (= (> x3314 x5401) x3435))) (and (=> x3435 x5894) (=> (and (not x3435) (and (= x3662 1) (= (x2125 (+ x3311 x3314)) x8317) (= 32 x7314) (= x6558 1))) x9207))))) (=> x3811 x5894))))) (=> (not x7170) x5894))))) (=> (and (= (= x5049 x5759) x5921) (not x4640)) (and (=> (and (and (and x199 (and (= (x7124 (- x6784 4)) x6661) (< x3657 2217467699) (not (> 405663989 x3657)) (= x6784 100) (= 599290589 x3657) (= x8110 x1439) (not (= x3657 547091486)) (= x7032 x6879) (= x485 (x6887 (x7379 x4633))) (not (= 405663989 x3657)) (not (> 4 x6784)) (> x485 0) (> 988262939 x3657) (= x4302 x5518) (= 100 x6784) (= x5571 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (or (> x6661 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x6661) (= (<= x6661 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1977))) (= (= x5759 x4633) x199)) (not x5921)) (and (=> x1977 x8368) (=> (and (and (= x1932 (= x6879 x7032)) (= x6879 x7150)) (not x1977)) (and (=> (not x1932) x8368) (=> (and x1932 (and (= x1439 x5608) (= (= x8110 x1439) x1289))) (and (=> (and x1289 (and (= (> x5518 x8501) x2465) (<= x8501 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4154 (x7158 (x7379 x6879) (x5361 5) 0)) (= x8501 (x3526 x4154)) (= x4796 x4302) (<= 0 x8501))) (and (=> (and (not x2465) (and (= x8191 (x7158 (x7379 x6879) (x5361 5) 0)) (= x5166 (< x1207 x4302)) (<= 0 x1207) (<= x1207 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1207 (x3526 x8191)))) (and (=> x5166 x8368) (=> (and (and (>= x4898 0) (= x4596 (x7124 (- x1207 x4302))) (= (< x6242 x4898) x3609) (<= x4898 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1763 (x7158 (x7379 x1439) (x5361 5) 0)) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4302)) x6242) (= x4898 (x7587 x1763))) (not x5166)) (and (=> x3609 x8368) (=> (and (not x3609) (and (= 32 x6777) (= x6704 (x2125 (+ x4302 x4898))) (= 1 x2291) (= 1 x7127))) x2936))))) (=> x2465 x8368))) (=> (not x1289) x8368))))))) (=> (and (and (not (= 405663989 x8116)) (= 599290589 x8116) (= x3148 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> 988262939 x8116) (= x2523 x7032) (= x5518 x6675) (= x8732 (or (and (> 96 x6724) (= true (<= x6724 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6724))) (< x8116 2217467699) (= x6724 (x7124 (- x2202 4))) (= 100 x2202) (= x2202 100) (not (> 405663989 x8116)) (< 0 x3559) (not (> 4 x2202)) (= x3559 (x6887 (x7379 x5049))) (not (= 547091486 x8116)) (= x8110 x9184)) x5921) (and (=> x8732 x4481) (=> (and (and (= (= x7032 x2523) x3773) (= x2005 x2523)) (not x8732)) (and (=> (and (and (= x5729 (= x9184 x8110)) (= x9184 x2643)) x3773) (and (=> (not x5729) x4481) (=> (and x5729 (and (= x4400 (x7158 (x7379 x2523) (x5361 5) 0)) (<= 0 x27) (= (> x5518 x27) x330) (<= x27 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x27 (x1833 x4400)) (= x6675 x3371))) (and (=> x330 x4481) (=> (and (and (<= 0 x2896) (= (x7158 (x7379 x2523) (x5361 5) 0) x885) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2896) (= (x1833 x885) x2896) (= x3631 (< x2896 x6675))) (not x330)) (and (=> (and (not x3631) (and (= x4121 (< x1922 x1976)) (= x1922 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6675))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1976) (= (x7158 (x7379 x9184) (x5361 5) 0) x184) (= x1976 (x868 x184)) (= (x7124 (- x2896 x6675)) x7905) (>= x1976 0))) (and (=> x4121 x4481) (=> (and (and (= x143 32) (= (x2125 (+ x1976 x6675)) x2974) (= 1 x2742) (= 1 x4238)) (not x4121)) x4873))) (=> x3631 x4481))))))) (=> (not x3773) x4481))))))))) (=> (and x8440 (and (= (or (> x4181 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4181)) (> 96 x4181))) x769) (> 1466279372 x6938) (not (< x6938 599290589)) (= x6938 599290589) (= (x7124 (- x5136 4)) x4181) (< 0 x6808) (= x2137 x5518) (= 100 x5136) (= x7033 x8110) (= x5136 100) (not (> 4 x5136)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x9272) (= x4789 x7032) (= (x6887 (x7379 x5402)) x6808))) (and (=> x769 x5569) (=> (and (and (= (= x7032 x4789) x5292) (= x4789 x3212)) (not x769)) (and (=> (not x5292) x5569) (=> (and (and (= x1904 (= x7033 x8110)) (= x7033 x6251)) x5292) (and (=> (and x1904 (and (= (> x5518 x1282) x4472) (= (x7158 (x7379 x4789) (x5361 1) 0) x6309) (= x1892 x2137) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1282) (<= 0 x1282) (= x1282 (x4475 x6309)))) (and (=> (and (not x4472) (= (> x2137 x1282) x5733)) (and (=> x5733 x5569) (=> (and (not x5733) (and (= x3447 (x7158 (x7379 x4789) (x5361 1) 0)) (= (x7124 (- x1282 x2137)) x8069) (= x7734 (x7158 (x7379 x7033) (x5361 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6362) (= x7026 (< x6969 x6362)) (>= x6362 0) (= (x6306 x7734) x6362) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2137)) x6969))) (and (=> (and (not x7026) (and (= x5058 (< x8486 x6362)) (= x8486 (x2125 (+ x6362 x2137))))) (and (=> x5058 x5569) (=> (and (and (= (< x1762 x2137) x3147) (= (x7158 (x7379 x8110) x3309 0) x8664) (= (x2392 x8664) x1762) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1762) (<= 0 x1762) (= (x7158 (x7379 x4789) (x5361 2) 0) x3309)) (not x5058)) (and (=> (and (= x2292 (< x1762 x2137)) (not x3147)) (and (=> x2292 x5569) (=> (and (and (= (x7124 (- x1762 x2137)) x4985) (= x4634 32) (= x7031 1)) (not x2292)) x8547))) (=> x3147 x5569))))) (=> x7026 x5569))))) (=> x4472 x5569))) (=> (not x1904) x5569))))))))))))) (=> (not x8403) x6932))) (=> (and (not x5160) (= x2065 (= x5049 x7848))) (and (=> (and (and (= x3922 x9241) (= 4 x3922) (= (= 0 x7535) x8874) (= (x6887 (x7379 x5049)) x321) (< 0 x321) (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x8697)) x2065) (and (=> (and (and (<= x8219 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4912 0) (< x1049 2217467699) (= (< x8219 x4912) x3505) (= (x8441 x4079) x8219) (not (< x3922 4)) (= x1049 1313710058) (not (= 988262939 x1049)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4912) (= x4079 (x7158 (x7379 x7032) (x5361 6) 0)) (= x1665 (x7158 (x7379 x7032) (x5361 6) 0)) (>= x8219 0) (= (x8441 x1665) x4912) (not (> 988262939 x1049)) (< x1049 1856199391) (not (= x1049 1038142104)) (not (= x1049 989455977))) x8874) (and (=> (and (and (= (x7124 (- x8219 x4912)) x1888) (>= x8790 0) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4912)) x1202) (= (> x8790 x1202) x2586) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8790)) (not x3505)) (and (=> x2586 x2372) (=> (and (not x2586) (and (= x2463 (x2125 (+ x4912 x8790))) (= 128 x2840) (>= x3921 0) (= (= x3921 x5402) x8688) (< x3921 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x3921))) (and (=> (and (= (= x3921 x8110) x5184) (not x8688)) (and (=> (and (= (= x5049 x3921) x5544) (not x5184)) (and (=> (and (not x5544) (and (= (= x4633 x3921) x7576) (and (and (= x6635 (or (> x6822 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x6822 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x6822 96)))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x290) (not (= x6512 405663989)) (= x5049 x7944) (not (< x5898 4)) (not (< x6512 405663989)) (= x6822 (x7124 (- x5898 4))) (not (= x6512 547091486)) (< 0 x2664) (> 2217467699 x6512) (= 599290589 x6512) (= (x6887 (x7379 x4633)) x2664) (> 988262939 x6512) (= x5898 100) (= x4912 x909) (= x7032 x8808) (= x5898 100)) x7576))) (and (=> x6635 x2254) (=> (and (and (= (= x7032 x8808) x6646) (= x598 x8808)) (not x6635)) (and (=> (not x6646) x2254) (=> (and (and (= x7944 x9024) (= (= x7944 x5049) x7282)) x6646) (and (=> (and x7282 (and (= x2761 (x7158 (x7379 x8808) (x5361 5) 0)) (= x7476 (< x12 x4912)) (= x628 x909) (>= x12 0) (= (x3526 x2761) x12) (<= x12 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x7476 x2254) (=> (and (not x7476) (and (= x4610 (x3526 x4352)) (= (> x909 x4610) x437) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4610) (>= x4610 0) (= x4352 (x7158 (x7379 x8808) (x5361 5) 0)))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4678) (= (x7124 (- x4610 x909)) x7982) (= (x8147 x3675) x4678) (= x2558 (> x4678 x2032)) (>= x4678 0) (= x2032 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x909))) (= (x7158 (x7379 x7944) (x5361 5) 0) x3675)) (not x437)) (and (=> (and (not x2558) (and (= 1 x8588) (= x4857 32) (= x4252 1) (= (x2125 (+ x4678 x909)) x1388))) x6619) (=> x2558 x2254))) (=> x437 x2254))))) (=> (not x7282) x2254))))))) (=> (and (and (< 0 x3741) (not (> 4 x5490)) (= x4698 x5049) (= 100 x5490) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3930) (> 988262939 x8104) (= x7814 x7032) (= x6478 x4912) (not (= x8104 547091486)) (= x1671 (or (> x9226 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x9226) (= true (<= x9226 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (< x8104 405663989)) (= x3741 (x6887 (x7379 x5049))) (= x8104 599290589) (not (= 405663989 x8104)) (= (x7124 (- x5490 4)) x9226) (= 100 x5490) (> 2217467699 x8104)) x5544) (and (=> (and (and (= x706 x7814) (= (= x7814 x7032) x1415)) (not x1671)) (and (=> (not x1415) x3709) (=> (and (and (= x4698 x7915) (= x3615 (= x5049 x4698))) x1415) (and (=> (not x3615) x3709) (=> (and x3615 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8067) (= x1775 x6478) (<= 0 x8067) (= (x1833 x2040) x8067) (= x2040 (x7158 (x7379 x7814) (x5361 5) 0)) (= (< x8067 x4912) x9274))) (and (=> (and (not x9274) (and (>= x8352 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8352) (= x1639 (< x8352 x6478)) (= (x1833 x6143) x8352) (= (x7158 (x7379 x7814) (x5361 5) 0) x6143))) (and (=> (and (not x1639) (and (= x709 (x7158 (x7379 x4698) (x5361 5) 0)) (= x2208 (< x5442 x488)) (= (x957 x709) x488) (>= x488 0) (= x8954 (x7124 (- x8352 x6478))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x488) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6478)) x5442))) (and (=> (and (not x2208) (and (= x4065 (x2125 (+ x6478 x488))) (= 1 x3729) (= 1 x9175) (= x4056 32))) x2104) (=> x2208 x3709))) (=> x1639 x3709))) (=> x9274 x3709))))))) (=> x1671 x3709))))) (=> (and (and (= x6953 x4912) (= x8905 100) (> 2217467699 x9088) (= x5049 x6391) (= (x6887 (x7379 x8110)) x4292) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1328) (= x8089 (x7124 (- x8905 4))) (= x4535 (or (and (> 96 x8089) (= (<= x8089 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8089))) (not (= x9088 405663989)) (= x2096 x7032) (not (> 4 x8905)) (not (= 547091486 x9088)) (not (> 405663989 x9088)) (= 599290589 x9088) (= x8905 100) (> 988262939 x9088) (> x4292 0)) x5184) (and (=> x4535 x591) (=> (and (not x4535) (and (= (= x7032 x2096) x1948) (= x2096 x6272))) (and (=> (and (and (= (= x6391 x5049) x4221) (= x9170 x6391)) x1948) (and (=> (and x4221 (and (= x6953 x6658) (>= x7791 0) (= x7791 (x1401 x6494)) (= x6604 (> x4912 x7791)) (= (x7158 (x7379 x2096) (x5361 5) 0) x6494) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7791))) (and (=> (and (not x6604) (and (<= x7466 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x7466) (= x8876 (< x7466 x6953)) (= (x1401 x9038) x7466) (= (x7158 (x7379 x2096) (x5361 5) 0) x9038))) (and (=> (and (and (= (x7158 (x7379 x6391) (x5361 5) 0) x6677) (= x9063 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6953))) (= (x1015 x6677) x6326) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6326) (= x7000 (> x6326 x9063)) (>= x6326 0) (= (x7124 (- x7466 x6953)) x7063)) (not x8876)) (and (=> x7000 x591) (=> (and (and (= x2963 1) (= x2446 (x2125 (+ x6953 x6326))) (= x8565 32) (= x5234 1)) (not x7000)) x8950))) (=> x8876 x591))) (=> x6604 x591))) (=> (not x4221) x591))) (=> (not x1948) x591))))))) (=> (and (and (= x4211 (x7124 (- x6547 4))) (< x9048 1466279372) (= 599290589 x9048) (> x2878 0) (= x6547 100) (= x4912 x8151) (= x5049 x6809) (= x4572 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4211) true) (< x4211 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4211))) (not (> 4 x6547)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x9231) (= x2878 (x6887 (x7379 x5402))) (= x7032 x8530) (not (< x9048 599290589)) (= x6547 100)) x8688) (and (=> (and (not x4572) (and (= x6451 (= x8530 x7032)) (= x7876 x8530))) (and (=> (and (and (= x6809 x1050) (= x3776 (= x5049 x6809))) x6451) (and (=> (not x3776) x9025) (=> (and x3776 (and (= (x4475 x7666) x8891) (<= x8891 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x8891 0) (= (x7158 (x7379 x8530) (x5361 1) 0) x7666) (= x8151 x8993) (= (< x8891 x4912) x1742))) (and (=> (and (not x1742) (= x4044 (< x8891 x8151))) (and (=> x4044 x9025) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5845) (>= x5845 0) (= (x7158 (x7379 x6809) (x5361 1) 0) x7766) (= (x4613 x7766) x5845) (= x6570 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8151))) (= (x7158 (x7379 x8530) (x5361 1) 0) x7542) (= x7652 (> x5845 x6570)) (= x837 (x7124 (- x8891 x8151)))) (not x4044)) (and (=> x7652 x9025) (=> (and (and (= x4045 (< x6003 x5845)) (= (x2125 (+ x5845 x8151)) x6003)) (not x7652)) (and (=> x4045 x9025) (=> (and (and (= x2156 (> x8151 x4233)) (= (x2392 x2525) x4233) (= (x7158 (x7379 x5049) x8648 0) x2525) (<= x4233 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4233) (= (x7158 (x7379 x8530) (x5361 2) 0) x8648)) (not x4045)) (and (=> (and (= x7081 (> x8151 x4233)) (not x2156)) (and (=> (and (and (= x5547 1) (= 32 x3825) (= (x7124 (- x4233 x8151)) x5343)) (not x7081)) x351) (=> x7081 x9025))) (=> x2156 x9025))))))))) (=> x1742 x9025))))) (=> (not x6451) x9025))) (=> x4572 x9025))))))) (=> x3505 x2372))) (=> (not x8874) x2372))) (=> (and (and (= (= x7848 x4633) x4542) (and x4542 (and (= (= x7535 0) x7346) (= x3198 35417553099779373699389112480655434059402432070290151981503827724506945814528) (= x1769 x9241) (= x2921 (x6887 (x7379 x4633))) (= x1769 4) (< 0 x2921)))) (not x2065)) (and (=> (not x7346) x5661) (=> (and x7346 (and (not (< x311 988262939)) (not (= 988262939 x311)) (= x311 1313710058) (> 2217467699 x311) (<= 0 x1883) (= (x1698 x3189) x8919) (not (= 1038142104 x311)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8919) (<= 0 x8919) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1883) (= x5660 (x7158 (x7379 x7032) (x5361 6) 0)) (> 1856199391 x311) (not (= x311 989455977)) (= (x7158 (x7379 x7032) (x5361 6) 0) x3189) (= x3827 (> x8919 x1883)) (= (x1698 x5660) x1883) (not (> 4 x1769)))) (and (=> x3827 x5661) (=> (and (not x3827) (and (= x3167 (x7124 (- x1883 x8919))) (= (< x2467 x1841) x1501) (<= 0 x1841) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8919)) x2467) (<= x1841 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x1501) (and (>= 1461501637330902918203684832716283019655932542975 x1062) (>= x1062 0) (< x1062 1461501637330902918203684832716283019655932542976) (= (= x1062 x5402) x8967) (= x5127 (x2125 (+ x8919 x1841))) (= x910 128))) (and (=> (and (not x8967) (= (= x8110 x1062) x4576)) (and (=> (and (= (= x5049 x1062) x8275) (not x4576)) (and (=> (and (and (= x2774 (= x1062 x4633)) (and x2774 (and (< x4884 2217467699) (not (< x4884 405663989)) (= x6713 x8919) (< 0 x6111) (= x6111 (x6887 (x7379 x4633))) (= x4884 599290589) (= x724 x4633) (not (> 4 x2132)) (not (= x4884 405663989)) (= x7032 x4384) (= 100 x2132) (not (= 547091486 x4884)) (= (or (and (> 96 x6312) (= (<= x6312 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x6312 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1387) (= x2132 100) (< x4884 988262939) (= x9107 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x6312 (x7124 (- x2132 4)))))) (not x8275)) (and (=> x1387 x8468) (=> (and (not x1387) (and (= (= x4384 x7032) x4091) (= x4384 x8032))) (and (=> (and (and (= x5501 (= x724 x4633)) (= x724 x4213)) x4091) (and (=> (and (and (= x3523 (< x1007 x8919)) (<= x1007 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x6713 x286) (= x1007 (x3526 x2954)) (= x2954 (x7158 (x7379 x4384) (x5361 5) 0)) (<= 0 x1007)) x5501) (and (=> x3523 x8468) (=> (and (not x3523) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4018) (= x4018 (x3526 x7503)) (<= 0 x4018) (= x8655 (< x4018 x6713)) (= x7503 (x7158 (x7379 x4384) (x5361 5) 0)))) (and (=> x8655 x8468) (=> (and (not x8655) (and (= x1110 (x7124 (- x4018 x6713))) (= (x7158 (x7379 x724) (x5361 5) 0) x2306) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6713)) x9064) (= (< x9064 x5340) x4676) (<= 0 x5340) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5340) (= (x7103 x2306) x5340))) (and (=> (and (not x4676) (and (= x4361 1) (= 1 x2531) (= 32 x1453) (= x2331 (x2125 (+ x5340 x6713))))) x8380) (=> x4676 x8468))))))) (=> (not x5501) x8468))) (=> (not x4091) x8468))))) (=> (and x8275 (and (= x7498 x7032) (= x2299 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= x2277 405663989)) (not (> 405663989 x2277)) (= (x6887 (x7379 x5049)) x2550) (> 2217467699 x2277) (= x3983 100) (not (> 4 x3983)) (= x3983 100) (< 0 x2550) (= x2277 599290589) (< x2277 988262939) (= x8919 x4588) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x9212) (and (= true (<= x9212 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x9212))) x8999) (= x9212 (x7124 (- x3983 4))) (not (= x2277 547091486)) (= x4633 x2854))) (and (=> (and (and (= x4981 x7498) (= (= x7032 x7498) x7085)) (not x8999)) (and (=> (and (and (= x2854 x4399) (= (= x4633 x2854) x1990)) x7085) (and (=> (not x1990) x8454) (=> (and (and (= x253 x4588) (= (< x104 x8919) x3405) (<= x104 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1287 (x7158 (x7379 x7498) (x5361 5) 0)) (>= x104 0) (= (x1833 x1287) x104)) x1990) (and (=> x3405 x8454) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x337) (<= 0 x337) (= (> x4588 x337) x7222) (= x6830 (x7158 (x7379 x7498) (x5361 5) 0)) (= x337 (x1833 x6830))) (not x3405)) (and (=> x7222 x8454) (=> (and (and (= (x7158 (x7379 x2854) (x5361 5) 0) x829) (= x6374 (< x928 x8871)) (<= x8871 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8871 (x6502 x829)) (<= 0 x8871) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4588)) x928) (= x3180 (x7124 (- x337 x4588)))) (not x7222)) (and (=> (and (not x6374) (and (= 32 x7205) (= x1335 (x2125 (+ x8871 x4588))) (= 1 x923) (= 1 x3119))) x3020) (=> x6374 x8454))))))))) (=> (not x7085) x8454))) (=> x8999 x8454))))) (=> (and (and (> 2217467699 x6069) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4270)) (< x4270 96)) (> x4270 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x8013) (= x4633 x2514) (= x9005 (x6887 (x7379 x8110))) (< 0 x9005) (= 599290589 x6069) (not (> 405663989 x6069)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x8131) (= x405 x7032) (not (= x6069 547091486)) (not (= 405663989 x6069)) (< x6069 988262939) (= (x7124 (- x124 4)) x4270) (= x124 100) (not (< x124 4)) (= x124 100) (= x8919 x996)) x4576) (and (=> (and (not x8013) (and (= (= x7032 x405) x8159) (= x4142 x405))) (and (=> (and (and (= x2514 x7497) (= x5783 (= x4633 x2514))) x8159) (and (=> (not x5783) x2545) (=> (and x5783 (and (>= x7422 0) (= x7422 (x1401 x5293)) (= x4810 x996) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7422) (= x7056 (< x7422 x8919)) (= x5293 (x7158 (x7379 x405) (x5361 5) 0)))) (and (=> (and (and (= x9061 (< x3796 x996)) (<= 0 x3796) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3796) (= (x1401 x8834) x3796) (= x8834 (x7158 (x7379 x405) (x5361 5) 0))) (not x7056)) (and (=> (and (not x9061) (and (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x996)) x1463) (<= x4086 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4086 0) (= (x5041 x3025) x4086) (= x841 (> x4086 x1463)) (= (x7158 (x7379 x2514) (x5361 5) 0) x3025) (= (x7124 (- x3796 x996)) x6302))) (and (=> (and (not x841) (and (= 32 x7030) (= 1 x648) (= (x2125 (+ x996 x4086)) x2150) (= x7027 1))) x1473) (=> x841 x2545))) (=> x9061 x2545))) (=> x7056 x2545))))) (=> (not x8159) x2545))) (=> x8013 x2545))))) (=> (and (and (= x6067 x7032) (= x8919 x398) (= (x6887 (x7379 x5402)) x6657) (= 100 x8925) (not (> 4 x8925)) (not (> 599290589 x3851)) (= x8925 100) (= (x7124 (- x8925 4)) x8510) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x654) (> 1466279372 x3851) (= x3254 x4633) (< 0 x6657) (= x3851 599290589) (= x6009 (or (> x8510 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x8510 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x8510 96))))) x8967) (and (=> (and (not x6009) (and (= x46 (= x7032 x6067)) (= x6067 x342))) (and (=> (not x46) x3015) (=> (and x46 (and (= x4003 x3254) (= (= x3254 x4633) x8193))) (and (=> (and (and (= x8494 (> x8919 x8421)) (>= x8421 0) (= x398 x5520) (= (x4475 x7651) x8421) (= x7651 (x7158 (x7379 x6067) (x5361 1) 0)) (<= x8421 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x8193) (and (=> (and (= (< x8421 x398) x5971) (not x8494)) (and (=> (and (not x5971) (and (= (< x6073 x3623) x1309) (>= x3623 0) (= (x7158 (x7379 x3254) (x5361 1) 0) x5209) (= x6073 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x398))) (<= x3623 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7124 (- x8421 x398)) x7350) (= x3623 (x5063 x5209)) (= x5318 (x7158 (x7379 x6067) (x5361 1) 0)))) (and (=> x1309 x3015) (=> (and (not x1309) (and (= x6855 (> x3623 x6537)) (= (x2125 (+ x3623 x398)) x6537))) (and (=> (and (and (= x7860 (x2392 x5615)) (>= x7860 0) (= (x7158 (x7379 x6067) (x5361 2) 0) x4254) (<= x7860 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7158 (x7379 x4633) x4254 0) x5615) (= (> x398 x7860) x8377)) (not x6855)) (and (=> x8377 x3015) (=> (and (= x2297 (< x7860 x398)) (not x8377)) (and (=> (and (not x2297) (and (= 32 x1944) (= x4907 1) (= (x7124 (- x7860 x398)) x3659))) x4037) (=> x2297 x3015))))) (=> x6855 x3015))))) (=> x5971 x3015))) (=> x8494 x3015))) (=> (not x8193) x3015))))) (=> x6009 x3015))))) (=> x1501 x5661))))))))))) (=> (and (= x5154 0) (not x2763)) x2579))) (=> (and x7630 (= true x847)) x4020))) (=> (and (= true x847) x62) x4020))))) (=> (not x3124) x6566))))) (=> x5202 x2322)))))
(assert (= x985 (x3649 (x7379 x985))))
(assert (= x7655 (or x8758 x1682)))
(assert (= x8622 x2322))
(assert (x8665 x530 x5390 x490 x774))
(assert (= x4519 (and (=> (and (not x1106) (= x5802 x1106)) x396) (=> (and (= (< x3967 x6501) x751) x1106) (and (=> x751 x55) (=> (and (not x751) (and (= (< x420 x230) x5802) (= (x7124 (- x3967 x6501)) x420))) x396))))))
(assert (x391 x2800))
(assert (= (or x2309 x4495) x4122))
(assert (x391 x6471))
(assert (= (or x2101 x8657) x8062))
(assert (= x9188 (and x2393 x471)))
(assert (x4191 x530 (- x9039 x172)))
(assert (= (=> (and (or x2133 (not x2133)) (= (= x6525 0) x2133)) x7727) x5451))
(assert (x391 x7336))
(assert (= x8492 (and x8430 x5294)))
(assert (= (x3649 (x3789 x4337 2)) (+ 2 (x3649 x4337))))
(assert (x4156 x530 x5390 x1726 x940))
(assert (= x843 (or x2556 x2741)))
(assert (= x2692 (or x5736 x7557 x4923 x7153 x7479 x4397)))
(assert (= x6002 (or x1067 x4416 x2427)))
(assert (=> (<= x1384 10000) (= (x7379 x1384) (x5361 x1384))))
(assert (x391 x6598))
(assert (x391 x6006))
(assert (= x4437 (or x3441 x4476)))
(assert (= x6330 (=> (and (= x1621 x5918) (= x4659 x5891) (= x2443 x1481) (= x5689 x1935) (= x7863 x3123)) x1079)))
(assert (x4191 x490 (- x774 x1726)))
(assert (x391 x3920))
(assert (= x4425 (and (=> (and (and (= x6401 x3808) (= x1935 x3707) (= x3068 x1368)) (not x7038)) x5627) (=> (and x7038 (and (= (x7158 (x7379 x5308) x5252 0) x1158) (= x7122 (ite (not x3708) 1 0)) (= (ite (< x139 x530) 1 0) x3805) (= (= 0 x9039) x3708) (= x2660 (x2237 x7122 x3805)) (= (x7158 (x7379 x7848) (x5361 158) 0) x5252) (= x4972 (= 0 x2660)) (>= x9039 0) (= (x1461 x1158) x9039) (= x139 (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9039)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9039))) (and (=> (and (and (= (x5353 (x7029 x9039 x530)) x3070) (= (< x1935 x6132) x9075) (= x6132 (x4526 x3070 1000000000000000000))) x4972) (and (=> (and x9075 (and (= (< 115792089237316195423570985008687907853269984665640564039457 x1935) x7552) (= x3489 (= 0 (ite x7552 1 0))))) (and (=> (and x3489 (and (= (ite (not x2089) 1 0) x6741) (= (x2237 x6741 x2722) x6066) (= x3409 (= x6066 0)) (= x2089 (= 0 x151)) (= (x5353 (* x1935 1000000000000000000)) x151) (= (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x151) x2602) (= (ite (> 1000000000000000000 x2602) 1 0) x2722))) (and (=> (and x3409 (and (= (> x4860 0) x7281) (= x649 (x5353 (* x151 1000000000000000000))))) (and (=> (and x7281 (and (= (x4526 x649 x4860) x8148) (= (x3663 x3005) x7049) (= (x3789 x1158 1) x3005) (= (< x7152 x7049) x4645) (= x7152 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3389))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7049) (<= 0 x7049) (= x3389 (x4526 x8148 1000000000000000000)))) (and (=> (and (and (= (< 115792089237316195423570985008687907853269984665640564039457 x1935) x3978) (= (x2125 (+ x7049 x3389)) x2714) (= x9181 (= 0 (ite x3978 1 0)))) (not x4645)) (and (=> (not x9181) x2888) (=> (and (and (= x403 (ite (not x1521) 1 0)) (= x8610 (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9060)) (= x9060 (x5353 (* 1000000000000000000 x1935))) (= x2491 (ite (> 1000000000000000000 x8610) 1 0)) (= x1521 (= 0 x9060)) (= x7510 (x2237 x403 x2491)) (= x3156 (= 0 x7510))) x9181) (and (=> (and (and (= x2810 (x5353 (* x9060 1000000000000000000))) (= (< 0 x530) x2003)) x3156) (and (=> (and x2003 (and (= (x4526 x5800 1000000000000000000) x1375) (<= x1365 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1365 0) (= x5800 (x4526 x2810 x530)) (= x4062 (> x1375 x1365)) (= x1365 (x1461 x1158)))) (and (=> x4062 x4296) (=> (and (and (= 0 x7144) (= x2510 x9191) (= x2714 x647) (= (x7124 (- x1365 x1375)) x9191)) (not x4062)) x2976))) (=> (not x2003) x944))) (=> (not x3156) x3779))))) (=> x4645 x6630))) (=> (not x7281) x8426))) (=> (not x3409) x9255))) (=> (not x3489) x4694))) (=> (and (not x9075) (and (= x8578 (= 0 (ite x2831 1 0))) (= (> x6132 115792089237316195423570985008687907853269984665640564039457) x2831))) (and (=> (not x8578) x4807) (=> (and x8578 (and (= (ite (not x8418) 1 0) x4840) (= (= 0 x3143) x6867) (= (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7286) x4385) (= x8418 (= x7286 0)) (= x7286 (x5353 (* x6132 1000000000000000000))) (= x3143 (x2237 x4840 x3556)) (= x3556 (ite (> 1000000000000000000 x4385) 1 0)))) (and (=> (and (and (= x2517 (> x4860 0)) (= (x5353 (* 1000000000000000000 x7286)) x8524)) x6867) (and (=> (and x2517 (and (= x7370 (x4526 x6381 1000000000000000000)) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7370)) x2206) (= (x4526 x8524 x4860) x6381) (= x9208 (x3663 x1523)) (>= x9208 0) (= x1523 (x3789 x1158 1)) (<= x9208 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4109 (> x9208 x2206)))) (and (=> (and (and (= x1408 (> x6132 x1935)) (= (x2125 (+ x9208 x7370)) x6205)) (not x4109)) (and (=> x1408 x4824) (=> (and (not x1408) (and (= x3027 (x7124 (- x1935 x6132))) (= x3027 x7144) (= x6205 x647) (= 0 x2510))) x2976))) (=> x4109 x3037))) (=> (not x2517) x3152))) (=> (not x6867) x1605))))))) (=> (not x4972) x6387))))))
(assert (x391 x551))
(assert (= x6756 (or x7929 x7885)))
(assert (x391 x872))
(assert (= (and x8503 x6134) x8311))
(assert (x8665 x5766 x8031 x774 x490))
(assert (= (x3649 (x7379 x624)) x624))
(assert (= (x3649 (x7379 x1487)) x1487))
(assert (x391 x9159))
(assert (= (and x5263 x1654) x3175))
(assert (x4191 x2780 x172))
(assert (x391 x3181))
(assert (x391 x27))
(assert (x8665 x940 x1726 x1256 x172))
(assert (x8665 x8031 x5766 x9039 x530))
(assert (= x4240 (or (and x1099 (not x6965)) (and x4641 x3841))))
(assert (= x7513 (and x2349 x5427)))
(assert (= x4758 (and x2142 x6900)))
(assert (x391 x1206))
(assert (x391 x7689))
(assert (= x2119 (and x7797 (not x2763))))
(assert (x391 x6755))
(assert (x391 x3469))
(assert (x8665 x1256 x172 x5116 x2012))
(assert (x391 x7396))
(assert (= (and x4616 (not x9213)) x5987))
(assert (x8665 x530 x9039 x774 x490))
(assert (x391 x8774))
(assert (x8665 x2012 x4135 x1726 x940))
(assert (x391 x4201))
(assert (= (and x5642 x8886) x4231))
(assert (= (=> (and (or (and (not x2229) (and (= (ite x903 1 0) x1515) (= (x7158 (x7379 x7848) (x5361 159) 0) x4846) (= (x4166 x8271) x9163) (<= x9163 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8271 (x7158 (x7379 x7448) x4846 0)) (>= x9163 0) (= x903 (= x9163 0)))) (and x2229 (= x3241 x1515))) (= (= 0 x3241) x2229)) x3550) x1396))
(assert (x391 x9184))
(assert (x4156 x3593 x3579 x1256 x172))
(assert (x391 x8115))
(assert (= (and x2984 x8275) x998))
(assert (= x3089 (and (not x4151) x900)))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5680))
(assert (and (x3303 x4804 32) (x4253 x4804 32) (=> (< 0 32) (= (+ (x4077 x4804 32) (* (x4526 x4804 32) 32)) x4804)) (x5837 x4804 32)))
(assert (x391 x9076))
(assert (x2252 x2945))
(assert (=> (<= x1735 10000) (= (x7379 x1735) (x5361 x1735))))
(assert (x7060 x2750))
(assert (x391 x2921))
(assert (x6103 (- x2012 x530)))
(assert (=> (<= x405 10000) (= (x7379 x405) (x5361 x405))))
(assert (x391 x411))
(assert (x8637 x2491))
(assert (= (and (not x7217) x269) x3674))
(assert (x391 x4959))
(assert (x391 x1010))
(assert (= x5027 (=> (and (or (not x4074) x4074) (= x4074 (= x8608 0))) x1619)))
(assert (x6103 (- x1726 x490)))
(assert (x391 x8839))
(assert (= x5416 (or x3695 x3674 x7093 x805 x2594 x3406 x5806 x7920 x8410 x310 x1381 x2755 x6863 x4969 x4653 x8576 x8328 x2449 x423 x73 x9050 x4259 x2178 x7494 x3861 x2033 x1962 x7810 x1537 x7263 x3491 x3596 x6466 x2127 x8901 x3376 x1986 x5161 x6064 x6771 x4175 x8764 x5963 x3726 x5260 x670 x5515 x1449 x7594 x1759 x843 x8091 x5656 x5554 x1558 x1360 x6396 x3842 x3033 x5265 x8238 x4578 x3260 x832 x5960 x223 x3871 x2757 x433 x8701 x1475 x281 x3813 x2436 x8795)))
(assert (= x4695 (x3649 (x7379 x4695))))
(assert (x4156 x2012 x5116 x3593 x3579))
(assert (x391 x8151))
(assert (= x2757 (or x3085 x950)))
(assert (x6103 (- x3593 x8031)))
(assert (x6103 x1372))
(assert (x391 x5108))
(assert (x4191 x5390 (- x530 x5116)))
(assert (x391 x1581))
(assert (= x7435 (and x4123 x7378)))
(assert (x4156 x5766 x8031 x9039 x530))
(assert (x391 x290))
(assert (x391 x436))
(assert (= (and x3724 (not x8241)) x2266))
(assert (= x6506 (=> (and (or (not x8300) x8300) (= (= 0 x569) x8300)) x8515)))
(assert (= (and x456 x7762) x8724))
(assert (x391 x6482))
(assert (= x6008 (and x5926 (not x4676))))
(assert (x8665 x5116 x2012 x490 x774))
(assert (x2252 x1208))
(assert (= x7488 (and (not x1937) x7898)))
(assert (x391 x7895))
(assert (= x5569 (=> (and (= x7031 0) (= x4634 x8956)) x8547)))
(assert (x4191 x5116 (- x2012 x7316)))
(assert (x391 x5972))
(assert (=> (<= x8933 10000) (= (x7379 x8933) (x5361 x8933))))
(assert (x391 x6443))
(assert (= x3504 (=> (and (or (and (not x7409) (and (and (= (= 0 x3979) x1192) (< x3979 1461501637330902918203684832716283019655932542976) (<= x3979 1461501637330902918203684832716283019655932542975) (<= 0 x3979) (= x3979 (x2263 x6939))) (or (and (and (= (x3789 x5249 1) x5623) (= (x7158 (x7379 x5308) x8237 0) x5249) (= (x3789 x6939 1) x1235) (= x5308 x6625) (= x414 (x3789 x5623 1)) (= x4004 x3361) (= (x2125 (+ x3909 96)) x4004)) x1192) (and (not x1192) (and (= x7968 (x3789 x8251 1)) (= (x7158 (x7379 x5308) x8237 0) x2597) (<= 0 x5123) (= x2255 x3361) (= (x3789 x4978 1) x50) (> 1461501637330902918203684832716283019655932542976 x5123) (= x5123 (x5814 x2813)) (= (x3789 x6939 1) x2813) (>= 1461501637330902918203684832716283019655932542975 x5123) (= (x2125 (+ 96 x3909)) x2255) (= (x7158 (x7379 x5123) x8237 0) x4978) (= x8251 (x3789 x2597 1)) (= x5123 x6625)))))) (and (and (and (> 1461501637330902918203684832716283019655932542976 x539) (<= x539 1461501637330902918203684832716283019655932542975) (= x539 (x2263 x6939)) (= (x7124 (- x1536 x539)) x6047) (<= 0 x539) (= (< 0 x6047) x4120)) (or (and (and (= (x3789 x5060 1) x3159) (= x1536 x6625) (= (x7158 (x7379 x1536) x8237 0) x4167) (= x7886 (x2125 (+ 96 x3909))) (= x5060 (x3789 x8574 1)) (= x7886 x3361) (= (x7158 (x7379 x5308) x8237 0) x8574)) (not x4120)) (and (and (<= x8007 1461501637330902918203684832716283019655932542975) (= (x7158 (x7379 x8007) x8237 0) x2067) (= x2337 x3361) (= x4790 (x7158 (x7379 x5308) x8237 0)) (<= 0 x8007) (> 1461501637330902918203684832716283019655932542976 x8007) (= x8294 (x3789 x4790 1)) (= x6859 (x3789 x2067 1)) (= x6625 x1536) (= x8233 (x3789 x8294 1)) (= (x2125 (+ x3909 96)) x2337) (= x4164 (x7158 (x7379 x1536) x8237 0)) (= (x2059 x568) x8007) (= (x7158 (x7379 x1536) x8237 0) x568)) x4120))) x7409)) (= (ite (> x8334 x4849) (not (= 0 x1536)) (< x4849 x8334)) x7409)) x2584)))
(assert (x391 x48))
(assert (= x8625 (and x7493 x6844)))
(assert (x391 x7206))
(assert (x391 x2149))
(assert (= x5731 (and (not x2895) x7168)))
(assert (x391 x7670))
(assert (= x2982 (and x1389 x2122)))
(assert (x391 x8666))
(assert (x7060 x6044))
(assert (x8665 x2012 x5116 x1256 x172))
(assert (x391 x7297))
(assert (= (and (not x3278) x4469) x8290))
(assert (x391 x1726))
(assert (x391 x4721))
(assert (= (or x3173 (and (not x3880) x3) x6227 (and x8606 x7822) (and x1038 x1908) (and x315 (not x2238))) x3572))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x5924 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x5924 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x5924 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x5924 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x5924 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x5924 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5924)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x5924))) (x8005 1000000000000000000 x5924) (= (x7029 1000000000000000000 x5924) (* 1000000000000000000 x5924)) (x1844 1000000000000000000 x5924) (x7186 1000000000000000000 x5924) (x997 1000000000000000000 x5924) (x1348 1000000000000000000 x5924)))
(assert (= x5825 (and x1655 (not x5262))))
(assert (x8665 x2780 x172 x3593 x3579))
(assert (x8665 x172 x1256 x9039 x530))
(assert (x391 x201))
(assert (x391 x5596))
(assert (= (x3649 (x3789 x6827 1)) (+ 1 (x3649 x6827))))
(assert (x8665 x172 x1256 x940 x1726))
(assert (= (and x1217 x7674) x3256))
(assert (and (x3303 x3624 1461501637330902918203684832716283019655932542976) (x4253 x3624 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x4077 x3624 1461501637330902918203684832716283019655932542976) (* (x4526 x3624 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x3624)) (x5837 x3624 1461501637330902918203684832716283019655932542976)))
(assert (=> (>= 10000 x1165) (= (x5361 x1165) (x7379 x1165))))
(assert (x391 x5308))
(assert (x8665 x2780 x172 x5552 x7316))
(assert (x4156 x5552 x7316 x5390 x530))
(assert (x2624 x1886 x774))
(assert (= (and x920 x1853) x8948))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1726))
(assert (x7060 x2973))
(assert (= (and x7802 x3955) x5373))
(assert (x391 x4742))
(assert (= (and (not x7991) x1122) x686))
(assert (= (x3649 (x3789 x8280 1)) (+ (x3649 x8280) 1)))
(assert (x391 x6833))
(assert (= (=> (and (>= x3915 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5575) (= x5575 (x4166 x963)) (= (x3999 x2385) x3915) (<= x3915 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x5575 0)) x5438) x1243))
(assert (x391 x69))
(assert (x391 x6228))
(assert (x391 x7724))
(assert (x391 x327))
(assert (x6103 (- x2780 x774)))
(assert (= x1165 (x3649 (x7379 x1165))))
(assert (x2252 x1165))
(assert (x391 x25))
(assert (= (and x7849 x3681) x5566))
(assert (= (=> (and (or (and (not x7930) (= x727 x7930)) (and (and (>= x4933 0) (= (x3789 x3463 1) x6415) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4933) (= x4933 (x6504 x6415)) (= x727 (> x4933 0))) x7930)) (= x7930 (< 0 x5393))) x7436) x6252))
(assert (x391 x4056))
(assert (= (or x8604 x8466) x896))
(assert (=> (>= 10000 x699) (= (x7379 x699) (x5361 x699))))
(assert (= (and x8453 x8266) x3868))
(assert (= x7500 (and x1992 (not x5282))))
(assert (x391 x715))
(assert (x4191 x172 (- x1256 x940)))
(assert (= x3594 (and (not x2348) x5731)))
(assert (= (x3649 (x7379 x8286)) x8286))
(assert (= x7663 (and x6076 x8204)))
(assert (x6103 (- x5766 x530)))
(assert (x8665 x2012 x4135 x3593 x3579))
(assert (x1052 x2103 x7830))
(assert (=> (<= x2693 10000) (= (x5361 x2693) (x7379 x2693))))
(assert (x391 x3026))
(assert (= (or (and (not x5701) x3823) x8523) x4639))
(assert (x391 x4596))
(assert (x2252 x5851))
(assert (x8665 x8031 x5766 x1726 x940))
(assert (= x1759 (or x8084 x3170)))
(assert (= (and x3282 (not x4417)) x4751))
(assert (x4191 x172 (- x1256 x4135)))
(assert (x391 x5256))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2780))
(assert (x6103 (- x5552 x530)))
(assert (= (and x1832 (not x1580)) x1758))
(assert (= x3144 (=> (and (= x6414 x5300) (= x1725 x4926)) x6288)))
(assert (x391 x3540))
(assert (= (or (and x2609 x410) (and x3003 x5558) x7855 x6975 x2570) x6407))
(assert (x391 x3589))
(assert (x391 x4226))
(assert (x6103 (- x5116 x1726)))
(assert (x8665 x490 x774 x3593 x3579))
(assert (x391 x1883))
(assert (= (and x167 x9258) x3720))
(assert (= x6520 (=> (and (= x616 x3398) (= x5667 x7070) (= 0 x2933)) x3201)))
(assert (= x6468 (and (not x3147) x6892)))
(assert (= (=> (= x123 x7517) x1471) x5561))
(assert (= x7188 (and x5415 (not x3067))))
(assert (= (and x2433 x3824) x3125))
(assert (= x2984 (and x8302 (not x4576))))
(assert (x391 x1332))
(assert (x4191 x2780 (- x172 x3579)))
(assert (x8665 x530 x9039 x5390 x530))
(assert (= (and x6563 x6949) x6188))
(assert (x391 x6418))
(assert (= (x3649 (x7379 x4822)) x4822))
(assert (x391 x5759))
(assert (x391 x4649))
(assert (x391 x3766))
(assert (and (x5662 x2402 1000000000000000000) (x6638 x2402 1000000000000000000) (=> (and (< 0 x2402) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x2402 1000000000000000000)) (- x2402 1000000000000000000)) (>= x2402 (* 1000000000000000000 (x4526 x2402 1000000000000000000))))) (x4068 x2402 1000000000000000000) (x797 x2402 1000000000000000000)))
(assert (= x790 (=> (and (or (and x1836 (and (or (and x952 (and (<= x7843 1461501637330902918203684832716283019655932542975) (= (x5368 x5303) x7843) (= (x7158 (x7379 x5008) x5581 0) x5303) (>= x7843 0) (> 1461501637330902918203684832716283019655932542976 x7843))) (not x952)) (and (= x8472 (x6445 x6219)) (= (< 0 x132) x952) (= x132 (x7124 (- x5008 x8472))) (> 1461501637330902918203684832716283019655932542976 x8472) (>= x8472 0) (<= x8472 1461501637330902918203684832716283019655932542975)))) (and (not x1836) (and (or (and (not x7264) (and (= x7307 (x5084 x1717)) (= (x3789 x6219 1) x1717) (<= 0 x7307) (> 1461501637330902918203684832716283019655932542976 x7307) (>= 1461501637330902918203684832716283019655932542975 x7307))) x7264) (and (= (x6445 x6219) x8163) (<= 0 x8163) (<= x8163 1461501637330902918203684832716283019655932542975) (= x7264 (= x8163 0)) (> 1461501637330902918203684832716283019655932542976 x8163))))) (= x1836 (ite (> x8334 x9084) (not (= 0 x5008)) (> x8334 x9084)))) x2214)))
(assert (= x3607 (and x2863 x9146)))
(assert (= (and x976 x5600) x1902))
(assert (= (or x1320 x3622 x4795 x3462 x6079 x8700) x552))
(assert (x391 x1957))
(assert (x391 x413))
(assert (= x4893 (=> (and (or (not x2314) x2314) (= x2314 (= x6933 0))) x8049)))
(assert (= x4544 (and x7637 x199)))
(assert (x391 x4386))
(assert (x391 x2095))
(assert (x391 x2464))
(assert (x4156 x172 x1256 x1726 x940))
(assert (x391 x1876))
(assert (x391 x603))
(assert (x391 x3656))
(assert (x391 x393))
(assert (= (and x2391 (not x3156)) x5760))
(assert (x2252 x2008))
(assert (= (and x3352 (not x2822)) x7533))
(assert (= (and x4195 x7515) x5525))
(assert (x391 x1445))
(assert (= x5265 (and (not x1579) x4291)))
(assert (x4156 x940 x1726 x9039 x530))
(assert (x8665 x3579 x3593 x5390 x530))
(assert (x2252 x6176))
(assert (= (and (not x2899) x5332) x7034))
(assert (x2252 x8676))
(assert (x391 x2531))
(assert (x391 x5738))
(assert (= x5477 x6630))
(assert (= (and (not x8430) x5294) x7659))
(assert (x391 x5424))
(assert (x391 x3638))
(assert (= (+ 2 (x3649 x6871)) (x3649 (x3789 x6871 2))))
(assert (= x32 (and x4404 x2173)))
(assert (= (+ (x3649 x8274) 1) (x3649 (x3789 x8274 1))))
(assert (= x4716 (and x4702 x7138)))
(assert (x391 x4271))
(assert (x391 x2019))
(assert (x391 x1481))
(assert (x391 x6606))
(assert (= (x3649 (x3789 x7867 1)) (+ (x3649 x7867) 1)))
(assert (x391 x8790))
(assert (x391 x4884))
(assert (= (and (not x8906) x5289) x7929))
(assert (x1052 x9 x464))
(assert (= (and (=> (and (and (= x1092 x3501) (= x6797 1)) (not x8010)) x4728) (=> (and (and (= x7794 x8027) (= x8408 x7848) (= x4105 x1092)) x8010) x7731)) x721))
(assert (= (and x1904 x6187) x1144))
(assert (=> (>= 10000 x6101) (= (x7379 x6101) (x5361 x6101))))
(assert (= (and x6883 (not x4720)) x1329))
(assert (x391 x5845))
(assert (= x6267 (and (not x4813) x8917)))
(assert (x391 x4136))
(assert (x391 x6393))
(assert (= (and (not x3827) x29) x5879))
(assert (x391 x7365))
(assert (x391 x2190))
(assert (x391 x3461))
(assert (x7060 x5758))
(assert (= (or x6757 x4227) x5115))
(assert (= (and (not x6855) x39) x2278))
(assert (x391 x7462))
(assert (x8637 x2797))
(assert (x391 x6669))
(assert (x391 x8309))
(assert (x2252 x1735))
(assert (= (x3649 (x7379 x1092)) x1092))
(assert (x391 x7049))
(assert (x4191 x1726 x940))
(assert (x391 x5646))
(assert (x391 x8674))
(assert (x8665 x490 x774 x172 x1256))
(assert (x391 x3115))
(assert (= (or x9021 x1600) x5808))
(assert (=> (<= x1046 10000) (= (x7379 x1046) (x5361 x1046))))
(assert (= x8863 (and x2745 x4146)))
(assert (x4191 x3593 (- x3579 x774)))
(assert (= (and x1099 x6965) x1472))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x5052 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x5052 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x5052 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x5052 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x5052 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x5052 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5052)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x5052))) (x8005 1000000000000000000 x5052) (= (x7029 1000000000000000000 x5052) (* 1000000000000000000 x5052)) (x1844 1000000000000000000 x5052) (x7186 1000000000000000000 x5052) (x997 1000000000000000000 x5052) (x1348 1000000000000000000 x5052)))
(assert (= (and x3291 (not x1430)) x7546))
(assert (x8665 x172 x2780 x490 x774))
(assert (= (and x5080 x8371) x5196))
(assert (= (and x5043 (not x8977)) x6578))
(assert (= x2126 (and (not x1468) x6819)))
(assert (x391 x1001))
(assert (= (and x5792 (not x7212)) x1797))
(assert (= x1422 (=> (and (and (= (x1803 x2114) x5941) (= x6715 (x7158 (x7379 x7848) (x5361 158) 0)) (= x5275 (x7158 (x7379 x1640) x8957 0)) (= x8957 (x7158 (x7379 x7848) (x5361 155) 0)) (= (x6061 x3826) x3211) (= x7952 (< x6922 x3211)) (<= x5941 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x6328 0) (= (x3789 x4905 1) x7942) (= x2114 (x7158 (x7379 x1640) x6715 0)) (= (x1918 x3878) x4843) (= x3826 (x3789 x2114 1)) (= x5414 (x7158 (x7379 x1640) x1566 0)) (>= x6922 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3211) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6922) (= x6328 (x3906 x1506)) (<= 0 x3211) (<= 0 x4843) (<= x6328 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4843) (= x1566 (x7158 (x7379 x7848) (x5361 154) 0)) (= (x3789 x5275 2) x1506) (<= 0 x5941) (= x3878 (x3789 x5414 2))) (or (and (not x7952) (= 0 x8709)) (and (= x8709 x3211) x7952))) x8020)))
(assert (= (x3649 (x3789 x7156 1)) (+ (x3649 x7156) 1)))
(assert (x391 x4180))
(assert (x391 x222))
(assert (= x4777 (=> (and (= x6696 (x2125 (+ x3778 4))) (= (x2125 (+ 32 x1319)) x7524) (= x708 (= x5402 x1767)) (= (x2125 (+ 32 x6696)) x1319)) (and (=> (and x708 (and (= x653 x6606) (< 0 x7782) (= 100 x1806) (= x9159 x7902) (> 1466279372 x8015) (= x2285 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5278)) (< x5278 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5278))) (= x7032 x1211) (= 599290589 x8015) (not (> 599290589 x8015)) (= x8164 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (< x1806 4)) (= x7782 (x6887 (x7379 x5402))) (= x5278 (x7124 (- x1806 4))))) (and (=> (and (and (= x268 (x2237 1461501637330902918203684832716283019655932542975 x6606)) (= x1222 (= x268 x6606))) (not x2285)) (and (=> (not x1222) x7389) (=> (and x1222 (and (= x1211 x4518) (= (= x7032 x1211) x4702))) (and (=> (not x4702) x7389) (=> (and (and (= (x7158 (x7379 x2507) (x5361 1) 0) x59) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5710) (= x5710 (x2605 x59)) (= x2507 (x2237 1461501637330902918203684832716283019655932542975 x653)) (= (< x5710 x7902) x9229) (= x6908 x9159) (<= 0 x5710)) x4702) (and (=> x9229 x7389) (=> (and (not x9229) (= (> x9159 x5710) x8200)) (and (=> x8200 x7389) (=> (and (not x8200) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7924) (= x4759 (x7158 (x7379 x9214) (x5361 1) 0)) (= x7934 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9159))) (= (x7124 (- x5710 x9159)) x1703) (>= x7924 0) (= (x7832 x2642) x7924) (= (< x7934 x7924) x5072) (= (x7158 (x7379 x1211) (x5361 1) 0) x2642) (= (x2237 1461501637330902918203684832716283019655932542975 x653) x9214))) (and (=> x5072 x7389) (=> (and (and (= (< x3008 x7924) x4433) (= x3008 (x2125 (+ x7924 x9159)))) (not x5072)) (and (=> x4433 x7389) (=> (and (not x4433) (and (= (x2237 1461501637330902918203684832716283019655932542975 x653) x5469) (<= 0 x4455) (<= x4455 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x82 (< x4455 x9159)) (= (x7158 (x7379 x1211) (x5361 1) 0) x6210) (= (x6689 x1479) x4455) (= (x7158 (x7379 x7032) x7368 0) x1479) (= (x7158 (x7379 x5469) (x5361 2) 0) x7368))) (and (=> (and (= (> x9159 x4455) x5727) (not x82)) (and (=> x5727 x7389) (=> (and (not x5727) (and (= x5205 (x7124 (- x4455 x9159))) (= x1512 (x2237 1461501637330902918203684832716283019655932542975 x653)) (= 1 x5555) (= x4507 (x7158 (x7379 x1512) (x5361 2) 0)) (= x7119 32) (= x6025 (x7158 (x7379 x7032) x4507 0)))) x334))) (=> x82 x7389))))))))))))))) (=> x2285 x7389))) (=> (and (not x708) (= x3194 (= x1767 x8110))) (and (=> (and x3194 (and (not (= 547091486 x3928)) (= x1488 (x6887 (x7379 x8110))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4782) (< x3928 2217467699) (= x1878 x7032) (not (= 405663989 x3928)) (< 0 x1488) (not (< x3928 405663989)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1140) true) (< x1140 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1140)) x5914) (not (< x7196 4)) (= x6669 x7902) (< x3928 988262939) (= x1140 (x7124 (- x7196 4))) (= x3928 599290589) (= x6606 x3624) (= x7196 100))) (and (=> (and (not x5914) (and (= x5167 (x2237 1461501637330902918203684832716283019655932542975 x6606)) (= x1747 (= x5167 x6606)) (= x4891 x3624))) (and (=> (and x1747 (and (= x1441 (= x1878 x7032)) (= x1878 x5873))) (and (=> (not x1441) x9046) (=> (and (and (<= 0 x4147) (= x8286 (x2237 1461501637330902918203684832716283019655932542975 x3624)) (= (x4768 x4965) x4147) (= x4600 (> x7902 x4147)) (= x6742 x6669) (= (x7158 (x7379 x8286) (x5361 5) 0) x4965) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4147)) x1441) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1184) (= x1184 (x4768 x8621)) (<= 0 x1184) (= x3006 (x2237 1461501637330902918203684832716283019655932542975 x3624)) (= (x7158 (x7379 x3006) (x5361 5) 0) x8621) (= x4733 (> x6669 x1184))) (not x4600)) (and (=> x4733 x9046) (=> (and (not x4733) (and (= (x7124 (- x1184 x6669)) x228) (= x6948 (x2328 x8714)) (<= 0 x6948) (= x4657 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6669))) (= x8714 (x7158 (x7379 x1878) (x5361 5) 0)) (= x9035 (> x6948 x4657)) (<= x6948 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x9035 x9046) (=> (and (and (= x150 1) (= x1940 1) (= (x2125 (+ x6948 x6669)) x1188) (= x5704 32)) (not x9035)) x9036))))) (=> x4600 x9046))))) (=> (not x1747) x9046))) (=> x5914 x9046))) (=> (and (not x3194) (= (= x5049 x1767) x2122)) (and (=> (and (and (= (= x1767 x4633) x7874) (and (and (= x8419 599290589) (not (> 405663989 x8419)) (= x5785 (or (and (> 96 x744) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x744) true)) (> x744 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= 405663989 x8419)) (< x8419 2217467699) (= x3346 x6606) (< x8419 988262939) (= x1552 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (x6887 (x7379 x4633)) x9169) (> x9169 0) (not (= x8419 547091486)) (not (< x1350 4)) (= x7619 x7032) (= x744 (x7124 (- x1350 4))) (= x1350 100) (= x2564 x7902)) x7874)) (not x2122)) (and (=> (and (and (= (= x6606 x2947) x107) (= x7171 x3346) (= x2947 (x2237 1461501637330902918203684832716283019655932542975 x6606))) (not x5785)) (and (=> (and x107 (and (= x7619 x5817) (= (= x7032 x7619) x920))) (and (=> (not x920) x4112) (=> (and (and (= (x7158 (x7379 x7242) (x5361 5) 0) x3856) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x895) (= x72 x2564) (= (< x895 x7902) x8628) (>= x895 0) (= (x2237 1461501637330902918203684832716283019655932542975 x3346) x7242) (= (x3118 x3856) x895)) x920) (and (=> (and (not x8628) (and (<= 0 x2341) (= (x3118 x6300) x2341) (= x8990 (x2237 1461501637330902918203684832716283019655932542975 x3346)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2341) (= x6300 (x7158 (x7379 x8990) (x5361 5) 0)) (= x8185 (> x2564 x2341)))) (and (=> x8185 x4112) (=> (and (not x8185) (and (>= x4012 0) (= x4038 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2564))) (= (x7124 (- x2341 x2564)) x6577) (= (x7158 (x7379 x7619) (x5361 5) 0) x8490) (<= x4012 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7276 (> x4012 x4038)) (= x4012 (x6324 x8490)))) (and (=> (and (not x7276) (and (= x3725 1) (= (x2125 (+ x2564 x4012)) x4185) (= 32 x4450) (= x7773 1))) x8284) (=> x7276 x4112))))) (=> x8628 x4112))))) (=> (not x107) x4112))) (=> x5785 x4112))) (=> (and x2122 (and (= x4486 x7032) (= 599290589 x1366) (not (= x1366 547091486)) (not (= 405663989 x1366)) (= x1459 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< x1366 2217467699) (= x6606 x911) (not (< x1366 405663989)) (< x1366 988262939) (= (x7124 (- x5947 4)) x4494) (= x7355 x7902) (= x8998 (or (> x4494 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4494) true) (< x4494 96)))) (= x3017 (x6887 (x7379 x5049))) (= x5947 100) (not (< x5947 4)) (< 0 x3017))) (and (=> x8998 x6039) (=> (and (not x8998) (and (= (x2237 1461501637330902918203684832716283019655932542975 x6606) x3617) (= x2340 (= x6606 x3617)) (= x911 x5256))) (and (=> (not x2340) x6039) (=> (and (and (= x4486 x4180) (= (= x4486 x7032) x6280)) x2340) (and (=> (and (and (= x3793 x7355) (= x3549 (x7158 (x7379 x6526) (x5361 5) 0)) (= (x2237 1461501637330902918203684832716283019655932542975 x911) x6526) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1123) (= (< x1123 x7902) x6750) (= (x6781 x3549) x1123) (>= x1123 0)) x6280) (and (=> (and (and (= x8892 (x6781 x7745)) (= (x2237 1461501637330902918203684832716283019655932542975 x911) x3736) (= (x7158 (x7379 x3736) (x5361 5) 0) x7745) (<= x8892 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x8892 0) (= (< x8892 x7355) x364)) (not x6750)) (and (=> x364 x6039) (=> (and (not x364) (and (= (< x2805 x438) x3753) (= (x7158 (x7379 x4486) (x5361 5) 0) x5228) (= (x8055 x5228) x438) (= (x7124 (- x8892 x7355)) x314) (= x2805 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7355))) (<= x438 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x438 0))) (and (=> x3753 x6039) (=> (and (and (= 1 x2075) (= x4723 32) (= x5288 1) (= (x2125 (+ x7355 x438)) x1358)) (not x3753)) x4897))))) (=> x6750 x6039))) (=> (not x6280) x6039)))))))))))))))
(assert (= x8426 x1129))
(assert (= (=> (and (= x8873 x7455) (= x697 x603)) x7561) x3228))
(assert (= x8864 (and (not x6635) x8075)))
(assert (= x6900 (or x7279 x251)))
(assert (= (or x4552 x9012) x9173))
(assert (x391 x5531))
(assert (= (or x2874 x4076) x1974))
(assert (x8665 x9039 x530 x8031 x5766))
(assert (x6103 (- x490 x8031)))
(assert (x4156 x5116 x2012 x3593 x3579))
(assert (x2252 x2508))
(assert (= (=> (and (= x5071 x729) (= x3274 x5064)) x5272) x6962))
(assert (= (and x9059 x1801) x4323))
(assert (= (and (not x369) x448) x5447))
(assert (and (x5662 x7943 1000000000000000000) (x6638 x7943 1000000000000000000) (=> (and (< 0 x7943) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x7943 1000000000000000000)) (- x7943 1000000000000000000)) (>= x7943 (* 1000000000000000000 (x4526 x7943 1000000000000000000))))) (x4068 x7943 1000000000000000000) (x797 x7943 1000000000000000000)))
(assert (x391 x1152))
(assert (= (and x4642 x8707) x5395))
(assert (= (and x364 x633) x5270))
(assert (= (=> (and (= x1778 (= 0 x7830)) (or (not x1778) x1778)) x3855) x5650))
(assert (x391 x7924))
(assert (x8637 x6606))
(assert (x391 x8048))
(assert (x391 x4849))
(assert (x4156 x5116 x2012 x5390 x530))
(assert (x7060 x8148))
(assert (x2252 x2004))
(assert (= x7945 (and (not x3071) x4459)))
(assert (= x1536 (x3649 (x7379 x1536))))
(assert (x391 x6958))
(assert (x8665 x9039 x530 x3593 x3579))
(assert (x391 x3737))
(assert (= x2022 (and x355 x5089)))
(assert (= x7920 (and x6076 (not x8204))))
(assert (x391 x4165))
(assert (= x9025 (=> (and (= 0 x5547) (= x3920 x3825)) x351)))
(assert (x6103 (- x2780 x5552)))
(assert (x391 x2593))
(assert (= x8515 (=> (= (= 0 x569) x6031) (and (=> (and (not x6031) (= x7640 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2147)) (> 32 x2147)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2147)))) (and (=> (and (= x7308 x4990) x7640) x4745) (=> (and (not x7640) (and (= x3598 x8002) (= x8687 x7308) (= x5508 1))) x2829))) (=> (and x6031 (= x7308 x4990)) x4745)))))
(assert (= (x3649 (x7379 x9164)) x9164))
(assert (= (x3649 (x3789 x2952 1)) (+ (x3649 x2952) 1)))
(assert (x391 x6167))
(assert (x4191 x2012 (- x5116 x3579)))
(assert (= (and (not x6930) x9188) x987))
(assert (= (x3649 (x3789 x3914 1)) (+ 1 (x3649 x3914))))
(assert (x4156 x5116 x2012 x1256 x172))
(assert (x8665 x940 x1726 x5116 x2012))
(assert (x4191 x2780 (- x172 x5766)))
(assert (x6103 (- x490 x3579)))
(assert (= (x3649 (x3789 x4273 1)) (+ (x3649 x4273) 1)))
(assert (x391 x7205))
(assert (x391 x2446))
(assert (x391 x5791))
(assert (x6103 x5924))
(assert (x2252 x2403))
(assert (x391 x3368))
(assert (x8665 x5390 x530 x940 x1726))
(assert (x8637 x5213))
(assert (x391 x6525))
(assert (x8665 x3593 x3579 x1726 x940))
(assert (= x7071 (or x5966 x3442)))
(assert (= x8684 x847))
(assert (= x223 (and x3790 (not x7223))))
(assert (= x3696 (=> (and (= x5701 (= x6946 0)) (or x5701 (not x5701))) x6193)))
(assert (= (or x5559 x5826) x2153))
(assert (= x375 (=> (and (= x2769 x8807) (= x7390 x2429)) x775)))
(assert (= (+ 1 (x3649 x6553)) (x3649 (x3789 x6553 1))))
(assert (= x1927 (and x1245 (not x3505))))
(assert (x4191 x530 (- x9039 x940)))
(assert (= x2650 (or x572 x102)))
(assert (x391 x4837))
(assert (= x7606 (and x2017 x9133)))
(assert (x8665 x1256 x172 x7316 x5552))
(assert (x4156 x172 x1256 x4135 x2012))
(assert (= x1795 (and x407 (not x7056))))
(assert (x391 x4886))
(assert (x2252 x3265))
(assert (= (and x459 x3400) x7913))
(assert (= (or x1295 x1897 x5876 x4438) x4294))
(assert (x391 x8061))
(assert (x391 x7446))
(assert (x1710 x6606))
(assert (= (+ 1 (x3649 x6697)) (x3649 (x3789 x6697 1))))
(assert (= (x3649 (x3789 x3888 2)) (+ (x3649 x3888) 2)))
(assert (= x4222 (and x1691 x5426)))
(assert (= 1865448899 (x3649 (x5361 1865448899))))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x6893 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x6893 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x6893 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x6893 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x6893 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x6893 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6893)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x6893))) (x8005 1000000000000000000 x6893) (= (x7029 1000000000000000000 x6893) (* 1000000000000000000 x6893)) (x1844 1000000000000000000 x6893) (x7186 1000000000000000000 x6893) (x997 1000000000000000000 x6893) (x1348 1000000000000000000 x6893)))
(assert (x4156 x1256 x172 x5116 x2012))
(assert (= x5367 (and x952 x7795)))
(assert (= x607 (and x1237 (not x6721))))
(assert (x1710 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (= (and (not x3862) x3297) x4769))
(assert (x6103 (- x2012 x5766)))
(assert (= (and x6059 (not x8732)) x2925))
(assert (x4191 x4135 (- x2012 x3593)))
(assert (x391 x8846))
(assert (= (and x8814 (not x2135)) x7857))
(assert (= x8379 (x3649 (x7379 x8379))))
(assert (x391 x7237))
(assert (x391 x41))
(assert (x6103 x490))
(assert (= x6749 x2322))
(assert (x8665 x172 x1256 x2012 x5116))
(assert (= x5821 (and (not x5370) x6858)))
(assert (= (x3649 (x7379 x6717)) x6717))
(assert (x391 x1049))
(assert (x8665 x5766 x8031 x7316 x5552))
(assert (=> (<= x4415 10000) (= (x5361 x4415) (x7379 x4415))))
(assert (= (and (not x6308) x3326) x2379))
(assert (= x7366 (x3649 (x7379 x7366))))
(assert (= (and x3176 x4433) x6390))
(assert (x7060 x649))
(assert (= (+ 1 (x3649 x5713)) (x3649 (x3789 x5713 1))))
(assert (= (x3649 (x3789 x831 1)) (+ 1 (x3649 x831))))
(assert (= (and x8298 x1) x2377))
(assert (x4191 x4135 x2012))
(assert (x391 x4500))
(assert (x391 x460))
(assert (x391 x3806))
(assert (x391 x3212))
(assert (= (and x3765 x7733) x1570))
(assert (x391 x8866))
(assert (x6103 (- x3593 x530)))
(assert (= x9184 (x3649 (x7379 x9184))))
(assert (x391 x434))
(assert (x391 x7922))
(assert (x391 x2539))
(assert (= x2408 (and (not x4757) x7871)))
(assert (x391 x6260))
(assert (x391 x6381))
(assert (= (+ (x3649 x1065) 1) (x3649 (x3789 x1065 1))))
(assert (= x501 (or x7159 x1119 x3052 x5281)))
(assert (= (=> (and (= x2291 x9106) (= x6777 x8984)) x2181) x2936))
(assert (x391 x8259))
(assert (= (x3649 (x5361 1857877511)) 1857877511))
(assert (= x8424 (and x2439 x3028)))
(assert (x6103 (- x7316 x1726)))
(assert (= x7781 (or x1510 x8593 x2885 x3990 x8727)))
(assert (= x4339 (and x7795 (not x952))))
(assert (x391 x1498))
(assert (x2252 x204))
(assert (= x2395 (and x979 x8010)))
(assert (= x8297 (and x4813 x8917)))
(assert (x6103 (- x1256 x3579)))
(assert (= x4931 (and x6595 x4122)))
(assert (= x5949 (=> (and (or (and (not x6928) (= x5240 0)) (and x6928 (= x5941 x5240))) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6922) (<= 0 x6922) (= (< x6922 x5941) x6928))) x1673)))
(assert (= x6763 (and x4435 x1594)))
(assert (= (and x23 x8300) x4630))
(assert (= (+ (x3649 x4130) 1) (x3649 (x3789 x4130 1))))
(assert (x391 x3836))
(assert (=> (>= 10000 x6206) (= (x7379 x6206) (x5361 x6206))))
(assert (x391 x4820))
(assert (x6103 x9060))
(assert (= (and x3507 (not x6277)) x534))
(assert (x8665 x5390 x530 x4135 x2012))
(assert (x391 x8603))
(assert (x8637 x3805))
(assert (x7060 x4271))
(assert (x8637 x4840))
(assert (x391 x2430))
(assert (x8637 x3130))
(assert (= x3483 (and x2515 x545)))
(assert (x4191 x5116 (- x2012 x5766)))
(assert (x391 x6664))
(assert (= x4919 (=> (and (= x5499 x2706) (= x5974 x8093)) x5099)))
(assert (= (and (not x5768) x473) x2460))
(assert (= (x3649 (x3789 x1158 1)) (+ 1 (x3649 x1158))))
(assert (= (and x7226 (not x1999)) x6605))
(assert (= x2420 (x3649 (x7379 x2420))))
(assert (x391 x7094))
(assert (x391 x2472))
(assert (x6103 (- x172 x1256)))
(assert (=> (>= 10000 x1716) (= (x5361 x1716) (x7379 x1716))))
(assert (x391 x7173))
(assert (x391 x2130))
(assert (= (x3649 (x7379 x8990)) x8990))
(assert (= (and (not x2599) x4015) x5299))
(assert (x391 x5344))
(assert (= (and x5617 (not x5940)) x5145))
(assert (= (and (not x3561) x2479) x1386))
(assert (x7060 x172))
(assert (x6103 (- x5116 x3593)))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x5393 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x5393 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x5393 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x5393 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x5393 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x5393 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5393)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x5393))) (x8005 1000000000000000000 x5393) (= (x7029 1000000000000000000 x5393) (* 1000000000000000000 x5393)) (x1844 1000000000000000000 x5393) (x7186 1000000000000000000 x5393) (x997 1000000000000000000 x5393) (x1348 1000000000000000000 x5393)))
(assert (x391 x5533))
(assert (= x1465 (or (and (not x8300) x23) x4630)))
(assert (= x645 (and x5421 x5433)))
(assert (= x7142 (and x3291 x1430)))
(assert (= x6144 (or x5754 x9167)))
(assert (= x5261 (and x3253 (not x1387))))
(assert (= x6131 (or x7500 x1036 x3720 x7471 x7900 x1462)))
(assert (x6103 (- x530 x7316)))
(assert (= x7617 (=> (and (= x4946 x431) (= 0 x4329)) x1843)))
(assert (x391 x4794))
(assert (= x8214 (x3649 (x7379 x8214))))
(assert (x391 x4670))
(assert (x4191 x5552 (- x7316 x4135)))
(assert (x391 x625))
(assert (= x5959 (and x252 (not x4976))))
(assert (= (+ 2 (x3649 x1290)) (x3649 (x3789 x1290 2))))
(assert (= (x3649 (x7379 x7242)) x7242))
(assert (x8665 x3593 x3579 x8031 x5766))
(assert (x391 x8352))
(assert (=> (<= x9018 10000) (= (x5361 x9018) (x7379 x9018))))
(assert (x2252 x759))
(assert (= x3779 x5477))
(assert (x4191 x3579 (- x3593 x8031)))
(assert (= (x3649 (x3789 x8641 1)) (+ 1 (x3649 x8641))))
(assert (x391 x3240))
(assert (= x3225 (or x4618 x6295)))
(assert (x391 x7746))
(assert (= (and x3545 (not x4962)) x5586))
(assert (= (x3649 (x7379 x3006)) x3006))
(assert (= (x7379 1523576871) (x5361 1523576871)))
(assert (x391 x2854))
(assert (=> (<= x2691 10000) (= (x5361 x2691) (x7379 x2691))))
(assert (x7060 x489))
(assert (x391 x5893))
(assert (x391 x1578))
(assert (= (x3649 (x7379 x4113)) x4113))
(assert (x391 x5813))
(assert (= x3519 (or x6970 x6037)))
(assert (=> (>= 10000 x5669) (= (x5361 x5669) (x7379 x5669))))
(assert (x391 x6495))
(assert (and (x5662 x4092 1000000000000000000) (x6638 x4092 1000000000000000000) (=> (and (< 0 x4092) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x4092 1000000000000000000)) (- x4092 1000000000000000000)) (>= x4092 (* 1000000000000000000 (x4526 x4092 1000000000000000000))))) (x4068 x4092 1000000000000000000) (x797 x4092 1000000000000000000)))
(assert (x4191 x2012 (- x5116 x774)))
(assert (= (and x6254 (not x1836)) x9141))
(assert (x4156 x3593 x3579 x5390 x530))
(assert (= (x5361 547091486) (x7379 547091486)))
(assert (x6103 (- x3593 x940)))
(assert (= x1597 (and (not x6708) x673)))
(assert (x2252 x2693))
(assert (x391 x9268))
(assert (= x748 (and x5863 x1299)))
(assert (x391 x7525))
(assert (= x2148 (and x2906 x2413)))
(assert (x8637 x5570))
(assert (=> (>= 10000 x8543) (= (x5361 x8543) (x7379 x8543))))
(assert (= (and x6928 x650) x9211))
(assert (= (and x6904 x6527) x185))
(assert (= (and x627 (not x6182)) x5102))
(assert (x391 x8473))
(assert (= (and x2396 x3518) x6975))
(assert (= (x3649 (x7379 x4486)) x4486))
(assert (= (=> (and (= x720 x8176) (= x9240 x2374)) x8609) x2732))
(assert (x4156 x5766 x8031 x4135 x2012))
(assert (x391 x9054))
(assert (=> (>= 10000 x6391) (= (x7379 x6391) (x5361 x6391))))
(assert (x391 x6459))
(assert (x6103 (- x530 x2012)))
(assert (= x1119 (or x3814 x6825)))
(assert (x391 x2338))
(assert (x391 x481))
(assert (x8665 x2012 x5116 x4135 x2012))
(assert (= (x3649 (x7379 x1878)) x1878))
(assert (x8665 x940 x1726 x490 x774))
(assert (= (and (=> (and (not x7675) (and (= x9084 1) (= x6232 x5008))) x790) (=> (and (and (= x5581 x8161) (= x5639 x6232) (= x7848 x6862)) x7675) x8973)) x840))
(assert (x8637 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (and (not x2745) x4146) x3218))
(assert (x391 x8826))
(assert (x6103 x7661))
(assert (x391 x403))
(assert (= x4014 (and x7065 (not x2657))))
(assert (x391 x3767))
(assert (= x8333 (=> (and (or (and (= x6515 x8088) x2680) (and (not x2680) (= x6515 0))) (and (= (x1729 x6971) x3301) (<= 0 x8088) (<= x3301 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7158 (x7379 x2879) x8587 0) x6141) (= x3010 (x7158 (x7379 x2879) x5581 0)) (= (x3789 x3010 2) x6971) (<= 0 x8787) (= (x2848 x1371) x8088) (= (x3789 x6141 2) x4686) (= x6628 (x7158 (x7379 x2879) x5140 0)) (= (x7158 (x7379 x7848) (x5361 159) 0) x5140) (= (< x6922 x8088) x2680) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6922) (<= 0 x6922) (= x1371 (x3789 x6628 1)) (= (x4727 x4686) x7616) (= (x7158 (x7379 x7848) (x5361 156) 0) x5581) (>= x7616 0) (= (x7158 (x7379 x7848) (x5361 157) 0) x8587) (<= x8088 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7616) (= (x6861 x6628) x8787) (<= x8787 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3301 0))) x2521)))
(assert (x391 x5719))
(assert (x2252 x8690))
(assert (x8637 x4026))
(assert (x391 x1633))
(assert (= (x3649 (x7379 x8106)) x8106))
(assert (x391 x8433))
(assert (x8637 x9))
(assert (= (or x1259 x5231) x7803))
(assert (= x1389 (and x4753 (not x3194))))
(assert (= (and x1494 x8370) x8820))
(assert (x391 x8015))
(assert (x391 x8419))
(assert (x8665 x774 x490 x7316 x5552))
(assert (x391 x8919))
(assert (x4191 x3593 (- x3579 x940)))
(assert (x8665 x774 x490 x2780 x172))
(assert (and (x5662 x2855 1000000000000000000) (x6638 x2855 1000000000000000000) (=> (and (< 0 x2855) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x2855 1000000000000000000)) (- x2855 1000000000000000000)) (>= x2855 (* 1000000000000000000 (x4526 x2855 1000000000000000000))))) (x4068 x2855 1000000000000000000) (x797 x2855 1000000000000000000)))
(assert (= x4315 (or x5067 x6114)))
(assert (= x4694 x5477))
(assert (x4191 x940 (- x1726 x9039)))
(assert (x391 x6511))
(assert (= x2662 (and x3644 x7117)))
(assert (= (x7379 44970383829727661923261016617897238973146650624978361361029103362720544063488) (x5361 44970383829727661923261016617897238973146650624978361361029103362720544063488)))
(assert (x4191 x2780 (- x172 x1256)))
(assert (x391 x1840))
(assert (= x495 (x3649 (x7379 x495))))
(assert (x2252 x8933))
(assert (= x410 (and x1373 x4666)))
(assert (= x5402 (x3649 (x7379 x5402))))
(assert (= x1121 (and (not x4823) x9042)))
(assert (=> (>= 10000 x9184) (= (x5361 x9184) (x7379 x9184))))
(assert (= (and x3824 (not x2433)) x6323))
(assert (x6103 (- x1256 x530)))
(assert (= (+ 1 (x3649 x1566)) (x3649 (x3789 x1566 1))))
(assert (= x6692 (and x7579 x1928)))
(assert (x4191 x2012 (- x4135 x7316)))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x7902 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x7902 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x7902 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x7902 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x7902 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x7902 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x7902)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x7902))) (x8005 1000000000000000000 x7902) (= (x7029 1000000000000000000 x7902) (* 1000000000000000000 x7902)) (x1844 1000000000000000000 x7902) (x7186 1000000000000000000 x7902) (x997 1000000000000000000 x7902) (x1348 1000000000000000000 x7902)))
(assert (= (and x6687 x586) x4616))
(assert (x391 x6111))
(assert (= (x3649 (x3789 x6656 2)) (+ 2 (x3649 x6656))))
(assert (x391 x9110))
(assert (x4191 x1256 (- x172 x9039)))
(assert (x8637 x9054))
(assert (x391 x4211))
(assert (x391 x5048))
(assert (= (x3649 (x7379 x8009)) x8009))
(assert (x391 x5865))
(assert (= (and (not x2251) x4346) x7765))
(assert (= x6768 (and x1941 x4579)))
(assert (x391 x6206))
(assert (x7060 x3070))
(assert (x391 x1048))
(assert (x391 x6215))
(assert (= (+ (x3649 x5022) 1) (x3649 (x3789 x5022 1))))
(assert (x391 x3408))
(assert (x391 x9084))
(assert (x391 x5402))
(assert (x8665 x9039 x530 x530 x5390))
(assert (x8665 x5552 x7316 x3579 x3593))
(assert (x6103 (- x1726 x172)))
(assert (x391 x567))
(assert (x391 x7704))
(assert (x391 x608))
(assert (= (or x1969 x4624 x9014 x507 x5155 x2417) x5317))
(assert (x8665 x774 x490 x172 x1256))
(assert (= (and x2838 x8668) x1397))
(assert (= x2604 (and (not x6154) x5165)))
(assert (x4191 x2780 (- x172 x490)))
(assert (x4191 x172 (- x2780 x3579)))
(assert (x391 x5134))
(assert (= x1341 (and (not x7451) x3358)))
(assert (= (=> (and (= x6054 x667) (= x379 0)) x1084) x1314))
(assert (x4191 x530 (- x5390 x2012)))
(assert (x391 x1940))
(assert (x391 x6590))
(assert (x391 x4298))
(assert (= x5477 x4296))
(assert (=> (>= 10000 x2713) (= (x5361 x2713) (x7379 x2713))))
(assert (x391 x3517))
(assert (x391 x3401))
(assert (x391 x1614))
(assert (x8665 x5766 x8031 x3593 x3579))
(assert (x391 x7472))
(assert (= x3687 (or x2311 x6151)))
(assert (x391 x729))
(assert (= (and x4357 x2824) x4488))
(assert (x391 x6512))
(assert (x391 x311))
(assert (x391 x5917))
(assert (x8665 x5766 x8031 x490 x774))
(assert (x391 x6259))
(assert (x4191 x5390 (- x530 x4135)))
(assert (x391 x2956))
(assert (=> (<= x6164 10000) (= (x5361 x6164) (x7379 x6164))))
(assert (= (x3649 (x5361 35417553099779373699389112480655434059402432070290151981503827724506945814528)) 35417553099779373699389112480655434059402432070290151981503827724506945814528))
(assert (x391 x3922))
(assert (= x1951 (x3649 (x7379 x1951))))
(assert (x6103 x4677))
(assert (=> (<= x3490 10000) (= (x5361 x3490) (x7379 x3490))))
(assert (x391 x3017))
(assert (x391 x5669))
(assert (= (=> (= (= 0 x610) x2530) (and (=> (and (and (= (or (> x3820 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3820) true) (< x3820 32))) x7404) (= x3808 (x2125 (+ x1543 x7808))) (= (x2237 115792089237316195423570985008687907853269984665640564039457584007913129639904 x8278) x7808) (= x8278 (x2125 (+ x3820 31)))) (not x2530)) (and (=> (and x7404 (= x847 true)) x4020) (=> (and (and (and (= (< 0 x1935) x1715) (= x530 (x3382 x254)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x530) (= x4860 (x3924 x1543)) (>= x530 0) (= x254 (x7158 (x7379 x7848) (x5361 164) 0))) (or (and x1715 (and (>= 1461501637330902918203684832716283019655932542975 x3294) (= x3294 (x6348 x6931)) (= x8438 (not x1476)) (<= 0 x3294) (= x5308 x3294) (= (= 0 x3294) x1476) (= (x7158 (x7379 x7848) (x5361 154) 0) x5316) (= x1368 x7848) (= x6931 (x3789 x5316 1)) (< x3294 1461501637330902918203684832716283019655932542976))) (and (and (= 0 x5308) (= x1715 x8438) (= x1368 x7848)) (not x1715)))) (not x7404)) x5266))) (=> x2530 x2322))) x3870))
(assert (= (and x8412 (not x6447)) x4430))
(assert (x1710 x505))
(assert (x4191 x2012 (- x4135 x774)))
(assert (x391 x3781))
(assert (= x6799 (and x2517 x6751)))
(assert (x8665 x3579 x3593 x940 x1726))
(assert (x391 x3556))
(assert (= x5471 (and x2176 x7564)))
(assert (= x4362 (=> (and (= x2054 x7292) (= x3009 x6933)) x4893)))
(assert (x6103 (- x4135 x5116)))
(assert (x391 x7417))
(assert (= x304 x1443))
(assert (x4191 x1256 x172))
(assert (= (or x6692 x2313 (and x2801 x798) (and x7083 x6864) (and x3117 (not x5693)) (and x401 (not x8730))) x4776))
(assert (x391 x2324))
(assert (x391 x6278))
(assert (x8665 x9039 x530 x2012 x4135))
(assert (= x4279 (and x5262 x1655)))
(assert (x391 x54))
(assert (x391 x4545))
(assert (x391 x40))
(assert (= (or x458 x5170) x7906))
(assert (= x1724 (and (not x1694) x1617)))
(assert (= (or x4323 x5659 x3774 x7272 x4009 x6126) x1437))
(assert (x391 x7112))
(assert (= x324 x1129))
(assert (x391 x4426))
(assert (x391 x4474))
(assert (= x8991 (and (not x3637) x2484)))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x187 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x187 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x187 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x187 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x187 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x187 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x187)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x187))) (x8005 1000000000000000000 x187) (= (x7029 1000000000000000000 x187) (* 1000000000000000000 x187)) (x1844 1000000000000000000 x187) (x7186 1000000000000000000 x187) (x997 1000000000000000000 x187) (x1348 1000000000000000000 x187)))
(assert (= (and x3758 x5832) x7169))
(assert (x8665 x1726 x940 x1256 x172))
(assert (= x785 (=> (and (= x1345 0) (= x1498 x7724)) x8050)))
(assert (x7060 x4458))
(assert (= (+ 2 (x3649 x2504)) (x3649 (x3789 x2504 2))))
(assert (x391 x2797))
(assert (x4191 x530 (- x5390 x3593)))
(assert (=> (<= x818 10000) (= (x5361 x818) (x7379 x818))))
(assert (= (x3649 (x5361 989455977)) 989455977))
(assert (= x9028 (=> (and (= x2147 x942) (= x569 x5046)) x6506)))
(assert (x4191 x9039 (- x530 x5116)))
(assert (= x8929 (and x8750 x9120)))
(assert (x391 x7776))
(assert (x4191 x9039 (- x530 x4135)))
(assert (= (+ 1 (x3649 x4316)) (x3649 (x3789 x4316 1))))
(assert (= x8268 (x3649 (x7379 x8268))))
(assert (= x1654 (and x6851 (not x242))))
(assert (x391 x505))
(assert (= 1901074598 (x3649 (x5361 1901074598))))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4271))
(assert (and (x3303 x8889 32) (x4253 x8889 32) (=> (< 0 32) (= (+ (x4077 x8889 32) (* (x4526 x8889 32) 32)) x8889)) (x5837 x8889 32)))
(assert (x391 x4657))
(assert (x8665 x7316 x5552 x5390 x530))
(assert (= (and x8710 x5115) x3853))
(assert (x4191 x774 (- x490 x4135)))
(assert (x2252 x8106))
(assert (= (and x7445 (not x1819)) x3803))
(assert (x391 x576))
(assert (x391 x2945))
(assert (= (x3649 (x5361 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x391 x6478))
(assert (x391 x7886))
(assert (x391 x6473))
(assert (x391 x8423))
(assert (= (and (not x4875) x4941) x5250))
(assert (x391 x6326))
(assert (= x1031 (and x5957 x4001)))
(assert (= x2744 (and x3609 x3786)))
(assert (= (and x5001 (not x989)) x1474))
(assert (x391 x6582))
(assert (= (or x3089 x5359) x8517))
(assert (x391 x3738))
(assert (x391 x1734))
(assert (= (and x3693 x1230) x8289))
(assert (=> (>= 10000 x2423) (= (x7379 x2423) (x5361 x2423))))
(assert (= (and x974 x4170) x4660))
(assert (= (or x4879 x7369 x3061) x8768))
(assert (x391 x4464))
(assert (= (and x6194 (not x1192)) x6479))
(assert (= x8695 (and x1297 (not x6116))))
(assert (= (and x6710 (not x4750)) x1527))
(assert (x4191 x9039 (- x530 x7316)))
(assert (= (or x6426 x4921) x4706))
(assert (x391 x216))
(assert (x391 x6637))
(assert (= (and (not x1663) x5881) x7871))
(assert (= (and x5739 x7402) x3592))
(assert (= x3574 (or x7983 x3105 x6718)))
(assert (=> (>= 10000 x8971) (= (x5361 x8971) (x7379 x8971))))
(assert (= (and x6824 x4594) x7128))
(assert (x391 x4497))
(assert (x8665 x8031 x5766 x5552 x7316))
(assert (= x3538 (x3649 (x7379 x3538))))
(assert (= (and x3306 x4078) x2194))
(assert (x391 x7144))
(assert (= x5413 (and x4448 x5808)))
(assert (x391 x3001))
(assert (= (and x7607 x229) x5384))
(assert (x2252 x405))
(assert (and (x5662 x6005 1000000000000000000) (x6638 x6005 1000000000000000000) (=> (and (< 0 x6005) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x6005 1000000000000000000)) (- x6005 1000000000000000000)) (>= x6005 (* 1000000000000000000 (x4526 x6005 1000000000000000000))))) (x4068 x6005 1000000000000000000) (x797 x6005 1000000000000000000)))
(assert (= x3088 (x3649 (x7379 x3088))))
(assert (x391 x4405))
(assert (x391 x7380))
(assert (x391 x4571))
(assert (= x7062 (and (not x5341) x6001)))
(assert (=> (>= 10000 x8808) (= (x7379 x8808) (x5361 x8808))))
(assert (x391 x3699))
(assert (= x3047 (and (not x7195) x4368)))
(assert (= (x3649 (x3789 x3857 2)) (+ 2 (x3649 x3857))))
(assert (x391 x9024))
(assert (x4191 x1256 (- x172 x490)))
(assert (x391 x8163))
(assert (= x8635 (=> (= x5579 (< 0 x6297)) (and (=> (and (and (= (< x7965 x6253) x7228) (= (ite (> x7965 x6297) x6297 x7965) x6253)) x5579) (and (=> x7228 x5477) (=> (and (and (= x2640 (< 115792089237316195423570985008687907853269984665640564039457 x6253)) (= (= 0 (ite x2640 1 0)) x6174) (= (x7124 (- x7965 x6253)) x8256)) (not x7228)) (and (=> (and (and (= x2797 (ite (< x3836 1000000000000000000) 1 0)) (= x4271 (x5353 (* x6253 1000000000000000000))) (= (ite (not x4360) 1 0) x8964) (= (= x4271 0) x4360) (= (= x1845 0) x7340) (= (x2237 x8964 x2797) x1845) (= x3836 (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4271))) x6174) (and (=> (and (and (= x8475 (x5353 (* x4271 1000000000000000000))) (= x4303 (> x774 0))) x7340) (and (=> (and x4303 (and (<= 0 x7028) (= x7028 (x5527 x6380)) (<= x7028 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2537 (x4526 x9210 1000000000000000000)) (= (< x7028 x2537) x6622) (= x9210 (x4526 x8475 x774)))) (and (=> (and (not x6622) (and (= x8256 x3587) (= (x4747 x5989) x5075) (<= x5075 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4186 (x8170 x6380)) (= x3553 (x7124 (- x7028 x2537))) (= (x2125 (+ x722 32)) x7790) (>= x4186 0) (<= 0 x5075) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4186))) x6400) (=> x6622 x5477))) (=> (not x4303) x1129))) (=> (not x7340) x5477))) (=> (not x6174) x5477))))) (=> (and (not x5579) (= x3587 x7965)) x6400)))))
(assert (x391 x2753))
(assert (x391 x2406))
(assert (= x3359 (and x9249 x5475)))
(assert (x4191 x490 (- x774 x3579)))
(assert (x391 x985))
(assert (= (and x3336 (not x1042)) x6602))
(assert (x391 x6889))
(assert (= x4112 (=> (and (= x3725 0) (= x6917 x4450)) x8284)))
(assert (= x3046 (and (not x8013) x5419)))
(assert (= (and x5933 x801) x1005))
(assert (x4191 x7316 (- x5552 x530)))
(assert (= x8480 (and (not x5219) x4555)))
(assert (= (and (not x2222) x8667) x4513))
(assert (= (x3649 (x3789 x4163 1)) (+ (x3649 x4163) 1)))
(assert (= x6466 (and (not x2951) x98)))
(assert (= (or x7419 (and x6756 x5284)) x1223))
(assert (= (x3649 (x7379 x8826)) x8826))
(assert (= (+ (x3649 x9267) 1) (x3649 (x3789 x9267 1))))
(assert (= (and x1089 (not x5279)) x5753))
(assert (x391 x7943))
(assert (= x7541 (=> (and (or (and (not x822) (and (>= 1461501637330902918203684832716283019655932542975 x4862) (< x4862 1461501637330902918203684832716283019655932542976) (= (ite x1276 1 0) x4622) (= x7848 x344) (= x4862 (x8752 x5546)) (= (x3789 x4917 1) x5546) (= x1276 (not x5529)) (<= 0 x4862) (= x4917 (x7158 (x7379 x7848) (x5361 157) 0)) (= (= 0 x4862) x5529))) (and (and (= x4622 x7037) (= x7356 x344)) x822)) (= (= 0 x7037) x822)) x5162)))
(assert (x391 x7070))
(assert (x391 x1877))
(assert (x391 x1553))
(assert (x391 x3910))
(assert (= (and (not x8985) x5299) x5911))
(assert (= x6194 (and (not x7409) x5301)))
(assert (= (and (not x4766) x7659) x1362))
(assert (= x6256 (and x2577 x80)))
(assert (= (and x3937 x8440) x8054))
(assert (x8665 x9039 x530 x172 x1256))
(assert (= x8877 (and x1076 x3753)))
(assert (= (x3649 (x7379 x5237)) x5237))
(assert (x8665 x490 x774 x5766 x8031))
(assert (x391 x6484))
(assert (x391 x7691))
(assert (x391 x8207))
(assert (x391 x7653))
(assert (= (or (and x998 x8999) (and x3405 x5342) (and (not x1990) x7097) (and x1213 (not x7085)) x2634 x3343) x9003))
(assert (= (and x2242 (not x7178)) x2948))
(assert (x8665 x5390 x530 x3593 x3579))
(assert (x391 x5124))
(assert (x391 x6711))
(assert (x391 x8176))
(assert (x391 x4815))
(assert (x391 x1310))
(assert (x391 x8538))
(assert (x7060 x8524))
(assert (x4191 x7316 (- x5552 x5390)))
(assert (x391 x6108))
(assert (= x8252 (and x827 (not x7760))))
(assert (x7060 x1367))
(assert (= x7763 (and x7852 (not x4321))))
(assert (and (x5662 x5239 1000000000000000000) (x6638 x5239 1000000000000000000) (=> (and (< 0 x5239) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x5239 1000000000000000000)) (- x5239 1000000000000000000)) (>= x5239 (* 1000000000000000000 (x4526 x5239 1000000000000000000))))) (x4068 x5239 1000000000000000000) (x797 x5239 1000000000000000000)))
(assert (= (and x6666 x5274) x5143))
(assert (x391 x9102))
(assert (x2252 x3991))
(assert (x391 x6302))
(assert (x391 x1599))
(assert (x391 x7269))
(assert (= x6420 (or x4949 x4751 x4430 x6572 x7450 x7545 x4764 x4115 x9149 x7183 x3174 x2582 x3487 x6184 x2792 x2929 x8311 x3860 x6256 x6052 x594 x5102 x7006 x965 x1925 x7555 x4735 x1080 x2474 x7474 x2663 x2426 x1570 x7648 x3698 x3128 x8692 x1028 x8387 x2319 x6841 x4717 x2099 x1002 x4877 x8978 x2870 x9215 x4760 x3141 x7694)))
(assert (= x2725 (and (not x4152) x988)))
(assert (x391 x4051))
(assert (x391 x2036))
(assert (= (and x6659 x592) x673))
(assert (x4156 x1726 x940 x4135 x2012))
(assert (= (x5361 20853193852723734048814770637610870652489083209607696777694672748161462697984) (x7379 20853193852723734048814770637610870652489083209607696777694672748161462697984)))
(assert (= (and (not x8643) x826) x3833))
(assert (x391 x909))
(assert (x391 x705))
(assert (= (x7379 2991318663) (x5361 2991318663)))
(assert (x2252 x2727))
(assert (x391 x8942))
(assert (x391 x3751))
(assert (= x6588 (and x5024 x2857)))
(assert (x4156 x2012 x4135 x5116 x2012))
(assert (x391 x8500))
(assert (= x6266 (and x7507 (not x8041))))
(assert (= (+ (x3649 x5198) 1) (x3649 (x3789 x5198 1))))
(assert (= x836 (x3649 (x7379 x836))))
(assert (x391 x3150))
(assert (x391 x2343))
(assert (and (x5662 x2750 1000000000000000000) (x6638 x2750 1000000000000000000) (=> (and (< 0 x2750) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x2750 1000000000000000000)) (- x2750 1000000000000000000)) (>= x2750 (* 1000000000000000000 (x4526 x2750 1000000000000000000))))) (x4068 x2750 1000000000000000000) (x797 x2750 1000000000000000000)))
(assert (x2252 x3112))
(assert (x6103 (- x5766 x5116)))
(assert (x391 x5824))
(assert (= x5188 (or x2678 x1504)))
(assert (x391 x1366))
(assert (= x1858 (x3649 (x7379 x1858))))
(assert (x4191 x5390 (- x530 x7316)))
(assert (= (+ (x3649 x2320) 1) (x3649 (x3789 x2320 1))))
(assert (x391 x1133))
(assert (x4156 x774 x490 x5390 x530))
(assert (= 3583811254 (x3649 (x5361 3583811254))))
(assert (x6103 (- x5116 x2780)))
(assert (x391 x7641))
(assert (= x508 (and x2558 x7809)))
(assert (x391 x474))
(assert (= (=> (and (= x5905 x7390) (= x5986 x2769)) x775) x2016))
(assert (x391 x7590))
(assert (x6103 (- x172 x774)))
(assert (x391 x7593))
(assert (= (and (not x7642) x1874) x4275))
(assert (x391 x4723))
(assert (x391 x7067))
(assert (x391 x4784))
(assert (x391 x2707))
(assert (= (x3649 (x7379 x1384)) x1384))
(assert (= (or x4107 x1437) x597))
(assert (x391 x6834))
(assert (x4191 x8031 (- x5766 x1726)))
(assert (= (and x3756 x6269) x4087))
(assert (x391 x904))
(assert (x391 x5017))
(assert (x391 x2331))
(assert (x8665 x172 x2780 x2012 x5116))
(assert (x391 x6800))
(assert (= (x3649 (x7379 x4137)) x4137))
(assert (x391 x6690))
(assert (x391 x8148))
(assert (x391 x5690))
(assert (x391 x6608))
(assert (= x4198 (and x3845 x4574)))
(assert (x391 x8620))
(assert (x8665 x5390 x530 x5552 x7316))
(assert (= x278 false))
(assert (x391 x5097))
(assert (= x4745 (=> (and (= x8687 x4990) (= 0 x5508)) x2829)))
(assert (= (and x1804 x7812) x7923))
(assert (x391 x7963))
(assert (x391 x8926))
(assert (x391 x8936))
(assert (= x2062 (x3649 (x7379 x2062))))
(assert (x391 x1011))
(assert (x7060 x5139))
(assert (x391 x2204))
(assert (x4191 x8031 (- x5766 x2780)))
(assert (x6103 (- x1726 x2012)))
(assert (x391 x763))
(assert (= x5631 (=> (and (= 0 x142) (= x2781 x5035)) x1004)))
(assert (= x556 (and (not x3220) x8040)))
(assert (x391 x6142))
(assert (= x214 (or x3742 x168 x3552 x564 x7252 x4736)))
(assert (x391 x1145))
(assert (x391 x2077))
(assert (x2252 x917))
(assert (x391 x78))
(assert (x391 x348))
(assert (x391 x6054))
(assert (x4191 x2012 (- x4135 x490)))
(assert (x391 x2355))
(assert (x391 x1319))
(assert (= (=> (and (or (and (not x6642) (= (x7158 (x7379 x7470) x6992 0) x2400)) (and (= (x3789 x6992 2) x1786) x6642)) (= (= x7470 0) x6642)) x8617) x4885))
(assert (x2252 x1737))
(assert (= x1175 (and x3149 x5544)))
(assert (x391 x420))
(assert (x8665 x5552 x7316 x774 x490))
(assert (x2252 x5290))
(assert (x7060 x2855))
(assert (= x119 (and (not x6280) x7643)))
(assert (x391 x108))
(assert (= x6106 (or x497 x154)))
(assert (x6103 (- x4135 x7316)))
(assert (x391 x3617))
(assert (= x5298 (and x8762 (not x8944))))
(assert (x391 x964))
(assert (x4191 x5766 (- x8031 x5390)))
(assert (=> (>= 10000 x2854) (= (x7379 x2854) (x5361 x2854))))
(assert (= x6211 (and x1601 (not x1592))))
(assert (= (and (not x4195) x7515) x900))
(assert (= (and x2834 x5020) x802))
(assert (x4191 x7316 x5552))
(assert (x391 x1413))
(assert (= (and x3187 x2541) x1320))
(assert (= (+ 1 (x3649 x7908)) (x3649 (x3789 x7908 1))))
(assert (x391 x95))
(assert (= (x3649 (x7379 x2851)) x2851))
(assert (= x7394 (and x6925 x3499)))
(assert (= x823 (and (not x7849) x3681)))
(assert (x2252 x4384))
(assert (x8665 x530 x5390 x2012 x5116))
(assert (= x8183 (and x9203 (not x737))))
(assert (= x5479 (and x858 x3151)))
(assert (x391 x658))
(assert (x391 x6793))
(assert (x391 x7902))
(assert (= (and (not x4733) x255) x9154))
(assert (x1257 x505))
(assert (= x1331 (and x8158 (not x8862))))
(assert (x8665 x490 x774 x7316 x5552))
(assert (x2252 x3953))
(assert (= x4994 (or x714 x5449)))
(assert (x391 x5734))
(assert (= (and (not x3516) x7737) x3850))
(assert (x391 x1073))
(assert (x6103 (- x9039 x1256)))
(assert (= (or x339 x7711) x8358))
(assert (= (=> (and (= x4214 x1559) (= x7373 x2700)) x9263) x1894))
(assert (x4191 x7316 (- x5552 x9039)))
(assert (= x7462 (x3649 (x7379 x7462))))
(assert (= x8776 (and x523 x7652)))
(assert (x4191 x3579 (- x3593 x940)))
(assert (= (and x3016 (not x2623)) x8238))
(assert (= x2490 (and x6721 x1237)))
(assert (x4191 x1726 (- x940 x5552)))
(assert (x2252 x1582))
(assert (= x6999 (=> (and (or (and (= x1789 (x3789 x1566 2)) x3934) (and (not x3934) (= (x7158 (x7379 x917) x1566 0) x4022))) (= (= x917 0) x3934)) x2756)))
(assert (= (and x8375 x937) x8941))
(assert (x391 x3415))
(assert (x391 x1000))
(assert (x8665 x172 x2780 x7316 x5552))
(assert (= x9186 (and x3459 x6542)))
(assert (= x5477 x8082))
(assert (= (and x2194 (not x3268)) x3599))
(assert (= x200 (x3649 (x7379 x200))))
(assert (x391 x8301))
(assert (x391 x12))
(assert (x4156 x3579 x3593 x8031 x5766))
(assert (x8665 x530 x9039 x5552 x7316))
(assert (x4191 x4135 (- x2012 x5552)))
(assert (= x5381 (and x3480 x1920)))
(assert (x391 x7152))
(assert (x8665 x7316 x5552 x1256 x172))
(assert (x391 x3666))
(assert (x4191 x5116 (- x2012 x8031)))
(assert (=> (>= 10000 x8268) (= (x7379 x8268) (x5361 x8268))))
(assert (x391 x4208))
(assert (x4156 x5116 x2012 x490 x774))
(assert (=> (<= x1211 10000) (= (x7379 x1211) (x5361 x1211))))
(assert (x391 x2121))
(assert (= (and x2267 x7376) x1907))
(assert (x391 x8047))
(assert (x391 x6048))
(assert (= (and x2225 x1942) x7450))
(assert (= x1916 (=> (= (= x603 0) x4002) (and (=> (and (= (or (and (< x8873 32) (= (<= x8873 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8873)) x6155) (not x4002)) (and (=> (and (and (= x1176 x9171) (= x2190 x8500) (= x319 1)) (not x6155)) x6934) (=> (and (= x8500 x7693) x6155) x6719))) (=> (and x4002 (= x7693 x8500)) x6719)))))
(assert (= (or x7709 x2692) x5153))
(assert (x391 x6089))
(assert (x391 x5918))
(assert (x391 x2679))
(assert (x391 x884))
(assert (x391 x6265))
(assert (= (and x3056 x5101) x7003))
(assert (x391 x528))
(assert (= (and (not x1309) x2751) x39))
(assert (x2252 x2514))
(assert (x391 x4810))
(assert (x391 x2561))
(assert (= x7439 (and (=> (and (and (= x1244 0) (= x2179 x6440)) (not x4953)) x1838) (=> (and x4953 (and (or (and (and (<= 0 x4864) (= x4431 (x7158 (x7379 x662) x8587 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4864) (= x4864 (x4881 x5463)) (= (x3789 x4431 2) x5463) (= x7137 (< x4864 x6515)) (= (not x7137) x4140)) x6621) (and (= x4140 x6621) (not x6621))) (and (>= x662 0) (= x4183 (x7158 (x7379 x2179) x8587 0)) (= x3074 (x3789 x4183 1)) (= x662 (x9082 x3074)) (= x6621 (ite (< 1 x8334) (not (= x662 0)) (> x8334 1))) (>= 1461501637330902918203684832716283019655932542975 x662) (< x662 1461501637330902918203684832716283019655932542976)))) x7405))))
(assert (= (or x7408 x728) x6223))
(assert (x391 x4328))
(assert (x391 x7130))
(assert (x4156 x5116 x2012 x4135 x2012))
(assert (= x7044 (and x5652 x82)))
(assert (= (and x3204 (not x7361)) x2363))
(assert (x6103 (- x940 x5552)))
(assert (x391 x2849))
(assert (x2252 x212))
(assert (x391 x624))
(assert (= x6487 (=> (and (= x3715 (not (< 1 x2883))) (= (x7158 (x7379 x7448) (x5361 161) 0) x2383) (= x2883 (x1668 x2383))) (and x3715 x3648))))
(assert (= x6848 (and (not x2676) x53)))
(assert (= x3206 (and x7026 x5712)))
(assert (x4191 x2012 (- x4135 x9039)))
(assert (= (x3649 (x7379 x2508)) x2508))
(assert (x391 x622))
(assert (x391 x1130))
(assert (x4191 x2012 (- x5116 x1256)))
(assert (= x3840 (and x8611 x5797)))
(assert (=> (<= x6526 10000) (= (x7379 x6526) (x5361 x6526))))
(assert (x391 x8889))
(assert (x6103 (- x1726 x4135)))
(assert (x391 x8088))
(assert (and (x5662 x622 1000000000000000000) (x6638 x622 1000000000000000000) (=> (and (< 0 x622) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x622 1000000000000000000)) (- x622 1000000000000000000)) (>= x622 (* 1000000000000000000 (x4526 x622 1000000000000000000))))) (x4068 x622 1000000000000000000) (x797 x622 1000000000000000000)))
(assert (= (=> (and (= x4329 x715) (= x5227 x4946)) x7596) x1843))
(assert (x391 x4186))
(assert (x8665 x9039 x530 x7316 x5552))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5139))
(assert (= (x3649 (x3789 x7604 1)) (+ (x3649 x7604) 1)))
(assert (x391 x7987))
(assert (x6103 (- x5390 x490)))
(assert (= (x3649 (x3789 x5703 2)) (+ 2 (x3649 x5703))))
(assert (= x3627 (and x4307 x5376)))
(assert (= (and x8362 x2063) x1172))
(assert (= x8978 (and x5781 x7434)))
(assert (x8665 x4135 x2012 x3579 x3593))
(assert (x4191 x7316 (- x5552 x3579)))
(assert (x391 x589))
(assert (x391 x9210))
(assert (= (and x3692 (not x532)) x4209))
(assert (= (and x8910 x7293) x3246))
(assert (= x3786 (and (not x5166) x419)))
(assert (= (and (not x767) x2598) x4590))
(assert (= x3362 (and (not x515) x8861)))
(assert (x6103 x940))
(assert (x8665 x8031 x5766 x7316 x5552))
(assert (= (+ (x3649 x8651) 1) (x3649 (x3789 x8651 1))))
(assert (x8665 x172 x1256 x1726 x940))
(assert (x2252 x1439))
(assert (x4191 x5390 (- x530 x8031)))
(assert (x4156 x1256 x172 x5390 x530))
(assert (x391 x3473))
(assert (x8665 x4135 x2012 x9039 x530))
(assert (x391 x1588))
(assert (x8637 x5062))
(assert (x391 x2431))
(assert (x391 x3531))
(assert (= x2747 (and x6573 (not x4375))))
(assert (x391 x2587))
(assert (= x1874 (and x8768 (not x8747))))
(assert (x391 x2689))
(assert (= x3854 x2322))
(assert (= (and (not x107) x4583) x8295))
(assert (= (x3649 (x3789 x6992 1)) (+ (x3649 x6992) 1)))
(assert (=> (<= x7670 10000) (= (x7379 x7670) (x5361 x7670))))
(assert (x391 x180))
(assert (x1052 x403 x2491))
(assert (= x22 (and x3956 x642)))
(assert (= (and (not x7329) x8966) x1442))
(assert (x391 x2627))
(assert (= (and x9127 (not x218)) x287))
(assert (= (and x8598 x4044) x6694))
(assert (x391 x326))
(assert (= x2322 x4083))
(assert (= x9036 (=> (and (= x150 x4026) (= x5704 x5646)) x3597)))
(assert (x391 x3054))
(assert (x391 x1045))
(assert (x391 x2291))
(assert (x391 x8616))
(assert (= (and (not x6621) x8378) x4476))
(assert (x4191 x3593 (- x3579 x5390)))
(assert (x8665 x5116 x2012 x2780 x172))
(assert (x391 x9222))
(assert (x391 x4302))
(assert (= (and x601 (not x7048)) x7456))
(assert (x391 x4297))
(assert (= (x5361 1865448899) (x7379 1865448899)))
(assert (= (=> (and (= x6286 (x3789 x7604 1)) (= x1116 x5430) (= x354 x7532) (= (x7158 (x7379 x5430) x8793 0) x7604) (= (x3789 x6286 1) x1104)) x4718) x5644))
(assert (x391 x7676))
(assert (x7060 x5975))
(assert (x4191 x5390 x530))
(assert (= x3434 (=> (= (= x1023 x7105) x5549) (and (=> (and (not x5549) (= (> x7105 0) x5089)) (and (=> (and (not x5089) (and (= x7088 x6833) (= x6083 x6691))) x2802) (=> (and (and (= x4669 (x789 x799)) (= (x3789 x7578 1) x799) (= x7578 (x3789 x1485 1)) (= x1485 (x7158 (x7379 x7448) x4654 0)) (= x5125 (= 0 x4669)) (<= 0 x4669) (<= x8971 1461501637330902918203684832716283019655932542975) (<= 0 x8971) (= (x1750 x1485) x8971) (<= x4669 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5047 x7578) x2993) (> 1461501637330902918203684832716283019655932542976 x2993) (> 1461501637330902918203684832716283019655932542976 x8971) (>= 1461501637330902918203684832716283019655932542975 x2993) (= x2772 (x2125 (+ x6833 96))) (>= x2993 0)) x5089) (and (=> (and (and (or (and (= (x3789 x4654 1) x5692) x2100) (and (and (= x1740 (x3789 x3640 1)) (= (x7158 (x7379 x8971) x4654 0) x3640)) (not x2100))) (= x2100 (= x8971 0))) (not x5125)) x4987) (=> x5125 x2322))))) (=> (and (and (= x5962 x6833) (= x7921 x6083)) x5549) x506)))))
(assert (x4156 x3593 x3579 x8031 x5766))
(assert (x391 x7211))
(assert (= (x3649 (x7379 x336)) x336))
(assert (= (=> (= x847 true) x4020) x3950))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2973))
(assert (x6103 (- x5390 x5766)))
(assert (x391 x5704))
(assert (= (=> (and (= (x3789 x1109 1) x2677) (= (x7158 (x7379 x2879) x5581 0) x1109) (= x4408 (x3789 x2677 1))) x7554) x2209))
(assert (= (and x2117 (not x1253)) x4592))
(assert (x6103 (- x940 x2780)))
(assert (x4191 x2780 (- x172 x5116)))
(assert (= x8566 (and x6063 x5335)))
(assert (= x8091 (or x1255 x6940)))
(assert (= (x5361 3842108676) (x7379 3842108676)))
(assert (= x2516 (or x6565 x3895 x3564)))
(assert (= x6700 (and x7706 (not x5283))))
(assert (x7060 x7173))
(assert (= x1655 (and x2366 x238)))
(assert (= x4945 (or (and x4644 (not x5375)) x643 x2082 (and x8630 x5633) (and x4938 x2621) (and x6898 (not x3063)))))
(assert (= (and x4733 x255) x4957))
(assert (x391 x5379))
(assert (x391 x4955))
(assert (x391 x3659))
(assert (= (and x3694 (not x3310)) x7851))
(assert (= (=> (and (= x7931 0) (= x7859 x431)) x5397) x2461))
(assert (x8665 x7316 x5552 x172 x1256))
(assert (= x6046 (and x1106 x4913)))
(assert (x391 x1078))
(assert (x391 x1055))
(assert (x391 x2633))
(assert (= x8264 (and (not x5160) x2647)))
(assert (x391 x7123))
(assert (x391 x8197))
(assert (= (or x6358 x684) x1870))
(assert (x4191 x3593 (- x3579 x4135)))
(assert (=> (>= 10000 x1679) (= (x7379 x1679) (x5361 x1679))))
(assert (x391 x1345))
(assert (= (=> (and (= x3119 0) (= x8240 x7205)) x3020) x8454))
(assert (= (x7379 3266287495) (x5361 3266287495)))
(assert (= x4632 (x3649 (x7379 x4632))))
(assert (x391 x793))
(assert (= (x5361 178855970) (x7379 178855970)))
(assert (x8665 x490 x774 x2780 x172))
(assert (= (and x6639 x2153) x2887))
(assert (x391 x760))
(assert (= (and (not x5943) x6726) x4349))
(assert (= (and x5630 x2736) x3033))
(assert (x391 x5952))
(assert (x3618 x8429))
(assert (= x581 (=> (and (= x4471 x247) (= x5740 x2430)) x6543)))
(assert (x6103 (- x5766 x5390)))
(assert (x391 x1660))
(assert (= (and x5782 (not x6174)) x6771))
(assert (=> (<= x8900 10000) (= (x7379 x8900) (x5361 x8900))))
(assert (= x674 (and x3515 x7655)))
(assert (x2252 x5402))
(assert (x391 x5062))
(assert (x8665 x5116 x2012 x2012 x4135))
(assert (= (or x3455 x6943 x5214 x5749 x8231 x3449) x2546))
(assert (= x9251 (and (not x9070) x1780)))
(assert (= (or x1223 x6318) x6995))
(assert (x391 x7754))
(assert (= x3037 x5477))
(assert (x391 x5981))
(assert (x2624 x8524 x4860))
(assert (x391 x8493))
(assert (x391 x8588))
(assert (= x7257 (and x3952 x4499)))
(assert (x6103 (- x172 x3579)))
(assert (= x626 (=> (and (= (= 0 x5532) x4664) (or (and x4664 (= x5021 x5532)) (and (not x4664) (and (= x8329 (x7158 (x7379 x7448) x2246 0)) (<= x4005 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3789 x8329 1) x5181) (= (x881 x5181) x4005) (= x2246 (x7158 (x7379 x7848) (x5361 159) 0)) (>= x4005 0) (= x5021 (ite x779 1 0)) (= (= 0 x4005) x779))))) x3601)))
(assert (x4191 x5390 (- x530 x940)))
(assert (= (and x2457 x770) x5069))
(assert (= x7214 (and x737 x9203)))
(assert (x2252 x1765))
(assert (x8665 x9039 x530 x774 x490))
(assert (x2252 x2993))
(assert (= (and (not x1772) x3289) x1787))
(assert (= (and x7804 (not x7718)) x897))
(assert (x391 x3251))
(assert (x391 x5741))
(assert (x8665 x5766 x8031 x1256 x172))
(assert (= x1369 (and x6783 x2572)))
(assert (= (and x2982 x8998) x7705))
(assert (= x4326 (and x4275 (not x1285))))
(assert (= x8907 (or x5950 x1120)))
(assert (= (and x5184 x3014) x2166))
(assert (x391 x7829))
(assert (x8637 x464))
(assert (= (x7379 988262939) (x5361 988262939)))
(assert (= (and x5678 x8939) x1514))
(assert (x391 x7843))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x447 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x447 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x447 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x447 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x447 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x447 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x447)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x447))) (x8005 1000000000000000000 x447) (= (x7029 1000000000000000000 x447) (* 1000000000000000000 x447)) (x1844 1000000000000000000 x447) (x7186 1000000000000000000 x447) (x997 1000000000000000000 x447) (x1348 1000000000000000000 x447)))
(assert (x6103 (- x9039 x530)))
(assert (x391 x5523))
(assert (x391 x5113))
(assert (x8665 x1256 x172 x5766 x8031))
(assert (= x2748 (and x7952 x3677)))
(assert (x8665 x2780 x172 x172 x1256))
(assert (= x1068 (and x7099 (not x1441))))
(assert (x391 x7553))
(assert (= x1943 (=> (and (= 0 x8696) (= x5892 x8614)) x6104)))
(assert (x8665 x3593 x3579 x1256 x172))
(assert (= x1507 (and x4696 (not x7874))))
(assert (x6103 x1367))
(assert (x4191 x2012 (- x4135 x5390)))
(assert (= (x3649 (x7379 x724)) x724))
(assert (= x834 (and x2401 x5524)))
(assert (x391 x5620))
(assert (x8637 x2318))
(assert (x391 x6615))
(assert (= (and (not x5024) x2857) x5352))
(assert (x391 x3053))
(assert (x391 x1482))
(assert (= (or x8059 x5607) x2192))
(assert (x391 x3729))
(assert (x391 x3443))
(assert (= x3507 (or x3213 x3235)))
(assert (x391 x953))
(assert (x391 x8408))
(assert (x391 x7231))
(assert (x2252 x7833))
(assert (x391 x7291))
(assert (= (and x8704 (not x5073)) x3860))
(assert (= (+ (x3649 x6730) 1) (x3649 (x3789 x6730 1))))
(assert (x391 x8610))
(assert (= x524 (=> (and (= x2934 x5097) (= x7844 x3722)) x3791)))
(assert (x8637 x4752))
(assert (= (and (not x4650) x3271) x1802))
(assert (= x215 (and x8158 x8862)))
(assert (x7060 x2698))
(assert (=> (>= 10000 x7944) (= (x5361 x7944) (x7379 x7944))))
(assert (x8665 x8031 x5766 x172 x2780))
(assert (x391 x6661))
(assert (x8665 x5116 x2012 x8031 x5766))
(assert (=> (<= x5225 10000) (= (x7379 x5225) (x5361 x5225))))
(assert (x6103 (- x774 x4135)))
(assert (x391 x542))
(assert (= x8077 (and x5560 (not x5222))))
(assert (= x3600 (or x8659 x7847 x2818 x7120)))
(assert (x391 x4125))
(assert (=> (<= x2945 10000) (= (x5361 x2945) (x7379 x2945))))
(assert (= x6119 (and x2281 x3081)))
(assert (x8637 x3488))
(assert (= x207 (and (=> (and (and (= x2013 (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2780)) (= x5789 (= 0 x3858)) (= (x3789 x6997 1) x3131) (= (x7158 (x7379 x7848) (x5361 159) 0) x4490) (= x3858 (x2237 x1896 x6743)) (= (x7158 (x7379 x2879) x4490 0) x6997) (= (ite (not x6973) 1 0) x1896) (= (= 0 x2780) x6973) (>= x2780 0) (= (ite (> x172 x2013) 1 0) x6743) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2780) (= (x374 x3131) x2780)) x3151) (and (=> (not x5789) x5562) (=> (and x5789 (and (= (x5353 (x7029 x2780 x172)) x8507) (= x3987 (x4526 x8507 1000000000000000000)) (= (< x625 x830) x2224))) (and (=> x2224 x331) (=> (and (not x2224) (and (= x7472 (x7124 (- x625 x830))) (= x2515 (> x3987 x7472)))) (and (=> (and (and (= (> x3987 115792089237316195423570985008687907853269984665640564039457) x6398) (= (= 0 (ite x6398 1 0)) x5668)) (not x2515)) (and (=> (not x5668) x4108) (=> (and (and (= (= 0 x1372) x7377) (= x7221 (ite (< x2965 1000000000000000000) 1 0)) (= (= x1723 0) x604) (= x1723 (x2237 x8896 x7221)) (= x1372 (x5353 (* x3987 1000000000000000000))) (= (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1372) x2965) (= x8896 (ite (not x7377) 1 0))) x5668) (and (=> (not x604) x4692) (=> (and x604 (and (= x2676 (< 0 x1420)) (= x348 (x5353 (* 1000000000000000000 x1372))))) (and (=> (not x2676) x5827) (=> (and x2676 (and (= (> x5583 x514) x3319) (<= 0 x5583) (= (x5931 x6997) x5583) (= (x4526 x348 x1420) x4688) (<= x5583 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1666)) x514) (= x1666 (x4526 x4688 1000000000000000000)))) (and (=> x3319 x3731) (=> (and (not x3319) (and (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3987)) x1877) (= x7974 (x2125 (+ x5583 x1666))) (= (> x830 x1877) x9006))) (and (=> x9006 x4133) (=> (and (and (= x7974 x8529) (= x5454 0)) (not x9006)) x8333))))))))))) (=> (and (and (= x5358 (> x7472 115792089237316195423570985008687907853269984665640564039457)) (= (= (ite x5358 1 0) 0) x5978)) x2515) (and (=> (not x5978) x7528) (=> (and (and (= x1252 (ite (not x2726) 1 0)) (= x5865 (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4677)) (= x8035 (ite (> 1000000000000000000 x5865) 1 0)) (= (x2237 x1252 x8035) x2869) (= x1711 (= x2869 0)) (= x4677 (x5353 (* x7472 1000000000000000000))) (= x2726 (= 0 x4677))) x5978) (and (=> (and x1711 (and (= x8397 (x5353 (* 1000000000000000000 x4677))) (= x7364 (> x172 0)))) (and (=> (and x7364 (and (= x6683 (x4526 x7943 1000000000000000000)) (<= 0 x5935) (<= x5935 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5935 (x374 x3131)) (= x7943 (x4526 x8397 x172)) (= x4528 (> x6683 x5935)))) (and (=> (and (and (= x2462 (< 115792089237316195423570985008687907853269984665640564039457 x7472)) (= (= (ite x2462 1 0) 0) x3642) (= x7747 (x7124 (- x5935 x6683)))) (not x4528)) (and (=> (and x3642 (and (= x1160 (ite (not x7473) 1 0)) (= (= 0 x6834) x7473) (= (x5353 (* 1000000000000000000 x7472)) x6834) (= (x2237 x1160 x7089) x9243) (= (ite (> 1000000000000000000 x3757) 1 0) x7089) (= x5092 (= 0 x9243)) (= (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6834) x3757))) (and (=> (and (and (= x5624 (< 0 x1420)) (= (x5353 (* x6834 1000000000000000000)) x1818)) x5092) (and (=> (not x5624) x3475) (=> (and (and (<= 0 x8945) (= x8924 (x4526 x1818 x1420)) (= (x4526 x8924 1000000000000000000) x2495) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8945) (= (> x8945 x8127) x3637) (= x8945 (x5931 x6997)) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2495)) x8127)) x5624) (and (=> x3637 x1254) (=> (and (not x3637) (and (= x2633 x8529) (= x2633 (x2125 (+ x2495 x8945))) (= x7747 x5454))) x8333))))) (=> (not x5092) x4672))) (=> (not x3642) x5111))) (=> x4528 x8512))) (=> (not x7364) x324))) (=> (not x1711) x8082))))))))))) (=> (and (and (= x4255 x830) (= x58 x3558) (= x6490 x8263)) (not x3151)) x7330))))
(assert (= x6259 (x3649 (x7379 x6259))))
(assert (x391 x2729))
(assert (= (=> (and (= x2832 x3464) (= x7206 x4711)) x441) x8182))
(assert (x1710 x9091))
(assert (x391 x191))
(assert (x7060 x774))
(assert (x391 x8522))
(assert (x4156 x3579 x3593 x1726 x940))
(assert (x391 x5399))
(assert (x4191 x172 (- x1256 x1726)))
(assert (x4191 x530 (- x9039 x774)))
(assert (= (and x5073 x8704) x922))
(assert (= (and (not x7681) x3340) x6757))
(assert (= (x3649 (x7379 x4105)) x4105))
(assert (x391 x5290))
(assert (= (and (not x4120) x9205) x2557))
(assert (= (and x7606 (not x5242)) x5617))
(assert (= (=> (and (= x129 x7817) (= x5216 0)) x4422) x7277))
(assert (x6103 (- x2780 x4135)))
(assert (= (and x1772 x3289) x851))
(assert (x391 x9052))
(assert (= (and (not x5944) x8165) x251))
(assert (= (=> (and (= x5961 (x7158 (x7379 x7448) (x5361 161) 0)) (= (not (> x8267 1)) x4628) (= (x1668 x5961) x8267)) (and x4628 x5122)) x4277))
(assert (x6103 (- x9039 x172)))
(assert (x391 x3584))
(assert (x391 x4436))
(assert (= (and x7761 (not x3416)) x6671))
(assert (= x2287 (or x6623 x356)))
(assert (x391 x7358))
(assert (= x5548 (and (not x273) x1966)))
(assert (x8665 x5390 x530 x5766 x8031))
(assert (x8665 x940 x1726 x2780 x172))
(assert (= (x3649 (x7379 x4633)) x4633))
(assert (x2252 x836))
(assert (= x8375 (and x305 x7337)))
(assert (x391 x6016))
(assert (x4191 x4135 (- x2012 x530)))
(assert (= (and x538 x7576) x8075))
(assert (= (=> (and (or (not x2920) x2920) (= (= x5974 0) x2920)) x3325) x5099))
(assert (=> (<= x3000 10000) (= (x7379 x3000) (x5361 x3000))))
(assert (= (and x1741 x1646) x6629))
(assert (= x8382 (and (not x5946) x5670)))
(assert (x391 x7416))
(assert (x4156 x530 x5390 x8031 x5766))
(assert (x391 x4863))
(assert (= x5638 (or x4758 x266)))
(assert (= x4795 (and x3908 x639)))
(assert (= (and x8043 (not x5862)) x8618))
(assert (= (and x5536 (not x16)) x1066))
(assert (= x8858 (and x2882 x9180)))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1367 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x1367 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x1367 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x1367 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x1367 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x1367 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1367)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1367))) (x8005 1000000000000000000 x1367) (= (x7029 1000000000000000000 x1367) (* 1000000000000000000 x1367)) (x1844 1000000000000000000 x1367) (x7186 1000000000000000000 x1367) (x997 1000000000000000000 x1367) (x1348 1000000000000000000 x1367)))
(assert (= x3988 (and x3421 x9023)))
(assert (x391 x1407))
(assert (x4156 x940 x1726 x1256 x172))
(assert (= (and (not x5785) x6338) x4583))
(assert (x391 x1541))
(assert (x6103 (- x1256 x5116)))
(assert (= (and (not x5871) x2069) x9059))
(assert (= (or x2106 x475 (and (not x5351) x4762) (and x3502 x5394) (and x8180 x2998) (and (not x1212) x5505)) x2140))
(assert (x391 x5507))
(assert (x4191 x172 (- x2780 x4135)))
(assert (x391 x2637))
(assert (x2252 x734))
(assert (= x3232 (and x3961 (not x4602))))
(assert (=> (<= x7305 10000) (= (x5361 x7305) (x7379 x7305))))
(assert (x391 x5310))
(assert (x391 x5435))
(assert (x391 x2318))
(assert (x391 x510))
(assert (x391 x4300))
(assert (x4191 x3579 (- x3593 x5116)))
(assert (= x1417 (and x2697 x6782)))
(assert (x8665 x5116 x2012 x5390 x530))
(assert (x391 x8979))
(assert (x8665 x9039 x530 x5766 x8031))
(assert (= (or x8413 x7087 x2170 x1447) x4445))
(assert (x391 x2859))
(assert (x391 x371))
(assert (= (and x1530 x6340) x4171))
(assert (x8665 x530 x9039 x2012 x4135))
(assert (= (or x2557 x1826 x6479 x3083) x8232))
(assert (= x8134 (and x5220 x6149)))
(assert (= x3284 (and x5377 x6823)))
(assert (x2252 x6457))
(assert (= x8775 (and x1056 (not x8705))))
(assert (x1052 x3130 x5431))
(assert (=> (>= 10000 x8007) (= (x7379 x8007) (x5361 x8007))))
(assert (x391 x6293))
(assert (x8665 x2012 x4135 x5390 x530))
(assert (x391 x9212))
(assert (x391 x5312))
(assert (x2252 x855))
(assert (= (and x1696 x8414) x4452))
(assert (x391 x7305))
(assert (x2252 x6793))
(assert (x391 x3380))
(assert (x4191 x3593 (- x3579 x7316)))
(assert (x391 x8402))
(assert (= x4921 (or x908 x5780)))
(assert (x391 x4822))
(assert (x391 x784))
(assert (= (and x3677 (not x7952)) x6627))
(assert (x391 x9122))
(assert (x2252 x4415))
(assert (x391 x8475))
(assert (x6103 (- x5390 x5552)))
(assert (x391 x4888))
(assert (= x7809 (and x8677 (not x437))))
(assert (= (and x5211 (not x5506)) x3518))
(assert (= x7560 (x3649 (x7379 x7560))))
(assert (and (x3303 x911 1461501637330902918203684832716283019655932542976) (x4253 x911 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x4077 x911 1461501637330902918203684832716283019655932542976) (* (x4526 x911 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x911)) (x5837 x911 1461501637330902918203684832716283019655932542976)))
(assert (x391 x7241))
(assert (x391 x2094))
(assert (x391 x8335))
(assert (x391 x2152))
(assert (= x7855 (and x7861 x6497)))
(assert (x391 x5234))
(assert (x391 x8286))
(assert (x391 x8099))
(assert (= x3236 (and x4305 x2317)))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5390))
(assert (x391 x8472))
(assert (= (=> (and (= x4252 x6525) (= x5842 x4857)) x5451) x6619))
(assert (x391 x2262))
(assert (x391 x3427))
(assert (= x8110 (x3649 (x7379 x8110))))
(assert (x8665 x3579 x3593 x172 x2780))
(assert (x6103 (- x5390 x2012)))
(assert (= x5001 (and x271 x2580)))
(assert (x8665 x940 x1726 x5552 x7316))
(assert (= x5433 (and x3719 x5849)))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x7438 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x7438 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x7438 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x7438 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x7438 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x7438 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x7438)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x7438))) (x8005 1000000000000000000 x7438) (= (x7029 1000000000000000000 x7438) (* 1000000000000000000 x7438)) (x1844 1000000000000000000 x7438) (x7186 1000000000000000000 x7438) (x997 1000000000000000000 x7438) (x1348 1000000000000000000 x7438)))
(assert (= (=> (and (and (= (> x9071 x6922) x8653) (>= x6922 0) (<= x6922 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (or (and (not x8653) (= x7424 0)) (and x8653 (= x7424 x9071)))) x6110) x7341))
(assert (= (and (=> (and (not x5684) (and (= 0 x9084) (= x2945 x5008))) x790) (=> (and x5684 (and (and (= x1534 (x7158 (x7379 x2945) x5581 0)) (= x7315 (x3789 x1534 1)) (>= 1461501637330902918203684832716283019655932542975 x6232) (= (ite (> x8334 1) (not (= x6232 0)) (< 1 x8334)) x2833) (< x6232 1461501637330902918203684832716283019655932542976) (= (x6347 x7315) x6232) (>= x6232 0)) (or (and (not x2833) (= x7675 x2833)) (and x2833 (and (<= 0 x7245) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7245) (= (x7158 (x7379 x6232) x5581 0) x3857) (= (x8715 x6454) x7245) (= (< x7245 x7375) x4410) (= x7675 (not x4410)) (= x6454 (x3789 x3857 2))))))) x840)) x1995))
(assert (= (and x5879 (not x1501)) x1958))
(assert (= x3128 (and x3138 x5202)))
(assert (x4156 x7316 x5552 x1256 x172))
(assert (x391 x8400))
(assert (x391 x2671))
(assert (= x3452 false))
(assert (x6103 (- x490 x5116)))
(assert (x4191 x9039 (- x530 x5552)))
(assert (x6103 x5139))
(assert (x8665 x940 x1726 x172 x1256))
(assert (= x4351 (and x9042 x4823)))
(assert (x8665 x2012 x4135 x774 x490))
(assert (x4191 x940 (- x1726 x5766)))
(assert (= (x3649 (x3789 x4016 1)) (+ (x3649 x4016) 1)))
(assert (x391 x7390))
(assert (= x3669 (=> (and (= 0 x7987) (= x5621 x4977)) x2197)))
(assert (x6103 (- x530 x172)))
(assert (x391 x4329))
(assert (= (and (not x2236) x2369) x8017))
(assert (x8637 x2731))
(assert (x391 x8824))
(assert (= x5730 (and x2192 (not x8463))))
(assert (x391 x7253))
(assert (= (and x9127 x218) x6789))
(assert (x2252 x3283))
(assert (= (x7379 3583811254) (x5361 3583811254)))
(assert (x391 x3548))
(assert (x4156 x2012 x5116 x9039 x530))
(assert (x391 x6117))
(assert (= (=> (= (< 0 x1935) x2657) (and (=> (and (= (= x3123 0) x5269) x2657) (and (=> (and x5269 (and (= x447 0) (= x6778 x3412) (= x4217 x1481))) x3051) (=> (and (and (and (= 4 x5757) (= (= x8110 x7848) x3071) (= (x2125 (+ 160 x3412)) x1543)) (or (and (and (= (= x5049 x7848) x2783) (or (and (and (and (and (= 4 x3910) (= x7288 (x6887 (x7379 x4633))) (< x5434 2217467699) (= x1315 10936679508223583803006762266923565500374401145016910147028117655998246682624) (< x5434 988262939) (not (> 4 x3910)) (= 405663989 x5434) (< 0 x7288) (= x610 1) (not (< x5434 405663989)) (= x5757 x3910) (= x3820 32)) x4) (= x4 (= x4633 x7848))) (not x2783)) (and (and (= x34 (x6887 (x7379 x5049))) (= x610 1) (< x3103 988262939) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x1614) (< 0 x34) (not (< x3103 405663989)) (= x3820 32) (> 2217467699 x3103) (= 4 x9110) (not (> 4 x9110)) (= x3103 405663989) (= x5757 x9110)) x2783))) (not x3071)) (and (and (= 4 x4342) (not (> 405663989 x343)) (not (< x4342 4)) (= x4886 (x6887 (x7379 x8110))) (= x3820 32) (= x5757 x4342) (= x465 10936679508223583803006762266923565500374401145016910147028117655998246682624) (= 405663989 x343) (> x4886 0) (< x343 988262939) (= 1 x610) (> 2217467699 x343)) x3071))) (not x5269)) x3870))) (=> (not x2657) x7021))) x383))
(assert (x4191 x5766 (- x8031 x3593)))
(assert (= x7381 (=> (and (= x3366 0) (= x8357 x6723)) x1343)))
(assert (x2252 x200))
(assert (x391 x4264))
(assert (= (and (not x2002) x1934) x5152))
(assert (x2252 x3736))
(assert (= (and (not x2542) x322) x6959))
(assert (= x1850 (or x7169 x4818 x7126 x5654 x8685 x2760)))
(assert (= (or x5616 x4601) x4117))
(assert (x391 x1062))
(assert (= x7901 (and x4294 x7764)))
(assert (x4191 x172 (- x2780 x7316)))
(assert (x6103 (- x5390 x7316)))
(assert (x391 x1487))
(assert (x8637 x8035))
(assert (= x7819 (and x7913 x5798)))
(assert (= (or x2560 x8134 x5387 x4569) x7020))
(assert (= x9037 (or x7687 x2043 x4477 (and (not x8874) x298) (and x5743 x762))))
(assert (x391 x1842))
(assert (= (x3649 (x3789 x1686 1)) (+ (x3649 x1686) 1)))
(assert (= (and x6926 x8137) x4641))
(assert (x391 x4313))
(assert (= (or x5036 x9251) x6631))
(assert (x2252 x8007))
(assert (x4191 x2780 (- x172 x1726)))
(assert (x391 x3385))
(assert (x391 x2493))
(assert (= x8011 (and (not x7490) x8907)))
(assert (=> (>= 10000 x6457) (= (x7379 x6457) (x5361 x6457))))
(assert (x391 x5776))
(assert (x391 x7626))
(assert (x8665 x3593 x3579 x2012 x5116))
(assert (= x3711 (or x3155 x7303 x3988 x8931 x2404 x9095)))
(assert (=> (>= 10000 x8824) (= (x7379 x8824) (x5361 x8824))))
(assert (= x5780 (and (not x7959) x1625)))
(assert (x7060 x8507))
(assert (x8665 x530 x5390 x1726 x940))
(assert (x4191 x1726 (- x940 x2780)))
(assert (= x2818 (or x7133 x7688)))
(assert (x2252 x3490))
(assert (x391 x3311))
(assert (x4191 x172 (- x1256 x3593)))
(assert (x391 x5243))
(assert (= (x3649 (x5361 2858086653)) 2858086653))
(assert (x391 x7679))
(assert (x391 x7437))
(assert (x8665 x490 x774 x5552 x7316))
(assert (x2252 x8808))
(assert (= (x3649 (x5361 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x391 x8887))
(assert (x391 x2853))
(assert (= (or x5330 (and x1602 x6594)) x473))
(assert (x391 x7791))
(assert (x4156 x4135 x2012 x9039 x530))
(assert (= x5477 x55))
(assert (= (+ (x3649 x1108) 2) (x3649 (x3789 x1108 2))))
(assert (x391 x1706))
(assert (=> (<= x8346 10000) (= (x5361 x8346) (x7379 x8346))))
(assert (x391 x6741))
(assert (= (and (not x2344) x111) x1741))
(assert (x391 x4040))
(assert (x391 x828))
(assert (x391 x5817))
(assert (= (and x2225 (not x1942)) x7738))
(assert (x6103 (- x4135 x3579)))
(assert (= x4019 (and x2484 x3637)))
(assert (x6103 (- x8031 x5390)))
(assert (= x2614 (and (not x3333) x676)))
(assert (x391 x7270))
(assert (x391 x2183))
(assert (= x633 (and x4237 (not x6750))))
(assert (= (=> (and (= x5555 x4026) (= x5646 x7119)) x3597) x334))
(assert (x391 x6222))
(assert (x391 x8543))
(assert (x4156 x5552 x7316 x9039 x530))
(assert (x8637 x7759))
(assert (= x665 (and x2631 (not x330))))
(assert (x8665 x8031 x5766 x530 x9039))
(assert (= x8265 (=> (and (= x350 x1554) (= 0 x6034)) x8934)))
(assert (x8665 x530 x5390 x5552 x7316))
(assert (= x5067 (and x6751 (not x2517))))
(assert (x391 x8884))
(assert (=> (<= x130 10000) (= (x7379 x130) (x5361 x130))))
(assert (x8665 x2780 x172 x940 x1726))
(assert (= x7183 (and x6231 (not x5051))))
(assert (x391 x4065))
(assert (x1052 x6278 x2085))
(assert (= (x3649 (x3789 x1124 1)) (+ (x3649 x1124) 1)))
(assert (x391 x855))
(assert (=> (>= 10000 x3736) (= (x7379 x3736) (x5361 x3736))))
(assert (x391 x1354))
(assert (x391 x344))
(assert (x391 x8287))
(assert (x391 x76))
(assert (= (and x8077 (not x2274)) x9152))
(assert (x391 x5454))
(assert (= (and x6978 x2266) x459))
(assert (x391 x3590))
(assert (x8665 x2780 x172 x5766 x8031))
(assert (x391 x8990))
(assert (= (and x5793 x6162) x5294))
(assert (x391 x4317))
(assert (x8665 x5766 x8031 x9039 x530))
(assert (x391 x926))
(assert (= (or x7331 x6629 (and x2199 x6444) x1577 (and x3809 x927) (and x8292 x1201)) x2567))
(assert (x6103 (- x5116 x3579)))
(assert (= (and (not x846) x7393) x4642))
(assert (= (and (not x6283) x4232) x7418))
(assert (= x6239 (and x3282 x4417)))
(assert (= (and (not x2697) x6782) x1054))
(assert (x391 x938))
(assert (x8637 x7036))
(assert (= x3282 (or x1478 (and (not x5333) x7024))))
(assert (x391 x6980))
(assert (= x5054 (and x8872 (not x6374))))
(assert (= x3490 (x3649 (x7379 x3490))))
(assert (x4191 x5116 (- x2012 x1726)))
(assert (= (or x5698 x7896 x6370) x4150))
(assert (= (=> (= x3421 (= 0 x5974)) (and (=> (and (not x3421) (= (or (and (= true (<= x5499 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x5499)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5499)) x8019)) (and (=> (and (= x5919 x2519) x8019) x8149) (=> (and (not x8019) (and (= x2064 1) (= x7865 x5919) (= 32 x6958))) x2078))) (=> (and (= x5919 x2519) x3421) x8149))) x3325))
(assert (x391 x8821))
(assert (x391 x1171))
(assert (x391 x703))
(assert (= x7283 x562))
(assert (= x435 (=> (and (= x2835 x2054) (= 0 x3009)) x4362)))
(assert (x391 x5050))
(assert (= (or x7868 x8618) x5970))
(assert (= (and x5051 x6231) x1728))
(assert (x391 x8920))
(assert (x391 x3318))
(assert (=> (<= x3166 10000) (= (x5361 x3166) (x7379 x3166))))
(assert (= x8815 (and x6283 x4232)))
(assert (x4191 x490 (- x774 x5116)))
(assert (= x8617 (=> (and (= x946 (x3789 x3705 1)) (= x5430 x7297) (= x5672 x1226) (= x3705 (x3789 x6650 1)) (= (x7158 (x7379 x5430) x6992 0) x6650)) x6225)))
(assert (x391 x888))
(assert (= x3569 (=> (= x6497 (= 0 x5356)) (and (=> x6497 x435) (=> (and (not x6497) (= x3003 (or (> x250 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x250)) (> 32 x250))))) (and (=> x3003 x435) (=> (and (and (= (< x6739 x6807) x5506) (>= x6807 0) (= x6739 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3317))) (<= x6807 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x3003)) (and (=> x5506 x435) (=> (and (not x5506) (and (<= x2109 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1764 x2360) x2109) (<= 0 x2109) (= x2360 (x7158 (x7379 x7032) (x5361 5) 0)) (= (> x2109 x6739) x2396) (= (x2125 (+ x6807 x3317)) x7406))) (and (=> x2396 x435) (=> (and (not x2396) (and (= (x2125 (+ x2109 x3317)) x169) (= 1 x3009) (= 32 x2054))) x4362)))))))))))
(assert (= (x3649 (x5361 2023533118)) 2023533118))
(assert (x8665 x2012 x4135 x940 x1726))
(assert (x391 x1064))
(assert (x8665 x2012 x5116 x2780 x172))
(assert (= (or x5493 x9278) x159))
(assert (= x5836 (and (not x186) x693)))
(assert (x391 x2639))
(assert (x391 x9155))
(assert (= (and x8014 x2450) x7684))
(assert (= (and (not x3300) x6481) x7190))
(assert (= x5585 (=> (and (= x6776 (= x1353 0)) (or (and (= x4979 (x3789 x3914 2)) x6776) (and (= (x7158 (x7379 x1353) x3914 0) x7588) (not x6776)))) x4771)))
(assert (x391 x3103))
(assert (x6103 (- x490 x5552)))
(assert (= (or (and x3359 x7534) (and x3555 x1323) (and x5475 (not x9249)) x1005 x4916 (and x6087 (not x2185))) x5019))
(assert (x391 x738))
(assert (= x3654 (or x3418 x362)))
(assert (= (or x5400 x7631) x650))
(assert (= (and x1369 (not x1196)) x7134))
(assert (x391 x2088))
(assert (x391 x628))
(assert (= x7528 x5477))
(assert (= (=> (= (< x3109 x3054) x2599) (and (=> (and (not x2599) (= x8985 (< x3109 x3054))) (and (=> x8985 x5477) (=> (and (and (= (x7124 (- x3109 x3054)) x6769) (= x6769 x6297)) (not x8985)) x8635))) (=> (and x2599 (= x6297 0)) x8635))) x5955))
(assert (= (or (and x8291 (not x46)) x630 x2216 (and x8377 x2278) (and x4637 x8494) (and x4067 (not x8193)) (and x39 x6855) x289 (and x6009 x28)) x7016))
(assert (x391 x9049))
(assert (x391 x6933))
(assert (x391 x5327))
(assert (x391 x4004))
(assert (x391 x5924))
(assert (x391 x8819))
(assert (x2252 x7431))
(assert (x8665 x7316 x5552 x3579 x3593))
(assert (x8665 x4135 x2012 x774 x490))
(assert (x391 x2973))
(assert (= (=> (= (= 0 x915) x43) (and (=> x43 x2322) (=> (and (not x43) (and (= x4566 (x2125 (+ x4539 x8745))) (= (x2125 (+ x958 31)) x7512) (= x5096 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x958) true) (< x958 32)) (> x958 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x2237 115792089237316195423570985008687907853269984665640564039457584007913129639904 x7512) x8745))) (and (=> (and (and (and (<= 0 x1420) (= x172 (x2046 x4539)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1420) (= (> x625 0) x273) (= (x7158 (x7379 x7848) (x5361 165) 0) x5564) (= (x4153 x5564) x1420)) (or (and (and (= x5430 0) (= x273 x1106) (= x365 x7848)) (not x273)) (and x273 (and (<= 0 x8433) (= x7848 x365) (= (= x8433 0) x504) (= x8433 (x8752 x719)) (< x8433 1461501637330902918203684832716283019655932542976) (= (x3789 x516 1) x719) (= x1106 (not x504)) (= x5430 x8433) (>= 1461501637330902918203684832716283019655932542975 x8433) (= x516 (x7158 (x7379 x7848) (x5361 157) 0)))))) (not x5096)) x4519) (=> (and x5096 (= x847 true)) x4020))))) x5403))
(assert (= (and x5473 x3134) x3962))
(assert (x391 x6435))
(assert (and (x3303 x3346 1461501637330902918203684832716283019655932542976) (x4253 x3346 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x4077 x3346 1461501637330902918203684832716283019655932542976) (* (x4526 x3346 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x3346)) (x5837 x3346 1461501637330902918203684832716283019655932542976)))
(assert (= x4059 (and (not x3844) x3929)))
(assert (= (and x2363 (not x5151)) x8084))
(assert (x8665 x172 x1256 x3579 x3593))
(assert (= (x3649 (x7379 x2179)) x2179))
(assert (= (and x1790 x4896) x5161))
(assert (= (=> (and (= x6817 x6414) (= x4926 x7956)) x6288) x1979))
(assert (x4156 x5766 x8031 x7316 x5552))
(assert (x4191 x5552 (- x7316 x3593)))
(assert (x391 x7320))
(assert (x391 x3398))
(assert (x391 x7486))
(assert (x8665 x774 x490 x5116 x2012))
(assert (= (and (not x4572) x7979) x7463))
(assert (x391 x6905))
(assert (= (x3649 (x3789 x3484 1)) (+ (x3649 x3484) 1)))
(assert (= x2449 (and x1251 x4488)))
(assert (= (and x3937 (not x8440)) x7295))
(assert (x391 x5093))
(assert (= x8727 (and x749 (not x924))))
(assert (x8637 x7221))
(assert (= (and x798 (not x2801)) x3117))
(assert (= (x3649 (x3789 x1025 1)) (+ 1 (x3649 x1025))))
(assert (x391 x3986))
(assert (= (and x4128 (not x9132)) x8425))
(assert (= (x3649 (x7379 x7107)) x7107))
(assert (= (x3649 (x3789 x6737 1)) (+ 1 (x3649 x6737))))
(assert (= x9046 (=> (and (= x6917 x5704) (= 0 x150)) x9036)))
(assert (x4156 x2012 x5116 x1256 x172))
(assert (x391 x2507))
(assert (= x7226 (or x7624 x5818)))
(assert (x391 x7466))
(assert (= (and x5203 x1618) x5715))
(assert (= (and x5821 (not x4854)) x3750))
(assert (x391 x5689))
(assert (x391 x5331))
(assert (= x1151 (and x1848 x3852)))
(assert (= (and x2554 (not x570)) x875))
(assert (x4191 x9039 (- x530 x1256)))
(assert (x391 x320))
(assert (= (and x4867 x8218) x8692))
(assert (= x8428 (=> (and (= x3408 x8096) (= x8839 x3993)) x7341)))
(assert (= (x3649 (x3789 x4917 1)) (+ (x3649 x4917) 1)))
(assert (x391 x3102))
(assert (= (=> (and (= x4226 x7336) (= 0 x8119)) x3511) x7328))
(assert (=> (>= 10000 x6879) (= (x7379 x6879) (x5361 x6879))))
(assert (x4191 x530 (- x5390 x490)))
(assert (x391 x8226))
(assert (=> (<= x1487 10000) (= (x7379 x1487) (x5361 x1487))))
(assert (= x6869 (or (and x8932 x6604) x8212 (and x1277 (not x1948)) x4699 (and x9043 (not x4221)) (and x2166 x4535))))
(assert (x391 x6248))
(assert (= x818 (x3649 (x7379 x818))))
(assert (x391 x713))
(assert (x391 x692))
(assert (x391 x8896))
(assert (x391 x2540))
(assert (x391 x4263))
(assert (= x5477 x4824))
(assert (x391 x7876))
(assert (x4191 x490 (- x774 x530)))
(assert (= x1685 (and x1194 (not x4002))))
(assert (x8665 x530 x9039 x7316 x5552))
(assert (x391 x172))
(assert (= (and x1465 x6031) x7111))
(assert (= x497 (and x3786 (not x3609))))
(assert (x391 x7245))
(assert (x2252 x6397))
(assert (x4156 x1256 x172 x1726 x940))
(assert (=> (<= x6895 10000) (= (x5361 x6895) (x7379 x6895))))
(assert (= (=> (and (= x3269 0) (= x2472 x8190)) x5903) x2256))
(assert (= (x3649 (x5361 1466279372)) 1466279372))
(assert (= (+ 1 (x3649 x5474)) (x3649 (x3789 x5474 1))))
(assert (x6103 (- x530 x3593)))
(assert (x391 x7586))
(assert (x391 x3219))
(assert (x391 x6172))
(assert (x391 x6599))
(assert (= (=> (and (= (= x715 0) x4001) (or x4001 (not x4001))) x1195) x7596))
(assert (x391 x2411))
(assert (x391 x3411))
(assert (x8637 x2411))
(assert (x391 x7063))
(assert (= x5593 (and (not x4664) x1467)))
(assert (x391 x6551))
(assert (x391 x5984))
(assert (x391 x5288))
(assert (x391 x8116))
(assert (x2252 x2854))
(assert (x391 x975))
(assert (x6103 (- x490 x5390)))
(assert (x391 x2883))
(assert (= x4718 (=> (= x1609 (< 0 x6359)) (and (=> (and x1609 (and (>= x8334 0) (= (= x5430 0) x6952) (<= x8334 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x6952 x7894) (=> (and (not x6952) (and (= (x7158 (x7379 x5430) x8793 0) x7015) (>= x4674 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4674) (= (= x4674 0) x5886) (= x4674 (x7846 x1081)) (= (x3789 x7015 2) x1081))) (and (=> (not x5886) x7042) (=> (and (and (and (= (x3789 x8793 1) x8488) (= x4508 (x8812 x8488)) (= (ite (> x8334 0) (not (= x4508 0)) (< 0 x8334)) x1548) (> 1461501637330902918203684832716283019655932542976 x4508) (>= 1461501637330902918203684832716283019655932542975 x4508) (>= x4508 0)) (or (and (= x6527 x1548) (not x1548)) (and x1548 (and (= x2687 (x3789 x5703 2)) (= (x7846 x2687) x8186) (= x6527 (not x7022)) (<= 0 x8186) (= x7022 (< x8186 x6359)) (= (x7158 (x7379 x4508) x8793 0) x5703) (<= x8186 115792089237316195423570985008687907853269984665640564039457584007913129639935))))) x5886) x3792))))) (=> (and (and (= x4204 x7532) (= x8735 x1116)) (not x1609)) x4260)))))
(assert (x391 x8076))
(assert (= (+ 1 (x3649 x479)) (x3649 (x3789 x479 1))))
(assert (x391 x1554))
(assert (x6103 (- x940 x5390)))
(assert (x4156 x172 x2780 x8031 x5766))
(assert (x391 x1160))
(assert (= (or x5143 x7635 x8986 x838 x8724 x8856) x2913))
(assert (= x7464 (=> (and (= 0 x6062) (= x5144 x7724)) x7092)))
(assert (= (and x3321 (not x8893)) x8661))
(assert (= (+ (x3649 x7907) 2) (x3649 (x3789 x7907 2))))
(assert (x391 x8650))
(assert (x8665 x490 x774 x8031 x5766))
(assert (x4191 x1256 (- x172 x1726)))
(assert (x391 x2814))
(assert (= x5201 (and (not x3405) x5342)))
(assert (x391 x2440))
(assert (= x6667 (and x5789 x5479)))
(assert (= x4817 (and x3080 (not x9182))))
(assert (= (and x8864 x6646) x2387))
(assert (= x1719 (or (and x1601 x1592) (and x6211 (not x8810)))))
(assert (and (x5662 x9210 1000000000000000000) (x6638 x9210 1000000000000000000) (=> (and (< 0 x9210) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x9210 1000000000000000000)) (- x9210 1000000000000000000)) (>= x9210 (* 1000000000000000000 (x4526 x9210 1000000000000000000))))) (x4068 x9210 1000000000000000000) (x797 x9210 1000000000000000000)))
(assert (x391 x4632))
(assert (x391 x4534))
(assert (x8637 x8964))
(assert (= x819 (and (not x2515) x545)))
(assert (= (and x3322 (not x2371)) x7515))
(assert (x391 x7833))
(assert (x391 x7064))
(assert (= x7073 (=> (and (= 0 x4179) (= x1554 x7653)) x9080)))
(assert (x391 x7782))
(assert (x2624 x6044 x4860))
(assert (and (x3303 x41 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4253 x41 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x4077 x41 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x4526 x41 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x41)) (x5837 x41 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x7858 (=> (and (= x3209 x3722) (= x5097 x7829)) x3791)))
(assert (x6103 (- x3593 x5390)))
(assert (x4191 x1256 (- x172 x4135)))
(assert (x391 x8276))
(assert (x391 x2080))
(assert (x8665 x3579 x3593 x774 x490))
(assert (x391 x233))
(assert (x4156 x5116 x2012 x7316 x5552))
(assert (x4156 x8031 x5766 x5116 x2012))
(assert (= (and (=> (and (and (or (and (not x6382) (= x1198 x6382)) (and x6382 (and (<= 0 x8402) (<= x8402 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8402 (x5648 x7841)) (= x1108 (x7158 (x7379 x6442) x4654 0)) (= (not x6665) x1198) (= x6665 (> x1023 x8402)) (= x7841 (x3789 x1108 2))))) (and (= (ite (< 1 x8334) (not (= x6442 0)) (> x8334 1)) x6382) (<= x6442 1461501637330902918203684832716283019655932542975) (>= x6442 0) (= (x3789 x1403 1) x3388) (= (x8094 x3388) x6442) (= (x7158 (x7379 x7312) x4654 0) x1403) (> 1461501637330902918203684832716283019655932542976 x6442))) x783) x4370) (=> (and (and (= x5448 0) (= x818 x7312)) (not x783)) x8143)) x3237))
(assert (x6103 (- x3579 x4135)))
(assert (x4191 x5116 (- x2012 x1256)))
(assert (= x1785 (or x7526 x3064 x1336 x3362 x3833 x1292)))
(assert (= x8158 (and x7547 x2668)))
(assert (= x8168 (=> (and (= x5113 x4683) (= x3521 x6906)) x796)))
(assert (x2252 x393))
(assert (x391 x7366))
(assert (=> (>= 10000 x6711) (= (x7379 x6711) (x5361 x6711))))
(assert (x2252 x4632))
(assert (x391 x3361))
(assert (x391 x7373))
(assert (x391 x412))
(assert (x391 x3136))
(assert (x391 x8203))
(assert (= (or x8483 x1185 x5726) x1241))
(assert (and (x3303 x41 32) (x4253 x41 32) (=> (< 0 32) (= (+ (x4077 x41 32) (* (x4526 x41 32) 32)) x41)) (x5837 x41 32)))
(assert (= x6101 (x3649 (x7379 x6101))))
(assert (x391 x6128))
(assert (= x3163 (=> (and (= x4157 0) (= x1216 x2873)) x7148)))
(assert (x391 x5133))
(assert (x391 x830))
(assert (x391 x1431))
(assert (x8637 x5466))
(assert (x391 x530))
(assert (= (x3649 (x7379 x1800)) x1800))
(assert (= (=> (and (= 0 x5535) (= x7025 x6582)) x9130) x1879))
(assert (= (and x7789 x86) x1051))
(assert (x391 x243))
(assert (x1052 x6741 x2722))
(assert (= (or x5472 x1072) x5281))
(assert (= (x3649 (x3789 x5275 2)) (+ (x3649 x5275) 2)))
(assert (= (and (not x229) x7607) x5439))
(assert (x391 x1725))
(assert (x4191 x530 (- x5390 x1256)))
(assert (x8637 x5584))
(assert (x6103 (- x940 x4135)))
(assert (= (+ (x3649 x5414) 2) (x3649 (x3789 x5414 2))))
(assert (x8665 x5552 x7316 x172 x1256))
(assert (= x1791 (and (not x7378) x4123)))
(assert (x2252 x8268))
(assert (x4191 x172 (- x1256 x2012)))
(assert (= x7493 (and x4269 x6792)))
(assert (x391 x4841))
(assert (= x5558 (and (not x6497) x7861)))
(assert (= (and x1480 x3330) x5000))
(assert (= (x3649 (x5361 16156842317565293874272834530371880720966471053262404558597773956279093428224)) 16156842317565293874272834530371880720966471053262404558597773956279093428224))
(assert (x391 x127))
(assert (x2252 x3088))
(assert (x7060 x9008))
(assert (x391 x5074))
(assert (x391 x649))
(assert (=> (<= x1800 10000) (= (x7379 x1800) (x5361 x1800))))
(assert (x4156 x2780 x172 x1256 x172))
(assert (= (and x1273 (not x502)) x4521))
(assert (= (x3649 (x7379 x4384)) x4384))
(assert (= x1425 (and x5173 (not x1093))))
(assert (x391 x3242))
(assert (x391 x3691))
(assert (x8665 x2012 x4135 x3579 x3593))
(assert (= (and (not x9181) x4587) x1141))
(assert (x4191 x1256 (- x172 x3579)))
(assert (x8665 x5766 x8031 x940 x1726))
(assert (=> (>= 10000 x2062) (= (x7379 x2062) (x5361 x2062))))
(assert (= x907 (and (not x2665) x8045)))
(assert (x391 x6467))
(assert (x8665 x3579 x3593 x1726 x940))
(assert (x391 x8556))
(assert (= (=> (and (= x8984 x7314) (= x6558 x9106)) x2181) x9207))
(assert (=> (>= 10000 x8379) (= (x5361 x8379) (x7379 x8379))))
(assert (x8665 x1726 x940 x3593 x3579))
(assert (x391 x8023))
(assert (x6103 (- x7316 x4135)))
(assert (x8665 x530 x9039 x3593 x3579))
(assert (x1052 x4840 x3556))
(assert (x4191 x1726 (- x940 x5116)))
(assert (x4191 x530 (- x9039 x5390)))
(assert (x4191 x940 (- x1726 x4135)))
(assert (= x1076 (and x633 (not x364))))
(assert (= (and x3207 x2188) x7769))
(assert (x4191 x172 (- x1256 x5116)))
(assert (x391 x5716))
(assert (x391 x14))
(assert (x391 x5401))
(assert (x2252 x8900))
(assert (= (+ 2 (x3649 x6992)) (x3649 (x3789 x6992 2))))
(assert (x8665 x2012 x4135 x5766 x8031))
(assert (= x5902 (and x8903 x847)))
(assert (x391 x4677))
(assert (x2252 x6442))
(assert (x391 x6558))
(assert (x391 x30))
(assert (x4191 x2012 (- x4135 x8031)))
(assert (= (and x8718 x6676) x6419))
(assert (= x3174 (and x4538 x7213)))
(assert (x391 x5722))
(assert (= (and x7190 (not x5592)) x9209))
(assert (=> (>= 10000 x2004) (= (x7379 x2004) (x5361 x2004))))
(assert (x4156 x1256 x172 x8031 x5766))
(assert (x8665 x4135 x2012 x5390 x530))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4135))
(assert (x6103 (- x8031 x2012)))
(assert (x391 x2004))
(assert (= x5214 (and x2264 x4392)))
(assert (x8665 x172 x2780 x774 x490))
(assert (= (x5361 398450620) (x7379 398450620)))
(assert (x391 x2746))
(assert (x8665 x5766 x8031 x2780 x172))
(assert (= (and x5832 (not x3758)) x8266))
(assert (= x7330 (=> (= x5197 (< x3967 x1744)) (and (=> (and (not x5197) (and (= x4255 x2343) (= x5918 x8263) (= x2443 x58) (= x6903 x7072) (= (x7124 (- x3967 x1744)) x7072))) x6013) (=> x5197 x5477)))))
(assert (x391 x8246))
(assert (x391 x7310))
(assert (x391 x3079))
(assert (= (and (not x3320) x8196) x2724))
(assert (x391 x6577))
(assert (x391 x7172))
(assert (x2252 x8214))
(assert (x391 x1536))
(assert (x8665 x3579 x3593 x5766 x8031))
(assert (= (and x7463 x6451) x6))
(assert (= (and x6058 x2701) x6949))
(assert (x391 x718))
(assert (x391 x4119))
(assert (= x23 (or x1846 x3982 x6178 x5212)))
(assert (= (and x4161 (not x2946)) x1035))
(assert (x8665 x774 x490 x172 x2780))
(assert (x391 x5842))
(assert (= (and x802 x8577) x4069))
(assert (x391 x1165))
(assert (x391 x9118))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8031))
(assert (x391 x8361))
(assert (x391 x380))
(assert (x391 x1016))
(assert (x6103 (- x530 x5766)))
(assert (x391 x3354))
(assert (x391 x3317))
(assert (x6103 x7144))
(assert (= (+ 1 (x3649 x6681)) (x3649 (x3789 x6681 1))))
(assert (= x125 (and x8345 x6684)))
(assert (= (and (=> (and (and (and (<= x6101 1461501637330902918203684832716283019655932542975) (= (x7158 (x7379 x8676) x5954 0) x7757) (= (x3789 x7757 1) x8600) (= (ite (< 1 x8334) (not (= 0 x6101)) (< 1 x8334)) x2445) (> 1461501637330902918203684832716283019655932542976 x6101) (<= 0 x6101) (= x6101 (x8828 x8600))) (or (and (= x6639 x2445) (not x2445)) (and (and (= (x7158 (x7379 x6101) x5954 0) x3954) (>= x179 0) (= x6639 (not x5305)) (= x179 (x5853 x2478)) (= (x3789 x3954 2) x2478) (<= x179 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x179 x460) x5305)) x2445))) x3644) x3530) (=> (and (and (= x2035 0) (= x8676 x6372)) (not x3644)) x7141)) x6202))
(assert (= (and x3004 x5922) x5649))
(assert (= x3881 (or x2638 x6578)))
(assert (x391 x4241))
(assert (= (and x5137 (not x860)) x1138))
(assert (x391 x3958))
(assert (= x2423 (x3649 (x7379 x2423))))
(assert (= x2127 (or x1464 x7449)))
(assert (= x8020 (=> (= (= x8709 x6328) x7388) (and (=> x7388 x5949) (=> (and (= (< 0 x6328) x2721) (not x7388)) (and (=> (and x2721 (and (<= 0 x6457) (= x8641 (x7158 (x7379 x1640) x8957 0)) (>= 1461501637330902918203684832716283019655932542975 x8106) (= x3062 (x3789 x6872 1)) (<= 0 x1987) (<= 0 x8106) (= x6872 (x3789 x8641 1)) (= (x2241 x6872) x6457) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1987) (<= x6457 1461501637330902918203684832716283019655932542975) (= x1987 (x3906 x3062)) (= (= x1987 0) x8087) (> 1461501637330902918203684832716283019655932542976 x6457) (> 1461501637330902918203684832716283019655932542976 x8106) (= (x7850 x8641) x8106))) (and (=> x8087 x6133) (=> (and (and (= x8178 (= x8106 0)) (or (and (and (= x6921 (x3789 x6697 1)) (= (x7158 (x7379 x8106) x8957 0) x6697)) (not x8178)) (and x8178 (= (x3789 x8957 1) x6967)))) (not x8087)) x3101))) (=> (not x2721) x8053)))))))
(assert (x391 x1492))
(assert (x391 x3231))
(assert (x391 x1451))
(assert (= (and x448 x369) x5557))
(assert (x1052 x6443 x3329))
(assert (= (and x4827 x7957) x3146))
(assert (x6103 (- x5766 x3579)))
(assert (= (and (not x4925) x2126) x4098))
(assert (= (x5361 1856199391) (x7379 1856199391)))
(assert (x8665 x7316 x5552 x5116 x2012))
(assert (x4191 x3593 (- x3579 x5552)))
(assert (x8665 x172 x2780 x1726 x940))
(assert (x4191 x8031 (- x5766 x490)))
(assert (x4191 x9039 (- x530 x940)))
(assert (= (x3649 (x7379 x4102)) x4102))
(assert (x391 x986))
(assert (x4156 x2012 x4135 x490 x774))
(assert (= (x3649 (x7379 x204)) x204))
(assert (x4156 x490 x774 x1726 x940))
(assert (x391 x1375))
(assert (x391 x4855))
(assert (x391 x3109))
(assert (x8665 x7316 x5552 x3593 x3579))
(assert (= (and x3263 x6670) x6607))
(assert (= x9108 (and x1651 (not x3344))))
(assert (x391 x2727))
(assert (x391 x7208))
(assert (x391 x394))
(assert (x391 x4385))
(assert (x391 x1573))
(assert (= x5718 (x3649 (x7379 x5718))))
(assert (x8665 x4135 x2012 x1726 x940))
(assert (x2252 x2592))
(assert (x4191 x172 (- x1256 x5390)))
(assert (= (or x316 (and x4143 (not x1778))) x35))
(assert (x391 x6724))
(assert (x391 x6895))
(assert (x391 x3682))
(assert (x391 x3500))
(assert (x4191 x3579 (- x3593 x5390)))
(assert (= x8150 (=> (and (= x1687 x7702) (= x6268 x2649)) x7398)))
(assert (= (and x7418 (not x3435)) x3216))
(assert (x2252 x7560))
(assert (= x1361 (or x214 x6960)))
(assert (x6103 (- x490 x940)))
(assert (x8665 x8031 x5766 x530 x5390))
(assert (x6103 (- x2780 x3593)))
(assert (x6103 (- x3579 x7316)))
(assert (=> (>= 10000 x200) (= (x5361 x200) (x7379 x200))))
(assert (= x2020 (=> (and (= x4681 x6534) (= x3658 0)) x7911)))
(assert (= (and x2718 x183) x1872))
(assert (x8665 x4135 x2012 x2780 x172))
(assert (=> (>= 10000 x3283) (= (x5361 x3283) (x7379 x3283))))
(assert (x8665 x5390 x530 x1256 x172))
(assert (x391 x8584))
(assert (= x4100 (and x4117 (not x7182))))
(assert (= (and x5459 x9019) x4325))
(assert (x6103 (- x2012 x1256)))
(assert (=> (<= x1582 10000) (= (x7379 x1582) (x5361 x1582))))
(assert (x6103 (- x5116 x172)))
(assert (x1052 x4531 x3466))
(assert (x391 x7425))
(assert (= x5826 (and x2445 x2662)))
(assert (x391 x5340))
(assert (x4156 x940 x1726 x5116 x2012))
(assert (= x3745 (and (=> x7451 x730) (=> (and (not x7451) (and (= x8796 1) (= x3490 x8952))) x3957))))
(assert (= x8231 (and x8720 x5105)))
(assert (= (and (not x8292) x1201) x111))
(assert (x391 x6335))
(assert (= (not (and (= (x7158 (x7379 x1800) x1649 0) x4111) (= (x3789 x4111 1) x5081) (= x2268 (x6179 x5081)) (< x2268 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x2268) (<= 0 x2268))) x1821))
(assert (= (=> (and (and (not (= x7032 x4633)) (not (= x8030 x5402)) (>= 1461501637330902918203684832716283019655932542975 x8060) (not (= x8110 x8030)) (<= x8030 1461501637330902918203684832716283019655932542975) x7753 x3639 (not (= x985 x7305)) (>= x9165 0) (= (not (= x2464 0)) x2868) (<= 0 x8900) (>= 1461501637330902918203684832716283019655932542975 x7384) (not (= x7305 x8110)) (= x7641 (x8531 x6159)) (<= x9232 255) (>= x6108 0) x1680 (not (= x7032 x8030)) (= x8949 (x1913 x6159)) (<= 0 x2684) (= x7891 (not (= x5189 0))) (<= x7641 255) (< x2259 3842108676) (not (= x4633 x8346)) x8025 (>= 255 x5189) (<= 0 x932) (<= 0 x3782) (= x3782 (x3977 x6159)) (<= 0 x6475) (>= x1062 0) (>= x3244 0) (<= 0 x2809) (>= 1461501637330902918203684832716283019655932542975 x6183) (<= x3244 18446744073709551615) (<= 0 x105) (= x6492 (x3308 352)) (<= x8821 1461501637330902918203684832716283019655932542975) (= (< 0 (x6887 (x7379 x985))) x1808) (>= x3470 0) (>= x8866 0) (= 3583811254 x2259) (<= x3626 18446744073709551615) (>= x3509 0) (<= 0 x7461) x1731 (>= 1461501637330902918203684832716283019655932542975 x3921) (>= 255 x2464) (<= 0 x1915) (>= 1461501637330902918203684832716283019655932542975 x4633) (<= x3767 255) (not (= x8030 x7305)) (>= x93 0) (>= x8949 0) (>= x2031 0) (<= 0 x2217) (not (= x7032 x8110)) (= x6608 (x5985 (x7379 x8110))) (>= x436 0) (= x985 x3996) (>= x8746 0) (<= x2923 18446744073709551615) (= x2095 x5486) (not (= x8346 x7032)) (= x5326 (x3308 128)) (<= x1156 1461501637330902918203684832716283019655932542975) (<= x3509 18446744073709551615) (<= x7461 255) (> 256 x7461) (>= 18446744073709551615 x61) (= x6108 (x5985 (x7379 x7032))) (<= 0 x8072) (<= x7032 1461501637330902918203684832716283019655932542975) (not (= x7305 x5402)) (not (= x5402 x4633)) (<= x5486 1461501637330902918203684832716283019655932542975) (<= x387 255) (>= x808 0) (<= x3782 255) (>= x2923 0) (<= x8110 1461501637330902918203684832716283019655932542975) (= x4947 (not (= 0 x6433))) (<= 0 x3626) (= x8025 (> (x6887 (x7379 x8346)) 0)) (<= 0 x6255) (<= 0 x44) (>= 255 x2684) (not (= x7032 x5049)) (<= x9051 18446744073709551615) (>= x2919 0) (= (< 0 (x6887 (x7379 x8030))) x6021) x8407 (<= 0 x6412) (not (= x5049 x985)) (<= x808 1461501637330902918203684832716283019655932542975) (< x3782 256) (= (x3308 288) x5657) (>= x10 0) (< 0 x7305) (not (= x8110 x4633)) x6021 (= x4563 (x3308 256)) (>= 255 x2217) (>= 1461501637330902918203684832716283019655932542975 x936) (> 256 x2464) (= (x5985 (x7379 x7305)) x867) (= (x1163 x6159) x8746) (= x1308 x216) x6758 (>= 1461501637330902918203684832716283019655932542975 x44) (= x1117 (x5985 (x7379 x4633))) (<= x8072 1461501637330902918203684832716283019655932542975) (<= x3996 1461501637330902918203684832716283019655932542975) (= (x6887 (x7379 x7032)) x329) (= x93 x8030) (= (not (= 0 x3782)) x1143) (not (= x985 x5402)) (= x7253 (x3308 160)) (>= 1461501637330902918203684832716283019655932542975 x3429) (= (x5985 (x7379 x8346)) x2809) (not (< x2259 3583811254)) (not (= x8346 x8030)) (= (x7158 (x7379 x5658) (x5361 168) 0) x6159) (< 0 x985) (<= 0 x3075) (= x3639 (< 0 (x6887 (x7379 x5049)))) x1808 (<= x105 18446744073709551615) (>= x387 0) (<= x6238 255) (<= x1407 1461501637330902918203684832716283019655932542975) (>= 18446744073709551615 x710) (>= x61 0) (= x6448 (x5985 (x7379 x5402))) (not (= x8110 x5049)) (> 256 x8746) (<= 0 x6238) (<= 0 x936) (>= x7123 0) (>= 1461501637330902918203684832716283019655932542975 x6255) (not (= x4633 x5049)) (>= x5229 0) (<= 0 x9051) (= x6216 (x5985 (x7379 x8030))) (not (= x8346 x8110)) (<= x6412 1461501637330902918203684832716283019655932542975) (<= x5759 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x7305) (>= 1461501637330902918203684832716283019655932542975 x2031) (>= x3921 0) (<= 0 x6216) (= (not (= x8746 0)) x1355) (>= x9232 0) (<= x6475 255) (< 0 x4633) (>= x7384 0) (= x1731 (> (x6887 (x7379 x8110)) 0)) (> 256 x8949) (< 0 x329) (>= x6608 0) (not (= x8030 x4633)) (= (> (x6887 (x7379 x7032)) 0) x7753) (>= 1461501637330902918203684832716283019655932542975 x478) (<= x8746 255) (<= x2919 1461501637330902918203684832716283019655932542975) (<= 0 x3429) (= x5658 x1407) (>= 1461501637330902918203684832716283019655932542975 x985) (>= x1156 0) (>= x5759 0) (= (x4744 x6159) x5189) (>= x7237 0) (= x2880 (not (= x7641 0))) (not (= x7305 x4633)) (>= x6173 0) (<= x8900 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x3470) (>= x710 0) (>= 255 x10) (<= x5658 1461501637330902918203684832716283019655932542975) (>= x3996 0) (= x3866 (x5985 (x7379 x985))) (< x7641 256) (>= 1461501637330902918203684832716283019655932542975 x7237) (= (not (= 0 x8949)) x4537) (>= 255 x1915) (not (= x5049 x8030)) (not (= x8346 x985)) (= (not (= 0 x7461)) x8136) (not (= x985 x8110)) (<= x3075 255) (not (= x7032 x5402)) (= x1680 (< 0 (x6887 (x7379 x5402)))) (<= x436 255) (>= 255 x6433) (not (= x5402 x8346)) (<= 0 x6448) (>= x1407 0) (>= x1308 0) (<= 0 x5486) (>= 1461501637330902918203684832716283019655932542975 x93) (>= x3866 0) (< 0 x8030) (<= 0 x1117) (not (= x5049 x8346)) (<= 0 x8060) (>= x8821 0) (not (= x7305 x8346)) (> x8346 0) (= x8393 (x3308 192)) (= x2036 (x3308 320)) (not (= x8030 x985)) (= x3196 (x3308 224)) (<= x6173 1461501637330902918203684832716283019655932542975) (<= 0 x1001) (= (x2339 x6159) x2464) (>= 1461501637330902918203684832716283019655932542975 x932) (>= x5189 0) (= x6758 (> (x6887 (x7379 x7305)) 0)) (<= 0 x3767) (<= x8346 1461501637330902918203684832716283019655932542975) (< 0 x5049) (<= 0 x478) (<= 0 x6433) (> x8110 0) (= x7123 (x5985 (x7379 x5049))) (not (= x5402 x8110)) (<= x1308 1461501637330902918203684832716283019655932542975) (< 0 x7032) (not (= x5049 x5402)) (not (= x985 x7032)) (>= x7641 0) (< x5189 256) (= x8407 (< 0 (x6887 (x7379 x4633)))) (<= x8949 255) (= (x3973 x6159) x6433) (>= 1461501637330902918203684832716283019655932542975 x9165) (>= 1461501637330902918203684832716283019655932542975 x5049) (not (= x5049 x7305)) (>= x6183 0) (<= x8866 255) (<= x5402 1461501637330902918203684832716283019655932542975) (<= x1062 1461501637330902918203684832716283019655932542975) (> 256 x6433) (< 0 x5402) (<= 0 x867) (<= x1001 1461501637330902918203684832716283019655932542975) (<= x5229 1461501637330902918203684832716283019655932542975) (= x7461 (x6787 x6159)) (not (= x7305 x7032)) (>= x2464 0) (not (= x985 x4633)) (not (> 2678788150 x2259))) (and (and (= x2031 x2493) (= x5709 x2989) (<= x246 255) (= x7842 (not (= x3196 0))) (> 2023533118 x191) (= x3923 (not x6365)) (= x297 x7758) (> 256 x246) (= x7842 x9009) (>= 1461501637330902918203684832716283019655932542975 x2493) (> 2678788150 x191) (= (x6201 x4061) x246) (= x4564 x582) (= 1913449218 x191) (= x1989 (not (= x8393 0))) (= x6365 (= x246 0)) (= (not (= x5657 0)) x9056) (= x1500 x5916) (= x582 x794) (= (not (= 0 x4563)) x5916) (>= x246 0) (= (not (= 0 x6492)) x4967) (= x1407 x8199) (< 0 x1434) (= x1989 x2307) (= x259 (x7158 (x7379 x8199) (x5361 160) 0)) (= x5023 x4967) (not (= x191 1901074598)) (= x428 x1500) (= (or x4333 x428) x9001) (= (not (= 0 x5326)) x4564) (= (x6887 (x7379 x7032)) x1434) (not (= 1608758631 x191)) (not (> 1523576871 x191)) (= x4061 (x7158 (x7379 x2493) x259 0)) (= x9056 x7508) (= x297 (not (= x2036 0))) (= (ite x3923 1 0) x8309) (<= x8199 1461501637330902918203684832716283019655932542975) (= x4333 (not x794)) (not (= x191 1523576871)) (= (not (= x7253 0)) x2989) (not (= 1779720228 x191))) (and (= x2867 x1407) (= x8122 x7966) (= x3372 (x6887 (x7379 x7032))) (= x216 x2506) (= x2001 x2787) (= x1827 0) (= x78 x2031) (>= x7380 0) (= x3947 x8029) x6528 (= x238 (= x7429 0)) (< 0 x3372) (= x725 x193) (= x6293 x193) (= x8821 x4743) (= x5045 x3974) (= x78 x3370) (= x1014 (not x7966)) (>= 1461501637330902918203684832716283019655932542975 x2506) (>= 1461501637330902918203684832716283019655932542975 x7380) (= x2787 x725) (<= 0 x2296) (= x2867 x7848) (= x4743 x9134) (= (or x4865 x2910) x6528) (= x3370 x7448) (= x8029 x5045) (= (or x9001 x1014) x2910) (= x7380 x2494) (= (= x6293 0) x4865) (<= 0 x2506) (>= 1461501637330902918203684832716283019655932542975 x2296) (= x8122 (not (= 0 x8309))) (= x6801 x2494)))) (and (=> (and x238 (and (not (= 3069361948 x9093)) (not (= 3047081080 x9093)) (not (< x9093 2678788150)) (not (= x9093 2991318663)) (= (= x2867 x7848) x5262) (= 3266287495 x9093) (= x2800 x7848) (< x9093 3583811254) (not (< x9093 2991318663)))) (and (=> (and (and (= x6897 (= x6208 x4743)) (= x9134 x6606) (= (x2237 1461501637330902918203684832716283019655932542975 x4743) x6208)) x5262) (and (=> (and (and (= (= x3370 x7448) x3480) (= x7448 x2152)) x6897) (and (=> (and x3480 (and (= x2001 x9230) (= (= 0 x2787) x4278) (= x230 x3947))) (and (=> x4278 x2322) (=> (and (not x4278) (and (= x8603 (x1913 x3894)) (= x5193 (= x6089 0)) (= x9124 (= x5747 0)) (= x6315 (= 0 x4467)) (= x2284 (x4529 128)) (= (x4744 x3894) x6089) (= x7612 x8369) (<= x5068 255) (= x7343 (not x6315)) (<= 0 x5747) (< x2129 256) (<= 0 x8603) (< x6196 256) (= x317 (= x5230 0)) (= (x3973 x3894) x2129) (>= x6089 0) (>= x5068 0) (>= 255 x6089) (> 256 x8603) (= x939 x6617) (= (= 0 x6196) x9161) (= x8539 (= 0 x2129)) (< x4467 256) (= (not x9124) x8369) (>= 255 x6196) (= x3050 x2332) (= x7343 x1712) (<= x8603 255) (= x5230 (x1163 x3894)) (>= x2129 0) (<= x4467 255) (= x6091 x3335) (= (not x4046) x3050) (< x6089 256) (= (= 0 x5068) x3023) (= x6011 x6175) (= x5747 (x3977 x3894)) (= (x6787 x3894) x4467) (= x5051 (< 0 x2284)) (= x8550 x2453) (= (x7158 (x7379 x7848) (x5361 168) 0) x3894) (<= 0 x6196) (= x6196 (x2339 x3894)) (= x1963 (not x9161)) (<= x2129 255) (<= x5230 255) (< x5068 256) (= (not x8539) x2453) (> 256 x5747) (= x5068 (x8531 x3894)) (= (not x317) x6617) (<= 0 x5230) (= x6011 (not x5193)) (= x4332 x1963) (= (not x3023) x3335) (>= x4467 0) (= x4046 (= x8603 0)) (> 256 x5230) (<= x5747 255))) (and (=> (not x5051) x2322) (=> (and (and (= (x4529 256) x972) (= (= x972 0) x6663)) x5051) (and (=> (and (and (= (< 0 x6310) x8345) (>= 255 x6310) (> 256 x6310) (= x6310 (x6201 x9078)) (<= 0 x6310) (= x9078 (x7158 (x7379 x7448) x5121 0)) (= x5121 (x7158 (x7379 x7848) (x5361 160) 0))) x6663) (and (=> (and (and (and (= x6284 516) (= x7622 (x2125 (+ 24044834009420335638544845215851342251227478490780828673611325350056707489792 x8670))) (= x3593 (x5324 x5247)) (= (x3789 x5247 1) x2708) (= (x6580 416) x9091) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7316) (= (x3396 x2708) x7316) (= (x7158 (x7379 x7448) x2456 0) x5247) (= x8437 (= x8110 x7848)) (<= x3593 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3593 0) (<= 0 x7316) (= (x2237 26959946667150639794667015087019630673637144422540572481103610249215 x9091) x8670) (= x2456 (x7158 (x7379 x7848) (x5361 159) 0))) (or (and x8437 (and (>= x5645 0) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x4553) (= 2858086653 x4500) (not (< x4500 2691771752)) (= x3524 4) (= 1 x3919) (not (< x3524 4)) (not (= x4500 2835717307)) (not (= 2796547477 x4500)) (= 32 x8774) (= x3524 4) (< 0 x1085) (not (= 2691771752 x4500)) (> 2929553584 x4500) (= x1085 (x6887 (x7379 x8110))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5645) (not (> 2217467699 x4500)))) (and (not x8437) (and (or (and x9132 (and (not (< x1313 4)) (<= x6118 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 4 x1313) (= x6699 (x6887 (x7379 x5049))) (= 2858086653 x3129) (= x2937 77053863734975077137548456399560439977311721439096602559221323163398253314048) (= x8774 32) (> 2929553584 x3129) (= x1313 4) (= 1 x3919) (> x6699 0) (not (= 2691771752 x3129)) (not (> 2691771752 x3129)) (not (= x3129 2835717307)) (>= x6118 0) (not (= x3129 2796547477)) (not (< x3129 2217467699)))) (and (and (= (= x7848 x4633) x5450) (and x5450 (and (not (= x7231 2691771752)) (not (= x7231 2796547477)) (< 0 x2416) (= x3122 4) (= 4 x3122) (= x3919 1) (not (> 2217467699 x7231)) (not (> 2691771752 x7231)) (= x8023 77053863734975077137548456399560439977311721439096602559221323163398253314048) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7457) (not (= x7231 2835717307)) (not (> 4 x3122)) (<= 0 x7457) (= x8774 32) (> 2929553584 x7231) (= x2416 (x6887 (x7379 x4633))) (= x7231 2858086653)))) (not x9132))) (= (= x5049 x7848) x9132))))) x8345) x5852) (=> (not x8345) x2322))) (=> (not x6663) x2322))))))) (=> (and (= true x847) (not x3480)) x4020))) (=> (and (= true x847) (not x6897)) x4020))) (=> (and (not x5262) (= x847 true)) x4020))) (=> (and (= x847 true) (not x238)) x4020))) x6085))
(assert (x391 x2703))
(assert (x8637 x6333))
(assert (x4191 x490 (- x774 x4135)))
(assert (= (x7379 24044834009420335638544845215851342251227478490780828673611325350056707489792) (x5361 24044834009420335638544845215851342251227478490780828673611325350056707489792)))
(assert (= (=> (and (= x1554 x2355) (= x6905 0)) x1738) x9244))
(assert (= (and (not x5096) x8179) x1966))
(assert (x391 x2508))
(assert (= (and x8480 (not x3440)) x2450))
(assert (x391 x8105))
(assert (x391 x3280))
(assert (= x8782 (and (not x2302) x114)))
(assert (x4191 x5766 (- x8031 x9039)))
(assert (x2252 x4802))
(assert (x391 x2388))
(assert (= (or x5801 x8913 x89 x9020 x5748 x5352) x353))
(assert (= x298 (and x8264 x2065)))
(assert (= (and x357 x7923) x7900))
(assert (x391 x5636))
(assert (= x3364 (and x6010 (not x277))))
(assert (= x7673 (or x1684 x8645)))
(assert (x6103 (- x490 x530)))
(assert (= (and x1860 x1224) x1360))
(assert (x4156 x2012 x4135 x8031 x5766))
(assert (x8665 x2012 x4135 x490 x774))
(assert (x391 x9163))
(assert (= (+ (x3649 x3640) 1) (x3649 (x3789 x3640 1))))
(assert (= (=> (and (= x6558 0) (= x8956 x7314)) x9207) x5894))
(assert (= (or x4378 x3284) x4115))
(assert (x391 x6094))
(assert (x6103 (- x172 x3593)))
(assert (x2252 x4426))
(assert (= (and x1275 x3962) x8586))
(assert (= (and x9004 x7878) x8667))
(assert (= x8932 (and x9043 x4221)))
(assert (x391 x509))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6893))
(assert (x391 x8106))
(assert (= (and (not x1238) x3218) x3893))
(assert (x1052 x8964 x2797))
(assert (x391 x3294))
(assert (x4191 x5116 (- x2012 x4135)))
(assert (= x8966 (or x7672 x6695)))
(assert (x2252 x8884))
(assert (= (and x4676 x5926) x4565))
(assert (=> (<= x219 10000) (= (x5361 x219) (x7379 x219))))
(assert (x8665 x172 x1256 x8031 x5766))
(assert (x391 x3757))
(assert (x391 x4518))
(assert (= x8545 (and x540 (not x5886))))
(assert (x391 x6641))
(assert (x6103 (- x530 x9039)))
(assert (= x6098 (and x2278 (not x8377))))
(assert (x391 x9262))
(assert (x391 x6983))
(assert (x391 x8124))
(assert (x4156 x2012 x4135 x1726 x940))
(assert (= x7120 (or x5834 x6910)))
(assert (x391 x8444))
(assert (x4156 x530 x9039 x8031 x5766))
(assert (x391 x3345))
(assert (= x8836 (and x5264 (not x3319))))
(assert (x391 x2656))
(assert (x391 x6951))
(assert (x391 x2359))
(assert (= (and (not x2998) x8180) x1404))
(assert (=> (>= 10000 x7814) (= (x7379 x7814) (x5361 x7814))))
(assert (x391 x4384))
(assert (x8665 x4135 x2012 x940 x1726))
(assert (= x3451 (and x4975 x5347)))
(assert (x4156 x1726 x940 x5390 x530))
(assert (x391 x4311))
(assert (x391 x7350))
(assert (= (+ (x3649 x7827) 2) (x3649 (x3789 x7827 2))))
(assert (x391 x1891))
(assert (= x2999 (and x2394 (not x5070))))
(assert (x2252 x3166))
(assert (= x677 (and x5001 x989)))
(assert (= x2492 (and x1795 x9061)))
(assert (x391 x3651))
(assert (= x3544 (and x8414 (not x1696))))
(assert (x391 x2816))
(assert (= x4585 (and x5078 x5452)))
(assert (x391 x8465))
(assert (x6103 (- x3579 x774)))
(assert (= x4422 (=> (and (= x7817 x3722) (= x5216 x5097)) x3791)))
(assert (= x6422 (=> (and (= x129 x7844) (= 0 x2934)) x524)))
(assert (x391 x301))
(assert (= (=> (and (= x8608 x1730) (= x5150 x2261)) x5027) x1661))
(assert (x4156 x172 x2780 x1726 x940))
(assert (x4156 x172 x1256 x3593 x3579))
(assert (= x5828 (and x7825 x7726)))
(assert (x4156 x172 x2780 x1256 x172))
(assert (= (x3649 (x7379 x393)) x393))
(assert (x391 x7540))
(assert (x391 x8644))
(assert (x391 x4674))
(assert (and (x3303 x8889 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4253 x8889 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x4077 x8889 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x4526 x8889 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x8889)) (x5837 x8889 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x391 x1880))
(assert (x4191 x5116 (- x2012 x940)))
(assert (x391 x4549))
(assert (=> (>= 10000 x4698) (= (x7379 x4698) (x5361 x4698))))
(assert (= (or x6470 x7020) x1788))
(assert (x391 x2284))
(assert (x8665 x530 x9039 x3579 x3593))
(assert (= (=> (and (= (x3789 x1174 1) x3838) (= (x3789 x6564 1) x1174) (= x6564 (x7158 (x7379 x1640) x1566 0))) x5255) x2756))
(assert (x6103 (- x774 x5116)))
(assert (x391 x142))
(assert (= x5950 (and x754 (not x8653))))
(assert (x6103 (- x9039 x3579)))
(assert (= (or (and x4591 (not x5729)) x7780 (and x6059 x8732) (and x2631 x330) (and x2925 (not x3773)) x3903) x9012))
(assert (x6103 (- x8031 x7316)))
(assert (x391 x1643))
(assert (= (x3649 (x7379 x5851)) x5851))
(assert (x2252 x2523))
(assert (= (or x5836 x1086) x2267))
(assert (x391 x2374))
(assert (x391 x911))
(assert (= x882 (and x8341 x7743)))
(assert (x391 x4752))
(assert (= x6001 (and x1405 (not x7947))))
(assert (= x8078 (and x1369 x1196)))
(assert (= x6387 x5477))
(assert (= x7708 (or x893 x967 x6493 x3630 x4585 x6561 x8492 x4098 x5406)))
(assert (x2252 x2094))
(assert (x391 x5009))
(assert (x6103 (- x1256 x4135)))
(assert (= (+ 1 (x3649 x3832)) (x3649 (x3789 x3832 1))))
(assert (= (and x5375 x4644) x6898))
(assert (= x2169 (and x5304 (not x2218))))
(assert (= (and x2272 x6436) x5907))
(assert (= x7607 (and x6095 x2884)))
(assert (x391 x6626))
(assert (x391 x2555))
(assert (x1052 x5482 x3366))
(assert (= x5192 (or x1300 x9162)))
(assert (= x4916 (and x5415 x3067)))
(assert (x391 x1182))
(assert (= (or x1132 x492 x2618 x7997) x1494))
(assert (x4191 x5390 (- x530 x1726)))
(assert (x4191 x5552 (- x7316 x9039)))
(assert (= x9033 (and x5404 (not x8496))))
(assert (= x4773 (and x5282 x1992)))
(assert (x4191 x2012 (- x5116 x4135)))
(assert (= x1779 (=> (and (= x299 x6807) (= x3412 x2159) (= x1525 x8330) (= x1637 x1090)) x383)))
(assert (= x4457 (and x8626 x9089)))
(assert (= (and x28 (not x6009)) x8291))
(assert (x391 x8107))
(assert (= (or x8566 (and x580 (not x2596)) (and x7289 x1242) x6043 (and (not x2407) x6544) (and x2943 x3126)) x6746))
(assert (= x3028 (and (not x1210) x8324)))
(assert (x391 x8484))
(assert (= (and x1778 x4143) x316))
(assert (= x3275 (and x7264 x9141)))
(assert (x4191 x2012 (- x5116 x490)))
(assert (x391 x6457))
(assert (x391 x4204))
(assert (x391 x2031))
(assert (= (x5361 1461501637330902918203684832716283019655932542976) (x7379 1461501637330902918203684832716283019655932542976)))
(assert (x6103 (- x5552 x2780)))
(assert (= (and x269 x7217) x8917))
(assert (x391 x5448))
(assert (x391 x8801))
(assert (x8665 x2012 x4135 x1256 x172))
(assert (= x578 (and x8446 (not x3523))))
(assert (x391 x7989))
(assert (x391 x4850))
(assert (x391 x173))
(assert (x6103 x3593))
(assert (= x3157 (and x7573 x1881)))
(assert (x6103 x6132))
(assert (x7060 x4772))
(assert (x6103 (- x172 x5116)))
(assert (= x2865 (and (not x5743) x762)))
(assert (x391 x928))
(assert (x8665 x1726 x940 x9039 x530))
(assert (= x5754 (or x3157 (and x6485 x6145) x57 x4701 (and x5599 x4089) (and x4707 x3369))))
(assert (= (+ (x3649 x1485) 1) (x3649 (x3789 x1485 1))))
(assert (x391 x8808))
(assert (x2252 x7670))
(assert (= x7133 (or (and x4627 x1301) x731 x7818 (and (not x6915) x1268) (and x3444 x3869) (and (not x5302) x1919))))
(assert (x391 x4802))
(assert (x8637 x3770))
(assert (x2252 x1092))
(assert (x391 x3964))
(assert (= (=> (and (>= x4453 0) (= x7965 x2672) (<= 0 x8570) (>= x9155 0) (= x4453 (x583 x4338)) (= x8596 (x3789 x5713 1)) (= (x2125 (+ 32 x135)) x3013) (<= x8570 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3789 x4338 1) x5713) (<= x4453 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1863 x8596) x8570) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9155) (= (x4747 x5713) x9155) (= x7345 x5257)) x809) x6765))
(assert (x391 x3658))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x151 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x151 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x151 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x151 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x151 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x151 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x151)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x151))) (x8005 1000000000000000000 x151) (= (x7029 1000000000000000000 x151) (* 1000000000000000000 x151)) (x1844 1000000000000000000 x151) (x7186 1000000000000000000 x151) (x997 1000000000000000000 x151) (x1348 1000000000000000000 x151)))
(assert (x391 x1007))
(assert (= (and x5821 x4854) x3555))
(assert (x391 x915))
(assert (x391 x6180))
(assert (x391 x123))
(assert (= x9276 (and x5222 x5560)))
(assert (x8637 x736))
(assert (x8665 x5766 x8031 x1726 x940))
(assert (x7060 x6814))
(assert (x4156 x4135 x2012 x1256 x172))
(assert (x391 x7614))
(assert (x6103 x7438))
(assert (= x906 (=> (= (= 0 x6414) x4419) (and (=> (and (= (or (> x4926 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x4926 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4926)))) x8977) (not x4419)) (and (=> (and (not x8977) (and (= x5206 32) (= x6367 1))) x4845) (=> x8977 x2967))) (=> x4419 x2967)))))
(assert (x6103 (- x774 x5766)))
(assert (x391 x7838))
(assert (x391 x8608))
(assert (x391 x350))
(assert (x391 x7113))
(assert (x391 x4018))
(assert (x391 x6662))
(assert (x7060 x3221))
(assert (x391 x4710))
(assert (= (and x8378 x6621) x3441))
(assert (= (and x2676 x53) x5264))
(assert (= x5746 (and x7058 (not x4))))
(assert (x391 x7965))
(assert (= (and x8695 (not x261)) x3935))
(assert (= x6994 x7021))
(assert (x2252 x6372))
(assert (x391 x2923))
(assert (x391 x7532))
(assert (= (or x8791 x1111) x6037))
(assert (x391 x124))
(assert (= x8114 (and x7065 x2657)))
(assert (x391 x5082))
(assert (= (x3649 (x7379 x1593)) x1593))
(assert (x391 x8164))
(assert (= x2950 (and (not x52) x978)))
(assert (=> (<= x180 10000) (= (x5361 x180) (x7379 x180))))
(assert (= x5980 (and x976 (not x5600))))
(assert (x391 x1338))
(assert (= x91 (and x2286 x9067)))
(assert (= x979 (or x8981 x907)))
(assert (x391 x1888))
(assert (x391 x8827))
(assert (x8665 x530 x5390 x940 x1726))
(assert (x391 x7032))
(assert (= x2043 (and x6080 x4890)))
(assert (= (x3649 (x7379 x1493)) x1493))
(assert (x391 x815))
(assert (= x4802 (x3649 (x7379 x4802))))
(assert (= (x3649 (x3789 x4206 1)) (+ 1 (x3649 x4206))))
(assert (= x3291 (or x5730 x8293)))
(assert (x1052 x6333 x5570))
(assert (= x3381 (and (not x3846) x7600)))
(assert (x391 x3912))
(assert (x6103 (- x5552 x1256)))
(assert (x391 x1388))
(assert (x391 x5941))
(assert (= (x3649 (x7379 x1735)) x1735))
(assert (x8665 x3579 x3593 x1256 x172))
(assert (x391 x6289))
(assert (x391 x2738))
(assert (x391 x2840))
(assert (= (and x1625 x7959) x281))
(assert (= (and (not x5101) x3056) x2293))
(assert (x391 x3815))
(assert (x8665 x7316 x5552 x5766 x8031))
(assert (x391 x7974))
(assert (= x4754 (and (not x5450) x8425)))
(assert (x391 x2334))
(assert (x391 x9243))
(assert (= (x3649 (x7379 x4492)) x4492))
(assert (x391 x4456))
(assert (= (x3649 (x3789 x5249 1)) (+ 1 (x3649 x5249))))
(assert (=> (>= 10000 x2403) (= (x5361 x2403) (x7379 x2403))))
(assert (x391 x4746))
(assert (x391 x8541))
(assert (x8665 x5766 x8031 x530 x5390))
(assert (= x7294 (and x4357 (not x2824))))
(assert (x391 x7575))
(assert (= x1505 (and x3210 x8074)))
(assert (x391 x8670))
(assert (= x8395 (and (not x7026) x5712)))
(assert (x391 x1604))
(assert (x6103 (- x8031 x490)))
(assert (x391 x1515))
(assert (x6103 (- x1726 x5766)))
(assert (x4191 x1256 (- x172 x7316)))
(assert (x391 x5011))
(assert (= (x7379 2858086653) (x5361 2858086653)))
(assert (= (and x2920 x7215) x8320))
(assert (= x9066 (and (not x9258) x167)))
(assert (x391 x9002))
(assert (=> (<= x1891 10000) (= (x5361 x1891) (x7379 x1891))))
(assert (x391 x221))
(assert (x391 x1046))
(assert (= x1089 (and x2747 (not x7888))))
(assert (= x4346 (or x7730 x7430)))
(assert (= (and x4015 x2599) x3431))
(assert (x4191 x774 (- x490 x3579)))
(assert (= x6559 (and x1421 (not x7240))))
(assert (x8665 x5390 x530 x1726 x940))
(assert (=> (<= x6809 10000) (= (x7379 x6809) (x5361 x6809))))
(assert (= x7539 (and x205 x8087)))
(assert (= x1132 (or x1032 x8563)))
(assert (x391 x7345))
(assert (= x8657 (and x7220 x3203)))
(assert (x391 x2903))
(assert (= (or x778 x3883) x5896))
(assert (x2252 x9058))
(assert (= (and x5341 x6001) x2079))
(assert (x391 x1372))
(assert (x391 x958))
(assert (x391 x4634))
(assert (=> (<= x4486 10000) (= (x7379 x4486) (x5361 x4486))))
(assert (= x3695 (and x2058 x2390)))
(assert (x391 x2341))
(assert (x391 x3991))
(assert (x391 x6948))
(assert (= (x5361 10742207464693106059581744854972325794081737850190833080250671788038469713920) (x7379 10742207464693106059581744854972325794081737850190833080250671788038469713920)))
(assert (x391 x2695))
(assert (= x7468 (and x7761 x3416)))
(assert (x391 x1265))
(assert (x391 x443))
(assert (= x9263 (=> (and (= x1559 x7574) (= x7373 x5822)) x5770)))
(assert (x6103 (- x4135 x5390)))
(assert (= (=> (and (= x2694 (= 0 x476)) (or (and (= x6702 (x3789 x8027 2)) x2694) (and (not x2694) (= x7004 (x7158 (x7379 x476) x8027 0))))) x9168) x3522))
(assert (= (or (and (not x7282) x2387) x9143 (and x7476 x5158) (and x8864 (not x6646)) x508 (and x8075 x6635)) x8439))
(assert (x391 x6739))
(assert (= (=> (and (= x2374 x135) (= x8176 x8760)) x4651) x8609))
(assert (x391 x8071))
(assert (=> (>= 10000 x173) (= (x7379 x173) (x5361 x173))))
(assert (x8665 x490 x774 x940 x1726))
(assert (= x8854 (and (not x8577) x802)))
(assert (= x1577 (and x224 x8867)))
(assert (= (+ (x3649 x7518) 1) (x3649 (x3789 x7518 1))))
(assert (= (or x7595 x5753) x1897))
(assert (x391 x3874))
(assert (x391 x3312))
(assert (x391 x4283))
(assert (= x8759 (and (not x2173) x4404)))
(assert (=> (>= 10000 x9058) (= (x5361 x9058) (x7379 x9058))))
(assert (= x6839 (or x7851 x2527)))
(assert (= (and x4934 (not x7492)) x6358))
(assert (= x2459 (and x4310 (not x5579))))
(assert (x4191 x940 (- x1726 x774)))
(assert (x391 x3360))
(assert (= (and (not x43) x1278) x8179))
(assert (x391 x2364))
(assert (= (and (not x7306) x4034) x3363))
(assert (x6103 (- x1256 x8031)))
(assert (= (and x2994 x6406) x3376))
(assert (= (and x1419 x6383) x5864))
(assert (x391 x5800))
(assert (= x6227 (and x4493 x4724)))
(assert (x391 x1563))
(assert (= x3975 (and x3459 (not x6542))))
(assert (x8665 x2780 x172 x8031 x5766))
(assert (= (and x7052 (not x455)) x4469))
(assert (= x596 (and (not x8719) x3946)))
(assert (x4191 x3579 (- x3593 x774)))
(assert (= x3957 (=> (and (or (and (not x2219) (and (and (> 1461501637330902918203684832716283019655932542976 x422) (>= x422 0) (= (x1938 x4605) x422) (= x3107 (= x422 0)) (>= 1461501637330902918203684832716283019655932542975 x422)) (or (and (and (= x7864 (x3789 x7156 1)) (= x6100 (x3789 x7864 1)) (= x7448 x720) (= x7156 (x7158 (x7379 x7448) x3914 0)) (= x2483 x9240) (= x2861 (x3789 x4605 1)) (= x2483 (x2125 (+ 96 x9275)))) x3107) (and (and (> 1461501637330902918203684832716283019655932542976 x4632) (<= 0 x4632) (= (x3789 x4273 1) x2380) (= (x7158 (x7379 x4632) x3914 0) x4273) (= x9240 x1736) (= (x2125 (+ 96 x9275)) x1736) (= x701 (x3789 x4605 1)) (= x9248 (x3789 x7347 1)) (= x720 x4632) (>= 1461501637330902918203684832716283019655932542975 x4632) (= (x155 x701) x4632) (= (x3789 x9248 1) x7889) (= x7347 (x7158 (x7379 x7448) x3914 0))) (not x3107))))) (and (and (or (and x3844 (and (= x3603 (x2125 (+ 96 x9275))) (>= 1461501637330902918203684832716283019655932542975 x9164) (> 1461501637330902918203684832716283019655932542976 x9164) (= x2764 (x3789 x4163 1)) (= (x3789 x6728 1) x9017) (>= x9164 0) (= x6728 (x7158 (x7379 x7448) x3914 0)) (= x3490 x720) (= x7296 (x3789 x9017 1)) (= x9240 x3603) (= x4163 (x7158 (x7379 x9164) x3914 0)) (= (x7158 (x7379 x3490) x3914 0) x1933) (= x2685 (x7158 (x7379 x3490) x3914 0)) (= (x6686 x1933) x9164))) (and (and (= x9240 x2183) (= x720 x3490) (= (x7158 (x7379 x7448) x3914 0) x1124) (= x1988 (x3789 x3602 1)) (= x3602 (x3789 x1124 1)) (= x2183 (x2125 (+ x9275 96))) (= x2666 (x7158 (x7379 x3490) x3914 0))) (not x3844))) (and (= (> x5291 0) x3844) (> 1461501637330902918203684832716283019655932542976 x2213) (>= 1461501637330902918203684832716283019655932542975 x2213) (= (x1938 x4605) x2213) (= (x7124 (- x3490 x2213)) x5291) (<= 0 x2213))) x2219)) (= (ite (< x8796 x8334) (not (= 0 x3490)) (> x8334 x8796)) x2219)) x2732)))
(assert (x4156 x5116 x2012 x9039 x530))
(assert (= (x7379 2678788150) (x5361 2678788150)))
(assert (x8665 x5766 x8031 x3579 x3593))
(assert (x391 x398))
(assert (x6103 (- x9039 x490)))
(assert (= (x3649 (x3789 x511 2)) (+ 2 (x3649 x511))))
(assert (x391 x8530))
(assert (x391 x1845))
(assert (x8665 x9039 x530 x940 x1726))
(assert (= x6298 (and x7514 x4074)))
(assert (x7060 x1484))
(assert (x6103 (- x774 x9039)))
(assert (= (and x4380 x913) x2736))
(assert (x391 x7424))
(assert (= x735 (or x8303 x6462)))
(assert (x391 x3831))
(assert (= (and (not x2834) x5020) x7449))
(assert (x6103 (- x7316 x5390)))
(assert (= (=> (= (= x5071 0) x1693) (and (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3274) (and (> 32 x3274) (= true (<= x3274 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1613) (not x1693)) (and (=> x1613 x2743) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8330) (= x5953 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2674))) (<= 0 x8330) (= (> x8330 x5953) x1470)) (not x1613)) (and (=> (and (not x1470) (and (>= x4783 0) (= (x7158 (x7379 x7032) (x5361 5) 0) x3378) (<= x4783 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2125 (+ x8330 x2674)) x4550) (= (x4939 x3378) x4783) (= x2286 (> x4783 x5953)))) (and (=> (and (not x2286) (and (= x5984 32) (= 1 x6158) (= (x2125 (+ x2674 x4783)) x694))) x1746) (=> x2286 x2743))) (=> x1470 x2743))))) (=> x1693 x2743))) x1399))
(assert (x8665 x7316 x5552 x490 x774))
(assert (x8665 x490 x774 x4135 x2012))
(assert (x391 x9013))
(assert (x391 x6979))
(assert (x391 x36))
(assert (=> (>= 10000 x8474) (= (x7379 x8474) (x5361 x8474))))
(assert (x2252 x6458))
(assert (x391 x6105))
(assert (x4191 x9039 x530))
(assert (x7060 x679))
(assert (x391 x8529))
(assert (x391 x7996))
(assert (x2252 x2420))
(assert (x391 x385))
(assert (x391 x2111))
(assert (=> (>= 10000 x2111) (= (x5361 x2111) (x7379 x2111))))
(assert (x391 x5956))
(assert (= x7256 (or x8290 x4945)))
(assert (x4191 x774 (- x490 x2780)))
(assert (= x397 (or x2645 x4541)))
(assert (= (or x8545 x8183) x1925))
(assert (= (x3649 (x7379 x6589)) x6589))
(assert (x391 x8652))
(assert (= (or x3607 x6929) x565))
(assert (x6103 (- x5116 x5766)))
(assert (x4156 x3593 x3579 x5116 x2012))
(assert (x4156 x5390 x530 x4135 x2012))
(assert (= x8699 (and x3486 x6571)))
(assert (x391 x377))
(assert (x8665 x3593 x3579 x9039 x530))
(assert (= x1342 (and (not x1567) x3011)))
(assert (= x3496 (=> (and (= x1220 x8839) (= x2406 x3408)) x8428)))
(assert (x8665 x530 x9039 x1726 x940))
(assert (= (+ (x3649 x5060) 1) (x3649 (x3789 x5060 1))))
(assert (= (+ (x3649 x5915) 1) (x3649 (x3789 x5915 1))))
(assert (= (and x6155 x1685) x7933))
(assert (x2252 x3501))
(assert (x391 x6449))
(assert (x4191 x3579 (- x3593 x490)))
(assert (x391 x3389))
(assert (x8665 x530 x9039 x1256 x172))
(assert (x391 x6610))
(assert (= x4969 (or x7649 x4069)))
(assert (x6103 (- x7316 x940)))
(assert (= (+ (x3649 x7992) 2) (x3649 (x3789 x7992 2))))
(assert (x391 x3348))
(assert (= (or x6605 x190) x6262))
(assert (x391 x6034))
(assert (x391 x3587))
(assert (= x4594 (and x7564 (not x2176))))
(assert (x8637 x1644))
(assert (= x1673 (=> (= x7940 (= x5240 x4843)) (and (=> (and (= x1691 (> x4843 0)) (not x7940)) (and (=> (not x1691) x5255) (=> (and x1691 (and (> 1461501637330902918203684832716283019655932542976 x1487) (= x7506 (x1918 x6364)) (= x1648 (x3789 x1490 1)) (= (x6342 x1490) x1487) (= x917 (x225 x1648)) (<= x917 1461501637330902918203684832716283019655932542975) (>= x917 0) (= (x7158 (x7379 x1640) x1566 0) x1490) (= x6364 (x3789 x1648 1)) (>= x7506 0) (<= x1487 1461501637330902918203684832716283019655932542975) (= x8568 (= 0 x7506)) (> 1461501637330902918203684832716283019655932542976 x917) (<= 0 x1487) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7506))) (and (=> x8568 x6976) (=> (and (not x8568) (and (= (= 0 x1487) x6596) (or (and (and (= x5177 (x7158 (x7379 x1487) x1566 0)) (= x3777 (x3789 x5177 1))) (not x6596)) (and x6596 (= (x3789 x1566 1) x5176))))) x6999))))) (=> x7940 x7132)))))
(assert (x6103 x9039))
(assert (x391 x3196))
(assert (= (or (and x3046 (not x8159)) x2492 (and x8013 x5419) (and x2068 (not x5783)) (and x7056 x407) x9206) x8563))
(assert (x391 x6232))
(assert (= x7727 (=> (= x4890 (= x6525 0)) (and (=> x4890 x2372) (=> (and (not x4890) (= x5743 (or (and (> 32 x5842) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5842) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5842)))) (and (=> x5743 x2372) (=> (and (not x5743) (= x3828 1)) x7739)))))))
(assert (x6103 (- x5552 x8031)))
(assert (= x5613 (and x7610 x7640)))
(assert (x7060 x7525))
(assert (x391 x7037))
(assert (= (=> (and (= x7829 0) (= x3209 x129)) x7858) x4948))
(assert (x391 x6906))
(assert (= x5419 (and x8302 x4576)))
(assert (= (+ 2 (x3649 x13)) (x3649 (x3789 x13 2))))
(assert (= (or x4356 x6981) x2786))
(assert (= (x3649 (x5361 988262939)) 988262939))
(assert (= (x3649 (x5361 599290589)) 599290589))
(assert (x4191 x7316 (- x5552 x940)))
(assert (x2252 x8125))
(assert (= x6051 (and x711 x5192)))
(assert (x8637 x1406))
(assert (x4191 x9039 (- x530 x490)))
(assert (x391 x7715))
(assert (x4191 x9039 (- x530 x8031)))
(assert (= (and x2409 x6648) x433))
(assert (x391 x5967))
(assert (x391 x2901))
(assert (x391 x9116))
(assert (= (=> (= (= x3301 x7375) x7376) (and (=> (and (= x8551 (< 0 x3301)) (not x7376)) (and (=> (not x8551) x7554) (=> (and (and (= x7338 (x7158 (x7379 x2879) x5581 0)) (= x3538 (x8532 x7338)) (< x3538 1461501637330902918203684832716283019655932542976) (= x6895 (x6725 x4016)) (= x4797 (= x2350 0)) (= x4834 (x3789 x4016 1)) (<= 0 x6895) (= x4016 (x3789 x7338 1)) (<= 0 x3538) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2350) (= x2350 (x1729 x4834)) (<= 0 x2350) (<= x3538 1461501637330902918203684832716283019655932542975) (<= x6895 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x6895)) x8551) (and (=> (and (not x4797) (and (= x3106 (= x3538 0)) (or (and (= x7916 (x3789 x5581 1)) x3106) (and (and (= (x3789 x4515 1) x3690) (= (x7158 (x7379 x3538) x5581 0) x4515)) (not x3106))))) x6727) (=> x4797 x3533))))) (=> x7376 x4556))) x3951))
(assert (x391 x8501))
(assert (x6103 (- x5390 x774)))
(assert (x391 x5232))
(assert (= (or x6266 x144 x2141 x6438 x7062 x406) x3084))
(assert (=> (>= 10000 x3001) (= (x5361 x3001) (x7379 x3001))))
(assert (x391 x1385))
(assert (x391 x4155))
(assert (= x5742 (or x7216 x2447)))
(assert (= x1046 (x3649 (x7379 x1046))))
(assert (= (and x7738 (not x8283)) x2929))
(assert (= (+ 1 (x3649 x5348)) (x3649 (x3789 x5348 1))))
(assert (= (+ (x3649 x8488) 1) (x3649 (x3789 x8488 1))))
(assert (= x359 (x3649 (x7379 x359))))
(assert (= (=> (and (= x711 (ite (> x8334 x2035) (not (= 0 x6372)) (> x8334 x2035))) (or (and (not x711) (and (and (>= 1461501637330902918203684832716283019655932542975 x8556) (<= 0 x8556) (> 1461501637330902918203684832716283019655932542976 x8556) (= x8556 (x3625 x182)) (= x7760 (= 0 x8556))) (or (and (and (= (x3789 x8274 1) x6385) (> 1461501637330902918203684832716283019655932542976 x3166) (>= 1461501637330902918203684832716283019655932542975 x3166) (= (x4995 x3270) x3166) (= x3166 x2700) (= x7993 (x3789 x7908 1)) (= x3270 (x3789 x182 1)) (<= 0 x3166) (= x3889 (x2125 (+ 96 x8942))) (= (x7158 (x7379 x7448) x5954 0) x8274) (= x7908 (x7158 (x7379 x3166) x5954 0)) (= x3889 x4214) (= (x3789 x6385 1) x8236)) (not x7760)) (and (and (= (x3789 x7788 1) x7421) (= x2700 x7448) (= x5632 x4214) (= (x2125 (+ 96 x8942)) x5632) (= x4172 (x3789 x182 1)) (= (x3789 x7421 1) x983) (= x7788 (x7158 (x7379 x7448) x5954 0))) x7760)))) (and x711 (and (and (<= x6909 1461501637330902918203684832716283019655932542975) (= x4482 (> x2639 0)) (>= x6909 0) (> 1461501637330902918203684832716283019655932542976 x6909) (= (x7124 (- x6372 x6909)) x2639) (= (x3625 x182) x6909)) (or (and (and (= x4214 x6070) (= x6372 x2700) (= (x7158 (x7379 x6372) x5954 0) x2081) (= x7518 (x3789 x8411 1)) (= (x2125 (+ x8942 96)) x6070) (= (x3789 x7518 1) x6532) (= x8411 (x7158 (x7379 x7448) x5954 0))) (not x4482)) (and (and (= x4214 x6755) (= (x3789 x7179 1) x479) (< x1582 1461501637330902918203684832716283019655932542976) (= x2700 x6372) (= x2120 (x3789 x4376 1)) (= (x3789 x479 1) x8788) (>= 1461501637330902918203684832716283019655932542975 x1582) (= x4376 (x7158 (x7379 x1582) x5954 0)) (= x6755 (x2125 (+ x8942 96))) (= (x7158 (x7379 x6372) x5954 0) x3446) (>= x1582 0) (= (x7158 (x7379 x7448) x5954 0) x7179) (= (x7158 (x7379 x6372) x5954 0) x4997) (= (x4899 x3446) x1582)) x4482)))))) x1894) x7141))
(assert (x391 x2715))
(assert (= (and (not x8275) x2984) x2029))
(assert (= (+ (x3649 x8587) 1) (x3649 (x3789 x8587 1))))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x679 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x679 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x679)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x679))) (x8005 1000000000000000000 x679) (= (x7029 1000000000000000000 x679) (* 1000000000000000000 x679)) (x1844 1000000000000000000 x679) (x7186 1000000000000000000 x679) (x997 1000000000000000000 x679) (x1348 1000000000000000000 x679)))
(assert (x391 x5100))
(assert (x391 x8510))
(assert (= (=> (and (or (and (not x4602) (= 0 x4000)) (and (= x8607 x4000) x4602)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6922) (= (> x8607 x6922) x4602) (>= x6922 0))) x7095) x5770))
(assert (= x6453 (x3649 (x7379 x6453))))
(assert (x1306 x2746 x5769))
(assert (x391 x2780))
(assert (x6103 (- x3579 x172)))
(assert (x391 x3277))
(assert (x391 x4681))
(assert (x6103 (- x4135 x5552)))
(assert (= x90 (or x2249 x5907 x60 x4660 x7819 x2601)))
(assert (x391 x284))
(assert (x391 x5334))
(assert (x2252 x2423))
(assert (= (+ (x3649 x3914) 2) (x3649 (x3789 x3914 2))))
(assert (x391 x6969))
(assert (= (and x3090 x6090) x6102))
(assert (x4191 x8031 (- x5766 x774)))
(assert (=> (<= x4426 10000) (= (x5361 x4426) (x7379 x4426))))
(assert (x391 x6015))
(assert (= (and x3046 x8159) x2068))
(assert (= (and x5479 (not x5789)) x1464))
(assert (= x338 (and x4347 x6509)))
(assert (x8665 x5116 x2012 x5766 x8031))
(assert (x391 x291))
(assert (x391 x8497))
(assert (x391 x2550))
(assert (x391 x667))
(assert (= (=> (= x9121 (= x9118 0)) (and (=> (not x9121) x6994) (=> x9121 x2322))) x9176))
(assert (x4156 x5552 x7316 x4135 x2012))
(assert (x8665 x7316 x5552 x940 x1726))
(assert (= (and x67 x2543) x6043))
(assert (= x2322 x6976))
(assert (= x2686 (=> (and (>= x8900 0) (>= 1461501637330902918203684832716283019655932542975 x8900) (> 1461501637330902918203684832716283019655932542976 x8900) (= (= x8900 0) x4412)) (and (=> (and (and (<= 0 x8900) (<= x8900 1461501637330902918203684832716283019655932542975) (= x3543 (x6887 (x7379 x8900))) (< x8900 1461501637330902918203684832716283019655932542976) (= x6177 (x2125 (+ 32 x9052))) (= (= x3543 0) x33) (= (x2125 (+ x6177 32)) x2155) (= (x2125 (+ 4 x6490)) x9052)) (not x4412)) (and (=> (and (< x2811 4294967296) (not x33)) x4141) (=> x33 x7225))) (=> x4412 x4141)))))
(assert (x1710 1461501637330902918203684832716283019655932542976))
(assert (x391 x1718))
(assert (= (and x5339 (not x1639)) x9086))
(assert (x391 x2619))
(assert (x8665 x5766 x8031 x2012 x4135))
(assert (x391 x2947))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3384))
(assert (x8665 x4135 x2012 x172 x2780))
(assert (= x5165 (and x2553 x3060)))
(assert (x391 x8787))
(assert (x391 x8697))
(assert (x391 x4450))
(assert (x391 x8984))
(assert (x391 x4608))
(assert (= (or x335 x6130 x4231 x5901 x5987 x6188) x2108))
(assert (=> (<= x8124 10000) (= (x5361 x8124) (x7379 x8124))))
(assert (x8665 x530 x5390 x5116 x2012))
(assert (x1052 x1896 x6743))
(assert (x391 x7349))
(assert (= x7066 (=> (and (= x6083 x3897) (= x7287 x6833)) x3799)))
(assert (x391 x5786))
(assert (= (and x4581 x6989) x4029))
(assert (x8665 x2012 x5116 x172 x2780))
(assert (= x664 (and (not x588) x8586)))
(assert (x2252 x6587))
(assert (= x6493 (and x1468 x6819)))
(assert (= 2217467699 (x3649 (x5361 2217467699))))
(assert (x2252 x2179))
(assert (x391 x4013))
(assert (x391 x8121))
(assert (x2252 x5308))
(assert (x4156 x1256 x172 x4135 x2012))
(assert (x391 x2151))
(assert (x391 x7371))
(assert (x391 x1666))
(assert (x8637 x6168))
(assert (= (and (not x3428) x6239) x7597))
(assert (x391 x6490))
(assert (x6103 (- x4135 x774)))
(assert (x8637 x6334))
(assert (x8665 x5390 x530 x5116 x2012))
(assert (= (and x325 x727) x7853))
(assert (x391 x2210))
(assert (x391 x4268))
(assert (x391 x9237))
(assert (= (or x6831 (and x7899 x3437) x4835 (and x5043 x8977) x5271 (and x2822 x3352)) x2638))
(assert (x391 x8770))
(assert (x391 x6208))
(assert (x391 x3782))
(assert (x8665 x2012 x5116 x8031 x5766))
(assert (x391 x724))
(assert (= (and x6218 (not x6643)) x1862))
(assert (x4156 x9039 x530 x7316 x5552))
(assert (x6103 (- x2780 x1256)))
(assert (x391 x7246))
(assert (x8665 x8031 x5766 x2012 x4135))
(assert (x391 x9265))
(assert (x391 x4782))
(assert (= (and x6530 (not x7399)) x8943))
(assert (= x8315 (and x9086 x2208)))
(assert (x391 x2927))
(assert (x1052 x1016 x7605))
(assert (= (x3649 (x3789 x7421 1)) (+ 1 (x3649 x7421))))
(assert (=> (>= 10000 x2993) (= (x5361 x2993) (x7379 x2993))))
(assert (x6103 (- x7316 x530)))
(assert (x8665 x4135 x2012 x172 x1256))
(assert (= x3648 x3950))
(assert (x391 x3722))
(assert (x6103 (- x5552 x172)))
(assert (x391 x5535))
(assert (x4191 x774 (- x490 x3593)))
(assert (= x4958 (and x7468 x5855)))
(assert (= (or x4059 x8445 x113 x3537) x6990))
(assert (= (and x8628 x8948) x7001))
(assert (= x4692 x5477))
(assert (x391 x6717))
(assert (x391 x3553))
(assert (x391 x228))
(assert (= x2322 x3533))
(assert (= x1291 (and x4544 (not x1977))))
(assert (=> (<= x5229 10000) (= (x5361 x5229) (x7379 x5229))))
(assert (= (and x3862 x3297) x7210))
(assert (= (x3649 (x7379 x5469)) x5469))
(assert (x391 x8735))
(assert (x8130 x828))
(assert (= x2584 (=> (and (= x1578 x3361) (= x6625 x2804)) x8817)))
(assert (= (and x8269 x7903) x6203))
(assert (= x8523 (and x3823 x5701)))
(assert (= x7725 (and x5186 x8245)))
(assert (= x2793 (or x4910 (and (not x7710) x612) (and x2488 x1792) x7684 (and x439 x1374) (and x8480 x3440) (and x5219 x4555) (and (not x3183) x8723) x6200)))
(assert (x391 x2832))
(assert (x391 x7580))
(assert (x391 x3429))
(assert (= (and x7803 (not x2842)) x6818))
(assert (= (or x2279 x8806) x5455))
(assert (x391 x4695))
(assert (= (and x696 (not x1574)) x4848))
(assert (= (x5361 26959946667150639794667015087019630673637144422540572481103610249215) (x7379 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x8900) (> 1461501637330902918203684832716283019655932542976 x8900) (>= x8900 0) (= x3561 (= 0 x8900))) (and (=> (and (and (= (x6887 (x7379 x8900)) x4887) (>= x8900 0) (> 1461501637330902918203684832716283019655932542976 x8900) (= x4318 (= 0 x4887)) (>= 1461501637330902918203684832716283019655932542975 x8900)) (not x3561)) (and (=> x4318 x7225) (=> (and (not x4318) (< x705 4294967296)) x3452))) (=> x3561 x3452))) x4556))
(assert (x391 x7114))
(assert (x391 x9239))
(assert (= x2682 (and x1089 x5279)))
(assert (= x4740 (=> (and (= (x2237 x340 x2411) x1522) (= (ite (= x2152 1) 1 0) x340) (= x6022 (ite (= x5646 0) 1 0)) (= (< 0 x6029) x5423) (= (ite (< 31 x5646) 1 0) x2411) (= (x1893 x1522 x6022) x5425) (= x6029 (x2237 x5425 x4026))) (and (=> (and (and (and (= 4 x7553) (= x1590 (= x7848 x8110)) (= (x2125 (+ 288 x3778)) x8997)) (or (and x1590 (and (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x3867) (<= 0 x5645) (not (< x2045 2691771752)) (not (= 2691771752 x2045)) (not (< x2045 2217467699)) (not (= 2796547477 x2045)) (<= x5645 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 2858086653 x2045) (not (> 4 x793)) (= x233 32) (= x793 x7553) (> 2929553584 x2045) (> x7875 0) (= (x6887 (x7379 x8110)) x7875) (= x8447 1) (not (= 2835717307 x2045)) (= x793 4))) (and (not x1590) (and (= x6240 (= x7848 x5049)) (or (and x6240 (and (>= x6118 0) (not (= x5500 2691771752)) (not (= x5500 2796547477)) (= 4 x3065) (= x233 32) (< 0 x8061) (not (> 2217467699 x5500)) (<= x6118 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 2858086653 x5500) (not (< x5500 2691771752)) (= x8447 1) (= x8061 (x6887 (x7379 x5049))) (= x8115 77053863734975077137548456399560439977311721439096602559221323163398253314048) (< x5500 2929553584) (= x3065 x7553) (not (= x5500 2835717307)) (not (> 4 x3065)))) (and (not x6240) (and (and x4823 (and (not (< x7671 2691771752)) (= x7553 x9271) (= (x6887 (x7379 x4633)) x2695) (= 4 x9271) (< 0 x2695) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7457) (< x7671 2929553584) (= x8447 1) (= x7671 2858086653) (>= x7457 0) (not (= x7671 2691771752)) (not (> 4 x9271)) (not (= x7671 2796547477)) (= x233 32) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x1591) (not (> 2217467699 x7671)) (not (= 2835717307 x7671)))) (= (= x4633 x7848) x4823)))))))) x5423) x7475) (=> (not x5423) x2322)))))
(assert (= (x7379 157198259) (x5361 157198259)))
(assert (= x1531 (and x5539 (not x152))))
(assert (= true x2366))
(assert (= (x3649 (x5361 1461501637330902918203684832716283019655932542976)) 1461501637330902918203684832716283019655932542976))
(assert (x391 x2871))
(assert (x391 x3094))
(assert (= (x3649 (x7379 x1660)) x1660))
(assert (x391 x7786))
(assert (x391 x8072))
(assert (x391 x7778))
(assert (x4191 x3579 (- x3593 x1726)))
(assert (=> (<= x5402 10000) (= (x7379 x5402) (x5361 x5402))))
(assert (=> (>= 10000 x4632) (= (x7379 x4632) (x5361 x4632))))
(assert (= x522 (and x6670 (not x3263))))
(assert (x391 x4467))
(assert (x391 x7608))
(assert (x391 x8585))
(assert (x8665 x490 x774 x530 x9039))
(assert (= (+ 2 (x3649 x1828)) (x3649 (x3789 x1828 2))))
(assert (= (and x6989 (not x4581)) x5863))
(assert (= (x7379 2691771752) (x5361 2691771752)))
(assert (x1052 x9252 x1410))
(assert (x391 x3707))
(assert (x391 x4396))
(assert (= (and x854 (not x9121)) x6815))
(assert (= (or x2425 x5530) x2384))
(assert (x8665 x4135 x2012 x530 x5390))
(assert (x4191 x2012 (- x4135 x5766)))
(assert (= (and x1304 x7777) x5577))
(assert (x8665 x3579 x3593 x490 x774))
(assert (= (and x1549 x1193) x600))
(assert (=> (>= 10000 x8952) (= (x7379 x8952) (x5361 x8952))))
(assert (= (and (not x199) x7637) x2482))
(assert (= (x3649 (x3789 x3158 1)) (+ (x3649 x3158) 1)))
(assert (x391 x8304))
(assert (= (and x7399 x6530) x7674))
(assert (x4191 x530 (- x9039 x530)))
(assert (x8665 x8031 x5766 x774 x490))
(assert (= x3694 (or x2119 x4023 x7828)))
(assert (x391 x7813))
(assert (x391 x7105))
(assert (= (and x682 x7081) x7086))
(assert (= (and x4673 x7597) x8037))
(assert (= x6762 (=> (= (> x5077 0) x2866) (and (=> (and (and (= (= x5308 0) x3263) (<= 0 x8334) (<= x8334 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x2866) (and (=> x3263 x6749) (=> (and (and (>= x3116 0) (= x3192 (= x3116 0)) (= (x3789 x6549 2) x3457) (<= x3116 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x8228 x3457) x3116) (= x6549 (x7158 (x7379 x5308) x8027 0))) (not x3263)) (and (=> (and (and (or (and x6340 (and (= (x8228 x7442) x5487) (= x4432 (not x6036)) (<= 0 x5487) (<= x5487 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3789 x1982 2) x7442) (= (x7158 (x7379 x3000) x8027 0) x1982) (= x6036 (< x5487 x5077)))) (and (= x4432 x6340) (not x6340))) (and (= x6340 (ite (< 0 x8334) (not (= x3000 0)) (< 0 x8334))) (= (x5012 x6923) x3000) (> 1461501637330902918203684832716283019655932542976 x3000) (>= x3000 0) (= x6923 (x3789 x8027 1)) (>= 1461501637330902918203684832716283019655932542975 x3000))) x3192) x4295) (=> (not x3192) x8622))))) (=> (and (and (= x8839 x1588) (= x4608 x3408)) (not x2866)) x8428)))))
(assert (x8637 x5482))
(assert (x391 x8135))
(assert (= (and (=> (and (not x7329) (and (= 0 x8796) (= x8009 x3490))) x3957) (=> (and (and (or (and (= x7451 x5679) (not x5679)) (and x5679 (and (= (x3789 x8340 2) x6679) (= x934 (> x4000 x3215)) (<= 0 x3215) (= (x4462 x6679) x3215) (= x7451 (not x934)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3215) (= x8340 (x7158 (x7379 x8952) x3914 0))))) (and (= x3179 (x3789 x8280 1)) (= x8280 (x7158 (x7379 x8009) x3914 0)) (= x5679 (ite (< 1 x8334) (not (= 0 x8952)) (< 1 x8334))) (>= x8952 0) (= (x6820 x3179) x8952) (<= x8952 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x8952))) x7329) x3745)) x7986))
(assert (= (and x8858 x3066) x1273))
(assert (= (and x1758 x4908) x4533))
(assert (=> (<= x3800 10000) (= (x7379 x3800) (x5361 x3800))))
(assert (= (and (=> (and x4099 (and (= x6601 x7848) (= x8220 x8237) (= x7358 x5357))) x1720) (=> (and (not x4099) (and (= 1 x4849) (= x1536 x5357))) x3504)) x8888))
(assert (x391 x7444))
(assert (x391 x7355))
(assert (x8665 x7316 x5552 x8031 x5766))
(assert (x391 x4147))
(assert (x391 x2277))
(assert (x391 x8542))
(assert (=> (<= x2094 10000) (= (x7379 x2094) (x5361 x2094))))
(assert (= (and x3608 x7043) x1292))
(assert (x4191 x1726 (- x940 x530)))
(assert (x391 x1114))
(assert (x391 x7429))
(assert (x391 x8898))
(assert (= x305 (and x4285 (not x5977))))
(assert (= (and x3078 x4774) x9020))
(assert (= (and x7504 x1284) x8630))
(assert (x391 x3541))
(assert (= x7977 (or x8351 x2915)))
(assert (x391 x7821))
(assert (x391 x349))
(assert (x391 x336))
(assert (x8665 x172 x2780 x3593 x3579))
(assert (x391 x5571))
(assert (= x7584 (and x4706 x563)))
(assert (= (and (not x3948) x8427) x7564))
(assert (x4156 x4135 x2012 x1726 x940))
(assert (x391 x5509))
(assert (= x9058 (x3649 (x7379 x9058))))
(assert (= x687 (and x3047 x3905)))
(assert (= x5801 (and x6588 (not x2711))))
(assert (= (x3649 (x7379 x3991)) x3991))
(assert (= (and x5302 x1919) x1268))
(assert (x391 x6556))
(assert (x391 x5483))
(assert (x3618 x3624))
(assert (=> (>= 10000 x3072) (= (x5361 x3072) (x7379 x3072))))
(assert (x8637 x7208))
(assert (x391 x7936))
(assert (=> (<= x3374 10000) (= (x7379 x3374) (x5361 x3374))))
(assert (x4191 x490 (- x774 x2012)))
(assert (x2252 x7498))
(assert (= (and x3336 x1042) x4132))
(assert (= (x7379 242558722) (x5361 242558722)))
(assert (x4191 x530 (- x5390 x9039)))
(assert (= (+ 1 (x3649 x6650)) (x3649 (x3789 x6650 1))))
(assert (= x6819 (and x6341 x4830)))
(assert (x391 x2988))
(assert (= (=> (and (= x7702 0) (= x4119 x2649)) x8150) x4902))
(assert (x391 x4928))
(assert (x391 x8429))
(assert (= (and (not x5269) x8114) x4459))
(assert (x8637 x4050))
(assert (x391 x6442))
(assert (= x8757 (and x6799 (not x4109))))
(assert (x6103 (- x4135 x172)))
(assert (x391 x6888))
(assert (x2252 x7032))
(assert (x391 x3013))
(assert (= (and (not x5203) x1618) x820))
(assert (x391 x7483))
(assert (x391 x5185))
(assert (=> (<= x3501 10000) (= (x7379 x3501) (x5361 x3501))))
(assert (= x7087 (or x353 x6181)))
(assert (= (and x650 (not x6928)) x1508))
(assert (x391 x4234))
(assert (= x2943 (and x2407 x6544)))
(assert (= (or x7351 x3214) x7531))
(assert (= (=> (and (= (= 0 x3984) x1460) (or (and x1460 (= x166 x3984)) (and (not x1460) (and (= (= 0 x5190) x9193) (>= x5190 0) (= (x3663 x1885) x5190) (= (x7158 (x7379 x7448) x8506 0) x3484) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5190) (= (ite x9193 1 0) x166) (= x8506 (x7158 (x7379 x7848) (x5361 158) 0)) (= x1885 (x3789 x3484 1)))))) x8003) x5640))
(assert (x391 x5432))
(assert (x391 x6070))
(assert (x391 x2839))
(assert (= x9254 (x3649 (x7379 x9254))))
(assert (= x9167 (and x6485 (not x6145))))
(assert (= (and x6643 x6218) x3048))
(assert (= (and x8109 (not x2496)) x9032))
(assert (= (and x749 x924) x4173))
(assert (= (or x6109 x6311) x2242))
(assert (x391 x5740))
(assert (= x3165 (and (not x7695) x4126)))
(assert (x8665 x774 x490 x530 x9039))
(assert (x6103 (- x3593 x9039)))
(assert (=> (>= 10000 x4137) (= (x5361 x4137) (x7379 x4137))))
(assert (x391 x752))
(assert (x391 x1244))
(assert (x2252 x6496))
(assert (x391 x5035))
(assert (x2252 x5008))
(assert (x391 x7830))
(assert (x391 x342))
(assert (= x392 (x3649 (x7379 x392))))
(assert (x391 x966))
(assert (= x203 (=> (and (= (ite (< 31 x8357) 1 0) x1265) (= x5482 (x1893 x2746 x5769)) (= (ite (= x8357 0) 1 0) x5769) (= x2746 (x2237 x1431 x1265)) (= (< 0 x2858) x4417) (= x1431 (ite (= 1 x4217) 1 0)) (= x2858 (x2237 x5482 x3366))) (and (=> (not x4417) x2322) (=> (and x4417 (and (= (x7124 (- x2807 x2533)) x1310) (= x2807 (x2125 (+ x3392 32))) (= (x2125 (+ 4 x2533)) x3392) (= (= x7848 x8110) x3428))) (and (=> (and x3428 (and (= x5685 (or (and (= true (<= x3632 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x3632)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3632))) (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 x7344) (= (x7124 (- x6045 4)) x3632) (< 0 x2499) (not (> 2691771752 x3338)) (not (< x3338 2217467699)) (= x6045 36) (< x3338 2929553584) (= x2499 (x6887 (x7379 x8110))) (= 2691771752 x3338) (= x6045 x1310) (= x1935 x2674) (not (< x6045 4)))) (and (=> x5685 x2743) (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x5759) (<= 0 x5759) (= x7743 (= x5402 x5759)) (= x2674 x5169) (< x5759 1461501637330902918203684832716283019655932542976) (= 128 x3277)) (not x5685)) (and (=> (and (and (= 100 x7301) (< x3651 1466279372) (= (x6887 (x7379 x5402)) x1528) (= x3651 599290589) (= x8616 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x6477 (or (> x1477 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1477 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x1477)))) (= x7032 x6916) (not (> 599290589 x3651)) (= x17 x5169) (not (> 4 x7301)) (< 0 x1528) (= 100 x7301) (= (x7124 (- x7301 4)) x1477) (= x5241 x8110)) x7743) (and (=> (and (and (= (= x6916 x7032) x6012) (= x8620 x6916)) (not x6477)) (and (=> (and (and (= x550 x5241) (= x1146 (= x5241 x8110))) x6012) (and (=> (not x1146) x6421) (=> (and x1146 (and (>= x5010 0) (= x5010 (x3764 x2981)) (= (x7158 (x7379 x6916) (x5361 1) 0) x2981) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5010) (= (> x5169 x5010) x3300) (= x17 x8674))) (and (=> x3300 x6421) (=> (and (not x3300) (= x5592 (> x17 x5010))) (and (=> (and (not x5592) (and (= (> x2611 x122) x5551) (= (x7158 (x7379 x6916) (x5361 1) 0) x7194) (= (x7158 (x7379 x5241) (x5361 1) 0) x106) (<= 0 x2611) (= (x444 x106) x2611) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2611) (= x7523 (x7124 (- x5010 x17))) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x17)) x122))) (and (=> x5551 x6421) (=> (and (not x5551) (and (= (x2125 (+ x2611 x17)) x9190) (= (> x2611 x9190) x1253))) (and (=> x1253 x6421) (=> (and (and (= x1910 (< x3713 x17)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3713) (= x81 (x7158 (x7379 x8110) x5037 0)) (= x3713 (x7707 x81)) (= x5037 (x7158 (x7379 x6916) (x5361 2) 0)) (>= x3713 0)) (not x1253)) (and (=> (and (not x1910) (= (> x17 x3713) x641)) (and (=> (and (and (= x8012 1) (= x4485 32) (= (x7124 (- x3713 x17)) x1332)) (not x641)) x6775) (=> x641 x6421))) (=> x1910 x6421))))))) (=> x5592 x6421))))))) (=> (not x6012) x6421))) (=> x6477 x6421))) (=> (and (= x3948 (= x5759 x8110)) (not x7743)) (and (=> (and (and (not (> 405663989 x8508)) (= x8508 599290589) (= (x7124 (- x1112 4)) x811) (= (x6887 (x7379 x8110)) x3219) (= 100 x1112) (not (< x1112 4)) (not (= 405663989 x8508)) (> 2217467699 x8508) (< x8508 988262939) (not (= 547091486 x8508)) (= x5899 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> x3219 0) (= x8110 x3374) (= x7032 x2592) (= (or (> x811 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x811) (= true (<= x811 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x3758) (= x1112 100) (= x5169 x3102)) x3948) (and (=> x3758 x956) (=> (and (not x3758) (and (= x8453 (= x2592 x7032)) (= x2592 x4904))) (and (=> (and (and (= x3374 x4570) (= x529 (= x3374 x8110))) x8453) (and (=> (and (and (<= 0 x3751) (= (x7158 (x7379 x2592) (x5361 5) 0) x136) (= x3102 x6531) (= (x1556 x136) x3751) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3751) (= x532 (< x3751 x5169))) x529) (and (=> x532 x956) (=> (and (not x532) (and (<= x7211 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7013 (x7158 (x7379 x2592) (x5361 5) 0)) (<= 0 x7211) (= (< x7211 x3102) x9040) (= (x1556 x7013) x7211))) (and (=> (and (and (= x7872 (< x2146 x718)) (<= 0 x718) (= (x7158 (x7379 x3374) (x5361 5) 0) x1409) (<= x718 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7124 (- x7211 x3102)) x7319) (= x718 (x3723 x1409)) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3102)) x2146)) (not x9040)) (and (=> x7872 x956) (=> (and (not x7872) (and (= x8590 1) (= 32 x5064) (= (x2125 (+ x3102 x718)) x65) (= 1 x729))) x6962))) (=> x9040 x956))))) (=> (not x529) x956))) (=> (not x8453) x956))))) (=> (and (= (= x5759 x5049) x2176) (not x3948)) (and (=> (and (not x2176) (and (= x6824 (= x5759 x4633)) (and (and (< x8936 988262939) (= (or (> x306 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x306 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x306))) x500) (not (= x8936 405663989)) (= (x7124 (- x4738 4)) x306) (= x48 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 4 x4738)) (= 100 x4738) (= x8110 x3991) (not (> 405663989 x8936)) (= 100 x4738) (= 599290589 x8936) (= x8880 (x6887 (x7379 x4633))) (not (= 547091486 x8936)) (= x5169 x8770) (> x8880 0) (< x8936 2217467699) (= x336 x7032)) x6824))) (and (=> (and (and (= x1326 (= x7032 x336)) (= x336 x4726)) (not x500)) (and (=> (and (and (= (= x8110 x3991) x9139) (= x3991 x4263)) x1326) (and (=> (not x9139) x7328) (=> (and (and (<= 0 x2935) (= (x7158 (x7379 x336) (x5361 5) 0) x3497) (= x567 x8770) (= x2371 (> x5169 x2935)) (<= x2935 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4281 x3497) x2935)) x9139) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7320) (<= 0 x7320) (= x1823 (x7158 (x7379 x336) (x5361 5) 0)) (= x7320 (x4281 x1823)) (= x4195 (< x7320 x8770))) (not x2371)) (and (=> (and (and (<= 0 x5048) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8770)) x7776) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5048) (= x7069 (x7158 (x7379 x3991) (x5361 5) 0)) (= x4151 (> x5048 x7776)) (= (x7124 (- x7320 x8770)) x503) (= x5048 (x2367 x7069))) (not x4195)) (and (=> x4151 x7328) (=> (and (and (= x4226 32) (= 1 x6399) (= x6979 (x2125 (+ x8770 x5048))) (= 1 x8119)) (not x4151)) x3511))) (=> x4195 x7328))) (=> x2371 x7328))))) (=> (not x1326) x7328))) (=> x500 x7328))) (=> (and (and (not (> 405663989 x6866)) (= x3953 x7032) (not (= x6866 405663989)) (< 0 x8226) (> 2217467699 x6866) (= x8110 x8690) (= 100 x5917) (= (x7124 (- x5917 4)) x1008) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1008)) (< x1008 96)) (> x1008 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4441) (= 100 x5917) (= x8226 (x6887 (x7379 x5049))) (= x6866 599290589) (not (> 4 x5917)) (not (= x6866 547091486)) (= x7172 x5169) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x5671) (> 988262939 x6866)) x2176) (and (=> x4441 x7165) (=> (and (not x4441) (and (= x3953 x6556) (= (= x7032 x3953) x5044))) (and (=> (not x5044) x7165) (=> (and (and (= x3588 x8690) (= (= x8690 x8110) x4463)) x5044) (and (=> (not x4463) x7165) (=> (and (and (= x2819 (< x8301 x5169)) (= x7172 x9224) (= x1258 (x7158 (x7379 x3953) (x5361 5) 0)) (= x8301 (x632 x1258)) (<= 0 x8301) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8301)) x4463) (and (=> x2819 x7165) (=> (and (not x2819) (and (= x112 (x7158 (x7379 x3953) (x5361 5) 0)) (>= x6821 0) (= (x632 x112) x6821) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6821) (= (> x7172 x6821) x1283))) (and (=> (and (and (= (x7124 (- x6821 x7172)) x243) (= (x7158 (x7379 x8690) (x5361 5) 0) x8386) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1064) (<= 0 x1064) (= (< x8754 x1064) x2135) (= (x4503 x8386) x1064) (= x8754 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7172)))) (not x1283)) (and (=> (and (and (= x1900 32) (= x2593 1) (= x8361 (x2125 (+ x7172 x1064))) (= x3768 1)) (not x2135)) x1516) (=> x2135 x7165))) (=> x1283 x7165))))))))))))))))))) (=> (and (not x3428) (= x4673 (= x5049 x7848))) (and (=> (and x4673 (and (= 2691771752 x370) (not (> 2691771752 x370)) (not (< x370 2217467699)) (= 36 x2987) (= x1732 72570022874062638528011751457397263716769196454539065078543251854057308946432) (= x1935 x5858) (= (x6887 (x7379 x5049)) x4571) (= x7840 (x7124 (- x2987 4))) (not (< x2987 4)) (= (or (> x7840 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7840) true) (< x7840 32))) x3821) (= x2987 x1310) (> 2929553584 x370) (< 0 x4571))) (and (=> (and (not x3821) (and (>= 1461501637330902918203684832716283019655932542975 x3921) (= 128 x1070) (> 1461501637330902918203684832716283019655932542976 x3921) (= x5858 x5690) (= (= x3921 x5402) x1819) (<= 0 x3921))) (and (=> (and x1819 (and (= x4492 x7032) (= (x6887 (x7379 x5402)) x7740) (> 1466279372 x6773) (< 0 x7740) (= 100 x2382) (= x5049 x4837) (not (> 599290589 x6773)) (= x6075 (or (and (> 96 x3120) (= true (<= x3120 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3120))) (= x5690 x5620) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x7895) (= 100 x2382) (= 599290589 x6773) (not (> 4 x2382)) (= (x7124 (- x2382 4)) x3120))) (and (=> x6075 x5126) (=> (and (and (= x5207 (= x4492 x7032)) (= x4492 x9098)) (not x6075)) (and (=> (and x5207 (and (= x5376 (= x5049 x4837)) (= x4837 x8840))) (and (=> (not x5376) x5126) (=> (and x5376 (and (= x8882 (x7158 (x7379 x4492) (x5361 1) 0)) (= x8464 (x3764 x8882)) (= (< x8464 x5690) x5895) (<= 0 x8464) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8464) (= x5620 x2635))) (and (=> (and (not x5895) (= x6680 (> x5620 x8464))) (and (=> x6680 x5126) (=> (and (and (<= 0 x3231) (= x4575 (x7158 (x7379 x4837) (x5361 1) 0)) (= x9194 (x7124 (- x8464 x5620))) (<= x3231 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4499 (> x3231 x5893)) (= x5893 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5620))) (= x3231 (x6163 x4575)) (= (x7158 (x7379 x4492) (x5361 1) 0) x31)) (not x6680)) (and (=> (and (and (= (x2125 (+ x3231 x5620)) x760) (= (> x3231 x760) x6603)) (not x4499)) (and (=> (and (not x6603) (and (= x1105 (x7158 (x7379 x5049) x8227 0)) (= x7357 (x7707 x1105)) (= (< x7357 x5620) x1658) (<= 0 x7357) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7357) (= x8227 (x7158 (x7379 x4492) (x5361 2) 0)))) (and (=> (and (not x1658) (= x5714 (< x7357 x5620))) (and (=> x5714 x5126) (=> (and (and (= (x7124 (- x7357 x5620)) x8177) (= x4683 1) (= 32 x6906)) (not x5714)) x8168))) (=> x1658 x5126))) (=> x6603 x5126))) (=> x4499 x5126))))) (=> x5895 x5126))))) (=> (not x5207) x5126))))) (=> (and (= (= x8110 x3921) x3847) (not x1819)) (and (=> (and (not x3847) (= x272 (= x3921 x5049))) (and (=> (and (and (= (= x3921 x4633) x1398) (and x1398 (and (= 100 x2310) (not (= x5533 405663989)) (> x4850 0) (= x6431 (x7124 (- x2310 4))) (= x3088 x7032) (= (or (and (< x6431 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6431) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6431)) x2801) (not (= x5533 547091486)) (not (> 4 x2310)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x7716) (< x5533 988262939) (= x4850 (x6887 (x7379 x4633))) (= x7321 x5690) (= x2310 100) (= x5049 x5872) (= x5533 599290589) (> 2217467699 x5533) (not (> 405663989 x5533))))) (not x272)) (and (=> (and (and (= x3088 x7519) (= x5693 (= x7032 x3088))) (not x2801)) (and (=> (not x5693) x8691) (=> (and x5693 (and (= x8730 (= x5872 x5049)) (= x5872 x2654))) (and (=> (not x8730) x8691) (=> (and x8730 (and (<= 0 x3053) (= x3053 (x4281 x8940)) (= (x7158 (x7379 x3088) (x5361 5) 0) x8940) (= (< x3053 x5690) x6864) (<= x3053 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7321 x1852))) (and (=> x6864 x8691) (=> (and (and (<= x1466 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7423 (x7158 (x7379 x3088) (x5361 5) 0)) (>= x1466 0) (= x1466 (x4281 x7423)) (= x7579 (< x1466 x7321))) (not x6864)) (and (=> x7579 x8691) (=> (and (not x7579) (and (= (> x2941 x9160) x860) (<= x2941 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x9160 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7321))) (= (x7158 (x7379 x5872) (x5361 5) 0) x3426) (>= x2941 0) (= x2941 (x3747 x3426)) (= x3581 (x7124 (- x1466 x7321))))) (and (=> (and (not x860) (and (= x1435 1) (= x7459 32) (= x8731 1) (= x629 (x2125 (+ x2941 x7321))))) x6115) (=> x860 x8691))))))))))) (=> x2801 x8691))) (=> (and x272 (and (= x1338 599290589) (= (x7124 (- x3958 4)) x5309) (< x1338 2217467699) (not (< x1338 405663989)) (= 100 x3958) (not (< x3958 4)) (= 100 x3958) (= x8268 x5049) (> 988262939 x1338) (not (= 547091486 x1338)) (= x1593 x7032) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4414) (< 0 x1816) (= (x6887 (x7379 x5049)) x1816) (= x5690 x3142) (not (= x1338 405663989)) (= x6666 (or (and (= true (<= x5309 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x5309)) (> x5309 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (and (=> (and (not x6666) (and (= (= x7032 x1593) x8546) (= x1593 x483))) (and (=> (and (and (= x2689 x8268) (= (= x8268 x5049) x4229)) x8546) (and (=> (not x4229) x70) (=> (and (and (<= 0 x4129) (= (> x5690 x4129) x456) (= x7771 (x7158 (x7379 x1593) (x5361 5) 0)) (= x3142 x288) (= x4129 (x632 x7771)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4129)) x4229) (and (=> (and (not x456) (and (<= x8827 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x8827) (= x8310 (> x3142 x8827)) (= (x632 x15) x8827) (= (x7158 (x7379 x1593) (x5361 5) 0) x15))) (and (=> x8310 x70) (=> (and (and (= (x7158 (x7379 x8268) (x5361 5) 0) x5503) (>= x4715 0) (= x1229 (> x4715 x6510)) (= x6510 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3142))) (= x4715 (x8098 x5503)) (= (x7124 (- x8827 x3142)) x2538) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4715)) (not x8310)) (and (=> x1229 x70) (=> (and (and (= (x2125 (+ x3142 x4715)) x7732) (= x7118 32) (= x776 1) (= x8792 1)) (not x1229)) x5735))))) (=> x456 x70))))) (=> (not x8546) x70))) (=> x6666 x70))))) (=> (and (and (< x5612 2217467699) (not (> 405663989 x5612)) (= x5690 x587) (= 599290589 x5612) (= 100 x2138) (< 0 x755) (= x7820 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x855 x7032) (not (= x5612 547091486)) (= (x7124 (- x2138 4)) x791) (= (x6887 (x7379 x8110)) x755) (not (> 4 x2138)) (= x1716 x5049) (= (or (and (= (<= x791 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x791 96)) (> x791 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4010) (= 100 x2138) (> 988262939 x5612) (not (= 405663989 x5612))) x3847) (and (=> x4010 x765) (=> (and (not x4010) (and (= x855 x270) (= x7167 (= x855 x7032)))) (and (=> (and x7167 (and (= x2922 (= x5049 x1716)) (= x1716 x1571))) (and (=> (not x2922) x765) (=> (and x2922 (and (= (x1556 x3567) x4955) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4955) (= x3567 (x7158 (x7379 x855) (x5361 5) 0)) (= x8729 x587) (= (< x4955 x5690) x2785) (<= 0 x4955))) (and (=> (and (not x2785) (and (= x4581 (< x1000 x587)) (= (x1556 x8189) x1000) (<= x1000 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8189 (x7158 (x7379 x855) (x5361 5) 0)) (<= 0 x1000))) (and (=> x4581 x765) (=> (and (and (<= 0 x6041) (= x358 (x7124 (- x1000 x587))) (= x6041 (x8642 x6264)) (= (< x1997 x6041) x1299) (<= x6041 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7158 (x7379 x1716) (x5361 5) 0) x6264) (= x1997 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x587)))) (not x4581)) (and (=> x1299 x765) (=> (and (and (= x5322 32) (= 1 x8381) (= 1 x5285) (= x6023 (x2125 (+ x587 x6041)))) (not x1299)) x2235))))) (=> x2785 x765))))) (=> (not x7167) x765))))))))) (=> x3821 x4027))) (=> (and (not x4673) (and (and (and (= x763 (x6887 (x7379 x4633))) (= x1310 x723) (< 0 x763) (not (> 2691771752 x8672)) (= (x7124 (- x723 4)) x3472) (= (or (and (< x3472 32) (= (<= x3472 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x3472 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2609) (> 2929553584 x8672) (not (> 2217467699 x8672)) (= x8471 72570022874062638528011751457397263716769196454539065078543251854057308946432) (= x723 36) (not (> 4 x723)) (= x8672 2691771752) (= x3317 x1935)) x4666) (= x4666 (= x4633 x7848)))) (and (=> (and (not x2609) (and (= x4283 x3317) (<= 0 x1062) (> 1461501637330902918203684832716283019655932542976 x1062) (= x5771 (= x1062 x5402)) (= x9260 128) (>= 1461501637330902918203684832716283019655932542975 x1062))) (and (=> (and (and (= (x7124 (- x5232 4)) x3815) (= x5232 100) (= x4851 x4283) (= x4633 x1660) (= x395 (or (and (= true (<= x3815 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3815 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3815))) (> 1466279372 x1842) (= x5232 100) (= x5938 (x6887 (x7379 x5402))) (not (> 4 x5232)) (= x8125 x7032) (= x1842 599290589) (< 0 x5938) (not (> 599290589 x1842)) (= x2997 16156842317565293874272834530371880720966471053262404558597773956279093428224)) x5771) (and (=> x395 x7949) (=> (and (not x395) (and (= (= x8125 x7032) x2349) (= x8125 x6611))) (and (=> (and (and (= x3473 x1660) (= (= x4633 x1660) x7717)) x2349) (and (=> (not x7717) x7949) (=> (and (and (= x3835 (x3764 x2030)) (= x786 x4851) (= x6116 (< x3835 x4283)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3835) (<= 0 x3835) (= (x7158 (x7379 x8125) (x5361 1) 0) x2030)) x7717) (and (=> (and (not x6116) (= x261 (< x3835 x4851))) (and (=> x261 x7949) (=> (and (and (= (x7158 (x7379 x1660) (x5361 1) 0) x1495) (= x1546 (x7124 (- x3835 x4851))) (<= 0 x2798) (= x1748 (x7158 (x7379 x8125) (x5361 1) 0)) (= (< x4739 x2798) x6924) (= x2798 (x8261 x1495)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2798) (= x4739 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4851)))) (not x261)) (and (=> (and (and (= (> x2798 x4169) x3949) (= x4169 (x2125 (+ x4851 x2798)))) (not x6924)) (and (=> (and (and (= (x7707 x6363) x4096) (= (x7158 (x7379 x4633) x1657 0) x6363) (<= x4096 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7158 (x7379 x8125) (x5361 2) 0) x1657) (>= x4096 0) (= (< x4096 x4851) x4966)) (not x3949)) (and (=> (and (= x5996 (> x4851 x4096)) (not x4966)) (and (=> (and (not x5996) (and (= 32 x888) (= 1 x1010) (= x7101 (x7124 (- x4096 x4851))))) x835) (=> x5996 x7949))) (=> x4966 x7949))) (=> x3949 x7949))) (=> x6924 x7949))))) (=> x6116 x7949))))) (=> (not x2349) x7949))))) (=> (and (= x5370 (= x1062 x8110)) (not x5771)) (and (=> (and (= (= x1062 x5049) x4854) (not x5370)) (and (=> (and (not x4854) (and (and x8092 (and (= x2958 100) (< x4595 2217467699) (= x7107 x7032) (> 988262939 x4595) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x6335) (= x4595 599290589) (= x219 x4633) (= x3578 (or (and (= true (<= x3498 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3498 96)) (> x3498 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1895 0) (not (< x4595 405663989)) (= 100 x2958) (= x4283 x1153) (= (x7124 (- x2958 4)) x3498) (not (< x2958 4)) (not (= x4595 405663989)) (not (= 547091486 x4595)) (= x1895 (x6887 (x7379 x4633))))) (= (= x4633 x1062) x8092))) (and (=> x3578 x6767) (=> (and (not x3578) (and (= x5039 x7107) (= (= x7107 x7032) x5024))) (and (=> (and (and (= (= x219 x4633) x2711) (= x219 x2907)) x5024) (and (=> (and x2711 (and (= x1153 x866) (= x3078 (> x4283 x7342)) (<= 0 x7342) (= x5606 (x7158 (x7379 x7107) (x5361 5) 0)) (= (x4281 x5606) x7342) (<= x7342 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (= (> x1153 x5013) x816) (= (x4281 x2975) x5013) (= (x7158 (x7379 x7107) (x5361 5) 0) x2975) (>= x5013 0) (<= x5013 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x3078)) (and (=> x816 x6767) (=> (and (not x816) (and (<= x1502 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7124 (- x5013 x1153)) x4748) (= (x7680 x3887) x1502) (= (x7158 (x7379 x219) (x5361 5) 0) x3887) (= x4103 (< x3007 x1502)) (= x3007 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1153))) (>= x1502 0))) (and (=> (and (and (= x1766 32) (= x5233 1) (= x9116 1) (= (x2125 (+ x1153 x1502)) x1627)) (not x4103)) x999) (=> x4103 x6767))))) (=> x3078 x6767))) (=> (not x2711) x6767))) (=> (not x5024) x6767))))) (=> (and (and (= x7032 x2420) (= (x7124 (- x1200 4)) x6569) (= x3691 x4283) (not (> 405663989 x8558)) (= x870 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x699 x4633) (< x8558 2217467699) (= x4187 (x6887 (x7379 x5049))) (not (> 4 x1200)) (= x1200 100) (= 100 x1200) (not (= x8558 405663989)) (not (= x8558 547091486)) (< 0 x4187) (> 988262939 x8558) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6569) (and (= (<= x6569 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x6569))) x1323) (= 599290589 x8558)) x4854) (and (=> (and (not x1323) (and (= x2185 (= x7032 x2420)) (= x2420 x784))) (and (=> (not x2185) x1943) (=> (and x2185 (and (= x9249 (= x699 x4633)) (= x542 x699))) (and (=> (and (and (= x45 x3691) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5210) (= (x7158 (x7379 x2420) (x5361 5) 0) x8399) (>= x5210 0) (= x7534 (< x5210 x4283)) (= x5210 (x632 x8399))) x9249) (and (=> x7534 x1943) (=> (and (and (= (x7158 (x7379 x2420) (x5361 5) 0) x1444) (= x5933 (> x3691 x2814)) (>= x2814 0) (= x2814 (x632 x1444)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2814)) (not x7534)) (and (=> (and (and (= x777 (x4284 x42)) (= x3067 (< x245 x777)) (= x42 (x7158 (x7379 x699) (x5361 5) 0)) (= (x7124 (- x2814 x3691)) x526) (= x245 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3691))) (<= 0 x777) (<= x777 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x5933)) (and (=> x3067 x1943) (=> (and (and (= 1 x4667) (= 1 x8696) (= (x2125 (+ x777 x3691)) x4317) (= 32 x8614)) (not x3067)) x6104))) (=> x5933 x1943))))) (=> (not x9249) x1943))))) (=> x1323 x1943))))) (=> (and (and (not (= x8580 405663989)) (not (< x2563 4)) (= x3502 (or (> x8833 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x8833) (= true (<= x8833 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= 599290589 x8580) (not (> 405663989 x8580)) (= x7032 x2324) (= x6015 (x6887 (x7379 x8110))) (> x6015 0) (< x8580 2217467699) (not (= x8580 547091486)) (= x8833 (x7124 (- x2563 4))) (= 100 x2563) (> 988262939 x8580) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x7838) (= x5157 x4283) (= 100 x2563) (= x3072 x4633)) x5370) (and (=> (and (not x3502) (and (= (= x2324 x7032) x5351) (= x211 x2324))) (and (=> (and (and (= x1212 (= x4633 x3072)) (= x2086 x3072)) x5351) (and (=> (and x1212 (and (>= x2048 0) (= x2825 x5157) (= (> x4283 x2048) x2998) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2048) (= x6902 (x7158 (x7379 x2324) (x5361 5) 0)) (= (x1556 x6902) x2048))) (and (=> x2998 x4523) (=> (and (not x2998) (and (= (x1556 x4106) x3541) (>= x3541 0) (= (> x5157 x3541) x5988) (= (x7158 (x7379 x2324) (x5361 5) 0) x4106) (<= x3541 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x5988) (and (= x8868 (x7124 (- x3541 x5157))) (<= 0 x5226) (= x6369 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5157))) (= x6403 (x7158 (x7379 x3072) (x5361 5) 0)) (= (x4603 x6403) x5226) (= (< x6369 x5226) x8893) (<= x5226 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x8893 x4523) (=> (and (not x8893) (and (= 32 x2388) (= x7313 1) (= 1 x8071) (= x2600 (x2125 (+ x5157 x5226))))) x2160))) (=> x5988 x4523))))) (=> (not x1212) x4523))) (=> (not x5351) x4523))) (=> x3502 x4523))))))) (=> x2609 x435)))))))))))
(assert (x391 x7316))
(assert (x391 x279))
(assert (= x4988 (and (not x2396) x3518)))
(assert (= (x3649 (x5361 75483562)) 75483562))
(assert (= (and x1713 (not x8144)) x6438))
(assert (= (and (not x1229) x8470) x995))
(assert (x391 x710))
(assert (and (x5662 x178 1000000000000000000) (x6638 x178 1000000000000000000) (=> (and (< 0 x178) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x178 1000000000000000000)) (- x178 1000000000000000000)) (>= x178 (* 1000000000000000000 (x4526 x178 1000000000000000000))))) (x4068 x178 1000000000000000000) (x797 x178 1000000000000000000)))
(assert (= (x5361 35417553099779373699389112480655434059402432070290151981503827724506945814528) (x7379 35417553099779373699389112480655434059402432070290151981503827724506945814528)))
(assert (x2624 x8397 x172))
(assert (= x3904 (and x8551 x880)))
(assert (= (x3649 (x3789 x1452 1)) (+ (x3649 x1452) 1)))
(assert (x391 x7970))
(assert (x4191 x2012 (- x4135 x1256)))
(assert (x2252 x2738))
(assert (x391 x6496))
(assert (x391 x3889))
(assert (= (and x3450 (not x3936)) x2882))
(assert (x391 x2357))
(assert (x391 x4455))
(assert (x391 x8012))
(assert (x391 x9235))
(assert (x391 x164))
(assert (x391 x2942))
(assert (x6103 (- x490 x2780)))
(assert (x391 x8955))
(assert (x2252 x1487))
(assert (x1710 x3624))
(assert (=> (>= 10000 x2727) (= (x7379 x2727) (x5361 x2727))))
(assert (= x3171 (or x188 x6068 x3139 x1019 x1331 x8969 x1793 x7294 x5602 x3381 x2039 x6267 x8321 x4315 x6170)))
(assert (= x8884 (x3649 (x7379 x8884))))
(assert (x8665 x9039 x530 x3579 x3593))
(assert (x391 x4301))
(assert (x4191 x1256 (- x172 x5766)))
(assert (= (+ (x3649 x7239) 1) (x3649 (x3789 x7239 1))))
(assert (= x547 (and (not x8138) x4087)))
(assert (= (and x5551 x9209) x177))
(assert (= x8234 (and x8389 x8044)))
(assert (x391 x8873))
(assert (= x6329 (and x1486 x6463)))
(assert (x8665 x8031 x5766 x1256 x172))
(assert (x8665 x490 x774 x3579 x3593))
(assert (x391 x392))
(assert (x391 x399))
(assert (= x5477 x5111))
(assert (= x5682 (and x4197 x8404)))
(assert (x391 x7448))
(assert (= x2675 (and x5629 x6963)))
(assert (= (x3649 (x7379 x217)) x217))
(assert (= (=> (and (= 0 x7830) (= x8783 x8417)) x5650) x8103))
(assert (and (= 81 (x7029 27 3)) (= 27 (x7029 9 3)) (= 9 (x7029 3 3)) (= (x7029 9 9) 81)))
(assert (= x5654 (and (not x8453) x8266)))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x7144 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x7144 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x7144 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x7144 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x7144 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x7144 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x7144)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x7144))) (x8005 1000000000000000000 x7144) (= (x7029 1000000000000000000 x7144) (* 1000000000000000000 x7144)) (x1844 1000000000000000000 x7144) (x7186 1000000000000000000 x7144) (x997 1000000000000000000 x7144) (x1348 1000000000000000000 x7144)))
(assert (x391 x3543))
(assert (x391 x2005))
(assert (x4191 x2012 (- x4135 x1726)))
(assert (= x355 (and (not x5549) x8358)))
(assert (= (and x4341 x4808) x8196))
(assert (x7060 x4688))
(assert (= x1509 (and x2301 (not x5727))))
(assert (= x4753 (and (not x708) x4216)))
(assert (= x5491 (and x3893 x2162)))
(assert (= x4644 (and (not x5633) x8630)))
(assert (= x5163 (and x8647 x1681)))
(assert (x391 x940))
(assert (x391 x776))
(assert (= (and (not x5284) x6756) x264))
(assert (x391 x1825))
(assert (= x8765 (and x6345 x209)))
(assert (= (or x8963 (and x3821 x8037) x1505 (and x4543 x6803) x3506) x2767))
(assert (x391 x8915))
(assert (x391 x6271))
(assert (= x1953 (and x2950 (not x4114))))
(assert (x391 x4843))
(assert (= (or (and x4045 x3503) x6694 (and x4572 x7979) x8776 (and x7411 x2156) x7086 (and (not x6451) x7463) (and x6 (not x3776)) (and x6040 x1742)) x8172))
(assert (x391 x3374))
(assert (= (+ 1 (x3649 x2648)) (x3649 (x3789 x2648 1))))
(assert (x391 x8754))
(assert (= (x3649 (x5361 76833804140862540057647519496925185374644862498684814347804924264468996685824)) 76833804140862540057647519496925185374644862498684814347804924264468996685824))
(assert (x4191 x1256 (- x172 x774)))
(assert (x4156 x774 x490 x1256 x172))
(assert (= (and x2734 (not x4966)) x1457))
(assert (x391 x5621))
(assert (= x8288 (and (not x158) x4407)))
(assert (x391 x4669))
(assert (x4191 x530 (- x9039 x3579)))
(assert (= (or x2442 x6354 x2298 x8708) x8803))
(assert (= x5422 (and (not x2219) x5774)))
(assert (x391 x1562))
(assert (x391 x6367))
(assert (= x389 (and x9032 x7756)))
(assert (x8665 x940 x1726 x5390 x530))
(assert (x391 x1041))
(assert (x391 x260))
(assert (x391 x2008))
(assert (x6103 (- x940 x9039)))
(assert (= (=> (and (= x5327 x7027) (= x7030 x412)) x5440) x1473))
(assert (x391 x5366))
(assert (x391 x6540))
(assert (= x6927 (and (not x3612) x1352)))
(assert (x391 x8406))
(assert (= x2421 (and x8757 x1408)))
(assert (= x8527 (and x195 (not x5737))))
(assert (= (or (and x7260 x1658) x7257 (and x5673 (not x5207)) (and x5138 x6075) (and x5895 x3627) x8602 (and x4307 (not x5376)) (and x3613 x6603) x9011) x3814))
(assert (=> (>= 10000 x724) (= (x5361 x724) (x7379 x724))))
(assert (x391 x2365))
(assert (x6103 (- x3593 x5766)))
(assert (= (x3649 (x7379 x8030)) x8030))
(assert (= x7610 (and (not x6031) x1465)))
(assert (x4191 x2012 (- x5116 x2012)))
(assert (x4156 x2012 x5116 x2780 x172))
(assert (= x773 (and (not x4922) x849)))
(assert (= (and (not x7789) x86) x2594))
(assert (x391 x7603))
(assert (= (=> (and (= x6933 x6158) (= x5984 x7292)) x4893) x1746))
(assert (x4191 x5552 (- x7316 x490)))
(assert (x391 x3009))
(assert (x391 x8379))
(assert (x4191 x9039 (- x530 x5390)))
(assert (x4156 x5390 x530 x8031 x5766))
(assert (= (+ 2 (x3649 x4196)) (x3649 (x3789 x4196 2))))
(assert (= x6462 (and x7695 x4126)))
(assert (x391 x3808))
(assert (= (and x8202 x4989) x2900))
(assert (x391 x662))
(assert (= (and x2192 x8463) x1558))
(assert (= x4287 (and x6012 x1126)))
(assert (= (+ 1 (x3649 x6199)) (x3649 (x3789 x6199 1))))
(assert (x4156 x1726 x940 x1256 x172))
(assert (x4191 x530 (- x9039 x8031)))
(assert (x8637 x653))
(assert (=> (<= x4802 10000) (= (x7379 x4802) (x5361 x4802))))
(assert (= x8462 (and x5810 (not x4528))))
(assert (= x498 (and (not x2609) x410)))
(assert (x391 x2934))
(assert (= (and x2227 x8313) x6899))
(assert (= (and x3573 x7877) x3286))
(assert (= (=> (= x4057 (< 0 x7965)) (and (=> (and (and (>= x490 0) (= (ite (< x3843 x774) 1 0) x3772) (= x6748 (= 0 x490)) (= (x3789 x3463 3) x6380) (= (x5527 x6380) x490) (= x5625 (ite (not x6748) 1 0)) (= (= x8538 0) x3439) (= (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x490) x3843) (= x8538 (x2237 x5625 x3772)) (<= x490 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x4057) (and (=> (not x3439) x5477) (=> (and (and (and (= (x4526 x5460 1000000000000000000) x3109) (= (= x8110 x7848) x2496) (= (x5353 (x7029 x490 x774)) x5460) (= x3255 4)) (or (and (not x2496) (and (= (= x7848 x5049) x7756) (or (and x7756 (and (= x3255 x382) (> 2217467699 x2435) (= x8652 32) (= (x6887 (x7379 x5049)) x1727) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x5719) (= x6966 1) (not (< x382 4)) (= 405663989 x2435) (= 4 x382) (< 0 x1727) (not (> 405663989 x2435)) (> 988262939 x2435))) (and (and (= x8362 (= x7848 x4633)) (and x8362 (and (> 988262939 x9002) (= 1 x6966) (= (x6887 (x7379 x4633)) x7064) (not (< x2535 4)) (> x7064 0) (= 4 x2535) (= x2535 x3255) (> 2217467699 x9002) (= x7575 10936679508223583803006762266923565500374401145016910147028117655998246682624) (not (< x9002 405663989)) (= 32 x8652) (= x9002 405663989)))) (not x7756))))) (and x2496 (and (= 4 x2707) (> x2619 0) (not (< x2707 4)) (< x2826 2217467699) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x2520) (= x8652 32) (> 988262939 x2826) (= 1 x6966) (= x3255 x2707) (= x2826 405663989) (not (> 405663989 x2826)) (= x2619 (x6887 (x7379 x8110))))))) x3439) x8042))) (=> (and (not x4057) (and (= x7965 x625) (= x135 x2243))) x5725))) x809))
(assert (= (and x3321 x8893) x2106))
(assert (x7060 x490))
(assert (x8665 x1256 x172 x3593 x3579))
(assert (x391 x6893))
(assert (x391 x3971))
(assert (= (x3649 (x3789 x4560 1)) (+ (x3649 x4560) 1)))
(assert (= x1899 (and (not x5186) x8245)))
(assert (x391 x3283))
(assert (= x2283 (and x4665 x1415)))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9060))
(assert (= x9278 (and x397 x6776)))
(assert (x391 x3112))
(assert (= (or x1998 x7266) x5304))
(assert (x391 x490))
(assert (x391 x3208))
(assert (= x8677 (and (not x7476) x5158)))
(assert (x391 x5683))
(assert (= x5830 (or x4055 x1017)))
(assert (x391 x3272))
(assert (= (and x1146 x4287) x6481))
(assert (= (and x3660 x5439) x8390))
(assert (x391 x7860))
(assert (= x4923 (and x502 x1273)))
(assert (x391 x2891))
(assert (= x8059 (and (not x7038) x8457)))
(assert (x391 x3301))
(assert (x391 x7118))
(assert (= (and (not x3192) x522) x4714))
(assert (x6103 (- x940 x2012)))
(assert (x8665 x5552 x7316 x5390 x530))
(assert (= x6410 (=> (and (= x828 (x2237 x2364 x4439)) (= x6182 (> x3652 0)) (= (x2237 x3795 x5535) x3652) (= (ite (= x1481 1) 1 0) x2364) (= (x1893 x828 x8528) x3795) (= (ite (= 0 x7025) 1 0) x8528) (= x4439 (ite (< 31 x7025) 1 0))) (and (=> (and x6182 (and (= (x2125 (+ x30 4)) x3666) (= (x2125 (+ 32 x3666)) x8079) (= (x7124 (- x8079 x30)) x8203) (= x2745 (= x8110 x7848)))) (and (=> (and x2745 (and (= x8203 x1562) (> 988262939 x1798) (> 405663989 x1798) (not (= x1798 178855970)) (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x3097) (> x5346 0) (< x1798 2217467699) (= 36 x1562) (not (> 4 x1562)) (not (= x1798 75483562)) (= x4297 x8118) (= (or (> x6165 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6165)) (< x6165 32))) x3399) (= 242558722 x1798) (= (x7124 (- x1562 4)) x6165) (= (x6887 (x7379 x8110)) x5346))) (and (=> (and (and (= x5871 (> x8118 x4775)) (>= x4775 0) (= (x333 x7248) x4775) (= x7746 x4297) (= (x7158 (x7379 x7032) (x5361 6) 0) x7248) (<= x4775 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x3399)) (and (=> (and (and (>= x4391 0) (= (> x4297 x4391) x1801) (= (x333 x156) x4391) (= x156 (x7158 (x7379 x7032) (x5361 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4391)) (not x5871)) (and (=> (and (not x1801) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3133) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4297)) x5550) (<= 0 x3133) (= (< x5550 x3133) x3403) (= x5734 (x7124 (- x4391 x4297))))) (and (=> (and (and (= (x2125 (+ x3133 x4297)) x2248) (> 1461501637330902918203684832716283019655932542976 x5759) (>= 1461501637330902918203684832716283019655932542975 x5759) (= 128 x968) (>= x5759 0) (= (x2125 (+ x3133 x4297)) x551) (= x4830 (= x5759 x5402))) (not x3403)) (and (=> (and (= (= x8110 x5759) x4808) (not x4830)) (and (=> (and x4808 (and (not (= 547091486 x9256)) (= x8110 x2713) (= 599290589 x9256) (> 2217467699 x9256) (= x7746 x5280) (= x6071 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3320 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8253)) (< x8253 96)) (> x8253 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (< x418 4)) (= 100 x418) (= x703 (x6887 (x7379 x8110))) (= x8253 (x7124 (- x418 4))) (> 988262939 x9256) (= x7032 x9254) (not (= 405663989 x9256)) (= 100 x418) (not (> 405663989 x9256)) (< 0 x703))) (and (=> x3320 x7464) (=> (and (not x3320) (and (= x7656 (= x9254 x7032)) (= x9254 x69))) (and (=> (and x7656 (and (= x8944 (= x8110 x2713)) (= x4200 x2713))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6292) (= x8794 (x7158 (x7379 x9254) (x5361 5) 0)) (= (x1401 x8794) x6292) (= (< x6292 x7746) x6078) (<= 0 x6292) (= x5280 x221)) x8944) (and (=> (and (not x6078) (and (<= x980 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1401 x8022) x980) (= x1834 (> x5280 x980)) (<= 0 x980) (= x8022 (x7158 (x7379 x9254) (x5361 5) 0)))) (and (=> (and (and (= x7646 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5280))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x559) (= (x7124 (- x980 x5280)) x8108) (= x9228 (< x7646 x559)) (>= x559 0) (= x8741 (x7158 (x7379 x2713) (x5361 5) 0)) (= x559 (x6195 x8741))) (not x1834)) (and (=> x9228 x7464) (=> (and (not x9228) (and (= x6062 1) (= x5144 32) (= x4418 1) (= (x2125 (+ x5280 x559)) x2336))) x7092))) (=> x1834 x7464))) (=> x6078 x7464))) (=> (not x8944) x7464))) (=> (not x7656) x7464))))) (=> (and (not x4808) (= (= x5049 x5759) x5186)) (and (=> (and (and (= x3059 (x7124 (- x6590 4))) (= x5277 (x6887 (x7379 x5049))) (= x36 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x6590 100) (not (> 4 x6590)) (not (= x9235 547091486)) (= x9235 599290589) (= x6590 100) (> x5277 0) (< x9235 2217467699) (not (= x9235 405663989)) (= x7275 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3059) (and (< x3059 96) (= (<= x3059 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x7746 x7611) (not (< x9235 405663989)) (= x8110 x8379) (< x9235 988262939) (= x1165 x7032)) x5186) (and (=> x7275 x785) (=> (and (not x7275) (and (= x3333 (= x1165 x7032)) (= x1165 x3280))) (and (=> (not x3333) x785) (=> (and (and (= x8379 x8287) (= x2899 (= x8110 x8379))) x3333) (and (=> (and (and (>= x1873 0) (= x7611 x5723) (= (x1833 x9198) x1873) (= x5101 (> x7746 x1873)) (<= x1873 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7158 (x7379 x1165) (x5361 5) 0) x9198)) x2899) (and (=> (and (and (= x2712 (> x7611 x6540)) (= x8343 (x7158 (x7379 x1165) (x5361 5) 0)) (<= 0 x6540) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6540) (= (x1833 x8343) x6540)) (not x5101)) (and (=> (and (not x2712) (and (= x443 (x7124 (- x6540 x7611))) (<= x2876 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7158 (x7379 x8379) (x5361 5) 0) x6416) (= (x4286 x6416) x2876) (<= 0 x2876) (= x8744 (> x2876 x3354)) (= x3354 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7611))))) (and (=> x8744 x785) (=> (and (not x8744) (and (= 1 x5824) (= (x2125 (+ x2876 x7611)) x7481) (= x1498 32) (= x1345 1))) x8050))) (=> x2712 x785))) (=> x5101 x785))) (=> (not x2899) x785))))))) (=> (and (not x5186) (and (and x4876 (and (> 2217467699 x8516) (= x7299 (x7124 (- x6424 4))) (not (= x8516 547091486)) (> x3038 0) (= x8110 x3800) (not (= 405663989 x8516)) (= x3038 (x6887 (x7379 x4633))) (= 100 x6424) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x5507) (not (> 4 x6424)) (not (< x8516 405663989)) (= 100 x6424) (< x8516 988262939) (= x1587 x7746) (= x7032 x8552) (= 599290589 x8516) (= (or (and (= (<= x7299 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x7299 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7299)) x5468))) (= x4876 (= x5759 x4633)))) (and (=> x5468 x657) (=> (and (and (= x8552 x3202) (= x5678 (= x7032 x8552))) (not x5468)) (and (=> (and x5678 (and (= x5088 x3800) (= x5839 (= x8110 x3800)))) (and (=> (and x5839 (and (= (< x9262 x7746) x8750) (= x40 x1587) (= x9262 (x3526 x9101)) (>= x9262 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9262) (= (x7158 (x7379 x8552) (x5361 5) 0) x9101))) (and (=> (and (and (<= x6482 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4321 (< x6482 x1587)) (= x6482 (x3526 x4257)) (>= x6482 0) (= (x7158 (x7379 x8552) (x5361 5) 0) x4257)) (not x8750)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x466) (= x4282 (x7124 (- x6482 x1587))) (= x6593 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1587))) (= (> x466 x6593) x6733) (<= 0 x466) (= (x1662 x5860) x466) (= x5860 (x7158 (x7379 x3800) (x5361 5) 0))) (not x4321)) (and (=> x6733 x657) (=> (and (and (= x4927 1) (= 32 x7203) (= x800 1) (= x1884 (x2125 (+ x1587 x466)))) (not x6733)) x1261))) (=> x4321 x657))) (=> x8750 x657))) (=> (not x5839) x657))) (=> (not x5678) x657))))))))) (=> (and (and (= x8110 x8242) (= x1765 x7032) (< 0 x3912) (not (< x5418 4)) (= x3912 (x6887 (x7379 x5402))) (= x2961 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x2790 599290589) (= x4207 x7746) (= x1468 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x618)) (> 96 x618)) (> x618 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (< x2790 599290589)) (= (x7124 (- x5418 4)) x618) (< x2790 1466279372) (= x5418 100) (= 100 x5418)) x4830) (and (=> x1468 x8459) (=> (and (not x1468) (and (= (= x1765 x7032) x4925) (= x1765 x3401))) (and (=> (not x4925) x8459) (=> (and (and (= (= x8110 x8242) x6162) (= x8242 x2671)) x4925) (and (=> (not x6162) x8459) (=> (and (and (= x7084 (x7158 (x7379 x1765) (x5361 1) 0)) (>= x9222 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9222) (= x644 x4207) (= x8430 (> x7746 x9222)) (= (x4475 x7084) x9222)) x6162) (and (=> (and (= (> x4207 x9222) x4766) (not x8430)) (and (=> (and (and (= (x7158 (x7379 x8242) (x5361 1) 0) x6896) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7102) (= x8449 (x7158 (x7379 x1765) (x5361 1) 0)) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4207)) x4785) (= x6147 (< x4785 x7102)) (>= x7102 0) (= x97 (x7124 (- x9222 x4207))) (= (x2047 x6896) x7102)) (not x4766)) (and (=> (and (not x6147) (and (= (< x5017 x7102) x4619) (= (x2125 (+ x7102 x4207)) x5017))) (and (=> x4619 x8459) (=> (and (and (= x6019 (x7158 (x7379 x1765) (x5361 2) 0)) (= x7926 (x7158 (x7379 x8110) x6019 0)) (= x7603 (x307 x7926)) (= x2412 (x7158 (x7379 x8242) (x5361 1) 0)) (<= 0 x7603) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7603) (= (< x7603 x4207) x8829)) (not x4619)) (and (=> (and (not x8829) (= (< x7603 x4207) x5452)) (and (=> x5452 x8459) (=> (and (and (= x9113 (x7158 (x7379 x8110) x5688 0)) (= x4251 (x7124 (- x7603 x4207))) (= 32 x2265) (= 1 x9265) (= (x7158 (x7379 x1765) (x5361 2) 0) x5688)) (not x5452)) x1034))) (=> x8829 x8459))))) (=> x6147 x8459))) (=> x4766 x8459))) (=> x8430 x8459))))))))))) (=> (and x3403 (= x3133 x3398)) x6520))) (=> (and (= x3398 x3133) x1801) x6520))) (=> (and x5871 (= x3133 x3398)) x6520))) (=> (and x3399 (= x3133 x3398)) x6520))) (=> (and (= x1238 (= x5049 x7848)) (not x2745)) (and (=> (and x1238 (and (= (or (and (= true (<= x4234 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x4234)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4234)) x7999) (not (< x3474 4)) (not (= 178855970 x1171)) (not (= x1171 75483562)) (< x1171 405663989) (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x7010) (< 0 x260) (< x1171 2217467699) (= x8541 x8118) (= x8203 x3474) (= (x7124 (- x3474 4)) x4234) (= (x6887 (x7379 x5049)) x260) (= x1171 242558722) (= 36 x3474) (> 988262939 x1171))) (and (=> (and x7999 (= x8790 x518)) x5878) (=> (and (and (= x2034 (x8441 x8686)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2034) (= x8686 (x7158 (x7379 x7032) (x5361 6) 0)) (= (< x2034 x8118) x8469) (>= x2034 0) (= x8541 x4940)) (not x7999)) (and (=> (and (not x8469) (and (= x2441 (< x743 x8541)) (= x743 (x8441 x51)) (<= x743 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x743) (= (x7158 (x7379 x7032) (x5361 6) 0) x51))) (and (=> (and (= x8790 x518) x2441) x5878) (=> (and (not x2441) (and (= x54 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8541))) (= (< x54 x8790) x3562) (<= 0 x8790) (= x2330 (x7124 (- x743 x8541))) (<= x8790 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (= x4405 (x2125 (+ x8790 x8541))) (< x3921 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x3921) (= (x2125 (+ x8541 x8790)) x1643) (= (= x3921 x5402) x5849) (<= 0 x3921) (= x1840 128)) (not x3562)) (and (=> (and (= x5946 (= x8110 x3921)) (not x5849)) (and (=> (and x5946 (and (= (x6887 (x7379 x8110)) x7772) (not (> 4 x4268)) (not (= x7440 547091486)) (= x4268 100) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1503) (and (= (<= x1503 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1503 96))) x8241) (= x7032 x2765) (not (= x7440 405663989)) (not (> 405663989 x7440)) (< 0 x7772) (> 988262939 x7440) (= x4524 x4940) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x6914) (= x1503 (x7124 (- x4268 4))) (= 599290589 x7440) (= x2354 x5049) (= 100 x4268) (> 2217467699 x7440))) (and (=> x8241 x421) (=> (and (and (= x2765 x5334) (= (= x2765 x7032) x6978)) (not x8241)) (and (=> (not x6978) x421) (=> (and x6978 (and (= x3400 (= x5049 x2354)) (= x6880 x2354))) (and (=> (not x3400) x421) (=> (and (and (= (x1401 x1033) x1018) (= x4679 x4524) (= x1033 (x7158 (x7379 x2765) (x5361 5) 0)) (= (< x1018 x4940) x5798) (<= 0 x1018) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1018)) x3400) (and (=> x5798 x421) (=> (and (not x5798) (and (= x6436 (< x3261 x4524)) (<= x3261 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3819 (x7158 (x7379 x2765) (x5361 5) 0)) (>= x3261 0) (= x3261 (x1401 x3819)))) (and (=> (and (not x6436) (and (= (x7124 (- x3261 x4524)) x64) (= (x3539 x2581) x1148) (>= x1148 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1148) (= x2581 (x7158 (x7379 x2354) (x5361 5) 0)) (= (> x1148 x8749) x4170) (= x8749 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4524))))) (and (=> (and (not x4170) (and (= 1 x6282) (= 1 x5905) (= x5986 32) (= x2009 (x2125 (+ x1148 x4524))))) x2016) (=> x4170 x421))) (=> x6436 x421))))))))))) (=> (and (not x5946) (= x6166 (= x3921 x5049))) (and (=> (and x6166 (and (> x7332 0) (= x5049 x392) (not (> 4 x7270)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1279) (= x4392 (or (> x3427 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x3427 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x3427)))) (> 2217467699 x3775) (not (= 405663989 x3775)) (not (> 405663989 x3775)) (> 988262939 x3775) (= x7270 100) (= x5634 x4940) (= x7431 x7032) (= (x6887 (x7379 x5049)) x7332) (not (= x3775 547091486)) (= (x7124 (- x7270 4)) x3427) (= x7270 100) (= x3775 599290589))) (and (=> (and (not x4392) (and (= x404 (= x7032 x7431)) (= x2333 x7431))) (and (=> (and x404 (and (= x392 x8554) (= x6042 (= x392 x5049)))) (and (=> (and x6042 (and (= (x1833 x5874) x3087) (<= 0 x3087) (= x1743 x5634) (<= x3087 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5874 (x7158 (x7379 x7431) (x5361 5) 0)) (= x8720 (< x3087 x4940)))) (and (=> (and (not x8720) (and (= (> x5634 x7530) x8132) (= (x1833 x1057) x7530) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7530) (= x1057 (x7158 (x7379 x7431) (x5361 5) 0)) (<= 0 x7530))) (and (=> x8132 x2282) (=> (and (and (>= x692 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x692) (= x9223 (x7158 (x7379 x392) (x5361 5) 0)) (= (x3238 x9223) x692) (= x7145 (x7124 (- x7530 x5634))) (= (> x692 x494) x8247) (= x494 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5634)))) (not x8132)) (and (=> x8247 x2282) (=> (and (and (= x2429 1) (= 1 x6673) (= x8807 32) (= (x2125 (+ x692 x5634)) x6006)) (not x8247)) x375))))) (=> x8720 x2282))) (=> (not x6042) x2282))) (=> (not x404) x2282))) (=> x4392 x2282))) (=> (and (not x6166) (and (and x4465 (and (= x9142 (x7124 (- x658 4))) (= x4940 x5762) (= (x6887 (x7379 x4633)) x4387) (= x3461 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x5049 x6453) (= 100 x658) (not (= 405663989 x5287)) (= x7032 x359) (> x4387 0) (< x5287 988262939) (not (> 405663989 x5287)) (= x5287 599290589) (not (= x5287 547091486)) (= x5820 (or (> x9142 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x9142) true) (> 96 x9142)))) (not (> 4 x658)) (< x5287 2217467699) (= x658 100))) (= (= x4633 x3921) x4465))) (and (=> (and (and (= x359 x2080) (= (= x359 x7032) x7873)) (not x5820)) (and (=> (not x7873) x1071) (=> (and (and (= x6453 x4040) (= (= x6453 x5049) x8649)) x7873) (and (=> (and (and (= (x3526 x1197) x3619) (= x570 (> x4940 x3619)) (<= 0 x3619) (= x5762 x171) (= x1197 (x7158 (x7379 x359) (x5361 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3619)) x8649) (and (=> x570 x1071) (=> (and (and (<= x2853 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2853 (x3526 x1227)) (>= x2853 0) (= x1227 (x7158 (x7379 x359) (x5361 5) 0)) (= x7054 (< x2853 x5762))) (not x570)) (and (=> x7054 x1071) (=> (and (not x7054) (and (= (x4049 x6408) x468) (= (> x468 x7590) x4720) (>= x468 0) (= x7590 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5762))) (<= x468 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7124 (- x2853 x5762)) x8076) (= x6408 (x7158 (x7379 x6453) (x5361 5) 0)))) (and (=> (and (not x4720) (and (= (x2125 (+ x5762 x468)) x7779) (= x8056 1) (= x5124 1) (= 32 x4330))) x3494) (=> x4720 x1071))))))) (=> (not x8649) x1071))))) (=> x5820 x1071))))))) (=> (and x5849 (and (not (> 4 x2839)) (= 100 x2839) (= x6983 (x7124 (- x2839 4))) (> x2561 0) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x5050) (not (> 599290589 x738)) (= x738 599290589) (= x2561 (x6887 (x7379 x5402))) (= x4940 x8249) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6983)) (> 96 x6983)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6983)) x5421) (= x5049 x212) (= x4415 x7032) (= 100 x2839) (< x738 1466279372))) (and (=> (and (and (= x6884 x4415) (= (= x7032 x4415) x3728)) (not x5421)) (and (=> (not x3728) x3163) (=> (and x3728 (and (= x5967 x212) (= x1594 (= x5049 x212)))) (and (=> (and (and (= (x7158 (x7379 x4415) (x5361 1) 0) x5156) (= x8249 x6889) (<= 0 x8706) (= (< x8706 x4940) x732) (<= x8706 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4475 x5156) x8706)) x1594) (and (=> x732 x3163) (=> (and (not x732) (= x3612 (> x8249 x8706))) (and (=> (and (and (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8249)) x4580) (= (x5591 x3296) x7354) (= (x7124 (- x8706 x8249)) x7112) (= x6890 (x7158 (x7379 x4415) (x5361 1) 0)) (>= x7354 0) (= (> x7354 x4580) x7591) (= (x7158 (x7379 x212) (x5361 1) 0) x3296) (<= x7354 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x3612)) (and (=> (and (and (= x6721 (< x1349 x7354)) (= (x2125 (+ x7354 x8249)) x1349)) (not x7591)) (and (=> (and (and (= (x7158 (x7379 x5049) x5795 0) x4693) (= x3433 (x7158 (x7379 x212) (x5361 1) 0)) (<= x8644 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8644 (x307 x4693)) (= (x7158 (x7379 x4415) (x5361 2) 0) x5795) (<= 0 x8644) (= (< x8644 x8249) x5)) (not x6721)) (and (=> x5 x3163) (=> (and (not x5) (= x2740 (< x8644 x8249))) (and (=> x2740 x3163) (=> (and (not x2740) (and (= x4157 1) (= x6220 (x7158 (x7379 x4415) (x5361 2) 0)) (= (x7124 (- x8644 x8249)) x3115) (= (x7158 (x7379 x5049) x6220 0) x5117) (= x2873 32))) x7148))))) (=> x6721 x3163))) (=> x7591 x3163))) (=> x3612 x3163))))) (=> (not x1594) x3163))))) (=> x5421 x3163))))) (=> (and x3562 (= x8790 x518)) x5878))))) (=> (and x8469 (= x8790 x518)) x5878))))) (=> (and (and (= (= x7848 x4633) x2162) (and (and (> x4502 0) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8197) true) (> 32 x8197)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8197)) x8536) (> 988262939 x9239) (> 405663989 x9239) (= x5995 6539370208772218570076773595062200405109424842860869254164860851635934461952) (= x8203 x11) (= (x6887 (x7379 x4633)) x4502) (= 242558722 x9239) (< x9239 2217467699) (not (> 4 x11)) (not (= 75483562 x9239)) (= x8118 x6467) (= x11 36) (= (x7124 (- x11 4)) x8197) (not (= x9239 178855970))) x2162)) (not x1238)) (and (=> (and (and (<= x9057 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1698 x2289) x9057) (= x7935 x6467) (>= x9057 0) (= (< x9057 x8118) x7567) (= (x7158 (x7379 x7032) (x5361 6) 0) x2289)) (not x8536)) (and (=> (and (and (= (x7158 (x7379 x7032) (x5361 6) 0) x2257) (>= x6805 0) (= (> x6467 x6805) x7306) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6805) (= x6805 (x1698 x2257))) (not x7567)) (and (=> (and (= x1841 x2519) x7306) x8149) (=> (and (not x7306) (and (<= 0 x1841) (= (x7124 (- x6805 x6467)) x752) (= (< x5408 x1841) x4048) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1841) (= x5408 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6467))))) (and (=> (and x4048 (= x1841 x2519)) x8149) (=> (and (not x4048) (and (= x3395 (x2125 (+ x1841 x6467))) (>= x1062 0) (= (= x5402 x1062) x7802) (<= x1062 1461501637330902918203684832716283019655932542975) (< x1062 1461501637330902918203684832716283019655932542976) (= (x2125 (+ x1841 x6467)) x5919) (= x7922 128))) (and (=> (and x7802 (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1041) (< 0 x7059) (= 100 x8325) (= x4633 x6711) (= 100 x8325) (= (x6887 (x7379 x5402)) x7059) (= x1340 x7032) (= x1497 x7935) (< x2357 1466279372) (= (or (and (= true (<= x3972 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x3972)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3972)) x9092) (= (x7124 (- x8325 4)) x3972) (not (< x2357 599290589)) (= 599290589 x2357) (not (> 4 x8325)))) (and (=> (and (and (= x6612 x1340) (= x5436 (= x7032 x1340))) (not x9092)) (and (=> (not x5436) x6057) (=> (and x5436 (and (= x6711 x6048) (= (= x6711 x4633) x4028))) (and (=> (not x4028) x6057) (=> (and (and (= x1497 x5856) (= (x4475 x4505) x5750) (= (< x5750 x7935) x990) (<= 0 x5750) (= x4505 (x7158 (x7379 x1340) (x5361 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5750)) x4028) (and (=> x990 x6057) (=> (and (= x1199 (< x5750 x1497)) (not x990)) (and (=> (and (and (<= x127 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7509 x6552) x127) (= (x7158 (x7379 x6711) (x5361 1) 0) x6552) (= x6353 (x7158 (x7379 x1340) (x5361 1) 0)) (<= 0 x127) (= (> x127 x964) x1267) (= (x7124 (- x5750 x1497)) x4363) (= x964 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1497)))) (not x1199)) (and (=> (and (not x1267) (and (= x4971 (x2125 (+ x127 x1497))) (= (< x4971 x127) x218))) (and (=> (and (not x218) (and (= (x7158 (x7379 x4633) x7599 0) x1659) (<= x451 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2326 (> x1497 x451)) (>= x451 0) (= (x307 x1659) x451) (= (x7158 (x7379 x1340) (x5361 2) 0) x7599) (= (x7158 (x7379 x6711) (x5361 1) 0) x7166))) (and (=> x2326 x6057) (=> (and (not x2326) (= (> x1497 x451) x6308)) (and (=> (and (and (= x8093 1) (= x8162 (x7158 (x7379 x4633) x3168 0)) (= x3168 (x7158 (x7379 x1340) (x5361 2) 0)) (= (x7124 (- x451 x1497)) x120) (= 32 x2706)) (not x6308)) x4919) (=> x6308 x6057))))) (=> x218 x6057))) (=> x1267 x6057))) (=> x1199 x6057))))))))) (=> x9092 x6057))) (=> (and (= x9135 (= x1062 x8110)) (not x7802)) (and (=> (and x9135 (and (= x399 (x6887 (x7379 x8110))) (not (= x2942 547091486)) (> 2217467699 x2942) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x7650) (= x4013 (x7124 (- x1749 4))) (= 100 x1749) (= 599290589 x2942) (not (< x2942 405663989)) (= 100 x1749) (= x7935 x4193) (not (= x2942 405663989)) (< x2942 988262939) (= x2004 x7032) (= x4299 (or (and (> 96 x4013) (= (<= x4013 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4013))) (not (> 4 x1749)) (= x8543 x4633) (< 0 x399))) (and (=> x4299 x7333) (=> (and (not x4299) (and (= x100 x2004) (= (= x7032 x2004) x3817))) (and (=> (and (and (= x8543 x24) (= x4269 (= x8543 x4633))) x3817) (and (=> (not x4269) x7333) (=> (and (and (= x6138 x4193) (= x7014 (x7158 (x7379 x2004) (x5361 5) 0)) (<= x884 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1401 x7014) x884) (<= 0 x884) (= x6844 (> x7935 x884))) x4269) (and (=> (and (not x6844) (and (>= x6016 0) (= x4512 (> x4193 x6016)) (<= x6016 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x6016 (x1401 x4811)) (= (x7158 (x7379 x2004) (x5361 5) 0) x4811))) (and (=> x4512 x7333) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9237) (= (x8982 x463) x9237) (= x5424 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4193))) (= x5590 (x7124 (- x6016 x4193))) (<= 0 x9237) (= (> x9237 x5424) x4197) (= (x7158 (x7379 x8543) (x5361 5) 0) x463)) (not x4512)) (and (=> (and (not x4197) (and (= (x2125 (+ x9237 x4193)) x9053) (= x5819 1) (= 32 x7407) (= 1 x1152))) x5982) (=> x4197 x7333))))) (=> x6844 x7333))))) (=> (not x3817) x7333))))) (=> (and (not x9135) (= x2701 (= x5049 x1062))) (and (=> (and x2701 (and (= x2262 100) (not (= 405663989 x1799)) (not (< x1799 405663989)) (= (x6887 (x7379 x5049)) x6437) (= x2262 100) (= x1799 599290589) (not (> 4 x2262)) (= x3879 x7935) (not (= 547091486 x1799)) (< x1799 988262939) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4444) (> x6437 0) (= x4633 x7560) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7778) true) (< x7778 96)) (> x7778 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x6563) (= x2423 x7032) (< x1799 2217467699) (= (x7124 (- x2262 4)) x7778))) (and (=> x6563 x2256) (=> (and (and (= x5259 x2423) (= (= x7032 x2423) x586)) (not x6563)) (and (=> (not x586) x2256) (=> (and x586 (and (= x9213 (= x7560 x4633)) (= x7560 x2437))) (and (=> (and (and (= x8326 x3879) (= x323 (> x7935 x7548)) (<= x7548 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x7548 0) (= x8847 (x7158 (x7379 x2423) (x5361 5) 0)) (= (x1833 x8847) x7548)) x9213) (and (=> (and (not x323) (and (= (< x6886 x3879) x5095) (>= x6886 0) (= (x1833 x698) x6886) (<= x6886 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x698 (x7158 (x7379 x2423) (x5361 5) 0)))) (and (=> x5095 x2256) (=> (and (not x5095) (and (= (x892 x6802) x1771) (= (x7158 (x7379 x7560) (x5361 5) 0) x6802) (<= x1771 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7124 (- x6886 x3879)) x3026) (= x5675 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3879))) (>= x1771 0) (= (< x5675 x1771) x5642))) (and (=> (and (and (= x4561 (x2125 (+ x3879 x1771))) (= 1 x3269) (= x2472 32) (= 1 x2562)) (not x5642)) x5903) (=> x5642 x2256))))) (=> x323 x2256))) (=> (not x9213) x2256))))))) (=> (and (not x2701) (and (= x4152 (= x1062 x4633)) (and (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x157) (= x4964 100) (= x4964 100) (= (x6887 (x7379 x4633)) x5386) (= x7367 x7032) (< x4314 2217467699) (= x1923 x7935) (= x5738 (x7124 (- x4964 4))) (< x4314 988262939) (= x4314 599290589) (= x4633 x3283) (not (> 405663989 x4314)) (= (or (> x5738 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x5738 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x5738 96))) x1941) (> x5386 0) (not (= 547091486 x4314)) (not (> 4 x4964)) (not (= 405663989 x4314))) x4152))) (and (=> x1941 x3471) (=> (and (not x1941) (and (= x7367 x898) (= (= x7032 x7367) x5236))) (and (=> (not x5236) x3471) (=> (and (and (= (= x3283 x4633) x1985) (= x3283 x8442)) x5236) (and (=> (and (and (= x1923 x2055) (<= x7483 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x993 (< x7483 x7935)) (>= x7483 0) (= x1411 (x7158 (x7379 x7367) (x5361 5) 0)) (= x7483 (x3526 x1411))) x1985) (and (=> (and (and (= x6152 (x3526 x8928)) (= (x7158 (x7379 x7367) (x5361 5) 0) x8928) (= x1392 (> x1923 x6152)) (<= 0 x6152) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6152)) (not x993)) (and (=> x1392 x3471) (=> (and (not x1392) (and (>= x8639 0) (= x8663 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1923))) (= x8639 (x4487 x1103)) (= (x7124 (- x6152 x1923)) x7577) (= (x7158 (x7379 x3283) (x5361 5) 0) x1103) (= x6542 (< x8663 x8639)) (<= x8639 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (= x4801 1) (= 1 x7012) (= 32 x579) (= x1318 (x2125 (+ x8639 x1923)))) (not x6542)) x1652) (=> x6542 x3471))))) (=> x993 x3471))) (=> (not x1985) x3471))))))))))))))))) (=> (and (= x2519 x1841) x7567) x8149))) (=> (and (= x1841 x2519) x8536) x8149))))))) (=> (not x6182) x2322)))))
(assert (x8665 x2780 x172 x2012 x5116))
(assert (= x8910 (and (not x8575) x8572)))
(assert (x391 x6448))
(assert (=> (>= 10000 x2507) (= (x7379 x2507) (x5361 x2507))))
(assert (x391 x4000))
(assert (x391 x2759))
(assert (=> (>= 10000 x9254) (= (x5361 x9254) (x7379 x9254))))
(assert (x8665 x5390 x530 x530 x9039))
(assert (= (+ (x3649 x606) 1) (x3649 (x3789 x606 1))))
(assert (x6103 (- x530 x4135)))
(assert (= x7254 (and x271 (not x2580))))
(assert (= x7420 (or (and x2117 x1253) (and x4287 (not x1146)) (and x6477 x882) (and x6481 x3300) x6554 x177 (and x4592 x1910) (and (not x6012) x1126) x3960)))
(assert (= (or x4198 x8527) x2487))
(assert (= (and (not x456) x7762) x6707))
(assert (x391 x5189))
(assert (x391 x8381))
(assert (x391 x231))
(assert (= x3550 (=> (and (= x8906 (= x1515 0)) (or (and (and (= x6977 (x7158 (x7379 x7848) (x5361 159) 0)) (= (x7158 (x7379 x7448) x6977 0) x3217) (>= x2816 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2816) (= x2816 (x3999 x977)) (= x3580 (= x2816 0)) (= x977 (x3789 x3217 1)) (= x2856 (ite x3580 1 0))) (not x8906)) (and (= x2856 x1515) x8906))) x6499)))
(assert (= (+ (x3649 x7179) 1) (x3649 (x3789 x7179 1))))
(assert (= (and x6294 x1870) x118))
(assert (x391 x1220))
(assert (x1052 x8896 x7221))
(assert (x391 x5175))
(assert (x391 x6877))
(assert (= x2038 (or x6982 x6959)))
(assert (= (or x5031 x8234) x7117))
(assert (x391 x3897))
(assert (= (and x897 x4882) x1792))
(assert (x4156 x4135 x2012 x7316 x5552))
(assert (x6103 (- x774 x5390)))
(assert (x391 x7440))
(assert (=> (>= 10000 x8690) (= (x5361 x8690) (x7379 x8690))))
(assert (= x1002 (and x8910 (not x7293))))
(assert (x391 x844))
(assert (= (and x1758 (not x4908)) x3177))
(assert (x391 x619))
(assert (x391 x744))
(assert (x391 x5831))
(assert (= (and x5201 x7222) x3343))
(assert (= (x3649 (x7379 x130)) x130))
(assert (= (x3649 (x7379 x6067)) x6067))
(assert (x391 x7030))
(assert (= (and x9205 x4120) x1826))
(assert (x391 x2963))
(assert (x6103 (- x9039 x1726)))
(assert (= (and (not x2021) x424) x5515))
(assert (= x8043 (or x3225 x2468)))
(assert (x8665 x4135 x2012 x7316 x5552))
(assert (x391 x2602))
(assert (= x7427 (and x1832 x1580)))
(assert (= (=> (and (= x7956 x5676) (= x6817 0)) x1979) x4190))
(assert (x391 x4492))
(assert (x391 x4510))
(assert (= (x3649 (x7379 x212)) x212))
(assert (x1257 x291))
(assert (x391 x6875))
(assert (x391 x5937))
(assert (x4191 x7316 (- x5552 x1256)))
(assert (= (x3649 (x7379 x6397)) x6397))
(assert (x391 x6611))
(assert (= (and x5998 (not x573)) x638))
(assert (= (or x2269 x6419) x4143))
(assert (x391 x6903))
(assert (= 0 (x6991 416)))
(assert (=> (>= 10000 x8110) (= (x5361 x8110) (x7379 x8110))))
(assert (x391 x3188))
(assert (x391 x5015))
(assert (x7060 x5875))
(assert (x391 x8800))
(assert (= x4760 (or x4714 x1862)))
(assert (x8665 x2012 x5116 x774 x490))
(assert (x391 x6282))
(assert (= (=> (and (= x1216 x5986) (= x5905 0)) x2016) x421))
(assert (= x5330 (and x8144 x1713)))
(assert (x391 x8868))
(assert (x4156 x2780 x172 x8031 x5766))
(assert (= (x3649 (x3789 x3602 1)) (+ 1 (x3649 x3602))))
(assert (x391 x1324))
(assert (x391 x6909))
(assert (x391 x5835))
(assert (x1052 x5625 x3772))
(assert (=> (>= 10000 x7312) (= (x7379 x7312) (x5361 x7312))))
(assert (x391 x157))
(assert (x391 x5555))
(assert (x391 x753))
(assert (x391 x1216))
(assert (x4191 x5552 (- x7316 x774)))
(assert (= x1720 (not (and (>= 1461501637330902918203684832716283019655932542975 x8562) (> 1461501637330902918203684832716283019655932542976 x8562) (= x1025 (x7158 (x7379 x7358) x8220 0)) (= x7685 (x3789 x1025 1)) (>= x8562 0) (= (x77 x7685) x8562)))))
(assert (x391 x7357))
(assert (x6103 (- x9039 x2012)))
(assert (x391 x3796))
(assert (= x116 (and x6710 x4750)))
(assert (= (x3649 (x7379 x1354)) x1354))
(assert (x4191 x9039 (- x530 x172)))
(assert (= (and x2391 x3156) x6964))
(assert (= x6727 (=> (and (or (and (= (x7158 (x7379 x6895) x5581 0) x8052) (not x8313)) (and x8313 (= x244 (x3789 x5581 2)))) (= (= x6895 0) x8313)) x2209)))
(assert (x7060 x3086))
(assert (x8665 x9039 x530 x1256 x172))
(assert (= x6405 (and x5959 x7469)))
(assert (= (and x3257 x4612) x8593))
(assert (x2252 x2507))
(assert (x391 x6432))
(assert (= x3714 (and x5978 x3483)))
(assert (= (and (not x8589) x3099) x3134))
(assert (x391 x5962))
(assert (= x3453 (or x5799 x3975)))
(assert (= (or x5496 x367) x4827))
(assert (= x7694 (or x4483 x6607)))
(assert (x391 x3736))
(assert (= (+ (x3649 x6564) 1) (x3649 (x3789 x6564 1))))
(assert (x391 x6255))
(assert (x8665 x530 x5390 x4135 x2012))
(assert (x391 x8612))
(assert (= (x3649 (x7379 x3166)) x3166))
(assert (x391 x694))
(assert (= x7667 (and x4664 x1467)))
(assert (x391 x8590))
(assert (x391 x2523))
(assert (= x726 (and x7737 x3516)))
(assert (= (x3649 (x5361 24044834009420335638544845215851342251227478490780828673611325350056707489792)) 24044834009420335638544845215851342251227478490780828673611325350056707489792))
(assert (= x6940 (and x3956 (not x642))))
(assert (= (and x3868 x529) x3692))
(assert (x391 x3130))
(assert (x391 x9107))
(assert (x8637 x6743))
(assert (x4191 x940 (- x1726 x5390)))
(assert (x7060 x5800))
(assert (= (x3649 (x3789 x7578 1)) (+ 1 (x3649 x7578))))
(assert (= 117300739 (x3649 (x5361 117300739))))
(assert (x391 x6217))
(assert (x391 x1260))
(assert (= (and x8736 (not x2606)) x2436))
(assert (= x3170 (and x4703 (not x8578))))
(assert (x391 x4826))
(assert (x8665 x8031 x5766 x4135 x2012))
(assert (x7060 x622))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x8304 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x8304 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x8304 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x8304 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x8304 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x8304 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x8304)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x8304))) (x8005 1000000000000000000 x8304) (= (x7029 1000000000000000000 x8304) (* 1000000000000000000 x8304)) (x1844 1000000000000000000 x8304) (x7186 1000000000000000000 x8304) (x997 1000000000000000000 x8304) (x1348 1000000000000000000 x8304)))
(assert (= x7687 (and x2586 x1927)))
(assert (x391 x3579))
(assert (= x6847 (and x617 (not x1334))))
(assert (x391 x6918))
(assert (= x2425 (and (not x1460) x5742)))
(assert (x391 x8880))
(assert (x391 x1503))
(assert (= x4598 (or x4236 x7662)))
(assert (= (+ 1 (x3649 x8504)) (x3649 (x3789 x8504 1))))
(assert (x6103 (- x2012 x1726)))
(assert (x2252 x4789))
(assert (= x1530 (and x522 x3192)))
(assert (= x1765 (x3649 (x7379 x1765))))
(assert (=> (>= 10000 x4633) (= (x7379 x4633) (x5361 x4633))))
(assert (x4191 x4135 (- x2012 x490)))
(assert (x1052 x5062 x8584))
(assert (x391 x7470))
(assert (x8637 x7605))
(assert (x4156 x2012 x5116 x7316 x5552))
(assert (x4156 x172 x1256 x5390 x530))
(assert (x4191 x172 (- x1256 x3579)))
(assert (= x4913 (or x5548 x3892)))
(assert (= (and x3687 (not x4953)) x1600))
(assert (x391 x2261))
(assert (= (and x6745 x9227) x731))
(assert (= (and x8279 (not x8342)) x4697))
(assert (x4191 x530 (- x9039 x3593)))
(assert (= x6885 (and (not x2833) x1544)))
(assert (x391 x8749))
(assert (x391 x5434))
(assert (= (and x8205 x5480) x1860))
(assert (= x1949 (and x4520 x7765)))
(assert (x4156 x9039 x530 x490 x774))
(assert (= x5311 (and (not x6878) x8297)))
(assert (= x8567 (and (not x6135) x8372)))
(assert (x6103 (- x940 x530)))
(assert (= x4161 (and x7805 x3989)))
(assert (= (x3649 (x3789 x7960 1)) (+ 1 (x3649 x7960))))
(assert (x1052 x95 x2318))
(assert (=> (>= 10000 x8125) (= (x5361 x8125) (x7379 x8125))))
(assert (x8665 x7316 x5552 x172 x2780))
(assert (=> (<= x8009 10000) (= (x7379 x8009) (x5361 x8009))))
(assert (x8665 x5766 x8031 x5390 x530))
(assert (= (=> (and (= x7413 x8735) (= x4204 x863)) x5724) x4260))
(assert (x391 x8865))
(assert (= (and (not x2142) x6900) x266))
(assert (= (and (not x5092) x360) x170))
(assert (= x1847 (and (not x5914) x941)))
(assert (= (and x782 x3439) x8109))
(assert (x8665 x3579 x3593 x4135 x2012))
(assert (x391 x6908))
(assert (x2252 x6526))
(assert (= x5114 (and x8861 x515)))
(assert (x391 x3334))
(assert (x391 x4909))
(assert (x391 x6292))
(assert (x4156 x5766 x8031 x1726 x940))
(assert (=> (>= 10000 x9122) (= (x5361 x9122) (x7379 x9122))))
(assert (= x6711 (x3649 (x7379 x6711))))
(assert (x391 x6475))
(assert (x4191 x2012 (- x4135 x172)))
(assert (= 398450620 (x3649 (x5361 398450620))))
(assert (x6103 (- x3593 x774)))
(assert (=> (>= 10000 x1878) (= (x5361 x1878) (x7379 x1878))))
(assert (= x1378 (and x2293 (not x2712))))
(assert (= x2545 (=> (and (= x7030 x8240) (= x7027 0)) x1473)))
(assert (x391 x4129))
(assert (= (x3649 (x3789 x6939 1)) (+ 1 (x3649 x6939))))
(assert (= x5827 x1129))
(assert (x391 x4418))
(assert (x391 x8242))
(assert (x4156 x5390 x530 x3593 x3579))
(assert (x391 x382))
(assert (= (x3649 (x7379 x1340)) x1340))
(assert (x391 x1517))
(assert (= (+ (x3649 x8957) 1) (x3649 (x3789 x8957 1))))
(assert (= (x3649 (x7379 x6176)) x6176))
(assert (= (and x6636 x8355) x8645))
(assert (x8637 x3366))
(assert (x6103 (- x2780 x172)))
(assert (= x1034 (=> (and (= x2955 x2265) (= x9265 x6946)) x3696)))
(assert (x391 x3566))
(assert (= (and x6357 x4053) x4388))
(assert (= (and x5731 x2348) x2598))
(assert (= (or x4761 x5516) x780))
(assert (= x339 (and x8156 x2361)))
(assert (= x8064 (or x2221 x1172 x389)))
(assert (= x8222 (and (not x4409) x6198)))
(assert (= x4335 (and (not x993) x1128)))
(assert (x2252 x5718))
(assert (x2624 x2810 x530))
(assert (x391 x3371))
(assert (= x7116 (and x2543 (not x67))))
(assert (= x2741 (and x945 x1370)))
(assert (= (=> (and (= x8807 x1216) (= 0 x2429)) x375) x2282))
(assert (= (and x2230 x3489) x487))
(assert (= x6017 (and x2938 x820)))
(assert (x4191 x530 (- x5390 x1726)))
(assert (x391 x7203))
(assert (x391 x3772))
(assert (x391 x7301))
(assert (=> (>= 10000 x7242) (= (x7379 x7242) (x5361 x7242))))
(assert (x391 x1512))
(assert (and (x5662 x3199 1000000000000000000) (x6638 x3199 1000000000000000000) (=> (and (< 0 x3199) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x3199 1000000000000000000)) (- x3199 1000000000000000000)) (>= x3199 (* 1000000000000000000 (x4526 x3199 1000000000000000000))))) (x4068 x3199 1000000000000000000) (x797 x3199 1000000000000000000)))
(assert (= (and x4876 x1899) x7792))
(assert (= (and x6579 x7853) x8085))
(assert (=> (<= x7114 10000) (= (x7379 x7114) (x5361 x7114))))
(assert (x391 x6450))
(assert (= (and x5742 x1460) x5530))
(assert (= x7290 (and x9100 (not x272))))
(assert (= x9055 (and x883 x4028)))
(assert (x4191 x9039 (- x530 x3579)))
(assert (= x2244 (and x4440 (not x2501))))
(assert (x4191 x530 (- x5390 x5116)))
(assert (= (=> (and (= x942 x2781) (= x5046 0)) x9028) x7496))
(assert (=> (<= x6496 10000) (= (x7379 x6496) (x5361 x6496))))
(assert (x6103 (- x7316 x490)))
(assert (= x3445 (and x783 x8062)))
(assert (x8665 x3579 x3593 x9039 x530))
(assert (= (and x9055 (not x990)) x2928))
(assert (= (x3649 (x7379 x5123)) x5123))
(assert (= x7944 (x3649 (x7379 x7944))))
(assert (x391 x211))
(assert (= x1917 (=> (and (or (and (= (x3789 x8237 2) x5934) x2142) (and (not x2142) (= (x7158 (x7379 x6599) x8237 0) x9172))) (= (= x6599 0) x2142)) x5383)))
(assert (= x7635 (and (not x8546) x3628)))
(assert (x391 x5004))
(assert (= (x3649 (x7379 x7814)) x7814))
(assert (x391 x6132))
(assert (x391 x7259))
(assert (x4156 x2012 x5116 x490 x774))
(assert (x391 x7036))
(assert (= x1300 (and (not x6639) x2153)))
(assert (x391 x7950))
(assert (x391 x6023))
(assert (= (and x4002 x1194) x3299))
(assert (= (and (not x1700) x8941) x7402))
(assert (= x7526 (and x6304 x3239)))
(assert (= (and x4210 x1724) x57))
(assert (x391 x5386))
(assert (= (x7379 2929553584) (x5361 2929553584)))
(assert (x391 x3616))
(assert (= (and x7878 (not x9004)) x1796))
(assert (x391 x1744))
(assert (x391 x4308))
(assert (x391 x7082))
(assert (x4191 x5552 (- x7316 x5766)))
(assert (x391 x6067))
(assert (= (=> (= 0 x3828) x7739) x2372))
(assert (x391 x2243))
(assert (x4156 x2012 x4135 x2780 x172))
(assert (x391 x6966))
(assert (x4156 x1726 x940 x5116 x2012))
(assert (x1306 x4246 x5843))
(assert (x391 x6361))
(assert (= x356 (or x2948 x8359)))
(assert (=> (>= 10000 x204) (= (x5361 x204) (x7379 x204))))
(assert (x391 x3739))
(assert (x391 x104))
(assert (x391 x5858))
(assert (x391 x8009))
(assert (x391 x3258))
(assert (x6103 (- x2012 x7316)))
(assert (x4191 x490 (- x774 x2780)))
(assert (x6103 (- x940 x774)))
(assert (= (and x8680 x3697) x2815))
(assert (= (x3649 (x7379 x3501)) x3501))
(assert (= x6115 (=> (and (= x3521 x7459) (= x1435 x5113)) x796)))
(assert (= (and x4970 (not x668)) x346))
(assert (x391 x6029))
(assert (= x6057 (=> (and (= x8190 x2706) (= x8093 0)) x4919)))
(assert (= (x3649 (x7379 x4837)) x4837))
(assert (x391 x5762))
(assert (x1052 x5466 x6334))
(assert (x391 x5442))
(assert (= (=> (= x7178 (> x1023 0)) (and (=> (and (and (<= 0 x8334) (<= x8334 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x7448) x80)) x7178) (and (=> x80 x2322) (=> (and (and (= x5245 (= 0 x4670)) (= x4670 (x5648 x1003)) (= (x3789 x5106 2) x1003) (<= x4670 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4670) (= x5106 (x7158 (x7379 x7448) x4654 0))) (not x80)) (and (=> (and x5245 (and (or (and (not x3203) (= x783 x3203)) (and (and (= x5744 (x3789 x6856 2)) (>= x825 0) (= (x5648 x5744) x825) (= (< x825 x1023) x5086) (= x6856 (x7158 (x7379 x7312) x4654 0)) (= (not x5086) x783) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x825)) x3203)) (and (= (ite (> x8334 0) (not (= 0 x7312)) (< 0 x8334)) x3203) (= (x537 x7867) x7312) (= (x3789 x4654 1) x7867) (> 1461501637330902918203684832716283019655932542976 x7312) (>= x7312 0) (>= 1461501637330902918203684832716283019655932542975 x7312)))) x3237) (=> (not x5245) x2322))))) (=> (and (and (= x7088 x2430) (= x4471 x6691)) (not x7178)) x6543))) x2802))
(assert (x4156 x530 x5390 x3593 x3579))
(assert (x391 x3122))
(assert (= x1598 (and x7673 x6642)))
(assert (= x1532 (and (not x5678) x8939)))
(assert (x391 x4169))
(assert (x2252 x985))
(assert (x4191 x490 (- x774 x5766)))
(assert (=> (>= 10000 x212) (= (x5361 x212) (x7379 x212))))
(assert (x2252 x4492))
(assert (x3618 x6606))
(assert (= x7737 (and x5991 x3193)))
(assert (= x9044 (and x8733 x4798)))
(assert (x6103 (- x4135 x2780)))
(assert (= x6640 (and (not x4520) x7765)))
(assert (x8665 x530 x5390 x172 x1256))
(assert (x4156 x1256 x172 x9039 x530))
(assert (= (and x3195 (not x8019)) x6738))
(assert (= x8125 (x3649 (x7379 x8125))))
(assert (x4191 x2012 (- x5116 x1726)))
(assert (x391 x7299))
(assert (= x2479 (or x1907 x6262)))
(assert (x391 x5769))
(assert (= x5922 (and x8285 (not x839))))
(assert (x391 x6828))
(assert (= x8726 (and (not x2688) x1066)))
(assert (x391 x4595))
(assert (x6103 (- x8031 x1256)))
(assert (x391 x2483))
(assert (= (and (not x6752) x8452) x167))
(assert (x391 x1766))
(assert (= x5925 (and x4401 x3783)))
(assert (= (x3649 (x7379 x5412)) x5412))
(assert (x391 x1886))
(assert (x391 x503))
(assert (= x3283 (x3649 (x7379 x3283))))
(assert (x6103 (- x5552 x490)))
(assert (= x3337 (or x4171 x9115)))
(assert (x391 x2826))
(assert (x6103 (- x9039 x7316)))
(assert (= (and x2596 x580) x6544))
(assert (x6103 x5393))
(assert (= x4070 (and (not x8469) x5168)))
(assert (x391 x3839))
(assert (x391 x1716))
(assert (= (and (not x4673) x7597) x1373))
(assert (x391 x4553))
(assert (= x1936 (or x8258 x6631)))
(assert (= x4249 (and x2916 (not x4446))))
(assert (x391 x166))
(assert (x391 x1188))
(assert (= (and (=> (and (and (= 0 x938) (= x7670 x734)) (not x2236)) x5859) (=> (and x2236 (and (and (< x180 1461501637330902918203684832716283019655932542976) (= x3859 (ite (> x8334 1) (not (= 0 x180)) (> x8334 1))) (= x180 (x147 x947)) (>= x180 0) (= x5787 (x7158 (x7379 x7670) x7907 0)) (>= 1461501637330902918203684832716283019655932542975 x180) (= (x3789 x5787 1) x947)) (or (and (not x3859) (= x3859 x4625)) (and x3859 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2019) (= x3888 (x7158 (x7379 x180) x7907 0)) (= (> x115 x2019) x1973) (= x2019 (x7755 x5251)) (>= x2019 0) (= (not x1973) x4625) (= x5251 (x3789 x3888 2))))))) x1670)) x1173))
(assert (= x3911 (and x267 (not x3383))))
(assert (x391 x1945))
(assert (= x424 (and x4192 x384)))
(assert (= (and x4216 x708) x3700))
(assert (=> (>= 10000 x6067) (= (x7379 x6067) (x5361 x6067))))
(assert (x391 x1161))
(assert (x6103 (- x5116 x1256)))
(assert (x2252 x3638))
(assert (x391 x5287))
(assert (=> (<= x495 10000) (= (x7379 x495) (x5361 x495))))
(assert (x4191 x172 (- x1256 x8031)))
(assert (x4156 x940 x1726 x490 x774))
(assert (x391 x5443))
(assert (= (and x3399 x8863) x5659))
(assert (x391 x5608))
(assert (= x5477 (=> (= x847 true) x4020)))
(assert (= x2634 (and x6374 x8872)))
(assert (x2252 x336))
(assert (= (and x8902 x2207) x5840))
(assert (= (and x4168 (not x6753)) x6226))
(assert (= (or x3850 x549 x2992 x8008 x2223 x2964) x2026))
(assert (= x7729 (or (and (not x7482) x5707) (and x3262 x2881))))
(assert (x6103 x1935))
(assert (= x9255 x5477))
(assert (= x4478 (or x3216 x5453)))
(assert (= (and x5693 x3117) x401))
(assert (x6103 (- x774 x3579)))
(assert (x391 x2138))
(assert (x391 x6938))
(assert (= x4064 (and x2308 x363)))
(assert (= x6794 (or x4177 x6390 x2112 x7044 x6919 x6624 x4390 x636 x8460)))
(assert (x8665 x530 x9039 x8031 x5766))
(assert (x8130 x1522))
(assert (= x9264 (or (and (not x2439) x3028) (and x8324 x1210))))
(assert (x391 x3810))
(assert (x391 x3488))
(assert (x4156 x3593 x3579 x4135 x2012))
(assert (x6103 x4135))
(assert (= (and (not x6436) x2272) x974))
(assert (x8665 x5116 x2012 x774 x490))
(assert (x391 x200))
(assert (x391 x3933))
(assert (= (+ (x3649 x683) 1) (x3649 (x3789 x683 1))))
(assert (=> (<= x6442 10000) (= (x5361 x6442) (x7379 x6442))))
(assert (x2252 x1716))
(assert (= x4631 (and x3750 (not x8092))))
(assert (x391 x145))
(assert (= x3742 (and x5168 x8469)))
(assert (x391 x2879))
(assert (x6103 x6834))
(assert (x391 x1410))
(assert (x391 x5705))
(assert (x4156 x5390 x530 x7316 x5552))
(assert (= x6767 (=> (and (= x1766 x5892) (= x5233 0)) x999)))
(assert (x391 x675))
(assert (= (and (not x471) x2393) x5459))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x7286 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x7286 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x7286 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x7286 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x7286 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x7286 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x7286)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x7286))) (x8005 1000000000000000000 x7286) (= (x7029 1000000000000000000 x7286) (* 1000000000000000000 x7286)) (x1844 1000000000000000000 x7286) (x7186 1000000000000000000 x7286) (x997 1000000000000000000 x7286) (x1348 1000000000000000000 x7286)))
(assert (x391 x2855))
(assert (= (=> (and (= x5676 x6429) (= 0 x9049)) x3959) x4737))
(assert (x391 x8729))
(assert (=> (<= x4789 10000) (= (x5361 x4789) (x7379 x4789))))
(assert (x6103 (- x7316 x774)))
(assert (and (x3303 x6606 1461501637330902918203684832716283019655932542976) (x4253 x6606 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x4077 x6606 1461501637330902918203684832716283019655932542976) (* (x4526 x6606 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x6606)) (x5837 x6606 1461501637330902918203684832716283019655932542976)))
(assert (= (and x820 (not x2938)) x1612))
(assert (x2252 x359))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4677))
(assert (= x1402 (and x1970 (not x1307))))
(assert (x6103 (- x8031 x2780)))
(assert (= (or x1178 (and x6234 (not x2133))) x6080))
(assert (x391 x4389))
(assert (= (or x6770 x623) x3139))
(assert (x391 x1200))
(assert (x391 x4391))
(assert (= x747 (and (not x21) x2044)))
(assert (x6103 (- x4135 x5766)))
(assert (x391 x4932))
(assert (= x3138 (or (and (not x2959) x3327) x9111)))
(assert (x391 x4977))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9008))
(assert (x391 x235))
(assert (= x1624 (and x5336 x1834)))
(assert (= x5793 (and x2126 x4925)))
(assert (x391 x6397))
(assert (x391 x5508))
(assert (x391 x7061))
(assert (= (=> (and (= x4348 (ite (> x8334 x768) (not (= x1679 0)) (< x768 x8334))) (or (and (and (or (not x4377) (and x4377 (and (> 1461501637330902918203684832716283019655932542976 x25) (= (x3477 x2500) x25) (<= x25 1461501637330902918203684832716283019655932542975) (= (x7158 (x7379 x1679) x1566 0) x2500) (>= x25 0)))) (and (= x3610 (x1952 x368)) (>= x3610 0) (> 1461501637330902918203684832716283019655932542976 x3610) (= x4377 (> x517 0)) (= (x7124 (- x1679 x3610)) x517) (>= 1461501637330902918203684832716283019655932542975 x3610))) x4348) (and (and (or x6149 (and (and (= x7446 (x6894 x7115)) (= (x3789 x368 1) x7115) (< x7446 1461501637330902918203684832716283019655932542976) (<= 0 x7446) (>= 1461501637330902918203684832716283019655932542975 x7446)) (not x6149))) (and (> 1461501637330902918203684832716283019655932542976 x2189) (<= x2189 1461501637330902918203684832716283019655932542975) (= (x1952 x368) x2189) (= (= 0 x2189) x6149) (<= 0 x2189))) (not x4348)))) x304) x5812))
(assert (= (and x807 x1203) x5253))
(assert (= (and x7212 x5792) x685))
(assert (x8665 x5116 x2012 x3579 x3593))
(assert (x4191 x172 (- x2780 x774)))
(assert (= (and (not x681) x5253) x2033))
(assert (= x8180 (and x1212 x5505)))
(assert (x8637 x4804))
(assert (= (and (not x5855) x7468) x8355))
(assert (x391 x1209))
(assert (x4191 x3593 (- x3579 x172)))
(assert (x391 x3148))
(assert (= x5670 (and x3719 (not x5849))))
(assert (x8130 x6022))
(assert (x4191 x4135 (- x2012 x3579)))
(assert (x4191 x1726 (- x940 x5390)))
(assert (= (and x3423 x772) x5055))
(assert (x391 x3969))
(assert (x391 x4246))
(assert (x391 x24))
(assert (x391 x856))
(assert (x2252 x6206))
(assert (x391 x7785))
(assert (x391 x432))
(assert (= x4108 x5477))
(assert (= x7971 (and x2180 x4348)))
(assert (x391 x2700))
(assert (x2252 x9122))
(assert (x391 x134))
(assert (x4191 x490 x774))
(assert (x391 x9241))
(assert (= (and (not x7957) x4827) x6813))
(assert (= x5926 (and x578 (not x8655))))
(assert (= (or x3528 x3544) x3011))
(assert (x8665 x3579 x3593 x172 x1256))
(assert (x8665 x530 x9039 x490 x774))
(assert (x8665 x5552 x7316 x5116 x2012))
(assert (x8665 x774 x490 x5552 x7316))
(assert (x391 x2189))
(assert (= x805 (and x8080 x2325)))
(assert (= (or x8487 x1872 x4993) x1970))
(assert (= x9034 (or x543 x6106 x4478 x9173)))
(assert (x391 x7510))
(assert (x391 x526))
(assert (x391 x4566))
(assert (= (and x3476 (not x5733)) x5712))
(assert (=> (<= x359 10000) (= (x7379 x359) (x5361 x359))))
(assert (x391 x7027))
(assert (= x8818 (and x974 (not x4170))))
(assert (x6103 x3579))
(assert (= x2269 (or (and x6676 (not x8718)) (and x5000 x4986))))
(assert (= (=> (and (= 0 x1730) (= x9192 x2261)) x1661) x8120))
(assert (= x6234 (or x2702 x3252 x3646 x4994)))
(assert (= (and x4285 x5977) x2195))
(assert (x4156 x5390 x530 x9039 x530))
(assert (= x8824 (x3649 (x7379 x8824))))
(assert (x391 x174))
(assert (= x1115 (and x8850 (not x3035))))
(assert (x391 x4032))
(assert (x6103 (- x7316 x2012)))
(assert (x1306 x1522 x6022))
(assert (= x6792 (and x7657 x3817)))
(assert (x4156 x5552 x7316 x8031 x5766))
(assert (x391 x1831))
(assert (x391 x4215))
(assert (x4156 x490 x774 x7316 x5552))
(assert (x8665 x7316 x5552 x2780 x172))
(assert (= (=> (and (= x3274 x4226) (= x5071 x8119)) x5272) x3511))
(assert (= x1674 (and x8185 x6798)))
(assert (x391 x4096))
(assert (= (and x426 (not x6235)) x7302))
(assert (= x2404 (and x8019 x3195)))
(assert (= (and x5028 x2680) x1524))
(assert (x391 x2048))
(assert (= (and x3570 x7210) x1419))
(assert (x1257 x4804))
(assert (= x5752 (=> (and (= x4394 x9192) (= 0 x813)) x8832)))
(assert (= x2875 (and (not x4607) x823)))
(assert (= (and x5152 (not x8513)) x2821))
(assert (x391 x1736))
(assert (x391 x5240))
(assert (=> (<= x1737 10000) (= (x5361 x1737) (x7379 x1737))))
(assert (x8665 x2012 x4135 x172 x2780))
(assert (x391 x870))
(assert (x391 x5210))
(assert (x391 x3835))
(assert (x6103 (- x9039 x940)))
(assert (= (and x3615 x2283) x4638))
(assert (= x1804 (and x7589 (not x7834))))
(assert (= (=> (and (= 0 x776) (= x7118 x8525)) x5735) x70))
(assert (x8665 x940 x1726 x774 x490))
(assert (x7060 x7255))
(assert (= (or x7488 x552) x5876))
(assert (x4191 x940 (- x1726 x3593)))
(assert (= (+ (x3649 x8027) 1) (x3649 (x3789 x8027 1))))
(assert (= (x3649 (x3789 x8294 1)) (+ 1 (x3649 x8294))))
(assert (= (and x7834 x7589) x3918))
(assert (x2252 x3072))
(assert (x6103 (- x5116 x490)))
(assert (= (or x2148 x896) x754))
(assert (x1257 x7512))
(assert (x391 x8211))
(assert (= x1426 (or x8517 x5979 x5756 x6368)))
(assert (= (and x3724 x8241) x60))
(assert (x391 x929))
(assert (x4156 x8031 x5766 x490 x774))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x3649 (x5361 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= x3968 (and x7839 (not x2944))))
(assert (= (and x1692 (not x6148)) x8922))
(assert (x4191 x5766 (- x8031 x1256)))
(assert (x391 x4984))
(assert (x391 x9192))
(assert (x391 x786))
(assert (x391 x5431))
(assert (= x6507 (=> (and (= x3500 x8735) (= x4204 x7964)) x4260)))
(assert (= (+ 2 (x3649 x4043)) (x3649 (x3789 x4043 2))))
(assert (= x7189 (and (not x9047) x4367)))
(assert (= (and x8932 (not x6604)) x5365))
(assert (x391 x2378))
(assert (x391 x1050))
(assert (x8637 x1896))
(assert (= (and x1097 (not x4465)) x4498))
(assert (= x1526 (and x9221 (not x2696))))
(assert (= (or (and x2734 x4966) (and x7513 (not x7717)) (and (not x2349) x5427) (and x3645 x395) (and x1297 x6116) (and x3949 x7994) x2991 x3873 x8511) x8210))
(assert (= (and x2327 x8803) x2061))
(assert (x391 x2537))
(assert (x391 x5487))
(assert (= x53 (and x604 x4870)))
(assert (x8665 x2012 x5116 x530 x9039))
(assert (x391 x6204))
(assert (x8665 x172 x1256 x774 x490))
(assert (= x6592 (and x1370 (not x945))))
(assert (= (and x1700 x8941) x8743))
(assert (x391 x5064))
(assert (x8665 x2012 x4135 x2780 x172))
(assert (x8665 x2012 x5116 x490 x774))
(assert (x391 x3668))
(assert (= (or x2636 x6203) x1962))
(assert (x391 x2085))
(assert (x6103 (- x3593 x1726)))
(assert (x391 x4012))
(assert (x391 x468))
(assert (= (and (not x5528) x8802) x5497))
(assert (= x7163 (and x894 x6050)))
(assert (=> (>= 10000 x476) (= (x5361 x476) (x7379 x476))))
(assert (= x3160 (or x5363 x1376)))
(assert (x3618 x3346))
(assert (x391 x3741))
(assert (x6103 x5116))
(assert (x8665 x1726 x940 x3579 x3593))
(assert (= x6846 (=> (and (= x9192 x7593) (= x6837 0)) x8489)))
(assert (= (and x2314 x6002) x7005))
(assert (x4191 x3579 (- x3593 x172)))
(assert (= x5323 (and (not x3989) x7805)))
(assert (= x1865 (or x19 x2395)))
(assert (x391 x7033))
(assert (x7060 x1027))
(assert (x6103 (- x5116 x940)))
(assert (x391 x370))
(assert (x2624 x649 x4860))
(assert (x4191 x774 (- x490 x2012)))
(assert (x391 x7814))
(assert (x391 x5974))
(assert (= x506 (=> (and (> 1461501637330902918203684832716283019655932542976 x8900) (<= 0 x8900) (>= 1461501637330902918203684832716283019655932542975 x8900) (= x4968 (= x8900 0))) (and (=> x4968 x3702) (=> (and (and (= (x2125 (+ x4075 32)) x7039) (= x1492 (x2125 (+ x7039 32))) (= (= 0 x3754) x6345) (>= x8900 0) (= (x6887 (x7379 x8900)) x3754) (= x4075 (x2125 (+ 4 x5962))) (<= x8900 1461501637330902918203684832716283019655932542975) (< x8900 1461501637330902918203684832716283019655932542976)) (not x4968)) (and (=> (and x6345 (= true x847)) x4020) (=> (and (> 4294967296 x6984) (not x6345)) x3702)))))))
(assert (x2252 x9214))
(assert (x391 x2600))
(assert (= x3492 (or x1980 x4374)))
(assert (x391 x6005))
(assert (x391 x4851))
(assert (x391 x2054))
(assert (= x8341 (and x6911 (not x5685))))
(assert (x1710 32))
(assert (x391 x4102))
(assert (x6103 (- x1256 x3593)))
(assert (x8637 x7512))
(assert (= x2554 (and x4831 x8649)))
(assert (= (and x437 x8677) x9143))
(assert (x391 x1208))
(assert (= (and x4638 (not x9274)) x5339))
(assert (x8665 x5552 x7316 x2012 x4135))
(assert (= x5781 (or x3911 x4071 x1634)))
(assert (= (and x3495 (not x4791)) x3591))
(assert (x391 x5898))
(assert (= (or x7163 x5761 x8090 x2817) x4228))
(assert (= (and (not x5755) x878) x2188))
(assert (= (or x6522 x1414) x7412))
(assert (x391 x8678))
(assert (x391 x1350))
(assert (= (and x7725 (not x7275)) x676))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5924))
(assert (x391 x4796))
(assert (= (x3649 (x7379 x3254)) x3254))
(assert (= (x3649 (x7379 x405)) x405))
(assert (x391 x8186))
(assert (x2252 x8826))
(assert (x391 x3006))
(assert (= x982 (and x4407 x158)))
(assert (x391 x8607))
(assert (x391 x5239))
(assert (x4191 x1726 (- x940 x1256)))
(assert (x391 x3761))
(assert (x391 x3820))
(assert (x391 x936))
(assert (= x1312 (or x2897 x3468)))
(assert (= (and x5199 x6764) x4877))
(assert (x391 x9057))
(assert (x4191 x2780 (- x172 x5552)))
(assert (x4156 x8031 x5766 x4135 x2012))
(assert (= (and x2554 x570) x2417))
(assert (x2252 x8971))
(assert (x2252 x8379))
(assert (= x3155 (and x5663 x7567)))
(assert (x2252 x3538))
(assert (x391 x3740))
(assert (= (x3649 (x7379 x6440)) x6440))
(assert (= (x3649 (x7379 x3953)) x3953))
(assert (= (or x8713 x5543 x5848) x3327))
(assert (= (and (=> (and (and (= x7965 x5393) (= x7345 x2703)) (not x727)) x809) (=> (and x727 (and (= x4943 (= 0 x4135)) (= x7208 (ite (> x2012 x2679) 1 0)) (= (= x9233 0) x6579) (= x6215 (ite (not x4943) 1 0)) (= x4338 (x3789 x3463 1)) (= x9233 (x2237 x6215 x7208)) (<= 0 x4135) (= (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4135) x2679) (= (x6504 x4338) x4135) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4135))) (and (=> (and (and (= x622 (x5353 (x7029 x4135 x2012))) (= (x4526 x622 1000000000000000000) x187) (= x9083 (< x5393 x187))) x6579) (and (=> (and (not x9083) (and (= (> x187 115792089237316195423570985008687907853269984665640564039457) x1914) (= (= 0 (ite x1914 1 0)) x2892))) (and (=> (not x2892) x5477) (=> (and (and (= (ite (not x6591) 1 0) x5062) (= x5139 (x5353 (* 1000000000000000000 x187))) (= x8584 (ite (> 1000000000000000000 x3182) 1 0)) (= x5014 (= x4203 0)) (= x3182 (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5139)) (= (= x5139 0) x6591) (= x4203 (x2237 x5062 x8584))) x2892) (and (=> (not x5014) x5477) (=> (and x5014 (and (= x2824 (> x774 0)) (= x3012 (x5353 (* 1000000000000000000 x5139))))) (and (=> (and (and (= x3986 (x4526 x3221 1000000000000000000)) (= x2717 (x8748 x7749)) (= x7749 (x3789 x3463 3)) (<= 0 x2717) (= (x4526 x3012 x774) x3221) (= (< x2717 x3986) x1251) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2717)) x2824) (and (=> x1251 x5477) (=> (and (not x1251) (and (= x5728 (x7124 (- x2717 x3986))) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x187)) x361) (= x6941 (> x2703 x361)))) (and (=> (and (and (= x6406 (> x187 x5393)) (= (x2125 (+ x187 x2703)) x5366)) (not x6941)) (and (=> (and (not x6406) (and (= x2672 x6690) (= x5257 x5366) (= (x7124 (- x5393 x187)) x6690))) x6765) (=> x6406 x5477))) (=> x6941 x5477))))) (=> (not x2824) x1129))))))) (=> (and x9083 (and (= (> x5393 115792089237316195423570985008687907853269984665640564039457) x1972) (= (= (ite x1972 1 0) 0) x8855))) (and (=> (not x8855) x5477) (=> (and (and (= (x2237 x3770 x7197) x3517) (= (ite (< x5695 1000000000000000000) 1 0) x7197) (= (x5353 (* 1000000000000000000 x5393)) x679) (= (= x3517 0) x1579) (= (ite (not x1496) 1 0) x3770) (= x1496 (= 0 x679)) (= (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x679) x5695)) x8855) (and (=> (and (and (= x5975 (x5353 (* 1000000000000000000 x679))) (= (> x2012 0) x5665)) x1579) (and (=> (and (and (= (> x6167 x4155) x1540) (<= 0 x4155) (= x2846 (x4526 x5975 x2012)) (= (x4526 x2846 1000000000000000000) x6167) (= x4155 (x6504 x4338)) (<= x4155 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x5665) (and (=> x1540 x5477) (=> (and (not x1540) (and (= x4258 (< 115792089237316195423570985008687907853269984665640564039457 x5393)) (= (x7124 (- x4155 x6167)) x235) (= (= 0 (ite x4258 1 0)) x472))) (and (=> (not x472) x5477) (=> (and x472 (and (= (x2237 x5705 x5417) x2405) (= (ite (not x5772) 1 0) x5705) (= x2345 (= x2405 0)) (= (ite (< x103 1000000000000000000) 1 0) x5417) (= (x5353 (* 1000000000000000000 x5393)) x9008) (= x103 (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x9008)) (= x5772 (= x9008 0)))) (and (=> (not x2345) x5477) (=> (and (and (= x1886 (x5353 (* x9008 1000000000000000000))) (= x5441 (> x774 0))) x2345) (and (=> (not x5441) x1129) (=> (and x5441 (and (= x2398 (x4526 x3086 1000000000000000000)) (= x1663 (< x3095 x2398)) (= (x3789 x3463 3) x7990) (= (x8748 x7990) x3095) (>= x3095 0) (= (x4526 x1886 x774) x3086) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3095))) (and (=> x1663 x5477) (=> (and (not x1663) (and (= x4757 (< x7082 x2703)) (= (x7124 (- x3095 x2398)) x1991) (= x7082 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5393))))) (and (=> (and (and (= (x2125 (+ x5393 x2703)) x4611) (= 0 x2672) (= x5257 x4611)) (not x4757)) x6765) (=> x4757 x5477))))))))))))) (=> (not x5665) x1129))) (=> (not x1579) x5477))))))) (=> (not x6579) x5477)))) x7436))
(assert (= (and x4150 x2630) x1232))
(assert (= (and (not x7414) x7302) x8432))
(assert (x391 x6136))
(assert (x8637 x1265))
(assert (= x4357 (and x5014 x535)))
(assert (x391 x1484))
(assert (x2252 x4486))
(assert (= x4023 (and x1241 x1450)))
(assert (x391 x898))
(assert (x391 x2336))
(assert (= (and x3437 (not x7899)) x3352))
(assert (= (and x5880 (not x5441)) x188))
(assert (= (and x3160 x5187) x3224))
(assert (x391 x5986))
(assert (= (and x5944 x8165) x7279))
(assert (= (x3649 (x7379 x759)) x759))
(assert (= (and x1930 (not x4024)) x8897))
(assert (x391 x1406))
(assert (=> (>= 10000 x8242) (= (x5361 x8242) (x7379 x8242))))
(assert (x6103 x172))
(assert (= (and x5362 x275) x3029))
(assert (x391 x2495))
(assert (x391 x418))
(assert (x6103 (- x4135 x490)))
(assert (x391 x1950))
(assert (x6103 (- x5766 x5552)))
(assert (= x6164 (x3649 (x7379 x6164))))
(assert (= (and x7533 x1347) x6831))
(assert (x8665 x1256 x172 x2012 x4135))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5004) (= (= (ite x4991 1 0) 0) x8255) (= x3463 (x7158 (x7379 x7848) (x5361 169) 0)) (= (x3382 x8028) x5766) (<= x5766 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x5004) (= x774 (x4153 x2051)) (<= 0 x5766) (= (x7158 (x7379 x7848) (x5361 164) 0) x8028) (<= x774 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x774) (= x4991 (< 115792089237316195423570985008687907853269984665640564039457 x5393)) (= x5004 (x5324 x963)) (= x2051 (x7158 (x7379 x7848) (x5361 165) 0))) (and (=> (and (and (= x9 (ite (not x1533) 1 0)) (= (x5353 (* 1000000000000000000 x5393)) x7661) (= (x2237 x9 x464) x4828) (= (= 0 x7661) x1533) (= (ite (< x6084 1000000000000000000) 1 0) x464) (= (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7661) x6084) (= x3448 (= 0 x4828))) x8255) (and (=> (not x3448) x5477) (=> (and (and (= x6857 (x5353 (* x7661 1000000000000000000))) (= (> x774 0) x8205)) x3448) (and (=> (and x8205 (and (= x1224 (< x8465 x4006)) (= x8465 (x5324 x963)) (>= x8465 0) (= (x4526 x6857 x774) x2402) (= x8646 (x4526 x2402 1000000000000000000)) (= (ite (< x5004 x8646) x5004 x8646) x4006) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8465))) (and (=> x1224 x5477) (=> (and (and (or (and (= x6209 x460) x4922) (and (not x4922) (= 0 x460))) (and (= (x2799 x8102) x6209) (<= 0 x8607) (= (x7158 (x7379 x7448) x5954 0) x2615) (= x7008 (x7158 (x7379 x7448) x6998 0)) (= (x3789 x949 2) x1157) (<= x7647 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x949 (x7158 (x7379 x7448) x3914 0)) (= (x3789 x2615 2) x6865) (>= x6209 0) (= (x789 x1157) x7647) (= (x7124 (- x8465 x4006)) x7887) (>= x7647 0) (<= 0 x1482) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8607) (= x1482 (x388 x6865)) (<= 0 x6922) (= (x7158 (x7379 x7848) (x5361 157) 0) x5954) (= x6998 (x7158 (x7379 x7848) (x5361 159) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6922) (= x8102 (x3789 x7008 1)) (<= x6209 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x1482 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x7158 (x7379 x7848) (x5361 156) 0) x3914) (= (x2115 x7008) x8607) (= x4922 (> x6209 x6922)))) (not x1224)) x2985))) (=> (not x8205) x1129))))) (=> (not x8255) x5477))) x5888))
(assert (= x5774 (or x1341 x1442)))
(assert (x391 x7524))
(assert (x391 x4729))
(assert (= (and x7085 x1213) x7097))
(assert (x391 x6071))
(assert (x391 x8405))
(assert (x391 x7928))
(assert (= x7677 (and x8680 (not x3697))))
(assert (= (=> (and (= x2742 x9106) (= x8984 x143)) x2181) x4873))
(assert (x6103 (- x8031 x5552)))
(assert (= x5146 (and x1685 (not x6155))))
(assert (= (x3649 (x5361 1523576871)) 1523576871))
(assert (x391 x1630))
(assert (x391 x8760))
(assert (x391 x7181))
(assert (= (x3649 (x3789 x3463 2)) (+ 2 (x3649 x3463))))
(assert (x391 x6821))
(assert (and (x3303 x505 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4253 x505 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x4077 x505 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x4526 x505 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x505)) (x5837 x505 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (and x7725 x7275) x7304))
(assert (= (and (not x822) x5215) x6291))
(assert (x4191 x5552 (- x7316 x1256)))
(assert (x391 x5747))
(assert (x391 x8108))
(assert (= (and x5000 (not x4986)) x6676))
(assert (x391 x2578))
(assert (= x5932 (=> (and (>= x7135 0) (= x2656 (x881 x2385)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2656) (<= x7135 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x7135 (x6705 x963)) (>= x2656 0)) x5438)))
(assert (x391 x961))
(assert (= (x3649 (x7379 x8124)) x8124))
(assert (x2252 x5658))
(assert (x4191 x1256 (- x172 x530)))
(assert (= x7547 (and x3016 x2623)))
(assert (x391 x253))
(assert (x8665 x5116 x2012 x9039 x530))
(assert (= x2008 (x3649 (x7379 x2008))))
(assert (x8665 x172 x2780 x2012 x4135))
(assert (= x4288 (and x1936 x1609)))
(assert (x391 x431))
(assert (= (and (not x6924) x3935) x7994))
(assert (x6103 (- x1256 x774)))
(assert (= (and x6792 (not x4269)) x1672))
(assert (= (and x1540 x6483) x4578))
(assert (x7060 x6834))
(assert (= x8875 (and x3350 x8703)))
(assert (x6103 (- x172 x5390)))
(assert (= (and (not x8744) x1378) x1380))
(assert (= x5477 x4133))
(assert (x391 x6947))
(assert (x391 x3851))
(assert (= x5725 (=> (and (and (= (ite (< 0 x625) 1 0) x5509) (= (= 0 x5509) x484)) (or (and x484 (and (= x8760 x7356) (= x7037 x5509))) (and (and (= x7037 (ite x3749 1 0)) (= x7356 x7848) (= x3749 (= 0 x7988)) (= (x2908 x3045) x7988) (<= 0 x7988) (= x3045 (x7158 (x7379 x7848) (x5361 163) 0)) (<= x7988 255) (< x7988 256)) (not x484)))) x7541)))
(assert (= (=> (and (= x1394 x7206) (= x3464 x6490)) x2686) x441))
(assert (x391 x1368))
(assert (x4156 x7316 x5552 x5390 x530))
(assert (x391 x4548))
(assert (x391 x7088))
(assert (= (x3649 (x7379 x8808)) x8808))
(assert (x391 x7107))
(assert (= (and x4574 (not x3845)) x195))
(assert (x8637 x1410))
(assert (= (and x5381 x4278) x6184))
(assert (x8665 x774 x490 x8031 x5766))
(assert (= (and x3893 (not x2162)) x3532))
(assert (= x7554 (=> (= x1999 (< 0 x7375)) (and (=> (not x1999) x1040) (=> (and (and (>= x8334 0) (= x5222 (= x2879 0)) (<= x8334 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1999) (and (=> x5222 x4083) (=> (and (not x5222) (and (= (= x2909 0) x2274) (= x7613 (x7158 (x7379 x2879) x5581 0)) (<= x2909 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x9174 (x3789 x7613 2)) (>= x2909 0) (= (x8715 x9174) x2909))) (and (=> (not x2274) x3876) (=> (and (and (or (and x8033 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8887) (= (x7158 (x7379 x2945) x5581 0) x2612) (= x3178 (> x7375 x8887)) (= (x8715 x2386) x8887) (= x2386 (x3789 x2612 2)) (= x5684 (not x3178)) (>= x8887 0))) (and (not x8033) (= x5684 x8033))) (and (>= 1461501637330902918203684832716283019655932542975 x2945) (= (ite (< 0 x8334) (not (= x2945 0)) (< 0 x8334)) x8033) (>= x2945 0) (= (x6445 x6219) x2945) (= x6219 (x3789 x5581 1)) (> 1461501637330902918203684832716283019655932542976 x2945))) x2274) x1995)))))))))
(assert (x8637 x2085))
(assert (x391 x611))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7286))
(assert (x7060 x1886))
(assert (= (x3649 (x7379 x2592)) x2592))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x9008 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x9008 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x9008 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x9008 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x9008 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x9008 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x9008)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x9008))) (x8005 1000000000000000000 x9008) (= (x7029 1000000000000000000 x9008) (* 1000000000000000000 x9008)) (x1844 1000000000000000000 x9008) (x7186 1000000000000000000 x9008) (x997 1000000000000000000 x9008) (x1348 1000000000000000000 x9008)))
(assert (= (and (not x6505) x4325) x8202))
(assert (= x2771 (or x90 x8818)))
(assert (x391 x8421))
(assert (x2252 x1640))
(assert (= (x3649 (x3789 x949 2)) (+ 2 (x3649 x949))))
(assert (x4156 x3593 x3579 x490 x774))
(assert (x391 x5997))
(assert (x391 x7619))
(assert (x7060 x634))
(assert (= x4232 (and (not x3811) x4704)))
(assert (x391 x8825))
(assert (= (x3649 (x7379 x5639)) x5639))
(assert (x391 x4200))
(assert (= x4291 (and x7798 x8855)))
(assert (= (=> (and (= x1880 x2835) (= x2365 0)) x8712) x4027))
(assert (x391 x4387))
(assert (= x7165 (=> (and (= x1900 x7336) (= 0 x3768)) x1516)))
(assert (= x2093 (and x4797 x3904)))
(assert (= (=> (and (= x6828 0) (= x9079 x7070) (= x518 x6265)) x7529) x5878))
(assert (x391 x1939))
(assert (= x1211 (x3649 (x7379 x1211))))
(assert (= x2879 (x3649 (x7379 x2879))))
(assert (= x2182 (and (not x5839) x1514)))
(assert (x391 x6777))
(assert (x391 x7127))
(assert (x391 x4050))
(assert (= (and x6119 (not x2673)) x7726))
(assert (x391 x6805))
(assert (x391 x7227))
(assert (= x8503 (or x1031 (and x5957 (not x4001)))))
(assert (= x9073 (=> (and (= 0 x6186) (= x9031 x667)) x5502)))
(assert (= (x7379 77053863734975077137548456399560439977311721439096602559221323163398253314048) (x5361 77053863734975077137548456399560439977311721439096602559221323163398253314048)))
(assert (x391 x1560))
(assert (x8665 x5552 x7316 x490 x774))
(assert (x391 x7145))
(assert (x4191 x5766 (- x8031 x5116)))
(assert (= (x3649 (x3789 x2597 1)) (+ (x3649 x2597) 1)))
(assert (=> (>= 10000 x4492) (= (x5361 x4492) (x7379 x4492))))
(assert (= x5498 (and x118 (not x7160))))
(assert (x391 x3979))
(assert (x4191 x1256 (- x172 x5116)))
(assert (= (and (not x8626) x9089) x3336))
(assert (= x2629 (and x402 (not x7388))))
(assert (x4156 x5766 x8031 x2780 x172))
(assert (x391 x9240))
(assert (x2624 x8844 x2012))
(assert (x391 x7682))
(assert (x391 x587))
(assert (= (and x2068 x5783) x407))
(assert (x391 x2403))
(assert (= x6109 (and (not x5089) x355)))
(assert (x391 x8007))
(assert (= x4225 (and x3787 x3863)))
(assert (= x1969 (and x599 (not x7873))))
(assert (= (and x2375 x9139) x3322))
(assert (x8665 x2012 x4135 x530 x5390))
(assert (x4156 x172 x2780 x7316 x5552))
(assert (x4191 x8031 (- x5766 x7316)))
(assert (= x8042 (=> (= (= x6966 0) x6678) (and (=> x6678 x2322) (=> (and (not x6678) (and (= x505 (x2125 (+ x8652 31))) (= x722 (x2125 (+ x521 x135))) (= x521 (x2237 115792089237316195423570985008687907853269984665640564039457584007913129639904 x505)) (= (or (> x8652 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x8652) (= (<= x8652 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1101))) (and (=> (and x1101 (= true x847)) x4020) (=> (and (and (= x807 (= 0 x5997)) (= x1726 (x4220 x3463)) (<= 0 x1726) (= (ite (not x6189) 1 0) x9252) (= (= x1726 0) x6189) (= (x2237 x9252 x1410) x5997) (= (ite (> x940 x5296) 1 0) x1410) (= (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1726) x5296) (<= x1726 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x8549 x135) x940)) (not x1101)) (and (=> (not x807) x5477) (=> (and (and (>= x8031 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8031) (= (x5353 (x7029 x1726 x940)) x3907) (= (ite (not x4732) 1 0) x95) (= (= 0 x921) x681) (= x4732 (= x8031 0)) (= (x4747 x5989) x8031) (= x921 (x2237 x95 x2318)) (= (ite (> x5766 x4131) 1 0) x2318) (= x3223 (x4526 x3907 1000000000000000000)) (= x4131 (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8031)) (= (x3789 x3463 2) x5989)) x807) (and (=> (not x681) x5477) (=> (and x681 (and (= x5104 (> x3223 x3345)) (= x6804 (x5353 (x7029 x8031 x5766))) (= x3345 (x4526 x6804 1000000000000000000)))) (and (=> (and (not x5104) (= (< x3345 x3223) x1790)) (and (=> x1790 x5477) (=> (and (not x1790) (and (= x3054 x434) (= x434 (x7124 (- x3345 x3223))))) x5955))) (=> (and x5104 (= x3054 0)) x5955)))))))))))))
(assert (x391 x8690))
(assert (= (and x5484 x1061) x5254))
(assert (= x1601 (and x5998 x573)))
(assert (x391 x5687))
(assert (= x37 (and x5823 x3898)))
(assert (x391 x8956))
(assert (= (and x1860 (not x1224)) x849))
(assert (x6103 x7902))
(assert (= x7360 (and x4070 (not x2441))))
(assert (= x1084 (=> (and (= x379 x603) (= x6054 x8873)) x7561)))
(assert (x391 x8330))
(assert (x6103 (- x5116 x4135)))
(assert (x391 x354))
(assert (= (and (=> (and (and (and (= x4620 (x3789 x4206 1)) (= (x7158 (x7379 x4137) x8237 0) x4206) (> 1461501637330902918203684832716283019655932542976 x5357) (= (x2551 x4620) x5357) (<= 0 x5357) (= x9129 (ite (> x8334 1) (not (= x5357 0)) (< 1 x8334))) (>= 1461501637330902918203684832716283019655932542975 x5357)) (or (and (not x9129) (= x4099 x9129)) (and (and (= x1039 (x3789 x2448 2)) (= (> x7424 x2871) x4787) (<= x2871 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2595 x1039) x2871) (= x2448 (x7158 (x7379 x5357) x8237 0)) (= x4099 (not x4787)) (<= 0 x2871)) x9129))) x1093) x8888) (=> (and (not x1093) (and (= x4137 x1536) (= x4849 0))) x3504)) x4042))
(assert (x391 x5891))
(assert (x8665 x774 x490 x9039 x530))
(assert (= (and (not x5462) x3945) x8722))
(assert (x8665 x8031 x5766 x3579 x3593))
(assert (x2252 x130))
(assert (x391 x1274))
(assert (= (and x2292 x6468) x7484))
(assert (= x7555 (and (not x5245) x2782)))
(assert (x8637 x95))
(assert (= (and (=> (and x6527 (and (or (and (not x2720) (= x2720 x2218)) (and x2720 (and (<= x886 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8627 (x3789 x6871 2)) (= x8478 (> x6359 x886)) (= (not x8478) x2218) (= x886 (x7846 x8627)) (= x6871 (x7158 (x7379 x6206) x8793 0)) (<= 0 x886)))) (and (= (x5844 x969) x6206) (= x6376 (x7158 (x7379 x4508) x8793 0)) (> 1461501637330902918203684832716283019655932542976 x6206) (= x2720 (ite (< 1 x8334) (not (= x6206 0)) (< 1 x8334))) (= x969 (x3789 x6376 1)) (>= x6206 0) (>= 1461501637330902918203684832716283019655932542975 x6206)))) x3391) (=> (and (and (= x5412 x4508) (= 0 x145)) (not x6527)) x4355)) x3792))
(assert (x391 x4743))
(assert (= x3105 (and x125 x8437)))
(assert (x391 x6754))
(assert (= (and x6375 x5455) x3945))
(assert (= (and (not x4882) x897) x4011))
(assert (= x7752 (and x3035 x8850)))
(assert (= x5231 (or x4931 x4980)))
(assert (x391 x774))
(assert (= x5979 (or x7857 x3273)))
(assert (x8665 x9039 x530 x1726 x940))
(assert (x391 x5167))
(assert (x4156 x2012 x5116 x4135 x2012))
(assert (= x8242 (x3649 (x7379 x8242))))
(assert (x391 x697))
(assert (x391 x2714))
(assert (= (and (not x4770) x3525) x5779))
(assert (x391 x2023))
(assert (x391 x6742))
(assert (= x8284 (=> (and (= x3725 x4026) (= x4450 x5646)) x3597)))
(assert (x391 x5430))
(assert (= x883 (and x6706 x5436)))
(assert (x4156 x530 x9039 x5116 x2012))
(assert (= x4250 (=> (and (= x2953 x4119) (= 0 x5015)) x1489)))
(assert (x4191 x490 (- x774 x7316)))
(assert (x6103 (- x5390 x530)))
(assert (= (and x3545 x4962) x1575))
(assert (x391 x5587))
(assert (x1710 x4743))
(assert (x4156 x1726 x940 x9039 x530))
(assert (= x4859 (=> (and (= 0 x2151) (= x1603 x2781)) x742)))
(assert (and (x3303 x8278 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4253 x8278 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x4077 x8278 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x4526 x8278 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x8278)) (x5837 x8278 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x391 x5758))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1367))
(assert (= (and x2959 x3327) x9111))
(assert (= (x3649 (x3789 x7244 1)) (+ 1 (x3649 x7244))))
(assert (x4156 x3579 x3593 x4135 x2012))
(assert (= x965 (and x35 (not x8479))))
(assert (= x2181 (=> (and (or x3417 (not x3417)) (= (= 0 x9106) x3417)) x8495)))
(assert (= (or (and (not x275) x5362) (and x3513 x6740) x8885 x9216 (and (not x2576) x3029) (and x5385 x2414)) x4266))
(assert (and (x3303 x134 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4253 x134 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x4077 x134 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x4526 x134 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x134)) (x5837 x134 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x391 x5291))
(assert (= x8512 x5477))
(assert (= (and (not x8033) x8804) x3418))
(assert (= (and x2188 (not x3207)) x6339))
(assert (x4191 x4135 (- x2012 x5390)))
(assert (= x4717 (or x9276 x1967)))
(assert (x391 x1463))
(assert (x391 x1221))
(assert (x391 x917))
(assert (x391 x2534))
(assert (= (and x993 x1128) x1697))
(assert (x391 x7646))
(assert (= x4735 (and x8747 x8768)))
(assert (x391 x8030))
(assert (= (and x3029 x2576) x2414))
(assert (= (and (not x7579) x1928) x5137))
(assert (x4191 x172 (- x2780 x5552)))
(assert (x391 x3233))
(assert (= (or x7845 x4590) x8725))
(assert (x391 x4684))
(assert (= (=> (= (> x4000 0) x2201) (and (=> (and x2201 (and (= x1942 (= x7448 0)) (<= x8334 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x8334))) (and (=> x1942 x2322) (=> (and (not x1942) (and (<= 0 x149) (= (= x149 0) x8283) (= x6620 (x3789 x13 2)) (<= x149 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x13 (x7158 (x7379 x7448) x3914 0)) (= (x4462 x6620) x149))) (and (=> (and (and (or (and (= x8682 x7329) (not x8682)) (and x8682 (and (= (x3789 x6319 2) x842) (= (not x5870) x7329) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4208) (= x4208 (x4462 x842)) (= x5870 (> x4000 x4208)) (= (x7158 (x7379 x8009) x3914 0) x6319) (>= x4208 0)))) (and (>= x8009 0) (<= x8009 1461501637330902918203684832716283019655932542975) (= x8682 (ite (< 0 x8334) (not (= x8009 0)) (> x8334 0))) (= x8009 (x1938 x4605)) (> 1461501637330902918203684832716283019655932542976 x8009) (= x4605 (x3789 x3914 1)))) x8283) x7986) (=> (not x8283) x2322))))) (=> (and (and (= x9275 x2374) (= x1074 x8176)) (not x2201)) x8609))) x7511))
(assert (= x7637 (and x8331 (not x5921))))
(assert (= (x3649 (x3789 x8364 1)) (+ 1 (x3649 x8364))))
(assert (= x6068 (or x1597 x6848)))
(assert (= (and (not x8720) x5105) x7175))
(assert (= x2653 x258))
(assert (x4156 x774 x490 x2780 x172))
(assert (x391 x9008))
(assert (x6103 (- x8031 x530)))
(assert (x4156 x1256 x172 x2780 x172))
(assert (= x8459 (=> (and (= x9265 0) (= x2265 x7724)) x1034)))
(assert (x391 x1576))
(assert (= x7828 (and x1241 (not x1450))))
(assert (= (=> (and (= x9049 x6414) (= x4926 x6429)) x6288) x3959))
(assert (= (and x1289 x5900) x4894))
(assert (x391 x6177))
(assert (x2252 x392))
(assert (x391 x1333))
(assert (= (or x9145 x5276) x3842))
(assert (= (and (not x5802) x7531) x4374))
(assert (x391 x7461))
(assert (x391 x5418))
(assert (= (or x8904 x8693) x3419))
(assert (x391 x7354))
(assert (= (and x1026 (not x4449)) x684))
(assert (= x1846 (or x2999 x2026)))
(assert (x4156 x940 x1726 x8031 x5766))
(assert (x391 x2953))
(assert (x8665 x490 x774 x5390 x530))
(assert (x391 x488))
(assert (x391 x6391))
(assert (x391 x1543))
(assert (x4191 x5552 (- x7316 x5116)))
(assert (= (=> (= (= 0 x4264) x8747) (and (=> (and (and (= (or (> x3655 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x3655 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3655) true))) x7642) (= x8772 (x2125 (+ x3276 x8270))) (= (x2125 (+ x3655 31)) x5213) (= (x2237 115792089237316195423570985008687907853269984665640564039457584007913129639904 x5213) x3276)) (not x8747)) (and (=> (and x7642 (= x847 true)) x4020) (=> (and (and (= x160 (x2237 1461501637330902918203684832716283019655932542975 x8429)) (= x8429 (x853 x8270)) (= (= x8429 x160) x1285)) (not x7642)) (and (=> (and x1285 (and (= x8772 x3778) (= x8429 x1767))) x4777) (=> (and (not x1285) (= x847 true)) x4020))))) (=> x8747 x2322))) x3316))
(assert (x391 x1852))
(assert (= x7751 x5477))
(assert (=> (>= 10000 x217) (= (x5361 x217) (x7379 x217))))
(assert (= (or x3349 x4228) x4559))
(assert (= x8218 (or (and (not x1061) x5484) x5254)))
(assert (x391 x1627))
(assert (= (and (not x1898) x8716) x8165))
(assert (x8665 x530 x5390 x5766 x8031))
(assert (=> (<= x1354 10000) (= (x5361 x1354) (x7379 x1354))))
(assert (= x2765 (x3649 (x7379 x2765))))
(assert (x4191 x1256 (- x172 x5390)))
(assert (x8637 x9252))
(assert (= (x3649 (x3789 x954 1)) (+ (x3649 x954) 1)))
(assert (=> (<= x1660 10000) (= (x7379 x1660) (x5361 x1660))))
(assert (x8665 x5552 x7316 x530 x5390))
(assert (= (and x2553 (not x3060)) x480))
(assert (x6103 (- x5766 x1256)))
(assert (x391 x6797))
(assert (x391 x4394))
(assert (x6103 (- x490 x2012)))
(assert (x4191 x774 (- x490 x5390)))
(assert (= (and (not x1323) x3555) x6087))
(assert (x8665 x530 x9039 x172 x1256))
(assert (x391 x5343))
(assert (= (=> (and (= x7407 x5499) (= x1152 x5974)) x5099) x5982))
(assert (x391 x6658))
(assert (= x2214 x1040))
(assert (= x1980 (and (not x3151) x858)))
(assert (= x8146 (and x4388 (not x4336))))
(assert (x2252 x7470))
(assert (x391 x361))
(assert (x8637 x340))
(assert (x2252 x6589))
(assert (= x2621 (and x3063 x6898)))
(assert (x391 x4399))
(assert (= (and x4799 x62) x994))
(assert (= x8212 (and x7000 x3186)))
(assert (x391 x8646))
(assert (= (or x7251 x9044) x5543))
(assert (= (and x7182 x4117) x3508))
(assert (= (+ (x3649 x8340) 2) (x3649 (x3789 x8340 2))))
(assert (x391 x1765))
(assert (x391 x5233))
(assert (x391 x3743))
(assert (= x1127 (and x3946 x8719)))
(assert (x391 x6501))
(assert (= x8987 (and (not x6509) x4347)))
(assert (= (or x7116 x6746) x7847))
(assert (x391 x1799))
(assert (= x396 (and (=> (and x5802 (and (= (x7158 (x7379 x7848) (x5361 159) 0) x6942) (= x2834 (= 0 x1810)) (= (x7158 (x7379 x5430) x6942 0) x4614) (= (ite (not x3356) 1 0) x5466) (= (ite (< x4051 x172) 1 0) x6334) (= x4051 (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1256)) (= (x2659 x520) x1256) (<= 0 x1256) (= (x3789 x4614 1) x520) (= x1810 (x2237 x5466 x6334)) (<= x1256 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3356 (= 0 x1256)))) (and (=> (not x2834) x5562) (=> (and (and (= x7255 (x5353 (x7029 x1256 x172))) (= (x4526 x7255 1000000000000000000) x7349) (= (< x625 0) x8577)) x2834) (and (=> x8577 x331) (=> (and (and (= x625 x8304) (= (> x7349 x8304) x869)) (not x8577)) (and (=> (and (not x869) (and (= x5218 (> x7349 115792089237316195423570985008687907853269984665640564039457)) (= x2914 (= (ite x5218 1 0) 0)))) (and (=> (and x2914 (and (= (ite (> 1000000000000000000 x7682) 1 0) x2085) (= (x5353 (* x7349 1000000000000000000)) x4772) (= x7682 (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4772)) (= (= x6273 0) x592) (= (= 0 x4772) x6417) (= (ite (not x6417) 1 0) x6278) (= (x2237 x6278 x2085) x6273))) (and (=> (and x592 (and (= x6708 (< 0 x1420)) (= (x5353 (* x4772 1000000000000000000)) x1484))) (and (=> (and x6708 (and (= x1037 (x702 x4614)) (= x2855 (x4526 x1484 x1420)) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7774)) x7491) (= (> x1037 x7491) x7903) (= x7774 (x4526 x2855 1000000000000000000)) (<= x1037 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1037))) (and (=> (and (not x7903) (and (= (< x1705 0) x1696) (= (x2125 (+ x7774 x1037)) x6843) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7349)) x1705))) (and (=> (and (and (= x4451 x6843) (= x8332 x830) (= 0 x8105) (= x8332 x7349)) (not x1696)) x6207) (=> x1696 x4133))) (=> x7903 x3731))) (=> (not x6708) x5827))) (=> (not x592) x4692))) (=> (not x2914) x4108))) (=> (and x869 (and (= (< 115792089237316195423570985008687907853269984665640564039457 x8304) x1589) (= x6269 (= (ite x1589 1 0) 0)))) (and (=> (and x6269 (and (= (ite (not x7077) 1 0) x6443) (= (x5353 (* x8304 1000000000000000000)) x6893) (= (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6893) x2431) (= x9242 (x2237 x6443 x3329)) (= (ite (< x2431 1000000000000000000) 1 0) x3329) (= (= x9242 0) x8138) (= x7077 (= 0 x6893)))) (and (=> (not x8138) x8082) (=> (and (and (= (x5353 (* x6893 1000000000000000000)) x2014) (= x7399 (< 0 x172))) x8138) (and (=> (and (and (= x1217 (> x4549 x2270)) (= (x4526 x2014 x172) x178) (<= x2270 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2270 (x2659 x520)) (<= 0 x2270) (= (x4526 x178 1000000000000000000) x4549)) x7399) (and (=> x1217 x8512) (=> (and (and (= (> x8304 115792089237316195423570985008687907853269984665640564039457) x2996) (= x642 (= 0 (ite x2996 1 0))) (= x3971 (x7124 (- x2270 x4549)))) (not x1217)) (and (=> (not x642) x5111) (=> (and x642 (and (= (x5353 (* x8304 1000000000000000000)) x5924) (= x6980 (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5924)) (= (ite (< x6980 1000000000000000000) 1 0) x3466) (= (= 0 x5924) x8195) (= (ite (not x8195) 1 0) x4531) (= x6761 (= 0 x3136)) (= x3136 (x2237 x4531 x3466)))) (and (=> (not x6761) x4672) (=> (and x6761 (and (= (> x1420 0) x372) (= x5758 (x5353 (* x5924 1000000000000000000))))) (and (=> (and (and (= (x702 x4614) x1324) (= x5239 (x4526 x5758 x1420)) (= (x4526 x5239 1000000000000000000) x6425) (<= x1324 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x1324 x5082) x5495) (>= x1324 0) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6425)) x5082)) x372) (and (=> (and (not x5495) (and (= x8105 x3971) (= x4451 x3643) (= x625 x830) (= (x2125 (+ x1324 x6425)) x3643))) x6207) (=> x5495 x1254))) (=> (not x372) x3475))))))))) (=> (not x7399) x324))))) (=> (not x6269) x7528))))))))) (=> (and (and (= 0 x4255) (= x8263 x4566) (= x58 x365)) (not x5802)) x7330))))
(assert (x391 x5486))
(assert (x1710 x8278))
(assert (= (+ (x3649 x5061) 1) (x3649 (x3789 x5061 1))))
(assert (x391 x931))
(assert (= x5477 x3731))
(assert (x391 x5408))
(assert (x391 x187))
(assert (x6103 (- x5552 x2012)))
(assert (x391 x6673))
(assert (x4156 x5390 x530 x1726 x940))
(assert (= x9147 (and x5323 (not x7932))))
(assert (=> (>= 10000 x2523) (= (x5361 x2523) (x7379 x2523))))
(assert (x2252 x3590))
(assert (x4191 x530 (- x9039 x1256)))
(assert (x4191 x172 (- x2780 x490)))
(assert (x4191 x530 (- x5390 x774)))
(assert (x391 x6212))
(assert (x391 x4330))
(assert (= x6305 (or x8169 x3125 x4812 x5864 x5840 x2037 x4769 x3837 x3672)))
(assert (x391 x6328))
(assert (x391 x1890))
(assert (x6103 (- x172 x530)))
(assert (= (and x7700 x5820) x507))
(assert (x391 x8994))
(assert (x391 x2205))
(assert (x4156 x2780 x172 x4135 x2012))
(assert (x4156 x2780 x172 x1726 x940))
(assert (= x3995 (=> (and (= x4119 x5605) (= x3208 0)) x8482)))
(assert (x2252 x7462))
(assert (= (x5361 75483562) (x7379 75483562)))
(assert (x8130 x4246))
(assert (=> (>= 10000 x6259) (= (x7379 x6259) (x5361 x6259))))
(assert (x391 x9088))
(assert (x391 x1895))
(assert (= x3681 (or (and (not x3417) x9034) x8272)))
(assert (=> (<= x3265 10000) (= (x7379 x3265) (x5361 x3265))))
(assert (x6103 (- x530 x8031)))
(assert (x391 x5425))
(assert (x391 x4468))
(assert (= x1679 (x3649 (x7379 x1679))))
(assert (= (and (not x751) x6046) x7351))
(assert (x391 x1749))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x151))
(assert (and (x3303 x4743 1461501637330902918203684832716283019655932542976) (x4253 x4743 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x4077 x4743 1461501637330902918203684832716283019655932542976) (* (x4526 x4743 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x4743)) (x5837 x4743 1461501637330902918203684832716283019655932542976)))
(assert (x391 x1800))
(assert (x4191 x1726 (- x940 x774)))
(assert (= x5135 (and (not x8181) x638)))
(assert (x391 x3498))
(assert (x8637 x403))
(assert (x8665 x1256 x172 x1726 x940))
(assert (= (and (not x3753) x1076) x181))
(assert (= x300 (and x7109 x1166)))
(assert (x391 x2376))
(assert (= x535 (and x5628 x2892)))
(assert (= (=> (= x2526 (< x6903 x3947)) (and (=> (and x2526 (= x6648 (> x6903 x3947))) (and (=> (and (not x6648) (and (= x1114 x7863) (= (x7124 (- x3947 x6903)) x1114))) x7403) (=> x6648 x5477))) (=> (and (= x7863 0) (not x2526)) x7403))) x6013))
(assert (x391 x3662))
(assert (= x8851 (and x8403 x691)))
(assert (= x4709 (and x8117 (not x323))))
(assert (x4191 x1256 (- x172 x940)))
(assert (= (and (not x3121) x8852) x4107))
(assert (= x1471 (=> (and (= x1450 (= 0 x123)) (or (and (not x1450) (= x123 x5154)) (and x1450 (and (< (+ x7703 x2894) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x7199 (x7379 x7032)) x7703) (= x7269 (x2273 (x7379 x7848))) (= x2444 (x2125 (+ x7703 x2894))) (= (- x7269 x2894) x1761) (= x5154 x123) (= x2894 (ite (= 0 x123) x7535 0)))))) x2579)))
(assert (x6103 (- x940 x8031)))
(assert (= (x3649 (x3789 x5623 1)) (+ 1 (x3649 x5623))))
(assert (= (x7379 1466279372) (x5361 1466279372)))
(assert (= (or x1656 x2356) x854))
(assert (= x8058 (and x7809 (not x2558))))
(assert (= x6114 (and (not x2884) x6095)))
(assert (= x3289 (and x834 (not x3313))))
(assert (= (and x3562 x7360) x3552))
(assert (x391 x2862))
(assert (= (=> (and (or (and x186 (= x7375 x8787)) (and (not x186) (= x7375 0))) (and (>= x6922 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6922) (= (> x8787 x6922) x186))) x3951) x3172))
(assert (x6103 (- x3579 x940)))
(assert (= (or x4935 x876) x7154))
(assert (x391 x5639))
(assert (x4191 x4135 (- x2012 x940)))
(assert (= 2691771752 (x3649 (x5361 2691771752))))
(assert (=> (>= 10000 x7833) (= (x7379 x7833) (x5361 x7833))))
(assert (=> (<= x5308 10000) (= (x7379 x5308) (x5361 x5308))))
(assert (= x4382 (and x2038 (not x7930))))
(assert (x391 x4964))
(assert (= x5162 (=> (= x2002 (= 0 x4622)) (and (=> (and (not x2002) (= (= x3947 0) x8513)) (and (=> (and (and (and (= x6920 (= x7848 x8110)) (= x1706 4) (= (x2125 (+ 160 x2243)) x4539)) (or (and (and (= (= x7848 x5049) x839) (or (and x839 (and (= x8066 77053863734975077137548456399560439977311721439096602559221323163398253314048) (< x9200 2929553584) (not (= 2835717307 x9200)) (= x371 x1706) (not (< x9200 2217467699)) (not (< x9200 2691771752)) (= 32 x958) (= 1 x915) (<= 0 x6118) (not (= 2691771752 x9200)) (= x371 4) (> x8004 0) (= x9200 2858086653) (not (= 2796547477 x9200)) (= x8004 (x6887 (x7379 x5049))) (<= x6118 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x371 4)))) (and (not x839) (and (= x3004 (= x7848 x4633)) (and (and (not (= x2930 2835717307)) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x4684) (not (= x2930 2691771752)) (= x958 32) (= x5018 x1706) (> x5238 0) (not (= x2930 2796547477)) (= x915 1) (>= x7457 0) (= x5238 (x6887 (x7379 x4633))) (<= x7457 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> 2217467699 x2930)) (= 2858086653 x2930) (= x5018 4) (> 2929553584 x2930) (not (< x2930 2691771752)) (not (> 4 x5018))) x3004))))) (not x6920)) (and (and (not (< x663 2217467699)) (>= x5645 0) (not (> 4 x3737)) (not (= 2691771752 x663)) (= x1706 x3737) (= (x6887 (x7379 x8110)) x3762) (= 32 x958) (= 4 x3737) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x4479) (< x663 2929553584) (not (= 2796547477 x663)) (not (= 2835717307 x663)) (not (< x663 2691771752)) (< 0 x3762) (= x663 2858086653) (= x915 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5645)) x6920))) (not x8513)) x5403) (=> (and x8513 (and (= x5918 x2243) (= x6903 0) (= 0 x2343) (= x2443 x344))) x6013))) (=> (and x2002 (and (= x3947 x3123) (= x7345 x4659) (= x344 x1481) (= x2243 x1621) (= x625 x1935))) x1079)))))
(assert (x8665 x490 x774 x2012 x5116))
(assert (= (=> (and (= x7459 x8525) (= x1435 0)) x6115) x8691))
(assert (x4156 x8031 x5766 x5390 x530))
(assert (x391 x2937))
(assert (= (and (not x3642) x8462) x1255))
(assert (= x8704 (and x5345 (not x6574))))
(assert (=> (>= 10000 x5049) (= (x7379 x5049) (x5361 x5049))))
(assert (x391 x5567))
(assert (x391 x2958))
(assert (x8665 x2012 x5116 x1726 x940))
(assert (= (x3649 (x7379 x6206)) x6206))
(assert (x391 x2444))
(assert (x391 x555))
(assert (= (or x83 x2473 x7154 x7256) x8456))
(assert (x391 x1944))
(assert (x2252 x6495))
(assert (x391 x7982))
(assert (x391 x3108))
(assert (x391 x6346))
(assert (= (and (not x8305) x2258) x1043))
(assert (x391 x6146))
(assert (x391 x8481))
(assert (x391 x6209))
(assert (= x1126 (and x882 (not x6477))))
(assert (= (=> (and (= x5206 x5227) (= x715 x6367)) x7596) x4845))
(assert (= (and x3071 x4459) x3564))
(assert (=> (<= x1512 10000) (= (x5361 x1512) (x7379 x1512))))
(assert (x391 x1070))
(assert (= (and x5679 x8638) x4963))
(assert (= (x3649 (x5361 18446744073709551615)) 18446744073709551615))
(assert (= (+ 2 (x3649 x4654)) (x3649 (x3789 x4654 2))))
(assert (= x3176 (and x5884 (not x5072))))
(assert (x391 x970))
(assert (x391 x4586))
(assert (x391 x359))
(assert (x391 x7007))
(assert (x7060 x530))
(assert (= x335 (and x323 x8117)))
(assert (= (and (not x7722) x3591) x148))
(assert (x391 x3921))
(assert (x4191 x4135 (- x2012 x774)))
(assert (x391 x8796))
(assert (x391 x2295))
(assert (x8665 x3579 x3593 x2012 x5116))
(assert (x1710 x8889))
(assert (= x2870 (or x962 x338)))
(assert (x391 x9272))
(assert (= x9007 (or x3508 x4100)))
(assert (= x8758 (and x6954 (not x4062))))
(assert (= (and x2369 x2236) x7914))
(assert (x8665 x490 x774 x2012 x4135))
(assert (x391 x886))
(assert (= x3214 (and x4913 (not x1106))))
(assert (= x1912 (=> (and (= (= 0 x4301) x3636) (or (and (not x3636) (and (= x5093 x4301) (= x7181 x6662) (= x3302 x3712) (= x1957 x2625))) (and (and (= x2073 (ite (= 0 x4301) x8118 0)) (= x3302 x3712) (= (x2161 (x7379 x7848)) x8461) (= x1957 x2625) (< (+ x2073 x8878) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x844 (x2125 (+ x2073 x8878))) (= (x3248 (x7379 x7032)) x8878) (= (- x8461 x2073) x2844) (= x4301 x5093) (= x6662 x7181)) x3636))) x3759)))
(assert (x391 x6022))
(assert (x6103 (- x5552 x5766)))
(assert (= (and x8851 x2830) x2424))
(assert (= x7391 (and x5968 x7340)))
(assert (x391 x8249))
(assert (= x6530 (and x4087 x8138)))
(assert (= x2964 (and x7698 x536)))
(assert (= x8781 (and x3735 x501)))
(assert (x7060 x8397))
(assert (x6103 (- x940 x7316)))
(assert (x391 x2206))
(assert (x391 x4711))
(assert (= (and x2944 x7839) x8057))
(assert (x391 x1807))
(assert (= (and x5768 x473) x7236))
(assert (= x4556 x1040))
(assert (x1710 x3346))
(assert (x391 x3866))
(assert (x2252 x6101))
(assert (x7060 x8335))
(assert (= (x3649 (x7379 x5669)) x5669))
(assert (=> (>= 10000 x7560) (= (x5361 x7560) (x7379 x7560))))
(assert (= (or x8192 x2661) x7311))
(assert (x391 x1923))
(assert (= (and x8673 x8761) x5132))
(assert (x391 x8753))
(assert (= (x3649 (x3789 x4614 1)) (+ (x3649 x4614) 1)))
(assert (= (and x9081 x2914) x6659))
(assert (= (and x8947 x8200) x636))
(assert (x391 x3858))
(assert (= (and x523 (not x7652)) x3503))
(assert (x2252 x7936))
(assert (= (x3649 (x3789 x6649 1)) (+ (x3649 x6649) 1)))
(assert (= x6079 (and x9045 (not x5514))))
(assert (= (and x7175 (not x8132)) x8499))
(assert (x4156 x8031 x5766 x1726 x940))
(assert (= (and x8273 (not x1756)) x8412))
(assert (x391 x2772))
(assert (= x7601 (and (not x7441) x8011)))
(assert (= x2738 (x3649 (x7379 x2738))))
(assert (x391 x8706))
(assert (= x7762 (and x4229 x3829)))
(assert (x391 x2876))
(assert (x1710 x911))
(assert (= x5616 (and (not x33) x1689)))
(assert (x391 x7703))
(assert (= (x3649 (x3789 x7521 1)) (+ 1 (x3649 x7521))))
(assert (= x8126 (and x1874 x7642)))
(assert (= x835 (=> (and (= x250 x888) (= x5356 x1010)) x7177)))
(assert (= x6198 (or x541 x7892)))
(assert (= (or x1154 x5788) x6178))
(assert (= x8269 (and x6708 x673)))
(assert (x391 x7028))
(assert (x391 x6216))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6814))
(assert (x391 x8905))
(assert (= x1964 (or (and x7584 x6389) (and (not x8611) x5797))))
(assert (x391 x7362))
(assert (x391 x5499))
(assert (= x2993 (x3649 (x7379 x2993))))
(assert (x391 x7384))
(assert (= x4160 (and x3955 (not x7802))))
(assert (x8665 x2012 x4135 x5552 x7316))
(assert (x391 x3087))
(assert (=> (>= 10000 x6717) (= (x7379 x6717) (x5361 x6717))))
(assert (= (x3649 (x3789 x7317 1)) (+ (x3649 x7317) 1)))
(assert (= x4227 (and x9146 (not x2863))))
(assert (x391 x337))
(assert (= (=> (and (= x5090 0) (= x7235 x5676)) x3331) x8312))
(assert (= (and x318 x5183) x1510))
(assert (x2252 x2324))
(assert (= (and x8085 (not x9083)) x5628))
(assert (x6103 (- x9039 x8031)))
(assert (= x1930 (and (not x5385) x2414)))
(assert (x391 x329))
(assert (x391 x1896))
(assert (= x733 (and (not x1834) x5336)))
(assert (x391 x6062))
(assert (= x6774 (and x5078 (not x5452))))
(assert (= x2645 (and (not x1280) x4697)))
(assert (x391 x895))
(assert (= (+ (x3649 x5794) 1) (x3649 (x3789 x5794 1))))
(assert (= x2037 (and x7633 x6868)))
(assert (x6103 x2973))
(assert (x2252 x7848))
(assert (x6103 x151))
(assert (= (and x5771 x498) x3645))
(assert (x391 x6567))
(assert (x391 x6101))
(assert (= (and x7195 x4368) x3262))
(assert (= x26 (and x6078 x2145)))
(assert (x391 x71))
(assert (x391 x6458))
(assert (x4156 x172 x2780 x4135 x2012))
(assert (x2252 x1800))
(assert (x8665 x2012 x5116 x530 x5390))
(assert (x391 x3593))
(assert (= x5607 (and (not x6294) x1870)))
(assert (x391 x4406))
(assert (x391 x2506))
(assert (= x7403 (=> (= (< 0 x2343) x8416) (and (=> (and (= x5129 (> x2343 x625)) x8416) (and (=> (and (not x5129) (and (= x7959 (> x7345 x108)) (= (x7124 (- x625 x2343)) x8016) (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2343)) x108))) (and (=> (and (and (= x8016 x5689) (= x4436 (x2125 (+ x7345 x2343))) (= x5891 x4436)) (not x7959)) x6330) (=> x7959 x5477))) (=> x5129 x5477))) (=> (and (not x8416) (and (= x7345 x5891) (= x625 x5689))) x6330)))))
(assert (= x1605 x5477))
(assert (x4191 x5390 (- x530 x774)))
(assert (x391 x6569))
(assert (x391 x2034))
(assert (= (or x8767 x5395) x6370))
(assert (= 405663989 (x3649 (x5361 405663989))))
(assert (x391 x2429))
(assert (x6103 (- x2012 x490)))
(assert (x391 x9208))
(assert (x391 x6570))
(assert (x391 x2731))
(assert (x391 x321))
(assert (x6103 (- x172 x1726)))
(assert (x6103 x2012))
(assert (x2252 x624))
(assert (x391 x2513))
(assert (= x7331 (and x2344 x111)))
(assert (x6103 (- x1256 x490)))
(assert (x391 x1743))
(assert (= x4447 (and x2029 (not x2774))))
(assert (x8665 x530 x9039 x530 x5390))
(assert (= (and (not x6162) x5793) x3630))
(assert (x2252 x476))
(assert (= (and x2783 x7945) x3895))
(assert (= (=> (and (= x7593 x5150) (= x6837 x8608)) x5027) x8489))
(assert (x391 x6625))
(assert (x391 x6974))
(assert (x8665 x2780 x172 x4135 x2012))
(assert (x391 x6807))
(assert (x391 x4880))
(assert (x391 x519))
(assert (= x3573 (or x7071 x1632 x1096 x8046)))
(assert (= (=> (= x847 true) x4020) x2322))
(assert (= x5397 (=> (and (= x5227 x7859) (= x715 x7931)) x7596)))
(assert (= (and x6058 (not x2701)) x988))
(assert (x391 x7678))
(assert (= (and x5188 (not x1198)) x7730))
(assert (x391 x9079))
(assert (= (x5361 1779720228) (x7379 1779720228)))
(assert (=> (>= 10000 x5469) (= (x5361 x5469) (x7379 x5469))))
(assert (= x4956 (=> (= x2838 (= x5327 0)) (and (=> (and (not x2838) (= x930 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x412) (and (> 32 x412) (= (<= x412 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))))) (and (=> x930 x5661) (=> (and (= 1 x7517) (not x930)) x5561))) (=> x2838 x5661)))))
(assert (=> (>= 10000 x4695) (= (x5361 x4695) (x7379 x4695))))
(assert (x8665 x2780 x172 x774 x490))
(assert (= (x3649 (x7379 x8690)) x8690))
(assert (x391 x2498))
(assert (= (=> (and (= x579 x5499) (= x5974 x7012)) x5099) x1652))
(assert (x391 x6685))
(assert (= (and (not x3660) x5439) x973))
(assert (x391 x122))
(assert (x4156 x4135 x2012 x5116 x2012))
(assert (x4156 x2012 x5116 x1726 x940))
(assert (= (x3649 (x5361 3266287495)) 3266287495))
(assert (x391 x7012))
(assert (= x3601 (=> (= (= x5021 0) x5349) (and (=> x5349 x5932) (=> (and (and (= x7862 (x7158 (x7379 x7448) (x5361 161) 0)) (= (< 0 x2323) x8174) (= x2323 (x1668 x7862))) (not x5349)) (and (=> (and x8174 (and (= (= x7848 x1325) x4380) (= (x707 x7862 0) x7480) (= x8367 x7480) (<= 0 x1325) (< x1325 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x1325) (= (x8560 x8367) x1325))) (and (=> (not x4380) x6487) (=> (and x4380 (and (= (< x381 1) x5630) (= (x7158 (x7379 x7448) (x5361 161) 0) x7893) (= (x1668 x7893) x381))) (and (=> (and (and (= (x7124 (- x381 1)) x2590) (= x1602 (= x2590 0))) (not x5630)) (and (=> (and (not x1602) (and (= x8041 (> x970 x2590)) (= x970 (x1668 x7742)) (= (x7158 (x7379 x7448) (x5361 161) 0) x7742))) (and (=> (and (and (< x1584 1461501637330902918203684832716283019655932542976) (= (x707 x7742 0) x8857) (= (x3789 x8857 x2590) x6065) (= x8144 (< 0 x5319)) (>= 1461501637330902918203684832716283019655932542975 x1584) (= x1584 (x8560 x6065)) (>= x1584 0) (= (x7158 (x7379 x7448) (x5361 161) 0) x7502) (= x5319 (x1668 x7502))) x8041) (and (=> x8144 x408) (=> (not x8144) x3950))) (=> (not x8041) x3950))) (=> x1602 x408))) (=> x5630 x5477))))) (=> (not x8174) x3648)))))))
(assert (= x855 (x3649 (x7379 x855))))
(assert (x4156 x7316 x5552 x3593 x3579))
(assert (x1052 x3770 x7197))
(assert (x7060 x3907))
(assert (x8637 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (and x3694 x3310) x7648))
(assert (x4191 x1726 (- x940 x3593)))
(assert (x391 x8267))
(assert (x4191 x1726 (- x940 x490)))
(assert (x391 x8737))
(assert (= (x3649 (x7379 x8346)) x8346))
(assert (= (or x6627 x2748) x402))
(assert (= x1120 (and x754 x8653)))
(assert (= x8543 (x3649 (x7379 x8543))))
(assert (= (and x7180 (not x4512)) x8404))
(assert (x391 x299))
(assert (x391 x4137))
(assert (= x5542 (and (not x4028) x883)))
(assert (=> (<= x5237 10000) (= (x5361 x5237) (x7379 x5237))))
(assert (= x2082 (and x455 x7052)))
(assert (= x9149 (or x4958 x2093)))
(assert (x391 x5360))
(assert (= x5700 (and x1238 x3218)))
(assert (x391 x8398))
(assert (= (and x98 x2951) x269))
(assert (x391 x2856))
(assert (= (x3649 (x3789 x6153 1)) (+ (x3649 x6153) 1)))
(assert (x4156 x940 x1726 x3593 x3579))
(assert (x391 x722))
(assert (= (and x6341 (not x4830)) x4341))
(assert (x391 x1018))
(assert (x391 x7921))
(assert (= (and x6955 (not x925)) x7569))
(assert (x391 x1841))
(assert (x4191 x9039 (- x530 x1726)))
(assert (= x7477 (and x4437 x4140)))
(assert (= x4020 (=> (or (not x847) x847) x8684)))
(assert (x391 x280))
(assert (= x2651 (and x5321 x7276)))
(assert (= x5677 (and x5423 x2052)))
(assert (x391 x8964))
(assert (x391 x1866))
(assert (= (+ (x3649 x4973) 1) (x3649 (x3789 x4973 1))))
(assert (= (and x3628 x8546) x3829))
(assert (= x5458 (and x5304 x2218)))
(assert (x8665 x4135 x2012 x5766 x8031))
(assert (x391 x9166))
(assert (= x902 (=> (= (= x5113 0) x8074) (and (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3521) (and (< x3521 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3521)))) x4543) (not x8074)) (and (=> (and (and (= (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5858)) x8846) (<= x1090 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x8846 x1090) x1784) (>= x1090 0)) (not x4543)) (and (=> (and (not x1784) (and (= (x3865 x7566) x1170) (>= x1170 0) (= x7566 (x7158 (x7379 x7032) (x5361 5) 0)) (<= x1170 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x8846 x1170) x3944) (= (x2125 (+ x5858 x1090)) x3831))) (and (=> (and (and (= x1880 32) (= x440 (x2125 (+ x1170 x5858))) (= x2365 1)) (not x3944)) x8712) (=> x3944 x4027))) (=> x1784 x4027))) (=> x4543 x4027))) (=> x8074 x4027)))))
(assert (x391 x8925))
(assert (= x746 (=> (and (= x4609 (x1668 x7954)) (= (> x4609 0) x6277) (= x7954 (x7158 (x7379 x7448) (x5361 161) 0))) (and (=> (and (= (x7124 (- x4609 1)) x279) x6277) x1243) (=> (not x6277) x4218)))))
(assert (x391 x3657))
(assert (x2252 x1385))
(assert (= x7151 (and (not x4874) x1286)))
(assert (x8637 x5535))
(assert (x391 x3276))
(assert (x4191 x172 (- x2780 x2012)))
(assert (x391 x7485))
(assert (= (and x3519 (not x7998)) x6470))
(assert (x391 x7955))
(assert (= x8547 (=> (and (= x4634 x8984) (= x7031 x9106)) x2181)))
(assert (= (and x3134 (not x5473)) x2827))
(assert (x391 x6804))
(assert (x391 x7300))
(assert (= (or x3916 x3650) x7093))
(assert (=> (<= x2324 10000) (= (x5361 x2324) (x7379 x2324))))
(assert (= x3633 (or x3586 x1672 x8625 x6093 x5682 x1248)))
(assert (x391 x5632))
(assert (x391 x4678))
(assert (= x2006 (and (not x5614) x3246)))
(assert (= (and x7210 (not x3570)) x3837))
(assert (= x7797 (and (not x7630) x133)))
(assert (= (and (not x4010) x6332) x6849))
(assert (x391 x5643))
(assert (= x9104 (and x8744 x1378)))
(assert (= (and (=> (and (not x4625) (and (= x938 1) (= x734 x180))) x5859) (=> x4625 x3132)) x1670))
(assert (x391 x4856))
(assert (x391 x8397))
(assert (= x5204 (=> (and (= x5325 x7437) (= x4729 x7247)) x5942)))
(assert (= (x3649 (x3789 x2889 1)) (+ (x3649 x2889) 1)))
(assert (x391 x85))
(assert (x4156 x5390 x530 x1256 x172))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x2973 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x2973 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x2973 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x2973 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x2973 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x2973 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2973)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x2973))) (x8005 1000000000000000000 x2973) (= (x7029 1000000000000000000 x2973) (* 1000000000000000000 x2973)) (x1844 1000000000000000000 x2973) (x7186 1000000000000000000 x2973) (x997 1000000000000000000 x2973) (x1348 1000000000000000000 x2973)))
(assert (= (and x3417 x9034) x8272))
(assert (= x8879 (and x2038 x7930)))
(assert (x8665 x8031 x5766 x5390 x530))
(assert (= x1159 (and (not x8415) x7400)))
(assert (x391 x2835))
(assert (= (and x4222 x8568) x2704))
(assert (x391 x9039))
(assert (x391 x3655))
(assert (x6103 (- x4135 x2012)))
(assert (x6103 (- x5116 x5390)))
(assert (= x9146 (or x8922 x1745)))
(assert (= (and x1307 x1970) x8387))
(assert (= x2885 (and x328 x2737)))
(assert (x391 x1313))
(assert (= x5215 (or x3467 x454)))
(assert (= (and (=> (and (not x4449) (= x4449 x6294)) x9022) (=> (and (= (> x3135 x284) x7492) x4449) (and (=> (and (and (= x349 (x7124 (- x284 x3135))) (= (< x349 x3123) x6294)) (not x7492)) x9022) (=> x7492 x7751)))) x6121))
(assert (= (and x1457 x5996) x8511))
(assert (x4191 x3593 (- x3579 x5116)))
(assert (= x2094 (x3649 (x7379 x2094))))
(assert (x4191 x5390 (- x530 x490)))
(assert (x391 x559))
(assert (= (and x4062 x6954) x6600))
(assert (x4191 x4135 (- x2012 x8031)))
(assert (=> (>= 10000 x2105) (= (x5361 x2105) (x7379 x2105))))
(assert (= (and x2977 x7978) x7636))
(assert (= x3487 (and x8782 (not x3430))))
(assert (= (and (not x2509) x2626) x1421))
(assert (x391 x2270))
(assert (x391 x1539))
(assert (x391 x4683))
(assert (x4156 x172 x1256 x8031 x5766))
(assert (= x2791 (and x7243 x1426)))
(assert (x391 x7512))
(assert (= (x5361 10936679508223583803006762266923565500374401145016910147028117655998246682624) (x7379 10936679508223583803006762266923565500374401145016910147028117655998246682624)))
(assert (= x1295 (or x9066 x6131)))
(assert (= (and x2541 (not x3187)) x7898))
(assert (x7060 x6857))
(assert (x7060 x2012))
(assert (= x446 (and x5433 (not x5421))))
(assert (= (and (not x4433) x3176) x5652))
(assert (x391 x1358))
(assert (x391 x7319))
(assert (x4191 x940 (- x1726 x8031)))
(assert (= x8353 (=> (and (= x6024 0) (= x4311 x6534)) x1794)))
(assert (x6103 (- x2012 x774)))
(assert (= (x3649 (x3789 x4515 1)) (+ (x3649 x4515) 1)))
(assert (x391 x6957))
(assert (x391 x8923))
(assert (x4191 x172 (- x2780 x8031)))
(assert (x391 x8558))
(assert (x391 x149))
(assert (=> (<= x1092 10000) (= (x5361 x1092) (x7379 x1092))))
(assert (x391 x743))
(assert (= (and (not x1231) x8890) x7706))
(assert (x2252 x5430))
(assert (x2252 x662))
(assert (x8665 x172 x2780 x172 x1256))
(assert (= (or x3453 x1817 x6584 x9187) x7215))
(assert (x391 x5389))
(assert (= (x3649 (x7379 x3374)) x3374))
(assert (x391 x5464))
(assert (x391 x4944))
(assert (x391 x1732))
(assert (x391 x811))
(assert (x391 x1783))
(assert (x4156 x7316 x5552 x9039 x530))
(assert (= x4574 (or x1788 x1316)))
(assert (x391 x4267))
(assert (x391 x3223))
(assert (x391 x7661))
(assert (x391 x759))
(assert (x391 x4738))
(assert (x391 x5259))
(assert (x4156 x774 x490 x5116 x2012))
(assert (x4156 x530 x5390 x1256 x172))
(assert (x391 x3603))
(assert (x8665 x172 x2780 x3579 x3593))
(assert (= x4219 (and x3011 x1567)))
(assert (x1257 x8889))
(assert (= (and x6338 x5785) x7565))
(assert (= (and x3688 (not x2694)) x7408))
(assert (= (and x4528 x5810) x2419))
(assert (x8665 x5552 x7316 x3593 x3579))
(assert (= (x5361 1608758631) (x7379 1608758631)))
(assert (x391 x5045))
(assert (x6103 (- x5766 x774)))
(assert (= x3990 (and x5904 x4173)))
(assert (x4191 x2012 (- x4135 x3579)))
(assert (x391 x8268))
(assert (x391 x379))
(assert (= x1519 (and x9007 (not x4402))))
(assert (x391 x3465))
(assert (= x7213 (or (and x4150 (not x2630)) x1232)))
(assert (x4191 x774 (- x490 x940)))
(assert (x391 x3072))
(assert (x2252 x5412))
(assert (x4191 x172 (- x1256 x490)))
(assert (x391 x5039))
(assert (x391 x5702))
(assert (= (and x6160 (not x1470)) x9067))
(assert (= x6526 (x3649 (x7379 x6526))))
(assert (x391 x4971))
(assert (x391 x6914))
(assert (= x7262 (and x242 x6851)))
(assert (x391 x44))
(assert (x391 x4340))
(assert (x2252 x5512))
(assert (x8637 x4531))
(assert (= (x5361 1857877511) (x7379 1857877511)))
(assert (x4191 x5552 (- x7316 x5390)))
(assert (= x6726 (and x2363 x5151)))
(assert (x391 x980))
(assert (x391 x5590))
(assert (= x2358 (not (and (> 1461501637330902918203684832716283019655932542976 x6146) (= (x8828 x5005) x6146) (>= 1461501637330902918203684832716283019655932542975 x6146) (= (x3789 x9267 1) x5005) (<= 0 x6146) (= x9267 (x7158 (x7379 x6101) x5954 0))))))
(assert (x4191 x5552 (- x7316 x1726)))
(assert (x4191 x3593 (- x3579 x9039)))
(assert (x391 x1328))
(assert (= (+ 1 (x3649 x4903)) (x3649 (x3789 x4903 1))))
(assert (x4191 x490 (- x774 x3593)))
(assert (x1710 x7512))
(assert (x391 x5819))
(assert (= (x7379 72570022874062638528011751457397263716769196454539065078543251854057308946432) (x5361 72570022874062638528011751457397263716769196454539065078543251854057308946432)))
(assert (x391 x7438))
(assert (= x7192 (and (not x7675) x5626)))
(assert (=> (<= x5639 10000) (= (x5361 x5639) (x7379 x5639))))
(assert (= (and (not x6603) x3613) x7260))
(assert (x4191 x530 (- x5390 x4135)))
(assert (x391 x648))
(assert (= (and (not x2977) x7978) x5481))
(assert (= x3024 (and x2044 x21)))
(assert (= (and x6622 x8870) x3726))
(assert (= x657 (=> (and (= x800 0) (= x7724 x7203)) x1261)))
(assert (= (and x8848 x4513) x2573))
(assert (x391 x3778))
(assert (x391 x3162))
(assert (x391 x836))
(assert (x391 x1435))
(assert (x1257 x5213))
(assert (=> (<= x8884 10000) (= (x5361 x8884) (x7379 x8884))))
(assert (= x1713 (and x8041 x7507)))
(assert (x391 x1262))
(assert (= x605 (and x5396 (not x2100))))
(assert (x391 x4785))
(assert (= x5910 (and x5444 (not x4625))))
(assert (x6103 (- x1726 x3579)))
(assert (= x1352 (and (not x732) x6763)))
(assert (=> (<= x6397 10000) (= (x7379 x6397) (x5361 x6397))))
(assert (= x6368 (or x7420 x7495)))
(assert (= x6457 (x3649 (x7379 x6457))))
(assert (x391 x3027))
(assert (x391 x5482))
(assert (= (and x7700 (not x5820)) x599))
(assert (x391 x129))
(assert (x8637 x9091))
(assert (= (and x8077 x2274) x8804))
(assert (= (or x4817 x6891) x2617))
(assert (x2252 x3150))
(assert (x391 x5309))
(assert (x391 x4443))
(assert (= x426 (and x5459 (not x9019))))
(assert (= (and x6263 x9108) x4653))
(assert (x4191 x1256 (- x172 x8031)))
(assert (x391 x8016))
(assert (= x3790 (and x5805 x6281)))
(assert (= (and (not x5184) x3014) x3149))
(assert (x8665 x5116 x2012 x3593 x3579))
(assert (= (x3649 (x3789 x1596 1)) (+ (x3649 x1596) 1)))
(assert (= (x7379 1000000000000000000) (x5361 1000000000000000000)))
(assert (= (and x9147 (not x1565)) x3423))
(assert (= x4597 (and (not x7125) x8725)))
(assert (x8665 x530 x9039 x5116 x2012))
(assert (x7060 x5460))
(assert (x391 x6183))
(assert (x2252 x1493))
(assert (= x6270 (or x7601 x5638)))
(assert (x391 x3086))
(assert (= x3613 (and x3952 (not x4499))))
(assert (x6103 (- x4135 x9039)))
(assert (=> (<= x662 10000) (= (x7379 x662) (x5361 x662))))
(assert (x391 x6510))
(assert (x6103 x3987))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x5680 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x5680 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x5680 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x5680 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x5680 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x5680 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x5680)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x5680))) (x8005 1000000000000000000 x5680) (= (x7029 1000000000000000000 x5680) (* 1000000000000000000 x5680)) (x1844 1000000000000000000 x5680) (x7186 1000000000000000000 x5680) (x997 1000000000000000000 x5680) (x1348 1000000000000000000 x5680)))
(assert (x391 x1303))
(assert (x4191 x5390 (- x530 x9039)))
(assert (x391 x3947))
(assert (x4191 x5552 (- x7316 x8031)))
(assert (= (and x8057 x3520) x6863))
(assert (x6103 (- x8031 x5116)))
(assert (x391 x6041))
(assert (x391 x103))
(assert (= (and x3802 x8443) x2468))
(assert (x391 x4383))
(assert (= x2904 (and x4703 x8578)))
(assert (x8665 x490 x774 x1726 x940))
(assert (= (and (not x5349) x1094) x3940))
(assert (x391 x2128))
(assert (x391 x8528))
(assert (= (and x1819 x7445) x5138))
(assert (x8665 x940 x1726 x8031 x5766))
(assert (= x7822 (and x2238 x315)))
(assert (= (x3649 (x3789 x5954 2)) (+ (x3649 x5954) 2)))
(assert (x391 x8318))
(assert (= (and x6935 x5131) x749))
(assert (x4156 x4135 x2012 x3593 x3579))
(assert (= x2017 (and x6161 x1035)))
(assert (x4191 x9039 (- x530 x3593)))
(assert (x391 x720))
(assert (= (and x8375 (not x937)) x3288))
(assert (= (+ (x3649 x4116) 2) (x3649 (x3789 x4116 2))))
(assert (x8665 x7316 x5552 x2012 x5116))
(assert (= x7303 (and x4034 x7306)))
(assert (x391 x3379))
(assert (=> (>= 10000 x2354) (= (x5361 x2354) (x7379 x2354))))
(assert (= (or x5910 x8017) x6783))
(assert (= x7561 (=> (and (or (not x7764) x7764) (= (= 0 x603) x7764)) x1916)))
(assert (= (+ 1 (x3649 x4978)) (x3649 (x3789 x4978 1))))
(assert (= (x3649 (x3789 x4470 1)) (+ 1 (x3649 x4470))))
(assert (x391 x8952))
(assert (=> (<= x2008 10000) (= (x7379 x2008) (x5361 x2008))))
(assert (x2252 x1353))
(assert (= (or x6640 x8775 x4413 x1949) x8359))
(assert (x391 x4772))
(assert (= (and (not x6548) x4773) x1036))
(assert (= (x3649 (x7379 x7470)) x7470))
(assert (= x2560 (and x7971 (not x4377))))
(assert (= (x3649 (x3789 x8793 1)) (+ (x3649 x8793) 1)))
(assert (x391 x8131))
(assert (x391 x4803))
(assert (x4156 x9039 x530 x1256 x172))
(assert (x391 x4647))
(assert (x391 x755))
(assert (= x2653 x5949))
(assert (x391 x4444))
(assert (x6103 x187))
(assert (x391 x8417))
(assert (=> (>= 10000 x3991) (= (x5361 x3991) (x7379 x3991))))
(assert (x8637 x5622))
(assert (= x5846 (and x2229 x5171)))
(assert (= (+ (x3649 x4725) 1) (x3649 (x3789 x4725 1))))
(assert (x2252 x8990))
(assert (x8665 x1256 x172 x530 x5390))
(assert (x391 x5882))
(assert (=> (<= x8286 10000) (= (x5361 x8286) (x7379 x8286))))
(assert (x4191 x172 (- x1256 x774)))
(assert (x391 x8125))
(assert (x391 x5465))
(assert (= (and x3525 x4770) x4073))
(assert (x391 x4898))
(assert (= (x5361 18446744073709551615) (x7379 18446744073709551615)))
(assert (x391 x7887))
(assert (= (or (and x1494 (not x8370)) x8820) x8668))
(assert (x391 x4589))
(assert (x391 x7840))
(assert (x6103 (- x530 x940)))
(assert (x8665 x2012 x5116 x172 x1256))
(assert (= (=> (and (= x722 x2243) (= x3587 x625)) x5725) x6400))
(assert (= x3952 (and x4517 (not x6680))))
(assert (= x1629 (=> (and (= x4861 (x3789 x8327 1)) (= x8327 (x3789 x1947 1)) (= (x7158 (x7379 x2879) x8587 0) x1947)) x7501)))
(assert (= (and (not x2340) x1102) x1218))
(assert (x391 x5278))
(assert (= x3197 (and x8668 (not x2838))))
(assert (and (x5662 x8335 1000000000000000000) (x6638 x8335 1000000000000000000) (=> (and (< 0 x8335) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x8335 1000000000000000000)) (- x8335 1000000000000000000)) (>= x8335 (* 1000000000000000000 (x4526 x8335 1000000000000000000))))) (x4068 x8335 1000000000000000000) (x797 x8335 1000000000000000000)))
(assert (x391 x9271))
(assert (x391 x7498))
(assert (= x2762 (and (not x2297) x6098)))
(assert (= x8372 (and (not x3604) x3031)))
(assert (= x3629 (and (not x8087) x205)))
(assert (x4156 x5552 x7316 x2780 x172))
(assert (= (and x8906 x5289) x7885))
(assert (x8665 x940 x1726 x5766 x8031))
(assert (= (and (not x6844) x7493) x7180))
(assert (x391 x8332))
(assert (= x3321 (and (not x5988) x1404)))
(assert (= x6355 (and x6803 (not x4543))))
(assert (= x1082 (and x2770 x5372)))
(assert (=> (>= 10000 x4508) (= (x5361 x4508) (x7379 x4508))))
(assert (= (or x4655 (and (not x4643) x6985)) x2258))
(assert (x4156 x1256 x172 x7316 x5552))
(assert (= (and (not x8438) x2786) x4090))
(assert (= (and x3236 x1250) x6518))
(assert (x391 x972))
(assert (=> (<= x1208 10000) (= (x5361 x1208) (x7379 x1208))))
(assert (= x6841 (or x8289 x7539)))
(assert (x1052 x7122 x3805))
(assert (x391 x6517))
(assert (x391 x4372))
(assert (= (and x857 x3636) x4071))
(assert (= x8656 (and (not x2530) x2516)))
(assert (x4156 x3579 x3593 x490 x774))
(assert (= x3449 (and x8499 x8247)))
(assert (x6103 (- x1256 x5552)))
(assert (= x2272 (and (not x5798) x7913)))
(assert (x391 x3202))
(assert (= x3560 (and x7260 (not x1658))))
(assert (x4191 x172 (- x1256 x5766)))
(assert (= (and x7547 (not x2668)) x7263))
(assert (=> (<= x4384 10000) (= (x5361 x4384) (x7379 x4384))))
(assert (= (and (not x7938) x4521) x4847))
(assert (x8665 x3593 x3579 x2012 x4135))
(assert (= (+ 1 (x3649 x5954)) (x3649 (x3789 x5954 1))))
(assert (=> (>= 10000 x6599) (= (x7379 x6599) (x5361 x6599))))
(assert (x391 x6879))
(assert (= (and (not x6340) x1530) x9115))
(assert (x4156 x3579 x3593 x5116 x2012))
(assert (x391 x2105))
(assert (x391 x212))
(assert (x2252 x7448))
(assert (x391 x7288))
(assert (x391 x9148))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3987 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x3987 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x3987 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x3987 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x3987 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x3987 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3987)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3987))) (x8005 1000000000000000000 x3987) (= (x7029 1000000000000000000 x3987) (* 1000000000000000000 x3987)) (x1844 1000000000000000000 x3987) (x7186 1000000000000000000 x3987) (x997 1000000000000000000 x3987) (x1348 1000000000000000000 x3987)))
(assert (= x1026 (or x8519 x7456)))
(assert (x8665 x3593 x3579 x4135 x2012))
(assert (x391 x4427))
(assert (x391 x1869))
(assert (= (and (=> (and (not x4140) (and (= x662 x6440) (= x1244 1))) x1838) (=> (and (and (= x662 x1800) (= x4599 x7848) (= x1649 x8587)) x4140) x1821)) x7405))
(assert (x391 x7647))
(assert (x391 x7367))
(assert (= (and x687 (not x781)) x4798))
(assert (x391 x3338))
(assert (x391 x6546))
(assert (= (x5361 117300739) (x7379 117300739)))
(assert (= x8872 (and (not x7222) x5201)))
(assert (= x6901 (and (not x727) x325)))
(assert (x391 x7491))
(assert (= x7065 (or x5556 x3931)))
(assert (x391 x9018))
(assert (= (and x1518 x1402) x756))
(assert (x4156 x8031 x5766 x7316 x5552))
(assert (= 2929553584 (x3649 (x5361 2929553584))))
(assert (= 44970383829727661923261016617897238973146650624978361361029103362720544063488 (x3649 (x5361 44970383829727661923261016617897238973146650624978361361029103362720544063488))))
(assert (= x6055 (and x4393 x4972)))
(assert (x391 x4135))
(assert (x2252 x5639))
(assert (x391 x3632))
(assert (x391 x178))
(assert (= (and x4577 (not x5665)) x8321))
(assert (=> (<= x7358 10000) (= (x5361 x7358) (x7379 x7358))))
(assert (= x205 (and x2721 x2629)))
(assert (x391 x2035))
(assert (= x1248 (and x2469 x4299)))
(assert (x2252 x3250))
(assert (x391 x8597))
(assert (= (and (not x2122) x1389) x4696))
(assert (x391 x921))
(assert (x391 x7089))
(assert (x6103 (- x7316 x8031)))
(assert (x391 x7207))
(assert (x4191 x940 (- x1726 x3579)))
(assert (= (and x46 x8291) x4067))
(assert (x1052 x3230 x1060))
(assert (x391 x7865))
(assert (= x7389 (=> (and (= 0 x5555) (= x6917 x7119)) x334)))
(assert (x6103 (- x1726 x5390)))
(assert (x6103 x5552))
(assert (x7060 x5924))
(assert (= x8169 (and x5163 x5392)))
(assert (= x3597 (=> (and (= (= 0 x4026) x7877) (or x7877 (not x7877))) x4740)))
(assert (= (and x7985 (not x5537)) x7589))
(assert (x391 x7856))
(assert (= (and x8851 (not x2830)) x2457))
(assert (x8665 x940 x1726 x530 x5390))
(assert (x391 x2310))
(assert (= x2447 (and (not x7615) x3877)))
(assert (x4191 x5766 (- x8031 x1726)))
(assert (x4191 x172 (- x2780 x3593)))
(assert (x2252 x7033))
(assert (x391 x3626))
(assert (x6103 (- x1256 x940)))
(assert (x8665 x490 x774 x530 x5390))
(assert (= x8852 (and (not x8347) x4639)))
(assert (= (and x6405 (not x7767)) x4367))
(assert (x8665 x774 x490 x3579 x3593))
(assert (x391 x3215))
(assert (x391 x2894))
(assert (x6103 x5052))
(assert (= x7557 (and x6113 x4847)))
(assert (x4191 x5552 (- x7316 x2780)))
(assert (x6103 (- x5766 x1726)))
(assert (x391 x8253))
(assert (x391 x240))
(assert (x391 x340))
(assert (= (and (not x5014) x535) x1449))
(assert (x391 x4157))
(assert (x391 x3943))
(assert (x391 x4857))
(assert (x391 x3116))
(assert (x4191 x2012 (- x5116 x2780)))
(assert (= x8764 (or x5760 x5885)))
(assert (=> (<= x1493 10000) (= (x5361 x1493) (x7379 x1493))))
(assert (x391 x550))
(assert (x8637 x505))
(assert (x391 x319))
(assert (= x1996 (x3649 (x7379 x1996))))
(assert (and (x3303 x4804 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4253 x4804 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x4077 x4804 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x4526 x4804 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x4804)) (x5837 x4804 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (=> (<= x3088 10000) (= (x5361 x3088) (x7379 x3088))))
(assert (= x7892 (or x3146 x6813)))
(assert (= x6557 (and x2626 x2509)))
(assert (= x6599 (x3649 (x7379 x6599))))
(assert (= (and (not x3350) x8703) x4123))
(assert (x6103 (- x1726 x5552)))
(assert (= (and x6786 (not x584)) x7688))
(assert (x391 x3538))
(assert (= (or x7230 x6671) x5539))
(assert (x391 x879))
(assert (= (and x8594 x5044) x1561))
(assert (x4156 x9039 x530 x1726 x940))
(assert (x391 x8201))
(assert (= x2309 (and x8988 (not x3032))))
(assert (x391 x8346))
(assert (x8665 x5390 x530 x7316 x5552))
(assert (=> (<= x985 10000) (= (x5361 x985) (x7379 x985))))
(assert (x391 x1892))
(assert (x6103 (- x8031 x4135)))
(assert (x8665 x2012 x5116 x2012 x4135))
(assert (x391 x8933))
(assert (= (and x4446 x2916) x617))
(assert (x391 x5410))
(assert (x391 x6822))
(assert (= (and x2577 (not x80)) x2782))
(assert (= (and x5841 x9137) x3582))
(assert (x391 x2930))
(assert (= (and x185 (not x2720)) x1998))
(assert (x4191 x4135 (- x2012 x7316)))
(assert (x4156 x2780 x172 x7316 x5552))
(assert (= (and x1953 x6236) x4182))
(assert (x391 x4667))
(assert (x4191 x172 (- x1256 x9039)))
(assert (= (and x6452 x5076) x4879))
(assert (x391 x3760))
(assert (= (=> (and (= x2781 x8605) (= x7382 0)) x6077) x3577))
(assert (x4156 x3579 x3593 x2780 x172))
(assert (x7060 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (and (x5662 x1027 1000000000000000000) (x6638 x1027 1000000000000000000) (=> (and (< 0 x1027) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x1027 1000000000000000000)) (- x1027 1000000000000000000)) (>= x1027 (* 1000000000000000000 (x4526 x1027 1000000000000000000))))) (x4068 x1027 1000000000000000000) (x797 x1027 1000000000000000000)))
(assert (x391 x2147))
(assert (x391 x6526))
(assert (x391 x518))
(assert (x4191 x940 (- x1726 x1256)))
(assert (= (and x6707 (not x8310)) x8470))
(assert (x391 x8396))
(assert (= (=> (= (> x1935 x447) x1430) (and (=> (and (and (and (= x8001 4) (= x4429 (= x7848 x8110))) (or (and (and (= x1281 (= x7848 x5049)) (or (and (and (= 405663989 x2536) (= x4406 (x6887 (x7379 x5049))) (= 1 x2709) (< x2536 2217467699) (= x8798 32) (= x5223 10936679508223583803006762266923565500374401145016910147028117655998246682624) (= 4 x2205) (not (< x2536 405663989)) (< 0 x4406) (> 988262939 x2536) (= x8001 x2205) (not (< x2205 4))) x1281) (and (not x1281) (and (and (and (= x6688 405663989) (not (< x6688 405663989)) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x9030) (= x1451 x8001) (not (< x1451 4)) (= x2709 1) (> x4680 0) (= x8798 32) (< x6688 2217467699) (= x4680 (x6887 (x7379 x4633))) (= 4 x1451) (> 988262939 x6688)) x183) (= x183 (= x4633 x7848)))))) (not x4429)) (and (and (not (> 405663989 x2849)) (= 32 x8798) (= x3806 x8001) (= x3531 (x6887 (x7379 x8110))) (< 0 x3531) (not (> 4 x3806)) (> 988262939 x2849) (= x3806 4) (= x2709 1) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x619) (< x2849 2217467699) (= x2849 405663989)) x4429))) x1430) x8314) (=> (and (not x1430) (= x6778 x2533)) x6028))) x3051))
(assert (x391 x4213))
(assert (x391 x1922))
(assert (= x3093 (and x9144 (not x2819))))
(assert (= x8331 (and x7295 (not x4640))))
(assert (= x2375 (and x1326 x6441)))
(assert (= (x3649 (x5361 10936679508223583803006762266923565500374401145016910147028117655998246682624)) 10936679508223583803006762266923565500374401145016910147028117655998246682624))
(assert (= x801 (and (not x7534) x3359)))
(assert (x391 x4255))
(assert (x6103 (- x490 x9039)))
(assert (= x2072 (x3649 (x7379 x2072))))
(assert (= (x3649 (x3789 x8251 1)) (+ 1 (x3649 x8251))))
(assert (x391 x1184))
(assert (x391 x9275))
(assert (x391 x9175))
(assert (= (x3649 (x7379 x7032)) x7032))
(assert (=> (<= x1536 10000) (= (x5361 x1536) (x7379 x1536))))
(assert (= x1986 (and x2670 x215)))
(assert (= x6745 (and x3444 (not x3869))))
(assert (= x2399 (and x3654 (not x5684))))
(assert (= (or x1791 x7435) x1780))
(assert (= (and x2516 x2530) x4949))
(assert (=> (>= 10000 x2765) (= (x7379 x2765) (x5361 x2765))))
(assert (x391 x7119))
(assert (x391 x2536))
(assert (x8637 x1060))
(assert (x391 x7010))
(assert (x391 x2896))
(assert (= x3528 (and (not x5495) x4324)))
(assert (= x1203 (and x3353 (not x1101))))
(assert (= (or x6772 (and x4445 (not x671))) x7861))
(assert (x391 x7577))
(assert (= (and x3750 x8092) x8448))
(assert (x4191 x530 (- x5390 x5766)))
(assert (x6103 (- x774 x5552)))
(assert (x6103 x5390))
(assert (x8665 x3593 x3579 x7316 x5552))
(assert (= (x3649 (x3789 x1709 2)) (+ 2 (x3649 x1709))))
(assert (= x2409 (and x2526 x2028)))
(assert (x391 x3610))
(assert (= (=> (and (or (and (not x6595) (= x2092 (x7158 (x7379 x1735) x7907 0))) (and x6595 (= (x3789 x7907 2) x2719))) (= (= 0 x1735) x6595)) x4658) x7719))
(assert (= x1701 (and (not x1747) x1847)))
(assert (x6103 (- x3593 x1256)))
(assert (= (and x8513 x5152) x6388))
(assert (x6103 (- x2780 x5116)))
(assert (x8637 x5417))
(assert (x391 x2654))
(assert (x391 x1024))
(assert (x391 x867))
(assert (x4191 x5766 (- x8031 x7316)))
(assert (= (=> (and (= x369 (= 0 x6397)) (or (and (not x369) (= x4420 (x7158 (x7379 x6397) x5954 0))) (and x369 (= (x3789 x5954 2) x1186)))) x2749) x7660))
(assert (=> (<= x1340 10000) (= (x5361 x1340) (x7379 x1340))))
(assert (x8665 x774 x490 x1726 x940))
(assert (= x8971 (x3649 (x7379 x8971))))
(assert (= (and x5958 x8829) x5406))
(assert (x391 x2961))
(assert (x391 x3800))
(assert (x391 x5068))
(assert (x391 x7382))
(assert (x6103 (- x5390 x940)))
(assert (x391 x5030))
(assert (= x3683 (and x6247 x6240)))
(assert (x391 x4282))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x589 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x589 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x589 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x589 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x589 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x589 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x589)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x589))) (x8005 1000000000000000000 x589) (= (x7029 1000000000000000000 x589) (* 1000000000000000000 x589)) (x1844 1000000000000000000 x589) (x7186 1000000000000000000 x589) (x997 1000000000000000000 x589) (x1348 1000000000000000000 x589)))
(assert (x391 x268))
(assert (= (and (not x7469) x5959) x8904))
(assert (and (x5662 x3907 1000000000000000000) (x6638 x3907 1000000000000000000) (=> (and (< 0 x3907) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x3907 1000000000000000000)) (- x3907 1000000000000000000)) (>= x3907 (* 1000000000000000000 (x4526 x3907 1000000000000000000))))) (x4068 x3907 1000000000000000000) (x797 x3907 1000000000000000000)))
(assert (x8665 x7316 x5552 x4135 x2012))
(assert (x391 x4661))
(assert (= x8450 (and x540 x5886)))
(assert (x391 x4887))
(assert (= x5807 (and (=> (and (not x8830) (and (= 1 x1573) (= x2727 x5669))) x1149) (=> (and x8830 (and (= x4105 x2727) (= x7848 x8408) (= x8957 x7794))) x7731))))
(assert (= (and x2244 x3536) x8623))
(assert (= x1838 (=> (and (= x4448 (ite (< x1244 x8334) (not (= x6440 0)) (< x1244 x8334))) (or (and (and (or (not x5025) (and x5025 (and (= (x8869 x1189) x4443) (<= x4443 1461501637330902918203684832716283019655932542975) (= (x7158 (x7379 x6440) x8587 0) x1189) (> 1461501637330902918203684832716283019655932542976 x4443) (>= x4443 0)))) (and (> 1461501637330902918203684832716283019655932542976 x6947) (<= 0 x6947) (= (x7124 (- x6440 x6947)) x7689) (= (x1009 x8908) x6947) (<= x6947 1461501637330902918203684832716283019655932542975) (= (< 0 x7689) x5025))) x4448) (and (not x4448) (and (or x894 (and (not x894) (and (<= x5109 1461501637330902918203684832716283019655932542975) (< x5109 1461501637330902918203684832716283019655932542976) (= x3534 (x3789 x8908 1)) (>= x5109 0) (= x5109 (x8097 x3534))))) (and (>= 1461501637330902918203684832716283019655932542975 x6222) (<= 0 x6222) (= (x1009 x8908) x6222) (< x6222 1461501637330902918203684832716283019655932542976) (= (= x6222 0) x894)))))) x7283)))
(assert (x391 x5570))
(assert (=> (>= 10000 x1996) (= (x5361 x1996) (x7379 x1996))))
(assert (x391 x3412))
(assert (= x8988 (and x8623 (not x6562))))
(assert (x391 x4940))
(assert (x391 x734))
(assert (= x3152 x1129))
(assert (= (x3649 (x3789 x6853 1)) (+ 1 (x3649 x6853))))
(assert (= x5036 (and x9070 x1780)))
(assert (x391 x143))
(assert (x1052 x2364 x4439))
(assert (= (and x8140 x1053) x1480))
(assert (= x2976 (=> (and (or (and (not x3515) (= 0 x5077)) (and (= x5077 x1604) x3515)) (and (= x6086 (x7158 (x7379 x7848) (x5361 158) 0)) (= (x7158 (x7379 x7848) (x5361 154) 0) x8237) (= (< x6922 x1604) x3515) (= (x3789 x4196 2) x8916) (= x1604 (x4911 x4366)) (= x954 (x7158 (x7379 x5308) x6086 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2076) (= (x7158 (x7379 x5308) x8237 0) x4196) (<= 0 x2076) (= x9071 (x121 x954)) (= x2669 (x3789 x1158 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6922) (= (x7158 (x7379 x7848) (x5361 155) 0) x8027) (<= x8259 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4366 (x3789 x954 1)) (= x1683 (x7158 (x7379 x5308) x8027 0)) (<= 0 x1604) (<= 0 x8259) (<= 0 x6922) (= (x9217 x8916) x2076) (<= x1604 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3789 x1683 2) x5574) (= (x6996 x5574) x8259) (<= x9071 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x9071 0))) x8155)))
(assert (= (and x2718 (not x183)) x5200))
(assert (= (and x4288 (not x6952)) x540))
(assert (= x1640 (x3649 (x7379 x1640))))
(assert (= x6458 (x3649 (x7379 x6458))))
(assert (= (and x7409 x5301) x9205))
(assert (x391 x3490))
(assert (x391 x6333))
(assert (x391 x4563))
(assert (= (x3649 (x3789 x7426 2)) (+ (x3649 x7426) 2)))
(assert (x391 x9031))
(assert (x4191 x2780 (- x172 x2012)))
(assert (x391 x800))
(assert (= (and (not x2317) x4305) x8912))
(assert (x391 x8089))
(assert (x391 x4471))
(assert (= (=> (and (or (not x8370) x8370) (= x8370 (= 0 x5327))) x4956) x5440))
(assert (= x1277 (and (not x4535) x2166)))
(assert (= (=> (and (= 0 x4907) (= x8240 x1944)) x4037) x3015))
(assert (x391 x3466))
(assert (= x4606 (and x6198 x4409)))
(assert (= x960 (and (not x8443) x3802)))
(assert (= (or x202 x8815 (and x3811 x4704) (and x3364 (not x7170)) (and (not x2823) x6581) (and x6010 x277)) x5453))
(assert (x391 x5150))
(assert (x391 x4238))
(assert (= x8950 (=> (and (= x5234 x6525) (= x8565 x5842)) x5451)))
(assert (= (or x3703 x1134) x2427))
(assert (x391 x3095))
(assert (= x6987 (and x4870 (not x604))))
(assert (= (=> (and (= x2147 x1603) (= x569 x2151)) x6506) x742))
(assert (= x6522 (and x8742 (not x9129))))
(assert (= (=> (and (= x5322 x3521) (= x5285 x5113)) x796) x2235))
(assert (x391 x6760))
(assert (x391 x7025))
(assert (x391 x7312))
(assert (x6103 (- x5116 x8031)))
(assert (x4191 x172 (- x2780 x1726)))
(assert (= (+ 1 (x3649 x6840)) (x3649 (x3789 x6840 1))))
(assert (= (and x360 x5092) x49))
(assert (= x206 (and x9109 x3600)))
(assert (x391 x5090))
(assert (x391 x2858))
(assert (= (and x2776 x7261) x7810))
(assert (x391 x1525))
(assert (= (and x7767 x6405) x486))
(assert (= (and x668 x4970) x6200))
(assert (x4191 x2780 (- x172 x4135)))
(assert (x391 x873))
(assert (x2252 x1536))
(assert (x391 x6379))
(assert (x391 x2805))
(assert (x391 x7732))
(assert (x391 x7956))
(assert (= x8328 (and x5968 (not x7340))))
(assert (= x2390 (and (not x1518) x1402)))
(assert (= x8973 (not (and (= (x3752 x477) x6800) (= x6737 (x7158 (x7379 x5639) x8161 0)) (<= x6800 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x6800) (<= 0 x6800) (= x477 (x3789 x6737 1))))))
(assert (= (x3649 (x7379 x6496)) x6496))
(assert (x391 x5088))
(assert (x391 x3370))
(assert (x391 x2011))
(assert (= x7168 (and x3519 x7998)))
(assert (= x5568 (or x3939 x575)))
(assert (x4191 x4135 (- x2012 x172)))
(assert (= x3173 (and x4829 x2784)))
(assert (= x5782 (and (not x7228) x2616)))
(assert (x391 x8954))
(assert (= (or x8595 (and (not x8174) x3940)) x406))
(assert (= x4477 (and x3505 x1245)))
(assert (x4156 x5552 x7316 x5116 x2012))
(assert (= (+ 1 (x3649 x7692)) (x3649 (x3789 x7692 1))))
(assert (= (=> (= x5284 (= x2856 0)) (and (=> (and (not x5284) (and (= x5307 (x1668 x5034)) (= (x7158 (x7379 x7448) (x5361 161) 0) x5034) (= (< 0 x5307) x1363))) (and (=> (and x1363 (and (>= x7897 0) (> 1461501637330902918203684832716283019655932542976 x7897) (= x7897 (x8560 x3281)) (= x3281 x3245) (= x3245 (x707 x5034 0)) (>= 1461501637330902918203684832716283019655932542975 x7897) (= x2944 (= x7848 x7897)))) (and (=> (and (and (= (> 1 x7856) x3520) (= (x1668 x595) x7856) (= (x7158 (x7379 x7448) (x5361 161) 0) x595)) x2944) (and (=> (and (and (= (= 0 x6968) x7947) (= (x7124 (- x7856 1)) x6968)) (not x3520)) (and (=> x7947 x746) (=> (and (not x7947) (and (= (x7158 (x7379 x7448) (x5361 161) 0) x8669) (= x7324 (x1668 x8669)) (= x5341 (< x6968 x7324)))) (and (=> (and (and (= (> x5597 0) x4568) (<= 0 x9166) (>= 1461501637330902918203684832716283019655932542975 x9166) (= (x8560 x7783) x9166) (> 1461501637330902918203684832716283019655932542976 x9166) (= (x3789 x6785 x6968) x7783) (= (x1668 x5664) x5597) (= (x707 x8669 0) x6785) (= x5664 (x7158 (x7379 x7448) (x5361 161) 0))) x5341) (and (=> x4568 x746) (=> (not x4568) x3950))) (=> (not x5341) x3950))))) (=> x3520 x5477))) (=> (not x2944) x4277))) (=> (not x1363) x5122))) (=> x5284 x1243))) x6499))
(assert (x391 x8349))
(assert (= x7358 (x3649 (x7379 x7358))))
(assert (x391 x5205))
(assert (= x1634 (and x857 (not x3636))))
(assert (x391 x2352))
(assert (= x533 (and x2100 x5396)))
(assert (= x3150 (x3649 (x7379 x3150))))
(assert (x391 x1816))
(assert (= (=> (= x2906 (= x8259 x5077)) (and (=> (and (and (= x3993 x3808) (= x8096 x5308)) x2906) x7341) (=> (and (= x8845 (< 0 x8259)) (not x2906)) (and (=> (and (and (<= x476 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x7462) (= x2588 (x7158 (x7379 x5308) x8027 0)) (= (= x7130 0) x3693) (>= x7462 0) (> 1461501637330902918203684832716283019655932542976 x476) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7130) (= (x7499 x2588) x7462) (>= x476 0) (= x7232 (x3789 x2588 1)) (<= 0 x7130) (= (x3789 x7232 1) x7193) (= (x2125 (+ 96 x3808)) x7996) (= (x2847 x7232) x476) (= x7130 (x6996 x7193)) (<= x7462 1461501637330902918203684832716283019655932542975)) x8845) (and (=> (and (not x3693) (and (or (and x3090 (= (x3789 x8027 1) x7353)) (and (and (= x905 (x3789 x5915 1)) (= (x7158 (x7379 x7462) x8027 0) x5915)) (not x3090))) (= (= x7462 0) x3090))) x3522) (=> x3693 x6133))) (=> (and (and (= x3808 x1588) (= x4608 x5308)) (not x8845)) x6762))))) x8155))
(assert (= (and x5373 (not x9092)) x6706))
(assert (= (or (and x501 (not x3735)) x8781) x3210))
(assert (x8665 x3593 x3579 x172 x2780))
(assert (x6103 (- x2780 x1726)))
(assert (x391 x230))
(assert (= x3460 (=> (= x7801 (= x7285 x9199)) (and (=> (and (= (< 0 x9199) x3416) (not x7801)) (and (=> (and (not x3416) (and (= x7413 x7297) (= x863 x1226))) x6225) (=> (and (and (<= 0 x7470) (<= x4383 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x7470) (= x7470 (x1606 x5348)) (<= x7470 1461501637330902918203684832716283019655932542975) (< x4383 1461501637330902918203684832716283019655932542976) (= (x3789 x6649 1) x5348) (= x688 (x3789 x5348 1)) (= x4383 (x3717 x6649)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4162) (>= x4383 0) (= x5672 (x2125 (+ x863 96))) (<= 0 x4162) (= (x7158 (x7379 x5430) x6992 0) x6649) (= (x4522 x688) x4162) (= x5855 (= 0 x4162))) x3416) (and (=> (and (and (or (and (not x6636) (and (= (x3789 x6730 1) x4504) (= (x7158 (x7379 x4383) x6992 0) x6730))) (and (= (x3789 x6992 1) x7735) x6636)) (= x6636 (= x4383 0))) (not x5855)) x4885) (=> x5855 x3533))))) (=> (and x7801 (and (= x1394 x7413) (= x863 x6490))) x2686)))))
(assert (x391 x4005))
(assert (= x5559 (and x2662 (not x2445))))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7525))
(assert (x391 x8687))
(assert (= (x3649 (x3789 x1534 1)) (+ 1 (x3649 x1534))))
(assert (x391 x5136))
(assert (x391 x6713))
(assert (= x2636 (and x5264 x3319)))
(assert (x6103 (- x5390 x9039)))
(assert (= (or x3232 x5040) x1776))
(assert (x391 x3198))
(assert (= (or x206 (and x3600 (not x9109))) x7573))
(assert (x2624 x1484 x1420))
(assert (x391 x2213))
(assert (x6103 (- x2012 x2780)))
(assert (x4191 x3593 (- x3579 x1256)))
(assert (x391 x8393))
(assert (x391 x5296))
(assert (= x2111 (x3649 (x7379 x2111))))
(assert (= x3257 (and x4173 (not x5904))))
(assert (x391 x3725))
(assert (= (or x2438 x7781) x3057))
(assert (x391 x1249))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x7661 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x7661 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x7661 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x7661 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x7661 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x7661 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x7661)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x7661))) (x8005 1000000000000000000 x7661) (= (x7029 1000000000000000000 x7661) (* 1000000000000000000 x7661)) (x1844 1000000000000000000 x7661) (x7186 1000000000000000000 x7661) (x997 1000000000000000000 x7661) (x1348 1000000000000000000 x7661)))
(assert (= (and (=> (and (not x4402) (= x4402 x3151)) x207) (=> (and x4402 (= (< x3967 x4139) x945)) (and (=> x945 x55) (=> (and (not x945) (and (= x3151 (< x6072 x230)) (= x6072 (x7124 (- x3967 x4139))))) x207)))) x5182))
(assert (x4156 x3579 x3593 x9039 x530))
(assert (= x3040 (or x5258 x2408)))
(assert (x391 x4946))
(assert (x391 x4783))
(assert (x391 x7287))
(assert (x391 x8745))
(assert (x8665 x940 x1726 x2012 x5116))
(assert (=> (>= 10000 x7462) (= (x7379 x7462) (x5361 x7462))))
(assert (not x6085))
(assert (= x4305 (and (not x4078) x3306)))
(assert (= x917 (x3649 (x7379 x917))))
(assert (x391 x365))
(assert (x8665 x530 x5390 x3593 x3579))
(assert (x2624 x1669 x530))
(assert (x2252 x9164))
(assert (x7060 x3199))
(assert (= x3020 (=> (and (= x3119 x5327) (= x412 x7205)) x5440)))
(assert (= (and x3645 (not x395)) x5427))
(assert (= x7495 (and (not x641) x6053)))
(assert (= (and x5462 x3945) x2758))
(assert (x391 x9058))
(assert (= x154 (or (and (not x1289) x5900) (and x2465 x4894) x2744 (and x4544 x1977) x2303 (and x1291 (not x1932)))))
(assert (= (and (not x3732) x7906) x8802))
(assert (x391 x4207))
(assert (x391 x2389))
(assert (= (and x943 (not x8830)) x3684))
(assert (= x1264 (and x2326 x287)))
(assert (x2252 x3374))
(assert (= (+ 1 (x3649 x8908)) (x3649 (x3789 x8908 1))))
(assert (x4191 x530 (- x9039 x1726)))
(assert (= x1446 (and x9228 x733)))
(assert (= (and (not x8536) x5491) x5663))
(assert (x391 x2919))
(assert (x391 x3512))
(assert (x4156 x490 x774 x4135 x2012))
(assert (x391 x2691))
(assert (= (and x1847 x1747) x7099))
(assert (= x771 (and x8912 (not x5038))))
(assert (x4156 x5766 x8031 x3593 x3579))
(assert (= x4941 (and x1642 x5715)))
(assert (x4191 x172 (- x2780 x940)))
(assert (x4191 x3579 (- x3593 x1256)))
(assert (= x3513 (and x4011 x7939)))
(assert (= (and (not x3859) x7914) x8544))
(assert (x391 x7415))
(assert (= (x3649 (x3789 x6376 1)) (+ 1 (x3649 x6376))))
(assert (and (x5662 x6248 1000000000000000000) (x6638 x6248 1000000000000000000) (=> (and (< 0 x6248) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x6248 1000000000000000000)) (- x6248 1000000000000000000)) (>= x6248 (* 1000000000000000000 (x4526 x6248 1000000000000000000))))) (x4068 x6248 1000000000000000000) (x797 x6248 1000000000000000000)))
(assert (x391 x2045))
(assert (= (and (not x1283) x3093) x8814))
(assert (x391 x647))
(assert (= (and x3560 x5714) x8602))
(assert (= (x3649 (x7379 x3265)) x3265))
(assert (= (x3649 (x7379 x2693)) x2693))
(assert (= (or x3872 x6476) x1467))
(assert (= x5872 (x3649 (x7379 x5872))))
(assert (x391 x7370))
(assert (= (+ (x3649 x8957) 2) (x3649 (x3789 x8957 2))))
(assert (x391 x6884))
(assert (x2624 x5975 x2012))
(assert (x391 x179))
(assert (= (and (not x7940) x5511) x5426))
(assert (x391 x2499))
(assert (x4156 x5766 x8031 x1256 x172))
(assert (= (and (not x1162) x1612) x267))
(assert (x391 x3769))
(assert (= x2739 (=> (= (= x2729 x115) x2501) (and (=> (and (= (< 0 x2729) x3536) (not x2501)) (and (=> (and (and (= (x7158 (x7379 x7448) x7907 0) x1452) (= x7453 (x3789 x1596 1)) (<= x1735 1461501637330902918203684832716283019655932542975) (< x5290 1461501637330902918203684832716283019655932542976) (>= x6191 0) (= x5290 (x5951 x1452)) (= x6191 (x388 x7453)) (> 1461501637330902918203684832716283019655932542976 x1735) (= x1735 (x7383 x1596)) (<= x5290 1461501637330902918203684832716283019655932542975) (= (= 0 x6191) x6562) (<= 0 x5290) (<= 0 x1735) (<= x6191 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1596 (x3789 x1452 1)) (= (x2125 (+ 96 x1734)) x1321)) x3536) (and (=> x6562 x2322) (=> (and (not x6562) (and (or (and (= x7075 (x3789 x7907 1)) x3032) (and (and (= x6027 (x3789 x2107 1)) (= (x7158 (x7379 x5290) x7907 0) x2107)) (not x3032))) (= (= 0 x5290) x3032))) x7719))) (=> (and (and (= x7448 x18) (= x5777 x1734)) (not x3536)) x7550))) (=> (and x2501 (and (= x6083 x7448) (= x6833 x1734))) x3799)))))
(assert (x391 x7091))
(assert (x391 x1522))
(assert (x391 x695))
(assert (= x6759 (and x6452 (not x5076))))
(assert (x391 x2463))
(assert (= x2792 (and x4975 (not x5347))))
(assert (= x4407 (and x4983 x8601)))
(assert (x8665 x172 x1256 x172 x2780))
(assert (= x4110 (and (not x769) x8054)))
(assert (x391 x6401))
(assert (x4191 x7316 (- x5552 x1726)))
(assert (x391 x1644))
(assert (x391 x4611))
(assert (= x4218 (=> (= true x847) x4020)))
(assert (x391 x4428))
(assert (= x1129 (=> (= x847 true) x4020)))
(assert (x391 x6045))
(assert (= x4080 (and (not x2586) x1927)))
(assert (=> (>= 10000 x1353) (= (x5361 x1353) (x7379 x1353))))
(assert (x391 x440))
(assert (= (and x2413 (not x2906)) x457))
(assert (= (=> (and (or (not x5333) x5333) (= (= 0 x3366) x5333)) x203) x1343))
(assert (= (and x4094 (not x841)) x1032))
(assert (x391 x5953))
(assert (x391 x6362))
(assert (x391 x3930))
(assert (x4156 x9039 x530 x8031 x5766))
(assert (x391 x3241))
(assert (x391 x7406))
(assert (= (+ (x3649 x6286) 1) (x3649 (x3789 x6286 1))))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x1372 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x1372 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x1372 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x1372 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x1372 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1372)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1372))) (x8005 1000000000000000000 x1372) (= (x7029 1000000000000000000 x1372) (* 1000000000000000000 x1372)) (x1844 1000000000000000000 x1372) (x7186 1000000000000000000 x1372) (x997 1000000000000000000 x1372) (x1348 1000000000000000000 x1372)))
(assert (x391 x2510))
(assert (= x1297 (and x7717 x7513)))
(assert (x8665 x774 x490 x2012 x5116))
(assert (= (=> (= x8921 (= x3919 0)) (and (=> (and (and (= (x2237 115792089237316195423570985008687907853269984665640564039457584007913129639904 x134) x4826) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8774) true) (< x8774 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x8774)) x6729) (= x134 (x2125 (+ 31 x8774))) (= (x2125 (+ x4826 516)) x8270)) (not x8921)) (and (=> (and (not x6729) (and (= x5552 (x5976 516)) (= x2149 (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7316)) (= x8542 (ite (not x1768) 1 0)) (= x5622 (ite (> x5552 x2149) 1 0)) (= x8797 (x2237 x8542 x5622)) (= x1768 (= x7316 0)) (= (= x8797 0) x2))) (and (=> (not x2) x5477) (=> (and x2 (and (= x8204 (= x8801 0)) (= x3579 (x4153 x4036)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3579) (= (ite (not x889) 1 0) x1406) (<= 0 x3579) (= (x4526 x489 1000000000000000000) x222) (= x489 (x5353 (x7029 x7316 x5552))) (= x2359 (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3593)) (= x6461 (ite (< x2359 x3579) 1 0)) (= x889 (= x3593 0)) (= x8801 (x2237 x1406 x6461)) (= x4036 (x7158 (x7379 x7848) (x5361 165) 0)))) (and (=> (not x8204) x5477) (=> (and x8204 (and (= (x5353 (x7029 x3593 x3579)) x2750) (= x4308 (x4526 x2750 1000000000000000000)) (= x6459 (x7124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x222))) (= (> x4308 x6459) x560))) (and (=> (and (and (<= x1773 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1773 (x3981 x5286)) (= x8766 (x7124 (- x1773 x7057))) (<= 0 x1773) (= x5347 (< 0 x8766)) (= (x2125 (+ x4308 x222)) x5483) (= x7902 (ite (> x9230 x5483) x5483 x2001)) (= (x7158 (x7379 x7448) (x5361 178) 0) x5286)) (not x560)) (and (=> (not x5347) x2322) (=> (and (and (<= x478 1461501637330902918203684832716283019655932542975) (< x478 1461501637330902918203684832716283019655932542976) (= x8244 (x7124 (- x7848 x478))) (= (> x8244 0) x237) (<= 0 x478)) x5347) (and (=> (and (and (or (and (not x5076) (and (= x467 (= x5049 x7848)) (or (and (not x467) (and (and (and (not (= 1856199391 x8522)) (= x4264 1) (not (< x4021 4)) (not (= x8522 1857877511)) (< 0 x795) (= x4021 4) (= x795 (x6887 (x7379 x4633))) (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x1206) (= 32 x3655) (= x8522 1865448899) (= x4021 x7363) (> 2217467699 x8522) (>= 1461501637330902918203684832716283019655932542975 x1062) (<= 0 x1062) (< x1062 1461501637330902918203684832716283019655932542976) (not (< x8522 1856199391)) (not (< x8522 988262939))) x4734) (= x4734 (= x4633 x7848)))) (and (and (>= x3921 0) (< x4386 2217467699) (not (> 988262939 x4386)) (= x4386 1865448899) (not (< x4386 1856199391)) (= x1440 (x6887 (x7379 x5049))) (= x7363 x4372) (<= x3921 1461501637330902918203684832716283019655932542975) (not (= x4386 1857877511)) (= 1 x4264) (not (= 1856199391 x4386)) (= 32 x3655) (> 1461501637330902918203684832716283019655932542976 x3921) (= x8509 50292402827334880472107169365697159231523039388532301717704428044325102813184) (= x4372 4) (> x1440 0) (not (> 4 x4372))) x467)))) (and x5076 (and (not (= x8112 1857877511)) (>= x5759 0) (>= 1461501637330902918203684832716283019655932542975 x5759) (= x4900 50292402827334880472107169365697159231523039388532301717704428044325102813184) (= 32 x3655) (= x3411 4) (not (> 1856199391 x8112)) (< x8112 2217467699) (not (= 1856199391 x8112)) (= (x6887 (x7379 x8110)) x7007) (= x3411 x7363) (> 1461501637330902918203684832716283019655932542976 x5759) (= 1 x4264) (not (> 4 x3411)) (not (> 988262939 x8112)) (< 0 x7007) (= 1865448899 x8112)))) (and (= (= x8110 x7848) x5076) (= x7363 4))) x237) x3316) (=> (and (not x237) (and (= x3778 x8270) (= x1767 x5229) (< x5229 1461501637330902918203684832716283019655932542976) (>= x5229 0) (>= 1461501637330902918203684832716283019655932542975 x5229))) x4777))))) (=> x560 x5477))))))) (=> (and x6729 (= x847 true)) x4020))) (=> x8921 x2322))) x5852))
(assert (x391 x6351))
(assert (= x8410 (and x1974 (not x8255))))
(assert (x7060 x4092))
(assert (x391 x6439))
(assert (x8665 x9039 x530 x2012 x5116))
(assert (= (=> (and (= x350 x6250) (= x6546 x6034)) x3092) x8934))
(assert (= x315 (and x3880 x3)))
(assert (x7060 x9210))
(assert (x391 x4860))
(assert (= x6040 (and x6 x3776)))
(assert (= (and x7170 x3364) x6581))
(assert (= (and x4533 x1859) x3679))
(assert (= x9162 (and (not x3644) x7117)))
(assert (x391 x932))
(assert (= x643 (and x4469 x3278)))
(assert (x8665 x774 x490 x2012 x4135))
(assert (x4191 x5116 (- x2012 x5390)))
(assert (= x7058 (and x7945 (not x2783))))
(assert (and (x5662 x6685 1000000000000000000) (x6638 x6685 1000000000000000000) (=> (and (< 0 x6685) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x6685 1000000000000000000)) (- x6685 1000000000000000000)) (>= x6685 (* 1000000000000000000 (x4526 x6685 1000000000000000000))))) (x4068 x6685 1000000000000000000) (x797 x6685 1000000000000000000)))
(assert (= (and x4697 x1280) x4541))
(assert (= (x3649 (x7379 x2004)) x2004))
(assert (x391 x6242))
(assert (= x1782 (and (not x7404) x8656)))
(assert (= x475 (and x1404 x5988)))
(assert (x391 x5169))
(assert (x391 x7548))
(assert (x2252 x8552))
(assert (= x2751 (and (not x5971) x4514)))
(assert (x391 x2027))
(assert (= x3677 (or x973 x1491)))
(assert (x391 x5326))
(assert (x4191 x5766 (- x8031 x2780)))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x490))
(assert (= (and x1363 x264) x7839))
(assert (and (x5662 x7173 1000000000000000000) (x6638 x7173 1000000000000000000) (=> (and (< 0 x7173) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x7173 1000000000000000000)) (- x7173 1000000000000000000)) (>= x7173 (* 1000000000000000000 (x4526 x7173 1000000000000000000))))) (x4068 x7173 1000000000000000000) (x797 x7173 1000000000000000000)))
(assert (x8665 x1256 x172 x172 x2780))
(assert (= (x3649 (x7379 x7833)) x7833))
(assert (= x2713 (x3649 (x7379 x2713))))
(assert (= x1929 (or x159 x556)))
(assert (x391 x2132))
(assert (= (=> (= x1881 (= 0 x1687)) (and (=> x1881 x2461) (=> (and (= x6145 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6268) (and (= true (<= x6268 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x6268)))) (not x1881)) (and (=> (and (and (= x7931 1) (= x7859 32)) (not x6145)) x5397) (=> x6145 x2461))))) x5578))
(assert (= (x3649 (x7379 x5308)) x5308))
(assert (= x7649 (and x2224 x6667)))
(assert (= (and x2244 (not x3536)) x1259))
(assert (x391 x8199))
(assert (x2252 x4633))
(assert (x7060 x4677))
(assert (x8665 x2780 x172 x1726 x940))
(assert (= x4935 (or (and x4513 (not x8848)) x2025 (and x52 x978) (and x2222 x8667) (and (not x8983) x2573) x4182)))
(assert (x391 x579))
(assert (x391 x2873))
(assert (x2252 x2493))
(assert (x391 x1753))
(assert (= x1028 (and x5125 x2022)))
(assert (x391 x5913))
(assert (x391 x8953))
(assert (= (and x1056 x8705) x4413))
(assert (= x2553 (and x6753 x4168)))
(assert (= x3791 (=> (and (or x2327 (not x2327)) (= (= x5097 0) x2327)) x1739)))
(assert (x391 x2159))
(assert (x8637 x4743))
(assert (= x7805 (and (not x4210) x1724)))
(assert (x4156 x7316 x5552 x8031 x5766))
(assert (= x3898 (and (not x7096) x3568)))
(assert (= (=> (and (<= x8900 1461501637330902918203684832716283019655932542975) (= x3732 (= x8900 0)) (<= 0 x8900) (< x8900 1461501637330902918203684832716283019655932542976)) (and (=> (and (not x3732) (and (= x4648 (x6887 (x7379 x8900))) (>= x8900 0) (= x4691 (x2125 (+ 32 x3469))) (= x5528 (= x4648 0)) (< x8900 1461501637330902918203684832716283019655932542976) (= (x2125 (+ 32 x4691)) x7291) (>= 1461501637330902918203684832716283019655932542975 x8900) (= x3469 (x2125 (+ x8583 4))))) (and (=> x5528 x7225) (=> (and (< x2812 4294967296) (not x5528)) x1020))) (=> x3732 x1020))) x1965))
(assert (= (x3649 (x7379 x6372)) x6372))
(assert (= (and x8395 (not x5058)) x6892))
(assert (= x8409 (and x152 x5539)))
(assert (= x6883 (and x875 (not x7054))))
(assert (x8665 x172 x1256 x530 x5390))
(assert (x391 x577))
(assert (x391 x610))
(assert (x8665 x1256 x172 x5390 x530))
(assert (=> (<= x6495 10000) (= (x7379 x6495) (x5361 x6495))))
(assert (x391 x3305))
(assert (= (or x1390 x2704) x6052))
(assert (= (x3649 (x7379 x1353)) x1353))
(assert (x4191 x5116 (- x2012 x3593)))
(assert (x8665 x3579 x3593 x2780 x172))
(assert (x391 x1116))
(assert (x6103 (- x1726 x2780)))
(assert (= x8780 (and x8960 x739)))
(assert (= x8713 (or x4240 x1472)))
(assert (= x4128 (and x125 (not x8437))))
(assert (x8637 x7089))
(assert (x391 x3768))
(assert (x4191 x2012 (- x5116 x940)))
(assert (x8665 x1726 x940 x490 x774))
(assert (= (and x1974 x8255) x1812))
(assert (= (and x682 (not x7081)) x8841))
(assert (x391 x8032))
(assert (x391 x2709))
(assert (= (+ (x3649 x4111) 1) (x3649 (x3789 x4111 1))))
(assert (= (=> (and (= (x3789 x3832 1) x4918) (= (x7158 (x7379 x7448) x7907 0) x3832) (= (x3789 x4918 1) x1469) (= x7448 x18) (= x5777 x1321)) x7550) x4658))
(assert (x8665 x3593 x3579 x490 x774))
(assert (x391 x3514))
(assert (= (x3649 (x3789 x4431 2)) (+ (x3649 x4431) 2)))
(assert (= (and (not x8688) x4080) x3014))
(assert (x391 x5077))
(assert (x4191 x774 (- x490 x8031)))
(assert (= (and x7792 x5468) x8521))
(assert (x8665 x4135 x2012 x3593 x3579))
(assert (= x1418 (and (not x3728) x446)))
(assert (x391 x8219))
(assert (x391 x2015))
(assert (= x6090 (and (not x3693) x1230)))
(assert (x391 x1440))
(assert (= x976 (and x165 x5132)))
(assert (= x5629 (and x5337 x8763)))
(assert (x391 x6843))
(assert (x391 x1951))
(assert (= (or x8965 x1361 x597) x5484))
(assert (= (x3649 (x5361 3047081080)) 3047081080))
(assert (x4191 x940 (- x1726 x530)))
(assert (= (=> (and (= x3722 x7365) (= x5722 x5097)) x3791) x2091))
(assert (x4156 x1726 x940 x8031 x5766))
(assert (x391 x1083))
(assert (x4191 x3593 (- x3579 x1726)))
(assert (=> (>= 10000 x759) (= (x7379 x759) (x5361 x759))))
(assert (x4156 x490 x774 x5390 x530))
(assert (=> (>= 10000 x6372) (= (x5361 x6372) (x7379 x6372))))
(assert (x8665 x3579 x3593 x2012 x4135))
(assert (= (and x2133 x6234) x1178))
(assert (x6103 (- x3593 x490)))
(assert (x391 x4162))
(assert (x391 x8112))
(assert (x391 x7171))
(assert (x6103 (- x8031 x940)))
(assert (x391 x1037))
(assert (= (or x8875 x486) x3141))
(assert (= x2568 (and x1654 (not x5263))))
(assert (=> (>= 10000 x3112) (= (x5361 x3112) (x7379 x3112))))
(assert (x391 x288))
(assert (= (+ (x3649 x6628) 1) (x3649 (x3789 x6628 1))))
(assert (= x6775 (=> (and (= x3274 x4485) (= x8012 x5071)) x5272)))
(assert (=> (>= 10000 x3953) (= (x7379 x3953) (x5361 x3953))))
(assert (x391 x8401))
(assert (x4156 x530 x9039 x490 x774))
(assert (= (and (not x5611) x5896) x322))
(assert (x6103 (- x1256 x2012)))
(assert (and (x3303 x7512 32) (x4253 x7512 32) (=> (< 0 32) (= (+ (x4077 x7512 32) (* (x4526 x7512 32) 32)) x7512)) (x5837 x7512 32)))
(assert (x391 x6614))
(assert (x391 x6044))
(assert (= x2484 (and x5624 x49)))
(assert (x391 x5512))
(assert (= x9027 (and x7582 x3599)))
(assert (x4191 x3593 (- x3579 x530)))
(assert (= (or x2470 x7995) x543))
(assert (x391 x6359))
(assert (= x7985 (and x5586 (not x3746))))
(assert (= (and (not x9040) x4209) x8633))
(assert (x8665 x5552 x7316 x8031 x5766))
(assert (x4156 x5552 x7316 x1256 x172))
(assert (x391 x6000))
(assert (= (and x6548 x4773) x2234))
(assert (x391 x2997))
(assert (and (x5662 x7255 1000000000000000000) (x6638 x7255 1000000000000000000) (=> (and (< 0 x7255) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x7255 1000000000000000000)) (- x7255 1000000000000000000)) (>= x7255 (* 1000000000000000000 (x4526 x7255 1000000000000000000))))) (x4068 x7255 1000000000000000000) (x797 x7255 1000000000000000000)))
(assert (x391 x8119))
(assert (x2252 x5123))
(assert (x391 x8892))
(assert (= (=> (= (= x8447 0) x1246) (and (=> x1246 x2322) (=> (and (not x1246) (and (= (x2125 (+ x3933 x8997)) x1734) (= (x2125 (+ 31 x233)) x4804) (= x3852 (or (and (> 32 x233) (= (<= x233 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x233))) (= x3933 (x2237 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4804)))) (and (=> (and (not x3852) (and (= x2385 (x3789 x963 1)) (= (x7158 (x7379 x7848) (x5361 159) 0) x3710) (= x2012 (x3535 x8997)) (>= x5116 0) (= (< 0 x5116) x6281) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5116) (= (x7158 (x7379 x7448) x3710 0) x963) (= (x3396 x2385) x5116))) (and (=> (and (and (= x2703 0) (= x5393 x7902)) (not x6281)) x5888) (=> (and (and (= x5431 (ite (< x2715 x2012) 1 0)) (= x7223 (= x8239 0)) (= x2715 (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5116)) (= x5983 (= x5116 0)) (= (ite (not x5983) 1 0) x3130) (= (x2237 x3130 x5431) x8239)) x6281) (and (=> (not x7223) x5477) (=> (and x7223 (and (= x5875 (x5353 (x7029 x5116 x2012))) (= (< x7902 x1890) x3344) (= (x4526 x5875 1000000000000000000) x1890))) (and (=> (and (not x3344) (= x6263 (< x7902 x1890))) (and (=> (and (not x6263) (and (= (x7124 (- x7902 x1890)) x6511) (= x5393 x6511) (= x2703 x1890))) x5888) (=> x6263 x5477))) (=> (and (and (= x2623 (= (ite x6409 1 0) 0)) (= (> x7902 115792089237316195423570985008687907853269984665640564039457) x6409)) x3344) (and (=> (and x2623 (and (= x2668 (= 0 x2376)) (= (ite (not x3222) 1 0) x1016) (= (x4526 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2973) x5141) (= (x5353 (* 1000000000000000000 x7902)) x2973) (= x3222 (= x2973 0)) (= (x2237 x1016 x7605) x2376) (= x7605 (ite (< x5141 1000000000000000000) 1 0)))) (and (=> (and x2668 (and (= (x5353 (* 1000000000000000000 x2973)) x8844) (= x8862 (> x2012 0)))) (and (=> (and x8862 (and (= (x4526 x4092 1000000000000000000) x3614) (= (> x8444 x3647) x2670) (= (ite (< x5116 x3614) x5116 x3614) x8444) (>= x3647 0) (= (x4526 x8844 x2012) x4092) (= (x3396 x2385) x3647) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3647))) (and (=> x2670 x5477) (=> (and (not x2670) (and (or (and (= x115 0) (not x3697)) (and x3697 (= x948 x115))) (and (= (x7158 (x7379 x7848) (x5361 157) 0) x7907) (= x2628 (x7158 (x7379 x7448) x7907 0)) (<= x2729 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x6455 (x7124 (- x3647 x8444))) (= x6656 (x7158 (x7379 x7448) x4654 0)) (<= 0 x2729) (= (x7158 (x7379 x7848) (x5361 159) 0) x9087) (= x4654 (x7158 (x7379 x7848) (x5361 156) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7105) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x948) (>= x3079 0) (= (x789 x6882) x7105) (= x9204 (x3789 x8364 1)) (<= 0 x7105) (<= 0 x948) (<= x3079 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1568 x9204) x948) (>= x6922 0) (= (x5324 x8364) x3079) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6922) (= x2729 (x388 x6446)) (= (x3789 x2628 2) x6446) (= x6882 (x3789 x6656 2)) (= x8364 (x7158 (x7379 x7448) x9087 0)) (= (> x948 x6922) x3697)))) x2739))) (=> (not x8862) x1129))) (=> (not x2668) x5477))) (=> (not x2623) x5477))))))))) (=> (and x3852 (= true x847)) x4020))))) x7475))
(assert (= (x5361 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x7379 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x391 x2911))
(assert (x7060 x5766))
(assert (x2252 x4105))
(assert (= (x3649 (x5361 1000000000000000000)) 1000000000000000000))
(assert (= (and x9083 x8085) x7798))
(assert (x391 x2179))
(assert (x391 x525))
(assert (= (and x7290 x1398) x798))
(assert (x391 x3470))
(assert (x391 x4715))
(assert (= x3132 (not (and (<= 0 x4742) (< x4742 1461501637330902918203684832716283019655932542976) (= (x3789 x2648 1) x1984) (= (x147 x1984) x4742) (>= 1461501637330902918203684832716283019655932542975 x4742) (= (x7158 (x7379 x180) x7907 0) x2648)))))
(assert (= (=> (and (or (and (not x8710) (and (and (= (x1855 x831) x3766) (< x3766 1461501637330902918203684832716283019655932542976) (= x21 (= x3766 0)) (<= 0 x3766) (>= 1461501637330902918203684832716283019655932542975 x3766)) (or (and x21 (and (= (x3789 x2608 1) x3576) (= x5430 x4711) (= x8388 (x3789 x831 1)) (= x4700 (x7158 (x7379 x5430) x6992 0)) (= x2608 (x3789 x4700 1)) (= (x2125 (+ x1226 96)) x7937) (= x2832 x7937))) (and (and (= x2693 (x4242 x6701)) (>= x2693 0) (= x2410 (x2125 (+ 96 x1226))) (= x6701 (x3789 x831 1)) (= x6555 (x3789 x683 1)) (= (x3789 x7521 1) x6081) (< x2693 1461501637330902918203684832716283019655932542976) (= x2410 x2832) (= x4711 x2693) (= (x3789 x3307 1) x683) (= (x7158 (x7379 x2693) x6992 0) x7521) (= (x7158 (x7379 x5430) x6992 0) x3307) (<= x2693 1461501637330902918203684832716283019655932542975)) (not x21))))) (and x8710 (and (and (<= x327 1461501637330902918203684832716283019655932542975) (= (x7124 (- x3265 x327)) x8923) (= (< 0 x8923) x651) (= x327 (x1855 x831)) (>= x327 0) (> 1461501637330902918203684832716283019655932542976 x327)) (or (and (and (= x3265 x4711) (= (x7158 (x7379 x3265) x6992 0) x1805) (= x3334 x2832) (= (x3789 x7692 1) x2116) (= (x7158 (x7379 x5430) x6992 0) x4973) (= (x2125 (+ 96 x1226)) x3334) (= x7692 (x3789 x4973 1))) (not x651)) (and (and (= x8728 (x7158 (x7379 x3265) x6992 0)) (>= 1461501637330902918203684832716283019655932542975 x1384) (= (x7158 (x7379 x1384) x6992 0) x5420) (= (x2125 (+ 96 x1226)) x7416) (>= x1384 0) (= x5717 (x7158 (x7379 x5430) x6992 0)) (= (x3789 x5420 1) x9158) (= x4149 (x7158 (x7379 x3265) x6992 0)) (= x2522 (x3789 x6681 1)) (> 1461501637330902918203684832716283019655932542976 x1384) (= (x3789 x5717 1) x6681) (= x2832 x7416) (= x3265 x4711) (= (x817 x4149) x1384)) x651))))) (= x8710 (ite (< x2128 x8334) (not (= 0 x3265)) (> x8334 x2128)))) x8182) x3985))
(assert (= x3323 (and x3714 (not x1711))))
(assert (= x1111 (and x780 x3934)))
(assert (= x7925 (and x293 x8456)))
(assert (x7060 x6804))
(assert (= (+ 2 (x3649 x8587)) (x3649 (x3789 x8587 2))))
(assert (x2252 x2354))
(assert (x391 x6968))
(assert (= x2123 (and x8655 x578)))
(assert (= x2322 x3876))
(assert (= (and x2770 (not x5372)) x8384))
(assert (x391 x4804))
(assert (x6103 (- x3593 x7316)))
(assert (= x4699 (and x8876 x5365)))
(assert (x2252 x1512))
(assert (x391 x4775))
(assert (x8665 x172 x1256 x5390 x530))
(assert (x8637 x3795))
(assert (= (or x1697 x9186 x4039 x7598 x1187 x6768) x5799))
(assert (x391 x5699))
(assert (= (x3649 (x3789 x1520 2)) (+ 2 (x3649 x1520))))
(assert (x7060 x6685))
(assert (= x28 (and x8967 x1958)))
(assert (= x1475 (and x7798 (not x8855))))
(assert (x8665 x7316 x5552 x530 x9039))
(assert (x391 x6084))
(assert (= (and (not x5841) x9137) x8173))
(assert (x391 x1335))
(assert (x391 x7200))
(assert (x4191 x530 (- x9039 x5116)))
(assert (= (x3649 (x5361 3842108676)) 3842108676))
(assert (x8665 x5390 x530 x490 x774))
(assert (x391 x736))
(assert (x4156 x7316 x5552 x5116 x2012))
(assert (x391 x9091))
(assert (x8665 x1726 x940 x2012 x5116))
(assert (x391 x3896))
(assert (= (and (not x8829) x5958) x5078))
(assert (x391 x6414))
(assert (x4156 x172 x1256 x7316 x5552))
(assert (x4191 x5116 (- x2012 x172)))
(assert (x391 x2878))
(assert (x391 x8779))
(assert (x391 x4844))
(assert (x391 x8676))
(assert (x4191 x3593 (- x3579 x490)))
(assert (x391 x6492))
(assert (x4156 x5116 x2012 x8031 x5766))
(assert (= x6719 (=> (and (= x319 0) (= x7693 x2190)) x6934)))
(assert (and (x3303 x736 32) (x4253 x736 32) (=> (< 0 32) (= (+ (x4077 x736 32) (* (x4526 x736 32) 32)) x736)) (x5837 x736 32)))
(assert (= (and (not x6596) x861) x5516))
(assert (= x7631 (and x402 x7388)))
(assert (x8665 x5116 x2012 x1256 x172))
(assert (x2252 x5872))
(assert (=> (>= 10000 x1640) (= (x5361 x1640) (x7379 x1640))))
(assert (x8665 x172 x1256 x5552 x7316))
(assert (= (and x5455 (not x6375)) x4373))
(assert (x391 x1975))
(assert (= (and (not x5025) x5413) x5761))
(assert (= (or x7549 x747 x7669 x3024) x4781))
(assert (x391 x5075))
(assert (x391 x8066))
(assert (x391 x7068))
(assert (x4191 x8031 (- x5766 x4135)))
(assert (x391 x2217))
(assert (x6103 (- x172 x4135)))
(assert (x391 x598))
(assert (= (+ 2 (x3649 x3954)) (x3649 (x3789 x3954 2))))
(assert (x4191 x7316 (- x5552 x2012)))
(assert (x391 x3974))
(assert (x391 x6688))
(assert (x4191 x530 (- x5390 x3579)))
(assert (= (and (not x6078) x2145) x5336))
(assert (x391 x8096))
(assert (x6103 (- x172 x9039)))
(assert (x391 x4494))
(assert (= (and x6925 (not x3499)) x6654))
(assert (= x6798 (and (not x8628) x8948)))
(assert (x391 x2276))
(assert (= (=> (and (and (= (x3789 x6732 2) x4819) (= x6992 (x7158 (x7379 x7848) (x5361 156) 0)) (= x6732 (x7158 (x7379 x5430) x6992 0)) (= x8476 (x3789 x7960 1)) (= (x3789 x1709 2) x7090) (= (x7158 (x7379 x7848) (x5361 159) 0) x2174) (= x7540 (x2312 x7960)) (= x4844 (x8968 x7090)) (<= 0 x9199) (>= x7540 0) (= x8793 (x7158 (x7379 x7848) (x5361 157) 0)) (<= x9156 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4844) (<= x7540 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6922) (<= x9199 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x9156) (= (x7158 (x7379 x5430) x8793 0) x1709) (= x9156 (x6780 x8476)) (= x9199 (x4522 x4819)) (= x7960 (x7158 (x7379 x5430) x2174 0)) (= (< x6922 x9156) x1567) (<= 0 x6922) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4844)) (or (and (= 0 x6359) (not x1567)) (and (= x6359 x9156) x1567))) x6907) x6207))
(assert (= (and x801 (not x5933)) x5415))
(assert (x391 x4181))
(assert (x391 x3244))
(assert (x391 x1321))
(assert (= (and x2 x163) x6076))
(assert (= x4037 (=> (and (= x412 x1944) (= x4907 x5327)) x5440)))
(assert (x391 x7268))
(assert (x391 x6425))
(assert (x391 x105))
(assert (= x943 (or x2758 x8722)))
(assert (=> (<= x2592 10000) (= (x5361 x2592) (x7379 x2592))))
(assert (= (and x8218 (not x4867)) x5345))
(assert (x391 x2072))
(assert (= x29 (and x4765 x7346)))
(assert (x391 x1591))
(assert (x391 x6886))
(assert (x391 x466))
(assert (x391 x7157))
(assert (x391 x151))
(assert (= x1094 (or x5593 x7667)))
(assert (= (and x676 x3333) x5332))
(assert (x7060 x2780))
(assert (x391 x1183))
(assert (x2252 x2851))
(assert (= (x3649 (x3789 x8327 1)) (+ (x3649 x8327) 1)))
(assert (= (and x1026 x4449) x4934))
(assert (= (and x5881 x1663) x7494))
(assert (x391 x634))
(assert (x391 x6657))
(assert (x391 x1730))
(assert (x391 x4414))
(assert (x391 x1493))
(assert (x391 x8354))
(assert (x4191 x5766 (- x8031 x5552)))
(assert (and (x5662 x6804 1000000000000000000) (x6638 x6804 1000000000000000000) (=> (and (< 0 x6804) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x6804 1000000000000000000)) (- x6804 1000000000000000000)) (>= x6804 (* 1000000000000000000 (x4526 x6804 1000000000000000000))))) (x4068 x6804 1000000000000000000) (x797 x6804 1000000000000000000)))
(assert (x391 x3394))
(assert (x6103 (- x5390 x172)))
(assert (=> (<= x2514 10000) (= (x5361 x2514) (x7379 x2514))))
(assert (= x3444 (and x1268 x6915)))
(assert (= x9089 (or x4373 x3684)))
(assert (x4191 x2012 (- x5116 x172)))
(assert (x6103 (- x5390 x1256)))
(assert (x391 x2995))
(assert (= x255 (and (not x4600) x5691)))
(assert (x391 x4912))
(assert (= x6524 (and x4275 x1285)))
(assert (x2252 x3000))
(assert (= (and (not x2740) x6026) x8351))
(assert (= (and x1454 x8987) x716))
(assert (x391 x66))
(assert (x391 x5013))
(assert (x6103 (- x1726 x5116)))
(assert (x4191 x5552 (- x7316 x2012)))
(assert (= x7713 (and x1501 x5879)))
(assert (x4191 x172 (- x1256 x5552)))
(assert (x8637 x6461))
(assert (x391 x4927))
(assert (x4191 x3579 (- x3593 x5552)))
(assert (= (and x588 x8586) x2613))
(assert (= x6469 x2322))
(assert (= x1832 (and x3604 x3031)))
(assert (x391 x3211))
(assert (= (or x2490 x935 x5994 x8086 x9201 x645 x2329 x3226 x1418) x2915))
(assert (x8665 x530 x5390 x9039 x530))
(assert (x4191 x5390 (- x530 x3579)))
(assert (x4156 x2012 x4135 x9039 x530))
(assert (x391 x4093))
(assert (= (or x5850 x5964) x5212))
(assert (x391 x1023))
(assert (x8665 x8031 x5766 x490 x774))
(assert (= (and x8179 x5096) x5686))
(assert (x391 x2649))
(assert (x391 x6675))
(assert (= x4416 (or x7958 x2767)))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5052))
(assert (= (and x6063 (not x5335)) x2543))
(assert (x391 x3559))
(assert (=> (<= x7448 10000) (= (x5361 x7448) (x7379 x7448))))
(assert (x391 x4763))
(assert (x2252 x2062))
(assert (x391 x4621))
(assert (= (and x2308 (not x363)) x8740))
(assert (x391 x8491))
(assert (x6103 (- x774 x2012)))
(assert (= (x3649 (x7379 x7498)) x7498))
(assert (x391 x4092))
(assert (= x7367 (x3649 (x7379 x7367))))
(assert (x391 x3598))
(assert (x4156 x5766 x8031 x5390 x530))
(assert (= (and (not x2737) x328) x2438))
(assert (= x704 (and x7142 (not x4429))))
(assert (x8637 x6215))
(assert (x4156 x2012 x4135 x7316 x5552))
(assert (x4156 x774 x490 x4135 x2012))
(assert (x4191 x2012 (- x5116 x3593)))
(assert (x391 x2333))
(assert (x391 x5393))
(assert (= 3069361948 (x3649 (x5361 3069361948))))
(assert (x391 x3285))
(assert (x391 x914))
(assert (x391 x3907))
(assert (x391 x5938))
(assert (x6103 (- x3579 x490)))
(assert (x391 x7385))
(assert (x4191 x5766 (- x8031 x490)))
(assert (= (x3649 (x3789 x8574 1)) (+ 1 (x3649 x8574))))
(assert (x391 x5732))
(assert (= x1908 (and x426 x6235)))
(assert (= (and (not x1671) x1175) x4665))
(assert (= (and x3320 x8196) x8225))
(assert (x391 x4891))
(assert (= (x3649 (x3789 x8350 1)) (+ (x3649 x8350) 1)))
(assert (= x7033 (x3649 (x7379 x7033))))
(assert (= x3080 (and x1 (not x8298))))
(assert (= x8339 (or (and x4607 x823) x5566 (and (not x8403) x691) x5069 x2424)))
(assert (x391 x1436))
(assert (x4191 x2012 (- x4135 x530)))
(assert (x391 x5469))
(assert (= (and x2501 x4440) x2290))
(assert (x391 x7934))
(assert (= (and x8907 x7490) x458))
(assert (x391 x6743))
(assert (x391 x1085))
(assert (x391 x1878))
(assert (x391 x7375))
(assert (= x6910 (or (and (not x2401) x5524) (and x3313 x834) x5653 (and x2544 (not x5877)) (and x4017 x5055) x851)))
(assert (= x6122 (or x5902 x6150)))
(assert (x4156 x2012 x4135 x1256 x172))
(assert (= (and (not x2) x163) x6396))
(assert (x391 x1884))
(assert (x8637 x6278))
(assert (x8637 x3772))
(assert (= (x3649 (x5361 6539370208772218570076773595062200405109424842860869254164860851635934461952)) 6539370208772218570076773595062200405109424842860869254164860851635934461952))
(assert (= (and x2641 (not x372)) x623))
(assert (x391 x8029))
(assert (= (x3649 (x7379 x2514)) x2514))
(assert (x391 x6327))
(assert (x8665 x2012 x4135 x9039 x530))
(assert (x391 x2435))
(assert (x8665 x940 x1726 x4135 x2012))
(assert (= (and x4577 x5665) x6483))
(assert (x391 x1935))
(assert (x391 x7422))
(assert (x391 x3250))
(assert (x391 x825))
(assert (x6103 (- x5116 x2012)))
(assert (= x9214 (x3649 (x7379 x9214))))
(assert (x391 x3671))
(assert (x7060 x8475))
(assert (x391 x3805))
(assert (= x5920 (or x7304 x3332 x2614 x7034 x9104 x7003)))
(assert (x391 x8844))
(assert (x391 x2062))
(assert (x2624 x4491 x774))
(assert (= x5394 (and x5370 x6858)))
(assert (= (x3649 (x3789 x6219 1)) (+ (x3649 x6219) 1)))
(assert (= (and x8342 x8279) x2474))
(assert (x391 x968))
(assert (x391 x3818))
(assert (= x8086 (and x6927 x7591)))
(assert (x391 x3754))
(assert (x391 x5230))
(assert (= (x3649 (x7379 x7619)) x7619))
(assert (x391 x270))
(assert (x391 x4599))
(assert (x8665 x1726 x940 x530 x9039))
(assert (x6103 (- x8031 x1726)))
(assert (= (and x4546 x5501) x8446))
(assert (= (and x4460 x2900) x6712))
(assert (x4191 x530 (- x9039 x2012)))
(assert (= (and x6955 x925) x4404))
(assert (x391 x4840))
(assert (= x2570 (and x5211 x5506)))
(assert (= x3586 (and (not x3817) x7657)))
(assert (x8665 x1726 x940 x8031 x5766))
(assert (x4191 x7316 (- x5552 x8031)))
(assert (= (and x9132 x4128) x6718))
(assert (x391 x6723))
(assert (x391 x8570))
(assert (x391 x2841))
(assert (= (x3649 (x3789 x4082 1)) (+ 1 (x3649 x4082))))
(assert (= (+ (x3649 x9017) 1) (x3649 (x3789 x9017 1))))
(assert (x391 x7039))
(assert (x391 x9094))
(assert (= x1478 (and x5333 x7024)))
(assert (x391 x1140))
(assert (x4191 x5390 (- x530 x2012)))
(assert (= x1926 (and x8146 x5098)))
(assert (x2252 x5469))
(assert (= x5900 (and x1291 x1932)))
(assert (x8665 x5390 x530 x8031 x5766))
(assert (= (or x3676 x6885) x5626))
(assert (x391 x8486))
(assert (x2252 x7305))
(assert (x391 x4270))
(assert (= x3052 (or x995 x2913)))
(assert (x391 x2674))
(assert (= (and x6752 x8452) x7471))
(assert (= x224 (or (and (not x2327) x8803) x2061)))
(assert (x391 x6880))
(assert (= x1390 (and x1898 x8716)))
(assert (x8665 x1726 x940 x5116 x2012))
(assert (=> (>= 10000 x7470) (= (x7379 x7470) (x5361 x7470))))
(assert (x2252 x5237))
(assert (x391 x2941))
(assert (= x7024 (or x8424 x9264)))
(assert (x4156 x530 x9039 x5390 x530))
(assert (= (=> (and (= x2955 x5144) (= x6062 x6946)) x3696) x7092))
(assert (x8665 x774 x490 x4135 x2012))
(assert (x391 x5804))
(assert (x391 x4588))
(assert (= (and x8137 (not x6926)) x4368))
(assert (= x7545 (and x8740 (not x6197))))
(assert (x4191 x530 (- x5390 x172)))
(assert (= (=> (= x847 true) x4020) x7225))
(assert (x8665 x1256 x172 x490 x774))
(assert (x2252 x1679))
(assert (x391 x1771))
(assert (= (or x547 x3323) x4175))
(assert (x391 x9071))
(assert (= (or x8909 x5601) x8708))
(assert (= (=> (= x2905 (= x4000 x7647)) (and (=> (and (= (< 0 x7647) x3220) (not x2905)) (and (=> (and (and (>= x8401 0) (>= x6458 0) (>= x1353 0) (= (x789 x7191) x8401) (<= x8401 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x8431 (x3789 x7244 1)) (>= 1461501637330902918203684832716283019655932542975 x1353) (< x6458 1461501637330902918203684832716283019655932542976) (= x6458 (x1750 x7244)) (> 1461501637330902918203684832716283019655932542976 x1353) (= x7191 (x3789 x8431 1)) (= (x5047 x8431) x1353) (= x8342 (= x8401 0)) (= (x2125 (+ x7574 96)) x474) (= x7244 (x7158 (x7379 x7448) x3914 0)) (>= 1461501637330902918203684832716283019655932542975 x6458)) x3220) (and (=> (and (and (= x1280 (= 0 x6458)) (or (and (and (= x5364 (x3789 x5198 1)) (= x5198 (x7158 (x7379 x6458) x3914 0))) (not x1280)) (and (= (x3789 x3914 1) x1882) x1280))) (not x8342)) x5585) (=> x8342 x2322))) (=> (and (and (= x1074 x5822) (= x7574 x9275)) (not x3220)) x7511))) (=> (and x2905 (and (= x5822 x8760) (= x135 x7574))) x4651))) x7095))
(assert (x7060 x1420))
(assert (x391 x2014))
(assert (x8665 x2012 x5116 x940 x1726))
(assert (x4191 x3579 (- x3593 x530)))
(assert (= x8976 (and x7492 x4934)))
(assert (= x1230 (and x457 x8845)))
(assert (= x8900 (x3649 (x7379 x8900))))
(assert (= x8914 (and x6483 (not x1540))))
(assert (x391 x2032))
(assert (x391 x8118))
(assert (= x5963 (or x1417 x8976)))
(assert (x391 x64))
(assert (= (and x4303 x7391) x8870))
(assert (=> (<= x7619 10000) (= (x7379 x7619) (x5361 x7619))))
(assert (x8637 x5625))
(assert (= (x3649 (x3789 x2615 2)) (+ 2 (x3649 x2615))))
(assert (=> (<= x2508 10000) (= (x5361 x2508) (x7379 x2508))))
(assert (x391 x5947))
(assert (= x4579 (and x988 x4152)))
(assert (= (or x2762 x7016) x7997))
(assert (= (and x2325 (not x8080)) x4192))
(assert (x391 x5325))
(assert (= x6793 (x3649 (x7379 x6793))))
(assert (x4191 x5390 (- x530 x5766)))
(assert (x4156 x172 x1256 x2780 x172))
(assert (x8665 x5390 x530 x3579 x3593))
(assert (x391 x3479))
(assert (= x2113 (and x8836 (not x9006))))
(assert (x391 x6164))
(assert (= x1959 (=> (= x4265 (> x7424 0)) (and (=> (and x4265 (and (= x6509 (= 0 x5308)) (<= x8334 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x8334 0))) (and (=> x6509 x6469) (=> (and (and (<= 0 x6484) (= x1290 (x7158 (x7379 x5308) x8237 0)) (= (x3789 x1290 2) x7592) (<= x6484 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= x6484 0) x1454) (= (x2595 x7592) x6484)) (not x6509)) (and (=> (not x1454) x4842) (=> (and x1454 (and (or (and (and (>= x5030 0) (= (not x2083) x1093) (= (> x7424 x5030) x2083) (= (x2595 x1814) x5030) (= (x3789 x7827 2) x1814) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5030) (= (x7158 (x7379 x4137) x8237 0) x7827)) x1424) (and (not x1424) (= x1424 x1093))) (and (= x6939 (x3789 x8237 1)) (>= 1461501637330902918203684832716283019655932542975 x4137) (= x4137 (x2263 x6939)) (= x1424 (ite (> x8334 0) (not (= 0 x4137)) (> x8334 0))) (<= 0 x4137) (< x4137 1461501637330902918203684832716283019655932542976)))) x4042))))) (=> (and (and (= x4871 x2804) (= x1578 x3909)) (not x4265)) x8817)))))
(assert (= x3939 (and x733 (not x9228))))
(assert (x391 x8229))
(assert (= x1667 (=> (and (= x7786 x4119) (= x1436 0)) x131)))
(assert (x391 x198))
(assert (x391 x4688))
(assert (= x4081 (and x5715 (not x1642))))
(assert (= x3186 (and x5365 (not x8876))))
(assert (x391 x8552))
(assert (x391 x483))
(assert (= (and (not x6263) x9108) x2874))
(assert (= (and x287 (not x2326)) x3326))
(assert (x6103 (- x940 x3593)))
(assert (x391 x1770))
(assert (x391 x8696))
(assert (x391 x7459))
(assert (x391 x7937))
(assert (= (x3649 (x3789 x368 1)) (+ (x3649 x368) 1)))
(assert (= (and (not x4304) x1448) x3946))
(assert (x391 x189))
(assert (x391 x2203))
(assert (=> (<= x2851 10000) (= (x5361 x2851) (x7379 x2851))))
(assert (= (and x3476 x5733) x2071))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x6253 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x6253 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x6253 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x6253 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x6253 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x6253 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6253)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x6253))) (x8005 1000000000000000000 x6253) (= (x7029 1000000000000000000 x6253) (* 1000000000000000000 x6253)) (x1844 1000000000000000000 x6253) (x7186 1000000000000000000 x6253) (x997 1000000000000000000 x6253) (x1348 1000000000000000000 x6253)))
(assert (= (+ (x3649 x6549) 2) (x3649 (x3789 x6549 2))))
(assert (x391 x495))
(assert (= (and x5038 x8912) x536))
(assert (x8665 x2012 x4135 x5116 x2012))
(assert (x8637 1461501637330902918203684832716283019655932542975))
(assert (x391 x6545))
(assert (x4191 x8031 (- x5766 x940)))
(assert (= x2702 (or x2018 x6869)))
(assert (x391 x8945))
(assert (x7060 x7943))
(assert (= x1254 x5477))
(assert (x391 x17))
(assert (x391 x2514))
(assert (x8665 x490 x774 x172 x2780))
(assert (= x5272 (=> (and (or (not x7243) x7243) (= x7243 (= x5071 0))) x1399)))
(assert (x391 x1687))
(assert (x391 x3864))
(assert (x4191 x1256 (- x172 x2780)))
(assert (= x5429 (and (not x4797) x3904)))
(assert (= (=> (= x8867 (= 0 x5097)) (and (=> x8867 x7617) (=> (and (= (or (and (< x3722 32) (= true (<= x3722 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3722)) x2199) (not x8867)) (and (=> (and (not x2199) (and (= x4946 32) (= x4329 1))) x1843) (=> x2199 x7617))))) x1739))
(assert (x391 x5008))
(assert (x391 x3142))
(assert (x391 x4486))
(assert (x391 x3474))
(assert (x391 x1090))
(assert (= x927 (and x2688 x1066)))
(assert (x4191 x530 (- x9039 x5552)))
(assert (x391 x2299))
(assert (x8637 x8429))
(assert (= (or x2187 x5666) x8046))
(assert (x391 x4361))
(assert (= (and x2029 x2774) x3253))
(assert (x391 x4689))
(assert (x6103 (- x172 x7316)))
(assert (= (x3649 (x3789 x4293 1)) (+ (x3649 x4293) 1)))
(assert (= (+ 2 (x3649 x1683)) (x3649 (x3789 x1683 2))))
(assert (x391 x6196))
(assert (x391 x245))
(assert (= (and x6949 (not x6563)) x6687))
(assert (= (=> (= x8347 (= x6946 0)) (and (=> (and (= (or (> x2955 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2955 32) (= (<= x2955 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x3121) (not x8347)) (and (=> (and x3121 (= x2248 x3398)) x6520) (=> (and (not x3121) (and (= x2933 1) (= x616 x2248) (= x5667 32))) x3201))) (=> (and (= x2248 x3398) x8347) x6520))) x6193))
(assert (= (and x4151 x900) x3902))
(assert (=> (<= x8552 10000) (= (x5361 x8552) (x7379 x8552))))
(assert (= x5859 (=> (and (= x2572 (ite (< x938 x8334) (not (= x734 0)) (< x938 x8334))) (or (and (not x2572) (and (and (< x2528 1461501637330902918203684832716283019655932542976) (= (= x2528 0) x8496) (<= x2528 1461501637330902918203684832716283019655932542975) (<= 0 x2528) (= x2528 (x6213 x4903))) (or (and (and (<= x879 1461501637330902918203684832716283019655932542975) (<= 0 x879) (= x3137 x5993) (< x879 1461501637330902918203684832716283019655932542976) (= (x2125 (+ 96 x5777)) x3137) (= x8520 x879) (= (x566 x6779) x879) (= (x3789 x4903 1) x6779)) (not x8496)) (and (and (= x7448 x8520) (= x5889 x5993) (= (x2125 (+ 96 x5777)) x5889)) x8496)))) (and x2572 (and (and (= x3839 (x7124 (- x734 x2233))) (= x1196 (> x3839 0)) (= x2233 (x6213 x4903)) (> 1461501637330902918203684832716283019655932542976 x2233) (<= 0 x2233) (<= x2233 1461501637330902918203684832716283019655932542975)) (or (and (and (= x5993 x6260) (= x734 x8520) (= x6260 (x2125 (+ x5777 96)))) (not x1196)) (and x1196 (and (< x6465 1461501637330902918203684832716283019655932542976) (>= x6465 0) (>= 1461501637330902918203684832716283019655932542975 x6465) (= (x3377 x6352) x6465) (= (x7158 (x7379 x734) x7907 0) x6352) (= x5993 x320) (= x320 (x2125 (+ x5777 96))) (= x734 x8520)))))))) x984)))
(assert (x391 x7747))
(assert (x6103 (- x2012 x3579)))
(assert (x391 x494))
(assert (x391 x8056))
(assert (= x2322 x7042))
(assert (x391 x3143))
(assert (= (and (not x4482) x6051) x8557))
(assert (= x73 (and x4192 (not x384))))
(assert (x6103 (- x1726 x8031)))
(assert (x391 x2420))
(assert (x391 x8792))
(assert (= x6919 (and x8063 (not x1222))))
(assert (x4191 x774 (- x490 x530)))
(assert (= (x3649 (x3789 x8502 1)) (+ 1 (x3649 x8502))))
(assert (= (or (and (not x3081) x2281) (and (not x3938) x987) (and x3495 x4791) (and x6930 x9188) x4073 (and x2673 x6119) x5828 x1586 (and x2157 x5779)) x2381))
(assert (x391 x476))
(assert (= x4774 (and x6588 x2711)))
(assert (x391 x6073))
(assert (= x8911 (and (not x4265) x6270)))
(assert (= (and x5145 (not x1905)) x6796))
(assert (= (x5361 115792089237316195423570985008687907853269984665640564039457) (x7379 115792089237316195423570985008687907853269984665640564039457)))
(assert (x391 x1211))
(assert (x391 x7413))
(assert (= (and x4393 (not x4972)) x4381))
(assert (x6103 (- x3593 x2012)))
(assert (= x1443 x7132))
(assert (x8665 x1726 x940 x2012 x4135))
(assert (= x1688 (and (not x6824) x4594)))
(assert (x4191 x3579 (- x3593 x4135)))
(assert (x391 x7031))
(assert (= (and x5779 (not x2157)) x3495))
(assert (x8665 x9039 x530 x490 x774))
(assert (x391 x6916))
(assert (x391 x1650))
(assert (= (+ 2 (x3649 x1822)) (x3649 (x3789 x1822 2))))
(assert (x391 x6791))
(assert (x391 x2684))
(assert (x391 x1502))
(assert (= x7670 (x3649 (x7379 x7670))))
(assert (x6103 (- x5116 x7316)))
(assert (= (x3649 (x5361 2796547477)) 2796547477))
(assert (x391 x7944))
(assert (= x8360 (and x1693 x7904)))
(assert (x391 x3843))
(assert (x4191 x8031 x5766))
(assert (x2252 x2765))
(assert (x4156 x4135 x2012 x2780 x172))
(assert (x391 x1205))
(assert (= x6573 (and x6571 (not x3486))))
(assert (= (and x9045 x5514) x1391))
(assert (x391 x4904))
(assert (= (+ (x3649 x8411) 1) (x3649 (x3789 x8411 1))))
(assert (= (or x6987 x3932) x5656))
(assert (= (=> (and (= x1578 x8583) (= x4510 x2804)) x1965) x8817))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7661))
(assert (= (and (not x7733) x3765) x114))
(assert (x6103 (- x5552 x9039)))
(assert (= x3688 (or x6102 x6014)))
(assert (= (and x8698 x1474) x8763))
(assert (= x4517 (and x3627 (not x5895))))
(assert (x4191 x1256 (- x172 x3593)))
(assert (= x9221 (and (not x7633) x6868)))
(assert (= x7804 (and x7533 (not x1347))))
(assert (= (and x6046 x751) x2556))
(assert (x391 x176))
(assert (= x8569 (and x8814 x2135)))
(assert (= x3471 (=> (and (= x8190 x579) (= x7012 0)) x1652)))
(assert (= (and x6557 (not x5811)) x1327))
(assert (x391 x1282))
(assert (x391 x9106))
(assert (x391 x5671))
(assert (x391 x5046))
(assert (= x3393 (and x4488 (not x1251))))
(assert (x6103 (- x5116 x5552)))
(assert (= (and (not x5131) x6935) x2872))
(assert (= (and (not x7576) x538) x7807))
(assert (=> (<= x624 10000) (= (x5361 x624) (x7379 x624))))
(assert (=> (<= x7032 10000) (= (x7379 x7032) (x5361 x7032))))
(assert (= (x3649 (x7379 x2945)) x2945))
(assert (= x6010 (and x4640 x7295)))
(assert (= (and x1757 (not x8682)) x7672))
(assert (= (or x4054 x664) x1793))
(assert (x391 x6547))
(assert (x391 x5139))
(assert (x391 x6645))
(assert (x4156 x5390 x530 x5116 x2012))
(assert (x391 x381))
(assert (= (and x8450 (not x1548)) x1611))
(assert (x8665 x530 x5390 x7316 x5552))
(assert (= (and x6254 x1836) x7795))
(assert (= (x3649 (x3789 x1648 1)) (+ 1 (x3649 x1648))))
(assert (x6103 (- x3579 x9039)))
(assert (= x3800 (x3649 (x7379 x3800))))
(assert (x391 x3993))
(assert (x391 x3521))
(assert (x8665 x8031 x5766 x2012 x5116))
(assert (x6103 (- x530 x3579)))
(assert (= (and x716 x1424) x8537))
(assert (x391 x6808))
(assert (x391 x3111))
(assert (= (or x7752 x1115) x5792))
(assert (= (x3649 (x5361 2835717307)) 2835717307))
(assert (x391 x5728))
(assert (=> (<= x7367 10000) (= (x5361 x7367) (x7379 x7367))))
(assert (= (or x686 x3834) x6311))
(assert (x391 x3164))
(assert (x7060 x6005))
(assert (x391 x8849))
(assert (= x3494 (=> (and (= x4330 x2769) (= x5124 x7390)) x775)))
(assert (= (x7379 50292402827334880472107169365697159231523039388532301717704428044325102813184) (x5361 50292402827334880472107169365697159231523039388532301717704428044325102813184)))
(assert (and (x5662 x489 1000000000000000000) (x6638 x489 1000000000000000000) (=> (and (< 0 x489) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x489 1000000000000000000)) (- x489 1000000000000000000)) (>= x489 (* 1000000000000000000 (x4526 x489 1000000000000000000))))) (x4068 x489 1000000000000000000) (x797 x489 1000000000000000000)))
(assert (x391 x6171))
(assert (x8665 x8031 x5766 x940 x1726))
(assert (= (and x5253 x681) x2198))
(assert (= x5691 (and x7099 x1441)))
(assert (x391 x8559))
(assert (x391 x3209))
(assert (x4191 x5390 (- x530 x3593)))
(assert (x4156 x530 x9039 x4135 x2012))
(assert (= (and x8918 (not x816)) x5248))
(assert (x391 x8591))
(assert (x2252 x3254))
(assert (= (x3649 (x5361 178855970)) 178855970))
(assert (= (and x2180 (not x4348)) x5220))
(assert (x4191 x1726 (- x940 x2012)))
(assert (=> (>= 10000 x855) (= (x7379 x855) (x5361 x855))))
(assert (x8637 x8542))
(assert (= x3085 (and (not x5978) x3483)))
(assert (x2624 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6834))
(assert (= (and x3827 x29) x3595))
(assert (x2252 x2191))
(assert (x7060 x8924))
(assert (x391 x3967))
(assert (x8665 x1726 x940 x5766 x8031))
(assert (x391 x5285))
(assert (x6103 x679))
(assert (= (=> (and (= x7921 x4471) (= x2430 x5962)) x506) x6543))
(assert (= x5885 (and x3962 (not x1275))))
(assert (x8637 x4439))
(assert (= (and x6796 (not x4243)) x7489))
(assert (= (and x4598 x484) x3467))
(assert (=> (>= 10000 x4313) (= (x5361 x4313) (x7379 x4313))))
(assert (x391 x7325))
(assert (x391 x3588))
(assert (and (x3303 x5213 32) (x4253 x5213 32) (=> (< 0 32) (= (+ (x4077 x5213 32) (* (x4526 x5213 32) 32)) x5213)) (x5837 x5213 32)))
(assert (x391 x2790))
(assert (x391 x8675))
(assert (= (=> (and (and (= (x2125 (+ x8583 32)) x6972) (= x7048 (< 0 x7144))) (or (and x7048 (and (<= 0 x6545) (= x6545 x1640) (= (x7238 x5338) x6545) (< x6545 1461501637330902918203684832716283019655932542976) (= x7848 x2027) (= (x7158 (x7379 x7848) (x5361 154) 0) x295) (= x5338 (x3789 x295 1)) (= x4449 (not x1901)) (<= x6545 1461501637330902918203684832716283019655932542975) (= (= 0 x6545) x1901))) (and (not x7048) (and (= x2027 x4510) (= x1640 x5308) (= x4449 x7048))))) x6121) x1020))
(assert (x391 x8263))
(assert (x4156 x3579 x3593 x1256 x172))
(assert (x391 x1148))
(assert (x6103 x530))
(assert (x391 x1677))
(assert (x6103 (- x5552 x3593)))
(assert (= x2025 (and x4114 x2950)))
(assert (= (and x7214 x3324) x6151))
(assert (= (x3649 (x7379 x1582)) x1582))
(assert (x8665 x4135 x2012 x490 x774))
(assert (x391 x5460))
(assert (x391 x2664))
(assert (= (x3649 (x3789 x7232 1)) (+ (x3649 x7232) 1)))
(assert (x6103 (- x5390 x8031)))
(assert (= x6955 (and x8409 (not x1961))))
(assert (x8665 x8031 x5766 x3593 x3579))
(assert (x8665 x5116 x2012 x5552 x7316))
(assert (x391 x358))
(assert (= (x3649 (x7379 x6232)) x6232))
(assert (x391 x4801))
(assert (= x2972 (and x6799 x4109)))
(assert (x4156 x530 x5390 x5116 x2012))
(assert (x8665 x490 x774 x1256 x172))
(assert (= x1684 (and x8355 (not x6636))))
(assert (x391 x169))
(assert (= x271 (and (not x4612) x3257)))
(assert (x391 x5257))
(assert (x6103 (- x7316 x5766)))
(assert (x391 x193))
(assert (x391 x2643))
(assert (=> (<= x5008 10000) (= (x5361 x5008) (x7379 x5008))))
(assert (x7060 x3384))
(assert (x391 x7197))
(assert (x391 x3346))
(assert (x6103 (- x490 x1256)))
(assert (x391 x7844))
(assert (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 (x3649 (x5361 50292402827334880472107169365697159231523039388532301717704428044325102813184))))
(assert (x6103 (- x8031 x9039)))
(assert (x391 x1798))
(assert (=> (>= 10000 x3638) (= (x5361 x3638) (x7379 x3638))))
(assert (= (and x2022 (not x5125)) x5396))
(assert (x391 x6404))
(assert (x391 x8997))
(assert (x391 x5583))
(assert (= x4818 (and x3692 x532)))
(assert (= (x3649 (x3789 x6141 2)) (+ (x3649 x6141) 2)))
(assert (= (and x4279 x6897) x1920))
(assert (= (=> (= x8443 (= x4844 x6359)) (and (=> (and (not x8443) (= (> x4844 0) x5445)) (and (=> (and (and (= x4566 x7532) (= x1116 x5430)) (not x5445)) x4718) (=> (and x5445 (and (<= x8773 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x354 (x2125 (+ x4566 96))) (> 1461501637330902918203684832716283019655932542976 x5237) (= (x3789 x2320 1) x8658) (= (x8968 x8658) x8773) (<= x200 1461501637330902918203684832716283019655932542975) (< x200 1461501637330902918203684832716283019655932542976) (<= x5237 1461501637330902918203684832716283019655932542975) (<= 0 x8773) (= x200 (x3481 x9072)) (= x2320 (x3789 x9072 1)) (= x9072 (x7158 (x7379 x5430) x8793 0)) (<= 0 x5237) (<= 0 x200) (= x3350 (= 0 x8773)) (= (x1382 x2320) x5237))) (and (=> (and (not x3350) (and (= x7378 (= 0 x200)) (or (and (= x5573 (x3789 x8793 1)) x7378) (and (not x7378) (and (= (x7158 (x7379 x200) x8793 0) x4866) (= (x3789 x4866 1) x7654)))))) x8024) (=> x3350 x3854))))) (=> (and x8443 (and (= x5430 x7413) (= x863 x4566))) x5724))) x6907))
(assert (= (and x6050 (not x894)) x2817))
(assert (= x601 (or x5497 x445)))
(assert (x391 x2717))
(assert (x391 x1226))
(assert (= x4577 (and x1579 x4291)))
(assert (x391 x7431))
(assert (x391 x1236))
(assert (x4191 x7316 (- x5552 x490)))
(assert (= (or x8943 x1839) x1019))
(assert (= (and x5537 x7985) x639))
(assert (x391 x2713))
(assert (x4191 x3593 x3579))
(assert (= x2489 (and x5707 x7482)))
(assert (x391 x1279))
(assert (x391 x7519))
(assert (x391 x2825))
(assert (= (x3649 (x7379 x734)) x734))
(assert (= x8049 (=> (= x7733 (= x6933 0)) (and (=> x7733 x2322) (=> (and (not x7733) (= (or (and (= true (<= x7292 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x7292 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x7292)) x2302)) (and (=> (and (= x847 true) x2302) x4020) (=> (and (and (= x8579 (x2042 x2533)) (= (= 0 x8579) x3430)) (not x2302)) (and (=> x3430 x6994) (=> (not x3430) x2322)))))))))
(assert (= x523 (and x8598 (not x4044))))
(assert (x391 x5354))
(assert (x391 x8001))
(assert (x391 x5575))
(assert (x391 x4961))
(assert (x1710 x5213))
(assert (= x2843 (=> (= (< 0 x460) x1346) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x8334) (= (= x7448 0) x1756) (<= 0 x8334)) x1346) (and (=> (and (and (<= 0 x1182) (= (= x1182 0) x6447) (= (x3789 x8778 2) x9103) (= (x7158 (x7379 x7448) x5954 0) x8778) (<= x1182 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5853 x9103) x1182)) (not x1756)) (and (=> (and x6447 (and (and (<= x8676 1461501637330902918203684832716283019655932542975) (= x182 (x3789 x5954 1)) (= x8389 (ite (> x8334 0) (not (= x8676 0)) (> x8334 0))) (<= 0 x8676) (> 1461501637330902918203684832716283019655932542976 x8676) (= (x3625 x182) x8676)) (or (and (not x8389) (= x3644 x8389)) (and (and (= x3644 (not x9238)) (= (x3789 x7047 2) x3965) (<= 0 x7091) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7091) (= x7047 (x7158 (x7379 x8676) x5954 0)) (= x9238 (< x7091 x460)) (= x7091 (x5853 x3965))) x8389)))) x6202) (=> (not x6447) x2322))) (=> x1756 x2322))) (=> (and (and (= x8942 x1559) (= x1083 x7373)) (not x1346)) x9263)))))
(assert (x391 x818))
(assert (= x5724 (=> (and (and (<= x6922 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5862 (> x7540 x6922)) (>= x6922 0)) (or (and (= x7540 x7285) x5862) (and (= x7285 0) (not x5862)))) x3460)))
(assert (x391 x5071))
(assert (= (=> (and (= x3845 (= 0 x8900)) (>= x8900 0) (<= x8900 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x8900)) (and (=> x3845 x278) (=> (and (and (< x8900 1461501637330902918203684832716283019655932542976) (= x5737 (= x7023 0)) (>= x8900 0) (= x7023 (x6887 (x7379 x8900))) (<= x8900 1461501637330902918203684832716283019655932542975)) (not x3845)) (and (=> (and (not x5737) (> 4294967296 x4589)) x278) (=> x5737 x7225))))) x7132))
(assert (x391 x2467))
(assert (= x4438 (or x2143 x1785)))
(assert (= (x3649 (x3789 x9072 1)) (+ 1 (x3649 x9072))))
(assert (= x1891 (x3649 (x7379 x1891))))
(assert (x391 x3097))
(assert (x391 x7432))
(assert (x6103 x774))
(assert (x391 x2519))
(assert (x391 x7122))
(assert (x6103 (- x3579 x530)))
(assert (x4191 x9039 (- x530 x5766)))
(assert (x391 x6972))
(assert (= x1636 (or (and x5261 (not x4091)) x4565 (and x1387 x3253) (and x3523 x8446) x2123 (and x4546 (not x5501)))))
(assert (= x3491 (and x4757 x7871)))
(assert (x391 x6461))
(assert (x8637 x3230))
(assert (= (and x9086 (not x2208)) x5449))
(assert (= (x3649 (x7379 x5430)) x5430))
(assert (x4156 x3579 x3593 x7316 x5552))
(assert (x391 x8230))
(assert (x391 x6836))
(assert (= x4618 (and x1936 (not x1609))))
(assert (x391 x2867))
(assert (x8665 x940 x1726 x7316 x5552))
(assert (x4156 x172 x2780 x3593 x3579))
(assert (= x102 (and (not x8960) x739)))
(assert (x391 x852))
(assert (x6103 (- x2012 x940)))
(assert (= (or x8841 x8172) x3646))
(assert (= x1316 (and x7940 x5511)))
(assert (= (and x4762 x5351) x5505))
(assert (x6103 x5680))
(assert (x391 x8789))
(assert (x8637 x3077))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x6132 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x6132 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x6132 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x6132 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x6132 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x6132 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6132)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x6132))) (x8005 1000000000000000000 x6132) (= (x7029 1000000000000000000 x6132) (* 1000000000000000000 x6132)) (x1844 1000000000000000000 x6132) (x7186 1000000000000000000 x6132) (x997 1000000000000000000 x6132) (x1348 1000000000000000000 x6132)))
(assert (x6103 (- x5552 x5390)))
(assert (= x2197 (=> (and (= x4977 x3302) (= x7181 x3133) (= x4301 x7987) (= x8790 x1957)) x1912)))
(assert (= (and (not x5996) x1457) x1815))
(assert (= x4313 (x3649 (x7379 x4313))))
(assert (= (and x8062 (not x783)) x7430))
(assert (= (=> (and (= x7235 x4926) (= x5090 x6414)) x6288) x3331))
(assert (x4191 x530 (- x9039 x4135)))
(assert (x6103 x6253))
(assert (= (and (not x2345) x101) x6064))
(assert (=> (>= 10000 x917) (= (x7379 x917) (x5361 x917))))
(assert (= (and x7190 x5592) x3960))
(assert (x391 x8694))
(assert (= x2569 (and (not x1790) x4896)))
(assert (x391 x1384))
(assert (x391 x3230))
(assert (= (and x2895 x7168) x962))
(assert (x8130 x5843))
(assert (= (x7379 2835717307) (x5361 2835717307)))
(assert (= (and x9120 (not x8750)) x7852))
(assert (x2252 x3006))
(assert (= x5241 (x3649 (x7379 x5241))))
(assert (x391 x1394))
(assert (x8665 x1726 x940 x5552 x7316))
(assert (= (=> (and (or (not x2630) x2630) (= x2630 (= x6546 0))) x3249) x3092))
(assert (= (=> (and (or (and (and (= x5430 x2879) (= x7182 x4402) (= x1394 x3558)) (not x7182)) (and x7182 (and (= x1048 x2879) (= x2889 (x7158 (x7379 x7848) (x5361 157) 0)) (> 1461501637330902918203684832716283019655932542976 x1048) (= x4832 (= x1048 0)) (<= x1048 1461501637330902918203684832716283019655932542975) (<= 0 x1048) (= x3558 x7848) (= (x3789 x2889 1) x7543) (= (not x4832) x4402) (= x1048 (x3432 x7543))))) (and (= (< x830 x625) x7182) (= (x2125 (+ x6490 32)) x2995))) x5182) x4141))
(assert (x391 x3137))
(assert (x391 x93))
(assert (x391 x2781))
(assert (x391 x5875))
(assert (= x7918 (and (not x8698) x1474)))
(assert (x391 x2607))
(assert (x4156 x8031 x5766 x9039 x530))
(assert (= (x7379 3047081080) (x5361 3047081080)))
(assert (= x3064 (and x3901 x3918)))
(assert (x8637 x7197))
(assert (x391 x6862))
(assert (= x6934 (=> (and (= x1957 x8790) (= x2190 x7181) (= x319 x4301) (= x3302 x1841)) x1912)))
(assert (= (or (and x5058 x8395) (and x769 x8054) x7484 (and (not x1904) x6187) (and x1144 x4472) x3206 x2071 (and x3147 x6892) (and x4110 (not x5292))) x7995))
(assert (= (and x4606 x1483) x4483))
(assert (x391 x2518))
(assert (x8665 x2012 x5116 x5552 x7316))
(assert (=> (>= 10000 x1593) (= (x7379 x1593) (x5361 x1593))))
(assert (= x2324 (x3649 (x7379 x2324))))
(assert (= (and x4641 (not x3841)) x1099))
(assert (x4191 x8031 (- x5766 x2012)))
(assert (x391 x7905))
(assert (x391 x7324))
(assert (x391 x138))
(assert (= x6623 (and x5549 x8358)))
(assert (x391 x1112))
(assert (= x2391 (and x4587 x9181)))
(assert (x391 x9199))
(assert (= x3424 (and x114 x2302)))
(assert (= (+ 1 (x3649 x3705)) (x3649 (x3789 x3705 1))))
(assert (x391 x8509))
(assert (x4191 x8031 (- x5766 x5390)))
(assert (=> (<= x4102 10000) (= (x5361 x4102) (x7379 x4102))))
(assert (x6103 (- x2780 x940)))
(assert (x391 x5467))
(assert (= x4390 (and x5072 x5884)))
(assert (= x1653 (and x5215 x822)))
(assert (= (or (and x4941 x4875) (and (not x3145) x5250)) x1376))
(assert (x8665 x5552 x7316 x2012 x5116))
(assert (= (and (=> (and (= x7038 x8438) (not x8438)) x4425) (=> (and x8438 (= (< x284 x7917) x2697)) (and (=> x2697 x7751) (=> (and (not x2697) (and (= x3822 (x7124 (- x284 x7917))) (= (> x3123 x3822) x7038))) x4425)))) x5266))
(assert (= x3226 (and x6763 x732)))
(assert (= x192 (and x5444 x4625)))
(assert (x391 x5206))
(assert (x4156 x5552 x7316 x3593 x3579))
(assert (= x2507 (x3649 (x7379 x2507))))
(assert (x391 x8562))
(assert (x4191 x4135 (- x2012 x5116)))
(assert (= (or x5920 x1380) x227))
(assert (x391 x2096))
(assert (x4156 x530 x9039 x3593 x3579))
(assert (= (and x1574 x696) x3099))
(assert (x391 x8365))
(assert (x2252 x8474))
(assert (x6103 (- x530 x1726)))
(assert (= x6684 (and x1728 x6663)))
(assert (x391 x8771))
(assert (= x6434 (and x5165 x6154)))
(assert (= x1245 (and x298 x8874)))
(assert (x2252 x1891))
(assert (x4191 x7316 (- x5552 x4135)))
(assert (x391 x3643))
(assert (x8665 x940 x1726 x3579 x3593))
(assert (= (and (not x3106) x5429) x8336))
(assert (x6103 x4271))
(assert (x391 x8188))
(assert (x4191 x1256 (- x172 x2012)))
(assert (= 2991318663 (x3649 (x5361 2991318663))))
(assert (x391 x8485))
(assert (= x8533 (and x8638 (not x5679))))
(assert (x3618 x653))
(assert (= (x3649 (x5361 72570022874062638528011751457397263716769196454539065078543251854057308946432)) 72570022874062638528011751457397263716769196454539065078543251854057308946432))
(assert (= (and x3326 x6308) x3970))
(assert (x391 x2275))
(assert (x391 x5553))
(assert (x391 x65))
(assert (=> (<= x7366 10000) (= (x5361 x7366) (x7379 x7366))))
(assert (x8665 x7316 x5552 x2012 x4135))
(assert (x1306 x828 x8528))
(assert (x391 x6423))
(assert (x2252 x4383))
(assert (x391 x2672))
(assert (x391 x7129))
(assert (x7060 x1256))
(assert (x4156 x2780 x172 x5116 x2012))
(assert (= (x3649 (x3789 x1566 2)) (+ 2 (x3649 x1566))))
(assert (x391 x1679))
(assert (x391 x2548))
(assert (x6103 (- x5390 x5116)))
(assert (x4191 x7316 (- x5552 x774)))
(assert (x4191 x4135 (- x2012 x1726)))
(assert (x391 x6453))
(assert (x6103 (- x7316 x172)))
(assert (= (=> (and (= x4470 (x3789 x2990 1)) (= (x7158 (x7379 x1640) x8957 0) x2990) (= (x3789 x4470 1) x5816)) x8053) x2794))
(assert (= (and x2641 x372) x4324))
(assert (x8665 x1256 x172 x5552 x7316))
(assert (x391 x3269))
(assert (x4191 x172 (- x1256 x172)))
(assert (x4191 x2012 (- x5116 x8031)))
(assert (x391 x2502))
(assert (= (and x1711 x3714) x1125))
(assert (= (=> (and (= (x7158 (x7379 x7448) (x5361 161) 0) x4682) (= x5768 (> x5981 0)) (= (x1668 x4682) x5981)) (and (=> (and (= (x7124 (- x5981 1)) x5687) x5768) x5932) (=> (not x5768) x4218))) x408))
(assert (x4156 x8031 x5766 x1256 x172))
(assert (= x1079 (=> (and (= (x2125 (+ 4 x1621)) x3347) (= (x2125 (+ x3347 32)) x385) (= x6471 (x7124 (- x385 x1621))) (= (= x7848 x8110) x563)) (and (=> (and (not x563) (= x573 (= x7848 x5049))) (and (=> (and (not x573) (and (and x8181 (and (= x6303 10742207464693106059581744854972325794081737850190833080250671788038469713920) (= 398450620 x745) (> 2217467699 x745) (not (> 4 x1445)) (> x1650 0) (not (= 75483562 x745)) (= x1208 x7032) (< x745 405663989) (not (= 178855970 x745)) (= x846 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2578) (and (< x2578 32) (= true (<= x2578 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x6471 x1445) (= (x6887 (x7379 x4633)) x1650) (= 36 x1445) (> 988262939 x745) (= x2578 (x7124 (- x1445 4))) (not (= 242558722 x745)))) (= (= x7848 x4633) x8181))) (and (=> x846 x8265) (=> (and (and (= x8707 (= x7032 x1208)) (= x1208 x7268)) (not x846)) (and (=> (and (and (= x6034 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1055) (= x3583 (x7158 (x7379 x1208) (x5361 6) 0)) (= (x1698 x3583) x1055) (>= x1055 0) (= x350 32)) x8707) x8934) (=> (not x8707) x8265))))) (=> (and (and (not (> 4 x8423)) (= x8423 x6471) (= (or (> x1221 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1221 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1221)))) x1592) (not (= 178855970 x4746)) (< x4746 2217467699) (> 988262939 x4746) (= (x7124 (- x8423 4)) x1221) (= x815 10742207464693106059581744854972325794081737850190833080250671788038469713920) (= x4746 398450620) (= (x6887 (x7379 x5049)) x1274) (> 405663989 x4746) (> x1274 0) (not (= x4746 75483562)) (not (= 242558722 x4746)) (= x8423 36) (= x7032 x1891)) x573) (and (=> x1592 x9244) (=> (and (not x1592) (and (= x961 x1891) (= (= x1891 x7032) x8810))) (and (=> (not x8810) x9244) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5702) (>= x5702 0) (= x6905 1) (= (x7158 (x7379 x1891) (x5361 6) 0) x6137) (= (x8441 x6137) x5702) (= x2355 32)) x8810) x1738))))))) (=> (and x563 (and (= x2389 398450620) (> 405663989 x2389) (> x2911 0) (> 988262939 x2389) (= x2911 (x6887 (x7379 x8110))) (not (= 75483562 x2389)) (= x7644 x6471) (= 36 x7644) (= x6389 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5796)) (> 32 x5796)) (> x5796 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x5796 (x7124 (- x7644 4))) (< x2389 2217467699) (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x7227) (not (= x2389 178855970)) (not (= 242558722 x2389)) (= x5718 x7032) (not (> 4 x7644)))) (and (=> (and (and (= x2548 x5718) (= x8611 (= x5718 x7032))) (not x6389)) (and (=> (not x8611) x7073) (=> (and (and (= 32 x7653) (= (x7158 (x7379 x5718) (x5361 6) 0) x7551) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1359) (= (x333 x7551) x1359) (<= 0 x1359) (= x4179 1)) x8611) x9080))) (=> x6389 x7073)))))))
(assert (x391 x4217))
(assert (x6103 (- x3593 x2780)))
(assert (x391 x1773))
(assert (x391 x3096))
(assert (= (and x5971 x4514) x2216))
(assert (= (and x252 x4976) x2966))
(assert (= (and x2621 (not x4938)) x7052))
(assert (= (x3649 (x7379 x2354)) x2354))
(assert (x391 x2935))
(assert (x8665 x5766 x8031 x172 x2780))
(assert (= x5763 (and x6759 (not x467))))
(assert (x8665 x2012 x4135 x8031 x5766))
(assert (= x8712 (=> (and (= x7292 x1880) (= x6933 x2365)) x4893)))
(assert (= (x3649 (x7379 x4415)) x4415))
(assert (x6103 x6814))
(assert (= (=> (= (= x7424 x2076) x7490) (and (=> (and (and (= x8096 x4510) (= x3993 x8583)) x7490) x1965) (=> (and (not x7490) (= x7441 (< 0 x2076))) (and (=> (and x7441 (and (< x6599 1461501637330902918203684832716283019655932542976) (<= x3638 1461501637330902918203684832716283019655932542975) (= x6599 (x2184 x4293)) (>= x6599 0) (<= 0 x3638) (= (x7158 (x7379 x5308) x8237 0) x5061) (= x4293 (x3789 x5061 1)) (= (= 0 x7162) x1898) (= x7162 (x9217 x4656)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x7162) (<= x6599 1461501637330902918203684832716283019655932542975) (< x3638 1461501637330902918203684832716283019655932542976) (= x5478 (x2125 (+ 96 x3993))) (>= x7162 0) (= (x3789 x4293 1) x4656) (= x3638 (x2315 x5061)))) (and (=> (and (and (or (and (not x5944) (and (= (x3789 x6153 1) x6560) (= x6153 (x7158 (x7379 x3638) x8237 0)))) (and (= (x3789 x8237 1) x1377) x5944)) (= (= 0 x3638) x5944)) (not x1898)) x1917) (=> x1898 x6976))) (=> (and (and (= x3993 x3909) (= x8096 x4871)) (not x7441)) x1959))))) x6110))
(assert (= (and x2251 x4346) x1056))
(assert (= (and x8382 (not x6166)) x1097))
(assert (x8130 x8528))
(assert (= (x3649 (x7379 x2727)) x2727))
(assert (= (and x4922 x849) x1569))
(assert (x8665 x1726 x940 x4135 x2012))
(assert (x391 x7308))
(assert (and (and (= (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x6814 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x6814 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* (- x6814 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000 (- x6814 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x7029 1000000000000000000 (- x6814 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x6814 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x6814)) (x7029 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x6814))) (x8005 1000000000000000000 x6814) (= (x7029 1000000000000000000 x6814) (* 1000000000000000000 x6814)) (x1844 1000000000000000000 x6814) (x7186 1000000000000000000 x6814) (x997 1000000000000000000 x6814) (x1348 1000000000000000000 x6814)))
(assert (= (x3649 (x3789 x7757 1)) (+ 1 (x3649 x7757))))
(assert (x391 x8580))
(assert (= x7643 (and x1102 x2340)))
(assert (= x2585 (and (not x1784) x6355)))
(assert (x391 x8526))
(assert (x4191 x940 (- x1726 x7316)))
(assert (x391 x309))
(assert (x391 x8583))
(assert (= (and x1561 x4463) x9144))
(assert (x4156 x4135 x2012 x5390 x530))
(assert (= (and x4716 (not x9229)) x8947))
(assert (= 4294967296 (x3649 (x5361 4294967296))))
(assert (x391 x8145))
(assert (=> (<= x5241 10000) (= (x5361 x5241) (x7379 x5241))))
(assert (x391 x2373))
(assert (= (and (not x5624) x49) x6770))
(assert (x8665 x1256 x172 x940 x1726))
(assert (= (x3649 (x3789 x1109 1)) (+ 1 (x3649 x1109))))
(assert (= (and x8592 x5764) x3293))
(assert (x8637 x134))
(assert (= (and x7361 x3204) x2916))
(assert (x391 x9224))
(assert (= x1187 (and (not x5236) x6937)))
(assert (= (or x2791 (and x1426 (not x7243))) x7904))
(assert (x391 x8605))
(assert (x2252 x5225))
(assert (x6103 (- x490 x172)))
(assert (x391 x8783))
(assert (x1052 x340 x2411))
(assert (= x5126 (=> (and (= x6906 x8525) (= 0 x4683)) x8168)))
(assert (= (or (and (not x1363) x264) x3968) x2141))
(assert (= (=> (and (= x250 x2388) (= x5356 x7313)) x7177) x2160))
(assert (= x6772 (and x671 x4445)))
(assert (= (x3649 (x7379 x3112)) x3112))
(assert (x391 x1466))
(assert (=> (>= 10000 x4822) (= (x5361 x4822) (x7379 x4822))))
(assert (x391 x1551))
(assert (= (or x6815 x7621) x4248))
(assert (= x7949 (=> (and (= x5892 x888) (= x1010 0)) x835)))
(assert (= (x7379 2796547477) (x5361 2796547477)))
(assert (x4156 x774 x490 x7316 x5552))
(assert (= x3260 (or x1141 x2827)))
(assert (= (x3649 (x7379 x8933)) x8933))
(assert (= (and x1756 x8273) x1080))
(assert (= x3892 (and x273 x1966)))
(assert (= (or x5029 x3683 x4351) x4883))
(assert (= (and (not x4472) x1144) x3476))
(assert (= (and (=> (and (and (= 1 x5448) (= x6442 x818)) (not x1198)) x8143) (=> x1198 x1455)) x4370))
(assert (x4191 x3593 (- x3579 x2012)))
(assert (x391 x10))
(assert (x6103 1000000000000000000))
(assert (x6103 (- x2012 x9039)))
(assert (x8665 x5116 x2012 x172 x1256))
(assert (= x3799 (=> (and (or (and (not x8156) (= 0 x1023)) (and x8156 (= x3079 x1023))) (and (= (> x3079 x6922) x8156) (>= x6922 0) (<= x6922 115792089237316195423570985008687907853269984665640564039457584007913129639935))) x3434)))
(assert (x391 x2259))
(assert (x391 x219))
(assert (x6103 (- x5552 x5116)))
(assert (= x2090 (and x267 x3383)))
(assert (= (and x1423 (not x4057)) x4236))
(assert (x391 x6424))
(assert (= (and x4968 x2287) x4833))
(assert (x391 x4985))
(assert (x391 x7274))
(assert (x391 x5277))
(assert (= (=> (and (= 0 x5124) (= x1216 x4330)) x3494) x1071))
(assert (= x6247 (and x5677 (not x1590))))
(assert (= (or x425 x4848) x8969))
(assert (x4191 x530 (- x5390 x5552)))
(assert (= x5008 (x3649 (x7379 x5008))))
(assert (x391 x9165))
(assert (= (=> (= x123 x8318) x1471) x7011))
(assert (= (not (and (= x7050 (x6820 x6233)) (>= x7050 0) (= (x7158 (x7379 x8952) x3914 0) x7976) (< x7050 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x7050) (= (x3789 x7976 1) x6233))) x730))
(assert (x391 x2139))
(assert (x8665 x3593 x3579 x530 x5390))
(assert (x391 x8464))
(assert (x6103 (- x7316 x1256)))
(assert (= x7109 (and (not x6950) x2568)))
(assert (= x113 (and x5422 x3107)))
(assert (x6103 (- x5766 x3593)))
(assert (= x1632 (or x1509 x6794)))
(assert (= x5301 (or x1425 x666)))
(assert (x391 x4415))
(assert (x391 x1827))
(assert (x391 x4193))
(assert (= (=> (and (= x2742 0) (= x143 x8956)) x4873) x4481))
(assert (= x2888 x5477))
(assert (x7060 x1669))
(assert (x4191 x2012 (- x5116 x5766)))
(assert (= x5383 (=> (and (= (x3789 x5847 1) x7100) (= x614 (x3789 x7100 1)) (= (x7158 (x7379 x5308) x8237 0) x5847) (= x5478 x3909) (= x4871 x5308)) x1959)))
(assert (x7060 x1726))
(assert (= (x3649 (x7379 x1439)) x1439))
(assert (x6103 (- x9039 x774)))
(assert (= x782 (and x4057 x1423)))
(assert (x391 x9064))
(assert (= (and (not x2286) x9067) x1134))
(assert (x391 x2191))
(assert (= x3250 (x3649 (x7379 x3250))))
(assert (= (and x1899 (not x4876)) x8785))
(assert (= x9014 (and (not x8649) x4831)))
(assert (x391 x4075))
(assert (= x8885 (and x8897 x9136)))
(assert (and (x5662 x4688 1000000000000000000) (x6638 x4688 1000000000000000000) (=> (and (< 0 x4688) (> 1000000000000000000 0)) (and (> (* 1000000000000000000 (x4526 x4688 1000000000000000000)) (- x4688 1000000000000000000)) (>= x4688 (* 1000000000000000000 (x4526 x4688 1000000000000000000))))) (x4068 x4688 1000000000000000000) (x797 x4688 1000000000000000000)))
(assert (= (and x7675 x5626) x6929))
(assert (x4191 x774 (- x490 x5116)))
(assert (x391 x3140))
(assert (= x9050 (and x5197 x3492)))
(assert (x8665 x7316 x5552 x774 x490))
(assert (x4191 x774 (- x490 x9039)))
(assert (= x1738 (=> (and (= x2355 x6250) (= x6546 x6905)) x3092)))
(assert (= (or x2134 x6668) x7280))
(assert (x391 x1459))
(assert (= x696 (and x617 x1334)))
(assert (= (or (and x33 x1689) (and x5737 x195) (and x8802 x5528) (and x1386 x4318)) x8277))
(assert (x8637 x2722))
(assert (x6103 (- x1256 x1726)))
(assert (x391 x6961))
(assert (x6103 (- x5766 x172)))
(assert (x391 x7017))
(assert (x2252 x7944))
(assert (x391 x8073))
(assert (x391 x5300))
(assert (= (or x9152 x7569) x2663))
(assert (x391 x6814))
(assert (= x3200 (and x1853 (not x920))))
(assert (x391 x6587))
(assert (x4191 x5766 (- x8031 x3579)))
(assert (x391 x9260))
(assert (x4191 x530 (- x9039 x5766)))
(assert (= (or x6839 x5374) x3877))
(assert (x391 x7135))
(assert (x391 x2987))
(assert (x391 x7242))
(assert (x391 x2563))
(assert (x391 x8127))
(assert (x391 x5657))
(assert (x2252 x6453))
(assert (x4156 x1256 x172 x3593 x3579))
(assert (x6103 (- x940 x5766)))
(assert (x391 x7517))
(assert (x391 x6083))
(assert (x2252 x9018))
(assert (= x8044 (and x6447 x8412)))
(assert (= (and (not x8998) x2982) x1102))
(assert (= (x3649 (x3789 x2067 1)) (+ 1 (x3649 x2067))))
(assert (= x4322 (and (=> (and (and (and (>= 1461501637330902918203684832716283019655932542975 x2727) (= (ite (> x8334 1) (not (= x2727 0)) (> x8334 1)) x5462) (> 1461501637330902918203684832716283019655932542976 x2727) (= x3926 (x3789 x4025 1)) (= (x7158 (x7379 x8826) x8957 0) x4025) (<= 0 x2727) (= (x74 x3926) x2727)) (or (and (= x5462 x8830) (not x5462)) (and x5462 (and (<= x3744 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3744 (x5604 x2589)) (= (not x877) x8830) (= (x7158 (x7379 x2727) x8957 0) x1822) (<= 0 x3744) (= x877 (> x8709 x3744)) (= (x3789 x1822 2) x2589))))) x6375) x5807) (=> (and (and (= x8826 x5669) (= 0 x1573)) (not x6375)) x1149))))
(assert (x391 x120))
(assert (x391 x3397))
(assert (= x1625 (and (not x5129) x5244)))
(assert (x391 x3919))
(assert (= (and x8721 (not x6042)) x3455))
(assert (= (and (not x3631) x665) x2087))
(assert (= (and x1741 (not x1646)) x2393))
(assert (x391 x5695))
(assert (= (and (not x1351) x7374) x2394))
(assert (= (and (not x3489) x2230) x7520))
(assert (x391 x2146))
(assert (= (x3649 (x7379 x7448)) x7448))
(assert (x391 x1587))
(assert (= x5602 (and (not x4303) x7391)))
(assert (x2252 x7242))
(assert (= (and (not x711) x5192) x827))
(assert (x391 x7897))
(assert (x7060 x8031))
(assert (x391 x6069))
(assert (= x3955 (and x3363 (not x4048))))
(assert (x2252 x8678))
(assert (x2624 x634 x5766))
(assert (= (and x8181 x638) x7393))
(assert (x391 x2562))
(assert (x6103 (- x1256 x5390)))
(assert (x6103 (- x2012 x5390)))
(assert (x6103 (- x940 x3579)))
(assert (x391 x6653))
(assert (x2252 x2105))
(assert (x391 x1239))
(assert (= (and (not x2572) x6783) x5404))
(assert (x6103 (- x2780 x3579)))
(assert (x6103 (- x1256 x172)))
(assert (x6103 (- x530 x774)))
(assert (x391 x5625))
(assert (= x691 (and x2647 x5160)))
(assert (x391 x3493))
(assert (x391 x5518))
(assert (= (and (not x6527) x6904) x2118))
(assert (= (and x5839 x1514) x9120))
(assert (x391 x7150))
(assert (= (and (not x6269) x3756) x950))
(assert (= (+ 2 (x3649 x2628)) (x3649 (x3789 x2628 2))))
(assert (x391 x2698))
(assert (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x3649 (x5361 77053863734975077137548456399560439977311721439096602559221323163398253314048))))
(assert (x391 x4907))
(assert (x8665 x1256 x172 x530 x9039))
(assert (x391 x8177))
(assert (x391 x5490))
(assert (x391 x1060))
(assert (= (+ (x3649 x7015) 2) (x3649 (x3789 x7015 2))))
(assert (x391 x1136))
(assert (x4156 x530 x9039 x1256 x172))
(assert (x4156 x530 x9039 x1726 x940))
(assert (= (and x6798 (not x8185)) x5321))
(assert (x391 x3804))
(assert (x4191 x530 (- x5390 x530)))
(assert (x4156 x8031 x5766 x2780 x172))
(assert (x391 x1176))
(assert (x4156 x4135 x2012 x490 x774))
(assert (x391 x5822))
(assert (= x454 (and (not x484) x4598)))
(assert (x391 x8766))
(assert (= x984 (=> (and (= x3897 x8520) (= x7287 x5993)) x7066)))
(assert (= x4591 (and x3773 x2925)))
(assert (x6103 (- x2780 x490)))
(assert (x1710 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x8665 x940 x1726 x3593 x3579))
(assert (x391 x4203))
(assert (= x652 (and x6211 x8810)))
(assert (and (x3303 x505 32) (x4253 x505 32) (=> (< 0 32) (= (+ (x4077 x505 32) (* (x4526 x505 32) 32)) x505)) (x5837 x505 32)))
(assert (= (=> (and (or (and x7957 (= (x3789 x8957 2) x1393)) (and (not x7957) (= x4778 (x7158 (x7379 x6457) x8957 0)))) (= x7957 (= x6457 0))) x2794) x3101))
(check-sat)
(exit)
