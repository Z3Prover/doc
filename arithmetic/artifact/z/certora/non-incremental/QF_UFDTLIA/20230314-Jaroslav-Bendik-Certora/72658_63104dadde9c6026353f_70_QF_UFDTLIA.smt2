(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x96 0)) (((x16 (x159 Int)) (x53 (x134 x96) (x79 x96) (x22 Int)) (x112 (x36 x96) (x103 Int)))))
(declare-fun x131 () Int)
(declare-fun x87 () Int)
(declare-fun x113 () Int)
(declare-fun x154 () Int)
(declare-fun x14 () Int)
(declare-fun x106 () Int)
(declare-fun x164 () Int)
(declare-fun x52 () Int)
(declare-fun x5 () Int)
(declare-fun x9 (x96) Int)
(declare-fun x29 (Int Int) Int)
(declare-fun x160 () Int)
(declare-fun x4 () Int)
(declare-fun x46 () Bool)
(declare-fun x7 () Int)
(declare-fun x152 () Int)
(declare-fun x89 () Int)
(declare-fun x26 () Int)
(declare-fun x37 () Int)
(declare-fun x57 () Int)
(declare-fun x85 () Int)
(declare-fun x136 () Int)
(declare-fun x50 () Int)
(declare-fun x128 () Bool)
(declare-fun x47 () Int)
(declare-fun x150 (Int Int) Int)
(declare-fun x90 (x96) Int)
(declare-fun x82 () Int)
(declare-fun x68 () Int)
(declare-fun x130 () Int)
(declare-fun x30 () Int)
(declare-fun x86 (Int Int) Int)
(declare-fun x141 () Int)
(declare-fun x20 () Int)
(declare-fun x40 () Int)
(declare-fun x95 () Int)
(declare-fun x55 () Int)
(declare-fun x73 () Bool)
(declare-fun x117 (Int Int) Int)
(declare-fun x44 () Int)
(declare-fun x12 () Int)
(declare-fun x100 () Int)
(declare-fun x49 (Int) x96)
(declare-fun x13 () Int)
(declare-fun x41 () Int)
(declare-fun x43 () Int)
(declare-fun x149 () Int)
(declare-fun x163 (x96) Int)
(declare-fun x28 () Int)
(declare-fun x94 (Int Int) Int)
(declare-fun x67 () Int)
(declare-fun x69 () Int)
(declare-fun x127 () Int)
(declare-fun x77 () Int)
(declare-fun x15 () Int)
(declare-fun x116 (Int Int) Int)
(declare-fun x110 () Int)
(declare-fun x162 () Int)
(declare-fun x105 (Int) Int)
(declare-fun x74 () Int)
(declare-fun x64 () Int)
(declare-fun x32 () Int)
(declare-fun x153 () Int)
(declare-fun x115 () Int)
(declare-fun x1 (Int) Int)
(declare-fun x31 () Int)
(declare-fun x27 () Int)
(declare-fun x166 () Int)
(declare-fun x58 () Int)
(declare-fun x109 () Bool)
(declare-fun x122 () Int)
(declare-fun x19 () Int)
(declare-fun x42 () Bool)
(declare-fun x102 () Int)
(declare-fun x11 () Int)
(declare-fun x107 () Int)
(declare-fun x39 (Int Int) Int)
(declare-fun x78 () Int)
(declare-fun x38 () Int)
(declare-fun x155 () Int)
(declare-fun x8 () Int)
(declare-fun x161 () Int)
(declare-fun x104 () Int)
(declare-fun x135 () Bool)
(declare-fun x119 () Int)
(declare-fun x156 () Int)
(declare-fun x138 () Int)
(declare-fun x80 () Int)
(declare-fun x148 () Bool)
(declare-fun x139 () Int)
(declare-fun x157 () Int)
(declare-fun x56 () Bool)
(declare-fun x121 () Int)
(declare-fun x70 () Bool)
(declare-fun x17 () Int)
(declare-fun x35 () Int)
(declare-fun x71 () Int)
(declare-fun x129 () Int)
(define-fun x158 ((x96 x96) (x88 Int)) x96 (ite ((_ is x53) x96) (x53 (x134 x96) (x79 x96) (+ x88 (x22 x96))) (ite ((_ is x112) x96) (x112 (x36 x96) (+ (x103 x96) x88)) (x16 (+ (x159 x96) x88)))))
(define-fun x91 ((x59 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x59) (<= 0 x59)) x59 (- x59 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x33 ((x59 Int)) Int (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x59) (> 0 x59)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x59) x59))
(define-fun x2 ((x59 Int)) Int (ite (and (< x59 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x59 0)) x59 (ite (and (< x59 231584178474632390847141970017375815706539969331281128078915168015826259279872) (>= x59 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- x59 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x59) (< x59 0)) (+ x59 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x94 x59 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x167 ((x125 Int)) Bool (and (< x125 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x125)))
(define-fun x63 ((x125 Int) (x81 Int)) Bool (= (x117 x81 x125) (x117 x125 x81)))
(define-fun x21 ((x125 Int) (x81 Int)) Bool (and (=> (and (< x81 0) (< 0 x125)) (< (x117 x125 x81) 0)) (=> (and (> 0 x81) (> 0 x125)) (> (x117 x125 x81) 0)) (=> (and (< x125 0) (> x81 0)) (> 0 (x117 x125 x81))) (=> (and (< 0 x81) (> x125 0)) (< 0 (x117 x125 x81)))))
(define-fun x75 ((x125 Int) (x81 Int)) Bool (=> (and (< 0 x125) (> x81 0)) (= (= x81 (x150 (x2 (x117 x125 x81)) x125)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x117 x125 x81)))))
(define-fun x93 ((x125 Int) (x81 Int)) Bool (=> (and (not (= x125 0)) (not (= x81 0))) (and (= (x150 (x117 x125 x81) x81) x125) (= x81 (x150 (x117 x125 x81) x125)))))
(define-fun x51 ((x125 Int) (x81 Int)) Bool (=> (and (< 0 x81) (< 0 x125)) (= (< (x150 115792089237316195423570985008687907853269984665640564039457584007913129639935 x125) x81) (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x117 x125 x81)))))
(define-fun x3 ((x125 Int) (x81 Int)) Bool (and (= (x2 (x117 x125 x81)) (x2 (x117 x125 (- x81 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x2 (x117 x125 x81)) (x2 (x117 (- x125 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x81 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x2 (x117 (- x125 115792089237316195423570985008687907853269984665640564039457584007913129639936) x81)) (x2 (x117 x125 x81)))))
(define-fun x76 ((x125 Int) (x81 Int)) Bool (and (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x81) (<= x81 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (<= x125 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x125))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x81) (x150 57896044618658097711785492504343953926634992332820282019728792003956564819968 x125)) (>= (x117 x125 (- x81 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (=> (and (and (<= x125 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x125)) (and (< 0 x81) (<= x81 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= x125 (x150 57896044618658097711785492504343953926634992332820282019728792003956564819967 x81)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x117 x125 x81)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x125) (> x125 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x81) (> x81 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x150 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x81)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x125)) (<= (x117 (- x125 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x81 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x81) (> x81 0)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x125) (> x125 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x117 (- x125 115792089237316195423570985008687907853269984665640564039457584007913129639936) x81) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x125) (x150 57896044618658097711785492504343953926634992332820282019728792003956564819968 x81))))))
(define-fun x133 ((x125 Int) (x81 Int)) Bool (and (x63 x125 x81) (x51 x125 x81) (x93 x125 x81) (x76 x125 x81) (x3 x125 x81) (x75 x125 x81) (x21 x125 x81)))
(define-fun x165 ((x125 Int)) Bool (and (= (x117 0 x125) 0) (= (x117 x125 0) 0)))
(define-fun x98 ((x125 Int)) Bool (and (= (x117 x125 1) x125) (= x125 (x117 1 x125))))
(define-fun x61 ((x125 Int)) Bool (and (x98 x125) (x165 x125)))
(define-fun x101 ((x125 Int) (x81 Int)) Bool (=> (and (< 0 x81) (> x125 0)) (and (>= x125 (x150 x125 x81)) (>= (x150 x125 x81) 0))))
(define-fun x144 ((x125 Int) (x81 Int)) Bool (=> (and (and (< x81 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 1 x81)) (and (<= 0 x125) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x125))) (and (< (x150 x125 x81) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 (x150 x125 x81)))))
(define-fun x147 ((x125 Int) (x81 Int)) Bool (=> (and (> x81 1) (< x81 x125)) (< (x150 x125 x81) x125)))
(define-fun x124 ((x125 Int) (x81 Int)) Bool (=> (and (< 0 x81) (> x125 0)) (= (= 0 (x150 x125 x81)) (> x81 x125))))
(define-fun x99 ((x125 Int) (x81 Int)) Bool (=> (and (> x81 0) (< 0 x125)) (and (>= x125 (x117 (x150 x125 x81) x81)) (> (x117 (x150 x125 x81) x81) (- x125 x81)))))
(define-fun x60 ((x125 Int) (x81 Int)) Bool (and (x147 x125 x81) (x144 x125 x81) (x99 x125 x81) (x124 x125 x81) (x101 x125 x81)))
(define-fun x65 ((x125 Int)) Bool (= 0 (x150 0 x125)))
(define-fun x114 ((x125 Int)) Bool (= (x150 x125 1) x125))
(define-fun x10 ((x125 Int)) Bool (=> (not (= x125 0)) (= (x150 x125 x125) 1)))
(define-fun x45 ((x125 Int)) Bool (and (x114 x125) (x10 x125) (x65 x125)))
(define-fun x120 ((x125 Int)) Bool (and (= x125 (x39 115792089237316195423570985008687907853269984665640564039457584007913129639935 x125)) (= (x39 x125 115792089237316195423570985008687907853269984665640564039457584007913129639935) x125)))
(define-fun x23 ((x125 Int)) Bool (and (= 0 (x39 x125 0)) (= (x39 0 x125) 0)))
(define-fun x62 ((x125 Int)) Bool (= (x39 x125 x125) x125))
(define-fun x137 ((x125 Int)) Bool (and (x23 x125) (x120 x125) (x62 x125)))
(define-fun x140 ((x125 Int) (x81 Int)) Bool (= (x39 x125 x81) (x39 x81 x125)))
(define-fun x126 ((x125 Int) (x81 Int)) Bool (and (=> (<= 0 x81) (<= (x39 x125 x81) x81)) (<= 0 (x39 x125 x81)) (=> (<= 0 x125) (<= (x39 x125 x81) x125))))
(define-fun x142 ((x125 Int) (x81 Int)) Bool (and (x140 x125 x81) (x126 x125 x81)))
(define-fun x6 ((x125 Int)) Bool (and (= (x116 115792089237316195423570985008687907853269984665640564039457584007913129639935 x125) (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x125)) (= (x116 x125 115792089237316195423570985008687907853269984665640564039457584007913129639935) (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x125))))
(define-fun x108 ((x125 Int)) Bool (and (= (x116 x125 0) x125) (= x125 (x116 0 x125))))
(define-fun x111 ((x125 Int)) Bool (= (x116 x125 x125) 0))
(define-fun x54 ((x125 Int)) Bool (and (x111 x125) (x6 x125) (x108 x125)))
(define-fun x92 ((x125 Int) (x81 Int)) Bool (= (x116 x81 x125) (x116 x125 x81)))
(define-fun x34 ((x125 Int) (x81 Int)) Bool (and (<= (x116 x125 x81) (+ x81 x125)) (<= 0 (x116 x125 x81))))
(define-fun x66 ((x125 Int) (x81 Int)) Bool (and (x34 x125 x81) (x92 x125 x81)))
(define-fun x18 ((x125 Int)) Bool (and (= (x29 115792089237316195423570985008687907853269984665640564039457584007913129639935 x125) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x29 x125 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x151 ((x125 Int)) Bool (and (= x125 (x29 x125 0)) (= x125 (x29 0 x125))))
(define-fun x84 ((x125 Int)) Bool (= x125 (x29 x125 x125)))
(define-fun x118 ((x125 Int)) Bool (and (x18 x125) (x151 x125) (x84 x125)))
(define-fun x145 ((x125 Int) (x81 Int)) Bool (= (x29 x125 x81) (x29 x81 x125)))
(define-fun x72 ((x125 Int) (x81 Int)) Bool (and (=> (<= 0 x81) (>= (x29 x125 x81) x81)) (=> (<= 0 x125) (<= x125 (x29 x125 x81))) (<= (x29 x125 x81) (+ x125 x81))))
(define-fun x83 ((x125 Int) (x81 Int)) Bool (and (x72 x125 x81) (x145 x125 x81)))
(define-fun x123 ((x125 Int) (x81 Int) (x143 Int) (x132 Int)) Bool (=> (and (<= x81 x132) (<= 0 x81) (>= x143 x125) (<= 0 x125)) (>= (x117 x143 x132) (x117 x125 x81))))
(define-fun x24 ((x125 Int) (x81 Int) (x143 Int) (x132 Int)) Bool (=> (= x143 x125) (= (x117 x125 (- x81 x132)) (- (x117 x125 x81) (x117 x143 x132)))))
(define-fun x146 ((x125 Int)) Bool (=> (and (< 10000 x125) (not (= 1461501637330902918203684832716283019655932542975 x125)) (not (= x125 1415856751)) (not (= x125 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (not ((_ is x16) (x49 x125)))))
(assert (x61 (- x122 x44)))
(assert (x123 x69 x26 x122 x85))
(assert (x61 (- x85 (x29 x156 x149))))
(assert (x123 x26 x161 x52 x107))
(assert (x133 x12 (- x8 x52)))
(assert (x123 x85 x122 x69 x71))
(assert (x24 x52 x107 x85 x122))
(assert (x24 x69 x12 x122 x85))
(assert (x133 x52 (- x107 x8)))
(assert (x24 x52 x107 x152 x127))
(assert (x133 x52 (- x107 x44)))
(assert (x133 x71 (- x69 x85)))
(assert (x167 x31))
(assert (x61 (- x107 x127)))
(assert (x123 x85 x122 x102 x100))
(assert (x133 x44 (- x69 x122)))
(assert (x61 (- x85 x152)))
(assert (x61 (- x52 x89)))
(assert (x24 (x29 x156 x149) x89 x52 x107))
(assert (x24 x52 x107 x89 (x29 x156 x149)))
(assert (x24 x85 x122 x161 x26))
(assert (x24 x107 x52 x17 x71))
(assert (x24 x152 x127 x52 x107))
(assert (x61 (- x161 x52)))
(assert (x167 x156))
(assert (x45 x50))
(assert (x24 x127 x69 x52 x107))
(assert (x24 x17 x71 x122 x85))
(assert (x61 x26))
(assert (x24 (x29 x156 x149) x89 x122 x85))
(assert (x61 x12))
(assert (x133 x80 (- x44 x122)))
(assert (x61 (- x102 x107)))
(assert (x24 x122 x85 x12 x69))
(assert (x133 x12 (- x69 x107)))
(assert (x167 x129))
(assert (x24 x8 x12 x107 x52))
(assert (x133 x122 (- x85 x31)))
(assert (x133 x102 x100))
(assert (x61 (- x69 x107)))
(assert (x24 x44 x69 x122 x85))
(assert (x133 x122 (- x85 (x29 x156 x149))))
(assert (x61 (- x52 x122)))
(assert (x123 x52 x107 x69 x26))
(assert (x61 (- x71 x52)))
(assert (= (x90 (x16 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x142 x106 x113))
(assert (x24 x71 x69 x52 x107))
(assert (x123 x17 x71 x122 x85))
(assert (x61 (- x102 x85)))
(assert (x61 (- x85 x89)))
(assert (x61 (- x85 x107)))
(assert (x24 x57 x31 x52 x107))
(assert (x61 x57))
(assert (x133 x122 (- x85 x57)))
(assert (x133 x57 (- x31 x122)))
(assert (x133 x44 (- x80 x85)))
(assert (x133 x17 (- x71 x107)))
(assert (x24 x89 (x29 x156 x149) x85 x122))
(assert (x24 x100 x102 x85 x122))
(assert (x133 x26 (- x69 x122)))
(assert (x61 (- x122 x161)))
(assert (x133 x26 (- x69 x85)))
(assert (x133 x69 (- x31 x107)))
(assert (x167 x8))
(assert (x24 x44 x80 x52 x107))
(assert (x123 x89 (x29 x156 x149) x122 x85))
(assert (x133 x31 (- x69 x85)))
(assert (x24 x161 x26 x107 x52))
(assert (x123 x122 x85 x102 x100))
(assert (x133 x31 (- x69 x107)))
(assert (x133 x44 (- x80 x52)))
(assert (x133 x52 (- x107 x17)))
(assert (x24 x107 x52 x85 x122))
(assert (x133 x71 (- x17 x107)))
(assert (x123 x69 x44 x122 x85))
(assert (x61 (- x52 x127)))
(assert (x24 x107 x52 x69 x31))
(assert (x24 x107 x52 x44 x80))
(assert (x123 x52 x107 x26 x161))
(assert (=> (<= x37 10000) (= (x49 x37) (x16 x37))))
(assert (x54 x139))
(assert (x133 x127 (- x152 x107)))
(assert (x167 x100))
(assert (x24 x26 x161 x107 x52))
(assert (x24 x52 x107 x69 x44))
(assert (x133 x122 (- x85 x161)))
(assert (x61 (- x52 (x29 x156 x149))))
(assert (x133 x8 (- x12 x85)))
(assert (x133 x102 (- x100 x107)))
(assert (x24 x69 x26 x122 x85))
(assert (x133 x85 (- x122 x102)))
(assert (x24 x122 x85 x26 x69))
(assert (x24 x127 x152 x122 x85))
(assert (x123 x12 x69 x122 x85))
(assert (x61 (- x52 x85)))
(assert (x61 (- x122 x102)))
(assert (x61 (- x107 x71)))
(assert (x133 x127 (- x152 x85)))
(assert (x45 x130))
(assert (x133 x85 (- x122 x71)))
(assert (x133 x52 (- x107 x12)))
(assert (x133 x85 (- x122 x69)))
(assert (x123 x52 x107 x69 x71))
(assert (x167 x57))
(assert (x133 x122 (- x85 x52)))
(assert (x123 x31 x69 x52 x107))
(assert (x24 x8 x12 x85 x122))
(assert (x123 x71 x69 x122 x85))
(assert (x24 x122 x85 x89 (x29 x156 x149)))
(assert (x61 (- x152 x122)))
(assert (x133 x71 (- x69 x107)))
(assert (x133 x107 (- x52 x12)))
(assert (x167 x4))
(assert (x24 x12 x69 x85 x122))
(assert (x24 x107 x52 x12 x69))
(assert (x133 x52 (- x107 x85)))
(assert (x133 x107 (- x52 x152)))
(assert (x133 (x29 x156 x149) (- x89 x52)))
(assert (x133 x107 (- x52 (x29 x156 x149))))
(assert (x133 x107 (- x52 x69)))
(assert (x24 x52 x107 x80 x44))
(assert (x61 (- x122 x100)))
(assert (x133 x69 (- x12 x107)))
(assert (x24 x8 x12 x52 x107))
(assert (x24 x52 x107 x102 x100))
(assert (x61 (- x52 x71)))
(assert (x167 x30))
(assert (x61 (- x122 x57)))
(assert (x167 x122))
(assert (= x37 (x90 (x49 x37))))
(assert (x61 (- x107 x85)))
(assert (x133 x89 (- (x29 x156 x149) x122)))
(assert (x133 x52 (- x107 x122)))
(assert (x24 x122 x85 x31 x57))
(assert (x24 x122 x85 x69 x31))
(assert (x123 x52 x107 x69 x12))
(assert (x123 x85 x122 x31 x57))
(assert (x123 x80 x44 x122 x85))
(assert (x133 x44 (- x80 x122)))
(assert (x123 x85 x122 x12 x8))
(assert (x24 x52 x107 x57 x31))
(assert (x123 x122 x85 x69 x31))
(assert (x24 x85 x122 x44 x80))
(assert (x24 x71 x69 x85 x122))
(assert (x167 x68))
(assert (x24 x12 x69 x122 x85))
(assert (x45 x166))
(assert (x167 x67))
(assert (x60 x50 x106))
(assert (x133 x80 (- x44 x52)))
(assert (x61 (- x127 x107)))
(assert (x24 x71 x17 x107 x52))
(assert (x133 x100 (- x102 x52)))
(assert (= 1415856751 (x90 (x16 1415856751))))
(assert (x24 x26 x161 x122 x85))
(assert (x61 (- x107 x100)))
(assert (x24 x107 x52 x71 x69))
(assert (x133 x69 (- x127 x85)))
(assert (x24 x127 x69 x107 x52))
(assert (x61 (- (x29 x156 x149) x107)))
(assert (x24 x69 x71 x122 x85))
(assert (x123 x71 x17 x52 x107))
(assert (x133 x8 (- x12 x52)))
(assert (x133 x44 (- x80 x107)))
(assert (x167 x19))
(assert (x123 x102 x100 x122 x85))
(assert (x24 x122 x85 x100 x102))
(assert (x24 x69 x127 x52 x107))
(assert (x167 x7))
(assert (x133 x69 x31))
(assert (x133 x107 (- x52 x161)))
(assert (x61 (- x122 x152)))
(assert (x133 x69 (- x26 x122)))
(assert (x133 x102 (- x100 x122)))
(assert (x133 x100 (- x102 x107)))
(assert (x24 x80 x44 x85 x122))
(assert (x123 x122 x85 x69 x71))
(assert (x24 x80 x44 x122 x85))
(assert (x123 x122 x85 x69 x12))
(assert (x133 x12 (- x69 x85)))
(assert (x61 (- x26 x122)))
(assert (x133 x107 (- x52 x71)))
(assert (x24 x107 x52 x127 x152))
(assert (x24 x122 x85 x107 x52))
(assert (x133 x52 x107))
(assert (x133 x69 (- x44 x122)))
(assert (x123 x52 x107 x44 x80))
(assert (x123 x107 x52 x26 x161))
(assert (x45 x87))
(assert (x24 x122 x85 x52 x107))
(assert (x123 x107 x52 x69 x26))
(assert (x167 x153))
(assert (x133 x52 (- x107 (x29 x156 x149))))
(assert (x133 x52 (- x107 x80)))
(assert (x133 x71 (- x17 x85)))
(assert (x61 x31))
(assert (x24 x85 x122 x152 x127))
(assert (x61 (- x71 x122)))
(assert (x61 (- x31 x107)))
(assert (x123 x69 x127 x52 x107))
(assert (x133 x31 (- x57 x122)))
(assert (x167 x47))
(assert (x133 x69 x26))
(assert (x24 x122 x85 x127 x152))
(assert (x24 x71 x69 x122 x85))
(assert (x24 x31 x69 x52 x107))
(assert (x24 x122 x85 x57 x31))
(assert (x24 x31 x57 x85 x122))
(assert (x24 x102 x100 x107 x52))
(assert (x24 x12 x69 x52 x107))
(assert (x133 x12 (- x8 x85)))
(assert (x133 x122 (- x85 x89)))
(assert (x61 x122))
(assert (x123 x52 x107 x102 x100))
(assert (x24 x161 x26 x122 x85))
(assert (x123 x52 x107 x69 x127))
(assert (x61 (- x100 x122)))
(assert (x133 x85 (- x122 x89)))
(assert (x133 x122 (- x85 x102)))
(assert (x61 (- x85 x127)))
(assert (x24 x107 x52 x69 x26))
(assert (x61 (- x12 x85)))
(assert (x24 x152 x127 x107 x52))
(assert (x24 x80 x44 x52 x107))
(assert (x24 x85 x122 x102 x100))
(assert (x24 x107 x52 x69 x12))
(assert (x133 x122 (- x85 x71)))
(assert (x61 (- x52 x12)))
(assert (x61 x71))
(assert (x61 (- x71 x85)))
(assert (x61 (- x107 x17)))
(assert (x123 x152 x127 x52 x107))
(assert (x24 x52 x107 x122 x85))
(assert (x123 x107 x52 x31 x57))
(assert (x133 x57 (- x31 x85)))
(assert (x133 x31 x57))
(assert (x61 (- x52 x57)))
(assert (x24 x85 x122 x57 x31))
(assert (x123 x52 x107 x69 x31))
(assert (x123 x122 x85 x71 x17))
(assert (x61 (- x80 x122)))
(assert (x123 x85 x122 x44 x80))
(assert (x24 x85 x122 x80 x44))
(assert (x24 x31 x57 x107 x52))
(assert (x61 (- x69 x52)))
(assert (x61 (- x85 x52)))
(assert (x133 x122 (- x85 x12)))
(assert (x24 x122 x85 x152 x127))
(assert (x167 x80))
(assert (x123 x122 x85 x26 x161))
(assert (x167 x127))
(assert (x24 x52 x107 x100 x102))
(assert (x24 x85 x122 x71 x17))
(assert (x167 x69))
(assert (x167 x139))
(assert (x61 (- x122 x107)))
(assert (x133 x8 (- x12 x122)))
(assert (x24 x69 x26 x107 x52))
(assert (x24 x107 x52 x161 x26))
(assert (x123 x85 x122 x26 x161))
(assert (x61 (- x89 x52)))
(assert (x133 x85 (- x122 x52)))
(assert (x61 (- x122 x26)))
(assert (x133 x26 (- x161 x52)))
(assert (= (x49 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x16 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x24 x26 x69 x122 x85))
(assert (x133 x71 (- x17 x122)))
(assert (x61 (- x161 x107)))
(assert (x61 (- x44 x85)))
(assert (x133 x122 (- x85 x69)))
(assert (x61 (- x12 x52)))
(assert (x133 x89 (- (x29 x156 x149) x52)))
(assert (x133 x69 (- x71 x85)))
(assert (x24 x85 x122 x127 x69))
(assert (x123 x85 x122 x71 x17))
(assert (x61 (- x122 x52)))
(assert (x61 (- x161 x85)))
(assert (x146 x37))
(assert (x61 (- x8 x122)))
(assert (x133 x107 (- x52 x122)))
(assert (x61 (- x52 x152)))
(assert (x133 x107 (- x52 x26)))
(assert (x24 x122 x85 x102 x100))
(assert (x137 x106))
(assert (x133 x161 (- x26 x107)))
(assert (x133 x85 (- x122 (x29 x156 x149))))
(assert (x123 x69 x26 x52 x107))
(assert (x133 x69 (- x44 x107)))
(assert (x123 x85 x122 x69 x26))
(assert (x133 x44 (- x69 x85)))
(assert (x24 x57 x31 x85 x122))
(assert (x61 (- x85 x57)))
(assert (x24 x52 x107 x12 x8))
(assert (x61 (- x152 x52)))
(assert (x133 x122 (- x85 x127)))
(assert (x61 (- x52 x31)))
(assert (x24 x69 x71 x85 x122))
(assert (x24 x52 x107 x71 x69))
(assert (x24 x107 x52 x31 x69))
(assert (x61 (- x44 x122)))
(assert (x123 x57 x31 x52 x107))
(assert (x133 (x29 x156 x149) (- x89 x122)))
(assert (x123 x52 x107 x12 x8))
(assert (x123 x122 x85 x127 x152))
(assert (x45 x106))
(assert (x24 x44 x69 x52 x107))
(assert (x24 x44 x69 x107 x52))
(assert (x24 x122 x85 x69 x44))
(assert (x167 x82))
(assert (x24 x107 x52 x69 x44))
(assert (x61 x100))
(assert (x123 x107 x52 (x29 x156 x149) x89))
(assert (x61 (- x161 x122)))
(assert (x133 x107 (- x52 x44)))
(assert (x133 x85 (- x122 x152)))
(assert (x133 x127 x152))
(assert (x61 (- x8 x107)))
(assert (x167 x149))
(assert (x167 x152))
(assert (x133 x80 (- x44 x107)))
(assert (x24 x17 x71 x85 x122))
(assert (x61 (- x85 x69)))
(assert (x123 x80 x44 x52 x107))
(assert (x167 x40))
(assert (x24 x52 x107 (x29 x156 x149) x89))
(assert (x133 x127 (- x69 x107)))
(assert (x24 x69 x71 x107 x52))
(assert (x61 (- x122 x69)))
(assert (x24 x107 x52 x57 x31))
(assert (x133 x31 (- x57 x107)))
(assert (x167 x43))
(assert (x24 x107 x52 x80 x44))
(assert (x24 x17 x71 x52 x107))
(assert (x133 x127 (- x69 x122)))
(assert (x123 x107 x52 x122 x85))
(assert (= x109 true))
(assert (x133 x85 (- x122 x8)))
(assert (x133 x122 (- x85 x17)))
(assert (x133 x69 (- x26 x52)))
(assert (x61 x152))
(assert (x24 x107 x52 x100 x102))
(assert (x167 x162))
(assert (x61 (- x89 x85)))
(assert (x24 x85 x122 x8 x12))
(assert (x123 x26 x69 x122 x85))
(assert (= (x49 1461501637330902918203684832716283019655932542975) (x16 1461501637330902918203684832716283019655932542975)))
(assert (x133 x122 (- x85 x80)))
(assert (x24 x44 x80 x107 x52))
(assert (x24 x102 x100 x85 x122))
(assert (x133 x85 (- x122 x44)))
(assert (= x148 (or x73 x42)))
(assert (x61 (- x8 x52)))
(assert (x123 x161 x26 x122 x85))
(assert (x61 (- x85 x17)))
(assert (x24 x85 x122 x31 x69))
(assert (x123 x122 x85 x44 x80))
(assert (x133 x12 (- x69 x52)))
(assert (x61 (- x127 x85)))
(assert (x61 x80))
(assert (x61 (- (x29 x156 x149) x122)))
(assert (x167 x166))
(assert (x123 x122 x85 x69 x26))
(assert (x133 x80 (- x44 x85)))
(assert (x133 x107 (- x52 x80)))
(assert (x24 x80 x44 x107 x52))
(assert (x133 x69 x44))
(assert (x133 x85 (- x122 x100)))
(assert (x24 x122 x85 x69 x127))
(assert (x133 x122 (- x85 x152)))
(assert (x118 x149))
(assert (x123 x26 x161 x122 x85))
(assert (x167 x113))
(assert (x24 x52 x107 x31 x57))
(assert (x24 x85 x122 x52 x107))
(assert (x24 x52 x107 x26 x69))
(assert (x133 x161 (- x26 x52)))
(assert (x61 (- x107 x80)))
(assert (x133 x52 (- x107 x127)))
(assert (x133 x31 (- x69 x52)))
(assert (x133 x57 (- x31 x52)))
(assert (x167 x78))
(assert (x61 (- x89 x107)))
(assert (x167 x50))
(assert (x24 x102 x100 x122 x85))
(assert (x61 (- x107 x57)))
(assert (x24 x69 x26 x52 x107))
(assert (x123 x31 x57 x52 x107))
(assert (x167 x71))
(assert (x24 x52 x107 x26 x161))
(assert (x133 x69 (- x44 x85)))
(assert (x24 x107 x52 x71 x17))
(assert (x61 x107))
(assert (x24 x71 x17 x52 x107))
(assert (x60 x87 x130))
(assert (x123 x26 x69 x52 x107))
(assert (x24 x69 x12 x107 x52))
(assert (x133 x69 (- x44 x52)))
(assert (x167 x26))
(assert (x133 x17 (- x71 x52)))
(assert (x123 x89 (x29 x156 x149) x52 x107))
(assert (x24 x69 x71 x52 x107))
(assert (x167 x44))
(assert (= (=> (and (and (= x129 x131) (= x11 x52) (= x130 x119) (= x95 x27) (= x40 x82) (= x141 (x117 x52 x107)) (= x67 x129) (= x162 x95) (= x82 x7) (= x67 x47) (= x135 (= x154 x55)) (= x141 x87) (= x115 x164) (= x5 x138) (= x154 x40) (= x131 x107) (= x55 x155) (= x74 x138) (= x164 (x150 x87 x130)) (= x162 x11) (= x119 x74) (= x155 x115)) (= x7 x30)) x135) x46))
(assert (x133 x122 x85))
(assert (x123 x107 x52 x102 x100))
(assert (x24 x85 x122 x69 x71))
(assert (x133 x44 x80))
(assert (x24 x52 x107 x44 x69))
(assert (x61 (- x122 x12)))
(assert (x24 x107 x52 x152 x127))
(assert (x123 x85 x122 (x29 x156 x149) x89))
(assert (x61 (- x52 x17)))
(assert (x24 x161 x26 x52 x107))
(assert (x24 x31 x69 x107 x52))
(assert (x133 x107 (- x52 x57)))
(assert (x61 (- x52 x102)))
(assert (x133 x12 (- x69 x122)))
(assert (x24 x52 x107 x69 x127))
(assert (x61 x161))
(assert (x61 x102))
(assert (x167 x89))
(assert (x24 x71 x17 x122 x85))
(assert (x133 (x29 x156 x149) x89))
(assert (x123 x57 x31 x122 x85))
(assert (x24 x17 x71 x107 x52))
(assert (x24 x69 x44 x52 x107))
(assert (x24 x107 x52 x44 x69))
(assert (x24 x127 x152 x85 x122))
(assert (x123 x102 x100 x52 x107))
(assert (x61 (- x57 x52)))
(assert (x133 x26 x161))
(assert (x24 x52 x107 x127 x152))
(assert (x167 x35))
(assert (x133 x52 (- x107 x152)))
(assert (x24 x122 x85 x31 x69))
(assert (x61 (- x52 x8)))
(assert (x61 (- x152 x107)))
(assert (x61 (- x31 x52)))
(assert (x61 (- x122 x31)))
(assert (x123 x100 x102 x52 x107))
(assert (x123 x107 x52 x127 x152))
(assert (x24 x85 x122 x44 x69))
(assert (x24 x122 x85 x69 x26))
(assert (x24 x122 x85 x17 x71))
(assert (x133 x161 (- x26 x122)))
(assert (x61 (- x89 x122)))
(assert (x66 x139 2))
(assert (x133 x52 (- x107 x100)))
(assert (x123 x12 x8 x122 x85))
(assert (x133 x85 (- x122 x17)))
(assert (x123 x122 x85 x12 x8))
(assert (x61 (- x85 x26)))
(assert (and (= (x117 9 9) 81) (= (x117 9 3) 27) (= (x117 3 3) 9) (= 81 (x117 27 3))))
(assert (x133 x102 (- x100 x52)))
(assert (x133 x31 (- x57 x85)))
(assert (x24 (x29 x156 x149) x89 x107 x52))
(assert (x61 (- x107 x44)))
(assert (x123 x127 x69 x52 x107))
(assert (x24 x52 x107 x71 x17))
(assert (x24 x127 x152 x107 x52))
(assert (x24 x52 x107 x127 x69))
(assert (x24 x122 x85 x44 x69))
(assert (x61 (- x107 x89)))
(assert (x133 (x29 x156 x149) (- x89 x85)))
(assert (x61 (- x100 x107)))
(assert (x61 x89))
(assert (x61 (- x107 x102)))
(assert (x61 x8))
(assert (x133 x52 (- x107 x69)))
(assert (x133 x26 (- x161 x85)))
(assert (x24 x69 x31 x52 x107))
(assert (x24 x26 x69 x107 x52))
(assert (x61 (- x52 x161)))
(assert (x24 (x29 x156 x149) x89 x85 x122))
(assert (x61 (- x107 x152)))
(assert (x61 (- x52 x80)))
(assert (x24 x107 x52 x69 x127))
(assert (x123 x52 x107 x31 x57))
(assert (x61 (- x12 x122)))
(assert (x167 x77))
(assert (x61 3))
(assert (x123 x127 x152 x122 x85))
(assert (x24 x107 x52 x89 (x29 x156 x149)))
(assert (x61 (- x26 x107)))
(assert (x133 x69 (- x71 x122)))
(assert (x133 x122 (- x85 x26)))
(assert (x61 (- x80 x85)))
(assert (x133 x107 (- x52 x85)))
(assert (x24 x85 x122 x107 x52))
(assert (x123 x69 x71 x52 x107))
(assert (x167 x110))
(assert (x133 x127 (- x69 x52)))
(assert (x123 x161 x26 x52 x107))
(assert (x123 x71 x17 x122 x85))
(assert (x167 x58))
(assert (x123 x52 x107 x69 x44))
(assert (x167 x157))
(assert (x24 x52 x107 x44 x80))
(assert (x167 x14))
(assert (x123 x31 x69 x122 x85))
(assert (x61 (- x85 x12)))
(assert (x24 x85 x122 (x29 x156 x149) x89))
(assert (x167 x20))
(assert (x24 x107 x52 x102 x100))
(assert (x24 x89 (x29 x156 x149) x122 x85))
(assert (x133 x26 (- x69 x52)))
(assert (x45 x13))
(assert (x24 x26 x161 x85 x122))
(assert (x24 x69 x44 x85 x122))
(assert (x24 x69 x31 x85 x122))
(assert (x133 x26 (- x69 x107)))
(assert (x61 (- x31 x122)))
(assert (x133 x85 (- x122 x107)))
(assert (x133 x26 (- x161 x122)))
(assert (x133 x71 (- x69 x52)))
(assert (x24 x85 x122 x69 x26))
(assert (= (and (not x128) x109) x73))
(assert (x61 (- x85 x71)))
(assert (x24 x127 x152 x52 x107))
(assert (x133 x122 (- x85 x107)))
(assert (x24 x122 x85 x12 x8))
(assert (x123 x12 x69 x52 x107))
(assert (x123 x107 x52 x71 x17))
(assert (x123 x85 x122 x69 x44))
(assert (x123 x122 x85 x52 x107))
(assert (x61 (- x52 x69)))
(assert (x24 x122 x85 x127 x69))
(assert (x61 (- x107 x31)))
(assert (x123 x85 x122 x69 x127))
(assert (x61 x17))
(assert (x61 (- x122 x89)))
(assert (x123 x122 x85 x69 x44))
(assert (x24 x107 x52 x26 x161))
(assert (x123 x52 x107 x127 x152))
(assert (x133 x152 (- x127 x122)))
(assert (x133 x69 (- x71 x52)))
(assert (x133 x69 (- x12 x122)))
(assert (x54 2))
(assert (x61 (- x85 x31)))
(assert (x133 x71 (- x17 x52)))
(assert (x133 x127 (- x152 x52)))
(assert (x167 x85))
(assert (x61 (- x85 x161)))
(assert (x133 x107 (- x52 x89)))
(assert (x45 x20))
(assert (x24 x85 x122 x69 x12))
(assert (x167 x32))
(assert (x61 (- x52 x100)))
(assert (x24 x12 x8 x107 x52))
(assert (x133 x31 (- x69 x122)))
(assert (x24 x12 x69 x107 x52))
(assert (x24 x152 x127 x85 x122))
(assert (x133 x69 (- x71 x107)))
(assert (x61 (- x122 x8)))
(assert (x123 x44 x80 x52 x107))
(assert (x24 x69 x12 x85 x122))
(assert (x123 x8 x12 x52 x107))
(assert (x24 x85 x122 x26 x69))
(assert (x123 x107 x52 x44 x80))
(assert (x24 x122 x85 (x29 x156 x149) x89))
(assert (x61 (- x107 x8)))
(assert (x133 x107 (- x52 x102)))
(assert (x24 x69 x12 x52 x107))
(assert (x133 x71 x17))
(assert (x24 x100 x102 x52 x107))
(assert (x123 x85 x122 x69 x12))
(assert (x61 (- x102 x52)))
(assert (x61 (- x52 x44)))
(assert (x24 x44 x69 x85 x122))
(assert (x167 x28))
(assert (x123 x69 x12 x52 x107))
(assert (x61 (- x57 x85)))
(assert (x133 x122 (- x85 x44)))
(assert (x24 x31 x69 x85 x122))
(assert (x61 (- x107 x69)))
(assert (x133 x127 (- x152 x122)))
(assert (x123 x152 x127 x122 x85))
(assert (x24 x52 x107 x69 x12))
(assert (x61 (- x85 x44)))
(assert (x61 (- x122 x80)))
(assert (x61 (- x57 x122)))
(assert (x24 x100 x102 x122 x85))
(assert (x133 x69 x127))
(assert (x123 x31 x57 x122 x85))
(assert (x61 (- (x29 x156 x149) x52)))
(assert (x24 x52 x107 x8 x12))
(assert (x137 x113))
(assert (x133 x69 (- x12 x85)))
(assert (x123 x127 x69 x122 x85))
(assert (x24 x122 x85 x161 x26))
(assert (x133 x85 (- x122 x161)))
(assert (x24 x52 x107 x69 x31))
(assert (x133 x69 (- x26 x85)))
(assert (x24 x127 x69 x122 x85))
(assert (x123 x85 x122 x69 x31))
(assert (x24 x12 x8 x122 x85))
(assert (x133 x52 (- x107 x71)))
(assert (x133 x152 (- x127 x107)))
(assert (x61 (- x107 x122)))
(assert (x61 (- x44 x52)))
(assert (x123 x52 x107 x122 x85))
(assert (x24 x85 x122 x17 x71))
(assert (x123 x127 x152 x52 x107))
(assert (x167 x104))
(assert (x133 x69 (- x12 x52)))
(assert (x123 x107 x52 x69 x12))
(assert (x167 x27))
(assert (x61 (- x122 (x29 x156 x149))))
(assert (x61 (- x85 x80)))
(assert (x133 x69 x12))
(assert (x133 x17 (- x71 x85)))
(assert (x133 x85 (- x122 x127)))
(assert (x167 x17))
(assert (x133 x44 (- x69 x107)))
(assert (x133 x69 (- x127 x107)))
(assert (x123 x69 x31 x52 x107))
(assert (= x70 (=> (and (and (= x28 x121) (= x122 x27) x56 (= x28 x122) (= (< 0 (x9 (x49 x37))) x56) (= (x9 (x49 x37)) x78) (= x35 x85) (= x64 (x163 (x49 x37))) (= (x94 (x117 x122 x85) 115792089237316195423570985008687907853269984665640564039457584007913129639935) x136) (= x4 (x33 (- x136 x50))) (= x106 x38) (<= x37 1461501637330902918203684832716283019655932542975) (= x43 x38) (= x85 x47) (= x15 1415856751) (< 0 x78) (= x5 x106) (= x128 (= x19 0)) (= x19 (x2 (- x4 (ite (< x136 x50) 1 0)))) (= x50 (x2 (x117 x122 x85))) (= x41 x35) (>= x64 0) (> x37 0)) (or (and x128 (and (= x58 x30) (> x38 0) (= (x150 x50 x106) x58))) (and (and (= (x2 (- x19 (ite (> x14 x50) 1 0))) x102) (= (x33 (- 0 x166)) x13) (= x80 (x33 (- 2 x77))) (> x38 x19) (= x68 (x2 (x117 x69 x12))) (= (x33 (- x50 x14)) x20) (= x149 (x2 (x117 x102 x100))) (= (x2 (x117 x69 x31)) x160) (= x57 (x33 (- 2 x160))) (= x31 (x116 2 x139)) (= x8 (x33 (- 2 x68))) (= (x2 (x117 x69 x127)) x153) (= x44 (x2 (x117 x71 x17))) (= (x91 (+ x32 1)) x100) (= x17 (x33 (- 2 x104))) (= x161 (x33 (- 2 x157))) (= (x91 (+ 1 (x2 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x38)))) x113) (= x127 (x2 (x117 x12 x8))) (= (x2 (x117 x31 x57)) x12) (= x156 (x150 x20 x166)) (= x69 (x150 x106 x166)) (= (x2 (x117 x26 x161)) x89) (= (x94 (x117 x122 x85) x106) x14) (= x110 (x2 (x117 (x29 x156 x149) x89))) (= x77 (x2 (x117 x69 x44))) (= x166 (x39 x106 x113)) (= x152 (x33 (- 2 x153))) (= x26 (x2 (x117 x44 x80))) (= x157 (x2 (x117 x69 x26))) (= x30 x110) (= x139 (x2 (* 3 x69))) (= x71 (x2 (x117 x127 x152))) (= (x2 (x117 x69 x71)) x104) (= (x150 x13 x166) x32)) (not x128)))) x46)))
(assert (x61 (- (x29 x156 x149) x85)))
(assert (x24 x85 x122 x69 x44))
(assert (x24 x85 x122 x26 x161))
(assert (x133 x52 (- x107 x31)))
(assert (x133 x69 (- x31 x122)))
(assert (x123 x71 x69 x52 x107))
(assert (x133 x52 (- x107 x89)))
(assert (x133 x100 (- x102 x122)))
(assert (x61 (- x12 x107)))
(assert (x133 x89 (- (x29 x156 x149) x85)))
(assert (x24 x69 x127 x122 x85))
(assert (x61 (- x102 x122)))
(assert (x133 x152 (- x127 x85)))
(assert (x24 x122 x85 x69 x71))
(assert (x167 x160))
(assert (x167 x12))
(assert (x24 x122 x85 x71 x17))
(assert (not x70))
(assert (x61 (- x26 x52)))
(assert (x61 (- x122 x127)))
(assert (x167 x64))
(assert (x61 (- x17 x107)))
(assert (x167 x136))
(assert (x61 (- x127 x52)))
(assert (x24 x89 (x29 x156 x149) x107 x52))
(assert (x61 (- x80 x107)))
(assert (x61 (- x100 x52)))
(assert (x24 x57 x31 x122 x85))
(assert (x24 x122 x85 x69 x12))
(assert (x24 x44 x80 x122 x85))
(assert (x133 x69 (- x31 x52)))
(assert (x123 x107 x52 x69 x31))
(assert (x61 (- x122 x17)))
(assert (x61 (- x17 x52)))
(assert (x123 x44 x69 x52 x107))
(assert (x133 x57 (- x31 x107)))
(assert (x61 (- x107 x12)))
(assert (x123 x107 x52 x12 x8))
(assert (x133 x89 (- (x29 x156 x149) x107)))
(assert (x133 x85 (- x122 x31)))
(assert (x133 x69 (- x26 x107)))
(assert (x61 (- x152 x85)))
(assert (x123 x100 x102 x122 x85))
(assert (x61 (- x85 x8)))
(assert (x61 (x29 x156 x149)))
(assert (x133 x152 (- x127 x52)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x90 (x16 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x167 x161))
(assert (x167 x38))
(assert (x61 (- x44 x107)))
(assert (x123 x12 x8 x52 x107))
(assert (x24 x85 x122 x100 x102))
(assert (x133 x44 (- x69 x52)))
(assert (x24 x127 x69 x85 x122))
(assert (x24 x161 x26 x85 x122))
(assert (x61 (- x71 x107)))
(assert (x123 x122 x85 x69 x127))
(assert (x24 x85 x122 x69 x31))
(assert (x133 x122 (- x85 x8)))
(assert (x24 x85 x122 x69 x127))
(assert (x24 x107 x52 x8 x12))
(assert (x123 x85 x122 x52 x107))
(assert (x133 x85 (- x122 x57)))
(assert (x133 x52 (- x107 x102)))
(assert (x24 x89 (x29 x156 x149) x52 x107))
(assert (x167 x15))
(assert (x24 x122 x85 x71 x69))
(assert (x123 x107 x52 x69 x44))
(assert (x123 x44 x69 x122 x85))
(assert (x123 x52 x107 (x29 x156 x149) x89))
(assert (x24 x12 x8 x85 x122))
(assert (x24 x69 x127 x85 x122))
(assert (x167 x121))
(assert (x61 (- x107 x161)))
(assert (x24 x107 x52 x31 x57))
(assert (x167 x41))
(assert (x24 x71 x17 x85 x122))
(assert (x118 x156))
(assert (x167 x102))
(assert (x61 (- x57 x107)))
(assert (x133 x107 (- x52 x100)))
(assert (x60 x20 x166))
(assert (x61 x52))
(assert (x133 x69 (- x127 x52)))
(assert (x61 x69))
(assert (x133 x17 (- x71 x122)))
(assert (x133 x69 (- x31 x85)))
(assert (x123 x69 x12 x122 x85))
(assert (x24 x107 x52 x12 x8))
(assert (x24 x31 x57 x122 x85))
(assert (x123 x69 x44 x52 x107))
(assert (x123 x17 x71 x52 x107))
(assert (x133 x8 (- x12 x107)))
(assert (x24 x69 x127 x107 x52))
(assert (x133 x52 (- x107 x57)))
(assert (x61 (- x122 x71)))
(assert (x24 x122 x85 x80 x44))
(assert (= (and x128 x109) x42))
(assert (x24 x69 x44 x107 x52))
(assert (x24 x31 x57 x52 x107))
(assert (x24 x85 x122 x12 x69))
(assert (x133 x69 (- x127 x122)))
(assert (x167 x95))
(assert (x123 x122 x85 (x29 x156 x149) x89))
(assert (x123 x69 x71 x122 x85))
(assert (x167 x138))
(assert (and (and (= (* 3 (- x69 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x117 3 (- x69 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x117 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x69 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 3 (- x69 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x69 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x117 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x69) (- (* 3 x69) (* x69 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x76 3 x69) (x93 3 x69) (= (* x69 3) (x117 3 x69)) (x75 3 x69) (x3 3 x69) (x51 3 x69)))
(assert (x24 x85 x122 x71 x69))
(assert (x24 x85 x122 x12 x8))
(assert (x60 x106 x166))
(assert (x24 x44 x80 x85 x122))
(assert (x61 (- x100 x85)))
(assert (x61 (- x85 x102)))
(assert (x133 (x29 x156 x149) (- x89 x107)))
(assert (x24 x122 x85 x44 x80))
(assert (x123 x44 x80 x122 x85))
(assert (x133 x161 (- x26 x85)))
(assert (x61 (- x17 x85)))
(assert (x24 x69 x44 x122 x85))
(assert (x61 (- x69 x85)))
(assert (x61 (- x8 x85)))
(assert (x133 x102 (- x100 x85)))
(assert (x123 (x29 x156 x149) x89 x122 x85))
(assert (x123 x107 x52 x69 x71))
(assert (x167 x13))
(assert (x167 x106))
(assert (x24 x69 x31 x122 x85))
(assert (x24 x57 x31 x107 x52))
(assert (x123 (x29 x156 x149) x89 x52 x107))
(assert (x24 x122 x85 x26 x161))
(assert (x24 x100 x102 x107 x52))
(assert (x24 x52 x107 x69 x71))
(assert (x133 x52 (- x107 x161)))
(assert (x123 x52 x107 x71 x17))
(assert (x133 x85 (- x122 x26)))
(assert (x61 x85))
(assert (x24 x52 x107 x17 x71))
(assert (x133 x85 (- x122 x80)))
(assert (x133 x100 (- x102 x85)))
(assert (x83 x156 x149))
(assert (x24 x107 x52 (x29 x156 x149) x89))
(assert (x24 x122 x85 x8 x12))
(assert (x61 (- x107 x26)))
(assert (x61 (- x17 x122)))
(assert (x24 x69 x26 x85 x122))
(assert (x60 x13 x166))
(assert (x61 (- x69 x122)))
(assert (x24 x52 x107 x31 x69))
(assert (x61 (- x31 x85)))
(assert (x133 x26 (- x161 x107)))
(assert (x61 (- x26 x85)))
(assert (x123 x85 x122 x127 x152))
(assert (x61 (- x85 x100)))
(assert (x24 x26 x69 x85 x122))
(assert (x133 x107 (- x52 x31)))
(assert (x61 (- x107 (x29 x156 x149))))
(assert (x133 x107 (- x52 x8)))
(assert (x133 x127 (- x69 x85)))
(assert (x24 x31 x69 x122 x85))
(assert (x133 x71 (- x69 x122)))
(assert (x123 x69 x127 x122 x85))
(assert (x133 x85 (- x122 x12)))
(assert (x123 x8 x12 x122 x85))
(assert (x24 x85 x122 x127 x152))
(assert (x24 x8 x12 x122 x85))
(assert (x24 x107 x52 x122 x85))
(assert (x24 x69 x31 x107 x52))
(assert (x24 x52 x107 x12 x69))
(assert (= (x16 1415856751) (x49 1415856751)))
(assert (x61 (- x52 x26)))
(assert (x24 x107 x52 x69 x71))
(assert (x61 (- x127 x122)))
(assert (x61 x127))
(assert (x133 x12 x8))
(assert (x24 x107 x52 x26 x69))
(assert (x133 x12 (- x8 x122)))
(assert (x167 x5))
(assert (x24 x52 x107 x69 x26))
(assert (x123 x69 x31 x122 x85))
(assert (x24 x12 x8 x52 x107))
(assert (x167 x37))
(assert (x123 x122 x85 x31 x57))
(assert (x133 x52 (- x107 x26)))
(assert (x24 x26 x161 x52 x107))
(assert (x24 x85 x122 x89 (x29 x156 x149)))
(assert (x133 x31 (- x57 x52)))
(assert (x133 x69 x71))
(assert (x24 x107 x52 x127 x69))
(assert (x133 x12 (- x8 x107)))
(assert (x61 x44))
(assert (x24 x102 x100 x52 x107))
(assert (x24 x85 x122 x31 x57))
(assert (x24 x71 x69 x107 x52))
(assert (x24 x26 x69 x52 x107))
(assert (x61 (- x80 x52)))
(assert (x24 x52 x107 x161 x26))
(assert (x167 x74))
(assert (x133 x122 (- x85 x100)))
(assert (x123 x107 x52 x69 x127))
(assert (x133 x107 (- x52 x127)))
(assert (x24 x152 x127 x122 x85))
(assert (x133 x107 (- x52 x17)))
(check-sat)
(exit)
