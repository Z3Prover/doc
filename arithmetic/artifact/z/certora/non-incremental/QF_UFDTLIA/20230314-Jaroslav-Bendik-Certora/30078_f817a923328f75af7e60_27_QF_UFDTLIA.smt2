(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x2192 0)) (((x5195 (x3943 x2192) (x469 x2192) (x3549 Int)) (x821 (x2967 Int)) (x2184 (x541 x2192) (x4979 Int)))))
(declare-fun x3156 () Bool)
(declare-fun x382 () Bool)
(declare-fun x998 () Bool)
(declare-fun x6243 () Int)
(declare-fun x5928 () Int)
(declare-fun x5487 () Int)
(declare-fun x162 () x2192)
(declare-fun x5922 () Bool)
(declare-fun x5430 () Bool)
(declare-fun x4912 () Bool)
(declare-fun x5325 () Bool)
(declare-fun x5005 () Bool)
(declare-fun x2143 () Int)
(declare-fun x4166 () Bool)
(declare-fun x2643 () Bool)
(declare-fun x2706 () Int)
(declare-fun x4716 () Int)
(declare-fun x5485 () Int)
(declare-fun x59 () Bool)
(declare-fun x6427 () Bool)
(declare-fun x3622 () Bool)
(declare-fun x828 () Bool)
(declare-fun x1562 () Bool)
(declare-fun x148 () Int)
(declare-fun x4316 () Int)
(declare-fun x5215 () Bool)
(declare-fun x2866 () Int)
(declare-fun x2001 () Int)
(declare-fun x1679 () Int)
(declare-fun x1538 () Bool)
(declare-fun x3041 () x2192)
(declare-fun x2384 () Int)
(declare-fun x2165 () Int)
(declare-fun x847 () Int)
(declare-fun x606 () Int)
(declare-fun x2383 () Bool)
(declare-fun x2807 () x2192)
(declare-fun x2130 () Bool)
(declare-fun x3629 () x2192)
(declare-fun x4244 () Bool)
(declare-fun x749 () Int)
(declare-fun x4292 () Int)
(declare-fun x6263 () Int)
(declare-fun x176 () Int)
(declare-fun x961 () Bool)
(declare-fun x6385 () Bool)
(declare-fun x2381 () Int)
(declare-fun x2441 () Int)
(declare-fun x6372 () Bool)
(declare-fun x4322 () Int)
(declare-fun x5321 () x2192)
(declare-fun x1200 () Int)
(declare-fun x1147 () Int)
(declare-fun x5934 () x2192)
(declare-fun x122 () Bool)
(declare-fun x3677 () Int)
(declare-fun x4966 () Int)
(declare-fun x4638 () Bool)
(declare-fun x3486 () Int)
(declare-fun x1223 () Bool)
(declare-fun x5838 () Int)
(declare-fun x166 () Bool)
(declare-fun x984 () Bool)
(declare-fun x5116 () Bool)
(declare-fun x3230 () x2192)
(declare-fun x2894 () Int)
(declare-fun x1480 () Int)
(declare-fun x3125 () Bool)
(declare-fun x910 () Int)
(declare-fun x5244 () Int)
(declare-fun x4552 () Int)
(declare-fun x2374 () Int)
(declare-fun x3560 () Bool)
(declare-fun x4570 () Bool)
(declare-fun x4729 () Int)
(declare-fun x201 () Bool)
(declare-fun x3769 () Int)
(declare-fun x2943 () Bool)
(declare-fun x3181 () Int)
(declare-fun x6281 () Int)
(declare-fun x1141 () Bool)
(declare-fun x4161 () Bool)
(declare-fun x6073 () Bool)
(declare-fun x3788 () Bool)
(declare-fun x259 () Int)
(declare-fun x1372 () Int)
(declare-fun x901 () Int)
(declare-fun x2658 () Bool)
(declare-fun x4070 () Bool)
(declare-fun x1401 () Int)
(declare-fun x3728 () Int)
(declare-fun x4323 () Bool)
(declare-fun x475 () Int)
(declare-fun x392 () Bool)
(declare-fun x4740 () Int)
(declare-fun x934 () Bool)
(declare-fun x5886 () Bool)
(declare-fun x1128 () x2192)
(declare-fun x4693 () Bool)
(declare-fun x3217 () Bool)
(declare-fun x3453 () Bool)
(declare-fun x3448 () Bool)
(declare-fun x2324 () Int)
(declare-fun x3716 () Bool)
(declare-fun x5845 () Int)
(declare-fun x1529 () x2192)
(declare-fun x19 () Bool)
(declare-fun x1871 () Bool)
(declare-fun x2140 () Bool)
(declare-fun x5006 () Bool)
(declare-fun x3239 () Bool)
(declare-fun x2954 () x2192)
(declare-fun x6195 () Bool)
(declare-fun x6354 () Bool)
(declare-fun x1757 () Bool)
(declare-fun x2955 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x6249 () Bool)
(declare-fun x6298 () Bool)
(declare-fun x5343 () Int)
(declare-fun x1877 () x2192)
(declare-fun x4681 () Int)
(declare-fun x4513 () Bool)
(declare-fun x4758 () Int)
(declare-fun x4030 () Bool)
(declare-fun x2976 () Int)
(declare-fun x3918 () Bool)
(declare-fun x4643 () Bool)
(declare-fun x734 () Bool)
(declare-fun x3623 () Int)
(declare-fun x6213 () Int)
(declare-fun x4219 () Int)
(declare-fun x940 () Bool)
(declare-fun x4398 (Int) Int)
(declare-fun x5887 () Bool)
(declare-fun x3441 () Bool)
(declare-fun x2429 () Bool)
(declare-fun x4400 () Int)
(declare-fun x3592 () Int)
(declare-fun x5659 () Int)
(declare-fun x5417 () x2192)
(declare-fun x3317 () Int)
(declare-fun x5832 () Bool)
(declare-fun x2812 () Bool)
(declare-fun x5329 () Bool)
(declare-fun x3236 () x2192)
(declare-fun x6012 () Int)
(declare-fun x317 () Bool)
(declare-fun x3287 () Bool)
(declare-fun x4090 () Int)
(declare-fun x1613 () Int)
(declare-fun x2633 () Int)
(declare-fun x4285 () Bool)
(declare-fun x4374 () Int)
(declare-fun x647 () Bool)
(declare-fun x2875 () Int)
(declare-fun x5545 () Int)
(declare-fun x1493 () Bool)
(declare-fun x4037 () Int)
(declare-fun x3491 () Bool)
(declare-fun x5261 () Bool)
(declare-fun x2769 () Bool)
(declare-fun x3845 () x2192)
(declare-fun x112 () Bool)
(declare-fun x3842 () Bool)
(declare-fun x6200 () Bool)
(declare-fun x526 () Bool)
(declare-fun x3872 () Bool)
(declare-fun x4503 () Int)
(declare-fun x634 () Int)
(declare-fun x6113 () Bool)
(declare-fun x3186 () Bool)
(declare-fun x2533 () Int)
(declare-fun x4658 () Int)
(declare-fun x2074 () Int)
(declare-fun x4208 () Int)
(declare-fun x1889 () Int)
(declare-fun x193 () Bool)
(declare-fun x2539 () Bool)
(declare-fun x430 () Bool)
(declare-fun x2488 () Int)
(declare-fun x229 () Bool)
(declare-fun x315 () Bool)
(declare-fun x2161 () Bool)
(declare-fun x671 () Int)
(declare-fun x6371 () Bool)
(declare-fun x2826 () Int)
(declare-fun x1329 () Bool)
(declare-fun x1012 () Int)
(declare-fun x1137 () x2192)
(declare-fun x4207 () Bool)
(declare-fun x5734 () Int)
(declare-fun x1371 () Int)
(declare-fun x3107 () Int)
(declare-fun x1154 () Bool)
(declare-fun x4750 () Bool)
(declare-fun x5864 () Int)
(declare-fun x688 () Bool)
(declare-fun x959 () Bool)
(declare-fun x4962 () Bool)
(declare-fun x6355 () Int)
(declare-fun x997 () Int)
(declare-fun x6104 () Int)
(declare-fun x6051 () Bool)
(declare-fun x6285 () Bool)
(declare-fun x5437 () Int)
(declare-fun x2783 () Bool)
(declare-fun x2025 () Bool)
(declare-fun x4579 () Int)
(declare-fun x5239 () Bool)
(declare-fun x1361 () Bool)
(declare-fun x737 () Bool)
(declare-fun x5636 () Bool)
(declare-fun x3314 () Int)
(declare-fun x3237 () Int)
(declare-fun x1446 (x2192) Int)
(declare-fun x1334 () Bool)
(declare-fun x2708 () Int)
(declare-fun x3028 () Bool)
(declare-fun x1203 () x2192)
(declare-fun x4248 () Bool)
(declare-fun x5966 () Bool)
(declare-fun x2170 () x2192)
(declare-fun x2058 () Bool)
(declare-fun x4821 () Int)
(declare-fun x4831 () Bool)
(declare-fun x5938 () Bool)
(declare-fun x4603 () Bool)
(declare-fun x3479 () Bool)
(declare-fun x2936 () Bool)
(declare-fun x2856 () Int)
(declare-fun x2680 () x2192)
(declare-fun x2819 () Bool)
(declare-fun x3324 () Bool)
(declare-fun x6207 () Int)
(declare-fun x1777 () Bool)
(declare-fun x5014 () Bool)
(declare-fun x4331 () Int)
(declare-fun x270 () Int)
(declare-fun x3823 () Bool)
(declare-fun x426 () Int)
(declare-fun x3275 () Bool)
(declare-fun x4100 () Bool)
(declare-fun x6246 () Bool)
(declare-fun x1772 () Bool)
(declare-fun x3665 () Bool)
(declare-fun x1706 () Bool)
(declare-fun x3497 () Int)
(declare-fun x5829 () Int)
(declare-fun x4286 () Bool)
(declare-fun x4617 () Int)
(declare-fun x2878 () Bool)
(declare-fun x60 () Bool)
(declare-fun x3690 () x2192)
(declare-fun x2280 () Int)
(declare-fun x5861 () x2192)
(declare-fun x927 () Bool)
(declare-fun x3419 () Bool)
(declare-fun x1621 () Int)
(declare-fun x2848 () Int)
(declare-fun x6276 () Bool)
(declare-fun x64 () x2192)
(declare-fun x3993 () Int)
(declare-fun x2209 () Bool)
(declare-fun x3609 () Int)
(declare-fun x2507 () Int)
(declare-fun x4682 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x4792 () Bool)
(declare-fun x3498 () Int)
(declare-fun x1985 () Int)
(declare-fun x1806 () Bool)
(declare-fun x3824 () Int)
(declare-fun x2044 (x2192) Int)
(declare-fun x3065 () Int)
(declare-fun x3401 () Bool)
(declare-fun x6297 () Int)
(declare-fun x3293 () Bool)
(declare-fun x3042 () Bool)
(declare-fun x1568 () Int)
(declare-fun x3992 () Int)
(declare-fun x3183 () x2192)
(declare-fun x5828 () Bool)
(declare-fun x3353 () Bool)
(declare-fun x6231 () Int)
(declare-fun x5335 () x2192)
(declare-fun x4480 (Int) Int)
(declare-fun x2483 () Bool)
(declare-fun x4422 () Int)
(declare-fun x1996 () Int)
(declare-fun x3427 () Int)
(declare-fun x3375 () Int)
(declare-fun x1927 () Int)
(declare-fun x1886 () Bool)
(declare-fun x424 () Bool)
(declare-fun x6001 () x2192)
(declare-fun x5825 () Bool)
(declare-fun x1964 () Bool)
(declare-fun x6273 () Bool)
(declare-fun x3029 () Int)
(declare-fun x5059 () Int)
(declare-fun x3833 () Bool)
(declare-fun x2075 () Bool)
(declare-fun x4744 () Int)
(declare-fun x3123 () Int)
(declare-fun x2853 () Bool)
(declare-fun x3280 () x2192)
(declare-fun x1079 () Int)
(declare-fun x2880 () Bool)
(declare-fun x1048 () Int)
(declare-fun x1837 () Bool)
(declare-fun x5383 () Bool)
(declare-fun x4133 () Bool)
(declare-fun x2877 () Int)
(declare-fun x4250 () Bool)
(declare-fun x3346 () Int)
(declare-fun x781 () Int)
(declare-fun x1734 () Int)
(declare-fun x2947 () x2192)
(declare-fun x1983 () Bool)
(declare-fun x5418 () Bool)
(declare-fun x3319 () Int)
(declare-fun x2745 () Bool)
(declare-fun x3581 () Bool)
(declare-fun x1963 () Int)
(declare-fun x5926 () Bool)
(declare-fun x4330 () Int)
(declare-fun x6315 () Bool)
(declare-fun x2756 () Bool)
(declare-fun x1260 () Int)
(declare-fun x2437 () Int)
(declare-fun x4144 () Bool)
(declare-fun x5098 () Bool)
(declare-fun x3744 () Bool)
(declare-fun x2988 () x2192)
(declare-fun x5263 () Bool)
(declare-fun x1001 () Bool)
(declare-fun x3659 () Bool)
(declare-fun x4804 () Bool)
(declare-fun x1129 () Int)
(declare-fun x3277 () Int)
(declare-fun x1469 () Int)
(declare-fun x955 () Bool)
(declare-fun x6394 () Int)
(declare-fun x4106 () Bool)
(declare-fun x386 () Bool)
(declare-fun x3656 () Int)
(declare-fun x6209 () Bool)
(declare-fun x5369 () x2192)
(declare-fun x5951 () Int)
(declare-fun x2008 () Int)
(declare-fun x3057 () Bool)
(declare-fun x3308 () Int)
(declare-fun x1123 () Bool)
(declare-fun x5366 () x2192)
(declare-fun x3192 () Bool)
(declare-fun x4715 () Bool)
(declare-fun x1918 () Bool)
(declare-fun x5998 () Int)
(declare-fun x4605 () Bool)
(declare-fun x2592 () Bool)
(declare-fun x3793 () Bool)
(declare-fun x1278 () Bool)
(declare-fun x5492 () Bool)
(declare-fun x3693 () Bool)
(declare-fun x212 () Bool)
(declare-fun x888 () Int)
(declare-fun x6139 () Int)
(declare-fun x4556 () Bool)
(declare-fun x2753 () Bool)
(declare-fun x6235 () Int)
(declare-fun x2307 () Int)
(declare-fun x1210 () Int)
(declare-fun x5462 () Bool)
(declare-fun x6242 () Int)
(declare-fun x4569 () Bool)
(declare-fun x1206 () Int)
(declare-fun x5289 () Bool)
(declare-fun x4975 () x2192)
(declare-fun x6068 () Int)
(declare-fun x3600 () Bool)
(declare-fun x2768 () Int)
(declare-fun x355 () Int)
(declare-fun x5957 () Bool)
(declare-fun x4764 () Int)
(declare-fun x4249 () Int)
(declare-fun x2041 () Bool)
(declare-fun x1867 () Bool)
(declare-fun x5826 () Bool)
(declare-fun x5618 () Int)
(declare-fun x5481 () Bool)
(declare-fun x3110 () Int)
(declare-fun x3973 () x2192)
(declare-fun x375 () Int)
(declare-fun x1168 () Bool)
(declare-fun x3653 () Int)
(declare-fun x1660 () Bool)
(declare-fun x4902 () Int)
(declare-fun x4800 () Bool)
(declare-fun x456 () x2192)
(declare-fun x1024 () Bool)
(declare-fun x2956 () Int)
(declare-fun x1691 () Bool)
(declare-fun x4143 () Int)
(declare-fun x2205 () Int)
(declare-fun x2864 () Int)
(declare-fun x2191 () Bool)
(declare-fun x6148 () Int)
(declare-fun x768 () Bool)
(declare-fun x5451 () Int)
(declare-fun x3250 () Bool)
(declare-fun x6241 () x2192)
(declare-fun x1652 () Bool)
(declare-fun x5133 () Bool)
(declare-fun x6204 () Bool)
(declare-fun x3889 () Bool)
(declare-fun x3131 () Bool)
(declare-fun x5231 () Int)
(declare-fun x2551 () Bool)
(declare-fun x651 () Bool)
(declare-fun x28 () Int)
(declare-fun x3004 () Bool)
(declare-fun x4530 () Bool)
(declare-fun x1569 () Int)
(declare-fun x3500 () Int)
(declare-fun x5099 () Bool)
(declare-fun x250 () Int)
(declare-fun x268 () Bool)
(declare-fun x3742 () Bool)
(declare-fun x6327 () Bool)
(declare-fun x3 () Bool)
(declare-fun x4384 () Bool)
(declare-fun x2283 () Bool)
(declare-fun x3261 () Bool)
(declare-fun x2424 () x2192)
(declare-fun x3563 () Bool)
(declare-fun x4725 () Bool)
(declare-fun x279 () Bool)
(declare-fun x1651 () Int)
(declare-fun x4616 () Int)
(declare-fun x784 () Int)
(declare-fun x1362 () Bool)
(declare-fun x5160 () Bool)
(declare-fun x5308 () Bool)
(declare-fun x2557 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x5070 () Bool)
(declare-fun x3007 () Bool)
(declare-fun x488 () Bool)
(declare-fun x2893 () Int)
(declare-fun x4000 () Bool)
(declare-fun x4714 () Bool)
(declare-fun x624 () Int)
(declare-fun x3201 () Bool)
(declare-fun x4618 () Int)
(declare-fun x2325 () Bool)
(declare-fun x5161 () Bool)
(declare-fun x5242 () x2192)
(declare-fun x1035 () Bool)
(declare-fun x4687 () Bool)
(declare-fun x1041 () Int)
(declare-fun x1620 () Int)
(declare-fun x4036 () Bool)
(declare-fun x5970 () Bool)
(declare-fun x4802 () Bool)
(declare-fun x3516 () Int)
(declare-fun x1674 () Int)
(declare-fun x5848 () Bool)
(declare-fun x471 () Bool)
(declare-fun x262 () Int)
(declare-fun x5797 () x2192)
(declare-fun x441 () x2192)
(declare-fun x253 () Int)
(declare-fun x599 () Bool)
(declare-fun x3467 () x2192)
(declare-fun x3284 () Int)
(declare-fun x673 () Bool)
(declare-fun x3466 () Int)
(declare-fun x6405 () Bool)
(declare-fun x5689 () Bool)
(declare-fun x4301 () Bool)
(declare-fun x4531 () Int)
(declare-fun x1345 () Int)
(declare-fun x4502 () Bool)
(declare-fun x3068 () Bool)
(declare-fun x5230 () Int)
(declare-fun x1860 () Int)
(declare-fun x3813 () Bool)
(declare-fun x431 () Int)
(declare-fun x3075 () Bool)
(declare-fun x1443 () Bool)
(declare-fun x4415 () Bool)
(declare-fun x1005 () Int)
(declare-fun x3849 () Bool)
(declare-fun x2479 () Int)
(declare-fun x4934 () Bool)
(declare-fun x12 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x272 () Int)
(declare-fun x948 () x2192)
(declare-fun x1767 () Int)
(declare-fun x6133 () Bool)
(declare-fun x6166 () Int)
(declare-fun x1573 () Bool)
(declare-fun x1038 (Int) Int)
(declare-fun x585 () Bool)
(declare-fun x3179 () Bool)
(declare-fun x1107 () Bool)
(declare-fun x2813 () Int)
(declare-fun x1117 () Int)
(declare-fun x4023 () x2192)
(declare-fun x3896 () Int)
(declare-fun x969 () Int)
(declare-fun x610 () Bool)
(declare-fun x2083 () Bool)
(declare-fun x6225 () Bool)
(declare-fun x5255 () Bool)
(declare-fun x4406 () x2192)
(declare-fun x432 (Int Int) Int)
(declare-fun x876 () Int)
(declare-fun x921 () Bool)
(declare-fun x584 () Int)
(declare-fun x1659 () Bool)
(declare-fun x6303 () Bool)
(declare-fun x883 () Bool)
(declare-fun x6085 () Int)
(declare-fun x5178 () Int)
(declare-fun x6000 () x2192)
(declare-fun x929 () Bool)
(declare-fun x6258 () Int)
(declare-fun x5874 () x2192)
(declare-fun x4987 () Int)
(declare-fun x773 () Int)
(declare-fun x3555 () Bool)
(declare-fun x6109 () Bool)
(declare-fun x1514 () Bool)
(declare-fun x4135 () Bool)
(declare-fun x2581 () Bool)
(declare-fun x1931 () Bool)
(declare-fun x2344 () Int)
(declare-fun x5840 () Bool)
(declare-fun x7 () Int)
(declare-fun x522 () Bool)
(declare-fun x4832 () Bool)
(declare-fun x3285 () Bool)
(declare-fun x393 () Int)
(declare-fun x3307 () Bool)
(declare-fun x1367 () Int)
(declare-fun x6341 () Bool)
(declare-fun x2837 () x2192)
(declare-fun x2991 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x1968 () Int)
(declare-fun x5285 () Bool)
(declare-fun x5294 () Bool)
(declare-fun x1045 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x5676 () Int)
(declare-fun x5616 () Bool)
(declare-fun x3023 () Bool)
(declare-fun x4165 () Int)
(declare-fun x983 () Int)
(declare-fun x5331 () Int)
(declare-fun x745 () Int)
(declare-fun x2629 () Bool)
(declare-fun x2447 () Bool)
(declare-fun x5673 () Bool)
(declare-fun x4880 () Bool)
(declare-fun x6212 () Bool)
(declare-fun x6108 () Bool)
(declare-fun x2135 () Bool)
(declare-fun x3297 () Bool)
(declare-fun x4933 () Int)
(declare-fun x1570 () Bool)
(declare-fun x4173 () Bool)
(declare-fun x5368 () x2192)
(declare-fun x2029 () Bool)
(declare-fun x5419 () Bool)
(declare-fun x5754 () Int)
(declare-fun x1771 () Int)
(declare-fun x4011 () Int)
(declare-fun x4287 () Int)
(declare-fun x5940 () Bool)
(declare-fun x507 () Int)
(declare-fun x3696 () Bool)
(declare-fun x6398 () Bool)
(declare-fun x4859 () Int)
(declare-fun x2120 () Bool)
(declare-fun x42 (Int) Int)
(declare-fun x4952 () Bool)
(declare-fun x2537 () Int)
(declare-fun x4768 () Bool)
(declare-fun x5723 () Bool)
(declare-fun x3336 () Bool)
(declare-fun x2522 () Bool)
(declare-fun x3404 () Bool)
(declare-fun x3003 () x2192)
(declare-fun x2797 () Int)
(declare-fun x3488 () Bool)
(declare-fun x3789 () Int)
(declare-fun x3322 () Int)
(declare-fun x2246 () Bool)
(declare-fun x5226 () Int)
(declare-fun x2394 () x2192)
(declare-fun x4104 () Bool)
(declare-fun x2397 () Bool)
(declare-fun x1746 () Int)
(declare-fun x1505 () Bool)
(declare-fun x194 () Bool)
(declare-fun x142 () Bool)
(declare-fun x1500 () Int)
(declare-fun x928 () Bool)
(declare-fun x5056 () Int)
(declare-fun x4481 () x2192)
(declare-fun x2725 () Int)
(declare-fun x1193 () x2192)
(declare-fun x6302 () Int)
(declare-fun x6160 () Bool)
(declare-fun x5200 () Bool)
(declare-fun x6275 () Bool)
(declare-fun x2916 () x2192)
(declare-fun x3073 () Bool)
(declare-fun x1741 () Bool)
(declare-fun x4276 () x2192)
(declare-fun x4478 () Bool)
(declare-fun x2438 () Bool)
(declare-fun x1756 () Bool)
(declare-fun x4710 () x2192)
(declare-fun x1039 () x2192)
(declare-fun x335 () Int)
(declare-fun x6087 () Bool)
(declare-fun x154 () Bool)
(declare-fun x5035 () Bool)
(declare-fun x3163 () Bool)
(declare-fun x3755 () Int)
(declare-fun x6264 () Bool)
(declare-fun x178 () Bool)
(declare-fun x561 () Int)
(declare-fun x6179 () x2192)
(declare-fun x6370 () Int)
(declare-fun x1624 () x2192)
(declare-fun x1530 () x2192)
(declare-fun x1688 () Int)
(declare-fun x1502 () Int)
(declare-fun x4540 () Bool)
(declare-fun x4516 () Bool)
(declare-fun x4787 () Bool)
(declare-fun x4565 () Bool)
(declare-fun x4131 () Bool)
(declare-fun x882 () Bool)
(declare-fun x1554 () Bool)
(declare-fun x186 () x2192)
(declare-fun x2245 () Int)
(declare-fun x4394 () Int)
(declare-fun x4029 () Int)
(declare-fun x6131 () Bool)
(declare-fun x4078 () Bool)
(declare-fun x3910 () Int)
(declare-fun x4202 () Bool)
(declare-fun x3414 () Bool)
(declare-fun x2925 () Bool)
(declare-fun x3784 () Int)
(declare-fun x2876 () Bool)
(declare-fun x247 () Bool)
(declare-fun x1859 () Int)
(declare-fun x366 () x2192)
(declare-fun x5314 () x2192)
(declare-fun x4351 () Int)
(declare-fun x3671 () Bool)
(declare-fun x3115 () Int)
(declare-fun x1453 () Int)
(declare-fun x5197 () Int)
(declare-fun x104 () Int)
(declare-fun x4226 () Bool)
(declare-fun x38 () Bool)
(declare-fun x4305 () Bool)
(declare-fun x4018 () x2192)
(declare-fun x986 () Bool)
(declare-fun x4107 () x2192)
(declare-fun x1468 () Bool)
(declare-fun x302 () x2192)
(declare-fun x2803 () Int)
(declare-fun x4325 () Int)
(declare-fun x6278 () Bool)
(declare-fun x4519 () Bool)
(declare-fun x437 () Bool)
(declare-fun x4380 () Int)
(declare-fun x694 () Int)
(declare-fun x6011 () Int)
(declare-fun x1387 () Bool)
(declare-fun x4515 () Bool)
(declare-fun x2544 () Int)
(declare-fun x2227 () x2192)
(declare-fun x4872 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x3612 () Bool)
(declare-fun x5522 () Int)
(declare-fun x6422 () Int)
(declare-fun x3870 () Int)
(declare-fun x699 () Bool)
(declare-fun x3619 () Bool)
(declare-fun x422 () Int)
(declare-fun x2376 () Bool)
(declare-fun x4119 () Bool)
(declare-fun x2726 () Bool)
(declare-fun x2852 () Int)
(declare-fun x3967 () Bool)
(declare-fun x2795 () Int)
(declare-fun x80 () Bool)
(declare-fun x4756 () Int)
(declare-fun x2636 () Int)
(declare-fun x2458 () Bool)
(declare-fun x2879 () Int)
(declare-fun x2387 () Bool)
(declare-fun x2242 () Bool)
(declare-fun x2433 () Bool)
(declare-fun x3025 () Int)
(declare-fun x2239 () Bool)
(declare-fun x4065 () Int)
(declare-fun x4206 () Bool)
(declare-fun x3180 () Bool)
(declare-fun x2842 () Bool)
(declare-fun x6061 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x3771 () Bool)
(declare-fun x2180 () Bool)
(declare-fun x1776 () Bool)
(declare-fun x4623 () Bool)
(declare-fun x99 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x6250 () Bool)
(declare-fun x5687 () Bool)
(declare-fun x5317 () Bool)
(declare-fun x1490 () Bool)
(declare-fun x3909 () Bool)
(declare-fun x4544 () Bool)
(declare-fun x6363 (Int) Int)
(declare-fun x5233 () Bool)
(declare-fun x1539 () Bool)
(declare-fun x5489 () Int)
(declare-fun x6184 () x2192)
(declare-fun x5619 () Int)
(declare-fun x5304 () Bool)
(declare-fun x4209 () Int)
(declare-fun x131 () Int)
(declare-fun x5588 () Bool)
(declare-fun x5570 () Bool)
(declare-fun x3359 () Bool)
(declare-fun x3449 () Bool)
(declare-fun x4518 () Int)
(declare-fun x3530 () x2192)
(declare-fun x1233 () Int)
(declare-fun x740 () Bool)
(declare-fun x1608 () x2192)
(declare-fun x3171 () Bool)
(declare-fun x3002 () Bool)
(declare-fun x2425 () Bool)
(declare-fun x1853 () Bool)
(declare-fun x824 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x5854 () Int)
(declare-fun x4917 () Bool)
(declare-fun x2817 () Int)
(declare-fun x66 () Bool)
(declare-fun x2296 () Int)
(declare-fun x3888 () Int)
(declare-fun x1844 () Int)
(declare-fun x1398 () Bool)
(declare-fun x769 () Int)
(declare-fun x4826 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x6151 () Bool)
(declare-fun x1774 () Int)
(declare-fun x6348 () Int)
(declare-fun x4809 () Bool)
(declare-fun x6346 () Int)
(declare-fun x3611 () Bool)
(declare-fun x6254 () x2192)
(declare-fun x2187 (Int) Int)
(declare-fun x2651 () Int)
(declare-fun x3286 () Bool)
(declare-fun x3385 (Int) Int)
(declare-fun x98 () Bool)
(declare-fun x2436 () Int)
(declare-fun x3161 () x2192)
(declare-fun x5746 () Bool)
(declare-fun x5513 () Int)
(declare-fun x5794 () Int)
(declare-fun x5296 (x2192) Int)
(declare-fun x5817 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x1833 () x2192)
(declare-fun x6384 () Bool)
(declare-fun x3364 () Bool)
(declare-fun x6423 () x2192)
(declare-fun x5488 () Bool)
(declare-fun x4266 () Bool)
(declare-fun x5699 () Int)
(declare-fun x2104 () Int)
(declare-fun x5671 () Bool)
(declare-fun x4298 () Int)
(declare-fun x1120 () Bool)
(declare-fun x3147 () Bool)
(declare-fun x6390 () Bool)
(declare-fun x695 () Bool)
(declare-fun x5154 () Int)
(declare-fun x3013 () Bool)
(declare-fun x980 () Bool)
(declare-fun x5552 () Bool)
(declare-fun x2299 () Int)
(declare-fun x3367 () Bool)
(declare-fun x1905 () x2192)
(declare-fun x2378 () Bool)
(declare-fun x4606 () Bool)
(declare-fun x5905 () Bool)
(declare-fun x1765 () x2192)
(declare-fun x5466 () x2192)
(declare-fun x2199 () Bool)
(declare-fun x2816 () Int)
(declare-fun x2914 () Int)
(declare-fun x4199 () Bool)
(declare-fun x5983 () Bool)
(declare-fun x2030 () Bool)
(declare-fun x1508 () Bool)
(declare-fun x3666 () x2192)
(declare-fun x3478 () Int)
(declare-fun x1512 () Bool)
(declare-fun x2778 () Bool)
(declare-fun x5193 () Int)
(declare-fun x1343 () Bool)
(declare-fun x3774 () Bool)
(declare-fun x5266 () Bool)
(declare-fun x3820 () Bool)
(declare-fun x5119 () Bool)
(declare-fun x1838 () Bool)
(declare-fun x5709 () x2192)
(declare-fun x3704 () Bool)
(declare-fun x3826 () x2192)
(declare-fun x884 () Int)
(declare-fun x1722 () Bool)
(declare-fun x3974 () Int)
(declare-fun x4436 () Bool)
(declare-fun x314 () Int)
(declare-fun x3119 () Bool)
(declare-fun x1712 () Int)
(declare-fun x1430 () Int)
(declare-fun x2405 (x2192) Int)
(declare-fun x4093 () Bool)
(declare-fun x4509 () Bool)
(declare-fun x705 () Int)
(declare-fun x5779 () Bool)
(declare-fun x2301 () Bool)
(declare-fun x938 () Int)
(declare-fun x3176 () Int)
(declare-fun x3736 () Bool)
(declare-fun x5476 () Bool)
(declare-fun x2593 () Bool)
(declare-fun x5606 () Int)
(declare-fun x2833 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x2206 () Bool)
(declare-fun x4876 () x2192)
(declare-fun x520 () Bool)
(declare-fun x3927 () x2192)
(declare-fun x238 () Int)
(declare-fun x6287 () Bool)
(declare-fun x3955 () Int)
(declare-fun x591 () Bool)
(declare-fun x3213 () Int)
(declare-fun x1631 () Bool)
(declare-fun x3418 () Int)
(declare-fun x4609 () Bool)
(declare-fun x5395 () Bool)
(declare-fun x1975 () Int)
(declare-fun x2298 () Bool)
(declare-fun x6049 () Int)
(declare-fun x2148 () Bool)
(declare-fun x5414 () Bool)
(declare-fun x2990 () Bool)
(declare-fun x4243 () Int)
(declare-fun x2386 () Bool)
(declare-fun x368 () x2192)
(declare-fun x2043 () Int)
(declare-fun x1686 () Int)
(declare-fun x2031 () Bool)
(declare-fun x4274 () Int)
(declare-fun x2272 () Bool)
(declare-fun x793 () Bool)
(declare-fun x2485 () Int)
(declare-fun x1214 () Int)
(declare-fun x1127 () Bool)
(declare-fun x2278 () Int)
(declare-fun x4629 () Bool)
(declare-fun x1885 () Bool)
(declare-fun x2417 () Bool)
(declare-fun x3971 () Int)
(declare-fun x2851 () x2192)
(declare-fun x16 () Bool)
(declare-fun x1023 () Int)
(declare-fun x4179 () x2192)
(declare-fun x5835 () Bool)
(declare-fun x3515 () Bool)
(declare-fun x1731 () Int)
(declare-fun x184 (Int) Int)
(declare-fun x5524 () Int)
(declare-fun x3384 () Int)
(declare-fun x274 () Int)
(declare-fun x1465 () Bool)
(declare-fun x1710 () Int)
(declare-fun x494 () Int)
(declare-fun x4523 () Int)
(declare-fun x4755 () Bool)
(declare-fun x5927 () Bool)
(declare-fun x6386 () Bool)
(declare-fun x5560 () Bool)
(declare-fun x5468 () Bool)
(declare-fun x1960 () Int)
(declare-fun x4568 () Bool)
(declare-fun x3796 () Bool)
(declare-fun x4953 () Int)
(declare-fun x3337 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x825 () x2192)
(declare-fun x3631 () Int)
(declare-fun x1122 () Int)
(declare-fun x4407 () Bool)
(declare-fun x5237 () Int)
(declare-fun x1466 () x2192)
(declare-fun x5752 () Int)
(declare-fun x3722 () x2192)
(declare-fun x5968 () Bool)
(declare-fun x1044 () x2192)
(declare-fun x1238 () Bool)
(declare-fun x4708 () Bool)
(declare-fun x3553 () Bool)
(declare-fun x2147 () Int)
(declare-fun x858 () Bool)
(declare-fun x3937 () Bool)
(declare-fun x713 () Int)
(declare-fun x2942 () Bool)
(declare-fun x2973 () Int)
(declare-fun x1974 () Int)
(declare-fun x121 () Int)
(declare-fun x3248 () Bool)
(declare-fun x3463 () Bool)
(declare-fun x4122 () Int)
(declare-fun x3685 () Bool)
(declare-fun x4705 () Bool)
(declare-fun x2099 () Int)
(declare-fun x271 () Bool)
(declare-fun x4193 () Bool)
(declare-fun x4386 () Int)
(declare-fun x1841 () x2192)
(declare-fun x5446 () Int)
(declare-fun x5912 () Bool)
(declare-fun x1817 () Bool)
(declare-fun x412 () Int)
(declare-fun x4388 () Int)
(declare-fun x3030 () Int)
(declare-fun x5444 () Int)
(declare-fun x2612 () Int)
(declare-fun x1419 () Int)
(declare-fun x2980 () Int)
(declare-fun x4754 () Bool)
(declare-fun x4989 () Int)
(declare-fun x2565 () Bool)
(declare-fun x1835 () Bool)
(declare-fun x3117 () Bool)
(declare-fun x5497 () Bool)
(declare-fun x5021 () x2192)
(declare-fun x2542 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x4474 () Bool)
(declare-fun x4837 () Bool)
(declare-fun x4972 () Bool)
(declare-fun x2426 () Int)
(declare-fun x1426 () Int)
(declare-fun x3249 () Bool)
(declare-fun x232 () Int)
(declare-fun x963 () Bool)
(declare-fun x1315 () x2192)
(declare-fun x4417 () Bool)
(declare-fun x5252 () Bool)
(declare-fun x6407 () Bool)
(declare-fun x567 () Bool)
(declare-fun x2747 () Int)
(declare-fun x318 () x2192)
(declare-fun x1658 () Bool)
(declare-fun x6074 () Bool)
(declare-fun x1632 () Int)
(declare-fun x2740 () Int)
(declare-fun x83 (Int) Int)
(declare-fun x5741 () Int)
(declare-fun x2741 () Int)
(declare-fun x3521 () x2192)
(declare-fun x2089 () Bool)
(declare-fun x1951 () Int)
(declare-fun x1597 () Int)
(declare-fun x5277 () Bool)
(declare-fun x2862 () Bool)
(declare-fun x5365 () Bool)
(declare-fun x5851 () Int)
(declare-fun x2822 () Int)
(declare-fun x3153 () Bool)
(declare-fun x1101 () x2192)
(declare-fun x3087 () Bool)
(declare-fun x6428 () Int)
(declare-fun x6170 () Bool)
(declare-fun x2761 () Int)
(declare-fun x912 () Int)
(declare-fun x6414 () Bool)
(declare-fun x63 () Int)
(declare-fun x559 () Bool)
(declare-fun x1993 () Bool)
(declare-fun x2060 () Int)
(declare-fun x2642 () Bool)
(declare-fun x5781 () Bool)
(declare-fun x3457 () Bool)
(declare-fun x3587 () Int)
(declare-fun x778 () Bool)
(declare-fun x1582 () Bool)
(declare-fun x877 () Bool)
(declare-fun x5542 () Int)
(declare-fun x3174 () Int)
(declare-fun x5112 () Bool)
(declare-fun x4471 () Int)
(declare-fun x630 () Int)
(declare-fun x3001 () Int)
(declare-fun x1425 () x2192)
(declare-fun x473 () Bool)
(declare-fun x2777 () Int)
(declare-fun x6362 () Bool)
(declare-fun x5932 () Int)
(declare-fun x726 () Int)
(declare-fun x2987 () Bool)
(declare-fun x4361 () Int)
(declare-fun x402 () x2192)
(declare-fun x2748 () Int)
(declare-fun x1626 () Int)
(declare-fun x2124 () Bool)
(declare-fun x4843 () Int)
(declare-fun x209 () Bool)
(declare-fun x6251 () Bool)
(declare-fun x5742 () Int)
(declare-fun x5929 () Bool)
(declare-fun x5694 () Bool)
(declare-fun x1648 () Int)
(declare-fun x4871 () Bool)
(declare-fun x5434 () Bool)
(declare-fun x1553 () Bool)
(declare-fun x3528 () Bool)
(declare-fun x6380 () Int)
(declare-fun x6426 () Int)
(declare-fun x2918 () Int)
(declare-fun x3822 () Int)
(declare-fun x4577 () Int)
(declare-fun x43 () Int)
(declare-fun x6065 () Bool)
(declare-fun x5770 () Int)
(declare-fun x1308 () x2192)
(declare-fun x4652 () Bool)
(declare-fun x6314 () Bool)
(declare-fun x1653 () Int)
(declare-fun x1252 () Bool)
(declare-fun x1721 () Int)
(declare-fun x4982 () Int)
(declare-fun x3913 () Bool)
(declare-fun x1551 () Int)
(declare-fun x13 () Int)
(declare-fun x730 () Int)
(declare-fun x1643 () Bool)
(declare-fun x5865 () Int)
(declare-fun x231 () Bool)
(declare-fun x1698 () Int)
(declare-fun x4672 () Int)
(declare-fun x1125 () Int)
(declare-fun x5554 () Int)
(declare-fun x5184 () Bool)
(declare-fun x4704 () Bool)
(declare-fun x5569 () Bool)
(declare-fun x3519 () Bool)
(declare-fun x5679 () Bool)
(declare-fun x6283 () Bool)
(declare-fun x425 () Bool)
(declare-fun x3966 () Bool)
(declare-fun x5982 () Int)
(declare-fun x1124 () Bool)
(declare-fun x5159 () Int)
(declare-fun x75 () Bool)
(declare-fun x4281 () Int)
(declare-fun x4969 () x2192)
(declare-fun x6023 () x2192)
(declare-fun x2118 () Int)
(declare-fun x4645 () Int)
(declare-fun x1029 () Int)
(declare-fun x4462 () Int)
(declare-fun x2939 () Bool)
(declare-fun x5563 () x2192)
(declare-fun x2162 () Int)
(declare-fun x1623 () Int)
(declare-fun x3871 () Int)
(declare-fun x853 () Int)
(declare-fun x839 () Bool)
(declare-fun x5580 () Bool)
(declare-fun x4992 () Int)
(declare-fun x2874 () Bool)
(declare-fun x2731 () x2192)
(declare-fun x1852 () Int)
(declare-fun x306 () Bool)
(declare-fun x2521 () x2192)
(declare-fun x739 () Bool)
(declare-fun x1638 () Int)
(declare-fun x3808 () Bool)
(declare-fun x4418 (Int) Int)
(declare-fun x5044 () Int)
(declare-fun x5813 () Bool)
(declare-fun x4858 () Bool)
(declare-fun x2293 () Int)
(declare-fun x5292 () Bool)
(declare-fun x5218 () Int)
(declare-fun x2254 () Bool)
(declare-fun x4225 () Int)
(declare-fun x2261 () Bool)
(declare-fun x2502 () x2192)
(declare-fun x1126 () Int)
(declare-fun x626 () Bool)
(declare-fun x5705 () Bool)
(declare-fun x309 () Int)
(declare-fun x303 () Int)
(declare-fun x854 () Bool)
(declare-fun x5868 () Bool)
(declare-fun x5405 () Int)
(declare-fun x1625 () Bool)
(declare-fun x899 () Int)
(declare-fun x5176 () Bool)
(declare-fun x4801 () Bool)
(declare-fun x593 () Bool)
(declare-fun x2926 () Bool)
(declare-fun x3246 () Int)
(declare-fun x2661 () Int)
(declare-fun x285 () Bool)
(declare-fun x5505 () Int)
(declare-fun x2920 () Bool)
(declare-fun x3645 () Int)
(declare-fun x2599 () Int)
(declare-fun x4410 () Int)
(declare-fun x3321 (x2192) Int)
(declare-fun x4881 () Int)
(declare-fun x1633 () Int)
(declare-fun x4363 () Int)
(declare-fun x1232 () Bool)
(declare-fun x169 () Int)
(declare-fun x5190 () Int)
(declare-fun x5167 () x2192)
(declare-fun x1229 () Bool)
(declare-fun x466 () Int)
(declare-fun x2339 () Int)
(declare-fun x2080 () Bool)
(declare-fun x5212 () x2192)
(declare-fun x3644 () Bool)
(declare-fun x3942 () Int)
(declare-fun x1541 () x2192)
(declare-fun x3313 () Int)
(declare-fun x2724 () Int)
(declare-fun x636 () Bool)
(declare-fun x5849 () Int)
(declare-fun x5078 () Bool)
(declare-fun x1921 () Int)
(declare-fun x1932 (Int) Int)
(declare-fun x4338 () Bool)
(declare-fun x4507 (Int) Int)
(declare-fun x6400 () Int)
(declare-fun x267 () Int)
(declare-fun x4345 () Int)
(declare-fun x2279 () Int)
(declare-fun x3988 () Bool)
(declare-fun x570 () Int)
(declare-fun x3975 () Bool)
(declare-fun x5499 () Bool)
(declare-fun x3962 () Int)
(declare-fun x3963 () Bool)
(declare-fun x4252 () Bool)
(declare-fun x6284 () Bool)
(declare-fun x5783 () Int)
(declare-fun x6431 () Int)
(declare-fun x4763 () Int)
(declare-fun x1325 () Int)
(declare-fun x2145 () Bool)
(declare-fun x3062 () Bool)
(declare-fun x4646 () Bool)
(declare-fun x2203 () Bool)
(declare-fun x5123 () Int)
(declare-fun x1336 () Bool)
(declare-fun x2611 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x4038 () Bool)
(declare-fun x2158 () Int)
(declare-fun x3112 () Bool)
(declare-fun x611 () Int)
(declare-fun x2196 () Bool)
(declare-fun x660 () Int)
(declare-fun x2020 () Int)
(declare-fun x2870 () x2192)
(declare-fun x4087 () Int)
(declare-fun x483 () Bool)
(declare-fun x5788 () Bool)
(declare-fun x4932 () Bool)
(declare-fun x5846 () Int)
(declare-fun x4349 () Bool)
(declare-fun x5750 (Int Int) Int)
(declare-fun x2681 () Bool)
(declare-fun x265 () Bool)
(declare-fun x3165 () Bool)
(declare-fun x5478 () x2192)
(declare-fun x2391 () Bool)
(declare-fun x3583 () Int)
(declare-fun x684 () Bool)
(declare-fun x2066 () Bool)
(declare-fun x6267 () Int)
(declare-fun x1061 () Int)
(declare-fun x3678 () Bool)
(declare-fun x158 () Int)
(declare-fun x4726 () Int)
(declare-fun x4045 () x2192)
(declare-fun x2530 () Bool)
(declare-fun x3340 () Bool)
(declare-fun x788 () Bool)
(declare-fun x3838 () Bool)
(declare-fun x2814 () Bool)
(declare-fun x2904 () Bool)
(declare-fun x6410 () Bool)
(declare-fun x2185 () Bool)
(declare-fun x3298 () Int)
(declare-fun x3635 () Int)
(declare-fun x116 () Bool)
(declare-fun x1798 () Int)
(declare-fun x5615 () Int)
(declare-fun x6115 () Int)
(declare-fun x649 () Bool)
(declare-fun x4423 () Int)
(declare-fun x6415 () Int)
(declare-fun x3660 () Bool)
(declare-fun x505 () x2192)
(declare-fun x1437 () Bool)
(declare-fun x3276 () Bool)
(declare-fun x2679 () Int)
(declare-fun x3873 () Int)
(declare-fun x1615 () Bool)
(declare-fun x2919 () Bool)
(declare-fun x6006 () Bool)
(declare-fun x5740 () Bool)
(declare-fun x5342 () Bool)
(declare-fun x3724 () Bool)
(declare-fun x785 () Bool)
(declare-fun x2467 () Bool)
(declare-fun x4637 () Int)
(declare-fun x1703 () Int)
(declare-fun x4470 () Int)
(declare-fun x6425 () Bool)
(declare-fun x577 (x2192) Int)
(declare-fun x5129 () Int)
(declare-fun x5501 () Int)
(declare-fun x126 () Int)
(declare-fun x605 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x3720 () Bool)
(declare-fun x3091 () Bool)
(declare-fun x668 () Int)
(declare-fun x1249 () Int)
(declare-fun x4869 () Int)
(declare-fun x2751 () Bool)
(declare-fun x1788 () Bool)
(declare-fun x6021 () Bool)
(declare-fun x380 () Bool)
(declare-fun x4486 () Bool)
(declare-fun x6382 () Bool)
(declare-fun x4666 () Int)
(declare-fun x4633 () Bool)
(declare-fun x3290 () Bool)
(declare-fun x1108 () x2192)
(declare-fun x2385 () Bool)
(declare-fun x1811 () Bool)
(declare-fun x4467 () Bool)
(declare-fun x2068 () Bool)
(declare-fun x1066 () x2192)
(declare-fun x4745 () Int)
(declare-fun x5 () Bool)
(declare-fun x1522 () Bool)
(declare-fun x5605 () Int)
(declare-fun x4918 () Bool)
(declare-fun x6361 () Bool)
(declare-fun x2912 () Bool)
(declare-fun x5443 () Bool)
(declare-fun x3092 () Int)
(declare-fun x436 () Bool)
(declare-fun x4653 () Bool)
(declare-fun x4946 () x2192)
(declare-fun x2788 () x2192)
(declare-fun x530 () Int)
(declare-fun x1183 () x2192)
(declare-fun x4263 () Int)
(declare-fun x2032 () Bool)
(declare-fun x4913 () Int)
(declare-fun x6226 () Bool)
(declare-fun x5428 () Bool)
(declare-fun x2676 () Int)
(declare-fun x5066 () Bool)
(declare-fun x3682 () x2192)
(declare-fun x6412 () Int)
(declare-fun x4924 () Bool)
(declare-fun x4525 () x2192)
(declare-fun x1332 () Int)
(declare-fun x2171 () Bool)
(declare-fun x3197 () Bool)
(declare-fun x5546 () Bool)
(declare-fun x2979 () Bool)
(declare-fun x20 () Int)
(declare-fun x3848 () Int)
(declare-fun x1487 () Bool)
(declare-fun x6168 () Bool)
(declare-fun x4939 () Int)
(declare-fun x5411 () Bool)
(declare-fun x4429 () Int)
(declare-fun x531 () Bool)
(declare-fun x2466 () Bool)
(declare-fun x4863 () Int)
(declare-fun x4431 () Int)
(declare-fun x1340 () Bool)
(declare-fun x701 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x10 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x444 () Int)
(declare-fun x1743 () Bool)
(declare-fun x5532 () Int)
(declare-fun x4543 () Bool)
(declare-fun x5265 () Bool)
(declare-fun x81 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x796 () Int)
(declare-fun x347 () Bool)
(declare-fun x6152 () x2192)
(declare-fun x346 () Int)
(declare-fun x3526 () Int)
(declare-fun x3673 () Int)
(declare-fun x5149 () Int)
(declare-fun x134 () Int)
(declare-fun x2343 () Int)
(declare-fun x3255 () Bool)
(declare-fun x251 () Int)
(declare-fun x5196 () Bool)
(declare-fun x2934 () Bool)
(declare-fun x2294 () Int)
(declare-fun x3621 () Int)
(declare-fun x1607 () Bool)
(declare-fun x6027 () Int)
(declare-fun x5281 () Bool)
(declare-fun x159 () Int)
(declare-fun x1130 () Bool)
(declare-fun x2212 () x2192)
(declare-fun x4877 () Bool)
(declare-fun x5484 () Int)
(declare-fun x5955 () Int)
(declare-fun x119 () Int)
(declare-fun x2873 () Int)
(declare-fun x1405 () Int)
(declare-fun x107 () Int)
(declare-fun x2481 () x2192)
(declare-fun x4720 () Bool)
(declare-fun x2888 () Bool)
(declare-fun x496 () Int)
(declare-fun x4083 () x2192)
(declare-fun x1526 () Bool)
(declare-fun x2929 () Bool)
(declare-fun x2005 () Bool)
(declare-fun x4964 () Bool)
(declare-fun x4597 () Bool)
(declare-fun x6311 () Bool)
(declare-fun x4712 () Bool)
(declare-fun x4500 () Bool)
(declare-fun x3502 () Int)
(declare-fun x612 () Bool)
(declare-fun x5924 () Bool)
(declare-fun x339 (Int) Int)
(declare-fun x872 () x2192)
(declare-fun x183 () Int)
(declare-fun x3916 () Bool)
(declare-fun x529 () Bool)
(declare-fun x1976 () Bool)
(declare-fun x3465 () Int)
(declare-fun x207 () Bool)
(declare-fun x2312 () Bool)
(declare-fun x4273 () Bool)
(declare-fun x5961 () Bool)
(declare-fun x5931 () Int)
(declare-fun x837 () Int)
(declare-fun x3489 () Int)
(declare-fun x3546 () Bool)
(declare-fun x5047 () Bool)
(declare-fun x4141 () Int)
(declare-fun x5744 () Bool)
(declare-fun x2775 () Int)
(declare-fun x4961 () Bool)
(declare-fun x4647 () Int)
(declare-fun x167 () Int)
(declare-fun x3933 () Bool)
(declare-fun x1179 () Bool)
(declare-fun x1084 () Int)
(declare-fun x2683 () Int)
(declare-fun x5267 () Bool)
(declare-fun x4451 () Int)
(declare-fun x495 () Bool)
(declare-fun x2588 () Bool)
(declare-fun x449 () Bool)
(declare-fun x1848 () Bool)
(declare-fun x5652 () x2192)
(declare-fun x3899 () Int)
(declare-fun x1459 () Int)
(declare-fun x4943 () Int)
(declare-fun x3253 () Int)
(declare-fun x1517 () x2192)
(declare-fun x4737 () Int)
(declare-fun x252 () Bool)
(declare-fun x3403 () Bool)
(declare-fun x4454 () Bool)
(declare-fun x2123 () Bool)
(declare-fun x4799 () Int)
(declare-fun x6155 () Int)
(declare-fun x2208 () Bool)
(declare-fun x6046 () Bool)
(declare-fun x682 () Bool)
(declare-fun x139 () Bool)
(declare-fun x2327 () Bool)
(declare-fun x3061 () Bool)
(declare-fun x6379 () Bool)
(declare-fun x1100 () Int)
(declare-fun x6008 () Bool)
(declare-fun x5853 () Int)
(declare-fun x548 () x2192)
(declare-fun x5135 () x2192)
(declare-fun x659 () Bool)
(declare-fun x5114 () Bool)
(declare-fun x2789 () Int)
(declare-fun x1002 () Bool)
(declare-fun x8 () Int)
(declare-fun x3748 () x2192)
(declare-fun x4211 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x4275 () Bool)
(declare-fun x4074 () Int)
(declare-fun x5427 () Bool)
(declare-fun x3664 () Bool)
(declare-fun x4261 () Int)
(declare-fun x3756 () Bool)
(declare-fun x5822 () Bool)
(declare-fun x1728 () Bool)
(declare-fun x3392 () Bool)
(declare-fun x1956 () Bool)
(declare-fun x5571 () Bool)
(declare-fun x2821 () Bool)
(declare-fun x4303 () Bool)
(declare-fun x153 () x2192)
(declare-fun x4539 () Int)
(declare-fun x4938 () Int)
(declare-fun x1511 () Bool)
(declare-fun x3108 () Bool)
(declare-fun x2960 () Bool)
(declare-fun x3593 () Int)
(declare-fun x137 () Int)
(declare-fun x6105 () Bool)
(declare-fun x221 () Bool)
(declare-fun x3895 () x2192)
(declare-fun x5820 () Bool)
(declare-fun x3852 () Bool)
(declare-fun x5300 () Int)
(declare-fun x5879 () Int)
(declare-fun x5459 () Bool)
(declare-fun x4476 () Int)
(declare-fun x3124 () Int)
(declare-fun x89 () Int)
(declare-fun x6069 () Bool)
(declare-fun x5168 () Bool)
(declare-fun x4368 () x2192)
(declare-fun x3471 () Bool)
(declare-fun x70 () Int)
(declare-fun x3636 () Bool)
(declare-fun x4428 () Int)
(declare-fun x3409 () Bool)
(declare-fun x2077 () Int)
(declare-fun x3634 () Bool)
(declare-fun x4262 () Int)
(declare-fun x372 () Bool)
(declare-fun x3506 () Int)
(declare-fun x5692 () Bool)
(declare-fun x3757 () Int)
(declare-fun x1151 () Int)
(declare-fun x1719 () x2192)
(declare-fun x6214 () Int)
(declare-fun x3264 () Int)
(declare-fun x1819 () Int)
(declare-fun x5185 () Bool)
(declare-fun x3210 () Int)
(declare-fun x191 () Bool)
(declare-fun x2628 () Int)
(declare-fun x5867 () Bool)
(declare-fun x2895 () x2192)
(declare-fun x1646 () Int)
(declare-fun x5018 () Bool)
(declare-fun x5407 () Bool)
(declare-fun x650 () x2192)
(declare-fun x4766 () Bool)
(declare-fun x1724 () Bool)
(declare-fun x6342 () Bool)
(declare-fun x2012 () Bool)
(declare-fun x4805 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x2109 () Bool)
(declare-fun x4690 () Int)
(declare-fun x1153 () Bool)
(declare-fun x573 () Bool)
(declare-fun x54 () Int)
(declare-fun x834 () Bool)
(declare-fun x2271 () Int)
(declare-fun x29 () Bool)
(declare-fun x4014 () Bool)
(declare-fun x4456 () Bool)
(declare-fun x3039 () x2192)
(declare-fun x1239 () Bool)
(declare-fun x5494 () Int)
(declare-fun x5209 () Int)
(declare-fun x1880 (x2192) Int)
(declare-fun x3460 () Bool)
(declare-fun x1259 () Int)
(declare-fun x581 () Bool)
(declare-fun x4674 () Int)
(declare-fun x5762 () Bool)
(declare-fun x2556 () Int)
(declare-fun x2712 () Bool)
(declare-fun x3122 () Int)
(declare-fun x553 () x2192)
(declare-fun x4642 () Bool)
(declare-fun x911 () Bool)
(declare-fun x34 () Int)
(declare-fun x5911 () Bool)
(declare-fun x5530 () Bool)
(declare-fun x5561 () Bool)
(declare-fun x3311 () Int)
(declare-fun x5523 () Bool)
(declare-fun x3047 () Bool)
(declare-fun x27 () Bool)
(declare-fun x3863 () Bool)
(declare-fun x3559 () Bool)
(declare-fun x3435 () x2192)
(declare-fun x3936 () Bool)
(declare-fun x4446 () Bool)
(declare-fun x1286 () Int)
(declare-fun x4506 () Bool)
(declare-fun x3015 () Bool)
(declare-fun x1735 () Int)
(declare-fun x3816 () Bool)
(declare-fun x2798 () Bool)
(declare-fun x1784 () Bool)
(declare-fun x3801 () Int)
(declare-fun x373 () Int)
(declare-fun x3712 () Bool)
(declare-fun x5584 () Int)
(declare-fun x3776 () Bool)
(declare-fun x3111 () Bool)
(declare-fun x312 () x2192)
(declare-fun x1226 () x2192)
(declare-fun x5282 () Bool)
(declare-fun x873 () Int)
(declare-fun x685 () Bool)
(declare-fun x3482 () x2192)
(declare-fun x878 () Bool)
(declare-fun x552 () Int)
(declare-fun x4086 () Bool)
(declare-fun x6098 () Bool)
(declare-fun x5311 () Bool)
(declare-fun x5630 () Bool)
(declare-fun x1507 () Bool)
(declare-fun x2951 () Bool)
(declare-fun x4311 () x2192)
(declare-fun x294 () Bool)
(declare-fun x2169 () Bool)
(declare-fun x3681 () Bool)
(declare-fun x224 () Bool)
(declare-fun x3386 () Bool)
(declare-fun x3295 () x2192)
(declare-fun x1919 () Bool)
(declare-fun x4282 () Bool)
(declare-fun x5984 () Int)
(declare-fun x4174 () Bool)
(declare-fun x5758 () Bool)
(declare-fun x5680 () Int)
(declare-fun x3517 () Bool)
(declare-fun x4416 () Int)
(declare-fun x5863 () Bool)
(declare-fun x3370 () x2192)
(declare-fun x1471 (x2192) Int)
(declare-fun x811 () x2192)
(declare-fun x2909 () Int)
(declare-fun x5520 () Bool)
(declare-fun x3919 () Int)
(declare-fun x947 () Int)
(declare-fun x3792 () Bool)
(declare-fun x5460 () Bool)
(declare-fun x619 () Int)
(declare-fun x3807 () Bool)
(declare-fun x5101 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x1306 () Bool)
(declare-fun x5042 () Bool)
(declare-fun x2334 () Bool)
(declare-fun x500 () Bool)
(declare-fun x1896 () Int)
(declare-fun x2106 () Bool)
(declare-fun x590 () Bool)
(declare-fun x4139 () Int)
(declare-fun x6413 () Bool)
(declare-fun x1707 () Bool)
(declare-fun x3981 () Int)
(declare-fun x2582 () Bool)
(declare-fun x1525 () Bool)
(declare-fun x6003 () Int)
(declare-fun x5549 () Int)
(declare-fun x3637 () Bool)
(declare-fun x5147 () Int)
(declare-fun x5667 () x2192)
(declare-fun x2048 () Int)
(declare-fun x239 () Bool)
(declare-fun x5525 () Int)
(declare-fun x1753 () Bool)
(declare-fun x2349 () Int)
(declare-fun x3574 () Bool)
(declare-fun x4619 () Int)
(declare-fun x3520 () Int)
(declare-fun x3945 () Int)
(declare-fun x2559 () Int)
(declare-fun x5906 () Int)
(declare-fun x2884 () Bool)
(declare-fun x407 () x2192)
(declare-fun x5455 () x2192)
(declare-fun x4651 () x2192)
(declare-fun x1049 () Bool)
(declare-fun x4435 () Bool)
(declare-fun x6391 () Bool)
(declare-fun x3240 () x2192)
(declare-fun x5268 () Int)
(declare-fun x2820 () Bool)
(declare-fun x2496 () Bool)
(declare-fun x1284 () Int)
(declare-fun x3292 () x2192)
(declare-fun x1152 () Int)
(declare-fun x2574 () x2192)
(declare-fun x727 () Int)
(declare-fun x600 () Int)
(declare-fun x5688 () Bool)
(declare-fun x4272 () Bool)
(declare-fun x2046 () Bool)
(declare-fun x2703 () Int)
(declare-fun x5572 () Bool)
(declare-fun x2015 () Bool)
(declare-fun x4607 () Int)
(declare-fun x1411 () Int)
(declare-fun x6099 () Bool)
(declare-fun x759 () Bool)
(declare-fun x336 () Int)
(declare-fun x4874 () Int)
(declare-fun x836 () x2192)
(declare-fun x6062 () Int)
(declare-fun x3577 () Int)
(declare-fun x714 () Bool)
(declare-fun x187 () Bool)
(declare-fun x4981 () Bool)
(declare-fun x1316 () Int)
(declare-fun x4381 () Int)
(declare-fun x5246 () Int)
(declare-fun x4214 () Bool)
(declare-fun x3830 () Int)
(declare-fun x5158 () Bool)
(declare-fun x5180 () Bool)
(declare-fun x4798 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x5088 () Bool)
(declare-fun x1789 () Bool)
(declare-fun x1439 () Int)
(declare-fun x5406 () Bool)
(declare-fun x1942 () Bool)
(declare-fun x4857 () Bool)
(declare-fun x1458 () Bool)
(declare-fun x1732 () Int)
(declare-fun x4554 () Bool)
(declare-fun x4295 () Int)
(declare-fun x4359 () Int)
(declare-fun x2435 () Bool)
(declare-fun x4665 () Int)
(declare-fun x61 () Bool)
(declare-fun x35 () Int)
(declare-fun x3739 () Bool)
(declare-fun x385 () Bool)
(declare-fun x6216 () x2192)
(declare-fun x2415 () Bool)
(declare-fun x1893 () Bool)
(declare-fun x226 () Int)
(declare-fun x2653 () Bool)
(declare-fun x5816 () Int)
(declare-fun x1353 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x497 () x2192)
(declare-fun x755 () x2192)
(declare-fun x5258 () Bool)
(declare-fun x3205 () Bool)
(declare-fun x2639 () Bool)
(declare-fun x2389 () Bool)
(declare-fun x514 () Bool)
(declare-fun x5015 () Bool)
(declare-fun x1953 () Bool)
(declare-fun x413 () x2192)
(declare-fun x1704 () Bool)
(declare-fun x6229 () Bool)
(declare-fun x1474 () x2192)
(declare-fun x1565 () Bool)
(declare-fun x5843 () x2192)
(declare-fun x4242 () Bool)
(declare-fun x4560 () Bool)
(declare-fun x2132 () Int)
(declare-fun x2244 () Int)
(declare-fun x2831 () Bool)
(declare-fun x4108 () Int)
(declare-fun x4430 () Int)
(declare-fun x5077 () Bool)
(declare-fun x5894 () Bool)
(declare-fun x2998 () Bool)
(declare-fun x2647 () x2192)
(declare-fun x111 () Int)
(declare-fun x5500 () Bool)
(declare-fun x2403 () Int)
(declare-fun x2843 () Int)
(declare-fun x1178 () Bool)
(declare-fun x4487 () Bool)
(declare-fun x2453 () Int)
(declare-fun x574 () Bool)
(declare-fun x3954 () Int)
(declare-fun x2452 () Bool)
(declare-fun x1369 () x2192)
(declare-fun x3719 () Bool)
(declare-fun x2907 () Bool)
(declare-fun x6185 () x2192)
(declare-fun x2670 () Int)
(declare-fun x2098 () Int)
(declare-fun x3869 () Int)
(declare-fun x4855 () Bool)
(declare-fun x5356 () Bool)
(declare-fun x5493 () Bool)
(declare-fun x6083 () Bool)
(declare-fun x1943 () Int)
(declare-fun x579 () Int)
(declare-fun x1571 () Int)
(declare-fun x1628 () Int)
(declare-fun x2719 () Bool)
(declare-fun x5681 () Bool)
(declare-fun x1461 () Int)
(declare-fun x1188 () Int)
(declare-fun x3342 (Int) Int)
(declare-fun x533 () Int)
(declare-fun x1821 () Bool)
(declare-fun x615 () Int)
(declare-fun x5823 () Int)
(declare-fun x2408 () x2192)
(declare-fun x4511 () Bool)
(declare-fun x6125 () Bool)
(declare-fun x5810 () Int)
(declare-fun x661 () Bool)
(declare-fun x2454 () Int)
(declare-fun x2288 () Bool)
(declare-fun x1396 () Bool)
(declare-fun x3608 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x4118 () Bool)
(declare-fun x2572 () Bool)
(declare-fun x3598 () Bool)
(declare-fun x6277 () Bool)
(declare-fun x102 () Bool)
(declare-fun x819 () Bool)
(declare-fun x4566 () Int)
(declare-fun x1473 () Bool)
(declare-fun x5534 () Bool)
(declare-fun x5136 () Bool)
(declare-fun x2388 () Bool)
(declare-fun x6218 () Bool)
(declare-fun x3561 () Bool)
(declare-fun x416 () Bool)
(declare-fun x568 () Bool)
(declare-fun x3303 () Int)
(declare-fun x319 () Bool)
(declare-fun x2311 () Int)
(declare-fun x324 () Int)
(declare-fun x6194 (Int Int) Int)
(declare-fun x1669 () Bool)
(declare-fun x3233 () Bool)
(declare-fun x3302 () Int)
(declare-fun x330 () Bool)
(declare-fun x1456 () Bool)
(declare-fun x4324 () Bool)
(declare-fun x1527 () Int)
(declare-fun x286 () Bool)
(declare-fun x2314 () Bool)
(declare-fun x453 () Bool)
(declare-fun x4401 () Int)
(declare-fun x2869 () Int)
(declare-fun x2064 () Int)
(declare-fun x1690 () Int)
(declare-fun x3038 () Int)
(declare-fun x4752 (x2192) Int)
(declare-fun x3524 () Bool)
(declare-fun x3175 () Bool)
(declare-fun x6169 () Bool)
(declare-fun x1602 () Bool)
(declare-fun x217 () Bool)
(declare-fun x4344 () Bool)
(declare-fun x2834 () x2192)
(declare-fun x951 () Int)
(declare-fun x708 () x2192)
(declare-fun x2326 () Bool)
(declare-fun x2134 () x2192)
(declare-fun x4921 () Bool)
(declare-fun x4583 () Int)
(declare-fun x4360 () Bool)
(declare-fun x3859 () Bool)
(declare-fun x3289 () Int)
(declare-fun x1869 () Bool)
(declare-fun x4190 () Bool)
(declare-fun x5490 () Bool)
(declare-fun x5164 () Bool)
(declare-fun x2630 () Int)
(declare-fun x4699 () Int)
(declare-fun x3391 () Bool)
(declare-fun x6256 () Bool)
(declare-fun x2688 () Bool)
(declare-fun x1263 () Int)
(declare-fun x5975 () Bool)
(declare-fun x2566 () Bool)
(declare-fun x4545 () Int)
(declare-fun x344 () Bool)
(declare-fun x5220 () Int)
(declare-fun x4656 () x2192)
(declare-fun x1828 () Bool)
(declare-fun x2459 () Bool)
(declare-fun x603 () Int)
(declare-fun x4397 () x2192)
(declare-fun x1775 () Bool)
(declare-fun x6121 () x2192)
(declare-fun x2723 () Bool)
(declare-fun x5068 () Bool)
(declare-fun x5883 () x2192)
(declare-fun x333 () Int)
(declare-fun x3610 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x2418 () Bool)
(declare-fun x435 () Bool)
(declare-fun x1754 () Bool)
(declare-fun x4789 () Int)
(declare-fun x6227 () Bool)
(declare-fun x5778 () Int)
(declare-fun x1326 () Bool)
(declare-fun x2079 () Bool)
(declare-fun x3310 () Bool)
(declare-fun x2113 () Bool)
(declare-fun x4867 () Int)
(declare-fun x3857 () Int)
(declare-fun x5091 () Bool)
(declare-fun x4309 () Int)
(declare-fun x4743 () Bool)
(declare-fun x3203 () Bool)
(declare-fun x3411 () Bool)
(declare-fun x258 () Bool)
(declare-fun x4547 () Bool)
(declare-fun x2552 () Bool)
(declare-fun x534 () Int)
(declare-fun x6153 () Bool)
(declare-fun x3162 () x2192)
(declare-fun x3985 () Int)
(declare-fun x1304 () Bool)
(declare-fun x1489 () Int)
(declare-fun x4072 () Int)
(declare-fun x5415 () x2192)
(declare-fun x3178 () Int)
(declare-fun x36 () Bool)
(declare-fun x5453 () Bool)
(declare-fun x5598 () Int)
(declare-fun x5517 () Int)
(declare-fun x6112 () Int)
(declare-fun x1301 () x2192)
(declare-fun x3045 () Bool)
(declare-fun x96 () x2192)
(declare-fun x1586 () x2192)
(declare-fun x5248 () Bool)
(declare-fun x2117 () Int)
(declare-fun x4414 () Int)
(declare-fun x5225 () Int)
(declare-fun x2474 () Int)
(declare-fun x5521 () Bool)
(declare-fun x3128 () Bool)
(declare-fun x4192 () Bool)
(declare-fun x1769 () Bool)
(declare-fun x5736 () Int)
(declare-fun x257 () Bool)
(declare-fun x827 () Int)
(declare-fun x1736 () Int)
(declare-fun x4769 () Bool)
(declare-fun x1351 () x2192)
(declare-fun x6022 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x4013 () Bool)
(declare-fun x1939 () Bool)
(declare-fun x2285 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x3663 () Bool)
(declare-fun x1004 () Int)
(declare-fun x1618 () Bool)
(declare-fun x5031 () Bool)
(declare-fun x5981 () Bool)
(declare-fun x5023 () Bool)
(declare-fun x2218 () Int)
(declare-fun x5899 () Bool)
(declare-fun x3654 () Int)
(declare-fun x173 () Bool)
(declare-fun x5463 () Int)
(declare-fun x5345 () Int)
(declare-fun x3670 () Int)
(declare-fun x3625 () Bool)
(declare-fun x6265 () Bool)
(declare-fun x840 () Bool)
(declare-fun x3841 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x4328 () Bool)
(declare-fun x5477 () Bool)
(declare-fun x1270 () Bool)
(declare-fun x2150 () Bool)
(declare-fun x1940 () Bool)
(declare-fun x4926 () x2192)
(declare-fun x4251 () Int)
(declare-fun x296 () Bool)
(declare-fun x919 () Bool)
(declare-fun x451 () Bool)
(declare-fun x2823 () Bool)
(declare-fun x1197 () Int)
(declare-fun x999 () Int)
(declare-fun x1022 () Bool)
(declare-fun x2549 () Int)
(declare-fun x1305 () x2192)
(declare-fun x4352 () Bool)
(declare-fun x2915 () Bool)
(declare-fun x2970 () Bool)
(declare-fun x504 () Bool)
(declare-fun x762 () Bool)
(declare-fun x1113 () Int)
(declare-fun x4771 () Int)
(declare-fun x5855 () Int)
(declare-fun x1866 () Int)
(declare-fun x6142 () Bool)
(declare-fun x722 () Int)
(declare-fun x5340 () Int)
(declare-fun x4130 () x2192)
(declare-fun x3875 () Int)
(declare-fun x136 () Bool)
(declare-fun x6086 () Bool)
(declare-fun x5326 () Int)
(declare-fun x3956 () Int)
(declare-fun x1583 () Int)
(declare-fun x5992 () Bool)
(declare-fun x3494 () Bool)
(declare-fun x3968 () Int)
(declare-fun x2733 () Bool)
(declare-fun x2985 () Bool)
(declare-fun x3787 () Bool)
(declare-fun x3154 () Bool)
(declare-fun x300 () Int)
(declare-fun x3669 () x2192)
(declare-fun x582 () Int)
(declare-fun x3920 () Int)
(declare-fun x2773 () Int)
(declare-fun x2543 () Int)
(declare-fun x6144 () x2192)
(declare-fun x3262 () Int)
(declare-fun x558 () Int)
(declare-fun x464 () Int)
(declare-fun x5568 () Int)
(declare-fun x3576 () Int)
(declare-fun x3452 () Bool)
(declare-fun x4366 () Int)
(declare-fun x2595 () Int)
(declare-fun x3632 () Int)
(declare-fun x3173 () Int)
(declare-fun x2156 () Bool)
(declare-fun x2793 () Bool)
(declare-fun x472 () Bool)
(declare-fun x5669 () x2192)
(declare-fun x2754 () x2192)
(declare-fun x5890 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x1250 () Bool)
(declare-fun x3046 () Bool)
(declare-fun x6007 () Int)
(declare-fun x2489 () Int)
(declare-fun x168 () Int)
(declare-fun x1797 () Bool)
(declare-fun x3562 () Bool)
(declare-fun x5353 () Int)
(declare-fun x5877 () Bool)
(declare-fun x5221 () Bool)
(declare-fun x1149 () Int)
(declare-fun x5320 () Bool)
(declare-fun x1997 () Int)
(declare-fun x3667 () Bool)
(declare-fun x994 () Bool)
(declare-fun x4220 () Int)
(declare-fun x4885 () Int)
(declare-fun x2038 () Bool)
(declare-fun x4377 () Int)
(declare-fun x4468 () Int)
(declare-fun x2523 () Bool)
(declare-fun x2524 () Bool)
(declare-fun x1684 () Int)
(declare-fun x3932 () Int)
(declare-fun x1472 () Bool)
(declare-fun x3595 () Int)
(declare-fun x379 () Bool)
(declare-fun x5596 () Bool)
(declare-fun x1433 () Bool)
(declare-fun x1952 () Int)
(declare-fun x1036 () Bool)
(declare-fun x84 () Int)
(declare-fun x4700 () Int)
(declare-fun x164 () Bool)
(declare-fun x1523 () x2192)
(declare-fun x2136 () x2192)
(declare-fun x5668 () Bool)
(declare-fun x263 () Int)
(declare-fun x4542 () Bool)
(declare-fun x216 () Bool)
(declare-fun x5507 () Int)
(declare-fun x1888 () Int)
(declare-fun x6176 () Int)
(declare-fun x2969 () Int)
(declare-fun x3355 () Bool)
(declare-fun x3688 () Int)
(declare-fun x2779 () Bool)
(declare-fun x1657 () Bool)
(declare-fun x2096 () Int)
(declare-fun x1924 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x3169 (Int) Int)
(declare-fun x3434 () Bool)
(declare-fun x5336 () x2192)
(declare-fun x5169 () Bool)
(declare-fun x1477 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x4132 () Bool)
(declare-fun x468 () Bool)
(declare-fun x360 () Bool)
(declare-fun x147 () Int)
(declare-fun x4121 () Int)
(declare-fun x596 () Bool)
(declare-fun x2602 () Int)
(declare-fun x5202 () Bool)
(declare-fun x1778 () Bool)
(declare-fun x3566 () Bool)
(declare-fun x3245 () Bool)
(declare-fun x5449 () x2192)
(declare-fun x1322 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x2178 () Int)
(declare-fun x3819 () Bool)
(declare-fun x3415 () Int)
(declare-fun x4594 () Bool)
(declare-fun x6389 () Int)
(declare-fun x1729 () Int)
(declare-fun x2229 () Bool)
(declare-fun x103 () Int)
(declare-fun x2850 () Bool)
(declare-fun x803 () Bool)
(declare-fun x6077 () Bool)
(declare-fun x5009 () Bool)
(declare-fun x3343 () Bool)
(declare-fun x2446 () Bool)
(declare-fun x761 () x2192)
(declare-fun x4048 () Int)
(declare-fun x1995 () Bool)
(declare-fun x4232 () Bool)
(declare-fun x4461 () Bool)
(declare-fun x5341 () Int)
(declare-fun x4611 () Bool)
(declare-fun x2122 () Bool)
(declare-fun x1873 () Int)
(declare-fun x789 () x2192)
(declare-fun x1026 () Int)
(declare-fun x1482 () Int)
(declare-fun x4157 () Int)
(declare-fun x2665 () Int)
(declare-fun x2669 () Int)
(declare-fun x1431 () Bool)
(declare-fun x6050 () Bool)
(declare-fun x2965 () Int)
(declare-fun x5745 () Bool)
(declare-fun x5364 () Int)
(declare-fun x1136 () x2192)
(declare-fun x6247 () Int)
(declare-fun x5503 () Bool)
(declare-fun x5650 () Bool)
(declare-fun x3316 () Int)
(declare-fun x4759 () Bool)
(declare-fun x2857 () Int)
(declare-fun x4057 () Int)
(declare-fun x4355 () Bool)
(declare-fun x69 () Int)
(declare-fun x2667 () Bool)
(declare-fun x6360 () Bool)
(declare-fun x3765 (x2192) Int)
(declare-fun x672 () Bool)
(declare-fun x3309 () Int)
(declare-fun x5509 () Int)
(declare-fun x2128 () Int)
(declare-fun x4779 () Int)
(declare-fun x1883 () Bool)
(declare-fun x2392 () Bool)
(declare-fun x3185 () x2192)
(declare-fun x1087 () Bool)
(declare-fun x936 () Bool)
(declare-fun x941 () Bool)
(declare-fun x2746 () Bool)
(declare-fun x1872 () Int)
(declare-fun x814 () Int)
(declare-fun x3746 () Int)
(declare-fun x2737 () Bool)
(declare-fun x5280 () Bool)
(declare-fun x2570 () Bool)
(declare-fun x4178 () Int)
(declare-fun x3493 () Int)
(declare-fun x6329 () Int)
(declare-fun x1297 () Int)
(declare-fun x3668 () Bool)
(declare-fun x968 () x2192)
(declare-fun x4522 () Int)
(declare-fun x1434 () Int)
(declare-fun x4367 () Bool)
(declare-fun x1014 () Bool)
(declare-fun x5657 () Int)
(declare-fun x5287 () Bool)
(declare-fun x2091 () Bool)
(declare-fun x6286 () Int)
(declare-fun x3658 () Bool)
(declare-fun x1400 () Int)
(declare-fun x1110 () Int)
(declare-fun x2781 () Bool)
(declare-fun x5859 () Bool)
(declare-fun x5726 () Bool)
(declare-fun x2266 () Int)
(declare-fun x5109 () Int)
(declare-fun x6272 () Bool)
(declare-fun x6071 () Bool)
(declare-fun x127 () Bool)
(declare-fun x1863 () Int)
(declare-fun x4701 () Bool)
(declare-fun x2084 () Int)
(declare-fun x491 () Bool)
(declare-fun x5639 () Bool)
(declare-fun x492 (Int) Int)
(declare-fun x2369 () Int)
(declare-fun x5051 () Bool)
(declare-fun x4561 () Int)
(declare-fun x4145 () Bool)
(declare-fun x3412 () Bool)
(declare-fun x6024 () Bool)
(declare-fun x1830 () Bool)
(declare-fun x5426 () Bool)
(declare-fun x1535 () Int)
(declare-fun x1572 () Bool)
(declare-fun x5288 () Int)
(declare-fun x6117 () Int)
(declare-fun x1958 () Int)
(declare-fun x6369 () Int)
(declare-fun x6269 () Bool)
(declare-fun x601 () Bool)
(declare-fun x6190 () x2192)
(declare-fun x1406 (Int) Int)
(declare-fun x4217 () Int)
(declare-fun x4772 () Bool)
(declare-fun x419 () Bool)
(declare-fun x3380 () Int)
(declare-fun x4111 () Bool)
(declare-fun x542 () Int)
(declare-fun x6052 () Bool)
(declare-fun x269 () Int)
(declare-fun x3361 () Bool)
(declare-fun x3121 () Bool)
(declare-fun x5262 () Int)
(declare-fun x470 () x2192)
(declare-fun x5124 () Bool)
(declare-fun x5055 () Bool)
(declare-fun x855 () Bool)
(declare-fun x228 () Int)
(declare-fun x1432 () x2192)
(declare-fun x2256 () Bool)
(declare-fun x532 () Int)
(declare-fun x5785 () Bool)
(declare-fun x2259 () Int)
(declare-fun x1222 () Int)
(declare-fun x5996 () Bool)
(declare-fun x4123 () Bool)
(declare-fun x4271 () Bool)
(declare-fun x6035 () Int)
(declare-fun x1581 () Int)
(declare-fun x5625 () x2192)
(declare-fun x3564 () Bool)
(declare-fun x4373 () Int)
(declare-fun x1758 () Int)
(declare-fun x388 () Bool)
(declare-fun x3044 () Int)
(declare-fun x5632 () x2192)
(declare-fun x6375 () Int)
(declare-fun x2504 () Bool)
(declare-fun x991 () Int)
(declare-fun x3640 () x2192)
(declare-fun x1574 () Int)
(declare-fun x2752 () Bool)
(declare-fun x3983 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x4636 () Bool)
(declare-fun x6396 () Bool)
(declare-fun x1321 () x2192)
(declare-fun x3242 () Int)
(declare-fun x4532 () Bool)
(declare-fun x926 () Int)
(declare-fun x3950 () x2192)
(declare-fun x3915 () Int)
(declare-fun x282 () Int)
(declare-fun x2729 () Int)
(declare-fun x1839 () Bool)
(declare-fun x5362 () Int)
(declare-fun x6127 () Bool)
(declare-fun x5401 () Int)
(declare-fun x3846 () Int)
(declare-fun x4600 () Int)
(declare-fun x2702 () Int)
(declare-fun x989 () Bool)
(declare-fun x5361 () Bool)
(declare-fun x2554 () Bool)
(declare-fun x2739 () Bool)
(declare-fun x3905 () Bool)
(declare-fun x2503 () Bool)
(declare-fun x2002 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x1879 () Int)
(declare-fun x4395 () Bool)
(declare-fun x2810 () Bool)
(declare-fun x4129 () Int)
(declare-fun x3750 () Bool)
(declare-fun x3138 () Int)
(declare-fun x6093 () Bool)
(declare-fun x1536 () Bool)
(declare-fun x5048 () Bool)
(declare-fun x5339 () Bool)
(declare-fun x5438 () Bool)
(declare-fun x2682 () Int)
(declare-fun x6268 () Int)
(declare-fun x52 () Int)
(declare-fun x3624 () Int)
(declare-fun x2490 () x2192)
(declare-fun x4264 () Bool)
(declare-fun x361 () Int)
(declare-fun x2251 () Int)
(declare-fun x2696 () Int)
(declare-fun x1681 () Bool)
(declare-fun x2194 () Bool)
(declare-fun x2329 () Int)
(declare-fun x3994 () Bool)
(declare-fun x3368 () Int)
(declare-fun x1882 () Int)
(declare-fun x3049 () Bool)
(declare-fun x2860 () Int)
(declare-fun x2648 () Bool)
(declare-fun x1368 () Bool)
(declare-fun x2911 () Int)
(declare-fun x3821 () Int)
(declare-fun x3113 () Bool)
(declare-fun x2103 () Int)
(declare-fun x711 () x2192)
(declare-fun x4439 () Int)
(declare-fun x900 () Int)
(declare-fun x1192 () Int)
(declare-fun x1379 () Bool)
(declare-fun x992 () Bool)
(declare-fun x4846 () Bool)
(declare-fun x3109 () Bool)
(declare-fun x6350 () Bool)
(declare-fun x3306 () Bool)
(declare-fun x5527 () Int)
(declare-fun x1619 () Bool)
(declare-fun x6406 () x2192)
(declare-fun x3139 () Bool)
(declare-fun x4024 () Int)
(declare-fun x6319 () Int)
(declare-fun x5935 () Int)
(declare-fun x3052 () Bool)
(declare-fun x293 () Bool)
(declare-fun x5987 () Bool)
(declare-fun x5245 () Bool)
(declare-fun x3083 () Bool)
(declare-fun x5575 () Int)
(declare-fun x2050 () Int)
(declare-fun x3902 () Bool)
(declare-fun x4879 () Bool)
(declare-fun x4379 () Bool)
(declare-fun x3986 () Int)
(declare-fun x2493 () Int)
(declare-fun x233 () Int)
(declare-fun x5474 () Bool)
(declare-fun x476 () Bool)
(declare-fun x3579 () x2192)
(declare-fun x2705 () Int)
(declare-fun x2802 () Int)
(declare-fun x1513 () Bool)
(declare-fun x222 () Bool)
(declare-fun x6017 () Int)
(declare-fun x1441 () Bool)
(declare-fun x589 () Int)
(declare-fun x6013 () Int)
(declare-fun x3987 () Bool)
(declare-fun x696 () Bool)
(declare-fun x2112 () Bool)
(declare-fun x937 () Int)
(declare-fun x1897 () x2192)
(declare-fun x2638 () Int)
(declare-fun x2404 () Bool)
(declare-fun x3851 () Bool)
(declare-fun x3854 () Bool)
(declare-fun x325 () Int)
(declare-fun x2529 () Bool)
(declare-fun x5776 (Int) Int)
(declare-fun x3389 () Bool)
(declare-fun x6173 () Bool)
(declare-fun x3545 () Int)
(declare-fun x656 () Int)
(declare-fun x5496 () Bool)
(declare-fun x1506 () Bool)
(declare-fun x1104 () Bool)
(declare-fun x3504 () Int)
(declare-fun x2367 () Bool)
(declare-fun x5441 () Bool)
(declare-fun x5216 () Int)
(declare-fun x3940 () Bool)
(declare-fun x2292 () Int)
(declare-fun x5774 () Bool)
(declare-fun x1875 () Int)
(declare-fun x5041 () Bool)
(declare-fun x5654 () x2192)
(declare-fun x6040 () Int)
(declare-fun x1727 () Int)
(declare-fun x802 () Bool)
(declare-fun x4296 () Int)
(declare-fun x4270 () Bool)
(declare-fun x2972 () Bool)
(declare-fun x4746 () Bool)
(declare-fun x2957 () x2192)
(declare-fun x1990 () Int)
(declare-fun x5382 () Bool)
(declare-fun x4788 () Bool)
(declare-fun x3588 () Int)
(declare-fun x3334 () Int)
(declare-fun x676 () Int)
(declare-fun x3040 () Int)
(declare-fun x5166 () Int)
(declare-fun x6036 () Bool)
(declare-fun x973 () Bool)
(declare-fun x5150 () Int)
(declare-fun x3048 () Int)
(declare-fun x546 () Bool)
(declare-fun x1824 () Int)
(declare-fun x2236 () Bool)
(declare-fun x1496 () Int)
(declare-fun x2047 () Int)
(declare-fun x5053 () Int)
(declare-fun x5270 () Bool)
(declare-fun x1225 () Int)
(declare-fun x1148 () Bool)
(declare-fun x2562 () Bool)
(declare-fun x4068 () Int)
(declare-fun x4968 () Int)
(declare-fun x2606 () x2192)
(declare-fun x1900 () Bool)
(declare-fun x2585 () Bool)
(declare-fun x1567 () Int)
(declare-fun x3586 () Bool)
(declare-fun x5081 () Int)
(declare-fun x4440 () Bool)
(declare-fun x1903 () Bool)
(declare-fun x5309 () Int)
(declare-fun x1945 () Bool)
(declare-fun x2615 () Bool)
(declare-fun x4562 () Bool)
(declare-fun x5174 () Bool)
(declare-fun x5424 () Int)
(declare-fun x3754 () Int)
(declare-fun x4239 () x2192)
(declare-fun x3703 () Int)
(declare-fun x1641 () x2192)
(declare-fun x4546 () Int)
(declare-fun x4067 () Int)
(declare-fun x3476 () Bool)
(declare-fun x3799 (x2192) Int)
(declare-fun x2924 () Bool)
(declare-fun x1801 () Int)
(declare-fun x4753 () Bool)
(declare-fun x87 () Bool)
(declare-fun x6387 () Int)
(declare-fun x1692 () Int)
(declare-fun x2371 () Int)
(declare-fun x2166 () Bool)
(declare-fun x3417 () Int)
(declare-fun x2997 () Bool)
(declare-fun x4392 () Int)
(declare-fun x2540 () Bool)
(declare-fun x5795 () Int)
(declare-fun x4327 () Bool)
(declare-fun x2221 () Bool)
(declare-fun x5243 () Bool)
(declare-fun x6193 () Bool)
(declare-fun x2981 (Int) Int)
(declare-fun x6403 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x1912 () x2192)
(declare-fun x4718 () Int)
(declare-fun x2364 () Bool)
(declare-fun x3544 () x2192)
(declare-fun x2347 () Bool)
(declare-fun x4453 () Bool)
(declare-fun x421 (x2192) Int)
(declare-fun x583 () Bool)
(declare-fun x3777 () Bool)
(declare-fun x715 () Bool)
(declare-fun x3358 () Int)
(declare-fun x3617 () Int)
(declare-fun x5842 () Int)
(declare-fun x833 () Bool)
(declare-fun x5920 () Bool)
(declare-fun x6253 () Bool)
(declare-fun x6240 () Bool)
(declare-fun x4290 () Int)
(declare-fun x90 () Bool)
(declare-fun x4790 () Int)
(declare-fun x1790 () Int)
(declare-fun x3532 () Int)
(declare-fun x5725 () Int)
(declare-fun x1016 () Bool)
(declare-fun x3953 () Bool)
(declare-fun x3643 () Int)
(declare-fun x6210 () Bool)
(declare-fun x5228 () Bool)
(declare-fun x3814 () Bool)
(declare-fun x629 () Int)
(declare-fun x6197 () Int)
(declare-fun x575 () Bool)
(declare-fun x4452 () Int)
(declare-fun x4492 () x2192)
(declare-fun x1159 () Int)
(declare-fun x2730 () x2192)
(declare-fun x6320 () Int)
(declare-fun x3699 () Bool)
(declare-fun x1986 () Bool)
(declare-fun x1172 () Bool)
(declare-fun x1779 () x2192)
(declare-fun x6233 () Int)
(declare-fun x1354 () x2192)
(declare-fun x1832 () Int)
(declare-fun x5978 () Bool)
(declare-fun x2506 () Bool)
(declare-fun x3815 () Bool)
(declare-fun x1422 () Int)
(declare-fun x528 () Bool)
(declare-fun x5590 () Bool)
(declare-fun x3320 () Bool)
(declare-fun x2351 () Bool)
(declare-fun x2794 () Bool)
(declare-fun x2155 () Bool)
(declare-fun x2358 () Int)
(declare-fun x5392 () Bool)
(declare-fun x3150 () Int)
(declare-fun x1074 () Bool)
(declare-fun x2959 () Int)
(declare-fun x4399 () Int)
(declare-fun x4816 () Int)
(declare-fun x3866 () Bool)
(declare-fun x3256 () Int)
(declare-fun x1189 () x2192)
(declare-fun x2809 () Bool)
(declare-fun x1006 () x2192)
(declare-fun x6377 () Int)
(declare-fun x3984 () Int)
(declare-fun x5421 () Bool)
(declare-fun x2215 () x2192)
(declare-fun x712 () Bool)
(declare-fun x6201 () Int)
(declare-fun x1134 () Int)
(declare-fun x871 () Bool)
(declare-fun x4767 () Int)
(declare-fun x6299 () Int)
(declare-fun x4627 () Bool)
(declare-fun x6102 () Bool)
(declare-fun x2744 () Int)
(declare-fun x5324 () x2192)
(declare-fun x5080 () Int)
(declare-fun x3098 () Int)
(declare-fun x3288 () Bool)
(declare-fun x204 () x2192)
(declare-fun x4188 () x2192)
(declare-fun x5789 () Int)
(declare-fun x1738 () Bool)
(declare-fun x4504 () Int)
(declare-fun x6060 () Int)
(declare-fun x5737 () Bool)
(declare-fun x742 () Bool)
(declare-fun x5283 () Int)
(declare-fun x3468 () Int)
(declare-fun x1579 () Int)
(declare-fun x2220 () Bool)
(declare-fun x1699 () Bool)
(declare-fun x4991 () Bool)
(declare-fun x4162 () Bool)
(declare-fun x1938 () Int)
(declare-fun x808 () Int)
(declare-fun x1457 () Bool)
(declare-fun x880 () Int)
(declare-fun x359 () Bool)
(declare-fun x3531 () Bool)
(declare-fun x4891 () Bool)
(declare-fun x3267 () x2192)
(declare-fun x3646 () Bool)
(declare-fun x729 () Bool)
(declare-fun x3829 () Int)
(declare-fun x1071 () Bool)
(declare-fun x3372 () Int)
(declare-fun x1901 () x2192)
(declare-fun x5537 () Int)
(declare-fun x5315 () x2192)
(declare-fun x2659 () Int)
(declare-fun x2257 () Int)
(declare-fun x6220 () x2192)
(declare-fun x550 () Bool)
(declare-fun x3709 () Int)
(declare-fun x5404 () Bool)
(declare-fun x2792 () Bool)
(declare-fun x1748 () Int)
(declare-fun x2510 () Int)
(declare-fun x4827 () Int)
(declare-fun x4967 () Bool)
(declare-fun x1902 () Bool)
(declare-fun x4458 () Bool)
(declare-fun x6076 () Bool)
(declare-fun x2666 () Int)
(declare-fun x4884 () Bool)
(declare-fun x3718 () x2192)
(declare-fun x5933 () Bool)
(declare-fun x5611 (x2192) Int)
(declare-fun x4370 () Bool)
(declare-fun x5402 () Bool)
(declare-fun x389 () Bool)
(declare-fun x2016 () Bool)
(declare-fun x4648 () x2192)
(declare-fun x2515 () Bool)
(declare-fun x2905 () Int)
(declare-fun x2193 () Bool)
(declare-fun x44 () x2192)
(declare-fun x2882 () Int)
(declare-fun x1593 () Int)
(declare-fun x3076 () Bool)
(declare-fun x4215 () Int)
(declare-fun x244 () Bool)
(declare-fun x404 () Int)
(declare-fun x4956 () Bool)
(declare-fun x378 () x2192)
(declare-fun x3265 () Int)
(declare-fun x5210 () Bool)
(declare-fun x1650 () x2192)
(declare-fun x4128 () x2192)
(declare-fun x295 () Bool)
(declare-fun x403 () Int)
(declare-fun x2232 () Bool)
(declare-fun x1630 () x2192)
(declare-fun x5677 () Int)
(declare-fun x5206 () Bool)
(declare-fun x2941 () Bool)
(declare-fun x1450 () Int)
(declare-fun x3093 () Bool)
(declare-fun x5222 () Bool)
(declare-fun x1666 () Int)
(declare-fun x5967 () Bool)
(declare-fun x323 () Bool)
(declare-fun x4245 () Int)
(declare-fun x535 () Bool)
(declare-fun x4906 () Bool)
(declare-fun x3443 () Int)
(declare-fun x2652 () Bool)
(declare-fun x4959 () x2192)
(declare-fun x3951 () Int)
(declare-fun x6217 () Bool)
(declare-fun x1285 () Int)
(declare-fun x1392 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x1307 () Bool)
(declare-fun x5719 () Int)
(declare-fun x5145 () Int)
(declare-fun x3571 () Bool)
(declare-fun x791 () Bool)
(declare-fun x2248 () Bool)
(declare-fun x4709 () Int)
(declare-fun x1515 (Int) Int)
(declare-fun x2131 () Bool)
(declare-fun x5058 () Bool)
(declare-fun x5720 () Bool)
(declare-fun x1675 () Int)
(declare-fun x1160 () Bool)
(declare-fun x129 () Bool)
(declare-fun x4473 () x2192)
(declare-fun x5370 () Bool)
(declare-fun x5704 () Int)
(declare-fun x6292 () x2192)
(declare-fun x2126 () Bool)
(declare-fun x4622 () Bool)
(declare-fun x2758 () Bool)
(declare-fun x1998 () Bool)
(declare-fun x3495 () x2192)
(declare-fun x440 () x2192)
(declare-fun x179 () Bool)
(declare-fun x1864 () Bool)
(declare-fun x5297 () Int)
(declare-fun x5090 () Int)
(declare-fun x652 () Bool)
(declare-fun x3445 () Bool)
(declare-fun x782 () Bool)
(declare-fun x1217 () Int)
(declare-fun x1207 () Int)
(declare-fun x3195 () Int)
(declare-fun x2968 () x2192)
(declare-fun x1670 () Bool)
(declare-fun x975 () Bool)
(declare-fun x5540 () Bool)
(declare-fun x5728 () Bool)
(declare-fun x2255 () Int)
(declare-fun x3097 () Bool)
(declare-fun x50 () Int)
(declare-fun x1644 () Bool)
(declare-fun x4017 () x2192)
(declare-fun x5638 () Int)
(declare-fun x2151 () Bool)
(declare-fun x4684 () Bool)
(declare-fun x625 () Int)
(declare-fun x4840 () Int)
(declare-fun x4159 () Int)
(declare-fun x2395 () Bool)
(declare-fun x3538 () x2192)
(declare-fun x210 () Bool)
(declare-fun x5602 () x2192)
(declare-fun x3000 () Bool)
(declare-fun x1928 () Bool)
(declare-fun x5013 () Bool)
(declare-fun x5379 () Bool)
(declare-fun x4850 () Bool)
(declare-fun x2546 () Bool)
(declare-fun x5264 () Bool)
(declare-fun x3141 () Bool)
(declare-fun x3221 () Bool)
(declare-fun x4889 () Bool)
(declare-fun x5708 () Bool)
(declare-fun x2045 () Int)
(declare-fun x6351 () Bool)
(declare-fun x5804 () Bool)
(declare-fun x4901 () x2192)
(declare-fun x1810 () Bool)
(declare-fun x3835 () Bool)
(declare-fun x26 () Int)
(declare-fun x4318 () Bool)
(declare-fun x4604 () Bool)
(declare-fun x4808 () Bool)
(declare-fun x2637 () Int)
(declare-fun x3402 () x2192)
(declare-fun x4091 () Bool)
(declare-fun x345 () Bool)
(declare-fun x2711 () Int)
(declare-fun x2476 () Int)
(declare-fun x1317 () Int)
(declare-fun x666 () Bool)
(declare-fun x5587 () Bool)
(declare-fun x1196 () Int)
(declare-fun x1165 () Bool)
(declare-fun x3764 () Bool)
(declare-fun x5016 () x2192)
(declare-fun x6026 () Bool)
(declare-fun x4994 () x2192)
(declare-fun x1262 () Int)
(declare-fun x1090 () Int)
(declare-fun x3510 () Bool)
(declare-fun x5045 () Bool)
(declare-fun x5103 () Int)
(declare-fun x944 () Bool)
(declare-fun x1689 () Int)
(declare-fun x1594 () Bool)
(declare-fun x5876 () Int)
(declare-fun x6416 () Int)
(declare-fun x18 () Bool)
(declare-fun x1673 () Int)
(declare-fun x1575 () x2192)
(declare-fun x1725 () Int)
(declare-fun x6135 () Bool)
(declare-fun x3345 () Bool)
(declare-fun x311 () Int)
(declare-fun x6402 () Bool)
(declare-fun x110 () Bool)
(declare-fun x2583 () x2192)
(declare-fun x246 () x2192)
(declare-fun x5128 () Int)
(declare-fun x5526 () x2192)
(declare-fun x3741 () Int)
(declare-fun x2908 () Bool)
(declare-fun x4484 () Bool)
(declare-fun x6167 () Int)
(declare-fun x1825 () Bool)
(declare-fun x5299 () Bool)
(declare-fun x5896 () Bool)
(declare-fun x1808 () Int)
(declare-fun x4797 () Int)
(declare-fun x614 () Bool)
(declare-fun x5062 () Int)
(declare-fun x3810 () Bool)
(declare-fun x1314 () x2192)
(declare-fun x5695 () Int)
(declare-fun x4599 () Bool)
(declare-fun x6359 () Bool)
(declare-fun x4289 () Bool)
(declare-fun x5685 () Bool)
(declare-fun x2226 () Bool)
(declare-fun x1234 () Bool)
(declare-fun x623 () Int)
(declare-fun x3282 () Int)
(declare-fun x3330 () Bool)
(declare-fun x291 () Bool)
(declare-fun x4626 () Bool)
(declare-fun x5157 () Bool)
(declare-fun x4376 () Bool)
(declare-fun x523 () Int)
(declare-fun x4235 () Bool)
(declare-fun x5259 () x2192)
(declare-fun x710 () Int)
(declare-fun x6070 () x2192)
(declare-fun x5703 () Bool)
(declare-fun x5543 () Int)
(declare-fun x4268 () Int)
(declare-fun x723 () Bool)
(declare-fun x4910 () Bool)
(declare-fun x2532 () Bool)
(declare-fun x2671 () x2192)
(declare-fun x5355 () x2192)
(declare-fun x5069 () Bool)
(declare-fun x4463 () Bool)
(declare-fun x3533 () Int)
(declare-fun x1170 () Bool)
(declare-fun x2413 () Bool)
(declare-fun x800 () Int)
(declare-fun x3407 () Bool)
(declare-fun x1596 () Int)
(declare-fun x1221 () Bool)
(declare-fun x2146 () Int)
(declare-fun x4663 () Bool)
(declare-fun x4308 () Int)
(declare-fun x1629 () Int)
(declare-fun x5702 () x2192)
(declare-fun x3206 () Bool)
(declare-fun x2963 () Bool)
(declare-fun x3675 () Int)
(declare-fun x2401 () Bool)
(declare-fun x4204 () Int)
(declare-fun x862 () Bool)
(declare-fun x4673 () Int)
(declare-fun x1414 () Int)
(declare-fun x1868 () Int)
(declare-fun x2994 () Int)
(declare-fun x4853 () Bool)
(declare-fun x2743 () Bool)
(declare-fun x1827 () Bool)
(declare-fun x4860 () Int)
(declare-fun x3223 () Bool)
(declare-fun x2427 () Bool)
(declare-fun x3710 () Int)
(declare-fun x6367 () Bool)
(declare-fun x6162 () Int)
(declare-fun x2548 () Bool)
(declare-fun x4499 () Int)
(declare-fun x2654 () Bool)
(declare-fun x770 () Bool)
(declare-fun x5915 () Bool)
(declare-fun x3272 () Int)
(declare-fun x3144 () Bool)
(declare-fun x5908 () Bool)
(declare-fun x1158 () Bool)
(declare-fun x3881 () Int)
(declare-fun x1935 () Bool)
(declare-fun x1936 (x2192) Int)
(declare-fun x5578 () Bool)
(declare-fun x1929 () Int)
(declare-fun x51 () Bool)
(declare-fun x1826 () Bool)
(declare-fun x3341 () Bool)
(declare-fun x2286 () Bool)
(declare-fun x2710 () x2192)
(declare-fun x4413 () x2192)
(declare-fun x6110 () x2192)
(declare-fun x5624 () Bool)
(declare-fun x5316 () Bool)
(declare-fun x1965 () Int)
(declare-fun x4096 () Bool)
(declare-fun x2033 () Bool)
(declare-fun x4587 () Bool)
(declare-fun x3795 () Int)
(declare-fun x966 () Bool)
(declare-fun x891 () Bool)
(declare-fun x3140 () Bool)
(declare-fun x3733 () x2192)
(declare-fun x2764 () Bool)
(declare-fun x443 () Int)
(declare-fun x2024 () Bool)
(declare-fun x4054 () Int)
(declare-fun x3906 () Int)
(declare-fun x4459 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x3732 () Int)
(declare-fun x1190 () Bool)
(declare-fun x5627 (x2192) Int)
(declare-fun x1488 () Int)
(declare-fun x914 () Bool)
(declare-fun x5386 () Int)
(declare-fun x2377 () Int)
(declare-fun x555 () x2192)
(declare-fun x5132 () Bool)
(declare-fun x3451 () Int)
(declare-fun x857 () Bool)
(declare-fun x427 () Bool)
(declare-fun x6337 () Bool)
(declare-fun x5939 () Bool)
(declare-fun x2890 () Int)
(declare-fun x1220 () Int)
(declare-fun x6140 () Bool)
(declare-fun x2346 () Bool)
(declare-fun x2445 () Bool)
(declare-fun x4062 () Bool)
(declare-fun x457 () Bool)
(declare-fun x3648 () Bool)
(declare-fun x5682 () Bool)
(declare-fun x3459 () Int)
(declare-fun x408 () x2192)
(declare-fun x1052 () Bool)
(declare-fun x4707 () Bool)
(declare-fun x4904 () Bool)
(declare-fun x1878 () Bool)
(declare-fun x3194 () Int)
(declare-fun x3260 () Bool)
(declare-fun x5684 () Bool)
(declare-fun x4591 () x2192)
(declare-fun x2618 () Bool)
(declare-fun x6224 () Int)
(declare-fun x3751 () Int)
(declare-fun x5516 () Int)
(declare-fun x3177 () Bool)
(declare-fun x5100 () Int)
(declare-fun x396 () Int)
(declare-fun x1068 () Int)
(declare-fun x4496 () Bool)
(declare-fun x4882 () Int)
(declare-fun x3398 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x4382 () Int)
(declare-fun x805 () Bool)
(declare-fun x5718 () Bool)
(declare-fun x6019 () Bool)
(declare-fun x2818 () Bool)
(declare-fun x4007 () Bool)
(declare-fun x4505 () x2192)
(declare-fun x830 () Bool)
(declare-fun x2431 () Int)
(declare-fun x1843 () Bool)
(declare-fun x4578 () Bool)
(declare-fun x4293 () Int)
(declare-fun x3883 () Bool)
(declare-fun x1796 () Int)
(declare-fun x3090 () Int)
(declare-fun x2664 () Int)
(declare-fun x2732 () Bool)
(declare-fun x2350 () Bool)
(declare-fun x540 () Int)
(declare-fun x6304 () Int)
(declare-fun x4403 () Bool)
(declare-fun x6123 () Bool)
(declare-fun x1494 () Int)
(declare-fun x5815 () Int)
(declare-fun x6141 () Bool)
(declare-fun x5106 () Bool)
(declare-fun x15 () Int)
(declare-fun x2650 () Bool)
(declare-fun x655 () Int)
(declare-fun x4548 () Bool)
(declare-fun x4741 () Bool)
(declare-fun x151 () Bool)
(declare-fun x3027 () Bool)
(declare-fun x2694 () Bool)
(declare-fun x3095 () Bool)
(declare-fun x5640 () Int)
(declare-fun x4028 () Bool)
(declare-fun x3252 () Int)
(declare-fun x564 () Int)
(declare-fun x1614 () Bool)
(declare-fun x243 () Bool)
(declare-fun x5188 () Bool)
(declare-fun x3647 () Bool)
(declare-fun x420 () Bool)
(declare-fun x5211 () Int)
(declare-fun x905 () Int)
(declare-fun x31 () Bool)
(declare-fun x1720 () Int)
(declare-fun x4097 () Bool)
(declare-fun x4770 () Int)
(declare-fun x5609 () Int)
(declare-fun x4387 () Bool)
(declare-fun x516 () Bool)
(declare-fun x2772 () Int)
(declare-fun x4433 () Bool)
(declare-fun x5275 () Int)
(declare-fun x5738 () Bool)
(declare-fun x2953 () Bool)
(declare-fun x3024 () Int)
(declare-fun x277 () Bool)
(declare-fun x3440 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x4878 () Int)
(declare-fun x4899 () Int)
(declare-fun x850 () Int)
(declare-fun x234 () Bool)
(declare-fun x4997 () Bool)
(declare-fun x6222 () Int)
(declare-fun x3079 () Int)
(declare-fun x1199 () x2192)
(declare-fun x1531 () Bool)
(declare-fun x3149 () Bool)
(declare-fun x4747 () Bool)
(declare-fun x2641 () Int)
(declare-fun x5544 () Int)
(declare-fun x4491 () x2192)
(declare-fun x5086 () Bool)
(declare-fun x4501 () Int)
(declare-fun x3730 () Bool)
(declare-fun x5827 () Bool)
(declare-fun x3503 () Int)
(declare-fun x6053 () Int)
(declare-fun x6376 () Bool)
(declare-fun x6322 () Bool)
(declare-fun x4299 () Int)
(declare-fun x92 () Bool)
(declare-fun x5038 (x2192) Int)
(declare-fun x4099 () Int)
(declare-fun x1782 () Bool)
(declare-fun x230 () Int)
(declare-fun x4182 () Bool)
(declare-fun x3263 () Int)
(declare-fun x1947 () Bool)
(declare-fun x171 () Bool)
(declare-fun x1335 () Bool)
(declare-fun x2422 () Bool)
(declare-fun x1296 () Int)
(declare-fun x5330 () Bool)
(declare-fun x5997 (Int) Int)
(declare-fun x4120 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x5577 () Int)
(declare-fun x5960 () Bool)
(declare-fun x4888 () x2192)
(declare-fun x4127 () Int)
(declare-fun x2921 () Bool)
(declare-fun x3596 () Int)
(declare-fun x3190 () Int)
(declare-fun x693 () Int)
(declare-fun x2505 () Bool)
(declare-fun x920 () Bool)
(declare-fun x3182 () Int)
(declare-fun x702 () x2192)
(declare-fun x2365 () Int)
(declare-fun x4717 () Int)
(declare-fun x4393 () Bool)
(declare-fun x348 () Bool)
(declare-fun x3537 () Int)
(declare-fun x3155 () Int)
(declare-fun x4595 () x2192)
(declare-fun x118 () Bool)
(declare-fun x2645 () Int)
(declare-fun x3707 () Bool)
(declare-fun x4829 () Bool)
(declare-fun x3089 () Bool)
(declare-fun x2619 () Bool)
(declare-fun x4055 () x2192)
(declare-fun x1770 () Bool)
(declare-fun x5589 () Int)
(declare-fun x2363 () x2192)
(declare-fun x6042 () Bool)
(declare-fun x6096 () Bool)
(declare-fun x5083 () Int)
(declare-fun x3382 () Int)
(declare-fun x180 () x2192)
(declare-fun x4185 () Int)
(declare-fun x2861 () Bool)
(declare-fun x1917 () x2192)
(declare-fun x6271 () Bool)
(declare-fun x4279 () x2192)
(declare-fun x1202 () Bool)
(declare-fun x3805 () Bool)
(declare-fun x1055 () x2192)
(declare-fun x1047 () Bool)
(declare-fun x3797 () Int)
(declare-fun x2678 () Bool)
(declare-fun x2095 () Bool)
(declare-fun x2553 () x2192)
(declare-fun x3607 () x2192)
(declare-fun x5279 () Int)
(declare-fun x4114 () Int)
(declare-fun x3344 () Bool)
(declare-fun x4742 () Bool)
(declare-fun x5205 () Bool)
(declare-fun x4612 () Bool)
(declare-fun x1637 () Int)
(declare-fun x5834 () Bool)
(declare-fun x5604 () Bool)
(declare-fun x3033 () Int)
(declare-fun x5024 () Bool)
(declare-fun x835 () Bool)
(declare-fun x3977 () Bool)
(declare-fun x4187 () Int)
(declare-fun x3032 () Bool)
(declare-fun x5958 (Int) Int)
(declare-fun x1649 () Bool)
(declare-fun x487 () Bool)
(declare-fun x750 () x2192)
(declare-fun x5769 () Bool)
(declare-fun x3641 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x2714 () Int)
(declare-fun x213 () Int)
(declare-fun x4914 () Bool)
(declare-fun x4032 () Int)
(declare-fun x842 () x2192)
(declare-fun x2961 () Bool)
(declare-fun x2333 () Bool)
(declare-fun x417 () Bool)
(declare-fun x2765 () Bool)
(declare-fun x3597 () Bool)
(declare-fun x5651 () Int)
(declare-fun x4237 () Bool)
(declare-fun x350 () Bool)
(declare-fun x3158 () Int)
(declare-fun x1829 () Int)
(declare-fun x3050 () Bool)
(declare-fun x5805 () Bool)
(declare-fun x3135 () Int)
(declare-fun x2477 () Int)
(declare-fun x5156 () Int)
(declare-fun x4047 () Bool)
(declare-fun x1509 () Int)
(declare-fun x2125 () x2192)
(declare-fun x5458 () x2192)
(declare-fun x2608 () Bool)
(declare-fun x5930 () Int)
(declare-fun x1768 () Bool)
(declare-fun x2513 () Bool)
(declare-fun x1655 () Bool)
(declare-fun x4639 () Int)
(declare-fun x706 () Bool)
(declare-fun x6182 () Int)
(declare-fun x2160 () Bool)
(declare-fun x2052 () Bool)
(declare-fun x924 () x2192)
(declare-fun x3890 () Int)
(declare-fun x2006 () Int)
(declare-fun x4444 () Bool)
(declare-fun x6409 () Bool)
(declare-fun x6080 () Bool)
(declare-fun x720 () Int)
(declare-fun x5310 () Int)
(declare-fun x5295 () Int)
(declare-fun x641 () Bool)
(declare-fun x3540 () Bool)
(declare-fun x4356 () Int)
(declare-fun x1820 () Int)
(declare-fun x565 (Int) Int)
(declare-fun x6058 () x2192)
(declare-fun x1098 () Int)
(declare-fun x6365 () Bool)
(declare-fun x875 () Int)
(declare-fun x5767 () Bool)
(declare-fun x4184 () Bool)
(declare-fun x3701 () x2192)
(declare-fun x463 () Int)
(declare-fun x4455 () Int)
(declare-fun x6 () Bool)
(declare-fun x3731 () Bool)
(declare-fun x1265 () Int)
(declare-fun x852 () Int)
(declare-fun x5318 () Int)
(declare-fun x1715 () Int)
(declare-fun x6122 () Bool)
(declare-fun x5352 () Bool)
(declare-fun x3753 () Bool)
(declare-fun x2886 () x2192)
(declare-fun x5985 () Bool)
(declare-fun x3783 () Bool)
(declare-fun x123 () Bool)
(declare-fun x1543 () x2192)
(declare-fun x6124 () Bool)
(declare-fun x4640 () x2192)
(declare-fun x188 () Int)
(declare-fun x1162 () Bool)
(declare-fun x5337 () Int)
(declare-fun x3692 () Bool)
(declare-fun x5504 () Int)
(declare-fun x4694 () Bool)
(declare-fun x4169 () Bool)
(declare-fun x5354 () Int)
(declare-fun x3931 () x2192)
(declare-fun x5144 () x2192)
(declare-fun x2172 () x2192)
(declare-fun x3019 () Int)
(declare-fun x5253 () Bool)
(declare-fun x2182 () Bool)
(declare-fun x2168 () Bool)
(declare-fun x4291 () Bool)
(declare-fun x39 () Bool)
(declare-fun x215 () Int)
(declare-fun x3212 () Bool)
(declare-fun x2531 () Int)
(declare-fun x5385 () Bool)
(declare-fun x863 () Bool)
(declare-fun x931 () x2192)
(declare-fun x2715 () Bool)
(declare-fun x1566 () Bool)
(declare-fun x3396 () Bool)
(declare-fun x4124 () Bool)
(declare-fun x2607 () Bool)
(declare-fun x5959 () Bool)
(declare-fun x2897 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x4284 () Bool)
(declare-fun x5372 () Bool)
(declare-fun x205 () Bool)
(declare-fun x3145 () Int)
(declare-fun x4852 () Int)
(declare-fun x841 () Bool)
(declare-fun x5833 () Bool)
(declare-fun x4533 () Bool)
(declare-fun x2004 () Bool)
(declare-fun x109 () Int)
(declare-fun x2598 () x2192)
(declare-fun x5384 () Bool)
(declare-fun x631 () Bool)
(declare-fun x1716 () Bool)
(declare-fun x135 () Bool)
(declare-fun x5224 () Int)
(declare-fun x5972 () Bool)
(declare-fun x5916 () Int)
(declare-fun x5784 () Bool)
(declare-fun x5597 () Int)
(declare-fun x4180 () x2192)
(declare-fun x6178 () Int)
(declare-fun x985 () x2192)
(declare-fun x2040 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x5819 () Int)
(declare-fun x987 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x5748 () Int)
(declare-fun x4650 () Bool)
(declare-fun x5020 () Int)
(declare-fun x130 () Int)
(declare-fun x774 () Bool)
(declare-fun x2604 () Int)
(declare-fun x3582 () Bool)
(declare-fun x4136 () Bool)
(declare-fun x6215 () Bool)
(declare-fun x182 () Bool)
(declare-fun x2913 () Int)
(declare-fun x6366 () Bool)
(declare-fun x2457 () Bool)
(declare-fun x4765 () Int)
(declare-fun x3339 () Bool)
(declare-fun x2207 () Bool)
(declare-fun x4042 () Int)
(declare-fun x3680 () Int)
(declare-fun x1695 () Int)
(declare-fun x6296 () x2192)
(declare-fun x4365 () Bool)
(declare-fun x897 () Int)
(declare-fun x5622 () Bool)
(declare-fun x4713 () Int)
(declare-fun x1791 () Bool)
(declare-fun x4479 () Bool)
(declare-fun x4469 () Bool)
(declare-fun x6421 () x2192)
(declare-fun x2037 () Int)
(declare-fun x5666 () Int)
(declare-fun x820 () Int)
(declare-fun x1033 () Bool)
(declare-fun x2116 () Int)
(declare-fun x5194 () Bool)
(declare-fun x1365 () Int)
(declare-fun x4025 () Int)
(declare-fun x743 () Bool)
(declare-fun x4844 () Int)
(declare-fun x1556 () Int)
(declare-fun x47 () Int)
(declare-fun x6043 () Bool)
(declare-fun x1499 () Int)
(declare-fun x2003 () Bool)
(declare-fun x6230 () Int)
(declare-fun x3965 () Int)
(declare-fun x77 () Int)
(declare-fun x1058 () Bool)
(declare-fun x4834 () Bool)
(declare-fun x6088 () Int)
(declare-fun x3071 () Bool)
(declare-fun x2597 () Bool)
(declare-fun x452 () Bool)
(declare-fun x4148 () Int)
(declare-fun x56 () Int)
(declare-fun x3676 () Bool)
(declare-fun x1266 () Bool)
(declare-fun x1847 () x2192)
(declare-fun x1962 () Int)
(declare-fun x5122 () Bool)
(declare-fun x4310 () Bool)
(declare-fun x177 () Int)
(declare-fun x2224 () x2192)
(declare-fun x5423 () Int)
(declare-fun x190 () Bool)
(declare-fun x6232 () Int)
(declare-fun x1622 () Bool)
(declare-fun x6221 () Bool)
(declare-fun x692 () Int)
(declare-fun x4259 () Bool)
(declare-fun x4551 () Int)
(declare-fun x1370 () Bool)
(declare-fun x2613 () Int)
(declare-fun x2974 () Int)
(declare-fun x6081 () x2192)
(declare-fun x5945 () Bool)
(declare-fun x2202 () Bool)
(declare-fun x3296 () Bool)
(declare-fun x4177 () Bool)
(declare-fun x3672 () Int)
(declare-fun x869 () Bool)
(declare-fun x4189 () Int)
(declare-fun x2881 () Int)
(declare-fun x3989 () Bool)
(declare-fun x1954 () x2192)
(declare-fun x2887 () Int)
(declare-fun x6321 () Bool)
(declare-fun x4728 () Bool)
(declare-fun x3394 () Int)
(declare-fun x1592 () Bool)
(declare-fun x133 () Bool)
(declare-fun x4886 () Int)
(declare-fun x1060 () Int)
(declare-fun x965 () x2192)
(declare-fun x2514 () Int)
(declare-fun x6349 () Int)
(declare-fun x2023 () Int)
(declare-fun x786 () Int)
(declare-fun x3924 () Int)
(declare-fun x4164 () Bool)
(declare-fun x4347 () Int)
(declare-fun x3269 () x2192)
(declare-fun x160 () Bool)
(declare-fun x2896 () Bool)
(declare-fun x892 () Bool)
(declare-fun x908 () Int)
(declare-fun x719 () Bool)
(declare-fun x2321 () Bool)
(declare-fun x1271 () Int)
(declare-fun x3066 () Int)
(declare-fun x3697 () Bool)
(declare-fun x2026 () Int)
(declare-fun x4930 () Int)
(declare-fun x5380 () Bool)
(declare-fun x5764 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x1181 () Bool)
(declare-fun x3363 () Int)
(declare-fun x322 () Bool)
(declare-fun x3069 () x2192)
(declare-fun x5398 () Bool)
(declare-fun x2555 () Bool)
(declare-fun x2231 () Int)
(declare-fun x4240 () Int)
(declare-fun x2971 () Bool)
(declare-fun x5092 () Int)
(declare-fun x4782 () Int)
(declare-fun x1397 () Int)
(declare-fun x1805 () Bool)
(declare-fun x2827 () Int)
(declare-fun x5170 () Bool)
(declare-fun x5830 () Bool)
(declare-fun x3022 () Int)
(declare-fun x4794 () Bool)
(declare-fun x4680 () Bool)
(declare-fun x1891 () Bool)
(declare-fun x5301 () Bool)
(declare-fun x93 () Bool)
(declare-fun x2944 () x2192)
(declare-fun x6282 () x2192)
(declare-fun x5096 () Bool)
(declare-fun x6418 () Bool)
(declare-fun x2442 () Int)
(declare-fun x6078 () Int)
(declare-fun x1978 () Int)
(declare-fun x703 () Bool)
(declare-fun x1019 () Bool)
(declare-fun x5533 () Int)
(declare-fun x2149 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x3301 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x1366 () x2192)
(declare-fun x2536 () x2192)
(declare-fun x653 () Bool)
(declare-fun x5943 () Bool)
(declare-fun x1350 () Int)
(declare-fun x4448 () Int)
(declare-fun x88 () Int)
(declare-fun x1916 () Int)
(declare-fun x5127 () Bool)
(declare-fun x2646 () Int)
(declare-fun x4524 () Int)
(declare-fun x6082 () Int)
(declare-fun x2331 () Bool)
(declare-fun x817 () Bool)
(declare-fun x3312 () Bool)
(declare-fun x4288 () Bool)
(declare-fun x266 () Int)
(declare-fun x124 () Bool)
(declare-fun x3244 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x5440 () x2192)
(declare-fun x797 () Bool)
(declare-fun x3362 () x2192)
(declare-fun x4389 () Bool)
(declare-fun x4835 () Int)
(declare-fun x1393 () x2192)
(declare-fun x5110 () Bool)
(declare-fun x2034 () Int)
(declare-fun x794 () Bool)
(declare-fun x3360 () Bool)
(declare-fun x3715 () Int)
(declare-fun x2295 () Bool)
(declare-fun x3578 () Bool)
(declare-fun x3948 () Int)
(declare-fun x5782 () Bool)
(declare-fun x4080 () Int)
(declare-fun x2393 () Int)
(declare-fun x5538 () Int)
(declare-fun x2352 () Int)
(declare-fun x2672 () Int)
(declare-fun x2019 () Bool)
(declare-fun x2691 () x2192)
(declare-fun x3630 () Int)
(declare-fun x5999 () Int)
(declare-fun x5660 (x2192) Int)
(declare-fun x5678 () Bool)
(declare-fun x1834 () Int)
(declare-fun x5989 () Bool)
(declare-fun x3499 () Int)
(declare-fun x1073 () Bool)
(declare-fun x5701 () Bool)
(declare-fun x3934 () Bool)
(declare-fun x6330 () Int)
(declare-fun x2989 () Bool)
(declare-fun x4706 () Int)
(declare-fun x3960 () Int)
(declare-fun x1003 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x5800 () Bool)
(declare-fun x5141 () Bool)
(declare-fun x3299 () Int)
(declare-fun x4668 () Int)
(declare-fun x4977 () Int)
(declare-fun x4553 () Bool)
(declare-fun x4667 () Bool)
(declare-fun x3357 () Bool)
(declare-fun x2197 () x2192)
(declare-fun x22 () Bool)
(declare-fun x2214 () Int)
(declare-fun x2471 () Int)
(declare-fun x967 () Int)
(declare-fun x783 () Int)
(declare-fun x511 () x2192)
(declare-fun x5824 () Bool)
(declare-fun x5515 () Int)
(declare-fun x4449 () x2192)
(declare-fun x320 () x2192)
(declare-fun x5847 () Int)
(declare-fun x4088 () Int)
(declare-fun x5713 () Bool)
(declare-fun x4246 () Int)
(declare-fun x5869 () Bool)
(declare-fun x278 () Bool)
(declare-fun x5900 () Int)
(declare-fun x1887 () Bool)
(declare-fun x1904 () x2192)
(declare-fun x777 () Int)
(declare-fun x845 () Int)
(declare-fun x4438 () Int)
(declare-fun x865 () Bool)
(declare-fun x2922 () Int)
(declare-fun x3782 () Bool)
(declare-fun x25 () Int)
(declare-fun x4059 () x2192)
(declare-fun x132 () Bool)
(declare-fun x4329 () Int)
(declare-fun x5923 () Int)
(declare-fun x6429 () Bool)
(declare-fun x2313 () Bool)
(declare-fun x4980 () Int)
(declare-fun x2071 () Bool)
(declare-fun x993 () Int)
(declare-fun x1850 () Int)
(declare-fun x815 () Int)
(declare-fun x5173 () Bool)
(declare-fun x3157 () Bool)
(declare-fun x245 () Int)
(declare-fun x2416 () Bool)
(declare-fun x675 () Bool)
(declare-fun x1338 () Bool)
(declare-fun x4537 () x2192)
(declare-fun x6119 () Int)
(declare-fun x3035 () Bool)
(declare-fun x4493 () Int)
(declare-fun x2519 () Int)
(declare-fun x5502 () Int)
(declare-fun x1208 () Bool)
(declare-fun x5269 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x4730 () Bool)
(declare-fun x633 () Bool)
(declare-fun x242 () Bool)
(declare-fun x73 () Bool)
(declare-fun x766 () Int)
(declare-fun x1667 () Int)
(declare-fun x2368 () Int)
(declare-fun x6262 () Bool)
(declare-fun x1135 () Int)
(declare-fun x1510 () Bool)
(declare-fun x3222 () Int)
(declare-fun x537 () Int)
(declare-fun x1251 () Int)
(declare-fun x5456 () Int)
(declare-fun x2396 () Bool)
(declare-fun x3785 () Bool)
(declare-fun x4634 () Bool)
(declare-fun x3413 () Int)
(declare-fun x1244 () Bool)
(declare-fun x5040 () Int)
(declare-fun x4477 () Bool)
(declare-fun x3081 (x2192) Int)
(declare-fun x3104 () Int)
(declare-fun x810 () Bool)
(declare-fun x4358 () Bool)
(declare-fun x898 () Bool)
(declare-fun x5037 () Int)
(declare-fun x2499 () Int)
(declare-fun x3268 () Bool)
(declare-fun x202 () Bool)
(declare-fun x4911 () Bool)
(declare-fun x5467 () Bool)
(declare-fun x4378 () Bool)
(declare-fun x5002 () x2192)
(declare-fun x4557 () Int)
(declare-fun x1876 () Int)
(declare-fun x4777 () Bool)
(declare-fun x5305 () Int)
(declare-fun x1636 () Bool)
(declare-fun x5773 () Bool)
(declare-fun x3938 () Bool)
(declare-fun x5298 () x2192)
(declare-fun x2902 () Bool)
(declare-fun x3828 () Bool)
(declare-fun x5312 () Int)
(declare-fun x6295 () Bool)
(declare-fun x65 () Bool)
(declare-fun x5839 () Bool)
(declare-fun x255 () Bool)
(declare-fun x5919 () x2192)
(declare-fun x1467 () Bool)
(declare-fun x405 () Int)
(declare-fun x586 () Bool)
(declare-fun x3882 () Int)
(declare-fun x4196 () Int)
(declare-fun x41 () Int)
(declare-fun x1331 () Int)
(declare-fun x6290 () Bool)
(declare-fun x5390 () Int)
(declare-fun x5949 () Bool)
(declare-fun x5371 () Bool)
(declare-fun x5000 () Bool)
(declare-fun x4320 () Bool)
(declare-fun x2983 () Bool)
(declare-fun x4703 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x6378 () Int)
(declare-fun x6236 () Bool)
(declare-fun x5260 () Int)
(declare-fun x5582 () Bool)
(declare-fun x4993 () Int)
(declare-fun x2528 () Int)
(declare-fun x163 () Int)
(declare-fun x1984 () Bool)
(declare-fun x4420 () Bool)
(declare-fun x3373 () Bool)
(declare-fun x199 () Bool)
(declare-fun x1587 () x2192)
(declare-fun x4050 () Bool)
(declare-fun x1639 () Bool)
(declare-fun x3949 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x2263 () Bool)
(declare-fun x3957 () Int)
(declare-fun x4739 () Bool)
(declare-fun x1603 () Bool)
(declare-fun x2439 () Bool)
(declare-fun x4558 () x2192)
(declare-fun x2119 () Bool)
(declare-fun x1302 () Int)
(declare-fun x3012 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x4186 () Int)
(declare-fun x1501 () Int)
(declare-fun x4256 () Bool)
(declare-fun x6057 () x2192)
(declare-fun x2110 () Bool)
(declare-fun x5706 () Int)
(declare-fun x4654 () Int)
(declare-fun x1549 () Bool)
(declare-fun x5381 () x2192)
(declare-fun x717 () Bool)
(declare-fun x2720 () Bool)
(declare-fun x2839 () Bool)
(declare-fun x4085 () Bool)
(declare-fun x2684 () Bool)
(declare-fun x4864 () Bool)
(declare-fun x2039 () Int)
(declare-fun x4841 () x2192)
(declare-fun x4586 () Bool)
(declare-fun x1132 () Bool)
(declare-fun x4819 () Bool)
(declare-fun x3662 () Bool)
(declare-fun x4796 () x2192)
(declare-fun x1760 (Int) Int)
(declare-fun x4620 () Bool)
(declare-fun x3552 () Bool)
(declare-fun x1874 () Bool)
(declare-fun x4197 () Bool)
(declare-fun x2390 () Int)
(declare-fun x6266 () Int)
(declare-fun x3379 () Bool)
(declare-fun x5376 () Bool)
(declare-fun x807 () Bool)
(declare-fun x5902 () Bool)
(declare-fun x140 () Bool)
(declare-fun x5033 () Bool)
(declare-fun x6310 () Bool)
(declare-fun x5991 () Bool)
(declare-fun x859 () Bool)
(declare-fun x5254 () Int)
(declare-fun x2260 () Int)
(declare-fun x2883 () Int)
(declare-fun x3100 () Int)
(declare-fun x2500 () Bool)
(declare-fun x2204 () Bool)
(declare-fun x6037 () Bool)
(declare-fun x6033 () Int)
(declare-fun x5039 () Bool)
(declare-fun x2153 () Int)
(declare-fun x4907 () Int)
(declare-fun x5802 () Int)
(declare-fun x5730 () x2192)
(declare-fun x1700 () Bool)
(declare-fun x6101 () Bool)
(declare-fun x106 () Bool)
(declare-fun x5470 () Int)
(declare-fun x1971 () Int)
(declare-fun x2575 () x2192)
(declare-fun x4624 () Bool)
(declare-fun x1275 () Bool)
(declare-fun x1144 () Int)
(declare-fun x2609 () x2192)
(declare-fun x4212 () Int)
(declare-fun x4896 () Bool)
(declare-fun x1219 () Bool)
(declare-fun x1112 () Int)
(declare-fun x5593 () Int)
(declare-fun x3164 () Int)
(declare-fun x1773 () Int)
(declare-fun x3437 () Bool)
(declare-fun x328 () Bool)
(declare-fun x6002 () x2192)
(declare-fun x588 () Bool)
(declare-fun x4340 () Int)
(declare-fun x5089 () Bool)
(declare-fun x933 () Int)
(declare-fun x3708 () Bool)
(declare-fun x23 () Bool)
(declare-fun x2253 () Bool)
(declare-fun x6238 () x2192)
(declare-fun x2578 () Bool)
(declare-fun x5491 () Bool)
(declare-fun x2133 () x2192)
(declare-fun x1966 () Bool)
(declare-fun x2657 () Int)
(declare-fun x3266 () Bool)
(declare-fun x6095 () Bool)
(declare-fun x765 () Bool)
(declare-fun x2238 () Bool)
(declare-fun x1436 () Int)
(declare-fun x4534 () Int)
(declare-fun x49 () Int)
(declare-fun x2268 () x2192)
(declare-fun x4996 () Int)
(declare-fun x2322 () Bool)
(declare-fun x4905 (Int) Int)
(declare-fun x364 () Bool)
(declare-fun x2623 () Bool)
(declare-fun x2625 () Int)
(declare-fun x2937 () x2192)
(declare-fun x2284 () Bool)
(declare-fun x6323 () Int)
(declare-fun x889 () Bool)
(declare-fun x2587 () Bool)
(declare-fun x2635 () Bool)
(declare-fun x622 () x2192)
(declare-fun x1792 () Int)
(declare-fun x3679 () Int)
(declare-fun x1116 () Bool)
(declare-fun x4722 () Int)
(declare-fun x1576 () Bool)
(declare-fun x731 () Int)
(declare-fun x1865 () x2192)
(declare-fun x3101 () x2192)
(declare-fun x4644 () Int)
(declare-fun x2264 () Bool)
(declare-fun x5954 () Int)
(declare-fun x3689 () Bool)
(declare-fun x4095 () x2192)
(declare-fun x2517 () x2192)
(declare-fun x5177 () Bool)
(declare-fun x1294 () x2192)
(declare-fun x2836 () Bool)
(declare-fun x1540 () Bool)
(declare-fun x4920 () Bool)
(declare-fun x1845 () Int)
(declare-fun x3980 () Bool)
(declare-fun x2627 () Bool)
(declare-fun x3332 () Bool)
(declare-fun x4861 () Int)
(declare-fun x401 () x2192)
(declare-fun x5994 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x2584 () Bool)
(declare-fun x4517 () Bool)
(declare-fun x3628 () Int)
(declare-fun x4297 () Bool)
(declare-fun x5733 () Bool)
(declare-fun x943 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x455 () Bool)
(declare-fun x4823 () Int)
(declare-fun x5841 () Int)
(declare-fun x6116 () x2192)
(declare-fun x977 () Bool)
(declare-fun x3054 () Int)
(declare-fun x17 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x4688 () Bool)
(declare-fun x1787 () Bool)
(declare-fun x5410 () x2192)
(declare-fun x5065 () Bool)
(declare-fun x4845 () Bool)
(declare-fun x733 () Int)
(declare-fun x2962 () Bool)
(declare-fun x1665 () Int)
(declare-fun x2336 () Bool)
(declare-fun x2456 () Bool)
(declare-fun x5050 () x2192)
(declare-fun x1347 () Int)
(declare-fun x5027 () Int)
(declare-fun x648 () Int)
(declare-fun x5391 () Bool)
(declare-fun x329 () Int)
(declare-fun x1589 () Bool)
(declare-fun x3376 () Bool)
(declare-fun x1870 () Bool)
(declare-fun x5594 () Bool)
(declare-fun x2176 () Int)
(declare-fun x2791 () Bool)
(declare-fun x2872 () Int)
(declare-fun x67 () Bool)
(declare-fun x2380 () Int)
(declare-fun x4838 () Bool)
(declare-fun x4445 () Int)
(declare-fun x4116 () Bool)
(declare-fun x5198 () x2192)
(declare-fun x718 () Bool)
(declare-fun x5204 () Int)
(declare-fun x1519 () Bool)
(declare-fun x399 () x2192)
(declare-fun x4890 () Bool)
(declare-fun x3329 () Bool)
(declare-fun x6392 () x2192)
(declare-fun x4721 () Int)
(declare-fun x2338 () Int)
(declare-fun x4793 () Int)
(declare-fun x721 () Int)
(declare-fun x2287 () Bool)
(declare-fun x5126 () Bool)
(declare-fun x512 () Int)
(declare-fun x3925 () Bool)
(declare-fun x5756 () Int)
(declare-fun x3558 () Bool)
(declare-fun x4870 () x2192)
(declare-fun x5559 () Int)
(declare-fun x3291 () Int)
(declare-fun x4332 () Bool)
(declare-fun x2036 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x2053 () Int)
(declare-fun x288 (x2192) Int)
(declare-fun x904 () Int)
(declare-fun x3575 () Bool)
(declare-fun x5454 () Int)
(declare-fun x2620 () Bool)
(declare-fun x145 () Bool)
(declare-fun x5573 () Bool)
(declare-fun x4922 () Bool)
(declare-fun x1617 () x2192)
(declare-fun x2786 () Int)
(declare-fun x4432 () Int)
(declare-fun x6004 () Int)
(declare-fun x5531 () Bool)
(declare-fun x3410 () Bool)
(declare-fun x287 () Bool)
(declare-fun x2576 () Int)
(declare-fun x3137 () Int)
(declare-fun x4058 () Bool)
(declare-fun x6318 () Bool)
(declare-fun x477 () Bool)
(declare-fun x5600 () Bool)
(declare-fun x4815 () Int)
(declare-fun x1590 () Bool)
(declare-fun x2319 () Bool)
(declare-fun x4614 () Int)
(declare-fun x5787 () Int)
(declare-fun x2354 () x2192)
(declare-fun x6171 () Int)
(declare-fun x1212 () Bool)
(declare-fun x2195 () Bool)
(declare-fun x76 () Bool)
(declare-fun x460 () x2192)
(declare-fun x3616 () Bool)
(declare-fun x5735 () Bool)
(declare-fun x3599 () Bool)
(declare-fun x4625 () Int)
(declare-fun x515 () Bool)
(declare-fun x2933 () Bool)
(declare-fun x5803 () x2192)
(declare-fun x6234 () Int)
(declare-fun x3338 () Bool)
(declare-fun x5557 () Int)
(declare-fun x1558 () Int)
(declare-fun x4960 () Int)
(declare-fun x2086 () Bool)
(declare-fun x5837 () Int)
(declare-fun x974 () Bool)
(declare-fun x5148 () Bool)
(declare-fun x2722 () Bool)
(declare-fun x1235 () Bool)
(declare-fun x5162 () Bool)
(declare-fun x3827 () x2192)
(declare-fun x2234 () Bool)
(declare-fun x2698 () Bool)
(declare-fun x3853 () Bool)
(declare-fun x521 () x2192)
(declare-fun x2444 () Bool)
(declare-fun x157 () Int)
(declare-fun x3729 () Bool)
(declare-fun x6150 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x5637 () Int)
(declare-fun x700 () Int)
(declare-fun x2563 () Int)
(declare-fun x3800 () Bool)
(declare-fun x3011 () Bool)
(declare-fun x4033 () Bool)
(declare-fun x2114 () Bool)
(declare-fun x1215 () Int)
(declare-fun x2825 () Int)
(declare-fun x1360 () Bool)
(declare-fun x2560 () Bool)
(declare-fun x4223 () Int)
(declare-fun x1906 () x2192)
(declare-fun x5284 () Bool)
(declare-fun x1812 () Bool)
(declare-fun x5807 () Bool)
(declare-fun x387 () Bool)
(declare-fun x6020 () Int)
(declare-fun x3053 (Int) Int)
(declare-fun x5556 () Int)
(declare-fun x1421 () Bool)
(declare-fun x995 () Bool)
(declare-fun x4734 () Bool)
(declare-fun x1664 () Bool)
(declare-fun x2252 () Bool)
(declare-fun x4041 () Int)
(declare-fun x4115 () Bool)
(declare-fun x3794 () Bool)
(declare-fun x1972 () Int)
(declare-fun x2340 () Int)
(declare-fun x4034 () Int)
(declare-fun x5052 () Bool)
(declare-fun x5647 () Int)
(declare-fun x1672 () Int)
(declare-fun x5623 () Bool)
(declare-fun x2742 () Int)
(declare-fun x3300 () x2192)
(declare-fun x62 () Int)
(declare-fun x5057 () Bool)
(declare-fun x2509 () Int)
(declare-fun x5947 () Bool)
(declare-fun x198 () x2192)
(declare-fun x1537 () Bool)
(declare-fun x6146 () Int)
(declare-fun x519 () Int)
(declare-fun x6206 () Bool)
(declare-fun x4970 () Bool)
(declare-fun x5558 () Bool)
(declare-fun x2461 () Bool)
(declare-fun x4944 () Bool)
(declare-fun x5535 () Bool)
(declare-fun x1077 () Bool)
(declare-fun x2995 () Bool)
(declare-fun x2051 () Int)
(declare-fun x3202 () Int)
(declare-fun x4357 () Bool)
(declare-fun x5396 () Int)
(declare-fun x4564 () Int)
(declare-fun x2315 () Bool)
(declare-fun x1959 () Bool)
(declare-fun x3651 () x2192)
(declare-fun x3914 () Int)
(declare-fun x3474 () Bool)
(declare-fun x6186 () Int)
(declare-fun x4483 () Bool)
(declare-fun x2898 () Int)
(declare-fun x3998 () Bool)
(declare-fun x1823 () Int)
(declare-fun x6039 () Int)
(declare-fun x3683 () Int)
(declare-fun x6134 () Bool)
(declare-fun x2527 () Bool)
(declare-fun x5944 () Int)
(declare-fun x357 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x4559 () Bool)
(declare-fun x3020 () x2192)
(declare-fun x438 () x2192)
(declare-fun x576 () Int)
(declare-fun x2163 () Bool)
(declare-fun x6401 () x2192)
(declare-fun x2289 () Int)
(declare-fun x5952 () Int)
(declare-fun x4550 () Int)
(declare-fun x3727 () Int)
(declare-fun x433 () Bool)
(declare-fun x6149 () Int)
(declare-fun x6100 () x2192)
(declare-fun x332 (x2192) Int)
(declare-fun x367 () Bool)
(declare-fun x5831 () Int)
(declare-fun x3228 () Int)
(declare-fun x4900 () Bool)
(declare-fun x5400 () x2192)
(declare-fun x2952 () Int)
(declare-fun x307 () Int)
(declare-fun x3335 () Bool)
(declare-fun x2824 () Int)
(declare-fun x4585 () Bool)
(declare-fun x6015 () Bool)
(declare-fun x5751 () x2192)
(declare-fun x1485 () Int)
(declare-fun x2423 () Int)
(declare-fun x4824 () Int)
(declare-fun x3428 () Bool)
(declare-fun x776 () Int)
(declare-fun x3633 () Bool)
(declare-fun x3706 (Int) Int)
(declare-fun x4079 () Bool)
(declare-fun x1290 () Int)
(declare-fun x423 () x2192)
(declare-fun x5293 () Bool)
(declare-fun x3901 () Int)
(declare-fun x6252 () x2192)
(declare-fun x4443 () Bool)
(declare-fun x843 () Int)
(declare-fun x227 () Bool)
(declare-fun x1851 () Bool)
(declare-fun x5143 () x2192)
(declare-fun x5030 () Int)
(declare-fun x2840 () Bool)
(declare-fun x450 () x2192)
(declare-fun x4302 () Int)
(declare-fun x5032 () Int)
(declare-fun x2910 () Int)
(declare-fun x3231 () Int)
(declare-fun x1937 () Int)
(declare-fun x4868 () Int)
(declare-fun x1388 () Int)
(declare-fun x3369 () Int)
(declare-fun x1274 () x2192)
(declare-fun x3695 () Bool)
(declare-fun x5130 () Bool)
(declare-fun x1309 () x2192)
(declare-fun x4803 () x2192)
(declare-fun x1881 () Bool)
(declare-fun x513 () Bool)
(declare-fun x1950 () Bool)
(declare-fun x5247 () Bool)
(declare-fun x3878 () Bool)
(declare-fun x5327 () Bool)
(declare-fun x1598 () Bool)
(declare-fun x3225 () Bool)
(declare-fun x6032 () Bool)
(declare-fun x3508 () Int)
(declare-fun x2465 () Bool)
(declare-fun x4051 () Int)
(declare-fun x1416 () x2192)
(declare-fun x2345 () Bool)
(declare-fun x4020 () Bool)
(declare-fun x1157 () Int)
(declare-fun x4528 () Int)
(declare-fun x539 () Bool)
(declare-fun x4573 () Bool)
(declare-fun x1800 () Bool)
(declare-fun x2069 () Bool)
(declare-fun x1375 () Int)
(declare-fun x4691 () Bool)
(declare-fun x3580 () Bool)
(declare-fun x728 () Int)
(declare-fun x5095 () Int)
(declare-fun x6308 () Bool)
(declare-fun x6047 () Bool)
(declare-fun x4923 () Bool)
(declare-fun x3691 () Bool)
(declare-fun x680 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x3941 () x2192)
(declare-fun x5812 () Bool)
(declare-fun x1899 () Bool)
(declare-fun x21 () Bool)
(declare-fun x2699 () Bool)
(declare-fun x4929 () Bool)
(declare-fun x4696 () Bool)
(declare-fun x3917 () x2192)
(declare-fun x5429 () Int)
(declare-fun x1668 () Int)
(declare-fun x4814 () Bool)
(declare-fun x2674 () Bool)
(declare-fun x2460 () Int)
(declare-fun x1114 () Bool)
(declare-fun x4457 () Int)
(declare-fun x4776 () Bool)
(declare-fun x5360 () x2192)
(declare-fun x5286 () Int)
(declare-fun x4731 () Bool)
(declare-fun x5562 () Int)
(declare-fun x691 () Int)
(declare-fun x1793 () Int)
(declare-fun x3567 () Int)
(declare-fun x4785 () Int)
(declare-fun x120 () Bool)
(declare-fun x5187 () Bool)
(declare-fun x6364 () Bool)
(declare-fun x4698 () Bool)
(declare-fun x383 () x2192)
(declare-fun x5433 () Bool)
(declare-fun x1555 () Bool)
(declare-fun x4069 () Int)
(declare-fun x736 () Int)
(declare-fun x235 () Int)
(declare-fun x3884 () Bool)
(declare-fun x4957 () Bool)
(declare-fun x3388 () Int)
(declare-fun x3444 () x2192)
(declare-fun x374 () Int)
(declare-fun x2277 () x2192)
(declare-fun x3836 () x2192)
(declare-fun x2028 () Bool)
(declare-fun x3725 () x2192)
(declare-fun x4811 () x2192)
(declare-fun x6056 () Bool)
(declare-fun x5256 () Bool)
(declare-fun x2644 () Int)
(declare-fun x4661 () Bool)
(declare-fun x5358 () Int)
(declare-fun x2622 () Bool)
(declare-fun x3900 () Bool)
(declare-fun x563 () x2192)
(declare-fun x2586 () Int)
(declare-fun x3714 () Bool)
(declare-fun x3148 () Int)
(declare-fun x3446 () Bool)
(declare-fun x1926 () Bool)
(declare-fun x4348 () Bool)
(declare-fun x2282 () Bool)
(declare-fun x4342 () Int)
(declare-fun x909 () Int)
(declare-fun x4862 () Int)
(declare-fun x5063 () Int)
(declare-fun x1803 () Int)
(declare-fun x5046 () Int)
(declare-fun x6343 () Int)
(declare-fun x2323 () Bool)
(declare-fun x409 () x2192)
(declare-fun x5711 () Bool)
(declare-fun x6368 () Int)
(declare-fun x5272 () Bool)
(declare-fun x654 () Int)
(declare-fun x665 () Bool)
(declare-fun x4194 () Bool)
(declare-fun x1245 () Int)
(declare-fun x175 () Int)
(declare-fun x3333 () Bool)
(declare-fun x5036 () Bool)
(declare-fun x249 () Bool)
(declare-fun x3642 () Bool)
(declare-fun x1276 () Int)
(declare-fun x195 () Int)
(declare-fun x1454 () Bool)
(declare-fun x2770 () Bool)
(declare-fun x2903 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x2782 () Int)
(declare-fun x4836 () Bool)
(declare-fun x72 () Bool)
(declare-fun x5870 () Int)
(declare-fun x510 () x2192)
(declare-fun x3565 () x2192)
(declare-fun x5498 () x2192)
(declare-fun x6091 () Int)
(declare-fun x1955 () x2192)
(declare-fun x6419 () Int)
(declare-fun x2867 () Bool)
(declare-fun x484 () x2192)
(declare-fun x4364 () Bool)
(declare-fun x128 () Int)
(declare-fun x1910 () x2192)
(declare-fun x6120 () Int)
(declare-fun x3584 () Bool)
(declare-fun x146 () Int)
(declare-fun x172 () Bool)
(declare-fun x5655 () Bool)
(declare-fun x5628 () Int)
(declare-fun x1982 () Int)
(declare-fun x2154 () Bool)
(declare-fun x4 () Bool)
(declare-fun x3892 () Bool)
(declare-fun x4873 () Bool)
(declare-fun x474 () Int)
(declare-fun x2482 () Int)
(declare-fun x658 () Bool)
(declare-fun x3238 () Bool)
(declare-fun x4411 () Bool)
(declare-fun x5979 () x2192)
(declare-fun x4077 () Bool)
(declare-fun x5661 () Int)
(declare-fun x5313 () Bool)
(declare-fun x4405 () Bool)
(declare-fun x5674 () Bool)
(declare-fun x508 () Bool)
(declare-fun x4283 () Bool)
(declare-fun x4278 () Bool)
(declare-fun x1460 () Bool)
(declare-fun x732 () Int)
(declare-fun x4608 () Bool)
(declare-fun x6408 () Bool)
(declare-fun x2443 () Bool)
(declare-fun x5227 () Bool)
(declare-fun x2189 () Int)
(declare-fun x3120 () Int)
(declare-fun x5026 () Int)
(declare-fun x5645 () Int)
(declare-fun x2409 () x2192)
(declare-fun x4404 () Int)
(declare-fun x3078 () Int)
(declare-fun x1227 () Bool)
(declare-fun x5889 () Bool)
(declare-fun x3922 () Bool)
(declare-fun x5447 () Int)
(declare-fun x2223 () Bool)
(declare-fun x3188 () Bool)
(declare-fun x2830 () Bool)
(declare-fun x5378 () Bool)
(declare-fun x5140 () Bool)
(declare-fun x5511 () Bool)
(declare-fun x1979 () Bool)
(declare-fun x3534 () Int)
(declare-fun x1386 () Bool)
(declare-fun x5359 () Bool)
(declare-fun x2302 () Int)
(declare-fun x1293 () x2192)
(declare-fun x5171 () Int)
(declare-fun x1056 () Bool)
(declare-fun x6203 () Bool)
(declare-fun x6270 () Bool)
(declare-fun x5844 () Int)
(declare-fun x100 () x2192)
(declare-fun x2211 () Bool)
(declare-fun x763 () Int)
(declare-fun x2701 () Bool)
(declare-fun x2355 () Int)
(declare-fun x3208 () Bool)
(declare-fun x1312 () Int)
(declare-fun x1647 () x2192)
(declare-fun x6079 () Bool)
(declare-fun x6279 () Bool)
(declare-fun x2362 () Bool)
(declare-fun x2094 () Int)
(declare-fun x2057 () Bool)
(declare-fun x2228 () x2192)
(declare-fun x2899 () Int)
(declare-fun x1532 () Int)
(declare-fun x5884 () Int)
(declare-fun x3191 () Int)
(declare-fun x1291 () Bool)
(declare-fun x861 () Bool)
(declare-fun x6294 () Int)
(declare-fun x2177 () Int)
(declare-fun x663 () Bool)
(declare-fun x2579 () Bool)
(declare-fun x6014 () x2192)
(declare-fun x1409 () Int)
(declare-fun x3626 () Int)
(declare-fun x2400 () Int)
(declare-fun x1267 () Bool)
(declare-fun x2859 () Bool)
(declare-fun x6059 () Int)
(declare-fun x4941 (Int Int) Int)
(declare-fun x6245 () Int)
(declare-fun x646 () Int)
(declare-fun x2434 () Bool)
(declare-fun x4575 () x2192)
(declare-fun x5448 () Int)
(declare-fun x5480 () Int)
(declare-fun x1282 () Bool)
(declare-fun x746 () x2192)
(declare-fun x3080 () Bool)
(declare-fun x5420 () Bool)
(declare-fun x5303 () Int)
(declare-fun x4339 () Int)
(declare-fun x4978 () x2192)
(declare-fun x3541 () Int)
(declare-fun x6028 () Bool)
(declare-fun x881 () Int)
(declare-fun x5579 () Bool)
(declare-fun x4390 () Bool)
(declare-fun x6180 () Int)
(declare-fun x1610 () Int)
(declare-fun x2535 () Int)
(declare-fun x643 () x2192)
(declare-fun x4408 () Bool)
(declare-fun x5656 () Bool)
(declare-fun x6161 () x2192)
(declare-fun x3705 () Bool)
(declare-fun x2526 () Bool)
(declare-fun x4529 () Bool)
(declare-fun x1831 () Bool)
(declare-fun x5608 () Int)
(declare-fun x1671 () Int)
(declare-fun x3961 () Bool)
(declare-fun x5387 () Int)
(declare-fun x4751 () Int)
(declare-fun x6397 () Bool)
(declare-fun x3525 () Bool)
(declare-fun x1146 () Bool)
(declare-fun x3958 () Bool)
(declare-fun x4383 () Int)
(declare-fun x1167 () Int)
(declare-fun x481 () Bool)
(declare-fun x4807 () Bool)
(declare-fun x2022 () Int)
(declare-fun x181 () Bool)
(declare-fun x4073 () Bool)
(declare-fun x5836 () Bool)
(declare-fun x5635 () Bool)
(declare-fun x4887 () Bool)
(declare-fun x2538 (x2192) Int)
(declare-fun x11 () Bool)
(declare-fun x3273 () Bool)
(declare-fun x5875 () Int)
(declare-fun x3585 () x2192)
(declare-fun x3349 () Int)
(declare-fun x33 () Bool)
(declare-fun x4035 () Bool)
(declare-fun x3921 () Int)
(declare-fun x3257 () Bool)
(declare-fun x1923 () Bool)
(declare-fun x874 () Bool)
(declare-fun x1534 () Bool)
(declare-fun x1209 () Bool)
(declare-fun x2511 () Bool)
(declare-fun x3568 () x2192)
(declare-fun x4419 () Int)
(declare-fun x3084 () Bool)
(declare-fun x3661 () Bool)
(declare-fun x3818 () Bool)
(declare-fun x3193 () Bool)
(declare-fun x2871 () Bool)
(declare-fun x4631 () Int)
(declare-fun x5118 () Int)
(declare-fun x2677 () Bool)
(declare-fun x4156 () Bool)
(declare-fun x3134 () Int)
(declare-fun x4791 () Bool)
(declare-fun x2713 () Bool)
(declare-fun x5322 () Int)
(declare-fun x1448 () Bool)
(declare-fun x1492 () Bool)
(declare-fun x5120 () Int)
(declare-fun x4110 () Int)
(declare-fun x3450 () Bool)
(declare-fun x5644 () Bool)
(declare-fun x3421 () Int)
(declare-fun x3907 () Bool)
(declare-fun x3735 () Int)
(declare-fun x1483 () Bool)
(declare-fun x5004 () Int)
(declare-fun x3279 () Int)
(declare-fun x4102 () Bool)
(declare-fun x1682 () x2192)
(declare-fun x1946 () Int)
(declare-fun x2686 () Int)
(declare-fun x203 () Int)
(declare-fun x3944 (Int) Int)
(declare-fun x809 () Bool)
(declare-fun x5439 () Bool)
(declare-fun x5971 () Bool)
(declare-fun x6395 () Int)
(declare-fun x478 () Bool)
(declare-fun x2771 () Int)
(declare-fun x3487 () Bool)
(declare-fun x4092 () Int)
(declare-fun x1542 () Bool)
(declare-fun x2105 () Bool)
(declare-fun x326 () Int)
(declare-fun x5422 () Bool)
(declare-fun x3766 () Bool)
(declare-fun x482 () x2192)
(declare-fun x6159 () Int)
(declare-fun x2411 () Int)
(declare-fun x1627 () x2192)
(declare-fun x922 () Bool)
(declare-fun x3542 () Bool)
(declare-fun x2784 () Int)
(declare-fun x3209 () Int)
(declare-fun x637 () Int)
(declare-fun x4300 () Bool)
(declare-fun x4657 () Bool)
(declare-fun x114 () Bool)
(declare-fun x1858 () Bool)
(declare-fun x1785 () Int)
(declare-fun x4973 () Int)
(declare-fun x2144 () Bool)
(declare-fun x3105 () Bool)
(declare-fun x261 () Int)
(declare-fun x1611 () Bool)
(declare-fun x358 () Bool)
(declare-fun x4434 () Bool)
(declare-fun x467 () Int)
(declare-fun x1862 () Int)
(declare-fun x4113 () Bool)
(declare-fun x218 () Bool)
(declare-fun x2011 () Int)
(declare-fun x1762 () Int)
(declare-fun x5085 () Bool)
(declare-fun x617 () Bool)
(declare-fun x3416 () Bool)
(declare-fun x5344 () x2192)
(declare-fun x5551 () Bool)
(declare-fun x1911 () Bool)
(declare-fun x915 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x4986 () Bool)
(declare-fun x757 () Bool)
(declare-fun x747 () Bool)
(declare-fun x758 () x2192)
(declare-fun x57 () Bool)
(declare-fun x4313 () Int)
(declare-fun x2320 () Bool)
(declare-fun x2370 () Bool)
(declare-fun x5138 () Int)
(declare-fun x3352 () Bool)
(declare-fun x4998 () Bool)
(declare-fun x4046 () Int)
(declare-fun x2181 () Bool)
(declare-fun x3768 () Bool)
(declare-fun x3860 () Bool)
(declare-fun x3051 () Int)
(declare-fun x2451 () Int)
(declare-fun x3420 (Int) Int)
(declare-fun x1380 () Bool)
(declare-fun x418 () Bool)
(declare-fun x4584 () Int)
(declare-fun x5302 () Bool)
(declare-fun x5389 () Bool)
(declare-fun x4588 () Int)
(declare-fun x3184 () Bool)
(declare-fun x5121 () x2192)
(declare-fun x1763 () Int)
(declare-fun x2291 () Bool)
(declare-fun x1612 () Int)
(declare-fun x1201 () Bool)
(declare-fun x2901 () x2192)
(declare-fun x2449 () Int)
(declare-fun x5964 () Bool)
(declare-fun x2262 () Bool)
(declare-fun x506 () Bool)
(declare-fun x3432 () Bool)
(declare-fun x689 () Int)
(declare-fun x6005 () Int)
(declare-fun x149 () Int)
(declare-fun x3326 () Bool)
(declare-fun x2484 () Bool)
(declare-fun x3037 () Bool)
(declare-fun x3740 () Bool)
(declare-fun x2407 () Int)
(declare-fun x1313 () x2192)
(declare-fun x5547 () Bool)
(declare-fun x5643 () Int)
(declare-fun x4732 () Bool)
(declare-fun x664 () x2192)
(declare-fun x6316 () Int)
(declare-fun x2190 () Bool)
(declare-fun x211 () Bool)
(declare-fun x3072 () Int)
(declare-fun x74 () Bool)
(declare-fun x6199 () Bool)
(declare-fun x1184 () Int)
(declare-fun x964 () Bool)
(declare-fun x5479 () Bool)
(declare-fun x6307 () Bool)
(declare-fun x679 () Bool)
(declare-fun x3475 () Bool)
(declare-fun x5850 () Int)
(declare-fun x2541 () Bool)
(declare-fun x3886 () Bool)
(declare-fun x4632 () Bool)
(declare-fun x3406 () x2192)
(declare-fun x2308 () Int)
(declare-fun x2649 () Int)
(declare-fun x5585 () x2192)
(declare-fun x5273 () Bool)
(declare-fun x4689 () Int)
(declare-fun x6344 () Bool)
(declare-fun x1163 () Int)
(declare-fun x2668 () Int)
(declare-fun x3529 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x4875 () Int)
(declare-fun x3005 () Int)
(declare-fun x1027 () Bool)
(declare-fun x5093 () Bool)
(declare-fun x2300 () Bool)
(declare-fun x2412 () Int)
(declare-fun x2062 () Bool)
(declare-fun x4786 () Bool)
(declare-fun x342 () Int)
(declare-fun x772 () Int)
(declare-fun x3856 () Int)
(declare-fun x4895 () Int)
(declare-fun x4963 () Bool)
(declare-fun x3639 () Int)
(declare-fun x4727 () Bool)
(declare-fun x1840 () Int)
(declare-fun x4221 () Int)
(declare-fun x5664 () Int)
(declare-fun x5115 () Bool)
(declare-fun x3590 () Int)
(declare-fun x4343 () Int)
(declare-fun x3759 () Bool)
(declare-fun x2940 () Int)
(declare-fun x6301 () Bool)
(declare-fun x2844 () Bool)
(declare-fun x2495 () Bool)
(declare-fun x5319 () Int)
(declare-fun x3862 () Bool)
(declare-fun x3172 () Int)
(declare-fun x499 () Bool)
(declare-fun x3323 () x2192)
(declare-fun x6211 () Int)
(declare-fun x1740 () Int)
(declare-fun x1680 () Bool)
(declare-fun x4669 () Bool)
(declare-fun x6293 () Int)
(declare-fun x5755 () Int)
(declare-fun x1739 () Bool)
(declare-fun x4659 () Int)
(declare-fun x906 () Int)
(declare-fun x2760 () Int)
(declare-fun x945 () Bool)
(declare-fun x5010 () Int)
(declare-fun x3235 () x2192)
(declare-fun x5965 () Int)
(declare-fun x4678 () Bool)
(declare-fun x2356 () Int)
(declare-fun x1394 () Int)
(declare-fun x5599 () Int)
(declare-fun x2097 () Bool)
(declare-fun x6331 () Bool)
(declare-fun x798 () Bool)
(declare-fun x2269 () x2192)
(declare-fun x6239 () Int)
(declare-fun x5892 () Bool)
(declare-fun x6038 () Int)
(declare-fun x2697 () Bool)
(declare-fun x5519 () Int)
(declare-fun x5603 () Bool)
(declare-fun x4820 () Bool)
(declare-fun x2487 () Bool)
(declare-fun x4999 () Int)
(declare-fun x6114 () Int)
(declare-fun x4813 () x2192)
(declare-fun x3747 () x2192)
(declare-fun x2357 () Bool)
(declare-fun x5576 () Int)
(declare-fun x5698 () Int)
(declare-fun x3371 () Int)
(declare-fun x55 () Int)
(declare-fun x5482 () Int)
(declare-fun x2061 () Int)
(declare-fun x4697 () Bool)
(declare-fun x1591 () Bool)
(declare-fun x1786 () Bool)
(declare-fun x1355 () Bool)
(declare-fun x5238 () Bool)
(declare-fun x5399 () Int)
(declare-fun x1804 () Bool)
(declare-fun x37 () Bool)
(declare-fun x2508 () Bool)
(declare-fun x1546 () Bool)
(declare-fun x2603 () Int)
(declare-fun x6373 () Int)
(declare-fun x3026 () Int)
(declare-fun x6244 () x2192)
(declare-fun x3501 () Int)
(declare-fun x4233 () Int)
(declare-fun x5377 () Int)
(declare-fun x442 () x2192)
(declare-fun x3408 () Int)
(declare-fun x376 () Bool)
(declare-fun x1272 (x2192) Int)
(declare-fun x3602 () Bool)
(declare-fun x5581 () Bool)
(declare-fun x2545 () Int)
(declare-fun x5054 () x2192)
(declare-fun x1413 () Int)
(declare-fun x3550 () x2192)
(declare-fun x2318 () x2192)
(declare-fun x4937 () x2192)
(declare-fun x5425 () Int)
(declare-fun x1025 () Bool)
(declare-fun x1237 () Int)
(declare-fun x6187 () Bool)
(declare-fun x4466 () Bool)
(declare-fun x5276 () Bool)
(declare-fun x4142 () Bool)
(declare-fun x6018 () Int)
(declare-fun x5338 () x2192)
(declare-fun x1161 () Bool)
(declare-fun x5163 () Bool)
(declare-fun x9 () Int)
(declare-fun x97 () Bool)
(declare-fun x5416 () x2192)
(declare-fun x1138 () Int)
(declare-fun x3127 () Int)
(declare-fun x1176 () Bool)
(declare-fun x3649 () Int)
(declare-fun x394 () x2192)
(declare-fun x2727 () Bool)
(declare-fun x657 () Int)
(declare-fun x4385 () Int)
(declare-fun x4134 () Bool)
(declare-fun x1348 (Int) Int)
(declare-fun x3232 () Int)
(declare-fun x2107 () Int)
(declare-fun x2675 () Int)
(declare-fun x5071 () Int)
(declare-fun x1096 () x2192)
(declare-fun x2406 () Bool)
(declare-fun x3790 () Int)
(declare-fun x1578 (x2192) Int)
(declare-fun x1298 () Bool)
(declare-fun x6280 () Bool)
(declare-fun x1988 () Bool)
(declare-fun x439 () Bool)
(declare-fun x2561 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x6417 () Bool)
(declare-fun x4353 () Bool)
(declare-fun x560 () Int)
(declare-fun x1418 () x2192)
(declare-fun x95 () Bool)
(declare-fun x2494 () Bool)
(declare-fun x1182 () Int)
(declare-fun x4465 (x2192) Int)
(declare-fun x2342 () Int)
(declare-fun x1687 () Bool)
(declare-fun x4935 () Bool)
(declare-fun x2656 () Bool)
(declare-fun x3551 () Int)
(declare-fun x562 () Bool)
(declare-fun x3483 () Bool)
(declare-fun x1799 () Bool)
(declare-fun x2631 () Bool)
(declare-fun x1816 () Bool)
(declare-fun x4071 () Bool)
(declare-fun x2067 () Bool)
(declare-fun x4049 () Bool)
(declare-fun x3074 () Int)
(declare-fun x5514 () Bool)
(declare-fun x3737 () Int)
(declare-fun x5980 () Bool)
(declare-fun x2241 () x2192)
(declare-fun x4749 () Int)
(declare-fun x2796 () Int)
(declare-fun x434 () Int)
(declare-fun x5347 () Bool)
(declare-fun x6313 () x2192)
(declare-fun x3258 () Int)
(declare-fun x5348 () Bool)
(declare-fun x1822 () Bool)
(declare-fun x790 () Int)
(declare-fun x86 () Int)
(declare-fun x3514 () Bool)
(declare-fun x5799 () Bool)
(declare-fun x5073 () Int)
(declare-fun x1171 () Int)
(declare-fun x748 () Int)
(declare-fun x381 () Int)
(declare-fun x1557 () Bool)
(declare-fun x2815 () Int)
(declare-fun x1726 () Bool)
(declare-fun x3543 () Bool)
(declare-fun x3461 () Bool)
(declare-fun x3834 () Int)
(declare-fun x2273 () Bool)
(declare-fun x3254 () Bool)
(declare-fun x5771 () Bool)
(declare-fun x4683 () Bool)
(declare-fun x6111 () x2192)
(declare-fun x2076 () x2192)
(declare-fun x3804 () Bool)
(declare-fun x674 () Bool)
(declare-fun x3603 () Int)
(declare-fun x4971 () Int)
(declare-fun x2360 () Bool)
(declare-fun x1187 () Int)
(declare-fun x2448 () Bool)
(declare-fun x308 () Int)
(declare-fun x5223 () Int)
(declare-fun x5061 () Int)
(declare-fun x4892 () x2192)
(declare-fun x2610 () Bool)
(declare-fun x4780 () Bool)
(declare-fun x4076 () Int)
(declare-fun x760 () Bool)
(declare-fun x1390 () Bool)
(declare-fun x716 () x2192)
(declare-fun x2210 () Int)
(declare-fun x447 () Int)
(declare-fun x3243 () Int)
(declare-fun x4818 () Bool)
(declare-fun x3436 () Bool)
(declare-fun x5234 () Bool)
(declare-fun x644 () x2192)
(declare-fun x3455 () Int)
(declare-fun x1248 () Int)
(declare-fun x4224 () Int)
(declare-fun x2469 () x2192)
(declare-fun x764 () Bool)
(declare-fun x976 () Bool)
(declare-fun x4317 () Bool)
(declare-fun x2088 () Int)
(declare-fun x1359 () Bool)
(declare-fun x6163 () Int)
(declare-fun x4402 () Int)
(declare-fun x5217 () Bool)
(declare-fun x1809 () Bool)
(declare-fun x616 () Int)
(declare-fun x6381 () Int)
(declare-fun x6130 () Int)
(declare-fun x2801 () Bool)
(declare-fun x5374 () Bool)
(declare-fun x4833 () Int)
(declare-fun x628 () Bool)
(declare-fun x1890 () Bool)
(declare-fun x962 () x2192)
(declare-fun x1697 () Bool)
(declare-fun x4337 () Int)
(declare-fun x4571 () Bool)
(declare-fun x551 () Bool)
(declare-fun x4602 () Int)
(declare-fun x4267 () Int)
(declare-fun x3613 () Bool)
(declare-fun x1385 () Int)
(declare-fun x538 () Int)
(declare-fun x2906 () x2192)
(declare-fun x1894 () Bool)
(declare-fun x704 () Bool)
(declare-fun x1755 () Bool)
(declare-fun x5469 () Int)
(declare-fun x2589 () Int)
(declare-fun x4839 () Bool)
(declare-fun x2240 () Bool)
(declare-fun x5941 () Int)
(declare-fun x5760 () Int)
(declare-fun x351 () x2192)
(declare-fun x3995 () Bool)
(declare-fun x6340 () Bool)
(declare-fun x607 () x2192)
(declare-fun x4990 () Bool)
(declare-fun x3763 () Int)
(declare-fun x113 () Int)
(declare-fun x1642 () Bool)
(declare-fun x3229 () Int)
(declare-fun x1185 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x4043 () Int)
(declare-fun x2516 () Int)
(declare-fun x5567 () Bool)
(declare-fun x2063 (Int) Int)
(declare-fun x5691 () Int)
(declare-fun x1701 () Bool)
(declare-fun x1802 () Bool)
(declare-fun x2721 () Int)
(declare-fun x2984 () Bool)
(declare-fun x2121 () Int)
(declare-fun x1417 () Bool)
(declare-fun x4676 () Bool)
(declare-fun x4362 () Bool)
(declare-fun x5903 () Bool)
(declare-fun x1011 () Int)
(declare-fun x5888 () Bool)
(declare-fun x1842 () Bool)
(declare-fun x5693 () Bool)
(declare-fun x851 () Bool)
(declare-fun x4985 () Int)
(declare-fun x356 () Int)
(declare-fun x3014 () Bool)
(declare-fun x1759 () Int)
(declare-fun x4514 () Int)
(declare-fun x343 () Bool)
(declare-fun x429 () Bool)
(declare-fun x2382 () Int)
(declare-fun x3017 () Bool)
(declare-fun x5665 () Int)
(declare-fun x4671 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x4075 () Bool)
(declare-fun x4508 () Bool)
(declare-fun x3077 () Int)
(declare-fun x3996 () Int)
(declare-fun x4333 () Bool)
(declare-fun x799 () Int)
(declare-fun x3354 () Int)
(declare-fun x1224 () Bool)
(declare-fun x3767 () Int)
(declare-fun x4277 () Bool)
(declare-fun x1696 () Bool)
(declare-fun x3021 () Int)
(declare-fun x775 () Int)
(declare-fun x5686 () Int)
(declare-fun x1088 () Bool)
(declare-fun x4512 () Bool)
(declare-fun x4711 () Bool)
(declare-fun x1395 () x2192)
(declare-fun x2889 () x2192)
(declare-fun x6048 () Int)
(declare-fun x3674 () Bool)
(declare-fun x913 () Int)
(declare-fun x275 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x3189 () Int)
(declare-fun x6118 () x2192)
(declare-fun x4153 () Bool)
(declare-fun x5715 () Int)
(declare-fun x5182 () Bool)
(declare-fun x950 () Bool)
(declare-fun x5357 () Bool)
(declare-fun x4326 () Bool)
(declare-fun x639 () Bool)
(declare-fun x2849 () Bool)
(declare-fun x5472 () Bool)
(declare-fun x5413 () Bool)
(declare-fun x3554 () Bool)
(declare-fun x2402 () Bool)
(declare-fun x5373 () Int)
(declare-fun x2700 () Int)
(declare-fun x2655 () x2192)
(declare-fun x3226 () Bool)
(declare-fun x155 () Bool)
(declare-fun x1102 () Int)
(declare-fun x1528 () Bool)
(declare-fun x2164 () Bool)
(declare-fun x1640 () Bool)
(declare-fun x971 () Bool)
(declare-fun x5921 (x2192) Int)
(declare-fun x1373 () Int)
(declare-fun x2755 () Bool)
(declare-fun x956 () Int)
(declare-fun x6041 () Int)
(declare-fun x71 () Bool)
(declare-fun x3843 () Bool)
(declare-fun x6289 () Bool)
(declare-fun x2198 () Bool)
(declare-fun x1948 () Bool)
(declare-fun x3365 () x2192)
(declare-fun x1491 (x2192) Int)
(declare-fun x5683 () Bool)
(declare-fun x4675 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x4412 () Int)
(declare-fun x3972 () Int)
(declare-fun x2709 () Bool)
(declare-fun x3657 () Bool)
(declare-fun x678 () Int)
(declare-fun x5591 () Bool)
(declare-fun x3923 () Bool)
(declare-fun x2917 () Int)
(declare-fun x1451 () Bool)
(declare-fun x1246 () Int)
(declare-fun x1204 () Int)
(declare-fun x3627 () Int)
(declare-fun x2142 () Bool)
(declare-fun x4613 () Bool)
(declare-fun x5475 () Bool)
(declare-fun x662 () Bool)
(declare-fun x1957 () Bool)
(declare-fun x4168 () Bool)
(declare-fun x5553 () Bool)
(declare-fun x2568 () Bool)
(declare-fun x4151 () Bool)
(declare-fun x4581 () Int)
(declare-fun x801 () Int)
(declare-fun x2841 () x2192)
(declare-fun x4170 () Int)
(declare-fun x2923 () Bool)
(declare-fun x2600 () Bool)
(declare-fun x4757 () Bool)
(declare-fun x3687 (Int) Int)
(declare-fun x5464 () Int)
(declare-fun x2601 () Int)
(declare-fun x4063 () Bool)
(declare-fun x5495 () Bool)
(declare-fun x4773 () Bool)
(declare-fun x1346 () Int)
(declare-fun x982 () Int)
(declare-fun x1781 () Int)
(declare-fun x5790 () Bool)
(declare-fun x4031 () Bool)
(declare-fun x887 () Int)
(declare-fun x5739 () Int)
(declare-fun x4426 () x2192)
(declare-fun x5153 () Bool)
(declare-fun x3469 () x2192)
(declare-fun x3791 () x2192)
(declare-fun x4574 () Bool)
(declare-fun x1069 () Int)
(declare-fun x3477 () Int)
(declare-fun x143 () Int)
(declare-fun x6300 () Bool)
(declare-fun x5512 () Bool)
(declare-fun x334 () Bool)
(declare-fun x4774 () Bool)
(declare-fun x1377 () Bool)
(declare-fun x1444 () Int)
(declare-fun x5612 () x2192)
(declare-fun x5207 () Int)
(declare-fun x2450 () Bool)
(declare-fun x1318 () Bool)
(declare-fun x459 () Bool)
(declare-fun x780 () Bool)
(declare-fun x4181 () Bool)
(declare-fun x3159 () Bool)
(declare-fun x2790 () Bool)
(declare-fun x787 () Int)
(declare-fun x1977 () Bool)
(declare-fun x3723 () Int)
(declare-fun x197 () Bool)
(declare-fun x53 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x4955 () Bool)
(declare-fun x4538 () Int)
(declare-fun x6189 () Bool)
(declare-fun x3702 () Int)
(declare-fun x3811 () Bool)
(declare-fun x632 () Bool)
(declare-fun x5942 () Int)
(declare-fun x2455 () Int)
(declare-fun x3655 () Int)
(declare-fun x2398 () Int)
(declare-fun x2186 () Bool)
(declare-fun x2690 () Bool)
(declare-fun x2275 () Bool)
(declare-fun x1389 () Int)
(declare-fun x3216 () Bool)
(declare-fun x3507 () Bool)
(declare-fun x4908 () Bool)
(declare-fun x6066 () Bool)
(declare-fun x1520 () Bool)
(declare-fun x6147 () Int)
(declare-fun x4176 () Int)
(declare-fun x2056 () Bool)
(declare-fun x105 () Int)
(declare-fun x1357 () Bool)
(declare-fun x3858 () Int)
(declare-fun x4060 () Bool)
(declare-fun x1913 () Bool)
(declare-fun x3431 () Int)
(declare-fun x2055 () Bool)
(declare-fun x972 () Bool)
(declare-fun x237 () Bool)
(declare-fun x2736 () Bool)
(declare-fun x101 () Bool)
(declare-fun x3825 () Int)
(declare-fun x5201 () Bool)
(declare-fun x5007 () Bool)
(declare-fun x5712 () Bool)
(declare-fun x2978 () Int)
(declare-fun x5113 () Bool)
(declare-fun x2480 () Bool)
(declare-fun x2718 () Bool)
(declare-fun x831 () Int)
(declare-fun x30 () Int)
(declare-fun x5155 () Int)
(declare-fun x2885 () Int)
(declare-fun x3496 () Bool)
(declare-fun x5072 () Bool)
(declare-fun x4733 () Bool)
(declare-fun x536 () Int)
(declare-fun x4437 () Bool)
(declare-fun x2243 () Bool)
(declare-fun x2996 () Bool)
(declare-fun x2734 () Int)
(declare-fun x3374 () Bool)
(declare-fun x1142 () Int)
(declare-fun x4854 () Bool)
(declare-fun x5914 () Bool)
(declare-fun x3527 () Int)
(declare-fun x1694 () Bool)
(declare-fun x779 () Bool)
(declare-fun x4238 () Bool)
(declare-fun x5529 () Bool)
(declare-fun x3929 () Int)
(declare-fun x4883 () Bool)
(declare-fun x6306 () Bool)
(declare-fun x5152 () Bool)
(declare-fun x4828 () Bool)
(declare-fun x3200 () Int)
(declare-fun x4375 () Bool)
(declare-fun x3523 () Int)
(declare-fun x5508 () Bool)
(declare-fun x4549 () Bool)
(declare-fun x1662 () Bool)
(declare-fun x3601 () Int)
(declare-fun x2776 () Int)
(declare-fun x3518 () Bool)
(declare-fun x2863 () Bool)
(declare-fun x5818 () Int)
(declare-fun x1723 () Bool)
(declare-fun x5011 () x2192)
(declare-fun x1714 () Int)
(declare-fun x321 () Bool)
(declare-fun x2558 () Bool)
(declare-fun x5648 () Bool)
(declare-fun x2219 () Bool)
(declare-fun x5564 () Int)
(declare-fun x1783 () x2192)
(declare-fun x1855 () Bool)
(declare-fun x305 () Int)
(declare-fun x1091 () Int)
(declare-fun x4052 () Int)
(declare-fun x4441 () Int)
(declare-fun x5350 () Int)
(declare-fun x3594 () x2192)
(declare-fun x2247 () Bool)
(declare-fun x3211 () Bool)
(declare-fun x4555 (Int) x2192)
(declare-fun x1213 () Int)
(declare-fun x3847 () x2192)
(declare-fun x4009 () Int)
(declare-fun x3876 () Int)
(declare-fun x613 () Bool)
(declare-fun x4195 () Bool)
(declare-fun x3780 () Int)
(declare-fun x462 () Bool)
(declare-fun x4593 () Bool)
(declare-fun x6237 () Int)
(declare-fun x3880 () x2192)
(declare-fun x1256 () Bool)
(declare-fun x812 () x2192)
(declare-fun x4346 (x2192) Int)
(declare-fun x2167 () Bool)
(declare-fun x3620 () Bool)
(declare-fun x5663 () Bool)
(declare-fun x6332 () Int)
(declare-fun x2090 () Bool)
(declare-fun x2865 () Bool)
(declare-fun x677 () Bool)
(declare-fun x5891 () Int)
(declare-fun x2525 () Bool)
(declare-fun x1967 () Int)
(declare-fun x5871 () Bool)
(declare-fun x5012 () Bool)
(declare-fun x4094 () Int)
(declare-fun x4231 () Int)
(declare-fun x916 () Bool)
(declare-fun x4354 () Int)
(declare-fun x6156 () Int)
(declare-fun x5893 () Bool)
(declare-fun x4321 () Int)
(declare-fun x4257 () Bool)
(declare-fun x5786 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x3698 () Int)
(declare-fun x5936 () Bool)
(declare-fun x686 () Bool)
(declare-fun x6328 () Int)
(declare-fun x5852 () Int)
(declare-fun x2749 (Int) Int)
(declare-fun x273 () Int)
(declare-fun x152 () x2192)
(declare-fun x2213 () Bool)
(declare-fun x292 () Bool)
(declare-fun x4172 () Bool)
(declare-fun x2594 () Int)
(declare-fun x822 () Bool)
(declare-fun x365 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x1616 () Bool)
(declare-fun x3043 () Bool)
(declare-fun x3377 () Int)
(declare-fun x6219 () Bool)
(declare-fun x3928 () Bool)
(declare-fun x6054 () Int)
(declare-fun x1328 () Int)
(declare-fun x4027 () Int)
(declare-fun x3490 () Int)
(declare-fun x1018 () Bool)
(declare-fun x1548 () Int)
(declare-fun x4105 () Bool)
(declare-fun x5963 () x2192)
(declare-fun x1376 () Int)
(declare-fun x3839 () Bool)
(declare-fun x3464 () Bool)
(declare-fun x6333 () Int)
(declare-fun x5108 () Int)
(declare-fun x349 () Bool)
(declare-fun x220 () Bool)
(declare-fun x2014 () Int)
(declare-fun x970 () Int)
(declare-fun x4596 () Bool)
(declare-fun x3840 () Bool)
(declare-fun x337 () Int)
(declare-fun x4812 () Int)
(declare-fun x1980 () Bool)
(declare-fun x2804 () Int)
(declare-fun x2632 () Bool)
(declare-fun x1693 () Bool)
(declare-fun x6325 () Bool)
(declare-fun x6374 () Bool)
(declare-fun x4371 () Int)
(declare-fun x3959 () Bool)
(declare-fun x3570 () Int)
(declare-fun x1908 () Bool)
(declare-fun x5714 () Bool)
(declare-fun x1780 () Int)
(declare-fun x5471 () Int)
(declare-fun x6092 () x2192)
(declare-fun x1255 () Int)
(declare-fun x5574 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x185 () Bool)
(declare-fun x4247 () Bool)
(declare-fun x5183 () x2192)
(declare-fun x2501 () Bool)
(declare-fun x2035 () Bool)
(declare-fun x949 () Int)
(declare-fun x1180 () Int)
(declare-fun x6063 () Int)
(declare-fun x3063 () Bool)
(declare-fun x5555 () Bool)
(declare-fun x990 () Bool)
(declare-fun x1007 () Int)
(declare-fun x690 () Bool)
(declare-fun x4230 () Int)
(declare-fun x1076 () Bool)
(declare-fun x1287 () Bool)
(declare-fun x3059 () Bool)
(declare-fun x735 () Bool)
(declare-fun x725 () Bool)
(declare-fun x2660 () Bool)
(declare-fun x3865 () x2192)
(declare-fun x5634 () Bool)
(declare-fun x4494 () Int)
(declare-fun x1050 () Bool)
(declare-fun x4056 () Int)
(declare-fun x5181 () Int)
(declare-fun x1533 () Bool)
(declare-fun x4160 () Bool)
(declare-fun x3990 () Int)
(declare-fun x2704 () x2192)
(declare-fun x1907 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x1544 () x2192)
(declare-fun x4649 () x2192)
(declare-fun x2361 () Int)
(declare-fun x6016 () Bool)
(declare-fun x4903 () Bool)
(declare-fun x6157 () Int)
(declare-fun x5729 () x2192)
(declare-fun x5974 () Int)
(declare-fun x1857 () Bool)
(declare-fun x2249 () Int)
(declare-fun x2139 () Bool)
(declare-fun x1730 () Int)
(declare-fun x2359 () Int)
(declare-fun x3129 () Int)
(declare-fun x3356 () Bool)
(declare-fun x281 () Bool)
(declare-fun x1447 () Int)
(declare-fun x4255 () Bool)
(declare-fun x2065 () Int)
(declare-fun x2735 () Int)
(declare-fun x3781 () Bool)
(declare-fun x3085 () Int)
(declare-fun x5993 () Bool)
(declare-fun x4319 () Bool)
(declare-fun x1854 () Bool)
(declare-fun x4563 () Int)
(declare-fun x1497 () Int)
(declare-fun x2617 () Bool)
(declare-fun x767 () Int)
(declare-fun x3887 () x2192)
(declare-fun x3760 () Bool)
(declare-fun x2707 () Bool)
(declare-fun x1449 () Int)
(declare-fun x1934 () Bool)
(declare-fun x3652 () Int)
(declare-fun x816 () Bool)
(declare-fun x5049 () Bool)
(declare-fun x978 () x2192)
(declare-fun x627 () Bool)
(declare-fun x4572 () Bool)
(declare-fun x6172 () Int)
(declare-fun x683 () Bool)
(declare-fun x4012 () x2192)
(declare-fun x2473 () Bool)
(declare-fun x2948 () Bool)
(declare-fun x1742 () Bool)
(declare-fun x3898 () Bool)
(declare-fun x4702 () Bool)
(declare-fun x893 () Bool)
(declare-fun x3539 () Bool)
(declare-fun x1236 () Int)
(declare-fun x4695 () Int)
(declare-fun x2999 () Bool)
(declare-fun x5721 () Bool)
(declare-fun x4222 () Int)
(declare-fun x1164 () Bool)
(declare-fun x3650 () Bool)
(declare-fun x3387 () Bool)
(declare-fun x2738 () Bool)
(declare-fun x5763 () Bool)
(declare-fun x2847 () Int)
(declare-fun x4781 () Bool)
(declare-fun x1892 () Bool)
(declare-fun x1283 () Bool)
(declare-fun x4089 () Int)
(declare-fun x2018 () Int)
(declare-fun x6075 () Int)
(declare-fun x3067 () Bool)
(declare-fun x2054 () x2192)
(declare-fun x1216 () Bool)
(declare-fun x5550 () x2192)
(declare-fun x5461 () x2192)
(declare-fun x4589 () Int)
(declare-fun x354 () Int)
(declare-fun x3347 () Bool)
(declare-fun x2179 () Int)
(declare-fun x5450 () Int)
(declare-fun x1970 () x2192)
(declare-fun x5079 () Bool)
(declare-fun x3099 () x2192)
(declare-fun x3947 () Bool)
(declare-fun x6223 () x2192)
(declare-fun x4137 () Bool)
(declare-fun x4490 () Bool)
(declare-fun x276 () Int)
(declare-fun x5808 () Int)
(declare-fun x5307 () Bool)
(declare-fun x4898 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x5977 () Bool)
(declare-fun x5403 () Bool)
(declare-fun x1008 () x2192)
(declare-fun x1143 () Bool)
(declare-fun x6228 () Int)
(declare-fun x3638 () Bool)
(declare-fun x256 () Int)
(declare-fun x2693 () Int)
(declare-fun x5753 () Int)
(declare-fun x806 () Int)
(declare-fun x5907 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x4241 () Bool)
(declare-fun x200 () Bool)
(declare-fun x6430 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x1987 () Bool)
(declare-fun x2986 () Bool)
(declare-fun x2486 () Bool)
(declare-fun x4748 () Bool)
(declare-fun x795 () Int)
(declare-fun x5793 () Bool)
(declare-fun x3982 () x2192)
(declare-fun x1191 () Bool)
(declare-fun x4155 () Bool)
(declare-fun x5251 () Bool)
(declare-fun x1656 () Bool)
(declare-fun x214 () Bool)
(declare-fun x2717 () Bool)
(declare-fun x3557 () Int)
(declare-fun x5995 () Bool)
(declare-fun x3008 () Bool)
(declare-fun x46 () Bool)
(declare-fun x4150 () x2192)
(declare-fun x2498 () x2192)
(declare-fun x3604 () Int)
(declare-fun x6357 () Bool)
(declare-fun x5601 () Bool)
(declare-fun x4482 () Bool)
(declare-fun x2157 () x2192)
(declare-fun x4336 () Bool)
(declare-fun x4582 () Int)
(declare-fun x697 () Bool)
(declare-fun x2373 () Bool)
(declare-fun x5333 () Bool)
(declare-fun x1452 () Bool)
(declare-fun x3094 () x2192)
(declare-fun x32 () Int)
(declare-fun x3850 () Bool)
(declare-fun x391 () Bool)
(declare-fun x5731 () Int)
(declare-fun x4183 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x5397 () Int)
(declare-fun x1595 () Int)
(declare-fun x4498 () Int)
(declare-fun x5192 () Bool)
(declare-fun x3749 () Bool)
(declare-fun x549 () Bool)
(declare-fun x5191 () Int)
(declare-fun x3897 () Int)
(declare-fun x6030 () Int)
(declare-fun x543 () Int)
(declare-fun x5257 () Int)
(declare-fun x5349 () Int)
(declare-fun x1243 () Int)
(declare-fun x493 () Bool)
(declare-fun x5008 () Int)
(declare-fun x5435 () Bool)
(declare-fun x4670 () Int)
(declare-fun x5351 () Int)
(declare-fun x5743 () Bool)
(declare-fun x2799 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x1836 () Bool)
(declare-fun x3979 () Bool)
(declare-fun x572 () Int)
(declare-fun x5976 () Int)
(declare-fun x3615 () Int)
(declare-fun x2217 () Bool)
(declare-fun x5642 () Int)
(declare-fun x6312 () Bool)
(declare-fun x3802 () Int)
(declare-fun x3999 () Int)
(declare-fun x390 () Bool)
(declare-fun x5060 () Int)
(declare-fun x741 (Int) Int)
(declare-fun x4897 () Int)
(declare-fun x2341 () Bool)
(declare-fun x953 () Bool)
(declare-fun x1253 () Int)
(declare-fun x569 () Bool)
(declare-fun x5146 () Bool)
(declare-fun x754 () Int)
(declare-fun x6404 () Int)
(declare-fun x709 (Int) Int)
(declare-fun x3393 () Bool)
(declare-fun x2685 () Bool)
(declare-fun x1846 () Bool)
(declare-fun x5240 () x2192)
(declare-fun x4664 () Bool)
(declare-fun x283 () Int)
(declare-fun x4598 () Int)
(declare-fun x3891 () Bool)
(declare-fun x5814 () Int)
(declare-fun x79 () Bool)
(declare-fun x4163 () x2192)
(declare-fun x4427 () Int)
(declare-fun x304 () x2192)
(declare-fun x4254 () Bool)
(declare-fun x2475 () Bool)
(declare-fun x1031 () Bool)
(declare-fun x4006 () Int)
(declare-fun x3170 () Int)
(declare-fun x2237 () x2192)
(declare-fun x1733 () Int)
(declare-fun x6326 () x2192)
(declare-fun x338 () Bool)
(declare-fun x4775 () Bool)
(declare-fun x1150 () Bool)
(declare-fun x3903 () Bool)
(declare-fun x2335 () Int)
(declare-fun x4949 () Bool)
(declare-fun x4117 () Int)
(declare-fun x4053 () Int)
(declare-fun x316 () Bool)
(declare-fun x5323 () Int)
(declare-fun x6198 () Bool)
(declare-fun x4040 () Int)
(declare-fun x5084 () Int)
(declare-fun x1516 () Int)
(declare-fun x5607 () Bool)
(declare-fun x1481 () Int)
(declare-fun x2673 () Int)
(declare-fun x5986 () Int)
(declare-fun x6291 () Int)
(declare-fun x4010 () Bool)
(declare-fun x3010 (Int) Int)
(declare-fun x2310 () Bool)
(declare-fun x397 () Int)
(declare-fun x170 () Bool)
(declare-fun x870 () Int)
(declare-fun x5866 () x2192)
(declare-fun x1254 () Bool)
(declare-fun x1922 () Int)
(declare-fun x1155 () Bool)
(declare-fun x6274 () Int)
(declare-fun x4928 () x2192)
(declare-fun x3904 () Bool)
(declare-fun x598 () Int)
(declare-fun x156 () Bool)
(declare-fun x6106 () Int)
(declare-fun x618 () Bool)
(declare-fun x5904 () Bool)
(declare-fun x5566 () Int)
(declare-fun x3894 () x2192)
(declare-fun x5067 () Bool)
(declare-fun x4425 () Int)
(declare-fun x5878 () Bool)
(declare-fun x5937 () Bool)
(declare-fun x5646 () Bool)
(declare-fun x5131 () Bool)
(declare-fun x2127 () Int)
(declare-fun x3103 () x2192)
(declare-fun x6089 () Bool)
(declare-fun x2492 () Int)
(declare-fun x5363 () Bool)
(declare-fun x4590 () Bool)
(declare-fun x3016 () Bool)
(declare-fun x4019 () Int)
(declare-fun x988 () Bool)
(declare-fun x2375 () Int)
(declare-fun x4527 () Bool)
(declare-fun x4866 () Bool)
(declare-fun x4915 () x2192)
(declare-fun x5432 () Bool)
(declare-fun x771 () Bool)
(declare-fun x545 () Int)
(declare-fun x3481 () Int)
(declare-fun x5724 () Bool)
(declare-fun x4218 () Bool)
(declare-fun x996 () Int)
(declare-fun x2000 () Int)
(declare-fun x6129 () x2192)
(declare-fun x428 () Int)
(declare-fun x832 () Bool)
(declare-fun x2297 () Bool)
(declare-fun x6094 () Bool)
(declare-fun x3167 () Int)
(declare-fun x1563 () Bool)
(declare-fun x3425 () Bool)
(declare-fun x556 () Bool)
(declare-fun x5672 () x2192)
(declare-fun x4396 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x5768 () Bool)
(declare-fun x4269 () Int)
(declare-fun x1585 () Int)
(declare-fun x1552 () Bool)
(declare-fun x461 () Bool)
(declare-fun x4064 () Int)
(declare-fun x935 () Int)
(declare-fun x3031 () Bool)
(declare-fun x4510 () x2192)
(declare-fun x2428 () Int)
(declare-fun x6345 () Int)
(declare-fun x2270 () x2192)
(declare-fun x4149 () Int)
(declare-fun x3772 () x2192)
(declare-fun x5700 (Int) Int)
(declare-fun x4535 () Int)
(declare-fun x5880 () x2192)
(declare-fun x792 () Bool)
(declare-fun x3472 () Bool)
(declare-fun x5229 () Bool)
(declare-fun x161 () Int)
(declare-fun x398 () Int)
(declare-fun x206 () Int)
(declare-fun x6132 () Int)
(declare-fun x2200 () Bool)
(declare-fun x5948 () Bool)
(declare-fun x4580 () Int)
(declare-fun x6072 () Int)
(declare-fun x2316 () Bool)
(declare-fun x3152 () Bool)
(declare-fun x4760 () Bool)
(declare-fun x2265 () Int)
(declare-fun x2992 () Int)
(declare-fun x1247 () Bool)
(declare-fun x640 () Int)
(declare-fun x3247 () Bool)
(declare-fun x2577 () Int)
(declare-fun x571 () x2192)
(declare-fun x6029 () Bool)
(declare-fun x1241 () Int)
(declare-fun x2605 () Bool)
(declare-fun x1028 () Int)
(declare-fun x503 () Bool)
(declare-fun x3422 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x341 () Bool)
(declare-fun x6324 () Bool)
(declare-fun x5510 () Int)
(declare-fun x3536 () Bool)
(declare-fun x4312 () Bool)
(declare-fun x4719 () Int)
(declare-fun x981 () Int)
(declare-fun x3142 () Int)
(declare-fun x4541 () Int)
(declare-fun x6257 () x2192)
(declare-fun x4447 () x2192)
(declare-fun x4615 (Int) Int)
(declare-fun x2021 () Bool)
(declare-fun x5025 () Bool)
(declare-fun x3798 () Bool)
(declare-fun x698 () Int)
(declare-fun x3399 () Int)
(declare-fun x4158 () Bool)
(declare-fun x4200 () Bool)
(declare-fun x5727 () Int)
(declare-fun x6181 () Bool)
(declare-fun x5075 () Int)
(declare-fun x6158 () Int)
(declare-fun x445 () Bool)
(declare-fun x6411 () Int)
(declare-fun x5716 () x2192)
(declare-fun x2930 () Bool)
(declare-fun x2137 () Bool)
(declare-fun x2092 () Int)
(declare-fun x2806 () Int)
(declare-fun x108 () Bool)
(declare-fun x2013 () Bool)
(declare-fun x1391 () Int)
(declare-fun x4784 () Bool)
(declare-fun x2626 () Bool)
(declare-fun x3952 () Bool)
(declare-fun x2900 () Bool)
(declare-fun x4497 () Int)
(declare-fun x844 () Bool)
(declare-fun x4738 () Int)
(declare-fun x4925 () x2192)
(declare-fun x1969 () x2192)
(declare-fun x3743 () Bool)
(declare-fun x687 () Bool)
(declare-fun x903 () Int)
(declare-fun x4228 () Bool)
(declare-fun x4842 () Int)
(declare-fun x125 () Bool)
(declare-fun x4893 () Int)
(declare-fun x902 () Bool)
(declare-fun x3270 () Bool)
(declare-fun x645 () Int)
(declare-fun x4227 () x2192)
(declare-fun x340 () Int)
(declare-fun x4229 () Int)
(declare-fun x3480 () Bool)
(declare-fun x3227 () Int)
(declare-fun x1884 () x2192)
(declare-fun x2183 () Int)
(declare-fun x1352 () Bool)
(declare-fun x667 () Int)
(declare-fun x1745 () Bool)
(declare-fun x4152 () Int)
(declare-fun x6334 () Int)
(declare-fun x1634 () Bool)
(declare-fun x2766 () x2192)
(declare-fun x2634 () Int)
(declare-fun x1198 () Bool)
(declare-fun x907 () Int)
(declare-fun x578 () Int)
(declare-fun x490 () Bool)
(declare-fun x885 () Int)
(declare-fun x4965 () Bool)
(declare-fun x3132 () Int)
(declare-fun x5873 () Bool)
(declare-fun x2399 () Bool)
(declare-fun x3752 () x2192)
(declare-fun x3259 () Bool)
(declare-fun x58 () Int)
(declare-fun x979 () Bool)
(declare-fun x4950 (Int Int) Int)
(declare-fun x1580 () x2192)
(declare-fun x3930 () Bool)
(declare-fun x241 () Bool)
(declare-fun x620 () Int)
(declare-fun x1470 () Int)
(declare-fun x724 () x2192)
(declare-fun x2372 () Int)
(declare-fun x2805 () Bool)
(declare-fun x4098 () Bool)
(declare-fun x5064 () Bool)
(declare-fun x518 () x2192)
(declare-fun x5857 () Int)
(declare-fun x4951 () Bool)
(declare-fun x3991 () Bool)
(declare-fun x5232 () Bool)
(declare-fun x1438 () Bool)
(declare-fun x395 () Bool)
(declare-fun x1685 () Bool)
(declare-fun x353 (x2192) Int)
(declare-fun x1211 () Int)
(declare-fun x5203 () Bool)
(declare-fun x1205 () x2192)
(declare-fun x1015 () Bool)
(declare-fun x5950 () Bool)
(declare-fun x3978 () Bool)
(declare-fun x370 () Bool)
(declare-fun x4015 () Bool)
(declare-fun x1240 () Bool)
(declare-fun x2233 () Int)
(declare-fun x5034 () Int)
(declare-fun x2547 () Bool)
(declare-fun x40 () x2192)
(declare-fun x5219 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x1814 () Int)
(declare-fun x1915 () Int)
(declare-fun x3366 () Int)
(declare-fun x3734 () Bool)
(declare-fun x3196 () x2192)
(declare-fun x4081 () Bool)
(declare-fun x486 () Int)
(declare-fun x1600 () Bool)
(declare-fun x918 () Bool)
(declare-fun x290 () Bool)
(declare-fun x5717 () Int)
(declare-fun x5097 () Bool)
(declare-fun x501 () Int)
(declare-fun x1961 () Bool)
(declare-fun x5104 () Int)
(declare-fun x1106 () Bool)
(declare-fun x2949 () Bool)
(declare-fun x5895 () Bool)
(declare-fun x4825 () Int)
(declare-fun x923 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x3864 () Bool)
(declare-fun x2306 () Int)
(declare-fun x219 () Int)
(declare-fun x2305 () Int)
(declare-fun x1099 () x2192)
(declare-fun x2432 () Int)
(declare-fun x5346 () Bool)
(declare-fun x856 () Bool)
(declare-fun x3118 () Bool)
(declare-fun x5858 () Bool)
(declare-fun x866 () Bool)
(declare-fun x4865 () Bool)
(declare-fun x68 () x2192)
(declare-fun x3395 () Bool)
(declare-fun x1258 () Int)
(declare-fun x2780 () x2192)
(declare-fun x3855 () Bool)
(declare-fun x3166 () Bool)
(declare-fun x5539 () Bool)
(declare-fun x5082 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x2868 () Int)
(declare-fun x4692 () Int)
(declare-fun x3522 () Int)
(declare-fun x2663 () Int)
(declare-fun x5792 () Int)
(declare-fun x6177 () Int)
(declare-fun x2201 () Bool)
(declare-fun x957 () Bool)
(declare-fun x5791 () Bool)
(declare-fun x5548 () Int)
(declare-fun x4472 () x2192)
(declare-fun x165 () Int)
(declare-fun x5186 () x2192)
(declare-fun x5393 () Int)
(declare-fun x189 () Bool)
(declare-fun x602 () x2192)
(declare-fun x3458 () Int)
(declare-fun x2115 () Bool)
(declare-fun x5506 () Int)
(declare-fun x2567 () x2192)
(declare-fun x1095 () Bool)
(declare-fun x2811 () Int)
(declare-fun x2111 () Bool)
(declare-fun x2977 () x2192)
(declare-fun x2366 (x2192) Int)
(declare-fun x1925 () Bool)
(declare-fun x4954 () Bool)
(declare-fun x925 () Bool)
(declare-fun x411 () Int)
(declare-fun x1709 () Bool)
(declare-fun x4146 () Bool)
(declare-fun x868 () Int)
(declare-fun x3548 () Bool)
(declare-fun x6255 () Int)
(declare-fun x3946 () Int)
(declare-fun x6009 () Int)
(declare-fun x4026 () Int)
(declare-fun x1070 () x2192)
(declare-fun x5860 () Bool)
(declare-fun x4984 () Int)
(declare-fun x3809 () Bool)
(declare-fun x4641 () Int)
(declare-fun x5175 () Int)
(declare-fun x3832 () Bool)
(declare-fun x289 () Bool)
(declare-fun x5796 () x2192)
(declare-fun x6288 () Int)
(declare-fun x1268 () Int)
(declare-fun x2173 () Bool)
(declare-fun x3806 () Bool)
(declare-fun x2049 () Bool)
(declare-fun x3281 () Bool)
(declare-fun x2982 () x2192)
(declare-fun x2 () Int)
(declare-fun x6335 () Bool)
(declare-fun x2250 () Bool)
(declare-fun x879 () Bool)
(declare-fun x4567 () Bool)
(declare-fun x6192 () Bool)
(declare-fun x4976 () Bool)
(declare-fun x3143 () Bool)
(declare-fun x6136 () Bool)
(declare-fun x3106 () Bool)
(declare-fun x2337 () x2192)
(declare-fun x1560 () Int)
(declare-fun x3204 () Int)
(declare-fun x1349 () Bool)
(declare-fun x1080 () x2192)
(declare-fun x2304 () Bool)
(declare-fun x3219 () Int)
(declare-fun x1059 () Bool)
(declare-fun x284 () Int)
(declare-fun x4848 () Bool)
(declare-fun x753 () Int)
(declare-fun x3779 () Bool)
(declare-fun x1645 () x2192)
(define-fun x3234 ((x2192 x2192) (x254 Int)) x2192 (ite ((_ is x2184) x2192) (x2184 (x541 x2192) (+ (x4979 x2192) x254)) (ite ((_ is x5195) x2192) (x5195 (x3943 x2192) (x469 x2192) (+ x254 (x3549 x2192))) (x821 (+ x254 (x2967 x2192))))))
(define-fun x3844 ((x2059 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2059) (<= 0 x2059)) x2059 (- x2059 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x3726 ((x2059 Int)) Int (ite (and (> 0 x2059) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2059)) (+ x2059 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2059))
(define-fun x3060 ((x2059 Int)) Int (ite (and (<= 0 x2059) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2059)) x2059 (ite (and (< x2059 231584178474632390847141970017375815706539969331281128078915168015826259279872) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2059)) (- x2059 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (< x2059 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2059)) (+ x2059 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x432 x2059 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x2946 ((x527 Int)) Bool (and (>= x527 0) (< x527 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x2564 ((x527 Int)) Bool (and (= (x4950 115792089237316195423570985008687907853269984665640564039457584007913129639935 x527) x527) (= (x4950 x527 115792089237316195423570985008687907853269984665640564039457584007913129639935) x527)))
(define-fun x3116 ((x527 Int)) Bool (and (= 0 (x4950 0 x527)) (= (x4950 x527 0) 0)))
(define-fun x509 ((x527 Int)) Bool (= x527 (x4950 x527 x527)))
(define-fun x1752 ((x527 Int)) Bool (and (x3116 x527) (x509 x527) (x2564 x527)))
(define-fun x4655 ((x527 Int) (x3912 Int)) Bool (= (x4950 x527 x3912) (x4950 x3912 x527)))
(define-fun x240 ((x527 Int) (x3912 Int)) Bool (and (=> (>= x527 0) (>= x527 (x4950 x527 x3912))) (<= 0 (x4950 x527 x3912)) (=> (>= x3912 0) (>= x3912 (x4950 x527 x3912)))))
(define-fun x3331 ((x527 Int) (x3912 Int)) Bool (and (x4655 x527 x3912) (x240 x527 x3912)))
(define-fun x3130 ((x527 Int)) Bool (= (x3060 x527) (+ (x4950 x527 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x432 x527 32))))
(define-fun x3817 ((x527 Int)) Bool (and (x3331 x527 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x3130 x527)))
(define-fun x4154 ((x527 Int) (x3912 Int)) Bool (and (<= 0 (x432 x527 x3912)) (> x3912 (x432 x527 x3912))))
(define-fun x2072 ((x527 Int) (x3912 Int)) Bool (=> (and (> x3912 0) (<= 0 x527)) (= (= x527 (x432 x527 x3912)) (> x3912 x527))))
(define-fun x3935 ((x527 Int) (x3912 Int)) Bool (=> (and (< 0 x3912) (and (<= x3912 x527) (> (+ x3912 x3912) x527))) (= (- x527 x3912) (x432 x527 x3912))))
(define-fun x4258 ((x527 Int)) Bool (= 0 (x432 0 x527)))
(define-fun x5486 ((x527 Int)) Bool (= (x432 x527 1) 0))
(define-fun x3713 ((x527 Int)) Bool (= (x432 x527 x527) 0))
(define-fun x5626 ((x527 Int)) Bool (and (x5486 x527) (x3713 x527) (x4258 x527)))
(define-fun x4931 ((x527 Int)) Bool (= (x432 x527 1461501637330902918203684832716283019655932542976) (x4950 x527 1461501637330902918203684832716283019655932542975)))
(define-fun x2468 ((x527 Int)) Bool (and (x3331 x527 1461501637330902918203684832716283019655932542975) (x4931 x527)))
(define-fun x6383 ((x527 Int) (x3912 Int)) Bool (=> (and (> x3912 0) (< 0 x527)) (and (<= 0 (x4941 x527 x3912)) (<= (x4941 x527 x3912) x527))))
(define-fun x1495 ((x527 Int) (x3912 Int)) Bool (=> (and (and (>= x527 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x527)) (and (<= 1 x3912) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3912))) (and (< (x4941 x527 x3912) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= (x4941 x527 x3912) 0))))
(define-fun x2854 ((x527 Int) (x3912 Int)) Bool (=> (and (> x3912 1) (> x527 x3912)) (< (x4941 x527 x3912) x527)))
(define-fun x6393 ((x527 Int) (x3912 Int)) Bool (=> (and (> x527 0) (< 0 x3912)) (= (> x3912 x527) (= (x4941 x527 x3912) 0))))
(define-fun x6352 ((x527 Int) (x3912 Int)) Bool (=> (and (< 0 x527) (> x3912 0)) (and (<= (x6194 (x4941 x527 x3912) x3912) x527) (< (- x527 x3912) (x6194 (x4941 x527 x3912) x3912)))))
(define-fun x5617 ((x527 Int) (x3912 Int)) Bool (and (x6383 x527 x3912) (x6393 x527 x3912) (x6352 x527 x3912) (x1495 x527 x3912) (x2854 x527 x3912)))
(define-fun x2931 ((x527 Int)) Bool (= 0 (x4941 0 x527)))
(define-fun x4974 ((x527 Int)) Bool (= (x4941 x527 1) x527))
(define-fun x5856 ((x527 Int)) Bool (=> (not (= x527 0)) (= 1 (x4941 x527 x527))))
(define-fun x1795 ((x527 Int)) Bool (and (x5856 x527) (x2931 x527) (x4974 x527)))
(define-fun x3908 ((x527 Int) (x3912 Int)) Bool (= (x6194 x3912 x527) (x6194 x527 x3912)))
(define-fun x2640 ((x527 Int) (x3912 Int)) Bool (and (=> (and (> 0 x527) (< x3912 0)) (< 0 (x6194 x527 x3912))) (=> (and (> 0 x3912) (> x527 0)) (< (x6194 x527 x3912) 0)) (=> (and (> x3912 0) (> 0 x527)) (> 0 (x6194 x527 x3912))) (=> (and (< 0 x527) (> x3912 0)) (< 0 (x6194 x527 x3912)))))
(define-fun x1410 ((x527 Int) (x3912 Int)) Bool (=> (and (> x527 0) (> x3912 0)) (= (= (x4941 (x3060 (x6194 x527 x3912)) x527) x3912) (< (x6194 x527 x3912) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x6338 ((x527 Int) (x3912 Int)) Bool (=> (and (not (= 0 x3912)) (not (= 0 x527))) (and (= (x4941 (x6194 x527 x3912) x3912) x527) (= x3912 (x4941 (x6194 x527 x3912) x527)))))
(define-fun x3294 ((x527 Int) (x3912 Int)) Bool (=> (and (> x3912 0) (> x527 0)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x6194 x527 x3912)) (> x3912 (x4941 115792089237316195423570985008687907853269984665640564039457584007913129639935 x527)))))
(define-fun x3423 ((x527 Int) (x3912 Int)) Bool (and (= (x3060 (x6194 x527 x3912)) (x3060 (x6194 x527 (- x3912 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x3060 (x6194 (- x527 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x3912 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x3060 (x6194 x527 x3912))) (= (x3060 (x6194 (- x527 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3912)) (x3060 (x6194 x527 x3912)))))
(define-fun x5595 ((x527 Int) (x3912 Int)) Bool (and (=> (and (and (> x3912 0) (<= x3912 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x527) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x527))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x527) (x4941 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3912)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x6194 (- x527 115792089237316195423570985008687907853269984665640564039457584007913129639936) x3912)))) (=> (and (and (<= x3912 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x3912)) (and (<= x527 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x527))) (= (<= (x6194 x527 x3912) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x4941 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3912) x527))) (=> (and (and (> x3912 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x3912 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x527) (<= x527 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (<= (x6194 (- x527 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x3912 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x4941 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3912)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x527)))) (=> (and (and (<= x3912 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x3912 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (<= x527 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x527 0))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x6194 x527 (- x3912 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3912) (x4941 57896044618658097711785492504343953926634992332820282019728792003956564819968 x527))))))
(define-fun x3160 ((x527 Int) (x3912 Int)) Bool (and (x6338 x527 x3912) (x3294 x527 x3912) (x3423 x527 x3912) (x3908 x527 x3912) (x2640 x527 x3912) (x5595 x527 x3912) (x1410 x527 x3912)))
(define-fun x4171 ((x527 Int)) Bool (and (= (x6194 x527 0) 0) (= (x6194 0 x527) 0)))
(define-fun x2470 ((x527 Int)) Bool (and (= (x6194 x527 1) x527) (= (x6194 1 x527) x527)))
(define-fun x3146 ((x527 Int)) Bool (and (x4171 x527) (x2470 x527)))
(define-fun x2534 ((x527 Int)) Bool (= (x432 x527 256) (x4950 x527 255)))
(define-fun x3812 ((x527 Int)) Bool (and (x3331 x527 255) (x2534 x527)))
(define-fun x2081 ((x5367 Int)) Int (x3944 x5367))
(define-fun x2085 ((x5367 Int)) Int (ite (= x5367 128) 100135927934651036221761091863598459016256155049858187411712977198722809069568 (x6363 x5367)))
(define-fun x5956 ((x5367 Int)) Int (ite (= 132 x5367) x5489 (x2085 x5367)))
(define-fun x6137 ((x5367 Int)) Int (ite (= 164 x5367) x5608 (x5956 x5367)))
(define-fun x1374 ((x5367 Int)) Int (ite (= 0 x5367) x4617 (x2749 x5367)))
(define-fun x4662 ((x5367 Int)) Int (ite (= x5367 128) x4617 (x6137 x5367)))
(define-fun x829 ((x5367 Int)) Int (ite (= 0 x5367) x329 (x2749 x5367)))
(define-fun x3770 ((x5367 Int)) Int (ite (= 128 x5367) x329 (x6137 x5367)))
(define-fun x3911 ((x5367 Int)) Int (ite (= 0 x5367) x3954 (x2749 x5367)))
(define-fun x1043 ((x5367 Int)) Int (ite (= 128 x5367) x3954 (x6137 x5367)))
(define-fun x3509 ((x5367 Int)) Int (ite (= x5367 0) x5976 (x2749 x5367)))
(define-fun x3126 ((x5367 Int)) Int (ite (= 128 x5367) x5976 (x6137 x5367)))
(define-fun x1521 ((x5367 Int)) Int (ite (= x5367 0) x1237 (x2749 x5367)))
(define-fun x371 ((x5367 Int)) Int (ite (= 128 x5367) x1237 (x6137 x5367)))
(define-fun x3006 ((x5367 Int)) Int (ite (= x5367 0) x1332 (x2749 x5367)))
(define-fun x1705 ((x5367 Int)) Int (ite (= 128 x5367) x1332 (x6137 x5367)))
(define-fun x580 ((x5367 Int)) Int (ite (= x5367 0) x5638 (x2749 x5367)))
(define-fun x5290 ((x5367 Int)) Int (ite (= x5367 128) x5638 (x6137 x5367)))
(define-fun x4817 ((x5367 Int)) Int (ite (= 0 x5367) x4722 (x2749 x5367)))
(define-fun x2419 ((x5367 Int)) Int (ite (= 128 x5367) x4722 (x6137 x5367)))
(define-fun x5102 ((x5367 Int)) Int (ite (= x5367 0) x6368 (x2749 x5367)))
(define-fun x6208 ((x5367 Int)) Int (ite (= x5367 128) x6368 (x6137 x5367)))
(define-fun x1751 ((x5367 Int)) Int (ite (= 0 x5367) x5084 (x2749 x5367)))
(define-fun x6010 ((x5367 Int)) Int (ite (= 128 x5367) x5084 (x6137 x5367)))
(define-fun x2328 ((x5367 Int)) Int (ite (= x5367 0) x1196 (x2749 x5367)))
(define-fun x2010 ((x5367 Int)) Int (ite (= 128 x5367) x1196 (x6137 x5367)))
(define-fun x2267 ((x5367 Int)) Int (ite (= x5367 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x492 x5367)))
(define-fun x6188 ((x5367 Int)) Int (ite (= x5367 132) x5489 (x2267 x5367)))
(define-fun x5483 ((x5367 Int)) Int (ite (= 164 x5367) x5838 (x6188 x5367)))
(define-fun x1794 ((x5367 Int)) Int (ite (= 196 x5367) x542 (x5483 x5367)))
(define-fun x299 ((x5367 Int)) Int (ite (= x5367 128) 1 (x1794 x5367)))
(define-fun x5541 ((x5367 Int)) Int (ite (= 224 x5367) x55 (x741 x5367)))
(define-fun x4822 ((x5367 Int)) Int (ite (= x5367 320) x52 (x5541 x5367)))
(define-fun x264 ((x5367 Int)) Int (ite (= x5367 320) (ite true 1 0) (x4822 x5367)))
(define-fun x5862 ((x5367 Int)) Int (ite (and (>= x5367 128) (< x5367 (+ 128 32))) (x264 (+ 320 (- x5367 128))) (x1794 x5367)))
(define-fun x4983 ((x5367 Int)) Int (ite (= 128 x5367) 1 (x1794 x5367)))
(define-fun x1273 ((x5367 Int)) Int (ite (= 128 x5367) x426 (x1794 x5367)))
(define-fun x5271 ((x5367 Int)) Int (ite (= 128 x5367) x4438 (x1794 x5367)))
(define-fun x2230 ((x5367 Int)) Int (ite (= x5367 128) 1 (x1794 x5367)))
(define-fun x5798 ((x5367 Int)) Int (ite (= 128 x5367) 1 (x1794 x5367)))
(define-fun x848 ((x5367 Int)) Int (ite (= x5367 128) 1 (x1794 x5367)))
(define-fun x2512 ((x5367 Int)) Int (ite (= 128 x5367) 1 (x1794 x5367)))
(define-fun x5408 ((x5367 Int)) Int (ite (= 128 x5367) 1 (x1794 x5367)))
(define-fun x4350 ((x5367 Int)) Int (ite x5072 (x1794 x5367) (ite x249 (ite x3759 (x1794 x5367) (x299 x5367)) (ite x1802 (ite x4328 (x1794 x5367) (x5862 x5367)) (ite x4420 (ite x3855 (x1794 x5367) (x4983 x5367)) (ite x5333 (ite x1324 (x1794 x5367) (x1273 x5367)) (ite x4161 (ite x5571 (x1794 x5367) (x5271 x5367)) (ite x4259 (ite x2404 (x1794 x5367) (x2230 x5367)) (ite x612 (ite x1095 (x1794 x5367) (x5798 x5367)) (ite x2542 (ite x1591 (x1794 x5367) (x848 x5367)) (ite x1390 (ite x2221 (x1794 x5367) (x2512 x5367)) (ite x1987 (x1794 x5367) (x5408 x5367)))))))))))))
(define-fun x4314 ((x5367 Int)) Int (ite (= x3384 x5367) 97057840296441966410330255902201960138893160036366920885407767449525406400512 (x4350 x5367)))
(define-fun x5898 ((x5367 Int)) Int (ite (= x5367 x629) x3951 (x4314 x5367)))
(define-fun x3711 ((x5367 Int)) Int (ite (= x4989 x5367) x4069 (x5898 x5367)))
(define-fun x2430 ((x5367 Int)) Int (ite (= x5367 x2084) x5838 (x3711 x5367)))
(define-fun x1815 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x4398 x5367)))
(define-fun x415 ((x5367 Int)) Int (ite (= x3384 x5367) 1 (x2430 x5367)))
(define-fun x2087 ((x5367 Int)) Int (ite (= x5367 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1348 x5367)))
(define-fun x2950 ((x5367 Int)) Int (ite (= 132 x5367) x1637 (x2087 x5367)))
(define-fun x400 ((x5367 Int)) Int (ite (= 164 x5367) x5753 (x2950 x5367)))
(define-fun x3383 ((x5367 Int)) Int (ite (= 196 x5367) x1388 (x400 x5367)))
(define-fun x544 ((x5367 x2192)) Int (ite (= x5367 x4870) x2292 (x5921 x5367)))
(define-fun x3786 ((x5367 x2192)) Int (ite x504 (x544 x5367) (x5921 x5367)))
(define-fun x362 ((x5367 x2192)) Int (ite x2924 (x5921 x5367) (ite x1092 (x5921 x5367) (ite x5712 (x5921 x5367) (ite x3464 (x5921 x5367) (ite x855 (x5921 x5367) (ite x1307 (x5921 x5367) (ite x5382 (x3786 x5367) (ite x3344 (x3786 x5367) (ite x4704 (x3786 x5367) (ite x1966 (x5921 x5367) (ite x2532 (x3786 x5367) (ite x500 (x3786 x5367) (ite x2915 (x3786 x5367) (ite x4073 (x5921 x5367) (ite x3734 (x5921 x5367) (ite x1087 (x3786 x5367) (ite x1292 (x3786 x5367) (x5921 x5367)))))))))))))))))))
(define-fun x1605 ((x5367 x2192)) Int (ite x5072 (ite x5833 (x362 x5367) (x3786 x5367)) (x5921 x5367)))
(define-fun x5765 ((x5367 x2192)) Int (ite (= x5367 x5866) x2747 (x2044 x5367)))
(define-fun x4635 ((x5367 x2192)) Int (ite x5072 (x2044 x5367) (ite x249 (ite x3759 (x2044 x5367) (x5765 x5367)) (x2044 x5367))))
(define-fun x5334 ((x5367 x2192)) Int (ite (= x64 x5367) x907 (x1880 x5367)))
(define-fun x4526 ((x5367 x2192)) Int (ite (= x68 x5367) x6130 (x5334 x5367)))
(define-fun x6248 ((x5367 x2192)) Int (ite x6021 (x4526 x5367) (ite x66 (x1880 x5367) (ite x5975 (x1880 x5367) (ite x5285 (x1880 x5367) (ite x5785 (x1880 x5367) (ite x4469 (x5334 x5367) (ite x5567 (x4526 x5367) (ite x1582 (x1880 x5367) (ite x5591 (x5334 x5367) (x1880 x5367)))))))))))
(define-fun x1281 ((x5367 x2192)) Int (ite x5072 (x1880 x5367) (ite x249 (ite x3759 (x6248 x5367) (x4526 x5367)) (x1880 x5367))))
(define-fun x1898 ((x5367 x2192)) Int (ite (= x5367 x2886) x4400 (x1281 x5367)))
(define-fun x3745 ((x5367 x2192)) Int (ite (= x3103 x5367) x1873 (x1898 x5367)))
(define-fun x5633 ((x5367 x2192)) Int (ite (= x5367 x5440) x5071 (x4635 x5367)))
(define-fun x192 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x4905 x5367)))
(define-fun x150 ((x5367 x2192)) Int (ite (= x5367 x4311) x3314 (x3765 x5367)))
(define-fun x1054 ((x5367 x2192)) Int (ite (= x5367 x3982) x5999 (x150 x5367)))
(define-fun x4138 ((x5367 x2192)) Int (ite x5622 (x1054 x5367) (ite x1540 (x3765 x5367) (ite x4773 (x3765 x5367) (ite x4633 (x3765 x5367) (ite x3620 (x3765 x5367) (ite x4754 (x150 x5367) (ite x1508 (x150 x5367) (ite x1528 (x1054 x5367) (ite x3333 (x3765 x5367) (ite x6279 (x3765 x5367) (ite x5398 (x3765 x5367) (x1054 x5367)))))))))))))
(define-fun x3424 ((x5367 x2192)) Int (ite x5072 (x3765 x5367) (ite x249 (x3765 x5367) (ite x1802 (ite x4328 (x4138 x5367) (x1054 x5367)) (x3765 x5367)))))
(define-fun x1524 ((x5367 x2192)) Int (ite (= x2490 x5367) x4538 (x3424 x5367)))
(define-fun x3512 ((x5367 x2192)) Int (ite (= x5367 x3941) x3649 (x1524 x5367)))
(define-fun x3618 ((x5367 Int)) Int (ite (= x5367 224) x3202 (x42 x5367)))
(define-fun x1218 ((x5367 x2192)) Int (ite (= x5144 x5367) x52 (x3321 x5367)))
(define-fun x2687 ((x5367 x2192)) Int (ite x5072 (x3321 x5367) (ite x249 (x3321 x5367) (ite x1802 (ite x4328 (x3321 x5367) (x1218 x5367)) (x3321 x5367)))))
(define-fun x6358 ((x5367 x2192)) Int (ite (= x5367 x2583) x346 (x2687 x5367)))
(define-fun x1 ((x5367 Int)) Int (ite (= 320 x5367) x346 (x3618 x5367)))
(define-fun x642 ((x5367 Int)) Int (ite (= x5367 320) (ite true 1 0) (x1 x5367)))
(define-fun x5749 ((x5367 Int)) Int (ite (and (< x5367 (+ 32 0)) (>= x5367 0)) (x642 (+ (- x5367 0) 320)) (x4905 x5367)))
(define-fun x5087 ((x5367 x2192)) Int (ite (= x5367 x1897) x5606 (x288 x5367)))
(define-fun x4372 ((x5367 x2192)) Int (ite x178 (x288 x5367) (x5087 x5367)))
(define-fun x6317 ((x5367 x2192)) Int (ite x5786 (x288 x5367) (ite x4798 (x288 x5367) (ite x2155 (x288 x5367) (ite x2764 (x4372 x5367) (ite x133 (x4372 x5367) (x288 x5367)))))))
(define-fun x6353 ((x5367 x2192)) Int (ite x5072 (x288 x5367) (ite x249 (x288 x5367) (ite x1802 (x288 x5367) (ite x4420 (ite x3855 (x6317 x5367) (x4372 x5367)) (x288 x5367))))))
(define-fun x2624 ((x5367 x2192)) Int (ite (= x5135 x5367) x4790 (x6353 x5367)))
(define-fun x2855 ((x5367 x2192)) Int (ite (= x789 x5367) x578 (x2366 x5367)))
(define-fun x3214 ((x5367 x2192)) Int (ite (= x5367 x5002) x1499 (x2855 x5367)))
(define-fun x3009 ((x5367 x2192)) Int (ite x950 (x3214 x5367) (ite x3067 (x3214 x5367) (ite x5180 (x3214 x5367) (ite x2758 (x2855 x5367) (ite x5726 (x2366 x5367) (ite x6410 (x2366 x5367) (ite x4244 (x2366 x5367) (ite x662 (x2366 x5367) (ite x265 (x2366 x5367) (ite x3739 (x2855 x5367) (ite x4836 (x3214 x5367) (x2366 x5367)))))))))))))
(define-fun x1299 ((x5367 x2192)) Int (ite x5072 (x2366 x5367) (ite x249 (x2366 x5367) (ite x1802 (x2366 x5367) (ite x4420 (x2366 x5367) (ite x5333 (ite x1324 (x3009 x5367) (x3214 x5367)) (x2366 x5367)))))))
(define-fun x2138 ((x5367 x2192)) Int (ite (= x5367 x2337) x2883 (x1299 x5367)))
(define-fun x4335 ((x5367 x2192)) Int (ite (= x5367 x5796) x1727 (x2138 x5367)))
(define-fun x3964 ((x5367 Int)) Int (ite (= x5367 128) x4267 (x5700 x5367)))
(define-fun x3070 ((x5367 x2192)) Int (ite (= x440 x5367) x3974 (x3799 x5367)))
(define-fun x1991 ((x5367 x2192)) Int (ite x5072 (x3799 x5367) (ite x249 (x3799 x5367) (ite x1802 (x3799 x5367) (ite x4420 (x3799 x5367) (ite x5333 (ite x1324 (x3799 x5367) (x3070 x5367)) (x3799 x5367)))))))
(define-fun x960 ((x5367 x2192)) Int (ite (= x4472 x5367) x2128 (x1991 x5367)))
(define-fun x4536 ((x5367 Int)) Int (ite (= 128 x5367) x2128 (x3964 x5367)))
(define-fun x4306 ((x5367 Int)) Int (ite (= x5367 128) (ite true 1 0) (x4536 x5367)))
(define-fun x2762 ((x5367 Int)) Int (ite (= x5367 0) x2663 (x4905 x5367)))
(define-fun x498 ((x5367 x2192)) Int (ite (= x4710 x5367) x4340 (x1272 x5367)))
(define-fun x363 ((x5367 x2192)) Int (ite x6024 (x1272 x5367) (ite x5374 (x1272 x5367) (ite x3221 (x1272 x5367) (ite x5158 (x1272 x5367) (ite x2743 (x1272 x5367) (ite x4496 (x1272 x5367) (ite x5202 (x498 x5367) (ite x5201 (x498 x5367) (x1272 x5367))))))))))
(define-fun x6107 ((x5367 x2192)) Int (ite (= x6116 x5367) x2873 (x498 x5367)))
(define-fun x3831 ((x5367 x2192)) Int (ite x5072 (x1272 x5367) (ite x249 (x1272 x5367) (ite x1802 (x1272 x5367) (ite x4420 (x1272 x5367) (ite x5333 (x1272 x5367) (ite x4161 (ite x5571 (x363 x5367) (x6107 x5367)) (x1272 x5367))))))))
(define-fun x5105 ((x5367 x2192)) Int (ite (= x5367 x186) x1331 (x2405 x5367)))
(define-fun x1303 ((x5367 x2192)) Int (ite x6024 (x2405 x5367) (ite x5374 (x2405 x5367) (ite x3221 (x2405 x5367) (ite x5158 (x2405 x5367) (ite x2743 (x2405 x5367) (ite x4496 (x2405 x5367) (ite x5202 (x2405 x5367) (ite x5201 (x5105 x5367) (x2405 x5367))))))))))
(define-fun x6165 ((x5367 x2192)) Int (ite x5072 (x2405 x5367) (ite x249 (x2405 x5367) (ite x1802 (x2405 x5367) (ite x4420 (x2405 x5367) (ite x5333 (x2405 x5367) (ite x4161 (ite x5571 (x1303 x5367) (x5105 x5367)) (x2405 x5367))))))))
(define-fun x4334 ((x5367 x2192)) Int (ite (= x1351 x5367) x3025 (x3831 x5367)))
(define-fun x4810 ((x5367 x2192)) Int (ite (= x1039 x5367) x3110 (x6165 x5367)))
(define-fun x5536 ((x5367 x2192)) Int (ite (= x4227 x5367) x5527 (x4334 x5367)))
(define-fun x465 ((x5367 Int)) Int (ite (= 128 x5367) x3316 (x565 x5367)))
(define-fun x609 ((x5367 Int)) Int (ite (= x5367 128) (ite true 1 0) (x465 x5367)))
(define-fun x5953 ((x5367 Int)) Int (ite (= 0 x5367) x2271 (x4905 x5367)))
(define-fun x3088 ((x5367 x2192)) Int (ite (= x5367 x4491) x2869 (x2538 x5367)))
(define-fun x298 ((x5367 x2192)) Int (ite (= x1544 x5367) x2740 (x3088 x5367)))
(define-fun x1428 ((x5367 x2192)) Int (ite x2818 (x298 x5367) (ite x1640 (x3088 x5367) (ite x2798 (x2538 x5367) (ite x5217 (x2538 x5367) (ite x1699 (x2538 x5367) (ite x6271 (x2538 x5367) (ite x2495 (x3088 x5367) (ite x5023 (x298 x5367) (x2538 x5367))))))))))
(define-fun x5107 ((x5367 x2192)) Int (ite x5072 (x2538 x5367) (ite x249 (x2538 x5367) (ite x1802 (x2538 x5367) (ite x4420 (x2538 x5367) (ite x5333 (x2538 x5367) (ite x4161 (x2538 x5367) (ite x4259 (ite x2404 (x1428 x5367) (x298 x5367)) (x2538 x5367)))))))))
(define-fun x5629 ((x5367 x2192)) Int (ite (= x6238 x5367) x2545 (x5107 x5367)))
(define-fun x4315 ((x5367 x2192)) Int (ite (= x5367 x6313) x245 (x5629 x5367)))
(define-fun x954 ((x5367 x2192)) Int (ite (= x2834 x5367) x147 (x332 x5367)))
(define-fun x4234 ((x5367 x2192)) Int (ite x5072 (x332 x5367) (ite x249 (x332 x5367) (ite x1802 (x332 x5367) (ite x4420 (x332 x5367) (ite x5333 (x332 x5367) (ite x4161 (x332 x5367) (ite x4259 (ite x2404 (x332 x5367) (x954 x5367)) (x332 x5367)))))))))
(define-fun x327 ((x5367 x2192)) Int (ite (= x5367 x3003) x1610 (x4234 x5367)))
(define-fun x1269 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x4905 x5367)))
(define-fun x2472 ((x5367 x2192)) Int (ite (= x5367 x1006) x5080 (x4752 x5367)))
(define-fun x4005 ((x5367 x2192)) Int (ite (= x1301 x5367) x1079 (x2472 x5367)))
(define-fun x4084 ((x5367 x2192)) Int (ite x688 (x4005 x5367) (ite x389 (x2472 x5367) (ite x6095 (x4752 x5367) (ite x3840 (x4752 x5367) (ite x4283 (x4752 x5367) (ite x2066 (x4752 x5367) (ite x4355 (x2472 x5367) (ite x5701 (x4005 x5367) (x4752 x5367))))))))))
(define-fun x4916 ((x5367 x2192)) Int (ite x5072 (x4752 x5367) (ite x249 (x4752 x5367) (ite x1802 (x4752 x5367) (ite x4420 (x4752 x5367) (ite x5333 (x4752 x5367) (ite x4161 (x4752 x5367) (ite x4259 (x4752 x5367) (ite x612 (ite x1095 (x4084 x5367) (x4005 x5367)) (x4752 x5367))))))))))
(define-fun x5775 ((x5367 x2192)) Int (ite (= x5367 x2574) x956 (x4916 x5367)))
(define-fun x1920 ((x5367 x2192)) Int (ite (= x2237 x5367) x885 (x5775 x5367)))
(define-fun x1941 ((x5367 x2192)) Int (ite (= x5054 x5367) x1872 (x421 x5367)))
(define-fun x6191 ((x5367 x2192)) Int (ite x5072 (x421 x5367) (ite x249 (x421 x5367) (ite x1802 (x421 x5367) (ite x4420 (x421 x5367) (ite x5333 (x421 x5367) (ite x4161 (x421 x5367) (ite x4259 (x421 x5367) (ite x612 (ite x1095 (x421 x5367) (x1941 x5367)) (x421 x5367))))))))))
(define-fun x756 ((x5367 x2192)) Int (ite (= x5367 x1517) x4875 (x6191 x5367)))
(define-fun x2332 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x4905 x5367)))
(define-fun x6196 ((x5367 x2192)) Int (ite (= x2172 x5367) x2344 (x1491 x5367)))
(define-fun x6097 ((x5367 x2192)) Int (ite (= x5367 x3725) x3567 (x6196 x5367)))
(define-fun x895 ((x5367 x2192)) Int (ite x1817 (x6097 x5367) (ite x1498 (x6196 x5367) (ite x4807 (x1491 x5367) (ite x3075 (x1491 x5367) (ite x4608 (x1491 x5367) (ite x5616 (x1491 x5367) (ite x3310 (x6196 x5367) (ite x4769 (x6097 x5367) (x1491 x5367))))))))))
(define-fun x1584 ((x5367 x2192)) Int (ite x5072 (x1491 x5367) (ite x249 (x1491 x5367) (ite x1802 (x1491 x5367) (ite x4420 (x1491 x5367) (ite x5333 (x1491 x5367) (ite x4161 (x1491 x5367) (ite x4259 (x1491 x5367) (ite x612 (x1491 x5367) (ite x2542 (ite x1591 (x895 x5367) (x6097 x5367)) (x1491 x5367)))))))))))
(define-fun x2420 ((x5367 x2192)) Int (ite (= x5381 x5367) x1967 (x1584 x5367)))
(define-fun x5649 ((x5367 x2192)) Int (ite (= x6223 x5367) x1879 (x2420 x5367)))
(define-fun x3064 ((x5367 x2192)) Int (ite (= x5367 x1008) x3466 (x1446 x5367)))
(define-fun x2757 ((x5367 x2192)) Int (ite x5072 (x1446 x5367) (ite x249 (x1446 x5367) (ite x1802 (x1446 x5367) (ite x4420 (x1446 x5367) (ite x5333 (x1446 x5367) (ite x4161 (x1446 x5367) (ite x4259 (x1446 x5367) (ite x612 (x1446 x5367) (ite x2542 (ite x1591 (x1446 x5367) (x3064 x5367)) (x1446 x5367)))))))))))
(define-fun x2835 ((x5367 x2192)) Int (ite (= x5367 x5716) x5171 (x2757 x5367)))
(define-fun x1010 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x4905 x5367)))
(define-fun x3573 ((x5367 x2192)) Int (ite (= x825 x5367) x1312 (x5611 x5367)))
(define-fun x3220 ((x5367 x2192)) Int (ite (= x3039 x5367) x1665 (x3573 x5367)))
(define-fun x894 ((x5367 x2192)) Int (ite x4667 (x3220 x5367) (ite x3050 (x3573 x5367) (ite x988 (x5611 x5367) (ite x2629 (x5611 x5367) (ite x5041 (x5611 x5367) (ite x1700 (x5611 x5367) (ite x3192 (x3573 x5367) (ite x5228 (x3220 x5367) (x5611 x5367))))))))))
(define-fun x6336 ((x5367 x2192)) Int (ite x5072 (x5611 x5367) (ite x249 (x5611 x5367) (ite x1802 (x5611 x5367) (ite x4420 (x5611 x5367) (ite x5333 (x5611 x5367) (ite x4161 (x5611 x5367) (ite x4259 (x5611 x5367) (ite x612 (x5611 x5367) (ite x2542 (x5611 x5367) (ite x1390 (ite x2221 (x894 x5367) (x3220 x5367)) (x5611 x5367))))))))))))
(define-fun x6154 ((x5367 x2192)) Int (ite (= x5367 x5934) x5046 (x6336 x5367)))
(define-fun x5117 ((x5367 x2192)) Int (ite (= x5367 x644) x1253 (x6154 x5367)))
(define-fun x3547 ((x5367 x2192)) Int (ite (= x5367 x100) x5004 (x1471 x5367)))
(define-fun x2828 ((x5367 x2192)) Int (ite x5072 (x1471 x5367) (ite x249 (x1471 x5367) (ite x1802 (x1471 x5367) (ite x4420 (x1471 x5367) (ite x5333 (x1471 x5367) (ite x4161 (x1471 x5367) (ite x4259 (x1471 x5367) (ite x612 (x1471 x5367) (ite x2542 (x1471 x5367) (ite x1390 (ite x2221 (x1471 x5367) (x3547 x5367)) (x1471 x5367))))))))))))
(define-fun x4806 ((x5367 x2192)) Int (ite (= x402 x5367) x4388 (x2828 x5367)))
(define-fun x6126 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x4905 x5367)))
(define-fun x4630 ((x5367 x2192)) Int (ite (= x5367 x3101) x1213 (x1936 x5367)))
(define-fun x1111 ((x5367 x2192)) Int (ite x3203 (x1936 x5367) (x4630 x5367)))
(define-fun x3803 ((x5367 x2192)) Int (ite x3562 (x1936 x5367) (ite x4553 (x1936 x5367) (ite x3166 (x1936 x5367) (ite x5822 (x1111 x5367) (ite x3528 (x1111 x5367) (x1936 x5367)))))))
(define-fun x384 ((x5367 x2192)) Int (ite x5072 (x1936 x5367) (ite x249 (x1936 x5367) (ite x1802 (x1936 x5367) (ite x4420 (x1936 x5367) (ite x5333 (x1936 x5367) (ite x4161 (x1936 x5367) (ite x4259 (x1936 x5367) (ite x612 (x1936 x5367) (ite x2542 (x1936 x5367) (ite x1390 (x1936 x5367) (ite x1987 (x3803 x5367) (x1111 x5367)))))))))))))
(define-fun x3837 ((x5367 x2192)) Int (ite (= x1912 x5367) x1527 (x384 x5367)))
(define-fun x1713 ((x5367 Int)) Int (ite (= x5367 128) 82641394424300342035733052706735002277943222088490025348945809093694544936960 (x4615 x5367)))
(define-fun x3721 ((x5367 Int)) Int (ite (= 132 x5367) x3421 (x1713 x5367)))
(define-fun x5022 ((x5367 Int)) Int (ite (= x5367 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x4615 x5367)))
(define-fun x751 ((x5367 Int)) Int (ite (= x5367 132) x3869 (x5022 x5367)))
(define-fun x3569 ((x5367 Int)) Int (ite (= x5367 164) x5576 (x751 x5367)))
(define-fun x1264 ((x5367 Int)) Int (ite (= 196 x5367) x1780 (x3569 x5367)))
(define-fun x5306 ((x5367 x2192)) Int (ite (= x5367 x2937) x6162 (x1281 x5367)))
(define-fun x2073 ((x5367 x2192)) Int (ite (= x5367 x2947) x5857 (x5306 x5367)))
(define-fun x3867 ((x5367 x2192)) Int (ite (= x5367 x4811) x3592 (x4635 x5367)))
(define-fun x594 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x184 x5367)))
(define-fun x1121 ((x5367 x2192)) Int (ite (= x5367 x1529) x4706 (x3424 x5367)))
(define-fun x6044 ((x5367 x2192)) Int (ite (= x4591 x5367) x1350 (x1121 x5367)))
(define-fun x4778 ((x5367 Int)) Int (ite (= 224 x5367) x4785 (x4507 x5367)))
(define-fun x4265 ((x5367 x2192)) Int (ite (= x2906 x5367) x2423 (x2687 x5367)))
(define-fun x1341 ((x5367 Int)) Int (ite (= x5367 320) x2423 (x4778 x5367)))
(define-fun x14 ((x5367 Int)) Int (ite (= x5367 320) (ite true 1 0) (x1341 x5367)))
(define-fun x2353 ((x5367 Int)) Int (ite (and (>= x5367 0) (< x5367 (+ 32 0))) (x14 (+ 320 (- x5367 0))) (x184 x5367)))
(define-fun x2410 ((x5367 x2192)) Int (ite (= x5367 x3640) x5331 (x6353 x5367)))
(define-fun x2975 ((x5367 x2192)) Int (ite (= x5367 x3791) x4531 (x1299 x5367)))
(define-fun x2317 ((x5367 x2192)) Int (ite (= x2780 x5367) x2293 (x2975 x5367)))
(define-fun x4125 ((x5367 Int)) Int (ite (= 128 x5367) x6334 (x5958 x5367)))
(define-fun x4475 ((x5367 x2192)) Int (ite (= x3041 x5367) x6030 (x1991 x5367)))
(define-fun x2290 ((x5367 Int)) Int (ite (= x5367 128) x6030 (x4125 x5367)))
(define-fun x3778 ((x5367 Int)) Int (ite (= x5367 128) (ite true 1 0) (x2290 x5367)))
(define-fun x2070 ((x5367 Int)) Int (ite (= 0 x5367) x130 (x184 x5367)))
(define-fun x5473 ((x5367 x2192)) Int (ite (= x4188 x5367) x2811 (x3831 x5367)))
(define-fun x5179 ((x5367 x2192)) Int (ite (= x3666 x5367) x4225 (x6165 x5367)))
(define-fun x2689 ((x5367 x2192)) Int (ite (= x5367 x4876) x949 (x5473 x5367)))
(define-fun x236 ((x5367 Int)) Int (ite (= 128 x5367) x1151 (x83 x5367)))
(define-fun x1807 ((x5367 Int)) Int (ite (= x5367 128) (ite true 1 0) (x236 x5367)))
(define-fun x6175 ((x5367 Int)) Int (ite (= 0 x5367) x4518 (x184 x5367)))
(define-fun x5777 ((x5367 x2192)) Int (ite (= x5367 x450) x4219 (x5107 x5367)))
(define-fun x297 ((x5367 x2192)) Int (ite (= x5367 x4803) x1710 (x5777 x5367)))
(define-fun x1818 ((x5367 x2192)) Int (ite (= x5367 x6179) x5040 (x4234 x5367)))
(define-fun x6261 ((x5367 Int)) Int (ite (= x5367 0) 1 (x184 x5367)))
(define-fun x2945 ((x5367 x2192)) Int (ite (= x5367 x4925) x2492 (x4916 x5367)))
(define-fun x1737 ((x5367 x2192)) Int (ite (= x5367 x1906) x2324 (x2945 x5367)))
(define-fun x3151 ((x5367 x2192)) Int (ite (= x5367 x6190) x2644 (x6191 x5367)))
(define-fun x1989 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x184 x5367)))
(define-fun x310 ((x5367 x2192)) Int (ite (= x1587 x5367) x1803 (x1584 x5367)))
(define-fun x846 ((x5367 x2192)) Int (ite (= x5367 x2680) x5677 (x310 x5367)))
(define-fun x547 ((x5367 x2192)) Int (ite (= x3269 x5367) x4863 (x2757 x5367)))
(define-fun x1744 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x184 x5367)))
(define-fun x138 ((x5367 x2192)) Int (ite (= x4595 x5367) x5982 (x6336 x5367)))
(define-fun x3694 ((x5367 x2192)) Int (ite (= x2841 x5367) x4337 (x138 x5367)))
(define-fun x1065 ((x5367 x2192)) Int (ite (= x5367 x5602) x6426 (x2828 x5367)))
(define-fun x2932 ((x5367 Int)) Int (ite (= x5367 0) 1 (x184 x5367)))
(define-fun x1661 ((x5367 x2192)) Int (ite (= x6241 x5367) x3363 (x384 x5367)))
(define-fun x744 ((x5367 Int)) Int (ite (= 128 x5367) 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x4615 x5367)))
(define-fun x5457 ((x5367 Int)) Int (ite (= 132 x5367) x4361 (x744 x5367)))
(define-fun x3305 ((x5367 Int)) Int (ite (= 128 x5367) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x4615 x5367)))
(define-fun x669 ((x5367 Int)) Int (ite (= x5367 132) x2369 (x3305 x5367)))
(define-fun x4830 ((x5367 Int)) Int (ite (= 164 x5367) x2407 (x669 x5367)))
(define-fun x2108 ((x5367 x2192)) Int (ite (= x4969 x5367) x6148 (x1281 x5367)))
(define-fun x1404 ((x5367 x2192)) Int (ite (= x5367 x4180) x5916 (x2108 x5367)))
(define-fun x3505 ((x5367 Int)) Int (ite (= 192 x5367) x2051 (x3169 x5367)))
(define-fun x502 ((x5367 Int)) Int (ite (= 192 x5367) (ite true 1 0) (x3505 x5367)))
(define-fun x3926 ((x5367 Int)) Int (ite (and (>= x5367 0) (> (+ 0 32) x5367)) (x502 (+ (- x5367 0) 192)) (x3385 x5367)))
(define-fun x2129 ((x5367 x2192)) Int (ite (= x413 x5367) x2911 (x3424 x5367)))
(define-fun x930 ((x5367 x2192)) Int (ite (= x1970 x5367) x4212 (x2129 x5367)))
(define-fun x838 ((x5367 Int)) Int (ite (= x5367 224) x5061 (x3010 x5367)))
(define-fun x6202 ((x5367 Int)) Int (ite (= 224 x5367) (ite true 1 0) (x838 x5367)))
(define-fun x4628 ((x5367 Int)) Int (ite (and (> (+ 0 32) x5367) (<= 0 x5367)) (x6202 (+ (- x5367 0) 224)) (x3385 x5367)))
(define-fun x5620 ((x5367 x2192)) Int (ite (= x5367 x962) x148 (x5627 x5367)))
(define-fun x896 ((x5367 x2192)) Int (ite x5786 (x5627 x5367) (ite x4798 (x5627 x5367) (ite x2155 (x5627 x5367) (ite x2764 (x5620 x5367) (x5627 x5367))))))
(define-fun x3429 ((x5367 x2192)) Int (ite (= x5367 x4648) x2147 (x5620 x5367)))
(define-fun x2082 ((x5367 x2192)) Int (ite x5072 (x5627 x5367) (ite x249 (x5627 x5367) (ite x1802 (x5627 x5367) (ite x4420 (ite x3855 (x896 x5367) (x3429 x5367)) (x5627 x5367))))))
(define-fun x5328 ((x5367 x2192)) Int (ite (= x5367 x3161) x969 (x2082 x5367)))
(define-fun x82 ((x5367 x2192)) Int (ite (= x5367 x3467) x2795 (x5328 x5367)))
(define-fun x1173 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x3385 x5367)))
(define-fun x4307 ((x5367 x2192)) Int (ite (= x5367 x2901) x3284 (x1299 x5367)))
(define-fun x5465 ((x5367 x2192)) Int (ite (= x716 x5367) x272 (x4307 x5367)))
(define-fun x4061 ((x5367 Int)) Int (ite (= x5367 128) x3194 (x709 x5367)))
(define-fun x5394 ((x5367 Int)) Int (ite (= x5367 128) (ite true 1 0) (x4061 x5367)))
(define-fun x3997 ((x5367 Int)) Int (ite (= 0 x5367) x3417 (x3385 x5367)))
(define-fun x4391 ((x5367 x2192)) Int (ite (= x1315 x5367) x1692 (x3831 x5367)))
(define-fun x2303 ((x5367 x2192)) Int (ite (= x968 x5367) x4371 (x4391 x5367)))
(define-fun x144 ((x5367 Int)) Int (ite (= 128 x5367) x4980 (x1038 x5367)))
(define-fun x5214 ((x5367 Int)) Int (ite (= x5367 128) (ite true 1 0) (x144 x5367)))
(define-fun x4795 ((x5367 Int)) Int (ite (= x5367 0) x5754 (x3385 x5367)))
(define-fun x3511 ((x5367 x2192)) Int (ite (= x5367 x650) x3048 (x5107 x5367)))
(define-fun x1564 ((x5367 x2192)) Int (ite (= x5367 x5360) x6302 (x3511 x5367)))
(define-fun x5139 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x3385 x5367)))
(define-fun x1300 ((x5367 x2192)) Int (ite (= x5367 x5498) x3077 (x4916 x5367)))
(define-fun x635 ((x5367 x2192)) Int (ite (= x702 x5367) x624 (x1300 x5367)))
(define-fun x5278 ((x5367 Int)) Int (ite (= x5367 0) 1 (x3385 x5367)))
(define-fun x4109 ((x5367 x2192)) Int (ite (= x1274 x5367) x2305 (x1584 x5367)))
(define-fun x5442 ((x5367 x2192)) Int (ite (= x3020 x5367) x3557 (x4109 x5367)))
(define-fun x3133 ((x5367 Int)) Int (ite (= x5367 0) 1 (x3385 x5367)))
(define-fun x1678 ((x5367 x2192)) Int (ite (= x5367 x505) x4816 (x6336 x5367)))
(define-fun x5747 ((x5367 x2192)) Int (ite (= x5367 x3845) x284 (x1678 x5367)))
(define-fun x85 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x3385 x5367)))
(define-fun x5759 ((x5367 x2192)) Int (ite (= x3295 x5367) x1389 (x5296 x5367)))
(define-fun x823 ((x5367 x2192)) Int (ite x3562 (x5296 x5367) (ite x4553 (x5296 x5367) (ite x3166 (x5296 x5367) (ite x5822 (x5759 x5367) (x5296 x5367))))))
(define-fun x6305 ((x5367 x2192)) Int (ite (= x152 x5367) x3458 (x5759 x5367)))
(define-fun x5518 ((x5367 x2192)) Int (ite x5072 (x5296 x5367) (ite x249 (x5296 x5367) (ite x1802 (x5296 x5367) (ite x4420 (x5296 x5367) (ite x5333 (x5296 x5367) (ite x4161 (x5296 x5367) (ite x4259 (x5296 x5367) (ite x612 (x5296 x5367) (ite x2542 (x5296 x5367) (ite x1390 (x5296 x5367) (ite x1987 (x823 x5367) (x6305 x5367)))))))))))))
(define-fun x5213 ((x5367 x2192)) Int (ite (= x2536 x5367) x5451 (x5518 x5367)))
(define-fun x5658 ((x5367 x2192)) Int (ite (= x6100 x5367) x2158 (x5213 x5367)))
(define-fun x2497 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x3385 x5367)))
(define-fun x3390 ((x5367 Int)) Int (ite (= 128 x5367) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x4615 x5367)))
(define-fun x1280 ((x5367 Int)) Int (ite (= x5367 132) x552 (x3390 x5367)))
(define-fun x1174 ((x5367 Int)) Int (ite (= x5367 164) x2772 (x1280 x5367)))
(define-fun x91 ((x5367 x2192)) Int (ite (= x1783 x5367) x2666 (x4635 x5367)))
(define-fun x3893 ((x5367 Int)) Int (ite (= 128 x5367) x2666 (x339 x5367)))
(define-fun x3350 ((x5367 Int)) Int (ite (= 128 x5367) (ite true 1 0) (x3893 x5367)))
(define-fun x1930 ((x5367 Int)) Int (ite (= x5367 0) x6370 (x1515 x5367)))
(define-fun x6064 ((x5367 x2192)) Int (ite (= x3772 x5367) x4354 (x2687 x5367)))
(define-fun x3405 ((x5367 Int)) Int (ite (= 128 x5367) x4354 (x2187 x5367)))
(define-fun x4004 ((x5367 Int)) Int (ite (= x5367 128) (ite true 1 0) (x3405 x5367)))
(define-fun x2808 ((x5367 Int)) Int (ite (= 0 x5367) x5698 (x1515 x5367)))
(define-fun x5142 ((x5367 x2192)) Int (ite (= x5367 x5410) x796 (x6353 x5367)))
(define-fun x1478 ((x5367 Int)) Int (ite (= x5367 0) 1 (x1515 x5367)))
(define-fun x6420 ((x5367 x2192)) Int (ite (= x5367 x4959) x1832 (x1991 x5367)))
(define-fun x141 ((x5367 Int)) Int (ite (= x5367 128) x1832 (x1760 x5367)))
(define-fun x4610 ((x5367 Int)) Int (ite (= x5367 128) (ite true 1 0) (x141 x5367)))
(define-fun x4520 ((x5367 Int)) Int (ite (= 0 x5367) x1444 (x1515 x5367)))
(define-fun x5165 ((x5367 x2192)) Int (ite (= x5367 x510) x235 (x6165 x5367)))
(define-fun x4198 ((x5367 Int)) Int (ite (= 128 x5367) x2772 (x4418 x5367)))
(define-fun x6084 ((x5367 Int)) Int (ite (= x5367 128) (ite true 1 0) (x4198 x5367)))
(define-fun x5761 ((x5367 Int)) Int (ite (= 0 x5367) x4394 (x1515 x5367)))
(define-fun x5675 ((x5367 x2192)) Int (ite (= x6292 x5367) x1929 (x4234 x5367)))
(define-fun x5409 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x1515 x5367)))
(define-fun x2159 ((x5367 x2192)) Int (ite (= x6001 x5367) x2390 (x6191 x5367)))
(define-fun x3762 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x1515 x5367)))
(define-fun x3351 ((x5367 x2192)) Int (ite (= x5367 x3267) x4524 (x2757 x5367)))
(define-fun x225 ((x5367 Int)) Int (ite (= x5367 0) 1 (x1515 x5367)))
(define-fun x3556 ((x5367 x2192)) Int (ite (= x5367 x5366) x4528 (x2828 x5367)))
(define-fun x6055 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x1515 x5367)))
(define-fun x3056 ((x5367 x2192)) Int (ite (= x5367 x5652) x913 (x384 x5367)))
(define-fun x2958 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x1515 x5367)))
(define-fun x5757 ((x5367 Int)) Int (ite (= x3384 x5367) 1 (x2430 x5367)))
(define-fun x4101 ((x5367 Int)) Int (ite (= x5367 x3384) 1 (x2430 x5367)))
(define-fun x2007 ((x5367 Int)) Int (ite x4379 (ite x419 (x2430 x5367) (x415 x5367)) (ite x1031 (ite x765 (x2430 x5367) (x5757 x5367)) (ite x2998 (x2430 x5367) (x4101 x5367)))))
(define-fun x1856 ((x5367 Int)) Int (ite (= x5367 x1376) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2007 x5367)))
(define-fun x3470 ((x5367 Int)) Int (ite (= x4189 x5367) x5838 (x1856 x5367)))
(define-fun x2440 ((x5367 Int)) Int (ite (= x5367 x3022) x5489 (x3470 x5367)))
(define-fun x4724 ((x5367 Int)) Int (ite (= x5367 x1215) x1889 (x2440 x5367)))
(define-fun x3055 ((x5367 x2192)) Int (ite (= x5367 x2277) x5345 (x1605 x5367)))
(define-fun x1257 ((x5367 x2192)) Int (ite x1451 (x3055 x5367) (x1605 x5367)))
(define-fun x5881 ((x5367 x2192)) Int (ite x3244 (x1605 x5367) (ite x4177 (x1605 x5367) (ite x2167 (x1605 x5367) (ite x673 (x1605 x5367) (ite x197 (x1605 x5367) (ite x3434 (x1605 x5367) (ite x2972 (x1257 x5367) (ite x4542 (x1257 x5367) (ite x5832 (x1257 x5367) (ite x4730 (x1605 x5367) (ite x4594 (x1257 x5367) (ite x6364 (x1257 x5367) (ite x241 (x1257 x5367) (ite x5926 (x1605 x5367) (ite x3571 (x1605 x5367) (ite x2996 (x1257 x5367) (ite x22 (x1257 x5367) (x1605 x5367)))))))))))))))))))
(define-fun x24 ((x5367 x2192)) Int (ite x936 (ite x549 (x5881 x5367) (x1257 x5367)) (x1605 x5367)))
(define-fun x1327 ((x5367 x2192)) Int (ite x2903 (x24 x5367) (ite x5646 (x1605 x5367) (ite x2570 (x1605 x5367) (ite x4146 (x1605 x5367) (x24 x5367))))))
(define-fun x489 ((x5367 x2192)) Int (ite (= x5367 x5466) x2857 (x1605 x5367)))
(define-fun x4948 ((x5367 x2192)) Int (ite x6357 (x489 x5367) (x1605 x5367)))
(define-fun x2964 ((x5367 x2192)) Int (ite x5996 (x1605 x5367) (ite x6071 (x1605 x5367) (ite x2551 (x1605 x5367) (ite x3835 (x1605 x5367) (ite x57 (x1605 x5367) (ite x1073 (x1605 x5367) (ite x4802 (x4948 x5367) (ite x4728 (x4948 x5367) (ite x1115 (x4948 x5367) (ite x3046 (x1605 x5367) (ite x1166 (x4948 x5367) (ite x4020 (x4948 x5367) (ite x3373 (x4948 x5367) (ite x1033 (x1605 x5367) (ite x1209 (x1605 x5367) (ite x4956 (x4948 x5367) (ite x5301 (x4948 x5367) (x1605 x5367)))))))))))))))))))
(define-fun x3348 ((x5367 x2192)) Int (ite x2936 (ite x4102 (x2964 x5367) (x4948 x5367)) (x1605 x5367)))
(define-fun x3328 ((x5367 x2192)) Int (ite (= x3230 x5367) x3504 (x1605 x5367)))
(define-fun x1559 ((x5367 x2192)) Int (ite x5247 (ite x3257 (x1605 x5367) (x3328 x5367)) (x1605 x5367)))
(define-fun x6145 ((x5367 x2192)) Int (ite x4949 (x1605 x5367) (ite x4336 (x1605 x5367) (ite x3540 (x3348 x5367) (ite x1190 (x1605 x5367) (ite x2983 (x1605 x5367) (ite x2991 (x1605 x5367) (ite x451 (x1605 x5367) (ite x2314 (x1605 x5367) (ite x5588 (x1559 x5367) (ite x2452 (x1605 x5367) (ite x1810 (x1605 x5367) (ite x3472 (x1605 x5367) (ite x6101 (x1605 x5367) (ite x5745 (x1605 x5367) (ite x2473 (x1605 x5367) (ite x5679 (x1605 x5367) (ite x4976 (x1605 x5367) (ite x4715 (x1559 x5367) (ite x1380 (x1605 x5367) (ite x4879 (x1605 x5367) (ite x5264 (x1605 x5367) (ite x1907 (x1605 x5367) (ite x5718 (x1605 x5367) (ite x4310 (x3348 x5367) (x1605 x5367))))))))))))))))))))))))))
(define-fun x5872 ((x5367 x2192)) Int (ite x116 (x1605 x5367) (ite x5256 (x1605 x5367) (x1559 x5367))))
(define-fun x3241 ((x5367 x2192)) Int (ite x2642 (x5872 x5367) (x1605 x5367)))
(define-fun x1747 ((x5367 x2192)) Int (ite x2568 (x3241 x5367) (x3348 x5367)))
(define-fun x3605 ((x5367 x2192)) Int (ite x2021 (x1747 x5367) (x1605 x5367)))
(define-fun x3773 ((x5367 x2192)) Int (ite x4379 (x1605 x5367) (ite x1031 (ite x765 (x1327 x5367) (x24 x5367)) (ite x2998 (x6145 x5367) (x3605 x5367)))))
(define-fun x6164 ((x5367 x2192)) Int (ite x936 (x4635 x5367) (ite x200 (ite x5491 (x4635 x5367) (x5633 x5367)) (x4635 x5367))))
(define-fun x5241 ((x5367 x2192)) Int (ite x2903 (x6164 x5367) (ite x5646 (x4635 x5367) (ite x2570 (x4635 x5367) (ite x4146 (x4635 x5367) (x6164 x5367))))))
(define-fun x1599 ((x5367 x2192)) Int (ite x2936 (x4635 x5367) (ite x1869 (ite x3644 (x4635 x5367) (x3867 x5367)) (x4635 x5367))))
(define-fun x3327 ((x5367 x2192)) Int (ite x5247 (x4635 x5367) (ite x227 (ite x3248 (x4635 x5367) (x91 x5367)) (x4635 x5367))))
(define-fun x248 ((x5367 x2192)) Int (ite x4949 (x4635 x5367) (ite x4336 (x4635 x5367) (ite x3540 (x1599 x5367) (ite x1190 (x4635 x5367) (ite x2983 (x4635 x5367) (ite x2991 (x4635 x5367) (ite x451 (x4635 x5367) (ite x2314 (x4635 x5367) (ite x5588 (x3327 x5367) (ite x2452 (x4635 x5367) (ite x1810 (x4635 x5367) (ite x3472 (x4635 x5367) (ite x6101 (x4635 x5367) (ite x5745 (x4635 x5367) (ite x2473 (x4635 x5367) (ite x5679 (x4635 x5367) (ite x4976 (x4635 x5367) (ite x4715 (x3327 x5367) (ite x1380 (x4635 x5367) (ite x4879 (x4635 x5367) (ite x5264 (x4635 x5367) (ite x1907 (x4635 x5367) (ite x5718 (x4635 x5367) (ite x4310 (x1599 x5367) (x4635 x5367))))))))))))))))))))))))))
(define-fun x4001 ((x5367 x2192)) Int (ite x116 (x4635 x5367) (ite x5256 (x4635 x5367) (x3327 x5367))))
(define-fun x2966 ((x5367 x2192)) Int (ite x2642 (x4001 x5367) (x4635 x5367)))
(define-fun x2573 ((x5367 x2192)) Int (ite x2568 (x2966 x5367) (x1599 x5367)))
(define-fun x4945 ((x5367 x2192)) Int (ite x2021 (x2573 x5367) (x4635 x5367)))
(define-fun x4112 ((x5367 x2192)) Int (ite x4379 (x4635 x5367) (ite x1031 (ite x765 (x5241 x5367) (x6164 x5367)) (ite x2998 (x248 x5367) (x4945 x5367)))))
(define-fun x2935 ((x5367 x2192)) Int (ite x5937 (x3745 x5367) (ite x1526 (x1281 x5367) (ite x1318 (x1281 x5367) (ite x1230 (x1281 x5367) (ite x3071 (x1281 x5367) (ite x3598 (x1898 x5367) (ite x1724 (x3745 x5367) (ite x4014 (x1281 x5367) (ite x5889 (x1898 x5367) (x1281 x5367)))))))))))
(define-fun x738 ((x5367 x2192)) Int (ite x936 (x1281 x5367) (ite x200 (ite x5491 (x2935 x5367) (x3745 x5367)) (x1281 x5367))))
(define-fun x454 ((x5367 x2192)) Int (ite x2903 (x738 x5367) (ite x5646 (x1281 x5367) (ite x2570 (x1281 x5367) (ite x4146 (x1281 x5367) (x738 x5367))))))
(define-fun x6031 ((x5367 x2192)) Int (ite x2888 (x2073 x5367) (ite x3774 (x1281 x5367) (ite x588 (x1281 x5367) (ite x1403 (x1281 x5367) (ite x4746 (x1281 x5367) (ite x3913 (x5306 x5367) (ite x661 (x2073 x5367) (ite x4547 (x1281 x5367) (ite x1438 (x5306 x5367) (x1281 x5367)))))))))))
(define-fun x5528 ((x5367 x2192)) Int (ite x2936 (x1281 x5367) (ite x1869 (ite x3644 (x6031 x5367) (x2073 x5367)) (x1281 x5367))))
(define-fun x485 ((x5367 x2192)) Int (ite x5828 (x1281 x5367) (ite x1525 (x1281 x5367) (ite x391 (x1281 x5367) (ite x2504 (x2108 x5367) (ite x567 (x1281 x5367) (ite x3863 (x2108 x5367) (x1281 x5367))))))))
(define-fun x280 ((x5367 x2192)) Int (ite x3975 (x1281 x5367) (ite x395 (ite x5438 (x485 x5367) (x1404 x5367)) (x1281 x5367))))
(define-fun x4450 ((x5367 x2192)) Int (ite x4949 (x1281 x5367) (ite x4336 (x1281 x5367) (ite x3540 (x5528 x5367) (ite x1190 (x1281 x5367) (ite x2983 (x1281 x5367) (ite x2991 (x1281 x5367) (ite x451 (x280 x5367) (ite x2314 (x1281 x5367) (ite x5588 (x1281 x5367) (ite x2452 (x1281 x5367) (ite x1810 (x1281 x5367) (ite x3472 (x1281 x5367) (ite x6101 (x1281 x5367) (ite x5745 (x1281 x5367) (ite x2473 (x1281 x5367) (ite x5679 (x1281 x5367) (ite x4976 (x1281 x5367) (ite x4715 (x1281 x5367) (ite x1380 (x1281 x5367) (ite x4879 (x280 x5367) (ite x5264 (x1281 x5367) (ite x1907 (x1281 x5367) (ite x5718 (x1281 x5367) (ite x4310 (x5528 x5367) (x1281 x5367))))))))))))))))))))))))))
(define-fun x5969 ((x5367 x2192)) Int (ite x116 (x280 x5367) (x1281 x5367)))
(define-fun x4601 ((x5367 x2192)) Int (ite x2642 (x5969 x5367) (x1281 x5367)))
(define-fun x917 ((x5367 x2192)) Int (ite x2568 (x4601 x5367) (x5528 x5367)))
(define-fun x2009 ((x5367 x2192)) Int (ite x2021 (x917 x5367) (x1281 x5367)))
(define-fun x4066 ((x5367 x2192)) Int (ite x4379 (x1281 x5367) (ite x1031 (ite x765 (x454 x5367) (x738 x5367)) (ite x2998 (x4450 x5367) (x2009 x5367)))))
(define-fun x1455 ((x5367 x2192)) Int (ite (= x5367 x5335) x3790 (x4066 x5367)))
(define-fun x3454 ((x5367 x2192)) Int (ite (= x5367 x553) x996 (x4112 x5367)))
(define-fun x2042 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x2981 x5367)))
(define-fun x3868 ((x5367 x2192)) Int (ite x5927 (x3512 x5367) (ite x5546 (x3424 x5367) (ite x2458 (x3424 x5367) (ite x674 (x3424 x5367) (ite x4820 (x3424 x5367) (ite x12 (x1524 x5367) (ite x4652 (x1524 x5367) (ite x5160 (x3512 x5367) (ite x5743 (x3424 x5367) (ite x4079 (x3424 x5367) (ite x1185 (x3424 x5367) (x3512 x5367)))))))))))))
(define-fun x196 ((x5367 x2192)) Int (ite x936 (x3424 x5367) (ite x200 (x3424 x5367) (ite x2385 (ite x3839 (x3868 x5367) (x3512 x5367)) (x3424 x5367)))))
(define-fun x4521 ((x5367 x2192)) Int (ite x2903 (x196 x5367) (ite x5646 (x3424 x5367) (ite x2570 (x3424 x5367) (ite x4146 (x3424 x5367) (x196 x5367))))))
(define-fun x2571 ((x5367 x2192)) Int (ite x5184 (x6044 x5367) (ite x1598 (x3424 x5367) (ite x2056 (x3424 x5367) (ite x1239 (x3424 x5367) (ite x1570 (x3424 x5367) (ite x5039 (x1121 x5367) (ite x5163 (x1121 x5367) (ite x2508 (x6044 x5367) (ite x5812 (x3424 x5367) (ite x892 (x3424 x5367) (ite x2112 (x3424 x5367) (x6044 x5367)))))))))))))
(define-fun x4679 ((x5367 x2192)) Int (ite x2936 (x3424 x5367) (ite x1869 (x3424 x5367) (ite x6384 (ite x6362 (x2571 x5367) (x6044 x5367)) (x3424 x5367)))))
(define-fun x5332 ((x5367 x2192)) Int (ite x975 (x3424 x5367) (ite x1333 (x3424 x5367) (ite x1811 (x3424 x5367) (ite x3425 (x2129 x5367) (ite x989 (x2129 x5367) (x3424 x5367)))))))
(define-fun x5151 ((x5367 x2192)) Int (ite x3975 (x3424 x5367) (ite x395 (x3424 x5367) (ite x4742 (ite x5221 (x5332 x5367) (x930 x5367)) (x3424 x5367)))))
(define-fun x4995 ((x5367 x2192)) Int (ite x4949 (x3424 x5367) (ite x4336 (x3424 x5367) (ite x3540 (x4679 x5367) (ite x1190 (x3424 x5367) (ite x2983 (x3424 x5367) (ite x2991 (x3424 x5367) (ite x451 (x5151 x5367) (ite x2314 (x3424 x5367) (ite x5588 (x3424 x5367) (ite x2452 (x3424 x5367) (ite x1810 (x3424 x5367) (ite x3472 (x3424 x5367) (ite x6101 (x3424 x5367) (ite x5745 (x3424 x5367) (ite x2473 (x3424 x5367) (ite x5679 (x3424 x5367) (ite x4976 (x3424 x5367) (ite x4715 (x3424 x5367) (ite x1380 (x3424 x5367) (ite x4879 (x5151 x5367) (ite x5264 (x3424 x5367) (ite x1907 (x3424 x5367) (ite x5718 (x3424 x5367) (ite x4310 (x4679 x5367) (x3424 x5367))))))))))))))))))))))))))
(define-fun x5690 ((x5367 x2192)) Int (ite x116 (x5151 x5367) (x3424 x5367)))
(define-fun x1046 ((x5367 x2192)) Int (ite x2642 (x5690 x5367) (x3424 x5367)))
(define-fun x3484 ((x5367 x2192)) Int (ite x2568 (x1046 x5367) (x4679 x5367)))
(define-fun x670 ((x5367 x2192)) Int (ite x2021 (x3484 x5367) (x3424 x5367)))
(define-fun x480 ((x5367 x2192)) Int (ite x4379 (x3424 x5367) (ite x1031 (ite x765 (x4521 x5367) (x196 x5367)) (ite x2998 (x4995 x5367) (x670 x5367)))))
(define-fun x4421 ((x5367 x2192)) Int (ite (= x5367 x1833) x881 (x480 x5367)))
(define-fun x1089 ((x5367 Int)) Int (ite (= x5367 224) x1385 (x5776 x5367)))
(define-fun x5918 ((x5367 x2192)) Int (ite x936 (x2687 x5367) (ite x200 (x2687 x5367) (ite x2385 (ite x3839 (x2687 x5367) (x6358 x5367)) (x2687 x5367)))))
(define-fun x1442 ((x5367 x2192)) Int (ite x2903 (x5918 x5367) (ite x5646 (x2687 x5367) (ite x2570 (x2687 x5367) (ite x4146 (x2687 x5367) (x5918 x5367))))))
(define-fun x1323 ((x5367 x2192)) Int (ite x2936 (x2687 x5367) (ite x1869 (x2687 x5367) (ite x6384 (ite x6362 (x2687 x5367) (x4265 x5367)) (x2687 x5367)))))
(define-fun x3283 ((x5367 x2192)) Int (ite x5247 (x2687 x5367) (ite x227 (x2687 x5367) (ite x1357 (ite x1799 (x2687 x5367) (x6064 x5367)) (x2687 x5367)))))
(define-fun x1119 ((x5367 x2192)) Int (ite x4949 (x2687 x5367) (ite x4336 (x2687 x5367) (ite x3540 (x1323 x5367) (ite x1190 (x2687 x5367) (ite x2983 (x2687 x5367) (ite x2991 (x2687 x5367) (ite x451 (x2687 x5367) (ite x2314 (x2687 x5367) (ite x5588 (x3283 x5367) (ite x2452 (x2687 x5367) (ite x1810 (x2687 x5367) (ite x3472 (x2687 x5367) (ite x6101 (x2687 x5367) (ite x5745 (x2687 x5367) (ite x2473 (x2687 x5367) (ite x5679 (x2687 x5367) (ite x4976 (x2687 x5367) (ite x4715 (x3283 x5367) (ite x1380 (x2687 x5367) (ite x4879 (x2687 x5367) (ite x5264 (x2687 x5367) (ite x1907 (x2687 x5367) (ite x5718 (x2687 x5367) (ite x4310 (x1323 x5367) (x2687 x5367))))))))))))))))))))))))))
(define-fun x2464 ((x5367 x2192)) Int (ite x116 (x2687 x5367) (ite x5256 (x2687 x5367) (x3283 x5367))))
(define-fun x5897 ((x5367 x2192)) Int (ite x2642 (x2464 x5367) (x2687 x5367)))
(define-fun x3447 ((x5367 x2192)) Int (ite x2568 (x5897 x5367) (x1323 x5367)))
(define-fun x2222 ((x5367 x2192)) Int (ite x2021 (x3447 x5367) (x2687 x5367)))
(define-fun x4021 ((x5367 x2192)) Int (ite x4379 (x2687 x5367) (ite x1031 (ite x765 (x1442 x5367) (x5918 x5367)) (ite x2998 (x1119 x5367) (x2222 x5367)))))
(define-fun x4464 ((x5367 x2192)) Int (ite (= x2076 x5367) x3258 (x4021 x5367)))
(define-fun x115 ((x5367 Int)) Int (ite (= 320 x5367) x3258 (x1089 x5367)))
(define-fun x3397 ((x5367 Int)) Int (ite (= x5367 320) (ite true 1 0) (x115 x5367)))
(define-fun x1749 ((x5367 Int)) Int (ite (and (< x5367 (+ 0 32)) (<= 0 x5367)) (x3397 (+ 320 (- x5367 0))) (x2981 x5367)))
(define-fun x3686 ((x5367 x2192)) Int (ite x5520 (x6353 x5367) (x2624 x5367)))
(define-fun x4260 ((x5367 x2192)) Int (ite x1563 (x6353 x5367) (ite x2496 (x6353 x5367) (ite x5422 (x6353 x5367) (ite x2386 (x3686 x5367) (ite x1335 (x3686 x5367) (x6353 x5367)))))))
(define-fun x448 ((x5367 x2192)) Int (ite x936 (x6353 x5367) (ite x200 (x6353 x5367) (ite x2385 (x6353 x5367) (ite x4137 (ite x3678 (x4260 x5367) (x3686 x5367)) (x6353 x5367))))))
(define-fun x5821 ((x5367 x2192)) Int (ite x2903 (x448 x5367) (ite x5646 (x6353 x5367) (ite x2570 (x6353 x5367) (ite x4146 (x6353 x5367) (x448 x5367))))))
(define-fun x1032 ((x5367 x2192)) Int (ite x1382 (x6353 x5367) (x2410 x5367)))
(define-fun x377 ((x5367 x2192)) Int (ite x1433 (x6353 x5367) (ite x3270 (x6353 x5367) (ite x4218 (x6353 x5367) (ite x2819 (x1032 x5367) (ite x1437 (x1032 x5367) (x6353 x5367)))))))
(define-fun x3462 ((x5367 x2192)) Int (ite x2936 (x6353 x5367) (ite x1869 (x6353 x5367) (ite x6384 (x6353 x5367) (ite x2723 (ite x291 (x377 x5367) (x1032 x5367)) (x6353 x5367))))))
(define-fun x2838 ((x5367 x2192)) Int (ite x5247 (x6353 x5367) (ite x227 (x6353 x5367) (ite x1357 (x6353 x5367) (ite x841 (ite x5779 (x6353 x5367) (x5142 x5367)) (x6353 x5367))))))
(define-fun x4621 ((x5367 x2192)) Int (ite x4949 (x6353 x5367) (ite x4336 (x6353 x5367) (ite x3540 (x3462 x5367) (ite x1190 (x6353 x5367) (ite x2983 (x6353 x5367) (ite x2991 (x6353 x5367) (ite x451 (x6353 x5367) (ite x2314 (x6353 x5367) (ite x5588 (x2838 x5367) (ite x2452 (x6353 x5367) (ite x1810 (x6353 x5367) (ite x3472 (x6353 x5367) (ite x6101 (x6353 x5367) (ite x5745 (x6353 x5367) (ite x2473 (x6353 x5367) (ite x5679 (x6353 x5367) (ite x4976 (x6353 x5367) (ite x4715 (x2838 x5367) (ite x1380 (x6353 x5367) (ite x4879 (x6353 x5367) (ite x5264 (x6353 x5367) (ite x1907 (x6353 x5367) (ite x5718 (x6353 x5367) (ite x4310 (x3462 x5367) (x6353 x5367))))))))))))))))))))))))))
(define-fun x4736 ((x5367 x2192)) Int (ite x116 (x6353 x5367) (ite x5256 (x6353 x5367) (x2838 x5367))))
(define-fun x1849 ((x5367 x2192)) Int (ite x2642 (x4736 x5367) (x6353 x5367)))
(define-fun x1813 ((x5367 x2192)) Int (ite x2568 (x1849 x5367) (x3462 x5367)))
(define-fun x5722 ((x5367 x2192)) Int (ite x2021 (x1813 x5367) (x6353 x5367)))
(define-fun x5806 ((x5367 x2192)) Int (ite x4379 (x6353 x5367) (ite x1031 (ite x765 (x5821 x5367) (x448 x5367)) (ite x2998 (x4621 x5367) (x5722 x5367)))))
(define-fun x4958 ((x5367 x2192)) Int (ite (= x4537 x5367) x5225 (x5806 x5367)))
(define-fun x6025 ((x5367 x2192)) Int (ite x3073 (x4335 x5367) (ite x4353 (x4335 x5367) (ite x4232 (x4335 x5367) (ite x3335 (x2138 x5367) (ite x6043 (x1299 x5367) (ite x4116 (x1299 x5367) (ite x5899 (x1299 x5367) (ite x3641 (x1299 x5367) (ite x3646 (x1299 x5367) (ite x3764 (x2138 x5367) (ite x4482 (x4335 x5367) (x1299 x5367)))))))))))))
(define-fun x5250 ((x5367 x2192)) Int (ite x936 (x1299 x5367) (ite x200 (x1299 x5367) (ite x2385 (x1299 x5367) (ite x4137 (x1299 x5367) (ite x4319 (ite x877 (x6025 x5367) (x4335 x5367)) (x1299 x5367)))))))
(define-fun x5043 ((x5367 x2192)) Int (ite x2903 (x5250 x5367) (ite x5646 (x1299 x5367) (ite x2570 (x1299 x5367) (ite x4146 (x1299 x5367) (x5250 x5367))))))
(define-fun x4919 ((x5367 x2192)) Int (ite x348 (x2317 x5367) (ite x3866 (x2317 x5367) (ite x4242 (x2317 x5367) (ite x923 (x2975 x5367) (ite x2357 (x1299 x5367) (ite x4990 (x1299 x5367) (ite x5439 (x1299 x5367) (ite x2904 (x1299 x5367) (ite x1934 (x1299 x5367) (ite x3487 (x2975 x5367) (ite x1022 (x2317 x5367) (x1299 x5367)))))))))))))
(define-fun x6143 ((x5367 x2192)) Int (ite x2936 (x1299 x5367) (ite x1869 (x1299 x5367) (ite x6384 (x1299 x5367) (ite x2723 (x1299 x5367) (ite x3476 (ite x4643 (x4919 x5367) (x2317 x5367)) (x1299 x5367)))))))
(define-fun x4762 ((x5367 x2192)) Int (ite x6417 (x4307 x5367) (ite x2949 (x1299 x5367) (ite x2422 (x1299 x5367) (ite x1577 (x1299 x5367) (ite x3707 (x1299 x5367) (ite x792 (x4307 x5367) (x1299 x5367))))))))
(define-fun x5074 ((x5367 x2192)) Int (ite x3975 (x1299 x5367) (ite x395 (x1299 x5367) (ite x4742 (x1299 x5367) (ite x2790 (x1299 x5367) (ite x4183 (ite x2321 (x4762 x5367) (x5465 x5367)) (x1299 x5367)))))))
(define-fun x5134 ((x5367 x2192)) Int (ite x4949 (x1299 x5367) (ite x4336 (x1299 x5367) (ite x3540 (x6143 x5367) (ite x1190 (x1299 x5367) (ite x2983 (x1299 x5367) (ite x2991 (x1299 x5367) (ite x451 (x5074 x5367) (ite x2314 (x1299 x5367) (ite x5588 (x1299 x5367) (ite x2452 (x1299 x5367) (ite x1810 (x1299 x5367) (ite x3472 (x1299 x5367) (ite x6101 (x1299 x5367) (ite x5745 (x1299 x5367) (ite x2473 (x1299 x5367) (ite x5679 (x1299 x5367) (ite x4976 (x1299 x5367) (ite x4715 (x1299 x5367) (ite x1380 (x1299 x5367) (ite x4879 (x5074 x5367) (ite x5264 (x1299 x5367) (ite x1907 (x1299 x5367) (ite x5718 (x1299 x5367) (ite x4310 (x6143 x5367) (x1299 x5367))))))))))))))))))))))))))
(define-fun x1356 ((x5367 x2192)) Int (ite x116 (x5074 x5367) (x1299 x5367)))
(define-fun x6259 ((x5367 x2192)) Int (ite x2642 (x1356 x5367) (x1299 x5367)))
(define-fun x2695 ((x5367 x2192)) Int (ite x2568 (x6259 x5367) (x6143 x5367)))
(define-fun x2767 ((x5367 x2192)) Int (ite x2021 (x2695 x5367) (x1299 x5367)))
(define-fun x6347 ((x5367 x2192)) Int (ite x4379 (x1299 x5367) (ite x1031 (ite x765 (x5043 x5367) (x5250 x5367)) (ite x2998 (x5134 x5367) (x2767 x5367)))))
(define-fun x681 ((x5367 x2192)) Int (ite (= x1183 x5367) x2299 (x6347 x5367)))
(define-fun x1311 ((x5367 Int)) Int (ite (= x5367 128) x3506 (x3687 x5367)))
(define-fun x5801 ((x5367 x2192)) Int (ite x936 (x1991 x5367) (ite x200 (x1991 x5367) (ite x2385 (x1991 x5367) (ite x4137 (x1991 x5367) (ite x4319 (ite x877 (x1991 x5367) (x960 x5367)) (x1991 x5367)))))))
(define-fun x5614 ((x5367 x2192)) Int (ite x2903 (x5801 x5367) (ite x5646 (x1991 x5367) (ite x2570 (x1991 x5367) (ite x4146 (x1991 x5367) (x5801 x5367))))))
(define-fun x5631 ((x5367 x2192)) Int (ite x2936 (x1991 x5367) (ite x1869 (x1991 x5367) (ite x6384 (x1991 x5367) (ite x2723 (x1991 x5367) (ite x3476 (ite x4643 (x1991 x5367) (x4475 x5367)) (x1991 x5367)))))))
(define-fun x5199 ((x5367 x2192)) Int (ite x5247 (x1991 x5367) (ite x227 (x1991 x5367) (ite x1357 (x1991 x5367) (ite x841 (x1991 x5367) (ite x961 (ite x4574 (x1991 x5367) (x6420 x5367)) (x1991 x5367)))))))
(define-fun x352 ((x5367 x2192)) Int (ite x4949 (x1991 x5367) (ite x4336 (x1991 x5367) (ite x3540 (x5631 x5367) (ite x1190 (x1991 x5367) (ite x2983 (x1991 x5367) (ite x2991 (x1991 x5367) (ite x451 (x1991 x5367) (ite x2314 (x1991 x5367) (ite x5588 (x5199 x5367) (ite x2452 (x1991 x5367) (ite x1810 (x1991 x5367) (ite x3472 (x1991 x5367) (ite x6101 (x1991 x5367) (ite x5745 (x1991 x5367) (ite x2473 (x1991 x5367) (ite x5679 (x1991 x5367) (ite x4976 (x1991 x5367) (ite x4715 (x5199 x5367) (ite x1380 (x1991 x5367) (ite x4879 (x1991 x5367) (ite x5264 (x1991 x5367) (ite x1907 (x1991 x5367) (ite x5718 (x1991 x5367) (ite x4310 (x5631 x5367) (x1991 x5367))))))))))))))))))))))))))
(define-fun x5019 ((x5367 x2192)) Int (ite x116 (x1991 x5367) (ite x5256 (x1991 x5367) (x5199 x5367))))
(define-fun x3591 ((x5367 x2192)) Int (ite x2642 (x5019 x5367) (x1991 x5367)))
(define-fun x3304 ((x5367 x2192)) Int (ite x2568 (x3591 x5367) (x5631 x5367)))
(define-fun x3738 ((x5367 x2192)) Int (ite x2021 (x3304 x5367) (x1991 x5367)))
(define-fun x3473 ((x5367 x2192)) Int (ite x4379 (x1991 x5367) (ite x1031 (ite x765 (x5614 x5367) (x5801 x5367)) (ite x2998 (x352 x5367) (x3738 x5367)))))
(define-fun x5029 ((x5367 x2192)) Int (ite (= x5367 x2895) x667 (x3473 x5367)))
(define-fun x813 ((x5367 Int)) Int (ite (= x5367 128) x667 (x1311 x5367)))
(define-fun x5696 ((x5367 Int)) Int (ite (= x5367 128) (ite true 1 0) (x813 x5367)))
(define-fun x2225 ((x5367 Int)) Int (ite (= 0 x5367) x4563 (x2981 x5367)))
(define-fun x4947 ((x5367 x2192)) Int (ite x920 (x3831 x5367) (ite x3042 (x3831 x5367) (ite x5153 (x3831 x5367) (ite x2552 (x3831 x5367) (ite x90 (x3831 x5367) (ite x973 (x3831 x5367) (ite x5867 (x4334 x5367) (ite x2799 (x4334 x5367) (x3831 x5367))))))))))
(define-fun x1895 ((x5367 x2192)) Int (ite x936 (x3831 x5367) (ite x200 (x3831 x5367) (ite x2385 (x3831 x5367) (ite x4137 (x3831 x5367) (ite x4319 (x3831 x5367) (ite x2399 (ite x3681 (x4947 x5367) (x5536 x5367)) (x3831 x5367))))))))
(define-fun x4495 ((x5367 x2192)) Int (ite x2903 (x1895 x5367) (ite x5646 (x3831 x5367) (ite x2570 (x3831 x5367) (ite x4146 (x3831 x5367) (x1895 x5367))))))
(define-fun x2750 ((x5367 x2192)) Int (ite x5594 (x3831 x5367) (ite x5508 (x3831 x5367) (ite x1886 (x3831 x5367) (ite x4405 (x3831 x5367) (ite x3987 (x3831 x5367) (ite x690 (x3831 x5367) (ite x2199 (x5473 x5367) (ite x5724 (x5473 x5367) (x3831 x5367))))))))))
(define-fun x932 ((x5367 x2192)) Int (ite x2936 (x3831 x5367) (ite x1869 (x3831 x5367) (ite x6384 (x3831 x5367) (ite x2723 (x3831 x5367) (ite x3476 (x3831 x5367) (ite x3658 (ite x5418 (x2750 x5367) (x2689 x5367)) (x3831 x5367))))))))
(define-fun x3207 ((x5367 x2192)) Int (ite x1769 (x3831 x5367) (ite x1923 (x3831 x5367) (ite x1050 (x3831 x5367) (ite x5630 (x3831 x5367) (ite x1566 (x4391 x5367) (x3831 x5367)))))))
(define-fun x4592 ((x5367 x2192)) Int (ite x3975 (x3831 x5367) (ite x395 (x3831 x5367) (ite x4742 (x3831 x5367) (ite x2790 (x3831 x5367) (ite x4183 (x3831 x5367) (ite x2919 (ite x6074 (x3207 x5367) (x2303 x5367)) (x3831 x5367))))))))
(define-fun x3034 ((x5367 x2192)) Int (ite x4949 (x3831 x5367) (ite x4336 (x3831 x5367) (ite x3540 (x932 x5367) (ite x1190 (x3831 x5367) (ite x2983 (x3831 x5367) (ite x2991 (x3831 x5367) (ite x451 (x4592 x5367) (ite x2314 (x3831 x5367) (ite x5588 (x3831 x5367) (ite x2452 (x3831 x5367) (ite x1810 (x3831 x5367) (ite x3472 (x3831 x5367) (ite x6101 (x3831 x5367) (ite x5745 (x3831 x5367) (ite x2473 (x3831 x5367) (ite x5679 (x3831 x5367) (ite x4976 (x3831 x5367) (ite x4715 (x3831 x5367) (ite x1380 (x3831 x5367) (ite x4879 (x4592 x5367) (ite x5264 (x3831 x5367) (ite x1907 (x3831 x5367) (ite x5718 (x3831 x5367) (ite x4310 (x932 x5367) (x3831 x5367))))))))))))))))))))))))))
(define-fun x1009 ((x5367 x2192)) Int (ite x116 (x4592 x5367) (x3831 x5367)))
(define-fun x3589 ((x5367 x2192)) Int (ite x2642 (x1009 x5367) (x3831 x5367)))
(define-fun x5809 ((x5367 x2192)) Int (ite x2568 (x3589 x5367) (x932 x5367)))
(define-fun x4927 ((x5367 x2192)) Int (ite x2021 (x5809 x5367) (x3831 x5367)))
(define-fun x4203 ((x5367 x2192)) Int (ite x4379 (x3831 x5367) (ite x1031 (ite x765 (x4495 x5367) (x1895 x5367)) (ite x2998 (x3034 x5367) (x4927 x5367)))))
(define-fun x4909 ((x5367 x2192)) Int (ite x920 (x6165 x5367) (ite x3042 (x6165 x5367) (ite x5153 (x6165 x5367) (ite x2552 (x6165 x5367) (ite x90 (x6165 x5367) (ite x973 (x6165 x5367) (ite x5867 (x6165 x5367) (ite x2799 (x4810 x5367) (x6165 x5367))))))))))
(define-fun x2175 ((x5367 x2192)) Int (ite x936 (x6165 x5367) (ite x200 (x6165 x5367) (ite x2385 (x6165 x5367) (ite x4137 (x6165 x5367) (ite x4319 (x6165 x5367) (ite x2399 (ite x3681 (x4909 x5367) (x4810 x5367)) (x6165 x5367))))))))
(define-fun x4210 ((x5367 x2192)) Int (ite x2903 (x2175 x5367) (ite x5646 (x6165 x5367) (ite x2570 (x6165 x5367) (ite x4146 (x6165 x5367) (x2175 x5367))))))
(define-fun x3400 ((x5367 x2192)) Int (ite x5594 (x6165 x5367) (ite x5508 (x6165 x5367) (ite x1886 (x6165 x5367) (ite x4405 (x6165 x5367) (ite x3987 (x6165 x5367) (ite x690 (x6165 x5367) (ite x2199 (x6165 x5367) (ite x5724 (x5179 x5367) (x6165 x5367))))))))))
(define-fun x5452 ((x5367 x2192)) Int (ite x2936 (x6165 x5367) (ite x1869 (x6165 x5367) (ite x6384 (x6165 x5367) (ite x2723 (x6165 x5367) (ite x3476 (x6165 x5367) (ite x3658 (ite x5418 (x3400 x5367) (x5179 x5367)) (x6165 x5367))))))))
(define-fun x4294 ((x5367 x2192)) Int (ite x5247 (x6165 x5367) (ite x227 (x6165 x5367) (ite x1357 (x6165 x5367) (ite x841 (x6165 x5367) (ite x961 (x6165 x5367) (ite x1398 (ite x1664 (x6165 x5367) (x5165 x5367)) (x6165 x5367))))))))
(define-fun x1909 ((x5367 x2192)) Int (ite x4949 (x6165 x5367) (ite x4336 (x6165 x5367) (ite x3540 (x5452 x5367) (ite x1190 (x6165 x5367) (ite x2983 (x6165 x5367) (ite x2991 (x6165 x5367) (ite x451 (x6165 x5367) (ite x2314 (x6165 x5367) (ite x5588 (x4294 x5367) (ite x2452 (x6165 x5367) (ite x1810 (x6165 x5367) (ite x3472 (x6165 x5367) (ite x6101 (x6165 x5367) (ite x5745 (x6165 x5367) (ite x2473 (x6165 x5367) (ite x5679 (x6165 x5367) (ite x4976 (x6165 x5367) (ite x4715 (x4294 x5367) (ite x1380 (x6165 x5367) (ite x4879 (x6165 x5367) (ite x5264 (x6165 x5367) (ite x1907 (x6165 x5367) (ite x5718 (x6165 x5367) (ite x4310 (x5452 x5367) (x6165 x5367))))))))))))))))))))))))))
(define-fun x5094 ((x5367 x2192)) Int (ite x116 (x6165 x5367) (ite x5256 (x6165 x5367) (x4294 x5367))))
(define-fun x3861 ((x5367 x2192)) Int (ite x2642 (x5094 x5367) (x6165 x5367)))
(define-fun x3606 ((x5367 x2192)) Int (ite x2568 (x3861 x5367) (x5452 x5367)))
(define-fun x6067 ((x5367 x2192)) Int (ite x2021 (x3606 x5367) (x6165 x5367)))
(define-fun x5111 ((x5367 x2192)) Int (ite x4379 (x6165 x5367) (ite x1031 (ite x765 (x4210 x5367) (x2175 x5367)) (ite x2998 (x1909 x5367) (x6067 x5367)))))
(define-fun x5274 ((x5367 x2192)) Int (ite (= x1474 x5367) x1113 (x4203 x5367)))
(define-fun x2759 ((x5367 x2192)) Int (ite (= x2889 x5367) x561 (x5111 x5367)))
(define-fun x3187 ((x5367 Int)) Int (ite (= x5367 128) x3033 (x3342 x5367)))
(define-fun x5710 ((x5367 Int)) Int (ite (= 128 x5367) (ite true 1 0) (x3187 x5367)))
(define-fun x414 ((x5367 Int)) Int (ite (= 0 x5367) x5928 (x2981 x5367)))
(define-fun x4686 ((x5367 x2192)) Int (ite x2130 (x4315 x5367) (ite x6227 (x5629 x5367) (ite x4483 (x5107 x5367) (ite x2137 (x5107 x5367) (ite x4119 (x5107 x5367) (ite x453 (x5107 x5367) (ite x2658 (x5629 x5367) (ite x2239 (x4315 x5367) (x5107 x5367))))))))))
(define-fun x5613 ((x5367 x2192)) Int (ite x936 (x5107 x5367) (ite x200 (x5107 x5367) (ite x2385 (x5107 x5367) (ite x4137 (x5107 x5367) (ite x4319 (x5107 x5367) (ite x2399 (x5107 x5367) (ite x3206 (ite x5668 (x4686 x5367) (x4315 x5367)) (x5107 x5367)))))))))
(define-fun x2078 ((x5367 x2192)) Int (ite x2903 (x5613 x5367) (ite x5646 (x5107 x5367) (ite x2570 (x5107 x5367) (ite x4146 (x5107 x5367) (x5613 x5367))))))
(define-fun x331 ((x5367 x2192)) Int (ite x6032 (x297 x5367) (ite x1150 (x5777 x5367) (ite x1539 (x5107 x5367) (ite x5635 (x5107 x5367) (ite x296 (x5107 x5367) (ite x2639 (x5107 x5367) (ite x252 (x5777 x5367) (ite x6275 (x297 x5367) (x5107 x5367))))))))))
(define-fun x208 ((x5367 x2192)) Int (ite x2936 (x5107 x5367) (ite x1869 (x5107 x5367) (ite x6384 (x5107 x5367) (ite x2723 (x5107 x5367) (ite x3476 (x5107 x5367) (ite x3658 (x5107 x5367) (ite x1238 (ite x4688 (x331 x5367) (x297 x5367)) (x5107 x5367)))))))))
(define-fun x826 ((x5367 x2192)) Int (ite x2058 (x3511 x5367) (ite x2114 (x5107 x5367) (ite x3792 (x5107 x5367) (ite x695 (x5107 x5367) (ite x2413 (x3511 x5367) (x5107 x5367)))))))
(define-fun x886 ((x5367 x2192)) Int (ite x3975 (x5107 x5367) (ite x395 (x5107 x5367) (ite x4742 (x5107 x5367) (ite x2790 (x5107 x5367) (ite x4183 (x5107 x5367) (ite x2919 (x5107 x5367) (ite x4650 (ite x1979 (x826 x5367) (x1564 x5367)) (x5107 x5367)))))))))
(define-fun x4942 ((x5367 x2192)) Int (ite x4949 (x5107 x5367) (ite x4336 (x5107 x5367) (ite x3540 (x208 x5367) (ite x1190 (x5107 x5367) (ite x2983 (x5107 x5367) (ite x2991 (x5107 x5367) (ite x451 (x886 x5367) (ite x2314 (x5107 x5367) (ite x5588 (x5107 x5367) (ite x2452 (x5107 x5367) (ite x1810 (x5107 x5367) (ite x3472 (x5107 x5367) (ite x6101 (x5107 x5367) (ite x5745 (x5107 x5367) (ite x2473 (x5107 x5367) (ite x5679 (x5107 x5367) (ite x4976 (x5107 x5367) (ite x4715 (x5107 x5367) (ite x1380 (x5107 x5367) (ite x4879 (x886 x5367) (ite x5264 (x5107 x5367) (ite x1907 (x5107 x5367) (ite x5718 (x5107 x5367) (ite x4310 (x208 x5367) (x5107 x5367))))))))))))))))))))))))))
(define-fun x3168 ((x5367 x2192)) Int (ite x116 (x886 x5367) (x5107 x5367)))
(define-fun x517 ((x5367 x2192)) Int (ite x2642 (x3168 x5367) (x5107 x5367)))
(define-fun x1609 ((x5367 x2192)) Int (ite x2568 (x517 x5367) (x208 x5367)))
(define-fun x1944 ((x5367 x2192)) Int (ite x2021 (x1609 x5367) (x5107 x5367)))
(define-fun x2281 ((x5367 x2192)) Int (ite x4379 (x5107 x5367) (ite x1031 (ite x765 (x2078 x5367) (x5613 x5367)) (ite x2998 (x4942 x5367) (x1944 x5367)))))
(define-fun x2591 ((x5367 x2192)) Int (ite (= x5367 x4975) x2705 (x2281 x5367)))
(define-fun x1588 ((x5367 x2192)) Int (ite x936 (x4234 x5367) (ite x200 (x4234 x5367) (ite x2385 (x4234 x5367) (ite x4137 (x4234 x5367) (ite x4319 (x4234 x5367) (ite x2399 (x4234 x5367) (ite x3206 (ite x5668 (x4234 x5367) (x327 x5367)) (x4234 x5367)))))))))
(define-fun x5003 ((x5367 x2192)) Int (ite x2903 (x1588 x5367) (ite x5646 (x4234 x5367) (ite x2570 (x4234 x5367) (ite x4146 (x4234 x5367) (x1588 x5367))))))
(define-fun x5732 ((x5367 x2192)) Int (ite x2936 (x4234 x5367) (ite x1869 (x4234 x5367) (ite x6384 (x4234 x5367) (ite x2723 (x4234 x5367) (ite x3476 (x4234 x5367) (ite x3658 (x4234 x5367) (ite x1238 (ite x4688 (x4234 x5367) (x1818 x5367)) (x4234 x5367)))))))))
(define-fun x5707 ((x5367 x2192)) Int (ite x5247 (x4234 x5367) (ite x227 (x4234 x5367) (ite x1357 (x4234 x5367) (ite x841 (x4234 x5367) (ite x961 (x4234 x5367) (ite x1398 (x4234 x5367) (ite x67 (ite x4896 (x4234 x5367) (x5675 x5367)) (x4234 x5367)))))))))
(define-fun x3086 ((x5367 x2192)) Int (ite x4949 (x4234 x5367) (ite x4336 (x4234 x5367) (ite x3540 (x5732 x5367) (ite x1190 (x4234 x5367) (ite x2983 (x4234 x5367) (ite x2991 (x4234 x5367) (ite x451 (x4234 x5367) (ite x2314 (x4234 x5367) (ite x5588 (x5707 x5367) (ite x2452 (x4234 x5367) (ite x1810 (x4234 x5367) (ite x3472 (x4234 x5367) (ite x6101 (x4234 x5367) (ite x5745 (x4234 x5367) (ite x2473 (x4234 x5367) (ite x5679 (x4234 x5367) (ite x4976 (x4234 x5367) (ite x4715 (x5707 x5367) (ite x1380 (x4234 x5367) (ite x4879 (x4234 x5367) (ite x5264 (x4234 x5367) (ite x1907 (x4234 x5367) (ite x5718 (x4234 x5367) (ite x4310 (x5732 x5367) (x4234 x5367))))))))))))))))))))))))))
(define-fun x3485 ((x5367 x2192)) Int (ite x116 (x4234 x5367) (ite x5256 (x4234 x5367) (x5707 x5367))))
(define-fun x1042 ((x5367 x2192)) Int (ite x2642 (x3485 x5367) (x4234 x5367)))
(define-fun x2928 ((x5367 x2192)) Int (ite x2568 (x1042 x5367) (x5732 x5367)))
(define-fun x6138 ((x5367 x2192)) Int (ite x2021 (x2928 x5367) (x4234 x5367)))
(define-fun x5988 ((x5367 x2192)) Int (ite x4379 (x4234 x5367) (ite x1031 (ite x765 (x5003 x5367) (x1588 x5367)) (ite x2998 (x3086 x5367) (x6138 x5367)))))
(define-fun x5436 ((x5367 x2192)) Int (ite (= x6014 x5367) x2782 (x5988 x5367)))
(define-fun x5001 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x2981 x5367)))
(define-fun x5028 ((x5367 x2192)) Int (ite x1106 (x1920 x5367) (ite x1486 (x5775 x5367) (ite x2494 (x4916 x5367) (ite x1531 (x4916 x5367) (ite x1234 (x4916 x5367) (ite x6008 (x4916 x5367) (ite x72 (x5775 x5367) (ite x916 (x1920 x5367) (x4916 x5367))))))))))
(define-fun x5076 ((x5367 x2192)) Int (ite x936 (x4916 x5367) (ite x200 (x4916 x5367) (ite x2385 (x4916 x5367) (ite x4137 (x4916 x5367) (ite x4319 (x4916 x5367) (ite x2399 (x4916 x5367) (ite x3206 (x4916 x5367) (ite x2236 (ite x718 (x5028 x5367) (x1920 x5367)) (x4916 x5367))))))))))
(define-fun x5375 ((x5367 x2192)) Int (ite x2903 (x5076 x5367) (ite x5646 (x4916 x5367) (ite x2570 (x4916 x5367) (ite x4146 (x4916 x5367) (x5076 x5367))))))
(define-fun x6388 ((x5367 x2192)) Int (ite x3634 (x1737 x5367) (ite x6229 (x2945 x5367) (ite x4826 (x4916 x5367) (ite x2180 (x4916 x5367) (ite x3398 (x4916 x5367) (ite x883 (x4916 x5367) (ite x1064 (x2945 x5367) (ite x2487 (x1737 x5367) (x4916 x5367))))))))))
(define-fun x3879 ((x5367 x2192)) Int (ite x2936 (x4916 x5367) (ite x1869 (x4916 x5367) (ite x6384 (x4916 x5367) (ite x2723 (x4916 x5367) (ite x3476 (x4916 x5367) (ite x3658 (x4916 x5367) (ite x1238 (x4916 x5367) (ite x6385 (ite x3097 (x6388 x5367) (x1737 x5367)) (x4916 x5367))))))))))
(define-fun x5172 ((x5367 x2192)) Int (ite x3471 (x1300 x5367) (ite x4530 (x4916 x5367) (ite x2989 (x4916 x5367) (ite x5915 (x4916 x5367) (ite x6140 (x1300 x5367) (x4916 x5367)))))))
(define-fun x3218 ((x5367 x2192)) Int (ite x3975 (x4916 x5367) (ite x395 (x4916 x5367) (ite x4742 (x4916 x5367) (ite x2790 (x4916 x5367) (ite x4183 (x4916 x5367) (ite x2919 (x4916 x5367) (ite x4650 (x4916 x5367) (ite x2874 (ite x2770 (x5172 x5367) (x635 x5367)) (x4916 x5367))))))))))
(define-fun x3114 ((x5367 x2192)) Int (ite x4949 (x4916 x5367) (ite x4336 (x4916 x5367) (ite x3540 (x3879 x5367) (ite x1190 (x4916 x5367) (ite x2983 (x4916 x5367) (ite x2991 (x4916 x5367) (ite x451 (x3218 x5367) (ite x2314 (x4916 x5367) (ite x5588 (x4916 x5367) (ite x2452 (x4916 x5367) (ite x1810 (x4916 x5367) (ite x3472 (x4916 x5367) (ite x6101 (x4916 x5367) (ite x5745 (x4916 x5367) (ite x2473 (x4916 x5367) (ite x5679 (x4916 x5367) (ite x4976 (x4916 x5367) (ite x4715 (x4916 x5367) (ite x1380 (x4916 x5367) (ite x4879 (x3218 x5367) (ite x5264 (x4916 x5367) (ite x1907 (x4916 x5367) (ite x5718 (x4916 x5367) (ite x4310 (x3879 x5367) (x4916 x5367))))))))))))))))))))))))))
(define-fun x1118 ((x5367 x2192)) Int (ite x116 (x3218 x5367) (x4916 x5367)))
(define-fun x1635 ((x5367 x2192)) Int (ite x2642 (x1118 x5367) (x4916 x5367)))
(define-fun x3717 ((x5367 x2192)) Int (ite x2568 (x1635 x5367) (x3879 x5367)))
(define-fun x2662 ((x5367 x2192)) Int (ite x2021 (x3717 x5367) (x4916 x5367)))
(define-fun x860 ((x5367 x2192)) Int (ite x4379 (x4916 x5367) (ite x1031 (ite x765 (x5375 x5367) (x5076 x5367)) (ite x2998 (x3114 x5367) (x2662 x5367)))))
(define-fun x45 ((x5367 x2192)) Int (ite (= x5367 x1321) x6186 (x860 x5367)))
(define-fun x2462 ((x5367 x2192)) Int (ite x936 (x6191 x5367) (ite x200 (x6191 x5367) (ite x2385 (x6191 x5367) (ite x4137 (x6191 x5367) (ite x4319 (x6191 x5367) (ite x2399 (x6191 x5367) (ite x3206 (x6191 x5367) (ite x2236 (ite x718 (x6191 x5367) (x756 x5367)) (x6191 x5367))))))))))
(define-fun x864 ((x5367 x2192)) Int (ite x2903 (x2462 x5367) (ite x5646 (x6191 x5367) (ite x2570 (x6191 x5367) (ite x4146 (x6191 x5367) (x2462 x5367))))))
(define-fun x1914 ((x5367 x2192)) Int (ite x2936 (x6191 x5367) (ite x1869 (x6191 x5367) (ite x6384 (x6191 x5367) (ite x2723 (x6191 x5367) (ite x3476 (x6191 x5367) (ite x3658 (x6191 x5367) (ite x1238 (x6191 x5367) (ite x6385 (ite x3097 (x6191 x5367) (x3151 x5367)) (x6191 x5367))))))))))
(define-fun x2276 ((x5367 x2192)) Int (ite x5247 (x6191 x5367) (ite x227 (x6191 x5367) (ite x1357 (x6191 x5367) (ite x841 (x6191 x5367) (ite x961 (x6191 x5367) (ite x1398 (x6191 x5367) (ite x67 (x6191 x5367) (ite x4570 (ite x1950 (x6191 x5367) (x2159 x5367)) (x6191 x5367))))))))))
(define-fun x1169 ((x5367 x2192)) Int (ite x4949 (x6191 x5367) (ite x4336 (x6191 x5367) (ite x3540 (x1914 x5367) (ite x1190 (x6191 x5367) (ite x2983 (x6191 x5367) (ite x2991 (x6191 x5367) (ite x451 (x6191 x5367) (ite x2314 (x6191 x5367) (ite x5588 (x2276 x5367) (ite x2452 (x6191 x5367) (ite x1810 (x6191 x5367) (ite x3472 (x6191 x5367) (ite x6101 (x6191 x5367) (ite x5745 (x6191 x5367) (ite x2473 (x6191 x5367) (ite x5679 (x6191 x5367) (ite x4976 (x6191 x5367) (ite x4715 (x2276 x5367) (ite x1380 (x6191 x5367) (ite x4879 (x6191 x5367) (ite x5264 (x6191 x5367) (ite x1907 (x6191 x5367) (ite x5718 (x6191 x5367) (ite x4310 (x1914 x5367) (x6191 x5367))))))))))))))))))))))))))
(define-fun x1415 ((x5367 x2192)) Int (ite x116 (x6191 x5367) (ite x5256 (x6191 x5367) (x2276 x5367))))
(define-fun x4369 ((x5367 x2192)) Int (ite x2642 (x1415 x5367) (x6191 x5367)))
(define-fun x4280 ((x5367 x2192)) Int (ite x2568 (x4369 x5367) (x1914 x5367)))
(define-fun x5291 ((x5367 x2192)) Int (ite x2021 (x4280 x5367) (x6191 x5367)))
(define-fun x1423 ((x5367 x2192)) Int (ite x4379 (x6191 x5367) (ite x1031 (ite x765 (x864 x5367) (x2462 x5367)) (ite x2998 (x1169 x5367) (x5291 x5367)))))
(define-fun x2845 ((x5367 x2192)) Int (ite (= x5367 x1305) x1882 (x1423 x5367)))
(define-fun x1766 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x2981 x5367)))
(define-fun x3096 ((x5367 x2192)) Int (ite x5078 (x5649 x5367) (ite x1000 (x2420 x5367) (ite x293 (x1584 x5367) (ite x2635 (x1584 x5367) (ite x5168 (x1584 x5367) (ite x3337 (x1584 x5367) (ite x2075 (x2420 x5367) (ite x5085 (x5649 x5367) (x1584 x5367))))))))))
(define-fun x3315 ((x5367 x2192)) Int (ite x936 (x1584 x5367) (ite x200 (x1584 x5367) (ite x2385 (x1584 x5367) (ite x4137 (x1584 x5367) (ite x4319 (x1584 x5367) (ite x2399 (x1584 x5367) (ite x3206 (x1584 x5367) (ite x2236 (x1584 x5367) (ite x817 (ite x528 (x3096 x5367) (x5649 x5367)) (x1584 x5367)))))))))))
(define-fun x1676 ((x5367 x2192)) Int (ite x2903 (x3315 x5367) (ite x5646 (x1584 x5367) (ite x2570 (x1584 x5367) (ite x4146 (x1584 x5367) (x3315 x5367))))))
(define-fun x604 ((x5367 x2192)) Int (ite x1995 (x846 x5367) (ite x4120 (x310 x5367) (ite x986 (x1584 x5367) (ite x217 (x1584 x5367) (ite x3756 (x1584 x5367) (ite x793 (x1584 x5367) (ite x3731 (x310 x5367) (ite x5561 (x846 x5367) (x1584 x5367))))))))))
(define-fun x6309 ((x5367 x2192)) Int (ite x2936 (x1584 x5367) (ite x1869 (x1584 x5367) (ite x6384 (x1584 x5367) (ite x2723 (x1584 x5367) (ite x3476 (x1584 x5367) (ite x3658 (x1584 x5367) (ite x1238 (x1584 x5367) (ite x6385 (x1584 x5367) (ite x449 (ite x807 (x604 x5367) (x846 x5367)) (x1584 x5367)))))))))))
(define-fun x117 ((x5367 x2192)) Int (ite x5813 (x4109 x5367) (ite x5088 (x1584 x5367) (ite x4776 (x1584 x5367) (ite x5790 (x1584 x5367) (ite x4071 (x4109 x5367) (x1584 x5367)))))))
(define-fun x1545 ((x5367 x2192)) Int (ite x3975 (x1584 x5367) (ite x395 (x1584 x5367) (ite x4742 (x1584 x5367) (ite x2790 (x1584 x5367) (ite x4183 (x1584 x5367) (ite x2919 (x1584 x5367) (ite x4650 (x1584 x5367) (ite x2874 (x1584 x5367) (ite x3619 (ite x5433 (x117 x5367) (x5442 x5367)) (x1584 x5367)))))))))))
(define-fun x4304 ((x5367 x2192)) Int (ite x4949 (x1584 x5367) (ite x4336 (x1584 x5367) (ite x3540 (x6309 x5367) (ite x1190 (x1584 x5367) (ite x2983 (x1584 x5367) (ite x2991 (x1584 x5367) (ite x451 (x1545 x5367) (ite x2314 (x1584 x5367) (ite x5588 (x1584 x5367) (ite x2452 (x1584 x5367) (ite x1810 (x1584 x5367) (ite x3472 (x1584 x5367) (ite x6101 (x1584 x5367) (ite x5745 (x1584 x5367) (ite x2473 (x1584 x5367) (ite x5679 (x1584 x5367) (ite x4976 (x1584 x5367) (ite x4715 (x1584 x5367) (ite x1380 (x1584 x5367) (ite x4879 (x1545 x5367) (ite x5264 (x1584 x5367) (ite x1907 (x1584 x5367) (ite x5718 (x1584 x5367) (ite x4310 (x6309 x5367) (x1584 x5367))))))))))))))))))))))))))
(define-fun x2993 ((x5367 x2192)) Int (ite x116 (x1545 x5367) (x1584 x5367)))
(define-fun x6399 ((x5367 x2192)) Int (ite x2642 (x2993 x5367) (x1584 x5367)))
(define-fun x2188 ((x5367 x2192)) Int (ite x2568 (x6399 x5367) (x6309 x5367)))
(define-fun x4140 ((x5367 x2192)) Int (ite x2021 (x2188 x5367) (x1584 x5367)))
(define-fun x1484 ((x5367 x2192)) Int (ite x4379 (x1584 x5367) (ite x1031 (ite x765 (x1676 x5367) (x3315 x5367)) (ite x2998 (x4304 x5367) (x4140 x5367)))))
(define-fun x5780 ((x5367 x2192)) Int (ite (= x2498 x5367) x3645 (x1484 x5367)))
(define-fun x3430 ((x5367 x2192)) Int (ite x936 (x2757 x5367) (ite x200 (x2757 x5367) (ite x2385 (x2757 x5367) (ite x4137 (x2757 x5367) (ite x4319 (x2757 x5367) (ite x2399 (x2757 x5367) (ite x3206 (x2757 x5367) (ite x2236 (x2757 x5367) (ite x817 (ite x528 (x2757 x5367) (x2835 x5367)) (x2757 x5367)))))))))))
(define-fun x3325 ((x5367 x2192)) Int (ite x2903 (x3430 x5367) (ite x5646 (x2757 x5367) (ite x2570 (x2757 x5367) (ite x4146 (x2757 x5367) (x3430 x5367))))))
(define-fun x638 ((x5367 x2192)) Int (ite x2936 (x2757 x5367) (ite x1869 (x2757 x5367) (ite x6384 (x2757 x5367) (ite x2723 (x2757 x5367) (ite x3476 (x2757 x5367) (ite x3658 (x2757 x5367) (ite x1238 (x2757 x5367) (ite x6385 (x2757 x5367) (ite x449 (ite x807 (x2757 x5367) (x547 x5367)) (x2757 x5367)))))))))))
(define-fun x3535 ((x5367 x2192)) Int (ite x5247 (x2757 x5367) (ite x227 (x2757 x5367) (ite x1357 (x2757 x5367) (ite x841 (x2757 x5367) (ite x961 (x2757 x5367) (ite x1398 (x2757 x5367) (ite x67 (x2757 x5367) (ite x4570 (x2757 x5367) (ite x5799 (ite x1490 (x2757 x5367) (x3351 x5367)) (x2757 x5367)))))))))))
(define-fun x3700 ((x5367 x2192)) Int (ite x4949 (x2757 x5367) (ite x4336 (x2757 x5367) (ite x3540 (x638 x5367) (ite x1190 (x2757 x5367) (ite x2983 (x2757 x5367) (ite x2991 (x2757 x5367) (ite x451 (x2757 x5367) (ite x2314 (x2757 x5367) (ite x5588 (x3535 x5367) (ite x2452 (x2757 x5367) (ite x1810 (x2757 x5367) (ite x3472 (x2757 x5367) (ite x6101 (x2757 x5367) (ite x5745 (x2757 x5367) (ite x2473 (x2757 x5367) (ite x5679 (x2757 x5367) (ite x4976 (x2757 x5367) (ite x4715 (x3535 x5367) (ite x1380 (x2757 x5367) (ite x4879 (x2757 x5367) (ite x5264 (x2757 x5367) (ite x1907 (x2757 x5367) (ite x5718 (x2757 x5367) (ite x4310 (x638 x5367) (x2757 x5367))))))))))))))))))))))))))
(define-fun x4489 ((x5367 x2192)) Int (ite x116 (x2757 x5367) (ite x5256 (x2757 x5367) (x3535 x5367))))
(define-fun x4660 ((x5367 x2192)) Int (ite x2642 (x4489 x5367) (x2757 x5367)))
(define-fun x2785 ((x5367 x2192)) Int (ite x2568 (x4660 x5367) (x638 x5367)))
(define-fun x5235 ((x5367 x2192)) Int (ite x2021 (x2785 x5367) (x2757 x5367)))
(define-fun x1277 ((x5367 x2192)) Int (ite x4379 (x2757 x5367) (ite x1031 (ite x765 (x3325 x5367) (x3430 x5367)) (ite x2998 (x3700 x5367) (x5235 x5367)))))
(define-fun x4940 ((x5367 x2192)) Int (ite (= x5355 x5367) x4943 (x1277 x5367)))
(define-fun x6424 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x2981 x5367)))
(define-fun x3274 ((x5367 x2192)) Int (ite x1542 (x5117 x5367) (ite x4775 (x6154 x5367) (ite x5239 (x6336 x5367) (ite x1027 (x6336 x5367) (ite x636 (x6336 x5367) (ite x5938 (x6336 x5367) (ite x1279 (x6154 x5367) (ite x1339 (x5117 x5367) (x6336 x5367))))))))))
(define-fun x3082 ((x5367 x2192)) Int (ite x936 (x6336 x5367) (ite x200 (x6336 x5367) (ite x2385 (x6336 x5367) (ite x4137 (x6336 x5367) (ite x4319 (x6336 x5367) (ite x2399 (x6336 x5367) (ite x3206 (x6336 x5367) (ite x2236 (x6336 x5367) (ite x817 (x6336 x5367) (ite x4456 (ite x4917 (x3274 x5367) (x5117 x5367)) (x6336 x5367))))))))))))
(define-fun x5662 ((x5367 x2192)) Int (ite x2903 (x3082 x5367) (ite x5646 (x6336 x5367) (ite x2570 (x6336 x5367) (ite x4146 (x6336 x5367) (x3082 x5367))))))
(define-fun x458 ((x5367 x2192)) Int (ite x3453 (x3694 x5367) (ite x810 (x138 x5367) (ite x5488 (x6336 x5367) (ite x4286 (x6336 x5367) (ite x919 (x6336 x5367) (ite x3779 (x6336 x5367) (ite x4256 (x138 x5367) (ite x4703 (x3694 x5367) (x6336 x5367))))))))))
(define-fun x597 ((x5367 x2192)) Int (ite x2936 (x6336 x5367) (ite x1869 (x6336 x5367) (ite x6384 (x6336 x5367) (ite x2723 (x6336 x5367) (ite x3476 (x6336 x5367) (ite x3658 (x6336 x5367) (ite x1238 (x6336 x5367) (ite x6385 (x6336 x5367) (ite x449 (x6336 x5367) (ite x2921 (ite x1977 (x458 x5367) (x3694 x5367)) (x6336 x5367))))))))))))
(define-fun x3885 ((x5367 x2192)) Int (ite x4791 (x1678 x5367) (ite x4906 (x6336 x5367) (ite x3988 (x6336 x5367) (ite x1465 (x6336 x5367) (ite x4569 (x1678 x5367) (x6336 x5367)))))))
(define-fun x3426 ((x5367 x2192)) Int (ite x3975 (x6336 x5367) (ite x395 (x6336 x5367) (ite x4742 (x6336 x5367) (ite x2790 (x6336 x5367) (ite x4183 (x6336 x5367) (ite x2919 (x6336 x5367) (ite x4650 (x6336 x5367) (ite x2874 (x6336 x5367) (ite x3619 (x6336 x5367) (ite x4145 (ite x4854 (x3885 x5367) (x5747 x5367)) (x6336 x5367))))))))))))
(define-fun x1504 ((x5367 x2192)) Int (ite x4949 (x6336 x5367) (ite x4336 (x6336 x5367) (ite x3540 (x597 x5367) (ite x1190 (x6336 x5367) (ite x2983 (x6336 x5367) (ite x2991 (x6336 x5367) (ite x451 (x3426 x5367) (ite x2314 (x6336 x5367) (ite x5588 (x6336 x5367) (ite x2452 (x6336 x5367) (ite x1810 (x6336 x5367) (ite x3472 (x6336 x5367) (ite x6101 (x6336 x5367) (ite x5745 (x6336 x5367) (ite x2473 (x6336 x5367) (ite x5679 (x6336 x5367) (ite x4976 (x6336 x5367) (ite x4715 (x6336 x5367) (ite x1380 (x6336 x5367) (ite x4879 (x3426 x5367) (ite x5264 (x6336 x5367) (ite x1907 (x6336 x5367) (ite x5718 (x6336 x5367) (ite x4310 (x597 x5367) (x6336 x5367))))))))))))))))))))))))))
(define-fun x1072 ((x5367 x2192)) Int (ite x116 (x3426 x5367) (x6336 x5367)))
(define-fun x4205 ((x5367 x2192)) Int (ite x2642 (x1072 x5367) (x6336 x5367)))
(define-fun x2846 ((x5367 x2192)) Int (ite x2568 (x4205 x5367) (x597 x5367)))
(define-fun x3684 ((x5367 x2192)) Int (ite x2021 (x2846 x5367) (x6336 x5367)))
(define-fun x3877 ((x5367 x2192)) Int (ite x4379 (x6336 x5367) (ite x1031 (ite x765 (x5662 x5367) (x3082 x5367)) (ite x2998 (x1504 x5367) (x3684 x5367)))))
(define-fun x94 ((x5367 x2192)) Int (ite (= x5367 x1416) x4176 (x3877 x5367)))
(define-fun x890 ((x5367 x2192)) Int (ite x936 (x2828 x5367) (ite x200 (x2828 x5367) (ite x2385 (x2828 x5367) (ite x4137 (x2828 x5367) (ite x4319 (x2828 x5367) (ite x2399 (x2828 x5367) (ite x3206 (x2828 x5367) (ite x2236 (x2828 x5367) (ite x817 (x2828 x5367) (ite x4456 (ite x4917 (x2828 x5367) (x4806 x5367)) (x2828 x5367))))))))))))
(define-fun x1981 ((x5367 x2192)) Int (ite x2903 (x890 x5367) (ite x5646 (x2828 x5367) (ite x2570 (x2828 x5367) (ite x4146 (x2828 x5367) (x890 x5367))))))
(define-fun x4236 ((x5367 x2192)) Int (ite x2936 (x2828 x5367) (ite x1869 (x2828 x5367) (ite x6384 (x2828 x5367) (ite x2723 (x2828 x5367) (ite x3476 (x2828 x5367) (ite x3658 (x2828 x5367) (ite x1238 (x2828 x5367) (ite x6385 (x2828 x5367) (ite x449 (x2828 x5367) (ite x2921 (ite x1977 (x2828 x5367) (x1065 x5367)) (x2828 x5367))))))))))))
(define-fun x4460 ((x5367 x2192)) Int (ite x5247 (x2828 x5367) (ite x227 (x2828 x5367) (ite x1357 (x2828 x5367) (ite x841 (x2828 x5367) (ite x961 (x2828 x5367) (ite x1398 (x2828 x5367) (ite x67 (x2828 x5367) (ite x4570 (x2828 x5367) (ite x5799 (x2828 x5367) (ite x4440 (ite x5229 (x2828 x5367) (x3556 x5367)) (x2828 x5367))))))))))))
(define-fun x952 ((x5367 x2192)) Int (ite x4949 (x2828 x5367) (ite x4336 (x2828 x5367) (ite x3540 (x4236 x5367) (ite x1190 (x2828 x5367) (ite x2983 (x2828 x5367) (ite x2991 (x2828 x5367) (ite x451 (x2828 x5367) (ite x2314 (x2828 x5367) (ite x5588 (x4460 x5367) (ite x2452 (x2828 x5367) (ite x1810 (x2828 x5367) (ite x3472 (x2828 x5367) (ite x6101 (x2828 x5367) (ite x5745 (x2828 x5367) (ite x2473 (x2828 x5367) (ite x5679 (x2828 x5367) (ite x4976 (x2828 x5367) (ite x4715 (x4460 x5367) (ite x1380 (x2828 x5367) (ite x4879 (x2828 x5367) (ite x5264 (x2828 x5367) (ite x1907 (x2828 x5367) (ite x5718 (x2828 x5367) (ite x4310 (x4236 x5367) (x2828 x5367))))))))))))))))))))))))))
(define-fun x3976 ((x5367 x2192)) Int (ite x116 (x2828 x5367) (ite x5256 (x2828 x5367) (x4460 x5367))))
(define-fun x1861 ((x5367 x2192)) Int (ite x2642 (x3976 x5367) (x2828 x5367)))
(define-fun x1319 ((x5367 x2192)) Int (ite x2568 (x1861 x5367) (x4236 x5367)))
(define-fun x2421 ((x5367 x2192)) Int (ite x2021 (x1319 x5367) (x2828 x5367)))
(define-fun x1992 ((x5367 x2192)) Int (ite x4379 (x2828 x5367) (ite x1031 (ite x765 (x1981 x5367) (x890 x5367)) (ite x2998 (x952 x5367) (x2421 x5367)))))
(define-fun x3874 ((x5367 x2192)) Int (ite (= x5367 x4946) x576 (x1992 x5367)))
(define-fun x4856 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x2981 x5367)))
(define-fun x4082 ((x5367 x2192)) Int (ite x3902 (x384 x5367) (x3837 x5367)))
(define-fun x4485 ((x5367 x2192)) Int (ite x5140 (x384 x5367) (ite x2475 (x384 x5367) (ite x2304 (x384 x5367) (ite x2160 (x4082 x5367) (ite x1642 (x4082 x5367) (x384 x5367)))))))
(define-fun x4894 ((x5367 x2192)) Int (ite x936 (x384 x5367) (ite x200 (x384 x5367) (ite x2385 (x384 x5367) (ite x4137 (x384 x5367) (ite x4319 (x384 x5367) (ite x2399 (x384 x5367) (ite x3206 (x384 x5367) (ite x2236 (x384 x5367) (ite x817 (x384 x5367) (ite x4456 (x384 x5367) (ite x3428 (x4485 x5367) (x4082 x5367)))))))))))))
(define-fun x3969 ((x5367 x2192)) Int (ite x2903 (x4894 x5367) (ite x5646 (x384 x5367) (ite x2570 (x384 x5367) (ite x4146 (x384 x5367) (x4894 x5367))))))
(define-fun x939 ((x5367 x2192)) Int (ite x891 (x384 x5367) (x1661 x5367)))
(define-fun x2616 ((x5367 x2192)) Int (ite x2587 (x384 x5367) (ite x5978 (x384 x5367) (ite x3 (x384 x5367) (ite x207 (x939 x5367) (ite x1550 (x939 x5367) (x384 x5367)))))))
(define-fun x6205 ((x5367 x2192)) Int (ite x2936 (x384 x5367) (ite x1869 (x384 x5367) (ite x6384 (x384 x5367) (ite x2723 (x384 x5367) (ite x3476 (x384 x5367) (ite x3658 (x384 x5367) (ite x1238 (x384 x5367) (ite x6385 (x384 x5367) (ite x449 (x384 x5367) (ite x2921 (x384 x5367) (ite x3776 (x2616 x5367) (x939 x5367)))))))))))))
(define-fun x2414 ((x5367 x2192)) Int (ite x5247 (x384 x5367) (ite x227 (x384 x5367) (ite x1357 (x384 x5367) (ite x841 (x384 x5367) (ite x961 (x384 x5367) (ite x1398 (x384 x5367) (ite x67 (x384 x5367) (ite x4570 (x384 x5367) (ite x5799 (x384 x5367) (ite x4440 (x384 x5367) (ite x4357 (x384 x5367) (x3056 x5367)))))))))))))
(define-fun x2716 ((x5367 x2192)) Int (ite x4949 (x384 x5367) (ite x4336 (x384 x5367) (ite x3540 (x6205 x5367) (ite x1190 (x384 x5367) (ite x2983 (x384 x5367) (ite x2991 (x384 x5367) (ite x451 (x384 x5367) (ite x2314 (x384 x5367) (ite x5588 (x2414 x5367) (ite x2452 (x384 x5367) (ite x1810 (x384 x5367) (ite x3472 (x384 x5367) (ite x6101 (x384 x5367) (ite x5745 (x384 x5367) (ite x2473 (x384 x5367) (ite x5679 (x384 x5367) (ite x4976 (x384 x5367) (ite x4715 (x2414 x5367) (ite x1380 (x384 x5367) (ite x4879 (x384 x5367) (ite x5264 (x384 x5367) (ite x1907 (x384 x5367) (ite x5718 (x384 x5367) (ite x4310 (x6205 x5367) (x384 x5367))))))))))))))))))))))))))
(define-fun x1933 ((x5367 x2192)) Int (ite x116 (x384 x5367) (ite x5256 (x384 x5367) (x2414 x5367))))
(define-fun x4175 ((x5367 x2192)) Int (ite x2642 (x1933 x5367) (x384 x5367)))
(define-fun x3058 ((x5367 x2192)) Int (ite x2568 (x4175 x5367) (x6205 x5367)))
(define-fun x174 ((x5367 x2192)) Int (ite x2021 (x3058 x5367) (x384 x5367)))
(define-fun x4576 ((x5367 x2192)) Int (ite x4379 (x384 x5367) (ite x1031 (ite x765 (x3969 x5367) (x4894 x5367)) (ite x2998 (x2716 x5367) (x174 x5367)))))
(define-fun x223 ((x5367 x2192)) Int (ite (= x5367 x2054) x3418 (x4576 x5367)))
(define-fun x5208 ((x5367 Int)) Int (ite (= 128 x5367) 100135927934651036221761091863598459016256155049858187411712977198722809069568 (x5997 x5367)))
(define-fun x1601 ((x5367 Int)) Int (ite (= 132 x5367) x5489 (x5208 x5367)))
(define-fun x5772 ((x5367 Int)) Int (ite (= 164 x5367) x5619 (x1601 x5367)))
(define-fun x849 ((x5367 x2192)) Int (ite (= x3722 x5367) x2177 (x3773 x5367)))
(define-fun x2141 ((x5367 x2192)) Int (ite x771 (x849 x5367) (x3773 x5367)))
(define-fun x1464 ((x5367 x2192)) Int (ite x4961 (x3773 x5367) (ite x704 (x3773 x5367) (ite x122 (x3773 x5367) (ite x1002 (x3773 x5367) (ite x6269 (x3773 x5367) (ite x1396 (x3773 x5367) (ite x1104 (x2141 x5367) (ite x591 (x2141 x5367) (ite x1797 (x2141 x5367) (ite x1874 (x3773 x5367) (ite x4611 (x2141 x5367) (ite x5098 (x2141 x5367) (ite x4560 (x2141 x5367) (ite x1913 (x3773 x5367) (ite x1198 (x3773 x5367) (ite x2204 (x2141 x5367) (ite x5106 (x2141 x5367) (x3773 x5367)))))))))))))))))))
(define-fun x4253 ((x5367 x2192)) Int (ite x390 (ite x5529 (x1464 x5367) (x2141 x5367)) (x3773 x5367)))
(define-fun x4424 ((x5367 Int)) Int (ite (= x5367 0) x4313 (x4480 x5367)))
(define-fun x3614 ((x5367 Int)) Int (ite (= x5367 128) x4313 (x5772 x5367)))
(define-fun x2348 ((x5367 x2192)) Int (ite x390 (x4112 x5367) (ite x3600 (ite x2582 (x4112 x5367) (x3454 x5367)) (x4112 x5367))))
(define-fun x5962 ((x5367 Int)) Int (ite (= 0 x5367) x5326 (x4480 x5367)))
(define-fun x2478 ((x5367 Int)) Int (ite (= x5367 128) x5326 (x5772 x5367)))
(define-fun x6174 ((x5367 x2192)) Int (ite x390 (x4021 x5367) (ite x3600 (x4021 x5367) (ite x4358 (ite x6407 (x4021 x5367) (x4464 x5367)) (x4021 x5367)))))
(define-fun x6339 ((x5367 Int)) Int (ite (= 0 x5367) x2375 (x4480 x5367)))
(define-fun x3215 ((x5367 Int)) Int (ite (= x5367 128) x2375 (x5772 x5367)))
(define-fun x595 ((x5367 x2192)) Int (ite x6361 (x5806 x5367) (x4958 x5367)))
(define-fun x4735 ((x5367 x2192)) Int (ite x735 (x5806 x5367) (ite x5200 (x5806 x5367) (ite x596 (x5806 x5367) (ite x2736 (x595 x5367) (ite x4750 (x595 x5367) (x5806 x5367)))))))
(define-fun x301 ((x5367 x2192)) Int (ite x390 (x5806 x5367) (ite x3600 (x5806 x5367) (ite x4358 (x5806 x5367) (ite x5959 (ite x3112 (x4735 x5367) (x595 x5367)) (x5806 x5367))))))
(define-fun x2892 ((x5367 Int)) Int (ite (= 0 x5367) x2645 (x4480 x5367)))
(define-fun x5766 ((x5367 Int)) Int (ite (= x5367 128) x2645 (x5772 x5367)))
(define-fun x6045 ((x5367 x2192)) Int (ite x390 (x3473 x5367) (ite x3600 (x3473 x5367) (ite x4358 (x3473 x5367) (ite x5959 (x3473 x5367) (ite x1085 (ite x3491 (x3473 x5367) (x5029 x5367)) (x3473 x5367)))))))
(define-fun x5412 ((x5367 Int)) Int (ite (= x5367 0) x195 (x4480 x5367)))
(define-fun x2800 ((x5367 Int)) Int (ite (= x5367 128) x195 (x5772 x5367)))
(define-fun x5137 ((x5367 x2192)) Int (ite x2467 (x5111 x5367) (ite x1704 (x5111 x5367) (ite x1600 (x5111 x5367) (ite x6280 (x5111 x5367) (ite x471 (x5111 x5367) (ite x1483 (x5111 x5367) (ite x3440 (x5111 x5367) (ite x6066 (x2759 x5367) (x5111 x5367))))))))))
(define-fun x1440 ((x5367 x2192)) Int (ite x390 (x5111 x5367) (ite x3600 (x5111 x5367) (ite x4358 (x5111 x5367) (ite x5959 (x5111 x5367) (ite x1085 (x5111 x5367) (ite x495 (ite x2164 (x5137 x5367) (x2759 x5367)) (x5111 x5367))))))))
(define-fun x48 ((x5367 Int)) Int (ite (= x5367 0) x4108 (x4480 x5367)))
(define-fun x3758 ((x5367 Int)) Int (ite (= 128 x5367) x4108 (x5772 x5367)))
(define-fun x4044 ((x5367 x2192)) Int (ite x390 (x5988 x5367) (ite x3600 (x5988 x5367) (ite x4358 (x5988 x5367) (ite x5959 (x5988 x5367) (ite x1085 (x5988 x5367) (ite x495 (x5988 x5367) (ite x1407 (ite x4297 (x5988 x5367) (x5436 x5367)) (x5988 x5367)))))))))
(define-fun x1186 ((x5367 Int)) Int (ite (= 0 x5367) x2796 (x4480 x5367)))
(define-fun x4409 ((x5367 Int)) Int (ite (= x5367 128) x2796 (x5772 x5367)))
(define-fun x1412 ((x5367 x2192)) Int (ite x390 (x1423 x5367) (ite x3600 (x1423 x5367) (ite x4358 (x1423 x5367) (ite x5959 (x1423 x5367) (ite x1085 (x1423 x5367) (ite x495 (x1423 x5367) (ite x1407 (x1423 x5367) (ite x220 (ite x4156 (x1423 x5367) (x2845 x5367)) (x1423 x5367))))))))))
(define-fun x2258 ((x5367 Int)) Int (ite (= x5367 0) x5193 (x4480 x5367)))
(define-fun x3198 ((x5367 Int)) Int (ite (= x5367 128) x5193 (x5772 x5367)))
(define-fun x6103 ((x5367 x2192)) Int (ite x390 (x1277 x5367) (ite x3600 (x1277 x5367) (ite x4358 (x1277 x5367) (ite x5959 (x1277 x5367) (ite x1085 (x1277 x5367) (ite x495 (x1277 x5367) (ite x1407 (x1277 x5367) (ite x220 (x1277 x5367) (ite x2727 (ite x271 (x1277 x5367) (x4940 x5367)) (x1277 x5367)))))))))))
(define-fun x1097 ((x5367 Int)) Int (ite (= 0 x5367) x3388 (x4480 x5367)))
(define-fun x2550 ((x5367 Int)) Int (ite (= 128 x5367) x3388 (x5772 x5367)))
(define-fun x3438 ((x5367 x2192)) Int (ite x390 (x1992 x5367) (ite x3600 (x1992 x5367) (ite x4358 (x1992 x5367) (ite x5959 (x1992 x5367) (ite x1085 (x1992 x5367) (ite x495 (x1992 x5367) (ite x1407 (x1992 x5367) (ite x220 (x1992 x5367) (ite x2727 (x1992 x5367) (ite x3004 (ite x5052 (x1992 x5367) (x3874 x5367)) (x1992 x5367))))))))))))
(define-fun x5610 ((x5367 Int)) Int (ite (= x5367 0) x5103 (x4480 x5367)))
(define-fun x2017 ((x5367 Int)) Int (ite (= 128 x5367) x5103 (x5772 x5367)))
(define-fun x804 ((x5367 x2192)) Int (ite x1053 (x4576 x5367) (x223 x5367)))
(define-fun x3439 ((x5367 x2192)) Int (ite x3093 (x4576 x5367) (ite x4883 (x4576 x5367) (ite x5940 (x4576 x5367) (ite x5920 (x804 x5367) (ite x106 (x804 x5367) (x4576 x5367)))))))
(define-fun x3442 ((x5367 x2192)) Int (ite x390 (x4576 x5367) (ite x3600 (x4576 x5367) (ite x4358 (x4576 x5367) (ite x5959 (x4576 x5367) (ite x1085 (x4576 x5367) (ite x495 (x4576 x5367) (ite x1407 (x4576 x5367) (ite x220 (x4576 x5367) (ite x2727 (x4576 x5367) (ite x3004 (x4576 x5367) (ite x4097 (x3439 x5367) (x804 x5367)))))))))))))
(define-fun x1358 ((x5367 Int)) Int (ite (= x5367 0) x6274 (x4480 x5367)))
(define-fun x592 ((x5367 Int)) Int (ite (= 128 x5367) x6274 (x5772 x5367)))
(define-fun x4022 ((x5367 Int)) Int (ite x2312 (ite x5370 (x6137 x5367) (x4662 x5367)) (ite x1223 (ite x3536 (x6137 x5367) (x3770 x5367)) (ite x1036 (ite x6077 (x6137 x5367) (x1043 x5367)) (ite x719 (ite x181 (x6137 x5367) (x3126 x5367)) (ite x6226 (ite x529 (x6137 x5367) (x371 x5367)) (ite x4845 (ite x6133 (x6137 x5367) (x1705 x5367)) (ite x5552 (ite x2191 (x6137 x5367) (x5290 x5367)) (ite x3386 (ite x5836 (x6137 x5367) (x2419 x5367)) (ite x5499 (ite x6430 (x6137 x5367) (x6208 x5367)) (ite x2110 (ite x1777 (x6137 x5367) (x6010 x5367)) (ite x4085 (x6137 x5367) (x2010 x5367)))))))))))))
(define-fun x3224 ((x5367 Int)) Int (ite (= 128 x5367) 100135927934651036221761091863598459016256155049858187411712977198722809069568 (x3706 x5367)))
(define-fun x2274 ((x5367 Int)) Int (ite (= 132 x5367) x5489 (x3224 x5367)))
(define-fun x3378 ((x5367 Int)) Int (ite (= 164 x5367) x2922 (x2274 x5367)))
(define-fun x4103 ((x5367 Int)) Int (ite (= 0 x5367) x2307 (x1932 x5367)))
(define-fun x1973 ((x5367 Int)) Int (ite (= 128 x5367) x2307 (x3378 x5367)))
(define-fun x6260 ((x5367 Int)) Int (ite (= x5367 0) x5044 (x1932 x5367)))
(define-fun x2216 ((x5367 Int)) Int (ite (= 128 x5367) x5044 (x3378 x5367)))
(define-fun x4003 ((x5367 Int)) Int (ite (= 0 x5367) x2543 (x1932 x5367)))
(define-fun x2235 ((x5367 Int)) Int (ite (= 128 x5367) x2543 (x3378 x5367)))
(define-fun x1427 ((x5367 Int)) Int (ite (= 0 x5367) x4414 (x1932 x5367)))
(define-fun x3513 ((x5367 Int)) Int (ite (= x5367 128) x4414 (x3378 x5367)))
(define-fun x3433 ((x5367 Int)) Int (ite (= x5367 0) x6297 (x1932 x5367)))
(define-fun x3381 ((x5367 Int)) Int (ite (= x5367 128) x6297 (x3378 x5367)))
(define-fun x2938 ((x5367 Int)) Int (ite (= 0 x5367) x3870 (x1932 x5367)))
(define-fun x5586 ((x5367 Int)) Int (ite (= 128 x5367) x3870 (x3378 x5367)))
(define-fun x2927 ((x5367 Int)) Int (ite (= x5367 0) x1290 (x1932 x5367)))
(define-fun x1445 ((x5367 Int)) Int (ite (= x5367 128) x1290 (x3378 x5367)))
(define-fun x2858 ((x5367 Int)) Int (ite (= x5367 0) x4185 (x1932 x5367)))
(define-fun x4002 ((x5367 Int)) Int (ite (= 128 x5367) x4185 (x3378 x5367)))
(define-fun x1750 ((x5367 Int)) Int (ite (= 0 x5367) x606 (x1932 x5367)))
(define-fun x78 ((x5367 Int)) Int (ite (= x5367 128) x606 (x3378 x5367)))
(define-fun x4167 ((x5367 Int)) Int (ite (= x5367 0) x175 (x1932 x5367)))
(define-fun x6183 ((x5367 Int)) Int (ite (= x5367 128) x175 (x3378 x5367)))
(define-fun x5125 ((x5367 Int)) Int (ite (= 0 x5367) x5211 (x1932 x5367)))
(define-fun x2590 ((x5367 Int)) Int (ite (= x5367 128) x5211 (x3378 x5367)))
(define-fun x2832 ((x5367 Int)) Int (ite x2323 (ite x189 (x3378 x5367) (x1973 x5367)) (ite x5636 (ite x5185 (x3378 x5367) (x2216 x5367)) (ite x6151 (ite x5000 (x3378 x5367) (x2235 x5367)) (ite x294 (ite x5869 (x3378 x5367) (x3513 x5367)) (ite x1487 (ite x893 (x3378 x5367) (x3381 x5367)) (ite x682 (ite x2926 (x3378 x5367) (x5586 x5367)) (ite x5607 (ite x5280 (x3378 x5367) (x1445 x5367)) (ite x701 (ite x4199 (x3378 x5367) (x4002 x5367)) (ite x5065 (ite x2126 (x3378 x5367) (x78 x5367)) (ite x3217 (ite x2250 (x3378 x5367) (x6183 x5367)) (ite x4884 (x3378 x5367) (x2590 x5367)))))))))))))
(define-fun x4488 ((x5367 Int)) Int (ite (= x5367 0) 1 (x3053 x5367)))
(define-fun x3278 ((x5367 Int)) Int (ite (and (<= 0 x5367) (> (+ 0 32) x5367)) (x264 (+ (- x5367 0) 320)) (x3053 x5367)))
(define-fun x2692 ((x5367 Int)) Int (ite (= x5367 128) x1488 (x2063 x5367)))
(define-fun x2829 ((x5367 Int)) Int (ite (= x5367 128) x3974 (x2692 x5367)))
(define-fun x1381 ((x5367 Int)) Int (ite (= 128 x5367) (ite true 1 0) (x2829 x5367)))
(define-fun x6090 ((x5367 Int)) Int (ite (= 0 x5367) x2657 (x3053 x5367)))
(define-fun x5236 ((x5367 Int)) Int (ite (= 128 x5367) x1834 (x1406 x5367)))
(define-fun x4191 ((x5367 Int)) Int (ite (= x5367 128) (ite true 1 0) (x5236 x5367)))
(define-fun x6034 ((x5367 Int)) Int (ite (= x5367 0) x5373 (x3053 x5367)))
(define-fun x479 ((x5367 Int)) Int (ite (= x5367 0) 1 (x3053 x5367)))
(define-fun x2596 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x3053 x5367)))
(define-fun x752 ((x5367 Int)) Int (ite (= x5367 0) 1 (x3053 x5367)))
(define-fun x524 ((x5367 Int)) Int (ite (= x5367 0) 1 (x3053 x5367)))
(define-fun x5885 ((x5367 Int)) Int (ite x1242 (ite x3152 (x5772 x5367) (x3614 x5367)) (ite x1786 (ite x5116 (x5772 x5367) (x2478 x5367)) (ite x819 (ite x1983 (x5772 x5367) (x3215 x5367)) (ite x1473 (ite x4078 (x5772 x5367) (x5766 x5367)) (ite x6173 (ite x4970 (x5772 x5367) (x2800 x5367)) (ite x185 (ite x1576 (x5772 x5367) (x3758 x5367)) (ite x747 (ite x4620 (x5772 x5367) (x4409 x5367)) (ite x4312 (ite x4532 (x5772 x5367) (x3198 x5367)) (ite x2115 (ite x2024 (x5772 x5367) (x2550 x5367)) (ite x3268 (ite x3782 (x5772 x5367) (x2017 x5367)) (ite x652 (x5772 x5367) (x592 x5367)))))))))))))
(define-fun x3036 ((x5367 x2192)) Int (ite (= x5367 x4018) x5288 (x4346 x5367)))
(define-fun x4341 ((x5367 x2192)) Int (ite (= x320 x5367) x671 (x3036 x5367)))
(define-fun x3271 ((x5367 x2192)) Int (ite x2924 (x4346 x5367) (ite x1092 (x4346 x5367) (ite x5712 (x4346 x5367) (ite x3464 (x4346 x5367) (ite x855 (x4346 x5367) (ite x1307 (x4346 x5367) (ite x5382 (x3036 x5367) (ite x3344 (x4341 x5367) (ite x4704 (x3036 x5367) (ite x1966 (x4346 x5367) (ite x2532 (x4346 x5367) (ite x500 (x4346 x5367) (ite x2915 (x4346 x5367) (ite x4073 (x4346 x5367) (ite x3734 (x4346 x5367) (ite x1087 (x4341 x5367) (x4346 x5367))))))))))))))))))
(define-fun x4847 ((x5367 x2192)) Int (ite (= x5367 x1586) x5318 (x4341 x5367)))
(define-fun x2463 ((x5367 x2192)) Int (ite x5894 (x4341 x5367) (x4847 x5367)))
(define-fun x1105 ((x5367 x2192)) Int (ite x5072 (ite x5833 (x3271 x5367) (x2463 x5367)) (x4346 x5367)))
(define-fun x566 ((x5367 x2192)) Int (ite (= x5367 x1954) x2748 (x1105 x5367)))
(define-fun x818 ((x5367 x2192)) Int (ite (= x978 x5367) x3545 (x566 x5367)))
(define-fun x946 ((x5367 x2192)) Int (ite x3244 (x1105 x5367) (ite x4177 (x1105 x5367) (ite x2167 (x1105 x5367) (ite x673 (x1105 x5367) (ite x197 (x1105 x5367) (ite x3434 (x1105 x5367) (ite x2972 (x566 x5367) (ite x4542 (x818 x5367) (ite x5832 (x566 x5367) (ite x4730 (x1105 x5367) (ite x4594 (x1105 x5367) (ite x6364 (x1105 x5367) (ite x241 (x1105 x5367) (ite x5926 (x1105 x5367) (ite x3571 (x1105 x5367) (ite x2996 (x818 x5367) (x1105 x5367))))))))))))))))))
(define-fun x6128 ((x5367 x2192)) Int (ite (= x312 x5367) x1943 (x818 x5367)))
(define-fun x3102 ((x5367 x2192)) Int (ite x5503 (x818 x5367) (x6128 x5367)))
(define-fun x5431 ((x5367 x2192)) Int (ite x936 (ite x549 (x946 x5367) (x3102 x5367)) (x1105 x5367)))
(define-fun x2580 ((x5367 x2192)) Int (ite x2903 (x5431 x5367) (ite x5646 (x1105 x5367) (ite x2570 (x1105 x5367) (ite x4146 (x1105 x5367) (x5431 x5367))))))
(define-fun x2891 ((x5367 x2192)) Int (ite (= x5367 x1099) x1585 (x1105 x5367)))
(define-fun x5811 ((x5367 x2192)) Int (ite (= x5367 x456) x2641 (x2891 x5367)))
(define-fun x3456 ((x5367 x2192)) Int (ite x5996 (x1105 x5367) (ite x6071 (x1105 x5367) (ite x2551 (x1105 x5367) (ite x3835 (x1105 x5367) (ite x57 (x1105 x5367) (ite x1073 (x1105 x5367) (ite x4802 (x2891 x5367) (ite x4728 (x5811 x5367) (ite x1115 (x2891 x5367) (ite x3046 (x1105 x5367) (ite x1166 (x1105 x5367) (ite x4020 (x1105 x5367) (ite x3373 (x1105 x5367) (ite x1033 (x1105 x5367) (ite x1209 (x1105 x5367) (ite x4956 (x5811 x5367) (x1105 x5367))))))))))))))))))
(define-fun x5917 ((x5367 x2192)) Int (ite (= x4994 x5367) x2556 (x5811 x5367)))
(define-fun x406 ((x5367 x2192)) Int (ite x2334 (x5811 x5367) (x5917 x5367)))
(define-fun x1702 ((x5367 x2192)) Int (ite x2936 (ite x4102 (x3456 x5367) (x406 x5367)) (x1105 x5367)))
(define-fun x2787 ((x5367 x2192)) Int (ite (= x5367 x836) x5845 (x1105 x5367)))
(define-fun x4213 ((x5367 x2192)) Int (ite (= x5367 x368) x6062 (x2787 x5367)))
(define-fun x2379 ((x5367 x2192)) Int (ite x2388 (x1105 x5367) (ite x869 (x1105 x5367) (ite x4831 (x1105 x5367) (ite x5834 (x1105 x5367) (ite x4657 (x1105 x5367) (ite x865 (x2787 x5367) (ite x1329 (x4213 x5367) (ite x1902 (x2787 x5367) (ite x3806 (x1105 x5367) (ite x1244 (x1105 x5367) (ite x182 (x1105 x5367) (ite x3719 (x1105 x5367) (ite x4529 (x1105 x5367) (ite x1649 (x4213 x5367) (x1105 x5367))))))))))))))))
(define-fun x5909 ((x5367 x2192)) Int (ite (= x5367 x2807) x1721 (x4213 x5367)))
(define-fun x1310 ((x5367 x2192)) Int (ite x3689 (x4213 x5367) (x5909 x5367)))
(define-fun x5697 ((x5367 x2192)) Int (ite x3975 (ite x3793 (x2379 x5367) (x1310 x5367)) (x1105 x5367)))
(define-fun x5910 ((x5367 x2192)) Int (ite x4949 (x1105 x5367) (ite x4336 (x1105 x5367) (ite x3540 (x1702 x5367) (ite x1190 (x1105 x5367) (ite x2983 (x1105 x5367) (ite x2991 (x1105 x5367) (ite x451 (x5697 x5367) (ite x2314 (x1105 x5367) (ite x5588 (x1105 x5367) (ite x2452 (x1105 x5367) (ite x1810 (x1105 x5367) (ite x3472 (x1105 x5367) (ite x6101 (x1105 x5367) (ite x5745 (x1105 x5367) (ite x2473 (x1105 x5367) (ite x5679 (x1105 x5367) (ite x4976 (x1105 x5367) (ite x4715 (x1105 x5367) (ite x1380 (x1105 x5367) (ite x4879 (x5697 x5367) (ite x5264 (x1105 x5367) (ite x1907 (x1105 x5367) (ite x5718 (x1105 x5367) (ite x4310 (x1702 x5367) (x1105 x5367))))))))))))))))))))))))))
(define-fun x2621 ((x5367 x2192)) Int (ite x116 (x5697 x5367) (x1105 x5367)))
(define-fun x5641 ((x5367 x2192)) Int (ite x2642 (x2621 x5367) (x1105 x5367)))
(define-fun x2101 ((x5367 x2192)) Int (ite x2568 (x5641 x5367) (x1702 x5367)))
(define-fun x5583 ((x5367 x2192)) Int (ite x2021 (x2101 x5367) (x1105 x5367)))
(define-fun x4851 ((x5367 x2192)) Int (ite x4379 (x1105 x5367) (ite x1031 (ite x765 (x2580 x5367) (x5431 x5367)) (ite x2998 (x5910 x5367) (x5583 x5367)))))
(define-fun x5565 ((x5367 x2192)) Int (ite (= x5367 x1904) x250 (x2082 x5367)))
(define-fun x369 ((x5367 x2192)) Int (ite x1563 (x2082 x5367) (ite x2496 (x2082 x5367) (ite x5422 (x2082 x5367) (ite x2386 (x5565 x5367) (x2082 x5367))))))
(define-fun x3136 ((x5367 x2192)) Int (ite (= x5367 x153) x70 (x5565 x5367)))
(define-fun x4442 ((x5367 x2192)) Int (ite x936 (x2082 x5367) (ite x200 (x2082 x5367) (ite x2385 (x2082 x5367) (ite x4137 (ite x3678 (x369 x5367) (x3136 x5367)) (x2082 x5367))))))
(define-fun x5882 ((x5367 x2192)) Int (ite x2903 (x4442 x5367) (ite x5646 (x2082 x5367) (ite x2570 (x2082 x5367) (ite x4146 (x2082 x5367) (x4442 x5367))))))
(define-fun x1383 ((x5367 x2192)) Int (ite (= x5367 x6423) x5645 (x2082 x5367)))
(define-fun x2027 ((x5367 x2192)) Int (ite x1433 (x2082 x5367) (ite x3270 (x2082 x5367) (ite x4218 (x2082 x5367) (ite x2819 (x1383 x5367) (x2082 x5367))))))
(define-fun x608 ((x5367 x2192)) Int (ite (= x5367 x5979) x648 (x1383 x5367)))
(define-fun x4016 ((x5367 x2192)) Int (ite x2936 (x2082 x5367) (ite x1869 (x2082 x5367) (ite x6384 (x2082 x5367) (ite x2723 (ite x291 (x2027 x5367) (x608 x5367)) (x2082 x5367))))))
(define-fun x3199 ((x5367 x2192)) Int (ite x2448 (x2082 x5367) (ite x4687 (x2082 x5367) (ite x4275 (x2082 x5367) (x5328 x5367)))))
(define-fun x554 ((x5367 x2192)) Int (ite x3975 (x2082 x5367) (ite x395 (x2082 x5367) (ite x4742 (x2082 x5367) (ite x2790 (ite x3193 (x3199 x5367) (x82 x5367)) (x2082 x5367))))))
(define-fun x2174 ((x5367 x2192)) Int (ite x4949 (x2082 x5367) (ite x4336 (x2082 x5367) (ite x3540 (x4016 x5367) (ite x1190 (x2082 x5367) (ite x2983 (x2082 x5367) (ite x2991 (x2082 x5367) (ite x451 (x554 x5367) (ite x2314 (x2082 x5367) (ite x5588 (x2082 x5367) (ite x2452 (x2082 x5367) (ite x1810 (x2082 x5367) (ite x3472 (x2082 x5367) (ite x6101 (x2082 x5367) (ite x5745 (x2082 x5367) (ite x2473 (x2082 x5367) (ite x5679 (x2082 x5367) (ite x4976 (x2082 x5367) (ite x4715 (x2082 x5367) (ite x1380 (x2082 x5367) (ite x4879 (x554 x5367) (ite x5264 (x2082 x5367) (ite x1907 (x2082 x5367) (ite x5718 (x2082 x5367) (ite x4310 (x4016 x5367) (x2082 x5367))))))))))))))))))))))))))
(define-fun x1708 ((x5367 x2192)) Int (ite x116 (x554 x5367) (x2082 x5367)))
(define-fun x2763 ((x5367 x2192)) Int (ite x2642 (x1708 x5367) (x2082 x5367)))
(define-fun x1435 ((x5367 x2192)) Int (ite x2568 (x2763 x5367) (x4016 x5367)))
(define-fun x5189 ((x5367 x2192)) Int (ite x2021 (x1435 x5367) (x2082 x5367)))
(define-fun x3572 ((x5367 x2192)) Int (ite x4379 (x2082 x5367) (ite x1031 (ite x765 (x5882 x5367) (x4442 x5367)) (ite x2998 (x2174 x5367) (x5189 x5367)))))
(define-fun x1231 ((x5367 x2192)) Int (ite (= x643 x5367) x6237 (x5518 x5367)))
(define-fun x3318 ((x5367 x2192)) Int (ite x5140 (x5518 x5367) (ite x2475 (x5518 x5367) (ite x2304 (x5518 x5367) (ite x2160 (x1231 x5367) (x5518 x5367))))))
(define-fun x5973 ((x5367 x2192)) Int (ite (= x5367 x5797) x3481 (x1231 x5367)))
(define-fun x3251 ((x5367 x2192)) Int (ite x936 (x5518 x5367) (ite x200 (x5518 x5367) (ite x2385 (x5518 x5367) (ite x4137 (x5518 x5367) (ite x4319 (x5518 x5367) (ite x2399 (x5518 x5367) (ite x3206 (x5518 x5367) (ite x2236 (x5518 x5367) (ite x817 (x5518 x5367) (ite x4456 (x5518 x5367) (ite x3428 (x3318 x5367) (x5973 x5367)))))))))))))
(define-fun x2728 ((x5367 x2192)) Int (ite x2903 (x3251 x5367) (ite x5646 (x5518 x5367) (ite x2570 (x5518 x5367) (ite x4146 (x5518 x5367) (x3251 x5367))))))
(define-fun x2569 ((x5367 x2192)) Int (ite (= x1309 x5367) x4833 (x5518 x5367)))
(define-fun x867 ((x5367 x2192)) Int (ite x2587 (x5518 x5367) (ite x5978 (x5518 x5367) (ite x3 (x5518 x5367) (ite x207 (x2569 x5367) (x5518 x5367))))))
(define-fun x2330 ((x5367 x2192)) Int (ite (= x5709 x5367) x1960 (x2569 x5367)))
(define-fun x958 ((x5367 x2192)) Int (ite x2936 (x5518 x5367) (ite x1869 (x5518 x5367) (ite x6384 (x5518 x5367) (ite x2723 (x5518 x5367) (ite x3476 (x5518 x5367) (ite x3658 (x5518 x5367) (ite x1238 (x5518 x5367) (ite x6385 (x5518 x5367) (ite x449 (x5518 x5367) (ite x2921 (x5518 x5367) (ite x3776 (x867 x5367) (x2330 x5367)))))))))))))
(define-fun x5901 ((x5367 x2192)) Int (ite x5122 (x5518 x5367) (ite x5329 (x5518 x5367) (ite x3108 (x5518 x5367) (x5213 x5367)))))
(define-fun x5445 ((x5367 x2192)) Int (ite x3975 (x5518 x5367) (ite x395 (x5518 x5367) (ite x4742 (x5518 x5367) (ite x2790 (x5518 x5367) (ite x4183 (x5518 x5367) (ite x2919 (x5518 x5367) (ite x4650 (x5518 x5367) (ite x2874 (x5518 x5367) (ite x3619 (x5518 x5367) (ite x4145 (x5518 x5367) (ite x2459 (x5901 x5367) (x5658 x5367)))))))))))))
(define-fun x3939 ((x5367 x2192)) Int (ite x4949 (x5518 x5367) (ite x4336 (x5518 x5367) (ite x3540 (x958 x5367) (ite x1190 (x5518 x5367) (ite x2983 (x5518 x5367) (ite x2991 (x5518 x5367) (ite x451 (x5445 x5367) (ite x2314 (x5518 x5367) (ite x5588 (x5518 x5367) (ite x2452 (x5518 x5367) (ite x1810 (x5518 x5367) (ite x3472 (x5518 x5367) (ite x6101 (x5518 x5367) (ite x5745 (x5518 x5367) (ite x2473 (x5518 x5367) (ite x5679 (x5518 x5367) (ite x4976 (x5518 x5367) (ite x4715 (x5518 x5367) (ite x1380 (x5518 x5367) (ite x4879 (x5445 x5367) (ite x5264 (x5518 x5367) (ite x1907 (x5518 x5367) (ite x5718 (x5518 x5367) (ite x4310 (x958 x5367) (x5518 x5367))))))))))))))))))))))))))
(define-fun x4039 ((x5367 x2192)) Int (ite x116 (x5445 x5367) (x5518 x5367)))
(define-fun x4126 ((x5367 x2192)) Int (ite x2642 (x4039 x5367) (x5518 x5367)))
(define-fun x4008 ((x5367 x2192)) Int (ite x2568 (x4126 x5367) (x958 x5367)))
(define-fun x2518 ((x5367 x2192)) Int (ite x2021 (x4008 x5367) (x5518 x5367)))
(define-fun x4685 ((x5367 x2192)) Int (ite x4379 (x5518 x5367) (ite x1031 (ite x765 (x2728 x5367) (x3251 x5367)) (ite x2998 (x3939 x5367) (x2518 x5367)))))
(define-fun x1081 ((x5367 Int)) Int (ite (= x5367 0) 1 (x3053 x5367)))
(define-fun x4988 ((x5367 Int)) Int (ite (= x5367 0) 1 (x3053 x5367)))
(define-fun x557 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x4398 x5367)))
(define-fun x5925 ((x5367 Int)) Int (ite (= x5367 0) 1 (x4398 x5367)))
(define-fun x5017 ((x5367 x2192)) Int (ite (= x5367 x2567) x5197 (x4685 x5367)))
(define-fun x5592 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x2981 x5367)))
(define-fun x3492 ((x5367 x2192)) Int (ite (= x5367 x4368) x3282 (x3572 x5367)))
(define-fun x5913 ((x5367 Int)) Int (ite (= x5367 0) 1 (x2981 x5367)))
(define-fun x2309 ((x5367 x2192)) Int (ite (= x5367 x1055) x4885 (x4851 x5367)))
(define-fun x260 ((x5367 x2192)) Int (ite (= x5367 x3362) x5794 (x2309 x5367)))
(define-fun x4201 ((x5367 Int)) Int (ite x3644 (x184 x5367) (x594 x5367)))
(define-fun x1062 ((x5367 Int)) Int (ite x6362 (x184 x5367) (x2353 x5367)))
(define-fun x3018 ((x5367 Int)) Int (ite (= x5367 0) 1 (x184 x5367)))
(define-fun x1547 ((x5367 Int)) Int (ite x291 (x184 x5367) (x3018 x5367)))
(define-fun x5990 ((x5367 Int)) Int (ite x4643 (x184 x5367) (x2070 x5367)))
(define-fun x2614 ((x5367 Int)) Int (ite x5418 (x184 x5367) (x6175 x5367)))
(define-fun x4677 ((x5367 Int)) Int (ite x4688 (x184 x5367) (x6261 x5367)))
(define-fun x5621 ((x5367 Int)) Int (ite x3097 (x184 x5367) (x1989 x5367)))
(define-fun x587 ((x5367 Int)) Int (ite x807 (x184 x5367) (x1744 x5367)))
(define-fun x2774 ((x5367 Int)) Int (ite x1977 (x184 x5367) (x2932 x5367)))
(define-fun x4783 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x184 x5367)))
(define-fun x5670 ((x5367 Int)) Int (ite x3776 (x184 x5367) (x4783 x5367)))
(define-fun x2152 ((x5367 Int)) Int (ite x2936 (x184 x5367) (ite x1869 (x4201 x5367) (ite x6384 (x1062 x5367) (ite x2723 (x1547 x5367) (ite x3476 (x5990 x5367) (ite x3658 (x2614 x5367) (ite x1238 (x4677 x5367) (ite x6385 (x5621 x5367) (ite x449 (x587 x5367) (ite x2921 (x2774 x5367) (x5670 x5367))))))))))))
(define-fun x5946 ((x5367 Int)) Int (ite x5438 (x3385 x5367) (x3926 x5367)))
(define-fun x1606 ((x5367 Int)) Int (ite x5221 (x3385 x5367) (x4628 x5367)))
(define-fun x1402 ((x5367 Int)) Int (ite x3193 (x3385 x5367) (x1173 x5367)))
(define-fun x525 ((x5367 Int)) Int (ite x2321 (x3385 x5367) (x3997 x5367)))
(define-fun x5653 ((x5367 Int)) Int (ite x6074 (x3385 x5367) (x4795 x5367)))
(define-fun x1140 ((x5367 Int)) Int (ite x1979 (x3385 x5367) (x5139 x5367)))
(define-fun x1761 ((x5367 Int)) Int (ite x2770 (x3385 x5367) (x5278 x5367)))
(define-fun x4761 ((x5367 Int)) Int (ite x5433 (x3385 x5367) (x3133 x5367)))
(define-fun x2102 ((x5367 Int)) Int (ite x4854 (x3385 x5367) (x85 x5367)))
(define-fun x2520 ((x5367 Int)) Int (ite x2459 (x3385 x5367) (x2497 x5367)))
(define-fun x1718 ((x5367 Int)) Int (ite x3975 (x3385 x5367) (ite x395 (x5946 x5367) (ite x4742 (x1606 x5367) (ite x2790 (x1402 x5367) (ite x4183 (x525 x5367) (ite x2919 (x5653 x5367) (ite x4650 (x1140 x5367) (ite x2874 (x1761 x5367) (ite x3619 (x4761 x5367) (ite x4145 (x2102 x5367) (x2520 x5367))))))))))))
(define-fun x942 ((x5367 Int)) Int (ite x3248 (x1515 x5367) (x1930 x5367)))
(define-fun x4849 ((x5367 Int)) Int (ite x1799 (x1515 x5367) (x2808 x5367)))
(define-fun x1109 ((x5367 Int)) Int (ite x5779 (x1515 x5367) (x1478 x5367)))
(define-fun x5388 ((x5367 Int)) Int (ite x4574 (x1515 x5367) (x4520 x5367)))
(define-fun x313 ((x5367 Int)) Int (ite x1664 (x1515 x5367) (x5761 x5367)))
(define-fun x3775 ((x5367 Int)) Int (ite x4896 (x1515 x5367) (x5409 x5367)))
(define-fun x1020 ((x5367 Int)) Int (ite x1950 (x1515 x5367) (x3762 x5367)))
(define-fun x4216 ((x5367 Int)) Int (ite x1490 (x1515 x5367) (x225 x5367)))
(define-fun x1021 ((x5367 Int)) Int (ite x5229 (x1515 x5367) (x6055 x5367)))
(define-fun x707 ((x5367 Int)) Int (ite x4357 (x1515 x5367) (x2958 x5367)))
(define-fun x3970 ((x5367 Int)) Int (ite x5247 (x1515 x5367) (ite x227 (x942 x5367) (ite x1357 (x4849 x5367) (ite x841 (x1109 x5367) (ite x961 (x5388 x5367) (ite x1398 (x313 x5367) (ite x67 (x3775 x5367) (ite x4570 (x1020 x5367) (ite x5799 (x4216 x5367) (ite x4440 (x1021 x5367) (x707 x5367))))))))))))
(define-fun x4147 ((x5367 Int)) Int (ite (= x5367 0) 1 (x4905 x5367)))
(define-fun x446 ((x5367 Int)) Int (ite (= 0 x5367) 1 (x4905 x5367)))
(define-fun x4723 ((x527 Int) (x3912 Int) (x410 Int) (x1764 Int)) Bool (=> (and (>= x1764 x3912) (<= x527 x410) (<= 0 x527) (>= x3912 0)) (<= (x6194 x527 x3912) (x6194 x410 x1764))))
(define-fun x2491 ((x527 Int) (x3912 Int) (x410 Int) (x1764 Int)) Bool (=> (= x527 x410) (= (- (x6194 x527 x3912) (x6194 x410 x1764)) (x6194 x527 (- x3912 x1764)))))
(define-fun x3761 ((x527 Int)) Bool (=> (and (not (= x527 16156842317565293874272834530371880720966471053262404558597773956279093428224)) (not (= 82641394424300342035733052706735002277943222088490025348945809093694544936960 x527)) (not (= x527 3590908516)) (not (= x527 2127478272)) (not (= x527 599290589)) (not (= 3088143374 x527)) (not (= x527 3171951664)) (not (= 3714247998 x527)) (not (= x527 669136355)) (not (= x527 2514000705)) (not (= 961581905 x527)) (not (= 826074471 x527)) (not (= x527 953495055)) (not (= 2987494029 x527)) (not (= 3674237557 x527)) (not (= 2757214935 x527)) (not (= 97057840296441966410330255902201960138893160036366920885407767449525406400512 x527)) (not (= x527 445207142)) (not (= 3600075382 x527)) (not (= 3329172565 x527)) (not (= 1461501637330902918203684832716283019655932542976 x527)) (not (= x527 649617121)) (not (= x527 2512374353)) (not (= x527 100135927934651036221761091863598459016256155049858187411712977198722809069568)) (not (= x527 2681229421)) (not (= 122929932 x527)) (not (= x527 3835264453)) (not (= x527 117300739)) (not (= x527 1117154408)) (not (= x527 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 3824031246 x527)) (not (= 1461501637330902918203684832716283019655932542975 x527)) (not (= x527 773487949)) (not (= x527 1889567281)) (not (= 3642135687 x527)) (not (= 1901074598 x527)) (not (= 903454517 x527)) (not (= 2542517689 x527)) (not (= 2835717307 x527)) (not (= x527 3573918927)) (not (= 543189872 x527)) (not (= x527 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= 3065339685 x527)) (not (= x527 3504541104)) (not (= 716570693 x527)) (not (= x527 2644395612)) (not (= x527 157198259)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x527)) (not (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 x527)) (not (= 248222656 x527)) (> x527 10000) (not (= x527 4238056678808933066457772256406219440718756300954938350892797929791311314944)) (not (= x527 404098525))) (not ((_ is x821) (x4555 x527)))))
(assert (= x4922 (and x866 x1289)))
(assert (= (and x4063 (not x2243)) x2396))
(assert (= (or (and x4918 (not x3141)) (and x201 (not x2446)) (and x4144 x6403)) x529))
(assert (x2946 x50))
(assert (x2946 x6163))
(assert (= x4027 (x4465 (x4555 x4027))))
(assert (x2946 x3077))
(assert (x2946 x1803))
(assert (= (=> (and (= x5651 x2668) (= x6268 x1792)) x2313) x2261))
(assert (x2491 x1346 x215 x215 x5471))
(assert (x2946 x5145))
(assert (= (and x3338 (not x2418)) x508))
(assert (x2946 x1489))
(assert (x3761 x1262))
(assert (= x5180 (and x3131 x4934)))
(assert (= x771 (and x4865 (not x5317))))
(assert (= x3296 (and (not x1146) x5479)))
(assert (x2946 x1347))
(assert (= (and x139 (not x4396)) x2619))
(assert (x2946 x4557))
(assert (= x4247 (and (not x4857) x1003)))
(assert (x2946 x2535))
(assert (x2946 x4631))
(assert (= x437 (and x1116 (not x4446))))
(assert (x3761 x2768))
(assert (x2946 x276))
(assert (= (and x3693 x4105) x2422))
(assert (= (and x4443 x3823) x688))
(assert (x2946 x2349))
(assert (x2946 x2116))
(assert (and (x2072 x1695 256) (x3935 x1695 256) (=> (> 256 0) (= (+ (* (x4941 x1695 256) 256) (x432 x1695 256)) x1695)) (x4154 x1695 256)))
(assert (x4723 x215 x5062 x5471 x215))
(assert (= (or x1995 x5561 x3519 x217 x3756 x793 x986 x3731 x4120) x807))
(assert (x2946 x1610))
(assert (= (x4555 1461501637330902918203684832716283019655932542975) (x821 1461501637330902918203684832716283019655932542975)))
(assert (x2946 x3675))
(assert (= (and x737 x822) x539))
(assert (= (=> (and (= x6239 x4243) (= x3897 x1921)) x2234) x5893))
(assert (x3761 x1481))
(assert (x2946 x5575))
(assert (x3160 x3951 (- x1163 x2533)))
(assert (= (=> (and (= 0 x1297) (= x6027 x6159)) x2726) x2995))
(assert (x2946 x2205))
(assert (x2946 x3504))
(assert (= x2570 (and (not x861) x1871)))
(assert (x2946 x2885))
(assert (x2946 x600))
(assert (x1752 x2296))
(assert (x2946 x3972))
(assert (x2946 x5734))
(assert (x2946 x897))
(assert (= x6099 (and x1693 (not x2203))))
(assert (= (and (not x4747) x5206) x386))
(assert (x2946 x3951))
(assert (= x72 (and x5840 x3254)))
(assert (= (and x3622 (not x4757)) x471))
(assert (= x1982 (x4465 (x4555 x1982))))
(assert (= x3042 (and x6290 x5302)))
(assert (x2946 x6411))
(assert (= x5833 (or x855 x3788 x1092 x2924 x5712 x500 x2532 x1307 x3734 x1292 x2915 x3344 x5382 x4073 x1966 x1087 x4704 x3464)))
(assert (x2946 x2898))
(assert (=> (>= 10000 x1689) (= (x4555 x1689) (x821 x1689))))
(assert (= (x821 2987494029) (x4555 2987494029)))
(assert (= x4162 (=> (and (= 0 x3956) (= x49 x2917)) x6036)))
(assert (x2946 x1844))
(assert (= (or x1106 x1486 x1234 x2494 x6008 x72 x5474 x916 x1531) x718))
(assert (= x798 (and x6418 x2930)))
(assert (x2946 x2493))
(assert (= x5949 (and x3461 x5025)))
(assert (= x1784 (and x114 x4858)))
(assert (= (and x4624 x2208) x2764))
(assert (x2946 x1666))
(assert (= x5867 (and x5827 x5540)))
(assert (=> (<= x5837 10000) (= (x821 x5837) (x4555 x5837))))
(assert (x2946 x2259))
(assert (x2946 x1450))
(assert (and (x2072 x466 1461501637330902918203684832716283019655932542976) (x3935 x466 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x466 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x466 1461501637330902918203684832716283019655932542976)) x466)) (x4154 x466 1461501637330902918203684832716283019655932542976)))
(assert (x3146 (- x1346 x1163)))
(assert (x3761 x4546))
(assert (x2946 x4185))
(assert (x2946 x5450))
(assert (= x1244 (and x2579 x649)))
(assert (= x3047 (and (not x1940) x1306)))
(assert (x2946 x1850))
(assert (= x3776 (or x1550 x207 x2587 x3 x5978 x3387)))
(assert (x2946 x5181))
(assert (x2946 x815))
(assert (x2946 x3780))
(assert (x2946 x3155))
(assert (x2491 x3951 x1163 x5471 x215))
(assert (= (and x4792 x614) x4739))
(assert (= (and x1378 x5744) x5508))
(assert (= x4546 (x4465 (x4555 x4546))))
(assert (x2946 x5397))
(assert (= x6271 (and x1846 x3329)))
(assert (x2946 x5150))
(assert (x3160 x3021 (- x215 x5062)))
(assert (x2946 x4875))
(assert (x3160 x1163 (- x3951 x1346)))
(assert (= x5703 (=> (and (= 0 x5358) (= x640 x2613)) x2376)))
(assert (= (and x3708 x118) x4390))
(assert (x2491 x215 x2533 x1163 x3951))
(assert (x2946 x5020))
(assert (= (or (and x2753 x4135) x170 x1295 x2150 x216 (and x4819 x4461) (and x2029 (not x2445)) x101 x5342 x3961 x429 (and (not x4408) x3212) (and x6136 x966)) x6407))
(assert (= (and (not x6289) x1903) x3987))
(assert (= x4896 (or (and x4477 x6217) (and (not x2163) x2862))))
(assert (= x1725 (x4465 (x4555 x1725))))
(assert (x3160 x5471 (- x215 x3951)))
(assert (= (and x6206 x5555) x5673))
(assert (= (x4555 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x821 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= (or x4357 x1892) x672))
(assert (x3146 (- x5471 x2533)))
(assert (= x3339 (or x4124 (and x5131 (not x3554)))))
(assert (= (x4465 (x4555 x1041)) x1041))
(assert (=> (>= 10000 x1762) (= (x4555 x1762) (x821 x1762))))
(assert (= x5926 (and x2960 (not x4567))))
(assert (x2491 x1163 x3951 x215 x5471))
(assert (x2946 x1646))
(assert (x2946 x4584))
(assert (= (=> (and (= x1946 x4090) (= x637 x5191)) x2182) x803))
(assert (x3761 x5576))
(assert (x3761 x4971))
(assert (x2946 x967))
(assert (x2946 x355))
(assert (= (and x4252 x1867) x2915))
(assert (x2946 x5615))
(assert (x2946 x615))
(assert (x2946 x5154))
(assert (x2946 x5982))
(assert (= x991 (x4465 (x4555 x991))))
(assert (= (x4465 (x821 3642135687)) 3642135687))
(assert (= (and x2319 x6210) x5993))
(assert (= x682 (or x2926 x1030)))
(assert (x5617 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5062))
(assert (x3146 (- x2533 x1163)))
(assert (= (x4465 (x4555 x32)) x32))
(assert (x3761 x676))
(assert (x2946 x5300))
(assert (x3761 x3652))
(assert (= x2286 (and x1980 (not x2566))))
(assert (= (x4555 961581905) (x821 961581905)))
(assert (x2946 x1888))
(assert (x2946 x3486))
(assert (= (and x2746 x1370) x5419))
(assert (x2946 x3100))
(assert (x2946 x1069))
(assert (= (and x5945 (not x3613)) x4395))
(assert (= x2259 (x4465 (x4555 x2259))))
(assert (= (and (not x3068) x1726) x3075))
(assert (= (and x3140 x759) x5474))
(assert (x2946 x991))
(assert (= x242 (and (not x3043) x3201)))
(assert (x2491 x3951 x1163 x215 x3021))
(assert (= (and x2548 x3002) x3904))
(assert (= x4145 (or x4854 x6425)))
(assert (x2946 x3298))
(assert (= 716570693 (x4465 (x821 716570693))))
(assert (x2946 x2245))
(assert (x3761 x3789))
(assert (x2946 x88))
(assert (= x2893 (x4465 (x4555 x2893))))
(assert (x2946 x1214))
(assert (x2946 x5405))
(assert (= x3692 (and x3507 x4486)))
(assert (x2946 x4139))
(assert (= (and (not x4819) x4461) x3437))
(assert (= (or (and (not x768) x5169) (and x5511 x1141)) x1664))
(assert (= x5404 (and (not x2015) x797)))
(assert (= x3288 (and x3798 (not x3559))))
(assert (x2946 x1497))
(assert (= (and (not x5582) x1717) x1001))
(assert (x2946 x2843))
(assert (= x6365 (and x2253 x5243)))
(assert (x2946 x4758))
(assert (= (=> (and (= x3490 x6159) (= x2661 0)) x1881) x3367))
(assert (x3761 x570))
(assert (x2946 x2670))
(assert (= x3275 (and x1139 (not x319))))
(assert (= (x4555 3065339685) (x821 3065339685)))
(assert (x2946 x444))
(assert (x2946 x4827))
(assert (= (and x5378 (not x984)) x675))
(assert (x3761 x2039))
(assert (= (and x3475 x6321) x4734))
(assert (x2946 x6060))
(assert (x2946 x6431))
(assert (x2946 x3465))
(assert (= (=> (and (= x3107 0) (= x49 x4499)) x317) x4549))
(assert (x2491 x215 x2533 x3021 x215))
(assert (x1752 x1568))
(assert (x2946 x274))
(assert (x2946 x5506))
(assert (= x2727 (or x271 x1511)))
(assert (x3812 x1695))
(assert (= (or x3108 x1842 x5329 x5122) x2459))
(assert (= x2924 (and x1130 x1534)))
(assert (= x5391 (and (not x971) x2990)))
(assert (= (x4465 (x4555 x3789)) x3789))
(assert (x2946 x3870))
(assert (=> (>= 10000 x4382) (= (x4555 x4382) (x821 x4382))))
(assert (= (=> (and (= x3138 x6106) (= x4861 0)) x4829) x4417))
(assert (x2946 x1637))
(assert (x2946 x754))
(assert (= (and x5892 x3805) x5523))
(assert (= (x4555 3088143374) (x821 3088143374)))
(assert (= (and x1826 x2373) x1797))
(assert (x2946 x2612))
(assert (x2946 x4771))
(assert (= x2298 (and x2781 (not x4289))))
(assert (x2946 x1668))
(assert (= x6209 (=> (and (= 0 x1210) (= x2280 x3443)) x4517)))
(assert (= (and (not x2151) x6270) x4033))
(assert (x2946 x1419))
(assert (= x1106 (and x687 x2345)))
(assert (= (and (not x6047) x3376) x172))
(assert (= (and x976 x6094) x1483))
(assert (x3761 x4281))
(assert (x3812 x2965))
(assert (= (and x3225 (not x6187)) x1536))
(assert (x2946 x4121))
(assert (x2946 x1712))
(assert (= x1221 (or x3952 x3676)))
(assert (x2946 x1740))
(assert (= x343 (and (not x5115) x4214)))
(assert (= x194 (or x3781 x3288)))
(assert (= (or x6361 x508) x4801))
(assert (x2946 x1113))
(assert (= x5624 (=> (and (and (= x2031 (> x1938 x86)) (<= x86 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x86 0) (= x1938 (x4941 x263 10000))) (or (and x2031 (and (= x3914 x86) (<= x86 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x86))) (and (= x1938 x3914) (not x2031)))) x2622)))
(assert (= x3855 (or x133 x2764 x5786 x4798 x2155 x3692)))
(assert (x2946 x671))
(assert (= (and (not x338) x5908) x4633))
(assert (x2946 x5819))
(assert (x2946 x6053))
(assert (x4723 x3951 x1163 x3021 x215))
(assert (= (and x2310 x3923) x2698))
(assert (x1795 x263))
(assert (= x1772 (and x65 x5547)))
(assert (x2946 x4032))
(assert (= (and x1344 x4772) x6215))
(assert (x3761 x6059))
(assert (= (and x2943 (not x1232)) x1757))
(assert (x3761 x2672))
(assert (x1795 x3173))
(assert (x3761 x6231))
(assert (x2946 x1695))
(assert (x2946 x1258))
(assert (x2946 x346))
(assert (x2946 x4011))
(assert (= x6105 (and x782 (not x61))))
(assert (= (x4555 97057840296441966410330255902201960138893160036366920885407767449525406400512) (x821 97057840296441966410330255902201960138893160036366920885407767449525406400512)))
(assert (x2946 x1482))
(assert (x2946 x1090))
(assert (= x2825 (x4465 (x4555 x2825))))
(assert (= x4508 (and x127 (not x4548))))
(assert (=> (>= 10000 x4557) (= (x4555 x4557) (x821 x4557))))
(assert (x3761 x5390))
(assert (x2946 x4885))
(assert (x3761 x3122))
(assert (x2946 x3489))
(assert (= x4058 (and x279 (not x1755))))
(assert (= x6021 (and x3958 x4788)))
(assert (x2946 x6059))
(assert (= x75 (and x5574 (not x1722))))
(assert (=> (>= 10000 x3789) (= (x4555 x3789) (x821 x3789))))
(assert (x2946 x1824))
(assert (= (and x4519 x788) x500))
(assert (x2946 x1084))
(assert (= (and (not x550) x37) x5758))
(assert (= x5398 (and x974 x202)))
(assert (= (and x3000 x6256) x5769))
(assert (x3761 x4938))
(assert (x2946 x1727))
(assert (x2946 x2460))
(assert (x2946 x146))
(assert (= (and x483 x902) x1842))
(assert (x2946 x6072))
(assert (= x5285 (and x6413 (not x1457))))
(assert (= (and x4031 x5685) x2075))
(assert (x2946 x3603))
(assert (x2946 x147))
(assert (x2946 x5719))
(assert (= x526 (and x194 (not x4384))))
(assert (= x6335 (=> (= (= 0 x4220) x3008) (and (=> (and (not x3008) (= (or (and (< x5783 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5783) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5783)) x5320)) (and (=> (not x5320) x5006) (=> x5320 x5703))) (=> x3008 x5703)))))
(assert (x2946 x5156))
(assert (= (and x659 x4200) x3067))
(assert (= x3660 (and (not x2003) x3542)))
(assert (x2946 x2776))
(assert (= (and x2701 x323) x2554))
(assert (= (and x2320 x1132) x2304))
(assert (x2946 x2877))
(assert (= (and x5031 (not x5961)) x5082))
(assert (x2946 x820))
(assert (= x6019 (or x1242 x819 x4312 x747 x4515 x1473 x6173 x185 x3268 x2115 x1786)))
(assert (= (and (not x5252) x791) x5887))
(assert (x2946 x2879))
(assert (x2946 x1241))
(assert (= (or (and x3696 x4702) x6199) x5848))
(assert (= x4437 (and x2226 x6160)))
(assert (= x1655 (and (not x5077) x1057)))
(assert (= x5850 (x4465 (x4555 x5850))))
(assert (x2491 x215 x1346 x1163 x3951))
(assert (= x5989 (and x5064 x75)))
(assert (= (and x5082 x5304) x2500))
(assert (= (and x4634 x1088) x6087))
(assert (x2946 x5543))
(assert (x2946 x3652))
(assert (x2946 x2428))
(assert (x2946 x4779))
(assert (= x436 (=> (and (= x2279 x5984) (= x6377 x6213)) x5477)))
(assert (= (and x4680 x3560) x2209))
(assert (= (or x765 x3356) x1031))
(assert (= (x4465 (x4555 x47)) x47))
(assert (x3761 x2349))
(assert (x2946 x5095))
(assert (=> (<= x1937 10000) (= (x821 x1937) (x4555 x1937))))
(assert (x2946 x1638))
(assert (x2946 x2956))
(assert (=> (>= 10000 x731) (= (x821 x731) (x4555 x731))))
(assert (x2946 x5224))
(assert (x2946 x103))
(assert (x2946 x3252))
(assert (x2946 x1982))
(assert (x2946 x6106))
(assert (x1752 x2734))
(assert (= x3859 (and x2346 x1322)))
(assert (x2946 x5279))
(assert (= (x4555 903454517) (x821 903454517)))
(assert (x2946 x393))
(assert (x2946 x2724))
(assert (x2946 x4262))
(assert (x2946 x5952))
(assert (=> (>= 10000 x570) (= (x821 x570) (x4555 x570))))
(assert (= x2024 (or (and x257 x915) (and x4864 (not x3324)) (and (not x3330) x2717))))
(assert (x2946 x4993))
(assert (= x5679 (and x3810 x4226)))
(assert (= x4692 (x4465 (x4555 x4692))))
(assert (x2946 x576))
(assert (= x2904 (and x2086 (not x3276))))
(assert (x2946 x1568))
(assert (x2946 x5789))
(assert (x2946 x1792))
(assert (x2946 x5100))
(assert (x3160 x5471 x215))
(assert (x2946 x4400))
(assert (x5626 x655))
(assert (=> (<= x6373 10000) (= (x821 x6373) (x4555 x6373))))
(assert (= 3573918927 (x4465 (x821 3573918927))))
(assert (x2946 x5852))
(assert (x2946 x4869))
(assert (= x1590 (and (not x2122) x2733)))
(assert (= x5830 (=> (and (not (= 0 x6412)) (= x3811 (= x474 x1439)) (= x4886 (x3844 (+ x2668 31))) (= (x2007 x3384) x4072) (= (x353 (x4555 x1439)) x6412) (= x3901 x4072) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2668) true) (< x2668 32)) (> x2668 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> 1461501637330902918203684832716283019655932542976 x1439) (= (x4950 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4886) x564) (= (x3726 (- x3896 x1376)) x630) (< 0 x4072) (= (x3844 (+ x564 x3384)) x1376) (= x3022 (x3844 (+ 32 x4189))) (= (x3844 (+ x1376 4)) x4189) (= (x3844 (+ x3022 32)) x1215) (= (not x3994) x5774) (= x3896 (x3844 (+ x4189 96))) (>= x1439 0) (not (= x6268 0)) (<= x1439 1461501637330902918203684832716283019655932542975) (= x3901 (ite x5774 1 0)) (= (= 0 x4072) x3994)) (and (=> (and x3811 (and (not (< x3195 248222656)) (= x6117 100) (not (= 248222656 x3195)) (= x4709 x5489) (= x5802 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= 404098525 x3195)) (= (x353 (x4555 x474)) x6415) (= x630 x6117) (= x1889 x3021) (= x4619 x655) (not (< x6117 4)) (> 1889567281 x3195) (= x6329 (x3726 (- x6117 4))) (= 599290589 x3195) (< 0 x6415) (> 669136355 x3195) (= (or (and (< x6329 96) (= true (<= x6329 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x6329 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x5924))) (and (=> (and (not x5924) (and (= x713 (x4950 1461501637330902918203684832716283019655932542975 x4619)) (= x6251 (= x713 x4619)) (= x655 x4127))) (and (=> (not x6251) x2220) (=> (and (and (= x333 x4709) (= x4502 (= x5489 x4709))) x6251) (and (=> (not x4502) x2220) (=> (and (and (>= 255 x2741) (= x143 x3021) (> 256 x2741) (>= x2741 0) (= (= x2741 0) x5432)) x4502) (and (=> (not x5432) x2220) (=> (and x5432 (and (= x3016 (= 0 x3746)) (= (x4950 1461501637330902918203684832716283019655932542975 x655) x2489) (>= 255 x3746) (<= 0 x3746) (= (x5195 (x4555 x2489) (x821 6) 0) x6058) (= x3746 (x5038 x6058)) (> 256 x3746))) (and (=> (and x3016 (= (< x6117 100) x3091)) (and (=> (and (not x3091) (and (= x5447 10000) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1746) (= x401 (x5195 (x4555 x5489) x4901 0)) (= x2349 (x4950 1461501637330902918203684832716283019655932542975 x655)) (= x4901 (x5195 (x4555 x2349) (x821 5) 0)) (>= x215 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x215) (<= 0 x1746) (= x2842 (= x3021 0)) (= (x3773 x401) x1746))) (and (=> (and (= 0 x1558) x2842) x2505) (=> (and (not x2842) (and (= x2189 (x4941 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3021)) (= (ite (not x4181) 1 0) x4645) (= x2734 (ite (< x2189 x215) 1 0)) (= x4181 (= x143 0)) (= x4026 (x4950 x4645 x2734)) (= x1754 (= 0 x4026)))) (and (=> (not x1754) x2220) (=> (and x1754 (and (= x1161 (< (x6194 x3021 x215) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x3178 (x3060 (x6194 x3021 x215))))) (and (=> (and x1161 (= x1558 x3178)) x2505) (=> (not x1161) x2220))))))) (=> x3091 x2220))) (=> (not x3016) x2220))))))))) (=> x5924 x2220))) (=> (and (not x3811) (= (= x1439 x3551) x4871)) (and (=> (and x4871 (and (> 903454517 x159) (not (= x159 117300739)) (= x4588 (x3726 (- x2649 4))) (= x239 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4588) (and (< x4588 96) (= (<= x4588 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not (= 404098525 x159)) (> x786 0) (> 2127478272 x159) (= x2649 100) (= x159 599290589) (< x159 716570693) (= x464 x4619) (= (x353 (x4555 x3551)) x786) (= x3858 x5489) (= x630 x2649) (not (< x2649 4)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4812) (not (= x159 445207142)) (= x1889 x4295) (not (= 157198259 x159)))) (and (=> x239 x1557) (=> (and (not x239) (and (= (x4950 1461501637330902918203684832716283019655932542975 x4619) x3593) (= x2219 (= x4619 x3593)) (= x464 x3176))) (and (=> (and (and (= x6428 x3858) (= (= x5489 x3858) x1131)) x2219) (and (=> (not x1131) x1557) (=> (and (and (= x4295 x4019) (<= 0 x5755) (< x5755 256) (>= 255 x5755) (= x4228 (= 0 x5755))) x1131) (and (=> (and (and (= x2968 (x5195 (x4555 x5489) (x821 3) 0)) (>= 255 x1214) (> 256 x1214) (= (x1578 x2968) x1214) (>= x1214 0) (= x5911 (= 0 x1214))) x4228) (and (=> (and x5911 (and (> 256 x137) (= x6380 (x4950 1461501637330902918203684832716283019655932542975 x464)) (>= x137 0) (= x3280 (x5195 (x4555 x6380) (x821 3) 0)) (<= x137 255) (= (= x137 0) x4411) (= (x1578 x3280) x137))) (and (=> (not x4411) x1557) (=> (and x4411 (and (>= 255 x5081) (= (= 0 x5081) x6108) (> 256 x5081) (= (x5195 (x4555 x3858) (x821 3) 0) x4651) (<= 0 x5081) (= x5081 (x1578 x4651)))) (and (=> (and (and (<= 0 x3588) (= x3588 (x4112 x3094)) (= (x5195 (x4555 x5489) x4888 0) x3094) (= (x5195 (x4555 x3263) (x821 10) 0) x4888) (= (> x4295 x3588) x3035) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3588) (= x3263 (x4950 1461501637330902918203684832716283019655932542975 x464))) x6108) (and (=> (and (not x3035) (and (= x4429 (x4950 1461501637330902918203684832716283019655932542975 x464)) (= x491 (= 0 x4429)))) (and (=> x491 x1557) (=> (and (= (= 0 x3858) x581) (not x491)) (and (=> x581 x1557) (=> (and (not x581) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3751) (= x5157 (> x4295 x3751)) (= x3751 (x4066 x2215)) (= (x5195 (x4555 x3122) (x821 9) 0) x2215) (= (x4950 1461501637330902918203684832716283019655932542975 x464) x3122) (<= 0 x3751))) (and (=> x5157 x1557) (=> (and (not x5157) (and (= (x4950 1461501637330902918203684832716283019655932542975 x464) x1762) (<= x5504 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x1762) (x821 9) 0) x1203) (= x33 (> x4295 x5504)) (= x2826 128) (= (x4066 x1203) x5504) (>= x5504 0))) (and (=> (and (= (< x5504 x4295) x1386) (not x33)) (and (=> (and (and (= x3790 (x3726 (- x5504 x4295))) (<= x2959 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2959 0) (= x4076 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4295))) (= x1997 (x4950 1461501637330902918203684832716283019655932542975 x464)) (= (x5195 (x4555 x1997) (x821 9) 0) x5335) (= (x1455 x3826) x2959) (= x3826 (x5195 (x4555 x3858) (x821 9) 0)) (= (> x2959 x4076) x2555)) (not x1386)) (and (=> (and (and (= x616 (x3844 (+ x2959 x4295))) (= x3815 (< x616 x2959))) (not x2555)) (and (=> (and (not x3815) (and (= x2227 (x5195 (x4555 x6003) (x821 10) 0)) (= x1636 (> x4295 x2735)) (>= x2735 0) (<= x2735 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2265 192) (= x1765 (x5195 (x4555 x5489) x2227 0)) (= (x4950 1461501637330902918203684832716283019655932542975 x464) x6003) (= x2735 (x4112 x1765)))) (and (=> x1636 x1557) (=> (and (= (< x2735 x4295) x164) (not x1636)) (and (=> x164 x1557) (=> (and (not x164) (and (= x3489 32) (= x4045 (x5195 (x4555 x1758) (x821 10) 0)) (= x996 (x3726 (- x2735 x4295))) (= (x5195 (x4555 x5489) x4045 0) x553) (= x1758 (x4950 1461501637330902918203684832716283019655932542975 x464)) (= 1 x308))) x834))))) (=> x3815 x1557))) (=> x2555 x1557))) (=> x1386 x1557))) (=> x33 x1557))))))))) (=> x3035 x1557))) (=> (not x6108) x1557))))) (=> (not x5911) x1557))) (=> (not x4228) x1557))))) (=> (not x2219) x1557))))) (=> (and (not x4871) (= x3891 (= x2893 x1439))) (and (=> (and x3891 (and (> 961581905 x657) (= x1385 x1889) (= 599290589 x657) (= x2815 (x3726 (- x4292 4))) (= x5935 x5489) (= x827 (x353 (x4555 x2893))) (not (= 543189872 x657)) (= x4292 100) (> 1901074598 x657) (not (= 404098525 x657)) (= x630 x4292) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2815) (and (= true (<= x2815 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x2815))) x2753) (< 0 x827) (not (> 4 x4292)) (not (= 157198259 x657)) (= x4468 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= x657 117300739)) (= x4619 x4064))) (and (=> (and (not x2753) (and (= x4408 (= x2638 x4619)) (= x2638 (x4950 1461501637330902918203684832716283019655932542975 x4619)) (= x4233 x4064))) (and (=> (and (and (= x5935 x4681) (= (= x5935 x5489) x2445)) x4408) (and (=> (and (and (= (= x6267 0) x2331) (= x4025 x1385) (= x6267 (x4950 1461501637330902918203684832716283019655932542975 x4064))) x2445) (and (=> (and (not x2331) (= (= 0 x5935) x1349)) (and (=> x1349 x3488) (=> (and (and (= x4382 (x4950 1461501637330902918203684832716283019655932542975 x4064)) (= x966 (< x5149 x1385)) (= x5149 (x480 x3069)) (>= x5149 0) (= x3069 (x5195 (x4555 x4382) (x821 0) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5149) (= x337 128)) (not x1349)) (and (=> x966 x3488) (=> (and (not x966) (= x1806 (> x1385 x5149))) (and (=> (and (not x1806) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1820) (= (x3726 (- x5149 x1385)) x881) (= (< x3526 x1820) x1343) (= (x4421 x1719) x1820) (= x3526 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1385))) (= x1833 (x5195 (x4555 x5816) (x821 0) 0)) (= x1719 (x5195 (x4555 x5935) (x821 0) 0)) (= x5816 (x4950 1461501637330902918203684832716283019655932542975 x4064)) (>= x1820 0))) (and (=> x1343 x3488) (=> (and (and (= x1625 (> x1820 x4470)) (= x4470 (x3844 (+ x1820 x1385)))) (not x1343)) (and (=> (and (and (= (x5195 (x4555 x5489) x563 0) x5259) (= x3972 (x4021 x5259)) (= x5390 (x4950 1461501637330902918203684832716283019655932542975 x4064)) (= (> x1385 x3972) x4819) (= (x5195 (x4555 x5390) (x821 1) 0) x563) (= 224 x3576) (<= 0 x3972) (<= x3972 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1625)) (and (=> x4819 x3488) (=> (and (= x5258 (< x3972 x1385)) (not x4819)) (and (=> (and (not x5258) (and (= x957 (= 0 x1126)) (= x1126 (x4950 1461501637330902918203684832716283019655932542975 x4064)) (= (x3726 (- x3972 x1385)) x3258))) (and (=> (and (= (= 0 x5489) x1805) (not x957)) (and (=> (and (not x1805) (and (= (x5195 (x4555 x5489) x198 0) x2076) (= 32 x3596) (= x198 (x5195 (x4555 x3890) (x821 1) 0)) (= (x4950 1461501637330902918203684832716283019655932542975 x4064) x3890) (= 1 x2636) (= 1 x3846))) x490) (=> x1805 x3488))) (=> x957 x3488))) (=> x5258 x3488))))) (=> x1625 x3488))))) (=> x1806 x3488))))))) (=> x2331 x3488))) (=> (not x2445) x3488))) (=> (not x4408) x3488))) (=> x2753 x3488))) (=> (and (not x3891) (= x6109 (= x5489 x1439))) (and (=> (and (= (= x5556 x1439) x4792) (not x6109)) (and (=> (and (and (= 599290589 x5516) (= 100 x274) (< x5516 1117154408) (< 0 x336) (= x3028 (or (and (= (<= x2675 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2675 96)) (> x2675 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x3726 (- x274 4)) x2675) (not (= 157198259 x5516)) (= x1824 x5489) (= x1889 x3506) (not (= x5516 404098525)) (= x2910 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x630 x274) (not (= 117300739 x5516)) (not (< x274 4)) (= x4619 x4249) (= x336 (x353 (x4555 x5556)))) x4792) (and (=> x3028 x1510) (=> (and (and (= x56 x4249) (= (= x4619 x4006) x5036) (= (x4950 1461501637330902918203684832716283019655932542975 x4619) x4006)) (not x3028)) (and (=> (not x5036) x1510) (=> (and x5036 (and (= (= x5489 x1824) x4680) (= x1029 x1824))) (and (=> (and x4680 (and (= (= x1824 0) x4158) (= x2048 x3506))) (and (=> x4158 x1510) (=> (and (and (= (> x3506 x3044) x6052) (= x3240 (x5195 (x4555 x3727) (x821 0) 0)) (>= x3044 0) (= x3727 (x4950 1461501637330902918203684832716283019655932542975 x4249)) (= (x6347 x3240) x3044) (<= x3044 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x4158)) (and (=> x6052 x1510) (=> (and (not x6052) (= x6308 (< x3044 x3506))) (and (=> (and (and (= x6224 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3506))) (= (x5195 (x4555 x1824) (x821 0) 0) x4926) (= x1183 (x5195 (x4555 x2817) (x821 0) 0)) (>= x1774 0) (= x2299 (x3726 (- x3044 x3506))) (= x1774 (x681 x4926)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1774) (= x2817 (x4950 1461501637330902918203684832716283019655932542975 x4249)) (= x3483 (< x6224 x1774))) (not x6308)) (and (=> x3483 x1510) (=> (and (not x3483) (and (= x801 (x3844 (+ x3506 x1774))) (= (< x801 x1774) x1014))) (and (=> (and (not x1014) (and (= (x5195 (x4555 x5489) x4279 0) x4656) (= (x4950 1461501637330902918203684832716283019655932542975 x4249) x5343) (>= x4789 0) (= x4789 (x3473 x4656)) (= (x5195 (x4555 x5343) (x821 1) 0) x4279) (= x1669 (> x3506 x4789)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4789))) (and (=> x1669 x1510) (=> (and (= (< x4789 x3506) x1360) (not x1669)) (and (=> x1360 x1510) (=> (and (and (= x2627 (= x5489 0)) (= (x3726 (- x4789 x3506)) x667)) (not x1360)) (and (=> x2627 x1510) (=> (and (not x2627) (and (= (x4950 1461501637330902918203684832716283019655932542975 x4249) x2563) (= x5771 (= x2563 0)))) (and (=> x5771 x1510) (=> (and (and (= x1425 (x5195 (x4555 x6059) (x821 1) 0)) (= 32 x1674) (= x361 1) (= x6059 (x4950 1461501637330902918203684832716283019655932542975 x4249)) (= (x5195 (x4555 x5489) x1425 0) x2895) (= x3120 1) (= x4563 (x5696 128))) (not x5771)) x4513))))))))) (=> x1014 x1510))))) (=> x6308 x1510))))))) (=> (not x4680) x1510))))))) (=> (and (= x2712 (= x3135 x1439)) (not x4792)) (and (=> (and (and (not (= x5297 404098525)) (= x5489 x2760) (= x4539 x630) (= x2813 (x353 (x4555 x3135))) (not (= x5297 117300739)) (= x1889 x3033) (= x976 (or (> x2231 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2231)) (< x2231 96)))) (= x4404 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4539 100) (not (= 157198259 x5297)) (not (< x4539 4)) (< x5297 826074471) (= x2231 (x3726 (- x4539 4))) (= x2022 x4619) (< 0 x2813) (= 599290589 x5297)) x2712) (and (=> x976 x3261) (=> (and (and (= x1135 (x4950 1461501637330902918203684832716283019655932542975 x4619)) (= x845 x2022) (= x4757 (= x1135 x4619))) (not x976)) (and (=> (and x4757 (and (= x5923 x2760) (= (= x2760 x5489) x1337))) (and (=> (and (and (= (= 0 x2760) x6056) (= x3033 x354)) x1337) (and (=> (and (and (<= 0 x4159) (= x3189 (x4950 1461501637330902918203684832716283019655932542975 x2022)) (= x4413 (x5195 (x4555 x3189) (x821 1) 0)) (<= x4159 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5692 (> x3033 x4159)) (= x4159 (x4203 x4413))) (not x6056)) (and (=> x5692 x3261) (=> (and (and (= x5919 (x5195 (x4555 x5489) x2502 0)) (= x4842 (x5111 x5919)) (>= x4842 0) (= (x4950 1461501637330902918203684832716283019655932542975 x2022) x3303) (= x2502 (x5195 (x4555 x3303) (x821 2) 0)) (= x360 (< x4842 x3033)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4842)) (not x5692)) (and (=> x360 x3261) (=> (and (not x360) (and (= x4533 (< x6247 x3033)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6247) (= (x5195 (x4555 x47) (x821 1) 0) x622) (<= 0 x6247) (= x6247 (x4203 x622)) (= x47 (x4950 1461501637330902918203684832716283019655932542975 x2022)))) (and (=> (and (not x4533) (and (= x1113 (x3726 (- x6247 x3033))) (= x4163 (x5195 (x4555 x3590) (x821 2) 0)) (= x3366 (x5111 x2704)) (= x1474 (x5195 (x4555 x1028) (x821 1) 0)) (<= x3366 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2704 (x5195 (x4555 x5489) x4163 0)) (= x1028 (x4950 1461501637330902918203684832716283019655932542975 x2022)) (= x3590 (x4950 1461501637330902918203684832716283019655932542975 x2022)) (<= 0 x3366) (= (< x3366 x3033) x2939))) (and (=> x2939 x3261) (=> (and (and (= x523 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3033))) (= (x5195 (x4555 x5489) x5883 0) x2889) (= (x5274 x407) x2053) (= x407 (x5195 (x4555 x2760) (x821 1) 0)) (= x5883 (x5195 (x4555 x4672) (x821 2) 0)) (= (> x2053 x523) x3179) (<= x2053 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3726 (- x3366 x3033)) x561) (= x4672 (x4950 1461501637330902918203684832716283019655932542975 x2022)) (<= 0 x2053)) (not x2939)) (and (=> x3179 x3261) (=> (and (not x3179) (and (= 32 x4432) (= x3924 1) (= x3134 (x3844 (+ x3033 x2053))) (= (x5710 128) x5928) (= 1 x2646))) x2397))))) (=> x4533 x3261))))))) (=> x6056 x3261))) (=> (not x1337) x3261))) (=> (not x4757) x3261))))) (=> (and (not x2712) (= x3820 (= x1262 x1439))) (and (=> (and (= (= x1439 x6182) x2971) (not x3820)) (and (=> (and x2971 (and (= x5448 (x353 (x4555 x6182))) (= x1889 x4996) (< x50 826074471) (= x2905 (x3726 (- x777 4))) (= 100 x777) (= x5489 x1496) (not (= 404098525 x50)) (= 599290589 x50) (not (= x50 157198259)) (not (< x777 4)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2905) (and (< x2905 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2905) true))) x1034) (not (= 117300739 x50)) (= x2077 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> x5448 0) (= x4619 x3074) (= x777 x630))) (and (=> (and (and (= x2604 (x4950 1461501637330902918203684832716283019655932542975 x4619)) (= x323 (= x2604 x4619))) (not x1034)) (and (=> (and x323 (and (= x462 (= x5489 x1496)) (= x1496 x3155))) (and (=> (and x462 (and (= (x5195 (x4555 x309) (x821 1) 0) x1647) (= x309 (x4950 1461501637330902918203684832716283019655932542975 x3074)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1157) (= x2099 x4996) (<= 0 x1157) (= x5467 (> x1889 x1157)) (= x1157 (x860 x1647)))) (and (=> x5467 x3360) (=> (and (not x5467) (= x4284 (< x1157 x4996))) (and (=> (and (and (= x6186 (x3726 (- x1157 x4996))) (= x5526 (x5195 (x4555 x1496) (x821 1) 0)) (= x5831 (x4950 1461501637330902918203684832716283019655932542975 x3074)) (= (> x168 x5506) x4289) (>= x168 0) (= (x45 x5526) x168) (<= x168 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x5831) (x821 1) 0) x1321) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4996)) x5506)) (not x4284)) (and (=> x4289 x3360) (=> (and (not x4289) (and (= x2530 (> x168 x2244)) (= x2244 (x3844 (+ x168 x4996))))) (and (=> x2530 x3360) (=> (and (and (= x4347 (x1423 x3865)) (= x2409 (x5195 (x4555 x2825) (x821 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4347) (= x2825 (x4950 1461501637330902918203684832716283019655932542975 x3074)) (= x3865 (x5195 (x4555 x5489) x2409 0)) (= x2201 (> x4996 x4347)) (<= 0 x4347)) (not x2530)) (and (=> (and (not x2201) (= x3771 (> x4996 x4347))) (and (=> x3771 x3360) (=> (and (not x3771) (and (= (x5195 (x4555 x1041) (x821 2) 0) x842) (= 1 x6158) (= (x4950 1461501637330902918203684832716283019655932542975 x3074) x1041) (= 32 x4261) (= (x3726 (- x4347 x4996)) x1882) (= x1305 (x5195 (x4555 x5489) x842 0)))) x1812))) (=> x2201 x3360))))))) (=> x4284 x3360))))) (=> (not x462) x3360))) (=> (not x323) x3360))) (=> x1034 x3360))) (=> (and (= (= x1439 x1411) x3410) (not x2971)) (and (=> (and (= (= x4027 x1439) x990) (not x3410)) (and (=> (and (and (= x1958 599290589) (= (x3726 (- x837 4)) x1373) (< x1958 826074471) (= x2190 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1373) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1373)) (> 96 x1373)))) (not (= 404098525 x1958)) (= 100 x837) (= x2594 x1889) (> x1243 0) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x645) (= x4619 x1568) (= x630 x837) (not (< x837 4)) (not (= x1958 157198259)) (= x5489 x4717) (not (= 117300739 x1958)) (= (x353 (x4555 x4027)) x1243)) x990) (and (=> x2190 x5113) (=> (and (not x2190) (and (= x4436 (= x4309 x4619)) (= (x4950 1461501637330902918203684832716283019655932542975 x4619) x4309))) (and (=> (not x4436) x5113) (=> (and (and (= x3309 x4717) (= x5590 (= x5489 x4717))) x4436) (and (=> (not x5590) x5113) (=> (and x5590 (and (= x570 (x4950 1461501637330902918203684832716283019655932542975 x1568)) (<= x2014 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x124 (< x2014 x1889)) (= (x3877 x5667) x2014) (= (x5195 (x4555 x570) (x821 1) 0) x5667) (= x3242 x2594) (>= x2014 0))) (and (=> x124 x5113) (=> (and (not x124) (= (< x2014 x2594) x2643)) (and (=> x2643 x5113) (=> (and (not x2643) (and (= (x94 x1418) x2428) (= x2055 (> x2428 x899)) (<= x2428 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x35 (x4950 1461501637330902918203684832716283019655932542975 x1568)) (= (x5195 (x4555 x4717) (x821 1) 0) x1418) (>= x2428 0) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2594)) x899) (= x1416 (x5195 (x4555 x35) (x821 1) 0)) (= x4176 (x3726 (- x2014 x2594))))) (and (=> x2055 x5113) (=> (and (and (= x5706 (x3844 (+ x2594 x2428))) (= (< x5706 x2428) x1472)) (not x2055)) (and (=> (and (not x1472) (and (= (< x1798 x2594) x3648) (<= 0 x1798) (<= x1798 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3300 (x5195 (x4555 x1725) (x821 2) 0)) (= (x5195 (x4555 x5489) x3300 0) x5021) (= (x1992 x5021) x1798) (= x1725 (x4950 1461501637330902918203684832716283019655932542975 x1568)))) (and (=> x3648 x5113) (=> (and (not x3648) (= (< x1798 x2594) x3953)) (and (=> (and (and (= (x5195 (x4555 x5489) x3718 0) x4946) (= (x5195 (x4555 x6231) (x821 2) 0) x3718) (= (x3726 (- x1798 x2594)) x576) (= x2279 1) (= 32 x6213) (= x6231 (x4950 1461501637330902918203684832716283019655932542975 x1568))) (not x3953)) x436) (=> x3953 x5113))))) (=> x1472 x5113))))))))))))))) (=> (and (and (and (and (not (= x3291 404098525)) (= x1889 x2482) (= x4619 x5204) (= x3675 x5489) (not (= x3291 157198259)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x5847) (= 100 x325) (not (< x325 4)) (= x3291 599290589) (> x5060 0) (= x247 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4040) (and (< x4040 96) (= true (<= x4040 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x630 x325) (= x4040 (x3726 (- x325 4))) (= x5060 (x353 (x4555 x3993)))) x4049) (= (= x3993 x1439) x4049)) (not x990)) (and (=> x247 x5133) (=> (and (and (= (= x4619 x3066) x2067) (= x3066 (x4950 1461501637330902918203684832716283019655932542975 x4619))) (not x247)) (and (=> (not x2067) x5133) (=> (and x2067 (and (= x4296 x3675) (= (= x3675 x5489) x2069))) (and (=> (not x2069) x5133) (=> (and x2069 (and (>= x5510 0) (= x5510 (x4576 x1393)) (= (x5195 (x4555 x5397) (x821 2) 0) x4796) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5510) (= (x5195 (x4555 x5489) x4796 0) x1393) (= x5397 (x4950 1461501637330902918203684832716283019655932542975 x5204)) (= x1514 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5510)))) (and (=> (and (not x1514) (and (= (x4576 x2054) x4448) (= x4160 (> x2482 x4448)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4448) (= x2054 (x5195 (x4555 x5489) x3406 0)) (= (x4950 1461501637330902918203684832716283019655932542975 x5204) x1982) (<= 0 x4448) (= x3406 (x5195 (x4555 x1982) (x821 2) 0)))) (and (=> (and (= x3418 (x3726 (- x4448 x2482))) (not x4160)) x925) (=> x4160 x5133))) (=> x1514 x925))))))))))) (=> (and x3410 (and (= 100 x2700) (not (= x1255 117300739)) (= x5014 (or (and (< x5815 96) (= true (<= x5815 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5815))) (= x4619 x466) (< 0 x4269) (= x32 x5489) (= x5815 (x3726 (- x2700 4))) (not (= 157198259 x1255)) (not (= x1255 404098525)) (= (x353 (x4555 x1411)) x4269) (= x4827 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x2700 x630) (= x1889 x5543) (= x1255 599290589) (< x1255 826074471) (not (< x2700 4)))) (and (=> (and (not x5014) (and (= x6051 (= x615 x4619)) (= x615 (x4950 1461501637330902918203684832716283019655932542975 x4619)))) (and (=> (and (and (= x6346 x32) (= (= x32 x5489) x2652)) x6051) (and (=> (not x2652) x2999) (=> (and x2652 (and (>= x5456 0) (= x5543 x4992) (= (x4950 1461501637330902918203684832716283019655932542975 x466) x5850) (= (x1484 x1645) x5456) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5456) (= (> x1889 x5456) x984) (= (x5195 (x4555 x5850) (x821 1) 0) x1645))) (and (=> (and (= x3816 (> x5543 x5456)) (not x984)) (and (=> (and (and (= (x5780 x3607) x1365) (= (x4950 1461501637330902918203684832716283019655932542975 x466) x6011) (= x3645 (x3726 (- x5456 x5543))) (<= x1365 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x32) (x821 1) 0) x3607) (>= x1365 0) (= (x5195 (x4555 x6011) (x821 1) 0) x2498) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5543)) x5954) (= x2839 (< x5954 x1365))) (not x3816)) (and (=> (and (and (= x814 (x3844 (+ x1365 x5543))) (= (< x814 x1365) x5981)) (not x2839)) (and (=> (and (not x5981) (and (= (x4950 1461501637330902918203684832716283019655932542975 x466) x534) (= (x5195 (x4555 x5489) x4937 0) x1137) (= x4937 (x5195 (x4555 x534) (x821 2) 0)) (<= 0 x4274) (= x5495 (< x4274 x5543)) (= (x1277 x1137) x4274) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4274))) (and (=> x5495 x2999) (=> (and (= x6206 (< x4274 x5543)) (not x5495)) (and (=> (and (and (= (x3726 (- x4274 x5543)) x4943) (= x3583 (x4950 1461501637330902918203684832716283019655932542975 x466)) (= (x5195 (x4555 x3583) (x821 2) 0) x5198) (= (x5195 (x4555 x5489) x5198 0) x5355) (= x270 32) (= x6007 1)) (not x6206)) x4123) (=> x6206 x2999))))) (=> x5981 x2999))) (=> x2839 x2999))) (=> x3816 x2999))) (=> x984 x2999))))) (=> (not x6051) x2999))) (=> x5014 x2999))))))) (=> (and (and (not (= x4589 117300739)) (not (= 157198259 x4589)) (= x5489 x991) (= x5150 x1889) (= x4696 (or (and (< x5876 96) (= (<= x5876 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x5876 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x630 x4402) (= (x353 (x4555 x1262)) x6018) (= x4402 100) (not (= 404098525 x4589)) (not (> 4 x4402)) (= x6416 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4619 x3246) (= (x3726 (- x4402 4)) x5876) (< x4589 826074471) (> x6018 0) (= 599290589 x4589)) x3820) (and (=> x4696 x2853) (=> (and (and (= x398 (x4950 1461501637330902918203684832716283019655932542975 x4619)) (= x4365 (= x4619 x398))) (not x4696)) (and (=> (not x4365) x2853) (=> (and x4365 (and (= x991 x4224) (= x4387 (= x5489 x991)))) (and (=> (not x4387) x2853) (=> (and x4387 (and (= (x5195 (x4555 x668) (x821 1) 0) x6057) (<= 0 x2043) (= x2043 (x2281 x6057)) (= x668 (x4950 1461501637330902918203684832716283019655932542975 x3246)) (= (> x1889 x2043) x3121) (= x2451 x5150) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2043))) (and (=> x3121 x2853) (=> (and (= (< x2043 x5150) x2746) (not x3121)) (and (=> (and (and (<= x447 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x447 (x2591 x4473)) (= (x3726 (- x2043 x5150)) x2705) (= x4975 (x5195 (x4555 x3652) (x821 1) 0)) (= x4571 (< x2877 x447)) (= x3652 (x4950 1461501637330902918203684832716283019655932542975 x3246)) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5150)) x2877) (>= x447 0) (= (x5195 (x4555 x991) (x821 1) 0) x4473)) (not x2746)) (and (=> (and (not x4571) (and (= (x3844 (+ x5150 x447)) x538) (= x943 (< x538 x447)))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6163) (= (x4950 1461501637330902918203684832716283019655932542975 x3246) x5533) (>= x6163 0) (= (x5195 (x4555 x5533) (x821 2) 0) x6152) (= x3895 (x5195 (x4555 x5489) x6152 0)) (= (> x5150 x6163) x2699) (= x6163 (x5988 x3895))) (not x943)) (and (=> (and (= (> x5150 x6163) x1336) (not x2699)) (and (=> (and (not x1336) (and (= x2673 1) (= 32 x5795) (= (x5195 (x4555 x4782) (x821 2) 0) x5458) (= (x5195 (x4555 x5489) x5458 0) x6014) (= (x4950 1461501637330902918203684832716283019655932542975 x3246) x4782) (= (x3726 (- x6163 x5150)) x2782))) x6123) (=> x1336 x2853))) (=> x2699 x2853))) (=> x943 x2853))) (=> x4571 x2853))) (=> x2746 x2853))))))))))))))))) (=> (and (and (= x4308 x1889) (> 953495055 x4602) (= x5489 x3465) (not (> 4 x1102)) (not (= x4602 404098525)) (= x4602 599290589) (= x4619 x5879) (not (= 157198259 x4602)) (> x3026 0) (= 100 x1102) (= x630 x1102) (= x393 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (or (> x1263 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1263 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1263)))) x1999) (> 2512374353 x4602) (= x1263 (x3726 (- x1102 4))) (= x3026 (x353 (x4555 x5489)))) x6109) (and (=> (and (and (= x2913 (x4950 1461501637330902918203684832716283019655932542975 x4619)) (= (= x4619 x2913) x4543)) (not x1999)) (and (=> (not x4543) x6015) (=> (and x4543 (and (= (= x5489 x3465) x2144) (= x3465 x4011))) (and (=> (not x2144) x6015) (=> (and x2144 (and (<= 0 x2843) (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2843) x102) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2843) (= (x5806 x44) x2843) (= (x5195 (x4555 x5489) x750 0) x44) (= x938 (x4950 1461501637330902918203684832716283019655932542975 x5879)) (= (x5195 (x4555 x938) (x821 2) 0) x750))) (and (=> x102 x433) (=> (and (not x102) (and (= (x5195 (x4555 x1296) (x821 2) 0) x5843) (= x2418 (< x897 x4308)) (= (x5806 x4537) x897) (>= x897 0) (<= x897 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4537 (x5195 (x4555 x5489) x5843 0)) (= x1296 (x4950 1461501637330902918203684832716283019655932542975 x5879)))) (and (=> (and (not x2418) (= x5225 (x3726 (- x897 x4308)))) x433) (=> x2418 x6015))))))))) (=> x1999 x6015)))))))))))))
(assert (= x4063 (and (not x5678) x998)))
(assert (x2946 x2177))
(assert (x2946 x5954))
(assert (= (x4465 (x4555 x1222)) x1222))
(assert (x3761 x1028))
(assert (x2946 x2372))
(assert (= x6151 (or x5000 x4837)))
(assert (x2946 x5349))
(assert (x2946 x3371))
(assert (= (and x6029 x1049) x1115))
(assert (= x4781 (and x328 x3561)))
(assert (x2946 x5599))
(assert (= x5221 (or x569 x3425 x2415 x1811 x975 x2033 x1333 x989)))
(assert (= x2112 (and x4708 x3052)))
(assert (x2946 x5351))
(assert (= (=> (and (= x4637 x579) (= x3371 x947)) x5152) x911))
(assert (x3761 x5556))
(assert (x2946 x2390))
(assert (=> (<= x795 10000) (= (x821 x795) (x4555 x795))))
(assert (x2946 x238))
(assert (x3761 x1997))
(assert (= x3662 (or x5391 x771)))
(assert (= (or (and x108 x943) (and x4696 x4479) x6287 x5419 (and x5992 x2699) (and (not x4387) x2732) (and x3121 x3361) (and (not x4365) x941) x627) x4297))
(assert (= x5922 (and x5411 x472)))
(assert (x2946 x692))
(assert (= x4884 (or (and x1057 x5077) (and (not x5013) x1655) (and x3343 (not x2465)))))
(assert (=> (<= x1612 10000) (= (x821 x1612) (x4555 x1612))))
(assert (= (and x1001 x5512) x2819))
(assert (x2946 x4545))
(assert (x2946 x3604))
(assert (x2946 x1896))
(assert (x2946 x1852))
(assert (x2946 x5053))
(assert (= x287 (and (not x4963) x2286)))
(assert (= (and x6391 x4814) x892))
(assert (= x2896 (=> (and (= x1180 (x3726 (- x3942 x3384))) (not (= x3040 0)) (= (x3844 (+ x629 96)) x3942) (= x2084 (x3844 (+ x4989 32))) (= x1265 (x3844 (+ 31 x947))) (= (= x4281 x30) x1885) (not (or (> x947 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x947 32) (= true (<= x947 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x6176 (x4950 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1265)) (= (x353 (x4555 x4281)) x3040) (= x629 (x3844 (+ 4 x3384))) (not (= 0 x579)) (= (x3844 (+ x6176 128)) x3384) (= x4281 (x4950 1461501637330902918203684832716283019655932542975 x1004)) (= (x3844 (+ 32 x629)) x4989)) (and (=> (and (= x6344 (= x5753 x4281)) (not x1885)) (and (=> (and (and (= (or (> x748 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x748) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x748)))) x2083) (= 97057840296441966410330255902201960138893160036366920885407767449525406400512 x4716) (= x4619 x4399) (= x1686 x1180) (= 3600075382 x1875) (= 100 x1686) (> x1188 0) (= x748 (x3726 (- x1686 4))) (= (x353 (x4555 x5753)) x1188) (not (< x1686 4))) x6344) (and (=> x2083 x4646) (=> (and (not x2083) (and (= (= x4425 x4619) x861) (= x4425 (x4950 1461501637330902918203684832716283019655932542975 x4619)))) (and (=> (and (and (<= 0 x1388) (<= x1793 1461501637330902918203684832716283019655932542975) (< x1793 1461501637330902918203684832716283019655932542976) (<= x1388 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4352 (= x3322 0)) (<= x1637 1461501637330902918203684832716283019655932542975) (< x1637 1461501637330902918203684832716283019655932542976) (<= 0 x1637) (= x2371 128) (= x3322 (x353 (x4555 x1793))) (<= 0 x1793)) x861) (and (=> x4352 x4646) (=> (and (= (= x474 x1793) x5119) (not x4352)) (and (=> (and (= x1857 (= x3551 x1793)) (not x5119)) (and (=> (and (and (= 599290589 x1480) (= x1637 x1675) (= x6266 100) (< x1480 903454517) (not (= 404098525 x1480)) (= x1388 x6171) (not (= 157198259 x1480)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3520) (not (< x6266 4)) (= (or (> x34 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x34) true) (< x34 96))) x2738) (< 0 x2761) (= (x3726 (- x6266 4)) x34) (= x2761 (x353 (x4555 x3551))) (not (= 117300739 x1480)) (not (= x1480 445207142)) (> 2127478272 x1480) (> 716570693 x1480) (= x3830 x5753) (= x6266 100)) x1857) (and (=> (and (and (= x4345 x1675) (= (= x1675 x1637) x2434)) (not x2738)) (and (=> (not x2434) x2113) (=> (and x2434 (and (= (= x5753 x3830) x334) (= x1767 x3830))) (and (=> (and (and (>= x5755 0) (= x6171 x1735) (= x4184 (= x5755 0)) (< x5755 256) (<= x5755 255)) x334) (and (=> (and (and (> 256 x6178) (= x6178 (x1578 x5669)) (<= x6178 255) (= x5669 (x5195 (x4555 x5753) (x821 3) 0)) (<= 0 x6178) (= x6135 (= x6178 0))) x4184) (and (=> (and x6135 (and (<= 0 x1249) (< x1249 256) (= x2647 (x5195 (x4555 x1675) (x821 3) 0)) (= x568 (= x1249 0)) (>= 255 x1249) (= x1249 (x1578 x2647)))) (and (=> (and x568 (and (= (= x3523 0) x135) (= x6118 (x5195 (x4555 x3830) (x821 3) 0)) (<= 0 x3523) (<= x3523 255) (> 256 x3523) (= (x1578 x6118) x3523))) (and (=> (and (and (= x4835 (x4635 x1096)) (= x3469 (x5195 (x4555 x1675) (x821 10) 0)) (= (> x6171 x4835) x4333) (= x1096 (x5195 (x4555 x5753) x3469 0)) (>= x4835 0) (<= x4835 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x135) (and (=> (and (not x4333) (= (= 0 x1675) x1458)) (and (=> x1458 x2113) (=> (and (not x1458) (= (= x3830 0) x3326)) (and (=> x3326 x2113) (=> (and (not x3326) (and (= x2822 (x1281 x1884)) (<= x2822 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2822 0) (= x5493 (< x2822 x6171)) (= x1884 (x5195 (x4555 x1675) (x821 9) 0)))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1245) (= (> x6171 x1245) x3525) (= (x5195 (x4555 x1675) (x821 9) 0) x1294) (= (x1281 x1294) x1245) (= 128 x2205) (<= 0 x1245)) (not x5493)) (and (=> x3525 x2113) (=> (and (= x2715 (< x1245 x6171)) (not x3525)) (and (=> (and (not x2715) (and (= x4400 (x3726 (- x1245 x6171))) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6171)) x4751) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2601) (= (x1898 x3530) x2601) (= (x5195 (x4555 x1675) (x821 9) 0) x2886) (= (< x4751 x2601) x349) (= (x5195 (x4555 x3830) (x821 9) 0) x3530) (>= x2601 0))) (and (=> x349 x2113) (=> (and (not x349) (and (= x4568 (> x2601 x1873)) (= (x3844 (+ x6171 x2601)) x1873))) (and (=> x4568 x2113) (=> (and (not x4568) (and (= x5224 192) (= x3103 (x5195 (x4555 x3830) (x821 9) 0)) (<= x1852 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x5753) x2469 0) x5183) (= x2469 (x5195 (x4555 x1675) (x821 10) 0)) (= x3290 (> x6171 x1852)) (= (x4635 x5183) x1852) (>= x1852 0))) (and (=> (and (= (< x1852 x6171) x4873) (not x3290)) (and (=> x4873 x2113) (=> (and (not x4873) (and (= (x5195 (x4555 x5753) x1205 0) x5440) (= x5071 (x3726 (- x1852 x6171))) (= 1 x356) (= x1205 (x5195 (x4555 x1675) (x821 10) 0)) (= x1461 32))) x4880))) (=> x3290 x2113))))))) (=> x2715 x2113))))) (=> x5493 x2113))))))) (=> x4333 x2113))) (=> (not x135) x2113))) (=> (not x568) x2113))) (=> (not x6135) x2113))) (=> (not x4184) x2113))) (=> (not x334) x2113))))) (=> x2738 x2113))) (=> (and (= (= x2893 x1793) x5656) (not x1857)) (and (=> (and (and (< 0 x1182) (= x4034 x5753) (= x4987 599290589) (= x5820 (or (and (> 96 x5279) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5279))) (> x5279 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= x4987 404098525)) (< x4987 1901074598) (= 100 x3822) (not (= 117300739 x4987)) (= (x3726 (- x3822 4)) x5279) (= x1637 x6373) (not (< x3822 4)) (= x3822 100) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x5517) (not (= x4987 543189872)) (> 961581905 x4987) (= (x353 (x4555 x2893)) x1182) (not (= 157198259 x4987)) (= x3202 x1388)) x5656) (and (=> (and (and (= x6373 x2978) (= x16 (= x1637 x6373))) (not x5820)) (and (=> (not x16) x4417) (=> (and (and (= x1660 (= x5753 x4034)) (= x2665 x4034)) x16) (and (=> (and x1660 (and (= x5407 (= 0 x6373)) (= x3502 x3202))) (and (=> (and (not x5407) (= x4168 (= 0 x4034))) (and (=> x4168 x4417) (=> (and (and (= (x5195 (x4555 x6373) (x821 0) 0) x2754) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4763) (>= x4763 0) (= x4763 (x3424 x2754)) (= x4877 (< x4763 x3202)) (= x6120 128)) (not x4168)) (and (=> (and (not x4877) (= x4554 (> x3202 x4763))) (and (=> x4554 x4417) (=> (and (not x4554) (and (= (x5195 (x4555 x6373) (x821 0) 0) x2490) (>= x3468 0) (= x4538 (x3726 (- x4763 x3202))) (<= x3468 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1962 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3202))) (= x3468 (x1524 x1624)) (= (< x1962 x3468) x1696) (= (x5195 (x4555 x4034) (x821 0) 0) x1624))) (and (=> (and (and (= (x3844 (+ x3202 x3468)) x3649) (= (< x3649 x3468) x5284)) (not x1696)) (and (=> (and (not x5284) (and (= (x5195 (x4555 x5753) x5461 0) x1293) (= x5337 224) (= x3941 (x5195 (x4555 x4034) (x821 0) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x303) (= x5461 (x5195 (x4555 x6373) (x821 1) 0)) (= x1462 (> x3202 x303)) (= (x2687 x1293) x303) (<= 0 x303))) (and (=> x1462 x4417) (=> (and (not x1462) (= (< x303 x3202) x5603)) (and (=> (and (and (= (= x6373 0) x4172) (= (x3726 (- x303 x3202)) x346)) (not x5603)) (and (=> (and (not x4172) (= x1408 (= x5753 0))) (and (=> x1408 x4417) (=> (and (not x1408) (and (= x4861 1) (= x1354 (x5195 (x4555 x6373) (x821 1) 0)) (= x3142 1) (= x2583 (x5195 (x4555 x5753) x1354 0)) (= x3138 32))) x4829))) (=> x4172 x4417))) (=> x5603 x4417))))) (=> x5284 x4417))) (=> x1696 x4417))))) (=> x4877 x4417))))) (=> x5407 x4417))) (=> (not x1660) x4417))))) (=> x5820 x4417))) (=> (and (not x5656) (= x1379 (= x5489 x1793))) (and (=> (and (not x1379) (= (= x5556 x1793) x658)) (and (=> (and (not x658) (= x1208 (= x1793 x3135))) (and (=> (and (= x1392 (= x1262 x1793)) (not x1208)) (and (=> (and x1392 (and (= x4514 x5753) (> x5544 0) (= x84 x1637) (> 826074471 x5519) (= 100 x3145) (= x1388 x3346) (not (= 117300739 x5519)) (not (= x5519 404098525)) (= x2455 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x444 (x3726 (- x3145 4))) (not (< x3145 4)) (= 100 x3145) (= (or (and (= true (<= x444 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x444)) (> x444 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x211) (= (x353 (x4555 x1262)) x5544) (= x5519 599290589) (not (= x5519 157198259)))) (and (=> (and (not x211) (and (= x4056 x84) (= (= x1637 x84) x6264))) (and (=> (and (and (= (= x4514 x5753) x4920) (= x689 x4514)) x6264) (and (=> (and x4920 (and (= x2514 x3346) (= (> x1388 x1260) x2025) (<= x1260 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4492 (x5195 (x4555 x84) (x821 1) 0)) (= (x5107 x4492) x1260) (<= 0 x1260))) (and (=> x2025 x2156) (=> (and (= (> x3346 x1260) x2145) (not x2025)) (and (=> x2145 x2156) (=> (and (not x2145) (and (= (x5195 (x4555 x4514) (x821 1) 0) x2408) (= x4895 (x5629 x2408)) (= x6076 (< x3631 x4895)) (= x6238 (x5195 (x4555 x84) (x821 1) 0)) (= (x3726 (- x1260 x3346)) x2545) (= x3631 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3346))) (<= 0 x4895) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4895))) (and (=> (and (not x6076) (and (= (x3844 (+ x4895 x3346)) x245) (= x2592 (> x4895 x245)))) (and (=> x2592 x2156) (=> (and (not x2592) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4718) (= x3744 (> x3346 x4718)) (= (x5195 (x4555 x84) (x821 2) 0) x3701) (= x3183 (x5195 (x4555 x5753) x3701 0)) (= (x5195 (x4555 x4514) (x821 1) 0) x6313) (>= x4718 0) (= (x4234 x3183) x4718))) (and (=> (and (= (< x4718 x3346) x5389) (not x3744)) (and (=> x5389 x2156) (=> (and (and (= (x5195 (x4555 x5753) x5050 0) x3003) (= 32 x6328) (= x5846 1) (= x5050 (x5195 (x4555 x84) (x821 2) 0)) (= (x3726 (- x4718 x3346)) x1610)) (not x5389)) x5684))) (=> x3744 x2156))))) (=> x6076 x2156))))))) (=> (not x4920) x2156))) (=> (not x6264) x2156))) (=> x211 x2156))) (=> (and (not x1392) (= x2566 (= x1793 x6182))) (and (=> (and (and (= x5753 x3802) (> x3210 0) (< x1671 826074471) (not (= x1671 404098525)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4770) (not (= x1671 157198259)) (not (= x1671 117300739)) (= 599290589 x1671) (= (x353 (x4555 x6182)) x3210) (= x6263 x1637) (= (or (> x692 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x692) true) (< x692 96))) x2203) (= x3601 100) (= x901 x1388) (not (< x3601 4)) (= x692 (x3726 (- x3601 4))) (= x3601 100)) x2566) (and (=> (and (not x2203) (and (= x4451 x6263) (= (= x1637 x6263) x1016))) (and (=> (not x1016) x286) (=> (and x1016 (and (= x4654 x3802) (= (= x5753 x3802) x4587))) (and (=> (not x4587) x286) (=> (and x4587 (and (= x3510 (> x1388 x2107)) (= (x5195 (x4555 x6263) (x821 1) 0) x1901) (= x5605 x901) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2107) (= x2107 (x4916 x1901)) (<= 0 x2107))) (and (=> x3510 x286) (=> (and (= x759 (< x2107 x901)) (not x3510)) (and (=> x759 x286) (=> (and (not x759) (and (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901)) x4322) (>= x5944 0) (= (< x4322 x5944) x3254) (= x5944 (x5775 x482)) (= (x5195 (x4555 x3802) (x821 1) 0) x482) (= x956 (x3726 (- x2107 x901))) (= x2574 (x5195 (x4555 x6263) (x821 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5944))) (and (=> (and (and (= (> x5944 x885) x6427) (= x885 (x3844 (+ x901 x5944)))) (not x3254)) (and (=> x6427 x286) (=> (and (and (= (x5195 (x4555 x3802) (x821 1) 0) x2237) (= x687 (< x6005 x901)) (= x6005 (x6191 x5654)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6005) (= x1080 (x5195 (x4555 x6263) (x821 2) 0)) (= (x5195 (x4555 x5753) x1080 0) x5654) (>= x6005 0)) (not x6427)) (and (=> (and (not x687) (= (< x6005 x901) x3704)) (and (=> (and (not x3704) (and (= (x5195 (x4555 x5753) x5368 0) x1517) (= x710 1) (= 32 x226) (= (x3726 (- x6005 x901)) x4875) (= x5368 (x5195 (x4555 x6263) (x821 2) 0)))) x5985) (=> x3704 x286))) (=> x687 x286))))) (=> x3254 x286))))))))))) (=> x2203 x286))) (=> (and (not x2566) (= (= x1793 x1411) x4963)) (and (=> (and (and (= 599290589 x5155) (< 0 x1862) (= x1388 x1110) (= x1637 x3906) (= x5753 x4381) (= 100 x540) (< x5155 826074471) (= x906 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (x3726 (- x540 4)) x967) (not (= 404098525 x5155)) (not (= x5155 157198259)) (not (= x5155 117300739)) (= x3364 (or (and (= true (<= x967 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x967 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x967))) (= (x353 (x4555 x1411)) x1862) (= 100 x540) (not (> 4 x540))) x4963) (and (=> x3364 x5267) (=> (and (and (= (= x3906 x1637) x6321) (= x3906 x603)) (not x3364)) (and (=> (not x6321) x5267) (=> (and (and (= x4381 x2329) (= x2119 (= x5753 x4381))) x6321) (and (=> (and x2119 (and (= x1782 (< x4290 x1388)) (= x4290 (x1584 x3544)) (<= 0 x4290) (= x745 x1110) (= x3544 (x5195 (x4555 x3906) (x821 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4290))) (and (=> x1782 x5267) (=> (and (not x1782) (= x4636 (> x1110 x4290))) (and (=> x4636 x5267) (=> (and (and (>= x1197 0) (= x1197 (x2420 x4276)) (= x4031 (< x1703 x1197)) (= x1703 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1110))) (= x5381 (x5195 (x4555 x3906) (x821 1) 0)) (= x1967 (x3726 (- x4290 x1110))) (= x4276 (x5195 (x4555 x4381) (x821 1) 0)) (<= x1197 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x4636)) (and (=> x4031 x5267) (=> (and (and (= (< x1879 x1197) x764) (= x1879 (x3844 (+ x1197 x1110)))) (not x4031)) (and (=> (and (not x764) (and (= x6223 (x5195 (x4555 x4381) (x821 1) 0)) (= (x2757 x4558) x1972) (= x399 (x5195 (x4555 x3906) (x821 2) 0)) (<= x1972 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1972) (= x4558 (x5195 (x4555 x5753) x399 0)) (= (> x1110 x1972) x1753))) (and (=> x1753 x5267) (=> (and (= (> x1110 x1972) x5115) (not x1753)) (and (=> (and (and (= x5716 (x5195 (x4555 x5753) x758 0)) (= 32 x1060) (= x758 (x5195 (x4555 x3906) (x821 2) 0)) (= 1 x3825) (= x5171 (x3726 (- x1972 x1110)))) (not x5115)) x4360) (=> x5115 x5267))))) (=> x764 x5267))))))))) (=> (not x2119) x5267))))))) (=> (and (= x573 (= x1793 x4027)) (not x4963)) (and (=> (and x573 (and (= x3078 100) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x5246) (not (< x3078 4)) (= 599290589 x2088) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x800) true) (> 96 x800)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x800)) x5307) (= x3078 100) (not (= 157198259 x2088)) (= x5753 x1612) (not (= 404098525 x2088)) (= x4999 x1637) (not (= 117300739 x2088)) (= x800 (x3726 (- x3078 4))) (= x1773 x1388) (= x2974 (x353 (x4555 x4027))) (< 0 x2974) (> 826074471 x2088))) (and (=> x5307 x2615) (=> (and (and (= x6212 (= x1637 x4999)) (= x177 x4999)) (not x5307)) (and (=> (not x6212) x2615) (=> (and x6212 (and (= x1612 x4552) (= (= x5753 x1612) x2923))) (and (=> (and (and (= x898 (< x13 x1388)) (= (x6336 x5563) x13) (= x6320 x1773) (<= x13 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x13 0) (= (x5195 (x4555 x4999) (x821 1) 0) x5563)) x2923) (and (=> (and (not x898) (= (> x1773 x13) x187)) (and (=> x187 x2615) (=> (and (not x187) (and (<= x2856 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2856 0) (= (< x3824 x2856) x3409) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1773)) x3824) (= (x5195 (x4555 x1612) (x821 1) 0) x2125) (= (x3726 (- x13 x1773)) x5046) (= x5934 (x5195 (x4555 x4999) (x821 1) 0)) (= (x6154 x2125) x2856))) (and (=> (and (and (= (< x1253 x2856) x4282) (= x1253 (x3844 (+ x2856 x1773)))) (not x3409)) (and (=> (and (not x4282) (and (= (> x1773 x6294) x4809) (= x6294 (x2828 x1314)) (= (x5195 (x4555 x4999) (x821 2) 0) x3651) (<= 0 x6294) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6294) (= x644 (x5195 (x4555 x1612) (x821 1) 0)) (= x1314 (x5195 (x4555 x5753) x3651 0)))) (and (=> (and (= (< x6294 x1773) x4434) (not x4809)) (and (=> (and (not x4434) (and (= x4388 (x3726 (- x6294 x1773))) (= x402 (x5195 (x4555 x5753) x3669 0)) (= 32 x5841) (= x3669 (x5195 (x4555 x4999) (x821 2) 0)) (= x43 1))) x5196) (=> x4434 x2615))) (=> x4809 x2615))) (=> x4282 x2615))) (=> x3409 x2615))))) (=> x898 x2615))) (=> (not x2923) x2615))))))) (=> (and (not x573) (and (and x5348 (and (= x1132 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3129) (and (> 96 x3129) (= true (<= x3129 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1211) (= x1388 x4386) (> x4331 0) (not (= 404098525 x183)) (= (x353 (x4555 x3993)) x4331) (= (x3726 (- x530 4)) x3129) (= x6166 x1637) (= 100 x530) (= x5753 x676) (not (< x530 4)) (= x183 599290589) (not (= 157198259 x183)) (= 100 x530))) (= (= x1793 x3993) x5348))) (and (=> x1132 x1052) (=> (and (and (= x6166 x5364) (= x5768 (= x1637 x6166))) (not x1132)) (and (=> (not x5768) x1052) (=> (and x5768 (and (= x2171 (= x676 x5753)) (= x676 x6009))) (and (=> (and (and (= (x384 x571) x6316) (= x3862 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6316)) (<= 0 x6316) (= x2730 (x5195 (x4555 x6166) (x821 2) 0)) (= (x5195 (x4555 x5753) x2730 0) x571) (<= x6316 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x2171) (and (=> x3862 x2605) (=> (and (and (= (x5195 (x4555 x6166) (x821 2) 0) x1617) (= (> x4386 x1125) x2859) (<= 0 x1125) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1125) (= (x384 x1912) x1125) (= (x5195 (x4555 x5753) x1617 0) x1912)) (not x3862)) (and (=> (and (not x2859) (= x1527 (x3726 (- x1125 x4386)))) x2605) (=> x2859 x1052))))) (=> (not x2171) x1052))))))))))))))) (=> (and (and (= x4504 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x1637 x4993) (not (= x1968 404098525)) (= x6063 (x353 (x4555 x3135))) (= x5753 x1011) (= x4857 (or (> x3882 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3882) true) (> 96 x3882)))) (= x3882 (x3726 (- x4046 4))) (not (= x1968 157198259)) (= x4046 100) (= x1388 x3316) (= x4046 100) (= x1968 599290589) (< 0 x6063) (not (> 4 x4046)) (< x1968 826074471) (not (= 117300739 x1968))) x1208) (and (=> x4857 x3422) (=> (and (not x4857) (and (= x405 x4993) (= x3496 (= x1637 x4993)))) (and (=> (and x3496 (and (= x1011 x4859) (= (= x5753 x1011) x6312))) (and (=> (not x6312) x3422) (=> (and x6312 (and (= x3316 x3873) (= (= 0 x1011) x2560))) (and (=> x2560 x3422) (=> (and (and (= x2606 (x5195 (x4555 x4993) (x821 1) 0)) (<= x3741 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3741 (x3831 x2606)) (>= x3741 0) (= (> x3316 x3741) x5302)) (not x2560)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x232) (= x5672 (x5195 (x4555 x5753) x4017 0)) (= (x6165 x5672) x232) (= x4697 (< x232 x3316)) (= x4017 (x5195 (x4555 x4993) (x821 2) 0)) (>= x232 0)) (not x5302)) (and (=> (and (and (= x780 (> x3316 x3172)) (<= x3172 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x4993) (x821 1) 0) x1313) (= x3172 (x3831 x1313)) (>= x3172 0)) (not x4697)) (and (=> (and (not x780) (and (= x5298 (x5195 (x4555 x4993) (x821 2) 0)) (= (> x3316 x993) x5540) (= x6161 (x5195 (x4555 x5753) x5298 0)) (= (x3726 (- x3172 x3316)) x3025) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x993) (= x1351 (x5195 (x4555 x4993) (x821 1) 0)) (= x993 (x6165 x6161)) (<= 0 x993))) (and (=> (and (not x5540) (and (= (x3726 (- x993 x3316)) x3110) (= x3931 (x5195 (x4555 x4993) (x821 2) 0)) (= (x4334 x4447) x694) (= (> x694 x4607) x5222) (= (x5195 (x4555 x1011) (x821 1) 0) x4447) (<= x694 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x5753) x3931 0) x1039) (<= 0 x694) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3316)) x4607))) (and (=> x5222 x3422) (=> (and (and (= 1 x4665) (= x2271 (x609 128)) (= x1916 32) (= x5527 (x3844 (+ x3316 x694))) (= 1 x1952) (= (x5195 (x4555 x1011) (x821 1) 0) x4227)) (not x5222)) x4241))) (=> x5540 x3422))) (=> x780 x3422))) (=> x4697 x3422))) (=> x5302 x3422))))))) (=> (not x3496) x3422))))))) (=> (and (and (not (= x467 157198259)) (not (= 117300739 x467)) (= 100 x2132) (not (> 4 x2132)) (= x6085 (x353 (x4555 x5556))) (> x6085 0) (= x4267 x1388) (= (x3726 (- x2132 4)) x5931) (= x2132 100) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1732) (= x467 599290589) (not (= x467 404098525)) (= x1878 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5931) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5931) true) (< x5931 96)))) (> 1117154408 x467) (= x3413 x5753) (= x1637 x2302)) x658) (and (=> (and (not x1878) (and (= (= x2302 x1637) x1256) (= x2302 x5952))) (and (=> (not x1256) x5161) (=> (and x1256 (and (= (= x3413 x5753) x2610) (= x3413 x5808))) (and (=> (and (and (= x3265 x4267) (= x4612 (= 0 x3413))) x2610) (and (=> (and (not x4612) (and (= x1466 (x5195 (x4555 x2302) (x821 0) 0)) (>= x396 0) (= x396 (x1299 x1466)) (<= x396 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1384 (< x396 x4267)))) (and (=> x1384 x5161) (=> (and (= x129 (> x4267 x396)) (not x1384)) (and (=> x129 x5161) (=> (and (not x129) (and (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4267)) x4744) (= x2337 (x5195 (x4555 x2302) (x821 0) 0)) (= (x3726 (- x396 x4267)) x2883) (= x3182 (x2138 x1955)) (<= x3182 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3182 0) (= (< x4744 x3182) x5356) (= x1955 (x5195 (x4555 x3413) (x821 0) 0)))) (and (=> (and (and (= x1654 (> x3182 x1727)) (= x1727 (x3844 (+ x3182 x4267)))) (not x5356)) (and (=> (and (not x1654) (and (= x2710 (x5195 (x4555 x2302) (x821 1) 0)) (= (< x5123 x4267) x3566) (>= x5123 0) (= x318 (x5195 (x4555 x5753) x2710 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5123) (= x5123 (x1991 x318)) (= x5796 (x5195 (x4555 x3413) (x821 0) 0)))) (and (=> (and (= x2229 (< x5123 x4267)) (not x3566)) (and (=> (and (not x2229) (and (= (= x5753 0) x4683) (= x2128 (x3726 (- x5123 x4267))))) (and (=> (and (= (= x2302 0) x4193) (not x4683)) (and (=> x4193 x5161) (=> (and (and (= x3897 32) (= x4472 (x5195 (x4555 x5753) x555 0)) (= 1 x4251) (= x555 (x5195 (x4555 x2302) (x821 1) 0)) (= x2663 (x4306 128)) (= 1 x4243)) (not x4193)) x5893))) (=> x4683 x5161))) (=> x2229 x5161))) (=> x3566 x5161))) (=> x1654 x5161))) (=> x5356 x5161))))))) (=> x4612 x5161))) (=> (not x2610) x5161))))) (=> x1878 x5161))))) (=> (and (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1796) (not (= 404098525 x5559)) (= 100 x5262) (= x5262 100) (= x1637 x1593) (= x2381 x1388) (= x1284 (x353 (x4555 x5489))) (= 599290589 x5559) (< x5559 2512374353) (> 953495055 x5559) (= x5753 x795) (= x5505 (x3726 (- x5262 4))) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5505) true) (> 96 x5505)) (> x5505 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4047) (not (> 4 x5262)) (> x1284 0) (not (= 157198259 x5559))) x1379) (and (=> (and (and (= x2953 (= x1637 x1593)) (= x5727 x1593)) (not x4047)) (and (=> (not x2953) x1791) (=> (and (and (= x1178 (= x5753 x795)) (= x795 x2708)) x2953) (and (=> (not x1178) x1791) (=> (and x1178 (and (= x5890 (= x2426 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (>= x2426 0) (= (x5195 (x4555 x1593) (x821 2) 0) x4525) (<= x2426 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x6406 (x5195 (x4555 x5753) x4525 0)) (= (x6353 x6406) x2426))) (and (=> x5890 x1334) (=> (and (not x5890) (and (= (x6353 x5135) x5577) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5577) (= (< x5577 x2381) x562) (<= 0 x5577) (= x521 (x5195 (x4555 x1593) (x821 2) 0)) (= x5135 (x5195 (x4555 x5753) x521 0)))) (and (=> (and (= x4790 (x3726 (- x5577 x2381))) (not x562)) x1334) (=> x562 x1791))))))))) (=> x4047 x1791))))))))) (=> (and x5119 (and (= x5642 (x353 (x4555 x474))) (= x533 599290589) (< x533 1889567281) (= x4598 100) (= x1346 x1388) (not (= 248222656 x533)) (not (> 248222656 x533)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x909) (= (x3726 (- x4598 4)) x5286) (= x5634 (or (and (> 96 x5286) (= true (<= x5286 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x5286 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< x533 669136355) (not (< x4598 4)) (< 0 x5642) (= x4598 100) (= x4557 x5753) (= x763 x1637) (not (= 404098525 x533)))) (and (=> (and (not x5634) (and (= (= x1637 x763) x3561) (= x763 x3856))) (and (=> (and x3561 (and (= x5132 (= x4557 x5753)) (= x4557 x2061))) (and (=> (and x5132 (and (<= 0 x2741) (< x2741 256) (<= x2741 255) (= x2608 (= 0 x2741)) (= x1346 x2729))) (and (=> (not x2608) x2713) (=> (and (and (= x1894 (= 0 x1551)) (= (x5195 (x4555 x763) (x821 6) 0) x5803) (= x1551 (x5038 x5803)) (<= 0 x1551) (> 256 x1551) (<= x1551 255)) x2608) (and (=> (not x1894) x2713) (=> (and x1894 (= x1127 (> 100 x4598))) (and (=> x1127 x2713) (=> (and (not x1127) (and (>= x3672 0) (= (x1605 x5416) x3672) (<= x215 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x763) (x821 5) 0) x5415) (= 10000 x3164) (= x5416 (x5195 (x4555 x5753) x5415 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3672) (>= x215 0) (= x2030 (= x1346 0)))) (and (=> (and (and (= x1227 (= 0 x1567)) (= (ite (not x4415) 1 0) x4178) (= (ite (> x215 x158) 1 0) x5220) (= x158 (x4941 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1346)) (= x4415 (= 0 x2729)) (= (x4950 x4178 x5220) x1567)) (not x2030)) (and (=> (not x1227) x2713) (=> (and x1227 (and (= x3204 (x3060 (x6194 x1346 x215))) (= (< (x6194 x1346 x215) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4567))) (and (=> (and (= x3204 x3795) x4567) x3247) (=> (not x4567) x2713))))) (=> (and x2030 (= x3795 0)) x3247))))))))) (=> (not x5132) x2713))) (=> (not x3561) x2713))) (=> x5634 x2713))))))) (=> (not x861) x4646))))) (=> (and (not x6344) (and (= (= x4281 x4666) x5252) (and x5252 (and (= (x353 (x4555 x4666)) x4139) (= 3600075382 x5037) (not (> 4 x2659)) (= x1005 (x3726 (- x2659 4))) (= 97057840296441966410330255902201960138893160036366920885407767449525406400512 x6119) (= x4619 x6299) (= x1180 x2659) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1005) (and (< x1005 96) (= (<= x1005 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x229) (> x4139 0) (= x2659 100))))) (and (=> (and (not x229) (and (= (= x4619 x1149) x5174) (= x1149 (x4950 1461501637330902918203684832716283019655932542975 x4619)))) (and (=> (not x5174) x5703) (=> (and (and (< x2670 256) (>= x2670 0) (>= 255 x2670) (= (= 255 x2670) x6414)) x5174) (and (=> (and (not x6414) (and (<= x1391 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4422 (x3844 (+ x2670 1))) (<= 0 x1391) (= x1391 (x5660 x4481)) (= (= x1391 0) x6337) (= x5837 (x4950 255 x4422)) (= (x4950 255 x4422) x2214) (= x4481 (x5195 (x4555 x2670) (x821 4) 0)))) (and (=> (and x6337 (and (>= 1461501637330902918203684832716283019655932542975 x3639) (<= 0 x5837) (= x4174 (= 255 x5837)) (>= x3639 0) (< x3639 1461501637330902918203684832716283019655932542976) (>= 255 x5837))) (and (=> (and (not x4174) (and (= x5844 128) (>= x3421 0) (= x1432 (x5195 (x4555 x5837) (x821 4) 0)) (= x3421 (x5660 x1432)) (<= x3421 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2702 (x4950 255 x1581)) (= x10 (= x4793 0)) (= x1581 (x3844 (+ 1 x5837))) (= (x353 (x4555 x3639)) x4793))) (and (=> x10 x5703) (=> (and (and (and (and (and (= x3522 82641394424300342035733052706735002277943222088490025348945809093694544936960) (= x5090 36) (= 3065339685 x3709) (= x5090 36) (= x4582 (x353 (x4555 x5489))) (not (< x3709 3065339685)) (> x4582 0) (not (< x3709 2512374353)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1759) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1759) true) (< x1759 32))) x2322) (not (< x5090 4)) (= x3421 x2744) (= (x3726 (- x5090 4)) x1759)) (or (and (not x2322) (= x589 x2744)) x2322)) x4828) (= (= x5489 x3639) x4828)) (not x10)) x1738))) (=> x4174 x5703))) (=> (and (not x6337) (= x5097 (= 1 x1391))) (and (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x3639) (>= x5837 0) (>= x3639 0) (> 1461501637330902918203684832716283019655932542976 x3639) (>= 255 x5837) (= (= 255 x5837) x4478)) x5097) (and (=> (and (not x4478) (and (= (x3081 x5240) x3869) (>= 255 x4416) (<= 0 x4416) (= (= 255 x4416) x4226) (<= x3869 1461501637330902918203684832716283019655932542975) (<= 0 x3869) (< x3869 1461501637330902918203684832716283019655932542976) (= (x5195 (x4555 x5837) (x821 2) 0) x5240) (= (x3844 (+ x5837 1)) x1695) (= (x4950 255 x1695) x4416))) (and (=> x4226 x5703) (=> (and (not x4226) (and (= x5689 (= x2006 255)) (>= 1461501637330902918203684832716283019655932542975 x5576) (<= x2006 255) (>= x5576 0) (> 1461501637330902918203684832716283019655932542976 x5576) (= (x3081 x6002) x5576) (= x6002 (x5195 (x4555 x4416) (x821 2) 0)) (>= x2006 0) (= (x4950 255 x5680) x2006) (= (x3844 (+ x4416 1)) x5680))) (and (=> x5689 x5703) (=> (and (not x5689) (and (= x103 (x3844 (+ 1 x2006))) (= x4618 (x4950 255 x103)) (= (x5660 x3594) x1780) (= 128 x4579) (>= x1780 0) (= (= x4427 0) x1051) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1780) (= x4427 (x353 (x4555 x3639))) (= x3594 (x5195 (x4555 x2006) (x821 4) 0)))) (and (=> (and (= x5194 (= x3639 x474)) (not x1051)) (and (=> (and (not x5194) (= (= x3639 x3551) x1289)) (and (=> (and (and (= x2436 599290589) (not (= x2436 117300739)) (= x1990 x5576) (not (= 445207142 x2436)) (not (= x2436 157198259)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2602) (= (x353 (x4555 x3551)) x5349) (> 716570693 x2436) (not (< x1922 4)) (= x1922 100) (= (x3726 (- x1922 4)) x1367) (> 2127478272 x2436) (= x1780 x2682) (not (= 404098525 x2436)) (< x2436 903454517) (> x5349 0) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1367) (and (> 96 x1367) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1367) true))) x4924) (= 100 x1922) (= x266 x3869)) x1289) (and (=> (and (= x6250 (= x266 x3869)) (not x4924)) (and (=> (not x6250) x5763) (=> (and x6250 (= x1219 (= x1990 x5576))) (and (=> (not x1219) x5763) (=> (and x1219 (and (= x2682 x736) (<= x5755 255) (<= 0 x5755) (> 256 x5755) (= x4444 (= x5755 0)))) (and (=> (and (and (> 256 x5609) (= x5089 (= x5609 0)) (>= x5609 0) (<= x5609 255) (= (x1578 x2136) x5609) (= (x5195 (x4555 x4666) (x821 3) 0) x2136)) x4444) (and (=> (and (and (>= 255 x6304) (< x6304 256) (>= x6304 0) (= (= x6304 0) x4104) (= (x5195 (x4555 x3869) (x821 3) 0) x4505) (= x6304 (x1578 x4505))) x5089) (and (=> (and (and (>= x5998 0) (= x5998 (x1578 x948)) (= (x5195 (x4555 x5576) (x821 3) 0) x948) (< x5998 256) (<= x5998 255) (= x5243 (= 0 x5998))) x4104) (and (=> (not x5243) x5763) (=> (and x5243 (and (<= x2803 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x2682 x2803) x5683) (= (x5195 (x4555 x3869) (x821 10) 0) x3482) (= x965 (x5195 (x4555 x4666) x3482 0)) (<= 0 x2803) (= (x4635 x965) x2803))) (and (=> (and (= (= x3869 0) x2681) (not x5683)) (and (=> x2681 x5763) (=> (and (= (= 0 x5576) x364) (not x2681)) (and (=> x364 x5763) (=> (and (not x364) (and (= x3099 (x5195 (x4555 x3869) (x821 9) 0)) (<= 0 x2887) (= (x1281 x3099) x2887) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2887) (= x214 (> x2682 x2887)))) (and (=> (and (and (= (x1281 x607) x1400) (<= 0 x1400) (= x3769 128) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1400) (= x2202 (> x2682 x1400)) (= (x5195 (x4555 x3869) (x821 9) 0) x607)) (not x214)) (and (=> x2202 x5763) (=> (and (not x2202) (= (> x2682 x1400) x2584)) (and (=> x2584 x5763) (=> (and (and (= (x5195 (x4555 x5576) (x821 9) 0) x6185) (= (x5195 (x4555 x3869) (x821 9) 0) x2937) (<= x4186 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4186 (x5306 x6185)) (= (x3726 (- x1400 x2682)) x6162) (= (> x4186 x1623) x959) (= x1623 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2682))) (<= 0 x4186)) (not x2584)) (and (=> x959 x5763) (=> (and (and (= x4848 (> x4186 x5857)) (= (x3844 (+ x2682 x4186)) x5857)) (not x959)) (and (=> (and (not x4848) (and (= x6281 (x4635 x3538)) (= (< x6281 x2682) x1830) (>= x6281 0) (= x3538 (x5195 (x4555 x4666) x1193 0)) (= 192 x2356) (<= x6281 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1193 (x5195 (x4555 x3869) (x821 10) 0)) (= x2947 (x5195 (x4555 x5576) (x821 9) 0)))) (and (=> (and (not x1830) (= (> x2682 x6281) x5015)) (and (=> x5015 x5763) (=> (and (not x5015) (and (= (x3726 (- x6281 x2682)) x3592) (= x5034 1) (= (x5195 (x4555 x4666) x1523 0) x4811) (= x910 32) (= (x5195 (x4555 x3869) (x821 10) 0) x1523))) x6409))) (=> x1830 x5763))) (=> x4848 x5763))))))))) (=> x214 x5763))))))) (=> x5683 x5763))))) (=> (not x4104) x5763))) (=> (not x5089) x5763))) (=> (not x4444) x5763))))))) (=> x4924 x5763))) (=> (and (= (= x2893 x3639) x4257) (not x1289)) (and (=> (and (= x3017 (= x3639 x5489)) (not x4257)) (and (=> (and (and (not (> 4 x4584)) (= (x353 (x4555 x5489)) x5819) (= 100 x4584) (< x6104 2512374353) (not (= x6104 157198259)) (< 0 x5819) (= 100 x4584) (= x3621 x5576) (= x1780 x4223) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4240) (and (< x4240 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4240) true))) x1739) (= 599290589 x6104) (not (= x6104 404098525)) (= x1171 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< x6104 953495055) (= (x3726 (- x4584 4)) x4240) (= x3869 x4092)) x3017) (and (=> (and (= x785 (= x3869 x4092)) (not x1739)) (and (=> (and x785 (= x1266 (= x3621 x5576))) (and (=> (and (and (<= x109 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x109 (x6353 x5455)) (= x5455 (x5195 (x4555 x4666) x2731 0)) (<= 0 x109) (= x2731 (x5195 (x4555 x3869) (x821 2) 0)) (= x1745 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x109))) x1266) (and (=> x1745 x218) (=> (and (not x1745) (and (>= x2471 0) (= x3640 (x5195 (x4555 x4666) x4128 0)) (= x4128 (x5195 (x4555 x3869) (x821 2) 0)) (= (< x2471 x4223) x81) (= x2471 (x6353 x3640)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2471))) (and (=> x81 x2238) (=> (and (not x81) (= (x3726 (- x2471 x4223)) x5331)) x218))))) (=> (not x1266) x2238))) (=> (not x785) x2238))) (=> x1739 x2238))) (=> (and (not x3017) (= x3647 (= x3639 x5556))) (and (=> (and (= x1755 (= x3639 x3135)) (not x3647)) (and (=> (and x1755 (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4639) (not (= x1259 157198259)) (= (or (and (> 96 x1801) (= true (<= x1801 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1801)) x1893) (< x1259 826074471) (not (< x2881 4)) (not (= x1259 404098525)) (= 100 x2881) (= (x3726 (- x2881 4)) x1801) (not (= 117300739 x1259)) (> x443 0) (= x4868 x5576) (= 100 x2881) (= (x353 (x4555 x3135)) x443) (= x1151 x1780) (= x253 x3869) (= x1259 599290589))) (and (=> (and (not x1893) (= (= x3869 x253) x6289)) (and (=> (and x6289 (= x2600 (= x5576 x4868))) (and (=> (not x2600) x3393) (=> (and (and (= (= 0 x5576) x2105) (= x6132 x1151)) x2600) (and (=> x2105 x3393) (=> (and (not x2105) (and (= (> x1151 x2952) x5744) (= x6244 (x5195 (x4555 x3869) (x821 1) 0)) (= x2952 (x3831 x6244)) (>= x2952 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2952))) (and (=> x5744 x3393) (=> (and (and (= (> x1151 x4581) x1728) (= (x5195 (x4555 x3869) (x821 2) 0) x3894) (>= x4581 0) (= (x6165 x711) x4581) (= x711 (x5195 (x4555 x4666) x3894 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4581)) (not x5744)) (and (=> x1728 x3393) (=> (and (and (= (x5195 (x4555 x3869) (x821 1) 0) x484) (<= 0 x3150) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3150) (= (< x3150 x1151) x4060) (= (x3831 x484) x3150)) (not x1728)) (and (=> x4060 x3393) (=> (and (and (= (x5195 (x4555 x4666) x4023 0) x4892) (= x4291 (> x1151 x381)) (<= x381 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3726 (- x3150 x1151)) x2811) (>= x381 0) (= (x5195 (x4555 x3869) (x821 2) 0) x4023) (= (x5195 (x4555 x3869) (x821 1) 0) x4188) (= (x6165 x4892) x381)) (not x4060)) (and (=> x4291 x3393) (=> (and (not x4291) (and (= (< x2882 x3459) x6124) (= x4225 (x3726 (- x381 x1151))) (= (x5195 (x4555 x3869) (x821 2) 0) x1641) (= (x5195 (x4555 x4666) x1641 0) x3666) (= x1905 (x5195 (x4555 x5576) (x821 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3459) (= x2882 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1151))) (>= x3459 0) (= (x5473 x1905) x3459))) (and (=> (and (not x6124) (and (= 1 x4726) (= (x1807 128) x4518) (= 1 x2020) (= 32 x6258) (= (x3844 (+ x3459 x1151)) x949) (= x4876 (x5195 (x4555 x5576) (x821 1) 0)))) x3548) (=> x6124 x3393))))))))))))))) (=> (not x6289) x3393))) (=> x1893 x3393))) (=> (and (not x1755) (= x6065 (= x1262 x3639))) (and (=> (and (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x15) (not (= 117300739 x4392)) (> 826074471 x4392) (= 100 x5226) (not (= 157198259 x4392)) (= x5576 x422) (= x5226 100) (not (= 404098525 x4392)) (not (> 4 x5226)) (= x2294 x3869) (= (x353 (x4555 x1262)) x1485) (= (or (and (= (<= x4373 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x4373)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4373)) x2071) (> x1485 0) (= x1780 x5502) (= 599290589 x4392) (= x4373 (x3726 (- x5226 4)))) x6065) (and (=> (and (= x4192 (= x3869 x2294)) (not x2071)) (and (=> (not x4192) x3474) (=> (and (= x488 (= x422 x5576)) x4192) (and (=> (and (and (= x1845 (x5107 x811)) (= x258 (< x1845 x1780)) (= (x5195 (x4555 x3869) (x821 1) 0) x811) (<= x1845 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1845 0) (= x5778 x5502)) x488) (and (=> (and (not x258) (= (< x1845 x5502) x3928)) (and (=> (and (not x3928) (and (>= x4764 0) (= (> x4764 x3784) x1776) (= x3784 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5502))) (= x450 (x5195 (x4555 x3869) (x821 1) 0)) (<= x4764 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4764 (x5777 x6252)) (= x4219 (x3726 (- x1845 x5502))) (= (x5195 (x4555 x5576) (x821 1) 0) x6252))) (and (=> x1776 x3474) (=> (and (not x1776) (and (= (> x4764 x1710) x87) (= x1710 (x3844 (+ x5502 x4764))))) (and (=> (and (and (= (< x3757 x5502) x2685) (<= 0 x3757) (= (x4234 x1847) x3757) (= x4803 (x5195 (x4555 x5576) (x821 1) 0)) (= (x5195 (x4555 x3869) (x821 2) 0) x4928) (= (x5195 (x4555 x4666) x4928 0) x1847) (<= x3757 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x87)) (and (=> x2685 x3474) (=> (and (not x2685) (= x4248 (< x3757 x5502))) (and (=> x4248 x3474) (=> (and (not x4248) (and (= (x5195 (x4555 x4666) x2691 0) x6179) (= (x5195 (x4555 x3869) (x821 2) 0) x2691) (= x412 1) (= 32 x2776) (= (x3726 (- x3757 x5502)) x5040))) x1864))))) (=> x87 x3474))))) (=> x3928 x3474))) (=> x258 x3474))) (=> (not x488) x3474))))) (=> x2071 x3474))) (=> (and (= x1789 (= x6182 x3639)) (not x6065)) (and (=> (and x1789 (and (= x1780 x3960) (= x2479 x3869) (< x4089 826074471) (< 0 x1117) (= x5576 x4953) (= x4089 599290589) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1494) (= (x3726 (- x5756 4)) x5615) (= 100 x5756) (= x5756 100) (not (= x4089 404098525)) (= x1117 (x353 (x4555 x6182))) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5615)) (> 96 x5615)) (> x5615 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4818) (not (= 157198259 x4089)) (not (< x5756 4)) (not (= x4089 117300739)))) (and (=> x4818 x6209) (=> (and (not x4818) (= (= x3869 x2479) x3724)) (and (=> (not x3724) x6209) (=> (and x3724 (= x6225 (= x5576 x4953))) (and (=> (not x6225) x6209) (=> (and (and (= (x4916 x6216) x4729) (= x3960 x634) (<= x4729 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4676 (> x1780 x4729)) (= x6216 (x5195 (x4555 x3869) (x821 1) 0)) (>= x4729 0)) x6225) (and (=> (and (= (> x3960 x4729) x3900) (not x4676)) (and (=> (and (not x3900) (and (= (x3726 (- x4729 x3960)) x2492) (= (x5195 (x4555 x5576) (x821 1) 0) x2424) (= x3156 (< x5312 x5548)) (= x5548 (x2945 x2424)) (<= 0 x5548) (= (x5195 (x4555 x3869) (x821 1) 0) x4925) (= x5312 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3960))) (<= x5548 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x3156 x6209) (=> (and (not x3156) (and (= x2324 (x3844 (+ x3960 x5548))) (= (> x5548 x2324) x2720))) (and (=> (and (not x2720) (and (= (x5195 (x4555 x5576) (x821 1) 0) x1906) (<= x324 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x3869) (x821 2) 0) x366) (= x2954 (x5195 (x4555 x4666) x366 0)) (= x3668 (> x3960 x324)) (= x324 (x6191 x2954)) (<= 0 x324))) (and (=> x3668 x6209) (=> (and (= x1448 (> x3960 x324)) (not x3668)) (and (=> x1448 x6209) (=> (and (and (= 1 x1210) (= (x5195 (x4555 x3869) (x821 2) 0) x4640) (= 32 x2280) (= x6190 (x5195 (x4555 x4666) x4640 0)) (= x2644 (x3726 (- x324 x3960)))) (not x1448)) x4517))))) (=> x2720 x6209))))) (=> x3900 x6209))) (=> x4676 x6209))))))))) (=> (and (= (= x3639 x1411) x663) (not x1789)) (and (=> (and (= (= x4027 x3639) x1614) (not x663)) (and (=> (and x1614 (and (= 100 x431) (= 100 x431) (= x1780 x1129) (= x5576 x4930) (< x273 826074471) (not (= 157198259 x273)) (= x273 599290589) (= (or (> x5695 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5695) true) (> 96 x5695))) x4459) (= x5695 (x3726 (- x431 4))) (not (= x273 404098525)) (= x3869 x3001) (not (< x431 4)) (= (x353 (x4555 x4027)) x2074) (not (= 117300739 x273)) (> x2074 0) (= x5742 16156842317565293874272834530371880720966471053262404558597773956279093428224))) (and (=> (and (= (= x3869 x3001) x3062) (not x4459)) (and (=> (not x3062) x1278) (=> (and (= x4805 (= x5576 x4930)) x3062) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5399) (<= 0 x5399) (= (> x1780 x5399) x1685) (= (x5195 (x4555 x3869) (x821 1) 0) x3682) (= x1129 x1276) (= (x6336 x3682) x5399)) x4805) (and (=> x1685 x1278) (=> (and (not x1685) (= x2433 (> x1129 x5399))) (and (=> (and (not x2433) (and (= (> x1620 x2847) x5826) (= x4595 (x5195 (x4555 x3869) (x821 1) 0)) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1129)) x2847) (= x6000 (x5195 (x4555 x5576) (x821 1) 0)) (= (x138 x6000) x1620) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1620) (= x5982 (x3726 (- x5399 x1129))) (>= x1620 0))) (and (=> (and (not x5826) (and (= (> x1620 x4337) x79) (= x4337 (x3844 (+ x1129 x1620))))) (and (=> x79 x1278) (=> (and (and (>= x4985 0) (= (< x4985 x1129) x1883) (<= x4985 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x5576) (x821 1) 0) x2841) (= (x2828 x4426) x4985) (= (x5195 (x4555 x4666) x5314 0) x4426) (= x5314 (x5195 (x4555 x3869) (x821 2) 0))) (not x79)) (and (=> (and (not x1883) (= x2041 (> x1129 x4985))) (and (=> (and (not x2041) (and (= x722 32) (= (x5195 (x4555 x4666) x5625 0) x5602) (= x4799 1) (= x5625 (x5195 (x4555 x3869) (x821 2) 0)) (= x6426 (x3726 (- x4985 x1129))))) x3412) (=> x2041 x1278))) (=> x1883 x1278))))) (=> x5826 x1278))) (=> x2433 x1278))))) (=> (not x4805) x1278))))) (=> x4459 x1278))) (=> (and (not x1614) (and (= (= x3993 x3639) x737) (and (and (= x2546 (or (> x6013 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x6013) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6013))))) (not (= x3673 157198259)) (> x2577 0) (not (= x3673 404098525)) (= 599290589 x3673) (= x2577 (x353 (x4555 x3993))) (= x3677 100) (not (< x3677 4)) (= x4110 x3869) (= x2894 x5576) (= x999 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3677 100) (= x1780 x5965) (= x6013 (x3726 (- x3677 4)))) x737))) (and (=> x2546 x6273) (=> (and (= x2778 (= x4110 x3869)) (not x2546)) (and (=> (and (= (= x5576 x2894) x871) x2778) (and (=> (and (and (= (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3137) x1616) (= (x384 x2517) x3137) (= x5186 (x5195 (x4555 x3869) (x821 2) 0)) (<= x3137 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x4666) x5186 0) x2517) (>= x3137 0)) x871) (and (=> (and (and (>= x2179 0) (= (x5195 (x4555 x3869) (x821 2) 0) x2957) (= (x384 x6241) x2179) (= x359 (> x5965 x2179)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2179) (= x6241 (x5195 (x4555 x4666) x2957 0))) (not x1616)) (and (=> x359 x6273) (=> (and (not x359) (= x3363 (x3726 (- x2179 x5965)))) x4638))) (=> x1616 x4638))) (=> (not x871) x6273))) (=> (not x2778) x6273))))))) (=> (and x663 (and (not (= x3755 117300739)) (= 100 x3085) (< 0 x5941) (= x3755 599290589) (not (< x3085 4)) (= x3869 x5118) (= (or (and (= true (<= x5854 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x5854 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5854)) x2003) (= x5576 x5020) (not (= 404098525 x3755)) (= x5854 (x3726 (- x3085 4))) (= x5941 (x353 (x4555 x1411))) (= x3623 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= 157198259 x3755)) (= x2628 x1780) (< x3755 826074471) (= 100 x3085))) (and (=> x2003 x3916) (=> (and (= (= x3869 x5118) x1224) (not x2003)) (and (=> (not x1224) x3916) (=> (and x1224 (= x4669 (= x5576 x5020))) (and (=> (and (and (= (x1584 x5550) x4024) (= (> x1780 x4024) x3049) (= x2628 x4441) (<= 0 x4024) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4024) (= x5550 (x5195 (x4555 x3869) (x821 1) 0))) x4669) (and (=> x3049 x3916) (=> (and (not x3049) (= x2151 (< x4024 x2628))) (and (=> x2151 x3916) (=> (and (and (= (x3726 (- x4024 x2628)) x1803) (= x3787 (> x1090 x2634)) (= x1369 (x5195 (x4555 x5576) (x821 1) 0)) (<= 0 x1090) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2628)) x2634) (= (x5195 (x4555 x3869) (x821 1) 0) x1587) (= (x310 x1369) x1090) (<= x1090 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x2151)) (and (=> (and (not x3787) (and (= x5677 (x3844 (+ x2628 x1090))) (= x1741 (> x1090 x5677)))) (and (=> x1741 x3916) (=> (and (and (= (> x2628 x4689) x1107) (= x442 (x5195 (x4555 x4666) x1877 0)) (= x1877 (x5195 (x4555 x3869) (x821 2) 0)) (<= 0 x4689) (= x4689 (x2757 x442)) (= x2680 (x5195 (x4555 x5576) (x821 1) 0)) (<= x4689 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1741)) (and (=> x1107 x3916) (=> (and (= x651 (> x2628 x4689)) (not x1107)) (and (=> (and (and (= (x5195 (x4555 x3869) (x821 2) 0) x2133) (= x2065 1) (= (x5195 (x4555 x4666) x2133 0) x3269) (= 32 x1790) (= (x3726 (- x4689 x2628)) x4863)) (not x651)) x193) (=> x651 x3916))))))) (=> x3787 x3916))))))) (=> (not x4669) x3916))))))))))))))) (=> (and x3647 (and (not (< x1068 4)) (= x6334 x1780) (= x4321 (x353 (x4555 x5556))) (= (x3726 (- x1068 4)) x868) (> x4321 0) (= 599290589 x475) (not (= x475 404098525)) (= x5507 x5576) (= 100 x1068) (= x1068 100) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x868) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x868) true) (< x868 96))) x1697) (not (= x475 157198259)) (not (= 117300739 x475)) (= x4054 x3869) (< x475 1117154408) (= x1187 16156842317565293874272834530371880720966471053262404558597773956279093428224))) (and (=> (and (not x1697) (= x3276 (= x4054 x3869))) (and (=> (not x3276) x5091) (=> (and (= x4772 (= x5576 x5507)) x3276) (and (=> (not x4772) x5091) (=> (and (and (= x6334 x1730) (= (= 0 x5576) x4367)) x4772) (and (=> (and (and (= (x1299 x1101) x1500) (= x601 (< x1500 x6334)) (>= x1500 0) (= (x5195 (x4555 x3869) (x821 0) 0) x1101) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1500)) (not x4367)) (and (=> (and (not x601) (= x2562 (< x1500 x6334))) (and (=> (and (not x2562) (and (= (x5195 (x4555 x5576) (x821 0) 0) x1070) (= (x2975 x1070) x4852) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4852) (= x3791 (x5195 (x4555 x3869) (x821 0) 0)) (>= x4852 0) (= (x3726 (- x1500 x6334)) x4531) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6334)) x4431) (= x1443 (> x4852 x4431)))) (and (=> x1443 x5091) (=> (and (not x1443) (and (= x1468 (< x2293 x4852)) (= (x3844 (+ x4852 x6334)) x2293))) (and (=> x1468 x5091) (=> (and (not x1468) (and (= x872 (x5195 (x4555 x3869) (x821 1) 0)) (= x104 (x1991 x5861)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x104) (= (> x6334 x104) x2149) (<= 0 x104) (= x2780 (x5195 (x4555 x5576) (x821 0) 0)) (= x5861 (x5195 (x4555 x4666) x872 0)))) (and (=> (and (= x863 (< x104 x6334)) (not x2149)) (and (=> (and (and (= x6030 (x3726 (- x104 x6334))) (= (= 0 x4666) x3396)) (not x863)) (and (=> (and (= x2364 (= 0 x3869)) (not x3396)) (and (=> x2364 x5091) (=> (and (not x2364) (and (= x3041 (x5195 (x4555 x4666) x924 0)) (= 1 x4767) (= 32 x5787) (= (x3778 128) x130) (= x1251 1) (= (x5195 (x4555 x3869) (x821 1) 0) x924))) x4028))) (=> x3396 x5091))) (=> x863 x5091))) (=> x2149 x5091))))))) (=> x2562 x5091))) (=> x601 x5091))) (=> x4367 x5091))))))) (=> x1697 x5091))))))) (=> (and x4257 (and (not (= x2001 157198259)) (= (or (> x3945 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3945) true) (> 96 x3945))) x5007) (< 0 x2603) (not (< x2612 4)) (not (= x2001 543189872)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2372) (= x2612 100) (not (= 117300739 x2001)) (= x105 x3869) (< x2001 1901074598) (= (x353 (x4555 x2893)) x2603) (= (x3726 (- x2612 4)) x3945) (= x2001 599290589) (not (= x2001 404098525)) (= x3929 x5576) (= x4785 x1780) (= x2612 100) (> 961581905 x2001))) (and (=> (and (not x5007) (= x4490 (= x3869 x105))) (and (=> (not x4490) x3407) (=> (and x4490 (= x2674 (= x5576 x3929))) (and (=> (not x2674) x3407) (=> (and (and (= (= 0 x3869) x3052) (= x2724 x4785)) x2674) (and (=> x3052 x3407) (=> (and (= (= 0 x5576) x6391) (not x3052)) (and (=> x6391 x3407) (=> (and (not x6391) (and (= (> x4785 x4902) x1711) (= x4902 (x3424 x2269)) (= (x5195 (x4555 x3869) (x821 0) 0) x2269) (= 128 x6040) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4902) (>= x4902 0))) (and (=> (and (not x1711) (= (< x4902 x4785) x2792)) (and (=> (and (not x2792) (and (= x4380 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4785))) (= (x5195 (x4555 x3869) (x821 0) 0) x1529) (<= 0 x2060) (= (> x2060 x4380) x71) (= (x1121 x3521) x2060) (= x3521 (x5195 (x4555 x5576) (x821 0) 0)) (= x4706 (x3726 (- x4902 x4785))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2060))) (and (=> x71 x3407) (=> (and (and (= (x3844 (+ x2060 x4785)) x1350) (= (< x1350 x2060) x4753)) (not x71)) (and (=> (and (not x4753) (and (= x6286 (x2687 x4095)) (= (x5195 (x4555 x5576) (x821 0) 0) x4591) (= (> x4785 x6286) x4609) (= (x5195 (x4555 x4666) x2671 0) x4095) (= x5268 224) (<= 0 x6286) (<= x6286 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x3869) (x821 1) 0) x2671))) (and (=> (and (not x4609) (= x179 (> x4785 x6286))) (and (=> x179 x3407) (=> (and (and (= (= 0 x3869) x209) (= (x3726 (- x6286 x4785)) x2423)) (not x179)) (and (=> x209 x3407) (=> (and (= (= 0 x4666) x4396) (not x209)) (and (=> x4396 x3407) (=> (and (not x4396) (and (= 1 x113) (= 1 x4658) (= x2906 (x5195 (x4555 x4666) x2270 0)) (= x2270 (x5195 (x4555 x3869) (x821 1) 0)) (= x1648 32))) x3341))))))) (=> x4609 x3407))) (=> x4753 x3407))))) (=> x2792 x3407))) (=> x1711 x3407))))))))))) (=> x5007 x3407))))))) (=> (and x5194 (and (not (< x981 4)) (not (= x5470 248222656)) (< x5470 669136355) (= x3051 x5576) (= x1780 x2533) (= 100 x981) (= 599290589 x5470) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4329) (and (< x4329 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4329)))) x4271) (> x6180 0) (= (x353 (x4555 x474)) x6180) (= (x3726 (- x981 4)) x4329) (not (> 248222656 x5470)) (= x3723 x3869) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x572) (= 100 x981) (> 1889567281 x5470) (not (= 404098525 x5470)))) (and (=> (and (= x5459 (= x3723 x3869)) (not x4271)) (and (=> (and (= x5051 (= x5576 x3051)) x5459) (and (=> (and (and (< x2741 256) (= (= 0 x2741) x4173) (= x3834 x2533) (>= 255 x2741) (<= 0 x2741)) x5051) (and (=> (and (and (> 256 x5128) (= x1395 (x5195 (x4555 x3869) (x821 6) 0)) (= x2809 (= x5128 0)) (<= x5128 255) (>= x5128 0) (= (x5038 x1395) x5128)) x4173) (and (=> (not x2809) x5245) (=> (and (= (> 100 x981) x39) x2809) (and (=> (and (and (= x2912 (= 0 x2533)) (<= x215 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x215 0) (<= x5463 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1605 x2575) x5463) (= (x5195 (x4555 x4666) x1366 0) x2575) (= x1366 (x5195 (x4555 x3869) (x821 5) 0)) (<= 0 x5463) (= 10000 x6054)) (not x39)) (and (=> (and (not x2912) (and (= (x4950 x933 x2909) x5237) (= x4070 (= x3834 0)) (= (ite (< x951 x215) 1 0) x2909) (= x3080 (= 0 x5237)) (= (ite (not x4070) 1 0) x933) (= (x4941 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2533) x951))) (and (=> (not x3080) x5245) (=> (and x3080 (and (= (x3060 (x6194 x2533 x215)) x4960) (= (< (x6194 x2533 x215) 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2123))) (and (=> (and (= x4960 x6243) x2123) x3186) (=> (not x2123) x5245))))) (=> (and x2912 (= x6243 0)) x3186))) (=> x39 x5245))))) (=> (not x4173) x5245))) (=> (not x5051) x5245))) (=> (not x5459) x5245))) (=> x4271 x5245))))) (=> x1051 x5703))))))) (=> x4478 x5703))) (=> (and (= x1634 (= x1391 2)) (not x5097)) (and (=> (and (not x1634) (= (= x1391 3) x706)) (and (=> (and (not x706) (= (= 4 x1391) x1619)) (and (=> (not x1619) x4605) (=> (and (and (= x1361 (= x5837 255)) (<= 0 x5837) (>= 1461501637330902918203684832716283019655932542975 x3639) (>= x3639 0) (> 1461501637330902918203684832716283019655932542976 x3639) (>= 255 x5837)) x1619) (and (=> x1361 x5703) (=> (and (and (= (x3844 (+ 1 x5837)) x1651) (= x2016 (= 255 x4771)) (= x1910 (x5195 (x4555 x5837) (x821 2) 0)) (>= 255 x4771) (= x552 (x3081 x1910)) (>= x552 0) (> 1461501637330902918203684832716283019655932542976 x552) (<= x552 1461501637330902918203684832716283019655932542975) (= x4771 (x4950 255 x1651)) (>= x4771 0)) (not x1361)) (and (=> (and (and (= x2476 128) (= x783 (x4950 255 x2442)) (= (x353 (x4555 x3639)) x1048) (<= x2772 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3844 (+ x4771 1)) x2442) (= x5805 (= x1048 0)) (= x2772 (x5660 x2766)) (<= 0 x2772) (= (x5195 (x4555 x4771) (x821 4) 0) x2766)) (not x2016)) (and (=> x5805 x5703) (=> (and (= (= x3639 x474) x6265) (not x5805)) (and (=> (and x6265 (and (> x88 0) (= x5643 68) (= 68 x5643) (< x5810 1889567281) (not (> 4 x5643)) (< x5810 669136355) (= (x3726 (- x5643 4)) x5562) (< x5810 248222656) (= x3504 x2772) (= (or (> x5562 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x5562 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x5562))) x5521) (= x5810 157198259) (= x6112 x552) (= x88 (x353 (x4555 x474))) (= x646 4238056678808933066457772256406219440718756300954938350892797929791311314944) (not (= 122929932 x5810)) (not (= x5810 117300739)))) (and (=> x5521 x5443) (=> (and (not x5521) (= (= x552 x6112) x3671)) (and (=> (not x3671) x5443) (=> (and (and (= x3504 x6343) (= x5173 (< x5643 68))) x3671) (and (=> x5173 x5443) (=> (and (= x5871 (> 68 x5643)) (not x5173)) (and (=> x5871 x5443) (=> (and (not x5871) (and (= x5266 (not (= x6343 0))) (or (and (not x5266) (= x5266 x5460)) (and x5266 (and (= (x5195 (x4555 x552) x6282 0) x1128) (= (not x2217) x5460) (>= x256 0) (= (x5195 (x4555 x4666) (x821 5) 0) x6282) (= (x1605 x1128) x256) (= x2217 (= x256 0)) (<= x256 115792089237316195423570985008687907853269984665640564039457584007913129639935)))))) x2867))))))))) (=> (and (= x4506 (= x3639 x3551)) (not x6265)) (and (=> (and x4506 (and (< 0 x4363) (= x2340 68) (> 903454517 x375) (= 68 x2340) (> 2127478272 x375) (= x552 x4430) (not (= x375 117300739)) (< x375 716570693) (= (x353 (x4555 x3551)) x4363) (= 157198259 x375) (= x5739 (x3726 (- x2340 4))) (= x2772 x2666) (= x6350 (or (> x5739 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x5739) (= true (<= x5739 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x1122 4238056678808933066457772256406219440718756300954938350892797929791311314944) (not (< x2340 4)))) (and (=> (and (= x1716 (= x4430 x552)) (not x6350)) (and (=> (and (and (= x3019 x2666) (<= x5755 255) (= x5376 (= 0 x5755)) (> 256 x5755) (>= x5755 0)) x1716) (and (=> (not x5376) x4344) (=> (and (and (>= 255 x1850) (= x1850 (x1578 x378)) (= x378 (x5195 (x4555 x4666) (x821 3) 0)) (<= 0 x1850) (< x1850 256) (= x4627 (= x1850 0))) x5376) (and (=> (and x4627 (and (= x4663 (= x3123 0)) (= (x5195 (x4555 x552) (x821 3) 0) x2157) (= x3123 (x1578 x2157)) (<= x3123 255) (< x3123 256) (>= x3123 0))) (and (=> (not x4663) x4344) (=> (and (= x1768 (= 0 x4666)) x4663) (and (=> x1768 x4344) (=> (and (= x1082 (= 0 x552)) (not x1768)) (and (=> x1082 x4344) (=> (and (and (= x1783 (x5195 (x4555 x552) x5632 0)) (= (x3350 128) x6370) (= 1 x219) (= x5632 (x5195 (x4555 x4666) (x821 10) 0)) (= 32 x1574)) (not x1082)) x3597))))))) (=> (not x4627) x4344))))) (=> (not x1716) x4344))) (=> x6350 x4344))) (=> (and (not x4506) (= (= x3639 x2893) x1240)) (and (=> (and (= (= x3639 x5489) x5694) (not x1240)) (and (=> (and x5694 (and (= x2772 x796) (= 68 x1447) (= (x3726 (- x1447 4)) x2872) (= x552 x1152) (not (< x1447 4)) (= (or (and (= (<= x2872 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x2872)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2872)) x2122) (= x1482 4238056678808933066457772256406219440718756300954938350892797929791311314944) (> 953495055 x2994) (= 157198259 x2994) (= (x353 (x4555 x5489)) x4745) (< 0 x4745) (= 68 x1447) (< x2994 2512374353))) (and (=> (and (= (= x1152 x552) x1891) (not x2122)) (and (=> (not x1891) x4250) (=> (and (and (= 1 x342) (= (x5195 (x4555 x552) x1530 0) x5410) (= x1026 32) (= (x5195 (x4555 x4666) (x821 2) 0) x1530) (= x2679 x796)) x1891) x5708))) (=> x2122 x4250))) (=> (and (= (= x3639 x5556) x4955) (not x5694)) (and (=> (and (not x4955) (= (= x3135 x3639) x3539)) (and (=> (and (= x3695 (= x1262 x3639)) (not x3539)) (and (=> (and x3695 (and (= x4302 68) (= x552 x5532) (> 826074471 x5138) (= x5129 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= x1929 x2772) (= (x353 (x4555 x1262)) x5353) (= x1715 (x3726 (- x4302 4))) (not (= 117300739 x5138)) (= 68 x4302) (= x5138 157198259) (not (< x4302 4)) (< 0 x5353) (= (or (and (< x1715 64) (= true (<= x1715 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1715 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x6217))) (and (=> (and (not x6217) (= x2163 (= x552 x5532))) (and (=> (not x2163) x3143) (=> (and (and (= 1 x3920) (= x6254 (x5195 (x4555 x4666) (x821 2) 0)) (= (x5195 (x4555 x552) x6254 0) x6292) (= 32 x6078) (= x1430 x1929)) x2163) x2984))) (=> x6217 x3143))) (=> (and (= (= x6182 x3639) x2062) (not x3695)) (and (=> (and (and (= x1282 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5464)) (> 64 x5464)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5464))) (= x3115 157198259) (= x2772 x2390) (= x5260 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= x2576 68) (> 826074471 x3115) (< 0 x2899) (not (= x3115 117300739)) (= 68 x2576) (= (x353 (x4555 x6182)) x2899) (= x552 x611) (not (< x2576 4)) (= x5464 (x3726 (- x2576 4)))) x2062) (and (=> x1282 x5347) (=> (and (not x1282) (= (= x552 x611) x2878)) (and (=> (and (and (= x5963 (x5195 (x4555 x4666) (x821 2) 0)) (= 32 x970) (= (x5195 (x4555 x552) x5963 0) x6001) (= 1 x4690) (= x3190 x2390)) x2878) x5361) (=> (not x2878) x5347))))) (=> (and (= (= x1411 x3639) x2752) (not x2062)) (and (=> (and x2752 (and (= x5310 157198259) (= 68 x25) (= x4524 x2772) (= x3105 (or (and (> 64 x238) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x238))) (> x238 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= 117300739 x5310)) (> x1863 0) (< x5310 826074471) (= 68 x25) (= (x3726 (- x25 4)) x238) (= x2183 4238056678808933066457772256406219440718756300954938350892797929791311314944) (not (< x25 4)) (= (x353 (x4555 x1411)) x1863) (= x41 x552))) (and (=> (and (not x3105) (= (= x552 x41) x5740)) (and (=> (and (and (= x1946 32) (= x40 (x5195 (x4555 x4666) (x821 2) 0)) (= (x5195 (x4555 x552) x40 0) x3267) (= x4524 x5789) (= 1 x5191)) x5740) x803) (=> (not x5740) x321))) (=> x3105 x321))) (=> (and (not x2752) (= (= x3639 x4027) x3886)) (and (=> (and (and (not (= x2361 117300739)) (= x2361 157198259) (= x4528 x2772) (= x3054 68) (< x2361 826074471) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x4673) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3537) (and (= (<= x3537 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x3537))) x319) (not (< x3054 4)) (= x552 x3486) (= x3054 68) (> x3148 0) (= (x353 (x4555 x4027)) x3148) (= (x3726 (- x3054 4)) x3537)) x3886) (and (=> (and (not x319) (= x4622 (= x3486 x552))) (and (=> (and x4622 (and (= (x5195 (x4555 x552) x96 0) x5366) (= (x5195 (x4555 x4666) (x821 2) 0) x96) (= x4351 32) (= x1632 x4528) (= x58 1))) x2522) (=> (not x4622) x5878))) (=> x319 x5878))) (=> (and (and (= x2830 (= x3639 x3993)) (and x2830 (and (= (x3726 (- x4843 4)) x3533) (= x2772 x913) (= 68 x4843) (= x1248 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= x4843 68) (< 0 x1426) (= x1639 (or (and (< x3533 64) (= (<= x3533 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3533))) (= x767 157198259) (= x552 x4029) (= (x353 (x4555 x3993)) x1426) (not (< x4843 4))))) (not x3886)) (and (=> x1639 x2812) (=> (and (= (= x552 x4029) x1298) (not x1639)) (and (=> (and x1298 (and (= x3219 x913) (= x815 1) (= (x5195 (x4555 x552) x3565 0) x5652) (= x2510 32) (= x3565 (x5195 (x4555 x4666) (x821 2) 0)))) x5804) (=> (not x1298) x2812))))))))))))) (=> (and (and (= x161 x552) (> x501 0) (not (< x3628 4)) (= (x3726 (- x3628 4)) x582) (= x1345 157198259) (< x1345 826074471) (= x5511 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x582) (and (> 64 x582) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x582))))) (= x3628 68) (= x3628 68) (= x235 x2772) (= (x353 (x4555 x3135)) x501) (not (= x1345 117300739)) (= x3968 4238056678808933066457772256406219440718756300954938350892797929791311314944)) x3539) (and (=> (and (not x5511) (= (= x552 x161) x768)) (and (=> (not x768) x1154) (=> (and (and (= (x5195 (x4555 x4666) (x821 2) 0) x3550) (= x3127 x235) (= (x5195 (x4555 x552) x3550 0) x510) (= 32 x188) (= 1 x3780) (= x4394 (x6084 128)) (= x213 1)) x768) x4653))) (=> x5511 x1154))))) (=> (and (and (= x2772 x1832) (= x3965 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= x4263 x552) (not (< x5154 4)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x251) true) (< x251 64)) (> x251 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2181) (= x6048 (x353 (x4555 x5556))) (= x5154 68) (= x251 (x3726 (- x5154 4))) (= 68 x5154) (> x6048 0) (not (= 117300739 x2860)) (> 1117154408 x2860) (= x2860 157198259)) x4955) (and (=> x2181 x6284) (=> (and (= (= x552 x4263) x4661) (not x2181)) (and (=> (and x4661 (and (= x1832 x5691) (= x4273 (= 0 x552)))) (and (=> x4273 x6284) (=> (and (not x4273) (= (= 0 x4666) x4562)) (and (=> x4562 x6284) (=> (and (and (= 1 x4342) (= x2224 (x5195 (x4555 x4666) (x821 1) 0)) (= x4959 (x5195 (x4555 x552) x2224 0)) (= x1444 (x4610 128)) (= 32 x4867) (= 1 x6156)) (not x4562)) x3031))))) (=> (not x4661) x6284))))))))) (=> (and (and (> 961581905 x486) (> x3493 0) (< x486 1901074598) (= (x353 (x4555 x2893)) x3493) (= 157198259 x486) (= x6207 68) (= (x3726 (- x6207 4)) x532) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x3821) (= x6207 68) (= x1206 x552) (not (> 4 x6207)) (= x4354 x2772) (not (= 117300739 x486)) (= x1232 (or (and (< x532 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x532))) (> x532 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1240) (and (=> x1232 x6069) (=> (and (= (= x1206 x552) x46) (not x1232)) (and (=> (and x46 (and (= x3962 x4354) (= x5688 (= 0 x4666)))) (and (=> x5688 x6069) (=> (and (not x5688) (= (= 0 x552) x65)) (and (=> (and (and (= x3408 1) (= 32 x6147) (= (x4004 128) x5698) (= x5566 1) (= x6129 (x5195 (x4555 x4666) (x821 1) 0)) (= x3772 (x5195 (x4555 x552) x6129 0))) (not x65)) x5383) (=> x65 x6069))))) (=> (not x46) x6069))))))))))))) (=> x2016 x5703))))))) (=> (and (and (= (= 255 x5837) x6376) (<= 0 x3639) (<= 0 x5837) (<= x3639 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x3639) (<= x5837 255)) x706) (and (=> (and (and (>= x2369 0) (= (x4950 255 x2965) x3431) (= x550 (= x3431 255)) (= x2965 (x3844 (+ 1 x5837))) (<= x3431 255) (= x2369 (x3081 x4978)) (= x4978 (x5195 (x4555 x5837) (x821 2) 0)) (<= 0 x3431) (< x2369 1461501637330902918203684832716283019655932542976) (<= x2369 1461501637330902918203684832716283019655932542975)) (not x6376)) (and (=> (and (and (= x3990 (x4950 255 x4815)) (= x2355 128) (<= 0 x2407) (= x5951 (x353 (x4555 x3639))) (= (= x5951 0) x4378) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2407) (= (x5195 (x4555 x3431) (x821 4) 0) x724) (= x2407 (x5660 x724)) (= x4815 (x3844 (+ x3431 1)))) (not x550)) (and (=> (and (= (= x3639 x474) x2648) (not x4378)) (and (=> (and (not x2648) (= x1953 (= x3639 x3551))) (and (=> (and (and (= x2683 (x353 (x4555 x3551))) (> 2987494029 x2118) (not (< x2118 2835717307)) (= x2407 x2051) (= x3584 (or (> x5027 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x5027) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5027))))) (= (x3726 (- x283 4)) x5027) (not (> 2127478272 x2118)) (not (> 4 x283)) (= x283 68) (= x6375 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x283 68) (not (> 2681229421 x2118)) (> x2683 0) (= x754 x2369) (= x2118 2835717307)) x1953) (and (=> x3584 x1503) (=> (and (= (= x754 x2369) x2572) (not x3584)) (and (=> (not x2572) x1503) (=> (and (and (<= 0 x5755) (> 256 x5755) (<= x5755 255) (= (= 0 x5755) x934) (= x2051 x2866)) x2572) (and (=> (not x934) x1503) (=> (and x934 (and (= (x5195 (x4555 x4666) (x821 3) 0) x1189) (<= 0 x4067) (= x4067 (x1578 x1189)) (< x4067 256) (>= 255 x4067) (= (= x4067 0) x4446))) (and (=> (not x4446) x1503) (=> (and (and (> 256 x5719) (<= x5719 255) (= (x5195 (x4555 x2369) (x821 3) 0) x3836) (= (x1578 x3836) x5719) (= (= 0 x5719) x5530) (<= 0 x5719)) x4446) (and (=> (not x5530) x1503) (=> (and (= x2444 (= x4666 0)) x5530) (and (=> (and (not x2444) (= (= 0 x2369) x5902)) (and (=> x5902 x1503) (=> (and (and (= (< x6355 x2051) x5497) (= (x5195 (x4555 x4666) (x821 9) 0) x5478) (<= 0 x6355) (= (x1281 x5478) x6355) (<= x6355 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x5902)) (and (=> (and (not x5497) (and (= (x5195 (x4555 x4666) (x821 9) 0) x5016) (<= 0 x3703) (= x5035 (< x3703 x2051)) (<= x3703 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1281 x5016) x3703) (= 128 x2918))) (and (=> (and (not x5035) (= x4305 (> x2051 x3703))) (and (=> (and (not x4305) (and (<= 0 x1200) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2051)) x2037) (= x4969 (x5195 (x4555 x4666) (x821 9) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1200) (= x3880 (x5195 (x4555 x2369) (x821 9) 0)) (= x1200 (x2108 x3880)) (= (x3726 (- x3703 x2051)) x6148) (= x4585 (< x2037 x1200)))) (and (=> (and (not x4585) (and (= (x3844 (+ x1200 x2051)) x5916) (= x3392 (< x5916 x1200)))) (and (=> (and (not x3392) (and (= (x5195 (x4555 x2369) (x821 9) 0) x4180) (= x678 32) (= x206 1))) x742) (=> x3392 x1503))) (=> x4585 x1503))) (=> x4305 x1503))) (=> x5035 x1503))) (=> x5497 x1503))))) (=> x2444 x1503))))))))))))) (=> (and (= (= x2893 x3639) x2934) (not x1953)) (and (=> (and (not x2934) (= (= x5489 x3639) x1931)) (and (=> (and x1931 (and (= x2407 x4869) (= x6389 2835717307) (not (> 2512374353 x6389)) (> x3308 0) (not (= 2542517689 x6389)) (= x2586 (x3726 (- x4695 4))) (= x3753 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2586) (and (< x2586 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2586))))) (= x2369 x3038) (not (< x4695 4)) (= x4149 76450787359836037641860180984291677749980919077056822294353438043884394381312) (> 3065339685 x6389) (not (= x6389 2644395612)) (= (x353 (x4555 x5489)) x3308) (not (= x6389 2512374353)) (= 68 x4695) (= 68 x4695))) (and (=> x3753 x4393) (=> (and (= x6210 (= x3038 x2369)) (not x3753)) (and (=> (not x6210) x4393) (=> (and (and (= x311 (x2082 x3161)) (= x3197 (> x2407 x311)) (= x3161 (x5195 (x4555 x4666) (x821 1) 0)) (>= x311 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x311)) x6210) (and (=> x3197 x4393) (=> (and (not x3197) (and (= x6228 (x5328 x3467)) (= (x5195 (x4555 x2369) (x821 1) 0) x3467) (= (x3726 (- x311 x4869)) x969) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6228) (= x4631 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4869))) (<= 0 x6228) (= x6276 (> x6228 x4631)))) (and (=> (and (and (= x2795 (x3844 (+ x4869 x6228))) (= 1 x3534) (= 32 x2488)) (not x6276)) x2223) (=> x6276 x4393))))))))) (=> (and (not x1931) (= x940 (= x5556 x3639))) (and (=> (and x940 (and (not (> 1117154408 x2693)) (= (x353 (x4555 x5556)) x6157) (not (= x2693 2514000705)) (< 0 x6157) (= x2407 x3194) (not (< x2693 2514000705)) (= 2835717307 x2693) (= x1743 (or (and (= (<= x4583 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x4583)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4583))) (= x3801 68) (not (> 4 x3801)) (not (= x2693 2757214935)) (= 68 x3801) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2431) (= (x3726 (- x3801 4)) x4583) (= x5741 x2369))) (and (=> x1743 x3297) (=> (and (= x6367 (= x5741 x2369)) (not x1743)) (and (=> (not x6367) x3297) (=> (and x6367 (and (= x3728 x3194) (= (= x2369 0) x4105))) (and (=> (and (not x4105) (and (= (x1299 x4107) x3079) (= x3608 (< x3079 x3194)) (<= 0 x3079) (<= x3079 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4107 (x5195 (x4555 x4666) (x821 0) 0)))) (and (=> (and (not x3608) (= x4743 (< x3079 x3194))) (and (=> (and (not x4743) (and (= x4129 (x4307 x302)) (= (x3726 (- x3079 x3194)) x3284) (= x2535 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3194))) (= (x5195 (x4555 x2369) (x821 0) 0) x302) (= (> x4129 x2535) x3638) (= (x5195 (x4555 x4666) (x821 0) 0) x2901) (<= 0 x4129) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4129))) (and (=> x3638 x3297) (=> (and (not x3638) (and (= x272 (x3844 (+ x3194 x4129))) (= (< x272 x4129) x6301))) (and (=> x6301 x3297) (=> (and (and (= x4844 1) (= (x5394 128) x3417) (= x716 (x5195 (x4555 x2369) (x821 0) 0)) (= 1 x6419) (= x820 32)) (not x6301)) x4642))))) (=> x4743 x3297))) (=> x3608 x3297))) (=> x4105 x3297))))))) (=> (and (= x3977 (= x3135 x3639)) (not x940)) (and (=> (and (= x3340 (= x1262 x3639)) (not x3977)) (and (=> (and (= (= x6182 x3639) x2540) (not x3340)) (and (=> (and (not x2540) (= (= x3639 x1411) x593)) (and (=> (and (= (= x4027 x3639) x1604) (not x593)) (and (=> (and (and (= (or (> x5030 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x5030 64) (= true (<= x5030 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x2631) (= x5030 (x3726 (- x2176 4))) (= x5661 x2369) (> x4541 0) (not (< x2023 826074471)) (= 2835717307 x2023) (= x2176 68) (= x3299 x2407) (not (= 826074471 x2023)) (= x2176 68) (not (> 4 x2176)) (= x4541 (x353 (x4555 x4027))) (not (= 2514000705 x2023)) (not (= 1889567281 x2023)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x873)) x1604) (and (=> x2631 x2242) (=> (and (not x2631) (= x5587 (= x2369 x5661))) (and (=> (not x5587) x2242) (=> (and (and (= x3819 (< x691 x2407)) (= x3299 x2103) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x691) (= (x5195 (x4555 x4666) (x821 1) 0) x4915) (>= x691 0) (= (x6336 x4915) x691)) x5587) (and (=> (and (= (< x691 x3299) x3163) (not x3819)) (and (=> (and (and (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3299)) x2121) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5851) (= x3495 (x5195 (x4555 x2369) (x821 1) 0)) (= x4816 (x3726 (- x691 x3299))) (= (> x5851 x2121) x4098) (= (x5195 (x4555 x4666) (x821 1) 0) x505) (= (x1678 x3495) x5851) (<= 0 x5851)) (not x3163)) (and (=> x4098 x2242) (=> (and (not x4098) (and (= x284 (x3844 (+ x3299 x5851))) (= (< x284 x5851) x38))) (and (=> (and (and (= (x5195 (x4555 x2369) (x821 1) 0) x3845) (= x560 1) (= x1888 32)) (not x38)) x3930) (=> x38 x2242))))) (=> x3163 x2242))) (=> x3819 x2242))))))) (=> (and (not x1604) (and (and x5604 (and (not (= 157198259 x3090)) (= x2369 x4041) (= x6333 (x353 (x4555 x3993))) (not (= x3090 1889567281)) (= 2835717307 x3090) (not (= 599290589 x3090)) (not (< x884 4)) (> x6333 0) (= 68 x884) (= 68 x884) (= x2696 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x4881 (x3726 (- x884 4))) (= x2407 x4157) (= x844 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4881) (and (< x4881 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4881) true)))) (not (= x3090 404098525)))) (= (= x3639 x3993) x5604))) (and (=> (and (not x844) (= x1854 (= x2369 x4041))) (and (=> (not x1854) x350) (=> (and x1854 (and (= (> x2407 x5092) x2588) (>= x5092 0) (= (x5518 x2536) x5092) (= x2536 (x5195 (x4555 x4666) (x821 1) 0)) (<= x5092 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x2588 x350) (=> (and (not x2588) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x843) (= x6100 (x5195 (x4555 x2369) (x821 1) 0)) (= (< x3498 x843) x483) (= x843 (x5213 x6100)) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4157)) x3498) (= x5451 (x3726 (- x5092 x4157))) (<= 0 x843))) (and (=> x483 x350) (=> (and (and (= x134 32) (= x5501 1) (= x2158 (x3844 (+ x4157 x843)))) (not x483)) x6327))))))) (=> x844 x350))))) (=> (and (and (> x1829 0) (not (> 4 x8)) (= x2369 x5257) (= 2835717307 x1814) (= x1476 (or (and (< x4471 64) (= (<= x4471 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x4471 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= 2514000705 x1814)) (not (= x1814 1889567281)) (= x8 68) (not (> 826074471 x1814)) (= 68 x8) (= x4385 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x1814 826074471)) (= x2407 x6049) (= x1829 (x353 (x4555 x1411))) (= (x3726 (- x8 4)) x4471)) x593) (and (=> x1476 x1201) (=> (and (not x1476) (= x5420 (= x2369 x5257))) (and (=> (not x5420) x1201) (=> (and x5420 (and (= (> x2407 x4670) x5232) (= x4670 (x1584 x6110)) (<= 0 x4670) (= x3635 x6049) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4670) (= (x5195 (x4555 x4666) (x821 1) 0) x6110))) (and (=> x5232 x1201) (=> (and (not x5232) (= (< x4670 x6049) x874)) (and (=> x874 x1201) (=> (and (not x874) (and (= x6392 (x5195 (x4555 x2369) (x821 1) 0)) (= x4419 (x4109 x6392)) (= (x3726 (- x4670 x6049)) x2305) (<= x4419 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4419 0) (= (> x4419 x54) x1537) (= (x5195 (x4555 x4666) (x821 1) 0) x1274) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6049)) x54))) (and (=> x1537 x1201) (=> (and (and (= x3557 (x3844 (+ x4419 x6049))) (= x3813 (> x4419 x3557))) (not x1537)) (and (=> (and (and (= x4564 1) (= (x5195 (x4555 x2369) (x821 1) 0) x3020) (= x3881 32)) (not x3813)) x1800) (=> x3813 x1201))))))))))))))) (=> (and (and (= x5209 x2407) (= 68 x5875) (< 0 x3170) (not (> 826074471 x904)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1556) (= (x3726 (- x5875 4)) x3617) (not (< x5875 4)) (= x963 (or (> x3617 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3617)) (< x3617 64)))) (= x904 2835717307) (= x2369 x5396) (not (= 826074471 x904)) (= 68 x5875) (not (= 1889567281 x904)) (= (x353 (x4555 x6182)) x3170) (not (= x904 2514000705))) x2540) (and (=> (and (= x987 (= x2369 x5396)) (not x963)) (and (=> (and (and (= (> x2407 x536) x1652) (<= x536 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x4666) (x821 1) 0) x5324) (= x4561 x5209) (= x536 (x4916 x5324)) (>= x536 0)) x987) (and (=> x1652 x2513) (=> (and (= (> x5209 x536) x5292) (not x1652)) (and (=> x5292 x2513) (=> (and (and (= (x3726 (- x536 x5209)) x3077) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3957) (= x997 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5209))) (= x3957 (x1300 x441)) (<= 0 x3957) (= x441 (x5195 (x4555 x2369) (x821 1) 0)) (= x74 (> x3957 x997)) (= x5498 (x5195 (x4555 x4666) (x821 1) 0))) (not x5292)) (and (=> x74 x2513) (=> (and (and (= (< x624 x3957) x4929) (= (x3844 (+ x5209 x3957)) x624)) (not x74)) (and (=> x4929 x2513) (=> (and (not x4929) (and (= x1375 32) (= x3919 1) (= x702 (x5195 (x4555 x2369) (x821 1) 0)))) x97))))))))) (=> (not x987) x2513))) (=> x963 x2513))))) (=> (and (and (= x2407 x4614) (= 68 x3380) (> x2485 0) (= x1548 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 826074471 x3399)) (not (= 1889567281 x3399)) (not (= 2514000705 x3399)) (= x3650 (or (> x1597 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x1597) (= true (<= x1597 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x1597 (x3726 (- x3380 4))) (not (> 826074471 x3399)) (= 2835717307 x3399) (= x3380 68) (not (> 4 x3380)) (= x5665 x2369) (= (x353 (x4555 x1262)) x2485)) x3340) (and (=> x3650 x5033) (=> (and (= (= x2369 x5665) x3636) (not x3650)) (and (=> (and (and (>= x2411 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2411) (= x2411 (x5107 x3827)) (= x4303 (> x2407 x2411)) (= x3827 (x5195 (x4555 x4666) (x821 1) 0)) (= x2773 x4614)) x3636) (and (=> (and (= x760 (> x4614 x2411)) (not x4303)) (and (=> x760 x5033) (=> (and (not x760) (and (>= x2441 0) (= (x3511 x6070) x2441) (= x1217 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4614))) (= x4100 (> x2441 x1217)) (= (x5195 (x4555 x4666) (x821 1) 0) x650) (<= x2441 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3726 (- x2411 x4614)) x3048) (= x6070 (x5195 (x4555 x2369) (x821 1) 0)))) (and (=> x4100 x5033) (=> (and (and (= (x3844 (+ x4614 x2441)) x6302) (= (< x6302 x2441) x1017)) (not x4100)) (and (=> (and (not x1017) (and (= x2868 1) (= x5360 (x5195 (x4555 x2369) (x821 1) 0)) (= 32 x3503))) x6016) (=> x1017 x5033))))))) (=> x4303 x5033))) (=> (not x3636) x5033))))))) (=> (and x3977 (and (= 68 x2339) (= (or (and (< x4187 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4187))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4187)) x2908) (= x1712 (x353 (x4555 x3135))) (not (= 2514000705 x4170)) (not (> 4 x2339)) (< 0 x1712) (= x4980 x2407) (= x2339 68) (= x4170 2835717307) (not (= 1889567281 x4170)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x6245) (= x4187 (x3726 (- x2339 4))) (= x5494 x2369) (not (< x4170 826074471)) (not (= 826074471 x4170)))) (and (=> (and (not x2908) (= x1507 (= x5494 x2369))) (and (=> (not x1507) x3749) (=> (and x1507 (and (= x2816 x4980) (= x4748 (= x2369 0)))) (and (=> x4748 x3749) (=> (and (not x4748) (and (= x723 (> x4980 x2599)) (= x3733 (x5195 (x4555 x4666) (x821 1) 0)) (<= 0 x2599) (= x2599 (x3831 x3733)) (<= x2599 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x723) (and (= x6139 (x3831 x4059)) (<= x6139 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x4666) (x821 1) 0) x4059) (<= 0 x6139) (= x3043 (> x4980 x6139)))) (and (=> (and (not x3043) (and (= x2660 (> x5223 x5275)) (= (x4391 x1136) x5223) (= (x5195 (x4555 x2369) (x821 1) 0) x1136) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4980)) x5275) (= (x5195 (x4555 x4666) (x821 1) 0) x1315) (>= x5223 0) (= x1692 (x3726 (- x6139 x4980))) (<= x5223 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x2660) (and (= x968 (x5195 (x4555 x2369) (x821 1) 0)) (= x5754 (x5214 128)) (= 1 x5955) (= x4371 (x3844 (+ x4980 x5223))) (= 1 x6381) (= x1100 32))) x824) (=> x2660 x3749))) (=> x3043 x3749))) (=> x723 x3749))))))) (=> x2908 x3749))))))))) (=> (and (and (< x2980 3714247998) (not (> 1901074598 x2980)) (= x1866 (x353 (x4555 x2893))) (= x4977 (x3726 (- x4897 4))) (> x1866 0) (= x2407 x5061) (= x2980 2835717307) (= x3918 (or (> x4977 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4977)) (< x4977 64)))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x4231) (not (< x4897 4)) (not (< x2980 2835717307)) (= x2369 x3848) (= x4897 68) (= x4897 68)) x2934) (and (=> (and (= (= x3848 x2369) x1853) (not x3918)) (and (=> (not x1853) x1456) (=> (and x1853 (and (= x5061 x4966) (= x5327 (= 0 x4666)))) (and (=> x5327 x1456) (=> (and (= (= 0 x2369) x1618) (not x5327)) (and (=> (and (and (= x2197 (x5195 (x4555 x4666) (x821 0) 0)) (>= x2797 0) (= 128 x2153) (= (x3424 x2197) x2797) (= (< x2797 x5061) x4509) (<= x2797 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1618)) (and (=> (and (not x4509) (= x647 (< x2797 x5061))) (and (=> x647 x1456) (=> (and (and (= (x5195 (x4555 x2369) (x821 0) 0) x4510) (= x4114 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5061))) (= (x3726 (- x2797 x5061)) x2911) (<= 0 x3604) (<= x3604 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x413 (x5195 (x4555 x4666) (x821 0) 0)) (= x3604 (x2129 x4510)) (= (> x3604 x4114) x367)) (not x647)) (and (=> x367 x1456) (=> (and (not x367) (and (= (x3844 (+ x3604 x5061)) x4212) (= (> x3604 x4212) x882))) (and (=> (and (and (= 1 x1091) (= (x5195 (x4555 x2369) (x821 0) 0) x1970) (= 1 x558) (= x2706 32)) (not x882)) x4768) (=> x882 x1456))))))) (=> x4509 x1456))) (=> x1618 x1456))))))) (=> x3918 x1456))))))) (=> (and (and (= x773 2835717307) (> x3415 0) (= x2407 x5062) (= x3899 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (or (and (> 64 x355) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x355) true)) (> x355 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1837) (= x5351 x2369) (= x355 (x3726 (- x4359 4))) (not (= x773 2514000705)) (= 68 x4359) (not (< x773 2514000705)) (< x773 3674237557) (not (> 1889567281 x773)) (not (> 4 x4359)) (= x4359 68) (= x3415 (x353 (x4555 x474)))) x2648) (and (=> x1837 x4132) (=> (and (= x4323 (= x2369 x5351)) (not x1837)) (and (=> (and (and (> 256 x2741) (= x5205 (= x2741 0)) (<= 0 x2741) (>= 255 x2741) (= x62 x5062)) x4323) (and (=> (not x5205) x4132) (=> (and x5205 (and (= x847 (x5038 x351)) (= x351 (x5195 (x4555 x4666) (x821 6) 0)) (= (= 0 x847) x430) (>= x847 0) (>= 255 x847) (< x847 256))) (and (=> (not x430) x4132) (=> (and x430 (= x1477 (< x4359 68))) (and (=> (and (and (>= x215 0) (= x3124 10000) (= (= x5062 0) x3347) (<= x215 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1477)) (and (=> (and (not x3347) (and (= x2449 (ite (< x5175 x215) 1 0)) (= x4923 (= 0 x20)) (= x3699 (= 0 x62)) (= x5175 (x4941 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5062)) (= (x4950 x2296 x2449) x20) (= x2296 (ite (not x3699) 1 0)))) (and (=> (and (and (= (x3060 (x6194 x5062 x215)) x403) (= x2195 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6194 x5062 x215)))) x4923) (and (=> (and (= x403 x263) x2195) x5624) (=> (not x2195) x4132))) (=> (not x4923) x4132))) (=> (and x3347 (= 0 x263)) x5624))) (=> x1477 x4132))))))) (=> (not x4323) x4132))))))) (=> x4378 x5703))) (=> x550 x5703))) (=> x6376 x5703))))) (=> (and (and (<= 0 x5837) (= (= 255 x5837) x3389) (> 1461501637330902918203684832716283019655932542976 x3639) (<= x3639 1461501637330902918203684832716283019655932542975) (>= 255 x5837) (<= 0 x3639)) x1634) (and (=> x3389 x5703) (=> (and (not x3389) (and (= x518 (x5195 (x4555 x5837) (x821 4) 0)) (= 128 x2026) (= x3404 (= x4037 0)) (= (x3844 (+ x5837 1)) x1819) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4361) (= (x5660 x518) x4361) (<= 0 x4361) (= (x4950 255 x1819) x5699) (= x4037 (x353 (x4555 x3639))))) (and (=> (and (not x3404) (= x4278 (= x5489 x3639))) (and (=> (and (and (or x3696 (and (= x2595 x2306) (not x3696))) (and (= x5480 36) (not (< x5480 4)) (= (x3726 (- x5480 4)) x4493) (> 953495055 x2528) (not (= x2528 404098525)) (> x5147 0) (not (= 599290589 x2528)) (> 2512374353 x2528) (not (= 157198259 x2528)) (= 773487949 x2528) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4493) true) (< x4493 32)) (> x4493 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3696) (= x5480 36) (= x5147 (x353 (x4555 x5489))) (= x2595 x4361) (= x2885 20853193852723734048814770637610870652489083209607696777694672748161462697984))) x4278) x4318) (=> (and (and (and x3923 (and (or (and (and (= 1 x5484) (= x1372 0)) (not x6360)) (and (and (= x1372 x5599) (= x5484 0)) x6360)) (and (= 36 x3985) (= x2531 20853193852723734048814770637610870652489083209607696777694672748161462697984) (= 773487949 x4366) (= (x353 (x4555 x1262)) x1167) (not (= 404098525 x4366)) (> x1167 0) (not (= 599290589 x4366)) (not (= 649617121 x4366)) (= x3985 36) (not (= 157198259 x4366)) (not (= 117300739 x4366)) (< x4366 826074471) (= x6360 (or (and (< x4209 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4209) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4209))) (not (< x3985 4)) (= x4209 (x3726 (- x3985 4)))))) (= (= x3639 x1262) x3923)) (not x4278)) x435))) (=> x3404 x5703))))))))))) (=> x6414 x5703))))) (=> x229 x5703))))) (=> (and x1885 (and (= 3600075382 x2) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4668) true) (> 96 x4668)) (> x4668 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3783) (< 0 x3349) (= x3349 (x353 (x4555 x30))) (not (> 4 x5568)) (= (x3726 (- x5568 4)) x4668) (= 97057840296441966410330255902201960138893160036366920885407767449525406400512 x656) (= 100 x5568) (= x5568 x1180) (= x131 x4619))) (and (=> (and (and (= x6374 (= x4619 x3715)) (= x3715 (x4950 1461501637330902918203684832716283019655932542975 x4619))) (not x3783)) (and (=> (not x6374) x191) (=> (and x6374 (and (= 1 x4749) (= x1419 32))) x2350))) (=> x3783 x191)))))))
(assert (= x4707 (and x4787 (not x5089))))
(assert (=> (>= 10000 x1646) (= (x821 x1646) (x4555 x1646))))
(assert (x2946 x903))
(assert (= (and x6324 (not x2677)) x2389))
(assert (= x2160 (and x1441 x6351)))
(assert (x2946 x3499))
(assert (x2946 x1434))
(assert (x3812 x1581))
(assert (= x216 (and x1625 x1677)))
(assert (x3761 x6380))
(assert (=> (<= x3858 10000) (= (x4555 x3858) (x821 x3858))))
(assert (= (and (not x1384) x2524) x3336))
(assert (= (and x5531 x4411) x878))
(assert (x2946 x5323))
(assert (= (=> (and (= 0 x1134) (= x6115 x5792)) x3063) x6015))
(assert (x2946 x3380))
(assert (=> (>= 10000 x2289) (= (x4555 x2289) (x821 x2289))))
(assert (= (and (not x1256) x473) x3641))
(assert (x2946 x1296))
(assert (= (and x6283 x882) x989))
(assert (= (and x5728 x2031) x3743))
(assert (= (and (not x2871) x5671) x60))
(assert (= x3978 (and x2144 x628)))
(assert (= (and x6278 x1935) x1928))
(assert (x3146 (- x5471 x5062)))
(assert (x2946 x1863))
(assert (= x2726 (=> (and (= x2011 x1297) (= x6348 x6027)) x696)))
(assert (=> (>= 10000 x3984) (= (x821 x3984) (x4555 x3984))))
(assert (=> (>= 10000 x2672) (= (x821 x2672) (x4555 x2672))))
(assert (x2946 x4616))
(assert (x2946 x4799))
(assert (= x3616 (and x4613 (not x39))))
(assert (= (and x1208 x2765) x1003))
(assert (= x6168 (or x672 x4570 x4440 x961 x1398 x5799 x1357 x67 x5247 x841 x227)))
(assert (x2946 x361))
(assert (= (or x1150 x5635 x1539 x6032 x2639 x252 x4701 x6275 x296) x4688))
(assert (x2946 x28))
(assert (x3160 x5471 (- x215 x1163)))
(assert (x2946 x5516))
(assert (x2946 x694))
(assert (= (or x4714 x6407) x4358))
(assert (= (and (not x5656) x2756) x2719))
(assert (= (and x1141 (not x5511)) x5169))
(assert (= x3625 (=> (and (or x445 (not x445)) (= (= 0 x149) x445)) x385)))
(assert (= (or x6198 x2367) x4362))
(assert (=> (>= 10000 x763) (= (x821 x763) (x4555 x763))))
(assert (x2946 x2686))
(assert (= x851 (or x2790 x2874 x4145 x4742 x3975 x3619 x3989 x4183 x2919 x395 x4650)))
(assert (x3761 x2817))
(assert (x2946 x6239))
(assert (x2946 x5691))
(assert (x2946 x3029))
(assert (x3761 x6011))
(assert (x2946 x2922))
(assert (x2946 x4009))
(assert (x2491 x215 x1346 x215 x3021))
(assert (= x3749 (=> (and (= 0 x6381) (= x1579 x1100)) x824)))
(assert (x3146 (- x3951 x215)))
(assert (x2946 x3322))
(assert (x2946 x6040))
(assert (x1752 x1819))
(assert (= x5253 (and (not x3815) x1709)))
(assert (= (and (not x1408) x1976) x2049))
(assert (x3146 (- x215 x2533)))
(assert (= (and x2093 (not x1658)) x3184))
(assert (x2491 x1346 x215 x3951 x1163))
(assert (x2946 x463))
(assert (= (and x2295 x862) x5472))
(assert (= x1770 (and x6061 x2923)))
(assert (= x6022 (and x2443 x706)))
(assert (= (and x1431 x3543) x1649))
(assert (x2946 x6422))
(assert (= (=> (and (= x579 x3478) (= x5075 x947)) x5152) x522))
(assert (=> (>= 10000 x1824) (= (x4555 x1824) (x821 x1824))))
(assert (x2946 x163))
(assert (= (x4465 (x4555 x4215)) x4215))
(assert (= x5052 (or (and x1472 x6303) (and x295 (not x5590)) (and x124 x3851) x5644 x255 (and x2190 x2694) (and x3011 x3648) x2097 (and (not x4436) x5943))))
(assert (x2946 x3858))
(assert (x2946 x5568))
(assert (x3761 x2369))
(assert (x2946 x6286))
(assert (x2491 x3951 x1163 x215 x5471))
(assert (= x3740 (and x5663 (not x5307))))
(assert (x2946 x3942))
(assert (x2946 x1832))
(assert (= x5831 (x4465 (x4555 x5831))))
(assert (= x6029 (and (not x535) x2506)))
(assert (x2946 x3882))
(assert (= x4732 (and x1821 (not x3657))))
(assert (= (and x221 (not x2610)) x5899))
(assert (= (and x5459 x2480) x2131))
(assert (= (or x3634 x883 x3216 x2487 x2180 x4826 x1064 x3398 x6229) x3097))
(assert (= (and (not x3959) x5558) x6413))
(assert (x2946 x4451))
(assert (= x2057 (and (not x940) x2254)))
(assert (= (and (not x4352) x424) x3419))
(assert (= x3519 (and x2151 x6270)))
(assert (= x3674 (and x4606 (not x1851))))
(assert (= x1441 (and x99 (not x5270))))
(assert (x2946 x999))
(assert (= x5737 (and (not x4748) x2435)))
(assert (= x859 (and x5840 (not x3254))))
(assert (= (and x3854 x4435) x5055))
(assert (x2946 x4878))
(assert (x2946 x4046))
(assert (=> (>= 10000 x5935) (= (x821 x5935) (x4555 x5935))))
(assert (x2491 x3021 x215 x215 x5062))
(assert (= x477 (and x6354 x1330)))
(assert (= x171 (=> (and (= x6349 x4913) (= x5231 x5823)) x503)))
(assert (= (=> (and (= x2011 x4048) (= x6348 x4457)) x696) x1659))
(assert (x2946 x6197))
(assert (= (and (not x4850) x2907) x19))
(assert (x3160 x5062 (- x215 x1163)))
(assert (=> (<= x3551 10000) (= (x821 x3551) (x4555 x3551))))
(assert (x2946 x3999))
(assert (x3146 (- x1346 x3951)))
(assert (= (and x928 (not x4848)) x610))
(assert (= (and x3586 x3389) x5718))
(assert (x2946 x3228))
(assert (= x277 (and (not x1240) x1656)))
(assert (= x2732 (and x4365 x941)))
(assert (x3761 x4416))
(assert (x2946 x4823))
(assert (= (or x3333 x6279 x5398 x3620 x1528 x2654 x4633 x1508 x4754 x5622 x5922 x4773 x1540) x4328))
(assert (x2946 x2488))
(assert (x2946 x3358))
(assert (x2946 x1690))
(assert (x3761 x5753))
(assert (= (and x5858 x1247) x5616))
(assert (= x1791 (=> (and (= x5482 x6106) (= 0 x4141)) x3128)))
(assert (= (x4465 (x4555 x5405)) x5405))
(assert (= x345 (and x2417 (not x2685))))
(assert (x2946 x5423))
(assert (= (=> (and (= x4616 1) (= x2711 0)) x132) x3907))
(assert (= (and x6113 (not x6249)) x6357))
(assert (x2946 x4498))
(assert (= x5438 (or x1525 x2504 x3863 x316 x437 x567 x391 x2248 x5828 x3884 x2985 x1957)))
(assert (= (and x1145 x626) x4207))
(assert (= (x4465 (x821 2987494029)) 2987494029))
(assert (x2946 x2251))
(assert (= (and (not x974) x202) x3436))
(assert (x2946 x3427))
(assert (= (x4465 (x4555 x3303)) x3303))
(assert (= (x4465 (x4555 x5533)) x5533))
(assert (x2946 x1350))
(assert (x2946 x870))
(assert (= (and (not x5824) x2154) x4951))
(assert (x2946 x52))
(assert (x2946 x2696))
(assert (= (and x3140 (not x759)) x5840))
(assert (x2946 x4076))
(assert (= (=> (= (= x149 0) x2406) (and (=> (and (= (or (> x831 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x831 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x831)))) x4590) (not x2406)) (and (=> (not x4590) x4605) (=> x4590 x5703))) (=> x2406 x5703))) x385))
(assert (x2946 x4455))
(assert (= x5646 (and x424 x4352)))
(assert (x2491 x1346 x215 x215 x3021))
(assert (= x6409 (=> (and (= x4220 x5034) (= x910 x5783)) x4272)))
(assert (x3761 x6033))
(assert (= x4691 (and (not x3744) x6311)))
(assert (x2946 x2280))
(assert (x2946 x935))
(assert (= (and (not x2953) x1546) x2496))
(assert (= x4961 (and x3983 x3091)))
(assert (= (and (not x1291) x4270) x5908))
(assert (= (=> (and (= x356 0) (= x6106 x1461)) x4880) x2113))
(assert (= (and x4781 x5132) x3023))
(assert (x2946 x3617))
(assert (x2946 x4296))
(assert (x2946 x4170))
(assert (= (x821 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x4555 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (=> (>= 10000 x5831) (= (x821 x5831) (x4555 x5831))))
(assert (x2946 x1129))
(assert (x2946 x1102))
(assert (= x3854 (and (not x3963) x4326)))
(assert (= (and x2445 x2029) x3800))
(assert (x2946 x5557))
(assert (x2946 x1620))
(assert (x2946 x1866))
(assert (= x212 (and x3080 x3414)))
(assert (= x2457 (and x3076 x16)))
(assert (= (or x735 x5200 x5363 x4750 x2736 x596) x3112))
(assert (x2946 x5593))
(assert (x2946 x1134))
(assert (= x2248 (and x2942 x5902)))
(assert (x2946 x5207))
(assert (= x5622 (and x4731 x816)))
(assert (x2491 x215 x5062 x5471 x215))
(assert (x2946 x6049))
(assert (x3761 x3869))
(assert (= (x4465 (x4555 x69)) x69))
(assert (= (and x5127 x2120) x5359))
(assert (x2946 x4564))
(assert (= x2155 (and x1945 x2206)))
(assert (x3761 x3465))
(assert (= x2615 (=> (and (= x43 0) (= x5841 x6106)) x5196)))
(assert (= x6277 (and (not x1999) x2002)))
(assert (= (and x2297 x665) x3329))
(assert (= (and x1838 x3671) x2427))
(assert (x2946 x1688))
(assert (= (=> (and (= 0 x219) (= x5218 x1574)) x3597) x4344))
(assert (= x2236 (or x3889 x718)))
(assert (= x5000 (or (and (not x3449) x5970) (and x1399 (not x2805)) (and x6073 x1602))))
(assert (=> (<= x991 10000) (= (x821 x991) (x4555 x991))))
(assert (= (and x4708 (not x3052)) x4814))
(assert (x2946 x6378))
(assert (= x3027 (and (not x6405) x5950)))
(assert (= (and x3306 x5379) x4599))
(assert (x2946 x3413))
(assert (= x123 (and x2336 x1355)))
(assert (= x5462 (and x1768 x3768)))
(assert (= (and x21 x2878) x125))
(assert (x2946 x6281))
(assert (x2946 x336))
(assert (= x2223 (=> (and (= x149 x3534) (= x831 x2488)) x3625)))
(assert (= (and x2450 (not x6264)) x4119))
(assert (x2946 x2384))
(assert (= (and x5972 x4207) x2370))
(assert (= x3463 (and (not x1685) x1831)))
(assert (= x5210 (and x658 x774)))
(assert (= (x4465 (x4555 x3189)) x3189))
(assert (and (= (x6194 3 3) 9) (= (x6194 9 3) 27) (= 81 (x6194 9 9)) (= 81 (x6194 27 3))))
(assert (x2946 x1922))
(assert (x2946 x5576))
(assert (x2946 x533))
(assert (x2946 x753))
(assert (x2946 x4614))
(assert (= x2086 (and x1103 (not x1697))))
(assert (x2946 x2053))
(assert (= x5136 (and x3714 (not x2934))))
(assert (x2946 x3996))
(assert (x2946 x1376))
(assert (x2946 x1100))
(assert (= x4720 (and x2707 (not x3404))))
(assert (=> (<= x6263 10000) (= (x4555 x6263) (x821 x6263))))
(assert (= x4085 (or (and (not x118) x3708) (and x6093 (not x5468)) (and x4693 x2106))))
(assert (x2946 x648))
(assert (x2946 x4868))
(assert (= (x4465 (x821 404098525)) 404098525))
(assert (= (and x5069 (not x5097)) x3967))
(assert (x2946 x4726))
(assert (x2946 x169))
(assert (x2946 x5814))
(assert (= x2156 (=> (and (= x6106 x6328) (= 0 x5846)) x5684)))
(assert (x2946 x2045))
(assert (= (x821 773487949) (x4555 773487949)))
(assert (x2946 x3078))
(assert (= (and (not x33) x1680) x3729))
(assert (x2946 x5935))
(assert (= x4317 (and x6096 x3157)))
(assert (x2946 x1763))
(assert (x2946 x2702))
(assert (x2946 x2905))
(assert (x2946 x4582))
(assert (= x3779 (and x4459 x4375)))
(assert (x2946 x3551))
(assert (x2946 x4240))
(assert (x3761 x5850))
(assert (= x5006 x5299))
(assert (= (and x4300 (not x3153)) x4197))
(assert (= (and x445 x851) x5428))
(assert (= (or x3678 x17) x4137))
(assert (x2946 x2266))
(assert (= x5567 (and x1658 x2093)))
(assert (= (and x2850 x957) x5342))
(assert (x2491 x215 x5471 x5062 x215))
(assert (x4723 x5062 x215 x3951 x1163))
(assert (= x995 (and (not x5233) x392)))
(assert (= (and x5136 (not x1931)) x2254))
(assert (= x6279 (and x3436 x3878)))
(assert (= (and x5720 x5015) x661))
(assert (= (x4465 (x4555 x4782)) x4782))
(assert (x2946 x3317))
(assert (x2946 x86))
(assert (x3761 x3092))
(assert (=> (<= x1159 10000) (= (x821 x1159) (x4555 x1159))))
(assert (= (and (not x4174) x4839) x5057))
(assert (and (x2072 x4249 1461501637330902918203684832716283019655932542976) (x3935 x4249 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x4249 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x4249 1461501637330902918203684832716283019655932542976)) x4249)) (x4154 x4249 1461501637330902918203684832716283019655932542976)))
(assert (= x2115 (or x2024 x2246)))
(assert (= (and (not x1900) x1229) x2196))
(assert (= (and x2211 x2908) x5630))
(assert (= x3760 (or x2385 x697 x2236 x2399 x3206 x4137 x4319 x936 x4456 x200 x817)))
(assert (x2491 x215 x5062 x215 x5471))
(assert (x2946 x4960))
(assert (x2946 x1684))
(assert (= x3612 (and x5371 x481)))
(assert (x2946 x6013))
(assert (= x1573 (and x4238 (not x4282))))
(assert (= x1706 (=> (and (= x6348 x3369) (= x2011 x935)) x696)))
(assert (x2946 x2359))
(assert (x2946 x1733))
(assert (= (and x5082 (not x5304)) x3582))
(assert (= x4903 (and (not x4367) x6215)))
(assert (= x136 (and x4732 x3494)))
(assert (x2946 x6005))
(assert (x2946 x5147))
(assert (x2946 x519))
(assert (= (and x4800 x2643) x255))
(assert (= x6204 (and (not x3811) x3177)))
(assert (x2946 x769))
(assert (=> (>= 10000 x4287) (= (x821 x4287) (x4555 x4287))))
(assert (x2946 x5753))
(assert (= x3689 (and (not x341) x4593)))
(assert (= (x821 100135927934651036221761091863598459016256155049858187411712977198722809069568) (x4555 100135927934651036221761091863598459016256155049858187411712977198722809069568)))
(assert (= x3266 (and (not x5788) x6396)))
(assert (x2946 x1735))
(assert (= (and x379 (not x760)) x376))
(assert (= x3257 (or (and x1838 (not x3671)) (and x1221 x5460) (and x5521 x3804) (and x5173 x2427) (and x5871 x6219))))
(assert (x2946 x3825))
(assert (= x1120 (and x5656 x2756)))
(assert (= (and (not x4609) x1252) x5648))
(assert (x2946 x5951))
(assert (= (x4465 (x821 2681229421)) 2681229421))
(assert (= (and x1883 x3716) x3453))
(assert (x2946 x4825))
(assert (x2491 x215 x5471 x3951 x1163))
(assert (x3146 x2533))
(assert (= (and x1693 x2203) x6008))
(assert (x2946 x2760))
(assert (= (and x4929 x3281) x3471))
(assert (=> (>= 10000 x1439) (= (x821 x1439) (x4555 x1439))))
(assert (x2946 x1960))
(assert (x2946 x4354))
(assert (= (and x2262 x2540) x2315))
(assert (= (x4465 (x4555 x2039)) x2039))
(assert (= x1699 (and x1145 (not x626))))
(assert (x3146 x1346))
(assert (and (x2072 x4550 1461501637330902918203684832716283019655932542976) (x3935 x4550 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x4550 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x4550 1461501637330902918203684832716283019655932542976)) x4550)) (x4154 x4550 1461501637330902918203684832716283019655932542976)))
(assert (x2946 x4034))
(assert (x2946 x3503))
(assert (= x2161 (and x2300 x712)))
(assert (= (=> (and (or (and (= x5932 x146) (not x2607)) (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x86) (<= 0 x86) (= x146 x86)) x2607)) (and (<= 0 x86) (= (x4941 x3795 10000) x5932) (<= x86 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2607 (< x86 x5932)))) x2539) x3247))
(assert (= x5813 (and x5687 x3813)))
(assert (= x2480 (and x2849 (not x4271))))
(assert (= (and (not x2406) x575) x5868))
(assert (= x3823 (and (not x4952) x2667)))
(assert (= x1159 (x4465 (x4555 x1159))))
(assert (x2946 x5875))
(assert (= x2922 (x4465 (x4555 x2922))))
(assert (= (and x2884 x1179) x4704))
(assert (= (and (not x4195) x2525) x4211))
(assert (x2946 x6258))
(assert (= (and x4634 (not x1088)) x5041))
(assert (x5626 x1568))
(assert (x2491 x215 x1346 x5471 x215))
(assert (x2946 x1461))
(assert (= x2035 (and x2240 x487)))
(assert (= x805 (and x5551 x4060)))
(assert (x2946 x552))
(assert (x2946 x3797))
(assert (= x770 (and (not x4697) x1607)))
(assert (= x1411 (x4465 (x4555 x1411))))
(assert (=> (>= 10000 x3431) (= (x821 x3431) (x4555 x3431))))
(assert (x2946 x530))
(assert (x3146 (- x3021 x1346)))
(assert (x3160 x2533 (- x215 x3021)))
(assert (x2946 x6224))
(assert (x2946 x1414))
(assert (x2946 x2018))
(assert (= (and x1003 x4857) x973))
(assert (= (and (not x129) x3336) x4255))
(assert (x1795 x3021))
(assert (= (=> (and (= x2162 x6349) (= x6072 x5823)) x503) x2148))
(assert (= x5045 (and x275 (not x2438))))
(assert (= (or x5359 x2191) x5552))
(assert (= (or x4358 x2727 x3004 x1085 x390 x220 x1407 x495 x3600 x142 x5959) x4858))
(assert (x2491 x3951 x1163 x215 x5062))
(assert (x2946 x1648))
(assert (x2946 x5932))
(assert (x2946 x6176))
(assert (= x3693 (and x6367 x1657)))
(assert (x2946 x4189))
(assert (= x5539 (=> (and (= 0 x2432) (= x5842 x5891)) x2541)))
(assert (= (and x5045 x5146) x257))
(assert (= (and (not x4509) x5905) x5162))
(assert (= (and (not x1669) x4784) x2650))
(assert (x2946 x5326))
(assert (= (and x3023 (not x2608)) x2167))
(assert (x2946 x5659))
(assert (= x3586 (and x3967 x1634)))
(assert (= x1566 (and x242 x2660)))
(assert (x2946 x4371))
(assert (= x5378 (and x4603 x2652)))
(assert (= x5668 (or x2137 x2658 x6227 x2239 x4119 x2793 x453 x4483 x2130)))
(assert (= x4529 (and (not x4923) x1518)))
(assert (= (and x1035 (not x2247)) x387))
(assert (= x1926 (and (not x315) x2040)))
(assert (x2946 x1673))
(assert (= (and (not x1127) x1177) x5800))
(assert (x4723 x3951 x1163 x5471 x215))
(assert (and (x2072 x1265 32) (x3935 x1265 32) (=> (> 32 0) (= (+ (* (x4941 x1265 32) 32) (x432 x1265 32)) x1265)) (x4154 x1265 32)))
(assert (x2946 x130))
(assert (= x419 (or (and (not x6374) x2678) (and x2378 x3783))))
(assert (= (=> (and (= x6268 x4749) (= x1419 x2668)) x2313) x2350))
(assert (x2946 x2117))
(assert (= x5048 (and x2925 x2439)))
(assert (x2946 x2894))
(assert (=> (>= 10000 x69) (= (x821 x69) (x4555 x69))))
(assert (= (x4465 (x4555 x795)) x795))
(assert (=> (<= x4034 10000) (= (x4555 x4034) (x821 x4034))))
(assert (x2946 x3990))
(assert (= (and x1572 x1227) x2960))
(assert (= (=> (and (= x4767 x4220) (= x5783 x5787)) x4272) x4028))
(assert (= x5099 (and x1475 x4596)))
(assert (x2946 x1026))
(assert (x2946 x4374))
(assert (= x2768 (x4465 (x4555 x2768))))
(assert (= x3171 (and (not x4562) x2142)))
(assert (= (and x4131 x5572) x6354))
(assert (x2946 x2165))
(assert (x2946 x1245))
(assert (x2946 x3523))
(assert (x5626 1461501637330902918203684832716283019655932542976))
(assert (= x6315 (and x5164 x2195)))
(assert (x2946 x269))
(assert (x2946 x1808))
(assert (= x4275 (and x5993 x3197)))
(assert (x2946 x3577))
(assert (= x5047 (=> (and (= x5891 x6072) (= x2162 0)) x2148)))
(assert (= x1141 (and x3539 x3661)))
(assert (= x1463 (or x5287 x2334)))
(assert (= (and x6122 x4554) x5743))
(assert (= (and (not x4669) x6397) x217))
(assert (x2946 x2306))
(assert (x2946 x3537))
(assert (x2946 x4127))
(assert (= x2095 (and x840 x2783)))
(assert (x3761 x1011))
(assert (x2946 x6017))
(assert (=> (>= 10000 x1725) (= (x4555 x1725) (x821 x1725))))
(assert (x2946 x6091))
(assert (= (and x874 x1663) x6150))
(assert (x2946 x5554))
(assert (x2946 x3670))
(assert (x3160 x5062 (- x215 x5471)))
(assert (x2946 x3142))
(assert (x2946 x1260))
(assert (x2946 x1556))
(assert (= x455 (and x1460 (not x4403))))
(assert (= x1769 (and x723 x5737)))
(assert (= x686 (and x3201 x3043)))
(assert (x2946 x3231))
(assert (= (and (not x4571) x2941) x108))
(assert (x2946 x584))
(assert (x2946 x5190))
(assert (= x4831 (and (not x5205) x2447)))
(assert (= (and x6136 (not x966)) x1828))
(assert (=> (<= x1011 10000) (= (x4555 x1011) (x821 x1011))))
(assert (x5626 x2338))
(assert (x3761 x1144))
(assert (= (and x1822 x5357) x1104))
(assert (= (and (not x2071) x4320) x6429))
(assert (x2946 x232))
(assert (= x964 (and x3852 (not x955))))
(assert (= (=> (and (= x2868 x149) (= x3503 x831)) x3625) x6016))
(assert (x2946 x1373))
(assert (x2946 x4538))
(assert (x2946 x3881))
(assert (x2946 x3382))
(assert (= (and (not x2572) x3355) x1525))
(assert (= x5067 (and x4855 x2814)))
(assert (x2946 x1686))
(assert (= x5176 (and x476 x4964)))
(assert (= x551 (=> (and (= 1 x5358) (= x640 32)) x2376)))
(assert (= (and x367 x290) x3425))
(assert (x3761 x728))
(assert (= x1175 (and x5800 x2030)))
(assert (x2946 x814))
(assert (x2946 x4293))
(assert (= (and (not x1619) x6218) x5256))
(assert (= x4944 (and (not x5623) x5534)))
(assert (and (x6393 x1558 10000) (x6383 x1558 10000) (=> (and (< 0 10000) (< 0 x1558)) (and (<= (* (x4941 x1558 10000) 10000) x1558) (< (- x1558 10000) (* (x4941 x1558 10000) 10000)))) (x2854 x1558 10000) (x1495 x1558 10000)))
(assert (x2946 x475))
(assert (= (and x2562 x2263) x2483))
(assert (= x2100 (and x59 (not x2005))))
(assert (= (and x4846 x166) x4730))
(assert (x2946 x447))
(assert (= (and x2751 (not x3695)) x4741))
(assert (= x4355 (and x4972 x172)))
(assert (= (x4465 (x4555 x5647)) x5647))
(assert (x2946 x2183))
(assert (x2946 x3021))
(assert (x3160 x5062 (- x215 x3951)))
(assert (x3761 x47))
(assert (= x5227 (and x5888 x145)))
(assert (x2946 x2034))
(assert (x2946 x2474))
(assert (x2946 x3757))
(assert (x3160 x2533 (- x215 x5471)))
(assert (= x2291 (and x430 x3809)))
(assert (x2946 x5225))
(assert (= (=> (and (= (< x3232 x4308) x1454) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3232) (= x5095 (x4950 1461501637330902918203684832716283019655932542975 x5879)) (= x4368 (x5195 (x4555 x5095) (x821 1) 0)) (<= 0 x3232) (= (x3572 x4368) x3232)) (and (=> (and (not x1454) (and (= (x5195 (x4555 x3465) (x821 1) 0) x812) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4308)) x5207) (<= x1509 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1509 (x3492 x812)) (= x3282 (x3726 (- x3232 x4308))) (= x1326 (> x1509 x5207)) (<= 0 x1509))) (and (=> x1326 x6015) (=> (and (not x1326) (and (= x1401 (x3844 (+ x4308 x1509))) (= x5792 32) (= 1 x1134))) x3063))) (=> x1454 x6015))) x433))
(assert (x2946 x3857))
(assert (x2946 x1328))
(assert (x2946 x3229))
(assert (x2946 x2006))
(assert (x1795 x6243))
(assert (=> (>= 10000 x668) (= (x821 x668) (x4555 x668))))
(assert (= x3643 (x4465 (x4555 x3643))))
(assert (= (and x1514 x5600) x1053))
(assert (= (and x586 x5523) x95))
(assert (x2946 x5517))
(assert (x2946 x3303))
(assert (= x3474 (=> (and (= 0 x412) (= x3443 x2776)) x1864)))
(assert (= x1429 (and x4918 x3141)))
(assert (x2946 x5645))
(assert (x2946 x4504))
(assert (x2946 x3204))
(assert (= x6221 (and x1247 (not x5858))))
(assert (= (or x3491 x2626) x1085))
(assert (= x5804 (=> (and (= x2510 x4090) (= x815 x637)) x2182)))
(assert (x3761 x5542))
(assert (x2946 x3048))
(assert (= x2006 (x4465 (x4555 x2006))))
(assert (x2946 x5598))
(assert (x3761 x4672))
(assert (=> (>= 10000 x3590) (= (x821 x3590) (x4555 x3590))))
(assert (x2946 x2509))
(assert (and (x2072 x2442 256) (x3935 x2442 256) (=> (> 256 0) (= (+ (* (x4941 x2442 256) 256) (x432 x2442 256)) x2442)) (x4154 x2442 256)))
(assert (x2946 x3120))
(assert (x2946 x5216))
(assert (= x3590 (x4465 (x4555 x3590))))
(assert (x2946 x431))
(assert (x2946 x6235))
(assert (x3761 x3303))
(assert (x2946 x1927))
(assert (= (and x1361 x1961) x1380))
(assert (x2946 x3074))
(assert (= (and x2080 x857) x4935))
(assert (= (and x2717 x3330) x4864))
(assert (x2946 x3022))
(assert (x3761 x668))
(assert (x2946 x3545))
(assert (x2946 x4251))
(assert (x2946 x4665))
(assert (= (or x5616 x4807 x4608 x1498 x4769 x1817 x3075 x3310 x136) x1591))
(assert (x2946 x3653))
(assert (x2946 x4738))
(assert (x3160 x215 (- x3021 x5062)))
(assert (x3761 x5816))
(assert (x2946 x69))
(assert (= (and (not x2631) x5066) x4349))
(assert (= (x4465 (x821 773487949)) 773487949))
(assert (x3146 (- x1163 x3021)))
(assert (x2946 x2014))
(assert (x2946 x3672))
(assert (= x5724 (and x6124 x1216)))
(assert (x2946 x4427))
(assert (= x5202 (and x2907 x4850)))
(assert (x2946 x536))
(assert (x2946 x749))
(assert (= 2835717307 (x4465 (x821 2835717307))))
(assert (= (and (not x5389) x4691) x4136))
(assert (x2946 x1746))
(assert (= x5767 (=> (and (= x5748 x6239) (= x3992 x1921)) x2234)))
(assert (= x1390 (or x5553 x2221)))
(assert (= x1177 (and x1894 x5101)))
(assert (= x5947 (or x3203 x964)))
(assert (x2946 x1436))
(assert (= x5153 (and x2560 x416)))
(assert (= (x4465 (x4555 x3906)) x3906))
(assert (x2946 x625))
(assert (= (x4465 (x4555 x4971)) x4971))
(assert (x2946 x790))
(assert (= (and x5746 (not x87)) x2417))
(assert (x2946 x5891))
(assert (= (and (not x723) x5737) x3201))
(assert (= x5945 (and x3339 (not x1156))))
(assert (= (x4465 (x4555 x5489)) x5489))
(assert (= (and (not x5721) x5255) x3979))
(assert (x2946 x1206))
(assert (x2946 x2599))
(assert (= (and x4732 (not x3494)) x3949))
(assert (=> (<= x2302 10000) (= (x4555 x2302) (x821 x2302))))
(assert (= (and x5903 (not x3326)) x6359))
(assert (x2946 x1859))
(assert (= x1855 (and x1546 x2953)))
(assert (x2946 x1251))
(assert (x3761 x1496))
(assert (x3761 x4034))
(assert (= (and (not x3667) x2597) x3106))
(assert (= (and x1848 x1131) x1250))
(assert (= x2320 (and x5348 x4081)))
(assert (x2946 x2992))
(assert (x2946 x3763))
(assert (x2946 x188))
(assert (= (and (not x4411) x5531) x6379))
(assert (x2946 x3431))
(assert (= (x4465 (x4555 x3092)) x3092))
(assert (=> (<= x3262 10000) (= (x4555 x3262) (x821 x3262))))
(assert (x2946 x2676))
(assert (= x2443 (and x3967 (not x1634))))
(assert (x2946 x2441))
(assert (= x490 (=> (and (= x5984 x2636) (= x6377 x3596)) x5477)))
(assert (= x2487 (and x1448 x2697)))
(assert (x3761 x1317))
(assert (x2946 x5456))
(assert (= (x4465 (x821 157198259)) 157198259))
(assert (= (and x4903 (not x601)) x2263))
(assert (= x2817 (x4465 (x4555 x2817))))
(assert (x3160 x215 (- x5471 x3951)))
(assert (= x2253 (and x6306 x4104)))
(assert (= (and x3959 x5558) x5785))
(assert (x2946 x3583))
(assert (x3761 x4771))
(assert (x2946 x4316))
(assert (= (and x5936 x2149) x4242))
(assert (= x4338 (and x3463 x2433)))
(assert (= (x4465 (x4555 x1481)) x1481))
(assert (= (or x4015 x6086 x5567 x6021 x6192 x4957 x5591 x1582 x4469 x4794 x5430 x5285 x66 x3611 x5785 x5294 x5975) x3759))
(assert (x2946 x2528))
(assert (x2946 x4054))
(assert (= (and x3940 (not x4323)) x5834))
(assert (= x1724 (and x4873 x3529)))
(assert (= x2840 (and (not x2792) x835)))
(assert (x2491 x1163 x3951 x215 x3021))
(assert (x2946 x251))
(assert (= (and (not x3720) x5807) x5158))
(assert (x2946 x5448))
(assert (x2946 x947))
(assert (=> (<= x1997 10000) (= (x821 x1997) (x4555 x1997))))
(assert (x2946 x570))
(assert (x2946 x2299))
(assert (= (=> (and (and (= x3377 (x4941 x6243 10000)) (<= x86 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4747 (< x86 x3377)) (>= x86 0)) (or (and x4747 (and (<= 0 x86) (= x86 x2278) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x86))) (and (not x4747) (= x2278 x3377)))) x344) x3186))
(assert (= (and x2273 x81) x2527))
(assert (x2946 x5386))
(assert (= (or x4182 x2404) x4259))
(assert (x2946 x3588))
(assert (x2946 x5040))
(assert (x1752 x4886))
(assert (= (and x3518 x6246) x5382))
(assert (x2946 x1265))
(assert (x2946 x5999))
(assert (= x5347 (=> (and (= x5218 x970) (= 0 x4690)) x5361)))
(assert (x3761 x5343))
(assert (x3761 x3431))
(assert (x2946 x4729))
(assert (= (and x5590 x295) x3851))
(assert (x2946 x2338))
(assert (x2946 x2329))
(assert (= x2743 (and x5395 (not x2193))))
(assert (x2946 x1405))
(assert (x3761 x4196))
(assert (x1795 x5062))
(assert (x2946 x4208))
(assert (= (or x3689 x4155) x1077))
(assert (x2946 x4363))
(assert (x2946 x6018))
(assert (x2946 x2255))
(assert (= x1738 (=> (and (or x3554 (not x3554)) (= x3554 true)) x1919)))
(assert (x2946 x2403))
(assert (= (=> (and (= x5891 x620) (= x28 0)) x809) x4921))
(assert (x3146 x1163))
(assert (= (or x4134 x1576) x185))
(assert (x2946 x3615))
(assert (x3761 x4709))
(assert (x2946 x5237))
(assert (x2946 x3368))
(assert (= 903454517 (x4465 (x821 903454517))))
(assert (= x1498 (and x6253 x210)))
(assert (x2946 x4037))
(assert (x2946 x3954))
(assert (x2946 x611))
(assert (x2946 x109))
(assert (x2946 x1401))
(assert (x2946 x2917))
(assert (x2946 x2302))
(assert (= x5384 (and (not x4568) x1519)))
(assert (x3761 x4410))
(assert (x3761 x1758))
(assert (x2946 x6245))
(assert (= x5477 (=> (and (= (= 0 x5984) x114) (or (not x114) x114)) x4712)))
(assert (= x1964 (or x1053 x1959)))
(assert (= x173 (and x3766 x6079)))
(assert (x2946 x1444))
(assert (x2946 x4471))
(assert (= (=> (and (= 0 x206) (= x1579 x678)) x742) x1503))
(assert (and (x2072 x1651 256) (x3935 x1651 256) (=> (> 256 0) (= (+ (* (x4941 x1651 256) 256) (x432 x1651 256)) x1651)) (x4154 x1651 256)))
(assert (= (and x1743 x5966) x3707))
(assert (x2946 x2365))
(assert (= (and x3851 (not x124)) x4800))
(assert (x5626 x1023))
(assert (x2946 x2343))
(assert (x2946 x5305))
(assert (= (and (not x2859) x2466) x4512))
(assert (x5626 x1265))
(assert (= (and (not x3958) x4788) x2093))
(assert (= x5529 (or x1874 x4961 x591 x1797 x1104 x5106 x5098 x1396 x6269 x1002 x1913 x4560 x122 x4301 x2204 x4611 x704 x1198)))
(assert (x2946 x226))
(assert (x2946 x3769))
(assert (x2946 x5844))
(assert (x2946 x3148))
(assert (= (and (not x844) x5441) x5426))
(assert (= (and (not x5157) x4998) x1680))
(assert (x5617 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5471))
(assert (x2946 x5637))
(assert (x2946 x637))
(assert (x2946 x1255))
(assert (=> (>= 10000 x938) (= (x4555 x938) (x821 x938))))
(assert (= (=> (and (= x6078 x5218) (= x3920 0)) x2984) x3143))
(assert (= (or x2079 x5836) x3386))
(assert (= (x4465 (x4555 x5556)) x5556))
(assert (= x2996 (and x2035 x4190)))
(assert (= (and x2185 x3396) x3866))
(assert (x2946 x2873))
(assert (= x4038 (and (not x3017) x3374)))
(assert (= x5140 (and (not x2171) x516)))
(assert (= (and (not x1468) x5781) x5936))
(assert (x2946 x5004))
(assert (x2946 x2516))
(assert (x2946 x113))
(assert (x2946 x2771))
(assert (x2946 x4351))
(assert (= (and (not x2016) x2032) x3045))
(assert (x2946 x1500))
(assert (x2946 x1213))
(assert (x2946 x195))
(assert (= x3514 (and x3180 x2401)))
(assert (x2946 x2890))
(assert (= (or x1094 x2998) x18))
(assert (= (or x1810 x457 x1190 x5679 x743 x4336 x5588 x832 x4879 x2991 x4949 x3540 x6101 x3472 x5718 x5745 x4976 x2314 x5264 x1380 x4310 x1907 x4715 x2473 x2452 x451 x2983) x2998))
(assert (= x3529 (and (not x3290) x5384)))
(assert (x2946 x3065))
(assert (= x3395 (=> (and (= x6041 x5984) (= x6377 x5362)) x5477)))
(assert (x4723 x215 x5062 x3951 x1163))
(assert (x2946 x2432))
(assert (= (and (not x2584) x4376) x4086))
(assert (= (or x5773 x4917) x4456))
(assert (x2946 x6419))
(assert (x2946 x5447))
(assert (= x3301 (and x2140 (not x4743))))
(assert (= (and x2163 x2862) x5124))
(assert (= (or x2021 x4395) x1094))
(assert (= (and (not x2284) x123) x2823))
(assert (x2946 x1532))
(assert (= x665 (and (not x2880) x3794)))
(assert (x2946 x2595))
(assert (= (and x4200 (not x659)) x2597))
(assert (= (=> (and (= x5814 x2352) (= x6233 x3455)) x5219) x3479))
(assert (x2468 x2338))
(assert (x2946 x2796))
(assert (x3761 x2825))
(assert (x3160 x215 (- x1346 x215)))
(assert (x2946 x2499))
(assert (= (x4465 (x4555 x261)) x261))
(assert (x2946 x2973))
(assert (x2946 x1122))
(assert (x2946 x6320))
(assert (= x3416 (and x173 x234)))
(assert (= x3793 (or x1649 x869 x4831 x3806 x4657 x1902 x1244 x1329 x2388 x1261 x4529 x5834 x182 x3719 x865)))
(assert (= x5807 (and x5395 x2193)))
(assert (=> (<= x2006 10000) (= (x821 x2006) (x4555 x2006))))
(assert (= x3344 (and x782 x61)))
(assert (x3160 x215 (- x5471 x3021)))
(assert (x2946 x4718))
(assert (x2946 x4939))
(assert (= (or x891 x5346) x5534))
(assert (x2946 x3875))
(assert (x3812 x2442))
(assert (=> (<= x6059 10000) (= (x4555 x6059) (x821 x6059))))
(assert (= x4300 (or x1784 (and x4858 (not x114)))))
(assert (= x6142 (=> (and (= x3532 x2352) (= x2308 x6233)) x5219)))
(assert (= (and x2588 x914) x3108))
(assert (x2946 x2965))
(assert (x1752 x4645))
(assert (x5617 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3021))
(assert (and (x2072 x5680 256) (x3935 x5680 256) (=> (> 256 0) (= (+ (* (x4941 x5680 256) 256) (x432 x5680 256)) x5680)) (x4154 x5680 256)))
(assert (=> (>= 10000 x1296) (= (x4555 x1296) (x821 x1296))))
(assert (= x4787 (and x4444 x5)))
(assert (= 2542517689 (x4465 (x821 2542517689))))
(assert (x3146 (- x1163 x2533)))
(assert (x2946 x1672))
(assert (x2946 x4386))
(assert (= x2028 (=> (and (= x732 x2011) (= x5283 x6348)) x696)))
(assert (x3761 x2302))
(assert (= x1368 (and x4407 x3636)))
(assert (= x5570 (and x1709 x3815)))
(assert (= x4634 (and (not x3087) x3273)))
(assert (x2946 x300))
(assert (= (or x2578 x1175) x2272))
(assert (= x4542 (and x4235 x2004)))
(assert (= x2818 (and x427 x794)))
(assert (= (and x3032 (not x1687)) x4467))
(assert (x2946 x4428))
(assert (x2946 x603))
(assert (x2468 x1568))
(assert (= (and (not x4235) x2004) x5049))
(assert (x2946 x4666))
(assert (= (and (not x4168) x190) x2387))
(assert (x2946 x1689))
(assert (= (x821 3600075382) (x4555 3600075382)))
(assert (= x1487 (or x893 x4111)))
(assert (= x4973 (x4465 (x4555 x4973))))
(assert (=> (<= x6003 10000) (= (x821 x6003) (x4555 x6003))))
(assert (= (and (not x1219) x856) x588))
(assert (x2946 x5976))
(assert (= (and (not x3163) x6298) x4264))
(assert (= (and x5535 x1565) x1809))
(assert (= (=> (and (= x870 x880) (= 0 x1965)) x1622) x2333))
(assert (= x5203 (and x1355 (not x2336))))
(assert (x1752 x5220))
(assert (= (and x6089 x1825) x1602))
(assert (= x2066 (and x160 x5067)))
(assert (= (and x2561 x4578) x5018))
(assert (= x5406 (and (not x5492) x2831)))
(assert (= x6285 (and (not x418) x5251)))
(assert (= x3756 (and x3660 (not x1224))))
(assert (x2946 x2278))
(assert (x2946 x2734))
(assert (= (and (not x2373) x1826) x1787))
(assert (x2946 x4550))
(assert (x2946 x2400))
(assert (x2946 x5760))
(assert (= (x4465 (x821 669136355)) 669136355))
(assert (x2946 x2482))
(assert (x2946 x598))
(assert (= (and x1520 x3966) x1966))
(assert (= (and x4007 x6312) x416))
(assert (= x1762 (x4465 (x4555 x1762))))
(assert (= (and x2971 x3245) x5980))
(assert (x2946 x2628))
(assert (= (x4465 (x4555 x30)) x30))
(assert (x2946 x6186))
(assert (x2946 x148))
(assert (x5626 x464))
(assert (= x3031 (=> (and (= x637 x6156) (= x4090 x4867)) x2182)))
(assert (x2491 x215 x3021 x215 x1346))
(assert (x2946 x25))
(assert (= x4120 (and x1756 x1741)))
(assert (x2946 x2544))
(assert (x3761 x30))
(assert (x2946 x1951))
(assert (= (and (not x222) x461) x6113))
(assert (x5626 x9))
(assert (x3761 x5405))
(assert (x2491 x3021 x215 x215 x5471))
(assert (= (and (not x2444) x1836) x2942))
(assert (= x4624 (and (not x3546) x357)))
(assert (x3146 (- x3021 x3951)))
(assert (= (and x5639 (not x4684)) x2124))
(assert (x2946 x3104))
(assert (= x2089 (and x972 x6390)))
(assert (= x1646 (x4465 (x4555 x1646))))
(assert (x2946 x4057))
(assert (= (and x5713 x5177) x3903))
(assert (= x2936 (or x1463 x4102)))
(assert (x2946 x3319))
(assert (= (=> (and (or (not x5977) x5977) (= (= x637 0) x5977)) x6042) x2182))
(assert (= (and x5877 (not x680)) x5395))
(assert (x2946 x4381))
(assert (= (x4465 (x821 100135927934651036221761091863598459016256155049858187411712977198722809069568)) 100135927934651036221761091863598459016256155049858187411712977198722809069568))
(assert (x2946 x691))
(assert (x2946 x2613))
(assert (x2946 x256))
(assert (x3761 x4027))
(assert (x2946 x3534))
(assert (= (and (not x4285) x4324) x5894))
(assert (x2946 x3596))
(assert (x2946 x2586))
(assert (x2946 x4700))
(assert (x2946 x121))
(assert (x2491 x215 x5471 x215 x1346))
(assert (x2946 x3167))
(assert (x2946 x2107))
(assert (x2946 x2339))
(assert (and (x2072 x5731 1461501637330902918203684832716283019655932542976) (x3935 x5731 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x5731 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x5731 1461501637330902918203684832716283019655932542976)) x5731)) (x4154 x5731 1461501637330902918203684832716283019655932542976)))
(assert (x2946 x2848))
(assert (=> (>= 10000 x2369) (= (x4555 x2369) (x821 x2369))))
(assert (= x5855 (x4465 (x4555 x5855))))
(assert (= (and x4370 x4585) x2504))
(assert (x2946 x1211))
(assert (x2946 x2011))
(assert (= x6298 (and x110 (not x3819))))
(assert (= x1959 (and x2198 (not x4160))))
(assert (= x420 (and (not x231) x5406)))
(assert (x2946 x4092))
(assert (x2946 x4581))
(assert (x3160 x3951 (- x1163 x215)))
(assert (= x1270 (=> (= (< x5471 x693) x1202) (and (=> x1202 x499) (=> (and (= x4519 (< x5471 x693)) (not x1202)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3104) (= x1867 (> x5471 x3104)) (<= 0 x3104) (= (x5195 (x4555 x69) (x821 2) 0) x2609) (= (x3726 (- x5471 x693)) x2474) (= (x4346 x2609) x3104)) (not x4519)) (and (=> (and (= x2690 (> x5471 x3104)) (not x1867)) (and (=> (and (not x2690) (and (= (x3726 (- x3104 x5471)) x5288) (= x6288 (x3036 x5880)) (= (x4950 1461501637330902918203684832716283019655932542975 x4719) x4938) (= (< x1007 x6288) x3518) (>= x6288 0) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2474)) x1007) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6288) (= (x5195 (x4555 x4938) (x821 2) 0) x5880) (= x4018 (x5195 (x4555 x69) (x821 2) 0)))) (and (=> (and (not x3518) (and (= (< x671 x6288) x1179) (= x671 (x3844 (+ x2474 x6288))))) (and (=> x1179 x499) (=> (and (and (= x4285 (< 0 x693)) (= x4287 (x4950 1461501637330902918203684832716283019655932542975 x4719)) (= x320 (x5195 (x4555 x4287) (x821 2) 0))) (not x1179)) (and (=> (and x4285 (and (>= x3005 0) (= (x5195 (x4555 x3005) (x821 2) 0) x3568) (<= x3005 1461501637330902918203684832716283019655932542975) (= x1629 (x4341 x3568)) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x693)) x3955) (> 1461501637330902918203684832716283019655932542976 x3005) (= (> x1629 x3955) x633) (<= x1629 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1629 0))) (and (=> x633 x499) (=> (and (and (= x61 (< x5318 x1629)) (= x5318 (x3844 (+ x1629 x693)))) (not x633)) (and (=> (and (not x61) (and (< x3005 1461501637330902918203684832716283019655932542976) (= x1586 (x5195 (x4555 x3005) (x821 2) 0)) (<= x3005 1461501637330902918203684832716283019655932542975) (< x3005 1461501637330902918203684832716283019655932542976) (>= x3005 0) (>= 1461501637330902918203684832716283019655932542975 x3005) (>= x3005 0))) x1172) (=> x61 x499))))) (=> (not x4285) x1172))))) (=> x3518 x499))) (=> x2690 x499))) (=> x1867 x499))) (=> x4519 x499)))))))
(assert (= x2779 (and x5234 (not x3156))))
(assert (=> (>= 10000 x2437) (= (x4555 x2437) (x821 x2437))))
(assert (x1752 x4619))
(assert (x2946 x4380))
(assert (= (and x2840 (not x71)) x306))
(assert (= x6325 (=> (and (= x4913 0) (= x5891 x5231)) x171)))
(assert (and (x2072 x4886 32) (x3935 x4886 32) (=> (> 32 0) (= (+ (* (x4941 x4886 32) 32) (x432 x4886 32)) x4886)) (x4154 x4886 32)))
(assert (x2946 x1929))
(assert (= (and x379 x760) x5573))
(assert (= (or x6430 x4935) x5499))
(assert (x2946 x84))
(assert (= x649 (and (not x2955) x4153)))
(assert (= x6284 (=> (and (= x4867 x5218) (= x6156 0)) x3031)))
(assert (x2946 x4790))
(assert (x2946 x1715))
(assert (x1795 x1316))
(assert (=> (<= x2893 10000) (= (x4555 x2893) (x821 x2893))))
(assert (= (x4465 (x4555 x4410)) x4410))
(assert (= (or x1600 x2467 x6066 x471 x1704 x1483 x6280 x4932 x3440) x2164))
(assert (= x1144 (x4465 (x4555 x1144))))
(assert (x3761 x5935))
(assert (= (or (and x145 (not x5888)) (and (not x5738) x4096) (and x31 x4540)) x2250))
(assert (= x4135 (and x1076 x3891)))
(assert (x2946 x1780))
(assert (= x4156 (or x3012 (and x5467 x2186) x4834 x4891 (and (not x462) x2554) (and x1034 x5980) (and x2201 x5427) (and x2530 x2298) (and (not x323) x2701))))
(assert (x2946 x4245))
(assert (= x567 (and x4305 x23)))
(assert (= (and x797 x2015) x4693))
(assert (x2946 x3090))
(assert (= x2867 (and (=> (and (not x5460) (and (= x5242 (x5195 (x4555 x4666) (x821 5) 0)) (= 0 x300) (= (x5195 (x4555 x552) x5242 0) x3230) (= x228 1))) x5569) (=> x5460 x5443))))
(assert (x2946 x3038))
(assert (x2946 x2860))
(assert (= (and (not x3647) x4038) x279))
(assert (x2946 x4090))
(assert (x2946 x501))
(assert (= x3193 (or x4687 x4275 x2425 x2448)))
(assert (= (and (not x2607) x2272) x2232))
(assert (x3761 x3639))
(assert (= x347 (and x3445 x4049)))
(assert (x2946 x5425))
(assert (x2946 x5783))
(assert (x2468 x4064))
(assert (x2946 x6231))
(assert (= (and x4367 x6215) x4990))
(assert (x2946 x2543))
(assert (x2946 x2381))
(assert (x2946 x3830))
(assert (= x3792 (and x4407 (not x3636))))
(assert (x2946 x1147))
(assert (x2946 x6182))
(assert (= x2723 (or x5714 x291)))
(assert (x2946 x2735))
(assert (= (and (not x5243) x2253) x4500))
(assert (= x1923 (and x2435 x4748)))
(assert (x2946 x2959))
(assert (= (=> (and (= x356 x6239) (= x1921 x1461)) x2234) x4880))
(assert (= x4238 (and x3642 (not x3409))))
(assert (= (and x1202 x2585) x1292))
(assert (x2946 x3158))
(assert (= (and (not x1017) x1194) x2484))
(assert (= (and x641 x4113) x1988))
(assert (= x3440 (and x2939 x2557)))
(assert (x2946 x263))
(assert (= (and (not x2433) x3463) x2769))
(assert (x2946 x6242))
(assert (x2946 x4522))
(assert (=> (>= 10000 x1793) (= (x821 x1793) (x4555 x1793))))
(assert (x2946 x6263))
(assert (x3761 x6003))
(assert (x2491 x5062 x215 x1163 x3951))
(assert (x2946 x6033))
(assert (x2946 x333))
(assert (= x6095 (and x2801 x3379)))
(assert (x2491 x215 x2533 x215 x5471))
(assert (= x4701 (and x1153 x3928)))
(assert (= (or (and x4632 (not x1298)) (and x6340 x1639)) x4357))
(assert (= (and x3608 x4484) x2949))
(assert (= x3174 (x4465 (x4555 x3174))))
(assert (x5626 x5879))
(assert (x2946 x2644))
(assert (x2946 x657))
(assert (x2946 x4824))
(assert (=> (<= x5576 10000) (= (x4555 x5576) (x821 x5576))))
(assert (x2946 x908))
(assert (x2946 x1916))
(assert (= (and x5414 (not x4273)) x2142))
(assert (= x695 (and x1078 x3650)))
(assert (= (and (not x5174) x2139) x1810))
(assert (x2946 x206))
(assert (x2946 x5429))
(assert (= x5065 (or x5308 x2126)))
(assert (x4723 x215 x2533 x3951 x1163))
(assert (x2946 x2813))
(assert (= (x4465 (x4555 x1258)) x1258))
(assert (x2946 x4514))
(assert (x2946 x1596))
(assert (= x122 (and x3659 (not x5432))))
(assert (= x925 (=> (and (<= 0 x4647) (= x4755 (< x4647 x2482)) (= x2567 (x5195 (x4555 x5542) (x821 1) 0)) (<= x4647 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5542 (x4950 1461501637330902918203684832716283019655932542975 x5204)) (= x4647 (x4685 x2567))) (and (=> x4755 x5133) (=> (and (not x4755) (and (= x3149 (< x1371 x3603)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3603) (= x5197 (x3726 (- x4647 x2482))) (>= x3603 0) (= (x5017 x1226) x3603) (= x1371 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2482))) (= x1226 (x5195 (x4555 x3675) (x821 1) 0)))) (and (=> (and (and (= 32 x4737) (= x4899 (x3844 (+ x3603 x2482))) (= 1 x5295)) (not x3149)) x4727) (=> x3149 x5133)))))))
(assert (= (and (not x1741) x1756) x3159))
(assert (= (or x4544 (and x3760 (not x1287))) x1322))
(assert (x3761 x3615))
(assert (= (and x5904 (not x1462)) x4760))
(assert (= x2933 (=> (and (= x4080 x49) (= x1971 0)) x2865)))
(assert (x2946 x3801))
(assert (x2946 x5399))
(assert (= x3853 (and x2450 x6264)))
(assert (= x6071 (and x3083 (not x2809))))
(assert (x2946 x6177))
(assert (= (and (not x4818) x613) x953))
(assert (and (x2072 x2338 1461501637330902918203684832716283019655932542976) (x3935 x2338 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x2338 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x2338 1461501637330902918203684832716283019655932542976)) x2338)) (x4154 x2338 1461501637330902918203684832716283019655932542976)))
(assert (= (and x6398 (not x6350)) x1067))
(assert (= x3961 (and x1806 x1828)))
(assert (x2946 x4670))
(assert (x2946 x5401))
(assert (x2946 x4438))
(assert (x2946 x6088))
(assert (= x3781 (and x3798 x3559)))
(assert (=> (>= 10000 x30) (= (x821 x30) (x4555 x30))))
(assert (= x2413 (and x4100 x376)))
(assert (= (and x550 x37) x2473))
(assert (= x2314 (and x4378 x5758)))
(assert (x2946 x4985))
(assert (x2946 x4681))
(assert (x2946 x3541))
(assert (x2946 x5676))
(assert (x2946 x983))
(assert (= x5287 (and x1123 (not x3697))))
(assert (x2946 x5480))
(assert (x2491 x215 x5062 x1163 x3951))
(assert (= (and x2131 x5051) x292))
(assert (= x5263 (and (not x1051) x802)))
(assert (= (and x3555 x4184) x4586))
(assert (= x3445 (and x365 (not x990))))
(assert (x2946 x1946))
(assert (x2946 x89))
(assert (x2946 x4027))
(assert (x2946 x5755))
(assert (= x391 (and x3584 x6153)))
(assert (= (and x6193 x2124) x1998))
(assert (x3761 x4514))
(assert (x2946 x3957))
(assert (x2946 x6387))
(assert (x2946 x4345))
(assert (x2946 x5605))
(assert (= x2756 (and (not x1857) x4914)))
(assert (= (and x994 x6076) x2658))
(assert (= (and x224 x5413) x2090))
(assert (= x4594 (and x1926 x1681)))
(assert (= x5935 (x4465 (x4555 x5935))))
(assert (x3761 x4692))
(assert (= (x4555 82641394424300342035733052706735002277943222088490025348945809093694544936960) (x821 82641394424300342035733052706735002277943222088490025348945809093694544936960)))
(assert (x2946 x305))
(assert (x2946 x1872))
(assert (= x5994 (and x3659 x5432)))
(assert (= (and x1379 x2719) x4597))
(assert (x2946 x654))
(assert (x2946 x6237))
(assert (x2946 x1845))
(assert (= (and x3007 x764) x1000))
(assert (= (or x3014 x4078) x1473))
(assert (x2946 x926))
(assert (x3761 x1207))
(assert (= (and (not x2501) x2821) x4804))
(assert (= x4218 (and x1739 x3685)))
(assert (= (and x5068 x3411) x2548))
(assert (x3160 x1163 (- x3951 x2533)))
(assert (x2946 x3110))
(assert (x2946 x13))
(assert (= (and x3661 (not x3539)) x2751))
(assert (= (and (not x4519) x788) x4252))
(assert (x2946 x1276))
(assert (= x5569 (=> (and (= x300 x4090) (= x228 x637)) x2182)))
(assert (= x493 (and (not x5376) x3154)))
(assert (x2946 x134))
(assert (x2946 x5513))
(assert (= x2836 (and x4516 (not x3008))))
(assert (x3146 (- x2533 x3021)))
(assert (x2946 x578))
(assert (= x3488 (=> (and (= x6115 x3596) (= 0 x2636)) x490)))
(assert (= (and x3312 (not x5497)) x605))
(assert (x2491 x2533 x215 x1163 x3951))
(assert (x2946 x329))
(assert (= (and (not x3131) x4934) x1421))
(assert (x3160 x215 (- x2533 x3951)))
(assert (x2946 x2531))
(assert (x2946 x6114))
(assert (= (and x1443 x1288) x3487))
(assert (= (and x76 x4599) x2135))
(assert (x2946 x3019))
(assert (x2946 x4204))
(assert (x2946 x6180))
(assert (x2946 x3051))
(assert (x2946 x1188))
(assert (= (x4465 (x4555 x3993)) x3993))
(assert (x2946 x4539))
(assert (x2946 x128))
(assert (x2946 x1312))
(assert (x2946 x5851))
(assert (= x627 (and x1336 x3084)))
(assert (x2946 x1613))
(assert (= x461 (and x3705 x3450)))
(assert (x2946 x1091))
(assert (= x4320 (and x6065 x4058)))
(assert (x2491 x3951 x1163 x2533 x215))
(assert (= x3461 (and (not x1359) x5203)))
(assert (x3761 x2637))
(assert (= (x4555 2644395612) (x821 2644395612)))
(assert (x3761 x1638))
(assert (x2946 x3384))
(assert (x2946 x3587))
(assert (= (and (not x2778) x3909) x5978))
(assert (x2946 x981))
(assert (= (and x6342 x5768) x516))
(assert (x2946 x3655))
(assert (= (and x2032 x2016) x5745))
(assert (x2946 x1621))
(assert (x2491 x5471 x215 x215 x2533))
(assert (= (and (not x5692) x5282) x1013))
(assert (x2468 x2914))
(assert (x2946 x1632))
(assert (x2946 x3490))
(assert (= x3850 (=> (and (or x2439 (not x2439)) (= x2439 (= x784 0))) x4364)))
(assert (x2946 x5808))
(assert (=> (>= 10000 x5930) (= (x4555 x5930) (x821 x5930))))
(assert (= (=> (and (= x4141 x6239) (= x5482 x1921)) x2234) x3128))
(assert (x2946 x3735))
(assert (= x1165 (and x129 x3336)))
(assert (x2946 x6233))
(assert (= (and x2698 x6360) x6026))
(assert (x2946 x4220))
(assert (x2946 x3910))
(assert (= (and x3934 (not x4502)) x1002))
(assert (=> (>= 10000 x5542) (= (x821 x5542) (x4555 x5542))))
(assert (= x4270 (and x3047 x29)))
(assert (x3761 x3189))
(assert (= x4484 (and x3693 (not x4105))))
(assert (x2946 x3497))
(assert (= x4854 (or x1465 x3849 x3988 x4791 x4569 x4906)))
(assert (x1752 x4064))
(assert (x2946 x2001))
(assert (= x4405 (and x3307 (not x2600))))
(assert (x2946 x2668))
(assert (x2946 x4402))
(assert (= x2513 (=> (and (= x1375 x1579) (= x3919 0)) x97)))
(assert (= x6382 (and x5551 (not x4060))))
(assert (x2946 x5209))
(assert (= (x4465 (x821 599290589)) 599290589))
(assert (= x4376 (and (not x2202) x854)))
(assert (x5626 x2022))
(assert (=> (>= 10000 x4412) (= (x4555 x4412) (x821 x4412))))
(assert (= 117300739 (x4465 (x821 117300739))))
(assert (= x4694 (and x4871 x6204)))
(assert (x2946 x3993))
(assert (= (and x2068 (not x5689)) x802))
(assert (x2946 x1400))
(assert (= x2207 (and x2948 (not x3771))))
(assert (= x858 (and x5031 x5961)))
(assert (= (and x5232 x828) x5088))
(assert (x2946 x4026))
(assert (= x6303 (and (not x2055) x3139)))
(assert (=> (<= x3413 10000) (= (x4555 x3413) (x821 x3413))))
(assert (x2946 x5026))
(assert (x2946 x4740))
(assert (x3761 x3583))
(assert (x2946 x5223))
(assert (and (x6393 x6243 10000) (x6383 x6243 10000) (=> (and (< 0 10000) (< 0 x6243)) (and (<= (* (x4941 x6243 10000) 10000) x6243) (< (- x6243 10000) (* (x4941 x6243 10000) 10000)))) (x2854 x6243 10000) (x1495 x6243 10000)))
(assert (x2946 x1876))
(assert (= (and x6029 (not x1049)) x2900))
(assert (x2946 x4089))
(assert (= (x4465 (x4555 x1937)) x1937))
(assert (x2946 x2869))
(assert (x3761 x1222))
(assert (x2491 x215 x5062 x3021 x215))
(assert (= x5101 (and x3023 x2608)))
(assert (= x3998 (and (not x1616) x1947)))
(assert (x2946 x3751))
(assert (x2491 x3021 x215 x215 x2533))
(assert (x2946 x2645))
(assert (x2946 x4152))
(assert (x2946 x5502))
(assert (= x1911 (=> (and (= x4455 x2011) (= x6348 x3996)) x696)))
(assert (= (x4465 (x4555 x3830)) x3830))
(assert (and (x2072 x103 256) (x3935 x103 256) (=> (> 256 0) (= (+ (* (x4941 x103 256) 256) (x432 x103 256)) x103)) (x4154 x103 256)))
(assert (x2946 x5643))
(assert (= (=> (and (= x4737 x6377) (= x5295 x5984)) x5477) x4727))
(assert (= x1015 (and x3211 x1493)))
(assert (= (=> (and (= x820 x1579) (= x4844 0)) x4642) x3297))
(assert (= 2512374353 (x4465 (x821 2512374353))))
(assert (= x2990 (or x1162 x5330)))
(assert (x2946 x5879))
(assert (x2468 x5879))
(assert (= x2585 (or x526 x504)))
(assert (x2468 x4550))
(assert (x2946 x2335))
(assert (x2946 x1767))
(assert (= x1018 (and x2769 (not x5826))))
(assert (= (and x1657 (not x6367)) x1577))
(assert (= x3464 (and (not x4131) x5572)))
(assert (x2946 x325))
(assert (x2946 x6426))
(assert (= x2884 (and x6246 (not x3518))))
(assert (x2946 x3741))
(assert (=> (>= 10000 x552) (= (x4555 x552) (x821 x552))))
(assert (x2946 x2636))
(assert (=> (<= x84 10000) (= (x821 x84) (x4555 x84))))
(assert (x2946 x1801))
(assert (x2946 x3914))
(assert (= (and x4502 x3934) x3659))
(assert (x2491 x1163 x3951 x1346 x215))
(assert (= (or x5674 x5833) x5072))
(assert (=> (<= x1736 10000) (= (x821 x1736) (x4555 x1736))))
(assert (= x574 (and x244 (not x4487))))
(assert (x2946 x2748))
(assert (= x2385 (or x2049 x3839)))
(assert (x2946 x763))
(assert (= (and x1924 (not x3558)) x3357))
(assert (x3812 x4422))
(assert (x2946 x1453))
(assert (= (x4465 (x4555 x4672)) x4672))
(assert (x2946 x4412))
(assert (x2946 x5562))
(assert (x2946 x2451))
(assert (x3146 (- x3951 x3021)))
(assert (= x5187 (and x5070 (not x562))))
(assert (x2946 x3025))
(assert (= x5058 (=> (and (= x5283 x6159) (= 0 x732)) x2028)))
(assert (= x4353 (and x4683 x1816)))
(assert (x2946 x538))
(assert (x2946 x4429))
(assert (x5626 x4550))
(assert (x2946 x119))
(assert (= x4020 (and x231 x5406)))
(assert (x2946 x3132))
(assert (=> (<= x3135 10000) (= (x4555 x3135) (x821 x3135))))
(assert (= (and x2319 (not x6210)) x2448))
(assert (= x295 (and x4436 x5943)))
(assert (= (and (not x38) x3359) x6425))
(assert (= x4547 (and x4376 x2584)))
(assert (= (x821 2835717307) (x4555 2835717307)))
(assert (= (and x4682 x1158) x1460))
(assert (x3761 x4666))
(assert (= x6093 (and (not x2106) x4693)))
(assert (= x980 (and (not x5805) x3045)))
(assert (=> (>= 10000 x1317) (= (x4555 x1317) (x821 x1317))))
(assert (x2946 x5537))
(assert (x2946 x2407))
(assert (= (and (not x4506) x5705) x1656))
(assert (= x5764 (=> (= (> x2278 x2533) x5492) (and (=> x5492 x5245) (=> (and (= (> x2278 x2533) x231) (not x5492)) (and (=> (and (not x231) (and (<= 0 x1453) (<= x1453 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1105 x470) x1453) (= (x3726 (- x2533 x2278)) x2725) (= x1283 (> x2533 x1453)) (= x470 (x5195 (x4555 x3869) (x821 2) 0)))) (and (=> x1283 x5245) (=> (and (not x1283) (= x5762 (< x1453 x2533))) (and (=> (and (not x5762) (and (= x535 (< x721 x3427)) (= x1585 (x3726 (- x1453 x2533))) (>= x3427 0) (= (x2891 x5874) x3427) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2725)) x721) (= (x5195 (x4555 x3869) (x821 2) 0) x1099) (= (x5195 (x4555 x5576) (x821 2) 0) x5874) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3427))) (and (=> x535 x5245) (=> (and (and (= x2641 (x3844 (+ x3427 x2725))) (= (< x2641 x3427) x1049)) (not x535)) (and (=> x1049 x5245) (=> (and (and (= (< 0 x2278) x2844) (= (x5195 (x4555 x5576) (x821 2) 0) x456)) (not x1049)) (and (=> (and x2844 (and (>= x2875 0) (>= x3005 0) (> 1461501637330902918203684832716283019655932542976 x3005) (= (x5811 x2655) x2875) (<= x3005 1461501637330902918203684832716283019655932542975) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2278)) x1823) (= (< x1823 x2875) x590) (= x2655 (x5195 (x4555 x3005) (x821 2) 0)) (<= x2875 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x590) (and (= (x3844 (+ x2875 x2278)) x2556) (= (> x2875 x2556) x3697))) (and (=> (and (not x3697) (and (> 1461501637330902918203684832716283019655932542976 x3005) (> 1461501637330902918203684832716283019655932542976 x3005) (<= 0 x3005) (>= x3005 0) (= (x5195 (x4555 x3005) (x821 2) 0) x4994) (<= x3005 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x3005))) x3907) (=> x3697 x5245))) (=> x590 x5245))) (=> (not x2844) x3907))))))) (=> x5762 x5245))))) (=> x231 x5245)))))))
(assert (x3160 x5471 (- x215 x1346)))
(assert (x2946 x6149))
(assert (x2946 x3960))
(assert (x3761 x1736))
(assert (x2946 x4108))
(assert (x2946 x2721))
(assert (x2946 x4048))
(assert (= (and x3457 x2069) x5600))
(assert (=> (<= x4377 10000) (= (x821 x4377) (x4555 x4377))))
(assert (= x4768 (=> (and (= x2706 x831) (= x149 x1091)) x3625)))
(assert (x2946 x3026))
(assert (x2946 x6416))
(assert (= (and x3903 x3249) x1191))
(assert (x2946 x3265))
(assert (= (=> (and (= x4261 x6377) (= x6158 x5984)) x5477) x1812))
(assert (= (=> (and (= x4690 x637) (= x4090 x970)) x2182) x5361))
(assert (= x3165 (=> (and (= x853 x5891) (= x2784 0)) x2979)))
(assert (x2946 x6007))
(assert (x2946 x876))
(assert (= (and x4508 x2526) x2758))
(assert (= (and x2264 x3403) x865))
(assert (x2946 x2485))
(assert (= x2321 (or x1577 x3707 x2949 x2422 x792 x1353 x6417)))
(assert (x2491 x2533 x215 x215 x3021))
(assert (x5626 x3394))
(assert (x2946 x2633))
(assert (= (and x5421 (not x1387)) x4865))
(assert (x4723 x1163 x3951 x2533 x215))
(assert (= x2242 (=> (and (= x1579 x1888) (= 0 x560)) x3930)))
(assert (= x1092 (and x477 (not x3872))))
(assert (= x3320 (and x785 x4277)))
(assert (x2946 x3264))
(assert (x2946 x1721))
(assert (= (and x1976 x1408) x556))
(assert (= x4318 (=> (and (= x2146 x5599) (= 0 x784)) x3850)))
(assert (x2946 x2426))
(assert (= (and (not x2830) x5170) x5380))
(assert (= x4845 (or x6133 x2089)))
(assert (x2946 x2601))
(assert (x2946 x2294))
(assert (x2946 x6381))
(assert (x2946 x1167))
(assert (x2946 x6328))
(assert (x3761 x3986))
(assert (=> (<= x5584 10000) (= (x821 x5584) (x4555 x5584))))
(assert (= x2862 (and x4477 (not x6217))))
(assert (x2946 x1253))
(assert (= (or x6226 x719 x1036 x3386 x5499 x2312 x2110 x5552 x1223 x2737 x4845) x2611))
(assert (=> (>= 10000 x2817) (= (x821 x2817) (x4555 x2817))))
(assert (x2946 x4821))
(assert (x2946 x5390))
(assert (= x5329 (and x844 x5441)))
(assert (x2946 x4468))
(assert (= (and x1161 x514) x6198))
(assert (=> (<= x1758 10000) (= (x821 x1758) (x4555 x1758))))
(assert (= x1642 (and x5270 x99)))
(assert (= x5267 (=> (and (= x3825 0) (= x6106 x1060)) x4360)))
(assert (= (=> (and (= x905 x5891) (= x2477 0)) x4986) x5681))
(assert (x2946 x4933))
(assert (x2946 x5756))
(assert (= (and (not x1565) x5535) x703))
(assert (x2946 x5559))
(assert (x2946 x3802))
(assert (= x4666 (x4465 (x4555 x4666))))
(assert (x2946 x899))
(assert (= x4286 (and x3118 (not x4805))))
(assert (= (and x977 (not x5688)) x5547))
(assert (= x2524 (and (not x4612) x51)))
(assert (= x2416 (and x2395 x2555)))
(assert (= (and x5957 x4333) x120))
(assert (= x549 (or x2996 x4730 x3244 x241 x4594 x3571 x5926 x4542 x197 x6364 x2972 x3922 x673 x2167 x5832 x4177 x3434 x22)))
(assert (x2946 x3628))
(assert (= (x4465 (x821 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x4723 x5471 x215 x3951 x1163))
(assert (x3160 x3951 (- x1163 x3021)))
(assert (x2946 x5606))
(assert (x2946 x4973))
(assert (x2946 x5103))
(assert (= x1145 (and (not x1846) x3329)))
(assert (=> (>= 10000 x3303) (= (x4555 x3303) (x821 x3303))))
(assert (x2946 x3054))
(assert (x1752 x983))
(assert (=> (>= 10000 x111) (= (x821 x111) (x4555 x111))))
(assert (=> (<= x4410 10000) (= (x4555 x4410) (x821 x4410))))
(assert (x2946 x5787))
(assert (= x6059 (x4465 (x4555 x6059))))
(assert (x2946 x4999))
(assert (= (x4465 (x821 82641394424300342035733052706735002277943222088490025348945809093694544936960)) 82641394424300342035733052706735002277943222088490025348945809093694544936960))
(assert (= x380 (=> (= (< x1746 115792089237316195423570985008687907853269984665640564039457584007913129639935) x971) (and (=> (and x971 (= (> x3021 x1746) x1387)) (and (=> x1387 x2220) (=> (and (= (< x1746 x3021) x5317) (not x1387)) (and (=> x5317 x2220) (=> (and (not x5317) (and (= x383 (x5195 (x4555 x262) (x821 5) 0)) (= (x5195 (x4555 x5489) x383 0) x3722) (= x262 (x4950 1461501637330902918203684832716283019655932542975 x655)) (= (x3726 (- x1746 x3021)) x2177))) x4093))))) (=> (not x971) x4093)))))
(assert (x2946 x375))
(assert (x2946 x5244))
(assert (= (and x5069 x5097) x922))
(assert (= (and x1707 (not x6098)) x3852))
(assert (= (or (and x1988 (not x1631)) (and (not x4113) x641) (and x5018 x6200)) x652))
(assert (x2946 x2675))
(assert (x2946 x5220))
(assert (= (and x6204 (not x4871)) x1076))
(assert (= x2532 (and x2690 x1195)))
(assert (= x1052 (=> (and (= x705 0) (= x5322 x6106)) x1562)))
(assert (x2946 x2663))
(assert (= (x4465 (x4555 x5930)) x5930))
(assert (= x4866 (and x4808 (not x1352))))
(assert (x4723 x215 x5471 x1346 x215))
(assert (x2946 x3493))
(assert (= (=> (and (= x6115 x6213) (= 0 x2279)) x436) x5113))
(assert (x3160 x5471 (- x215 x3021)))
(assert (x2946 x3334))
(assert (x2946 x1197))
(assert (and (x2072 x3246 1461501637330902918203684832716283019655932542976) (x3935 x3246 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x3246 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x3246 1461501637330902918203684832716283019655932542976)) x3246)) (x4154 x3246 1461501637330902918203684832716283019655932542976)))
(assert (x2946 x1651))
(assert (= x1528 (and x1900 x1229)))
(assert (x2946 x4268))
(assert (x2491 x3951 x1163 x1346 x215))
(assert (= (and x6408 (not x2229)) x1816))
(assert (= x4553 (and x4964 (not x476))))
(assert (x2946 x3222))
(assert (= x5390 (x4465 (x4555 x5390))))
(assert (x2946 x806))
(assert (x1752 x2449))
(assert (= x3808 (and x2013 x2389)))
(assert (= x3531 (and (not x2715) x5929)))
(assert (= (and x651 x6127) x5561))
(assert (= x4653 (=> (and (= x188 x4090) (= x3780 x637)) x2182)))
(assert (= (=> (and (= x6007 x5984) (= x270 x6377)) x5477) x4123))
(assert (= x662 (and x840 (not x2783))))
(assert (x2946 x6274))
(assert (= x5346 (and (not x359) x3998)))
(assert (x2946 x4497))
(assert (x2946 x5446))
(assert (= (and x4573 x3582) x5560))
(assert (x2946 x1674))
(assert (= (and x3637 x60) x6195))
(assert (x2946 x2210))
(assert (= x1908 (or x1487 x701 x5065 x294 x5607 x6151 x5636 x3217 x2323 x5265 x682)))
(assert (x2946 x3526))
(assert (= x2654 (and x2196 x3947)))
(assert (x2946 x3316))
(assert (= x2461 (=> (and (= x5823 x1098) (= x3191 x6349)) x503)))
(assert (x2946 x5916))
(assert (= x833 (and x1816 (not x4683))))
(assert (x2946 x1346))
(assert (= x474 (x4465 (x4555 x474))))
(assert (= x6181 (=> (and (= x2992 x49) (= x4325 0)) x5130)))
(assert (x2946 x1385))
(assert (= x4433 (and x4396 x139)))
(assert (x2946 x3896))
(assert (x2946 x3232))
(assert (x2946 x4902))
(assert (= (or x3991 x3152) x1242))
(assert (= x673 (and x4781 (not x5132))))
(assert (x2946 x4695))
(assert (= (=> (= (> x146 x1346) x2362) (and (=> (and (not x2362) (= x1155 (> x146 x1346))) (and (=> x1155 x2713) (=> (and (and (= x5664 (x1105 x5751)) (= (< x5664 x1346) x315) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5664) (<= 0 x5664) (= (x5195 (x4555 x763) (x821 2) 0) x5751) (= (x3726 (- x1346 x146)) x4580)) (not x1155)) (and (=> x315 x2713) (=> (and (not x315) (= x1681 (< x5664 x1346))) (and (=> x1681 x2713) (=> (and (and (= (x3726 (- x5664 x1346)) x2748) (= x2521 (x5195 (x4555 x4557) (x821 2) 0)) (= (x5195 (x4555 x763) (x821 2) 0) x1954) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4580)) x3999) (= (< x3999 x1413) x2501) (= (x566 x2521) x1413) (<= 0 x1413) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1413)) (not x1681)) (and (=> x2501 x2713) (=> (and (not x2501) (and (= (x3844 (+ x1413 x4580)) x3545) (= (< x3545 x1413) x6170))) (and (=> x6170 x2713) (=> (and (and (= (< 0 x146) x487) (= (x5195 (x4555 x4557) (x821 2) 0) x978)) (not x6170)) (and (=> (not x487) x5273) (=> (and x487 (and (< x3005 1461501637330902918203684832716283019655932542976) (= x1860 (x818 x180)) (= x4148 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x146))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1860) (= x4190 (< x4148 x1860)) (<= 0 x1860) (<= x3005 1461501637330902918203684832716283019655932542975) (= x180 (x5195 (x4555 x3005) (x821 2) 0)) (<= 0 x3005))) (and (=> (and (and (= (> x1860 x1943) x4235) (= (x3844 (+ x1860 x146)) x1943)) (not x4190)) (and (=> (and (not x4235) (and (= x312 (x5195 (x4555 x3005) (x821 2) 0)) (>= 1461501637330902918203684832716283019655932542975 x3005) (< x3005 1461501637330902918203684832716283019655932542976) (<= 0 x3005) (<= 0 x3005) (<= x3005 1461501637330902918203684832716283019655932542975) (< x3005 1461501637330902918203684832716283019655932542976))) x5273) (=> x4235 x2713))) (=> x4190 x2713))))))))))))))) (=> x2362 x2713))) x2392))
(assert (= x936 (or x549 x1086)))
(assert (x2946 x2708))
(assert (x2946 x5345))
(assert (= x478 (and x425 x995)))
(assert (x3160 x2533 (- x215 x3951)))
(assert (x2468 x4249))
(assert (x2946 x2507))
(assert (= x3634 (and x151 x3668)))
(assert (= x2522 (=> (and (= x4090 x4351) (= x58 x637)) x2182)))
(assert (= (x4465 (x4555 x4709)) x4709))
(assert (x2946 x2218))
(assert (=> (<= x728 10000) (= (x821 x728) (x4555 x728))))
(assert (x2946 x2893))
(assert (= (and (not x3389) x3586) x2707))
(assert (= (and x3205 (not x2558)) x2402))
(assert (= x142 (or x4097 x2326)))
(assert (x2946 x4647))
(assert (x2946 x1574))
(assert (= x3293 (and x3582 (not x4573))))
(assert (x2946 x3856))
(assert (= x1777 (or (and x3843 (not x3144)) (and (not x992) x1037) (and x4266 x2012))))
(assert (x2946 x5770))
(assert (= x1239 (and x2709 (not x4490))))
(assert (x2946 x997))
(assert (x5626 x4886))
(assert (= (x4555 2542517689) (x821 2542517689)))
(assert (x2946 x3242))
(assert (= x4102 (or x1209 x1033 x3835 x2551 x4728 x3373 x1073 x1115 x3095 x4956 x57 x3046 x4802 x1166 x4020 x5301 x5996 x6071)))
(assert (= x116 (and x5868 (not x4590))))
(assert (x2946 x3948))
(assert (x4723 x5471 x215 x1346 x215))
(assert (= 3171951664 (x4465 (x821 3171951664))))
(assert (x2946 x303))
(assert (= x3113 (and x866 (not x1289))))
(assert (x2946 x561))
(assert (= x3794 (and x1143 (not x6046))))
(assert (= x4642 (=> (and (= x4844 x149) (= x820 x831)) x3625)))
(assert (x2946 x5340))
(assert (x3331 x4178 x5220))
(assert (= x2114 (and x4303 x1368)))
(assert (x2946 x3256))
(assert (= (and x717 (not x5762)) x2506))
(assert (x3761 x2760))
(assert (x2946 x4243))
(assert (= (and x287 (not x573)) x4081))
(assert (x2946 x3656))
(assert (= (and x3714 x2934) x4910))
(assert (= (and x4872 (not x2025)) x1071))
(assert (= x5535 (and x6089 (not x1825))))
(assert (x2946 x2761))
(assert (x2946 x2646))
(assert (x2946 x3354))
(assert (= x5385 (and (not x2331) x3800)))
(assert (x2946 x4067))
(assert (= x1407 (or x4297 x3785)))
(assert (= (and (not x633) x1561) x782))
(assert (= (and (not x4676) x4733) x5481))
(assert (x2468 x9))
(assert (x3146 (- x5062 x5471)))
(assert (= x614 (and x92 (not x6109))))
(assert (= x1918 (and (not x4792) x614)))
(assert (= x2581 (and (not x452) x2902)))
(assert (= x1518 (and x27 (not x3347))))
(assert (x2946 x2637))
(assert (= x1148 (and x2438 x275)))
(assert (x2946 x253))
(assert (x2946 x4221))
(assert (= x5873 (and x5141 (not x1652))))
(assert (x2946 x1180))
(assert (x4723 x3951 x1163 x2533 x215))
(assert (x2946 x2074))
(assert (x2946 x5350))
(assert (x2946 x4053))
(assert (= x2926 (or (and x4991 (not x5991)) (and x513 x5769) (and (not x1899) x5964))))
(assert (x2946 x6159))
(assert (= (and x2402 (not x2169)) x757))
(assert (= (and x1116 x4446) x5791))
(assert (= x3933 (and x5057 (not x10))))
(assert (x2491 x215 x5471 x2533 x215))
(assert (x2946 x3520))
(assert (= x4544 (and x3760 x1287)))
(assert (=> (>= 10000 x4971) (= (x821 x4971) (x4555 x4971))))
(assert (x2946 x5178))
(assert (x2946 x4094))
(assert (x2946 x4501))
(assert (= x3622 (and (not x976) x6094)))
(assert (x4723 x3021 x215 x2533 x215))
(assert (= x12 (and x1696 x2282)))
(assert (x2946 x1796))
(assert (x2946 x5741))
(assert (x2946 x1781))
(assert (= x1064 (and x5234 x3156)))
(assert (x2491 x215 x3021 x215 x5471))
(assert (x3146 (- x3951 x5471)))
(assert (= (and (not x725) x1809) x481))
(assert (x3817 x1265))
(assert (= x1143 (and x2391 (not x1505))))
(assert (x2946 x3284))
(assert (= (and (not x5402) x1015) x4957))
(assert (x2946 x5525))
(assert (= x3925 (and (not x2208) x4624)))
(assert (x2946 x219))
(assert (x3812 x1651))
(assert (= (x821 1461501637330902918203684832716283019655932542976) (x4555 1461501637330902918203684832716283019655932542976)))
(assert (= x6342 (and x2320 (not x1132))))
(assert (x2946 x4977))
(assert (= x5141 (and x5784 x987)))
(assert (= x1278 (=> (and (= x4799 0) (= x722 x3443)) x3412)))
(assert (= x883 (and x613 x4818)))
(assert (x2946 x5884))
(assert (x2946 x2703))
(assert (= x2812 (=> (and (= x5218 x2510) (= 0 x815)) x5804)))
(assert (= (and x5206 x4747) x1827))
(assert (x2946 x3746))
(assert (x2946 x3848))
(assert (=> (<= x2670 10000) (= (x821 x2670) (x4555 x2670))))
(assert (= (and (not x4144) x6403) x201))
(assert (x2946 x6130))
(assert (= x4479 (and x4965 x3820)))
(assert (x2946 x4452))
(assert (x2946 x1372))
(assert (= (and (not x3813) x5687) x729))
(assert (= (and (not x4554) x6122) x2282))
(assert (= x6037 (and x387 (not x5277))))
(assert (x2946 x728))
(assert (x2946 x1629))
(assert (= x4244 (and x2095 (not x1176))))
(assert (x2946 x3984))
(assert (x2946 x2857))
(assert (x2946 x5619))
(assert (= (x4555 20853193852723734048814770637610870652489083209607696777694672748161462697984) (x821 20853193852723734048814770637610870652489083209607696777694672748161462697984)))
(assert (x3761 x5454))
(assert (x2946 x4859))
(assert (= (x4465 (x4555 x2437)) x2437))
(assert (x2946 x910))
(assert (= x2972 (and x2501 x2821)))
(assert (x2946 x3888))
(assert (= (and x277 x5694) x2733))
(assert (= (and (not x1472) x6303) x3011))
(assert (x2946 x1571))
(assert (= (and (not x6295) x4211) x3734))
(assert (x2946 x5519))
(assert (x2946 x3767))
(assert (x3761 x111))
(assert (x2946 x1990))
(assert (= x3177 (or (and x5192 (not x4967)) x382)))
(assert (x2946 x3890))
(assert (x1795 10000))
(assert (x3761 x795))
(assert (= x3936 (and (not x5042) x3662)))
(assert (x1752 x4249))
(assert (= x1216 (and (not x4291) x6382)))
(assert (= x5553 (and x677 (not x5835))))
(assert (= (and x2434 x3938) x3864))
(assert (= x200 (or x1603 x5491)))
(assert (= x3806 (and x5825 x1835)))
(assert (x2946 x2824))
(assert (x2946 x993))
(assert (= x5781 (and (not x1443) x1288)))
(assert (= x17 (and (not x3838) x4866)))
(assert (x2946 x1286))
(assert (= (=> (and (= x1921 x5322) (= x6239 x705)) x2234) x1562))
(assert (= (and x858 (not x4572)) x1475))
(assert (x2946 x6332))
(assert (x2946 x6323))
(assert (= x5674 (or x6105 x5894)))
(assert (x2946 x5556))
(assert (= x1247 (and x5255 x5721)))
(assert (x2946 x342))
(assert (x3331 x933 x2909))
(assert (= x3448 (=> (and (= x6159 x623) (= 0 x5244)) x4254)))
(assert (= (and x3622 x4757) x1058))
(assert (= (=> (and (= x3992 0) (= x5748 1)) x5767) x5273))
(assert (x3146 (- x3951 x5062)))
(assert (= (or x6314 x3460) x3798))
(assert (x2946 x4225))
(assert (x2946 x2679))
(assert (= (or x1769 x1566 x1050 x5630 x1923 x686) x6074))
(assert (x4723 x215 x1346 x3021 x215))
(assert (x2946 x1748))
(assert (= x3633 (=> (and (= x2011 x726) (= x2257 x6348)) x696)))
(assert (= (or x2718 x5418) x3658))
(assert (= (and x4664 (not x863)) x2185))
(assert (= x1949 (=> (and (= x579 x4298) (= x1394 x947)) x5152)))
(assert (x2946 x3755))
(assert (= 3590908516 (x4465 (x821 3590908516))))
(assert (= (and (not x3900) x5481) x5234))
(assert (= x6417 (and x2547 x6301)))
(assert (x2946 x4178))
(assert (= (and (not x1878) x5210) x473))
(assert (x2946 x428))
(assert (= x1948 (and x3326 x5903)))
(assert (=> (<= x1222 10000) (= (x821 x1222) (x4555 x1222))))
(assert (x2946 x4382))
(assert (x2946 x2711))
(assert (= x3263 (x4465 (x4555 x3263))))
(assert (=> (>= 10000 x3986) (= (x821 x3986) (x4555 x3986))))
(assert (x3761 x6166))
(assert (= (or x2568 x4010) x2021))
(assert (= x5576 (x4465 (x4555 x5576))))
(assert (= x4769 (and x6396 x5788)))
(assert (= x112 (and (not x427) x794)))
(assert (x2946 x3243))
(assert (x2946 x5686))
(assert (= x5443 (=> (and (= 0 x228) (= x5218 x300)) x5569)))
(assert (x2946 x6120))
(assert (= (=> (and (and (>= x4765 0) (not (> 4 x3500)) (= x1516 2644395612) (= x4069 (x4941 x1316 10000)) (<= x1684 1461501637330902918203684832716283019655932542975) (= x5864 x2342) (= x4476 x1004) (>= x4619 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x176) (= 0 x1628) (< (x6194 x3951 x1163) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x4619 x5838) (= 128 x6088) (>= x1684 0) (<= 0 x1163) (= x584 x169) (= x4166 (= 0 x169)) (<= 0 x1439) (>= x176 0) (> x3098 0) (= x3951 x2064) (= (= x474 x1439) x1694) (not (= x1516 2542517689)) (<= x1163 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x2775 0)) (< x1516 3065339685) (= x3951 x4982) (= (x3726 (- x3500 4)) x5818) (= x3098 (x353 (x4555 x5489))) (= x1470 0) (<= x1439 1461501637330902918203684832716283019655932542975) (= (x6194 x3951 x1163) x1316) (= x1889 (+ x1535 x5906)) (= x1004 x5166) (not (= x176 2)) (<= x1004 1461501637330902918203684832716283019655932542975) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3951 x4069)) (>= 1461501637330902918203684832716283019655932542975 x4765) (= (x353 (x4555 x1439)) x2775) (= x1470 x4032) (= x5906 x3951) (not (= x1516 2512374353)) (<= x4619 1461501637330902918203684832716283019655932542975) (and (> x3500 67) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3500) true)) (> 1461501637330902918203684832716283019655932542976 x1439) (not (= 0 x4069)) (= x4765 x2342) (= x542 x3951) (not (or (and (= (<= x5818 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x5818 64)) (> x5818 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1535 x4069) x4166 (not (< x1516 2512374353))) (and (= x335 x584) (= (x2832 128) x335) (not (or (> x6348 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x6348 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x6348 32)))) (not (= 0 x2011)))) (and (=> (and (= (= x1439 x3551) x1940) (not x1694)) (and (=> (and (not x1940) (= x29 (= x1439 x2893))) (and (=> (and (and (not (> 4 x1583)) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1502)) (< x1502 96)) (> x1502 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1291) (= (x353 (x4555 x2893)) x2000) (not (= x5657 117300739)) (= (x3726 (- x1583 4)) x1502) (= x2064 x55) (not (= 404098525 x5657)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3272) (not (= x5657 157198259)) (= x5657 599290589) (= x4619 x2914) (> 961581905 x5657) (< 0 x2000) (not (= 543189872 x5657)) (> 1901074598 x5657) (= 100 x1583) (= x5489 x753) (= 100 x1583)) x29) (and (=> (and (not x1291) (and (= x338 (= x5489 x753)) (= x1673 x753))) (and (=> (and x338 (and (= (x4950 1461501637330902918203684832716283019655932542975 x4619) x1876) (= x3158 x2914) (= x1267 (= x4619 x1876)))) (and (=> (not x1267) x5839) (=> (and (and (= x5010 x55) (= (= x753 0) x974)) x1267) (and (=> x974 x5839) (=> (and (not x974) (and (= (= x6167 0) x3878) (= (x4950 1461501637330902918203684832716283019655932542975 x2914) x6167))) (and (=> x3878 x5839) (=> (and (and (= x1146 (< x5216 x55)) (= x5216 (x3765 x4179)) (= (x5195 (x4555 x753) (x821 0) 0) x4179) (>= x5216 0) (<= x5216 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1409 128)) (not x3878)) (and (=> x1146 x5839) (=> (and (= x2511 (> x55 x5216)) (not x1146)) (and (=> (and (not x2511) (and (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x55)) x2669) (= (x4950 1461501637330902918203684832716283019655932542975 x2914) x2289) (= (x3726 (- x5216 x55)) x3314) (>= x3797 0) (= x4311 (x5195 (x4555 x753) (x821 0) 0)) (= x3797 (x150 x6184)) (<= x3797 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1851 (< x2669 x3797)) (= (x5195 (x4555 x2289) (x821 0) 0) x6184))) (and (=> (and (and (= x5999 (x3844 (+ x55 x3797))) (= x6366 (< x5999 x3797))) (not x1851)) (and (=> x6366 x5839) (=> (and (not x6366) (and (= (x5195 (x4555 x111) (x821 0) 0) x3982) (<= 0 x1733) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1733) (= (x5195 (x4555 x5489) x3323 0) x4083) (= (x3321 x4083) x1733) (= 224 x4566) (= (< x1733 x55) x4731) (= (x5195 (x4555 x753) (x821 1) 0) x3323) (= x111 (x4950 1461501637330902918203684832716283019655932542975 x2914)))) (and (=> (and (not x4731) (= (> x55 x1733) x1900)) (and (=> (and (and (= (= 0 x753) x3947) (= (x3726 (- x1733 x55)) x52)) (not x1900)) (and (=> (and (not x3947) (= (= x5489 0) x5411)) (and (=> x5411 x5839) (=> (and (not x5411) (and (= x548 (x5195 (x4555 x753) (x821 1) 0)) (= x4298 1) (= 32 x1394) (= x5144 (x5195 (x4555 x5489) x548 0)) (= x5319 1))) x1949))) (=> x3947 x5839))) (=> x1900 x5839))) (=> x4731 x5839))))) (=> x1851 x5839))) (=> x2511 x5839))))))))))) (=> (not x338) x5839))) (=> x1291 x5839))) (=> (and (= (= x5489 x1439) x1505) (not x29)) (and (=> (and (not x1505) (= (= x1439 x5556) x6046)) (and (=> (and x6046 (and (= x5995 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x619) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x619)) (< x619 96)))) (= x5589 599290589) (> 1117154408 x5589) (not (= 117300739 x5589)) (not (= x5589 404098525)) (not (= 157198259 x5589)) (not (< x3065 4)) (< 0 x808) (= (x353 (x4555 x5556)) x808) (= x3065 100) (= x2064 x1488) (= x619 (x3726 (- x3065 4))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x6039) (= x4619 x1023) (= x728 x5489) (= x3065 100))) (and (=> x5995 x3259) (=> (and (not x5995) (and (= (= x5489 x728) x2783) (= x3030 x728))) (and (=> (and (and (= x5056 (x4950 1461501637330902918203684832716283019655932542975 x4619)) (= x1023 x5524) (= x1176 (= x4619 x5056))) x2783) (and (=> (not x1176) x3259) (=> (and (and (= (= x2771 0) x2618) (= x1488 x1653) (= x2771 (x4950 1461501637330902918203684832716283019655932542975 x1023))) x1176) (and (=> (and (and (= x3917 (x5195 (x4555 x728) (x821 0) 0)) (>= x2879 0) (= (< x2879 x1488) x2677) (= x2879 (x2366 x3917)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2879)) (not x2618)) (and (=> x2677 x3259) (=> (and (not x2677) (= x2013 (< x2879 x1488))) (and (=> (and (and (= x5454 (x4950 1461501637330902918203684832716283019655932542975 x1023)) (<= 0 x6291) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1488)) x6155) (= (x5195 (x4555 x5454) (x821 0) 0) x460) (= x789 (x5195 (x4555 x728) (x821 0) 0)) (= (x3726 (- x2879 x1488)) x578) (= (< x6155 x6291) x4548) (= x6291 (x2855 x460)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6291)) (not x2013)) (and (=> (and (not x4548) (and (= (x3844 (+ x1488 x6291)) x1499) (= x2526 (> x6291 x1499)))) (and (=> (and (and (<= x6404 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3131 (> x1488 x6404)) (= x5336 (x5195 (x4555 x5489) x4813 0)) (= x4813 (x5195 (x4555 x728) (x821 1) 0)) (= (x5195 (x4555 x1144) (x821 0) 0) x5002) (= (x4950 1461501637330902918203684832716283019655932542975 x1023) x1144) (= x6404 (x3799 x5336)) (>= x6404 0)) (not x2526)) (and (=> x3131 x3259) (=> (and (= (> x1488 x6404) x4626) (not x3131)) (and (=> x4626 x3259) (=> (and (not x4626) (and (= x3974 (x3726 (- x6404 x1488))) (= (= x5489 0) x659))) (and (=> x659 x3259) (=> (and (not x659) (= (= x728 0) x3667)) (and (=> x3667 x3259) (=> (and (not x3667) (and (= x5564 1) (= (x1381 128) x426) (= x4117 1) (= 32 x3313) (= x440 (x5195 (x4555 x5489) x2851 0)) (= x2851 (x5195 (x4555 x728) (x821 1) 0)) (= x2657 (x1381 128)))) x618))))))))) (=> x2526 x3259))) (=> x4548 x3259))) (=> x2013 x3259))))) (=> x2618 x3259))))) (=> (not x2783) x3259))))) (=> (and (not x6046) (= x2880 (= x1439 x3135))) (and (=> (and x2880 (and (= x4619 x5731) (not (< x6234 4)) (> x600 0) (= x600 (x353 (x4555 x3135))) (not (= 404098525 x3100)) (= x5489 x1736) (= x6234 100) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1450) (not (= 157198259 x3100)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3253) true) (> 96 x3253)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3253)) x680) (not (= 117300739 x3100)) (= (x3726 (- x6234 4)) x3253) (< x3100 826074471) (= x2064 x1834) (= 100 x6234) (= x3100 599290589))) (and (=> x680 x6341) (=> (and (and (= x2335 x1736) (= (= x1736 x5489) x2193)) (not x680)) (and (=> (and (and (= (= x4619 x1184) x3720) (= x5731 x1414) (= (x4950 1461501637330902918203684832716283019655932542975 x4619) x1184)) x2193) (and (=> (not x3720) x6341) (=> (and x3720 (and (= x1834 x3222) (= x5114 (= x4625 0)) (= (x4950 1461501637330902918203684832716283019655932542975 x5731) x4625))) (and (=> x5114 x6341) (=> (and (and (= x2777 (x1272 x1682)) (= x1682 (x5195 (x4555 x1736) (x821 1) 0)) (<= x2777 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2777) (= (< x2777 x1834) x679)) (not x5114)) (and (=> (and (and (= (x2405 x438) x6387) (= x408 (x5195 (x4555 x1736) (x821 2) 0)) (= x4684 (< x6387 x1834)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6387) (= x438 (x5195 (x4555 x5489) x408 0)) (>= x6387 0)) (not x679)) (and (=> (and (and (= (x5195 (x4555 x1736) (x821 1) 0) x3748) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5323) (<= 0 x5323) (= x6193 (> x1834 x5323)) (= (x1272 x3748) x5323)) (not x4684)) (and (=> (and (not x6193) (and (<= 0 x1868) (= (x5195 (x4555 x1736) (x821 1) 0) x4710) (<= x1868 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x5489) x3292 0) x1066) (= (> x1834 x1868) x4850) (= x4340 (x3726 (- x5323 x1834))) (= (x2405 x1066) x1868) (= (x5195 (x4555 x1736) (x821 2) 0) x3292))) (and (=> (and (and (= (x498 x1841) x5515) (= (x3726 (- x1868 x1834)) x1331) (= x3643 (x4950 1461501637330902918203684832716283019655932542975 x5731)) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1834)) x5628) (= (x5195 (x4555 x5489) x3747 0) x186) (<= x5515 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x1736) (x821 2) 0) x3747) (= (x5195 (x4555 x3643) (x821 1) 0) x1841) (>= x5515 0) (= x2456 (< x5628 x5515))) (not x4850)) (and (=> x2456 x6341) (=> (and (and (= 32 x5075) (= x3478 1) (= x2873 (x3844 (+ x5515 x1834))) (= x5373 (x4191 128)) (= x3915 1) (= (x4191 128) x4438) (= (x4950 1461501637330902918203684832716283019655932542975 x5731) x2437) (= x6116 (x5195 (x4555 x2437) (x821 1) 0))) (not x2456)) x522))) (=> x4850 x6341))) (=> x6193 x6341))) (=> x4684 x6341))) (=> x679 x6341))))))) (=> (not x2193) x6341))))) (=> (and (= x2297 (= x1439 x1262)) (not x2880)) (and (=> (and x2297 (and (= x4721 (x3726 (- x1621 4))) (> x772 0) (= 100 x1621) (not (= x2804 404098525)) (= x772 (x353 (x4555 x1262))) (= x1621 100) (not (= x2804 157198259)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4122) (< x2804 826074471) (not (> 4 x1621)) (= x2064 x1560) (= x2804 599290589) (= x5489 x5584) (= x4619 x5760) (not (= 117300739 x2804)) (= x1846 (or (and (< x4721 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4721) true)) (> x4721 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (and (=> x1846 x4332) (=> (and (and (= x5584 x1740) (= x626 (= x5489 x5584))) (not x1846)) (and (=> (not x626) x4332) (=> (and x626 (and (= x5972 (= x1084 x4619)) (= (x4950 1461501637330902918203684832716283019655932542975 x4619) x1084))) (and (=> (and (and (= (x2538 x2977) x2852) (<= x2852 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x5584) (x821 1) 0) x2977) (<= 0 x2852) (= x4208 x1560) (= (< x2852 x2064) x3287)) x5972) (and (=> (and (= (> x1560 x2852) x2166) (not x3287)) (and (=> x2166 x4332) (=> (and (and (= (x3088 x5143) x2549) (= (x5195 (x4555 x5584) (x821 1) 0) x4491) (= x2869 (x3726 (- x2852 x1560))) (= (x5195 (x4555 x5647) (x821 1) 0) x5143) (= x5647 (x4950 1461501637330902918203684832716283019655932542975 x5760)) (= x1687 (> x2549 x5666)) (>= x2549 0) (= x5666 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1560))) (<= x2549 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x2166)) (and (=> (and (and (= (x3844 (+ x1560 x2549)) x2740) (= x945 (> x2549 x2740))) (not x1687)) (and (=> (and (and (= x427 (> x1560 x2092)) (= (x5195 (x4555 x5489) x5702 0) x3435) (= x2092 (x332 x3435)) (= x1544 (x5195 (x4555 x1258) (x821 1) 0)) (<= 0 x2092) (= x1258 (x4950 1461501637330902918203684832716283019655932542975 x5760)) (= (x5195 (x4555 x5584) (x821 2) 0) x5702) (<= x2092 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x945)) (and (=> (and (= x2486 (> x1560 x2092)) (not x427)) (and (=> x2486 x4332) (=> (and (not x2486) (and (= x4088 32) (= x2944 (x5195 (x4555 x5584) (x821 2) 0)) (= (x5195 (x4555 x5489) x2944 0) x2834) (= (x3726 (- x2092 x1560)) x147) (= 1 x4068))) x5735))) (=> x427 x4332))) (=> x945 x4332))) (=> x1687 x4332))))) (=> x3287 x4332))) (=> (not x5972) x4332))))))) (=> (and (not x2297) (= (= x6182 x1439) x2814)) (and (=> (and (not x2814) (= x5721 (= x1439 x1411))) (and (=> (and (not x5721) (= (= x4027 x1439) x2503)) (and (=> (and (and (= x983 x4619) (= x4738 x2064) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x314) (and (< x314 96) (= true (<= x314 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x3087) (not (= x411 117300739)) (= x314 (x3726 (- x3289 4))) (= 100 x3289) (= x107 (x353 (x4555 x4027))) (= x3289 100) (= 599290589 x411) (= x1317 x5489) (> x107 0) (not (= x411 157198259)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2117) (not (= x411 404098525)) (not (< x3289 4)) (> 826074471 x411)) x2503) (and (=> x3087 x4774) (=> (and (and (= x1088 (= x1317 x5489)) (= x1317 x900)) (not x3087)) (and (=> (not x1088) x4774) (=> (and (and (= x6169 (= x2266 x4619)) (= (x4950 1461501637330902918203684832716283019655932542975 x4619) x2266)) x1088) (and (=> (not x6169) x4774) (=> (and (and (= (> x2064 x4893) x4194) (<= 0 x4893) (= x4738 x598) (= (x5195 (x4555 x1317) (x821 1) 0) x6111) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4893) (= x4893 (x5611 x6111))) x6169) (and (=> x4194 x4774) (=> (and (= (> x4738 x4893) x6160) (not x4194)) (and (=> x6160 x4774) (=> (and (and (= (x5195 (x4555 x5855) (x821 1) 0) x985) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4738)) x3499) (>= x5659 0) (= x825 (x5195 (x4555 x1317) (x821 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5659) (= x1312 (x3726 (- x4893 x4738))) (= (x4950 1461501637330902918203684832716283019655932542975 x983) x5855) (= x5659 (x3573 x985)) (= x2247 (< x3499 x5659))) (not x6160)) (and (=> x2247 x4774) (=> (and (and (= (x3844 (+ x5659 x4738)) x1665) (= x5277 (< x1665 x5659))) (not x2247)) (and (=> x5277 x4774) (=> (and (and (<= 0 x1268) (= x98 (> x4738 x1268)) (= (x5195 (x4555 x5489) x2481 0) x4841) (= x2589 (x4950 1461501637330902918203684832716283019655932542975 x983)) (= x2481 (x5195 (x4555 x1317) (x821 2) 0)) (= (x1471 x4841) x1268) (= (x5195 (x4555 x2589) (x821 1) 0) x3039) (<= x1268 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x5277)) (and (=> x98 x4774) (=> (and (= x5835 (> x4738 x1268)) (not x98)) (and (=> x5835 x4774) (=> (and (and (= 32 x5974) (= x100 (x5195 (x4555 x5489) x1044 0)) (= (x5195 (x4555 x1317) (x821 2) 0) x1044) (= 1 x6082) (= (x3726 (- x1268 x4738)) x5004)) (not x5835)) x1160))))))))))))))))))) (=> (and (not x2503) (and (and (and (= (or (and (= true (<= x1328 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1328 96)) (> x1328 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x237) (= x3262 x5489) (= 599290589 x5752) (= (x353 (x4555 x3993)) x3609) (< 0 x3609) (= (x3726 (- x5704 4)) x1328) (= x5704 100) (= x2064 x233) (not (= x5752 157198259)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x5401) (not (< x5704 4)) (= x5704 100) (not (= x5752 404098525)) (= x4619 x4550)) x927) (= (= x3993 x1439) x927))) (and (=> (and (not x237) (and (= x6075 x3262) (= (= x5489 x3262) x476))) (and (=> (and (and (= (x4950 1461501637330902918203684832716283019655932542975 x4619) x1951) (= (= x1951 x4619) x5983)) x476) (and (=> (not x5983) x2745) (=> (and x5983 (and (>= x6395 0) (= (x5195 (x4555 x5489) x761 0) x2870) (= x6098 (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6395)) (= x761 (x5195 (x4555 x3262) (x821 2) 0)) (<= x6395 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1936 x2870) x6395))) (and (=> (and (and (= (x1936 x3101) x6255) (= x4239 (x5195 (x4555 x3262) (x821 2) 0)) (<= x6255 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x233 x6255) x955) (= (x5195 (x4555 x5489) x4239 0) x3101) (<= 0 x6255)) (not x6098)) (and (=> x955 x2745) (=> (and (= (x3726 (- x6255 x233)) x1213) (not x955)) x4911))) (=> x6098 x4911))))) (=> (not x476) x2745))) (=> x237 x2745))))) (=> (and (and (= x5489 x4215) (= x3394 x4619) (= (x353 (x4555 x1411)) x1595) (= (x3726 (- x267 4)) x733) (not (> 4 x267)) (= x267 100) (> 826074471 x1236) (= x1626 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x733) true) (> 96 x733)) (> x733 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x5858) (not (= 157198259 x1236)) (= 599290589 x1236) (> x1595 0) (= x1532 x2064) (= 100 x267) (not (= 404098525 x1236)) (not (= x1236 117300739))) x5721) (and (=> (and (and (= x5557 x4215) (= x2256 (= x5489 x4215))) (not x5858)) (and (=> (and (and (= x3068 (= x4619 x3334)) (= (x4950 1461501637330902918203684832716283019655932542975 x4619) x3334)) x2256) (and (=> (and (and (= x3657 (< x5423 x2064)) (= x1532 x2116) (>= x5423 0) (= (x1491 x162) x5423) (= (x5195 (x4555 x4215) (x821 1) 0) x162) (<= x5423 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x3068) (and (=> x3657 x5392) (=> (and (not x3657) (= (< x5423 x1532) x3494)) (and (=> x3494 x5392) (=> (and (not x3494) (and (= (x4950 1461501637330902918203684832716283019655932542975 x3394) x157) (= (x5195 (x4555 x4215) (x821 1) 0) x2172) (= x3690 (x5195 (x4555 x157) (x821 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4374) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1532)) x3279) (= (x6196 x3690) x4374) (= (x3726 (- x5423 x1532)) x2344) (= (< x3279 x4374) x3125) (>= x4374 0))) (and (=> x3125 x5392) (=> (and (not x3125) (and (= (x3844 (+ x1532 x4374)) x3567) (= (< x3567 x4374) x6253))) (and (=> (and (not x6253) (and (= x6121 (x5195 (x4555 x4215) (x821 2) 0)) (= (x5195 (x4555 x5489) x6121 0) x3444) (>= x4523 0) (= (x1446 x3444) x4523) (= (x5195 (x4555 x1638) (x821 1) 0) x3725) (= (> x1532 x4523) x4062) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4523) (= x1638 (x4950 1461501637330902918203684832716283019655932542975 x3394)))) (and (=> x4062 x5392) (=> (and (not x4062) (= (< x4523 x1532) x5788)) (and (=> x5788 x5392) (=> (and (and (= x1008 (x5195 (x4555 x5489) x3847 0)) (= x3847 (x5195 (x4555 x4215) (x821 2) 0)) (= (x3726 (- x4523 x1532)) x3466) (= x2178 32) (= x654 1)) (not x5788)) x1984))))) (=> x6253 x5392))))))))) (=> (not x3068) x5392))) (=> (not x2256) x5392))) (=> x5858 x5392))))) (=> (and (and (= x160 (or (and (= true (<= x2676 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x2676)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2676))) (= (x3726 (- x3656 4)) x2676) (= x781 x2064) (= x5063 599290589) (= x4619 x2338) (= x1069 (x353 (x4555 x6182))) (= x3656 100) (= x3732 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= x5063 157198259)) (> x1069 0) (not (= 117300739 x5063)) (= x4973 x5489) (not (> 4 x3656)) (not (= x5063 404098525)) (> 826074471 x5063) (= 100 x3656)) x2814) (and (=> x160 x3563) (=> (and (not x160) (and (= x3737 x4973) (= (= x4973 x5489) x2401))) (and (=> (not x2401) x3563) (=> (and x2401 (and (= (= x1963 x4619) x5863) (= x1963 (x4950 1461501637330902918203684832716283019655932542975 x4619)))) (and (=> (not x5863) x3563) (=> (and (and (= x6421 (x5195 (x4555 x4973) (x821 1) 0)) (<= x1489 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1489) (= (x4752 x6421) x1489) (= x2801 (< x1489 x2064)) (= x3948 x781)) x5863) (and (=> (and (= (< x1489 x781) x6047) (not x2801)) (and (=> x6047 x3563) (=> (and (not x6047) (and (= (x5195 (x4555 x5549) (x821 1) 0) x304) (= x496 (x2472 x304)) (= (x5195 (x4555 x4973) (x821 1) 0) x1006) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x496) (= x1781 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x781))) (= x5549 (x4950 1461501637330902918203684832716283019655932542975 x2338)) (= x5080 (x3726 (- x1489 x781))) (= (> x496 x1781) x4972) (<= 0 x496))) (and (=> x4972 x3563) (=> (and (not x4972) (and (= x4952 (< x1079 x496)) (= (x3844 (+ x496 x781)) x1079))) (and (=> x4952 x3563) (=> (and (and (= x1301 (x5195 (x4555 x1207) (x821 1) 0)) (= x4443 (> x781 x4984)) (>= x4984 0) (= x1207 (x4950 1461501637330902918203684832716283019655932542975 x2338)) (= (x421 x5315) x4984) (= x5315 (x5195 (x4555 x5489) x2553 0)) (= x2553 (x5195 (x4555 x4973) (x821 2) 0)) (<= x4984 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x4952)) (and (=> x4443 x3563) (=> (and (= x3980 (< x4984 x781)) (not x4443)) (and (=> (and (and (= x1872 (x3726 (- x4984 x781))) (= x3371 32) (= 1 x4637) (= x5054 (x5195 (x4555 x5489) x5730 0)) (= (x5195 (x4555 x4973) (x821 2) 0) x5730)) (not x3980)) x911) (=> x3980 x3563))))))))))) (=> x2801 x3563))))))))))))))))) (=> (and (and (not (< x3829 4)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2210) (= x4619 x9) (= x852 (x353 (x4555 x5489))) (< 0 x852) (= x3829 100) (= x5405 x5489) (< x937 953495055) (< x937 2512374353) (= 100 x3829) (= x4823 x2064) (not (= x937 404098525)) (= x937 599290589) (= (x3726 (- x3829 4)) x4246) (not (= 157198259 x937)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4246) (and (= (<= x4246 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x4246 96))) x2206)) x1505) (and (=> (and (not x2206) (and (= x5405 x4551) (= x6278 (= x5405 x5489)))) (and (=> (and x6278 (and (= x4604 (= x3857 x4619)) (= x3857 (x4950 1461501637330902918203684832716283019655932542975 x4619)))) (and (=> (not x4604) x2333) (=> (and x4604 (and (= x5585 (x5195 (x4555 x5489) x2394 0)) (= x2394 (x5195 (x4555 x5405) (x821 2) 0)) (= x5303 (x288 x5585)) (= x11 (= x5303 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (<= x5303 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x5303))) (and (=> x11 x1683) (=> (and (and (<= x5900 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x288 x1897) x5900) (= (x5195 (x4555 x5489) x5449 0) x1897) (= (< x5900 x4823) x4486) (>= x5900 0) (= (x5195 (x4555 x5405) (x821 2) 0) x5449)) (not x11)) (and (=> x4486 x2333) (=> (and (not x4486) (= (x3726 (- x5900 x4823)) x5606)) x1683))))))) (=> (not x6278) x2333))) (=> x2206 x2333))))))) (=> (and (and (= 100 x3501) (> x4152 0) (not (> 4 x3501)) (= x4152 (x353 (x4555 x3551))) (= x3680 x2064) (= x3501 100) (= x4268 x4619) (= x5489 x2359) (= 599290589 x1896) (not (= x1896 117300739)) (< x1896 903454517) (= x4428 (x3726 (- x3501 4))) (< x1896 716570693) (not (= 445207142 x1896)) (not (= x1896 157198259)) (> 2127478272 x1896) (not (= 404098525 x1896)) (= (or (and (< x4428 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4428) true)) (> x4428 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3959) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4051)) x1940) (and (=> x3959 x2565) (=> (and (and (= (= x2359 x5489) x1457) (= x463 x2359)) (not x3959)) (and (=> (not x1457) x2565) (=> (and x1457 (and (= (= x2898 x4619) x205) (= (x4950 1461501637330902918203684832716283019655932542975 x4619) x2898) (= x4268 x4825))) (and (=> (and x205 (and (<= x5755 255) (<= 0 x5755) (< x5755 256) (= (= 0 x5755) x5403) (= x2096 x3680))) (and (=> (not x5403) x2565) (=> (and x5403 (and (>= 255 x6177) (>= x6177 0) (= x6177 (x1578 x5167)) (> 256 x6177) (= (= 0 x6177) x1493) (= (x5195 (x4555 x5489) (x821 3) 0) x5167))) (and (=> (not x1493) x2565) (=> (and (and (< x6068 256) (= x5402 (= 0 x6068)) (<= 0 x6068) (>= 255 x6068) (= x2598 (x5195 (x4555 x2359) (x821 3) 0)) (= x6068 (x1578 x2598))) x1493) (and (=> (not x5402) x2565) (=> (and x5402 (and (> 256 x2398) (= (x4950 1461501637330902918203684832716283019655932542975 x4268) x2672) (= (x1578 x5338) x2398) (= x2833 (= x2398 0)) (<= x2398 255) (= x5338 (x5195 (x4555 x2672) (x821 3) 0)) (<= 0 x2398))) (and (=> (not x2833) x2565) (=> (and x2833 (and (= x3185 (x5195 (x4555 x5489) x5400 0)) (>= x2721 0) (= x559 (> x3680 x2721)) (= x5400 (x5195 (x4555 x2359) (x821 10) 0)) (= (x2044 x3185) x2721) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2721))) (and (=> x559 x2565) (=> (and (not x559) (= (= x2359 0) x5579)) (and (=> (and (not x5579) (and (= (= 0 x5676) x6187) (= x5676 (x4950 1461501637330902918203684832716283019655932542975 x4268)))) (and (=> (and (and (= x755 (x5195 (x4555 x2359) (x821 9) 0)) (= (x1880 x755) x5715) (<= x5715 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x5715) (= (> x3680 x5715) x5248)) (not x6187)) (and (=> (and (and (<= 0 x6091) (= (x1880 x746) x6091) (= x746 (x5195 (x4555 x2359) (x821 9) 0)) (= (> x3680 x6091) x5678) (<= x6091 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 128 x259)) (not x5248)) (and (=> x5678 x2565) (=> (and (not x5678) (= x2243 (> x3680 x6091))) (and (=> x2243 x2565) (=> (and (not x2243) (and (= (x5195 (x4555 x2359) (x821 9) 0) x64) (= x1969 (x5195 (x4555 x731) (x821 9) 0)) (= (> x7 x4087) x156) (<= x7 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4950 1461501637330902918203684832716283019655932542975 x4268) x731) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3680)) x4087) (>= x7 0) (= (x3726 (- x6091 x3680)) x907) (= (x5334 x1969) x7))) (and (=> (and (and (= x6130 (x3844 (+ x3680 x7))) (= (> x7 x6130) x1887)) (not x156)) (and (=> x1887 x2565) (=> (and (and (>= x2537 0) (= (x4950 1461501637330902918203684832716283019655932542975 x4268) x5930) (= x68 (x5195 (x4555 x5930) (x821 9) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2537) (= (> x3680 x2537) x3958) (= (x2044 x3235) x2537) (= x4462 192) (= (x5195 (x4555 x5489) x3950 0) x3235) (= (x5195 (x4555 x2359) (x821 10) 0) x3950)) (not x1887)) (and (=> (and (= (< x2537 x3680) x1658) (not x3958)) (and (=> (and (and (= 1 x5538) (= (x3726 (- x2537 x3680)) x2747) (= 32 x3683) (= x5866 (x5195 (x4555 x5489) x2363 0)) (= x2363 (x5195 (x4555 x2359) (x821 10) 0))) (not x1658)) x2820) (=> x1658 x2565))) (=> x3958 x2565))))) (=> x156 x2565))))))) (=> x5248 x2565))) (=> x6187 x2565))) (=> x5579 x2565))))))))))))) (=> (not x205) x2565))))))))) (=> (and x1694 (and (= 100 x1688) (not (= x6222 404098525)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1142) (not (= 248222656 x6222)) (= 100 x1688) (< x6222 1889567281) (> 669136355 x6222) (= x6405 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4217)) (> 96 x4217)) (> x4217 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x5489 x69) (= x4619 x4719) (< 0 x119) (= x6222 599290589) (= x119 (x353 (x4555 x474))) (= x4217 (x3726 (- x1688 4))) (not (> 248222656 x6222)) (not (< x1688 4)) (= x2064 x5471))) (and (=> x6405 x499) (=> (and (and (= (= x5489 x69) x1075) (= x2625 x69)) (not x6405)) (and (=> (not x1075) x499) (=> (and (and (= x2018 (x4950 1461501637330902918203684832716283019655932542975 x4619)) (= x5487 x4719) (= (= x2018 x4619) x4131)) x1075) (and (=> (not x4131) x499) (=> (and (and (< x2741 256) (>= x2741 0) (= x1330 (= 0 x2741)) (<= x2741 255) (= x2509 x5471)) x4131) (and (=> (and (and (<= x6020 255) (>= x6020 0) (= x3872 (= 0 x6020)) (= (x5038 x3927) x6020) (> 256 x6020) (= (x5195 (x4555 x69) (x821 6) 0) x3927)) x1330) (and (=> (not x3872) x499) (=> (and (= (< x1688 100) x1130) x3872) (and (=> x1130 x499) (=> (and (not x1130) (and (>= x215 0) (<= x215 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1469 10000) (<= 0 x3876) (= x5121 (x5195 (x4555 x5489) x3236 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3876) (= (= x5471 0) x4195) (= x3236 (x5195 (x4555 x69) (x821 5) 0)) (= (x5921 x5121) x3876))) (and (=> (and (not x4195) (and (= x4797 (ite (> x215 x4968) 1 0)) (= x276 (ite (not x1986) 1 0)) (= (x4941 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5471) x4968) (= (= 0 x2509) x1986) (= x1729 (x4950 x276 x4797)) (= (= 0 x1729) x6295))) (and (=> (not x6295) x499) (=> (and x6295 (and (= x5313 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x6194 x5471 x215))) (= (x3060 (x6194 x5471 x215)) x3497))) (and (=> (and x5313 (= x3497 x3173)) x1615) (=> (not x5313) x499))))) (=> (and x4195 (= x3173 0)) x1615))))))) (=> (not x1330) x499))))))))))) x696))
(assert (x2946 x5647))
(assert (x2946 x422))
(assert (x3160 x3021 (- x215 x1163)))
(assert (= x2781 (and x1467 (not x4284))))
(assert (x2946 x4589))
(assert (= (x4465 (x4555 x3583)) x3583))
(assert (= (or x3097 x4675) x6385))
(assert (x2946 x773))
(assert (x3761 x4215))
(assert (x2946 x4816))
(assert (= (and x1685 x1831) x5488))
(assert (x2946 x2449))
(assert (x2946 x2797))
(assert (= x2032 (and x1961 (not x1361))))
(assert (x2946 x3372))
(assert (= (=> (and (= x5783 x2280) (= x1210 x4220)) x4272) x4517))
(assert (= x5817 (and x3823 (not x4443))))
(assert (= (and (not x6376) x6022) x37))
(assert (x2946 x1375))
(assert (= x2295 (or x2232 x2283)))
(assert (x2946 x3170))
(assert (x4723 x215 x5471 x3021 x215))
(assert (x2946 x4445))
(assert (x3160 x215 (- x5062 x1163)))
(assert (x2946 x5312))
(assert (= x2033 (and x155 x5327)))
(assert (x2946 x2096))
(assert (= x2173 (and x5859 (not x2752))))
(assert (= x3975 (or x3793 x1077)))
(assert (= x5551 (and (not x1728) x4853)))
(assert (x2946 x4503))
(assert (= (x4555 248222656) (x821 248222656)))
(assert (= x3986 (x4465 (x4555 x3986))))
(assert (= (and x179 x5648) x2508))
(assert (x4723 x2533 x215 x3021 x215))
(assert (x2946 x1237))
(assert (= x1593 (x4465 (x4555 x1593))))
(assert (= (and x959 x4086) x3913))
(assert (= x3938 (and (not x2738) x5215)))
(assert (= x3552 (and x2466 x2859)))
(assert (= (and x2752 x5859) x3057))
(assert (= (and (not x559) x3188) x6240))
(assert (x2946 x3971))
(assert (= x2799 (and x5222 x3818)))
(assert (= (=> (and (= x637 x3920) (= x4090 x6078)) x2182) x2984))
(assert (x2946 x3478))
(assert (x2946 x157))
(assert (x2946 x4401))
(assert (= (and x3514 x5863) x3379))
(assert (= x4759 (and x6429 x4192)))
(assert (x2946 x3213))
(assert (= x6236 (and x1322 (not x2346))))
(assert (= (and x3771 x2948) x3012))
(assert (x3160 x215 (- x2533 x5471)))
(assert (x2946 x629))
(assert (= (and x3554 x5131) x4124))
(assert (x2946 x41))
(assert (x2946 x4943))
(assert (x2946 x4462))
(assert (x2946 x1938))
(assert (x2491 x215 x5471 x3021 x215))
(assert (= (x4555 1901074598) (x821 1901074598)))
(assert (x2946 x5071))
(assert (= (or (and x1282 x5188) (and x21 (not x2878))) x1950))
(assert (x2946 x1007))
(assert (x2946 x1862))
(assert (x2491 x215 x5471 x215 x2533))
(assert (= (=> (and (= x1790 x5783) (= x4220 x2065)) x4272) x193))
(assert (x2946 x1297))
(assert (= (and x3574 x5475) x972))
(assert (x2946 x5262))
(assert (x2946 x1720))
(assert (= (=> (and (= x784 x5484) (= x2146 x1372)) x3850) x435))
(assert (x4723 x3021 x215 x1346 x215))
(assert (x2946 x6343))
(assert (= (and x31 (not x4540)) x4096))
(assert (x2946 x4404))
(assert (x3146 (- x215 x5062)))
(assert (= (x4555 3714247998) (x821 3714247998)))
(assert (= x5608 (x4465 (x4555 x5608))))
(assert (x2946 x5657))
(assert (x2946 x5226))
(assert (= (x4465 (x4555 x3615)) x3615))
(assert (= x5427 (and x2298 (not x2530))))
(assert (x2946 x2803))
(assert (= (and x1093 (not x2681)) x5596))
(assert (x2946 x5533))
(assert (x2946 x2669))
(assert (x2946 x4074))
(assert (x3146 (- x215 x3021)))
(assert (= (and x4237 x1228) x2920))
(assert (= (x4465 (x4555 x2760)) x2760))
(assert (and (x2072 x1819 256) (x3935 x1819 256) (=> (> 256 0) (= (+ (* (x4941 x1819 256) 256) (x432 x1819 256)) x1819)) (x4154 x1819 256)))
(assert (x2946 x4583))
(assert (= (and x2315 x963) x5915))
(assert (x3761 x1937))
(assert (x2946 x1882))
(assert (= (or x3357 x116 x5256) x2642))
(assert (x5617 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1346))
(assert (x3146 (- x3021 x215)))
(assert (x4723 x215 x3021 x5471 x215))
(assert (= x4375 (and x1614 x4164)))
(assert (x1752 1461501637330902918203684832716283019655932542975))
(assert (x2946 x1879))
(assert (= (and x1076 (not x3891)) x92))
(assert (x2491 x1163 x3951 x3021 x215))
(assert (=> (<= x5619 10000) (= (x821 x5619) (x4555 x5619))))
(assert (x2491 x1163 x3951 x215 x1346))
(assert (x2946 x1595))
(assert (= (and (not x1754) x4) x1198))
(assert (x2946 x4577))
(assert (x2946 x77))
(assert (= x2262 (and (not x3340) x4890)))
(assert (= x1370 (and (not x3121) x3361)))
(assert (x2946 x6012))
(assert (x2946 x3502))
(assert (= (and x1828 (not x1806)) x2632))
(assert (= x2523 (and x833 (not x4193))))
(assert (= (and x5427 (not x2201)) x2948))
(assert (x4723 x1163 x3951 x5062 x215))
(assert (= x1689 (x4465 (x4555 x1689))))
(assert (x2946 x2340))
(assert (x2946 x589))
(assert (x2946 x1675))
(assert (= x3337 (and x1181 x3364)))
(assert (x2946 x4361))
(assert (x2946 x1430))
(assert (= x5967 (and x1153 (not x3928))))
(assert (= x4846 (and x5472 (not x3089))))
(assert (x2946 x5664))
(assert (x2946 x4470))
(assert (= (and x1359 x5203) x6102))
(assert (= x5311 (and (not x156) x2396)))
(assert (x2946 x5295))
(assert (= x101 (and x1805 x1320)))
(assert (= (or x5158 x3221 x4496 x1998 x5374 x6024 x2743 x5201 x5202) x5571))
(assert (x2946 x2369))
(assert (= x5261 (and x194 x4384)))
(assert (x2946 x6369))
(assert (= (=> (and (= x3107 x2352) (= x4499 x6233)) x5219) x317))
(assert (= (and x1561 x633) x1087))
(assert (x2946 x4019))
(assert (x2946 x4423))
(assert (x2946 x4041))
(assert (x5626 32))
(assert (x2946 x1157))
(assert (x3761 x3551))
(assert (x2946 x698))
(assert (x2946 x880))
(assert (x2946 x4598))
(assert (= x3708 (and x5468 x6093)))
(assert (x3761 x494))
(assert (x2946 x2008))
(assert (x2946 x3522))
(assert (x5626 x3246))
(assert (x2946 x2020))
(assert (= (and (not x5051) x2131) x3835))
(assert (= (and x1604 x3441) x5066))
(assert (x2946 x2176))
(assert (x2946 x5341))
(assert (= (and (not x5266) x2194) x3952))
(assert (= x3739 (and x127 x4548)))
(assert (= (=> (and (= x6348 x2789) (= x3679 x2011)) x696) x1549))
(assert (x1795 x5471))
(assert (x2946 x2479))
(assert (= x2629 (and x6087 (not x6169))))
(assert (x2946 x2576))
(assert (x5626 x5731))
(assert (x2946 x3962))
(assert (= 2757214935 (x4465 (x821 2757214935))))
(assert (= x1793 (x4465 (x4555 x1793))))
(assert (= (and (not x2123) x212) x1033))
(assert (= x1279 (and x3409 x3642)))
(assert (x2946 x2455))
(assert (x2946 x2773))
(assert (x2946 x1439))
(assert (x2946 x532))
(assert (= x2154 (and x3013 x1538)))
(assert (= (=> (and (= x3455 x49) (= 0 x5814)) x3479) x2876))
(assert (x3160 x5062 (- x215 x3021)))
(assert (= (=> (and (= x49 x4713) (= x4700 0)) x2316) x3175))
(assert (x2946 x2978))
(assert (x2946 x3394))
(assert (x3146 (- x1346 x3021)))
(assert (x3761 x2893))
(assert (= (=> (and (= x947 x2178) (= x579 x654)) x5152) x1984))
(assert (x3761 x3754))
(assert (= (and x4172 x531) x1164))
(assert (x2946 x5230))
(assert (= x1533 (and x3245 (not x2971))))
(assert (x2946 x5444))
(assert (x2946 x4561))
(assert (= (and (not x3517) x478) x5475))
(assert (x2946 x2375))
(assert (x2946 x6395))
(assert (= x4646 (=> (and (= x1792 0) (= x2613 x5651)) x2261)))
(assert (x2946 x3897))
(assert (x2946 x5090))
(assert (x2946 x3481))
(assert (= x5479 (and (not x3878) x3436)))
(assert (x2946 x4600))
(assert (= x2226 (and x5093 (not x4194))))
(assert (= (and x4804 (not x6170)) x2240))
(assert (x2946 x1583))
(assert (= x2168 (and x979 x3742)))
(assert (x2946 x5742))
(assert (x2946 x2974))
(assert (x2946 x732))
(assert (= x3843 (and x1037 x992)))
(assert (x2946 x1029))
(assert (= x3312 (and x2942 (not x5902))))
(assert (= x207 (and x1254 x4944)))
(assert (= (or x4962 x3257) x5247))
(assert (= (x4465 (x4555 x1317)) x1317))
(assert (= x6122 (and (not x4877) x2387)))
(assert (x4723 x3021 x215 x5062 x215))
(assert (x2946 x55))
(assert (= x3580 (and x6371 (not x2648))))
(assert (=> (<= x4600 10000) (= (x4555 x4600) (x821 x4600))))
(assert (x2946 x5424))
(assert (x3146 (- x2533 x215)))
(assert (x2946 x1262))
(assert (x2946 x5080))
(assert (= x2378 (and x4780 x1885)))
(assert (x2946 x6368))
(assert (= x5078 (and x1753 x6)))
(assert (= x4981 (and (not x2362) x3892)))
(assert (= (and x4586 (not x6135)) x1479))
(assert (x2946 x4992))
(assert (x2468 x5731))
(assert (x2946 x5494))
(assert (x2946 x1985))
(assert (= x3050 (and x5277 x387)))
(assert (= x5024 (and x3483 x4453)))
(assert (x2946 x4764))
(assert (x2946 x1501))
(assert (= (and (not x4266) x2012) x1037))
(assert (= x5773 (and (not x4434) x683)))
(assert (= (or x3248 x1420) x227))
(assert (= (and x1903 x6289) x3307))
(assert (= (and x2688 x4627) x4142))
(assert (= x97 (=> (and (= x149 x3919) (= x831 x1375)) x3625)))
(assert (= (and x1326 x2951) x2736))
(assert (= (x4465 (x4555 x5753)) x5753))
(assert (= x3884 (and (not x5530) x5791)))
(assert (= (and (not x1711) x6028) x835))
(assert (= (and x388 x5782) x2593))
(assert (x2946 x4099))
(assert (x3761 x4999))
(assert (x5626 x983))
(assert (x2946 x177))
(assert (x2946 x2158))
(assert (x3761 x5647))
(assert (x2946 x4187))
(assert (= (and x4458 x2091) x3250))
(assert (x2946 x4706))
(assert (= x5896 (and x19 (not x2456))))
(assert (=> (>= 10000 x3005) (= (x821 x3005) (x4555 x3005))))
(assert (x2946 x5524))
(assert (x2946 x4230))
(assert (x2946 x5254))
(assert (= x2302 (x4465 (x4555 x2302))))
(assert (x2946 x1485))
(assert (x2946 x6267))
(assert (=> (>= 10000 x1262) (= (x821 x1262) (x4555 x1262))))
(assert (= 3088143374 (x4465 (x821 3088143374))))
(assert (x2946 x2693))
(assert (x2946 x1975))
(assert (x3146 (- x3951 x2533)))
(assert (x2946 x3030))
(assert (x2946 x6297))
(assert (x2946 x2092))
(assert (= (=> (and (= x4874 x5823) (= x6349 x2377)) x503) x1925))
(assert (x2946 x5815))
(assert (= (and x679 x4206) x5374))
(assert (= x1612 (x4465 (x4555 x1612))))
(assert (=> (>= 10000 x6182) (= (x821 x6182) (x4555 x6182))))
(assert (=> (<= x262 10000) (= (x821 x262) (x4555 x262))))
(assert (= x1019 (and (not x3953) x1858)))
(assert (x3817 x4886))
(assert (= x2694 (and x990 x365)))
(assert (= (and (not x5302) x6290) x1607))
(assert (x2946 x5965))
(assert (x3761 x5608))
(assert (= (and (not x5232) x828) x1663))
(assert (= (and x2446 x201) x4918))
(assert (x2946 x54))
(assert (= (=> (and (= x1241 (x5296 x3295)) (= (> x233 x1241) x4527) (>= x1241 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1241) (= (x5195 (x4555 x3262) (x821 1) 0) x3295)) (and (=> x4527 x2745) (=> (and (not x4527) (and (= x1389 (x3726 (- x1241 x233))) (>= x5156 0) (= x152 (x5195 (x4555 x3167) (x821 1) 0)) (= x6369 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x233))) (= (> x5156 x6369) x2005) (= (x4950 1461501637330902918203684832716283019655932542975 x4550) x3167) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5156) (= x5156 (x5759 x152)))) (and (=> (and (and (= 32 x2251) (= x3458 (x3844 (+ x233 x5156))) (= 1 x3735)) (not x2005)) x1275) (=> x2005 x2745))))) x4911))
(assert (= x218 (=> (and (= x6423 (x5195 (x4555 x3869) (x821 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5104) (= x5104 (x2082 x6423)) (<= 0 x5104) (= x5582 (< x5104 x4223))) (and (=> (and (and (= x5512 (< x3670 x4503)) (= x5645 (x3726 (- x5104 x4223))) (= (x5195 (x4555 x5576) (x821 1) 0) x5979) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4223)) x3670) (<= 0 x4503) (= x4503 (x1383 x5979)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4503)) (not x5582)) (and (=> (and (and (= x2047 32) (= x3132 1) (= x648 (x3844 (+ x4503 x4223)))) (not x5512)) x5012) (=> x5512 x2238))) (=> x5582 x2238)))))
(assert (= x4073 (and (not x5313) x3691)))
(assert (x2946 x3388))
(assert (x2946 x2804))
(assert (x2946 x5377))
(assert (x2946 x3821))
(assert (x2946 x1967))
(assert (x2946 x2594))
(assert (= x1153 (and x5960 (not x258))))
(assert (= (and x4387 x2732) x3361))
(assert (= (and x1663 (not x874)) x3564))
(assert (x2946 x2103))
(assert (x2946 x4637))
(assert (= x4638 (=> (and (= (x5195 (x4555 x3869) (x821 1) 0) x1309) (<= 0 x1405) (= x1405 (x5518 x1309)) (= x5623 (< x1405 x5965)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1405)) (and (=> x5623 x6273) (=> (and (and (<= x4343 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1254 (< x4498 x4343)) (<= 0 x4343) (= x4498 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5965))) (= x4343 (x2569 x5709)) (= (x5195 (x4555 x5576) (x821 1) 0) x5709) (= x4833 (x3726 (- x1405 x5965)))) (not x5623)) (and (=> x1254 x6273) (=> (and (not x1254) (and (= 32 x790) (= x5686 1) (= x1960 (x3844 (+ x4343 x5965))))) x506)))))))
(assert (x2946 x354))
(assert (x2946 x337))
(assert (= (and (not x4731) x816) x1229))
(assert (x2946 x1875))
(assert (= x3248 (or x5462 x4671 x5148 x493 x1939 (and x1067 (not x1716)) (and x6398 x6350))))
(assert (= (and x6365 x5683) x2739))
(assert (x3761 x5397))
(assert (x2946 x4984))
(assert (x2946 x2700))
(assert (x2946 x3601))
(assert (x3160 x3951 (- x1163 x5471)))
(assert (= (and x6127 (not x651)) x3664))
(assert (= (and (not x483) x902) x372))
(assert (x2946 x5876))
(assert (= (or x2755 x4420 x1802 x612 x1390 x4259 x5333 x2542 x4161 x5072 x249) x1701))
(assert (= x5091 (=> (and (= 0 x4767) (= x3443 x5787)) x4028)))
(assert (= (and x5993 (not x3197)) x278))
(assert (x2946 x4886))
(assert (x2946 x1698))
(assert (= (=> (and (= x5884 0) (= 1 x307)) x5514) x1172))
(assert (=> (>= 10000 x2760) (= (x821 x2760) (x4555 x2760))))
(assert (x2946 x4579))
(assert (x2946 x5073))
(assert (x2946 x5847))
(assert (= (and x3647 x4038) x1103))
(assert (x2946 x2911))
(assert (x2946 x1217))
(assert (x2946 x668))
(assert (x2946 x4672))
(assert (= (=> (and (= x2065 0) (= x1790 x3443)) x193) x3916))
(assert (x3761 x2289))
(assert (x2946 x5727))
(assert (= (and x3546 x357) x133))
(assert (x2946 x4654))
(assert (x2946 x5191))
(assert (x2946 x2308))
(assert (= (and x5018 (not x6200)) x641))
(assert (=> (<= x5390 10000) (= (x821 x5390) (x4555 x5390))))
(assert (= (and x4050 x5276) x4560))
(assert (= x127 (and x2389 (not x2013))))
(assert (= x923 (and x1468 x5781)))
(assert (x2946 x203))
(assert (x3146 (- x5062 x3951)))
(assert (= x2861 (=> (= (= x6239 0) x2346) (and (=> (and (= x3883 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1921) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1921)) (> 32 x1921)))) (not x2346)) (and (=> (and (and (= 32 x5651) (= 1 x1792)) (not x3883)) x2261) (=> x3883 x4646))) (=> x2346 x4646)))))
(assert (= (and (not x6331) x5693) x3750))
(assert (= (and x2263 (not x2562)) x1288))
(assert (= x1903 (and (not x1893) x4705)))
(assert (= (or x1324 x3106) x5333))
(assert (x3146 x5062))
(assert (= (and (not x2181) x3610) x4030))
(assert (x2946 x786))
(assert (x2946 x1725))
(assert (= x998 (and x1536 (not x5248))))
(assert (x3160 x215 (- x1346 x3021)))
(assert (x2946 x1325))
(assert (x2946 x1041))
(assert (x2946 x2411))
(assert (x2946 x4373))
(assert (= (x4465 (x4555 x6373)) x6373))
(assert (x2946 x4749))
(assert (x2946 x5337))
(assert (x2946 x494))
(assert (= x390 (or x762 x5529)))
(assert (= (and x1362 x2592) x6227))
(assert (x2946 x398))
(assert (= x80 (and x6108 x878)))
(assert (= (=> (and (= x2711 x3443) (= x4616 0)) x132) x5245))
(assert (x3160 x3021 (- x215 x5471)))
(assert (x2946 x3459))
(assert (= x5705 (and x980 (not x6265))))
(assert (= (x4555 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x821 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x2946 x6291))
(assert (= (and x2511 x3296) x3333))
(assert (= x3475 (and x1181 (not x3364))))
(assert (x2946 x3710))
(assert (x3761 x1411))
(assert (= x5192 (or x18 x4379 x1031)))
(assert (= (and x3860 x1168) x3742))
(assert (x3761 x4381))
(assert (= (and x4565 x3524) x4134))
(assert (x2946 x6082))
(assert (=> (<= x775 10000) (= (x4555 x775) (x821 x775))))
(assert (= x6182 (x4465 (x4555 x6182))))
(assert (= x2111 (and (not x1883) x3716)))
(assert (= x3465 (x4465 (x4555 x3465))))
(assert (= (x4555 599290589) (x821 599290589)))
(assert (= x453 (and x211 x4013)))
(assert (x2946 x5354))
(assert (x3761 x2827))
(assert (= x66 (and x5678 x998)))
(assert (x2946 x837))
(assert (x3160 x5062 x215))
(assert (x2946 x5268))
(assert (x2946 x6068))
(assert (x2946 x5331))
(assert (= (and x1654 x2275) x3335))
(assert (= x111 (x4465 (x4555 x111))))
(assert (x2946 x5900))
(assert (x1752 x3074))
(assert (x2946 x1204))
(assert (= (=> (and (= x5295 0) (= x6115 x4737)) x4727) x5133))
(assert (x2946 x6048))
(assert (x2946 x6117))
(assert (x2946 x5204))
(assert (= (=> (and (= 0 x2673) (= x5795 x6115)) x6123) x2853))
(assert (x2946 x5538))
(assert (x2946 x5353))
(assert (= (and x1148 (not x5476)) x3805))
(assert (x2946 x4114))
(assert (= (x4465 (x4555 x3675)) x3675))
(assert (x2946 x623))
(assert (= (and x889 x6056) x1600))
(assert (= x928 (and (not x959) x4086)))
(assert (x4723 x215 x3021 x2533 x215))
(assert (x3160 x1163 (- x3951 x5062)))
(assert (= (=> (and (= 0 x4726) (= x6258 x3443)) x3548) x3393))
(assert (x2946 x158))
(assert (x2946 x4331))
(assert (= x4766 (and x1024 x154)))
(assert (x2946 x4347))
(assert (= x4310 (and x4516 x3008)))
(assert (= x170 (and x5258 x3437)))
(assert (x2946 x3974))
(assert (x2946 x4298))
(assert (=> (>= 10000 x2259) (= (x821 x2259) (x4555 x2259))))
(assert (x2946 x6035))
(assert (x2946 x4797))
(assert (x2946 x2980))
(assert (= (and x3898 x5339) x4091))
(assert (x2946 x4607))
(assert (x2946 x5823))
(assert (x2946 x5661))
(assert (x2946 x5343))
(assert (x2946 x5059))
(assert (x2946 x6178))
(assert (x4723 x215 x2533 x5471 x215))
(assert (x3761 x5618))
(assert (x2946 x4861))
(assert (x5626 x103))
(assert (= (or x2321 x3995) x4183))
(assert (x3146 (- x215 x1346)))
(assert (= x5531 (and x5911 x2656)))
(assert (x2946 x4287))
(assert (= x3412 (=> (and (= x4220 x4799) (= x5783 x722)) x4272)))
(assert (x2946 x3795))
(assert (= (=> (and (= x3577 x6159) (= 0 x5178)) x3807) x1611))
(assert (x2946 x1612))
(assert (= (and x4047 x4597) x5422))
(assert (= x5184 (and x4609 x1252)))
(assert (x3761 x3830))
(assert (x2468 x5204))
(assert (= x1758 (x4465 (x4555 x1758))))
(assert (x4723 x215 x5471 x3951 x1163))
(assert (x4723 x5471 x215 x2533 x215))
(assert (= (and (not x882) x6283) x3553))
(assert (= (or x2100 x1987) x2755))
(assert (x4723 x215 x1346 x5471 x215))
(assert (= (or x1979 x2484) x4650))
(assert (= (=> (and (= x6233 x6323) (= x2352 x3243)) x5219) x3147))
(assert (= (and x1013 x360) x2467))
(assert (= x6364 (and x1155 x4981)))
(assert (= (or x4711 x4688) x1238))
(assert (= (and (not x209) x439) x139))
(assert (= (x4465 (x4555 x3122)) x3122))
(assert (x2946 x1152))
(assert (x2946 x5309))
(assert (x2946 x6146))
(assert (= (and (not x6308) x4832) x4453))
(assert (= (and x922 x4478) x832))
(assert (= x271 (or x5434 x5673 (and (not x2652) x4603) x6318 (and x6125 x5495) (and x5981 x830) (and (not x6051) x4474) (and x984 x5378) (and x5014 x3233))))
(assert (and (x2072 x3074 1461501637330902918203684832716283019655932542976) (x3935 x3074 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x3074 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x3074 1461501637330902918203684832716283019655932542976)) x3074)) (x4154 x3074 1461501637330902918203684832716283019655932542976)))
(assert (x2946 x3181))
(assert (x2946 x5731))
(assert (x2946 x4840))
(assert (x3146 x3951))
(assert (x2946 x4299))
(assert (= (and x1467 x4284) x4834))
(assert (= x1683 (=> (and (= x5300 (x5627 x962)) (= (> x4823 x5300) x3546) (= (x5195 (x4555 x5405) (x821 1) 0) x962) (>= x5300 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5300)) (and (=> x3546 x2333) (=> (and (and (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4823)) x1771) (= x148 (x3726 (- x5300 x4823))) (= (x4950 1461501637330902918203684832716283019655932542975 x9) x775) (>= x3311 0) (= (x5195 (x4555 x775) (x821 1) 0) x4648) (= (> x3311 x1771) x2208) (= x3311 (x5620 x4648)) (<= x3311 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x3546)) (and (=> (and (and (= x1965 1) (= (x3844 (+ x3311 x4823)) x2147) (= x870 32)) (not x2208)) x1622) (=> x2208 x2333)))))))
(assert (x2946 x4881))
(assert (= x3491 (or (and x2301 x5771) (and x739 x1014) (and x2515 x2627) x1170 (and (not x4680) x3560) x5024 (and x1669 x4784) (and x6052 x4887) (and (not x5036) x4000) (and x3028 x4739) (and x2209 x4158) x3223)))
(assert (= (and x5947 x4527) x3528))
(assert (x2946 x2147))
(assert (= x3676 (and x5266 x2194)))
(assert (= x1420 (and x5126 (not x1082))))
(assert (x2946 x4531))
(assert (x3761 x1296))
(assert (= (and (not x1694) x1908) x1306))
(assert (=> (<= x5405 10000) (= (x4555 x5405) (x821 x5405))))
(assert (= x684 (=> (and (= x374 x5891) (= x1571 0)) x3332)))
(assert (x3761 x1982))
(assert (= (x4465 (x4555 x3802)) x3802))
(assert (x2946 x2060))
(assert (x2946 x6167))
(assert (=> (>= 10000 x3830) (= (x821 x3830) (x4555 x3830))))
(assert (= (and x222 x461) x3095))
(assert (x2946 x6039))
(assert (= (and (not x6065) x4058) x1363))
(assert (x5626 x1819))
(assert (x2946 x6375))
(assert (= x330 (and (not x4050) x5276)))
(assert (x2946 x3194))
(assert (x2946 x3466))
(assert (= (=> (and (= x2848 0) (= x49 x1061)) x2347) x6322))
(assert (=> (<= x4416 10000) (= (x4555 x4416) (x821 x4416))))
(assert (= x5070 (and x5325 (not x5890))))
(assert (x2946 x3532))
(assert (= (and x2962 x4062) x1817))
(assert (x2946 x2913))
(assert (= x3387 (and x359 x3998)))
(assert (= x5735 (=> (and (= x579 x4068) (= x4088 x947)) x5152)))
(assert (x2946 x161))
(assert (= (and (not x3638) x3301) x2547))
(assert (= x866 (and (not x5194) x5263)))
(assert (x2946 x3630))
(assert (= (and (not x2091) x4458) x3037))
(assert (=> (<= x5343 10000) (= (x821 x5343) (x4555 x5343))))
(assert (x2946 x1302))
(assert (x2946 x5129))
(assert (x2946 x2777))
(assert (= (and (not x943) x108) x5992))
(assert (x2468 x5760))
(assert (x2946 x5504))
(assert (x1752 x933))
(assert (= x994 (and (not x2145) x1071)))
(assert (x2946 x4321))
(assert (x2946 x523))
(assert (x2946 x104))
(assert (=> (>= 10000 x4546) (= (x821 x4546) (x4555 x4546))))
(assert (x2946 x2043))
(assert (= (and x1513 x3062) x3118))
(assert (= x4914 (and (not x5119) x3419)))
(assert (= x1662 (and x1701 x1045)))
(assert (x2946 x2048))
(assert (=> (<= x1613 10000) (= (x821 x1613) (x4555 x1613))))
(assert (x2491 x1163 x3951 x2533 x215))
(assert (= (=> (and (= x947 x5884) (= x307 x579)) x5152) x5514))
(assert (x2946 x2050))
(assert (= x1333 (and (not x1853) x3578)))
(assert (x2946 x8))
(assert (x2946 x1365))
(assert (x2946 x3421))
(assert (x3761 x3262))
(assert (x2946 x5706))
(assert (= x99 (or x3902 x4512)))
(assert (x2946 x801))
(assert (x2946 x2061))
(assert (= (=> (and (= x4298 0) (= x880 x1394)) x1949) x5839))
(assert (x2946 x486))
(assert (x2946 x2311))
(assert (= (and x341 x4593) x3543))
(assert (x2946 x4302))
(assert (x2946 x667))
(assert (x2946 x3986))
(assert (= x5618 (x4465 (x4555 x5618))))
(assert (x2946 x5849))
(assert (= x6341 (=> (and (= x3478 0) (= x880 x5075)) x522)))
(assert (x2946 x3408))
(assert (x2946 x6230))
(assert (=> (>= 10000 x2768) (= (x4555 x2768) (x821 x2768))))
(assert (= x2525 (and x1534 (not x1130))))
(assert (x2946 x3314))
(assert (x2946 x4713))
(assert (= x4962 (and x1221 (not x5460))))
(assert (= x1881 (=> (and (= x2661 x2011) (= x3490 x6348)) x696)))
(assert (= 3674237557 (x4465 (x821 3674237557))))
(assert (=> (<= x494 10000) (= (x4555 x494) (x821 x494))))
(assert (= (and (not x568) x4389) x653))
(assert (x2946 x2477))
(assert (= (and x4626 x1421) x4836))
(assert (= x6270 (and (not x3049) x3391)))
(assert (= x531 (and x4760 (not x5603))))
(assert (x2946 x4673))
(assert (x2946 x5941))
(assert (= x3413 (x4465 (x4555 x3413))))
(assert (= x1582 (and x4063 x2243)))
(assert (x2946 x6172))
(assert (= x4115 (and (not x5222) x3818)))
(assert (x2946 x1579))
(assert (= (and (not x1830) x610) x5720))
(assert (= x1640 (and x4467 x945)))
(assert (= (and x2272 x2607) x2283))
(assert (x5626 x4064))
(assert (x4723 x1163 x3951 x5471 x215))
(assert (=> (<= x5454 10000) (= (x821 x5454) (x4555 x5454))))
(assert (x2491 x5471 x215 x215 x5062))
(assert (=> (>= 10000 x35) (= (x4555 x35) (x821 x35))))
(assert (x2946 x5128))
(assert (= (and x3602 (not x3525)) x5929))
(assert (= (and x292 x4173) x3083))
(assert (=> (>= 10000 x6411) (= (x4555 x6411) (x821 x6411))))
(assert (x2946 x2872))
(assert (x2946 x4080))
(assert (= x4820 (and x5820 x1120)))
(assert (= (x4465 (x4555 x6011)) x6011))
(assert (= x2865 (=> (and (= x4080 x6233) (= x1971 x2352)) x5219)))
(assert (x2946 x5310))
(assert (= (and x5426 x1854) x914))
(assert (= x1822 (and (not x599) x330)))
(assert (= (and (not x3977) x2057) x4890))
(assert (= (and x6295 x4211) x3691))
(assert (x2946 x5056))
(assert (= x3646 (and x1878 x5210)))
(assert (x4723 x1163 x3951 x3021 x215))
(assert (= (and x3068 x1726) x1821))
(assert (= x1467 (and (not x5467) x2186)))
(assert (= x1693 (and x1980 x2566)))
(assert (x2946 x3468))
(assert (= 953495055 (x4465 (x821 953495055))))
(assert (x3160 x215 (- x5471 x2533)))
(assert (x2946 x1388))
(assert (x2946 x6304))
(assert (=> (<= x2039 10000) (= (x821 x2039) (x4555 x2039))))
(assert (x2946 x1187))
(assert (x2946 x558))
(assert (= x683 (and x1573 (not x4809))))
(assert (x2946 x1061))
(assert (=> (<= x5533 10000) (= (x821 x5533) (x4555 x5533))))
(assert (x2946 x396))
(assert (= (and x488 x4759) x5960))
(assert (x2946 x3124))
(assert (x2946 x2910))
(assert (x2946 x1793))
(assert (x2946 x1345))
(assert (x3761 x5095))
(assert (x2946 x1159))
(assert (x2946 x6302))
(assert (x2946 x6139))
(assert (x2946 x5083))
(assert (= (and x5435 (not x5007)) x2709))
(assert (x2946 x5845))
(assert (x2468 x2022))
(assert (x2946 x4641))
(assert (= (and (not x1696) x2282) x2109))
(assert (x1752 x464))
(assert (x2946 x5564))
(assert (=> (>= 10000 x753) (= (x4555 x753) (x821 x753))))
(assert (= x5701 (and x3980 x5817)))
(assert (= x3620 (and x1291 x4270)))
(assert (x2946 x5597))
(assert (= x3071 (and x5215 x2738)))
(assert (= x5712 (and x6354 (not x1330))))
(assert (x2946 x3189))
(assert (= (and (not x360) x1013) x666))
(assert (= x763 (x4465 (x4555 x763))))
(assert (x2946 x2811))
(assert (x3146 (- x3021 x2533)))
(assert (= x704 (and x5994 (not x3016))))
(assert (x2946 x5283))
(assert (x2946 x1962))
(assert (= (and x3027 x1075) x5572))
(assert (x1752 x1023))
(assert (= x2622 (=> (= x2955 (> x3914 x5062)) (and (=> x2955 x4132) (=> (and (not x2955) (= x2579 (> x3914 x5062))) (and (=> x2579 x4132) (=> (and (and (= (< x908 x5062) x1775) (= (x3726 (- x5062 x3914)) x2519) (= x908 (x1105 x4055)) (= (x5195 (x4555 x4666) (x821 2) 0) x4055) (>= x908 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x908)) (not x2579)) (and (=> x1775 x4132) (=> (and (not x1775) (= (> x5062 x908) x5825)) (and (=> (and (and (= x2453 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2519))) (= (x3726 (- x908 x5062)) x5845) (<= 0 x5852) (= (x5195 (x4555 x2369) (x821 2) 0) x2916) (= (< x2453 x5852) x3403) (= (x5195 (x4555 x4666) (x821 2) 0) x836) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5852) (= (x2787 x2916) x5852)) (not x5825)) (and (=> (and (and (= (> x5852 x6062) x583) (= x6062 (x3844 (+ x2519 x5852)))) (not x3403)) (and (=> x583 x4132) (=> (and (and (= x341 (> x3914 0)) (= (x5195 (x4555 x2369) (x821 2) 0) x368)) (not x583)) (and (=> (and x341 (and (<= x3005 1461501637330902918203684832716283019655932542975) (>= x3005 0) (< x3005 1461501637330902918203684832716283019655932542976) (>= x6012 0) (= x6012 (x4213 x1627)) (= x5513 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3914))) (= (> x6012 x5513) x1431) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6012) (= (x5195 (x4555 x3005) (x821 2) 0) x1627))) (and (=> (and (not x1431) (and (= x1721 (x3844 (+ x6012 x3914))) (= (> x6012 x1721) x2046))) (and (=> x2046 x4132) (=> (and (and (<= 0 x3005) (> 1461501637330902918203684832716283019655932542976 x3005) (<= x3005 1461501637330902918203684832716283019655932542975) (= x2807 (x5195 (x4555 x3005) (x821 2) 0)) (<= 0 x3005) (< x3005 1461501637330902918203684832716283019655932542976) (<= x3005 1461501637330902918203684832716283019655932542975)) (not x2046)) x3777))) (=> x1431 x4132))) (=> (not x341) x3777))))) (=> x3403 x4132))) (=> x5825 x4132)))))))))))
(assert (= (and x2315 (not x963)) x5784))
(assert (= (and x2109 (not x5284)) x5904))
(assert (= (x4465 (x4555 x2289)) x2289))
(assert (x2946 x982))
(assert (x2946 x5463))
(assert (x2946 x4448))
(assert (x2946 x705))
(assert (= x1024 (and x5238 x2581)))
(assert (x3146 (- x215 x5471)))
(assert (= (and (not x687) x2345) x4908))
(assert (= x3192 (and x2247 x1035)))
(assert (= (and x683 x4434) x1339))
(assert (x2946 x4215))
(assert (= (and x1830 x610) x2888))
(assert (= x5201 (and x19 x2456)))
(assert (x3160 x1346 (- x215 x1163)))
(assert (= (and x4587 x4118) x5886))
(assert (x2946 x1426))
(assert (x2946 x2128))
(assert (= x5095 (x4465 (x4555 x5095))))
(assert (= x1907 (and x6080 x4151)))
(assert (= (and (not x1739) x3685) x4277))
(assert (x3160 x215 (- x3021 x1163)))
(assert (x3761 x5837))
(assert (= (or x3792 x2413 x2058 x5573 x695 x2114) x1979))
(assert (x2946 x6293))
(assert (= (and x1660 x2457) x2997))
(assert (x3761 x1762))
(assert (= (and (not x187) x3109) x3642))
(assert (= (and x3285 x590) x4956))
(assert (= x1234 (and x6099 (not x1016))))
(assert (= x3940 (and (not x1837) x1691)))
(assert (x2491 x1163 x3951 x215 x5062))
(assert (= (and x5580 x3111) x4715))
(assert (x2946 x1171))
(assert (= (and (not x1492) x3250) x5177))
(assert (= (and x392 x5233) x6403))
(assert (x2946 x5322))
(assert (= (and (not x4158) x2209) x4887))
(assert (= (x4465 (x4555 x552)) x552))
(assert (x2946 x4110))
(assert (= (and x4000 x5036) x3560))
(assert (x2946 x2672))
(assert (= x3810 (and x922 (not x4478))))
(assert (x2946 x6156))
(assert (= x495 (or x2164 x5723)))
(assert (=> (>= 10000 x4993) (= (x4555 x4993) (x821 x4993))))
(assert (= (or x2818 x2798 x5023 x1699 x5217 x6271 x2653 x1640 x2495) x2404))
(assert (x2946 x6213))
(assert (= (and x3529 (not x4873)) x1603))
(assert (x2946 x2649))
(assert (= x5542 (x4465 (x4555 x5542))))
(assert (x2946 x43))
(assert (= x35 (x4465 (x4555 x35))))
(assert (x1752 x4268))
(assert (= x1726 (and x6221 x2256)))
(assert (= (and x2698 (not x6360)) x5496))
(assert (= (and x2457 (not x1660)) x2458))
(assert (= x2688 (and x5376 x3154)))
(assert (x2946 x5437))
(assert (x2946 x1470))
(assert (= (=> (and (= (= x579 0) x1045) (or x1045 (not x1045))) x2896) x5152))
(assert (x2946 x2795))
(assert (= (=> (and (and (not (= 0 x2352)) (= x3763 x5190) (not (or (and (< x6233 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6233) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x6233))) (= x5190 (x5885 128))) (and (= x4221 0) (= x3763 x5059) (= x5793 (= 0 x5059)))) x5793) x5219))
(assert (= (and x601 x4903) x2357))
(assert (= (x4465 (x4555 x6411)) x6411))
(assert (x2946 x2556))
(assert (x2946 x2665))
(assert (x2946 x4645))
(assert (x1752 x1651))
(assert (= 826074471 (x4465 (x821 826074471))))
(assert (= x4725 (and (not x2364) x2810)))
(assert (x2946 x3965))
(assert (x2946 x4383))
(assert (= x2239 (and x4691 x5389)))
(assert (= (and (not x4303) x1368) x379))
(assert (= (=> (and (= x5244 x2011) (= x623 x6348)) x696) x4254))
(assert (= x1490 (or (and x3842 (not x5740)) (and x3057 x3105))))
(assert (= (x4465 (x4555 x5584)) x5584))
(assert (= (=> (and (= x579 x1965) (= x947 x870)) x5152) x1622))
(assert (x3761 x1725))
(assert (x5626 x5760))
(assert (x2946 x3001))
(assert (x4723 x5062 x215 x3021 x215))
(assert (= (or (and (not x2930) x6418) x798) x4516))
(assert (x2946 x3415))
(assert (= (x821 117300739) (x4555 117300739)))
(assert (x2946 x1623))
(assert (x2946 x4499))
(assert (x2946 x4410))
(assert (x2946 x5638))
(assert (x2946 x308))
(assert (x2946 x2257))
(assert (x2468 x1004))
(assert (x3160 x215 (- x5062 x5471)))
(assert (= (or x1591 x3266) x2542))
(assert (= (or x2629 x5228 x1700 x3192 x4437 x5041 x988 x3050 x4667) x2221))
(assert (x1752 x4815))
(assert (= x1223 (or x2135 x3536)))
(assert (= (or x5438 x685) x395))
(assert (x2946 x777))
(assert (x2946 x4699))
(assert (x2946 x4874))
(assert (x2946 x4224))
(assert (and (x2072 x655 1461501637330902918203684832716283019655932542976) (x3935 x655 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x655 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x655 1461501637330902918203684832716283019655932542976)) x655)) (x4154 x655 1461501637330902918203684832716283019655932542976)))
(assert (x2946 x1331))
(assert (x2946 x901))
(assert (x2491 x215 x3021 x5062 x215))
(assert (x2946 x5396))
(assert (= x2012 (and x5079 x4511)))
(assert (x2946 x2431))
(assert (x1752 x5731))
(assert (= x5282 (and x889 (not x6056))))
(assert (= x2319 (and x1506 (not x3753))))
(assert (= (and x3163 x6298) x3849))
(assert (x2946 x4717))
(assert (= (or x5096 x2642) x2568))
(assert (x2946 x5063))
(assert (x2468 x466))
(assert (= (or x181 x2161) x719))
(assert (x2946 x634))
(assert (= (=> (and (= x4261 x6115) (= 0 x6158)) x1812) x3360))
(assert (x2946 x1225))
(assert (x4723 x215 x5471 x5062 x215))
(assert (= (and x5807 x3720) x2986))
(assert (= x3154 (and x1067 x1716)))
(assert (= x5086 (and x140 (not x5281))))
(assert (= x6032 (and x2417 x2685)))
(assert (x2946 x5725))
(assert (x2491 x215 x5062 x3951 x1163))
(assert (= (and x1216 (not x6124)) x2718))
(assert (x2946 x131))
(assert (x2946 x35))
(assert (x2946 x1196))
(assert (x2946 x2815))
(assert (x3761 x1041))
(assert (x2946 x3172))
(assert (x3146 (- x5062 x1163)))
(assert (= x1022 (and x4664 x863)))
(assert (x2946 x620))
(assert (x2946 x4980))
(assert (x1752 x1581))
(assert (= x5816 (x4465 (x4555 x5816))))
(assert (= x1114 (=> (and (= x5362 0) (= 1 x6041)) x3395)))
(assert (x2946 x3527))
(assert (x2946 x1963))
(assert (= x4671 (and x4142 (not x4663))))
(assert (= x1398 (or x632 x1664)))
(assert (x2946 x4229))
(assert (x2946 x3174))
(assert (x2946 x2132))
(assert (= (and (not x4972) x172) x2667))
(assert (x2946 x5818))
(assert (= (and x4991 x5991) x1030))
(assert (x2946 x2051))
(assert (= x4611 (and x330 x599)))
(assert (x2946 x1785))
(assert (= (and x5600 (not x1514)) x2198))
(assert (= (and (not x4278) x4720) x2310))
(assert (= (and (not x102) x3978) x3338))
(assert (= (and (not x1614) x4164) x822))
(assert (= x3217 (or x5227 x2250)))
(assert (x2946 x1972))
(assert (= x2313 (=> (and (or (not x4967) x4967) (= (= x6268 0) x4967)) x5830)))
(assert (x2946 x2603))
(assert (x2946 x3924))
(assert (= (x821 3573918927) (x4555 3573918927)))
(assert (= (and x3729 (not x1386)) x2395))
(assert (= (=> (and (= x1091 0) (= x2706 x1579)) x4768) x1456))
(assert (= x5889 (and x1519 x4568)))
(assert (x1752 x2914))
(assert (= x4891 (and x4289 x2781)))
(assert (x2946 x2714))
(assert (x2946 x3066))
(assert (= 3600075382 (x4465 (x821 3600075382))))
(assert (x2946 x5931))
(assert (= (and (not x430) x3809) x869))
(assert (x2946 x1569))
(assert (x2946 x956))
(assert (x2946 x2638))
(assert (= (x4465 (x821 248222656)) 248222656))
(assert (x2946 x3683))
(assert (= x6324 (and (not x2618) x734)))
(assert (= (and x3296 (not x2511)) x4606))
(assert (x2946 x5754))
(assert (= (x4465 (x4555 x6033)) x6033))
(assert (x2946 x2121))
(assert (= x1838 (and x3804 (not x5521))))
(assert (x2946 x4644))
(assert (= x2040 (and x4981 (not x1155))))
(assert (=> (>= 10000 x1207) (= (x821 x1207) (x4555 x1207))))
(assert (x2946 x1079))
(assert (x2468 x4719))
(assert (x2946 x3176))
(assert (x2946 x2789))
(assert (x2946 x1937))
(assert (x3160 x215 (- x3021 x3951)))
(assert (x2946 x4692))
(assert (= (and x5581 x3936) x5098))
(assert (= (or x1382 x6141) x1717))
(assert (= (and x2681 x1093) x1025))
(assert (x3160 x3951 (- x1163 x5062)))
(assert (= (and x4248 x345) x6275))
(assert (= x4912 (or x6026 x5496)))
(assert (= x1050 (and x3730 (not x1507))))
(assert (= (x4465 (x4555 x1736)) x1736))
(assert (x2946 x4897))
(assert (= x2264 (and x1835 (not x5825))))
(assert (= (or x529 x1429) x6226))
(assert (= (and x6324 x2677) x5726))
(assert (= x1995 (and x1107 x3159)))
(assert (x2946 x443))
(assert (= x2300 (and x3208 x4951)))
(assert (and (x2072 x2022 1461501637330902918203684832716283019655932542976) (x3935 x2022 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x2022 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x2022 1461501637330902918203684832716283019655932542976)) x2022)) (x4154 x2022 1461501637330902918203684832716283019655932542976)))
(assert (= x4477 (and x3695 x2751)))
(assert (= x4324 (and x2884 (not x1179))))
(assert (x3761 x1675))
(assert (= x1843 (and x364 x5596)))
(assert (x2946 x2412))
(assert (= (and x79 x1018) x810))
(assert (x2946 x3173))
(assert (x3160 x215 (- x1346 x1163)))
(assert (x2946 x3375))
(assert (x3761 x4782))
(assert (= (and (not x987) x5784) x2989))
(assert (=> (<= x3122 10000) (= (x821 x3122) (x4555 x3122))))
(assert (= x202 (and x1133 x1267)))
(assert (x2946 x1814))
(assert (x2946 x2705))
(assert (= (=> (and (> x5026 0) (not (or (and (< x6377 32) (= (<= x6377 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x6377 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= 0 x5984)) (= x6400 (x353 (x4555 x1439))) (= x5026 (x353 (x4555 x5489))) (<= x1439 1461501637330902918203684832716283019655932542975) (= x1633 128) (= x5619 x5853) (not (= x6400 0)) (<= 0 x1439) (= (= x1439 x474) x3153) (= x4779 2512374353) (not (< x4779 2512374353)) (< x4779 3065339685) (> 1461501637330902918203684832716283019655932542976 x1439) (>= 1461501637330902918203684832716283019655932542975 x5619)) (and (=> (and x3153 (and (not (< x3368 3674237557)) (= (or (and (= true (<= x5725 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x5725 64)) (> x5725 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x418) (= x3754 x5489) (= x5725 (x3726 (- x6149 4))) (not (> 1889567281 x3368)) (= x6172 100135927934651036221761091863598459016256155049858187411712977198722809069568) (= (x353 (x4555 x474)) x2045) (= x3368 3714247998) (not (< x6149 4)) (= x6149 68) (= 68 x6149) (= x5619 x2864) (> x2045 0) (not (= x3368 3674237557)) (> 3835264453 x3368))) (and (=> x418 x4549) (=> (and (and (= (= x5489 x3754) x1942) (= x5305 x3754)) (not x418)) (and (=> (not x1942) x4549) (=> (and x1942 (= x5500 (= x5619 x2864))) (and (=> (and x5500 (and (= 32 x4499) (= (x5195 (x4555 x3754) (x821 5) 0) x497) (<= x4313 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x5619) x497 0) x1580) (= (x4253 x1580) x4313) (= 1 x3107) (>= x4313 0))) x317) (=> (not x5500) x4549))))))) (=> (and (= (= x1439 x3551) x2327) (not x3153)) (and (=> (and x2327 (and (= x2824 68) (not (= x2380 3573918927)) (not (> 2987494029 x2380)) (= x3570 100135927934651036221761091863598459016256155049858187411712977198722809069568) (> 3824031246 x2380) (not (> 2127478272 x2380)) (> x5522 0) (= x6310 (or (> x1748 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1748)) (< x1748 64)))) (not (> 4 x2824)) (not (= x2380 3590908516)) (not (= 3642135687 x2380)) (not (= x2380 3171951664)) (= 68 x2824) (= x5489 x261) (= x2384 x5619) (= x1748 (x3726 (- x2824 4))) (= x2380 3714247998) (not (= x2380 2987494029)) (= x5522 (x353 (x4555 x3551))))) (and (=> (and (and (= x2008 x261) (= (= x261 x5489) x3860)) (not x6310)) (and (=> (not x3860) x3175) (=> (and (= x979 (= x2384 x5619)) x3860) (and (=> (not x979) x3175) (=> (and x979 (and (= (x2348 x3402) x5326) (= x3579 (x5195 (x4555 x261) (x821 10) 0)) (<= x5326 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x5326) (= x4700 1) (= x3402 (x5195 (x4555 x5619) x3579 0)) (= x4713 32))) x2316))))) (=> x6310 x3175))) (=> (and (not x2327) (= (= x2893 x1439) x2091)) (and (=> (and (= (= x1439 x5489) x3581) (not x2091)) (and (=> (and x3581 (and (not (= 3065339685 x6114)) (= x6235 (x3726 (- x1436 4))) (= x1222 x5489) (= (or (and (> 64 x6235) (= true (<= x6235 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x6235 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2871) (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x5597) (not (> 2512374353 x6114)) (= x1436 68) (not (= 3088143374 x6114)) (not (< x1436 4)) (= (x353 (x4555 x5489)) x2651) (= x5619 x2233) (= 68 x1436) (> x2651 0) (= x6114 3714247998) (not (> 3065339685 x6114)) (not (= 3329172565 x6114)))) (and (=> (and (and (= x1222 x6201) (= (= x5489 x1222) x3637)) (not x2871)) (and (=> (and (= (= x5619 x2233) x4463) x3637) (and (=> (and (and (= x2992 32) (= (x5195 (x4555 x5619) x1199 0) x3585) (= (x5195 (x4555 x1222) (x821 2) 0) x1199) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2645) (= x4325 1) (= (x301 x3585) x2645) (<= 0 x2645)) x4463) x5130) (=> (not x4463) x6181))) (=> (not x3637) x6181))) (=> x2871 x6181))) (=> (and (= x2336 (= x5556 x1439)) (not x3581)) (and (=> (and x2336 (and (not (< x2703 4)) (not (> 1117154408 x1012)) (= x5770 (x353 (x4555 x5556))) (= x2703 68) (= x2714 (x3726 (- x2703 4))) (< 0 x5770) (= x507 100135927934651036221761091863598459016256155049858187411712977198722809069568) (not (= x1012 2757214935)) (= x5489 x3615) (= x2703 68) (not (= 2835717307 x1012)) (= x2165 x5619) (= 3714247998 x1012) (= x2284 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2714) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2714)) (< x2714 64)))) (not (= x1012 2514000705)) (not (> 2514000705 x1012)))) (and (=> x2284 x617) (=> (and (and (= (= x3615 x5489) x3255) (= x4497 x3615)) (not x2284)) (and (=> (not x3255) x617) (=> (and (= x4237 (= x2165 x5619)) x3255) (and (=> (not x4237) x617) (=> (and (and (<= 0 x195) (= x3532 1) (= x3196 (x5195 (x4555 x5619) x423 0)) (= 32 x2308) (= (x6045 x3196) x195) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x195) (= x423 (x5195 (x4555 x3615) (x821 1) 0))) x4237) x6142))))))) (=> (and (= (= x3135 x1439) x1359) (not x2336)) (and (=> (and x1359 (and (not (= 826074471 x850)) (= x4882 (x3726 (- x5437 4))) (= x3227 100135927934651036221761091863598459016256155049858187411712977198722809069568) (not (= x850 1889567281)) (= 3714247998 x850) (= x4075 (or (and (= (<= x4882 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x4882 64)) (> x4882 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x5619 x5525) (not (= x850 2835717307)) (= (x353 (x4555 x3135)) x1667) (= x5437 68) (= 68 x5437) (not (< x5437 4)) (not (= 2514000705 x850)) (not (< x850 826074471)) (= x3986 x5489) (> x1667 0))) (and (=> (and (and (= (= x5489 x3986) x1304) (= x3986 x5425)) (not x4075)) (and (=> (not x1304) x6262) (=> (and (= (= x5525 x5619) x3524) x1304) (and (=> (not x3524) x6262) (=> (and (and (= x5159 1) (= x4108 (x1440 x511)) (= (x5195 (x4555 x3986) (x821 2) 0) x4649) (= x6038 32) (>= x4108 0) (= (x5195 (x4555 x5619) x4649 0) x511) (<= x4108 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x3524) x3841))))) (=> x4075 x6262))) (=> (and (not x1359) (= x5025 (= x1262 x1439))) (and (=> (and (= (= x1439 x6182) x2438) (not x5025)) (and (=> (and x2438 (and (not (= 2835717307 x769)) (= x1192 100135927934651036221761091863598459016256155049858187411712977198722809069568) (not (> 826074471 x769)) (= x5619 x3358) (not (= x769 826074471)) (= 68 x2034) (= x4534 (x353 (x4555 x6182))) (= x5476 (or (> x720 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x720) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x720))))) (= x720 (x3726 (- x2034 4))) (= 3714247998 x769) (> x4534 0) (= x5489 x5618) (not (> 4 x2034)) (= 68 x2034) (not (= x769 1889567281)) (not (= 2514000705 x769)))) (and (=> (and (not x5476) (and (= x5892 (= x5489 x5618)) (= x5618 x2742))) (and (=> (not x5892) x2933) (=> (and (= x586 (= x3358 x5619)) x5892) (and (=> (not x586) x2933) (=> (and x586 (and (= x2212 (x5195 (x4555 x5619) x5321 0)) (= (x1412 x2212) x5193) (<= 0 x5193) (= (x5195 (x4555 x5618) (x821 2) 0) x5321) (<= x5193 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x1971) (= x4080 32))) x2865))))) (=> x5476 x2933))) (=> (and (= (= x1411 x1439) x5146) (not x2438)) (and (=> (and x5146 (and (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x5120) (> x5340 0) (not (< x428 826074471)) (not (> 4 x4494)) (= 3714247998 x428) (= x5619 x4099) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x203)) (< x203 64)) (> x203 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x915) (= x4377 x5489) (not (= x428 2835717307)) (not (= x428 2514000705)) (= 68 x4494) (not (= 826074471 x428)) (not (= x428 1889567281)) (= (x353 (x4555 x1411)) x5340) (= x203 (x3726 (- x4494 4))) (= 68 x4494))) (and (=> (and (not x915) (and (= x3330 (= x4377 x5489)) (= x4860 x4377))) (and (=> (and x3330 (= (= x4099 x5619) x3324)) (and (=> (not x3324) x546) (=> (and x3324 (and (= x6323 32) (= x2228 (x5195 (x4555 x4377) (x821 2) 0)) (>= x3388 0) (<= x3388 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x3243) (= (x6103 x5369) x3388) (= x5369 (x5195 (x4555 x5619) x2228 0)))) x3147))) (=> (not x3330) x546))) (=> x915 x546))) (=> (and (not x5146) (= (= x4027 x1439) x4035)) (and (=> (and (and (not (= x4165 826074471)) (< 0 x1569) (= 68 x4740) (not (= 1889567281 x4165)) (not (= x4165 2835717307)) (not (< x4165 826074471)) (= x1689 x5489) (= x26 x5619) (= x5393 100135927934651036221761091863598459016256155049858187411712977198722809069568) (not (= x4165 2514000705)) (= 68 x4740) (= (x3726 (- x4740 4)) x3910) (= 3714247998 x4165) (not (> 4 x4740)) (= (x353 (x4555 x4027)) x1569) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3910) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3910) true) (> 64 x3910))) x452)) x4035) (and (=> x452 x4698) (=> (and (and (= x5238 (= x5489 x1689)) (= x1689 x2544)) (not x452)) (and (=> (not x5238) x4698) (=> (and x5238 (= x154 (= x5619 x26))) (and (=> (and x154 (and (>= x5103 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5103) (= x5103 (x3438 x204)) (= 32 x3630) (= (x5195 (x4555 x5619) x6220 0) x204) (= 1 x1434) (= x6220 (x5195 (x4555 x1689) (x821 2) 0)))) x4202) (=> (not x154) x4698))))))) (=> (and (and (and x4578 (and (= x3302 68) (= x6200 (or (and (= (<= x3921 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x3921)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3921))) (= (x3726 (- x3302 4)) x3921) (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x282) (= x5489 x4971) (= x5619 x5083) (not (= x5736 2835717307)) (= 68 x3302) (not (= 157198259 x5736)) (not (= x5736 599290589)) (> x2454 0) (not (= x5736 1889567281)) (not (< x3302 4)) (= 3714247998 x5736) (not (= x5736 404098525)) (= x2454 (x353 (x4555 x3993))))) (= x4578 (= x3993 x1439))) (not x4035)) (and (=> (and (and (= x4971 x5109) (= (= x5489 x4971) x4113)) (not x6200)) (and (=> (not x4113) x4162) (=> (and x4113 (= x1631 (= x5083 x5619))) (and (=> (and x1631 (and (= 32 x2917) (<= 0 x6274) (<= x6274 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x3956) (= x3162 (x5195 (x4555 x4971) (x821 2) 0)) (= (x3442 x1541) x6274) (= x1541 (x5195 (x4555 x5619) x3162 0)))) x6036) (=> (not x1631) x4162))))) (=> x6200 x4162))))))))) (=> (and (and (not (= 2514000705 x6004)) (> x5073 0) (= x5619 x519) (not (< x6004 826074471)) (not (= 1889567281 x6004)) (not (= 826074471 x6004)) (= x4777 (or (and (> 64 x2400) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2400) true)) (> x2400 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x6004 3714247998) (= x4577 100135927934651036221761091863598459016256155049858187411712977198722809069568) (= (x3726 (- x2050 4)) x2400) (not (> 4 x2050)) (not (= x6004 2835717307)) (= (x353 (x4555 x1262)) x5073) (= x6411 x5489) (= 68 x2050) (not (= 3504541104 x6004)) (= 68 x2050)) x5025) (and (=> x4777 x6322) (=> (and (and (= (= x6411 x5489) x6079) (= x6411 x5309)) (not x4777)) (and (=> (not x6079) x6322) (=> (and x6079 (= (= x5619 x519) x234)) (and (=> (not x234) x6322) (=> (and (and (= (x4044 x2354) x2796) (= 1 x2848) (>= x2796 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2796) (= x708 (x5195 (x4555 x6411) (x821 2) 0)) (= (x5195 (x4555 x5619) x708 0) x2354) (= x1061 32)) x234) x2347))))))))))))))) (=> (and (and (= x926 (x3726 (- x4522 4))) (not (> 2835717307 x2393)) (not (< x4522 4)) (= 68 x4522) (< 0 x1285) (= (or (and (< x926 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x926))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x926)) x1492) (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x5181) (= x6332 x5619) (= x2039 x5489) (= x4522 68) (= x2393 3714247998) (not (> 1901074598 x2393)) (= x1285 (x353 (x4555 x2893))) (not (< x2393 3714247998))) x2091) (and (=> x1492 x2876) (=> (and (and (= x3264 x2039) (= (= x2039 x5489) x5713)) (not x1492)) (and (=> (and (= x3249 (= x5619 x6332)) x5713) (and (=> (and x3249 (and (= 1 x5814) (= x1108 (x5195 (x4555 x5619) x4449 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2375) (= (x6174 x1108) x2375) (= x4449 (x5195 (x4555 x2039) (x821 1) 0)) (= x3455 32) (>= x2375 0))) x3479) (=> (not x3249) x2876))) (=> (not x5713) x2876))))))))))) x4712))
(assert (= x2097 (and x1858 x3953)))
(assert (x2946 x5974))
(assert (= (or x2904 x4242 x2357 x3866 x3487 x1934 x2483 x923 x348 x1022 x5439 x4990) x4643))
(assert (x2946 x1317))
(assert (x2946 x4394))
(assert (= x4557 (x4465 (x4555 x4557))))
(assert (= (and x4890 x3340) x1078))
(assert (= (=> (and (= x1579 x3213) (= 0 x1347)) x1994) x4132))
(assert (x2946 x3227))
(assert (= (and x4168 x190) x4079))
(assert (x3160 x1163 (- x3951 x5471)))
(assert (x2946 x3703))
(assert (x1752 x4719))
(assert (= x5636 (or x5185 x1212)))
(assert (x2946 x4815))
(assert (= x1945 (and x2391 x1505)))
(assert (x2946 x3417))
(assert (= x3600 (or x2582 x1552)))
(assert (= (and x4613 x39) x5996))
(assert (= (and (not x4755) x1964) x2684))
(assert (x2946 x4535))
(assert (= (x4465 (x4555 x676)) x676))
(assert (x3160 x1346 x215))
(assert (= (x4465 (x821 961581905)) 961581905))
(assert (= (and x358 x2067) x3457))
(assert (= (and x2546 x539) x3))
(assert (= x3833 (and x5989 (not x714))))
(assert (x2946 x3822))
(assert (= (and x2529 (not x3179)) x5723))
(assert (x2946 x5297))
(assert (x3761 x1159))
(assert (= (x4465 (x4555 x2589)) x2589))
(assert (= (and (not x3105) x3057) x3842))
(assert (x2946 x2233))
(assert (=> (>= 10000 x1411) (= (x4555 x1411) (x821 x1411))))
(assert (=> (<= x4666 10000) (= (x821 x4666) (x4555 x4666))))
(assert (x2946 x4340))
(assert (x2946 x2852))
(assert (= x1874 (and x5317 x4865)))
(assert (x2946 x6243))
(assert (= x6269 (and (not x6251) x921)))
(assert (x2946 x2244))
(assert (= x1511 (and (not x6206) x5555)))
(assert (x2946 x3649))
(assert (x2946 x616))
(assert (= x1526 (and x3602 x3525)))
(assert (x2491 x5062 x215 x215 x3021))
(assert (= x4652 (and x5284 x2109)))
(assert (= x358 (and x347 (not x247))))
(assert (x2946 x5651))
(assert (= (and x5534 x5623) x1550))
(assert (= x4879 (and x2406 x575)))
(assert (x2946 x3501))
(assert (x2946 x5149))
(assert (= x2238 (=> (and (= 0 x3132) (= x3443 x2047)) x5012)))
(assert (x2946 x796))
(assert (= (x4555 157198259) (x821 157198259)))
(assert (x2946 x411))
(assert (= (and x2025 x4872) x4483))
(assert (= (=> (and (= x947 x3313) (= x579 x4117)) x5152) x618))
(assert (x2946 x2806))
(assert (x2946 x6299))
(assert (x2946 x326))
(assert (= x5728 (or x4838 x6315)))
(assert (= (x821 3642135687) (x4555 3642135687)))
(assert (x3761 x4993))
(assert (x2946 x5698))
(assert (= (and x5252 x791) x5112))
(assert (and (x2072 x1568 1461501637330902918203684832716283019655932542976) (x3935 x1568 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x1568 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x1568 1461501637330902918203684832716283019655932542976)) x1568)) (x4154 x1568 1461501637330902918203684832716283019655932542976)))
(assert (x2491 x215 x5471 x215 x5062))
(assert (x2946 x2039))
(assert (x3761 x903))
(assert (x2946 x1023))
(assert (= (and (not x214) x417) x854))
(assert (x2946 x1249))
(assert (= x296 (and x6429 (not x4192))))
(assert (= (x4465 (x821 543189872)) 543189872))
(assert (x2946 x4165))
(assert (x2946 x676))
(assert (x2946 x4751))
(assert (x2946 x3263))
(assert (=> (<= x2349 10000) (= (x4555 x2349) (x821 x2349))))
(assert (= (and x4853 x1728) x5594))
(assert (= x3712 (and (not x6080) x4151)))
(assert (x2946 x2231))
(assert (x2491 x5062 x215 x3951 x1163))
(assert (=> (>= 10000 x1041) (= (x4555 x1041) (x821 x1041))))
(assert (x2946 x3299))
(assert (x1795 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x2946 x3901))
(assert (=> (<= x3754 10000) (= (x821 x3754) (x4555 x3754))))
(assert (x2946 x4064))
(assert (= x5272 (and x2119 x4734)))
(assert (x2946 x3443))
(assert (= x5591 (and x1887 x5311)))
(assert (= (x4555 669136355) (x821 669136355)))
(assert (x2946 x6112))
(assert (= x6314 (and x3691 x5313)))
(assert (x2946 x1499))
(assert (x2946 x6201))
(assert (= (=> (and (= x1061 x6233) (= x2352 x2848)) x5219) x2347))
(assert (and (x6393 x3795 10000) (x6383 x3795 10000) (=> (and (< 0 10000) (< 0 x3795)) (and (<= (* (x4941 x3795 10000) 10000) x3795) (< (- x3795 10000) (* (x4941 x3795 10000) 10000)))) (x2854 x3795 10000) (x1495 x3795 10000)))
(assert (= x5588 (and x3558 x1924)))
(assert (x2946 x5510))
(assert (x2946 x6228))
(assert (x5617 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2533))
(assert (=> (>= 10000 x3802) (= (x821 x3802) (x4555 x3802))))
(assert (= 1901074598 (x4465 (x821 1901074598))))
(assert (= (=> (and (= x710 x6239) (= x226 x1921)) x2234) x5985))
(assert (= x6089 (and (not x224) x5413)))
(assert (=> (>= 10000 x3727) (= (x821 x3727) (x4555 x3727))))
(assert (= x3681 (or x973 x2552 x920 x5867 x3042 x5153 x2799 x5601 x90)))
(assert (= (and x477 x3872) x1534))
(assert (x2946 x4040))
(assert (= x31 (and x3293 x1124)))
(assert (x2946 x1840))
(assert (= x5684 (=> (and (= x1921 x6328) (= x6239 x5846)) x2234)))
(assert (x2946 x4618))
(assert (x2946 x3728))
(assert (and (x2072 x4422 256) (x3935 x4422 256) (=> (> 256 0) (= (+ (* (x4941 x4422 256) 256) (x432 x4422 256)) x4422)) (x4154 x4422 256)))
(assert (x2946 x3308))
(assert (x2946 x1215))
(assert (= x4496 (and x5877 x680)))
(assert (= (and x6218 x1619) x1961))
(assert (x2946 x2065))
(assert (x2946 x545))
(assert (= (and x4636 x3119) x631))
(assert (x2946 x3311))
(assert (= (=> (and (= x4220 x4726) (= x5783 x6258)) x4272) x3548))
(assert (= x1742 (=> (= x4384 (< x3876 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and x4384 (= x2285 (< x3876 x5471))) (and (=> (and (not x2285) (= x3966 (> x5471 x3876))) (and (=> x3966 x499) (=> (and (and (= (x5195 (x4555 x5489) x6296 0) x4870) (= x6296 (x5195 (x4555 x69) (x821 5) 0)) (= x2292 (x3726 (- x3876 x5471)))) (not x3966)) x1270))) (=> x2285 x499))) (=> (not x4384) x1270)))))
(assert (x2946 x412))
(assert (x5626 x4619))
(assert (= (x4555 122929932) (x821 122929932)))
(assert (= (and x3312 x5497) x1957))
(assert (x2946 x3282))
(assert (= (and x1058 (not x1337)) x6280))
(assert (x2946 x5464))
(assert (x2946 x1222))
(assert (x2946 x4668))
(assert (= x249 (or x3759 x3184)))
(assert (x2946 x3702))
(assert (x2946 x3127))
(assert (x2946 x1626))
(assert (x2946 x2088))
(assert (= true x4326))
(assert (x2946 x1633))
(assert (x2946 x2673))
(assert (x3761 x261))
(assert (= (or x4574 x3171) x961))
(assert (x2946 x1496))
(assert (x2946 x3570))
(assert (= (x4465 (x4555 x2670)) x2670))
(assert (x3761 x5831))
(assert (= (x4465 (x4555 x1675)) x1675))
(assert (x2946 x3079))
(assert (= x1355 (and (not x3581) x3037)))
(assert (x2946 x2641))
(assert (= x3597 (=> (and (= x637 x219) (= x4090 x1574)) x2182)))
(assert (= x5671 (and x3037 x3581)))
(assert (x3146 x215))
(assert (= (and x1018 (not x79)) x3716))
(assert (x2946 x540))
(assert (= (and (not x3561) x328) x197))
(assert (= (and x5403 x3446) x3211))
(assert (x2946 x5037))
(assert (= (and x1520 (not x3966)) x504))
(assert (= (and x3153 x4300) x5251))
(assert (= x4570 (or x125 x1950)))
(assert (= x4970 (or (and x123 x2284) (and (not x3255) x2823) (and (not x4237) x1228))))
(assert (x1752 x4178))
(assert (= (and x3753 x1506) x4687))
(assert (x2946 x4689))
(assert (= x4530 (and x1652 x5141)))
(assert (= x6263 (x4465 (x4555 x6263))))
(assert (= (=> (and (= 0 x3213) (= 1 x1347)) x1994) x3777))
(assert (= x3270 (and (not x785) x4277)))
(assert (= (=> (and (= x5823 x620) (= x6349 x28)) x503) x809))
(assert (= x6061 (and x3740 x6212)))
(assert (= (or x5009 x5229) x4440))
(assert (x3761 x1258))
(assert (= (and x1056 (not x1392)) x1980))
(assert (x2946 x5509))
(assert (x2946 x1284))
(assert (= x4613 (and x3083 x2809)))
(assert (x2946 x4528))
(assert (x2946 x2393))
(assert (= (=> (and (= x5842 x5823) (= x2432 x6349)) x503) x2541))
(assert (x2946 x2657))
(assert (= (x4465 (x4555 x1613)) x1613))
(assert (x2946 x5986))
(assert (x2946 x309))
(assert (= (and x3854 (not x4435)) x1158))
(assert (x3146 (- x2533 x3951)))
(assert (= x6131 (and x209 x439)))
(assert (= (x4465 (x4555 x5619)) x5619))
(assert (= (x4465 (x4555 x3984)) x3984))
(assert (= x3768 (and x4663 x4142)))
(assert (x2946 x3005))
(assert (x2946 x2725))
(assert (x2946 x5166))
(assert (x2946 x4295))
(assert (x2946 x3145))
(assert (= (and (not x4585) x4370) x5352))
(assert (= x5520 (and x5890 x5325)))
(assert (x2946 x3455))
(assert (= (and (not x2526) x4508) x4934))
(assert (x2946 x1371))
(assert (x2946 x405))
(assert (x2946 x909))
(assert (x3761 x991))
(assert (x2946 x5699))
(assert (= (and (not x3125) x3949) x210))
(assert (x2946 x4709))
(assert (= x5607 (or x5182 x5280)))
(assert (x2946 x4566))
(assert (x2946 x1149))
(assert (= x1576 (or (and x4565 (not x3524)) (and x1644 (not x1304)) (and x4075 x6102))))
(assert (x2946 x3272))
(assert (x2946 x949))
(assert (x2946 x745))
(assert (x2946 x259))
(assert (x2946 x6054))
(assert (= x316 (and x1836 x2444)))
(assert (= (and x2166 x1788) x2653))
(assert (x2946 x1004))
(assert (= (=> (and (= x1888 x831) (= x149 x560)) x3625) x3930))
(assert (x2946 x2533))
(assert (x2946 x3506))
(assert (= x5131 (or (and x2322 x3345) x2897)))
(assert (= (=> (and (= x831 x1100) (= x6381 x149)) x3625) x824))
(assert (=> (>= 10000 x5618) (= (x821 x5618) (x4555 x5618))))
(assert (= (x4465 (x821 16156842317565293874272834530371880720966471053262404558597773956279093428224)) 16156842317565293874272834530371880720966471053262404558597773956279093428224))
(assert (=> (>= 10000 x3615) (= (x821 x3615) (x4555 x3615))))
(assert (x2946 x2856))
(assert (and (x2072 x1265 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3935 x1265 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x4941 x1265 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x432 x1265 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1265)) (x4154 x1265 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x3225 (and x6240 (not x5579))))
(assert (= (or x1059 x6074) x2919))
(assert (x1752 x4797))
(assert (= x2360 (and x3307 x2600)))
(assert (= (or x2168 x5116) x1786))
(assert (= (and x699 (not x5733)) x5574))
(assert (=> (<= x903 10000) (= (x4555 x903) (x821 x903))))
(assert (x3146 (- x5062 x215)))
(assert (= (or x5168 x631 x2075 x1000 x5085 x5078 x2635 x293 x3337) x528))
(assert (= x6050 (and x3983 (not x3091))))
(assert (= x1756 (and x4033 (not x3787))))
(assert (= x2194 (and x6219 (not x5871))))
(assert (= (x821 445207142) (x4555 445207142)))
(assert (x2946 x4414))
(assert (x2946 x1332))
(assert (= x4999 (x4465 (x4555 x4999))))
(assert (x2946 x3134))
(assert (x2946 x3632))
(assert (= x6287 (and x2941 x4571)))
(assert (x2491 x215 x5062 x215 x3021))
(assert (x2946 x827))
(assert (= (=> (and (= 0 x4009) (= x5891 x6232)) x4106) x5939))
(assert (x2946 x2729))
(assert (= (x4465 (x4555 x4771)) x4771))
(assert (= x6311 (and x1362 (not x2592))))
(assert (= x4161 (or x5571 x5896)))
(assert (x2946 x5123))
(assert (x2946 x904))
(assert (x3761 x1225))
(assert (x2946 x1860))
(assert (= x459 (and x2611 x289)))
(assert (= (and (not x4075) x6102) x1644))
(assert (x3146 (- x3021 x5471)))
(assert (x2946 x2782))
(assert (= (and x5114 x2986) x3221))
(assert (x2946 x4895))
(assert (= (and (not x5863) x3514) x3840))
(assert (= x5096 (and (not x6386) x3712)))
(assert (x3761 x2670))
(assert (= (and x3729 x1386) x3015))
(assert (x2491 x215 x3021 x215 x5062))
(assert (x2946 x3576))
(assert (= (=> (= (< x3672 115792089237316195423570985008687907853269984665640564039457584007913129639935) x862) (and (=> (and x862 (= (< x3672 x1346) x3089)) (and (=> (and (not x3089) (= (< x3672 x1346) x166)) (and (=> (and (and (= x5345 (x3726 (- x3672 x1346))) (= (x5195 (x4555 x5753) x2241 0) x2277) (= x2241 (x5195 (x4555 x763) (x821 5) 0))) (not x166)) x2392) (=> x166 x2713))) (=> x3089 x2713))) (=> (not x862) x2392))) x2539))
(assert (x2946 x3593))
(assert (x2946 x467))
(assert (=> (>= 10000 x1982) (= (x4555 x1982) (x821 x1982))))
(assert (x2946 x3981))
(assert (x3761 x35))
(assert (x2946 x4249))
(assert (= (and x1931 x5136) x1506))
(assert (x3160 x215 (- x3021 x2533)))
(assert (= (x4465 (x4555 x4196)) x4196))
(assert (x3160 x215 (- x5471 x1163)))
(assert (= (and x6249 x6113) x3046))
(assert (x2946 x4617))
(assert (= (and x6169 x6087) x5093))
(assert (x2946 x56))
(assert (= x3032 (and (not x2166) x1788)))
(assert (= x4010 (and (not x5320) x2836)))
(assert (x3160 x215 (- x5471 x1346)))
(assert (= (and x3320 (not x1266)) x1433))
(assert (x2946 x4356))
(assert (= (=> (and (= x6348 x6378) (= x2011 x6422)) x696) x1040))
(assert (x2946 x4223))
(assert (= (and x583 x281) x1902))
(assert (x2946 x1653))
(assert (= x4093 (=> (= x5042 (< x3021 x63)) (and (=> (and (not x5042) (= (> x63 x3021) x5581)) (and (=> x5581 x2220) (=> (and (not x5581) (and (<= 0 x4057) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4057) (= (x5195 (x4555 x1481) (x821 2) 0) x1650) (= (x4851 x1650) x4057) (= (x4950 1461501637330902918203684832716283019655932542975 x655) x1481) (= x373 (x3726 (- x3021 x63))) (= (< x4057 x3021) x4050))) (and (=> (and (= (> x3021 x4057) x599) (not x4050)) (and (=> x599 x2220) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4907) (= (x5195 (x4555 x4709) (x821 2) 0) x931) (= x1159 (x4950 1461501637330902918203684832716283019655932542975 x655)) (= (< x2403 x4907) x5357) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x373)) x2403) (= x4885 (x3726 (- x4057 x3021))) (= x4907 (x2309 x931)) (>= x4907 0) (= x1055 (x5195 (x4555 x1159) (x821 2) 0))) (not x599)) (and (=> (and (and (= (< x5794 x4907) x2373) (= x5794 (x3844 (+ x373 x4907)))) (not x5357)) (and (=> x2373 x2220) (=> (and (and (= x3362 (x5195 (x4555 x4709) (x821 2) 0)) (= (> x63 0) x4889)) (not x2373)) (and (=> (not x4889) x1114) (=> (and x4889 (and (= x3181 (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x63))) (= (< x3181 x4699) x2558) (<= x3005 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4699) (= x2134 (x5195 (x4555 x3005) (x821 2) 0)) (<= 0 x3005) (<= 0 x4699) (< x3005 1461501637330902918203684832716283019655932542976) (= (x260 x2134) x4699))) (and (=> (and (and (= (x3844 (+ x4699 x63)) x2633) (= x2169 (> x4699 x2633))) (not x2558)) (and (=> x2169 x2220) (=> (and (and (<= x3005 1461501637330902918203684832716283019655932542975) (<= 0 x3005) (<= 0 x3005) (>= 1461501637330902918203684832716283019655932542975 x3005) (< x3005 1461501637330902918203684832716283019655932542976) (> 1461501637330902918203684832716283019655932542976 x3005)) (not x2169)) x1114))) (=> x2558 x2220))))))) (=> x5357 x2220))))) (=> x4050 x2220))))) (=> x5042 x2220)))))
(assert (x2946 x2289))
(assert (x3761 x6263))
(assert (x2946 x2816))
(assert (= (and x4197 x2327) x5005))
(assert (x3761 x3802))
(assert (x2946 x1192))
(assert (= (and (not x4459) x4375) x1513))
(assert (= (x4555 826074471) (x821 826074471)))
(assert (= (and (not x513) x5769) x5964))
(assert (x2946 x2514))
(assert (= (and x4741 x2062) x5188))
(assert (x2946 x808))
(assert (x2946 x4281))
(assert (x2946 x2772))
(assert (= (=> (and (= x3313 x880) (= 0 x4117)) x618) x3259))
(assert (x3146 x3021))
(assert (x2946 x781))
(assert (= (and x1457 x6413) x4556))
(assert (= x243 (and x3979 (not x2503))))
(assert (x2946 x2260))
(assert (= x1826 (and (not x5357) x1822)))
(assert (= (x4465 (x4555 x728)) x728))
(assert (= x3345 (and x3933 x4828)))
(assert (x2946 x250))
(assert (= x1848 (and x2219 x585)))
(assert (=> (<= x3092 10000) (= (x4555 x3092) (x821 x3092))))
(assert (x1795 x2533))
(assert (x2946 x3727))
(assert (x2946 x6346))
(assert (x2946 x3732))
(assert (x2946 x727))
(assert (= x1598 (and x6028 x1711)))
(assert (x2946 x3498))
(assert (x2946 x4793))
(assert (x2946 x4269))
(assert (= (=> (and (= x1419 x2613) (= x4749 0)) x2350) x191))
(assert (x2946 x1268))
(assert (= (and x3979 x2503) x3273))
(assert (x2946 x5545))
(assert (= (and (not x4184) x3555) x6134))
(assert (= x2722 (and (not x2031) x5728)))
(assert (x1752 x2338))
(assert (= (=> (and (= x1434 0) (= x3630 x49)) x4202) x4698))
(assert (= (and (not x6160) x2226) x1035))
(assert (x2946 x6319))
(assert (=> (<= x1028 10000) (= (x4555 x1028) (x821 x1028))))
(assert (x2946 x5998))
(assert (= x2515 (and x2650 (not x1360))))
(assert (x2946 x270))
(assert (x2946 x5665))
(assert (= (and x539 (not x2546)) x3909))
(assert (x2946 x775))
(assert (x2946 x282))
(assert (= x816 (and (not x6366) x3674)))
(assert (x3160 x215 (- x2533 x215)))
(assert (x2946 x6148))
(assert (x2946 x2358))
(assert (x2946 x3195))
(assert (= (and (not x3028) x4739) x4000))
(assert (x2491 x215 x3021 x1163 x3951))
(assert (x2946 x2875))
(assert (x3761 x753))
(assert (x2946 x230))
(assert (= x2635 (and x4734 (not x2119))))
(assert (x2946 x4721))
(assert (x2946 x3789))
(assert (= x839 (or x779 x3776)))
(assert (= x2626 (and x2301 (not x5771))))
(assert (= x3796 (and (not x4924) x4922)))
(assert (= x4991 (and x5964 x1899)))
(assert (x3761 x2259))
(assert (= (or (and (not x4889) x1787) x757) x762))
(assert (x2946 x4148))
(assert (x2946 x4261))
(assert (= x1512 (and x243 (not x927))))
(assert (x2946 x2374))
(assert (= (and x6125 (not x5495)) x5555))
(assert (x2946 x5288))
(assert (x2946 x2279))
(assert (= (and x665 (not x2297)) x4855))
(assert (x2946 x4051))
(assert (x2946 x2604))
(assert (x2468 x3394))
(assert (= (and x1857 x4914) x5215))
(assert (= x4515 (or x652 x2863)))
(assert (x2946 x335))
(assert (= x4393 (=> (and (= x2488 x1579) (= 0 x3534)) x2223)))
(assert (x2946 x4782))
(assert (x2946 x6158))
(assert (= (or (and (not x445) x851) x5428) x575))
(assert (= x51 (and x221 x2610)))
(assert (and (x2072 x464 1461501637330902918203684832716283019655932542976) (x3935 x464 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x464 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x464 1461501637330902918203684832716283019655932542976)) x464)) (x4154 x464 1461501637330902918203684832716283019655932542976)))
(assert (= (or x4115 x3681) x2399))
(assert (= x5790 (and x1476 x93)))
(assert (x3146 (- x1346 x5471)))
(assert (= x5299 x4605))
(assert (x2946 x3645))
(assert (x2946 x1736))
(assert (x2946 x340))
(assert (=> (>= 10000 x1675) (= (x4555 x1675) (x821 x1675))))
(assert (= x1377 (and x878 (not x6108))))
(assert (x2946 x3567))
(assert (= (and x3159 (not x1107)) x6127))
(assert (x2946 x507))
(assert (= (x821 2512374353) (x4555 2512374353)))
(assert (=> (>= 10000 x4771) (= (x4555 x4771) (x821 x4771))))
(assert (x2946 x4385))
(assert (x2946 x2747))
(assert (= x4600 (x4465 (x4555 x4600))))
(assert (x2946 x5218))
(assert (= (and x1462 x5904) x5927))
(assert (x2946 x2817))
(assert (x2946 x4907))
(assert (=> (<= x3675 10000) (= (x821 x3675) (x4555 x3675))))
(assert (= x920 (and x4697 x1607)))
(assert (x3761 x5533))
(assert (= (and x4271 x2849) x1073))
(assert (=> (<= x5647 10000) (= (x4555 x5647) (x821 x5647))))
(assert (x2946 x6255))
(assert (= (x4465 (x821 2644395612)) 2644395612))
(assert (= (x4465 (x4555 x4514)) x4514))
(assert (x2946 x3680))
(assert (x2946 x6404))
(assert (= (and (not x945) x4467) x794))
(assert (x2946 x1710))
(assert (x3761 x262))
(assert (= x1924 (and (not x3111) x5580)))
(assert (=> (<= x4672 10000) (= (x821 x4672) (x4555 x4672))))
(assert (x3761 x775))
(assert (= (and (not x179) x5648) x439))
(assert (= (and x3238 (not x6225)) x2180))
(assert (x2946 x4222))
(assert (x1752 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (=> (and (= (= 0 x6239) x1287) (or x1287 (not x1287))) x2861) x2234))
(assert (= (and (not x487) x2240) x5503))
(assert (= x5265 (or x778 x4884)))
(assert (x2946 x700))
(assert (= x2068 (and (not x4226) x3810)))
(assert (x3331 x4645 x2734))
(assert (x2946 x1098))
(assert (= (or x636 x740 x1339 x1542 x5938 x1027 x5239 x1279 x4775) x4917))
(assert (= (and x4805 x3118) x1831))
(assert (= (and x1594 (not x5634)) x328))
(assert (= x4466 (=> (and (= 0 x6422) (= x6159 x6378)) x1040)))
(assert (= (and x4077 (not x2083)) x1871))
(assert (x2946 x6166))
(assert (x3761 x5619))
(assert (= x365 (and x1533 (not x3410))))
(assert (x3761 x3005))
(assert (x2946 x850))
(assert (x2946 x6415))
(assert (x2946 x913))
(assert (x2946 x2899))
(assert (x1752 x1004))
(assert (= x3989 (or x372 x2459)))
(assert (= x145 (and x4096 x5738)))
(assert (= (x4465 (x821 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x3761 x157))
(assert (x3160 x3951 (- x1163 x1346)))
(assert (= x5644 (and x3139 x2055)))
(assert (= x3774 (and x2202 x854)))
(assert (x2946 x1560))
(assert (x2946 x6038))
(assert (x2946 x5010))
(assert (= (x821 2514000705) (x4555 2514000705)))
(assert (= x4389 (and x6135 x4586)))
(assert (= (or x4766 x3782) x3268))
(assert (x2946 x2537))
(assert (= (and x5492 x2831) x5301))
(assert (= x4608 (and x6221 (not x2256))))
(assert (x2946 x373))
(assert (and (x2072 x9 1461501637330902918203684832716283019655932542976) (x3935 x9 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x9 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x9 1461501637330902918203684832716283019655932542976)) x9)) (x4154 x9 1461501637330902918203684832716283019655932542976)))
(assert (= x4774 (=> (and (= x5974 x880) (= 0 x6082)) x1160)))
(assert (= x5418 (or x805 x3987 x2199 x4405 x1886 x5724 x5508 x5594 x690)))
(assert (= x281 (and (not x3403) x2264)))
(assert (= x4675 (and x2697 (not x1448))))
(assert (x3761 x4287))
(assert (= (and (not x5459) x2480) x57))
(assert (x2946 x1112))
(assert (= (and x1592 x6344) x4077))
(assert (x2946 x2307))
(assert (=> (>= 10000 x5753) (= (x821 x5753) (x4555 x5753))))
(assert (= x1538 (and (not x4682) x1158)))
(assert (x2946 x4763))
(assert (= x1542 (and x1573 x4809)))
(assert (x2946 x3363))
(assert (x1752 x2909))
(assert (= x6397 (and x3660 x1224)))
(assert (= x3355 (and x6153 (not x3584))))
(assert (x2946 x1758))
(assert (= (or x4643 x4725) x3476))
(assert (x3160 x215 (- x1346 x3951)))
(assert (x2946 x905))
(assert (= (and x1056 x1392) x4013))
(assert (x3761 x3675))
(assert (= (and x1572 (not x1227)) x3571))
(assert (x2946 x4309))
(assert (x2946 x2437))
(assert (= x293 (and x5272 x1782)))
(assert (x2946 x2826))
(assert (= (or x6357 x1083) x2831))
(assert (= x4938 (x4465 (x4555 x4938))))
(assert (x2946 x5837))
(assert (x2946 x5577))
(assert (= (and x4786 (not x491)) x1452))
(assert (= (x821 3504541104) (x4555 3504541104)))
(assert (= x3260 (and x2678 x6374)))
(assert (=> (<= x1144 10000) (= (x821 x1144) (x4555 x1144))))
(assert (= x5316 (=> (and (= x1596 x5823) (= x5429 x6349)) x503)))
(assert (= x5255 (and x4855 (not x2814))))
(assert (x2946 x2265))
(assert (= x2961 (and x1590 x1891)))
(assert (= x3983 (and x3016 x5994)))
(assert (x2946 x5358))
(assert (x2946 x1422))
(assert (= (or (and x4599 (not x76)) (and (not x3306) x5379) (and x520 x5055)) x3536))
(assert (x2946 x6003))
(assert (x2946 x1889))
(assert (x4723 x3951 x1163 x1346 x215))
(assert (x2946 x646))
(assert (= (x4465 (x4555 x2827)) x2827))
(assert (= (=> (and (= x43 x6239) (= x5841 x1921)) x2234) x5196))
(assert (x2946 x1820))
(assert (= x275 (and (not x5025) x3461)))
(assert (x2468 x983))
(assert (x2946 x3072))
(assert (= (and x4389 x568) x5110))
(assert (=> (>= 10000 x5855) (= (x4555 x5855) (x821 x5855))))
(assert (x2946 x3723))
(assert (= x4007 (and x4247 x3496)))
(assert (x2946 x2825))
(assert (x5626 x4815))
(assert (= (and x573 x287) x5663))
(assert (x2946 x1290))
(assert (= (and x4877 x2387) x5546))
(assert (x2946 x512))
(assert (x2946 x1236))
(assert (= x1486 (and x6427 x859)))
(assert (= (x4465 (x4555 x3639)) x3639))
(assert (= (x821 716570693) (x4555 716570693)))
(assert (x2491 x215 x3021 x1346 x215))
(assert (x2946 x1367))
(assert (= x2204 (and x2558 x3205)))
(assert (x4723 x3021 x215 x3951 x1163))
(assert (x3761 x1793))
(assert (and (x2072 x3394 1461501637330902918203684832716283019655932542976) (x3935 x3394 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x3394 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x3394 1461501637330902918203684832716283019655932542976)) x3394)) (x4154 x3394 1461501637330902918203684832716283019655932542976)))
(assert (x3146 (- x5471 x1163)))
(assert (= x1870 (and x4900 x3612)))
(assert (x2946 x4737))
(assert (x2946 x5515))
(assert (x2946 x1220))
(assert (= x5687 (and (not x1537) x3564)))
(assert (x2946 x4852))
(assert (= x4993 (x4465 (x4555 x4993))))
(assert (x2946 x2914))
(assert (x3761 x5584))
(assert (x2946 x5061))
(assert (= x3007 (and (not x4031) x5685)))
(assert (x2491 x1163 x3951 x5471 x215))
(assert (and (x2072 x5879 1461501637330902918203684832716283019655932542976) (x3935 x5879 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x5879 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x5879 1461501637330902918203684832716283019655932542976)) x5879)) (x4154 x5879 1461501637330902918203684832716283019655932542976)))
(assert (= x5160 (and x5603 x4760)))
(assert (= x5828 (and x5035 x605)))
(assert (=> (>= 10000 x5556) (= (x4555 x5556) (x821 x5556))))
(assert (x2946 x5566))
(assert (x4723 x1346 x215 x3951 x1163))
(assert (= (=> (and (= x6159 x4457) (= 0 x4048)) x1659) x1047))
(assert (x2946 x5842))
(assert (= x4593 (and (not x583) x281)))
(assert (x2946 x5084))
(assert (x3761 x5489))
(assert (x3160 x215 (- x3021 x215)))
(assert (= (=> (and (= x3371 x880) (= x4637 0)) x911) x3563))
(assert (x2946 x5984))
(assert (=> (>= 10000 x309) (= (x821 x309) (x4555 x309))))
(assert (x2946 x2356))
(assert (x2946 x5484))
(assert (= x84 (x4465 (x4555 x84))))
(assert (x2946 x1585))
(assert (x2946 x799))
(assert (x2946 x721))
(assert (= (and (not x6212) x3740) x636))
(assert (= x5148 (and (not x4627) x2688)))
(assert (= x1123 (and x3285 (not x590))))
(assert (= x2150 (and x2331 x3800)))
(assert (x2946 x3846))
(assert (x2946 x800))
(assert (x2946 x3137))
(assert (x2946 x15))
(assert (x2946 x1125))
(assert (x2946 x4602))
(assert (= x856 (and x3796 x6250)))
(assert (= (or x729 x5433) x3619))
(assert (x2946 x731))
(assert (= (and x1178 x1855) x5325))
(assert (= (x4555 3590908516) (x821 3590908516)))
(assert (= x3804 (and x980 x6265)))
(assert (= (x4465 (x4555 x1207)) x1207))
(assert (= (or x4532 x95) x4312))
(assert (= (and x4952 x2667) x389))
(assert (= (or x6362 x2619) x6384))
(assert (= (x821 543189872) (x4555 543189872)))
(assert (= (and (not x1161) x514) x1913))
(assert (x2946 x4432))
(assert (x2946 x2471))
(assert (=> (>= 10000 x6033) (= (x821 x6033) (x4555 x6033))))
(assert (= x1983 (or (and x3903 (not x3249)) (and (not x5713) x5177) (and x1492 x3250))))
(assert (= (and x5873 (not x5292)) x3226))
(assert (x2946 x720))
(assert (= (or x322 x1977) x2921))
(assert (= (x4465 (x4555 x2359)) x2359))
(assert (= x5280 (or (and (not x4596) x1475) (and (not x5968) x5099) (and x4572 x858))))
(assert (x2946 x767))
(assert (x2946 x4263))
(assert (= x6123 (=> (and (= x5984 x2673) (= x5795 x6377)) x5477)))
(assert (= (and x1553 (not x5924)) x921))
(assert (x2946 x4325))
(assert (x2946 x3191))
(assert (x2946 x1823))
(assert (= (x4465 (x821 2127478272)) 2127478272))
(assert (x2946 x5319))
(assert (= (and x2707 x3404) x2991))
(assert (x3160 x5471 (- x215 x2533)))
(assert (= (and x1477 x2291) x2388))
(assert (x2946 x3458))
(assert (= x3782 (or (and (not x154) x1024) (and x2902 x452) (and (not x5238) x2581))))
(assert (x2946 x3044))
(assert (= x3004 (or x1019 x5052)))
(assert (x2946 x6171))
(assert (x2491 x3021 x215 x1163 x3951))
(assert (x2946 x1413))
(assert (= (and x3900 x5481) x3216))
(assert (x2946 x2545))
(assert (x2946 x4068))
(assert (x2946 x5704))
(assert (= (and (not x2833) x2963) x3611))
(assert (x2946 x3246))
(assert (=> (>= 10000 x676) (= (x821 x676) (x4555 x676))))
(assert (= (x4465 (x4555 x1439)) x1439))
(assert (x2946 x4233))
(assert (= x1592 (and x4780 (not x1885))))
(assert (x2946 x534))
(assert (= x5379 (and x5055 (not x520))))
(assert (= x322 (and (not x2041) x2111)))
(assert (x2946 x5589))
(assert (x2946 x4212))
(assert (x2946 x233))
(assert (= x4146 (and x2083 x4077)))
(assert (=> (<= x4196 10000) (= (x821 x4196) (x4555 x4196))))
(assert (= x5971 (and (not x3816) x675)))
(assert (= (and x5596 (not x364)) x417))
(assert (x4723 x215 x2533 x3021 x215))
(assert (x2946 x4157))
(assert (x3812 x1819))
(assert (= (x4465 (x821 3714247998)) 3714247998))
(assert (= (or (and (not x5782) x388) (and x574 (not x3117)) (and x4487 x244)) x5370))
(assert (x2946 x5838))
(assert (x3761 x2589))
(assert (x1752 255))
(assert (x2946 x996))
(assert (=> (>= 10000 x5489) (= (x4555 x5489) (x821 x5489))))
(assert (= (and (not x6272) x5560) x3898))
(assert (x2946 x1144))
(assert (x2946 x6063))
(assert (= (and x3233 (not x5014)) x4474))
(assert (= x4078 (or (and x6195 (not x4463)) (and x5671 x2871) (and (not x3637) x60))))
(assert (= x6219 (and x2427 (not x5173))))
(assert (x2946 x215))
(assert (x2946 x5841))
(assert (x2946 x5677))
(assert (= (and x135 x5110) x5957))
(assert (= (=> (= (= x637 0) x3111) (and (=> x3111 x5703) (=> (and (not x3111) (= (or (and (> 32 x4090) (= (<= x4090 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x4090 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3558)) (and (=> x3558 x5703) (=> (not x3558) x4605))))) x6042))
(assert (x2946 x1285))
(assert (x2491 x5471 x215 x215 x3021))
(assert (= (and x38 x3359) x4791))
(assert (x2946 x3955))
(assert (= (=> (and (= x6377 x1674) (= x3120 x5984)) x5477) x4513))
(assert (x2946 x1714))
(assert (x2946 x4196))
(assert (x3761 x3263))
(assert (= x2326 (and x2684 (not x3149))))
(assert (= (and x3339 x1156) x743))
(assert (x2946 x9))
(assert (x2491 x1163 x3951 x215 x2533))
(assert (x2946 x3418))
(assert (= x1329 (and x2046 x1723)))
(assert (= x1095 (or x4283 x3840 x5701 x6095 x4355 x1235 x688 x2066 x389)))
(assert (= 1889567281 (x4465 (x821 1889567281))))
(assert (= (or x5187 x5520) x4808))
(assert (= (and x3452 x6337) x4839))
(assert (x3146 (- x1346 x215)))
(assert (x2946 x2784))
(assert (x2946 x4072))
(assert (x2946 x2768))
(assert (x2946 x5527))
(assert (x5626 x4719))
(assert (= x1892 (and x4632 x1298)))
(assert (= (and x3188 x559) x5430))
(assert (= x5940 (and x347 x247)))
(assert (x2946 x2664))
(assert (= (or x3925 x3855) x4420))
(assert (x3812 x5680))
(assert (= (and x4169 (not x3862)) x2466))
(assert (= (and (not x4257) x3113) x3374))
(assert (= x950 (and x3667 x2597)))
(assert (x2946 x5482))
(assert (x2946 x6234))
(assert (x2946 x20))
(assert (x3761 x4973))
(assert (= x4232 (and x3566 x4133)))
(assert (x2946 x3129))
(assert (x2946 x783))
(assert (x2946 x1243))
(assert (= x382 (and x4967 x5192)))
(assert (= (and x2443 (not x706)) x6218))
(assert (x2946 x2436))
(assert (= (and x6109 x92) x2002))
(assert (= x157 (x4465 (x4555 x157))))
(assert (= x2943 (and x1240 x1656)))
(assert (= x6410 (and x2618 x734)))
(assert (= x182 (and x3239 x1775)))
(assert (= (=> (and (= x5783 x2776) (= x412 x4220)) x4272) x1864))
(assert (x2946 x70))
(assert (x2946 x6004))
(assert (= x1011 (x4465 (x4555 x1011))))
(assert (x2946 x3985))
(assert (= x4906 (and x3819 x110)))
(assert (x2946 x137))
(assert (= x2897 (and x3345 (not x2322))))
(assert (= (and x2364 x2810) x348))
(assert (= (and (not x5512) x1001) x5714))
(assert (= x4838 (and x3347 x27)))
(assert (x2946 x3138))
(assert (= (and x4255 x5356) x3764))
(assert (= x5363 (and x3338 x2418)))
(assert (x2946 x5853))
(assert (= (and x3886 x2173) x1139))
(assert (x1795 x1346))
(assert (x2946 x6030))
(assert (x2946 x2398))
(assert (x2946 x496))
(assert (x2946 x4765))
(assert (x2946 x6232))
(assert (= x5491 (or x1479 x944 x1724 x4014 x1230 x120 x5889 x6134 x1318 x3598 x5937 x653 x3071 x1948 x4997 x3061 x1526)))
(assert (= (and x1343 x2632) x1295))
(assert (= (and x2769 x5826) x4256))
(assert (x2946 x2104))
(assert (= (and x473 x1256) x221))
(assert (x2946 x3377))
(assert (x2946 x1449))
(assert (x2946 x272))
(assert (= x2902 (and x4035 x1589)))
(assert (= (and (not x2674) x929) x2056))
(assert (x2946 x4416))
(assert (= x5122 (and x5426 (not x1854))))
(assert (= 3824031246 (x4465 (x821 3824031246))))
(assert (= x5655 (and x5174 x2139)))
(assert (x2946 x6349))
(assert (= x1552 (and x2929 (not x164))))
(assert (= (or x3808 x6410 x4836 x265 x5180 x3067 x950 x662 x3739 x2758 x4244 x5726) x1324))
(assert (x2946 x1730))
(assert (= x1465 (and x5066 x2631)))
(assert (x2946 x619))
(assert (x2946 x4812))
(assert (x2946 x2887))
(assert (= (and x2715 x5929) x4014))
(assert (= x1235 (and x3376 x6047)))
(assert (= x3507 (and x2200 (not x11))))
(assert (= (and (not x4172) x531) x1976))
(assert (x3146 (- x2533 x5471)))
(assert (= x5 (and x856 x1219)))
(assert (= (or x1340 x1777) x2110))
(assert (x4723 x215 x5062 x3021 x215))
(assert (x2946 x776))
(assert (x2946 x3790))
(assert (= (=> (and (= x49 x2308) (= 0 x3532)) x6142) x617))
(assert (= (x4555 3171951664) (x821 3171951664)))
(assert (= (and x1017 x1194) x2058))
(assert (= (and x5835 x677) x5228))
(assert (= x3356 (and x6236 (not x3883))))
(assert (x2946 x5246))
(assert (x2946 x3477))
(assert (= x4381 (x4465 (x4555 x4381))))
(assert (= (and x1320 (not x1805)) x4714))
(assert (= x2004 (and (not x4190) x2035)))
(assert (x2946 x1873))
(assert (= x451 (and x4590 x5868)))
(assert (x2946 x4835))
(assert (= x3239 (and (not x2579) x649)))
(assert (x2946 x266))
(assert (= x5859 (and x4741 (not x2062))))
(assert (=> (>= 10000 x3167) (= (x821 x3167) (x4555 x3167))))
(assert (= x2903 (and x6236 x3883)))
(assert (x5626 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x938 (x4465 (x4555 x938))))
(assert (x2946 x1210))
(assert (x2946 x1943))
(assert (x2946 x3677))
(assert (= x6262 (=> (and (= x6038 x49) (= x5159 0)) x3841)))
(assert (= (and x1694 x1908) x5950))
(assert (= (and x5421 x1387) x4301))
(assert (x2468 x4619))
(assert (x2946 x3621))
(assert (x2946 x1996))
(assert (x2946 x1790))
(assert (= (and x5914 x5948) x4288))
(assert (= (x821 3824031246) (x4555 3824031246)))
(assert (x2946 x933))
(assert (x2946 x2371))
(assert (= (x4555 953495055) (x821 953495055)))
(assert (= (=> (and (= 0 x4243) (= x6106 x3897)) x5893) x5161))
(assert (x5626 x1695))
(assert (x2946 x6334))
(assert (x2946 x2380))
(assert (x2946 x3873))
(assert (x2946 x5034))
(assert (and (x2072 x4268 1461501637330902918203684832716283019655932542976) (x3935 x4268 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x4268 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x4268 1461501637330902918203684832716283019655932542976)) x4268)) (x4154 x4268 1461501637330902918203684832716283019655932542976)))
(assert (= (and x242 (not x2660)) x1059))
(assert (= (and x3864 (not x334)) x1318))
(assert (x2946 x1729))
(assert (x2491 x5471 x215 x1163 x3951))
(assert (= (and x768 x5169) x632))
(assert (x2946 x3302))
(assert (= (or x3270 x2819 x2527 x4218 x1437 x1433) x291))
(assert (= (x4465 (x4555 x753)) x753))
(assert (x3160 x1346 (- x215 x3951)))
(assert (x2946 x3098))
(assert (x2946 x3595))
(assert (x2946 x4844))
(assert (= (=> (and (= x149 x5501) (= x134 x831)) x3625) x6327))
(assert (= (or x6307 x6077) x1036))
(assert (= (=> (and (= x6082 x579) (= x5974 x947)) x5152) x1160))
(assert (x2946 x4789))
(assert (x1752 x276))
(assert (x2946 x3289))
(assert (= (or x5160 x2458 x4820 x4079 x5743 x1164 x674 x556 x5546 x1185 x4652 x12 x5927) x3839))
(assert (x2946 x6147))
(assert (x2468 x4268))
(assert (= (and (not x2351) x2341) x1074))
(assert (= (and (not x1776) x5967) x5746))
(assert (= (or x449 x3476 x1238 x6384 x1869 x6385 x839 x3658 x2936 x2921 x2723) x6418))
(assert (= (or x1772 (and (not x46) x1757) (and x2943 x1232) x3736) x1799))
(assert (= x3892 (or x1451 x3059)))
(assert (x2946 x4987))
(assert (= x674 (and x3076 (not x16))))
(assert (= (and x1071 x2145) x2793))
(assert (x2946 x2352))
(assert (x2946 x3210))
(assert (x2946 x6155))
(assert (=> (>= 10000 x6231) (= (x4555 x6231) (x821 x6231))))
(assert (x2946 x4330))
(assert (= (and x5013 x1655) x3343))
(assert (x2946 x726))
(assert (= x265 (and x5995 x2620)))
(assert (x2946 x3824))
(assert (= (x4465 (x821 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x2946 x1480))
(assert (x2946 x4430))
(assert (= x4416 (x4465 (x4555 x4416))))
(assert (= (and x994 (not x6076)) x1362))
(assert (x2946 x6355))
(assert (= x4532 (or (and x5523 (not x586)) (and (not x5892) x3805) (and x5476 x1148))))
(assert (= (and x1266 x3320) x3599))
(assert (= x5987 (and x2561 (not x4578))))
(assert (x3160 x215 (- x5471 x215)))
(assert (= (and x3531 (not x349)) x1519))
(assert (x2946 x1011))
(assert (= (or x5869 x1870) x294))
(assert (x2946 x1409))
(assert (x2946 x4716))
(assert (= (and x1988 x1631) x2863))
(assert (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x4465 (x821 20853193852723734048814770637610870652489083209607696777694672748161462697984))))
(assert (= x23 (and x605 (not x5035))))
(assert (x2946 x873))
(assert (x2491 x3951 x1163 x215 x1346))
(assert (and (x2072 x1004 1461501637330902918203684832716283019655932542976) (x3935 x1004 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x1004 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x1004 1461501637330902918203684832716283019655932542976)) x1004)) (x4154 x1004 1461501637330902918203684832716283019655932542976)))
(assert (x3146 (- x1163 x1346)))
(assert (= x551 x5006))
(assert (= x3093 (and (not x2069) x3457)))
(assert (x2946 x4860))
(assert (= x5832 (and x6170 x4804)))
(assert (x2946 x2864))
(assert (x2946 x261))
(assert (= x6086 (and x3211 (not x1493))))
(assert (x2946 x1248))
(assert (x2946 x4982))
(assert (= (and x3768 (not x1768)) x5126))
(assert (=> (>= 10000 x4514) (= (x4555 x4514) (x821 x4514))))
(assert (x2946 x5955))
(assert (x2946 x630))
(assert (=> (>= 10000 x261) (= (x4555 x261) (x821 x261))))
(assert (x2946 x6268))
(assert (x2946 x4024))
(assert (x2946 x4149))
(assert (=> (>= 10000 x1593) (= (x4555 x1593) (x821 x1593))))
(assert (x2946 x4862))
(assert (= (and x4808 x1352) x1335))
(assert (= x893 (or (and x6331 x5693) (and x5578 (not x3352)) (and (not x3515) x3750))))
(assert (x2946 x6373))
(assert (x2946 x1952))
(assert (x2946 x3784))
(assert (= (and x5289 x4288) x1212))
(assert (= (and x822 (not x737)) x5895))
(assert (x3160 x3021 (- x215 x2533)))
(assert (= (and x1717 x5582) x1437))
(assert (x2946 x1271))
(assert (x2946 x4388))
(assert (=> (<= x2359 10000) (= (x821 x2359) (x4555 x2359))))
(assert (x2946 x5118))
(assert (= x685 (and x5352 (not x3392))))
(assert (x2946 x564))
(assert (= x2494 (and x3510 x5886)))
(assert (x2946 x3291))
(assert (x2946 x5865))
(assert (x2946 x4989))
(assert (x2946 x1516))
(assert (x2946 x284))
(assert (x2946 x2651))
(assert (= x5116 (or (and x6310 x5005) (and (not x979) x3742) (and x1168 (not x3860)))))
(assert (= (and x3287 x2370) x2798))
(assert (x2946 x3253))
(assert (= x1540 (and x1146 x5479)))
(assert (x2946 x3516))
(assert (= (x4465 (x4555 x4412)) x4412))
(assert (x2946 x3508))
(assert (= x4776 (and x36 (not x5420))))
(assert (x2946 x6157))
(assert (= (and x2779 (not x2720)) x151))
(assert (x2946 x5081))
(assert (x2946 x4366))
(assert (x2946 x3643))
(assert (x3761 x534))
(assert (= x855 (and x3027 (not x1075))))
(assert (x2946 x397))
(assert (x3761 x3890))
(assert (x2946 x4399))
(assert (x2946 x2344))
(assert (x2946 x2178))
(assert (= (and x2960 x4567) x2578))
(assert (x2946 x3871))
(assert (x2946 x4343))
(assert (= x570 (x4465 (x4555 x570))))
(assert (= (and x2465 x3343) x778))
(assert (x2946 x2489))
(assert (= x596 (and x2002 x1999)))
(assert (x2946 x1798))
(assert (= x2029 (and x4408 x3212)))
(assert (= (and x5971 (not x2839)) x830))
(assert (x2946 x6266))
(assert (x2946 x6104))
(assert (x2946 x6132))
(assert (=> (>= 10000 x3174) (= (x821 x3174) (x4555 x3174))))
(assert (x3146 (- x1163 x5471)))
(assert (= x4832 (and x4887 (not x6052))))
(assert (x2946 x466))
(assert (= x1170 (and x6308 x4832)))
(assert (x2946 x3956))
(assert (= (x4465 (x4555 x4281)) x4281))
(assert (= (and x5960 x258) x1539))
(assert (x2946 x1028))
(assert (= (and x4007 (not x6312)) x2552))
(assert (= (and x3047 (not x29)) x2391))
(assert (= x4708 (and x2674 x929)))
(assert (= (and x3724 x953) x3238))
(assert (x3812 x4815))
(assert (x2946 x4625))
(assert (x3761 x309))
(assert (x3761 x1824))
(assert (= x3542 (and x5682 x663)))
(assert (x2946 x2324))
(assert (x2946 x4524))
(assert (= (and x4910 (not x3918)) x3578))
(assert (= (and x675 x3816) x5434))
(assert (= (and x5112 (not x229)) x2139))
(assert (= x1083 (and (not x3705) x3450)))
(assert (x2946 x4219))
(assert (x2946 x4563))
(assert (= x797 (and x5079 (not x4511))))
(assert (x1752 x5680))
(assert (= x3685 (and x3017 x3374)))
(assert (x2946 x4087))
(assert (x2946 x3237))
(assert (x2946 x3349))
(assert (= (and x5983 x5176) x1707))
(assert (x2946 x5609))
(assert (= (x4465 (x4555 x775)) x775))
(assert (x2946 x5717))
(assert (= (and (not x6301) x2547) x3995))
(assert (x2946 x831))
(assert (= x5943 (and x2694 (not x2190))))
(assert (x2946 x3946))
(assert (x2946 x2377))
(assert (x2946 x2589))
(assert (x3761 x2437))
(assert (x3761 x3984))
(assert (x2946 x2249))
(assert (= (and x3452 (not x6337)) x5069))
(assert (= (and x2486 x112) x5023))
(assert (x2946 x105))
(assert (x2946 x1978))
(assert (x2946 x3623))
(assert (x2946 x3673))
(assert (= x5372 (and x2500 (not x2036))))
(assert (= x1364 (and x277 (not x5694))))
(assert (= x4733 (and x3238 x6225)))
(assert (= (and (not x4527) x5947) x59))
(assert (= (and x4839 x4174) x457))
(assert (x2946 x5857))
(assert (x3160 x215 (- x5062 x3021)))
(assert (x2946 x6119))
(assert (x1752 x1265))
(assert (x3761 x1689))
(assert (x2946 x5211))
(assert (= (and (not x5683) x6365) x1093))
(assert (x2946 x640))
(assert (x2946 x4996))
(assert (=> (>= 10000 x3583) (= (x4555 x3583) (x821 x3583))))
(assert (x1752 x3394))
(assert (=> (<= x2637 10000) (= (x821 x2637) (x4555 x2637))))
(assert (= x2557 (and (not x4533) x666)))
(assert (= x1520 (and (not x2285) x5261)))
(assert (= x916 (and x4908 x3704)))
(assert (x2946 x887))
(assert (x2946 x4722))
(assert (x2946 x2741))
(assert (x4723 x215 x3021 x1346 x215))
(assert (x3160 x1346 (- x215 x3021)))
(assert (x3146 (- x3951 x1346)))
(assert (x2946 x1703))
(assert (=> (<= x4717 10000) (= (x4555 x4717) (x821 x4717))))
(assert (= (and x5692 x5282) x1704))
(assert (= (x4465 (x4555 x2672)) x2672))
(assert (x3160 x3021 (- x215 x3951)))
(assert (= (x4465 (x821 445207142)) 445207142))
(assert (= (and x5162 x647) x2415))
(assert (= x891 (and x1947 x1616)))
(assert (= x1994 (=> (and (= x3213 x831) (= x149 x1347)) x3625)))
(assert (= (and (not x3923) x2310) x1839))
(assert (=> (<= x2489 10000) (= (x821 x2489) (x4555 x2489))))
(assert (x2946 x3876))
(assert (x2946 x381))
(assert (x2946 x1263))
(assert (x1752 x5879))
(assert (= x6361 (and x3978 x102)))
(assert (= (=> (and (= x880 x5884) (= x307 0)) x5514) x499))
(assert (x2468 x3246))
(assert (= (and x3515 x3750) x5578))
(assert (x2946 x1469))
(assert (= x3736 (and x5688 x977)))
(assert (= x677 (and (not x98) x6037)))
(assert (= (and x3811 x3177) x1553))
(assert (x2946 x1184))
(assert (= x734 (and x2095 x1176)))
(assert (= (and x59 x2005) x5822))
(assert (= x4603 (and x4474 x6051)))
(assert (x2946 x884))
(assert (x2946 x126))
(assert (x2946 x4308))
(assert (x2946 x733))
(assert (= x1166 (and x5762 x717)))
(assert (x2946 x875))
(assert (= (x4555 2127478272) (x821 2127478272)))
(assert (= (and (not x5587) x4349) x3988))
(assert (= (and x1964 x4755) x106))
(assert (= x1561 (and x4285 x4324)))
(assert (= x697 (or x3428 x6300)))
(assert (= (and x4743 x2140) x1353))
(assert (x5626 x3074))
(assert (=> (>= 10000 x3890) (= (x821 x3890) (x4555 x3890))))
(assert (x2946 x107))
(assert (= x1546 (and (not x4047) x4597)))
(assert (x2946 x1671))
(assert (x3761 x2489))
(assert (= (and (not x1267) x1133) x4773))
(assert (x2946 x1135))
(assert (x2946 x4619))
(assert (and (x2072 x1581 256) (x3935 x1581 256) (=> (> 256 0) (= (+ (* (x4941 x1581 256) 256) (x432 x1581 256)) x1581)) (x4154 x1581 256)))
(assert (= x3807 (=> (and (= x2011 x5178) (= x6348 x3577)) x696)))
(assert (= (and x5800 (not x2030)) x1572))
(assert (= (or x4085 x4390) x2737))
(assert (= (and x3117 x574) x388))
(assert (x2946 x3945))
(assert (x3761 x3906))
(assert (x4723 x2533 x215 x5471 x215))
(assert (x2946 x560))
(assert (x2946 x888))
(assert (=> (>= 10000 x4381) (= (x821 x4381) (x4555 x4381))))
(assert (= x6003 (x4465 (x4555 x6003))))
(assert (= (x4465 (x4555 x5343)) x5343))
(assert (x3146 (- x3021 x1163)))
(assert (x5626 x2914))
(assert (x2946 x6247))
(assert (= x4786 (and (not x3035) x80)))
(assert (x2946 x5451))
(assert (x2946 x4588))
(assert (x2946 x4953))
(assert (and (x6393 x1316 10000) (x6383 x1316 10000) (=> (and (< 0 10000) (< 0 x1316)) (and (<= (* (x4941 x1316 10000) 10000) x1316) (< (- x1316 10000) (* (x4941 x1316 10000) 10000)))) (x2854 x1316 10000) (x1495 x1316 10000)))
(assert (= (and x914 (not x2588)) x902))
(assert (= x5435 (and x4257 x3113)))
(assert (x2946 x5060))
(assert (x2946 x4425))
(assert (= (and x5574 x1722) x2341))
(assert (x2946 x1551))
(assert (x2946 x4122))
(assert (x2946 x6394))
(assert (= x1939 (and x1082 x5126)))
(assert (x2491 x2533 x215 x215 x5471))
(assert (= x6199 (and x4702 (not x3696))))
(assert (x2946 x2098))
(assert (x2946 x183))
(assert (= x1185 (and x5407 x2997)))
(assert (x2946 x3915))
(assert (= x2287 (and x5957 (not x4333))))
(assert (x2946 x3932))
(assert (= x4407 (and x1078 (not x3650))))
(assert (= x877 (or x3073 x3764 x6043 x1165 x4232 x4353 x4482 x4116 x5899 x3335 x3641 x3646)))
(assert (x2946 x356))
(assert (= (and x3662 x5042) x5106))
(assert (= x1778 (and x3281 (not x4929))))
(assert (= x2376 (=> (and (= x2668 x640) (= x6268 x5358)) x2313)))
(assert (x2946 x3150))
(assert (x2946 x6412))
(assert (not x2970))
(assert (x2491 x215 x3021 x215 x2533))
(assert (= (and x4194 x5093) x988))
(assert (x2946 x4674))
(assert (= (and (not x488) x4759) x5635))
(assert (= x285 (and x3507 (not x4486))))
(assert (= 1461501637330902918203684832716283019655932542976 (x4465 (x821 1461501637330902918203684832716283019655932542976))))
(assert (x2946 x2952))
(assert (x4723 x3951 x1163 x5062 x215))
(assert (x2946 x4267))
(assert (x2946 x2786))
(assert (= (and x5970 x3449) x4837))
(assert (x2946 x5752))
(assert (= (and x6359 (not x5493)) x3602))
(assert (x2946 x5046))
(assert (=> (<= x2922 10000) (= (x821 x2922) (x4555 x2922))))
(assert (x5626 x4422))
(assert (x2946 x2476))
(assert (x2946 x34))
(assert (x2946 x5816))
(assert (= (and x3324 x4864) x2246))
(assert (x2946 x2000))
(assert (= x3005 (x4465 (x4555 x3005))))
(assert (x2946 x1679))
(assert (x5626 x2442))
(assert (x1795 x1558))
(assert (= (and x6022 x6376) x5264))
(assert (= (and x2196 (not x3947)) x472))
(assert (x2946 x2742))
(assert (x2946 x868))
(assert (=> (<= x4281 10000) (= (x821 x4281) (x4555 x4281))))
(assert (= x5693 (and x703 x1993)))
(assert (= (and x1123 x3697) x4728))
(assert (x2946 x5393))
(assert (x2946 x2847))
(assert (x2946 x5197))
(assert (and (x6393 x263 10000) (x6383 x263 10000) (=> (and (< 0 10000) (< 0 x263)) (and (<= (* (x4941 x263 10000) 10000) x263) (< (- x263 10000) (* (x4941 x263 10000) 10000)))) (x2854 x263 10000) (x1495 x263 10000)))
(assert (=> (<= x4938 10000) (= (x821 x4938) (x4555 x4938))))
(assert (x2946 x4209))
(assert (= (x4465 (x4555 x5454)) x5454))
(assert (= x4111 (and x5578 x3352)))
(assert (= x93 (and x593 x4454)))
(assert (= (and (not x1867) x4252) x1195))
(assert (= x3766 (and x5949 (not x4777))))
(assert (x2946 x5802))
(assert (x2946 x5855))
(assert (= (and x3225 x6187) x6192))
(assert (= x828 (and x36 x5420)))
(assert (= (and x151 (not x3668)) x2697))
(assert (= x6430 (or (and x2080 (not x857)) (and x714 x5989) (and (not x1956) x3833))))
(assert (= x4998 (and x1452 (not x581))))
(assert (x2946 x4043))
(assert (x2946 x2094))
(assert (= x6006 (and x4904 x455)))
(assert (= x639 (and x2951 (not x1326))))
(assert (= x1670 (and x5292 x5873)))
(assert (x2946 x4971))
(assert (= x4348 (and x3616 x2912)))
(assert (= x4461 (and x1677 (not x1625))))
(assert (x2946 x3906))
(assert (= x1228 (and x3255 x2823)))
(assert (x2946 x4231))
(assert (= x1194 (and x376 (not x4100))))
(assert (x2946 x2940))
(assert (= x4826 (and x4733 x4676)))
(assert (= x5708 (=> (and (= x4090 x1026) (= x342 x637)) x2182)))
(assert (= x5397 (x4465 (x4555 x5397))))
(assert (= x2369 (x4465 (x4555 x2369))))
(assert (x2491 x1346 x215 x1163 x3951))
(assert (= (and x2632 (not x1343)) x1677))
(assert (=> (<= x474 10000) (= (x4555 x474) (x821 x474))))
(assert (= x1886 (and x2360 x2105)))
(assert (= x6307 (and x4898 x6006)))
(assert (x2946 x787))
(assert (= x5869 (or (and (not x4900) x3612) (and x481 (not x5371)) (and x725 x1809))))
(assert (=> (>= 10000 x3465) (= (x821 x3465) (x4555 x3465))))
(assert (x3160 x215 (- x5062 x215)))
(assert (= (and (not x3980) x5817) x2617))
(assert (= (and x6050 (not x2842)) x4))
(assert (= x3119 (and (not x1782) x5272)))
(assert (= (and x2929 x164) x53))
(assert (= (or x5915 x6140 x1670 x3471 x4530 x2989) x2770))
(assert (= (or x1778 x2770) x2874))
(assert (x3146 (- x5471 x3021)))
(assert (= (and x71 x2840) x5039))
(assert (x2946 x5666))
(assert (= (and x5500 x4954) x3991))
(assert (= (x4465 (x4555 x4382)) x4382))
(assert (= (and x462 x2554) x2186))
(assert (x2946 x1732))
(assert (=> (>= 10000 x1763) (= (x821 x1763) (x4555 x1763))))
(assert (x3761 x731))
(assert (= (and x416 (not x2560)) x6290))
(assert (x2946 x5470))
(assert (and (x2072 x5204 1461501637330902918203684832716283019655932542976) (x3935 x5204 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x5204 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x5204 1461501637330902918203684832716283019655932542976)) x5204)) (x4154 x5204 1461501637330902918203684832716283019655932542976)))
(assert (= (and x2792 x835) x5812))
(assert (x2946 x4342))
(assert (=> (<= x3189 10000) (= (x4555 x3189) (x821 x3189))))
(assert (= x3555 (and x3864 x334)))
(assert (x3160 x215 (- x3021 x5471)))
(assert (= (and x3109 x187) x740))
(assert (= (x4465 (x4555 x1824)) x1824))
(assert (x2946 x1233))
(assert (= (or (and x5475 (not x3574)) (and (not x6390) x972) (and x3517 x478)) x6133))
(assert (x2946 x4377))
(assert (x2946 x1915))
(assert (= (and (not x3783) x2378) x2678))
(assert (=> (>= 10000 x3263) (= (x4555 x3263) (x821 x3263))))
(assert (= x975 (and x5905 x4509)))
(assert (= (and x2836 x5320) x3540))
(assert (= (x4465 (x4555 x4034)) x4034))
(assert (= (=> (and (= x4220 x4658) (= x1648 x5783)) x4272) x3341))
(assert (= (and x1928 (not x4604)) x5786))
(assert (x1752 x1695))
(assert (x2946 x5362))
(assert (x2946 x1200))
(assert (= (and (not x5403) x3446) x5294))
(assert (x2491 x3951 x1163 x5062 x215))
(assert (= x2713 (=> (and (= x6106 x3992) (= 0 x5748)) x5767)))
(assert (= x4802 (and x535 x2506)))
(assert (x2946 x1527))
(assert (= (and x5924 x1553) x1396))
(assert (= (and x6414 x5655) x6101))
(assert (= (and (not x2699) x5992) x3084))
(assert (= (and (not x2195) x5164) x3719))
(assert (x2946 x2084))
(assert (x3761 x6411))
(assert (x2946 x4756))
(assert (= (x4465 (x4555 x1296)) x1296))
(assert (= x1570 (and x5435 x5007)))
(assert (= (=> (and (= x4658 0) (= x1648 x3443)) x3341) x3407))
(assert (= (and x4320 x2071) x2639))
(assert (x2946 x245))
(assert (= x668 (x4465 (x4555 x668))))
(assert (= x977 (and x1757 x46)))
(assert (x2946 x784))
(assert (x2946 x2827))
(assert (x2946 x235))
(assert (x2946 x4069))
(assert (= (and x1363 (not x1789)) x5682))
(assert (= (and x5188 (not x1282)) x21))
(assert (= (and x1707 x6098) x3203))
(assert (= x6372 (and x6306 (not x4104))))
(assert (x3331 x276 x4797))
(assert (x2946 x2382))
(assert (= x6077 (or (and x1460 x4403) (and (not x4904) x455) (and (not x4898) x6006))))
(assert (= x3809 (and x2447 x5205)))
(assert (x2946 x2342))
(assert (x2946 x4329))
(assert (= x5905 (and (not x1618) x3832)))
(assert (and (x2072 x2914 1461501637330902918203684832716283019655932542976) (x3935 x2914 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x2914 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x2914 1461501637330902918203684832716283019655932542976)) x2914)) (x4154 x2914 1461501637330902918203684832716283019655932542976)))
(assert (x2946 x5501))
(assert (x2946 x3920))
(assert (x2946 x4439))
(assert (x2946 x2661))
(assert (= (and x4801 x1454) x4750))
(assert (= (and x5385 (not x1349)) x6136))
(assert (= (x4465 (x4555 x309)) x309))
(assert (= x717 (and x420 (not x1283))))
(assert (x2946 x2127))
(assert (x1752 x4550))
(assert (= (or x5370 x2593) x2312))
(assert (x2946 x4029))
(assert (x2946 x4065))
(assert (x3146 x5471))
(assert (x2946 x3024))
(assert (x2946 x4966))
(assert (x2946 x5171))
(assert (= x1190 (and x1051 x802)))
(assert (= x2130 (and x3744 x6311)))
(assert (x2946 x900))
(assert (= x4632 (and x6340 (not x1639))))
(assert (= (and (not x915) x257) x2717))
(assert (x2491 x215 x5471 x1163 x3951))
(assert (x3761 x4377))
(assert (x2946 x5522))
(assert (= (x4555 649617121) (x821 649617121)))
(assert (x2946 x2077))
(assert (= x792 (and x3301 x3638)))
(assert (x3761 x938))
(assert (= (and x4118 (not x4587)) x1531))
(assert (= (and (not x3566) x4133) x6408))
(assert (= (=> (and (= x6232 x5823) (= x4009 x6349)) x503) x4106))
(assert (x1752 x2965))
(assert (= x5293 (and x2572 x3355)))
(assert (= (x821 2757214935) (x4555 2757214935)))
(assert (= (x4465 (x4555 x3551)) x3551))
(assert (x2946 x374))
(assert (= (and x2262 (not x2540)) x4454))
(assert (= (and x4228 x1250) x2656))
(assert (x2491 x215 x2533 x3951 x1163))
(assert (= x4071 (and x3564 x1537)))
(assert (x2468 x1023))
(assert (x2946 x4217))
(assert (x2946 x26))
(assert (x2946 x542))
(assert (= (and x112 (not x2486)) x4182))
(assert (x3761 x763))
(assert (x2946 x4930))
(assert (= x2849 (and x5263 x5194)))
(assert (x2946 x645))
(assert (x2946 x1771))
(assert (= x5549 (x4465 (x4555 x5549))))
(assert (x2946 x2866))
(assert (x2946 x62))
(assert (= x3731 (and x3787 x4033)))
(assert (= x742 (=> (and (= x678 x831) (= x206 x149)) x3625)))
(assert (x2946 x881))
(assert (x4723 x1346 x215 x5471 x215))
(assert (= x3359 (and x4264 (not x4098))))
(assert (= x919 (and (not x3062) x1513)))
(assert (x2946 x5507))
(assert (x2946 x58))
(assert (x2946 x1447))
(assert (= x2349 (x4465 (x4555 x2349))))
(assert (x2946 x5549))
(assert (= x3139 (and (not x2643) x4800)))
(assert (x2946 x772))
(assert (x2946 x6377))
(assert (x2946 x2423))
(assert (= (and x4612 x51) x4116))
(assert (= (or x1983 x1191) x819))
(assert (=> (>= 10000 x4973) (= (x4555 x4973) (x821 x4973))))
(assert (x2946 x4745))
(assert (x2946 x5850))
(assert (x2491 x215 x3021 x2533 x215))
(assert (x2946 x2510))
(assert (x2946 x3209))
(assert (and (x2072 x4064 1461501637330902918203684832716283019655932542976) (x3935 x4064 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x4064 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x4064 1461501637330902918203684832716283019655932542976)) x4064)) (x4154 x4064 1461501637330902918203684832716283019655932542976)))
(assert (= x3828 (and (not x65) x5547)))
(assert (and (x2072 x4719 1461501637330902918203684832716283019655932542976) (x3935 x4719 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x4719 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x4719 1461501637330902918203684832716283019655932542976)) x4719)) (x4154 x4719 1461501637330902918203684832716283019655932542976)))
(assert (x2946 x710))
(assert (x2946 x5260))
(assert (x5626 256))
(assert (= x189 (or (and x5068 (not x3411)) (and x4327 x459) (and (not x3002) x2548))))
(assert (=> (<= x5608 10000) (= (x4555 x5608) (x821 x5608))))
(assert (x2946 x63))
(assert (= x3261 (=> (and (= x3924 0) (= x6115 x4432)) x2397)))
(assert (x2946 x3626))
(assert (= (and x1697 x1103) x1934))
(assert (=> (<= x3643 10000) (= (x4555 x3643) (x821 x3643))))
(assert (x2946 x1665))
(assert (= (and (not x2844) x2900) x2334))
(assert (x2946 x5810))
(assert (= x5330 (and x4362 x2791)))
(assert (x2946 x1397))
(assert (x2946 x5487))
(assert (x3761 x4557))
(assert (= (and x3938 (not x2434)) x1230))
(assert (= (and x4661 x4030) x5414))
(assert (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x4465 (x821 4238056678808933066457772256406219440718756300954938350892797929791311314944))))
(assert (x5626 x4268))
(assert (= (and x5493 x6359) x944))
(assert (= x585 (and x4694 (not x239))))
(assert (= x321 (=> (and (= x5191 0) (= x5218 x1946)) x803)))
(assert (= (and x6342 (not x5768)) x2475))
(assert (x2946 x3698))
(assert (= (and (not x5258) x3437) x2850))
(assert (x2946 x3639))
(assert (x2946 x4541))
(assert (= x3223 (and x2650 x1360)))
(assert (= x2316 (=> (and (= x6233 x4713) (= x2352 x4700)) x5219)))
(assert (x2946 x464))
(assert (x2946 x6288))
(assert (= (and x4922 x4924) x4746))
(assert (x3761 x1612))
(assert (= (and (not x663) x5682) x4164))
(assert (= (or x3528 x2325 x5822 x4553 x3562 x3166) x1987))
(assert (= (and x6099 x1016) x4118))
(assert (= x4717 (x4465 (x4555 x4717))))
(assert (x2946 x1488))
(assert (= x2397 (=> (and (= x3924 x5984) (= x4432 x6377)) x5477)))
(assert (= (and (not x81) x2273) x6141))
(assert (x2946 x4551))
(assert (x2946 x5485))
(assert (x2946 x3968))
(assert (= x5639 (and (not x679) x4206)))
(assert (= (=> (and (or (not x2930) x2930) (= x2930 (= 0 x4220))) x6335) x4272))
(assert (x2946 x4659))
(assert (= x1344 (and x3276 x2086)))
(assert (= 3329172565 (x4465 (x821 3329172565))))
(assert (= (and x3392 x5352) x3863))
(assert (x2946 x1502))
(assert (= (and x1918 (not x2712)) x4965))
(assert (x2946 x3654))
(assert (x2946 x5923))
(assert (x1752 x2442))
(assert (= (and (not x205) x4556) x5975))
(assert (= (x4555 404098525) (x821 404098525)))
(assert (= (and (not x5981) x830) x6125))
(assert (x2946 x4042))
(assert (x1752 x9))
(assert (= x779 (and (not x1254) x4944)))
(assert (x2946 x3178))
(assert (x2946 x2271))
(assert (x2946 x4518))
(assert (= (and x3599 x1745) x1382))
(assert (x2946 x2355))
(assert (x3761 x4717))
(assert (x2946 x3500))
(assert (= x6362 (or x1239 x4433 x1570 x2508 x1598 x5163 x892 x5039 x2056 x5184 x2112 x6131 x5812)))
(assert (x2491 x215 x3021 x3951 x1163))
(assert (= (=> (and (= x726 0) (= x6159 x2257)) x3633) x6083))
(assert (= (and (not x3724) x953) x3398))
(assert (x3761 x552))
(assert (x2946 x730))
(assert (x2946 x2563))
(assert (x3160 x215 (- x1346 x5471)))
(assert (x2946 x6211))
(assert (x2946 x3899))
(assert (x2946 x5275))
(assert (x2946 x2625))
(assert (= (=> (and (= x4665 x6239) (= x1916 x1921)) x2234) x4241))
(assert (x2946 x678))
(assert (= (and (not x764) x3007) x6))
(assert (x2946 x262))
(assert (x2946 x3919))
(assert (x3761 x6182))
(assert (= x2080 (and x1956 x3833)))
(assert (=> (>= 10000 x3906) (= (x4555 x3906) (x821 x3906))))
(assert (= x2273 (and (not x1745) x3599)))
(assert (= (and x1776 x5967) x252))
(assert (=> (>= 10000 x6166) (= (x821 x6166) (x4555 x6166))))
(assert (= x1890 (and x468 (not x5604))))
(assert (= (x4465 (x4555 x6231)) x6231))
(assert (= x2191 (or (and (not x4036) x73) (and x3665 x3480) (and (not x2120) x5127))))
(assert (= (x4465 (x4555 x1638)) x1638))
(assert (x2946 x3399))
(assert (= (x821 3329172565) (x4555 3329172565)))
(assert (x2946 x5831))
(assert (= (and x2962 (not x4062)) x6396))
(assert (x2946 x1259))
(assert (x1752 x103))
(assert (= (=> (and (= 0 x342) (= x5218 x1026)) x5708) x4250))
(assert (x2946 x3115))
(assert (= (and x4506 x5705) x6398))
(assert (x2946 x5748))
(assert (x2946 x1834))
(assert (x2946 x1509))
(assert (= x2367 (and x2842 x6050)))
(assert (x2946 x970))
(assert (= x5938 (and x5663 x5307)))
(assert (= x4784 (and (not x1014) x739)))
(assert (x2946 x47))
(assert (=> (<= x1258 10000) (= (x821 x1258) (x4555 x1258))))
(assert (x2946 x1138))
(assert (x3761 x1646))
(assert (x2946 x6330))
(assert (= (and x5372 x2623) x6096))
(assert (x2946 x4441))
(assert (= (and x1074 x5365) x2252))
(assert (= x2790 (or x3193 x5933)))
(assert (= x3205 (and x1787 x4889)))
(assert (= (and x4160 x2198) x2038))
(assert (= (or (and x3766 (not x6079)) (and x5949 x4777) (and x173 (not x234))) x4620))
(assert (=> (<= x1496 10000) (= (x4555 x1496) (x821 x1496))))
(assert (= (=> (and (= (x5518 x643) x6060) (= (> x4386 x6060) x5270) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6060) (>= x6060 0) (= x643 (x5195 (x4555 x6166) (x821 1) 0))) (and (=> x5270 x1052) (=> (and (and (= x6237 (x3726 (- x6060 x4386))) (<= 0 x3710) (<= x3710 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1231 x5797) x3710) (= x6351 (> x3710 x2098)) (= (x5195 (x4555 x676) (x821 1) 0) x5797) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4386)) x2098)) (not x5270)) (and (=> (and (and (= (x3844 (+ x4386 x3710)) x3481) (= x5322 32) (= 1 x705)) (not x6351)) x1562) (=> x6351 x1052))))) x2605))
(assert (x2946 x1968))
(assert (x2946 x1110))
(assert (x2946 x3092))
(assert (x3761 x3413))
(assert (= (and x2557 (not x2939)) x2529))
(assert (x2946 x4025))
(assert (= x3714 (and (not x1953) x3580)))
(assert (x2946 x5373))
(assert (= x5170 (and x2173 (not x3886))))
(assert (x2946 x5795))
(assert (x2946 x5030))
(assert (= x1935 (and x1945 (not x2206))))
(assert (x2946 x4431))
(assert (= (x4465 (x4555 x1763)) x1763))
(assert (x3331 x2296 x2449))
(assert (= (and x5746 x87) x1150))
(assert (=> (>= 10000 x5850) (= (x4555 x5850) (x821 x5850))))
(assert (= (=> (and (= x3679 0) (= x6159 x2789)) x1549) x1063))
(assert (= x3076 (and (not x5820) x1120)))
(assert (= (and (not x2401) x3180) x4283))
(assert (x2946 x3609))
(assert (= x1399 (and x1602 (not x6073))))
(assert (= x3233 (and x1533 x3410)))
(assert (= (and (not x4955) x1364) x3661))
(assert (= x3598 (and x3531 x349)))
(assert (= (and x4684 x5639) x6024))
(assert (x2946 x2881))
(assert (= (and x1250 (not x4228)) x199))
(assert (= (and x1770 (not x898)) x3109))
(assert (and (x6393 x3173 10000) (x6383 x3173 10000) (=> (and (< 0 10000) (< 0 x3173)) (and (<= (* (x4941 x3173 10000) 10000) x3173) (< (- x3173 10000) (* (x4941 x3173 10000) 10000)))) (x2854 x3173 10000) (x1495 x3173 10000)))
(assert (= (x4465 (x821 2514000705)) 2514000705))
(assert (x2946 x2994))
(assert (x2946 x852))
(assert (x2946 x5008))
(assert (= (and x6408 x2229) x4482))
(assert (x2946 x5159))
(assert (= (or x2570 x3859 x2903 x5646 x4146) x765))
(assert (x2946 x6041))
(assert (= (and x5110 (not x135)) x4997))
(assert (x3160 x1346 (- x215 x5471)))
(assert (=> (<= x4215 10000) (= (x821 x4215) (x4555 x4215))))
(assert (x3761 x5549))
(assert (x2946 x4159))
(assert (x2946 x426))
(assert (x2946 x1558))
(assert (= (or x1424 x4328) x1802))
(assert (x2946 x1207))
(assert (= (x4465 (x4555 x494)) x494))
(assert (and (x2072 x4886 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3935 x4886 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x4941 x4886 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x432 x4886 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x4886)) (x4154 x4886 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x2946 x2666))
(assert (x2946 x3688))
(assert (x2946 x6009))
(assert (x4723 x5062 x215 x5471 x215))
(assert (x2946 x4088))
(assert (= x5558 (and x1306 x1940)))
(assert (x2946 x693))
(assert (=> (>= 10000 x5095) (= (x821 x5095) (x4555 x5095))))
(assert (x2946 x4770))
(assert (= x110 (and x4349 x5587)))
(assert (x2946 x5505))
(assert (= x4151 (or (and x2925 (not x2439)) x5048)))
(assert (x2946 x5928))
(assert (x2946 x311))
(assert (x2946 x4523))
(assert (= (or x5140 x2475 x3552 x2304 x2160 x1642) x3428))
(assert (x5626 x1581))
(assert (x2946 x736))
(assert (x2946 x853))
(assert (= x1723 (and (not x1431) x3543)))
(assert (x2946 x2064))
(assert (x3146 (- x215 x1163)))
(assert (x2946 x5027))
(assert (x3160 x215 (- x5062 x3951)))
(assert (x2946 x660))
(assert (= x2495 (and x3032 x1687)))
(assert (x2946 x5618))
(assert (and (x2072 x1023 1461501637330902918203684832716283019655932542976) (x3935 x1023 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x1023 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x1023 1461501637330902918203684832716283019655932542976)) x1023)) (x4154 x1023 1461501637330902918203684832716283019655932542976)))
(assert (= x739 (and x4453 (not x3483))))
(assert (x3160 x2533 (- x215 x1163)))
(assert (= (and x3578 x1853) x155))
(assert (x2946 x404))
(assert (x2946 x1163))
(assert (= (and x3125 x3949) x3310))
(assert (= (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x1439) (= 2512374353 x2559) (not (> 2512374353 x2559)) x715 (>= 1461501637330902918203684832716283019655932542975 x5608) (= x2987 (not (= x799 x2507))) (= x5489 x6035) (< 0 x4229) (not (= 0 x3072)) (>= x1439 0) (= x3963 (= x474 x1439)) (< x2559 3065339685) (= x4143 x3587) x2987 (= x2507 x5489) (= x5608 x1698) (= (x353 (x4555 x5489)) x4229) (= x4383 x799) (< x1439 1461501637330902918203684832716283019655932542976) (= (not (= x6035 x3587)) x715) (= (x353 (x4555 x1439)) x3072) (= x3508 128)) (and (not (= x5753 x6182)) (<= x5354 255) (<= 0 x5354) (not (= x3135 x3993)) x6203 (<= x1411 1461501637330902918203684832716283019655932542975) (<= 0 x4204) x3937 (not (= x2893 x4666)) (not (= x2893 x5753)) (> x5753 0) (not (= x3135 x5489)) (>= 255 x2670) (= (< 0 (x353 (x4555 x4027))) x5912) (= x1985 (x577 (x4555 x3551))) (<= x2893 1461501637330902918203684832716283019655932542975) (= x4330 x5838) (not (= x3135 x6182)) (not (= x2893 x3135)) (not (= x4027 x6182)) (not (= x4027 x2893)) x2429 (not (= x1262 x30)) (not (= x474 x2893)) (< 0 x474) (not (= x5556 x30)) (>= 1461501637330902918203684832716283019655932542975 x4330) (>= x4293 0) x515 (>= x1985 0) (>= x4824 0) (<= x5755 255) (>= 1461501637330902918203684832716283019655932542975 x4204) (<= x6182 1461501637330902918203684832716283019655932542975) (<= x3639 1461501637330902918203684832716283019655932542975) (not (= x3135 x474)) (> x4666 0) (<= x1262 1461501637330902918203684832716283019655932542975) (= x5711 (> (x353 (x4555 x3993)) 0)) (not (= x4027 x30)) (<= 0 x5444) (not (= x5556 x6182)) (not (= x30 x3551)) (<= x3209 255) (= (> (x353 (x4555 x3551)) 0) x2019) x2794 x5711 (not (= x5753 x1262)) (not (= x1411 x3993)) (not (= x30 x3135)) (>= x4074 0) (not (= x3135 x1411)) (= (< 0 (x353 (x4555 x2893))) x3937) (>= 255 x2741) (not (= x4027 x5753)) (= x6146 (x577 (x4555 x474))) (= x1808 2644395612) (<= x5556 1461501637330902918203684832716283019655932542975) (> x806 0) (>= 1461501637330902918203684832716283019655932542975 x1439) (not (= x4027 x5489)) (<= 0 x3639) (= x545 (x577 (x4555 x2893))) (> x3993 0) (<= 0 x6146) (>= x3595 0) (not (= x4666 x3993)) (= x6203 (> (x353 (x4555 x30)) 0)) (<= 0 x1439) (not (= x1411 x4666)) (not (= x6182 x474)) (= x806 (x353 (x4555 x5489))) (<= 0 x5755) (not (= x5753 x1411)) x5912 (= x3905 false) (<= 0 x230) (= x5650 (> (x353 (x4555 x1411)) 0)) (not (= x4666 x1262)) (>= x1497 0) (= (x577 (x4555 x5556)) x4222) (not (= x1262 x1411)) (not (= x4027 x5556)) (< x1439 1461501637330902918203684832716283019655932542976) x5453 (not (= x2893 x5556)) (= x5838 x4383) x268 (not (= x6182 x5489)) (not (= x5753 x4666)) (not (< x4501 953495055)) (> x2893 0) (<= 0 x1637) (<= x30 1461501637330902918203684832716283019655932542975) (<= 0 x1439) (not (= x2893 x6182)) (= x5387 x5640) (not (= x6182 x4666)) (not (= x1411 x30)) (<= 0 x3200) (= x4501 953495055) (<= x5230 1461501637330902918203684832716283019655932542975) (<= 0 x5870) (<= x4666 1461501637330902918203684832716283019655932542975) (< 0 x4027) (>= x1793 0) (>= 1461501637330902918203684832716283019655932542975 x4027) (not (= x1262 x474)) (not (= x2893 x5489)) (>= 1461501637330902918203684832716283019655932542975 x474) (not (= x3135 x3551)) (not (= x474 x5753)) (not (= x5753 x3993)) (>= 1461501637330902918203684832716283019655932542975 x5753) (= x268 (< 0 (x353 (x4555 x5489)))) (<= x1793 1461501637330902918203684832716283019655932542975) (>= x4222 0) (= x1439 x4143) (= x5942 x982) (> x1262 0) (<= 0 x3981) (not (= x474 x3993)) (= x1554 (> (x353 (x4555 x6182)) 0)) (not (= x2893 x1262)) (= x698 x5864) (= x230 (x577 (x4555 x4027))) (>= x4330 0) (= x4032 x2460) (< 0 x5489) (<= x3135 1461501637330902918203684832716283019655932542975) (<= 0 x5230) (< 0 x1411) (>= 1461501637330902918203684832716283019655932542975 x3595) (not (= x3551 x3993)) (not (= x3551 x5753)) (= (x577 (x4555 x5753)) x4758) (not (= x3135 x5753)) (<= x5870 1461501637330902918203684832716283019655932542975) (not (= x3551 x1411)) (not (= x4666 x474)) (= x2383 false) (>= x2741 0) (< 0 x5556) (not (= x5489 x1262)) (not (= x3551 x4666)) (<= 0 x3871) (not (= x5556 x1411)) (= x1698 x5853) (not (= x474 x30)) (= (< 0 (x353 (x4555 x3135))) x3432) (not (= x2893 x30)) (= x3200 (x577 (x4555 x3135))) (>= x787 0) (= x3981 x4401) (>= x1731 0) (not (= x1411 x2893)) (not (= x1411 x5489)) (not (= x4027 x3551)) (not (= x3551 x2893)) (not (= x1411 x4027)) (not (= x3551 x5556)) (= x2429 (> (x353 (x4555 x474)) 0)) x5650 (> x30 0) (<= x5444 255) (= (x577 (x4555 x6182)) x787) (= 2 x1859) (not (= x2893 x3993)) x3432 (= x918 false) (not (= x3993 x5489)) (= x1497 (x577 (x4555 x1411))) (not (= x6182 x1262)) (not (= x4666 x4027)) (= x167 x3372) (<= 0 x5853) (= x515 (> (x353 (x4555 x1262)) 0)) (not (= x5753 x30)) (= x4641 x2311) (not (= x474 x5489)) x1554 (>= x6319 0) (not (= x3551 x474)) (>= 255 x1731) (>= 1461501637330902918203684832716283019655932542975 x4074) (not (= x3551 x5489)) (>= 1461501637330902918203684832716283019655932542975 x5853) (= (> (x353 (x4555 x5753)) 0) x1555) (not (= x5489 x4666)) (< 0 x3551) (>= x2249 0) (not (= x5489 x5753)) (>= 1461501637330902918203684832716283019655932542975 x5489) (>= 1461501637330902918203684832716283019655932542975 x3871) (not (= x6182 x30)) (= x4293 (x577 (x4555 x4666))) (>= x4758 0) (<= x2249 1461501637330902918203684832716283019655932542975) (not (= x6182 x1411)) x2019 (not (= x3135 x4666)) (<= 0 x5509) (= x2143 (x577 (x4555 x5489))) (< 0 x3135) (not (= x4027 x474)) (<= x6319 1461501637330902918203684832716283019655932542975) (<= 0 x545) (not (= x4027 x3993)) (not (= x5556 x1262)) (>= x3029 0) (not (= x4666 x5556)) (not (= x3551 x6182)) (= x3029 (x577 (x4555 x3993))) (not (= x30 x5489)) (<= 0 x887) (not (= x4027 x1262)) x1555 (not (= x1262 x3135)) (not (= x5556 x474)) (not (= x30 x4666)) (not (= x5753 x5556)) (not (= x3135 x5556)) (= false x3814) (>= 1461501637330902918203684832716283019655932542975 x3005) (= x2976 x4401) (not (= x3993 x5556)) (<= x887 255) (= (x577 (x4555 x30)) x5509) (>= 1461501637330902918203684832716283019655932542975 x3993) (= x876 x2956) (>= 1461501637330902918203684832716283019655932542975 x1637) (>= 1461501637330902918203684832716283019655932542975 x3551) (>= x2670 0) (not (= x3551 x1262)) (= (x577 (x4555 x1262)) x4824) (= x2794 (> (x353 (x4555 x5556)) 0)) (= x5453 (< 0 (x353 (x4555 x4666)))) (>= x3209 0) (not (= x1262 x3993)) (not (= x3993 x30)) (> x6182 0) (<= x1439 1461501637330902918203684832716283019655932542975) (not (= x474 x1411)) (not (= x5556 x5489)) (<= 0 x2143) (<= 0 x3005) (not (= x4027 x3135)) (not (= x3993 x6182)) (> 2512374353 x4501) (>= 1461501637330902918203684832716283019655932542975 x3981))) (and (=> (and x3963 (and (< 0 x3256) (not (< x305 4)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x126) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x126) true) (> 64 x126))) x4487) (= x3256 (x353 (x4555 x474))) (not (> 1889567281 x3624)) (= x3932 x5608) (< x3624 3835264453) (not (< x3624 3674237557)) (= (x3726 (- x305 4)) x126) (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x77) (= 68 x305) (= x305 68) (= x3624 3714247998) (= x4692 x5489) (not (= x3624 3674237557)))) (and (=> x4487 x6325) (=> (and (and (= x3117 (= x5489 x4692)) (= x4692 x3382)) (not x4487)) (and (=> (not x3117) x6325) (=> (and (= (= x3932 x5608) x5782) x3117) (and (=> (not x5782) x6325) (=> (and x5782 (and (= x4913 1) (>= x4617 0) (= 32 x5231) (= x4617 (x5921 x1608)) (= x3887 (x5195 (x4555 x4692) (x821 5) 0)) (= x1608 (x5195 (x4555 x5608) x3887 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4617))) x171))))))) (=> (and (not x3963) (= x4435 (= x3551 x1439))) (and (=> (and (and (> x4043 0) (not (< x4065 2987494029)) (not (= 3590908516 x4065)) (not (= 3642135687 x4065)) (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x5593) (= x1668 68) (= x5489 x4546) (= (or (> x3626 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3626)) (> 64 x3626))) x520) (< x4065 3824031246) (not (> 2127478272 x4065)) (= x4043 (x353 (x4555 x3551))) (= 68 x1668) (not (< x1668 4)) (not (= x4065 3573918927)) (= x776 x5608) (not (= 3171951664 x4065)) (not (= x4065 2987494029)) (= (x3726 (- x1668 4)) x3626) (= 3714247998 x4065)) x4435) (and (=> (and (not x520) (and (= x5554 x4546) (= (= x4546 x5489) x3306))) (and (=> (not x3306) x5047) (=> (and (= (= x5608 x776) x76) x3306) (and (=> (and x76 (and (= (x5195 (x4555 x5608) x5417 0) x5729) (= (x5195 (x4555 x4546) (x821 10) 0) x5417) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x329) (= x6072 32) (<= 0 x329) (= (x2044 x5729) x329) (= 1 x2162))) x2148) (=> (not x76) x5047))))) (=> x520 x5047))) (=> (and (= x4682 (= x2893 x1439)) (not x4435)) (and (=> (and (not x4682) (= x3013 (= x1439 x5489))) (and (=> (and (not x3013) (= (= x1439 x5556) x5233)) (and (=> (and (not x5233) (= x425 (= x3135 x1439))) (and (=> (and (and (= x3888 68) (= (x353 (x4555 x3135)) x2664) (not (< x2104 826074471)) (= x2104 3714247998) (= x1734 100135927934651036221761091863598459016256155049858187411712977198722809069568) (= x4196 x5489) (= (x3726 (- x3888 4)) x727) (= x5608 x625) (not (= x2104 2835717307)) (= x3888 68) (= x3517 (or (> x727 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x727 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x727)))) (not (> 4 x3888)) (not (= x2104 1889567281)) (> x2664 0) (not (= 826074471 x2104)) (not (= 2514000705 x2104))) x425) (and (=> (and (and (= x3574 (= x5489 x4196)) (= x4196 x2969)) (not x3517)) (and (=> (not x3574) x5269) (=> (and x3574 (= (= x625 x5608) x6390)) (and (=> (not x6390) x5269) (=> (and (and (= (x2405 x1308) x1332) (= x1596 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1332) (= (x5195 (x4555 x5608) x2170 0) x1308) (= x2170 (x5195 (x4555 x4196) (x821 2) 0)) (= 1 x5429) (<= 0 x1332)) x6390) x5316))))) (=> x3517 x5269))) (=> (and (not x425) (= x5733 (= x1262 x1439))) (and (=> (and x5733 (and (= 68 x700) (not (= 2514000705 x4452)) (= x5489 x2827) (= x3480 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2802) (and (< x2802 64) (= (<= x2802 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not (= 2835717307 x4452)) (= x3698 100135927934651036221761091863598459016256155049858187411712977198722809069568) (not (= 3504541104 x4452)) (not (< x700 4)) (< 0 x4230) (= x3627 x5608) (= 68 x700) (= (x3726 (- x700 4)) x2802) (= x4230 (x353 (x4555 x1262))) (not (= 826074471 x4452)) (not (> 826074471 x4452)) (= 3714247998 x4452) (not (= 1889567281 x4452)))) (and (=> (and (not x3480) (and (= x4036 (= x5489 x2827)) (= x2827 x4053))) (and (=> (and x4036 (= (= x3627 x5608) x2120)) (and (=> (not x2120) x5681) (=> (and (and (= x905 32) (= x6144 (x5195 (x4555 x5608) x3370 0)) (= (x5195 (x4555 x2827) (x821 2) 0) x3370) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5638) (= x5638 (x332 x6144)) (<= 0 x5638) (= 1 x2477)) x2120) x4986))) (=> (not x4036) x5681))) (=> x3480 x5681))) (=> (and (= (= x6182 x1439) x1722) (not x5733)) (and (=> (and (and (= x5489 x1937) (not (< x2218 4)) (= x4862 x5608) (= x2218 68) (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x4439) (not (= 826074471 x4245)) (= 68 x2218) (< 0 x1204) (not (= 2514000705 x4245)) (= (or (> x4878 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x4878 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x4878 64))) x2351) (not (< x4245 826074471)) (= (x353 (x4555 x6182)) x1204) (not (= 2835717307 x4245)) (not (= 1889567281 x4245)) (= x4245 3714247998) (= x4878 (x3726 (- x2218 4)))) x1722) (and (=> (and (and (= x5865 x1937) (= (= x5489 x1937) x5365)) (not x2351)) (and (=> (and (= x3401 (= x5608 x4862)) x5365) (and (=> (not x3401) x3165) (=> (and x3401 (and (= x1575 (x5195 (x4555 x5608) x2982 0)) (= (x5195 (x4555 x1937) (x821 2) 0) x2982) (<= 0 x4722) (= x2784 1) (= 32 x853) (<= x4722 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x421 x1575) x4722))) x2979))) (=> (not x5365) x3165))) (=> x2351 x3165))) (=> (and (not x1722) (= x5064 (= x1411 x1439))) (and (=> (and x5064 (and (= x5386 (x3726 (- x4939 4))) (not (= x5469 826074471)) (= (or (and (> 64 x5386) (= true (<= x5386 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x5386 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x714) (= (x353 (x4555 x1411)) x4644) (> x4644 0) (not (< x4939 4)) (not (= x5469 2514000705)) (not (= x5469 1889567281)) (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x6197) (= x4939 68) (= x5489 x3789) (= x5608 x3767) (= x5469 3714247998) (not (= x5469 2835717307)) (not (> 826074471 x5469)) (= 68 x4939))) (and (=> x714 x3663) (=> (and (and (= x3789 x1927) (= x1956 (= x3789 x5489))) (not x714)) (and (=> (and (= (= x5608 x3767) x857) x1956) (and (=> (and x857 (and (<= 0 x6368) (= x3191 1) (= x6326 (x5195 (x4555 x5608) x1865 0)) (= 32 x1098) (= x6368 (x1446 x6326)) (= (x5195 (x4555 x3789) (x821 2) 0) x1865) (<= x6368 115792089237316195423570985008687907853269984665640564039457584007913129639935))) x2461) (=> (not x857) x3663))) (=> (not x1956) x3663))))) (=> (and (= x4511 (= x1439 x4027)) (not x5064)) (and (=> (and (and (= (= x1439 x3993) x2015) (and (and (= 3714247998 x1974) (not (= x1974 404098525)) (= x5489 x3174) (= x3653 x5608) (not (= 157198259 x1974)) (> x163 0) (= x326 100135927934651036221761091863598459016256155049858187411712977198722809069568) (not (= x1974 1889567281)) (= 68 x1672) (not (= x1974 599290589)) (not (= x1974 2835717307)) (= x2106 (or (> x1233 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1233 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1233)))) (= x163 (x353 (x4555 x3993))) (= x1672 68) (not (< x1672 4)) (= (x3726 (- x1672 4)) x1233)) x2015)) (not x4511)) (and (=> x2106 x5939) (=> (and (not x2106) (and (= (= x3174 x5489) x5468) (= x5598 x3174))) (and (=> (and (= x118 (= x3653 x5608)) x5468) (and (=> (not x118) x5939) (=> (and (and (= 1 x4009) (= (x1936 x4012) x1196) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1196) (= (x5195 (x4555 x3174) (x821 2) 0) x4130) (<= 0 x1196) (= x4012 (x5195 (x4555 x5608) x4130 0)) (= x6232 32)) x118) x4106))) (=> (not x5468) x5939))))) (=> (and (and (not (= 2514000705 x1975)) (= 68 x749) (= x1271 100135927934651036221761091863598459016256155049858187411712977198722809069568) (= (or (and (= (<= x1714 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1714)) (> x1714 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4266) (= x1975 3714247998) (= x5100 x5608) (= 68 x749) (not (< x749 4)) (= x5489 x494) (= x5350 (x353 (x4555 x4027))) (> x5350 0) (= (x3726 (- x749 4)) x1714) (not (= x1975 2835717307)) (not (= 826074471 x1975)) (not (< x1975 826074471)) (not (= x1975 1889567281))) x4511) (and (=> x4266 x4921) (=> (and (not x4266) (and (= x992 (= x494 x5489)) (= x494 x4339))) (and (=> (not x992) x4921) (=> (and x992 (= x3144 (= x5100 x5608))) (and (=> (not x3144) x4921) (=> (and (and (= 32 x620) (= x5084 (x1471 x664)) (>= x5084 0) (= x664 (x5195 (x4555 x5608) x6081 0)) (<= x5084 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x28 1) (= (x5195 (x4555 x494) (x821 2) 0) x6081)) x3144) x809))))))))))))))))) (=> (and (and (not (= x537 2514000705)) (not (= x537 2835717307)) (= (x353 (x4555 x5556)) x2260) (< 0 x2260) (= x3092 x5489) (not (> 4 x3875)) (= x3875 68) (= x5608 x4445) (= (x3726 (- x3875 4)) x4674) (not (> 1117154408 x537)) (not (> 2514000705 x537)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4674) true) (< x4674 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4674)) x4144) (= x3875 68) (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x1220) (not (= x537 2757214935)) (= x537 3714247998)) x5233) (and (=> (and (not x4144) (and (= x6431 x3092) (= (= x5489 x3092) x2446))) (and (=> (and (= x3141 (= x4445 x5608)) x2446) (and (=> (and x3141 (and (= x1237 (x3799 x1779)) (= (x5195 (x4555 x3092) (x821 1) 0) x394) (= x1571 1) (>= x1237 0) (= 32 x374) (= (x5195 (x4555 x5608) x394 0) x1779) (<= x1237 115792089237316195423570985008687907853269984665640564039457584007913129639935))) x3332) (=> (not x3141) x684))) (=> (not x2446) x684))) (=> x4144 x684))))) (=> (and (and (= (x3726 (- x2630 4)) x1302) (not (= 3329172565 x3971)) (= x1286 x5608) (= 68 x2630) (= 3714247998 x3971) (= (x353 (x4555 x5489)) x766) (not (> 4 x2630)) (not (= x3971 3065339685)) (not (> 2512374353 x3971)) (not (= 3088143374 x3971)) (= x5824 (or (and (< x1302 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1302))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1302))) (> x766 0) (= x5489 x4410) (not (< x3971 3065339685)) (= x2630 68) (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x4659)) x3013) (and (=> (and (not x5824) (and (= x434 x4410) (= x3208 (= x5489 x4410)))) (and (=> (and (= (= x1286 x5608) x712) x3208) (and (=> (not x712) x3286) (=> (and (and (= 1 x2377) (>= x5976 0) (= 32 x4874) (= (x5195 (x4555 x5608) x2988 0) x2788) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5976) (= x2988 (x5195 (x4555 x4410) (x821 2) 0)) (= x5976 (x288 x2788))) x712) x1925))) (=> (not x3208) x3286))) (=> x5824 x3286))))) (=> (and x4682 (and (= x3688 3714247998) (= x4262 68) (= (or (> x128 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x128 64) (= (<= x128 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x4403) (not (< x4262 4)) (= x4262 68) (> x2499 0) (not (< x3688 3714247998)) (= x5489 x2259) (= x2499 (x353 (x4555 x2893))) (= x5608 x3527) (not (> 2835717307 x3688)) (= x128 (x3726 (- x4262 4))) (not (> 1901074598 x3688)) (= x4042 100135927934651036221761091863598459016256155049858187411712977198722809069568))) (and (=> (and (and (= x4904 (= x2259 x5489)) (= x5485 x2259)) (not x4403)) (and (=> (and x4904 (= (= x5608 x3527) x4898)) (and (=> (and (and (= x3954 (x3321 x6023)) (= 1 x2432) (= (x5195 (x4555 x2259) (x821 1) 0) x3365) (= x5842 32) (<= 0 x3954) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3954) (= (x5195 (x4555 x5608) x3365 0) x6023)) x4898) x2541) (=> (not x4898) x5539))) (=> (not x4904) x5539))) (=> x4403 x5539))))))))) x2970))
(assert (x2946 x228))
(assert (= (and x3842 x5740) x5860))
(assert (= (or (and x6096 (not x3157)) (and (not x2623) x5372) (and x2500 x2036)) x4199))
(assert (= x1133 (and x338 x5908)))
(assert (x2946 x6075))
(assert (= x1700 (and x3273 x3087)))
(assert (= (and x6046 x1143) x2620))
(assert (x3761 x6373))
(assert (= (and x420 x1283) x3373))
(assert (= x1262 (x4465 (x4555 x1262))))
(assert (x2946 x2602))
(assert (= (and (not x6391) x4814) x6028))
(assert (x2946 x1868))
(assert (= (and x229 x5112) x3472))
(assert (x3761 x2006))
(assert (x2946 x49))
(assert (= (and (not x3648) x3011) x1858))
(assert (= x4711 (and (not x4248) x345)))
(assert (x2946 x2454))
(assert (= x5079 (and (not x5064) x75)))
(assert (x2946 x4359))
(assert (= (and x5733 x699) x3665))
(assert (x2946 x1593))
(assert (= (=> (and (= 0 x5686) (= x3443 x790)) x506) x6273))
(assert (x3160 x1163 (- x3951 x3021)))
(assert (= (x4465 (x821 122929932)) 122929932))
(assert (x2946 x2368))
(assert (x2946 x1628))
(assert (= (and x1127 x1177) x3244))
(assert (= x3391 (and x6397 x4669)))
(assert (x2946 x4246))
(assert (= (and x2779 x2720) x6229))
(assert (=> (<= x4692 10000) (= (x4555 x4692) (x821 x4692))))
(assert (= x4133 (and x2275 (not x1654))))
(assert (= x4932 (and x666 x4533)))
(assert (x3761 x3174))
(assert (= x1027 (and (not x2923) x6061)))
(assert (x2946 x3921))
(assert (= x5421 (and x2990 x971)))
(assert (=> (<= x4027 10000) (= (x821 x4027) (x4555 x4027))))
(assert (x1752 x5204))
(assert (=> (<= x157 10000) (= (x4555 x157) (x821 x157))))
(assert (= (and x417 x214) x1338))
(assert (x3761 x32))
(assert (= x4458 (and (not x2327) x4197)))
(assert (x2946 x4867))
(assert (= x4364 (=> (= (= 0 x784) x6080) (and (=> x6080 x5703) (=> (and (not x6080) (= x6386 (or (> x2146 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x2146) (= true (<= x2146 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))) (and (=> x6386 x5703) (=> (not x6386) x5299)))))))
(assert (x3160 x3021 x215))
(assert (= (or x1095 x2617) x612))
(assert (= x4853 (and (not x5744) x1378)))
(assert (x2946 x4744))
(assert (= x2386 (and x3838 x4866)))
(assert (x2946 x537))
(assert (x5626 x4249))
(assert (= (=> (and (= x1134 x5984) (= x5792 x6377)) x5477) x3063))
(assert (x2946 x1734))
(assert (= (and (not x1454) x4801) x2951))
(assert (= (=> (and (= x6377 x3489) (= x308 x5984)) x5477) x834))
(assert (x3761 x4412))
(assert (= 649617121 (x4465 (x821 649617121))))
(assert (x2946 x2162))
(assert (x3761 x1593))
(assert (= x2962 (and x210 (not x6253))))
(assert (x2946 x5778))
(assert (x3160 x215 (- x5471 x5062)))
(assert (x2946 x3085))
(assert (= x4657 (and x1691 x1837)))
(assert (= x1496 (x4465 (x4555 x1496))))
(assert (= x3754 (x4465 (x4555 x3754))))
(assert (= x1508 (and x6366 x3674)))
(assert (= x27 (and x2291 (not x1477))))
(assert (x2946 x2549))
(assert (x2946 x656))
(assert (= (or x5668 x4136) x3206))
(assert (= (and x4278 x4720) x4702))
(assert (x2946 x4313))
(assert (= x4319 (or x2523 x877)))
(assert (x2946 x2918))
(assert (=> (>= 10000 x2827) (= (x821 x2827) (x4555 x2827))))
(assert (= x4872 (and x3853 x4920)))
(assert (x2946 x5944))
(assert (x2946 x1667))
(assert (x2946 x4767))
(assert (= x4155 (and (not x2046) x1723)))
(assert (= x1643 (and x5977 x6168)))
(assert (x2946 x5387))
(assert (x2946 x6115))
(assert (= x1378 (and x2360 (not x2105))))
(assert (= (and x1452 x581) x1417))
(assert (x2946 x1494))
(assert (x2946 x1005))
(assert (x2946 x3869))
(assert (x2946 x3631))
(assert (x2946 x4968))
(assert (x2946 x951))
(assert (= x3450 (or x1827 x386)))
(assert (= (and x995 (not x425)) x699))
(assert (= (=> (and (= x4088 x880) (= x4068 0)) x5735) x4332))
(assert (x2946 x1391))
(assert (= (and x2778 x3909) x1804))
(assert (= (and x2880 x3794) x5877))
(assert (x2946 x543))
(assert (=> (>= 10000 x4999) (= (x821 x4999) (x4555 x4999))))
(assert (= (=> (and (= x3881 x1579) (= 0 x4564)) x1800) x1201))
(assert (= x4377 (x4465 (x4555 x4377))))
(assert (= (and x4490 x2709) x929))
(assert (x2946 x4882))
(assert (x2946 x5138))
(assert (=> (<= x1225 10000) (= (x821 x1225) (x4555 x1225))))
(assert (= (and (not x3820) x4965) x3245))
(assert (= x4169 (and x2171 x516)))
(assert (x2946 x2047))
(assert (= x5206 (or x2288 x4348)))
(assert (= (and x93 (not x1476)) x36))
(assert (= x4469 (and x156 x2396)))
(assert (x2946 x4843))
(assert (= (and x1770 x898) x5239))
(assert (x4723 x5471 x215 x3021 x215))
(assert (= (and x4326 x3963) x244))
(assert (x2946 x1829))
(assert (= (and x2395 (not x2555)) x1709))
(assert (x2946 x4186))
(assert (= (and x1015 x5402) x2963))
(assert (x2946 x1117))
(assert (= x4754 (and x1851 x4606)))
(assert (= (=> (and (= 0 x3191) (= x5891 x1098)) x2461) x3663))
(assert (= (and x4193 x833) x3073))
(assert (x2946 x1597))
(assert (x2946 x213))
(assert (= (and (not x5356) x4255) x2275))
(assert (x2946 x912))
(assert (= (and x4291 x6382) x2199))
(assert (x4723 x3021 x215 x5471 x215))
(assert (= x4664 (and x5936 (not x2149))))
(assert (= (=> (and (= x3369 x6159) (= x935 0)) x1706) x3353))
(assert (x2946 x2634))
(assert (x2946 x4457))
(assert (x4723 x1163 x3951 x1346 x215))
(assert (x2946 x5471))
(assert (= x3014 (and x4463 x6195)))
(assert (x2946 x4842))
(assert (x2946 x5695))
(assert (x2491 x3021 x215 x215 x1346))
(assert (x2946 x5318))
(assert (= (and (not x3287) x2370) x1788))
(assert (= x4569 (and x4264 x4098)))
(assert (x2946 x2882))
(assert (= (=> (and (= x4220 x5686) (= x5783 x790)) x4272) x506))
(assert (= (or x2207 x4156) x220))
(assert (x2491 x3951 x1163 x3021 x215))
(assert (x2946 x4141))
(assert (x2946 x3182))
(assert (= x1342 (and x80 x3035)))
(assert (=> (<= x1481 10000) (= (x4555 x1481) (x821 x1481))))
(assert (x2491 x3021 x215 x3951 x1163))
(assert (= x503 (=> (and (and (= 2512374353 x2245) (> x1501 0) (>= 1461501637330902918203684832716283019655932542975 x1439) x3575 (= x3516 0) (not (= 0 x875)) (= x1501 (x353 (x4555 x5489))) (> 1461501637330902918203684832716283019655932542976 x1439) (< x2245 3065339685) (= x289 (= x474 x1439)) (= x3575 (= 0 x2686)) (not (< x2245 2512374353)) (= x2412 x2686) (= x875 (x353 (x4555 x1439))) (= x6242 128) (<= x2922 1461501637330902918203684832716283019655932542975) (<= 0 x1439) (= x5853 x2922)) (and (not (or (and (< x5823 32) (= true (<= x5823 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5823))) (not (= x6349 0)) (= (x4022 128) x5341) (= x5341 x2412))) (and (=> (and (not x289) (= x224 (= x3551 x1439))) (and (=> (and (not x224) (= (= x2893 x1439) x1825)) (and (=> (and (and (not (> 2835717307 x5108)) (= x3024 100135927934651036221761091863598459016256155049858187411712977198722809069568) (= 3714247998 x5108) (< 0 x2806) (= x1915 x2922) (= x2806 (x353 (x4555 x2893))) (= (or (and (= true (<= x5829 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x5829 64)) (> x5829 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x6073) (= 68 x3231) (= x2768 x5489) (= 68 x3231) (not (< x3231 4)) (not (< x5108 3714247998)) (not (< x5108 1901074598)) (= (x3726 (- x3231 4)) x5829)) x1825) (and (=> (and (and (= x121 x2768) (= x2805 (= x2768 x5489))) (not x6073)) (and (=> (not x2805) x6083) (=> (and x2805 (= x3449 (= x1915 x2922))) (and (=> (not x3449) x6083) (=> (and x3449 (and (= x2257 32) (= 1 x726) (= x2318 (x5195 (x4555 x2768) (x821 1) 0)) (<= x2543 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5195 (x4555 x2922) x2318 0) x2268) (<= 0 x2543) (= x2543 (x3321 x2268)))) x3633))))) (=> x6073 x6083))) (=> (and (not x1825) (= x1565 (= x5489 x1439))) (and (=> (and (and (= x725 (or (and (> 64 x2973) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2973) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2973))) (not (< x4299 2512374353)) (= x2922 x4423) (not (= 3329172565 x4299)) (= x2973 (x3726 (- x5734 4))) (= x1225 x5489) (not (= x4299 3088143374)) (= x2382 100135927934651036221761091863598459016256155049858187411712977198722809069568) (not (< x5734 4)) (< 0 x89) (= x89 (x353 (x4555 x5489))) (= 3714247998 x4299) (= x5734 68) (= 68 x5734) (not (= 3065339685 x4299)) (not (< x4299 3065339685))) x1565) (and (=> (and (and (= x5371 (= x5489 x1225)) (= x1679 x1225)) (not x725)) (and (=> (and x5371 (= x4900 (= x2922 x4423))) (and (=> (and x4900 (and (<= 0 x4414) (= (x5195 (x4555 x1225) (x821 2) 0) x6257) (= (x5195 (x4555 x2922) x6257 0) x1917) (<= x4414 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x623 32) (= (x288 x1917) x4414) (= x5244 1))) x4254) (=> (not x4900) x3448))) (=> (not x5371) x3448))) (=> x725 x3448))) (=> (and (= x1993 (= x1439 x5556)) (not x1565)) (and (=> (and (and (= 68 x3946) (> x2516 0) (not (= x5575 2835717307)) (not (= x5575 2514000705)) (not (< x5575 2514000705)) (= 68 x3946) (not (> 1117154408 x5575)) (not (= 2757214935 x5575)) (= x5489 x3984) (= x4356 (x3726 (- x3946 4))) (not (> 4 x3946)) (= x6331 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4356) (and (= true (<= x4356 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x4356 64)))) (= x2516 (x353 (x4555 x5556))) (= x5575 3714247998) (= x3702 x2922) (= x2343 100135927934651036221761091863598459016256155049858187411712977198722809069568)) x1993) (and (=> x6331 x3353) (=> (and (and (= x3984 x5032) (= (= x5489 x3984) x3515)) (not x6331)) (and (=> (not x3515) x3353) (=> (and (= (= x2922 x3702) x3352) x3515) (and (=> (and x3352 (and (= x409 (x5195 (x4555 x3984) (x821 1) 0)) (= (x3799 x602) x6297) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x6297) (= x935 1) (= (x5195 (x4555 x2922) x409 0) x602) (= 32 x3369) (<= 0 x6297))) x1706) (=> (not x3352) x3353))))))) (=> (and (= x6256 (= x3135 x1439)) (not x1993)) (and (=> (and (not x6256) (= x5961 (= x1439 x1262))) (and (=> (and (not x5961) (= x5304 (= x1439 x6182))) (and (=> (and (and (> x2094 0) (not (= 2514000705 x5254)) (not (< x1325 4)) (not (< x5254 826074471)) (= x2922 x5849) (= x2365 (x3726 (- x1325 4))) (= x4121 100135927934651036221761091863598459016256155049858187411712977198722809069568) (= (or (> x2365 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2365 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x2365))) x2036) (= x5489 x2637) (not (= x5254 2835717307)) (= x1325 68) (not (= 826074471 x5254)) (not (= x5254 1889567281)) (= x5254 3714247998) (= 68 x1325) (= (x353 (x4555 x6182)) x2094)) x5304) (and (=> (and (not x2036) (and (= x512 x2637) (= x2623 (= x5489 x2637)))) (and (=> (not x2623) x879) (=> (and x2623 (= x3157 (= x5849 x2922))) (and (=> (not x3157) x879) (=> (and (and (= x5344 (x5195 (x4555 x2922) x4397 0)) (= x4185 (x421 x5344)) (= 1 x4455) (= (x5195 (x4555 x2637) (x821 2) 0) x4397) (<= 0 x4185) (= 32 x3996) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4185)) x3157) x1911))))) (=> x2036 x879))) (=> (and (not x5304) (= x4573 (= x1439 x1411))) (and (=> (and (= (= x4027 x1439) x1124) (not x4573)) (and (=> (and (and (= x5281 (= x1439 x3993)) (and x5281 (and (= x3654 x2922) (not (= x6394 157198259)) (= x4545 (x353 (x4555 x3993))) (not (= 2835717307 x6394)) (= x5489 x4412) (= 68 x3298) (< 0 x4545) (= x3298 68) (not (< x3298 4)) (= x5077 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5717) (and (< x5717 64) (= true (<= x5717 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= 3714247998 x6394) (not (= x6394 599290589)) (= x5008 100135927934651036221761091863598459016256155049858187411712977198722809069568) (= (x3726 (- x3298 4)) x5717) (not (= 1889567281 x6394)) (not (= 404098525 x6394))))) (not x1124)) (and (=> x5077 x3367) (=> (and (not x5077) (and (= (= x5489 x4412) x5013) (= x6293 x4412))) (and (=> (and (= (= x2922 x3654) x2465) x5013) (and (=> (and (and (<= 0 x5211) (= x5211 (x1936 x5011)) (= 32 x3490) (= x2661 1) (= x5011 (x5195 (x4555 x2922) x3629 0)) (<= x5211 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3629 (x5195 (x4555 x4412) (x821 2) 0))) x2465) x1881) (=> (not x2465) x3367))) (=> (not x5013) x3367))))) (=> (and x1124 (and (> x1449 0) (not (= 2514000705 x1459)) (not (= 826074471 x1459)) (= x1459 3714247998) (not (> 826074471 x1459)) (= x1147 100135927934651036221761091863598459016256155049858187411712977198722809069568) (= 68 x6345) (= 68 x6345) (not (< x6345 4)) (= x2940 (x3726 (- x6345 4))) (not (= x1459 1889567281)) (= x1646 x5489) (= x6230 x2922) (= x4540 (or (> x2940 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2940 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2940 64)))) (= x1449 (x353 (x4555 x4027))) (not (= 2835717307 x1459)))) (and (=> (and (not x4540) (and (= x165 x1646) (= (= x5489 x1646) x5738))) (and (=> (and (= (= x6230 x2922) x5888) x5738) (and (=> (not x5888) x1063) (=> (and x5888 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x175) (= x1630 (x5195 (x4555 x1646) (x821 2) 0)) (= x175 (x1471 x5212)) (= x5212 (x5195 (x4555 x2922) x1630 0)) (= 32 x2789) (>= x175 0) (= 1 x3679))) x1549))) (=> (not x5738) x1063))) (=> x4540 x1063))))) (=> (and x4573 (and (= x660 x2922) (not (= 1889567281 x3319)) (= 68 x2127) (not (= x3319 826074471)) (= x3319 3714247998) (not (= x3319 2514000705)) (= (x353 (x4555 x1411)) x3237) (= x5489 x4600) (= 68 x2127) (not (= x3319 2835717307)) (= (x3726 (- x2127 4)) x6017) (not (> 4 x2127)) (= x6272 (or (and (< x6017 64) (= (<= x6017 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x6017 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x2368) (not (< x3319 826074471)) (> x3237 0))) (and (=> x6272 x1611) (=> (and (not x6272) (and (= x1720 x4600) (= (= x4600 x5489) x5339))) (and (=> (not x5339) x1611) (=> (and x5339 (= (= x660 x2922) x4678)) (and (=> (not x4678) x1611) (=> (and x4678 (and (= 32 x3577) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x606) (<= 0 x606) (= x4575 (x5195 (x4555 x2922) x6401 0)) (= x5178 1) (= x606 (x1446 x4575)) (= x6401 (x5195 (x4555 x4600) (x821 2) 0)))) x3807))))))))))) (=> (and x5961 (and (not (= x4756 826074471)) (not (= 2835717307 x4756)) (= (x353 (x4555 x1262)) x1996) (not (= 1889567281 x4756)) (not (= x4756 3504541104)) (= x4316 (x3726 (- x2493 4))) (not (< x2493 4)) (= x2922 x3277) (= 3714247998 x4756) (= 68 x2493) (not (= x4756 2514000705)) (= 68 x2493) (= x1978 100135927934651036221761091863598459016256155049858187411712977198722809069568) (not (> 826074471 x4756)) (< 0 x1996) (= (or (and (< x4316 64) (= true (<= x4316 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4316)) x4572) (= x5489 x1613))) (and (=> x4572 x5058) (=> (and (and (= x4596 (= x1613 x5489)) (= x2786 x1613)) (not x4572)) (and (=> (not x4596) x5058) (=> (and x4596 (= x5968 (= x3277 x2922))) (and (=> (not x5968) x5058) (=> (and x5968 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1290) (>= x1290 0) (= x3752 (x5195 (x4555 x1613) (x821 2) 0)) (= 1 x732) (= 32 x5283) (= (x332 x6092) x1290) (= x6092 (x5195 (x4555 x2922) x3752 0)))) x2028))))))))) (=> (and (and (= (or (> x5637 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5637) true) (> 64 x5637))) x513) (not (= 826074471 x3229)) (not (> 4 x1138)) (not (= x3229 1889567281)) (= 68 x1138) (= 100135927934651036221761091863598459016256155049858187411712977198722809069568 x6214) (= x3229 3714247998) (= (x353 (x4555 x3135)) x404) (not (= x3229 2514000705)) (= x1763 x5489) (not (= x3229 2835717307)) (< 0 x404) (= 68 x1138) (not (< x3229 826074471)) (= x5637 (x3726 (- x1138 4))) (= x2922 x397)) x6256) (and (=> x513 x1047) (=> (and (not x513) (and (= x730 x1763) (= (= x5489 x1763) x1899))) (and (=> (not x1899) x1047) (=> (and (= x5991 (= x2922 x397)) x1899) (and (=> (and (and (<= x3870 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x4048) (= x246 (x5195 (x4555 x2922) x5612 0)) (<= 0 x3870) (= x3870 (x2405 x246)) (= (x5195 (x4555 x1763) (x821 2) 0) x5612) (= 32 x4457)) x5991) x1659) (=> (not x5991) x1047))))))))))))))) (=> (and (and (= (x353 (x4555 x3551)) x5450) (not (< x6211 4)) (= x340 (x3726 (- x6211 4))) (not (> 2127478272 x5145)) (= x4559 (or (and (= true (<= x340 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x340)) (> x340 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2922 x6330) (= x5145 3714247998) (= 68 x6211) (not (= x5145 3171951664)) (not (= x5145 3642135687)) (not (< x5145 2987494029)) (= x3655 100135927934651036221761091863598459016256155049858187411712977198722809069568) (not (= 3590908516 x5145)) (= x5489 x6033) (not (= 2987494029 x5145)) (= x6211 68) (not (= x5145 3573918927)) (> x5450 0) (> 3824031246 x5145)) x224) (and (=> (and (not x4559) (and (= x6033 x1840) (= (= x6033 x5489) x5948))) (and (=> (not x5948) x2995) (=> (and (= x5289 (= x2922 x6330)) x5948) (and (=> (not x5289) x2995) (=> (and (and (= x3973 (x5195 (x4555 x6033) (x821 10) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5044) (= x6027 32) (= x2837 (x5195 (x4555 x2922) x3973 0)) (= (x2044 x2837) x5044) (<= 0 x5044) (= 1 x1297)) x5289) x2726))))) (=> x4559 x2995))))) (=> (and x289 (and (> x1397 0) (= x903 x5489) (= x3354 68) (= (x3726 (- x3354 4)) x3477) (= x4327 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3477) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3477) true) (> 64 x3477)))) (not (> 1889567281 x543)) (= x1112 100135927934651036221761091863598459016256155049858187411712977198722809069568) (not (> 3674237557 x543)) (not (> 4 x3354)) (= x1397 (x353 (x4555 x474))) (= x543 3714247998) (= x1690 x2922) (= 68 x3354) (not (= x543 3674237557)) (> 3835264453 x543))) (and (=> x4327 x4466) (=> (and (not x4327) (and (= x3411 (= x903 x5489)) (= x903 x4840))) (and (=> (not x3411) x4466) (=> (and x3411 (= (= x2922 x1690) x3002)) (and (=> (and x3002 (and (= (x5921 x4150) x2307) (<= 0 x2307) (= (x5195 (x4555 x2922) x1543 0) x4150) (<= x2307 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x6422) (= x1543 (x5195 (x4555 x903) (x821 5) 0)) (= 32 x6378))) x1040) (=> (not x3002) x4466)))))))))))
(assert (= x5383 (=> (and (= x637 x3408) (= x4090 x6147)) x2182)))
(assert (x3761 x3590))
(assert (x2946 x2118))
(assert (x2946 x4392))
(assert (= x5127 (and x73 x4036)))
(assert (x2946 x2442))
(assert (x2491 x1163 x3951 x5062 x215))
(assert (= (and x3475 (not x6321)) x5168))
(assert (= x817 (or x528 x343)))
(assert (x2946 x307))
(assert (= x1209 (and x3414 (not x3080))))
(assert (= x468 (and x3441 (not x1604))))
(assert (x2946 x4639))
(assert (x2946 x6370))
(assert (x2946 x1774))
(assert (x2946 x4938))
(assert (= x6069 (=> (and (= 0 x3408) (= x5218 x6147)) x5383)))
(assert (= x4370 (and (not x4305) x23)))
(assert (x2946 x1459))
(assert (= (and x4 x1754) x514))
(assert (= (x821 3835264453) (x4555 3835264453)))
(assert (= x4986 (=> (and (= x905 x5823) (= x6349 x2477)) x503)))
(assert (= x591 (and x2402 x2169)))
(assert (x2946 x1692))
(assert (= (and x4998 x5157) x5490))
(assert (x2946 x3219))
(assert (x2491 x215 x5471 x1346 x215))
(assert (= (or (and (not x5948) x5914) (and x4288 (not x5289)) (and x2090 x4559)) x5185))
(assert (= (and x2656 (not x5911)) x5907))
(assert (x2946 x6011))
(assert (x2946 x5680))
(assert (x2946 x3590))
(assert (x2946 x4580))
(assert (= (=> (and (= x3243 0) (= x6323 x49)) x3147) x546))
(assert (x4723 x215 x3021 x3951 x1163))
(assert (x2468 x3074))
(assert (x2946 x1012))
(assert (= x3135 (x4465 (x4555 x3135))))
(assert (= x4954 (and x6285 x1942)))
(assert (= x3730 (and x2211 (not x2908))))
(assert (=> (<= x32 10000) (= (x821 x32) (x4555 x32))))
(assert (= x449 (or x3664 x807)))
(assert (= (=> (and (= x5823 x853) (= x2784 x6349)) x503) x2979))
(assert (=> (<= x4782 10000) (= (x4555 x4782) (x821 x4782))))
(assert (= (and (not x6276) x278) x5933))
(assert (x2946 x713))
(assert (= (=> (and (= x6041 0) (= x5362 x6115)) x3395) x2220))
(assert (x3761 x3858))
(assert (= x2983 (and x3712 x6386)))
(assert (= (and x2963 x2833) x3188))
(assert (x2946 x5739))
(assert (x2946 x2492))
(assert (= x5308 (and x4091 x4678)))
(assert (x2946 x1548))
(assert (x2946 x4863))
(assert (x2946 x6027))
(assert (x2946 x2146))
(assert (x2946 x5794))
(assert (x2946 x2969))
(assert (= (or x5049 x5503) x1086))
(assert (= 3065339685 (x4465 (x821 3065339685))))
(assert (x2946 x3123))
(assert (x2946 x2802))
(assert (= x178 (and x2200 x11)))
(assert (= x6283 (and x290 (not x367))))
(assert (x5626 x1651))
(assert (x5626 x2965))
(assert (= (or x189 x3904) x2323))
(assert (x2946 x885))
(assert (= x73 (and x3665 (not x3480))))
(assert (= (=> (and (= x3489 x6115) (= x308 0)) x834) x1557))
(assert (x2946 x5870))
(assert (x2468 x464))
(assert (x2946 x3369))
(assert (= (and x2287 x1458) x3061))
(assert (= (and x5057 x10) x4336))
(assert (x2946 x4290))
(assert (= x5392 (=> (and (= 0 x654) (= x2178 x880)) x1984)))
(assert (= x6340 (and x5170 x2830)))
(assert (x2946 x606))
(assert (= (and x1421 (not x4626)) x4200))
(assert (x2946 x5231))
(assert (= (and x940 x2254) x5966))
(assert (x1795 x3795))
(assert (x2946 x3737))
(assert (x2946 x3624))
(assert (x2946 x4129))
(assert (x2946 x6294))
(assert (= x5799 (or x5860 x1490)))
(assert (x2946 x3164))
(assert (= (and x5253 (not x1636)) x2929))
(assert (x2946 x937))
(assert (= (or x1799 x3828) x1357))
(assert (x2946 x167))
(assert (x2946 x5092))
(assert (x2946 x4052))
(assert (= x2765 (and (not x658) x774)))
(assert (= (=> (and (= x149 x4564) (= x3881 x831)) x3625) x1800))
(assert (= (and x1349 x5385) x429))
(assert (=> (<= x6011 10000) (= (x4555 x6011) (x821 x6011))))
(assert (x2946 x2023))
(assert (x2946 x4719))
(assert (= (x821 1117154408) (x4555 1117154408)))
(assert (= (and x6037 x98) x4667))
(assert (= (and (not x5983) x5176) x3562))
(assert (x2946 x283))
(assert (x2946 x5628))
(assert (x5626 x1004))
(assert (= (and x861 x1871) x424))
(assert (x3761 x5855))
(assert (= (and x2585 (not x1202)) x788))
(assert (= x3644 (or x3774 x4746 x4500 x588 x6372 x4547 x2739 x3913 x2888 x1438 x661 x1403 x4629 x1025 x1843 x1338 x4707)))
(assert (= (and (not x1993) x703) x3000))
(assert (x2946 x2026))
(assert (= x2587 (and x1804 (not x871))))
(assert (= (=> (and (and (<= x86 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4941 x3173 10000) x912) (= (< x86 x912) x3559) (<= 0 x86)) (or (and (= x693 x912) (not x3559)) (and x3559 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x86) (= x693 x86) (<= 0 x86))))) x1742) x1615))
(assert (= x2551 (and x292 (not x4173))))
(assert (= x879 (=> (and (= 0 x4455) (= x6159 x3996)) x1911)))
(assert (x2946 x4143))
(assert (x3761 x1439))
(assert (x4723 x215 x5471 x2533 x215))
(assert (x2946 x2296))
(assert (= (and x859 (not x6427)) x2345))
(assert (= (or x1662 (and x1701 (not x1045))) x4780))
(assert (= (and (not x2746) x1370) x2941))
(assert (x2946 x3635))
(assert (x2946 x4546))
(assert (x3146 (- x5471 x3951)))
(assert (x3761 x3167))
(assert (x2946 x434))
(assert (x2946 x906))
(assert (= 3835264453 (x4465 (x821 3835264453))))
(assert (x2946 x1819))
(assert (x1752 x5760))
(assert (x4723 x1346 x215 x3021 x215))
(assert (x2946 x1048))
(assert (= x5033 (=> (and (= x3503 x1579) (= 0 x2868)) x6016)))
(assert (= x6371 (and (not x4378) x5758)))
(assert (x2946 x5155))
(assert (= (and (not x4772) x1344) x5439))
(assert (= x840 (and (not x5995) x2620)))
(assert (=> (>= 10000 x1638) (= (x4555 x1638) (x821 x1638))))
(assert (x2946 x3592))
(assert (= x5763 (=> (and (= x910 x3443) (= 0 x5034)) x6409)))
(assert (=> (>= 10000 x534) (= (x821 x534) (x4555 x534))))
(assert (= x2211 (and x2057 x3977)))
(assert (x2946 x2037))
(assert (x3146 (- x1163 x5062)))
(assert (= x4565 (and x1304 x1644)))
(assert (x3146 (- x1163 x215)))
(assert (= x6300 (and (not x6351) x1441)))
(assert (= x5031 (and (not x6256) x3000)))
(assert (x3146 (- x5471 x1346)))
(assert (= (and x2124 (not x6193)) x2907))
(assert (x2946 x3135))
(assert (= (=> (and (= 0 x3780) (= x188 x5218)) x4653) x1154))
(assert (= (or x4896 x5124) x67))
(assert (x2946 x4422))
(assert (= x370 (and x927 x243)))
(assert (x2946 x3754))
(assert (x2946 x1151))
(assert (x2946 x655))
(assert (= x4788 (and (not x1887) x5311)))
(assert (=> (<= x3652 10000) (= (x821 x3652) (x4555 x3652))))
(assert (= (or x5848 x4912) x2925))
(assert (= x889 (and x1058 x1337)))
(assert (= x3727 (x4465 (x4555 x3727))))
(assert (= x392 (and (not x3013) x1538)))
(assert (= x2489 (x4465 (x4555 x2489))))
(assert (= x2079 (and x2252 x3401)))
(assert (x2491 x3951 x1163 x215 x2533))
(assert (= x3785 (and x3084 (not x1336))))
(assert (x2946 x314))
(assert (x2946 x4322))
(assert (x3160 x5471 (- x215 x5062)))
(assert (=> (<= x47 10000) (= (x821 x47) (x4555 x47))))
(assert (= (and x5293 (not x934)) x2985))
(assert (= x3678 (or x5422 x2386 x1335 x2496 x1563 x6402)))
(assert (= x4287 (x4465 (x4555 x4287))))
(assert (x2491 x5471 x215 x215 x1346))
(assert (x3160 x215 (- x2533 x3021)))
(assert (= x4097 (or x106 x5920 x2038 x4883 x5940 x3093)))
(assert (= (and x4908 (not x3704)) x3889))
(assert (= x1836 (and x5791 x5530)))
(assert (x2946 x6222))
(assert (= (and (not x5348) x4081) x2052))
(assert (x2946 x1997))
(assert (x2946 x1142))
(assert (= (x4465 (x4555 x6380)) x6380))
(assert (x3761 x4600))
(assert (= x5269 (=> (and (= x5891 x1596) (= x5429 0)) x5316)))
(assert (x2946 x1246))
(assert (= x3262 (x4465 (x4555 x3262))))
(assert (x2946 x3834))
(assert (x2946 x5736))
(assert (and (x2072 x4815 256) (x3935 x4815 256) (=> (> 256 0) (= (+ (* (x4941 x4815 256) 256) (x432 x4815 256)) x4815)) (x4154 x4815 256)))
(assert (x3146 (- x3021 x5062)))
(assert (= (x4465 (x4555 x3431)) x3431))
(assert (= x735 (and (not x2144) x628)))
(assert (x2946 x2022))
(assert (x2946 x5930))
(assert (= (and x4604 x1928) x2200))
(assert (= x3332 (=> (and (= x6349 x1571) (= x5823 x374)) x503)))
(assert (= x1252 (and (not x4753) x306)))
(assert (= (or x639 x3112) x5959))
(assert (x3761 x3727))
(assert (= (and x1804 x871) x1947))
(assert (= (and x4910 x3918) x1811))
(assert (x2946 x5062))
(assert (x2946 x5792))
(assert (x2946 x5829))
(assert (= (and x4923 x1518) x5164))
(assert (x2946 x766))
(assert (x2946 x4117))
(assert (= x344 (=> (= x3705 (< x5463 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and x3705 (= x222 (> x2533 x5463))) (and (=> x222 x5245) (=> (and (not x222) (= (< x5463 x2533) x6249)) (and (=> x6249 x5245) (=> (and (and (= (x5195 (x4555 x4666) x4406 0) x5466) (= (x3726 (- x5463 x2533)) x2857) (= x4406 (x5195 (x4555 x3869) (x821 5) 0))) (not x6249)) x5764))))) (=> (not x3705) x5764)))))
(assert (= (and x6 (not x1753)) x4214))
(assert (x2946 x5542))
(assert (x2946 x3258))
(assert (= x690 (and x4705 x1893)))
(assert (= x1028 (x4465 (x4555 x1028))))
(assert (= (=> (= true x1156) (and (=> x1156 x5703) (=> (and (= x3613 (or (and (= true (<= x5053 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x5053)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5053))) (not x1156)) (and (=> x3613 x5703) (=> (not x3613) x551))))) x1919))
(assert (= x5276 (and x3936 (not x5581))))
(assert (= x6043 (and x2524 x1384)))
(assert (= (or (and (not x1942) x6285) (and (not x5500) x4954) (and x418 x5251)) x3152))
(assert (= x5836 (or (and (not x5365) x1074) (and x2351 x2341) (and x2252 (not x3401)))))
(assert (= x4798 (and x1935 (not x6278))))
(assert (x2946 x5854))
(assert (= (x4465 (x4555 x262)) x262))
(assert (= x6036 (=> (and (= x2352 x3956) (= x2917 x6233)) x5219)))
(assert (x2946 x7))
(assert (= x2745 (=> (and (= x3735 0) (= x880 x2251)) x1275)))
(assert (= (or x285 x178) x357))
(assert (x2946 x2361))
(assert (x2946 x6400))
(assert (= (and x4963 x2286) x1181))
(assert (x2946 x2453))
(assert (= (x4465 (x4555 x1225)) x1225))
(assert (= (and (not x5540) x5827) x3818))
(assert (x2946 x2682))
(assert (x2946 x1974))
(assert (x2946 x2706))
(assert (= (and x2712 x1918) x6094))
(assert (x4723 x2533 x215 x3951 x1163))
(assert (x2946 x5104))
(assert (x2946 x1965))
(assert (x2946 x175))
(assert (= (=> (and (= x947 x3683) (= x5538 x579)) x5152) x2820))
(assert (x2946 x6316))
(assert (x2946 x3309))
(assert (= x1589 (and (not x5146) x5045)))
(assert (= (and (not x862) x2295) x3059))
(assert (x2946 x2099))
(assert (x5626 x466))
(assert (= x3858 (x4465 (x4555 x3858))))
(assert (x2946 x4899))
(assert (= x1340 (and x3144 x3843)))
(assert (= x1451 (and (not x166) x4846)))
(assert (=> (>= 10000 x3639) (= (x821 x3639) (x4555 x3639))))
(assert (x2491 x215 x1346 x215 x5471))
(assert (= (x4465 (x4555 x1997)) x1997))
(assert (x2946 x5303))
(assert (x2946 x2744))
(assert (x2946 x1060))
(assert (= x6246 (and x1195 (not x2690))))
(assert (x2946 x4056))
(assert (x2946 x6020))
(assert (= x3869 (x4465 (x4555 x3869))))
(assert (= x3212 (and x4135 (not x2753))))
(assert (x2491 x215 x5471 x215 x3021))
(assert (= x5229 (or (and (not x4622) x3275) (and x319 x1139))))
(assert (= (or x4970 x2920) x6173))
(assert (= (and x5261 x2285) x3788))
(assert (= x3460 (and x4195 x2525)))
(assert (= x2701 (and (not x1034) x5980)))
(assert (= (and x3226 (not x74)) x3281))
(assert (x3761 x84))
(assert (x2946 x1394))
(assert (= x22 (and x3892 x2362)))
(assert (x3761 x5930))
(assert (=> (>= 10000 x5397) (= (x821 x5397) (x4555 x5397))))
(assert (x2946 x176))
(assert (x2946 x6345))
(assert (= (and x5720 (not x5015)) x2213))
(assert (= x3446 (and x4556 x205)))
(assert (x2946 x1182))
(assert (= x2288 (and x212 x2123)))
(assert (x2946 x159))
(assert (x2946 x907))
(assert (= (and x370 (not x237)) x4964))
(assert (x1752 x3246))
(assert (x2946 x2883))
(assert (x2946 x5584))
(assert (= (x4465 (x821 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (and x4479 (not x4696)) x941))
(assert (x2946 x3715))
(assert (x2946 x1411))
(assert (x3812 x103))
(assert (and (x2072 x983 1461501637330902918203684832716283019655932542976) (x3935 x983 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x983 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x983 1461501637330902918203684832716283019655932542976)) x983)) (x4154 x983 1461501637330902918203684832716283019655932542976)))
(assert (x2946 x3202))
(assert (x2946 x5642))
(assert (= x5200 (and x6277 (not x4543))))
(assert (= x4202 (=> (and (= x1434 x2352) (= x6233 x3630)) x5219)))
(assert (= (and x5472 x3089) x3922))
(assert (x2946 x2577))
(assert (=> (<= x5816 10000) (= (x821 x5816) (x4555 x5816))))
(assert (x2946 x5532))
(assert (x2946 x6329))
(assert (x2946 x2909))
(assert (x2946 x5864))
(assert (x2946 x5715))
(assert (and (x2072 x2965 256) (x3935 x2965 256) (=> (> 256 0) (= (+ (* (x4941 x2965 256) 256) (x432 x2965 256)) x2965)) (x4154 x2965 256)))
(assert (x2946 x5175))
(assert (x2946 x572))
(assert (= (=> (and (= x4220 x4616) (= x5783 x2711)) x4272) x132))
(assert (x4723 x5471 x215 x5062 x215))
(assert (x2946 x324))
(assert (= x1657 (and (not x1743) x5966)))
(assert (= x534 (x4465 (x4555 x534))))
(assert (x2946 x1958))
(assert (= (and x3657 x1821) x4807))
(assert (= (=> (and (= 0 x6007) (= x270 x6115)) x4123) x2999))
(assert (= x1691 (and x6371 x2648)))
(assert (x2946 x722))
(assert (x2946 x6380))
(assert (=> (>= 10000 x5549) (= (x4555 x5549) (x821 x5549))))
(assert (x2946 x1567))
(assert (x2946 x5193))
(assert (x2946 x165))
(assert (= x5779 (or (and x2733 x2122) (and (not x1891) x1590))))
(assert (x2491 x5471 x215 x3951 x1163))
(assert (x2946 x6389))
(assert (x2946 x3200))
(assert (= (and x2986 (not x5114)) x4206))
(assert (= (=> (and (= x6106 x1916) (= 0 x4665)) x4241) x3422))
(assert (= (x4465 (x821 97057840296441966410330255902201960138893160036366920885407767449525406400512)) 97057840296441966410330255902201960138893160036366920885407767449525406400512))
(assert (= x791 (and x1592 (not x6344))))
(assert (x3761 x1763))
(assert (= x4379 (or x3260 x419)))
(assert (= x4360 (=> (and (= x1060 x1921) (= x3825 x6239)) x2234)))
(assert (x2946 x2143))
(assert (x2946 x4292))
(assert (x2491 x215 x3021 x5471 x215))
(assert (x2946 x1773))
(assert (x2946 x4419))
(assert (= (and (not x6310) x5005) x1168))
(assert (x2946 x2775))
(assert (x2946 x5032))
(assert (= (and x928 x4848) x1438))
(assert (x2946 x938))
(assert (x2946 x2293))
(assert (= (and x1755 x279) x4705))
(assert (and (x2072 x4619 1461501637330902918203684832716283019655932542976) (x3935 x4619 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x4619 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x4619 1461501637330902918203684832716283019655932542976)) x4619)) (x4154 x4619 1461501637330902918203684832716283019655932542976)))
(assert (x3761 x1613))
(assert (= (and x2684 x3149) x5920))
(assert (= x3434 (and x1594 x5634)))
(assert (= x1563 (and (not x1178) x1855)))
(assert (=> (<= x2825 10000) (= (x821 x2825) (x4555 x2825))))
(assert (x2946 x5640))
(assert (x2946 x5257))
(assert (x2946 x6348))
(assert (x3761 x2922))
(assert (x5626 x5680))
(assert (= x286 (=> (and (= x710 0) (= x6106 x226)) x5985)))
(assert (= (or x1377 x5490 x1417 x6189 x53 (and x239 x4694) x5907 (and x33 x1680) x1342 x6379 x2416 x199 (and x585 (not x2219)) (and x5253 x1636) x5570 x3015 (and (not x1131) x1848)) x2582))
(assert (x2946 x2740))
(assert (x2946 x3277))
(assert (= (=> (and (= x5538 0) (= x3683 x880)) x2820) x2565))
(assert (= x3285 (and x2844 x2900)))
(assert (= x3610 (and x1364 x4955)))
(assert (= (or (and x2300 (not x712)) (and x2154 x5824) (and x4951 (not x3208))) x181))
(assert (x2946 x1126))
(assert (x3761 x4382))
(assert (= (and x5281 x140) x1057))
(assert (= (and x780 x770) x5601))
(assert (= x1162 (and (not x2791) x4362)))
(assert (= x903 (x4465 (x4555 x903))))
(assert (x4723 x215 x1346 x3951 x1163))
(assert (= (and x306 x4753) x5163))
(assert (x2946 x1731))
(assert (= (=> (and (= x3138 x1921) (= x6239 x4861)) x2234) x4829))
(assert (x2946 x2976))
(assert (x2491 x215 x1346 x3021 x215))
(assert (= (or x1643 (and (not x5977) x6168)) x5580))
(assert (= x1056 (and x2765 (not x1208))))
(assert (x2946 x1581))
(assert (= x2452 (and x3045 x5805)))
(assert (x2946 x795))
(assert (x2946 x748))
(assert (= (and (not x3510) x5886) x3140))
(assert (= x4015 (and x5248 x1536)))
(assert (= x1403 (and (not x6250) x3796)))
(assert (x2946 x6162))
(assert (= 1117154408 (x4465 (x821 1117154408))))
(assert (x2946 x474))
(assert (= (and x459 (not x4327)) x5068))
(assert (= (and x4153 x2955) x1261))
(assert (= (and (not x4920) x3853) x2137))
(assert (x2946 x5846))
(assert (x2946 x5544))
(assert (= x3286 (=> (and (= x5891 x4874) (= x2377 0)) x1925)))
(assert (x2946 x3709))
(assert (= (x821 2681229421) (x4555 2681229421)))
(assert (= x190 (and (not x5407) x2997)))
(assert (= (=> (and (and (<= x86 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x86) (= x5537 (x4941 x1558 10000)) (= x2791 (< x86 x5537))) (or (and x2791 (and (= x63 x86) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x86) (<= 0 x86))) (and (= x63 x5537) (not x2791)))) x380) x2505))
(assert (= x613 (and x1789 x1363)))
(assert (x2946 x579))
(assert (x2946 x2))
(assert (= x3167 (x4465 (x4555 x3167))))
(assert (x2946 x1971))
(assert (x2946 x4893))
(assert (x2946 x3557))
(assert (= (x4465 (x4555 x2637)) x2637))
(assert (x2946 x3040))
(assert (= (and x3542 x2003) x793))
(assert (= (x4555 4238056678808933066457772256406219440718756300954938350892797929791311314944) (x821 4238056678808933066457772256406219440718756300954938350892797929791311314944)))
(assert (= (=> (and (= x3735 x579) (= x947 x2251)) x5152) x1275))
(assert (x2946 x168))
(assert (= (x4555 3674237557) (x821 3674237557)))
(assert (= (and x2068 x5689) x4976))
(assert (x2946 x4552))
(assert (x2468 x655))
(assert (= (and x6251 x921) x3934))
(assert (x2946 x5942))
(assert (x2946 x4337))
(assert (x3160 x2533 x215))
(assert (x2946 x1762))
(assert (x2946 x582))
(assert (= x3166 (and x370 x237)))
(assert (= (and x3419 x5119) x1594))
(assert (x2946 x6207))
(assert (x2946 x2179))
(assert (x2946 x969))
(assert (x2946 x6062))
(assert (= x774 (and x2719 (not x1379))))
(assert (=> (>= 10000 x3869) (= (x821 x3869) (x4555 x3869))))
(assert (= x3902 (and x4169 x3862)))
(assert (= (and x6277 x4543) x628))
(assert (= x986 (and x3049 x3391)))
(assert (= x747 (or x4620 x3416)))
(assert (= (and x2185 (not x3396)) x2810))
(assert (x2946 x111))
(assert (= x1116 (and x5293 x934)))
(assert (x2946 x4494))
(assert (= (x4555 1889567281) (x821 1889567281)))
(assert (x2946 x6078))
(assert (x2946 x267))
(assert (= x3890 (x4465 (x4555 x3890))))
(assert (x2491 x215 x1346 x3951 x1163))
(assert (= (and (not x2627) x2515) x2301))
(assert (= (and x5089 x4787) x6306))
(assert (x2491 x5062 x215 x215 x5471))
(assert (x2946 x3033))
(assert (x2946 x2659))
(assert (x3160 x3021 (- x215 x1346)))
(assert (x2946 x2630))
(assert (x1752 x4422))
(assert (x2946 x30))
(assert (x2946 x3451))
(assert (x2946 x1921))
(assert (x2946 x6333))
(assert (= (and x5579 x6240) x4794))
(assert (= x701 (or x4199 x4317)))
(assert (x2946 x5108))
(assert (and (x2072 x5760 1461501637330902918203684832716283019655932542976) (x3935 x5760 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x4941 x5760 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x432 x5760 1461501637330902918203684832716283019655932542976)) x5760)) (x4154 x5760 1461501637330902918203684832716283019655932542976)))
(assert (= x4177 (and x5101 (not x1894))))
(assert (= x1977 (or x919 x3779 x4703 x5488 x4338 x4286 x810 x4256 x3453)))
(assert (x2946 x5608))
(assert (x2946 x689))
(assert (x3761 x69))
(assert (= (and x6276 x278) x2425))
(assert (x2946 x2189))
(assert (x2946 x5120))
(assert (x2946 x1068))
(assert (= x5970 (and x2805 x1399)))
(assert (x2946 x847))
(assert (= (and x468 x5604) x5441))
(assert (x2946 x2868))
(assert (= x5937 (and x5384 x3290)))
(assert (x2946 x3992))
(assert (x2946 x5469))
(assert (x2946 x6428))
(assert (= (x4555 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x821 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x3761 x3993))
(assert (= (or x3743 x2722) x4153))
(assert (= x4775 (and x4282 x4238)))
(assert (x2946 x3679))
(assert (=> (<= x3993 10000) (= (x821 x3993) (x4555 x3993))))
(assert (x2946 x3107))
(assert (x2946 x5489))
(assert (= x5685 (and x3119 (not x4636))))
(assert (x2946 x5286))
(assert (x2946 x3533))
(assert (= (or x5790 x4776 x5813 x4071 x5088 x6150) x5433))
(assert (= (and (not x5327) x155) x3832))
(assert (x2946 x843))
(assert (x2946 x5548))
(assert (= (and x2850 (not x957)) x1320))
(assert (= x2140 (and (not x3608) x4484)))
(assert (= x5837 (x4465 (x4555 x5837))))
(assert (x2946 x1481))
(assert (x1752 x2022))
(assert (x2946 x4176))
(assert (x2946 x3346))
(assert (= x5413 (and x2611 (not x289))))
(assert (= x2325 (and x3852 x955)))
(assert (x2946 x4006))
(assert (x3761 x474))
(assert (x2946 x4339))
(assert (= 3504541104 (x4465 (x821 3504541104))))
(assert (= x1835 (and x3239 (not x1775))))
(assert (x3160 x215 (- x2533 x1163)))
(assert (= (and (not x6414) x5655) x3452))
(assert (= (and x6405 x5950) x1307))
(assert (x2946 x5109))
(assert (x3761 x2359))
(assert (x3160 x3951 x1163))
(assert (x2946 x5075))
(assert (x2946 x6085))
(assert (x3160 x1163 (- x3951 x215)))
(assert (= x6402 (and x5070 x562)))
(assert (= x6153 (and x1953 x3580)))
(assert (x2946 x3366))
(assert (= (=> (and (= x5159 x2352) (= x6233 x6038)) x5219) x3841))
(assert (= x1522 (and x3445 (not x4049))))
(assert (x2946 x3627))
(assert (x2946 x3122))
(assert (x3761 x3135))
(assert (= x731 (x4465 (x4555 x731))))
(assert (= (and (not x5411) x472) x1424))
(assert (x2946 x845))
(assert (x3160 x215 (- x3021 x1346)))
(assert (x4723 x215 x3021 x5062 x215))
(assert (x2946 x624))
(assert (x1752 x655))
(assert (= (and (not x647) x5162) x290))
(assert (= (and x2041 x2111) x4703))
(assert (x2946 x5044))
(assert (=> (<= x6380 10000) (= (x821 x6380) (x4555 x6380))))
(assert (x3146 (- x215 x3951)))
(assert (= x5085 (and x5115 x4214)))
(assert (x5626 x5204))
(assert (x2946 x2305))
(assert (= (and (not x2801) x3379) x3376))
(assert (= (and (not x5972) x4207) x5217))
(assert (x2491 x215 x2533 x5471 x215))
(assert (= (=> (and (= 0 x5501) (= x134 x1579)) x6327) x350))
(assert (= x6140 (and x3226 x74)))
(assert (= x6166 (x4465 (x4555 x6166))))
(assert (x3146 (- x5062 x3021)))
(assert (x2946 x6214))
(assert (x2946 x3279))
(assert (= (and x3293 (not x1124)) x140))
(assert (= x241 (and x315 x2040)))
(assert (= x2126 (or (and x4091 (not x4678)) (and x6272 x5560) (and x3898 (not x5339)))))
(assert (x2946 x4274))
(assert (x2946 x32))
(assert (x2946 x4785))
(assert (x2946 x3929))
(assert (= x4742 (or x5221 x3553)))
(assert (= (and (not x1681) x1926) x2821))
(assert (x2946 x4658))
(assert (x2946 x4913))
(assert (= x2435 (and x3730 x1507)))
(assert (x2946 x2153))
(assert (= (and (not x4444) x5) x4629))
(assert (= x841 (or x5779 x2961)))
(assert (x2946 x3313))
(assert (x2946 x403))
(assert (= x5914 (and (not x4559) x2090)))
(assert (= (and (not x211) x4013) x2450))
(assert (= x5182 (and x5099 x5968)))
(assert (= x1869 (or x2213 x3644)))
(assert (x2946 x2519))
(assert (x2946 x2559))
(assert (x2946 x1389))
(assert (x2946 x2683))
(assert (= x5827 (and (not x780) x770)))
(assert (x2946 x5454))
(assert (x2491 x2533 x215 x3951 x1163))
(assert (= (and x2839 x5971) x6318))
(assert (= x1510 (=> (and (= x1674 x6115) (= x3120 0)) x4513)))
(assert (x1752 x466))
(assert (x2946 x143))
(assert (x2946 x1759))
(assert (x3146 (- x5471 x215)))
(assert (x2946 x2214))
(assert (x3761 x3643))
(assert (x2946 x3262))
(assert (= (and x4622 x3275) x5009))
(assert (x2946 x4493))
(assert (= (and (not x3496) x4247) x90))
(assert (x2946 x273))
(assert (= (and x3940 x4323) x2447))
(assert (= x4623 (and x3933 (not x4828))))
(assert (= (and x4786 x491) x6189))
(assert (= x2561 (and (not x4035) x1589)))
(assert (= (and x4454 (not x593)) x3441))
(assert (x2946 x2292))
(assert (x2491 x215 x2533 x215 x3021))
(assert (x2946 x4833))
(assert (x2946 x3829))
(assert (= x3414 (and (not x2912) x3616)))
(assert (x2946 x4476))
(assert (= x6066 (and x3179 x2529)))
(assert (= x3652 (x4465 (x4555 x3652))))
(assert (x2946 x149))
(assert (= (and x3613 x5945) x4949))
(assert (= x5012 (=> (and (= x2047 x5783) (= x4220 x3132)) x4272)))
(assert (=> (>= 10000 x2589) (= (x4555 x2589) (x821 x2589))))
(assert (=> (>= 10000 x4709) (= (x4555 x4709) (x821 x4709))))
(assert (= x5878 (=> (and (= x4351 x5218) (= x58 0)) x2522)))
(assert (= x5903 (and (not x1458) x2287)))
(assert (= x4883 (and x358 (not x2067))))
(assert (= x569 (and x1618 x3832)))
(assert (x2946 x2822))
(assert (x2946 x4534))
(assert (= (=> (and (= (x2082 x1904) x4535) (= x1352 (> x2381 x4535)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4535) (= (x5195 (x4555 x1593) (x821 1) 0) x1904) (>= x4535 0)) (and (=> x1352 x1791) (=> (and (and (= x250 (x3726 (- x4535 x2381))) (= x3838 (> x5377 x1246)) (>= x5377 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5377) (= (x5195 (x4555 x795) (x821 1) 0) x153) (= (x3726 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2381)) x1246) (= x5377 (x5565 x153))) (not x1352)) (and (=> (and (not x3838) (and (= 1 x4141) (= (x3844 (+ x2381 x5377)) x70) (= x5482 32))) x3128) (=> x3838 x1791))))) x1334))
(assert (x2946 x5364))
(assert (= (or (and x3610 x2181) (and x5414 x4273) (and x2142 x4562) (and (not x4661) x4030)) x4574))
(assert (x2946 x3190))
(assert (x2946 x4690))
(assert (= (and (not x160) x5067) x3180))
(assert (= (=> (and (= x2352 x4325) (= x6233 x2992)) x5219) x5130))
(check-sat)
(exit)
