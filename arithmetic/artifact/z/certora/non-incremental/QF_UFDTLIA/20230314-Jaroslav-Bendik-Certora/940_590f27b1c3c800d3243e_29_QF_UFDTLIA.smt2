(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x229 0)) (((x1150 (x666 x229) (x1568 x229) (x674 Int)) (x2046 (x251 Int)) (x582 (x1940 x229) (x818 Int)))))
(declare-fun x127 () Bool)
(declare-fun x1029 () Int)
(declare-fun x2050 () Int)
(declare-fun x193 () Bool)
(declare-fun x1752 () Int)
(declare-fun x470 () Bool)
(declare-fun x548 () Int)
(declare-fun x1591 () Int)
(declare-fun x1067 () Int)
(declare-fun x687 () Int)
(declare-fun x1338 () Int)
(declare-fun x962 () Int)
(declare-fun x1171 () Bool)
(declare-fun x814 () Int)
(declare-fun x1403 () Bool)
(declare-fun x1807 () Int)
(declare-fun x1858 () Int)
(declare-fun x95 () Int)
(declare-fun x197 () Int)
(declare-fun x1799 () Int)
(declare-fun x579 () Int)
(declare-fun x183 (x229) Int)
(declare-fun x968 () Int)
(declare-fun x1776 () Bool)
(declare-fun x1815 () Int)
(declare-fun x400 () Int)
(declare-fun x1424 () Int)
(declare-fun x1058 () Int)
(declare-fun x1811 () Int)
(declare-fun x1675 () Bool)
(declare-fun x640 () Int)
(declare-fun x1160 () Bool)
(declare-fun x2024 () Int)
(declare-fun x1324 () Bool)
(declare-fun x1895 () Int)
(declare-fun x2080 () Bool)
(declare-fun x2207 () Int)
(declare-fun x1842 () Bool)
(declare-fun x1546 () Bool)
(declare-fun x590 () Bool)
(declare-fun x1509 () Int)
(declare-fun x1523 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x2257 () Bool)
(declare-fun x1800 () Bool)
(declare-fun x942 () Bool)
(declare-fun x1613 () Int)
(declare-fun x1136 () x229)
(declare-fun x1357 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x1240 () Int)
(declare-fun x1619 () Int)
(declare-fun x714 () Bool)
(declare-fun x1661 () Int)
(declare-fun x851 () Int)
(declare-fun x417 () Int)
(declare-fun x1033 () Bool)
(declare-fun x7 () Int)
(declare-fun x1872 () Int)
(declare-fun x1374 () x229)
(declare-fun x1826 () Int)
(declare-fun x1238 () Bool)
(declare-fun x1689 () Int)
(declare-fun x1642 () Bool)
(declare-fun x660 () Bool)
(declare-fun x52 () Bool)
(declare-fun x844 () Bool)
(declare-fun x192 () Bool)
(declare-fun x1729 () Int)
(declare-fun x1043 () Int)
(declare-fun x1877 () Int)
(declare-fun x1293 () Int)
(declare-fun x1529 () Bool)
(declare-fun x613 () Bool)
(declare-fun x2243 () Bool)
(declare-fun x572 () Int)
(declare-fun x1099 () Bool)
(declare-fun x1829 () Int)
(declare-fun x605 () Bool)
(declare-fun x829 () Int)
(declare-fun x1047 () Int)
(declare-fun x1993 () Bool)
(declare-fun x2064 () Bool)
(declare-fun x828 () Bool)
(declare-fun x1540 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x663 (Int) Int)
(declare-fun x1634 () Int)
(declare-fun x182 () Int)
(declare-fun x813 () Bool)
(declare-fun x690 () Int)
(declare-fun x299 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x1180 () Bool)
(declare-fun x918 () Int)
(declare-fun x1365 () Int)
(declare-fun x1673 () Bool)
(declare-fun x554 () Bool)
(declare-fun x411 () Bool)
(declare-fun x441 () Bool)
(declare-fun x678 () Int)
(declare-fun x811 () Int)
(declare-fun x1263 () Bool)
(declare-fun x1918 () Bool)
(declare-fun x365 () Int)
(declare-fun x1710 () Bool)
(declare-fun x2096 () Int)
(declare-fun x1401 () Int)
(declare-fun x2196 () Int)
(declare-fun x1246 () Int)
(declare-fun x1398 () Bool)
(declare-fun x323 () Bool)
(declare-fun x1142 () Int)
(declare-fun x2068 () Int)
(declare-fun x145 () Int)
(declare-fun x1741 () Int)
(declare-fun x1936 () Int)
(declare-fun x442 () Int)
(declare-fun x956 () Int)
(declare-fun x1086 () Bool)
(declare-fun x969 () Int)
(declare-fun x390 () Int)
(declare-fun x598 () Int)
(declare-fun x1268 () Int)
(declare-fun x1259 () Bool)
(declare-fun x1570 () Int)
(declare-fun x262 () Int)
(declare-fun x255 () Bool)
(declare-fun x1333 () Int)
(declare-fun x57 () Int)
(declare-fun x943 () Bool)
(declare-fun x1391 () Int)
(declare-fun x160 () Int)
(declare-fun x1483 () Int)
(declare-fun x201 () Int)
(declare-fun x125 () Bool)
(declare-fun x1248 () Int)
(declare-fun x1092 () Int)
(declare-fun x1258 () Bool)
(declare-fun x43 () Int)
(declare-fun x1728 () Int)
(declare-fun x189 () Int)
(declare-fun x1857 () Bool)
(declare-fun x1076 () Int)
(declare-fun x230 () Int)
(declare-fun x1868 () Int)
(declare-fun x2102 () Int)
(declare-fun x101 () Int)
(declare-fun x555 () Int)
(declare-fun x15 () Int)
(declare-fun x1834 () Bool)
(declare-fun x936 () Bool)
(declare-fun x1975 () Bool)
(declare-fun x2184 () x229)
(declare-fun x2018 () Int)
(declare-fun x1213 () Int)
(declare-fun x484 () Bool)
(declare-fun x739 () Int)
(declare-fun x706 () Int)
(declare-fun x1535 () Int)
(declare-fun x206 () Bool)
(declare-fun x367 () Int)
(declare-fun x2209 () Int)
(declare-fun x1163 () Bool)
(declare-fun x1732 () Bool)
(declare-fun x1039 (Int) Int)
(declare-fun x1893 () Bool)
(declare-fun x998 () Bool)
(declare-fun x416 () Bool)
(declare-fun x1901 () Int)
(declare-fun x1980 () Int)
(declare-fun x2260 () Int)
(declare-fun x1016 () Bool)
(declare-fun x597 () Int)
(declare-fun x1052 () Bool)
(declare-fun x47 () Int)
(declare-fun x1140 () Bool)
(declare-fun x879 () Bool)
(declare-fun x477 () Int)
(declare-fun x2172 () Bool)
(declare-fun x1951 () Int)
(declare-fun x5 () Int)
(declare-fun x1985 () Int)
(declare-fun x1569 () Int)
(declare-fun x795 () Bool)
(declare-fun x568 () x229)
(declare-fun x562 () Int)
(declare-fun x1215 () Int)
(declare-fun x1495 (Int Int) Int)
(declare-fun x2258 () x229)
(declare-fun x1563 () Int)
(declare-fun x1395 () Int)
(declare-fun x2111 () Int)
(declare-fun x1760 () Int)
(declare-fun x56 () Int)
(declare-fun x1555 () Int)
(declare-fun x1688 () Int)
(declare-fun x447 () Int)
(declare-fun x862 () Int)
(declare-fun x1933 () Int)
(declare-fun x1289 () Bool)
(declare-fun x780 (x229) Int)
(declare-fun x238 () Bool)
(declare-fun x278 () Bool)
(declare-fun x636 () Bool)
(declare-fun x102 () Int)
(declare-fun x638 () Int)
(declare-fun x1987 () Int)
(declare-fun x1972 () Int)
(declare-fun x577 () Bool)
(declare-fun x473 () Int)
(declare-fun x140 () Bool)
(declare-fun x1347 () x229)
(declare-fun x2101 () Int)
(declare-fun x1520 () Int)
(declare-fun x359 () Int)
(declare-fun x383 () Int)
(declare-fun x1162 () Int)
(declare-fun x593 () Bool)
(declare-fun x654 (x229) Int)
(declare-fun x1100 () Int)
(declare-fun x1105 () Int)
(declare-fun x1532 () Int)
(declare-fun x607 () Int)
(declare-fun x1944 () Int)
(declare-fun x1571 () Bool)
(declare-fun x2077 () Int)
(declare-fun x163 () Int)
(declare-fun x1350 () Bool)
(declare-fun x737 () Int)
(declare-fun x2119 () Int)
(declare-fun x1565 (Int) Int)
(declare-fun x1168 () Bool)
(declare-fun x781 () Int)
(declare-fun x357 () Int)
(declare-fun x587 () Int)
(declare-fun x1957 () Int)
(declare-fun x2061 () Bool)
(declare-fun x1305 () Int)
(declare-fun x1854 () Bool)
(declare-fun x272 () Int)
(declare-fun x1255 () Int)
(declare-fun x1125 () Int)
(declare-fun x1543 () Int)
(declare-fun x978 () Int)
(declare-fun x388 () Int)
(declare-fun x1526 () Int)
(declare-fun x1696 () Bool)
(declare-fun x1507 () x229)
(declare-fun x1356 () Int)
(declare-fun x1441 () Int)
(declare-fun x1904 () Bool)
(declare-fun x2130 () Int)
(declare-fun x2007 () Int)
(declare-fun x1998 () Int)
(declare-fun x886 () Int)
(declare-fun x382 () Bool)
(declare-fun x1286 () Int)
(declare-fun x2087 () Int)
(declare-fun x1845 () Int)
(declare-fun x433 () Bool)
(declare-fun x225 () Int)
(declare-fun x616 () Int)
(declare-fun x1620 () Bool)
(declare-fun x90 () Int)
(declare-fun x1693 () x229)
(declare-fun x465 () Bool)
(declare-fun x1547 () Int)
(declare-fun x992 () Int)
(declare-fun x544 () Int)
(declare-fun x1636 () Int)
(declare-fun x523 (x229) Int)
(declare-fun x1156 () Int)
(declare-fun x1412 () Int)
(declare-fun x107 () Int)
(declare-fun x1843 () Bool)
(declare-fun x1556 () Bool)
(declare-fun x1042 () Int)
(declare-fun x1527 () Bool)
(declare-fun x1161 () Int)
(declare-fun x1706 () Bool)
(declare-fun x840 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x765 () Bool)
(declare-fun x592 () Int)
(declare-fun x501 () Bool)
(declare-fun x1372 () Int)
(declare-fun x1754 () Int)
(declare-fun x424 () Int)
(declare-fun x399 () Bool)
(declare-fun x1749 () Int)
(declare-fun x273 () Int)
(declare-fun x506 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x1719 () Bool)
(declare-fun x1513 () Int)
(declare-fun x745 () Bool)
(declare-fun x2020 () Int)
(declare-fun x2208 () Int)
(declare-fun x1126 () Bool)
(declare-fun x1600 () Int)
(declare-fun x2232 () Bool)
(declare-fun x333 () Int)
(declare-fun x729 () Int)
(declare-fun x269 () Int)
(declare-fun x731 () Bool)
(declare-fun x133 () Bool)
(declare-fun x1888 () Bool)
(declare-fun x428 (x229) Int)
(declare-fun x1377 () Int)
(declare-fun x727 () Int)
(declare-fun x2010 () Bool)
(declare-fun x464 () Int)
(declare-fun x363 () Bool)
(declare-fun x200 () Bool)
(declare-fun x31 () Bool)
(declare-fun x897 () Bool)
(declare-fun x2001 () Int)
(declare-fun x1545 () Int)
(declare-fun x624 () Bool)
(declare-fun x2189 () Bool)
(declare-fun x1363 () Int)
(declare-fun x606 () Bool)
(declare-fun x732 () Int)
(declare-fun x114 () Bool)
(declare-fun x2229 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x1596 () Int)
(declare-fun x1609 () Bool)
(declare-fun x141 () Int)
(declare-fun x1254 () Int)
(declare-fun x1478 () Int)
(declare-fun x892 () Int)
(declare-fun x118 () Bool)
(declare-fun x493 () Bool)
(declare-fun x664 () Int)
(declare-fun x1113 () Bool)
(declare-fun x461 () Bool)
(declare-fun x866 () Int)
(declare-fun x158 () x229)
(declare-fun x1208 () Bool)
(declare-fun x12 () Bool)
(declare-fun x675 () Bool)
(declare-fun x619 () Bool)
(declare-fun x1627 () Int)
(declare-fun x1986 () Bool)
(declare-fun x1950 () Int)
(declare-fun x1680 () Bool)
(declare-fun x549 () Int)
(declare-fun x1692 () Bool)
(declare-fun x1929 () Int)
(declare-fun x1297 () Int)
(declare-fun x2137 () Bool)
(declare-fun x42 () Int)
(declare-fun x187 () Int)
(declare-fun x1209 () Bool)
(declare-fun x1233 () Int)
(declare-fun x450 () Bool)
(declare-fun x407 (x229) Int)
(declare-fun x292 () Int)
(declare-fun x1307 () Bool)
(declare-fun x505 () Int)
(declare-fun x1387 () Int)
(declare-fun x451 () Int)
(declare-fun x1682 (x229) Int)
(declare-fun x389 () Int)
(declare-fun x933 () Int)
(declare-fun x1665 () Int)
(declare-fun x486 () Int)
(declare-fun x794 () Int)
(declare-fun x1237 () Int)
(declare-fun x539 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x1438 () Int)
(declare-fun x290 () Int)
(declare-fun x2039 () Int)
(declare-fun x1838 () Int)
(declare-fun x313 () Int)
(declare-fun x689 (Int) Int)
(declare-fun x227 () Bool)
(declare-fun x1870 () Bool)
(declare-fun x4 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x175 () Int)
(declare-fun x1141 () Int)
(declare-fun x1960 () Int)
(declare-fun x2174 () Int)
(declare-fun x826 () Bool)
(declare-fun x927 () Int)
(declare-fun x355 () Bool)
(declare-fun x373 () Int)
(declare-fun x1181 () Bool)
(declare-fun x859 () Int)
(declare-fun x2016 () Bool)
(declare-fun x1362 () Int)
(declare-fun x507 () Int)
(declare-fun x1298 () Int)
(declare-fun x736 () Int)
(declare-fun x1818 () Int)
(declare-fun x767 () Int)
(declare-fun x1353 () Int)
(declare-fun x1461 () Int)
(declare-fun x500 () Int)
(declare-fun x1678 () Int)
(declare-fun x1315 () Bool)
(declare-fun x1455 () Int)
(declare-fun x1744 () Bool)
(declare-fun x128 () Int)
(declare-fun x576 () Int)
(declare-fun x559 () Int)
(declare-fun x65 () Int)
(declare-fun x1605 (x229) Int)
(declare-fun x914 () Int)
(declare-fun x1528 () x229)
(declare-fun x135 () Int)
(declare-fun x594 () Int)
(declare-fun x1506 () Bool)
(declare-fun x1311 () Int)
(declare-fun x1409 () Int)
(declare-fun x1137 () Int)
(declare-fun x752 () Int)
(declare-fun x784 () Bool)
(declare-fun x191 () Bool)
(declare-fun x1070 () Int)
(declare-fun x1916 () Int)
(declare-fun x1718 () Int)
(declare-fun x1015 () Int)
(declare-fun x368 () Bool)
(declare-fun x1326 () Int)
(declare-fun x2150 () Int)
(declare-fun x1173 (x229) Int)
(declare-fun x887 () Int)
(declare-fun x1798 () Bool)
(declare-fun x1024 () Int)
(declare-fun x1903 () Bool)
(declare-fun x2074 () x229)
(declare-fun x1309 () Int)
(declare-fun x21 () Int)
(declare-fun x1990 () Int)
(declare-fun x1865 () Bool)
(declare-fun x185 () Int)
(declare-fun x1666 () Int)
(declare-fun x37 () Int)
(declare-fun x631 () Int)
(declare-fun x260 () Int)
(declare-fun x596 () Bool)
(declare-fun x1735 () Int)
(declare-fun x2199 () Bool)
(declare-fun x893 () Int)
(declare-fun x1803 (x229) Int)
(declare-fun x1010 () Bool)
(declare-fun x1283 () Int)
(declare-fun x361 () Int)
(declare-fun x304 () Int)
(declare-fun x96 () Bool)
(declare-fun x1319 () Int)
(declare-fun x990 () Int)
(declare-fun x2071 () Int)
(declare-fun x970 () Int)
(declare-fun x1989 () Int)
(declare-fun x1969 () Int)
(declare-fun x2238 () Bool)
(declare-fun x435 () Bool)
(declare-fun x2241 () Int)
(declare-fun x2055 () Int)
(declare-fun x2095 () Bool)
(declare-fun x696 () Int)
(declare-fun x165 () Bool)
(declare-fun x1300 () Int)
(declare-fun x2231 () Bool)
(declare-fun x2035 () Bool)
(declare-fun x748 () Int)
(declare-fun x1487 () Bool)
(declare-fun x252 () Int)
(declare-fun x293 () Int)
(declare-fun x1158 () Bool)
(declare-fun x2171 () Bool)
(declare-fun x99 () Bool)
(declare-fun x1779 () Bool)
(declare-fun x783 () Int)
(declare-fun x890 () Int)
(declare-fun x1938 () Int)
(declare-fun x2083 () Bool)
(declare-fun x254 () Bool)
(declare-fun x747 () Int)
(declare-fun x2155 () Int)
(declare-fun x2034 () Int)
(declare-fun x1089 () Int)
(declare-fun x2017 () Bool)
(declare-fun x446 () Int)
(declare-fun x1961 () Int)
(declare-fun x1420 () Bool)
(declare-fun x41 () Bool)
(declare-fun x1827 () Int)
(declare-fun x632 () Int)
(declare-fun x825 () Int)
(declare-fun x1656 () Int)
(declare-fun x377 (x229) Int)
(declare-fun x115 () Int)
(declare-fun x770 () Int)
(declare-fun x1554 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x1930 () Int)
(declare-fun x698 () Int)
(declare-fun x1337 () Int)
(declare-fun x1453 () Bool)
(declare-fun x546 () Int)
(declare-fun x1542 () Int)
(declare-fun x1906 () Int)
(declare-fun x560 () Int)
(declare-fun x1913 () Int)
(declare-fun x1876 () Bool)
(declare-fun x1582 () Int)
(declare-fun x488 () Bool)
(declare-fun x151 () Int)
(declare-fun x700 () Int)
(declare-fun x1869 () Int)
(declare-fun x2224 () Int)
(declare-fun x156 () Int)
(declare-fun x2126 () Int)
(declare-fun x53 () Int)
(declare-fun x22 () Int)
(declare-fun x1087 () Int)
(declare-fun x190 () Bool)
(declare-fun x620 () Bool)
(declare-fun x1828 () Int)
(declare-fun x1504 () Int)
(declare-fun x685 () Int)
(declare-fun x1610 () Int)
(declare-fun x303 () Int)
(declare-fun x431 () x229)
(declare-fun x686 () Bool)
(declare-fun x2098 () Int)
(declare-fun x1416 () Bool)
(declare-fun x1956 () Bool)
(declare-fun x485 () Bool)
(declare-fun x2022 () Int)
(declare-fun x1505 () Bool)
(declare-fun x1997 () Bool)
(declare-fun x1048 () Int)
(declare-fun x177 () Bool)
(declare-fun x938 () Int)
(declare-fun x1539 () Int)
(declare-fun x1544 () Int)
(declare-fun x988 () Bool)
(declare-fun x643 () Int)
(declare-fun x301 () Int)
(declare-fun x1340 () x229)
(declare-fun x54 () Bool)
(declare-fun x1948 () Int)
(declare-fun x2192 () Bool)
(declare-fun x953 () x229)
(declare-fun x630 () Int)
(declare-fun x1323 (x229) Int)
(declare-fun x1958 () Int)
(declare-fun x1007 () Bool)
(declare-fun x198 () Int)
(declare-fun x547 () Bool)
(declare-fun x1370 () Int)
(declare-fun x712 () Bool)
(declare-fun x1450 () Int)
(declare-fun x2097 () Int)
(declare-fun x2052 () Int)
(declare-fun x421 () Int)
(declare-fun x810 () Int)
(declare-fun x1114 () Int)
(declare-fun x11 () Int)
(declare-fun x1702 () Int)
(declare-fun x1004 () Bool)
(declare-fun x2108 () Int)
(declare-fun x867 () Bool)
(declare-fun x1730 () Int)
(declare-fun x994 () Bool)
(declare-fun x804 () Bool)
(declare-fun x2048 () Int)
(declare-fun x2036 () x229)
(declare-fun x1782 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x720 () Bool)
(declare-fun x2117 () Int)
(declare-fun x2217 () Int)
(declare-fun x1515 () Int)
(declare-fun x1745 () Int)
(declare-fun x1020 () Int)
(declare-fun x179 () Int)
(declare-fun x1027 () Int)
(declare-fun x1224 () Bool)
(declare-fun x1271 () Int)
(declare-fun x895 () Bool)
(declare-fun x1423 () Int)
(declare-fun x543 () Int)
(declare-fun x1731 () Bool)
(declare-fun x1589 () Int)
(declare-fun x1204 () Int)
(declare-fun x283 () Int)
(declare-fun x2031 () Bool)
(declare-fun x202 () Bool)
(declare-fun x1188 () Int)
(declare-fun x1223 () Int)
(declare-fun x1175 () Bool)
(declare-fun x1134 () Bool)
(declare-fun x763 () Bool)
(declare-fun x148 () Int)
(declare-fun x790 () Int)
(declare-fun x891 () Int)
(declare-fun x1440 () Int)
(declare-fun x1079 () Int)
(declare-fun x1640 () Bool)
(declare-fun x1633 () Int)
(declare-fun x920 (x229) Int)
(declare-fun x807 () Bool)
(declare-fun x1491 () Int)
(declare-fun x540 () Int)
(declare-fun x309 () Int)
(declare-fun x1849 () Int)
(declare-fun x963 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x1198 () Int)
(declare-fun x2234 () Bool)
(declare-fun x583 () Int)
(declare-fun x724 () Bool)
(declare-fun x2178 () Int)
(declare-fun x342 () Int)
(declare-fun x1788 () Int)
(declare-fun x2253 () Int)
(declare-fun x1942 () Int)
(declare-fun x1083 () Int)
(declare-fun x104 () Int)
(declare-fun x785 () Int)
(declare-fun x921 () Bool)
(declare-fun x1005 () Int)
(declare-fun x919 () Bool)
(declare-fun x426 () Int)
(declare-fun x32 () Int)
(declare-fun x2195 () Bool)
(declare-fun x1028 () Int)
(declare-fun x761 () Int)
(declare-fun x1182 () Int)
(declare-fun x1472 () Bool)
(declare-fun x495 () Bool)
(declare-fun x1359 () Int)
(declare-fun x798 () Bool)
(declare-fun x937 () Int)
(declare-fun x457 () Int)
(declare-fun x195 () Int)
(declare-fun x1982 () Int)
(declare-fun x1199 (x229) Int)
(declare-fun x316 () Int)
(declare-fun x1489 () Int)
(declare-fun x1278 () x229)
(declare-fun x337 () Int)
(declare-fun x1179 () Int)
(declare-fun x1825 () Bool)
(declare-fun x213 () Int)
(declare-fun x973 () Int)
(declare-fun x1599 () Int)
(declare-fun x2105 () Int)
(declare-fun x1190 () Int)
(declare-fun x2015 () Bool)
(declare-fun x1804 () Int)
(declare-fun x481 () Bool)
(declare-fun x415 () Bool)
(declare-fun x467 () Int)
(declare-fun x350 () Bool)
(declare-fun x801 () Int)
(declare-fun x721 () Bool)
(declare-fun x1756 () Int)
(declare-fun x2114 () Bool)
(declare-fun x380 (Int) Int)
(declare-fun x448 () Bool)
(declare-fun x830 () Int)
(declare-fun x2086 () Int)
(declare-fun x514 () Bool)
(declare-fun x246 () Int)
(declare-fun x1644 () Int)
(declare-fun x376 () Bool)
(declare-fun x1695 () Int)
(declare-fun x1127 () Bool)
(declare-fun x1517 () Bool)
(declare-fun x280 () Int)
(declare-fun x1476 () Bool)
(declare-fun x1787 () Int)
(declare-fun x1917 () Int)
(declare-fun x1128 () Bool)
(declare-fun x1021 () Int)
(declare-fun x1206 () Int)
(declare-fun x2242 () Int)
(declare-fun x1147 () Bool)
(declare-fun x777 () Int)
(declare-fun x2177 () Int)
(declare-fun x1819 (x229) Int)
(declare-fun x832 () Int)
(declare-fun x2149 () Int)
(declare-fun x2176 () Int)
(declare-fun x750 () Int)
(declare-fun x2180 () Int)
(declare-fun x353 () Bool)
(declare-fun x1479 () Int)
(declare-fun x947 () Int)
(declare-fun x926 () Int)
(declare-fun x45 () Int)
(declare-fun x1830 () Bool)
(declare-fun x1612 () Int)
(declare-fun x989 () Int)
(declare-fun x1321 () Bool)
(declare-fun x637 () Int)
(declare-fun x1216 () Bool)
(declare-fun x212 () Int)
(declare-fun x987 () Int)
(declare-fun x147 () Int)
(declare-fun x1979 () Int)
(declare-fun x1157 () Bool)
(declare-fun x1154 () Bool)
(declare-fun x1551 () Bool)
(declare-fun x387 () Bool)
(declare-fun x589 () Bool)
(declare-fun x2194 () Int)
(declare-fun x2165 () Bool)
(declare-fun x1574 () Int)
(declare-fun x1270 () Bool)
(declare-fun x2211 () Bool)
(declare-fun x1617 () Int)
(declare-fun x1038 () Bool)
(declare-fun x268 () Int)
(declare-fun x778 () Int)
(declare-fun x1231 () Int)
(declare-fun x1232 (Int) Int)
(declare-fun x2220 () Bool)
(declare-fun x627 () Int)
(declare-fun x1115 () Int)
(declare-fun x1687 () Bool)
(declare-fun x1614 (Int) Int)
(declare-fun x2029 () Int)
(declare-fun x356 () Bool)
(declare-fun x1066 () Bool)
(declare-fun x1846 () Bool)
(declare-fun x1217 () Int)
(declare-fun x1349 () Bool)
(declare-fun x899 () Bool)
(declare-fun x87 () Int)
(declare-fun x986 () Int)
(declare-fun x414 () Bool)
(declare-fun x1593 () Int)
(declare-fun x2081 () Int)
(declare-fun x434 () Bool)
(declare-fun x1751 () Int)
(declare-fun x633 () Bool)
(declare-fun x2214 () Bool)
(declare-fun x2221 () Int)
(declare-fun x413 () Bool)
(declare-fun x820 () Bool)
(declare-fun x1400 () Int)
(declare-fun x1959 () Int)
(declare-fun x1984 () Int)
(declare-fun x884 () Int)
(declare-fun x1348 (Int) Int)
(declare-fun x1135 () Bool)
(declare-fun x154 () Int)
(declare-fun x1146 () Int)
(declare-fun x1072 () Bool)
(declare-fun x567 () Int)
(declare-fun x717 () Int)
(declare-fun x1670 () Int)
(declare-fun x88 () Bool)
(declare-fun x2023 () Bool)
(declare-fun x1578 () Bool)
(declare-fun x1941 () Bool)
(declare-fun x113 (Int) x229)
(declare-fun x688 () Int)
(declare-fun x1093 () Int)
(declare-fun x445 () Bool)
(declare-fun x2033 () x229)
(declare-fun x1454 () Int)
(declare-fun x1709 () Int)
(declare-fun x429 () Bool)
(declare-fun x294 () Bool)
(declare-fun x563 () Bool)
(declare-fun x653 () Int)
(declare-fun x1519 () Int)
(declare-fun x935 () Bool)
(declare-fun x459 () Bool)
(declare-fun x1082 () x229)
(declare-fun x966 () Int)
(declare-fun x1686 () Int)
(declare-fun x1663 () Bool)
(declare-fun x1477 () Int)
(declare-fun x302 () Int)
(declare-fun x346 () Int)
(declare-fun x639 (x229) Int)
(declare-fun x2136 () Bool)
(declare-fun x436 () Bool)
(declare-fun x137 () Int)
(declare-fun x331 () Int)
(declare-fun x908 () Int)
(declare-fun x883 () Bool)
(declare-fun x1330 () Bool)
(declare-fun x1155 () Bool)
(declare-fun x774 () Int)
(declare-fun x1227 (x229) Int)
(declare-fun x3 () Int)
(declare-fun x1844 () Bool)
(declare-fun x604 () Bool)
(declare-fun x1088 () Bool)
(declare-fun x1342 () Int)
(declare-fun x1284 () Bool)
(declare-fun x1235 () Int)
(declare-fun x1884 () Int)
(declare-fun x2145 () Int)
(declare-fun x951 () Int)
(declare-fun x1106 () Bool)
(declare-fun x742 () Int)
(declare-fun x1983 () Bool)
(declare-fun x2012 () Int)
(declare-fun x542 () Int)
(declare-fun x1549 () Int)
(declare-fun x1894 () Bool)
(declare-fun x108 () Int)
(declare-fun x2210 () Int)
(declare-fun x2141 () Int)
(declare-fun x673 () Bool)
(declare-fun x551 () Int)
(declare-fun x1806 () Bool)
(declare-fun x1481 () Bool)
(declare-fun x404 () Int)
(declare-fun x308 () Int)
(declare-fun x1639 () Bool)
(declare-fun x1713 () Int)
(declare-fun x64 () Int)
(declare-fun x757 () Int)
(declare-fun x39 () Int)
(declare-fun x1890 () Int)
(declare-fun x1716 () Int)
(declare-fun x697 () Bool)
(declare-fun x822 () Bool)
(declare-fun x19 () Bool)
(declare-fun x370 () Int)
(declare-fun x1621 () Int)
(declare-fun x1257 () Int)
(declare-fun x600 () Bool)
(declare-fun x106 (x229) Int)
(declare-fun x205 () Bool)
(declare-fun x2073 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x1681 () Int)
(declare-fun x1954 () x229)
(declare-fun x1281 () Bool)
(declare-fun x1557 () Int)
(declare-fun x1641 () Int)
(declare-fun x352 () Int)
(declare-fun x948 () Int)
(declare-fun x1360 () Int)
(declare-fun x223 () Bool)
(declare-fun x799 () Bool)
(declare-fun x437 () Bool)
(declare-fun x845 () Bool)
(declare-fun x2186 (x229) Int)
(declare-fun x1534 () Int)
(declare-fun x854 () Int)
(declare-fun x2222 () Int)
(declare-fun x1402 () Bool)
(declare-fun x519 () Bool)
(declare-fun x510 () Bool)
(declare-fun x1139 () Int)
(declare-fun x2225 () Bool)
(declare-fun x483 () Int)
(declare-fun x1841 () Int)
(declare-fun x1138 () Int)
(declare-fun x1562 () Int)
(declare-fun x1514 () Int)
(declare-fun x1538 () Int)
(declare-fun x1802 () Int)
(declare-fun x2030 () Bool)
(declare-fun x1812 () Int)
(declare-fun x116 () Int)
(declare-fun x2212 () Bool)
(declare-fun x1290 () Int)
(declare-fun x2216 () Int)
(declare-fun x311 () Int)
(declare-fun x1902 () Int)
(declare-fun x18 () Bool)
(declare-fun x769 () Int)
(declare-fun x762 () Int)
(declare-fun x475 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x178 () Int)
(declare-fun x479 (x229) Int)
(declare-fun x1054 () Int)
(declare-fun x2009 () Int)
(declare-fun x462 () Int)
(declare-fun x1863 () Bool)
(declare-fun x482 () Int)
(declare-fun x91 () Bool)
(declare-fun x557 () Int)
(declare-fun x1069 (Int) Int)
(declare-fun x2154 () Bool)
(declare-fun x1470 () Int)
(declare-fun x2246 () Bool)
(declare-fun x439 () Bool)
(declare-fun x1572 () Int)
(declare-fun x1404 () Int)
(declare-fun x497 () Int)
(declare-fun x2058 () Int)
(declare-fun x1785 () Int)
(declare-fun x964 () Int)
(declare-fun x1500 () Int)
(declare-fun x395 () Int)
(declare-fun x60 () Int)
(declare-fun x443 () Int)
(declare-fun x2047 () Int)
(declare-fun x61 () Int)
(declare-fun x925 () Bool)
(declare-fun x1496 () Int)
(declare-fun x723 () Int)
(declare-fun x1643 () Bool)
(declare-fun x1104 () Bool)
(declare-fun x494 () Int)
(declare-fun x393 () Bool)
(declare-fun x1761 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x29 () Bool)
(declare-fun x1908 () Bool)
(declare-fun x503 () Bool)
(declare-fun x1703 () Int)
(declare-fun x531 () Int)
(declare-fun x1448 () Int)
(declare-fun x615 () Int)
(declare-fun x2144 () x229)
(declare-fun x735 () Bool)
(declare-fun x683 () Int)
(declare-fun x419 () Int)
(declare-fun x868 () Int)
(declare-fun x715 () Int)
(declare-fun x1585 () Bool)
(declare-fun x2094 () Bool)
(declare-fun x1406 () Bool)
(declare-fun x1444 () Int)
(declare-fun x1763 () x229)
(declare-fun x902 () Int)
(declare-fun x1720 () Int)
(declare-fun x1740 () Int)
(declare-fun x1084 () Bool)
(declare-fun x612 () Int)
(declare-fun x915 () x229)
(declare-fun x881 () Int)
(declare-fun x1018 () Int)
(declare-fun x1419 () x229)
(declare-fun x764 () Bool)
(declare-fun x1615 () Int)
(declare-fun x203 (x229) Int)
(declare-fun x806 () Bool)
(declare-fun x1859 () Int)
(declare-fun x228 () Bool)
(declare-fun x1628 () Int)
(declare-fun x1130 () Int)
(declare-fun x1712 () Int)
(declare-fun x394 (x229) Int)
(declare-fun x1924 () Bool)
(declare-fun x2249 () Int)
(declare-fun x215 () Int)
(declare-fun x402 () Int)
(declare-fun x528 () Bool)
(declare-fun x1618 () Int)
(declare-fun x1485 () Bool)
(declare-fun x894 () Bool)
(declare-fun x741 () Int)
(declare-fun x1012 () Int)
(declare-fun x1458 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x1912 () Int)
(declare-fun x1823 () Int)
(declare-fun x667 () Int)
(declare-fun x2099 () Int)
(declare-fun x2219 () Int)
(declare-fun x1499 () Int)
(declare-fun x1518 () Int)
(declare-fun x155 () Bool)
(declare-fun x1025 () Bool)
(declare-fun x561 () Int)
(declare-fun x1671 () Bool)
(declare-fun x55 (Int) Int)
(declare-fun x1046 () Bool)
(declare-fun x86 () x229)
(declare-fun x1056 () Int)
(declare-fun x611 () Int)
(declare-fun x1765 () Int)
(declare-fun x2043 () Int)
(declare-fun x117 () Int)
(declare-fun x1897 () Int)
(declare-fun x574 () Bool)
(declare-fun x2148 (x229) Int)
(declare-fun x647 () Int)
(declare-fun x2004 () Bool)
(declare-fun x1508 () Bool)
(declare-fun x662 () Int)
(declare-fun x2103 () Int)
(declare-fun x847 () Int)
(declare-fun x509 () Bool)
(declare-fun x1425 () Int)
(declare-fun x734 () Int)
(declare-fun x196 () Bool)
(declare-fun x1738 () Bool)
(declare-fun x162 () Bool)
(declare-fun x1657 () Bool)
(declare-fun x1770 () Bool)
(declare-fun x2072 () Int)
(declare-fun x288 () Int)
(declare-fun x2084 () Int)
(declare-fun x974 () Int)
(declare-fun x1588 () Bool)
(declare-fun x1780 () Bool)
(declare-fun x440 () Int)
(declare-fun x1822 () Bool)
(declare-fun x487 () Int)
(declare-fun x848 () Int)
(declare-fun x1995 () Int)
(declare-fun x2191 () Int)
(declare-fun x305 () Int)
(declare-fun x1832 () Bool)
(declare-fun x1793 () Int)
(declare-fun x2028 () Int)
(declare-fun x1769 () Bool)
(declare-fun x1316 () Int)
(declare-fun x2215 () Int)
(declare-fun x504 () Int)
(declare-fun x2092 () Int)
(declare-fun x1772 () Bool)
(declare-fun x328 () Bool)
(declare-fun x2062 () x229)
(declare-fun x1552 () Bool)
(declare-fun x1883 () Int)
(declare-fun x1611 () Bool)
(declare-fun x1743 () Int)
(declare-fun x1439 () Bool)
(declare-fun x2203 () Int)
(declare-fun x934 () Int)
(declare-fun x2161 () Int)
(declare-fun x1817 () Int)
(declare-fun x1352 () Bool)
(declare-fun x1022 () Int)
(declare-fun x50 () x229)
(declare-fun x1276 () Int)
(declare-fun x518 () Int)
(declare-fun x1840 () Int)
(declare-fun x20 () Int)
(declare-fun x1867 () Int)
(declare-fun x1522 () Int)
(declare-fun x746 () Bool)
(declare-fun x1814 () Bool)
(declare-fun x78 () x229)
(declare-fun x34 () Bool)
(declare-fun x219 () Int)
(declare-fun x569 () Int)
(declare-fun x347 () Int)
(declare-fun x221 () Bool)
(declare-fun x655 () Int)
(declare-fun x1490 () Int)
(declare-fun x210 (Int) Int)
(declare-fun x2250 () Bool)
(declare-fun x1244 () Int)
(declare-fun x217 () Bool)
(declare-fun x1493 () Int)
(declare-fun x1415 () Int)
(declare-fun x581 () Bool)
(declare-fun x834 () Int)
(declare-fun x129 () Int)
(declare-fun x1784 () Int)
(declare-fun x1242 () Int)
(declare-fun x878 () Int)
(declare-fun x1442 () Int)
(declare-fun x1724 () Int)
(declare-fun x222 () Int)
(declare-fun x263 () Int)
(declare-fun x30 () Int)
(declare-fun x317 () Int)
(declare-fun x1313 () Int)
(declare-fun x261 () Int)
(declare-fun x842 () Int)
(declare-fun x545 () Int)
(declare-fun x2143 () Int)
(declare-fun x932 () Bool)
(declare-fun x170 () Bool)
(declare-fun x1651 () Bool)
(declare-fun x591 (x229) Int)
(declare-fun x75 () Int)
(declare-fun x1327 () Int)
(declare-fun x478 () Int)
(declare-fun x2113 () Int)
(declare-fun x1795 () Bool)
(declare-fun x744 () Bool)
(declare-fun x1873 () Int)
(declare-fun x1864 () Bool)
(declare-fun x2175 () Int)
(declare-fun x40 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x602 () Bool)
(declare-fun x1677 () Int)
(declare-fun x2021 () Int)
(declare-fun x77 () Int)
(declare-fun x1152 () Int)
(declare-fun x1229 () Bool)
(declare-fun x1646 () Bool)
(declare-fun x289 () Bool)
(declare-fun x1148 () Int)
(declare-fun x2025 () x229)
(declare-fun x672 () Int)
(declare-fun x1536 () Bool)
(declare-fun x1466 () Bool)
(declare-fun x2115 () Int)
(declare-fun x271 () Int)
(declare-fun x456 () Int)
(declare-fun x105 () Int)
(declare-fun x1417 () Int)
(declare-fun x2054 () Bool)
(declare-fun x1378 (x229) Int)
(declare-fun x1287 () Int)
(declare-fun x1755 () Bool)
(declare-fun x1739 () Int)
(declare-fun x224 () Int)
(declare-fun x903 () Int)
(declare-fun x841 () x229)
(declare-fun x1816 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x2032 () Bool)
(declare-fun x1236 () x229)
(declare-fun x403 () Int)
(declare-fun x743 (x229) Int)
(declare-fun x873 () Bool)
(declare-fun x1144 () Int)
(declare-fun x344 () Int)
(declare-fun x1117 () Int)
(declare-fun x1390 () Int)
(declare-fun x1121 () Int)
(declare-fun x941 () Int)
(declare-fun x940 () Int)
(declare-fun x877 () Int)
(declare-fun x535 () Int)
(declare-fun x1992 () Int)
(declare-fun x1726 () Int)
(declare-fun x791 () Bool)
(declare-fun x979 () Int)
(declare-fun x896 () Int)
(declare-fun x815 () Bool)
(declare-fun x2000 () Bool)
(declare-fun x930 () Int)
(declare-fun x1753 () Bool)
(declare-fun x2121 () Int)
(declare-fun x680 () Int)
(declare-fun x670 () Int)
(declare-fun x1376 () Int)
(declare-fun x1881 () Int)
(declare-fun x1786 () Int)
(declare-fun x1915 () Bool)
(declare-fun x8 () Int)
(declare-fun x1885 () Bool)
(declare-fun x2185 () Int)
(declare-fun x1559 () Bool)
(declare-fun x2198 () Bool)
(declare-fun x904 () Bool)
(declare-fun x1183 () Int)
(declare-fun x1200 () Bool)
(declare-fun x1421 () Int)
(declare-fun x872 () Int)
(declare-fun x199 () Int)
(declare-fun x2014 () Int)
(declare-fun x172 () Int)
(declare-fun x870 () Int)
(declare-fun x2123 () Bool)
(declare-fun x759 () Int)
(declare-fun x553 () Int)
(declare-fun x474 () Int)
(declare-fun x1647 () Bool)
(declare-fun x2053 () Bool)
(declare-fun x274 () Int)
(declare-fun x1447 () Bool)
(declare-fun x2051 () Bool)
(declare-fun x256 (Int) Int)
(declare-fun x1486 () Int)
(declare-fun x496 () Bool)
(declare-fun x10 () Bool)
(declare-fun x779 () Int)
(declare-fun x931 () Int)
(declare-fun x2041 () Int)
(declare-fun x512 () Int)
(declare-fun x2173 () Int)
(declare-fun x248 () Int)
(declare-fun x1354 () Int)
(declare-fun x1900 (x229) Int)
(declare-fun x259 () Int)
(declare-fun x211 () Int)
(declare-fun x2082 () Int)
(declare-fun x410 () Int)
(declare-fun x1899 () Int)
(declare-fun x824 () x229)
(declare-fun x264 () Int)
(declare-fun x1017 () Int)
(declare-fun x1434 () Int)
(declare-fun x1036 () Bool)
(declare-fun x385 () Bool)
(declare-fun x1889 () Int)
(declare-fun x858 () Bool)
(declare-fun x490 () Int)
(declare-fun x2182 () Bool)
(declare-fun x924 () Int)
(declare-fun x349 () Bool)
(declare-fun x1945 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x1715 () Int)
(declare-fun x1111 () Int)
(declare-fun x371 (x229) Int)
(declare-fun x1497 () Int)
(declare-fun x996 () Int)
(declare-fun x1174 () Int)
(declare-fun x358 () Int)
(declare-fun x1386 () Int)
(declare-fun x1768 () Bool)
(declare-fun x1009 () Bool)
(declare-fun x1011 () Int)
(declare-fun x2164 () Int)
(declare-fun x339 () Bool)
(declare-fun x1871 () Int)
(declare-fun x913 () Int)
(declare-fun x1587 () Bool)
(declare-fun x1524 () Int)
(declare-fun x1879 () Int)
(declare-fun x2204 () Int)
(declare-fun x1727 () Int)
(declare-fun x789 () Int)
(declare-fun x2160 () Bool)
(declare-fun x2037 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x1221 () Int)
(declare-fun x378 () Bool)
(declare-fun x181 () Int)
(declare-fun x1962 () Int)
(declare-fun x558 () Int)
(declare-fun x1014 () Int)
(declare-fun x1196 () Bool)
(declare-fun x2158 () Bool)
(declare-fun x1249 () Int)
(declare-fun x1392 () Bool)
(declare-fun x79 () Bool)
(declare-fun x1597 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x92 () Int)
(declare-fun x2156 () Int)
(declare-fun x515 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x2254 () Bool)
(declare-fun x707 () Int)
(declare-fun x1467 () x229)
(declare-fun x1783 () Int)
(declare-fun x469 () Int)
(declare-fun x1389 () Bool)
(declare-fun x1976 () Int)
(declare-fun x1721 () Int)
(declare-fun x754 () Bool)
(declare-fun x733 () Int)
(declare-fun x756 () Bool)
(declare-fun x1548 () Int)
(declare-fun x2179 () Int)
(declare-fun x995 () Int)
(declare-fun x771 () Bool)
(declare-fun x1698 () Int)
(declare-fun x46 () Int)
(declare-fun x1550 () Bool)
(declare-fun x782 () Int)
(declare-fun x1653 () Int)
(declare-fun x1968 () Bool)
(declare-fun x1935 () Bool)
(declare-fun x69 () Int)
(declare-fun x143 () Int)
(declare-fun x51 () Bool)
(declare-fun x1892 () Int)
(declare-fun x1061 () Int)
(declare-fun x1037 () Int)
(declare-fun x676 (Int) Int)
(declare-fun x2251 () Int)
(declare-fun x1384 () Int)
(declare-fun x1771 () Bool)
(declare-fun x71 () Int)
(declare-fun x1874 () x229)
(declare-fun x124 () x229)
(declare-fun x2228 () Int)
(declare-fun x2134 () Int)
(declare-fun x1035 () Bool)
(declare-fun x36 () Int)
(declare-fun x1684 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x123 () Bool)
(declare-fun x910 () Int)
(declare-fun x1694 () Int)
(declare-fun x749 () Int)
(declare-fun x580 () Bool)
(declare-fun x267 () Bool)
(declare-fun x1045 () Int)
(declare-fun x1835 () Int)
(declare-fun x1008 () Bool)
(declare-fun x81 () Int)
(declare-fun x626 () Bool)
(declare-fun x232 () Bool)
(declare-fun x800 () Bool)
(declare-fun x1050 () Int)
(declare-fun x1031 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x997 () Bool)
(declare-fun x1262 () Int)
(declare-fun x1094 () Int)
(declare-fun x1064 () Int)
(declare-fun x1172 () Bool)
(declare-fun x2169 () Bool)
(declare-fun x1973 () Bool)
(declare-fun x330 () Int)
(declare-fun x1778 () Int)
(declare-fun x645 () Int)
(declare-fun x492 (x229) Int)
(declare-fun x1306 () Int)
(declare-fun x1462 () Int)
(declare-fun x1977 () Int)
(declare-fun x1267 () Bool)
(declare-fun x258 () Int)
(declare-fun x285 () Int)
(declare-fun x1334 () Int)
(declare-fun x2163 () Int)
(declare-fun x1736 () Int)
(declare-fun x537 () Bool)
(declare-fun x852 () Int)
(declare-fun x874 () Int)
(declare-fun x603 () Bool)
(declare-fun x17 () Bool)
(declare-fun x1187 () Int)
(declare-fun x214 () Int)
(declare-fun x1080 () Int)
(declare-fun x618 () Bool)
(declare-fun x161 () Int)
(declare-fun x2153 () Int)
(declare-fun x1836 () Int)
(declare-fun x1949 () Int)
(declare-fun x1339 () Int)
(declare-fun x242 () Int)
(declare-fun x1226 () Int)
(declare-fun x1192 () Int)
(declare-fun x1723 () Bool)
(declare-fun x1291 () Bool)
(declare-fun x823 () Int)
(declare-fun x1561 () Int)
(declare-fun x1560 () Bool)
(declare-fun x2003 () Int)
(declare-fun x1699 () Int)
(declare-fun x1153 () Int)
(declare-fun x1465 () Int)
(declare-fun x2223 () Bool)
(declare-fun x1219 () Int)
(declare-fun x164 () Bool)
(declare-fun x1023 () Int)
(declare-fun x372 () Bool)
(declare-fun x1622 () Int)
(declare-fun x786 () Bool)
(declare-fun x1952 () Int)
(declare-fun x1631 (Int Int) Int)
(declare-fun x2152 () Bool)
(declare-fun x1963 () Int)
(declare-fun x226 () Int)
(declare-fun x1809 () Int)
(declare-fun x534 () Int)
(declare-fun x570 () Int)
(declare-fun x657 () Int)
(declare-fun x1318 () Bool)
(declare-fun x1501 (x229) Int)
(declare-fun x406 () Bool)
(declare-fun x2078 () Int)
(declare-fun x1746 () Int)
(declare-fun x1833 () Int)
(declare-fun x1001 () Bool)
(declare-fun x1195 () Int)
(declare-fun x1218 () Int)
(declare-fun x159 () Int)
(declare-fun x1329 () Bool)
(declare-fun x1848 () Bool)
(declare-fun x1813 () Int)
(declare-fun x2131 () Int)
(declare-fun x2066 (x229) Int)
(declare-fun x180 () Int)
(declare-fun x1090 () Bool)
(declare-fun x864 () Int)
(declare-fun x1107 () Bool)
(declare-fun x1711 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x816 () Int)
(declare-fun x2049 () Int)
(declare-fun x24 () Int)
(declare-fun x907 () Int)
(declare-fun x1907 () Bool)
(declare-fun x527 () Bool)
(declare-fun x2006 () Bool)
(declare-fun x977 () Int)
(declare-fun x912 () Int)
(declare-fun x876 () Bool)
(declare-fun x270 () Int)
(declare-fun x134 () Bool)
(declare-fun x1302 () Int)
(declare-fun x550 () Int)
(declare-fun x622 () Int)
(declare-fun x1722 () Bool)
(declare-fun x111 () Int)
(declare-fun x1275 () Int)
(declare-fun x792 () Int)
(declare-fun x1991 () Int)
(declare-fun x1108 () Int)
(declare-fun x1531 () Bool)
(declare-fun x1590 () Int)
(declare-fun x1445 () Bool)
(declare-fun x1320 () Int)
(declare-fun x1852 () Int)
(declare-fun x144 () Int)
(declare-fun x695 () Bool)
(declare-fun x898 () Int)
(declare-fun x354 () Int)
(declare-fun x1410 () Int)
(declare-fun x839 () Bool)
(declare-fun x901 () Int)
(declare-fun x1294 () Bool)
(declare-fun x644 () Int)
(declare-fun x1422 () Int)
(declare-fun x1118 () Int)
(declare-fun x1971 () Int)
(declare-fun x1361 () Bool)
(declare-fun x595 () Int)
(declare-fun x609 () Int)
(declare-fun x48 () Bool)
(declare-fun x1044 () Bool)
(declare-fun x766 () Int)
(declare-fun x1456 () Int)
(declare-fun x649 () Int)
(declare-fun x793 () Int)
(declare-fun x1443 (Int) Int)
(declare-fun x480 () Int)
(declare-fun x340 () x229)
(declare-fun x835 () Bool)
(declare-fun x2167 () Bool)
(declare-fun x58 () Bool)
(declare-fun x1212 () Int)
(declare-fun x310 () Int)
(declare-fun x788 () Int)
(declare-fun x1112 () Int)
(declare-fun x1576 () Int)
(declare-fun x905 () Int)
(declare-fun x1708 () Int)
(declare-fun x472 () Bool)
(declare-fun x1245 () Int)
(declare-fun x2147 () Bool)
(declare-fun x728 () Int)
(declare-fun x1669 () Int)
(declare-fun x209 () Bool)
(declare-fun x2127 (x229) Int)
(declare-fun x1691 () Int)
(declare-fun x1074 () Int)
(declare-fun x122 () Int)
(declare-fun x2240 () Bool)
(declare-fun x297 () Bool)
(declare-fun x471 () Int)
(declare-fun x243 () Bool)
(declare-fun x1762 (Int) Int)
(declare-fun x6 () Int)
(declare-fun x1805 () Int)
(declare-fun x112 () Bool)
(declare-fun x218 () Int)
(declare-fun x1626 () Bool)
(declare-fun x2187 () Bool)
(declare-fun x13 () Bool)
(declare-fun x950 () Int)
(declare-fun x1260 () Int)
(declare-fun x809 () Bool)
(declare-fun x860 () Bool)
(declare-fun x2085 () Int)
(declare-fun x984 () Bool)
(declare-fun x1167 () Int)
(declare-fun x692 () Bool)
(declare-fun x520 (Int Int) Int)
(declare-fun x671 () Bool)
(declare-fun x1658 () Int)
(declare-fun x2112 () Int)
(declare-fun x14 () Int)
(declare-fun x1939 () Int)
(declare-fun x168 () Bool)
(declare-fun x1484 () Bool)
(declare-fun x1414 () Bool)
(declare-fun x332 () Bool)
(declare-fun x1714 () Int)
(declare-fun x2040 () Int)
(declare-fun x2213 () Int)
(declare-fun x1967 () Bool)
(declare-fun x1537 () Int)
(declare-fun x241 () Int)
(declare-fun x2142 () Bool)
(declare-fun x944 () Int)
(declare-fun x959 () Int)
(declare-fun x652 () Int)
(declare-fun x1866 () Int)
(declare-fun x1999 () Int)
(declare-fun x2079 () Int)
(declare-fun x1032 () Bool)
(declare-fun x2090 () Bool)
(declare-fun x184 () Int)
(declare-fun x1919 () Int)
(declare-fun x536 () Int)
(declare-fun x186 () Int)
(declare-fun x239 () Int)
(declare-fun x1373 () Bool)
(declare-fun x126 () Int)
(declare-fun x2205 () Int)
(declare-fun x1616 () Int)
(declare-fun x1057 (Int) Int)
(declare-fun x1103 () Int)
(declare-fun x1475 (x229) Int)
(declare-fun x982 () x229)
(declare-fun x1234 () Int)
(declare-fun x265 () Int)
(declare-fun x760 () Bool)
(declare-fun x1701 () Bool)
(declare-fun x740 () Bool)
(declare-fun x1953 () Int)
(declare-fun x2259 () Int)
(declare-fun x1336 () Int)
(declare-fun x231 () Int)
(declare-fun x1937 () Int)
(declare-fun x1053 (Int) Int)
(declare-fun x1996 () Bool)
(declare-fun x306 () Int)
(declare-fun x1862 () Int)
(declare-fun x67 () Int)
(declare-fun x2190 () Bool)
(declare-fun x513 () Int)
(declare-fun x588 () Bool)
(declare-fun x83 () Int)
(declare-fun x1510 () Int)
(declare-fun x1598 () Int)
(declare-fun x817 () Int)
(declare-fun x1988 () Int)
(declare-fun x584 () Int)
(declare-fun x1317 () Int)
(declare-fun x1060 () Bool)
(declare-fun x1742 () Int)
(declare-fun x1970 () Bool)
(declare-fun x703 () Int)
(declare-fun x2091 () Bool)
(declare-fun x2059 () Int)
(declare-fun x1668 () Int)
(declare-fun x831 () Int)
(declare-fun x130 () Int)
(declare-fun x398 () Int)
(declare-fun x1303 () Int)
(declare-fun x768 () Int)
(declare-fun x1368 () Int)
(declare-fun x1927 () Int)
(declare-fun x1759 () Bool)
(declare-fun x295 () Int)
(declare-fun x1810 () Int)
(declare-fun x208 (x229) Int)
(declare-fun x1592 () Int)
(declare-fun x74 () Bool)
(declare-fun x498 () Int)
(declare-fun x946 () Int)
(declare-fun x334 () Int)
(declare-fun x1252 () Int)
(declare-fun x1502 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x1567 () Int)
(declare-fun x2197 () Bool)
(declare-fun x2060 () Int)
(declare-fun x2227 () Bool)
(declare-fun x1994 () Int)
(declare-fun x1558 () Int)
(declare-fun x1757 () Bool)
(declare-fun x1261 () Int)
(declare-fun x1095 () Int)
(declare-fun x1437 () Bool)
(declare-fun x1853 () Bool)
(declare-fun x1898 () Int)
(declare-fun x1480 () Bool)
(declare-fun x981 () Int)
(declare-fun x167 () Int)
(declare-fun x28 () Int)
(declare-fun x511 () Bool)
(declare-fun x1928 () Int)
(declare-fun x939 (x229) Int)
(declare-fun x684 () Int)
(declare-fun x975 () Bool)
(declare-fun x1220 () Bool)
(declare-fun x1498 () Int)
(declare-fun x718 () Int)
(declare-fun x420 (Int) Int)
(declare-fun x234 () Int)
(declare-fun x2056 () Bool)
(declare-fun x668 () Bool)
(declare-fun x693 () Int)
(declare-fun x499 () Bool)
(declare-fun x2042 () Int)
(declare-fun x1269 () Int)
(declare-fun x1909 () Int)
(declare-fun x1700 () Bool)
(declare-fun x2 () Int)
(declare-fun x1250 () Int)
(declare-fun x1299 () Bool)
(declare-fun x100 () Int)
(declare-fun x1214 (x229) Int)
(declare-fun x1750 (x229) Int)
(declare-fun x525 () Int)
(declare-fun x422 () Int)
(declare-fun x709 () Int)
(declare-fun x614 () Bool)
(declare-fun x861 () Int)
(declare-fun x93 () Int)
(declare-fun x641 () Bool)
(declare-fun x1581 () Int)
(declare-fun x2057 () Int)
(declare-fun x1882 () Int)
(declare-fun x324 () Int)
(declare-fun x1055 () Int)
(declare-fun x1451 () Int)
(declare-fun x2063 () Int)
(declare-fun x82 () Bool)
(declare-fun x237 () Int)
(declare-fun x2256 () Int)
(declare-fun x33 () Bool)
(declare-fun x2206 () Int)
(declare-fun x508 () x229)
(declare-fun x362 () Int)
(declare-fun x1385 () Bool)
(declare-fun x49 () Bool)
(declare-fun x2005 () Bool)
(declare-fun x2218 () Int)
(declare-fun x2075 () Bool)
(declare-fun x336 () Bool)
(declare-fun x1393 () Int)
(declare-fun x1790 () Int)
(declare-fun x758 () Bool)
(declare-fun x702 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x1764 () Int)
(declare-fun x2248 () Int)
(declare-fun x971 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x836 () Int)
(declare-fun x2244 () x229)
(declare-fun x1201 () Int)
(declare-fun x837 () Int)
(declare-fun x70 () Bool)
(declare-fun x1650 () Bool)
(declare-fun x972 () Bool)
(declare-fun x610 () Int)
(declare-fun x1432 () Int)
(declare-fun x1358 () Int)
(declare-fun x1808 () Int)
(declare-fun x2106 () Int)
(declare-fun x9 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x625 () Bool)
(declare-fun x1837 () Int)
(declare-fun x2008 () Bool)
(declare-fun x1166 () Int)
(declare-fun x923 () Int)
(declare-fun x917 () Int)
(declare-fun x1295 () Int)
(declare-fun x1679 () Int)
(declare-fun x369 () Bool)
(declare-fun x1625 () Int)
(declare-fun x1516 () Bool)
(declare-fun x335 () Int)
(declare-fun x194 () Int)
(declare-fun x2170 () Int)
(declare-fun x1314 () Int)
(declare-fun x236 () Int)
(declare-fun x1003 () Bool)
(declare-fun x38 () Bool)
(declare-fun x1690 () Int)
(declare-fun x1737 () Int)
(declare-fun x773 () Int)
(declare-fun x573 () Int)
(declare-fun x401 () Int)
(declare-fun x396 () Int)
(declare-fun x716 () Bool)
(declare-fun x247 () Bool)
(declare-fun x1488 () Int)
(declare-fun x1794 () Int)
(declare-fun x1062 () Int)
(declare-fun x1382 () Bool)
(declare-fun x1914 () Int)
(declare-fun x1926 () Int)
(declare-fun x1102 () Bool)
(declare-fun x1280 () Int)
(declare-fun x1133 () Int)
(declare-fun x980 () Bool)
(declare-fun x1205 () Int)
(declare-fun x704 () Int)
(declare-fun x204 (x229) Int)
(declare-fun x1586 () Int)
(declare-fun x35 () Bool)
(declare-fun x1659 () Int)
(declare-fun x1071 () Bool)
(declare-fun x207 () Int)
(declare-fun x1380 () Int)
(declare-fun x533 () Int)
(declare-fun x1629 () Bool)
(declare-fun x1662 () Bool)
(declare-fun x755 () Int)
(declare-fun x1273 () Int)
(declare-fun x911 () Bool)
(declare-fun x2132 () Int)
(declare-fun x954 (x229) Int)
(declare-fun x1013 () Int)
(declare-fun x2065 () x229)
(declare-fun x2193 () Int)
(declare-fun x1683 () Bool)
(declare-fun x307 () x229)
(declare-fun x1247 () Int)
(declare-fun x855 () Int)
(declare-fun x1608 () Int)
(declare-fun x885 () Int)
(declare-fun x1648 () Bool)
(declare-fun x491 () Int)
(declare-fun x1966 () Int)
(declare-fun x552 () Bool)
(declare-fun x1492 () Int)
(declare-fun x922 () Bool)
(declare-fun x153 () Bool)
(declare-fun x176 () Int)
(declare-fun x865 () Int)
(declare-fun x719 () Int)
(declare-fun x1264 () Bool)
(declare-fun x1151 () Int)
(declare-fun x391 (x229) Int)
(declare-fun x1934 () Int)
(declare-fun x1792 () Bool)
(declare-fun x1369 () Int)
(declare-fun x240 () Bool)
(declare-fun x338 () Int)
(declare-fun x1418 () Int)
(declare-fun x1943 () Int)
(declare-fun x1469 () x229)
(declare-fun x1449 () Bool)
(declare-fun x23 () Bool)
(declare-fun x846 () Bool)
(declare-fun x1210 () Int)
(declare-fun x1145 () Int)
(declare-fun x97 () Bool)
(declare-fun x109 () Bool)
(declare-fun x1468 () Bool)
(declare-fun x409 () Int)
(declare-fun x2122 () Int)
(declare-fun x1896 () Int)
(declare-fun x233 () Int)
(declare-fun x1310 () Bool)
(declare-fun x875 () Int)
(declare-fun x296 () Bool)
(declare-fun x244 () Bool)
(declare-fun x586 () Int)
(declare-fun x1253 () Int)
(declare-fun x1821 () Int)
(declare-fun x257 (Int Int) Int)
(declare-fun x1110 () Bool)
(declare-fun x566 () Bool)
(declare-fun x2013 () Int)
(declare-fun x430 () Bool)
(declare-fun x1068 () Int)
(declare-fun x530 () Bool)
(declare-fun x802 () Int)
(declare-fun x1511 () Int)
(declare-fun x1697 () Bool)
(declare-fun x121 () Bool)
(declare-fun x76 () Bool)
(declare-fun x1674 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x1143 () Bool)
(declare-fun x960 () Bool)
(declare-fun x634 (x229) Int)
(declare-fun x1343 () Bool)
(declare-fun x171 () Int)
(declare-fun x1109 () Int)
(declare-fun x300 () Bool)
(declare-fun x381 () Int)
(declare-fun x1178 () Int)
(declare-fun x776 () Int)
(declare-fun x965 () Bool)
(declare-fun x1797 () Bool)
(declare-fun x1189 () Int)
(declare-fun x343 () Bool)
(declare-fun x245 () Int)
(declare-fun x863 () Int)
(declare-fun x412 () Bool)
(declare-fun x1065 () x229)
(declare-fun x1098 () Int)
(declare-fun x900 () Int)
(declare-fun x1789 () Bool)
(declare-fun x1185 () Int)
(declare-fun x1433 (x229) Int)
(declare-fun x250 () Int)
(declare-fun x705 () Bool)
(declare-fun x62 () Int)
(declare-fun x1431 () Int)
(declare-fun x1584 () Bool)
(declare-fun x659 () Bool)
(declare-fun x1606 () Bool)
(declare-fun x1411 () Int)
(declare-fun x418 () Int)
(declare-fun x2002 () Bool)
(declare-fun x72 () Int)
(declare-fun x976 () Int)
(declare-fun x524 () Int)
(declare-fun x2133 () Int)
(declare-fun x2159 () Int)
(declare-fun x276 () Int)
(declare-fun x1266 () Bool)
(declare-fun x2067 () Int)
(declare-fun x16 () Int)
(declare-fun x999 () Int)
(declare-fun x722 () Bool)
(declare-fun x805 () Int)
(declare-fun x1328 () Bool)
(declare-fun x2201 () Int)
(declare-fun x2044 () Int)
(declare-fun x2093 () Bool)
(declare-fun x991 (Int Int) Int)
(declare-fun x928 () Int)
(declare-fun x1379 () Int)
(declare-fun x1460 () Int)
(declare-fun x1435 () Bool)
(declare-fun x142 () Bool)
(declare-fun x1623 () Bool)
(declare-fun x656 () Bool)
(declare-fun x1159 () Int)
(declare-fun x1176 () Int)
(declare-fun x1525 () Bool)
(declare-fun x1197 () Int)
(declare-fun x2252 () Bool)
(declare-fun x1855 () Int)
(declare-fun x319 () Bool)
(declare-fun x44 () Int)
(declare-fun x1272 () Bool)
(declare-fun x679 () Bool)
(declare-fun x532 () Bool)
(declare-fun x119 (x229) Int)
(declare-fun x1325 () Bool)
(declare-fun x1911 () Int)
(declare-fun x1573 () Int)
(declare-fun x2166 () Bool)
(declare-fun x2245 () Bool)
(declare-fun x68 () Bool)
(declare-fun x1397 () Int)
(declare-fun x287 () Int)
(declare-fun x384 () Int)
(declare-fun x1301 () Int)
(declare-fun x423 () Bool)
(declare-fun x2247 () Bool)
(declare-fun x556 () Bool)
(declare-fun x651 () Bool)
(declare-fun x985 () Int)
(declare-fun x1595 () Int)
(declare-fun x1875 () Int)
(declare-fun x1672 () Int)
(declare-fun x1471 () Int)
(declare-fun x929 () Bool)
(declare-fun x827 () Int)
(declare-fun x961 () Int)
(declare-fun x174 () Int)
(declare-fun x220 () Int)
(declare-fun x599 () Int)
(declare-fun x753 () Bool)
(declare-fun x405 () Int)
(declare-fun x136 () Int)
(declare-fun x326 () Int)
(declare-fun x1428 () Bool)
(declare-fun x157 () Int)
(declare-fun x1676 () Int)
(declare-fun x2118 () Int)
(declare-fun x1482 () Bool)
(declare-fun x983 () Int)
(declare-fun x1426 () Int)
(declare-fun x526 () Bool)
(declare-fun x916 () Int)
(declare-fun x1905 () Int)
(declare-fun x379 () Int)
(declare-fun x1851 () Bool)
(declare-fun x298 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x1583 () Bool)
(declare-fun x808 () Int)
(declare-fun x1850 () Int)
(declare-fun x1965 () Int)
(declare-fun x701 () Bool)
(declare-fun x1101 () Int)
(declare-fun x1880 () Int)
(declare-fun x375 (Int) Int)
(declare-fun x1265 () Bool)
(declare-fun x277 () Bool)
(declare-fun x833 () Int)
(define-fun x730 ((x229 x229) (x408 Int)) x229 (ite ((_ is x582) x229) (x582 (x1940 x229) (+ (x818 x229) x408)) (ite ((_ is x1150) x229) (x1150 (x666 x229) (x1568 x229) (+ x408 (x674 x229))) (x2046 (+ x408 (x251 x229))))))
(define-fun x1579 ((x2235 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2235) (<= 0 x2235)) x2235 (- x2235 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1186 ((x2235 Int)) Int (ite (and (> 0 x2235) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2235)) (+ x2235 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2235))
(define-fun x1075 ((x2235 Int)) Int (ite (and (<= 0 x2235) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2235)) x2235 (ite (and (< x2235 231584178474632390847141970017375815706539969331281128078915168015826259279872) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2235)) (- x2235 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (< x2235 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2235)) (+ x2235 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1631 x2235 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x665 ((x1575 Int)) Bool (and (>= x1575 0) (< x1575 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1059 ((x1575 Int) (x958 Int)) Bool (=> (and (< 0 x1575) (< 0 x958)) (= (= (x520 (x1075 (x1495 x1575 x958)) x1575) x958) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1495 x1575 x958)))))
(define-fun x2100 ((x1575 Int) (x958 Int)) Bool (=> (and (not (= 0 x958)) (not (= x1575 0))) (and (= x958 (x520 (x1495 x1575 x958) x1575)) (= (x520 (x1495 x1575 x958) x958) x1575))))
(define-fun x1452 ((x1575 Int) (x958 Int)) Bool (=> (and (> x1575 0) (> x958 0)) (= (< (x520 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1575) x958) (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1495 x1575 x958)))))
(define-fun x1123 ((x1575 Int) (x958 Int)) Bool (and (= (x1075 (x1495 (- x1575 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x958 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1075 (x1495 x1575 x958))) (= (x1075 (x1495 x1575 x958)) (x1075 (x1495 (- x1575 115792089237316195423570985008687907853269984665640564039457584007913129639936) x958))) (= (x1075 (x1495 x1575 (- x958 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1075 (x1495 x1575 x958)))))
(define-fun x253 ((x1575 Int) (x958 Int)) Bool (and (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x958) (<= x958 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (> x1575 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1575 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (<= (x1495 (- x1575 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x958 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1575) (x520 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x958))))) (=> (and (and (> x1575 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1575)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x958) (<= x958 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x1495 x1575 (- x958 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (>= (x520 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1575) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x958)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1575) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1575)) (and (<= x958 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x958))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1575) (x520 57896044618658097711785492504343953926634992332820282019728792003956564819968 x958)) (>= (x1495 (- x1575 115792089237316195423570985008687907853269984665640564039457584007913129639936) x958) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1575) (> x1575 0)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x958) (< 0 x958))) (= (<= x1575 (x520 57896044618658097711785492504343953926634992332820282019728792003956564819967 x958)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1495 x1575 x958))))))
(define-fun x66 ((x1575 Int)) Bool (and (= 0 (x1495 0 x1575)) (= (x1495 x1575 0) 0)))
(define-fun x677 ((x1575 Int)) Bool (and (= (x1495 x1575 1) x1575) (= x1575 (x1495 1 x1575))))
(define-fun x131 ((x1575 Int)) Bool (and (x677 x1575) (x66 x1575)))
(define-fun x2168 ((x1575 Int)) Bool (and (= (x257 x1575 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1575) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1575) x1575)))
(define-fun x1312 ((x1575 Int)) Bool (and (= (x257 0 x1575) 0) (= (x257 x1575 0) 0)))
(define-fun x642 ((x1575 Int)) Bool (= x1575 (x257 x1575 x1575)))
(define-fun x880 ((x1575 Int)) Bool (and (x1312 x1575) (x642 x1575) (x2168 x1575)))
(define-fun x1474 ((x1575 Int) (x958 Int)) Bool (= (x257 x1575 x958) (x257 x958 x1575)))
(define-fun x1564 ((x1575 Int) (x958 Int)) Bool (and (=> (>= x1575 0) (>= x1575 (x257 x1575 x958))) (>= (x257 x1575 x958) 0) (=> (<= 0 x958) (>= x958 (x257 x1575 x958)))))
(define-fun x1473 ((x1575 Int) (x958 Int)) Bool (and (x1474 x1575 x958) (x1564 x1575 x958)))
(define-fun x2151 ((x1575 Int)) Bool (= (x1075 x1575) (+ (x257 x1575 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1631 x1575 32))))
(define-fun x838 ((x1575 Int)) Bool (and (x1473 x1575 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2151 x1575)))
(define-fun x132 ((x1575 Int) (x958 Int)) Bool (and (< (x1631 x1575 x958) x958) (>= (x1631 x1575 x958) 0)))
(define-fun x889 ((x1575 Int) (x958 Int)) Bool (=> (and (< 0 x958) (<= 0 x1575)) (= (= x1575 (x1631 x1575 x958)) (< x1575 x958))))
(define-fun x993 ((x1575 Int) (x958 Int)) Bool (=> (and (and (< x1575 (+ x958 x958)) (>= x1575 x958)) (< 0 x958)) (= (x1631 x1575 x958) (- x1575 x958))))
(define-fun x541 ((x1575 Int)) Bool (= 0 (x1631 0 x1575)))
(define-fun x629 ((x1575 Int)) Bool (= 0 (x1631 x1575 1)))
(define-fun x2230 ((x1575 Int)) Bool (= (x1631 x1575 x1575) 0))
(define-fun x1533 ((x1575 Int)) Bool (and (x629 x1575) (x2230 x1575) (x541 x1575)))
(define-fun x2129 ((x1575 Int)) Bool (= (x257 x1575 1099511627775) (x1631 x1575 1099511627776)))
(define-fun x1169 ((x1575 Int)) Bool (and (x1473 x1575 1099511627775) (x2129 x1575)))
(define-fun x516 ((x1575 Int)) Bool (= (x1631 x1575 1461501637330902918203684832716283019655932542976) (x257 x1575 1461501637330902918203684832716283019655932542975)))
(define-fun x1222 ((x1575 Int)) Bool (and (x516 x1575) (x1473 x1575 1461501637330902918203684832716283019655932542975)))
(define-fun x1285 ((x1575 Int)) Bool (= (x1631 x1575 26959946667150639794667015087019630673637144422540572481103610249216) (x257 x1575 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x1824 ((x1575 Int)) Bool (and (x1285 x1575) (x1473 x1575 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x351 ((x1575 Int) (x958 Int)) Bool (=> (and (< 0 x958) (< 0 x1575)) (and (>= x1575 (x520 x1575 x958)) (<= 0 (x520 x1575 x958)))))
(define-fun x1887 ((x1575 Int) (x958 Int)) Bool (=> (and (and (>= x1575 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1575)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x958) (>= x958 1))) (and (< (x520 x1575 x958) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= (x520 x1575 x958) 0))))
(define-fun x906 ((x1575 Int) (x958 Int)) Bool (=> (and (> x958 1) (> x1575 x958)) (< (x520 x1575 x958) x1575)))
(define-fun x312 ((x1575 Int) (x958 Int)) Bool (=> (and (< 0 x958) (> x1575 0)) (= (= (x520 x1575 x958) 0) (> x958 x1575))))
(define-fun x601 ((x1575 Int) (x958 Int)) Bool (=> (and (> x1575 0) (> x958 0)) (and (>= x1575 (x1495 (x520 x1575 x958) x958)) (< (- x1575 x958) (x1495 (x520 x1575 x958) x958)))))
(define-fun x1464 ((x1575 Int) (x958 Int)) Bool (and (x312 x1575 x958) (x351 x1575 x958) (x906 x1575 x958) (x601 x1575 x958) (x1887 x1575 x958)))
(define-fun x1346 ((x1575 Int)) Bool (= (x520 0 x1575) 0))
(define-fun x2076 ((x1575 Int)) Bool (= (x520 x1575 1) x1575))
(define-fun x173 ((x1575 Int)) Bool (=> (not (= x1575 0)) (= (x520 x1575 x1575) 1)))
(define-fun x2183 ((x1575 Int)) Bool (and (x1346 x1575) (x2076 x1575) (x173 x1575)))
(define-fun x374 ((x1575 Int) (x958 Int)) Bool (= (x1495 x958 x1575) (x1495 x1575 x958)))
(define-fun x1367 ((x1575 Int) (x958 Int)) Bool (and (=> (and (< 0 x1575) (< 0 x958)) (< 0 (x1495 x1575 x958))) (=> (and (< x958 0) (> x1575 0)) (> 0 (x1495 x1575 x958))) (=> (and (> 0 x958) (> 0 x1575)) (> (x1495 x1575 x958) 0)) (=> (and (< 0 x958) (< x1575 0)) (< (x1495 x1575 x958) 0))))
(define-fun x565 ((x1575 Int) (x958 Int)) Bool (and (x1367 x1575 x958) (x2100 x1575 x958) (x253 x1575 x958) (x1123 x1575 x958) (x374 x1575 x958) (x1452 x1575 x958) (x1059 x1575 x958)))
(define-fun x1096 ((x1575 Int)) Bool (= (x1631 x1575 18446744073709551616) (x257 x1575 18446744073709551615)))
(define-fun x725 ((x1575 Int)) Bool (and (x1096 x1575) (x1473 x1575 18446744073709551615)))
(define-fun x321 ((x1575 Int)) Bool (= (x1631 x1575 452312848583266388373324160190187140051835877600158453279131187530910662656) (x257 x1575 452312848583266388373324160190187140051835877600158453279131187530910662655)))
(define-fun x955 ((x1575 Int)) Bool (and (x321 x1575) (x1473 x1575 452312848583266388373324160190187140051835877600158453279131187530910662655)))
(define-fun x658 ((x1575 Int)) Bool (= (x1631 x1575 256) (x257 x1575 255)))
(define-fun x2026 ((x1575 Int)) Bool (and (x658 x1575) (x1473 x1575 255)))
(define-fun x1207 ((x571 Int)) Int (x375 x571))
(define-fun x1820 ((x571 Int)) Int (ite (= x571 288) x729 (x420 x571)))
(define-fun x1981 ((x571 x229)) Int (x391 x571))
(define-fun x275 ((x571 x229)) Int (x634 x571))
(define-fun x2104 ((x571 x229)) Int (x1475 x571))
(define-fun x1026 ((x571 x229)) Int (x591 x571))
(define-fun x444 ((x571 x229)) Int (ite (= x571 x1374) 1 (x1026 x571)))
(define-fun x1717 ((x571 x229)) Int (ite (= x1374 x571) x848 (x1981 x571)))
(define-fun x1274 ((x571 x229)) Int (ite (= x571 x1374) 0 (x1717 x571)))
(define-fun x188 ((x571 Int)) Int (ite (= x571 x24) x1595 (x1820 x571)))
(define-fun x1796 ((x571 Int)) Int (ite (and (< x571 (+ x1595 x1713)) (>= x571 x1713)) (x375 (+ (- x571 x1713) x1873)) (x188 x571)))
(define-fun x1129 ((x571 Int)) Int (ite (= x1807 x571) 0 (x1796 x571)))
(define-fun x249 ((x571 Int)) Int (ite (= x571 320) x24 (x1129 x571)))
(define-fun x1073 ((x571 Int)) Int (ite x434 (x1820 x571) (x249 x571)))
(define-fun x149 ((x571 Int)) Int (ite (= x147 x571) x622 (x1073 x571)))
(define-fun x449 ((x571 Int)) Int (ite (= x1183 x571) x1708 (x149 x571)))
(define-fun x1964 ((x571 Int)) Int (ite (and (>= x571 x1593) (< x571 (+ x1708 x1593))) (x375 (+ x558 (- x571 x1593))) (x449 x571)))
(define-fun x2069 ((x571 Int)) Int (ite (= x540 x571) 0 (x1964 x571)))
(define-fun x1974 ((x571 Int)) Int (ite (= x571 x1709) x1183 (x2069 x571)))
(define-fun x345 ((x571 Int)) Int (ite (= x72 x571) x2143 (x1974 x571)))
(define-fun x751 ((x571 Int)) Int (ite (and (>= x571 x831) (< x571 (+ x831 x2143))) (x375 (+ (- x571 x831) x1987)) (x345 x571)))
(define-fun x2255 ((x571 Int)) Int (ite (= x42 x571) 0 (x751 x571)))
(define-fun x538 ((x571 Int)) Int (ite (= x1362 x571) x72 (x2255 x571)))
(define-fun x366 ((x571 Int)) Int (ite (= x1599 x571) x2163 (x538 x571)))
(define-fun x2128 ((x571 Int)) Int (ite (= x571 x616) x1240 (x366 x571)))
(define-fun x949 ((x571 Int)) Int (ite (= x571 x308) x757 (x2128 x571)))
(define-fun x623 ((x571 Int)) Int (ite (= x940 x571) x576 (x949 x571)))
(define-fun x1630 ((x571 Int)) Int (ite (= x571 x1618) x1496 (x623 x571)))
(define-fun x152 ((x571 Int)) Int (ite (= x571 x1514) x22 (x1630 x571)))
(define-fun x1920 ((x571 Int)) Int (ite (= x571 x1412) x337 (x152 x571)))
(define-fun x1355 ((x571 Int)) Int (ite (= x571 x1094) x1709 (x1920 x571)))
(define-fun x1734 ((x571 Int)) Int (ite x844 (x149 x571) (x1355 x571)))
(define-fun x1457 ((x571 Int)) Int (ite (= x571 x122) x916 (x1734 x571)))
(define-fun x1203 ((x571 Int)) Int (ite (= x571 x1376) x1752 (x1457 x571)))
(define-fun x617 ((x571 Int)) Int (ite (= x571 x159) x664 (x1203 x571)))
(define-fun x502 ((x571 Int)) Int (ite (= x1067 x571) x186 (x617 x571)))
(define-fun x529 ((x571 Int)) Int (ite (= x571 x236) x551 (x502 x571)))
(define-fun x468 ((x571 Int)) Int (ite (= x1093 x571) x1376 (x529 x571)))
(define-fun x967 ((x571 Int)) Int (ite x1032 (x1457 x571) (x468 x571)))
(define-fun x327 ((x571 Int)) Int (ite (= x597 x571) x631 (x967 x571)))
(define-fun x315 ((x571 Int)) Int (ite (= x1883 x571) x1804 (x327 x571)))
(define-fun x635 ((x571 Int)) Int (ite (and (> (+ x1804 x1736) x571) (<= x1736 x571)) (x375 (+ (- x571 x1736) x344)) (x315 x571)))
(define-fun x59 ((x571 Int)) Int (ite (= x607 x571) 0 (x635 x571)))
(define-fun x360 ((x571 Int)) Int (ite (= x571 x833) x1883 (x59 x571)))
(define-fun x585 ((x571 Int)) Int (ite x826 (x327 x571) (x360 x571)))
(define-fun x1006 ((x571 Int)) Int (ite (= x1661 x571) x36 (x585 x571)))
(define-fun x1427 ((x571 Int)) Int (ite (= x2209 x571) x1548 (x1006 x571)))
(define-fun x1801 ((x571 Int)) Int (ite (and (>= x571 x647) (> (+ x647 x1548) x571)) (x375 (+ x808 (- x571 x647))) (x1427 x571)))
(define-fun x1030 ((x571 Int)) Int (ite (= x571 x1547) 0 (x1801 x571)))
(define-fun x681 ((x571 Int)) Int (ite (= x959 x571) x2209 (x1030 x571)))
(define-fun x150 ((x571 Int)) Int (ite (= x571 x794) x1098 (x681 x571)))
(define-fun x775 ((x571 Int)) Int (ite (and (> (+ x1740 x1098) x571) (<= x1740 x571)) (x375 (+ (- x571 x1740) x1448)) (x150 x571)))
(define-fun x726 ((x571 Int)) Int (ite (= x1415 x571) 0 (x775 x571)))
(define-fun x476 ((x571 Int)) Int (ite (= x571 x938) x794 (x726 x571)))
(define-fun x1649 ((x571 Int)) Int (ite (= x571 x1636) x211 (x476 x571)))
(define-fun x796 ((x571 Int)) Int (ite (= x571 x868) x1802 (x1649 x571)))
(define-fun x89 ((x571 Int)) Int (ite (= x418 x571) x116 (x796 x571)))
(define-fun x621 ((x571 Int)) Int (ite (= x571 x734) x1471 (x89 x571)))
(define-fun x1335 ((x571 Int)) Int (ite (= x571 x1062) x1379 (x621 x571)))
(define-fun x1831 ((x571 Int)) Int (ite (= x571 x2060) x1589 (x1335 x571)))
(define-fun x1632 ((x571 Int)) Int (ite (= x557 x571) x507 (x1831 x571)))
(define-fun x1654 ((x571 Int)) Int (ite (= x571 x1320) x959 (x1632 x571)))
(define-fun x2124 ((x571 Int)) Int (ite x1997 (x1006 x571) (x1654 x571)))
(define-fun x1638 ((x571 Int)) Int (ite (= x1176 x571) x2055 (x2124 x571)))
(define-fun x1288 ((x571 Int)) Int (ite (= x571 x108) x384 (x1638 x571)))
(define-fun x103 ((x571 Int)) Int (ite (= x474 x571) x1023 (x1288 x571)))
(define-fun x1132 ((x571 Int)) Int (ite (= x571 x338) x390 (x103 x571)))
(define-fun x909 ((x571 Int)) Int (ite (= x1902 x571) x1884 (x1132 x571)))
(define-fun x139 ((x571 Int)) Int (ite (= x571 x1205) x108 (x909 x571)))
(define-fun x2146 ((x571 Int)) Int (ite x1406 (x1638 x571) (x139 x571)))
(define-fun x438 ((x571 Int)) Int (ite (= x447 x571) 22140752835961941075817313386879028057460502132199729129551447365926944505856 (x2146 x571)))
(define-fun x1685 ((x571 Int)) Int (ite (= x790 x571) x886 (x438 x571)))
(define-fun x463 ((x571 Int)) Int (ite (= x280 x571) 320 (x1685 x571)))
(define-fun x1120 ((x571 Int)) Int (ite (= x305 x571) x1056 (x463 x571)))
(define-fun x1891 ((x571 Int)) Int (ite (= x571 x1432) x1542 (x1120 x571)))
(define-fun x235 ((x571 Int)) Int (ite (= x571 x1866) x151 (x1891 x571)))
(define-fun x320 ((x571 Int)) Int (ite (= x571 x2253) x542 (x235 x571)))
(define-fun x1407 ((x571 Int)) Int (ite (= x2034 x571) x1462 (x320 x571)))
(define-fun x738 ((x571 Int)) Int (ite x58 (x320 x571) (ite x1675 (x235 x571) (ite x1646 (x1891 x571) (ite x2252 (x1120 x571) (x1407 x571))))))
(define-fun x888 ((x571 Int)) Int (ite (= x571 x1068) 0 (x738 x571)))
(define-fun x1381 ((x571 Int)) Int (ite x228 (x738 x571) (x888 x571)))
(define-fun x1282 ((x571 Int)) Int (ite (= x2170 x571) x1784 (x1381 x571)))
(define-fun x73 ((x571 Int)) Int (ite (= x571 x287) x1087 (x1282 x571)))
(define-fun x787 ((x571 Int)) Int (ite (= x263 x571) x184 (x73 x571)))
(define-fun x2140 ((x571 Int)) Int (ite (= x571 x1836) x1298 (x787 x571)))
(define-fun x2200 ((x571 Int)) Int (ite (= x571 x1927) 288 (x2140 x571)))
(define-fun x1228 ((x571 Int)) Int (ite (= x1438 x571) x107 (x2200 x571)))
(define-fun x1667 ((x571 Int)) Int (ite (= x1877 x571) x1013 (x1228 x571)))
(define-fun x1923 ((x571 Int)) Int (ite (= x1613 x571) x1919 (x1667 x571)))
(define-fun x266 ((x571 Int)) Int (ite (= x571 x2251) x1254 (x1923 x571)))
(define-fun x458 ((x571 Int)) Int (ite (= x571 x358) x910 (x266 x571)))
(define-fun x1041 ((x571 Int)) Int (ite x753 (x266 x571) (ite x1552 (x1923 x571) (ite x415 (x1667 x571) (ite x624 (x1228 x571) (x458 x571))))))
(define-fun x1947 ((x571 Int)) Int (ite (= x1926 x571) 0 (x1041 x571)))
(define-fun x2116 ((x571 Int)) Int (ite x164 (x1041 x571) (x1947 x571)))
(define-fun x1955 ((x571 Int)) Int (ite (= x1835 x571) x1943 (x2116 x571)))
(define-fun x1164 ((x571 Int)) Int (ite (= x571 x1409) x1491 (x1955 x571)))
(define-fun x1091 ((x571 Int)) Int (ite (= x87 x571) x535 (x1164 x571)))
(define-fun x1637 ((x571 Int)) Int (ite (= x907 x571) x1965 (x1091 x571)))
(define-fun x2109 ((x571 Int)) Int (ite (= x357 x571) x156 (x1637 x571)))
(define-fun x284 ((x571 Int)) Int (ite (= x571 x403) x2058 (x2109 x571)))
(define-fun x1394 ((x571 Int)) Int (ite x1529 (x2109 x571) (ite x1147 (x1637 x571) (ite x1674 (x1091 x571) (ite x277 (x1164 x571) (x284 x571))))))
(define-fun x489 ((x571 Int)) Int (ite (= x2191 x571) 0 (x1394 x571)))
(define-fun x2202 ((x571 Int)) Int (ite x1272 (x1394 x571) (x489 x571)))
(define-fun x386 ((x571 Int)) Int (ite (= x571 x2098) (ite x807 1 0) (x2202 x571)))
(define-fun x1603 ((x571 Int)) Int (ite (= x571 x2084) x683 (x386 x571)))
(define-fun x1184 ((x571 Int)) Int (ite (= x571 x1167) x1868 (x1603 x571)))
(define-fun x2157 ((x571 Int)) Int (ite (= x571 x187) x1881 (x1184 x571)))
(define-fun x1243 ((x571 Int)) Int (ite (= x2092 x571) x1980 (x2157 x571)))
(define-fun x63 ((x571 Int)) Int (ite (= x1121 x571) x1668 (x1243 x571)))
(define-fun x1725 ((x571 Int)) Int (ite (= x571 x451) x1022 (x63 x571)))
(define-fun x1878 ((x571 Int)) Int (ite (= x1510 x571) x373 (x1725 x571)))
(define-fun x957 ((x571 Int)) Int (ite (= x571 x1269) x1880 (x1878 x571)))
(define-fun x281 ((x571 Int)) Int (ite (= x293 x571) x1275 (x957 x571)))
(define-fun x710 ((x571 Int)) Int (ite (= x571 x1809) x189 (x281 x571)))
(define-fun x661 ((x571 Int)) Int (ite (and (>= x571 x447) (> (+ 0 x447) x571)) (x210 (+ 0 (- x571 x447))) (x710 x571)))
(define-fun x348 ((x571 Int)) Int (ite x2166 (x2146 x571) (ite x2195 (x661 x571) (x710 x571))))
(define-fun x1530 ((x571 x229)) Int (ite x2166 (x407 x571) (ite x2195 (x1900 x571) (x407 x571))))
(define-fun x392 ((x571 x229)) Int (ite x2166 (x203 x571) (ite x2195 (x204 x571) (x203 x571))))
(define-fun x1078 ((x571 x229)) Int (ite x2166 (x780 x571) (ite x2195 (x920 x571) (x780 x571))))
(define-fun x1131 ((x571 x229)) Int (ite x2166 (x371 x571) (ite x2195 (x377 x571) (x371 x571))))
(define-fun x1705 ((x571 x229)) Int (ite x2166 (x119 x571) (ite x2195 (x1803 x571) (x119 x571))))
(define-fun x856 ((x571 x229)) Int (ite x2166 (x394 x571) (ite x2195 (x2066 x571) (x394 x571))))
(define-fun x850 ((x571 x229)) Int (ite x2166 (x1323 x571) (ite x2195 (x1173 x571) (x1323 x571))))
(define-fun x2162 ((x571 x229)) Int (ite x2166 (x1214 x571) (ite x2195 (x1819 x571) (x1214 x571))))
(define-fun x1766 ((x571 x229)) Int (ite x2166 (x523 x571) (ite x2195 (x1501 x571) (x523 x571))))
(define-fun x27 ((x571 Int)) Int (ite (= x571 x1735) x1290 (x348 x571)))
(define-fun x713 ((x571 Int)) Int (ite (= x571 x1721) x1875 (x27 x571)))
(define-fun x2239 ((x571 Int)) Int (ite (and (> (+ x1911 x1875) x571) (>= x571 x1911)) (x375 (+ (- x571 x1911) x1869)) (x713 x571)))
(define-fun x1332 ((x571 Int)) Int (ite (= x571 x330) 0 (x2239 x571)))
(define-fun x2125 ((x571 Int)) Int (ite (= x769 x571) x1721 (x1332 x571)))
(define-fun x452 ((x571 Int)) Int (ite x1546 (x27 x571) (x2125 x571)))
(define-fun x1747 ((x571 Int)) Int (ite (= x571 x1061) x930 (x452 x571)))
(define-fun x1664 ((x571 Int)) Int (ite (= x43 x571) x704 (x1747 x571)))
(define-fun x432 ((x571 Int)) Int (ite (and (<= x1444 x571) (< x571 (+ x704 x1444))) (x375 (+ x1118 (- x571 x1444))) (x1664 x571)))
(define-fun x466 ((x571 Int)) Int (ite (= x2217 x571) 0 (x432 x571)))
(define-fun x291 ((x571 Int)) Int (ite (= x571 x1504) x43 (x466 x571)))
(define-fun x1308 ((x571 Int)) Int (ite (= x1431 x571) x283 (x291 x571)))
(define-fun x857 ((x571 Int)) Int (ite (and (> (+ x1592 x283) x571) (>= x571 x1592)) (x375 (+ x2178 (- x571 x1592))) (x1308 x571)))
(define-fun x708 ((x571 Int)) Int (ite (= x1939 x571) 0 (x857 x571)))
(define-fun x628 ((x571 Int)) Int (ite (= x571 x1812) x1431 (x708 x571)))
(define-fun x397 ((x571 Int)) Int (ite (= x1691 x571) x1070 (x628 x571)))
(define-fun x772 ((x571 Int)) Int (ite (= x571 x237) x69 (x397 x571)))
(define-fun x650 ((x571 Int)) Int (ite (= x571 x1156) x214 (x772 x571)))
(define-fun x522 ((x571 Int)) Int (ite (= x571 x2050) x1498 (x650 x571)))
(define-fun x2070 ((x571 Int)) Int (ite (= x1197 x571) x1359 (x522 x571)))
(define-fun x1931 ((x571 Int)) Int (ite (= x571 x163) x1794 (x2070 x571)))
(define-fun x648 ((x571 Int)) Int (ite (= x2022 x571) x442 (x1931 x571)))
(define-fun x1241 ((x571 Int)) Int (ite (= x571 x462) x1504 (x648 x571)))
(define-fun x1239 ((x571 Int)) Int (ite x1986 (x1747 x571) (x1241 x571)))
(define-fun x1781 ((x571 Int)) Int (ite (= x571 x1724) x1421 (x1239 x571)))
(define-fun x2139 ((x571 Int)) Int (ite (= x652 x571) x117 (x1781 x571)))
(define-fun x1256 ((x571 Int)) Int (ite (= x571 x2241) x2052 (x2139 x571)))
(define-fun x1602 ((x571 Int)) Int (ite (= x1151 x571) x2180 (x1256 x571)))
(define-fun x2027 ((x571 Int)) Int (ite (= x265 x571) x1988 (x1602 x571)))
(define-fun x521 ((x571 Int)) Int (ite (= x698 x571) x652 (x2027 x571)))
(define-fun x1860 ((x571 Int)) Int (ite x2080 (x1781 x571) (x521 x571)))
(define-fun x669 ((x571 Int)) Int (ite (= x571 x46) x592 (x1860 x571)))
(define-fun x691 ((x571 Int)) Int (ite (= x875 x571) 96 (x669 x571)))
(define-fun x1408 ((x571 Int)) Int (ite (= x1260 x571) x1960 (x691 x571)))
(define-fun x952 ((x571 Int)) Int (ite (= x732 x571) x736 (x1408 x571)))
(define-fun x575 ((x571 Int)) Int (ite x433 (x1408 x571) (x952 x571)))
(define-fun x564 ((x571 Int)) Int (ite (= x571 x1745) 0 (x575 x571)))
(define-fun x454 ((x571 Int)) Int (ite x613 (x575 x571) (x564 x571)))
(define-fun x2226 ((x571 Int)) Int (ite (= x571 x773) x1064 (x454 x571)))
(define-fun x2088 ((x571 Int)) Int (ite (= x571 x2003) x1827 (x2226 x571)))
(define-fun x2236 ((x571 Int)) Int (ite (= x571 x1478) x143 (x2088 x571)))
(define-fun x282 ((x571 Int)) Int (ite (= x571 x1271) 13116146399946975302596254860212112502091447646307958763727216123866297401344 (x2236 x571)))
(define-fun x843 ((x571 Int)) Int (ite (= x571 x560) x104 (x282 x571)))
(define-fun x1085 ((x571 Int)) Int (ite (= x1192 x571) 64 (x843 x571)))
(define-fun x1177 ((x571 Int)) Int (ite (= x571 x2081) x885 (x1085 x571)))
(define-fun x2188 ((x571 Int)) Int (ite (= x467 x571) x246 (x1177 x571)))
(define-fun x1925 ((x571 Int)) Int (ite x1571 (x1177 x571) (x2188 x571)))
(define-fun x1396 ((x571 Int)) Int (ite (= x2111 x571) 0 (x1925 x571)))
(define-fun x694 ((x571 Int)) Int (ite x2031 (x1925 x571) (x1396 x571)))
(define-fun x26 ((x571 Int)) Int (ite (and (> (+ x1271 0) x571) (<= x1271 x571)) (x1069 (+ (- x571 x1271) 0)) (x694 x571)))
(define-fun x1767 ((x571 Int)) Int (ite x943 (x26 x571) (x694 x571)))
(define-fun x1430 ((x571 Int)) Int (ite (= x1271 x571) x1522 (x1767 x571)))
(define-fun x314 ((x571 Int)) Int (ite (and (> (+ x185 x1522) x571) (<= x185 x571)) (x1069 (+ 0 (- x571 x185))) (x1430 x571)))
(define-fun x1019 ((x571 Int)) Int (ite (= x1178 x571) x1339 (x314 x571)))
(define-fun x120 ((x571 x229)) Int (ite x299 (x850 x571) (ite x943 (x639 x571) (x850 x571))))
(define-fun x1773 ((x571 Int)) Int (ite (= x571 x573) x816 (x1019 x571)))
(define-fun x455 ((x571 Int)) Int (ite x1361 (x1019 x571) (x1773 x571)))
(define-fun x2120 ((x571 Int)) Int (ite (= x1957 x571) 0 (x455 x571)))
(define-fun x169 ((x571 Int)) Int (ite x299 (x1860 x571) (ite x1517 (x455 x571) (x2120 x571))))
(define-fun x1946 ((x571 x229)) Int (ite x299 (x1705 x571) (ite x943 (x1682 x571) (x1705 x571))))
(define-fun x318 ((x571 x229)) Int (ite x299 (x1530 x571) (ite x943 (x479 x571) (x1530 x571))))
(define-fun x1553 ((x571 x229)) Int (ite x299 (x1078 x571) (ite x943 (x492 x571) (x1078 x571))))
(define-fun x1652 ((x571 x229)) Int (ite x299 (x1131 x571) (ite x943 (x208 x571) (x1131 x571))))
(define-fun x682 ((x571 Int)) Int (ite (= x571 x2219) 2428475159928928253380189918045730325133814103720850528466242065960167014400 (x169 x571)))
(define-fun x819 ((x571 Int)) Int (ite (= x342 x571) x359 (x682 x571)))
(define-fun x849 ((x571 Int)) Int (ite (= 128 x571) 89953063794570797914675343120038501642627609741519254829220540789936042803200 (x380 x571)))
(define-fun x1856 ((x571 Int)) Int (ite (= x571 132) x252 (x849 x571)))
(define-fun x1366 ((x571 Int)) Int (ite (= x571 164) x306 (x1856 x571)))
(define-fun x286 ((x571 Int)) Int (ite (= x2219 x571) x1479 (x819 x571)))
(define-fun x138 ((x571 Int)) Int (ite (= x571 x71) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x286 x571)))
(define-fun x2135 ((x571 Int)) Int (ite (= x1573 x571) x2072 (x138 x571)))
(define-fun x1081 ((x571 Int)) Int (ite (= x71 x571) x2159 (x2135 x571)))
(define-fun x364 ((x571 Int)) Int (ite (= x1513 x571) x1317 (x1081 x571)))
(define-fun x1304 ((x571 Int)) Int (ite (= x571 x901) x2078 (x364 x571)))
(define-fun x1775 ((x571 Int)) Int (ite (= x571 x1273) x2215 (x1304 x571)))
(define-fun x2089 ((x571 Int)) Int (ite (= x571 x1455) x409 (x1775 x571)))
(define-fun x325 ((x571 Int)) Int (ite (= x1596 x571) 13116146399946975302596254860212112502091447646307958763727216123866297401344 (x2089 x571)))
(define-fun x425 ((x571 Int)) Int (ite (= x1746 x571) x1972 (x325 x571)))
(define-fun x1341 ((x571 Int)) Int (ite (= x571 x1958) 64 (x425 x571)))
(define-fun x2181 ((x571 Int)) Int (ite (= x1497 x571) x2103 (x1341 x571)))
(define-fun x871 ((x571 Int)) Int (ite (= x571 x1083) x747 (x2181 x571)))
(define-fun x812 ((x571 Int)) Int (ite (= x667 x571) x684 (x871 x571)))
(define-fun x1521 ((x571 Int)) Int (ite (= x324 x571) x1984 (x812 x571)))
(define-fun x85 ((x571 Int)) Int (ite (= x1188 x571) x379 (x1521 x571)))
(define-fun x1116 ((x571 Int)) Int (ite x2247 (x1521 x571) (ite x328 (x812 x571) (ite x1181 (x871 x571) (ite x1035 (x2181 x571) (x85 x571))))))
(define-fun x94 ((x571 Int)) Int (ite (= x1295 x571) 0 (x1116 x571)))
(define-fun x279 ((x571 Int)) Int (ite x499 (x1116 x571) (x94 x571)))
(define-fun x1170 ((x571 Int)) Int (ite (and (>= x571 x1596) (> (+ 0 x1596) x571)) (x1443 (+ (- x571 x1596) 0)) (x279 x571)))
(define-fun x1791 ((x571 Int)) Int (ite x1935 (x1170 x571) (x279 x571)))
(define-fun x853 ((x571 Int)) Int (ite (= x1596 x571) x1235 (x1791 x571)))
(define-fun x1758 ((x571 Int)) Int (ite (and (< x571 (+ x1235 x57)) (<= x57 x571)) (x1443 (+ 0 (- x571 x57))) (x853 x571)))
(define-fun x1 ((x571 Int)) Int (ite (= x1989 x571) x1917 (x1758 x571)))
(define-fun x2019 ((x571 Int)) Int (ite (= x571 x1914) x1751 (x1 x571)))
(define-fun x146 ((x571 Int)) Int (ite (= x571 x842) x1137 (x2019 x571)))
(define-fun x1733 ((x571 Int)) Int (ite (= x2097 x571) x222 (x146 x571)))
(define-fun x460 ((x571 x229)) Int (ite x1935 (x2148 x571) (x1553 x571)))
(define-fun x322 ((x571 x229)) Int (ite (= (x113 x1317) x571) x347 (x460 x571)))
(define-fun x1277 ((x571 x229)) Int (ite (= (x113 x1898) x571) x1045 (x322 x571)))
(define-fun x329 ((x571 x229)) Int (ite (= (x113 x1898) x571) x1358 (x1277 x571)))
(define-fun x1777 ((x571 x229)) Int (ite (= x571 (x113 x1317)) x1242 (x329 x571)))
(define-fun x1512 ((x571 x229)) Int (ite x1623 (x460 x571) (ite x509 (ite x1650 (x460 x571) (ite x563 (x1277 x571) (x1777 x571))) (x460 x571))))
(define-fun x578 ((x571 Int)) Int (ite (= x571 x197) x1928 (x1733 x571)))
(define-fun x166 ((x571 Int)) Int (ite x1008 (x1733 x571) (ite x1502 (x146 x571) (ite x49 (x2019 x571) (ite x1673 (x1 x571) (x578 x571))))))
(define-fun x1704 ((x571 Int)) Int (ite (= x571 x966) 0 (x166 x571)))
(define-fun x1978 ((x571 Int)) Int (ite x697 (x166 x571) (x1704 x571)))
(define-fun x1077 ((x571 Int)) Int (ite (= x1991 x571) 63696388041471822930743579425831364866188647584567569692446183701643513561088 (x1978 x571)))
(define-fun x1251 ((x571 Int)) Int (ite (= x1486 x571) x948 (x1077 x571)))
(define-fun x2038 ((x571 Int)) Int (ite (= x8 x571) x2078 (x1251 x571)))
(define-fun x803 ((x571 Int)) Int (ite (= x571 x543) x1076 (x2038 x571)))
(define-fun x110 ((x571 x229)) Int (ite x943 (x939 x571) (x2162 x571)))
(define-fun x2261 ((x571 x229)) Int (ite x1935 (x183 x571) (ite x299 (x2162 x571) (x110 x571))))
(define-fun x1847 ((x571 Int)) Int (ite (= x571 128) 89953063794570797914675343120038501642627609741519254829220540789936042803200 (x1348 x571)))
(define-fun x216 ((x571 Int)) Int (ite (= x571 132) x1576 (x1847 x571)))
(define-fun x1331 ((x571 Int)) Int (ite (= 164 x571) x316 (x216 x571)))
(define-fun x25 ((x571 x229)) Int (ite x1935 (x1199 x571) (x120 x571)))
(define-fun x1494 ((x571 Int)) Int (ite (= x571 128) x234 (x1331 x571)))
(define-fun x2237 ((x571 Int)) Int (ite x1420 (x1331 x571) (x1494 x571)))
(define-fun x646 ((x571 Int)) Int (ite (= x571 x317) x288 (x2237 x571)))
(define-fun x1655 ((x571 Int)) Int (ite (= x1567 x571) x1029 (x646 x571)))
(define-fun x1748 ((x571 Int)) Int (ite (= x571 x2221) x2087 (x1655 x571)))
(define-fun x1594 ((x571 Int)) Int (ite (= x571 x1387) x1047 (x1748 x571)))
(define-fun x1774 ((x571 Int)) Int (ite x1229 (x1748 x571) (ite x227 (x1655 x571) (ite x519 (x646 x571) (ite x48 (x2237 x571) (x1594 x571))))))
(define-fun x1932 ((x571 Int)) Int (ite (= x571 x1714) 0 (x1774 x571)))
(define-fun x1193 ((x571 Int)) Int (ite x1168 (x1774 x571) (x1932 x571)))
(define-fun x2045 ((x571 x229)) Int (ite x1935 (x2127 x571) (x1946 x571)))
(define-fun x1886 ((x571 x229)) Int (ite x943 (x1750 x571) (x392 x571)))
(define-fun x2110 ((x571 x229)) Int (ite x1935 (x743 x571) (ite x299 (x392 x571) (x1886 x571))))
(define-fun x80 ((x571 x229)) Int (ite (= x571 x2033) x748 (x2110 x571)))
(define-fun x1292 ((x571 x229)) Int (ite x943 (x1605 x571) (x1766 x571)))
(define-fun x608 ((x571 x229)) Int (ite x1935 (x1227 x571) (ite x299 (x1766 x571) (x1292 x571))))
(define-fun x1119 ((x571 x229)) Int (ite (= x571 x915) x534 (x608 x571)))
(define-fun x341 ((x571 x229)) Int (ite x943 (x428 x571) (x856 x571)))
(define-fun x2011 ((x571 x229)) Int (ite x1935 (x2186 x571) (ite x299 (x856 x571) (x341 x571))))
(define-fun x1459 ((x571 Int)) Int (ite (= 128 x571) x1218 (x1057 x571)))
(define-fun x1049 ((x571 Int)) Int (ite (= 0 x571) x1369 (x1039 x571)))
(define-fun x1194 ((x571 Int)) Int (ite x1102 (x1039 x571) (x1049 x571)))
(define-fun x1375 ((x571 Int)) Int (ite x1650 (x689 x571) (x1194 x571)))
(define-fun x797 ((x571 Int)) Int (ite (= x571 x477) x2224 (x256 x571)))
(define-fun x1191 ((x571 Int)) Int (ite (and (> (+ x2224 x1509) x571) (>= x571 x1509)) (x1375 (+ (- x571 x1509) 0)) (x55 x571)))
(define-fun x427 ((x571 Int)) Int (ite x1267 (x55 x571) (x1191 x571)))
(define-fun x2138 ((x571 Int)) Int (ite x1267 (x256 x571) (x797 x571)))
(define-fun x1405 ((x571 Int)) Int (ite (= x1995 x571) x198 (x663 x571)))
(define-fun x1580 ((x571 Int)) Int (ite (= x571 x290) x1317 (x1405 x571)))
(define-fun x453 ((x571 Int)) Int (ite (= x1742 x571) x271 (x1580 x571)))
(define-fun x1601 ((x571 Int)) Int (ite (= x571 x1726) x1333 (x453 x571)))
(define-fun x517 ((x571 Int)) Int (ite (= 128 x571) x678 (x1366 x571)))
(define-fun x1707 ((x571 Int)) Int (ite x960 (x1366 x571) (x517 x571)))
(define-fun x1921 ((x571 Int)) Int (ite (= x571 0) x1479 (x1565 x571)))
(define-fun x1429 ((x571 Int)) Int (ite (= 0 x571) x2159 (x1762 x571)))
(define-fun x2233 ((x571 Int)) Int (ite (= 0 x571) x678 (x1053 x571)))
(define-fun x869 ((x571 Int)) Int (ite (= 0 x571) x234 (x1232 x571)))
(define-fun x1922 ((x571 Int)) Int (ite x1420 (x1232 x571) (x869 x571)))
(define-fun x1839 ((x571 Int)) Int (ite (= x571 x1858) x1610 (x1614 x571)))
(define-fun x821 ((x571 Int)) Int (ite x1755 (x1057 x571) (ite x168 (x1459 x571) (x1057 x571))))
(define-fun x1910 ((x571 x229)) Int (ite (= x1954 x571) x926 (x2045 x571)))
(define-fun x1624 ((x571 Int)) Int (ite (= x571 128) x1612 (x821 x571)))
(define-fun x1660 ((x571 Int)) Int (ite (= 128 x571) (ite true 1 0) (x1624 x571)))
(define-fun x1413 ((x1575 Int) (x958 Int) (x699 Int) (x711 Int)) Bool (=> (and (<= 0 x958) (>= x711 x958) (>= x1575 0) (<= x1575 x699)) (<= (x1495 x1575 x958) (x1495 x699 x711))))
(define-fun x1124 ((x1575 Int) (x958 Int) (x699 Int) (x711 Int)) Bool (=> (= x1575 x699) (= (- (x1495 x1575 x958) (x1495 x699 x711)) (x1495 x1575 (- x958 x711)))))
(define-fun x1566 ((x1575 Int)) Bool (=> (and (not (= 1008072988 x1575)) (not (= 1461501637330902918203684832716283019655932542976 x1575)) (not (= 3414818225 x1575)) (not (= x1575 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= x1575 4294967296)) (not (= 66268296141940672851042108147304593538321322149885339258387047461996478413388 x1575)) (not (= x1575 1818647125)) (not (= x1575 115792089237316195423570985008687907853269984665640)) (not (= 1099511627776 x1575)) (not (= x1575 16156842317565293874272834530371880720966471053262404558597773956279093428224)) (not (= 2446411860 x1575)) (not (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x1575)) (not (= 2428475159928928253380189918045730325133814103720850528466242065960167014400 x1575)) (not (= x1575 452312848583266388373324160190187140051835877600158453279131187530910662655)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1575)) (not (= 1631253430 x1575)) (not (= 65535 x1575)) (not (= x1575 90077150)) (not (= x1575 404098525)) (not (= x1575 89953063794570797914675343120038501642627609741519254829220540789936042803200)) (not (= 2630586785 x1575)) (not (= x1575 22140752835961941075817313386879028057460502132199729129551447365926944505856)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1575)) (not (= x1575 2362630343)) (not (= 2961265839 x1575)) (not (= x1575 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (not (= 1949782873 x1575)) (not (= 65536 x1575)) (not (= x1575 1703538655)) (not (= 428079936 x1575)) (not (= 2835717307 x1575)) (not (= 791671133 x1575)) (not (= 265030696 x1575)) (not (= 55253086691344412491249731323735809531556945173834312332507302207468853002240 x1575)) (not (= 42559786704095985884337240924621141964881664668670750666325372487796921752598 x1575)) (not (= x1575 1997499061)) (not (= x1575 2592000)) (not (= 18446744073709551615 x1575)) (not (= x1575 13116146399946975302596254860212112502091447646307958763727216123866297401344)) (not (= 1889567281 x1575)) (not (= 2625015131 x1575)) (not (= x1575 33540519)) (not (= x1575 418493994)) (not (= 63696388041471822930743579425831364866188647584567569692446183701643513561088 x1575)) (not (= x1575 3336544575)) (not (= x1575 2307130307)) (not (= x1575 599290589)) (not (= x1575 31536000)) (not (= 1461501637330902918203684832716283019655932542975 x1575)) (not (= x1575 1000000000000000000000000000)) (not (= x1575 1099511627775)) (> x1575 10000)) (not ((_ is x2046) (x113 x1575)))))
(assert (x665 x981))
(assert (x565 x1360 x2131))
(assert (x880 x2067))
(assert (x955 x1962))
(assert (= (and x1284 x1051) x475))
(assert (x2183 x213))
(assert (x565 x1360 (- x2131 x1953)))
(assert (x1413 x1360 x2131 x90 x1979))
(assert (x131 (- x1011 x2079)))
(assert (=> (<= x559 10000) (= (x2046 x559) (x113 x559))))
(assert (x1413 x1764 x1539 x1360 x2131))
(assert (= x721 (and x134 (not x813))))
(assert (= 66268296141940672851042108147304593538321322149885339258387047461996478413388 (x1433 (x113 66268296141940672851042108147304593538321322149885339258387047461996478413388))))
(assert (x665 x1884))
(assert (and (x889 x533 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x533 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x533 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x533)) (x993 x533 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x533 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x665 x167))
(assert (x665 x1093))
(assert (x665 x1450))
(assert (x131 (- x90 x1360)))
(assert (x725 x1005))
(assert (x665 x1293))
(assert (x665 x1471))
(assert (x665 x324))
(assert (x131 (- x1011 x1539)))
(assert (x665 x833))
(assert (x665 x1012))
(assert (= (or x96 x228) x1583))
(assert (x1124 x1953 x830 x1043 x1268))
(assert (= (and x2172 x97) x740))
(assert (x665 x268))
(assert (x665 x1297))
(assert (and (x889 x248 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x248 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x248 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x248)) (x993 x248 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x248 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (and x209 x1310) x943))
(assert (x1124 x2156 x2079 x1979 x90))
(assert (x565 x830 (- x1953 x1979)))
(assert (x665 x1161))
(assert (= x399 (and x1706 (not x378))))
(assert (x1413 x1386 x2173 x1360 x2131))
(assert (x1124 x1953 x830 x302 x1195))
(assert (x1124 x1944 x2040 x1979 x90))
(assert (x665 x1397))
(assert (x131 (- x1979 x1268)))
(assert (x565 x1365 (- x213 x90)))
(assert (x880 x1354))
(assert (and (x889 x1368 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x1631 x1368 1461501637330902918203684832716283019655932542976) (* (x520 x1368 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x1368)) (x993 x1368 1461501637330902918203684832716283019655932542976) (x132 x1368 1461501637330902918203684832716283019655932542976)))
(assert (= x1158 (and x975 x1846)))
(assert (x1124 x1011 x1615 x1386 x2173))
(assert (x1124 x2131 x1360 x1539 x1764))
(assert (= (=> (and (= (< x1450 x1616) x679) (or (not x679) (and x679 (= (x1579 (+ x1450 x477)) x1714)))) x1171) x840))
(assert (x665 x533))
(assert (x665 x959))
(assert (x565 x830 (- x1953 x1011)))
(assert (x665 x1513))
(assert (x665 x1245))
(assert (x665 x252))
(assert (x665 x342))
(assert (x131 (- x1764 x1944)))
(assert (x565 x1615 (- x1011 x1764)))
(assert (x565 x1360 (- x2131 x1365)))
(assert (x665 x2177))
(assert (x665 x1749))
(assert (x665 x1037))
(assert (x665 x1511))
(assert (= (x113 1008072988) (x2046 1008072988)))
(assert (x565 x1539 (- x1764 x2079)))
(assert (x565 x2079 (- x2156 x90)))
(assert (x1124 x1386 x2173 x213 x1365))
(assert (x1413 x1979 x90 x2156 x2079))
(assert (x665 x1591))
(assert (x1464 x1994 x195))
(assert (x565 x1011 (- x1615 x1043)))
(assert (x131 (- x1365 x2040)))
(assert (x131 (- x2173 x830)))
(assert (x1124 x1195 x302 x1539 x1764))
(assert (= x701 (=> (and (= (< x1491 x1252) x1541) (or (not x1541) (and x1541 (= (x1579 (+ x115 x1491)) x2191)))) x423)))
(assert (= (and x109 x1388) x206))
(assert (and (x889 x887 32) (=> (> 32 0) (= (+ (x1631 x887 32) (* (x520 x887 32) 32)) x887)) (x993 x887 32) (x132 x887 32)))
(assert (= x1557 (x1433 (x113 x1557))))
(assert (x665 x831))
(assert (x665 x2170))
(assert (= (x1433 (x2046 599290589)) 599290589))
(assert (x1124 x1011 x1615 x90 x1979))
(assert (x1124 x1539 x1764 x1953 x830))
(assert (x1124 x1979 x90 x2040 x1944))
(assert (x665 x842))
(assert (= x614 (or x2152 (and (not x1383) x2214))))
(assert (x131 (- x1268 x1011)))
(assert (x665 x1130))
(assert (x1124 x1615 x1011 x213 x1365))
(assert (= 3414818225 (x1433 (x2046 3414818225))))
(assert (x131 (- x2131 x1979)))
(assert (x665 x1661))
(assert (x131 (- x1365 x830)))
(assert (x131 (- x2079 x1195)))
(assert (x665 x644))
(assert (x1124 x1953 x830 x1764 x1539))
(assert (= (x113 2625015131) (x2046 2625015131)))
(assert (x665 x2101))
(assert (x665 x610))
(assert (x131 (- x830 x1011)))
(assert (= (x1433 (x2046 115792089237316195423570985008687907853269984665640)) 115792089237316195423570985008687907853269984665640))
(assert (x565 x1268 (- x1043 x2156)))
(assert (x665 x1334))
(assert (x665 x2219))
(assert (x565 x1953 (- x830 x90)))
(assert (x665 x137))
(assert (x665 x1146))
(assert (x665 x365))
(assert (x1222 x1174))
(assert (= (and (not x2005) x435) x336))
(assert (x1413 x2040 x1944 x1764 x1539))
(assert (x1533 x1743))
(assert (x1124 x1764 x1539 x1386 x2173))
(assert (x131 (- x1043 x302)))
(assert (= 0 (x420 x837)))
(assert (x665 x2009))
(assert (x838 x361))
(assert (x665 x400))
(assert (= (and x378 x1706) x867))
(assert (x131 (- x1360 x1979)))
(assert (= (and x1084 x1002) x1003))
(assert (x131 (- x1195 x1615)))
(assert (x1413 x1386 x2173 x1764 x1539))
(assert (x665 x2018))
(assert (x665 x1359))
(assert (= 2592000 (x1433 (x2046 2592000))))
(assert (x665 x1311))
(assert (x1124 x2173 x1386 x2131 x1360))
(assert (x665 x57))
(assert (x565 x1268 (- x1043 x1360)))
(assert (= x10 (and x2094 (not x1996))))
(assert (x131 (- x1764 x2131)))
(assert (x1124 x830 x1953 x1979 x90))
(assert (x131 (- x302 x1386)))
(assert (= (and x1291 x895) x1281))
(assert (x665 x2013))
(assert (x665 x2050))
(assert (x565 x1268 (- x1043 x1011)))
(assert (and (x889 x512 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x512 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x512 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x512)) (x993 x512 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x512 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1413 x2040 x1944 x302 x1195))
(assert (x565 x1979 (- x90 x1360)))
(assert (x665 x762))
(assert (= (and x679 x2032) x1007))
(assert (x665 x148))
(assert (x880 x1743))
(assert (x1124 x1386 x2173 x830 x1953))
(assert (= (+ 1 (x1433 x1763)) (x1433 (x730 x1763 1))))
(assert (and (x889 x755 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x755 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x755 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x755)) (x993 x755 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x755 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x686 (or x1546 x1328)))
(assert (x665 x2259))
(assert (x131 (- x2173 x1011)))
(assert (x1124 x1539 x1764 x1195 x302))
(assert (x665 x1991))
(assert (= 0 (x420 x1633)))
(assert (x565 x1268 (- x1043 x830)))
(assert (and (x889 x755 32) (=> (> 32 0) (= (+ (x1631 x755 32) (* (x520 x755 32) 32)) x755)) (x993 x755 32) (x132 x755 32)))
(assert (x665 x1557))
(assert (x665 x865))
(assert (x665 x1342))
(assert (x565 x2173 (- x1386 x1615)))
(assert (= (or x620 (and x1208 (not x724))) x1163))
(assert (= x1857 (=> (and (and (and (= (>= 1 x1582) x1505) (= x1582 x83) (= x961 1) (= (= x2187 x1505) x1128)) (and (= x553 428079936) (= x83 x333) (= x1103 x737) (not (< 3 x333)) (= (= 0 x737) x2187) (= x2025 (x730 x2244 1)) (= (x444 x2025) x333) (< x553 2307130307) (<= x172 1461501637330902918203684832716283019655932542975) (not (> 418493994 x553)) (not (= 418493994 x553)) (= x1826 x172) (= x610 (x106 (x113 x609))) (< 0 x610) (= x2244 (x1150 (x113 x172) (x2046 2) 0)) (< x553 791671133) (= x1617 0) (< x333 256))) (and (= (x2104 x1374) x2042) (<= 0 x1519) (= x1103 x1519) (= x1826 x1125) (= x2036 (x1150 (x113 x1125) (x2046 2) 0)) (<= 0 x241) (< x848 1461501637330902918203684832716283019655932542976) (not (< x1356 2307130307)) (< x241 65536) (= (x1981 x1374) x848) (not (> 2961265839 x1356)) (> 1461501637330902918203684832716283019655932542976 x1519) (= x884 (x106 (x113 x609))) (= 3414818225 x1356) (= (x257 1099511627775 x1451) x130) (<= x241 65535) (>= 1099511627775 x2042) (= (x257 1461501637330902918203684832716283019655932542975 x1368) x964) (= (x1274 x2062) x1519) (= (x1150 (x113 x964) (x2046 2) 0) x1340) (not (= x927 0)) (<= 0 x2042) (not (< x1356 3414818225)) (< x2042 1099511627776) (<= 0 x848) (<= x848 1461501637330902918203684832716283019655932542975) (= (x275 x1374) x241) (= x1374 (x730 x1340 1)) (> x884 0) (<= x1125 1461501637330902918203684832716283019655932542975) (<= x1519 1461501637330902918203684832716283019655932542975) (= x2062 (x730 x2036 1)))) x1128)))
(assert (= (and x123 x2240) x633))
(assert (x880 18446744073709551615))
(assert (x1124 x1195 x302 x2079 x2156))
(assert (x1124 x1365 x213 x302 x1195))
(assert (x1124 x2173 x1386 x1360 x2131))
(assert (x131 (- x90 x2079)))
(assert (x665 x715))
(assert (x665 x128))
(assert (x665 x1514))
(assert (x131 (- x90 x1195)))
(assert (= (x420 x2175) 0))
(assert (x1533 x1730))
(assert (x1124 x830 x1953 x1386 x2173))
(assert (x1124 x830 x1953 x2173 x1386))
(assert (x665 x65))
(assert (= x1639 (or x82 x960)))
(assert (x665 x1409))
(assert (= (and x1264 x465) x1449))
(assert (x665 x1718))
(assert (x565 x1043 (- x1268 x1360)))
(assert (x1413 x1360 x2131 x1011 x1615))
(assert (x665 x2092))
(assert (x665 x2044))
(assert (x565 x1360 (- x2131 x2173)))
(assert (x665 x2001))
(assert (x1124 x2040 x1944 x1365 x213))
(assert (x1413 x1615 x1011 x213 x1365))
(assert (x1124 x1043 x1268 x1360 x2131))
(assert (x665 x1868))
(assert (x1124 x1764 x1539 x1011 x1615))
(assert (x880 x3))
(assert (x665 x8))
(assert (= x415 (and x501 (not x76))))
(assert (x665 x77))
(assert (x1533 x1005))
(assert (x131 (- x1386 x2079)))
(assert (x665 x1600))
(assert (and (x889 x354 32) (=> (> 32 0) (= (+ (x1631 x354 32) (* (x520 x354 32) 32)) x354)) (x993 x354 32) (x132 x354 32)))
(assert (= x121 (=> (and (= x2051 (< x1339 x917)) (or (and (= (x1579 (+ x1339 x1393)) x1957) x2051) (not x2051))) x590)))
(assert (x665 x1994))
(assert (x565 x1944 (- x2040 x302)))
(assert (x565 x213 (- x1365 x2173)))
(assert (x665 x1326))
(assert (x880 x262))
(assert (x1533 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x1124 x1011 x1615 x2131 x1360))
(assert (= (and x2227 x1738) x153))
(assert (x665 x1555))
(assert (x665 x2084))
(assert (and (x1059 1000000000000000000000000000 x271) (x1452 1000000000000000000000000000 x271) (and (= (* (- x271 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (x1495 1000000000000000000000000000 (- x271 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1495 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x271 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000000000000 (- x271 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x271 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 1000000000000000000000000000 x271) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x271)) (x1495 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x271))) (= (* 1000000000000000000000000000 x271) (x1495 1000000000000000000000000000 x271)) (x253 1000000000000000000000000000 x271) (x1123 1000000000000000000000000000 x271) (x2100 1000000000000000000000000000 x271)))
(assert (x665 x304))
(assert (x1824 x555))
(assert (x665 x2217))
(assert (= (=> (and (= x1450 x1787) (= x1297 (x460 (x113 x1317))) (= x1577 (and (< x823 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1297 0))) (= (x460 (x113 x1898)) x823)) (and (=> (and (and (= 0 x2224) (= 0 x2249)) (not x1577)) x1481) (=> (and (and (and (and (not (= x105 404098525)) (< x105 791671133) (= x1612 x951) (= (x106 (x113 x1317)) x201) (= (x1186 (- x93 4)) x914) (= x105 599290589) (= x1787 x93) (not (< x93 4)) (< x105 1631253430) (< 0 x201) (= x1317 x230) (not (< x105 265030696)) (= (or (and (= true (<= x914 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x914)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x914)) x1463) (= x93 100) (not (= x105 265030696)) (= x662 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x1788 x1206)) x883) (and (= x347 x405) (= (x460 (x113 x1317)) x405) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1045) (= (= x1898 x1317) x883) (= x1045 (x322 (x113 x1898))))) x1577) (and (=> (and (and (= x1620 (= x1788 x1206)) (= x1074 x1206)) (not x1463)) (and (=> (and (and (= x1154 (= x230 x1317)) (= x11 x230)) x1620) (and (=> (and (and (= (x2045 x50) x1979) (<= 0 x2043) (= x1612 x310) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2043) (= x50 (x1150 (x113 x1206) (x2046 1) 0)) (<= 0 x748) (<= x748 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x2043 x748) x1711) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1979) (<= 0 x1979) (= (x2110 x1278) x2043) (= (x1150 (x113 x1206) (x2046 14) 0) x1278)) x1154) (and (=> x1711 x809) (=> (and (not x1711) (and (= (x1186 (- x748 x2043)) x90) (= x2044 (ite (> x1979 x398) 1 0)) (= x398 (x520 115792089237316195423570985008687907853269984665640564039457584007913129639935 x90)) (= (ite (not x1090) 1 0) x14) (= (x257 x14 x2044) x1246) (= (= x1246 0) x353) (= (= x90 0) x1090))) (and (=> (not x353) x809) (=> (and x353 (and (= x61 (x520 x2102 1000000000000000000000000000)) (<= x1489 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1489) (= x2033 (x1150 (x113 x1206) (x2046 14) 0)) (= x1489 (x608 x915)) (= x915 (x730 x431 1)) (>= x748 0) (= (> x1489 x981) x1993) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x748) (= (x1186 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x61)) x981) (= (x1150 (x113 x1206) (x2046 14) 0) x431) (= (x1075 (x1495 x90 x1979)) x2102))) (and (=> x1993 x809) (=> (and (and (>= x1539 0) (<= x1539 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2045 x1236) x1539) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x748) (<= 0 x748) (>= x1221 0) (<= x1221 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x80 x824) x1221) (= (x1150 (x113 x230) (x2046 14) 0) x824) (= (x1579 (+ x61 x1489)) x534) (= (x1150 (x113 x230) (x2046 1) 0) x1236) (= x589 (> x1221 x748))) (not x1993)) (and (=> x589 x809) (=> (and (not x589) (and (= x1402 (= x1764 0)) (= (= x1145 0) x1757) (= (x257 x1899 x101) x1145) (= (x520 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1764) x1756) (= x101 (ite (> x1539 x1756) 1 0)) (= x1764 (x1186 (- x748 x1221))) (= x1899 (ite (not x1402) 1 0)))) (and (=> (and x1757 (and (= (> x1422 x2153) x343) (>= x748 0) (<= x748 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x730 x158 1) x1467) (>= x1422 0) (= x990 (x1075 (x1495 x1764 x1539))) (= x158 (x1150 (x113 x230) (x2046 14) 0)) (= (x1119 x1467) x1422) (= (x520 x990 1000000000000000000000000000) x1916) (<= x1422 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2153 (x1186 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1916))))) (and (=> x343 x809) (=> (and (and (= x668 (= x1317 x1206)) (= x567 (x1579 (+ x1916 x1422)))) (not x343)) (and (=> x668 x1349) (=> (and (and (= (x1150 (x113 x1206) (x2046 2) 0) x340) (= x1484 (= x2106 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x1150 (x113 x1317) x340 0) x2065) (<= 0 x2106) (<= x2106 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2011 x2065) x2106)) (not x668)) (and (=> x1484 x1357) (=> (and (= x1894 (< x2106 x1612)) (not x1484)) (and (=> (and (not x1894) (and (= (= 0 x1206) x1806) (= (x1186 (- x2106 x1612)) x1218))) (and (=> x1806 x809) (=> (and (not x1806) (= x2227 (= 0 x1317))) (and (=> x2227 x809) (=> (not x2227) x1357))))) (=> x1894 x809))))))))) (=> (not x1757) x809))))))))))) (=> (not x1154) x809))) (=> (not x1620) x809))) (=> x1463 x809))))) x1171))
(assert (x131 x930))
(assert (x565 x2156 (- x2079 x213)))
(assert (x1124 x90 x1979 x1615 x1011))
(assert (= (and x2199 x1606) x435))
(assert (x1124 x1195 x302 x1268 x1043))
(assert (x1124 x2079 x2156 x1365 x213))
(assert (x665 x1937))
(assert (= (and x1458 x91) x140))
(assert (x665 x569))
(assert (x665 x1050))
(assert (x131 (- x1268 x830)))
(assert (x131 (- x90 x1386)))
(assert (x665 x1586))
(assert (x665 x512))
(assert (x565 x1365 (- x213 x302)))
(assert (x1124 x1944 x2040 x90 x1979))
(assert (x2183 x292))
(assert (x665 x1826))
(assert (x1124 x1764 x1539 x213 x1365))
(assert (x665 x2253))
(assert (x131 (- x1979 x1365)))
(assert (= 0 (x420 x1301)))
(assert (x665 x709))
(assert (x1124 x302 x1195 x213 x1365))
(assert (x665 x808))
(assert (x665 x1984))
(assert (and (x889 x887 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x887 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x887 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x887)) (x993 x887 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x887 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x131 (- x2173 x1360)))
(assert (x565 x90 (- x1979 x2173)))
(assert (= (and (not x1482) x1001) x109))
(assert (x1413 x1615 x1011 x1360 x2131))
(assert (x1464 x258 x498))
(assert (x565 x2040 (- x1944 x1365)))
(assert (x665 x313))
(assert (and (x889 x983 32) (=> (> 32 0) (= (+ (x1631 x983 32) (* (x520 x983 32) 32)) x983)) (x993 x983 32) (x132 x983 32)))
(assert (x665 x1217))
(assert (x665 x43))
(assert (x1124 x1268 x1043 x1953 x830))
(assert (x665 x234))
(assert (x565 x2173 (- x1386 x1360)))
(assert (x665 x1727))
(assert (x665 x1919))
(assert (x665 x396))
(assert (=> (>= 10000 x301) (= (x113 x301) (x2046 x301))))
(assert (x131 (- x1953 x213)))
(assert (x1124 x90 x1979 x1539 x1764))
(assert (x665 x1362))
(assert (x131 (- x2131 x1944)))
(assert (and (x889 x262 256) (=> (> 256 0) (= (+ (x1631 x262 256) (* (x520 x262 256) 256)) x262)) (x993 x262 256) (x132 x262 256)))
(assert (x880 255))
(assert (x1413 x90 x1979 x1360 x2131))
(assert (= x1289 (and x1447 x721)))
(assert (x665 x1929))
(assert (x665 x1074))
(assert (x665 x1875))
(assert (x565 x2156 (- x2079 x1195)))
(assert (x665 x1633))
(assert (x665 x67))
(assert (x131 (- x1011 x1365)))
(assert (x665 x1250))
(assert (= 42559786704095985884337240924621141964881664668670750666325372487796921752598 (x1433 (x2046 42559786704095985884337240924621141964881664668670750666325372487796921752598))))
(assert (= (x1433 (x113 x198)) x198))
(assert (x1124 x302 x1195 x2156 x2079))
(assert (= x786 (and x720 (not x1744))))
(assert (x1124 x1360 x2131 x213 x1365))
(assert (x1124 x1268 x1043 x213 x1365))
(assert (x131 (- x1011 x213)))
(assert (x665 x1515))
(assert (x565 x1268 (- x1043 x1615)))
(assert (x665 x1544))
(assert (x2183 x1786))
(assert (x565 x1365 (- x213 x1979)))
(assert (x565 x1615 (- x1011 x2079)))
(assert (x665 x1909))
(assert (x1124 x2079 x2156 x1539 x1764))
(assert (x1464 x39 x486))
(assert (x1124 x2079 x2156 x1615 x1011))
(assert (x131 (- x2156 x1539)))
(assert (x1566 x301))
(assert (x131 (- x1195 x1386)))
(assert (x131 (- x1043 x213)))
(assert (x131 (- x213 x1979)))
(assert (x665 x995))
(assert (x665 x859))
(assert (x665 x1242))
(assert (x665 x1867))
(assert (x131 (- x2173 x90)))
(assert (x1124 x90 x1979 x1268 x1043))
(assert (= (or x1986 x1844) x606))
(assert (= (=> (and (= 1 x1805) (= x1215 32)) x712) x1350))
(assert (x565 x1615 (- x1011 x1195)))
(assert (x1124 x1011 x1615 x1944 x2040))
(assert (= (x420 x1966) 0))
(assert (x1413 x830 x1953 x1011 x1615))
(assert (= x1647 (=> (and (= x1364 (= 0 x154)) (or (and (and (= x2249 x154) (= x2224 x331)) (not x1364)) (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1242 x693)) (= 0 x693) (= x2224 x331) (= x1358 x47) (= x1242 (x329 (x113 x1317))) (= x2249 x154) (= x47 (x1277 (x113 x1898)))) x1364))) x1481)))
(assert (x1413 x1195 x302 x2040 x1944))
(assert (x665 x1290))
(assert (x565 x1360 (- x2131 x1764)))
(assert (x665 x184))
(assert (and (x889 x469 32) (=> (> 32 0) (= (+ (x1631 x469 32) (* (x520 x469 32) 32)) x469)) (x993 x469 32) (x132 x469 32)))
(assert (x665 x226))
(assert (x1124 x830 x1953 x2040 x1944))
(assert (x665 x2153))
(assert (x665 x1829))
(assert (x665 x1253))
(assert (x665 x1736))
(assert (=> (>= 10000 x1125) (= (x113 x1125) (x2046 x1125))))
(assert (x665 x1665))
(assert (x665 x239))
(assert (x1124 x2079 x2156 x1043 x1268))
(assert (x131 (- x1268 x1195)))
(assert (x665 x1618))
(assert (x665 x1401))
(assert (x565 x90 (- x1979 x1365)))
(assert (x665 x1441))
(assert (= (and x1711 x1000) x1870))
(assert (x880 x887))
(assert (x2183 x770))
(assert (x665 x316))
(assert (= (x420 x264) 0))
(assert (x1413 x1386 x2173 x90 x1979))
(assert (x1124 x213 x1365 x830 x1953))
(assert (= x385 (and x1577 x1779)))
(assert (x665 x1043))
(assert (x1124 x1360 x2131 x2156 x2079))
(assert (= x2064 (and x1416 (not x1894))))
(assert (x665 x770))
(assert (x665 x1255))
(assert (x565 x90 (- x1979 x2131)))
(assert (x665 x1064))
(assert (x665 x1902))
(assert (x1124 x1953 x830 x1195 x302))
(assert (x665 x390))
(assert (= (or x2154 x1997) x876))
(assert (x1413 x1365 x213 x1360 x2131))
(assert (x665 x1593))
(assert (x665 x81))
(assert (= x947 (x1433 (x113 x947))))
(assert (= (=> (and (and (not (= x609 x1317)) (= x1446 (> (x106 (x113 x1544)) 0)) (= (x780 (x113 x410)) x1969) (>= x457 0) (not (= x410 x609)) (= false x2245) (>= 255 x261) (<= x1544 1461501637330902918203684832716283019655932542975) (<= 0 x1253) (not (= x410 x1544)) (<= x1317 1461501637330902918203684832716283019655932542975) (<= 0 x979) (<= x986 255) (>= x250 0) (not (= x410 x1317)) (>= x1826 0) (= (x780 (x113 x609)) x979) (<= 0 x985) (>= x1212 0) (< 0 x609) (not (= x609 x1544)) (= x250 x1095) (>= x1969 0) (> x1317 0) (= x671 false) (= x2112 3414818225) x79 x1446 (not (< x2112 3414818225)) (not (< x2112 2307130307)) (>= 1461501637330902918203684832716283019655932542975 x160) (<= 0 x261) (= (x1150 (x113 x2071) (x2046 2) 0) x1763) (<= 0 x160) (= false x539) (>= 1461501637330902918203684832716283019655932542975 x985) (= (x780 (x113 x1317)) x1253) (= x1584 false) x537 (= x1693 (x730 x1763 1)) (<= x457 255) (= 2630586785 x866) (<= x1826 1461501637330902918203684832716283019655932542975) x2243 (= (< 0 (x106 (x113 x609))) x537) (<= x1532 1461501637330902918203684832716283019655932542975) (= x79 (< 0 (x106 (x113 x410)))) (>= 1461501637330902918203684832716283019655932542975 x2071) (= (x106 (x113 x609)) x814) (= x645 3) (< 0 x410) (= x1532 x934) (<= x1555 1461501637330902918203684832716283019655932542975) (= x1212 (x780 (x113 x1544))) (> x1544 0) (>= x986 0) (<= 0 x1532) (not (= x1544 x1317)) (= (x391 x1693) x250) (= (> (x106 (x113 x1317)) 0) x2243) (<= x410 1461501637330902918203684832716283019655932542975) (not (> 2961265839 x2112)) (<= 0 x1555) (< 0 x814) (= x1538 0) (= x2071 x1826) (> 1461501637330902918203684832716283019655932542976 x250) (<= x250 1461501637330902918203684832716283019655932542975) (= x985 x226) (>= 1461501637330902918203684832716283019655932542975 x609)) (and (and (and (>= 255 x859) (not (or (and (= true (<= x572 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 160 x572)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x572))) (not (> x1563 18446744073709551615)) (= (x591 x307) x1829) (= x1368 x1534) (= x370 (x1075 (* x729 32))) (<= x548 1461501637330902918203684832716283019655932542975) (= x1659 (x1579 (+ x2099 31))) (not (or (> x572 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x572) true) (< x572 160)))) (= (x1186 (- x313 x690)) x572) (<= 0 x419) (< 0 x2121) (not (or (and (< x902 96) (= (<= x902 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x902 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 227 x313) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x313))) (not (> 2307130307 x1905)) (not (< 18446744073709551615 x978)) (= (x1150 (x113 x1368) (x2046 2) 0) x1065) (= (x1075 (* x729 32)) x1112) (= x1280 (x1579 (+ x440 31))) (<= x1286 1461501637330902918203684832716283019655932542975) (= x962 (x1579 (+ x690 32))) (>= x548 0) (= x1912 128) (= (x375 x690) x1286) (= (= x1373 x1645) x1296) (= x215 x1017) (= (x1579 (+ 32 x440)) x396) (= (>= 1 x977) x1373) (> 2961265839 x1905) (= x226 x2208) (< 0 x859) (= x2099 (x1579 (+ x1112 32))) (not (= 2625015131 x1905)) (>= x2208 0) (= x1092 1) (= x774 (x1579 (+ 32 x962))) (= (x375 x440) x729) (= (x1150 (x113 x226) x982 0) x508) (= x413 (< x24 288)) (= x977 x175) (= x1213 x1368) (>= 1461501637330902918203684832716283019655932542975 x1368) (= x1451 x717) (= x1549 x1689) (not (> x898 x313)) (= (x1579 (+ x396 x370)) x898) (= (x375 x774) x978) (= 3 x1829) (>= 1461501637330902918203684832716283019655932542975 x215) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1659) x918) (= (x1378 x508) x859) (= (x1150 (x113 42559786704095985884337240924621141964881664668670750666325372487796921752598) (x2046 1) 0) x982) (not (> x1829 3)) (= x244 (or x1063 x413)) (= 0 x854) (not (< x1905 2625015131)) (= 0 x1105) (< x1829 256) (= x307 (x730 x1065 1)) (= x902 (x1186 (- x313 4))) (= x536 x854) (>= x859 0) (= x223 (< x396 x898)) (>= 1461501637330902918203684832716283019655932542975 x2208) (= x690 (x1579 (+ 4 x1563))) x1296 (= x1905 2630586785) (= x1063 (> x24 18446744073709551615)) (= x24 (x1579 (+ x918 288))) (not (< x313 4)) (= x1549 x548) (= (ite x244 1 0) x1105) (or (and (> x1280 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1280) (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1280 x313))) (> 256 x859) (not (> x729 18446744073709551615)) (= x2121 (x106 (x113 x609))) (>= 1461501637330902918203684832716283019655932542975 x419) (= x440 (x1579 (+ x978 x690))) (= x1695 x1368)) (and (= x181 (x106 (x113 x609))) (= x1906 x1021) (< 0 x181) (= (= 0 x1906) x1645) (>= 1461501637330902918203684832716283019655932542975 x1933) (= x2149 (x591 x841)) (> 791671133 x30) (= 428079936 x30) (= x2258 (x1150 (x113 x1933) (x2046 2) 0)) (> 2307130307 x30) (= (x730 x2258 1) x841) (= x175 x2149) (> 256 x2149) (= x1826 x1933) (not (> x2149 3)) (not (< x30 418493994)) (= x2119 0) (not (= x30 418493994)))) (and (<= x1598 1461501637330902918203684832716283019655932542975) (= x1598 (x391 x568)) (= x1543 x1095) (< 0 x1465) (= (x730 x2184 1) x568) (>= 1461501637330902918203684832716283019655932542975 x559) (= x2184 (x1150 (x113 x559) (x2046 2) 0)) (= x1826 x559) (not (> 3414818225 x2086)) (< x1598 1461501637330902918203684832716283019655932542976) (= (x106 (x113 x609)) x1465) (not (< x2086 2961265839)) (not (> 2307130307 x2086)) (<= 0 x1598) (= 3414818225 x2086) (= x1598 x1021)))) (and (=> (and (not x223) (= x147 x24)) x1885) (=> x223 x1382))) x511))
(assert (and (= (x1495 9 9) 81) (= (x1495 3 3) 9) (= (x1495 27 3) 81) (= (x1495 9 3) 27)))
(assert (= x1571 (and x904 (not x596))))
(assert (and (x889 x1658 32) (=> (> 32 0) (= (+ (x1631 x1658 32) (* (x520 x1658 32) 32)) x1658)) (x993 x1658 32) (x132 x1658 32)))
(assert (x665 x24))
(assert (x131 (- x2173 x1539)))
(assert (x665 x1215))
(assert (x565 x2156 (- x2079 x1539)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1433 (x2046 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x1124 x1365 x213 x1268 x1043))
(assert (= x165 (and x2093 x2225)))
(assert (x665 x1316))
(assert (x1124 x1011 x1615 x1360 x2131))
(assert (x1124 x2156 x2079 x1268 x1043))
(assert (x565 x2173 (- x1386 x1764)))
(assert (x565 x1764 (- x1539 x1043)))
(assert (=> (>= 10000 x1544) (= (x113 x1544) (x2046 x1544))))
(assert (x131 (- x1195 x2040)))
(assert (x131 (- x1615 x1365)))
(assert (x665 x1477))
(assert (x1124 x1979 x90 x1268 x1043))
(assert (x1124 x1360 x2131 x90 x1979))
(assert (x665 x513))
(assert (x131 (- x1195 x1365)))
(assert (x131 (- x1365 x2156)))
(assert (x880 x242))
(assert (= x1399 (and x1343 x1723)))
(assert (x1124 x1011 x1615 x1043 x1268))
(assert (x665 x261))
(assert (x665 x1961))
(assert (x665 x647))
(assert (x665 x914))
(assert (x565 x90 (- x1979 x830)))
(assert (x665 x2081))
(assert (x665 x595))
(assert (x665 x2204))
(assert (x665 x1828))
(assert (x131 (- x1365 x1195)))
(assert (x880 x533))
(assert (= (x420 x1417) 0))
(assert (x665 x1479))
(assert (x565 x1979 (- x90 x2079)))
(assert (= x1731 (and (not x1640) x243)))
(assert (x880 x1899))
(assert (x1566 x1317))
(assert (= x1935 (and x2016 x29)))
(assert (x665 x46))
(assert (x1124 x1360 x2131 x1979 x90))
(assert (x131 (- x1539 x830)))
(assert (x665 x383))
(assert (= x799 (and x41 x177)))
(assert (x131 (- x2131 x2079)))
(assert (x1413 x2079 x2156 x213 x1365))
(assert (x665 x1905))
(assert (x665 x2209))
(assert (x665 x567))
(assert (and (x889 x2132 18446744073709551616) (=> (> 18446744073709551616 0) (= (+ (x1631 x2132 18446744073709551616) (* (x520 x2132 18446744073709551616) 18446744073709551616)) x2132)) (x993 x2132 18446744073709551616) (x132 x2132 18446744073709551616)))
(assert (x665 x32))
(assert (x565 x1539 (- x1764 x1386)))
(assert (x665 x908))
(assert (x565 x1953 (- x830 x1944)))
(assert (= 0 (x420 x1785)))
(assert (x665 x1786))
(assert (x665 x147))
(assert (x565 x1365 (- x213 x1268)))
(assert (x665 x1087))
(assert (x131 (- x90 x1011)))
(assert (x665 x1873))
(assert (x665 x2097))
(assert (x665 x1094))
(assert (x1124 x1268 x1043 x1979 x90))
(assert (= x1706 (and x1789 x445)))
(assert (= (and x876 x1719) x1113))
(assert (x838 x2067))
(assert (x665 x338))
(assert (x665 x218))
(assert (x131 (- x1365 x1539)))
(assert (x665 x498))
(assert (x1124 x1268 x1043 x1539 x1764))
(assert (x1413 x2156 x2079 x1043 x1268))
(assert (x1124 x1979 x90 x1360 x2131))
(assert (x565 x1011 (- x1615 x2173)))
(assert (= x1009 (and x922 x799)))
(assert (x665 x1788))
(assert (x665 x1793))
(assert (= x190 (and x1487 x165)))
(assert (x1124 x1386 x2173 x2156 x2079))
(assert (x665 x1880))
(assert (x565 x90 (- x1979 x1615)))
(assert (= (or x2080 x52) x1551))
(assert (x131 (- x1953 x1615)))
(assert (x131 (- x1944 x1195)))
(assert (x1124 x1764 x1539 x830 x1953))
(assert (= (and x1814 x784) x1753))
(assert (x665 x1995))
(assert (x665 x2256))
(assert (x665 x104))
(assert (= (x113 90077150) (x2046 90077150)))
(assert (= (and (not x2198) x118) x1822))
(assert (x131 (- x2173 x1365)))
(assert (x665 x1317))
(assert (= (or x434 x556) x771))
(assert (x131 (- x90 x302)))
(assert (x665 x649))
(assert (x131 (- x1365 x1043)))
(assert (= x1506 (=> (and (= (x1579 (+ 4238056678808933066457772256406219440718756300954938350892797929791311314944 x1656)) x409) (= x1455 (x1579 (+ x1273 32))) (= x1497 (x1579 (+ 64 x1746))) (= (x257 26959946667150639794667015087019630673637144422540572481103610249215 x504) x1656) (= (x257 1461501637330902918203684832716283019655932542975 x992) x1972) (= (x1579 (+ x1273 36)) x1513) (= (< 0 x2103) x858) (= x504 (x1775 x1455)) (= (x1186 (- x1596 x1273)) x1115) (= (x1579 (+ 32 x1513)) x901) (= x2213 (x1579 (+ 32 x1497))) (= (x257 1461501637330902918203684832716283019655932542975 x1368) x301) (= x1746 (x1579 (+ x1596 4))) (= x1958 (x1579 (+ x1746 32))) (= x1596 (x1579 (+ x1513 64))) (= (x1186 (- x1115 32)) x2215) (= (x1341 x1273) x2103)) (and (=> (and (not x858) (= x6 0)) x2008) (=> (and x858 (and (= x552 (< 32 x2103)) (= x264 x1455) (= x1083 x2213) (= x747 (x2181 x264)))) (and (=> (and (and (= (x1579 (+ 32 x1455)) x1966) (= x667 (x1579 (+ x2213 32))) (= (x871 x1966) x684) (= (< 64 x2103) x177)) x552) (and (=> (and (= x6 64) (not x177)) x2008) (=> (and x177 (and (= x922 (< 96 x2103)) (= (x812 x482) x1984) (= x482 (x1579 (+ x1455 64))) (= x324 (x1579 (+ 64 x2213))))) (and (=> (and (not x922) (= x6 96)) x2008) (=> x922 x1523))))) (=> (and (= 32 x6) (not x552)) x2008)))))))
(assert (x665 x1598))
(assert (and (x1059 32 x930) (x1452 32 x930) (and (= (* (- x930 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x1495 32 (- x930 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x930 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x930 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x930 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 32 x930) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x930)) (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x930))) (= (* 32 x930) (x1495 32 x930)) (x253 32 x930) (x1123 32 x930) (x2100 32 x930)))
(assert (x665 x891))
(assert (x565 x2131 (- x1360 x213)))
(assert (= x1000 (and x1696 x1154)))
(assert (= (x1433 (x730 x2184 1)) (+ (x1433 x2184) 1)))
(assert (x565 x1365 (- x213 x2040)))
(assert (x565 x1615 (- x1011 x1539)))
(assert (x1124 x1615 x1011 x1043 x1268))
(assert (x1533 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (x1124 x830 x1953 x1360 x2131))
(assert (x131 (- x1268 x302)))
(assert (x1413 x213 x1365 x1764 x1539))
(assert (x665 x1260))
(assert (x665 x683))
(assert (x1566 x1898))
(assert (x1413 x1615 x1011 x1386 x2173))
(assert (x880 x1189))
(assert (x665 x404))
(assert (= (or (and (not x91) x1458) x140) x2250))
(assert (x131 (- x830 x90)))
(assert (x1533 x2067))
(assert (x880 x670))
(assert (= x1587 (and x2167 x1639)))
(assert (x665 x421))
(assert (x665 x1835))
(assert (x1566 x1933))
(assert (x1413 x2079 x2156 x90 x1979))
(assert (x665 x2082))
(assert (x131 (- x1386 x302)))
(assert (x665 x940))
(assert (= (x113 2307130307) (x2046 2307130307)))
(assert (x1533 32))
(assert (x131 (- x90 x1944)))
(assert (x1124 x1764 x1539 x1953 x830))
(assert (x665 x1368))
(assert (x1413 x1365 x213 x90 x1979))
(assert (x1124 x213 x1365 x1944 x2040))
(assert (= (and x448 (not x2073)) x1032))
(assert (x665 x933))
(assert (x2183 x2156))
(assert (x880 x1005))
(assert (x565 x1011 (- x1615 x1539)))
(assert (x665 x2115))
(assert (x665 x1424))
(assert (x1124 x2079 x2156 x2173 x1386))
(assert (x131 (- x830 x1195)))
(assert (= x2032 (or x519 x48 x965 x227 x1229)))
(assert (x665 x698))
(assert (x565 x830 (- x1953 x1764)))
(assert (and (x889 x555 26959946667150639794667015087019630673637144422540572481103610249216) (=> (> 26959946667150639794667015087019630673637144422540572481103610249216 0) (= (+ (x1631 x555 26959946667150639794667015087019630673637144422540572481103610249216) (* (x520 x555 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)) x555)) (x993 x555 26959946667150639794667015087019630673637144422540572481103610249216) (x132 x555 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x665 x1249))
(assert (= (x420 x1114) 0))
(assert (x725 x2132))
(assert (x665 x1298))
(assert (x565 x2173 (- x1386 x1979)))
(assert (= (and x1722 x936) x879))
(assert (x131 (- x302 x2079)))
(assert (x880 x65))
(assert (x2183 x39))
(assert (x131 (- x1944 x1539)))
(assert (x1533 x512))
(assert (x1124 x2040 x1944 x302 x1195))
(assert (x1124 x2131 x1360 x1944 x2040))
(assert (x1533 x1962))
(assert (x665 x1448))
(assert (= 0 (x420 x696)))
(assert (x665 x1198))
(assert (x665 x199))
(assert (x665 x1509))
(assert (x131 (- x90 x1539)))
(assert (x565 x90 (- x1979 x1195)))
(assert (x131 (- x1953 x1268)))
(assert (x838 x1909))
(assert (x665 x1015))
(assert (x131 (- x1764 x302)))
(assert (x665 x2224))
(assert (x1533 x1821))
(assert (x131 (- x302 x1043)))
(assert (x665 x1021))
(assert (x2183 x1360))
(assert (= x593 (or x1893 x1032)))
(assert (x665 x1456))
(assert (x838 x1659))
(assert (x1124 x302 x1195 x1365 x213))
(assert (x665 x141))
(assert (= x429 (and x353 x1371)))
(assert (x565 x1539 (- x1764 x90)))
(assert (x665 x1376))
(assert (x565 x1386 (- x2173 x1011)))
(assert (x1124 x2040 x1944 x1764 x1539))
(assert (x1413 x2131 x1360 x1011 x1615))
(assert (x565 x830 (- x1953 x1195)))
(assert (x565 x2173 (- x1386 x2156)))
(assert (x1124 x1360 x2131 x2079 x2156))
(assert (x2183 x100))
(assert (x665 x703))
(assert (x1124 x2131 x1360 x830 x1953))
(assert (x131 (- x1764 x2173)))
(assert (x665 x1425))
(assert (x665 x1020))
(assert (x565 x2173 (- x1386 x1365)))
(assert (x1413 x90 x1979 x1043 x1268))
(assert (x1124 x2156 x2079 x90 x1979))
(assert (x665 x264))
(assert (and (x889 x1754 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x1754 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x1754 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1754)) (x993 x1754 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x1754 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1533 x1287))
(assert (= x1865 (=> (= x788 x1621) x1732)))
(assert (x131 (- x2079 x1365)))
(assert (x665 x1226))
(assert (= x1267 (and x636 x935)))
(assert (x1413 x213 x1365 x2156 x2079))
(assert (x1413 x1365 x213 x1386 x2173))
(assert (= 0 (x420 x389)))
(assert (x1413 x1953 x830 x90 x1979))
(assert (x131 (- x1386 x1011)))
(assert (x665 x1461))
(assert (x1124 x1953 x830 x2040 x1944))
(assert (x131 (- x1195 x2079)))
(assert (= x1797 (=> (and (= x540 (x1579 (+ x1593 x1708))) (>= 18446744073709551615 x757) (= x1618 (x1579 (+ x940 32))) (= x1248 (x1579 (+ x1148 32))) (= x1871 (x375 x1976)) (= (x1579 (+ x128 32)) x1234) (= (x375 x2155) x1708) (<= x1240 18446744073709551615) (= x22 (x375 x491)) (= x1362 (x1579 (+ 32 x1709))) (= x863 (x1186 (- x313 x561))) (= (x1579 (+ 32 x2155)) x558) (= (> x2007 18446744073709551615) x532) (= (not (> x1198 x2009)) x200) (= (not x1225) x988) (= (x1579 (+ x1703 31)) x2047) (= (x1579 (+ x1709 288)) x1183) (= x260 (x1579 (+ x224 32))) (= (or x1816 x763) x673) (= (x1579 (+ x72 32)) x831) (not (< x313 x32)) (>= 18446744073709551615 x576) (= x1240 (x375 x128)) (= (x375 x224) x2205) (= (x1579 (+ 32 x1703)) x1987) (>= 18446744073709551615 x22) (= (ite x2091 1 0) x1901) (= x1593 (x1579 (+ 32 x1183))) (= x1412 (x1579 (+ x1514 32))) (= x72 (x1579 (+ x1183 x1141))) (= x2155 (x1579 (+ x480 x1185))) (= x1959 (x1579 (+ 32 x491))) (= x727 (x1579 (+ 32 x1702))) (not (> x2205 18446744073709551615)) (not (< 18446744073709551615 x1185)) (= (x1579 (+ x1987 x2143)) x1028) (= x839 (< x1183 x1709)) (= (x1579 (+ 32 x1599)) x616) (= (x1579 (+ 32 x480)) x224) (= x1027 (ite x988 1 0)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x863) (and (= (<= x863 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x863 288)))) (= (x1579 (+ x1248 31)) x811) (= x1012 (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1257)) (= (x1579 (+ 31 x1708)) x1257) (or (and (= (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2001 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x313 x2001)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x313) (> x2001 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1579 (+ 32 x1012)) x471) (not (> x1028 x313)) (= x1287 (x1579 (+ x2143 31))) (= (x1579 (+ x1976 32)) x2009) (>= 18446744073709551615 x1496) (= x2007 (x1579 (+ x129 x72))) (= (x1579 (+ x308 32)) x940) (= 0 x1862) (= x561 (x1579 (+ x1976 x1871))) (= x1225 (= 0 x2163)) (= (x1579 (+ x1708 x558)) x32) (= x1862 (ite x673 1 0)) (= x42 (x1579 (+ x2143 x831))) (= x1901 0) (= x2001 (x1579 (+ 31 x2155))) (= (x1579 (+ x260 32)) x128) (= (< 18446744073709551615 x1183) x13) (= 0 x233) (= (x1579 (+ x480 x2205)) x1703) (= (x1579 (+ 32 x1362)) x1599) (= x495 (or x839 x13)) (>= 18446744073709551615 x337) (= (x375 x480) x1185) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1890) x1141) (= x2163 x1027) (= (x1579 (+ x1618 32)) x1514) (= (x1579 (+ x1871 x1976)) x480) (= (x1579 (+ x727 32)) x491) (= (x375 x1703) x2143) (= (x375 x1702) x576) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1287) x1148) (= (x375 x727) x1496) (= (or x532 x1038) x2091) (= x1702 (x1579 (+ 32 x1234))) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x811) x129) (= x2163 (x375 x260)) (= (ite x495 1 0) x233) (or (and (< x2047 x313) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x313) (<= x2047 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2047) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x313))) (= (x375 x1959) x337) (not (> x2143 18446744073709551615)) (= x757 (x375 x1234)) (= (> x72 18446744073709551615) x1816) (= (> x1183 x72) x763) (not (< 18446744073709551615 x1708)) (= (< x2007 x72) x1038) (= (x1579 (+ x471 31)) x1890) (= x308 (x1579 (+ 32 x616))) (not (> x1871 18446744073709551615))) (and x200 (=> (= x2007 x122) x205)))))
(assert (x565 x1615 (- x1011 x2173)))
(assert (x665 x847))
(assert (x838 x777))
(assert (x1413 x830 x1953 x2040 x1944))
(assert (x665 x956))
(assert (x1124 x302 x1195 x830 x1953))
(assert (x1124 x2131 x1360 x2156 x2079))
(assert (x131 (- x302 x1944)))
(assert (x665 x755))
(assert (x665 x1545))
(assert (x1124 x213 x1365 x302 x1195))
(assert (x1124 x2079 x2156 x213 x1365))
(assert (and (x889 x672 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x672 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x672 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x672)) (x993 x672 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x672 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (and (not x1578) x300) x38))
(assert (x565 x213 (- x1365 x2156)))
(assert (x131 (- x1953 x2173)))
(assert (x665 x2164))
(assert (x1413 x1615 x1011 x1043 x1268))
(assert (x665 x1730))
(assert (= x1060 (and x722 x441)))
(assert (= (x1433 (x2046 65535)) 65535))
(assert (= (and x758 x1160) x2094))
(assert (x2183 x498))
(assert (x1413 x2079 x2156 x1043 x1268))
(assert (x665 x688))
(assert (x665 x1339))
(assert (x665 x1138))
(assert (x1124 x1365 x213 x2079 x2156))
(assert (x131 (- x2040 x830)))
(assert (x1464 x2256 x498))
(assert (x880 x777))
(assert (x1124 x1011 x1615 x1365 x213))
(assert (= (=> (= (< 0 x2014) x1033) (and (=> (and x1033 (and (= x1002 (< 0 x1960)) (= x220 (x257 1461501637330902918203684832716283019655932542975 x1368)) (= x1380 (x1860 x326)) (= x46 (x1579 (+ 36 x2003))) (= (x691 x1380) x1960) (= (x1579 (+ 96 x46)) x1260) (= (x1579 (+ 32 x1735)) x326) (= (x1579 (+ 32 x1260)) x878) (= (x1579 (+ x1380 32)) x1231) (< 0 x640) (= (x1860 x1735) x640) (= x875 (x1579 (+ 32 x46))))) (and (=> x1002 x1445) (=> (and (not x1002) (= 0 x2021)) x980))) (=> (and (and (= x569 x1109) (= x1101 x1386) (= x733 x989) (= x252 x1276) (= x212 x1390) (= x483 x946) (= x2003 x2219) (= x306 x1142)) (not x1033)) x1220))) x2010))
(assert (x665 x1137))
(assert (x1533 x1226))
(assert (= 404098525 (x1433 (x2046 404098525))))
(assert (= (x1433 (x2046 2428475159928928253380189918045730325133814103720850528466242065960167014400)) 2428475159928928253380189918045730325133814103720850528466242065960167014400))
(assert (and (x889 x512 32) (=> (> 32 0) (= (+ (x1631 x512 32) (* (x520 x512 32) 32)) x512)) (x993 x512 32) (x132 x512 32)))
(assert (x565 x1539 (- x1764 x2131)))
(assert (x665 x1011))
(assert (x1124 x1539 x1764 x1360 x2131))
(assert (= x1472 (and x2254 x716)))
(assert (= (and x1853 x472) x40))
(assert (x1413 x1043 x1268 x1764 x1539))
(assert (x131 (- x90 x2173)))
(assert (x565 x213 (- x1365 x1539)))
(assert (x838 x273))
(assert (x565 x1764 (- x1539 x213)))
(assert (x1124 x302 x1195 x1953 x830))
(assert (x665 x1356))
(assert (x131 (- x213 x1953)))
(assert (x665 x1103))
(assert (x131 (- x2173 x2131)))
(assert (x1413 x830 x1953 x1360 x2131))
(assert (= (x2046 418493994) (x113 418493994)))
(assert (x665 x426))
(assert (x1413 x1011 x1615 x2040 x1944))
(assert (= x764 (=> (and (= x1492 (x1579 (+ x690 x1990))) (= x944 (x1075 (* x36 32))) (= x959 (x1579 (+ x1661 x194))) (= (x1579 (+ 32 x1661)) x1320) (= x1398 (< x959 x1661)) (= x411 (> x28 x612)) (not (< x313 x28)) (not (< 18446744073709551615 x36)) (= x1037 (x1579 (+ x944 32))) (= (x1075 (* x36 32)) x1882) (= x136 (ite x1527 1 0)) (= x527 (< 18446744073709551615 x959)) (not (> x1990 18446744073709551615)) (= x194 (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x272)) (= (x1579 (+ x612 x1882)) x28) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x313) (<= x2126 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2126 x313)) (and (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2126))) (= x272 (x1579 (+ 31 x1037))) (= x2126 (x1579 (+ 31 x1492))) (= (x375 x1492) x36) (= (x1579 (+ x1492 32)) x612) (= 0 x136) (= (x375 x421) x1990) (= (or x1398 x527) x1527)) (and (=> (and (not x411) (= x1176 x959)) x660) (=> x411 x1318)))))
(assert (x665 x950))
(assert (x665 x1906))
(assert (= (and x134 x813) x2257))
(assert (x1124 x1615 x1011 x2131 x1360))
(assert (x665 x1384))
(assert (x665 x14))
(assert (x665 x2048))
(assert (x565 x1365 (- x213 x1360)))
(assert (x565 x1360 (- x2131 x1944)))
(assert (x565 x1386 (- x2173 x1615)))
(assert (x131 (- x1195 x1268)))
(assert (= x461 (and x581 x88)))
(assert (x131 (- x213 x1539)))
(assert (x131 (- x1764 x90)))
(assert (x1533 x672))
(assert (x1124 x1268 x1043 x2156 x2079))
(assert (and (x889 x426 32) (=> (> 32 0) (= (+ (x1631 x426 32) (* (x520 x426 32) 32)) x426)) (x993 x426 32) (x132 x426 32)))
(assert (x1413 x1944 x2040 x213 x1365))
(assert (x1566 x559))
(assert (= x1646 (and x1291 (not x895))))
(assert (= x434 (and x2192 (not x223))))
(assert (x665 x1244))
(assert (x2183 x2256))
(assert (= (=> (and (= x724 (= 0 x1515)) (or (not x724) x724)) x1697) x984))
(assert (x565 x1386 (- x2173 x1539)))
(assert (= x744 (and (not x472) x1853)))
(assert (x665 x2086))
(assert (x1124 x830 x1953 x2131 x1360))
(assert (x665 x1988))
(assert (x665 x486))
(assert (x1124 x1011 x1615 x302 x1195))
(assert (x665 x1838))
(assert (= (and x1127 x1106) x372))
(assert (x665 x3))
(assert (and (x889 x933 32) (=> (> 32 0) (= (+ (x1631 x933 32) (* (x520 x933 32) 32)) x933)) (x993 x933 32) (x132 x933 32)))
(assert (x665 x534))
(assert (x665 x986))
(assert (x665 x126))
(assert (= (and x232 x1795) x2095))
(assert (= x18 (and (not x1846) x975)))
(assert (x880 x996))
(assert (x1413 x213 x1365 x1043 x1268))
(assert (x131 (- x1043 x1011)))
(assert (x665 x504))
(assert (x1473 x2222 x3))
(assert (x131 (- x2040 x2156)))
(assert (x565 x1043 (- x1268 x1539)))
(assert (= (x1433 (x730 x2258 1)) (+ (x1433 x2258) 1)))
(assert (x665 x1850))
(assert (x1124 x1011 x1615 x213 x1365))
(assert (= (and x1970 x1648) x118))
(assert (x1124 x2173 x1386 x1764 x1539))
(assert (x665 x930))
(assert (x565 x1365 (- x213 x1043)))
(assert (x565 x1195 (- x302 x213)))
(assert (= (x1433 (x113 x410)) x410))
(assert (x665 x996))
(assert (x665 x370))
(assert (= (and (not x1606) x2199) x2234))
(assert (x565 x302 (- x1195 x830)))
(assert (x565 x1979 (- x90 x1043)))
(assert (x565 x1386 (- x2173 x1365)))
(assert (x665 x331))
(assert (= (x113 89953063794570797914675343120038501642627609741519254829220540789936042803200) (x2046 89953063794570797914675343120038501642627609741519254829220540789936042803200)))
(assert (x131 (- x1944 x90)))
(assert (x1533 18446744073709551616))
(assert (= 0 (x420 x924)))
(assert (x665 x597))
(assert (x131 (- x1043 x1539)))
(assert (x665 x1493))
(assert (x1124 x1953 x830 x1979 x90))
(assert (x665 x1990))
(assert (x665 x1743))
(assert (x565 x1944 (- x2040 x1539)))
(assert (= (x113 18446744073709551615) (x2046 18446744073709551615)))
(assert (x1124 x1539 x1764 x2131 x1360))
(assert (x838 x1821))
(assert (=> (<= x609 10000) (= (x113 x609) (x2046 x609))))
(assert (x1413 x1011 x1615 x302 x1195))
(assert (= x2136 (and (not x1106) x1127)))
(assert (= (x2046 2446411860) (x113 2446411860)))
(assert (x665 x1442))
(assert (x565 x2131 (- x1360 x1979)))
(assert (x565 x2079 (- x2156 x1043)))
(assert (x665 x1061))
(assert (x665 x1411))
(assert (= x1597 (and (not x2053) x202)))
(assert (x565 x1979 (- x90 x1011)))
(assert (x1413 x2173 x1386 x302 x1195))
(assert (x565 x1764 (- x1539 x2040)))
(assert (= (+ (x1433 x1507) 2) (x1433 (x730 x1507 2))))
(assert (x665 x1206))
(assert (= (and x1294 (not x2158)) x1585))
(assert (= (=> (and (= (x1075 (* 32 x930)) x544) (= x874 (x1579 (+ 31 x752))) (= x352 (x375 x421)) (= x462 (x1579 (+ 32 x1061))) (not (> x2179 x313)) (= (ite x835 1 0) x1688) (= x387 (< x1504 x1061)) (or (and (< x874 x313) (= (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x874))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x874) (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1579 (+ x1111 x544)) x2179) (= x1688 0) (= (x1579 (+ x1054 31)) x755) (= (x1579 (+ 32 x752)) x1111) (= (x375 x752) x930) (= x782 (x1075 (* 32 x930))) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x755) x180) (= (> x2179 x1111) x1683) (= x1504 (x1579 (+ x1061 x180))) (not (> x930 18446744073709551615)) (= x1054 (x1579 (+ x782 32))) (= x1403 (< 18446744073709551615 x1504)) (not (> x352 18446744073709551615)) (= (x1579 (+ x352 x690)) x752) (= (or x387 x1403) x835)) (and (=> (and (= x1724 x1504) (not x1683)) x192) (=> x1683 x932))) x554))
(assert (x565 x2131 (- x1360 x1944)))
(assert (x665 x544))
(assert (= 0 (x420 x145)))
(assert (x131 (- x1360 x1944)))
(assert (x565 x1268 (- x1043 x1953)))
(assert (x665 x655))
(assert (x665 x236))
(assert (and (x889 x1890 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x1890 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x1890 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1890)) (x993 x1890 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x1890 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x131 (- x2079 x2173)))
(assert (x131 (- x830 x1268)))
(assert (x565 x1360 (- x2131 x90)))
(assert (x1124 x1365 x213 x1979 x90))
(assert (x665 x896))
(assert (x1124 x90 x1979 x2156 x2079))
(assert (= (and (not x1364) x319) x563))
(assert (x565 x302 (- x1195 x213)))
(assert (x665 x678))
(assert (x131 (- x2131 x830)))
(assert (x1124 x830 x1953 x302 x1195))
(assert (= x33 (and x2094 x1996)))
(assert (x665 x1504))
(assert (x131 (- x1360 x1615)))
(assert (x665 x2131))
(assert (x1413 x1953 x830 x1011 x1615))
(assert (x565 x2040 (- x1944 x1360)))
(assert (= (x2046 115792089237316195423570985008687907853269984665640) (x113 115792089237316195423570985008687907853269984665640)))
(assert (= x1357 x1349))
(assert (= x323 (=> (and (= x355 (> x1100 x885)) (or (not x355) (and x355 (= x2111 (x1579 (+ x304 x885)))))) x289)))
(assert (x665 x1590))
(assert (x665 x292))
(assert (= (and (not x589) x1635) x459))
(assert (x665 x357))
(assert (x1124 x2131 x1360 x1979 x90))
(assert (x131 (- x1953 x1195)))
(assert (x1124 x1979 x90 x2131 x1360))
(assert (= (and x686 (not x1683)) x1986))
(assert (x131 (- x1011 x830)))
(assert (x1464 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1011))
(assert (x665 x872))
(assert (= x1107 (or x168 x603)))
(assert (x1413 x2173 x1386 x2156 x2079))
(assert (= (x420 x1380) 0))
(assert (x1533 x272))
(assert (= (and (not x1903) x1908) x2166))
(assert (x665 x1562))
(assert (= (and x1956 x2250) x1651))
(assert (x665 x1068))
(assert (x1413 x2079 x2156 x1764 x1539))
(assert (x565 x1979 (- x90 x1195)))
(assert (x565 x90 (- x1979 x1043)))
(assert (x565 x1764 (- x1539 x2079)))
(assert (x1124 x1953 x830 x1011 x1615))
(assert (x131 (- x302 x1979)))
(assert (x665 x1735))
(assert (x1413 x1360 x2131 x213 x1365))
(assert (= (x113 65536) (x2046 65536)))
(assert (x1124 x2131 x1360 x90 x1979))
(assert (x665 x1338))
(assert (= (or x1571 x1086) x2165))
(assert (x880 x478))
(assert (x665 x1558))
(assert (x665 x272))
(assert (x1566 42559786704095985884337240924621141964881664668670750666325372487796921752598))
(assert (x131 (- x1386 x1365)))
(assert (= 265030696 (x1433 (x2046 265030696))))
(assert (x131 (- x830 x2173)))
(assert (x665 x832))
(assert (x665 x752))
(assert (x1124 x1365 x213 x1944 x2040))
(assert (x665 x627))
(assert (x131 (- x2131 x1615)))
(assert (x665 x1159))
(assert (x1124 x2131 x1360 x1953 x830))
(assert (x1222 x362))
(assert (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1433 (x2046 16156842317565293874272834530371880720966471053262404558597773956279093428224))))
(assert (x665 x2022))
(assert (= (x113 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x2046 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (= 0 (x663 x16)))
(assert (and (x889 x672 32) (=> (> 32 0) (= (+ (x1631 x672 32) (* (x520 x672 32) 32)) x672)) (x993 x672 32) (x132 x672 32)))
(assert (x665 x1739))
(assert (x1413 x830 x1953 x1043 x1268))
(assert (x131 (- x2131 x2040)))
(assert (x880 x1909))
(assert (x1413 x2173 x1386 x830 x1953))
(assert (x665 x1231))
(assert (x2183 x990))
(assert (x565 x90 x1979))
(assert (x131 (- x2131 x213)))
(assert (x665 x5))
(assert (x665 x1890))
(assert (x665 x862))
(assert (x131 (- x1268 x2156)))
(assert (= (and x1143 x1759) x1924))
(assert (x131 (- x1195 x1764)))
(assert (x665 x836))
(assert (x1413 x90 x1979 x2040 x1944))
(assert (x1413 x1953 x830 x213 x1365))
(assert (= x97 (and (not x481) x1973)))
(assert (x565 x1615 (- x1011 x1944)))
(assert (x1413 x2156 x2079 x90 x1979))
(assert (and (x889 x1628 32) (=> (> 32 0) (= (+ (x1631 x1628 32) (* (x520 x1628 32) 32)) x1628)) (x993 x1628 32) (x132 x1628 32)))
(assert (x665 x1539))
(assert (x1566 x964))
(assert (= x2080 (and (not x1854) x606)))
(assert (x565 x1011 (- x1615 x830)))
(assert (x1413 x2040 x1944 x2156 x2079))
(assert (x665 x643))
(assert (x131 (- x2079 x1944)))
(assert (x665 x622))
(assert (x665 x1871))
(assert (x565 x830 (- x1953 x213)))
(assert (x1124 x2131 x1360 x2079 x2156))
(assert (x1124 x1953 x830 x1615 x1011))
(assert (x1124 x1043 x1268 x830 x1953))
(assert (= 418493994 (x1433 (x2046 418493994))))
(assert (x1124 x2173 x1386 x1365 x213))
(assert (x665 x814))
(assert (x1413 x302 x1195 x1043 x1268))
(assert (x665 x1939))
(assert (x131 (- x1195 x1944)))
(assert (x665 x497))
(assert (x665 x1778))
(assert (x665 x116))
(assert (x131 (- x302 x1011)))
(assert (x665 x1302))
(assert (x131 (- x2040 x302)))
(assert (= x1476 (=> (and (= x2058 (x2109 x2115)) (= (not (> x1491 128)) x1209) (= x2115 (x1579 (+ 96 x490))) (= (x1579 (+ 96 x115)) x403)) (and (=> (= x1252 128) x701) x1209))))
(assert (x131 (- x1944 x2131)))
(assert (x1413 x1539 x1764 x1011 x1615))
(assert (x1124 x2131 x1360 x2173 x1386))
(assert (x1124 x2079 x2156 x2131 x1360))
(assert (x565 x830 (- x1953 x2040)))
(assert (x665 x102))
(assert (x1124 x90 x1979 x1386 x2173))
(assert (x665 x560))
(assert (x665 x2159))
(assert (x565 x2156 (- x2079 x1365)))
(assert (x665 x1336))
(assert (x665 x774))
(assert (x131 x1944))
(assert (x131 (- x1195 x2156)))
(assert (x565 x830 (- x1953 x1539)))
(assert (and (x889 x361 32) (=> (> 32 0) (= (+ (x1631 x361 32) (* (x520 x361 32) 32)) x361)) (x993 x361 32) (x132 x361 32)))
(assert (x1413 x1764 x1539 x1011 x1615))
(assert (x665 x989))
(assert (x665 x1716))
(assert (x665 x1703))
(assert (x131 (- x830 x1386)))
(assert (x880 x362))
(assert (x1464 115792089237316195423570985008687907853269984665640564039457584007913129639935 x271))
(assert (x665 x326))
(assert (x665 x1486))
(assert (x565 x90 (- x1979 x302)))
(assert (= (and x34 (not x193)) x49))
(assert (x880 x1950))
(assert (x665 x2060))
(assert (x131 (- x2156 x2040)))
(assert (= (or x844 x675) x448))
(assert (x1124 x1268 x1043 x1195 x302))
(assert (x665 x1948))
(assert (x665 x2108))
(assert (x665 x469))
(assert (x1124 x1195 x302 x1011 x1615))
(assert (x131 (- x1539 x1268)))
(assert (= x1635 (and x429 (not x1993))))
(assert (x665 x1204))
(assert (x565 x302 (- x1195 x90)))
(assert (= x2147 (and x488 x786)))
(assert (x665 x916))
(assert (x665 x381))
(assert (x1124 x1365 x213 x2131 x1360))
(assert (x1124 x1953 x830 x1539 x1764))
(assert (= (=> (and (= x935 (= x2224 0)) (or (and x935 (= x383 96)) (and (not x935) (and (= (x1579 (+ 32 x477)) x1509) (= x477 x383))))) x17) x1481))
(assert (x1124 x1360 x2131 x1944 x2040))
(assert (x131 (- x1360 x1953)))
(assert (x1124 x1043 x1268 x2079 x2156))
(assert (x131 x36))
(assert (x565 x1011 (- x1615 x1365)))
(assert (x1124 x2131 x1360 x1764 x1539))
(assert (x665 x246))
(assert (x1124 x90 x1979 x2040 x1944))
(assert (x1124 x830 x1953 x1615 x1011))
(assert (x1413 x213 x1365 x90 x1979))
(assert (x665 x1694))
(assert (x665 x829))
(assert (x1124 x1764 x1539 x2173 x1386))
(assert (x880 x101))
(assert (x131 (- x2131 x1539)))
(assert (x665 x2193))
(assert (x2183 x2102))
(assert (x1124 x1944 x2040 x1011 x1615))
(assert (= 0 (x420 x1581)))
(assert (x665 x732))
(assert (x880 x354))
(assert (= x1349 (=> (= (= x1206 0) x2037) (and (=> (and (not x2037) (= (= x230 0) x1814)) (and (=> (and (and (= (x2045 x1136) x1309) (= x1136 (x1150 (x113 x1206) (x2046 1) 0)) (<= x1309 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x481 (< x1309 x1612)) (>= x1309 0)) (not x1814)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x346) (= (x1910 x78) x346) (>= x346 0) (= x2172 (> x346 x1470)) (= (x1150 (x113 x1206) (x2046 1) 0) x1954) (= x926 (x1186 (- x1309 x1612))) (= (x1150 (x113 x230) (x2046 1) 0) x78) (= x1470 (x1186 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1612)))) (not x481)) (and (=> (and (not x2172) (and (= 1 x1306) (= 1 x154) (= x1089 (x1579 (+ x1612 x346))) (= (x1660 128) x1369) (= x331 32))) x1647) (=> x2172 x809))) (=> x481 x809))) (=> x1814 x809))) (=> x2037 x809)))))
(assert (x665 x1840))
(assert (= (x113 791671133) (x2046 791671133)))
(assert (x565 x830 (- x1953 x2131)))
(assert (x131 (- x2156 x213)))
(assert (x131 (- x2079 x1386)))
(assert (= (or (and (not x240) x1800) (and x1001 x1482)) x1428))
(assert (x1533 x178))
(assert (x665 x761))
(assert (x1413 x1386 x2173 x830 x1953))
(assert (x565 x213 (- x1365 x2040)))
(assert (and (x889 x1483 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x1483 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x1483 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1483)) (x993 x1483 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x1483 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x665 x225))
(assert (x1413 x2131 x1360 x830 x1953))
(assert (x131 (- x1268 x1365)))
(assert (x665 x1166))
(assert (x565 x1043 (- x1268 x2156)))
(assert (= x1779 (or x1168 x1007)))
(assert (x565 x302 (- x1195 x1539)))
(assert (= 65536 (x1433 (x2046 65536))))
(assert (= x1755 (and x1701 x668)))
(assert (= (or x820 x826) x692))
(assert (= x1034 (and (not x1447) x721)))
(assert (x565 x1979 (- x90 x1615)))
(assert (x1533 x1658))
(assert (x131 (- x2156 x1386)))
(assert (x838 x887))
(assert (x880 x950))
(assert (x665 x401))
(assert (x131 (- x1764 x830)))
(assert (and (x889 x65 32) (=> (> 32 0) (= (+ (x1631 x65 32) (* (x520 x65 32) 32)) x65)) (x993 x65 32) (x132 x65 32)))
(assert (= x2137 (=> (and (= (< 18446744073709551615 x1426) x746) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x908)) (< x908 128)) (> x908 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1579 (+ x2108 32)) x1219) (= (x375 x1219) x1023) (= x474 (x1579 (+ x108 32))) (= (x1579 (+ x1219 32)) x1303) (= x15 (x1579 (+ x913 32))) (= (x1579 (+ 128 x108)) x1426) (= (x375 x913) x1884) (= (x375 x2108) x384) (= (x1579 (+ 32 x474)) x338) (= x1690 (ite x2015 1 0)) (>= 452312848583266388373324160190187140051835877600158453279131187530910662655 x384) (>= 255 x1023) (= (x1186 (- x313 x2108)) x908) (= x2220 (not (< x15 x2204))) (= (> x108 x1426) x133) (= 0 x1690) (= (x1579 (+ 32 x1303)) x913) (= (x1579 (+ x338 32)) x1902) (= x2015 (or x133 x746)) (= x390 (x375 x1303))) (and x2220 (=> (= x447 x1426) x23)))))
(assert (x565 x2131 (- x1360 x1615)))
(assert (x131 (- x2173 x2156)))
(assert (x131 (- x1011 x302)))
(assert (x665 x198))
(assert (x131 (- x2079 x1764)))
(assert (x665 x1205))
(assert (x665 x2118))
(assert (x665 x1182))
(assert (= (x2046 55253086691344412491249731323735809531556945173834312332507302207468853002240) (x113 55253086691344412491249731323735809531556945173834312332507302207468853002240)))
(assert (x565 x1979 (- x90 x1953)))
(assert (x665 x1500))
(assert (x1124 x2156 x2079 x2131 x1360))
(assert (x665 x197))
(assert (x665 x612))
(assert (x565 x2173 (- x1386 x830)))
(assert (and (x1059 1000000000000000000000000000 x865) (x1452 1000000000000000000000000000 x865) (and (= (* (- x865 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (x1495 1000000000000000000000000000 (- x865 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1495 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x865 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000000000000 (- x865 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x865 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 1000000000000000000000000000 x865) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x865)) (x1495 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x865))) (= (* 1000000000000000000000000000 x865) (x1495 1000000000000000000000000000 x865)) (x253 1000000000000000000000000000 x865) (x1123 1000000000000000000000000000 x865) (x2100 1000000000000000000000000000 x865)))
(assert (= 1099511627776 (x1433 (x2046 1099511627776))))
(assert (x131 (- x1268 x2131)))
(assert (and (x889 x533 32) (=> (> 32 0) (= (+ (x1631 x533 32) (* (x520 x533 32) 32)) x533)) (x993 x533 32) (x132 x533 32)))
(assert (x131 (- x1953 x1764)))
(assert (x1413 x1195 x302 x830 x1953))
(assert (x131 (- x1360 x1268)))
(assert (x565 x1365 (- x213 x830)))
(assert (x1413 x2131 x1360 x1043 x1268))
(assert (x665 x194))
(assert (x565 x2156 (- x2079 x1386)))
(assert (x565 x2131 (- x1360 x1953)))
(assert (x665 x1794))
(assert (x665 x105))
(assert (x665 x903))
(assert (= x1546 (and x860 (not x1888))))
(assert (x131 (- x1011 x2156)))
(assert (= x1800 (and x1238 x2231)))
(assert (= 1997499061 (x1433 (x2046 1997499061))))
(assert (x1413 x1979 x90 x2040 x1944))
(assert (x880 x1659))
(assert (x665 x115))
(assert (x665 x1400))
(assert (= x1792 (and (not x1463) x2211)))
(assert (x665 x1354))
(assert (x665 x1962))
(assert (x1413 x1615 x1011 x302 x1195))
(assert (x565 x1386 (- x2173 x302)))
(assert (x131 x271))
(assert (x665 x535))
(assert (x1124 x1944 x2040 x1195 x302))
(assert (and (x312 x285 31536000) (x1887 x285 31536000) (=> (and (< 0 31536000) (> x285 0)) (and (< (- x285 31536000) (* 31536000 (x520 x285 31536000))) (>= x285 (* (x520 x285 31536000) 31536000)))) (x906 x285 31536000) (x351 x285 31536000)))
(assert (x880 x1741))
(assert (= (or x1258 x577) x1626))
(assert (x665 x1596))
(assert (x665 x1391))
(assert (x1124 x1011 x1615 x2173 x1386))
(assert (x131 (- x1360 x2040)))
(assert (x665 x1927))
(assert (x665 x1254))
(assert (= 0 (x420 x367)))
(assert (x131 (- x1360 x1539)))
(assert (x665 x464))
(assert (x565 x2040 (- x1944 x90)))
(assert (x665 x1535))
(assert (= x997 (=> (and (= (= x1716 0) x91) (or x91 (not x91))) x114)))
(assert (x838 x811))
(assert (x1124 x1268 x1043 x830 x1953))
(assert (x665 x1934))
(assert (x665 x1998))
(assert (x665 x1235))
(assert (= (and x1149 (not x1211)) x247))
(assert (x665 x1689))
(assert (x665 x1422))
(assert (x665 x1176))
(assert (and (x889 x478 32) (=> (> 32 0) (= (+ (x1631 x478 32) (* (x520 x478 32) 32)) x478)) (x993 x478 32) (x132 x478 32)))
(assert (x1473 x2185 x365))
(assert (x665 x269))
(assert (= (=> (and (= (x1579 (+ 32 x263)) x1836) (= x1298 (x1186 (- x1828 x790))) (= x1720 (x1579 (+ 32 x1438))) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x426) x276) (= (x1579 (+ x2170 32)) x287) (= x1927 (x1579 (+ x1298 x790))) (= x1438 (x1579 (+ 288 x1828))) (= (x1579 (+ 32 x287)) x263) (= (x2140 x1653) x810) (= (x1579 (+ 31 x1056)) x426) (= x1503 (< 0 x107)) (= x2170 (x1579 (+ x280 32))) (= x892 (x1579 (+ 32 x810))) (= (x2200 x810) x107) (= x1828 (x1579 (+ x276 x1818)))) (and (=> (and (not x1503) (= x649 0)) x2142) (=> (and (and (= x1013 (x1228 x1302)) (= x76 (< 32 x107)) (= x1877 x1720) (= x892 x1302)) x1503) (and (=> (and (= 32 x649) (not x76)) x2142) (=> (and (and (= (< 64 x107) x123) (= (x1667 x696) x1919) (= x696 (x1579 (+ x892 32))) (= x1613 (x1579 (+ x1720 32)))) x76) (and (=> (and (not x123) (= x649 64)) x2142) (=> (and (and (= (x1579 (+ x1720 64)) x2251) (= x2177 (x1579 (+ 64 x892))) (= (> x107 96) x804) (= x1254 (x1923 x2177))) x123) (and (=> x804 x994) (=> (and (not x804) (= 96 x649)) x2142))))))))) x845))
(assert (x131 (- x1195 x1539)))
(assert (x1413 x1944 x2040 x90 x1979))
(assert (x665 x69))
(assert (x565 x2040 (- x1944 x1195)))
(assert (x1124 x2173 x1386 x1615 x1011))
(assert (x131 (- x1615 x1953)))
(assert (x665 x1752))
(assert (= x509 (and x10 (not x873))))
(assert (x1413 x1539 x1764 x830 x1953))
(assert (= x624 (and x1583 (not x1503))))
(assert (x131 (- x1386 x213)))
(assert (x665 x931))
(assert (x665 x1823))
(assert (x1533 x670))
(assert (x665 x2012))
(assert (x665 x1745))
(assert (x131 x896))
(assert (x131 (- x1539 x213)))
(assert (= x1166 (x1433 (x113 x1166))))
(assert (= (x420 x687) 0))
(assert (x131 x865))
(assert (x665 x1615))
(assert (x665 x1418))
(assert (x2183 x195))
(assert (x565 x1764 (- x1539 x1365)))
(assert (x665 x1286))
(assert (x565 x302 (- x1195 x1011)))
(assert (= (x113 1099511627775) (x2046 1099511627775)))
(assert (x1533 x1257))
(assert (x1413 x213 x1365 x1011 x1615))
(assert (x565 x1764 (- x1539 x1944)))
(assert (x665 x388))
(assert (= x289 (=> (and (= x1310 (> x1716 0)) (or (and x1310 (and (= x976 (x1078 (x113 x609))) (= x37 x1934) (= x999 x1838) (= x1442 x7) (= x494 x174) (= x1126 (<= x976 (x492 (x113 x609)))) (> 4294967296 x1522) (= (= x473 (x492 (x113 x220))) x1776) x1126 (= (x1078 (x113 x220)) x473) (= x562 x1336) (= x937 x2118) (= x157 x1015) x1776)) (and (not x1310) (and (= x1101 x1838) (= x733 x494) (= x1142 x157) (= x1934 x569) (= x483 x2118) (= x1390 x1442) (= x562 x1276))))) x997)))
(assert (x1413 x1043 x1268 x90 x1979))
(assert (x1124 x90 x1979 x2079 x2156))
(assert (x131 (- x1764 x1979)))
(assert (x1533 x478))
(assert (x2183 31536000))
(assert (x1124 x830 x1953 x1043 x1268))
(assert (= (x1433 (x2046 3336544575)) 3336544575))
(assert (x565 x1360 (- x2131 x1043)))
(assert (x665 x750))
(assert (x1124 x1195 x302 x2040 x1944))
(assert (x665 x1233))
(assert (x1124 x1360 x2131 x1764 x1539))
(assert (x665 x83))
(assert (x665 x898))
(assert (= (=> (and (= (< x2103 x6) x441) (or (not x441) (and x441 (= (x1579 (+ x2213 x2103)) x1295)))) x1945) x2008))
(assert (x565 x302 (- x1195 x1043)))
(assert (= x2252 (and (not x1772) x760)))
(assert (x1124 x213 x1365 x1539 x1764))
(assert (x665 x962))
(assert (= x660 (=> (and (= x1205 (x1579 (+ 32 x1176))) (not (< x313 x2204)) (= x1855 (x1579 (+ x1319 x690))) (= (> x1176 x108) x1135) (= x1715 (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x672)) (= (x1579 (+ x1855 32)) x2108) (= x672 (x1579 (+ 31 x570))) (= (< x2108 x2204) x1719) (= (x1579 (+ 32 x680)) x570) (= x108 (x1579 (+ x1176 x1715))) (= (ite x1307 1 0) x1849) (= x1307 (or x1135 x2171)) (not (< 18446744073709551615 x2055)) (= x1849 0) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x313) (> x1867 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1867 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x313 x1867))) (= x2204 (x1579 (+ x2108 x1372))) (= x1319 (x375 x135)) (= (x375 x1855) x2055) (= x1867 (x1579 (+ 31 x1855))) (not (> x1319 18446744073709551615)) (= (> x108 18446744073709551615) x2171) (= x1372 (x1075 (* 128 x2055))) (= (x1075 (* x2055 32)) x680)) (and (=> (and (= x108 x447) (not x1719)) x23) (=> x1719 x2137)))))
(assert (x565 x1360 (- x2131 x1615)))
(assert (x565 x2079 (- x2156 x1979)))
(assert (x131 (- x1365 x1615)))
(assert (x665 x946))
(assert (x131 (- x1365 x2173)))
(assert (x1124 x90 x1979 x2131 x1360))
(assert (x665 x37))
(assert (=> (>= 10000 x410) (= (x2046 x410) (x113 x410))))
(assert (x565 x2131 (- x1360 x1764)))
(assert (x665 x2241))
(assert (and (x889 x1754 32) (=> (> 32 0) (= (+ (x1631 x1754 32) (* (x520 x1754 32) 32)) x1754)) (x993 x1754 32) (x132 x1754 32)))
(assert (= (=> (and (or (and (not x2016) (and (= x685 x946) (= x252 x1576) (= x1011 x1386) (= x989 x5) (= x195 x212) (= x1109 x748) (= x306 x316))) (and x2016 (and (= x1011 x21) (= (= x334 (x2148 (x113 x301))) x1609) (= x1117 x195) x1609 (= x221 (>= (x2148 (x113 x609)) x381)) x221 (= x685 x1425) (= x5 x1686) (< x1235 4294967296) (= x779 x316) (= x381 (x1553 (x113 x609))) (= x748 x2117) (= (x1553 (x113 x301)) x334) (= x655 x1576)))) (= (< 0 x1162) x2016)) x1046) x1945))
(assert (x665 x1799))
(assert (x131 (- x90 x1615)))
(assert (x665 x36))
(assert (x665 x907))
(assert (x665 x1404))
(assert (= (and (not x1508) x1472) x1147))
(assert (x565 x830 (- x1953 x1365)))
(assert (x665 x1306))
(assert (x838 x672))
(assert (x665 x44))
(assert (x665 x1872))
(assert (x880 x248))
(assert (x131 (- x1268 x213)))
(assert (x665 x144))
(assert (x665 x794))
(assert (= x328 (and x41 (not x177))))
(assert (x880 x1226))
(assert (x1124 x2040 x1944 x2131 x1360))
(assert (x665 x734))
(assert (= x2195 (and x1140 x51)))
(assert (= (x113 1631253430) (x2046 1631253430)))
(assert (x665 x1807))
(assert (x131 (- x1953 x2131)))
(assert (x665 x729))
(assert (x665 x1742))
(assert (x565 x2131 (- x1360 x90)))
(assert (x665 x1070))
(assert (= 1099511627775 (x1433 (x2046 1099511627775))))
(assert (x665 x1879))
(assert (x665 x550))
(assert (x665 x1896))
(assert (x1124 x213 x1365 x1764 x1539))
(assert (x665 x1201))
(assert (and (x889 x178 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x178 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x178 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x178)) (x993 x178 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x178 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x665 x1496))
(assert (x565 x1011 (- x1615 x1386)))
(assert (= 31536000 (x1433 (x2046 31536000))))
(assert (x665 x135))
(assert (x665 x1612))
(assert (x665 x910))
(assert (x131 (- x2040 x2131)))
(assert (x131 x1764))
(assert (x131 (- x830 x302)))
(assert (= (and (not x1830) x2017) x519))
(assert (x665 x87))
(assert (x665 x1185))
(assert (= (or x1420 x1325) x88))
(assert (x665 x1240))
(assert (and (x889 x273 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x273 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x273 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x273)) (x993 x273 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x273 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x665 x985))
(assert (= x2071 (x1433 (x113 x2071))))
(assert (= (x113 33540519) (x2046 33540519)))
(assert (x1413 x1011 x1615 x830 x1953))
(assert (x665 x290))
(assert (x1124 x2040 x1944 x1979 x90))
(assert (x565 x2156 (- x2079 x1011)))
(assert (x665 x403))
(assert (x665 x742))
(assert (x665 x111))
(assert (x131 (- x1539 x1043)))
(assert (x1124 x2131 x1360 x1268 x1043))
(assert (x1413 x1011 x1615 x1043 x1268))
(assert (= (x1433 (x2046 1818647125)) 1818647125))
(assert (x565 x1011 (- x1615 x1944)))
(assert (x665 x747))
(assert (x565 x830 x1953))
(assert (x565 x1365 (- x213 x2156)))
(assert (x131 (- x1979 x1539)))
(assert (x565 x2079 (- x2156 x1360)))
(assert (= (=> (= (< 0 x2014) x1903) (and (=> (and (and (= x1276 x1133) (= x1101 x817) (= x1749 x1142) (= x733 x303) (= x1390 x599) (= x569 x218) (= x1555 x483)) (not x1903)) x1907) (=> (and (and (= x1056 (x463 x1727)) (= (x2146 x2201) x1653) (= (> x1056 0) x1772) (= (x1579 (+ 4 x447)) x790) (= (x2146 x1661) x2096) (= x305 (x1579 (+ 320 x790))) (> x1999 0) (= (x1579 (+ 32 x790)) x280) (= x1999 (x2146 x597)) (> x2096 0) (= x2201 (x1579 (+ x1661 32))) (= x1518 (x1579 (+ x597 32))) (= x1841 (x1579 (+ 32 x1176))) (= x525 (x2146 x1841)) (= x2082 (x1579 (+ x1727 32))) (= x2130 (x2146 x1176)) (= (x2146 x1518) x1727) (> x2130 0) (= (x1579 (+ 32 x305)) x1818) (= x886 (x257 1461501637330902918203684832716283019655932542975 x1368)) (= x1557 (x257 1461501637330902918203684832716283019655932542975 x891))) x1903) (and (=> (and (and (= (> x1056 32) x895) (= x2082 x1535) (= (x1120 x1535) x1542) (= x1818 x1432)) x1772) (and (=> (and (not x895) (= x2077 32)) x1560) (=> (and x895 (and (= (x1891 x924) x151) (= (x1579 (+ 32 x2082)) x924) (= (> x1056 64) x1330) (= (x1579 (+ 32 x1818)) x1866))) (and (=> (and (not x1330) (= x2077 64)) x1560) (=> (and (and (= (x1579 (+ x2082 64)) x2174) (= (x235 x2174) x542) (= x2253 (x1579 (+ x1818 64))) (= (< 96 x1056) x1264)) x1330) (and (=> x1264 x196) (=> (and (not x1264) (= x2077 96)) x1560))))))) (=> (and (not x1772) (= 0 x2077)) x1560))))) x23))
(assert (= x1834 (and x97 (not x2172))))
(assert (x565 x2040 (- x1944 x1011)))
(assert (x565 x213 (- x1365 x1386)))
(assert (x1566 x609))
(assert (x665 x1187))
(assert (x1124 x2079 x2156 x90 x1979))
(assert (x665 x274))
(assert (= (x1433 (x2046 2307130307)) 2307130307))
(assert (x665 x1045))
(assert (x838 x1397))
(assert (x665 x1960))
(assert (x665 x1950))
(assert (x665 x1432))
(assert (x1413 x1043 x1268 x830 x1953))
(assert (x1413 x2156 x2079 x2040 x1944))
(assert (x131 (- x1360 x2156)))
(assert (= x942 (=> (and (= x514 (not (> x1450 128))) (= x1047 (x1601 x852)) (= x852 (x1579 (+ 96 x1726))) (= (x1579 (+ x477 96)) x1387)) (and (=> (= x1616 128) x840) x514))))
(assert (= (and x1140 (not x51)) x1848))
(assert (x131 (- x1615 x1979)))
(assert (x665 x1144))
(assert (x665 x53))
(assert (x1413 x302 x1195 x213 x1365))
(assert (x1124 x1195 x302 x1979 x90))
(assert (x1413 x1764 x1539 x830 x1953))
(assert (x2183 x1764))
(assert (= x2246 (and x1894 x1416)))
(assert (= (+ 1 (x1433 x1065)) (x1433 (x730 x1065 1))))
(assert (x1533 x242))
(assert (x1413 x2079 x2156 x1386 x2173))
(assert (x665 x1656))
(assert (x565 x2079 (- x2156 x2040)))
(assert (x1413 x2131 x1360 x90 x1979))
(assert (=> (<= x1206 10000) (= (x113 x1206) (x2046 x1206))))
(assert (x131 (- x1615 x1268)))
(assert (x131 (- x2131 x1011)))
(assert (x1124 x830 x1953 x1365 x213))
(assert (x1413 x1953 x830 x1360 x2131))
(assert (x665 x1714))
(assert (x665 x1301))
(assert (x565 x90 (- x1979 x1268)))
(assert (= x1517 (and x1918 (not x2051))))
(assert (x665 x1765))
(assert (x665 x1810))
(assert (x565 x1011 (- x1615 x1195)))
(assert (x131 (- x1764 x1360)))
(assert (x1413 x1615 x1011 x830 x1953))
(assert (x131 (- x90 x1043)))
(assert (= (x1433 (x730 x1082 1)) (+ 1 (x1433 x1082))))
(assert (x665 x2242))
(assert (= x1710 (and x1626 x858)))
(assert (= 0 (x420 x1424)))
(assert (and (x889 x992 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x1631 x992 1461501637330902918203684832716283019655932542976) (* (x520 x992 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x992)) (x993 x992 1461501637330902918203684832716283019655932542976) (x132 x992 1461501637330902918203684832716283019655932542976)))
(assert (= (and x355 x2165) x2182))
(assert (x565 x213 (- x1365 x1195)))
(assert (x131 (- x1365 x2079)))
(assert (x665 x2))
(assert (x838 x65))
(assert (=> (<= x172 10000) (= (x2046 x172) (x113 x172))))
(assert (x880 x1658))
(assert (x1124 x1539 x1764 x1043 x1268))
(assert (x665 x874))
(assert (x1533 x1368))
(assert (x1533 x983))
(assert (x665 x122))
(assert (= 0 (x663 x1845)))
(assert (x665 x424))
(assert (x665 x1849))
(assert (x665 x1380))
(assert (x1124 x1764 x1539 x2156 x2079))
(assert (x131 (- x1539 x2156)))
(assert (x131 (- x1944 x213)))
(assert (x131 (- x1386 x1539)))
(assert (x565 x1195 (- x302 x1011)))
(assert (x131 (- x213 x830)))
(assert (x131 (- x213 x1011)))
(assert (x665 x245))
(assert (= (=> (and (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1522)) (< x1522 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1522))) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x354) x802) (not (< x2206 x1676)) (= (> x1339 0) x1956) (= x389 (x1579 (+ x185 x1574))) (= x469 (x1579 (+ 31 x1522))) (= (x1579 (+ 31 x1337)) x777) (= x496 (or x1031 x1684)) (= x1676 (x1579 (+ x1339 x1949))) (not (= x1716 0)) (not (> x1574 18446744073709551615)) (= (x1579 (+ x389 31)) x1283) (= (< x161 x1178) x1031) (= x1337 (x1579 (+ 32 x802))) (= (x1579 (+ x1339 31)) x354) (= (x1579 (+ 32 x1271)) x185) (= x2206 (x1579 (+ x1522 x185))) (= 0 x627) (not (< 18446744073709551615 x1339)) (= x627 (ite x496 1 0)) (= (x314 x389) x1339) (= (x1579 (+ x1178 32)) x1393) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x777) x900) (= (< 18446744073709551615 x161) x1684) (= (x1579 (+ 32 x389)) x1949) (= x1178 (x1579 (+ x185 x1401))) (= (x314 x185) x1574) (or (and (<= x2206 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1283)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1283) (<= x2206 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x2206 x1283))) (= (x1579 (+ x900 x1178)) x161) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x469) x1401)) (and (=> x1956 x1266) (=> (and (= 0 x917) (not x1956)) x121))) x114))
(assert (x1464 115792089237316195423570985008687907853269984665640564039457584007913129639935 x213))
(assert (x1566 x1544))
(assert (x880 x1287))
(assert (= (or x929 (and x435 x2005) x142 x1842 x372 x528 x40 x18 x1224 x1731 x1607 x1780 x2229) x960))
(assert (and (x889 x2067 32) (=> (> 32 0) (= (+ (x1631 x2067 32) (* (x520 x2067 32) 32)) x2067)) (x993 x2067 32) (x132 x2067 32)))
(assert (x665 x1567))
(assert (x565 x1268 (- x1043 x2131)))
(assert (x665 x2191))
(assert (x665 x2040))
(assert (x1124 x2040 x1944 x830 x1953))
(assert (x565 x1386 (- x2173 x2131)))
(assert (x565 x1944 (- x2040 x2131)))
(assert (x1124 x2173 x1386 x1539 x1764))
(assert (x565 x302 (- x1195 x1979)))
(assert (x131 (- x1539 x2131)))
(assert (x1464 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2156))
(assert (x665 x1303))
(assert (x1124 x2040 x1944 x2079 x2156))
(assert (x131 (- x213 x1615)))
(assert (x665 x1808))
(assert (x131 (- x302 x2156)))
(assert (= (x113 42559786704095985884337240924621141964881664668670750666325372487796921752598) (x2046 42559786704095985884337240924621141964881664668670750666325372487796921752598)))
(assert (x665 x562))
(assert (x565 x1365 (- x213 x1953)))
(assert (= x423 (=> (and (or (and (not x51) (and (= x1810 x1555) (= x599 x903) (= x218 x969) (= x1749 x1938) (= x546 x1133) (= x303 x1619) (= x1815 x817))) (and (and (= (x780 (x113 x1557)) x1377) (= x92 x1619) (= x1840 x546) (= (x780 (x113 x609)) x1520) x1642 (= x1936 x969) (= x903 x2020) (= x1938 x167) (= x1810 x594) (= x335 x1815) (> 4294967296 x632) x406 (= x406 (<= x1520 (x920 (x113 x609)))) (= x1642 (= x1377 (x920 (x113 x1557))))) x51)) (and (= x1226 (x63 x2024)) (= x2248 (x2202 x367)) (= (not (= 0 x2248)) x807) (= x1880 (x257 255 x262)) (= x1005 (x2157 x1424)) (= x2024 (x1579 (+ x1301 32))) (= (x1579 (+ 32 x1836)) x1510) (= (x1579 (+ x367 32)) x1600) (= (< 0 x1515) x51) (= (x257 18446744073709551615 x862) x1668) (= (x1603 x749) x2132) (= x187 (x1579 (+ 32 x1167))) (= x1868 (x257 18446744073709551615 x2132)) (= (x1243 x1301) x862) (= x683 (x257 18446744073709551615 x1730)) (= (x1184 x145) x1313) (= x1881 (x257 18446744073709551615 x1313)) (= (x1579 (+ 32 x525)) x1363) (= x1641 (x106 (x113 x1557))) (= (x1579 (+ x1121 32)) x451) (= x262 (x1878 x1363)) (= x2084 (x1579 (+ x2098 32))) (= x189 (x281 x1152)) (= x145 (x1579 (+ x749 32))) (= x837 (x1579 (+ x1363 32))) (= x373 (x257 452312848583266388373324160190187140051835877600158453279131187530910662655 x1962)) (= x367 (x1579 (+ x1694 32))) (= (x1579 (+ 32 x145)) x1424) (= (x1579 (+ 32 x2084)) x1167) (= x1269 (x1579 (+ x1510 32))) (= x1730 (x386 x1600)) (= x2098 (x1579 (+ 32 x1835))) (= x1809 (x1579 (+ x293 32))) (= (x1579 (+ 32 x187)) x2092) (not (= 0 x1641)) (= x1022 (x257 18446744073709551615 x1226)) (= (x1579 (+ 32 x1269)) x293) (= (x1579 (+ x1424 32)) x1301) (= x1152 (x1579 (+ x837 32))) (= x1962 (x1725 x525)) (= x1121 (x1579 (+ x2092 32))) (= (x957 x837) x1275) (= (x257 18446744073709551615 x1005) x1980) (= x749 (x1579 (+ 32 x1600))))) x984)))
(assert (x1124 x1615 x1011 x1979 x90))
(assert (x565 x213 (- x1365 x830)))
(assert (x565 x2040 (- x1944 x302)))
(assert (x565 x1764 (- x1539 x2156)))
(assert (x565 x1195 (- x302 x1539)))
(assert (x665 x2039))
(assert (x565 x1539 (- x1764 x302)))
(assert (= 89953063794570797914675343120038501642627609741519254829220540789936042803200 (x1433 (x2046 89953063794570797914675343120038501642627609741519254829220540789936042803200))))
(assert (x131 (- x1043 x1615)))
(assert (x565 x1043 (- x1268 x830)))
(assert (x665 x409))
(assert (x1413 x1195 x302 x90 x1979))
(assert (x131 (- x1615 x1386)))
(assert (= (and x1202 (not x1216)) x68))
(assert (x131 (- x2040 x90)))
(assert (x665 x1698))
(assert (x665 x1395))
(assert (x131 (- x1360 x2173)))
(assert (x565 x2173 (- x1386 x90)))
(assert (x665 x2185))
(assert (x1566 x1130))
(assert (x565 x1539 (- x1764 x830)))
(assert (= x1134 (and x2083 x566)))
(assert (x665 x1139))
(assert (x565 x1539 (- x1764 x1043)))
(assert (= x164 (and (not x936) x1722)))
(assert (x131 (- x1979 x213)))
(assert (x131 (- x2156 x1360)))
(assert (x1124 x1011 x1615 x2079 x2156))
(assert (x665 x1971))
(assert (x1124 x2040 x1944 x1195 x302))
(assert (x565 x1360 (- x2131 x2040)))
(assert (x131 x916))
(assert (= (and x589 x1635) x1904))
(assert (x131 (- x1979 x2079)))
(assert (x1533 x1754))
(assert (x665 x1818))
(assert (x665 x317))
(assert (x131 (- x1979 x1953)))
(assert (x131 (- x1360 x1043)))
(assert (x1124 x302 x1195 x2079 x2156))
(assert (x665 x262))
(assert (= (and x720 x1744) x714))
(assert (x665 x941))
(assert (x665 x645))
(assert (x131 (- x1764 x1615)))
(assert (= x1701 (and (not x343) x155)))
(assert (x665 x219))
(assert (= (and x602 x217) x134))
(assert (= 0 (x420 x1518)))
(assert (x131 (- x1953 x1979)))
(assert (x665 x1676))
(assert (x1413 x1539 x1764 x1360 x2131))
(assert (x665 x95))
(assert (x665 x405))
(assert (x665 x1916))
(assert (x1533 x2132))
(assert (x665 x672))
(assert (and (x889 x862 18446744073709551616) (=> (> 18446744073709551616 0) (= (+ (x1631 x862 18446744073709551616) (* (x520 x862 18446744073709551616) 18446744073709551616)) x862)) (x993 x862 18446744073709551616) (x132 x862 18446744073709551616)))
(assert (x1124 x1195 x302 x2173 x1386))
(assert (x131 (- x2131 x1268)))
(assert (x565 x302 (- x1195 x2079)))
(assert (x665 x213))
(assert (x565 x1386 (- x2173 x1360)))
(assert (x565 x1195 (- x302 x2173)))
(assert (x665 x303))
(assert (= (x420 x1600) 0))
(assert (x565 x1615 (- x1011 x830)))
(assert (x665 x1219))
(assert (x131 (- x1539 x1011)))
(assert (x1222 x891))
(assert (x565 x2156 (- x2079 x1043)))
(assert (x565 x2079 (- x2156 x1764)))
(assert (x665 x978))
(assert (x565 x1979 (- x90 x1764)))
(assert (and (x889 x1730 18446744073709551616) (=> (> 18446744073709551616 0) (= (+ (x1631 x1730 18446744073709551616) (* (x520 x1730 18446744073709551616) 18446744073709551616)) x1730)) (x993 x1730 18446744073709551616) (x132 x1730 18446744073709551616)))
(assert (x1824 x53))
(assert (and (x1059 128 x1421) (x1452 128 x1421) (and (= (* (- x1421 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128) (x1495 128 (- x1421 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639808) (- x1421 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 128 (- x1421 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1421 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 128 x1421) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1421)) (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639808) x1421))) (= (* 128 x1421) (x1495 128 x1421)) (x253 128 x1421) (x1123 128 x1421) (x2100 128 x1421)))
(assert (x880 x755))
(assert (x665 x1369))
(assert (x1124 x1195 x302 x1764 x1539))
(assert (x1124 x1043 x1268 x1764 x1539))
(assert (x565 x2156 (- x2079 x1979)))
(assert (x565 x1615 (- x1011 x2040)))
(assert (x665 x1817))
(assert (x565 x1043 (- x1268 x1953)))
(assert (x565 x2040 x1944))
(assert (x131 (- x2131 x1764)))
(assert (= x1769 (and x2037 x1604)))
(assert (x665 x163))
(assert (and (x889 x1962 452312848583266388373324160190187140051835877600158453279131187530910662656) (=> (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0) (= (+ (x1631 x1962 452312848583266388373324160190187140051835877600158453279131187530910662656) (* (x520 x1962 452312848583266388373324160190187140051835877600158453279131187530910662656) 452312848583266388373324160190187140051835877600158453279131187530910662656)) x1962)) (x993 x1962 452312848583266388373324160190187140051835877600158453279131187530910662656) (x132 x1962 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (x665 x615))
(assert (x1413 x1195 x302 x1011 x1615))
(assert (x1124 x2173 x1386 x90 x1979))
(assert (x1124 x1360 x2131 x1953 x830))
(assert (x665 x2034))
(assert (x2183 x830))
(assert (= x1382 (=> (and (= (> x1698 18446744073709551615) x1671) (= x1634 (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x950)) (= x1952 (x1579 (+ x269 x396))) (= (x1579 (+ x1889 x24)) x1698) (= x401 (x1579 (+ x1634 32))) (= x395 (ite x363 1 0)) (= x269 (x375 x396)) (= x795 (< x1698 x24)) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x983) x1889) (not (< x313 x1338)) (or (and (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1018)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1018) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x313)) (< x1018 x313))) (= x1807 (x1579 (+ x1713 x1595))) (= x950 (x1579 (+ 31 x1595))) (= (x375 x1952) x1595) (= (x1579 (+ 31 x401)) x983) (not (< 18446744073709551615 x269)) (= (not (> x898 x974)) x1200) (= (x1579 (+ 32 x396)) x974) (= x1018 (x1579 (+ x1952 31))) (= (x1579 (+ x1595 x1873)) x1338) (= x395 0) (not (> x1595 18446744073709551615)) (= (x1579 (+ 32 x1952)) x1873) (= (x1579 (+ x24 32)) x1713) (= (or x795 x1671) x363)) (and x1200 (=> (= x1698 x147) x1885)))))
(assert (x665 x100))
(assert (x1124 x1360 x2131 x1615 x1011))
(assert (x1413 x1979 x90 x1764 x1539))
(assert (x665 x561))
(assert (x665 x1622))
(assert (x665 x233))
(assert (x665 x2180))
(assert (and (x1059 32 x1290) (x1452 32 x1290) (and (= (* (- x1290 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x1495 32 (- x1290 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1290 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x1290 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1290 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 32 x1290) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1290)) (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1290))) (= (* 32 x1290) (x1495 32 x1290)) (x253 32 x1290) (x1123 32 x1290) (x2100 32 x1290)))
(assert (x2183 1000000000000000000000000000))
(assert (x565 x90 (- x1979 x1386)))
(assert (x665 x1451))
(assert (x131 (- x302 x1539)))
(assert (x1413 x1195 x302 x1764 x1539))
(assert (x131 (- x2040 x1539)))
(assert (x131 (- x302 x1365)))
(assert (= x1125 (x1433 (x113 x1125))))
(assert (x131 (- x2040 x2079)))
(assert (= (and x1639 (not x2167)) x626))
(assert (x1566 66268296141940672851042108147304593538321322149885339258387047461996478413388))
(assert (x665 x1957))
(assert (and (x889 x1821 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x1821 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x1821 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1821)) (x993 x1821 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x1821 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x565 x2079 (- x2156 x1386)))
(assert (x665 x1804))
(assert (x665 x1547))
(assert (x665 x1189))
(assert (not x511))
(assert (x665 x545))
(assert (x131 (- x1764 x1195)))
(assert (= (x420 x57) 0))
(assert (x1413 x90 x1979 x1386 x2173))
(assert (= (or x1848 x2195) x1208))
(assert (x1124 x1944 x2040 x1539 x1764))
(assert (= x860 (or x2166 x1163)))
(assert (x131 (- x1011 x2040)))
(assert (x1413 x1360 x2131 x1764 x1539))
(assert (x131 (- x1365 x302)))
(assert (x665 x632))
(assert (x1413 x1979 x90 x1386 x2173))
(assert (x1413 x1386 x2173 x2156 x2079))
(assert (x1124 x1764 x1539 x2079 x2156))
(assert (= (and x1789 (not x445)) x412))
(assert (x131 (- x830 x1365)))
(assert (= x965 (and x2238 x1924)))
(assert (x1124 x2079 x2156 x1360 x2131))
(assert (x665 x1576))
(assert (x665 x1709))
(assert (x565 x2156 (- x2079 x2040)))
(assert (x565 x1386 x2173))
(assert (x880 x1821))
(assert (x665 x1538))
(assert (and (x889 x426 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x426 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x426 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x426)) (x993 x426 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x426 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (and (x889 x272 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x272 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x272 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x272)) (x993 x272 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x272 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x665 x885))
(assert (x2183 x274))
(assert (x1413 x1043 x1268 x302 x1195))
(assert (x1124 x90 x1979 x830 x1953))
(assert (= (and x596 x904) x1086))
(assert (x565 x2040 (- x1944 x1615)))
(assert (x1124 x1539 x1764 x1615 x1011))
(assert (x665 x2096))
(assert (x665 x1702))
(assert (x131 (- x1360 x830)))
(assert (x665 x1785))
(assert (x1533 x248))
(assert (x1533 1461501637330902918203684832716283019655932542976))
(assert (x665 x1833))
(assert (and (x1059 32 x916) (x1452 32 x916) (and (= (* (- x916 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x1495 32 (- x916 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x916 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x916 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x916 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 32 x916) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x916)) (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x916))) (= (* 32 x916) (x1495 32 x916)) (x253 32 x916) (x1123 32 x916) (x2100 32 x916)))
(assert (x131 (- x1043 x2079)))
(assert (x665 x1866))
(assert (x665 x180))
(assert (= x1650 (and (not x1577) x1779)))
(assert (= (or x509 x1623 x1279) x1071))
(assert (x1124 x1979 x90 x2173 x1386))
(assert (x665 x1195))
(assert (x565 x1615 (- x1011 x1043)))
(assert (= (x420 x2174) 0))
(assert (x880 x1313))
(assert (x131 (- x2156 x1764)))
(assert (and (x1059 128 x2055) (x1452 128 x2055) (and (= (* (- x2055 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128) (x1495 128 (- x2055 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639808) (- x2055 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 128 (- x2055 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2055 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 128 x2055) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2055)) (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639808) x2055))) (= (* 128 x2055) (x1495 128 x2055)) (x253 128 x2055) (x1123 128 x2055) (x2100 128 x2055)))
(assert (x665 x176))
(assert (x131 (- x1539 x2040)))
(assert (x665 x1379))
(assert (x665 x1145))
(assert (x665 x728))
(assert (x1124 x2040 x1944 x1360 x2131))
(assert (x1124 x90 x1979 x1764 x1539))
(assert (= (x420 x2115) 0))
(assert (x1413 x1953 x830 x1764 x1539))
(assert (x665 x346))
(assert (x1413 x302 x1195 x2156 x2079))
(assert (x131 (- x1979 x2040)))
(assert (= (x1433 (x730 x1340 1)) (+ 1 (x1433 x1340))))
(assert (x665 x696))
(assert (x665 x2099))
(assert (x1124 x1365 x213 x1360 x2131))
(assert (x131 (- x1386 x1195)))
(assert (x565 x1764 (- x1539 x1615)))
(assert (x131 (- x90 x213)))
(assert (x131 (- x830 x2131)))
(assert (x665 x1055))
(assert (x131 (- x1944 x1011)))
(assert (x665 x992))
(assert (x1413 x2040 x1944 x1360 x2131))
(assert (x1124 x90 x1979 x1360 x2131))
(assert (x1413 x1360 x2131 x830 x1953))
(assert (x1124 x1539 x1764 x1944 x2040))
(assert (x838 x1890))
(assert (x880 x504))
(assert (= (x1433 (x2046 452312848583266388373324160190187140051835877600158453279131187530910662655)) 452312848583266388373324160190187140051835877600158453279131187530910662655))
(assert (x131 (- x1615 x2040)))
(assert (x665 x72))
(assert (x838 x1483))
(assert (and (x889 x2 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x2 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x2 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2)) (x993 x2 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x2 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x17 (=> (= (= x2249 0) x1482) (and (=> x1482 x1165) (=> (and (not x1482) (and (= (> x767 0) x1388) (= (x2138 x383) x767))) (and (=> (not x1388) x376) (=> (and (and (= (x2138 x383) x1179) (= x510 (or (and (> 32 x1179) (= true (<= x1179 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1179 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1388) (and (=> (and (= 0 x1621) x510) x1865) (=> (and (and (= x2028 (x427 x638)) (= x445 (= (ite x162 1 0) x2028)) (= x638 (x1579 (+ x383 32))) (= (= x2028 0) x1157) (= (not x1157) x162)) (not x510)) (and (=> (and (= (> x2028 0) x378) x445) (and (=> x378 x376) (=> (and (= 0 x1621) (not x378)) x1865))) (=> (and (= x1621 0) (not x445)) x1865)))))))))))
(assert (x665 x1691))
(assert (x665 x1837))
(assert (x131 (- x213 x2156)))
(assert (x1413 x1043 x1268 x2156 x2079))
(assert (= (x256 x383) 0))
(assert (x665 x2063))
(assert (x665 x2085))
(assert (x565 x1360 (- x2131 x1386)))
(assert (and (x889 x996 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x996 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x996 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x996)) (x993 x996 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x996 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x565 x1195 (- x302 x1043)))
(assert (x838 x950))
(assert (x1124 x213 x1365 x90 x1979))
(assert (x565 x1386 (- x2173 x1979)))
(assert (x665 x107))
(assert (x665 x1989))
(assert (= x899 (and (not x2061) x1036)))
(assert (x665 x1678))
(assert (and (x889 x1658 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x1658 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x1658 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1658)) (x993 x1658 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x1658 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x665 x1095))
(assert (x665 x1518))
(assert (x1533 x53))
(assert (x565 x1944 (- x2040 x1764)))
(assert (x665 x546))
(assert (x880 x1368))
(assert (x665 x482))
(assert (x665 x881))
(assert (x565 x2131 (- x1360 x1386)))
(assert (x131 (- x1195 x90)))
(assert (x838 x178))
(assert (= x1842 (and x1329 x1453)))
(assert (= x588 (and (not x1099) x744)))
(assert (x665 x1641))
(assert (x565 x2156 x2079))
(assert (x565 x1979 (- x90 x213)))
(assert (= (x1433 (x2046 428079936)) 428079936))
(assert (x665 x719))
(assert (x565 x2079 (- x2156 x213)))
(assert (= x48 (and x332 (not x382))))
(assert (= x1439 (and x605 x2000)))
(assert (x1124 x1944 x2040 x302 x1195))
(assert (x665 x2014))
(assert (x665 x1679))
(assert (x665 x263))
(assert (= x2212 (and (not x668) x1701)))
(assert (x665 x1156))
(assert (= x1674 (and (not x2254) x716)))
(assert (x565 x1953 (- x830 x1360)))
(assert (x565 x1979 (- x90 x1539)))
(assert (x665 x1569))
(assert (x1124 x302 x1195 x1268 x1043))
(assert (x131 (- x1360 x213)))
(assert (x131 (- x1268 x1979)))
(assert (= x1329 (and (not x4) x336)))
(assert (x1413 x1615 x1011 x2156 x2079))
(assert (x665 x1276))
(assert (x565 x90 (- x1979 x1764)))
(assert (x665 x2079))
(assert (x665 x1746))
(assert (= x745 (=> (and (= x2175 (x2116 x1694)) (= (x1579 (+ 32 x1409)) x115) (= x1943 (x1186 (- x1409 x1927))) (= (x1579 (+ x1653 32)) x1694) (= x1835 (x1579 (+ x1927 32))) (= x1409 (x1579 (+ x1720 x1058))) (= x1491 (x1955 x2175)) (= (x1579 (+ x2175 32)) x490) (= (x1579 (+ 31 x107)) x1909) (= (< 0 x1491) x267) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1909) x1058)) (and (=> (and (and (= x535 (x1164 x1153)) (= x2254 (< 32 x1491)) (= x87 x115) (= x1153 x490)) x267) (and (=> (and (= x1252 32) (not x2254)) x701) (=> (and x2254 (and (= x687 (x1579 (+ 32 x490))) (= x907 (x1579 (+ x115 32))) (= x1508 (< 64 x1491)) (= (x1091 x687) x1965))) (and (=> (and (not x1508) (= 64 x1252)) x701) (=> (and x1508 (and (= x1992 (x1579 (+ x490 64))) (= x1588 (< 96 x1491)) (= (x1637 x1992) x156) (= (x1579 (+ 64 x115)) x357))) (and (=> (and (= x1252 96) (not x1588)) x701) (=> x1588 x1476))))))) (=> (and (not x267) (= 0 x1252)) x701)))))
(assert (x1124 x2156 x2079 x1386 x2173))
(assert (x1413 x1011 x1615 x2156 x2079))
(assert (and (x1059 32 x729) (x1452 32 x729) (and (= (* (- x729 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x1495 32 (- x729 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x729 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x729 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x729 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 32 x729) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x729)) (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x729))) (= (* 32 x729) (x1495 32 x729)) (x253 32 x729) (x1123 32 x729) (x2100 32 x729)))
(assert (x131 x1386))
(assert (x665 x1952))
(assert (= (or x1052 x1267) x1001))
(assert (= (=> (and (= x1743 (x1579 (+ x1244 31))) (= (x1579 (+ x95 32)) x1440) (= (x375 x95) x1421) (= (x1579 (+ x1305 32)) x1244) (= (x1579 (+ 31 x95)) x718) (= x652 (x1579 (+ x1724 x402))) (not (> x1837 x313)) (= (x1579 (+ x1724 32)) x698) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1743) x402) (= x651 (> x652 18446744073709551615)) (= x1854 (> x1837 x1440)) (= 0 x2176) (not (< 18446744073709551615 x1961)) (= (or x651 x1832) x1352) (= x2176 (ite x1352 1 0)) (= x1832 (> x1724 x652)) (= x1837 (x1579 (+ x1440 x400))) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x313) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x718)) (> x313 x718)) (and (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x718 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1961 (x375 x135)) (= (x1579 (+ x690 x1961)) x95) (not (> x1421 18446744073709551615)) (= (x1075 (* 32 x1421)) x1305) (= x400 (x1075 (* 128 x1421)))) (and (=> (and (not x1854) (= x2003 x652)) x2010) (=> x1854 x1468))) x192))
(assert (x665 x1363))
(assert (x665 x553))
(assert (= (x1433 (x2046 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x1413 x1944 x2040 x1011 x1615))
(assert (x1413 x1360 x2131 x2040 x1944))
(assert (x665 x21))
(assert (x131 (- x1979 x1386)))
(assert (x1124 x1011 x1615 x1764 x1539))
(assert (x665 x559))
(assert (x665 x288))
(assert (x1124 x1539 x1764 x1011 x1615))
(assert (x131 x631))
(assert (x1124 x1615 x1011 x90 x1979))
(assert (x1124 x1043 x1268 x1195 x302))
(assert (= x1853 (and x1640 x243)))
(assert (= x1523 (=> (and (= x1863 (not (< 128 x2103))) (= x1188 (x1579 (+ 96 x2213))) (= x379 (x1521 x719)) (= x719 (x1579 (+ x1455 96)))) (and (=> (= x6 128) x2008) x1863))))
(assert (= (and (not x267) x1180) x277))
(assert (x565 x1615 (- x1011 x90)))
(assert (x565 x2040 (- x1944 x830)))
(assert (x1124 x1043 x1268 x1979 x90))
(assert (x131 (- x1979 x1043)))
(assert (x880 x2222))
(assert (x665 x1024))
(assert (x131 x1421))
(assert (x665 x491))
(assert (x665 x1754))
(assert (= x220 (x1433 (x113 x220))))
(assert (x1413 x1979 x90 x1360 x2131))
(assert (x665 x599))
(assert (=> (>= 10000 x2071) (= (x2046 x2071) (x113 x2071))))
(assert (and (x889 x996 32) (=> (> 32 0) (= (+ (x1631 x996 32) (* (x520 x996 32) 32)) x996)) (x993 x996 32) (x132 x996 32)))
(assert (x2183 x285))
(assert (x665 x1386))
(assert (x565 x1011 (- x1615 x2079)))
(assert (x665 x938))
(assert (x1413 x1979 x90 x302 x1195))
(assert (x665 x417))
(assert (x1413 x302 x1195 x1011 x1615))
(assert (x665 x584))
(assert (x665 x2222))
(assert (x565 x2079 (- x2156 x1195)))
(assert (x565 x1011 (- x1615 x2040)))
(assert (x565 x1360 (- x2131 x213)))
(assert (x1124 x1268 x1043 x1365 x213))
(assert (x131 (- x2173 x1953)))
(assert (x565 x302 (- x1195 x2040)))
(assert (x2183 x1666))
(assert (x665 x1470))
(assert (x1413 x1365 x213 x1043 x1268))
(assert (x1124 x1979 x90 x213 x1365))
(assert (x1566 x198))
(assert (x565 x2131 (- x1360 x2079)))
(assert (x665 x90))
(assert (x1124 x1011 x1615 x2040 x1944))
(assert (x131 (- x302 x1764)))
(assert (x1413 x1360 x2131 x2156 x2079))
(assert (and (x889 x811 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x811 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x811 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x811)) (x993 x811 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x811 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1533 256))
(assert (x665 x1212))
(assert (= (and x1480 x1556) x1160))
(assert (x131 (- x1386 x830)))
(assert (x665 x540))
(assert (x1124 x830 x1953 x213 x1365))
(assert (= x2240 (and x501 x76)))
(assert (x665 x1218))
(assert (x131 (- x2156 x1615)))
(assert (x1124 x1539 x1764 x1386 x2173))
(assert (x665 x937))
(assert (x665 x330))
(assert (x1413 x90 x1979 x213 x1365))
(assert (x665 x306))
(assert (x838 x983))
(assert (and (x889 x777 32) (=> (> 32 0) (= (+ (x1631 x777 32) (* (x520 x777 32) 32)) x777)) (x993 x777 32) (x132 x777 32)))
(assert (x131 (- x2079 x1268)))
(assert (= 0 (x689 (- x638 x1509))))
(assert (x1566 x295))
(assert (x880 x272))
(assert (x131 (- x213 x302)))
(assert (x131 (- x213 x1386)))
(assert (= (and x1238 (not x2231)) x191))
(assert (x131 (- x1539 x1365)))
(assert (x1413 x1365 x213 x1011 x1615))
(assert (x838 x2))
(assert (and (x889 x504 26959946667150639794667015087019630673637144422540572481103610249216) (=> (> 26959946667150639794667015087019630673637144422540572481103610249216 0) (= (+ (x1631 x504 26959946667150639794667015087019630673637144422540572481103610249216) (* (x520 x504 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)) x504)) (x993 x504 26959946667150639794667015087019630673637144422540572481103610249216) (x132 x504 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= (x420 x2177) 0))
(assert (x131 (- x1953 x302)))
(assert (x565 x1539 (- x1764 x1195)))
(assert (= x675 (and x756 x771)))
(assert (x665 x1022))
(assert (x1124 x2156 x2079 x1360 x2131))
(assert (x665 x944))
(assert (x665 x551))
(assert (= (=> (and (= x1114 (x1579 (+ 96 x2082))) (= x1462 (x320 x1114)) (= x2034 (x1579 (+ 96 x1818))) (= (not (< 128 x1056)) x350)) (and (=> (= 128 x2077) x1560) x350)) x196))
(assert (x665 x1221))
(assert (x1413 x213 x1365 x302 x1195))
(assert (x1124 x1268 x1043 x1360 x2131))
(assert (x665 x108))
(assert (x665 x964))
(assert (x665 x1621))
(assert (x665 x1729))
(assert (x880 x672))
(assert (x665 x611))
(assert (= x82 (or x1585 x588 x754)))
(assert (x665 x2251))
(assert (x1464 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1360))
(assert (x665 x2143))
(assert (x665 x471))
(assert (x1124 x1979 x90 x1764 x1539))
(assert (x565 x90 (- x1979 x1944)))
(assert (x665 x570))
(assert (x665 x1111))
(assert (x665 x157))
(assert (x665 x1076))
(assert (x1413 x1539 x1764 x213 x1365))
(assert (x665 x1080))
(assert (= (and x2158 x1294) x1224))
(assert (= (and x633 (not x804)) x753))
(assert (= (and x1554 x1071) x1072))
(assert (x1533 x996))
(assert (and (x889 x478 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x478 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x478 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x478)) (x993 x478 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x478 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x420 x1672) 0))
(assert (x565 x1360 (- x2131 x1268)))
(assert (= (or x33 x191 x714 x461 x2004 x412 x1975 x356 x414 x1822 x68 x1428 x399 x702 x806 x1399) x1623))
(assert (and (x1059 32 x622) (x1452 32 x622) (and (= (* (- x622 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x1495 32 (- x622 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x622 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x622 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x622 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 32 x622) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x622)) (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x622))) (= (* 32 x622) (x1495 32 x622)) (x253 32 x622) (x1123 32 x622) (x2100 32 x622)))
(assert (x131 x1360))
(assert (= (and (not x566) x2083) x2000))
(assert (x565 x1365 (- x213 x2079)))
(assert (and (x312 x2102 1000000000000000000000000000) (x1887 x2102 1000000000000000000000000000) (=> (and (< 0 1000000000000000000000000000) (> x2102 0)) (and (< (- x2102 1000000000000000000000000000) (* 1000000000000000000000000000 (x520 x2102 1000000000000000000000000000))) (>= x2102 (* (x520 x2102 1000000000000000000000000000) 1000000000000000000000000000)))) (x906 x2102 1000000000000000000000000000) (x351 x2102 1000000000000000000000000000)))
(assert (= (and (not x1385) x1044) x127))
(assert (x1413 x1615 x1011 x2040 x1944))
(assert (x1124 x213 x1365 x1195 x302))
(assert (= (=> (and (or (not x1680) (and (= x1745 (x1579 (+ x1960 x878))) x1680)) (= (< x1960 x2021) x1680)) x695) x980))
(assert (x880 x933))
(assert (x565 x2173 (- x1386 x302)))
(assert (= (x1433 (x730 x953 1)) (+ (x1433 x953) 1)))
(assert (x1413 x2173 x1386 x1764 x1539))
(assert (x2183 x723))
(assert (x1464 x1786 x770))
(assert (x131 (- x1979 x1944)))
(assert (x1824 x504))
(assert (x665 x1812))
(assert (x1124 x1764 x1539 x1979 x90))
(assert (x565 x1360 (- x2131 x2156)))
(assert (x1124 x1979 x90 x1195 x302))
(assert (x565 x1043 (- x1268 x90)))
(assert (x665 x1141))
(assert (x565 x1365 (- x213 x1539)))
(assert (x565 x2173 (- x1386 x213)))
(assert (x1124 x2079 x2156 x1944 x2040))
(assert (x665 x2206))
(assert (x880 x469))
(assert (x565 x1615 (- x1011 x1386)))
(assert (x665 x2077))
(assert (x131 (- x2173 x1979)))
(assert (x880 x1483))
(assert (x131 (- x1953 x1360)))
(assert (and (x889 x1743 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x1743 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x1743 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1743)) (x993 x1743 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x1743 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x665 x1869))
(assert (x131 (- x1539 x302)))
(assert (x1124 x1268 x1043 x1615 x1011))
(assert (x565 x1360 (- x2131 x1011)))
(assert (x1413 x2040 x1944 x90 x1979))
(assert (x838 x1287))
(assert (x131 (- x2079 x2040)))
(assert (x565 x1365 (- x213 x1011)))
(assert (= x1102 (or (and x1792 (not x1620)) x1769 x1870 (and x1463 x2211) x1904 x2246 x1345 x1753 x998 x9 x580 x1025 x740 x1010 (and x1696 (not x1154)) x153)))
(assert (x565 x1043 (- x1268 x302)))
(assert (and (x889 x1257 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x1257 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x1257 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1257)) (x993 x1257 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x1257 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x665 x1151))
(assert (and (x889 x1397 32) (=> (> 32 0) (= (+ (x1631 x1397 32) (* (x520 x1397 32) 32)) x1397)) (x993 x1397 32) (x132 x1397 32)))
(assert (x1566 x2071))
(assert (x665 x727))
(assert (x131 x1195))
(assert (x665 x2163))
(assert (x1124 x213 x1365 x1011 x1615))
(assert (x665 x1855))
(assert (x1413 x2040 x1944 x830 x1953))
(assert (= (x113 1461501637330902918203684832716283019655932542975) (x2046 1461501637330902918203684832716283019655932542975)))
(assert (x1124 x1615 x1011 x1386 x2173))
(assert (x1413 x2131 x1360 x213 x1365))
(assert (x665 x852))
(assert (x131 (- x2040 x1979)))
(assert (x1124 x1365 x213 x2040 x1944))
(assert (x665 x912))
(assert (x665 x1305))
(assert (x1124 x1011 x1615 x830 x1953))
(assert (x665 x969))
(assert (x665 x2049))
(assert (x565 x1011 (- x1615 x1979)))
(assert (x131 (- x2156 x1195)))
(assert (x665 x280))
(assert (x665 x398))
(assert (x838 x670))
(assert (= (and x2197 x1680) x1843))
(assert (x665 x2068))
(assert (x665 x631))
(assert (x131 x830))
(assert (x131 (- x2040 x1953)))
(assert (x131 (- x90 x2131)))
(assert (x565 x1043 (- x1268 x1979)))
(assert (x565 x1944 (- x2040 x90)))
(assert (= x1343 (and x1202 x1216)))
(assert (= (x1433 (x113 x226)) x226))
(assert (x665 x1333))
(assert (x665 x2178))
(assert (x131 (- x2131 x1043)))
(assert (= (x1433 (x2046 18446744073709551615)) 18446744073709551615))
(assert (x131 x2055))
(assert (x665 x301))
(assert (x565 x1011 (- x1615 x302)))
(assert (= (or x127 x112 x1597) x1325))
(assert (x1413 x1764 x1539 x1043 x1268))
(assert (x131 (- x1011 x90)))
(assert (x1124 x90 x1979 x1365 x213))
(assert (x665 x451))
(assert (and (x1059 32 x36) (x1452 32 x36) (and (= (* (- x36 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x1495 32 (- x36 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x36 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x36 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x36 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 32 x36) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x36)) (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x36))) (= (* 32 x36) (x1495 32 x36)) (x253 32 x36) (x1123 32 x36) (x2100 32 x36)))
(assert (x565 x2131 (- x1360 x2173)))
(assert (x880 x891))
(assert (x665 x1101))
(assert (x665 x92))
(assert (= x450 (=> (and (not (= 1889567281 x2210)) (= (x1579 (+ x1486 32)) x8) (= x1076 x877) (= x2056 (or (> x970 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x970) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x970))))) (not (= 1818647125 x2210)) (not (= 1631253430 x2210)) (= (x1579 (+ x1486 96)) x446) (= (x106 (x113 x1317)) x905) (= x948 (x257 1461501637330902918203684832716283019655932542975 x1368)) (not (> 4 x1850)) (= x2210 2362630343) (= (x1186 (- x1850 4)) x970) (= x1486 (x1579 (+ x1991 4))) (= x1245 (x106 (x113 x1317))) (not (= x905 0)) (= x1182 63696388041471822930743579425831364866188647584567569692446183701643513561088) (> 2446411860 x2210) (= x198 x948) (> 2835717307 x2210) (= x543 (x1579 (+ 32 x8))) (= 100 x1850) (not (= 1949782873 x2210)) (= x1537 (x1186 (- x446 x1991))) (not (> 1631253430 x2210)) (> x1245 0) (= x271 x2078) (= x1850 x1537)) (and (=> (and (= 0 x788) x2056) x1732) (=> (and (not x2056) (and (= true x2231) (= x198 x1788))) (and (=> (and (= x1621 0) (not x2231)) x1865) (=> (and (and (= (> x2013 0) x240) (< x2013 256) (<= x2013 255) (= x86 (x1150 (x113 x609) x2144 0)) (>= x2013 0) (= x2216 x877) (= x2013 (x2261 x86)) (= x951 x271) (= x2144 (x1150 (x113 66268296141940672851042108147304593538321322149885339258387047461996478413388) (x2046 0) 0))) x2231) (and (=> (not x240) x1165) (=> (and (and (<= x5 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1744 (< x1451 x5)) (>= x5 0)) x240) (and (=> (and (= x1621 0) x1744) x1865) (=> (and (and (and x488 (and (not (= 1997499061 x890)) (= x1314 89953063794570797914675343120038501642627609741519254829220540789936042803200) (= x316 x207) (= 68 x1859) (= 3336544575 x890) (< 0 x1262) (= (x106 (x113 x1544)) x1262) (= (x1186 (- x1859 4)) x497) (= x1351 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x497) (and (> 64 x497) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x497) true)))) (not (< x1859 4)) (= x1576 x100) (not (= 1703538655 x890)) (= 68 x1859) (not (= x890 1008072988)))) (and (= x2039 128) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1576) (>= 1461501637330902918203684832716283019655932542975 x685) (<= 0 x685) (<= x316 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1365 (x1186 (- x1451 x5))) (>= x316 0) (<= 0 x1576) (= (= x1544 x685) x488) (> 1461501637330902918203684832716283019655932542976 x685))) (not x1744)) (and (=> (and (not x1351) (= x170 (= x1576 0))) (and (=> (and (= x1765 x234) x170) x1350) (=> (and (not x170) (= x800 (> x207 x100))) (and (=> x800 x31) (=> (and (not x800) (and (= (> x865 115792089237316195423570985008687907853269984665640) x369) (= x217 (= 0 (ite x369 1 0))) (= x865 (x1186 (- x100 x207))))) (and (=> (and x217 (and (= (x1075 (* x865 1000000000000000000000000000)) x274) (= x2131 (x520 x274 x100)) (= (> x498 x2131) x813))) (and (=> (and (not x813) (= (> x498 1000000000000000000000000000) x1447)) (and (=> (and (and (= (x1186 (- 1000000000000000000000000000 x498)) x292) (= (= x498 1000000000000000000000000000) x972) (= (< x2131 x498) x1270)) (not x1447)) (and (=> x1270 x31) (=> (and (not x1270) (and (= x566 (> x2207 x1187)) (= x1195 (x1186 (- x2131 x498))))) (and (=> (and (and (= (ite (not x1230) 1 0) x1741) (= (= x1590 0) x605) (= (= 0 x302) x1230) (= x1326 (ite (< x750 x1195) 1 0)) (= (x520 115792089237316195423570985008687907853269984665640564039457584007913129639935 x302) x750) (= x1590 (x257 x1741 x1326)) (= (x1186 (- x1187 x2207)) x302)) (not x566)) (and (=> (not x605) x31) (=> (and (= (x1075 (x1495 x302 x1195)) x778) x605) (and (=> (and (not x972) (and (= x615 (x520 x778 x292)) (= x1404 (x1186 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x615))) (= x2053 (< x1404 x2207)))) (and (=> x2053 x31) (=> (and (and (= x176 x234) (= (x1579 (+ x2207 x615)) x176)) (not x2053)) x1350))) (=> x972 x31))))) (=> x566 x31))))) (=> x1447 x31))) (=> (and (= x2114 (< x2207 x1765)) x813) (and (=> x2114 x31) (=> (and (not x2114) (and (= (ite (not x1915) 1 0) x1189) (= x1951 (x520 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1360)) (= (ite (< x1951 x2131) 1 0) x456) (= x1657 (= 0 x1080)) (= (x1186 (- x2207 x1765)) x1360) (= (x257 x1189 x456) x1080) (= (= 0 x1360) x1915))) (and (=> (not x1657) x31) (=> (and (and (= (> x498 0) x1211) (= x258 (x1075 (x1495 x1360 x2131)))) x1657) (and (=> (not x1211) x31) (=> (and (and (= x44 (x1186 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2161))) (= (> x1765 x44) x1385) (= (x520 x258 x498) x2161)) x1211) (and (=> (and (not x1385) (and (= x579 x234) (= x579 (x1579 (+ x2161 x1765))))) x1350) (=> x1385 x31))))))))))) (=> (not x217) x31))))))) (=> x1351 x31)))))))))))))
(assert (= x300 (or (and (not x1554) x1071) x1072)))
(assert (x665 x1862))
(assert (= (x1433 (x2046 1000000000000000000000000000)) 1000000000000000000000000000))
(assert (x665 x1417))
(assert (x665 x1928))
(assert (= x1643 (=> (and (and (= (x1579 (+ 32 x1573)) x1493) (= (x120 x124) x2040) (= x2167 (= x1317 x1760)) (= x416 (= 0 x870)) (< (x1495 x1043 x1268) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x1088) (= (or (> x715 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x715 32) (= (<= x715 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1088) (<= 0 x1386) (= x1479 (x520 x39 x486)) (= (x1495 x1043 x1268) x285) (< (+ 1000000000000000000000000000 x973) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not x416) (= x1082 (x1150 (x113 x1166) (x2046 15) 0)) (= x124 (x730 x1082 1)) (> x486 0) (= (x1707 128) x1043) (= (x520 x285 31536000) x973) (= x1760 (x257 1461501637330902918203684832716283019655932542975 x992)) (< (x1495 x1386 x2173) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x2040 0) (= (x1579 (+ x2219 32)) x71) (= x39 (x1495 x2040 x1944)) (< (x1495 x2040 x1944) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x973 x864) (= (x257 1461501637330902918203684832716283019655932542975 x1368) x2072) (= (x1579 (+ x71 4)) x1573) (= x2173 (+ x64 x864)) (= (x1186 (- x1493 x71)) x881) (= x1913 (x286 x2219)) (<= x1386 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2040) (= 1000000000000000000000000000 x64) (= x1944 (x520 x723 1000000000000000000000000000)) (= x723 (x1495 x1386 x2173))) (and (and (and (not (= x2133 1818647125)) (not x1663) (<= x1130 1461501637330902918203684832716283019655932542975) (not (= 1631253430 x2133)) (= x1728 36) (not (> 4 x1728)) (= (> x1913 x1108) x470) (= (or (> x766 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x766) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x766)))) x1663) (= x2159 (x1946 x1419)) (= x2072 x1130) (= x1108 (x1081 x71)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x2203) (<= x2159 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2133 1889567281) (= x1130 x518) (= (x1150 (x113 x1130) (x2046 1) 0) x1419) (> 2835717307 x2133) (= (x106 (x113 x1317)) x1982) (= x766 (x1186 (- x1728 4))) (= (x1579 (+ x71 32)) x1273) (> 2446411860 x2133) (not (> 1631253430 x2133)) (<= 0 x2159) (< 0 x1982) (= x881 x1728)) (or (and (not x470) (and (= 0 x1076) (= x2078 x1913))) (and (and (= x2059 x1076) (= x1108 x2078) (= x2059 (x1186 (- x1913 x1108))) (not (> x1108 x1913))) x470))) x2167)) x1506)))
(assert (x1124 x213 x1365 x1979 x90))
(assert (x880 x739))
(assert (x1533 x950))
(assert (x565 x2156 (- x2079 x302)))
(assert (x565 x1011 (- x1615 x1360)))
(assert (= (or x828 x943) x1458))
(assert (x665 x1658))
(assert (x1533 x1659))
(assert (x665 x143))
(assert (= 0 (x420 x2201)))
(assert (x1124 x1011 x1615 x1979 x90))
(assert (= 0 (x420 x1153)))
(assert (x665 x1617))
(assert (x565 x90 (- x1979 x1539)))
(assert (x565 x213 (- x1365 x1043)))
(assert (x131 (- x1365 x1268)))
(assert (x565 x2131 (- x1360 x2156)))
(assert (x565 x1011 (- x1615 x213)))
(assert (x665 x1728))
(assert (= x1864 (and x1270 x1034)))
(assert (x665 x2078))
(assert (x665 x825))
(assert (x1464 115792089237316195423570985008687907853269984665640564039457584007913129639935 x830))
(assert (= (and x744 x1099) x2229))
(assert (x665 x1628))
(assert (= (x420 x749) 0))
(assert (x1413 x2156 x2079 x1360 x2131))
(assert (x1464 115792089237316195423570985008687907853269984665640564039457584007913129639935 x90))
(assert (x131 (- x1011 x1360)))
(assert (x665 x1121))
(assert (x665 x1510))
(assert (x665 x287))
(assert (= 33540519 (x1433 (x2046 33540519))))
(assert (= (and x1097 (not x1588)) x1529))
(assert (x131 x1268))
(assert (x838 x248))
(assert (x565 x2173 (- x1386 x1011)))
(assert (x1124 x1615 x1011 x1764 x1539))
(assert (x1124 x1386 x2173 x1979 x90))
(assert (x1124 x1268 x1043 x2131 x1360))
(assert (x665 x924))
(assert (x665 x440))
(assert (x565 x1979 (- x90 x2040)))
(assert (x131 x2131))
(assert (x665 x1815))
(assert (x665 x970))
(assert (= x1025 (and x155 x343)))
(assert (x131 (- x1764 x2156)))
(assert (x1413 x2079 x2156 x302 x1195))
(assert (= (and x899 (not x349)) x1780))
(assert (x131 (- x1360 x1365)))
(assert (x1124 x1365 x213 x1764 x1539))
(assert (x1413 x213 x1365 x1386 x2173))
(assert (x665 x637))
(assert (= x784 (and (not x2037) x1604)))
(assert (x665 x918))
(assert (x1124 x1979 x90 x2079 x2156))
(assert (x665 x875))
(assert (x565 x1043 (- x1268 x1615)))
(assert (x665 x1153))
(assert (x1124 x1539 x1764 x302 x1195))
(assert (x838 x933))
(assert (= x1700 (and x1364 x319)))
(assert (x665 x917))
(assert (x1124 x1386 x2173 x1953 x830))
(assert (x131 (- x2156 x1011)))
(assert (x1413 x1764 x1539 x213 x1365))
(assert (x665 x1287))
(assert (x565 x1539 (- x1764 x2173)))
(assert (x1124 x1043 x1268 x1011 x1615))
(assert (x1124 x1386 x2173 x1764 x1539))
(assert (x665 x1634))
(assert (x1413 x302 x1195 x1764 x1539))
(assert (x1533 x1313))
(assert (x665 x961))
(assert (x1413 x1268 x1043 x302 x1195))
(assert (x131 (- x1386 x1360)))
(assert (x665 x302))
(assert (= (=> (and (and (and (= x762 89953063794570797914675343120038501642627609741519254829220540789936042803200) (not (= 1997499061 x487)) (= x1511 68) (= x1511 68) (= x487 3336544575) (= x759 x252) (= x728 (x106 (x113 x1544))) (not (> 4 x1511)) (= x1963 (x1186 (- x1511 4))) (= x1217 x306) (< 0 x728) (= x2005 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1963) true) (< x1963 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1963))) (not (= 1008072988 x487)) (not (= 1703538655 x487))) x1606) (and (<= 0 x486) (= x485 (or (and (< x1201 32) (= true (<= x1201 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1201))) (= (< x717 x989) x1770) (= (x1186 (- x1451 x989)) x1268) (>= x252 0) (>= x306 0) (= x342 (x1579 (+ x2219 4))) (<= x989 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x1665 265030696) (>= 255 x968) (= 36 x1783) (= x1665 90077150) (= x1971 (x1579 (+ x342 32))) (not (> 4 x1783)) (= (x1150 (x113 x1166) (x2046 15) 0) x1528) (<= x252 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 256 x968) (= x1166 x1500) (>= x989 0) (> x968 0) (= (x1652 x1528) x968) (not (= x1665 33540519)) (<= 0 x968) (<= x486 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x311 x1783) (= (x1186 (- x1783 4)) x1201) (= 128 x144) (= 2428475159928928253380189918045730325133814103720850528466242065960167014400 x709) (> 1631253430 x1665) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x306) (< 0 x1042) (= x311 (x1186 (- x1971 x2219))) (> 1461501637330902918203684832716283019655932542976 x946) (= (x730 x1507 2) x1874) (= (x318 x1874) x486) (<= 0 x946) (= x359 (x257 1461501637330902918203684832716283019655932542975 x1368)) (not x1770) (= x1606 (= x1544 x946)) (not x485) (< x1665 791671133) (= (x106 (x113 x1317)) x1042) (>= 1461501637330902918203684832716283019655932542975 x946) (= x1507 (x1150 (x113 x1166) (x2046 15) 0)) (= x359 x1166))) (and (=> (and (not x2005) (= (= 0 x252) x4)) (and (=> (and (= x1765 x678) x4) x12) (=> (and (= x1453 (< x759 x1217)) (not x4)) (and (=> (and (and (= (< 115792089237316195423570985008687907853269984665640 x805) x2075) (= (x1186 (- x759 x1217)) x805) (= (= (ite x2075 1 0) 0) x1846)) (not x1453)) (and (=> (and x1846 (and (= x781 (x1075 (* 1000000000000000000000000000 x805))) (= x1876 (> x498 x1953)) (= x1953 (x520 x781 x759)))) (and (=> (and (= (> x498 1000000000000000000000000000) x705) (not x1876)) (and (=> x705 x430) (=> (and (and (= x1106 (> x498 x1953)) (= (= 1000000000000000000000000000 x498) x472) (= (x1186 (- 1000000000000000000000000000 x498)) x770)) (not x705)) (and (=> (and (not x1106) (and (= x2079 (x1186 (- x1953 x498))) (= x1782 (< x1187 x2207)))) (and (=> x1782 x430) (=> (and (not x1782) (and (= x2185 (ite (not x296) 1 0)) (= (= 0 x2156) x296) (= (= x268 0) x1640) (= (x520 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2156) x931) (= (ite (> x2079 x931) 1 0) x365) (= x268 (x257 x2185 x365)) (= x2156 (x1186 (- x1187 x2207))))) (and (=> (and x1640 (= (x1075 (x1495 x2156 x2079)) x1786)) (and (=> (and (and (= x270 (x1186 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x785))) (= x1099 (< x270 x2207)) (= (x520 x1786 x770) x785)) (not x472)) (and (=> x1099 x430) (=> (and (and (= x678 x2193) (= (x1579 (+ x785 x2207)) x2193)) (not x1099)) x12))) (=> x472 x430))) (=> (not x1640) x430))))) (=> x1106 x430))))) (=> (and (= x2061 (> x1765 x2207)) x1876) (and (=> x2061 x430) (=> (and (not x2061) (and (= (= 0 x1625) x349) (= (x520 115792089237316195423570985008687907853269984665640564039457584007913129639935 x830) x855) (= (= 0 x830) x1983) (= (x257 x1790 x2041) x1625) (= (ite (not x1983) 1 0) x1790) (= (ite (< x855 x1953) 1 0) x2041) (= (x1186 (- x2207 x1765)) x830))) (and (=> (and x349 (and (= (> x498 0) x846) (= (x1075 (x1495 x830 x1953)) x2256))) (and (=> (not x846) x430) (=> (and (and (= (x1186 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2101)) x851) (= x2101 (x520 x2256 x498)) (= x2158 (> x1765 x851))) x846) (and (=> x2158 x430) (=> (and (not x2158) (and (= x1190 (x1579 (+ x2101 x1765))) (= x678 x1190))) x12))))) (=> (not x349) x430))))))) (=> (not x1846) x430))) (=> x1453 x430))))) (=> x2005 x430))) x1220))
(assert (x131 (- x2131 x1953)))
(assert (x131 (- x2040 x1365)))
(assert (x665 x1197))
(assert (x665 x1980))
(assert (= (or x1673 x1502 x49 x190 x1008) x232))
(assert (= x1898 (x1433 (x113 x1898))))
(assert (x665 x1275))
(assert (x1124 x1386 x2173 x1195 x302))
(assert (x665 x1985))
(assert (x665 x667))
(assert (x1533 x811))
(assert (x665 x1489))
(assert (x665 x573))
(assert (x665 x293))
(assert (x565 x1386 (- x2173 x2156)))
(assert (x131 (- x1979 x2173)))
(assert (= x1560 (=> (and (or (and (= (x1579 (+ x1056 x1818)) x1068) x1299) (not x1299)) (= x1299 (< x1056 x2077))) x845)))
(assert (x665 x1246))
(assert (x665 x1548))
(assert (x131 (- x830 x213)))
(assert (x880 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x665 x1115))
(assert (x131 (- x1944 x830)))
(assert (x1124 x2040 x1944 x90 x1979))
(assert (= x1229 (and (not x2238) x1924)))
(assert (and (x889 x1890 32) (=> (> 32 0) (= (+ (x1631 x1890 32) (* (x520 x1890 32) 32)) x1890)) (x993 x1890 32) (x132 x1890 32)))
(assert (x131 (- x1011 x1979)))
(assert (x665 x934))
(assert (x665 x2055))
(assert (x1124 x1979 x90 x1953 x830))
(assert (x131 (- x2079 x90)))
(assert (= (=> (and (= x911 (not (< 32 x1960))) (= x732 x878) (= x1581 x1231) (= x736 (x1408 x1581))) (and (=> (= x2021 32) x980) x911)) x1445))
(assert (x665 x690))
(assert (x665 x2103))
(assert (x665 x1083))
(assert (x1169 x1451))
(assert (x131 (- x1365 x1944)))
(assert (x665 x1313))
(assert (x1124 x1360 x2131 x830 x1953))
(assert (x565 x830 (- x1953 x1268)))
(assert (x665 x901))
(assert (x131 (- x1043 x1360)))
(assert (x665 x1958))
(assert (x565 x2131 (- x1360 x1539)))
(assert (x665 x739))
(assert (and (x889 x670 32) (=> (> 32 0) (= (+ (x1631 x670 32) (* (x520 x670 32) 32)) x670)) (x993 x670 32) (x132 x670 32)))
(assert (x665 x2112))
(assert (x665 x447))
(assert (x131 (- x1764 x1386)))
(assert (= (or x1834 x1102) x319))
(assert (x665 x1179))
(assert (x131 (- x2173 x1615)))
(assert (x131 (- x1365 x1953)))
(assert (x665 x662))
(assert (x1124 x2040 x1944 x1953 x830))
(assert (x665 x1462))
(assert (x665 x1488))
(assert (x665 x1668))
(assert (x880 x456))
(assert (x880 x1790))
(assert (x1124 x302 x1195 x1979 x90))
(assert (= (and x1097 x1588) x368))
(assert (x1566 x1166))
(assert (x131 (- x2079 x1360)))
(assert (x665 x1949))
(assert (x1124 x2173 x1386 x2156 x2079))
(assert (= (x113 22140752835961941075817313386879028057460502132199729129551447365926944505856) (x2046 22140752835961941075817313386879028057460502132199729129551447365926944505856)))
(assert (x565 x1386 (- x2173 x830)))
(assert (x838 x272))
(assert (x665 x1520))
(assert (x1413 x1043 x1268 x213 x1365))
(assert (x565 x302 (- x1195 x1386)))
(assert (x1124 x1043 x1268 x1539 x1764))
(assert (= (and x1587 (not x470)) x1258))
(assert (x1413 x830 x1953 x302 x1195))
(assert (= x501 (and x1583 x1503)))
(assert (= x963 (or x1517 x2232)))
(assert (= (x1433 (x2046 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x1124 x2079 x2156 x1011 x1615))
(assert (x2183 x1994))
(assert (= (x420 x1558) 0))
(assert (= (x1433 (x2046 2961265839)) 2961265839))
(assert (x565 x213 (- x1365 x1360)))
(assert (x665 x1183))
(assert (x1124 x1043 x1268 x2131 x1360))
(assert (x1124 x1365 x213 x1386 x2173))
(assert (= x243 (and (not x1782) x2136)))
(assert (x665 x2194))
(assert (= (and (not x1795) x232) x697))
(assert (x1533 x362))
(assert (= (x1433 (x113 x609)) x609))
(assert (x665 x717))
(assert (x665 x1666))
(assert (x665 x1092))
(assert (x665 x2210))
(assert (x565 x1011 (- x1615 x1268)))
(assert (x565 x1043 (- x1268 x2079)))
(assert (x665 x1913))
(assert (x1413 x1365 x213 x2040 x1944))
(assert (= (x113 1000000000000000000000000000) (x2046 1000000000000000000000000000)))
(assert (x1413 x1195 x302 x1043 x1268))
(assert (x665 x2071))
(assert (x880 x273))
(assert (x665 x480))
(assert (= (+ 1 (x1433 x431)) (x1433 (x730 x431 1))))
(assert (x1124 x1539 x1764 x1979 x90))
(assert (x665 x1608))
(assert (= x2154 (and x692 x411)))
(assert (x131 (- x1615 x830)))
(assert (x131 (- x1979 x830)))
(assert (x665 x15))
(assert (x665 x1708))
(assert (x565 x1539 (- x1764 x1979)))
(assert (x665 x1023))
(assert (x565 x1764 (- x1539 x1953)))
(assert (x665 x1561))
(assert (= (=> (and (= x1051 (= 0 x1162)) (or (not x1051) x1051)) x1265) x1046))
(assert (x665 x1613))
(assert (x665 x1152))
(assert (x1124 x1043 x1268 x2156 x2079))
(assert (x665 x2121))
(assert (x665 x736))
(assert (x665 x2113))
(assert (x665 x30))
(assert (= (and x1888 x860) x1328))
(assert (x1124 x1615 x1011 x2173 x1386))
(assert (x1124 x1195 x302 x830 x1953))
(assert (x880 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x1413 x1944 x2040 x2156 x2079))
(assert (x1413 x1615 x1011 x90 x1979))
(assert (x1533 x1483))
(assert (x565 x1539 (- x1764 x1953)))
(assert (x665 x1412))
(assert (x665 x1581))
(assert (x665 x1532))
(assert (x1124 x1953 x830 x1365 x213))
(assert (= 0 (x663 x825)))
(assert (x2183 x1159))
(assert (x565 x1764 (- x1539 x1011)))
(assert (x1473 x1741 x1326))
(assert (x1124 x1764 x1539 x1615 x1011))
(assert (x131 (- x1360 x1764)))
(assert (x665 x543))
(assert (= x702 (and x1825 x2006)))
(assert (x665 x1017))
(assert (x665 x1089))
(assert (x665 x28))
(assert (x2183 x258))
(assert (x131 (- x1043 x1764)))
(assert (x1124 x1979 x90 x1539 x1764))
(assert (= (=> (and (= x1411 (x375 x421)) (= x622 (x375 x1670)) (= (ite x625 1 0) x586) (= (x1579 (+ 32 x774)) x421) (= x618 (< x1709 x147)) (= (> x1198 x1976) x756) (= x2150 (x1075 (* x622 32))) (= (x1579 (+ x1670 32)) x1976) (not (< 18446744073709551615 x1411)) (= x1198 (x1579 (+ x2150 x1976))) (= x1739 (x1579 (+ x549 32))) (= (or x618 x1259) x625) (= x586 0) (or (and (> x1391 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x1391 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1391 x313))) (= x1677 (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x996)) (not (< 18446744073709551615 x622)) (= x1709 (x1579 (+ x147 x1677))) (not (> x1198 x313)) (= (< 18446744073709551615 x1709) x1259) (= (x1579 (+ 31 x1670)) x1391) (= (x1579 (+ x690 x1411)) x1670) (= (x1075 (* x622 32)) x549) (= x996 (x1579 (+ 31 x1739))) (= x1094 (x1579 (+ 32 x147)))) (and (=> (and (not x756) (= x1709 x122)) x205) (=> x756 x1797))) x1885))
(assert (x131 (- x1268 x1764)))
(assert (= (or x475 (and (not x1051) x1284)) x393))
(assert (= (and (not x1330) x1281) x1675))
(assert (x1413 x2173 x1386 x1360 x2131))
(assert (x565 x302 (- x1195 x1365)))
(assert (x1124 x2131 x1360 x1386 x2173))
(assert (x131 x1365))
(assert (x565 x1979 (- x90 x2131)))
(assert (x1124 x1365 x213 x90 x1979))
(assert (= (and (not x1680) x2197) x613))
(assert (x1124 x213 x1365 x1615 x1011))
(assert (x665 x572))
(assert (x131 (- x213 x2131)))
(assert (x131 x729))
(assert (x665 x395))
(assert (x565 x2131 (- x1360 x1011)))
(assert (x565 x2131 (- x1360 x1365)))
(assert (x1124 x1011 x1615 x1539 x1764))
(assert (x565 x1195 (- x302 x1944)))
(assert (x665 x685))
(assert (x665 x2058))
(assert (x565 x302 (- x1195 x1944)))
(assert (= (and x2214 x1383) x2152))
(assert (x665 x211))
(assert (x1413 x1539 x1764 x2040 x1944))
(assert (x565 x830 (- x1953 x90)))
(assert (x1464 115792089237316195423570985008687907853269984665640564039457584007913129639935 x302))
(assert (x880 x365))
(assert (x665 x259))
(assert (x665 x1965))
(assert (x1124 x90 x1979 x1011 x1615))
(assert (x1124 x90 x1979 x1043 x1268))
(assert (x1413 x2131 x1360 x1386 x2173))
(assert (= (or x1060 x499) x29))
(assert (x1124 x1043 x1268 x302 x1195))
(assert (x665 x250))
(assert (x565 x1979 (- x90 x1944)))
(assert (x565 x1979 (- x90 x302)))
(assert (x565 x1195 (- x302 x2156)))
(assert (x665 x2059))
(assert (x665 x6))
(assert (x565 x302 (- x1195 x1615)))
(assert (x665 x823))
(assert (x131 (- x213 x1268)))
(assert (x665 x1280))
(assert (x131 (- x830 x1615)))
(assert (x665 x1942))
(assert (x665 x42))
(assert (= (and (not x217) x602) x1436))
(assert (x565 x1944 (- x2040 x830)))
(assert (x665 x483))
(assert (x131 (- x2079 x1615)))
(assert (x665 x1283))
(assert (= (or x697 x2095) x238))
(assert (x665 x295))
(assert (and (x889 x983 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x983 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x983 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x983)) (x993 x983 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x983 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x665 x1273))
(assert (x565 x1011 (- x1615 x1953)))
(assert (x1533 x262))
(assert (x665 x1423))
(assert (x838 x1754))
(assert (= (and (not x800) x822) x602))
(assert (x665 x1930))
(assert (x565 x2040 (- x1944 x1539)))
(assert (x1533 x65))
(assert (x565 x1764 (- x1539 x830)))
(assert (x665 x271))
(assert (= (and x1738 (not x2227)) x168))
(assert (x665 x783))
(assert (x1533 x862))
(assert (x1124 x1360 x2131 x2040 x1944))
(assert (x665 x1248))
(assert (x565 x1268 (- x1043 x2079)))
(assert (x1413 x1365 x213 x302 x1195))
(assert (x565 x1764 x1539))
(assert (x131 (- x1764 x1011)))
(assert (x565 x1195 (- x302 x1386)))
(assert (x565 x1011 (- x1615 x2131)))
(assert (= (and x170 x798) x112))
(assert (x665 x159))
(assert (x131 (- x2173 x1764)))
(assert (x565 x90 (- x1979 x1953)))
(assert (x131 (- x2156 x1268)))
(assert (= x1284 (or x1968 x1935)))
(assert (x665 x1616))
(assert (x665 x2024))
(assert (x565 x1043 (- x1268 x1764)))
(assert (x665 x207))
(assert (x665 x1992))
(assert (x665 x1455))
(assert (x565 x2079 (- x2156 x2131)))
(assert (x1124 x90 x1979 x1953 x830))
(assert (x1124 x1944 x2040 x830 x1953))
(assert (x1124 x2079 x2156 x1195 x302))
(assert (x665 x373))
(assert (x565 x830 (- x1953 x1360)))
(assert (x1124 x1268 x1043 x302 x1195))
(assert (x131 (- x2173 x1195)))
(assert (= (and (not x972) x1439) x202))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1433 (x2046 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (x131 (- x830 x1979)))
(assert (x665 x310))
(assert (x1124 x2173 x1386 x2079 x2156))
(assert (= (or x1009 x1035 x1181 x2247 x328) x722))
(assert (= x2232 (and x2051 x1918)))
(assert (x665 x1966))
(assert (x131 (- x302 x2173)))
(assert (x565 x1043 (- x1268 x1195)))
(assert (x1124 x1268 x1043 x2079 x2156))
(assert (x665 x248))
(assert (x1124 x1195 x302 x90 x1979))
(assert (x565 x1268 (- x1043 x1365)))
(assert (x880 x2132))
(assert (x1124 x302 x1195 x2173 x1386))
(assert (x565 x90 (- x1979 x1011)))
(assert (x665 x419))
(assert (x1124 x1360 x2131 x1011 x1615))
(assert (= x1044 (and x1149 x1211)))
(assert (= (x1433 (x2046 2625015131)) 2625015131))
(assert (x131 (- x1953 x1365)))
(assert (= x806 (and x1556 (not x1480))))
(assert (x665 x1483))
(assert (x565 x1979 (- x90 x1365)))
(assert (x665 x273))
(assert (x665 x1592))
(assert (= (x2046 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x113 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x565 x1365 (- x213 x1764)))
(assert (x131 (- x830 x1360)))
(assert (x131 (- x90 x1764)))
(assert (x1413 x1764 x1539 x2040 x1944))
(assert (x565 x2079 (- x2156 x1365)))
(assert (x665 x2196))
(assert (x565 x1944 (- x2040 x213)))
(assert (x665 x1047))
(assert (x665 x768))
(assert (x131 (- x1615 x302)))
(assert (x131 (- x1360 x2079)))
(assert (x665 x443))
(assert (x565 x1539 (- x1764 x1615)))
(assert (x565 x2156 (- x2079 x90)))
(assert (x665 x215))
(assert (x1533 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x1413 x2079 x2156 x1011 x1615))
(assert (x665 x968))
(assert (x1566 x947))
(assert (x665 x2216))
(assert (x1124 x1360 x2131 x1386 x2173))
(assert (x665 x2207))
(assert (x565 x1953 (- x830 x1195)))
(assert (x665 x947))
(assert (x665 x2174))
(assert (x1124 x1615 x1011 x1539 x1764))
(assert (x665 x1542))
(assert (= (and (not x883) x385) x526))
(assert (x665 x616))
(assert (x665 x1741))
(assert (x565 x213 (- x1365 x1979)))
(assert (x665 x1914))
(assert (x565 x1764 (- x1539 x1195)))
(assert (x665 x987))
(assert (x565 x2040 (- x1944 x1953)))
(assert (x665 x524))
(assert (x1124 x2131 x1360 x1011 x1615))
(assert (x1124 x1365 x213 x2173 x1386))
(assert (x838 x426))
(assert (x565 x1764 (- x1539 x1268)))
(assert (x1413 x2040 x1944 x1011 x1615))
(assert (= x58 (and (not x1264) x465)))
(assert (= 1889567281 (x1433 (x2046 1889567281))))
(assert (x131 (- x1953 x2040)))
(assert (= x209 (or x2182 x2031)))
(assert (x1124 x1979 x90 x1365 x213))
(assert (x665 x1028))
(assert (x665 x367))
(assert (x565 x1360 (- x2131 x1539)))
(assert (x565 x1539 (- x1764 x1360)))
(assert (x2183 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (x1433 (x2046 1008072988)) 1008072988))
(assert (x2026 x262))
(assert (x665 x1142))
(assert (x665 x1841))
(assert (x565 x1944 (- x2040 x1195)))
(assert (x1124 x302 x1195 x1043 x1268))
(assert (x665 x928))
(assert (x565 x1539 (- x1764 x1365)))
(assert (x131 (- x1539 x90)))
(assert (x565 x90 (- x1979 x2079)))
(assert (x665 x1522))
(assert (x665 x1319))
(assert (x565 x1953 (- x830 x1764)))
(assert (x1124 x213 x1365 x1360 x2131))
(assert (x665 x1309))
(assert (x880 x1326))
(assert (x1124 x1195 x302 x1944 x2040))
(assert (x665 x609))
(assert (x1124 x1979 x90 x1944 x2040))
(assert (x131 (- x1011 x1386)))
(assert (x131 (- x1539 x2079)))
(assert (x880 x555))
(assert (x665 x863))
(assert (x565 x2173 (- x1386 x2079)))
(assert (x1413 x2079 x2156 x1360 x2131))
(assert (x665 x1490))
(assert (x1473 x1790 x2041))
(assert (x665 x1393))
(assert (x1413 x1944 x2040 x1764 x1539))
(assert (= (x113 428079936) (x2046 428079936)))
(assert (x131 (- x1539 x2173)))
(assert (x1124 x1043 x1268 x1365 x213))
(assert (x665 x976))
(assert (x565 x1615 (- x1011 x213)))
(assert (x665 x335))
(assert (x665 x887))
(assert (x131 (- x1944 x2156)))
(assert (x131 (- x1944 x302)))
(assert (x665 x2179))
(assert (x665 x777))
(assert (x1533 x992))
(assert (= (x420 x810) 0))
(assert (x1124 x1360 x2131 x2173 x1386))
(assert (x665 x1721))
(assert (x665 x2213))
(assert (= (or x368 x1529 x1147 x277 x1674) x2160))
(assert (x565 x1615 (- x1011 x1268)))
(assert (= (x2046 1461501637330902918203684832716283019655932542976) (x113 1461501637330902918203684832716283019655932542976)))
(assert (x131 (- x1615 x2173)))
(assert (x1413 x1268 x1043 x1764 x1539))
(assert (= x1607 (and x705 x1692)))
(assert (= x1732 (=> (and (or x1554 (not x1554)) (= (= x788 0) x1554)) x70)))
(assert (x665 x1987))
(assert (x665 x2072))
(assert (x1124 x1043 x1268 x1953 x830))
(assert (= (and x202 x2053) x1437))
(assert (x1124 x1539 x1764 x830 x1953))
(assert (x665 x1936))
(assert (x1124 x2156 x2079 x1615 x1011))
(assert (x565 x1944 (- x2040 x1615)))
(assert (x131 (- x1043 x1953)))
(assert (= x301 (x1433 (x113 x301))))
(assert (x131 x1615))
(assert (x665 x2155))
(assert (x1413 x2156 x2079 x1764 x1539))
(assert (x1124 x213 x1365 x2079 x2156))
(assert (x131 x1290))
(assert (x665 x2020))
(assert (x1413 x302 x1195 x1386 x2173))
(assert (x665 x977))
(assert (x131 (- x213 x1043)))
(assert (x665 x1048))
(assert (x665 x2041))
(assert (x1124 x1360 x2131 x1268 x1043))
(assert (= (x2046 2592000) (x113 2592000)))
(assert (x1124 x1615 x1011 x2156 x2079))
(assert (= (and x1825 (not x2006)) x1202))
(assert (x665 x851))
(assert (x665 x161))
(assert (x1413 x2131 x1360 x2040 x1944))
(assert (x1413 x1268 x1043 x1360 x2131))
(assert (x565 x2079 (- x2156 x1944)))
(assert (x131 (- x2079 x213)))
(assert (x565 x1953 (- x830 x213)))
(assert (= x430 (=> (and (= x870 0) (= x715 x2063)) x1643)))
(assert (x1124 x213 x1365 x2131 x1360))
(assert true)
(assert (= x994 (=> (and (= (x266 x1417) x910) (= x574 (not (> x107 128))) (= x1417 (x1579 (+ x892 96))) (= x358 (x1579 (+ 96 x1720)))) (and x574 (=> (= 128 x649) x2142)))))
(assert (x131 (- x2156 x2173)))
(assert (x665 x884))
(assert (x565 x90 (- x1979 x2156)))
(assert (x131 (- x1011 x2173)))
(assert (x1413 x2173 x1386 x213 x1365))
(assert (x1124 x90 x1979 x2173 x1386))
(assert (x1124 x1764 x1539 x1195 x302))
(assert (x1124 x90 x1979 x1195 x302))
(assert (x1124 x1268 x1043 x1011 x1615))
(assert (x665 x951))
(assert (x1533 x891))
(assert (= (x2046 265030696) (x113 265030696)))
(assert (= (and x4 x336) x754))
(assert (x1413 x1764 x1539 x2156 x2079))
(assert (x565 x1764 (- x1539 x2173)))
(assert (and (x889 x1226 18446744073709551616) (=> (> 18446744073709551616 0) (= (+ (x1631 x1226 18446744073709551616) (* (x520 x1226 18446744073709551616) 18446744073709551616)) x1226)) (x993 x1226 18446744073709551616) (x132 x1226 18446744073709551616)))
(assert (=> (<= x220 10000) (= (x2046 x220) (x113 x220))))
(assert (and (x889 x2 32) (=> (> 32 0) (= (+ (x1631 x2 32) (* (x520 x2 32) 32)) x2)) (x993 x2 32) (x132 x2 32)))
(assert (x2183 x486))
(assert (x665 x175))
(assert (x565 x1979 (- x90 x2173)))
(assert (x131 (- x1386 x1979)))
(assert (= (x2046 599290589) (x113 599290589)))
(assert (x131 (- x1764 x1268)))
(assert (x838 x1628))
(assert (x131 (- x302 x213)))
(assert (= x1345 (and x429 x1993)))
(assert (=> (>= 10000 x1933) (= (x2046 x1933) (x113 x1933))))
(assert (x1124 x2156 x2079 x213 x1365))
(assert (x1124 x1195 x302 x1953 x830))
(assert (x665 x805))
(assert (x131 (- x90 x830)))
(assert (x1413 x1195 x302 x1386 x2173))
(assert (x665 x93))
(assert (x1413 x302 x1195 x2040 x1944))
(assert (= x294 (and x2114 x2257)))
(assert (x565 x213 (- x1365 x1953)))
(assert (x665 x2047))
(assert (x1566 x1368))
(assert (x565 x213 (- x1365 x1615)))
(assert (x665 x2145))
(assert (x1124 x1979 x90 x830 x1953))
(assert (x1124 x830 x1953 x1539 x1764))
(assert (x665 x1681))
(assert (x665 x2102))
(assert (x665 x1271))
(assert (x665 x902))
(assert (x565 x2156 (- x2079 x1944)))
(assert (x665 x733))
(assert (= (x420 x1478) 0))
(assert (x1124 x2156 x2079 x1011 x1615))
(assert (x565 x213 (- x1365 x90)))
(assert (x665 x923))
(assert (= (x1433 (x113 x559)) x559))
(assert (x131 128))
(assert (= (and x206 x510) x356))
(assert (= (x113 1889567281) (x2046 1889567281)))
(assert (x131 (- x1386 x90)))
(assert (= (x2046 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x113 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x880 x53))
(assert (x131 x622))
(assert (x565 x1764 (- x1539 x2131)))
(assert (x131 (- x302 x90)))
(assert (x665 x47))
(assert (x665 x1018))
(assert (x131 (- x2131 x90)))
(assert (x665 x189))
(assert (x131 (- x213 x1360)))
(assert (x665 x2111))
(assert (x665 x1953))
(assert (x665 x1549))
(assert (= 0 (x663 x852)))
(assert (= x493 (=> (and (= x1172 (not (> x1917 128))) (= (x1733 x836) x1928) (= (x1579 (+ 96 x657)) x197) (= (x1579 (+ 96 x111)) x836)) (and (=> (= 128 x1138) x1851) x1172))))
(assert (x131 (- x2156 x1043)))
(assert (= (x113 2835717307) (x2046 2835717307)))
(assert (x665 x182))
(assert (x1413 x1979 x90 x1043 x1268))
(assert (and (x889 x1257 32) (=> (> 32 0) (= (+ (x1631 x1257 32) (* (x520 x1257 32) 32)) x1257)) (x993 x1257 32) (x132 x1257 32)))
(assert (x1124 x1539 x1764 x213 x1365))
(assert (x131 (- x1195 x2173)))
(assert (x565 x2131 (- x1360 x2040)))
(assert (x131 (- x2079 x1979)))
(assert (x1124 x1365 x213 x830 x1953))
(assert (x665 x776))
(assert (x131 (- x830 x1043)))
(assert (and (x889 x811 32) (=> (> 32 0) (= (+ (x1631 x811 32) (* (x520 x811 32) 32)) x811)) (x993 x811 32) (x132 x811 32)))
(assert (= x1968 (and (not x2016) x29)))
(assert (= x2054 (and x2257 (not x2114))))
(assert (x665 x861))
(assert (= x1368 (x1433 (x113 x1368))))
(assert (x665 x1625))
(assert (x665 x181))
(assert (x1413 x1539 x1764 x1386 x2173))
(assert (x565 x1365 (- x213 x2173)))
(assert (x1473 x14 x2044))
(assert (x665 x1105))
(assert (x1124 x2040 x1944 x1615 x1011))
(assert (x131 (- x2156 x1365)))
(assert (= (x2046 1949782873) (x113 1949782873)))
(assert (x2183 x759))
(assert (x665 x1372))
(assert (x131 (- x1953 x1043)))
(assert (x665 x757))
(assert (x1533 x887))
(assert (x665 x1056))
(assert (x665 x212))
(assert (x665 x136))
(assert (= x1279 (and x2056 x238)))
(assert (x665 x1100))
(assert (x665 x2156))
(assert (= (and x240 x1800) x720))
(assert (x665 x174))
(assert (= 0 (x420 x1653)))
(assert (x665 x265))
(assert (x665 x1234))
(assert (= (and x2250 (not x1956)) x1361))
(assert (x665 x1897))
(assert (x565 x90 (- x1979 x213)))
(assert (x665 x1969))
(assert (x665 x837))
(assert (= (=> (and (>= x195 0) (<= x195 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (ite (> 1000000000000000000000000000 x1929) 1 0) x583) (= (x257 x739 x583) x1418) (= (= x951 0) x1967) (= x739 (ite (not x1967) 1 0)) (= (x520 115792089237316195423570985008687907853269984665640564039457584007913129639935 x271) x1929) (= x1480 (= x1418 0))) (and (=> (and x1480 (and (= x758 (> x195 0)) (= (x1075 (* 1000000000000000000000000000 x271)) x1994))) (and (=> (and (and (= (> x748 x1434) x1996) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x748) (= (x520 x1994 x195) x137) (>= x748 0) (= x1434 (x1186 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x137)))) x758) (and (=> (and (and (<= x1576 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1469 (x730 x2074 1)) (= x1985 (x25 x1469)) (>= x1985 0) (= x2074 (x1150 (x113 x198) (x2046 15) 0)) (<= 0 x1576) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1985) (= x1678 (x1579 (+ x748 x137))) (= x873 (< x1576 x1985))) (not x1996)) (and (=> (and x873 (= x1621 0)) x1865) (=> (and (and (= x587 (x1186 (- x1576 x1985))) (= 1 x788)) (not x873)) x1732))) (=> (and (= 0 x1621) x1996) x1865))) (=> (and (= 0 x1621) (not x758)) x1865))) (=> (and (= x1621 0) (not x1480)) x1865))) x376))
(assert (x565 x1043 (- x1268 x1011)))
(assert (x665 x598))
(assert (x665 x1327))
(assert (= x255 (and (not x1657) x2054)))
(assert (x1124 x1764 x1539 x2131 x1360))
(assert (x665 x549))
(assert (x1566 x1206))
(assert (x880 x178))
(assert (= 0 (x420 x2024)))
(assert (x565 x1365 (- x213 x1944)))
(assert (x725 x1730))
(assert (= (and x2147 (not x1351)) x798))
(assert (x565 x2173 (- x1386 x2131)))
(assert (x565 x830 (- x1953 x1043)))
(assert (x1124 x2173 x1386 x1979 x90))
(assert (x665 x848))
(assert (x565 x1386 (- x2173 x2079)))
(assert (= x2123 (=> (and (= x1869 (x1579 (+ x239 32))) (= x1441 (x1579 (+ x1721 x653))) (= x1004 (< x1441 x1721)) (= (x1579 (+ 32 x1879)) x1139) (= x199 (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1821)) (= x641 (or x1004 x515)) (= (not (> x912 x1139)) x604) (not (> x2196 x313)) (= x1911 (x1579 (+ 32 x1721))) (= x742 (x375 x1879)) (not (> x742 18446744073709551615)) (= (x1579 (+ x1875 31)) x1821) (= (x1579 (+ 31 x239)) x1799) (= (x1579 (+ 31 x2228)) x2067) (= x776 (ite x641 1 0)) (or (and (> x313 x1799) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1799) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x313))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1799) (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2228 (x1579 (+ x199 32))) (= x330 (x1579 (+ x1911 x1875))) (= x515 (> x1441 18446744073709551615)) (not (> x1875 18446744073709551615)) (= (x1579 (+ x742 x1879)) x239) (= x1875 (x375 x239)) (= x776 0) (= x2196 (x1579 (+ x1869 x1875))) (= x653 (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2067))) (and (=> (= x1061 x1441) x554) x604))))
(assert (x565 x1268 (- x1043 x90)))
(assert (= 13116146399946975302596254860212112502091447646307958763727216123866297401344 (x1433 (x2046 13116146399946975302596254860212112502091447646307958763727216123866297401344))))
(assert (= (and (not x922) x799) x2247))
(assert (x665 x258))
(assert (x131 (- x1268 x1539)))
(assert (x131 (- x1195 x213)))
(assert (and (x1059 128 x916) (x1452 128 x916) (and (= (* (- x916 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128) (x1495 128 (- x916 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639808) (- x916 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 128 (- x916 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x916 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 128 x916) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x916)) (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639808) x916))) (= (* 128 x916) (x1495 128 x916)) (x253 128 x916) (x1123 128 x916) (x2100 128 x916)))
(assert (x1124 x1979 x90 x2156 x2079))
(assert (x665 x1836))
(assert (x665 x1790))
(assert (x665 x1783))
(assert (x665 x1686))
(assert (= 63696388041471822930743579425831364866188647584567569692446183701643513561088 (x1433 (x2046 63696388041471822930743579425831364866188647584567569692446183701643513561088))))
(assert (x665 x1911))
(assert (x665 x587))
(assert (x1413 x1043 x1268 x1360 x2131))
(assert (x131 (- x1979 x2156)))
(assert (x1124 x2173 x1386 x1195 x302))
(assert (x665 x1387))
(assert (x131 x1043))
(assert (x665 x1610))
(assert (x665 x1572))
(assert (= (or x1755 x1107) x1604))
(assert (x1124 x2173 x1386 x830 x1953))
(assert (x1413 x830 x1953 x1386 x2173))
(assert (x565 x2173 (- x1386 x1539)))
(assert (x565 x1953 (- x830 x1043)))
(assert (= (+ (x1433 x2036) 1) (x1433 (x730 x2036 1))))
(assert (= x1738 (and (not x1806) x2064)))
(assert (x1413 x1268 x1043 x1011 x1615))
(assert (x131 (- x1764 x1953)))
(assert (x1124 x1386 x2173 x1360 x2131))
(assert (x665 x1715))
(assert (x665 x1852))
(assert (= (x1433 (x2046 2630586785)) 2630586785))
(assert (x1124 x2156 x2079 x302 x1195))
(assert (x565 x2079 (- x2156 x1539)))
(assert (= (and x2093 (not x2225)) x1502))
(assert (x665 x195))
(assert (x665 x442))
(assert (x1124 x2156 x2079 x1944 x2040))
(assert (= (and x1782 x2136) x528))
(assert (and (x889 x354 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x354 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x354 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x354)) (x993 x354 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x354 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x565 x1615 (- x1011 x1953)))
(assert (x1566 x220))
(assert (x665 x2218))
(assert (x665 x890))
(assert (and (x1059 32 x631) (x1452 32 x631) (and (= (* (- x631 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x1495 32 (- x631 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x631 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x631 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x631 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 32 x631) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x631)) (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x631))) (= (* 32 x631) (x1495 32 x631)) (x253 32 x631) (x1123 32 x631) (x2100 32 x631)))
(assert (x1124 x1539 x1764 x90 x1979))
(assert (x665 x706))
(assert (x1413 x1011 x1615 x90 x1979))
(assert (= (+ 1 (x1433 x2074)) (x1433 (x730 x2074 1))))
(assert (x1124 x1979 x90 x1043 x1268))
(assert (x665 x1938))
(assert (= 1949782873 (x1433 (x2046 1949782873))))
(assert (x665 x237))
(assert (x131 (- x1615 x1360)))
(assert (= x590 (=> (= x656 (not (> x2014 1))) (and (=> (and (= x306 x157) (= x1442 x212) (= x1109 x1934) (= x946 x2118) (= x989 x494) (= x161 x2219) (= x1386 x1838) (= x562 x252)) x1220) x656))))
(assert (x838 x755))
(assert (x131 (- x1539 x1953)))
(assert (x565 x1365 (- x213 x1615)))
(assert (x1124 x2079 x2156 x2040 x1944))
(assert (x565 x2156 (- x2079 x1360)))
(assert (= (and x1683 x686) x1844))
(assert (x565 x1539 (- x1764 x1268)))
(assert (x665 x1712))
(assert (x131 (- x1011 x1268)))
(assert (x131 (- x1043 x1365)))
(assert (x1413 x1979 x90 x213 x1365))
(assert (x1124 x1615 x1011 x1953 x830))
(assert (and (x889 x933 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x933 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x933 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x933)) (x993 x933 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x933 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1533 x555))
(assert (= x580 (and x459 (not x1757))))
(assert (x665 x1497))
(assert (x131 (- x2040 x1011)))
(assert (x665 x384))
(assert (x665 x231))
(assert (x665 x893))
(assert (x665 x1237))
(assert (x1124 x1944 x2040 x1764 x1539))
(assert (x1124 x1615 x1011 x2040 x1944))
(assert (= (=> (and (= x1392 (not (< 1 x2014))) (not (= x1515 0))) (and (=> (and (= x1810 x483) (= x1815 x1101) (= x903 x1390) (= x1276 x546) (= x1142 x1938) (= x569 x969) (= x733 x1619)) x1907) x1392)) x1697))
(assert (x1124 x1043 x1268 x1615 x1011))
(assert (x665 x1067))
(assert (x1533 x1909))
(assert (x880 x983))
(assert (x565 x1365 (- x213 x1195)))
(assert (= (and x883 x385) x2211))
(assert (x665 x151))
(assert (x665 x781))
(assert (x665 x1300))
(assert (= 0 (x420 x1152)))
(assert (x665 x1465))
(assert (x665 x2141))
(assert (x665 x586))
(assert (x880 x1451))
(assert (x665 x1619))
(assert (x665 x1699))
(assert (x665 x1726))
(assert (x665 x773))
(assert (x665 x983))
(assert (x1124 x2156 x2079 x1043 x1268))
(assert (= (and (not x488) x786) x791))
(assert (= (x420 x792) 0))
(assert (x1124 x302 x1195 x1011 x1615))
(assert (x565 x213 (- x1365 x1764)))
(assert (=> (>= 10000 x295) (= (x2046 x295) (x113 x295))))
(assert (= (and (not x846) x437) x929))
(assert (= (and x633 x804) x1466))
(assert (= 2446411860 (x1433 (x2046 2446411860))))
(assert (x1413 x1043 x1268 x1011 x1615))
(assert (x1413 x1979 x90 x830 x1953))
(assert (x665 x474))
(assert (x1413 x1944 x2040 x1360 x2131))
(assert (x880 x14))
(assert (x1413 x2156 x2079 x213 x1365))
(assert (= x1975 (and x1160 (not x758))))
(assert (= (or x1651 x1361) x1918))
(assert (x565 x1953 (- x830 x302)))
(assert (x665 x2132))
(assert (x1124 x1539 x1764 x1365 x213))
(assert (x1124 x1953 x830 x2131 x1360))
(assert (x131 (- x302 x2040)))
(assert (= (x113 4294967296) (x2046 4294967296)))
(assert (x565 x213 (- x1365 x1011)))
(assert (x665 x769))
(assert (x880 1099511627775))
(assert (x1464 x778 x292))
(assert (x665 x948))
(assert (= x1291 (and x760 x1772)))
(assert (x1124 x1764 x1539 x1944 x2040))
(assert (x131 (- x1979 x1615)))
(assert (x665 x1912))
(assert (= x41 (and x1710 x552)))
(assert (x665 x531))
(assert (x665 x1454))
(assert (x665 x1784))
(assert (x1124 x302 x1195 x1539 x1764))
(assert (x665 x311))
(assert (x1124 x1195 x302 x213 x1365))
(assert (x665 x410))
(assert (x1413 x90 x1979 x302 x1195))
(assert (x665 x1811))
(assert (x665 x1223))
(assert (x565 x1386 (- x2173 x1195)))
(assert (x1124 x1615 x1011 x1365 x213))
(assert (x1124 x1953 x830 x1386 x2173))
(assert (x131 (- x1195 x1011)))
(assert (x665 x2122))
(assert (= x1165 (=> (= 0 x1621) x1865)))
(assert (x1124 x1953 x830 x2173 x1386))
(assert (= x31 (=> (and (= x1249 x1215) (= 0 x1805)) x712)))
(assert (x1413 x1011 x1615 x1360 x2131))
(assert (x665 x979))
(assert (x1124 x2079 x2156 x1268 x1043))
(assert (x131 (- x1011 x1944)))
(assert (x1124 x302 x1195 x1764 x1539))
(assert (x665 x473))
(assert (x665 x507))
(assert (x131 (- x2079 x302)))
(assert (= 1461501637330902918203684832716283019655932542976 (x1433 (x2046 1461501637330902918203684832716283019655932542976))))
(assert (x131 (- x1944 x1979)))
(assert (x665 x1519))
(assert (x131 (- x1979 x1195)))
(assert (x665 x1563))
(assert (x565 x1268 (- x1043 x1195)))
(assert (x665 x1805))
(assert (= x2214 (or x35 x38)))
(assert (= (and x437 x846) x1294))
(assert (= (x113 1818647125) (x2046 1818647125)))
(assert (x1533 x469))
(assert (x665 x700))
(assert (x1413 x1268 x1043 x830 x1953))
(assert (x1124 x213 x1365 x1043 x1268))
(assert (= 0 (x663 x1726)))
(assert (x131 (- x1953 x1011)))
(assert (x131 x2079))
(assert (x131 (- x1011 x1764)))
(assert (x1533 x426))
(assert (= (and (not x605) x2000) x1771))
(assert (= (+ 1 (x1433 x2244)) (x1433 (x730 x2244 1))))
(assert (= x760 (and x1903 x1908)))
(assert (= x815 (and x1439 x972)))
(assert (x665 x2130))
(assert (x665 x810))
(assert (= (and x1158 (not x1876)) x1692))
(assert (x565 x1953 (- x830 x2040)))
(assert (x1124 x90 x1979 x1944 x2040))
(assert (x131 (- x1764 x213)))
(assert (x1413 x1979 x90 x1011 x1615))
(assert (x665 x1636))
(assert (x665 x1524))
(assert (x131 (- x1953 x1539)))
(assert (x665 x1672))
(assert (x665 x2205))
(assert (x1124 x1944 x2040 x2156 x2079))
(assert (x665 x2175))
(assert (x1124 x1386 x2173 x1539 x1764))
(assert (x565 x2079 (- x2156 x1011)))
(assert (and (x312 x1159 1000000000000000000000000000) (x1887 x1159 1000000000000000000000000000) (=> (and (< 0 1000000000000000000000000000) (> x1159 0)) (and (< (- x1159 1000000000000000000000000000) (* 1000000000000000000000000000 (x520 x1159 1000000000000000000000000000))) (>= x1159 (* (x520 x1159 1000000000000000000000000000) 1000000000000000000000000000)))) (x906 x1159 1000000000000000000000000000) (x351 x1159 1000000000000000000000000000)))
(assert (x1124 x2131 x1360 x1365 x213))
(assert (x131 (- x2156 x2131)))
(assert (x131 x1979))
(assert (x131 (- x1195 x830)))
(assert (x665 x60))
(assert (x565 x1043 (- x1268 x2131)))
(assert (x880 x2185))
(assert (x565 x830 (- x1953 x302)))
(assert (= x998 (and (not x353) x1371)))
(assert (= x603 (and x1484 x2212)))
(assert (x1413 x2173 x1386 x1011 x1615))
(assert (= x1321 (and x2160 x1541)))
(assert (x665 x785))
(assert (= (x2046 1997499061) (x113 1997499061)))
(assert (and (x889 x361 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x361 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x361 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x361)) (x993 x361 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x361 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x665 x1027))
(assert (x565 x1979 (- x90 x1268)))
(assert (= x155 (and x459 x1757)))
(assert (x131 (- x1615 x2131)))
(assert (x1124 x1386 x2173 x1011 x1615))
(assert (x131 (- x302 x830)))
(assert (= (x113 13116146399946975302596254860212112502091447646307958763727216123866297401344) (x2046 13116146399946975302596254860212112502091447646307958763727216123866297401344)))
(assert (x131 (- x90 x1268)))
(assert (x131 x2040))
(assert (x565 x2040 (- x1944 x213)))
(assert (x565 x1365 (- x213 x2131)))
(assert (x565 x1360 (- x2131 x1979)))
(assert (x131 (- x1615 x90)))
(assert (x665 x2201))
(assert (x1124 x830 x1953 x1268 x1043))
(assert (x1124 x1979 x90 x1011 x1615))
(assert (= (x2046 4238056678808933066457772256406219440718756300954938350892797929791311314944) (x113 4238056678808933066457772256406219440718756300954938350892797929791311314944)))
(assert (x665 x145))
(assert (x1124 x1043 x1268 x90 x1979))
(assert (= x1371 (and (not x1711) x1000)))
(assert (x665 x687))
(assert (x1124 x1360 x2131 x1365 x213))
(assert (x665 x214))
(assert (x665 x337))
(assert (= (x2046 1099511627776) (x113 1099511627776)))
(assert (= x1789 (and (not x510) x206)))
(assert (= x1318 (=> (and (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x56) (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x56 x313) (= (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x56)))) (= (x375 x707) x1379) (= (> x2209 18446744073709551615) x1768) (= (x1579 (+ 32 x2209)) x647) (not (< x313 x861)) (= x938 (x1579 (+ x959 32))) (= x1636 (x1579 (+ x938 32))) (= (x375 x612) x1454) (= x1448 (x1579 (+ 32 x1892))) (= x1802 (x375 x703)) (= (x1579 (+ 32 x1062)) x2060) (= (> x794 18446744073709551615) x1263) (= x2164 (x1579 (+ 32 x783))) (<= x1589 18446744073709551615) (= (x375 x1048) x116) (= x1247 (x1579 (+ x1454 x612))) (= x547 (or x1768 x1540)) (not (or (> x1712 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1712)) (< x1712 288)))) (= (x375 x1316) x1548) (= (x1579 (+ 31 x1548)) x1483) (= (x1579 (+ 32 x1247)) x783) (= (or x735 x1263) x1155) (= (x1579 (+ x1098 31)) x361) (= x734 (x1579 (+ x418 32))) (= x584 (ite x278 1 0)) (= x741 (x1579 (+ 32 x1896))) (= x2189 (not x2030)) (= x1062 (x1579 (+ x734 32))) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x361) x545) (>= 18446744073709551615 x1379) (= x1754 (x1579 (+ x1237 31))) (= x418 (x1579 (+ x868 32))) (= x1892 (x1579 (+ x2012 x1247))) (= (x1579 (+ 32 x707)) x1896) (= x550 (x1579 (+ x545 32))) (= (x1579 (+ x612 32)) x225) (= (not (< x225 x28)) x2223) (= x60 0) (= (x1579 (+ x1316 31)) x56) (= x1471 (x375 x801)) (= (< x794 x2209) x735) (not (< 18446744073709551615 x1548)) (= x1740 (x1579 (+ 32 x794))) (= (ite x1155 1 0) x60) (= x707 (x1579 (+ 32 x801))) (= x1895 (x1579 (+ 31 x1892))) (= (x375 x783) x2012) (= x1547 (x1579 (+ x647 x1548))) (= x1161 (ite x2189 1 0)) (= (x375 x1892) x1098) (<= x116 18446744073709551615) (not (> x2012 18446744073709551615)) (= x1161 x211) (= x584 0) (= x1237 (x1579 (+ 32 x829))) (= (x1579 (+ x612 x1454)) x443) (>= 18446744073709551615 x1471) (= x507 (x375 x741)) (= x1718 (x1579 (+ x794 x417))) (= x1048 (x1579 (+ x703 32))) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1895) (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x313 x1895)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1895) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x313))) (= x388 (x1579 (+ x808 x1548))) (= (x1579 (+ 288 x959)) x2209) (= (= 0 x211) x2030) (= (> x794 x1718) x1315) (= (x1579 (+ 31 x550)) x1397) (= 0 x630) (= (x1186 (- x313 x443)) x1712) (= x417 (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1397)) (= (x1579 (+ x1098 x1740)) x1415) (= x1570 (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1754)) (= (x1579 (+ 32 x1636)) x868) (= (x375 x1247) x1569) (= x211 (x375 x2164)) (= (x1579 (+ x2209 x1570)) x794) (not (< x313 x388)) (not (> x1098 18446744073709551615)) (= x801 (x1579 (+ x1048 32))) (= x1540 (< x2209 x959)) (<= x507 18446744073709551615) (= x1316 (x1579 (+ x1247 x1569))) (= x278 (or x1315 x439)) (= (x375 x1896) x1589) (= (x1579 (+ x2060 32)) x557) (= x829 (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1483)) (>= 18446744073709551615 x1802) (= x808 (x1579 (+ 32 x1316))) (= x861 (x1579 (+ x1448 x1098))) (not (< 18446744073709551615 x1569)) (= x439 (> x1718 18446744073709551615)) (not (< 18446744073709551615 x1454)) (= (x1579 (+ 32 x2164)) x703) (= (ite x547 1 0) x630)) (and x2223 (=> (= x1176 x1718) x660)))))
(assert (x131 (- x1539 x1386)))
(assert (x565 x1944 (- x2040 x1953)))
(assert (x565 x1268 (- x1043 x1539)))
(assert (x565 x1043 (- x1268 x1365)))
(assert (x665 x886))
(assert (x131 (- x1365 x1011)))
(assert (x1413 x1539 x1764 x2156 x2079))
(assert (x1124 x1953 x830 x213 x1365))
(assert (x665 x1677))
(assert (x131 (- x213 x2173)))
(assert (x665 x748))
(assert (x1124 x213 x1365 x1953 x830))
(assert (x565 x1615 (- x1011 x1360)))
(assert (x565 x213 x1365))
(assert (x131 (- x1944 x1953)))
(assert (= (and x2198 x118) x332))
(assert (x838 x469))
(assert (x131 (- x302 x1615)))
(assert (x665 x156))
(assert (and (x312 x1666 31536000) (x1887 x1666 31536000) (=> (and (< 0 31536000) (> x1666 0)) (and (< (- x1666 31536000) (* 31536000 (x520 x1666 31536000))) (>= x1666 (* (x520 x1666 31536000) 31536000)))) (x906 x1666 31536000) (x351 x1666 31536000)))
(assert (x1413 x1365 x213 x1764 x1539))
(assert (x665 x778))
(assert (and (x889 x273 32) (=> (> 32 0) (= (+ (x1631 x273 32) (* (x520 x273 32) 32)) x273)) (x993 x273 32) (x132 x273 32)))
(assert (x131 (- x2079 x2131)))
(assert (x880 x2044))
(assert (x665 x56))
(assert (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x1433 (x2046 4238056678808933066457772256406219440718756300954938350892797929791311314944))))
(assert (x1413 x2173 x1386 x90 x1979))
(assert (x131 (- x1386 x1764)))
(assert (x665 x1670))
(assert (x1413 x302 x1195 x90 x1979))
(assert (x565 x1953 (- x830 x1979)))
(assert (x665 x1268))
(assert (x131 (- x2040 x1615)))
(assert (x565 x1615 (- x1011 x302)))
(assert (x1124 x2040 x1944 x2156 x2079))
(assert (x131 (- x1539 x1615)))
(assert (x1124 x1386 x2173 x2131 x1360))
(assert (= 791671133 (x1433 (x2046 791671133))))
(assert (x665 x20))
(assert (x665 x900))
(assert (=> (<= x198 10000) (= (x2046 x198) (x113 x198))))
(assert (= (or x1113 x1406) x1908))
(assert (and (x889 x670 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x670 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x670 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x670)) (x993 x670 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x670 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x131 (- x1615 x1195)))
(assert (x1124 x1764 x1539 x302 x1195))
(assert (= (x113 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x2046 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= (and x2073 x448) x1893))
(assert (x665 x179))
(assert (x665 x2057))
(assert (x565 x1539 (- x1764 x1011)))
(assert (= x228 (and (not x1299) x506)))
(assert (x880 x426))
(assert (= (x1433 (x2046 2362630343)) 2362630343))
(assert (x665 x1370))
(assert (x131 (- x1365 x1764)))
(assert (and (x889 x53 26959946667150639794667015087019630673637144422540572481103610249216) (=> (> 26959946667150639794667015087019630673637144422540572481103610249216 0) (= (+ (x1631 x53 26959946667150639794667015087019630673637144422540572481103610249216) (* (x520 x53 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)) x53)) (x993 x53 26959946667150639794667015087019630673637144422540572481103610249216) (x132 x53 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x665 x2007))
(assert (x665 x1526))
(assert (x565 x1953 (- x830 x2131)))
(assert (x1124 x2156 x2079 x2173 x1386))
(assert (= (x1433 (x113 x295)) x295))
(assert (x565 x1195 (- x302 x1764)))
(assert (x665 x1117))
(assert (x565 x1011 (- x1615 x2156)))
(assert (x1124 x1764 x1539 x1268 x1043))
(assert (x565 x1268 (- x1043 x1979)))
(assert (x880 x1890))
(assert (x665 x704))
(assert (x131 (- x90 x1953)))
(assert (x1124 x1365 x213 x1615 x1011))
(assert (x665 x101))
(assert (x665 x1148))
(assert (x665 x830))
(assert (x1566 x172))
(assert (x1413 x1953 x830 x1043 x1268))
(assert (x665 x749))
(assert (x665 x1892))
(assert (x1533 x1451))
(assert (x665 x1653))
(assert (and (x889 x1743 32) (=> (> 32 0) (= (+ (x1631 x1743 32) (* (x520 x1743 32) 32)) x1743)) (x993 x1743 32) (x132 x1743 32)))
(assert (x665 x792))
(assert (x665 x1320))
(assert (and (x889 x242 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x242 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x242 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x242)) (x993 x242 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x242 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x665 x816))
(assert (x665 x1724))
(assert (x1124 x2040 x1944 x1539 x1764))
(assert (x880 x1628))
(assert (x565 x1944 (- x2040 x1979)))
(assert (and (x312 x990 1000000000000000000000000000) (x1887 x990 1000000000000000000000000000) (=> (and (< 0 1000000000000000000000000000) (> x990 0)) (and (< (- x990 1000000000000000000000000000) (* 1000000000000000000000000000 (x520 x990 1000000000000000000000000000))) (>= x990 (* (x520 x990 1000000000000000000000000000) 1000000000000000000000000000)))) (x906 x990 1000000000000000000000000000) (x351 x990 1000000000000000000000000000)))
(assert (x131 (- x1360 x1011)))
(assert (x1413 x2131 x1360 x2156 x2079))
(assert (x665 x1627))
(assert (x665 x333))
(assert (x1124 x1944 x2040 x1360 x2131))
(assert (= x1556 (or x867 (and (not x1388) x109))))
(assert (= (x420 x1694) 0))
(assert (x1124 x1979 x90 x302 x1195))
(assert (x880 x361))
(assert (x665 x870))
(assert (x665 x990))
(assert (x565 x1195 (- x302 x830)))
(assert (x565 x1953 (- x830 x1365)))
(assert (x665 x2052))
(assert (x665 x1764))
(assert (x131 (- x213 x2040)))
(assert (= x1420 (or x1864 x1414 x255 x1134 x815 x1436 x247 x1437 x1771 x294 (and x2147 x1351) x1289 x254)))
(assert (x1124 x1539 x1764 x2173 x1386))
(assert (x665 x1434))
(assert (x665 x630))
(assert (x665 x276))
(assert (x665 x241))
(assert (x2183 x781))
(assert (x665 x592))
(assert (x665 x1740))
(assert (x565 x2079 (- x2156 x1268)))
(assert (= (x113 26959946667150639794667015087019630673637144422540572481103610249215) (x2046 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x665 x759))
(assert (x1413 x830 x1953 x90 x1979))
(assert (x665 x305))
(assert (x725 x1226))
(assert (= x1265 (=> (and (= x887 (x1579 (+ x2134 31))) (= x657 (x1579 (+ x1989 32))) (not (or (and (< x1235 32) (= (<= x1235 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1235))) (= x670 (x1579 (+ x1235 31))) (not (= x1162 0)) (= x1662 (< 18446744073709551615 x1991)) (= x1461 (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x670)) (= (x1579 (+ 31 x1633)) x1679) (= (x1579 (+ 31 x1917)) x178) (= (x1579 (+ x1461 x57)) x1989) (= (or x436 x1662) x1798) (= (x1579 (+ 32 x2260)) x2134) (= x1423 (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x887)) (or (and (= (<= x1679 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x424 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x424 x1679)) (and (<= x424 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1679 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1758 x1633) x1917) (= (x1579 (+ x1235 x57)) x424) (= (< x1991 x1989) x436) (= x57 (x1579 (+ x1596 32))) (= x872 (x1758 x57)) (not (> x1917 18446744073709551615)) (= (< 0 x1917) x2002) (not (> x872 18446744073709551615)) (= (x1579 (+ x57 x872)) x1633) (= (x1579 (+ x1989 x1423)) x1991) (= (x1579 (+ 32 x1633)) x111) (not (< x424 x1930)) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x178) x2260) (= 0 x1460) (= (x1579 (+ x111 x1917)) x1930) (= x1460 (ite x1798 1 0))) (and (=> (and (not x2002) (= x1138 0)) x1851) (=> (and (and (= x1751 (x1 x1785)) (= (< 32 x1917) x193) (= x1785 x111) (= x657 x1914)) x2002) (and (=> (and (and (= (x1579 (+ x657 32)) x842) (= x2225 (> x1917 64)) (= (x2019 x792) x1137) (= (x1579 (+ 32 x111)) x792)) x193) (and (=> (and (not x2225) (= x1138 64)) x1851) (=> (and x2225 (and (= (x146 x1558) x222) (= x1487 (< 96 x1917)) (= (x1579 (+ 64 x657)) x2097) (= (x1579 (+ x111 64)) x1558))) (and (=> x1487 x493) (=> (and (= x1138 96) (not x1487)) x1851))))) (=> (and (= x1138 32) (not x193)) x1851)))))))
(assert (x665 x2161))
(assert (x565 x2131 (- x1360 x1268)))
(assert (x565 x1195 (- x302 x90)))
(assert (x1124 x1944 x2040 x2131 x1360))
(assert (x1533 x933))
(assert (x665 x653))
(assert (x665 x61))
(assert (x665 x927))
(assert (= (and x1806 x2064) x9))
(assert (= 0 (x420 x482)))
(assert (= x1673 (and x393 (not x2002))))
(assert (x1413 x1539 x1764 x90 x1979))
(assert (= x695 (=> (and (= (x1579 (+ x827 55253086691344412491249731323735809531556945173834312332507302207468853002240)) x143) (= x304 (x1579 (+ x2081 32))) (= x53 (x2088 x1478)) (= (> x885 0) x596) (= x773 (x1579 (+ x875 32))) (= (x1579 (+ x560 32)) x1192) (= x1811 (x1186 (- x1271 x2003))) (= (x1579 (+ x1271 4)) x560) (= x2081 (x1579 (+ x560 64))) (= x1729 (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2)) (= (x257 1461501637330902918203684832716283019655932542975 x1368) x1064) (= x1478 (x1579 (+ x2003 32))) (= x885 (x1085 x2003)) (= (x1186 (- x1811 32)) x1827) (= (x1579 (+ x1960 31)) x2) (= (x257 1461501637330902918203684832716283019655932542975 x1174) x104) (= x827 (x257 26959946667150639794667015087019630673637144422540572481103610249215 x53)) (= (x1579 (+ x1729 x878)) x1271)) (and (=> (and (= x1100 0) (not x596)) x323) (=> x596 x971)))))
(assert (x565 x1953 (- x830 x1615)))
(assert (x665 x1599))
(assert (x665 x779))
(assert (x665 x877))
(assert (x131 (- x1979 x1011)))
(assert (= (and x1626 (not x858)) x1035))
(assert (x880 452312848583266388373324160190187140051835877600158453279131187530910662655))
(assert (x1124 x1764 x1539 x1360 x2131))
(assert (= x1414 (and x1385 x1044)))
(assert (x665 x1213))
(assert (= x96 (and x506 x1299)))
(assert (x131 (- x1386 x2131)))
(assert (x131 (- x1195 x1979)))
(assert (x1124 x2156 x2079 x1539 x1764))
(assert (= (and (not x1453) x1329) x975))
(assert (= (and x1531 x593) x820))
(assert (and (x889 x777 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x777 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x777 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x777)) (x993 x777 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x777 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x131 (- x2040 x213)))
(assert (x665 x1898))
(assert (x665 x1499))
(assert (x131 (- x1944 x1764)))
(assert (and (x889 x1483 32) (=> (> 32 0) (= (+ (x1631 x1483 32) (* (x520 x1483 32) 32)) x1483)) (x993 x1483 32) (x132 x1483 32)))
(assert (x1124 x213 x1365 x1386 x2173))
(assert (x665 x670))
(assert (= (and x636 (not x935)) x1052))
(assert (x665 x1162))
(assert (x1413 x1360 x2131 x1043 x1268))
(assert (x1124 x830 x1953 x90 x1979))
(assert (x665 x2221))
(assert (= x1696 (and x1620 x1792)))
(assert (x665 x1498))
(assert (and (x889 x891 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x1631 x891 1461501637330902918203684832716283019655932542976) (* (x520 x891 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x891)) (x993 x891 1461501637330902918203684832716283019655932542976) (x132 x891 1461501637330902918203684832716283019655932542976)))
(assert (x665 x652))
(assert (x565 x2040 (- x1944 x2131)))
(assert (x565 x1615 (- x1011 x2156)))
(assert (x565 x2156 (- x2079 x1268)))
(assert (x1124 x1365 x213 x1953 x830))
(assert (x1413 x1944 x2040 x830 x1953))
(assert (x665 x2029))
(assert (x665 x130))
(assert (x1124 x90 x1979 x302 x1195))
(assert (x131 (- x2156 x90)))
(assert (x665 x594))
(assert (= (x1433 (x113 x1544)) x1544))
(assert (x665 x1261))
(assert (= x437 (and x349 x899)))
(assert (and (x889 x65 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x65 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x65 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x65)) (x993 x65 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x65 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x665 x1889))
(assert (x665 x1802))
(assert (x565 x2040 (- x1944 x1764)))
(assert (x1413 x2079 x2156 x2040 x1944))
(assert (x1124 x1539 x1764 x1268 x1043))
(assert (x665 x2173))
(assert (x665 x868))
(assert (x1413 x1011 x1615 x213 x1365))
(assert (x665 x1460))
(assert (x1124 x1953 x830 x1944 x2040))
(assert (x665 x358))
(assert (x665 x1337))
(assert (x1124 x1764 x1539 x90 x1979))
(assert (x665 x579))
(assert (x565 x302 (- x1195 x1268)))
(assert (= 2835717307 (x1433 (x2046 2835717307))))
(assert (x665 x1295))
(assert (x880 x1174))
(assert (x131 (- x1944 x1365)))
(assert (x665 x1192))
(assert (x665 x467))
(assert (x131 (- x2040 x1360)))
(assert (x565 x213 (- x1365 x1944)))
(assert (x1124 x1386 x2173 x302 x1195))
(assert (x1464 x781 x759))
(assert (x665 x1410))
(assert (x665 x1125))
(assert (x665 x1688))
(assert (x131 1000000000000000000000000000))
(assert (and (x889 x1909 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x1909 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x1909 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1909)) (x993 x1909 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x1909 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1413 x1615 x1011 x1764 x1539))
(assert (x1124 x1539 x1764 x2040 x1944))
(assert (= x1552 (and x2240 (not x123))))
(assert (x665 x1314))
(assert (x665 x1188))
(assert (x565 x2040 (- x1944 x2156)))
(assert (x1124 x1195 x302 x1615 x1011))
(assert (x565 x213 (- x1365 x1268)))
(assert (=> (<= x947 10000) (= (x113 x947) (x2046 x947))))
(assert (x131 (- x213 x2079)))
(assert (x1413 x213 x1365 x830 x1953))
(assert (x665 x684))
(assert (x838 x533))
(assert (x1413 x830 x1953 x213 x1365))
(assert (x1473 x739 x583))
(assert (x1124 x2040 x1944 x1011 x1615))
(assert (x565 x1764 (- x1539 x1360)))
(assert (= (x1433 (x113 x964)) x964))
(assert (x880 x862))
(assert (x131 x2173))
(assert (x665 x1669))
(assert (x665 x1827))
(assert (x665 x1570))
(assert (x665 x7))
(assert (= x1180 (or x164 x879)))
(assert (x131 (- x1360 x90)))
(assert (x1413 x1011 x1615 x1764 x1539))
(assert (x880 x811))
(assert (x665 x2126))
(assert (= (x2046 2362630343) (x113 2362630343)))
(assert (x131 (- x1979 x302)))
(assert (= 0 (x420 x1535)))
(assert (x1413 x1195 x302 x213 x1365))
(assert (x131 x2156))
(assert (x1124 x1011 x1615 x1195 x302))
(assert (= (and x382 x332) x2017))
(assert (and (x889 x1313 18446744073709551616) (=> (> 18446744073709551616 0) (= (+ (x1631 x1313 18446744073709551616) (* (x520 x1313 18446744073709551616) 18446744073709551616)) x1313)) (x993 x1313 18446744073709551616) (x132 x1313 18446744073709551616)))
(assert (= (x1433 (x113 x1317)) x1317))
(assert (x665 x1269))
(assert (= (x1433 (x2046 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x665 x2105))
(assert (x1533 x533))
(assert (x1124 x2173 x1386 x213 x1365))
(assert (x1124 x830 x1953 x1944 x2040))
(assert (x665 x22))
(assert (x565 x830 (- x1953 x1615)))
(assert (x1124 x2156 x2079 x1365 x213))
(assert (x665 x1079))
(assert (x131 (- x1365 x1386)))
(assert (x131 (- x213 x1944)))
(assert (x565 x1360 (- x2131 x830)))
(assert (x1124 x2131 x1360 x213 x1365))
(assert (x665 x1972))
(assert (x665 x1440))
(assert (x665 x782))
(assert (= (and (not x441) x722) x499))
(assert (x665 x1426))
(assert (x1413 x1539 x1764 x302 x1195))
(assert (x565 x1195 (- x302 x1365)))
(assert (x1222 x1368))
(assert (x1124 x1615 x1011 x1268 x1043))
(assert (= (and x2192 x223) x556))
(assert (x1124 x1944 x2040 x1615 x1011))
(assert (x665 x767))
(assert (x665 x201))
(assert (x1124 x90 x1979 x213 x1365))
(assert (x565 x1268 (- x1043 x302)))
(assert (x665 x1415))
(assert (x880 x2))
(assert (x880 x992))
(assert (x880 x1257))
(assert (x131 (- x2131 x2173)))
(assert (and (x889 x950 32) (=> (> 32 0) (= (+ (x1631 x950 32) (* (x520 x950 32) 32)) x950)) (x993 x950 32) (x132 x950 32)))
(assert (= (and (not x679) x2032) x1168))
(assert (= (and x34 x193) x2093))
(assert (= (=> (and (and (= x637 (x106 (x113 x295))) (not (= 0 x788)) (= x1578 (< 0 x927)) (= x295 (x257 1461501637330902918203684832716283019655932542975 x1368)) (not (= 0 x637))) (or (not x1578) (and x1578 (and (< x309 4294967296) x297 (= (= (x954 (x113 x295)) x1477) x297) (= (x1512 (x113 x609)) x941) (= (x1512 (x113 x295)) x1477) (= x1016 (>= (x954 (x113 x609)) x941)) x1016)))) x1066) x70))
(assert (x665 x1917))
(assert (x665 x1574))
(assert (x565 x1360 (- x2131 x2079)))
(assert (x131 (- x1764 x2040)))
(assert (x565 x1539 (- x1764 x2040)))
(assert (x2183 x302))
(assert (= (and (not x756) x771) x844))
(assert (x565 x1953 (- x830 x1539)))
(assert (x665 x1543))
(assert (x1124 x1764 x1539 x1043 x1268))
(assert (x665 x1737))
(assert (x565 x1386 (- x2173 x1953)))
(assert (= (and x800 x822) x254))
(assert (x665 x71))
(assert (x665 x1014))
(assert (x665 x478))
(assert (x665 x1360))
(assert (and (x889 x1659 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x1659 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x1659 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1659)) (x993 x1659 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x1659 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x665 x1353))
(assert (x565 x1195 (- x302 x1953)))
(assert (x665 x607))
(assert (x665 x1042))
(assert (= (x420 x1455) 0))
(assert (x665 x2119))
(assert (x665 x793))
(assert (x665 x878))
(assert (x1124 x2040 x1944 x213 x1365))
(assert (= x12 (=> (and (= x870 1) (= 32 x715)) x1643)))
(assert (x131 (- x2131 x1365)))
(assert (x1124 x2079 x2156 x1386 x2173))
(assert (x665 x1133))
(assert (x1413 x1539 x1764 x1043 x1268))
(assert (x665 x737))
(assert (x1413 x2040 x1944 x213 x1365))
(assert (x665 x1377))
(assert (x131 32))
(assert (x565 x1195 (- x302 x2040)))
(assert (x665 x2249))
(assert (and (x889 x1005 18446744073709551616) (=> (> 18446744073709551616 0) (= (+ (x1631 x1005 18446744073709551616) (* (x520 x1005 18446744073709551616) 18446744073709551616)) x1005)) (x993 x1005 18446744073709551616) (x132 x1005 18446744073709551616)))
(assert (x1124 x1764 x1539 x1365 x213))
(assert (x1124 x213 x1365 x2040 x1944))
(assert (x565 x90 (- x1979 x2040)))
(assert (x665 x2087))
(assert (x665 x446))
(assert (x665 x657))
(assert (= (or x1700 x563 x1650) x636))
(assert (x565 x1764 (- x1539 x1386)))
(assert (x665 x926))
(assert (x565 x1365 (- x213 x1386)))
(assert (x1124 x1365 x213 x1195 x302))
(assert (x565 x1195 (- x302 x1979)))
(assert (x565 x2131 (- x1360 x830)))
(assert (x665 x827))
(assert (x1533 x361))
(assert (x1124 x2079 x2156 x1979 x90))
(assert (=> (<= x1166 10000) (= (x2046 x1166) (x113 x1166))))
(assert (x131 (- x213 x1764)))
(assert (= (x2046 2428475159928928253380189918045730325133814103720850528466242065960167014400) (x113 2428475159928928253380189918045730325133814103720850528466242065960167014400)))
(assert (x665 x172))
(assert (x131 (- x2131 x2156)))
(assert (x2183 x271))
(assert (x131 x1011))
(assert (x565 x1615 (- x1011 x2131)))
(assert (x131 (- x830 x1764)))
(assert (x1124 x213 x1365 x1268 x1043))
(assert (x665 x2043))
(assert (x1124 x1944 x2040 x213 x1365))
(assert (x565 x302 (- x1195 x2156)))
(assert (x131 (- x1365 x1360)))
(assert (x131 (- x302 x1953)))
(assert (x665 x1062))
(assert (x665 x1098))
(assert (x665 x1257))
(assert (x665 x555))
(assert (x665 x1058))
(assert (x131 (- x1979 x2131)))
(assert (x131 x213))
(assert (x665 x1365))
(assert (x725 x1313))
(assert (x665 x1845))
(assert (x131 (- x2173 x302)))
(assert (x665 x418))
(assert (x665 x1013))
(assert (x665 x2021))
(assert (= (=> (and (= x551 (x375 x500)) (= x19 (< x2194 x1376)) (= x500 (x1579 (+ 32 x1327))) (= x45 (x1579 (+ x500 32))) (= x1327 (x1579 (+ 32 x1488))) (= (x1579 (+ 32 x1376)) x159) (= x126 0) (= (x1579 (+ 128 x1376)) x2194) (= x126 (ite x619 1 0)) (= (> x2194 18446744073709551615) x74) (= x1778 (x1186 (- x313 x1897))) (<= x664 255) (= x619 (or x19 x74)) (= (not (< x45 x1024)) x765) (= x1488 (x1579 (+ x1897 32))) (= x236 (x1579 (+ 32 x1067))) (= (x1579 (+ x159 32)) x1067) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1778) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1778)) (< x1778 128)))) (= (x375 x1897) x1752) (>= 452312848583266388373324160190187140051835877600158453279131187530910662655 x1752) (= x186 (x375 x1327)) (= (x375 x1488) x664)) (and x765 (=> (= x1261 x2194) x1525))) x600))
(assert (x565 x1979 (- x90 x830)))
(assert (x1413 x2156 x2079 x1386 x2173))
(assert (x665 x1690))
(assert (x1124 x830 x1953 x1764 x1539))
(assert (x131 (- x213 x90)))
(assert (x665 x352))
(assert (x880 1461501637330902918203684832716283019655932542975))
(assert (= x1516 (=> (and (= (or x659 x1485) x2169) (not (> x793 18446744073709551615)) (= x141 (x1579 (+ 31 x789))) (= x1485 (> x513 18446744073709551615)) (= (x1579 (+ x148 32)) x1833) (= (x1579 (+ x789 32)) x344) (= x1937 0) (= x2122 (x1579 (+ x422 32))) (= x242 (x1579 (+ 31 x1833))) (= (ite x2169 1 0) x1937) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x933) x148) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x141) (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x313) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x141)) (< x141 x313))) (= (x1579 (+ x344 x1804)) x531) (= (x1579 (+ x1804 31)) x933) (= x1804 (x375 x789)) (= x607 (x1579 (+ x1736 x1804))) (not (< 18446744073709551615 x1804)) (= x793 (x375 x422)) (= x1941 (not (< x2122 x2048))) (not (< x313 x531)) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x242) x847) (= (x1579 (+ x793 x422)) x789) (= (x1579 (+ 32 x1883)) x1736) (= (> x1883 x513) x659) (= (x1579 (+ x847 x1883)) x513)) (and (=> (= x513 x1661) x764) x1941))))
(assert (x565 x1539 (- x1764 x2156)))
(assert (x131 (- x1011 x2131)))
(assert (x838 x512))
(assert (x1566 x226))
(assert (x1124 x1195 x302 x2156 x2079))
(assert (x665 x558))
(assert (x131 (- x1764 x1365)))
(assert (x665 x309))
(assert (x665 x1438))
(assert (x1124 x1979 x90 x1386 x2173))
(assert (= (and x2212 (not x1484)) x1416))
(assert (x665 x1944))
(assert (= 42559786704095985884337240924621141964881664668670750666325372487796921752598 (x1433 (x113 42559786704095985884337240924621141964881664668670750666325372487796921752598))))
(assert (= x1997 (and x692 (not x411))))
(assert (x1566 x1557))
(assert (x1124 x1268 x1043 x1764 x1539))
(assert (x131 (- x1944 x2079)))
(assert (x1124 x1944 x2040 x1953 x830))
(assert (x665 x487))
(assert (=> (>= 10000 x226) (= (x113 x226) (x2046 x226))))
(assert (x1413 x1360 x2131 x1386 x2173))
(assert (x131 (- x302 x1268)))
(assert (x665 x422))
(assert (x131 (- x1268 x2079)))
(assert (x665 x1390))
(assert (x665 x1573))
(assert (x131 (- x1043 x1195)))
(assert (x665 x1901))
(assert (x665 x1478))
(assert (x131 (- x1268 x1360)))
(assert (x565 x302 (- x1195 x1953)))
(assert (x665 x1713))
(assert (= x2083 (and (not x1270) x1034)))
(assert (x665 x834))
(assert (= (x1433 (x2046 90077150)) 90077150))
(assert (x665 x362))
(assert (x1124 x1195 x302 x1043 x1268))
(assert (x565 x1979 (- x90 x1386)))
(assert (x1413 x213 x1365 x2040 x1944))
(assert (x131 (- x1615 x2079)))
(assert (x1124 x1360 x2131 x1043 x1268))
(assert (x665 x379))
(assert (x1413 x1953 x830 x302 x1195))
(assert (= (x1433 (x113 x1206)) x1206))
(assert (x665 x1262))
(assert (x665 x1813))
(assert (and (x889 x1628 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x1628 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x1628 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1628)) (x993 x1628 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x1628 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x665 x1114))
(assert (= (or x1321 x1272) x1140))
(assert (x838 x1257))
(assert (x131 (- x1953 x1386)))
(assert (x1413 x1764 x1539 x1386 x2173))
(assert (x665 x16))
(assert (= (x113 3336544575) (x2046 3336544575)))
(assert (x131 x1953))
(assert (x838 x242))
(assert (= (=> (and (= x1795 (> x1138 x1917)) (or (not x1795) (and x1795 (= x966 (x1579 (+ x1917 x657)))))) x450) x1851))
(assert (x665 x1787))
(assert (x1464 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1764))
(assert (x665 x1809))
(assert (and (x1059 32 x2055) (x1452 32 x2055) (and (= (* (- x2055 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x1495 32 (- x2055 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x2055 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x2055 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2055 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 32 x2055) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2055)) (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x2055))) (= (* 32 x2055) (x1495 32 x2055)) (x253 32 x2055) (x1123 32 x2055) (x2100 32 x2055)))
(assert (x1124 x1365 x213 x1043 x1268))
(assert (x1124 x2173 x1386 x1011 x1615))
(assert (= (x420 x836) 0))
(assert (x880 x1730))
(assert (x1533 x1890))
(assert (x131 (- x1365 x90)))
(assert (x665 x525))
(assert (x565 x2079 (- x2156 x302)))
(assert (x1533 x504))
(assert (x665 x1821))
(assert (x1533 x1174))
(assert (x665 x1976))
(assert (x565 x1953 (- x830 x1386)))
(assert (= (x1433 (x2046 66268296141940672851042108147304593538321322149885339258387047461996478413388)) 66268296141940672851042108147304593538321322149885339258387047461996478413388))
(assert (x665 x2248))
(assert (= (and x876 (not x1719)) x1406))
(assert (x565 x1953 (- x830 x1268)))
(assert (and (x889 x242 32) (=> (> 32 0) (= (+ (x1631 x242 32) (* (x520 x242 32) 32)) x242)) (x993 x242 32) (x132 x242 32)))
(assert (x665 x62))
(assert (= x577 (and x1587 x470)))
(assert (x131 (- x90 x2040)))
(assert (= (and x2160 (not x1541)) x1272))
(assert (x565 x2040 (- x1944 x1979)))
(assert (x565 x2156 (- x2079 x1615)))
(assert (x665 x344))
(assert (x665 x1720))
(assert (x665 x1029))
(assert (x665 x718))
(assert (x665 x557))
(assert (= x828 (and x209 (not x1310))))
(assert (x665 x283))
(assert (x131 (- x2040 x1195)))
(assert (x725 x862))
(assert (= x932 (=> (and (= x644 (x1579 (+ 31 x1572))) (= (ite x2023 1 0) x1808) (= x77 (x1579 (+ 32 x768))) (= x65 (x1579 (+ x283 31))) (= (x1579 (+ x163 32)) x2022) (= (x1579 (+ x1118 x704)) x2018) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x512) x1014) (<= x1498 18446744073709551615) (>= 18446744073709551615 x1794) (= x598 (ite x1389 1 0)) (= x1104 (> x1431 x1020)) (= (x375 x179) x69) (= (x1579 (+ x2105 x43)) x1431) (= x1250 (x375 x77)) (= (x1579 (+ x505 32)) x1644) (= x1334 (x1579 (+ 31 x1204))) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x65) x505) (= 0 x598) (= x923 0) (= (x1186 (- x313 x75)) x700) (not (< x313 x1627)) (or (and (> x644 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x313)) (and (= (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x644)) (> x313 x644))) (= (x1579 (+ x1204 32)) x2178) (= x1812 (x1579 (+ x1504 32))) (= (x1579 (+ x704 31)) x512) (= (x1579 (+ x2050 32)) x1197) (= x248 (x1579 (+ x67 31))) (not (> x995 18446744073709551615)) (not (< x313 x2018)) (= (x1579 (+ x77 32)) x1737) (= x2105 (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x248)) (= (x1579 (+ x283 x1592)) x1939) (= x163 (x1579 (+ 32 x1197))) (= x1687 (not (> x2179 x1370))) (= (x375 x1204) x283) (= (x1579 (+ 32 x1691)) x237) (not (< 18446744073709551615 x1250)) (= x273 (x1579 (+ 31 x1644))) (= (or x503 x1550) x484) (= x171 (x1579 (+ 32 x1681))) (= x1070 (x375 x1737)) (= x1498 (x375 x1681)) (= (x1579 (+ 32 x1737)) x179) (= x75 (x1579 (+ x995 x1111))) (= x1572 (x1579 (+ x768 x2113))) (= x1384 0) (= (x375 x1572) x704) (= x214 (x375 x832)) (= (x1579 (+ x1111 32)) x1370) (= (x1579 (+ x2242 32)) x1400) (= x1384 (ite x484 1 0)) (= x442 (x375 x1400)) (not (< 18446744073709551615 x704)) (= (x1579 (+ x283 x2178)) x1627) (= x1444 (x1579 (+ 32 x43))) (= (not x339) x2023) (not (or (and (= true (<= x700 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x700 288)) (> x700 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x43 (x1579 (+ 288 x1504))) (<= x69 18446744073709551615) (= x530 (< 18446744073709551615 x43)) (= (x1579 (+ x1812 32)) x1691) (= (x1579 (+ 32 x1572)) x1118) (= x1699 (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x273)) (= (> x1431 18446744073709551615) x1550) (= (> x1504 x43) x1761) (= x503 (> x43 x1431)) (= (x375 x768) x2113) (= (x1579 (+ x704 x1444)) x2217) (= (< 18446744073709551615 x1020) x1110) (<= x214 18446744073709551615) (not (> x2113 18446744073709551615)) (= x1681 (x1579 (+ x832 32))) (= x832 (x1579 (+ 32 x179))) (or (and (< x1334 x313) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1334) (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1334) (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x375 x171) x1359) (= x1204 (x1579 (+ x768 x1250))) (= (or x1110 x1104) x1536) (= (x375 x2242) x1794) (= (= 0 x1070) x339) (= x995 (x375 x1111)) (= x1020 (x1579 (+ x1699 x1431))) (= x768 (x1579 (+ x995 x1111))) (= x2050 (x1579 (+ x1156 32))) (= x923 (ite x1536 1 0)) (= x1592 (x1579 (+ x1431 32))) (= (x1579 (+ 32 x237)) x1156) (not (< 18446744073709551615 x283)) (<= x442 18446744073709551615) (= (x1579 (+ 32 x1014)) x67) (>= 18446744073709551615 x1359) (= x1389 (or x530 x1761)) (= x2242 (x1579 (+ 32 x171))) (= x1070 x1808)) (and x1687 (=> (= x1020 x1724) x192)))))
(assert (x665 x1963))
(assert (x1413 x90 x1979 x2156 x2079))
(assert (x665 x129))
(assert (x1533 x1397))
(assert (= (x2046 2961265839) (x113 2961265839)))
(assert (= (x113 2630586785) (x2046 2630586785)))
(assert (x1473 x1899 x101))
(assert (x665 x185))
(assert (x1222 x992))
(assert (x665 x2208))
(assert (x131 (- x2079 x1043)))
(assert (x665 x1190))
(assert (x131 (- x1953 x90)))
(assert (=> (<= x1898 10000) (= (x113 x1898) (x2046 x1898))))
(assert (= 0 (x420 x1302)))
(assert (x565 x1615 (- x1011 x1365)))
(assert (x665 x75))
(assert (=> (<= x1130 10000) (= (x2046 x1130) (x113 x1130))))
(assert (x665 x892))
(assert (x565 x1386 (- x2173 x1764)))
(assert (=> (<= x230 10000) (= (x2046 x230) (x113 x230))))
(assert (and (x889 x950 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x950 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x950 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x950)) (x993 x950 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x950 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x665 x224))
(assert (= (=> (and (= (> x649 x107) x936) (or (and (= x1926 (x1579 (+ x1720 x107))) x936) (not x936))) x745) x2142))
(assert (x131 (- x1386 x1615)))
(assert (x131 (- x1011 x1043)))
(assert (x565 x213 (- x1365 x302)))
(assert (= x299 (and (not x1033) x1551)))
(assert (x665 x1537))
(assert (= (=> (and (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x404) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x404)) (> 128 x404)))) (= 0 x1524) (= (< x987 x652) x99) (= x1524 (ite x921 1 0)) (= (x375 x2029) x2052) (= x2145 (x1579 (+ x1079 32))) (= x1499 (x1579 (+ x2145 32))) (= x1988 (x375 x2145)) (= x921 (or x1344 x99)) (= x987 (x1579 (+ x652 128))) (= x1079 (x1579 (+ x2029 32))) (= (x1186 (- x313 x1440)) x404) (= x2029 (x1579 (+ 32 x1440))) (= (not (> x1837 x1499)) x125) (= (x1579 (+ 32 x2241)) x1151) (= x1344 (> x987 18446744073709551615)) (= (x375 x1079) x2180) (= x117 (x375 x1440)) (= (x1579 (+ 32 x1151)) x265) (<= x2052 255) (<= x117 452312848583266388373324160190187140051835877600158453279131187530910662655) (= (x1579 (+ 32 x652)) x2241)) (and x125 (=> (= x987 x2003) x2010))) x1468))
(assert (x665 x1926))
(assert (x665 x1858))
(assert (x1124 x2156 x2079 x1764 x1539))
(assert (x665 x1178))
(assert (and (x889 x1909 32) (=> (> 32 0) (= (+ (x1631 x1909 32) (* (x520 x1909 32) 32)) x1909)) (x993 x1909 32) (x132 x1909 32)))
(assert (x665 x1174))
(assert (= (x113 31536000) (x2046 31536000)))
(assert (x665 x766))
(assert (x565 x1615 (- x1011 x1979)))
(assert (x1124 x1043 x1268 x213 x1365))
(assert (x1124 x1944 x2040 x2079 x2156))
(assert (=> (<= x964 10000) (= (x113 x964) (x2046 x964))))
(assert (x1413 x1195 x302 x2156 x2079))
(assert (= x1648 (and x1343 (not x1723))))
(assert (x665 x2176))
(assert (x665 x1895))
(assert (x665 x855))
(assert (x1124 x1195 x302 x1386 x2173))
(assert (= x620 (and x1208 x724)))
(assert (x1124 x1539 x1764 x2079 x2156))
(assert (x1533 x273))
(assert (x665 x1979))
(assert (x1124 x1615 x1011 x1944 x2040))
(assert (= (x113 66268296141940672851042108147304593538321322149885339258387047461996478413388) (x2046 66268296141940672851042108147304593538321322149885339258387047461996478413388)))
(assert (x1124 x1953 x830 x90 x1979))
(assert (x1533 x1628))
(assert (x665 x1118))
(assert (= (and x784 (not x1814)) x1973))
(assert (x665 x1421))
(assert (and (x1059 32 x1421) (x1452 32 x1421) (and (= (* (- x1421 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x1495 32 (- x1421 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1421 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x1421 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1421 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 32 x1421) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1421)) (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1421))) (= (* 32 x1421) (x1495 32 x1421)) (x253 32 x1421) (x1123 32 x1421) (x2100 32 x1421)))
(assert (= (and x1084 (not x1002)) x433))
(assert (x1413 x1386 x2173 x1011 x1615))
(assert (x665 x1859))
(assert (x665 x1492))
(assert (x565 x302 (- x1195 x1764)))
(assert (x665 x2203))
(assert (x665 x2117))
(assert (x665 x1595))
(assert (x665 x1877))
(assert (x880 x1754))
(assert (x131 x90))
(assert (x665 x1109))
(assert (x665 x974))
(assert (= (or x58 x2252 x1675 x1646 x1449) x506))
(assert (x665 x494))
(assert (x665 x905))
(assert (x131 (- x1615 x1539)))
(assert (x131 (- x1615 x1043)))
(assert (x665 x334))
(assert (and (x889 x272 32) (=> (> 32 0) (= (+ (x1631 x272 32) (* (x520 x272 32) 32)) x272)) (x993 x272 32) (x132 x272 32)))
(assert (x665 x1899))
(assert (= x1097 (and x1508 x1472)))
(assert (= x822 (and x798 (not x170))))
(assert (x665 x1959))
(assert (x1124 x1615 x1011 x1360 x2131))
(assert (x665 x664))
(assert (x565 x90 (- x1979 x1360)))
(assert (x1124 x302 x1195 x90 x1979))
(assert (x1464 x274 x100))
(assert (x131 (- x2079 x1539)))
(assert (x1413 x2131 x1360 x1764 x1539))
(assert (x1124 x1953 x830 x1268 x1043))
(assert (x565 x1953 (- x830 x2173)))
(assert (x1124 x1615 x1011 x1195 x302))
(assert (x665 x638))
(assert (x838 x354))
(assert (x665 x518))
(assert (= x34 (and x2002 x393)))
(assert (x665 x1644))
(assert (x1124 x1365 x213 x1539 x1764))
(assert (= 22140752835961941075817313386879028057460502132199729129551447365926944505856 (x1433 (x2046 22140752835961941075817313386879028057460502132199729129551447365926944505856))))
(assert (x131 (- x2156 x302)))
(assert (x665 x802))
(assert (x665 x230))
(assert (x1124 x213 x1365 x2173 x1386))
(assert (x838 x1743))
(assert (= (and (not x705) x1692) x1127))
(assert (x665 x1108))
(assert (= x1525 (=> (and (= (x1579 (+ x1562 32)) x464) (= x1586 (x967 288)) (>= 1461501637330902918203684832716283019655932542975 x1311) (= (x1075 (* x631 32)) x1233) (<= x2014 65535) (= (x1579 (+ 32 x1608)) x422) (= x894 (or x1175 x2090)) (not (> x2057 3)) (= x1210 x1591) (< x1311 1461501637330902918203684832716283019655932542976) (= x1324 (or x731 x54)) (= x1311 (x391 x1347)) (>= 1099511627775 x2085) (= x1591 (x967 x122)) (= (x1579 (+ x1261 160)) x1817) (> 65536 x2014) (= x731 (> x1817 x597)) (= (x375 x1561) x896) (= (x967 x147) x1526) (= x1784 (x375 x690)) (>= x1311 0) (= (x1579 (+ x81 x597)) x1883) (= x611 (x1075 (* x896 32))) (<= x184 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1579 (+ x834 x690)) x1561) (not (< 18446744073709551615 x1852)) (= (x1186 (- x1451 x2085)) x1050) (= (x1579 (+ 31 x1608)) x1300) (= (x257 1461501637330902918203684832716283019655932542975 x1368) x947) (not (< x313 x2048)) (= x524 (x1186 (- x313 x611))) (= x1490 0) (= x2014 x896) (= (x375 x774) x834) (= x1562 (x1075 (* x631 32))) (= (x375 x1608) x631) (= (x730 x953 1) x1347) (= x1526 x1586) (= (> x597 18446744073709551615) x54) (= x1490 (ite x1324 1 0)) (<= 0 x184) (= (> x597 x1883) x1175) (not (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1669) (> x524 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x524) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1669)) (< x524 x1669)))) (not (> x2085 x717)) (= x2085 (x1475 x1347)) (not (< 18446744073709551615 x896)) (= (x1150 (x113 x947) (x2046 2) 0) x953) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1300) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x313)) (and (= (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1300 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1300 x313))) (= (> x2048 x422) x1531) (= x20 (ite x894 1 0)) (= x184 (x654 x953)) (not (or (and (= true (<= x572 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x572 160)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x572))) (= (x591 x1347) x2057) (= (x1579 (+ x422 x1233)) x2048) (>= x2014 0) (= (x375 x962) x1087) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x533) x81) (= (x967 x147) x1210) (<= 0 x2085) (= (x1579 (+ x1561 32)) x1669) (= x2014 (x634 x1347)) (> 256 x2057) (= (x1579 (+ 31 x464)) x533) (> x1050 2592000) (= x20 0) (or (and (< x834 x1146) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x834) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1146))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x834) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1146))) (= x1852 (x375 x774)) (< x2085 1099511627776) (= (< 18446744073709551615 x1883) x2090) (= (x1579 (+ x597 32)) x833) (>= 1461501637330902918203684832716283019655932542975 x1784) (not (< 18446744073709551615 x631)) (= (x1186 (- x572 31)) x1146) (= (x1579 (+ x1817 160)) x597) (= x1608 (x1579 (+ x1852 x690)))) (and (=> (and (not x1531) (= x1883 x1661)) x764) (=> x1531 x1516)))))
(assert (=> (>= 10000 x1368) (= (x2046 x1368) (x113 x1368))))
(assert (x1124 x1944 x2040 x1365 x213))
(assert (= (x2046 452312848583266388373324160190187140051835877600158453279131187530910662655) (x113 452312848583266388373324160190187140051835877600158453279131187530910662655)))
(assert (x1124 x1268 x1043 x90 x1979))
(assert (x665 x1431))
(assert (x665 x693))
(assert (x131 (- x1043 x1979)))
(assert (x1566 x230))
(assert (x665 x973))
(assert (and (x889 x1287 32) (=> (> 32 0) (= (+ (x1631 x1287 32) (* (x520 x1287 32) 32)) x1287)) (x993 x1287 32) (x132 x1287 32)))
(assert (x665 x1054))
(assert (x131 (- x1944 x1360)))
(assert (x665 x359))
(assert (and (x889 x1659 32) (=> (> 32 0) (= (+ (x1631 x1659 32) (* (x520 x1659 32) 32)) x1659)) (x993 x1659 32) (x132 x1659 32)))
(assert (x131 (- x2156 x1944)))
(assert (x131 (- x830 x1539)))
(assert (x665 x260))
(assert (x665 x1883))
(assert (x1124 x302 x1195 x1615 x1011))
(assert (x1124 x213 x1365 x2156 x2079))
(assert (x131 (- x1043 x90)))
(assert (x665 x1882))
(assert (x665 x1444))
(assert (x665 x490))
(assert (x1413 x1953 x830 x2040 x1944))
(assert (x1413 x213 x1365 x1360 x2131))
(assert (= x205 (=> (and (= (x1579 (+ x259 x690)) x956) (= (x1579 (+ 31 x1410)) x1628) (= (or x1559 x1629) x1196) (= x1629 (> x1376 18446744073709551615)) (= x1376 (x1579 (+ x122 x1942))) (= 0 x1293) (= x1410 (x1579 (+ x182 32))) (= x2073 (> x1024 x1897)) (= x259 (x375 x135)) (= (x1579 (+ x956 32)) x1897) (= x1622 (x1075 (* 128 x916))) (not (< 18446744073709551615 x259)) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1628) x1942) (not (< 18446744073709551615 x916)) (or (and (= (<= x1793 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x313)) (< x1793 x313)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1793) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x313))) (= x1293 (ite x1196 1 0)) (= (x1579 (+ x421 32)) x135) (= (x1579 (+ x1622 x1897)) x1024) (not (< x313 x1024)) (= (x375 x956) x916) (= (x1579 (+ 31 x956)) x1793) (= x1559 (< x1376 x122)) (= (x1075 (* 32 x916)) x182) (= x1093 (x1579 (+ x122 32)))) (and (=> x2073 x600) (=> (and (not x2073) (= x1376 x1261)) x1525)))))
(assert (x565 x1539 (- x1764 x213)))
(assert (= (and x1551 x1033) x1084))
(assert (x665 x1751))
(assert (x665 x1756))
(assert (x665 x308))
(assert (x665 x186))
(assert (x665 x548))
(assert (= (and (not x2056) x238) x1238))
(assert (x665 x817))
(assert (x665 x1582))
(assert (x880 x1397))
(assert (x565 x1195 (- x302 x1268)))
(assert (x565 x830 (- x1953 x1386)))
(assert (x665 x2067))
(assert (x1124 x302 x1195 x1386 x2173))
(assert (x131 (- x1764 x2079)))
(assert (x665 x160))
(assert (x665 x1933))
(assert (x1413 x1764 x1539 x90 x1979))
(assert (x665 x178))
(assert (x131 x805))
(assert (x665 x2028))
(assert (= 0 (x420 x1727)))
(assert (= 0 (x55 x638)))
(assert (x131 (- x1011 x1195)))
(assert (= (x1433 (x2046 1631253430)) 1631253430))
(assert (x1124 x1386 x2173 x90 x1979))
(assert (x665 x576))
(assert (x1413 x1386 x2173 x302 x1195))
(assert (x131 (- x1539 x1979)))
(assert (x131 (- x1386 x1953)))
(assert (x880 x1962))
(assert (x131 (- x830 x1944)))
(assert (x1413 x90 x1979 x1011 x1615))
(assert (= x1010 (and x1973 x481)))
(assert (x565 x2079 (- x2156 x2173)))
(assert (x665 x1760))
(assert (x1124 x1764 x1539 x2040 x1944))
(assert (x565 x302 (- x1195 x2173)))
(assert (x131 (- x2131 x1386)))
(assert (x1124 x1386 x2173 x2079 x2156))
(assert (x665 x640))
(assert (and (x312 x723 1000000000000000000000000000) (x1887 x723 1000000000000000000000000000) (=> (and (< 0 1000000000000000000000000000) (> x723 0)) (and (< (- x723 1000000000000000000000000000) (* 1000000000000000000000000000 (x520 x723 1000000000000000000000000000))) (>= x723 (* (x520 x723 1000000000000000000000000000) 1000000000000000000000000000)))) (x906 x723 1000000000000000000000000000) (x351 x723 1000000000000000000000000000)))
(assert (x880 x512))
(assert (x565 x1011 (- x1615 x1764)))
(assert (x131 (- x90 x2156)))
(assert (x665 x222))
(assert (x565 x1944 (- x2040 x1360)))
(assert (= x2199 (or x299 x963)))
(assert (x131 (- x1539 x1195)))
(assert (= (and x1710 (not x552)) x1181))
(assert (x1124 x2079 x2156 x1764 x1539))
(assert (x665 x1167))
(assert (= (x1433 (x113 x1933)) x1933))
(assert (x665 x801))
(assert (x665 x2228))
(assert (x131 (- x830 x2040)))
(assert (x565 x2156 (- x2079 x2173)))
(assert (and (x889 x1451 1099511627776) (=> (> 1099511627776 0) (= (+ (x1631 x1451 1099511627776) (* (x520 x1451 1099511627776) 1099511627776)) x1451)) (x993 x1451 1099511627776) (x132 x1451 1099511627776)))
(assert (x1124 x1195 x302 x1365 x213))
(assert (x880 x583))
(assert (x131 (- x2173 x213)))
(assert (x1413 x1953 x830 x1386 x2173))
(assert (x565 x1979 (- x90 x2156)))
(assert (x565 x1944 (- x2040 x1365)))
(assert (x1124 x1011 x1615 x1268 x1043))
(assert (x131 (- x1979 x1764)))
(assert (x131 (- x1195 x1043)))
(assert (x1413 x1268 x1043 x213 x1365))
(assert (x1413 x1944 x2040 x302 x1195))
(assert (= x2197 (or x1003 x433)))
(assert (x131 x1539))
(assert (x665 x1999))
(assert (x565 x2173 (- x1386 x1195)))
(assert (x665 x790))
(assert (x565 x2131 (- x1360 x1043)))
(assert (x665 x2042))
(assert (= (x420 x1992) 0))
(assert (x1413 x90 x1979 x830 x1953))
(assert (= (and x1143 (not x1759)) x227))
(assert (= (and x1657 x2054) x1149))
(assert (x131 (- x213 x1195)))
(assert (x131 (- x1979 x1360)))
(assert (= (and (not x1531) x593) x826))
(assert (x1533 x2))
(assert (= x2031 (and (not x355) x2165)))
(assert (and (x1059 32 x896) (x1452 32 x896) (and (= (* (- x896 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x1495 32 (- x896 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x896 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 32 (- x896 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x896 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 32 x896) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x896)) (x1495 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x896))) (= (* 32 x896) (x1495 32 x896)) (x253 32 x896) (x1123 32 x896) (x2100 32 x896)))
(assert (x665 x913))
(assert (= (x113 63696388041471822930743579425831364866188647584567569692446183701643513561088) (x2046 63696388041471822930743579425831364866188647584567569692446183701643513561088)))
(assert (= (+ (x1433 x158) 1) (x1433 (x730 x158 1))))
(assert (= x2192 true))
(assert (x1124 x2131 x1360 x1043 x1268))
(assert (x565 x1944 (- x2040 x2079)))
(assert (x565 x302 x1195))
(assert (x565 x1539 (- x1764 x1944)))
(assert (x665 x2003))
(assert (x665 x1951))
(assert (x131 (- x1268 x1615)))
(assert (x1124 x1360 x2131 x1539 x1764))
(assert (x665 x187))
(assert (x131 (- x1539 x1944)))
(assert (x1124 x1615 x1011 x302 x1195))
(assert (and (x889 x178 32) (=> (> 32 0) (= (+ (x1631 x178 32) (* (x520 x178 32) 32)) x178)) (x993 x178 32) (x132 x178 32)))
(assert (x665 x866))
(assert (x2183 x1011))
(assert (x665 x117))
(assert (x131 (- x1268 x1953)))
(assert (= x172 (x1433 (x113 x172))))
(assert (x665 x583))
(assert (x2183 x90))
(assert (x665 x1589))
(assert (x131 (- x1195 x1953)))
(assert (x565 x2079 (- x2156 x1615)))
(assert (x665 x1247))
(assert (x1413 x2156 x2079 x1011 x1615))
(assert (x131 (- x1615 x213)))
(assert (x665 x1534))
(assert (x665 x2149))
(assert (x1413 x1268 x1043 x90 x1979))
(assert (x131 (- x1539 x1360)))
(assert (x565 x1953 (- x830 x1011)))
(assert (x838 x1658))
(assert (x565 x1944 (- x2040 x1011)))
(assert (x665 x999))
(assert (= x52 (and x606 x1854)))
(assert (x1124 x302 x1195 x1944 x2040))
(assert (x565 x1043 (- x1268 x213)))
(assert (and (x889 x1397 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x1397 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x1397 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1397)) (x993 x1397 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x1397 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x665 x536))
(assert (x665 x1695))
(assert (= (=> (and (= x2049 x331) (= 0 x154)) x1647) x809))
(assert (x665 x741))
(assert (x565 x1386 (- x2173 x213)))
(assert (= x35 (and x1578 x300)))
(assert (x665 x220))
(assert (x1124 x2131 x1360 x1615 x1011))
(assert (x1124 x1615 x1011 x2079 x2156))
(assert (x1413 x2156 x2079 x302 x1195))
(assert (= x2004 (and x873 x10)))
(assert (x665 x171))
(assert (x665 x542))
(assert (x1124 x1979 x90 x1615 x1011))
(assert (x665 x966))
(assert (x880 x2041))
(assert (x565 x1268 (- x1043 x213)))
(assert (x131 (- x1764 x1043)))
(assert (x131 (- x1360 x1386)))
(assert (x1533 x354))
(assert (= (x420 x245) 0))
(assert (x665 x1252))
(assert (x1413 x90 x1979 x1764 x1539))
(assert (x665 x456))
(assert (x565 x2173 (- x1386 x1953)))
(assert (x1124 x2173 x1386 x1953 x830))
(assert (=> (<= x1317 10000) (= (x2046 x1317) (x113 x1317))))
(assert (x665 x2215))
(assert (x131 (- x1365 x1979)))
(assert (x1124 x830 x1953 x1011 x1615))
(assert (x665 x1982))
(assert (= (x2046 1703538655) (x113 1703538655)))
(assert (= x1825 (and (not x581) x88)))
(assert (and (x889 x1174 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x1631 x1174 1461501637330902918203684832716283019655932542976) (* (x520 x1174 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x1174)) (x993 x1174 1461501637330902918203684832716283019655932542976) (x132 x1174 1461501637330902918203684832716283019655932542976)))
(assert (x665 x2134))
(assert (and (x889 x1287 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x1287 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x1287 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1287)) (x993 x1287 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x1287 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1533 x777))
(assert (x665 x270))
(assert (x565 x1011 (- x1615 x90)))
(assert (x131 (- x1944 x1615)))
(assert (= (x1433 (x2046 1703538655)) 1703538655))
(assert (x665 x402))
(assert (= (x420 x719) 0))
(assert (= (and x165 (not x1487)) x1008))
(assert (x1413 x1011 x1615 x1386 x2173))
(assert (x665 x1659))
(assert (x565 x830 (- x1953 x2173)))
(assert (x1413 x1386 x2173 x213 x1365))
(assert (x565 x1764 (- x1539 x302)))
(assert (x1413 x830 x1953 x1764 x1539))
(assert (x1413 x302 x1195 x830 x1953))
(assert (and (x889 x1821 32) (=> (> 32 0) (= (+ (x1631 x1821 32) (* (x520 x1821 32) 32)) x1821)) (x993 x1821 32) (x132 x1821 32)))
(assert (= x712 (=> (= x581 (= 0 x1805)) (and (=> (and (and (= (x1579 (+ 128 x2259)) x1858) (= x1658 (x1579 (+ 31 x1215))) (= (or (and (> 32 x1215) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1215) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1215)) x2006) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1658) x2259)) (not x581)) (and (=> (and (and (= x897 (= 0 x213)) (= x643 (x520 115792089237316195423570985008687907853269984665640564039457584007913129639935 x213)) (= (ite (< x643 x1365) 1 0) x1354) (= x1216 (= x1395 0)) (= x1395 (x257 x1950 x1354)) (= (ite (not x897) 1 0) x1950) (= (x2237 128) x213)) (not x2006)) (and (=> (and (= x1621 0) (not x1216)) x1865) (=> (and (and (= x1723 (< x928 1000000000000000000000000000)) (= (x1186 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x688)) x928) (= x688 (x520 x1666 31536000)) (= (x1075 (x1495 x213 x1365)) x1666)) x1216) (and (=> (and (= 0 x1621) x1723) x1865) (=> (and (and (= (ite (> x1615 x102) 1 0) x3) (= (x520 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1011) x102) (= x1998 (x257 x2222 x3)) (<= 0 x1011) (= x1970 (= x1998 0)) (= (ite (not x925) 1 0) x2222) (= (= x1011 0) x925) (= (x1579 (+ 1000000000000000000000000000 x688)) x1615) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1011)) (not x1723)) (and (=> (and (not x1970) (= x1621 0)) x1865) (=> (and (and (= x2198 (> x1813 0)) (= (x1579 (+ x1995 32)) x290) (= (x1186 (- x62 32)) x1610) (= x1144 (x257 26959946667150639794667015087019630673637144422540572481103610249215 x555)) (= (x106 (x113 x1898)) x1813) (= x62 (x1186 (- x1353 x1858))) (= x555 (x453 x1726)) (= x1159 (x1075 (x1495 x1011 x1615))) (= (x1579 (+ x1995 96)) x1353) (= x1545 (x520 x1159 1000000000000000000000000000)) (= x1995 (x1579 (+ x1858 36))) (= (x1579 (+ x1353 64)) x477) (= x1333 (x1579 (+ x1144 16156842317565293874272834530371880720966471053262404558597773956279093428224))) (= (x257 1461501637330902918203684832716283019655932542975 x362) x1898) (= x1726 (x1579 (+ 32 x1858))) (= x1742 (x1579 (+ x290 32)))) x1970) (and (=> (and (not x2198) (= x1621 0)) x1865) (=> (and x2198 (and (= (x1839 x1858) x1450) (= x382 (< 0 x1450)))) (and (=> (and (and (= x16 x1726) (= x317 x477) (= (> x1450 32) x1830) (= (x1601 x16) x288)) x382) (and (=> (and (= 32 x1616) (not x1830)) x840) (=> (and (and (= x1567 (x1579 (+ x477 32))) (= x1029 (x1601 x1845)) (= (x1579 (+ 32 x1726)) x1845) (= (< 64 x1450) x1759)) x1830) (and (=> (and (and (= x2238 (> x1450 96)) (= x825 (x1579 (+ x1726 64))) (= x2087 (x1601 x825)) (= (x1579 (+ 64 x477)) x2221)) x1759) (and (=> (and (= x1616 96) (not x2238)) x840) (=> x2238 x942))) (=> (and (not x1759) (= 64 x1616)) x840))))) (=> (and (= 0 x1616) (not x382)) x840))))))))))) (=> (and x2006 (= 0 x1621)) x1865))) (=> (and (= x1621 0) x581) x1865)))))
(assert (x131 (- x1043 x2131)))
(assert (x665 x389))
(assert (x1413 x1764 x1539 x302 x1195))
(assert (= (x420 x326) 0))
(assert (x1413 x1365 x213 x2156 x2079))
(assert (= (x1433 (x113 x1130)) x1130))
(assert (x131 x302))
(assert (x1473 x1950 x1354))
(assert (x665 x2133))
(assert (x131 (- x1953 x1944)))
(assert (x665 x1977))
(assert (x665 x457))
(assert (x665 x2260))
(assert (= (or x1552 x753 x624 x415 x1466) x1722))
(assert (= x904 (or x1843 x613)))
(assert (= (and x1180 x267) x716))
(assert (= (x420 x525) 0))
(assert (and (x889 x248 32) (=> (> 32 0) (= (+ (x1631 x248 32) (* (x520 x248 32) 32)) x248)) (x993 x248 32) (x132 x248 32)))
(assert (x565 x1764 (- x1539 x1979)))
(assert (x131 (- x1011 x1953)))
(assert (x838 x996))
(assert (x665 x1491))
(assert (x565 x213 (- x1365 x2079)))
(assert (x1124 x1953 x830 x1360 x2131))
(assert (x565 x1043 x1268))
(assert (x838 x478))
(assert (x565 x1764 (- x1539 x90)))
(assert (x565 x830 (- x1953 x1944)))
(assert (x131 (- x1268 x90)))
(assert (x1566 x410))
(assert (= (x1433 (x2046 4294967296)) 4294967296))
(assert (x665 x707))
(assert (x131 (- x2079 x1011)))
(assert (= (x1433 (x2046 55253086691344412491249731323735809531556945173834312332507302207468853002240)) 55253086691344412491249731323735809531556945173834312332507302207468853002240))
(assert (x565 x1195 (- x302 x2079)))
(assert (x665 x1112))
(assert (x131 (- x1386 x2156)))
(assert (x665 x1943))
(assert (and (x889 x469 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x469 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x469 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x469)) (x993 x469 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x469 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x665 x811))
(assert (= (x113 3414818225) (x2046 3414818225)))
(assert (x665 x11))
(assert (= x971 (=> (and (= x246 (x1177 x1672)) (= x1478 x1672) (= x304 x467) (= (not (< 32 x885)) x1435)) (and x1435 (=> (= x1100 32) x323)))))
(assert (x665 x1005))
(assert (= 0 (x420 x1363)))
(assert (x1533 x755))
(assert (x131 (- x1615 x1764)))
(assert (x565 x2156 (- x2079 x2131)))
(assert (x565 x2040 (- x1944 x2079)))
(assert (x131 (- x90 x1365)))
(assert (x2183 x778))
(assert (x565 x1011 x1615))
(assert (x1124 x2079 x2156 x302 x1195))
(assert (= (and x1830 x2017) x1143))
(assert (x1473 x1189 x456))
(assert (x665 x361))
(assert (x1566 x1125))
(assert (x1124 x1386 x2173 x1365 x213))
(assert (x565 x1944 (- x2040 x2156)))
(assert (x665 x154))
(assert (x131 (- x1615 x1944)))
(assert (x1413 x1365 x213 x830 x1953))
(assert (x665 x2150))
(assert (= (x2046 404098525) (x113 404098525)))
(assert (x665 x242))
(assert (= x414 (and x1648 (not x1970))))
(assert (= (x420 x1841) 0))
(assert (x565 x2156 (- x2079 x1764)))
(assert (x665 x45))
(assert (x665 x854))
(assert (x665 x788))
(assert (and (x889 x2067 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x1631 x2067 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x520 x2067 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2067)) (x993 x2067 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x132 x2067 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x131 (- x1043 x2156)))
(assert (x1124 x302 x1195 x2040 x1944))
(assert (x1124 x1011 x1615 x2156 x2079))
(assert (x131 (- x2040 x1764)))
(assert (x1124 x1539 x1764 x2156 x2079))
(assert (x565 x1268 (- x1043 x1764)))
(assert (x1124 x2156 x2079 x1195 x302))
(assert (= x1907 (=> (and (= (> x1721 18446744073709551615) x298) (= x1879 (x1579 (+ 32 x706))) (= (x1579 (+ x1879 x1823)) x912) (= (x375 x706) x1290) (= 0 x1342) (= x2190 (< x1721 x1735)) (= (x1579 (+ x1948 x1735)) x1721) (= (< x1735 x447) x919) (<= x592 1461501637330902918203684832716283019655932542975) (= (< 18446744073709551615 x1735) x1611) (= (x1579 (+ x706 31)) x1055) (= (or x2190 x298) x1040) (= x2068 (ite x1322 1 0)) (= (x1075 (* x1290 32)) x219) (= (x1579 (+ 32 x1735)) x769) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x572) (and (< x572 160) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x572))))) (= (x375 x774) x1977) (= x1322 (or x919 x1611)) (= (x257 115792089237316195423570985008687907853269984665640564039457584007913129639904 x478) x1948) (not (< 18446744073709551615 x1977)) (= (x1579 (+ x1977 x690)) x706) (not (> x1290 18446744073709551615)) (= (x1075 (* x1290 32)) x1823) (= x1888 (> x912 x1879)) (= 0 x2068) (= x592 (x375 x690)) (= x231 (x1579 (+ 32 x219))) (not (< x313 x912)) (= x1342 (ite x1040 1 0)) (or (and (> x1055 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x313)) (and (= (<= x1055 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x313 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x313 x1055))) (= x478 (x1579 (+ 31 x231))) (= (x1579 (+ x447 160)) x1735)) (and (=> (and (= x1061 x1721) (not x1888)) x554) (=> x1888 x2123)))))
(assert (= (and x1281 x1330) x465))
(assert (x665 x680))
(assert (= (x2046 65535) (x113 65535)))
(assert (= (and x1036 x2061) x142))
(assert (x665 x1210))
(assert (x665 x354))
(assert (and (x889 x362 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (x1631 x362 1461501637330902918203684832716283019655932542976) (* (x520 x362 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x362)) (x993 x362 1461501637330902918203684832716283019655932542976) (x132 x362 1461501637330902918203684832716283019655932542976)))
(assert (and (x1059 1000000000000000000000000000 x805) (x1452 1000000000000000000000000000 x805) (and (= (* (- x805 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (x1495 1000000000000000000000000000 (- x805 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1495 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x805 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000000000000 (- x805 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x805 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 1000000000000000000000000000 x805) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x805)) (x1495 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x805))) (= (* 1000000000000000000000000000 x805) (x1495 1000000000000000000000000000 x805)) (x253 1000000000000000000000000000 x805) (x1123 1000000000000000000000000000 x805) (x2100 1000000000000000000000000000 x805)))
(assert (x131 (- x1043 x830)))
(assert (= x1266 (=> (and (= (x1019 x245) x816) (= x2035 (not (> x1339 32))) (= x573 x1393) (= x245 x1949)) (and x2035 (=> (= x917 32) x121)))))
(assert (x1124 x2131 x1360 x2040 x1944))
(assert (x565 x213 (- x1365 x2131)))
(assert (x131 (- x2173 x2079)))
(assert (x131 (- x1365 x2131)))
(assert (x665 x505))
(assert (x665 x789))
(assert (x1124 x1365 x213 x2156 x2079))
(assert (= x1066 (=> (and (or (not x1383) x1383) (= x1383 (= 0 x927))) x1857)))
(assert (x131 (- x1615 x2156)))
(assert (x131 (- x2156 x1979)))
(assert (x1124 x830 x1953 x1195 x302))
(assert (x1124 x1011 x1615 x1953 x830))
(assert (= (x1433 (x113 x230)) x230))
(assert (x665 x1881))
(assert (x565 x1195 (- x302 x1615)))
(assert (x1124 x1386 x2173 x1615 x1011))
(assert (x665 x500))
(assert (x1413 x1268 x1043 x2156 x2079))
(assert (x665 x462))
(assert (x1124 x1615 x1011 x830 x1953))
(assert (x665 x2106))
(assert (x1124 x1365 x213 x1011 x1615))
(assert (x665 x2098))
(assert (x1124 x2173 x1386 x302 x1195))
(assert (x665 x477))
(assert (x1124 x2156 x2079 x2040 x1944))
(assert (x1533 1099511627776))
(assert (= (and x1876 x1158) x1036))
(assert (=> (>= 10000 x1557) (= (x113 x1557) (x2046 x1557))))
(assert (x565 x1386 (- x2173 x90)))
(assert (= (x420 x185) 0))
(check-sat)
(exit)
