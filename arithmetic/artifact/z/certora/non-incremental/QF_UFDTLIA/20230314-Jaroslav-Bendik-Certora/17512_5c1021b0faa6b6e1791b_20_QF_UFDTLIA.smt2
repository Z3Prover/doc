(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x372 0)) (((x566 (x479 x372) (x531 x372) (x420 Int)) (x23 (x318 x372) (x561 Int)) (x52 (x544 Int)))))
(declare-fun x711 () Int)
(declare-fun x529 () Int)
(declare-fun x216 () Bool)
(declare-fun x609 () Int)
(declare-fun x376 (Int) Int)
(declare-fun x373 () Int)
(declare-fun x47 () Int)
(declare-fun x368 () x372)
(declare-fun x584 () Int)
(declare-fun x414 () Bool)
(declare-fun x460 () Int)
(declare-fun x73 () Bool)
(declare-fun x548 (Int) Int)
(declare-fun x573 () x372)
(declare-fun x523 (Int) Int)
(declare-fun x540 () Int)
(declare-fun x66 () Int)
(declare-fun x55 () Int)
(declare-fun x32 () Int)
(declare-fun x195 () Int)
(declare-fun x168 () Int)
(declare-fun x234 () Int)
(declare-fun x680 () Int)
(declare-fun x367 () Int)
(declare-fun x543 () x372)
(declare-fun x382 () Int)
(declare-fun x158 () Bool)
(declare-fun x228 () Bool)
(declare-fun x120 () Int)
(declare-fun x292 () Int)
(declare-fun x393 (Int) Int)
(declare-fun x164 () Int)
(declare-fun x300 () Int)
(declare-fun x468 () Int)
(declare-fun x296 () x372)
(declare-fun x87 () Int)
(declare-fun x383 () Int)
(declare-fun x160 () Int)
(declare-fun x716 () Int)
(declare-fun x510 () Bool)
(declare-fun x558 () Int)
(declare-fun x335 () Int)
(declare-fun x79 () Int)
(declare-fun x588 () Bool)
(declare-fun x438 () Bool)
(declare-fun x647 () Int)
(declare-fun x381 () Bool)
(declare-fun x70 () Int)
(declare-fun x320 () Int)
(declare-fun x58 () Int)
(declare-fun x139 () Int)
(declare-fun x515 () Int)
(declare-fun x390 () Bool)
(declare-fun x632 () Bool)
(declare-fun x709 () x372)
(declare-fun x600 () Int)
(declare-fun x171 () Int)
(declare-fun x482 () Int)
(declare-fun x17 () Int)
(declare-fun x224 () Int)
(declare-fun x77 () Int)
(declare-fun x351 (Int) Int)
(declare-fun x604 () Int)
(declare-fun x719 (Int Int) Int)
(declare-fun x141 () x372)
(declare-fun x328 () Int)
(declare-fun x176 () Int)
(declare-fun x330 () Int)
(declare-fun x177 () Int)
(declare-fun x182 () Int)
(declare-fun x117 () Int)
(declare-fun x687 () Int)
(declare-fun x569 () Int)
(declare-fun x574 () Int)
(declare-fun x226 () Bool)
(declare-fun x75 () Int)
(declare-fun x486 (Int) Int)
(declare-fun x14 () Int)
(declare-fun x326 () x372)
(declare-fun x81 () Int)
(declare-fun x157 () Bool)
(declare-fun x51 () Int)
(declare-fun x131 () Bool)
(declare-fun x712 () Int)
(declare-fun x524 (x372) Int)
(declare-fun x53 () Int)
(declare-fun x496 () Int)
(declare-fun x27 () Bool)
(declare-fun x676 () x372)
(declare-fun x315 () x372)
(declare-fun x487 () Int)
(declare-fun x657 () x372)
(declare-fun x249 () Bool)
(declare-fun x634 () Int)
(declare-fun x154 () Int)
(declare-fun x329 () Bool)
(declare-fun x602 () Int)
(declare-fun x633 () Int)
(declare-fun x149 () Int)
(declare-fun x198 () Int)
(declare-fun x653 () Int)
(declare-fun x535 () Int)
(declare-fun x583 () Bool)
(declare-fun x71 () Bool)
(declare-fun x656 () Int)
(declare-fun x662 () Int)
(declare-fun x148 () x372)
(declare-fun x557 () Bool)
(declare-fun x581 () Bool)
(declare-fun x26 () Int)
(declare-fun x103 () Int)
(declare-fun x526 () Bool)
(declare-fun x310 () Int)
(declare-fun x1 () Int)
(declare-fun x184 () Int)
(declare-fun x290 () Bool)
(declare-fun x123 () Int)
(declare-fun x278 () Int)
(declare-fun x325 () Int)
(declare-fun x671 () Int)
(declare-fun x424 () Bool)
(declare-fun x280 () Int)
(declare-fun x478 () Int)
(declare-fun x331 () Int)
(declare-fun x466 () Bool)
(declare-fun x7 () Int)
(declare-fun x307 () Int)
(declare-fun x210 () Int)
(declare-fun x489 () Int)
(declare-fun x15 () Int)
(declare-fun x667 () Bool)
(declare-fun x616 () Int)
(declare-fun x450 () Int)
(declare-fun x455 () Bool)
(declare-fun x202 () Bool)
(declare-fun x83 () Int)
(declare-fun x266 () Bool)
(declare-fun x428 () Int)
(declare-fun x563 () Int)
(declare-fun x668 () Int)
(declare-fun x252 () Bool)
(declare-fun x587 () Int)
(declare-fun x188 () Int)
(declare-fun x387 () Int)
(declare-fun x505 () Int)
(declare-fun x469 () Int)
(declare-fun x4 () Bool)
(declare-fun x702 () Bool)
(declare-fun x542 () Bool)
(declare-fun x617 () Bool)
(declare-fun x194 () Bool)
(declare-fun x392 () Bool)
(declare-fun x3 () Int)
(declare-fun x363 () Int)
(declare-fun x78 () Int)
(declare-fun x418 () Bool)
(declare-fun x502 () Bool)
(declare-fun x273 () Bool)
(declare-fun x411 (Int) Int)
(declare-fun x378 () Bool)
(declare-fun x688 () Int)
(declare-fun x333 () Int)
(declare-fun x652 () Int)
(declare-fun x451 () Int)
(declare-fun x250 () x372)
(declare-fun x327 () Int)
(declare-fun x82 (Int) Int)
(declare-fun x174 () x372)
(declare-fun x97 () Int)
(declare-fun x38 () Bool)
(declare-fun x105 () Bool)
(declare-fun x68 (Int) x372)
(declare-fun x594 () Int)
(declare-fun x96 () Int)
(declare-fun x704 () Int)
(declare-fun x101 () Int)
(declare-fun x422 () Int)
(declare-fun x578 () Bool)
(declare-fun x90 () Int)
(declare-fun x464 () Bool)
(declare-fun x714 () Int)
(declare-fun x666 () Int)
(declare-fun x180 () Int)
(declare-fun x433 () Int)
(declare-fun x294 () Int)
(declare-fun x691 () Int)
(declare-fun x80 () Int)
(declare-fun x16 (Int) Int)
(declare-fun x626 () Int)
(declare-fun x625 () Int)
(declare-fun x551 () Int)
(declare-fun x695 () Int)
(declare-fun x597 () Int)
(declare-fun x309 () Int)
(declare-fun x324 () Int)
(declare-fun x99 () Int)
(declare-fun x470 () Bool)
(declare-fun x481 () Int)
(declare-fun x19 () Int)
(declare-fun x624 () Int)
(declare-fun x263 (x372) Int)
(declare-fun x5 () Int)
(declare-fun x613 () Bool)
(declare-fun x346 () x372)
(declare-fun x12 () Int)
(declare-fun x200 () Int)
(declare-fun x638 () Int)
(declare-fun x206 () Bool)
(declare-fun x225 () Bool)
(declare-fun x701 () Int)
(declare-fun x354 () Int)
(declare-fun x165 () Bool)
(declare-fun x492 () Bool)
(declare-fun x285 () Int)
(declare-fun x114 () Int)
(declare-fun x399 () Int)
(declare-fun x637 () Int)
(declare-fun x29 () Int)
(declare-fun x593 () Int)
(declare-fun x580 () Int)
(declare-fun x591 () Int)
(declare-fun x575 () Int)
(declare-fun x514 () Int)
(declare-fun x413 () Int)
(declare-fun x243 () Int)
(declare-fun x572 () Int)
(declare-fun x429 () Int)
(declare-fun x713 () Int)
(declare-fun x152 () Int)
(declare-fun x628 () Int)
(declare-fun x244 () Bool)
(declare-fun x401 () Bool)
(declare-fun x186 () Int)
(declare-fun x708 () Int)
(declare-fun x54 () Int)
(declare-fun x145 () Bool)
(declare-fun x34 () Int)
(declare-fun x319 () Int)
(declare-fun x603 () Bool)
(declare-fun x231 () Int)
(declare-fun x425 () Int)
(declare-fun x130 () Int)
(declare-fun x245 () Bool)
(declare-fun x74 () Int)
(declare-fun x442 () Bool)
(declare-fun x178 () Int)
(declare-fun x349 (x372) Int)
(declare-fun x406 () Int)
(declare-fun x660 () Int)
(declare-fun x308 () Int)
(declare-fun x377 () Bool)
(declare-fun x654 () Int)
(declare-fun x135 () x372)
(declare-fun x448 () Int)
(declare-fun x518 () Int)
(declare-fun x658 () Int)
(declare-fun x697 () Int)
(declare-fun x359 () Int)
(declare-fun x477 () Bool)
(declare-fun x137 (Int) Int)
(declare-fun x156 () Int)
(declare-fun x143 () Int)
(declare-fun x380 () Int)
(declare-fun x138 () Int)
(declare-fun x261 () Int)
(declare-fun x166 () Bool)
(declare-fun x423 () Int)
(declare-fun x539 () Int)
(declare-fun x282 () Int)
(declare-fun x64 () Int)
(declare-fun x484 () Int)
(declare-fun x185 () Bool)
(declare-fun x564 () Int)
(declare-fun x76 () Bool)
(declare-fun x136 () Int)
(declare-fun x258 () Int)
(declare-fun x353 () Int)
(declare-fun x541 () Int)
(declare-fun x229 () Bool)
(declare-fun x108 () Bool)
(declare-fun x410 () Int)
(declare-fun x565 () Int)
(declare-fun x552 () Int)
(declare-fun x494 () Int)
(declare-fun x582 () Bool)
(declare-fun x385 () Bool)
(declare-fun x449 () Bool)
(declare-fun x11 () Bool)
(declare-fun x323 () Int)
(declare-fun x57 () Int)
(declare-fun x356 () Int)
(declare-fun x256 () Int)
(declare-fun x554 () Bool)
(declare-fun x257 (Int Int) Int)
(declare-fun x444 () Int)
(declare-fun x371 () Int)
(declare-fun x641 () Int)
(declare-fun x475 () x372)
(declare-fun x503 () Int)
(declare-fun x435 () Int)
(declare-fun x567 () Int)
(declare-fun x684 () Int)
(declare-fun x419 () Int)
(declare-fun x13 (Int) Int)
(declare-fun x516 () Int)
(declare-fun x95 () Int)
(declare-fun x65 () Int)
(declare-fun x86 () Bool)
(declare-fun x298 () Bool)
(declare-fun x397 () Int)
(declare-fun x522 () Bool)
(declare-fun x586 () Bool)
(declare-fun x715 () Bool)
(declare-fun x110 () Int)
(declare-fun x511 () x372)
(declare-fun x50 () Int)
(declare-fun x204 () Int)
(declare-fun x570 () Int)
(declare-fun x627 () Int)
(declare-fun x407 () Bool)
(declare-fun x129 () Int)
(declare-fun x663 () Int)
(declare-fun x659 () Int)
(declare-fun x344 () Int)
(declare-fun x134 () x372)
(declare-fun x568 () Int)
(declare-fun x207 () Int)
(declare-fun x189 () Int)
(declare-fun x661 () Int)
(declare-fun x645 () Int)
(declare-fun x140 () Int)
(declare-fun x10 () Int)
(declare-fun x443 () Int)
(declare-fun x162 () Int)
(declare-fun x253 () Bool)
(declare-fun x163 () Int)
(declare-fun x506 () x372)
(declare-fun x281 () Int)
(declare-fun x89 () Bool)
(declare-fun x488 () Bool)
(declare-fun x291 () Bool)
(declare-fun x60 () Int)
(declare-fun x398 () Int)
(declare-fun x705 (Int) Int)
(declare-fun x218 () Int)
(declare-fun x509 () Int)
(declare-fun x689 () Int)
(declare-fun x127 () Bool)
(declare-fun x446 () Int)
(declare-fun x39 () Int)
(declare-fun x536 () Bool)
(declare-fun x67 () Int)
(declare-fun x336 () Int)
(declare-fun x517 () Bool)
(declare-fun x412 () Int)
(declare-fun x220 () Int)
(declare-fun x456 () Int)
(declare-fun x607 () Bool)
(declare-fun x391 () x372)
(declare-fun x358 () Int)
(declare-fun x305 () Int)
(declare-fun x485 () Int)
(declare-fun x362 () Bool)
(declare-fun x357 () x372)
(declare-fun x342 () Int)
(declare-fun x361 () Bool)
(declare-fun x18 () Int)
(declare-fun x146 () Int)
(declare-fun x520 () Int)
(declare-fun x608 () Int)
(declare-fun x694 () Int)
(declare-fun x348 () Int)
(declare-fun x415 () Int)
(declare-fun x41 () Int)
(declare-fun x437 (Int) Int)
(declare-fun x187 () Int)
(declare-fun x693 () Int)
(declare-fun x560 () Int)
(declare-fun x458 () Bool)
(declare-fun x295 () Int)
(declare-fun x553 () Int)
(declare-fun x480 () x372)
(declare-fun x512 () Int)
(declare-fun x345 () Int)
(declare-fun x686 () Bool)
(declare-fun x472 () Bool)
(declare-fun x277 () Int)
(declare-fun x175 () Int)
(declare-fun x389 () Bool)
(declare-fun x221 () Int)
(declare-fun x621 () Bool)
(declare-fun x311 () Bool)
(declare-fun x322 () Int)
(declare-fun x595 () Bool)
(declare-fun x341 () Int)
(declare-fun x246 () Int)
(declare-fun x521 () Int)
(declare-fun x590 () Bool)
(declare-fun x692 () Int)
(declare-fun x215 () Bool)
(declare-fun x696 () Bool)
(declare-fun x28 () Bool)
(declare-fun x612 () Int)
(declare-fun x619 () Int)
(declare-fun x498 () Int)
(declare-fun x30 () Int)
(declare-fun x421 () Int)
(declare-fun x601 () Int)
(declare-fun x91 () Int)
(declare-fun x350 () Int)
(declare-fun x61 () Bool)
(declare-fun x457 () Int)
(declare-fun x85 () Int)
(declare-fun x251 () Int)
(declare-fun x201 () Int)
(declare-fun x8 () Int)
(declare-fun x525 () Bool)
(declare-fun x683 (Int Int) Int)
(declare-fun x408 () Bool)
(declare-fun x400 () Bool)
(declare-fun x533 () Int)
(declare-fun x490 () Int)
(declare-fun x386 () Int)
(declare-fun x462 () Int)
(declare-fun x432 () Int)
(declare-fun x72 () Int)
(declare-fun x98 () Bool)
(declare-fun x426 () Int)
(declare-fun x102 () Bool)
(declare-fun x289 () Int)
(declare-fun x545 () Int)
(declare-fun x343 () Bool)
(declare-fun x664 () x372)
(declare-fun x618 () x372)
(declare-fun x230 () Int)
(declare-fun x537 () Int)
(declare-fun x107 () Int)
(declare-fun x639 () Int)
(declare-fun x403 () Bool)
(declare-fun x669 () Bool)
(declare-fun x283 (Int) Int)
(declare-fun x2 () Bool)
(declare-fun x500 () Int)
(declare-fun x192 () Int)
(declare-fun x267 () Int)
(declare-fun x22 () Int)
(declare-fun x643 () Int)
(declare-fun x299 () Int)
(declare-fun x337 () Int)
(declare-fun x369 (Int Int) Int)
(declare-fun x62 () Bool)
(declare-fun x317 () Bool)
(declare-fun x161 () Bool)
(declare-fun x142 () Int)
(declare-fun x474 () Bool)
(declare-fun x297 () Int)
(declare-fun x48 () Int)
(declare-fun x122 () Bool)
(declare-fun x173 () Int)
(declare-fun x476 () Bool)
(declare-fun x528 () Bool)
(declare-fun x555 () Int)
(declare-fun x232 () Int)
(declare-fun x104 () Int)
(declare-fun x118 () Int)
(declare-fun x706 () Bool)
(declare-fun x191 () Int)
(declare-fun x674 () Bool)
(declare-fun x334 () Int)
(declare-fun x31 () Int)
(declare-fun x585 () Int)
(declare-fun x379 () Int)
(declare-fun x461 () Int)
(declare-fun x25 () Int)
(declare-fun x452 () Int)
(declare-fun x274 () Bool)
(declare-fun x262 () Bool)
(declare-fun x611 () Int)
(declare-fun x314 () Bool)
(declare-fun x499 () Int)
(declare-fun x360 (x372) Int)
(declare-fun x672 () Bool)
(declare-fun x286 () Int)
(declare-fun x534 () Int)
(declare-fun x409 () Bool)
(declare-fun x46 () Int)
(declare-fun x36 () Bool)
(declare-fun x247 () Int)
(declare-fun x589 () Int)
(declare-fun x270 () Int)
(declare-fun x465 () Int)
(declare-fun x49 () Int)
(declare-fun x109 () Int)
(declare-fun x179 () Int)
(declare-fun x441 () Int)
(declare-fun x313 () Int)
(declare-fun x272 () Int)
(declare-fun x293 () Int)
(declare-fun x532 () Bool)
(declare-fun x710 () Int)
(declare-fun x126 () Bool)
(declare-fun x69 () Int)
(declare-fun x209 () Bool)
(declare-fun x338 () Bool)
(declare-fun x622 (Int) Int)
(declare-fun x365 () Int)
(declare-fun x648 () Bool)
(declare-fun x45 () Int)
(declare-fun x550 () Bool)
(declare-fun x453 () Int)
(declare-fun x183 () x372)
(declare-fun x37 () Bool)
(declare-fun x255 () Int)
(declare-fun x340 () Int)
(declare-fun x248 (Int Int) Int)
(declare-fun x59 () Int)
(declare-fun x644 () Int)
(declare-fun x227 () Int)
(declare-fun x197 () Int)
(declare-fun x237 () Int)
(declare-fun x355 () Int)
(declare-fun x439 () Int)
(declare-fun x620 () Int)
(declare-fun x445 () Int)
(declare-fun x94 () Int)
(declare-fun x92 () Bool)
(declare-fun x169 () Int)
(declare-fun x434 () x372)
(declare-fun x88 () Bool)
(declare-fun x599 () Bool)
(declare-fun x172 () Bool)
(declare-fun x219 () Bool)
(declare-fun x240 () Int)
(declare-fun x44 () Int)
(declare-fun x301 () Int)
(declare-fun x640 () Int)
(declare-fun x238 () Bool)
(declare-fun x63 () Int)
(declare-fun x199 () Int)
(declare-fun x576 () Int)
(declare-fun x155 () Bool)
(declare-fun x316 () Int)
(declare-fun x235 () Int)
(declare-fun x436 () Bool)
(define-fun x159 ((x372 x372) (x132 Int)) x372 (ite ((_ is x23) x372) (x23 (x318 x372) (+ x132 (x561 x372))) (ite ((_ is x566) x372) (x566 (x479 x372) (x531 x372) (+ (x420 x372) x132)) (x52 (+ (x544 x372) x132)))))
(define-fun x598 ((x264 Int)) Int (ite (and (< x264 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x264)) x264 (- x264 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x630 ((x264 Int)) Int (ite (and (< x264 0) (>= x264 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x264) x264))
(define-fun x717 ((x264 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x264) (<= 0 x264)) x264 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x264) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x264)) (- x264 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x264) (< x264 0)) (+ x264 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x257 x264 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x651 ((x699 Int)) Bool (and (< x699 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x699 0)))
(define-fun x170 ((x699 Int) (x370 Int)) Bool (=> (and (< 0 x370) (< 0 x699)) (and (>= x699 (x369 x699 x370)) (>= (x369 x699 x370) 0))))
(define-fun x631 ((x699 Int) (x370 Int)) Bool (=> (and (and (<= 1 x370) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x370)) (and (>= x699 0) (< x699 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (< (x369 x699 x370) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= (x369 x699 x370) 0))))
(define-fun x471 ((x699 Int) (x370 Int)) Bool (=> (and (< x370 x699) (> x370 1)) (> x699 (x369 x699 x370))))
(define-fun x84 ((x699 Int) (x370 Int)) Bool (=> (and (< 0 x370) (> x699 0)) (= (< x699 x370) (= (x369 x699 x370) 0))))
(define-fun x404 ((x699 Int)) Bool (= (x369 0 x699) 0))
(define-fun x236 ((x699 Int)) Bool (= x699 (x369 x699 1)))
(define-fun x260 ((x699 Int)) Bool (=> (not (= 0 x699)) (= (x369 x699 x699) 1)))
(define-fun x121 ((x699 Int)) Bool (and (x236 x699) (x260 x699) (x404 x699)))
(define-fun x538 ((x699 Int) (x370 Int)) Bool (=> (and (> x699 0) (< 0 x370)) (and (< (- x699 x370) (x683 (x369 x699 x370) x370)) (>= x699 (x683 (x369 x699 x370) x370)))))
(define-fun x646 ((x699 Int) (x370 Int)) Bool (and (x84 x699 x370) (x170 x699 x370) (x538 x699 x370) (x471 x699 x370) (x631 x699 x370)))
(define-fun x259 ((x699 Int) (x370 Int)) Bool (= (x683 x699 x370) (x683 x370 x699)))
(define-fun x208 ((x699 Int) (x370 Int)) Bool (and (=> (and (> 0 x699) (> x370 0)) (> 0 (x683 x699 x370))) (=> (and (< 0 x699) (< 0 x370)) (< 0 (x683 x699 x370))) (=> (and (< x370 0) (< x699 0)) (< 0 (x683 x699 x370))) (=> (and (< x370 0) (< 0 x699)) (> 0 (x683 x699 x370)))))
(define-fun x677 ((x699 Int) (x370 Int)) Bool (=> (and (< 0 x699) (> x370 0)) (= (< (x683 x699 x370) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x370 (x369 (x717 (x683 x699 x370)) x699)))))
(define-fun x682 ((x699 Int) (x370 Int)) Bool (=> (and (not (= x699 0)) (not (= 0 x370))) (and (= x699 (x369 (x683 x699 x370) x370)) (= (x369 (x683 x699 x370) x699) x370))))
(define-fun x279 ((x699 Int) (x370 Int)) Bool (=> (and (> x699 0) (> x370 0)) (= (> (x683 x699 x370) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< (x369 115792089237316195423570985008687907853269984665640564039457584007913129639935 x699) x370))))
(define-fun x151 ((x699 Int) (x370 Int)) Bool (and (= (x717 (x683 (- x699 115792089237316195423570985008687907853269984665640564039457584007913129639936) x370)) (x717 (x683 x699 x370))) (= (x717 (x683 x699 x370)) (x717 (x683 x699 (- x370 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x717 (x683 (- x699 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x370 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x717 (x683 x699 x370)))))
(define-fun x700 ((x699 Int) (x370 Int)) Bool (and (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x370) (> x370 0)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x699) (> x699 0))) (= (>= (x369 57896044618658097711785492504343953926634992332820282019728792003956564819967 x370) x699) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x683 x699 x370)))) (=> (and (and (<= x370 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x370 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x699 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x699 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x683 (- x699 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x370 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x699) (x369 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x370))))) (=> (and (and (<= x370 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x370)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x699) (< 0 x699))) (= (>= (x369 57896044618658097711785492504343953926634992332820282019728792003956564819968 x699) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x370)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x683 x699 (- x370 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (> x699 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x699 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x370) (< 0 x370))) (= (>= (x683 (- x699 115792089237316195423570985008687907853269984665640564039457584007913129639936) x370) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= (x369 57896044618658097711785492504343953926634992332820282019728792003956564819968 x370) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x699))))))
(define-fun x233 ((x699 Int) (x370 Int)) Bool (and (x677 x699 x370) (x208 x699 x370) (x682 x699 x370) (x700 x699 x370) (x151 x699 x370) (x279 x699 x370) (x259 x699 x370)))
(define-fun x241 ((x699 Int)) Bool (and (= (x683 x699 0) 0) (= 0 (x683 0 x699))))
(define-fun x339 ((x699 Int)) Bool (and (= (x683 1 x699) x699) (= x699 (x683 x699 1))))
(define-fun x321 ((x699 Int)) Bool (and (x241 x699) (x339 x699)))
(define-fun x394 ((x699 Int)) Bool (and (= (x719 115792089237316195423570985008687907853269984665640564039457584007913129639935 x699) x699) (= x699 (x719 x699 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x375 ((x699 Int)) Bool (and (= 0 (x719 0 x699)) (= (x719 x699 0) 0)))
(define-fun x42 ((x699 Int)) Bool (= x699 (x719 x699 x699)))
(define-fun x679 ((x699 Int)) Bool (and (x375 x699) (x394 x699) (x42 x699)))
(define-fun x501 ((x699 Int) (x370 Int)) Bool (= (x719 x699 x370) (x719 x370 x699)))
(define-fun x304 ((x699 Int) (x370 Int)) Bool (and (>= (x719 x699 x370) 0) (=> (>= x370 0) (>= x370 (x719 x699 x370))) (=> (>= x699 0) (>= x699 (x719 x699 x370)))))
(define-fun x685 ((x699 Int) (x370 Int)) Bool (and (x501 x699 x370) (x304 x699 x370)))
(define-fun x21 ((x699 Int)) Bool (= (x257 x699 1461501637330902918203684832716283019655932542976) (x719 x699 1461501637330902918203684832716283019655932542975)))
(define-fun x670 ((x699 Int)) Bool (and (x685 x699 1461501637330902918203684832716283019655932542975) (x21 x699)))
(define-fun x288 ((x699 Int) (x370 Int)) Bool (and (<= 0 (x257 x699 x370)) (< (x257 x699 x370) x370)))
(define-fun x473 ((x699 Int) (x370 Int)) Bool (=> (and (>= x699 0) (> x370 0)) (= (= x699 (x257 x699 x370)) (> x370 x699))))
(define-fun x440 ((x699 Int) (x370 Int)) Bool (=> (and (and (<= x370 x699) (< x699 (+ x370 x370))) (> x370 0)) (= (x257 x699 x370) (- x699 x370))))
(define-fun x703 ((x699 Int)) Bool (= (x257 0 x699) 0))
(define-fun x111 ((x699 Int)) Bool (= (x257 x699 1) 0))
(define-fun x112 ((x699 Int)) Bool (= (x257 x699 x699) 0))
(define-fun x605 ((x699 Int)) Bool (and (x111 x699) (x112 x699) (x703 x699)))
(define-fun x559 ((x699 Int)) Bool (= (x257 x699 340282366920938463463374607431768211456) (x719 x699 340282366920938463463374607431768211455)))
(define-fun x650 ((x699 Int)) Bool (and (x559 x699) (x685 x699 340282366920938463463374607431768211455)))
(define-fun x93 ((x6 Int)) Int (ite (= 128 x6) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x393 x6)))
(define-fun x254 ((x6 Int)) Int (ite (= 132 x6) x425 (x93 x6)))
(define-fun x119 ((x6 Int)) Int (ite (= 128 x6) x69 (x254 x6)))
(define-fun x113 ((x6 Int)) Int (ite (= x6 128) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x283 x6)))
(define-fun x698 ((x6 Int)) Int (ite (= 132 x6) x425 (x113 x6)))
(define-fun x629 ((x6 Int)) Int (ite (= x6 128) x69 (x698 x6)))
(define-fun x556 ((x6 Int)) Int (ite (= 128 x6) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x351 x6)))
(define-fun x213 ((x6 Int)) Int (ite (= 132 x6) x425 (x556 x6)))
(define-fun x577 ((x6 Int)) Int (ite (= 128 x6) x69 (x213 x6)))
(define-fun x504 ((x6 Int)) Int (ite (= x6 128) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x486 x6)))
(define-fun x144 ((x6 Int)) Int (ite (= x6 132) x425 (x504 x6)))
(define-fun x527 ((x6 Int)) Int (ite (= 128 x6) x69 (x144 x6)))
(define-fun x223 ((x6 Int)) Int (ite (= x6 128) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x705 x6)))
(define-fun x35 ((x6 Int)) Int (ite (= 132 x6) x425 (x223 x6)))
(define-fun x635 ((x6 Int)) Int (ite (= x6 128) x69 (x35 x6)))
(define-fun x493 ((x6 x372)) Int (ite (= x6 x676) x53 (x263 x6)))
(define-fun x459 ((x6 x372)) Int (ite (= x6 x657) x518 (x493 x6)))
(define-fun x681 ((x6 Int)) Int (ite (= 160 x6) 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x635 x6)))
(define-fun x430 ((x6 Int)) Int (ite (= 164 x6) x643 (x681 x6)))
(define-fun x615 ((x6 Int)) Int (ite (= x6 196) x429 (x430 x6)))
(define-fun x678 ((x6 Int)) Int (ite (= 228 x6) x149 (x615 x6)))
(define-fun x275 ((x6 Int)) Int (ite (= 160 x6) 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x678 x6)))
(define-fun x332 ((x6 Int)) Int (ite (= x6 164) x691 (x275 x6)))
(define-fun x211 ((x6 Int)) Int (ite (= x6 196) x429 (x332 x6)))
(define-fun x417 ((x6 Int)) Int (ite (= x6 228) x154 (x211 x6)))
(define-fun x43 ((x6 Int)) Int (ite x92 (x635 x6) (ite x314 (x678 x6) (x417 x6))))
(define-fun x24 ((x6 Int)) Int (ite (= x6 160) x537 (x43 x6)))
(define-fun x153 ((x6 Int)) Int (ite (= x6 160) 96761774277087264896447800937287851747744109681099051503132604413955201302528 (x24 x6)))
(define-fun x181 ((x6 Int)) Int (ite (= x6 164) x425 (x153 x6)))
(define-fun x655 ((x6 Int)) Int (ite (= x6 196) x443 (x181 x6)))
(define-fun x636 ((x6 Int)) Int (ite (= x6 228) x691 (x655 x6)))
(define-fun x495 ((x6 Int)) Int (ite (= 260 x6) x380 (x636 x6)))
(define-fun x497 ((x6 Int)) Int (ite (= x6 292) x413 (x495 x6)))
(define-fun x106 ((x6 Int)) Int (ite (= 324 x6) x187 (x497 x6)))
(define-fun x239 ((x6 Int)) Int (ite (and (< x6 (+ 160 0)) (<= 160 x6)) (x548 (+ (- x6 160) 0)) (x106 x6)))
(define-fun x347 ((x6 Int)) Int (ite (= x6 160) x380 (x239 x6)))
(define-fun x395 ((x6 Int)) Int (ite (= x6 192) x444 (x347 x6)))
(define-fun x222 ((x6 Int)) Int (ite (= 160 x6) (ite true 1 0) (x395 x6)))
(define-fun x447 ((x6 Int)) Int (ite (= x6 128) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x16 x6)))
(define-fun x416 ((x6 Int)) Int (ite (= 132 x6) x425 (x447 x6)))
(define-fun x530 ((x6 Int)) Int (ite (= 128 x6) x69 (x416 x6)))
(define-fun x467 ((x6 x372)) Int (ite (= x6 x326) x319 (x459 x6)))
(define-fun x33 ((x6 x372)) Int (ite (= x6 x391) x328 (x467 x6)))
(define-fun x673 ((x6 Int)) Int (ite (= 160 x6) 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x530 x6)))
(define-fun x463 ((x6 Int)) Int (ite (= x6 164) x569 (x673 x6)))
(define-fun x707 ((x6 Int)) Int (ite (= 196 x6) x429 (x463 x6)))
(define-fun x675 ((x6 Int)) Int (ite (= 228 x6) x653 (x707 x6)))
(define-fun x374 ((x6 Int)) Int (ite (= 160 x6) 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x675 x6)))
(define-fun x483 ((x6 Int)) Int (ite (= x6 164) x551 (x374 x6)))
(define-fun x431 ((x6 Int)) Int (ite (= 196 x6) x429 (x483 x6)))
(define-fun x242 ((x6 Int)) Int (ite (= x6 228) x386 (x431 x6)))
(define-fun x284 ((x6 Int)) Int (ite x424 (x530 x6) (ite x557 (x675 x6) (x242 x6))))
(define-fun x508 ((x6 Int)) Int (ite (= 160 x6) x39 (x284 x6)))
(define-fun x549 ((x6 Int)) Int (ite (= 160 x6) 96761774277087264896447800937287851747744109681099051503132604413955201302528 (x508 x6)))
(define-fun x150 ((x6 Int)) Int (ite (= 164 x6) x425 (x549 x6)))
(define-fun x562 ((x6 Int)) Int (ite (= 196 x6) x331 (x150 x6)))
(define-fun x454 ((x6 Int)) Int (ite (= x6 228) x551 (x562 x6)))
(define-fun x519 ((x6 Int)) Int (ite (= 260 x6) x323 (x454 x6)))
(define-fun x312 ((x6 Int)) Int (ite (= 292 x6) x64 (x519 x6)))
(define-fun x623 ((x6 Int)) Int (ite (= x6 324) x410 (x312 x6)))
(define-fun x265 ((x6 Int)) Int (ite (and (< x6 (+ 160 0)) (>= x6 160)) (x523 (+ 0 (- x6 160))) (x623 x6)))
(define-fun x115 ((x6 Int)) Int (ite (= x6 160) x323 (x265 x6)))
(define-fun x302 ((x6 Int)) Int (ite (= x6 192) x324 (x115 x6)))
(define-fun x9 ((x6 Int)) Int (ite (= x6 160) (ite true 1 0) (x302 x6)))
(define-fun x271 ((x6 Int)) Int (ite (= x6 128) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x622 x6)))
(define-fun x352 ((x6 Int)) Int (ite (= 132 x6) x425 (x271 x6)))
(define-fun x642 ((x6 Int)) Int (ite (= x6 128) x69 (x352 x6)))
(define-fun x124 ((x6 Int)) Int (ite (= 128 x6) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x137 x6)))
(define-fun x100 ((x6 Int)) Int (ite (= 132 x6) x425 (x124 x6)))
(define-fun x491 ((x6 Int)) Int (ite (= 128 x6) x69 (x100 x6)))
(define-fun x690 ((x6 Int)) Int (ite (= 128 x6) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x376 x6)))
(define-fun x205 ((x6 Int)) Int (ite (= 132 x6) x425 (x690 x6)))
(define-fun x116 ((x6 Int)) Int (ite (= 128 x6) x69 (x205 x6)))
(define-fun x665 ((x6 x372)) Int (ite (= x6 x250) x704 (x33 x6)))
(define-fun x596 ((x6 x372)) Int (ite (= x709 x6) x46 (x665 x6)))
(define-fun x190 ((x6 Int)) Int (ite (= x6 160) 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x116 x6)))
(define-fun x402 ((x6 Int)) Int (ite (= 164 x6) x191 (x190 x6)))
(define-fun x193 ((x6 Int)) Int (ite (= x6 196) x429 (x402 x6)))
(define-fun x547 ((x6 Int)) Int (ite (= x6 228) x207 (x193 x6)))
(define-fun x40 ((x6 Int)) Int (ite (= 160 x6) 22402283082756182618670880521465619040657731284550890770856599233457073160192 (x547 x6)))
(define-fun x56 ((x6 Int)) Int (ite (= 164 x6) x398 (x40 x6)))
(define-fun x427 ((x6 Int)) Int (ite (= 196 x6) x429 (x56 x6)))
(define-fun x214 ((x6 Int)) Int (ite (= 228 x6) x96 (x427 x6)))
(define-fun x269 ((x6 Int)) Int (ite x599 (x116 x6) (ite x238 (x547 x6) (x214 x6))))
(define-fun x388 ((x6 Int)) Int (ite (= x6 160) x180 (x269 x6)))
(define-fun x546 ((x6 Int)) Int (ite (= 160 x6) 96761774277087264896447800937287851747744109681099051503132604413955201302528 (x388 x6)))
(define-fun x606 ((x6 Int)) Int (ite (= 164 x6) x425 (x546 x6)))
(define-fun x614 ((x6 Int)) Int (ite (= 196 x6) x44 (x606 x6)))
(define-fun x571 ((x6 Int)) Int (ite (= 228 x6) x398 (x614 x6)))
(define-fun x203 ((x6 Int)) Int (ite (= 260 x6) x512 (x571 x6)))
(define-fun x20 ((x6 Int)) Int (ite (= 292 x6) x521 (x203 x6)))
(define-fun x128 ((x6 Int)) Int (ite (= 324 x6) x345 (x20 x6)))
(define-fun x396 ((x6 Int)) Int (ite (and (> (+ 160 0) x6) (<= 160 x6)) (x411 (+ 0 (- x6 160))) (x128 x6)))
(define-fun x405 ((x6 Int)) Int (ite (= x6 160) x512 (x396 x6)))
(define-fun x276 ((x6 Int)) Int (ite (= 192 x6) x26 (x405 x6)))
(define-fun x306 ((x6 Int)) Int (ite (= x6 160) (ite true 1 0) (x276 x6)))
(define-fun x147 ((x6 Int)) Int (ite (= x6 128) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x13 x6)))
(define-fun x579 ((x6 Int)) Int (ite (= 132 x6) x425 (x147 x6)))
(define-fun x268 ((x6 Int)) Int (ite (= 128 x6) x69 (x579 x6)))
(define-fun x649 ((x6 Int)) Int (ite (= x6 128) 94699471215667416670508682402181198833950827816622411988269365108481485438976 (x437 x6)))
(define-fun x610 ((x6 Int)) Int (ite (= x6 132) x425 (x649 x6)))
(define-fun x384 ((x6 Int)) Int (ite (= x6 128) x69 (x610 x6)))
(define-fun x287 ((x699 Int) (x370 Int) (x592 Int) (x167 Int)) Bool (=> (and (<= x699 x592) (>= x699 0) (>= x370 0) (<= x370 x167)) (>= (x683 x592 x167) (x683 x699 x370))))
(define-fun x133 ((x699 Int) (x370 Int) (x592 Int) (x167 Int)) Bool (=> (= x592 x699) (= (- (x683 x699 x370) (x683 x592 x167)) (x683 x699 (- x370 x167)))))
(define-fun x718 ((x699 Int)) Bool (=> (and (not (= 826074471 x699)) (not (= x699 22402283082756182618670880521465619040657731284550890770856599233457073160192)) (not (= x699 3018967357)) (not (= x699 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 340282366920938463463374607431768211456 x699)) (not (= x699 4294967296)) (not (= x699 2113256763)) (not (= 94699471215667416670508682402181198833950827816622411988269365108481485438976 x699)) (not (= x699 500000000000000000000000000)) (not (= x699 1461501637330902918203684832716283019655932542976)) (not (= x699 1865579259)) (not (= x699 2835717307)) (not (= x699 96761774277087264896447800937287851747744109681099051503132604413955201302528)) (not (= x699 1000000000000000000000000000)) (not (= x699 115792089237316195423570985008687907853269984665640064039457584007913129639935)) (< 10000 x699) (not (= x699 1461501637330902918203684832716283019655932542975)) (not (= 1889567281 x699)) (not (= 340282366920938463463374607431768211455 x699)) (not (= x699 2757214935))) (not ((_ is x52) (x68 x699)))))
(assert (x133 x164 x634 x34 x18))
(assert (x651 x490))
(assert (x233 x51 (- x26 x671)))
(assert (x651 x692))
(assert (x651 x535))
(assert (x321 (- x51 x628)))
(assert (x651 x22))
(assert (x287 x26 x51 x580 x671))
(assert (x133 x330 x324 x628 x176))
(assert (x233 x465 (- x639 x666)))
(assert (x133 x412 x58 x330 x324))
(assert (x133 x18 x34 x639 x465))
(assert (x651 x204))
(assert (x133 x639 x465 x324 x90))
(assert (x233 x171 (- x26 x164)))
(assert (x321 (- x330 x639)))
(assert (x321 x171))
(assert (x133 x324 x330 x26 x171))
(assert (x133 x51 x26 x580 x671))
(assert (x321 (- x18 x176)))
(assert (x321 (- x90 x34)))
(assert (x321 (- x171 x444)))
(assert (x651 x689))
(assert (x133 x90 x324 x58 x412))
(assert (x651 x41))
(assert (x133 x628 x176 x171 x26))
(assert (x321 (- x34 x634)))
(assert (x321 x305))
(assert (x321 (- x176 x634)))
(assert (x321 (- x90 x671)))
(assert (x233 x330 (- x324 x58)))
(assert (x321 (- x305 x580)))
(assert (x233 x305 (- x565 x628)))
(assert (x321 (- x164 x444)))
(assert (x646 x60 x324))
(assert (x133 x654 x444 x90 x324))
(assert (x321 (- x580 x51)))
(assert (x233 x634 (- x164 x58)))
(assert (x233 x330 (- x324 x51)))
(assert (x651 x299))
(assert (x321 x671))
(assert (x321 (- x324 x412)))
(assert (x651 x164))
(assert (x651 x162))
(assert (x233 x305 (- x565 x580)))
(assert (x718 x163))
(assert (x718 x446))
(assert (x321 x444))
(assert (x287 x51 x26 x639 x465))
(assert (x233 x671 (- x580 x305)))
(assert (x133 x26 x171 x580 x671))
(assert (x133 x565 x305 x654 x444))
(assert (x233 x26 (- x171 x330)))
(assert (x287 x324 x330 x580 x671))
(assert (x287 x171 x26 x639 x465))
(assert (x287 x26 x171 x176 x628))
(assert (x133 x305 x565 x666 x258))
(assert (x133 x176 x628 x26 x171))
(assert (x133 x58 x412 x51 x26))
(assert (x321 (- x34 x330)))
(assert (x233 x34 (- x18 x666)))
(assert (x651 x179))
(assert (x133 x324 x330 x58 x412))
(assert (x321 (- x639 x176)))
(assert (x133 x90 x324 x465 x639))
(assert (x233 x444 (- x654 x305)))
(assert (x651 x644))
(assert (=> (<= x694 10000) (= (x52 x694) (x68 x694))))
(assert (x651 x641))
(assert (=> (>= 10000 x280) (= (x68 x280) (x52 x280))))
(assert (x233 x444 (- x348 x18)))
(assert (x233 x305 (- x565 x348)))
(assert (x133 x34 x18 x639 x465))
(assert (x651 x104))
(assert (x287 x305 x565 x90 x324))
(assert (x651 x180))
(assert (x287 x26 x51 x348 x444))
(assert (x133 x666 x258 x634 x164))
(assert (x233 x348 (- x444 x90)))
(assert (x233 x58 (- x412 x634)))
(assert (x121 x270))
(assert (x321 (- x324 x580)))
(assert (x679 1461501637330902918203684832716283019655932542975))
(assert (x287 x465 x639 x176 x628))
(assert (x321 (- x654 x34)))
(assert (x133 x330 x324 x171 x26))
(assert (x321 (- x176 x639)))
(assert (x233 x26 (- x171 x580)))
(assert (x321 (- x324 x639)))
(assert (x133 x51 x26 x444 x654))
(assert (x321 (- x628 x305)))
(assert (x233 x634 (- x164 x671)))
(assert (x133 x639 x465 x176 x628))
(assert (x321 (- x258 x565)))
(assert (x133 x654 x444 x324 x330))
(assert (x651 x410))
(assert (x133 x330 x324 x176 x628))
(assert (x233 x666 (- x258 x330)))
(assert (x321 (- x324 x26)))
(assert (x233 x171 (- x26 x324)))
(assert (and (x279 1000000000000000000000000000 x512) (= (* 1000000000000000000000000000 x512) (x683 1000000000000000000000000000 x512)) (x682 1000000000000000000000000000 x512) (x677 1000000000000000000000000000 x512) (x700 1000000000000000000000000000 x512) (x151 1000000000000000000000000000 x512) (and (= (- (* 1000000000000000000000000000 x512) (* x512 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x683 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x512)) (= (x683 1000000000000000000000000000 (- x512 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x512 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000)) (= (- (* (- x512 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x512 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x683 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x512 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x233 x164 (- x634 x51)))
(assert (x651 x44))
(assert (x121 x25))
(assert (x651 x481))
(assert (x233 x324 (- x90 x164)))
(assert (x321 (- x26 x90)))
(assert (x651 x399))
(assert (x233 x634 (- x164 x176)))
(assert (x321 (- x465 x305)))
(assert (x321 (- x444 x26)))
(assert (x233 x654 (- x444 x90)))
(assert (x133 x51 x26 x176 x628))
(assert (= (x349 (x52 22402283082756182618670880521465619040657731284550890770856599233457073160192)) 22402283082756182618670880521465619040657731284550890770856599233457073160192))
(assert (x651 x704))
(assert (x718 x142))
(assert (x321 (- x666 x51)))
(assert (x233 x654 (- x444 x164)))
(assert (x287 x634 x164 x51 x26))
(assert (x718 x22))
(assert (x133 x51 x26 x412 x58))
(assert (x287 x628 x176 x565 x305))
(assert (x133 x565 x305 x324 x90))
(assert (x321 (- x444 x330)))
(assert (x233 x654 (- x444 x34)))
(assert (x133 x565 x305 x164 x634))
(assert (x233 x565 x305))
(assert (x651 x708))
(assert (x133 x176 x628 x26 x51))
(assert (x133 x348 x444 x26 x51))
(assert (x233 x330 (- x324 x444)))
(assert (x321 (- x51 x324)))
(assert (x233 x26 (- x171 x58)))
(assert (x133 x565 x305 x666 x258))
(assert (x133 x324 x330 x444 x654))
(assert (x233 x671 (- x580 x164)))
(assert (x133 x176 x628 x324 x90))
(assert (x133 x164 x634 x412 x58))
(assert (x321 (- x324 x258)))
(assert (x651 x200))
(assert (x321 (- x330 x580)))
(assert (x287 x465 x639 x171 x26))
(assert (x121 x34))
(assert (x321 (- x34 x164)))
(assert (x287 x305 x565 x580 x671))
(assert (x133 x580 x671 x324 x90))
(assert (x321 (- x580 x164)))
(assert (x133 x654 x444 x171 x26))
(assert (x133 x330 x324 x26 x51))
(assert (x121 x324))
(assert (x321 (- x164 x34)))
(assert (x233 x90 (- x324 x671)))
(assert (x321 x465))
(assert (x287 x18 x34 x330 x324))
(assert (x233 x34 (- x18 x412)))
(assert (x287 x90 x324 x666 x258))
(assert (x321 (- x628 x90)))
(assert (x651 x10))
(assert (x287 x34 x18 x412 x58))
(assert (x321 (- x330 x634)))
(assert (x133 x26 x51 x412 x58))
(assert (x651 x367))
(assert (x233 x639 (- x465 x324)))
(assert (= (x349 (x68 x280)) x280))
(assert (x233 x90 (- x324 x58)))
(assert (x321 (- x176 x90)))
(assert (x287 x164 x634 x51 x26))
(assert (x651 x489))
(assert (x605 x300))
(assert (x133 x26 x51 x330 x324))
(assert (x133 x330 x324 x580 x671))
(assert (x321 (- x444 x18)))
(assert (x321 (- x580 x90)))
(assert (x321 (- x176 x324)))
(assert (= (and x108 x526) x314))
(assert (x287 x258 x666 x51 x26))
(assert (x233 x164 (- x634 x324)))
(assert (x133 x444 x654 x465 x639))
(assert (x233 x348 (- x444 x634)))
(assert (=> (>= 10000 x118) (= (x68 x118) (x52 x118))))
(assert (x287 x324 x90 x51 x26))
(assert (x651 x184))
(assert (x233 x324 (- x90 x258)))
(assert (x133 x26 x171 x176 x628))
(assert (x233 x628 (- x176 x164)))
(assert (x651 x514))
(assert (x287 x444 x348 x18 x34))
(assert (x133 x671 x580 x164 x634))
(assert (x133 x164 x634 x26 x51))
(assert (x133 x348 x444 x330 x324))
(assert (x233 x164 (- x634 x628)))
(assert (x650 x129))
(assert (x133 x171 x26 x412 x58))
(assert (x287 x444 x348 x90 x324))
(assert (x321 (- x171 x671)))
(assert (x321 (- x639 x18)))
(assert (x321 (- x412 x324)))
(assert (x133 x305 x565 x580 x671))
(assert (x321 (- x330 x565)))
(assert (x233 x348 (- x444 x51)))
(assert (x133 x34 x18 x348 x444))
(assert (x133 x671 x580 x51 x26))
(assert (x287 x90 x324 x18 x34))
(assert (x121 1000000000000000000000000000))
(assert (x233 x654 (- x444 x324)))
(assert (x651 x342))
(assert (x287 x671 x580 x171 x26))
(assert (x133 x18 x34 x666 x258))
(assert (x321 (- x58 x634)))
(assert (x233 x634 (- x164 x666)))
(assert (x651 x246))
(assert (x233 x90 (- x324 x34)))
(assert (x321 (- x324 x628)))
(assert (x133 x171 x26 x90 x324))
(assert (x233 x176 x628))
(assert (x233 x258 (- x666 x171)))
(assert (x133 x634 x164 x171 x26))
(assert (x133 x465 x639 x324 x330))
(assert (x133 x164 x634 x324 x330))
(assert (x321 (- x330 x348)))
(assert (x233 x176 (- x628 x330)))
(assert (x651 x34))
(assert (x233 x258 (- x666 x164)))
(assert (x233 x164 (- x634 x666)))
(assert (and (x473 x201 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x201 (+ (* (x369 x201 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x257 x201 1461501637330902918203684832716283019655932542976)))) (x288 x201 1461501637330902918203684832716283019655932542976) (x440 x201 1461501637330902918203684832716283019655932542976)))
(assert (x651 x300))
(assert (x287 x26 x51 x412 x58))
(assert (x287 x51 x26 x634 x164))
(assert (x321 (- x666 x34)))
(assert (x287 x444 x348 x330 x324))
(assert (x133 x34 x18 x90 x324))
(assert (x651 x309))
(assert (x321 (- x90 x348)))
(assert (x233 x412 (- x58 x171)))
(assert (x321 (- x164 x565)))
(assert (x133 x171 x26 x324 x330))
(assert (x321 (- x51 x666)))
(assert (x321 (- x639 x58)))
(assert (x133 x628 x176 x465 x639))
(assert (x321 (- x412 x90)))
(assert (x233 x628 (- x176 x26)))
(assert (x321 (- x171 x634)))
(assert (x233 x444 (- x348 x465)))
(assert (x233 x444 (- x654 x465)))
(assert (x133 x634 x164 x58 x412))
(assert (x651 x444))
(assert (and (x279 1000000000000000000000000000 x323) (= (* 1000000000000000000000000000 x323) (x683 1000000000000000000000000000 x323)) (x682 1000000000000000000000000000 x323) (x677 1000000000000000000000000000 x323) (x700 1000000000000000000000000000 x323) (x151 1000000000000000000000000000 x323) (and (= (- (* 1000000000000000000000000000 x323) (* x323 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x683 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x323)) (= (x683 1000000000000000000000000000 (- x323 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x323 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000)) (= (- (* (- x323 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x323 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x683 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x323 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x121 x535))
(assert (x287 x258 x666 x171 x26))
(assert (x321 (- x465 x565)))
(assert (x321 x176))
(assert (x233 x412 (- x58 x565)))
(assert (x321 (- x258 x324)))
(assert (x651 x231))
(assert (x287 x34 x18 x580 x671))
(assert (x321 (- x348 x639)))
(assert (x651 x67))
(assert (x646 115792089237316195423570985008687907853269984665640064039457584007913129639935 x628))
(assert (x287 x324 x90 x348 x444))
(assert (x233 x580 (- x671 x634)))
(assert (= x122 (and x108 (not x526))))
(assert (x133 x34 x18 x654 x444))
(assert (= x694 (x349 (x68 x694))))
(assert (x233 x412 (- x58 x51)))
(assert (x133 x26 x171 x654 x444))
(assert (x233 x18 (- x34 x666)))
(assert (x133 x444 x348 x51 x26))
(assert (x233 x654 (- x444 x51)))
(assert (x233 x666 (- x258 x171)))
(assert (= (x349 (x52 115792089237316195423570985008687907853269984665640064039457584007913129639935)) 115792089237316195423570985008687907853269984665640064039457584007913129639935))
(assert (x651 x96))
(assert (x651 x421))
(assert (x321 (- x666 x639)))
(assert (x233 x639 (- x465 x305)))
(assert (x321 (- x51 x58)))
(assert (x651 x505))
(assert (x133 x639 x465 x324 x330))
(assert (x651 x540))
(assert (x133 x324 x330 x634 x164))
(assert (x233 x565 (- x305 x348)))
(assert (x233 x26 (- x51 x654)))
(assert (x233 x444 (- x348 x171)))
(assert (x233 x171 (- x26 x580)))
(assert (x651 x645))
(assert (x321 (- x26 x412)))
(assert (x321 (- x580 x330)))
(assert (x287 x171 x26 x654 x444))
(assert (x287 x465 x639 x580 x671))
(assert (x287 x176 x628 x634 x164))
(assert (x133 x580 x671 x90 x324))
(assert (x133 x330 x324 x348 x444))
(assert (x321 (- x628 x18)))
(assert (x133 x654 x444 x465 x639))
(assert (x233 x634 (- x164 x580)))
(assert (x321 (- x628 x465)))
(assert (x321 (- x324 x348)))
(assert (x133 x34 x18 x58 x412))
(assert (x133 x671 x580 x324 x90))
(assert (x133 x171 x26 x58 x412))
(assert (x651 x637))
(assert (x233 x634 (- x164 x26)))
(assert (x133 x580 x671 x465 x639))
(assert (x650 x14))
(assert (x233 x444 (- x348 x330)))
(assert (x651 x419))
(assert (x233 x330 (- x324 x171)))
(assert (= (x349 (x52 500000000000000000000000000)) 500000000000000000000000000))
(assert (x321 (- x164 x654)))
(assert (x321 (- x164 x348)))
(assert (=> (<= x57 10000) (= (x68 x57) (x52 x57))))
(assert (x287 x34 x18 x330 x324))
(assert (x651 x103))
(assert (x321 (- x634 x26)))
(assert (x646 115792089237316195423570985008687907853269984665640064039457584007913129639935 x58))
(assert (x133 x58 x412 x90 x324))
(assert (x133 x465 x639 x671 x580))
(assert (x133 x634 x164 x176 x628))
(assert (x321 (- x639 x628)))
(assert (x651 x439))
(assert (x233 x671 (- x580 x465)))
(assert (x651 x90))
(assert (x321 (- x176 x26)))
(assert (x133 x580 x671 x639 x465))
(assert (x233 x324 (- x330 x258)))
(assert (x133 x26 x171 x465 x639))
(assert (x321 (- x654 x634)))
(assert (x233 x26 (- x51 x330)))
(assert (x233 x412 x58))
(assert (x321 (- x639 x412)))
(assert (x287 x330 x324 x18 x34))
(assert (x233 x58 (- x412 x565)))
(assert (x133 x324 x90 x628 x176))
(assert (x321 (- x330 x444)))
(assert (x287 x324 x330 x565 x305))
(assert (x321 (- x654 x305)))
(assert (x670 x637))
(assert (x233 x330 (- x324 x628)))
(assert (x233 x330 (- x324 x258)))
(assert (x646 115792089237316195423570985008687907853269984665640064039457584007913129639935 x258))
(assert (x133 x639 x465 x18 x34))
(assert (x287 x324 x90 x171 x26))
(assert (x133 x324 x90 x666 x258))
(assert (x133 x565 x305 x444 x348))
(assert (and (x84 x708 1000000000000000000000000000) (x170 x708 1000000000000000000000000000) (=> (and (> x708 0) (< 0 1000000000000000000000000000)) (and (>= x708 (* (x369 x708 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x708 1000000000000000000000000000)) (- x708 1000000000000000000000000000)))) (x631 x708 1000000000000000000000000000) (x471 x708 1000000000000000000000000000)))
(assert (x233 x26 (- x171 x671)))
(assert (x133 x324 x90 x654 x444))
(assert (x651 x39))
(assert (x321 (- x18 x639)))
(assert (= (x68 340282366920938463463374607431768211456) (x52 340282366920938463463374607431768211456)))
(assert (x321 x51))
(assert (x651 x478))
(assert (x321 (- x565 x628)))
(assert (x321 (- x634 x412)))
(assert (x133 x51 x26 x58 x412))
(assert (x321 (- x305 x654)))
(assert (x651 x487))
(assert (x651 x218))
(assert (x233 x412 (- x58 x639)))
(assert (x321 (- x330 x51)))
(assert (x287 x258 x666 x565 x305))
(assert (x233 x565 (- x305 x412)))
(assert (x233 x639 (- x465 x171)))
(assert (x651 x671))
(assert (x133 x628 x176 x34 x18))
(assert (x233 x465 (- x639 x258)))
(assert (x233 x634 (- x164 x34)))
(assert (x321 (- x26 x634)))
(assert (x321 (- x565 x324)))
(assert (x233 x176 (- x628 x90)))
(assert (and (x279 3 x19) (= (* 3 x19) (x683 3 x19)) (x682 3 x19) (x677 3 x19) (x700 3 x19) (x151 3 x19) (and (= (- (* 3 x19) (* x19 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x683 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x19)) (= (x683 3 (- x19 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x19 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3)) (= (- (* (- x19 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x19 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x683 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x19 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x287 x90 x324 x654 x444))
(assert (x321 (- x330 x18)))
(assert (x133 x444 x348 x18 x34))
(assert (x651 x518))
(assert (x287 x465 x639 x654 x444))
(assert (= x166 (and (not x262) x185)))
(assert (x321 (- x465 x666)))
(assert (x287 x18 x34 x176 x628))
(assert (x321 (- x444 x51)))
(assert (= (x349 (x52 94699471215667416670508682402181198833950827816622411988269365108481485438976)) 94699471215667416670508682402181198833950827816622411988269365108481485438976))
(assert (x287 x26 x51 x639 x465))
(assert (x233 x666 (- x258 x634)))
(assert (x321 (- x639 x330)))
(assert (x233 x90 (- x324 x18)))
(assert (x233 x26 (- x171 x164)))
(assert (x233 x305 (- x565 x639)))
(assert (x233 x666 (- x258 x305)))
(assert (x321 (- x26 x164)))
(assert (x133 x671 x580 x465 x639))
(assert (x133 x465 x639 x324 x90))
(assert (x321 (- x324 x171)))
(assert (x133 x305 x565 x628 x176))
(assert (x651 x701))
(assert (x133 x634 x164 x324 x330))
(assert (x646 115792089237316195423570985008687907853269984665640064039457584007913129639935 x324))
(assert (x233 x164 (- x634 x26)))
(assert (x321 (- x444 x324)))
(assert (x133 x90 x324 x671 x580))
(assert (x287 x18 x34 x90 x324))
(assert (x133 x164 x634 x258 x666))
(assert (x321 (- x465 x671)))
(assert (x287 x26 x171 x634 x164))
(assert (x651 x178))
(assert (x651 x308))
(assert (x133 x164 x634 x628 x176))
(assert (x233 x51 (- x26 x412)))
(assert (x233 x671 (- x580 x18)))
(assert (x133 x176 x628 x171 x26))
(assert (x321 (- x58 x305)))
(assert (=> (>= 10000 x109) (= (x52 x109) (x68 x109))))
(assert (= x310 (x349 (x68 x310))))
(assert (x233 x628 (- x176 x634)))
(assert (x133 x90 x324 x444 x654))
(assert (x233 x176 (- x628 x51)))
(assert (x287 x164 x634 x580 x671))
(assert (x133 x58 x412 x164 x634))
(assert (x287 x324 x90 x176 x628))
(assert (x321 (- x634 x258)))
(assert (x133 x666 x258 x330 x324))
(assert (x321 x355))
(assert (x233 x305 (- x565 x654)))
(assert (x133 x51 x26 x465 x639))
(assert (x287 x639 x465 x412 x58))
(assert (x233 x258 (- x666 x26)))
(assert (x133 x444 x654 x90 x324))
(assert (x651 x195))
(assert (x133 x580 x671 x305 x565))
(assert (x133 x176 x628 x90 x324))
(assert (x605 340282366920938463463374607431768211456))
(assert (x133 x258 x666 x164 x634))
(assert (x718 x109))
(assert (x133 x465 x639 x26 x171))
(assert (x133 x324 x90 x58 x412))
(assert (x133 x26 x51 x580 x671))
(assert (x321 (- x348 x164)))
(assert (x321 (- x305 x90)))
(assert (x321 (- x90 x654)))
(assert (x133 x412 x58 x34 x18))
(assert (x233 x26 (- x51 x412)))
(assert (x233 x171 (- x26 x666)))
(assert (x233 x639 (- x465 x258)))
(assert (x651 x336))
(assert (x287 x18 x34 x580 x671))
(assert (x133 x171 x26 x176 x628))
(assert (x321 x348))
(assert (x321 (- x258 x305)))
(assert (x121 x612))
(assert (x233 x51 (- x26 x58)))
(assert (x287 x465 x639 x90 x324))
(assert (x133 x444 x348 x90 x324))
(assert (x121 x714))
(assert (x321 (- x348 x324)))
(assert (x287 x26 x51 x634 x164))
(assert (= (x68 1461501637330902918203684832716283019655932542976) (x52 1461501637330902918203684832716283019655932542976)))
(assert (x287 x305 x565 x348 x444))
(assert (x133 x58 x412 x26 x51))
(assert (x233 x330 (- x324 x565)))
(assert (x233 x18 (- x34 x330)))
(assert (=> (>= 10000 x452) (= (x52 x452) (x68 x452))))
(assert (x133 x639 x465 x412 x58))
(assert (x287 x26 x171 x348 x444))
(assert (x651 x173))
(assert (x651 x29))
(assert (x651 x379))
(assert (x233 x412 (- x58 x330)))
(assert (x233 x26 (- x51 x628)))
(assert (x287 x444 x348 x565 x305))
(assert (x233 x565 (- x305 x176)))
(assert (x321 (- x90 x58)))
(assert (x287 x634 x164 x171 x26))
(assert (x133 x324 x330 x176 x628))
(assert (and (x84 x25 1000000000000000000000000000) (x170 x25 1000000000000000000000000000) (=> (and (> x25 0) (< 0 1000000000000000000000000000)) (and (>= x25 (* (x369 x25 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x25 1000000000000000000000000000)) (- x25 1000000000000000000000000000)))) (x631 x25 1000000000000000000000000000) (x471 x25 1000000000000000000000000000)))
(assert (x233 x465 (- x639 x330)))
(assert (x233 x324 (- x330 x628)))
(assert (x651 x688))
(assert (x287 x330 x324 x654 x444))
(assert (x133 x26 x51 x465 x639))
(assert (x233 x565 (- x305 x444)))
(assert (= (=> (and (and (< x330 340282366920938463463374607431768211456) (>= 340282366920938463463374607431768211455 x330) (= x668 x39) x329 (> x195 0) (>= x289 0) (<= x421 1461501637330902918203684832716283019655932542975) (= (x717 (x683 x330 x324)) x49) x414 (= x177 x551) (= x330 (x459 x664)) (= (ite x528 1 0) x626) (= x618 (x566 (x68 x551) (x52 52) 0)) (= 0 x633) (= (x566 (x68 x533) (x52 52) 0) x664) (< x425 1461501637330902918203684832716283019655932542976) (<= 0 x90) (= (= x1 x553) x329) (= x195 (ite x455 1 0)) (<= 0 x91) (< 0 x710) (= x41 x336) (= x414 (= x243 x560)) (= x251 (+ x328 x560)) (not (> x39 x653)) (= (x719 1461501637330902918203684832716283019655932542975 x637) x533) (= x688 (x467 x391)) (not (> x323 340282366920938463463374607431768211455)) (= (= x694 0) x517) (= (x369 x60 x324) x39) (= (not x4) x76) (= (x459 x296) x653) (> 3018967357 x358) (= x41 x91) (>= 1461501637330902918203684832716283019655932542975 x551) (= x358 2835717307) (not (> 2757214935 x358)) (= (or x226 x298) x408) (>= x386 0) (< x386 340282366920938463463374607431768211456) (= x587 (x717 (x683 x90 x324))) (= x228 (< x237 x323)) (= x386 (x467 x148)) (= x625 (+ x286 x319)) (= (not x582) x311) (<= 0 x653) (not (< 340282366920938463463374607431768211455 x39)) (= (x459 x618) x90) (= (x566 (x68 x551) (x52 52) 0) x391) (= x528 (or x389 x76)) (= x574 (x598 (+ x49 500000000000000000000000000))) (= (ite x408 1 0) x710) (>= 340282366920938463463374607431768211455 x90) (> 340282366920938463463374607431768211456 x653) (= x243 (- x625 x289)) (= (x369 x224 1000000000000000000000000000) x237) (= (x369 x641 1000000000000000000000000000) x410) (= x156 1) (= (x530 128) x324) (= x711 x633) (not (< x358 2113256763)) (= x1 (- x251 x688)) (>= 340282366920938463463374607431768211455 x688) (= x5 (x630 (- x653 x39))) (= x323 x383) (= x455 (or x311 x438)) (> 1461501637330902918203684832716283019655932542976 x694) (<= 0 x688) (= (+ x359 x668) x328) (= x224 (x630 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x365))) (= x289 (x459 x326)) (= x226 (not x715)) (< x90 340282366920938463463374607431768211456) (<= 0 x340) (>= 340282366920938463463374607431768211455 x386) (= (< x81 x90) x582) (< (+ x39 x386) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (= 0 x324) x298) (= (= x324 0) x389) (>= 1461501637330902918203684832716283019655932542975 x340) (= (x566 (x68 x456) (x52 52) 0) x326) (= (x369 x324 2) x365) (<= x328 340282366920938463463374607431768211455) (= x575 (x360 (x68 x452))) (not (= 2757214935 x358)) (> x575 0) (= x64 (x369 x574 1000000000000000000000000000)) (<= x653 340282366920938463463374607431768211455) (= (x719 1461501637330902918203684832716283019655932542975 x637) x456) (= (x719 1461501637330902918203684832716283019655932542975 x637) x163) (>= 1461501637330902918203684832716283019655932542975 x425) (>= 1461501637330902918203684832716283019655932542975 x91) (= (= 0 x324) x438) (>= 340282366920938463463374607431768211455 x289) (<= 0 x330) (= x637 x340) (>= x425 0) (>= 1461501637330902918203684832716283019655932542975 x694) (= x148 (x566 (x68 x551) (x52 52) 0)) (>= x421 0) (= x319 (x719 340282366920938463463374607431768211455 x5)) (= x641 (x598 (+ x587 500000000000000000000000000))) (= (x369 115792089237316195423570985008687907853269984665640064039457584007913129639935 x324) x81) (= x60 (x598 (+ x342 x97))) (= x626 0) (= (x369 115792089237316195423570985008687907853269984665640064039457584007913129639935 x324) x247) (= x386 x359) (= (x369 x324 2) x342) (<= 0 x694) (= (not x228) x4) (= x715 (< x247 x330)) (= (x717 (* 1000000000000000000000000000 x323)) x97) (= x296 (x566 (x68 x163) (x52 52) 0))) (and (< x489 4294967296) (= x567 (x222 160)) (not (= 0 x327)) (= x327 (x360 (x68 x240))) (= x443 (x719 1461501637330902918203684832716283019655932542975 x637)) (= x240 (x719 1461501637330902918203684832716283019655932542975 x300)))) (and (=> x517 x442) (=> (and (not x517) (and (and (= x569 (x719 1461501637330902918203684832716283019655932542975 x637)) (= (x360 (x68 x694)) x197) (= x295 (x719 1461501637330902918203684832716283019655932542975 x637)) (>= x429 0) (= x262 (= x551 x295)) (<= x429 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x197 0))) (or (and (not x262) (and (not (= x540 0)) (= x540 (x360 (x68 x694))))) x262))) x290))) x588))
(assert (x133 x324 x330 x305 x565))
(assert (x133 x258 x666 x26 x51))
(assert (= x588 x378))
(assert (x233 x639 (- x465 x565)))
(assert (x287 x324 x330 x634 x164))
(assert (x233 x26 (- x51 x324)))
(assert (= (x68 2113256763) (x52 2113256763)))
(assert (x133 x26 x51 x639 x465))
(assert (x233 x639 (- x465 x51)))
(assert (x233 x580 (- x671 x171)))
(assert (x133 x26 x171 x412 x58))
(assert (x133 x26 x171 x164 x634))
(assert (x651 x17))
(assert (x321 (- x348 x634)))
(assert (= x672 (or x599 x89)))
(assert (x651 x12))
(assert (x321 (- x18 x654)))
(assert (x321 (- x412 x639)))
(assert (x233 x58 (- x412 x26)))
(assert (x321 (- x634 x90)))
(assert (x133 x666 x258 x639 x465))
(assert (x233 x305 (- x565 x666)))
(assert (x321 (- x465 x654)))
(assert (= (x52 22402283082756182618670880521465619040657731284550890770856599233457073160192) (x68 22402283082756182618670880521465619040657731284550890770856599233457073160192)))
(assert (x133 x324 x330 x444 x348))
(assert (x133 x26 x51 x90 x324))
(assert (x133 x58 x412 x324 x90))
(assert (= (=> (and (and (> 4294967296 x516) (not (= 0 x186)) (= (x719 1461501637330902918203684832716283019655932542975 x201) x44) (= (x719 1461501637330902918203684832716283019655932542975 x300) x280) (= x218 (x306 160)) (= x186 (x360 (x68 x280)))) (and (and (= (x596 x511) x634) (<= x634 340282366920938463463374607431768211455) (<= x179 1461501637330902918203684832716283019655932542975) (= (> x634 x316) x449) (< 0 x334) (= x708 (x598 (+ x697 500000000000000000000000000))) (= (x717 (x683 x634 x164)) x697) (> 1461501637330902918203684832716283019655932542976 x425) (> 340282366920938463463374607431768211456 x634) (= x510 (not x449)) (not (> 1865579259 x597)) (= x36 (or x607 x510)) (= 1889567281 x597) (= (x566 (x68 x179) (x52 52) 0) x511) (= x63 x179) (= x607 (= x164 0)) (< 0 x460) (= x164 (x268 128)) (<= x425 1461501637330902918203684832716283019655932542975) (= (x369 x708 1000000000000000000000000000) x79) (<= 0 x425) (not (> 826074471 x597)) (not (= x597 1865579259)) (>= x634 0) (= x460 (x360 (x68 x452))) (= x79 x406) (> 2113256763 x597) (= x316 (x369 115792089237316195423570985008687907853269984665640064039457584007913129639935 x164)) (= x334 (ite x36 1 0))) (and (and (= x462 (x360 (x68 x452))) (= x563 (x369 115792089237316195423570985008687907853269984665640064039457584007913129639935 x465)) (not (= 1865579259 x204)) (= x403 (or x219 x550)) (= (ite x403 1 0) x17) (= (not x145) x219) (>= 1461501637330902918203684832716283019655932542975 x515) (< x204 2113256763) (= (x566 (x68 x515) (x52 52) 0) x134) (= x515 x541) (<= x639 340282366920938463463374607431768211455) (<= 0 x425) (= (x598 (+ 500000000000000000000000000 x278)) x535) (= x624 (x369 x535 1000000000000000000000000000)) (<= x425 1461501637330902918203684832716283019655932542975) (not (> 1865579259 x204)) (= x204 1889567281) (= x145 (> x639 x563)) (<= 0 x639) (= x278 (x717 (x683 x639 x465))) (= x406 x387) (< x639 340282366920938463463374607431768211456) (not (> 826074471 x204)) (= (= 0 x465) x550) (= (x384 128) x465) (= x684 x624) (= x639 (x596 x134)) (> x462 0) (> 1461501637330902918203684832716283019655932542976 x425) (< 0 x17)) (and (= x695 x638) (= (<= x168 x192) x390) (= x210 3) (= x80 (+ x441 x373)) (= (* x640 3) x130) (= (>= x80 x695) x436) (= (+ x485 x660) x255) (= x45 x114) (= x660 (* x355 3)) (= x441 x114) (= (and x583 x436) x194) (= (>= x255 x45) x583) (= x680 x355) (= (and x621 x390) x613) (= (* 3 x19) x450) (= x19 x680) (= x192 (+ x645 x450)) (= x485 x638) (= x656 x645) (= x423 x387) (= x552 3) (= x114 x684) (= 3 x453) (= x371 (+ x130 x423)) (= x373 (* x32 3)) (= 3 x658) (= x656 x277) (= x640 x680) (= x680 x32) (= x37 (and x194 x613)) (= x168 x387) (= x621 (<= x277 x371)))))) x37) x362))
(assert (x321 (- x171 x465)))
(assert (x133 x324 x330 x628 x176))
(assert (x133 x58 x412 x18 x34))
(assert (x321 (- x90 x639)))
(assert (= (x349 (x52 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x287 x465 x639 x18 x34))
(assert (x133 x164 x634 x18 x34))
(assert (x287 x18 x34 x666 x258))
(assert (x233 x348 x444))
(assert (x233 x26 (- x171 x176)))
(assert (x287 x58 x412 x565 x305))
(assert (x651 x658))
(assert (x651 x580))
(assert (x651 x552))
(assert (x651 x320))
(assert (x133 x18 x34 x330 x324))
(assert (x287 x51 x26 x348 x444))
(assert (x133 x26 x51 x666 x258))
(assert (x651 x171))
(assert (x321 (- x654 x565)))
(assert (x321 (- x176 x171)))
(assert (x651 x353))
(assert (x233 x444 (- x654 x26)))
(assert (x287 x465 x639 x412 x58))
(assert (x133 x176 x628 x164 x634))
(assert (= x179 (x349 (x68 x179))))
(assert (x233 x654 (- x444 x330)))
(assert (x321 (- x639 x90)))
(assert (x233 x26 (- x171 x654)))
(assert (x321 (- x666 x164)))
(assert (x287 x671 x580 x634 x164))
(assert (x233 x639 (- x465 x176)))
(assert (x133 x90 x324 x305 x565))
(assert (x121 x594))
(assert (x651 x558))
(assert (x233 x580 (- x671 x565)))
(assert (not x202))
(assert (x718 x496))
(assert (x651 x647))
(assert (x321 (- x634 x18)))
(assert (x287 x18 x34 x348 x444))
(assert (and (x473 x5 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= x5 (+ (* (x369 x5 340282366920938463463374607431768211456) 340282366920938463463374607431768211456) (x257 x5 340282366920938463463374607431768211456)))) (x288 x5 340282366920938463463374607431768211456) (x440 x5 340282366920938463463374607431768211456)))
(assert (x133 x565 x305 x348 x444))
(assert (x321 (- x412 x171)))
(assert (x321 (- x639 x666)))
(assert (x233 x51 (- x26 x90)))
(assert (x670 x201))
(assert (x133 x639 x465 x444 x654))
(assert (x133 x348 x444 x171 x26))
(assert (x133 x639 x465 x26 x171))
(assert (x287 x171 x26 x330 x324))
(assert (x233 x465 (- x639 x176)))
(assert (x321 (- x34 x90)))
(assert (x233 x639 (- x465 x666)))
(assert (x321 (- x639 x565)))
(assert (x133 x26 x171 x58 x412))
(assert (x133 x164 x634 x330 x324))
(assert (x651 x565))
(assert (x133 x330 x324 x444 x348))
(assert (x321 (- x305 x164)))
(assert (x133 x324 x90 x412 x58))
(assert (x233 x330 (- x324 x18)))
(assert (x133 x565 x305 x628 x176))
(assert (x651 x435))
(assert (x233 x18 (- x34 x324)))
(assert (x233 x444 (- x654 x565)))
(assert (x233 x324 (- x90 x176)))
(assert (x133 x18 x34 x628 x176))
(assert (x651 x154))
(assert (x133 x628 x176 x26 x171))
(assert (x651 x136))
(assert (x651 x687))
(assert (x321 (- x176 x305)))
(assert (x233 x18 (- x34 x634)))
(assert (x121 x139))
(assert (x121 x60))
(assert (=> (<= x310 10000) (= (x68 x310) (x52 x310))))
(assert (x321 (- x444 x171)))
(assert (x321 (- x639 x26)))
(assert (= (x68 340282366920938463463374607431768211455) (x52 340282366920938463463374607431768211455)))
(assert (x133 x26 x51 x164 x634))
(assert (x321 (- x18 x58)))
(assert (x651 x500))
(assert (x233 x639 (- x465 x444)))
(assert (x233 x628 (- x176 x18)))
(assert (x133 x26 x51 x671 x580))
(assert (x321 (- x51 x634)))
(assert (x133 x465 x639 x580 x671))
(assert (x287 x26 x171 x330 x324))
(assert (x321 (- x465 x18)))
(assert (x651 x633))
(assert (x133 x176 x628 x465 x639))
(assert (x321 (- x671 x26)))
(assert (x233 x324 (- x90 x171)))
(assert (x233 x164 (- x634 x654)))
(assert (x133 x634 x164 x18 x34))
(assert (x287 x671 x580 x90 x324))
(assert (x133 x565 x305 x324 x330))
(assert (x321 (- x465 x171)))
(assert (x287 x90 x324 x171 x26))
(assert (x321 (- x671 x51)))
(assert (x133 x666 x258 x34 x18))
(assert (= x446 (x349 (x68 x446))))
(assert (x321 (- x176 x565)))
(assert (x679 x5))
(assert (x133 x164 x634 x90 x324))
(assert (x133 x671 x580 x90 x324))
(assert (x651 x322))
(assert (x287 x465 x639 x565 x305))
(assert (x233 x444 (- x654 x634)))
(assert (x321 (- x671 x171)))
(assert (x321 (- x258 x330)))
(assert (x233 x58 (- x412 x171)))
(assert (x233 x444 (- x654 x51)))
(assert (x233 x465 (- x639 x90)))
(assert (x133 x305 x565 x176 x628))
(assert (x133 x639 x465 x34 x18))
(assert (x233 x628 (- x176 x324)))
(assert (x321 (- x58 x51)))
(assert (x233 x176 (- x628 x164)))
(assert (x651 x356))
(assert (x651 x110))
(assert (x651 x330))
(assert (x287 x171 x26 x412 x58))
(assert (x133 x666 x258 x18 x34))
(assert (x321 (- x26 x324)))
(assert (x321 (- x330 x164)))
(assert (x287 x58 x412 x639 x465))
(assert (and (x84 x335 1000000000000000000000000000) (x170 x335 1000000000000000000000000000) (=> (and (> x335 0) (< 0 1000000000000000000000000000)) (and (>= x335 (* (x369 x335 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x335 1000000000000000000000000000)) (- x335 1000000000000000000000000000)))) (x631 x335 1000000000000000000000000000) (x471 x335 1000000000000000000000000000)))
(assert (x133 x580 x671 x18 x34))
(assert (x133 x26 x171 x348 x444))
(assert (x133 x18 x34 x580 x671))
(assert (x133 x305 x565 x444 x654))
(assert (x233 x634 (- x164 x51)))
(assert (x321 (- x171 x176)))
(assert (x651 x693))
(assert (x321 (- x51 x90)))
(assert (x233 x330 (- x324 x348)))
(assert (x321 (- x18 x412)))
(assert (x651 x380))
(assert (x133 x90 x324 x51 x26))
(assert (x133 x671 x580 x305 x565))
(assert (x233 x465 (- x639 x348)))
(assert (x133 x671 x580 x171 x26))
(assert (x321 (- x305 x639)))
(assert (x133 x634 x164 x671 x580))
(assert (x233 x465 (- x639 x565)))
(assert (x133 x258 x666 x18 x34))
(assert (x651 x423))
(assert (x651 x656))
(assert (x287 x34 x18 x666 x258))
(assert (x233 x305 (- x565 x330)))
(assert (x133 x444 x348 x34 x18))
(assert (x133 x330 x324 x26 x171))
(assert (x233 x565 (- x305 x634)))
(assert (=> (<= x398 10000) (= (x68 x398) (x52 x398))))
(assert (x133 x324 x90 x51 x26))
(assert (x121 x628))
(assert (x233 x176 (- x628 x34)))
(assert (x133 x639 x465 x654 x444))
(assert (x651 x207))
(assert (x651 x79))
(assert (x321 x26))
(assert (x287 x164 x634 x330 x324))
(assert (x133 x305 x565 x164 x634))
(assert (x287 x348 x444 x171 x26))
(assert (x651 x60))
(assert (x321 (- x18 x90)))
(assert (x651 x624))
(assert (x321 (- x18 x330)))
(assert (x133 x171 x26 x444 x654))
(assert (x321 (- x348 x18)))
(assert (x133 x18 x34 x444 x348))
(assert (x321 (- x565 x666)))
(assert (x321 (- x666 x171)))
(assert (x233 x324 (- x90 x634)))
(assert (x651 x78))
(assert (x651 x55))
(assert (x651 x460))
(assert (x133 x34 x18 x465 x639))
(assert (x233 x18 (- x34 x90)))
(assert (x133 x18 x34 x634 x164))
(assert (x651 x494))
(assert (x651 x64))
(assert (x321 (- x164 x26)))
(assert (x718 x452))
(assert (x233 x639 (- x465 x580)))
(assert (x651 x354))
(assert (x233 x305 (- x565 x671)))
(assert (x233 x58 (- x412 x305)))
(assert (x133 x348 x444 x34 x18))
(assert (x287 x565 x305 x330 x324))
(assert (x321 (- x444 x164)))
(assert (x287 x412 x58 x639 x465))
(assert (= (and x488 (not x88)) x669))
(assert (x233 x580 (- x671 x465)))
(assert (x133 x666 x258 x305 x565))
(assert (x233 x90 (- x324 x26)))
(assert (x133 x639 x465 x58 x412))
(assert (x233 x26 (- x171 x628)))
(assert (x287 x26 x171 x654 x444))
(assert (x287 x51 x26 x654 x444))
(assert (x133 x666 x258 x26 x51))
(assert (x651 x441))
(assert (x233 x639 (- x465 x58)))
(assert (= (x68 2835717307) (x52 2835717307)))
(assert (x133 x654 x444 x324 x90))
(assert (x718 x533))
(assert (x233 x171 (- x26 x634)))
(assert (x287 x176 x628 x51 x26))
(assert (x321 (- x565 x164)))
(assert (x321 (- x628 x34)))
(assert (x233 x666 (- x258 x565)))
(assert (x233 x348 (- x444 x164)))
(assert (x233 x324 (- x330 x348)))
(assert (x321 (- x565 x444)))
(assert (x287 x634 x164 x412 x58))
(assert (x321 (- x654 x26)))
(assert (x233 x580 (- x671 x26)))
(assert (x651 x146))
(assert (x287 x26 x51 x330 x324))
(assert (x287 x465 x639 x348 x444))
(assert (x321 x565))
(assert (x321 (- x580 x305)))
(assert (x646 115792089237316195423570985008687907853269984665640064039457584007913129639935 x671))
(assert (x233 x465 (- x639 x654)))
(assert (and (x279 1000000000000000000000000000 x380) (= (* 1000000000000000000000000000 x380) (x683 1000000000000000000000000000 x380)) (x682 1000000000000000000000000000 x380) (x677 1000000000000000000000000000 x380) (x700 1000000000000000000000000000 x380) (x151 1000000000000000000000000000 x380) (and (= (- (* 1000000000000000000000000000 x380) (* x380 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x683 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x380)) (= (x683 1000000000000000000000000000 (- x380 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x380 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000)) (= (- (* (- x380 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x380 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x683 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x380 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x321 (- x26 x639)))
(assert (x133 x171 x26 x654 x444))
(assert (x233 x465 (- x639 x26)))
(assert (x133 x58 x412 x305 x565))
(assert (x233 x465 (- x639 x305)))
(assert (x133 x444 x654 x18 x34))
(assert (x133 x330 x324 x444 x654))
(assert (x233 x666 (- x258 x639)))
(assert (x133 x580 x671 x565 x305))
(assert (x133 x34 x18 x444 x348))
(assert (x321 (- x444 x634)))
(assert (= (x349 (x52 1000000000000000000000000000)) 1000000000000000000000000000))
(assert (x133 x26 x51 x444 x654))
(assert (x321 (- x580 x565)))
(assert (x233 x324 (- x330 x18)))
(assert (x651 x297))
(assert (x321 (- x565 x634)))
(assert (x233 x26 (- x51 x444)))
(assert (x651 x289))
(assert (x287 x258 x666 x90 x324))
(assert (x321 x412))
(assert (x133 x412 x58 x90 x324))
(assert (x133 x26 x171 x444 x654))
(assert (x133 x465 x639 x330 x324))
(assert (x133 x51 x26 x164 x634))
(assert (x233 x324 (- x90 x580)))
(assert (x321 (- x258 x18)))
(assert (x321 (- x412 x34)))
(assert (x321 (- x465 x51)))
(assert (x233 x565 (- x305 x324)))
(assert (= (x349 (x52 3018967357)) 3018967357))
(assert (x287 x654 x444 x639 x465))
(assert (x321 (- x164 x176)))
(assert (x287 x324 x90 x580 x671))
(assert (x233 x639 (- x465 x671)))
(assert (x121 x468))
(assert (x287 x18 x34 x654 x444))
(assert (x321 (- x412 x26)))
(assert (x233 x258 (- x666 x34)))
(assert (x233 x671 (- x580 x565)))
(assert (x133 x164 x634 x580 x671))
(assert (x287 x465 x639 x666 x258))
(assert (x133 x26 x51 x324 x90))
(assert (x287 x324 x90 x639 x465))
(assert (x651 x261))
(assert (x233 x628 (- x176 x51)))
(assert (x121 x574))
(assert (and (x84 x594 1000000000000000000000000000) (x170 x594 1000000000000000000000000000) (=> (and (> x594 0) (< 0 1000000000000000000000000000)) (and (>= x594 (* (x369 x594 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x594 1000000000000000000000000000)) (- x594 1000000000000000000000000000)))) (x631 x594 1000000000000000000000000000) (x471 x594 1000000000000000000000000000)))
(assert (x133 x565 x305 x465 x639))
(assert (x651 x457))
(assert (x133 x671 x580 x18 x34))
(assert (x651 x156))
(assert (x233 x639 (- x465 x330)))
(assert (x233 x330 (- x324 x305)))
(assert (x651 x695))
(assert (x133 x34 x18 x580 x671))
(assert (x605 x14))
(assert (x651 x694))
(assert (x133 x324 x330 x412 x58))
(assert (x233 x34 (- x18 x258)))
(assert (x651 x628))
(assert (x651 x609))
(assert (x133 x465 x639 x628 x176))
(assert (x133 x58 x412 x330 x324))
(assert (x233 x565 (- x305 x330)))
(assert (x133 x324 x330 x18 x34))
(assert (x133 x465 x639 x18 x34))
(assert (x233 x18 (- x34 x580)))
(assert (x233 x671 (- x580 x171)))
(assert (x605 1461501637330902918203684832716283019655932542976))
(assert (x233 x324 (- x330 x465)))
(assert (x133 x348 x444 x465 x639))
(assert (x133 x580 x671 x634 x164))
(assert (x133 x444 x348 x26 x51))
(assert (x133 x330 x324 x634 x164))
(assert (x133 x18 x34 x348 x444))
(assert (x321 (- x330 x654)))
(assert (x321 (- x305 x324)))
(assert (x133 x18 x34 x164 x634))
(assert (= (or x92 x155) x686))
(assert (x287 x412 x58 x18 x34))
(assert (x233 x628 (- x176 x305)))
(assert (x321 (- x666 x18)))
(assert (x321 (- x444 x34)))
(assert (= (x68 1865579259) (x52 1865579259)))
(assert (x651 x383))
(assert (x233 x164 (- x634 x90)))
(assert (x133 x51 x26 x671 x580))
(assert (x287 x565 x305 x348 x444))
(assert (x133 x639 x465 x90 x324))
(assert (x133 x26 x51 x176 x628))
(assert (x287 x348 x444 x90 x324))
(assert (x233 x51 (- x26 x324)))
(assert (x133 x628 x176 x164 x634))
(assert (x133 x305 x565 x58 x412))
(assert (x651 x634))
(assert (x287 x639 x465 x666 x258))
(assert (x133 x58 x412 x26 x171))
(assert (x321 (- x34 x580)))
(assert (x651 x5))
(assert (x718 x500))
(assert (x233 x628 (- x176 x465)))
(assert (x133 x18 x34 x465 x639))
(assert (x133 x628 x176 x330 x324))
(assert (x233 x348 (- x444 x330)))
(assert (x321 (- x412 x51)))
(assert (x233 x654 (- x444 x26)))
(assert (x321 (- x634 x654)))
(assert (x321 (- x164 x51)))
(assert (x133 x164 x634 x666 x258))
(assert (x321 (- x639 x305)))
(assert (x233 x34 (- x18 x90)))
(assert (= x89 (or x73 x238)))
(assert (x121 2))
(assert (x321 (- x34 x628)))
(assert (x321 (- x634 x671)))
(assert (x287 x639 x465 x90 x324))
(assert (x321 (- x26 x628)))
(assert (x321 (- x305 x666)))
(assert (x651 x237))
(assert (x321 (- x51 x654)))
(assert (x233 x171 (- x26 x671)))
(assert (x321 (- x628 x634)))
(assert (= (x349 (x68 x398)) x398))
(assert (x133 x628 x176 x565 x305))
(assert (x287 x565 x305 x176 x628))
(assert (x233 x412 (- x58 x324)))
(assert (x651 x619))
(assert (and (x473 x300 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x300 (+ (* (x369 x300 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x257 x300 1461501637330902918203684832716283019655932542976)))) (x288 x300 1461501637330902918203684832716283019655932542976) (x440 x300 1461501637330902918203684832716283019655932542976)))
(assert (x133 x330 x324 x258 x666))
(assert (x651 x240))
(assert (x287 x465 x639 x330 x324))
(assert (x718 x694))
(assert (x287 x58 x412 x51 x26))
(assert (x321 (- x51 x164)))
(assert (x233 x465 (- x639 x628)))
(assert (x233 x34 (- x18 x654)))
(assert (x287 x324 x90 x565 x305))
(assert (= x109 (x349 (x68 x109))))
(assert (x133 x330 x324 x639 x465))
(assert (x321 x580))
(assert (x321 x18))
(assert (x133 x51 x26 x348 x444))
(assert (x287 x90 x324 x639 x465))
(assert (x133 x634 x164 x305 x565))
(assert (x233 x26 (- x51 x164)))
(assert (x133 x34 x18 x258 x666))
(assert (x233 x565 (- x305 x465)))
(assert (x321 (- x634 x565)))
(assert (x651 x72))
(assert (x321 (- x639 x444)))
(assert (x233 x666 (- x258 x90)))
(assert (x651 x292))
(assert (x133 x671 x580 x324 x330))
(assert (x679 x201))
(assert (x233 x26 (- x171 x258)))
(assert (x233 x26 (- x171 x444)))
(assert (x651 x638))
(assert (x321 (- x171 x628)))
(assert (x321 (- x634 x34)))
(assert (x651 x77))
(assert (x321 (- x18 x324)))
(assert (x133 x324 x90 x26 x171))
(assert (x651 x107))
(assert (x287 x412 x58 x51 x26))
(assert (x133 x90 x324 x666 x258))
(assert (x651 x301))
(assert (= x69 1000000000000000000000000000))
(assert (x321 (- x444 x305)))
(assert (= (x349 (x68 x500)) x500))
(assert (x133 x639 x465 x330 x324))
(assert (x233 x171 (- x26 x639)))
(assert (x133 x444 x654 x565 x305))
(assert (x287 x34 x18 x348 x444))
(assert (x287 x164 x634 x412 x58))
(assert (x287 x654 x444 x565 x305))
(assert (= (x349 (x68 x515)) x515))
(assert (x651 x138))
(assert (x287 x26 x171 x639 x465))
(assert (x121 x256))
(assert (x321 (- x90 x176)))
(assert (x287 x51 x26 x330 x324))
(assert (x133 x58 x412 x465 x639))
(assert (x287 x565 x305 x666 x258))
(assert (x233 x348 (- x444 x565)))
(assert (x287 x330 x324 x565 x305))
(assert (x233 x26 (- x51 x58)))
(assert (x133 x258 x666 x34 x18))
(assert (x233 x90 (- x324 x654)))
(assert (x133 x176 x628 x34 x18))
(assert (x651 x175))
(assert (x651 x91))
(assert (x133 x348 x444 x324 x90))
(assert (x321 x639))
(assert (x321 (- x580 x324)))
(assert (x321 (- x34 x412)))
(assert (x287 x654 x444 x18 x34))
(assert (x321 (- x90 x18)))
(assert (x321 (- x324 x634)))
(assert (x133 x171 x26 x671 x580))
(assert (x321 (- x305 x634)))
(assert (x321 (- x164 x671)))
(assert (= (x349 (x68 x240)) x240))
(assert (x287 x26 x171 x666 x258))
(assert (and (= (x683 3 3) 9) (= (x683 27 3) 81) (= (x683 9 9) 81) (= (x683 9 3) 27)))
(assert (x133 x51 x26 x628 x176))
(assert (x233 x51 (- x26 x444)))
(assert (x651 x666))
(assert (x233 x412 (- x58 x465)))
(assert (x651 x662))
(assert (x321 (- x171 x90)))
(assert (x133 x348 x444 x565 x305))
(assert (x133 x324 x330 x580 x671))
(assert (x287 x330 x324 x348 x444))
(assert (x133 x324 x330 x171 x26))
(assert (x133 x565 x305 x580 x671))
(assert (x321 (- x34 x465)))
(assert (x233 x444 (- x654 x171)))
(assert (x651 x587))
(assert (x651 x541))
(assert (x321 (- x444 x90)))
(assert (x133 x348 x444 x164 x634))
(assert (x233 x90 (- x324 x666)))
(assert (x133 x412 x58 x465 x639))
(assert (x233 x305 (- x565 x465)))
(assert (x233 x171 (- x26 x258)))
(assert (x133 x666 x258 x565 x305))
(assert (= x496 (x349 (x68 x496))))
(assert (x321 (- x164 x412)))
(assert (x287 x18 x34 x634 x164))
(assert (x233 x639 (- x465 x26)))
(assert (x287 x628 x176 x634 x164))
(assert (x287 x639 x465 x580 x671))
(assert (x233 x348 (- x444 x18)))
(assert (x133 x330 x324 x164 x634))
(assert (x321 (- x34 x666)))
(assert (x321 (- x565 x348)))
(assert (x321 (- x26 x465)))
(assert (x321 (- x58 x465)))
(assert (x121 x335))
(assert (x133 x58 x412 x634 x164))
(assert (x651 x432))
(assert (x718 x179))
(assert (x651 x344))
(assert (and (x473 x129 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= x129 (+ (* (x369 x129 340282366920938463463374607431768211456) 340282366920938463463374607431768211456) (x257 x129 340282366920938463463374607431768211456)))) (x288 x129 340282366920938463463374607431768211456) (x440 x129 340282366920938463463374607431768211456)))
(assert (x233 x412 (- x58 x34)))
(assert (x233 x634 (- x164 x330)))
(assert (x233 x34 (- x18 x634)))
(assert (x233 x634 (- x164 x18)))
(assert (x651 x520))
(assert (x651 x503))
(assert (= 4294967296 (x349 (x52 4294967296))))
(assert (x287 x258 x666 x639 x465))
(assert (x321 (- x666 x324)))
(assert (x233 x26 (- x51 x671)))
(assert (x651 x591))
(assert (x321 (- x26 x176)))
(assert (x233 x18 (- x34 x654)))
(assert (x651 x221))
(assert (x233 x176 (- x628 x324)))
(assert (x651 x398))
(assert (x651 x120))
(assert (x651 x267))
(assert (x133 x164 x634 x51 x26))
(assert (x233 x580 (- x671 x90)))
(assert (x133 x671 x580 x34 x18))
(assert (x651 x313))
(assert (x321 (- x164 x580)))
(assert (x133 x171 x26 x324 x90))
(assert (x287 x26 x51 x176 x628))
(assert (x287 x330 x324 x171 x26))
(assert (x287 x164 x634 x348 x444))
(assert (x287 x444 x348 x51 x26))
(assert (x233 x51 (- x26 x258)))
(assert (x321 (- x348 x171)))
(assert (x121 x448))
(assert (x651 x277))
(assert (x651 x87))
(assert (x233 x324 (- x330 x444)))
(assert (x321 (- x634 x628)))
(assert (x651 x711))
(assert (x651 x83))
(assert (x133 x305 x565 x671 x580))
(assert (x133 x634 x164 x34 x18))
(assert (x287 x666 x258 x51 x26))
(assert (and (x279 3 x355) (= (* 3 x355) (x683 3 x355)) (x682 3 x355) (x677 3 x355) (x700 3 x355) (x151 3 x355) (and (= (- (* 3 x355) (* x355 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x683 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x355)) (= (x683 3 (- x355 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x355 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3)) (= (- (* (- x355 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x355 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x683 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x355 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x287 x666 x258 x18 x34))
(assert (x233 x330 x324))
(assert (x321 (- x164 x90)))
(assert (x321 (- x330 x628)))
(assert (x651 x54))
(assert (x287 x634 x164 x176 x628))
(assert (x287 x324 x330 x654 x444))
(assert (x321 (- x330 x412)))
(assert (x651 x516))
(assert (x133 x171 x26 x634 x164))
(assert (x651 x69))
(assert (x287 x90 x324 x634 x164))
(assert (x287 x634 x164 x666 x258))
(assert (x651 x358))
(assert (x287 x305 x565 x634 x164))
(assert (x233 x580 x671))
(assert (= (x52 826074471) (x68 826074471)))
(assert (x651 x182))
(assert (x133 x412 x58 x164 x634))
(assert (x133 x654 x444 x51 x26))
(assert (x233 x666 (- x258 x18)))
(assert (x321 (- x90 x628)))
(assert (x133 x324 x90 x176 x628))
(assert (= (x349 (x68 x188)) x188))
(assert (x287 x634 x164 x348 x444))
(assert (x233 x465 (- x639 x324)))
(assert (x133 x444 x654 x51 x26))
(assert (x287 x628 x176 x90 x324))
(assert (x651 x604))
(assert (x651 x710))
(assert (x133 x444 x348 x305 x565))
(assert (x651 x187))
(assert (x651 x564))
(assert (x287 x412 x58 x330 x324))
(assert (x651 x428))
(assert (x133 x90 x324 x164 x634))
(assert (x133 x176 x628 x565 x305))
(assert (x233 x18 (- x34 x164)))
(assert (x651 x348))
(assert (x321 (- x465 x34)))
(assert (x321 x19))
(assert (x287 x171 x26 x580 x671))
(assert (x133 x18 x34 x324 x330))
(assert (x233 x628 (- x176 x90)))
(assert (x287 x324 x330 x639 x465))
(assert (x651 x337))
(assert (x321 (- x634 x58)))
(assert (x233 x628 (- x176 x171)))
(assert (x233 x305 (- x565 x90)))
(assert (x233 x444 (- x348 x565)))
(assert (x651 x118))
(assert (x133 x18 x34 x671 x580))
(assert (x651 x529))
(assert (x321 (- x671 x18)))
(assert (x287 x580 x671 x18 x34))
(assert (x321 (- x671 x164)))
(assert (x287 x639 x465 x348 x444))
(assert (x233 x34 (- x18 x465)))
(assert (x233 x654 (- x444 x171)))
(assert (x287 x580 x671 x171 x26))
(assert (x233 x465 (- x639 x171)))
(assert (x233 x634 (- x164 x258)))
(assert (x233 x164 (- x634 x444)))
(assert (x651 x597))
(assert (x233 x330 (- x324 x176)))
(assert (x651 x422))
(assert (x321 (- x164 x666)))
(assert (=> (<= x240 10000) (= (x52 x240) (x68 x240))))
(assert (x233 x465 (- x639 x412)))
(assert (x133 x176 x628 x639 x465))
(assert (x233 x258 (- x666 x330)))
(assert (x321 (- x628 x171)))
(assert (x321 (- x628 x51)))
(assert (x233 x90 (- x324 x465)))
(assert (x287 x580 x671 x330 x324))
(assert (x321 (- x164 x171)))
(assert (x651 x247))
(assert (x321 (- x26 x654)))
(assert (x233 x18 (- x34 x258)))
(assert (x651 x232))
(assert (x287 x628 x176 x171 x26))
(assert (x233 x330 (- x324 x654)))
(assert (x233 x58 (- x412 x330)))
(assert (x133 x465 x639 x176 x628))
(assert (x321 x666))
(assert (x321 (- x330 x34)))
(assert (x651 x234))
(assert (x718 x188))
(assert (x321 (- x330 x258)))
(assert (x133 x171 x26 x348 x444))
(assert (x679 x637))
(assert (x133 x628 x176 x90 x324))
(assert (x287 x444 x654 x330 x324))
(assert (x651 x191))
(assert (x121 x258))
(assert (x651 x117))
(assert (x233 x18 (- x34 x628)))
(assert (=> (>= 10000 x539) (= (x68 x539) (x52 x539))))
(assert (x133 x34 x18 x324 x330))
(assert (x233 x444 (- x654 x34)))
(assert (x233 x666 (- x258 x465)))
(assert (x651 x341))
(assert (x651 x51))
(assert (x321 (- x58 x565)))
(assert (x133 x412 x58 x171 x26))
(assert (x287 x305 x565 x666 x258))
(assert (x133 x324 x90 x171 x26))
(assert (x321 (- x305 x258)))
(assert (x233 x51 (- x26 x348)))
(assert (x321 (- x258 x634)))
(assert (x233 x580 (- x671 x34)))
(assert (x321 (- x639 x171)))
(assert (= (x349 (x68 x22)) x22))
(assert (x233 x34 (- x18 x628)))
(assert (x321 (- x51 x639)))
(assert (x233 x90 (- x324 x176)))
(assert (x287 x324 x330 x18 x34))
(assert (x133 x330 x324 x671 x580))
(assert (x321 (- x580 x171)))
(assert (= (x349 (x68 x456)) x456))
(assert (x287 x34 x18 x634 x164))
(assert (and (x84 x574 1000000000000000000000000000) (x170 x574 1000000000000000000000000000) (=> (and (> x574 0) (< 0 1000000000000000000000000000)) (and (>= x574 (* (x369 x574 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x574 1000000000000000000000000000)) (- x574 1000000000000000000000000000)))) (x631 x574 1000000000000000000000000000) (x471 x574 1000000000000000000000000000)))
(assert (x287 x444 x654 x51 x26))
(assert (x233 x465 (- x639 x671)))
(assert (x321 (- x565 x258)))
(assert (x651 x691))
(assert (x651 x331))
(assert (=> (>= 10000 x65) (= (x68 x65) (x52 x65))))
(assert (x133 x565 x305 x634 x164))
(assert (x133 x171 x26 x580 x671))
(assert (x287 x634 x164 x90 x324))
(assert (x233 x171 (- x26 x465)))
(assert (and (x471 x26 2) (=> (and (> x26 0) (< 0 2)) (and (>= x26 (* (x369 x26 2) 2)) (> (* 2 (x369 x26 2)) (- x26 2)))) (x84 x26 2) (x170 x26 2) (x631 x26 2) (= (- x26 (x719 1 x26)) (* 2 (x369 x26 2)))))
(assert (x133 x58 x412 x324 x330))
(assert (x133 x324 x90 x639 x465))
(assert (x133 x164 x634 x324 x90))
(assert (x133 x666 x258 x90 x324))
(assert (x718 x280))
(assert (x287 x324 x90 x18 x34))
(assert (x321 (- x34 x639)))
(assert (x133 x330 x324 x654 x444))
(assert (= x424 (and x686 x517)))
(assert (x321 (- x671 x330)))
(assert (x679 x300))
(assert (x651 x85))
(assert (x233 x34 (- x18 x176)))
(assert (x287 x90 x324 x51 x26))
(assert (x651 x584))
(assert (x287 x324 x90 x666 x258))
(assert (x287 x324 x330 x176 x628))
(assert (x233 x90 (- x324 x51)))
(assert (= x185 (and (not x517) x686)))
(assert (=> (>= 10000 x533) (= (x68 x533) (x52 x533))))
(assert (=> (>= 10000 x456) (= (x52 x456) (x68 x456))))
(assert (x133 x628 x176 x18 x34))
(assert (x133 x258 x666 x565 x305))
(assert (x321 3))
(assert (x133 x51 x26 x258 x666))
(assert (x651 x168))
(assert (= (x349 (x68 x118)) x118))
(assert (x651 x512))
(assert (x133 x444 x654 x164 x634))
(assert (x651 x335))
(assert (x651 x684))
(assert (x233 x348 (- x444 x305)))
(assert (x718 x551))
(assert (x321 (- x305 x330)))
(assert (x233 x444 (- x348 x34)))
(assert (x287 x58 x412 x90 x324))
(assert (x133 x90 x324 x348 x444))
(assert (x233 x654 (- x444 x634)))
(assert (x133 x26 x171 x444 x348))
(assert (x133 x164 x634 x305 x565))
(assert (x133 x654 x444 x26 x51))
(assert (x321 (- x90 x580)))
(assert (x233 x51 (- x26 x634)))
(assert (x133 x666 x258 x51 x26))
(assert (= 1889567281 (x349 (x52 1889567281))))
(assert (x133 x258 x666 x465 x639))
(assert (x133 x171 x26 x628 x176))
(assert (x321 (- x51 x258)))
(assert (x133 x26 x171 x324 x330))
(assert (x651 x310))
(assert (x321 (- x171 x412)))
(assert (x133 x330 x324 x305 x565))
(assert (x133 x26 x171 x330 x324))
(assert (x321 (- x666 x465)))
(assert (x651 x601))
(assert (x321 (- x305 x465)))
(assert (x651 x163))
(assert (x133 x324 x330 x258 x666))
(assert (x133 x348 x444 x639 x465))
(assert (x133 x58 x412 x565 x305))
(assert (x651 x589))
(assert (x233 x51 (- x26 x330)))
(assert (x287 x51 x26 x412 x58))
(assert (x233 x58 (- x412 x639)))
(assert (and (x84 x612 1000000000000000000000000000) (x170 x612 1000000000000000000000000000) (=> (and (> x612 0) (< 0 1000000000000000000000000000)) (and (>= x612 (* (x369 x612 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x612 1000000000000000000000000000)) (- x612 1000000000000000000000000000)))) (x631 x612 1000000000000000000000000000) (x471 x612 1000000000000000000000000000)))
(assert (x133 x305 x565 x324 x90))
(assert (x321 (- x324 x176)))
(assert (x321 (- x639 x34)))
(assert (x233 x465 (- x639 x58)))
(assert (x287 x348 x444 x639 x465))
(assert (x133 x580 x671 x26 x171))
(assert (x718 x398))
(assert (x287 x639 x465 x330 x324))
(assert (x650 x5))
(assert (x321 (- x164 x58)))
(assert (x233 x51 (- x26 x465)))
(assert (x233 x412 (- x58 x634)))
(assert (x133 x671 x580 x639 x465))
(assert (x287 x258 x666 x634 x164))
(assert (x321 (- x639 x51)))
(assert (x718 x118))
(assert (x233 x444 (- x654 x18)))
(assert (x233 x634 (- x164 x171)))
(assert (x133 x628 x176 x305 x565))
(assert (x321 (- x465 x90)))
(assert (x133 x258 x666 x324 x330))
(assert (x321 (- x654 x171)))
(assert (x233 x565 (- x305 x654)))
(assert (and (x471 x324 2) (=> (and (> x324 0) (< 0 2)) (and (>= x324 (* (x369 x324 2) 2)) (> (* 2 (x369 x324 2)) (- x324 2)))) (x84 x324 2) (x170 x324 2) (x631 x324 2) (= (- x324 (x719 1 x324)) (* 2 (x369 x324 2)))))
(assert (x233 x51 (- x26 x666)))
(assert (x321 (- x18 x634)))
(assert (x133 x324 x90 x26 x51))
(assert (x233 x412 (- x58 x164)))
(assert (x233 x176 (- x628 x305)))
(assert (= (x52 4294967296) (x68 4294967296)))
(assert (= (x349 (x52 340282366920938463463374607431768211455)) 340282366920938463463374607431768211455))
(assert (x133 x444 x654 x305 x565))
(assert (x233 x90 (- x324 x628)))
(assert (x651 x316))
(assert (x321 (- x164 x305)))
(assert (x133 x639 x465 x666 x258))
(assert (x651 x600))
(assert (x233 x26 (- x171 x634)))
(assert (x651 x567))
(assert (x321 (- x324 x465)))
(assert (x287 x58 x412 x18 x34))
(assert (x321 (- x58 x90)))
(assert (x321 (- x330 x305)))
(assert (x321 (- x639 x258)))
(assert (x287 x176 x628 x639 x465))
(assert (x651 x285))
(assert (= (x52 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x68 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x651 x465))
(assert (= (x68 1000000000000000000000000000) (x52 1000000000000000000000000000)))
(assert (x287 x51 x26 x176 x628))
(assert (x233 x324 (- x330 x58)))
(assert (x718 x456))
(assert (and (x473 x14 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= x14 (+ (* (x369 x14 340282366920938463463374607431768211456) 340282366920938463463374607431768211456) (x257 x14 340282366920938463463374607431768211456)))) (x288 x14 340282366920938463463374607431768211456) (x440 x14 340282366920938463463374607431768211456)))
(assert (x233 x324 (- x90 x18)))
(assert (x233 x90 (- x324 x444)))
(assert (x287 x58 x412 x330 x324))
(assert (x287 x444 x654 x639 x465))
(assert (x651 x140))
(assert (x133 x171 x26 x666 x258))
(assert (x133 x465 x639 x654 x444))
(assert (x321 (- x34 x654)))
(assert (x651 x560))
(assert (x287 x348 x444 x330 x324))
(assert (x287 x580 x671 x639 x465))
(assert (x133 x412 x58 x305 x565))
(assert (and (x84 x83 1000000000000000000000000000) (x170 x83 1000000000000000000000000000) (=> (and (> x83 0) (< 0 1000000000000000000000000000)) (and (>= x83 (* (x369 x83 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x83 1000000000000000000000000000)) (- x83 1000000000000000000000000000)))) (x631 x83 1000000000000000000000000000) (x471 x83 1000000000000000000000000000)))
(assert (x287 x639 x465 x51 x26))
(assert (x651 x534))
(assert (x133 x634 x164 x51 x26))
(assert (x233 x666 (- x258 x51)))
(assert (x133 x565 x305 x258 x666))
(assert (x133 x444 x348 x171 x26))
(assert (x321 (- x90 x51)))
(assert (x321 (- x330 x666)))
(assert (x651 x282))
(assert (x233 x671 (- x580 x634)))
(assert (x321 (- x26 x58)))
(assert (= x442 x290))
(assert (x321 (- x412 x565)))
(assert (x233 x164 (- x634 x34)))
(assert (x651 x350))
(assert (x133 x305 x565 x348 x444))
(assert (x321 (- x330 x176)))
(assert (x133 x305 x565 x330 x324))
(assert (x133 x51 x26 x444 x348))
(assert (x651 x382))
(assert (x133 x671 x580 x565 x305))
(assert (x121 x58))
(assert (x321 (- x412 x305)))
(assert (x321 (- x305 x628)))
(assert (x321 (- x58 x324)))
(assert (x651 x307))
(assert (x651 x63))
(assert (x679 x14))
(assert (x233 x580 (- x671 x324)))
(assert (x651 x594))
(assert (x233 x171 (- x26 x412)))
(assert (x133 x628 x176 x324 x330))
(assert (x651 x608))
(assert (x321 (- x565 x580)))
(assert (x321 (- x565 x654)))
(assert (x646 115792089237316195423570985008687907853269984665640064039457584007913129639935 x465))
(assert (x651 x485))
(assert (x233 x18 (- x34 x176)))
(assert (x651 x101))
(assert (x651 x176))
(assert (x651 x569))
(assert (x321 (- x305 x176)))
(assert (x133 x34 x18 x444 x654))
(assert (x321 (- x18 x666)))
(assert (x133 x444 x348 x634 x164))
(assert (x233 x444 (- x654 x330)))
(assert (x233 x305 (- x565 x164)))
(assert (x321 (- x565 x465)))
(assert (x133 x465 x639 x90 x324))
(assert (x133 x90 x324 x565 x305))
(assert (x321 (- x258 x639)))
(assert (x651 x47))
(assert (x321 x32))
(assert (x133 x51 x26 x90 x324))
(assert (x121 x26))
(assert (x287 x176 x628 x90 x324))
(assert (x121 x224))
(assert (x133 x258 x666 x171 x26))
(assert (x646 115792089237316195423570985008687907853269984665640064039457584007913129639935 x444))
(assert (x133 x666 x258 x164 x634))
(assert (x133 x580 x671 x164 x634))
(assert (x651 x659))
(assert (x287 x324 x90 x412 x58))
(assert (x133 x628 x176 x324 x90))
(assert (x651 x515))
(assert (x233 x18 (- x34 x58)))
(assert (x287 x444 x348 x171 x26))
(assert (x233 x258 (- x666 x634)))
(assert (x233 x324 (- x330 x639)))
(assert (and (x84 x198 1000000000000000000000000000) (x170 x198 1000000000000000000000000000) (=> (and (> x198 0) (< 0 1000000000000000000000000000)) (and (>= x198 (* (x369 x198 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x198 1000000000000000000000000000)) (- x198 1000000000000000000000000000)))) (x631 x198 1000000000000000000000000000) (x471 x198 1000000000000000000000000000)))
(assert (x321 (- x654 x465)))
(assert (x233 x465 (- x639 x580)))
(assert (x233 x324 (- x330 x671)))
(assert (= x57 (x349 (x68 x57))))
(assert (x133 x18 x34 x90 x324))
(assert (x321 (- x171 x654)))
(assert (x321 (- x580 x639)))
(assert (x651 x533))
(assert (x651 x712))
(assert (x133 x90 x324 x412 x58))
(assert (x233 x580 (- x671 x639)))
(assert (x133 x258 x666 x324 x90))
(assert (x121 x693))
(assert (x651 x456))
(assert (x233 x348 (- x444 x465)))
(assert (x718 x240))
(assert (x233 x171 (- x26 x348)))
(assert (x646 115792089237316195423570985008687907853269984665640064039457584007913129639935 x34))
(assert (x133 x305 x565 x412 x58))
(assert (x287 x26 x51 x654 x444))
(assert (x233 x51 (- x26 x164)))
(assert (x233 x671 (- x580 x26)))
(assert (x321 (- x412 x634)))
(assert (x321 (- x171 x330)))
(assert (x133 x90 x324 x18 x34))
(assert (x287 x444 x654 x18 x34))
(assert (x287 x164 x634 x565 x305))
(assert (x651 x197))
(assert (x651 x539))
(assert (x133 x634 x164 x324 x90))
(assert (x133 x671 x580 x26 x171))
(assert (x233 x634 (- x164 x628)))
(assert (x233 x90 (- x324 x634)))
(assert (x287 x666 x258 x634 x164))
(assert (x133 x90 x324 x444 x348))
(assert (x321 (- x348 x565)))
(assert (x133 x565 x305 x330 x324))
(assert (x321 (- x444 x639)))
(assert (x321 (- x90 x26)))
(assert (x321 (- x171 x639)))
(assert (x321 (- x324 x305)))
(assert (x133 x634 x164 x258 x666))
(assert (x287 x580 x671 x565 x305))
(assert (x651 x57))
(assert (x233 x176 (- x628 x634)))
(assert (= (and (not x409) x2) x108))
(assert (= x557 (and x262 x185)))
(assert (x133 x34 x18 x412 x58))
(assert (=> (>= 10000 x500) (= (x68 x500) (x52 x500))))
(assert (x287 x348 x444 x18 x34))
(assert (x233 x324 (- x330 x164)))
(assert (x321 (- x305 x671)))
(assert (x233 x90 (- x324 x171)))
(assert (x651 x365))
(assert (x233 x90 (- x324 x305)))
(assert (x133 x51 x26 x324 x330))
(assert (x233 x639 (- x465 x90)))
(assert (x287 x654 x444 x51 x26))
(assert (x133 x324 x90 x444 x348))
(assert (x321 (- x671 x465)))
(assert (x233 x671 (- x580 x34)))
(assert (x233 x580 (- x671 x51)))
(assert (x133 x412 x58 x634 x164))
(assert (x233 x412 (- x58 x305)))
(assert (x233 x565 (- x305 x58)))
(assert (x133 x90 x324 x26 x171))
(assert (x651 x443))
(assert (x133 x258 x666 x330 x324))
(assert (x233 x444 (- x348 x324)))
(assert (x321 (- x348 x34)))
(assert (x233 x258 (- x666 x90)))
(assert (x321 (- x90 x465)))
(assert (x233 x580 (- x671 x164)))
(assert (x233 x330 (- x324 x639)))
(assert (x233 x639 x465))
(assert (x133 x18 x34 x58 x412))
(assert (x133 x565 x305 x444 x654))
(assert (x233 x324 (- x90 x666)))
(assert (x321 (- x171 x348)))
(assert (x133 x305 x565 x639 x465))
(assert (x133 x34 x18 x330 x324))
(assert (x321 (- x90 x171)))
(assert (x133 x444 x348 x330 x324))
(assert (x133 x324 x90 x580 x671))
(assert (x233 x26 (- x51 x176)))
(assert (x133 x324 x90 x671 x580))
(assert (x321 (- x671 x90)))
(assert (x287 x666 x258 x90 x324))
(assert (x133 x330 x324 x34 x18))
(assert (x679 340282366920938463463374607431768211455))
(assert (x651 x295))
(assert (x233 x580 (- x671 x18)))
(assert (x321 (- x639 x324)))
(assert (x233 x258 (- x666 x324)))
(assert (x321 (- x26 x671)))
(assert (x321 (- x26 x666)))
(assert (x287 x258 x666 x18 x34))
(assert (x651 x496))
(assert (x133 x639 x465 x305 x565))
(assert (x321 (- x18 x671)))
(assert (x133 x639 x465 x258 x666))
(assert (x321 (- x348 x90)))
(assert (=> (>= 10000 x496) (= (x68 x496) (x52 x496))))
(assert (x233 x654 (- x444 x565)))
(assert (x321 (- x628 x639)))
(assert (x233 x90 (- x324 x258)))
(assert (x233 x171 (- x26 x330)))
(assert (x321 (- x639 x654)))
(assert (x133 x654 x444 x34 x18))
(assert (x321 x512))
(assert (x321 (- x580 x34)))
(assert (x321 (- x639 x580)))
(assert (x287 x639 x465 x176 x628))
(assert (x651 x25))
(assert (x287 x18 x34 x412 x58))
(assert (x651 x324))
(assert (x321 (- x58 x171)))
(assert (x321 (- x18 x444)))
(assert (x321 (- x628 x26)))
(assert (x287 x330 x324 x412 x58))
(assert (x133 x444 x348 x639 x465))
(assert (x287 x26 x51 x666 x258))
(assert (and (x471 x444 2) (=> (and (> x444 0) (< 0 2)) (and (>= x444 (* (x369 x444 2) 2)) (> (* 2 (x369 x444 2)) (- x444 2)))) (x84 x444 2) (x170 x444 2) (x631 x444 2) (= (- x444 (x719 1 x444)) (* 2 (x369 x444 2)))))
(assert (x651 x48))
(assert (= x155 (or x314 x122)))
(assert (x133 x634 x164 x565 x305))
(assert (x133 x565 x305 x176 x628))
(assert (= (x68 2757214935) (x52 2757214935)))
(assert (x651 x616))
(assert (x133 x412 x58 x565 x305))
(assert (x321 (- x634 x171)))
(assert (x133 x412 x58 x324 x330))
(assert (x133 x26 x51 x628 x176))
(assert (x233 x654 (- x444 x305)))
(assert (x133 x324 x330 x34 x18))
(assert (x133 x324 x330 x654 x444))
(assert (x651 x305))
(assert (x233 x634 (- x164 x565)))
(assert (x133 x330 x324 x666 x258))
(assert (x651 x386))
(assert (x133 x171 x26 x639 x465))
(assert (x233 x171 (- x26 x654)))
(assert (x321 (- x628 x324)))
(assert (x287 x171 x26 x176 x628))
(assert (x233 x324 (- x330 x51)))
(assert (x321 (- x654 x639)))
(assert (x133 x412 x58 x51 x26))
(assert (x321 x90))
(assert (x233 x164 (- x634 x305)))
(assert (x287 x444 x654 x634 x164))
(assert (x133 x26 x51 x258 x666))
(assert (x651 x576))
(assert (x133 x324 x330 x465 x639))
(assert (x133 x639 x465 x580 x671))
(assert (x133 x305 x565 x654 x444))
(assert (x133 x348 x444 x51 x26))
(assert (x651 x406))
(assert (=> (<= x22 10000) (= (x68 x22) (x52 x22))))
(assert (x321 (- x58 x330)))
(assert (x133 x164 x634 x26 x171))
(assert (x233 x565 (- x305 x666)))
(assert (and (x84 x468 1000000000000000000000000000) (x170 x468 1000000000000000000000000000) (=> (and (> x468 0) (< 0 1000000000000000000000000000)) (and (>= x468 (* (x369 x468 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x468 1000000000000000000000000000)) (- x468 1000000000000000000000000000)))) (x631 x468 1000000000000000000000000000) (x471 x468 1000000000000000000000000000)))
(assert (x651 x220))
(assert (x133 x580 x671 x51 x26))
(assert (x233 x639 (- x465 x34)))
(assert (x287 x412 x58 x634 x164))
(assert (x133 x628 x176 x634 x164))
(assert (x233 x51 (- x26 x580)))
(assert (x287 x634 x164 x330 x324))
(assert (x133 x348 x444 x18 x34))
(assert (x133 x634 x164 x90 x324))
(assert (x121 x164))
(assert (x233 x324 (- x330 x580)))
(assert (x287 x639 x465 x654 x444))
(assert (=> (>= 10000 x188) (= (x52 x188) (x68 x188))))
(assert (x287 x164 x634 x176 x628))
(assert (x718 x65))
(assert (x651 x230))
(assert (x651 x109))
(assert (and (x84 x535 1000000000000000000000000000) (x170 x535 1000000000000000000000000000) (=> (and (> x535 0) (< 0 1000000000000000000000000000)) (and (>= x535 (* (x369 x535 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x535 1000000000000000000000000000)) (- x535 1000000000000000000000000000)))) (x631 x535 1000000000000000000000000000) (x471 x535 1000000000000000000000000000)))
(assert (x287 x654 x444 x90 x324))
(assert (x287 x654 x444 x330 x324))
(assert (x133 x258 x666 x639 x465))
(assert (x233 x90 (- x324 x580)))
(assert (x233 x58 (- x412 x324)))
(assert (x121 x444))
(assert (x651 x387))
(assert (x133 x565 x305 x671 x580))
(assert (x287 x171 x26 x666 x258))
(assert (x321 (- x330 x465)))
(assert (x233 x324 (- x330 x565)))
(assert (= x338 x362))
(assert (x121 x305))
(assert (x233 x164 (- x634 x671)))
(assert (x321 (- x258 x164)))
(assert (x287 x330 x324 x639 x465))
(assert (x233 x330 (- x324 x412)))
(assert (x233 x666 x258))
(assert (x133 x671 x580 x26 x51))
(assert (= 1461501637330902918203684832716283019655932542976 (x349 (x52 1461501637330902918203684832716283019655932542976))))
(assert (x287 x348 x444 x565 x305))
(assert (x321 (- x580 x18)))
(assert (x651 x177))
(assert (x133 x90 x324 x258 x666))
(assert (x651 x611))
(assert (x133 x634 x164 x26 x51))
(assert (= 826074471 (x349 (x52 826074471))))
(assert (x133 x26 x51 x654 x444))
(assert (x287 x176 x628 x565 x305))
(assert (x651 x46))
(assert (x651 x484))
(assert (x287 x51 x26 x90 x324))
(assert (x233 x565 (- x305 x258)))
(assert (x321 (- x634 x580)))
(assert (x287 x654 x444 x634 x164))
(assert (x233 x634 (- x164 x654)))
(assert (x651 x53))
(assert (and (x84 x570 1000000000000000000000000000) (x170 x570 1000000000000000000000000000) (=> (and (> x570 0) (< 0 1000000000000000000000000000)) (and (>= x570 (* (x369 x570 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x570 1000000000000000000000000000)) (- x570 1000000000000000000000000000)))) (x631 x570 1000000000000000000000000000) (x471 x570 1000000000000000000000000000)))
(assert (x133 x34 x18 x666 x258))
(assert (x651 x328))
(assert (x321 (- x51 x176)))
(assert (x233 x324 (- x330 x634)))
(assert (x133 x666 x258 x465 x639))
(assert (x233 x26 (- x171 x666)))
(assert (x321 (- x465 x412)))
(assert (= (x349 (x68 x140)) x140))
(assert (x321 (- x258 x171)))
(assert (= x533 (x349 (x68 x533))))
(assert (x233 x26 (- x171 x324)))
(assert (x651 x716))
(assert (x133 x412 x58 x26 x51))
(assert (x133 x171 x26 x465 x639))
(assert (x133 x258 x666 x634 x164))
(assert (x321 (- x444 x465)))
(assert (x651 x482))
(assert (x321 (- x176 x330)))
(assert (x133 x51 x26 x654 x444))
(assert (x133 x580 x671 x330 x324))
(assert (x133 x654 x444 x26 x171))
(assert (=> (>= 10000 x515) (= (x68 x515) (x52 x515))))
(assert (x233 x258 (- x666 x639)))
(assert (x605 x201))
(assert (x133 x164 x634 x58 x412))
(assert (x605 x5))
(assert (x287 x565 x305 x654 x444))
(assert (= 340282366920938463463374607431768211456 (x349 (x52 340282366920938463463374607431768211456))))
(assert (x651 x451))
(assert (x133 x18 x34 x324 x90))
(assert (x133 x444 x654 x26 x51))
(assert (x133 x58 x412 x34 x18))
(assert (x287 x164 x634 x666 x258))
(assert (= (x52 3018967357) (x68 3018967357)))
(assert (x233 x90 (- x324 x565)))
(assert (x287 x628 x176 x639 x465))
(assert (x233 x330 (- x324 x580)))
(assert (x321 x258))
(assert (x321 (- x324 x565)))
(assert (x233 x164 (- x634 x348)))
(assert (x133 x164 x634 x171 x26))
(assert (x133 x666 x258 x26 x171))
(assert (x121 115792089237316195423570985008687907853269984665640064039457584007913129639935))
(assert (x287 x565 x305 x90 x324))
(assert (x233 x654 (- x444 x465)))
(assert (x133 x258 x666 x26 x171))
(assert (x233 x444 (- x348 x26)))
(assert (=> (>= 10000 x446) (= (x52 x446) (x68 x446))))
(assert (x287 x634 x164 x580 x671))
(assert (x718 x515))
(assert (x133 x444 x348 x565 x305))
(assert (x233 x34 (- x18 x580)))
(assert (x321 (- x565 x639)))
(assert (x321 (- x164 x330)))
(assert (and (x279 3 x32) (= (* 3 x32) (x683 3 x32)) (x682 3 x32) (x677 3 x32) (x700 3 x32) (x151 3 x32) (and (= (- (* 3 x32) (* x32 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x683 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x32)) (= (x683 3 (- x32 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x32 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3)) (= (- (* (- x32 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x32 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x683 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x32 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x321 (- x330 x671)))
(assert (x133 x258 x666 x51 x26))
(assert (x321 (- x171 x58)))
(assert (x233 x324 (- x330 x176)))
(assert (x287 x330 x324 x580 x671))
(assert (x321 (- x465 x628)))
(assert (= (x349 (x68 x452)) x452))
(assert (x321 (- x51 x330)))
(assert (x233 x58 (- x412 x90)))
(assert (x287 x258 x666 x330 x324))
(assert (x321 (- x634 x330)))
(assert (x287 x634 x164 x18 x34))
(assert (x133 x639 x465 x26 x51))
(assert (x133 x348 x444 x324 x330))
(assert (x651 x319))
(assert (x233 x26 (- x171 x90)))
(assert (x121 x641))
(assert (x651 x235))
(assert (x651 x572))
(assert (x321 (- x634 x176)))
(assert (x287 x580 x671 x634 x164))
(assert (x321 (- x671 x634)))
(assert (x133 x18 x34 x176 x628))
(assert (x133 x324 x90 x348 x444))
(assert (x287 x305 x565 x176 x628))
(assert (x321 (- x258 x465)))
(assert (= (x68 500000000000000000000000000) (x52 500000000000000000000000000)))
(assert (x233 x18 (- x34 x671)))
(assert (x321 (- x164 x258)))
(assert (x321 x164))
(assert (= (x52 115792089237316195423570985008687907853269984665640064039457584007913129639935) (x68 115792089237316195423570985008687907853269984665640064039457584007913129639935)))
(assert (x287 x348 x444 x634 x164))
(assert (and (x84 x641 1000000000000000000000000000) (x170 x641 1000000000000000000000000000) (=> (and (> x641 0) (< 0 1000000000000000000000000000)) (and (>= x641 (* (x369 x641 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x641 1000000000000000000000000000)) (- x641 1000000000000000000000000000)))) (x631 x641 1000000000000000000000000000) (x471 x641 1000000000000000000000000000)))
(assert (x133 x26 x171 x634 x164))
(assert (x133 x51 x26 x666 x258))
(assert (x321 (- x580 x26)))
(assert (x651 x142))
(assert (x233 x34 (- x18 x671)))
(assert (x233 x324 (- x90 x34)))
(assert (x233 x51 x26))
(assert (= x691 (x349 (x68 x691))))
(assert (x321 (- x90 x634)))
(assert (x321 (- x51 x444)))
(assert (x321 (- x348 x26)))
(assert (x321 (- x465 x348)))
(assert (x321 (- x330 x26)))
(assert (= (=> (and (and (= (x9 160) x481) (= x500 (x719 1461501637330902918203684832716283019655932542975 x300)) (> 4294967296 x301) (= (x719 1461501637330902918203684832716283019655932542975 x637) x331) (not (= x584 0)) (= x584 (x360 (x68 x500)))) (and (and (and (= x86 (or x603 x71)) (>= x18 0) (not (> 1865579259 x107)) (<= 0 x425) (= x47 x162) (> x487 0) (= x162 (x369 x335 1000000000000000000000000000)) (= 1889567281 x107) (not (= x107 1865579259)) (= (x369 115792089237316195423570985008687907853269984665640064039457584007913129639935 x34) x661) (< x425 1461501637330902918203684832716283019655932542976) (= (not x470) x603) (= x470 (> x18 x661)) (= (x598 (+ x184 500000000000000000000000000)) x335) (not (< x107 826074471)) (= (x717 (x683 x18 x34)) x184) (= (= x34 0) x71) (= x177 x152) (>= 1461501637330902918203684832716283019655932542975 x425) (<= x18 340282366920938463463374607431768211455) (= x315 (x566 (x68 x152) (x52 52) 0)) (< 0 x103) (= x34 (x491 128)) (= x487 (x360 (x68 x452))) (<= x152 1461501637330902918203684832716283019655932542975) (= x18 (x33 x315)) (> 2113256763 x107) (< x18 340282366920938463463374607431768211456) (= (ite x86 1 0) x103) (= x15 x656)) (and (= x716 (x369 x26 2)) (<= 0 x51) (= (< x627 x512) x317) (= (x566 (x68 x398) (x52 52) 0) x346) (= (x369 115792089237316195423570985008687907853269984665640064039457584007913129639935 x26) x572) (= x350 (x717 (* 1000000000000000000000000000 x512))) (>= 340282366920938463463374607431768211455 x46) (not (> 2757214935 x120)) (= x706 (< x220 x171)) (<= x398 1461501637330902918203684832716283019655932542975) (= x180 x50) (>= 340282366920938463463374607431768211455 x600) (= x457 1) (= (x369 x83 1000000000000000000000000000) x521) (= x99 (+ x46 x478)) (= x398 x541) (= x232 0) (= x96 x8) (= (x566 (x68 x496) (x52 52) 0) x174) (>= 1461501637330902918203684832716283019655932542975 x143) (= (x369 x256 x26) x180) (= (ite x249 1 0) x585) (= (< x572 x51) x252) (>= x171 0) (> 3018967357 x120) (= (not x317) x11) (>= x143 0) (= x225 (= 0 x26)) (= x496 (x719 1461501637330902918203684832716283019655932542975 x201)) (= (ite x209 1 0) x534) (not (= x120 2757214935)) (<= 0 x600) (>= 340282366920938463463374607431768211455 x51) (= x594 (x630 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x272))) (= (= x694 0) x88) (= (x33 x506) x51) (>= x96 0) (= x96 (x665 x480)) (= (x33 x346) x171) (= x469 (+ x553 x704)) (>= x207 0) (= x250 (x566 (x68 x65) (x52 52) 0)) (= (x719 340282366920938463463374607431768211455 x129) x704) (= x143 x201) (>= 1461501637330902918203684832716283019655932542975 x589) (= x397 x235) (= 2835717307 x120) (= x267 (x717 (x683 x51 x26))) (= x581 (not x252)) (= (x566 (x68 x398) (x52 52) 0) x709) (= x509 x232) (= (x598 (+ x235 x647)) x512) (>= x234 0) (= (not x706) x522) (= x345 (x369 x270 1000000000000000000000000000)) (<= 0 x694) (= x65 (x719 1461501637330902918203684832716283019655932542975 x201)) (< 0 x110) (>= 1461501637330902918203684832716283019655932542975 x694) (< 0 x74) (> 340282366920938463463374607431768211456 x207) (>= 1461501637330902918203684832716283019655932542975 x234) (= (- x469 x173) x169) (= (x665 x709) x600) (= (x598 (+ x350 x716)) x256) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x96 x180)) (= x30 x589) (= x220 (x369 115792089237316195423570985008687907853269984665640064039457584007913129639935 x26)) (not (< 340282366920938463463374607431768211455 x180)) (= (x630 (- x207 x180)) x129) (= (x369 x26 2) x272) (<= 0 x425) (= x502 (= 0 x26)) (= (x598 (+ x267 500000000000000000000000000)) x83) (= x30 x602) (= x627 (x369 x594 1000000000000000000000000000)) (= x585 0) (>= 1461501637330902918203684832716283019655932542975 x425) (= (= x591 x545) x525) (= x480 (x566 (x68 x398) (x52 52) 0)) (= (or x466 x381) x249) (> x534 0) (>= 340282366920938463463374607431768211455 x171) (= x506 (x566 (x68 x22) (x52 52) 0)) (not (> 2113256763 x120)) (not (< x207 x180)) (<= x173 340282366920938463463374607431768211455) (= x110 (ite x696 1 0)) (= (= x169 x478) x474) (= (- x99 x600) x545) (= (x360 (x68 x452)) x74) (= (x116 128) x26) (= x696 (or x581 x225)) (= x209 (or x522 x502)) (>= 340282366920938463463374607431768211455 x207) (> 1461501637330902918203684832716283019655932542976 x425) (not (< 340282366920938463463374607431768211455 x512)) x525 (>= 340282366920938463463374607431768211455 x96) (= x270 (x598 (+ x59 500000000000000000000000000))) x474 (= (x33 x250) x173) (= x466 (not x11)) (= x46 (+ x8 x50)) (> 340282366920938463463374607431768211456 x171) (>= x589 0) (< x96 340282366920938463463374607431768211456) (>= x173 0) (= x647 x383) (= x22 (x719 1461501637330902918203684832716283019655932542975 x201)) (= x59 (x717 (x683 x171 x26))) (> 1461501637330902918203684832716283019655932542976 x694) (= x638 x47) (< x51 340282366920938463463374607431768211456) (= x381 (= x26 0)) (= (x33 x174) x207))) (and (> 2113256763 x439) (<= x57 1461501637330902918203684832716283019655932542975) (<= 0 x565) (not (< x439 826074471)) (< 0 x576) (= (x598 (+ x484 500000000000000000000000000)) x570) (= (x360 (x68 x452)) x160) (= (x717 (x683 x565 x305)) x484) (= x215 (or x216 x586)) (= (= x305 0) x216) (= x565 (x33 x475)) (= x363 x57) (= x305 (x642 128)) (> 340282366920938463463374607431768211456 x565) (= x558 (x369 x570 1000000000000000000000000000)) (= x15 x558) (= (not x105) x586) (not (= x439 1865579259)) (= 1889567281 x439) (= (x566 (x68 x57) (x52 52) 0) x475) (<= x425 1461501637330902918203684832716283019655932542975) (<= 0 x425) (= x576 (ite x215 1 0)) (= (< x12 x565) x105) (<= x565 340282366920938463463374607431768211455) (not (< x439 1865579259)) (< x425 1461501637330902918203684832716283019655932542976) (= x12 (x369 115792089237316195423570985008687907853269984665640064039457584007913129639935 x305)) (< 0 x160)))) (and (=> x88 x362) (=> (and (not x88) (and (and (= x282 (x360 (x68 x694))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x429) (= x172 (= x101 x398)) (not (= x282 0)) (>= x429 0) (= x101 (x719 1461501637330902918203684832716283019655932542975 x201)) (= x191 (x719 1461501637330902918203684832716283019655932542975 x201))) (or x172 (and (and (not (= 0 x503)) (= x503 (x360 (x68 x694)))) (not x172))))) x338))) x442))
(assert (x287 x671 x580 x565 x305))
(assert (x287 x412 x58 x565 x305))
(assert (x651 x661))
(assert (x233 x324 (- x330 x26)))
(assert (x133 x58 x412 x639 x465))
(assert (x133 x628 x176 x26 x51))
(assert (x233 x176 (- x628 x171)))
(assert (x133 x465 x639 x34 x18))
(assert (x133 x26 x51 x324 x330))
(assert (x651 x452))
(assert (x133 x639 x465 x51 x26))
(assert (x646 115792089237316195423570985008687907853269984665640064039457584007913129639935 x26))
(assert (= x551 (x349 (x68 x551))))
(assert (x233 x26 (- x51 x90)))
(assert (x287 x444 x654 x90 x324))
(assert (x233 x666 (- x258 x324)))
(assert (x651 x294))
(assert (x321 (- x654 x164)))
(assert (x133 x171 x26 x258 x666))
(assert (x233 x634 (- x164 x305)))
(assert (x233 x444 (- x348 x90)))
(assert (x651 x74))
(assert (x133 x34 x18 x628 x176))
(assert (x321 (- x634 x324)))
(assert (x233 x26 (- x51 x639)))
(assert (x233 x412 (- x58 x18)))
(assert (x651 x563))
(assert (x233 x330 (- x324 x671)))
(assert (x133 x164 x634 x654 x444))
(assert (x651 x413))
(assert (x133 x26 x171 x666 x258))
(assert (x133 x465 x639 x171 x26))
(assert (x133 x26 x171 x258 x666))
(assert (x233 x628 (- x176 x639)))
(assert (x133 x444 x654 x324 x330))
(assert (x321 (- x51 x412)))
(assert (= (x52 1889567281) (x68 1889567281)))
(assert (x233 x465 (- x639 x444)))
(assert (x651 x198))
(assert (x287 x90 x324 x412 x58))
(assert (x321 (- x176 x18)))
(assert (x321 (- x330 x171)))
(assert (x233 x164 (- x634 x176)))
(assert (x233 x258 (- x666 x465)))
(assert (x133 x639 x465 x628 x176))
(assert (x233 x565 (- x305 x90)))
(assert (x321 x380))
(assert (x321 (- x465 x258)))
(assert (x233 x34 (- x18 x330)))
(assert (x287 x671 x580 x51 x26))
(assert (x233 x305 (- x565 x634)))
(assert (x321 (- x654 x90)))
(assert (=> (>= 10000 x691) (= (x68 x691) (x52 x691))))
(assert (x133 x305 x565 x90 x324))
(assert (x651 x189))
(assert (x287 x666 x258 x639 x465))
(assert (x121 x570))
(assert (x321 (- x26 x348)))
(assert (x651 x26))
(assert (x233 x444 (- x348 x51)))
(assert (x233 x305 (- x565 x58)))
(assert (x287 x666 x258 x330 x324))
(assert (x679 x129))
(assert (x133 x465 x639 x666 x258))
(assert (x133 x465 x639 x26 x51))
(assert (x233 x634 (- x164 x90)))
(assert (x321 (- x654 x18)))
(assert (x233 x671 (- x580 x90)))
(assert (x321 (- x634 x305)))
(assert (x651 x152))
(assert (x287 x580 x671 x51 x26))
(assert (x287 x671 x580 x18 x34))
(assert (x321 (- x58 x26)))
(assert (x321 (- x628 x330)))
(assert (x133 x26 x171 x90 x324))
(assert (x651 x575))
(assert (x287 x164 x634 x654 x444))
(assert (x133 x18 x34 x654 x444))
(assert (x287 x26 x171 x580 x671))
(assert (x287 x348 x444 x51 x26))
(assert (x233 x34 (- x18 x58)))
(assert (x133 x305 x565 x465 x639))
(assert (x233 x90 (- x324 x639)))
(assert (x121 x671))
(assert (x718 x539))
(assert (x133 x324 x90 x258 x666))
(assert (x133 x171 x26 x330 x324))
(assert (x133 x324 x330 x51 x26))
(assert (x133 x412 x58 x324 x90))
(assert (=> (>= 10000 x140) (= (x52 x140) (x68 x140))))
(assert (x321 x628))
(assert (x233 x305 (- x565 x258)))
(assert (x651 x188))
(assert (x651 x602))
(assert (x287 x26 x171 x90 x324))
(assert (x321 (- x666 x330)))
(assert (x321 (- x18 x628)))
(assert (x321 (- x348 x305)))
(assert (x651 x509))
(assert (x233 x26 (- x171 x639)))
(assert (x133 x671 x580 x330 x324))
(assert (x133 x634 x164 x348 x444))
(assert (x321 (- x258 x51)))
(assert (x321 (- x90 x444)))
(assert (x133 x90 x324 x34 x18))
(assert (x121 x198))
(assert (x233 x465 (- x639 x34)))
(assert (x233 x639 (- x465 x348)))
(assert (x287 x171 x26 x634 x164))
(assert (x321 x323))
(assert (x651 x652))
(assert (x321 (- x565 x176)))
(assert (x233 x58 (- x412 x34)))
(assert (x133 x26 x51 x634 x164))
(assert (x321 (- x565 x58)))
(assert (x133 x258 x666 x305 x565))
(assert (x651 x663))
(assert (x321 (- x305 x444)))
(assert (x651 x280))
(assert (x321 (- x348 x330)))
(assert (x287 x324 x90 x634 x164))
(assert (x133 x639 x465 x348 x444))
(assert (x233 x565 (- x305 x580)))
(assert (x133 x465 x639 x412 x58))
(assert (x233 x18 (- x34 x412)))
(assert (x651 x461))
(assert (x287 x51 x26 x666 x258))
(assert (x321 (- x18 x164)))
(assert (x133 x444 x348 x465 x639))
(assert (x133 x305 x565 x444 x348))
(assert (x651 x49))
(assert (x321 (- x34 x176)))
(assert (x651 x334))
(assert (x133 x412 x58 x18 x34))
(assert (x321 (- x324 x34)))
(assert (x233 x465 (- x639 x51)))
(assert (x287 x565 x305 x639 x465))
(assert (x133 x26 x51 x58 x412))
(assert (x651 x448))
(assert (x133 x171 x26 x164 x634))
(assert (x321 (- x348 x465)))
(assert (x233 x348 (- x444 x324)))
(assert (x321 (- x90 x565)))
(assert (x233 x324 (- x90 x465)))
(assert (x287 x90 x324 x348 x444))
(assert (x287 x171 x26 x90 x324))
(assert (x321 (- x628 x565)))
(assert (x321 (- x18 x580)))
(assert (x133 x176 x628 x330 x324))
(assert (x321 (- x171 x580)))
(assert (x233 x164 (- x634 x171)))
(assert (x233 x171 (- x26 x90)))
(assert (x646 115792089237316195423570985008687907853269984665640064039457584007913129639935 x164))
(assert (x133 x324 x90 x164 x634))
(assert (x651 x333))
(assert (x233 x164 (- x634 x565)))
(assert (= (x349 (x68 x65)) x65))
(assert (x287 x330 x324 x666 x258))
(assert (x133 x444 x654 x324 x90))
(assert (x133 x18 x34 x258 x666))
(assert (x133 x565 x305 x58 x412))
(assert (x321 (- x348 x51)))
(assert (x233 x671 (- x580 x324)))
(assert (x651 x58))
(assert (x651 x186))
(assert (x651 x425))
(assert (x321 1000000000000000000000000000))
(assert (x233 x324 (- x90 x412)))
(assert (x121 x465))
(assert (x233 x51 (- x26 x628)))
(assert (x133 x164 x634 x176 x628))
(assert (x133 x90 x324 x639 x465))
(assert (x133 x412 x58 x26 x171))
(assert (x287 x324 x330 x412 x58))
(assert (x133 x171 x26 x444 x348))
(assert (= x142 (x349 (x68 x142))))
(assert (x133 x51 x26 x324 x90))
(assert (x651 x270))
(assert (x233 x654 (- x444 x639)))
(assert (x133 x654 x444 x634 x164))
(assert (x233 x26 (- x51 x465)))
(assert (x321 (- x258 x26)))
(assert (x321 (- x412 x330)))
(assert (x233 x258 (- x666 x305)))
(assert (x718 x140))
(assert (x233 x324 (- x330 x666)))
(assert (= 2757214935 (x349 (x52 2757214935))))
(assert (x133 x324 x330 x671 x580))
(assert (x321 x330))
(assert (x233 x444 (- x654 x324)))
(assert (x321 (- x671 x565)))
(assert (x321 (- x26 x580)))
(assert (x651 x210))
(assert (x287 x324 x330 x348 x444))
(assert (x133 x639 x465 x171 x26))
(assert (x651 x453))
(assert (= 1865579259 (x349 (x52 1865579259))))
(assert (x651 x429))
(assert (x133 x330 x324 x58 x412))
(assert (x233 x324 (- x90 x628)))
(assert (x321 (- x444 x565)))
(assert (x133 x164 x634 x671 x580))
(assert (x233 x330 (- x324 x634)))
(assert (= x238 (and x669 x172)))
(assert (x133 x330 x324 x565 x305))
(assert (x133 x444 x654 x639 x465))
(assert (x321 (- x324 x671)))
(assert (x233 x18 (- x34 x348)))
(assert (x287 x671 x580 x330 x324))
(assert (x133 x580 x671 x171 x26))
(assert (x651 x639))
(assert (x233 x348 (- x444 x171)))
(assert (x321 (- x26 x330)))
(assert (x651 x256))
(assert (x133 x634 x164 x628 x176))
(assert (x287 x465 x639 x51 x26))
(assert (x651 x327))
(assert (x233 x90 (- x324 x348)))
(assert (x651 x415))
(assert (x651 x340))
(assert (x133 x324 x330 x26 x51))
(assert (x321 (- x171 x324)))
(assert (x233 x164 (- x634 x580)))
(assert (x321 (- x666 x26)))
(assert (x233 x26 (- x51 x666)))
(assert (x321 (- x34 x58)))
(assert (x233 x324 (- x90 x639)))
(assert (x651 x498))
(assert (x321 (- x90 x164)))
(assert (x133 x305 x565 x324 x330))
(assert (x321 (- x465 x330)))
(assert (x321 (- x34 x671)))
(assert (x233 x324 (- x330 x34)))
(assert (x321 (- x58 x34)))
(assert (= (x52 94699471215667416670508682402181198833950827816622411988269365108481485438976) (x68 94699471215667416670508682402181198833950827816622411988269365108481485438976)))
(assert (x321 (- x305 x412)))
(assert (x133 x580 x671 x324 x330))
(assert (x605 x129))
(assert (x233 x444 (- x348 x305)))
(assert (x646 x139 x444))
(assert (x133 x444 x348 x164 x634))
(assert (x133 x465 x639 x444 x654))
(assert (x321 (- x171 x258)))
(assert (x233 x412 (- x58 x26)))
(assert (x287 x164 x634 x18 x34))
(assert (x321 (- x666 x90)))
(assert (x321 (- x51 x671)))
(assert (=> (<= x142 10000) (= (x52 x142) (x68 x142))))
(assert (x651 x70))
(assert (x233 x639 (- x465 x18)))
(assert (x287 x412 x58 x90 x324))
(assert (= true x2))
(assert (x651 x143))
(assert (=> (>= 10000 x179) (= (x68 x179) (x52 x179))))
(assert (x651 x574))
(assert (x651 x468))
(assert (x321 (- x176 x465)))
(assert (= (=> (and (and (and (>= 340282366920938463463374607431768211455 x412) (= x297 x616) (= (x369 x448 1000000000000000000000000000) x281) (= x446 x63) (>= 1461501637330902918203684832716283019655932542975 x446) (= (= x58 0) x554) (= (or x554 x407) x27) (not (= 1865579259 x701)) (> x689 0) (not (> 826074471 x701)) (< x425 1461501637330902918203684832716283019655932542976) (= (x629 128) x58) (= (x360 (x68 x452)) x78) (<= 0 x412) (> 2113256763 x701) (> 340282366920938463463374607431768211456 x412) (= (x263 x543) x412) (< 0 x78) (>= 1461501637330902918203684832716283019655932542975 x425) (= (x566 (x68 x446) (x52 52) 0) x543) (= x448 (x598 (+ 500000000000000000000000000 x354))) (= (ite x27 1 0) x689) (= x354 (x717 (x683 x412 x58))) (= x476 (< x48 x412)) (= (not x476) x407) (= x85 x281) (not (> 1865579259 x701)) (= 1889567281 x701) (>= x425 0) (= (x369 115792089237316195423570985008687907853269984665640064039457584007913129639935 x58) x48)) (and (and (not (> 826074471 x227)) (= (< x426 x176) x648) (= x158 (= 0 x628)) (< 0 x320) (> x313 0) (< x227 2113256763) (= x157 (and x418 x532)) (not (= 1865579259 x227)) (= x177 x140) (= x245 (not x648)) (= (x566 (x68 x140) (x52 52) 0) x357) (= x227 1889567281) (<= x425 1461501637330902918203684832716283019655932542975) (= x628 (x577 128)) (= (or x158 x245) x458) (= x693 (x598 (+ x94 500000000000000000000000000))) (= x85 x285) (= x313 (ite x458 1 0)) (> 1461501637330902918203684832716283019655932542976 x425) (= (x360 (x68 x452)) x320) (not (< x227 1865579259)) (>= 340282366920938463463374607431768211455 x176) (= (x369 115792089237316195423570985008687907853269984665640064039457584007913129639935 x628) x426) (= x94 (x717 (x683 x176 x628))) (= x292 x294) (<= 0 x425) (= x532 (= x285 x297)) (>= 1461501637330902918203684832716283019655932542975 x140) (>= x176 0) (< x176 340282366920938463463374607431768211456) (= (x263 x357) x176) (= x292 (x369 x693 1000000000000000000000000000))) (and (and (= x118 (x719 1461501637330902918203684832716283019655932542975 x637)) (= (x360 (x68 x452)) x494) (= (+ x53 x499) x199) (= x663 (ite x131 1 0)) (= x154 x445) (= x380 x397) (>= 340282366920938463463374607431768211455 x348) (>= x712 0) (< x348 340282366920938463463374607431768211456) (= (x566 (x68 x539) (x52 52) 0) x135) (= x368 (x566 (x68 x691) (x52 52) 0)) (= x667 (= x325 x309)) (= x687 (ite x632 1 0)) (= x654 (x263 x135)) (= x63 x309) (> 1461501637330902918203684832716283019655932542976 x694) (not (= 2757214935 x200)) x343 x667 (<= x154 340282366920938463463374607431768211455) (= x644 (ite x361 1 0)) (= x385 (= x444 0)) (= x401 (not x62)) (= (- x199 x95) x3) (= (x635 128) x444) (= x632 (or x127 x392)) (= (x369 x444 2) x662) (<= x451 1461501637330902918203684832716283019655932542975) (= x154 (x493 x434)) (< x149 340282366920938463463374607431768211456) (= (x717 (x683 x654 x444)) x10) (not (< 340282366920938463463374607431768211455 x537)) (< x425 1461501637330902918203684832716283019655932542976) (< x154 340282366920938463463374607431768211456) (= x177 x691) (= x221 (x717 (* 1000000000000000000000000000 x380))) (< x200 3018967357) (not (> x537 x149)) (< 0 x494) (= (x717 (x683 x348 x444)) x307) (= (x369 x25 1000000000000000000000000000) x413) (>= 1461501637330902918203684832716283019655932542975 x691) (>= x178 0) (not (< 340282366920938463463374607431768211455 x380)) (= (x566 (x68 x109) (x52 52) 0) x183) (= x131 (or x161 x385)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x154 x537)) (= x490 x637) (= (x493 x657) x712) (<= 0 x425) (<= 0 x654) (= x619 x593) (= (> x380 x692) x38) (= (+ x7 x445) x518) (not (> 2757214935 x200)) (= x66 (- x31 x712)) (>= 1461501637330902918203684832716283019655932542975 x178) (= (x630 (- x149 x537)) x14) (= (x263 x183) x149) (= x674 (= x444 0)) (= x676 (x566 (x68 x118) (x52 52) 0)) (<= 0 x95) (= (or x401 x674) x361) (= 0 x136) (= (= 0 x694) x409) (= x325 x201) (= x253 (= x3 x308)) (not (> 2113256763 x200)) (<= x518 340282366920938463463374607431768211455) (= (x598 (+ 500000000000000000000000000 x10)) x25) (= (x566 (x68 x691) (x52 52) 0) x434) (= (not x400) x392) (= x617 (= x123 x415)) (< 0 x663) (= (= 0 x444) x127) (>= 1461501637330902918203684832716283019655932542975 x694) (= x468 (x598 (+ 500000000000000000000000000 x307))) (= x87 x123) (= (x369 x468 1000000000000000000000000000) x187) (>= x619 0) (= x161 (not x206)) (= x139 (x598 (+ x221 x356))) (= x422 (x369 115792089237316195423570985008687907853269984665640064039457584007913129639935 x444)) (= (not x38) x62) (>= x451 0) (= 1 x604) (= x343 (and x157 x617)) x253 (>= 1461501637330902918203684832716283019655932542975 x425) (= x593 x336) (< 0 x687) (= (x369 x444 2) x356) (= x539 (x719 1461501637330902918203684832716283019655932542975 x637)) (= x348 (x263 x368)) (<= x619 1461501637330902918203684832716283019655932542975) (= (x369 115792089237316195423570985008687907853269984665640064039457584007913129639935 x444) x608) (>= x694 0) (>= 340282366920938463463374607431768211455 x149) (<= 0 x154) (<= 0 x348) (<= 0 x149) (<= x712 340282366920938463463374607431768211455) (= (x719 1461501637330902918203684832716283019655932542975 x637) x109) (= x644 0) (>= 340282366920938463463374607431768211455 x654) (= x7 x537) (= (x566 (x68 x691) (x52 52) 0) x657) x274 (= (< x608 x654) x400) (< x654 340282366920938463463374607431768211456) (>= 340282366920938463463374607431768211455 x95) (= x53 (x719 340282366920938463463374607431768211455 x14)) (= (= x505 x490) x61) (= x136 x711) (= x692 (x369 x612 1000000000000000000000000000)) (= x637 x178) (= (+ x518 x308) x31) (= (= x66 x286) x274) (= (x263 x676) x95) (= (x630 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x662)) x612) x61 (= (> x348 x422) x206) (= x200 2835717307) (= x505 x363) (= (x369 x139 x444) x537)) (and (= (x360 (x68 x452)) x75) (<= x425 1461501637330902918203684832716283019655932542975) (= (x566 (x68 x310) (x52 52) 0) x573) (<= x580 340282366920938463463374607431768211455) (= (< x609 x580) x702) (>= x580 0) (= (x717 (x683 x580 x671)) x231) (= x261 x87) (= 1889567281 x367) (= x671 (x527 128)) (= (or x291 x492) x377) (= x310 x541) (= x294 x415) (>= x425 0) (>= 1461501637330902918203684832716283019655932542975 x310) (= (= x671 0) x492) (> x620 0) (not (= 1865579259 x367)) (= x620 (ite x377 1 0)) (= x261 (x369 x482 1000000000000000000000000000)) (= (x263 x573) x580) (= (x598 (+ 500000000000000000000000000 x231)) x482) (> x75 0) (not (< x367 826074471)) (= x291 (not x702)) (> 340282366920938463463374607431768211456 x580) (= x609 (x369 115792089237316195423570985008687907853269984665640064039457584007913129639935 x671)) (< x367 2113256763) (> 1461501637330902918203684832716283019655932542976 x425) (not (> 1865579259 x367)))))) (and (= x102 (< x461 x666)) (= (= x293 x337) x472) (= x138 x652) (= x182 (x369 x198 1000000000000000000000000000)) (= (and x595 x590) x273) (>= 1461501637330902918203684832716283019655932542975 x452) (>= x529 0) (= x142 x425) (= x188 x363) (>= x541 0) (= x337 x177) (not (> 826074471 x341)) (= x69 x514) (= x595 (not (= x29 x399))) (<= 0 x379) (<= 0 x425) (= x55 x541) (>= 255 x529) (= (or x165 x536) x98) (>= 1461501637330902918203684832716283019655932542975 x425) (> 340282366920938463463374607431768211456 x666) (= x175 x379) (= x63 x611) (= x578 (= x542 x472)) (<= 0 x652) (> 2113256763 x341) (>= x564 0) (> 1461501637330902918203684832716283019655932542976 x425) (= x341 1889567281) x28 (>= x363 0) (= (x566 (x68 x188) (x52 52) 0) x141) (<= 0 x666) (<= x363 1461501637330902918203684832716283019655932542975) (<= 0 x694) (>= 1461501637330902918203684832716283019655932542975 x652) (= x344 (x524 (x68 x452))) (>= 1461501637330902918203684832716283019655932542975 x425) (= x126 (and x464 x273)) (= x536 (= x258 0)) (>= x177 0) (= x177 x353) (>= 1461501637330902918203684832716283019655932542975 x694) (= x363 x399) (= x419 x63) (= x461 (x369 115792089237316195423570985008687907853269984665640064039457584007913129639935 x258)) x266 (not (= x341 1865579259)) (not (< x341 1865579259)) (= (and x126 x578) x418) (= x299 x541) (= x29 x541) (> x142 0) (>= 1461501637330902918203684832716283019655932542975 x564) (= x464 (not (= x419 x353))) (= x514 x714) (= x590 (and x477 x244)) (<= x379 1461501637330902918203684832716283019655932542975) (= x104 x363) (not (= x142 x452)) (>= 1461501637330902918203684832716283019655932542975 x541) (= (x119 128) x258) (<= 0 x344) (>= 1461501637330902918203684832716283019655932542975 x142) (= x435 x63) (= x28 (> (x360 (x68 x452)) 0)) (= x165 (not x102)) (>= x425 0) (= (x263 x141) x666) (= (x717 (x683 x666 x258)) x432) (<= x117 255) (>= 1461501637330902918203684832716283019655932542975 x188) (= (x369 x714 1000000000000000000000000000) x680) (<= 0 x63) (= x542 (= x435 x299)) (<= x666 340282366920938463463374607431768211455) (= x363 x293) (= (not (= x104 x611)) x477) (= x564 x637) (> x555 0) (= (> (x360 (x68 x142)) 0) x266) (= x201 x72) (>= x72 0) (<= 0 x117) (>= 1461501637330902918203684832716283019655932542975 x63) (= x659 x177) (= x244 (not (= x55 x659))) (= x333 (x524 (x68 x142))) (= x616 x182) (<= x498 1461501637330902918203684832716283019655932542975) (= x146 (x360 (x68 x452))) (> x146 0) (< 0 x452) (>= 1461501637330902918203684832716283019655932542975 x72) (<= x177 1461501637330902918203684832716283019655932542975) (= (x598 (+ x432 500000000000000000000000000)) x198) (>= x333 0) (>= x498 0) (= (ite x98 1 0) x555) (= x382 1000000000000000000000000000))) (and (=> x409 x588) (=> (and (not x409) (and (and (= (x719 1461501637330902918203684832716283019655932542975 x637) x643) (= x713 (x719 1461501637330902918203684832716283019655932542975 x637)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x429) (= (= x691 x713) x526) (= (x360 (x68 x694)) x246) (<= 0 x429) (not (= x246 0))) (or (and (not x526) (and (not (= 0 x520)) (= x520 (x360 (x68 x694))))) x526))) x378))) x202))
(assert (x233 x330 (- x324 x164)))
(assert (x233 x26 (- x51 x634)))
(assert (x321 (- x324 x666)))
(assert (x718 x691))
(assert (x133 x654 x444 x565 x305))
(assert (x321 (- x58 x639)))
(assert (x287 x628 x176 x18 x34))
(assert (and (x279 3 x640) (= (* 3 x640) (x683 3 x640)) (x682 3 x640) (x677 3 x640) (x700 3 x640) (x151 3 x640) (and (= (- (* 3 x640) (* x640 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x683 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x640)) (= (x683 3 (- x640 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x640 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3)) (= (- (* (- x640 115792089237316195423570985008687907853269984665640564039457584007913129639936) 3) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x640 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x683 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x640 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (x233 x90 (- x324 x164)))
(assert (= (x349 (x68 x539)) x539))
(assert (x321 (- x34 x444)))
(assert (x287 x164 x634 x171 x26))
(assert (x233 x639 (- x465 x654)))
(assert (x233 x18 (- x34 x639)))
(assert (x133 x348 x444 x90 x324))
(assert (x651 x620))
(assert (x233 x18 x34))
(assert (x287 x634 x164 x654 x444))
(assert (x233 x171 (- x26 x444)))
(assert (x651 x714))
(assert (x287 x671 x580 x639 x465))
(assert (x233 x26 (- x51 x258)))
(assert (x133 x34 x18 x176 x628))
(assert (x670 x300))
(assert (x133 x465 x639 x444 x348))
(assert (x321 (- x164 x628)))
(assert (x287 x580 x671 x90 x324))
(assert (x287 x90 x324 x176 x628))
(assert (x133 x164 x634 x444 x654))
(assert (x651 x537))
(assert (x133 x51 x26 x634 x164))
(assert (x321 (- x324 x654)))
(assert (x233 x324 (- x90 x305)))
(assert (x233 x330 (- x324 x465)))
(assert (x321 (- x18 x465)))
(assert (x233 x671 (- x580 x639)))
(assert (x233 x324 (- x90 x26)))
(assert (x233 x666 (- x258 x164)))
(assert (x133 x671 x580 x634 x164))
(assert (x651 x18))
(assert (x233 x18 (- x34 x444)))
(assert (x233 x444 (- x654 x90)))
(assert (x651 x286))
(assert (x121 x83))
(assert (x651 x697))
(assert (x287 x51 x26 x580 x671))
(assert (x651 x585))
(assert (x651 x149))
(assert (x233 x666 (- x258 x26)))
(assert (x133 x324 x90 x34 x18))
(assert (x133 x164 x634 x444 x348))
(assert (x133 x305 x565 x634 x164))
(assert (x133 x348 x444 x634 x164))
(assert (x233 x176 (- x628 x26)))
(assert (x321 (- x465 x176)))
(assert (x133 x666 x258 x324 x90))
(assert (x133 x330 x324 x51 x26))
(assert (x233 x671 (- x580 x51)))
(assert (x133 x51 x26 x330 x324))
(assert (x651 x446))
(assert (x233 x412 (- x58 x90)))
(assert (x287 x666 x258 x565 x305))
(assert (x321 (- x412 x18)))
(assert (x133 x324 x90 x444 x654))
(assert (x233 x348 (- x444 x26)))
(assert (x233 x164 (- x634 x18)))
(assert (= (x349 (x68 x152)) x152))
(assert (x718 x152))
(assert (x233 x634 (- x164 x412)))
(assert (x651 x570))
(assert (x321 (- x654 x330)))
(assert (x133 x634 x164 x580 x671))
(assert (x233 x34 (- x18 x639)))
(assert (x133 x628 x176 x51 x26))
(assert (x233 x330 (- x324 x34)))
(assert (x321 (- x171 x164)))
(assert (x133 x580 x671 x26 x51))
(assert (x321 (- x34 x348)))
(assert (x133 x176 x628 x18 x34))
(assert (x287 x171 x26 x348 x444))
(assert (x133 x324 x330 x565 x305))
(assert (x233 x176 (- x628 x465)))
(assert (x287 x18 x34 x639 x465))
(assert (x651 x293))
(assert (= (x349 (x52 2835717307)) 2835717307))
(assert (and (x84 x714 1000000000000000000000000000) (x170 x714 1000000000000000000000000000) (=> (and (> x714 0) (< 0 1000000000000000000000000000)) (and (>= x714 (* (x369 x714 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x714 1000000000000000000000000000)) (- x714 1000000000000000000000000000)))) (x631 x714 1000000000000000000000000000) (x471 x714 1000000000000000000000000000)))
(assert (x233 x58 (- x412 x164)))
(assert (x233 x258 (- x666 x51)))
(assert (= (x349 (x52 96761774277087264896447800937287851747744109681099051503132604413955201302528)) 96761774277087264896447800937287851747744109681099051503132604413955201302528))
(assert (= x73 (and (not x172) x669)))
(assert (x321 (- x330 x58)))
(assert (x233 x324 (- x90 x654)))
(assert (x321 (- x258 x90)))
(assert (x651 x626))
(assert (x133 x639 x465 x671 x580))
(assert (x321 (- x324 x51)))
(assert (x651 x433))
(assert (x651 x397))
(assert (x133 x565 x305 x90 x324))
(assert (x646 x256 x26))
(assert (x321 (- x565 x90)))
(assert (x321 (- x666 x634)))
(assert (x287 x330 x324 x51 x26))
(assert (x651 x568))
(assert (x718 x310))
(assert (x651 x345))
(assert (x321 x634))
(assert (x133 x176 x628 x51 x26))
(assert (x133 x324 x90 x634 x164))
(assert (x233 x465 (- x639 x18)))
(assert (x321 (- x634 x348)))
(assert (x321 (- x465 x580)))
(assert (x133 x634 x164 x666 x258))
(assert (x133 x34 x18 x164 x634))
(assert (x651 x627))
(assert (x321 (- x565 x330)))
(assert (x321 (- x258 x34)))
(assert (x287 x654 x444 x171 x26))
(assert (x133 x324 x90 x465 x639))
(assert (x321 (- x465 x324)))
(assert (x646 115792089237316195423570985008687907853269984665640064039457584007913129639935 x305))
(assert (= (x68 1461501637330902918203684832716283019655932542975) (x52 1461501637330902918203684832716283019655932542975)))
(assert (x133 x90 x324 x654 x444))
(assert (x321 (- x90 x412)))
(assert (x133 x639 x465 x565 x305))
(assert (x651 x129))
(assert (x321 (- x164 x324)))
(assert (x651 x30))
(assert (x651 x272))
(assert (x233 x580 (- x671 x330)))
(assert (x651 x363))
(assert (x133 x465 x639 x348 x444))
(assert (x651 x281))
(assert (x233 x324 (- x90 x565)))
(assert (x321 (- x639 x348)))
(assert (x651 x94))
(assert (x233 x324 (- x90 x348)))
(assert (= x599 (and x88 x488)))
(assert (x133 x654 x444 x639 x465))
(assert (x133 x324 x90 x18 x34))
(assert (x233 x258 (- x666 x565)))
(assert (x321 (- x26 x444)))
(assert (x651 x426))
(assert (x233 x639 (- x465 x628)))
(assert (x321 (- x324 x18)))
(assert (x133 x444 x348 x26 x171))
(assert (x321 (- x90 x305)))
(assert (= x488 (or x424 x229)))
(assert (x321 (- x171 x666)))
(assert (x651 x224))
(assert (x233 x634 (- x164 x324)))
(assert (x321 (- x634 x51)))
(assert (x651 x653))
(assert (x321 (- x666 x565)))
(assert (x233 x348 (- x444 x34)))
(assert (x133 x465 x639 x305 x565))
(assert (x233 x565 (- x305 x164)))
(assert (x133 x26 x171 x671 x580))
(assert (x133 x666 x258 x171 x26))
(assert (x133 x330 x324 x18 x34))
(assert (x287 x34 x18 x176 x628))
(assert (x651 x521))
(assert (x233 x666 (- x258 x34)))
(assert (x287 x90 x324 x565 x305))
(assert (x287 x305 x565 x654 x444))
(assert (x287 x634 x164 x565 x305))
(assert (= x229 (or x166 x557)))
(assert (x287 x324 x330 x51 x26))
(assert (x321 (- x634 x666)))
(assert (x287 x639 x465 x565 x305))
(assert (and (x84 x693 1000000000000000000000000000) (x170 x693 1000000000000000000000000000) (=> (and (> x693 0) (< 0 1000000000000000000000000000)) (and (>= x693 (* (x369 x693 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x693 1000000000000000000000000000)) (- x693 1000000000000000000000000000)))) (x631 x693 1000000000000000000000000000) (x471 x693 1000000000000000000000000000)))
(assert (x651 x713))
(assert (x121 x708))
(assert (x321 (- x465 x444)))
(assert (x133 x26 x51 x348 x444))
(assert (x133 x465 x639 x258 x666))
(assert (x287 x176 x628 x18 x34))
(assert (x133 x444 x348 x324 x90))
(assert (x287 x305 x565 x330 x324))
(assert (x651 x643))
(assert (x651 x593))
(assert (x651 x612))
(assert (x233 x258 (- x666 x18)))
(assert (x233 x171 (- x26 x628)))
(assert (x133 x258 x666 x90 x324))
(assert (x321 (- x580 x465)))
(assert (x651 x65))
(assert (x233 x444 (- x654 x164)))
(assert (= (x349 (x68 x163)) x163))
(assert (x321 (- x565 x412)))
(assert (and (x84 x448 1000000000000000000000000000) (x170 x448 1000000000000000000000000000) (=> (and (> x448 0) (< 0 1000000000000000000000000000)) (and (>= x448 (* (x369 x448 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x448 1000000000000000000000000000)) (- x448 1000000000000000000000000000)))) (x631 x448 1000000000000000000000000000) (x471 x448 1000000000000000000000000000)))
(assert (x287 x324 x90 x654 x444))
(assert (x321 (- x654 x51)))
(assert (= (x68 96761774277087264896447800937287851747744109681099051503132604413955201302528) (x52 96761774277087264896447800937287851747744109681099051503132604413955201302528)))
(assert (x133 x444 x654 x34 x18))
(assert (x321 x654))
(assert (x321 (- x324 x164)))
(assert (x133 x90 x324 x628 x176))
(assert (x233 x634 (- x164 x348)))
(assert (x133 x634 x164 x330 x324))
(assert (x287 x305 x565 x412 x58))
(assert (x233 x639 (- x465 x412)))
(assert (x321 (- x671 x639)))
(assert (x321 (- x58 x164)))
(assert (x233 x565 (- x305 x628)))
(assert (x233 x34 (- x18 x348)))
(assert (x287 x34 x18 x90 x324))
(assert (x321 (- x628 x164)))
(assert (x233 x330 (- x324 x26)))
(assert (x233 x26 (- x51 x580)))
(assert (x651 x551))
(assert (x651 x323))
(assert (x287 x324 x330 x171 x26))
(assert (x233 x26 (- x171 x412)))
(assert (x321 (- x666 x305)))
(assert (x233 x444 (- x654 x639)))
(assert (x233 x90 (- x324 x412)))
(assert (x233 x164 (- x634 x330)))
(assert (x287 x444 x654 x565 x305))
(assert (x651 x139))
(assert (x651 x59))
(assert (and (x84 x482 1000000000000000000000000000) (x170 x482 1000000000000000000000000000) (=> (and (> x482 0) (< 0 1000000000000000000000000000)) (and (>= x482 (* (x369 x482 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x482 1000000000000000000000000000)) (- x482 1000000000000000000000000000)))) (x631 x482 1000000000000000000000000000) (x471 x482 1000000000000000000000000000)))
(assert (x233 x58 (- x412 x465)))
(assert (x321 (- x465 x26)))
(assert (x133 x634 x164 x444 x654))
(assert (x321 x58))
(assert (x233 x330 (- x324 x666)))
(assert (x321 (- x90 x258)))
(assert (x287 x639 x465 x18 x34))
(assert (x321 (- x90 x666)))
(assert (x321 (- x51 x348)))
(assert (x133 x348 x444 x26 x171))
(assert (x233 x305 (- x565 x324)))
(assert (x133 x666 x258 x324 x330))
(assert (x233 x444 (- x348 x634)))
(assert (x651 x95))
(assert (x651 x97))
(assert (x233 x634 x164))
(assert (x233 x171 x26))
(assert (x287 x330 x324 x176 x628))
(assert (x233 x51 (- x26 x639)))
(assert (x287 x58 x412 x171 x26))
(assert (x651 x462))
(assert (x651 x553))
(assert (x133 x90 x324 x171 x26))
(assert (x233 x51 (- x26 x654)))
(assert (x287 x639 x465 x171 x26))
(assert (x133 x164 x634 x565 x305))
(assert (x321 x324))
(assert (x651 x325))
(assert (x321 (- x324 x444)))
(assert (x287 x324 x330 x666 x258))
(assert (x133 x444 x654 x26 x171))
(assert (x233 x580 (- x671 x305)))
(assert (x133 x444 x654 x171 x26))
(assert (x651 x227))
(assert (x133 x18 x34 x444 x654))
(assert (x651 x114))
(assert (x287 x34 x18 x654 x444))
(assert (x287 x628 x176 x51 x26))
(assert (x321 (- x305 x348)))
(assert (x287 x176 x628 x171 x26))
(assert (x321 (- x639 x671)))
(assert (x133 x164 x634 x348 x444))
(assert (x133 x444 x348 x324 x330))
(assert (x233 x634 (- x164 x444)))
(assert (x233 x654 (- x444 x18)))
(assert (x133 x176 x628 x634 x164))
(assert (x133 x654 x444 x18 x34))
(assert (x321 (- x34 x258)))
(assert (x133 x324 x330 x666 x258))
(assert (x133 x654 x444 x305 x565))
(assert (x233 x324 (- x90 x671)))
(assert (x233 x444 (- x348 x639)))
(assert (x651 x14))
(assert (x233 x58 (- x412 x51)))
(assert (x287 x26 x171 x412 x58))
(assert (x233 x628 (- x176 x330)))
(assert (x321 (- x465 x58)))
(assert (x233 x324 (- x330 x412)))
(assert (x321 (- x26 x258)))
(assert (x287 x330 x324 x634 x164))
(assert (x321 (- x565 x671)))
(assert (x133 x176 x628 x324 x330))
(assert (x651 x201))
(assert (x133 x34 x18 x634 x164))
(assert (x651 x160))
(assert (x133 x324 x330 x164 x634))
(assert (x133 x580 x671 x34 x18))
(assert (x233 x324 (- x90 x444)))
(assert (x133 x628 x176 x639 x465))
(assert (x133 x90 x324 x176 x628))
(assert (x651 x412))
(assert (x133 x412 x58 x639 x465))
(assert (x133 x654 x444 x164 x634))
(assert (x133 x324 x90 x305 x565))
(assert (x287 x58 x412 x634 x164))
(assert (x287 x444 x654 x171 x26))
(assert (x605 x637))
(assert (x233 x324 (- x330 x654)))
(assert (x233 x176 (- x628 x18)))
(assert (x233 x305 (- x565 x176)))
(assert (x133 x565 x305 x412 x58))
(assert (x233 x26 (- x171 x465)))
(assert (x121 x482))
(assert (x133 x26 x51 x444 x348))
(assert (x651 x123))
(assert (x651 x278))
(assert (x133 x34 x18 x671 x580))
(assert (= (x349 (x52 2113256763)) 2113256763))
(assert (x233 x34 (- x18 x164)))
(assert (x287 x305 x565 x639 x465))
(assert (and (x84 x270 1000000000000000000000000000) (x170 x270 1000000000000000000000000000) (=> (and (> x270 0) (< 0 1000000000000000000000000000)) (and (>= x270 (* (x369 x270 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x270 1000000000000000000000000000)) (- x270 1000000000000000000000000000)))) (x631 x270 1000000000000000000000000000) (x471 x270 1000000000000000000000000000)))
(assert (x321 (- x580 x634)))
(assert (x321 (- x412 x465)))
(assert (x133 x348 x444 x305 x565))
(assert (x321 (- x164 x18)))
(assert (x133 x26 x171 x628 x176))
(assert (x133 x634 x164 x444 x348))
(assert (x233 x324 (- x90 x51)))
(assert (x233 x324 (- x90 x58)))
(assert (x287 x34 x18 x639 x465))
(assert (x233 x671 (- x580 x330)))
(assert (x287 x628 x176 x330 x324))
(assert (x321 (- x176 x164)))
(assert (x233 x164 (- x634 x412)))
(assert (x133 x324 x330 x639 x465))
(assert (x233 x51 (- x26 x176)))
(assert (x133 x305 x565 x258 x666))
(assert (= (and x2 x409) x92))
(assert (x287 x565 x305 x412 x58))
(assert (x321 (- x51 x465)))
(assert (x287 x444 x348 x634 x164))
(assert (x233 x348 (- x444 x639)))
(assert (x133 x639 x465 x444 x348))
(assert (x133 x634 x164 x26 x171))
(assert (x133 x465 x639 x51 x26))
(assert (x233 x58 (- x412 x18)))
(assert (x321 (- x412 x164)))
(assert (x133 x634 x164 x654 x444))
(assert (x233 x565 (- x305 x671)))
(assert (x133 x444 x654 x330 x324))
(assert (x133 x654 x444 x330 x324))
(assert (=> (>= 10000 x163) (= (x52 x163) (x68 x163))))
(assert (and (x84 x224 1000000000000000000000000000) (x170 x224 1000000000000000000000000000) (=> (and (> x224 0) (< 0 1000000000000000000000000000)) (and (>= x224 (* (x369 x224 1000000000000000000000000000) 1000000000000000000000000000)) (> (* 1000000000000000000000000000 (x369 x224 1000000000000000000000000000)) (- x224 1000000000000000000000000000)))) (x631 x224 1000000000000000000000000000) (x471 x224 1000000000000000000000000000)))
(assert (x321 (- x176 x51)))
(assert (x133 x634 x164 x412 x58))
(assert (= (x349 (x52 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x651 x15))
(assert (x233 x628 (- x176 x34)))
(assert (x321 (- x671 x305)))
(assert (x321 (- x176 x34)))
(assert (x133 x26 x171 x639 x465))
(assert (x287 x565 x305 x580 x671))
(assert (=> (>= 10000 x152) (= (x52 x152) (x68 x152))))
(assert (x718 x57))
(assert (x233 x164 (- x634 x58)))
(assert (x233 x324 (- x330 x305)))
(assert (x651 x75))
(assert (x651 x81))
(assert (x133 x90 x324 x26 x51))
(assert (x287 x176 x628 x330 x324))
(assert (x321 (- x34 x324)))
(assert (x321 (- x634 x444)))
(assert (x133 x465 x639 x58 x412))
(assert (x321 (- x324 x58)))
(assert (x233 x176 (- x628 x565)))
(assert (x133 x176 x628 x305 x565))
(assert (x287 x90 x324 x580 x671))
(assert (and (x473 x637 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x637 (+ (* (x369 x637 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x257 x637 1461501637330902918203684832716283019655932542976)))) (x288 x637 1461501637330902918203684832716283019655932542976) (x440 x637 1461501637330902918203684832716283019655932542976)))
(assert (x651 x258))
(assert (x651 x499))
(assert (x133 x324 x90 x565 x305))
(assert (x321 (- x654 x324)))
(assert (x233 x164 (- x634 x258)))
(assert (x133 x58 x412 x171 x26))
(assert (x233 x171 (- x26 x176)))
(assert (x321 x640))
(assert (x233 x628 (- x176 x565)))
(assert (x133 x51 x26 x639 x465))
(assert (x233 x444 (- x348 x164)))
(assert (x287 x164 x634 x90 x324))
(assert (x233 x18 (- x34 x465)))
(assert (x133 x330 x324 x412 x58))
(assert (x321 (- x18 x258)))
(assert (x233 x34 (- x18 x444)))
(assert (x287 x412 x58 x171 x26))
(assert (x133 x18 x34 x412 x58))
(assert (x133 x26 x171 x324 x90))
(assert (x651 x654))
(assert (x133 x465 x639 x565 x305))
(assert (x287 x565 x305 x634 x164))
(assert (x133 x330 x324 x465 x639))
(assert (x233 x90 x324))
(assert (x321 (- x671 x324)))
(assert (x233 x34 (- x18 x324)))
(assert (x233 x305 (- x565 x412)))
(assert (=> (>= 10000 x551) (= (x68 x551) (x52 x551))))
(assert (x321 (- x18 x348)))
(assert (x287 x666 x258 x171 x26))
(assert (x287 x26 x51 x90 x324))
(assert (x321 (- x671 x34)))
(assert (x651 x45))
(assert (x233 x305 (- x565 x444)))
(assert (x133 x444 x654 x634 x164))
(assert (x651 x555))
(assert (x133 x324 x330 x348 x444))
(assert (x233 x171 (- x26 x58)))
(assert (x321 x34))
(assert (x233 x565 (- x305 x639)))
(assert (x233 x176 (- x628 x639)))
(assert (x133 x90 x324 x634 x164))
(assert (x233 x654 x444))
(assert (x321 (- x51 x580)))
(assert (x233 x324 (- x330 x171)))
(assert (x133 x34 x18 x324 x90))
(assert (x233 x26 (- x171 x348)))
(assert (x233 x26 (- x51 x348)))
(assert (x321 (- x305 x58)))
(assert (x133 x90 x324 x580 x671))
(assert (x133 x565 x305 x639 x465))
(assert (x321 (- x58 x18)))
(assert (x287 x444 x348 x639 x465))
(check-sat)
(exit)
