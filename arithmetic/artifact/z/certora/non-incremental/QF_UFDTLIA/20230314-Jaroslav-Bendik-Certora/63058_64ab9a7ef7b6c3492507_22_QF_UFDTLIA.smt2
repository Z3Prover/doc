(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x1476 0)) (((x963 (x1417 x1476) (x979 x1476) (x1263 x1476) (x1072 x1476) (x256 x1476) (x1534 x1476) (x1595 x1476) (x537 Int)) (x902 (x1499 Int)) (x1665 (x1786 x1476) (x1478 x1476) (x459 x1476) (x1252 x1476) (x178 Int)) (x1576 (x183 x1476) (x600 x1476) (x895 x1476) (x571 Int)) (x1265 (x590 x1476) (x432 x1476) (x875 x1476) (x946 x1476) (x482 x1476) (x962 x1476) (x661 Int)) (x646 (x1047 x1476) (x1510 Int)) (x1509 (x1314 x1476) (x1750 x1476) (x1615 Int)) (x375 (x286 x1476) (x329 x1476) (x164 x1476) (x53 x1476) (x614 x1476) (x1761 Int)))))
(declare-fun x1126 () x1476)
(declare-fun x1026 () Bool)
(declare-fun x953 () Bool)
(declare-fun x709 () Int)
(declare-fun x380 () Int)
(declare-fun x695 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x1104 () Int)
(declare-fun x177 () Int)
(declare-fun x947 () Int)
(declare-fun x762 () Bool)
(declare-fun x1378 () Int)
(declare-fun x777 () Bool)
(declare-fun x730 () Bool)
(declare-fun x1440 () Int)
(declare-fun x489 () Bool)
(declare-fun x1597 () Bool)
(declare-fun x89 () x1476)
(declare-fun x1450 () Bool)
(declare-fun x734 () Bool)
(declare-fun x1756 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x1221 () Int)
(declare-fun x1520 () Bool)
(declare-fun x389 () Int)
(declare-fun x37 (Int) x1476)
(declare-fun x1813 () Int)
(declare-fun x1005 () Bool)
(declare-fun x938 () Bool)
(declare-fun x1056 () Int)
(declare-fun x897 () Int)
(declare-fun x1473 () Bool)
(declare-fun x464 () Bool)
(declare-fun x433 () Int)
(declare-fun x879 () Int)
(declare-fun x992 () Int)
(declare-fun x852 () Int)
(declare-fun x522 () Bool)
(declare-fun x525 () Int)
(declare-fun x556 (Int) Int)
(declare-fun x123 () Bool)
(declare-fun x283 () Int)
(declare-fun x1619 () Int)
(declare-fun x1614 () Int)
(declare-fun x1125 () Bool)
(declare-fun x588 () Int)
(declare-fun x768 () Bool)
(declare-fun x1207 () Int)
(declare-fun x1073 () Int)
(declare-fun x1710 () Int)
(declare-fun x1847 () Int)
(declare-fun x1241 () Int)
(declare-fun x608 () Bool)
(declare-fun x758 () Bool)
(declare-fun x609 () Int)
(declare-fun x88 () Bool)
(declare-fun x1628 () Bool)
(declare-fun x616 () Bool)
(declare-fun x163 () Bool)
(declare-fun x346 () Bool)
(declare-fun x1117 () Int)
(declare-fun x204 () Int)
(declare-fun x549 () Int)
(declare-fun x368 () Bool)
(declare-fun x505 () Int)
(declare-fun x92 () Bool)
(declare-fun x737 () Bool)
(declare-fun x19 () x1476)
(declare-fun x1394 () Bool)
(declare-fun x541 () Int)
(declare-fun x156 () Bool)
(declare-fun x1578 () Bool)
(declare-fun x830 () Bool)
(declare-fun x521 () Bool)
(declare-fun x1327 () Int)
(declare-fun x356 () Bool)
(declare-fun x574 () Bool)
(declare-fun x496 () Int)
(declare-fun x184 () Int)
(declare-fun x367 () Bool)
(declare-fun x370 () Int)
(declare-fun x83 () Int)
(declare-fun x239 () Bool)
(declare-fun x824 () Bool)
(declare-fun x1360 () Bool)
(declare-fun x856 () Bool)
(declare-fun x1033 () Bool)
(declare-fun x1152 () Int)
(declare-fun x341 () Int)
(declare-fun x838 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x923 () Int)
(declare-fun x515 () Bool)
(declare-fun x144 () Int)
(declare-fun x248 () Bool)
(declare-fun x720 () Bool)
(declare-fun x426 () Int)
(declare-fun x127 () Bool)
(declare-fun x1231 () Int)
(declare-fun x1277 () Bool)
(declare-fun x161 () Bool)
(declare-fun x1812 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x1458 () Bool)
(declare-fun x1452 (Int) Int)
(declare-fun x845 () Bool)
(declare-fun x1815 () Bool)
(declare-fun x1792 () Int)
(declare-fun x102 () Int)
(declare-fun x1050 () Int)
(declare-fun x466 () Bool)
(declare-fun x347 () Bool)
(declare-fun x870 () Bool)
(declare-fun x1708 () Bool)
(declare-fun x1055 (Int) Int)
(declare-fun x596 () Bool)
(declare-fun x1888 () Bool)
(declare-fun x1171 () Int)
(declare-fun x792 () Int)
(declare-fun x1489 () Bool)
(declare-fun x78 () Bool)
(declare-fun x1046 () Int)
(declare-fun x1852 () Bool)
(declare-fun x847 () Int)
(declare-fun x1500 () Bool)
(declare-fun x698 () Int)
(declare-fun x203 () Bool)
(declare-fun x201 () Int)
(declare-fun x1518 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x918 () Bool)
(declare-fun x704 () Int)
(declare-fun x746 () Bool)
(declare-fun x1238 () Bool)
(declare-fun x1346 () Bool)
(declare-fun x1017 () Int)
(declare-fun x1243 () Bool)
(declare-fun x751 () Bool)
(declare-fun x118 () Bool)
(declare-fun x1713 () Bool)
(declare-fun x1864 () Bool)
(declare-fun x782 () Bool)
(declare-fun x1584 () Bool)
(declare-fun x1083 () Int)
(declare-fun x270 () Bool)
(declare-fun x1542 () Bool)
(declare-fun x1217 () Bool)
(declare-fun x1735 () Int)
(declare-fun x942 () Bool)
(declare-fun x306 () Bool)
(declare-fun x934 () Int)
(declare-fun x101 () Bool)
(declare-fun x719 () Int)
(declare-fun x10 () Int)
(declare-fun x1744 () Bool)
(declare-fun x1364 () Int)
(declare-fun x1205 () Int)
(declare-fun x1204 () Bool)
(declare-fun x808 () Int)
(declare-fun x1325 () Bool)
(declare-fun x1749 () Bool)
(declare-fun x523 () Bool)
(declare-fun x931 () Bool)
(declare-fun x421 () Bool)
(declare-fun x1270 () Bool)
(declare-fun x62 () Bool)
(declare-fun x655 () Bool)
(declare-fun x1129 () Bool)
(declare-fun x894 () Bool)
(declare-fun x99 () Int)
(declare-fun x277 () Bool)
(declare-fun x391 () Bool)
(declare-fun x602 () Int)
(declare-fun x1361 () Bool)
(declare-fun x185 () Int)
(declare-fun x1198 () Bool)
(declare-fun x506 () Int)
(declare-fun x1406 () Bool)
(declare-fun x130 () Bool)
(declare-fun x716 () Int)
(declare-fun x50 () Int)
(declare-fun x1883 () Bool)
(declare-fun x1712 () Int)
(declare-fun x1405 () Int)
(declare-fun x837 () Bool)
(declare-fun x176 () Bool)
(declare-fun x1089 (Int) Int)
(declare-fun x1391 () Bool)
(declare-fun x74 () Int)
(declare-fun x583 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x1675 () Int)
(declare-fun x1299 () Int)
(declare-fun x1745 () Bool)
(declare-fun x1673 () Bool)
(declare-fun x1658 () Int)
(declare-fun x1169 () Bool)
(declare-fun x1226 () Int)
(declare-fun x1049 () Int)
(declare-fun x627 () Bool)
(declare-fun x1637 () Int)
(declare-fun x937 () Int)
(declare-fun x6 () x1476)
(declare-fun x1762 () Int)
(declare-fun x872 () Bool)
(declare-fun x1408 () Bool)
(declare-fun x666 () Bool)
(declare-fun x534 () Int)
(declare-fun x304 () Bool)
(declare-fun x154 () Int)
(declare-fun x813 () Int)
(declare-fun x1887 () Bool)
(declare-fun x618 () Int)
(declare-fun x1539 () Bool)
(declare-fun x479 () Bool)
(declare-fun x696 () Bool)
(declare-fun x1605 () Int)
(declare-fun x361 () Bool)
(declare-fun x1009 () Int)
(declare-fun x407 () Int)
(declare-fun x1064 () Int)
(declare-fun x790 () Bool)
(declare-fun x867 () Bool)
(declare-fun x1275 () Int)
(declare-fun x573 () Int)
(declare-fun x989 () Int)
(declare-fun x1091 () Int)
(declare-fun x1623 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x1329 () Int)
(declare-fun x561 () Int)
(declare-fun x305 () Bool)
(declare-fun x1853 (Int) Int)
(declare-fun x1159 () Bool)
(declare-fun x925 () Bool)
(declare-fun x774 () Bool)
(declare-fun x955 () Bool)
(declare-fun x1804 () Bool)
(declare-fun x54 () Int)
(declare-fun x1353 () Bool)
(declare-fun x662 () Bool)
(declare-fun x560 () Bool)
(declare-fun x334 () x1476)
(declare-fun x1130 () Int)
(declare-fun x1779 () Int)
(declare-fun x1505 () Bool)
(declare-fun x497 () Bool)
(declare-fun x915 () Int)
(declare-fun x116 () Int)
(declare-fun x1264 () Int)
(declare-fun x1508 () Int)
(declare-fun x1086 () x1476)
(declare-fun x112 () Bool)
(declare-fun x1849 () Int)
(declare-fun x1586 () Bool)
(declare-fun x1015 (Int) Int)
(declare-fun x536 () Bool)
(declare-fun x680 () Int)
(declare-fun x1557 () Int)
(declare-fun x1411 () Int)
(declare-fun x409 () Bool)
(declare-fun x1574 () Int)
(declare-fun x1784 () Bool)
(declare-fun x25 () Int)
(declare-fun x1362 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x1183 () Int)
(declare-fun x1511 () Bool)
(declare-fun x984 () Int)
(declare-fun x316 () Bool)
(declare-fun x134 () Bool)
(declare-fun x289 () Bool)
(declare-fun x1799 () Int)
(declare-fun x827 () Bool)
(declare-fun x259 () Bool)
(declare-fun x840 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x157 () x1476)
(declare-fun x678 () Int)
(declare-fun x1582 () Bool)
(declare-fun x358 () Bool)
(declare-fun x543 () Int)
(declare-fun x208 () Int)
(declare-fun x589 () Int)
(declare-fun x1446 () Int)
(declare-fun x740 () Int)
(declare-fun x1213 () Bool)
(declare-fun x1541 () x1476)
(declare-fun x832 () x1476)
(declare-fun x659 () Int)
(declare-fun x1294 () Bool)
(declare-fun x1480 () Int)
(declare-fun x317 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x416 () Int)
(declare-fun x1833 () Bool)
(declare-fun x623 () Bool)
(declare-fun x1532 () Int)
(declare-fun x153 () Int)
(declare-fun x1319 () Bool)
(declare-fun x475 (x1476) Int)
(declare-fun x887 () Bool)
(declare-fun x718 () Bool)
(declare-fun x862 () Int)
(declare-fun x1751 () Int)
(declare-fun x1482 () Int)
(declare-fun x179 () Int)
(declare-fun x1193 () Bool)
(declare-fun x344 () Int)
(declare-fun x222 (Int) Int)
(declare-fun x729 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x1787 () Bool)
(declare-fun x87 () Bool)
(declare-fun x1695 (Int) Int)
(declare-fun x1120 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x253 () Bool)
(declare-fun x1764 () Bool)
(declare-fun x220 () Int)
(declare-fun x1084 () Bool)
(declare-fun x1236 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x1258 () Bool)
(declare-fun x451 () Int)
(declare-fun x924 () x1476)
(declare-fun x1295 () Bool)
(declare-fun x395 () Bool)
(declare-fun x566 () x1476)
(declare-fun x896 () Int)
(declare-fun x1463 () Bool)
(declare-fun x390 () Bool)
(declare-fun x1194 () Int)
(declare-fun x170 () Bool)
(declare-fun x865 () Bool)
(declare-fun x1348 () Bool)
(declare-fun x885 () Int)
(declare-fun x1087 () Int)
(declare-fun x422 () Bool)
(declare-fun x893 () Bool)
(declare-fun x1385 () Int)
(declare-fun x1773 () Bool)
(declare-fun x1177 () Int)
(declare-fun x86 () Bool)
(declare-fun x878 () Int)
(declare-fun x209 () Int)
(declare-fun x1830 () Int)
(declare-fun x597 () Int)
(declare-fun x1118 () Bool)
(declare-fun x465 () Bool)
(declare-fun x779 () Int)
(declare-fun x165 () Int)
(declare-fun x1885 () Bool)
(declare-fun x1617 (Int) Int)
(declare-fun x1008 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x1790 () Bool)
(declare-fun x877 () Bool)
(declare-fun x1420 () x1476)
(declare-fun x1209 () x1476)
(declare-fun x348 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x1802 () x1476)
(declare-fun x1438 () Int)
(declare-fun x509 () Bool)
(declare-fun x702 () Bool)
(declare-fun x516 () Bool)
(declare-fun x985 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x173 () Int)
(declare-fun x1579 () Int)
(declare-fun x469 () Int)
(declare-fun x35 () Int)
(declare-fun x1078 () Int)
(declare-fun x1386 () Bool)
(declare-fun x1863 () Int)
(declare-fun x445 () Bool)
(declare-fun x1692 () Int)
(declare-fun x941 () Int)
(declare-fun x1884 () Bool)
(declare-fun x710 () Int)
(declare-fun x1074 () Int)
(declare-fun x928 () Int)
(declare-fun x1174 () x1476)
(declare-fun x1738 () Bool)
(declare-fun x169 () Bool)
(declare-fun x591 () Int)
(declare-fun x970 () Bool)
(declare-fun x485 () Bool)
(declare-fun x1290 () Int)
(declare-fun x1838 (Int) Int)
(declare-fun x476 () Int)
(declare-fun x452 () Bool)
(declare-fun x1501 () Int)
(declare-fun x1635 () Int)
(declare-fun x650 () x1476)
(declare-fun x1629 (Int Int) Int)
(declare-fun x1722 () Bool)
(declare-fun x1848 () Int)
(declare-fun x339 () Bool)
(declare-fun x978 () Bool)
(declare-fun x910 () Int)
(declare-fun x1485 () Bool)
(declare-fun x539 () Bool)
(declare-fun x778 () Bool)
(declare-fun x145 () Bool)
(declare-fun x308 () Bool)
(declare-fun x1603 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x1250 () Int)
(declare-fun x415 () Bool)
(declare-fun x1723 () Int)
(declare-fun x1228 (Int Int) Int)
(declare-fun x106 () Bool)
(declare-fun x420 () Bool)
(declare-fun x1873 () Int)
(declare-fun x1490 () Bool)
(declare-fun x1491 () Int)
(declare-fun x1396 () Bool)
(declare-fun x1041 () Bool)
(declare-fun x107 () Bool)
(declare-fun x423 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x1871 () Int)
(declare-fun x997 () Int)
(declare-fun x1819 () Bool)
(declare-fun x874 () Int)
(declare-fun x268 () Bool)
(declare-fun x664 () Bool)
(declare-fun x1334 () x1476)
(declare-fun x17 () Bool)
(declare-fun x1625 () Int)
(declare-fun x41 () Bool)
(declare-fun x674 () Int)
(declare-fun x839 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x1546 (Int) Int)
(declare-fun x607 () Bool)
(declare-fun x606 () Int)
(declare-fun x1036 () Bool)
(declare-fun x1196 () Int)
(declare-fun x355 () Bool)
(declare-fun x670 () Bool)
(declare-fun x263 () Int)
(declare-fun x235 () Bool)
(declare-fun x921 () Bool)
(declare-fun x492 () x1476)
(declare-fun x599 () Int)
(declare-fun x450 () Bool)
(declare-fun x322 () Bool)
(declare-fun x48 () Bool)
(declare-fun x1170 () Bool)
(declare-fun x1398 () Int)
(declare-fun x1305 () Bool)
(declare-fun x63 () Int)
(declare-fun x1175 () Bool)
(declare-fun x133 () Int)
(declare-fun x1768 () Int)
(declare-fun x103 () Bool)
(declare-fun x513 () Bool)
(declare-fun x474 () Bool)
(declare-fun x388 () Int)
(declare-fun x59 () Int)
(declare-fun x377 () Int)
(declare-fun x1604 () Int)
(declare-fun x369 () Bool)
(declare-fun x1682 () Int)
(declare-fun x1844 () Bool)
(declare-fun x1685 () Int)
(declare-fun x1147 () Bool)
(declare-fun x1389 (x1476) Int)
(declare-fun x309 () Int)
(declare-fun x287 () Int)
(declare-fun x1842 () Int)
(declare-fun x158 () Int)
(declare-fun x1730 () Int)
(declare-fun x175 () Bool)
(declare-fun x139 () Int)
(declare-fun x1653 () Bool)
(declare-fun x1606 () Bool)
(declare-fun x1729 () Int)
(declare-fun x1168 () Int)
(declare-fun x652 () Int)
(declare-fun x218 () Bool)
(declare-fun x843 () Int)
(declare-fun x223 () Int)
(declare-fun x182 () Bool)
(declare-fun x274 () Bool)
(declare-fun x926 () Int)
(declare-fun x860 () Bool)
(declare-fun x429 () Int)
(declare-fun x1808 () Bool)
(declare-fun x861 () Bool)
(declare-fun x244 () x1476)
(declare-fun x232 () Bool)
(declare-fun x140 () Bool)
(declare-fun x657 () Int)
(declare-fun x1082 () Int)
(declare-fun x1225 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x1392 () Int)
(declare-fun x1195 () Int)
(declare-fun x238 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x323 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x284 () Int)
(declare-fun x1472 () Bool)
(declare-fun x767 () Int)
(declare-fun x1106 () Bool)
(declare-fun x1737 () Int)
(declare-fun x1352 () Int)
(declare-fun x1004 () Bool)
(declare-fun x1024 (Int Int) Int)
(declare-fun x1449 () Bool)
(declare-fun x1212 () Bool)
(declare-fun x577 () Int)
(declare-fun x1402 () x1476)
(declare-fun x1650 () Bool)
(declare-fun x313 () Bool)
(declare-fun x1645 (Int) Int)
(declare-fun x568 () Int)
(declare-fun x804 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x4 () Int)
(declare-fun x512 () Int)
(declare-fun x806 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x793 () Int)
(declare-fun x604 () Int)
(declare-fun x835 () Bool)
(declare-fun x126 () Bool)
(declare-fun x257 () Bool)
(declare-fun x1110 () Bool)
(declare-fun x1850 () x1476)
(declare-fun x1032 () Bool)
(declare-fun x686 () Bool)
(declare-fun x1709 () Int)
(declare-fun x1154 () Bool)
(declare-fun x255 () Bool)
(declare-fun x784 () Bool)
(declare-fun x414 () Int)
(declare-fun x1255 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x149 () Bool)
(declare-fun x269 () Bool)
(declare-fun x342 () Bool)
(declare-fun x1403 () Bool)
(declare-fun x282 () Bool)
(declare-fun x114 () Bool)
(declare-fun x166 () Bool)
(declare-fun x1533 () Int)
(declare-fun x1544 () Bool)
(declare-fun x724 () Int)
(declare-fun x612 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x1763 () Bool)
(declare-fun x1612 () Bool)
(declare-fun x1356 () Int)
(declare-fun x1164 () Bool)
(declare-fun x814 () Int)
(declare-fun x1457 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x337 () Int)
(declare-fun x374 () Bool)
(declare-fun x1515 () Bool)
(declare-fun x1239 () Bool)
(declare-fun x1413 (x1476) Int)
(declare-fun x1172 () Bool)
(declare-fun x1878 () Bool)
(declare-fun x764 () Int)
(declare-fun x1020 () Bool)
(declare-fun x299 () Int)
(declare-fun x1414 () Int)
(declare-fun x1719 () Bool)
(declare-fun x542 () Int)
(declare-fun x1608 () Bool)
(declare-fun x471 () Bool)
(declare-fun x535 (Int) Int)
(declare-fun x1504 () Int)
(declare-fun x857 () Bool)
(declare-fun x500 () Bool)
(declare-fun x667 () Bool)
(declare-fun x1785 () Bool)
(declare-fun x507 () Bool)
(declare-fun x658 () Bool)
(declare-fun x325 () Bool)
(declare-fun x436 () Int)
(declare-fun x1001 () Int)
(declare-fun x1535 () Bool)
(declare-fun x1455 () Bool)
(declare-fun x653 () Bool)
(declare-fun x1435 () Int)
(declare-fun x1071 () Int)
(declare-fun x932 () Bool)
(declare-fun x1220 () Int)
(declare-fun x444 () Bool)
(declare-fun x1670 () Bool)
(declare-fun x100 () Bool)
(declare-fun x1881 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x563 () Int)
(declare-fun x1150 () Bool)
(declare-fun x401 () Int)
(declare-fun x1777 () Int)
(declare-fun x1156 () Int)
(declare-fun x1123 () Int)
(declare-fun x1610 () Int)
(declare-fun x300 () x1476)
(declare-fun x644 () Bool)
(declare-fun x863 () Bool)
(declare-fun x849 () Bool)
(declare-fun x586 () Bool)
(declare-fun x752 () Bool)
(declare-fun x1517 () Int)
(declare-fun x1538 () Bool)
(declare-fun x1376 () Int)
(declare-fun x382 () Bool)
(declare-fun x766 () Bool)
(declare-fun x410 () Bool)
(declare-fun x1527 () Int)
(declare-fun x1330 () Bool)
(declare-fun x871 () Bool)
(declare-fun x1430 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x1698 () Bool)
(declare-fun x598 () Bool)
(declare-fun x1666 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x1718 () Int)
(declare-fun x456 () Bool)
(declare-fun x1010 () Int)
(declare-fun x226 () Bool)
(declare-fun x1622 () Bool)
(declare-fun x841 () Bool)
(declare-fun x1132 () Bool)
(declare-fun x242 () Int)
(declare-fun x1882 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x1832 () Bool)
(declare-fun x310 () Bool)
(declare-fun x330 () Bool)
(declare-fun x40 () Int)
(declare-fun x72 () Bool)
(declare-fun x907 () x1476)
(declare-fun x1235 (Int) Int)
(declare-fun x889 () Int)
(declare-fun x1372 () Bool)
(declare-fun x936 () Bool)
(declare-fun x251 () Bool)
(declare-fun x532 () Bool)
(declare-fun x1042 () Int)
(declare-fun x570 () Int)
(declare-fun x579 () Int)
(declare-fun x1831 () Bool)
(declare-fun x629 () Int)
(declare-fun x1877 () Bool)
(declare-fun x773 () Bool)
(declare-fun x1607 () Int)
(declare-fun x64 () x1476)
(declare-fun x639 () Int)
(declare-fun x711 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x721 () Bool)
(declare-fun x1006 () Int)
(declare-fun x1202 () Bool)
(declare-fun x853 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x353 (x1476) Int)
(declare-fun x1269 () Bool)
(declare-fun x343 () Bool)
(declare-fun x381 () Bool)
(declare-fun x1141 () Bool)
(declare-fun x1801 () Bool)
(declare-fun x906 () Int)
(declare-fun x1066 () Bool)
(declare-fun x400 () Int)
(declare-fun x67 () Int)
(declare-fun x1149 () Bool)
(declare-fun x848 (Int) Int)
(declare-fun x703 () Bool)
(declare-fun x919 () Bool)
(declare-fun x56 () Bool)
(declare-fun x559 () Int)
(declare-fun x1034 () Int)
(declare-fun x1691 () Int)
(declare-fun x1550 () Bool)
(declare-fun x1350 () Bool)
(declare-fun x431 () Int)
(declare-fun x553 () Int)
(declare-fun x1316 () Int)
(declare-fun x1216 () Bool)
(declare-fun x996 () Bool)
(declare-fun x199 () Int)
(declare-fun x11 () Int)
(declare-fun x1266 (Int) Int)
(declare-fun x1711 () Bool)
(declare-fun x85 () Bool)
(declare-fun x1687 () Bool)
(declare-fun x1157 () Int)
(declare-fun x632 () Bool)
(declare-fun x1835 () Bool)
(declare-fun x1460 () x1476)
(declare-fun x213 () Int)
(declare-fun x722 () Int)
(declare-fun x1395 () Bool)
(declare-fun x1320 () Int)
(declare-fun x1028 () Bool)
(declare-fun x1840 () Int)
(declare-fun x1018 () Bool)
(declare-fun x805 () Int)
(declare-fun x692 () Bool)
(declare-fun x528 () Int)
(declare-fun x973 () Bool)
(declare-fun x215 () x1476)
(declare-fun x279 () Int)
(declare-fun x930 () Int)
(declare-fun x1805 () Int)
(declare-fun x120 () Bool)
(declare-fun x1061 () Bool)
(declare-fun x71 () Int)
(declare-fun x12 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x442 () Int)
(declare-fun x1646 () Int)
(declare-fun x458 () Int)
(declare-fun x1829 () x1476)
(declare-fun x899 () Bool)
(declare-fun x1014 () Int)
(declare-fun x1227 () Bool)
(declare-fun x198 () Bool)
(declare-fun x1137 () Bool)
(declare-fun x510 () Int)
(declare-fun x1526 () Bool)
(declare-fun x427 () Int)
(declare-fun x1081 () Bool)
(declare-fun x1572 (Int) Int)
(declare-fun x1671 () Bool)
(declare-fun x700 () x1476)
(declare-fun x593 () Bool)
(declare-fun x105 () Bool)
(declare-fun x1731 () Int)
(declare-fun x234 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x1103 () Int)
(declare-fun x155 () Bool)
(declare-fun x1736 () Bool)
(declare-fun x254 () Bool)
(declare-fun x379 () Bool)
(declare-fun x280 () Int)
(declare-fun x1259 () Int)
(declare-fun x1281 () Bool)
(declare-fun x1366 () Bool)
(declare-fun x1007 (Int) Int)
(declare-fun x1140 () Bool)
(declare-fun x1774 () Int)
(declare-fun x908 () Bool)
(declare-fun x481 () Bool)
(declare-fun x1846 () Int)
(declare-fun x13 () Int)
(declare-fun x1564 () Bool)
(declare-fun x526 () Int)
(declare-fun x713 () Bool)
(declare-fun x1494 () Int)
(declare-fun x1788 () Bool)
(declare-fun x1245 () x1476)
(declare-fun x1000 () Int)
(declare-fun x151 () Bool)
(declare-fun x939 () Bool)
(declare-fun x249 () Bool)
(declare-fun x1781 () Bool)
(declare-fun x625 () Bool)
(declare-fun x538 () Bool)
(declare-fun x1048 () Bool)
(declare-fun x683 () Bool)
(declare-fun x394 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x1351 () Int)
(declare-fun x1274 () x1476)
(declare-fun x1111 () Bool)
(declare-fun x1283 () x1476)
(declare-fun x1859 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x1477 () Int)
(declare-fun x584 () Int)
(declare-fun x884 () Bool)
(declare-fun x1769 () Int)
(declare-fun x1462 () Bool)
(declare-fun x1456 () Bool)
(declare-fun x193 () Bool)
(declare-fun x174 () Bool)
(declare-fun x1662 () Int)
(declare-fun x705 () Int)
(declare-fun x1684 () Bool)
(declare-fun x1465 () Int)
(declare-fun x1797 () Int)
(declare-fun x833 () Int)
(declare-fun x1153 () Bool)
(declare-fun x498 () Bool)
(declare-fun x383 () Int)
(declare-fun x1715 () Bool)
(declare-fun x882 () Int)
(declare-fun x1618 (Int) Int)
(declare-fun x1524 () Bool)
(declare-fun x136 () Int)
(declare-fun x1734 () Bool)
(declare-fun x1197 () x1476)
(declare-fun x677 () Bool)
(declare-fun x181 () Bool)
(declare-fun x983 () Bool)
(declare-fun x1506 () Int)
(declare-fun x1487 () Bool)
(declare-fun x748 () Int)
(declare-fun x1554 (Int) Int)
(declare-fun x836 (x1476) Int)
(declare-fun x1636 () Int)
(declare-fun x1641 () Bool)
(declare-fun x97 () Int)
(declare-fun x290 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x319 () Int)
(declare-fun x95 () Bool)
(declare-fun x21 () Bool)
(declare-fun x1282 () Bool)
(declare-fun x783 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x293 () Bool)
(declare-fun x1679 () Bool)
(declare-fun x1806 () Bool)
(declare-fun x1627 () Bool)
(declare-fun x1585 () Bool)
(declare-fun x276 () x1476)
(declare-fun x1119 () Bool)
(declare-fun x1439 () Int)
(declare-fun x1748 () Bool)
(declare-fun x1273 () Bool)
(declare-fun x70 () Bool)
(declare-fun x1724 () Bool)
(declare-fun x1422 () Int)
(declare-fun x1680 () Bool)
(declare-fun x152 () Bool)
(declare-fun x438 () Bool)
(declare-fun x1098 () Int)
(declare-fun x1011 () Bool)
(declare-fun x691 () Int)
(declare-fun x1548 () Bool)
(declare-fun x76 () Bool)
(declare-fun x362 () Bool)
(declare-fun x1148 () Bool)
(declare-fun x502 () Int)
(declare-fun x1151 () Bool)
(declare-fun x731 () Int)
(declare-fun x900 () Bool)
(declare-fun x1410 () Bool)
(declare-fun x278 () Int)
(declare-fun x617 () Bool)
(declare-fun x514 () Bool)
(declare-fun x121 () Int)
(declare-fun x1821 () Int)
(declare-fun x1160 () Int)
(declare-fun x359 () Bool)
(declare-fun x1699 () Int)
(declare-fun x1293 () x1476)
(declare-fun x986 () Bool)
(declare-fun x1069 () Bool)
(declare-fun x1065 () Int)
(declare-fun x462 () Bool)
(declare-fun x869 () Int)
(declare-fun x576 () Bool)
(declare-fun x1377 () Bool)
(declare-fun x1182 () Bool)
(declare-fun x1547 () Bool)
(declare-fun x643 () Int)
(declare-fun x1741 () Bool)
(declare-fun x372 () Bool)
(declare-fun x1555 () Bool)
(declare-fun x601 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x990 () Bool)
(declare-fun x761 () Bool)
(declare-fun x1471 () Bool)
(declare-fun x210 () Bool)
(declare-fun x1247 () Int)
(declare-fun x191 () Bool)
(declare-fun x1568 () Bool)
(declare-fun x1728 () Bool)
(declare-fun x1857 () Int)
(declare-fun x1261 () Int)
(declare-fun x1102 () Bool)
(declare-fun x75 () Bool)
(declare-fun x1211 () Int)
(declare-fun x1727 () Bool)
(declare-fun x1387 () Int)
(declare-fun x1657 () Int)
(declare-fun x620 () Int)
(declare-fun x128 () Bool)
(declare-fun x1851 () Bool)
(declare-fun x1488 () Int)
(declare-fun x546 () Bool)
(declare-fun x531 (Int) Int)
(declare-fun x1639 () Int)
(declare-fun x159 (Int) Int)
(declare-fun x387 () Bool)
(declare-fun x490 () Int)
(declare-fun x148 () Int)
(declare-fun x1190 () Bool)
(declare-fun x1599 () Bool)
(declare-fun x499 () Bool)
(declare-fun x486 () Bool)
(declare-fun x1529 () Int)
(declare-fun x143 () Int)
(declare-fun x1059 () Bool)
(declare-fun x807 () Int)
(declare-fun x1725 () Bool)
(declare-fun x1707 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x33 () Bool)
(declare-fun x1401 () Int)
(declare-fun x488 () x1476)
(declare-fun x58 (Int) Int)
(declare-fun x1507 () Bool)
(declare-fun x636 () Int)
(declare-fun x1633 () Bool)
(declare-fun x1443 () Bool)
(declare-fun x454 () Int)
(declare-fun x408 () Int)
(declare-fun x301 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x1810 () Bool)
(declare-fun x958 () Int)
(declare-fun x802 () Bool)
(declare-fun x1200 () Bool)
(declare-fun x815 () Int)
(declare-fun x971 () Int)
(declare-fun x14 () Bool)
(declare-fun x8 () Bool)
(declare-fun x1342 () Int)
(declare-fun x633 () Bool)
(declare-fun x350 () Int)
(declare-fun x141 () Bool)
(declare-fun x949 () x1476)
(declare-fun x448 () Bool)
(declare-fun x1418 () Int)
(declare-fun x1310 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x1688 () Int)
(declare-fun x1886 () Bool)
(declare-fun x1109 () Int)
(declare-fun x1875 () Int)
(declare-fun x190 () Int)
(declare-fun x211 () Bool)
(declare-fun x681 () Bool)
(declare-fun x675 () Bool)
(declare-fun x821 () x1476)
(declare-fun x898 () Bool)
(declare-fun x1772 () Int)
(declare-fun x94 () x1476)
(declare-fun x192 () Bool)
(declare-fun x66 () Bool)
(declare-fun x460 () Bool)
(declare-fun x540 () x1476)
(declare-fun x1253 () Bool)
(declare-fun x735 () Bool)
(declare-fun x240 () Int)
(declare-fun x1479 () x1476)
(declare-fun x1690 () Int)
(declare-fun x1732 () Int)
(declare-fun x1315 () Bool)
(declare-fun x826 () Bool)
(declare-fun x611 () Int)
(declare-fun x125 () Bool)
(declare-fun x1307 () x1476)
(declare-fun x693 () Bool)
(declare-fun x217 () Bool)
(declare-fun x799 () Bool)
(declare-fun x1807 () Bool)
(declare-fun x327 () Bool)
(declare-fun x196 () Bool)
(declare-fun x1421 () Int)
(declare-fun x890 () Bool)
(declare-fun x1573 () Bool)
(declare-fun x1373 () Int)
(declare-fun x1271 () Int)
(declare-fun x1649 () Bool)
(declare-fun x800 () Int)
(declare-fun x1516 () Int)
(declare-fun x1155 () Int)
(declare-fun x610 () Bool)
(declare-fun x742 () Int)
(declare-fun x1058 () Int)
(declare-fun x1341 () Bool)
(declare-fun x648 () Bool)
(declare-fun x1114 (Int) Int)
(declare-fun x224 () Bool)
(declare-fun x1648 () Bool)
(declare-fun x15 () Int)
(declare-fun x186 () Bool)
(declare-fun x621 () Int)
(declare-fun x1800 () Int)
(declare-fun x736 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x1640 () Bool)
(declare-fun x398 () Bool)
(declare-fun x750 () Int)
(declare-fun x1528 () Bool)
(declare-fun x1667 () Bool)
(declare-fun x227 () Int)
(declare-fun x386 () Bool)
(declare-fun x142 () Bool)
(declare-fun x1571 () Int)
(declare-fun x727 () Int)
(declare-fun x1427 () Bool)
(declare-fun x1288 () Int)
(declare-fun x1336 () Bool)
(declare-fun x487 () Bool)
(declare-fun x993 () x1476)
(declare-fun x42 () Int)
(declare-fun x1338 () Int)
(declare-fun x781 () x1476)
(declare-fun x1397 () Bool)
(declare-fun x439 () Bool)
(declare-fun x1298 () Int)
(declare-fun x172 () Bool)
(declare-fun x1382 () Bool)
(declare-fun x32 () Int)
(declare-fun x225 () Bool)
(declare-fun x645 () Int)
(declare-fun x1592 () Int)
(declare-fun x1706 () Int)
(declare-fun x18 () Int)
(declare-fun x701 () Bool)
(declare-fun x122 () Bool)
(declare-fun x834 () Bool)
(declare-fun x976 () Int)
(declare-fun x801 () Bool)
(declare-fun x1223 () Int)
(declare-fun x1766 () Bool)
(declare-fun x441 () Int)
(declare-fun x1291 () Int)
(declare-fun x679 () Int)
(declare-fun x957 () Int)
(declare-fun x216 () Bool)
(declare-fun x271 () Bool)
(declare-fun x1029 () Bool)
(declare-fun x315 () Int)
(declare-fun x982 () Bool)
(declare-fun x1497 () Bool)
(declare-fun x689 () Int)
(declare-fun x844 () Bool)
(declare-fun x411 () Int)
(declare-fun x219 () Int)
(declare-fun x587 () Int)
(declare-fun x1845 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x1651 () Bool)
(declare-fun x16 () Bool)
(declare-fun x1600 () Bool)
(declare-fun x555 () Int)
(declare-fun x449 () Bool)
(declare-fun x1765 () Bool)
(declare-fun x967 () Int)
(declare-fun x1297 () Bool)
(declare-fun x162 () Bool)
(declare-fun x298 () Bool)
(declare-fun x1262 () Int)
(declare-fun x1820 () Int)
(declare-fun x1656 () Int)
(declare-fun x545 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x406 (Int Int) Int)
(declare-fun x649 () Int)
(declare-fun x1739 () Bool)
(declare-fun x241 () Int)
(declare-fun x917 () Bool)
(declare-fun x1616 () Int)
(declare-fun x1676 () Bool)
(declare-fun x1267 () Bool)
(declare-fun x669 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x1747 () Bool)
(declare-fun x384 () Int)
(declare-fun x168 () Int)
(declare-fun x786 () Int)
(declare-fun x188 () Int)
(declare-fun x1796 () x1476)
(declare-fun x243 () Bool)
(declare-fun x1163 () Bool)
(declare-fun x1562 () Bool)
(declare-fun x472 () Bool)
(declare-fun x1696 () Bool)
(declare-fun x1740 () Int)
(declare-fun x981 () Int)
(declare-fun x1380 () Bool)
(declare-fun x1076 () Int)
(declare-fun x995 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x233 () Int)
(declare-fun x1602 () x1476)
(declare-fun x1113 () Bool)
(declare-fun x1743 () Bool)
(declare-fun x622 () Int)
(declare-fun x331 () Int)
(declare-fun x345 () Int)
(declare-fun x954 () Bool)
(declare-fun x1347 () Int)
(declare-fun x697 () x1476)
(declare-fun x117 () Bool)
(declare-fun x1771 () Int)
(declare-fun x1841 () Int)
(declare-fun x418 () Bool)
(declare-fun x137 () Int)
(declare-fun x1434 () Bool)
(declare-fun x1369 () Bool)
(declare-fun x1780 () Bool)
(declare-fun x1753 () Int)
(declare-fun x207 () x1476)
(declare-fun x624 () Bool)
(declare-fun x477 () Bool)
(declare-fun x1214 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x1448 () Int)
(declare-fun x373 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x1246 () Int)
(declare-fun x960 () Bool)
(declare-fun x747 () Int)
(declare-fun x948 () Int)
(declare-fun x745 () Int)
(declare-fun x685 () Int)
(declare-fun x780 () Int)
(declare-fun x425 () Int)
(declare-fun x1379 () Bool)
(declare-fun x818 () x1476)
(declare-fun x491 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x60 () Bool)
(declare-fun x594 () Int)
(declare-fun x1828 () Int)
(declare-fun x27 () Bool)
(declare-fun x1837 () Int)
(declare-fun x1199 () Bool)
(declare-fun x1770 () Int)
(declare-fun x501 () Int)
(declare-fun x1611 () Bool)
(declare-fun x1459 () Int)
(declare-fun x1215 () Int)
(declare-fun x1181 () Int)
(declare-fun x1357 () Bool)
(declare-fun x187 (x1476) Int)
(declare-fun x787 () Bool)
(declare-fun x1381 () Bool)
(declare-fun x756 () Bool)
(declare-fun x354 () Bool)
(declare-fun x619 () Int)
(declare-fun x428 () Int)
(declare-fun x1451 () Bool)
(declare-fun x23 () Bool)
(declare-fun x1039 () Int)
(declare-fun x595 () Int)
(declare-fun x634 () Bool)
(declare-fun x1025 () Int)
(declare-fun x1286 () Bool)
(declare-fun x273 () Bool)
(declare-fun x854 () Int)
(declare-fun x654 (Int) Int)
(declare-fun x822 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x1714 () x1476)
(declare-fun x825 () Bool)
(declare-fun x1035 () Int)
(declare-fun x1817 (x1476) Int)
(declare-fun x715 () Int)
(declare-fun x467 () Bool)
(declare-fun x91 () Bool)
(declare-fun x22 () Int)
(declare-fun x504 () Bool)
(declare-fun x581 () Bool)
(declare-fun x288 () Int)
(declare-fun x312 () Int)
(declare-fun x663 () Bool)
(declare-fun x699 () Bool)
(declare-fun x810 () Bool)
(declare-fun x548 () Bool)
(declare-fun x1179 () Bool)
(declare-fun x1811 () Int)
(declare-fun x1371 () Bool)
(declare-fun x46 (x1476) Int)
(declare-fun x1349 () Bool)
(declare-fun x1409 () Bool)
(declare-fun x371 () Int)
(declare-fun x1249 () Bool)
(declare-fun x772 () Int)
(declare-fun x44 () Int)
(declare-fun x1660 (x1476) Int)
(declare-fun x470 () Bool)
(declare-fun x1483 () Int)
(declare-fun x1795 () Int)
(declare-fun x1442 () Bool)
(declare-fun x1368 (Int) Int)
(declare-fun x1251 () Bool)
(declare-fun x417 () Bool)
(declare-fun x424 () Int)
(declare-fun x7 () Bool)
(declare-fun x321 () Bool)
(declare-fun x57 () Bool)
(declare-fun x640 () Int)
(declare-fun x43 () Bool)
(declare-fun x1631 () Bool)
(declare-fun x1553 () Int)
(declare-fun x945 () x1476)
(declare-fun x1370 () Bool)
(declare-fun x929 () Int)
(declare-fun x1027 () Int)
(declare-fun x1300 () Bool)
(declare-fun x881 () Bool)
(declare-fun x965 () Bool)
(declare-fun x638 () Int)
(declare-fun x150 () x1476)
(declare-fun x1659 (Int) Int)
(declare-fun x558 () x1476)
(declare-fun x1331 () Int)
(declare-fun x495 () Bool)
(declare-fun x944 () Bool)
(declare-fun x1257 (Int) Int)
(declare-fun x494 () Int)
(declare-fun x1869 () Int)
(declare-fun x65 () Bool)
(declare-fun x79 () Int)
(declare-fun x842 () Int)
(declare-fun x1630 () Int)
(declare-fun x797 () Int)
(declare-fun x1681 () Bool)
(declare-fun x1272 () Int)
(declare-fun x1858 () Bool)
(declare-fun x1889 () Int)
(declare-fun x1053 () x1476)
(declare-fun x1558 () Bool)
(declare-fun x717 () Int)
(declare-fun x281 () Bool)
(declare-fun x90 () Bool)
(declare-fun x1856 () Bool)
(declare-fun x922 () Bool)
(declare-fun x266 () x1476)
(declare-fun x1570 () Int)
(declare-fun x575 () Int)
(declare-fun x798 () Int)
(declare-fun x1621 () Int)
(declare-fun x202 () Bool)
(declare-fun x1136 () Bool)
(declare-fun x975 () Int)
(declare-fun x1823 () Int)
(declare-fun x212 () Int)
(declare-fun x1158 () Int)
(declare-fun x261 () Int)
(declare-fun x988 () Bool)
(declare-fun x1124 () Bool)
(declare-fun x326 () Bool)
(declare-fun x567 () Bool)
(declare-fun x817 () Bool)
(declare-fun x785 () Bool)
(declare-fun x1254 () Int)
(declare-fun x1822 () Int)
(declare-fun x1192 () Int)
(declare-fun x352 () Int)
(declare-fun x171 () Bool)
(declare-fun x788 () Int)
(declare-fun x668 () Bool)
(declare-fun x430 () Int)
(declare-fun x1178 () Bool)
(declare-fun x726 () Int)
(declare-fun x307 () Bool)
(declare-fun x738 () Bool)
(declare-fun x1301 () Int)
(declare-fun x1461 () Int)
(declare-fun x205 () Bool)
(declare-fun x880 () Int)
(declare-fun x1105 () Bool)
(declare-fun x630 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x264 () Bool)
(declare-fun x771 () Bool)
(declare-fun x1581 () Int)
(declare-fun x1436 () Int)
(declare-fun x324 () Bool)
(declare-fun x809 () x1476)
(declare-fun x335 () Int)
(declare-fun x340 () Bool)
(declare-fun x30 () Bool)
(declare-fun x1778 () Int)
(declare-fun x1240 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x1454 () Bool)
(declare-fun x3 () Bool)
(declare-fun x228 () Int)
(declare-fun x443 () Int)
(declare-fun x642 () Int)
(declare-fun x333 () Bool)
(declare-fun x1861 () Bool)
(declare-fun x765 () Int)
(declare-fun x246 () Bool)
(declare-fun x1481 () Bool)
(declare-fun x364 () Bool)
(declare-fun x760 () Bool)
(declare-fun x360 () Int)
(declare-fun x338 () Bool)
(declare-fun x1862 () Int)
(declare-fun x1339 () Int)
(declare-fun x1191 () Bool)
(declare-fun x403 () Bool)
(declare-fun x544 () Int)
(declare-fun x1890 () Int)
(declare-fun x1672 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x1549 () Bool)
(declare-fun x267 () Int)
(declare-fun x1590 () Bool)
(declare-fun x1167 () Bool)
(declare-fun x859 (Int) Int)
(declare-fun x1536 () x1476)
(declare-fun x1107 () Int)
(declare-fun x1824 () Int)
(declare-fun x5 () x1476)
(declare-fun x1345 () Bool)
(declare-fun x503 () Int)
(declare-fun x80 () Int)
(declare-fun x1003 () Bool)
(declare-fun x1827 () Bool)
(declare-fun x1678 () Bool)
(declare-fun x1340 () Bool)
(declare-fun x524 () Int)
(declare-fun x260 () Bool)
(declare-fun x1865 () Bool)
(declare-fun x1224 () Int)
(declare-fun x759 () Int)
(declare-fun x687 () Bool)
(declare-fun x1367 () Bool)
(declare-fun x1219 () Int)
(declare-fun x682 () Int)
(declare-fun x1563 () Bool)
(declare-fun x956 () Int)
(declare-fun x651 () Bool)
(declare-fun x794 () Int)
(declare-fun x1867 () Bool)
(declare-fun x550 () Int)
(declare-fun x554 () Bool)
(declare-fun x1523 () Int)
(declare-fun x883 () Bool)
(declare-fun x1879 () x1476)
(declare-fun x237 () Int)
(declare-fun x1037 () Int)
(declare-fun x328 () Bool)
(declare-fun x585 () Int)
(declare-fun x1173 () Bool)
(declare-fun x828 () Bool)
(declare-fun x1312 () Int)
(declare-fun x1475 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x1433 () Bool)
(declare-fun x1644 () Int)
(declare-fun x1415 () Bool)
(declare-fun x1419 () Bool)
(declare-fun x819 () x1476)
(declare-fun x1843 () Int)
(declare-fun x24 () Int)
(declare-fun x1146 () Bool)
(declare-fun x311 () Int)
(declare-fun x1180 () Int)
(declare-fun x453 () Int)
(declare-fun x1495 () Int)
(declare-fun x1742 () Int)
(declare-fun x1701 () Int)
(declare-fun x1278 () Bool)
(declare-fun x940 () Int)
(declare-fun x850 () Int)
(declare-fun x93 () Bool)
(declare-fun x520 () Int)
(declare-fun x1229 () Int)
(declare-fun x1343 () Bool)
(declare-fun x147 () Bool)
(declare-fun x1514 () Bool)
(declare-fun x1143 () Int)
(declare-fun x1638 () Int)
(declare-fun x913 () Int)
(declare-fun x519 () Bool)
(declare-fun x831 () Bool)
(declare-fun x9 () x1476)
(declare-fun x1664 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x518 () Int)
(declare-fun x435 () Bool)
(declare-fun x641 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x994 () Int)
(declare-fun x1256 () Int)
(declare-fun x1794 () Bool)
(declare-fun x180 () Bool)
(declare-fun x1669 () Bool)
(declare-fun x229 () Int)
(declare-fun x1624 () Bool)
(declare-fun x468 () x1476)
(declare-fun x1400 (x1476) Int)
(declare-fun x1161 () Bool)
(declare-fun x1855 () Bool)
(declare-fun x547 () Bool)
(declare-fun x28 () Bool)
(declare-fun x562 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x754 () Int)
(declare-fun x1134 () Bool)
(declare-fun x1593 () Int)
(declare-fun x493 () Bool)
(declare-fun x1393 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x728 () Int)
(declare-fun x1556 () Int)
(declare-fun x320 () Bool)
(declare-fun x36 () Bool)
(declare-fun x1818 () Int)
(declare-fun x876 () Bool)
(declare-fun x631 () Bool)
(declare-fun x647 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x1634 () Int)
(declare-fun x1375 () Bool)
(declare-fun x332 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x61 () Int)
(declare-fun x131 (Int) Int)
(declare-fun x508 () Int)
(declare-fun x1814 () Int)
(declare-fun x959 () Int)
(declare-fun x1643 () Bool)
(declare-fun x1754 () Bool)
(declare-fun x132 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x966 () Int)
(declare-fun x769 () x1476)
(declare-fun x1165 (Int) Int)
(declare-fun x297 () Bool)
(declare-fun x69 (Int) Int)
(declare-fun x673 () Bool)
(declare-fun x1304 () Bool)
(declare-fun x1583 () Int)
(declare-fun x98 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x214 () Int)
(declare-fun x1176 () Bool)
(declare-fun x31 () Bool)
(declare-fun x791 () x1476)
(declare-fun x160 () Int)
(declare-fun x812 () Bool)
(declare-fun x952 () Int)
(declare-fun x914 () Int)
(declare-fun x1689 () Bool)
(declare-fun x1234 () Int)
(declare-fun x904 () Int)
(declare-fun x565 () Bool)
(declare-fun x972 () Int)
(declare-fun x820 () Bool)
(declare-fun x1880 () Bool)
(declare-fun x1390 () Bool)
(declare-fun x1726 () Bool)
(declare-fun x1620 () Int)
(declare-fun x413 () Bool)
(declare-fun x1686 () Int)
(declare-fun x457 () Bool)
(declare-fun x302 () Bool)
(declare-fun x912 () Bool)
(declare-fun x104 () Int)
(declare-fun x1704 () x1476)
(declare-fun x295 () Bool)
(declare-fun x635 () Int)
(declare-fun x1044 () Bool)
(declare-fun x291 () Bool)
(declare-fun x1139 () Int)
(declare-fun x706 () Bool)
(declare-fun x275 () Int)
(declare-fun x911 (Int Int) Int)
(declare-fun x1287 () Bool)
(declare-fun x265 () x1476)
(declare-fun x1184 () Bool)
(declare-fun x991 () Bool)
(declare-fun x564 () Bool)
(declare-fun x1626 () Bool)
(declare-fun x1552 () Int)
(declare-fun x1598 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x1428 () Int)
(declare-fun x511 (x1476) Int)
(declare-fun x296 (Int) Int)
(declare-fun x294 () Bool)
(declare-fun x1683 () Int)
(declare-fun x1317 () Bool)
(declare-fun x96 () Bool)
(declare-fun x977 () Bool)
(declare-fun x478 () x1476)
(declare-fun x318 () x1476)
(declare-fun x1565 () Int)
(declare-fun x1834 () Bool)
(declare-fun x146 () Bool)
(declare-fun x1429 () Int)
(declare-fun x447 () Int)
(declare-fun x1601 () Int)
(declare-fun x138 () Int)
(declare-fun x626 () Bool)
(declare-fun x236 () Bool)
(declare-fun x81 () Bool)
(declare-fun x1537 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x551 () Bool)
(declare-fun x262 () Bool)
(declare-fun x197 () Int)
(declare-fun x968 () Int)
(declare-fun x613 () Bool)
(declare-fun x920 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x1767 () Int)
(declare-fun x974 () Int)
(declare-fun x1232 () Int)
(declare-fun x1567 () Bool)
(declare-fun x671 () Bool)
(declare-fun x194 () Bool)
(declare-fun x557 () x1476)
(declare-fun x1453 () Bool)
(declare-fun x935 () Int)
(declare-fun x1876 () Int)
(declare-fun x272 () Bool)
(declare-fun x964 () Bool)
(declare-fun x1860 () Int)
(declare-fun x753 () Bool)
(declare-fun x1131 () Int)
(declare-fun x77 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x1444 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x252 () Bool)
(declare-fun x592 () Int)
(declare-fun x803 () Int)
(declare-fun x1374 () Bool)
(declare-fun x314 () Bool)
(declare-fun x1496 (Int Int) Int)
(declare-fun x1693 () Int)
(declare-fun x873 () Bool)
(declare-fun x1655 () Int)
(declare-fun x51 () Int)
(declare-fun x1866 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x580 () Int)
(declare-fun x49 () Bool)
(declare-fun x1588 () Int)
(declare-fun x1700 () Bool)
(declare-fun x29 () Int)
(declare-fun x714 () Bool)
(declare-fun x1445 () x1476)
(declare-fun x129 () Int)
(declare-fun x569 () Int)
(declare-fun x723 () Int)
(declare-fun x1697 () Bool)
(declare-fun x527 () Int)
(declare-fun x1306 () Bool)
(declare-fun x901 () Bool)
(declare-fun x1208 () Bool)
(declare-fun x1594 () Bool)
(declare-fun x1755 () Int)
(declare-fun x603 () Int)
(declare-fun x1318 () Bool)
(declare-fun x999 () Bool)
(declare-fun x45 () Bool)
(declare-fun x1054 () Bool)
(declare-fun x933 () Bool)
(declare-fun x206 () Int)
(declare-fun x615 (Int Int) Int)
(declare-fun x1758 () Int)
(declare-fun x189 () Bool)
(declare-fun x1826 () Bool)
(declare-fun x1702 () Bool)
(declare-fun x1559 () Int)
(declare-fun x1870 () Int)
(declare-fun x247 () Int)
(declare-fun x1424 (x1476) Int)
(declare-fun x82 () Int)
(declare-fun x1052 () Bool)
(declare-fun x969 () Int)
(declare-fun x473 () Bool)
(declare-fun x684 () Int)
(declare-fun x250 () Bool)
(declare-fun x672 () Int)
(declare-fun x1705 () Bool)
(declare-fun x732 () Bool)
(declare-fun x440 () Int)
(declare-fun x399 () Bool)
(declare-fun x1809 () Int)
(declare-fun x892 () Bool)
(declare-fun x397 () Bool)
(declare-fun x1060 () x1476)
(declare-fun x1323 () Bool)
(declare-fun x951 () Int)
(declare-fun x1543 (x1476) Int)
(declare-fun x1135 () Int)
(declare-fun x336 () Bool)
(define-fun x829 ((x1476 x1476) (x530 Int)) x1476 (ite ((_ is x963) x1476) (x963 (x1417 x1476) (x979 x1476) (x1263 x1476) (x1072 x1476) (x256 x1476) (x1534 x1476) (x1595 x1476) (+ x530 (x537 x1476))) (ite ((_ is x1265) x1476) (x1265 (x590 x1476) (x432 x1476) (x875 x1476) (x946 x1476) (x482 x1476) (x962 x1476) (+ (x661 x1476) x530)) (ite ((_ is x375) x1476) (x375 (x286 x1476) (x329 x1476) (x164 x1476) (x53 x1476) (x614 x1476) (+ x530 (x1761 x1476))) (ite ((_ is x1665) x1476) (x1665 (x1786 x1476) (x1478 x1476) (x459 x1476) (x1252 x1476) (+ x530 (x178 x1476))) (ite ((_ is x1576) x1476) (x1576 (x183 x1476) (x600 x1476) (x895 x1476) (+ x530 (x571 x1476))) (ite ((_ is x646) x1476) (x646 (x1047 x1476) (+ (x1510 x1476) x530)) (ite ((_ is x1509) x1476) (x1509 (x1314 x1476) (x1750 x1476) (+ (x1615 x1476) x530)) (x902 (+ (x1499 x1476) x530))))))))))
(define-fun x1237 ((x676 Int)) Int (ite (and (< x676 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x676)) x676 (- x676 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x795 ((x676 Int)) Int (ite (and (> 0 x676) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x676)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x676) x676))
(define-fun x396 ((x676 Int)) Int (ite (and (< x676 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x676 0)) x676 (ite (and (< x676 231584178474632390847141970017375815706539969331281128078915168015826259279872) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x676)) (- x676 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x676 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x676)) (+ x676 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1496 x676 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x1502 ((x744 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744) (<= 0 x744)))
(define-fun x1522 ((x744 Int) (x1825 Int)) Bool (and (< (x1496 x744 x1825) x1825) (<= 0 (x1496 x744 x1825))))
(define-fun x660 ((x744 Int) (x1825 Int)) Bool (=> (and (> x1825 0) (<= 0 x744)) (= (< x744 x1825) (= x744 (x1496 x744 x1825)))))
(define-fun x1186 ((x744 Int) (x1825 Int)) Bool (=> (and (> x1825 0) (and (>= x744 x1825) (> (+ x1825 x1825) x744))) (= (x1496 x744 x1825) (- x744 x1825))))
(define-fun x916 ((x744 Int)) Bool (= 0 (x1496 0 x744)))
(define-fun x1355 ((x744 Int)) Bool (= 0 (x1496 x744 1)))
(define-fun x707 ((x744 Int)) Bool (= 0 (x1496 x744 x744)))
(define-fun x1145 ((x744 Int)) Bool (and (x707 x744) (x916 x744) (x1355 x744)))
(define-fun x796 ((x744 Int) (x1825 Int)) Bool (=> (and (> x744 0) (> x1825 0)) (= (= (x406 (x396 (x911 x744 x1825)) x744) x1825) (< (x911 x744 x1825) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x1513 ((x744 Int) (x1825 Int)) Bool (=> (and (not (= x1825 0)) (not (= 0 x744))) (and (= x1825 (x406 (x911 x744 x1825) x744)) (= x744 (x406 (x911 x744 x1825) x1825)))))
(define-fun x1302 ((x744 Int) (x1825 Int)) Bool (=> (and (> x744 0) (< 0 x1825)) (= (> x1825 (x406 115792089237316195423570985008687907853269984665640564039457584007913129639935 x744)) (> (x911 x744 x1825) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x1423 ((x744 Int) (x1825 Int)) Bool (and (= (x396 (x911 x744 (- x1825 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x396 (x911 x744 x1825))) (= (x396 (x911 (- x744 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1825 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x396 (x911 x744 x1825))) (= (x396 (x911 (- x744 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1825)) (x396 (x911 x744 x1825)))))
(define-fun x868 ((x744 Int) (x1825 Int)) Bool (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x744) (> x744 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x1825 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1825))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x911 (- x744 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1825 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (>= (x406 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1825)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744)))) (=> (and (and (< 0 x1825) (<= x1825 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< 0 x744) (<= x744 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (x911 x744 x1825) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x744 (x406 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1825)))) (=> (and (and (> x1825 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1825)) (and (<= x744 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x744))) (= (>= (x911 (- x744 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1825) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744) (x406 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1825)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x744) (< 0 x744)) (and (<= x1825 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1825))) (= (>= (x911 x744 (- x1825 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1825) (x406 57896044618658097711785492504343953926634992332820282019728792003956564819968 x744))))))
(define-fun x484 ((x744 Int)) Bool (and (= 0 (x911 x744 0)) (= 0 (x911 0 x744))))
(define-fun x1661 ((x744 Int)) Bool (and (= (x911 1 x744) x744) (= x744 (x911 x744 1))))
(define-fun x1512 ((x744 Int)) Bool (and (x1661 x744) (x484 x744)))
(define-fun x529 ((x744 Int)) Bool (and (= x744 (x1228 x744 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639935 x744) x744)))
(define-fun x47 ((x744 Int)) Bool (and (= 0 (x1228 0 x744)) (= 0 (x1228 x744 0))))
(define-fun x437 ((x744 Int)) Bool (= x744 (x1228 x744 x744)))
(define-fun x1309 ((x744 Int)) Bool (and (x529 x744) (x47 x744) (x437 x744)))
(define-fun x1308 ((x744 Int) (x1825 Int)) Bool (= (x1228 x1825 x744) (x1228 x744 x1825)))
(define-fun x1746 ((x744 Int) (x1825 Int)) Bool (and (<= 0 (x1228 x744 x1825)) (=> (<= 0 x1825) (>= x1825 (x1228 x744 x1825))) (=> (<= 0 x744) (<= (x1228 x744 x1825) x744))))
(define-fun x816 ((x744 Int) (x1825 Int)) Bool (and (x1746 x744 x1825) (x1308 x744 x1825)))
(define-fun x119 ((x744 Int)) Bool (= (x1496 x744 26959946667150639794667015087019630673637144422540572481103610249216) (x1228 x744 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x195 ((x744 Int)) Bool (and (x816 x744 26959946667150639794667015087019630673637144422540572481103610249215) (x119 x744)))
(define-fun x1782 ((x744 Int)) Bool (= (+ (x1228 x744 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1496 x744 32)) (x396 x744)))
(define-fun x1311 ((x744 Int)) Bool (and (x816 x744 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1782 x744)))
(define-fun x1566 ((x744 Int) (x1825 Int)) Bool (=> (and (< 0 x1825) (< 0 x744)) (and (>= x744 (x406 x744 x1825)) (>= (x406 x744 x1825) 0))))
(define-fun x1467 ((x744 Int) (x1825 Int)) Bool (=> (and (and (<= 1 x1825) (< x1825 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x744) (>= x744 0))) (and (<= 0 (x406 x744 x1825)) (< (x406 x744 x1825) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x1233 ((x744 Int) (x1825 Int)) Bool (=> (and (< 1 x1825) (< x1825 x744)) (< (x406 x744 x1825) x744)))
(define-fun x392 ((x744 Int) (x1825 Int)) Bool (=> (and (< 0 x1825) (< 0 x744)) (= (= 0 (x406 x744 x1825)) (< x744 x1825))))
(define-fun x775 ((x744 Int)) Bool (= (x406 0 x744) 0))
(define-fun x1587 ((x744 Int)) Bool (= (x406 x744 1) x744))
(define-fun x891 ((x744 Int)) Bool (=> (not (= 0 x744)) (= (x406 x744 x744) 1)))
(define-fun x1789 ((x744 Int)) Bool (and (x775 x744) (x1587 x744) (x891 x744)))
(define-fun x461 ((x744 Int)) Bool (= (x1228 x744 1) (x1496 x744 2)))
(define-fun x755 ((x744 Int)) Bool (and (x816 x744 1) (x461 x744)))
(define-fun x552 ((x744 Int)) Bool (= (x1496 x744 128) (x1228 x744 127)))
(define-fun x483 ((x744 Int)) Bool (and (x552 x744) (x816 x744 127)))
(define-fun x349 ((x744 Int)) Bool (= (x396 x744) (+ (x1228 x744 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x1496 x744 256))))
(define-fun x245 ((x744 Int)) Bool (and (x349 x744) (x816 x744 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(define-fun x1206 ((x744 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x615 x744 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x615 115792089237316195423570985008687907853269984665640564039457584007913129639935 x744))))
(define-fun x1776 ((x744 Int)) Bool (and (= (x615 0 x744) x744) (= x744 (x615 x744 0))))
(define-fun x1365 ((x744 Int)) Bool (= x744 (x615 x744 x744)))
(define-fun x811 ((x744 Int)) Bool (and (x1776 x744) (x1206 x744) (x1365 x744)))
(define-fun x402 ((x744 Int) (x1825 Int)) Bool (= (x615 x744 x1825) (x615 x1825 x744)))
(define-fun x1836 ((x744 Int) (x1825 Int)) Bool (and (=> (>= x1825 0) (<= x1825 (x615 x744 x1825))) (>= (+ x1825 x744) (x615 x744 x1825)) (=> (<= 0 x744) (<= x744 (x615 x744 x1825)))))
(define-fun x572 ((x744 Int) (x1825 Int)) Bool (and (x402 x744 x1825) (x1836 x744 x1825)))
(define-fun x39 ((x1580 Int)) Int (ite (> x199 x1580) (x1838 x1580) 0))
(define-fun x1759 ((x1580 Int)) Int (ite (< x1580 x494) (x1546 x1580) 0))
(define-fun x578 ((x1580 Int)) Int (ite (> x1841 x1580) (x859 x1580) 0))
(define-fun x1088 ((x1580 Int)) Int (ite (< x1580 x674) (x1015 x1580) 0))
(define-fun x84 ((x1580 Int)) Int (ite (= x1580 x880) x934 (x131 x1580)))
(define-fun x108 ((x1580 Int)) Int (ite (= x1387 x1580) x1685 (x1659 x1580)))
(define-fun x998 ((x1580 Int)) Int (ite x1524 (ite x1108 (x1659 x1580) (x108 x1580)) (x108 x1580)))
(define-fun x1077 ((x1580 Int)) Int (ite x1524 (ite x1108 (x131 x1580) (x84 x1580)) (x84 x1580)))
(define-fun x303 ((x1580 x1476)) Int (x1413 x1580))
(define-fun x1783 ((x1580 x1476)) Int (ite x1101 (x303 x1580) (ite x1882 (x1413 x1580) (x303 x1580))))
(define-fun x1090 ((x1580 x1476)) Int (ite x491 (x1783 x1580) (x1413 x1580)))
(define-fun x1674 ((x1580 x1476)) Int (ite (= x1580 x1541) 1 (x1413 x1580)))
(define-fun x1519 ((x1580 x1476)) Int (ite x485 (x1413 x1580) (x1674 x1580)))
(define-fun x446 ((x1580 x1476)) Int (ite x1390 (x1413 x1580) (x1519 x1580)))
(define-fun x73 ((x1580 x1476)) Int (ite x810 (x446 x1580) (ite x1611 (x1413 x1580) (x446 x1580))))
(define-fun x1268 ((x1580 x1476)) Int (ite x507 (x1090 x1580) (x73 x1580)))
(define-fun x864 ((x1580 x1476)) Int (ite (= x94 x1580) 0 (x1413 x1580)))
(define-fun x1551 ((x1580 x1476)) Int (ite (= x207 x1580) 1 (x864 x1580)))
(define-fun x950 ((x1580 x1476)) Int (ite x730 (x1413 x1580) (x1551 x1580)))
(define-fun x1023 ((x1580 x1476)) Int (ite x625 (x1413 x1580) (x950 x1580)))
(define-fun x1285 ((x1580 x1476)) Int (ite x255 (x1023 x1580) (ite x175 (x1413 x1580) (x1023 x1580))))
(define-fun x1591 ((x1580 x1476)) Int (ite x1322 (x1268 x1580) (x1285 x1580)))
(define-fun x1798 ((x1580 x1476)) Int (x1413 x1580))
(define-fun x1162 ((x1580 x1476)) Int (x1413 x1580))
(define-fun x1854 ((x1580 x1476)) Int (ite (= x1580 x1460) 0 (x1413 x1580)))
(define-fun x1019 ((x1580 x1476)) Int (ite x1643 (x1162 x1580) (x1854 x1580)))
(define-fun x38 ((x1580 x1476)) Int (ite x78 (x1798 x1580) (ite x1230 (x1019 x1580) (x1413 x1580))))
(define-fun x135 ((x1580 x1476)) Int (ite x901 (x38 x1580) (ite x1397 (x1413 x1580) (x38 x1580))))
(define-fun x1127 ((x1580 x1476)) Int (ite x281 (x1591 x1580) (x135 x1580)))
(define-fun x1493 ((x1580 x1476)) Int (ite x1806 (x1413 x1580) (ite x1144 (x1127 x1580) (x1413 x1580))))
(define-fun x1694 ((x1580 Int)) Int (ite (= x1580 128) 4 (x69 x1580)))
(define-fun x68 ((x1580 Int)) Int (ite (= x1580 160) x595 (x1554 x1580)))
(define-fun x1313 ((x1580 Int)) Int (ite (= x1580 164) x40 (x1618 x1580)))
(define-fun x1721 ((x1580 Int)) Int (ite (= x1580 196) x579 (x1313 x1580)))
(define-fun x1437 ((x1580 Int)) Int (ite (= 228 x1580) x1073 (x1721 x1580)))
(define-fun x1466 ((x1580 Int)) Int (ite (= 128 x1580) 4 (x159 x1580)))
(define-fun x739 ((x1580 Int)) Int (ite (= 160 x1580) x1619 (x1055 x1580)))
(define-fun x258 ((x1580 Int)) Int (ite (= 164 x1580) x1034 (x1618 x1580)))
(define-fun x231 ((x1580 Int)) Int (ite (= 196 x1580) x1846 (x258 x1580)))
(define-fun x688 ((x1580 Int)) Int (ite (= 228 x1580) x808 (x231 x1580)))
(define-fun x770 ((x1580 Int)) Int (ite (= 128 x1580) 4 (x296 x1580)))
(define-fun x903 ((x1580 Int)) Int (ite (= 160 x1580) x416 (x1695 x1580)))
(define-fun x858 ((x1580 Int)) Int (ite (= 164 x1580) x429 (x1618 x1580)))
(define-fun x1484 ((x1580 Int)) Int (ite (= 196 x1580) x1392 (x858 x1580)))
(define-fun x200 ((x1580 Int)) Int (ite (= 228 x1580) x380 (x1484 x1580)))
(define-fun x351 ((x1580 Int)) Int (ite (= 164 x1580) x469 (x848 x1580)))
(define-fun x763 ((x1580 Int)) Int (ite (= 196 x1580) 64 (x351 x1580)))
(define-fun x434 ((x1580 Int)) Int (ite (= 228 x1580) x594 (x763 x1580)))
(define-fun x1652 ((x1580 Int)) Int (ite (= 128 x1580) x726 (x1572 x1580)))
(define-fun x1668 ((x1580 Int)) Int (ite (= x1580 160) x1226 (x434 x1580)))
(define-fun x1540 ((x1580 Int)) Int (ite (= x1338 x1580) x512 (x1618 x1580)))
(define-fun x628 ((x1580 Int)) Int (ite (= x638 x1580) x451 (x1540 x1580)))
(define-fun x866 ((x1580 Int)) Int (ite (= x1264 x1580) x555 (x628 x1580)))
(define-fun x363 ((x1580 x1476)) Int (x1389 x1580))
(define-fun x637 ((x1580 x1476)) Int (ite x1101 (x363 x1580) (ite x1882 (x1389 x1580) (x363 x1580))))
(define-fun x1002 ((x1580 x1476)) Int (ite x491 (x637 x1580) (x1389 x1580)))
(define-fun x1328 ((x1580 x1476)) Int (x1389 x1580))
(define-fun x1432 ((x1580 x1476)) Int (ite x1390 (x1389 x1580) (x1328 x1580)))
(define-fun x1242 ((x1580 x1476)) Int (ite x810 (x1432 x1580) (ite x1611 (x1389 x1580) (x1432 x1580))))
(define-fun x1426 ((x1580 x1476)) Int (ite x507 (x1002 x1580) (x1242 x1580)))
(define-fun x1752 ((x1580 x1476)) Int (x1389 x1580))
(define-fun x1116 ((x1580 x1476)) Int (ite x625 (x1389 x1580) (x1752 x1580)))
(define-fun x1185 ((x1580 x1476)) Int (ite x255 (x1116 x1580) (ite x175 (x1389 x1580) (x1116 x1580))))
(define-fun x909 ((x1580 x1476)) Int (ite x1322 (x1426 x1580) (x1185 x1580)))
(define-fun x1045 ((x1580 x1476)) Int (x1389 x1580))
(define-fun x533 ((x1580 x1476)) Int (x1389 x1580))
(define-fun x1816 ((x1580 x1476)) Int (ite x1643 (x533 x1580) (x1389 x1580)))
(define-fun x1121 ((x1580 x1476)) Int (ite x78 (x1045 x1580) (ite x1230 (x1816 x1580) (x1389 x1580))))
(define-fun x741 ((x1580 x1476)) Int (ite x901 (x1121 x1580) (ite x1397 (x1389 x1580) (x1121 x1580))))
(define-fun x480 ((x1580 x1476)) Int (ite x1144 (ite x281 (x909 x1580) (x741 x1580)) (x1389 x1580)))
(define-fun x927 ((x1580 x1476)) Int (ite (= x1580 (x37 x433)) x569 (x353 x1580)))
(define-fun x455 ((x1580 x1476)) Int (ite (= x1580 (x37 x1871)) x1256 (x927 x1580)))
(define-fun x1632 ((x1580 Int)) Int (ite (= x1580 x11) x929 (x866 x1580)))
(define-fun x1874 ((x1580 Int)) Int (ite x271 (x866 x1580) (ite x445 (x628 x1580) (ite x1142 (x1540 x1580) (ite x802 (x1618 x1580) (x1632 x1580))))))
(define-fun x1703 ((x1580 Int)) Int (ite (= x1405 x1580) 0 (x1874 x1580)))
(define-fun x886 ((x1580 Int)) Int (ite (= x1580 260) x1820 (x1437 x1580)))
(define-fun x1609 ((x1580 Int)) Int (ite x340 (x1437 x1580) (ite x1612 (x1721 x1580) (ite x664 (x1313 x1580) (ite x1092 (x1618 x1580) (x886 x1580))))))
(define-fun x1057 ((x1580 Int)) Int (ite (= x1074 x1580) 0 (x1609 x1580)))
(define-fun x1031 ((x1580 Int)) Int (ite (= x1580 260) x1254 (x688 x1580)))
(define-fun x111 ((x1580 Int)) Int (ite x613 (x688 x1580) (ite x1739 (x231 x1580) (ite x1063 (x258 x1580) (ite x890 (x1618 x1580) (x1031 x1580))))))
(define-fun x376 ((x1580 Int)) Int (ite (= x1580 x137) 0 (x111 x1580)))
(define-fun x285 ((x1580 Int)) Int (ite (= x1580 260) x1506 (x200 x1580)))
(define-fun x605 ((x1580 Int)) Int (ite x873 (x200 x1580) (ite x1004 (x1484 x1580) (ite x289 (x858 x1580) (ite x658 (x1618 x1580) (x285 x1580))))))
(define-fun x230 ((x1580 Int)) Int (ite (= x636 x1580) 0 (x605 x1580)))
(define-fun x855 ((x1580 Int)) Int (ite x883 (x1874 x1580) (x1703 x1580)))
(define-fun x1203 ((x1580 x1476)) Int (ite (= x1580 (x37 x433)) x261 (x353 x1580)))
(define-fun x846 ((x1580 x1476)) Int (ite (= (x37 x433) x1580) x797 (x1203 x1580)))
(define-fun x405 ((x1580 Int)) Int (ite (and (> (+ 100 (x795 (- x1616 100))) x1580) (<= 100 x1580)) (x855 (+ (x1237 (+ x144 100)) (- x1580 100))) (x39 x1580)))
(define-fun x1560 ((x1580 Int)) Int (ite x298 (x1609 x1580) (x1057 x1580)))
(define-fun x1868 ((x1580 x1476)) Int (ite (= (x37 x433) x1580) x764 (x353 x1580)))
(define-fun x110 ((x1580 x1476)) Int (ite (= (x37 x433) x1580) x684 (x1868 x1580)))
(define-fun x712 ((x1580 Int)) Int (ite (= 128 x1580) 33277650900348105781121326340019631498405652329376380866381358124409588547584 (x1257 x1580)))
(define-fun x1412 ((x1580 Int)) Int (ite (= 132 x1580) x1320 (x712 x1580)))
(define-fun x1333 ((x1580 Int)) Int (ite (= x1580 164) x469 (x1412 x1580)))
(define-fun x419 ((x1580 Int)) Int (ite (= 196 x1580) 96 (x1333 x1580)))
(define-fun x292 ((x1580 Int)) Int (ite (= x1580 228) x219 (x419 x1580)))
(define-fun x1525 ((x1580 Int)) Int (ite x1033 (x111 x1580) (x376 x1580)))
(define-fun x1803 ((x1580 x1476)) Int (ite (= x1580 (x37 x433)) x1797 (x353 x1580)))
(define-fun x20 ((x1580 x1476)) Int (ite (= x1580 (x37 x433)) x659 (x1803 x1580)))
(define-fun x943 ((x1580 Int)) Int (ite (= x1580 128) 78829575338057407266098799593532030895783219923606930547737006156155256307712 (x1266 x1580)))
(define-fun x1647 ((x1580 Int)) Int (ite (= 132 x1580) x1320 (x943 x1580)))
(define-fun x517 ((x1580 Int)) Int (ite (= x1580 164) x852 (x1647 x1580)))
(define-fun x1531 ((x1580 Int)) Int (ite (= 196 x1580) 96 (x517 x1580)))
(define-fun x1321 ((x1580 Int)) Int (ite (= 228 x1580) x371 (x1531 x1580)))
(define-fun x1303 ((x1580 Int)) Int (ite x194 (x605 x1580) (x230 x1580)))
(define-fun x1569 ((x1580 x1476)) Int (ite (= (x37 x433) x1580) x35 (x353 x1580)))
(define-fun x1561 ((x1580 x1476)) Int (ite (= x1580 (x37 x433)) x549 (x1569 x1580)))
(define-fun x378 ((x1580 Int)) Int (ite (= 128 x1580) 656247078515407326148355443760548300161286948278503429861414951787075469312 (x1089 x1580)))
(define-fun x823 ((x1580 Int)) Int (ite (= 132 x1580) x852 (x378 x1580)))
(define-fun x1187 ((x1580 Int)) Int (ite (= 164 x1580) x469 (x823 x1580)))
(define-fun x1248 ((x1580 Int)) Int (ite (= 196 x1580) 96 (x1187 x1580)))
(define-fun x463 ((x1580 Int)) Int (ite (= x1580 228) x672 (x1248 x1580)))
(define-fun x34 ((x1580 x1476)) Int (x110 x1580))
(define-fun x1716 ((x1580 x1476)) Int (ite (= x1580 (x37 x433)) x335 (x34 x1580)))
(define-fun x690 ((x1580 Int)) Int (ite (= 260 x1580) x754 (x292 x1580)))
(define-fun x412 ((x1580 Int)) Int (ite x1648 (x292 x1580) (x690 x1580)))
(define-fun x1335 ((x1580 Int)) Int (ite (= x42 x1580) 0 (x412 x1580)))
(define-fun x1075 ((x1580 Int)) Int (ite x887 (x412 x1580) (x1335 x1580)))
(define-fun x1613 ((x1580 Int)) Int (ite (and (<= 132 x1580) (> (+ 132 (x795 (- x629 132))) x1580)) (x1075 (+ (- x1580 132) 260)) (x1759 x1580)))
(define-fun x749 ((x1580 Int)) Int (ite (= x1580 x704) x1046 (x1077 x1580)))
(define-fun x1431 ((x1580 Int)) Int (ite (= x1737 x1580) x1774 (x998 x1580)))
(define-fun x1324 ((x1580 Int)) Int (ite (= x1580 x885) x309 (x749 x1580)))
(define-fun x1128 ((x1580 Int)) Int (ite (= x913 x1580) x885 (x1431 x1580)))
(define-fun x708 ((x1580 x1476)) Int (ite (= x818 x1580) x1813 (x836 x1580)))
(define-fun x851 ((x1580 Int)) Int (ite (= x1580 x1508) x1830 (x1324 x1580)))
(define-fun x1492 ((x1580 Int)) Int (ite (= x1158 x1580) x1637 (x1128 x1580)))
(define-fun x961 ((x1580 x1476)) Int (ite x397 (x708 x1580) (x836 x1580)))
(define-fun x2 ((x1580 Int)) Int (ite x397 (x851 x1580) (x1077 x1580)))
(define-fun x1760 ((x1580 Int)) Int (ite x397 (x1492 x1580) (x998 x1580)))
(define-fun x1447 ((x1580 Int)) Int (ite (and (<= 128 x1580) (> (+ x1107 128) x1580)) (x1613 (+ 132 (- x1580 128))) (x1114 x1580)))
(define-fun x52 ((x1580 Int)) Int (ite (= x1580 x1160) 0 (x1447 x1580)))
(define-fun x733 ((x1580 Int)) Int (ite (= x1580 128) x426 (x52 x1580)))
(define-fun x1791 ((x1580 Int)) Int (ite (= 128 x1580) x15 (x52 x1580)))
(define-fun x665 ((x1580 Int)) Int (ite x667 (x52 x1580) (x1791 x1580)))
(define-fun x385 ((x1580 Int)) Int (ite x1633 (x733 x1580) (x665 x1580)))
(define-fun x1383 ((x1580 x1476)) Int (x20 x1580))
(define-fun x725 ((x1580 x1476)) Int (ite (= x1580 (x37 x433)) x204 (x1383 x1580)))
(define-fun x115 ((x1580 Int)) Int (ite (= 260 x1580) x1143 (x1321 x1580)))
(define-fun x757 ((x1580 Int)) Int (ite x1137 (x1321 x1580) (x115 x1580)))
(define-fun x1663 ((x1580 Int)) Int (ite (= x383 x1580) 0 (x757 x1580)))
(define-fun x987 ((x1580 Int)) Int (ite x76 (x757 x1580) (x1663 x1580)))
(define-fun x1733 ((x1580 Int)) Int (ite (and (< x1580 (+ 132 (x795 (- x427 132)))) (>= x1580 132)) (x987 (+ 260 (- x1580 132))) (x578 x1580)))
(define-fun x1201 ((x1580 Int)) Int (ite (= x1580 x502) x1604 (x1077 x1580)))
(define-fun x1112 ((x1580 Int)) Int (ite (= x1580 x1737) x1339 (x998 x1580)))
(define-fun x980 ((x1580 Int)) Int (ite (and (> (+ 128 x10) x1580) (<= 128 x1580)) (x1733 (+ (- x1580 128) 132)) (x1368 x1580)))
(define-fun x1276 ((x1580 Int)) Int (ite (= x1580 x508) 0 (x980 x1580)))
(define-fun x365 ((x1580 Int)) Int (ite (= x1580 128) x1770 (x1276 x1580)))
(define-fun x404 ((x1580 Int)) Int (ite (= 128 x1580) x1758 (x1276 x1580)))
(define-fun x1 ((x1580 Int)) Int (ite x387 (x1276 x1580) (x404 x1580)))
(define-fun x1521 ((x1580 Int)) Int (ite x472 (x365 x1580) (x1 x1580)))
(define-fun x113 ((x1580 x1476)) Int (x1561 x1580))
(define-fun x1189 ((x1580 x1476)) Int (ite (= (x37 x433) x1580) x1401 (x113 x1580)))
(define-fun x1388 ((x1580 Int)) Int (ite (= 260 x1580) x220 (x463 x1580)))
(define-fun x393 ((x1580 Int)) Int (ite x314 (x463 x1580) (x1388 x1580)))
(define-fun x1468 ((x1580 Int)) Int (ite (= x1657 x1580) 0 (x393 x1580)))
(define-fun x1425 ((x1580 Int)) Int (ite x1371 (x393 x1580) (x1468 x1580)))
(define-fun x109 ((x1580 Int)) Int (ite (and (> (+ 132 (x795 (- x850 132))) x1580) (<= 132 x1580)) (x1425 (+ (- x1580 132) 260)) (x1088 x1580)))
(define-fun x357 ((x1580 Int)) Int (ite (and (> (+ x1429 128) x1580) (<= 128 x1580)) (x109 (+ (- x1580 128) 132)) (x58 x1580)))
(define-fun x656 ((x1580 Int)) Int (ite (= x1580 x1625) 0 (x357 x1580)))
(define-fun x366 ((x1580 Int)) Int (ite (= 128 x1580) x1635 (x656 x1580)))
(define-fun x1775 ((x1580 Int)) Int (ite (= x1580 128) x680 (x656 x1580)))
(define-fun x694 ((x1580 Int)) Int (ite x1093 (x656 x1580) (x1775 x1580)))
(define-fun x1332 ((x1580 Int)) Int (ite x45 (x366 x1580) (x694 x1580)))
(define-fun x55 ((x1580 x1476)) Int (x846 x1580))
(define-fun x743 ((x1580 x1476)) Int (ite (= x1580 (x37 x433)) x1605 (x55 x1580)))
(define-fun x789 ((x1580 Int)) Int (ite (and (>= x1580 128) (> (+ 128 x121) x1580)) (x405 (+ (- x1580 128) 100)) (x1645 x1580)))
(define-fun x888 ((x1580 Int)) Int (ite (= x904 x1580) 0 (x789 x1580)))
(define-fun x1530 ((x1580 Int)) Int (ite (= x1580 128) x603 (x888 x1580)))
(define-fun x905 ((x1580 Int)) Int (ite (= x1580 128) x906 (x888 x1580)))
(define-fun x124 ((x1580 Int)) Int (ite x1284 (x888 x1580) (x905 x1580)))
(define-fun x167 ((x1580 Int)) Int (ite x1395 (x1530 x1580) (x124 x1580)))
(define-fun x221 ((x1580 x1476)) Int (ite x112 (x1543 x1580) (x455 x1580)))
(define-fun x1839 ((x1580 x1476)) Int (ite (= x1580 (x37 x1871)) x388 (x221 x1580)))
(define-fun x1575 ((x744 Int)) Bool (=> (and (not (= x744 3948783980)) (not (= x744 2923951457)) (not (= 656247078515407326148355443760548300161286948278503429861414951787075469312 x744)) (not (= x744 2726977199)) (not (= x744 24341557)) (not (= 2279315017 x744)) (< 10000 x744) (not (= 2112976665 x744)) (not (= x744 115792089237316195423570985008687907853269984665640564039457584007913129639680)) (not (= 100000000000000000 x744)) (not (= x744 33277650900348105781121326340019631498405652329376380866381358124409588547584)) (not (= 106459005500898838667931598610041423549574964228674563513410788872267948359680 x744)) (not (= 50455196340412629536459377552246818957342304218644716315923982585962625499136 x744)) (not (= x744 1039635593)) (not (= 1030951317 x744)) (not (= 100641684887429822015232653770480429695213136867978658013931169090238473568256 x744)) (not (= x744 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x744 78829575338057407266098799593532030895783219923606930547737006156155256307712)) (not (= x744 2867924802)) (not (= x744 4294967295)) (not (= x744 3081457077)) (not (= x744 1234336674)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x744)) (not (= 288768741 x744)) (not (= 1871487246 x744)) (not (= 839595567 x744)) (not (= x744 3285302901)) (not (= x744 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x744 4294967296)) (not (= 1461501637330902918203684832716283019655932542975 x744)) (not (= x744 1461501637330902918203684832716283019655932542976)) (not (= x744 1680813743)) (not (= x744 115792089237316195423570985008687907853269984665640564039457484007913129639935)) (not (= 56965738197333823925951794324075424010313516842063129668313081903848242544640 x744)) (not (= x744 3733007566)) (not (= x744 18446744073709551615))) (not ((_ is x902) (x37 x744)))))
(assert (= (and (not x65) x1315) x827))
(assert (x1502 x241))
(assert (x1502 x814))
(assert (x1575 x1630))
(assert (x1502 x639))
(assert (=> (>= 10000 (x52 288)) (= (x902 (x52 288)) (x37 (x52 288)))))
(assert (= x1845 (or (and x268 x806) x1434)))
(assert (= x1093 (and (not x877) x1749)))
(assert (x1502 x1223))
(assert (= x1222 (and x1883 x257)))
(assert (x1502 x283))
(assert (= x1763 (and x1722 x156)))
(assert (x1502 x1634))
(assert (= (x475 (x902 1234336674)) 1234336674))
(assert (= x1443 (and x21 x1475)))
(assert (x1502 x223))
(assert (and (x1186 x573 2) (x1522 x573 2) (=> (< 0 2) (= x573 (+ (x1496 x573 2) (* (x406 x573 2) 2)))) (x660 x573 2)))
(assert (= (or x1372 x1384 x1150) x942))
(assert (= (x475 (x902 1871487246)) 1871487246))
(assert (= (and (not x633) x1834) x307))
(assert (= (x37 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x902 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1502 x972))
(assert (x1502 x1847))
(assert (x1789 x1231))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x475 (x902 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (=> (>= 10000 (x385 128)) (= (x37 (x385 128)) (x902 (x385 128)))))
(assert (= (or x1144 x1726) x1503))
(assert (= (=> (and (= (= 0 x1614) x1815) (or x1815 (not x1815))) x670) x1175))
(assert (= x983 (and x1547 x57)))
(assert (x1145 x967))
(assert (= (and x205 (not x1463)) x1153))
(assert (and (=> (and (> x1155 0) (> 32 0)) (and (< (- x1155 32) (* (x406 x1155 32) 32)) (>= x1155 (* 32 (x406 x1155 32))))) (x392 x1155 32) (x1566 x1155 32) (= (- x1155 (x1228 31 x1155)) (* (x406 x1155 32) 32)) (x1467 x1155 32) (x1233 x1155 32)))
(assert (x1502 x1312))
(assert (= x343 (and x1717 x327)))
(assert (x1145 x1275))
(assert (= x1216 (or x8 (and x1456 x1360) (and (not x66) x1361) x1225 x693 x33 (and x338 x1756) (and (not x86) x1858) x1169 x1280 (and x1200 x986))))
(assert (x1502 x1517))
(assert (= (and x1095 x884) x420))
(assert (= x333 (=> (and (= x440 (x795 (- x897 128))) (= (>= 224 x440) x1603)) (and (=> (and (= (= x1602 x1126) x644) (= (not x644) x1790) (= x1602 (ite (<= x440 32) (x646 (x37 (x1521 128)) 0) (ite (>= 64 x440) (x1509 (x37 (x1521 128)) (x37 (x1521 160)) 0) (ite (<= x440 96) (x1576 (x37 (x1521 128)) (x37 (x1521 160)) (x37 (x1521 192)) 0) (ite (>= 128 x440) (x1665 (x37 (x1521 128)) (x37 (x1521 160)) (x37 (x1521 192)) (x37 (x1521 224)) 0) (ite (>= 160 x440) (x375 (x37 (x1521 128)) (x37 (x1521 160)) (x37 (x1521 192)) (x37 (x1521 224)) (x37 (x1521 256)) 0) (ite (<= x440 192) (x1265 (x37 (x1521 128)) (x37 (x1521 160)) (x37 (x1521 192)) (x37 (x1521 224)) (x37 (x1521 256)) (x37 (x1521 288)) 0) (ite (<= x440 224) (x963 (x37 (x1521 128)) (x37 (x1521 160)) (x37 (x1521 192)) (x37 (x1521 224)) (x37 (x1521 256)) (x37 (x1521 288)) (x37 (x1521 320)) 0) (x37 x1064)))))))))) x1099) x1603))))
(assert (= x381 (and x1217 x1606)))
(assert (x1789 x1155))
(assert (= x253 (and (not x1147) x1766)))
(assert (= x1012 (and x372 x546)))
(assert (= (x475 (x37 x433)) x433))
(assert (= x105 (or x1641 x1030)))
(assert (= (and (not x564) x182) x122))
(assert (= (and x1745 x1867) x96))
(assert (x1502 x24))
(assert (=> (>= 10000 x1871) (= (x902 x1871) (x37 x1871))))
(assert (x1502 x969))
(assert (x1502 x1846))
(assert (= x977 (and x1666 x838)))
(assert (x1502 x579))
(assert (= (x1165 128) 0))
(assert (x1502 x1347))
(assert (= x361 (and x1464 x1409)))
(assert (= (or x647 x325) x78))
(assert (x1502 x102))
(assert (x1502 x400))
(assert (= x1218 (and x1244 x390)))
(assert (x1502 x1196))
(assert (x1502 x1638))
(assert (x1145 x727))
(assert (x1575 (x385 128)))
(assert (x1575 (x385 256)))
(assert (= (and x452 x1713) x1336))
(assert (x1145 x1658))
(assert (=> (>= 10000 (x167 160)) (= (x37 (x167 160)) (x902 (x167 160)))))
(assert (x1502 x229))
(assert (= x1666 (and x1784 x1377)))
(assert (= x445 (and (not x1586) x1286)))
(assert (= x1795 (x475 (x37 x1795))))
(assert (= (and x182 x564) x465))
(assert (= (x475 (x902 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x1502 x51))
(assert (x1502 x1685))
(assert (= 0 (x58 288)))
(assert (= 1030951317 (x475 (x902 1030951317))))
(assert (= (=> (and (or (not x1585) (and (= x42 (x1237 (+ x219 260))) x1585)) (= (< x219 x847) x1585)) x1419) x1122))
(assert (= (x1276 256) (x475 (x37 (x1276 256)))))
(assert (x1309 x1634))
(assert (x1575 (x888 256)))
(assert (and (x1186 x1181 128) (x1522 x1181 128) (=> (< 0 128) (= x1181 (+ (x1496 x1181 128) (* (x406 x1181 128) 128)))) (x660 x1181 128)))
(assert (and (=> (and (> x173 0) (> 2 0)) (and (< (- x173 2) (* (x406 x173 2) 2)) (>= x173 (* 2 (x406 x173 2))))) (x392 x173 2) (x1566 x173 2) (= (- x173 (x1228 1 x173)) (* (x406 x173 2) 2)) (x1467 x173 2) (x1233 x173 2)))
(assert (x1502 x416))
(assert (= (x1521 128) (x475 (x37 (x1521 128)))))
(assert (x1575 (x656 288)))
(assert (x483 x138))
(assert (x1502 x1693))
(assert (= (x1618 (+ 128 (x1237 (+ 100 x144)))) 0))
(assert (x1502 x1772))
(assert (= x1183 (x475 (x37 x1183))))
(assert (x1502 x154))
(assert (= (x475 (x829 x157 x1847)) (+ x1847 (x475 x157))))
(assert (= (x656 128) (x475 (x37 (x656 128)))))
(assert (= (x1332 288) (x475 (x37 (x1332 288)))))
(assert (x1502 x71))
(assert (x1512 x527))
(assert (= x87 (=> (and (or (and (and (= x1718 x723) (= x833 x179) (= x1109 x1767)) (not x920)) (and (and (= x179 x833) (= x1767 x1109) (= (x1383 (x37 x433)) x1857) (= x947 (ite (= 0 x833) x1290 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x947 x803)) (= x652 (x1237 (+ x947 x803))) (= x1718 x723) (= x204 (- x1857 x947)) (= x803 (x725 (x37 x433)))) x920)) (= x920 (= 0 x833))) x1538)))
(assert (= x1859 (=> (and (= (x1452 128) x1143) (= (not (< 32 x371)) x970)) (and x970 (=> (= 32 x1483) x1481)))))
(assert (x811 x1422))
(assert (= (x1332 320) (x475 (x37 (x1332 320)))))
(assert (= (x475 (x902 115792089237316195423570985008687907853269984665640564039457584007913129639680)) 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x1502 x1320))
(assert (= 4294967295 (x475 (x902 4294967295))))
(assert (x1502 x1064))
(assert (= (x475 (x37 x1064)) x1064))
(assert (= (and x1380 (not x1129)) x802))
(assert (x1502 x1000))
(assert (= x1296 (=> (and (= x6 x791) (= x377 x992)) x1669)))
(assert (= (and x1102 (not x774)) x355))
(assert (= (x902 3948783980) (x37 3948783980)))
(assert (x1145 32))
(assert (x483 x1275))
(assert (= x784 (or x118 x538)))
(assert (= (x1618 (x1237 (+ x144 100))) 0))
(assert (x1502 x727))
(assert (= (or x493 x1390) x1172))
(assert (= (and x1279 x456) x692))
(assert (= (and x326 x49) x978))
(assert (x1309 x510))
(assert (= x1624 (and x671 (not x486))))
(assert (= (x902 1871487246) (x37 1871487246)))
(assert (= (and (not x860) x955) x828))
(assert (x1502 x994))
(assert (x1502 x1601))
(assert (= x1319 (or x354 x1490)))
(assert (x1502 x643))
(assert (=> (>= 10000 (x52 320)) (= (x37 (x52 320)) (x902 (x52 320)))))
(assert (x1502 x430))
(assert (x1502 x380))
(assert (x1502 x723))
(assert (= (x475 (x37 (x385 320))) (x385 320)))
(assert (= (=> (and (or x1677 (not x1677)) (= (= 0 x1686) x1677)) x1788) x1391))
(assert (= (or x1558 x1227) x254))
(assert (= x268 (and x983 x1140)))
(assert (x1502 x1701))
(assert (x1145 256))
(assert (= (and (not x1345) x343) x354))
(assert (=> (>= 10000 (x52 224)) (= (x902 (x52 224)) (x37 (x52 224)))))
(assert (= (or x801 (and x844 (not x98))) x782))
(assert (x1502 x1762))
(assert (=> (<= (x167 256) 10000) (= (x37 (x167 256)) (x902 (x167 256)))))
(assert (= (x1521 224) (x475 (x37 (x1521 224)))))
(assert (= (x58 128) 0))
(assert (= (or x1539 (and (not x1790) x1210)) x1724))
(assert (x1575 (x1521 320)))
(assert (= (or x887 x91) x1062))
(assert (= x1590 (or x1137 x1518)))
(assert (x1789 x1710))
(assert (x1502 x1860))
(assert (x1502 x1579))
(assert (= x1337 (=> (and (and (= (not (= 0 x1152)) x515) (= x515 x1236) (= x593 (not x1236))) (and (not (> 839595567 x1001)) (<= x1723 255) (= x976 (x511 (x37 x433))) (= x101 (not x1626)) (< x1001 1680813743) (= x1152 (ite x101 1 0)) (< x1723 256) (= x1723 (x1493 x468)) (= x1001 1030951317) (= x160 0) (< 0 x976) (< x1001 2112976665) (<= 0 x1723) (= x468 (x1509 (x902 0) (x902 2) 0)) (= (= 0 x1723) x1626) (not (< x1001 1030951317)))) x593)))
(assert (x1502 x606))
(assert (x1575 x1312))
(assert (= (x1332 160) (x475 (x37 (x1332 160)))))
(assert (= x277 (=> (and (= x294 (= 0 x649)) (or (not x294) x294)) x1084)))
(assert (x1502 x97))
(assert (x1502 x79))
(assert (x1502 x1180))
(assert (x1502 x1465))
(assert (x483 x1181))
(assert (= x1018 (or x1397 x901 x130)))
(assert (= 0 (x1257 324)))
(assert (x1502 x981))
(assert (x1502 x1042))
(assert (= (and x1749 x877) x339))
(assert (x1575 (x1276 192)))
(assert (= (=> (and (= x781 x1714) (= x794 x793)) x324) x174))
(assert (x1502 x1799))
(assert (x1502 x527))
(assert (x1309 x1211))
(assert (= (and x1598 x1852) x45))
(assert (x1575 (x385 160)))
(assert (= (and x1667 x1340) x1169))
(assert (= (=> (= (not (< 32 x284)) x272) (and x272 x824)) x1515))
(assert (x1502 x679))
(assert (= (x902 2726977199) (x37 2726977199)))
(assert (x1502 x621))
(assert (= 0 (x1645 320)))
(assert (= x182 (or x105 x471 x1584)))
(assert (= (x902 288768741) (x37 288768741)))
(assert (x1502 x1556))
(assert (= x1505 (and x1676 x70)))
(assert (x1502 x1339))
(assert (= (x1645 224) 0))
(assert (= (x902 4294967295) (x37 4294967295)))
(assert (x1309 x138))
(assert (= (and x551 x308) x489))
(assert (= (x37 656247078515407326148355443760548300161286948278503429861414951787075469312) (x902 656247078515407326148355443760548300161286948278503429861414951787075469312)))
(assert (x1502 x1256))
(assert (x1502 x997))
(assert (x1502 x1083))
(assert (x1145 x233))
(assert (x1502 x1246))
(assert (= (=> (and (= x1271 x543) (= x951 1) (= 0 x1331)) x1052) x95))
(assert (x1502 x550))
(assert (x483 x1504))
(assert (x1502 x947))
(assert (=> (>= 10000 x1772) (= (x902 x1772) (x37 x1772))))
(assert (= x857 (=> (and (= x1086 x1420) (= x575 x1231)) x954)))
(assert (= x837 (and (not x249) x632)))
(assert (x1502 x201))
(assert (x1502 x433))
(assert (and (x1186 x1231 2) (x1522 x1231 2) (=> (< 0 2) (= x1231 (+ (x1496 x1231 2) (* (x406 x1231 2) 2)))) (x660 x1231 2)))
(assert (= x1539 (or x254 x1028)))
(assert (x1145 x657))
(assert (x1502 x1109))
(assert (x1145 x1299))
(assert (= x92 (or x142 (and (not x1835) x1640))))
(assert (= (x902 2867924802) (x37 2867924802)))
(assert (x1502 x923))
(assert (= (+ (x475 x1420) 1) (x475 (x829 x1420 1))))
(assert (x1502 x242))
(assert (x1502 x1843))
(assert (and (x1186 x1259 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x1259 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1259 (+ (x1496 x1259 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x1259 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x1259 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x576 (=> (and (= x536 (= x1477 0)) (or (not x536) x536)) x1022)))
(assert (= x1693 (x475 (x37 x1693))))
(assert (x1145 x208))
(assert (x1502 x32))
(assert (x1502 x1559))
(assert (x1502 x878))
(assert (x1502 x1219))
(assert (x195 x458))
(assert (x1502 x490))
(assert (x1502 x724))
(assert (x1502 x424))
(assert (= x1696 (and x965 x1741)))
(assert (= (or x837 x840) x1408))
(assert (x1502 x1272))
(assert (= (x1114 288) 0))
(assert (= x567 (and x784 x831)))
(assert (x1575 x433))
(assert (= x1044 (and x1773 (not x1486))))
(assert (x1502 x1006))
(assert (= x1726 (or x1212 x210)))
(assert (=> (>= 10000 x133) (= (x902 x133) (x37 x133))))
(assert (= x881 (=> (and (= (x1817 x1850) x680) (= (not (> x241 32)) x464)) (and x1801 x464))))
(assert (= x1287 (=> (and (= x1810 (not (> x116 32))) (= (x1817 x1445) x906)) (and x1810 x1032))))
(assert (x1502 x1792))
(assert (x1145 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (x475 (x902 3285302901)) 3285302901))
(assert (= x1457 (and x1310 x1628)))
(assert (x1502 x247))
(assert (and (x1186 x573 256) (x1522 x573 256) (=> (< 0 256) (= x573 (+ (x1496 x573 256) (* (x406 x573 256) 256)))) (x660 x573 256)))
(assert (= (and x196 x973) x1278))
(assert (x1502 x1299))
(assert (=> (<= (x656 288) 10000) (= (x902 (x656 288)) (x37 (x656 288)))))
(assert (= (and x1471 (not x1240)) x647))
(assert (x1502 x1508))
(assert (x1309 1))
(assert (x1502 x635))
(assert (x1502 x1480))
(assert (= x123 x824))
(assert (= (and x1819 (not x305)) x664))
(assert (x1502 x139))
(assert (x1502 x1488))
(assert (and (x1186 x534 128) (x1522 x534 128) (=> (< 0 128) (= x534 (+ (x1496 x534 128) (* (x406 x534 128) 128)))) (x660 x534 128)))
(assert (x1502 x1876))
(assert (x1502 x360))
(assert (x1502 x1824))
(assert (x1502 x1516))
(assert (= (x1332 192) (x475 (x37 (x1332 192)))))
(assert (= (and x1353 x1567) x1833))
(assert (x1502 x1614))
(assert (and (x1186 x967 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x967 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x967 (+ (x1496 x967 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x967 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x967 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1502 x930))
(assert (x1502 x1183))
(assert (=> (>= 10000 (x167 320)) (= (x37 (x167 320)) (x902 (x167 320)))))
(assert (= (and x920 x845) x1653))
(assert (= (x1521 192) (x475 (x37 (x1521 192)))))
(assert (= (=> (= x564 (> (x475 x265) (x475 x334))) (and (=> (not x564) x1885) (=> x564 x892))) x347))
(assert (= (x1368 128) 0))
(assert (=> (<= x1630 10000) (= (x37 x1630) (x902 x1630))))
(assert (= (=> (and (or (and (= x137 (x1237 (+ x1006 164))) x1281) (not x1281)) (= x1281 (> x1017 x1006))) x302) x1348))
(assert (= 0 (x1554 160)))
(assert (x1502 x1768))
(assert (= x342 x43))
(assert (x1502 x1378))
(assert (x1502 x1001))
(assert (x1502 x847))
(assert (x1502 x383))
(assert (x811 x618))
(assert (x1502 x143))
(assert (= x448 x835))
(assert (= 0 (x1618 (+ (x1237 (+ 100 x144)) 96))))
(assert (x1502 x1769))
(assert (x1502 x315))
(assert (x1575 (x1332 128)))
(assert (= 0 (x1089 356)))
(assert (x1502 x568))
(assert (x1502 x1813))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x1575 (x1332 288)))
(assert (= x456 (and x36 x180)))
(assert (x1502 x1709))
(assert (x1502 x1157))
(assert (x1502 x1731))
(assert (= (x475 (x902 100000000000000000)) 100000000000000000))
(assert (x1502 x636))
(assert (= (and x1061 x1396) x260))
(assert (= x901 (and (not x1260) x1359)))
(assert (x245 x1211))
(assert (x1145 x1259))
(assert (x1502 x813))
(assert (= x1577 (or x1253 x548)))
(assert (x1502 x914))
(assert (x1145 x1439))
(assert (x1145 x542))
(assert (x1502 x524))
(assert (x1502 x1261))
(assert (and (=> (and (> x731 0) (> 32 0)) (and (< (- x731 32) (* (x406 x731 32) 32)) (>= x731 (* 32 (x406 x731 32))))) (x392 x731 32) (x1566 x731 32) (= (- x731 (x1228 31 x731)) (* (x406 x731 32) 32)) (x1467 x731 32) (x1233 x731 32)))
(assert (x1502 x1241))
(assert (=> (<= (x52 128) 10000) (= (x37 (x52 128)) (x902 (x52 128)))))
(assert (= x761 (and (not x598) x171)))
(assert (x1502 x427))
(assert (=> (<= (x52 256) 10000) (= (x37 (x52 256)) (x902 (x52 256)))))
(assert (x1789 x573))
(assert (x1575 (x888 288)))
(assert (x1575 (x52 160)))
(assert (x1502 x1592))
(assert (= x325 (and x778 x1120)))
(assert (x1502 x1820))
(assert (x1575 (x1332 224)))
(assert (= (x37 18446744073709551615) (x902 18446744073709551615)))
(assert (x1502 x1422))
(assert (and (x1186 x542 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x542 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x542 (+ (x1496 x542 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x542 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x542 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1502 x177))
(assert (= x1722 (and x477 x1719)))
(assert (x1502 x220))
(assert (= x1357 (or x194 x145)))
(assert (x1502 x370))
(assert (= (and x338 (not x1756)) x1360))
(assert (= (or x88 x758) x1310))
(assert (x1502 x1588))
(assert (x1502 x1254))
(assert (= 0 (x1645 288)))
(assert (= (and (not x1832) x1172) x810))
(assert (x1502 x674))
(assert (and (x1186 x377 2) (x1522 x377 2) (=> (< 0 2) (= x377 (+ (x1496 x377 2) (* (x406 x377 2) 2)))) (x660 x377 2)))
(assert (= x702 (=> (and (= x907 (x829 x1209 1)) (= x270 (not (> x1565 132)))) (and (=> (= x907 x558) x1877) x270))))
(assert (= (and x1097 x1294) x397))
(assert (x1502 x622))
(assert (x1502 x1755))
(assert (x1502 x935))
(assert (= (or x472 x1542) x1651))
(assert (x1502 x1565))
(assert (= (or x269 x1277) x1372))
(assert (= (x556 96) 0))
(assert (= x996 (and x1722 (not x156))))
(assert (x1309 x941))
(assert (x1575 x689))
(assert (x1309 x794))
(assert (x1502 x926))
(assert (= (x475 (x902 24341557)) 24341557))
(assert (= x151 x323))
(assert (= x95 x1407))
(assert (=> (<= (x888 224) 10000) (= (x902 (x888 224)) (x37 (x888 224)))))
(assert (x1502 x345))
(assert (= (x902 1030951317) (x37 1030951317)))
(assert (= x118 (and (not x322) x922)))
(assert (x1309 x602))
(assert (= (x475 (x37 (x1276 192))) (x1276 192)))
(assert (= x668 (and x1804 x273)))
(assert (= (=> (and (= x315 0) (= x997 x1730) (= x1271 x957)) x235) x1787))
(assert (and (x1186 x1701 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x1701 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1701 (+ (x1496 x1701 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x1701 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x1701 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (or x1354 x876 x624) x1146))
(assert (x1502 x144))
(assert (x1502 x880))
(assert (= x1766 (and x1624 (not x1069))))
(assert (x1502 x698))
(assert (= x554 (and x330 x107)))
(assert (= (=> (and (= x1275 (x406 x377 2)) (<= 0 x559) (= x831 (= x63 (ite x125 1 0))) (= (ite (< 0 x63) x1275 (x1228 127 x1275)) x1814) (<= x559 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> 32 x1814) x125) (= x63 (x1228 1 x377))) (and (=> (and (not x831) (and (= (= 0 x1682) x985) (= x1682 (x1228 1 x377)))) (and (=> (and (not x985) (= (< 0 x1814) x1511)) (and (=> x1511 x944) (=> (not x1511) x323))) (=> x985 x151))) (=> x831 x103))) x189))
(assert (= x999 x1054))
(assert (and (x1186 x458 26959946667150639794667015087019630673637144422540572481103610249216) (x1522 x458 26959946667150639794667015087019630673637144422540572481103610249216) (=> (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (= x458 (+ (x1496 x458 26959946667150639794667015087019630673637144422540572481103610249216) (* (x406 x458 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)))) (x660 x458 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= x1225 (and x90 x1872)))
(assert (x1309 x573))
(assert (= (=> (and (and (not (> 1030951317 x476)) (= x1864 (= 0 x1731)) (= false x1182) (<= 0 x1731) (= x1731 (x1413 x697)) (>= 1461501637330902918203684832716283019655932542975 x852) (= x476 1030951317) (= x935 (ite x653 1 0)) (>= x59 0) (>= 255 x698) (= x779 0) (< x1731 256) (>= x206 0) (not (> 839595567 x476)) (= x1571 (x511 (x37 x433))) (<= x527 4294967295) (>= 1461501637330902918203684832716283019655932542975 x1320) (= x697 (x1509 (x902 0) (x902 2) 0)) (<= x1130 1461501637330902918203684832716283019655932542975) (<= x206 1461501637330902918203684832716283019655932542975) (= x206 x1139) (= (< 0 (x511 (x37 x433))) x1754) (= x59 (x353 (x37 x433))) x1754 (> x1571 0) (<= x433 1461501637330902918203684832716283019655932542975) (>= x527 0) (= x643 3285302901) (= x1204 false) (>= x1822 0) (>= 1461501637330902918203684832716283019655932542975 x1620) (= x1620 x240) (= x1862 1) (>= x852 0) (= (not x1864) x653) (= x217 false) (<= 0 x698) (< x476 1680813743) (>= 255 x1731) (>= 255 x1822) (> x433 0) (= x785 false) (>= x1130 0) (<= 0 x1320) (> 2112976665 x476) (>= x1620 0)) (and (> 256 x620) (= x447 x443) (<= x1870 1461501637330902918203684832716283019655932542975) (= x1741 (< 0 x969)) (not (> 2112976665 x524)) (> 3733007566 x524) (> x1740 0) (>= x620 0) (= x1768 x1009) (= x1579 (x795 (- x199 4))) (= x1740 (x511 (x37 x433))) (= x1197 (x829 x809 3)) (>= 1461501637330902918203684832716283019655932542975 x1552) (= (x1400 x1197) x620) (= x524 3285302901) (>= x1870 0) (= 0 x620) (not (< x524 3081457077)) (= x1552 x240) (<= x1662 1461501637330902918203684832716283019655932542975) (<= 0 x1552) (= x443 0) (= (not x1141) x1188) (= x1141 x1451) (>= 255 x620) (not (< x199 4)) (>= x1662 0) (= x384 0) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x199)) (> x199 35)) (not (> 3285302901 x524)) (= x370 x228) (= x809 (x1509 (x37 x370) (x902 7) 0)) (= (not (= 0 x935)) x1451) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1579) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1579) true) (> 32 x1579)))) (= x705 x370) x1188 (= x1768 x1662))) (and (=> (and (and (< x1755 256) (< x1795 1461501637330902918203684832716283019655932542976) (= x1728 (or x1198 x1081)) (<= x559 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1 x1259) (= (x396 x1259) x506) (= x1744 (= x67 0)) (<= x1755 255) (<= 0 x559) (<= 0 x1795) (> x969 0) (= x1198 (<= x1387 x1593)) (= (x531 x1795) x67) (= x880 0) (= (x1659 x1593) x263) (= x1658 0) (>= 1461501637330902918203684832716283019655932542975 x1795) (= (or (not x1255) x1382) x1003) (= x5 (x646 (x902 1) 0)) (= x966 (x1237 (+ x715 x1387))) (= x939 (not (= 0 x1795))) (= x1848 0) (>= x1755 0) x1003 (= x1829 (x1509 (x37 x1795) x1293 0)) (= x1255 (and x1728 x1213)) (= x262 (= 0 x1755)) (= 0 x1685) (= (ite x1728 x1387 x1398) x934) (= (x131 x1848) x1593) (= x1246 0) (= x147 (= x559 (ite x262 0 1))) (= x1398 (x131 x1246)) (= (or (not x939) x1744) x1382) (= x518 (x396 x1658)) (= (ite x1728 x506 x518) x715) (= x9 x5) (= (not (= x263 0)) x1081) (= (x836 x9) x1795) (= (x1509 (x37 x370) (x902 9) 0) x1293) (= (x46 x1829) x1755)) x1741) (and (=> (and (and (= x966 x1737) (= 1 x1241)) x147) x1831) (=> (not x147) x317))) (=> (and (= x1501 x1387) (not x1741)) x423))) x316))
(assert (x1309 x377))
(assert (x1502 x967))
(assert (x1145 (* x527 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x1502 x788))
(assert (= (and x1310 (not x1628)) x1354))
(assert (x1502 x1226))
(assert (x1502 x1135))
(assert (= x1630 (x475 (x37 x1630))))
(assert (= x1361 (and x346 x141)))
(assert (=> (>= 10000 (x1332 160)) (= (x902 (x1332 160)) (x37 (x1332 160)))))
(assert (= (and x1475 (not x21)) x493))
(assert (x1575 (x52 256)))
(assert (= x1416 (or x782 x485)))
(assert (= x538 (and x322 x922)))
(assert (x1502 x1232))
(assert (x1502 x1327))
(assert (= x1393 (=> (and (= x1805 x1556) (= x561 x1194)) x1485)))
(assert (x1502 x454))
(assert (= x1344 (=> (and (= (<= x591 224) x320) (= x591 (x795 (- x1625 128))) (= x1625 (x1237 (+ x1429 128)))) (and (=> (and (= (= (ite x1154 1 0) x1638) x1623) (= x478 (ite (<= x591 32) (x646 (x37 (x656 128)) 0) (ite (<= x591 64) (x1509 (x37 (x656 128)) (x37 (x656 160)) 0) (ite (<= x591 96) (x1576 (x37 (x656 128)) (x37 (x656 160)) (x37 (x656 192)) 0) (ite (>= 128 x591) (x1665 (x37 (x656 128)) (x37 (x656 160)) (x37 (x656 192)) (x37 (x656 224)) 0) (ite (>= 160 x591) (x375 (x37 (x656 128)) (x37 (x656 160)) (x37 (x656 192)) (x37 (x656 224)) (x37 (x656 256)) 0) (ite (<= x591 192) (x1265 (x37 (x656 128)) (x37 (x656 160)) (x37 (x656 192)) (x37 (x656 224)) (x37 (x656 256)) (x37 (x656 288)) 0) (ite (>= 224 x591) (x963 (x37 (x656 128)) (x37 (x656 160)) (x37 (x656 192)) (x37 (x656 224)) (x37 (x656 256)) (x37 (x656 288)) (x37 (x656 320)) 0) (x37 x1183))))))))) (= x241 (ite (> x1638 0) x1439 (x1228 127 x1439))) (= (x1228 1 x573) x1638) (= x1154 (> 32 x241)) (= x1439 (x406 x573 2))) (and (=> (and (not x1623) (and (= x584 (x1228 1 x573)) (= (= x584 0) x1852))) (and (=> (and x1852 (and (= x168 (x1237 (+ 128 x241))) (= x1635 (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639680 x573)) (= x168 x750))) x306) (=> (and (not x1852) (and (= (x646 (x902 5) 0) x1850) (= x877 (> x241 0)))) (and (=> (not x877) x1801) (=> x877 x881))))) (=> x1623 x804))) x320))))
(assert (= (or x1442 x295) x844))
(assert (x1502 x1046))
(assert (x1502 x319))
(assert (= (=> (and (= x736 (>= 224 x580)) (= (x1237 (+ x1107 128)) x1160) (= (x795 (- x1160 128)) x580)) (and x736 (=> (and (= (= x1035 (ite x1105 1 0)) x1578) (= x1105 (> 32 x747)) (= (ite (<= x580 32) (x646 (x37 (x52 128)) 0) (ite (<= x580 64) (x1509 (x37 (x52 128)) (x37 (x52 160)) 0) (ite (<= x580 96) (x1576 (x37 (x52 128)) (x37 (x52 160)) (x37 (x52 192)) 0) (ite (>= 128 x580) (x1665 (x37 (x52 128)) (x37 (x52 160)) (x37 (x52 192)) (x37 (x52 224)) 0) (ite (<= x580 160) (x375 (x37 (x52 128)) (x37 (x52 160)) (x37 (x52 192)) (x37 (x52 224)) (x37 (x52 256)) 0) (ite (<= x580 192) (x1265 (x37 (x52 128)) (x37 (x52 160)) (x37 (x52 192)) (x37 (x52 224)) (x37 (x52 256)) (x37 (x52 288)) 0) (ite (<= x580 224) (x963 (x37 (x52 128)) (x37 (x52 160)) (x37 (x52 192)) (x37 (x52 224)) (x37 (x52 256)) (x37 (x52 288)) (x37 (x52 320)) 0) (x37 x1706)))))))) x1334) (= x747 (ite (> x1035 0) x534 (x1228 127 x534))) (= (x406 x573 2) x534) (= (x1228 1 x573) x1035)) (and (=> (and x1578 (and (= x1271 x212) (= 0 x767))) x152) (=> (and (and (= (= 0 x984) x65) (= (x1228 1 x573) x984)) (not x1578)) (and (=> (and (and (= x426 (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639680 x573)) (= x350 x1232) (= x1232 (x1237 (+ 128 x747)))) x65) x1119) (=> (and (and (= x1349 (> x747 0)) (= x244 (x646 (x902 5) 0))) (not x65)) (and (=> (not x1349) x1780) (=> x1349 x348))))))))) x1273))
(assert (= 3948783980 (x475 (x902 3948783980))))
(assert (x1575 (x385 288)))
(assert (= x1286 (and x114 x516)))
(assert (x1575 (x167 320)))
(assert (= (and (=> (not x1790) x81) (=> (and (and (= (> 32 x589) x1363) (= x541 (x1228 1 x573)) (= (x406 x573 2) x1299) (= x673 (= x541 (ite x1363 1 0))) (= x589 (ite (> x541 0) x1299 (x1228 127 x1299)))) x1790) (and (=> x673 x103) (=> (and (and (= (> x10 0) x826) (= x1847 (x406 x1220 32)) (= x1536 (x829 x157 x1847)) (= x157 (x646 (x902 5) 0)) (= (x1237 (+ 31 x589)) x1220)) (not x673)) (and (=> (and (and (= x377 0) (= x791 x157)) (not x826)) x1669) (=> (and (= (> x10 31) x774) x826) (and (=> (and (and (= (ite x1238 x1729 x1352) x377) (= x229 (x1733 132)) (= (ite x238 x185 x1735) x1352) (= x341 (x1237 (+ x10 x10))) (= x157 x791) (= (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639680 x229) x1171) (= x185 (x1237 (+ x1171 x341))) (= x238 (>= 255 x341)) (= (x1237 (+ x341 x1171)) x1729) (= (x615 x341 x1171) x1735) (= (>= 255 x341) x1238)) (not x774)) x1669) (=> (and (and (= x74 (x1237 (+ x10 x10))) (= x790 (< 132 x710)) (= (x1237 (+ 1 x74)) x992) (= x710 (x1237 (+ x10 132)))) x774) (and (=> x790 x713) (=> (and (not x790) (= x6 x157)) x1296)))))))))) x1099))
(assert (= (or x1216 x92) x1680))
(assert (x1502 x959))
(assert (= (=> (= x1270 (not (< 32 x1065))) (and x1270 x1013)) x918))
(assert (= 0 (x1266 260)))
(assert (= (and (=> (and (and (= (> 32 x896) x607) (= x940 (x406 x573 2)) (= x896 (ite (< 0 x1351) x940 (x1228 127 x940))) (= (x1228 1 x573) x1351) (= (= x1351 (ite x607 1 0)) x1497)) x1676) (and (=> (and (and (= (> x1107 0) x1386) (= x1710 (x1237 (+ x896 31))) (= x150 (x829 x19 x153)) (= (x646 (x902 5) 0) x19) (= x153 (x406 x1710 32))) (not x1497)) (and (=> (and x1386 (= (> x1107 31) x627)) (and (=> (and (and (= (<= x788 255) x1670) (= x1231 (ite x291 x1262 x1732)) (= x813 (x1237 (+ x618 x788))) (= x510 (x1613 132)) (= (>= 255 x788) x291) (= (x1237 (+ x788 x618)) x1262) (= (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639680 x510) x618) (= x1420 x19) (= x788 (x1237 (+ x1107 x1107))) (= (x615 x788 x618) x490) (= x1732 (ite x1670 x813 x490))) (not x627)) x954) (=> (and x627 (and (= x1261 (x1237 (+ x1107 x1107))) (= (> x407 132) x1292) (= x575 (x1237 (+ x1261 1))) (= (x1237 (+ x1107 132)) x407))) (and (=> (and (not x1292) (= x19 x1086)) x857) (=> x1292 x581))))) (=> (and (not x1386) (and (= 0 x1231) (= x19 x1420))) x954))) (=> (and (and (= x212 x1271) (= 0 x767)) x1497) x152))) (=> (not x1676) x1528)) x995))
(assert (x1502 x800))
(assert (x1789 x1811))
(assert (x1502 x1087))
(assert (x755 x1811))
(assert (x1502 x1583))
(assert (x1502 x541))
(assert (= (x37 (x475 x781)) x781))
(assert (= x787 (and x253 x1578)))
(assert (x1502 x287))
(assert (= (and x250 x186) x1199))
(assert (x1502 x808))
(assert (= (=> (and (or (and (and (= x400 (x1237 (+ x520 x544))) (= x520 (x1716 (x37 x433))) (= x1553 (x34 (x37 x433))) (= x959 x197) (= x544 (ite (= 0 x360) x1290 0)) (= x360 x597) (= (- x1553 x544) x335) (< (+ x544 x520) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x275 x874)) x1260) (and (not x1260) (and (= x959 x197) (= x360 x597) (= x275 x874)))) (= (= x360 0) x1260)) x1325) x211))
(assert (x1575 (x1276 256)))
(assert (x1502 x570))
(assert (x1502 x745))
(assert (= x1706 (x475 (x37 x1706))))
(assert (x245 x510))
(assert (=> (<= (x52 192) 10000) (= (x37 (x52 192)) (x902 (x52 192)))))
(assert (x1502 x728))
(assert (= (x475 (x829 x334 1)) (+ 1 (x475 x334))))
(assert (= (or x873 x658 x1222 x1004 x289) x418))
(assert (x1502 x29))
(assert (= (and x1623 x1343) x751))
(assert (x1502 x476))
(assert (x1502 x469))
(assert (= x1380 (and x1051 x134)))
(assert (= (=> (and (= 128 x223) (= x1527 (x511 (x37 x433))) (= x1688 (x1237 (+ x1655 260))) (= x1655 (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639904 x967)) (= x1267 (= x1527 0)) (= (x1237 (+ 31 x371)) x967) (= x427 (x795 (- x1688 128)))) (and (=> x1267 x1700) (=> (and (not x1267) (and (= x427 x1207) (= x1583 x852) (not (= x1039 2867924802)) (= x1890 (x511 (x37 x433))) (= x60 (or (and (> 96 x278) (= true (<= x278 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x278))) (= x278 (x795 (- x1207 4))) (not (< x1039 2112976665)) (not (> 2867924802 x1039)) (> x1890 0) (= (= x371 (x578 100)) x321) (not (> 2726977199 x1039)) (= x411 78829575338057407266098799593532030895783219923606930547737006156155256307712) (> 3081457077 x1039) (= x1320 x1693) (= x1039 2923951457) (not (> 4 x1207)) x321 (<= 132 x1207))) (and (=> x60 x103) (=> (and (and (= (= x1693 x1320) x991) (= x585 x1693)) (not x60)) (and (=> (not x991) x103) (=> (and (and (= (= x852 x1583) x1358) (= x1583 x526)) x991) (and (=> (and (= x1244 (and (< 131 x1207) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1207) true))) x1358) (and (=> (and (and (= (x1733 100) x10) (= x155 (< 18446744073709551615 x10))) x1244) (and (=> x155 x103) (=> (and (and (= (> x1037 x1207) x1681) (= x188 132) (= (x1237 (+ 132 x10)) x1037)) (not x155)) (and (=> x1681 x103) (=> (and (= true x1362) (not x1681)) (and (=> (not x1362) x103) (=> (and (and (= (x1413 x1245) x1356) (< x1356 256) (>= x1356 0) (<= x1356 255) (= (x1509 (x37 x1693) (x902 2) 0) x1245) (= (< 0 x1356) x1793)) x1362) (and (=> (not x1793) x103) (=> (and x1793 (and (= (= x1792 0) x1886) (= (x1509 (x37 x1583) (x902 2) 0) x276) (= (x1413 x276) x1792) (>= 255 x1792) (< x1792 256) (<= 0 x1792))) (and (=> (not x1886) x103) (=> (and (= x973 (= 0 x1583)) x1886) (and (=> (and (and (= 0 x621) (= (< 0 x969) x1596)) (not x973)) (and (=> (not x1596) x999) (=> (and x1596 (= x180 (> x969 0))) (and (=> (not x180) x103) (=> (and x180 (and (= x1884 (or (not x1520) x487)) (= x1414 (x1077 x563)) (= x1050 1) (= x1823 0) (= x502 0) (= x938 (or x1564 x1159)) (= x563 0) (= x293 (or (not x1208) x1884)) (= x1339 0) (= x201 (x1237 (+ x1229 x1737))) (> 1461501637330902918203684832716283019655932542976 x237) x293 (= x1604 (ite x938 x1737 x1809)) (>= x237 0) (= (not (= 0 x237)) x1520) (= (= x237 x1693) x1279) (<= x237 1461501637330902918203684832716283019655932542975) (= (x646 (x902 1) 0) x566) (= x154 0) (= x1159 (<= x1737 x1414)) (= x1564 (not (= x550 0))) (= (x998 x1414) x550) (= x487 (= 0 x1494)) (= (x531 x237) x1494) (= (x396 x1050) x1071) (= x566 x492) (= x237 (x836 x492)) (= x1229 (ite x938 x1071 x1876)) (= x1809 (x1077 x1823)) (= x1876 (x396 x154)) (= (and x938 x1213) x1208))) (and (=> (and x1279 (= x332 (> x969 0))) (and (=> (and x332 (and (= x1113 (not (= x1221 0))) (= x700 x215) x1149 (= (not (= x1083 0)) x450) (>= 1461501637330902918203684832716283019655932542975 x1083) (= (x531 x1083) x1180) (= x1149 (or x500 (not x1727))) (= (x1112 x930) x1221) (= (x836 x215) x1083) (= (or (not x450) x1664) x500) (= x700 (x646 (x902 1) 0)) (= (and x953 x1213) x1727) (= 0 x1465) (= (>= x930 x201) x1698) (>= x1083 0) (= x953 (or x1698 x1113)) (= x930 (x1201 x1465)) (= x1664 (= 0 x1180)))) x1054) (=> (not x332) x103))) (=> (not x1279) x161))))))) (=> x973 x103))))))))))))) (=> (not x1244) x103))) (=> (not x1358) x103))))))))) x1415))
(assert (= x497 (and x274 x565)))
(assert (x1502 x915))
(assert (= (and (not x1427) x1199) x658))
(assert (x1575 (x1332 320)))
(assert (x1502 x1655))
(assert (x1502 x1767))
(assert (= (x475 (x37 (x888 224))) (x888 224)))
(assert (= (or x1651 x1855) x1210))
(assert (= (and x1673 x1251) x274))
(assert (x1502 x214))
(assert (= (=> (and (or (and (and (= (x113 (x37 x433)) x588) (= x1401 (- x588 x1639)) (= x592 (x1189 (x37 x433))) (= x1769 x957) (= x1828 (x1237 (+ x1639 x592))) (< (+ x1639 x592) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x315 x1327) (= x1639 (ite (= 0 x315) x1290 0)) (= x1614 x1730)) x1832) (and (and (= x1769 x957) (= x1327 x315) (= x1730 x1614)) (not x1832))) (= x1832 (= 0 x315))) x1175) x235))
(assert (x1309 x173))
(assert (x1502 x1692))
(assert (= (and x1713 (not x452)) x931))
(assert (x1575 (x1521 192)))
(assert (x1502 x1440))
(assert (x1575 (x1276 224)))
(assert (= (or x810 x1366 x1611) x834))
(assert (= (and (not x1568) x1457) x783))
(assert (= (x37 26959946667150639794667015087019630673637144422540572481103610249215) (x902 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= x1826 (or (and (not x1676) x70) x301)))
(assert (and (x1186 x1504 128) (x1522 x1504 128) (=> (< 0 128) (= x1504 (+ (x1496 x1504 128) (* (x406 x1504 128) 128)))) (x660 x1504 128)))
(assert (= x849 (and x871 x381)))
(assert (x1502 x83))
(assert (= (=> (and (= x558 x334) (= x173 x1683)) x347) x1877))
(assert (= (and x1362 x246) x169))
(assert (= (and (=> (and (not x648) (and (= (> x1436 x622) x1550) (= x18 (x406 x1135 2)) (= x1436 (x1237 (+ 1 x18))))) (and (=> x1550 x804) (=> (and (not x1550) (and (= (not (= x1699 x559)) x1300) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x559) (<= 0 x559))) (and (=> (and (= x98 x1300) x1300) x176) (=> (not x1300) x1344))))) (=> x648 x804)) x1043))
(assert (= (x848 160) 0))
(assert (= 0 (x1089 420)))
(assert (x1502 x1637))
(assert (x1502 x842))
(assert (= (and x413 (not x673)) x7))
(assert (= x318 (x37 (x475 x318))))
(assert (x1145 x138))
(assert (x1502 x1869))
(assert (= (and x1594 x936) x1094))
(assert (=> (>= 10000 (x656 320)) (= (x37 (x656 320)) (x902 (x656 320)))))
(assert (x1502 x929))
(assert (= x1720 (and x1624 x1069)))
(assert (= (x475 (x37 (x1276 128))) (x1276 128)))
(assert (= x1454 (=> (and (= x1861 (not (> x745 164))) (= (x829 x64 1) x769)) (and x1861 (=> (= x769 x1714) x174)))))
(assert (x1575 x1064))
(assert (x1502 x1477))
(assert (and (x1186 x233 128) (x1522 x233 128) (=> (< 0 128) (= x233 (+ (x1496 x233 128) (* (x406 x233 128) 128)))) (x660 x233 128)))
(assert (=> (>= 10000 (x1276 288)) (= (x37 (x1276 288)) (x902 (x1276 288)))))
(assert (and (x1186 x724 128) (x1522 x724 128) (=> (< 0 128) (= x724 (+ (x1496 x724 128) (* (x406 x724 128) 128)))) (x660 x724 128)))
(assert (and (x1186 x879 26959946667150639794667015087019630673637144422540572481103610249216) (x1522 x879 26959946667150639794667015087019630673637144422540572481103610249216) (=> (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (= x879 (+ (x1496 x879 26959946667150639794667015087019630673637144422540572481103610249216) (* (x406 x879 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)))) (x660 x879 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= (and x1199 x1427) x1124))
(assert (= (and (not x1110) x1743) x817))
(assert (x1502 x1009))
(assert (x1575 x1435))
(assert (x1502 x4))
(assert (= x289 (and (not x1161) x1124)))
(assert (= (and (not x1881) x27) x890))
(assert (= (and x1585 x1734) x91))
(assert (x1502 x1777))
(assert (= x1434 (and x1784 (not x1377))))
(assert (x1575 (x167 160)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x475 (x902 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= x359 (and x509 x536)))
(assert (x1502 x153))
(assert (x1502 x1435))
(assert (= x340 (and (not x234) x1317)))
(assert (= x1485 (=> (and (= x1556 x1076) (= x1194 x319)) x1707)))
(assert (x1309 x1504))
(assert (= x1144 (or x281 x1577)))
(assert (= (and x1386 x1715) x822))
(assert (x1575 x1583))
(assert (x1502 x542))
(assert (= (and x1349 x827) x738))
(assert (= x132 (and (not x773) x1833)))
(assert (x1502 x1688))
(assert (x1502 x992))
(assert (x1502 x1607))
(assert (= (=> (and (= x299 (x353 (x37 x433))) (= x842 (x353 (x37 x1871))) (= (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x842 x1290)) (<= x1290 x299)) x1628)) (and (=> (and x1628 (and (and (= x569 (- x1272 x1290)) (= x1272 (x353 (x37 x433))) (= x424 (x927 (x37 x1871))) (= x1568 (> x1117 0)) (= x1256 (x1237 (+ x424 x1290))) (< (+ x424 x1290) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (or (and x1568 (and (= x505 (x455 (x37 x1871))) (= (<= x1104 (x1543 (x37 x433))) x523) x523 (= (= x505 (x1543 (x37 x1871))) x1600) (= (x455 (x37 x433)) x1104) x1600 (> 4294967296 x609))) (not x1568)))) x23) (=> (and (not x1628) (and (= 0 x136) (= x1889 0))) x282))) x123))
(assert (x1502 x638))
(assert (= (+ (x475 x819) 1) (x475 (x829 x819 1))))
(assert (= (x475 (x37 (x1521 320))) (x1521 320)))
(assert (x1575 x1772))
(assert (= x1052 (=> (and (or (and (not x912) (and (= x951 x1805) (= x561 x543) (= x1331 x1215))) (and x912 (and (< (+ x1010 x401) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x129 (x55 (x37 x433))) (= x1605 (- x129 x1010)) (= x561 x543) (= (x1237 (+ x1010 x401)) x528) (= (x743 (x37 x433)) x401) (= x1215 x1331) (= x1010 (ite (= 0 x951) x1290 0)) (= x1805 x951)))) (= x912 (= 0 x951))) x457)))
(assert (x1502 x1504))
(assert (x1502 x1156))
(assert (= (or x1563 (and x386 x202)) x718))
(assert (= x516 (and x1129 x1380)))
(assert (x1502 x1758))
(assert (x1502 x604))
(assert (= (=> (= (= 0 x716) x336) (and (=> (and (not x336) (and (or x202 (and (not x202) (and (= x952 (x1237 (+ 100000000000000000 x1491))) (not (< 115792089237316195423570985008687907853269984665640564039457484007913129639935 x1491)) (<= 0 x1491) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1491)))) (and (= (= x1049 0) x202) (> 256 x1049) (>= x1049 0) (<= x1049 255) (= (x480 x949) x1049)))) x448) (=> x336 x835))) x560))
(assert (x1502 x331))
(assert (= (=> (= x1474 (< 0 x969)) (and (=> (and (and (= (or (not x251) x290) x1654) (= x1827 (and x1213 x1473)) (= x1428 (x961 x993)) (= (x646 (x902 1) 0) x821) (= x1473 (or x641 x1021)) (= x290 (= x807 x1824)) x391 (= x641 (<= x1656 x1347)) (= x1567 true) (= x1824 (x531 x1428)) (<= x1428 1461501637330902918203684832716283019655932542975) (= (not (= 0 x1428)) x251) (= (x795 (- x969 1)) x1364) (<= 0 x1428) (= (x1760 x1347) x425) (= (x795 (- x969 1)) x807) (= (x829 x821 x807) x993) (= x1021 (not (= x807 x425))) (= x391 (or x1654 (not x1827))) (= x1347 (x2 x807))) x1474) (and (=> (and (not x1567) (and (= x212 x1271) (= 0 x767))) x152) (=> (and (and (or (and (= x486 x773) x773) (and (not x773) (and (= (ite x1318 x1318 (= 0 x1364)) x486) (= x1318 (= x914 0))))) (= x773 (> x408 x1364))) x1567) x1549))) (=> (and (not x1474) (and (= 0 x767) (= x212 x1271))) x152))) x1341))
(assert (= x196 (and x1748 x1886)))
(assert (x1502 x1264))
(assert (= (and x169 x1793) x1748))
(assert (x1502 x279))
(assert (x1502 x1501))
(assert (x1145 x80))
(assert (x1502 x1675))
(assert (x1502 x129))
(assert (= x514 (and (not x973) x196)))
(assert (= (and x760 (not x1474)) x252))
(assert (x1502 x1570))
(assert (x1502 x1398))
(assert (= (x902 839595567) (x37 839595567)))
(assert (x1502 x1823))
(assert (= 0 (x1554 224)))
(assert (x1502 x1532))
(assert (and (=> (and (> x1710 0) (> 32 0)) (and (< (- x1710 32) (* (x406 x1710 32) 32)) (>= x1710 (* 32 (x406 x1710 32))))) (x392 x1710 32) (x1566 x1710 32) (= (- x1710 (x1228 31 x1710)) (* (x406 x1710 32) 32)) (x1467 x1710 32) (x1233 x1710 32)))
(assert (x1575 (x656 320)))
(assert (and (x1186 x940 128) (x1522 x940 128) (=> (< 0 128) (= x940 (+ (x1496 x940 128) (* (x406 x940 128) 128)))) (x660 x940 128)))
(assert (= (and x1111 (not x409)) x876))
(assert (= x574 (and x648 x1319)))
(assert (x1502 x1224))
(assert (x1502 x862))
(assert (x1145 x1504))
(assert (x1502 x1056))
(assert (x1145 x1211))
(assert (= x671 (or x132 x1305)))
(assert (x1502 x910))
(assert (= x1407 x1458))
(assert (= (x37 1461501637330902918203684832716283019655932542976) (x902 1461501637330902918203684832716283019655932542976)))
(assert (= x1883 (and x1067 x623)))
(assert (= x1888 (=> (and (= (not (> x722 128)) x1785) (= x11 (x1237 (+ 96 x144))) (= x929 (x1668 256))) (and (=> (= 128 x501) x865) x1785))))
(assert (= (and (not x264) x307) x583))
(assert (= x255 (and (not x920) x845)))
(assert (= (or x420 x466) x1834))
(assert (x1502 x219))
(assert (x1502 x280))
(assert (= (and x830 x421) x1269))
(assert (x1502 x709))
(assert (= (and x860 x955) x666))
(assert (x1502 x1830))
(assert (x1502 x312))
(assert (x1502 x82))
(assert (= 2923951457 (x475 (x902 2923951457))))
(assert (x1789 32))
(assert (x1502 x805))
(assert (= x1872 (or x122 x465)))
(assert (= x1202 (or x738 x667)))
(assert (x1502 x506))
(assert (= x142 (or x1684 x1711)))
(assert (x1309 x967))
(assert (= 288768741 (x475 (x902 288768741))))
(assert (x1502 x116))
(assert (= (x58 160) 0))
(assert (= x1678 (or x1487 (and x514 (not x1596)))))
(assert (x1502 x263))
(assert (= (or x1689 x387) x1542))
(assert (= x386 (and (not x336) x1503)))
(assert (= (x1114 320) 0))
(assert (= (x37 (x475 x1479)) x1479))
(assert (x1502 x1117))
(assert (x1502 x602))
(assert (= (and x169 (not x1793)) x921))
(assert (= x1315 (and x253 (not x1578))))
(assert (x1789 x1135))
(assert (= (and x107 (not x330)) x936))
(assert (x1502 x940))
(assert (= x56 (and x822 (not x627))))
(assert (and (x1186 x1634 256) (x1522 x1634 256) (=> (< 0 256) (= x1634 (+ (x1496 x1634 256) (* (x406 x1634 256) 256)))) (x660 x1634 256)))
(assert (= (x475 (x829 x1209 1)) (+ (x475 x1209) 1)))
(assert (x811 x974))
(assert (=> (<= (x1521 160) 10000) (= (x37 (x1521 160)) (x902 (x1521 160)))))
(assert (= (and x633 x1834) x820))
(assert (= (and x274 (not x565)) x1080))
(assert (x1502 x233))
(assert (and (x1186 x1438 32) (x1522 x1438 32) (=> (< 0 32) (= x1438 (+ (x1496 x1438 32) (* (x406 x1438 32) 32)))) (x660 x1438 32)))
(assert (x1502 x1552))
(assert (x572 x1422 x974))
(assert (x1502 x957))
(assert (x1502 x1574))
(assert (= (and (not x1251) x1673) x8))
(assert (= (or x687 x1672 x617 x751 x1679 x574 x668 (and (not x1396) x1061) (and x1486 x1773) (and x1020 x729) (and x260 x701) x369 x1844 (and x1044 (not x899))) x485))
(assert (= (and x1457 x1568) x112))
(assert (=> (<= (x385 320) 10000) (= (x902 (x385 320)) (x37 (x385 320)))))
(assert (= (and x830 (not x421)) x298))
(assert (x1502 x1849))
(assert (= x1589 (and x692 (not x332))))
(assert (= x422 (and x675 (not x126))))
(assert (x1502 x854))
(assert (x483 x208))
(assert (x1311 x941))
(assert (= (and x1210 x1790) x413))
(assert (x1502 x1414))
(assert (= x314 (and x1336 (not x825))))
(assert (= 0 (x58 256)))
(assert (= (x475 (x902 839595567)) 839595567))
(assert (x1502 x1495))
(assert (x1502 x1683))
(assert (x1575 x1693))
(assert (x1502 x1436))
(assert (= 0 (x1266 324)))
(assert (= (and x1172 x1832) x1366))
(assert (x1502 x1690))
(assert (and (x1186 x229 256) (x1522 x229 256) (=> (< 0 256) (= x229 (+ (x1496 x229 256) (* (x406 x229 256) 256)))) (x660 x229 256)))
(assert (=> (>= 10000 (x1521 256)) (= (x37 (x1521 256)) (x902 (x1521 256)))))
(assert (= (and x1295 (not x1166)) x382))
(assert (= 1039635593 (x475 (x902 1039635593))))
(assert (x1789 x1364))
(assert (= x1611 (and x1357 (not x93))))
(assert (= x1395 (and x410 x85)))
(assert (= (and (not x912) x1680) x1101))
(assert (x1309 x458))
(assert (x1502 x1732))
(assert (x1502 x1331))
(assert (x1502 x595))
(assert (x1502 x1770))
(assert (x1502 x649))
(assert (x1502 x1553))
(assert (x1502 x559))
(assert (x1502 x1616))
(assert (x1502 x1809))
(assert (x1502 x989))
(assert (= (and x900 x1012) x737))
(assert (= x1773 (and x1526 (not x1085))))
(assert (= x334 (x37 (x475 x334))))
(assert (x1502 x179))
(assert (and (x1186 x1050 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x1050 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1050 (+ (x1496 x1050 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x1050 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x1050 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1502 x61))
(assert (= (and x627 x822) x1582))
(assert (= (=> (and (= (x829 x791 1) x318) (= x1470 (not (< (x475 x318) (x475 x1536))))) (and x189 x1470)) x1880))
(assert (=> (>= 10000 (x385 224)) (= (x902 (x385 224)) (x37 (x385 224)))))
(assert (= (x1114 256) 0))
(assert (= (=> (and (or (and (= (x1237 (+ x371 260)) x383) x1164) (not x1164)) (= x1164 (< x371 x1483))) x1415) x1481))
(assert (= x686 (=> (and (= (> 32 x1480) x1430) (= x1480 (ite (> x247 0) x727 (x1228 127 x727))) (= (= x247 (ite x1430 1 0)) x330) (= (x406 x1231 2) x727) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x914) (>= x914 0) (= x247 (x1228 1 x1231))) (and (=> (and (and (= x212 x1271) (= 0 x767)) x330) x152) (=> (and (not x330) (and (= (= x786 0) x1594) (= (x1228 1 x1231) x786))) (and (=> x1594 x43) (=> (and (= (> x1480 0) x399) (not x1594)) (and (=> x399 x1453) (=> (not x399) x342)))))))))
(assert (x1502 x13))
(assert (= x1163 (=> (= (< x969 1) x1239) (and x1545 x1239))))
(assert (x1502 x1429))
(assert (= x839 (and x774 x1102)))
(assert (= (=> (and (= (= x723 0) x249) (or (not x249) x249)) x1370) x1538))
(assert (= x403 (or x1395 x1441)))
(assert (x811 x1557))
(assert (x1145 x1811))
(assert (x1502 x1889))
(assert (=> (>= 10000 (x385 256)) (= (x37 (x385 256)) (x902 (x385 256)))))
(assert (= (and x386 (not x202)) x1563))
(assert (= x1545 (=> (and (= x767 0) (= x1271 x212)) x152)))
(assert (x1502 x1076))
(assert (= (and (not x1865) x942) x1040))
(assert (x1502 x1805))
(assert (= x145 (and x418 x1410)))
(assert (x1502 x652))
(assert (x1502 x815))
(assert (x755 x1231))
(assert (= (x475 (x37 (x52 288))) (x52 288)))
(assert (x1309 x1181))
(assert (= (and (not x1125) x1018) x548))
(assert (= x449 (and x601 x711)))
(assert (= (and x608 x532) x1471))
(assert (x1575 (x888 224)))
(assert (x1502 x1037))
(assert (x1502 x1017))
(assert (and (x1186 x619 128) (x1522 x619 128) (=> (< 0 128) (= x619 (+ (x1496 x619 128) (* (x406 x619 128) 128)))) (x660 x619 128)))
(assert (= x1711 (and x1374 x1134)))
(assert (= (or x730 x1724) x509))
(assert (x1502 x288))
(assert (= (x475 (x829 x821 x807)) (+ x807 (x475 x821))))
(assert (and (x1186 x794 2) (x1522 x794 2) (=> (< 0 2) (= x794 (+ (x1496 x794 2) (* (x406 x794 2) 2)))) (x660 x794 2)))
(assert (= x735 (or x12 x1806)))
(assert (x1502 x206))
(assert (= x364 (=> (= (not (> x331 32)) x756) (and x756 x1458))))
(assert (= (and (not x766) x746) x613))
(assert (= x1641 (and x1399 x1289)))
(assert (= (or x1033 x1856) x477))
(assert (and (=> (and (> x1364 0) (> 2 0)) (and (< (- x1364 2) (* (x406 x1364 2) 2)) (>= x1364 (* 2 (x406 x1364 2))))) (x392 x1364 2) (x1566 x1364 2) (= (- x1364 (x1228 1 x1364)) (* (x406 x1364 2) 2)) (x1467 x1364 2) (x1233 x1364 2)))
(assert (=> (<= x1312 10000) (= (x902 x1312) (x37 x1312))))
(assert (x1502 x587))
(assert (x1502 x780))
(assert (x1502 x451))
(assert (= (and (=> (and (and (= (x1237 (+ x1581 1)) x139) (= (x406 x969 2) x1581) (= (> x139 x1103) x474)) (not x149)) (and (=> x474 x964) (=> (and (not x474) (and (>= x559 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x559) (= x1463 (not (= x1601 x559))))) (and (=> (and x1463 (= x1463 x1835)) x1489) (=> (not x1463) x1096))))) (=> x149 x964)) x203))
(assert (and (=> (and (> x1135 0) (> 2 0)) (and (< (- x1135 2) (* (x406 x1135 2) 2)) (>= x1135 (* 2 (x406 x1135 2))))) (x392 x1135 2) (x1566 x1135 2) (= (- x1135 (x1228 1 x1135)) (* (x406 x1135 2) 2)) (x1467 x1135 2) (x1233 x1135 2)))
(assert (x1502 x59))
(assert (=> (>= 10000 (x1332 224)) (= (x902 (x1332 224)) (x37 (x1332 224)))))
(assert (x1502 x869))
(assert (= (x385 128) (x475 (x37 (x385 128)))))
(assert (= (x475 (x37 (x52 320))) (x52 320)))
(assert (= x1734 (or x1648 x449)))
(assert (= x81 (=> (and (= x1843 x1271) (= 1 x1477)) x576)))
(assert (= (+ 3 (x475 x809)) (x475 (x829 x809 3))))
(assert (=> (<= (x1276 128) 10000) (= (x37 (x1276 128)) (x902 (x1276 128)))))
(assert (x1145 x794))
(assert (x483 x619))
(assert (= x1689 (and x1258 x163)))
(assert (= x1214 (and x27 x1881)))
(assert (x1575 (x52 320)))
(assert (= (or x613 x1739 x890 x1063 x1011) x932))
(assert (= (x475 (x37 (x52 192))) (x52 192)))
(assert (= x1176 x1193))
(assert (and (x1423 x527 26959946667150639794667015087019630673637144422540572481103610249216) (and (= (x911 x527 (- 115792089210356248756420345214020892766250353992003419616917011526809519390720)) (* (- 115792089210356248756420345214020892766250353992003419616917011526809519390720) x527)) (= (- (* x527 (- 115792089210356248756420345214020892766250353992003419616917011526809519390720)) (- 13407807926820848549258032766824248897686199514843795235058590292862607070448175237982108678046597324626539887026659119732347259916498594267145363699793920)) (x911 (- x527 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089210356248756420345214020892766250353992003419616917011526809519390720))) (= (x911 (- x527 115792089237316195423570985008687907853269984665640564039457584007913129639936) 26959946667150639794667015087019630673637144422540572481103610249216) (- (* 26959946667150639794667015087019630673637144422540572481103610249216 x527) 3121748550315992231381597229793166305748598142664971150859156959625371738819765620120306103063491971159826931121406622895447975679288285306290176))) (x1302 x527 26959946667150639794667015087019630673637144422540572481103610249216) (x868 x527 26959946667150639794667015087019630673637144422540572481103610249216) (= (* 26959946667150639794667015087019630673637144422540572481103610249216 x527) (x911 x527 26959946667150639794667015087019630673637144422540572481103610249216)) (x1513 x527 26959946667150639794667015087019630673637144422540572481103610249216) (x796 x527 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x1309 x619))
(assert (= (and x7 x826) x1102))
(assert (= (x1257 356) 0))
(assert (= x17 (=> (and (= x1479 (x829 x781 1)) (= x1026 (not (> (x475 x1274) (x475 x1479))))) (and x919 x1026))))
(assert (=> (>= 10000 (x1332 288)) (= (x37 (x1332 288)) (x902 (x1332 288)))))
(assert (and (x1186 x967 32) (x1522 x967 32) (=> (< 0 32) (= x967 (+ (x1496 x967 32) (* (x406 x967 32) 32)))) (x660 x967 32)))
(assert (x755 x173))
(assert (x1502 x1152))
(assert (= (and (not x1815) x834) x1167))
(assert (= (x1452 96) 0))
(assert (=> (<= (x1276 320) 10000) (= (x902 (x1276 320)) (x37 (x1276 320)))))
(assert (x1502 x1104))
(assert (= (=> (and (= x640 (x353 (x37 x433))) (= x1719 (and (< (+ x1290 x640) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x862 x1290))) (= (x1237 (+ 164 x1006)) x1860) (= (x353 (x37 x433)) x862) (= x606 164) (= (x795 (- x1860 164)) x611)) (and (=> (and (not x1719) (and (= x179 0) (= x1271 x1109) (= 0 x723))) x1538) (=> (and (and (= x1841 x611) (= x1797 (- x577 x1290)) (< (+ x1290 x1329) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1237 (+ x1290 x1329)) x659) (= x1841 4) (= x156 (= 0 x1290)) (> x51 0) (= 100641684887429822015232653770480429695213136867978658013931169090238473568256 x1342) (= (x1803 (x37 x433)) x1329) (= x577 (x353 (x37 x433))) (= (x511 (x37 x433)) x51)) x1719) (and (=> (not x156) x1700) (=> (and x156 (and (= x1599 (< 0 x371)) (< x1320 1461501637330902918203684832716283019655932542976) (not (> 3081457077 x279)) (= x279 3733007566) (<= x1320 1461501637330902918203684832716283019655932542975) (<= 0 x1320) (>= x852 0) (not (> 4 x1841)) (not (> 2112976665 x279)) (> 3948783980 x279) (not (< x279 3733007566)) (<= x852 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x852) (= x371 (x1452 96)))) (and (=> (and (= x1483 0) (not x1599)) x1481) (=> x1599 x1859))))))) x302))
(assert (= (or x1068 x761) x669))
(assert (x1502 x496))
(assert (x1502 x1491))
(assert (= (and x399 x1008) x3))
(assert (=> (<= x1795 10000) (= (x902 x1795) (x37 x1795))))
(assert (x1145 x344))
(assert (= (and (not x248) x1062) x955))
(assert (and (=> (and (> x1231 0) (> 2 0)) (and (< (- x1231 2) (* (x406 x1231 2) 2)) (>= x1231 (* 2 (x406 x1231 2))))) (x392 x1231 2) (x1566 x1231 2) (= (- x1231 (x1228 1 x1231)) (* (x406 x1231 2) 2)) (x1467 x1231 2) (x1233 x1231 2)))
(assert (= (and (not x1097) x1294) x631))
(assert (x1502 x1098))
(assert (= x76 (and (not x1164) x1590)))
(assert (x1502 x1082))
(assert (= x1528 x43))
(assert (= x1370 (=> (and (= x717 x179) (= x1446 x1109)) x634)))
(assert (= (x475 (x902 3081457077)) 3081457077))
(assert (= (x37 2923951457) (x902 2923951457)))
(assert (and (=> (and (> x1220 0) (> 32 0)) (and (< (- x1220 32) (* (x406 x1220 32) 32)) (>= x1220 (* 32 (x406 x1220 32))))) (x392 x1220 32) (x1566 x1220 32) (= (- x1220 (x1228 31 x1220)) (* (x406 x1220 32) 32)) (x1467 x1220 32) (x1233 x1220 32)))
(assert (x1502 x588))
(assert (x1502 x1275))
(assert (x1502 x1103))
(assert (= (x1089 260) 0))
(assert (= x1549 (and (=> (and (and (= x288 (x1237 (+ x843 1))) (= x843 (x406 x1364 2)) (= (> x288 x408) x1069)) (not x486)) (and (=> (and (and (= x1271 x212) (= 0 x767)) x1069) x152) (=> (and (and (>= x559 0) (= x1147 (not (= x559 x914))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x559)) (not x1069)) (and (=> (and x1147 (= x1676 x1147)) x995) (=> (not x1147) x1273))))) (=> (and (and (= x767 0) (= x1271 x212)) x486) x152))))
(assert (x1502 x684))
(assert (= x171 (and (not x31) x1379)))
(assert (= 0 (x58 224)))
(assert (= 0 (x1368 192)))
(assert (= x243 (and (not x838) x1666)))
(assert (x1502 x1841))
(assert (= x1340 (and x1835 x1640)))
(assert (= (x37 3285302901) (x902 3285302901)))
(assert (x1145 x83))
(assert (= (and x1292 x1582) x1016))
(assert (= x1406 (and x1304 x1214)))
(assert (= (or x339 x1093) x1851))
(assert (= x873 (and (not x257) x1883)))
(assert (= (and x632 x249) x840))
(assert (x1502 x1405))
(assert (x1502 x1316))
(assert (= (and x1736 x978) x1289))
(assert (= (and x336 x1503) x681))
(assert (= x1856 (and x1281 x932)))
(assert (x1575 x1706))
(assert (x1145 x940))
(assert (= (or x403 x1297) x1640))
(assert (x1309 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x1789 x377))
(assert (= (x475 (x37 (x656 224))) (x656 224)))
(assert (= x865 (=> (and (or (and (= (x1237 (+ x722 x144)) x1405) x1243) (not x1243)) (= x1243 (> x501 x722))) x1781)))
(assert (= (and x31 x1379) x41))
(assert (=> (>= 10000 (x656 128)) (= (x902 (x656 128)) (x37 (x656 128)))))
(assert (x1502 x1342))
(assert (x1502 x934))
(assert (= (x475 (x37 (x167 256))) (x167 256)))
(assert (= x667 (and (not x1349) x827)))
(assert (= (x475 (x37 (x888 192))) (x888 192)))
(assert (= x632 (or x255 x175 x1653)))
(assert (= (and x1500 x149) x1280))
(assert (x1502 x797))
(assert (= x193 (and x462 x1677)))
(assert (= x1739 (and (not x1537) x1406)))
(assert (= x1419 (=> (and (= x248 (= x184 0)) (= (x1237 (+ 260 x1488)) x1078) (= (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639904 x941) x1488) (= x629 (x795 (- x1078 128))) (= 128 x1837) (= (x1237 (+ x219 31)) x941) (= (x511 (x37 x433)) x184)) (and (=> (and (and (= x1873 x959) (= 0 x360) (= x874 x1271)) x248) x211) (=> (and (and (not (> 4 x1800)) (not (< x1482 1030951317)) (= x1507 (= (x1759 100) x219)) (>= x1800 132) (> 2112976665 x1482) (not (= 1030951317 x1482)) (> 1680813743 x1482) (= x860 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x13) (and (> 96 x13) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x13) true)))) (not (> 839595567 x1482)) (= x13 (x795 (- x1800 4))) (not (= x1482 1039635593)) (= x1800 x629) (= x469 x408) (= x148 (x511 (x37 x433))) x1507 (= x1320 x1772) (> x148 0) (= 1234336674 x1482) (= x50 33277650900348105781121326340019631498405652329376380866381358124409588547584)) (not x248)) (and (=> (and (not x860) (and (= (= x1772 x1320) x1191) (= x22 x1772))) (and (=> (and x1191 (and (= x546 (and (< 131 x1800) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1800)))) (= x914 x408))) (and (=> (and (and (= (> x1107 18446744073709551615) x900) (= x1107 (x1613 100))) x546) (and (=> (and (not x900) (and (= (< x1800 x1421) x1133) (= x968 132) (= x1421 (x1237 (+ x1107 132))))) (and (=> (and x1133 (and (= 0 x767) (= x1271 x212))) x152) (=> (and (= x57 true) (not x1133)) (and (=> (and (not x57) (and (= x212 x1271) (= 0 x767))) x152) (=> (and (and (= x1692 (x1413 x540)) (= (x1509 (x37 x1772) (x902 2) 0) x540) (< x1692 256) (= (> x1692 0) x1140) (<= x1692 255) (<= 0 x1692)) x57) (and (=> (and (and (= x212 x1271) (= 0 x767)) (not x1140)) x152) (=> (and x1140 (and (= (x1509 (x37 x1772) (x902 2) 0) x1460) (= x806 (< x969 1)) (= x1014 0))) (and (=> (and (and (= (x795 (- x969 1)) x280) (= x1671 (> x280 0))) (not x806)) (and (=> (and x1671 (= x1346 (> x969 0))) (and (=> (and x1346 (and (= 0 x1774) (= (x396 x344) x29) (= 0 x1316) (= x867 (and x181 x1213)) (= x181 (or x1170 x1650)) (= x1705 (or (not x146) x1079)) (< x442 1461501637330902918203684832716283019655932542976) (= (x1077 x312) x311) (= (not (= x1298 0)) x1170) (= (or (not x867) x1705) x1455) (= 1 x344) (= (x1077 x1316) x1559) (= (ite x181 x29 x691) x1771) (= x1298 (x998 x1559)) (= x146 (not (= 0 x442))) (= (= x389 0) x1079) (= 0 x542) (= x924 (x646 (x902 1) 0)) (= x442 (x836 x300)) (= x300 x924) (= x704 0) (= x691 (x396 x542)) (= 0 x312) x1455 (= (<= x1737 x1559) x1650) (= x1046 (ite x181 x1737 x311)) (= x1377 (= x442 x1772)) (>= x442 0) (= x913 (x1237 (+ x1737 x1771))) (>= 1461501637330902918203684832716283019655932542975 x442) (= (x531 x442) x389))) (and (=> (not x1377) x1163) (=> (and x1377 (= (> 1 x969) x838)) (and (=> (and x838 (and (= x212 x1271) (= 0 x767))) x152) (=> (and (and (= x1573 (> x969 x885)) (= x885 (x795 (- x969 1)))) (not x838)) (and (=> (and (and (= 0 x767) (= x1271 x212)) (not x1573)) x152) (=> (and (and (= (ite x367 x913 x889) x309) (= (or x1367 x1394) x367) (= x1058 (x396 x80)) (= x1367 (not (= x885 x1570))) (= x1394 (<= x913 x678)) (= x894 (or (not x562) x128)) (= 1 x80) (<= 0 x1813) (= x1097 (< 0 x969)) (= x553 (ite x367 x1058 x1532)) (= (x396 x1636) x1532) (= x889 (x749 x885)) (= (and x367 x1213) x539) (= x562 (not (= 0 x1813))) (<= x1813 1461501637330902918203684832716283019655932542975) (= x1570 (x1431 x678)) (= x650 (x646 (x902 1) 0)) (= x678 (x749 x885)) x14 (= (x531 x1813) x1027) (= (x836 x1402) x1813) (= (or (not x539) x894) x14) (= (x829 x650 x885) x1402) (= (= x885 x1027) x128) (> 1461501637330902918203684832716283019655932542976 x1813) (= 0 x1636) (= x1158 (x1237 (+ x913 x553)))) x1573) (and (=> (and x1097 (and (= (not (= 0 x1205)) x1173) (= x740 x1656) (= x83 0) (= (= 0 x800) x720) (= (x1237 (+ x1158 x645)) x740) (= 0 x1508) (= x1637 0) x982 (= x982 (or x768 (not x166))) (= 0 x54) (= x800 (x531 x1840)) (= x657 1) (= (or x853 x1173) x439) (= x1307 (x646 (x902 1) 0)) (= (x836 x818) x1840) (= (>= x972 x1158) x853) (= x166 (and x1213 x439)) (<= x1840 1461501637330902918203684832716283019655932542975) (= x1307 x818) (= x1830 (ite x439 x1158 x915)) (= x768 (or (not x898) x720)) (= x971 (x396 x657)) (= x1177 0) (= x1205 (x1128 x972)) (= (x396 x83) x1123) (= (ite x439 x971 x1123) x645) (= (x1324 x1177) x915) (<= 0 x1840) (= (not (= 0 x1840)) x898) (= x972 (x1324 x54)))) x1341) (=> (and (not x1097) (and (= x1271 x212) (= x767 0))) x152))))))))) (=> (and (and (= x1271 x212) (= x767 0)) (not x1346)) x152))) (=> (and (not x1671) (= x1737 x1656)) x1341))) (=> x806 x1545))))))))) (=> (and (and (= x212 x1271) (= x767 0)) x900) x152))) (=> (and (and (= 0 x767) (= x212 x1271)) (not x546)) x152))) (=> (and (not x1191) (and (= x212 x1271) (= 0 x767))) x152))) (=> (and x860 (and (= 0 x767) (= x212 x1271))) x152)))))))
(assert (= (or x1115 x1167) x106))
(assert (= (or x76 x127) x721))
(assert (x1145 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x1502 x136))
(assert (=> (>= 10000 (x1521 288)) (= (x902 (x1521 288)) (x37 (x1521 288)))))
(assert (= x369 (and x849 x444)))
(assert (x755 x573))
(assert (x1502 x1078))
(assert (x1502 x1571))
(assert (= x1390 (or x1443 x1326 x931)))
(assert (x1502 x807))
(assert (x1502 x603))
(assert (x1502 x158))
(assert (and (=> (and (> x1811 0) (> 2 0)) (and (< (- x1811 2) (* (x406 x1811 2) 2)) (>= x1811 (* 2 (x406 x1811 2))))) (x392 x1811 2) (x1566 x1811 2) (= (- x1811 (x1228 1 x1811)) (* (x406 x1811 2) 2)) (x1467 x1811 2) (x1233 x1811 2)))
(assert (x1502 x1247))
(assert (= x1249 (or x1016 x374)))
(assert (x1502 x793))
(assert (= (x475 (x902 3733007566)) 3733007566))
(assert (x1502 x792))
(assert (x1502 x1729))
(assert (x1502 x1364))
(assert (= x1005 (and (not x648) x1319)))
(assert (= x271 (and x373 (not x395))))
(assert (x1575 (x167 224)))
(assert (x1502 x1027))
(assert (= (x475 (x829 x1209 x1495)) (+ x1495 (x475 x1209))))
(assert (x1145 x458))
(assert (x1502 x1870))
(assert (= (x475 (x37 (x52 160))) (x52 160)))
(assert (= x1032 (=> (and (= x926 x780) (= x926 (x1237 (+ 128 x116)))) x1622)))
(assert (x1502 x1071))
(assert (x1502 x1058))
(assert (x1309 x208))
(assert (x1502 x441))
(assert (x1502 x133))
(assert (let ((x744 (* 26959946667150639794667015087019630673637144422540572481103610249216 x527))) (and (x1186 x744 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x744 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x744 (+ (x1496 x744 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x744 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x744 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (= x1294 (and x1573 x243)))
(assert (x1309 x229))
(assert (x1502 x160))
(assert (= (or (and (not x294) x1416) x626) x1475))
(assert (= (=> (= x499 (not (> x969 1))) (and x499 (=> (= x966 x1501) x423))) x317))
(assert (x1502 x212))
(assert (x1502 x377))
(assert (x1502 x1800))
(assert (x1575 (x1332 192)))
(assert (x1575 (x167 288)))
(assert (= x1053 (x37 (x475 x1053))))
(assert (x1145 x510))
(assert (x1145 x229))
(assert (x1502 x1034))
(assert (= (and (not x1433) x706) x734))
(assert (= (x475 (x37 (x385 224))) (x385 224)))
(assert (= (x475 (x37 (x385 192))) (x385 192)))
(assert (= x107 (or x1812 x612)))
(assert (= x521 (and x395 x373)))
(assert (= (or x106 x507) x1322))
(assert (x1502 x1459))
(assert (x1502 x1625))
(assert (= (=> (and (= x1769 x319) (= x1076 x1327)) x1707) x670))
(assert (x245 x573))
(assert (= (and x872 (not x1631)) x1150))
(assert (x1575 (x385 192)))
(assert (= x328 (and x268 (not x806))))
(assert (= (x1089 292) 0))
(assert (x1502 x447))
(assert (= (or x1029 x239) x191))
(assert (= (and x36 (not x180)) x216))
(assert (x1575 (x385 224)))
(assert (= 0 (x1695 192)))
(assert (x1502 x528))
(assert (x1502 x1657))
(assert (= (and x988 (not x893)) x163))
(assert (= x1230 (and x778 (not x1120))))
(assert (= (or x1080 x497) x1500))
(assert (= (x475 (x37 (x167 320))) (x167 320)))
(assert (= (and x1346 x117) x1784))
(assert (= x655 (=> (and (= x1849 (x795 (- x508 128))) (= (x1237 (+ 128 x10)) x508) (= (>= 224 x1849) x48)) (and x48 (=> (and (= x1126 (ite (>= 32 x1849) (x646 (x37 (x1276 128)) 0) (ite (>= 64 x1849) (x1509 (x37 (x1276 128)) (x37 (x1276 160)) 0) (ite (>= 96 x1849) (x1576 (x37 (x1276 128)) (x37 (x1276 160)) (x37 (x1276 192)) 0) (ite (>= 128 x1849) (x1665 (x37 (x1276 128)) (x37 (x1276 160)) (x37 (x1276 192)) (x37 (x1276 224)) 0) (ite (<= x1849 160) (x375 (x37 (x1276 128)) (x37 (x1276 160)) (x37 (x1276 192)) (x37 (x1276 224)) (x37 (x1276 256)) 0) (ite (>= 192 x1849) (x1265 (x37 (x1276 128)) (x37 (x1276 160)) (x37 (x1276 192)) (x37 (x1276 224)) (x37 (x1276 256)) (x37 (x1276 288)) 0) (ite (<= x1849 224) (x963 (x37 (x1276 128)) (x37 (x1276 160)) (x37 (x1276 192)) (x37 (x1276 224)) (x37 (x1276 256)) (x37 (x1276 288)) (x37 (x1276 320)) 0) (x37 x1435))))))))) (= (x1228 1 x573) x158) (= x1708 (> 32 x604)) (= (ite (> x158 0) x1181 (x1228 127 x1181)) x604) (= x1867 (= (ite x1708 1 0) x158)) (= x1181 (x406 x573 2))) (and (=> (and (and (= (= x1418 0) x893) (= (x1228 1 x573) x1418)) (not x1867)) (and (=> (and (and (= (x1237 (+ x604 128)) x679) (= x679 x897) (= (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639680 x573) x1770)) x893) x333) (=> (and (not x893) (and (= (x646 (x902 5) 0) x1283) (= (< 0 x604) x1258))) (and (=> (not x1258) x479) (=> x1258 x417))))) (=> x1867 x103)))))))
(assert (= (and x368 x1358) x390))
(assert (= (=> (and (= (not (> x747 32)) x1132) (= x15 (x1817 x244))) (and x1132 x1780)) x348))
(assert (= (and x1267 x721) x498))
(assert (= x1082 (x475 (x37 x1082))))
(assert (= (and x692 x332) x460))
(assert (x1575 (x888 320)))
(assert (= (and x1535 (not x771)) x1627))
(assert (= x1274 (x37 (x475 x1274))))
(assert (= (or x908 x1284) x1441))
(assert (x1789 2))
(assert (x572 x1557 x1516))
(assert (x1502 x352))
(assert (x1502 x1863))
(assert (= x1633 (and x65 x1315)))
(assert (x1502 x1288))
(assert (= (=> (and (= x717 x1691) (= x635 x1446)) x1048) x634))
(assert (x1502 x1091))
(assert (x1309 x1438))
(assert (x1502 x1039))
(assert (x1502 x1049))
(assert (x1145 x619))
(assert (x1502 x937))
(assert (x572 x788 x618))
(assert (= (=> (and (= (x353 (x37 x433)) x765) (= x25 (x353 (x37 x433))) (= x722 x1616) (= x346 (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x765 x1290)) (<= x1290 x25)))) (and (=> (and x346 (and (<= 100 x956) (= x1103 x469) (> x1821 0) (= (x1203 (x37 x433)) x32) (= (- x742 x1290) x261) (= (= (x39 68) 0) x990) (= x742 (x353 (x37 x433))) (= x82 50455196340412629536459377552246818957342304218644716315923982585962625499136) (= (= x1290 0) x66) (< (+ x32 x1290) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x797 (x1237 (+ x32 x1290))) (= (x511 (x37 x433)) x1821) (= x1616 x956) x990)) (and (=> (and (and (= (or (and (= true (<= x177 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x177)) (> x177 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x986) (not (< x213 1680813743)) (not (< x213 1871487246)) (not (> 839595567 x213)) (> 2112976665 x213) (= 1871487246 x213) (not (> 4 x956)) (= (x795 (- x956 4)) x177)) x66) (and (=> x986 x964) (=> (and (not x986) (and (= x86 (and (< 99 x956) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x956)))) (= x1103 x1601))) (and (=> (not x86) x964) (=> (and x86 (and (= x121 (x405 68)) (= (> x121 18446744073709551615) x1756))) (and (=> x1756 x964) (=> (and (not x1756) (and (= x1247 100) (= (> x772 x956) x1456) (= x772 (x1237 (+ x121 100))))) (and (=> x1456 x964) (=> (and (= true x1251) (not x1456)) (and (=> (and x1251 (and (= (< x969 x1103) x565) (or (and x565 (= x565 x149)) (and (not x565) (and (= (= 0 x1601) x696) (= (ite x696 x696 (= x969 0)) x149)))))) x203) (=> (not x1251) x964))))))))))) (=> (not x66) x964))) (=> (and (not x346) (and (= x1215 0) (= x1271 x561) (= 0 x1805))) x457))) x1781))
(assert (= (=> (and (= x436 (x795 (- x350 128))) (= (<= x436 224) x16)) (and (=> (and (= x1802 (ite (<= x436 32) (x646 (x37 (x385 128)) 0) (ite (<= x436 64) (x1509 (x37 (x385 128)) (x37 (x385 160)) 0) (ite (<= x436 96) (x1576 (x37 (x385 128)) (x37 (x385 160)) (x37 (x385 192)) 0) (ite (>= 128 x436) (x1665 (x37 (x385 128)) (x37 (x385 160)) (x37 (x385 192)) (x37 (x385 224)) 0) (ite (>= 160 x436) (x375 (x37 (x385 128)) (x37 (x385 160)) (x37 (x385 192)) (x37 (x385 224)) (x37 (x385 256)) 0) (ite (<= x436 192) (x1265 (x37 (x385 128)) (x37 (x385 160)) (x37 (x385 192)) (x37 (x385 224)) (x37 (x385 256)) (x37 (x385 288)) 0) (ite (>= 224 x436) (x963 (x37 (x385 128)) (x37 (x385 160)) (x37 (x385 192)) (x37 (x385 224)) (x37 (x385 256)) (x37 (x385 288)) (x37 (x385 320)) 0) (x37 x1312))))))))) (= x1676 (not x651)) (= x651 (= x1334 x1802))) x995) x16)) x1119))
(assert (= (and x486 x671) x473))
(assert (= (+ 1 (x475 x1796)) (x475 (x829 x1796 1))))
(assert (x1502 x1259))
(assert (x1502 x717))
(assert (=> (>= 10000 (x1521 128)) (= (x37 (x1521 128)) (x902 (x1521 128)))))
(assert (x1502 x1181))
(assert (= x677 (and (not x831) x784)))
(assert (x1309 x1275))
(assert (x1575 (x888 192)))
(assert (x1502 x715))
(assert (= (x475 (x829 x781 1)) (+ 1 (x475 x781))))
(assert (= x358 (or x1882 x356 x1101)))
(assert (and (x1186 x414 26959946667150639794667015087019630673637144422540572481103610249216) (x1522 x414 26959946667150639794667015087019630673637144422540572481103610249216) (=> (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (= x414 (+ (x1496 x414 26959946667150639794667015087019630673637144422540572481103610249216) (* (x406 x414 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)))) (x660 x414 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= 0 (x1695 160)))
(assert (= (and (not x1878) x422) x186))
(assert (=> (>= 10000 (x385 288)) (= (x902 (x385 288)) (x37 (x385 288)))))
(assert (= 2279315017 (x475 (x902 2279315017))))
(assert (= (x902 3733007566) (x37 3733007566)))
(assert (x1502 x1448))
(assert (= (and (not x701) x260) x729))
(assert (x1575 (x167 128)))
(assert (= x1597 (and (not x399) x1008)))
(assert (x483 x940))
(assert (x1502 x1828))
(assert (x1145 x377))
(assert (= (x1521 288) (x475 (x37 (x1521 288)))))
(assert (= x88 (or x310 x361)))
(assert (x1502 x1699))
(assert (x1502 x1742))
(assert (x1502 x1010))
(assert (= x1812 (and x596 x1764)))
(assert (x1502 x534))
(assert (= (x475 (x37 (x167 288))) (x167 288)))
(assert (x1575 (x1276 160)))
(assert (x1502 x852))
(assert (x1502 x299))
(assert (= (x1266 356) 0))
(assert (= (=> (and (= x754 (x556 128)) (= (not (< 32 x219)) x870)) (and (=> (= x847 32) x1122) x870)) x586))
(assert (= (x37 50455196340412629536459377552246818957342304218644716315923982585962625499136) (x902 50455196340412629536459377552246818957342304218644716315923982585962625499136)))
(assert (x1789 x173))
(assert (= (x475 (x37 (x1276 160))) (x1276 160)))
(assert (x1502 x544))
(assert (= (x52 224) (x475 (x37 (x52 224)))))
(assert (x1145 x1701))
(assert (= (x475 (x902 106459005500898838667931598610041423549574964228674563513410788872267948359680)) 106459005500898838667931598610041423549574964228674563513410788872267948359680))
(assert (x1502 x1814))
(assert (x1502 x505))
(assert (= (and x965 (not x1741)) x1108))
(assert (and (x1186 x510 256) (x1522 x510 256) (=> (< 0 256) (= x510 (+ (x1496 x510 256) (* (x406 x510 256) 256)))) (x660 x510 256)))
(assert (= (and (not x519) x513) x1384))
(assert (x1502 x168))
(assert (x1502 x599))
(assert (and (x1186 x1658 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x1658 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1658 (+ (x1496 x1658 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x1658 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x1658 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1502 x1774))
(assert (= (x475 (x37 (x167 224))) (x167 224)))
(assert (x1502 x879))
(assert (= (x385 160) (x475 (x37 (x385 160)))))
(assert (x1502 x1418))
(assert (and (x1186 x80 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x80 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x80 (+ (x1496 x80 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x80 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x80 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x1645 192) 0))
(assert (= (and (not x1140) x983) x1449))
(assert (x1502 x591))
(assert (x1502 x11))
(assert (=> (>= 10000 (x385 160)) (= (x902 (x385 160)) (x37 (x385 160)))))
(assert (x1502 x1771))
(assert (and (x1186 x1439 128) (x1522 x1439 128) (=> (< 0 128) (= x1439 (+ (x1496 x1439 128) (* (x406 x1439 128) 128)))) (x660 x1439 128)))
(assert (and (x1186 x1275 128) (x1522 x1275 128) (=> (< 0 128) (= x1275 (+ (x1496 x1275 128) (* (x406 x1275 128) 128)))) (x660 x1275 128)))
(assert (= x988 (and (not x1867) x1745)))
(assert (x1502 x503))
(assert (x1502 x750))
(assert (x1575 (x1276 320)))
(assert (= x892 (=> (and (= (x829 x334 1) x1053) (= x1702 (not (< (x475 x1053) (x475 x265))))) (and x1885 x1702))))
(assert (= x12 (or x681 x718)))
(assert (x1512 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x1311 x967))
(assert (x1502 x436))
(assert (not x316))
(assert (x1502 x407))
(assert (x1502 x691))
(assert (x1502 x408))
(assert (x1575 x1871))
(assert (x1502 x341))
(assert (= x370 (x475 (x37 x370))))
(assert (x1502 x1682))
(assert (x1575 (x656 128)))
(assert (= (x385 256) (x475 (x37 (x385 256)))))
(assert (x1502 x197))
(assert (x1502 x549))
(assert (x1145 x1634))
(assert (= (=> (and (= x1644 x350) (= (x1237 (+ x747 128)) x1644)) x1119) x1780))
(assert (= x1583 (x475 (x37 x1583))))
(assert (= (and x1696 (not x147)) x1306))
(assert (= x1804 (or x1040 x120)))
(assert (= x964 (=> (and (= x1799 x1331) (= x543 x1271) (= x951 0)) x1052)))
(assert (= 0 (x1368 320)))
(assert (x1502 x401))
(assert (x1502 x740))
(assert (x1502 x284))
(assert (x1502 x765))
(assert (= x1004 (and (not x623) x1067)))
(assert (= (and x1359 x1260) x130))
(assert (x1502 x748))
(assert (x1502 x1751))
(assert (x1502 x779))
(assert (x1502 x913))
(assert (x1502 x710))
(assert (= (x475 (x37 (x385 288))) (x385 288)))
(assert (x1309 x1701))
(assert (x1502 x190))
(assert (x1502 x561))
(assert (x1502 x897))
(assert (= (x475 (x37 (x888 160))) (x888 160)))
(assert (= (x656 160) (x475 (x37 (x656 160)))))
(assert (x195 x414))
(assert (x1145 x573))
(assert (x1502 x337))
(assert (= x1013 x1193))
(assert (= (x902 1461501637330902918203684832716283019655932542975) (x37 1461501637330902918203684832716283019655932542975)))
(assert (= x1095 (and x1166 x1295)))
(assert (x1502 x213))
(assert (= (and x1012 (not x900)) x863))
(assert (x1502 x384))
(assert (= (and (not x1386) x1715) x777))
(assert (= (and (not x1667) x1340) x49))
(assert (x1502 x1373))
(assert (x483 x727))
(assert (= (=> (= (= 0 x1241) x236) (and (=> (and (not x236) (and (or (and (and (not (> 100000000000000000 x1777)) (= (x795 (- x1777 100000000000000000)) x352) (= x352 x1290)) (not x771)) (and (= x1777 x1290) x771)) (and (= x771 (= 0 x287)) (>= 255 x287) (< x287 256) (= (x1660 x819) x1777) (>= x287 0) (= (x1389 x949) x287) (= x1796 (x1509 (x37 x370) (x902 7) 0)) (= x949 (x829 x1796 3)) (<= 0 x1777) (<= x1777 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x819 (x829 x1796 1))))) x1808) (=> x236 x1337))) x1831))
(assert (x1502 x411))
(assert (x195 x879))
(assert (x1502 x882))
(assert (x1502 x501))
(assert (x1502 x518))
(assert (x1502 x1862))
(assert (x1502 x1636))
(assert (x1502 x1205))
(assert (x1502 x553))
(assert (x1502 x1211))
(assert (x1502 x619))
(assert (x1502 x786))
(assert (= (x167 192) (x475 (x37 (x167 192)))))
(assert (= 0 (x848 192)))
(assert (x1502 x371))
(assert (= (and x677 (not x985)) x435))
(assert (= (and (not x1606) x1217) x617))
(assert (x1575 (x167 256)))
(assert (= (x888 288) (x475 (x37 (x888 288)))))
(assert (x1502 x794))
(assert (x483 x534))
(assert (= 2867924802 (x475 (x902 2867924802))))
(assert (x1502 x453))
(assert (= (and x1164 x1590) x127))
(assert (= (x475 (x902 56965738197333823925951794324075424010313516842063129668313081903848242544640)) 56965738197333823925951794324075424010313516842063129668313081903848242544640))
(assert (= (+ 1 (x475 x64)) (x475 (x829 x64 1))))
(assert (x1502 x767))
(assert (x1502 x1753))
(assert (x1502 x1298))
(assert (x1502 x1074))
(assert (=> (<= x1064 10000) (= (x37 x1064) (x902 x1064))))
(assert (x1575 (x1276 288)))
(assert (=> (>= 10000 (x385 192)) (= (x37 (x385 192)) (x902 (x385 192)))))
(assert (= (=> (and (= x1076 x717) (= x319 x1446)) x634) x1707))
(assert (x1502 x278))
(assert (= (x475 (x37 (x1276 288))) (x1276 288)))
(assert (= 4294967296 (x475 (x902 4294967296))))
(assert (= x872 (and (not x162) x1403)))
(assert (= x1420 (x37 (x475 x1420))))
(assert (= (x902 115792089237316195423570985008687907853269984665640564039457484007913129639935) (x37 115792089237316195423570985008687907853269984665640564039457484007913129639935)))
(assert (x1575 (x888 160)))
(assert (= x495 (and x126 x675)))
(assert (= x1096 (=> (and (= x699 (>= 224 x1646)) (= (x1237 (+ 128 x121)) x904) (= (x795 (- x904 128)) x1646)) (and (=> (and (= x208 (x406 x573 2)) (= (= x1224 (ite x1794 1 0)) x1725) (= x116 (ite (> x1224 0) x208 (x1228 127 x208))) (= x945 (ite (<= x1646 32) (x646 (x37 (x888 128)) 0) (ite (<= x1646 64) (x1509 (x37 (x888 128)) (x37 (x888 160)) 0) (ite (<= x1646 96) (x1576 (x37 (x888 128)) (x37 (x888 160)) (x37 (x888 192)) 0) (ite (>= 128 x1646) (x1665 (x37 (x888 128)) (x37 (x888 160)) (x37 (x888 192)) (x37 (x888 224)) 0) (ite (<= x1646 160) (x375 (x37 (x888 128)) (x37 (x888 160)) (x37 (x888 192)) (x37 (x888 224)) (x37 (x888 256)) 0) (ite (<= x1646 192) (x1265 (x37 (x888 128)) (x37 (x888 160)) (x37 (x888 192)) (x37 (x888 224)) (x37 (x888 256)) (x37 (x888 288)) 0) (ite (>= 224 x1646) (x963 (x37 (x888 128)) (x37 (x888 160)) (x37 (x888 192)) (x37 (x888 224)) (x37 (x888 256)) (x37 (x888 288)) (x37 (x888 320)) 0) (x37 x689))))))))) (= (x1228 1 x573) x1224) (= (< x116 32) x1794)) (and (=> (and (and (= x410 (= x1042 0)) (= (x1228 1 x573) x1042)) (not x1725)) (and (=> (and (not x410) (and (= x1445 (x646 (x902 5) 0)) (= x753 (< 0 x116)))) (and (=> (not x753) x1032) (=> x753 x1287))) (=> (and x410 (and (= (x1237 (+ 128 x116)) x1533) (= x1533 x780) (= x603 (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639680 x573)))) x1622))) (=> x1725 x964))) x699))))
(assert (x1502 x1483))
(assert (= (x475 (x37 (x656 320))) (x656 320)))
(assert (= (=> (and (= true x1166) (<= x559 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x207 (x1509 (x37 x1583) (x902 2) 0)) (= x94 (x1509 (x37 x1693) (x902 2) 0)) (>= x559 0)) (and (=> (and x1166 (and (= (< x969 x559) x884) (or (and x884 (= x633 x884)) (and (not x884) (and (= (ite x1066 x1066 (= x969 0)) x633) (= x1066 (= x559 0))))))) x232) (=> (not x1166) x103))) x1054))
(assert (= (or x1094 x481) x301))
(assert (x1789 x969))
(assert (x1502 x165))
(assert (= (x902 1234336674) (x37 1234336674)))
(assert (= x1442 (or x45 x1851)))
(assert (= x387 (and (not x1258) x163)))
(assert (= x1819 (and x1514 x495)))
(assert (x1502 x188))
(assert (x1309 x1439))
(assert (x1502 x1621))
(assert (= 0 (x1055 160)))
(assert (x811 x1516))
(assert (x1309 x534))
(assert (= x27 (and x422 x1878)))
(assert (x1502 x350))
(assert (x1575 x1082))
(assert (= (x52 256) (x475 (x37 (x52 256)))))
(assert (x1575 (x1276 128)))
(assert (= (and (not x236) x1059) x1535))
(assert (x1502 x275))
(assert (= x1282 (and x1336 x825)))
(assert (= 18446744073709551615 (x475 (x902 18446744073709551615))))
(assert (=> (<= (x1332 256) 10000) (= (x902 (x1332 256)) (x37 (x1332 256)))))
(assert (x1502 x1385))
(assert (= 50455196340412629536459377552246818957342304218644716315923982585962625499136 (x475 (x902 50455196340412629536459377552246818957342304218644716315923982585962625499136))))
(assert (and (x1186 x602 26959946667150639794667015087019630673637144422540572481103610249216) (x1522 x602 26959946667150639794667015087019630673637144422540572481103610249216) (=> (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (= x602 (+ (x1496 x602 26959946667150639794667015087019630673637144422540572481103610249216) (* (x406 x602 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)))) (x660 x602 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= x1359 (or x100 x1230 x78)))
(assert (x1502 x951))
(assert (= x830 (or x664 x192 x1612 x340 x1092)))
(assert (=> (<= (x167 128) 10000) (= (x902 (x167 128)) (x37 (x167 128)))))
(assert (= (=> (and (= x1448 x1271) (= 1 x1686)) x1391) x1528))
(assert (= (x475 (x37 (x656 256))) (x656 256)))
(assert (x1502 x510))
(assert (x1502 x1712))
(assert (= (x167 160) (x475 (x37 (x167 160)))))
(assert (x1502 x1035))
(assert (= (or x445 x271 x1142 x521 x802) x297))
(assert (= (x902 1039635593) (x37 1039635593)))
(assert (x1502 x1644))
(assert (= (x475 (x37 x133)) x133))
(assert (=> (<= (x1521 320) 10000) (= (x902 (x1521 320)) (x37 (x1521 320)))))
(assert (x1502 x722))
(assert (x1502 x1168))
(assert (=> (>= 10000 x1693) (= (x902 x1693) (x37 x1693))))
(assert (= x308 (or x1282 x314)))
(assert (x1502 x240))
(assert (x1502 x1352))
(assert (and (x1186 x229 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x229 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x229 (+ (x1496 x229 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x229 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x229 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1575 x370))
(assert (and (x1186 x1811 2) (x1522 x1811 2) (=> (< 0 2) (= x1811 (+ (x1496 x1811 2) (* (x406 x1811 2) 2)))) (x660 x1811 2)))
(assert (x1502 x966))
(assert (x1502 x344))
(assert (x1502 x494))
(assert (x1502 x833))
(assert (x1502 x63))
(assert (x1502 x1506))
(assert (x1502 x904))
(assert (= (x1618 (+ (x1237 (+ 100 x144)) 32)) 0))
(assert (= 656247078515407326148355443760548300161286948278503429861414951787075469312 (x475 (x902 656247078515407326148355443760548300161286948278503429861414951787075469312))))
(assert (x1502 x442))
(assert (x1502 x678))
(assert (= x1253 (and x1125 x1018)))
(assert (x1502 x1025))
(assert (x1502 x1619))
(assert (x1502 x1014))
(assert (x1502 x15))
(assert (x1502 x389))
(assert (= (x556 128) 0))
(assert (=> (<= x1583 10000) (= (x37 x1583) (x902 x1583))))
(assert (x1502 x906))
(assert (x1502 x705))
(assert (x1502 x1494))
(assert (= x140 (=> (and (= x1562 (not (< 128 x815))) (= (x903 256) x1506)) (and x1562 (=> (= x1373 128) x415)))))
(assert (= (x37 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x902 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (= x1137 (and x1763 (not x1599))))
(assert (= (and (not x551) x308) x1371))
(assert (x1502 x54))
(assert (= (and x1865 x942) x120))
(assert (x1502 x429))
(assert (= (and (not x753) x1375) x1284))
(assert (x1502 x1795))
(assert (=> (>= 10000 (x167 224)) (= (x37 (x167 224)) (x902 (x167 224)))))
(assert (x1502 x1875))
(assert (x1502 x843))
(assert (= x1608 (and x243 (not x1573))))
(assert (= x423 (=> (and (= 0 x1241) (= x1501 x1737)) x1831)))
(assert (x1502 x121))
(assert (= (x1114 192) 0))
(assert (=> (<= x1706 10000) (= (x902 x1706) (x37 x1706))))
(assert (and (x1186 x1636 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x1636 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1636 (+ (x1496 x1636 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x1636 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x1636 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x1788 (=> (= (= x1686 0) x1120) (and (=> (and (not x1120) (and (= x959 0) (= 1 x360) (= x874 x1448))) x211) (=> (and (and (= x1271 x981) (= x975 0)) x1120) x1866)))))
(assert (x1309 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (x475 (x829 x1796 3)) (+ 3 (x475 x1796))))
(assert (x1502 x580))
(assert (= x1200 (and x1361 x66)))
(assert (x1145 x1050))
(assert (and (x1186 x138 128) (x1522 x138 128) (=> (< 0 128) (= x138 (+ (x1496 x138 128) (* (x406 x138 128) 128)))) (x660 x138 128)))
(assert (= x1555 (=> (and (= x79 (x795 (- x928 164))) (= (x353 (x37 x433)) x165) (= (and (<= x1290 x1192) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1290 x165))) x608) (= x1192 (x353 (x37 x433))) (= x1610 164) (= (x1237 (+ x1376 164)) x928)) (and (=> (and (and (= 0 x197) (= x1271 x275) (= x597 0)) (not x608)) x1325) (=> (and x608 (and (= x1098 106459005500898838667931598610041423549574964228674563513410788872267948359680) (= x764 (- x1461 x1290)) (< 0 x1517) (= (x1237 (+ x1290 x143)) x684) (= x1461 (x353 (x37 x433))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x143 x1290)) (= x1240 (= x1290 0)) (= (x1868 (x37 x433)) x143) (= x1517 (x511 (x37 x433))) (= x494 4) (= x494 x79))) (and (=> (and x1240 (and (not (< x441 3081457077)) (<= x1320 1461501637330902918203684832716283019655932542975) (= x219 (x556 96)) (>= x469 0) (= x601 (> x219 0)) (not (> 3948783980 x441)) (not (> 3733007566 x441)) (>= x1320 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x469) (not (> 2112976665 x441)) (> 1461501637330902918203684832716283019655932542976 x1320) (not (> 4 x494)) (= x441 3948783980))) (and (=> x601 x586) (=> (and (not x601) (= x847 0)) x1122))) (=> (and (not x1240) (and (= 0 x975) (= x1271 x981))) x1866)))))))
(assert (x1502 x1857))
(assert (= x246 (and (not x1681) x714)))
(assert (= (and x514 x1596) x36))
(assert (x1502 x1428))
(assert (= x470 (and x1106 x362)))
(assert (= x324 (=> (= x1865 (> (x475 x1274) (x475 x781))) (and (=> x1865 x17) (=> (not x1865) x919)))))
(assert (x1502 x137))
(assert (x1502 x1338))
(assert (= (=> (and (= x833 0) (= x1767 x1271) (= x454 x1718)) x87) x1700))
(assert (= x462 (or x1826 x1643)))
(assert (= x507 (or x491 x683)))
(assert (= x372 (and x828 x1191)))
(assert (x1502 x620))
(assert (= (x37 33277650900348105781121326340019631498405652329376380866381358124409588547584) (x902 33277650900348105781121326340019631498405652329376380866381358124409588547584)))
(assert (= (and x362 (not x1106)) x1887))
(assert (x1789 x794))
(assert (=> (<= (x888 128) 10000) (= (x37 (x888 128)) (x902 (x888 128)))))
(assert (x1502 x209))
(assert (= (x37 (x475 x150)) x150))
(assert (x1502 x874))
(assert (x1502 x414))
(assert (= x232 (and (=> (and (and (= x345 (x1237 (+ 1 x759))) (= x264 (> x345 x559)) (= x759 (x406 x969 2))) (not x633)) (and (=> (and (not x264) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x559) (<= 0 x559) (= x1036 false))) (and (=> (and (= x1036 x1790) x1036) x1099) (=> (not x1036) x655))) (=> x264 x103))) (=> x633 x103))))
(assert (x1502 x1438))
(assert (and (x1186 x1701 32) (x1522 x1701 32) (=> (< 0 32) (= x1701 (+ (x1496 x1701 32) (* (x406 x1701 32) 32)))) (x660 x1701 32)))
(assert (= x841 (and x1147 x1766)))
(assert (x1502 x747))
(assert (x1502 x1194))
(assert (x1502 x742))
(assert (= (x1055 256) 0))
(assert (= (and x925 x1323) x269))
(assert (= x1022 (=> (= x1433 (= x1477 0)) (and (=> x1433 x1700) (=> (and (and (= x833 1) (= 0 x1718) (= x1843 x1767)) (not x1433)) x87)))))
(assert (= x100 (and x248 x1062)))
(assert (= (x1645 160) 0))
(assert (x1502 x1737))
(assert (x1502 x443))
(assert (= x1584 (and (not x326) x49)))
(assert (= (and x1095 (not x884)) x466))
(assert (x1502 x672))
(assert (= (=> (and (>= x1195 0) (<= x1195 1461501637330902918203684832716283019655932542975) (= (x187 x1796) x1195) (> 1461501637330902918203684832716283019655932542976 x1195) (= (= x433 x1195) x1110)) (and (=> (and x1110 (and (>= 4294967295 x527) (<= 0 x527) (> 4294967296 x527) (= (= 106459005500898838667931598610041423549574964228674563513410788872267948359680 (x1629 x527 224)) x126))) (and (=> (and x126 (and (= (x1694 128) x1376) (= x595 (x1237 (+ 106459005500898838667931598610041423549574964228674563513410788872267948359680 x1219))) (= x879 (x1554 160)) (= x1219 (x1228 26959946667150639794667015087019630673637144422540572481103610249215 x879)) (= (< 0 x1376) x1514))) (and (=> (and (= 0 x1588) (not x1514)) x856) (=> (and (and (= x40 (x68 160)) (= (> x1376 32) x305)) x1514) (and (=> (and (not x305) (= x1588 32)) x856) (=> (and x305 (and (= x579 (x68 192)) (= x1548 (> x1376 64)))) (and (=> (and (= x1588 64) (not x1548)) x856) (=> (and (and (= x1073 (x68 224)) (= (> x1376 96) x234)) x1548) (and (=> x234 x504) (=> (and (not x234) (= 96 x1588)) x856))))))))) (=> (and (not x126) (and (>= x527 0) (= x1878 (= (x1629 x527 224) 100641684887429822015232653770480429695213136867978658013931169090238473568256)) (>= 4294967295 x527) (> 4294967296 x527))) (and (=> (and (not x1878) (and (>= x527 0) (> 4294967296 x527) (>= 4294967295 x527) (= (= (x1629 x527 224) 56965738197333823925951794324075424010313516842063129668313081903848242544640) x250))) (and (=> (and (not x250) (and (<= x527 4294967295) (< x527 4294967296) (= (= (x1629 x527 224) 50455196340412629536459377552246818957342304218644716315923982585962625499136) x1051) (>= x527 0))) (and (=> (and (not x1051) (and (= 1 x1556) (= x1194 x1271))) x1485) (=> (and x1051 (and (= x1226 (x1237 (+ 50455196340412629536459377552246818957342304218644716315923982585962625499136 x587))) (= (x1652 128) x722) (= x144 (x1237 (+ 260 x4))) (= (x795 (- x144 128)) x267) (= x458 (x434 160)) (= x1129 (> x722 0)) (= x594 (x1007 96)) (= (x1228 26959946667150639794667015087019630673637144422540572481103610249215 x458) x587) (= (x795 (- x267 32)) x726) (<= x469 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1438) x4) (= x1438 (x1237 (+ 31 x594))) (<= 0 x469))) (and (=> (and (and (= x512 (x1668 160)) (= (< 32 x722) x114) (= x144 x1338)) x1129) (and (=> (and x114 (and (= (x1668 192) x451) (= (x1237 (+ 32 x144)) x638) (= x1586 (> x722 64)))) (and (=> (and x1586 (and (= x395 (> x722 96)) (= x1264 (x1237 (+ x144 64))) (= x555 (x1668 224)))) (and (=> x395 x1888) (=> (and (= x501 96) (not x395)) x865))) (=> (and (not x1586) (= 64 x501)) x865))) (=> (and (= x501 32) (not x114)) x865))) (=> (and (not x1129) (= 0 x501)) x865))))) (=> (and (and (= (x770 128) x815) (= (x1237 (+ 56965738197333823925951794324075424010313516842063129668313081903848242544640 x1523)) x416) (= x1523 (x1228 26959946667150639794667015087019630673637144422540572481103610249215 x602)) (= x1427 (> x815 0)) (= (x1695 160) x602)) x250) (and (=> (and (= 0 x1373) (not x1427)) x415) (=> (and x1427 (and (= x429 (x903 160)) (= (< 32 x815) x1161))) (and (=> (and (and (= (x903 192) x1392) (= (> x815 64) x623)) x1161) (and (=> (and (not x623) (= 64 x1373)) x415) (=> (and (and (= x257 (> x815 96)) (= x380 (x903 224))) x623) (and (=> (and (not x257) (= 96 x1373)) x415) (=> x257 x140))))) (=> (and (not x1161) (= x1373 32)) x415))))))) (=> (and x1878 (and (= x1881 (> x1006 0)) (= x1025 (x1228 26959946667150639794667015087019630673637144422540572481103610249215 x414)) (= (x1466 128) x1006) (= (x1055 160) x414) (= x1619 (x1237 (+ 100641684887429822015232653770480429695213136867978658013931169090238473568256 x1025))))) (and (=> (and (not x1881) (= x1017 0)) x1348) (=> (and (and (= x1304 (< 32 x1006)) (= (x739 160) x1034)) x1881) (and (=> (and (and (= x1537 (< 64 x1006)) (= (x739 192) x1846)) x1304) (and (=> (and (and (= x808 (x739 224)) (= (> x1006 96) x766)) x1537) (and (=> x766 x438) (=> (and (= x1017 96) (not x766)) x1348))) (=> (and (= x1017 64) (not x1537)) x1348))) (=> (and (= 32 x1017) (not x1304)) x1348))))))))) (=> (and (and (not (= x814 x1875)) (> 1461501637330902918203684832716283019655932542976 x1871) (= x1070 (= x97 0)) (>= x1871 0) (= (< x284 32) x28) (= (x1424 x832) x1811) (= (x406 x1811 2) x724) (= x284 (ite (> x1875 0) x724 (x1228 127 x724))) (= x1875 (x1228 1 x1811)) (= (ite x28 1 0) x814) (= (x187 x1796) x1871) (= x832 (x829 x819 1)) (= (x1228 1 x1811) x97) (>= 1461501637330902918203684832716283019655932542975 x1871)) (not x1110)) (and (=> x1070 x123) (=> (and (not x1070) (= (> x284 0) x1409)) (and (=> x1409 x1515) (=> (not x1409) x824))))))) x1808))
(assert (x1502 x597))
(assert (= (and (not x1179) x358) x1544))
(assert (=> (<= (x167 288) 10000) (= (x902 (x167 288)) (x37 (x167 288)))))
(assert (= 0 (x848 224)))
(assert (x1502 x645))
(assert (= (and x297 (not x1243)) x883))
(assert (x1502 x1291))
(assert (= (x37 56965738197333823925951794324075424010313516842063129668313081903848242544640) (x902 56965738197333823925951794324075424010313516842063129668313081903848242544640)))
(assert (x1575 (x1521 160)))
(assert (x1502 x1376))
(assert (=> (>= 10000 (x656 160)) (= (x902 (x656 160)) (x37 (x656 160)))))
(assert (x1309 x233))
(assert (= (or x841 x1350) x70))
(assert (and (x1186 x510 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x510 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x510 (+ (x1496 x510 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x510 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x510 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x1368 256) 0))
(assert (x1502 x1221))
(assert (= (=> (= (> (x475 x1536) (x475 x791)) x322) (and (=> (not x322) x189) (=> x322 x1880))) x1669))
(assert (= x117 (and x1671 x328)))
(assert (= (or x1462 x1544) x491))
(assert (= 0 (x848 256)))
(assert (= (and x246 (not x1362)) x218))
(assert (x1502 x426))
(assert (= (x1257 452) 0))
(assert (= (and (not x596) x1764) x612))
(assert (x1502 x1392))
(assert (and (x1186 x573 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x573 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x573 (+ (x1496 x573 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x573 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x573 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (or x1249 x56 x777) x1764))
(assert (x1502 x1207))
(assert (x1502 x719))
(assert (x1502 x1446))
(assert (= (and x495 (not x1514)) x1092))
(assert (= 0 (x1114 160)))
(assert (= (or x1887 x470) x1684))
(assert (= x1217 (and x729 (not x1020))))
(assert (= (and x234 x1317) x192))
(assert (= x134 (and (not x250) x186)))
(assert (= (x1521 160) (x475 (x37 (x1521 160)))))
(assert (x1502 x1107))
(assert (= (x58 320) 0))
(assert (= (x37 (x475 x265)) x265))
(assert (= x77 (and (not x1267) x721)))
(assert (x1502 x1686))
(assert (= (=> (and (or (and x421 (= (x1237 (+ x1376 164)) x1074)) (not x421)) (= x421 (> x1588 x1376))) x1555) x856))
(assert (= (and x828 (not x1191)) x172))
(assert (x483 x233))
(assert (x1502 x512))
(assert (= (and x77 (not x60)) x379))
(assert (and (= (x911 3 3) 9) (= (x911 9 3) 27) (= (x911 9 9) 81) (= (x911 27 3) 81)))
(assert (= 0 (x1089 452)))
(assert (x1502 x1271))
(assert (x1502 x1160))
(assert (= (=> (and (= (ite (> x719 0) x619 (x1228 127 x619)) x331) (= x90 (= x719 (ite x226 1 0))) (= (x406 x173 2) x619) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1601) (= (> 32 x331) x226) (>= x1601 0) (= x719 (x1228 1 x173))) (and (=> (and (and (= x1134 (= 0 x1168)) (= (x1228 1 x173) x1168)) (not x90)) (and (=> (and (= x1106 (< 0 x331)) (not x1134)) (and (=> (not x1106) x1458) (=> x1106 x364))) (=> x1134 x1407))) (=> x90 x964))) x1885))
(assert (x1789 x731))
(assert (x1502 x1646))
(assert (= x1381 (and x297 x1243)))
(assert (= x1297 (and x205 x1463)))
(assert (= x1612 (and (not x1548) x1151)))
(assert (= x1011 (and x766 x746)))
(assert (x1502 x1215))
(assert (= (+ (x475 x64) x1157) (x475 (x829 x64 x1157))))
(assert (x195 x602))
(assert (x1502 x1610))
(assert (x1502 x798))
(assert (= (and (not x1497) x1505) x1715))
(assert (and (x1186 x154 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x154 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x154 (+ (x1496 x154 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x154 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x154 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (and (=> (not x1835) x95) (=> (and (and (= x798 (ite (< 0 x1291) x138 (x1228 127 x138))) (= x1667 (= x1291 (ite x1747 1 0))) (= x1291 (x1228 1 x573)) (= x1747 (> 32 x798)) (= x138 (x406 x573 2))) x1835) (and (=> (and (and (= (x646 (x902 5) 0) x1209) (= x1495 (x406 x1155 32)) (= x1155 (x1237 (+ 31 x798))) (= (< 0 x121) x326) (= (x829 x1209 x1495) x265)) (not x1667)) (and (=> (and (and (= x1209 x334) (= x173 0)) (not x326)) x347) (=> (and x326 (= x1736 (> x121 31))) (and (=> (and (and (= x1634 (x405 100)) (= x1184 (>= 255 x1557)) (= (x1237 (+ x121 x121)) x1557) (= x209 (x1237 (+ x1557 x1516))) (= (x1237 (+ x1516 x1557)) x227) (= x398 (<= x1557 255)) (= (x615 x1557 x1516) x1288) (= (ite x398 x209 x1288) x1529) (= x334 x1209) (= (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1634) x1516) (= x173 (ite x1184 x227 x1529))) (not x1736)) x347) (=> (and (and (= (x1237 (+ x121 x121)) x44) (= x1683 (x1237 (+ 1 x44))) (= x1565 (x1237 (+ 100 x121))) (= (> x1565 100) x1399)) x1736) (and (=> (and (= x1209 x558) (not x1399)) x1877) (=> x1399 x702))))))) (=> x1667 x964)))) x1489))
(assert (and (x1186 x941 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x941 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x941 (+ (x1496 x941 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x941 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x941 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1502 x803))
(assert (x1502 x928))
(assert (x1311 x1438))
(assert (= (x475 (x37 (x656 192))) (x656 192)))
(assert (x1502 x184))
(assert (= (x475 (x37 (x52 128))) (x52 128)))
(assert (x1502 x228))
(assert (x1502 x1635))
(assert (= (and x598 x171) x1068))
(assert (= (x475 (x37 x1435)) x1435))
(assert (x1502 x609))
(assert (= x1115 (and x1815 x834)))
(assert (x1502 x311))
(assert (= (x475 (x829 x157 1)) (+ 1 (x475 x157))))
(assert (x1145 x724))
(assert (x1502 x984))
(assert (= (and x917 (not x1300)) x1343))
(assert (= x417 (=> (and (= x960 (not (> x604 32))) (= x1758 (x1817 x1283))) (and x960 x479))))
(assert (= 0 (x1368 224)))
(assert (x1309 x940))
(assert (= 0 (x1266 452)))
(assert (x1502 x1890))
(assert (x1502 x1229))
(assert (x1502 x1779))
(assert (x1502 x850))
(assert (x1575 (x1332 256)))
(assert (= x457 (=> (and (or (not x1179) x1179) (= x1179 (= 0 x1215))) x1393)))
(assert (x1575 (x52 224)))
(assert (= (and x117 (not x1346)) x1444))
(assert (= x1745 (and x583 (not x1036))))
(assert (= (and x917 x1300) x295))
(assert (= x1806 (and x1059 x236)))
(assert (x811 x1171))
(assert (x1502 x1718))
(assert (= (x37 2279315017) (x902 2279315017)))
(assert (= (and (not x1399) x1289) x1030))
(assert (x1575 x1183))
(assert (x1502 x1123))
(assert (x1502 x1250))
(assert (x1502 x1527))
(assert (= x356 (and x912 x1680)))
(assert (x1145 x602))
(assert (= (and x1804 (not x273)) x1379))
(assert (= (and x435 (not x1511)) x1558))
(assert (x1575 (x888 128)))
(assert (x1502 x584))
(assert (x1502 x1073))
(assert (= (x902 106459005500898838667931598610041423549574964228674563513410788872267948359680) (x37 106459005500898838667931598610041423549574964228674563513410788872267948359680)))
(assert (x1502 x573))
(assert (x1502 x1065))
(assert (x1502 x227))
(assert (= x1462 (and x1179 x358)))
(assert (=> (>= 10000 x433) (= (x37 x433) (x902 x433))))
(assert (x1502 x1630))
(assert (= x845 (or x625 x734)))
(assert (x1502 x974))
(assert (x1502 x99))
(assert (x1502 x704))
(assert (x1502 x10))
(assert (= x887 (and x1734 (not x1585))))
(assert (x1502 x440))
(assert (= (x1089 388) 0))
(assert (x1502 x1581))
(assert (= (x888 128) (x475 (x37 (x888 128)))))
(assert (x1502 x425))
(assert (x245 x1634))
(assert (x1502 x1461))
(assert (x1502 x199))
(assert (x1502 x1421))
(assert (x1502 x731))
(assert (x1502 x1356))
(assert (= x1672 (and x1005 x1550)))
(assert (x1502 x577))
(assert (= x1464 (and (not x1070) x817)))
(assert (x1502 x44))
(assert (= x1490 (and x343 x1345)))
(assert (= (and (not x410) x85) x1375))
(assert (= (=> (= x1118 (not (< 32 x1814))) (and x323 x1118)) x944))
(assert (= 1680813743 (x475 (x902 1680813743))))
(assert (x1502 x594))
(assert (= x1048 (=> (and (= x1691 x716) (= x1491 x635)) x560)))
(assert (= x338 (and x1858 x86)))
(assert (= (x475 (x37 (x1332 128))) (x1332 128)))
(assert (= x695 (=> (and (or (not x551) (and x551 (= (x1237 (+ 260 x672)) x1657))) (= (< x672 x639) x551)) x630)))
(assert (= (and x294 x1416) x626))
(assert (x811 x788))
(assert (= x625 (or x1697 x498 x996)))
(assert (= x1028 (and x985 x677)))
(assert (= x479 (=> (and (= x897 x685) (= x685 (x1237 (+ 128 x604)))) x333)))
(assert (= x1312 (x475 (x37 x1312))))
(assert (= (and (not x1409) x1464) x310))
(assert (= x610 (and x1696 x147)))
(assert (= (x902 78829575338057407266098799593532030895783219923606930547737006156155256307712) (x37 78829575338057407266098799593532030895783219923606930547737006156155256307712)))
(assert (x1502 x208))
(assert (= 0 (x1266 388)))
(assert (x1575 (x52 128)))
(assert (x1575 (x1521 224)))
(assert (= 0 (x1554 192)))
(assert (= 2112976665 (x475 (x902 2112976665))))
(assert (= (x475 (x37 (x888 320))) (x888 320)))
(assert (and (=> (and (> x573 0) (> 2 0)) (and (< (- x573 2) (* (x406 x573 2) 2)) (>= x573 (* 2 (x406 x573 2))))) (x392 x573 2) (x1566 x573 2) (= (- x573 (x1228 1 x573)) (* (x406 x573 2) 2)) (x1467 x573 2) (x1233 x573 2)))
(assert (x1502 x971))
(assert (=> (>= 10000 (x1332 192)) (= (x902 (x1332 192)) (x37 (x1332 192)))))
(assert (x1502 x689))
(assert (= x1008 (and (not x1594) x936)))
(assert (= x630 (=> (and (= x1085 (= 0 x878)) (= (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1701) x1675) (= x878 (x511 (x37 x433))) (= x850 (x795 (- x923 128))) (= x923 (x1237 (+ x1675 260))) (= x1701 (x1237 (+ x672 31))) (= 128 x453)) (and (=> x1085 x1787) (=> (and (and (= (= (x1088 100) x672) x1649) (< x1234 288768741) (< x1234 839595567) (= x430 (x795 (- x1459 4))) (= x622 x469) (= x850 x1459) (not (< x1459 4)) (= x989 656247078515407326148355443760548300161286948278503429861414951787075469312) (< x1234 2112976665) (= x1082 x852) (< 0 x1385) (= 24341557 x1234) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x430) (and (> 96 x430) (= (<= x430 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1486) (= (x511 (x37 x433)) x1385) (<= 132 x1459) x1649) (not x1085)) (and (=> x1486 x804) (=> (and (not x1486) (and (= x792 x1082) (= (= x852 x1082) x899))) (and (=> (and x899 (and (= (and (< 131 x1459) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1459) true)) x1396) (= x1699 x622))) (and (=> (not x1396) x804) (=> (and (and (= (< 18446744073709551615 x1429) x701) (= x1429 (x109 100))) x1396) (and (=> x701 x804) (=> (and (and (= x1378 (x1237 (+ x1429 132))) (= (> x1378 x1459) x1020) (= x570 132)) (not x701)) (and (=> x1020 x804) (=> (and (= x1606 true) (not x1020)) (and (=> (not x1606) x804) (=> (and (and (= (= x283 0) x871) (= x283 (x1413 x1060)) (= (x1509 (x37 x1082) (x902 2) 0) x1060) (<= x283 255) (>= x283 0) (> 256 x283)) x1606) (and (=> (and x871 (= (= x1082 0) x444)) (and (=> x444 x804) (=> (and (not x444) (and (= (x829 x488 x969) x557) x1330 (= x488 (x646 (x902 1) 0)) (= x198 (not (= 0 x525))) (= (or x1450 x545) x1472) (= x1135 (x1237 (+ x969 1))) (= (x1509 (x37 x1082) (x902 2) 0) x1541) (= x1607 (x531 x525)) (= (x836 x557) x525) (= x1807 (and x1472 x1213)) (= x869 (x998 x1690)) (= (>= x1690 x1737) x1450) (= (or (not x1807) x1369) x1330) (= (= x1607 x969) x259) (>= x525 0) (>= 1461501637330902918203684832716283019655932542975 x525) (= (not (= x969 x869)) x545) (= (x1077 x969) x1690) (= x327 true) (= (or (not x198) x259) x1369))) (and (=> (not x327) x804) (=> (and x327 (and (= (< x1135 x622) x1345) (or (and x1345 (= x648 x1345)) (and (and (= (= 0 x1699) x703) (= x648 (ite x703 x703 (= 0 x1135)))) (not x1345))))) x1043))))) (=> (not x871) x804))))))))))) (=> (not x899) x804)))))))))
(assert (x1502 x1656))
(assert (x1145 x1181))
(assert (= (x1554 256) 0))
(assert (x1575 (x1521 256)))
(assert (x1575 x1795))
(assert (x1502 x1195))
(assert (= x1673 (and x1360 (not x1456))))
(assert (=> (>= 10000 (x1332 320)) (= (x902 (x1332 320)) (x37 (x1332 320)))))
(assert (x1502 x1351))
(assert (= x714 (and (not x155) x1218)))
(assert (= 0 (x1055 192)))
(assert (x1145 x154))
(assert (= (x902 4294967296) (x37 4294967296)))
(assert (= (and (not x1671) x328) x1404))
(assert (x1575 (x656 192)))
(assert (= 0 (x58 192)))
(assert (x1309 x879))
(assert (x1502 x889))
(assert (x1145 128))
(assert (= (and x1323 (not x925)) x1277))
(assert (x1575 (x385 320)))
(assert (x1575 (x656 224)))
(assert (x1502 x526))
(assert (= (=> (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1699) (= x273 (= x854 (ite x467 1 0))) (>= x1699 0) (= (> 32 x1065) x467) (= x854 (x1228 1 x794)) (= (x406 x794 2) x233) (= x1065 (ite (> x854 0) x233 (x1228 127 x233)))) (and (=> (and (and (= (= 0 x882) x31) (= x882 (x1228 1 x794))) (not x273)) (and (=> (and (not x31) (= (< 0 x1065) x598)) (and (=> (not x598) x1013) (=> x598 x918))) (=> x31 x1193))) (=> x273 x804))) x919))
(assert (= (x1257 260) 0))
(assert (and (x1186 x727 128) (x1522 x727 128) (=> (< 0 128) (= x727 (+ (x1496 x727 128) (* (x406 x727 128) 128)))) (x660 x727 128)))
(assert (= (x475 (x37 (x1332 256))) (x1332 256)))
(assert (x1502 x1873))
(assert (x1145 x941))
(assert (= x1084 (=> (= (= x649 0) x21) (and (=> (and (and (= x315 1) (= x957 x1592) (= 0 x1730)) (not x21)) x235) (=> x21 x1787)))))
(assert (x1145 x879))
(assert (x1502 x80))
(assert (=> (<= (x888 192) 10000) (= (x37 (x888 192)) (x902 (x888 192)))))
(assert (= (and (not x1886) x1748) x1138))
(assert (and (x1186 x1634 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x1634 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1634 (+ (x1496 x1634 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x1634 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x1634 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= 0 (x1452 128)))
(assert (= (or x787 x1449 x172 x666 x522 x1608 x304 x752 x554 x225 x977 x473 x1038 x252 x631 x737 x1444 x1720 x1845) x1643))
(assert (= x1317 (and x1151 x1548)))
(assert (x1502 x1220))
(assert (x1311 x1701))
(assert (x1502 x1139))
(assert (= (=> (and (= x1704 (x829 x1420 1)) (= x224 (not (> (x475 x150) (x475 x1704))))) (and x686 x224)) x30))
(assert (= (x1521 256) (x475 (x37 (x1521 256)))))
(assert (=> (<= (x1276 192) 10000) (= (x37 (x1276 192)) (x902 (x1276 192)))))
(assert (=> (<= x1183 10000) (= (x902 x1183) (x37 x1183))))
(assert (x1575 (x1521 288)))
(assert (= x693 (and x474 x394)))
(assert (= (and x1474 x760) x1353))
(assert (x1502 x138))
(assert (x1502 x1143))
(assert (= (and (not x1623) x1343) x1598))
(assert (=> (>= 10000 (x1276 256)) (= (x902 (x1276 256)) (x37 (x1276 256)))))
(assert (= x176 (and (=> (and (and (= (x1228 1 x573) x709) (= x1190 (> 32 x428)) (= x162 (= x709 (ite x1190 1 0))) (= (x406 x573 2) x1504) (= x428 (ite (< 0 x709) x1504 (x1228 127 x1504)))) x98) (and (=> x162 x804) (=> (and (and (= (x1237 (+ 31 x428)) x731) (= x1631 (> x1429 0)) (= (x829 x64 x1157) x1274) (= (x406 x731 32) x1157) (= (x646 (x902 5) 0) x64)) (not x162)) (and (=> (and x1631 (= x519 (< 31 x1429))) (and (=> (and (and (= (x1237 (+ x1422 x974)) x1818) (= (x615 x1422 x974) x104) (= x662 (>= 255 x1422)) (= x781 x64) (= x1211 (x109 132)) (= x1422 (x1237 (+ x1429 x1429))) (= (ite x799 x214 x104) x1301) (= (ite x662 x1818 x1301) x794) (= (<= x1422 255) x799) (= x974 (x1228 115792089237316195423570985008687907853269984665640564039457584007913129639680 x1211)) (= (x1237 (+ x974 x1422)) x214)) (not x519)) x324) (=> (and x519 (and (= x102 (x1237 (+ x1429 x1429))) (= (x1237 (+ x102 1)) x793) (= (> x745 132) x925) (= x745 (x1237 (+ 132 x1429))))) (and (=> x925 x1454) (=> (and (= x1714 x64) (not x925)) x174))))) (=> (and (and (= 0 x794) (= x781 x64)) (not x1631)) x324))))) (=> (not x98) x1176))))
(assert (x1502 x958))
(assert (and (=> (and (> x377 0) (> 2 0)) (and (< (- x377 2) (* (x406 x377 2) 2)) (>= x377 (* 2 (x406 x377 2))))) (x392 x377 2) (x1566 x377 2) (= (- x377 (x1228 1 x377)) (* (x406 x377 2) 2)) (x1467 x377 2) (x1233 x377 2)))
(assert (x1502 x1533))
(assert (= (x1618 (+ 64 (x1237 (+ 100 x144)))) 0))
(assert (x1309 x414))
(assert (= (and x1070 x817) x758))
(assert (= 0 (x1695 224)))
(assert (= (=> (= x596 (> (x475 x150) (x475 x1420))) (and (=> (not x596) x686) (=> x596 x30))) x954))
(assert (= (and x844 x98) x1403))
(assert (x1502 x25))
(assert (= 0 (x1266 420)))
(assert (= (x475 (x37 (x888 256))) (x888 256)))
(assert (and (x1186 x344 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x344 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x344 (+ (x1496 x344 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x344 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x344 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1502 x520))
(assert (= x1295 (or x460 x1678)))
(assert (x1502 x1177))
(assert (x1502 x1837))
(assert (= (or x359 (and x509 (not x536))) x706))
(assert (= (and x1582 (not x1292)) x374))
(assert (= x1524 (or x1306 x1108)))
(assert (= x1397 (and x532 (not x608))))
(assert (x1502 x1723))
(assert (x1502 x975))
(assert (x1502 x1231))
(assert (x1502 x585))
(assert (x1502 x1262))
(assert (x1502 x104))
(assert (= x438 (=> (and (= (not (> x1006 128)) x812) (= (x739 256) x1254)) (and x812 (=> (= 128 x1017) x1348)))))
(assert (x1309 x1811))
(assert (x1502 x968))
(assert (=> (<= (x888 256) 10000) (= (x37 (x888 256)) (x902 (x888 256)))))
(assert (x755 x377))
(assert (=> (>= 10000 (x888 288)) (= (x37 (x888 288)) (x902 (x888 288)))))
(assert (x1502 x1387))
(assert (x1502 x1706))
(assert (= (x37 100641684887429822015232653770480429695213136867978658013931169090238473568256) (x902 100641684887429822015232653770480429695213136867978658013931169090238473568256)))
(assert (= (or x112 x783) x1111))
(assert (= x801 (or x669 x41)))
(assert (= (and x706 x1433) x1697))
(assert (x1502 x941))
(assert (= x687 (and x1717 (not x327))))
(assert (x1502 x1710))
(assert (x1575 (x1521 128)))
(assert (= (x902 1680813743) (x37 1680813743)))
(assert (= x1453 (=> (= (not (> x1480 32)) x1687) (and x342 x1687))))
(assert (= 78829575338057407266098799593532030895783219923606930547737006156155256307712 (x475 (x902 78829575338057407266098799593532030895783219923606930547737006156155256307712))))
(assert (x1502 x1131))
(assert (= (=> (and (= x431 (x1237 (+ x241 128))) (= x431 x750)) x306) x1801))
(assert (x755 x794))
(assert (x1145 x1438))
(assert (x1502 x1871))
(assert (x1502 x1840))
(assert (= (and x1526 x1085) x1326))
(assert (= (x475 (x829 x650 x885)) (+ x885 (x475 x650))))
(assert (x1502 x1821))
(assert (x1575 (x167 192)))
(assert (= x1882 (and x141 (not x346))))
(assert (= (and (not x1567) x1353) x752))
(assert (= (or x1633 x1202) x1350))
(assert (= (=> (and (or (and (and (= x609 x136) (= x1117 x1889)) (not x409)) (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x937 x1196)) (= x609 x136) (= (x1237 (+ x1196 x937)) x1842) (= (ite (= 0 x1117) x1290 0) x1196) (= (x221 (x37 x1871)) x994) (= x388 (- x994 x1196)) (= (x1839 (x37 x433)) x937) (= x1117 x1889)) x409)) (= (= x1117 0) x409)) x282) x23))
(assert (x1502 x555))
(assert (x1502 x1439))
(assert (=> (>= 10000 (x1276 160)) (= (x37 (x1276 160)) (x902 (x1276 160)))))
(assert (x1502 x543))
(assert (x1502 x1691))
(assert (= (x1089 324) 0))
(assert (x1502 x1662))
(assert (x1502 x1822))
(assert (x1502 x237))
(assert (=> (>= 10000 (x656 192)) (= (x902 (x656 192)) (x37 (x656 192)))))
(assert (= (x37 (x475 x1536)) x1536))
(assert (= x1858 (and x1200 (not x986))))
(assert (= 33277650900348105781121326340019631498405652329376380866381358124409588547584 (x475 (x902 33277650900348105781121326340019631498405652329376380866381358124409588547584))))
(assert (= (and x513 x519) x1323))
(assert (x1502 x185))
(assert (= (or x191 x355 x732) x922))
(assert (x1145 x1231))
(assert (= (and x988 x893) x472))
(assert (= (x475 (x37 x1871)) x1871))
(assert (x1502 x1130))
(assert (= (and x264 x307) x861))
(assert (x1502 x309))
(assert (x1789 x1220))
(assert (x1502 x1818))
(assert (x1502 x67))
(assert (x1502 x1234))
(assert (=> (>= 10000 (x167 192)) (= (x902 (x167 192)) (x37 (x167 192)))))
(assert (x1502 x618))
(assert (= (and x863 (not x1133)) x1547))
(assert (x1502 x1730))
(assert (= x1648 (and (not x601) x711)))
(assert (= x1325 (=> (and (or (not x1125) x1125) (= (= x197 0) x1125)) x1765)))
(assert (= x1033 (and (not x1281) x932)))
(assert (x1502 x1842))
(assert (= (and (not x114) x516) x1142))
(assert (and (x1186 x1299 128) (x1522 x1299 128) (=> (< 0 128) (= x1299 (+ (x1496 x1299 128) (* (x406 x1299 128) 128)))) (x660 x1299 128)))
(assert (=> (<= (x656 224) 10000) (= (x902 (x656 224)) (x37 (x656 224)))))
(assert (x1502 x1192))
(assert (= x1212 (and x1146 (not x72))))
(assert (= (or x1408 x1322) x281))
(assert (x1502 x508))
(assert (= x917 (and x1005 (not x1550))))
(assert (x1502 x726))
(assert (x1502 x563))
(assert (= (and x1124 x1161) x1067))
(assert (x1502 x640))
(assert (= (and x1599 x1763) x1518))
(assert (= x85 (and (not x1725) x1153)))
(assert (= x1717 (and (not x444) x849)))
(assert (x1309 x1299))
(assert (and (x1186 x208 128) (x1522 x208 128) (=> (< 0 128) (= x208 (+ (x1496 x208 128) (* (x406 x208 128) 128)))) (x660 x208 128)))
(assert (and (x1186 x941 32) (x1522 x941 32) (=> (< 0 32) (= x941 (+ (x1496 x941 32) (* (x406 x941 32) 32)))) (x660 x941 32)))
(assert (=> (>= 10000 x689) (= (x37 x689) (x902 x689))))
(assert (x1502 x1740))
(assert (= 0 (x1645 128)))
(assert (x1502 x952))
(assert (and (x1186 x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1211 (+ (x1496 x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= 0 (x1007 96)))
(assert (x1502 x1050))
(assert (= x778 (or x193 (and (not x1677) x462))))
(assert (x483 x724))
(assert (x1502 x525))
(assert (x1145 x534))
(assert (and (x1186 x83 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x83 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x83 (+ (x1496 x83 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x83 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x83 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (and (x1186 x1438 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x1438 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1438 (+ (x1496 x1438 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x1438 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x1438 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x1743 (or x1627 x762)))
(assert (= (x902 2112976665) (x37 2112976665)))
(assert (= (x902 100000000000000000) (x37 100000000000000000)))
(assert (= x513 (and x872 x1631)))
(assert (= 2726977199 (x475 (x902 2726977199))))
(assert (= x141 (or x883 x1381)))
(assert (= x81 x151))
(assert (and (x1186 x1211 256) (x1522 x1211 256) (=> (< 0 256) (= x1211 (+ (x1496 x1211 256) (* (x406 x1211 256) 256)))) (x660 x1211 256)))
(assert (x1502 x1301))
(assert (x1575 (x52 192)))
(assert (x1502 x1593))
(assert (x1502 x1523))
(assert (= (and x1872 (not x90)) x1374))
(assert (x1502 x74))
(assert (= x1305 (and x1833 x773)))
(assert (= 0 (x1645 256)))
(assert (x1502 x1639))
(assert (= 0 (x1114 128)))
(assert (x1309 x1231))
(assert (= (x902 24341557) (x37 24341557)))
(assert (x1502 x173))
(assert (= x1041 (and x673 x413)))
(assert (= (x37 (x475 x791)) x791))
(assert (x1309 x724))
(assert (x1502 x1329))
(assert (= (and x1240 x1471) x711))
(assert (x1502 x885))
(assert (x1502 x458))
(assert (x811 x341))
(assert (= x713 (=> (and (= x1174 (x829 x157 1)) (= (not (> x710 164)) x170)) (and x170 (=> (= x6 x1174) x1296)))))
(assert (= (=> (and (= x1271 x1592) (= x649 0)) x277) x804))
(assert (= x394 (and (not x149) x1500)))
(assert (x1502 x1155))
(assert (x1502 x431))
(assert (x1502 x50))
(assert (= (+ 1 (x475 x791)) (x475 (x829 x791 1))))
(assert (= x362 (and (not x1134) x1374)))
(assert (and (x1186 x657 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1522 x657 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x657 (+ (x1496 x657 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x406 x657 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x660 x657 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (=> (<= x1082 10000) (= (x37 x1082) (x902 x1082))))
(assert (x1502 x1658))
(assert (= x161 (=> (= (not (< 1 x969)) x62) (and x999 x62))))
(assert (= (and x1133 x863) x1038))
(assert (= (and x456 (not x1279)) x1487))
(assert (= true x965))
(assert (x572 x341 x1171))
(assert (= (or x1524 x610) x1059))
(assert (= (=> (and (= x547 (<= x1863 224)) (= (x795 (- x780 128)) x1863)) (and x547 (=> (and (= (not x1178) x1835) (= (= x945 x1879) x1178) (= (ite (<= x1863 32) (x646 (x37 (x167 128)) 0) (ite (>= 64 x1863) (x1509 (x37 (x167 128)) (x37 (x167 160)) 0) (ite (>= 96 x1863) (x1576 (x37 (x167 128)) (x37 (x167 160)) (x37 (x167 192)) 0) (ite (<= x1863 128) (x1665 (x37 (x167 128)) (x37 (x167 160)) (x37 (x167 192)) (x37 (x167 224)) 0) (ite (<= x1863 160) (x375 (x37 (x167 128)) (x37 (x167 160)) (x37 (x167 192)) (x37 (x167 224)) (x37 (x167 256)) 0) (ite (<= x1863 192) (x1265 (x37 (x167 128)) (x37 (x167 160)) (x37 (x167 192)) (x37 (x167 224)) (x37 (x167 256)) (x37 (x167 288)) 0) (ite (<= x1863 224) (x963 (x37 (x167 128)) (x37 (x167 160)) (x37 (x167 192)) (x37 (x167 224)) (x37 (x167 256)) (x37 (x167 288)) (x37 (x167 320)) 0) (x37 x1630)))))))) x1879)) x1489))) x1622))
(assert (x1502 x759))
(assert (x1502 x1529))
(assert (= (and x477 (not x1719)) x175))
(assert (= (=> (and (= (>= 224 x242) x1136) (= (x795 (- x750 128)) x242)) (and (=> (and (= (= x478 x89) x616) (= (ite (<= x242 32) (x646 (x37 (x1332 128)) 0) (ite (<= x242 64) (x1509 (x37 (x1332 128)) (x37 (x1332 160)) 0) (ite (<= x242 96) (x1576 (x37 (x1332 128)) (x37 (x1332 160)) (x37 (x1332 192)) 0) (ite (>= 128 x242) (x1665 (x37 (x1332 128)) (x37 (x1332 160)) (x37 (x1332 192)) (x37 (x1332 224)) 0) (ite (<= x242 160) (x375 (x37 (x1332 128)) (x37 (x1332 160)) (x37 (x1332 192)) (x37 (x1332 224)) (x37 (x1332 256)) 0) (ite (>= 192 x242) (x1265 (x37 (x1332 128)) (x37 (x1332 160)) (x37 (x1332 192)) (x37 (x1332 224)) (x37 (x1332 256)) (x37 (x1332 288)) 0) (ite (>= 224 x242) (x963 (x37 (x1332 128)) (x37 (x1332 160)) (x37 (x1332 192)) (x37 (x1332 224)) (x37 (x1332 256)) (x37 (x1332 288)) (x37 (x1332 320)) 0) (x37 x133)))))))) x89) (= (not x616) x98)) x176) x1136)) x306))
(assert (= (or x489 x1371) x1526))
(assert (= (and x839 x790) x239))
(assert (and (=> (and (> x794 0) (> 2 0)) (and (< (- x794 2) (* (x406 x794 2) 2)) (>= x794 (* 2 (x406 x794 2))))) (x392 x794 2) (x1566 x794 2) (= (- x794 (x1228 1 x794)) (* (x406 x794 2) 2)) (x1467 x794 2) (x1233 x794 2)))
(assert (x1502 x772))
(assert (= (x475 (x37 (x1276 320))) (x1276 320)))
(assert (= (and x435 x1511) x1227))
(assert (= (and x1819 x305) x1151))
(assert (= (x396 (* x527 26959946667150639794667015087019630673637144422540572481103610249216)) (x1629 x527 224)))
(assert (= (and x379 x991) x368))
(assert (= (x1055 224) 0))
(assert (x1145 2))
(assert (x483 x1299))
(assert (= (=> (and (= x1477 0) (= x1271 x1843)) x576) x103))
(assert (= (x167 128) (x475 (x37 (x167 128)))))
(assert (= x1061 (and x1044 x899)))
(assert (= (and x1586 x1286) x373))
(assert (= x1176 (=> (and (= x1271 x1592) (= x649 1)) x277)))
(assert (= 0 (x1114 224)))
(assert (=> (<= (x1521 192) 10000) (= (x37 (x1521 192)) (x902 (x1521 192)))))
(assert (= (x475 (x829 x19 1)) (+ 1 (x475 x19))))
(assert (= x675 (and x1110 x1743)))
(assert (x1502 x1482))
(assert (x1575 (x656 256)))
(assert (= (x37 (x475 x1704)) x1704))
(assert (x1502 x18))
(assert (x1502 x1620))
(assert (= x1855 (and x1036 x583)))
(assert (x1502 x589))
(assert (=> (>= 10000 (x888 320)) (= (x902 (x888 320)) (x37 (x888 320)))))
(assert (= (x475 (x37 (x656 288))) (x656 288)))
(assert (x1502 x685))
(assert (x1502 x40))
(assert (x1502 x1604))
(assert (= (x902 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x37 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1502 x948))
(assert (= 0 (x1165 96)))
(assert (x1575 x133))
(assert (=> (<= (x52 160) 10000) (= (x902 (x52 160)) (x37 (x52 160)))))
(assert (= (=> (and (= (< x815 x1373) x1410) (or (not x1410) (and (= (x1237 (+ x815 164)) x636) x1410))) x1148) x415))
(assert (x1309 x727))
(assert (= (x475 (x37 x1772)) x1772))
(assert (= 100641684887429822015232653770480429695213136867978658013931169090238473568256 (x475 (x902 100641684887429822015232653770480429695213136867978658013931169090238473568256))))
(assert (= (and x162 x1403) x1679))
(assert (= 0 (x1266 292)))
(assert (x1502 x148))
(assert (= (x1368 160) 0))
(assert (x1502 x642))
(assert (= x1148 (=> (and (= x1751 (x353 (x37 x433))) (= x1087 (x353 (x37 x433))) (= (x1237 (+ x815 164)) x1091) (= (and (<= x1290 x1087) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1751 x1290))) x93) (= 164 x748) (= x99 (x795 (- x1091 164)))) (and (=> (and (and (< 0 x1411) (= (x1569 (x37 x433)) x1742) (= x99 x674) (= x35 (- x1250 x1290)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1290 x1742)) (= (x511 (x37 x433)) x1411) (= x674 4) (= (x1237 (+ x1290 x1742)) x549) (= (= x1290 0) x452) (= (x353 (x37 x433)) x1250) (= x24 56965738197333823925951794324075424010313516842063129668313081903848242544640)) x93) (and (=> (and (and (<= x852 1461501637330902918203684832716283019655932542975) (not (> 2112976665 x1223)) (< x1223 2726977199) (= x1223 2112976665) (< x1223 3081457077) (= (x1165 96) x672) (<= x469 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x1223 2279315017) (<= 0 x469) (<= 0 x852) (not (< x674 4)) (= x825 (> x672 0)) (> 1461501637330902918203684832716283019655932542976 x852)) x452) (and (=> (and (= x639 0) (not x825)) x695) (=> x825 x933))) (=> (not x452) x1787))) (=> (and (and (= 0 x1614) (= 0 x1327) (= x1271 x1769)) (not x93)) x1175)))))
(assert (x1502 x1735))
(assert (=> (<= x370 10000) (= (x37 x370) (x902 x370))))
(assert (=> (<= x1435 10000) (= (x902 x1435) (x37 x1435))))
(assert (= 1461501637330902918203684832716283019655932542975 (x475 (x902 1461501637330902918203684832716283019655932542975))))
(assert (x1502 x1557))
(assert (= x908 (and x753 x1375)))
(assert (x1502 x42))
(assert (and (x1186 x173 2) (x1522 x173 2) (=> (< 0 2) (= x173 (+ (x1496 x173 2) (* (x406 x173 2) 2)))) (x660 x173 2)))
(assert (= 0 (x1257 388)))
(assert (= (and x418 (not x1410)) x194))
(assert (x1502 x1158))
(assert (x1502 x428))
(assert (= x1844 (and (not x871) x381)))
(assert (x1502 x1778))
(assert (x1145 x1636))
(assert (= (x475 (x37 x689)) x689))
(assert (= (and x1725 x1153) x33))
(assert (=> (>= 10000 (x1521 224)) (= (x37 (x1521 224)) (x902 (x1521 224)))))
(assert (= (or x298 x1269) x532))
(assert (= 1461501637330902918203684832716283019655932542976 (x475 (x902 1461501637330902918203684832716283019655932542976))))
(assert (x1575 (x1332 160)))
(assert (= (=> (and (= x767 x1686) (= x212 x1448)) x1391) x152))
(assert (= x1765 (=> (and (= x275 x635) (= x1691 x597)) x1048)))
(assert (= x282 (=> (and (or (not x72) x72) (= (= 0 x136) x72)) x75)))
(assert (x1502 x502))
(assert (x1502 x976))
(assert (x1502 x1848))
(assert (x1502 x659))
(assert (= (and (not x57) x1547) x304))
(assert (= x504 (=> (and (= x1820 (x68 256)) (= (not (> x1376 128)) x1738)) (and (=> (= 128 x1588) x856) x1738))))
(assert (=> (<= (x1332 128) 10000) (= (x902 (x1332 128)) (x37 (x1332 128)))))
(assert (x1502 x629))
(assert (= (x1332 224) (x475 (x37 (x1332 224)))))
(assert (= (and (not x1051) x134) x683))
(assert (x1502 x611))
(assert (x1502 x1171))
(assert (x1502 x22))
(assert (= (x475 (x829 x488 x969)) (+ (x475 x488) x969)))
(assert (x1502 x716))
(assert (= (+ x153 (x475 x19)) (x475 (x829 x19 x153))))
(assert (= (and x72 x1146) x210))
(assert (= (=> (and (= x266 (x829 x19 1)) (= (not (> x407 164)) x663)) (and x663 (=> (= x1086 x266) x857))) x581))
(assert (= x75 (=> (and (= x716 x1889) (= x1491 x1271)) x560)))
(assert (= x1337 x835))
(assert (x1502 x1290))
(assert (= x225 (and x1505 x1497)))
(assert (x1502 x896))
(assert (x1502 x1811))
(assert (x1309 127))
(assert (x483 x1439))
(assert (x1502 x592))
(assert (= (x1618 (+ (x1237 (+ 100 x144)) 160)) 0))
(assert (x1502 x657))
(assert (= (x1276 224) (x475 (x37 (x1276 224)))))
(assert (= (x37 3081457077) (x902 3081457077)))
(assert (= 115792089237316195423570985008687907853269984665640564039457484007913129639935 (x475 (x902 115792089237316195423570985008687907853269984665640564039457484007913129639935))))
(assert (= (and x1214 (not x1304)) x1063))
(assert (= (x1695 256) 0))
(assert (= x205 (and x394 (not x474))))
(assert (x1575 (x52 288)))
(assert (= 0 (x1257 292)))
(assert (x1502 x1411))
(assert (=> (<= (x1276 224) 10000) (= (x902 (x1276 224)) (x37 (x1276 224)))))
(assert (= (x1368 288) 0))
(assert (= x624 (and x409 x1111)))
(assert (= (x1257 420) 0))
(assert (= (x1618 (+ 192 (x1237 (+ 100 x144)))) 0))
(assert (=> (<= (x888 160) 10000) (= (x37 (x888 160)) (x902 (x888 160)))))
(assert (x1575 (x656 160)))
(assert (= (and x7 (not x826)) x732))
(assert (= x1749 (and x1598 (not x1852))))
(assert (x1502 x267))
(assert (= x1713 (and x93 x1357)))
(assert (x245 x229))
(assert (= (or x1404 x397) x760))
(assert (= x522 (and (not x546) x372)))
(assert (= x471 (and (not x1736) x978)))
(assert (=> (<= (x656 256) 10000) (= (x37 (x656 256)) (x902 (x656 256)))))
(assert (and (=> (and (> x969 0) (> 2 0)) (and (< (- x969 2) (* (x406 x969 2) 2)) (>= x969 (* 2 (x406 x969 2))))) (x392 x969 2) (x1566 x969 2) (= (- x969 (x1228 1 x969)) (* (x406 x969 2) 2)) (x1467 x969 2) (x1233 x969 2)))
(assert (x1502 x575))
(assert (= x481 (or x3 x1597)))
(assert (x1145 x173))
(assert (= (=> (and (= (not (> x672 32)) x313) (= (x1165 128) x220)) (and (=> (= x639 32) x695) x313)) x933))
(assert (x1502 x682))
(assert (= x730 (or x218 x1589 (and x1681 x714) (and x60 x77) (and x1218 x155) x96 x921 (and x390 (not x1244)) x1041 x567 (and (not x991) x379) x382 x216 x1278 x820 x861 (and x368 (not x1358)) x1138)))
(assert (= x1866 (=> (and (= x360 x975) (= x874 x981) (= x959 x1873)) x211)))
(assert (= (and x1535 x771) x762))
(assert (x1502 x680))
(assert (x1502 x956))
(assert (x1502 x754))
(assert (x1145 x414))
(assert (= x1029 (and (not x790) x839)))
(assert (= (and x1537 x1406) x746))
(check-sat)
(exit)
