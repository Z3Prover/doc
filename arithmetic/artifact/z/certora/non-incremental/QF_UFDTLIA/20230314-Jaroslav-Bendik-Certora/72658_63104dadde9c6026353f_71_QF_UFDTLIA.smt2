(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x28 0)) (((x79 (x24 Int)) (x34 (x22 x28) (x177 x28) (x116 Int)) (x198 (x191 x28) (x114 Int)))))
(declare-fun x172 () Int)
(declare-fun x11 () Int)
(declare-fun x61 () Bool)
(declare-fun x15 () Int)
(declare-fun x41 () Int)
(declare-fun x85 () Int)
(declare-fun x60 () Int)
(declare-fun x38 () Int)
(declare-fun x45 () Int)
(declare-fun x159 () Bool)
(declare-fun x96 () Int)
(declare-fun x119 () Int)
(declare-fun x25 (x28) Int)
(declare-fun x31 () Bool)
(declare-fun x199 () Bool)
(declare-fun x69 () Bool)
(declare-fun x180 () Int)
(declare-fun x182 () Bool)
(declare-fun x82 (Int Int) Int)
(declare-fun x8 () Int)
(declare-fun x125 () Bool)
(declare-fun x145 () Int)
(declare-fun x52 () Int)
(declare-fun x33 () Int)
(declare-fun x21 () Int)
(declare-fun x157 () Bool)
(declare-fun x84 () Bool)
(declare-fun x29 (Int Int) Int)
(declare-fun x120 () Int)
(declare-fun x147 () Int)
(declare-fun x58 () Int)
(declare-fun x163 () Int)
(declare-fun x51 () Int)
(declare-fun x169 () Bool)
(declare-fun x139 () Bool)
(declare-fun x197 () Int)
(declare-fun x200 () Int)
(declare-fun x115 () Int)
(declare-fun x161 () Int)
(declare-fun x54 () Bool)
(declare-fun x117 () Bool)
(declare-fun x142 () Int)
(declare-fun x185 () Bool)
(declare-fun x92 () Int)
(declare-fun x106 (Int) Int)
(declare-fun x5 () Int)
(declare-fun x179 () Int)
(declare-fun x50 (Int Int) Int)
(declare-fun x188 () Int)
(declare-fun x73 () Int)
(declare-fun x129 () Int)
(declare-fun x62 () Int)
(declare-fun x135 () Int)
(declare-fun x20 () Int)
(declare-fun x195 () Bool)
(declare-fun x174 (Int Int) Int)
(declare-fun x74 () Int)
(declare-fun x128 () Bool)
(declare-fun x107 () Int)
(declare-fun x7 () Int)
(declare-fun x111 () Int)
(declare-fun x10 () Int)
(declare-fun x158 () Bool)
(declare-fun x113 () Int)
(declare-fun x98 () Int)
(declare-fun x39 () Bool)
(declare-fun x101 () Bool)
(declare-fun x148 () Int)
(declare-fun x126 () Int)
(declare-fun x81 () Int)
(declare-fun x178 () Bool)
(declare-fun x88 () Int)
(declare-fun x83 () Int)
(declare-fun x166 () Bool)
(declare-fun x37 () Bool)
(declare-fun x64 () Bool)
(declare-fun x47 (Int Int) Int)
(declare-fun x80 (Int Int) Int)
(declare-fun x105 () Int)
(declare-fun x123 () Bool)
(declare-fun x56 () Bool)
(declare-fun x6 () Int)
(declare-fun x55 () Bool)
(declare-fun x122 () Bool)
(declare-fun x1 () Int)
(declare-fun x48 () Int)
(declare-fun x30 (x28) Int)
(declare-fun x138 () Bool)
(declare-fun x167 (x28) Int)
(declare-fun x189 () Int)
(declare-fun x44 () Int)
(declare-fun x176 () Int)
(declare-fun x187 () Int)
(declare-fun x184 () Bool)
(declare-fun x63 () Bool)
(declare-fun x66 () Int)
(declare-fun x156 () Bool)
(declare-fun x136 () Int)
(declare-fun x143 () Bool)
(declare-fun x127 () Int)
(declare-fun x186 () Bool)
(declare-fun x137 () Int)
(declare-fun x165 () Int)
(declare-fun x131 () Int)
(declare-fun x76 () Int)
(declare-fun x146 () Int)
(declare-fun x86 () Int)
(declare-fun x183 () Int)
(declare-fun x109 () Bool)
(declare-fun x149 () Bool)
(declare-fun x12 () Int)
(declare-fun x97 () Int)
(declare-fun x40 () Int)
(declare-fun x190 () Bool)
(declare-fun x151 () Int)
(declare-fun x173 () Int)
(declare-fun x121 () Int)
(declare-fun x155 () Bool)
(declare-fun x170 () Bool)
(declare-fun x36 () Bool)
(declare-fun x72 () Bool)
(declare-fun x160 () Bool)
(declare-fun x118 () Bool)
(declare-fun x3 () Int)
(declare-fun x27 () Int)
(declare-fun x133 (Int Int) Int)
(declare-fun x18 () Bool)
(declare-fun x75 () Int)
(declare-fun x23 () Bool)
(declare-fun x49 (Int) x28)
(declare-fun x65 (Int) Int)
(define-fun x16 ((x28 x28) (x99 Int)) x28 (ite ((_ is x34) x28) (x34 (x22 x28) (x177 x28) (+ x99 (x116 x28))) (ite ((_ is x198) x28) (x198 (x191 x28) (+ (x114 x28) x99)) (x79 (+ (x24 x28) x99)))))
(define-fun x93 ((x141 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x141) (<= 0 x141)) x141 (- x141 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x95 ((x141 Int)) Int (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x141) (> 0 x141)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x141) x141))
(define-fun x19 ((x141 Int)) Int (ite (and (< x141 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x141 0)) x141 (ite (and (< x141 231584178474632390847141970017375815706539969331281128078915168015826259279872) (>= x141 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- x141 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x141) (< x141 0)) (+ x141 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x133 x141 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x70 ((x26 Int)) Bool (and (< x26 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x26)))
(define-fun x2 ((x26 Int) (x17 Int)) Bool (= (x82 x17 x26) (x82 x26 x17)))
(define-fun x14 ((x26 Int) (x17 Int)) Bool (and (=> (and (< x17 0) (< 0 x26)) (< (x82 x26 x17) 0)) (=> (and (> 0 x17) (> 0 x26)) (> (x82 x26 x17) 0)) (=> (and (< x26 0) (> x17 0)) (> 0 (x82 x26 x17))) (=> (and (< 0 x17) (> x26 0)) (< 0 (x82 x26 x17)))))
(define-fun x171 ((x26 Int) (x17 Int)) Bool (=> (and (< 0 x26) (> x17 0)) (= (= x17 (x174 (x19 (x82 x26 x17)) x26)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x82 x26 x17)))))
(define-fun x102 ((x26 Int) (x17 Int)) Bool (=> (and (not (= x26 0)) (not (= x17 0))) (and (= (x174 (x82 x26 x17) x17) x26) (= x17 (x174 (x82 x26 x17) x26)))))
(define-fun x140 ((x26 Int) (x17 Int)) Bool (=> (and (< 0 x17) (< 0 x26)) (= (< (x174 115792089237316195423570985008687907853269984665640564039457584007913129639935 x26) x17) (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x82 x26 x17)))))
(define-fun x103 ((x26 Int) (x17 Int)) Bool (and (= (x19 (x82 x26 x17)) (x19 (x82 x26 (- x17 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x19 (x82 x26 x17)) (x19 (x82 (- x26 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x17 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x19 (x82 (- x26 115792089237316195423570985008687907853269984665640564039457584007913129639936) x17)) (x19 (x82 x26 x17)))))
(define-fun x104 ((x26 Int) (x17 Int)) Bool (and (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x17) (<= x17 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (<= x26 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x26))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17) (x174 57896044618658097711785492504343953926634992332820282019728792003956564819968 x26)) (>= (x82 x26 (- x17 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (=> (and (and (<= x26 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x26)) (and (< 0 x17) (<= x17 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= x26 (x174 57896044618658097711785492504343953926634992332820282019728792003956564819967 x17)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x82 x26 x17)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x26) (> x26 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x17) (> x17 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x174 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x26)) (<= (x82 (- x26 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x17 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x17) (> x17 0)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x26) (> x26 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x82 (- x26 115792089237316195423570985008687907853269984665640564039457584007913129639936) x17) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x26) (x174 57896044618658097711785492504343953926634992332820282019728792003956564819968 x17))))))
(define-fun x181 ((x26 Int) (x17 Int)) Bool (and (x2 x26 x17) (x140 x26 x17) (x102 x26 x17) (x104 x26 x17) (x103 x26 x17) (x171 x26 x17) (x14 x26 x17)))
(define-fun x168 ((x26 Int)) Bool (and (= (x82 0 x26) 0) (= (x82 x26 0) 0)))
(define-fun x46 ((x26 Int)) Bool (and (= (x82 x26 1) x26) (= x26 (x82 1 x26))))
(define-fun x162 ((x26 Int)) Bool (and (x46 x26) (x168 x26)))
(define-fun x91 ((x26 Int) (x17 Int)) Bool (=> (and (< 0 x17) (> x26 0)) (and (>= x26 (x174 x26 x17)) (>= (x174 x26 x17) 0))))
(define-fun x134 ((x26 Int) (x17 Int)) Bool (=> (and (and (< x17 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 1 x17)) (and (<= 0 x26) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x26))) (and (< (x174 x26 x17) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 (x174 x26 x17)))))
(define-fun x4 ((x26 Int) (x17 Int)) Bool (=> (and (> x17 1) (< x17 x26)) (< (x174 x26 x17) x26)))
(define-fun x57 ((x26 Int) (x17 Int)) Bool (=> (and (< 0 x17) (> x26 0)) (= (= 0 (x174 x26 x17)) (> x17 x26))))
(define-fun x32 ((x26 Int) (x17 Int)) Bool (=> (and (> x17 0) (< 0 x26)) (and (>= x26 (x82 (x174 x26 x17) x17)) (> (x82 (x174 x26 x17) x17) (- x26 x17)))))
(define-fun x53 ((x26 Int) (x17 Int)) Bool (and (x4 x26 x17) (x134 x26 x17) (x32 x26 x17) (x57 x26 x17) (x91 x26 x17)))
(define-fun x112 ((x26 Int)) Bool (= 0 (x174 0 x26)))
(define-fun x35 ((x26 Int)) Bool (= (x174 x26 1) x26))
(define-fun x90 ((x26 Int)) Bool (=> (not (= x26 0)) (= (x174 x26 x26) 1)))
(define-fun x153 ((x26 Int)) Bool (and (x35 x26) (x90 x26) (x112 x26)))
(define-fun x110 ((x26 Int)) Bool (and (= x26 (x47 115792089237316195423570985008687907853269984665640564039457584007913129639935 x26)) (= (x47 x26 115792089237316195423570985008687907853269984665640564039457584007913129639935) x26)))
(define-fun x68 ((x26 Int)) Bool (and (= 0 (x47 x26 0)) (= (x47 0 x26) 0)))
(define-fun x196 ((x26 Int)) Bool (= (x47 x26 x26) x26))
(define-fun x194 ((x26 Int)) Bool (and (x68 x26) (x110 x26) (x196 x26)))
(define-fun x89 ((x26 Int) (x17 Int)) Bool (= (x47 x26 x17) (x47 x17 x26)))
(define-fun x67 ((x26 Int) (x17 Int)) Bool (and (=> (<= 0 x17) (<= (x47 x26 x17) x17)) (<= 0 (x47 x26 x17)) (=> (<= 0 x26) (<= (x47 x26 x17) x26))))
(define-fun x100 ((x26 Int) (x17 Int)) Bool (and (x89 x26 x17) (x67 x26 x17)))
(define-fun x43 ((x26 Int)) Bool (and (= (x50 115792089237316195423570985008687907853269984665640564039457584007913129639935 x26) (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x26)) (= (x50 x26 115792089237316195423570985008687907853269984665640564039457584007913129639935) (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x26))))
(define-fun x175 ((x26 Int)) Bool (and (= (x50 x26 0) x26) (= x26 (x50 0 x26))))
(define-fun x87 ((x26 Int)) Bool (= (x50 x26 x26) 0))
(define-fun x108 ((x26 Int)) Bool (and (x87 x26) (x43 x26) (x175 x26)))
(define-fun x164 ((x26 Int) (x17 Int)) Bool (= (x50 x17 x26) (x50 x26 x17)))
(define-fun x152 ((x26 Int) (x17 Int)) Bool (and (<= (x50 x26 x17) (+ x17 x26)) (<= 0 (x50 x26 x17))))
(define-fun x94 ((x26 Int) (x17 Int)) Bool (and (x152 x26 x17) (x164 x26 x17)))
(define-fun x78 ((x26 Int)) Bool (and (= (x80 115792089237316195423570985008687907853269984665640564039457584007913129639935 x26) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x80 x26 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x77 ((x26 Int)) Bool (and (= x26 (x80 x26 0)) (= x26 (x80 0 x26))))
(define-fun x193 ((x26 Int)) Bool (= x26 (x80 x26 x26)))
(define-fun x192 ((x26 Int)) Bool (and (x78 x26) (x77 x26) (x193 x26)))
(define-fun x130 ((x26 Int) (x17 Int)) Bool (= (x80 x26 x17) (x80 x17 x26)))
(define-fun x124 ((x26 Int) (x17 Int)) Bool (and (=> (<= 0 x17) (>= (x80 x26 x17) x17)) (=> (<= 0 x26) (<= x26 (x80 x26 x17))) (<= (x80 x26 x17) (+ x26 x17))))
(define-fun x13 ((x26 Int) (x17 Int)) Bool (and (x124 x26 x17) (x130 x26 x17)))
(define-fun x71 ((x26 Int) (x17 Int) (x144 Int) (x9 Int)) Bool (=> (and (<= x17 x9) (<= 0 x17) (>= x144 x26) (<= 0 x26)) (>= (x82 x144 x9) (x82 x26 x17))))
(define-fun x42 ((x26 Int) (x17 Int) (x144 Int) (x9 Int)) Bool (=> (= x144 x26) (= (x82 x26 (- x17 x9)) (- (x82 x26 x17) (x82 x144 x9)))))
(define-fun x150 ((x26 Int)) Bool (=> (and (< 10000 x26) (not (= 1461501637330902918203684832716283019655932542975 x26)) (not (= x26 1415856751)) (not (= x26 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (not ((_ is x79) (x49 x26)))))
(assert (= x155 (=> (or x36 (not x36)) x61)))
(assert (x42 x97 x105 x176 x172))
(assert (x181 x60 (- x131 x98)))
(assert (x181 x98 (- x135 x126)))
(assert (x71 x3 x165 x105 x97))
(assert (x181 x135 (- x98 x197)))
(assert (x181 x10 (- x66 x98)))
(assert (x42 x179 x151 x105 x97))
(assert (x162 (- x10 x97)))
(assert (x71 x179 x151 x98 x135))
(assert (x71 x98 x135 x172 x176))
(assert (x42 x131 x60 x98 x135))
(assert (x181 x131 (- x10 x105)))
(assert (x42 x97 x105 x75 x197))
(assert (x162 (- x60 x98)))
(assert (x42 x105 x97 x176 x172))
(assert (x162 (- x97 x60)))
(assert (x42 x197 x75 x105 x97))
(assert (x162 (- x135 (x80 x45 x38))))
(assert (x42 x98 x135 x10 x172))
(assert (x42 x97 x105 x119 x7))
(assert (x42 x75 x197 x97 x105))
(assert (x70 x10))
(assert (x42 x97 x105 x165 x10))
(assert (x181 x165 (- x10 x105)))
(assert (x42 x97 x105 x135 x98))
(assert (x162 (- x105 x3)))
(assert (x71 x97 x105 x172 x176))
(assert (x181 x197 (- x75 x97)))
(assert (x42 x10 x179 x97 x105))
(assert (x71 x97 x105 x10 x131))
(assert (x42 x105 x97 x10 x165))
(assert (x181 x105 (- x97 x3)))
(assert (x53 x15 x51))
(assert (x181 x135 (- x98 x176)))
(assert (x42 x105 x97 x131 x60))
(assert (x42 x179 x10 x97 x105))
(assert (x162 (- x98 x97)))
(assert (x181 x135 (- x98 x3)))
(assert (x71 x98 x135 x165 x3))
(assert (x162 (- x97 x197)))
(assert (x71 x97 x105 x165 x3))
(assert (x162 (- x135 x119)))
(assert (x162 (- x176 x135)))
(assert (x181 x7 (- x10 x135)))
(assert (x181 x165 x3))
(assert (x181 x10 (- x66 x97)))
(assert (x162 (- x135 x10)))
(assert (x71 x10 x7 x105 x97))
(assert (= (or x84 (and (not x63) x184)) x190))
(assert (x181 x66 (- x10 x135)))
(assert (x181 x179 (- x10 x98)))
(assert (x181 x135 (- x98 x179)))
(assert (x181 x165 (- x10 x98)))
(assert (x42 x119 x7 x105 x97))
(assert (x162 (- x135 x151)))
(assert (x162 (- x105 x151)))
(assert (x162 (- x131 x135)))
(assert (x181 x135 (- x98 x75)))
(assert (x42 x131 x60 x97 x105))
(assert (x71 x105 x97 x10 x172))
(assert (x153 x15))
(assert (x42 x97 x105 x10 x7))
(assert (x42 (x80 x45 x38) x126 x135 x98))
(assert (x71 x105 x97 x7 x119))
(assert (x181 x3 (- x165 x105)))
(assert (x42 x10 x7 x98 x135))
(assert (x42 x105 x97 x66 x41))
(assert (x162 x179))
(assert (x71 x10 x131 x105 x97))
(assert (x181 x179 (- x151 x105)))
(assert (x162 (- x97 x131)))
(assert (= (=> (and (= x187 x200) (= x105 x180) x186 (= x187 x105) (= (< 0 (x30 (x49 x6))) x186) (= (x30 (x49 x6)) x163) (= x81 x97) (= x20 (x167 (x49 x6))) (= (x133 (x82 x105 x97) 115792089237316195423570985008687907853269984665640564039457584007913129639935) x111) (= x40 (x95 (- x111 x52))) (= x120 x21) (<= x6 1461501637330902918203684832716283019655932542975) (= x44 x21) (= x97 x62) (= x146 1415856751) (< 0 x163) (= x142 x120) (= x64 (= x145 0)) (= x145 (x19 (- x40 (ite (< x111 x52) 1 0)))) (= x52 (x19 (x82 x105 x97))) (= x136 x81) (>= x20 0) (> x6 0)) (and (=> (and (= x139 (< x145 x120)) (not x64)) (and (=> (not x139) x72) (=> (and x139 (and (= x85 (x19 (* x10 3))) (= (x19 (x82 x197 x75)) x38) (= x5 (x19 (x82 x10 x7))) (= (x174 x120 x51) x10) (= (x19 (x82 x10 x131)) x73) (= x131 (x19 (x82 x7 x119))) (= (x95 (- 2 x73)) x60) (= (x174 x147 x51) x45) (= x172 (x50 2 x85)) (= x74 (x19 (x82 (x80 x45 x38) x126))) (= (x95 (- 2 x33)) x3) (= x8 (x19 (x82 x10 x179))) (= x15 (x95 (- 0 x51))) (= x165 (x19 (x82 x131 x60))) (= x119 (x95 (- 2 x5))) (= (x19 (x82 x66 x41)) x126) (= (x174 x15 x51) x107) (= x51 (x47 x120 x88)) (= (x133 (x82 x105 x97) x120) x188) (= x176 (x95 (- 2 x11))) (= (x19 (x82 x10 x66)) x27) (= (x19 (- x145 (ite (< x52 x188) 1 0))) x197) (= x183 x74) (= x75 (x93 (+ 1 x107))) (= x66 (x19 (x82 x165 x3))) (= x88 (x93 (+ 1 (x19 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x120))))) (= x33 (x19 (x82 x10 x165))) (= x11 (x19 (x82 x10 x172))) (= x41 (x95 (- 2 x27))) (= (x95 (- 2 x8)) x151) (= x7 (x19 (x82 x179 x151))) (= (x95 (- x52 x188)) x147) (= (x19 (x82 x172 x176)) x179))) x160))) (=> (and (= (> x120 0) x63) x64) (and (=> (not x63) x72) (=> (and (and (= (x174 x52 x120) x113) (= x113 x183)) x63) x160))))) x55))
(assert (x42 x98 x135 x172 x176))
(assert (x71 x131 x10 x105 x97))
(assert (x42 x135 x98 (x80 x45 x38) x126))
(assert (x162 x3))
(assert (x71 x98 x135 x10 x179))
(assert (x70 x41))
(assert (x53 x189 x76))
(assert (x181 x165 (- x10 x135)))
(assert (x42 x97 x105 x179 x151))
(assert (x42 x10 x131 x135 x98))
(assert (x162 (- x98 x75)))
(assert (x42 x172 x176 x135 x98))
(assert (x42 x97 x105 x98 x135))
(assert (x162 (- (x80 x45 x38) x97)))
(assert (x42 x97 x105 x10 x131))
(assert (= (x79 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x49 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x181 x98 (- x135 x105)))
(assert (x181 x126 (- (x80 x45 x38) x135)))
(assert (x42 x172 x176 x97 x105))
(assert (x70 x38))
(assert (x42 x197 x75 x97 x105))
(assert (x42 x126 (x80 x45 x38) x98 x135))
(assert (x42 x179 x10 x105 x97))
(assert (x71 x105 x97 x10 x66))
(assert (x181 x105 (- x97 x165)))
(assert (x181 x105 (- x97 x131)))
(assert (x162 (- x97 x172)))
(assert (x42 x105 x97 x172 x176))
(assert (x71 x105 x97 x10 x7))
(assert (x181 x131 (- x60 x135)))
(assert (x42 x97 x105 x165 x3))
(assert (x181 x98 (- x135 (x80 x45 x38))))
(assert (x162 (- x97 (x80 x45 x38))))
(assert (x42 x75 x197 x105 x97))
(assert (x71 x176 x172 x98 x135))
(assert (x42 x135 x98 x172 x176))
(assert (x71 x119 x7 x105 x97))
(assert (x42 x66 x41 x97 x105))
(assert (x181 x165 (- x3 x97)))
(assert (x70 x8))
(assert (x181 x119 (- x7 x98)))
(assert (x181 x172 (- x176 x98)))
(assert (x42 x97 x105 x10 x66))
(assert (x42 x10 x179 x105 x97))
(assert (x71 x135 x98 x10 x179))
(assert (x70 x74))
(assert (x181 x131 (- x10 x135)))
(assert (x162 (- x135 x179)))
(assert (x42 x98 x135 x10 x131))
(assert (x181 x98 (- x135 x41)))
(assert (x181 x10 (- x131 x105)))
(assert (x42 x3 x165 x135 x98))
(assert (x70 x142))
(assert (x162 (- x98 x66)))
(assert (x162 (- x7 x98)))
(assert (x181 x105 (- x97 x176)))
(assert (x42 x135 x98 x165 x3))
(assert (x162 (- x97 x75)))
(assert (x70 x40))
(assert (x181 x98 (- x135 x131)))
(assert (x162 (- x10 x98)))
(assert (= (and x64 x117) x184))
(assert (x181 x151 (- x179 x135)))
(assert (x181 x10 (- x7 x98)))
(assert (x162 (- x131 x105)))
(assert (x42 x197 x75 x135 x98))
(assert (x162 (- x98 x7)))
(assert (x42 x10 x66 x97 x105))
(assert (= x18 (and x169 x54)))
(assert (x71 x105 x97 x165 x3))
(assert (x181 x105 (- x97 x75)))
(assert (x71 x135 x98 x7 x119))
(assert (x162 (- x98 x41)))
(assert (x181 x135 (- x98 x105)))
(assert (x181 x97 (- x105 x60)))
(assert (x162 (- x105 x172)))
(assert (x181 x179 (- x151 x98)))
(assert (x42 x60 x131 x97 x105))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x25 (x79 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x181 x60 (- x131 x97)))
(assert (x162 x7))
(assert (x71 x66 x10 x98 x135))
(assert (x181 x97 (- x105 x7)))
(assert (x42 x7 x10 x135 x98))
(assert (x70 x107))
(assert (x162 (- x10 x105)))
(assert (x70 x131))
(assert (x42 x135 x98 x197 x75))
(assert (x42 x97 x105 x172 x10))
(assert (x181 x176 (- x172 x135)))
(assert (x181 x97 (- x105 x10)))
(assert (x71 x135 x98 x10 x66))
(assert (x162 (- x98 x119)))
(assert (x53 x147 x51))
(assert (x162 (- x66 x97)))
(assert (x181 x75 (- x197 x97)))
(assert (= x84 (and (not x139) x138)))
(assert (x181 x75 (- x197 x98)))
(assert (x181 x98 (- x135 x66)))
(assert (x42 x135 x98 x41 x66))
(assert (x42 x98 x135 x66 x10))
(assert (x162 x98))
(assert (x42 x10 x165 x97 x105))
(assert (x42 x7 x119 x135 x98))
(assert (x71 x7 x10 x98 x135))
(assert (x181 x10 x172))
(assert (x71 x105 x97 x66 x41))
(assert (x181 x172 (- x176 x97)))
(assert (x181 x197 (- x75 x135)))
(assert (x71 x60 x131 x105 x97))
(assert (x71 x172 x176 x105 x97))
(assert (x42 x97 x105 x10 x179))
(assert (x162 (- x119 x105)))
(assert (x70 x179))
(assert (x162 (- x75 x98)))
(assert (x162 (- x105 x7)))
(assert (x71 x135 x98 x131 x60))
(assert (x162 x165))
(assert (x181 x135 (- x98 x131)))
(assert (x70 x188))
(assert (x70 x6))
(assert (x162 (- x105 x165)))
(assert (x42 x66 x41 x98 x135))
(assert (x70 x200))
(assert (x42 x105 x97 x126 (x80 x45 x38)))
(assert (x181 x135 (- x98 x41)))
(assert (x42 x10 x179 x98 x135))
(assert (x70 x33))
(assert (x71 x197 x75 x105 x97))
(assert (x162 (- x135 x75)))
(assert (x71 x176 x172 x105 x97))
(assert (x42 x135 x98 x119 x7))
(assert (x42 x105 x97 x151 x179))
(assert (x181 x10 (- x7 x135)))
(assert (x70 x145))
(assert (x42 x135 x98 x10 x7))
(assert (x181 x105 (- x97 x172)))
(assert (x42 x98 x135 x172 x10))
(assert (x42 x66 x10 x135 x98))
(assert (x42 x98 x135 x165 x3))
(assert (x70 x176))
(assert (x42 x105 x97 x41 x66))
(assert (x42 x98 x135 x41 x66))
(assert (x181 x7 (- x10 x97)))
(assert (x181 x105 (- x97 x60)))
(assert (x71 x98 x135 x10 x165))
(assert (x162 (- x119 x97)))
(assert (x42 x97 x105 x66 x41))
(assert (x181 x10 (- x131 x98)))
(assert (x42 x10 x131 x98 x135))
(assert (x70 x111))
(assert (x71 x172 x176 x98 x135))
(assert (x42 x10 x7 x105 x97))
(assert (x162 (- x60 x97)))
(assert (x71 x66 x41 x105 x97))
(assert (x181 x10 (- x179 x135)))
(assert (x42 x97 x105 x179 x10))
(assert (x162 (- x119 x98)))
(assert (x42 x66 x41 x135 x98))
(assert (x42 x97 x105 x10 x172))
(assert (x162 x60))
(assert (x181 x105 (- x97 x10)))
(assert (x181 x7 (- x10 x98)))
(assert (x42 x10 x66 x105 x97))
(assert (x162 (- x119 x135)))
(assert (x42 x135 x98 x75 x197))
(assert (x42 x135 x98 x7 x119))
(assert (x42 x126 (x80 x45 x38) x97 x105))
(assert (x181 x98 (- x135 x165)))
(assert (x181 x105 (- x97 x179)))
(assert (x70 x52))
(assert (x70 x97))
(assert (x42 x135 x98 x66 x10))
(assert (= (or x143 x190) x166))
(assert (x181 x66 (- x41 x98)))
(assert (x42 x172 x10 x105 x97))
(assert (x71 x165 x3 x98 x135))
(assert (x162 (- x98 x151)))
(assert (x162 x135))
(assert (x71 x135 x98 x10 x7))
(assert (x42 x66 x41 x105 x97))
(assert (x71 x105 x97 x131 x60))
(assert (x71 x60 x131 x98 x135))
(assert (x181 x10 (- x172 x97)))
(assert (x42 x176 x172 x135 x98))
(assert (x42 x105 x97 x10 x179))
(assert (x70 x81))
(assert (x162 (- (x80 x45 x38) x98)))
(assert (x42 x41 x66 x97 x105))
(assert (x162 (- x97 x10)))
(assert (x181 x98 (- x135 x3)))
(assert (x162 (- x97 x66)))
(assert (x71 x105 x97 x172 x176))
(assert (x181 x97 (- x105 x66)))
(assert (x181 x135 (- x98 x165)))
(assert (x71 x131 x60 x98 x135))
(assert (x42 x10 x7 x135 x98))
(assert (= x39 (or x18 x157)))
(assert (x70 x85))
(assert (x42 x105 x97 x179 x10))
(assert (x42 x131 x10 x97 x105))
(assert (x42 x131 x60 x105 x97))
(assert (x181 x126 (- (x80 x45 x38) x97)))
(assert (x42 x179 x10 x135 x98))
(assert (x181 x98 (- x135 x97)))
(assert (x42 x41 x66 x135 x98))
(assert (x42 x98 x135 x10 x66))
(assert (x42 x3 x165 x97 x105))
(assert (x71 x7 x10 x105 x97))
(assert (= true x117))
(assert (x162 (- x165 x105)))
(assert (x162 (- (x80 x45 x38) x105)))
(assert (x71 x98 x135 x10 x172))
(assert (x162 (- x126 x105)))
(assert (x42 x7 x119 x105 x97))
(assert (x42 x97 x105 x172 x176))
(assert (= x157 (and (not x54) x169)))
(assert (x162 (- x105 x60)))
(assert (x71 x98 x135 x10 x7))
(assert (x42 x66 x10 x105 x97))
(assert (x181 x179 (- x151 x135)))
(assert (x181 x172 (- x176 x105)))
(assert (x71 x105 x97 x10 x165))
(assert (x181 x98 (- x135 x7)))
(assert (x162 (- x197 x97)))
(assert (x42 x179 x151 x135 x98))
(assert (x181 x97 (- x105 x131)))
(assert (x42 x151 x179 x97 x105))
(assert (= (x25 (x49 x6)) x6))
(assert (x181 x97 (- x105 x126)))
(assert (x162 (- x135 x197)))
(assert (x71 x151 x179 x98 x135))
(assert (x162 (- x97 x3)))
(assert (x71 x131 x60 x105 x97))
(assert (x42 x119 x7 x135 x98))
(assert (x162 (- x98 x176)))
(assert (x181 x10 (- x131 x135)))
(assert (x181 x7 (- x119 x135)))
(assert (= (x79 1415856751) (x49 1415856751)))
(assert (x181 (x80 x45 x38) (- x126 x98)))
(assert (= 1461501637330902918203684832716283019655932542975 (x25 (x79 1461501637330902918203684832716283019655932542975))))
(assert (x181 x165 (- x3 x135)))
(assert (x162 (- x98 x126)))
(assert (x181 x151 (- x179 x105)))
(assert (x181 x105 (- x97 x41)))
(assert (x42 x151 x179 x98 x135))
(assert (x162 (- x176 x98)))
(assert (= x37 (and x63 x184)))
(assert (x42 x97 x105 x126 (x80 x45 x38)))
(assert (x71 x10 x7 x98 x135))
(assert (x162 (- x172 x105)))
(assert (x181 x10 (- x131 x97)))
(assert (x42 x135 x98 x60 x131))
(assert (x162 (- x75 x97)))
(assert (x42 (x80 x45 x38) x126 x97 x105))
(assert (x150 x6))
(assert (x181 x75 (- x197 x105)))
(assert (x162 x172))
(assert (x181 x135 (- x98 x7)))
(assert (x71 x105 x97 x10 x179))
(assert (x162 (- x197 x98)))
(assert (x42 x41 x66 x105 x97))
(assert (x162 x131))
(assert (x162 (- x105 x179)))
(assert (x162 (- x126 x97)))
(assert (x42 x105 x97 x10 x131))
(assert (x71 x98 x135 x197 x75))
(assert (x42 x135 x98 x66 x41))
(assert (x42 x105 x97 x119 x7))
(assert (x71 x105 x97 x179 x151))
(assert (x42 x98 x135 x126 (x80 x45 x38)))
(assert (x181 x66 (- x41 x105)))
(assert (x181 x119 (- x7 x135)))
(assert (x181 x10 (- x7 x97)))
(assert (x162 (- x197 x135)))
(assert (x70 x62))
(assert (x162 (- x105 x119)))
(assert (x42 x10 x66 x135 x98))
(assert (x42 x10 x165 x98 x135))
(assert (x181 x105 (- x97 x151)))
(assert (x42 x98 x135 x131 x10))
(assert (x42 x98 x135 x10 x179))
(assert (x162 (- x172 x135)))
(assert (x71 x3 x165 x98 x135))
(assert (x162 (- x165 x135)))
(assert (x70 x73))
(assert (x42 x3 x165 x98 x135))
(assert (x181 x10 (- x165 x105)))
(assert (x181 x135 (- x98 x66)))
(assert (x42 x172 x176 x105 x97))
(assert (x181 x66 x41))
(assert (x42 x105 x97 x7 x10))
(assert (x181 x197 (- x75 x98)))
(assert (x181 x41 (- x66 x135)))
(assert (x42 x41 x66 x98 x135))
(assert (x42 x98 x135 x10 x7))
(assert (x181 x172 (- x176 x135)))
(assert (x181 x105 (- x97 x66)))
(assert (x181 x7 (- x119 x105)))
(assert (x42 x131 x10 x105 x97))
(assert (x42 x97 x105 x41 x66))
(assert (x42 x165 x10 x105 x97))
(assert (x181 x10 (- x172 x135)))
(assert (x71 x10 x131 x98 x135))
(assert (= x169 (or x69 x185)))
(assert (x71 x179 x10 x98 x135))
(assert (x71 x41 x66 x105 x97))
(assert (x42 x98 x135 x60 x131))
(assert (x42 x10 x179 x135 x98))
(assert (x162 (- x75 x105)))
(assert (x181 x105 (- x97 x126)))
(assert (x181 x7 x119))
(assert (x181 x131 x60))
(assert (x42 x97 x105 x197 x75))
(assert (x181 x98 (- x135 x151)))
(assert (x181 x176 (- x172 x98)))
(assert (x181 x98 (- x135 x60)))
(assert (x162 (- x105 (x80 x45 x38))))
(assert (x162 (- x97 x119)))
(assert (x181 x197 (- x75 x105)))
(assert (x70 x21))
(assert (x42 x105 x97 x165 x3))
(assert (x153 x51))
(assert (x162 (- x126 x98)))
(assert (x194 x120))
(assert (x162 (- x66 x98)))
(assert (x42 x97 x105 x131 x60))
(assert (x70 x15))
(assert (x162 (- x97 x135)))
(assert (x162 x97))
(assert (x71 x97 x105 (x80 x45 x38) x126))
(assert (x42 x135 x98 x179 x151))
(assert (x181 x105 (- x97 x98)))
(assert (x162 (- x41 x135)))
(assert (x42 x131 x10 x98 x135))
(assert (x70 x58))
(assert (x181 x66 (- x10 x98)))
(assert (x42 x165 x3 x97 x105))
(assert (x70 x60))
(assert (x181 x7 (- x119 x97)))
(assert (x42 x105 x97 x135 x98))
(assert (x42 x105 x97 x3 x165))
(assert (x42 x176 x172 x98 x135))
(assert (x181 x97 (- x105 x165)))
(assert (x181 x135 (- x98 x60)))
(assert (x53 x52 x120))
(assert (x181 x131 (- x10 x97)))
(assert (x181 x10 (- x172 x98)))
(assert (x42 x105 x97 x60 x131))
(assert (x42 x105 x97 x10 x7))
(assert (x71 x10 x66 x105 x97))
(assert (x70 x115))
(assert (x181 x119 (- x7 x97)))
(assert (x42 x10 x131 x105 x97))
(assert (= x143 (or x37 x118)))
(assert (x42 x98 x135 x179 x10))
(assert (x162 (- x97 x98)))
(assert (x71 x98 x135 x10 x131))
(assert (x162 (- x172 x98)))
(assert (x71 x10 x172 x98 x135))
(assert (x153 x76))
(assert (x42 x60 x131 x98 x135))
(assert (x70 x120))
(assert (x162 (- x105 x126)))
(assert (x71 x165 x3 x105 x97))
(assert (x181 x97 (- x105 x98)))
(assert (x181 x10 (- x179 x97)))
(assert (x42 x197 x75 x98 x135))
(assert (x71 x126 (x80 x45 x38) x98 x135))
(assert (x42 x165 x3 x98 x135))
(assert (x162 x119))
(assert (x162 (- x105 x75)))
(assert (x162 (- x176 x97)))
(assert (x162 (- x135 x41)))
(assert (x70 x113))
(assert (x71 x10 x66 x98 x135))
(assert (x42 x98 x135 x10 x165))
(assert (x70 x27))
(assert (x71 x97 x105 x10 x179))
(assert (x162 (- x98 x172)))
(assert (x181 x10 x66))
(assert (x70 x127))
(assert (x162 (- x98 x105)))
(assert (x42 x131 x60 x135 x98))
(assert (x42 x7 x119 x98 x135))
(assert (x162 (- x97 x126)))
(assert (x71 x97 x105 x131 x60))
(assert (x42 x105 x97 x10 x66))
(assert (x42 x10 x165 x105 x97))
(assert (x70 x44))
(assert (x42 x66 x10 x97 x105))
(assert (= (and x117 (not x64)) x138))
(assert (x42 x135 x98 x131 x60))
(assert (x181 x97 (- x105 x3)))
(assert (= (=> (and (= x170 x122) (= x128 x125) (= x178 x156) (= x122 x56) (= (= x182 x123) x149) (= x182 x109) (= x56 (or x178 x125)) (= x123 x170)) x149) x101))
(assert (x42 x176 x172 x105 x97))
(assert (x181 x41 (- x66 x105)))
(assert (x181 x97 (- x105 x151)))
(assert (x71 x135 x98 x172 x176))
(assert (x162 (- x151 x135)))
(assert (x181 x41 (- x66 x97)))
(assert (x42 x97 x105 (x80 x45 x38) x126))
(assert (x42 x151 x179 x135 x98))
(assert (x162 (- x179 x97)))
(assert (x42 x135 x98 x151 x179))
(assert (x162 (x80 x45 x38)))
(assert (x71 x105 x97 (x80 x45 x38) x126))
(assert (x42 x135 x98 x97 x105))
(assert (x162 x75))
(assert (x181 (x80 x45 x38) (- x126 x105)))
(assert (x181 x10 (- x165 x98)))
(assert (x71 x97 x105 x10 x172))
(assert (x70 x45))
(assert (x153 x52))
(assert (x162 (- x98 x165)))
(assert (x71 x41 x66 x98 x135))
(assert (x42 x165 x10 x97 x105))
(assert (x181 x135 (- x98 x97)))
(assert (x42 x98 x135 (x80 x45 x38) x126))
(assert (x71 x10 x165 x98 x135))
(assert (x181 x7 (- x10 x105)))
(assert (x42 x75 x197 x98 x135))
(assert (x42 x97 x105 x7 x10))
(assert (x181 (x80 x45 x38) x126))
(assert (x71 x98 x135 x10 x66))
(assert (x42 x135 x98 x131 x10))
(assert (x71 x97 x105 x10 x66))
(assert (x162 (- x105 x135)))
(assert (x181 x131 (- x60 x98)))
(assert (x181 x98 (- x135 x179)))
(assert (x162 (- x105 x98)))
(assert (x162 (- x98 x131)))
(assert (x162 (- x66 x105)))
(assert (x181 x98 (- x135 x176)))
(assert (x162 (- x176 x105)))
(assert (x71 x97 x105 x197 x75))
(assert (x42 x97 x105 x131 x10))
(assert (x162 (- x41 x98)))
(assert (= x61 (=> (and (and (= x173 (x82 x98 x135)) (= x137 0) (= x161 x58) (= x148 x115) (= x195 x156) (= x12 x58) (= x98 x161) (= x115 x96) (= x92 x121) (= x121 x142) (= x36 x109) (= (not x195) x54) (= x96 x62) (= x12 x180) (= x135 x148) (= x156 (= x92 0))) (or (and (and (= x173 x189) (= x158 x54) (= x159 x128) (= x48 x1) (= x1 x76) (= x121 x48) (= x129 (x174 x189 x76)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x127) (= x129 x83) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 x83) x159) x158) x54) (and (and (= x23 x128) (= false x23) (= x31 (not x199)) x31 (= x54 x199)) (not x54)))) x101)))
(assert (x162 (- x165 x97)))
(assert (x71 x135 x98 x105 x97))
(assert (x42 x119 x7 x98 x135))
(assert (x71 x135 x98 x66 x41))
(assert (x181 x105 (- x97 x197)))
(assert (x71 x97 x105 x10 x7))
(assert (x181 x165 (- x3 x105)))
(assert (x162 (- x172 x97)))
(assert (x42 x98 x135 x7 x10))
(assert (x70 x51))
(assert (x70 x180))
(assert (x42 x105 x97 x98 x135))
(assert (x42 x179 x151 x97 x105))
(assert (x162 (- x98 x179)))
(assert (x70 x88))
(assert (x162 (- x179 x135)))
(assert (x162 (- x66 x135)))
(assert (x71 x75 x197 x98 x135))
(assert (x42 x97 x105 x151 x179))
(assert (x162 x41))
(assert (= 1415856751 (x25 (x79 1415856751))))
(assert (x42 x135 x98 x10 x179))
(assert (x181 x131 (- x10 x98)))
(assert (x71 x135 x98 (x80 x45 x38) x126))
(assert (x181 x10 x179))
(assert (x181 x97 (- x105 x41)))
(assert (x162 (- x105 x197)))
(assert (x71 x165 x10 x105 x97))
(assert (x42 x98 x135 x165 x10))
(assert (x70 x146))
(assert (x162 (- x3 x135)))
(assert (x181 x126 (- (x80 x45 x38) x98)))
(assert (x108 2))
(assert (x162 (- x98 x3)))
(assert (x181 x97 (- x105 x179)))
(assert (x181 x105 (- x97 (x80 x45 x38))))
(assert (x42 x105 x97 x197 x75))
(assert (x162 x105))
(assert (x181 x97 (- x105 x172)))
(assert (x42 x176 x172 x97 x105))
(assert (x70 x183))
(assert (x70 x121))
(assert (x42 x172 x10 x98 x135))
(assert (x42 x3 x165 x105 x97))
(assert (x71 x98 x135 (x80 x45 x38) x126))
(assert (x181 x97 (- x105 x119)))
(assert (x42 x126 (x80 x45 x38) x105 x97))
(assert (x162 (- x135 x7)))
(assert (= x160 (=> (and (= x86 x183) (= false x36)) x155)))
(assert (x181 x135 (- x98 x172)))
(assert (x42 x97 x105 x10 x165))
(assert (x42 x98 x135 x131 x60))
(assert (x42 x135 x98 x126 (x80 x45 x38)))
(assert (x194 x88))
(assert (x42 x135 x98 x165 x10))
(assert (x42 x179 x10 x98 x135))
(assert (x162 (- x179 x98)))
(assert (x71 x10 x172 x105 x97))
(assert (x42 x105 x97 x7 x119))
(assert (x162 (- x97 x179)))
(assert (x181 x97 (- x105 x135)))
(assert (x162 (- x98 x197)))
(assert (x181 x126 (- (x80 x45 x38) x105)))
(assert (x70 x137))
(assert (x162 (- x135 x97)))
(assert (x42 x98 x135 x197 x75))
(assert (x181 x97 (- x105 (x80 x45 x38))))
(assert (x181 x66 (- x41 x97)))
(assert (x162 x10))
(assert (x42 x135 x98 x10 x131))
(assert (x181 x179 (- x10 x135)))
(assert (x42 x179 x151 x98 x135))
(assert (not x55))
(assert (x162 (- x10 x135)))
(assert (x42 x105 x97 x66 x10))
(assert (x42 x97 x105 x66 x10))
(assert (x71 (x80 x45 x38) x126 x105 x97))
(assert (x181 x10 x7))
(assert (x162 (- x97 x165)))
(assert (x71 x135 x98 x10 x172))
(assert (x71 x98 x135 x7 x119))
(assert (= x185 (and x166 x36)))
(assert (x71 x7 x119 x98 x135))
(assert (x181 x135 (- x98 x126)))
(assert (x162 (- x3 x105)))
(assert (x42 x98 x135 x176 x172))
(assert (x162 x126))
(assert (x181 x197 x75))
(assert (x42 x105 x97 x75 x197))
(assert (x42 x98 x135 x119 x7))
(assert (x71 x105 x97 x98 x135))
(assert (x181 x165 (- x10 x97)))
(assert (x71 x135 x98 x10 x131))
(assert (x162 (- x105 x41)))
(assert (x42 x10 x66 x98 x135))
(assert (x70 x20))
(assert (x181 x66 (- x10 x105)))
(assert (x42 x135 x98 x179 x10))
(assert (x181 x98 (- x135 x197)))
(assert (x162 (- x3 x98)))
(assert (x181 x172 (- x10 x98)))
(assert (x192 x38))
(assert (x181 x98 (- x135 x75)))
(assert (x181 x179 (- x10 x105)))
(assert (x181 x135 (- x98 x151)))
(assert (x42 x98 x135 x3 x165))
(assert (x71 x98 x135 x105 x97))
(assert (x42 x10 x165 x135 x98))
(assert (x71 x119 x7 x98 x135))
(assert (x162 (- x135 x131)))
(assert (x42 x105 x97 x165 x10))
(assert (x71 x7 x119 x105 x97))
(assert (x70 x12))
(assert (x42 x135 x98 x105 x97))
(assert (x70 x48))
(assert (x181 x105 (- x97 x135)))
(assert (= (x79 1461501637330902918203684832716283019655932542975) (x49 1461501637330902918203684832716283019655932542975)))
(assert (x162 (- (x80 x45 x38) x135)))
(assert (x162 (- x60 x105)))
(assert (x181 x172 (- x10 x97)))
(assert (x71 x98 x135 x66 x41))
(assert (x42 x10 x172 x98 x135))
(assert (x181 x131 (- x60 x97)))
(assert (x71 x98 x135 x131 x60))
(assert (x192 x45))
(assert (x162 (- x151 x98)))
(assert (x162 (- x105 x176)))
(assert (x162 (- x131 x98)))
(assert (x42 x10 x7 x97 x105))
(assert (x42 x135 x98 x10 x66))
(assert (x162 (- x179 x105)))
(assert (x70 x105))
(assert (x181 x10 x131))
(assert (x181 x97 (- x105 x176)))
(assert (x42 x97 x105 x3 x165))
(assert (x71 x126 (x80 x45 x38) x105 x97))
(assert (x71 x97 x105 x179 x151))
(assert (x42 x105 x97 x10 x172))
(assert (x181 x151 (- x179 x98)))
(assert (x42 x135 x98 x3 x165))
(assert (x181 x7 (- x119 x98)))
(assert (x181 x135 (- x98 x119)))
(assert (x181 x98 (- x135 x119)))
(assert (x70 x66))
(assert (x42 x98 x135 x97 x105))
(assert (x181 x135 (- x98 x10)))
(assert (x181 x119 (- x7 x105)))
(assert (x181 (x80 x45 x38) (- x126 x135)))
(assert (x71 x97 x105 x66 x41))
(assert (= (and x139 x138) x118))
(assert (x181 x135 (- x98 (x80 x45 x38))))
(assert (x162 (- x98 x60)))
(assert (x42 x165 x10 x135 x98))
(assert (x181 x151 (- x179 x97)))
(assert (x42 x131 x10 x135 x98))
(assert (x162 x197))
(assert (x162 (- x105 x66)))
(assert (x70 x75))
(assert (x162 (- x131 x97)))
(assert (x42 x60 x131 x105 x97))
(assert (x162 (- x135 x165)))
(assert (x42 x119 x7 x97 x105))
(assert (= x72 (=> (= x36 true) x155)))
(assert (x181 x98 (- x135 x10)))
(assert (x70 x147))
(assert (x70 x119))
(assert (x42 x165 x3 x105 x97))
(assert (x42 x7 x10 x98 x135))
(assert (x153 x120))
(assert (x71 x10 x165 x105 x97))
(assert (x181 x105 (- x97 x119)))
(assert (x162 (- x97 x151)))
(assert (x42 x135 x98 x7 x10))
(assert (x42 x172 x10 x135 x98))
(assert (x71 x105 x97 x197 x75))
(assert (x71 x197 x75 x98 x135))
(assert (x108 x85))
(assert (x181 x179 x151))
(assert (x71 x10 x179 x105 x97))
(assert (x70 x7))
(assert (x181 x10 (- x7 x105)))
(assert (x162 x66))
(assert (x162 (- x135 x3)))
(assert (x181 x176 (- x172 x97)))
(assert (x71 x10 x179 x98 x135))
(assert (x181 (x80 x45 x38) (- x126 x97)))
(assert (x71 x75 x197 x105 x97))
(assert (x162 (- x165 x98)))
(assert (x71 x165 x10 x98 x135))
(assert (x162 (- x98 x10)))
(assert (x71 x135 x98 x165 x3))
(assert (x70 x151))
(assert (x42 x98 x135 x105 x97))
(assert (x42 x97 x105 x7 x119))
(assert (x42 x7 x119 x97 x105))
(assert (=> (<= x6 10000) (= (x79 x6) (x49 x6))))
(assert (x162 (- x105 x10)))
(assert (x70 x86))
(assert (x42 (x80 x45 x38) x126 x105 x97))
(assert (x42 x105 x97 x172 x10))
(assert (x181 x165 (- x3 x98)))
(assert (x162 (- x135 x60)))
(assert (x71 (x80 x45 x38) x126 x98 x135))
(assert (x181 x10 (- x179 x98)))
(assert (x181 x131 (- x60 x105)))
(assert (x42 x60 x131 x135 x98))
(assert (x162 (- x135 x172)))
(assert (x42 x172 x10 x97 x105))
(assert (x181 x60 (- x131 x105)))
(assert (x71 x66 x41 x98 x135))
(assert (x71 x172 x10 x98 x135))
(assert (x162 (- x151 x97)))
(assert (x42 x7 x10 x97 x105))
(assert (x153 x147))
(assert (x181 x66 (- x10 x97)))
(assert (x70 x165))
(assert (x162 (- x105 x131)))
(assert (x71 x131 x10 x98 x135))
(assert (x42 x172 x176 x98 x135))
(assert (x42 x98 x135 x151 x179))
(assert (x162 (- x126 x135)))
(assert (x42 (x80 x45 x38) x126 x98 x135))
(assert (x71 x151 x179 x105 x97))
(assert (x70 x92))
(assert (x70 x96))
(assert (x162 (- x135 x66)))
(assert (and (and (= (* 3 (- x10 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x82 3 (- x10 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x82 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x10 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 3 (- x10 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x10 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x82 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x10) (- (* 3 x10) (* x10 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x104 3 x10) (x102 3 x10) (= (* x10 3) (x82 3 x10)) (x171 3 x10) (x103 3 x10) (x140 3 x10)))
(assert (x162 x176))
(assert (x181 x97 (- x105 x75)))
(assert (x162 (- x97 x176)))
(assert (x42 x75 x197 x135 x98))
(assert (x70 x11))
(assert (x42 x10 x172 x135 x98))
(assert (x42 x135 x98 x10 x165))
(assert (x181 x10 (- x66 x135)))
(assert (x162 (- x135 x176)))
(assert (x181 x10 (- x165 x97)))
(assert (x181 x3 (- x165 x135)))
(assert (x181 x97 (- x105 x197)))
(assert (x42 x98 x135 x179 x151))
(assert (x71 x98 x135 x179 x151))
(assert (x181 x10 (- x66 x105)))
(assert (x162 3))
(assert (x181 x10 (- x172 x105)))
(assert (x181 x10 (- x179 x105)))
(assert (x162 (- x60 x135)))
(assert (x162 (- x97 x7)))
(assert (x42 x10 x131 x97 x105))
(assert (x70 x3))
(assert (x181 x60 (- x131 x135)))
(assert (x162 (- x197 x105)))
(assert (x181 x172 (- x10 x135)))
(assert (x181 x176 (- x172 x105)))
(assert (x181 x75 (- x197 x135)))
(assert (x181 x10 x165))
(assert (x42 x97 x105 x60 x131))
(assert (x181 x98 (- x135 x172)))
(assert (x42 x135 x98 x10 x172))
(assert (x162 (- x41 x105)))
(assert (x100 x120 x88))
(assert (x162 (- x135 x126)))
(assert (x162 (- x3 x97)))
(assert (x94 x85 2))
(assert (x70 x197))
(assert (x70 x136))
(assert (x42 x98 x135 x66 x41))
(assert (x181 x172 (- x10 x105)))
(assert (x71 x97 x105 x7 x119))
(assert (x42 x165 x10 x98 x135))
(assert (x71 x135 x98 x179 x151))
(assert (x162 (- x7 x105)))
(assert (x71 x179 x10 x105 x97))
(assert (x70 x5))
(assert (x181 x10 (- x165 x135)))
(assert (x162 x151))
(assert (x42 x98 x135 x75 x197))
(assert (x70 x187))
(assert (x70 x126))
(assert (x42 x105 x97 x179 x151))
(assert (x181 x172 x176))
(assert (= x69 (and x166 (not x36))))
(assert (x71 x135 x98 x197 x75))
(assert (x181 x3 (- x165 x97)))
(assert (x71 x179 x151 x105 x97))
(assert (x181 x179 (- x151 x97)))
(assert (x42 x10 x172 x105 x97))
(assert (and (= (x82 9 9) 81) (= 9 (x82 3 3)) (= 81 (x82 27 3)) (= 27 (x82 9 3))))
(assert (x70 x163))
(assert (x42 x165 x3 x135 x98))
(assert (x71 x66 x10 x105 x97))
(assert (x70 x172))
(assert (x42 x126 (x80 x45 x38) x135 x98))
(assert (x162 (- x151 x105)))
(assert (x71 x105 x97 x10 x131))
(assert (x162 (- x75 x135)))
(assert (x181 x98 x135))
(assert (x181 x105 (- x97 x7)))
(assert (x181 x105 x97))
(assert (x71 x135 x98 x10 x165))
(assert (x42 x105 x97 x131 x10))
(assert (x42 x98 x135 x7 x119))
(assert (x42 x10 x172 x97 x105))
(assert (x162 (- x7 x135)))
(assert (x181 x3 (- x165 x98)))
(assert (x162 (- x98 (x80 x45 x38))))
(assert (x53 x120 x51))
(assert (x162 (- x97 x41)))
(assert (x181 x179 (- x10 x97)))
(assert (x42 x66 x10 x98 x135))
(assert (x71 x97 x105 x10 x165))
(assert (x42 x135 x98 x172 x10))
(assert (x181 x41 (- x66 x98)))
(assert (x162 (- x41 x97)))
(assert (x162 (- x135 x105)))
(assert (x42 x135 x98 x176 x172))
(assert (x42 x151 x179 x105 x97))
(assert (x13 x45 x38))
(assert (x71 x97 x105 x98 x135))
(assert (x162 (- x7 x97)))
(assert (x181 x66 (- x41 x135)))
(assert (x153 x189))
(assert (x42 x7 x10 x105 x97))
(assert (x71 x172 x10 x105 x97))
(assert (x42 x105 x97 (x80 x45 x38) x126))
(check-sat)
(exit)
