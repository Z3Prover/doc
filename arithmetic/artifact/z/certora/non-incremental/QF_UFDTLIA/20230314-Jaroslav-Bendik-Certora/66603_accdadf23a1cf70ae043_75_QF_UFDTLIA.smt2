(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x1923 0)) (((x3454 (x3712 Int)) (x1648 (x4634 x1923) (x3035 Int)) (x3800 (x4669 x1923) (x557 x1923) (x4690 Int)))))
(declare-fun x2782 () Int)
(declare-fun x2918 () Int)
(declare-fun x4676 () Bool)
(declare-fun x3448 () Bool)
(declare-fun x211 () Int)
(declare-fun x4101 () Bool)
(declare-fun x2623 () Bool)
(declare-fun x1645 () Bool)
(declare-fun x2085 () x1923)
(declare-fun x3117 () Bool)
(declare-fun x1808 () x1923)
(declare-fun x4287 () Bool)
(declare-fun x3251 () Bool)
(declare-fun x3310 () Bool)
(declare-fun x1038 () Int)
(declare-fun x2708 () Int)
(declare-fun x3209 () Int)
(declare-fun x378 () Int)
(declare-fun x1085 () Bool)
(declare-fun x1574 () Bool)
(declare-fun x3663 () Bool)
(declare-fun x4835 () Int)
(declare-fun x1708 () Bool)
(declare-fun x1619 () Bool)
(declare-fun x3149 () Bool)
(declare-fun x2289 () Bool)
(declare-fun x4525 () Bool)
(declare-fun x3432 () Bool)
(declare-fun x1954 () Int)
(declare-fun x1483 () x1923)
(declare-fun x3383 () x1923)
(declare-fun x4278 () Bool)
(declare-fun x3024 () Bool)
(declare-fun x2346 () Bool)
(declare-fun x367 () Bool)
(declare-fun x995 () Bool)
(declare-fun x3499 () Bool)
(declare-fun x927 () Bool)
(declare-fun x431 () Int)
(declare-fun x2953 () Bool)
(declare-fun x3261 () Bool)
(declare-fun x545 () Bool)
(declare-fun x2457 () Int)
(declare-fun x3193 () Bool)
(declare-fun x3128 () Bool)
(declare-fun x4013 () Bool)
(declare-fun x3155 () Bool)
(declare-fun x2422 () Bool)
(declare-fun x672 () x1923)
(declare-fun x3333 () Bool)
(declare-fun x1669 () Bool)
(declare-fun x4849 () Bool)
(declare-fun x1467 () Int)
(declare-fun x3257 () x1923)
(declare-fun x169 () Int)
(declare-fun x736 () Bool)
(declare-fun x3129 () Bool)
(declare-fun x879 () Bool)
(declare-fun x1774 () x1923)
(declare-fun x3679 () Int)
(declare-fun x1585 () Int)
(declare-fun x4199 (x1923) Int)
(declare-fun x4160 () Bool)
(declare-fun x1998 () Int)
(declare-fun x2903 () Int)
(declare-fun x3082 () Bool)
(declare-fun x4207 () Bool)
(declare-fun x370 () x1923)
(declare-fun x4666 () Int)
(declare-fun x4672 () Int)
(declare-fun x902 () Int)
(declare-fun x3995 () Int)
(declare-fun x562 () Int)
(declare-fun x2 () Int)
(declare-fun x2386 () Bool)
(declare-fun x54 () x1923)
(declare-fun x900 () Int)
(declare-fun x4060 (Int Int) Int)
(declare-fun x3648 () Bool)
(declare-fun x2168 () Bool)
(declare-fun x3708 () Int)
(declare-fun x713 () Bool)
(declare-fun x4702 () Bool)
(declare-fun x3495 () Bool)
(declare-fun x3883 () Bool)
(declare-fun x4104 () Bool)
(declare-fun x4075 () Bool)
(declare-fun x960 () Bool)
(declare-fun x4040 () Int)
(declare-fun x1017 () Bool)
(declare-fun x3087 (Int) Int)
(declare-fun x4540 () Bool)
(declare-fun x1879 () Bool)
(declare-fun x2374 () Int)
(declare-fun x2746 (Int) Int)
(declare-fun x962 () Int)
(declare-fun x1529 () Bool)
(declare-fun x3421 () Int)
(declare-fun x1979 () Int)
(declare-fun x4861 () Int)
(declare-fun x884 () Bool)
(declare-fun x4615 () Int)
(declare-fun x561 () Int)
(declare-fun x134 () Bool)
(declare-fun x3922 () x1923)
(declare-fun x3715 () Int)
(declare-fun x3399 () Bool)
(declare-fun x2765 () Int)
(declare-fun x1842 () Bool)
(declare-fun x3093 () Int)
(declare-fun x4369 () Bool)
(declare-fun x1743 () Int)
(declare-fun x2545 () Bool)
(declare-fun x1397 () Int)
(declare-fun x4503 () Int)
(declare-fun x1183 () x1923)
(declare-fun x4654 () Int)
(declare-fun x1755 (x1923) Int)
(declare-fun x1920 () Bool)
(declare-fun x4657 () Bool)
(declare-fun x288 () Bool)
(declare-fun x3295 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x3415 () Int)
(declare-fun x2045 () Bool)
(declare-fun x4082 () Int)
(declare-fun x4911 () Bool)
(declare-fun x4937 () x1923)
(declare-fun x2197 () Int)
(declare-fun x4473 () Bool)
(declare-fun x1972 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x3789 () Bool)
(declare-fun x4836 () Int)
(declare-fun x903 () Bool)
(declare-fun x1023 () Int)
(declare-fun x3855 () Int)
(declare-fun x741 () Bool)
(declare-fun x3107 () Bool)
(declare-fun x2598 () Bool)
(declare-fun x234 () Int)
(declare-fun x2277 () Bool)
(declare-fun x4727 () Bool)
(declare-fun x3013 () Int)
(declare-fun x4806 (x1923) Int)
(declare-fun x771 () Int)
(declare-fun x532 () Bool)
(declare-fun x710 () Bool)
(declare-fun x459 () Bool)
(declare-fun x1551 () Bool)
(declare-fun x102 () Bool)
(declare-fun x4921 () Int)
(declare-fun x2086 () Int)
(declare-fun x4886 () Int)
(declare-fun x1969 () Int)
(declare-fun x3538 () Int)
(declare-fun x795 () x1923)
(declare-fun x1152 () Bool)
(declare-fun x3201 () Bool)
(declare-fun x389 () Int)
(declare-fun x468 () Int)
(declare-fun x1102 () Int)
(declare-fun x3464 () x1923)
(declare-fun x961 () Int)
(declare-fun x3378 () Bool)
(declare-fun x1757 () Int)
(declare-fun x2766 () Int)
(declare-fun x1561 () Int)
(declare-fun x4481 () Int)
(declare-fun x2357 () Bool)
(declare-fun x2891 () Int)
(declare-fun x1253 () Int)
(declare-fun x2126 () Int)
(declare-fun x4930 () Bool)
(declare-fun x2539 () Int)
(declare-fun x3504 () Int)
(declare-fun x1801 () Int)
(declare-fun x596 () Int)
(declare-fun x1087 () Int)
(declare-fun x2552 () Int)
(declare-fun x105 () x1923)
(declare-fun x4133 () Bool)
(declare-fun x3858 () x1923)
(declare-fun x4436 () Int)
(declare-fun x2162 () Bool)
(declare-fun x4627 () Bool)
(declare-fun x1203 () Int)
(declare-fun x412 () x1923)
(declare-fun x4827 () x1923)
(declare-fun x1438 () Bool)
(declare-fun x1627 () Bool)
(declare-fun x3914 () Bool)
(declare-fun x2821 () Bool)
(declare-fun x3163 (x1923) Int)
(declare-fun x998 () Int)
(declare-fun x2840 () Int)
(declare-fun x3802 () Bool)
(declare-fun x4786 () Bool)
(declare-fun x683 () Bool)
(declare-fun x1715 () Bool)
(declare-fun x444 () Bool)
(declare-fun x1976 () Int)
(declare-fun x513 () Bool)
(declare-fun x302 () Bool)
(declare-fun x3602 () Int)
(declare-fun x1952 () Bool)
(declare-fun x970 () Bool)
(declare-fun x55 () Bool)
(declare-fun x4552 () Int)
(declare-fun x2823 () Bool)
(declare-fun x460 () Int)
(declare-fun x4543 () Bool)
(declare-fun x652 () Bool)
(declare-fun x3609 () Bool)
(declare-fun x1576 () Int)
(declare-fun x1612 () Bool)
(declare-fun x2001 () Int)
(declare-fun x2814 () Int)
(declare-fun x1974 () Int)
(declare-fun x1501 () Bool)
(declare-fun x4202 () Int)
(declare-fun x4859 () Int)
(declare-fun x2674 () Bool)
(declare-fun x2462 () Int)
(declare-fun x3287 () x1923)
(declare-fun x1704 () Bool)
(declare-fun x2174 () Int)
(declare-fun x448 () Int)
(declare-fun x3720 () Int)
(declare-fun x3008 () Bool)
(declare-fun x2404 () Bool)
(declare-fun x142 () Bool)
(declare-fun x471 () Bool)
(declare-fun x2017 () Int)
(declare-fun x3375 () x1923)
(declare-fun x1326 () Bool)
(declare-fun x4754 () Bool)
(declare-fun x2223 () Int)
(declare-fun x365 () Bool)
(declare-fun x4942 () Bool)
(declare-fun x3245 () x1923)
(declare-fun x2290 () Int)
(declare-fun x4781 () Int)
(declare-fun x2006 () Int)
(declare-fun x2727 () Int)
(declare-fun x3829 () Bool)
(declare-fun x774 () Int)
(declare-fun x3756 () x1923)
(declare-fun x1258 () Int)
(declare-fun x1846 () x1923)
(declare-fun x498 () Bool)
(declare-fun x1522 () Bool)
(declare-fun x2198 () Int)
(declare-fun x3039 () Int)
(declare-fun x3498 () Bool)
(declare-fun x4317 () Int)
(declare-fun x2235 () Bool)
(declare-fun x339 () Int)
(declare-fun x4882 () Int)
(declare-fun x1151 () Int)
(declare-fun x3798 () Int)
(declare-fun x519 () Bool)
(declare-fun x4800 () Bool)
(declare-fun x854 () Bool)
(declare-fun x2488 () Bool)
(declare-fun x7 () Bool)
(declare-fun x3680 () Bool)
(declare-fun x1281 () x1923)
(declare-fun x2118 () Int)
(declare-fun x3300 () x1923)
(declare-fun x863 () Bool)
(declare-fun x2906 () Int)
(declare-fun x1208 () Bool)
(declare-fun x3834 () Bool)
(declare-fun x4745 () Bool)
(declare-fun x1477 () Int)
(declare-fun x3583 () Int)
(declare-fun x4752 () Bool)
(declare-fun x3662 () Int)
(declare-fun x4734 () x1923)
(declare-fun x4601 () x1923)
(declare-fun x4003 () x1923)
(declare-fun x1358 () Bool)
(declare-fun x1628 () x1923)
(declare-fun x4234 () Bool)
(declare-fun x3175 () Int)
(declare-fun x3587 () Int)
(declare-fun x577 () Bool)
(declare-fun x2921 () x1923)
(declare-fun x4778 () Int)
(declare-fun x3270 () Bool)
(declare-fun x3667 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x2567 () Bool)
(declare-fun x550 () Bool)
(declare-fun x447 () Int)
(declare-fun x1325 () Bool)
(declare-fun x4266 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x2145 () Int)
(declare-fun x4638 () Bool)
(declare-fun x4087 () Int)
(declare-fun x2414 () x1923)
(declare-fun x575 () Bool)
(declare-fun x2557 () Int)
(declare-fun x4875 () Bool)
(declare-fun x578 () Bool)
(declare-fun x4833 () Int)
(declare-fun x4004 () Int)
(declare-fun x2737 () Bool)
(declare-fun x1098 () Int)
(declare-fun x712 () Int)
(declare-fun x4023 () x1923)
(declare-fun x3959 () Bool)
(declare-fun x4801 () Int)
(declare-fun x2948 () Int)
(declare-fun x3560 () Int)
(declare-fun x3801 () Bool)
(declare-fun x1575 () Int)
(declare-fun x248 () Bool)
(declare-fun x1678 () Int)
(declare-fun x2064 () x1923)
(declare-fun x2671 () Int)
(declare-fun x821 () Bool)
(declare-fun x3016 () Int)
(declare-fun x1537 () Int)
(declare-fun x402 () Bool)
(declare-fun x2530 () Bool)
(declare-fun x1855 () Bool)
(declare-fun x4678 () Bool)
(declare-fun x4215 () x1923)
(declare-fun x3558 () Bool)
(declare-fun x4659 () Int)
(declare-fun x3772 () Bool)
(declare-fun x3430 () Bool)
(declare-fun x1598 () Bool)
(declare-fun x969 () Int)
(declare-fun x4586 () Int)
(declare-fun x4646 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x400 () Int)
(declare-fun x3547 () Bool)
(declare-fun x564 () Bool)
(declare-fun x2069 () x1923)
(declare-fun x1803 () Bool)
(declare-fun x2072 () Bool)
(declare-fun x2786 () Bool)
(declare-fun x2340 () Int)
(declare-fun x68 () Int)
(declare-fun x197 (x1923) Int)
(declare-fun x570 () Bool)
(declare-fun x1832 () Bool)
(declare-fun x3843 () Bool)
(declare-fun x4572 () Bool)
(declare-fun x310 () Int)
(declare-fun x4472 () Int)
(declare-fun x3975 () Int)
(declare-fun x3299 () Bool)
(declare-fun x4946 () Bool)
(declare-fun x2758 () Int)
(declare-fun x2569 () Bool)
(declare-fun x831 () Bool)
(declare-fun x313 () Int)
(declare-fun x3617 (x1923) Int)
(declare-fun x2923 () Bool)
(declare-fun x2226 () Int)
(declare-fun x2280 () Bool)
(declare-fun x4747 () Int)
(declare-fun x632 () Int)
(declare-fun x3869 () Bool)
(declare-fun x3390 () Int)
(declare-fun x3468 () Bool)
(declare-fun x2160 () Int)
(declare-fun x2680 () Bool)
(declare-fun x856 () Bool)
(declare-fun x1487 () Bool)
(declare-fun x4851 () Int)
(declare-fun x694 () Int)
(declare-fun x1510 () Int)
(declare-fun x2189 () Int)
(declare-fun x4947 () Int)
(declare-fun x4624 () Int)
(declare-fun x2614 () Bool)
(declare-fun x213 () Int)
(declare-fun x3208 () Bool)
(declare-fun x2503 () Bool)
(declare-fun x3633 () Bool)
(declare-fun x3652 () Bool)
(declare-fun x2103 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x2013 () Bool)
(declare-fun x882 () Bool)
(declare-fun x3109 () Int)
(declare-fun x57 () x1923)
(declare-fun x1470 () Int)
(declare-fun x4774 () Bool)
(declare-fun x1128 () Int)
(declare-fun x3298 () Int)
(declare-fun x1839 () Bool)
(declare-fun x3420 () x1923)
(declare-fun x4682 () Int)
(declare-fun x415 () Bool)
(declare-fun x1908 () Bool)
(declare-fun x1992 () Bool)
(declare-fun x3120 () x1923)
(declare-fun x463 () Int)
(declare-fun x317 () Int)
(declare-fun x2110 () Bool)
(declare-fun x2295 () Bool)
(declare-fun x4059 () Bool)
(declare-fun x394 () Bool)
(declare-fun x2025 () Bool)
(declare-fun x2728 () Int)
(declare-fun x1638 () Int)
(declare-fun x515 () Int)
(declare-fun x3475 () Int)
(declare-fun x1752 () Bool)
(declare-fun x2236 () Bool)
(declare-fun x4670 () Bool)
(declare-fun x3944 () Bool)
(declare-fun x3690 () Bool)
(declare-fun x592 () Int)
(declare-fun x2399 () Int)
(declare-fun x3451 () Bool)
(declare-fun x2161 () Bool)
(declare-fun x2311 () Bool)
(declare-fun x3331 () Int)
(declare-fun x4427 () x1923)
(declare-fun x3754 () Bool)
(declare-fun x2756 () Int)
(declare-fun x4162 () Bool)
(declare-fun x2274 () Int)
(declare-fun x2138 () Int)
(declare-fun x2285 () Bool)
(declare-fun x3356 () Bool)
(declare-fun x4538 () Bool)
(declare-fun x2378 () x1923)
(declare-fun x4005 () Int)
(declare-fun x1917 () Int)
(declare-fun x1675 () Int)
(declare-fun x458 () Int)
(declare-fun x2215 () Bool)
(declare-fun x1058 () Int)
(declare-fun x3182 () Int)
(declare-fun x3530 () Bool)
(declare-fun x3784 () Bool)
(declare-fun x2975 () Bool)
(declare-fun x3796 () Int)
(declare-fun x500 () Bool)
(declare-fun x2584 () Int)
(declare-fun x1163 () Int)
(declare-fun x2019 () x1923)
(declare-fun x314 () Bool)
(declare-fun x1244 (Int) Int)
(declare-fun x4863 () Int)
(declare-fun x679 () Bool)
(declare-fun x4176 () Bool)
(declare-fun x1914 () Bool)
(declare-fun x4346 () Int)
(declare-fun x3956 () Int)
(declare-fun x2244 () Bool)
(declare-fun x2188 () Int)
(declare-fun x4944 () Bool)
(declare-fun x1201 () Int)
(declare-fun x4636 () Int)
(declare-fun x746 () Int)
(declare-fun x4478 () Bool)
(declare-fun x587 () Bool)
(declare-fun x1349 () Int)
(declare-fun x2941 () Int)
(declare-fun x4050 () Int)
(declare-fun x1480 () Bool)
(declare-fun x3118 () Int)
(declare-fun x1009 () Int)
(declare-fun x972 () Bool)
(declare-fun x4584 () Bool)
(declare-fun x15 () x1923)
(declare-fun x4178 () Int)
(declare-fun x887 () Bool)
(declare-fun x3493 () Bool)
(declare-fun x1652 () Int)
(declare-fun x1589 () Bool)
(declare-fun x3598 () Int)
(declare-fun x1236 () x1923)
(declare-fun x2448 () Bool)
(declare-fun x2153 () Bool)
(declare-fun x10 () Int)
(declare-fun x2206 () Int)
(declare-fun x3661 () Int)
(declare-fun x2224 () Bool)
(declare-fun x4590 () Bool)
(declare-fun x2266 () Bool)
(declare-fun x4033 () Bool)
(declare-fun x2048 () Bool)
(declare-fun x203 () Int)
(declare-fun x2910 () Bool)
(declare-fun x4192 () Int)
(declare-fun x2970 (x1923) Int)
(declare-fun x1350 () Int)
(declare-fun x476 () Bool)
(declare-fun x4845 () Int)
(declare-fun x4578 () Int)
(declare-fun x1370 () Bool)
(declare-fun x2504 () Int)
(declare-fun x1623 () Int)
(declare-fun x3436 () Bool)
(declare-fun x3550 () Bool)
(declare-fun x3938 () Int)
(declare-fun x3625 () x1923)
(declare-fun x1240 () Int)
(declare-fun x4649 () x1923)
(declare-fun x2646 () x1923)
(declare-fun x3659 () x1923)
(declare-fun x4314 () x1923)
(declare-fun x61 () Int)
(declare-fun x185 (x1923) Int)
(declare-fun x4024 () Int)
(declare-fun x3778 () Int)
(declare-fun x1490 () Int)
(declare-fun x3507 () Bool)
(declare-fun x1396 () Bool)
(declare-fun x2867 () x1923)
(declare-fun x1799 () Int)
(declare-fun x4388 () Int)
(declare-fun x1672 () Bool)
(declare-fun x2418 () Int)
(declare-fun x1613 () Bool)
(declare-fun x3576 () Bool)
(declare-fun x1748 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x363 () Bool)
(declare-fun x429 () Bool)
(declare-fun x3505 () Bool)
(declare-fun x2977 () Bool)
(declare-fun x1989 () Bool)
(declare-fun x3217 () Bool)
(declare-fun x1903 () Bool)
(declare-fun x4455 () Int)
(declare-fun x826 () Bool)
(declare-fun x2114 () Bool)
(declare-fun x1314 () Bool)
(declare-fun x2723 () Int)
(declare-fun x1220 () Int)
(declare-fun x4177 () Bool)
(declare-fun x3698 () Bool)
(declare-fun x2066 (x1923) Int)
(declare-fun x3839 () Bool)
(declare-fun x4430 () Int)
(declare-fun x4137 () Bool)
(declare-fun x781 () Int)
(declare-fun x4398 () Int)
(declare-fun x1711 () Bool)
(declare-fun x4392 () Bool)
(declare-fun x4714 () Bool)
(declare-fun x101 () Int)
(declare-fun x755 () Bool)
(declare-fun x3309 () Int)
(declare-fun x35 () x1923)
(declare-fun x3453 () x1923)
(declare-fun x2495 () Bool)
(declare-fun x4509 () Bool)
(declare-fun x342 () Int)
(declare-fun x4253 () Int)
(declare-fun x3318 () Bool)
(declare-fun x4283 () Bool)
(declare-fun x2815 () Int)
(declare-fun x4846 () Int)
(declare-fun x1587 () Bool)
(declare-fun x3196 () Int)
(declare-fun x1600 () Bool)
(declare-fun x4211 () Int)
(declare-fun x613 () Bool)
(declare-fun x379 () Bool)
(declare-fun x3940 () Bool)
(declare-fun x770 () Bool)
(declare-fun x4 () Bool)
(declare-fun x4879 () Bool)
(declare-fun x4292 () Int)
(declare-fun x2901 () Bool)
(declare-fun x1886 () x1923)
(declare-fun x4221 () Int)
(declare-fun x2324 () Bool)
(declare-fun x1665 () Bool)
(declare-fun x4047 () Bool)
(declare-fun x2326 () Bool)
(declare-fun x2706 () Bool)
(declare-fun x278 () Bool)
(declare-fun x171 () Int)
(declare-fun x2653 () Int)
(declare-fun x1469 () x1923)
(declare-fun x4783 () Int)
(declare-fun x761 () Int)
(declare-fun x1701 () Int)
(declare-fun x4599 () x1923)
(declare-fun x2167 () Bool)
(declare-fun x2640 () Bool)
(declare-fun x2927 () Bool)
(declare-fun x3126 () Bool)
(declare-fun x2817 () Bool)
(declare-fun x3514 () Int)
(declare-fun x3743 () Bool)
(declare-fun x4905 () Bool)
(declare-fun x2751 () Bool)
(declare-fun x1217 () Int)
(declare-fun x3456 () x1923)
(declare-fun x2062 () Bool)
(declare-fun x1304 () Bool)
(declare-fun x163 () Int)
(declare-fun x2211 () Bool)
(declare-fun x1560 () Int)
(declare-fun x1241 () Int)
(declare-fun x893 () Bool)
(declare-fun x1773 () Bool)
(declare-fun x4855 () Bool)
(declare-fun x4361 () Bool)
(declare-fun x2463 () x1923)
(declare-fun x1330 () Int)
(declare-fun x3043 () Int)
(declare-fun x3168 () Int)
(declare-fun x85 () Int)
(declare-fun x4871 () Bool)
(declare-fun x836 () Int)
(declare-fun x1042 () Int)
(declare-fun x2446 () Int)
(declare-fun x418 () Int)
(declare-fun x2356 () Int)
(declare-fun x4652 () Bool)
(declare-fun x846 () Int)
(declare-fun x30 () Bool)
(declare-fun x3518 () Bool)
(declare-fun x1730 () Bool)
(declare-fun x4823 () Bool)
(declare-fun x2651 () Bool)
(declare-fun x2739 () Int)
(declare-fun x439 () Int)
(declare-fun x4607 () Bool)
(declare-fun x782 () Int)
(declare-fun x244 () Int)
(declare-fun x2137 () Int)
(declare-fun x3238 () Bool)
(declare-fun x4362 () Bool)
(declare-fun x2667 () Bool)
(declare-fun x1626 () Int)
(declare-fun x454 () Int)
(declare-fun x832 () Int)
(declare-fun x277 () Bool)
(declare-fun x2827 () Int)
(declare-fun x4423 () Int)
(declare-fun x851 () x1923)
(declare-fun x2922 () Bool)
(declare-fun x2961 () x1923)
(declare-fun x3171 () Int)
(declare-fun x4608 () Int)
(declare-fun x607 (Int) Int)
(declare-fun x3552 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x344 () Bool)
(declare-fun x559 () Bool)
(declare-fun x724 () Int)
(declare-fun x2379 () Int)
(declare-fun x647 () x1923)
(declare-fun x3601 () Bool)
(declare-fun x2149 () Int)
(declare-fun x3211 () Bool)
(declare-fun x1046 () Int)
(declare-fun x1667 () Bool)
(declare-fun x3058 () Int)
(declare-fun x655 () Int)
(declare-fun x3578 () Int)
(declare-fun x813 () Int)
(declare-fun x1833 () Int)
(declare-fun x3194 () Bool)
(declare-fun x4089 () Int)
(declare-fun x4391 () x1923)
(declare-fun x1035 () x1923)
(declare-fun x4797 () Bool)
(declare-fun x3657 () Int)
(declare-fun x576 () Int)
(declare-fun x4555 () Int)
(declare-fun x2128 () Int)
(declare-fun x739 () Bool)
(declare-fun x721 () Int)
(declare-fun x4809 () Bool)
(declare-fun x53 () x1923)
(declare-fun x1333 () Bool)
(declare-fun x865 () Bool)
(declare-fun x3167 () Bool)
(declare-fun x3986 () Bool)
(declare-fun x2560 () Bool)
(declare-fun x4885 () Bool)
(declare-fun x841 () Int)
(declare-fun x2736 () Int)
(declare-fun x737 () Bool)
(declare-fun x1000 () Bool)
(declare-fun x2261 () Int)
(declare-fun x1967 () Bool)
(declare-fun x1216 () x1923)
(declare-fun x2409 () Int)
(declare-fun x1805 () Int)
(declare-fun x4541 () Int)
(declare-fun x584 () Int)
(declare-fun x2202 () Bool)
(declare-fun x556 () Int)
(declare-fun x2725 () Int)
(declare-fun x2350 () Int)
(declare-fun x2204 () Int)
(declare-fun x3349 () Int)
(declare-fun x70 () Bool)
(declare-fun x410 () Bool)
(declare-fun x3434 () Int)
(declare-fun x3605 () Bool)
(declare-fun x4516 () Bool)
(declare-fun x2420 () Bool)
(declare-fun x2482 () Int)
(declare-fun x1401 (x1923) Int)
(declare-fun x2802 () Bool)
(declare-fun x2395 () Int)
(declare-fun x2451 () Bool)
(declare-fun x2663 () Bool)
(declare-fun x187 () Bool)
(declare-fun x2896 () Bool)
(declare-fun x1225 () Bool)
(declare-fun x2773 () Int)
(declare-fun x1896 () Int)
(declare-fun x4632 () Int)
(declare-fun x3357 () Int)
(declare-fun x2591 () Int)
(declare-fun x63 () Int)
(declare-fun x265 () Int)
(declare-fun x1895 () Int)
(declare-fun x1235 () Int)
(declare-fun x4784 () Bool)
(declare-fun x4910 () Bool)
(declare-fun x326 () Int)
(declare-fun x3988 () Bool)
(declare-fun x4079 () Int)
(declare-fun x976 () Bool)
(declare-fun x3840 () Bool)
(declare-fun x2303 () Int)
(declare-fun x637 (Int) Int)
(declare-fun x1336 () Bool)
(declare-fun x4884 () Int)
(declare-fun x2454 () Int)
(declare-fun x451 () Int)
(declare-fun x83 () Bool)
(declare-fun x405 () Int)
(declare-fun x2979 () x1923)
(declare-fun x3651 () Bool)
(declare-fun x1735 () Int)
(declare-fun x3088 () Bool)
(declare-fun x2470 () Int)
(declare-fun x1494 () Bool)
(declare-fun x1356 () Bool)
(declare-fun x2874 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x4662 () x1923)
(declare-fun x766 () Int)
(declare-fun x1732 () Bool)
(declare-fun x3187 () Int)
(declare-fun x108 () Bool)
(declare-fun x76 () Int)
(declare-fun x176 () Int)
(declare-fun x4698 (Int) Int)
(declare-fun x2123 () Bool)
(declare-fun x3424 () Int)
(declare-fun x4120 () Int)
(declare-fun x2141 () Bool)
(declare-fun x1251 () x1923)
(declare-fun x2914 () Bool)
(declare-fun x2669 () Int)
(declare-fun x1829 () Int)
(declare-fun x609 () Int)
(declare-fun x1746 () Int)
(declare-fun x981 () Int)
(declare-fun x2088 () Int)
(declare-fun x4335 () Bool)
(declare-fun x2735 () Bool)
(declare-fun x3275 () x1923)
(declare-fun x518 () Bool)
(declare-fun x4841 () Bool)
(declare-fun x725 () Bool)
(declare-fun x669 () Bool)
(declare-fun x3210 () Bool)
(declare-fun x401 () Int)
(declare-fun x3496 () Int)
(declare-fun x2373 () Bool)
(declare-fun x853 () Int)
(declare-fun x90 () x1923)
(declare-fun x864 () Int)
(declare-fun x3837 () Bool)
(declare-fun x4490 () Bool)
(declare-fun x4620 () Bool)
(declare-fun x4329 () Bool)
(declare-fun x1572 () Int)
(declare-fun x930 () Bool)
(declare-fun x4123 () x1923)
(declare-fun x1684 () Bool)
(declare-fun x4895 () Bool)
(declare-fun x2991 () Int)
(declare-fun x3608 () Int)
(declare-fun x4261 () Int)
(declare-fun x3463 () Int)
(declare-fun x1496 () Bool)
(declare-fun x2790 () Bool)
(declare-fun x4389 () Int)
(declare-fun x1753 () Bool)
(declare-fun x4105 () Bool)
(declare-fun x514 () Bool)
(declare-fun x2592 () Int)
(declare-fun x2860 () Int)
(declare-fun x1794 () Int)
(declare-fun x3926 () x1923)
(declare-fun x2176 () Int)
(declare-fun x4420 () Bool)
(declare-fun x4545 () Int)
(declare-fun x4172 () Int)
(declare-fun x2839 () Int)
(declare-fun x4042 () Bool)
(declare-fun x4740 () Bool)
(declare-fun x1884 () Int)
(declare-fun x4156 () Int)
(declare-fun x3215 () Bool)
(declare-fun x2769 () Int)
(declare-fun x443 () Bool)
(declare-fun x3561 () x1923)
(declare-fun x3859 () Int)
(declare-fun x1911 () Int)
(declare-fun x803 () Bool)
(declare-fun x3665 () Bool)
(declare-fun x899 () Bool)
(declare-fun x4587 () Int)
(declare-fun x2644 () Int)
(declare-fun x1603 () Int)
(declare-fun x788 () Bool)
(declare-fun x2793 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x4810 () Bool)
(declare-fun x3015 () Bool)
(declare-fun x336 () Bool)
(declare-fun x3276 () Int)
(declare-fun x4650 () Bool)
(declare-fun x3700 () Int)
(declare-fun x3765 () Bool)
(declare-fun x3324 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x3146 () x1923)
(declare-fun x3136 () Bool)
(declare-fun x4706 () Int)
(declare-fun x3027 () Bool)
(declare-fun x99 () Bool)
(declare-fun x22 () Bool)
(declare-fun x1458 () Bool)
(declare-fun x4022 () Int)
(declare-fun x4151 () Int)
(declare-fun x3483 () Bool)
(declare-fun x3559 () Int)
(declare-fun x2956 () Bool)
(declare-fun x4722 () Bool)
(declare-fun x3394 () x1923)
(declare-fun x1162 () Bool)
(declare-fun x1867 () Int)
(declare-fun x2412 () x1923)
(declare-fun x207 () Int)
(declare-fun x1873 () Int)
(declare-fun x1821 () Int)
(declare-fun x2429 () Bool)
(declare-fun x3863 () Bool)
(declare-fun x973 () Int)
(declare-fun x3877 () Bool)
(declare-fun x2057 () Bool)
(declare-fun x1421 () x1923)
(declare-fun x3527 () Bool)
(declare-fun x166 () Int)
(declare-fun x1607 () Int)
(declare-fun x4692 () Int)
(declare-fun x611 () Bool)
(declare-fun x2969 () Bool)
(declare-fun x2729 () Bool)
(declare-fun x819 () Int)
(declare-fun x3374 () Int)
(declare-fun x258 () Bool)
(declare-fun x871 () Int)
(declare-fun x4418 () Bool)
(declare-fun x2984 () Int)
(declare-fun x1670 () Bool)
(declare-fun x3575 () Bool)
(declare-fun x4761 () Bool)
(declare-fun x1207 () Int)
(declare-fun x4184 () Int)
(declare-fun x3407 () Int)
(declare-fun x3294 () Int)
(declare-fun x889 () Int)
(declare-fun x3822 () Int)
(declare-fun x1147 () Bool)
(declare-fun x2803 () Int)
(declare-fun x2963 () Bool)
(declare-fun x3875 () Bool)
(declare-fun x3329 () Bool)
(declare-fun x4393 () Int)
(declare-fun x1329 () x1923)
(declare-fun x1898 () Bool)
(declare-fun x4575 () Bool)
(declare-fun x3115 () Int)
(declare-fun x2599 () Int)
(declare-fun x4658 () Bool)
(declare-fun x4653 () Bool)
(declare-fun x4333 () Bool)
(declare-fun x4896 () Int)
(declare-fun x4750 () Int)
(declare-fun x758 () Int)
(declare-fun x2661 () Bool)
(declare-fun x4616 () Bool)
(declare-fun x1088 () x1923)
(declare-fun x272 () Int)
(declare-fun x1599 () Int)
(declare-fun x1656 () Bool)
(declare-fun x3919 () Bool)
(declare-fun x1169 () Int)
(declare-fun x4804 () Bool)
(declare-fun x1657 () Bool)
(declare-fun x507 () x1923)
(declare-fun x1291 () Bool)
(declare-fun x106 () Int)
(declare-fun x4854 () Int)
(declare-fun x270 () x1923)
(declare-fun x615 () Int)
(declare-fun x3639 () Int)
(declare-fun x2801 () Int)
(declare-fun x2883 () Bool)
(declare-fun x44 () Bool)
(declare-fun x1848 () Bool)
(declare-fun x4906 () Bool)
(declare-fun x716 () Bool)
(declare-fun x2540 () Bool)
(declare-fun x3281 () x1923)
(declare-fun x971 () Bool)
(declare-fun x1719 () Bool)
(declare-fun x1118 () Bool)
(declare-fun x1518 () Bool)
(declare-fun x3289 () Int)
(declare-fun x2703 () x1923)
(declare-fun x4928 () Bool)
(declare-fun x4468 () Bool)
(declare-fun x78 () Bool)
(declare-fun x3594 () Int)
(declare-fun x3228 () Int)
(declare-fun x2515 () Int)
(declare-fun x931 () Bool)
(declare-fun x238 () Int)
(declare-fun x1782 () Bool)
(declare-fun x2183 () Bool)
(declare-fun x4142 () Bool)
(declare-fun x4560 () Bool)
(declare-fun x3359 () Bool)
(declare-fun x2257 () Bool)
(declare-fun x2220 () Bool)
(declare-fun x4673 () Bool)
(declare-fun x1882 () Int)
(declare-fun x2398 () Bool)
(declare-fun x4457 () Bool)
(declare-fun x2437 (x1923) Int)
(declare-fun x2549 () x1923)
(declare-fun x1318 () x1923)
(declare-fun x3921 () Bool)
(declare-fun x951 () Int)
(declare-fun x3928 () Int)
(declare-fun x4128 () Bool)
(declare-fun x1963 () Int)
(declare-fun x604 () Int)
(declare-fun x827 () x1923)
(declare-fun x3403 (Int) Int)
(declare-fun x1388 () Bool)
(declare-fun x3806 () Bool)
(declare-fun x3734 () Bool)
(declare-fun x3480 () Int)
(declare-fun x4145 () Int)
(declare-fun x2913 () Int)
(declare-fun x4595 () Int)
(declare-fun x1267 () Bool)
(declare-fun x2107 () Int)
(declare-fun x554 () Int)
(declare-fun x4135 () x1923)
(declare-fun x3381 () x1923)
(declare-fun x1018 () x1923)
(declare-fun x2832 () x1923)
(declare-fun x3014 () Int)
(declare-fun x322 () Bool)
(declare-fun x2242 () Int)
(declare-fun x4273 () Int)
(declare-fun x4228 () Bool)
(declare-fun x2717 () Bool)
(declare-fun x1233 () x1923)
(declare-fun x3292 () Bool)
(declare-fun x3791 () Bool)
(declare-fun x3607 () Bool)
(declare-fun x4132 () Bool)
(declare-fun x1779 () Bool)
(declare-fun x3618 () Int)
(declare-fun x4036 () Bool)
(declare-fun x2499 () Int)
(declare-fun x2233 () Int)
(declare-fun x555 () Int)
(declare-fun x143 () Int)
(declare-fun x3884 () x1923)
(declare-fun x3779 () Bool)
(declare-fun x2613 () Int)
(declare-fun x704 () Int)
(declare-fun x2216 () Int)
(declare-fun x1389 () Int)
(declare-fun x3915 () Int)
(declare-fun x1770 () Bool)
(declare-fun x2105 () Int)
(declare-fun x3065 () Int)
(declare-fun x4006 () x1923)
(declare-fun x1745 () x1923)
(declare-fun x2916 () Bool)
(declare-fun x4353 () Bool)
(declare-fun x1787 () Bool)
(declare-fun x2489 () x1923)
(declare-fun x3290 () Bool)
(declare-fun x2875 () Bool)
(declare-fun x3104 () Bool)
(declare-fun x4677 () Bool)
(declare-fun x4359 () Bool)
(declare-fun x4181 () x1923)
(declare-fun x663 () Bool)
(declare-fun x614 () Bool)
(declare-fun x1175 () Bool)
(declare-fun x4054 () Int)
(declare-fun x140 () Int)
(declare-fun x2050 () Int)
(declare-fun x1100 () Bool)
(declare-fun x3780 () Int)
(declare-fun x4588 () Bool)
(declare-fun x40 () Bool)
(declare-fun x4864 () x1923)
(declare-fun x4705 () Bool)
(declare-fun x406 () Int)
(declare-fun x2031 () Bool)
(declare-fun x3987 (Int) Int)
(declare-fun x2604 () Bool)
(declare-fun x3145 () Bool)
(declare-fun x3226 () Bool)
(declare-fun x2081 () Bool)
(declare-fun x2351 () x1923)
(declare-fun x2304 () x1923)
(declare-fun x4564 () Int)
(declare-fun x350 () Bool)
(declare-fun x3738 () Int)
(declare-fun x4589 () Int)
(declare-fun x4708 () Bool)
(declare-fun x1153 () Bool)
(declare-fun x2008 () Bool)
(declare-fun x4081 () Int)
(declare-fun x1592 () Int)
(declare-fun x2990 () Int)
(declare-fun x3549 () Bool)
(declare-fun x4919 (Int) Int)
(declare-fun x3485 () Int)
(declare-fun x3678 () Bool)
(declare-fun x1453 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x3856 () Int)
(declare-fun x1666 () Bool)
(declare-fun x4343 () Bool)
(declare-fun x2799 () Int)
(declare-fun x1473 () Int)
(declare-fun x3534 () Bool)
(declare-fun x913 () Bool)
(declare-fun x3709 () Int)
(declare-fun x1376 () Bool)
(declare-fun x4413 () Int)
(declare-fun x4281 () Int)
(declare-fun x4029 () Bool)
(declare-fun x1056 () Int)
(declare-fun x4773 () Int)
(declare-fun x4716 () Bool)
(declare-fun x1927 () Bool)
(declare-fun x847 () Bool)
(declare-fun x1303 () Int)
(declare-fun x1840 () Int)
(declare-fun x4092 () Int)
(declare-fun x2816 () Bool)
(declare-fun x2099 () Bool)
(declare-fun x1165 () Bool)
(declare-fun x4466 () Int)
(declare-fun x3003 () Bool)
(declare-fun x331 () Bool)
(declare-fun x1722 () Bool)
(declare-fun x4603 () Int)
(declare-fun x1302 () Bool)
(declare-fun x1319 () Int)
(declare-fun x729 () Bool)
(declare-fun x2692 () Bool)
(declare-fun x773 () x1923)
(declare-fun x4325 () Int)
(declare-fun x516 () Bool)
(declare-fun x3721 () Bool)
(declare-fun x1823 () Int)
(declare-fun x442 () Int)
(declare-fun x1441 () x1923)
(declare-fun x230 () Bool)
(declare-fun x1031 () Int)
(declare-fun x1285 () Int)
(declare-fun x2806 () Int)
(declare-fun x3148 () x1923)
(declare-fun x1126 () Int)
(declare-fun x4224 () Int)
(declare-fun x1172 () Int)
(declare-fun x1977 () Bool)
(declare-fun x110 () Bool)
(declare-fun x2434 () Bool)
(declare-fun x2880 () Int)
(declare-fun x3974 () Bool)
(declare-fun x1375 () Int)
(declare-fun x907 () x1923)
(declare-fun x3364 () Int)
(declare-fun x1166 () Int)
(declare-fun x4037 () x1923)
(declare-fun x1778 () Int)
(declare-fun x1625 () Bool)
(declare-fun x2423 () Int)
(declare-fun x2397 () Int)
(declare-fun x886 () Bool)
(declare-fun x2385 () Bool)
(declare-fun x2127 () Int)
(declare-fun x1966 () Int)
(declare-fun x2633 () Bool)
(declare-fun x502 () Int)
(declare-fun x4256 () Int)
(declare-fun x93 () Int)
(declare-fun x918 () Bool)
(declare-fun x1447 () Int)
(declare-fun x330 () Int)
(declare-fun x425 () x1923)
(declare-fun x2194 () Int)
(declare-fun x4493 () Bool)
(declare-fun x728 () Bool)
(declare-fun x4114 () Int)
(declare-fun x742 () Bool)
(declare-fun x409 () Int)
(declare-fun x2299 () Int)
(declare-fun x4365 () Bool)
(declare-fun x3235 () Int)
(declare-fun x1242 () Bool)
(declare-fun x4356 () Bool)
(declare-fun x3895 () Int)
(declare-fun x356 () Bool)
(declare-fun x551 () Bool)
(declare-fun x4612 () x1923)
(declare-fun x804 () Bool)
(declare-fun x2491 () Bool)
(declare-fun x2659 () x1923)
(declare-fun x2558 () Int)
(declare-fun x4728 (Int Int) Int)
(declare-fun x4753 () Bool)
(declare-fun x4336 () Bool)
(declare-fun x4622 () Bool)
(declare-fun x3669 () Bool)
(declare-fun x1449 () Int)
(declare-fun x2714 () Bool)
(declare-fun x3489 () Bool)
(declare-fun x1337 () Int)
(declare-fun x4395 () Int)
(declare-fun x4411 () x1923)
(declare-fun x1995 () Bool)
(declare-fun x1836 () Int)
(declare-fun x2058 () Bool)
(declare-fun x3060 () Int)
(declare-fun x2074 () Int)
(declare-fun x1962 () x1923)
(declare-fun x3813 () x1923)
(declare-fun x4737 () Int)
(declare-fun x4375 () Bool)
(declare-fun x1796 () x1923)
(declare-fun x4405 () Int)
(declare-fun x1751 () Int)
(declare-fun x2209 () Bool)
(declare-fun x4927 () Bool)
(declare-fun x3408 () x1923)
(declare-fun x1262 () Int)
(declare-fun x1919 () Bool)
(declare-fun x3142 () Int)
(declare-fun x473 () Int)
(declare-fun x2783 () Bool)
(declare-fun x3795 () Int)
(declare-fun x2241 () Bool)
(declare-fun x1632 () Bool)
(declare-fun x1315 () Bool)
(declare-fun x2281 () Bool)
(declare-fun x4671 () Int)
(declare-fun x4173 () Int)
(declare-fun x3285 () Bool)
(declare-fun x750 () Bool)
(declare-fun x3853 () Int)
(declare-fun x4873 () Int)
(declare-fun x2120 () Bool)
(declare-fun x3616 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x275 () x1923)
(declare-fun x1286 () Bool)
(declare-fun x4226 () Int)
(declare-fun x1899 () Int)
(declare-fun x4255 () Bool)
(declare-fun x3670 () Int)
(declare-fun x4340 () Bool)
(declare-fun x798 () Bool)
(declare-fun x4686 () Int)
(declare-fun x3449 () Int)
(declare-fun x685 () Int)
(declare-fun x1583 () Int)
(declare-fun x449 () Bool)
(declare-fun x731 () Int)
(declare-fun x1342 () Bool)
(declare-fun x4112 () Int)
(declare-fun x376 () Bool)
(declare-fun x4463 () Bool)
(declare-fun x1887 () Bool)
(declare-fun x4934 () Int)
(declare-fun x4790 () Bool)
(declare-fun x4014 () Bool)
(declare-fun x2543 () Int)
(declare-fun x2384 () Bool)
(declare-fun x1316 () Int)
(declare-fun x612 () Bool)
(declare-fun x2792 () Bool)
(declare-fun x2007 () Int)
(declare-fun x4791 () Bool)
(declare-fun x3380 () Int)
(declare-fun x4556 () Int)
(declare-fun x4360 () Bool)
(declare-fun x3694 () Bool)
(declare-fun x2163 () Bool)
(declare-fun x1450 () Bool)
(declare-fun x1950 () Bool)
(declare-fun x1284 () Int)
(declare-fun x2106 () Int)
(declare-fun x1685 () Int)
(declare-fun x779 () Bool)
(declare-fun x948 () Int)
(declare-fun x3482 () Int)
(declare-fun x1039 () Int)
(declare-fun x2819 () Bool)
(declare-fun x4741 () Int)
(declare-fun x1272 () Int)
(declare-fun x114 () Bool)
(declare-fun x3246 () Bool)
(declare-fun x39 () Int)
(declare-fun x2193 () Bool)
(declare-fun x3476 () Int)
(declare-fun x1457 () Bool)
(declare-fun x642 () Int)
(declare-fun x1714 () Int)
(declare-fun x1811 () Int)
(declare-fun x4220 () Int)
(declare-fun x4118 () Int)
(declare-fun x857 () Bool)
(declare-fun x144 () Bool)
(declare-fun x3069 () Bool)
(declare-fun x1130 () Bool)
(declare-fun x1894 () x1923)
(declare-fun x2005 () Bool)
(declare-fun x3178 () Bool)
(declare-fun x1398 () Int)
(declare-fun x475 () x1923)
(declare-fun x1155 () Int)
(declare-fun x653 () x1923)
(declare-fun x2762 () Bool)
(declare-fun x4009 () Bool)
(declare-fun x2298 () Bool)
(declare-fun x1020 () x1923)
(declare-fun x816 () Int)
(declare-fun x4557 () Bool)
(declare-fun x640 () Bool)
(declare-fun x4368 (x1923) Int)
(declare-fun x2228 () Bool)
(declare-fun x1264 () Int)
(declare-fun x72 () Bool)
(declare-fun x749 () Int)
(declare-fun x4482 () Bool)
(declare-fun x87 () Bool)
(declare-fun x1804 () Bool)
(declare-fun x3111 () Bool)
(declare-fun x1910 () Bool)
(declare-fun x1826 () x1923)
(declare-fun x3130 () Bool)
(declare-fun x1502 () Int)
(declare-fun x4936 () x1923)
(declare-fun x1379 () Int)
(declare-fun x1897 () Bool)
(declare-fun x3046 () Bool)
(declare-fun x4230 () Bool)
(declare-fun x1948 () Int)
(declare-fun x3832 () Int)
(declare-fun x217 () Bool)
(declare-fun x3889 () Int)
(declare-fun x1816 () Int)
(declare-fun x3230 () Int)
(declare-fun x2733 () Bool)
(declare-fun x3909 () Bool)
(declare-fun x4421 () Int)
(declare-fun x1812 () Int)
(declare-fun x603 () Bool)
(declare-fun x251 () Int)
(declare-fun x778 () x1923)
(declare-fun x2707 () Int)
(declare-fun x812 () Int)
(declare-fun x3134 () Int)
(declare-fun x2036 () x1923)
(declare-fun x4354 (x1923) Int)
(declare-fun x2360 () x1923)
(declare-fun x3005 () x1923)
(declare-fun x2951 () x1923)
(declare-fun x2841 () Bool)
(declare-fun x4941 () Bool)
(declare-fun x4007 () x1923)
(declare-fun x1261 () Int)
(declare-fun x3007 () Int)
(declare-fun x1993 () Bool)
(declare-fun x2551 () Bool)
(declare-fun x901 () Int)
(declare-fun x1791 () Int)
(declare-fun x1184 () Int)
(declare-fun x1468 () Bool)
(declare-fun x3173 () Bool)
(declare-fun x3341 () Int)
(declare-fun x1772 () Bool)
(declare-fun x1159 () Int)
(declare-fun x1359 () Int)
(declare-fun x4501 () Bool)
(declare-fun x2217 (x1923) Int)
(declare-fun x1021 () Int)
(declare-fun x276 () Int)
(declare-fun x4680 () Bool)
(declare-fun x4635 () Bool)
(declare-fun x2164 () Bool)
(declare-fun x1239 () Int)
(declare-fun x280 () Bool)
(declare-fun x126 () x1923)
(declare-fun x2862 () x1923)
(declare-fun x991 () Int)
(declare-fun x801 () Bool)
(declare-fun x921 () x1923)
(declare-fun x1981 () Bool)
(declare-fun x4146 () x1923)
(declare-fun x2083 () Bool)
(declare-fun x4458 () x1923)
(declare-fun x540 () Bool)
(declare-fun x3108 () Int)
(declare-fun x2937 () Int)
(declare-fun x2618 (Int Int) Int)
(declare-fun x2940 () Bool)
(declare-fun x2219 () Bool)
(declare-fun x3388 () Bool)
(declare-fun x2600 () Bool)
(declare-fun x3497 () Bool)
(declare-fun x1288 () Int)
(declare-fun x2175 () Bool)
(declare-fun x4090 () Bool)
(declare-fun x3184 () Bool)
(declare-fun x2272 () x1923)
(declare-fun x992 () Bool)
(declare-fun x3028 () Int)
(declare-fun x542 () Bool)
(declare-fun x164 () Int)
(declare-fun x4831 () Bool)
(declare-fun x3528 () Bool)
(declare-fun x4899 () Bool)
(declare-fun x631 () x1923)
(declare-fun x1161 () Bool)
(declare-fun x3044 () Int)
(declare-fun x267 () Int)
(declare-fun x4232 () Bool)
(declare-fun x668 () Int)
(declare-fun x125 () Bool)
(declare-fun x3965 () Bool)
(declare-fun x4943 () Int)
(declare-fun x2527 () Int)
(declare-fun x2388 () Int)
(declare-fun x3702 () Int)
(declare-fun x349 () Int)
(declare-fun x1531 () x1923)
(declare-fun x79 (x1923) Int)
(declare-fun x4610 () Bool)
(declare-fun x1113 () Bool)
(declare-fun x420 () x1923)
(declare-fun x4507 () Int)
(declare-fun x4558 () Bool)
(declare-fun x4349 () Int)
(declare-fun x4311 () x1923)
(declare-fun x1204 () Bool)
(declare-fun x3735 () Bool)
(declare-fun x4339 () Bool)
(declare-fun x2887 () Bool)
(declare-fun x3131 () Bool)
(declare-fun x1661 () Int)
(declare-fun x3012 () Bool)
(declare-fun x2279 () Int)
(declare-fun x1578 () Bool)
(declare-fun x3269 () Bool)
(declare-fun x2146 () Int)
(declare-fun x4580 () Int)
(declare-fun x4710 () Int)
(declare-fun x3161 () Bool)
(declare-fun x4316 () Int)
(declare-fun x1542 () Bool)
(declare-fun x980 () Int)
(declare-fun x1621 () x1923)
(declare-fun x2231 () Int)
(declare-fun x684 () Int)
(declare-fun x1944 () Bool)
(declare-fun x1696 () Int)
(declare-fun x4381 () Bool)
(declare-fun x2172 () x1923)
(declare-fun x571 () Int)
(declare-fun x3706 () Int)
(declare-fun x3362 () Bool)
(declare-fun x1404 (x1923) Int)
(declare-fun x1154 () Bool)
(declare-fun x824 () Int)
(declare-fun x4916 () Bool)
(declare-fun x1991 () Bool)
(declare-fun x4566 () Bool)
(declare-fun x4073 () Bool)
(declare-fun x3903 () x1923)
(declare-fun x1700 () Int)
(declare-fun x2359 () Bool)
(declare-fun x2776 () Int)
(declare-fun x3081 () Bool)
(declare-fun x1179 () Int)
(declare-fun x3982 () Int)
(declare-fun x3844 () Bool)
(declare-fun x2609 () Int)
(declare-fun x1569 () Bool)
(declare-fun x2214 () Bool)
(declare-fun x3753 () Int)
(declare-fun x3297 () Bool)
(declare-fun x4602 () Bool)
(declare-fun x2575 () Int)
(declare-fun x4197 () Int)
(declare-fun x433 () Bool)
(declare-fun x896 () Bool)
(declare-fun x4585 () x1923)
(declare-fun x60 () Int)
(declare-fun x2576 () Int)
(declare-fun x1758 () Bool)
(declare-fun x4513 () Int)
(declare-fun x2579 () Int)
(declare-fun x512 () Bool)
(declare-fun x3525 () Int)
(declare-fun x950 () Int)
(declare-fun x4257 () x1923)
(declare-fun x4613 () Bool)
(declare-fun x1232 () Int)
(declare-fun x4070 () Bool)
(declare-fun x1381 () Bool)
(declare-fun x3768 () Int)
(declare-fun x622 () Bool)
(declare-fun x423 () Bool)
(declare-fun x4771 () Int)
(declare-fun x747 () Bool)
(declare-fun x4378 () Int)
(declare-fun x566 () Int)
(declare-fun x3897 () Int)
(declare-fun x4544 () Bool)
(declare-fun x3925 () Bool)
(declare-fun x1943 () Bool)
(declare-fun x2065 () Bool)
(declare-fun x201 () Int)
(declare-fun x4312 () Int)
(declare-fun x1591 () Int)
(declare-fun x2632 () Int)
(declare-fun x346 () Bool)
(declare-fun x3623 () x1923)
(declare-fun x4020 () x1923)
(declare-fun x3152 () x1923)
(declare-fun x2037 () Bool)
(declare-fun x3701 () x1923)
(declare-fun x852 () Int)
(declare-fun x3688 () Bool)
(declare-fun x2994 () Int)
(declare-fun x1485 () Int)
(declare-fun x241 () Int)
(declare-fun x2800 () Int)
(declare-fun x2044 () Int)
(declare-fun x260 () Bool)
(declare-fun x2087 () Int)
(declare-fun x3428 () Bool)
(declare-fun x2884 () x1923)
(declare-fun x2686 () Int)
(declare-fun x4724 () Bool)
(declare-fun x4820 () Bool)
(declare-fun x3291 () Bool)
(declare-fun x3748 () x1923)
(declare-fun x4517 () Bool)
(declare-fun x1439 () Bool)
(declare-fun x4109 () Bool)
(declare-fun x2353 () Int)
(declare-fun x2694 () Bool)
(declare-fun x2573 () Bool)
(declare-fun x967 () Bool)
(declare-fun x4077 () Int)
(declare-fun x2587 () Bool)
(declare-fun x1041 () Int)
(declare-fun x2780 () Int)
(declare-fun x4286 () Int)
(declare-fun x3512 () Int)
(declare-fun x2695 () Int)
(declare-fun x4400 () Bool)
(declare-fun x1400 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x2655 () Bool)
(declare-fun x955 () Int)
(declare-fun x2059 () Bool)
(declare-fun x295 () Int)
(declare-fun x2838 () Int)
(declare-fun x4294 () Bool)
(declare-fun x2205 () Int)
(declare-fun x2410 () Bool)
(declare-fun x2116 () Bool)
(declare-fun x3937 () Bool)
(declare-fun x1682 () x1923)
(declare-fun x4641 () Bool)
(declare-fun x2054 () x1923)
(declare-fun x3600 () Bool)
(declare-fun x4511 () Int)
(declare-fun x4397 () Bool)
(declare-fun x4799 () Bool)
(declare-fun x2974 () Bool)
(declare-fun x4039 () Bool)
(declare-fun x3264 () Bool)
(declare-fun x4338 () Bool)
(declare-fun x709 () Int)
(declare-fun x2246 () Bool)
(declare-fun x3890 () Bool)
(declare-fun x1 () Int)
(declare-fun x4483 () Int)
(declare-fun x3947 () Bool)
(declare-fun x4241 () Bool)
(declare-fun x95 () Bool)
(declare-fun x2020 () Bool)
(declare-fun x4141 () x1923)
(declare-fun x909 () Bool)
(declare-fun x1766 (x1923) Int)
(declare-fun x2954 () Bool)
(declare-fun x1739 () Int)
(declare-fun x2192 () x1923)
(declare-fun x4852 () Bool)
(declare-fun x478 () Int)
(declare-fun x4274 () Bool)
(declare-fun x572 () Bool)
(declare-fun x1680 () Bool)
(declare-fun x2785 () Int)
(declare-fun x348 () Int)
(declare-fun x4929 () Bool)
(declare-fun x1825 () Int)
(declare-fun x2716 () Int)
(declare-fun x6 () Bool)
(declare-fun x2067 () Int)
(declare-fun x2052 () Int)
(declare-fun x198 () Int)
(declare-fun x585 () Int)
(declare-fun x3520 () Int)
(declare-fun x3620 () Bool)
(declare-fun x4280 () x1923)
(declare-fun x1412 () Int)
(declare-fun x3190 () x1923)
(declare-fun x1461 () Bool)
(declare-fun x687 () Bool)
(declare-fun x327 () Bool)
(declare-fun x1513 () Bool)
(declare-fun x1140 () x1923)
(declare-fun x2919 () Int)
(declare-fun x1427 () Bool)
(declare-fun x3771 () Int)
(declare-fun x3672 () Bool)
(declare-fun x2256 () Int)
(declare-fun x219 () Int)
(declare-fun x4644 () Int)
(declare-fun x1762 () Bool)
(declare-fun x2516 () Bool)
(declare-fun x16 () Int)
(declare-fun x958 () Bool)
(declare-fun x2400 () Bool)
(declare-fun x4402 () Bool)
(declare-fun x3314 () Bool)
(declare-fun x2323 () Bool)
(declare-fun x1492 () Int)
(declare-fun x2435 () Int)
(declare-fun x2016 () Int)
(declare-fun x3581 () Bool)
(declare-fun x2636 () Bool)
(declare-fun x717 () Int)
(declare-fun x1541 () Int)
(declare-fun x1068 () Int)
(declare-fun x136 () Bool)
(declare-fun x814 () Bool)
(declare-fun x21 () Bool)
(declare-fun x3546 () Bool)
(declare-fun x508 () Bool)
(declare-fun x2683 () Int)
(declare-fun x4446 () Bool)
(declare-fun x1301 () Bool)
(declare-fun x1164 () Int)
(declare-fun x4289 () Bool)
(declare-fun x4095 () Int)
(declare-fun x2438 () x1923)
(declare-fun x3351 () Int)
(declare-fun x189 () Bool)
(declare-fun x1620 () Bool)
(declare-fun x1725 () Int)
(declare-fun x4526 () Int)
(declare-fun x3572 () Int)
(declare-fun x1006 () Bool)
(declare-fun x4243 () Int)
(declare-fun x3634 () Int)
(declare-fun x4169 () Int)
(declare-fun x3519 () Bool)
(declare-fun x4460 () Int)
(declare-fun x1650 () Bool)
(declare-fun x377 () Int)
(declare-fun x2460 () Int)
(declare-fun x4035 () Bool)
(declare-fun x3619 () Int)
(declare-fun x2561 () Int)
(declare-fun x3048 () Int)
(declare-fun x839 () Bool)
(declare-fun x2704 () Bool)
(declare-fun x531 () Int)
(declare-fun x1390 () Bool)
(declare-fun x2129 () Int)
(declare-fun x2393 () Bool)
(declare-fun x3556 () Bool)
(declare-fun x2619 () Int)
(declare-fun x479 () Int)
(declare-fun x954 () Bool)
(declare-fun x1604 () Int)
(declare-fun x3596 () Bool)
(declare-fun x4394 () Int)
(declare-fun x2498 () Bool)
(declare-fun x2415 () Bool)
(declare-fun x4664 () Bool)
(declare-fun x649 () Int)
(declare-fun x3422 () x1923)
(declare-fun x2645 () Int)
(declare-fun x3584 () Int)
(declare-fun x1538 () x1923)
(declare-fun x3207 () x1923)
(declare-fun x2267 () Int)
(declare-fun x4487 () Int)
(declare-fun x1861 () Bool)
(declare-fun x1860 () Bool)
(declare-fun x1123 () Bool)
(declare-fun x2015 () Int)
(declare-fun x193 () Int)
(declare-fun x2104 () x1923)
(declare-fun x4707 () Bool)
(declare-fun x2453 () Int)
(declare-fun x3417 () Int)
(declare-fun x4324 () Int)
(declare-fun x2319 () Int)
(declare-fun x905 () Int)
(declare-fun x161 () Int)
(declare-fun x446 () Bool)
(declare-fun x2186 () Bool)
(declare-fun x3042 () Bool)
(declare-fun x1294 () Int)
(declare-fun x1200 () Bool)
(declare-fun x594 () Int)
(declare-fun x335 () Int)
(declare-fun x3845 () Int)
(declare-fun x1030 () Int)
(declare-fun x4247 () Bool)
(declare-fun x2855 () Bool)
(declare-fun x3836 () Int)
(declare-fun x3699 () Int)
(declare-fun x793 () Int)
(declare-fun x3955 () Bool)
(declare-fun x2548 () Int)
(declare-fun x1238 () Int)
(declare-fun x133 () Int)
(declare-fun x3515 () Int)
(declare-fun x756 () Int)
(declare-fun x3807 () Bool)
(declare-fun x506 () Bool)
(declare-fun x1573 () Bool)
(declare-fun x2595 () Int)
(declare-fun x199 () Bool)
(declare-fun x4486 () Int)
(declare-fun x866 () Int)
(declare-fun x861 () Int)
(declare-fun x3071 () Int)
(declare-fun x2535 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x3814 () Bool)
(declare-fun x2459 () Int)
(declare-fun x2882 () x1923)
(declare-fun x3051 () Bool)
(declare-fun x2243 () Int)
(declare-fun x1892 () Bool)
(declare-fun x1815 () x1923)
(declare-fun x1419 () Int)
(declare-fun x4399 () Bool)
(declare-fun x3684 () Bool)
(declare-fun x2987 () Bool)
(declare-fun x1933 () Int)
(declare-fun x1789 () Bool)
(declare-fun x2824 () Int)
(declare-fun x1525 () x1923)
(declare-fun x2689 () Int)
(declare-fun x3654 () Bool)
(declare-fun x2196 () Bool)
(declare-fun x3636 () Int)
(declare-fun x4562 () x1923)
(declare-fun x4720 () Int)
(declare-fun x643 () Int)
(declare-fun x605 () Bool)
(declare-fun x1630 () Bool)
(declare-fun x4358 () Bool)
(declare-fun x2078 () Int)
(declare-fun x1177 () Bool)
(declare-fun x205 () Bool)
(declare-fun x1688 () x1923)
(declare-fun x2396 () Bool)
(declare-fun x4334 () Bool)
(declare-fun x3787 () Int)
(declare-fun x3874 () Bool)
(declare-fun x2534 () x1923)
(declare-fun x1813 () x1923)
(declare-fun x4485 () Bool)
(declare-fun x1519 () Int)
(declare-fun x2365 () Int)
(declare-fun x875 () Int)
(declare-fun x2550 () Int)
(declare-fun x341 () Bool)
(declare-fun x1307 () Int)
(declare-fun x2775 () Int)
(declare-fun x4167 () Int)
(declare-fun x1074 () Bool)
(declare-fun x656 () Bool)
(declare-fun x588 () x1923)
(declare-fun x2421 () Bool)
(declare-fun x1317 () Int)
(declare-fun x4593 () Bool)
(declare-fun x4322 () Int)
(declare-fun x1471 () Int)
(declare-fun x2612 () Bool)
(declare-fun x1433 () Bool)
(declare-fun x4163 () Int)
(declare-fun x2818 () Bool)
(declare-fun x3490 () x1923)
(declare-fun x4834 () Int)
(declare-fun x2685 () Int)
(declare-fun x1806 () Int)
(declare-fun x282 () Bool)
(declare-fun x51 () Bool)
(declare-fun x4122 () Bool)
(declare-fun x926 () Bool)
(declare-fun x3317 () Int)
(declare-fun x3248 () Bool)
(declare-fun x2368 () Bool)
(declare-fun x1747 () Bool)
(declare-fun x2892 () Bool)
(declare-fun x1010 () Int)
(declare-fun x263 () Bool)
(declare-fun x2506 () Bool)
(declare-fun x4733 () Bool)
(declare-fun x2375 () Int)
(declare-fun x3334 () Bool)
(declare-fun x4227 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x3932 () Bool)
(declare-fun x4479 () Int)
(declare-fun x1649 () Int)
(declare-fun x2791 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x3322 () Bool)
(declare-fun x4521 () Int)
(declare-fun x2634 () Bool)
(declare-fun x485 () Int)
(declare-fun x1423 () Int)
(declare-fun x536 () x1923)
(declare-fun x3752 () Bool)
(declare-fun x3994 () Bool)
(declare-fun x1742 () x1923)
(declare-fun x216 () Int)
(declare-fun x835 () Int)
(declare-fun x2730 () Bool)
(declare-fun x4909 () Int)
(declare-fun x4531 () Int)
(declare-fun x1771 () Bool)
(declare-fun x1940 () Int)
(declare-fun x1869 () Bool)
(declare-fun x538 () Int)
(declare-fun x3183 () Bool)
(declare-fun x633 () Int)
(declare-fun x4271 () Int)
(declare-fun x2456 () Bool)
(declare-fun x4763 () Bool)
(declare-fun x3704 () Int)
(declare-fun x3985 () Bool)
(declare-fun x1925 () Bool)
(declare-fun x2314 () Int)
(declare-fun x1259 () Bool)
(declare-fun x2537 () Bool)
(declare-fun x1451 () Bool)
(declare-fun x4536 () Int)
(declare-fun x4574 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x3223 () Bool)
(declare-fun x2341 () Bool)
(declare-fun x2113 () Int)
(declare-fun x2888 () Bool)
(declare-fun x1026 () Int)
(declare-fun x2040 () Int)
(declare-fun x529 () Bool)
(declare-fun x911 () Bool)
(declare-fun x3749 () Bool)
(declare-fun x4583 () Int)
(declare-fun x2962 () x1923)
(declare-fun x4158 () Int)
(declare-fun x4126 () Bool)
(declare-fun x3868 () Int)
(declare-fun x1830 () Int)
(declare-fun x1822 () Int)
(declare-fun x1428 () Int)
(declare-fun x4779 () Bool)
(declare-fun x1459 () Bool)
(declare-fun x421 () Bool)
(declare-fun x4198 () Bool)
(declare-fun x1353 () Int)
(declare-fun x1071 () Int)
(declare-fun x1760 () Bool)
(declare-fun x2230 () Int)
(declare-fun x2722 () Bool)
(declare-fun x48 () x1923)
(declare-fun x1321 () Int)
(declare-fun x309 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x2656 () Bool)
(declare-fun x503 () Bool)
(declare-fun x2996 () Int)
(declare-fun x1668 (Int) Int)
(declare-fun x3741 () Bool)
(declare-fun x4380 () Int)
(declare-fun x2868 () Bool)
(declare-fun x1190 () Bool)
(declare-fun x4539 () x1923)
(declare-fun x273 () Int)
(declare-fun x878 () Bool)
(declare-fun x3247 () x1923)
(declare-fun x3831 () Bool)
(declare-fun x3773 () Bool)
(declare-fun x1491 () Int)
(declare-fun x3966 () Bool)
(declare-fun x1482 () Int)
(declare-fun x1986 () Int)
(declare-fun x3820 () Int)
(declare-fun x3757 () Int)
(declare-fun x2693 () Bool)
(declare-fun x3509 () Int)
(declare-fun x509 () Int)
(declare-fun x4604 () Bool)
(declare-fun x2178 () Int)
(declare-fun x2676 () x1923)
(declare-fun x560 () Bool)
(declare-fun x2520 () x1923)
(declare-fun x2179 () Int)
(declare-fun x1405 () Bool)
(declare-fun x820 () Int)
(declare-fun x3992 () Int)
(declare-fun x4570 () Bool)
(declare-fun x4701 () Bool)
(declare-fun x1769 () Int)
(declare-fun x4703 () Bool)
(declare-fun x4121 () Bool)
(declare-fun x2605 () x1923)
(declare-fun x2276 () Int)
(declare-fun x4504 () x1923)
(declare-fun x303 () Int)
(declare-fun x2698 () x1923)
(declare-fun x4489 () Int)
(declare-fun x2232 () Bool)
(declare-fun x1282 () Int)
(declare-fun x2321 () Int)
(declare-fun x4251 () Int)
(declare-fun x4038 () Bool)
(declare-fun x662 () Int)
(declare-fun x4812 () x1923)
(declare-fun x3599 () Bool)
(declare-fun x895 () Int)
(declare-fun x3315 () Int)
(declare-fun x2648 () Bool)
(declare-fun x311 () Bool)
(declare-fun x2946 () Int)
(declare-fun x3160 () Bool)
(declare-fun x457 () Int)
(declare-fun x810 () Bool)
(declare-fun x4735 () Int)
(declare-fun x2909 () Int)
(declare-fun x1937 () Bool)
(declare-fun x1847 () Bool)
(declare-fun x4639 () Int)
(declare-fun x2111 () Bool)
(declare-fun x1354 () Int)
(declare-fun x1300 () Bool)
(declare-fun x2034 () Bool)
(declare-fun x390 () Int)
(declare-fun x2389 () x1923)
(declare-fun x3502 () Bool)
(declare-fun x4154 () x1923)
(declare-fun x1786 () Bool)
(declare-fun x4775 () Bool)
(declare-fun x2630 () Bool)
(declare-fun x1749 () Bool)
(declare-fun x69 () Int)
(declare-fun x1505 () Bool)
(declare-fun x1196 () Int)
(declare-fun x3794 () Bool)
(declare-fun x2254 () Int)
(declare-fun x2808 () Int)
(declare-fun x537 () Int)
(declare-fun x3675 () Int)
(declare-fun x3423 () Bool)
(declare-fun x670 () Int)
(declare-fun x4094 () Int)
(declare-fun x41 () Int)
(declare-fun x4938 () Bool)
(declare-fun x255 () Bool)
(declare-fun x665 () Bool)
(declare-fun x2508 () x1923)
(declare-fun x180 () Int)
(declare-fun x2635 () Int)
(declare-fun x3348 () Bool)
(declare-fun x3864 () Bool)
(declare-fun x2376 () Int)
(declare-fun x1488 () Bool)
(declare-fun x3973 () Bool)
(declare-fun x3455 (x1923) Int)
(declare-fun x3811 () Bool)
(declare-fun x2316 () Int)
(declare-fun x4429 () Bool)
(declare-fun x3977 () Bool)
(declare-fun x2195 () Bool)
(declare-fun x1373 () Int)
(declare-fun x3901 () Bool)
(declare-fun x3040 () Int)
(declare-fun x4858 () Bool)
(declare-fun x2890 () Bool)
(declare-fun x2822 () Int)
(declare-fun x3717 () Bool)
(declare-fun x3751 () Int)
(declare-fun x1335 () Bool)
(declare-fun x4940 () x1923)
(declare-fun x3953 () Int)
(declare-fun x3377 () Int)
(declare-fun x598 () x1923)
(declare-fun x4084 () Bool)
(declare-fun x699 () Int)
(declare-fun x2132 (x1923) Int)
(declare-fun x1237 () Bool)
(declare-fun x4432 () Int)
(declare-fun x4630 () Bool)
(declare-fun x1083 () Int)
(declare-fun x4061 () Int)
(declare-fun x3488 () Bool)
(declare-fun x1508 () Int)
(declare-fun x4787 () Bool)
(declare-fun x818 () Int)
(declare-fun x720 () Int)
(declare-fun x1108 () Bool)
(declare-fun x3557 () Int)
(declare-fun x1996 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x3486 () Bool)
(declare-fun x3280 () Bool)
(declare-fun x3860 () Int)
(declare-fun x4152 () Int)
(declare-fun x366 () Bool)
(declare-fun x1243 () Int)
(declare-fun x1076 () Bool)
(declare-fun x4816 () Bool)
(declare-fun x3151 () Bool)
(declare-fun x1590 () Bool)
(declare-fun x34 () Bool)
(declare-fun x787 () Int)
(declare-fun x1921 () x1923)
(declare-fun x3592 () Bool)
(declare-fun x4323 () Bool)
(declare-fun x2355 () Int)
(declare-fun x3707 () Bool)
(declare-fun x1912 () Bool)
(declare-fun x1157 () Bool)
(declare-fun x4108 () Int)
(declare-fun x3172 () Bool)
(declare-fun x374 () Bool)
(declare-fun x2402 () Int)
(declare-fun x3029 () Bool)
(declare-fun x3621 () Int)
(declare-fun x2130 () x1923)
(declare-fun x2626 () Bool)
(declare-fun x3401 () Bool)
(declare-fun x1853 () Int)
(declare-fun x3001 () Int)
(declare-fun x212 () Int)
(declare-fun x3427 () Bool)
(declare-fun x4756 () Int)
(declare-fun x4045 () Bool)
(declare-fun x1980 () Int)
(declare-fun x4592 () Bool)
(declare-fun x1702 () Int)
(declare-fun x3781 () Int)
(declare-fun x58 () Int)
(declare-fun x261 () x1923)
(declare-fun x3870 () x1923)
(declare-fun x3345 () Int)
(declare-fun x2191 () Int)
(declare-fun x2925 () Bool)
(declare-fun x2647 () Bool)
(declare-fun x2382 () Int)
(declare-fun x1478 () Bool)
(declare-fun x2681 () Int)
(declare-fun x321 () Bool)
(declare-fun x573 () x1923)
(declare-fun x2529 () Int)
(declare-fun x1189 () Bool)
(declare-fun x3872 () Int)
(declare-fun x3177 () Int)
(declare-fun x1795 () Bool)
(declare-fun x2474 () Int)
(declare-fun x1718 () Bool)
(declare-fun x1644 () Int)
(declare-fun x2864 () Bool)
(declare-fun x1328 () Bool)
(declare-fun x1070 () Int)
(declare-fun x195 () x1923)
(declare-fun x124 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x4285 () Bool)
(declare-fun x289 () Bool)
(declare-fun x945 () Int)
(declare-fun x2976 () Int)
(declare-fun x2436 () Bool)
(declare-fun x209 () Int)
(declare-fun x2912 () Bool)
(declare-fun x2043 () Int)
(declare-fun x2348 () Int)
(declare-fun x920 () Int)
(declare-fun x4597 () Bool)
(declare-fun x4018 () Bool)
(declare-fun x82 () Int)
(declare-fun x2771 () Int)
(declare-fun x1893 () Bool)
(declare-fun x2784 () Int)
(declare-fun x4847 () x1923)
(declare-fun x4170 () Bool)
(declare-fun x4872 () Bool)
(declare-fun x524 () Int)
(declare-fun x3278 () Bool)
(declare-fun x1515 () Int)
(declare-fun x156 () Int)
(declare-fun x4284 () x1923)
(declare-fun x2053 () Int)
(declare-fun x4497 () Bool)
(declare-fun x3989 () Bool)
(declare-fun x4465 () Int)
(declare-fun x2944 () Bool)
(declare-fun x4080 () Bool)
(declare-fun x4000 () Bool)
(declare-fun x2788 () Int)
(declare-fun x4309 () Bool)
(declare-fun x4425 () Bool)
(declare-fun x4723 () Int)
(declare-fun x2899 () Int)
(declare-fun x988 () Bool)
(declare-fun x2101 () Int)
(declare-fun x3664 () Bool)
(declare-fun x2920 () Bool)
(declare-fun x3790 () Bool)
(declare-fun x3783 () Int)
(declare-fun x4821 () Bool)
(declare-fun x947 () Int)
(declare-fun x3188 () Bool)
(declare-fun x3439 () Bool)
(declare-fun x2871 () Bool)
(declare-fun x2713 () Bool)
(declare-fun x2051 () Bool)
(declare-fun x1580 () Bool)
(declare-fun x4582 () x1923)
(declare-fun x2542 () Int)
(declare-fun x4206 () Bool)
(declare-fun x1012 () x1923)
(declare-fun x49 () Int)
(declare-fun x3963 () Bool)
(declare-fun x4341 () Int)
(declare-fun x1802 () Bool)
(declare-fun x4712 () x1923)
(declare-fun x2480 () Bool)
(declare-fun x985 () Int)
(declare-fun x2518 () Bool)
(declare-fun x1383 () Bool)
(declare-fun x1671 () x1923)
(declare-fun x2240 () Int)
(declare-fun x2740 () Int)
(declare-fun x4762 () x1923)
(declare-fun x1738 () Int)
(declare-fun x2845 () Int)
(declare-fun x3908 () Bool)
(declare-fun x1011 () x1923)
(declare-fun x2061 () Bool)
(declare-fun x1559 () Int)
(declare-fun x1205 () Int)
(declare-fun x3079 () Int)
(declare-fun x1579 () Int)
(declare-fun x4857 () Int)
(declare-fun x1372 () Bool)
(declare-fun x4150 () x1923)
(declare-fun x1788 () Bool)
(declare-fun x2366 () Bool)
(declare-fun x3414 () Bool)
(declare-fun x4520 () x1923)
(declare-fun x301 () Bool)
(declare-fun x660 () Int)
(declare-fun x936 () Bool)
(declare-fun x2798 () Bool)
(declare-fun x2476 () Int)
(declare-fun x1539 () Bool)
(declare-fun x4164 () Bool)
(declare-fun x623 () Bool)
(declare-fun x3646 () Int)
(declare-fun x325 (Int) Int)
(declare-fun x1215 () x1923)
(declare-fun x1602 () Bool)
(declare-fun x546 () Bool)
(declare-fun x3815 () Int)
(declare-fun x4817 () Int)
(declare-fun x733 () Int)
(declare-fun x4409 () Bool)
(declare-fun x1352 () Bool)
(declare-fun x119 () x1923)
(declare-fun x924 () Int)
(declare-fun x2629 () Bool)
(declare-fun x3920 () Bool)
(declare-fun x4373 () Int)
(declare-fun x4915 () Bool)
(declare-fun x1958 () Bool)
(declare-fun x1881 () Bool)
(declare-fun x3487 () Bool)
(declare-fun x3641 () Int)
(declare-fun x3094 () Bool)
(declare-fun x3568 () Bool)
(declare-fun x2904 () Int)
(declare-fun x4565 () Bool)
(declare-fun x4048 () Bool)
(declare-fun x1820 () Int)
(declare-fun x3019 () Bool)
(declare-fun x3361 () Int)
(declare-fun x148 () Bool)
(declare-fun x638 () Int)
(declare-fun x4342 () Bool)
(declare-fun x4204 () Int)
(declare-fun x2985 () Bool)
(declare-fun x815 () Bool)
(declare-fun x4332 () Int)
(declare-fun x441 () Bool)
(declare-fun x4076 () Bool)
(declare-fun x3830 () x1923)
(declare-fun x1093 () x1923)
(declare-fun x281 () Int)
(declare-fun x1517 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x1624 () Int)
(declare-fun x2089 () Int)
(declare-fun x2445 () Int)
(declare-fun x487 () Bool)
(declare-fun x4764 () Int)
(declare-fun x2826 () x1923)
(declare-fun x3942 () x1923)
(declare-fun x2995 () Bool)
(declare-fun x4382 () Bool)
(declare-fun x4505 () Bool)
(declare-fun x3141 () Bool)
(declare-fun x3116 () Int)
(declare-fun x1382 () Bool)
(declare-fun x4125 () Bool)
(declare-fun x1849 () Bool)
(declare-fun x3339 () Int)
(declare-fun x3212 () Int)
(declare-fun x3372 () Bool)
(declare-fun x239 () Bool)
(declare-fun x3629 (x1923) Int)
(declare-fun x1558 () Int)
(declare-fun x1386 () Int)
(declare-fun x2668 () Bool)
(declare-fun x1540 () Int)
(declare-fun x4782 () Int)
(declare-fun x1119 () Int)
(declare-fun x789 () Bool)
(declare-fun x2929 () x1923)
(declare-fun x4569 () Int)
(declare-fun x2664 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x3066 () Bool)
(declare-fun x4717 () x1923)
(declare-fun x966 () Bool)
(declare-fun x3960 () Bool)
(declare-fun x606 () Int)
(declare-fun x315 () Bool)
(declare-fun x150 () Bool)
(declare-fun x2601 () x1923)
(declare-fun x312 () Int)
(declare-fun x897 (x1923) Int)
(declare-fun x2924 () Int)
(declare-fun x922 () Int)
(declare-fun x3491 () Int)
(declare-fun x2745 () Bool)
(declare-fun x3722 () Bool)
(declare-fun x2030 () Bool)
(declare-fun x4456 () Bool)
(declare-fun x3522 () Int)
(declare-fun x1878 (x1923) Int)
(declare-fun x3689 () Bool)
(declare-fun x1495 () Int)
(declare-fun x1793 () Int)
(declare-fun x4183 () Bool)
(declare-fun x1588 () x1923)
(declare-fun x1047 () Bool)
(declare-fun x3817 () Int)
(declare-fun x1287 () Int)
(declare-fun x1415 () Bool)
(declare-fun x718 () x1923)
(declare-fun x1141 () Int)
(declare-fun x4719 () Bool)
(declare-fun x2831 () Int)
(declare-fun x3343 () Bool)
(declare-fun x4185 () Int)
(declare-fun x4157 () Bool)
(declare-fun x2305 () x1923)
(declare-fun x769 () Bool)
(declare-fun x3244 () x1923)
(declare-fun x3398 () Bool)
(declare-fun x3964 () Bool)
(declare-fun x4480 () Int)
(declare-fun x890 () x1923)
(declare-fun x1368 () Bool)
(declare-fun x1092 () Int)
(declare-fun x3954 () Int)
(declare-fun x702 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x4890 () Int)
(declare-fun x634 () Int)
(declare-fun x1550 () Int)
(declare-fun x1960 () Int)
(declare-fun x3068 () Int)
(declare-fun x2900 () Bool)
(declare-fun x1767 () Int)
(declare-fun x3591 (x1923) Int)
(declare-fun x1312 () Int)
(declare-fun x4308 () Int)
(declare-fun x2237 () Bool)
(declare-fun x3658 () Bool)
(declare-fun x419 () Bool)
(declare-fun x3241 () Bool)
(declare-fun x291 () Bool)
(declare-fun x484 () Int)
(declare-fun x3500 () x1923)
(declare-fun x2143 () Bool)
(declare-fun x641 () Int)
(declare-fun x139 (x1923) Int)
(declare-fun x2809 () Int)
(declare-fun x833 () x1923)
(declare-fun x2439 () Int)
(declare-fun x3567 () Bool)
(declare-fun x3077 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x1783 () Bool)
(declare-fun x2252 () x1923)
(declare-fun x4269 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x1988 (x1923) Int)
(declare-fun x147 (Int) Int)
(declare-fun x495 () Bool)
(declare-fun x1862 () Bool)
(declare-fun x253 () Bool)
(declare-fun x646 () Bool)
(declare-fun x1202 () Int)
(declare-fun x4518 () Bool)
(declare-fun x1968 () Int)
(declare-fun x300 () Bool)
(declare-fun x489 () Int)
(declare-fun x2967 () Int)
(declare-fun x4056 () x1923)
(declare-fun x3393 () Int)
(declare-fun x3097 () Bool)
(declare-fun x1686 () Int)
(declare-fun x4883 () Bool)
(declare-fun x2344 () Bool)
(declare-fun x618 () Bool)
(declare-fun x286 () Bool)
(declare-fun x1273 () Bool)
(declare-fun x3271 () Int)
(declare-fun x2284 () Bool)
(declare-fun x2805 () Bool)
(declare-fun x1247 () Bool)
(declare-fun x4408 () Bool)
(declare-fun x246 () Int)
(declare-fun x182 () Bool)
(declare-fun x3288 () Bool)
(declare-fun x3742 () x1923)
(declare-fun x2466 () Bool)
(declare-fun x1994 () Bool)
(declare-fun x4667 () Int)
(declare-fun x3433 () Bool)
(declare-fun x3409 () Bool)
(declare-fun x4055 () Bool)
(declare-fun x3412 () Int)
(declare-fun x4760 () Int)
(declare-fun x1546 () Bool)
(declare-fun x3222 (Int) Int)
(declare-fun x4213 () x1923)
(declare-fun x1497 () Bool)
(declare-fun x1642 () Int)
(declare-fun x4730 () Bool)
(declare-fun x3589 () Bool)
(declare-fun x3979 () x1923)
(declare-fun x944 () Bool)
(declare-fun x1472 () Int)
(declare-fun x3902 () Int)
(declare-fun x4110 () Bool)
(declare-fun x2090 () x1923)
(declare-fun x2813 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x3900 () Bool)
(declare-fun x1768 () Int)
(declare-fun x1936 () Int)
(declare-fun x3542 () Bool)
(declare-fun x2699 () Int)
(declare-fun x1493 () Int)
(declare-fun x3030 () Int)
(declare-fun x1841 () Bool)
(declare-fun x129 () Int)
(declare-fun x619 () x1923)
(declare-fun x1297 () Bool)
(declare-fun x1659 () Bool)
(declare-fun x117 () Bool)
(declare-fun x1049 () Bool)
(declare-fun x764 () Bool)
(declare-fun x2797 () x1923)
(declare-fun x2911 () Bool)
(declare-fun x4633 () Bool)
(declare-fun x3274 () Int)
(declare-fun x1410 () Bool)
(declare-fun x2978 () Int)
(declare-fun x4148 () Int)
(declare-fun x4238 () Int)
(declare-fun x4567 () Int)
(declare-fun x935 () Int)
(declare-fun x3138 () Int)
(declare-fun x2933 () Bool)
(declare-fun x2932 () Bool)
(declare-fun x4268 () Bool)
(declare-fun x2726 () x1923)
(declare-fun x4147 () Int)
(declare-fun x3263 () Int)
(declare-fun x4877 () Bool)
(declare-fun x2711 () Int)
(declare-fun x1523 () Int)
(declare-fun x1090 () Int)
(declare-fun x2789 () x1923)
(declare-fun x1332 () Int)
(declare-fun x894 () Bool)
(declare-fun x1036 () Int)
(declare-fun x3492 () Bool)
(declare-fun x1393 () Bool)
(declare-fun x2777 () Int)
(declare-fun x2391 () Bool)
(declare-fun x4798 () Int)
(declare-fun x305 () Bool)
(declare-fun x364 () x1923)
(declare-fun x4379 () Int)
(declare-fun x1456 () Bool)
(declare-fun x2688 () Bool)
(declare-fun x2029 () x1923)
(declare-fun x3036 () Bool)
(declare-fun x1121 () Bool)
(declare-fun x3311 () Int)
(declare-fun x3447 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x2641 () Bool)
(declare-fun x97 () Bool)
(declare-fun x4100 () Int)
(declare-fun x2327 () Bool)
(declare-fun x4813 () Bool)
(declare-fun x4124 () Int)
(declare-fun x3258 () Bool)
(declare-fun x4623 () Int)
(declare-fun x3057 () x1923)
(declare-fun x2998 () Bool)
(declare-fun x621 () Bool)
(declare-fun x3640 () Int)
(declare-fun x1455 () Int)
(declare-fun x2993 () Int)
(declare-fun x2496 () Bool)
(declare-fun x214 () x1923)
(declare-fun x3943 () Int)
(declare-fun x2774 () Bool)
(declare-fun x858 () Int)
(declare-fun x4437 () Int)
(declare-fun x790 () Int)
(declare-fun x4011 () Bool)
(declare-fun x4803 () Bool)
(declare-fun x4290 () Int)
(declare-fun x4614 () Bool)
(declare-fun x1756 () x1923)
(declare-fun x1761 () x1923)
(declare-fun x4304 (x1923) Int)
(declare-fun x2607 () Bool)
(declare-fun x689 () x1923)
(declare-fun x4850 () Int)
(declare-fun x1182 () Int)
(declare-fun x1411 () Int)
(declare-fun x3387 () Bool)
(declare-fun x1941 () Bool)
(declare-fun x3147 () Bool)
(declare-fun x4693 () Bool)
(declare-fun x3613 () Bool)
(declare-fun x4337 () x1923)
(declare-fun x3133 () Bool)
(declare-fun x1594 () Bool)
(declare-fun x2201 () Bool)
(declare-fun x4757 () Int)
(declare-fun x3737 () Bool)
(declare-fun x1507 (x1923) Int)
(declare-fun x4083 () Int)
(declare-fun x4282 () Int)
(declare-fun x4297 () Bool)
(declare-fun x2588 () Bool)
(declare-fun x4471 () Int)
(declare-fun x4085 () Bool)
(declare-fun x3873 () Bool)
(declare-fun x3969 () Int)
(declare-fun x351 () x1923)
(declare-fun x4319 () Int)
(declare-fun x1125 () Int)
(declare-fun x2700 () Bool)
(declare-fun x535 (Int) Int)
(declare-fun x977 () Int)
(declare-fun x2115 () Int)
(declare-fun x2426 () Bool)
(declare-fun x2525 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x2187 () Bool)
(declare-fun x2297 () Int)
(declare-fun x2271 () Int)
(declare-fun x2897 () Bool)
(declare-fun x4808 () x1923)
(declare-fun x2625 () Int)
(declare-fun x2886 (x1923) Int)
(declare-fun x1077 () Bool)
(declare-fun x1792 () x1923)
(declare-fun x3642 () Bool)
(declare-fun x20 () x1923)
(declare-fun x1729 () x1923)
(declare-fun x3886 () Int)
(declare-fun x3313 () Bool)
(declare-fun x3037 () Bool)
(declare-fun x2208 () Bool)
(declare-fun x2654 () Bool)
(declare-fun x3879 () x1923)
(declare-fun x4818 () Int)
(declare-fun x3827 () x1923)
(declare-fun x1562 () Bool)
(declare-fun x2419 () Bool)
(declare-fun x4208 () Bool)
(declare-fun x2983 () Bool)
(declare-fun x1213 () x1923)
(declare-fun x4066 () x1923)
(declare-fun x1463 () Int)
(declare-fun x2988 (x1923) Int)
(declare-fun x4619 () Bool)
(declare-fun x2401 () Bool)
(declare-fun x2475 () Int)
(declare-fun x3891 () Bool)
(declare-fun x2617 () Bool)
(declare-fun x860 () Bool)
(declare-fun x1032 () Int)
(declare-fun x997 () x1923)
(declare-fun x4310 () Bool)
(declare-fun x1614 () Int)
(declare-fun x162 () Int)
(declare-fun x2565 () Bool)
(declare-fun x332 () Bool)
(declare-fun x372 () Bool)
(declare-fun x583 () Bool)
(declare-fun x690 () Int)
(declare-fun x2649 () Int)
(declare-fun x4648 () Bool)
(declare-fun x4438 () Int)
(declare-fun x2255 () Int)
(declare-fun x81 () Bool)
(declare-fun x243 () x1923)
(declare-fun x4744 () x1923)
(declare-fun x2554 () Bool)
(declare-fun x2180 () Int)
(declare-fun x4345 () Int)
(declare-fun x2744 () Int)
(declare-fun x1145 () Bool)
(declare-fun x1426 () Int)
(declare-fun x2221 () Bool)
(declare-fun x2787 () Int)
(declare-fun x3541 () Int)
(declare-fun x2182 () Bool)
(declare-fun x4694 () x1923)
(declare-fun x1080 () Int)
(declare-fun x1308 () Bool)
(declare-fun x3114 () Int)
(declare-fun x4815 () Bool)
(declare-fun x1528 () Int)
(declare-fun x4043 () Int)
(declare-fun x3335 () Bool)
(declare-fun x3730 () Int)
(declare-fun x1274 () Int)
(declare-fun x271 (Int) Int)
(declare-fun x1067 () Int)
(declare-fun x4093 () Int)
(declare-fun x2965 () Int)
(declare-fun x2171 () Int)
(declare-fun x499 () Bool)
(declare-fun x1435 () Int)
(declare-fun x1870 () Int)
(declare-fun x3102 () Bool)
(declare-fun x1275 () Bool)
(declare-fun x2608 () Bool)
(declare-fun x284 () x1923)
(declare-fun x1918 () x1923)
(declare-fun x3941 () Bool)
(declare-fun x3582 () Int)
(declare-fun x4086 () Int)
(declare-fun x2433 () Int)
(declare-fun x2513 () Int)
(declare-fun x1129 () Int)
(declare-fun x2159 () Bool)
(declare-fun x2768 () Bool)
(declare-fun x4144 () Int)
(declare-fun x4171 () Bool)
(declare-fun x4385 () Bool)
(declare-fun x3516 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x3697 () Bool)
(declare-fun x4488 () Bool)
(declare-fun x4755 () x1923)
(declare-fun x4617 () Bool)
(declare-fun x4819 () Int)
(declare-fun x1053 () Int)
(declare-fun x4428 () Bool)
(declare-fun x4096 () Int)
(declare-fun x4231 () Bool)
(declare-fun x2041 () x1923)
(declare-fun x3904 () Bool)
(declare-fun x3100 () x1923)
(declare-fun x4640 () Bool)
(declare-fun x384 () Bool)
(declare-fun x2590 () Bool)
(declare-fun x3958 () Bool)
(declare-fun x465 () x1923)
(declare-fun x112 () x1923)
(declare-fun x1327 () Int)
(declare-fun x548 () Int)
(declare-fun x4044 () Int)
(declare-fun x4881 () Int)
(declare-fun x2469 () Int)
(declare-fun x849 () Int)
(declare-fun x4065 () x1923)
(declare-fun x2876 () Bool)
(declare-fun x5 () Int)
(declare-fun x3548 () Int)
(declare-fun x2097 () x1923)
(declare-fun x1916 () Int)
(declare-fun x1978 () Int)
(declare-fun x727 () Bool)
(declare-fun x2848 () Int)
(declare-fun x18 () Int)
(declare-fun x3231 () Bool)
(declare-fun x1384 () Int)
(declare-fun x2487 (x1923) Int)
(declare-fun x1798 () Bool)
(declare-fun x2082 () Int)
(declare-fun x2387 () Int)
(declare-fun x953 () Bool)
(declare-fun x3746 () Int)
(declare-fun x109 () Bool)
(declare-fun x2060 () Bool)
(declare-fun x1360 () Bool)
(declare-fun x1209 () Bool)
(declare-fun x3459 () Int)
(declare-fun x2239 () Int)
(declare-fun x357 () Bool)
(declare-fun x3347 () x1923)
(declare-fun x3610 () Int)
(declare-fun x1280 () x1923)
(declare-fun x3218 () Bool)
(declare-fun x4295 () Bool)
(declare-fun x2084 () Int)
(declare-fun x3577 () Int)
(declare-fun x2238 () Int)
(declare-fun x4935 () Bool)
(declare-fun x1364 () Int)
(declare-fun x1185 () Bool)
(declare-fun x840 (Int) Int)
(declare-fun x3467 () Bool)
(declare-fun x3386 () Bool)
(declare-fun x3106 () Int)
(declare-fun x3612 () Int)
(declare-fun x1324 () Int)
(declare-fun x1443 () Int)
(declare-fun x3824 () Bool)
(declare-fun x3367 () Int)
(declare-fun x2377 () Int)
(declare-fun x98 () Int)
(declare-fun x2570 () Int)
(declare-fun x1674 () Bool)
(declare-fun x4053 () Int)
(declare-fun x1416 () Int)
(declare-fun x1530 () Bool)
(declare-fun x107 () Int)
(declare-fun x2432 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x2697 () Bool)
(declare-fun x385 () Bool)
(declare-fun x697 () Int)
(declare-fun x4229 () Int)
(declare-fun x1781 () Int)
(declare-fun x4052 () Bool)
(declare-fun x3711 () Int)
(declare-fun x1124 () Int)
(declare-fun x4626 () Int)
(declare-fun x1256 () Bool)
(declare-fun x256 () Int)
(declare-fun x1462 () Int)
(declare-fun x3892 () Int)
(declare-fun x3876 () Int)
(declare-fun x4571 () Int)
(declare-fun x2461 () Int)
(declare-fun x2349 () Int)
(declare-fun x395 () Bool)
(declare-fun x1206 () Int)
(declare-fun x768 () Int)
(declare-fun x4475 () Int)
(declare-fun x4870 () Bool)
(declare-fun x274 () Bool)
(declare-fun x4115 () Int)
(declare-fun x776 () Int)
(declare-fun x74 () Bool)
(declare-fun x1110 () Int)
(declare-fun x404 () Int)
(declare-fun x2781 () Int)
(declare-fun x3198 () Bool)
(declare-fun x838 () Bool)
(declare-fun x2394 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x2836 () Int)
(declare-fun x4512 () Bool)
(declare-fun x3418 () Int)
(declare-fun x115 () Bool)
(declare-fun x748 () Bool)
(declare-fun x635 () x1923)
(declare-fun x2842 () Int)
(declare-fun x3691 () Int)
(declare-fun x3340 () Int)
(declare-fun x371 () Bool)
(declare-fun x3402 () Int)
(declare-fun x387 () Bool)
(declare-fun x1653 () x1923)
(declare-fun x2251 () Int)
(declare-fun x3916 () x1923)
(declare-fun x4078 () Int)
(declare-fun x1276 () Int)
(declare-fun x1027 () Bool)
(declare-fun x232 () Int)
(declare-fun x906 () x1923)
(declare-fun x2908 () Int)
(declare-fun x1844 () Int)
(declare-fun x703 () Int)
(declare-fun x579 () x1923)
(declare-fun x986 () Int)
(declare-fun x3681 () Int)
(declare-fun x4729 () x1923)
(declare-fun x3091 () x1923)
(declare-fun x3544 () Int)
(declare-fun x293 () Int)
(declare-fun x4194 () x1923)
(declare-fun x4524 () Bool)
(declare-fun x3180 () Int)
(declare-fun x3980 () x1923)
(declare-fun x308 () Int)
(declare-fun x3951 () Bool)
(declare-fun x4689 () Bool)
(declare-fun x2585 () Int)
(declare-fun x4371 () Int)
(declare-fun x1997 () Bool)
(declare-fun x2213 () Int)
(declare-fun x4746 () Int)
(declare-fun x4939 () Int)
(declare-fun x138 () Int)
(declare-fun x2455 () Bool)
(declare-fun x2465 () Int)
(declare-fun x1033 () Int)
(declare-fun x3718 () Int)
(declare-fun x3154 () Int)
(declare-fun x4293 () Int)
(declare-fun x1115 () Int)
(declare-fun x4528 () Bool)
(declare-fun x1269 () Int)
(declare-fun x823 () Bool)
(declare-fun x1679 () Bool)
(declare-fun x2472 () Bool)
(declare-fun x488 () Int)
(declare-fun x567 () x1923)
(declare-fun x2345 () Bool)
(declare-fun x3861 () x1923)
(declare-fun x4554 () x1923)
(declare-fun x2555 () Bool)
(declare-fun x2852 () Bool)
(declare-fun x4237 () Bool)
(declare-fun x4021 () Int)
(declare-fun x3723 () Bool)
(declare-fun x1985 () Bool)
(declare-fun x1234 () Int)
(declare-fun x1634 () Int)
(declare-fun x3441 () Bool)
(declare-fun x4642 () Int)
(declare-fun x4159 () Bool)
(declare-fun x1660 () Bool)
(declare-fun x4795 () Bool)
(declare-fun x4415 () Bool)
(declare-fun x1406 () Bool)
(declare-fun x2485 () Bool)
(declare-fun x2677 () Bool)
(declare-fun x1186 () Int)
(declare-fun x4807 () Bool)
(declare-fun x686 () Int)
(declare-fun x1582 () Bool)
(declare-fun x1199 () Int)
(declare-fun x2652 () Int)
(declare-fun x2354 () Int)
(declare-fun x1723 () Int)
(declare-fun x4062 () Int)
(declare-fun x1104 () Bool)
(declare-fun x4500 () Int)
(declare-fun x4374 () x1923)
(declare-fun x2263 () Int)
(declare-fun x2895 () Bool)
(declare-fun x661 () Int)
(declare-fun x735 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x1444 () Int)
(declare-fun x2581 () Bool)
(declare-fun x3775 () Bool)
(declare-fun x2620 () Int)
(declare-fun x1890 () x1923)
(declare-fun x4175 () x1923)
(declare-fun x1148 () Bool)
(declare-fun x2622 () Int)
(declare-fun x2593 () Bool)
(declare-fun x4860 () Bool)
(declare-fun x541 () Bool)
(declare-fun x3105 () Bool)
(declare-fun x1346 () Int)
(declare-fun x466 () Bool)
(declare-fun x2724 () Bool)
(declare-fun x283 () Int)
(declare-fun x1343 (Int) Int)
(declare-fun x3759 () x1923)
(declare-fun x616 () Bool)
(declare-fun x2151 () x1923)
(declare-fun x1646 () Int)
(declare-fun x1120 () x1923)
(declare-fun x2443 () Int)
(declare-fun x2471 () x1923)
(declare-fun x3080 () Bool)
(declare-fun x1355 () Bool)
(declare-fun x2872 () Bool)
(declare-fun x2364 () Bool)
(declare-fun x2002 () Bool)
(declare-fun x3719 () x1923)
(declare-fun x3758 () Bool)
(declare-fun x3242 () Bool)
(declare-fun x430 () Bool)
(declare-fun x698 () Int)
(declare-fun x3205 () Bool)
(declare-fun x4793 () Bool)
(declare-fun x3792 () x1923)
(declare-fun x2957 () Int)
(declare-fun x407 () Bool)
(declare-fun x1975 (x1923) Int)
(declare-fun x4296 () Bool)
(declare-fun x1709 () x1923)
(declare-fun x381 () Bool)
(declare-fun x1655 () Int)
(declare-fun x482 () Int)
(declare-fun x3098 () Int)
(declare-fun x1323 () Int)
(declare-fun x4174 () Bool)
(declare-fun x602 () Bool)
(declare-fun x2150 () x1923)
(declare-fun x738 () Bool)
(declare-fun x3786 () Bool)
(declare-fun x2854 () x1923)
(declare-fun x452 () Bool)
(declare-fun x1170 () Bool)
(declare-fun x1814 () Int)
(declare-fun x4064 () Int)
(declare-fun x1365 () Bool)
(declare-fun x4822 () Int)
(declare-fun x38 () Bool)
(declare-fun x2320 () Int)
(declare-fun x1902 () Int)
(declare-fun x3910 () Int)
(declare-fun x361 () Int)
(declare-fun x3854 () Int)
(declare-fun x3052 () x1923)
(declare-fun x1005 () Int)
(declare-fun x3337 () Bool)
(declare-fun x3696 () Int)
(declare-fun x26 () Int)
(declare-fun x4193 () Bool)
(declare-fun x3506 () Bool)
(declare-fun x639 () Int)
(declare-fun x160 () Bool)
(declare-fun x2589 () Bool)
(declare-fun x1192 () Int)
(declare-fun x1922 () Bool)
(declare-fun x4328 () Int)
(declare-fun x908 () Int)
(declare-fun x4765 () Bool)
(declare-fun x3265 () Int)
(declare-fun x1687 () x1923)
(declare-fun x3382 () Int)
(declare-fun x2657 () Bool)
(declare-fun x4825 () Int)
(declare-fun x3595 () Bool)
(declare-fun x4700 () Int)
(declare-fun x4307 () Int)
(declare-fun x1876 () Int)
(declare-fun x2207 () Bool)
(declare-fun x191 (x1923) Int)
(declare-fun x4203 () Int)
(declare-fun x673 () Int)
(declare-fun x298 () Bool)
(declare-fun x1915 () Int)
(declare-fun x2510 () x1923)
(declare-fun x2124 () Bool)
(declare-fun x2981 () Bool)
(declare-fun x786 () Bool)
(declare-fun x3764 () x1923)
(declare-fun x2288 () Int)
(declare-fun x730 () Int)
(declare-fun x3391 () Int)
(declare-fun x4695 () x1923)
(declare-fun x3570 () Bool)
(declare-fun x323 () Int)
(declare-fun x3673 () Int)
(declare-fun x226 () x1923)
(declare-fun x1001 () Int)
(declare-fun x4843 () Int)
(declare-fun x2939 () Bool)
(declare-fun x2093 () Int)
(declare-fun x1532 (x1923) Int)
(declare-fun x2973 () Int)
(declare-fun x1692 () Int)
(declare-fun x3508 () Int)
(declare-fun x675 () Bool)
(declare-fun x4704 () Bool)
(declare-fun x4631 () Bool)
(declare-fun x2850 () Int)
(declare-fun x1707 () x1923)
(declare-fun x170 () Int)
(declare-fun x4655 (x1923) Int)
(declare-fun x2331 () Bool)
(declare-fun x732 () Int)
(declare-fun x3777 () Int)
(declare-fun x943 () Int)
(declare-fun x4767 (Int) Int)
(declare-fun x1489 () Int)
(declare-fun x1460 () Bool)
(declare-fun x2042 () Int)
(declare-fun x744 () Int)
(declare-fun x4645 () Int)
(declare-fun x2856 () Bool)
(declare-fun x3004 () Bool)
(declare-fun x408 (x1923) Int)
(declare-fun x2467 () Int)
(declare-fun x3760 () Int)
(declare-fun x3905 () Int)
(declare-fun x4262 () Int)
(declare-fun x1385 () Bool)
(declare-fun x876 () Bool)
(declare-fun x3770 () Bool)
(declare-fun x137 () Int)
(declare-fun x2282 () Bool)
(declare-fun x3199 () Bool)
(declare-fun x1277 () Bool)
(declare-fun x3113 () Int)
(declare-fun x3429 (Int) Int)
(declare-fun x784 () Bool)
(declare-fun x391 () Int)
(declare-fun x3724 () Int)
(declare-fun x1780 () Int)
(declare-fun x3628 () Int)
(declare-fun x4275 () Bool)
(declare-fun x4291 () Bool)
(declare-fun x2763 () Bool)
(declare-fun x2779 () Int)
(declare-fun x3061 (x1923) Int)
(declare-fun x3050 () Int)
(declare-fun x2825 () Int)
(declare-fun x4225 (Int) Int)
(declare-fun x2675 () Bool)
(declare-fun x3991 () Bool)
(declare-fun x165 () x1923)
(declare-fun x4136 () Bool)
(declare-fun x2253 () Int)
(declare-fun x1570 () Int)
(declare-fun x3135 () Bool)
(declare-fun x3192 () Bool)
(declare-fun x3893 () Int)
(declare-fun x2679 () Bool)
(declare-fun x4862 () Int)
(declare-fun x4742 () Bool)
(declare-fun x2999 () Bool)
(declare-fun x693 () Int)
(declare-fun x1084 () Bool)
(declare-fun x3221 () Bool)
(declare-fun x3862 () Bool)
(declare-fun x382 () Bool)
(declare-fun x4529 () Bool)
(declare-fun x1452 () Bool)
(declare-fun x3970 () Bool)
(declare-fun x2562 () Bool)
(declare-fun x3032 () Int)
(declare-fun x3197 () Int)
(declare-fun x235 () Int)
(declare-fun x2931 () Bool)
(declare-fun x1191 () Int)
(declare-fun x1824 () Int)
(declare-fun x4739 () Bool)
(declare-fun x2959 () Bool)
(declare-fun x726 () Bool)
(declare-fun x1016 () Int)
(declare-fun x4550 () Int)
(declare-fun x2079 () Int)
(declare-fun x667 () Int)
(declare-fun x2637 () Bool)
(declare-fun x620 () Bool)
(declare-fun x1571 () Bool)
(declare-fun x610 () Bool)
(declare-fun x1015 () Int)
(declare-fun x2583 () Bool)
(declare-fun x3437 () Int)
(declare-fun x1013 () Bool)
(declare-fun x842 () Bool)
(declare-fun x676 () Int)
(declare-fun x145 () Int)
(declare-fun x1004 () Int)
(declare-fun x2502 () Int)
(declare-fun x4180 () Int)
(declare-fun x3090 () Int)
(declare-fun x2335 () Int)
(declare-fun x1568 () Int)
(declare-fun x4187 () Int)
(declare-fun x3350 () Bool)
(declare-fun x2009 () Int)
(declare-fun x544 () Bool)
(declare-fun x3597 () Bool)
(declare-fun x2098 () Bool)
(declare-fun x2660 () Int)
(declare-fun x1859 () Bool)
(declare-fun x2370 () Int)
(declare-fun x2528 () Bool)
(declare-fun x791 () Bool)
(declare-fun x3370 () Int)
(declare-fun x3101 () Bool)
(declare-fun x2047 () Int)
(declare-fun x2076 () Int)
(declare-fun x4687 () Int)
(declare-fun x4789 () x1923)
(declare-fun x4235 () Int)
(declare-fun x380 () Bool)
(declare-fun x2859 () Int)
(declare-fun x1228 () x1923)
(declare-fun x218 () Bool)
(declare-fun x324 () Bool)
(declare-fun x4063 () x1923)
(declare-fun x486 () x1923)
(declare-fun x1506 () Bool)
(declare-fun x4897 () Bool)
(declare-fun x141 () Int)
(declare-fun x1733 () Int)
(declare-fun x4492 () Bool)
(declare-fun x2259 () x1923)
(declare-fun x4777 () Int)
(declare-fun x753 () Bool)
(declare-fun x1257 () Int)
(declare-fun x2928 () x1923)
(declare-fun x3303 () Bool)
(declare-fun x23 () Int)
(declare-fun x3564 () Int)
(declare-fun x2631 () Bool)
(declare-fun x2938 () Int)
(declare-fun x4318 () Int)
(declare-fun x2308 () Int)
(declare-fun x2935 () Bool)
(declare-fun x4611 () Int)
(declare-fun x3996 () Bool)
(declare-fun x2971 () Bool)
(declare-fun x1837 () Bool)
(declare-fun x236 () x1923)
(declare-fun x1850 () Int)
(declare-fun x1139 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x3585 () Bool)
(declare-fun x91 () Int)
(declare-fun x4366 () x1923)
(declare-fun x2362 () Bool)
(declare-fun x2158 () Bool)
(declare-fun x3755 () Int)
(declare-fun x316 () Int)
(declare-fun x3785 () Bool)
(declare-fun x777 () Bool)
(declare-fun x4267 () Int)
(declare-fun x2682 () Int)
(declare-fun x2966 () x1923)
(declare-fun x4259 () Bool)
(declare-fun x4026 () Int)
(declare-fun x504 () Bool)
(declare-fun x1868 () Bool)
(declare-fun x654 () Int)
(declare-fun x2603 () Bool)
(declare-fun x128 () Int)
(declare-fun x3400 () x1923)
(declare-fun x122 () x1923)
(declare-fun x3631 () Bool)
(declare-fun x722 () Bool)
(declare-fun x682 () Bool)
(declare-fun x1622 () Bool)
(declare-fun x4016 () Int)
(declare-fun x2795 () Bool)
(declare-fun x2851 () Bool)
(declare-fun x2268 () Int)
(declare-fun x4826 (Int) Int)
(declare-fun x1932 () x1923)
(declare-fun x194 () Bool)
(declare-fun x4842 () Int)
(declare-fun x3137 () Bool)
(declare-fun x3948 () Bool)
(declare-fun x4049 () x1923)
(declare-fun x990 () Int)
(declare-fun x3826 () Bool)
(declare-fun x1883 () Bool)
(declare-fun x2586 () Int)
(declare-fun x1292 () Bool)
(declare-fun x3283 () Bool)
(declare-fun x3099 () Bool)
(declare-fun x3878 () Bool)
(declare-fun x1951 () x1923)
(declare-fun x3458 () Bool)
(declare-fun x4923 () Bool)
(declare-fun x2627 () Bool)
(declare-fun x2829 () Bool)
(declare-fun x2881 () Bool)
(declare-fun x1552 () Int)
(declare-fun x3470 () Bool)
(declare-fun x296 () Bool)
(declare-fun x4008 () Int)
(declare-fun x828 () Bool)
(declare-fun x247 () Int)
(declare-fun x2028 () Bool)
(declare-fun x1434 () Bool)
(declare-fun x3162 () x1923)
(declare-fun x3803 () Int)
(declare-fun x4222 () Int)
(declare-fun x1178 () Int)
(declare-fun x2512 () Int)
(declare-fun x501 () Int)
(declare-fun x1697 () Bool)
(declare-fun x1173 () Bool)
(declare-fun x1694 () Bool)
(declare-fun x2026 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x1103 () Int)
(declare-fun x2317 () Int)
(declare-fun x2038 () Int)
(declare-fun x4770 () Bool)
(declare-fun x574 () Bool)
(declare-fun x2748 () Bool)
(declare-fun x3543 () Bool)
(declare-fun x2283 () x1923)
(declare-fun x4350 () Int)
(declare-fun x4522 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x881 () Bool)
(declare-fun x337 () Int)
(declare-fun x4551 () Bool)
(declare-fun x3078 () Int)
(declare-fun x2265 () Int)
(declare-fun x4903 () Bool)
(declare-fun x800 () Int)
(declare-fun x1945 () Int)
(declare-fun x2606 () Bool)
(declare-fun x1377 () Int)
(declare-fun x1188 () Bool)
(declare-fun x3511 () x1923)
(declare-fun x589 () Int)
(declare-fun x2134 () Bool)
(declare-fun x2738 () Bool)
(declare-fun x2406 () Bool)
(declare-fun x2023 () Int)
(declare-fun x1338 () Bool)
(declare-fun x678 () Bool)
(declare-fun x1651 (x1923) Int)
(declare-fun x4188 () Int)
(declare-fun x2982 () x1923)
(declare-fun x1852 () Int)
(declare-fun x4189 () Int)
(declare-fun x2877 () Bool)
(declare-fun x1904 () Bool)
(declare-fun x1223 () Bool)
(declare-fun x843 () Int)
(declare-fun x152 () Int)
(declare-fun x4618 () Int)
(declare-fun x4629 () Bool)
(declare-fun x2866 () Bool)
(declare-fun x3968 () Int)
(declare-fun x4681 () Bool)
(declare-fun x3474 () Int)
(declare-fun x3376 () Bool)
(declare-fun x4867 () Bool)
(declare-fun x3056 () Int)
(declare-fun x4865 () Int)
(declare-fun x1957 () Int)
(declare-fun x3805 () Int)
(declare-fun x445 () Int)
(declare-fun x4219 () Bool)
(declare-fun x3179 () Int)
(declare-fun x2431 () Bool)
(declare-fun x4542 () x1923)
(declare-fun x4355 () Bool)
(declare-fun x754 () x1923)
(declare-fun x4406 () x1923)
(declare-fun x617 () x1923)
(declare-fun x1809 () x1923)
(declare-fun x4679 () Bool)
(declare-fun x28 () Bool)
(declare-fun x3072 () Int)
(declare-fun x3070 () Bool)
(declare-fun x290 () Bool)
(declare-fun x3404 () Bool)
(declare-fun x4609 () Bool)
(declare-fun x3866 () Bool)
(declare-fun x4027 () Bool)
(declare-fun x3660 () Int)
(declare-fun x4419 () Int)
(declare-fun x173 () Bool)
(declare-fun x3913 () Int)
(declare-fun x2833 () Int)
(declare-fun x4502 () Bool)
(declare-fun x2287 () Int)
(declare-fun x3186 () Int)
(declare-fun x3010 () Int)
(declare-fun x593 () Bool)
(declare-fun x3033 () Bool)
(declare-fun x196 () Int)
(declare-fun x3838 () Int)
(declare-fun x2212 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x167 () Int)
(declare-fun x1219 () Int)
(declare-fun x1127 () Bool)
(declare-fun x3143 () x1923)
(declare-fun x2165 () Bool)
(declare-fun x2691 () Bool)
(declare-fun x3220 () Bool)
(declare-fun x3411 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x1187 () Bool)
(declare-fun x4179 () Bool)
(declare-fun x3849 () Bool)
(declare-fun x3103 () Int)
(declare-fun x2873 () Bool)
(declare-fun x132 () Bool)
(declare-fun x586 () Bool)
(declare-fun x1973 () x1923)
(declare-fun x352 () x1923)
(declare-fun x4390 () Bool)
(declare-fun x3236 (Int) Int)
(declare-fun x328 () Bool)
(declare-fun x3945 () Int)
(declare-fun x343 () Bool)
(declare-fun x4892 () Int)
(declare-fun x1116 () Bool)
(declare-fun x648 () Bool)
(declare-fun x3260 () Bool)
(declare-fun x3983 () Bool)
(declare-fun x1279 () Int)
(declare-fun x2650 () Bool)
(declare-fun x4250 () Int)
(declare-fun x1391 () Int)
(declare-fun x1066 () Int)
(declare-fun x67 () Bool)
(declare-fun x2493 () Int)
(declare-fun x1964 () Bool)
(declare-fun x1105 () Bool)
(declare-fun x3426 () Int)
(declare-fun x3750 () Bool)
(declare-fun x436 () Int)
(declare-fun x796 () Bool)
(declare-fun x1875 () Bool)
(declare-fun x3255 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x2380 () Bool)
(declare-fun x4447 () Bool)
(declare-fun x1639 () Int)
(declare-fun x3002 () Int)
(declare-fun x525 () Int)
(declare-fun x3501 () Bool)
(declare-fun x3064 () Bool)
(declare-fun x1731 () Int)
(declare-fun x2325 () Int)
(declare-fun x3650 () Int)
(declare-fun x1059 () Int)
(declare-fun x2538 () Bool)
(declare-fun x494 () Bool)
(declare-fun x3392 () Bool)
(declare-fun x2968 (Int Int) Int)
(declare-fun x4272 () Bool)
(declare-fun x1691 () Bool)
(declare-fun x2870 () Bool)
(declare-fun x2577 () Bool)
(declare-fun x4239 () Bool)
(declare-fun x3739 () Int)
(declare-fun x62 () Bool)
(declare-fun x3157 () Bool)
(declare-fun x3728 () Bool)
(declare-fun x898 () Bool)
(declare-fun x4887 () Int)
(declare-fun x974 () Int)
(declare-fun x492 () Int)
(declare-fun x287 () Int)
(declare-fun x1777 () Bool)
(declare-fun x2046 () Int)
(declare-fun x2483 () Int)
(declare-fun x1953 () Int)
(declare-fun x533 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x3917 () x1923)
(declare-fun x4327 () Int)
(declare-fun x3435 () Bool)
(declare-fun x4330 () Int)
(declare-fun x3092 () Int)
(declare-fun x411 () Int)
(declare-fun x1474 () Bool)
(declare-fun x2972 () Bool)
(declare-fun x2628 () Bool)
(declare-fun x928 () Bool)
(declare-fun x307 () Int)
(declare-fun x3833 () Bool)
(declare-fun x1877 (x1923) Int)
(declare-fun x3848 () Int)
(declare-fun x3733 () Int)
(declare-fun x2140 () Bool)
(declare-fun x4688 () Int)
(declare-fun x1750 () Bool)
(declare-fun x3532 () Int)
(declare-fun x396 () Bool)
(declare-fun x3023 () Bool)
(declare-fun x3153 () Int)
(declare-fun x375 () Int)
(declare-fun x3887 () Bool)
(declare-fun x923 () Bool)
(declare-fun x2523 () x1923)
(declare-fun x2731 () Int)
(declare-fun x1392 () Bool)
(declare-fun x416 () x1923)
(declare-fun x2715 () x1923)
(declare-fun x1380 () Int)
(declare-fun x2339 () Bool)
(declare-fun x3622 () x1923)
(declare-fun x762 () Bool)
(declare-fun x808 () Bool)
(declare-fun x4534 () x1923)
(declare-fun x1736 (x1923) Int)
(declare-fun x3286 () Int)
(declare-fun x1095 () Bool)
(declare-fun x3736 () x1923)
(declare-fun x334 () Bool)
(declare-fun x523 () Int)
(declare-fun x2358 (Int Int) Int)
(declare-fun x964 () Bool)
(declare-fun x233 () x1923)
(declare-fun x2812 () Bool)
(declare-fun x1543 (x1923) Int)
(declare-fun x2342 () Bool)
(declare-fun x4758 () Bool)
(declare-fun x4913 () Bool)
(declare-fun x2077 () Int)
(declare-fun x855 () Int)
(declare-fun x1982 () Int)
(declare-fun x1131 () Int)
(declare-fun x329 () x1923)
(declare-fun x3127 () x1923)
(declare-fun x3282 () Bool)
(declare-fun x149 () Int)
(declare-fun x2361 () Bool)
(declare-fun x2721 () Bool)
(declare-fun x2616 () Bool)
(declare-fun x75 () Bool)
(declare-fun x873 () Bool)
(declare-fun x4581 () Int)
(declare-fun x2952 () Int)
(declare-fun x3990 (Int) Int)
(declare-fun x581 () x1923)
(declare-fun x127 () Bool)
(declare-fun x2200 () Bool)
(declare-fun x3643 () Int)
(declare-fun x1817 () x1923)
(declare-fun x1218 () Int)
(declare-fun x1681 () x1923)
(declare-fun x3074 () Bool)
(declare-fun x4426 () Bool)
(declare-fun x4218 () Bool)
(declare-fun x4102 () Bool)
(declare-fun x3450 () Bool)
(declare-fun x3022 () Int)
(declare-fun x65 () Bool)
(declare-fun x1114 () Bool)
(declare-fun x752 () Int)
(declare-fun x491 () Int)
(declare-fun x2847 () x1923)
(declare-fun x4519 () Int)
(declare-fun x3671 () Bool)
(declare-fun x888 () Int)
(declare-fun x1843 () Int)
(declare-fun x1971 () Int)
(declare-fun x4530 () Bool)
(declare-fun x319 () Bool)
(declare-fun x369 () Int)
(declare-fun x4352 () Bool)
(declare-fun x645 () Bool)
(declare-fun x3590 () Bool)
(declare-fun x1248 () Int)
(declare-fun x1961 () Bool)
(declare-fun x1311 () Bool)
(declare-fun x386 () Int)
(declare-fun x3842 () x1923)
(declare-fun x3537 () Bool)
(declare-fun x221 () Int)
(declare-fun x4321 () Bool)
(declare-fun x3918 () Bool)
(declare-fun x3006 () Bool)
(declare-fun x1713 () Bool)
(declare-fun x1181 () Int)
(declare-fun x4598 () Bool)
(declare-fun x664 () x1923)
(declare-fun x3181 () Bool)
(declare-fun x175 () Bool)
(declare-fun x968 (x1923) Int)
(declare-fun x932 () Int)
(declare-fun x2846 () Bool)
(declare-fun x1347 () x1923)
(declare-fun x3018 () Int)
(declare-fun x3170 () Int)
(declare-fun x4643 () Int)
(declare-fun x47 () Int)
(declare-fun x4168 () Int)
(declare-fun x1765 () Int)
(declare-fun x2450 () Bool)
(declare-fun x450 () x1923)
(declare-fun x245 () Int)
(declare-fun x3732 () Int)
(declare-fun x397 () Int)
(declare-fun x4139 () Bool)
(declare-fun x3336 () Int)
(declare-fun x4298 () Int)
(declare-fun x706 () Int)
(declare-fun x1250 () Bool)
(declare-fun x2169 () Bool)
(declare-fun x2381 () Int)
(declare-fun x4499 () Bool)
(declare-fun x4839 () Bool)
(declare-fun x4901 () Int)
(declare-fun x88 () Bool)
(declare-fun x3656 () Bool)
(declare-fun x956 () Bool)
(declare-fun x2955 () Int)
(declare-fun x3993 () Bool)
(declare-fun x2199 () Bool)
(declare-fun x629 () Int)
(declare-fun x1633 () Int)
(declare-fun x373 () x1923)
(declare-fun x483 () Int)
(declare-fun x4794 () Int)
(declare-fun x912 () Bool)
(declare-fun x4579 () Int)
(declare-fun x262 () Int)
(declare-fun x1880 () x1923)
(declare-fun x4443 () Bool)
(declare-fun x4452 () Int)
(declare-fun x2930 () x1923)
(declare-fun x1637 () x1923)
(declare-fun x651 () x1923)
(declare-fun x414 () Int)
(declare-fun x2507 () Bool)
(declare-fun x1293 () Int)
(declare-fun x3125 () x1923)
(declare-fun x2428 () Bool)
(declare-fun x892 () Int)
(declare-fun x580 () Int)
(declare-fun x4245 () Int)
(declare-fun x4451 () Int)
(declare-fun x154 () Bool)
(declare-fun x805 () Bool)
(declare-fun x3327 () Int)
(declare-fun x215 () Int)
(declare-fun x3647 () Bool)
(declare-fun x1270 () x1923)
(declare-fun x3503 () Bool)
(declare-fun x785 () Bool)
(declare-fun x2055 () Int)
(declare-fun x1054 () Int)
(declare-fun x3342 () Bool)
(declare-fun x2642 () Bool)
(declare-fun x3894 () Int)
(declare-fun x2757 () Bool)
(declare-fun x3586 () Int)
(declare-fun x3747 () Int)
(declare-fun x362 () Bool)
(declare-fun x2135 () Int)
(declare-fun x292 () Int)
(declare-fun x3444 () Int)
(declare-fun x3898 () x1923)
(declare-fun x1712 () x1923)
(declare-fun x3442 () Int)
(declare-fun x1547 () Int)
(declare-fun x2526 () Bool)
(declare-fun x2889 () Int)
(declare-fun x118 () Bool)
(declare-fun x2843 () x1923)
(declare-fun x3328 () Bool)
(declare-fun x1536 () Bool)
(declare-fun x4403 () Bool)
(declare-fun x4866 () Bool)
(declare-fun x2486 () Bool)
(declare-fun x2759 () Bool)
(declare-fun x229 () Bool)
(declare-fun x294 () Bool)
(declare-fun x3695 () Int)
(declare-fun x3924 () Int)
(declare-fun x2070 () x1923)
(declare-fun x4732 (Int) x1923)
(declare-fun x2293 () Bool)
(declare-fun x299 () Int)
(declare-fun x2712 () Bool)
(declare-fun x1378 () Int)
(declare-fun x52 () Bool)
(declare-fun x135 () Bool)
(declare-fun x3379 () Bool)
(declare-fun x3934 () Bool)
(declare-fun x765 () Int)
(declare-fun x4348 () Bool)
(declare-fun x71 () Bool)
(declare-fun x1728 () Bool)
(declare-fun x3293 () Bool)
(declare-fun x2665 () Bool)
(declare-fun x3668 () Int)
(declare-fun x2075 () Bool)
(declare-fun x3011 () Bool)
(declare-fun x477 () Int)
(declare-fun x240 () Bool)
(declare-fun x121 () Bool)
(declare-fun x2505 () Int)
(declare-fun x4907 () Bool)
(declare-fun x3687 () Int)
(declare-fun x3793 () Int)
(declare-fun x891 () Bool)
(declare-fun x1987 (Int) Int)
(declare-fun x3330 () Int)
(declare-fun x1002 () Bool)
(declare-fun x4514 () Bool)
(declare-fun x496 () Bool)
(declare-fun x174 () x1923)
(declare-fun x3461 () Int)
(declare-fun x4153 () Bool)
(declare-fun x4656 () Bool)
(declare-fun x4196 () Bool)
(declare-fun x1955 () Bool)
(declare-fun x845 () x1923)
(declare-fun x4367 () Int)
(declare-fun x708 () Bool)
(declare-fun x3912 () x1923)
(declare-fun x2147 () Bool)
(declare-fun x2898 () Bool)
(declare-fun x2517 () Int)
(declare-fun x1268 () Bool)
(declare-fun x3510 () Int)
(declare-fun x1229 () Int)
(declare-fun x4902 () Int)
(declare-fun x3185 () Bool)
(declare-fun x2869 () x1923)
(declare-fun x1754 () Int)
(declare-fun x4878 () Bool)
(declare-fun x1081 () Bool)
(declare-fun x3809 () Int)
(declare-fun x3841 () Int)
(declare-fun x859 () Bool)
(declare-fun x2302 () x1923)
(declare-fun x775 () Bool)
(declare-fun x2154 () Bool)
(declare-fun x1819 () Bool)
(declare-fun x4495 () x1923)
(declare-fun x1807 () Bool)
(declare-fun x511 () Bool)
(declare-fun x3164 () Int)
(declare-fun x3871 () Int)
(declare-fun x3047 () Bool)
(declare-fun x1298 () x1923)
(declare-fun x3644 (Int) Int)
(declare-fun x4532 () Int)
(declare-fun x4683 () Bool)
(declare-fun x225 () Bool)
(declare-fun x210 () Int)
(declare-fun x4628 () Bool)
(declare-fun x1658 () Int)
(declare-fun x1344 () Int)
(declare-fun x4071 () x1923)
(declare-fun x1596 () Int)
(declare-fun x4788 () Int)
(declare-fun x1249 () x1923)
(declare-fun x2273 () Int)
(declare-fun x4696 () Bool)
(declare-fun x4510 () Int)
(declare-fun x2270 () Bool)
(declare-fun x4785 () x1923)
(declare-fun x2245 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x2166 () Int)
(declare-fun x792 () Bool)
(declare-fun x1553 () Bool)
(declare-fun x497 () Int)
(declare-fun x190 () Bool)
(declare-fun x4537 (x1923) Int)
(declare-fun x2734 () Int)
(declare-fun x2519 () Bool)
(declare-fun x526 () Bool)
(declare-fun x601 () Int)
(declare-fun x4242 () Int)
(declare-fun x2440 () Bool)
(declare-fun x674 () Int)
(declare-fun x2902 () Int)
(declare-fun x50 () Bool)
(declare-fun x33 () Int)
(declare-fun x4637 () Int)
(declare-fun x200 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x179 () Int)
(declare-fun x1212 (x1923) Int)
(declare-fun x3481 () Int)
(declare-fun x2830 () Bool)
(declare-fun x630 () Int)
(declare-fun x3962 () Int)
(declare-fun x834 () Bool)
(declare-fun x1764 () Bool)
(declare-fun x1198 () Int)
(declare-fun x4874 () Int)
(declare-fun x2760 () x1923)
(declare-fun x1534 () Int)
(declare-fun x3683 () Bool)
(declare-fun x767 () Int)
(declare-fun x3083 () Bool)
(declare-fun x438 () Bool)
(declare-fun x4796 () Bool)
(declare-fun x2142 () Int)
(declare-fun x3852 () Bool)
(declare-fun x3566 () Bool)
(declare-fun x103 () Int)
(declare-fun x453 () Bool)
(declare-fun x2749 () x1923)
(declare-fun x3929 () Bool)
(declare-fun x4805 () x1923)
(declare-fun x1737 () Bool)
(declare-fun x2755 () Int)
(declare-fun x1309 () Int)
(declare-fun x4372 () Int)
(declare-fun x3206 () Bool)
(declare-fun x549 (Int) Int)
(declare-fun x168 () Bool)
(declare-fun x4113 () Int)
(declare-fun x963 () Bool)
(declare-fun x3124 () Bool)
(declare-fun x4263 () x1923)
(declare-fun x1445 () Int)
(declare-fun x2332 () Bool)
(declare-fun x4140 () Int)
(declare-fun x4305 () x1923)
(declare-fun x2893 (Int) Int)
(declare-fun x1052 () Bool)
(declare-fun x24 () Int)
(declare-fun x4459 () Int)
(declare-fun x2566 () Int)
(declare-fun x43 () Bool)
(declare-fun x3725 () Int)
(declare-fun x3812 () Int)
(declare-fun x2950 () Int)
(declare-fun x1851 () Bool)
(declare-fun x1362 () Bool)
(declare-fun x2411 () Bool)
(declare-fun x1610 () Int)
(declare-fun x4404 () Int)
(declare-fun x3816 () Bool)
(declare-fun x2369 () Bool)
(declare-fun x368 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x1369 () Int)
(declare-fun x1946 () Bool)
(declare-fun x1618 () Int)
(declare-fun x4736 () Bool)
(declare-fun x2879 () Bool)
(declare-fun x3273 () Bool)
(declare-fun x2863 () Bool)
(declare-fun x2732 () x1923)
(declare-fun x4718 () Int)
(declare-fun x1408 () Bool)
(declare-fun x707 () Bool)
(declare-fun x11 (x1923) Int)
(declare-fun x3835 () Int)
(declare-fun x3256 () Int)
(declare-fun x3693 () Bool)
(declare-fun x3523 () Int)
(declare-fun x1858 () Bool)
(declare-fun x3554 () Bool)
(declare-fun x1664 () Int)
(declare-fun x1831 () Int)
(declare-fun x1865 () Bool)
(declare-fun x4072 () Bool)
(declare-fun x4467 () Int)
(declare-fun x3110 () Int)
(declare-fun x2068 () x1923)
(declare-fun x3846 () Int)
(declare-fun x3000 () x1923)
(declare-fun x2764 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x4435 () Int)
(declare-fun x3202 () Bool)
(declare-fun x3952 () Bool)
(declare-fun x3326 () Bool)
(declare-fun x2430 () Int)
(declare-fun x4041 () Int)
(declare-fun x158 () x1923)
(declare-fun x3535 () Int)
(declare-fun x1082 () Bool)
(declare-fun x4315 () x1923)
(declare-fun x3174 () Bool)
(declare-fun x1885 () Bool)
(declare-fun x1265 () Int)
(declare-fun x4768 () Int)
(declare-fun x3614 () Bool)
(declare-fun x2521 () Int)
(declare-fun x318 () Bool)
(declare-fun x4898 () Int)
(declare-fun x3540 () Int)
(declare-fun x830 (Int) Int)
(declare-fun x885 () Bool)
(declare-fun x874 () x1923)
(declare-fun x1956 () Bool)
(declare-fun x949 () Bool)
(declare-fun x2452 () Bool)
(declare-fun x3055 () x1923)
(declare-fun x1055 () Bool)
(declare-fun x4195 () Bool)
(declare-fun x3949 () Int)
(declare-fun x2260 () Int)
(declare-fun x3360 () Bool)
(declare-fun x347 () Bool)
(declare-fun x1965 () Int)
(declare-fun x493 () Bool)
(declare-fun x1167 () Int)
(declare-fun x192 () Bool)
(declare-fun x2003 () Bool)
(declare-fun x2449 () Bool)
(declare-fun x4233 () Int)
(declare-fun x1048 () Int)
(declare-fun x3229 () Bool)
(declare-fun x2022 () Int)
(declare-fun x1345 () Int)
(declare-fun x2310 () x1923)
(declare-fun x4848 () Bool)
(declare-fun x1857 () Int)
(declare-fun x3159 () Bool)
(declare-fun x64 () Bool)
(declare-fun x2248 () Bool)
(declare-fun x4068 () Bool)
(declare-fun x751 () Bool)
(declare-fun x1935 () Int)
(declare-fun x2039 () Bool)
(declare-fun x1597 () x1923)
(declare-fun x2479 () Int)
(declare-fun x279 () Bool)
(declare-fun x2578 () Bool)
(declare-fun x650 () Int)
(declare-fun x1928 () Bool)
(declare-fun x3705 (x1923) Int)
(declare-fun x4651 () Bool)
(declare-fun x1629 () Bool)
(declare-fun x4515 () Int)
(declare-fun x1091 () Int)
(declare-fun x202 () Int)
(declare-fun x1521 () Int)
(declare-fun x1790 () Bool)
(declare-fun x2312 () Int)
(declare-fun x4134 () x1923)
(declare-fun x1429 () Int)
(declare-fun x2709 () Int)
(declare-fun x392 () Int)
(declare-fun x4876 () Bool)
(declare-fun x760 () Bool)
(declare-fun x2318 () Int)
(declare-fun x4200 () Bool)
(declare-fun x46 () x1923)
(declare-fun x4010 () Bool)
(declare-fun x1641 () Bool)
(declare-fun x3823 () Int)
(declare-fun x432 () Int)
(declare-fun x4201 () Int)
(declare-fun x172 () Bool)
(declare-fun x2563 () Int)
(declare-fun x2997 () Bool)
(declare-fun x825 () Bool)
(declare-fun x4344 () Bool)
(declare-fun x1025 () Int)
(declare-fun x1481 () Bool)
(declare-fun x4830 () Bool)
(declare-fun x4674 () Int)
(declare-fun x3574 () Int)
(declare-fun x1593 () Bool)
(declare-fun x2096 () Bool)
(declare-fun x757 () Bool)
(declare-fun x3373 () Bool)
(declare-fun x4260 () Int)
(declare-fun x4431 () Bool)
(declare-fun x3234 () Bool)
(declare-fun x3440 () Bool)
(declare-fun x3911 (Int) Int)
(declare-fun x358 () x1923)
(declare-fun x3252 () Bool)
(declare-fun x4069 () Bool)
(declare-fun x31 () Bool)
(declare-fun x3797 () Int)
(declare-fun x4668 () Bool)
(declare-fun x1699 () Int)
(declare-fun x1929 () Int)
(declare-fun x2444 () Int)
(declare-fun x4223 () Bool)
(declare-fun x2441 () Int)
(declare-fun x2405 () Int)
(declare-fun x151 () Int)
(declare-fun x1721 () Int)
(declare-fun x1690 () Bool)
(declare-fun x2820 () Bool)
(declare-fun x4015 () Int)
(declare-fun x1295 () x1923)
(declare-fun x1717 () Bool)
(declare-fun x3410 () x1923)
(declare-fun x1871 () Int)
(declare-fun x3703 () Bool)
(declare-fun x3957 () Bool)
(declare-fun x4738 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x4442 () x1923)
(declare-fun x1888 () Int)
(declare-fun x2027 () Int)
(declare-fun x681 () Int)
(declare-fun x3888 () Int)
(declare-fun x3358 () Bool)
(declare-fun x3353 () Bool)
(declare-fun x242 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x940 () x1923)
(declare-fun x4840 () Bool)
(declare-fun x3692 () Int)
(declare-fun x4563 () Bool)
(declare-fun x42 () Int)
(declare-fun x424 () Int)
(declare-fun x4711 () Int)
(declare-fun x3312 () Int)
(declare-fun x208 () Bool)
(declare-fun x4931 () Bool)
(declare-fun x3277 () Int)
(declare-fun x4844 () x1923)
(declare-fun x2509 () Int)
(declare-fun x84 () Bool)
(declare-fun x1371 () Int)
(declare-fun x595 () Int)
(declare-fun x1064 () Int)
(declare-fun x4236 () Int)
(declare-fun x3176 () Int)
(declare-fun x691 () Int)
(declare-fun x4922 () Int)
(declare-fun x4829 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x2184 () Int)
(declare-fun x3225 () Bool)
(declare-fun x3686 () Int)
(declare-fun x1581 () Bool)
(declare-fun x259 () Bool)
(declare-fun x3189 () Int)
(declare-fun x2945 () Bool)
(declare-fun x2011 () Bool)
(declare-fun x2227 () Bool)
(declare-fun x4769 () Bool)
(declare-fun x2408 () Bool)
(declare-fun x3457 () Int)
(declare-fun x422 () Int)
(declare-fun x783 () Int)
(declare-fun x929 () Bool)
(declare-fun x3850 () Bool)
(declare-fun x989 () Bool)
(declare-fun x111 () Bool)
(declare-fun x3284 () Bool)
(declare-fun x4454 () Int)
(declare-fun x1647 () Bool)
(declare-fun x3332 () Int)
(declare-fun x2770 () Bool)
(declare-fun x4276 () Bool)
(declare-fun x2690 () Bool)
(declare-fun x626 () Bool)
(declare-fun x3054 () Bool)
(declare-fun x2536 () Int)
(declare-fun x4553 () Int)
(declare-fun x3588 () Bool)
(declare-fun x4523 () Int)
(declare-fun x4933 () x1923)
(declare-fun x17 () Int)
(declare-fun x4647 () Bool)
(declare-fun x4210 () Int)
(declare-fun x3320 (Int) Int)
(declare-fun x1864 () Bool)
(declare-fun x2662 () Bool)
(declare-fun x4568 () Bool)
(declare-fun x2336 () Int)
(declare-fun x3232 () Bool)
(declare-fun x2250 () Bool)
(declare-fun x1394 () Int)
(declare-fun x3466 () Bool)
(declare-fun x1516 () Bool)
(declare-fun x4248 () Int)
(declare-fun x2018 () Bool)
(declare-fun x2144 () Bool)
(declare-fun x3239 () Int)
(declare-fun x2464 () Bool)
(declare-fun x4548 () Int)
(declare-fun x2458 () Int)
(declare-fun x2624 () Bool)
(declare-fun x2033 () Int)
(declare-fun x3978 () Int)
(declare-fun x1549 () Int)
(declare-fun x4119 () Int)
(declare-fun x2905 () Int)
(declare-fun x4306 () Int)
(declare-fun x3998 () x1923)
(declare-fun x3714 () x1923)
(declare-fun x359 () Bool)
(declare-fun x1759 () Bool)
(declare-fun x517 () Bool)
(declare-fun x1136 () Int)
(declare-fun x4533 () Bool)
(declare-fun x1255 () Bool)
(declare-fun x3580 () Int)
(declare-fun x3452 () Int)
(declare-fun x3026 () Bool)
(declare-fun x2416 () Bool)
(declare-fun x417 () Bool)
(declare-fun x3804 () Int)
(declare-fun x996 () Int)
(declare-fun x3604 () Bool)
(declare-fun x1970 () Bool)
(declare-fun x2942 () Int)
(declare-fun x4908 () Bool)
(declare-fun x1361 () Int)
(declare-fun x1263 () x1923)
(declare-fun x1983 () Int)
(declare-fun x1283 () Int)
(declare-fun x2718 () Bool)
(declare-fun x3267 () Int)
(declare-fun x3676 (x1923) Int)
(declare-fun x1446 () x1923)
(declare-fun x3075 () Int)
(declare-fun x4051 () Bool)
(declare-fun x3431 () Int)
(declare-fun x3536 () Bool)
(declare-fun x4449 () Bool)
(declare-fun x4792 () Int)
(declare-fun x1417 () Bool)
(declare-fun x1874 () Bool)
(declare-fun x2556 () Int)
(declare-fun x3020 () x1923)
(declare-fun x2338 () Bool)
(declare-fun x2810 () Int)
(declare-fun x1763 () Int)
(declare-fun x4091 () Bool)
(declare-fun x4549 () Bool)
(declare-fun x3344 () Int)
(declare-fun x1555 () Bool)
(declare-fun x2497 () Bool)
(declare-fun x1322 () Int)
(declare-fun x3521 () x1923)
(declare-fun x599 () x1923)
(declare-fun x2108 () Bool)
(declare-fun x3266 () Int)
(declare-fun x597 () Int)
(declare-fun x2767 () Int)
(declare-fun x3049 () Bool)
(declare-fun x4772 () x1923)
(declare-fun x3882 () Int)
(declare-fun x340 () Bool)
(declare-fun x3533 () Int)
(declare-fun x1785 () Bool)
(declare-fun x1007 () Int)
(declare-fun x4749 () Int)
(declare-fun x1296 () Int)
(declare-fun x440 () Int)
(declare-fun x3132 () Int)
(declare-fun x4254 (x1923) Int)
(declare-fun x3880 () Bool)
(declare-fun x437 () Bool)
(declare-fun x2696 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x1418 () Int)
(declare-fun x4484 () Bool)
(declare-fun x393 () Bool)
(declare-fun x4288 () Bool)
(declare-fun x2559 () Bool)
(declare-fun x29 () Bool)
(declare-fun x3166 () Bool)
(declare-fun x1601 () Bool)
(declare-fun x3085 () Int)
(declare-fun x3984 (Int) Int)
(declare-fun x563 () Int)
(declare-fun x4216 () Int)
(declare-fun x1097 () Int)
(declare-fun x3017 () Int)
(declare-fun x3419 () Bool)
(declare-fun x4240 () Int)
(declare-fun x1024 () Int)
(declare-fun x1214 () Int)
(declare-fun x1891 () Bool)
(declare-fun x1019 () Bool)
(declare-fun x1037 () x1923)
(declare-fun x3200 () Int)
(declare-fun x4217 () Int)
(declare-fun x3573 () Bool)
(declare-fun x3038 () Bool)
(declare-fun x4058 () Bool)
(declare-fun x3529 () x1923)
(declare-fun x2639 () Bool)
(declare-fun x3446 () x1923)
(declare-fun x355 () Int)
(declare-fun x250 () Bool)
(declare-fun x4030 () Bool)
(declare-fun x3740 () Bool)
(declare-fun x2021 () Int)
(declare-fun x2056 () Bool)
(declare-fun x4477 () Bool)
(declare-fun x4138 () x1923)
(declare-fun x582 (x1923) Int)
(declare-fun x2080 () Bool)
(declare-fun x3059 () Bool)
(declare-fun x624 () Int)
(declare-fun x4376 () Int)
(declare-fun x2275 () Int)
(declare-fun x2750 () Bool)
(declare-fun x3 () x1923)
(declare-fun x1246 () Bool)
(declare-fun x206 () Int)
(declare-fun x3406 () Int)
(declare-fun x2063 () Bool)
(declare-fun x1615 () Bool)
(declare-fun x3666 () Int)
(declare-fun x3828 () Bool)
(declare-fun x763 () Bool)
(declare-fun x2796 () Int)
(declare-fun x116 () Bool)
(declare-fun x4918 () Int)
(declare-fun x4131 () x1923)
(declare-fun x3150 () Bool)
(declare-fun x984 () Int)
(declare-fun x568 () Int)
(declare-fun x3219 () Int)
(declare-fun x3810 () Int)
(declare-fun x413 () Bool)
(declare-fun x4450 () Int)
(declare-fun x1387 () Int)
(declare-fun x222 () Bool)
(declare-fun x802 () Bool)
(declare-fun x1938 () Bool)
(declare-fun x4559 () Bool)
(declare-fun x1266 () x1923)
(declare-fun x1174 () Int)
(declare-fun x2322 () Int)
(declare-fun x2544 () Bool)
(declare-fun x1509 () Int)
(declare-fun x1351 () Bool)
(declare-fun x983 () Bool)
(declare-fun x3119 () Int)
(declare-fun x1511 () Bool)
(declare-fun x3716 () Bool)
(declare-fun x993 () x1923)
(declare-fun x3031 () Int)
(declare-fun x4031 () Bool)
(declare-fun x3927 () Bool)
(declare-fun x3325 () Int)
(declare-fun x946 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x4214 () Bool)
(declare-fun x659 () Bool)
(declare-fun x2092 () Bool)
(declare-fun x4277 () Int)
(declare-fun x2752 () Bool)
(declare-fun x4116 () Bool)
(declare-fun x1606 () Bool)
(declare-fun x701 () Int)
(declare-fun x3761 () Bool)
(declare-fun x591 () Int)
(declare-fun x1608 () Bool)
(declare-fun x3682 () Bool)
(declare-fun x2152 () Bool)
(declare-fun x965 () Int)
(declare-fun x3494 () Int)
(declare-fun x1254 () Bool)
(declare-fun x2546 () Int)
(declare-fun x1838 () Int)
(declare-fun x1075 () Int)
(declare-fun x1367 () Bool)
(declare-fun x3729 () Bool)
(declare-fun x4106 () x1923)
(declare-fun x1856 () x1923)
(declare-fun x4279 () Bool)
(declare-fun x224 (Int) Int)
(declare-fun x539 () Int)
(declare-fun x177 () Int)
(declare-fun x2597 () Bool)
(declare-fun x4182 () Bool)
(declare-fun x3685 () Int)
(declare-fun x2894 () Bool)
(declare-fun x2610 () x1923)
(declare-fun x3368 () x1923)
(declare-fun x644 () Int)
(declare-fun x1889 () Bool)
(declare-fun x1014 () Int)
(declare-fun x3961 () Int)
(declare-fun x4270 () Int)
(declare-fun x1171 () Bool)
(declare-fun x1334 () Int)
(declare-fun x1939 () x1923)
(declare-fun x2112 () Int)
(declare-fun x4868 () Int)
(declare-fun x868 () x1923)
(declare-fun x4412 () Bool)
(declare-fun x181 () Int)
(declare-fun x2492 (x1923) Int)
(declare-fun x4685 () Int)
(declare-fun x2372 () Bool)
(declare-fun x4832 () Int)
(declare-fun x2572 () Int)
(declare-fun x3825 () Bool)
(declare-fun x4046 () Bool)
(declare-fun x2170 () Int)
(declare-fun x1640 () Bool)
(declare-fun x3762 () Int)
(declare-fun x1310 () Bool)
(declare-fun x1533 () Bool)
(declare-fun x3637 () Bool)
(declare-fun x2490 () Bool)
(declare-fun x1230 () Int)
(declare-fun x3513 () Int)
(declare-fun x3615 () Int)
(declare-fun x2511 () Bool)
(declare-fun x266 () Int)
(declare-fun x1556 () Int)
(declare-fun x3224 () Int)
(declare-fun x1479 () Int)
(declare-fun x2514 () x1923)
(declare-fun x837 (Int) Int)
(declare-fun x797 () Int)
(declare-fun x1810 () Int)
(declare-fun x2947 () Bool)
(declare-fun x780 () Int)
(declare-fun x1526 () Bool)
(declare-fun x1069 () Bool)
(declare-fun x799 () Int)
(declare-fun x978 () x1923)
(declare-fun x4331 () x1923)
(declare-fun x3139 () Int)
(declare-fun x1193 () Bool)
(declare-fun x4856 () x1923)
(declare-fun x2531 () Int)
(declare-fun x2352 () Int)
(declare-fun x3084 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x1260 () Int)
(declare-fun x2095 () Bool)
(declare-fun x184 () Int)
(declare-fun x1476 () x1923)
(declare-fun x1430 () Bool)
(declare-fun x869 () x1923)
(declare-fun x2300 () Int)
(declare-fun x1676 () Bool)
(declare-fun x3034 () Int)
(declare-fun x957 () Int)
(declare-fun x1176 () Bool)
(declare-fun x2247 () Int)
(declare-fun x2121 () Bool)
(declare-fun x4017 () Bool)
(declare-fun x1705 () Bool)
(declare-fun x2564 () Int)
(declare-fun x1160 () Bool)
(declare-fun x80 () x1923)
(declare-fun x3073 () Bool)
(declare-fun x982 () Int)
(declare-fun x2811 () Bool)
(declare-fun x4625 () Int)
(declare-fun x3524 () Int)
(declare-fun x3471 () Int)
(declare-fun x4709 () Bool)
(declare-fun x705 () Int)
(declare-fun x4301 () Bool)
(declare-fun x1698 () Int)
(declare-fun x4434 () Int)
(declare-fun x4600 () x1923)
(declare-fun x14 () Bool)
(declare-fun x186 () x1923)
(declare-fun x530 () Int)
(declare-fun x3262 () Int)
(declare-fun x4205 () Int)
(declare-fun x2049 () Int)
(declare-fun x2133 () Int)
(declare-fun x2666 (x1923) Int)
(declare-fun x937 () x1923)
(declare-fun x3563 () Int)
(declare-fun x1695 () Int)
(declare-fun x1437 () Bool)
(declare-fun x3307 () Int)
(declare-fun x2334 () Int)
(declare-fun x4302 () Bool)
(declare-fun x3896 () Int)
(declare-fun x4111 () x1923)
(declare-fun x2804 () Bool)
(declare-fun x3788 () Bool)
(declare-fun x1689 () x1923)
(declare-fun x4547 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x1227 () Int)
(declare-fun x1271 () Bool)
(declare-fun x3416 () Int)
(declare-fun x4546 () Int)
(declare-fun x3606 () x1923)
(declare-fun x2702 () Int)
(declare-fun x4107 () Bool)
(declare-fun x1245 () Int)
(declare-fun x3237 () Int)
(declare-fun x2936 () Int)
(declare-fun x553 () x1923)
(declare-fun x1931 () Bool)
(declare-fun x2229 (x1923) Int)
(declare-fun x565 () Bool)
(declare-fun x2958 () Bool)
(declare-fun x455 () Bool)
(declare-fun x480 () Bool)
(declare-fun x153 () Bool)
(declare-fun x4780 () Bool)
(declare-fun x4414 () Bool)
(declare-fun x3766 () Bool)
(declare-fun x1374 () Bool)
(declare-fun x941 () Bool)
(declare-fun x3045 () Int)
(declare-fun x4364 () x1923)
(declare-fun x4591 () Bool)
(declare-fun x723 () Bool)
(declare-fun x1448 () x1923)
(declare-fun x4453 () x1923)
(declare-fun x4691 () x1923)
(declare-fun x3626 () Bool)
(declare-fun x510 () Bool)
(declare-fun x464 () Int)
(declare-fun x3165 () Int)
(declare-fun x3227 () Int)
(declare-fun x4143 () Bool)
(declare-fun x1984 () Bool)
(declare-fun x3250 () Bool)
(declare-fun x4713 () Bool)
(declare-fun x4032 () Int)
(declare-fun x4099 () Bool)
(declare-fun x4606 () Bool)
(declare-fun x1563 () Int)
(declare-fun x304 () Bool)
(declare-fun x987 () Bool)
(declare-fun x1348 () Bool)
(declare-fun x2309 () Int)
(declare-fun x872 () Int)
(declare-fun x2014 () Bool)
(declare-fun x933 () Int)
(declare-fun x2672 () Int)
(declare-fun x3067 () x1923)
(declare-fun x543 () Bool)
(declare-fun x9 () Bool)
(declare-fun x2417 () x1923)
(declare-fun x1420 () x1923)
(declare-fun x2136 () Int)
(declare-fun x4422 () Int)
(declare-fun x4209 () Int)
(declare-fun x3086 () Int)
(declare-fun x1440 () Int)
(declare-fun x3445 () x1923)
(declare-fun x19 () Bool)
(declare-fun x3413 (Int Int) Int)
(declare-fun x862 () Int)
(declare-fun x1197 () Int)
(declare-fun x4577 () Bool)
(declare-fun x1366 () Int)
(declare-fun x3233 () Bool)
(declare-fun x2035 () Bool)
(declare-fun x1909 () Bool)
(define-fun x3243 ((x1923 x1923) (x1065 Int)) x1923 (ite ((_ is x1648) x1923) (x1648 (x4634 x1923) (+ (x3035 x1923) x1065)) (ite ((_ is x3800) x1923) (x3800 (x4669 x1923) (x557 x1923) (+ (x4690 x1923) x1065)) (x3454 (+ (x3712 x1923) x1065)))))
(define-fun x4034 ((x1226 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1226) (<= 0 x1226)) x1226 (- x1226 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x2102 ((x1226 Int)) Int (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1226) (> 0 x1226)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1226) x1226))
(define-fun x2477 ((x1226 Int)) Int (ite (and (< x1226 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1226 0)) x1226 (ite (and (< x1226 231584178474632390847141970017375815706539969331281128078915168015826259279872) (>= x1226 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- x1226 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1226) (< x1226 0)) (+ x1226 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2968 x1226 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x360 ((x3907 Int)) Bool (and (< x3907 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x3907)))
(define-fun x2269 ((x3907 Int)) Bool (and (= x3907 (x4728 x3907 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x3907 (x4728 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3907))))
(define-fun x2424 ((x3907 Int)) Bool (and (= 0 (x4728 x3907 0)) (= (x4728 0 x3907) 0)))
(define-fun x4127 ((x3907 Int)) Bool (= x3907 (x4728 x3907 x3907)))
(define-fun x4715 ((x3907 Int)) Bool (and (x2424 x3907) (x2269 x3907) (x4127 x3907)))
(define-fun x2743 ((x3907 Int) (x2004 Int)) Bool (= (x4728 x3907 x2004) (x4728 x2004 x3907)))
(define-fun x3933 ((x3907 Int) (x2004 Int)) Bool (and (=> (<= 0 x2004) (<= (x4728 x3907 x2004) x2004)) (>= (x4728 x3907 x2004) 0) (=> (<= 0 x3907) (>= x3907 (x4728 x3907 x2004)))))
(define-fun x1990 ((x3907 Int) (x2004 Int)) Bool (and (x2743 x3907 x2004) (x3933 x3907 x2004)))
(define-fun x178 ((x3907 Int)) Bool (= (x2968 x3907 26959946667150639794667015087019630673637144422540572481103610249216) (x4728 x3907 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x3545 ((x3907 Int)) Bool (and (x1990 x3907 26959946667150639794667015087019630673637144422540572481103610249215) (x178 x3907)))
(define-fun x877 ((x3907 Int) (x2004 Int)) Bool (and (<= 0 (x2968 x3907 x2004)) (< (x2968 x3907 x2004) x2004)))
(define-fun x345 ((x3907 Int) (x2004 Int)) Bool (=> (and (< 0 x2004) (>= x3907 0)) (= (= (x2968 x3907 x2004) x3907) (< x3907 x2004))))
(define-fun x4363 ((x3907 Int) (x2004 Int)) Bool (=> (and (< 0 x2004) (and (< x3907 (+ x2004 x2004)) (<= x2004 x3907))) (= (x2968 x3907 x2004) (- x3907 x2004))))
(define-fun x383 ((x3907 Int)) Bool (= 0 (x2968 0 x3907)))
(define-fun x2157 ((x3907 Int)) Bool (= (x2968 x3907 1) 0))
(define-fun x467 ((x3907 Int)) Bool (= 0 (x2968 x3907 x3907)))
(define-fun x711 ((x3907 Int)) Bool (and (x2157 x3907) (x383 x3907) (x467 x3907)))
(define-fun x3371 ((x3907 Int)) Bool (= (x2968 x3907 1461501637330902918203684832716283019655932542976) (x4728 x3907 1461501637330902918203684832716283019655932542975)))
(define-fun x77 ((x3907 Int)) Bool (and (x1990 x3907 1461501637330902918203684832716283019655932542975) (x3371 x3907)))
(define-fun x3818 ((x3907 Int) (x2004 Int)) Bool (=> (and (> x3907 0) (< 0 x2004)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4060 x3907 x2004)) (= x2004 (x3413 (x2477 (x4060 x3907 x2004)) x3907)))))
(define-fun x3063 ((x3907 Int) (x2004 Int)) Bool (=> (and (not (= 0 x3907)) (not (= x2004 0))) (and (= x2004 (x3413 (x4060 x3907 x2004) x3907)) (= x3907 (x3413 (x4060 x3907 x2004) x2004)))))
(define-fun x1520 ((x3907 Int) (x2004 Int)) Bool (=> (and (< 0 x2004) (> x3907 0)) (= (< (x3413 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3907) x2004) (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4060 x3907 x2004)))))
(define-fun x4067 ((x3907 Int) (x2004 Int)) Bool (and (= (x2477 (x4060 x3907 x2004)) (x2477 (x4060 (- x3907 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2004))) (= (x2477 (x4060 x3907 x2004)) (x2477 (x4060 (- x3907 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x2004 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x2477 (x4060 x3907 x2004)) (x2477 (x4060 x3907 (- x2004 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(define-fun x3727 ((x3907 Int) (x2004 Int)) Bool (and (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2004) (<= x2004 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (<= x3907 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x3907))) (= (>= (x4060 x3907 (- x2004 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2004) (x3413 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3907)))) (=> (and (and (<= x2004 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x2004 0)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3907) (<= x3907 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (>= (x4060 (- x3907 115792089237316195423570985008687907853269984665640564039457584007913129639936) x2004) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3907) (x3413 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2004)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2004) (> x2004 0)) (and (> x3907 0) (<= x3907 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (x4060 x3907 x2004) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x3413 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2004) x3907))) (=> (and (and (> x2004 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2004 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (<= x3907 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3907))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3907) (x3413 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2004))) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x4060 (- x3907 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x2004 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x2828 ((x3907 Int)) Bool (and (= 0 (x4060 x3907 0)) (= (x4060 0 x3907) 0)))
(define-fun x2091 ((x3907 Int)) Bool (and (= (x4060 x3907 1) x3907) (= (x4060 1 x3907) x3907)))
(define-fun x2835 ((x3907 Int)) Bool (and (x2091 x3907) (x2828 x3907)))
(define-fun x1905 ((x3907 Int) (x2004 Int)) Bool (=> (and (< 0 x3907) (< 0 x2004)) (and (>= x3907 (x3413 x3907 x2004)) (>= (x3413 x3907 x2004) 0))))
(define-fun x3763 ((x3907 Int) (x2004 Int)) Bool (=> (and (and (>= x3907 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3907)) (and (>= x2004 1) (< x2004 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3413 x3907 x2004)) (>= (x3413 x3907 x2004) 0))))
(define-fun x4019 ((x3907 Int) (x2004 Int)) Bool (=> (and (> x3907 x2004) (< 1 x2004)) (< (x3413 x3907 x2004) x3907)))
(define-fun x3469 ((x3907 Int) (x2004 Int)) Bool (=> (and (> x2004 0) (< 0 x3907)) (= (< x3907 x2004) (= 0 (x3413 x3907 x2004)))))
(define-fun x2278 ((x3907 Int) (x2004 Int)) Bool (=> (and (< 0 x3907) (> x2004 0)) (and (<= (x4060 (x3413 x3907 x2004) x2004) x3907) (> (x4060 (x3413 x3907 x2004) x2004) (- x3907 x2004)))))
(define-fun x3272 ((x3907 Int) (x2004 Int)) Bool (and (x1905 x3907 x2004) (x4019 x3907 x2004) (x3469 x3907 x2004) (x2278 x3907 x2004) (x3763 x3907 x2004)))
(define-fun x2949 ((x3907 Int)) Bool (= (x3413 0 x3907) 0))
(define-fun x2094 ((x3907 Int)) Bool (= x3907 (x3413 x3907 1)))
(define-fun x4925 ((x3907 Int)) Bool (=> (not (= 0 x3907)) (= 1 (x3413 x3907 x3907))))
(define-fun x2915 ((x3907 Int)) Bool (and (x4925 x3907) (x2949 x3907) (x2094 x3907)))
(define-fun x3972 ((x3907 Int)) Bool (and (= (x2618 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3907) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2618 x3907 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x426 ((x3907 Int)) Bool (and (= (x2618 x3907 0) x3907) (= (x2618 0 x3907) x3907)))
(define-fun x2329 ((x3907 Int)) Bool (= (x2618 x3907 x3907) x3907))
(define-fun x2885 ((x3907 Int)) Bool (and (x3972 x3907) (x2329 x3907) (x426 x3907)))
(define-fun x4924 ((x3907 Int) (x2004 Int)) Bool (= (x2618 x2004 x3907) (x2618 x3907 x2004)))
(define-fun x3865 ((x3907 Int) (x2004 Int)) Bool (and (<= (x2618 x3907 x2004) (+ x2004 x3907)) (=> (<= 0 x3907) (<= x3907 (x2618 x3907 x2004))) (=> (>= x2004 0) (<= x2004 (x2618 x3907 x2004)))))
(define-fun x934 ((x3907 Int) (x2004 Int)) Bool (and (x4924 x3907 x2004) (x3865 x3907 x2004)))
(define-fun x2185 ((x3907 Int) (x2004 Int)) Bool (= (x4060 x3907 x2004) (x4060 x2004 x3907)))
(define-fun x1631 ((x3907 Int) (x2004 Int)) Bool (and (=> (and (< x2004 0) (< 0 x3907)) (< (x4060 x3907 x2004) 0)) (=> (and (> x3907 0) (> x2004 0)) (> (x4060 x3907 x2004) 0)) (=> (and (> 0 x3907) (< x2004 0)) (> (x4060 x3907 x2004) 0)) (=> (and (> 0 x3907) (> x2004 0)) (> 0 (x4060 x3907 x2004)))))
(define-fun x1107 ((x3907 Int) (x2004 Int)) Bool (and (x4067 x3907 x2004) (x3818 x3907 x2004) (x3727 x3907 x2004) (x3063 x3907 x2004) (x2185 x3907 x2004) (x1520 x3907 x2004) (x1631 x3907 x2004)))
(define-fun x939 ((x3907 Int)) Bool (= (x2477 x3907) (+ (x4728 x3907 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2968 x3907 32))))
(define-fun x4383 ((x3907 Int)) Bool (and (x939 x3907) (x1990 x3907 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x2747 ((x4759 Int)) Int (ite (= x4759 128) (ite x347 1 0) (x3911 x4759)))
(define-fun x481 ((x4759 Int)) Int (ite (= x4759 160) (ite x1819 1 0) (x2747 x4759)))
(define-fun x2258 ((x4759 Int)) Int (ite (= 192 x4759) (ite x1594 1 0) (x481 x4759)))
(define-fun x3122 ((x4759 Int)) Int (ite (= x4759 224) (ite x3105 1 0) (x2258 x4759)))
(define-fun x1357 ((x4759 Int)) Int (ite (= x4759 256) (ite x3218 1 0) (x3122 x4759)))
(define-fun x1727 ((x4759 Int)) Int (ite (= 288 x4759) (ite x1795 1 0) (x1357 x4759)))
(define-fun x658 ((x4759 Int)) Int (ite (= x4759 320) (ite x150 1 0) (x1727 x4759)))
(define-fun x4424 ((x4759 Int)) Int (ite (= 352 x4759) (ite x1748 1 0) (x658 x4759)))
(define-fun x237 ((x4759 Int)) Int (ite (= 420 x4759) x986 (x4424 x4759)))
(define-fun x994 ((x4759 Int)) Int (ite (= 384 x4759) 36 (x237 x4759)))
(define-fun x123 ((x4759 Int)) Int (ite (= 416 x4759) x685 (x994 x4759)))
(define-fun x2794 ((x4759 x1923)) Int (ite (= x2843 x4759) 0 (x4806 x4759)))
(define-fun x1693 ((x4759 x1923)) Int (ite (= x2843 x4759) x400 (x4806 x4759)))
(define-fun x1800 ((x4759 x1923)) Int (ite x1773 (x2794 x4759) (x1693 x4759)))
(define-fun x521 ((x4759 Int)) Int (ite (= 452 x4759) 50292402827334880472107169365697159231523039388532301717704428044325102813184 (x123 x4759)))
(define-fun x1595 ((x4759 Int)) Int (ite (= 452 x4759) x2905 (x521 x4759)))
(define-fun x2249 ((x4759 Int)) Int (ite (= 452 x4759) x2474 (x521 x4759)))
(define-fun x2481 ((x4759 Int)) Int (ite (= x4759 452) x2502 (x521 x4759)))
(define-fun x2177 ((x4759 Int)) Int (ite x67 (x1595 x4759) (ite x3419 (x2249 x4759) (x2481 x4759))))
(define-fun x4445 ((x4759 Int)) Int (ite x395 (x2177 x4759) (x123 x4759)))
(define-fun x3296 ((x4759 Int)) Int (ite (= x4115 x4759) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x4445 x4759)))
(define-fun x4496 ((x4759 Int)) Int (ite (= x4242 x4759) x2493 (x3296 x4759)))
(define-fun x2532 ((x4759 Int)) Int (ite (= x4759 x1070) x2827 (x4496 x4759)))
(define-fun x2117 ((x4759 Int)) Int (ite (= x4759 x2904) x905 (x2532 x4759)))
(define-fun x2315 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x2117 x4759)))
(define-fun x608 ((x4759 Int)) Int (ite (= x4759 0) 1 (x2117 x4759)))
(define-fun x2190 ((x4759 Int)) Int (ite (= x4759 0) 1 (x2117 x4759)))
(define-fun x4748 ((x4759 Int)) Int (ite (= x4759 0) 1 (x2117 x4759)))
(define-fun x959 ((x4759 Int)) Int (ite x1529 (ite x3694 (x2117 x4759) (x2315 x4759)) (ite x2456 (ite x1246 (x2117 x4759) (x608 x4759)) (ite x453 (ite x2706 (x2117 x4759) (x2190 x4759)) (ite x3102 (x2117 x4759) (x4748 x4759))))))
(define-fun x4387 ((x4759 Int)) Int (ite (= x4759 x1178) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x959 x4759)))
(define-fun x4699 ((x4759 Int)) Int (ite (= x4759 x1178) x2409 (x4387 x4759)))
(define-fun x4802 ((x4759 Int)) Int (ite (= x4759 x1178) x1661 (x4387 x4759)))
(define-fun x159 ((x4759 Int)) Int (ite (= x4759 x1178) x3679 (x4387 x4759)))
(define-fun x4743 ((x4759 Int)) Int (ite x1405 (x4699 x4759) (ite x1679 (x4802 x4759) (x159 x4759))))
(define-fun x2294 ((x4759 Int)) Int (ite (= x4759 x2787) x1386 (x4743 x4759)))
(define-fun x3946 ((x4759 Int)) Int (ite x3775 (x4743 x4759) (x2294 x4759)))
(define-fun x3857 ((x4759 Int)) Int (ite (= x4759 x3541) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x3946 x4759)))
(define-fun x2687 ((x4759 Int)) Int (ite (= x4759 0) x2409 (x830 x4759)))
(define-fun x3306 ((x4759 Int)) Int (ite (= x3541 x4759) x2409 (x3857 x4759)))
(define-fun x2390 ((x4759 Int)) Int (ite (= x4759 0) x1661 (x830 x4759)))
(define-fun x4880 ((x4759 Int)) Int (ite (= x4759 x3541) x1661 (x3857 x4759)))
(define-fun x528 ((x4759 Int)) Int (ite (= x4759 0) x3679 (x830 x4759)))
(define-fun x4025 ((x4759 Int)) Int (ite (= x4759 x3541) x3679 (x3857 x4759)))
(define-fun x3254 ((x4759 Int)) Int (ite x4230 (x3306 x4759) (ite x2419 (x4880 x4759) (x4025 x4759))))
(define-fun x2010 ((x4759 Int)) Int (ite (= x4759 x1440) 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x3254 x4759)))
(define-fun x552 ((x4759 Int)) Int (ite (= x3265 x4759) x2445 (x2010 x4759)))
(define-fun x3531 ((x4759 Int)) Int (ite (= x401 x4759) x2171 (x552 x4759)))
(define-fun x228 ((x4759 Int)) Int (ite (= x3098 x4759) x1664 (x3531 x4759)))
(define-fun x1706 ((x4759 Int)) Int (ite (and (< x4759 (+ x1440 0)) (<= x1440 x4759)) (x637 (+ 0 (- x4759 x1440))) (x228 x4759)))
(define-fun x3385 ((x4759 Int)) Int (ite x611 (x3254 x4759) (x1706 x4759)))
(define-fun x249 ((x4759 Int)) Int (ite (= x4759 x1440) x1968 (x3385 x4759)))
(define-fun x3881 ((x4759 Int)) Int (ite (= x3336 x4759) x2223 (x249 x4759)))
(define-fun x807 ((x4759 Int)) Int (ite x2629 (x3881 x4759) (x3254 x4759)))
(define-fun x2568 ((x4759 Int)) Int (ite x1457 (x3946 x4759) (ite x2679 (x807 x4759) (x3946 x4759))))
(define-fun x1134 ((x4759 x1923)) Int (ite (= x3926 x4759) x3696 (x3676 x4759)))
(define-fun x625 ((x4759 x1923)) Int (ite x1457 (x3676 x4759) (ite x2432 (x3676 x4759) (x1134 x4759))))
(define-fun x1290 ((x4759 x1923)) Int (ite (= x4759 x874) x1871 (x2666 x4759)))
(define-fun x4444 ((x4759 x1923)) Int (ite (= x4759 x1280) x1172 (x897 x4759)))
(define-fun x2615 ((x4759 Int)) Int (ite (= x601 x4759) 10742207464693106059581744854972325794081737850190833080250671788038469713920 (x2568 x4759)))
(define-fun x695 ((x4759 Int)) Int (ite (= x4759 x1843) x2827 (x2615 x4759)))
(define-fun x844 ((x4759 Int)) Int (ite (= x4759 0) x3753 (x3644 x4759)))
(define-fun x534 ((x4759 Int)) Int (ite (= x601 x4759) x3753 (x695 x4759)))
(define-fun x505 ((x4759 Int)) Int (ite (= x4759 0) x2388 (x3644 x4759)))
(define-fun x2705 ((x4759 Int)) Int (ite (= x4759 x601) x2388 (x695 x4759)))
(define-fun x2032 ((x4759 Int)) Int (ite (= 0 x4759) x3170 (x3644 x4759)))
(define-fun x66 ((x4759 Int)) Int (ite (= x4759 x601) x3170 (x695 x4759)))
(define-fun x719 ((x4759 Int)) Int (ite x3690 (ite x2346 (x695 x4759) (x534 x4759)) (ite x1112 (ite x289 (x695 x4759) (x2705 x4759)) (ite x2870 (x695 x4759) (x66 x4759)))))
(define-fun x2392 ((x4759 Int)) Int (ite (= x4759 x781) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x719 x4759)))
(define-fun x2024 ((x4759 Int)) Int (ite (= x2899 x4759) x986 (x2392 x4759)))
(define-fun x3346 ((x4759 Int)) Int (ite (= x4759 x4672) x681 (x2024 x4759)))
(define-fun x4149 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x3346 x4759)))
(define-fun x3517 ((x4759 Int)) Int (ite x1138 (x3346 x4759) (x4149 x4759)))
(define-fun x4097 ((x4759 Int)) Int (ite (= x4759 x781) 6539370208772218570076773595062200405109424842860869254164860851635934461952 (x3517 x4759)))
(define-fun x2986 ((x4759 Int)) Int (ite (= x4759 x3538) x681 (x4097 x4759)))
(define-fun x1828 ((x4759 Int)) Int (ite (= x4759 x781) 0 (x2986 x4759)))
(define-fun x4508 ((x4759 Int)) Int (ite (= x781 x4759) 0 (x2986 x4759)))
(define-fun x3216 ((x4759 Int)) Int (ite (= x4759 x781) 0 (x2986 x4759)))
(define-fun x2611 ((x4759 Int)) Int (ite x290 (ite x4276 (x2986 x4759) (x1828 x4759)) (ite x3966 (ite x4876 (x2986 x4759) (x4508 x4759)) (ite x3944 (x2986 x4759) (x3216 x4759)))))
(define-fun x2673 ((x4759 Int)) Int (ite (= x781 x4759) 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x719 x4759)))
(define-fun x4440 ((x4759 Int)) Int (ite (= x4759 x49) x681 (x2673 x4759)))
(define-fun x1716 ((x4759 Int)) Int (ite (and (> (+ x781 0) x4759) (<= x781 x4759)) (x3403 (+ 0 (- x4759 x781))) (x4440 x4759)))
(define-fun x223 ((x4759 Int)) Int (ite (= x4759 x781) 35417553099779373699389112480655434059402432070290151981503827724506945814528 (x1716 x4759)))
(define-fun x2522 ((x4759 Int)) Int (ite (= x4759 x781) x1321 (x223 x4759)))
(define-fun x2291 ((x4759 Int)) Int (ite x1786 (x223 x4759) (x2522 x4759)))
(define-fun x4561 ((x4759 Int)) Int (ite (= x4759 x781) x3675 (x223 x4759)))
(define-fun x388 ((x4759 Int)) Int (ite x3297 (x223 x4759) (x4561 x4759)))
(define-fun x456 ((x4759 Int)) Int (ite (= x4759 x781) x2734 (x223 x4759)))
(define-fun x657 ((x4759 Int)) Int (ite x4871 (x223 x4759) (x456 x4759)))
(define-fun x3819 ((x4759 Int)) Int (ite x1310 (x2291 x4759) (ite x222 (x388 x4759) (x657 x4759))))
(define-fun x4476 ((x4759 Int)) Int (ite x2060 (x719 x4759) (ite x229 (x2611 x4759) (x3819 x4759))))
(define-fun x338 ((x4759 Int)) Int (ite (= x4759 x2297) x4298 (x4476 x4759)))
(define-fun x1210 ((x4759 Int)) Int (ite (= x1346 x4759) x2352 (x338 x4759)))
(define-fun x3305 ((x4759 Int)) Int (ite x4779 (x2568 x4759) (x1210 x4759)))
(define-fun x3769 ((x4759 x1923)) Int (ite (= x4759 x2847) x1833 (x2886 x4759)))
(define-fun x3465 ((x4759 x1923)) Int (ite x314 (x2886 x4759) (ite x328 (x2886 x4759) (ite x678 (x2886 x4759) (ite x3414 (x2886 x4759) (ite x4068 (x3769 x4759) (x2886 x4759)))))))
(define-fun x817 ((x4759 x1923)) Int (ite (= x4759 x4453) x690 (x3769 x4759)))
(define-fun x740 ((x4759 x1923)) Int (ite x1529 (x2886 x4759) (ite x2456 (ite x1246 (x3465 x4759) (x817 x4759)) (x2886 x4759))))
(define-fun x2684 ((x4759 x1923)) Int (ite (= x4772 x4759) x1692 (x740 x4759)))
(define-fun x3997 ((x4759 x1923)) Int (ite x675 (x740 x4759) (ite x1511 (x740 x4759) (ite x1396 (x740 x4759) (ite x2368 (x740 x4759) (ite x3147 (x2684 x4759) (x740 x4759)))))))
(define-fun x1913 ((x4759 x1923)) Int (ite (= x4759 x4065) x4349 (x2684 x4759)))
(define-fun x2222 ((x4759 x1923)) Int (ite x1300 (x740 x4759) (ite x804 (ite x2455 (x3997 x4759) (x1913 x4759)) (x740 x4759))))
(define-fun x2582 ((x4759 x1923)) Int (ite x4823 (x2222 x4759) (ite x1798 (x740 x4759) (ite x3353 (x740 x4759) (ite x2890 (x740 x4759) (ite x2416 (x2222 x4759) (x740 x4759)))))))
(define-fun x220 ((x4759 x1923)) Int (ite x4276 (x2582 x4759) (x2222 x4759)))
(define-fun x1028 ((x4759 x1923)) Int (ite (= x4759 x2172) x458 (x740 x4759)))
(define-fun x3384 ((x4759 x1923)) Int (ite x1790 (x740 x4759) (ite x903 (x740 x4759) (ite x2164 (x740 x4759) (ite x2311 (x740 x4759) (ite x4592 (x1028 x4759) (x740 x4759)))))))
(define-fun x2541 ((x4759 x1923)) Int (ite (= x4759 x4049) x4262 (x1028 x4759)))
(define-fun x4684 ((x4759 x1923)) Int (ite x1567 (x740 x4759) (ite x4544 (ite x1043 (x3384 x4759) (x2541 x4759)) (x740 x4759))))
(define-fun x4665 ((x4759 x1923)) Int (ite x2664 (x4684 x4759) (ite x1615 (x740 x4759) (ite x1837 (x740 x4759) (ite x4125 (x740 x4759) (ite x2393 (x4684 x4759) (x740 x4759)))))))
(define-fun x285 ((x4759 x1923)) Int (ite x4876 (x4665 x4759) (x4684 x4759)))
(define-fun x2772 ((x4759 x1923)) Int (ite (= x4759 x1813) x1686 (x740 x4759)))
(define-fun x2992 ((x4759 x1923)) Int (ite x2654 (x740 x4759) (ite x2507 (x740 x4759) (ite x4334 (x740 x4759) (ite x7 (x740 x4759) (ite x565 (x2772 x4759) (x740 x4759)))))))
(define-fun x1008 ((x4759 x1923)) Int (ite (= x4759 x3622) x2353 (x2772 x4759)))
(define-fun x354 ((x4759 x1923)) Int (ite x2100 (x740 x4759) (ite x1153 (ite x4758 (x2992 x4759) (x1008 x4759)) (x740 x4759))))
(define-fun x3041 ((x4759 x1923)) Int (ite x1847 (x354 x4759) (ite x2154 (x740 x4759) (ite x4456 (x740 x4759) (ite x2372 (x740 x4759) (ite x3242 (x354 x4759) (x740 x4759)))))))
(define-fun x822 ((x4759 x1923)) Int (ite x3944 (x3041 x4759) (x354 x4759)))
(define-fun x3140 ((x4759 x1923)) Int (ite x290 (x220 x4759) (ite x3966 (x285 x4759) (x822 x4759))))
(define-fun x4464 ((x4759 x1923)) Int (ite (= x4759 x2869) x141 (x740 x4759)))
(define-fun x1252 ((x4759 x1923)) Int (ite x1657 (x740 x4759) (ite x1949 (x740 x4759) (ite x1094 (x740 x4759) (ite x1622 (x740 x4759) (ite x2612 (x4464 x4759) (x740 x4759)))))))
(define-fun x3744 ((x4759 x1923)) Int (ite (= x2259 x4759) x4005 (x4464 x4759)))
(define-fun x2109 ((x4759 x1923)) Int (ite x1787 (x740 x4759) (ite x3362 (ite x1475 (x1252 x4759) (x3744 x4759)) (x740 x4759))))
(define-fun x2574 ((x4759 x1923)) Int (ite x2817 (x2109 x4759) (ite x3024 (x740 x4759) (ite x3506 (x740 x4759) (ite x1130 (x2109 x4759) (x740 x4759))))))
(define-fun x4347 ((x4759 x1923)) Int (ite x1786 (x2574 x4759) (x2109 x4759)))
(define-fun x2225 ((x4759 x1923)) Int (ite (= x4759 x2732) x2087 (x740 x4759)))
(define-fun x1500 ((x4759 x1923)) Int (ite x1869 (x740 x4759) (ite x1082 (x740 x4759) (ite x4408 (x740 x4759) (ite x118 (x740 x4759) (ite x1972 (x2225 x4759) (x740 x4759)))))))
(define-fun x3279 ((x4759 x1923)) Int (ite (= x4759 x80) x241 (x2225 x4759)))
(define-fun x714 ((x4759 x1923)) Int (ite x801 (x740 x4759) (ite x532 (ite x127 (x1500 x4759) (x3279 x4759)) (x740 x4759))))
(define-fun x1959 ((x4759 x1923)) Int (ite x2977 (x714 x4759) (ite x365 (x740 x4759) (ite x4620 (x740 x4759) (ite x71 (x714 x4759) (x740 x4759))))))
(define-fun x3158 ((x4759 x1923)) Int (ite x3297 (x1959 x4759) (x714 x4759)))
(define-fun x2917 ((x4759 x1923)) Int (ite (= x1826 x4759) x4203 (x740 x4759)))
(define-fun x4417 ((x4759 x1923)) Int (ite x2241 (x740 x4759) (ite x4352 (x740 x4759) (ite x1704 (x740 x4759) (ite x4030 (x740 x4759) (ite x2875 (x2917 x4759) (x740 x4759)))))))
(define-fun x1524 ((x4759 x1923)) Int (ite (= x4759 x672) x2965 (x2917 x4759)))
(define-fun x3655 ((x4759 x1923)) Int (ite x3604 (x740 x4759) (ite x2868 (ite x3920 (x4417 x4759) (x1524 x4759)) (x740 x4759))))
(define-fun x1051 ((x4759 x1923)) Int (ite x1311 (x3655 x4759) (ite x896 (x740 x4759) (ite x4849 (x740 x4759) (ite x4287 (x3655 x4759) (x740 x4759))))))
(define-fun x4407 ((x4759 x1923)) Int (ite x4871 (x1051 x4759) (x3655 x4759)))
(define-fun x3121 ((x4759 x1923)) Int (ite x1310 (x4347 x4759) (ite x222 (x3158 x4759) (x4407 x4759))))
(define-fun x4117 ((x4759 x1923)) Int (ite x229 (x3140 x4759) (x3121 x4759)))
(define-fun x428 ((x4759 x1923)) Int (ite x4779 (x740 x4759) (ite x2060 (x740 x4759) (x4117 x4759))))
(define-fun x3076 ((x4759 x1923)) Int (ite (= x2929 x4759) x1443 (x4254 x4759)))
(define-fun x1306 ((x4759 x1923)) Int (ite (= x2961 x4759) x3660 (x3076 x4759)))
(define-fun x3425 ((x4759 x1923)) Int (ite x4278 (x1306 x4759) (ite x274 (x3076 x4759) (ite x3492 (x4254 x4759) (ite x2770 (x4254 x4759) (ite x2298 (x4254 x4759) (ite x570 (x4254 x4759) (ite x821 (x3076 x4759) (ite x3334 (x1306 x4759) (x4254 x4759))))))))))
(define-fun x4320 ((x4759 x1923)) Int (ite x1529 (ite x3694 (x3425 x4759) (x1306 x4759)) (x4254 x4759)))
(define-fun x1143 ((x4759 x1923)) Int (ite (= x1140 x4759) x3520 (x4320 x4759)))
(define-fun x4596 ((x4759 x1923)) Int (ite (= x352 x4759) x1592 (x1143 x4759)))
(define-fun x4370 ((x4759 x1923)) Int (ite x4653 (x4596 x4759) (ite x2894 (x1143 x4759) (ite x2704 (x4320 x4759) (ite x551 (x4320 x4759) (ite x4689 (x4320 x4759) (ite x2791 (x4320 x4759) (ite x75 (x1143 x4759) (ite x4775 (x4596 x4759) (x4320 x4759))))))))))
(define-fun x3630 ((x4759 x1923)) Int (ite x1300 (ite x1204 (x4370 x4759) (x4596 x4759)) (x4320 x4759)))
(define-fun x333 ((x4759 x1923)) Int (ite x4823 (x3630 x4759) (ite x1798 (x4320 x4759) (ite x3353 (x4320 x4759) (ite x2890 (x4320 x4759) (ite x2416 (x3630 x4759) (x4320 x4759)))))))
(define-fun x2330 ((x4759 x1923)) Int (ite x4276 (x333 x4759) (x3630 x4759)))
(define-fun x938 ((x4759 x1923)) Int (ite (= x4759 x4805) x1929 (x4320 x4759)))
(define-fun x3571 ((x4759 x1923)) Int (ite (= x4759 x997) x4545 (x938 x4759)))
(define-fun x4721 ((x4759 x1923)) Int (ite x2912 (x3571 x4759) (ite x4614 (x938 x4759) (ite x2123 (x4320 x4759) (ite x83 (x4320 x4759) (ite x1920 (x4320 x4759) (ite x936 (x4320 x4759) (ite x1522 (x938 x4759) (ite x1458 (x3571 x4759) (x4320 x4759))))))))))
(define-fun x2621 ((x4759 x1923)) Int (ite x1567 (ite x2293 (x4721 x4759) (x3571 x4759)) (x4320 x4759)))
(define-fun x1744 ((x4759 x1923)) Int (ite x2664 (x2621 x4759) (ite x1615 (x4320 x4759) (ite x1837 (x4320 x4759) (ite x4125 (x4320 x4759) (ite x2393 (x2621 x4759) (x4320 x4759)))))))
(define-fun x680 ((x4759 x1923)) Int (ite x4876 (x1744 x4759) (x2621 x4759)))
(define-fun x3354 ((x4759 x1923)) Int (ite (= x4759 x778) x184 (x4320 x4759)))
(define-fun x4853 ((x4759 x1923)) Int (ite (= x4759 x1689) x1032 (x3354 x4759)))
(define-fun x1363 ((x4759 x1923)) Int (ite x4628 (x4853 x4759) (ite x3432 (x3354 x4759) (ite x739 (x4320 x4759) (ite x2871 (x4320 x4759) (ite x3919 (x4320 x4759) (ite x70 (x4320 x4759) (ite x2783 (x3354 x4759) (ite x1851 (x4853 x4759) (x4320 x4759))))))))))
(define-fun x4130 ((x4759 x1923)) Int (ite x2100 (ite x4831 (x1363 x4759) (x4853 x4759)) (x4320 x4759)))
(define-fun x794 ((x4759 x1923)) Int (ite x1847 (x4130 x4759) (ite x2154 (x4320 x4759) (ite x4456 (x4320 x4759) (ite x2372 (x4320 x4759) (ite x3242 (x4130 x4759) (x4320 x4759)))))))
(define-fun x3539 ((x4759 x1923)) Int (ite x3944 (x794 x4759) (x4130 x4759)))
(define-fun x1403 ((x4759 x1923)) Int (ite x290 (x2330 x4759) (ite x3966 (x680 x4759) (x3539 x4759))))
(define-fun x3799 ((x4759 x1923)) Int (ite (= x4759 x243) x2276 (x4320 x4759)))
(define-fun x3095 ((x4759 x1923)) Int (ite (= x4759 x907) x2467 (x3799 x4759)))
(define-fun x627 ((x4759 x1923)) Int (ite x1881 (x3095 x4759) (ite x803 (x3799 x4759) (ite x3356 (x4320 x4759) (ite x1697 (x4320 x4759) (ite x856 (x4320 x4759) (ite x22 (x4320 x4759) (ite x3955 (x3799 x4759) (ite x4429 (x3095 x4759) (x4320 x4759))))))))))
(define-fun x4470 ((x4759 x1923)) Int (ite x1787 (ite x4295 (x627 x4759) (x3095 x4759)) (x4320 x4759)))
(define-fun x4155 ((x4759 x1923)) Int (ite x2817 (x4470 x4759) (ite x3024 (x4320 x4759) (ite x3506 (x4320 x4759) (ite x1130 (x4470 x4759) (x4320 x4759))))))
(define-fun x4303 ((x4759 x1923)) Int (ite x1786 (x4155 x4759) (x4470 x4759)))
(define-fun x2328 ((x4759 x1923)) Int (ite (= x4759 x2966) x1447 (x4320 x4759)))
(define-fun x3579 ((x4759 x1923)) Int (ite (= x4006 x4759) x3325 (x2328 x4759)))
(define-fun x1072 ((x4759 x1923)) Int (ite x2391 (x3579 x4759) (ite x291 (x2328 x4759) (ite x2003 (x4320 x4759) (ite x3070 (x4320 x4759) (ite x2795 (x4320 x4759) (ite x3558 (x4320 x4759) (ite x4200 (x2328 x4759) (ite x3080 (x3579 x4759) (x4320 x4759))))))))))
(define-fun x3624 ((x4759 x1923)) Int (ite x801 (ite x1057 (x1072 x4759) (x3579 x4759)) (x4320 x4759)))
(define-fun x4889 ((x4759 x1923)) Int (ite x2977 (x3624 x4759) (ite x365 (x4320 x4759) (ite x4620 (x4320 x4759) (ite x71 (x3624 x4759) (x4320 x4759))))))
(define-fun x2262 ((x4759 x1923)) Int (ite x3297 (x4889 x4759) (x3624 x4759)))
(define-fun x3731 ((x4759 x1923)) Int (ite (= x4759 x3300) x3668 (x4320 x4759)))
(define-fun x4190 ((x4759 x1923)) Int (ite (= x4759 x3281) x23 (x3731 x4759)))
(define-fun x3352 ((x4759 x1923)) Int (ite x2651 (x4190 x4759) (ite x3360 (x3731 x4759) (ite x2452 (x4320 x4759) (ite x132 (x4320 x4759) (ite x2846 (x4320 x4759) (ite x2567 (x4320 x4759) (ite x380 (x3731 x4759) (ite x2623 (x4190 x4759) (x4320 x4759))))))))))
(define-fun x1409 ((x4759 x1923)) Int (ite x3604 (ite x4816 (x3352 x4759) (x4190 x4759)) (x4320 x4759)))
(define-fun x2742 ((x4759 x1923)) Int (ite x1311 (x1409 x4759) (ite x896 (x4320 x4759) (ite x4849 (x4320 x4759) (ite x4287 (x1409 x4759) (x4320 x4759))))))
(define-fun x4527 ((x4759 x1923)) Int (ite x4871 (x2742 x4759) (x1409 x4759)))
(define-fun x3366 ((x4759 x1923)) Int (ite x1310 (x4303 x4759) (ite x222 (x2262 x4759) (x4527 x4759))))
(define-fun x3847 ((x4759 x1923)) Int (ite x229 (x1403 x4759) (x3366 x4759)))
(define-fun x2878 ((x4759 x1923)) Int (ite x4779 (x4320 x4759) (ite x2060 (x4320 x4759) (x3847 x4759))))
(define-fun x1554 ((x4759 x1923)) Int (ite (= x1266 x4759) x2994 (x2437 x4759)))
(define-fun x2720 ((x4759 x1923)) Int (ite x1529 (ite x3694 (x2437 x4759) (x1554 x4759)) (x2437 x4759)))
(define-fun x1431 ((x4759 x1923)) Int (ite (= x2302 x4759) x149 (x2720 x4759)))
(define-fun x4377 ((x4759 x1923)) Int (ite x1138 (x2720 x4759) (x1431 x4759)))
(define-fun x427 ((x4759 x1923)) Int (ite (= x1681 x4759) x1412 (x4377 x4759)))
(define-fun x1063 ((x4759 x1923)) Int (ite x1300 (ite x1204 (x4377 x4759) (x427 x4759)) (x4377 x4759)))
(define-fun x4917 ((x4759 x1923)) Int (ite x4823 (x1063 x4759) (ite x1798 (x4377 x4759) (ite x3353 (x4377 x4759) (ite x2890 (x4377 x4759) (ite x2416 (x1063 x4759) (x4377 x4759)))))))
(define-fun x4166 ((x4759 x1923)) Int (ite x4276 (x4917 x4759) (x1063 x4759)))
(define-fun x2119 ((x4759 x1923)) Int (ite (= x1886 x4759) x2536 (x4377 x4759)))
(define-fun x1044 ((x4759 x1923)) Int (ite x1567 (ite x2293 (x4377 x4759) (x2119 x4759)) (x4377 x4759)))
(define-fun x2837 ((x4759 x1923)) Int (ite x2664 (x1044 x4759) (ite x1615 (x4377 x4759) (ite x1837 (x4377 x4759) (ite x4125 (x4377 x4759) (ite x2393 (x1044 x4759) (x4377 x4759)))))))
(define-fun x2643 ((x4759 x1923)) Int (ite x4876 (x2837 x4759) (x1044 x4759)))
(define-fun x2761 ((x4759 x1923)) Int (ite (= x1298 x4759) x2848 (x4377 x4759)))
(define-fun x1109 ((x4759 x1923)) Int (ite x2100 (ite x4831 (x4377 x4759) (x2761 x4759)) (x4377 x4759)))
(define-fun x45 ((x4759 x1923)) Int (ite x1847 (x1109 x4759) (ite x2154 (x4377 x4759) (ite x4456 (x4377 x4759) (ite x2372 (x4377 x4759) (ite x3242 (x1109 x4759) (x4377 x4759)))))))
(define-fun x2670 ((x4759 x1923)) Int (ite x3944 (x45 x4759) (x1109 x4759)))
(define-fun x2012 ((x4759 x1923)) Int (ite x290 (x4166 x4759) (ite x3966 (x2643 x4759) (x2670 x4759))))
(define-fun x4893 ((x4759 x1923)) Int (ite (= x4759 x3942) x1455 (x2720 x4759)))
(define-fun x3321 ((x4759 x1923)) Int (ite x1787 (ite x4295 (x2720 x4759) (x4893 x4759)) (x2720 x4759)))
(define-fun x3316 ((x4759 x1923)) Int (ite x2817 (x3321 x4759) (ite x3024 (x2720 x4759) (ite x3506 (x2720 x4759) (ite x1130 (x3321 x4759) (x2720 x4759))))))
(define-fun x2934 ((x4759 x1923)) Int (ite x1786 (x3316 x4759) (x3321 x4759)))
(define-fun x4103 ((x4759 x1923)) Int (ite (= x4759 x4744) x1811 (x2720 x4759)))
(define-fun x666 ((x4759 x1923)) Int (ite x801 (ite x1057 (x2720 x4759) (x4103 x4759)) (x2720 x4759)))
(define-fun x4914 ((x4759 x1923)) Int (ite x2977 (x666 x4759) (ite x365 (x2720 x4759) (ite x4620 (x2720 x4759) (ite x71 (x666 x4759) (x2720 x4759))))))
(define-fun x1061 ((x4759 x1923)) Int (ite x3297 (x4914 x4759) (x666 x4759)))
(define-fun x806 ((x4759 x1923)) Int (ite (= x4759 x1846) x2430 (x2720 x4759)))
(define-fun x2926 ((x4759 x1923)) Int (ite x3604 (ite x4816 (x2720 x4759) (x806 x4759)) (x2720 x4759)))
(define-fun x880 ((x4759 x1923)) Int (ite x1311 (x2926 x4759) (ite x896 (x2720 x4759) (ite x4849 (x2720 x4759) (ite x4287 (x2926 x4759) (x2720 x4759))))))
(define-fun x811 ((x4759 x1923)) Int (ite x4871 (x880 x4759) (x2926 x4759)))
(define-fun x4252 ((x4759 x1923)) Int (ite x1310 (x2934 x4759) (ite x222 (x1061 x4759) (x811 x4759))))
(define-fun x3603 ((x4759 x1923)) Int (ite x229 (x2012 x4759) (x4252 x4759)))
(define-fun x2367 ((x4759 x1923)) Int (ite x4779 (x2720 x4759) (ite x2060 (x2720 x4759) (x3603 x4759))))
(define-fun x3999 ((x4759 x1923)) Int (ite (= x4759 x4134) x3544 (x2132 x4759)))
(define-fun x257 ((x4759 x1923)) Int (ite x4927 (x2132 x4759) (ite x4482 (x2132 x4759) (ite x1608 (x2132 x4759) (ite x3206 (x2132 x4759) (ite x2373 (x3999 x4759) (x2132 x4759)))))))
(define-fun x4766 ((x4759 x1923)) Int (ite (= x4759 x3625) x3364 (x3999 x4759)))
(define-fun x4660 ((x4759 x1923)) Int (ite x1529 (x2132 x4759) (ite x2456 (x2132 x4759) (ite x453 (ite x2706 (x257 x4759) (x4766 x4759)) (x2132 x4759)))))
(define-fun x3478 ((x4759 x1923)) Int (ite (= x4759 x4940) x1823 (x4660 x4759)))
(define-fun x2296 ((x4759 x1923)) Int (ite x1122 (x4660 x4759) (ite x2169 (x4660 x4759) (ite x4763 (x4660 x4759) (ite x2168 (x4660 x4759) (ite x1994 (x3478 x4759) (x4660 x4759)))))))
(define-fun x3302 ((x4759 x1923)) Int (ite (= x4785 x4759) x4404 (x3478 x4759)))
(define-fun x3369 ((x4759 x1923)) Int (ite x1300 (x4660 x4759) (ite x804 (x4660 x4759) (ite x1601 (ite x2820 (x2296 x4759) (x3302 x4759)) (x4660 x4759)))))
(define-fun x809 ((x4759 x1923)) Int (ite x4823 (x3369 x4759) (ite x1798 (x4660 x4759) (ite x3353 (x4660 x4759) (ite x2890 (x4660 x4759) (ite x2416 (x3369 x4759) (x4660 x4759)))))))
(define-fun x1834 ((x4759 x1923)) Int (ite x4276 (x809 x4759) (x3369 x4759)))
(define-fun x3355 ((x4759 x1923)) Int (ite (= x3055 x4759) x3621 (x4660 x4759)))
(define-fun x2000 ((x4759 x1923)) Int (ite x1147 (x4660 x4759) (ite x1645 (x4660 x4759) (ite x1498 (x4660 x4759) (ite x3637 (x4660 x4759) (ite x3667 (x3355 x4759) (x4660 x4759)))))))
(define-fun x1514 ((x4759 x1923)) Int (ite (= x4759 x3257) x3017 (x3355 x4759)))
(define-fun x2468 ((x4759 x1923)) Int (ite x1567 (x4660 x4759) (ite x4544 (x4660 x4759) (ite x1848 (ite x4038 (x2000 x4759) (x1514 x4759)) (x4660 x4759)))))
(define-fun x3649 ((x4759 x1923)) Int (ite x2664 (x2468 x4759) (ite x1615 (x4660 x4759) (ite x1837 (x4660 x4759) (ite x4125 (x4660 x4759) (ite x2393 (x2468 x4759) (x4660 x4759)))))))
(define-fun x3551 ((x4759 x1923)) Int (ite x4876 (x3649 x4759) (x2468 x4759)))
(define-fun x3939 ((x4759 x1923)) Int (ite (= x4759 x2069) x3142 (x4660 x4759)))
(define-fun x2181 ((x4759 x1923)) Int (ite x3387 (x4660 x4759) (ite x322 (x4660 x4759) (ite x3215 (x4660 x4759) (ite x3173 (x4660 x4759) (ite x3929 (x3939 x4759) (x4660 x4759)))))))
(define-fun x2292 ((x4759 x1923)) Int (ite (= x940 x4759) x2599 (x3939 x4759)))
(define-fun x3931 ((x4759 x1923)) Int (ite x2100 (x4660 x4759) (ite x1153 (x4660 x4759) (ite x4362 (ite x2614 (x2181 x4759) (x2292 x4759)) (x4660 x4759)))))
(define-fun x1900 ((x4759 x1923)) Int (ite x1847 (x3931 x4759) (ite x2154 (x4660 x4759) (ite x4456 (x4660 x4759) (ite x2372 (x4660 x4759) (ite x3242 (x3931 x4759) (x4660 x4759)))))))
(define-fun x2156 ((x4759 x1923)) Int (ite x3944 (x1900 x4759) (x3931 x4759)))
(define-fun x3867 ((x4759 x1923)) Int (ite x290 (x1834 x4759) (ite x3966 (x3551 x4759) (x2156 x4759))))
(define-fun x1040 ((x4759 x1923)) Int (ite (= x4023 x4759) x793 (x4660 x4759)))
(define-fun x2834 ((x4759 x1923)) Int (ite x309 (x4660 x4759) (ite x792 (x4660 x4759) (ite x2694 (x4660 x4759) (ite x2851 (x4660 x4759) (ite x702 (x1040 x4759) (x4660 x4759)))))))
(define-fun x3169 ((x4759 x1923)) Int (ite (= x4759 x4712) x2439 (x1040 x4759)))
(define-fun x1683 ((x4759 x1923)) Int (ite x1787 (x4660 x4759) (ite x3362 (x4660 x4759) (ite x918 (ite x1451 (x2834 x4759) (x3169 x4759)) (x4660 x4759)))))
(define-fun x3259 ((x4759 x1923)) Int (ite x2817 (x1683 x4759) (ite x3024 (x4660 x4759) (ite x3506 (x4660 x4759) (ite x1130 (x1683 x4759) (x4660 x4759))))))
(define-fun x4416 ((x4759 x1923)) Int (ite x1786 (x3259 x4759) (x1683 x4759)))
(define-fun x2989 ((x4759 x1923)) Int (ite (= x2928 x4759) x2586 (x4660 x4759)))
(define-fun x2413 ((x4759 x1923)) Int (ite x1013 (x4660 x4759) (ite x779 (x4660 x4759) (ite x1079 (x4660 x4759) (ite x3937 (x4660 x4759) (ite x3880 (x2989 x4759) (x4660 x4759)))))))
(define-fun x1797 ((x4759 x1923)) Int (ite (= x4759 x1671) x1462 (x2989 x4759)))
(define-fun x4621 ((x4759 x1923)) Int (ite x801 (x4660 x4759) (ite x532 (x4660 x4759) (ite x4400 (ite x4730 (x2413 x4759) (x1797 x4759)) (x4660 x4759)))))
(define-fun x1464 ((x4759 x1923)) Int (ite x2977 (x4621 x4759) (ite x365 (x4660 x4759) (ite x4620 (x4660 x4759) (ite x71 (x4621 x4759) (x4660 x4759))))))
(define-fun x2701 ((x4759 x1923)) Int (ite x3297 (x1464 x4759) (x4621 x4759)))
(define-fun x320 ((x4759 x1923)) Int (ite (= x2068 x4759) x4489 (x4660 x4759)))
(define-fun x2131 ((x4759 x1923)) Int (ite x4344 (x4660 x4759) (ite x4821 (x4660 x4759) (ite x1665 (x4660 x4759) (ite x3993 (x4660 x4759) (ite x1997 (x320 x4759) (x4660 x4759)))))))
(define-fun x4491 ((x4759 x1923)) Int (ite (= x4759 x4864) x3417 (x320 x4759)))
(define-fun x252 ((x4759 x1923)) Int (ite x3604 (x4660 x4759) (ite x2868 (x4660 x4759) (ite x622 (ite x4321 (x2131 x4759) (x4491 x4759)) (x4660 x4759)))))
(define-fun x4165 ((x4759 x1923)) Int (ite x1311 (x252 x4759) (ite x896 (x4660 x4759) (ite x4849 (x4660 x4759) (ite x4287 (x252 x4759) (x4660 x4759))))))
(define-fun x1062 ((x4759 x1923)) Int (ite x4871 (x4165 x4759) (x252 x4759)))
(define-fun x2754 ((x4759 x1923)) Int (ite x1310 (x4416 x4759) (ite x222 (x2701 x4759) (x1062 x4759))))
(define-fun x2347 ((x4759 x1923)) Int (ite x229 (x3867 x4759) (x2754 x4759)))
(define-fun x3472 ((x4759 x1923)) Int (ite x4779 (x4660 x4759) (ite x2060 (x4660 x4759) (x2347 x4759))))
(define-fun x269 ((x4759 x1923)) Int (ite (= (x4732 x2827) x4759) x1235 (x3455 x4759)))
(define-fun x1605 ((x4759 x1923)) Int (ite (= x4759 (x4732 x4197)) x1473 (x269 x4759)))
(define-fun x1724 ((x4759 x1923)) Int (ite (= (x4732 x4197) x4759) x4322 (x1605 x4759)))
(define-fun x297 ((x4759 x1923)) Int (ite (= x4759 (x4732 x2827)) x2231 (x1724 x4759)))
(define-fun x399 ((x4759 x1923)) Int (ite x3051 (x1605 x4759) (x297 x4759)))
(define-fun x1586 ((x4759 x1923)) Int (ite x229 (x3455 x4759) (x399 x4759)))
(define-fun x2473 ((x4759 x1923)) Int (ite x4779 (x3455 x4759) (ite x2060 (x3455 x4759) (x1586 x4759))))
(define-fun x925 ((x4759 x1923)) Int (ite (= x4759 x2979) x3186 (x1766 x4759)))
(define-fun x919 ((x4759 x1923)) Int (ite x3427 (x1766 x4759) (ite x1629 (x1766 x4759) (ite x2095 (x1766 x4759) (ite x3178 (x1766 x4759) (ite x3135 (x925 x4759) (x1766 x4759)))))))
(define-fun x2494 ((x4759 x1923)) Int (ite (= x4759 x4694) x4778 (x925 x4759)))
(define-fun x2719 ((x4759 x1923)) Int (ite x1529 (x1766 x4759) (ite x2456 (x1766 x4759) (ite x453 (x1766 x4759) (ite x3102 (x919 x4759) (x2494 x4759))))))
(define-fun x155 ((x4759 x1923)) Int (ite (= x4759 x978) x2038 (x2719 x4759)))
(define-fun x2306 ((x4759 x1923)) Int (ite x248 (x2719 x4759) (ite x471 (x2719 x4759) (ite x2931 (x2719 x4759) (ite x4524 (x2719 x4759) (ite x4946 (x155 x4759) (x2719 x4759)))))))
(define-fun x2980 ((x4759 x1923)) Int (ite (= x4406 x4759) x895 (x155 x4759)))
(define-fun x4002 ((x4759 x1923)) Int (ite x1300 (x2719 x4759) (ite x804 (x2719 x4759) (ite x1601 (x2719 x4759) (ite x2361 (x2306 x4759) (x2980 x4759))))))
(define-fun x547 ((x4759 x1923)) Int (ite x4823 (x4002 x4759) (ite x1798 (x2719 x4759) (ite x3353 (x2719 x4759) (ite x2890 (x2719 x4759) (ite x2416 (x4002 x4759) (x2719 x4759)))))))
(define-fun x434 ((x4759 x1923)) Int (ite x4276 (x547 x4759) (x4002 x4759)))
(define-fun x3363 ((x4759 x1923)) Int (ite (= x3422 x4759) x2137 (x2719 x4759)))
(define-fun x1029 ((x4759 x1923)) Int (ite x3026 (x2719 x4759) (ite x4048 (x2719 x4759) (ite x4042 (x2719 x4759) (ite x74 (x2719 x4759) (ite x4860 (x3363 x4759) (x2719 x4759)))))))
(define-fun x4088 ((x4759 x1923)) Int (ite (= x2862 x4759) x1576 (x3363 x4759)))
(define-fun x4661 ((x4759 x1923)) Int (ite x1567 (x2719 x4759) (ite x4544 (x2719 x4759) (ite x1848 (x2719 x4759) (ite x4928 (x1029 x4759) (x4088 x4759))))))
(define-fun x3203 ((x4759 x1923)) Int (ite x2664 (x4661 x4759) (ite x1615 (x2719 x4759) (ite x1837 (x2719 x4759) (ite x4125 (x2719 x4759) (ite x2393 (x4661 x4759) (x2719 x4759)))))))
(define-fun x1320 ((x4759 x1923)) Int (ite x4876 (x3203 x4759) (x4661 x4759)))
(define-fun x916 ((x4759 x1923)) Int (ite (= x4759 x2417) x238 (x2719 x4759)))
(define-fun x1146 ((x4759 x1923)) Int (ite x3723 (x2719 x4759) (ite x887 (x2719 x4759) (ite x2503 (x2719 x4759) (ite x1430 (x2719 x4759) (ite x363 (x916 x4759) (x2719 x4759)))))))
(define-fun x3323 ((x4759 x1923)) Int (ite (= x1707 x4759) x180 (x916 x4759)))
(define-fun x2865 ((x4759 x1923)) Int (ite x2100 (x2719 x4759) (ite x1153 (x2719 x4759) (ite x4362 (x2719 x4759) (ite x2018 (x1146 x4759) (x3323 x4759))))))
(define-fun x4605 ((x4759 x1923)) Int (ite x1847 (x2865 x4759) (ite x2154 (x2719 x4759) (ite x4456 (x2719 x4759) (ite x2372 (x2719 x4759) (ite x3242 (x2865 x4759) (x2719 x4759)))))))
(define-fun x146 ((x4759 x1923)) Int (ite x3944 (x4605 x4759) (x2865 x4759)))
(define-fun x4057 ((x4759 x1923)) Int (ite x290 (x434 x4759) (ite x3966 (x1320 x4759) (x146 x4759))))
(define-fun x188 ((x4759 x1923)) Int (ite (= x4759 x2151) x1337 (x2719 x4759)))
(define-fun x527 ((x4759 x1923)) Int (ite x2628 (x2719 x4759) (ite x747 (x2719 x4759) (ite x1084 (x2719 x4759) (ite x3877 (x2719 x4759) (ite x605 (x188 x4759) (x2719 x4759)))))))
(define-fun x3438 ((x4759 x1923)) Int (ite (= x4759 x1894) x1738 (x188 x4759)))
(define-fun x3473 ((x4759 x1923)) Int (ite x1787 (x2719 x4759) (ite x3362 (x2719 x4759) (ite x918 (x2719 x4759) (ite x988 (x527 x4759) (x3438 x4759))))))
(define-fun x3009 ((x4759 x1923)) Int (ite x2817 (x3473 x4759) (ite x3024 (x2719 x4759) (ite x3506 (x2719 x4759) (ite x1130 (x3473 x4759) (x2719 x4759))))))
(define-fun x600 ((x4759 x1923)) Int (ite x1786 (x3009 x4759) (x3473 x4759)))
(define-fun x3971 ((x4759 x1923)) Int (ite (= x2272 x4759) x3418 (x2719 x4759)))
(define-fun x745 ((x4759 x1923)) Int (ite x3518 (x2719 x4759) (ite x4013 (x2719 x4759) (ite x2369 (x2719 x4759) (ite x2110 (x2719 x4759) (ite x109 (x3971 x4759) (x2719 x4759)))))))
(define-fun x1050 ((x4759 x1923)) Int (ite (= x3827 x4759) x3757 (x3971 x4759)))
(define-fun x474 ((x4759 x1923)) Int (ite x801 (x2719 x4759) (ite x532 (x2719 x4759) (ite x4400 (x2719 x4759) (ite x4102 (x745 x4759) (x1050 x4759))))))
(define-fun x4326 ((x4759 x1923)) Int (ite x2977 (x474 x4759) (ite x365 (x2719 x4759) (ite x4620 (x2719 x4759) (ite x71 (x474 x4759) (x2719 x4759))))))
(define-fun x4313 ((x4759 x1923)) Int (ite x3297 (x4326 x4759) (x474 x4759)))
(define-fun x2596 ((x4759 x1923)) Int (ite (= x2726 x4759) x4700 (x2719 x4759)))
(define-fun x4299 ((x4759 x1923)) Int (ite x3734 (x2719 x4759) (ite x1407 (x2719 x4759) (ite x4122 (x2719 x4759) (ite x1247 (x2719 x4759) (ite x78 (x2596 x4759) (x2719 x4759)))))))
(define-fun x4001 ((x4759 x1923)) Int (ite (= x4759 x3529) x4211 (x2596 x4759)))
(define-fun x636 ((x4759 x1923)) Int (ite x3604 (x2719 x4759) (ite x2868 (x2719 x4759) (ite x622 (x2719 x4759) (ite x4193 (x4299 x4759) (x4001 x4759))))))
(define-fun x398 ((x4759 x1923)) Int (ite x1311 (x636 x4759) (ite x896 (x2719 x4759) (ite x4849 (x2719 x4759) (ite x4287 (x636 x4759) (x2719 x4759))))))
(define-fun x1499 ((x4759 x1923)) Int (ite x4871 (x398 x4759) (x636 x4759)))
(define-fun x1544 ((x4759 x1923)) Int (ite x1310 (x600 x4759) (ite x222 (x4313 x4759) (x1499 x4759))))
(define-fun x3123 ((x4759 x1923)) Int (ite x229 (x4057 x4759) (x1544 x4759)))
(define-fun x4675 ((x4759 x1923)) Int (ite x4779 (x2719 x4759) (ite x2060 (x2719 x4759) (x3123 x4759))))
(define-fun x4439 ((x4759 x1923)) Int (ite x4779 (x897 x4759) (x4444 x4759)))
(define-fun x1726 ((x4759 Int)) Int (ite (= x4759 x2128) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x3305 x4759)))
(define-fun x4028 ((x4759 Int)) Int (ite (= x4759 0) 1 (x549 x4759)))
(define-fun x1710 ((x4759 Int)) Int (ite (= x2128 x4759) 1 (x1726 x4759)))
(define-fun x1341 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x549 x4759)))
(define-fun x2333 ((x4759 Int)) Int (ite (= x4759 x2128) 1 (x1726 x4759)))
(define-fun x231 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x549 x4759)))
(define-fun x1096 ((x4759 Int)) Int (ite (= x2128 x4759) 1 (x1726 x4759)))
(define-fun x1135 ((x4759 x1923)) Int (ite (= x4759 x4003) x1269 (x139 x4759)))
(define-fun x2478 ((x4759 x1923)) Int (ite x2792 (x139 x4759) (x1135 x4759)))
(define-fun x2122 ((x4759 x1923)) Int (ite (= x4759 x1792) 0 (x2478 x4759)))
(define-fun x2125 ((x4759 Int)) Int (ite (= x4759 0) 1 (x4826 x4759)))
(define-fun x4469 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x4826 x4759)))
(define-fun x2501 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x4826 x4759)))
(define-fun x1003 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x4826 x4759)))
(define-fun x3713 ((x4759 Int)) Int (ite (= 0 x4759) x2409 (x3429 x4759)))
(define-fun x3396 ((x4759 Int)) Int (ite (= 0 x4759) x1661 (x3429 x4759)))
(define-fun x2425 ((x4759 Int)) Int (ite (= 0 x4759) x3679 (x3429 x4759)))
(define-fun x3308 ((x4759 Int)) Int (ite x3988 (x1710 x4759) (ite x2573 (x2333 x4759) (x1096 x4759))))
(define-fun x569 ((x4759 Int)) Int (ite (= x246 x4759) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x3308 x4759)))
(define-fun x1577 ((x4759 Int)) Int (ite (= x4759 x824) x986 (x569 x4759)))
(define-fun x27 ((x4759 Int)) Int (ite (= x4759 x4921) x3235 (x1577 x4759)))
(define-fun x2234 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x27 x4759)))
(define-fun x3627 ((x4759 Int)) Int (ite x1049 (x27 x4759) (x2234 x4759)))
(define-fun x4573 ((x4759 Int)) Int (ite (= x246 x4759) 72570022874062638528011751457397263716769196454539065078543251854057308946432 (x3627 x4759)))
(define-fun x1425 ((x4759 Int)) Int (ite (= x4759 x2799) x3235 (x4573 x4759)))
(define-fun x306 ((x4759 Int)) Int (ite (= x4759 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1668 x4759)))
(define-fun x2710 ((x4759 Int)) Int (ite (= 132 x4759) x2827 (x306 x4759)))
(define-fun x1866 ((x4759 Int)) Int (ite (= 164 x4759) x234 (x2710 x4759)))
(define-fun x8 ((x4759 Int)) Int (ite (= x4759 196) x3235 (x1866 x4759)))
(define-fun x2964 ((x4759 x1923)) Int (ite (= x4759 x4020) x1296 (x2878 x4759)))
(define-fun x1741 ((x4759 x1923)) Int (ite (= x4759 x4037) x1836 (x2367 x4759)))
(define-fun x3821 ((x4759 x1923)) Int (ite x1049 (x2367 x4759) (x1741 x4759)))
(define-fun x1022 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x535 x4759)))
(define-fun x3967 ((x4759 x1923)) Int (ite (= x4759 x4194) x3311 (x428 x4759)))
(define-fun x1776 ((x4759 x1923)) Int (ite (= x4759 x2534) x2653 (x3967 x4759)))
(define-fun x3460 ((x4759 Int)) Int (ite (= x4759 0) 1 (x535 x4759)))
(define-fun x1156 ((x4759 x1923)) Int (ite (= x4937 x4759) x3349 (x3472 x4759)))
(define-fun x520 ((x4759 Int)) Int (ite (= x4759 0) 1 (x535 x4759)))
(define-fun x3096 ((x4759 x1923)) Int (ite (= x4759 x1815) x4082 (x4675 x4759)))
(define-fun x3593 ((x4759 Int)) Int (ite (= x4759 0) 1 (x535 x4759)))
(define-fun x2524 ((x4759 Int)) Int (ite (= x4759 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3990 x4759)))
(define-fun x2638 ((x4759 Int)) Int (ite (= 132 x4759) x2827 (x2524 x4759)))
(define-fun x4351 ((x4759 Int)) Int (ite (= x4759 164) x515 (x2638 x4759)))
(define-fun x4894 ((x4759 Int)) Int (ite (= x4759 196) x3235 (x4351 x4759)))
(define-fun x4161 ((x4759 x1923)) Int (ite (= x4759 x1018) x4666 (x2878 x4759)))
(define-fun x2383 ((x4759 Int)) Int (ite (= x4759 0) 1 (x3087 x4759)))
(define-fun x1442 ((x4759 x1923)) Int (ite (= x270 x4759) x1036 (x428 x4759)))
(define-fun x1137 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x3087 x4759)))
(define-fun x2741 ((x4759 x1923)) Int (ite (= x4759 x2760) x4947 (x3472 x4759)))
(define-fun x4814 ((x4759 x1923)) Int (ite (= x3606 x4759) x3013 (x2741 x4759)))
(define-fun x4725 ((x4759 Int)) Int (ite (= x4759 0) 1 (x3087 x4759)))
(define-fun x3479 ((x4759 x1923)) Int (ite (= x4759 x3884) x3370 (x4675 x4759)))
(define-fun x3268 ((x4759 Int)) Int (ite (= x4759 0) 1 (x3087 x4759)))
(define-fun x1086 ((x4759 Int)) Int (ite (= x4759 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x325 x4759)))
(define-fun x204 ((x4759 Int)) Int (ite (= x4759 132) x2827 (x1086 x4759)))
(define-fun x3638 ((x4759 Int)) Int (ite (= 164 x4759) x3180 (x204 x4759)))
(define-fun x2484 ((x4759 Int)) Int (ite (= 196 x4759) x3235 (x3638 x4759)))
(define-fun x3981 ((x4759 x1923)) Int (ite (= x4759 x1621) x4423 (x2878 x4759)))
(define-fun x3249 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x4919 x4759)))
(define-fun x1305 ((x4759 x1923)) Int (ite (= x4759 x3456) x1731 (x428 x4759)))
(define-fun x1106 ((x4759 Int)) Int (ite (= x4759 0) 1 (x4919 x4759)))
(define-fun x1835 ((x4759 x1923)) Int (ite (= x1628 x4759) x414 (x3472 x4759)))
(define-fun x2849 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x4919 x4759)))
(define-fun x1557 ((x4759 x1923)) Int (ite (= x4759 x4734) x3636 (x4675 x4759)))
(define-fun x3935 ((x4759 x1923)) Int (ite (= x412 x4759) x705 (x1557 x4759)))
(define-fun x1854 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x4919 x4759)))
(define-fun x12 ((x4759 Int)) Int (ite (= x4759 x246) 0 (x1425 x4759)))
(define-fun x3526 ((x4759 Int)) Int (ite (= x4759 x246) 0 (x1425 x4759)))
(define-fun x25 ((x4759 Int)) Int (ite (= x4759 x246) 0 (x1425 x4759)))
(define-fun x2960 ((x4759 Int)) Int (ite x359 (ite x1231 (x1425 x4759) (x12 x4759)) (ite x499 (ite x2400 (x1425 x4759) (x3526 x4759)) (ite x3654 (x1425 x4759) (x25 x4759)))))
(define-fun x3611 ((x4759 Int)) Int (ite (= x4759 0) x2905 (x271 x4759)))
(define-fun x1299 ((x4759 Int)) Int (ite (= x4759 0) x2474 (x271 x4759)))
(define-fun x1818 ((x4759 Int)) Int (ite (= 0 x4759) x2502 (x271 x4759)))
(define-fun x1158 ((x4759 x1923)) Int (ite (= x4759 x46) x1968 (x1401 x4759)))
(define-fun x2071 ((x4759 x1923)) Int (ite (= x1856 x4759) 0 (x1158 x4759)))
(define-fun x952 ((x4759 x1923)) Int (ite x1620 (x1158 x4759) (x2071 x4759)))
(define-fun x3774 ((x4759 x1923)) Int (ite (= x1880 x4759) x2223 (x1755 x4759)))
(define-fun x462 ((x4759 x1923)) Int (ite (= x4729 x4759) 0 (x3774 x4759)))
(define-fun x3253 ((x4759 x1923)) Int (ite x2944 (x3774 x4759) (x462 x4759)))
(define-fun x2553 ((x4759 x1923)) Int (ite (= x4071 x4759) x1319 (x952 x4759)))
(define-fun x3635 ((x4759 x1923)) Int (ite (= x174 x4759) x2859 (x3253 x4759)))
(define-fun x1662 ((x4759 x1923)) Int (ite (= x2304 x4759) 0 (x1975 x4759)))
(define-fun x2658 ((x4759 x1923)) Int (ite x3083 (x1975 x4759) (x1662 x4759)))
(define-fun x157 ((x4759 x1923)) Int (ite (= x3000 x4759) x3294 (x2658 x4759)))
(define-fun x1863 ((x4759 x1923)) Int (ite (= x3490 x4759) x3294 (x2658 x4759)))
(define-fun x3632 ((x4759 x1923)) Int (ite (= x4759 x4827) x3294 (x2658 x4759)))
(define-fun x36 ((x4759 x1923)) Int (ite (= x4759 x329) x3294 (x2658 x4759)))
(define-fun x942 ((x4759 x1923)) Int (ite x2449 (x157 x4759) (ite x286 (x1863 x4759) (ite x1277 (x3632 x4759) (x36 x4759)))))
(define-fun x264 ((x4759 x1923)) Int (ite x3581 (x1975 x4759) (ite x964 (x2658 x4759) (x942 x4759))))
(define-fun x3021 ((x4759 x1923)) Int (ite (= x4759 x2520) 0 (x4354 x4759)))
(define-fun x2602 ((x4759 x1923)) Int (ite x1497 (x4354 x4759) (x3021 x4759)))
(define-fun x1454 ((x4759 x1923)) Int (ite (= x1687 x4759) x2318 (x2602 x4759)))
(define-fun x2427 ((x4759 x1923)) Int (ite (= x3842 x4759) x2318 (x2602 x4759)))
(define-fun x4535 ((x4759 x1923)) Int (ite (= x4695 x4759) x2318 (x2602 x4759)))
(define-fun x4824 ((x4759 x1923)) Int (ite (= x2549 x4759) x2318 (x2602 x4759)))
(define-fun x1845 ((x4759 x1923)) Int (ite x4266 (x1454 x4759) (ite x2108 (x2427 x4759) (ite x3019 (x4535 x4759) (x4824 x4759)))))
(define-fun x867 ((x4759 x1923)) Int (ite x1674 (x4354 x4759) (ite x3160 (x2602 x4759) (x1845 x4759))))
(define-fun x1636 ((x4759 Int)) Int (ite (= x4759 0) 1 (x837 x4759)))
(define-fun x37 ((x4759 Int)) Int (ite (= 128 x4759) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1343 x4759)))
(define-fun x4191 ((x4759 Int)) Int (ite (= 132 x4759) x2827 (x37 x4759)))
(define-fun x4012 ((x4759 Int)) Int (ite (= 164 x4759) x234 (x4191 x4759)))
(define-fun x3976 ((x4759 Int)) Int (ite (= x4759 196) x2441 (x4012 x4759)))
(define-fun x1395 ((x4759 Int)) Int (ite (= x4759 0) 1 (x4767 x4759)))
(define-fun x254 ((x4759 Int)) Int (ite (= x4759 0) 1 (x4767 x4759)))
(define-fun x4731 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x4767 x4759)))
(define-fun x3555 ((x4759 Int)) Int (ite (= x4759 0) 1 (x4767 x4759)))
(define-fun x2307 ((x4759 Int)) Int (ite (= x4759 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1244 x4759)))
(define-fun x4433 ((x4759 Int)) Int (ite (= x4759 132) x2827 (x2307 x4759)))
(define-fun x1224 ((x4759 Int)) Int (ite (= x4759 164) x515 (x4433 x4759)))
(define-fun x1150 ((x4759 Int)) Int (ite (= 196 x4759) x2321 (x1224 x4759)))
(define-fun x558 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x4698 x4759)))
(define-fun x1566 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x4698 x4759)))
(define-fun x2407 ((x4759 Int)) Int (ite (= x4759 0) 1 (x4698 x4759)))
(define-fun x4891 ((x4759 Int)) Int (ite (= x4759 0) 1 (x4698 x4759)))
(define-fun x3025 ((x4759 Int)) Int (ite (= x4759 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3222 x4759)))
(define-fun x1784 ((x4759 Int)) Int (ite (= x4759 132) x2827 (x3025 x4759)))
(define-fun x734 ((x4759 Int)) Int (ite (= 164 x4759) x3180 (x1784 x4759)))
(define-fun x688 ((x4759 Int)) Int (ite (= 196 x4759) x375 (x734 x4759)))
(define-fun x469 ((x4759 Int)) Int (ite (= x4759 0) 1 (x840 x4759)))
(define-fun x2807 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x840 x4759)))
(define-fun x2447 ((x4759 Int)) Int (ite (= x4759 0) 1 (x840 x4759)))
(define-fun x2155 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x840 x4759)))
(define-fun x4697 ((x4759 Int)) Int (ite (= 128 x4759) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3984 x4759)))
(define-fun x227 ((x4759 Int)) Int (ite (= x4759 132) x2827 (x4697 x4759)))
(define-fun x590 ((x4759 Int)) Int (ite (= 164 x4759) x234 (x227 x4759)))
(define-fun x3930 ((x4759 Int)) Int (ite (= x4759 196) x1015 (x590 x4759)))
(define-fun x4837 ((x4759 Int)) Int (ite (= x4759 0) 1 (x3320 x4759)))
(define-fun x628 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x3320 x4759)))
(define-fun x2403 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x3320 x4759)))
(define-fun x56 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x3320 x4759)))
(define-fun x1180 ((x4759 Int)) Int (ite (= x4759 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2746 x4759)))
(define-fun x1947 ((x4759 Int)) Int (ite (= 132 x4759) x2827 (x1180 x4759)))
(define-fun x979 ((x4759 Int)) Int (ite (= 164 x4759) x515 (x1947 x4759)))
(define-fun x2571 ((x4759 Int)) Int (ite (= 196 x4759) x4637 (x979 x4759)))
(define-fun x1942 ((x4759 Int)) Int (ite (= x4759 0) 1 (x3987 x4759)))
(define-fun x472 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x3987 x4759)))
(define-fun x183 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x3987 x4759)))
(define-fun x1132 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x3987 x4759)))
(define-fun x4246 ((x4759 Int)) Int (ite (= x4759 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1987 x4759)))
(define-fun x4448 ((x4759 Int)) Int (ite (= x4759 132) x2827 (x4246 x4759)))
(define-fun x4498 ((x4759 Int)) Int (ite (= 164 x4759) x3180 (x4448 x4759)))
(define-fun x3653 ((x4759 Int)) Int (ite (= 196 x4759) x2446 (x4498 x4759)))
(define-fun x700 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x4225 x4759)))
(define-fun x1111 ((x4759 Int)) Int (ite (= x4759 0) 1 (x4225 x4759)))
(define-fun x1643 ((x4759 Int)) Int (ite (= x4759 0) 1 (x4225 x4759)))
(define-fun x4357 ((x4759 Int)) Int (ite (= 0 x4759) 1 (x4225 x4759)))
(define-fun x3808 ((x4759 x1923)) Int (ite x4641 (x2122 x4759) (x2478 x4759)))
(define-fun x904 ((x4759 x1923)) Int (ite (= x4759 x1035) x283 (x185 x4759)))
(define-fun x1611 ((x4759 x1923)) Int (ite (= x364 x4759) x283 (x1532 x4759)))
(define-fun x1703 ((x4759 x1923)) Int (ite (= x619 x4759) 0 (x4439 x4759)))
(define-fun x2173 ((x4759 x1923)) Int (ite (= x4759 x20) x2349 (x4199 x4759)))
(define-fun x4474 ((x4759 x1923)) Int (ite x1338 (x4199 x4759) (ite x1718 (x2173 x4759) (x4199 x4759))))
(define-fun x2533 ((x4759 x1923)) Int (ite x1338 (x185 x4759) (ite x1589 (x904 x4759) (x185 x4759))))
(define-fun x3053 ((x4759 x1923)) Int (ite (= x1588 x4759) x2349 (x4304 x4759)))
(define-fun x3089 ((x4759 x1923)) Int (ite x1718 (x4304 x4759) (x3053 x4759)))
(define-fun x3553 ((x4759 x1923)) Int (ite (= x1228 x4759) 0 (x3089 x4759)))
(define-fun x3462 ((x4759 x1923)) Int (ite x1338 (x4304 x4759) (x3553 x4759)))
(define-fun x2148 ((x4759 x1923)) Int (ite (= x4759 x2150) 0 (x3705 x4759)))
(define-fun x3710 ((x4759 x1923)) Int (ite x1338 (x3705 x4759) (x2148 x4759)))
(define-fun x1289 ((x4759 x1923)) Int (ite x1589 (x1532 x4759) (x1611 x4759)))
(define-fun x3776 ((x4759 x1923)) Int (ite (= x2659 x4759) 0 (x1289 x4759)))
(define-fun x3191 ((x4759 x1923)) Int (ite x1338 (x1532 x4759) (x3776 x4759)))
(define-fun x2857 ((x4759 x1923)) Int (ite x3232 (x1703 x4759) (x4439 x4759)))
(define-fun x470 ((x4759 x1923)) Int (ite (= x1688 x4759) x1243 (x3061 x4759)))
(define-fun x1535 ((x4759 x1923)) Int (ite (= x4213 x4759) x1243 (x2988 x4759)))
(define-fun x3301 ((x4759 x1923)) Int (ite x506 (x2988 x4759) (x1535 x4759)))
(define-fun x4900 ((x4759 x1923)) Int (ite (= x4844 x4759) 0 (x3301 x4759)))
(define-fun x32 ((x4759 x1923)) Int (ite x2757 (x2988 x4759) (x4900 x4759)))
(define-fun x2139 ((x4759 x1923)) Int (ite (= x4759 x4717) x1850 (x3617 x4759)))
(define-fun x3674 ((x4759 x1923)) Int (ite x2757 (x3617 x4759) (ite x3754 (x2139 x4759) (x3617 x4759))))
(define-fun x1278 ((x4759 x1923)) Int (ite (= x4759 x1216) x1850 (x3163 x4759)))
(define-fun x1565 ((x4759 x1923)) Int (ite x3754 (x3163 x4759) (x1278 x4759)))
(define-fun x883 ((x4759 x1923)) Int (ite (= x3701 x4759) 0 (x1565 x4759)))
(define-fun x4441 ((x4759 x1923)) Int (ite x2757 (x3163 x4759) (x883 x4759)))
(define-fun x130 ((x4759 x1923)) Int (ite x2757 (x3061 x4759) (ite x506 (x470 x4759) (x3061 x4759))))
(define-fun x353 ((x4759 x1923)) Int (ite (= x4759 x2070) 0 (x191 x4759)))
(define-fun x999 ((x4759 x1923)) Int (ite x2757 (x191 x4759) (x353 x4759)))
(define-fun x92 ((x4759 x1923)) Int (ite (= x4759 x486) x2838 (x2217 x4759)))
(define-fun x2371 ((x4759 x1923)) Int (ite x3549 (x2217 x4759) (x92 x4759)))
(define-fun x4888 ((x4759 x1923)) Int (ite (= x993 x4759) 0 (x2371 x4759)))
(define-fun x917 ((x4759 x1923)) Int (ite x3083 (x2217 x4759) (x4888 x4759)))
(define-fun x3767 ((x4759 x1923)) Int (ite (= x581 x4759) x2938 (x917 x4759)))
(define-fun x4186 ((x4759 x1923)) Int (ite (= x4691 x4759) 0 (x917 x4759)))
(define-fun x2858 ((x4759 x1923)) Int (ite (= x4759 x4789) x1001 (x917 x4759)))
(define-fun x2778 ((x4759 x1923)) Int (ite (= x4759 x1742) x2445 (x2858 x4759)))
(define-fun x671 ((x4759 x1923)) Int (ite (= x3445 x4759) 0 (x917 x4759)))
(define-fun x1924 ((x4759 x1923)) Int (ite (= x4366 x4759) x2445 (x671 x4759)))
(define-fun x914 ((x4759 x1923)) Int (ite x2449 (x3767 x4759) (ite x286 (x4186 x4759) (ite x1277 (x2778 x4759) (x1924 x4759)))))
(define-fun x4920 ((x4759 x1923)) Int (ite x3581 (x2217 x4759) (ite x964 (x917 x4759) (x914 x4759))))
(define-fun x3214 ((x4759 x1923)) Int (ite (= x890 x4759) x445 (x582 x4759)))
(define-fun x1934 ((x4759 x1923)) Int (ite x2922 (x582 x4759) (x3214 x4759)))
(define-fun x4828 ((x4759 x1923)) Int (ite (= x4759 x4315) 0 (x1934 x4759)))
(define-fun x743 ((x4759 x1923)) Int (ite x3083 (x582 x4759) (x4828 x4759)))
(define-fun x3213 ((x4759 x1923)) Int (ite (= x4314 x4759) 0 (x743 x4759)))
(define-fun x268 ((x4759 x1923)) Int (ite (= x4759 x3912) x2445 (x3213 x4759)))
(define-fun x4098 ((x4759 x1923)) Int (ite (= x4759 x1318) 0 (x743 x4759)))
(define-fun x4945 ((x4759 x1923)) Int (ite (= x1020 x4759) x1515 (x743 x4759)))
(define-fun x3906 ((x4759 x1923)) Int (ite (= x3917 x4759) x2445 (x4945 x4759)))
(define-fun x435 ((x4759 x1923)) Int (ite (= x906 x4759) x1515 (x743 x4759)))
(define-fun x4074 ((x4759 x1923)) Int (ite x2449 (x268 x4759) (ite x286 (x4098 x4759) (ite x1277 (x3906 x4759) (x435 x4759)))))
(define-fun x1034 ((x4759 x1923)) Int (ite x3581 (x582 x4759) (ite x964 (x743 x4759) (x4074 x4759))))
(define-fun x4249 ((x4759 x1923)) Int (ite (= x4759 x1890) x445 (x3591 x4759)))
(define-fun x4462 ((x4759 x1923)) Int (ite x3083 (x3591 x4759) (ite x2922 (x4249 x4759) (x3591 x4759))))
(define-fun x1827 ((x4759 x1923)) Int (ite (= x3792 x4759) x2445 (x4462 x4759)))
(define-fun x772 ((x4759 x1923)) Int (ite (= x4759 x3792) x2445 (x4462 x4759)))
(define-fun x2547 ((x4759 x1923)) Int (ite x2449 (x4462 x4759) (ite x286 (x1827 x4759) (ite x1277 (x4462 x4759) (x772 x4759)))))
(define-fun x2594 ((x4759 x1923)) Int (ite x3581 (x3591 x4759) (ite x964 (x4462 x4759) (x2547 x4759))))
(define-fun x94 ((x4759 x1923)) Int (ite (= x4759 x420) x861 (x2594 x4759)))
(define-fun x1720 ((x4759 x1923)) Int (ite (= x3719 x4759) x861 (x1034 x4759)))
(define-fun x13 ((x4759 x1923)) Int (ite (= x1973 x4759) x2838 (x1543 x4759)))
(define-fun x4811 ((x4759 x1923)) Int (ite x3083 (x1543 x4759) (ite x3549 (x13 x4759) (x1543 x4759))))
(define-fun x73 ((x4759 x1923)) Int (ite (= x119 x4759) x2445 (x4811 x4759)))
(define-fun x1930 ((x4759 x1923)) Int (ite (= x4542 x4759) x2445 (x4811 x4759)))
(define-fun x848 ((x4759 x1923)) Int (ite x2449 (x73 x4759) (ite x286 (x1930 x4759) (x4811 x4759))))
(define-fun x113 ((x4759 x1923)) Int (ite x3581 (x1543 x4759) (ite x964 (x4811 x4759) (x848 x4759))))
(define-fun x850 ((x4759 x1923)) Int (ite (= x4856 x4759) x1169 (x113 x4759)))
(define-fun x2853 ((x4759 x1923)) Int (ite x1909 (x113 x4759) (ite x1250 (x850 x4759) (x113 x4759))))
(define-fun x96 ((x4759 x1923)) Int (ite x1909 (x2594 x4759) (ite x4810 (x94 x4759) (x2594 x4759))))
(define-fun x1142 ((x4759 x1923)) Int (ite x4810 (x1034 x4759) (x1720 x4759)))
(define-fun x3397 ((x4759 x1923)) Int (ite (= x4759 x1918) 0 (x1142 x4759)))
(define-fun x2203 ((x4759 x1923)) Int (ite x1909 (x1034 x4759) (x3397 x4759)))
(define-fun x522 ((x4759 x1923)) Int (ite (= x3858 x4759) x1169 (x4920 x4759)))
(define-fun x715 ((x4759 x1923)) Int (ite x1250 (x4920 x4759) (x522 x4759)))
(define-fun x3565 ((x4759 x1923)) Int (ite (= x2029 x4759) 0 (x715 x4759)))
(define-fun x4384 ((x4759 x1923)) Int (ite x1909 (x4920 x4759) (x3565 x4759)))
(define-fun x3156 ((x4759 x1923)) Int (ite (= x2884 x4759) 0 (x264 x4759)))
(define-fun x3304 ((x4759 x1923)) Int (ite x1909 (x264 x4759) (x3156 x4759)))
(define-fun x759 ((x4759 x1923)) Int (ite (= x4759 x4554) x4723 (x4537 x4759)))
(define-fun x86 ((x4759 x1923)) Int (ite x2617 (x4537 x4759) (x759 x4759)))
(define-fun x1484 ((x4759 x1923)) Int (ite (= x165 x4759) 0 (x86 x4759)))
(define-fun x59 ((x4759 x1923)) Int (ite x1497 (x4537 x4759) (x1484 x4759)))
(define-fun x3319 ((x4759 x1923)) Int (ite (= x4759 x4847) x4688 (x59 x4759)))
(define-fun x403 ((x4759 x1923)) Int (ite (= x4662 x4759) 0 (x59 x4759)))
(define-fun x1414 ((x4759 x1923)) Int (ite (= x57 x4759) x4737 (x59 x4759)))
(define-fun x2218 ((x4759 x1923)) Int (ite (= x4759 x3287) x2445 (x1414 x4759)))
(define-fun x4869 ((x4759 x1923)) Int (ite (= x4759 x1809) 0 (x59 x4759)))
(define-fun x100 ((x4759 x1923)) Int (ite (= x4759 x4411) x2445 (x4869 x4759)))
(define-fun x3389 ((x4759 x1923)) Int (ite x4266 (x3319 x4759) (ite x2108 (x403 x4759) (ite x3019 (x2218 x4759) (x100 x4759)))))
(define-fun x4576 ((x4759 x1923)) Int (ite x1674 (x4537 x4759) (ite x3160 (x59 x4759) (x3389 x4759))))
(define-fun x1775 ((x4759 x1923)) Int (ite (= x4759 x2867) x1853 (x2229 x4759)))
(define-fun x1734 ((x4759 x1923)) Int (ite x29 (x2229 x4759) (x1775 x4759)))
(define-fun x3645 ((x4759 x1923)) Int (ite (= x425 x4759) 0 (x1734 x4759)))
(define-fun x3477 ((x4759 x1923)) Int (ite x1497 (x2229 x4759) (x3645 x4759)))
(define-fun x2442 ((x4759 x1923)) Int (ite (= x3979 x4759) 0 (x3477 x4759)))
(define-fun x3062 ((x4759 x1923)) Int (ite (= x4759 x3100) x2445 (x2442 x4759)))
(define-fun x120 ((x4759 x1923)) Int (ite (= x4759 x2310) 0 (x3477 x4759)))
(define-fun x4258 ((x4759 x1923)) Int (ite (= x921 x4759) x3943 (x3477 x4759)))
(define-fun x3144 ((x4759 x1923)) Int (ite (= x3879 x4759) x2445 (x4258 x4759)))
(define-fun x3851 ((x4759 x1923)) Int (ite (= x4759 x1270) x3943 (x3477 x4759)))
(define-fun x2264 ((x4759 x1923)) Int (ite x4266 (x3062 x4759) (ite x2108 (x120 x4759) (ite x3019 (x3144 x4759) (x3851 x4759)))))
(define-fun x1906 ((x4759 x1923)) Int (ite x1674 (x2229 x4759) (ite x3160 (x3477 x4759) (x2264 x4759))))
(define-fun x1584 ((x4759 x1923)) Int (ite (= x4759 x3748) x1853 (x1878 x4759)))
(define-fun x3950 ((x4759 x1923)) Int (ite x1497 (x1878 x4759) (ite x29 (x1584 x4759) (x1878 x4759))))
(define-fun x1073 ((x4759 x1923)) Int (ite (= x2252 x4759) x2445 (x3950 x4759)))
(define-fun x4594 ((x4759 x1923)) Int (ite (= x4759 x2252) x2445 (x3950 x4759)))
(define-fun x3885 ((x4759 x1923)) Int (ite x4266 (x3950 x4759) (ite x2108 (x1073 x4759) (ite x3019 (x3950 x4759) (x4594 x4759)))))
(define-fun x4912 ((x4759 x1923)) Int (ite x1674 (x1878 x4759) (ite x3160 (x3950 x4759) (x3885 x4759))))
(define-fun x975 ((x4759 x1923)) Int (ite (= x3453 x4759) x2955 (x4912 x4759)))
(define-fun x910 ((x4759 x1923)) Int (ite (= x4759 x53) x2955 (x1906 x4759)))
(define-fun x4401 ((x4759 x1923)) Int (ite (= x4442 x4759) x4723 (x1988 x4759)))
(define-fun x1740 ((x4759 x1923)) Int (ite x1497 (x1988 x4759) (ite x2617 (x4401 x4759) (x1988 x4759))))
(define-fun x131 ((x4759 x1923)) Int (ite (= x54 x4759) x2445 (x1740 x4759)))
(define-fun x4264 ((x4759 x1923)) Int (ite (= x4759 x3152) x2445 (x1740 x4759)))
(define-fun x1045 ((x4759 x1923)) Int (ite x4266 (x131 x4759) (ite x2108 (x4264 x4759) (x1740 x4759))))
(define-fun x1060 ((x4759 x1923)) Int (ite x1674 (x1988 x4759) (ite x3160 (x1740 x4759) (x1045 x4759))))
(define-fun x2301 ((x4759 x1923)) Int (ite (= x4759 x1538) x2695 (x1060 x4759)))
(define-fun x4244 ((x4759 x1923)) Int (ite x3435 (x1060 x4759) (ite x3059 (x2301 x4759) (x1060 x4759))))
(define-fun x4932 ((x4759 x1923)) Int (ite (= x1037 x4759) x2695 (x4576 x4759)))
(define-fun x1901 ((x4759 x1923)) Int (ite x3059 (x4576 x4759) (x4932 x4759)))
(define-fun x1465 ((x4759 x1923)) Int (ite (= x1120 x4759) 0 (x1901 x4759)))
(define-fun x3899 ((x4759 x1923)) Int (ite x3435 (x4576 x4759) (x1465 x4759)))
(define-fun x2343 ((x4759 x1923)) Int (ite x3435 (x4912 x4759) (ite x514 (x975 x4759) (x4912 x4759))))
(define-fun x692 ((x4759 x1923)) Int (ite (= x3383 x4759) 0 (x867 x4759)))
(define-fun x3365 ((x4759 x1923)) Int (ite x3435 (x867 x4759) (x692 x4759)))
(define-fun x4751 ((x4759 x1923)) Int (ite x514 (x1906 x4759) (x910 x4759)))
(define-fun x461 ((x4759 x1923)) Int (ite (= x2283 x4759) 0 (x4751 x4759)))
(define-fun x870 ((x4759 x1923)) Int (ite x3435 (x1906 x4759) (x461 x4759)))
(define-fun x4461 ((x4759 x1923)) Int (ite x4693 (x2203 x4759) (x743 x4759)))
(define-fun x3936 ((x4759 x1923)) Int (ite x1518 (x870 x4759) (x3477 x4759)))
(define-fun x3484 ((x4759 Int)) Int (ite (= x4759 0) 0 (x2893 x4759)))
(define-fun x2210 ((x4759 Int)) Int (ite (= x4759 0) 0 (x2893 x4759)))
(define-fun x2861 ((x4759 Int)) Int (ite (= x4759 0) 0 (x2893 x4759)))
(define-fun x3782 ((x4759 Int)) Int (ite (= 0 x4759) 0 (x607 x4759)))
(define-fun x3204 ((x4759 Int)) Int (ite (= 0 x4759) 0 (x607 x4759)))
(define-fun x3677 ((x4759 Int)) Int (ite (= x4759 0) 0 (x607 x4759)))
(define-fun x915 ((x4759 x1923)) Int (ite x3991 (x4675 x4759) (ite x21 (x4675 x4759) (ite x1315 (x4675 x4759) (ite x2380 (x4675 x4759) (ite x4627 (x1557 x4759) (x4675 x4759)))))))
(define-fun x696 ((x4759 x1923)) Int (ite x3534 (x4675 x4759) (ite x4786 (x4675 x4759) (ite x4938 (x4675 x4759) (ite x879 (x915 x4759) (x3935 x4759))))))
(define-fun x829 ((x4759 Int)) Int (ite (= 0 x4759) 0 (x3236 x4759)))
(define-fun x4410 ((x4759 x1923)) Int (ite x3729 (x3472 x4759) (ite x2898 (x3472 x4759) (ite x4852 (x3472 x4759) (ite x1970 (x3472 x4759) (ite x3566 (x2741 x4759) (x3472 x4759)))))))
(define-fun x3562 ((x4759 x1923)) Int (ite x1587 (x3472 x4759) (ite x2972 (x3472 x4759) (ite x2697 (ite x1027 (x4410 x4759) (x4814 x4759)) (x3472 x4759)))))
(define-fun x2844 ((x4759 Int)) Int (ite (= 0 x4759) 0 (x3236 x4759)))
(define-fun x3112 ((x4759 x1923)) Int (ite x1161 (x428 x4759) (ite x3585 (x428 x4759) (ite x4606 (x428 x4759) (ite x1517 (x428 x4759) (ite x2818 (x3967 x4759) (x428 x4759)))))))
(define-fun x2313 ((x4759 x1923)) Int (ite x2220 (x428 x4759) (ite x2083 (ite x2183 (x3112 x4759) (x1776 x4759)) (x428 x4759))))
(define-fun x2500 ((x4759 Int)) Int (ite (= 0 x4759) 0 (x3236 x4759)))
(define-fun x4904 ((x4759 Int)) Int (ite x4816 (x840 x4759) (x469 x4759)))
(define-fun x1340 ((x4759 Int)) Int (ite x3920 (x840 x4759) (x2807 x4759)))
(define-fun x2580 ((x4759 Int)) Int (ite x4321 (x840 x4759) (x2447 x4759)))
(define-fun x3338 ((x4759 Int)) Int (ite x4193 (x840 x4759) (x2155 x4759)))
(define-fun x2337 ((x4759 Int)) Int (ite x3604 (x4904 x4759) (ite x2868 (x1340 x4759) (ite x622 (x2580 x4759) (x3338 x4759)))))
(define-fun x3726 ((x4759 Int)) Int (ite x1057 (x4698 x4759) (x558 x4759)))
(define-fun x4838 ((x4759 Int)) Int (ite x127 (x4698 x4759) (x1566 x4759)))
(define-fun x4265 ((x4759 Int)) Int (ite x4730 (x4698 x4759) (x2407 x4759)))
(define-fun x4396 ((x4759 Int)) Int (ite x4102 (x4698 x4759) (x4891 x4759)))
(define-fun x2678 ((x4759 Int)) Int (ite x801 (x3726 x4759) (ite x532 (x4838 x4759) (ite x4400 (x4265 x4759) (x4396 x4759)))))
(define-fun x4386 ((x4759 Int)) Int (ite x4295 (x4767 x4759) (x1395 x4759)))
(define-fun x3443 ((x4759 Int)) Int (ite x1475 (x4767 x4759) (x254 x4759)))
(define-fun x490 ((x4759 Int)) Int (ite x1451 (x4767 x4759) (x4731 x4759)))
(define-fun x3395 ((x4759 Int)) Int (ite x988 (x4767 x4759) (x3555 x4759)))
(define-fun x677 ((x4759 Int)) Int (ite x1787 (x4386 x4759) (ite x3362 (x3443 x4759) (ite x918 (x490 x4759) (x3395 x4759)))))
(define-fun x1512 ((x4759 Int)) Int (ite x4831 (x4225 x4759) (x700 x4759)))
(define-fun x1673 ((x4759 Int)) Int (ite x4758 (x4225 x4759) (x1111 x4759)))
(define-fun x2073 ((x4759 Int)) Int (ite x2614 (x4225 x4759) (x1643 x4759)))
(define-fun x3923 ((x4759 Int)) Int (ite x2018 (x4225 x4759) (x4357 x4759)))
(define-fun x104 ((x4759 Int)) Int (ite x2100 (x1512 x4759) (ite x1153 (x1673 x4759) (ite x4362 (x2073 x4759) (x3923 x4759)))))
(define-fun x3569 ((x4759 Int)) Int (ite x2293 (x3987 x4759) (x1942 x4759)))
(define-fun x2363 ((x4759 Int)) Int (ite x1043 (x3987 x4759) (x472 x4759)))
(define-fun x1616 ((x4759 Int)) Int (ite x4038 (x3987 x4759) (x183 x4759)))
(define-fun x1926 ((x4759 Int)) Int (ite x4928 (x3987 x4759) (x1132 x4759)))
(define-fun x3240 ((x4759 Int)) Int (ite x1567 (x3569 x4759) (ite x4544 (x2363 x4759) (ite x1848 (x1616 x4759) (x1926 x4759)))))
(define-fun x2753 ((x4759 Int)) Int (ite x1204 (x3320 x4759) (x4837 x4759)))
(define-fun x4926 ((x4759 Int)) Int (ite x2455 (x3320 x4759) (x628 x4759)))
(define-fun x2943 ((x4759 Int)) Int (ite x2820 (x3320 x4759) (x2403 x4759)))
(define-fun x4506 ((x4759 Int)) Int (ite x2361 (x3320 x4759) (x56 x4759)))
(define-fun x1194 ((x4759 Int)) Int (ite x1300 (x2753 x4759) (ite x804 (x4926 x4759) (ite x1601 (x2943 x4759) (x4506 x4759)))))
(define-fun x3195 ((x4759 Int)) Int (ite (= x4759 0) 1 (x147 x4759)))
(define-fun x4129 ((x4759 x1923)) Int (ite (= (x4732 x2827) x4759) x1768 (x2473 x4759)))
(define-fun x2907 ((x3907 Int) (x2004 Int) (x4776 Int) (x89 Int)) Bool (=> (and (>= x4776 x3907) (<= 0 x2004) (>= x3907 0) (>= x89 x2004)) (<= (x4060 x3907 x2004) (x4060 x4776 x89))))
(define-fun x3745 ((x3907 Int) (x2004 Int) (x4776 Int) (x89 Int)) Bool (=> (= x3907 x4776) (= (- (x4060 x3907 x2004) (x4060 x4776 x89)) (x4060 x3907 (- x2004 x89)))))
(define-fun x4300 ((x3907 Int)) Bool (=> (and (not (= 76833804140862540057647519496925185374644862498684814347804924264468996685824 x3907)) (not (= x3907 242558722)) (not (= 157198259 x3907)) (not (= x3907 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= x3907 599290589)) (not (= 2691771752 x3907)) (not (= 2678788150 x3907)) (not (= 398450620 x3907)) (not (= x3907 35417553099779373699389112480655434059402432070290151981503827724506945814528)) (not (= x3907 50292402827334880472107169365697159231523039388532301717704428044325102813184)) (not (= x3907 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= x3907 2835717307)) (not (= x3907 24044834009420335638544845215851342251227478490780828673611325350056707489792)) (not (= 1461501637330902918203684832716283019655932542975 x3907)) (not (= 2030502250 x3907)) (not (= 405663989 x3907)) (not (= x3907 1856199391)) (not (= x3907 547091486)) (not (= 2134560854 x3907)) (not (= 115792089237316195423570985008687907853269984665640564039457 x3907)) (not (= x3907 1313710058)) (not (= 1865448899 x3907)) (not (= 2236579515 x3907)) (not (= 2858086653 x3907)) (not (= x3907 10936679508223583803006762266923565500374401145016910147028117655998246682624)) (not (= x3907 1466279372)) (not (= x3907 4294967296)) (not (= x3907 18446744073709551615)) (not (= 2217467699 x3907)) (not (= 117300739 x3907)) (not (= x3907 988262939)) (not (= 2023533118 x3907)) (> x3907 10000) (not (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x3907)) (not (= 2929553584 x3907)) (not (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 x3907)) (not (= 2796547477 x3907)) (not (= x3907 1000000000000000000)) (not (= x3907 178855970)) (not (= x3907 75483562)) (not (= x3907 16156842317565293874272834530371880720966471053262404558597773956279093428224)) (not (= 1857877511 x3907)) (not (= x3907 77053863734975077137548456399560439977311721439096602559221323163398253314048)) (not (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 x3907)) (not (= 2362143243 x3907)) (not (= x3907 2245473101)) (not (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x3907)) (not (= 1461501637330902918203684832716283019655932542976 x3907)) (not (= x3907 989455977)) (not (= x3907 1038142104)) (not (= x3907 4238056678808933066457772256406219440718756300954938350892797929791311314944)) (not (= x3907 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (not ((_ is x3454) (x4732 x3907)))))
(assert (x360 x390))
(assert (x4300 x4667))
(assert (= x3959 (=> (and (= x41 x2053) (= x143 x2135)) x1383)))
(assert (= (and x2855 x1691) x3233))
(assert (= x3970 (=> (and (= x1125 x2300) (= x3760 x307)) x1993)))
(assert (= x1450 (not (and (> 1461501637330902918203684832716283019655932542976 x2376) (= (x3243 x1921 1) x4762) (<= 0 x2376) (= x2376 (x32 x4762)) (<= x2376 1461501637330902918203684832716283019655932542975) (= x1921 (x3800 (x4732 x1090) x4305 0))))))
(assert (x360 x1876))
(assert (x360 x2206))
(assert (=> (>= 10000 x3271) (= (x4732 x3271) (x3454 x3271))))
(assert (x360 x424))
(assert (= (and x1937 x2175) x1313))
(assert (x360 x3267))
(assert (= x2349 (x1877 (x4732 x2349))))
(assert (= (and x4272 x4651) x3280))
(assert (= x2589 (and (not x2236) x3862)))
(assert (x360 x392))
(assert (x360 x1610))
(assert (= (and x857 x304) x1589))
(assert (x360 x2042))
(assert (x4300 x1821))
(assert (=> (>= 10000 x2504) (= (x4732 x2504) (x3454 x2504))))
(assert (x360 x245))
(assert (= x3852 (and x1114 x3006)))
(assert (x360 x3692))
(assert (x360 x49))
(assert (x360 x843))
(assert (x360 x2550))
(assert (x360 x846))
(assert (x360 x502))
(assert (x360 x3586))
(assert (x360 x4531))
(assert (x711 x2702))
(assert (= (=> (and (= x4169 x1998) (= 0 x4465)) x3806) x2590))
(assert (= (=> (and (= x3132 0) (= x2149 x166)) x3752) x748))
(assert (x360 x3153))
(assert (= (and x4031 (not x1100)) x1908))
(assert (= (x1877 (x4732 x1428)) x1428))
(assert (= (=> (= (< 0 x42) x3202) (and (=> (and x3202 (and (or (and (not x3749) (= x4597 x3749)) (and x3749 (and (<= 0 x235) (= (x3243 x3813 2) x2036) (= (> x42 x235) x2152) (= x3813 (x3800 (x4732 x4548) x4305 0)) (= x235 (x999 x2036)) (= (not x2152) x4597) (<= x235 115792089237316195423570985008687907853269984665640564039457584007913129639935)))) (and (= (x999 x3830) x1721) (= x3830 (x3243 x2882 2)) (< x4548 1461501637330902918203684832716283019655932542976) (= x2882 (x3800 (x4732 x1080) x4305 0)) (not (= 0 x2542)) (= x3749 (ite (> x2348 0) (not (= 0 x4548)) (< 0 x2348))) (= x2542 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (>= 1461501637330902918203684832716283019655932542975 x4548) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348) (>= x2348 0) (<= 0 x1721) (<= x1721 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4548 (x130 x1682)) (<= 0 x4548) (= (x4728 1461501637330902918203684832716283019655932542975 x1332) x1080) (= x1721 0) (= (x3243 x4305 1) x1682)))) x4219) (=> (not x3202) x3863))) x3722))
(assert (= (and x2140 (not x2537)) x3049))
(assert (x360 x3412))
(assert (x1107 x1426 (- x4674 x1426)))
(assert (x1107 x1426 (- x1806 x3093)))
(assert (= (and x4572 x2186) x1807))
(assert (=> (<= x369 10000) (= (x4732 x369) (x3454 x369))))
(assert (x360 x2261))
(assert (= x2005 (and (not x396) x3663)))
(assert (= x7 (and x311 x1749)))
(assert (x360 x3164))
(assert (x360 x310))
(assert (x4300 x922))
(assert (x360 x2001))
(assert (= (x1877 (x4732 x3406)) x3406))
(assert (= x2745 (or x622 x2868 x3604 x2211)))
(assert (= (or x1497 x3124) x707))
(assert (= x3270 (and x387 (not x148))))
(assert (x360 x4243))
(assert (= x4617 (and x4714 (not x1995))))
(assert (= x4775 (and x1527 x288)))
(assert (x360 x1575))
(assert (x360 x4783))
(assert (x360 x2808))
(assert (x360 x3522))
(assert (x360 x2022))
(assert (x4300 x861))
(assert (x360 x167))
(assert (= x1785 (=> (= (= x307 0) x1989) (and (=> (and (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1125)) (> 32 x1125)) (> x1125 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x14) (not x1989)) (and (=> (and (and (= x701 1) (= x3048 x2734) (= x4308 x4874)) (not x14)) x4428) (=> (and x14 (= x2459 x4874)) x2626))) (=> (and x1989 (= x2459 x4874)) x2626)))))
(assert (x360 x400))
(assert (x360 x4475))
(assert (= x2987 (and x3293 (not x3633))))
(assert (x4300 x3030))
(assert (x360 x4589))
(assert (x360 x515))
(assert (= (x1877 (x4732 x1016)) x1016))
(assert (= (and x225 x4517) x4))
(assert (= (and x4073 (not x2866)) x1367))
(assert (x360 x749))
(assert (= x1127 (and x3932 x2969)))
(assert (x934 x4583 x4144))
(assert (x360 x2645))
(assert (= x532 (or x3283 x127)))
(assert (= (=> (and (= x2780 x4350) (= x1479 x4503) (= 0 x1558)) x3278) x135))
(assert (x360 x2810))
(assert (= x72 (and x3251 (not x3202))))
(assert (= (and x541 (not x526)) x1422))
(assert (= x1762 (and (not x3129) x1897)))
(assert (= (x1877 (x3243 x4063 1)) (+ 1 (x1877 x4063))))
(assert (x360 x3017))
(assert (x360 x3673))
(assert (= x117 (and x3104 x2578)))
(assert (= x424 (x1877 (x4732 x424))))
(assert (x4300 x4459))
(assert (x360 x3915))
(assert (= x4397 (and (not x1578) x2759)))
(assert (= (and x2429 x1571) x4080))
(assert (and (and (= (- (* (- x3235 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3235 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3235 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3235) (- (* x3235 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3235))) (= (x4060 1000000000000000000 (- x3235 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x3235 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x3235 1000000000000000000) (x4060 1000000000000000000 x3235)) (x1520 1000000000000000000 x3235) (x3818 1000000000000000000 x3235) (x3063 1000000000000000000 x3235) (x4067 1000000000000000000 x3235) (x3727 1000000000000000000 x3235)))
(assert (= x4907 (and (not x376) x1480)))
(assert (= (and x4915 x4910) x2890))
(assert (x360 x1953))
(assert (and (x877 x4306 32) (x345 x4306 32) (=> (> 32 0) (= x4306 (+ (x2968 x4306 32) (* (x3413 x4306 32) 32)))) (x4363 x4306 32)))
(assert (x360 x3496))
(assert (x360 x4459))
(assert (x360 x2377))
(assert (= x2829 (and x1635 x1077)))
(assert (x360 x1307))
(assert (= x4084 (or x362 x4693)))
(assert (x360 x1025))
(assert (=> (<= x2913 10000) (= (x3454 x2913) (x4732 x2913))))
(assert (x360 x858))
(assert (= (=> (and (= x1125 x3783) (= x2576 x307)) x1993) x2630))
(assert (= x1569 (and (not x2026) x4591)))
(assert (= x3124 (or x1175 x2617)))
(assert (= x3372 (and (not x1690) x504)))
(assert (= x1057 (or x3080 x2795 x291 x2391 x3558 x3070 x4200 x2003 x1630)))
(assert (x360 x2564))
(assert (x360 x4692))
(assert (= x3342 (and (not x3150) x2606)))
(assert (= (=> (and (= x1914 (= x4710 0)) (or (not x1914) x1914)) x441) x2162))
(assert (= (=> (and (= x2274 x1373) (= x4372 x1064)) x1546) x578))
(assert (=> (>= 10000 x515) (= (x4732 x515) (x3454 x515))))
(assert (= (and x4110 x4560) x546))
(assert (x360 x3905))
(assert (=> (>= 10000 x3327) (= (x4732 x3327) (x3454 x3327))))
(assert (x360 x2513))
(assert (= (x1877 (x3454 77053863734975077137548456399560439977311721439096602559221323163398253314048)) 77053863734975077137548456399560439977311721439096602559221323163398253314048))
(assert (x360 x2777))
(assert (= x2196 (=> (and (= x863 (= x58 0)) (or (not x863) x863)) x2790)))
(assert (= x118 (and x3947 x2856)))
(assert (= x1645 (and (not x4232) x1362)))
(assert (x360 x2671))
(assert (=> (>= 10000 x1184) (= (x4732 x1184) (x3454 x1184))))
(assert (x360 x4467))
(assert (and (and (= (- (* (- x3681 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3681 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3681 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3681) (- (* x3681 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3681))) (= (x4060 1000000000000000000 (- x3681 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x3681 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x3681 1000000000000000000) (x4060 1000000000000000000 x3681)) (x1520 1000000000000000000 x3681) (x3818 1000000000000000000 x3681) (x3063 1000000000000000000 x3681) (x4067 1000000000000000000 x3681) (x3727 1000000000000000000 x3681)))
(assert (= (or x4927 x1608 x3206 x2373 x3652 x4482) x2706))
(assert (= x2959 x3528))
(assert (x360 x1386))
(assert (x4715 x3618))
(assert (= x2640 x941))
(assert (x360 x1230))
(assert (x360 x335))
(assert (x360 x3868))
(assert (x360 x4022))
(assert (= x818 (x1877 (x4732 x818))))
(assert (x360 x4378))
(assert (x3745 x1426 x1806 x4674 x1426))
(assert (x360 x4595))
(assert (x360 x2118))
(assert (= x3283 (and x2987 (not x1185))))
(assert (= (and (not x4916) x2696) x586))
(assert (x360 x1323))
(assert (x360 x4422))
(assert (= x813 (x1877 (x4732 x813))))
(assert (= (=> (and (= x1125 x1896) (= x3872 x307)) x1993) x4234))
(assert (x360 x1169))
(assert (= (and (not x4607) x1590) x1640))
(assert (= (and (not x4339) x2555) x3435))
(assert (= (x4732 1856199391) (x3454 1856199391)))
(assert (x360 x4245))
(assert (x360 x1568))
(assert (x360 x1324))
(assert (= (and x3252 x446) x3789))
(assert (= (and (not x3487) x741) x1910))
(assert (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 (x1877 (x3454 35417553099779373699389112480655434059402432070290151981503827724506945814528))))
(assert (= (+ 1 (x1877 x4056)) (x1877 (x3243 x4056 1))))
(assert (= x1548 (=> (and (= x2184 x3340) (= x1485 x2303)) x3313)))
(assert (x360 x4481))
(assert (x2907 x1426 x1806 x3093 x633))
(assert (= (+ (x1877 x1280) 1) (x1877 (x3243 x1280 1))))
(assert (= x1903 (and x1170 x1376)))
(assert (x711 x1735))
(assert (= (x1877 (x3454 4238056678808933066457772256406219440718756300954938350892797929791311314944)) 4238056678808933066457772256406219440718756300954938350892797929791311314944))
(assert (x360 x1115))
(assert (= x2384 (and (not x4678) x2466)))
(assert (=> (>= 10000 x585) (= (x4732 x585) (x3454 x585))))
(assert (x4300 x3090))
(assert (x360 x3853))
(assert (x360 x3312))
(assert (= (and (not x621) x407) x1094))
(assert (= (and x529 (not x4616)) x2694))
(assert (= (or x2455 x726) x804))
(assert (x360 x3945))
(assert (= x2538 (and (not x3964) x1019)))
(assert (= x3054 (or x4871 x2821)))
(assert (= (x1877 (x3243 x4504 1)) (+ (x1877 x4504) 1)))
(assert (= x2545 (and x976 (not x260))))
(assert (x360 x1561))
(assert (x360 x3520))
(assert (x360 x4859))
(assert (= x4223 (and x3184 x4477)))
(assert (= (and x3530 x4195) x3284))
(assert (x360 x2561))
(assert (= x2977 (and x2385 x516)))
(assert (x2835 x3945))
(assert (x4383 x497))
(assert (x360 x2479))
(assert (= (and (not x572) x4590) x4333))
(assert (=> (>= 10000 x1004) (= (x4732 x1004) (x3454 x1004))))
(assert (x360 x3142))
(assert (x4715 x4306))
(assert (x360 x1296))
(assert (= x2419 (and x4237 x3101)))
(assert (=> (>= 10000 x1) (= (x4732 x1) (x3454 x1))))
(assert (=> (<= x3474 10000) (= (x4732 x3474) (x3454 x3474))))
(assert (x360 x317))
(assert (x360 x2256))
(assert (x360 x2112))
(assert (x4300 x2457))
(assert (= x3335 (and x2451 (not x443))))
(assert (x360 x539))
(assert (x360 x591))
(assert (x3745 x1426 x4674 x3093 x633))
(assert (x360 x4008))
(assert (x360 x4460))
(assert (x360 x442))
(assert (x360 x2709))
(assert (x360 x162))
(assert (= x4183 (=> (and (= (= x3016 0) x618) (or (not x618) x618)) x3404)))
(assert (x360 x1030))
(assert (x360 x4503))
(assert (= (=> (and (= x731 x4710) (= x3699 x3894)) x2162) x1802))
(assert (x360 x3018))
(assert (= (x3454 2796547477) (x4732 2796547477)))
(assert (x360 x2015))
(assert (= (and x4566 x1641) x340))
(assert (= x3932 (and x115 x2246)))
(assert (=> (>= 10000 x1634) (= (x3454 x1634) (x4732 x1634))))
(assert (= x1625 (and (not x1779) x1907)))
(assert (x360 x330))
(assert (= (and (not x1304) x3869) x623))
(assert (and (x877 x4711 1461501637330902918203684832716283019655932542976) (x345 x4711 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x4711 (+ (x2968 x4711 1461501637330902918203684832716283019655932542976) (* (x3413 x4711 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x4363 x4711 1461501637330902918203684832716283019655932542976)))
(assert (= x1024 (x1877 (x4732 x1024))))
(assert (x360 x2476))
(assert (= (or x4549 x879) x319))
(assert (x360 x1491))
(assert (x1107 x1426 (- x1806 x1426)))
(assert (= (and x1625 x3965) x3683))
(assert (= (and (=> (and (not x1513) (and (= x1515 x2191) (= x3200 0))) x1437) (=> (and x1513 (and (and (>= x3540 0) (= x371 (ite (< 1 x2348) (not (= 0 x3540)) (< 1 x2348))) (= x3561 (x3243 x275 1)) (= x275 (x3800 (x4732 x2191) x2064 0)) (> 1461501637330902918203684832716283019655932542976 x3540) (= (x743 x3561) x3540) (<= x3540 1461501637330902918203684832716283019655932542975)) (or (and x371 (and (= x1415 (> x3294 x4229)) (<= x4229 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2658 x1729) x4229) (= (not x1415) x1977) (= x1729 (x3243 x827 2)) (= x827 (x3800 (x4732 x3540) x2064 0)) (>= x4229 0))) (and (= x1977 x371) (not x371))))) x4793)) x577))
(assert (= (+ (x1877 x3714) 1) (x1877 (x3243 x3714 1))))
(assert (= (and x199 x3750) x565))
(assert (= (and x3411 (not x4228)) x989))
(assert (x360 x4553))
(assert (x360 x4718))
(assert (= x3863 x802))
(assert (= (=> (and (= x2539 x1746) (= x4507 x3780)) x4609) x3192))
(assert (x360 x2007))
(assert (= x2134 (and x148 x387)))
(assert (= x2191 (x1877 (x4732 x2191))))
(assert (and (x4019 x2563 1000000000000000000) (=> (and (> 1000000000000000000 0) (> x2563 0)) (and (<= (* 1000000000000000000 (x3413 x2563 1000000000000000000)) x2563) (< (- x2563 1000000000000000000) (* 1000000000000000000 (x3413 x2563 1000000000000000000))))) (x3763 x2563 1000000000000000000) (x1905 x2563 1000000000000000000) (x3469 x2563 1000000000000000000)))
(assert (x360 x211))
(assert (x360 x2460))
(assert (= (and x2774 (not x2295)) x44))
(assert (x360 x2529))
(assert (x360 x3724))
(assert (x360 x2669))
(assert (x360 x2402))
(assert (x360 x1820))
(assert (x360 x2512))
(assert (= x3558 (and x4283 x2872)))
(assert (x360 x4710))
(assert (= x381 (and (not x859) x294)))
(assert (x360 x2462))
(assert (= x2144 (and x3373 (not x2202))))
(assert (x360 x2279))
(assert (x4300 x4822))
(assert (x360 x691))
(assert (x360 x1603))
(assert (= x1478 (=> (and (= x1379 x3357) (= x1387 0)) x2341)))
(assert (x4300 x1206))
(assert (x711 x2180))
(assert (x360 x1738))
(assert (x360 x655))
(assert (= x1474 (and x574 (not x2569))))
(assert (= (x1877 (x3454 988262939)) 988262939))
(assert (x360 x4341))
(assert (x360 x836))
(assert (x360 x1046))
(assert (x360 x1754))
(assert (x360 x1172))
(assert (=> (<= x861 10000) (= (x4732 x861) (x3454 x861))))
(assert (x4300 x670))
(assert (x360 x4197))
(assert (x934 x4312 x1805))
(assert (= x3145 (and x1613 x4431)))
(assert (= x2841 (and (not x4272) x4651)))
(assert (x360 x4865))
(assert (=> (<= x4667 10000) (= (x3454 x4667) (x4732 x4667))))
(assert (= (=> (and (or (and (and (or (and (not x3226) (and (= x169 (x4034 (+ 96 x3580))) (= x169 x4692) (= (x3243 x1270 1) x2549) (= (x3800 (x4732 x3943) x3247 0) x4411) (= x1270 (x3243 x1809 1)) (= x1809 (x3800 (x4732 x2445) x3247 0)))) (and (and (>= 1461501637330902918203684832716283019655932542975 x4737) (= x261 (x3800 (x4732 x4737) x3247 0)) (= (x3800 (x4732 x2445) x3247 0) x57) (= x864 (x4034 (+ x3580 96))) (>= x4737 0) (= x4695 (x3243 x921 1)) (= x3287 (x3800 (x4732 x3943) x3247 0)) (= x4692 x864) (= x4737 (x59 x2054)) (> 1461501637330902918203684832716283019655932542976 x4737) (= x2054 (x3800 (x4732 x3943) x3247 0)) (= x3879 (x3243 x261 1)) (= (x3243 x57 1) x921)) x3226)) (and (<= 0 x4062) (= (< 0 x892) x3226) (< x4062 1461501637330902918203684832716283019655932542976) (<= x4062 1461501637330902918203684832716283019655932542975) (= x892 (x2102 (- x3943 x4062))) (= x4062 (x3950 x2252)))) x3269) (and (not x3269) (and (and (<= 0 x1470) (= x1470 (x3950 x2252)) (> 1461501637330902918203684832716283019655932542976 x1470) (>= 1461501637330902918203684832716283019655932542975 x1470) (= (= 0 x1470) x357)) (or (and (and (> 1461501637330902918203684832716283019655932542976 x4688) (= (x1740 x54) x4688) (>= 1461501637330902918203684832716283019655932542975 x4688) (= x3100 (x3243 x2414 1)) (= (x3243 x2252 1) x54) (<= 0 x4688) (= x4692 x686) (= x4847 (x3800 (x4732 x2445) x3247 0)) (= (x3243 x3979 1) x1687) (= x2414 (x3800 (x4732 x4688) x3247 0)) (= x686 (x4034 (+ 96 x3580))) (= x3979 (x3243 x4847 1))) (not x357)) (and (and (= (x3243 x2252 1) x3152) (= (x3243 x4662 1) x2310) (= x4692 x1377) (= x4662 (x3800 (x4732 x2445) x3247 0)) (= (x4034 (+ x3580 96)) x1377) (= (x3243 x2310 1) x3842)) x357))))) (= x3269 (ite (< x2086 x2348) (not (= x3943 0)) (< x2086 x2348)))) x2663) x3570))
(assert (= (and (not x1912) x3486) x1413))
(assert (x360 x4054))
(assert (= x334 (=> (and (= x1207 x1966) (= x3043 0)) x3011)))
(assert (x360 x1743))
(assert (x360 x3679))
(assert (x3745 x1426 x1806 x3093 x633))
(assert (x360 x184))
(assert (= (and (not x4906) x2398) x964))
(assert (= x2675 (and x3811 x2282)))
(assert (= (=> (and (or (and (and (or (not x1225) (and x1225 (and (= (x3800 (x4732 x4865) x4007 0) x598) (<= 0 x3982) (= x3982 (x3899 x598)) (< x3982 1461501637330902918203684832716283019655932542976) (<= x3982 1461501637330902918203684832716283019655932542975)))) (and (<= 0 x4567) (>= 1461501637330902918203684832716283019655932542975 x4567) (= x1225 (> x1033 0)) (= x4567 (x2343 x122)) (= x1033 (x2102 (- x4865 x4567))) (> 1461501637330902918203684832716283019655932542976 x4567))) x3495) (and (and (and (= x1208 (= x4086 0)) (>= 1461501637330902918203684832716283019655932542975 x4086) (> 1461501637330902918203684832716283019655932542976 x4086) (= (x2343 x122) x4086) (>= x4086 0)) (or x1208 (and (and (> 1461501637330902918203684832716283019655932542976 x1397) (= (x4244 x2523) x1397) (>= 1461501637330902918203684832716283019655932542975 x1397) (<= 0 x1397) (= x2523 (x3243 x122 1))) (not x1208)))) (not x3495))) (= x3495 (ite (> x2348 x4887) (not (= 0 x4865)) (> x2348 x4887)))) x3925) x1402))
(assert (x360 x3271))
(assert (=> (<= x3574 10000) (= (x4732 x3574) (x3454 x3574))))
(assert (= (and x722 (not x2627)) x496))
(assert (x360 x782))
(assert (= (=> (and (= x2660 x3256) (= x3882 x3823)) x1399) x2560))
(assert (x360 x2695))
(assert (x360 x2388))
(assert (x1107 x1806 x1426))
(assert (x360 x4202))
(assert (x4300 x1495))
(assert (= x1650 (=> (and (= x945 x3227) (= x3715 x4526) (= x2043 x4768) (= x4371 x756) (= x4120 x2355)) x1188)))
(assert (= (and (not x1841) x2637) x1368))
(assert (x4300 x4185))
(assert (= (x1877 (x4732 x3327)) x3327))
(assert (x360 x4180))
(assert (= x62 (and x3466 x1325)))
(assert (= (x1877 (x4732 x1821)) x1821))
(assert (= (and x3672 x926) x2518))
(assert (x360 x4256))
(assert (x360 x824))
(assert (= (and x2668 x542) x419))
(assert (= x1291 (or (and x3766 x665) (and (not x2422) x4774) (and x190 (not x1297)) (and x1617 x3314) x3280 x517)))
(assert (x360 x3180))
(assert (= x2954 (and x1494 x4877)))
(assert (= (and x110 (not x798)) x1952))
(assert (= x3157 (and x4231 x878)))
(assert (x1107 x4674 x1426))
(assert (x360 x4156))
(assert (= (and x3129 x1897) x19))
(assert (x360 x4625))
(assert (x2915 x2079))
(assert (= x2221 (=> (and (= x2055 x3894) (= x4710 x4643)) x2162)))
(assert (x360 x293))
(assert (= (x1877 (x3454 599290589)) 599290589))
(assert (x360 x4004))
(assert (x360 x3949))
(assert (x360 x1371))
(assert (x360 x4548))
(assert (x360 x924))
(assert (x360 x2787))
(assert (x4300 x3747))
(assert (x360 x4532))
(assert (x360 x337))
(assert (x2915 x1151))
(assert (= (and (not x3940) x2212) x510))
(assert (= x1715 (and x4291 (not x960))))
(assert (= (or x1381 x4017 (and (not x3941) x385) (and (not x616) x3335) (and x443 x2451) (and x2587 x3099)) x4493))
(assert (x360 x1523))
(assert (x360 x4711))
(assert (x360 x2584))
(assert (x360 x213))
(assert (= x1972 (and x2987 x1185)))
(assert (= (+ 1 (x1877 x3247)) (x1877 (x3243 x3247 1))))
(assert (x360 x746))
(assert (x360 x1449))
(assert (x360 x2536))
(assert (= x2344 (or x3543 (and x2214 (not x4740)))))
(assert (= (x3454 24044834009420335638544845215851342251227478490780828673611325350056707489792) (x4732 24044834009420335638544845215851342251227478490780828673611325350056707489792)))
(assert (= (+ 1 (x1877 x425)) (x1877 (x3243 x425 1))))
(assert (x360 x1823))
(assert (x360 x1836))
(assert (x360 x3045))
(assert (= x2504 (x1877 (x4732 x2504))))
(assert (x360 x2773))
(assert (x77 x1735))
(assert (x360 x1257))
(assert (x360 x933))
(assert (x360 x4901))
(assert (x360 x3179))
(assert (= x1314 (and x1195 (not x296))))
(assert (x2835 x905))
(assert (= (and x2692 x775) x3387))
(assert (x360 x744))
(assert (= (and x3737 (not x4929)) x3015))
(assert (x360 x1485))
(assert (= x2790 (=> (= (= 0 x58) x4709) (and (=> (and (= x3788 (or (and (< x409 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x409))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x409))) (not x4709)) (and (=> (and (not x3788) (and (<= x4934 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4934) (= x1482 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3412))) (= (< x1482 x4934) x1256))) (and (=> (and (not x1256) (and (= x791 (< x1482 x1248)) (= (x696 x3898) x1248) (= x1642 (x4034 (+ x4934 x3412))) (<= 0 x1248) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1248) (= (x3800 (x4732 x2827) (x3454 5) 0) x3898))) (and (=> x791 x2590) (=> (and (not x791) (and (= 1 x4465) (= x4169 32) (= x4624 (x4034 (+ x3412 x1248))))) x3806))) (=> x1256 x2590))) (=> x3788 x2590))) (=> x4709 x2590)))))
(assert (= (and x2823 (not x239)) x328))
(assert (= (x1877 (x4732 x4253)) x4253))
(assert (= (or x1518 x2448) x2270))
(assert (x360 x3846))
(assert (x360 x418))
(assert (= (and x2236 x3862) x346))
(assert (= (or (and x2480 x1393) x1789 x3909 (and (not x4656) x1581) (and (not x713) x2472) (and x4714 x1995)) x2963))
(assert (x3272 x3332 x1426))
(assert (= (or x3807 x4276) x290))
(assert (x360 x1125))
(assert (x360 x1041))
(assert (x360 x3938))
(assert (= x1133 x1606))
(assert (x360 x1649))
(assert (x4300 x667))
(assert (x360 x1455))
(assert (= (and x2581 x173) x3955))
(assert (= (or x1221 x4831) x2100))
(assert (x360 x4077))
(assert (= x4105 (and x3430 x1670)))
(assert (= x283 (x1877 (x4732 x283))))
(assert (x360 x2088))
(assert (= x2364 (and x3588 (not x953))))
(assert (= (x1877 (x4732 x3893)) x3893))
(assert (= (and x4807 (not x4052)) x4752))
(assert (= (x1877 (x3243 x921 1)) (+ (x1877 x921) 1)))
(assert (x360 x4005))
(assert (x360 x2609))
(assert (x360 x4158))
(assert (x360 x4253))
(assert (x360 x3544))
(assert (= x3585 (and x659 (not x2285))))
(assert (x360 x2575))
(assert (x360 x3836))
(assert (= (=> (and (= x1384 (x4728 1461501637330902918203684832716283019655932542975 x986)) (= x1712 (x3800 (x4732 x1384) (x3454 158) 0)) (= (x4728 1461501637330902918203684832716283019655932542975 x1332) x1092) (= x1280 (x3800 (x4732 x1092) x1712 0)) (= (> x1353 0) x1149)) (and (=> (and (and (= x787 x1227) (= x782 x1092) (= x448 x756) (= x3227 x4934) (= x601 x2128)) (not x1149)) x1095) (=> (and (and (= x209 x3691) (= (+ x3691 x2433) x1172) (< (* x3118 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x897 x1280) x209) (= (x3243 x2843 1) x874) (>= x440 0) (= (x2477 (* x1353 1000000000000000000)) x3118) (= (x4034 (+ 32 x1843)) x1979) (= x742 (> x1353 115792089237316195423570985008687907853269984665640564039457)) (= x835 (x4728 1461501637330902918203684832716283019655932542975 x986)) (= x440 (x1736 x2646)) (< 0 x440) (<= x1058 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1058 x3276)) (= (x2666 x874) x1058) (= x3276 (x3413 x1610 1000000000000000000)) (= x3086 (x4728 1461501637330902918203684832716283019655932542975 x986)) (= (* 1000000000000000000 x3118) x2482) (>= x209 0) (= x2433 x3276) (= x1058 x2683) (= x1843 (x4034 (+ x601 4))) (= (= x234 x3086) x4525) (= x1610 (x3413 x2482 x440)) (= x1871 (+ x2683 x2788)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x440) (< (+ x3276 x209) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1058 0) (= x2788 x3276) (= x1801 (x2102 (- x1979 x601))) (= x1678 0) (= x2646 (x3800 (x4732 x835) (x3454 164) 0)) (<= x209 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (ite x742 1 0) x1678)) x1149) (and (=> (and (= x4302 (= x515 x3086)) (not x4525)) (and (=> (and (and (and (and (= x2247 (x1507 (x4732 x3180))) (= x1801 x482) (< x1870 988262939) (= x4338 (or (> x1014 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1014) true) (< x1014 32)))) (not (< x482 4)) (not (= 75483562 x1870)) (> x2247 0) (> 405663989 x1870) (= x4644 x2827) (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x4044) (= (x2102 (- x482 4)) x1014) (< x1870 2217467699) (= x482 36) (not (= 242558722 x1870)) (= x1870 398450620) (not (= x1870 178855970))) x1855) (= x1855 (= x3180 x3086))) (not x4302)) (and (=> x4338 x1788) (=> (and (and (= (= x2827 x4644) x1193) (= x4318 x4644)) (not x4338)) (and (=> (and (and (<= 0 x3170) (= x3835 1) (= (x3800 (x4732 x4644) (x3454 6) 0) x48) (= x1561 32) (= x3170 (x2487 x48)) (<= x3170 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1193) x4683) (=> (not x1193) x1788))))) (=> (and x4302 (and (< x4510 405663989) (= x272 x1801) (< 0 x1876) (= x4510 398450620) (> 988262939 x4510) (= (or (and (> 32 x4210) (= (<= x4210 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4210)) x30) (< x4510 2217467699) (= x4532 10742207464693106059581744854972325794081737850190833080250671788038469713920) (= x667 x2827) (not (= x4510 242558722)) (not (= 75483562 x4510)) (= x1876 (x1507 (x4732 x515))) (= (x2102 (- x272 4)) x4210) (not (= 178855970 x4510)) (not (> 4 x272)) (= x272 36))) (and (=> (and (and (= x2771 x667) (= (= x667 x2827) x1114)) (not x30)) (and (=> (and (and (= 32 x4293) (<= 0 x2388) (<= x2388 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1212 x3146) x2388) (= x3146 (x3800 (x4732 x667) (x3454 6) 0)) (= x386 1)) x1114) x4701) (=> (not x1114) x4241))) (=> x30 x4241))))) (=> (and x4525 (and (= x4769 (or (> x3583 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x3583 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x3583)))) (not (= x1288 75483562)) (= x1888 (x1507 (x4732 x234))) (> 988262939 x1288) (= x1288 398450620) (> 2217467699 x1288) (= 36 x2822) (< 0 x1888) (not (> 4 x2822)) (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x771) (= x693 x2827) (< x1288 405663989) (= (x2102 (- x2822 4)) x3583) (= x2822 x1801) (not (= x1288 178855970)) (not (= x1288 242558722)))) (and (=> (and (not x4769) (and (= x1618 x693) (= (= x693 x2827) x2153))) (and (=> (and x2153 (and (= x4307 1) (= x105 (x3800 (x4732 x693) (x3454 6) 0)) (= (x968 x105) x3753) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3753) (<= 0 x3753) (= 32 x3820))) x410) (=> (not x2153) x683))) (=> x4769 x683))))))) x3084))
(assert (x77 x3618))
(assert (= (or x2920 x4218) x4630))
(assert (= (x1877 (x4732 x515)) x515))
(assert (x360 x2619))
(assert (x360 x3474))
(assert (x360 x1528))
(assert (x360 x4788))
(assert (= x4915 (and (not x38) x510)))
(assert (= x1788 (=> (and (= x3835 0) (= x1258 x1561)) x4683)))
(assert (= (and (not x4109) x40) x2603))
(assert (x2885 x1805))
(assert (= (+ (x1877 x1709) 1) (x1877 (x3243 x1709 1))))
(assert (= (or x1674 x2421) x1328))
(assert (x360 x4380))
(assert (x360 x451))
(assert (= (=> (and (= x1258 x4293) (= 0 x386)) x4701) x4241))
(assert (x2915 x3332))
(assert (= x71 (and x4133 x1200)))
(assert (= x4622 (or x1291 x2841)))
(assert (=> (<= x1206 10000) (= (x4732 x1206) (x3454 x1206))))
(assert (= (and x3951 (not x4593)) x3181))
(assert (x4300 x4548))
(assert (= x1161 (and x735 x3066)))
(assert (x360 x484))
(assert (x4300 x468))
(assert (x360 x524))
(assert (= (and x3282 (not x1438)) x4159))
(assert (x360 x2941))
(assert (x360 x3227))
(assert (= (+ 1 (x1877 x4305)) (x1877 (x3243 x4305 1))))
(assert (x4300 x1091))
(assert (x360 x2782))
(assert (= x1362 (and x2863 x1002)))
(assert (x360 x2316))
(assert (x360 x1317))
(assert (= x3904 (and (not x2080) x2025)))
(assert (=> (>= 10000 x4168) (= (x3454 x4168) (x4732 x4168))))
(assert (= x1758 (and x4085 (not x3255))))
(assert (= x4620 (and x4335 x1677)))
(assert (x360 x1377))
(assert (x360 x1896))
(assert (x360 x440))
(assert (= (and (not x3337) x995) x1457))
(assert (= (and (not x3883) x4538) x83))
(assert (= x111 (or x1148 x1138)))
(assert (x4300 x3007))
(assert (= (x4732 2678788150) (x3454 2678788150)))
(assert (= x738 (and x618 x111)))
(assert (x4300 x369))
(assert (= x826 (=> (and (or (and (and (= x2445 x3030) (= x2569 x3326)) (not x3326)) (and x3326 (and (<= 0 x502) (>= 1461501637330902918203684832716283019655932542975 x502) (= (x3800 (x4732 x2808) (x3454 157) 0) x3057) (= (= x502 0) x4457) (= (x4728 1461501637330902918203684832716283019655932542975 x986) x2808) (= x502 (x2594 x1761)) (= x1761 (x3243 x3057 1)) (> 1461501637330902918203684832716283019655932542976 x502) (= (not x4457) x2569) (= x502 x3030)))) (and (= (x4034 (+ x1440 32)) x3336) (= (> x1026 x3361) x3326))) x4696)))
(assert (= (and x1719 x2266) x4070))
(assert (= (and (not x913) x208) x2201))
(assert (= (x1877 (x3243 x2659 1)) (+ (x1877 x2659) 1)))
(assert (x360 x681))
(assert (= (and x4877 (not x1494)) x40))
(assert (= x4763 (and x1569 (not x154))))
(assert (x360 x3675))
(assert (=> (<= x1698 10000) (= (x4732 x1698) (x3454 x1698))))
(assert (x4300 x2046))
(assert (= x512 (and x2774 x2295)))
(assert (x360 x3060))
(assert (= (and (not x3874) x277) x3588))
(assert (= (and (not x4516) x1434) x2871))
(assert (x360 x47))
(assert (= (+ (x1877 x1318) 1) (x1877 (x3243 x1318 1))))
(assert (x2907 x633 x3093 x1806 x1426))
(assert (= (or x3963 x4038) x1848))
(assert (x360 x2268))
(assert (= (and x2588 x4196) x1858))
(assert (= x725 (and x3605 (not x3149))))
(assert (x360 x704))
(assert (= (=> (and (= x591 x787) (= x756 x4192) (= x2513 x701) (= x4308 x3434)) x2098) x4428))
(assert (x360 x4771))
(assert (= x9 (or x513 x453 x1529 x2456)))
(assert (= x3194 (or x2201 x2338)))
(assert (x360 x585))
(assert (= (and x4740 x2214) x3543))
(assert (x360 x4430))
(assert (= x3248 (and x2805 (not x2665))))
(assert (x360 x592))
(assert (= (x3454 75483562) (x4732 75483562)))
(assert (x360 x3406))
(assert (x3745 x1426 x4674 x633 x3093))
(assert (= (x1877 (x4732 x3421)) x3421))
(assert (x360 x1916))
(assert (x360 x4671))
(assert (and (x877 x2756 32) (x345 x2756 32) (=> (> 32 0) (= x2756 (+ (x2968 x2756 32) (* (x3413 x2756 32) 32)))) (x4363 x2756 32)))
(assert (= x4502 (and x3373 x2202)))
(assert (x360 x1634))
(assert (= 2835717307 (x1877 (x3454 2835717307))))
(assert (x4715 x4040))
(assert (= (and (not x4463) x4879) x4143))
(assert (= (and x1690 x504) x972))
(assert (= (and x2691 x2935) x1522))
(assert (= (and x3027 x4702) x1691))
(assert (x360 x2127))
(assert (x360 x4825))
(assert (= (and x1625 (not x3965)) x3258))
(assert (= x3432 (and x2923 x3651)))
(assert (= (x1877 (x4732 x2255)) x2255))
(assert (= x1978 (x1877 (x4732 x1978))))
(assert (x360 x3762))
(assert (x360 x107))
(assert (= x966 (and x646 (not x3547))))
(assert (= (x1877 (x4732 x2138)) x2138))
(assert (= x2486 (and x623 (not x2714))))
(assert (= (x1877 (x3243 x351 2)) (+ (x1877 x351) 2)))
(assert (x360 x4611))
(assert (x360 x1155))
(assert (x4300 x2009))
(assert (= x1287 (x1877 (x4732 x1287))))
(assert (x360 x2502))
(assert (= x3873 (and (not x2200) x777)))
(assert (x360 x3307))
(assert (x360 x1751))
(assert (x360 x4317))
(assert (x360 x1560))
(assert (= x2075 (and x1680 x3015)))
(assert (x360 x3459))
(assert (x360 x3442))
(assert (= x3620 (=> (and (or (and (= x1614 x3796) x4657) (and (not x4657) (= x3796 0))) (and (= (x2553 x536) x1614) (<= x349 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x473 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x24 (x3635 x869)) (= x3154 (x264 x617)) (>= x349 0) (= x851 (x3800 (x4732 x3030) x4106 0)) (= (x3800 (x4732 x3030) x214 0) x869) (<= x24 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1614) (= x4657 (< x473 x1614)) (= x3508 (x4728 1461501637330902918203684832716283019655932542975 x986)) (>= x24 0) (>= x3154 0) (= x4106 (x3800 (x4732 x2457) (x3454 157) 0)) (= (x4728 1461501637330902918203684832716283019655932542975 x986) x2457) (= x536 (x3243 x869 1)) (= (x3243 x1215 2) x3659) (= x1215 (x3800 (x4732 x3030) x4007 0)) (>= x473 0) (<= x3154 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4245 (x4728 1461501637330902918203684832716283019655932542975 x986)) (= x4007 (x3800 (x4732 x3508) (x3454 156) 0)) (= x617 (x3243 x851 2)) (= x349 (x867 x3659)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1614) (= x214 (x3800 (x4732 x4245) (x3454 159) 0)))) x2141)))
(assert (=> (>= 10000 x152) (= (x4732 x152) (x3454 x152))))
(assert (x360 x98))
(assert (= x1879 (not (and (= (x3800 (x4732 x3771) x1093 0) x773) (<= x4782 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x4782) (= (x4461 x4141) x4782) (<= 0 x4782) (= (x3243 x773 1) x4141)))))
(assert (= (and x894 x1803) x4279))
(assert (x360 x3390))
(assert (= (x1877 (x3243 x275 1)) (+ (x1877 x275) 1)))
(assert (x360 x1265))
(assert (x360 x1661))
(assert (= (=> (and (< 0 x4220) (= (x4728 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4306) x1039) (>= x2216 0) (= (x3413 x1009 x4220) x3494) (= (x4728 1461501637330902918203684832716283019655932542975 x986) x4455) (= x888 0) (= x342 (x3413 x3494 1000000000000000000)) (= (+ x4918 x3309) x1269) (= (x3308 x2128) x4220) (= (* 1000000000000000000 x1262) x1009) (= x888 (ite x4336 1 0)) (= (x4034 (+ x1039 x2128)) x246) (<= x2216 1461501637330902918203684832716283019655932542975) (not (or (> x4221 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x4221 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4221))))) (= (x139 x4003) x1824) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x1262)) (not (= x1219 0)) (= (x2477 (* 1000000000000000000 x3235)) x1262) (= x4450 (x2102 (- x4455 x2216))) (<= x1824 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4336 (> x3235 115792089237316195423570985008687907853269984665640564039457)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1824 x342)) (= x4941 (> x4450 0)) (<= 0 x1824) (= x342 x3309) (= x4918 x1824) (= (x3243 x1280 1) x4003) (= (x4034 (+ 31 x4221)) x4306) (< x2216 1461501637330902918203684832716283019655932542976)) (and (=> (and x4941 (and (and (= x4921 (x4034 (+ x824 32))) (= (= x2906 x266) x1931) (= (x4034 (+ x246 4)) x824)) (and (and (> 1466279372 x1492) (= x3235 x1836) (= (x1507 (x4732 x266)) x4204) (= x1492 157198259) (not (= 117300739 x1492)) (< 0 x4204) (not (> 4 x308)) (= x3568 (or (> x4884 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x4884 64) (= (<= x4884 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (> 599290589 x1492) (= x308 68) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x2903) (= x4884 (x2102 (- x308 4))) (= x1735 x2702)) x1931))) (and (=> (and (not x3568) (and (= (= x2702 x1814) x3252) (= x1814 (x4728 1461501637330902918203684832716283019655932542975 x2702)))) (and (=> (not x3252) x4294) (=> (and x3252 (and (= (x4728 1461501637330902918203684832716283019655932542975 x1735) x1419) (= x4037 (x3800 (x4732 x1419) x833 0)) (= x3134 1) (= x69 32) (= x2773 x1836) (= x833 (x3800 (x4732 x2827) (x3454 2) 0)))) x4787))) (=> x3568 x4294))) (=> (and (not x4941) (and (= x2769 (x1507 (x4732 x606))) (= x404 (x2473 (x4732 x606))) (= (x2473 (x4732 x2827)) x4586) (= (x4728 1461501637330902918203684832716283019655932542975 x986) x606) x2873 (= (x4129 (x4732 x606)) x4233) (<= x3271 1461501637330902918203684832716283019655932542975) (= (x4034 (+ x3235 x4233)) x3646) (= (- x4586 x3235) x1768) x3689 (< x3271 1461501637330902918203684832716283019655932542976) (= x4093 (x1507 (x4732 x3271))) (>= x3271 0) (= (x2473 (x4732 x2827)) x2205) (= x3689 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x404 x3235))) (not (= x4093 0)) (= x2873 (>= x2205 x3235)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3235 x4233)) (> 4294967296 x3892) (not (= x2769 0)) (< x548 4294967296))) x1133))) x2751))
(assert (= x2110 (and x2675 x2901)))
(assert (x2915 x1103))
(assert (x360 x3230))
(assert (x360 x169))
(assert (= (and x2598 x1961) x366))
(assert (= (+ (x1877 x2064) 2) (x1877 (x3243 x2064 2))))
(assert (x360 x1519))
(assert (x360 x584))
(assert (x360 x4286))
(assert (= (and x4255 x6) x2416))
(assert (x360 x4094))
(assert (= (and (not x3502) x1339) x4606))
(assert (= x2123 (and x1099 x4820)))
(assert (= (and x2864 x2925) x1458))
(assert (x360 x2579))
(assert (=> (>= 10000 x1829) (= (x4732 x1829) (x3454 x1829))))
(assert (= (and x3233 (not x2735)) x2668))
(assert (x2835 x310))
(assert (= (and (not x1711) x3081) x2503))
(assert (x4300 x3153))
(assert (x360 x4659))
(assert (x4300 x4152))
(assert (x360 x1799))
(assert (= x495 (or (and (not x2677) x367) (and x50 x230) (and x1777 x3358) x1598 (and x1408 x4543) x1858 (and (not x763) x3409) x612 (and x4815 x305))))
(assert (= (and x2026 x4591) x2168))
(assert (= (x1877 (x4732 x1515)) x1515))
(assert (= (+ 2 (x1877 x4585)) (x1877 (x3243 x4585 2))))
(assert (= x1925 (and x2668 (not x542))))
(assert (x360 x1353))
(assert (= x4033 (and x796 x2712)))
(assert (= (or x229 x4713) x4239))
(assert (= (and x4335 (not x1677)) x3501))
(assert (x360 x3725))
(assert (= (+ (x1877 x581) 1) (x1877 (x3243 x581 1))))
(assert (= (or x2975 x67 x3419) x395))
(assert (= (x1877 (x3243 x261 1)) (+ 1 (x1877 x261))))
(assert (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x1877 (x3454 20853193852723734048814770637610870652489083209607696777694672748161462697984))))
(assert (= (and (not x4543) x1408) x3409))
(assert (= (x1877 (x3243 x1921 1)) (+ 1 (x1877 x1921))))
(assert (= (and x1460 x3974) x1872))
(assert (x360 x2672))
(assert (x360 x3431))
(assert (x360 x1066))
(assert (x360 x3098))
(assert (= (x1877 (x3243 x3005 1)) (+ (x1877 x3005) 1)))
(assert (x4300 x4168))
(assert (= (=> (and (= (= x861 0) x4935) (or (and (= (x3800 (x4732 x861) x4106 0) x3858) (not x4935)) (and (= (x3243 x4106 2) x4856) x4935))) x1113) x967))
(assert (x360 x431))
(assert (x360 x730))
(assert (x2915 x1426))
(assert (= (and (not x2195) x788) x4482))
(assert (= (x1877 (x4732 x2179)) x2179))
(assert (= x1206 (x1877 (x4732 x1206))))
(assert (= x2293 (or x2912 x2123 x1522 x1920 x3497 x83 x936 x4614 x1458)))
(assert (x360 x4188))
(assert (x360 x3132))
(assert (x360 x4513))
(assert (x360 x3832))
(assert (x360 x2685))
(assert (x360 x342))
(assert (= x606 (x1877 (x4732 x606))))
(assert (= (+ (x1877 x2471) 1) (x1877 (x3243 x2471 1))))
(assert (= x2819 (=> (and (or (and (and (and (>= 1461501637330902918203684832716283019655932542975 x4319) (= (> x1723 0) x116) (= x1723 (x2102 (- x2021 x4319))) (>= x4319 0) (> 1461501637330902918203684832716283019655932542976 x4319) (= (x130 x1682) x4319)) (or (and (and (> 1461501637330902918203684832716283019655932542976 x765) (= x389 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (= x3805 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (= x1971 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (>= x765 0) (<= x765 1461501637330902918203684832716283019655932542975) (= x2749 (x3800 (x4732 x2021) x4305 0)) (= x765 (x4441 x2749))) x116) (and (not x116) (and (= x170 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (= (x4728 1461501637330902918203684832716283019655932542975 x1332) x1279) (= x4378 (x4728 1461501637330902918203684832716283019655932542975 x1332)))))) x2406) (and (and (and (< x3725 1461501637330902918203684832716283019655932542976) (= (= 0 x3725) x376) (<= 0 x3725) (>= 1461501637330902918203684832716283019655932542975 x3725) (= x3725 (x130 x1682))) (or (and (not x376) (and (= x1791 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (= (x3674 x2605) x4521) (= (x4728 1461501637330902918203684832716283019655932542975 x1332) x4238) (>= 1461501637330902918203684832716283019655932542975 x4521) (= (x4728 1461501637330902918203684832716283019655932542975 x1332) x2609) (<= 0 x4521) (> 1461501637330902918203684832716283019655932542976 x4521) (= (x3243 x1682 1) x2605))) (and (and (= x4393 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (= (x4728 1461501637330902918203684832716283019655932542975 x1332) x4202) (= x1435 (x4728 1461501637330902918203684832716283019655932542975 x1332))) x376))) (not x2406))) (= (ite (< x2937 x2348) (not (= 0 x2021)) (< x2937 x2348)) x2406)) x1533)))
(assert (x4715 1461501637330902918203684832716283019655932542975))
(assert (x360 x4764))
(assert (= (and x3599 x3238) x1869))
(assert (x360 x705))
(assert (= (and x3600 x1108) x2567))
(assert (= x1190 (and x2528 x3595)))
(assert (=> (>= 10000 x2645) (= (x4732 x2645) (x3454 x2645))))
(assert (x4300 x1024))
(assert (= (x1877 (x4732 x234)) x234))
(assert (x360 x4644))
(assert (x360 x196))
(assert (= (or x1659 x3160) x2421))
(assert (x360 x4210))
(assert (= (and x1190 (not x1859)) x1629))
(assert (x360 x3619))
(assert (= x3559 (x1877 (x4732 x3559))))
(assert (x360 x3757))
(assert (x360 x369))
(assert (= x861 (x1877 (x4732 x861))))
(assert (= (and (not x4597) x4708) x4558))
(assert (x1990 x1816 x2671))
(assert (= x1027 (or x2898 x1970 x1553 x4852 x3566 x3729)))
(assert (x4300 x585))
(assert (x360 x3872))
(assert (and (x4019 x1610 1000000000000000000) (=> (and (> 1000000000000000000 0) (> x1610 0)) (and (<= (* 1000000000000000000 (x3413 x1610 1000000000000000000)) x1610) (< (- x1610 1000000000000000000) (* 1000000000000000000 (x3413 x1610 1000000000000000000))))) (x3763 x1610 1000000000000000000) (x1905 x1610 1000000000000000000) (x3469 x1610 1000000000000000000)))
(assert (x360 x630))
(assert (x360 x509))
(assert (and (x877 x986 1461501637330902918203684832716283019655932542976) (x345 x986 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x986 (+ (x2968 x986 1461501637330902918203684832716283019655932542976) (* (x3413 x986 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x4363 x986 1461501637330902918203684832716283019655932542976)))
(assert (= (and x1582 x3451) x4125))
(assert (x360 x198))
(assert (x360 x852))
(assert (= (=> (= (> x1521 0) x3392) (and (=> (not x3392) x1388) (=> (and (and (and (= (x3243 x4007 1) x122) (>= x1754 0) (< x1 1461501637330902918203684832716283019655932542976) (= (x2343 x122) x1) (>= 1461501637330902918203684832716283019655932542975 x1) (<= x1754 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2348) (<= 0 x1) (= (x3800 (x4732 x3030) x4007 0) x158) (= x1754 0) (= x4647 (ite (> x2348 0) (not (= x1 0)) (> x2348 0))) (not (= 0 x3030)) (= x3052 (x3243 x158 2)) (= x1754 (x3365 x3052)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2348)) (or (and (not x4647) (= x4647 x885)) (and x4647 (and (= x885 (not x2722)) (<= 0 x1253) (= (x3800 (x4732 x1) x4007 0) x4585) (= x3916 (x3243 x4585 2)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1253) (= x2722 (> x1521 x1253)) (= x1253 (x3365 x3916)))))) x3392) x4000))) x449))
(assert (x360 x216))
(assert (= (and x1157 x2228) x3450))
(assert (= x4362 (or x2798 x2614)))
(assert (x360 x1473))
(assert (x4300 x3180))
(assert (x360 x1830))
(assert (x360 x1214))
(assert (= (and x4285 x2730) x4174))
(assert (= x2925 (and (not x4497) x725)))
(assert (= (x1877 (x4732 x4792)) x4792))
(assert (and (x877 x3106 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x345 x3106 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x3106 (+ (x2968 x3106 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x3413 x3106 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x4363 x3106 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (not (and (not x4509) (not x3626))) x1406))
(assert (= x1698 (x1877 (x4732 x1698))))
(assert (= (and x4214 (not x3665)) x4727))
(assert (x360 x2803))
(assert (x360 x4318))
(assert (= (and (not x2855) x1691) x903))
(assert (x360 x276))
(assert (= x2559 (and x4716 (not x4761))))
(assert (x360 x3582))
(assert (= (x1877 (x3243 x1263 1)) (+ 1 (x1877 x1263))))
(assert (= x4483 (x1877 (x4732 x4483))))
(assert (= (or x2039 x2165) x1898))
(assert (= x2936 (x1877 (x4732 x2936))))
(assert (x360 x2423))
(assert (= (x1877 (x4732 x832)) x832))
(assert (= (x3454 1461501637330902918203684832716283019655932542976) (x4732 1461501637330902918203684832716283019655932542976)))
(assert (x360 x3855))
(assert (= (x1877 (x3243 x1020 1)) (+ (x1877 x1020) 1)))
(assert (x360 x2))
(assert (x4300 x3686))
(assert (x360 x1778))
(assert (x360 x3092))
(assert (= x4779 (and x3542 (not x1149))))
(assert (= x708 (and (not x3376) x4753)))
(assert (= x3505 (and x540 x438)))
(assert (x360 x4471))
(assert (x934 x2288 x3032))
(assert (= (and (not x2248) x958) x2634))
(assert (= (and (not x487) x2565) x4815))
(assert (= (and x4646 x3322) x1381))
(assert (and (x4019 x767 1000000000000000000) (=> (and (> 1000000000000000000 0) (> x767 0)) (and (<= (* 1000000000000000000 (x3413 x767 1000000000000000000)) x767) (< (- x767 1000000000000000000) (* 1000000000000000000 (x3413 x767 1000000000000000000))))) (x3763 x767 1000000000000000000) (x1905 x767 1000000000000000000) (x3469 x767 1000000000000000000)))
(assert (x360 x2049))
(assert (= (and x2182 (not x760)) x4549))
(assert (= (and x279 (not x282)) x2999))
(assert (=> (>= 10000 x212) (= (x3454 x212) (x4732 x212))))
(assert (= (and x3202 x3251) x413))
(assert (x360 x2309))
(assert (= x786 (=> (and (= (x3243 x3701 1) x4844) (= (x3800 (x4732 x1821) x4305 0) x3701) (= (x3243 x4844 1) x2070) (= x1821 (x4728 1461501637330902918203684832716283019655932542975 x1332))) x3722)))
(assert (x360 x4890))
(assert (x360 x3838))
(assert (x360 x2086))
(assert (= (+ (x1877 x2252) 1) (x1877 (x3243 x2252 1))))
(assert (x360 x1309))
(assert (= (and x753 (not x3088)) x2974))
(assert (x360 x2303))
(assert (x2915 x2279))
(assert (= (and x2134 x2488) x1517))
(assert (= x3784 (and (not x52) x4126)))
(assert (x360 x4682))
(assert (x360 x1141))
(assert (= x493 (=> (and (and (<= x1664 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3774 x4729) x2723) (= (x3800 (x4732 x3393) (x3454 156) 0) x3247) (= (x3800 (x4732 x207) (x3454 157) 0) x2064) (= x351 (x3800 (x4732 x2445) x3247 0)) (<= 0 x2723) (= x4172 (x4354 x2951)) (<= 0 x473) (<= x4172 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3243 x351 2) x2951) (<= x3230 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2723) (= x1664 (x1975 x689)) (>= x1664 0) (>= x3230 0) (= (> x3230 x473) x1505) (<= 0 x4172) (= (x1158 x1856) x3230) (= (x3243 x3400 2) x689) (= (x3243 x4729 1) x1856) (= x4600 (x3800 (x4732 x2138) (x3454 159) 0)) (= (x3800 (x4732 x2445) x4600 0) x4729) (= (x4728 1461501637330902918203684832716283019655932542975 x986) x3393) (= x207 (x4728 1461501637330902918203684832716283019655932542975 x986)) (<= x473 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3800 (x4732 x2445) x2064 0) x3400) (= x2138 (x4728 1461501637330902918203684832716283019655932542975 x986))) (or (and x1505 (= x3294 x3230)) (and (not x1505) (= 0 x3294)))) x3042)))
(assert (x360 x3598))
(assert (= x4030 (and x4085 x3255)))
(assert (x4300 x4292))
(assert (= x1147 (and x2034 x2464)))
(assert (x4300 x207))
(assert (= (+ 1 (x1877 x4844)) (x1877 (x3243 x4844 1))))
(assert (= x755 (and x2005 (not x620))))
(assert (= x1273 (and (not x2927) x4488)))
(assert (= (and x2025 x2080) x4073))
(assert (= (and (not x4840) x3891) x3707))
(assert (= (and x1578 x2759) x2879))
(assert (x360 x3482))
(assert (x360 x4550))
(assert (= x1600 (and (not x1992) x3503)))
(assert (x4300 x589))
(assert (= (and x1372 x3225) x2495))
(assert (= x2161 (and x510 x38)))
(assert (x360 x406))
(assert (x360 x4556))
(assert (= (x1877 (x3454 2236579515)) 2236579515))
(assert (= x344 (and x430 (not x3326))))
(assert (= (and x4607 x1590) x803))
(assert (x360 x3699))
(assert (x360 x1272))
(assert (x360 x2356))
(assert (x360 x4432))
(assert (= (or x250 x2748) x3378))
(assert (x4300 x2564))
(assert (= x4291 (and (not x3310) x3607)))
(assert (= (+ 1 (x1877 x2283)) (x1877 (x3243 x2283 1))))
(assert (x360 x4298))
(assert (= x2386 (and x2680 x1672)))
(assert (= x277 (or x738 (and x111 (not x618)))))
(assert (x360 x1447))
(assert (x360 x969))
(assert (= x3786 (or x3493 x893)))
(assert (= x1430 (and x3516 x784)))
(assert (x360 x4777))
(assert (=> (<= x1495 10000) (= (x3454 x1495) (x4732 x1495))))
(assert (= (and x1536 x116) x2583))
(assert (x360 x4794))
(assert (x360 x1825))
(assert (= (or x4628 x4010 x2871 x2783 x1851 x739 x70 x3919 x3432) x4831))
(assert (= x971 (and x4381 x4099)))
(assert (= x4592 (and x3073 x1925)))
(assert (= (or x494 (and (not x863) x1336)) x4633))
(assert (= (and x1759 x4679) x1195))
(assert (x4715 x2702))
(assert (and (x4019 x3494 1000000000000000000) (=> (and (> 1000000000000000000 0) (> x3494 0)) (and (<= (* 1000000000000000000 (x3413 x3494 1000000000000000000)) x3494) (< (- x3494 1000000000000000000) (* 1000000000000000000 (x3413 x3494 1000000000000000000))))) (x3763 x3494 1000000000000000000) (x1905 x3494 1000000000000000000) (x3469 x3494 1000000000000000000)))
(assert (= x936 (and x4412 x4080)))
(assert (x360 x3426))
(assert (x2915 x1610))
(assert (= x4517 (and x4449 x4704)))
(assert (= x1582 (and x1400 (not x963))))
(assert (= x3581 (and x1992 x3503)))
(assert (=> (>= 10000 x1155) (= (x3454 x1155) (x4732 x1155))))
(assert (= (x1877 (x4732 x2695)) x2695))
(assert (x360 x955))
(assert (x360 x3108))
(assert (x360 x1986))
(assert (x360 x4882))
(assert (x360 x1696))
(assert (= x3829 (=> (= x1308 (= 0 x3001)) (and (=> (and x1308 (= x4595 x2178)) x2332) (=> (and (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1624)) (> 32 x1624)) (> x1624 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1496) (not x1308)) (and (=> (and (= x4595 x2178) x1496) x2332) (=> (and (not x1496) (and (= x2254 x4595) (= 1 x3380) (= x2387 32))) x2232)))))))
(assert (= (and (not x2802) x4512) x1893))
(assert (x2835 (- x4674 x633)))
(assert (x360 x2430))
(assert (x4300 x2645))
(assert (x2915 x649))
(assert (x360 x3924))
(assert (= x788 (and x3318 x3546)))
(assert (x360 x2756))
(assert (= (and x2763 (not x898)) x2798))
(assert (= x4000 (and (=> (and (and (= x1 x4865) (= x4887 0)) (not x885)) x1402) (=> (and x885 (and (or (and (not x1100) (= x1526 x1100)) (and (and (= x1526 (not x3743)) (= x2510 (x3243 x3410 2)) (= (x3365 x2510) x4868) (<= x4868 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x4868 x1521) x3743) (>= x4868 0) (= (x3800 (x4732 x2831) x4007 0) x3410)) x1100)) (and (= (x3800 (x4732 x1) x4007 0) x4263) (<= 0 x2831) (= (x3243 x4263 1) x112) (<= x2831 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x2831) (= (ite (< 1 x2348) (not (= 0 x2831)) (> x2348 1)) x1100) (= x2831 (x870 x112))))) x4570))))
(assert (= (+ 1 (x1877 x2843)) (x1877 (x3243 x2843 1))))
(assert (x360 x1282))
(assert (= (+ 2 (x1877 x3410)) (x1877 (x3243 x3410 2))))
(assert (x360 x3239))
(assert (x360 x1387))
(assert (= (and x983 x2589) x857))
(assert (x711 32))
(assert (= (+ 2 (x1877 x4933)) (x1877 (x3243 x4933 2))))
(assert (x360 x1822))
(assert (x360 x3168))
(assert (= x2600 (and (not x3825) x755)))
(assert (x4300 x2831))
(assert (x360 x2686))
(assert (= (+ 2 (x1877 x4154)) (x1877 (x3243 x4154 2))))
(assert (x360 x530))
(assert (= (and (not x3401) x4415) x3697))
(assert (= x3869 (and x2436 (not x3592))))
(assert (x360 x3079))
(assert (= x1676 (and x4228 x3411)))
(assert (x360 x3364))
(assert (= (and x2134 (not x2488)) x1339))
(assert (= (=> (and (and (= (x4034 (+ x2796 31)) x3056) (= (x4728 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3056) x2483) (= x284 (x3800 (x4732 x2645) (x3454 165) 0)) (not (= x2824 0)) (= (x4034 (+ x2483 x3541)) x812) (= x2645 (x4728 1461501637330902918203684832716283019655932542975 x986)) (= x136 (< 0 x1026)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2279) (= x1426 (x3254 x3541)) (= (x2066 x284) x2279) (<= 0 x2279) (not (or (and (> 32 x2796) (= (<= x2796 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2796)))) (or (and (and (>= x1218 0) (= (x3243 x1525 1) x1808) (= x1218 x2445) (= (x4728 1461501637330902918203684832716283019655932542975 x986) x1933) (= (x3800 (x4732 x1933) (x3454 157) 0) x1525) (>= 1461501637330902918203684832716283019655932542975 x1218) (= (x3591 x1808) x1218) (< x1218 1461501637330902918203684832716283019655932542976) (= (not x3576) x3133) (= x3576 (= 0 x1218))) x136) (and (and (= x136 x3133) (= x2445 0)) (not x136)))) x4139) x873))
(assert (x360 x4145))
(assert (x360 x4167))
(assert (= x1864 (and (not x4288) x1922)))
(assert (= x1126 (x1877 (x4732 x1126))))
(assert (x360 x3643))
(assert (x360 x3747))
(assert (= x2593 (and (not x3261) x4179)))
(assert (x360 x5))
(assert (x360 x4235))
(assert (x4300 x1080))
(assert (= x2081 (and x1461 x707)))
(assert (x360 x2767))
(assert (x4300 x3382))
(assert (= x31 (and x3542 x1149)))
(assert (x360 x3380))
(assert (= (and x2490 (not x3568)) x446))
(assert (x360 x2253))
(assert (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1877 (x3454 16156842317565293874272834530371880720966471053262404558597773956279093428224))))
(assert (x360 x2475))
(assert (=> (>= 10000 x800) (= (x3454 x800) (x4732 x800))))
(assert (=> (<= x667 10000) (= (x4732 x667) (x3454 x667))))
(assert (x360 x4044))
(assert (x360 x2213))
(assert (=> (<= x1001 10000) (= (x3454 x1001) (x4732 x1001))))
(assert (= (x1877 (x4732 x1495)) x1495))
(assert (= (x3454 72570022874062638528011751457397263716769196454539065078543251854057308946432) (x4732 72570022874062638528011751457397263716769196454539065078543251854057308946432)))
(assert (x1107 x4674 (- x1426 x633)))
(assert (x360 x232))
(assert (= x1875 (=> (and (= 0 x4882) (= x3307 x166)) x4899)))
(assert (x360 x4834))
(assert (= (and x1356 (not x153)) x1713))
(assert (x711 x986))
(assert (=> (>= 10000 x4253) (= (x4732 x4253) (x3454 x4253))))
(assert (x360 x3106))
(assert (= x3318 (and x2057 (not x3596))))
(assert (x360 x4846))
(assert (x360 x685))
(assert (= (and x3940 x2212) x1798))
(assert (= (x1877 (x4732 x3180)) x3180))
(assert (x4300 x4094))
(assert (= (and x839 x192) x4010))
(assert (= (and x1842 x371) x4269))
(assert (and (x877 x4040 1461501637330902918203684832716283019655932542976) (x345 x4040 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x4040 (+ (x2968 x4040 1461501637330902918203684832716283019655932542976) (* (x3413 x4040 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x4363 x4040 1461501637330902918203684832716283019655932542976)))
(assert (=> (>= 10000 x3704) (= (x4732 x3704) (x3454 x3704))))
(assert (x360 x1332))
(assert (= (and x2472 x713) x1581))
(assert (= (x1877 (x3454 2362143243)) 2362143243))
(assert (= (=> (and (= x3239 x4507) (= x1746 x4235)) x4609) x2327))
(assert (x4300 x606))
(assert (= (and (not x1931) x884) x3996))
(assert (= (or x966 x3920) x2868))
(assert (= x4876 (or x2664 x3609 x2393 x4125 x1615 x1837)))
(assert (=> (<= x1016 10000) (= (x4732 x1016) (x3454 x1016))))
(assert (x360 x4222))
(assert (x360 x2105))
(assert (x360 x3515))
(assert (= x876 (=> (and (= x2973 x3001) (= x2479 x1624)) x1348)))
(assert (x360 x2374))
(assert (x360 x1746))
(assert (= x2812 (and x3049 (not x769))))
(assert (= x4473 (or x4090 x881)))
(assert (=> (<= x1349 10000) (= (x4732 x1349) (x3454 x1349))))
(assert (= (and x3194 (not x1267)) x88))
(assert (=> (>= 10000 x4261) (= (x4732 x4261) (x3454 x4261))))
(assert (x360 x4108))
(assert (= x4848 (and x1237 (not x508))))
(assert (and (and (= (- (* (- x1579 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1579 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1579 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1579) (- (* x1579 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1579))) (= (x4060 1000000000000000000 (- x1579 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1579 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x1579 1000000000000000000) (x4060 1000000000000000000 x1579)) (x1520 1000000000000000000 x1579) (x3818 1000000000000000000 x1579) (x3063 1000000000000000000 x1579) (x4067 1000000000000000000 x1579) (x3727 1000000000000000000 x1579)))
(assert (= (and x909 x1737) x3353))
(assert (x360 x1801))
(assert (x360 x1102))
(assert (x360 x1366))
(assert (x2907 x633 x3093 x4674 x1426))
(assert (= x2894 (and x2637 x1841)))
(assert (= x4477 (and (not x3141) x1127)))
(assert (x4383 x3106))
(assert (x360 x4737))
(assert (x360 x4021))
(assert (= x3706 (x1877 (x4732 x3706))))
(assert (x4300 x4261))
(assert (= (x1877 (x3243 x1263 2)) (+ (x1877 x1263) 2)))
(assert (=> (>= 10000 x2695) (= (x4732 x2695) (x3454 x2695))))
(assert (x360 x2809))
(assert (= (and x3665 x4214) x2516))
(assert (x360 x3666))
(assert (x1990 x1115 x3134))
(assert (= (=> (and (or (and (not x913) (= x913 x1267)) (and (and (= (= x1607 0) x1267) (= (x3629 x4135) x1607) (> 256 x1607) (= x4135 (x3800 (x4732 x3406) (x3454 163) 0)) (>= 255 x1607) (= (x4728 1461501637330902918203684832716283019655932542975 x986) x3406) (>= x1607 0)) x913)) (= (< 0 x1026) x913)) x2056) x1417))
(assert (x2915 1000000000000000000))
(assert (x360 x2381))
(assert (x360 x2076))
(assert (x4300 x3771))
(assert (x360 x1623))
(assert (= x1782 (=> (and (= x2275 x2300) (= x3760 0)) x3970)))
(assert (= (=> (and (= x1322 x4192) (= x2513 x1623) (= x787 x591) (= x3227 x3434)) x2098) x3773))
(assert (x360 x4220))
(assert (= 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x1877 (x3454 76833804140862540057647519496925185374644862498684814347804924264468996685824))))
(assert (x360 x2355))
(assert (= (and (not x1376) x1170) x2763))
(assert (x360 x3274))
(assert (x360 x861))
(assert (= (and (not x3291) x2656) x1753))
(assert (= (x1877 (x3454 1038142104)) 1038142104))
(assert (= (and (not x2289) x3934) x498))
(assert (x360 x4798))
(assert (= x3937 (and x4070 x1173)))
(assert (= (x1877 (x3243 x874 1)) (+ 1 (x1877 x874))))
(assert (x360 x712))
(assert (x3745 x633 x3093 x1806 x1426))
(assert (x360 x4863))
(assert (x360 x2845))
(assert (=> (<= x2936 10000) (= (x3454 x2936) (x4732 x2936))))
(assert (x360 x1769))
(assert (x2907 x4674 x1426 x1806 x1426))
(assert (= x2398 (or x4132 x3083)))
(assert (= x1885 (and x1663 (not x4867))))
(assert (= x3614 (and x3633 x3293)))
(assert (x360 x4819))
(assert (= (+ 1 (x1877 x4691)) (x1877 (x3243 x4691 1))))
(assert (x360 x2942))
(assert (= (and (not x4182) x3217) x2182))
(assert (= (and x2925 (not x2864)) x2693))
(assert (x360 x2275))
(assert (x77 x4040))
(assert (x360 x2044))
(assert (x4715 x1735))
(assert (x360 x4887))
(assert (x360 x1521))
(assert (= (=> (and (= (= x1485 0) x4740) (or (not x4740) x4740)) x1089) x3313))
(assert (x2835 1000000000000000000))
(assert (x360 x4842))
(assert (= (and x3282 x1438) x1342))
(assert (x3745 x4674 x1426 x3093 x633))
(assert (= (and x2014 (not x518)) x1410))
(assert (x360 x3444))
(assert (x360 x1471))
(assert (= x1459 (and (not x4382) x2518)))
(assert (x360 x2836))
(assert (x360 x3978))
(assert (x360 x2353))
(assert (= x3951 (and x1859 x1190)))
(assert (= x4214 (and x995 x3337)))
(assert (x4715 x4026))
(assert (x360 x4114))
(assert (x360 x477))
(assert (x360 x58))
(assert (= (x1877 (x4732 x1416)) x1416))
(assert (x360 x3641))
(assert (= x4309 (and x1640 (not x142))))
(assert (= x3863 x1533))
(assert (= x441 (=> (and (and (= (x4728 x1119 x4710) x1675) (= x2671 (ite (< 31 x3894) 1 0)) (= x1119 (x2618 x4583 x4144)) (= x1178 (x4034 (+ x4115 96))) (= (x3800 (x4732 x424) (x3454 169) 0) x2438) (= (= x3781 x234) x396) (= (x4728 1461501637330902918203684832716283019655932542975 x986) x424) (= x4144 (ite (= x3894 0) 1 0)) (= x1816 (ite (= x4150 (x3454 1)) 1 0)) (= x3781 (x4728 1461501637330902918203684832716283019655932542975 x986)) (= (x4728 x1816 x2671) x4583) (= 4 x2739) (> x1675 0)) (or (and (and (or (and x620 (and (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x1229) (not (= 2835717307 x1646)) (= 32 x4376) (= 1 x4886) (not (= x1646 2691771752)) (not (= x1646 2796547477)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1661) (not (> 2217467699 x1646)) (= x2739 x1241) (>= x1661 0) (= 2858086653 x1646) (> 2929553584 x1646) (not (> 2691771752 x1646)) (not (> 4 x1241)) (= x1241 4) (< 0 x2784) (= x2784 (x1507 (x4732 x515))))) (and (not x620) (and (and x3825 (and (not (> 2217467699 x2767)) (> x1205 0) (not (= 2835717307 x2767)) (= x4886 1) (= 2858086653 x2767) (<= 0 x3679) (not (= x2767 2796547477)) (not (< x4589 4)) (<= x3679 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x2767 2929553584) (= x2739 x4589) (= x4589 4) (not (> 2691771752 x2767)) (= (x1507 (x4732 x3180)) x1205) (not (= x2767 2691771752)) (= x4376 32) (= x2765 77053863734975077137548456399560439977311721439096602559221323163398253314048))) (= (= x3781 x3180) x3825)))) (= (= x515 x3781) x620)) (not x396)) (and x396 (and (not (= x691 2835717307)) (= x3109 4) (not (< x691 2691771752)) (not (> 4 x3109)) (= x691 2858086653) (= x2739 x3109) (< x691 2929553584) (= x1502 (x1507 (x4732 x234))) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x1509) (not (= x691 2796547477)) (not (< x691 2217467699)) (< 0 x1502) (<= x2409 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x691 2691771752)) (= x4376 32) (<= 0 x2409) (= x4886 1))))) x2037)))
(assert (x360 x3115))
(assert (= x3234 (and x1955 x2116)))
(assert (x4300 x1090))
(assert (= x4340 (and x4323 x1904)))
(assert (x360 x2781))
(assert (= (=> (and (and (= x4420 x3218) (<= x3219 255) (not (= x3686 x515)) (<= x2206 255) (>= 18446744073709551615 x712) (not (= x266 x783)) (not (= x2827 x3661)) (>= x4261 0) (> x234 0) (= x986 x1812) (<= x4180 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x703) (= (= 0 x1418) x3837) (<= 0 x4180) (= x1594 x4780) (not (= x234 x3661)) (>= 255 x3014) (> 256 x4452) (= (= 0 x10) x2648) (= (x3800 (x4732 x2379) (x3454 160) 0) x4123) (= x4046 (not x2401)) (= x4629 (= x3969 0)) (= x3670 x3992) (= x905 x4863) (not (= x234 x2827)) (<= 0 x4475) (< x1307 2678788150) (= x703 x3661) (<= x4511 1461501637330902918203684832716283019655932542975) (not (= x3661 x783)) (<= 0 x1810) (= x2650 (not x2648)) (= x4452 (x2492 x1653)) x4301 (not (= x266 x2827)) (= x1174 2245473101) (not (= x266 x3686)) (< 0 x1528) (>= x4413 0) (not (= x4459 x3180)) x350 (<= 0 x1840) (= x2379 (x4728 1461501637330902918203684832716283019655932542975 x986)) (>= x530 0) (>= x299 0) (= x34 (> x3072 0)) (>= 1461501637330902918203684832716283019655932542975 x4405) (> 256 x1418) (>= x3058 0) (<= 0 x4452) (>= x3271 0) (>= x221 0) (>= 1461501637330902918203684832716283019655932542975 x485) (= (> (x1507 (x4732 x3686)) 0) x4227) (<= x10 255) (>= x1182 0) (<= x299 1461501637330902918203684832716283019655932542975) (not (= x3180 x3661)) (not (= x1307 2236579515)) (<= 0 x2905) (<= 0 x485) (> 256 x3072) (>= x4015 0) (= (x1507 (x4732 x2827)) x1528) (= x685 (x4034 (+ x1398 24044834009420335638544845215851342251227478490780828673611325350056707489792))) (= (< 0 (x1507 (x4732 x3661))) x2277) (<= 0 x703) (>= x3640 0) (<= 0 x2365) (<= x1840 1461501637330902918203684832716283019655932542975) x4577 (not (= x783 x2827)) (= x3728 (< 0 (x1507 (x4732 x515)))) (= (x3455 (x4732 x2827)) x3810) (<= 0 x3793) (>= x955 0) (<= x3686 1461501637330902918203684832716283019655932542975) (<= x2952 1461501637330902918203684832716283019655932542975) (> x783 0) (not (= x515 x234)) (> x2827 0) (= x3014 (x1651 x1653)) (not (= 2134560854 x1307)) (not (= x3661 x3686)) (= 0 x697) (>= x2082 0) (<= 0 x4519) (>= x3330 0) (>= 1461501637330902918203684832716283019655932542975 x4475) (>= 1461501637330902918203684832716283019655932542975 x1332) (>= x3962 0) (= (x4655 x1653) x650) (= (x3800 (x4732 x4253) x4123 0) x3020) (> x3582 0) (> 256 x650) (not (= x515 x3180)) (>= 1461501637330902918203684832716283019655932542975 x3640) (>= 1461501637330902918203684832716283019655932542975 x3002) (>= 1461501637330902918203684832716283019655932542975 x4459) (>= x1895 0) (<= 0 x4771) (not (= x515 x2827)) (<= 0 x1418) (>= x3072 0) (= false x4107) (<= x4341 1461501637330902918203684832716283019655932542975) (>= 255 x3480) (<= x3548 1461501637330902918203684832716283019655932542975) (<= x1895 18446744073709551615) (not (= x2827 x3180)) (not (= x234 x3686)) (= (x3455 (x4732 x3180)) x780) (<= 0 x3535) (= x3290 (= x4452 0)) (not (= x266 x234)) (= 0 x3787) (>= x2474 0) (not (= x783 x515)) (>= x1214 0) (= x10 (x79 x1653)) (<= x3730 255) (<= x1418 255) (= (not x2713) x1468) (<= 0 x10) (= (< 0 (x1507 (x4732 x783))) x350) (= x1862 false) (= x4780 (not x4629)) (not (= x2827 x4459)) (<= 0 x4077) (= x3072 (x408 x3020)) (= x2011 false) (<= 0 x3002) (<= 0 x2375) (<= x515 1461501637330902918203684832716283019655932542975) (= x347 x2650) (>= x3219 0) (>= x920 0) (= x2493 x3639) (= x3791 (not x2420)) (= (not x3837) x3273) (>= 1461501637330902918203684832716283019655932542975 x4261) (>= x4405 0) (= x3058 (x3455 (x4732 x266))) (= x2702 x986) (= x3221 x3105) (> x515 0) (not (= x3686 x783)) (<= x2033 18446744073709551615) (>= 18446744073709551615 x2082) (= x485 x3992) (= x3787 (x4424 160)) (<= x4834 255) (<= x3491 255) (>= x167 0) (>= x712 0) (not (= x4459 x266)) (= x613 false) (= (x4728 26959946667150639794667015087019630673637144422540572481103610249215 x1317) x1398) (<= x4413 1461501637330902918203684832716283019655932542975) x2277 (= x2401 (= 0 x3014)) (> x266 0) (= x1653 (x3800 (x4732 x986) (x3454 168) 0)) (not (= x4459 x3661)) (>= 255 x3634) (not (= x266 x3661)) (not (= 0 x3795)) (= x3339 x1652) (not (= x1307 2023533118)) (= x697 x377) (> x3661 0) (not (< x1307 2023533118)) (= x808 (= x955 0)) (= x150 x1468) (= x3969 (x197 x1653)) (<= x4771 1461501637330902918203684832716283019655932542975) (>= x650 0) (and (> x193 163) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x193))) (= (> (x1507 (x4732 x3180)) 0) x4577) (not (= x3180 x3686)) (= x2420 (= x3730 0)) (<= 0 x3730) (= x1317 (x994 416)) (<= x234 1461501637330902918203684832716283019655932542975) (<= 0 x4834) (> 256 x955) (<= 0 x2502) (<= x2375 18446744073709551615) (>= x3014 0) (<= 0 x3610) (>= 1461501637330902918203684832716283019655932542975 x390) (>= 255 x3330) (<= 0 x2216) x4227 (not (> 4 x193)) (= x4420 (not x808)) (> 256 x3014) (>= 18446744073709551615 x920) (= x986 x405) (= (< 0 (x1507 (x4732 x4459))) x2124) (not (= x783 x3180)) (< 0 x3180) (>= 255 x4452) (= x3548 x4459) (>= x4511 0) (<= 0 x3810) (>= 1461501637330902918203684832716283019655932542975 x1214) (>= 255 x977) (= x1031 x1214) (= x924 (x3455 (x4732 x4459))) (>= x3351 0) (>= x3548 0) (= x2226 x1332) (<= x3180 1461501637330902918203684832716283019655932542975) (= x1332 x3795) (= x3730 (x4368 x1653)) (not (= x3180 x234)) (<= x2905 1461501637330902918203684832716283019655932542975) (<= 0 x4341) (<= x3431 1461501637330902918203684832716283019655932542975) (<= x783 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x986) (<= 0 x977) (= 5 x4024) (< x10 256) (> 256 x3730) (>= 1461501637330902918203684832716283019655932542975 x4519) (not (= 0 x905)) (<= x3969 255) (= (x11 x1653) x1418) (>= 1461501637330902918203684832716283019655932542975 x3535) (>= x924 0) x3728 (<= 0 x3341) (<= 0 x2033) (>= 1461501637330902918203684832716283019655932542975 x3661) (>= 1461501637330902918203684832716283019655932542975 x3271) (not (= x234 x4459)) (= x2713 (= x650 0)) (not (= x3686 x2827)) (= x4519 x2251) (not (= 2030502250 x1307)) (>= x3491 0) (= x4301 (> (x1507 (x4732 x266)) 0)) (= x905 x4556) (>= 18446744073709551615 x4015) (<= x2502 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x530) (<= x955 255) (= x1432 (< 0 (x1507 (x4732 x2827)))) (= (x3455 (x4732 x3661)) x3341) (not (= x783 x234)) (= x2493 x4040) (= (x2102 (- x193 4)) x2239) x1432 (= x1031 x2952) (<= x266 1461501637330902918203684832716283019655932542975) (> x4459 0) (<= x650 255) (= x1652 x1023) (<= x3072 255) (= x1748 x3273) x1189 x2124 (>= 1461501637330902918203684832716283019655932542975 x3610) (<= 0 x2800) (= x4253 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (not (= x4459 x783)) (<= x2216 1461501637330902918203684832716283019655932542975) (= 2245473101 x1307) (>= 1461501637330902918203684832716283019655932542975 x2474) (<= x2800 1461501637330902918203684832716283019655932542975) (>= x2206 0) (= x1819 x4046) (>= 1461501637330902918203684832716283019655932542975 x1810) (= (x3455 (x4732 x234)) x1182) (>= x390 0) (>= x3969 0) (= (not x3290) x3221) (>= 255 x2365) (>= 255 x3962) (>= x3634 0) (< 0 x3686) (<= 0 x780) (>= x3732 0) (<= x3351 255) (= (x1404 x1653) x955) (<= x2827 1461501637330902918203684832716283019655932542975) (<= x3732 255) (not (= x266 x515)) (not (= x515 x4459)) (= x3791 x1795) (not (= x3180 x266)) (> 256 x3969) (<= x167 18446744073709551615) (<= 0 x3431) (>= x3560 0) (= (x3455 (x4732 x515)) x3560) (<= 0 x2952) (<= x3793 1461501637330902918203684832716283019655932542975) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2239) (and (< x2239 160) (= true (<= x2239 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (= x515 x3661)) (<= 0 x3480) (<= x2493 1461501637330902918203684832716283019655932542975) (< x1307 2362143243) (= (x4424 128) x3582) (= x1189 (> (x1507 (x4732 x234)) 0)) (= (x3455 (x4732 x783)) x221) (= (x3455 (x4732 x3686)) x4077) (not (= x3686 x4459))) (or (and x34 (= x4150 (x4732 x4253))) (and (and (= x2067 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (= (x4728 1461501637330902918203684832716283019655932542975 x1332) x1830) (= (x2970 x2041) x1519) (= (x4728 1461501637330902918203684832716283019655932542975 x986) x3187) (= x4150 x2041) (= (x3800 (x4732 x1830) (x3454 161) 0) x2041) (= (x4728 1461501637330902918203684832716283019655932542975 x986) x984) (= (x4034 (+ 1 x1519)) x4467)) (not x34)))) x121) x847))
(assert (= (x1877 (x3454 75483562)) 75483562))
(assert (= x4011 (=> (and (= x2382 x2758) (= x164 0)) x626)))
(assert (= x1475 (or x2495 x1949 x1622 x1094 x2612 x1657)))
(assert (and (x4019 x1067 1000000000000000000) (=> (and (> 1000000000000000000 0) (> x1067 0)) (and (<= (* 1000000000000000000 (x3413 x1067 1000000000000000000)) x1067) (< (- x1067 1000000000000000000) (* 1000000000000000000 (x3413 x1067 1000000000000000000))))) (x3763 x1067 1000000000000000000) (x1905 x1067 1000000000000000000) (x3469 x1067 1000000000000000000)))
(assert (x360 x1692))
(assert (= (x3454 1857877511) (x4732 1857877511)))
(assert (x4300 x733))
(assert (= (and x3398 (not x3802)) x726))
(assert (x360 x4603))
(assert (=> (<= x2938 10000) (= (x3454 x2938) (x4732 x2938))))
(assert (= x1271 (=> (and (= x4131 (x3243 x874 1)) (= x1346 (x4034 (+ x2297 32))) (= x2308 x448) (<= 0 x2352) (= x4298 (x1290 x874)) (= x2297 x2128) (= x2006 x4934) (= x2352 (x625 x4131)) (= x835 x782) (= x1227 x2527) (<= x2352 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x4298 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4298 0)) x1095)))
(assert (= x958 (and x3101 (not x4237))))
(assert (= (+ (x1877 x4007) 1) (x1877 (x3243 x4007 1))))
(assert (x360 x2376))
(assert (= x992 (and x3217 x4182)))
(assert (= (and x1861 x2535) x3334))
(assert (x360 x3237))
(assert (= (or x1273 x1786) x1310))
(assert (= (x1877 (x4732 x4688)) x4688))
(assert (= (x1877 (x3454 50292402827334880472107169365697159231523039388532301717704428044325102813184)) 50292402827334880472107169365697159231523039388532301717704428044325102813184))
(assert (x360 x3050))
(assert (= x909 (and x3874 x277)))
(assert (x360 x3560))
(assert (= x4574 (or x19 x336)))
(assert (= x4676 (and x3682 x1208)))
(assert (x360 x4623))
(assert (= x4501 (=> (and (= x4256 0) (= x488 x166)) x108)))
(assert (= (x4732 10742207464693106059581744854972325794081737850190833080250671788038469713920) (x3454 10742207464693106059581744854972325794081737850190833080250671788038469713920)))
(assert (= (and (not x3973) x610) x741))
(assert (=> (>= 10000 x3114) (= (x3454 x3114) (x4732 x3114))))
(assert (x360 x604))
(assert (x360 x922))
(assert (x360 x2586))
(assert (= (and x4343 (not x3436)) x379))
(assert (x360 x732))
(assert (= (=> (and (= x4169 x4507) (= x1746 x4465)) x4609) x3806))
(assert (x360 x1767))
(assert (x360 x1418))
(assert (x360 x492))
(assert (= (and (not x4875) x4143) x560))
(assert (= (and (not x3260) x3986) x4126))
(assert (x4300 x783))
(assert (= (x1877 (x4732 x4438)) x4438))
(assert (x360 x1174))
(assert (x360 x4078))
(assert (= (x1877 (x3243 x4534 1)) (+ (x1877 x4534) 1)))
(assert (x360 x4394))
(assert (x360 x4093))
(assert (x4383 x2685))
(assert (= 0 (x3911 416)))
(assert (x360 x2632))
(assert (x711 x4711))
(assert (x360 x1806))
(assert (x360 x1379))
(assert (= x1204 (or x551 x4653 x2704 x2894 x3285 x2791 x75 x4775 x4689)))
(assert (x360 x3481))
(assert (=> (>= 10000 x1911) (= (x3454 x1911) (x4732 x1911))))
(assert (x360 x3618))
(assert (= x4931 (=> (and (or (and x3241 (= x24 x1521)) (and (= 0 x1521) (not x3241))) (and (<= x473 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x473 x24) x3241) (<= 0 x473))) x1118)))
(assert (= x3411 (and x4597 x4708)))
(assert (x360 x1241))
(assert (x360 x3704))
(assert (= (x1877 (x4732 x1001)) x1001))
(assert (x2835 x2462))
(assert (=> (>= 10000 x606) (= (x4732 x606) (x3454 x606))))
(assert (x360 x660))
(assert (x360 x166))
(assert (=> (<= x2445 10000) (= (x4732 x2445) (x3454 x2445))))
(assert (x360 x1638))
(assert (x4300 x3893))
(assert (x2835 (- x1426 x3093)))
(assert (x360 x634))
(assert (x360 x3563))
(assert (x360 x3416))
(assert (=> (>= 10000 x1092) (= (x3454 x1092) (x4732 x1092))))
(assert (= (or x1667 x1457) x3542))
(assert (x360 x709))
(assert (x360 x349))
(assert (x360 x4884))
(assert (x4300 x3661))
(assert (= (x1877 (x4732 x1264)) x1264))
(assert (= (and x4490 x1958) x74))
(assert (= (x1877 (x4732 x369)) x369))
(assert (x360 x2771))
(assert (x360 x501))
(assert (= (and x529 x4616) x4658))
(assert (= (or x3994 x2757) x3251))
(assert (= x1254 (and x2712 (not x796))))
(assert (x77 x2180))
(assert (= (and x357 x1506) x2108))
(assert (= x4646 (and (not x3099) x2587)))
(assert (= x3493 (and x4208 x136)))
(assert (= x1352 (=> (and (= x3882 x1583) (= x3256 x3103)) x1399)))
(assert (x360 x3071))
(assert (=> (<= x1024 10000) (= (x3454 x1024) (x4732 x1024))))
(assert (= x1861 (and (not x2498) x2440)))
(assert (x360 x1675))
(assert (x360 x4672))
(assert (x360 x2955))
(assert (x360 x2850))
(assert (= x3729 (and x614 x2028)))
(assert (= (and x4463 x4879) x4883))
(assert (x360 x945))
(assert (= (and x2237 x4935) x1250))
(assert (= x4275 (or x3435 x1950)))
(assert (x360 x2723))
(assert (= (x1877 (x3243 x3756 1)) (+ (x1877 x3756) 1)))
(assert (x360 x3457))
(assert (= (and (=> (and x255 (and (or (and (not x1654) (= x2895 x1654)) (and (and (= (x3800 (x4732 x4173) x4106 0) x4933) (<= 0 x525) (= (not x3097) x2895) (= x525 (x3304 x937)) (= x937 (x3243 x4933 2)) (<= x525 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3097 (< x525 x3796))) x1654)) (and (>= 1461501637330902918203684832716283019655932542975 x4173) (>= x4173 0) (< x4173 1461501637330902918203684832716283019655932542976) (= (ite (< 1 x2348) (not (= 0 x4173)) (> x2348 1)) x1654) (= (x3800 (x4732 x1024) x4106 0) x3756) (= x4539 (x3243 x3756 1)) (= (x2203 x4539) x4173)))) x4296) (=> (and (not x255) (and (= x5 x1024) (= 0 x3845))) x2916)) x2013))
(assert (= x1391 (x1877 (x4732 x1391))))
(assert (= x200 (and x154 x1569)))
(assert (x360 x3612))
(assert (x360 x2089))
(assert (= 1461501637330902918203684832716283019655932542975 (x1877 (x3454 1461501637330902918203684832716283019655932542975))))
(assert (= x341 (and x1000 x3292)))
(assert (= (or x3024 x3506 x1130 x2877 x2817) x1786))
(assert (= (and x559 (not x4784)) x1593))
(assert (x4300 x1853))
(assert (x360 x3746))
(assert (= x2923 (and x2883 (not x3447))))
(assert (= (and x3554 (not x2491)) x298))
(assert (x360 x765))
(assert (= (and x343 x1562) x2651))
(assert (=> (<= x2731 10000) (= (x4732 x2731) (x3454 x2731))))
(assert (x360 x3628))
(assert (= (x4732 989455977) (x3454 989455977)))
(assert (x4300 x902))
(assert (x360 x1007))
(assert (= (=> (and (and (>= x473 0) (= x1635 (< x473 x201)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x473)) (or (and (= 0 x42) (not x1635)) (and (= x201 x42) x1635))) x4399) x838))
(assert (x360 x1940))
(assert (= x753 (and x189 x4333)))
(assert (=> (>= 10000 x4548) (= (x3454 x4548) (x4732 x4548))))
(assert (x360 x703))
(assert (= (=> (and (or (and (= 0 x2318) (not x798)) (and (= x2318 x2723) x798)) (and (<= 0 x473) (= x798 (> x2723 x473)) (<= x473 115792089237316195423570985008687907853269984665640564039457584007913129639935))) x1694) x3550))
(assert (x360 x4836))
(assert (x360 x4083))
(assert (= (and x2588 (not x4196)) x2565))
(assert (= x3613 (and x2945 x3131)))
(assert (x360 x1419))
(assert (= (and (not x4820) x1099) x3826))
(assert (x360 x4330))
(assert (= x1772 (=> (and (= x4850 x1966) (= x2402 0)) x503)))
(assert (x360 x3256))
(assert (= x4551 (and x1666 x1612)))
(assert (x360 x4204))
(assert (x360 x3778))
(assert (= x4590 (or x395 x4791)))
(assert (= (and (not x3073) x1925) x4652))
(assert (= (and x4159 (not x2793)) x95))
(assert (x360 x3209))
(assert (= (and x3372 x3684) x3467))
(assert (= (or (and x4137 x2114) (and x1961 (not x2598)) (and x716 x1927) x972 x3467 (and x366 (not x2048))) x3678))
(assert (= x1602 (and (not x55) x1452)))
(assert (= x570 (and x3664 x3348)))
(assert (x360 x458))
(assert (x360 x950))
(assert (x360 x4395))
(assert (= (and (not x4935) x2237) x3977))
(assert (= x1165 (and x1580 x1602)))
(assert (x360 x3349))
(assert (= (+ 1 (x1877 x3245)) (x1877 (x3243 x3245 1))))
(assert (x360 x4552))
(assert (x360 x1495))
(assert (x360 x1201))
(assert (=> (>= 10000 x4737) (= (x3454 x4737) (x4732 x4737))))
(assert (x4300 x1416))
(assert (= (x1877 (x4732 x3661)) x3661))
(assert (x360 x4373))
(assert (=> (<= x4536 10000) (= (x4732 x4536) (x3454 x4536))))
(assert (= x3070 (and (not x4055) x1313)))
(assert (= (and x4673 x2207) x2163))
(assert (x360 x1765))
(assert (= (x1877 (x4732 x1349)) x1349))
(assert (= (and x1339 x3502) x659))
(assert (= (x3454 2030502250) (x4732 2030502250)))
(assert (= x1647 (and x3172 x394)))
(assert (x360 x1840))
(assert (= (and x1669 x4829) x4860))
(assert (x360 x1330))
(assert (x360 x2418))
(assert (x4715 x4711))
(assert (x360 x866))
(assert (x1107 x4674 (- x1426 x1806)))
(assert (x360 x2254))
(assert (x360 x1911))
(assert (= x3242 (and x4365 x1308)))
(assert (x2907 x1806 x1426 x3093 x633))
(assert (= (and x288 (not x1527)) x4559))
(assert (x360 x2936))
(assert (x360 x4851))
(assert (= (=> (and (= (= 0 x4372) x4903) (or x4903 (not x4903))) x2408) x1546))
(assert (= (or x1848 x1567 x97 x4544) x3801))
(assert (= (and (not x3074) x3145) x1641))
(assert (x360 x2744))
(assert (x360 x2334))
(assert (x360 x1364))
(assert (= x109 (and x3201 x602)))
(assert (x360 x439))
(assert (x360 x4861))
(assert (x1107 x1806 (- x1426 x3093)))
(assert (= (or x4630 x931 x3378 x4084 x1545 x2270) x3047))
(assert (x360 x3715))
(assert (= (x1877 (x3243 x2104 1)) (+ (x1877 x2104) 1)))
(assert (x360 x2591))
(assert (= (and x4670 x3901) x2496))
(assert (= (and x4207 (not x2035)) x4468))
(assert (x360 x4120))
(assert (= (and (not x1208) x3682) x1943))
(assert (x360 x4273))
(assert (x360 x2946))
(assert (x360 x1090))
(assert (x360 x3311))
(assert (x360 x4261))
(assert (= (and x3193 x1496) x1847))
(assert (= (+ 1 (x1877 x2310)) (x1877 (x3243 x2310 1))))
(assert (x360 x1394))
(assert (x360 x2379))
(assert (x360 x3535))
(assert (= (=> (= x4133 (= x2919 0)) (and (=> (and (not x4133) (= (or (> x4854 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x4854 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x4854 32))) x516)) (and (=> (and (not x516) (and (= x1623 1) (= x566 x3675) (= x4513 x1322))) x3773) (=> (and (= x4513 x2) x516) x4392))) (=> (and (= x4513 x2) x4133) x4392))) x1717))
(assert (= (and (not x1737) x909) x2212))
(assert (x2915 x1644))
(assert (= x418 (x1877 (x4732 x418))))
(assert (x360 x3733))
(assert (= x1747 (or x1144 x815)))
(assert (x360 x849))
(assert (x360 x2784))
(assert (= (and x3567 (not x3269)) x1506))
(assert (x360 x2831))
(assert (= x3448 (and x2464 (not x2034))))
(assert (x360 x3001))
(assert (x360 x576))
(assert (x360 x901))
(assert (= x4821 (and (not x3399) x3036)))
(assert (x360 x2620))
(assert (= (and (not x3900) x2768) x3963))
(assert (x360 x3228))
(assert (x4300 x323))
(assert (x360 x3738))
(assert (= x2762 (and x640 (not x255))))
(assert (x360 x3685))
(assert (= (and (not x1883) x1893) x764))
(assert (= x3391 (x1877 (x4732 x3391))))
(assert (x360 x4189))
(assert (x2907 x3093 x633 x4674 x1426))
(assert (= 2678788150 (x1877 (x3454 2678788150))))
(assert (x360 x733))
(assert (x4300 x4089))
(assert (x2915 x2563))
(assert (=> (>= 10000 x4173) (= (x4732 x4173) (x3454 x4173))))
(assert (x360 x2399))
(assert (= x1116 (or x2667 x160)))
(assert (x360 x1723))
(assert (= x1222 (and x4930 x2525)))
(assert (= (and x2729 x4302) x4360))
(assert (x1107 x3093 (- x633 x1806)))
(assert (x360 x1686))
(assert (= (and x1121 (not x1728)) x1562))
(assert (and (and (= (- (* (- x4316 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x4316 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x4316 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x4316) (- (* x4316 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4316))) (= (x4060 1000000000000000000 (- x4316 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x4316 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x4316 1000000000000000000) (x4060 1000000000000000000 x4316)) (x1520 1000000000000000000 x4316) (x3818 1000000000000000000 x4316) (x3063 1000000000000000000 x4316) (x4067 1000000000000000000 x4316) (x3727 1000000000000000000 x4316)))
(assert (x360 x4345))
(assert (= (and (=> (and (and (= x4548 x2021) (= x2937 0)) (not x4597)) x2819) (=> (and (and (or (and (= x1912 x4228) (not x4228)) (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4119) (= x1912 (not x4485)) (= (x999 x3244) x4119) (= (> x42 x4119) x4485) (<= 0 x4119) (= (x3800 (x4732 x1090) x4305 0) x4154) (= x3244 (x3243 x4154 2))) x4228)) (and (>= 1461501637330902918203684832716283019655932542975 x1090) (<= 0 x1090) (= x4228 (ite (> x2348 1) (not (= 0 x1090)) (> x2348 1))) (= (x3243 x2104 1) x3347) (= (x3800 (x4732 x4548) x4305 0) x2104) (= (x32 x3347) x1090) (< x1090 1461501637330902918203684832716283019655932542976))) x4597) x4830)) x4219))
(assert (= (and (not x4356) x1516) x865))
(assert (= (or x3126 x3183) x4708))
(assert (x360 x1639))
(assert (x360 x101))
(assert (x360 x4185))
(assert (= x3958 (and x2538 (not x2661))))
(assert (x360 x1097))
(assert (= (and x4159 x2793) x3483))
(assert (x360 x2711))
(assert (=> (>= 10000 x266) (= (x3454 x266) (x4732 x266))))
(assert (x360 x2825))
(assert (= (x1877 (x4732 x3090)) x3090))
(assert (x360 x4639))
(assert (x360 x4201))
(assert (= (and x3292 (not x1000)) x173))
(assert (x360 x1087))
(assert (x360 x4587))
(assert (x360 x1426))
(assert (x360 x3615))
(assert (x4300 x3666))
(assert (x360 x244))
(assert (x360 x482))
(assert (x4300 x266))
(assert (x360 x3886))
(assert (= (=> (and (= (= x2355 0) x3839) (or (not x3839) x3839)) x805) x1188))
(assert (= (and x3647 x3717) x51))
(assert (= x2507 (and x2511 (not x1783))))
(assert (x2835 x251))
(assert (x2835 x855))
(assert (x360 x1159))
(assert (=> (>= 10000 x1391) (= (x4732 x1391) (x3454 x1391))))
(assert (x2915 x4220))
(assert (= x2808 (x1877 (x4732 x2808))))
(assert (x360 x2725))
(assert (x360 x3013))
(assert (x360 x180))
(assert (x4300 x424))
(assert (x4300 x2379))
(assert (x4715 x1317))
(assert (x360 x2758))
(assert (x360 x4423))
(assert (x360 x4405))
(assert (x360 x2137))
(assert (x360 x2435))
(assert (= x1571 (and x1582 (not x3451))))
(assert (x4300 x2138))
(assert (x360 x2689))
(assert (= (or x2342 x88) x995))
(assert (= (x1877 (x3243 x3792 1)) (+ 1 (x1877 x3792))))
(assert (= x1076 (=> (and (= x3841 x1624) (= x3001 x4271)) x1348)))
(assert (x2885 x3032))
(assert (= x2846 (and x4170 (not x4116))))
(assert (= (and x374 x971) x1622))
(assert (= (x4732 1865448899) (x3454 1865448899)))
(assert (x360 x3039))
(assert (= (and x3989 x564) x2657))
(assert (= (and x4668 (not x1503)) x2892))
(assert (= x3840 (and x842 (not x1977))))
(assert (x360 x202))
(assert (= (x4732 2835717307) (x3454 2835717307)))
(assert (= x1993 (=> (and (= x4164 (= x307 0)) (or x4164 (not x4164))) x1785)))
(assert (= x946 (and x1666 (not x1612))))
(assert (x360 x2566))
(assert (x360 x1550))
(assert (x360 x1349))
(assert (x360 x2493))
(assert (= (and x2555 x4339) x168))
(assert (x360 x4187))
(assert (= (x1877 (x3243 x619 1)) (+ 1 (x1877 x619))))
(assert (x360 x2340))
(assert (= (and x4840 x3891) x506))
(assert (= 1865448899 (x1877 (x3454 1865448899))))
(assert (x2835 x633))
(assert (= x3944 (or x2154 x2372 x1847 x4456 x3242 x459)))
(assert (x360 x690))
(assert (= (x4732 50292402827334880472107169365697159231523039388532301717704428044325102813184) (x3454 50292402827334880472107169365697159231523039388532301717704428044325102813184)))
(assert (= x43 (=> (and (= x409 x4158) (= x698 x58)) x2196)))
(assert (x360 x3078))
(assert (= x2284 (or x2060 x4239)))
(assert (x360 x1203))
(assert (x360 x1071))
(assert (x3745 x3093 x633 x4674 x1426))
(assert (x360 x1960))
(assert (x360 x133))
(assert (and (x877 x4306 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x345 x4306 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x4306 (+ (x2968 x4306 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x3413 x4306 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x4363 x4306 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x360 x299))
(assert (= x3716 (and x2398 x4906)))
(assert (x360 x3578))
(assert (x360 x4292))
(assert (=> (>= 10000 x3563) (= (x4732 x3563) (x3454 x3563))))
(assert (= x2795 (and x1937 (not x2175))))
(assert (x711 x4145))
(assert (x1107 x1426 (- x1806 x4674)))
(assert (x360 x562))
(assert (x360 x720))
(assert (x4300 x2860))
(assert (= x1153 (or x4758 x3386)))
(assert (x1107 x1426 (- x4674 x633)))
(assert (= (and x3439 (not x3537)) x878))
(assert (x360 x4898))
(assert (x360 x4760))
(assert (x2915 x3168))
(assert (= x801 (or x4795 x1057)))
(assert (x4300 x800))
(assert (=> (>= 10000 x4197) (= (x4732 x4197) (x3454 x4197))))
(assert (= (and x1410 (not x1530)) x4047))
(assert (x360 x39))
(assert (= (and x4072 (not x927)) x729))
(assert (x360 x3262))
(assert (= x4570 (and (=> (and x1526 (and (= x2831 x3695) (= x4007 x2090) (= x3508 x3298))) x1154) (=> (and (and (= 1 x4887) (= x4865 x2831)) (not x1526)) x1402))))
(assert (= x2141 (=> (= x3129 (= x3154 x3796)) (and (=> (and (not x3129) (= x3130 (> x3154 0))) (and (=> (not x3130) x1981) (=> (and (and (and (not (= x3060 0)) (> 1461501637330902918203684832716283019655932542976 x1169) (= x861 (x1034 x195)) (= x3060 (x264 x1347)) (= (x4920 x3207) x1169) (>= 1461501637330902918203684832716283019655932542975 x1169) (= x195 (x3243 x3207 1)) (<= 0 x3060) (= x1347 (x3243 x195 1)) (= x3207 (x3800 (x4732 x3030) x4106 0)) (= x2426 (= 0 x1169)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3060) (>= 1461501637330902918203684832716283019655932542975 x861) (< x861 1461501637330902918203684832716283019655932542976) (>= x1169 0) (<= 0 x861)) (or (and (= (x3243 x4106 1) x420) x2426) (and (not x2426) (and (= x3719 (x3243 x3759 1)) (= (x3800 (x4732 x1169) x4106 0) x3759))))) x3130) x967))) (=> x3129 x4931)))))
(assert (x711 x3618))
(assert (x360 x2682))
(assert (x360 x1136))
(assert (x4715 x1115))
(assert (= (or x1753 x4557) x3567))
(assert (= x1209 (and x430 x3326)))
(assert (x360 x2708))
(assert (= 989455977 (x1877 (x3454 989455977))))
(assert (x360 x1646))
(assert (= (and x3335 x616) x385))
(assert (x360 x2649))
(assert (= (and x4195 (not x3530)) x4335))
(assert (= (x1877 (x3243 x1228 1)) (+ 1 (x1877 x1228))))
(assert (x360 x1423))
(assert (x360 x3068))
(assert (x360 x3969))
(assert (x360 x2138))
(assert (= (and x741 x3487) x2215))
(assert (= x2939 (and x2607 (not x1989))))
(assert (= (=> (and (or x2998 (not x2998)) (= (= 0 x947) x2998)) x417) x1302))
(assert (= (and x755 x3825) x2120))
(assert (x360 x1983))
(assert (= (x1877 (x4732 x1004)) x1004))
(assert (= (and x2768 x3900) x3667))
(assert (=> (>= 10000 x3393) (= (x4732 x3393) (x3454 x3393))))
(assert (x360 x3393))
(assert (x360 x957))
(assert (= x3989 (or x2083 x4622 x2220 x3698)))
(assert (x360 x1285))
(assert (x360 x673))
(assert (x360 x2776))
(assert (x4300 x2936))
(assert (= (x1877 (x4732 x468)) x468))
(assert (x4383 x2756))
(assert (x360 x4583))
(assert (= x2362 (and (not x1722) x1439)))
(assert (x360 x307))
(assert (x360 x1929))
(assert (x360 x3276))
(assert (= (x1877 (x4732 x589)) x589))
(assert (= (and x3607 x3310) x4456))
(assert (x360 x2006))
(assert (x360 x207))
(assert (= x205 (and (not x4563) x3117)))
(assert (x4300 x515))
(assert (x360 x3730))
(assert (x360 x1248))
(assert (= x4758 (or x7 x2507 x565 x4334 x2654 x3188)))
(assert (=> (>= 10000 x3848) (= (x4732 x3848) (x3454 x3848))))
(assert (=> (<= x2561 10000) (= (x3454 x2561) (x4732 x2561))))
(assert (= x3023 (and x2642 (not x2065))))
(assert (x360 x3043))
(assert (= x1456 (and x318 (not x1526))))
(assert (= (and (not x374) x971) x407))
(assert (=> (<= x813 10000) (= (x4732 x813) (x3454 x813))))
(assert (and (x877 x2702 1461501637330902918203684832716283019655932542976) (x345 x2702 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x2702 (+ (x2968 x2702 1461501637330902918203684832716283019655932542976) (* (x3413 x2702 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x4363 x2702 1461501637330902918203684832716283019655932542976)))
(assert (= (or x2095 x4942 x3178 x3135 x1629 x3427) x3102))
(assert (x4300 x3508))
(assert (= x3359 (or (and x1872 x4153) (and x4716 x4761) x4533 x3004 (and x2559 (not x3208)) (and x1460 (not x3974)))))
(assert (= x1169 (x1877 (x4732 x1169))))
(assert (x360 x1260))
(assert (x360 x1954))
(assert (x360 x2445))
(assert (x4300 x355))
(assert (x360 x548))
(assert (= x84 (and (not x750) x4739)))
(assert (= x3393 (x1877 (x4732 x3393))))
(assert (= x2456 (or x1246 x1864)))
(assert (= (=> (= x4110 (< 0 x3235)) (and (=> (and x4110 (and (and (= 4 x4741) (= (= x234 x4092) x710) (= (x4728 1461501637330902918203684832716283019655932542975 x986) x4092)) (or (and (not x710) (and (or (and (and (= x3110 405663989) (< x3110 2217467699) (= x3018 (x1507 (x4732 x515))) (= x2290 4) (= x1219 1) (= x4741 x2290) (> x3018 0) (= x4221 32) (= x1369 10936679508223583803006762266923565500374401145016910147028117655998246682624) (not (> 405663989 x3110)) (> 988262939 x3110) (not (> 4 x2290))) x4754) (and (and (and (and (> x3367 0) (< x4434 988262939) (not (< x1696 4)) (= 1 x1219) (= x4434 405663989) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x1350) (= x3367 (x1507 (x4732 x3180))) (= x1696 x4741) (> 2217467699 x4434) (= x4221 32) (not (> 405663989 x4434)) (= 4 x1696)) x4356) (= x4356 (= x4092 x3180))) (not x4754))) (= x4754 (= x515 x4092)))) (and x710 (and (= (x1507 (x4732 x234)) x615) (= x1219 1) (= x3871 405663989) (= x638 4) (= x4741 x638) (not (< x638 4)) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x1916) (< 0 x615) (> 2217467699 x3871) (not (< x3871 405663989)) (= x4221 32) (> 988262939 x3871)))))) x2751) (=> (not x4110) x1606))) x1095))
(assert (= (or x3324 x2450) x336))
(assert (= (or x4872 x2733) x4484))
(assert (x360 x641))
(assert (x360 x3894))
(assert (x360 x4152))
(assert (= (x1877 (x4732 x1419)) x1419))
(assert (x360 x3014))
(assert (x360 x1794))
(assert (x1990 x2317 x107))
(assert (x360 x479))
(assert (= (+ (x1877 x4215) 2) (x1877 (x3243 x4215 2))))
(assert (= (=> (and (= x1387 x1485) (= x1379 x3340)) x3313) x2341))
(assert (x360 x464))
(assert (= x2561 (x1877 (x4732 x2561))))
(assert (= (and x2554 x2366) x3642))
(assert (= (and x4009 x1551) x1630))
(assert (= (and x407 x621) x144))
(assert (= x1518 (and x318 x1526)))
(assert (= (and (not x2193) x4309) x4540))
(assert (x360 x2107))
(assert (= x805 (=> (and (= x849 x206) (= 0 x980) (= x3079 x945) (= x2043 x4801) (= x2756 (x4034 (+ x4526 31))) (not (or (> x4526 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4526)) (< x4526 32)))) (= x980 (x2611 x781)) (= x654 x4371) (= (x4034 (+ x3312 x781)) x206) (not (= 0 x2355)) (= x3312 (x4728 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2756))) x2187)))
(assert (x360 x4250))
(assert (= (=> (= x4906 (< 0 x3294)) (and (=> (and (and (or (and (not x648) (= x1513 x648)) (and (and (= x3299 (< x4746 x3294)) (= x1513 (not x3299)) (= (x3800 (x4732 x2191) x2064 0) x599) (= x4746 (x2658 x3275)) (<= 0 x4746) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4746) (= x3275 (x3243 x599 2))) x648)) (and (<= x2348 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2348 0) (not (= 0 x2445)) (>= x2191 0) (= (x3800 (x4732 x2445) x2064 0) x4582) (= x1531 (x3243 x4582 2)) (= (ite (> x2348 0) (not (= 0 x2191)) (< 0 x2348)) x648) (>= x1272 0) (= x3792 (x3243 x2064 1)) (<= x2191 1461501637330902918203684832716283019655932542975) (= (x2658 x1531) x1272) (= x2191 (x4462 x3792)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1272) (< x2191 1461501637330902918203684832716283019655932542976) (= 0 x1272))) x4906) x577) (=> (and (not x4906) (= x3608 x1203)) x4575))) x2159))
(assert (x360 x667))
(assert (x360 x1026))
(assert (x360 x4857))
(assert (= (and (not x225) x4517) x4911))
(assert (x360 x932))
(assert (=> (>= 10000 x4723) (= (x4732 x4723) (x3454 x4723))))
(assert (= (and x4353 x1459) x4035))
(assert (= x4343 (and (not x1573) x729)))
(assert (x4300 x457))
(assert (=> (<= x1743 10000) (= (x4732 x1743) (x3454 x1743))))
(assert (x360 x26))
(assert (= (+ 1 (x1877 x4789)) (x1877 (x3243 x4789 1))))
(assert (x360 x2082))
(assert (x360 x4435))
(assert (x4300 x1001))
(assert (x360 x2904))
(assert (x360 x1515))
(assert (= x3554 (or x4911 x4)))
(assert (x360 x3093))
(assert (x360 x1001))
(assert (x4300 x2021))
(assert (x4300 x60))
(assert (x360 x638))
(assert (x360 x2171))
(assert (x360 x2446))
(assert (x360 x3587))
(assert (x360 x2622))
(assert (x4715 x4251))
(assert (= (and x4870 x2892) x1615))
(assert (= (and (not x3128) x444) x365))
(assert (= (and x1368 (not x2577)) x288))
(assert (x360 x756))
(assert (= x4871 (or x4849 x1311 x2718 x896 x4287)))
(assert (=> (>= 10000 x3943) (= (x3454 x3943) (x4732 x3943))))
(assert (x360 x832))
(assert (x360 x1359))
(assert (=> (<= x4438 10000) (= (x4732 x4438) (x3454 x4438))))
(assert (= x1082 (and (not x480) x117)))
(assert (x360 x1361))
(assert (x2885 x4144))
(assert (= (or x2051 x4770) x1984))
(assert (x2835 x1472))
(assert (x360 x411))
(assert (x360 x4636))
(assert (x360 x1781))
(assert (x360 x485))
(assert (= (or x4473 x2697 x2972 x1587) x3231))
(assert (x360 x3176))
(assert (x360 x3182))
(assert (= x132 (and (not x2897) x4136)))
(assert (x360 x4685))
(assert (= (or x471 x248 x2158 x4524 x4946 x2931) x2361))
(assert (= (and x4668 x1503) x1837))
(assert (x360 x4700))
(assert (x360 x266))
(assert (x360 x1384))
(assert (x360 x2990))
(assert (= (x1877 (x4732 x4548)) x4548))
(assert (x360 x2469))
(assert (=> (>= 10000 x2191) (= (x4732 x2191) (x3454 x2191))))
(assert (= x3988 (and x546 x710)))
(assert (x360 x176))
(assert (x360 x2297))
(assert (= x3037 (and x4522 x1985)))
(assert (x360 x3577))
(assert (= (and x200 (not x3671)) x2169))
(assert (= (+ 1 (x1877 x869)) (x1877 (x3243 x869 1))))
(assert (x360 x3341))
(assert (x360 x2779))
(assert (x360 x497))
(assert (x360 x489))
(assert (x360 x4873))
(assert (x360 x3391))
(assert (= x4544 (or x4652 x1043)))
(assert (= (and x645 x2764) x3740))
(assert (x360 x2909))
(assert (x360 x3421))
(assert (and (x877 x1317 26959946667150639794667015087019630673637144422540572481103610249216) (x345 x1317 26959946667150639794667015087019630673637144422540572481103610249216) (=> (> 26959946667150639794667015087019630673637144422540572481103610249216 0) (= x1317 (+ (x2968 x1317 26959946667150639794667015087019630673637144422540572481103610249216) (* (x3413 x1317 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)))) (x4363 x1317 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= x2827 (x1877 (x4732 x2827))))
(assert (= x2696 (and (not x4566) x1641)))
(assert (= (or (and x1367 (not x253)) (and x3458 x1078) x4502 x3790 x1627 (and x2911 x2852) (and x2866 x4073) (and x4568 (not x3029)) (and x2688 x3688)) x886))
(assert (x4715 x2756))
(assert (x360 x1980))
(assert (x360 x4277))
(assert (x360 x3402))
(assert (= (and (not x1160) x3601) x4689))
(assert (x360 x2021))
(assert (x360 x140))
(assert (= (and (not x645) x2764) x551))
(assert (x360 x2348))
(assert (x360 x2938))
(assert (= (and x725 x4497) x2912))
(assert (x360 x3636))
(assert (x360 x4040))
(assert (x360 x4404))
(assert (x360 x1288))
(assert (= x1139 (and x1868 x1887)))
(assert (= x3994 (or x4355 x3754)))
(assert (= (or x1374 x2762) x3590))
(assert (= (=> (and (= (= x2919 0) x2167) (or x2167 (not x2167))) x1717) x1956))
(assert (= x2888 (and x3258 x3489)))
(assert (= x4402 (and (not x2028) x614)))
(assert (x4300 x5))
(assert (x4715 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x360 x2707))
(assert (= (=> (and (= x2324 (< 0 x3860)) (or (and (and (= x4890 x2512) (= x1026 x98)) (not x2324)) (and x2324 (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4890 x3860)) (= (+ x4282 x721) x3696) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1579 1000000000000000000)) (= x1197 0) (= x2273 x3860) (= (> x3860 115792089237316195423570985008687907853269984665640564039457) x429) (= (x3243 x2438 3) x3926) (= x2001 (x3413 x1166 1000000000000000000)) (>= x2460 0) (= x2001 x4282) (= (* x1579 1000000000000000000) x649) (not (> x3860 x1026)) (= x721 x4749) (= (ite x429 1 0) x1197) (< (+ x2001 x4749) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x2066 x4066) x2460) (= (x3413 x649 x2460) x1166) (<= 0 x4749) (< 0 x2460) (= x3509 x2512) (= x4569 x98) (= x2023 x4890) (<= x2460 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2102 (- x1026 x3860)) x4569) (= x1579 (x2477 (* x3860 1000000000000000000))) (= (+ x2023 x2273) x3509) (= (x3676 x3926) x4749) (= x4066 (x3800 (x4732 x3747) (x3454 165) 0)) (= (x4728 1461501637330902918203684832716283019655932542975 x986) x3747) (<= x4749 115792089237316195423570985008687907853269984665640564039457584007913129639935))))) x4128) x4650))
(assert (= x3024 (and x2730 (not x4285))))
(assert (= (x1877 (x3454 2134560854)) 2134560854))
(assert (x360 x2613))
(assert (x4300 x3559))
(assert (x360 x555))
(assert (x360 x1969))
(assert (= (and (not x382) x4059) x3225))
(assert (x360 x2240))
(assert (= x3069 (and x3786 x3133)))
(assert (x2885 x2288))
(assert (x360 x799))
(assert (= x838 x2640))
(assert (= x3350 (and x4707 x928)))
(assert (x360 x1843))
(assert (= (x4732 599290589) (x3454 599290589)))
(assert (= (+ (x1877 x174) 1) (x1877 (x3243 x174 1))))
(assert (= x3166 (or x1909 x4274)))
(assert (x360 x2950))
(assert (= (and (not x3388) x51) x3601))
(assert (x360 x2251))
(assert (x360 x4741))
(assert (x360 x1540))
(assert (x360 x2913))
(assert (x360 x2552))
(assert (x360 x594))
(assert (x360 x3525))
(assert (x4715 x2991))
(assert (=> (>= 10000 x4902) (= (x3454 x4902) (x4732 x4902))))
(assert (x4300 x445))
(assert (= (x1877 (x3454 2245473101)) 2245473101))
(assert (x360 x3374))
(assert (= x3160 (and x707 (not x1461))))
(assert (x360 x1685))
(assert (x360 x758))
(assert (= x363 (and x2714 x623)))
(assert (=> (<= x3686 10000) (= (x3454 x3686) (x4732 x3686))))
(assert (x360 x4316))
(assert (x360 x2320))
(assert (= x2863 (and (not x3573) x4033)))
(assert (= x3925 x1388))
(assert (x360 x4886))
(assert (x360 x3344))
(assert (x360 x3048))
(assert (= (and x899 (not x882)) x2995))
(assert (x360 x4782))
(assert (x360 x246))
(assert (x4300 x1743))
(assert (= x258 (and (not x2900) x1433)))
(assert (x360 x1549))
(assert (= (and x2359 x28) x1237))
(assert (= (x1877 (x3243 x126 2)) (+ (x1877 x126) 2)))
(assert (= x3036 (and x4905 x2208)))
(assert (x360 x4367))
(assert (x360 x1182))
(assert (= x2883 (and (not x839) x192)))
(assert (x360 x1968))
(assert (x360 x1206))
(assert (= x4036 (=> (and (= x3577 0) (= x85 x704)) x3875)))
(assert (x360 x2040))
(assert (= x2346 (or (and x2874 x4769) (and x3948 (not x2153)))))
(assert (x4300 x2349))
(assert (= (x1877 (x4732 x3382)) x3382))
(assert (x3745 x1806 x1426 x633 x3093))
(assert (= (=> (and (= x2973 0) (= x642 x2479)) x876) x3205))
(assert (x360 x1509))
(assert (= (or x3667 x1147 x1645 x134 x1498 x3637) x4038))
(assert (= x4449 (or x1338 x2940)))
(assert (= x687 (=> (and (= x3116 x4768) (= x4503 x3715) (= 0 x4120)) x1650)))
(assert (= x1081 (=> (and (or (and (not x1331) (= x486 (x3800 (x4732 x445) x2064 0))) (and (= (x3243 x2064 2) x1973) x1331)) (= x1331 (= 0 x445))) x1967)))
(assert (= 242558722 (x1877 (x3454 242558722))))
(assert (x360 x2038))
(assert (=> (>= 10000 x451) (= (x4732 x451) (x3454 x451))))
(assert (= x212 (x1877 (x4732 x212))))
(assert (x360 x2840))
(assert (= (x1877 (x3243 x165 1)) (+ (x1877 x165) 1)))
(assert (= x4770 (and x3642 x2245)))
(assert (x360 x2443))
(assert (= x1388 x2045))
(assert (=> (>= 10000 x3406) (= (x3454 x3406) (x4732 x3406))))
(assert (x360 x2937))
(assert (x3745 x4674 x1426 x1426 x1806))
(assert (x360 x468))
(assert (x360 x4419))
(assert (x360 x2387))
(assert (x360 x1870))
(assert (x360 x3277))
(assert (=> (<= x4608 10000) (= (x3454 x4608) (x4732 x4608))))
(assert (= x777 (and x4179 x3261)))
(assert (= x3552 (=> (and (= (x3243 x1228 1) x2659) (= (x3243 x2659 1) x2150) (= x1228 (x3800 (x4732 x2046) x1263 0)) (= (x4728 1461501637330902918203684832716283019655932542975 x1332) x2046)) x3735)))
(assert (x360 x1397))
(assert (= (and x791 x4724) x2219))
(assert (x360 x145))
(assert (x360 x2335))
(assert (= x912 (=> (and (= x143 x561) (= x1257 x41)) x1383)))
(assert (x3745 x3093 x633 x1806 x1426))
(assert (x360 x1547))
(assert (x360 x982))
(assert (=> (>= 10000 x2827) (= (x4732 x2827) (x3454 x2827))))
(assert (= x2700 (=> (and (= x1485 x2825) (= x3822 x3340)) x3313)))
(assert (x360 x4521))
(assert (= x2932 (and (=> x4052 x3669) (=> (and (not x4052) (and (= 1 x4546) (= x1698 x2179))) x545))))
(assert (x360 x1167))
(assert (= (=> (and (= 0 x1583) (= x3103 x1966)) x1352) x4198))
(assert (= x2944 (and x110 x798)))
(assert (= x1996 (and (not x2339) x3556)))
(assert (=> (<= x4644 10000) (= (x4732 x4644) (x3454 x4644))))
(assert (x360 x405))
(assert (= (x1877 (x4732 x3092)) x3092))
(assert (x4300 x832))
(assert (= x4259 (and x4014 (not x3957))))
(assert (= (+ (x1877 x3408) 1) (x1877 (x3243 x3408 1))))
(assert (= (x1877 (x4732 x3747)) x3747))
(assert (x360 x1558))
(assert (= x330 (x1877 (x4732 x330))))
(assert (= (and (not x2624) x656) x4048))
(assert (x360 x4455))
(assert (= x3066 (and x2285 x659)))
(assert (x360 x3572))
(assert (=> (<= x3733 10000) (= (x3454 x3733) (x4732 x3733))))
(assert (x360 x781))
(assert (= x661 (x1877 (x4732 x661))))
(assert (x360 x1293))
(assert (x360 x1166))
(assert (x360 x2308))
(assert (= x3147 (and x3398 x3802)))
(assert (= (x1877 (x4732 x2955)) x2955))
(assert (= x4094 (x1877 (x4732 x4094))))
(assert (= (x1877 (x3243 x4106 2)) (+ (x1877 x4106) 2)))
(assert (= x65 (and x3824 (not x1390))))
(assert (= (or (and x3223 x1996) x1647 x512 (and x4784 x559) x970) x1231))
(assert (= (and (not x6) x4255) x2020))
(assert (= x3427 (and x3951 x4593)))
(assert (=> (>= 10000 x4152) (= (x4732 x4152) (x3454 x4152))))
(assert (= (x1877 (x3243 x1420 1)) (+ 1 (x1877 x1420))))
(assert (=> (<= x902 10000) (= (x3454 x902) (x4732 x902))))
(assert (=> (>= 10000 x2838) (= (x3454 x2838) (x4732 x2838))))
(assert (= x1221 (and (not x4640) x1713)))
(assert (x360 x556))
(assert (= (x1877 (x4732 x4737)) x4737))
(assert (x360 x4096))
(assert (= x4664 (or x1456 x4329)))
(assert (= (x1877 (x4732 x4667)) x4667))
(assert (x360 x4172))
(assert (x360 x4645))
(assert (= x4492 (=> (and (= x2275 x1896) (= 0 x3872)) x4234)))
(assert (x360 x4203))
(assert (and (x877 x2180 1461501637330902918203684832716283019655932542976) (x345 x2180 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x2180 (+ (x2968 x2180 1461501637330902918203684832716283019655932542976) (* (x3413 x2180 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x4363 x2180 1461501637330902918203684832716283019655932542976)))
(assert (x360 x609))
(assert (x360 x2842))
(assert (x360 x1058))
(assert (= x4136 (and x4170 x4116)))
(assert (= x656 (and x4841 x3779)))
(assert (x360 x69))
(assert (= (x1877 (x3454 10936679508223583803006762266923565500374401145016910147028117655998246682624)) 10936679508223583803006762266923565500374401145016910147028117655998246682624))
(assert (x360 x3608))
(assert (x360 x2247))
(assert (x360 x4921))
(assert (= x4193 (or x4122 x1247 x1407 x4035 x3734 x78)))
(assert (x360 x4452))
(assert (x360 x977))
(assert (= x514 (and x168 x3046)))
(assert (= (x1877 (x4732 x3007)) x3007))
(assert (= x893 (and (not x136) x4208)))
(assert (x360 x2734))
(assert (= (and x1593 x4813) x1408))
(assert (= x1559 (x1877 (x4732 x1559))))
(assert (x360 x4688))
(assert (= (and x4709 x4633) x3440))
(assert (x4300 x2179))
(assert (x360 x4089))
(assert (x1107 x1426 (- x4674 x1806)))
(assert (x360 x4081))
(assert (x3272 x2079 x633))
(assert (=> (<= x2179 10000) (= (x4732 x2179) (x3454 x2179))))
(assert (x3745 x633 x3093 x1426 x1806))
(assert (x2835 x774))
(assert (x360 x3859))
(assert (= x1730 (=> (and (= 0 x4163) (= x996 x85)) x4677)))
(assert (= (and x2059 x708) x380))
(assert (x360 x2395))
(assert (x360 x717))
(assert (x360 x2149))
(assert (x2835 (- x1806 x633)))
(assert (x360 x1731))
(assert (x360 x4270))
(assert (x360 x820))
(assert (= (and x3448 (not x2985)) x2768))
(assert (= (x4732 6539370208772218570076773595062200405109424842860869254164860851635934461952) (x3454 6539370208772218570076773595062200405109424842860869254164860851635934461952)))
(assert (= x3293 (and (not x3238) x3599)))
(assert (x360 x3583))
(assert (= x4938 (or x4518 x4493)))
(assert (x360 x4778))
(assert (x360 x2660))
(assert (x360 x4626))
(assert (= x2667 (or x4105 x2879 x4397 x4638)))
(assert (= x1660 (and x3012 x2545)))
(assert (x360 x3646))
(assert (x360 x3491))
(assert (=> (>= 10000 x4688) (= (x3454 x4688) (x4732 x4688))))
(assert (x360 x478))
(assert (= (and x1762 x3130) x3834))
(assert (= (and x4602 (not x2326)) x4651))
(assert (= x2209 (=> (and (= x4466 x145) (= 0 x3016)) x4183)))
(assert (x360 x76))
(assert (x1107 x1806 (- x1426 x633)))
(assert (= x2872 (and x4443 x3501)))
(assert (= x3766 (and x1619 x2235)))
(assert (x360 x3602))
(assert (= (+ 1 (x1877 x3979)) (x1877 (x3243 x3979 1))))
(assert (= x4408 (and x2578 (not x3104))))
(assert (x360 x2880))
(assert (x360 x3056))
(assert (x360 x3072))
(assert (= (+ 1 (x1877 x3057)) (x1877 (x3243 x3057 1))))
(assert (x360 x1092))
(assert (= x3486 (or x1676 x989)))
(assert (x360 x523))
(assert (x360 x4026))
(assert (= (=> (= x2813 (= 0 x1485)) (and (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3340) (and (= true (<= x3340 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x3340))) x2927) (not x2813)) (and (=> (and (not x2927) (and (= x4636 x2382) (= x1321 x4862) (= x164 1))) x626) (=> (and (= x4636 x2758) x2927) x4011))) (=> (and x2813 (= x2758 x4636)) x4011))) x1089))
(assert (x2835 (- x3093 x1426)))
(assert (x360 x1701))
(assert (x360 x1269))
(assert (= x2002 (=> (and (= x2825 0) (= x3822 x3357)) x2700)))
(assert (= (and x722 x2627) x2830))
(assert (= (x1877 (x4732 x2967)) x2967))
(assert (x360 x4173))
(assert (= x2809 (x1877 (x4732 x2809))))
(assert (x360 x996))
(assert (x360 x3640))
(assert (= x451 (x1877 (x4732 x451))))
(assert (x4715 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= x2332 (=> (and (= 0 x3380) (= x4503 x2387) (= x2178 x2254)) x2232)))
(assert (x4715 x1332))
(assert (= (and x2616 x1176) x4200))
(assert (x360 x4306))
(assert (= (and x2892 (not x4870)) x1400))
(assert (= (and x1705 x1171) x3566))
(assert (= x1078 (and x4568 x3029)))
(assert (x360 x4801))
(assert (x360 x171))
(assert (= (and x3794 x4866) x2140))
(assert (= x3497 (and x3826 x4648)))
(assert (= 1313710058 (x1877 (x3454 1313710058))))
(assert (x360 x4421))
(assert (x360 x568))
(assert (x360 x33))
(assert (x360 x1098))
(assert (= (x1877 (x4732 x3540)) x3540))
(assert (x360 x1283))
(assert (= x1055 (=> (and (= x3953 x1257) (= 0 x561)) x912)))
(assert (= (x1877 (x3243 x4374 1)) (+ (x1877 x4374) 1)))
(assert (= (and (not x716) x1927) x504))
(assert (x360 x3449))
(assert (= x3398 (and (not x3184) x4477)))
(assert (x360 x2265))
(assert (x360 x355))
(assert (=> (<= x4118 10000) (= (x3454 x4118) (x4732 x4118))))
(assert (=> (>= 10000 x3893) (= (x4732 x3893) (x3454 x3893))))
(assert (x360 x2052))
(assert (= (=> (and (= x1386 (x1800 x2843)) (= x1030 x1026) (= x4890 x717) (>= x1386 0) (<= x1386 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1417) x533))
(assert (= (x1877 (x3243 x3445 1)) (+ (x1877 x3445) 1)))
(assert (x360 x3711))
(assert (= (x3454 18446744073709551615) (x4732 18446744073709551615)))
(assert (= (and x1400 x963) x3609))
(assert (= x2877 (and x4174 x64)))
(assert (x4300 x3563))
(assert (= (and (not x737) x1600) x3083))
(assert (x360 x706))
(assert (x360 x684))
(assert (x360 x4720))
(assert (x360 x2499))
(assert (x360 x3512))
(assert (x360 x1490))
(assert (x4300 x813))
(assert (= (or x2485 x1177) x640))
(assert (= (and (not x550) x3077) x3648))
(assert (x360 x4087))
(assert (x360 x1472))
(assert (= (and x4878 (not x415)) x2637))
(assert (= (and x1640 x142) x1881))
(assert (x360 x2145))
(assert (= (+ 2 (x1877 x2882)) (x1877 (x3243 x2882 2))))
(assert (x360 x4747))
(assert (x360 x4325))
(assert (= (and x508 x1237) x294))
(assert (= (and x4365 (not x1308)) x3193))
(assert (x360 x1059))
(assert (= (and x3716 x648) x3844))
(assert (= x2220 (or x495 x1885)))
(assert (= x1553 (and x1365 x4402)))
(assert (x360 x2188))
(assert (x360 x448))
(assert (x360 x1462))
(assert (= x81 (and x3567 x3269)))
(assert (= (x1877 (x4732 x902)) x902))
(assert (x360 x2317))
(assert (x360 x2027))
(assert (= (=> (and (= x2919 x4222) (= x4854 x2160)) x1956) x2008))
(assert (= (and x3873 x789) x926))
(assert (x360 x2736))
(assert (x360 x920))
(assert (x360 x3030))
(assert (x360 x3345))
(assert (= (and x2927 x4488) x2817))
(assert (x360 x2727))
(assert (= (and x2786 x2257) x2485))
(assert (x360 x3695))
(assert (x360 x161))
(assert (x360 x61))
(assert (= x2373 (and x421 x324)))
(assert (= (x1877 (x4732 x1092)) x1092))
(assert (= x3232 (and (not x1635) x1077)))
(assert (= x2759 (and x4027 x455)))
(assert (= (and x4875 x4143) x770))
(assert (x360 x3113))
(assert (x360 x862))
(assert (x360 x606))
(assert (= (+ (x1877 x4007) 2) (x1877 (x3243 x4007 2))))
(assert (x360 x2527))
(assert (=> (<= x1986 10000) (= (x4732 x1986) (x3454 x1986))))
(assert (x360 x3584))
(assert (x360 x1199))
(assert (and (x877 x2685 32) (x345 x2685 32) (=> (> 32 0) (= x2685 (+ (x2968 x2685 32) (* (x3413 x2685 32) 32)))) (x4363 x2685 32)))
(assert (x360 x776))
(assert (x360 x2055))
(assert (x4300 x392))
(assert (x360 x4434))
(assert (= x4390 (and x4136 x2897)))
(assert (= (or x1972 x118 x1082 x4408 x3614 x1869) x127))
(assert (= x1679 (and x2005 x620)))
(assert (= (or x4352 x2875 x2241 x4030 x1704 x1807) x3920))
(assert (x360 x377))
(assert (= x4722 (and x1842 (not x371))))
(assert (= (x1877 (x4732 x2860)) x2860))
(assert (= (+ (x1877 x1120) 1) (x1877 (x3243 x1120 1))))
(assert (x360 x1191))
(assert (= (or x2770 x2298 x821 x4278 x274 x570 x2750 x3334 x3492) x3694))
(assert (= x612 (and x487 x2565)))
(assert (x360 x3810))
(assert (= (or (and x4742 x2061) (and x3074 x3145) (and x1335 x586) (and (not x854) x4499) x340 (and (not x1613) x4431) x1165 x4796 (and x1452 x55)) x3589))
(assert (x360 x2444))
(assert (= x3880 (and x1390 x3824)))
(assert (= (=> (and (or x4045 (not x4045)) (= (= 0 x3001) x4045)) x3829) x1348))
(assert (x360 x2260))
(assert (x360 x1198))
(assert (= (or x3585 x1161 x4606 x2818 x3921 x1517) x2183))
(assert (= x187 (and (not x1331) x3878)))
(assert (= x1336 (or x319 x3534 x4786 x4938)))
(assert (= (=> (or (and (= x4923 x3133) (not x3133)) (and (and (= x4923 (> x1023 x2509)) (not (< x2836 x2755)) (= x2509 (x2102 (- x2836 x2755)))) x3133)) x736) x4139))
(assert (x360 x1038))
(assert (= (x1877 (x4732 x2379)) x2379))
(assert (= (=> (and (= (x4728 1461501637330902918203684832716283019655932542975 x986) x2017) (= x1115 (x2618 x4312 x1805)) (< 0 x2213) (= x265 (x4034 (+ x2799 32))) (= (x2102 (- x265 x246)) x2918) (= (= x234 x2017) x2752) (= (ite (= 0 x69) 1 0) x1805) (= x2213 (x4728 x1115 x3134)) (= x2799 (x4034 (+ x246 4))) (= (x4728 x4096 x4251) x4312) (= x4251 (ite (> x69 31) 1 0)) (= (ite (= 1 x782) 1 0) x4096)) (and (=> (and x2752 (and (= (x2102 (- x4555 4)) x4435) (> 2929553584 x3817) (= x871 (x1507 (x4732 x234))) (= x3817 2691771752) (= x4555 x2918) (not (> 2217467699 x3817)) (= x3235 x1591) (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 x2469) (< 0 x871) (= 36 x4555) (not (< x3817 2691771752)) (= x4784 (or (> x4435 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x4435) (= true (<= x4435 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (< x4555 4)))) (and (=> x4784 x2971) (=> (and (not x4784) (and (= 128 x3746) (<= 0 x2905) (> 1461501637330902918203684832716283019655932542976 x2905) (= x176 x1591) (<= x2905 1461501637330902918203684832716283019655932542975) (= x4813 (= x266 x2905)))) (and (=> (and (and (= x1820 (x1507 (x4732 x266))) (= x2189 x176) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x537) (> x1820 0) (not (< x4687 599290589)) (= x3007 x234) (= x2093 (x2102 (- x580 4))) (= x451 x2827) (< x4687 1466279372) (= x4543 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2093)) (< x2093 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2093))) (not (< x580 4)) (= 100 x580) (= x580 100) (= x4687 599290589)) x4813) (and (=> x4543 x4348) (=> (and (not x4543) (and (= x763 (= x451 x2827)) (= x2089 x451))) (and (=> (not x763) x4348) (=> (and x763 (and (= x2725 x3007) (= (= x3007 x234) x2677))) (and (=> (and (and (= x1756 (x3800 (x4732 x451) (x3454 1) 0)) (= x3905 x2189) (>= x1284 0) (= (< x1284 x176) x3358) (= (x2878 x1756) x1284) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1284)) x2677) (and (=> x3358 x4348) (=> (and (not x3358) (= x4196 (< x1284 x2189))) (and (=> (and (and (= (x3800 (x4732 x451) (x3454 1) 0) x4020) (= (x3800 (x4732 x3007) (x3454 1) 0) x2389) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3720) (= x3720 (x2964 x2389)) (<= 0 x3720) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2189)) x853) (= x1296 (x2102 (- x1284 x2189))) (= (< x853 x3720) x487)) (not x4196)) (and (=> (and (not x487) (and (= x305 (< x1596 x3720)) (= x1596 (x4034 (+ x3720 x2189))))) (and (=> (and (and (>= x2801 0) (<= x2801 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x50 (< x2801 x2189)) (= x2801 (x3821 x4111)) (= x465 (x3800 (x4732 x451) (x3454 2) 0)) (= (x3800 (x4732 x234) x465 0) x4111)) (not x305)) (and (=> x50 x4348) (=> (and (not x50) (= (< x2801 x2189) x4867)) (and (=> x4867 x4348) (=> (and (and (= (x2102 (- x2801 x2189)) x3889) (= x2135 1) (= 32 x2053)) (not x4867)) x3959))))) (=> x305 x4348))) (=> x487 x4348))) (=> x4196 x4348))))) (=> (not x2677) x4348))))))) (=> (and (= (= x234 x2905) x148) (not x4813)) (and (=> (and x148 (and (not (> 405663989 x2047)) (= x3474 x2827) (> 988262939 x2047) (= x2488 (or (and (= true (<= x3463 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x3463)) (> x3463 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x2102 (- x3407 4)) x3463) (not (= x2047 547091486)) (= 100 x3407) (= x1240 (x1507 (x4732 x234))) (= x1364 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= x2047 405663989)) (not (< x3407 4)) (= 100 x3407) (= x176 x3895) (< 0 x1240) (= x234 x1391) (= 599290589 x2047) (> 2217467699 x2047))) (and (=> (and (not x2488) (and (= x3474 x1915) (= (= x3474 x2827) x3502))) (and (=> (and (and (= x2285 (= x1391 x234)) (= x1391 x2453)) x3502) (and (=> (and (and (<= 0 x961) (= x3196 x3895) (= x735 (< x961 x176)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x961) (= x961 (x428 x1236)) (= x1236 (x3800 (x4732 x3474) (x3454 5) 0))) x2285) (and (=> (and (not x735) (and (>= x724 0) (= (x428 x4194) x724) (= (> x3895 x724) x282) (= x4194 (x3800 (x4732 x3474) (x3454 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x724))) (and (=> x282 x4297) (=> (and (not x282) (and (= (< x2990 x761) x1555) (= (x3967 x2534) x761) (= x2990 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3895))) (= (x2102 (- x724 x3895)) x3311) (>= x761 0) (<= x761 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2534 (x3800 (x4732 x1391) (x3454 5) 0)))) (and (=> x1555 x4297) (=> (and (and (= (x4034 (+ x761 x3895)) x2653) (= 1 x1778) (= x4270 32) (= x2584 1)) (not x1555)) x4514))))) (=> x735 x4297))) (=> (not x2285) x4297))) (=> (not x3502) x4297))) (=> x2488 x4297))) (=> (and (= (= x2905 x515) x4885) (not x148)) (and (=> (and (and (= (= x3180 x2905) x2235) (and x2235 (and (= 599290589 x1655) (> x3344 0) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4818) (= x2936 x2827) (= x749 x234) (> 988262939 x1655) (not (= 547091486 x1655)) (< x1655 2217467699) (= x47 100) (not (< x1655 405663989)) (not (= x1655 405663989)) (= x2557 (x2102 (- x47 4))) (= x47 100) (not (< x47 4)) (= x176 x348) (= (or (> x2557 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2557) true) (< x2557 96))) x665) (= x3344 (x1507 (x4732 x3180)))))) (not x4885)) (and (=> x665 x1486) (=> (and (and (= x3888 x2936) (= (= x2827 x2936) x1297)) (not x665)) (and (=> (and x1297 (and (= x749 x1283) (= x2422 (= x749 x234)))) (and (=> (not x2422) x1486) (=> (and (and (= x1617 (> x176 x1025)) (<= x1025 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1025 0) (= x348 x2499) (= x4458 (x3800 (x4732 x2936) (x3454 5) 0)) (= x1025 (x4675 x4458))) x2422) (and (=> (and (not x1617) (and (<= x2115 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2115 (x4675 x1815)) (= (x3800 (x4732 x2936) (x3454 5) 0) x1815) (<= 0 x2115) (= (< x2115 x348) x2326))) (and (=> (and (not x2326) (and (= (x3096 x718) x2736) (= x718 (x3800 (x4732 x749) (x3454 5) 0)) (>= x2736 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2736) (= (> x2736 x2050) x4272) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x348)) x2050) (= (x2102 (- x2115 x348)) x4082))) (and (=> x4272 x1486) (=> (and (and (= x4618 1) (= x3504 32) (= x2267 (x4034 (+ x348 x2736))) (= 1 x2204)) (not x4272)) x1085))) (=> x2326 x1486))) (=> x1617 x1486))))) (=> (not x1297) x1486))))) (=> (and (and (= 100 x4108) (not (< x4108 4)) (= x2504 x234) (> x1649 0) (not (= 547091486 x2942)) (< x2942 2217467699) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4720) (= x3738 x176) (= x2827 x3733) (= (or (and (= (<= x1141 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x1141)) (> x1141 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4137) (= x4108 100) (not (= x2942 405663989)) (not (> 405663989 x2942)) (> 988262939 x2942) (= 599290589 x2942) (= (x1507 (x4732 x515)) x1649) (= (x2102 (- x4108 4)) x1141)) x4885) (and (=> (and (not x4137) (and (= (= x2827 x3733) x2598) (= x2260 x3733))) (and (=> (and (and (= x2504 x2287) (= (= x2504 x234) x2048)) x2598) (and (=> (not x2048) x1055) (=> (and (and (>= x596 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x596) (= x2127 x3738) (= x596 (x3472 x1448)) (= x1448 (x3800 (x4732 x3733) (x3454 5) 0)) (= x716 (> x176 x596))) x2048) (and (=> (and (not x716) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3709) (<= 0 x3709) (= x4937 (x3800 (x4732 x3733) (x3454 5) 0)) (= x3709 (x3472 x4937)) (= x1690 (> x3738 x3709)))) (and (=> x1690 x1055) (=> (and (not x1690) (and (= x4236 (x1156 x4257)) (= (< x2170 x4236) x3684) (= x3349 (x2102 (- x3709 x3738))) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3738)) x2170) (<= 0 x4236) (= (x3800 (x4732 x2504) (x3454 5) 0) x4257) (<= x4236 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x3684 x1055) (=> (and (not x3684) (and (= x4367 1) (= 1 x561) (= x1257 32) (= x4706 (x4034 (+ x4236 x3738))))) x912))))) (=> x716 x1055))))) (=> (not x2598) x1055))) (=> x4137 x1055))))))))))) (=> (and (not x2752) (= (= x2017 x515) x1504)) (and (=> (and x1504 (and (= (or (and (= true (<= x2815 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x2815)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2815)) x3964) (not (< x3615 2691771752)) (> x3176 0) (= x3263 36) (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 x1857) (not (> 4 x3263)) (= x2815 (x2102 (- x3263 4))) (= x639 x3235) (> 2929553584 x3615) (= x3263 x2918) (not (< x3615 2217467699)) (= 2691771752 x3615) (= x3176 (x1507 (x4732 x515))))) (and (=> (and (and (= 128 x2015) (< x2474 1461501637330902918203684832716283019655932542976) (= x639 x2458) (>= x2474 0) (<= x2474 1461501637330902918203684832716283019655932542975) (= (= x266 x2474) x2661)) (not x3964)) (and (=> (and (and (= x2827 x2809) (not (< x1285 4)) (= x2458 x2461) (= x4615 599290589) (< 0 x3444) (= x3444 (x1507 (x4732 x266))) (= 100 x1285) (> 1466279372 x4615) (= x4742 (or (and (> 96 x1463) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1463))) (> x1463 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1702) (= 100 x1285) (= x515 x1954) (not (< x4615 599290589)) (= x1463 (x2102 (- x1285 4)))) x2661) (and (=> (and (and (= (= x2809 x2827) x854) (= x2809 x2399)) (not x4742)) (and (=> (not x854) x1730) (=> (and x854 (and (= x4781 x1954) (= x1613 (= x1954 x515)))) (and (=> (and x1613 (and (= x2461 x4579) (= x4896 (x2878 x1183)) (>= x4896 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4896) (= x1183 (x3800 (x4732 x2809) (x3454 1) 0)) (= x3074 (< x4896 x2458)))) (and (=> x3074 x1730) (=> (and (not x3074) (= x4566 (> x2461 x4896))) (and (=> x4566 x1730) (=> (and (not x4566) (and (= (< x4422 x709) x4916) (= (x3800 (x4732 x1954) (x3454 1) 0) x3446) (= (x4161 x3446) x709) (= x4422 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2461))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x709) (>= x709 0) (= x1018 (x3800 (x4732 x2809) (x3454 1) 0)) (= x4666 (x2102 (- x4896 x2461))))) (and (=> x4916 x1730) (=> (and (not x4916) (and (= (< x3010 x709) x1335) (= x3010 (x4034 (+ x709 x2461))))) (and (=> x1335 x1730) (=> (and (not x1335) (and (= (x3800 (x4732 x2809) (x3454 2) 0) x2797) (<= 0 x509) (<= x509 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x55 (< x509 x2461)) (= x4181 (x3800 (x4732 x515) x2797 0)) (= (x3821 x4181) x509))) (and (=> (and (= x1580 (> x2461 x509)) (not x55)) (and (=> (and (and (= x996 32) (= x4163 1) (= (x2102 (- x509 x2461)) x3602)) (not x1580)) x4677) (=> x1580 x1730))) (=> x55 x1730))))))))))) (=> (not x1613) x1730))))) (=> x4742 x1730))) (=> (and (not x2661) (= x3433 (= x2474 x234))) (and (=> (and (= x1438 (= x2474 x515)) (not x3433)) (and (=> (and (and (not (< x2546 4)) (= x1574 (or (and (> 96 x1477) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1477))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1477))) (not (= x2619 405663989)) (= x2546 100) (= x2458 x4846) (not (< x2619 405663989)) (= 599290589 x2619) (= (x2102 (- x2546 4)) x1477) (= 100 x2546) (= x515 x330) (= x889 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< x2619 2217467699) (> 988262939 x2619) (not (= x2619 547091486)) (= x3533 (x1507 (x4732 x515))) (= x323 x2827) (< 0 x3533)) x1438) (and (=> (and (and (= x825 (= x2827 x323)) (= x4273 x323)) (not x1574)) (and (=> (not x825) x4036) (=> (and x825 (and (= (= x515 x330) x384) (= x330 x4686))) (and (=> (not x384) x4036) (=> (and x384 (and (= (< x1508 x2458) x2028) (>= x1508 0) (= x1508 (x3472 x4391)) (= x4391 (x3800 (x4732 x323) (x3454 5) 0)) (<= x1508 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4389 x4846))) (and (=> (and (and (>= x128 0) (= (< x128 x4846) x1365) (<= x128 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3472 x2760) x128) (= x2760 (x3800 (x4732 x323) (x3454 5) 0))) (not x2028)) (and (=> (and (and (= (> x93 x273) x1171) (<= x93 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2102 (- x128 x4846)) x4947) (= (x3800 (x4732 x330) (x3454 5) 0) x3606) (= (x2741 x3606) x93) (>= x93 0) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4846)) x273)) (not x1365)) (and (=> x1171 x4036) (=> (and (and (= 1 x3949) (= x704 32) (= x3577 1) (= x3013 (x4034 (+ x93 x4846)))) (not x1171)) x3875))) (=> x1365 x4036))) (=> x2028 x4036))))))) (=> x1574 x4036))) (=> (and (not x1438) (and (and (and (= x2908 100) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3928) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3928)) (> 96 x3928))) x4358) (not (= 405663989 x1445)) (= x4667 x2827) (not (= 547091486 x1445)) (= x1217 x2458) (= (x1507 (x4732 x3180)) x3068) (= x515 x661) (= x1445 599290589) (= x2908 100) (= x3928 (x2102 (- x2908 4))) (not (< x1445 405663989)) (< x1445 988262939) (< x1445 2217467699) (not (< x2908 4)) (= x1825 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> x3068 0)) x2793) (= x2793 (= x2474 x3180)))) (and (=> x4358 x4268) (=> (and (and (= (= x2827 x4667) x3828) (= x957 x4667)) (not x4358)) (and (=> (and (and (= x4112 x661) (= x1382 (= x661 x515))) x3828) (and (=> (not x1382) x4268) (=> (and (and (= x1217 x629) (= (> x2458 x432) x1779) (<= 0 x432) (= x432 (x4675 x2698)) (<= x432 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3800 (x4732 x4667) (x3454 5) 0) x2698)) x1382) (and (=> (and (not x1779) (and (>= x1873 0) (= (x3800 (x4732 x4667) (x3454 5) 0) x3884) (= x3965 (> x1217 x1873)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1873) (= x1873 (x4675 x3884)))) (and (=> x3965 x4268) (=> (and (and (= (> x3262 x1852) x3489) (= (x2102 (- x1873 x1217)) x3370) (= (x3800 (x4732 x661) (x3454 5) 0) x631) (<= x3262 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3262 0) (= (x3479 x631) x3262) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1217)) x1852)) (not x3965)) (and (=> (and (and (= x766 1) (= x2708 32) (= x4345 (x4034 (+ x3262 x1217))) (= 1 x1260)) (not x3489)) x1117) (=> x3489 x4268))))) (=> x1779 x4268))))) (=> (not x3828) x4268))))))) (=> (and (and (not (> 4 x1380)) (< x1902 988262939) (= x2044 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (< x1902 405663989)) (< 0 x4842) (= x2827 x585) (not (= x1902 405663989)) (= x4842 (x1507 (x4732 x234))) (= x1902 599290589) (= x1380 100) (not (= x1902 547091486)) (= x2480 (or (and (< x4187 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4187) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4187))) (= x515 x4094) (> 2217467699 x1902) (= x2458 x3598) (= 100 x1380) (= (x2102 (- x1380 4)) x4187)) x3433) (and (=> (and (not x2480) (and (= x713 (= x2827 x585)) (= x585 x1493))) (and (=> (not x713) x727) (=> (and x713 (and (= x2558 x4094) (= (= x4094 x515) x4656))) (and (=> (not x4656) x727) (=> (and (and (= (< x4659 x2458) x1995) (= x1884 x3598) (= x4649 (x3800 (x4732 x585) (x3454 5) 0)) (<= 0 x4659) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4659) (= x4659 (x428 x4649))) x4656) (and (=> (and (and (= (x3800 (x4732 x585) (x3454 5) 0) x270) (= x2674 (< x3374 x3598)) (<= x3374 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3374 (x428 x270)) (<= 0 x3374)) (not x1995)) (and (=> x2674 x727) (=> (and (not x2674) (and (= x1036 (x2102 (- x3374 x3598))) (>= x61 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x61) (= x3641 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3598))) (= x2544 (> x61 x3641)) (= (x3800 (x4732 x4094) (x3454 5) 0) x475) (= x61 (x1442 x475)))) (and (=> (and (and (= (x4034 (+ x61 x3598)) x1757) (= 32 x3853) (= 1 x1603) (= x163 1)) (not x2544)) x663) (=> x2544 x727))))) (=> x1995 x727))))))) (=> x2480 x727))))))) (=> x3964 x3064))) (=> (and (not x1504) (and (= x3901 (= x3180 x2017)) (and x3901 (and (= x1274 x2918) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1490) (and (> 32 x1490) (= (<= x1490 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x2956) (not (< x4479 2217467699)) (= x3235 x3412) (not (> 4 x1274)) (not (> 2691771752 x4479)) (= (x2102 (- x1274 4)) x1490) (> x4645 0) (= x4645 (x1507 (x4732 x3180))) (= x4479 2691771752) (= x1075 72570022874062638528011751457397263716769196454539065078543251854057308946432) (> 2929553584 x4479) (= 36 x1274))))) (and (=> (and (not x2956) (and (= x2575 128) (<= x2502 1461501637330902918203684832716283019655932542975) (<= 0 x2502) (< x2502 1461501637330902918203684832716283019655932542976) (= x4578 x3412) (= x2080 (= x266 x2502)))) (and (=> (and x2080 (and (= x2866 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1534) (and (> 96 x1534) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1534) true)))) (> 1466279372 x2620) (not (> 599290589 x2620)) (= 599290589 x2620) (= (x2102 (- x2716 4)) x1534) (= x965 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x2009 x2827) (= x2716 100) (< 0 x1491) (= x4578 x3034) (= (x1507 (x4732 x266)) x1491) (not (< x2716 4)) (= x2716 100) (= x2731 x3180))) (and (=> x2866 x1501) (=> (and (not x2866) (and (= x4124 x2009) (= x253 (= x2009 x2827)))) (and (=> (and (and (= x4788 x2731) (= (= x2731 x3180) x3029)) x253) (and (=> (and x3029 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4332) (= x2517 x3034) (= x4332 (x2878 x1441)) (= (x3800 (x4732 x2009) (x3454 1) 0) x1441) (>= x4332 0) (= (< x4332 x4578) x3458))) (and (=> (and (= (< x4332 x3034) x2202) (not x3458)) (and (=> (and (and (= (x3800 (x4732 x2731) (x3454 1) 0) x2789) (= (> x3514 x464) x1351) (<= x3514 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3034)) x464) (= x3514 (x3981 x2789)) (<= 0 x3514) (= (x3800 (x4732 x2009) (x3454 1) 0) x1621) (= (x2102 (- x4332 x3034)) x4423)) (not x2202)) (and (=> x1351 x1501) (=> (and (and (= x2911 (< x523 x3514)) (= x523 (x4034 (+ x3514 x3034)))) (not x1351)) (and (=> x2911 x1501) (=> (and (and (= x431 (x3821 x4612)) (= x3143 (x3800 (x4732 x2009) (x3454 2) 0)) (>= x431 0) (= (> x3034 x431) x2688) (= (x3800 (x4732 x3180) x3143 0) x4612) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x431)) (not x2911)) (and (=> x2688 x1501) (=> (and (= (< x431 x3034) x4418) (not x2688)) (and (=> (and (and (= x1838 1) (= x2253 (x2102 (- x431 x3034))) (= 32 x655)) (not x4418)) x2724) (=> x4418 x1501))))))))) (=> x2202 x1501))) (=> x3458 x1501))) (=> (not x3029) x1501))) (=> (not x253) x1501))))) (=> (and (= x1944 (= x2502 x234)) (not x2080)) (and (=> (and (not x1944) (= x593 (= x515 x2502))) (and (=> (and (and (and (and (= x1537 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4050 x3180) (= x4608 x2827) (not (= 405663989 x3274)) (> x4580 0) (= (x1507 (x4732 x3180)) x4580) (= x3150 (or (> x2074 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x2074) (= true (<= x2074 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= 100 x973) (not (= 547091486 x3274)) (not (> 4 x973)) (= 100 x973) (not (> 405663989 x3274)) (> 988262939 x3274) (= x2074 (x2102 (- x973 4))) (> 2217467699 x3274) (= x2443 x4578) (= x3274 599290589)) x1301) (= (= x3180 x2502) x1301)) (not x593)) (and (=> (and (and (= (= x2827 x4608) x217) (= x852 x4608)) (not x3150)) (and (=> (not x217) x3329) (=> (and (and (= x3466 (= x4050 x3180)) (= x4050 x1202)) x217) (and (=> (and (and (= (x4675 x4331) x2740) (= x2443 x2978) (>= x2740 0) (= x4331 (x3800 (x4732 x4608) (x3454 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2740) (= (> x4578 x2740) x476)) x3466) (and (=> (and (and (<= x3739 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3739 0) (= (< x3739 x2443) x4182) (= (x3800 (x4732 x4608) (x3454 5) 0) x4734) (= (x4675 x4734) x3739)) (not x476)) (and (=> x4182 x3329) (=> (and (not x4182) (and (= (> x1239 x3437) x760) (= x1239 (x1557 x412)) (= (x3800 (x4732 x4050) (x3454 5) 0) x412) (<= x1239 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3437 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2443))) (= (x2102 (- x3739 x2443)) x3636) (>= x1239 0))) (and (=> x760 x3329) (=> (and (and (= 1 x3022) (= x1316 32) (= x705 (x4034 (+ x2443 x1239))) (= 1 x1265)) (not x760)) x4361))))) (=> x476 x3329))) (=> (not x3466) x3329))))) (=> x3150 x3329))) (=> (and x593 (and (not (= x4460 405663989)) (> x974 0) (< x4460 2217467699) (= (or (and (> 96 x3485) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3485))) (> x3485 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x443) (= x4460 599290589) (not (< x4460 405663989)) (= (x1507 (x4732 x515)) x974) (= x4578 x1042) (= x3762 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3485 (x2102 (- x2635 4))) (= x3180 x3559) (= x2827 x1264) (< x4460 988262939) (= x2635 100) (not (> 4 x2635)) (not (= 547091486 x4460)) (= 100 x2635))) (and (=> x443 x4803) (=> (and (not x443) (and (= x2672 x1264) (= (= x2827 x1264) x616))) (and (=> (not x616) x4803) (=> (and x616 (and (= (= x3180 x3559) x3941) (= x2996 x3559))) (and (=> (not x3941) x4803) (=> (and x3941 (and (<= x790 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2962 (x3800 (x4732 x1264) (x3454 5) 0)) (= x3115 x1042) (>= x790 0) (= (x3472 x2962) x790) (= x3099 (< x790 x4578)))) (and (=> (and (and (= (< x4281 x1042) x3322) (>= x4281 0) (= x4281 (x3472 x1628)) (= x1628 (x3800 (x4732 x1264) (x3454 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4281)) (not x3099)) (and (=> (and (and (= (x3800 (x4732 x3559) (x3454 5) 0) x664) (= x414 (x2102 (- x4281 x1042))) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1042)) x4317) (= x1394 (x1835 x664)) (= x2244 (> x1394 x4317)) (>= x1394 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1394)) (not x3322)) (and (=> x2244 x4803) (=> (and (not x2244) (and (= 1 x698) (= x2354 1) (= (x4034 (+ x1042 x1394)) x4825) (= x4158 32))) x43))) (=> x3322 x4803))) (=> x3099 x4803))))))))))) (=> (and x1944 (and (= x2860 x2827) (= x39 599290589) (> 988262939 x39) (= x4777 (x2102 (- x3777 4))) (not (< x39 405663989)) (= x3180 x1126) (= x3777 100) (= x2613 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4777) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4777) true) (< x4777 96))) x4761) (> x4178 0) (= x3777 100) (= x4817 x4578) (not (< x3777 4)) (not (= 405663989 x39)) (= x4178 (x1507 (x4732 x234))) (> 2217467699 x39) (not (= 547091486 x39)))) (and (=> x4761 x3288) (=> (and (and (= x2860 x1354) (= (= x2827 x2860) x3208)) (not x4761)) (and (=> (and (and (= x1126 x2984) (= (= x3180 x1126) x3974)) x3208) (and (=> (not x3974) x3288) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x316) (>= x316 0) (= (x428 x4138) x316) (= (< x316 x4578) x4153) (= x4735 x4817) (= (x3800 (x4732 x2860) (x3454 5) 0) x4138)) x3974) (and (=> (and (not x4153) (and (<= x137 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x137 (x428 x3456)) (= x3456 (x3800 (x4732 x2860) (x3454 5) 0)) (>= x137 0) (= x3246 (< x137 x4817)))) (and (=> x3246 x3288) (=> (and (not x3246) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x91) (= x2514 (x3800 (x4732 x1126) (x3454 5) 0)) (= x91 (x1305 x2514)) (= (> x91 x3902) x3498) (= (x2102 (- x137 x4817)) x1731) (>= x91 0) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4817)) x3902))) (and (=> x3498 x3288) (=> (and (not x3498) (and (= x4603 1) (= x660 (x4034 (+ x4817 x91))) (= 1 x932) (= 32 x1982))) x3927))))) (=> x4153 x3288))))) (=> (not x3208) x3288))))))))) (=> x2956 x2590))))))) x1656))
(assert (x4300 x212))
(assert (= x1112 (or x3852 x289)))
(assert (=> (<= x3092 10000) (= (x4732 x3092) (x3454 x3092))))
(assert (= (and x1705 (not x1171)) x723))
(assert (= (and x2999 x1555) x2818))
(assert (= (x1877 (x4732 x4173)) x4173))
(assert (x360 x163))
(assert (= x3919 (and (not x1145) x3648)))
(assert (x360 x3485))
(assert (=> (>= 10000 x392) (= (x3454 x392) (x4732 x392))))
(assert (x360 x152))
(assert (= (and (not x2199) x144) x1949))
(assert (x360 x4845))
(assert (x360 x853))
(assert (x360 x1583))
(assert (x360 x1319))
(assert (x4715 x3056))
(assert (x4300 x4016))
(assert (= (and (not x4525) x31) x2729))
(assert (x360 x2409))
(assert (x2915 x1166))
(assert (x360 x3962))
(assert (= (and x3441 x3137) x274))
(assert (x1990 x4096 x4251))
(assert (x360 x2839))
(assert (=> (>= 10000 x1954) (= (x3454 x1954) (x4732 x1954))))
(assert (x360 x4086))
(assert (x2835 x3681))
(assert (x360 x3200))
(assert (= (and x51 x3388) x2791))
(assert (x360 x3594))
(assert (x360 x2135))
(assert (x360 x1036))
(assert (= (and x1804 x1256) x3985))
(assert (x360 x2166))
(assert (x360 x3815))
(assert (= (x1877 (x3243 x3247 2)) (+ (x1877 x3247) 2)))
(assert (= (and (not x4631) x3890) x1175))
(assert (x360 x1443))
(assert (x360 x4902))
(assert (= x1950 (or x3059 x372)))
(assert (= x1832 (and (not x710) x546)))
(assert (x1107 x633 (- x3093 x1806)))
(assert (= x1718 (and x4014 x3957)))
(assert (x4300 x2561))
(assert (x360 x947))
(assert (= (x1877 (x4732 x3030)) x3030))
(assert (= (and x1436 (not x4359)) x4530))
(assert (= x1620 (and x1123 x1505)))
(assert (x360 x1678))
(assert (= x670 (x1877 (x4732 x670))))
(assert (= (and x2958 x4790) x78))
(assert (= x4179 (and x258 (not x4176))))
(assert (= x387 (and (not x4813) x1593)))
(assert (x360 x404))
(assert (x360 x1042))
(assert (x360 x3670))
(assert (x360 x3138))
(assert (=> (>= 10000 x2808) (= (x4732 x2808) (x3454 x2808))))
(assert (x360 x693))
(assert (x360 x2322))
(assert (= x75 (and x4878 x415)))
(assert (= (+ 1 (x1877 x1525)) (x1877 (x3243 x1525 1))))
(assert (= (and x753 x3088) x3414))
(assert (x360 x1563))
(assert (= (not (and (= (x3936 x35) x632) (= x35 (x3243 x2471 1)) (<= 0 x632) (= (x3800 (x4732 x3695) x2090 0) x2471) (< x632 1461501637330902918203684832716283019655932542976) (<= x632 1461501637330902918203684832716283019655932542975))) x1154))
(assert (= x3794 (and x52 x4126)))
(assert (= (=> (and (= x945 x3227) (= x4371 x2780) (= x4526 x1479) (= x787 x2043) (= x2355 x1558)) x1188) x3278))
(assert (= (=> (and (or (and (not x4027) (and (and (< x1198 1461501637330902918203684832716283019655932542976) (= (= 0 x1198) x1670) (<= x1198 1461501637330902918203684832716283019655932542975) (= (x2533 x3408) x1198) (>= x1198 0)) (or (and x1670 (and (= (x4728 1461501637330902918203684832716283019655932542975 x1332) x998) (= x1633 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (= (x4728 1461501637330902918203684832716283019655932542975 x1332) x3177))) (and (and (= x133 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (= (x4728 1461501637330902918203684832716283019655932542975 x1332) x2077) (= (x4728 1461501637330902918203684832716283019655932542975 x1332) x2146) (= x219 (x4474 x3870)) (>= 1461501637330902918203684832716283019655932542975 x219) (>= x219 0) (= (x3243 x3408 1) x3870) (> 1461501637330902918203684832716283019655932542976 x219)) (not x1670))))) (and (and (and (<= 0 x1098) (= (x2102 (- x2179 x1098)) x3523) (= (< 0 x3523) x1578) (= x1098 (x2533 x3408)) (>= 1461501637330902918203684832716283019655932542975 x1098) (< x1098 1461501637330902918203684832716283019655932542976)) (or (and (and (= (x4728 1461501637330902918203684832716283019655932542975 x1332) x4523) (= x3496 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (= x1701 (x4728 1461501637330902918203684832716283019655932542975 x1332))) (not x1578)) (and (and (= (x3800 (x4732 x2179) x1263 0) x358) (= (x4728 1461501637330902918203684832716283019655932542975 x1332) x4140) (= x2924 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (>= x866 0) (> 1461501637330902918203684832716283019655932542976 x866) (= x4587 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (>= 1461501637330902918203684832716283019655932542975 x866) (= (x3462 x358) x866)) x1578))) x4027)) (= (ite (> x2348 x4546) (not (= x2179 0)) (< x4546 x2348)) x4027)) x941) x545))
(assert (= (and x4275 (not x3392)) x4409))
(assert (x360 x3634))
(assert (x4300 x749))
(assert (x360 x3882))
(assert (= (and x4340 x4635) x3492))
(assert (=> (<= x1830 10000) (= (x3454 x1830) (x4732 x1830))))
(assert (= x3282 (and x3958 (not x3433))))
(assert (= (x1877 (x4732 x4865)) x4865))
(assert (= (x1877 (x3454 2023533118)) 2023533118))
(assert (= x2046 (x1877 (x4732 x2046))))
(assert (= (and x1362 x4232) x2464))
(assert (x360 x3822))
(assert (x360 x4290))
(assert (x360 x2321))
(assert (x3745 x1426 x4674 x1806 x1426))
(assert (= x603 (=> (and (= x295 x642) (= x1294 0)) x1292)))
(assert (= x2434 (and x242 x1855)))
(assert (= (=> (and (= x2644 (x3808 x1817)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2022) (<= 0 x2022) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2644) (= (x3243 x1280 1) x1817) (= x4509 false) (>= x2644 0) (= false x3626) (= (x2857 x1280) x2022)) x1406) x1770))
(assert (and (x4019 x3168 1000000000000000000) (=> (and (> 1000000000000000000 0) (> x3168 0)) (and (<= (* 1000000000000000000 (x3413 x3168 1000000000000000000)) x3168) (< (- x3168 1000000000000000000) (* 1000000000000000000 (x3413 x3168 1000000000000000000))))) (x3763 x3168 1000000000000000000) (x1905 x3168 1000000000000000000) (x3469 x3168 1000000000000000000)))
(assert (x360 x4205))
(assert (= x279 (and x3066 (not x735))))
(assert (= (and x3918 (not x1225)) x4206))
(assert (=> (>= 10000 x3382) (= (x4732 x3382) (x3454 x3382))))
(assert (x4300 x2504))
(assert (= (or x4592 x2164 x2311 x903 x1790 x419) x1043))
(assert (x360 x2515))
(assert (x360 x2179))
(assert (x360 x905))
(assert (= (and x2647 x2633) x1101))
(assert (x360 x3351))
(assert (x360 x2967))
(assert (= (+ (x1877 x4305) 2) (x1877 (x3243 x4305 2))))
(assert (x360 x1))
(assert (= (or (and x4338 x2434) (and x2530 (not x1193))) x2870))
(assert (x360 x3118))
(assert (x360 x151))
(assert (=> (<= x4483 10000) (= (x4732 x4483) (x3454 x4483))))
(assert (= x4800 (or x2250 x4102)))
(assert (= (and x4604 (not x2103)) x194))
(assert (x360 x2370))
(assert (= x1104 (=> (= x1203 x4053) x4575)))
(assert (= x2645 (x1877 (x4732 x2645))))
(assert (= (x1877 (x3243 x2438 1)) (+ (x1877 x2438) 1)))
(assert (= x4877 (and (not x4681) x194)))
(assert (= (x3454 2362143243) (x4732 2362143243)))
(assert (= x3211 (and x2804 x4613)))
(assert (x360 x1219))
(assert (x360 x1429))
(assert (= x1986 (x1877 (x4732 x1986))))
(assert (x360 x4666))
(assert (x360 x454))
(assert (x360 x3452))
(assert (= x3698 (or x3678 x1427)))
(assert (= (and x4516 x1434) x4171))
(assert (= (and x3430 (not x1670)) x4638))
(assert (x360 x4168))
(assert (= x2663 (=> (= x4692 x406) x4039)))
(assert (x2835 (- x633 x1426)))
(assert (x360 x4578))
(assert (= x3703 (and x2530 x1193)))
(assert (= x2564 (x1877 (x4732 x2564))))
(assert (x360 x2354))
(assert (= x3943 (x1877 (x4732 x3943))))
(assert (= (=> (and (= x213 x4421) (= x2591 0)) x2357) x2410))
(assert (= (=> (and (= x3239 x1998) (= 0 x4235)) x2327) x3064))
(assert (x360 x170))
(assert (= (and x958 x2248) x2662))
(assert (= x3721 (and x750 x4739)))
(assert (x360 x2740))
(assert (= x1669 (and (not x3616) x2362)))
(assert (= (and x1331 x3878) x3549))
(assert (x360 x3461))
(assert (x360 x4510))
(assert (= (or x3161 (and (not x2998) x3231)) x1666))
(assert (= (x1877 (x4732 x3733)) x3733))
(assert (= (and x1368 x2577) x4653))
(assert (x360 x2766))
(assert (= x2914 (and (=> (and (= (= 0 x1652) x3665) x3337) (and (=> (and (not x3665) (and (or (and x2396 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2409) (= 2858086653 x1327) (= x2356 (x1507 (x4732 x234))) (>= x2409 0) (= x211 4) (= x2796 32) (not (< x211 4)) (> x2356 0) (not (= 2835717307 x1327)) (not (> 2691771752 x1327)) (not (= x1327 2691771752)) (> 2929553584 x1327) (not (= x1327 2796547477)) (= x2824 1) (= x211 x2166) (not (> 2217467699 x1327)) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x177))) (and (and (or (and (not x4237) (and (and x2248 (and (= 4 x2744) (not (< x1021 2217467699)) (not (< x2744 4)) (> 2929553584 x1021) (= x2166 x2744) (= x872 (x1507 (x4732 x3180))) (= 2858086653 x1021) (= x2796 32) (= x2785 77053863734975077137548456399560439977311721439096602559221323163398253314048) (< 0 x872) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3679) (= x2824 1) (not (= 2691771752 x1021)) (>= x3679 0) (not (= x1021 2796547477)) (not (= 2835717307 x1021)) (not (< x1021 2691771752)))) (= x2248 (= x3180 x2435)))) (and (and (= (x1507 (x4732 x515)) x2625) (= x489 x2166) (not (= x3532 2796547477)) (= 2858086653 x3532) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x1714) (= x2824 1) (< x3532 2929553584) (< 0 x2625) (not (= 2691771752 x3532)) (not (> 2691771752 x3532)) (not (< x3532 2217467699)) (= 32 x2796) (not (= x3532 2835717307)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1661) (not (< x489 4)) (>= x1661 0) (= x489 4)) x4237)) (= x4237 (= x2435 x515))) (not x2396))) (and (= (x4034 (+ x2787 160)) x3541) (= (= x234 x2435) x2396) (= 4 x2166) (= x2435 (x4728 1461501637330902918203684832716283019655932542975 x986))))) x873) (=> (and (and (= 0 x3860) (= x2548 x2787)) x3665) x4650))) (=> (and (not x3337) (and (= x1353 x4890) (= x1026 x3235) (= x601 x2787))) x3084))))
(assert (x360 x4398))
(assert (x360 x4062))
(assert (x360 x3370))
(assert (and (and (= (- (* (- x2475 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x2475 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x2475 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x2475) (- (* x2475 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2475))) (= (x4060 1000000000000000000 (- x2475 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2475 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x2475 1000000000000000000) (x4060 1000000000000000000 x2475)) (x1520 1000000000000000000 x2475) (x3818 1000000000000000000 x2475) (x3063 1000000000000000000 x2475) (x4067 1000000000000000000 x2475) (x3727 1000000000000000000 x2475)))
(assert (= (+ (x1877 x3162) 1) (x1877 (x3243 x3162 1))))
(assert (x4715 x4145))
(assert (x360 x1695))
(assert (= 1466279372 (x1877 (x3454 1466279372))))
(assert (x360 x3235))
(assert (= x2018 (or x1430 x2503 x3250 x3723 x887 x363)))
(assert (x360 x872))
(assert (x4300 x283))
(assert (= x4823 (and x2020 x4414)))
(assert (=> (<= x4050 10000) (= (x3454 x4050) (x4732 x4050))))
(assert (x360 x3170))
(assert (x360 x1965))
(assert (x360 x2276))
(assert (x360 x391))
(assert (= x2821 (and x2939 (not x14))))
(assert (x360 x1337))
(assert (x360 x2769))
(assert (= (and x2436 x3592) x3723))
(assert (= (x1877 (x3243 x993 1)) (+ 1 (x1877 x993))))
(assert (x360 x2978))
(assert (x360 x4233))
(assert (= (and x3883 x4538) x1099))
(assert (x360 x238))
(assert (= x4031 (and x1898 x885)))
(assert (x360 x768))
(assert (= (or x2870 x3703) x2428))
(assert (x360 x2126))
(assert (x360 x3476))
(assert (= x3183 (and x413 (not x3749))))
(assert (= x2452 (and x4797 x4390)))
(assert (=> (<= x445 10000) (= (x4732 x445) (x3454 x445))))
(assert (= x2959 x4931))
(assert (x4300 x2695))
(assert (= x3297 (or x71 x365 x3284 x2977 x4620)))
(assert (x360 x3780))
(assert (= x4724 (and (not x1256) x1804)))
(assert (x360 x943))
(assert (= (=> (and (= x704 x1794) (= x947 x3577)) x1302) x3875))
(assert (= x4042 (and (not x4841) x3779)))
(assert (x360 x3294))
(assert (= x1542 (and (not x4829) x1669)))
(assert (= x2099 (and (not x2688) x3688)))
(assert (x3745 x1426 x1806 x1426 x4674))
(assert (= x970 (and x3556 x2339)))
(assert (x360 x4113))
(assert (x360 x201))
(assert (x360 x3336))
(assert (x360 x1186))
(assert (= (or x114 x519) x1897))
(assert (x360 x287))
(assert (x360 x401))
(assert (= (or x3350 x3199) x3843))
(assert (x360 x3956))
(assert (x360 x3325))
(assert (x360 x1599))
(assert (x360 x1895))
(assert (= x1606 (=> (and (and (= (x3800 (x4732 x1986) x4175 0) x619) (= x460 (x191 x4311)) (= (x3243 x2703 2) x3420) (<= x460 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2105 (x3705 x3420)) (= x3848 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (= x3893 (x4728 1461501637330902918203684832716283019655932542975 x986)) (= (x3800 (x4732 x3848) x4305 0) x4601) (= x212 (x4728 1461501637330902918203684832716283019655932542975 x986)) (= (x3243 x4601 2) x4311) (= (x3243 x619 1) x1792) (>= x2105 0) (= (x4439 x619) x201) (= x1986 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (<= x2105 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x201) (<= 0 x643) (= x4673 (> x643 x473)) (= (x2478 x1792) x643) (= x1263 (x3800 (x4732 x212) (x3454 155) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x643) (= x2703 (x3800 (x4732 x1743) x1263 0)) (= (x4728 1461501637330902918203684832716283019655932542975 x1332) x1743) (<= x473 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3800 (x4732 x3893) (x3454 154) 0) x4305) (<= 0 x473) (= x4175 (x3800 (x4732 x3327) (x3454 158) 0)) (= x3327 (x4728 1461501637330902918203684832716283019655932542975 x986)) (<= 0 x460) (<= 0 x201)) (or (and (= 0 x676) (not x4673)) (and (= x643 x676) x4673))) x2404)))
(assert (=> (>= 10000 x4865) (= (x3454 x4865) (x4732 x4865))))
(assert (= (x1877 (x4732 x749)) x749))
(assert (x360 x4922))
(assert (= x2280 (=> (and (= x2919 x2806) (= x3778 x4854)) x1956)))
(assert (x360 x1218))
(assert (x360 x2952))
(assert (= x4195 (and x444 x3128)))
(assert (x360 x1735))
(assert (= (and x2199 x144) x4059))
(assert (= x2009 (x1877 (x4732 x2009))))
(assert (= (and x294 x859) x1488))
(assert (x360 x1592))
(assert (= x2021 (x1877 (x4732 x2021))))
(assert (x360 x68))
(assert (x4300 x4688))
(assert (x711 x1332))
(assert (=> (<= x4454 10000) (= (x3454 x4454) (x4732 x4454))))
(assert (x360 x17))
(assert (= (and x1728 x1121) x3360))
(assert (x4300 x1954))
(assert (= (=> (and (= x4308 x2459) (= 0 x701)) x4428) x2626))
(assert (= (and x953 x3588) x4668))
(assert (= (and x1602 (not x1580)) x4247))
(assert (= x736 (and (=> (and (and (or (and (not x2116) (and (not (> 0 x2194)) (= (< 115792089237316195423570985008687907853269984665640564039457 x2462) x4944) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4226 x3237)) (<= 0 x4226) (= (x1755 x1880) x4226) (= (+ x2505 x2336) x2312) (= x3237 x2505) (= x1699 (x3413 x4632 x2279)) (= x4226 x2336) (<= x4226 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1071 x2462) (= (ite x4944 1 0) x63) (= x63 0) (< 0 x2279) (= x4632 (* 1000000000000000000 x855)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x855 1000000000000000000)) (= x1071 x3361) (= x2312 x2223) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2462)) x2194) (= x855 (x2477 (* 1000000000000000000 x2462))) (= (x3413 x1699 1000000000000000000) x3237) (= x1968 0))) (and (and (= x4773 (x1755 x1880)) (= (> x1472 115792089237316195423570985008687907853269984665640564039457) x2224) (= x4654 (* x3681 1000000000000000000)) (= x2775 (+ x3798 x841)) (= (x3413 x4654 x2279) x1324) (= x2223 x2775) (= x2271 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4773) (<= 0 x1191) (not (> x1563 x1191)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x3681)) (= x3798 x4773) (= (x3413 x1103 x1426) x216) (= (x3413 x216 1000000000000000000) x1563) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4773 x210)) (= (x2102 (- x1191 x1563)) x2145) (= 0 x2711) (= x210 x841) (= x1968 x2145) (= x1026 x3361) (= x4177 (> x1472 115792089237316195423570985008687907853269984665640564039457)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1191) (>= x4773 0) (= (x1401 x46) x1191) (= x774 (x2477 (* 1000000000000000000 x1472))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x774)) (= (ite x4177 1 0) x2711) (= x1103 (* x774 1000000000000000000)) (< 0 x2279) (= x210 (x3413 x1324 1000000000000000000)) (= x2271 (ite x2224 1 0)) (< 0 x1426) (= (x2477 (* 1000000000000000000 x1472)) x3681)) x2116)) (and (< (x4060 x1806 x1426) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1345 (x4060 x1806 x1426)) (= (x1401 x46) x1806) (= (x3243 x1880 1) x46) (= x2116 (< x1472 x2462)) (= x1233 (x3800 (x4732 x922) (x3454 159) 0)) (= (x3413 x1345 1000000000000000000) x2462) (= (x3800 (x4732 x2445) x1233 0) x1880) (<= x1806 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4728 1461501637330902918203684832716283019655932542975 x986) x922) (= x1472 x1026) (not (> 0 x1026)) (<= 0 x1806))) x4923) x493) (=> (and (not x4923) (and (= x2622 0) (= x812 x2543))) x321))))
(assert (x360 x1411))
(assert (= (and x3211 (not x4809)) x3292))
(assert (x2915 x3494))
(assert (x360 x23))
(assert (= (and x4633 (not x4709)) x466))
(assert (x360 x986))
(assert (= (+ (x1877 x599) 2) (x1877 (x3243 x599 2))))
(assert (x360 x4822))
(assert (x360 x3331))
(assert (x360 x3524))
(assert (= x540 (or x2428 x1112 x3690)))
(assert (= (and x102 x2331) x2391))
(assert (x360 x1287))
(assert (= x4185 (x1877 (x4732 x4185))))
(assert (= (or x3008 x964) x3785))
(assert (= x1889 (=> (and (= (x4728 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3106) x244) (= x2906 x3913) (= (x4034 (+ 31 x3724)) x3106) (<= x3913 1461501637330902918203684832716283019655932542975) (not (or (> x3724 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3724)) (< x3724 32)))) (not (= x3476 0)) (= (x2177 452) x3913) (= (x4034 (+ x244 452)) x1540) (= x4115 x1540)) x393)))
(assert (x360 x4100))
(assert (x360 x2255))
(assert (x360 x2572))
(assert (x360 x4523))
(assert (x360 x4850))
(assert (= x3004 (and x3498 x2415)))
(assert (x4300 x1243))
(assert (x77 x4711))
(assert (x4300 x1016))
(assert (x4300 x4737))
(assert (x360 x1192))
(assert (= x930 (and (not x4418) x2099)))
(assert (= (and x3631 x4923) x1955))
(assert (= x4670 (and (not x1504) x911)))
(assert (and (x877 x2991 1461501637330902918203684832716283019655932542976) (x345 x2991 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x2991 (+ (x2968 x2991 1461501637330902918203684832716283019655932542976) (* (x3413 x2991 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x4363 x2991 1461501637330902918203684832716283019655932542976)))
(assert (= (and (not x4353) x1459) x2958))
(assert (x360 x3686))
(assert (x360 x889))
(assert (= x2207 (or x3038 x2792)))
(assert (= x4942 (and x1938 x3181)))
(assert (= x4522 (and (not x1006) x3264)))
(assert (x360 x3660))
(assert (x4300 x4536))
(assert (= x2114 (and x3270 x4885)))
(assert (= x4488 (and x2344 (not x2813))))
(assert (x360 x4346))
(assert (=> (<= x2349 10000) (= (x4732 x2349) (x3454 x2349))))
(assert (= x2647 (and x2121 (not x1708))))
(assert (= (=> (and (= x781 (x4034 (+ x601 x2689))) (not (= x4833 0)) (= x2685 (x4034 (+ 31 x4008))) (= (x4728 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2685) x2689) (= (> x681 0) x28) (not (or (and (< x4008 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4008))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4008))) (= (x719 x601) x3755) (= (ite (> x3755 x1353) x1353 x3755) x681)) (and (=> (and (not x28) (and (= x2297 x781) (= x3227 x2006) (= x2308 x756) (= x787 x2527))) x1271) (=> (and (and (>= x2216 0) (= x4078 (x4728 1461501637330902918203684832716283019655932542975 x986)) (> 1461501637330902918203684832716283019655932542976 x2216) (>= 1461501637330902918203684832716283019655932542975 x2216) (= (< 0 x3512) x508) (= (x2102 (- x4078 x2216)) x3512)) x28) (and (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x3271) (not (= x1429 0)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x673 x681)) x3656) (>= x3271 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x681 x3209)) (= (x269 (x4732 x4197)) x3209) (= (x4728 1461501637330902918203684832716283019655932542975 x986) x4197) (= x1429 (x1507 (x4732 x4197))) (= (= x234 x4197) x3174) (= x1733 4) (= x49 (x4034 (+ 4 x781))) (> 4294967296 x694) (= (x4034 (+ x3209 x681)) x1473) (= (- x140 x681) x1235) x3952 (= x4286 (x1507 (x4732 x3271))) (not (= x4286 0)) (= (x3455 (x4732 x4197)) x673) (= x3952 (<= x681 x3031)) x3656 (= x3031 (x3455 (x4732 x2827))) (> 1461501637330902918203684832716283019655932542976 x3271) (= (x3455 (x4732 x2827)) x140)) (not x508)) (and (=> (and x3174 (and (= x4285 (= 0 x681)) (= x1733 x3897) (= x3897 4) (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x1471) (< 0 x162) (= x162 (x1507 (x4732 x234))))) (and (=> (and x4285 (and (not (> 988262939 x2842)) (>= x2441 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2370) (not (= 1038142104 x2842)) (< x2842 2217467699) (= (x3800 (x4732 x2827) (x3454 6) 0) x3623) (<= x2441 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3067 (x3800 (x4732 x2827) (x3454 6) 0)) (<= 0 x2370) (not (= x2842 988262939)) (> 1856199391 x2842) (= (x968 x3623) x2370) (not (= 989455977 x2842)) (= x64 (> x2441 x2370)) (not (> 4 x3897)) (= x2842 1313710058) (= x2441 (x968 x3067)))) (and (=> (and (= x2758 x787) x64) x4011) (=> (and (not x64) (and (= (> x787 x2776) x834) (= x2776 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2441))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x787) (>= x787 0) (= x1038 (x2102 (- x2370 x2441))))) (and (=> (and (= x2758 x787) x834) x4011) (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x2905) (= 128 x1334) (= x1375 (x4034 (+ x787 x2441))) (<= 0 x2905) (> 1461501637330902918203684832716283019655932542976 x2905) (= x4679 (= x266 x2905)) (= (x4034 (+ x787 x2441)) x4636)) (not x834)) (and (=> (and (= (= x234 x2905) x4099) (not x4679)) (and (=> (and (= x3849 (= x2905 x515)) (not x4099)) (and (=> (and (and (and (and (= x2035 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1957) (and (= true (<= x1957 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x1957)))) (= x4167 100) (< x1192 988262939) (= 599290589 x1192) (not (< x4167 4)) (= (x1507 (x4732 x3180)) x171) (= x4185 x234) (not (> 405663989 x1192)) (= x2827 x3563) (> 2217467699 x1192) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x908) (not (= 405663989 x1192)) (= x2941 x2441) (= x4167 100) (> x171 0) (not (= 547091486 x1192)) (= (x2102 (- x4167 4)) x1957)) x4678) (= (= x3180 x2905) x4678)) (not x3849)) (and (=> (and (not x2035) (and (= x3563 x484) (= x4121 (= x2827 x3563)))) (and (=> (and x4121 (and (= x1187 (= x4185 x234)) (= x256 x4185))) (and (=> (and (and (= x2941 x3924) (= x4857 (x2719 x2192)) (= (x3800 (x4732 x3563) (x3454 5) 0) x2192) (>= x4857 0) (<= x4857 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3973 (< x4857 x2441))) x1187) (and (=> x3973 x1478) (=> (and (and (= x2151 (x3800 (x4732 x3563) (x3454 5) 0)) (>= x3812 0) (= x3812 (x2719 x2151)) (= x3487 (< x3812 x2941)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3812)) (not x3973)) (and (=> (and (not x3487) (and (= (x3800 (x4732 x4185) (x3454 5) 0) x1894) (= (x188 x1894) x4346) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2941)) x2133) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4346) (<= 0 x4346) (= x332 (> x4346 x2133)) (= x1337 (x2102 (- x3812 x2941))))) (and (=> (and (and (= 32 x1379) (= 1 x1387) (= x1738 (x4034 (+ x2941 x4346))) (= x1087 1)) (not x332)) x2341) (=> x332 x1478))) (=> x3487 x1478))))) (=> (not x1187) x1478))) (=> (not x4121) x1478))) (=> x2035 x1478))) (=> (and x3849 (and (not (> 4 x1638)) (= x1449 x2441) (not (= x1575 405663989)) (not (> 405663989 x1575)) (> 988262939 x1575) (= 100 x1638) (not (= 547091486 x1575)) (= x1839 (or (> x2465 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x2465 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2465 96)))) (= x3704 x2827) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1556) (> x4205 0) (= x1575 599290589) (< x1575 2217467699) (= (x1507 (x4732 x515)) x4205) (= x234 x4438) (= (x2102 (- x1638 4)) x2465) (= 100 x1638))) (and (=> (and (not x1839) (and (= x479 x3704) (= (= x2827 x3704) x4616))) (and (=> (and (and (= x2118 x4438) (= x2947 (= x4438 x234))) x4616) (and (=> (and x2947 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2418) (= x4861 x1449) (= (x3800 (x4732 x3704) (x3454 5) 0) x1011) (= (x4660 x1011) x2418) (= (> x2441 x2418) x4897) (<= 0 x2418))) (and (=> x4897 x4018) (=> (and (and (= (x3800 (x4732 x3704) (x3454 5) 0) x4023) (<= 0 x1983) (<= x1983 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1255 (< x1983 x1449)) (= (x4660 x4023) x1983)) (not x4897)) (and (=> (and (not x1255) (and (<= x4843 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1725 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1449))) (= x793 (x2102 (- x1983 x1449))) (>= x4843 0) (= x4843 (x1040 x4712)) (= (x3800 (x4732 x4438) (x3454 5) 0) x4712) (= x4563 (< x1725 x4843)))) (and (=> (and (and (= (x4034 (+ x1449 x4843)) x2439) (= 32 x3956) (= 1 x2727) (= x3377 1)) (not x4563)) x1481) (=> x4563 x4018))) (=> x1255 x4018))))) (=> (not x2947) x4018))) (=> (not x4616) x4018))) (=> x1839 x4018))))) (=> (and x4099 (and (not (= x1124 547091486)) (= x3224 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 405663989 x1124)) (= x2827 x2913) (= 599290589 x1124) (< x1124 988262939) (= 100 x1220) (< x1124 2217467699) (= x4430 (x2102 (- x1220 4))) (= x1428 x234) (< 0 x4156) (not (> 4 x1220)) (not (= 405663989 x1124)) (= x374 (or (and (> 96 x4430) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4430))) (> x4430 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2441 x3525) (= x1220 100) (= x4156 (x1507 (x4732 x234))))) (and (=> x374 x2002) (=> (and (not x374) (and (= (= x2827 x2913) x621) (= x2913 x1767))) (and (=> (not x621) x2002) (=> (and x621 (and (= (= x234 x1428) x2199) (= x1428 x744))) (and (=> (and (and (= x3525 x3416) (= x2238 (x740 x3903)) (<= 0 x2238) (<= x2238 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x2441 x2238) x382) (= (x3800 (x4732 x2913) (x3454 5) 0) x3903)) x2199) (and (=> x382 x2002) (=> (and (not x382) (and (= (< x562 x3525) x1372) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x562) (= (x740 x2869) x562) (<= 0 x562) (= (x3800 (x4732 x2913) (x3454 5) 0) x2869))) (and (=> (and (not x1372) (and (= x576 (x4464 x2259)) (= (< x4437 x576) x2641) (= x2259 (x3800 (x4732 x1428) (x3454 5) 0)) (= x141 (x2102 (- x562 x3525))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x576) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3525)) x4437) (<= 0 x576))) (and (=> x2641 x2002) (=> (and (not x2641) (and (= x2825 1) (= x3822 32) (= x3708 1) (= (x4034 (+ x576 x3525)) x4005))) x2700))) (=> x1372 x2002))))) (=> (not x2199) x2002))))))))) (=> (and (and (= (or (and (= true (<= x17 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x17 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x17)) x296) (not (> 4 x4100)) (= x17 (x2102 (- x4100 4))) (= x4100 100) (< 0 x3317) (= x234 x813) (= x1371 x2441) (= 100 x4100) (> 1466279372 x2233) (= x2325 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (x1507 (x4732 x266)) x3317) (= x2233 599290589) (not (> 599290589 x2233)) (= x3574 x2827)) x4679) (and (=> x296 x259) (=> (and (and (= x3574 x232) (= (= x3574 x2827) x4719)) (not x296)) (and (=> (and x4719 (and (= x2804 (= x813 x234)) (= x813 x3522))) (and (=> (and x2804 (and (>= x138 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x138) (= (> x2441 x138) x4809) (= x138 (x4320 x2378)) (= x2378 (x3800 (x4732 x3574) (x3454 1) 0)) (= x1371 x3657))) (and (=> x4809 x259) (=> (and (= (< x138 x1371) x1000) (not x4809)) (and (=> (and (and (>= x447 0) (= x447 (x3799 x3127)) (= x243 (x3800 (x4732 x3574) (x3454 1) 0)) (= x3127 (x3800 (x4732 x813) (x3454 1) 0)) (= (x2102 (- x138 x1371)) x2276) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1371)) x2833) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x447) (= x2581 (< x2833 x447))) (not x1000)) (and (=> (and (and (= x2467 (x4034 (+ x447 x1371))) (= (< x2467 x447) x4607)) (not x2581)) (and (=> x4607 x259) (=> (and (not x4607) (and (<= x477 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3375 (x3800 (x4732 x3574) (x3454 2) 0)) (= (x3800 (x4732 x234) x3375 0) x4599) (= (x3800 (x4732 x813) (x3454 1) 0) x907) (>= x477 0) (= (< x477 x1371) x142) (= x477 (x2720 x4599)))) (and (=> x142 x259) (=> (and (not x142) (= (> x1371 x477) x2193)) (and (=> x2193 x259) (=> (and (not x2193) (and (= (x2102 (- x477 x1371)) x1455) (= 32 x2184) (= x2303 1) (= (x3800 (x4732 x234) x1951 0) x3942) (= (x3800 (x4732 x3574) (x3454 2) 0) x1951))) x1548))))))) (=> x2581 x259))) (=> x1000 x259))))) (=> (not x2804) x259))) (=> (not x4719) x259))))))))))) (=> (and (= x2758 x787) (not x4285)) x4011))) (=> (and (= (= x4197 x515) x3260) (not x3174)) (and (=> (and x3260 (and (= x4394 4) (= x706 (x1507 (x4732 x515))) (= x4394 x1733) (< 0 x706) (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x584) (= (= 0 x681) x3128))) (and (=> (and (not x3128) (= x756 x2)) x4392) (=> (and (and (not (< x4394 4)) (not (= 988262939 x391)) (= (< x3557 x2321) x3530) (= x2321 (x1212 x2826)) (= 1313710058 x391) (not (= 989455977 x391)) (<= 0 x3557) (= (x3800 (x4732 x2827) (x3454 6) 0) x2826) (not (= x391 1038142104)) (> 1856199391 x391) (> 2217467699 x391) (= x3557 (x1212 x635)) (not (> 988262939 x391)) (<= 0 x2321) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3557) (= x635 (x3800 (x4732 x2827) (x3454 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2321)) x3128) (and (=> (and (not x3530) (and (<= x756 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2556 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2321))) (<= 0 x756) (= (< x2556 x756) x1677) (= (x2102 (- x3557 x2321)) x151))) (and (=> (and (= x2 x756) x1677) x4392) (=> (and (not x1677) (and (= (= x266 x2474) x4443) (= 128 x2027) (= (x4034 (+ x756 x2321)) x4513) (>= 1461501637330902918203684832716283019655932542975 x2474) (> 1461501637330902918203684832716283019655932542976 x2474) (<= 0 x2474) (= x1261 (x4034 (+ x2321 x756))))) (and (=> (and (not x4443) (= (= x2474 x234) x3761)) (and (=> (and (= x2266 (= x515 x2474)) (not x3761)) (and (=> (and (not x2266) (and (= x3811 (= x2474 x3180)) (and (and (= (x2102 (- x4747 4)) x4819) (not (< x4189 405663989)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x875) (> 988262939 x4189) (= x4747 100) (not (> 4 x4747)) (> x262 0) (not (= 547091486 x4189)) (= x816 x2321) (= 599290589 x4189) (= x457 x515) (= x262 (x1507 (x4732 x3180))) (= x1004 x2827) (not (= 405663989 x4189)) (= 100 x4747) (< x4189 2217467699) (= (or (and (< x4819 96) (= true (<= x4819 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4819)) x2901)) x3811))) (and (=> (and (not x2901) (and (= x2779 x1004) (= (= x2827 x1004) x1868))) (and (=> (not x1868) x2410) (=> (and (and (= x4626 x457) (= (= x515 x457) x1760)) x1868) (and (=> (not x1760) x2410) (=> (and (and (= (< x1097 x2321) x260) (= (x2719 x2610) x1097) (>= x1097 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1097) (= x2610 (x3800 (x4732 x1004) (x3454 5) 0)) (= x4061 x816)) x1760) (and (=> x260 x2410) (=> (and (not x260) (and (<= x292 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x292) (= (> x816 x292) x3012) (= (x3800 (x4732 x1004) (x3454 5) 0) x2272) (= (x2719 x2272) x292))) (and (=> x3012 x2410) (=> (and (and (>= x3702 0) (= x3418 (x2102 (- x292 x816))) (= x3702 (x3971 x3827)) (= x3827 (x3800 (x4732 x457) (x3454 5) 0)) (<= x3702 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x816)) x3564) (= (< x3564 x3702) x602)) (not x3012)) (and (=> (and (and (= x2591 1) (= 1 x3650) (= x3757 (x4034 (+ x816 x3702))) (= 32 x213)) (not x602)) x2357) (=> x602 x2410))))))))))) (=> x2901 x2410))) (=> (and (and (= x3119 (x1507 (x4732 x515))) (= x2592 100) (not (= 405663989 x597)) (= x597 599290589) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3718) true) (< x3718 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3718)) x1173) (= x76 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (< x597 405663989)) (> 2217467699 x597) (= x1091 x515) (> x3119 0) (= x2827 x3382) (= x2106 x2321) (< x597 988262939) (= x3718 (x2102 (- x2592 4))) (not (> 4 x2592)) (not (= 547091486 x597)) (= 100 x2592)) x2266) (and (=> (and (not x1173) (and (= x1358 (= x2827 x3382)) (= x3382 x4581))) (and (=> (not x1358) x2063) (=> (and x1358 (and (= (= x515 x1091) x2526) (= x2803 x1091))) (and (=> (not x2526) x2063) (=> (and x2526 (and (= (x4660 x3742) x3846) (= x555 x2106) (= x3742 (x3800 (x4732 x3382) (x3454 5) 0)) (= (> x2321 x3846) x3537) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3846) (<= 0 x3846))) (and (=> (and (not x3537) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1129) (<= 0 x1129) (= x2928 (x3800 (x4732 x3382) (x3454 5) 0)) (= x4231 (> x2106 x1129)) (= x1129 (x4660 x2928)))) (and (=> x4231 x2063) (=> (and (not x4231) (and (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2106)) x836) (= (x3800 (x4732 x1091) (x3454 5) 0) x1671) (= x2586 (x2102 (- x1129 x2106))) (= (> x2230 x836) x1390) (>= x2230 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2230) (= (x2989 x1671) x2230))) (and (=> x1390 x2063) (=> (and (and (= 1 x2806) (= x3778 32) (= 1 x843) (= (x4034 (+ x2106 x2230)) x1462)) (not x1390)) x2280))))) (=> x3537 x2063))))))) (=> x1173 x2063))))) (=> (and x3761 (and (= x1960 x2321) (= x2856 (or (> x1167 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1167 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x1167)))) (= 599290589 x943) (= x361 (x1507 (x4732 x234))) (not (= x943 547091486)) (not (< x943 405663989)) (= 100 x1389) (> x361 0) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1196) (not (< x1389 4)) (not (= 405663989 x943)) (= x800 x515) (= x2126 x2827) (= 100 x1389) (< x943 988262939) (= (x2102 (- x1389 4)) x1167) (> 2217467699 x943))) (and (=> x2856 x4703) (=> (and (not x2856) (and (= x2126 x2649) (= (= x2827 x2126) x3104))) (and (=> (not x3104) x4703) (=> (and x3104 (and (= x800 x3524) (= (= x515 x800) x480))) (and (=> (and x480 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3442) (= x846 x1960) (= (> x2321 x3442) x3238) (= x2351 (x3800 (x4732 x2126) (x3454 5) 0)) (= x3442 (x740 x2351)) (>= x3442 0))) (and (=> x3238 x4703) (=> (and (not x3238) (and (= x2732 (x3800 (x4732 x2126) (x3454 5) 0)) (<= x339 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x740 x2732) x339) (<= 0 x339) (= x3633 (< x339 x1960)))) (and (=> x3633 x4703) (=> (and (not x3633) (and (= x1185 (< x950 x2042)) (= x2087 (x2102 (- x339 x1960))) (= x2042 (x2225 x80)) (= (x3800 (x4732 x800) (x3454 5) 0) x80) (<= x2042 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2042 0) (= x950 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1960))))) (and (=> x1185 x4703) (=> (and (and (= x2160 32) (= x4832 1) (= x241 (x4034 (+ x1960 x2042))) (= x4222 1)) (not x1185)) x2008))))))) (=> (not x480) x4703))))))))) (=> (and x4443 (and (= x1739 x2827) (> 1466279372 x1541) (not (> 599290589 x1541)) (not (< x4267 4)) (< 0 x103) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x634) (= x1541 599290589) (= x4267 100) (= x515 x1974) (= (x1507 (x4732 x266)) x103) (= 100 x4267) (= (x2102 (- x4267 4)) x106) (= x18 x2321) (= (or (and (> 96 x106) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x106))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x106)) x4283))) (and (=> x4283 x4705) (=> (and (not x4283) (and (= x2175 (= x2827 x1739)) (= x2728 x1739))) (and (=> (not x2175) x4705) (=> (and (and (= x1974 x3804) (= (= x1974 x515) x4055)) x2175) (and (=> (not x4055) x4705) (=> (and (and (= x4032 (x4320 x553)) (= x2636 (> x2321 x4032)) (= x553 (x3800 (x4732 x1739) (x3454 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4032) (>= x4032 0) (= x18 x1940)) x4055) (and (=> x2636 x4705) (=> (and (= (> x18 x4032) x1551) (not x2636)) (and (=> x1551 x4705) (=> (and (and (<= x3071 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2102 (- x4032 x18)) x1447) (= (> x3071 x2444) x1176) (= x2444 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x18))) (= (x2328 x1483) x3071) (<= 0 x3071) (= (x3800 (x4732 x1739) (x3454 1) 0) x2966) (= x1483 (x3800 (x4732 x1974) (x3454 1) 0))) (not x1551)) (and (=> x1176 x4705) (=> (and (not x1176) (and (= (> x3071 x3325) x2506) (= x3325 (x4034 (+ x3071 x18))))) (and (=> (and (and (= (x3800 (x4732 x1974) (x3454 1) 0) x4006) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1053) (= (x2720 x1249) x1053) (= (x3800 (x4732 x515) x4520 0) x1249) (= (x3800 (x4732 x1739) (x3454 2) 0) x4520) (<= 0 x1053) (= (> x18 x1053) x102)) (not x2506)) (and (=> (and (not x102) (= x3758 (> x18 x1053))) (and (=> x3758 x4705) (=> (and (and (= x2085 (x3800 (x4732 x1739) (x3454 2) 0)) (= x2585 1) (= x1811 (x2102 (- x1053 x18))) (= x4744 (x3800 (x4732 x515) x2085 0)) (= x1201 32)) (not x3758)) x1732))) (=> x102 x4705))) (=> x2506 x4705))))))))))))))))))) (=> (and (= x2 x756) x3530) x4392))))) (=> (and (and (= (= x3180 x4197) x52) (and (and (= (x1507 (x4732 x3180)) x1007) (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x1467) (= x4243 x1733) (= (= x681 0) x4866) (> x1007 0) (= x4243 4)) x52)) (not x3260)) (and (=> (and (= x3227 x2459) (not x4866)) x2626) (=> (and (and (not (= 989455977 x4718)) (= x2097 (x3800 (x4732 x2827) (x3454 6) 0)) (= x375 (x2487 x4427)) (< x4718 1856199391) (< x4718 2217467699) (not (= 988262939 x4718)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x375) (= x1232 (x2487 x2097)) (not (= 1038142104 x4718)) (= x2537 (< x1232 x375)) (>= x375 0) (= x4427 (x3800 (x4732 x2827) (x3454 6) 0)) (>= x1232 0) (= 1313710058 x4718) (not (< x4243 4)) (not (> 988262939 x4718)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1232)) x4866) (and (=> (and (not x2537) (and (= (< x1046 x3227) x769) (= x1046 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x375))) (<= x3227 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3227) (= x3584 (x2102 (- x1232 x375))))) (and (=> (and (not x769) (and (= (x4034 (+ x375 x3227)) x4874) (= (= x2502 x266) x3303) (= x3277 128) (>= x2502 0) (= x4541 (x4034 (+ x375 x3227))) (< x2502 1461501637330902918203684832716283019655932542976) (<= x2502 1461501637330902918203684832716283019655932542975))) (and (=> (and x3303 (and (= 100 x4043) (> 1466279372 x4327) (not (> 599290589 x4327)) (= x4043 100) (= (x2102 (- x4043 4)) x2476) (= x3600 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2476) (and (= (<= x2476 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2476 96)))) (not (> 4 x4043)) (> x3586 0) (= x524 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x1287 x3180) (= (x1507 (x4732 x266)) x3586) (= x2827 x1416) (= 599290589 x4327) (= x375 x2113))) (and (=> x3600 x3866) (=> (and (and (= x2397 x1416) (= (= x1416 x2827) x4116)) (not x3600)) (and (=> (not x4116) x3866) (=> (and x4116 (and (= x2142 x1287) (= (= x3180 x1287) x2897))) (and (=> (and x2897 (and (= (x3800 (x4732 x1416) (x3454 1) 0) x2854) (= (< x3803 x375) x4797) (<= x3803 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3803 0) (= x2113 x2268) (= (x4320 x2854) x3803))) (and (=> x4797 x3866) (=> (and (not x4797) (= x3376 (> x2113 x3803))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4898) (>= x4898 0) (= (x3731 x3764) x4898) (= (x3800 (x4732 x1287) (x3454 1) 0) x3764) (= (> x4898 x1163) x2059) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2113)) x1163) (= x3668 (x2102 (- x3803 x2113))) (= x3300 (x3800 (x4732 x1416) (x3454 1) 0))) (not x3376)) (and (=> x2059 x3866) (=> (and (and (= x23 (x4034 (+ x2113 x4898))) (= (> x4898 x23) x1728)) (not x2059)) (and (=> x1728 x3866) (=> (and (and (= x567 (x3800 (x4732 x1416) (x3454 2) 0)) (>= x4260 0) (<= x4260 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x343 (< x4260 x2113)) (= (x3800 (x4732 x3180) x567 0) x3464) (= x3281 (x3800 (x4732 x1287) (x3454 1) 0)) (= (x2720 x3464) x4260)) (not x1728)) (and (=> (and (not x343) (= (< x4260 x2113) x882)) (and (=> x882 x3866) (=> (and (and (= (x3800 (x4732 x1416) (x3454 2) 0) x3980) (= 1 x2242) (= x1846 (x3800 (x4732 x3180) x3980 0)) (= x245 32) (= x2430 (x2102 (- x4260 x2113)))) (not x882)) x1162))) (=> x343 x3866))))))) (=> x3376 x3866))))) (=> (not x2897) x3866))))))) (=> (and (not x3303) (= x2900 (= x234 x2502))) (and (=> (and (and (> 988262939 x2529) (not (> 405663989 x2529)) (= x4623 (x1507 (x4732 x234))) (= x3255 (or (and (= (<= x4325 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x4325 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4325))) (= 100 x1965) (= x3391 x2827) (< x2529 2217467699) (= x2314 x375) (not (= 405663989 x2529)) (= x3180 x4792) (= x4500 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 100 x1965) (< 0 x4623) (not (< x1965 4)) (= 599290589 x2529) (not (= 547091486 x2529)) (= x4325 (x2102 (- x1965 4)))) x2900) (and (=> (and (and (= x814 (= x2827 x3391)) (= x4922 x3391)) (not x3255)) (and (=> (and x814 (and (= x2335 x4792) (= (= x3180 x4792) x1672))) (and (=> (not x1672) x4492) (=> (and x1672 (and (= x2314 x26) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2686) (= x2686 (x740 x2982)) (= (x3800 (x4732 x3391) (x3454 5) 0) x2982) (= x1892 (> x375 x2686)) (<= 0 x2686))) (and (=> (and (not x1892) (and (= (x740 x1826) x4756) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4756) (= x1826 (x3800 (x4732 x3391) (x3454 5) 0)) (= x4572 (< x4756 x2314)) (>= x4756 0))) (and (=> (and (and (= (x3800 (x4732 x4792) (x3454 5) 0) x672) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2314)) x2040) (>= x3868 0) (<= x3868 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3868 (x2917 x672)) (= (x2102 (- x4756 x2314)) x4203) (= x3547 (< x2040 x3868))) (not x4572)) (and (=> (and (and (= x3459 1) (= x1896 32) (= (x4034 (+ x3868 x2314)) x2965) (= 1 x3872)) (not x3547)) x4234) (=> x3547 x4492))) (=> x4572 x4492))) (=> x1892 x4492))))) (=> (not x814) x4492))) (=> x3255 x4492))) (=> (and (= x4176 (= x515 x2502)) (not x2900)) (and (=> (and x4176 (and (> 988262939 x4764) (< x4764 2217467699) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x662) (= (or (and (< x1136 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1136))) (> x1136 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x511) (= x2016 (x1507 (x4732 x515))) (not (= x4764 547091486)) (= x1136 (x2102 (- x732 4))) (> x2016 0) (= x4764 599290589) (not (= x4764 405663989)) (not (< x732 4)) (not (< x4764 405663989)) (= x4152 x3180) (= 100 x732) (= 100 x732) (= x2827 x468) (= x554 x375))) (and (=> (and (not x511) (and (= x4685 x468) (= x2208 (= x2827 x468)))) (and (=> (not x2208) x3488) (=> (and (and (= x4152 x156) (= x3399 (= x3180 x4152))) x2208) (and (=> (not x3399) x3488) (=> (and x3399 (and (= (x3800 (x4732 x468) (x3454 5) 0) x2921) (= x1293 (x4660 x2921)) (= x554 x1585) (>= x1293 0) (= x518 (> x375 x1293)) (<= x1293 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (= x337 (x4660 x2068)) (= (< x337 x554) x1530) (<= 0 x337) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x337) (= x2068 (x3800 (x4732 x468) (x3454 5) 0))) (not x518)) (and (=> (and (and (>= x1552 0) (<= x1552 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4864 (x3800 (x4732 x4152) (x3454 5) 0)) (= x1552 (x320 x4864)) (= x4584 (< x3179 x1552)) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x554)) x3179) (= (x2102 (- x337 x554)) x4489)) (not x1530)) (and (=> x4584 x3488) (=> (and (and (= 32 x3783) (= 1 x933) (= (x4034 (+ x554 x1552)) x3417) (= x2576 1)) (not x4584)) x2630))) (=> x1530 x3488))) (=> x518 x3488))))))) (=> x511 x3488))) (=> (and (not x4176) (and (= (= x2502 x3180) x3261) (and x3261 (and (= x375 x3961) (= x2839 100) (= (or (and (< x3578 96) (= true (<= x3578 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3578)) x2200) (< x595 988262939) (not (= 547091486 x595)) (not (> 4 x2839)) (= 599290589 x595) (= 100 x2839) (< 0 x2174) (= x418 x2827) (not (> 405663989 x595)) (not (= x595 405663989)) (= x4909 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3421 x3180) (> 2217467699 x595) (= x3578 (x2102 (- x2839 4))) (= (x1507 (x4732 x3180)) x2174))))) (and (=> (and (not x2200) (and (= x789 (= x418 x2827)) (= x418 x4851))) (and (=> (not x789) x1782) (=> (and x789 (and (= x1953 x3421) (= (= x3180 x3421) x3672))) (and (=> (and x3672 (and (= x4382 (< x2243 x375)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2243) (>= x2243 0) (= (x2719 x1745) x2243) (= x3961 x2423) (= (x3800 (x4732 x418) (x3454 5) 0) x1745))) (and (=> (and (and (= (x2719 x2726) x1523) (= x4353 (> x3961 x1523)) (= x2726 (x3800 (x4732 x418) (x3454 5) 0)) (>= x1523 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1523)) (not x4382)) (and (=> (and (not x4353) (and (= x4700 (x2102 (- x1523 x3961))) (= x935 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3961))) (= x1131 (x2596 x3529)) (<= x1131 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1131) (= (> x1131 x935) x4790) (= x3529 (x3800 (x4732 x3421) (x3454 5) 0)))) (and (=> (and (and (= x1626 1) (= (x4034 (+ x3961 x1131)) x4211) (= x2300 32) (= 1 x3760)) (not x4790)) x3970) (=> x4790 x1782))) (=> x4353 x1782))) (=> x4382 x1782))) (=> (not x3672) x1782))))) (=> x2200 x1782))))))))) (=> (and (= x3227 x2459) x769) x2626))) (=> (and (= x2459 x3227) x2537) x2626))))))))) (=> (and (and (and x859 (and (< x2088 599290589) (< 0 x326) (= x901 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= x2702 x4711) (= x2052 (x2102 (- x1059 4))) (= x2088 157198259) (not (> 4 x1059)) (< x2088 1466279372) (= (or (> x2052 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2052 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2052) true))) x4610) (not (= x2088 117300739)) (= x1059 68) (= x681 x149) (= (x1507 (x4732 x266)) x326))) (and (= x859 (= x266 x2906)) (= x2899 (x4034 (+ 4 x781))) (= x4672 (x4034 (+ 32 x2899))))) x508) (and (=> x4610 x2209) (=> (and (and (= x101 (x4728 1461501637330902918203684832716283019655932542975 x2702)) (= x1946 (= x2702 x101))) (not x4610)) (and (=> (and x1946 (and (= x4284 (x3800 (x4732 x2827) (x3454 2) 0)) (= (x3800 (x4732 x1911) x4284 0) x2302) (= 1 x3016) (= x145 32) (= x2782 x149) (= x1911 (x4728 1461501637330902918203684832716283019655932542975 x4711)))) x4183) (=> (not x1946) x2209))))))))) x3499))
(assert (x360 x3339))
(assert (x360 x2557))
(assert (= x3735 (=> (= (< 0 x676) x4704) (and (=> (and x4704 (and (or (and (= x2491 x225) (not x225)) (and (and (= x226 (x3243 x2412 2)) (<= 0 x2707) (= x2491 (not x4426)) (= x4426 (> x676 x2707)) (<= x2707 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2412 (x3800 (x4732 x3153) x1263 0)) (= x2707 (x3710 x226))) x225)) (and (= x3267 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (= (x3710 x236) x3139) (not (= 0 x3267)) (>= x2348 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3139) (= (x4728 1461501637330902918203684832716283019655932542975 x1332) x2845) (< x3153 1461501637330902918203684832716283019655932542976) (= (x3243 x3381 2) x236) (<= x2348 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3381 (x3800 (x4732 x2845) x1263 0)) (= (x3243 x1263 1) x3408) (= x225 (ite (< 0 x2348) (not (= 0 x3153)) (< 0 x2348))) (>= 1461501637330902918203684832716283019655932542975 x3153) (<= 0 x3153) (= (x2533 x3408) x3153) (= x3139 0) (>= x3139 0)))) x4310) (=> (not x4704) x2640)))))
(assert (x3745 x1426 x4674 x1426 x1806))
(assert (= x3215 (and (not x1211) x2058)))
(assert (= (x1877 (x3243 x3813 2)) (+ (x1877 x3813) 2)))
(assert (= (x1877 (x4732 x835)) x835))
(assert (= x1536 (and x2406 x1874)))
(assert (= (and (not x4647) x751) x2039))
(assert (= (or x4259 x1718) x2940))
(assert (x360 x16))
(assert (x4715 x3016))
(assert (x360 x3116))
(assert (x360 x2699))
(assert (x360 x138))
(assert (= (and x863 x1336) x494))
(assert (= x2490 (and x884 x1931)))
(assert (x360 x3559))
(assert (= (or (and (not x682) x500) x4142) x810))
(assert (= (and x737 x1600) x541))
(assert (= x362 (and x842 x1977)))
(assert (x360 x1816))
(assert (x4300 x818))
(assert (x360 x1721))
(assert (x360 x1327))
(assert (= (or x22 x1881 x1697 x856 x3955 x3356 x341 x803 x4429) x4295))
(assert (x360 x3224))
(assert (x360 x2349))
(assert (x360 x3034))
(assert (= (or x4206 x4676 x423 x1943) x583))
(assert (x360 x422))
(assert (x360 x2009))
(assert (x360 x895))
(assert (and (x4019 x1179 1000000000000000000) (=> (and (> 1000000000000000000 0) (> x1179 0)) (and (<= (* 1000000000000000000 (x3413 x1179 1000000000000000000)) x1179) (< (- x1179 1000000000000000000) (* 1000000000000000000 (x3413 x1179 1000000000000000000))))) (x3763 x1179 1000000000000000000) (x1905 x1179 1000000000000000000) (x3469 x1179 1000000000000000000)))
(assert (x360 x1274))
(assert (= (x1877 (x4732 x5)) x5))
(assert (x360 x1023))
(assert (= (and (not x4302) x2729) x242))
(assert (x360 x3139))
(assert (= (and x3519 x1255) x1333))
(assert (x360 x375))
(assert (x360 x1312))
(assert (x360 x103))
(assert (x360 x3075))
(assert (x360 x3330))
(assert (= x3229 (and x2195 x788)))
(assert (x360 x361))
(assert (and (x877 x4145 1461501637330902918203684832716283019655932542976) (x345 x4145 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x4145 (+ (x2968 x4145 1461501637330902918203684832716283019655932542976) (* (x3413 x4145 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x4363 x4145 1461501637330902918203684832716283019655932542976)))
(assert (x360 x267))
(assert (= x1907 (and x1382 x2431)))
(assert (x360 x1626))
(assert (= x3534 (or x930 x886)))
(assert (x360 x1435))
(assert (= x1177 (and x2786 (not x2257))))
(assert (= x4009 (and (not x2636) x4733)))
(assert (= x2237 (or x4810 x2910)))
(assert (x360 x4178))
(assert (x4300 x3391))
(assert (= (=> (and (= x2919 x2585) (= x4854 x1201)) x1956) x1732))
(assert (= (or x2284 x4779) x4560))
(assert (= (and (not x4101) x1964) x4447))
(assert (= (x1877 (x3243 x122 1)) (+ (x1877 x122) 1)))
(assert (x360 x2226))
(assert (= (and x4446 x2544) x1789))
(assert (= x2098 (=> (and (= (= x2513 0) x2228) (or (and (and (= x1948 x2513) (= (x1724 (x4732 x2827)) x68) (= (x4034 (+ x1159 x68)) x2231) (< (+ x1159 x68) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1159 (ite (= x2513 0) x681 0)) (= x4322 (- x4095 x1159)) (= x4095 (x1605 (x4732 x4197)))) x2228) (and (not x2228) (= x2513 x1948)))) x331)))
(assert (x360 x596))
(assert (x360 x699))
(assert (x4300 x2808))
(assert (x2915 x2460))
(assert (x360 x1412))
(assert (= (and (not x3027) x4702) x2164))
(assert (x2835 x1353))
(assert (= (and x1504 x911) x1019))
(assert (= x4132 (or x3549 x187)))
(assert (= (or x3069 x4736) x3631))
(assert (= x230 (and (not x305) x4815)))
(assert (x360 x731))
(assert (= x1590 (and (not x2581) x173)))
(assert (x360 x4541))
(assert (= (and x4157 x587) x1803))
(assert (= (x4732 178855970) (x3454 178855970)))
(assert (= x1247 (and x777 x2200)))
(assert (= x683 (=> (and (= 0 x4307) (= x3820 x1258)) x410)))
(assert (= (and x2282 (not x3811)) x3680))
(assert (x360 x4092))
(assert (x360 x2197))
(assert (x360 x3797))
(assert (= x3003 (or x1928 x3831)))
(assert (= (+ (x1877 x2029) 1) (x1877 (x3243 x2029 1))))
(assert (x360 x1902))
(assert (= (and x2092 x4369) x3135))
(assert (= (and x2616 (not x1176)) x3772))
(assert (x360 x2180))
(assert (x360 x4686))
(assert (= (or x2486 x2018) x4342))
(assert (= x314 (and x2805 x2665)))
(assert (x4300 x4245))
(assert (x360 x141))
(assert (= (x1877 (x3454 2030502250)) 2030502250))
(assert (x360 x4479))
(assert (x360 x1080))
(assert (x2835 (- x1806 x3093)))
(assert (x360 x156))
(assert (x360 x2716))
(assert (= (+ (x1877 x195) 1) (x1877 (x3243 x195 1))))
(assert (= (and x3766 (not x665)) x190))
(assert (= x2111 (and (not x728) x1326)))
(assert (x360 x3317))
(assert (= (x1877 (x3243 x4729 1)) (+ 1 (x1877 x4729))))
(assert (x360 x2441))
(assert (x360 x4262))
(assert (x360 x4571))
(assert (x360 x3968))
(assert (=> (>= 10000 x1419) (= (x4732 x1419) (x3454 x1419))))
(assert (= (and x2852 (not x2911)) x3688))
(assert (= x60 (x1877 (x4732 x60))))
(assert (x360 x1963))
(assert (x360 x2242))
(assert (= (and (=> (and (not x2491) (and (= x3153 x2179) (= x4546 0))) x545) (=> (and x2491 (and (or (and (not x2065) (= x2065 x4052)) (and x2065 (and (<= x3461 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1597 (x3800 (x4732 x1698) x1263 0)) (= (x3710 x1932) x3461) (= (x3243 x1597 2) x1932) (= (> x676 x3461) x2953) (<= 0 x3461) (= (not x2953) x4052)))) (and (= (x3191 x1213) x1698) (= (x3243 x1329 1) x1213) (<= x1698 1461501637330902918203684832716283019655932542975) (= (ite (< 1 x2348) (not (= x1698 0)) (< 1 x2348)) x2065) (<= 0 x1698) (= (x3800 (x4732 x3153) x1263 0) x1329) (> 1461501637330902918203684832716283019655932542976 x1698)))) x2932)) x4310))
(assert (= (or x222 x3054 x1310) x1157))
(assert (= x445 (x1877 (x4732 x445))))
(assert (x360 x1178))
(assert (= (and x810 x2752) x559))
(assert (= (and x1758 x814) x2680))
(assert (x360 x210))
(assert (= (and x1861 (not x2535)) x327))
(assert (= x1851 (and x4640 x1713)))
(assert (x360 x4768))
(assert (= (and x1747 x1069) x2031))
(assert (=> (>= 10000 x3508) (= (x4732 x3508) (x3454 x3508))))
(assert (x360 x4372))
(assert (x360 x871))
(assert (= x3754 (and x1268 x240)))
(assert (= (and x1301 x2394) x2606))
(assert (= (x3454 1000000000000000000) (x4732 1000000000000000000)))
(assert (x360 x4140))
(assert (x360 x312))
(assert (= (x1877 (x3243 x2305 2)) (+ (x1877 x2305) 2)))
(assert (= x4261 (x1877 (x4732 x4261))))
(assert (= x3153 (x1877 (x4732 x3153))))
(assert (x360 x2113))
(assert (= (and x3015 (not x1680)) x2931))
(assert (x360 x1664))
(assert (x360 x766))
(assert (= (and x4174 (not x64)) x2608))
(assert (x360 x676))
(assert (= (and x2974 x1047) x2823))
(assert (=> (>= 10000 x2126) (= (x3454 x2126) (x4732 x2126))))
(assert (=> (<= x3695 10000) (= (x4732 x3695) (x3454 x3695))))
(assert (x1107 x3093 (- x633 x4674)))
(assert (x360 x4350))
(assert (= (and x1996 (not x3223)) x394))
(assert (x360 x2375))
(assert (= (and x384 x1564) x614))
(assert (= (and x2923 (not x3651)) x1356))
(assert (not x847))
(assert (= (or x823 x2361) x860))
(assert (x360 x1016))
(assert (x360 x3010))
(assert (= (and x2562 (not x2551)) x2298))
(assert (x360 x1933))
(assert (x360 x3783))
(assert (x360 x4016))
(assert (x360 x2170))
(assert (x360 x2216))
(assert (=> (<= x2350 10000) (= (x4732 x2350) (x3454 x2350))))
(assert (= (x1877 (x4732 x4152)) x4152))
(assert (x360 x272))
(assert (= (x1877 (x4732 x4292)) x4292))
(assert (= x4329 (and (not x885) x1898)))
(assert (= x792 (and x4658 (not x2947))))
(assert (x360 x2908))
(assert (x360 x1264))
(assert (= x2972 (or x2963 x3343)))
(assert (= x3877 (and x4207 x2035)))
(assert (x4715 x2685))
(assert (= (=> (and (= x3853 x1794) (= x163 x947)) x1302) x663))
(assert (x360 x980))
(assert (= x3080 (and x3758 x4619)))
(assert (x360 x1217))
(assert (= x4505 (or (and (not x544) x3770) x3527)))
(assert (= (and x4617 (not x2674)) x4446))
(assert (= x1480 (and x1874 (not x2406))))
(assert (= (x1877 (x3243 x2438 3)) (+ (x1877 x2438) 3)))
(assert (= (or x2573 x3988 x99) x956))
(assert (x360 x4376))
(assert (= x4791 (and x1747 (not x1069))))
(assert (x360 x203))
(assert (= x3333 (and x2604 x3849)))
(assert (x2915 x1324))
(assert (= x3807 (and (not x4414) x2020)))
(assert (x360 x1814))
(assert (x360 x4061))
(assert (= x1830 (x1877 (x4732 x1830))))
(assert (x360 x2592))
(assert (x360 x1642))
(assert (=> (>= 10000 x2457) (= (x3454 x2457) (x4732 x2457))))
(assert (x360 x3377))
(assert (= (=> (and (= x756 x4192) (= x2382 x591) (= x164 x2513) (= x3434 x3227)) x2098) x626))
(assert (x360 x3771))
(assert (= (or x4013 x3518 x109 x2110 x1660 x2369) x4102))
(assert (= x4294 (=> (and (= x3134 0) (= x69 x4873)) x4787)))
(assert (x360 x4833))
(assert (=> (<= x330 10000) (= (x4732 x330) (x3454 x330))))
(assert (x360 x4248))
(assert (x360 x4079))
(assert (= (and x4369 (not x2092)) x2721))
(assert (x360 x4545))
(assert (= x4050 (x1877 (x4732 x4050))))
(assert (x360 x4792))
(assert (x360 x1004))
(assert (= x70 (and x3077 x550)))
(assert (x360 x4124))
(assert (x360 x3263))
(assert (x360 x4015))
(assert (= x4289 (and x4574 (not x3241))))
(assert (x360 x3841))
(assert (x2907 x1806 x1426 x4674 x1426))
(assert (x360 x1181))
(assert (x360 x4379))
(assert (x360 x1179))
(assert (x3745 x3093 x633 x1426 x4674))
(assert (x360 x4892))
(assert (= x3605 (and x2935 (not x2691))))
(assert (x360 x3854))
(assert (= (=> (and (= x4271 0) (= x642 x3841)) x1076) x3167))
(assert (= (+ (x1877 x4106) 1) (x1877 (x3243 x4106 1))))
(assert (x360 x2115))
(assert (x360 x2325))
(assert (=> (>= 10000 x1384) (= (x3454 x1384) (x4732 x1384))))
(assert (= x3536 (and (not x3107) x2081)))
(assert (x360 x4436))
(assert (= x2014 (and x3399 x3036)))
(assert (=> (>= 10000 x986) (= (x4732 x986) (x3454 x986))))
(assert (= x2731 (x1877 (x4732 x2731))))
(assert (x360 x2129))
(assert (= (and x751 x4647) x2165))
(assert (x360 x2382))
(assert (x4715 x1119))
(assert (and (and (= (- (* (- x3945 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3945 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3945 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3945) (- (* x3945 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3945))) (= (x4060 1000000000000000000 (- x3945 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x3945 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x3945 1000000000000000000) (x4060 1000000000000000000 x3945)) (x1520 1000000000000000000 x3945) (x3818 1000000000000000000 x3945) (x3063 1000000000000000000 x3945) (x4067 1000000000000000000 x3945) (x3727 1000000000000000000 x3945)))
(assert (x360 x1010))
(assert (x4715 x2180))
(assert (x360 x601))
(assert (x360 x3755))
(assert (x2835 (- x1426 x4674)))
(assert (x360 x3298))
(assert (x360 x2271))
(assert (x360 x1739))
(assert (= (and (not x1892) x2386) x2186))
(assert (x360 x981))
(assert (= x2466 (and (not x3849) x2604)))
(assert (x360 x1974))
(assert (= (x1877 (x4732 x4723)) x4723))
(assert (x360 x3177))
(assert (x360 x3739))
(assert (= (and x2900 x1433) x4085))
(assert (= x3908 (=> (and (= 0 x2840) (= x3182 x568)) x2227)))
(assert (x360 x24))
(assert (= (or x4042 x4048 x74 x4860 x543 x3026) x4928))
(assert (= x4385 (or x988 x1223)))
(assert (x2835 (- x1426 x1806)))
(assert (= (=> (and (= x4618 0) (= x3953 x3504)) x1085) x1486))
(assert (x360 x818))
(assert (x360 x1572))
(assert (x360 x1915))
(assert (= x324 (and (not x433) x2096)))
(assert (= (or x2623 x2452 x132 x380 x2651 x3423 x3360 x2567 x2846) x4816))
(assert (x360 x3823))
(assert (x360 x2517))
(assert (= (and x2511 x1783) x3934))
(assert (= (x1877 (x3243 x1918 1)) (+ 1 (x1877 x1918))))
(assert (x360 x234))
(assert (=> (>= 10000 x2699) (= (x4732 x2699) (x3454 x2699))))
(assert (= (=> (and (= x2 x1322) (= x1623 0)) x3773) x4392))
(assert (x360 x563))
(assert (= x2511 (and x300 x4529)))
(assert (x360 x3657))
(assert (x3272 x649 x2460))
(assert (= x4591 (and x1326 x728)))
(assert (= x2679 (or x4680 x2629)))
(assert (x360 x674))
(assert (x360 x4151))
(assert (= (=> (and (= (x3800 (x4732 x3030) x4007 0) x1120) (= x2283 (x3243 x1120 1)) (= x3383 (x3243 x2283 1))) x449) x1860))
(assert (x360 x4209))
(assert (= x1399 (=> (and (or x2876 (not x2876)) (= (= 0 x3882) x2876)) x1052)))
(assert (x360 x219))
(assert (x4300 x3704))
(assert (x360 x2405))
(assert (= (or x1451 x205) x918))
(assert (x360 x326))
(assert (x360 x3893))
(assert (x360 x414))
(assert (x4300 x4792))
(assert (= x2126 (x1877 (x4732 x2126))))
(assert (x360 x1852))
(assert (x360 x2976))
(assert (x360 x701))
(assert (x360 x3564))
(assert (x4300 x2255))
(assert (x2907 x3093 x633 x1806 x1426))
(assert (x2915 x2482))
(assert (x360 x2093))
(assert (x360 x2509))
(assert (and (and (= (- (* (- x855 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x855 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x855 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x855) (- (* x855 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x855))) (= (x4060 1000000000000000000 (- x855 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x855 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x855 1000000000000000000) (x4060 1000000000000000000 x855)) (x1520 1000000000000000000 x855) (x3818 1000000000000000000 x855) (x3063 1000000000000000000 x855) (x4067 1000000000000000000 x855) (x3727 1000000000000000000 x855)))
(assert (x360 x813))
(assert (x360 x2033))
(assert (= x1384 (x1877 (x4732 x1384))))
(assert (x360 x1824))
(assert (= x3750 (and (not x4375) x498)))
(assert (x360 x4050))
(assert (= (or x1116 x346) x1077))
(assert (= (and (not x4137) x2114) x1961))
(assert (= x3695 (x1877 (x4732 x3695))))
(assert (and (x877 x3056 32) (x345 x3056 32) (=> (> 32 0) (= x3056 (+ (x2968 x3056 32) (* (x3413 x3056 32) 32)))) (x4363 x3056 32)))
(assert (x360 x1322))
(assert (x360 x1316))
(assert (= (and x2143 x3248) x3151))
(assert (= x1665 (and x4905 (not x2208))))
(assert (= (and x3833 x1358) x1385))
(assert (x360 x4832))
(assert (= (and x1910 x332) x605))
(assert (x360 x4934))
(assert (= (and x2281 (not x4069)) x4415))
(assert (= x4321 (or x1997 x1665 x4565 x4821 x4344 x3993)))
(assert (x360 x1853))
(assert (= (=> (and (or (and (not x3957) (= (x3800 (x4732 x283) x1263 0) x1588)) (and x3957 (= (x3243 x1263 2) x20))) (= (= x283 0) x3957)) x3552) x1355))
(assert (x360 x4118))
(assert (x360 x2274))
(assert (= x1268 (or x506 x3707)))
(assert (x360 x1655))
(assert (x360 x409))
(assert (= x4533 (and x278 x3246)))
(assert (= x3314 (and x2422 x4774)))
(assert (= x3682 (and (not x3495) x4664)))
(assert (x360 x251))
(assert (= x263 (or x3844 x3198)))
(assert (= x4399 (=> (= x4359 (= x460 x42)) (and (=> x4359 x802) (=> (and (= (> x460 0) x785) (not x4359)) (and (=> (and x785 (and (and (= (x191 x450) x2322) (< x1243 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x1850) (not (= x2322 0)) (<= 0 x1243) (<= x1243 1461501637330902918203684832716283019655932542975) (= (x3163 x3245) x1850) (= x450 (x3243 x1281 1)) (= x3245 (x3800 (x4732 x392) x4305 0)) (= x1281 (x3243 x3245 1)) (< x1850 1461501637330902918203684832716283019655932542976) (= x1243 (x2988 x1281)) (= (= 0 x1850) x4840) (<= 0 x2322) (<= x2322 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x392 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (<= 0 x1850)) (or (and (not x4840) (and (= x4213 (x3243 x416 1)) (= x416 (x3800 (x4732 x1850) x4305 0)))) (and (= x1688 (x3243 x4305 1)) x4840)))) x4403) (=> (not x785) x3722)))))))
(assert (= (or x4160 x4289) x928))
(assert (= x3011 (=> (and (= x3256 x1207) (= x3882 x3043)) x1399)))
(assert (x360 x2243))
(assert (x360 x397))
(assert (= (and x1760 x1139) x976))
(assert (= (and x2525 (not x4930)) x2712))
(assert (= x3348 (and x4590 x572)))
(assert (= (x3454 1038142104) (x4732 1038142104)))
(assert (x360 x2702))
(assert (= (x1877 (x3454 26959946667150639794667015087019630673637144422540572481103610249215)) 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= (and (not x4358) x3483) x3082))
(assert (= (=> (= (= 0 x4372) x6) (and (=> (and (not x6) (= x4414 (or (> x2274 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x2274 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x2274))))) (and (=> (and (not x4414) (and (= x4120 1) (= 32 x3715) (= x4151 x4768))) x1650) (=> (and x4414 (= x3116 x4151)) x687))) (=> (and x6 (= x3116 x4151)) x687))) x2408))
(assert (= (and (not x4121) x4468) x1084))
(assert (x360 x1245))
(assert (x360 x2984))
(assert (x360 x1391))
(assert (= (x1877 (x4732 x392)) x392))
(assert (= (=> (and (= x2539 0) (= x3780 x1998)) x3192) x2971))
(assert (x2907 x4674 x1426 x3093 x633))
(assert (= x2431 (and x3828 x3082)))
(assert (x360 x3621))
(assert (x360 x181))
(assert (= x430 (or x611 x1632)))
(assert (= x2051 (and x3642 (not x2245))))
(assert (= x2045 (=> (and (or x1424 (and (not x1424) (and (<= x4261 1461501637330902918203684832716283019655932542975) (< x4261 1461501637330902918203684832716283019655932542976) (<= 0 x4261) (= (x1507 (x4732 x4261)) x820) (< x4550 4294967296) (not (= 0 x820))))) (and (> 1461501637330902918203684832716283019655932542976 x4261) (<= 0 x4261) (>= 1461501637330902918203684832716283019655932542975 x4261) (= (= x4261 0) x1424))) x2816)))
(assert (= x4822 (x1877 (x4732 x4822))))
(assert (x360 x3732))
(assert (= (and (not x1358) x3833) x1079))
(assert (x2915 x4632))
(assert (= x2393 (and x2147 x669)))
(assert (= x457 (x1877 (x4732 x457))))
(assert (x4715 x986))
(assert (= (and x3914 x1328) x611))
(assert (= x2394 (and (not x593) x172)))
(assert (= (or x2706 x4051) x453))
(assert (=> (<= x1091 10000) (= (x3454 x1091) (x4732 x1091))))
(assert (and (x877 x2685 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x345 x2685 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x2685 (+ (x2968 x2685 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x3413 x2685 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x4363 x2685 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x360 x1294))
(assert (= x4058 (and x2947 x4658)))
(assert (= (and (not x2956) x2496) x2025))
(assert (x360 x215))
(assert (= (or x3507 x499 x359) x3770))
(assert (x360 x1699))
(assert (= x2436 (and x4076 x3295)))
(assert (= (+ (x1877 x1215) 2) (x1877 (x3243 x1215 2))))
(assert (= x513 (or x3102 x2721)))
(assert (=> (>= 10000 x3153) (= (x4732 x3153) (x3454 x3153))))
(assert (= (and x2538 x2661) x2061))
(assert (x360 x3928))
(assert (x360 x686))
(assert (= (and x4807 x4052) x931))
(assert (x360 x3541))
(assert (x360 x1344))
(assert (= (or x4409 x583) x3199))
(assert (= (and x1715 x3658) x459))
(assert (x360 x3031))
(assert (x360 x642))
(assert (= (or x1204 x4559) x1300))
(assert (= x1634 (x1877 (x4732 x1634))))
(assert (=> (<= x1169 10000) (= (x3454 x1169) (x4732 x1169))))
(assert (= (or x4588 x29) x3890))
(assert (= 178855970 (x1877 (x3454 178855970))))
(assert (x360 x1979))
(assert (x360 x864))
(assert (= (or x65 x4730) x4400))
(assert (x360 x2899))
(assert (x360 x2644))
(assert (= x3173 (and x2954 x1771)))
(assert (x2915 x1009))
(assert (= (x4732 2023533118) (x3454 2023533118)))
(assert (=> (<= x4245 10000) (= (x3454 x4245) (x4732 x4245))))
(assert (= (x1877 (x4732 x355)) x355))
(assert (= (x1877 (x4732 x667)) x667))
(assert (= (and x2014 x518) x4344))
(assert (= (and (not x476) x62) x3217))
(assert (x4300 x1349))
(assert (x360 x4472))
(assert (x360 x2194))
(assert (= x4297 (=> (and (= x2584 0) (= x4270 x3953)) x4514)))
(assert (x360 x2800))
(assert (x360 x4843))
(assert (x360 x561))
(assert (x360 x4667))
(assert (= x2281 (and x2075 x4425)))
(assert (x360 x1763))
(assert (= (or x605 x2628 x2215 x3877 x1084 x747) x988))
(assert (= (and (not x923) x3210) x115))
(assert (x360 x1445))
(assert (x360 x973))
(assert (= x802 (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x4261) (< x4261 1461501637330902918203684832716283019655932542976) (= x1105 (= x4261 0)) (<= 0 x4261)) (or (and (not x1105) (and (= x4224 (x1507 (x4732 x4261))) (> 1461501637330902918203684832716283019655932542976 x4261) (not (= 0 x4224)) (<= x4261 1461501637330902918203684832716283019655932542975) (> 4294967296 x4004) (<= 0 x4261))) x1105)) x1770)))
(assert (= (or x1027 x723) x2697))
(assert (x360 x2457))
(assert (x360 x3876))
(assert (x360 x3888))
(assert (= (and x300 (not x4529)) x4334))
(assert (=> (>= 10000 x2845) (= (x3454 x2845) (x4732 x2845))))
(assert (= x3137 (and x1259 (not x1392))))
(assert (x360 x4947))
(assert (x360 x4519))
(assert (x1107 x1806 (- x1426 x4674)))
(assert (x4300 x4723))
(assert (x360 x10))
(assert (x360 x4569))
(assert (x360 x1321))
(assert (= x3993 (and x511 x1275)))
(assert (= x4878 (and x929 (not x2030))))
(assert (= (x1877 (x4732 x1853)) x1853))
(assert (x360 x2891))
(assert (= x2555 (and (not x4707) x928)))
(assert (x360 x2902))
(assert (x360 x2299))
(assert (x3272 x1103 x1426))
(assert (= x3666 (x1877 (x4732 x3666))))
(assert (and (x4019 x1345 1000000000000000000) (=> (and (> 1000000000000000000 0) (> x1345 0)) (and (<= (* 1000000000000000000 (x3413 x1345 1000000000000000000)) x1345) (< (- x1345 1000000000000000000) (* 1000000000000000000 (x3413 x1345 1000000000000000000))))) (x3763 x1345 1000000000000000000) (x1905 x1345 1000000000000000000) (x3469 x1345 1000000000000000000)))
(assert (x360 x1067))
(assert (x360 x3086))
(assert (= x1773 (and x1803 (not x894))))
(assert (= x4017 (and x2244 x2933)))
(assert (= (or x3440 x2219 x3985 (and x2956 x2496) (and x3788 x466)) x3654))
(assert (= 24044834009420335638544845215851342251227478490780828673611325350056707489792 (x1877 (x3454 24044834009420335638544845215851342251227478490780828673611325350056707489792))))
(assert (x360 x1998))
(assert (= (or x4876 x3159) x3966))
(assert (x360 x1207))
(assert (x360 x4450))
(assert (x360 x1596))
(assert (= (x4732 2858086653) (x3454 2858086653)))
(assert (x360 x4260))
(assert (x360 x256))
(assert (x360 x2822))
(assert (x360 x2731))
(assert (x2835 (- x1806 x4674)))
(assert (= x815 (and (not x34) x1152)))
(assert (= (and x2289 x3934) x2654))
(assert (x360 x1502))
(assert (= x3033 (=> (and (or (and x4631 (= (x3243 x3247 2) x4442)) (and (= x4554 (x3800 (x4732 x1853) x3247 0)) (not x4631))) (= x4631 (= x1853 0))) x4839)))
(assert (= x3042 (=> (= (= x1664 x3294) x1992) (and (=> (and (= x737 (> x1664 0)) (not x1992)) (and (=> (and (= x812 x3608) (not x737)) x2159) (=> (and (and (and (>= 1461501637330902918203684832716283019655932542975 x445) (<= x2838 1461501637330902918203684832716283019655932542975) (<= x1245 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x445 0) (= x573 (x3800 (x4732 x2445) x2064 0)) (= x2838 (x2217 x573)) (= (x3243 x573 1) x4056) (>= x2838 0) (= x445 (x582 x4056)) (= x2463 (x3243 x4056 1)) (< x445 1461501637330902918203684832716283019655932542976) (= (x1975 x2463) x1245) (<= 0 x1245) (= x526 (= 0 x2838)) (not (= 0 x1245)) (< x2838 1461501637330902918203684832716283019655932542976) (= (x4034 (+ 96 x812)) x3510)) (or (and x526 (= x1890 (x3243 x2064 1))) (and (and (= (x3800 (x4732 x2838) x2064 0) x1709) (= (x3243 x1709 1) x890)) (not x526)))) x737) x1081))) (=> (and x1992 (= x812 x4248)) x3550)))))
(assert (= x4381 (and x1759 (not x4679))))
(assert (= x3599 (and x480 x117)))
(assert (x360 x1850))
(assert (=> (>= 10000 x1090) (= (x4732 x1090) (x3454 x1090))))
(assert (= x4499 (and x2061 (not x4742))))
(assert (x360 x3992))
(assert (= (x1877 (x3243 x2703 2)) (+ 2 (x1877 x2703))))
(assert (= (and x4162 (not x1941)) x1326))
(assert (= 1856199391 (x1877 (x3454 1856199391))))
(assert (= x2770 (and (not x4323) x1904)))
(assert (= (and x1328 (not x3914)) x1632))
(assert (= x1842 (and x1513 x263)))
(assert (= (or x3785 x3581) x110))
(assert (= (+ 1 (x1877 x3701)) (x1877 (x3243 x3701 1))))
(assert (= (x1877 (x4732 x4089)) x4089))
(assert (= x2997 (and (not x791) x4724)))
(assert (= x3503 (or x356 x1620)))
(assert (x360 x4307))
(assert (= (+ 2 (x1877 x827)) (x1877 (x3243 x827 2))))
(assert (= x289 (or (and x4360 x30) (and x3006 (not x1114)))))
(assert (= x2938 (x1877 (x4732 x2938))))
(assert (=> (>= 10000 x1978) (= (x3454 x1978) (x4732 x1978))))
(assert (= (and x2608 x834) x3506))
(assert (x4300 x661))
(assert (= (=> (and (= x2006 x3079) (= x654 x2308) (= x4801 x2527) (= x849 x2297)) x1271) x2187))
(assert (= x1849 (and (not x516) x2385)))
(assert (= x4849 (and x3049 x769)))
(assert (x2835 x1262))
(assert (= (and x4499 x854) x4431))
(assert (x360 x1334))
(assert (= (x4732 157198259) (x3454 157198259)))
(assert (x3745 x1806 x1426 x3093 x633))
(assert (= (and x3948 x2153) x828))
(assert (x360 x1948))
(assert (= x4514 (=> (and (= x2584 x143) (= x41 x4270)) x1383)))
(assert (x360 x1234))
(assert (and (x4019 x216 1000000000000000000) (=> (and (> 1000000000000000000 0) (> x216 0)) (and (<= (* 1000000000000000000 (x3413 x216 1000000000000000000)) x216) (< (- x216 1000000000000000000) (* 1000000000000000000 (x3413 x216 1000000000000000000))))) (x3763 x216 1000000000000000000) (x1905 x216 1000000000000000000) (x3469 x216 1000000000000000000)))
(assert (= (and x1912 x3486) x1545))
(assert (= x3816 (and (not x3498) x2415)))
(assert (x360 x1239))
(assert (= (and x4809 x3211) x3356))
(assert (= x172 (and x3904 (not x1944))))
(assert (x360 x3110))
(assert (x360 x2625))
(assert (x360 x2824))
(assert (x2907 x1426 x1806 x4674 x1426))
(assert (= (or x344 x1209) x574))
(assert (= x3185 (and (not x302) x3721)))
(assert (= (and x785 x4530) x3891))
(assert (x360 x1380))
(assert (x360 x948))
(assert (= x359 (or x1231 x44)))
(assert (x360 x447))
(assert (x360 x965))
(assert (= x410 (=> (and (= x3820 x4008) (= x4833 x4307)) x315)))
(assert (x4300 x2967))
(assert (= x2331 (and (not x2506) x3772)))
(assert (x360 x4909))
(assert (= (and (not x199) x3750) x3386))
(assert (= x3507 (or x2997 x3654)))
(assert (= x587 (or x1679 x1405 x2120)))
(assert (= x4765 (and x2999 (not x1555))))
(assert (= (x1877 (x3454 1857877511)) 1857877511))
(assert (x360 x2903))
(assert (x360 x4581))
(assert (x360 x1205))
(assert (= (or x3234 x2411) x1123))
(assert (= x4627 (and x760 x2182)))
(assert (x360 x4024))
(assert (= (and x1078 (not x3458)) x3373))
(assert (x360 x1882))
(assert (= (and x2954 (not x1771)) x2058))
(assert (x360 x4943))
(assert (x360 x4148))
(assert (x360 x1537))
(assert (x360 x1805))
(assert (=> (<= x1850 10000) (= (x4732 x1850) (x3454 x1850))))
(assert (= x2704 (and x3155 x3740)))
(assert (x360 x1131))
(assert (x4300 x2938))
(assert (x360 x1119))
(assert (x360 x4041))
(assert (x360 x4486))
(assert (x360 x1428))
(assert (x360 x1467))
(assert (= x2519 (and x2111 (not x182))))
(assert (x4300 x3327))
(assert (x360 x2101))
(assert (x360 x3022))
(assert (x360 x990))
(assert (x2885 x4583))
(assert (= x3329 (=> (and (= x1316 x539) (= x3022 0)) x4361)))
(assert (x360 x3805))
(assert (x360 x3197))
(assert (x360 x1810))
(assert (= (or (and x3094 (not x1946)) (and x1488 x4610)) x1138))
(assert (x360 x262))
(assert (= x4090 (or x2888 (and (not x1382) x2431) (and (not x3828) x3082) x3683 (and x3483 x4358) (and x1907 x1779))))
(assert (= (x1877 (x3454 1461501637330902918203684832716283019655932542976)) 1461501637330902918203684832716283019655932542976))
(assert (x360 x2576))
(assert (x360 x1220))
(assert (= (x4732 988262939) (x3454 988262939)))
(assert (= (or x1422 x2922) x3878))
(assert (x360 x780))
(assert (x360 x1196))
(assert (= x4557 (and x4855 (not x3814))))
(assert (x360 x1838))
(assert (x360 x1652))
(assert (= x4730 (or x3880 x1013 x3937 x3157 x779 x1079)))
(assert (x360 x2318))
(assert (x360 x1444))
(assert (x360 x1624))
(assert (= (x3454 2217467699) (x4732 2217467699)))
(assert (x360 x2996))
(assert (= x2096 (and x3229 (not x1168))))
(assert (x1107 x4674 (- x1426 x3093)))
(assert (x360 x1585))
(assert (= x4852 (and (not x825) x2717)))
(assert (x360 x1279))
(assert (= x1999 (and (=> (and (and (or (and (not x4101) (= x4101 x3814)) (and x4101 (and (= x3814 (not x4738)) (<= x2550 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2550 (x2602 x4808)) (= (x3800 (x4732 x1559) x3247 0) x2305) (<= 0 x2550) (= x4738 (> x2318 x2550)) (= x4808 (x3243 x2305 2))))) (and (<= x1559 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x1559) (= (x3800 (x4732 x3092) x3247 0) x2676) (<= 0 x1559) (= x3511 (x3243 x2676 1)) (= (ite (> x2348 1) (not (= 0 x1559)) (< 1 x2348)) x4101) (= (x3477 x3511) x1559))) x3291) x1919) (=> (and (not x3291) (and (= x2086 0) (= x3092 x3943))) x3570))))
(assert (= x4745 (and x81 (not x3226))))
(assert (= (x3454 4238056678808933066457772256406219440718756300954938350892797929791311314944) (x4732 4238056678808933066457772256406219440718756300954938350892797929791311314944)))
(assert (x360 x1579))
(assert (=> (<= x1739 10000) (= (x3454 x1739) (x4732 x1739))))
(assert (x4300 x3706))
(assert (x360 x3700))
(assert (and (x4019 x1699 1000000000000000000) (=> (and (> 1000000000000000000 0) (> x1699 0)) (and (<= (* 1000000000000000000 (x3413 x1699 1000000000000000000)) x1699) (< (- x1699 1000000000000000000) (* 1000000000000000000 (x3413 x1699 1000000000000000000))))) (x3763 x1699 1000000000000000000) (x1905 x1699 1000000000000000000) (x3469 x1699 1000000000000000000)))
(assert (x360 x4327))
(assert (= x4352 (and x2680 (not x1672))))
(assert (= x4528 (and (not x2945) x3131)))
(assert (x360 x3871))
(assert (x360 x654))
(assert (x77 x1332))
(assert (x360 x4371))
(assert (=> (>= 10000 x3559) (= (x4732 x3559) (x3454 x3559))))
(assert (x4300 x418))
(assert (x360 x283))
(assert (x360 x1831))
(assert (=> (<= x2021 10000) (= (x3454 x2021) (x4732 x2021))))
(assert (= (+ (x1877 x2676) 1) (x1877 (x3243 x2676 1))))
(assert (=> (>= 10000 x3028) (= (x4732 x3028) (x3454 x3028))))
(assert (x360 x935))
(assert (x360 x800))
(assert (= (x1877 (x3454 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (or x1773 x4279) x4598))
(assert (=> (<= x4792 10000) (= (x3454 x4792) (x4732 x4792))))
(assert (= (x1877 (x3454 2691771752)) 2691771752))
(assert (x360 x1232))
(assert (= x1994 (and x4343 x3436)))
(assert (x360 x3804))
(assert (= (and x593 x172) x2451))
(assert (x360 x1534))
(assert (= (and (not x1335) x586) x1452))
(assert (= (and x2506 x3772) x291))
(assert (= (x1877 (x3454 398450620)) 398450620))
(assert (x360 x3902))
(assert (= x2455 (or x675 x1511 x3147 x1396 x4223 x2368)))
(assert (x360 x1917))
(assert (x360 x3340))
(assert (= (and (not x4610) x1488) x3094))
(assert (x360 x4349))
(assert (x360 x3639))
(assert (x4300 x1698))
(assert (x360 x2352))
(assert (x360 x1552))
(assert (= (and (not x1255) x3519) x3117))
(assert (= (and x3648 x1145) x1434))
(assert (= (x4732 2245473101) (x3454 2245473101)))
(assert (= x2617 (and x4631 x3890)))
(assert (= x2588 (and (not x3358) x1777)))
(assert (= x356 (and (not x1505) x1123)))
(assert (= (and (not x3597) x946) x4879))
(assert (= x222 (or x1849 x3297)))
(assert (= (and x1259 x1392) x821))
(assert (x360 x221))
(assert (= (or x1250 x3977) x4274))
(assert (x360 x63))
(assert (= (and x3401 x4415) x2158))
(assert (= x321 (=> (and (= x2548 x2543) (= x2622 x3860) (not (< x2836 x1330))) x4650)))
(assert (= (x4732 76833804140862540057647519496925185374644862498684814347804924264468996685824) (x3454 76833804140862540057647519496925185374644862498684814347804924264468996685824)))
(assert (x360 x3760))
(assert (x360 x4580))
(assert (= (and x2933 (not x2244)) x4518))
(assert (= (or x3694 x327) x1529))
(assert (= (and x3376 x4753) x3423))
(assert (x360 x1733))
(assert (= x1790 (and x3233 x2735)))
(assert (=> (>= 10000 x234) (= (x4732 x234) (x3454 x234))))
(assert (= x402 (and x263 (not x1513))))
(assert (= x2730 (and x4848 x3174)))
(assert (x360 x3696))
(assert (= x2820 (or x1994 x2168 x4029 x1122 x2169 x4763)))
(assert (x360 x3266))
(assert (x2835 x3118))
(assert (x360 x984))
(assert (x360 x1032))
(assert (= x4693 (and x2895 x4484)))
(assert (x360 x1945))
(assert (x2915 x1699))
(assert (x360 x2728))
(assert (x360 x3538))
(assert (= x3474 (x1877 (x4732 x3474))))
(assert (x360 x3417))
(assert (x4300 x1126))
(assert (x360 x2919))
(assert (x360 x281))
(assert (= (or x2432 x3328) x1667))
(assert (=> (>= 10000 x922) (= (x4732 x922) (x3454 x922))))
(assert (x3272 x4654 x2279))
(assert (= x1970 (and x1574 x1342)))
(assert (= (and x1516 x4356) x99))
(assert (=> (>= 10000 x4185) (= (x3454 x4185) (x4732 x4185))))
(assert (x360 x4480))
(assert (= x2062 (or x1601 x1300 x860 x804)))
(assert (x2835 x3832))
(assert (x360 x179))
(assert (x360 x888))
(assert (=> (>= 10000 x2860) (= (x4732 x2860) (x3454 x2860))))
(assert (= x4278 (and x2440 x2498)))
(assert (x4300 x1264))
(assert (= (x4732 547091486) (x3454 547091486)))
(assert (= (and x1944 x3904) x4716))
(assert (x360 x2546))
(assert (= (+ (x1877 x3091) 1) (x1877 (x3243 x3091 1))))
(assert (x3272 x2482 x440))
(assert (x360 x1463))
(assert (= x1974 (x1877 (x4732 x1974))))
(assert (x3745 x633 x3093 x1426 x4674))
(assert (x360 x974))
(assert (x360 x4546))
(assert (x360 x3793))
(assert (= (or x2380 x4627 x1315 x992 x3991 x21) x879))
(assert (x360 x1489))
(assert (x360 x1888))
(assert (x360 x2806))
(assert (x360 x661))
(assert (x360 x2994))
(assert (x4715 x4096))
(assert (x360 x2053))
(assert (and (and (= (- (* (- x1262 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1262 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1262 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1262) (- (* x1262 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1262))) (= (x4060 1000000000000000000 (- x1262 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1262 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x1262 1000000000000000000) (x4060 1000000000000000000 x1262)) (x1520 1000000000000000000 x1262) (x3818 1000000000000000000 x1262) (x3063 1000000000000000000 x1262) (x4067 1000000000000000000 x1262) (x3727 1000000000000000000 x1262)))
(assert (x4300 x2838))
(assert (x360 x4618))
(assert (x360 x2889))
(assert (x4300 x2350))
(assert (= (or x3359 x3816) x4786))
(assert (= (and x3697 x1684) x4946))
(assert (=> (<= x3666 10000) (= (x3454 x3666) (x4732 x3666))))
(assert (= x4908 (and (not x4941) x956)))
(assert (= x4703 (=> (and (= x4222 0) (= x2160 x4421)) x2008)))
(assert (x360 x1262))
(assert (= (and x4072 x927) x1122))
(assert (= (=> (and (= x3823 0) (= x2660 x1966)) x2560) x2881))
(assert (x4300 x2126))
(assert (x360 x3186))
(assert (= x2851 (and x3333 x1839)))
(assert (x360 x2314))
(assert (=> (>= 10000 x3180) (= (x4732 x3180) (x3454 x3180))))
(assert (= x208 (or x4598 x3775)))
(assert (= (and x1254 (not x2497)) x1764))
(assert (= (and x324 (not x421)) x4051))
(assert (x360 x855))
(assert (= (+ 1 (x1877 x57)) (x1877 (x3243 x57 1))))
(assert (x3745 x1426 x1806 x633 x3093))
(assert (x360 x951))
(assert (x4300 x3695))
(assert (x360 x1604))
(assert (= (=> (= x4248 x1203) x3550) x4575))
(assert (= x4568 (and x253 x1367)))
(assert (x360 x1398))
(assert (x360 x819))
(assert (=> (>= 10000 x661) (= (x4732 x661) (x3454 x661))))
(assert (x360 x633))
(assert (= x2935 (and x3826 (not x4648))))
(assert (x1107 x633 (- x3093 x4674)))
(assert (x2835 (- x1426 x633)))
(assert (x360 x4095))
(assert (x360 x3995))
(assert (and (x4019 x1324 1000000000000000000) (=> (and (> 1000000000000000000 0) (> x1324 0)) (and (<= (* 1000000000000000000 (x3413 x1324 1000000000000000000)) x1324) (< (- x1324 1000000000000000000) (* 1000000000000000000 (x3413 x1324 1000000000000000000))))) (x3763 x1324 1000000000000000000) (x1905 x1324 1000000000000000000) (x3469 x1324 1000000000000000000)))
(assert (x4715 x4710))
(assert (x360 x2531))
(assert (and (x877 x497 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x345 x497 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x497 (+ (x2968 x497 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x3413 x497 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x4363 x497 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (=> (>= 10000 x2138) (= (x4732 x2138) (x3454 x2138))))
(assert (= x4899 (=> (and (= x4882 x4372) (= x3307 x2274)) x1546)))
(assert (= x2056 (=> (or (and (= x3337 x1267) (not x1267)) (and x1267 (and (= x4118 (x4728 1461501637330902918203684832716283019655932542975 x986)) (= x3337 (not x4104)) (= x4104 (= 0 x4021)) (= x3091 (x3800 (x4732 x4118) (x3454 157) 0)) (>= 1461501637330902918203684832716283019655932542975 x4021) (>= x4021 0) (= (x3591 x1476) x4021) (= x1476 (x3243 x3091 1)) (< x4021 1461501637330902918203684832716283019655932542976)))) x2914)))
(assert (x360 x3574))
(assert (x4300 x1515))
(assert (x360 x1971))
(assert (= (or x379 x2820) x1601))
(assert (x360 x4293))
(assert (= 117300739 (x1877 (x3454 117300739))))
(assert (x2907 x1426 x4674 x3093 x633))
(assert (= x1085 (=> (and (= x143 x4618) (= x3504 x41)) x1383)))
(assert (= x1013 (and x3537 x3439)))
(assert (x360 x3058))
(assert (and (x4019 x1980 1000000000000000000) (=> (and (> 1000000000000000000 0) (> x1980 0)) (and (<= (* 1000000000000000000 (x3413 x1980 1000000000000000000)) x1980) (< (- x1980 1000000000000000000) (* 1000000000000000000 (x3413 x1980 1000000000000000000))))) (x3763 x1980 1000000000000000000) (x1905 x1980 1000000000000000000) (x3469 x1980 1000000000000000000)))
(assert (= x4713 (or x3051 x3450)))
(assert (= (=> (and (= x1982 x409) (= x58 x932)) x2196) x3927))
(assert (= (and x2887 x4799) x2750))
(assert (= (=> (and (= x3340 x3956) (= x2727 x1485)) x3313) x1481))
(assert (=> (<= x1416 10000) (= (x4732 x1416) (x3454 x1416))))
(assert (= x1891 (or x87 x514)))
(assert (= x4490 (and x1254 x2497)))
(assert (= x1674 (and x1006 x3264)))
(assert (x360 x2077))
(assert (= x1091 (x1877 (x4732 x1091))))
(assert (= x4429 (and x2193 x4309)))
(assert (= (and x4613 (not x2804)) x1697))
(assert (= (x1877 (x4732 x1080)) x1080))
(assert (x360 x1068))
(assert (x360 x2652))
(assert (= (=> (and (= 0 x2806) (= x3778 x4421)) x2280) x2063))
(assert (x360 x3718))
(assert (x4715 x3134))
(assert (= x1501 (=> (and (= 0 x1838) (= x655 x539)) x2724)))
(assert (x360 x900))
(assert (=> (<= x1559 10000) (= (x3454 x1559) (x4732 x1559))))
(assert (x360 x1607))
(assert (= (and (not x1017) x3136) x322))
(assert (= (or x3575 x72) x1928))
(assert (x360 x4053))
(assert (= (and x1711 x3081) x4076))
(assert (x360 x2016))
(assert (= (x4732 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x3454 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= x1804 (and x466 (not x3788))))
(assert (x360 x3514))
(assert (x1107 x3093 (- x633 x1426)))
(assert (= x1657 (and x4059 x382)))
(assert (x360 x4032))
(assert (= x2250 (and x3201 (not x602))))
(assert (= (and x367 x2677) x1777))
(assert (x360 x3751))
(assert (x360 x4687))
(assert (= x1277 (and x3721 x302)))
(assert (= x2445 (x1877 (x4732 x2445))))
(assert (x4300 x1169))
(assert (= x4839 (=> (and (= x2520 (x3243 x425 1)) (= x3580 x563) (= (x3243 x165 1) x425) (= (x3800 (x4732 x2445) x3247 0) x165)) x762)))
(assert (= (x1877 (x4732 x266)) x266))
(assert (=> (>= 10000 x2046) (= (x4732 x2046) (x3454 x2046))))
(assert (= (and x2717 x825) x1564))
(assert (x360 x4567))
(assert (x360 x2993))
(assert (= (+ 2 (x1877 x1597)) (x1877 (x3243 x1597 2))))
(assert (= x3563 (x1877 (x4732 x3563))))
(assert (x360 x2595))
(assert (x360 x378))
(assert (x360 x1510))
(assert (x4300 x1933))
(assert (= x3126 (and x413 x3749)))
(assert (= x4614 (and x3605 x3149)))
(assert (= x3188 (and x498 x4375)))
(assert (= x4796 (and x4916 x2696)))
(assert (x360 x4064))
(assert (= x207 (x1877 (x4732 x207))))
(assert (= x87 (and (not x3046) x168)))
(assert (= x2913 (x1877 (x4732 x2913))))
(assert (= (and x1370 x2655) x4538))
(assert (x360 x3463))
(assert (= (+ (x1877 x158) 2) (x1877 (x3243 x158 2))))
(assert (x711 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (= (and x2121 x1708) x2057))
(assert (= (+ 1 (x1877 x1270)) (x1877 (x3243 x1270 1))))
(assert (x360 x2136))
(assert (x77 x986))
(assert (= x727 (=> (and (= 0 x163) (= x85 x3853)) x663)))
(assert (= (and x1562 (not x343)) x899))
(assert (x360 x2799))
(assert (x360 x1083))
(assert (=> (<= x2009 10000) (= (x4732 x2009) (x3454 x2009))))
(assert (x360 x639))
(assert (= (=> (and (= x797 (x2960 x246)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4507) (and (= (<= x4507 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x4507 32)))) (= x797 0) (not (= 0 x1746))) x1133) x3468))
(assert (x360 x18))
(assert (= (or x4752 x298) x455))
(assert (x360 x1015))
(assert (x360 x273))
(assert (= (and x2394 (not x1301)) x3864))
(assert (x360 x3848))
(assert (= x3574 (x1877 (x4732 x3574))))
(assert (= x2342 (and x1267 x3194)))
(assert (x360 x1698))
(assert (x360 x3777))
(assert (= 2796547477 (x1877 (x3454 2796547477))))
(assert (= (or (and x3801 (not x2876)) x757) x669))
(assert (= (and x4681 x194) x1749))
(assert (= (and x2675 (not x2901)) x1887))
(assert (= (or x4193 x1242) x2211))
(assert (x360 x3315))
(assert (x4300 x3114))
(assert (x360 x2801))
(assert (= (+ 1 (x1877 x416)) (x1877 (x3243 x416 1))))
(assert (= (+ (x1877 x1421) 2) (x1877 (x3243 x1421 2))))
(assert (= (+ 1 (x1877 x579)) (x1877 (x3243 x579 1))))
(assert (= x1659 (or x4266 x2108 x3019 x4745)))
(assert (= (x1877 (x3454 72570022874062638528011751457397263716769196454539065078543251854057308946432)) 72570022874062638528011751457397263716769196454539065078543251854057308946432))
(assert (x360 x4226))
(assert (= (x1877 (x4732 x922)) x922))
(assert (and (and (= (- (* (- x1472 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1472 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1472 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1472) (- (* x1472 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1472))) (= (x4060 1000000000000000000 (- x1472 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1472 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x1472 1000000000000000000) (x4060 1000000000000000000 x1472)) (x1520 1000000000000000000 x1472) (x3818 1000000000000000000 x1472) (x3063 1000000000000000000 x1472) (x4067 1000000000000000000 x1472) (x3727 1000000000000000000 x1472)))
(assert (x360 x3119))
(assert (x360 x790))
(assert (x360 x1618))
(assert (= (x1877 (x4732 x1155)) x1155))
(assert (= x417 (=> (= (= 0 x947) x1612) (and (=> (and (not x1612) (= x3597 (or (and (> 32 x1794) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1794) true)) (> x1794 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> (and (and (= x609 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x639))) (= (> x448 x609) x4463) (<= x448 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x448)) (not x3597)) (and (=> x4463 x3064) (=> (and (and (>= x501 0) (= x501 (x3562 x373)) (= x3662 (x4034 (+ x639 x448))) (= x4875 (< x609 x501)) (<= x501 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3800 (x4732 x2827) (x3454 5) 0) x373)) (not x4463)) (and (=> (and (and (= 1 x4235) (= x2579 (x4034 (+ x639 x501))) (= 32 x3239)) (not x4875)) x2327) (=> x4875 x3064))))) (=> x3597 x3064))) (=> x1612 x3064)))))
(assert (x360 x1492))
(assert (x360 x295))
(assert (= x4218 (and x3843 (not x1424))))
(assert (and (x4019 x1166 1000000000000000000) (=> (and (> 1000000000000000000 0) (> x1166 0)) (and (<= (* 1000000000000000000 (x3413 x1166 1000000000000000000)) x1166) (< (- x1166 1000000000000000000) (* 1000000000000000000 (x3413 x1166 1000000000000000000))))) (x3763 x1166 1000000000000000000) (x1905 x1166 1000000000000000000) (x3469 x1166 1000000000000000000)))
(assert (= (+ (x1877 x3400) 2) (x1877 (x3243 x3400 2))))
(assert (x3272 x1009 x4220))
(assert (x360 x460))
(assert (x2915 x1179))
(assert (= (and x960 x4291) x2154))
(assert (x360 x4163))
(assert (x360 x1039))
(assert (= (x3454 1461501637330902918203684832716283019655932542975) (x4732 1461501637330902918203684832716283019655932542975)))
(assert (= x4072 (and x3671 x200)))
(assert (x360 x1075))
(assert (x2885 x4312))
(assert (= (=> (and (or x564 (not x564)) (= (= x143 0) x564)) x3765) x1383))
(assert (= x3198 (and x3716 (not x648))))
(assert (= x3439 (and x2526 x1385)))
(assert (= (and x2058 x1211) x3136))
(assert (= (x1877 (x3243 x4314 1)) (+ (x1877 x4314) 1)))
(assert (x360 x1440))
(assert (= x3607 (and x2364 x3983)))
(assert (= (and (not x357) x1506) x4266))
(assert (x360 x149))
(assert (x4300 x2955))
(assert (x360 x1227))
(assert (= (and x810 (not x2752)) x911))
(assert (x360 x4192))
(assert (x360 x177))
(assert (x360 x1725))
(assert (x360 x106))
(assert (x360 x1812))
(assert (x360 x3475))
(assert (x4300 x2827))
(assert (= (+ (x1877 x3861) 1) (x1877 (x3243 x3861 1))))
(assert (= x1170 (and (not x2692) x775)))
(assert (= x4803 (=> (and (= x4158 x539) (= x698 0)) x43)))
(assert (x4715 x497))
(assert (= x4075 (and x2081 x3107)))
(assert (x360 x3361))
(assert (x360 x2461))
(assert (x360 x1871))
(assert (=> (>= 10000 x457) (= (x3454 x457) (x4732 x457))))
(assert (x360 x4308))
(assert (= (x1877 (x4732 x800)) x800))
(assert (= (and (not x4754) x1832) x1516))
(assert (x360 x3820))
(assert (= x4512 (and (not x1453) x2031)))
(assert (x360 x1369))
(assert (= x4245 (x1877 (x4732 x4245))))
(assert (x360 x1229))
(assert (x360 x2848))
(assert (= x22 (and x1195 x296)))
(assert (= (and x646 x3547) x2875))
(assert (= (and x3379 x2896) x2664))
(assert (x360 x3028))
(assert (x360 x875))
(assert (= x4804 (and x1480 x376)))
(assert (x360 x2957))
(assert (x4300 x986))
(assert (x360 x3889))
(assert (x360 x4507))
(assert (= x4208 (or x4230 x2419 x2662)))
(assert (x360 x4271))
(assert (x4300 x1092))
(assert (x360 x3795))
(assert (x360 x3513))
(assert (=> (>= 10000 x2809) (= (x3454 x2809) (x4732 x2809))))
(assert (x360 x2785))
(assert (= x4160 (and x3241 x4574)))
(assert (= x4536 (x1877 (x4732 x4536))))
(assert (= x3779 (and (not x1958) x4490)))
(assert (= x114 (and x1984 x4657)))
(assert (x4715 x107))
(assert (= (and x2048 x366) x1927))
(assert (x360 x1070))
(assert (= (x3454 1313710058) (x4732 1313710058)))
(assert (x360 x2838))
(assert (x360 x3002))
(assert (= x2372 (and x124 x4547)))
(assert (x360 x3187))
(assert (= x4170 (and (not x3600) x1108)))
(assert (x77 x4145))
(assert (= (and x3873 (not x789)) x4122))
(assert (= (or x1952 x2944) x3264))
(assert (x360 x3768))
(assert (= 2858086653 (x1877 (x3454 2858086653))))
(assert (x360 x3661))
(assert (=> (<= x3090 10000) (= (x4732 x3090) (x3454 x3090))))
(assert (x711 x2756))
(assert (= (and x4512 x2802) x3419))
(assert (x360 x3424))
(assert (x360 x2521))
(assert (x360 x4267))
(assert (x360 x752))
(assert (x4300 x4865))
(assert (x360 x3668))
(assert (= (x1877 (x4732 x733)) x733))
(assert (=> (<= x2831 10000) (= (x3454 x2831) (x4732 x2831))))
(assert (x3745 x1806 x1426 x1426 x4674))
(assert (x4300 x1850))
(assert (= (and (not x2396) x4727) x3101))
(assert (= (and x3409 x763) x367))
(assert (x360 x2599))
(assert (x360 x2585))
(assert (x360 x1303))
(assert (= (and (not x2856) x3947) x2578))
(assert (x360 x1793))
(assert (x360 x3171))
(assert (= (and (not x3322) x4646) x2933))
(assert (x360 x2350))
(assert (= (and x258 x4176) x1275))
(assert (x360 x3090))
(assert (= (and x1619 (not x2235)) x2981))
(assert (x360 x1570))
(assert (x360 x761))
(assert (x360 x1957))
(assert (= (and x3342 x217) x1325))
(assert (= (and x1168 x3229) x4927))
(assert (= (or x4528 x3613 x2830 x496) x2450))
(assert (x360 x2078))
(assert (and (and (= (- (* (- x3860 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3860 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3860 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3860) (- (* x3860 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3860))) (= (x4060 1000000000000000000 (- x3860 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x3860 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x3860 1000000000000000000) (x4060 1000000000000000000 x3860)) (x1520 1000000000000000000 x3860) (x3818 1000000000000000000 x3860) (x3063 1000000000000000000 x3860) (x4067 1000000000000000000 x3860) (x3727 1000000000000000000 x3860)))
(assert (x360 x1416))
(assert (x360 x4615))
(assert (= x2623 (and x882 x899)))
(assert (= x3752 (=> (and (= x2149 x2274) (= x4372 x3132)) x1546)))
(assert (= x2311 (and x4478 x1222)))
(assert (x4300 x693))
(assert (x360 x1389))
(assert (x360 x2739))
(assert (= x2241 (and x2386 x1892)))
(assert (x360 x1375))
(assert (x360 x1346))
(assert (x360 x1884))
(assert (= (x1877 (x4732 x693)) x693))
(assert (=> (>= 10000 x2955) (= (x3454 x2955) (x4732 x2955))))
(assert (= (and x4799 (not x2887)) x1259))
(assert (x360 x3044))
(assert (x3272 x1151 x2279))
(assert (x2835 x3860))
(assert (x360 x4454))
(assert (x360 x4674))
(assert (= x3850 (=> (and (= 0 x731) (= x3699 x3182)) x1802)))
(assert (x360 x2815))
(assert (x360 x1091))
(assert (x360 x4224))
(assert (=> (>= 10000 x2967) (= (x3454 x2967) (x4732 x2967))))
(assert (x360 x650))
(assert (= x300 (and (not x311) x1749)))
(assert (x360 x4487))
(assert (x360 x292))
(assert (= (or x2829 x3232) x1436))
(assert (x360 x643))
(assert (= (x1877 (x3243 x507 2)) (+ 2 (x1877 x507))))
(assert (x360 x1976))
(assert (x4300 x4118))
(assert (= (=> (and (= x3538 (x4034 (+ x781 4))) (= x4026 (x2618 x2288 x3032)) (= x3874 (= x234 x335)) (> x2101 0) (= x2317 (ite (= x835 1) 1 0)) (= (ite (= 0 x145) 1 0) x3032) (= (x4728 x4026 x3016) x2101) (= (ite (> x145 31) 1 0) x107) (= (x4728 x2317 x107) x2288) (= x335 (x4728 1461501637330902918203684832716283019655932542975 x986)) (= (x4034 (+ x3538 32)) x2454) (= (x2102 (- x2454 x781)) x4324)) (and (=> (and (= (= x335 x515) x953) (not x3874)) (and (=> (and (and (= x3751 36) (= x752 242558722) (< x752 405663989) (< 0 x982) (not (= 75483562 x752)) (> 2217467699 x752) (= x681 x4637) (< x752 988262939) (not (= x752 178855970)) (= (x2102 (- x3751 4)) x2405) (= (x1507 (x4732 x515)) x982) (not (< x3751 4)) (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x1763) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2405) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2405)) (< x2405 32))) x1503) (= x3751 x4324)) x953) (and (=> (and (= x4350 x756) x1503) x135) (=> (and (not x1503) (and (>= x4209 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4209) (= x2299 x4637) (= (x3800 (x4732 x2827) (x3454 6) 0) x651) (= x4870 (> x681 x4209)) (= (x1212 x651) x4209))) (and (=> (and (and (>= x2381 0) (= (x3800 (x4732 x2827) (x3454 6) 0) x3500) (= x2381 (x1212 x3500)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2381) (= x963 (> x4637 x2381))) (not x4870)) (and (=> (and (and (= (< x3481 x756) x3451) (<= x756 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3481 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4637))) (= x1181 (x2102 (- x2381 x4637))) (<= 0 x756)) (not x963)) (and (=> (and x3451 (= x4350 x756)) x135) (=> (and (not x3451) (and (= (x4034 (+ x756 x4637)) x1010) (<= 0 x2474) (<= x2474 1461501637330902918203684832716283019655932542975) (= x4330 (x4034 (+ x4637 x756))) (= (= x2474 x266) x2429) (< x2474 1461501637330902918203684832716283019655932542976) (= x641 128))) (and (=> (and (not x2429) (= x4930 (= x234 x2474))) (and (=> (and x4930 (and (= (x2102 (- x2682 4)) x3449) (< x3572 988262939) (= x3572 599290589) (= x624 x2299) (not (= 405663989 x3572)) (= (x1507 (x4732 x234)) x4419) (= x1978 x515) (not (< x3572 405663989)) (not (> 4 x2682)) (< 0 x4419) (not (= x3572 547091486)) (= 100 x2682) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4436) (= x2564 x2827) (= x4478 (or (and (> 96 x3449) (= true (<= x3449 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3449))) (< x3572 2217467699) (= 100 x2682))) (and (=> x4478 x334) (=> (and (not x4478) (and (= x1199 x2564) (= (= x2827 x2564) x3027))) (and (=> (and (and (= x1102 x1978) (= (= x1978 x515) x2855)) x3027) (and (=> (and x2855 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x215) (= x624 x4943) (= x653 (x3800 (x4732 x2564) (x3454 5) 0)) (= x215 (x740 x653)) (>= x215 0) (= (> x2299 x215) x2735))) (and (=> (and (and (= (> x624 x247) x542) (= (x3800 (x4732 x2564) (x3454 5) 0) x2172) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x247) (= (x740 x2172) x247) (>= x247 0)) (not x2735)) (and (=> (and (not x542) (and (= (x3800 (x4732 x1978) (x3454 5) 0) x4049) (= x2198 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x624))) (= x458 (x2102 (- x247 x624))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4553) (>= x4553 0) (= (x1028 x4049) x4553) (= x3073 (> x4553 x2198)))) (and (=> x3073 x334) (=> (and (not x3073) (and (= x3043 1) (= x4262 (x4034 (+ x624 x4553))) (= 1 x4328) (= x1207 32))) x3011))) (=> x542 x334))) (=> x2735 x334))) (=> (not x2855) x334))) (=> (not x3027) x334))))) (=> (and (= x796 (= x515 x2474)) (not x4930)) (and (=> (and (and (= x3573 (or (and (= (<= x3189 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x3189)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3189))) (> 988262939 x478) (< x478 2217467699) (= x1945 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= x478 405663989)) (= x3189 (x2102 (- x2176 4))) (= x515 x4902) (not (> 405663989 x478)) (not (> 4 x2176)) (= (x1507 (x4732 x515)) x442) (= x2176 100) (> x442 0) (= x2827 x818) (= x3065 x2299) (= x478 599290589) (= 100 x2176) (not (= x478 547091486))) x796) (and (=> (and (and (= x2084 x818) (= (= x818 x2827) x1002)) (not x3573)) (and (=> (and x1002 (and (= x4902 x3078) (= x4232 (= x4902 x515)))) (and (=> (and x4232 (and (= x4562 (x3800 (x4732 x818) (x3454 5) 0)) (>= x3315 0) (= x3065 x2334) (= (x4660 x4562) x3315) (= x2034 (> x2299 x3315)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3315))) (and (=> x2034 x2881) (=> (and (not x2034) (and (= x4290 (x4660 x3055)) (= x2985 (> x3065 x4290)) (= (x3800 (x4732 x818) (x3454 5) 0) x3055) (<= x4290 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4290 0))) (and (=> x2985 x2881) (=> (and (and (= (x3800 (x4732 x4902) (x3454 5) 0) x3257) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2946) (= x2946 (x3355 x3257)) (= (> x2946 x531) x3900) (= (x2102 (- x4290 x3065)) x3621) (= x531 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3065))) (<= 0 x2946)) (not x2985)) (and (=> (and (not x3900) (and (= x2950 1) (= x3823 1) (= 32 x2660) (= x3017 (x4034 (+ x3065 x2946))))) x2560) (=> x3900 x2881))))))) (=> (not x4232) x2881))) (=> (not x1002) x2881))) (=> x3573 x2881))) (=> (and (and (= (= x3180 x2474) x2497) (and (and (= 599290589 x2377) (< 0 x1844) (= x2827 x3706) (not (= 547091486 x2377)) (= (x2102 (- x3896 4)) x1423) (not (< x2377 405663989)) (not (= 405663989 x2377)) (< x2377 2217467699) (= x1016 x515) (not (< x3896 4)) (= x2299 x1083) (= x3896 100) (= x3896 100) (< x2377 988262939) (= x1958 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1423) true) (< x1423 96)) (> x1423 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x1507 (x4732 x3180)) x1844) (= x436 16156842317565293874272834530371880720966471053262404558597773956279093428224)) x2497)) (not x796)) (and (=> x1958 x4198) (=> (and (not x1958) (and (= x4841 (= x3706 x2827)) (= x2112 x3706))) (and (=> (not x4841) x4198) (=> (and (and (= x2566 x1016) (= (= x1016 x515) x2624)) x4841) (and (=> (not x2624) x4198) (=> (and x2624 (and (= x3838 x1083) (= (> x2299 x4217) x1722) (<= 0 x4217) (= (x2719 x2601) x4217) (= (x3800 (x4732 x3706) (x3454 5) 0) x2601) (<= x4217 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x1722 x4198) (=> (and (and (>= x1799 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1799) (= x1799 (x2719 x3422)) (= (< x1799 x1083) x3616) (= (x3800 (x4732 x3706) (x3454 5) 0) x3422)) (not x1722)) (and (=> x3616 x4198) (=> (and (and (= (x2102 (- x1799 x1083)) x2137) (= (x3800 (x4732 x1016) (x3454 5) 0) x2862) (= x3471 (x3363 x2862)) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1083)) x1128) (= x4829 (< x1128 x3471)) (<= x3471 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3471)) (not x3616)) (and (=> x4829 x4198) (=> (and (and (= x4054 1) (= 1 x1583) (= x3103 32) (= x1576 (x4034 (+ x3471 x1083)))) (not x4829)) x1352))))))))))))))))) (=> (and (and (= x4148 (x1507 (x4732 x266))) (= x2561 x2827) (not (> 599290589 x3978)) (= x4412 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x962) (and (< x962 96) (= true (<= x962 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (> 1466279372 x3978) (= x592 100) (= 100 x592) (= (x2102 (- x592 4)) x962) (not (> 4 x592)) (< 0 x4148) (= x515 x2255) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x82) (= x3978 599290589) (= x2299 x4471)) x2429) (and (=> (and (not x4412) (and (= (= x2827 x2561) x2655) (= x2561 x3390))) (and (=> (not x2655) x1772) (=> (and (and (= (= x2255 x515) x3883) (= x2909 x2255)) x2655) (and (=> (and x3883 (and (= (< x1695 x2299) x4820) (= x1695 (x4320 x15)) (= (x3800 (x4732 x2561) (x3454 1) 0) x15) (= x1303 x4471) (>= x1695 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1695))) (and (=> x4820 x1772) (=> (and (= x4648 (< x1695 x4471)) (not x4820)) (and (=> (and (and (= (x3800 (x4732 x2561) (x3454 1) 0) x4805) (<= 0 x1230) (= (x938 x647) x1230) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4471)) x4081) (= x1929 (x2102 (- x1695 x4471))) (= x2691 (> x1230 x4081)) (= x647 (x3800 (x4732 x2255) (x3454 1) 0)) (<= x1230 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x4648)) (and (=> x2691 x1772) (=> (and (not x2691) (and (= x3149 (> x1230 x4545)) (= (x4034 (+ x4471 x1230)) x4545))) (and (=> (and (and (= x997 (x3800 (x4732 x2255) (x3454 1) 0)) (<= x2340 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2340) (= x4146 (x3800 (x4732 x2561) (x3454 2) 0)) (= (x3800 (x4732 x515) x4146 0) x3190) (= x4497 (> x4471 x2340)) (= x2340 (x4377 x3190))) (not x3149)) (and (=> x4497 x1772) (=> (and (= x2864 (< x2340 x4471)) (not x4497)) (and (=> (and (not x2864) (and (= x2536 (x2102 (- x2340 x4471))) (= x1886 (x3800 (x4732 x515) x3736 0)) (= 1 x2402) (= 32 x4850) (= x3736 (x3800 (x4732 x2561) (x3454 2) 0)))) x503) (=> x2864 x1772))))) (=> x3149 x1772))))) (=> x4648 x1772))))) (=> (not x3883) x1772))))) (=> x4412 x1772))))))) (=> (and (= x756 x4350) x963) x135))) (=> (and (= x756 x4350) x4870) x135))))) (=> (and (not x953) (and (and (and (< x2681 988262939) (not (= 178855970 x2681)) (< 0 x1781) (= x2446 x681) (= x2681 242558722) (not (< x129 4)) (= x3854 6539370208772218570076773595062200405109424842860869254164860851635934461952) (not (= x2681 75483562)) (> 405663989 x2681) (= x1969 (x2102 (- x129 4))) (= (x1507 (x4732 x3180)) x1781) (< x2681 2217467699) (= x4324 x129) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1969) true) (< x1969 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1969)) x3310) (= 36 x129)) x3983) (= (= x3180 x335) x3983))) (and (=> (and (not x3310) (and (>= x276 0) (= x960 (> x681 x276)) (= x1088 (x3800 (x4732 x2827) (x3454 6) 0)) (<= x276 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2446 x4552) (= (x2487 x1088) x276))) (and (=> (and (and (>= x2889 0) (= x3658 (< x2889 x2446)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2889) (= (x3800 (x4732 x2827) (x3454 6) 0) x3394) (= (x2487 x3394) x2889)) (not x960)) (and (=> (and (= x2178 x3227) x3658) x2332) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3227) (<= 0 x3227) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2446)) x2007) (= x4547 (> x3227 x2007)) (= (x2102 (- x2889 x2446)) x746)) (not x3658)) (and (=> (and x4547 (= x3227 x2178)) x2332) (=> (and (and (= (= x2502 x266) x2103) (= 128 x4481) (= x4595 (x4034 (+ x2446 x3227))) (>= x2502 0) (= x4472 (x4034 (+ x3227 x2446))) (< x2502 1461501637330902918203684832716283019655932542976) (<= x2502 1461501637330902918203684832716283019655932542975)) (not x4547)) (and (=> (and (not x2103) (= x4681 (= x234 x2502))) (and (=> (and x4681 (and (= x3968 599290589) (= (x2102 (- x2781 4)) x2374) (= x4216 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> 988262939 x3968) (not (= x3968 405663989)) (= x1685 x4552) (not (< x2781 4)) (< 0 x4250) (= (x1507 (x4732 x234)) x4250) (not (< x3968 405663989)) (= x2781 100) (= x60 x2827) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2374) (and (< x2374 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2374)))) x311) (= x355 x3180) (< x3968 2217467699) (= x2781 100) (not (= 547091486 x3968)))) (and (=> (and (not x311) (and (= (= x60 x2827) x4529) (= x2078 x60))) (and (=> (not x4529) x603) (=> (and x4529 (and (= x1783 (= x3180 x355)) (= x355 x492))) (and (=> (and (and (= (x3800 (x4732 x60) (x3454 5) 0) x4936) (= x267 x1685) (>= x3040 0) (= x2289 (> x4552 x3040)) (= x3040 (x740 x4936)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3040)) x1783) (and (=> x2289 x603) (=> (and (and (= x1813 (x3800 (x4732 x60) (x3454 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3457) (>= x3457 0) (= (< x3457 x1685) x4375) (= x3457 (x740 x1813))) (not x2289)) (and (=> x4375 x603) (=> (and (not x4375) (and (= (x2102 (- x3457 x1685)) x1686) (= (< x2766 x3855) x199) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3855) (= (x3800 (x4732 x355) (x3454 5) 0) x3622) (<= 0 x3855) (= (x2772 x3622) x3855) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1685)) x2766))) (and (=> (and (and (= 1 x1550) (= 1 x1294) (= 32 x295) (= x2353 (x4034 (+ x1685 x3855)))) (not x199)) x1292) (=> x199 x603))))))) (=> (not x1783) x603))))) (=> x311 x603))) (=> (and (= (= x2502 x515) x1494) (not x4681)) (and (=> (and x1494 (and (= x2699 x2827) (= x1155 x3180) (< 0 x2669) (= 599290589 x3164) (= x1549 100) (= x1549 100) (not (= x3164 405663989)) (> 988262939 x3164) (< x3164 2217467699) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1751) (and (= true (<= x1751 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x1751))) x1771) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1780) (not (> 4 x1549)) (not (> 405663989 x3164)) (= x1751 (x2102 (- x1549 4))) (= (x1507 (x4732 x515)) x2669) (= x3809 x4552) (not (= x3164 547091486)))) (and (=> (and (and (= x1211 (= x2699 x2827)) (= x2699 x684)) (not x1771)) (and (=> (and (and (= (= x3180 x1155) x1017) (= x1155 x644)) x1211) (and (=> (not x1017) x2345) (=> (and (and (= x4240 x3809) (= (x4660 x233) x1312) (= (x3800 (x4732 x2699) (x3454 5) 0) x233) (>= x1312 0) (= x2692 (< x1312 x4552)) (<= x1312 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1017) (and (=> (and (and (= (x4660 x2069) x4901) (= x1376 (> x3809 x4901)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4901) (= x2069 (x3800 (x4732 x2699) (x3454 5) 0)) (<= 0 x4901)) (not x2692)) (and (=> x1376 x2345) (=> (and (not x1376) (and (= (x3939 x940) x1769) (= x940 (x3800 (x4732 x1155) (x3454 5) 0)) (<= x1769 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1769) (= x3142 (x2102 (- x4901 x3809))) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3809)) x4671) (= x898 (> x1769 x4671)))) (and (=> (and (and (= x1510 1) (= x1276 32) (= (x4034 (+ x1769 x3809)) x2599) (= x3692 1)) (not x898)) x2811) (=> x898 x2345))))) (=> x2692 x2345))))) (=> (not x1211) x2345))) (=> x1771 x2345))) (=> (and (not x1494) (and (and (and (> 2217467699 x1323) (not (= x1323 405663989)) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x411)) (< x411 96)) (> x411 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x784) (> x397 0) (not (= x1323 547091486)) (not (< x1323 405663989)) (= x2827 x3028) (not (< x4188 4)) (= x4188 100) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3643) (= (x2102 (- x4188 4)) x411) (< x1323 988262939) (= x3768 x4552) (= 100 x4188) (= x3180 x4089) (= x1323 599290589) (= x397 (x1507 (x4732 x3180)))) x4109) (= x4109 (= x2502 x3180)))) (and (=> (and (and (= x3028 x4041) (= x1711 (= x2827 x3028))) (not x784)) (and (=> (not x1711) x3205) (=> (and (and (= x4089 x4571) (= (= x3180 x4089) x3295)) x1711) (and (=> (and (and (<= 0 x3685) (= (> x4552 x3685) x3592) (= (x3800 (x4732 x3028) (x3454 5) 0) x4495) (<= x3685 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x571 x3768) (= (x2719 x4495) x3685)) x3295) (and (=> x3592 x3205) (=> (and (not x3592) (and (= x1068 (x2719 x2417)) (<= x1068 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3800 (x4732 x3028) (x3454 5) 0) x2417) (= x1304 (> x3768 x1068)) (>= x1068 0))) (and (=> x1304 x3205) (=> (and (and (= (x2102 (- x1068 x3768)) x238) (= (x916 x1707) x2049) (>= x2049 0) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3768)) x1568) (= (x3800 (x4732 x4089) (x3454 5) 0) x1707) (<= x2049 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2714 (< x1568 x2049))) (not x1304)) (and (=> x2714 x3205) (=> (and (and (= x2479 32) (= 1 x2973) (= x180 (x4034 (+ x3768 x2049))) (= x3859 1)) (not x2714)) x876))))))) (=> (not x3295) x3205))))) (=> x784 x3205))))))) (=> (and (and (= x4822 x2827) (= 599290589 x604) (< 0 x3039) (not (< x1917 4)) (= 100 x1917) (= x1963 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 100 x1917) (= x3039 (x1507 (x4732 x266))) (not (> 599290589 x604)) (= x832 x3180) (= x4552 x3687) (= x550 (or (> x2320 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x2320) (= (<= x2320 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (> 1466279372 x604) (= (x2102 (- x1917 4)) x2320)) x2103) (and (=> (and (not x550) (and (= x1145 (= x2827 x4822)) (= x4822 x1547))) (and (=> (and x1145 (and (= (= x832 x3180) x4516) (= x3797 x832))) (and (=> (not x4516) x3167) (=> (and x4516 (and (= x452 (> x4552 x317)) (= x2240 x3687) (= x3368 (x3800 (x4732 x4822) (x3454 1) 0)) (<= x317 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x317 (x4320 x3368)) (<= 0 x317))) (and (=> (and (= x839 (> x3687 x317)) (not x452)) (and (=> x839 x3167) (=> (and (not x839) (and (= (x3354 x1939) x3075) (= (> x3075 x1793) x3447) (= x1939 (x3800 (x4732 x832) (x3454 1) 0)) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3687)) x1793) (= (x3800 (x4732 x4822) (x3454 1) 0) x778) (= x184 (x2102 (- x317 x3687))) (<= x3075 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3075))) (and (=> x3447 x3167) (=> (and (and (= x3651 (< x1032 x3075)) (= x1032 (x4034 (+ x3687 x3075)))) (not x3447)) (and (=> x3651 x3167) (=> (and (and (>= x3594 0) (= (x3800 (x4732 x4822) (x3454 2) 0) x2715) (= (x3800 (x4732 x832) (x3454 1) 0) x1689) (= (x4377 x186) x3594) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3594) (= x186 (x3800 (x4732 x3180) x2715 0)) (= x153 (> x3687 x3594))) (not x3651)) (and (=> (and (not x153) (= (> x3687 x3594) x4640)) (and (=> x4640 x3167) (=> (and (and (= (x3800 (x4732 x3180) x3521 0) x1298) (= (x3800 (x4732 x4822) (x3454 2) 0) x3521) (= x2848 (x2102 (- x3594 x3687))) (= 1 x4271) (= 32 x3841)) (not x4640)) x1076))) (=> x153 x3167))))))))) (=> x452 x3167))))) (=> (not x1145) x3167))) (=> x550 x3167))))))))) (=> (and (= x2178 x3227) x960) x2332))) (=> (and (= x2178 x3227) x3310) x2332))))) (=> (and x3874 (and (> x3165 0) (= x1737 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3612) true) (> 32 x3612)) (> x3612 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x990) (not (< x1765 4)) (= x16 242558722) (< x16 988262939) (= x3612 (x2102 (- x1765 4))) (= x3165 (x1507 (x4732 x234))) (< x16 405663989) (< x16 2217467699) (not (= 75483562 x16)) (not (= 178855970 x16)) (= x1765 36) (= x1765 x4324) (= x1015 x681))) (and (=> (and (and (= (x968 x3120) x2197) (<= x2197 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2197) (= x1015 x4515) (= (x3800 (x4732 x2827) (x3454 6) 0) x3120) (= x3940 (> x681 x2197))) (not x1737)) (and (=> (and (not x3940) (and (= x2360 (x3800 (x4732 x2827) (x3454 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3175) (= x3175 (x968 x2360)) (= (> x1015 x3175) x38) (<= 0 x3175))) (and (=> (and (not x38) (and (= x4480 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1015))) (<= x787 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2395 (x2102 (- x3175 x1015))) (<= 0 x787) (= x4910 (> x787 x4480)))) (and (=> (and (= x787 x3116) x4910) x687) (=> (and (not x4910) (and (= x4682 128) (<= x2905 1461501637330902918203684832716283019655932542975) (= (x4034 (+ x787 x1015)) x668) (<= 0 x2905) (= (x4034 (+ x1015 x787)) x4151) (< x2905 1461501637330902918203684832716283019655932542976) (= (= x2905 x266) x3647))) (and (=> (and (and (= (x2102 (- x4836 4)) x1639) (= x4515 x3289) (= x3388 (or (and (= true (<= x1639 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x1639)) (> x1639 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (< x181 599290589)) (> 1466279372 x181) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2814) (= x181 599290589) (< 0 x4531) (= x4836 100) (= x4454 x2827) (not (> 4 x4836)) (= x4836 100) (= x4531 (x1507 (x4732 x266))) (= x234 x1349)) x3647) (and (=> x3388 x891) (=> (and (not x3388) (and (= x4454 x819) (= x1160 (= x2827 x4454)))) (and (=> (not x1160) x891) (=> (and x1160 (and (= x645 (= x1349 x234)) (= x1349 x378))) (and (=> (and x645 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2709) (= x1005 x3289) (= (< x2709 x4515) x3155) (= x2019 (x3800 (x4732 x4454) (x3454 1) 0)) (= (x4320 x2019) x2709) (<= 0 x2709))) (and (=> x3155 x891) (=> (and (not x3155) (= (< x2709 x3289) x2030)) (and (=> x2030 x891) (=> (and (not x2030) (and (= (x3800 (x4732 x4454) (x3454 1) 0) x1140) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3289)) x969) (<= 0 x3482) (= x3482 (x1143 x2930)) (= x3520 (x2102 (- x2709 x3289))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3482) (= x415 (> x3482 x969)) (= (x3800 (x4732 x1349) (x3454 1) 0) x2930))) (and (=> (and (and (= x1841 (> x3482 x1592)) (= x1592 (x4034 (+ x3482 x3289)))) (not x415)) (and (=> (and (not x1841) (and (= x1469 (x3800 (x4732 x4454) (x3454 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1366) (= (x3800 (x4732 x234) x1469 0) x4337) (<= 0 x1366) (= (> x3289 x1366) x2577) (= (x4377 x4337) x1366) (= x352 (x3800 (x4732 x1349) (x3454 1) 0)))) (and (=> x2577 x891) (=> (and (not x2577) (= (< x1366 x3289) x1527)) (and (=> x1527 x891) (=> (and (not x1527) (and (= x1412 (x2102 (- x1366 x3289))) (= 32 x1373) (= (x3800 (x4732 x4454) (x3454 2) 0) x2489) (= x1064 1) (= (x3800 (x4732 x234) x2489 0) x1681))) x578))))) (=> x1841 x891))) (=> x415 x891))))))) (=> (not x645) x891))))))) (=> (and (not x3647) (= x1941 (= x234 x2905))) (and (=> (and (and (= x902 x2827) (= (x1507 (x4732 x234)) x1700) (= x923 (or (> x2515 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2515 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2515 96)))) (= x3050 100) (< x2572 988262939) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1238) (not (= x2572 405663989)) (= (x2102 (- x3050 4)) x2515) (= x2572 599290589) (> x1700 0) (= x1829 x234) (not (= 547091486 x2572)) (not (> 405663989 x2572)) (> 2217467699 x2572) (not (> 4 x3050)) (= x4515 x3711) (= 100 x3050)) x1941) (and (=> (and (and (= (= x2827 x902) x2246) (= x439 x902)) (not x923)) (and (=> (not x2246) x748) (=> (and x2246 (and (= (= x234 x1829) x2969) (= x1867 x1829))) (and (=> (and (and (<= x1936 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x740 x90) x1936) (= x3711 x1344) (= (> x4515 x1936) x3141) (= x90 (x3800 (x4732 x902) (x3454 5) 0)) (>= x1936 0)) x2969) (and (=> (and (not x3141) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2810) (= (x3800 (x4732 x902) (x3454 5) 0) x4772) (= x3184 (> x3711 x2810)) (>= x2810 0) (= (x740 x4772) x2810))) (and (=> x3184 x748) (=> (and (and (>= x2993 0) (= x4079 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3711))) (= (x3800 (x4732 x1829) (x3454 5) 0) x4065) (= x2993 (x2684 x4065)) (<= x2993 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3802 (< x4079 x2993)) (= (x2102 (- x2810 x3711)) x1692)) (not x3184)) (and (=> (and (and (= x4349 (x4034 (+ x3711 x2993))) (= x2149 32) (= x3132 1) (= x1056 1)) (not x3802)) x3752) (=> x3802 x748))))) (=> x3141 x748))) (=> (not x2969) x748))))) (=> x923 x748))) (=> (and (= (= x2905 x515) x728) (not x1941)) (and (=> (and (and (not (= 547091486 x1489)) (= 599290589 x1489) (= x2827 x589) (not (= x1489 405663989)) (not (< x422 4)) (= x4515 x33) (= x422 100) (= x2652 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x422 100) (> 2217467699 x1489) (> x4486 0) (= x3286 (x2102 (- x422 4))) (< x1489 988262939) (= (or (and (> 96 x3286) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3286) true)) (> x3286 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2026) (= x4486 (x1507 (x4732 x515))) (not (> 405663989 x1489)) (= x234 x4292)) x728) (and (=> x2026 x1875) (=> (and (and (= x589 x3700) (= (= x2827 x589) x154)) (not x2026)) (and (=> (not x154) x1875) (=> (and (and (= x196 x4292) (= (= x4292 x234) x3671)) x154) (and (=> (not x3671) x1875) (=> (and x3671 (and (= x4280 (x3800 (x4732 x589) (x3454 5) 0)) (>= x1066 0) (= x927 (> x4515 x1066)) (= x33 x758) (= x1066 (x4660 x4280)) (<= x1066 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (<= 0 x2976) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2976) (= (x3800 (x4732 x589) (x3454 5) 0) x4940) (= x2976 (x4660 x4940)) (= (< x2976 x33) x1573)) (not x927)) (and (=> (and (and (= x1823 (x2102 (- x2976 x33))) (>= x2531 0) (= x3436 (> x2531 x3426)) (= x4785 (x3800 (x4732 x4292) (x3454 5) 0)) (= x2531 (x3478 x4785)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2531) (= x3426 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x33)))) (not x1573)) (and (=> x3436 x1875) (=> (and (and (= x4882 1) (= x4404 (x4034 (+ x33 x2531))) (= 1 x3331) (= 32 x3307)) (not x3436)) x4899))) (=> x1573 x1875))) (=> x927 x1875))))))))) (=> (and (and (= x182 (= x2905 x3180)) (and (and (= x4515 x4835) (not (< x3424 405663989)) (= x4380 (x2102 (- x1935 4))) (= x1935 100) (= x1831 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (x1507 (x4732 x3180)) x4881) (not (< x1935 4)) (= x234 x369) (< x3424 2217467699) (> 988262939 x3424) (= x3424 599290589) (= x1935 100) (> x4881 0) (not (= 405663989 x3424)) (= x4929 (or (> x4380 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x4380) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4380) true)))) (not (= x3424 547091486)) (= x2827 x1495)) x182)) (not x728)) (and (=> x4929 x4501) (=> (and (and (= (= x1495 x2827) x1680) (= x4639 x1495)) (not x4929)) (and (=> (not x1680) x4501) (=> (and (and (= x369 x2136) (= (= x234 x369) x4425)) x1680) (and (=> (and x4425 (and (= x3922 (x3800 (x4732 x1495) (x3454 5) 0)) (>= x2261 0) (<= x2261 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4835 x1048) (= x2261 (x2719 x3922)) (= (< x2261 x4515) x4069))) (and (=> x4069 x4501) (=> (and (and (<= x3228 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3228) (= x3401 (> x4835 x3228)) (= x978 (x3800 (x4732 x1495) (x3454 5) 0)) (= (x2719 x978) x3228)) (not x4069)) (and (=> (and (not x3401) (and (<= x799 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x2107 x799) x1684) (= (x2102 (- x3228 x4835)) x2038) (= x2107 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4835))) (= x799 (x155 x4406)) (>= x799 0) (= x4406 (x3800 (x4732 x369) (x3454 5) 0)))) (and (=> x1684 x4501) (=> (and (not x1684) (and (= (x4034 (+ x799 x4835)) x895) (= x699 1) (= 1 x4256) (= 32 x488))) x108))) (=> x3401 x4501))))) (=> (not x4425) x4501))))))))))))))) (=> (and (= x787 x3116) x38) x687))) (=> (and x3940 (= x787 x3116)) x687))) (=> (and (= x787 x3116) x1737) x687))))) x3404))
(assert (= x4753 (and x4390 (not x4797))))
(assert (x360 x1048))
(assert (= (and x3137 (not x3441)) x2440))
(assert (x360 x3065))
(assert (= (and x526 x541) x2922))
(assert (=> (>= 10000 x4292) (= (x4732 x4292) (x3454 x4292))))
(assert (x360 x4466))
(assert (x4300 x2809))
(assert (= (and (not x102) x2331) x4619))
(assert (= x3986 (and x4848 (not x3174))))
(assert (x2835 x2475))
(assert (x360 x554))
(assert (x360 x4211))
(assert (= x318 (or x1908 x280)))
(assert (= (x1877 (x3243 x1682 1)) (+ (x1877 x1682) 1)))
(assert (= x529 (and (not x1839) x3333)))
(assert (x4300 x835))
(assert (x360 x2319))
(assert (x360 x2178))
(assert (= (or x4321 x1750) x622))
(assert (= x1911 (x1877 (x4732 x1911))))
(assert (= x1338 (and (not x983) x2589)))
(assert (x360 x2859))
(assert (x360 x1899))
(assert (x360 x3007))
(assert (x360 x2918))
(assert (= (and x1314 (not x4719)) x856))
(assert (= (and (not x4478) x1222) x4702))
(assert (x360 x4896))
(assert (= x3518 (and x260 x976)))
(assert (x360 x4389))
(assert (x4300 x152))
(assert (x360 x4465))
(assert (x360 x1470))
(assert (x2915 x633))
(assert (=> (<= x733 10000) (= (x3454 x733) (x4732 x733))))
(assert (= x2540 (and x4670 (not x3901))))
(assert (x4300 x4483))
(assert (x711 x2685))
(assert (x2835 x1426))
(assert (and (and (= (- (* (- x3832 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3832 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3832 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3832) (- (* x3832 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3832))) (= (x4060 1000000000000000000 (- x3832 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x3832 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x3832 1000000000000000000) (x4060 1000000000000000000 x3832)) (x1520 1000000000000000000 x3832) (x3818 1000000000000000000 x3832) (x3063 1000000000000000000 x3832) (x4067 1000000000000000000 x3832) (x3727 1000000000000000000 x3832)))
(assert (= (and x1914 x9) x2072))
(assert (= (and (not x452) x4171) x192))
(assert (x711 x1317))
(assert (x4300 x1830))
(assert (x2915 x1067))
(assert (= (+ 1 (x1877 x1809)) (x1877 (x3243 x1809 1))))
(assert (x360 x4236))
(assert (x360 x694))
(assert (x360 x348))
(assert (=> (<= x424 10000) (= (x4732 x424) (x3454 x424))))
(assert (x360 x3533))
(assert (x360 x3289))
(assert (x360 x212))
(assert (x360 x4536))
(assert (x360 x797))
(assert (x4300 x3540))
(assert (= x4142 (and x500 x682)))
(assert (x360 x4312))
(assert (= x3114 (x1877 (x4732 x3114))))
(assert (= (=> (and (= x947 x4163) (= x996 x1794)) x1302) x4677))
(assert (x360 x1354))
(assert (x360 x1110))
(assert (x360 x2465))
(assert (= (=> (= x2737 (< 0 x3796)) (and (=> (and (and (or (and (not x2257) (= x255 x2257)) (and x2257 (and (= x126 (x3800 (x4732 x1024) x4106 0)) (= (x3304 x3125) x3513) (= (x3243 x126 2) x3125) (>= x3513 0) (= (not x125) x255) (= x125 (> x3796 x3513)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3513)))) (and (<= x2348 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 0 x556) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x556) (= x4755 (x3243 x1421 2)) (<= x1024 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x1024) (<= 0 x2348) (= (ite (> x2348 0) (not (= 0 x1024)) (> x2348 0)) x2257) (= x1024 (x96 x3861)) (not (= x3030 0)) (<= 0 x556) (= x3861 (x3243 x4106 1)) (= (x3800 (x4732 x3030) x4106 0) x1421) (= (x3304 x4755) x556) (<= 0 x1024))) x2737) x2013) (=> (not x2737) x2959))) x1981))
(assert (x4300 x4902))
(assert (x360 x1829))
(assert (= (=> (and (= (= 0 x1746) x544) (or x544 (not x544))) x3468) x4609))
(assert (= x4268 (=> (and (= 0 x1260) (= x2708 x85)) x1117)))
(assert (x360 x42))
(assert (= (x4732 2134560854) (x3454 2134560854)))
(assert (x360 x4773))
(assert (x2835 (- x633 x1806)))
(assert (x360 x3407))
(assert (=> (>= 10000 x783) (= (x3454 x783) (x4732 x783))))
(assert (= x944 (and x1286 x3839)))
(assert (= x1787 (or x4540 x4295)))
(assert (x4300 x3092))
(assert (= x3077 (and x2103 x4604)))
(assert (= x2357 (=> (and (= x2591 x2919) (= x213 x4854)) x1956)))
(assert (x2835 x1806))
(assert (x360 x4868))
(assert (x360 x3953))
(assert (x360 x3437))
(assert (x360 x2439))
(assert (= x3220 (and x1536 (not x116))))
(assert (= (and x669 (not x2147)) x2896))
(assert (= (x4732 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x3454 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x360 x2230))
(assert (and (and (= (- (* (- x310 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x310 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x310 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x310) (- (* x310 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x310))) (= (x4060 1000000000000000000 (- x310 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x310 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x310 1000000000000000000) (x4060 1000000000000000000 x310)) (x1520 1000000000000000000 x310) (x3818 1000000000000000000 x310) (x3063 1000000000000000000 x310) (x4067 1000000000000000000 x310) (x3727 1000000000000000000 x310)))
(assert (= (and x4275 x3392) x751))
(assert (x4300 x1))
(assert (= (and x190 x1297) x4774))
(assert (x360 x1258))
(assert (x360 x4393))
(assert (x3545 x1317))
(assert (= (x1877 (x4732 x1184)) x1184))
(assert (= x1694 (=> (= x1006 (= x4172 x2318)) (and (=> (and (= (> x4172 0) x1985) (not x1006)) (and (=> (and (= x3580 x4248) (not x1985)) x762) (=> (and (and (or (and (= (x3243 x3247 1) x3748) x679) (and (not x679) (and (= (x3243 x2508 1) x2867) (= (x3800 (x4732 x4723) x3247 0) x2508)))) (and (>= x1853 0) (>= 1461501637330902918203684832716283019655932542975 x4723) (= (x4354 x3148) x4064) (>= x4723 0) (> 1461501637330902918203684832716283019655932542976 x4723) (= (x4034 (+ x4248 96)) x563) (not (= 0 x4064)) (>= x4064 0) (= (x3243 x4063 1) x3148) (= x4534 (x3800 (x4732 x2445) x3247 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4064) (= (= 0 x4723) x679) (= x4723 (x4537 x4534)) (= (x2229 x4063) x1853) (<= x1853 1461501637330902918203684832716283019655932542975) (= x4063 (x3243 x4534 1)) (< x1853 1461501637330902918203684832716283019655932542976))) x1985) x3033))) (=> (and (= x1440 x4248) x1006) x301)))))
(assert (= (x1877 (x3243 x1880 1)) (+ 1 (x1877 x1880))))
(assert (= x722 (and x3590 (not x949))))
(assert (= (and x4855 x3814) x2448))
(assert (x360 x1124))
(assert (x4300 x3733))
(assert (x360 x892))
(assert (= x3921 (and x282 x279)))
(assert (x360 x4115))
(assert (=> (<= x3540 10000) (= (x4732 x3540) (x3454 x3540))))
(assert (x360 x1821))
(assert (x360 x644))
(assert (x360 x2973))
(assert (= x3428 (and x1964 x4101)))
(assert (= (+ 1 (x1877 x2414)) (x1877 (x3243 x2414 1))))
(assert (x360 x2543))
(assert (= x3686 (x1877 (x4732 x3686))))
(assert (= (x4732 35417553099779373699389112480655434059402432070290151981503827724506945814528) (x3454 35417553099779373699389112480655434059402432070290151981503827724506945814528)))
(assert (x360 x3265))
(assert (x360 x4251))
(assert (=> (>= 10000 x4089) (= (x3454 x4089) (x4732 x4089))))
(assert (=> (<= x3391 10000) (= (x3454 x3391) (x4732 x3391))))
(assert (x360 x4749))
(assert (x360 x771))
(assert (x360 x908))
(assert (x360 x3954))
(assert (= (x3454 398450620) (x4732 398450620)))
(assert (x711 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= x2783 (and x3447 x2883)))
(assert (= (or x652 x1589) x4014))
(assert (x360 x1021))
(assert (x360 x774))
(assert (x360 x4608))
(assert (x4300 x3943))
(assert (= x2350 (x1877 (x4732 x2350))))
(assert (= (x3454 2236579515) (x4732 2236579515)))
(assert (=> (>= 10000 x1974) (= (x4732 x1974) (x3454 x1974))))
(assert (x4300 x3574))
(assert (x360 x4781))
(assert (x360 x1658))
(assert (= (and x3516 (not x784)) x3081))
(assert (x360 x1780))
(assert (=> (<= x4094 10000) (= (x3454 x4094) (x4732 x4094))))
(assert (= (x4732 2929553584) (x3454 2929553584)))
(assert (= (and x544 x3770) x3527))
(assert (x4300 x1986))
(assert (= x4369 (and x3181 (not x1938))))
(assert (= (and x208 x913) x2338))
(assert (x360 x1202))
(assert (x360 x2796))
(assert (x360 x41))
(assert (x4715 x2317))
(assert (x360 x4881))
(assert (x360 x2174))
(assert (= x831 (and x2639 (not x2641))))
(assert (x360 x4723))
(assert (= x4128 (=> (and (= x2512 x1353) (= x2548 x601) (= x98 x3235)) x3084)))
(assert (= x3929 (and x898 x2763)))
(assert (= x1113 (=> (and (= (x3243 x1918 1) x2884) (= x2029 (x3800 (x4732 x3030) x4106 0)) (= x1918 (x3243 x2029 1))) x1981)))
(assert (= (and (not x679) x3037) x4588))
(assert (=> (<= x1853 10000) (= (x3454 x1853) (x4732 x1853))))
(assert (and (x877 x1332 1461501637330902918203684832716283019655932542976) (x345 x1332 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1332 (+ (x2968 x1332 1461501637330902918203684832716283019655932542976) (* (x3413 x1332 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x4363 x1332 1461501637330902918203684832716283019655932542976)))
(assert (x360 x962))
(assert (x360 x3134))
(assert (x360 x1811))
(assert (x360 x2542))
(assert (= x1743 (x1877 (x4732 x1743))))
(assert (= (=> (and (or (not x682) x682) (= x682 (= x3134 0))) x1656) x4787))
(assert (x4300 x2731))
(assert (= x2359 (or x3505 (and x540 (not x438)))))
(assert (= (x3454 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x4732 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x1107 x3093 x633))
(assert (= x4855 (or x3428 x4447)))
(assert (= x1739 (x1877 (x4732 x1739))))
(assert (x360 x1031))
(assert (= x1451 (or x702 x1333 x2851 x792 x309 x2694)))
(assert (x360 x4757))
(assert (= (and x2186 (not x4572)) x646))
(assert (= (x1877 (x4732 x1954)) x1954))
(assert (= x4902 (x1877 (x4732 x4902))))
(assert (= (=> (and (= x3953 x2053) (= x2135 0)) x3959) x4348))
(assert (x360 x2204))
(assert (= (and x574 x2569) x3111))
(assert (= x2774 (and x394 (not x3172))))
(assert (x360 x1350))
(assert (= x881 (and x3258 (not x3489))))
(assert (= (and (not x2429) x1571) x2525))
(assert (x360 x436))
(assert (x360 x1479))
(assert (= x4644 (x1877 (x4732 x4644))))
(assert (x360 x4511))
(assert (x4300 x4253))
(assert (x360 x3480))
(assert (x360 x793))
(assert (x360 x3175))
(assert (=> (>= 10000 x1264) (= (x3454 x1264) (x4732 x1264))))
(assert (x4300 x3848))
(assert (=> (<= x1080 10000) (= (x4732 x1080) (x3454 x1080))))
(assert (= x2380 (and x2606 x3150)))
(assert (= x3250 (and x3869 x1304)))
(assert (= (and x2983 (not x3761)) x1719))
(assert (x1107 x1426 (- x4674 x3093)))
(assert (x360 x1633))
(assert (x360 x2233))
(assert (= (=> (and (= x4833 x386) (= x4008 x4293)) x315) x4701))
(assert (x360 x3975))
(assert (= (and x4602 x2326) x517))
(assert (= x3206 (and x2057 x3596)))
(assert (x360 x1576))
(assert (x4300 x1155))
(assert (= (and x4530 (not x785)) x2757))
(assert (= (and x1941 x4162) x3210))
(assert (= x2874 (and x4525 x31)))
(assert (x4300 x1184))
(assert (= (and x153 x1356) x4628))
(assert (x360 x902))
(assert (x360 x206))
(assert (= (and x2031 x1453) x67))
(assert (x2835 (- x4674 x1426)))
(assert (= x1922 (and x3248 (not x2143))))
(assert (= (and x4070 (not x1173)) x3833))
(assert (x1107 x633 (- x3093 x1426)))
(assert (= (=> (and (or (and (not x949) (and (and (<= 0 x2470) (>= 1461501637330902918203684832716283019655932542975 x2470) (> 1461501637330902918203684832716283019655932542976 x2470) (= x2470 (x96 x3861)) (= x2627 (= x2470 0))) (or x2627 (and (not x2627) (and (= x179 (x2853 x1251)) (<= x179 1461501637330902918203684832716283019655932542975) (>= x179 0) (> 1461501637330902918203684832716283019655932542976 x179) (= x1251 (x3243 x3861 1))))))) (and x949 (and (or (not x2945) (and x2945 (and (<= x4277 1461501637330902918203684832716283019655932542975) (>= x4277 0) (< x4277 1461501637330902918203684832716283019655932542976) (= x3 (x3800 (x4732 x5) x4106 0)) (= (x4384 x3) x4277)))) (and (= (< 0 x4859) x2945) (> 1461501637330902918203684832716283019655932542976 x1361) (<= x1361 1461501637330902918203684832716283019655932542975) (= x1361 (x96 x3861)) (= (x2102 (- x5 x1361)) x4859) (<= 0 x1361))))) (= (ite (> x2348 x3845) (not (= 0 x5)) (> x2348 x3845)) x949)) x3528) x2916))
(assert (= (and x3740 (not x3155)) x929))
(assert (x360 x3982))
(assert (x360 x4642))
(assert (= (and (not x4897) x4058) x3519))
(assert (x360 x4451))
(assert (= x3690 (or x828 x2346)))
(assert (= x1487 (and x2745 x4164)))
(assert (x360 x3103))
(assert (= (and x4913 x4045) x1360))
(assert (x4300 x3044))
(assert (x4300 x4454))
(assert (= x280 (and x1100 x4031)))
(assert (x360 x3219))
(assert (= (=> (and (= x2585 0) (= x4421 x1201)) x1732) x4705))
(assert (= x4858 (and x2065 x2642)))
(assert (x360 x1253))
(assert (x360 x4579))
(assert (= x2975 (and x1883 x1893)))
(assert (= (and (not x4866) x3794) x896))
(assert (= x2898 (and x1564 (not x384))))
(assert (= (and x62 x476) x3991))
(assert (x4300 x4644))
(assert (x360 x1833))
(assert (x360 x1556))
(assert (x360 x1054))
(assert (= (and (not x4923) x3631) x4680))
(assert (x360 x2814))
(assert (= 1000000000000000000 (x1877 (x3454 1000000000000000000))))
(assert (x360 x1005))
(assert (and (and (= (- (* (- x2462 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x2462 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x2462 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x2462) (- (* x2462 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2462))) (= (x4060 1000000000000000000 (- x2462 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x2462 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x2462 1000000000000000000) (x4060 1000000000000000000 x2462)) (x1520 1000000000000000000 x2462) (x3818 1000000000000000000 x2462) (x3063 1000000000000000000 x2462) (x4067 1000000000000000000 x2462) (x3727 1000000000000000000 x2462)))
(assert (x360 x129))
(assert (= (and (not x4895) x1101) x3595))
(assert (= (x1877 (x3454 2929553584)) 2929553584))
(assert (= (and (not x2246) x115) x1396))
(assert (= (or x4858 x3023) x4807))
(assert (x360 x3610))
(assert (= (or (and x4913 (not x4045)) x1360) x4365))
(assert (= x2845 (x1877 (x4732 x2845))))
(assert (x360 x82))
(assert (x360 x3504))
(assert (= x393 (=> (and (= x1070 (x4034 (+ 32 x4242))) (= (= x2906 x266) x572) (= x4242 (x4034 (+ x4115 4))) (= (x4034 (+ x1070 32)) x2904)) (and (=> (and (not x572) (= x189 (= x2906 x234))) (and (=> (and (= (= x515 x2906) x1708) (not x189)) (and (=> (and (and (= x2633 (= x2906 x3180)) (and (and (= x2777 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 4 x4487)) (not (< x981 405663989)) (> 2217467699 x981) (= 100 x4487) (< x981 988262939) (= x674 (x2102 (- x4487 4))) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x674) (and (< x674 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x674) true))) x4895) (= x4556 x1359) (= x2991 x4040) (not (= x981 405663989)) (not (= 547091486 x981)) (> x3886 0) (= x981 599290589) (= x1634 x2827) (= x3886 (x1507 (x4732 x3180)))) x2633)) (not x1708)) (and (=> x4895 x3908) (=> (and (not x4895) (and (= (= x4040 x3836) x2528) (= (x4728 1461501637330902918203684832716283019655932542975 x4040) x3836) (= x4783 x2991))) (and (=> (not x2528) x3908) (=> (and x2528 (and (= x3138 x1634) (= x1859 (= x1634 x2827)))) (and (=> (not x1859) x3908) (=> (and x1859 (and (= (x4728 1461501637330902918203684832716283019655932542975 x2991) x3114) (= x4388 x1359) (<= x1976 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x754 (x3800 (x4732 x3114) (x3454 5) 0)) (= x4593 (> x4556 x1976)) (= (x1766 x754) x1976) (>= x1976 0))) (and (=> x4593 x3908) (=> (and (not x4593) (and (<= 0 x1658) (= (x1766 x2979) x1658) (= (> x1359 x1658) x1938) (= (x3800 (x4732 x3044) (x3454 5) 0) x2979) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1658) (= (x4728 1461501637330902918203684832716283019655932542975 x2991) x3044))) (and (=> x1938 x3908) (=> (and (and (<= 0 x858) (= x2092 (> x858 x2902)) (= x2902 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1359))) (= (x925 x4694) x858) (= (x3800 (x4732 x1634) (x3454 5) 0) x4694) (= x3186 (x2102 (- x1658 x1359))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x858)) (not x1938)) (and (=> (and (not x2092) (and (= x2840 1) (= x4778 (x4034 (+ x1359 x858))) (= x568 32) (= 1 x862))) x2227) (=> x2092 x3908))))))))))))) (=> (and (and (> 2217467699 x4757) (not (< x4757 405663989)) (= x3596 (or (and (= (<= x483 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x483)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x483))) (= x152 x2827) (> x3815 0) (= x1164 100) (= x3815 (x1507 (x4732 x515))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2570) (= (x2102 (- x1164 4)) x483) (not (= x4757 405663989)) (not (< x1164 4)) (= x4145 x4040) (= x4556 x3197) (not (= 547091486 x4757)) (< x4757 988262939) (= 599290589 x4757)) x1708) (and (=> (and (and (= (x4728 1461501637330902918203684832716283019655932542975 x4040) x4642) (= x4145 x4432) (= (= x4642 x4040) x3546)) (not x3596)) (and (=> (and (and (= (= x152 x2827) x2195) (= x152 x2316)) x3546) (and (=> (and (and (>= x2880 0) (= (x3800 (x4732 x2967) (x3454 5) 0) x370) (= x1168 (< x2880 x4556)) (= (x4728 1461501637330902918203684832716283019655932542975 x4145) x2967) (= x3628 x3197) (<= x2880 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2880 (x2132 x370))) x2195) (and (=> (and (and (= x4134 (x3800 (x4732 x733) (x3454 5) 0)) (= (< x985 x3197) x433) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x985) (>= x985 0) (= x985 (x2132 x4134)) (= x733 (x4728 1461501637330902918203684832716283019655932542975 x4145))) (not x1168)) (and (=> (and (not x433) (and (= (< x312 x2552) x421) (= (x3999 x3625) x2552) (<= x2552 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3800 (x4732 x152) (x3454 5) 0) x3625) (= x312 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3197))) (<= 0 x2552) (= (x2102 (- x985 x3197)) x3544))) (and (=> x421 x3887) (=> (and (not x421) (and (= (x4034 (+ x2552 x3197)) x3364) (= 1 x991) (= 1 x4083) (= x1234 32))) x3741))) (=> x433 x3887))) (=> x1168 x3887))) (=> (not x2195) x3887))) (=> (not x3546) x3887))) (=> x3596 x3887))))) (=> (and x189 (and (< x203 2217467699) (< 0 x3619) (> 988262939 x203) (= x3619 (x1507 (x4732 x234))) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1560) true) (> 96 x1560)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1560)) x3088) (= x203 599290589) (= x1560 (x2102 (- x1444 4))) (= x4147 x4556) (not (> 4 x1444)) (not (< x203 405663989)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x948) (= x4040 x3618) (not (= x203 547091486)) (not (= x203 405663989)) (= 100 x1444) (= x2827 x3090))) (and (=> (and (not x3088) (and (= x3402 (x4728 1461501637330902918203684832716283019655932542975 x4040)) (= x4087 x3618) (= (= x4040 x3402) x1047))) (and (=> (not x1047) x3850) (=> (and x1047 (and (= (= x2827 x3090) x239) (= x3090 x454))) (and (=> (not x239) x3850) (=> (and x239 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1599) (= x2665 (< x1599 x4556)) (>= x1599 0) (= x1599 (x2886 x588)) (= x2076 x4147) (= x3666 (x4728 1461501637330902918203684832716283019655932542975 x3618)) (= (x3800 (x4732 x3666) (x3454 5) 0) x588))) (and (=> x2665 x3850) (=> (and (and (= x4016 (x4728 1461501637330902918203684832716283019655932542975 x3618)) (= x2847 (x3800 (x4732 x4016) (x3454 5) 0)) (= (< x2891 x4147) x2143) (<= 0 x2891) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2891) (= (x2886 x2847) x2891)) (not x2665)) (and (=> (and (and (<= x2129 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3769 x4453) x2129) (<= 0 x2129) (= x4288 (< x2188 x2129)) (= (x3800 (x4732 x3090) (x3454 5) 0) x4453) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4147)) x2188) (= (x2102 (- x2891 x4147)) x1833)) (not x2143)) (and (=> (and (not x4288) (and (= 32 x3699) (= x731 1) (= x3995 1) (= x690 (x4034 (+ x4147 x2129))))) x1802) (=> x4288 x3850))) (=> x2143 x3850))))))))) (=> x3088 x3850))))) (=> (and x572 (and (= x3664 (or (> x4395 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x4395 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x4395)))) (> x3975 0) (= x2827 x4483) (= x4114 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3673 100) (< x4113 1466279372) (= x4040 x2180) (not (< x4113 599290589)) (not (> 4 x3673)) (= 599290589 x4113) (= x3975 (x1507 (x4732 x266))) (= x4395 (x2102 (- x3673 4))) (= x4379 x4556))) (and (=> (and (and (= (= x3475 x4040) x2551) (= (x4728 1461501637330902918203684832716283019655932542975 x4040) x3475)) (not x3664)) (and (=> (not x2551) x175) (=> (and (and (= x4483 x1882) (= (= x4483 x2827) x4323)) x2551) (and (=> (not x4323) x175) (=> (and x4323 (and (= x1012 (x3800 (x4732 x1206) (x3454 1) 0)) (>= x2319 0) (= (> x4556 x2319) x4635) (= (x4728 1461501637330902918203684832716283019655932542975 x2180) x1206) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2319) (= x4379 x1110) (= (x4254 x1012) x2319))) (and (=> x4635 x175) (=> (and (not x4635) (= (< x2319 x4379) x2887)) (and (=> (and (and (= (x2102 (- x2319 x4379)) x1443) (= x2350 (x4728 1461501637330902918203684832716283019655932542975 x2180)) (<= 0 x4892) (= (x3800 (x4732 x2350) (x3454 1) 0) x2929) (<= x4892 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3076 x845) x4892) (= x845 (x3800 (x4732 x4483) (x3454 1) 0)) (= (< x3045 x4892) x1392) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4379)) x3045)) (not x2887)) (and (=> (and (not x1392) (and (= x3441 (< x3660 x4892)) (= x3660 (x4034 (+ x4379 x4892))))) (and (=> x3441 x175) (=> (and (and (= (x4728 1461501637330902918203684832716283019655932542975 x2180) x4168) (= (> x4379 x4022) x2498) (= x2832 (x3800 (x4732 x4168) (x3454 2) 0)) (= (x3800 (x4732 x4483) (x3454 1) 0) x2961) (<= x4022 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4022) (= x1796 (x3800 (x4732 x2827) x2832 0)) (= x4022 (x2437 x1796))) (not x3441)) (and (=> x2498 x175) (=> (and (= x2535 (< x4022 x4379)) (not x2498)) (and (=> x2535 x175) (=> (and (and (= x1637 (x3800 (x4732 x670) (x3454 2) 0)) (= x2994 (x2102 (- x4022 x4379))) (= x670 (x4728 1461501637330902918203684832716283019655932542975 x2180)) (= x2055 32) (= x1266 (x3800 (x4732 x2827) x1637 0)) (= x4643 1)) (not x2535)) x2221))))))) (=> x1392 x175))) (=> x2887 x175))))))))) (=> x3664 x175)))))))
(assert (= (x1877 (x3243 x1329 1)) (+ 1 (x1877 x1329))))
(assert (x360 x4217))
(assert (x360 x1276))
(assert (x360 x3212))
(assert (x360 x1164))
(assert (= (and (not x1985) x4522) x1497))
(assert (x360 x3367))
(assert (x4300 x4197))
(assert (x360 x386))
(assert (= x2604 (and (not x4099) x4381)))
(assert (and (and (= (- (* (- x774 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x774 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x774 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x774) (- (* x774 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x774))) (= (x4060 1000000000000000000 (- x774 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x774 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x774 1000000000000000000) (x4060 1000000000000000000 x774)) (x1520 1000000000000000000 x774) (x3818 1000000000000000000 x774) (x3063 1000000000000000000 x774) (x4067 1000000000000000000 x774) (x3727 1000000000000000000 x774)))
(assert (x360 x143))
(assert (=> (<= x1126 10000) (= (x4732 x1126) (x3454 x1126))))
(assert (= (and x4754 x1832) x2573))
(assert (= x2121 (and x4333 (not x189))))
(assert (= (and x949 x3590) x3131))
(assert (x2835 x3093))
(assert (x360 x4706))
(assert (x360 x4489))
(assert (= x4604 (and (not x4547) x124)))
(assert (x360 x580))
(assert (x360 x4586))
(assert (=> (>= 10000 x4016) (= (x3454 x4016) (x4732 x4016))))
(assert (x2835 (- x633 x4674)))
(assert (x1990 x1119 x4710))
(assert (x360 x60))
(assert (x360 x3702))
(assert (= (x1877 (x3454 4294967296)) 4294967296))
(assert (= (and x3601 x1160) x2764))
(assert (x360 x668))
(assert (=> (<= x1428 10000) (= (x3454 x1428) (x4732 x1428))))
(assert (= (x1877 (x3243 x3998 1)) (+ 1 (x1877 x3998))))
(assert (= x4602 (and (not x1617) x3314)))
(assert (= x4736 (and (not x3133) x3786)))
(assert (= x519 (and x1984 (not x4657))))
(assert (x360 x3510))
(assert (x360 x3109))
(assert (= x3848 (x1877 (x4732 x3848))))
(assert (x360 x313))
(assert (x360 x3796))
(assert (x360 x624))
(assert (x360 x4112))
(assert (x360 x483))
(assert (x360 x4637))
(assert (x360 x2191))
(assert (= (and x3554 x2491) x2642))
(assert (x360 x2948))
(assert (x360 x1541))
(assert (= x4068 (and x1922 x4288)))
(assert (x360 x91))
(assert (= x372 (and (not x368) x1891)))
(assert (=> (<= x1821 10000) (= (x4732 x1821) (x3454 x1821))))
(assert (x360 x3189))
(assert (x2915 x1980))
(assert (x360 x3040))
(assert (x360 x2681))
(assert (= x4613 (and x1314 x4719)))
(assert (x360 x3114))
(assert (x360 x3650))
(assert (= (or x4722 x4269) x842))
(assert (= x2530 (and (not x4338) x2434)))
(assert (= x2449 (and x84 (not x2631))))
(assert (x360 x698))
(assert (= (and (not x2526) x1385) x779))
(assert (x360 x1757))
(assert (= (=> (and (= (= x4833 0) x438) (or x438 (not x438))) x3499) x315))
(assert (x360 x4526))
(assert (= x2432 (and x3470 (not x2324))))
(assert (= x1919 (and (=> (and (and (= x3943 x1559) (= 1 x2086)) (not x3814)) x3570) (=> (and (and (= x1559 x3695) (= x2090 x3247) (= x3393 x3298)) x3814) x1154))))
(assert (x360 x1014))
(assert (x2835 (- x4674 x1806)))
(assert (= (or x1991 (and x1609 (not x2167))) x1200))
(assert (= (and x2324 x3470) x3328))
(assert (x360 x3286))
(assert (=> (<= x3771 10000) (= (x3454 x3771) (x4732 x3771))))
(assert (= x585 (x1877 (x4732 x585))))
(assert (x360 x2459))
(assert (x4300 x4438))
(assert (x4300 x3406))
(assert (x711 x4040))
(assert (= x229 (or x944 (and (not x3839) x1286))))
(assert (x360 x2548))
(assert (x4300 x1911))
(assert (= x1937 (and x2872 (not x4283))))
(assert (=> (<= x3706 10000) (= (x3454 x3706) (x4732 x3706))))
(assert (x360 x537))
(assert (= (x3454 77053863734975077137548456399560439977311721439096602559221323163398253314048) (x4732 77053863734975077137548456399560439977311721439096602559221323163398253314048)))
(assert (= x4361 (=> (and (= x3022 x58) (= x409 x1316)) x2196)))
(assert (= (x1877 (x4732 x3044)) x3044))
(assert (= x4830 (and (=> x1912 x1450) (=> (and (and (= 1 x2937) (= x2021 x1090)) (not x1912)) x2819))))
(assert (x360 x3327))
(assert (= x4454 (x1877 (x4732 x4454))))
(assert (x360 x2223))
(assert (= (and x3303 x2812) x1108))
(assert (= x1437 (=> (and (= (ite (> x2348 x3200) (not (= x1515 0)) (> x2348 x3200)) x750) (or (and (and (or (and (and (= x4542 (x3243 x3792 1)) (= (x4034 (+ 96 x3608)) x4373) (= (x3243 x4691 1) x1318) (= (x3243 x1318 1) x3490) (= (x3800 (x4732 x2445) x2064 0) x4691) (= x4373 x4053)) x2631) (and (not x2631) (and (= (x4034 (+ x3608 96)) x3515) (= (x3243 x581 1) x4314) (= x3912 (x3243 x3998 1)) (= x3000 (x3243 x4314 1)) (= (x3243 x3792 1) x119) (= x3515 x4053) (= x581 (x3800 (x4732 x2445) x2064 0)) (>= x2938 0) (= (x3800 (x4732 x2938) x2064 0) x3998) (<= x2938 1461501637330902918203684832716283019655932542975) (= x2938 (x4811 x119)) (< x2938 1461501637330902918203684832716283019655932542976)))) (and (<= 0 x630) (= x630 (x4462 x3792)) (<= x630 1461501637330902918203684832716283019655932542975) (= (= x630 0) x2631) (> 1461501637330902918203684832716283019655932542976 x630))) (not x750)) (and x750 (and (and (= (< 0 x4798) x302) (>= x4760 0) (> 1461501637330902918203684832716283019655932542976 x4760) (>= 1461501637330902918203684832716283019655932542975 x4760) (= x4798 (x2102 (- x1515 x4760))) (= x4760 (x4462 x3792))) (or (and (and (= x1309 (x4034 (+ x3608 96))) (= x1309 x4053) (= (x3800 (x4732 x1515) x2064 0) x4366) (= (x3243 x3445 1) x906) (= x329 (x3243 x906 1)) (= x3445 (x3800 (x4732 x2445) x2064 0))) (not x302)) (and (and (= x3108 (x4034 (+ x3608 96))) (= x1020 (x3243 x4789 1)) (= (x3243 x1020 1) x4827) (= x4789 (x3800 (x4732 x2445) x2064 0)) (>= x1001 0) (= x1962 (x3800 (x4732 x1515) x2064 0)) (= x1742 (x3800 (x4732 x1515) x2064 0)) (= x3917 (x3243 x3714 1)) (> 1461501637330902918203684832716283019655932542976 x1001) (<= x1001 1461501637330902918203684832716283019655932542975) (= (x3800 (x4732 x1001) x2064 0) x3714) (= (x917 x1962) x1001) (= x4053 x3108)) x302)))))) x1104)))
(assert (= (and (not x1654) x2690) x4872))
(assert (= (or x2163 x4641) x3862))
(assert (= (and x1581 x4656) x4714))
(assert (x360 x316))
(assert (x360 x4438))
(assert (x1990 x4026 x3016))
(assert (= x757 (and x3801 x2876)))
(assert (x360 x4043))
(assert (x360 x235))
(assert (x360 x1378))
(assert (x1107 x1426 (- x1806 x633)))
(assert (x360 x783))
(assert (and (x877 x3106 32) (x345 x3106 32) (=> (> 32 0) (= x3106 (+ (x2968 x3106 32) (* (x3413 x3106 32) 32)))) (x4363 x3106 32)))
(assert (= (x1877 (x4732 x1850)) x1850))
(assert (= (and x2974 (not x1047)) x678))
(assert (=> (>= 10000 x60) (= (x3454 x60) (x4732 x60))))
(assert (= (x1877 (x4732 x152)) x152))
(assert (= (and x2099 x4418) x3790))
(assert (x360 x2924))
(assert (= x1393 (and x3958 x3433)))
(assert (= (and (not x332) x1910) x1223))
(assert (= x259 (=> (and (= x3357 x2184) (= 0 x2303)) x1548)))
(assert (= (=> (and (= x368 (= x2955 0)) (or (and (= (x3243 x4007 2) x1538) x368) (and (not x368) (= (x3800 (x4732 x2955) x4007 0) x1037)))) x1860) x3960))
(assert (= (x1877 (x3243 x4582 2)) (+ (x1877 x4582) 2)))
(assert (x360 x3165))
(assert (x360 x241))
(assert (x360 x323))
(assert (x4300 x2913))
(assert (x360 x3540))
(assert (x360 x1064))
(assert (x360 x1982))
(assert (x360 x2653))
(assert (x360 x2780))
(assert (= x4696 (=> (or (and (not x2569) (= x2554 x2569)) (and x2569 (and (= (> x1023 x1899) x2554) (not (> x161 x2836)) (= (x2102 (- x2836 x161)) x1899)))) x1865)))
(assert (=> (<= x355 10000) (= (x3454 x355) (x4732 x355))))
(assert (x360 x3508))
(assert (= (and x4867 x1663) x1598))
(assert (x4300 x1384))
(assert (= x3704 (x1877 (x4732 x3704))))
(assert (x360 x2046))
(assert (= (=> (and (= x4256 x4372) (= x488 x2274)) x1546) x108))
(assert (= (and (not x4027) x455) x3430))
(assert (= x1967 (=> (and (= x2304 (x3243 x4315 1)) (= x3608 x3510) (= (x3243 x993 1) x4315) (= x993 (x3800 (x4732 x2445) x2064 0))) x2159)))
(assert (x360 x4082))
(assert (x4383 x4306))
(assert (= (and x3226 x81) x3019))
(assert (=> (>= 10000 x3661) (= (x4732 x3661) (x3454 x3661))))
(assert (x4300 x234))
(assert (x360 x85))
(assert (= x1074 (and x2364 (not x3983))))
(assert (= (x4732 10936679508223583803006762266923565500374401145016910147028117655998246682624) (x3454 10936679508223583803006762266923565500374401145016910147028117655998246682624)))
(assert (= (and x679 x3037) x29))
(assert (x360 x457))
(assert (= x2983 (and (not x4443) x3501)))
(assert (= x2587 (and x385 x3941)))
(assert (x360 x4332))
(assert (x360 x4862))
(assert (= x747 (and (not x1187) x1752)))
(assert (x360 x3845))
(assert (= x4641 (and (not x4673) x2207)))
(assert (= (and x2985 x3448) x134))
(assert (= x1874 (or x1413 x4558)))
(assert (x77 x2702))
(assert (= (and x4903 x2062) x954))
(assert (= (and (not x4885) x3270) x1619))
(assert (= (and x1200 (not x4133)) x2385))
(assert (and (x877 x1735 1461501637330902918203684832716283019655932542976) (x345 x1735 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1735 (+ (x2968 x1735 1461501637330902918203684832716283019655932542976) (* (x3413 x1735 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x4363 x1735 1461501637330902918203684832716283019655932542976)))
(assert (x4300 x1419))
(assert (= x3918 (and x3495 x4664)))
(assert (x360 x4328))
(assert (x360 x3532))
(assert (= x4207 (and x2466 x4678)))
(assert (x360 x2074))
(assert (= (+ 1 (x1877 x773)) (x1877 (x3243 x773 1))))
(assert (x360 x2133))
(assert (= (and x2624 x656) x1439))
(assert (x360 x4854))
(assert (= (and x4733 x2636) x2003))
(assert (= (x1877 (x3454 547091486)) 547091486))
(assert (= x739 (and x4171 x452)))
(assert (x360 x1024))
(assert (= x2628 (and x610 x3973)))
(assert (= (=> (and (= x4083 0) (= x1234 x3182)) x3741) x3887))
(assert (x4715 x3106))
(assert (x360 x2176))
(assert (x360 x3434))
(assert (x360 x2238))
(assert (x360 x2833))
(assert (= (and x4563 x3117) x702))
(assert (= x1567 (or x2693 x2293)))
(assert (x4383 x3056))
(assert (x360 x4624))
(assert (x360 x2087))
(assert (=> (<= x3747 10000) (= (x4732 x3747) (x3454 x3747))))
(assert (x360 x3910))
(assert (x360 x1966))
(assert (x360 x2365))
(assert (= x4799 (and x4340 (not x4635))))
(assert (= (+ (x1877 x1295) 1) (x1877 (x3243 x1295 1))))
(assert (x2915 x440))
(assert (= (or x314 x328 x3414 x678 x4068 x3151) x1246))
(assert (x360 x3494))
(assert (x360 x193))
(assert (= (and (not x2059) x708) x1121))
(assert (x360 x2991))
(assert (x360 x2067))
(assert (= x2748 (and x1105 x3003)))
(assert (= (x1877 (x4732 x3271)) x3271))
(assert (= (or x3589 x4247) x1587))
(assert (=> (>= 10000 x818) (= (x4732 x818) (x3454 x818))))
(assert (=> (<= x1515 10000) (= (x4732 x1515) (x3454 x1515))))
(assert (=> (>= 10000 x1243) (= (x3454 x1243) (x4732 x1243))))
(assert (= x3741 (=> (and (= x1234 x3894) (= x4083 x4710)) x2162)))
(assert (= (and x4617 x2674) x3909))
(assert (x360 x4756))
(assert (= x2368 (and x923 x3210)))
(assert (x360 x2483))
(assert (x360 x1477))
(assert (x360 x2860))
(assert (x360 x2017))
(assert (= x3637 (and x4033 x3573)))
(assert (= (x1877 (x3243 x906 1)) (+ (x1877 x906) 1)))
(assert (x4300 x2699))
(assert (x360 x3720))
(assert (x360 x4388))
(assert (x360 x589))
(assert (and (x877 x497 32) (x345 x497 32) (=> (> 32 0) (= x497 (+ (x2968 x497 32) (* (x3413 x497 32) 32)))) (x4363 x497 32)))
(assert (=> (<= x832 10000) (= (x4732 x832) (x3454 x832))))
(assert (= (or (and (not x564) x3989) x2657) x3556))
(assert (x360 x3557))
(assert (= (=> (and (= x3835 x4833) (= x1561 x4008)) x315) x4683))
(assert (and (and (= (- (* (- x3118 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3118 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3118 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3118) (- (* x3118 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3118))) (= (x4060 1000000000000000000 (- x3118 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x3118 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x3118 1000000000000000000) (x4060 1000000000000000000 x3118)) (x1520 1000000000000000000 x3118) (x3818 1000000000000000000 x3118) (x3063 1000000000000000000 x3118) (x4067 1000000000000000000 x3118) (x3727 1000000000000000000 x3118)))
(assert (x711 x3106))
(assert (= x4118 (x1877 (x4732 x4118))))
(assert (x360 x3897))
(assert (and (and (= (- (* (- x905 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x905 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x905 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x905) (- (* x905 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x905))) (= (x4060 1000000000000000000 (- x905 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x905 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x905 1000000000000000000) (x4060 1000000000000000000 x905)) (x1520 1000000000000000000 x905) (x3818 1000000000000000000 x905) (x3063 1000000000000000000 x905) (x4067 1000000000000000000 x905) (x3727 1000000000000000000 x905)))
(assert (= x1118 (=> (= x4707 (= x1521 x349)) (and (=> (and (= x4339 (< 0 x349)) (not x4707)) (and (=> (and (and (and (<= x2955 1461501637330902918203684832716283019655932542975) (< x2695 1461501637330902918203684832716283019655932542976) (<= 0 x2695) (= x1446 (x3243 x4374 1)) (<= 0 x2955) (= (x1906 x4374) x2955) (< x2955 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x2695) (= x1420 (x3800 (x4732 x3030) x4007 0)) (= x2695 (x4576 x1420)) (<= 0 x720) (= (x3243 x1420 1) x4374) (= (x867 x1446) x720) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x720) (= (= 0 x2695) x3046) (not (= 0 x720))) (or (and (and (= x53 (x3243 x3005 1)) (= (x3800 (x4732 x2695) x4007 0) x3005)) (not x3046)) (and x3046 (= x3453 (x3243 x4007 1))))) x4339) x3960) (=> (not x4339) x449))) (=> x4707 x2045)))))
(assert (x4300 x3393))
(assert (x360 x3196))
(assert (x360 x3809))
(assert (x360 x339))
(assert (= (x1877 (x4732 x1829)) x1829))
(assert (= (x1877 (x4732 x2831)) x2831))
(assert (x360 x1873))
(assert (= x437 (or x3944 x218)))
(assert (x360 x2128))
(assert (= x1964 (and x2656 x3291)))
(assert (= (=> (= (> x2318 0) x1461) (and (=> (and (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x202) (= x202 0) (<= x3092 1461501637330902918203684832716283019655932542975) (<= 0 x202) (= (x3800 (x4732 x2445) x3247 0) x507) (= x3107 (ite (> x2348 0) (not (= 0 x3092)) (< 0 x2348))) (= (x3950 x2252) x3092) (>= x3092 0) (<= 0 x2348) (<= x2348 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x795 (x3243 x507 2)) (= x202 (x2602 x795)) (< x3092 1461501637330902918203684832716283019655932542976) (not (= 0 x2445)) (= (x3243 x3247 1) x2252)) (or (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x198) (= x3291 (not x1539)) (= x1539 (> x2318 x198)) (= (x2602 x1774) x198) (= x1774 (x3243 x4215 2)) (>= x198 0) (= x4215 (x3800 (x4732 x3092) x3247 0))) x3107) (and (not x3107) (= x3291 x3107)))) x1461) x1999) (=> (and (not x1461) (= x3580 x406)) x4039))) x762))
(assert (=> (<= x3030 10000) (= (x3454 x3030) (x4732 x3030))))
(assert (= x2805 (and x2823 x239)))
(assert (= x1152 true))
(assert (x4300 x451))
(assert (= (x1877 (x4732 x1)) x1))
(assert (= (x1877 (x4732 x3508)) x3508))
(assert (= x2562 (and (not x3664) x3348)))
(assert (x360 x3896))
(assert (= (and x2359 (not x28)) x2060))
(assert (= (x1877 (x3243 x2064 1)) (+ 1 (x1877 x2064))))
(assert (x360 x2570))
(assert (x360 x303))
(assert (x360 x3803))
(assert (x360 x3812))
(assert (x711 x3056))
(assert (= x4793 (and (=> (and x1977 (and (= x3540 x3771) (= x1093 x2064) (= x207 x3915))) x1879) (=> (and (and (= 1 x3200) (= x3540 x1515)) (not x1977)) x1437))))
(assert (x360 x2635))
(assert (x360 x3154))
(assert (= x3038 (or x4505 x4908)))
(assert (x360 x4817))
(assert (= (and x4727 x2396) x4230))
(assert (x4300 x3271))
(assert (= (and x4449 (not x4704)) x160))
(assert (x360 x4437))
(assert (x360 x615))
(assert (= x471 (and x2075 (not x4425))))
(assert (= x3285 (and x2030 x929)))
(assert (= (x4732 1466279372) (x3454 1466279372)))
(assert (= (x1877 (x4732 x3028)) x3028))
(assert (x360 x3913))
(assert (x711 x497))
(assert (x360 x4500))
(assert (=> (<= x2379 10000) (= (x4732 x2379) (x3454 x2379))))
(assert (x360 x1240))
(assert (= (=> (= x2236 (= x2105 x676)) (and (=> (and (= x983 (< 0 x2105)) (not x2236)) (and (=> (not x983) x3735) (=> (and (and (or (and (not x304) (and (= (x3800 (x4732 x2349) x1263 0) x4504) (= x364 (x3243 x4504 1)))) (and x304 (= (x3243 x1263 1) x1035))) (and (<= 0 x293) (not (= x293 0)) (>= x283 0) (>= 1461501637330902918203684832716283019655932542975 x2349) (= x293 (x3705 x4364)) (= x4364 (x3243 x1295 1)) (= x1295 (x3243 x579 1)) (>= 1461501637330902918203684832716283019655932542975 x283) (= (= x2349 0) x304) (<= 0 x2349) (> 1461501637330902918203684832716283019655932542976 x283) (= x579 (x3800 (x4732 x4536) x1263 0)) (= x283 (x1532 x1295)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x293) (= x4536 (x4728 1461501637330902918203684832716283019655932542975 x1332)) (= x2349 (x4304 x579)) (< x2349 1461501637330902918203684832716283019655932542976))) x983) x1355))) (=> x2236 x838))) x2404))
(assert (= (and (not x834) x2608) x1759))
(assert (x360 x3662))
(assert (x360 x1700))
(assert (x4300 x1428))
(assert (= (=> (and (or x3914 (and (and (<= x4261 1461501637330902918203684832716283019655932542975) (= (x4034 (+ 32 x401)) x3098) (= (x1507 (x4732 x4261)) x4398) (> 4294967296 x4939) (not (= 0 x4398)) (= x3265 (x4034 (+ 4 x1440))) (= (x4728 1461501637330902918203684832716283019655932542975 x986) x2171) (= (x4034 (+ 32 x3265)) x401) (> 1461501637330902918203684832716283019655932542976 x4261) (>= x4261 0)) (not x3914))) (and (> 1461501637330902918203684832716283019655932542976 x4261) (= (= 0 x4261) x3914) (<= x4261 1461501637330902918203684832716283019655932542975) (<= 0 x4261))) x826) x301))
(assert (x360 x2205))
(assert (= x575 (and (not x1855) x242)))
(assert (= (and x278 (not x3246)) x2415))
(assert (= x1292 (=> (and (= x1624 x295) (= x3001 x1294)) x1348)))
(assert (= (and (not x2528) x3595) x2095))
(assert (= (+ 2 (x1877 x2412)) (x1877 (x3243 x2412 2))))
(assert (= x3669 (not (and (= (x3191 x4812) x4451) (<= 0 x4451) (= (x3800 (x4732 x1698) x1263 0) x3162) (>= 1461501637330902918203684832716283019655932542975 x4451) (= (x3243 x3162 1) x4812) (< x4451 1461501637330902918203684832716283019655932542976)))))
(assert (=> (<= x749 10000) (= (x4732 x749) (x3454 x749))))
(assert (x360 x787))
(assert (x3272 x4632 x2279))
(assert (= x250 (and (not x1105) x3003)))
(assert (= x2411 (and x1955 (not x2116))))
(assert (x360 x4319))
(assert (x2835 (- x3093 x4674)))
(assert (=> (<= x4822 10000) (= (x3454 x4822) (x4732 x4822))))
(assert (= x3488 (=> (and (= x2275 x3783) (= 0 x2576)) x2630)))
(assert (x360 x991))
(assert (x360 x4324))
(assert (x4300 x330))
(assert (x360 x3706))
(assert (x360 x2146))
(assert (= x1407 (and x926 (not x3672))))
(assert (x360 x4281))
(assert (= x4608 (x1877 (x4732 x4608))))
(assert (x360 x3681))
(assert (x360 x4144))
(assert (and (= 81 (x4060 9 9)) (= 81 (x4060 27 3)) (= 27 (x4060 9 3)) (= 9 (x4060 3 3))))
(assert (x360 x595))
(assert (x360 x1978))
(assert (= (and (not x4157) x587) x3775))
(assert (x360 x3032))
(assert (x360 x3835))
(assert (x2915 x4654))
(assert (x360 x2106))
(assert (x360 x3856))
(assert (= x4016 (x1877 (x4732 x4016))))
(assert (= x1752 (and x4468 x4121)))
(assert (= x1243 (x1877 (x4732 x1243))))
(assert (x360 x2470))
(assert (=> (>= 10000 x1933) (= (x4732 x1933) (x3454 x1933))))
(assert (x360 x247))
(assert (= (or x3840 x402) x4739))
(assert (x360 x2184))
(assert (= x2345 (=> (and (= 0 x3692) (= x1276 x642)) x2811)))
(assert (= (and x3166 x2737) x2786))
(assert (x360 x3817))
(assert (x4300 x1829))
(assert (x360 x3548))
(assert (= (or (and x1019 x3964) x4551 x770 x4883 (and x946 x3597)) x2400))
(assert (x360 x2160))
(assert (= (and (not x4769) x2874) x3948))
(assert (x360 x1261))
(assert (= x323 (x1877 (x4732 x323))))
(assert (x360 x4750))
(assert (x360 x4555))
(assert (= x3201 (and (not x3012) x2545)))
(assert (x360 x209))
(assert (x360 x93))
(assert (= false x2816))
(assert (=> (<= x3044 10000) (= (x3454 x3044) (x4732 x3044))))
(assert (x360 x1857))
(assert (= x1750 (and x4047 (not x4584))))
(assert (=> (>= 10000 x1287) (= (x3454 x1287) (x4732 x1287))))
(assert (= (and (not x4790) x2958) x1242))
(assert (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 (x1877 (x3454 6539370208772218570076773595062200405109424842860869254164860851635934461952))))
(assert (= (x1877 (x3454 10742207464693106059581744854972325794081737850190833080250671788038469713920)) 10742207464693106059581744854972325794081737850190833080250671788038469713920))
(assert (x360 x1714))
(assert (x360 x2287))
(assert (x2835 (- x4674 x3093)))
(assert (x360 x1614))
(assert (x360 x3892))
(assert (= (and x2690 x1654) x2733))
(assert (x360 x2189))
(assert (x360 x3580))
(assert (= x1433 (and (not x3303) x2812)))
(assert (= (x1877 (x4732 x4168)) x4168))
(assert (x4300 x1287))
(assert (x360 x2827))
(assert (x360 x812))
(assert (x2835 x1579))
(assert (= (and x4895 x1101) x3178))
(assert (=> (>= 10000 x418) (= (x4732 x418) (x3454 x418))))
(assert (x360 x4746))
(assert (= x2910 (and (not x2426) x3834)))
(assert (x4300 x4608))
(assert (= x3734 (and x4382 x2518)))
(assert (= x2718 (and x2537 x2140)))
(assert (= (or x4362 x1153 x4342 x2100) x4913))
(assert (= (or x3215 x322 x3929 x1903 x3387 x3173) x2614))
(assert (and (x877 x3056 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x345 x3056 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x3056 (+ (x2968 x3056 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x3413 x3056 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x4363 x3056 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x360 x1056))
(assert (x360 x128))
(assert (x360 x2043))
(assert (x360 x724))
(assert (= (and x3843 x1424) x2920))
(assert (x4715 x1816))
(assert (= x1090 (x1877 (x4732 x1090))))
(assert (x360 x1559))
(assert (= (=> (and (= x1041 (x4728 1461501637330902918203684832716283019655932542975 x986)) (< x2216 1461501637330902918203684832716283019655932542976) (= x1069 (> x3212 0)) (<= 0 x2216) (= (x2102 (- x1041 x2216)) x3212) (>= 1461501637330902918203684832716283019655932542975 x2216)) (and (=> (and (and (<= 0 x3271) (<= x3271 1461501637330902918203684832716283019655932542975) (= 452 x4115) (= x3271 x2906) (> 1461501637330902918203684832716283019655932542976 x3271)) (not x1069)) x393) (=> (and x1069 (and (and (= (= x234 x1186) x1453) (= (x4728 1461501637330902918203684832716283019655932542975 x986) x1186) (= x2521 452)) (or (and (and (= x2802 (= x515 x1186)) (or (and (not x2802) (and (and (and (not (= x3876 1856199391)) (= x3724 32) (not (> 988262939 x3876)) (not (= 1857877511 x3876)) (>= 1461501637330902918203684832716283019655932542975 x2502) (= x2265 4) (< x2502 1461501637330902918203684832716283019655932542976) (< 0 x4750) (= x3876 1865448899) (> 2217467699 x3876) (= x951 50292402827334880472107169365697159231523039388532301717704428044325102813184) (not (< x2265 4)) (not (< x3876 1856199391)) (= x3476 1) (= x4750 (x1507 (x4732 x3180))) (<= 0 x2502) (= x2265 4)) x1883) (= (= x1186 x3180) x1883))) (and x2802 (and (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x3345) (= 1865448899 x900) (<= x2474 1461501637330902918203684832716283019655932542975) (not (< x900 988262939)) (= 4 x1604) (> 1461501637330902918203684832716283019655932542976 x2474) (not (< x1604 4)) (not (< x900 1856199391)) (not (= x900 1856199391)) (= x1604 4) (> 2217467699 x900) (<= 0 x2474) (> x2256 0) (= 32 x3724) (not (= 1857877511 x900)) (= x2256 (x1507 (x4732 x515))) (= x3476 1))))) (not x1453)) (and x1453 (and (not (= 1857877511 x730)) (not (< x3954 4)) (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x594) (not (= x730 1856199391)) (>= x2905 0) (not (< x730 1856199391)) (> 2217467699 x730) (> 1461501637330902918203684832716283019655932542976 x2905) (> x4845 0) (>= 1461501637330902918203684832716283019655932542975 x2905) (not (> 988262939 x730)) (= x4845 (x1507 (x4732 x234))) (= x3954 4) (= x3954 4) (= x3476 1) (= x3724 32) (= x730 1865448899)))))) x1889))) x121))
(assert (x4715 x2671))
(assert (x360 x1128))
(assert (= (x1877 (x3243 x851 2)) (+ 2 (x1877 x851))))
(assert (x360 x632))
(assert (x711 x4306))
(assert (x360 x4643))
(assert (x360 x4835))
(assert (x360 x2239))
(assert (=> (<= x207 10000) (= (x4732 x207) (x3454 x207))))
(assert (= (and x4047 x4584) x1997))
(assert (= (and x4484 (not x2895)) x1374))
(assert (= x3737 (and x2111 x182)))
(assert (= (x1877 (x4732 x4459)) x4459))
(assert (x360 x1591))
(assert (= (x4732 242558722) (x3454 242558722)))
(assert (= (or x2183 x4765) x2083))
(assert (= (or x3536 x4075) x2656))
(assert (x360 x1373))
(assert (= (and x2562 x2551) x1904))
(assert (= (and x3342 (not x217)) x1315))
(assert (x2915 x216))
(assert (x4300 x4050))
(assert (x360 x597))
(assert (x360 x4515))
(assert (= (x1877 (x4732 x1933)) x1933))
(assert (= x675 (and x3141 x1127)))
(assert (= x3771 (x1877 (x4732 x3771))))
(assert (=> (<= x5 10000) (= (x4732 x5) (x3454 x5))))
(assert (x360 x2458))
(assert (= x3006 (and (not x30) x4360)))
(assert (= (and (not x1365) x4402) x1705))
(assert (= (or x3111 x1474) x2366))
(assert (= (and x1325 (not x3466)) x21))
(assert (= (=> (and (= x3956 x3357) (= x2727 0)) x1481) x4018))
(assert (x360 x4564))
(assert (= (x4732 26959946667150639794667015087019630673637144422540572481103610249215) (x3454 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x360 x629))
(assert (x360 x265))
(assert (= x4733 (and x4055 x1313)))
(assert (= x2717 (and x1342 (not x1574))))
(assert (x360 x531))
(assert (= x3947 (and x2983 x3761)))
(assert (x360 x4238))
(assert (= (x1877 (x3454 405663989)) 405663989))
(assert (x360 x4221))
(assert (x360 x4119))
(assert (x4300 x3474))
(assert (x2835 x4674))
(assert (=> (>= 10000 x4459) (= (x4732 x4459) (x3454 x4459))))
(assert (x4300 x1559))
(assert (x360 x2047))
(assert (x4300 x2445))
(assert (= x4013 (and x1139 (not x1760))))
(assert (x360 x525))
(assert (x711 x2991))
(assert (= (or x560 x2400) x499))
(assert (x360 x3357))
(assert (= (x3454 20853193852723734048814770637610870652489083209607696777694672748161462697984) (x4732 20853193852723734048814770637610870652489083209607696777694672748161462697984)))
(assert (x360 x2558))
(assert (= (and x2998 x3231) x3161))
(assert (= (and x1157 (not x2228)) x3051))
(assert (= (and (not x2544) x4446) x3343))
(assert (= (x1877 (x3243 x4847 1)) (+ 1 (x1877 x4847))))
(assert (x2835 x3235))
(assert (= (+ (x1877 x4662) 1) (x1877 (x3243 x4662 1))))
(assert (x3745 x633 x3093 x4674 x1426))
(assert (x360 x670))
(assert (and (and (= (- (* (- x1353 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1353 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1353 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1353) (- (* x1353 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1353))) (= (x4060 1000000000000000000 (- x1353 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x1353 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x1353 1000000000000000000) (x4060 1000000000000000000 x1353)) (x1520 1000000000000000000 x1353) (x3818 1000000000000000000 x1353) (x3063 1000000000000000000 x1353) (x4067 1000000000000000000 x1353) (x3727 1000000000000000000 x1353)))
(assert (x4300 x1391))
(assert (= (x1877 (x4732 x783)) x783))
(assert (x360 x4240))
(assert (= x1991 (and x1609 x2167)))
(assert (= (and x2344 x2813) x1130))
(assert (x360 x816))
(assert (x360 x571))
(assert (=> (>= 10000 x693) (= (x4732 x693) (x3454 x693))))
(assert (= (=> (and (= x245 x1125) (= x2242 x307)) x1993) x1162))
(assert (x360 x3895))
(assert (= (=> (and (= x1373 x166) (= x1064 0)) x578) x891))
(assert (x360 x1508))
(assert (x360 x1936))
(assert (and (x877 x2756 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x345 x2756 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x2756 (+ (x2968 x2756 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x3413 x2756 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x4363 x2756 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x1877 (x4732 x2838)) x2838))
(assert (= (and (not x2655) x1370) x1920))
(assert (= (or x2449 x3185 x286 x1277) x3008))
(assert (x360 x1493))
(assert (x360 x4242))
(assert (= (+ 1 (x1877 x3759)) (x1877 (x3243 x3759 1))))
(assert (x360 x2084))
(assert (= (+ (x1877 x573) 1) (x1877 (x3243 x573 1))))
(assert (= x1144 (and x1152 x34)))
(assert (= x2607 (or x1487 (and (not x4164) x2745))))
(assert (x360 x3418))
(assert (= x2282 (and x1719 (not x2266))))
(assert (=> (>= 10000 x283) (= (x3454 x283) (x4732 x283))))
(assert (= (or x954 (and x2062 (not x4903))) x4255))
(assert (x360 x1238))
(assert (= x2792 (and (not x4110) x4560)))
(assert (x360 x1163))
(assert (x360 x2467))
(assert (= (x1877 (x3243 x2508 1)) (+ (x1877 x2508) 1)))
(assert (x360 x4216))
(assert (x360 x3085))
(assert (= x3717 (and x4915 (not x4910))))
(assert (= (x1877 (x3243 x4315 1)) (+ (x1877 x4315) 1)))
(assert (x4300 x3028))
(assert (= x1286 (or x437 x290 x3966)))
(assert (x4300 x2191))
(assert (x360 x2765))
(assert (= x2690 (and x640 x255)))
(assert (= x500 (or x1049 x3789)))
(assert (x360 x998))
(assert (and (x877 x3618 1461501637330902918203684832716283019655932542976) (x345 x3618 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x3618 (+ (x2968 x3618 1461501637330902918203684832716283019655932542976) (* (x3413 x3618 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x4363 x3618 1461501637330902918203684832716283019655932542976)))
(assert (= (or x2679 x2516) x3470))
(assert (= (x4732 117300739) (x3454 117300739)))
(assert (= x175 (=> (and (= x3182 x2055) (= 0 x4643)) x2221)))
(assert (x360 x2198))
(assert (= x2699 (x1877 (x4732 x2699))))
(assert (x360 x137))
(assert (= x884 (and x956 x4941)))
(assert (x360 x4874))
(assert (x2835 (- x3093 x1806)))
(assert (= x3652 (and x433 x2096)))
(assert (= (or x1542 x4928) x97))
(assert (= (and x2631 x84) x286))
(assert (= (x1877 (x4732 x2457)) x2457))
(assert (x711 1461501637330902918203684832716283019655932542976))
(assert (x360 x2290))
(assert (= (x1877 (x3243 x4263 1)) (+ (x1877 x4263) 1)))
(assert (x2915 x767))
(assert (x360 x1867))
(assert (x360 x985))
(assert (=> (>= 10000 x3421) (= (x3454 x3421) (x4732 x3421))))
(assert (x360 x2050))
(assert (x360 x2965))
(assert (= x4039 (=> (= x1440 x406) x301)))
(assert (x360 x2556))
(assert (x360 x4939))
(assert (x360 x3382))
(assert (= (and x3208 x2559) x1460))
(assert (= x4287 (and x2607 x1989)))
(assert (x360 x432))
(assert (and (and (= (- (* (- x251 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x251 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x251 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4060 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x251) (- (* x251 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x251))) (= (x4060 1000000000000000000 (- x251 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x251 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000))) (= (* x251 1000000000000000000) (x4060 1000000000000000000 x251)) (x1520 1000000000000000000 x251) (x3818 1000000000000000000 x251) (x3063 1000000000000000000 x251) (x4067 1000000000000000000 x251) (x3727 1000000000000000000 x251)))
(assert (= x503 (=> (and (= x4850 x3256) (= x2402 x3882)) x1399)))
(assert (= x1311 (and x14 x2939)))
(assert (= (and x2362 x3616) x543))
(assert (= (and x2641 x2639) x2612))
(assert (= (and x2896 (not x3379)) x3159))
(assert (x360 x2397))
(assert (= (and x1715 (not x3658)) x124))
(assert (=> (<= x2564 10000) (= (x4732 x2564) (x3454 x2564))))
(assert (= (+ 2 (x1877 x3381)) (x1877 (x3243 x3381 2))))
(assert (x3745 x4674 x1426 x633 x3093))
(assert (x360 x4169))
(assert (x360 x3943))
(assert (x360 x3787))
(assert (= x2639 (and (not x1372) x3225)))
(assert (= (and x1268 (not x240)) x4355))
(assert (= (x4732 115792089237316195423570985008687907853269984665640564039457) (x3454 115792089237316195423570985008687907853269984665640564039457)))
(assert (=> (<= x323 10000) (= (x3454 x323) (x4732 x323))))
(assert (= (and x3193 (not x1496)) x218))
(assert (= x4403 (=> (and (or (and x240 (= x4717 (x3243 x4305 2))) (and (= (x3800 (x4732 x1243) x4305 0) x1216) (not x240))) (= (= 0 x1243) x240)) x786)))
(assert (= (and x1722 x1439) x3026))
(assert (x360 x697))
(assert (x360 x2267))
(assert (=> (>= 10000 x3007) (= (x3454 x3007) (x4732 x3007))))
(assert (= x2214 (or x3362 x4385 x918 x1787)))
(assert (= (and x4058 x4897) x309))
(assert (=> (<= x835 10000) (= (x3454 x835) (x4732 x835))))
(assert (x2835 (- x1806 x1426)))
(assert (x4300 x3421))
(assert (= (x3454 2691771752) (x4732 2691771752)))
(assert (= (and (not x1684) x3697) x823))
(assert (= x652 (and x857 (not x304))))
(assert (x360 x3753))
(assert (= (and (not x3647) x3717) x4162))
(assert (= x986 (x1877 (x4732 x986))))
(assert (= (or x4804 x3220 x4907 x2583) x3575))
(assert (x4300 x1739))
(assert (=> (<= x589 10000) (= (x3454 x589) (x4732 x589))))
(assert (= (x1877 (x3454 157198259)) 157198259))
(assert (= x2811 (=> (and (= x1276 x1624) (= x3001 x3692)) x1348)))
(assert (x360 x961))
(assert (x360 x566))
(assert (x360 x1791))
(assert (x360 x2539))
(assert (= (and x4076 (not x3295)) x887))
(assert (= x1427 (and x3372 (not x3684))))
(assert (= (and x1530 x1410) x4565))
(assert (= x1511 (and x3932 (not x2969))))
(assert (x360 x2906))
(assert (x360 x1129))
(assert (x360 x2453))
(assert (= (and (not x50) x230) x1663))
(assert (x360 x1243))
(assert (x360 x308))
(assert (= x3663 (or x2072 (and x9 (not x1914)))))
(assert (= x4296 (and (=> (and (and (= x4106 x1093) (= x3915 x2457) (= x4173 x3771)) x2895) x1879) (=> (and (and (= 1 x3845) (= x5 x4173)) (not x2895)) x2916))))
(assert (x2907 x1426 x4674 x1806 x1426))
(assert (x360 x3961))
(assert (= x3765 (=> (= x2339 (= 0 x143)) (and (=> (and (= x3223 (or (> x41 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x41 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x41 32)))) (not x2339)) (and (=> x3223 x2971) (=> (and (and (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1591)) x768) (<= x1227 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3172 (< x768 x1227)) (>= x1227 0)) (not x3223)) (and (=> x3172 x2971) (=> (and (not x3172) (and (= (> x287 x768) x2295) (>= x287 0) (= (x4034 (+ x1227 x1591)) x3266) (= x868 (x3800 (x4732 x2827) (x3454 5) 0)) (= x287 (x2313 x868)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x287))) (and (=> x2295 x2971) (=> (and (and (= x3780 32) (= x2539 1) (= x4611 (x4034 (+ x1591 x287)))) (not x2295)) x3192))))))) (=> x2339 x2971)))))
(assert (= (and x1225 x3918) x423))
(assert (x4300 x1974))
(assert (= (=> (and (= x4371 x756) (= x787 x2043) (= x2387 x4526) (= x945 x2254) (= x3380 x2355)) x1188) x2232))
(assert (x360 x3709))
(assert (= (or (and x2490 x3568) (and (not x3252) x446)) x1049))
(assert (= (and (not x3546) x3318) x1608))
(assert (x360 x4818))
(assert (x360 x473))
(assert (= (and (=> (and (and (= x3361 x2622) (= x1440 x2543)) (not x2554)) x321) (=> (and x2554 (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4060 x4674 x1426)) (<= x4674 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2563 (x4060 x4674 x1426)) (= (< x2475 x3832) x2245) (= (x3243 x174 1) x4071) (= (x3800 (x4732 x3030) x2130 0) x174) (>= x4674 0) (= (x3413 x2563 1000000000000000000) x3832) (= x2130 (x3800 (x4732 x1184) (x3454 159) 0)) (= (x4728 1461501637330902918203684832716283019655932542975 x986) x1184) (not (< x1026 x3361)) (= x2475 (x2102 (- x1026 x3361))) (= x4674 (x952 x4071))) (or (and (and (= (< 115792089237316195423570985008687907853269984665640564039457 x3832) x2738) (= x251 (x2477 (* x3832 1000000000000000000))) (>= x1570 0) (= (x3413 x1980 1000000000000000000) x3938) (< (* 1000000000000000000 x251) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> x2279 0) (= x538 x1570) (= 0 x1319) (= x1151 (* x251 1000000000000000000)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1570 x3938)) (= (ite x2738 1 0) x1054) (= x3938 x4184) (= x3415 (+ x538 x4184)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3361 x3832)) (= 0 x1054) (= x3415 x2859) (<= x1570 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1980 (x3413 x1151 x2279)) (= x1570 (x3253 x174))) (not x2245)) (and x2245 (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x310)) (>= x4794 0) (= x1572 0) (>= x3113 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4794) (= (x2102 (- x3113 x4564)) x2309) (= x3693 (> x2475 115792089237316195423570985008687907853269984665640564039457)) (= (x2477 (* 1000000000000000000 x2475)) x3945) (= x4794 (x3253 x174)) (= x2309 x1319) (= x1067 (x3413 x3332 x1426)) (= (x2477 (* 1000000000000000000 x2475)) x310) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3910 x4794)) (<= x3113 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x463 x4794) (= x2263 x2859) (= x3332 (* x310 1000000000000000000)) (= x2263 (+ x463 x491)) (= x4091 (> x2475 115792089237316195423570985008687907853269984665640564039457)) (= x3910 (x3413 x3168 1000000000000000000)) (= (x3413 x1644 x2279) x3168) (= x3856 (ite x4091 1 0)) (= (x3413 x1067 1000000000000000000) x4564) (= (ite x3693 1 0) x1572) (= 0 x3856) (< (* 1000000000000000000 x3945) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> x1426 0) (< 0 x2279) (= x3910 x491) (not (< x3113 x4564)) (= (* 1000000000000000000 x3945) x1644) (= x3113 (x952 x4071))))))) x3620)) x1865))
(assert (= (and x1758 (not x814)) x1704))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1877 (x3454 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x2915 x1345))
(assert (x4300 x1978))
(assert (=> (<= x468 10000) (= (x3454 x468) (x4732 x468))))
(assert (= x4197 (x1877 (x4732 x4197))))
(assert (= 18446744073709551615 (x1877 (x3454 18446744073709551615))))
(assert (= (+ 2 (x1877 x4601)) (x1877 (x3243 x4601 2))))
(assert (x3272 x1644 x2279))
(assert (x360 x662))
(assert (x360 x1053))
(assert (x360 x4483))
(assert (= x2629 (and x2366 (not x2554))))
(assert (= (x3454 405663989) (x4732 405663989)))
(assert (= x2616 (and x4009 (not x1551))))
(assert (= x1117 (=> (and (= x947 x1260) (= x2708 x1794)) x1302)))
(assert (x360 x4147))
(assert (= x4905 (and x1275 (not x511))))
(assert (= (=> (and (= (x4806 x2843) x2957) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2957) (= (x4034 (+ x4625 x1178)) x2787) (not (= x4886 0)) (= (< 0 x2957) x4157) (= (x4743 x1178) x633) (= (x3243 x2438 1) x2843) (not (or (and (> 32 x4376) (= true (<= x4376 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4376))) (= x497 (x4034 (+ 31 x4376))) (>= x2957 0) (= x4625 (x4728 115792089237316195423570985008687907853269984665640564039457584007913129639904 x497))) (and (=> (and x4157 (and (or (and (and (= (x2102 (- x905 x303)) x2632) (not (< x4201 0)) (= (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x303)) x4201) (not (< x4556 x303)) (= x2632 x1030) (= x717 x303)) (not x894)) (and x894 (and (not (> 0 x776)) (= (x3413 x2079 x633) x1179) (= x987 (> x4556 115792089237316195423570985008687907853269984665640564039457)) (>= x3587 0) (= x776 (x2102 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x905))) (<= x3587 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (ite x987 1 0) x2595) (= x4316 (x2477 (* x905 1000000000000000000))) (< (* 1000000000000000000 x4316) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (not (> x1282 x3587)) (= x2595 0) (= x905 x717) (= (x4806 x2843) x3587) (= (x2102 (- x3587 x1282)) x400) (= 0 x1030) (= (x3413 x1179 1000000000000000000) x1282) (= x2079 (* 1000000000000000000 x4316)) (> x633 0)))) (and (= (x4806 x2843) x3093) (<= x3093 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x894 (< x905 x303)) (<= 0 x3093) (= x303 (x3413 x767 1000000000000000000)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4060 x3093 x633)) (= (x4060 x3093 x633) x767)))) x533) (=> (and (not x4157) (and (= x905 x1026) (= x4890 0))) x1417))) x2037))
(assert (x360 x1197))
(assert (= x3324 (and (not x2737) x3166)))
(assert (x360 x1482))
(assert (x360 x1184))
(assert (x360 x3860))
(assert (x360 x2231))
(assert (= (and x3136 x1017) x775))
(assert (x360 x4413))
(assert (= x3516 (and x40 x4109)))
(assert (x360 x389))
(assert (= (+ 1 (x1877 x1281)) (x1877 (x3243 x1281 1))))
(assert (= (and x1891 x368) x3059))
(assert (x360 x1844))
(assert (x2835 x4316))
(assert (= x2227 (=> (and (= x3894 x568) (= x4710 x2840)) x2162)))
(assert (x360 x445))
(assert (= x278 (and x1872 (not x4153))))
(assert (= (and x4359 x1436) x3831))
(assert (= (+ (x1877 x3207) 1) (x1877 (x3243 x3207 1))))
(assert (x77 x2991))
(assert (x360 x2905))
(assert (= (=> (and (= 0 x2242) (= x245 x2275)) x1162) x3866))
(assert (x360 x2454))
(assert (= x3288 (=> (and (= x1982 x539) (= x932 0)) x3927)))
(assert (= x4029 (and x1573 x729)))
(assert (= 115792089237316195423570985008687907853269984665640564039457 (x1877 (x3454 115792089237316195423570985008687907853269984665640564039457))))
(assert (= (x3454 4294967296) (x4732 4294967296)))
(assert (x360 x3708))
(assert (x360 x1935))
(assert (= (and (not x3758) x4619) x4795))
(assert (x360 x4735))
(assert (=> (<= x2255 10000) (= (x4732 x2255) (x3454 x2255))))
(assert (x4300 x2845))
(assert (x360 x3471))
(assert (= x4276 (or x3353 x2161 x4823 x2416 x1798 x2890)))
(assert (= (and x1887 (not x1868)) x2369))
(assert (= x331 (=> (and (= x591 x4801) (= x654 x4192) (= x781 x849) (not (= 0 x1948)) (= x3079 x3434)) x2187)))
(assert (= (and x2426 x3834) x4810))
(assert (x4300 x4173))
(assert (x360 x3781))
(assert (= x610 (and x1187 x1752)))
(assert (= x1909 (and x1762 (not x3130))))
(assert (x360 x1126))
(assert (x4300 x1634))
(assert (x360 x2142))
(assert (= (=> (= (= 0 x3882) x2147) (and (=> (and x2147 (= x4330 x4350)) x135) (=> (and (not x2147) (= (or (and (< x3256 32) (= (<= x3256 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3256)) x3379)) (and (=> (and (and (= x1558 1) (= x4330 x2780) (= x1479 32)) (not x3379)) x3278) (=> (and x3379 (= x4330 x4350)) x135))))) x1052))
(assert (= x2852 (and (not x1351) x2144)))
(assert (x360 x2504))
(assert (= 2217467699 (x1877 (x3454 2217467699))))
(assert (= (and x1393 (not x2480)) x2472))
(assert (= x3604 (or x2995 x4816)))
(assert (x3745 x3093 x633 x1426 x1806))
(assert (x360 x488))
(assert (x360 x3523))
(assert (x360 x835))
(assert (= (and x2281 x4069) x248))
(assert (= x444 (and x3986 x3260)))
(assert (x360 x2300))
(assert (= (and x2647 (not x2633)) x2323))
(assert (x360 x2755))
(assert (x360 x3687))
(assert (= (and x3094 x1946) x1148))
(assert (= x1370 (and x4080 (not x4412))))
(assert (x4300 x1004))
(assert (= x4524 (and x4929 x3737)))
(assert (x360 x1702))
(assert (x360 x164))
(assert (= (and x2863 (not x1002)) x1498))
(assert (= (or x831 x1475) x3362))
(assert (= x1405 (and x396 x3663)))
(assert (= (and x1351 x2144) x1627))
(assert (x360 x1033))
(assert (x360 x4229))
(assert (x360 x2474))
(assert (=> (>= 10000 x670) (= (x3454 x670) (x4732 x670))))
(assert (x360 x2288))
(assert (= x3824 (and (not x4231) x878)))
(assert (x360 x3016))
(assert (= x2724 (=> (and (= x409 x655) (= x1838 x58)) x2196)))
(assert (= (or x532 x4400 x4800 x801) x1609))
(assert (x360 x1284))
(check-sat)
(exit)
