(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x1716 0)) (((x4257 (x1209 x1716) (x3400 x1716) (x301 Int)) (x3241 (x1358 Int)) (x3680 (x90 x1716) (x1910 Int)))))
(declare-fun x263 () Bool)
(declare-fun x4355 () Int)
(declare-fun x747 () Int)
(declare-fun x1212 () Int)
(declare-fun x725 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x3027 () Int)
(declare-fun x2666 () Int)
(declare-fun x651 () Bool)
(declare-fun x3460 () x1716)
(declare-fun x737 () Bool)
(declare-fun x1552 () x1716)
(declare-fun x220 () Int)
(declare-fun x798 () Bool)
(declare-fun x2951 () Int)
(declare-fun x4079 () Bool)
(declare-fun x3055 () Bool)
(declare-fun x1667 () Int)
(declare-fun x4329 () Bool)
(declare-fun x2665 () x1716)
(declare-fun x2311 () Int)
(declare-fun x1361 () Int)
(declare-fun x3949 () Int)
(declare-fun x860 () Int)
(declare-fun x1207 () Bool)
(declare-fun x1690 () Bool)
(declare-fun x2250 () Int)
(declare-fun x4320 () Int)
(declare-fun x2149 () Bool)
(declare-fun x953 () x1716)
(declare-fun x3494 () Bool)
(declare-fun x3674 () Bool)
(declare-fun x1443 () Int)
(declare-fun x1912 () Bool)
(declare-fun x1320 () Int)
(declare-fun x3629 () x1716)
(declare-fun x3758 () Bool)
(declare-fun x3558 () Int)
(declare-fun x3370 () Bool)
(declare-fun x2224 () Int)
(declare-fun x559 () Bool)
(declare-fun x1063 () Int)
(declare-fun x847 () Int)
(declare-fun x3455 () Int)
(declare-fun x4034 () Bool)
(declare-fun x3910 () Int)
(declare-fun x1355 () Int)
(declare-fun x2132 () Bool)
(declare-fun x964 () Int)
(declare-fun x789 () Bool)
(declare-fun x2943 () Bool)
(declare-fun x4179 () Bool)
(declare-fun x2802 () Bool)
(declare-fun x2342 () Bool)
(declare-fun x1369 () Bool)
(declare-fun x2866 () Int)
(declare-fun x147 () Int)
(declare-fun x4111 () Bool)
(declare-fun x4377 () Bool)
(declare-fun x4399 () Bool)
(declare-fun x2348 () Int)
(declare-fun x3167 () x1716)
(declare-fun x850 () Bool)
(declare-fun x649 () Bool)
(declare-fun x2458 () Bool)
(declare-fun x1758 () Int)
(declare-fun x2701 () Bool)
(declare-fun x696 () Bool)
(declare-fun x369 () Int)
(declare-fun x1014 () x1716)
(declare-fun x4140 () Int)
(declare-fun x3410 () Bool)
(declare-fun x555 () Int)
(declare-fun x786 () Int)
(declare-fun x2576 () Int)
(declare-fun x1537 () Bool)
(declare-fun x4256 () Bool)
(declare-fun x3003 () Bool)
(declare-fun x2662 () Bool)
(declare-fun x3109 () Bool)
(declare-fun x1703 () Bool)
(declare-fun x2620 () Int)
(declare-fun x1958 () Bool)
(declare-fun x1664 () Bool)
(declare-fun x872 () Bool)
(declare-fun x3310 () Int)
(declare-fun x2771 () Bool)
(declare-fun x674 () x1716)
(declare-fun x3278 () Bool)
(declare-fun x3406 () Int)
(declare-fun x3816 () Bool)
(declare-fun x2636 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x4080 () Bool)
(declare-fun x925 () Int)
(declare-fun x3473 () x1716)
(declare-fun x183 () Int)
(declare-fun x2073 () Bool)
(declare-fun x314 () Int)
(declare-fun x1676 () Bool)
(declare-fun x2711 () x1716)
(declare-fun x1438 () Int)
(declare-fun x2304 () Int)
(declare-fun x1078 () Int)
(declare-fun x3982 () Int)
(declare-fun x510 () Int)
(declare-fun x1162 () Bool)
(declare-fun x3800 () Bool)
(declare-fun x1597 () Bool)
(declare-fun x341 () Int)
(declare-fun x2586 () Bool)
(declare-fun x3627 () x1716)
(declare-fun x3693 () Bool)
(declare-fun x3287 () Bool)
(declare-fun x3938 () Bool)
(declare-fun x3857 () Bool)
(declare-fun x2307 () Int)
(declare-fun x1711 () x1716)
(declare-fun x4288 () Int)
(declare-fun x764 () Bool)
(declare-fun x11 () Bool)
(declare-fun x1742 () Bool)
(declare-fun x1010 () Bool)
(declare-fun x538 () Int)
(declare-fun x635 () Int)
(declare-fun x189 () x1716)
(declare-fun x1509 () Int)
(declare-fun x1329 () Bool)
(declare-fun x2613 () Int)
(declare-fun x4 () Bool)
(declare-fun x4386 () Bool)
(declare-fun x212 () Int)
(declare-fun x1999 () Bool)
(declare-fun x4195 () x1716)
(declare-fun x790 () Int)
(declare-fun x3993 () Int)
(declare-fun x3189 () Bool)
(declare-fun x2426 () x1716)
(declare-fun x2470 () Int)
(declare-fun x356 () Int)
(declare-fun x2863 () Int)
(declare-fun x102 () Int)
(declare-fun x1341 () Bool)
(declare-fun x1712 () Int)
(declare-fun x2751 () Int)
(declare-fun x1971 () Int)
(declare-fun x4119 () x1716)
(declare-fun x513 () Bool)
(declare-fun x402 () Int)
(declare-fun x653 () Int)
(declare-fun x2903 () Bool)
(declare-fun x132 (Int) Int)
(declare-fun x2868 () Bool)
(declare-fun x1255 () Int)
(declare-fun x49 () Int)
(declare-fun x982 () Bool)
(declare-fun x2517 () Int)
(declare-fun x1957 () Bool)
(declare-fun x1396 () x1716)
(declare-fun x2948 () Int)
(declare-fun x3736 () Int)
(declare-fun x2238 () Int)
(declare-fun x4066 () Int)
(declare-fun x1328 () Int)
(declare-fun x1462 () Int)
(declare-fun x2005 () Int)
(declare-fun x2332 () Bool)
(declare-fun x4325 () Int)
(declare-fun x262 () Int)
(declare-fun x1006 () Bool)
(declare-fun x2228 () Bool)
(declare-fun x2341 () Int)
(declare-fun x53 () Bool)
(declare-fun x3035 () x1716)
(declare-fun x884 () Int)
(declare-fun x2610 () Int)
(declare-fun x92 () Bool)
(declare-fun x2958 () Int)
(declare-fun x2371 () Int)
(declare-fun x4401 () Bool)
(declare-fun x4160 () Int)
(declare-fun x3701 () Bool)
(declare-fun x1677 () Bool)
(declare-fun x13 () Bool)
(declare-fun x309 () Bool)
(declare-fun x282 () Bool)
(declare-fun x1915 () Bool)
(declare-fun x756 () x1716)
(declare-fun x627 () Bool)
(declare-fun x644 () Bool)
(declare-fun x1780 () Bool)
(declare-fun x697 () Bool)
(declare-fun x3149 () Int)
(declare-fun x1557 () Int)
(declare-fun x2063 () Bool)
(declare-fun x327 () Int)
(declare-fun x3032 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x2828 () Bool)
(declare-fun x996 () Int)
(declare-fun x2542 () Bool)
(declare-fun x377 () Bool)
(declare-fun x648 () Int)
(declare-fun x1755 () Bool)
(declare-fun x2175 () Bool)
(declare-fun x3981 () Bool)
(declare-fun x1392 () Int)
(declare-fun x861 () Int)
(declare-fun x4306 () Int)
(declare-fun x1276 () Int)
(declare-fun x1336 () Bool)
(declare-fun x1930 () Int)
(declare-fun x2411 () Int)
(declare-fun x2396 () Bool)
(declare-fun x2086 () Bool)
(declare-fun x3811 () Bool)
(declare-fun x4083 () Bool)
(declare-fun x2111 () Bool)
(declare-fun x512 () Int)
(declare-fun x4189 () Int)
(declare-fun x2696 () Int)
(declare-fun x4300 () Bool)
(declare-fun x3005 () Int)
(declare-fun x1491 () Bool)
(declare-fun x436 () Bool)
(declare-fun x2601 () Bool)
(declare-fun x1547 () x1716)
(declare-fun x3344 () Int)
(declare-fun x2442 () Int)
(declare-fun x1531 () x1716)
(declare-fun x200 () Bool)
(declare-fun x2446 () Bool)
(declare-fun x144 () Bool)
(declare-fun x2245 () Int)
(declare-fun x726 () Int)
(declare-fun x3894 () Int)
(declare-fun x78 () Bool)
(declare-fun x3229 () Int)
(declare-fun x3942 () Int)
(declare-fun x3753 () x1716)
(declare-fun x1097 () Bool)
(declare-fun x2865 () x1716)
(declare-fun x1176 () Bool)
(declare-fun x2557 () Bool)
(declare-fun x2981 () Int)
(declare-fun x3014 () Bool)
(declare-fun x3826 () Int)
(declare-fun x3313 () Bool)
(declare-fun x3625 () Int)
(declare-fun x1536 () Int)
(declare-fun x2338 () Bool)
(declare-fun x2319 () Bool)
(declare-fun x1497 () Int)
(declare-fun x3356 () Int)
(declare-fun x4054 () Bool)
(declare-fun x1879 () Bool)
(declare-fun x2909 () Int)
(declare-fun x584 () Bool)
(declare-fun x2965 () Bool)
(declare-fun x491 () Int)
(declare-fun x4096 () Int)
(declare-fun x2089 () Int)
(declare-fun x1717 () x1716)
(declare-fun x2894 () Int)
(declare-fun x1410 () x1716)
(declare-fun x527 () Int)
(declare-fun x2850 () Bool)
(declare-fun x4251 () Bool)
(declare-fun x506 () Int)
(declare-fun x285 () Bool)
(declare-fun x2389 () x1716)
(declare-fun x3340 () Int)
(declare-fun x1982 () Int)
(declare-fun x987 () Bool)
(declare-fun x875 () x1716)
(declare-fun x228 () Int)
(declare-fun x4307 () Bool)
(declare-fun x2022 () Int)
(declare-fun x600 () Bool)
(declare-fun x3974 () Int)
(declare-fun x4261 () Int)
(declare-fun x1180 () Int)
(declare-fun x1807 () Bool)
(declare-fun x2772 () Bool)
(declare-fun x232 () Int)
(declare-fun x2081 () Bool)
(declare-fun x1891 () Bool)
(declare-fun x2622 () Int)
(declare-fun x3086 () Bool)
(declare-fun x3023 () Bool)
(declare-fun x2139 () Int)
(declare-fun x1120 () Bool)
(declare-fun x258 () Bool)
(declare-fun x330 () Bool)
(declare-fun x3714 () Int)
(declare-fun x458 () Int)
(declare-fun x2461 () Bool)
(declare-fun x1638 () Bool)
(declare-fun x3874 () Int)
(declare-fun x587 () Bool)
(declare-fun x4035 () Int)
(declare-fun x874 () Int)
(declare-fun x1089 () Bool)
(declare-fun x2472 () Int)
(declare-fun x1582 () Bool)
(declare-fun x1656 () Bool)
(declare-fun x794 () Int)
(declare-fun x482 () x1716)
(declare-fun x3120 () Int)
(declare-fun x2482 () Bool)
(declare-fun x19 () Bool)
(declare-fun x3129 () Bool)
(declare-fun x4137 (Int) Int)
(declare-fun x3945 () Bool)
(declare-fun x2141 () Bool)
(declare-fun x2932 () Bool)
(declare-fun x467 () Int)
(declare-fun x1380 () Bool)
(declare-fun x891 () Bool)
(declare-fun x2421 () Int)
(declare-fun x626 () Int)
(declare-fun x1165 () Bool)
(declare-fun x811 () Int)
(declare-fun x1123 () Int)
(declare-fun x2115 () Int)
(declare-fun x3562 () Bool)
(declare-fun x422 () Bool)
(declare-fun x240 () Bool)
(declare-fun x4317 (Int Int) Int)
(declare-fun x3858 () Bool)
(declare-fun x1068 () Bool)
(declare-fun x3522 () Bool)
(declare-fun x2892 () Int)
(declare-fun x1590 () Bool)
(declare-fun x2612 () Bool)
(declare-fun x4270 () Int)
(declare-fun x3568 () Int)
(declare-fun x460 () Bool)
(declare-fun x1977 () Int)
(declare-fun x4228 () Bool)
(declare-fun x2199 () Bool)
(declare-fun x2209 () Bool)
(declare-fun x264 () Int)
(declare-fun x2762 () Bool)
(declare-fun x531 () Bool)
(declare-fun x197 () Bool)
(declare-fun x3015 () Bool)
(declare-fun x4052 () Bool)
(declare-fun x3547 () Int)
(declare-fun x3622 () Bool)
(declare-fun x2654 () x1716)
(declare-fun x91 () Bool)
(declare-fun x2664 () Int)
(declare-fun x3224 () x1716)
(declare-fun x2297 () Int)
(declare-fun x1262 (x1716) Int)
(declare-fun x3573 () Int)
(declare-fun x2591 () Int)
(declare-fun x2858 () Int)
(declare-fun x508 () Bool)
(declare-fun x2994 () Bool)
(declare-fun x3385 () Bool)
(declare-fun x2363 () Bool)
(declare-fun x1666 () Bool)
(declare-fun x3082 () Bool)
(declare-fun x2518 () Bool)
(declare-fun x1832 () Bool)
(declare-fun x3854 () Bool)
(declare-fun x1632 () Bool)
(declare-fun x834 () Bool)
(declare-fun x3956 () Bool)
(declare-fun x3607 () Int)
(declare-fun x3362 () Bool)
(declare-fun x4042 () Bool)
(declare-fun x1516 () Bool)
(declare-fun x1709 () Bool)
(declare-fun x2097 () Int)
(declare-fun x4361 () Bool)
(declare-fun x788 () Int)
(declare-fun x3182 () Int)
(declare-fun x360 () Int)
(declare-fun x1899 () Int)
(declare-fun x2854 () Bool)
(declare-fun x2489 () Bool)
(declare-fun x1663 () Bool)
(declare-fun x3134 () Int)
(declare-fun x4193 () Bool)
(declare-fun x1025 () Bool)
(declare-fun x1318 () Int)
(declare-fun x722 () Int)
(declare-fun x3838 () Bool)
(declare-fun x4393 () Int)
(declare-fun x3127 () Int)
(declare-fun x2385 () Bool)
(declare-fun x2632 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x3835 () Bool)
(declare-fun x646 () Bool)
(declare-fun x1469 () Bool)
(declare-fun x2362 () Bool)
(declare-fun x4173 () Int)
(declare-fun x480 () Bool)
(declare-fun x2011 () Bool)
(declare-fun x3306 () Int)
(declare-fun x3173 () Int)
(declare-fun x3094 () Int)
(declare-fun x3525 () x1716)
(declare-fun x1241 () Int)
(declare-fun x3510 () Int)
(declare-fun x699 () Bool)
(declare-fun x3746 (Int) Int)
(declare-fun x3666 () Bool)
(declare-fun x23 () Bool)
(declare-fun x4050 () x1716)
(declare-fun x2553 () Bool)
(declare-fun x3722 () Int)
(declare-fun x4029 () Int)
(declare-fun x2510 () Int)
(declare-fun x3850 () Bool)
(declare-fun x3931 () Int)
(declare-fun x549 () Int)
(declare-fun x386 () Bool)
(declare-fun x2443 () Bool)
(declare-fun x913 () Int)
(declare-fun x1529 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x3141 () Int)
(declare-fun x3577 () Int)
(declare-fun x2151 () Bool)
(declare-fun x2581 () Int)
(declare-fun x2229 () Bool)
(declare-fun x1826 () Bool)
(declare-fun x1603 () Bool)
(declare-fun x3155 () Bool)
(declare-fun x3943 () Int)
(declare-fun x1130 () Bool)
(declare-fun x3710 () Bool)
(declare-fun x1641 () Int)
(declare-fun x4381 () Bool)
(declare-fun x1589 () Bool)
(declare-fun x2526 () Bool)
(declare-fun x551 () Bool)
(declare-fun x2164 () Int)
(declare-fun x3276 () Bool)
(declare-fun x1811 () Bool)
(declare-fun x3350 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x2962 () Int)
(declare-fun x2486 () x1716)
(declare-fun x2893 () Int)
(declare-fun x1246 () Int)
(declare-fun x4269 () Int)
(declare-fun x3146 () Bool)
(declare-fun x4400 () Bool)
(declare-fun x3040 () Bool)
(declare-fun x2845 () Bool)
(declare-fun x1705 () Bool)
(declare-fun x4113 () Int)
(declare-fun x3965 () Bool)
(declare-fun x3882 () Bool)
(declare-fun x4213 () Int)
(declare-fun x3872 () Bool)
(declare-fun x2672 () x1716)
(declare-fun x1367 () Bool)
(declare-fun x1100 () Int)
(declare-fun x1519 () Int)
(declare-fun x3732 () Int)
(declare-fun x1390 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x1496 () Bool)
(declare-fun x524 () Bool)
(declare-fun x2818 () Bool)
(declare-fun x4146 () Int)
(declare-fun x4351 () Int)
(declare-fun x4250 () Bool)
(declare-fun x3181 () Bool)
(declare-fun x1214 () Bool)
(declare-fun x1034 () Int)
(declare-fun x3640 () Bool)
(declare-fun x739 () Bool)
(declare-fun x3658 () Int)
(declare-fun x4129 () x1716)
(declare-fun x2500 () Int)
(declare-fun x2454 () Int)
(declare-fun x2720 () Int)
(declare-fun x2194 () Bool)
(declare-fun x2473 () Int)
(declare-fun x143 () Int)
(declare-fun x2102 () Bool)
(declare-fun x2993 () Int)
(declare-fun x3307 () Bool)
(declare-fun x4172 () Int)
(declare-fun x2026 () Bool)
(declare-fun x231 () Int)
(declare-fun x3172 () Bool)
(declare-fun x3724 () Bool)
(declare-fun x4058 () x1716)
(declare-fun x3559 () Int)
(declare-fun x2214 () Bool)
(declare-fun x1370 () Bool)
(declare-fun x3355 () Int)
(declare-fun x3709 () Int)
(declare-fun x244 () Int)
(declare-fun x2516 () x1716)
(declare-fun x1730 () Bool)
(declare-fun x4186 () Int)
(declare-fun x1185 () Bool)
(declare-fun x152 () Bool)
(declare-fun x3639 () Int)
(declare-fun x3628 () Bool)
(declare-fun x1870 () x1716)
(declare-fun x3695 () Bool)
(declare-fun x2403 () Bool)
(declare-fun x643 () x1716)
(declare-fun x300 () Int)
(declare-fun x1308 () Bool)
(declare-fun x52 () Int)
(declare-fun x3780 () Bool)
(declare-fun x1071 () Int)
(declare-fun x2593 () Bool)
(declare-fun x2498 () Bool)
(declare-fun x3656 () Bool)
(declare-fun x1790 () Bool)
(declare-fun x4164 () Int)
(declare-fun x2030 () Bool)
(declare-fun x4360 () Bool)
(declare-fun x2178 () Int)
(declare-fun x2631 () Bool)
(declare-fun x3988 () Int)
(declare-fun x2422 () Bool)
(declare-fun x3292 () Int)
(declare-fun x1046 () Bool)
(declare-fun x22 () Bool)
(declare-fun x462 () x1716)
(declare-fun x1106 () Int)
(declare-fun x1511 () Int)
(declare-fun x3797 () Bool)
(declare-fun x2433 () Bool)
(declare-fun x2099 () Int)
(declare-fun x3890 () x1716)
(declare-fun x1636 () Bool)
(declare-fun x677 () Bool)
(declare-fun x3817 () Bool)
(declare-fun x9 () Int)
(declare-fun x3716 () Int)
(declare-fun x3285 () Int)
(declare-fun x2155 () x1716)
(declare-fun x3336 () Int)
(declare-fun x448 () Bool)
(declare-fun x3180 () Int)
(declare-fun x1507 () Bool)
(declare-fun x629 () Bool)
(declare-fun x3139 () Int)
(declare-fun x4130 () Int)
(declare-fun x1052 () Bool)
(declare-fun x1732 () Int)
(declare-fun x3565 () Bool)
(declare-fun x3246 () Int)
(declare-fun x3895 () Bool)
(declare-fun x2839 () Int)
(declare-fun x2068 () Int)
(declare-fun x4214 () Bool)
(declare-fun x1871 () Bool)
(declare-fun x731 () Bool)
(declare-fun x4141 () Bool)
(declare-fun x4038 () Bool)
(declare-fun x1560 () Bool)
(declare-fun x4040 () x1716)
(declare-fun x2469 () Int)
(declare-fun x986 () Bool)
(declare-fun x960 () Bool)
(declare-fun x2509 () Bool)
(declare-fun x4348 () Int)
(declare-fun x2095 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x1859 () Bool)
(declare-fun x2759 () Int)
(declare-fun x1296 () Int)
(declare-fun x430 () Bool)
(declare-fun x1000 () x1716)
(declare-fun x2895 () Int)
(declare-fun x3869 () Bool)
(declare-fun x1338 () Bool)
(declare-fun x2364 () Bool)
(declare-fun x54 () Int)
(declare-fun x481 () Bool)
(declare-fun x4304 () Int)
(declare-fun x843 () Int)
(declare-fun x4006 () Int)
(declare-fun x721 () Int)
(declare-fun x2187 () x1716)
(declare-fun x3918 () Int)
(declare-fun x779 () Int)
(declare-fun x2606 () Bool)
(declare-fun x3194 (Int) Int)
(declare-fun x24 () Int)
(declare-fun x3590 () Bool)
(declare-fun x3106 () Bool)
(declare-fun x60 () Bool)
(declare-fun x367 () Int)
(declare-fun x1941 () Bool)
(declare-fun x2374 () Int)
(declare-fun x3731 () Bool)
(declare-fun x2648 (Int) Int)
(declare-fun x1421 () Int)
(declare-fun x2686 () Int)
(declare-fun x2642 () Int)
(declare-fun x2375 () Int)
(declare-fun x2786 () Int)
(declare-fun x2971 () Bool)
(declare-fun x735 () Int)
(declare-fun x642 () x1716)
(declare-fun x2556 () Bool)
(declare-fun x4369 () Int)
(declare-fun x2425 () Int)
(declare-fun x108 () Int)
(declare-fun x681 () Bool)
(declare-fun x515 () Bool)
(declare-fun x3751 () Bool)
(declare-fun x4010 () Int)
(declare-fun x553 () Bool)
(declare-fun x1699 () Int)
(declare-fun x2049 () Bool)
(declare-fun x95 () Bool)
(declare-fun x3166 () Int)
(declare-fun x2006 () Int)
(declare-fun x3371 () Int)
(declare-fun x3422 () Bool)
(declare-fun x2397 () Int)
(declare-fun x3117 () Bool)
(declare-fun x848 () Bool)
(declare-fun x154 () Bool)
(declare-fun x149 () Bool)
(declare-fun x3927 () Int)
(declare-fun x3883 () Bool)
(declare-fun x606 () Bool)
(declare-fun x1348 () Bool)
(declare-fun x808 () Bool)
(declare-fun x3773 () Bool)
(declare-fun x3969 () Int)
(declare-fun x1505 () Int)
(declare-fun x112 () Int)
(declare-fun x4339 () Bool)
(declare-fun x1218 () Int)
(declare-fun x2708 () Bool)
(declare-fun x4001 () Bool)
(declare-fun x3271 () Bool)
(declare-fun x2140 () x1716)
(declare-fun x1409 () Int)
(declare-fun x823 () Bool)
(declare-fun x1600 () Int)
(declare-fun x4152 () Bool)
(declare-fun x923 () Bool)
(declare-fun x2923 () Int)
(declare-fun x3136 () x1716)
(declare-fun x2946 () Bool)
(declare-fun x3534 () Int)
(declare-fun x1857 () Int)
(declare-fun x2761 () Bool)
(declare-fun x3341 () Int)
(declare-fun x2021 () Int)
(declare-fun x1140 () Int)
(declare-fun x33 () Bool)
(declare-fun x3115 () Int)
(declare-fun x1563 () Bool)
(declare-fun x4136 () Bool)
(declare-fun x1115 () Bool)
(declare-fun x296 () Int)
(declare-fun x2444 () Bool)
(declare-fun x2577 () Bool)
(declare-fun x2031 () Int)
(declare-fun x434 () Int)
(declare-fun x989 () Int)
(declare-fun x999 () Bool)
(declare-fun x2459 () Int)
(declare-fun x1381 () Bool)
(declare-fun x3957 () Int)
(declare-fun x1371 () Bool)
(declare-fun x2624 () x1716)
(declare-fun x3582 () x1716)
(declare-fun x774 () Int)
(declare-fun x2879 () Bool)
(declare-fun x4367 () Bool)
(declare-fun x302 () Int)
(declare-fun x2215 () Bool)
(declare-fun x161 () Bool)
(declare-fun x4127 () x1716)
(declare-fun x2487 () Int)
(declare-fun x4353 () Bool)
(declare-fun x428 () Int)
(declare-fun x1166 () Int)
(declare-fun x2983 () Bool)
(declare-fun x1961 () Bool)
(declare-fun x1852 () Bool)
(declare-fun x1873 () Int)
(declare-fun x932 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x2705 () Int)
(declare-fun x3593 () Bool)
(declare-fun x2524 () Bool)
(declare-fun x3784 () Bool)
(declare-fun x2023 () x1716)
(declare-fun x1802 () Bool)
(declare-fun x3688 () Bool)
(declare-fun x3583 () Bool)
(declare-fun x959 () Bool)
(declare-fun x812 () x1716)
(declare-fun x1360 () Bool)
(declare-fun x226 () Int)
(declare-fun x1950 () Int)
(declare-fun x2066 () Bool)
(declare-fun x3790 () Bool)
(declare-fun x453 () Bool)
(declare-fun x2148 () Int)
(declare-fun x2913 () Bool)
(declare-fun x2120 () Bool)
(declare-fun x2392 () Int)
(declare-fun x2871 () Bool)
(declare-fun x745 () Bool)
(declare-fun x1436 () Int)
(declare-fun x2807 () x1716)
(declare-fun x662 () Bool)
(declare-fun x1743 (Int) Int)
(declare-fun x2831 () Int)
(declare-fun x3163 () Bool)
(declare-fun x901 () Int)
(declare-fun x576 () Bool)
(declare-fun x4104 () Bool)
(declare-fun x2514 () Bool)
(declare-fun x1980 () Bool)
(declare-fun x3563 () Int)
(declare-fun x3456 () Int)
(declare-fun x3048 () Int)
(declare-fun x4229 () Bool)
(declare-fun x969 () Bool)
(declare-fun x855 () Int)
(declare-fun x12 () Bool)
(declare-fun x738 () Bool)
(declare-fun x257 () Bool)
(declare-fun x3226 () Bool)
(declare-fun x4204 () Int)
(declare-fun x591 () Bool)
(declare-fun x2035 () x1716)
(declare-fun x2401 () Bool)
(declare-fun x3686 () Bool)
(declare-fun x1704 () x1716)
(declare-fun x1204 () Int)
(declare-fun x3420 () Bool)
(declare-fun x2984 () Bool)
(declare-fun x3060 () x1716)
(declare-fun x2130 () Int)
(declare-fun x1605 () Int)
(declare-fun x4336 () Bool)
(declare-fun x497 () Int)
(declare-fun x4031 () Bool)
(declare-fun x2493 () Bool)
(declare-fun x1686 () Int)
(declare-fun x2833 () Int)
(declare-fun x1127 () Bool)
(declare-fun x1617 () Bool)
(declare-fun x3579 () Int)
(declare-fun x1593 () Int)
(declare-fun x3612 () Bool)
(declare-fun x3997 () Int)
(declare-fun x679 () Bool)
(declare-fun x2723 () Bool)
(declare-fun x216 () x1716)
(declare-fun x400 () Bool)
(declare-fun x1056 () Int)
(declare-fun x1959 () Bool)
(declare-fun x2101 () Int)
(declare-fun x2656 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x2693 () Int)
(declare-fun x803 () Int)
(declare-fun x1305 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x3193 () Int)
(declare-fun x1178 () Int)
(declare-fun x609 () Bool)
(declare-fun x2815 () Int)
(declare-fun x3802 () Int)
(declare-fun x2778 () Bool)
(declare-fun x1776 () Int)
(declare-fun x3539 () Int)
(declare-fun x1646 () Bool)
(declare-fun x2742 () x1716)
(declare-fun x2200 () Bool)
(declare-fun x3320 () Bool)
(declare-fun x2054 () Int)
(declare-fun x2315 () Bool)
(declare-fun x3589 () Bool)
(declare-fun x329 () Int)
(declare-fun x761 () Int)
(declare-fun x533 () Bool)
(declare-fun x3637 () Int)
(declare-fun x667 () x1716)
(declare-fun x2108 () Int)
(declare-fun x2907 () Int)
(declare-fun x3940 () x1716)
(declare-fun x475 () Bool)
(declare-fun x4232 () Bool)
(declare-fun x1463 () Int)
(declare-fun x1427 () Bool)
(declare-fun x4087 () Bool)
(declare-fun x3540 () Bool)
(declare-fun x4285 () Int)
(declare-fun x1608 () Bool)
(declare-fun x29 () Bool)
(declare-fun x1542 () Int)
(declare-fun x2477 () Int)
(declare-fun x881 () Int)
(declare-fun x4326 () x1716)
(declare-fun x2455 () Bool)
(declare-fun x2346 () Bool)
(declare-fun x2974 () Bool)
(declare-fun x2380 () Bool)
(declare-fun x1192 () Bool)
(declare-fun x1764 () Bool)
(declare-fun x3675 () Bool)
(declare-fun x1244 () x1716)
(declare-fun x1595 () Int)
(declare-fun x1294 () x1716)
(declare-fun x127 () Bool)
(declare-fun x3861 () Int)
(declare-fun x1678 () Bool)
(declare-fun x178 () Bool)
(declare-fun x3119 () x1716)
(declare-fun x3190 () Bool)
(declare-fun x297 () Bool)
(declare-fun x1673 () Bool)
(declare-fun x277 () x1716)
(declare-fun x4175 () x1716)
(declare-fun x3799 () Int)
(declare-fun x3210 () Bool)
(declare-fun x3113 () Int)
(declare-fun x2604 () Bool)
(declare-fun x3187 () Int)
(declare-fun x2286 () Bool)
(declare-fun x3270 () Bool)
(declare-fun x1945 () Bool)
(declare-fun x193 () Bool)
(declare-fun x1251 () Int)
(declare-fun x1422 () Bool)
(declare-fun x3207 () Int)
(declare-fun x782 () Bool)
(declare-fun x1988 () Bool)
(declare-fun x3033 () Bool)
(declare-fun x138 () Int)
(declare-fun x4215 () Bool)
(declare-fun x3681 () Bool)
(declare-fun x2659 () Bool)
(declare-fun x3091 () Bool)
(declare-fun x1733 () Bool)
(declare-fun x2258 () Int)
(declare-fun x2634 () Bool)
(declare-fun x3556 () Bool)
(declare-fun x3089 () Bool)
(declare-fun x2528 () Bool)
(declare-fun x124 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x3265 () Int)
(declare-fun x1602 () Bool)
(declare-fun x2810 () Bool)
(declare-fun x3772 () Int)
(declare-fun x3391 () Bool)
(declare-fun x1058 () Int)
(declare-fun x4155 () Bool)
(declare-fun x1317 () Int)
(declare-fun x4254 () Bool)
(declare-fun x4272 () Bool)
(declare-fun x3990 () Int)
(declare-fun x2602 () Bool)
(declare-fun x2407 () Bool)
(declare-fun x1114 () Bool)
(declare-fun x2376 (Int) x1716)
(declare-fun x2061 () Bool)
(declare-fun x1356 () Int)
(declare-fun x597 () Int)
(declare-fun x425 () Bool)
(declare-fun x2318 () Int)
(declare-fun x631 () Bool)
(declare-fun x1708 () Int)
(declare-fun x3932 () Bool)
(declare-fun x281 () Int)
(declare-fun x3030 () Int)
(declare-fun x1032 () Int)
(declare-fun x2889 () x1716)
(declare-fun x3373 () Bool)
(declare-fun x1555 () Int)
(declare-fun x3623 () Bool)
(declare-fun x4093 () Bool)
(declare-fun x450 () Int)
(declare-fun x3833 () Int)
(declare-fun x815 () Int)
(declare-fun x3980 () Bool)
(declare-fun x3195 () Bool)
(declare-fun x4226 () Bool)
(declare-fun x522 () Bool)
(declare-fun x810 () Bool)
(declare-fun x236 () Bool)
(declare-fun x2118 () Int)
(declare-fun x167 () Int)
(declare-fun x719 () Bool)
(declare-fun x403 () Bool)
(declare-fun x664 () Bool)
(declare-fun x3272 () Bool)
(declare-fun x2706 () Int)
(declare-fun x2628 () Int)
(declare-fun x2438 () Int)
(declare-fun x4397 () Bool)
(declare-fun x2541 () Int)
(declare-fun x2271 () Bool)
(declare-fun x526 () Bool)
(declare-fun x3842 () Bool)
(declare-fun x2337 () Bool)
(declare-fun x335 () Bool)
(declare-fun x3405 () Bool)
(declare-fun x168 () Int)
(declare-fun x933 () Int)
(declare-fun x1688 () Int)
(declare-fun x1928 () Int)
(declare-fun x4387 () Int)
(declare-fun x362 () Bool)
(declare-fun x3262 () Bool)
(declare-fun x2217 () Bool)
(declare-fun x2232 () Bool)
(declare-fun x603 () Bool)
(declare-fun x1854 () Int)
(declare-fun x1076 () Bool)
(declare-fun x186 () Bool)
(declare-fun x114 () Bool)
(declare-fun x3110 () Int)
(declare-fun x4169 () Bool)
(declare-fun x3647 () Int)
(declare-fun x1545 () x1716)
(declare-fun x4086 () Int)
(declare-fun x4032 (x1716) Int)
(declare-fun x455 () Bool)
(declare-fun x8 () Int)
(declare-fun x4132 () Int)
(declare-fun x1770 () Int)
(declare-fun x686 () Bool)
(declare-fun x2750 () Int)
(declare-fun x3437 () Int)
(declare-fun x1433 () Bool)
(declare-fun x3702 () Bool)
(declare-fun x851 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x3505 () Bool)
(declare-fun x4199 () Int)
(declare-fun x3142 () Bool)
(declare-fun x286 () Bool)
(declare-fun x1065 () Int)
(declare-fun x3649 () Bool)
(declare-fun x3365 () Int)
(declare-fun x3053 () Bool)
(declare-fun x2617 () Bool)
(declare-fun x2127 () Bool)
(declare-fun x3475 () Bool)
(declare-fun x2280 () Bool)
(declare-fun x3498 () Int)
(declare-fun x3058 () Bool)
(declare-fun x1573 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x312 () Int)
(declare-fun x2881 () Bool)
(declare-fun x3081 () Int)
(declare-fun x3580 () Bool)
(declare-fun x3808 () Bool)
(declare-fun x4299 () Int)
(declare-fun x3440 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x1142 () x1716)
(declare-fun x2925 () Bool)
(declare-fun x25 () Bool)
(declare-fun x3065 () Bool)
(declare-fun x4009 () Int)
(declare-fun x4241 () Bool)
(declare-fun x3417 () Bool)
(declare-fun x3698 () Int)
(declare-fun x1321 () Int)
(declare-fun x1750 () Int)
(declare-fun x3428 () Int)
(declare-fun x2917 () Bool)
(declare-fun x3372 () Bool)
(declare-fun x2694 () x1716)
(declare-fun x1066 () Bool)
(declare-fun x2618 () Int)
(declare-fun x3487 () Bool)
(declare-fun x2076 () Bool)
(declare-fun x1956 () Bool)
(declare-fun x2351 () Bool)
(declare-fun x2956 () Bool)
(declare-fun x3671 () Bool)
(declare-fun x3834 () Bool)
(declare-fun x1671 () Int)
(declare-fun x879 () Int)
(declare-fun x3963 () Bool)
(declare-fun x4120 () Bool)
(declare-fun x1937 () Bool)
(declare-fun x2641 () Int)
(declare-fun x979 () Bool)
(declare-fun x1976 () x1716)
(declare-fun x1372 () Int)
(declare-fun x947 () Bool)
(declare-fun x807 () Int)
(declare-fun x361 () Int)
(declare-fun x4057 () Bool)
(declare-fun x3606 () Bool)
(declare-fun x4055 () Int)
(declare-fun x2072 () Bool)
(declare-fun x3828 () Int)
(declare-fun x1607 () Int)
(declare-fun x68 () Bool)
(declare-fun x280 () Bool)
(declare-fun x1821 () Bool)
(declare-fun x2339 () Int)
(declare-fun x1077 () Bool)
(declare-fun x391 () Bool)
(declare-fun x2876 () Bool)
(declare-fun x1740 () Bool)
(declare-fun x1048 () Bool)
(declare-fun x1353 () x1716)
(declare-fun x3673 () Bool)
(declare-fun x582 () Int)
(declare-fun x1839 () Int)
(declare-fun x3213 () Int)
(declare-fun x1145 () Bool)
(declare-fun x537 () x1716)
(declare-fun x3517 () Int)
(declare-fun x1134 () Bool)
(declare-fun x389 () Bool)
(declare-fun x3745 () Bool)
(declare-fun x150 (x1716) Int)
(declare-fun x706 () Int)
(declare-fun x3157 () Int)
(declare-fun x388 () Bool)
(declare-fun x3144 () Bool)
(declare-fun x3238 () Bool)
(declare-fun x4138 () Int)
(declare-fun x2278 () Bool)
(declare-fun x3852 () x1716)
(declare-fun x2013 () x1716)
(declare-fun x3261 () Int)
(declare-fun x1567 () x1716)
(declare-fun x381 () Bool)
(declare-fun x1558 () Int)
(declare-fun x148 () Bool)
(declare-fun x2745 () Int)
(declare-fun x4002 () Int)
(declare-fun x252 () Bool)
(declare-fun x1074 () Bool)
(declare-fun x3361 () Bool)
(declare-fun x284 () Bool)
(declare-fun x4302 () Bool)
(declare-fun x2963 () Bool)
(declare-fun x2758 () Int)
(declare-fun x4338 () Bool)
(declare-fun x3084 () Bool)
(declare-fun x1889 () Int)
(declare-fun x3941 () Bool)
(declare-fun x3928 () Int)
(declare-fun x415 () Bool)
(declare-fun x2809 () x1716)
(declare-fun x3191 () Int)
(declare-fun x4098 () Bool)
(declare-fun x4298 () Bool)
(declare-fun x3039 () Int)
(declare-fun x3865 () Bool)
(declare-fun x670 () Bool)
(declare-fun x2189 () Bool)
(declare-fun x4263 () Bool)
(declare-fun x1926 () Bool)
(declare-fun x2479 () Int)
(declare-fun x130 () Bool)
(declare-fun x502 () Bool)
(declare-fun x783 () Bool)
(declare-fun x3497 () Bool)
(declare-fun x1585 () Bool)
(declare-fun x4362 () x1716)
(declare-fun x3021 () Bool)
(declare-fun x2300 () Bool)
(declare-fun x1404 () Bool)
(declare-fun x1210 () Int)
(declare-fun x4182 () Int)
(declare-fun x1225 () Int)
(declare-fun x3041 () Int)
(declare-fun x3 () x1716)
(declare-fun x3717 () Int)
(declare-fun x2814 () Bool)
(declare-fun x363 () Bool)
(declare-fun x1886 () Bool)
(declare-fun x1324 () Int)
(declare-fun x3249 () Int)
(declare-fun x3421 () Bool)
(declare-fun x1484 () Bool)
(declare-fun x3985 () Bool)
(declare-fun x3995 () Bool)
(declare-fun x1082 () Int)
(declare-fun x4097 () x1716)
(declare-fun x621 () Bool)
(declare-fun x3614 () Int)
(declare-fun x477 () Bool)
(declare-fun x3107 (Int) Int)
(declare-fun x607 () Int)
(declare-fun x3691 () Bool)
(declare-fun x2235 (x1716) Int)
(declare-fun x1923 () Int)
(declare-fun x1735 () Int)
(declare-fun x887 () Bool)
(declare-fun x2905 () Bool)
(declare-fun x1702 () Bool)
(declare-fun x4033 () Int)
(declare-fun x1177 () Int)
(declare-fun x4071 () Bool)
(declare-fun x1314 () Int)
(declare-fun x2585 () Int)
(declare-fun x4266 () Bool)
(declare-fun x973 () Int)
(declare-fun x2441 () Int)
(declare-fun x1408 () Bool)
(declare-fun x2724 () Int)
(declare-fun x2685 () Int)
(declare-fun x1021 () Int)
(declare-fun x2590 () Bool)
(declare-fun x3870 () Int)
(declare-fun x3259 () Bool)
(declare-fun x3550 () Bool)
(declare-fun x3493 () Bool)
(declare-fun x3763 () Int)
(declare-fun x2468 () Bool)
(declare-fun x797 () Bool)
(declare-fun x3897 () Bool)
(declare-fun x3072 () Int)
(declare-fun x3328 () Bool)
(declare-fun x1748 () Int)
(declare-fun x2485 () x1716)
(declare-fun x3314 () Int)
(declare-fun x2989 () Bool)
(declare-fun x2507 () Int)
(declare-fun x1017 () Bool)
(declare-fun x4145 () Bool)
(declare-fun x2880 () Bool)
(declare-fun x3879 () Bool)
(declare-fun x3848 () Bool)
(declare-fun x1393 () Int)
(declare-fun x1818 () Bool)
(declare-fun x4133 () Int)
(declare-fun x565 () Int)
(declare-fun x3291 () x1716)
(declare-fun x62 () Bool)
(declare-fun x3474 () Int)
(declare-fun x185 () Int)
(declare-fun x1339 () Bool)
(declare-fun x4385 () Int)
(declare-fun x1648 (x1716) Int)
(declare-fun x122 () Bool)
(declare-fun x3116 () Int)
(declare-fun x2398 () Bool)
(declare-fun x2867 () Int)
(declare-fun x1631 () Bool)
(declare-fun x1752 () Int)
(declare-fun x1791 () Int)
(declare-fun x902 () x1716)
(declare-fun x1002 () Int)
(declare-fun x824 () Bool)
(declare-fun x1694 () Int)
(declare-fun x2125 () Bool)
(declare-fun x1044 () Bool)
(declare-fun x156 () Int)
(declare-fun x1428 () Int)
(declare-fun x2968 () x1716)
(declare-fun x3490 () Int)
(declare-fun x1725 () x1716)
(declare-fun x457 () Bool)
(declare-fun x3317 () Int)
(declare-fun x2603 () Bool)
(declare-fun x741 () Int)
(declare-fun x2680 () Bool)
(declare-fun x1031 () Bool)
(declare-fun x707 () Int)
(declare-fun x4211 () Bool)
(declare-fun x2138 () Bool)
(declare-fun x4314 () Bool)
(declare-fun x1876 () Int)
(declare-fun x2172 () Bool)
(declare-fun x3156 () Bool)
(declare-fun x17 () Bool)
(declare-fun x446 () Int)
(declare-fun x967 () Bool)
(declare-fun x21 () Int)
(declare-fun x2715 () Bool)
(declare-fun x805 () Int)
(declare-fun x3777 () Int)
(declare-fun x3100 () Int)
(declare-fun x909 () Bool)
(declare-fun x227 () Bool)
(declare-fun x1867 () Bool)
(declare-fun x1622 () Int)
(declare-fun x3665 () Bool)
(declare-fun x2763 () x1716)
(declare-fun x456 () Bool)
(declare-fun x1878 (x1716) Int)
(declare-fun x530 () Bool)
(declare-fun x198 () Int)
(declare-fun x701 () Int)
(declare-fun x3185 () Int)
(declare-fun x3479 () Bool)
(declare-fun x2004 () Bool)
(declare-fun x2310 () Int)
(declare-fun x1478 () Int)
(declare-fun x2703 () Int)
(declare-fun x1083 () Bool)
(declare-fun x2395 () x1716)
(declare-fun x1303 () x1716)
(declare-fun x1921 () Bool)
(declare-fun x1981 () Bool)
(declare-fun x1005 () Int)
(declare-fun x976 () Bool)
(declare-fun x1710 () Bool)
(declare-fun x2535 () Bool)
(declare-fun x2755 (x1716) Int)
(declare-fun x1718 () Bool)
(declare-fun x1539 () Bool)
(declare-fun x4151 () Int)
(declare-fun x877 () Bool)
(declare-fun x581 () Bool)
(declare-fun x4274 () Int)
(declare-fun x3906 () Int)
(declare-fun x2692 () Int)
(declare-fun x1749 () Int)
(declare-fun x2110 () Int)
(declare-fun x3807 () Bool)
(declare-fun x2717 () Bool)
(declare-fun x3960 () Bool)
(declare-fun x3327 () x1716)
(declare-fun x4148 () Bool)
(declare-fun x2046 () Int)
(declare-fun x496 () Bool)
(declare-fun x1501 () Int)
(declare-fun x75 () Int)
(declare-fun x550 () x1716)
(declare-fun x4112 () Bool)
(declare-fun x10 () Int)
(declare-fun x2669 () Int)
(declare-fun x2849 () Int)
(declare-fun x3034 () Bool)
(declare-fun x1572 () Bool)
(declare-fun x1691 () Int)
(declare-fun x3250 () Int)
(declare-fun x2712 () Int)
(declare-fun x3994 () Int)
(declare-fun x753 () Int)
(declare-fun x287 () Bool)
(declare-fun x169 () Int)
(declare-fun x2937 () x1716)
(declare-fun x2246 () Bool)
(declare-fun x2259 () Int)
(declare-fun x1745 () Bool)
(declare-fun x1265 () Int)
(declare-fun x3164 () x1716)
(declare-fun x1121 () Int)
(declare-fun x3444 () Int)
(declare-fun x353 () x1716)
(declare-fun x702 () Int)
(declare-fun x2595 () Int)
(declare-fun x2851 () Bool)
(declare-fun x3585 () Int)
(declare-fun x295 () x1716)
(declare-fun x2223 () Bool)
(declare-fun x2787 () Bool)
(declare-fun x3043 () Int)
(declare-fun x3818 () Bool)
(declare-fun x2939 () Bool)
(declare-fun x4327 () Bool)
(declare-fun x3992 () Int)
(declare-fun x1620 () Bool)
(declare-fun x2699 () Int)
(declare-fun x3277 () Int)
(declare-fun x2161 () Bool)
(declare-fun x2416 () Int)
(declare-fun x639 () Bool)
(declare-fun x546 () Bool)
(declare-fun x1969 () Bool)
(declare-fun x4310 () Int)
(declare-fun x1273 () Int)
(declare-fun x2734 () Bool)
(declare-fun x569 () Bool)
(declare-fun x3467 () x1716)
(declare-fun x3332 () Int)
(declare-fun x1862 () Int)
(declare-fun x2207 () Int)
(declare-fun x355 () Int)
(declare-fun x3399 () Bool)
(declare-fun x892 () Bool)
(declare-fun x2592 () Bool)
(declare-fun x624 () Int)
(declare-fun x3689 () Bool)
(declare-fun x3896 () x1716)
(declare-fun x3407 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x1144 () Bool)
(declare-fun x2378 () Bool)
(declare-fun x1738 () Bool)
(declare-fun x1179 () Bool)
(declare-fun x2062 () Int)
(declare-fun x4110 () Bool)
(declare-fun x175 () Bool)
(declare-fun x2360 () Int)
(declare-fun x3564 () Bool)
(declare-fun x2695 () x1716)
(declare-fun x431 () Int)
(declare-fun x3796 () Bool)
(declare-fun x4391 () Bool)
(declare-fun x1695 () Bool)
(declare-fun x3125 () Int)
(declare-fun x398 () Bool)
(declare-fun x2757 () Bool)
(declare-fun x1739 () Int)
(declare-fun x1346 () Bool)
(declare-fun x4128 () x1716)
(declare-fun x3678 () Bool)
(declare-fun x854 () Int)
(declare-fun x3770 () Bool)
(declare-fun x3257 () Bool)
(declare-fun x2387 () Int)
(declare-fun x4276 () Int)
(declare-fun x3967 () Bool)
(declare-fun x836 () Int)
(declare-fun x397 () Bool)
(declare-fun x4046 () x1716)
(declare-fun x3546 () Int)
(declare-fun x885 () Int)
(declare-fun x3529 () Bool)
(declare-fun x4278 () Bool)
(declare-fun x3388 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x99 () x1716)
(declare-fun x708 () Bool)
(declare-fun x1794 () Bool)
(declare-fun x2359 () Bool)
(declare-fun x3204 () Bool)
(declare-fun x503 () Bool)
(declare-fun x2070 () Int)
(declare-fun x4279 () Bool)
(declare-fun x541 () Int)
(declare-fun x3803 () Bool)
(declare-fun x3496 () Int)
(declare-fun x1138 () Bool)
(declare-fun x181 () Int)
(declare-fun x876 () x1716)
(declare-fun x752 (x1716) Int)
(declare-fun x73 () Int)
(declare-fun x454 () Bool)
(declare-fun x1992 () Bool)
(declare-fun x1235 () x1716)
(declare-fun x2305 () Bool)
(declare-fun x689 () Int)
(declare-fun x829 () Bool)
(declare-fun x2331 () Int)
(declare-fun x204 () Int)
(declare-fun x495 () Int)
(declare-fun x1989 () Bool)
(declare-fun x1838 () Bool)
(declare-fun x2605 () Bool)
(declare-fun x1111 () Bool)
(declare-fun x614 () Int)
(declare-fun x2154 () Bool)
(declare-fun x4075 () Bool)
(declare-fun x723 () Bool)
(declare-fun x3944 () Int)
(declare-fun x3387 () Int)
(declare-fun x813 () Int)
(declare-fun x2406 () Int)
(declare-fun x2647 () Bool)
(declare-fun x3289 () Bool)
(declare-fun x395 () x1716)
(declare-fun x4258 () x1716)
(declare-fun x2174 () Int)
(declare-fun x2640 () Bool)
(declare-fun x3506 () Int)
(declare-fun x1757 () Bool)
(declare-fun x3787 () Int)
(declare-fun x1109 () Int)
(declare-fun x1888 () x1716)
(declare-fun x1651 () Bool)
(declare-fun x4019 () Bool)
(declare-fun x2709 () Int)
(declare-fun x1295 () Int)
(declare-fun x2275 () Bool)
(declare-fun x416 () Bool)
(declare-fun x2568 () Bool)
(declare-fun x4243 () Bool)
(declare-fun x4053 () Bool)
(declare-fun x1325 () Bool)
(declare-fun x3588 () Int)
(declare-fun x1051 () Int)
(declare-fun x840 () Int)
(declare-fun x1687 () Bool)
(declare-fun x2861 () Int)
(declare-fun x1190 () Int)
(declare-fun x2423 () Int)
(declare-fun x1944 () x1716)
(declare-fun x1535 () Int)
(declare-fun x2145 () Bool)
(declare-fun x4216 () Bool)
(declare-fun x2697 () Bool)
(declare-fun x2404 () x1716)
(declare-fun x4388 () Int)
(declare-fun x1935 () Bool)
(declare-fun x485 () Int)
(declare-fun x1645 () Bool)
(declare-fun x1974 () Int)
(declare-fun x3719 () Int)
(declare-fun x2671 () Bool)
(declare-fun x233 () Bool)
(declare-fun x598 () Bool)
(declare-fun x3652 () x1716)
(declare-fun x853 () Int)
(declare-fun x1385 () Int)
(declare-fun x2920 () Bool)
(declare-fun x922 () Int)
(declare-fun x196 () Bool)
(declare-fun x3641 () Int)
(declare-fun x4322 () x1716)
(declare-fun x128 () Int)
(declare-fun x1929 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x106 (x1716) Int)
(declare-fun x1612 () Bool)
(declare-fun x65 () Bool)
(declare-fun x334 () Bool)
(declare-fun x595 () Int)
(declare-fun x2707 () Int)
(declare-fun x3197 () Bool)
(declare-fun x246 () Bool)
(declare-fun x2121 () Bool)
(declare-fun x3095 () Bool)
(declare-fun x234 () Bool)
(declare-fun x2242 () Bool)
(declare-fun x2735 () Int)
(declare-fun x3889 () Bool)
(declare-fun x2954 () Bool)
(declare-fun x2533 () Int)
(declare-fun x2386 () Int)
(declare-fun x2991 () Bool)
(declare-fun x3465 () Bool)
(declare-fun x2038 () x1716)
(declare-fun x2792 () x1716)
(declare-fun x2104 () Int)
(declare-fun x795 () Bool)
(declare-fun x2007 () Bool)
(declare-fun x3358 () Bool)
(declare-fun x3617 () Bool)
(declare-fun x2112 () Int)
(declare-fun x1183 () Int)
(declare-fun x1453 () Int)
(declare-fun x991 () Bool)
(declare-fun x338 () Int)
(declare-fun x3511 () Int)
(declare-fun x347 () Bool)
(declare-fun x1170 () Bool)
(declare-fun x3538 () Bool)
(declare-fun x2424 () Int)
(declare-fun x4157 () Int)
(declare-fun x2159 () x1716)
(declare-fun x4340 () Bool)
(declare-fun x4168 () Int)
(declare-fun x1522 () Int)
(declare-fun x1904 () Bool)
(declare-fun x3953 () Bool)
(declare-fun x1517 () Int)
(declare-fun x3009 () Bool)
(declare-fun x3804 () Int)
(declare-fun x3792 () Bool)
(declare-fun x4255 () Int)
(declare-fun x1834 () Bool)
(declare-fun x1683 () Int)
(declare-fun x2354 () Bool)
(declare-fun x3891 () Bool)
(declare-fun x1775 () Bool)
(declare-fun x2107 () Int)
(declare-fun x3230 () Int)
(declare-fun x41 () Bool)
(declare-fun x3862 () Int)
(declare-fun x1564 () Int)
(declare-fun x1038 () Bool)
(declare-fun x2816 () Bool)
(declare-fun x3754 () Int)
(declare-fun x1586 () Int)
(declare-fun x1680 () Bool)
(declare-fun x2540 () Bool)
(declare-fun x421 () Bool)
(declare-fun x2650 () Int)
(declare-fun x3576 () Int)
(declare-fun x1383 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x63 () Bool)
(declare-fun x3849 () Int)
(declare-fun x3592 () Bool)
(declare-fun x2538 () Bool)
(declare-fun x2254 () Int)
(declare-fun x2684 () Int)
(declare-fun x3601 () Int)
(declare-fun x333 () Int)
(declare-fun x3855 () Int)
(declare-fun x730 () Int)
(declare-fun x349 () Int)
(declare-fun x72 () Int)
(declare-fun x2529 () Bool)
(declare-fun x554 (Int) Int)
(declare-fun x4311 () Bool)
(declare-fun x2934 () Bool)
(declare-fun x2051 () Bool)
(declare-fun x4373 () x1716)
(declare-fun x2383 () Int)
(declare-fun x4222 () Bool)
(declare-fun x3488 () Bool)
(declare-fun x1918 () Bool)
(declare-fun x3515 () Bool)
(declare-fun x1181 () Int)
(declare-fun x839 () Int)
(declare-fun x3329 () Int)
(declare-fun x2502 () Bool)
(declare-fun x2239 () Bool)
(declare-fun x2448 () Int)
(declare-fun x3088 () Bool)
(declare-fun x2840 () x1716)
(declare-fun x1116 () Bool)
(declare-fun x1224 () Int)
(declare-fun x3311 () Int)
(declare-fun x943 () Int)
(declare-fun x2282 () Int)
(declare-fun x2193 () Bool)
(declare-fun x1480 () Bool)
(declare-fun x1922 () Bool)
(declare-fun x4318 () x1716)
(declare-fun x4198 () Int)
(declare-fun x695 () Int)
(declare-fun x265 () Bool)
(declare-fun x3687 () x1716)
(declare-fun x3174 () Int)
(declare-fun x331 () Int)
(declare-fun x1658 () Int)
(declare-fun x3970 () Int)
(declare-fun x767 () Bool)
(declare-fun x809 () Int)
(declare-fun x1481 () Bool)
(declare-fun x2599 () x1716)
(declare-fun x2257 () Bool)
(declare-fun x217 () x1716)
(declare-fun x3051 () Int)
(declare-fun x3492 () Bool)
(declare-fun x3566 () Int)
(declare-fun x1588 () Int)
(declare-fun x2561 () Int)
(declare-fun x2927 () Int)
(declare-fun x2567 () Int)
(declare-fun x3935 () Int)
(declare-fun x1845 () Bool)
(declare-fun x3101 () Bool)
(declare-fun x844 () x1716)
(declare-fun x3367 () Int)
(declare-fun x1741 () Int)
(declare-fun x4107 () Bool)
(declare-fun x4202 () Bool)
(declare-fun x1488 () Bool)
(declare-fun x2225 () x1716)
(declare-fun x4062 () Bool)
(declare-fun x427 () Bool)
(declare-fun x1773 () x1716)
(declare-fun x717 () Int)
(declare-fun x542 () Bool)
(declare-fun x1473 () Int)
(declare-fun x1009 () Bool)
(declare-fun x249 () Int)
(declare-fun x2947 () Bool)
(declare-fun x442 () Bool)
(declare-fun x4382 () Int)
(declare-fun x2033 () Bool)
(declare-fun x3121 () Bool)
(declare-fun x225 () Bool)
(declare-fun x316 () Bool)
(declare-fun x2394 () Bool)
(declare-fun x3200 () Bool)
(declare-fun x1490 () x1716)
(declare-fun x864 () Int)
(declare-fun x313 () Bool)
(declare-fun x4267 () Int)
(declare-fun x2678 () Bool)
(declare-fun x412 () Bool)
(declare-fun x974 () Bool)
(declare-fun x2168 () Int)
(declare-fun x3819 () Bool)
(declare-fun x3795 () Bool)
(declare-fun x2856 () Bool)
(declare-fun x1618 () Int)
(declare-fun x1211 () Bool)
(declare-fun x1779 () Int)
(declare-fun x1395 () Int)
(declare-fun x3750 () Bool)
(declare-fun x4178 () Bool)
(declare-fun x1777 () Int)
(declare-fun x3184 () Bool)
(declare-fun x3523 () Int)
(declare-fun x1869 () Bool)
(declare-fun x1681 (Int) Int)
(declare-fun x2733 () Bool)
(declare-fun x2873 () Int)
(declare-fun x3618 () Bool)
(declare-fun x573 () Int)
(declare-fun x1091 () Int)
(declare-fun x3806 () x1716)
(declare-fun x4115 () Int)
(declare-fun x276 () Int)
(declare-fun x4260 () Int)
(declare-fun x2079 () Bool)
(declare-fun x1987 () Bool)
(declare-fun x184 () Bool)
(declare-fun x1911 () Bool)
(declare-fun x1141 () Bool)
(declare-fun x3516 () Bool)
(declare-fun x2430 () Int)
(declare-fun x137 () Bool)
(declare-fun x2328 () Int)
(declare-fun x657 () Int)
(declare-fun x516 () Int)
(declare-fun x3377 () x1716)
(declare-fun x3968 () Int)
(declare-fun x3791 () Bool)
(declare-fun x131 () Int)
(declare-fun x3466 () Bool)
(declare-fun x230 () Int)
(declare-fun x1342 () Int)
(declare-fun x2798 () Bool)
(declare-fun x1701 () Bool)
(declare-fun x1995 () Int)
(declare-fun x3971 () Bool)
(declare-fun x1761 () Int)
(declare-fun x1621 () Bool)
(declare-fun x1069 () Int)
(declare-fun x1112 () Int)
(declare-fun x3626 () Bool)
(declare-fun x1152 () Int)
(declare-fun x2964 () Bool)
(declare-fun x2677 () Bool)
(declare-fun x182 () Bool)
(declare-fun x3379 () Bool)
(declare-fun x3098 () Bool)
(declare-fun x1665 () Bool)
(declare-fun x2704 () Bool)
(declare-fun x3762 () Bool)
(declare-fun x3463 () Bool)
(declare-fun x3449 () Bool)
(declare-fun x556 () Bool)
(declare-fun x3319 () Bool)
(declare-fun x2205 () Int)
(declare-fun x2476 () Int)
(declare-fun x2795 () x1716)
(declare-fun x937 () Bool)
(declare-fun x382 () Int)
(declare-fun x4246 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x3386 () Bool)
(declare-fun x593 () Bool)
(declare-fun x680 () Int)
(declare-fun x3267 () Int)
(declare-fun x2552 () Int)
(declare-fun x2226 () Bool)
(declare-fun x1642 () Bool)
(declare-fun x3867 () Int)
(declare-fun x602 () Bool)
(declare-fun x4045 (Int) Int)
(declare-fun x468 () x1716)
(declare-fun x3069 () Bool)
(declare-fun x3010 () Bool)
(declare-fun x350 () Int)
(declare-fun x3726 () Bool)
(declare-fun x1226 () x1716)
(declare-fun x579 () Bool)
(declare-fun x3561 () Int)
(declare-fun x4365 () Int)
(declare-fun x1669 () Bool)
(declare-fun x2020 () Int)
(declare-fun x4025 () Bool)
(declare-fun x180 () x1716)
(declare-fun x4117 () Bool)
(declare-fun x2691 () Bool)
(declare-fun x773 (Int) Int)
(declare-fun x869 () Bool)
(declare-fun x2166 () Bool)
(declare-fun x326 () Bool)
(declare-fun x3866 () Int)
(declare-fun x3532 () Int)
(declare-fun x1417 () x1716)
(declare-fun x1161 () Int)
(declare-fun x4225 () Bool)
(declare-fun x1498 () x1716)
(declare-fun x1836 () Int)
(declare-fun x1706 () Int)
(declare-fun x1309 () Int)
(declare-fun x3667 () Bool)
(declare-fun x3112 () Bool)
(declare-fun x4205 () Bool)
(declare-fun x4249 () Bool)
(declare-fun x4077 () Int)
(declare-fun x3137 () Int)
(declare-fun x1099 () Bool)
(declare-fun x3154 () Int)
(declare-fun x2797 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x3123 () Int)
(declare-fun x1479 () Bool)
(declare-fun x828 () x1716)
(declare-fun x2594 () Int)
(declare-fun x1978 () Bool)
(declare-fun x3079 () Bool)
(declare-fun x3135 () Int)
(declare-fun x2789 () Bool)
(declare-fun x2508 () Int)
(declare-fun x2520 () Bool)
(declare-fun x1848 () Bool)
(declare-fun x4292 () Int)
(declare-fun x2912 () Int)
(declare-fun x357 () Bool)
(declare-fun x2146 () Int)
(declare-fun x4074 () Bool)
(declare-fun x4166 () Bool)
(declare-fun x1769 () Bool)
(declare-fun x4007 () Int)
(declare-fun x3892 () Int)
(declare-fun x1979 () Int)
(declare-fun x665 () Bool)
(declare-fun x3398 () Bool)
(declare-fun x39 () Int)
(declare-fun x1962 () Bool)
(declare-fun x3044 () x1716)
(declare-fun x325 () Int)
(declare-fun x352 () Bool)
(declare-fun x2308 () Bool)
(declare-fun x2344 () Bool)
(declare-fun x1533 () x1716)
(declare-fun x2240 () Int)
(declare-fun x3296 () Bool)
(declare-fun x3227 () Int)
(declare-fun x1008 () Bool)
(declare-fun x4061 () Bool)
(declare-fun x439 () Int)
(declare-fun x4244 () Int)
(declare-fun x1965 () Bool)
(declare-fun x107 () Bool)
(declare-fun x87 () Bool)
(declare-fun x2768 () Int)
(declare-fun x1171 () Bool)
(declare-fun x3006 () Int)
(declare-fun x548 () x1716)
(declare-fun x145 () Bool)
(declare-fun x2059 () Bool)
(declare-fun x3294 () Int)
(declare-fun x1351 () Bool)
(declare-fun x4101 () Bool)
(declare-fun x3312 () Int)
(declare-fun x4359 () Bool)
(declare-fun x1270 () Int)
(declare-fun x4023 () Bool)
(declare-fun x1344 () Int)
(declare-fun x4026 () Bool)
(declare-fun x3047 () Bool)
(declare-fun x1553 () Int)
(declare-fun x3998 () Int)
(declare-fun x3822 () x1716)
(declare-fun x366 () x1716)
(declare-fun x2726 () Int)
(declare-fun x2811 () Bool)
(declare-fun x4252 () Int)
(declare-fun x3404 () Bool)
(declare-fun x2156 () Bool)
(declare-fun x2144 () Int)
(declare-fun x3711 () Int)
(declare-fun x3519 () Int)
(declare-fun x4190 () x1716)
(declare-fun x814 () Int)
(declare-fun x993 () Bool)
(declare-fun x1808 () Int)
(declare-fun x1184 () Bool)
(declare-fun x3846 () Bool)
(declare-fun x3016 () Int)
(declare-fun x1018 () Bool)
(declare-fun x2543 () Int)
(declare-fun x3260 () Bool)
(declare-fun x2897 () Bool)
(declare-fun x1148 () Int)
(declare-fun x3393 () Bool)
(declare-fun x2625 () Bool)
(declare-fun x3729 () Int)
(declare-fun x2949 () Int)
(declare-fun x1444 () Int)
(declare-fun x2944 () Bool)
(declare-fun x2032 () Bool)
(declare-fun x3663 () Bool)
(declare-fun x4303 () Int)
(declare-fun x1541 () Bool)
(declare-fun x2192 () Int)
(declare-fun x2600 () Bool)
(declare-fun x1406 () Bool)
(declare-fun x4139 () x1716)
(declare-fun x1472 () Bool)
(declare-fun x2252 () Int)
(declare-fun x3099 () x1716)
(declare-fun x713 () Bool)
(declare-fun x1831 () Int)
(declare-fun x3764 () Bool)
(declare-fun x1272 () x1716)
(declare-fun x2716 () Bool)
(declare-fun x2137 () Bool)
(declare-fun x3258 () Bool)
(declare-fun x1952 () x1716)
(declare-fun x332 () Bool)
(declare-fun x1767 () Bool)
(declare-fun x2830 () Bool)
(declare-fun x3347 () Bool)
(declare-fun x994 () Bool)
(declare-fun x4313 () Bool)
(declare-fun x3300 () Bool)
(declare-fun x3000 () Int)
(declare-fun x1455 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x435 () x1716)
(declare-fun x2496 () Int)
(declare-fun x792 () Int)
(declare-fun x1239 () Int)
(declare-fun x2450 () Bool)
(declare-fun x2177 () x1716)
(declare-fun x70 () Bool)
(declare-fun x3186 () Int)
(declare-fun x4147 () Int)
(declare-fun x1139 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x2330 () Int)
(declare-fun x2016 () Bool)
(declare-fun x488 () Bool)
(declare-fun x3877 () Int)
(declare-fun x1518 () Bool)
(declare-fun x965 () Int)
(declare-fun x659 () Bool)
(declare-fun x2878 () Int)
(declare-fun x4345 () x1716)
(declare-fun x2945 () x1716)
(declare-fun x2116 () Bool)
(declare-fun x2181 () Int)
(declare-fun x172 () Int)
(declare-fun x322 () Bool)
(declare-fun x2106 () Int)
(declare-fun x3937 () x1716)
(declare-fun x800 () Int)
(declare-fun x2119 () Bool)
(declare-fun x1391 () Int)
(declare-fun x299 () Int)
(declare-fun x678 () Int)
(declare-fun x830 () Bool)
(declare-fun x3177 () Bool)
(declare-fun x507 () Bool)
(declare-fun x2058 () Bool)
(declare-fun x235 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x1795 () Int)
(declare-fun x243 () Bool)
(declare-fun x375 () Bool)
(declare-fun x1288 () Int)
(declare-fun x2381 () Bool)
(declare-fun x1986 () Bool)
(declare-fun x420 () x1716)
(declare-fun x1851 () Bool)
(declare-fun x3150 () Int)
(declare-fun x826 () Int)
(declare-fun x858 () Int)
(declare-fun x2212 () Bool)
(declare-fun x4323 () Bool)
(declare-fun x3509 () Bool)
(declare-fun x661 () Bool)
(declare-fun x3423 () Int)
(declare-fun x3402 () Bool)
(declare-fun x238 () Bool)
(declare-fun x383 () Bool)
(declare-fun x1267 () Int)
(declare-fun x1232 () Int)
(declare-fun x1072 () Int)
(declare-fun x908 () Bool)
(declare-fun x26 () x1716)
(declare-fun x109 () Bool)
(declare-fun x3085 () Bool)
(declare-fun x2544 () Bool)
(declare-fun x3738 () Bool)
(declare-fun x3836 () x1716)
(declare-fun x1792 () Bool)
(declare-fun x2182 () Int)
(declare-fun x1337 () Bool)
(declare-fun x1474 () x1716)
(declare-fun x4341 () Bool)
(declare-fun x3748 () Bool)
(declare-fun x727 () Bool)
(declare-fun x1284 () Int)
(declare-fun x3245 () Bool)
(declare-fun x76 () Int)
(declare-fun x432 (x1716) Int)
(declare-fun x543 () Bool)
(declare-fun x4017 () Bool)
(declare-fun x3337 () Int)
(declare-fun x483 () x1716)
(declare-fun x618 () Bool)
(declare-fun x2862 () Int)
(declare-fun x893 () Int)
(declare-fun x3152 () Int)
(declare-fun x4011 () Bool)
(declare-fun x1985 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x2322 () Bool)
(declare-fun x387 () Int)
(declare-fun x3598 () Bool)
(declare-fun x500 () Int)
(declare-fun x536 () Int)
(declare-fun x1387 () Bool)
(declare-fun x1163 () Int)
(declare-fun x2908 () Bool)
(declare-fun x4197 () Int)
(declare-fun x1853 () Bool)
(declare-fun x3104 () Bool)
(declare-fun x1843 () x1716)
(declare-fun x1610 () Bool)
(declare-fun x2793 () Bool)
(declare-fun x2682 () Int)
(declare-fun x3555 () Bool)
(declare-fun x1060 () Bool)
(declare-fun x1312 () Int)
(declare-fun x2805 () Bool)
(declare-fun x1231 () Int)
(declare-fun x3624 () Bool)
(declare-fun x4375 () Bool)
(declare-fun x2987 () Bool)
(declare-fun x539 () Bool)
(declare-fun x852 () x1716)
(declare-fun x4183 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x345 () Int)
(declare-fun x978 () Bool)
(declare-fun x45 () Int)
(declare-fun x3007 () Int)
(declare-fun x201 () Int)
(declare-fun x3202 () Int)
(declare-fun x1640 () Int)
(declare-fun x545 () Bool)
(declare-fun x4024 () x1716)
(declare-fun x1092 () Int)
(declare-fun x3778 () Bool)
(declare-fun x440 () Bool)
(declare-fun x2689 () Bool)
(declare-fun x337 () x1716)
(declare-fun x4194 () Int)
(declare-fun x2766 () Bool)
(declare-fun x799 () Int)
(declare-fun x3305 () Bool)
(declare-fun x1219 () Bool)
(declare-fun x1135 () Int)
(declare-fun x2741 () x1716)
(declare-fun x4090 () Bool)
(declare-fun x2996 () Bool)
(declare-fun x2804 () Bool)
(declare-fun x2220 () Int)
(declare-fun x4012 () x1716)
(declare-fun x3893 () x1716)
(declare-fun x744 () Bool)
(declare-fun x1810 () Bool)
(declare-fun x588 () Bool)
(declare-fun x3991 () Int)
(declare-fun x3832 () Int)
(declare-fun x3684 () Bool)
(declare-fun x757 () Bool)
(declare-fun x3114 () Int)
(declare-fun x605 () Bool)
(declare-fun x4200 () Int)
(declare-fun x1503 () Int)
(declare-fun x315 () Bool)
(declare-fun x1105 () Int)
(declare-fun x1614 () Bool)
(declare-fun x1254 () x1716)
(declare-fun x3343 () Bool)
(declare-fun x3126 () Bool)
(declare-fun x4293 () Int)
(declare-fun x3469 () x1716)
(declare-fun x759 () Bool)
(declare-fun x3904 () Bool)
(declare-fun x4224 () Int)
(declare-fun x4018 () Int)
(declare-fun x963 () x1716)
(declare-fun x2891 () Int)
(declare-fun x1151 () Int)
(declare-fun x3318 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x2317 (x1716) Int)
(declare-fun x2357 () Bool)
(declare-fun x1714 () Int)
(declare-fun x564 () Bool)
(declare-fun x2222 () Bool)
(declare-fun x1386 () Int)
(declare-fun x2288 () Int)
(declare-fun x1897 () Int)
(declare-fun x683 () Bool)
(declare-fun x3801 () Int)
(declare-fun x4347 () Int)
(declare-fun x3989 () Bool)
(declare-fun x3769 () Int)
(declare-fun x1660 () Int)
(declare-fun x3789 () Int)
(declare-fun x592 () Bool)
(declare-fun x2525 () Int)
(declare-fun x4126 () Bool)
(declare-fun x2843 () Int)
(declare-fun x42 () Int)
(declare-fun x1729 () Int)
(declare-fun x1055 () Bool)
(declare-fun x2683 () Int)
(declare-fun x970 () Bool)
(declare-fun x3192 () Bool)
(declare-fun x4068 () Bool)
(declare-fun x2584 () Int)
(declare-fun x1217 () Int)
(declare-fun x698 () Int)
(declare-fun x38 () Int)
(declare-fun x2266 () Bool)
(declare-fun x110 () Bool)
(declare-fun x2077 () Bool)
(declare-fun x1310 () x1716)
(declare-fun x348 () Bool)
(declare-fun x2409 () Bool)
(declare-fun x4161 () Bool)
(declare-fun x3760 () Bool)
(declare-fun x2977 () Bool)
(declare-fun x248 () Bool)
(declare-fun x259 () Int)
(declare-fun x1554 () Bool)
(declare-fun x3996 () Int)
(declare-fun x2017 () Bool)
(declare-fun x574 () Bool)
(declare-fun x2117 () x1716)
(declare-fun x972 () Int)
(declare-fun x523 () Bool)
(declare-fun x1520 () Int)
(declare-fun x3304 () Int)
(declare-fun x379 () Int)
(declare-fun x2623 () Bool)
(declare-fun x3825 () Int)
(declare-fun x3638 () Bool)
(declare-fun x2796 () Int)
(declare-fun x1655 () Int)
(declare-fun x3013 () Bool)
(declare-fun x1819 () Bool)
(declare-fun x2201 () Bool)
(declare-fun x1506 () Int)
(declare-fun x3208 () Bool)
(declare-fun x1540 () Bool)
(declare-fun x4221 () Int)
(declare-fun x3057 () Int)
(declare-fun x1934 () Bool)
(declare-fun x3900 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x2491 () Int)
(declare-fun x50 () Int)
(declare-fun x1045 () Bool)
(declare-fun x2580 () Int)
(declare-fun x79 () Bool)
(declare-fun x2045 () Int)
(declare-fun x3542 () Bool)
(declare-fun x3730 () Int)
(declare-fun x1948 () Bool)
(declare-fun x903 () Bool)
(declare-fun x4332 () Int)
(declare-fun x3288 () Int)
(declare-fun x3951 (x1716) Int)
(declare-fun x3786 () Bool)
(declare-fun x1685 () Bool)
(declare-fun x1004 () x1716)
(declare-fun x625 () Int)
(declare-fun x615 () Bool)
(declare-fun x2658 () Bool)
(declare-fun x3824 () Int)
(declare-fun x2549 () Int)
(declare-fun x2490 () Bool)
(declare-fun x3581 () x1716)
(declare-fun x3459 () Bool)
(declare-fun x2435 () Int)
(declare-fun x3939 () Int)
(declare-fun x1823 () Bool)
(declare-fun x3363 () Bool)
(declare-fun x4008 () Int)
(declare-fun x4165 () Int)
(declare-fun x443 () Bool)
(declare-fun x3972 () Int)
(declare-fun x1898 () Bool)
(declare-fun x1402 () Int)
(declare-fun x949 () Int)
(declare-fun x1998 () Bool)
(declare-fun x4312 () Bool)
(declare-fun x2800 () Bool)
(declare-fun x3169 () Bool)
(declare-fun x3255 () Bool)
(declare-fun x3768 () Int)
(declare-fun x622 () Bool)
(declare-fun x2321 () Bool)
(declare-fun x760 () Bool)
(declare-fun x2776 () Int)
(declare-fun x2730 () Bool)
(declare-fun x2872 () Bool)
(declare-fun x718 () Bool)
(declare-fun x4203 () x1716)
(declare-fun x133 () Int)
(declare-fun x93 () Bool)
(declare-fun x3214 () Bool)
(declare-fun x47 () Bool)
(declare-fun x3921 () Int)
(declare-fun x2471 () Bool)
(declare-fun x2619 () Int)
(declare-fun x3376 () Bool)
(declare-fun x3216 () Bool)
(declare-fun x3548 () Int)
(declare-fun x928 () Int)
(declare-fun x1538 () Int)
(declare-fun x1425 () Bool)
(declare-fun x3441 () Bool)
(declare-fun x4123 () Int)
(declare-fun x1570 () Bool)
(declare-fun x3360 () Int)
(declare-fun x2924 () Bool)
(declare-fun x3911 () Int)
(declare-fun x2261 () Int)
(declare-fun x3295 () Bool)
(declare-fun x372 () Bool)
(declare-fun x2179 () Int)
(declare-fun x3301 () Bool)
(declare-fun x1291 () Int)
(declare-fun x2732 () Bool)
(declare-fun x3771 () Bool)
(declare-fun x1914 () Int)
(declare-fun x471 () x1716)
(declare-fun x250 () Bool)
(declare-fun x558 () Int)
(declare-fun x2169 () Bool)
(declare-fun x2578 () Int)
(declare-fun x1258 () Int)
(declare-fun x1250 () Bool)
(declare-fun x672 () Bool)
(declare-fun x2267 () Int)
(declare-fun x1628 () Bool)
(declare-fun x3415 () Bool)
(declare-fun x4253 () Int)
(declare-fun x1865 () Bool)
(declare-fun x2129 () Int)
(declare-fun x3076 () Bool)
(declare-fun x340 () Int)
(declare-fun x4191 () x1716)
(declare-fun x562 () Bool)
(declare-fun x3620 () Bool)
(declare-fun x3108 () Bool)
(declare-fun x2186 () Bool)
(declare-fun x1817 () Bool)
(declare-fun x3728 () Bool)
(declare-fun x3766 () Int)
(declare-fun x3143 () Bool)
(declare-fun x3430 () Int)
(declare-fun x2621 () Int)
(declare-fun x711 () Bool)
(declare-fun x3853 () Bool)
(declare-fun x2630 () Bool)
(declare-fun x4144 () Bool)
(declare-fun x2852 () Bool)
(declare-fun x3138 () Int)
(declare-fun x2747 () Bool)
(declare-fun x3734 () Bool)
(declare-fun x135 () Bool)
(declare-fun x1 () Bool)
(declare-fun x3744 () Int)
(declare-fun x321 () Int)
(declare-fun x3610 () Int)
(declare-fun x1728 () Int)
(declare-fun x3205 () Int)
(declare-fun x3251 () x1716)
(declare-fun x950 () Int)
(declare-fun x4016 () Int)
(declare-fun x2822 () Bool)
(declare-fun x1580 () Bool)
(declare-fun x1842 () Int)
(declare-fun x269 () Bool)
(declare-fun x4283 () Int)
(declare-fun x3646 () Bool)
(declare-fun x3457 () Bool)
(declare-fun x2870 () Int)
(declare-fun x4208 () Int)
(declare-fun x474 () Bool)
(declare-fun x2353 () Int)
(declare-fun x2842 () x1716)
(declare-fun x3528 () Bool)
(declare-fun x3427 () Int)
(declare-fun x1088 () Bool)
(declare-fun x125 () Bool)
(declare-fun x4021 () Int)
(declare-fun x288 () Int)
(declare-fun x1107 () Bool)
(declare-fun x3630 () Bool)
(declare-fun x4170 () Bool)
(declare-fun x1885 () Bool)
(declare-fun x3096 () Bool)
(declare-fun x2626 () Bool)
(declare-fun x278 () Int)
(declare-fun x1200 () x1716)
(declare-fun x414 () Bool)
(declare-fun x3662 (Int) Int)
(declare-fun x4153 () Int)
(declare-fun x1126 () Bool)
(declare-fun x1297 () Int)
(declare-fun x2495 () Bool)
(declare-fun x1675 () Bool)
(declare-fun x4343 () Int)
(declare-fun x1253 () Bool)
(declare-fun x3339 () Bool)
(declare-fun x3955 () Int)
(declare-fun x3958 () Int)
(declare-fun x519 () Bool)
(declare-fun x498 () x1716)
(declare-fun x886 () Bool)
(declare-fun x801 () x1716)
(declare-fun x1445 () Int)
(declare-fun x3316 () Int)
(declare-fun x2204 () Int)
(declare-fun x3707 () Bool)
(declare-fun x2218 () Bool)
(declare-fun x566 () Int)
(declare-fun x912 () Int)
(declare-fun x954 () Int)
(declare-fun x1782 () Bool)
(declare-fun x2227 () Bool)
(declare-fun x179 () Int)
(declare-fun x2488 () Bool)
(declare-fun x4354 () Bool)
(declare-fun x1319 () Bool)
(declare-fun x3162 () Bool)
(declare-fun x671 () Bool)
(declare-fun x2191 () Bool)
(declare-fun x2911 () Bool)
(declare-fun x4051 () Bool)
(declare-fun x3600 () Bool)
(declare-fun x1327 () Bool)
(declare-fun x2775 () Bool)
(declare-fun x4085 () x1716)
(declare-fun x2373 () Bool)
(declare-fun x3160 () Int)
(declare-fun x3078 () Int)
(declare-fun x1584 () Int)
(declare-fun x3668 () Bool)
(declare-fun x4245 () Bool)
(declare-fun x16 () Bool)
(declare-fun x4275 () Int)
(declare-fun x2365 () x1716)
(declare-fun x1093 (x1716) Int)
(declare-fun x691 () Bool)
(declare-fun x2824 () Bool)
(declare-fun x4334 () Bool)
(declare-fun x1544 () Int)
(declare-fun x2770 () Bool)
(declare-fun x1510 () Int)
(declare-fun x1350 () Bool)
(declare-fun x159 () Bool)
(declare-fun x3480 () Int)
(declare-fun x2559 () Int)
(declare-fun x528 () Int)
(declare-fun x3128 () Bool)
(declare-fun x505 () Bool)
(declare-fun x3725 () Int)
(declare-fun x3973 () Int)
(declare-fun x655 () Bool)
(declare-fun x2293 () Bool)
(declare-fun x2957 () Int)
(declare-fun x2414 () Bool)
(declare-fun x2882 () Int)
(declare-fun x4321 () Bool)
(declare-fun x749 () x1716)
(declare-fun x3609 () Int)
(declare-fun x2749 () Int)
(declare-fun x2979 () Int)
(declare-fun x758 () Int)
(declare-fun x3286 () Bool)
(declare-fun x3140 () Int)
(declare-fun x4333 () Int)
(declare-fun x3975 () Bool)
(declare-fun x3435 () Int)
(declare-fun x3203 () x1716)
(declare-fun x724 () x1716)
(declare-fun x86 () Bool)
(declare-fun x4185 () Int)
(declare-fun x1411 () Bool)
(declare-fun x818 () Int)
(declare-fun x4049 () Int)
(declare-fun x3431 () Bool)
(declare-fun x4044 () Bool)
(declare-fun x1626 () Bool)
(declare-fun x4227 () Int)
(declare-fun x4125 () Int)
(declare-fun x3527 () Int)
(declare-fun x2639 () Bool)
(declare-fun x1164 () Int)
(declare-fun x1861 () Int)
(declare-fun x712 () Bool)
(declare-fun x2714 () Bool)
(declare-fun x3019 () Bool)
(declare-fun x1798 () Int)
(declare-fun x3462 () Int)
(declare-fun x1525 () Int)
(declare-fun x203 () x1716)
(declare-fun x3759 () Int)
(declare-fun x1771 () Bool)
(declare-fun x2027 () Bool)
(declare-fun x55 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x3485 () Int)
(declare-fun x279 () Bool)
(declare-fun x3374 () Bool)
(declare-fun x1451 () x1716)
(declare-fun x575 () Int)
(declare-fun x1799 () Int)
(declare-fun x2959 () x1716)
(declare-fun x1993 () Int)
(declare-fun x399 () Bool)
(declare-fun x2279 () x1716)
(declare-fun x2255 () x1716)
(declare-fun x376 () Int)
(declare-fun x1259 () Int)
(declare-fun x544 () Bool)
(declare-fun x1847 () Int)
(declare-fun x3145 () Int)
(declare-fun x2098 () Bool)
(declare-fun x3948 () Bool)
(declare-fun x365 () Bool)
(declare-fun x1374 (x1716) Int)
(declare-fun x1459 () Int)
(declare-fun x3703 () Bool)
(declare-fun x3654 () Bool)
(declare-fun x1868 () Bool)
(declare-fun x921 () Int)
(declare-fun x2213 () Int)
(declare-fun x3947 () Bool)
(declare-fun x3073 () Bool)
(declare-fun x2574 () Bool)
(declare-fun x417 () Int)
(declare-fun x3244 () Int)
(declare-fun x1330 () Int)
(declare-fun x1947 () Bool)
(declare-fun x2841 () Bool)
(declare-fun x2390 () Int)
(declare-fun x1894 () Bool)
(declare-fun x3483 () Bool)
(declare-fun x2615 () Bool)
(declare-fun x2914 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x1765 () x1716)
(declare-fun x3322 () Int)
(declare-fun x4064 () Bool)
(declare-fun x4076 () Int)
(declare-fun x1125 () Int)
(declare-fun x2813 () Bool)
(declare-fun x3443 () Int)
(declare-fun x3553 (Int) Int)
(declare-fun x1221 () Int)
(declare-fun x1913 () Bool)
(declare-fun x2660 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x3279 () Bool)
(declare-fun x2136 () Int)
(declare-fun x294 () Bool)
(declare-fun x1186 () Int)
(declare-fun x914 () Bool)
(declare-fun x4091 () Int)
(declare-fun x1514 () Int)
(declare-fun x304 () Int)
(declare-fun x1366 () Bool)
(declare-fun x4316 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x499 () Bool)
(declare-fun x3683 () Bool)
(declare-fun x1450 () Int)
(declare-fun x2481 () Bool)
(declare-fun x1568 () Int)
(declare-fun x1840 () Bool)
(declare-fun x2478 () Int)
(declare-fun x3881 () Int)
(declare-fun x3240 () Bool)
(declare-fun x936 () Bool)
(declare-fun x1041 () Bool)
(declare-fun x214 () Int)
(declare-fun x3215 () Int)
(declare-fun x2428 () Int)
(declare-fun x4294 () Bool)
(declare-fun x1147 () Bool)
(declare-fun x1968 () Int)
(declare-fun x3584 () Bool)
(declare-fun x77 () Bool)
(declare-fun x612 () Int)
(declare-fun x2976 () Int)
(declare-fun x2998 () Int)
(declare-fun x199 () Bool)
(declare-fun x213 () Bool)
(declare-fun x668 () Int)
(declare-fun x3502 () Bool)
(declare-fun x778 () Int)
(declare-fun x1261 () Int)
(declare-fun x838 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x1415 () Int)
(declare-fun x3056 () Bool)
(declare-fun x2746 () Int)
(declare-fun x2638 () x1716)
(declare-fun x3721 () Bool)
(declare-fun x59 () Bool)
(declare-fun x270 () Bool)
(declare-fun x3326 () Int)
(declare-fun x4176 () Int)
(declare-fun x1594 () Bool)
(declare-fun x3331 () x1716)
(declare-fun x2990 () Bool)
(declare-fun x3966 () Bool)
(declare-fun x3408 () Int)
(declare-fun x1534 () Bool)
(declare-fun x3077 () Int)
(declare-fun x449 () Int)
(declare-fun x1203 () Bool)
(declare-fun x1199 () Int)
(declare-fun x882 () Bool)
(declare-fun x3061 () Bool)
(declare-fun x1624 () Int)
(declare-fun x2197 () Bool)
(declare-fun x2902 () Bool)
(declare-fun x27 () Int)
(declare-fun x2100 () Bool)
(declare-fun x3549 () Int)
(declare-fun x2253 () Bool)
(declare-fun x3153 () Bool)
(declare-fun x2952 () Int)
(declare-fun x1939 () Int)
(declare-fun x2270 () Bool)
(declare-fun x3782 () Bool)
(declare-fun x1477 () Bool)
(declare-fun x2975 () Int)
(declare-fun x690 () Int)
(declare-fun x2043 () Int)
(declare-fun x3844 () Bool)
(declare-fun x1650 () Int)
(declare-fun x2413 () Bool)
(declare-fun x2019 () x1716)
(declare-fun x3211 () Bool)
(declare-fun x83 () Bool)
(declare-fun x3820 () Bool)
(declare-fun x3909 () Bool)
(declare-fun x1637 () Bool)
(declare-fun x2268 () Bool)
(declare-fun x596 () Bool)
(declare-fun x187 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x633 () Int)
(declare-fun x791 () Bool)
(declare-fun x4100 () Bool)
(declare-fun x3324 () Int)
(declare-fun x2938 () Int)
(declare-fun x2853 () Bool)
(declare-fun x951 () Bool)
(declare-fun x3038 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x2281 () Int)
(declare-fun x3978 () Int)
(declare-fun x3321 () Int)
(declare-fun x3495 () Int)
(declare-fun x4248 () x1716)
(declare-fun x1846 (x1716) Int)
(declare-fun x2748 () Bool)
(declare-fun x4240 () Bool)
(declare-fun x394 () Bool)
(declare-fun x540 () Bool)
(declare-fun x1611 () Int)
(declare-fun x14 () x1716)
(declare-fun x3840 () Int)
(declare-fun x4370 () Bool)
(declare-fun x273 () Bool)
(declare-fun x2667 () Int)
(declare-fun x437 () Int)
(declare-fun x3097 () Int)
(declare-fun x139 () Bool)
(declare-fun x3599 () Int)
(declare-fun x3504 () Bool)
(declare-fun x871 () Bool)
(declare-fun x1029 () x1716)
(declare-fun x2570 () Bool)
(declare-fun x97 () Int)
(declare-fun x1827 () Int)
(declare-fun x3507 () Int)
(declare-fun x3231 () Int)
(declare-fun x1461 () Bool)
(declare-fun x669 () Bool)
(declare-fun x479 () Int)
(declare-fun x4234 () Bool)
(declare-fun x344 () Int)
(declare-fun x4335 () x1716)
(declare-fun x3303 () Int)
(declare-fun x3052 () Bool)
(declare-fun x2410 () Bool)
(declare-fun x2060 () Int)
(declare-fun x3059 () Bool)
(declare-fun x4309 () Bool)
(declare-fun x2607 () Int)
(declare-fun x2782 () Int)
(declare-fun x4379 () Bool)
(declare-fun x1513 () x1716)
(declare-fun x4073 () Int)
(declare-fun x3477 () Int)
(declare-fun x3029 () Bool)
(declare-fun x3036 () Bool)
(declare-fun x3080 () Int)
(declare-fun x81 () Int)
(declare-fun x3567 () Int)
(declare-fun x780 () Int)
(declare-fun x2729 () x1716)
(declare-fun x2598 () Bool)
(declare-fun x46 () Int)
(declare-fun x1020 () Bool)
(declare-fun x2982 () Int)
(declare-fun x578 () Bool)
(declare-fun x1644 () Bool)
(declare-fun x2700 () x1716)
(declare-fun x3767 () Bool)
(declare-fun x3501 () Int)
(declare-fun x3749 () Int)
(declare-fun x5 () Bool)
(declare-fun x4346 () Bool)
(declare-fun x3642 () Bool)
(declare-fun x2860 () Bool)
(declare-fun x1216 () Bool)
(declare-fun x323 () Int)
(declare-fun x113 () Bool)
(declare-fun x2765 () Int)
(declare-fun x1081 () Int)
(declare-fun x3092 () Int)
(declare-fun x426 () x1716)
(declare-fun x3242 () Bool)
(declare-fun x3345 () x1716)
(declare-fun x1760 () Int)
(declare-fun x2536 () Int)
(declare-fun x1801 () Int)
(declare-fun x98 () Int)
(declare-fun x776 () Int)
(declare-fun x3595 () Bool)
(declare-fun x611 () Int)
(declare-fun x1997 () Int)
(declare-fun x1493 () Bool)
(declare-fun x1759 () Bool)
(declare-fun x962 () Bool)
(declare-fun x170 () Int)
(declare-fun x3569 () Int)
(declare-fun x1724 () Bool)
(declare-fun x1860 () Bool)
(declare-fun x3660 () Bool)
(declare-fun x1936 () Bool)
(declare-fun x188 () Bool)
(declare-fun x619 () Bool)
(declare-fun x1172 () Int)
(declare-fun x28 () Bool)
(declare-fun x1543 () x1716)
(declare-fun x1252 () x1716)
(declare-fun x392 () Bool)
(declare-fun x371 () Bool)
(declare-fun x2783 () Bool)
(declare-fun x1416 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x2644 () Int)
(declare-fun x3491 () Bool)
(declare-fun x561 () Bool)
(declare-fun x1682 () Bool)
(declare-fun x2323 () x1716)
(declare-fun x275 () Int)
(declare-fun x2501 () Int)
(declare-fun x85 () Int)
(declare-fun x3735 () x1716)
(declare-fun x3083 () Int)
(declare-fun x2432 () x1716)
(declare-fun x1872 () Int)
(declare-fun x3755 () Bool)
(declare-fun x2777 () Bool)
(declare-fun x1414 () x1716)
(declare-fun x336 () Bool)
(declare-fun x3384 () x1716)
(declare-fun x769 () x1716)
(declare-fun x1423 () Bool)
(declare-fun x2329 () Int)
(declare-fun x66 () Bool)
(declare-fun x2064 () Int)
(declare-fun x1659 () Bool)
(declare-fun x1734 () Bool)
(declare-fun x3054 () Int)
(declare-fun x2316 () Bool)
(declare-fun x2418 () Bool)
(declare-fun x3450 () Int)
(declare-fun x1154 () Int)
(declare-fun x1756 () x1716)
(declare-fun x956 () Int)
(declare-fun x992 () Bool)
(declare-fun x202 () Bool)
(declare-fun x911 () Bool)
(declare-fun x2901 () Int)
(declare-fun x2071 () Int)
(declare-fun x924 () Int)
(declare-fun x1953 () Int)
(declare-fun x1282 () Bool)
(declare-fun x2211 () Bool)
(declare-fun x3888 () Int)
(declare-fun x1349 () Int)
(declare-fun x2123 () Bool)
(declare-fun x1736 () Bool)
(declare-fun x930 () Bool)
(declare-fun x1476 () Bool)
(declare-fun x1809 () Int)
(declare-fun x1940 () Bool)
(declare-fun x1264 () Bool)
(declare-fun x3253 () Bool)
(declare-fun x1855 () Bool)
(declare-fun x3961 () Int)
(declare-fun x3572 () Bool)
(declare-fun x514 () Bool)
(declare-fun x3781 () Bool)
(declare-fun x2722 (Int) Int)
(declare-fun x3699 () Bool)
(declare-fun x423 () Bool)
(declare-fun x1124 () Int)
(declare-fun x2980 () Bool)
(declare-fun x3933 () Bool)
(declare-fun x2790 () Bool)
(declare-fun x2643 () Int)
(declare-fun x80 () Bool)
(declare-fun x2826 () Bool)
(declare-fun x896 () Bool)
(declare-fun x2900 () Bool)
(declare-fun x1487 () Bool)
(declare-fun x3535 () Int)
(declare-fun x3342 () Int)
(declare-fun x4236 () Bool)
(declare-fun x3648 () Int)
(declare-fun x3290 () Bool)
(declare-fun x1674 () Bool)
(declare-fun x1679 () x1716)
(declare-fun x806 () Bool)
(declare-fun x4265 () Bool)
(declare-fun x2008 (Int Int) Int)
(declare-fun x311 () Int)
(declare-fun x4047 () Int)
(declare-fun x51 () Bool)
(declare-fun x968 () Int)
(declare-fun x2953 () Int)
(declare-fun x3885 () Int)
(declare-fun x3536 () Int)
(declare-fun x3694 () Bool)
(declare-fun x1193 () Bool)
(declare-fun x1188 () Bool)
(declare-fun x1202 () Int)
(declare-fun x2986 () Int)
(declare-fun x4290 () Bool)
(declare-fun x1299 () Int)
(declare-fun x2869 () Bool)
(declare-fun x3934 () Int)
(declare-fun x3645 () Int)
(declare-fun x944 () Bool)
(declare-fun x2400 () Int)
(declare-fun x1800 () Bool)
(declare-fun x2676 () x1716)
(declare-fun x2290 () Bool)
(declare-fun x3886 () Bool)
(declare-fun x647 () Bool)
(declare-fun x4135 () Bool)
(declare-fun x2583 () Bool)
(declare-fun x2262 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x3284 () Bool)
(declare-fun x2890 () Bool)
(declare-fun x1157 () Bool)
(declare-fun x3233 () Int)
(declare-fun x2836 () Bool)
(declare-fun x3635 () Int)
(declare-fun x777 () Bool)
(declare-fun x1925 () Bool)
(declare-fun x3752 () x1716)
(declare-fun x2001 () Bool)
(declare-fun x1452 () Bool)
(declare-fun x4156 () Bool)
(declare-fun x256 () Bool)
(declare-fun x3794 () Int)
(declare-fun x2162 () Int)
(declare-fun x900 () Bool)
(declare-fun x4114 () Bool)
(declare-fun x2057 () Bool)
(declare-fun x2105 () Int)
(declare-fun x1884 () Int)
(declare-fun x1499 (Int) Int)
(declare-fun x3810 () Bool)
(declare-fun x3718 () Int)
(declare-fun x693 () x1716)
(declare-fun x3183 () Int)
(declare-fun x2791 () Bool)
(declare-fun x822 () x1716)
(declare-fun x1946 () Bool)
(declare-fun x3887 () Bool)
(declare-fun x652 () Bool)
(declare-fun x2052 () Int)
(declare-fun x368 () Bool)
(declare-fun x89 () Bool)
(declare-fun x3281 () Bool)
(declare-fun x2451 () Bool)
(declare-fun x557 (Int) Int)
(declare-fun x2188 () Bool)
(declare-fun x2142 () Int)
(declare-fun x2126 () Bool)
(declare-fun x4308 () Bool)
(declare-fun x3901 () Bool)
(declare-fun x1931 () Int)
(declare-fun x2345 () Bool)
(declare-fun x1619 () Int)
(declare-fun x568 () Int)
(declare-fun x1173 () Bool)
(declare-fun x2737 () Bool)
(declare-fun x1707 () Int)
(declare-fun x2564 () Bool)
(declare-fun x1090 () Int)
(declare-fun x2294 () Bool)
(declare-fun x466 (x1716) Int)
(declare-fun x1906 () Bool)
(declare-fun x3685 () Bool)
(declare-fun x4124 () x1716)
(declare-fun x1774 () Int)
(declare-fun x3757 () Bool)
(declare-fun x3478 () Bool)
(declare-fun x96 () Int)
(declare-fun x1924 () Bool)
(declare-fun x917 () Int)
(declare-fun x2511 () Int)
(declare-fun x205 () Int)
(declare-fun x3118 () Bool)
(declare-fun x3352 () Int)
(declare-fun x3594 () Int)
(declare-fun x4134 () Bool)
(declare-fun x2436 () Bool)
(declare-fun x3696 () Int)
(declare-fun x4142 () Bool)
(declare-fun x2336 () Bool)
(declare-fun x268 () Int)
(declare-fun x762 () Bool)
(declare-fun x1512 () Bool)
(declare-fun x2333 () Bool)
(declare-fun x1849 () Bool)
(declare-fun x2999 () Int)
(declare-fun x577 () Bool)
(declare-fun x2320 () x1716)
(declare-fun x1146 () Bool)
(declare-fun x1439 () Int)
(declare-fun x3830 () Bool)
(declare-fun x2970 () Bool)
(declare-fun x589 () x1716)
(declare-fun x82 () Bool)
(declare-fun x2183 () Int)
(declare-fun x1991 () Int)
(declare-fun x489 () Bool)
(declare-fun x3368 () Int)
(declare-fun x2967 () Bool)
(declare-fun x2780 () Bool)
(declare-fun x1883 () Bool)
(declare-fun x2355 () Bool)
(declare-fun x3551 () Int)
(declare-fun x3508 () Int)
(declare-fun x2247 () Bool)
(declare-fun x3346 () x1716)
(declare-fun x469 () Bool)
(declare-fun x1996 () Bool)
(declare-fun x2340 () Bool)
(declare-fun x1881 () Int)
(declare-fun x4356 () Bool)
(declare-fun x3359 () x1716)
(declare-fun x2131 () Bool)
(declare-fun x796 () Int)
(declare-fun x1751 () Bool)
(declare-fun x3823 () Int)
(declare-fun x2460 () x1716)
(declare-fun x419 () Bool)
(declare-fun x408 () Int)
(declare-fun x2419 () Bool)
(declare-fun x3436 () Int)
(declare-fun x2274 () Bool)
(declare-fun x1932 () Bool)
(declare-fun x3962 () Bool)
(declare-fun x2806 () Bool)
(declare-fun x3122 () x1716)
(declare-fun x4048 (Int Int) Int)
(declare-fun x3913 () Int)
(declare-fun x1260 () x1716)
(declare-fun x1744 () Bool)
(declare-fun x2637 () Bool)
(declare-fun x835 () Int)
(declare-fun x3634 () Int)
(declare-fun x1601 () Bool)
(declare-fun x1634 () Int)
(declare-fun x2801 () Bool)
(declare-fun x1882 () Int)
(declare-fun x3448 () Bool)
(declare-fun x32 () Bool)
(declare-fun x1117 () Bool)
(declare-fun x3269 () Bool)
(declare-fun x1465 () Int)
(declare-fun x2773 () Int)
(declare-fun x1581 () Bool)
(declare-fun x3411 () Int)
(declare-fun x64 () Bool)
(declare-fun x4394 () Int)
(declare-fun x1222 () Int)
(declare-fun x37 () Bool)
(declare-fun x929 () Bool)
(declare-fun x2864 () Int)
(declare-fun x1697 () Bool)
(declare-fun x2085 () Int)
(declare-fun x4358 () Int)
(declare-fun x660 () Int)
(declare-fun x160 () Bool)
(declare-fun x1960 () Int)
(declare-fun x1905 () Bool)
(declare-fun x3247 () Bool)
(declare-fun x2195 () Bool)
(declare-fun x2264 () Int)
(declare-fun x2687 () Int)
(declare-fun x35 () x1716)
(declare-fun x4330 () Int)
(declare-fun x1754 () Bool)
(declare-fun x572 () Bool)
(declare-fun x4363 () Bool)
(declare-fun x2157 () Bool)
(declare-fun x3902 () Bool)
(declare-fun x3929 () x1716)
(declare-fun x1903 () Bool)
(declare-fun x3871 () Int)
(declare-fun x1407 () Int)
(declare-fun x3464 () Int)
(declare-fun x2361 () Bool)
(declare-fun x4277 () Bool)
(declare-fun x3914 () Bool)
(declare-fun x1035 (x1716) Int)
(declare-fun x307 () Int)
(declare-fun x2651 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x3426 () x1716)
(declare-fun x3445 () Bool)
(declare-fun x1131 () Int)
(declare-fun x1943 () Int)
(declare-fun x1271 () Bool)
(declare-fun x3912 () Bool)
(declare-fun x535 () Int)
(declare-fun x4027 () Int)
(declare-fun x3349 (Int) Int)
(declare-fun x2503 () Int)
(declare-fun x2875 () Bool)
(declare-fun x267 () Int)
(declare-fun x3188 () Bool)
(declare-fun x920 () Bool)
(declare-fun x163 () x1716)
(declare-fun x120 () Bool)
(declare-fun x3837 () Int)
(declare-fun x1576 () x1716)
(declare-fun x3500 () Int)
(declare-fun x3394 () Bool)
(declare-fun x4395 () Int)
(declare-fun x1440 () Bool)
(declare-fun x88 () Bool)
(declare-fun x883 () Bool)
(declare-fun x2053 () Int)
(declare-fun x4004 () Bool)
(declare-fun x118 () Int)
(declare-fun x441 () Int)
(declare-fun x1201 () Bool)
(declare-fun x2009 () Bool)
(declare-fun x1746 () Int)
(declare-fun x2929 () Bool)
(declare-fun x878 () Int)
(declare-fun x1448 () Bool)
(declare-fun x985 () Bool)
(declare-fun x2688 () Bool)
(declare-fun x2562 () Int)
(declare-fun x3302 () x1716)
(declare-fun x4315 () x1716)
(declare-fun x984 () Int)
(declare-fun x4301 () Bool)
(declare-fun x3380 () Int)
(declare-fun x1137 () Int)
(declare-fun x3821 () Int)
(declare-fun x2074 () Bool)
(declare-fun x2997 () Bool)
(declare-fun x1311 () Int)
(declare-fun x3364 () Bool)
(declare-fun x2483 () Bool)
(declare-fun x2753 () Bool)
(declare-fun x195 () Bool)
(declare-fun x1813 () Bool)
(declare-fun x2014 () Int)
(declare-fun x3298 () Bool)
(declare-fun x3075 () Bool)
(declare-fun x750 () x1716)
(declare-fun x3471 () Int)
(declare-fun x511 () Bool)
(declare-fun x3537 () Int)
(declare-fun x3252 () Bool)
(declare-fun x2885 () Int)
(declare-fun x4192 () Int)
(declare-fun x4209 () Bool)
(declare-fun x4116 () Bool)
(declare-fun x2236 () Bool)
(declare-fun x2563 () Bool)
(declare-fun x3924 () Bool)
(declare-fun x7 () Bool)
(declare-fun x158 () Bool)
(declare-fun x4037 () Int)
(declare-fun x291 () Bool)
(declare-fun x2785 () Bool)
(declare-fun x3843 () x1716)
(declare-fun x1763 () Int)
(declare-fun x2899 () Int)
(declare-fun x3682 () x1716)
(declare-fun x3920 () Bool)
(declare-fun x1858 () x1716)
(declare-fun x716 () Bool)
(declare-fun x3979 () Bool)
(declare-fun x599 () Bool)
(declare-fun x3679 () Int)
(declare-fun x3412 () Int)
(declare-fun x880 () Bool)
(declare-fun x3615 () Bool)
(declare-fun x2821 () Int)
(declare-fun x2244 () Bool)
(declare-fun x2412 () Int)
(declare-fun x1095 () Bool)
(declare-fun x1079 () Int)
(declare-fun x451 () Bool)
(declare-fun x3742 () Bool)
(declare-fun x1583 () Int)
(declare-fun x3484 () Bool)
(declare-fun x2548 () Int)
(declare-fun x2961 () Int)
(declare-fun x3008 () Bool)
(declare-fun x610 () Bool)
(declare-fun x3922 () Bool)
(declare-fun x4043 () Int)
(declare-fun x3798 () Int)
(declare-fun x3171 () Bool)
(declare-fun x4289 () Bool)
(declare-fun x2025 () Bool)
(declare-fun x3439 () Bool)
(declare-fun x2655 () Bool)
(declare-fun x2522 () Int)
(declare-fun x2306 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x4196 () Int)
(declare-fun x2884 () Bool)
(declare-fun x3604 () Bool)
(declare-fun x2327 () Int)
(declare-fun x666 () Bool)
(declare-fun x1454 () Bool)
(declare-fun x601 () Bool)
(declare-fun x433 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x4324 () Int)
(declare-fun x2995 () x1716)
(declare-fun x1268 () Bool)
(declare-fun x48 () Bool)
(declare-fun x343 () Int)
(declare-fun x1278 () Bool)
(declare-fun x1639 () Bool)
(declare-fun x2078 () Bool)
(declare-fun x1902 () Bool)
(declare-fun x3733 () Bool)
(declare-fun x1916 () Bool)
(declare-fun x3199 () x1716)
(declare-fun x1591 () Bool)
(declare-fun x640 () Bool)
(declare-fun x1599 () Int)
(declare-fun x2088 () Int)
(declare-fun x140 () x1716)
(declare-fun x1574 () Bool)
(declare-fun x3283 () Int)
(declare-fun x2523 () Int)
(declare-fun x2857 () Int)
(declare-fun x3396 () Bool)
(declare-fun x1376 () Int)
(declare-fun x3103 () Bool)
(declare-fun x1723 () Int)
(declare-fun x2713 () Int)
(declare-fun x1026 () Bool)
(declare-fun x2537 () Bool)
(declare-fun x2930 () x1716)
(declare-fun x2349 () Int)
(declare-fun x3657 () Bool)
(declare-fun x2256 () Int)
(declare-fun x1527 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x191 () Bool)
(declare-fun x2082 () Int)
(declare-fun x4092 () Int)
(declare-fun x534 () Bool)
(declare-fun x2090 () Bool)
(declare-fun x3737 () Bool)
(declare-fun x825 () x1716)
(declare-fun x3878 () Bool)
(declare-fun x634 () Bool)
(declare-fun x1073 () Int)
(declare-fun x570 () Bool)
(declare-fun x2679 () Bool)
(declare-fun x4371 () Int)
(declare-fun x1263 () Bool)
(declare-fun x3720 () Int)
(declare-fun x1783 () Bool)
(declare-fun x3524 () Bool)
(declare-fun x2794 () Int)
(declare-fun x4121 () Bool)
(declare-fun x3403 () Bool)
(declare-fun x4273 () Int)
(declare-fun x3983 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x1298 () x1716)
(declare-fun x1037 () Bool)
(declare-fun x1293 () Bool)
(declare-fun x3741 () x1716)
(declare-fun x2434 () Bool)
(declare-fun x2608 () x1716)
(declare-fun x529 () Int)
(declare-fun x1007 () Int)
(declare-fun x2848 () Int)
(declare-fun x2698 () x1716)
(declare-fun x166 () Bool)
(declare-fun x3413 () Bool)
(declare-fun x770 () x1716)
(declare-fun x30 () x1716)
(declare-fun x2260 () Bool)
(declare-fun x4014 () Bool)
(declare-fun x1984 () Bool)
(declare-fun x4201 () Int)
(declare-fun x948 () Int)
(declare-fun x2370 () Bool)
(declare-fun x654 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x3223 () Int)
(declare-fun x2456 () Bool)
(declare-fun x1662 () Int)
(declare-fun x1215 () Int)
(declare-fun x1715 () Int)
(declare-fun x3254 () Int)
(declare-fun x1785 () Bool)
(declare-fun x2966 () Bool)
(declare-fun x384 () Int)
(declare-fun x1657 () Bool)
(declare-fun x2334 () Bool)
(declare-fun x3068 () Int)
(declare-fun x2673 () Int)
(declare-fun x3323 () Int)
(declare-fun x2569 () Int)
(declare-fun x4372 () Bool)
(declare-fun x2855 () Int)
(declare-fun x2506 () x1716)
(declare-fun x4378 () Bool)
(declare-fun x2369 () Int)
(declare-fun x1877 () Int)
(declare-fun x4167 () Bool)
(declare-fun x3432 () Bool)
(declare-fun x1654 () Int)
(declare-fun x3064 () Bool)
(declare-fun x1693 () Int)
(declare-fun x3433 () x1716)
(declare-fun x2752 () Bool)
(declare-fun x1578 () Bool)
(declare-fun x142 () Bool)
(declare-fun x2922 () Int)
(declare-fun x71 () Bool)
(declare-fun x3235 () Bool)
(declare-fun x518 () Bool)
(declare-fun x2233 () Int)
(declare-fun x2165 () Bool)
(declare-fun x1269 () Int)
(declare-fun x418 () x1716)
(declare-fun x3596 () Int)
(declare-fun x4131 () Bool)
(declare-fun x4122 () Int)
(declare-fun x4398 () Bool)
(declare-fun x2352 () Int)
(declare-fun x2388 (x1716) Int)
(declare-fun x2301 () Bool)
(declare-fun x274 () Bool)
(declare-fun x1524 () Bool)
(declare-fun x4187 () Bool)
(declare-fun x364 () Bool)
(declare-fun x2736 () Int)
(declare-fun x374 () Int)
(declare-fun x820 () Int)
(declare-fun x4015 () Bool)
(declare-fun x1039 () Int)
(declare-fun x1054 () Bool)
(declare-fun x2128 () Bool)
(declare-fun x261 () Bool)
(declare-fun x146 () Int)
(declare-fun x2457 () Bool)
(declare-fun x841 () Int)
(declare-fun x3102 () Bool)
(declare-fun x4118 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x162 () Bool)
(declare-fun x4143 () Int)
(declare-fun x1040 () Bool)
(declare-fun x743 () Int)
(declare-fun x3299 () Bool)
(declare-fun x1670 () Int)
(declare-fun x1856 () x1716)
(declare-fun x772 () Bool)
(declare-fun x390 () Bool)
(declare-fun x473 () Int)
(declare-fun x2744 () Bool)
(declare-fun x3248 () Bool)
(declare-fun x444 () Bool)
(declare-fun x4247 () Bool)
(declare-fun x3333 () x1716)
(declare-fun x2040 () Bool)
(declare-fun x3591 () Bool)
(declare-fun x3414 () Bool)
(declare-fun x1257 () Int)
(declare-fun x1456 () x1716)
(declare-fun x3206 () Bool)
(declare-fun x1434 () Int)
(declare-fun x2243 () Int)
(declare-fun x2163 () Bool)
(declare-fun x2358 () Int)
(declare-fun x3161 () Bool)
(declare-fun x2921 () Bool)
(declare-fun x1368 (Int) Int)
(declare-fun x941 () Int)
(declare-fun x1208 () Bool)
(declare-fun x283 () Bool)
(declare-fun x560 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x1352 () Bool)
(declare-fun x4177 () Int)
(declare-fun x1197 () Int)
(declare-fun x1530 () Bool)
(declare-fun x1483 () Bool)
(declare-fun x1753 () Bool)
(declare-fun x1426 () Int)
(declare-fun x3453 () Bool)
(declare-fun x3397 () Int)
(declare-fun x2859 () Bool)
(declare-fun x3986 () Int)
(declare-fun x396 () Bool)
(declare-fun x3218 () Int)
(declare-fun x1466 () Bool)
(declare-fun x628 () Int)
(declare-fun x3847 () Bool)
(declare-fun x4220 () Int)
(declare-fun x3418 () Bool)
(declare-fun x3063 () Bool)
(declare-fun x57 () Bool)
(declare-fun x3597 () Int)
(declare-fun x676 () Bool)
(declare-fun x3880 () Int)
(declare-fun x1403 () Bool)
(declare-fun x1592 () Bool)
(declare-fun x2092 () Bool)
(declare-fun x4392 () Int)
(declare-fun x2206 () x1716)
(declare-fun x292 () Int)
(declare-fun x3587 () Int)
(declare-fun x873 () Int)
(declare-fun x494 () Bool)
(declare-fun x4206 () x1716)
(declare-fun x2803 () Bool)
(declare-fun x3066 () Bool)
(declare-fun x1118 () Bool)
(declare-fun x3111 () Bool)
(declare-fun x2405 () Bool)
(declare-fun x342 () Bool)
(declare-fun x4150 () Bool)
(declare-fun x1240 () x1716)
(declare-fun x4099 () Bool)
(declare-fun x2844 () Bool)
(declare-fun x2992 () Bool)
(declare-fun x3868 () Bool)
(declare-fun x1630 () Int)
(declare-fun x3739 () Bool)
(declare-fun x2299 () Int)
(declare-fun x547 () Int)
(declare-fun x2566 () Int)
(declare-fun x2919 () Int)
(declare-fun x1156 () Bool)
(declare-fun x3863 () Int)
(declare-fun x2799 (Int Int) Int)
(declare-fun x1347 () Int)
(declare-fun x354 () Bool)
(declare-fun x552 () Int)
(declare-fun x413 () Int)
(declare-fun x3860 () Bool)
(declare-fun x2042 () Bool)
(declare-fun x2427 () Int)
(declare-fun x4291 () Bool)
(declare-fun x1277 () Bool)
(declare-fun x324 () Int)
(declare-fun x1187 () Int)
(declare-fun x4089 () Int)
(declare-fun x2530 () Bool)
(declare-fun x859 () Bool)
(declare-fun x3813 () Bool)
(declare-fun x2743 () Bool)
(declare-fun x904 () Bool)
(declare-fun x3219 () Bool)
(declare-fun x3785 () Bool)
(declare-fun x2756 () Int)
(declare-fun x3330 () Bool)
(declare-fun x2973 () Int)
(declare-fun x2041 () Int)
(declare-fun x890 () Bool)
(declare-fun x1880 () Bool)
(declare-fun x3090 () Bool)
(declare-fun x1575 () Bool)
(declare-fun x1136 () Int)
(declare-fun x1248 () x1716)
(declare-fun x2670 () Int)
(declare-fun x2812 () Bool)
(declare-fun x3354 () x1716)
(declare-fun x2532 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x4368 () Bool)
(declare-fun x650 () Bool)
(declare-fun x2718 () Bool)
(declare-fun x3264 () Bool)
(declare-fun x3468 () Int)
(declare-fun x1896 () Bool)
(declare-fun x490 () Bool)
(declare-fun x2710 () Int)
(declare-fun x2555 () Int)
(declare-fun x3178 () Bool)
(declare-fun x129 () Bool)
(declare-fun x1722 () Int)
(declare-fun x2560 () Int)
(declare-fun x3631 () Bool)
(declare-fun x3632 () Bool)
(declare-fun x4180 () Bool)
(declare-fun x1229 () Bool)
(declare-fun x4078 () Bool)
(declare-fun x3976 () Bool)
(declare-fun x4380 () x1716)
(declare-fun x2080 (Int Int) Int)
(declare-fun x303 () Int)
(declare-fun x998 () Int)
(declare-fun x1289 () Bool)
(declare-fun x3236 () Int)
(declare-fun x2160 () Int)
(declare-fun x3357 () Int)
(declare-fun x3309 () x1716)
(declare-fun x977 () Bool)
(declare-fun x703 () Int)
(declare-fun x563 () Bool)
(declare-fun x2158 () Bool)
(declare-fun x1334 () Bool)
(declare-fun x153 () Int)
(declare-fun x3025 () Bool)
(declare-fun x1652 () Bool)
(declare-fun x3608 () Bool)
(declare-fun x3503 () Bool)
(declare-fun x1019 () Bool)
(declare-fun x4342 () x1716)
(declare-fun x1359 () Bool)
(declare-fun x4082 () Bool)
(declare-fun x4184 () Bool)
(declare-fun x1419 () Int)
(declare-fun x328 () Int)
(declare-fun x3017 () Bool)
(declare-fun x2103 () Int)
(declare-fun x3661 () Int)
(declare-fun x2505 () Bool)
(declare-fun x802 () Int)
(declare-fun x2249 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x3067 () Bool)
(declare-fun x470 () Int)
(declare-fun x3375 () Int)
(declare-fun x3570 () Bool)
(declare-fun x224 (Int) Int)
(declare-fun x4350 () Int)
(declare-fun x656 () Bool)
(declare-fun x241 () Int)
(declare-fun x459 () Int)
(declare-fun x1990 () Bool)
(declare-fun x3424 () Bool)
(declare-fun x793 () Bool)
(declare-fun x1895 () Int)
(declare-fun x218 () Int)
(declare-fun x3616 () Int)
(declare-fun x3644 () Bool)
(declare-fun x4065 () Int)
(declare-fun x583 () Int)
(declare-fun x3222 () Int)
(declare-fun x103 () Bool)
(declare-fun x373 () Int)
(declare-fun x3876 () Int)
(declare-fun x2231 () Bool)
(declare-fun x2972 () Bool)
(declare-fun x3925 () x1716)
(declare-fun x1482 () Bool)
(declare-fun x1772 () Bool)
(declare-fun x3514 () Int)
(declare-fun x1049 () Int)
(declare-fun x763 () Bool)
(declare-fun x2015 () Int)
(declare-fun x1502 () Int)
(declare-fun x4281 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x4036 () Bool)
(declare-fun x1377 () Int)
(declare-fun x3676 () Bool)
(declare-fun x2527 () Bool)
(declare-fun x3775 () Bool)
(declare-fun x221 () Int)
(declare-fun x3659 () Bool)
(declare-fun x2408 () Bool)
(declare-fun x155 () Bool)
(declare-fun x2269 () Int)
(declare-fun x2579 () Bool)
(declare-fun x1919 () Bool)
(declare-fun x3923 () Int)
(declare-fun x61 () Int)
(declare-fun x1719 () Bool)
(declare-fun x3308 () Bool)
(declare-fun x916 () x1716)
(declare-fun x1430 () Bool)
(declare-fun x1822 () Int)
(declare-fun x493 () Int)
(declare-fun x1561 () Int)
(declare-fun x1796 () Int)
(declare-fun x1119 () Bool)
(declare-fun x4364 () Bool)
(declare-fun x889 () Bool)
(declare-fun x1830 () Int)
(declare-fun x2928 () Bool)
(declare-fun x3543 () Bool)
(declare-fun x1323 () Bool)
(declare-fun x2519 () Bool)
(declare-fun x2147 () Bool)
(declare-fun x868 () Int)
(declare-fun x3651 () Int)
(declare-fun x3124 () Bool)
(declare-fun x2832 () x1716)
(declare-fun x1623 () Bool)
(declare-fun x2702 () Bool)
(declare-fun x3315 () Int)
(declare-fun x3715 () Int)
(declare-fun x3765 () Bool)
(declare-fun x2931 () Int)
(declare-fun x3839 () x1716)
(declare-fun x2465 () Bool)
(declare-fun x1874 () Bool)
(declare-fun x3392 () Bool)
(declare-fun x3382 () Int)
(declare-fun x966 () x1716)
(declare-fun x3381 () Bool)
(declare-fun x478 () Bool)
(declare-fun x492 () Int)
(declare-fun x4102 () Int)
(declare-fun x3390 () Int)
(declare-fun x3655 () Int)
(declare-fun x3454 () Int)
(declare-fun x870 () Bool)
(declare-fun x3915 () Bool)
(declare-fun x3851 () Bool)
(declare-fun x2292 () Int)
(declare-fun x4088 () Bool)
(declare-fun x3383 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x3712 () Bool)
(declare-fun x1447 () Int)
(declare-fun x4060 () Bool)
(declare-fun x3002 () Bool)
(declare-fun x714 () Bool)
(declare-fun x2539 () x1716)
(declare-fun x504 () Bool)
(declare-fun x4020 () Int)
(declare-fun x3999 () Int)
(declare-fun x2048 () Int)
(declare-fun x1972 () Int)
(declare-fun x126 () x1716)
(declare-fun x2429 () Bool)
(declare-fun x2668 () Bool)
(declare-fun x2847 () Bool)
(declare-fun x4030 () Int)
(declare-fun x3151 () Int)
(declare-fun x2467 () Int)
(declare-fun x3499 () Int)
(declare-fun x2453 () Int)
(declare-fun x1280 () Bool)
(declare-fun x472 () Bool)
(declare-fun x3024 () Int)
(declare-fun x857 () Bool)
(declare-fun x532 () Bool)
(declare-fun x4259 () Bool)
(declare-fun x463 () Bool)
(declare-fun x2056 () Bool)
(declare-fun x1571 () Int)
(declare-fun x1726 () Int)
(declare-fun x1243 () Int)
(declare-fun x1951 () Bool)
(declare-fun x1098 () Int)
(declare-fun x164 () Bool)
(declare-fun x3805 () Bool)
(declare-fun x2767 () Int)
(declare-fun x3237 () Bool)
(declare-fun x4022 () Bool)
(declare-fun x580 () Int)
(declare-fun x1672 () Int)
(declare-fun x3977 () Int)
(declare-fun x4366 () x1716)
(declare-fun x2629 () Bool)
(declare-fun x406 () Int)
(declare-fun x1245 () Bool)
(declare-fun x1970 () Int)
(declare-fun x3533 () Bool)
(declare-fun x2302 () Int)
(declare-fun x3046 () Int)
(declare-fun x165 () Int)
(declare-fun x775 () Bool)
(declare-fun x1150 () Bool)
(declare-fun x393 () Bool)
(declare-fun x2474 () Int)
(declare-fun x3521 () Bool)
(declare-fun x2588 () Int)
(declare-fun x1963 () Int)
(declare-fun x306 () Int)
(declare-fun x3692 () Int)
(declare-fun x3513 () Bool)
(declare-fun x4235 () Bool)
(declare-fun x119 () Bool)
(declare-fun x2037 () Int)
(declare-fun x2391 () Int)
(declare-fun x476 () Bool)
(declare-fun x819 () Int)
(declare-fun x4039 () Bool)
(declare-fun x906 () Bool)
(declare-fun x663 () Bool)
(declare-fun x1279 () Int)
(declare-fun x1556 () Bool)
(declare-fun x1027 () Bool)
(declare-fun x934 () Int)
(declare-fun x501 () Bool)
(declare-fun x3903 () Bool)
(declare-fun x816 () Bool)
(declare-fun x1335 () Bool)
(declare-fun x1133 () x1716)
(declare-fun x239 () x1716)
(declare-fun x1784 () Int)
(declare-fun x765 () Int)
(declare-fun x3578 () Bool)
(declare-fun x3643 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x715 () Int)
(declare-fun x940 () Bool)
(declare-fun x3560 () Bool)
(declare-fun x1306 () Int)
(declare-fun x1389 () Int)
(declare-fun x69 () Int)
(declare-fun x3636 () Int)
(declare-fun x1101 () Int)
(declare-fun x1616 (x1716) Int)
(declare-fun x1460 () Bool)
(declare-fun x4331 () Bool)
(declare-fun x2198 () Bool)
(declare-fun x117 () Int)
(declare-fun x1023 () x1716)
(declare-fun x4231 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x1059 () Bool)
(declare-fun x517 () Int)
(declare-fun x115 () x1716)
(declare-fun x1191 () Bool)
(declare-fun x3530 () Bool)
(declare-fun x3131 () Bool)
(declare-fun x3856 () Bool)
(declare-fun x3239 () Bool)
(declare-fun x4390 () Bool)
(declare-fun x1649 () Int)
(declare-fun x1643 () Bool)
(declare-fun x2044 () x1716)
(declare-fun x4067 () Bool)
(declare-fun x2312 () Bool)
(declare-fun x1194 () Int)
(declare-fun x1692 () x1716)
(declare-fun x2754 () Int)
(declare-fun x3611 () Bool)
(declare-fun x1866 () Bool)
(declare-fun x3447 () Int)
(declare-fun x2616 () Int)
(declare-fun x1789 () Bool)
(declare-fun x1158 () x1716)
(declare-fun x938 () Bool)
(declare-fun x895 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x409 () Bool)
(declare-fun x4094 () Bool)
(declare-fun x945 () Bool)
(declare-fun x4402 () Bool)
(declare-fun x1492 () Int)
(declare-fun x3201 () Bool)
(declare-fun x685 () Bool)
(declare-fun x2018 () Int)
(declare-fun x1549 () Bool)
(declare-fun x3012 () Int)
(declare-fun x1523 () Int)
(declare-fun x2575 () Bool)
(declare-fun x2874 () Int)
(declare-fun x3045 () Bool)
(declare-fun x3442 () Bool)
(declare-fun x4237 () Bool)
(declare-fun x3531 () Int)
(declare-fun x4396 () Bool)
(declare-fun x899 () Bool)
(declare-fun x2277 () Int)
(declare-fun x755 () Int)
(declare-fun x157 () x1716)
(declare-fun x2646 () Bool)
(declare-fun x4233 () Int)
(declare-fun x43 () Bool)
(declare-fun x2263 () x1716)
(declare-fun x1384 () Bool)
(declare-fun x2837 () Int)
(declare-fun x4218 () Int)
(declare-fun x2820 () Bool)
(declare-fun x2417 () Bool)
(declare-fun x617 () Int)
(declare-fun x2936 () Bool)
(declare-fun x2727 () Bool)
(declare-fun x1606 () Bool)
(declare-fun x3179 () Bool)
(declare-fun x995 () Bool)
(declare-fun x3959 () x1716)
(declare-fun x2347 () x1716)
(declare-fun x438 () Bool)
(declare-fun x1893 () Bool)
(declare-fun x3209 () Bool)
(declare-fun x3338 () x1716)
(declare-fun x2067 (Int) Int)
(declare-fun x2295 (x1716) Int)
(declare-fun x2303 () Bool)
(declare-fun x3031 () Int)
(declare-fun x2273 () Int)
(declare-fun x832 () Bool)
(declare-fun x2167 () Bool)
(declare-fun x862 () Bool)
(declare-fun x1814 () x1716)
(declare-fun x2690 () x1716)
(declare-fun x1887 () Bool)
(declare-fun x3705 () Int)
(declare-fun x926 () Bool)
(declare-fun x2788 () Int)
(declare-fun x2779 () Int)
(declare-fun x237 () Bool)
(declare-fun x3011 () Int)
(declare-fun x3586 () x1716)
(declare-fun x3952 () Int)
(declare-fun x1747 () Bool)
(declare-fun x2440 () Int)
(declare-fun x3650 () Bool)
(declare-fun x1364 () Int)
(declare-fun x429 () Int)
(declare-fun x1508 () Int)
(declare-fun x2587 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x1920 () Int)
(declare-fun x1096 () Int)
(declare-fun x1955 () Bool)
(declare-fun x3907 () Bool)
(declare-fun x1797 () Bool)
(declare-fun x1286 () Int)
(declare-fun x104 () Int)
(declare-fun x3936 () Int)
(declare-fun x2000 () Bool)
(declare-fun x2904 () Int)
(declare-fun x3704 () Int)
(declare-fun x935 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x2143 () Bool)
(declare-fun x567 () Bool)
(declare-fun x4056 () Int)
(declare-fun x3827 () Bool)
(declare-fun x1768 () Int)
(declare-fun x1526 () Bool)
(declare-fun x3176 () Bool)
(declare-fun x1933 () Int)
(declare-fun x586 () x1716)
(declare-fun x487 () Bool)
(declare-fun x2094 () Bool)
(declare-fun x1804 () Int)
(declare-fun x4344 () Int)
(declare-fun x700 () Bool)
(declare-fun x141 () Bool)
(declare-fun x2285 () Bool)
(declare-fun x1102 () Bool)
(declare-fun x3779 () Int)
(declare-fun x2827 () Int)
(declare-fun x1281 () Int)
(declare-fun x4003 () x1716)
(declare-fun x3263 () Int)
(declare-fun x2825 () Bool)
(declare-fun x290 () Int)
(declare-fun x1283 () Int)
(declare-fun x4305 () Int)
(declare-fun x632 () Bool)
(declare-fun x2034 () Bool)
(declare-fun x2210 () Int)
(declare-fun x1850 () Bool)
(declare-fun x2988 () Bool)
(declare-fun x3545 () Bool)
(declare-fun x3470 () Int)
(declare-fun x732 () Bool)
(declare-fun x1300 () Bool)
(declare-fun x56 () Int)
(declare-fun x2028 () Bool)
(declare-fun x4286 () Bool)
(declare-fun x1435 () Int)
(declare-fun x2087 () Bool)
(declare-fun x401 () Int)
(declare-fun x2933 () Int)
(declare-fun x2652 () Int)
(declare-fun x1313 () x1716)
(declare-fun x3727 () Bool)
(declare-fun x3476 () Bool)
(declare-fun x1786 () Bool)
(declare-fun x1220 () Bool)
(declare-fun x40 () Bool)
(declare-fun x2272 () Int)
(declare-fun x3743 () Bool)
(declare-fun x2289 () Bool)
(declare-fun x339 () x1716)
(declare-fun x2545 () Int)
(declare-fun x3602 () Bool)
(declare-fun x1494 () Int)
(declare-fun x4171 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x952 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x2251 () Int)
(declare-fun x3677 () Bool)
(declare-fun x3234 () Bool)
(declare-fun x2515 () x1716)
(declare-fun x2084 () Int)
(declare-fun x242 () Bool)
(declare-fun x1373 () Bool)
(declare-fun x3026 () Int)
(declare-fun x359 () Bool)
(declare-fun x673 () Bool)
(declare-fun x2382 () x1716)
(declare-fun x1182 () Bool)
(declare-fun x1489 () x1716)
(declare-fun x1290 () Bool)
(declare-fun x1057 () Bool)
(declare-fun x2955 () Bool)
(declare-fun x3042 () Bool)
(declare-fun x410 () Bool)
(declare-fun x720 () Bool)
(declare-fun x1238 () x1716)
(declare-fun x630 () Bool)
(declare-fun x3429 () Bool)
(declare-fun x3275 () Bool)
(declare-fun x271 () Bool)
(declare-fun x3062 () Int)
(declare-fun x590 () Int)
(declare-fun x4319 () Int)
(declare-fun x1565 () Bool)
(declare-fun x2184 () Int)
(declare-fun x1864 () Int)
(declare-fun x961 () Bool)
(declare-fun x1917 () Bool)
(declare-fun x111 () Bool)
(declare-fun x946 () Bool)
(declare-fun x2883 () Int)
(declare-fun x1938 () x1716)
(declare-fun x20 () Bool)
(declare-fun x971 () Bool)
(declare-fun x3812 () Bool)
(declare-fun x3395 () Bool)
(declare-fun x2324 () Bool)
(declare-fun x1233 () Int)
(declare-fun x2597 () Bool)
(declare-fun x3334 () Bool)
(declare-fun x173 () Bool)
(declare-fun x2445 () Int)
(declare-fun x3831 () Bool)
(declare-fun x3571 () Bool)
(declare-fun x3653 () Bool)
(declare-fun x2941 () Bool)
(declare-fun x2554 () x1716)
(declare-fun x4162 () Bool)
(declare-fun x351 () Int)
(declare-fun x3434 () Bool)
(declare-fun x1833 () Bool)
(declare-fun x1464 () Int)
(declare-fun x2437 () Bool)
(declare-fun x2614 () Bool)
(declare-fun x3916 () Bool)
(declare-fun x2571 () Int)
(declare-fun x2531 () Int)
(declare-fun x3747 () Bool)
(declare-fun x3518 () Int)
(declare-fun x1615 () Bool)
(declare-fun x1863 () Bool)
(declare-fun x1292 () Int)
(declare-fun x1362 () Int)
(declare-fun x1828 () Bool)
(declare-fun x4207 () Bool)
(declare-fun x2942 () x1716)
(declare-fun x2091 () Bool)
(declare-fun x404 () Int)
(declare-fun x2248 () Int)
(declare-fun x1569 () Bool)
(declare-fun x3809 () x1716)
(declare-fun x3446 () Bool)
(declare-fun x3170 () Int)
(declare-fun x2241 () Bool)
(declare-fun x3489 () Bool)
(declare-fun x4000 () Int)
(declare-fun x2135 () Int)
(declare-fun x3132 () Int)
(declare-fun x2012 () Int)
(declare-fun x4295 () Bool)
(declare-fun x1315 () Int)
(declare-fun x2325 () Bool)
(declare-fun x2681 () Bool)
(declare-fun x2546 () Bool)
(declare-fun x1837 () Int)
(declare-fun x320 () Int)
(declare-fun x465 () Bool)
(declare-fun x298 () Int)
(declare-fun x4230 () Int)
(declare-fun x2203 () Int)
(declare-fun x1806 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x2721 () Int)
(declare-fun x18 () Int)
(declare-fun x1647 () Int)
(declare-fun x939 () Bool)
(declare-fun x2663 () Bool)
(declare-fun x846 () Bool)
(declare-fun x1820 () Bool)
(declare-fun x1587 () Int)
(declare-fun x4357 () Int)
(declare-fun x3050 () Bool)
(declare-fun x1213 () Bool)
(declare-fun x44 () Bool)
(declare-fun x177 () Bool)
(declare-fun x4163 () Int)
(declare-fun x3776 () Bool)
(declare-fun x2661 () Bool)
(declare-fun x856 () Int)
(declare-fun x842 () Int)
(declare-fun x1781 () Int)
(declare-fun x94 () Int)
(declare-fun x636 () Bool)
(declare-fun x3037 () Int)
(declare-fun x2835 () Int)
(declare-fun x2036 () Bool)
(declare-fun x2774 () Bool)
(declare-fun x2609 () x1716)
(declare-fun x1604 () Bool)
(declare-fun x192 () Bool)
(declare-fun x705 () Int)
(declare-fun x1196 () Int)
(declare-fun x3280 () Int)
(declare-fun x866 () Int)
(declare-fun x4280 () Int)
(declare-fun x3266 () Int)
(declare-fun x380 (x1716) Int)
(declare-fun x3175 () Bool)
(declare-fun x831 () Bool)
(declare-fun x190 () Int)
(declare-fun x1061 () Int)
(declare-fun x3159 () Bool)
(declare-fun x3105 () x1716)
(declare-fun x2887 () Int)
(declare-fun x2466 () Int)
(declare-fun x2463 () Bool)
(declare-fun x4268 () Bool)
(declare-fun x931 () Int)
(declare-fun x1548 () Int)
(declare-fun x3087 () Int)
(declare-fun x521 () x1716)
(declare-fun x1901 () Bool)
(declare-fun x452 () Int)
(declare-fun x2234 () Bool)
(declare-fun x2819 () x1716)
(declare-fun x2940 () Int)
(declare-fun x1689 () Bool)
(declare-fun x687 () Bool)
(declare-fun x3575 () Int)
(declare-fun x1515 () Bool)
(declare-fun x2504 () Bool)
(declare-fun x1155 () Int)
(declare-fun x1128 () Bool)
(declare-fun x2221 () Bool)
(declare-fun x942 () Bool)
(declare-fun x2513 () Bool)
(declare-fun x3220 () Bool)
(declare-fun x1698 () Int)
(declare-fun x3557 () Bool)
(declare-fun x2230 () Int)
(declare-fun x2484 () Bool)
(declare-fun x1546 () Int)
(declare-fun x2313 () Int)
(declare-fun x424 () Int)
(declare-fun x2153 () Int)
(declare-fun x2219 () Bool)
(declare-fun x2356 () Int)
(declare-fun x692 () Bool)
(declare-fun x206 () Int)
(declare-fun x1378 () Int)
(declare-fun x1237 () Bool)
(declare-fun x4159 () Bool)
(declare-fun x1388 () Int)
(declare-fun x637 () Int)
(declare-fun x4081 () Int)
(declare-fun x742 () Bool)
(declare-fun x3756 () Int)
(declare-fun x1816 () Int)
(declare-fun x907 () Bool)
(declare-fun x910 () Int)
(declare-fun x3093 () Int)
(declare-fun x318 () Int)
(declare-fun x1625 () Bool)
(declare-fun x957 () Bool)
(declare-fun x358 () Int)
(declare-fun x1301 () Int)
(declare-fun x1805 () Bool)
(declare-fun x3841 () Int)
(declare-fun x1015 () Int)
(declare-fun x1340 () Int)
(declare-fun x134 () Bool)
(declare-fun x245 () Bool)
(declare-fun x2817 () Int)
(declare-fun x319 () Int)
(declare-fun x1844 () Bool)
(define-fun x2760 ((x1716 x1716) (x3605 Int)) x1716 (ite ((_ is x3680) x1716) (x3680 (x90 x1716) (+ x3605 (x1910 x1716))) (ite ((_ is x4257) x1716) (x4257 (x1209 x1716) (x3400 x1716) (+ x3605 (x301 x1716))) (x3241 (+ x3605 (x1358 x1716))))))
(define-fun x461 ((x704 Int)) Int (ite (and (<= 0 x704) (< x704 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x704 (- x704 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1249 ((x704 Int)) Int (ite (and (>= x704 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x704 0)) (+ x704 115792089237316195423570985008687907853269984665640564039457584007913129639936) x704))
(define-fun x1700 ((x704 Int)) Int (ite (and (>= x704 0) (< x704 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x704 (ite (and (>= x704 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x704)) (- x704 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (> 0 x704) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x704)) (+ x704 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x2008 x704 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x4106 ((x2888 Int)) Bool (and (>= x2888 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2888)))
(define-fun x3212 ((x2888 Int)) Bool (and (= (x4048 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2888) x2888) (= x2888 (x4048 x2888 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x210 ((x2888 Int)) Bool (and (= 0 (x4048 x2888 0)) (= (x4048 0 x2888) 0)))
(define-fun x6 ((x2888 Int)) Bool (= (x4048 x2888 x2888) x2888))
(define-fun x1189 ((x2888 Int)) Bool (and (x3212 x2888) (x210 x2888) (x6 x2888)))
(define-fun x898 ((x2888 Int) (x3438 Int)) Bool (= (x4048 x3438 x2888) (x4048 x2888 x3438)))
(define-fun x1332 ((x2888 Int) (x3438 Int)) Bool (and (>= (x4048 x2888 x3438) 0) (=> (>= x3438 0) (<= (x4048 x2888 x3438) x3438)) (=> (>= x2888 0) (<= (x4048 x2888 x3438) x2888))))
(define-fun x4005 ((x2888 Int) (x3438 Int)) Bool (and (x1332 x2888 x3438) (x898 x2888 x3438)))
(define-fun x3950 ((x2888 Int)) Bool (= (x2008 x2888 1461501637330902918203684832716283019655932542976) (x4048 x2888 1461501637330902918203684832716283019655932542975)))
(define-fun x1227 ((x2888 Int)) Bool (and (x4005 x2888 1461501637330902918203684832716283019655932542975) (x3950 x2888)))
(define-fun x1418 ((x2888 Int) (x3438 Int)) Bool (and (<= 0 (x2008 x2888 x3438)) (< (x2008 x2888 x3438) x3438)))
(define-fun x4174 ((x2888 Int) (x3438 Int)) Bool (=> (and (< 0 x3438) (<= 0 x2888)) (= (< x2888 x3438) (= x2888 (x2008 x2888 x3438)))))
(define-fun x3919 ((x2888 Int) (x3438 Int)) Bool (=> (and (and (> (+ x3438 x3438) x2888) (<= x3438 x2888)) (> x3438 0)) (= (- x2888 x3438) (x2008 x2888 x3438))))
(define-fun x4264 ((x2888 Int)) Bool (= (x2008 0 x2888) 0))
(define-fun x3633 ((x2888 Int)) Bool (= 0 (x2008 x2888 1)))
(define-fun x3378 ((x2888 Int)) Bool (= (x2008 x2888 x2888) 0))
(define-fun x2291 ((x2888 Int)) Bool (and (x3633 x2888) (x4264 x2888) (x3378 x2888)))
(define-fun x1532 ((x2888 Int)) Bool (= (x1700 x2888) (+ (x2008 x2888 32) (x4048 x2888 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x1036 ((x2888 Int)) Bool (and (x1532 x2888) (x4005 x2888 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x4328 ((x2888 Int) (x3438 Int)) Bool (=> (and (> x2888 0) (> x3438 0)) (and (>= x2888 (x2799 x2888 x3438)) (<= 0 (x2799 x2888 x3438)))))
(define-fun x768 ((x2888 Int) (x3438 Int)) Bool (=> (and (and (>= x3438 1) (< x3438 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (< x2888 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x2888))) (and (<= 0 (x2799 x2888 x3438)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2799 x2888 x3438)))))
(define-fun x2838 ((x2888 Int) (x3438 Int)) Bool (=> (and (< x3438 x2888) (> x3438 1)) (> x2888 (x2799 x2888 x3438))))
(define-fun x2725 ((x2888 Int) (x3438 Int)) Bool (=> (and (< 0 x3438) (> x2888 0)) (= (< x2888 x3438) (= (x2799 x2888 x3438) 0))))
(define-fun x3221 ((x2888 Int)) Bool (= (x2799 0 x2888) 0))
(define-fun x4242 ((x2888 Int)) Bool (= x2888 (x2799 x2888 1)))
(define-fun x3905 ((x2888 Int)) Bool (=> (not (= 0 x2888)) (= 1 (x2799 x2888 x2888))))
(define-fun x4069 ((x2888 Int)) Bool (and (x3221 x2888) (x3905 x2888) (x4242 x2888)))
(define-fun x2047 ((x2173 Int)) Int (ite (= 128 x2173) 76402721711080721455099699717775724453355902399574518144543212547937138638848 (x2648 x2173)))
(define-fun x1731 ((x2173 Int)) Int (ite (= 132 x2173) x4037 (x2047 x2173)))
(define-fun x4352 ((x2173 Int)) Int (ite (= x2173 128) x2585 (x1731 x2173)))
(define-fun x1721 ((x2173 Int)) Int (ite (= x2173 x3397) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x4352 x2173)))
(define-fun x3552 ((x2173 Int)) Int (ite (= x2895 x2173) x275 (x1721 x2173)))
(define-fun x2462 ((x2173 Int)) Int (ite (= x3397 x2173) x2254 (x3552 x2173)))
(define-fun x486 ((x2173 Int)) Int (ite (= x3397 x2173) x3579 (x3552 x2173)))
(define-fun x1247 ((x2173 Int)) Int (ite (= x3397 x2173) x1233 (x3552 x2173)))
(define-fun x736 ((x2173 Int)) Int (ite (= x2173 x3397) x1511 (x3552 x2173)))
(define-fun x272 ((x2173 Int)) Int (ite (= x3397 x2173) x1568 (x3552 x2173)))
(define-fun x675 ((x2173 Int)) Int (ite (= x2173 x3397) x3551 (x3552 x2173)))
(define-fun x915 ((x2173 Int)) Int (ite (= x2173 x3397) x2064 (x3552 x2173)))
(define-fun x1835 ((x2173 Int)) Int (ite x3571 (ite x3602 (x3552 x2173) (x2462 x2173)) (ite x4074 (ite x3487 (x3552 x2173) (x486 x2173)) (ite x3856 (ite x2626 (x3552 x2173) (x1247 x2173)) (ite x3611 (ite x1041 (x3552 x2173) (x736 x2173)) (ite x1581 (ite x2790 (x3552 x2173) (x272 x2173)) (ite x551 (ite x3965 (x3552 x2173) (x675 x2173)) (ite x936 (x3552 x2173) (x915 x2173)))))))))
(define-fun x1087 ((x2173 Int)) Int (ite (= x2726 x2173) 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x1835 x2173)))
(define-fun x4181 ((x2173 Int)) Int (ite (= x2173 x626) x3250 (x1087 x2173)))
(define-fun x2926 ((x2173 Int)) Int (ite (= x2726 x2173) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x4181 x2173)))
(define-fun x1653 ((x2173 Int)) Int (ite (= x4267 x2173) x529 (x2926 x2173)))
(define-fun x1047 ((x2173 Int)) Int (ite (= x3607 x2173) 0 (x1653 x2173)))
(define-fun x4297 ((x2173 x1716)) Int (ite (= x1773 x2173) 0 (x752 x2173)))
(define-fun x1169 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x1743 x2173)))
(define-fun x3165 ((x2173 Int)) Int (ite (= x2173 x2726) 1 (x1047 x2173)))
(define-fun x123 ((x2173 x1716)) Int (ite (= x3627 x2173) 0 (x1093 x2173)))
(define-fun x289 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x1743 x2173)))
(define-fun x3964 ((x2173 Int)) Int (ite (= x2726 x2173) 1 (x1047 x2173)))
(define-fun x1890 ((x2173 x1716)) Int (ite (= x3224 x2173) 0 (x1878 x2173)))
(define-fun x2649 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x1743 x2173)))
(define-fun x2343 ((x2173 Int)) Int (ite (= x2726 x2173) 1 (x1047 x2173)))
(define-fun x1892 ((x2173 x1716)) Int (ite (= x2320 x2173) 0 (x2235 x2173)))
(define-fun x2633 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x1743 x2173)))
(define-fun x1470 ((x2173 Int)) Int (ite (= x2173 x2726) 1 (x1047 x2173)))
(define-fun x1028 ((x2173 x1716)) Int (ite (= x2173 x1576) 0 (x2755 x2173)))
(define-fun x447 ((x2173 Int)) Int (ite (= x2173 0) 1 (x1743 x2173)))
(define-fun x174 ((x2173 Int)) Int (ite (= x2173 x2726) 1 (x1047 x2173)))
(define-fun x208 ((x2173 x1716)) Int (ite (= x2173 x1711) 0 (x4032 x2173)))
(define-fun x2572 ((x2173 Int)) Int (ite (= x2173 0) 1 (x1743 x2173)))
(define-fun x4337 ((x2173 Int)) Int (ite (= x2173 x2726) 1 (x1047 x2173)))
(define-fun x1486 ((x2173 x1716)) Int (ite (= x2173 x1952) 0 (x1374 x2173)))
(define-fun x1160 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x1743 x2173)))
(define-fun x3274 ((x2173 Int)) Int (ite (= x2726 x2173) 1 (x1047 x2173)))
(define-fun x105 ((x2173 x1716)) Int (ite (= x1313 x2173) x2616 (x432 x2173)))
(define-fun x2657 ((x2173 Int)) Int (ite x3102 (ite x2076 (x1047 x2173) (x3165 x2173)) (ite x3848 (ite x41 (x1047 x2173) (x3964 x2173)) (ite x1103 (ite x3903 (x1047 x2173) (x2343 x2173)) (ite x89 (ite x1534 (x1047 x2173) (x1470 x2173)) (ite x2414 (ite x1452 (x1047 x2173) (x174 x2173)) (ite x1009 (ite x2131 (x1047 x2173) (x4337 x2173)) (ite x4240 (x1047 x2173) (x3274 x2173)))))))))
(define-fun x171 ((x2173 Int)) Int (ite (= x264 x2173) 85927964219764727760667161919810921830953265369826564066086284937368273158144 (x2657 x2173)))
(define-fun x766 ((x2173 Int)) Int (ite (= x2173 x2048) x842 (x171 x2173)))
(define-fun x4063 ((x2173 Int)) Int (ite (= x264 x2173) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x766 x2173)))
(define-fun x2114 ((x2173 Int)) Int (ite (= x281 x2173) x3982 (x4063 x2173)))
(define-fun x1266 ((x2173 Int)) Int (ite (= x4102 x2173) 0 (x2114 x2173)))
(define-fun x2896 ((x2173 x1716)) Int (ite x3102 (ite x2076 (x752 x2173) (x4297 x2173)) (x752 x2173)))
(define-fun x1441 ((x2173 x1716)) Int (ite (= x2173 x2485) 0 (x2896 x2173)))
(define-fun x2645 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x1368 x2173)))
(define-fun x2452 ((x2173 Int)) Int (ite (= x264 x2173) 1 (x1266 x2173)))
(define-fun x1013 ((x2173 x1716)) Int (ite x3102 (x1093 x2173) (ite x3848 (ite x41 (x1093 x2173) (x123 x2173)) (x1093 x2173))))
(define-fun x1198 ((x2173 x1716)) Int (ite (= x2486 x2173) 0 (x1013 x2173)))
(define-fun x3366 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x1368 x2173)))
(define-fun x3574 ((x2173 Int)) Int (ite (= x264 x2173) 1 (x1266 x2173)))
(define-fun x3147 ((x2173 x1716)) Int (ite x3102 (x1878 x2173) (ite x3848 (x1878 x2173) (ite x1103 (ite x3903 (x1878 x2173) (x1890 x2173)) (x1878 x2173)))))
(define-fun x2731 ((x2173 x1716)) Int (ite (= x2173 x295) 0 (x3147 x2173)))
(define-fun x1841 ((x2173 Int)) Int (ite (= x2173 0) 1 (x1368 x2173)))
(define-fun x4103 ((x2173 Int)) Int (ite (= x2173 x264) 1 (x1266 x2173)))
(define-fun x251 ((x2173 x1716)) Int (ite x3102 (x2235 x2173) (ite x3848 (x2235 x2173) (ite x1103 (x2235 x2173) (ite x89 (ite x1534 (x2235 x2173) (x1892 x2173)) (x2235 x2173))))))
(define-fun x1042 ((x2173 x1716)) Int (ite (= x3469 x2173) 0 (x251 x2173)))
(define-fun x849 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x1368 x2173)))
(define-fun x865 ((x2173 Int)) Int (ite (= x264 x2173) 1 (x1266 x2173)))
(define-fun x3472 ((x2173 x1716)) Int (ite x3102 (x2755 x2173) (ite x3848 (x2755 x2173) (ite x1103 (x2755 x2173) (ite x89 (x2755 x2173) (ite x2414 (ite x1452 (x2755 x2173) (x1028 x2173)) (x2755 x2173)))))))
(define-fun x3071 ((x2173 x1716)) Int (ite (= x2173 x2654) 0 (x3472 x2173)))
(define-fun x728 ((x2173 Int)) Int (ite (= x2173 0) 1 (x1368 x2173)))
(define-fun x3814 ((x2173 Int)) Int (ite (= x2173 x264) 1 (x1266 x2173)))
(define-fun x2475 ((x2173 x1716)) Int (ite x3102 (x4032 x2173) (ite x3848 (x4032 x2173) (ite x1103 (x4032 x2173) (ite x89 (x4032 x2173) (ite x2414 (x4032 x2173) (ite x1009 (ite x2131 (x4032 x2173) (x208 x2173)) (x4032 x2173))))))))
(define-fun x694 ((x2173 x1716)) Int (ite (= x4345 x2173) 0 (x2475 x2173)))
(define-fun x445 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x1368 x2173)))
(define-fun x1684 ((x2173 Int)) Int (ite (= x2173 x264) 1 (x1266 x2173)))
(define-fun x3713 ((x2173 x1716)) Int (ite x3102 (x1374 x2173) (ite x3848 (x1374 x2173) (ite x1103 (x1374 x2173) (ite x89 (x1374 x2173) (ite x2414 (x1374 x2173) (ite x1009 (x1374 x2173) (ite x4240 (x1374 x2173) (x1486 x2173)))))))))
(define-fun x3225 ((x2173 x1716)) Int (ite (= x2819 x2173) 0 (x3713 x2173)))
(define-fun x1954 ((x2173 Int)) Int (ite (= x2173 0) 1 (x1368 x2173)))
(define-fun x3481 ((x2173 Int)) Int (ite (= x264 x2173) 1 (x1266 x2173)))
(define-fun x2910 ((x2173 Int)) Int (ite x2167 (ite x1819 (x1266 x2173) (x2452 x2173)) (ite x16 (ite x4249 (x1266 x2173) (x3574 x2173)) (ite x4375 (ite x3742 (x1266 x2173) (x4103 x2173)) (ite x3276 (ite x2604 (x1266 x2173) (x865 x2173)) (ite x3854 (ite x398 (x1266 x2173) (x3814 x2173)) (ite x711 (ite x2820 (x1266 x2173) (x1684 x2173)) (ite x1701 (x1266 x2173) (x3481 x2173)))))))))
(define-fun x370 ((x2173 Int)) Int (ite (= x2467 x2173) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x2910 x2173)))
(define-fun x2171 ((x2173 Int)) Int (ite (= x1761 x2173) x1181 (x370 x2173)))
(define-fun x3022 ((x2173 Int)) Int (ite (= x2173 x4115) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2171 x2173)))
(define-fun x2384 ((x2173 x1716)) Int (ite x2167 (ite x1819 (x2896 x2173) (x1441 x2173)) (x2896 x2173)))
(define-fun x919 ((x2173 x1716)) Int (ite (= x2173 x1489) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2384 x2173)))
(define-fun x194 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x557 x2173)))
(define-fun x981 ((x2173 Int)) Int (ite (= x2467 x2173) 1 (x3022 x2173)))
(define-fun x2675 ((x2173 x1716)) Int (ite x2167 (x1013 x2173) (ite x16 (ite x4249 (x1013 x2173) (x1198 x2173)) (x1013 x2173))))
(define-fun x4217 ((x2173 x1716)) Int (ite (= x2173 x4190) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x2675 x2173)))
(define-fun x1285 ((x2173 Int)) Int (ite (= x2173 0) 1 (x557 x2173)))
(define-fun x310 ((x2173 Int)) Int (ite (= x2173 x2467) 1 (x3022 x2173)))
(define-fun x1629 ((x2173 x1716)) Int (ite x2167 (x3147 x2173) (ite x16 (x3147 x2173) (ite x4375 (ite x3742 (x3147 x2173) (x2731 x2173)) (x3147 x2173)))))
(define-fun x682 ((x2173 x1716)) Int (ite (= x2255 x2173) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1629 x2173)))
(define-fun x1274 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x557 x2173)))
(define-fun x751 ((x2173 Int)) Int (ite (= x2467 x2173) 1 (x3022 x2173)))
(define-fun x151 ((x2173 x1716)) Int (ite x2167 (x251 x2173) (ite x16 (x251 x2173) (ite x4375 (x251 x2173) (ite x3276 (ite x2604 (x251 x2173) (x1042 x2173)) (x251 x2173))))))
(define-fun x955 ((x2173 x1716)) Int (ite (= x2945 x2173) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x151 x2173)))
(define-fun x3690 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x557 x2173)))
(define-fun x2185 ((x2173 Int)) Int (ite (= x2173 x2467) 1 (x3022 x2173)))
(define-fun x211 ((x2173 x1716)) Int (ite x2167 (x3472 x2173) (ite x16 (x3472 x2173) (ite x4375 (x3472 x2173) (ite x3276 (x3472 x2173) (ite x3854 (ite x398 (x3472 x2173) (x3071 x2173)) (x3472 x2173)))))))
(define-fun x1778 ((x2173 x1716)) Int (ite (= x3359 x2173) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x211 x2173)))
(define-fun x3603 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x557 x2173)))
(define-fun x1307 ((x2173 Int)) Int (ite (= x2467 x2173) 1 (x3022 x2173)))
(define-fun x4223 ((x2173 x1716)) Int (ite x2167 (x2475 x2173) (ite x16 (x2475 x2173) (ite x4375 (x2475 x2173) (ite x3276 (x2475 x2173) (ite x3854 (x2475 x2173) (ite x711 (ite x2820 (x2475 x2173) (x694 x2173)) (x2475 x2173))))))))
(define-fun x1720 ((x2173 x1716)) Int (ite (= x2995 x2173) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4223 x2173)))
(define-fun x4383 ((x2173 Int)) Int (ite (= x2173 0) 1 (x557 x2173)))
(define-fun x2283 ((x2173 Int)) Int (ite (= x2173 x2467) 1 (x3022 x2173)))
(define-fun x863 ((x2173 x1716)) Int (ite x2167 (x3713 x2173) (ite x16 (x3713 x2173) (ite x4375 (x3713 x2173) (ite x3276 (x3713 x2173) (ite x3854 (x3713 x2173) (ite x711 (x3713 x2173) (ite x1701 (x3713 x2173) (x3225 x2173)))))))))
(define-fun x1175 ((x2173 x1716)) Int (ite (= x2173 x26) 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x863 x2173)))
(define-fun x1149 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x557 x2173)))
(define-fun x641 ((x2173 Int)) Int (ite (= x2173 x2467) 1 (x3022 x2173)))
(define-fun x2589 ((x2173 Int)) Int (ite x505 (ite x3912 (x3022 x2173) (x981 x2173)) (ite x1753 (ite x1592 (x3022 x2173) (x310 x2173)) (ite x2718 (ite x2280 (x3022 x2173) (x751 x2173)) (ite x4302 (ite x199 (x3022 x2173) (x2185 x2173)) (ite x651 (ite x3902 (x3022 x2173) (x1307 x2173)) (ite x1146 (ite x600 (x3022 x2173) (x2283 x2173)) (ite x3673 (x3022 x2173) (x641 x2173)))))))))
(define-fun x2150 ((x2173 Int)) Int (ite (= x2173 x3322) 82641394424300342035733052706735002277943222088490025348945809093694544936960 (x2589 x2173)))
(define-fun x2003 ((x2173 Int)) Int (ite (= x1630 x2173) x3250 (x2150 x2173)))
(define-fun x2122 ((x2173 x1716)) Int (ite (= x2741 x2173) x1774 (x3951 x2173)))
(define-fun x3621 ((x2173 x1716)) Int (ite (= x2763 x2173) x1502 (x2122 x2173)))
(define-fun x101 ((x2173 x1716)) Int (ite x2197 (x3621 x2173) (ite x3156 (x2122 x2173) (ite x1549 (x2122 x2173) (ite x2380 (x2122 x2173) (ite x783 (x3621 x2173) (x2122 x2173)))))))
(define-fun x1661 ((x2173 x1716)) Int (ite (= x2173 x2608) x2046 (x3621 x2173)))
(define-fun x136 ((x2173 x1716)) Int (ite x4178 (ite x944 (x101 x2173) (x1661 x2173)) (x2122 x2173)))
(define-fun x837 ((x2173 x1716)) Int (ite x2232 (x136 x2173) (ite x3800 (x3951 x2173) (ite x444 (x3951 x2173) (ite x2147 (x3951 x2173) (ite x1076 (x3951 x2173) (ite x1740 (x3951 x2173) (ite x4025 (x3951 x2173) (x136 x2173)))))))))
(define-fun x2024 ((x2173 x1716)) Int (ite (= x2173 x4127) x2976 (x3951 x2173)))
(define-fun x1401 ((x2173 x1716)) Int (ite x3163 (x2024 x2173) (ite x2871 (x3951 x2173) (ite x2519 (x3951 x2173) (ite x465 (x3951 x2173) (ite x3414 (x2024 x2173) (x3951 x2173)))))))
(define-fun x2065 ((x2173 x1716)) Int (ite (= x2173 x3735) x1015 (x2024 x2173)))
(define-fun x1829 ((x2173 x1716)) Int (ite x4015 (ite x3144 (x1401 x2173) (x2065 x2173)) (x3951 x2173)))
(define-fun x116 ((x2173 x1716)) Int (ite x1905 (x1829 x2173) (ite x3275 (x3951 x2173) (ite x383 (x3951 x2173) (ite x1480 (x3951 x2173) (ite x47 (x3951 x2173) (ite x806 (x3951 x2173) (ite x91 (x3951 x2173) (x1829 x2173)))))))))
(define-fun x3873 ((x2173 x1716)) Int (ite (= x2173 x4097) x1822 (x3951 x2173)))
(define-fun x1431 ((x2173 x1716)) Int (ite (= x2173 x3460) x1842 (x3873 x2173)))
(define-fun x2069 ((x2173 x1716)) Int (ite x1040 (x1431 x2173) (ite x4118 (x3873 x2173) (ite x3053 (x3873 x2173) (ite x2234 (x3873 x2173) (ite x3175 (x1431 x2173) (x3873 x2173)))))))
(define-fun x817 ((x2173 x1716)) Int (ite (= x2173 x4040) x307 (x1431 x2173)))
(define-fun x2558 ((x2173 x1716)) Int (ite x670 (ite x66 (x2069 x2173) (x817 x2173)) (x3873 x2173)))
(define-fun x4028 ((x2173 x1716)) Int (ite x245 (x2558 x2173) (ite x1775 (x3951 x2173) (ite x870 (x3951 x2173) (ite x2914 (x3951 x2173) (ite x1461 (x3951 x2173) (ite x1335 (x3951 x2173) (ite x4256 (x3951 x2173) (x2558 x2173)))))))))
(define-fun x2739 ((x2173 x1716)) Int (ite (= x4085 x2173) x1510 (x3951 x2173)))
(define-fun x2367 ((x2173 x1716)) Int (ite x970 (x2739 x2173) (ite x3307 (x3951 x2173) (ite x4039 (x3951 x2173) (ite x1515 (x3951 x2173) (ite x2125 (x2739 x2173) (x3951 x2173)))))))
(define-fun x3884 ((x2173 x1716)) Int (ite (= x3581 x2173) x3749 (x2739 x2173)))
(define-fun x3613 ((x2173 x1716)) Int (ite x1430 (ite x3176 (x2367 x2173) (x3884 x2173)) (x3951 x2173)))
(define-fun x2738 ((x2173 x1716)) Int (ite x1185 (x3613 x2173) (ite x2761 (x3951 x2173) (ite x3612 (x3951 x2173) (ite x5 (x3951 x2173) (ite x1689 (x3951 x2173) (ite x3562 (x3951 x2173) (ite x3106 (x3951 x2173) (x3613 x2173)))))))))
(define-fun x4041 ((x2173 x1716)) Int (ite x1329 (ite x556 (x4028 x2173) (x2558 x2173)) (ite x696 (ite x952 (x2738 x2173) (x3613 x2173)) (x3951 x2173))))
(define-fun x3353 ((x2173 x1716)) Int (ite (= x2173 x586) x2973 (x4041 x2173)))
(define-fun x3409 ((x2173 x1716)) Int (ite x3886 (x3353 x2173) (ite x3019 (x4041 x2173) (ite x605 (x4041 x2173) (ite x1874 (x4041 x2173) (ite x1916 (x3353 x2173) (x4041 x2173)))))))
(define-fun x1964 ((x2173 x1716)) Int (ite (= x589 x2173) x1536 (x3353 x2173)))
(define-fun x927 ((x2173 x1716)) Int (ite x561 (ite x1578 (x3409 x2173) (x1964 x2173)) (x4041 x2173)))
(define-fun x253 ((x2173 x1716)) Int (ite x148 (x3951 x2173) (ite x4281 (x3951 x2173) (ite x629 (x927 x2173) (ite x1540 (x927 x2173) (ite x2752 (x927 x2173) (ite x4398 (x927 x2173) (ite x2446 (x4041 x2173) (x3951 x2173)))))))))
(define-fun x1050 ((x2173 x1716)) Int (ite x2016 (ite x1339 (x837 x2173) (x136 x2173)) (ite x1853 (ite x3938 (x116 x2173) (x1829 x2173)) (ite x1397 (x253 x2173) (x927 x2173)))))
(define-fun x4070 ((x2173 x1716)) Int (ite (= x2173 x2840) x984 (x1050 x2173)))
(define-fun x1110 ((x2173 Int)) Int (ite (= 128 x2173) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1681 x2173)))
(define-fun x787 ((x2173 Int)) Int (ite (= x2173 132) x275 (x1110 x2173)))
(define-fun x2287 ((x2173 Int)) Int (ite (= x2173 164) x2882 (x787 x2173)))
(define-fun x2449 ((x2173 Int)) Int (ite (= 196 x2173) x3174 (x2287 x2173)))
(define-fun x623 ((x2173 x1716)) Int (ite (= x2173 x498) x1005 (x4070 x2173)))
(define-fun x385 ((x2173 x1716)) Int (ite x505 (ite x3912 (x2384 x2173) (x919 x2173)) (x2384 x2173)))
(define-fun x620 ((x2173 Int)) Int (ite (= x2173 0) 1 (x773 x2173)))
(define-fun x3228 ((x2173 x1716)) Int (ite (= x2173 x1692) x2957 (x1846 x2173)))
(define-fun x918 ((x2173 x1716)) Int (ite x71 (x3228 x2173) (ite x1086 (x1846 x2173) (ite x2468 (x1846 x2173) (ite x1308 (x1846 x2173) (ite x2087 (x3228 x2173) (x1846 x2173)))))))
(define-fun x2152 ((x2173 x1716)) Int (ite (= x2968 x2173) x2508 (x3228 x2173)))
(define-fun x4384 ((x2173 x1716)) Int (ite x4178 (x1846 x2173) (ite x1108 (ite x2322 (x918 x2173) (x2152 x2173)) (x1846 x2173))))
(define-fun x988 ((x2173 x1716)) Int (ite x2232 (x4384 x2173) (ite x3800 (x1846 x2173) (ite x444 (x1846 x2173) (ite x2147 (x1846 x2173) (ite x1076 (x1846 x2173) (ite x1740 (x1846 x2173) (ite x4025 (x1846 x2173) (x4384 x2173)))))))))
(define-fun x34 ((x2173 x1716)) Int (ite (= x3473 x2173) x1671 (x1846 x2173)))
(define-fun x604 ((x2173 x1716)) Int (ite (= x140 x2173) x4151 (x34 x2173)))
(define-fun x3761 ((x2173 x1716)) Int (ite x519 (x604 x2173) (ite x1917 (x34 x2173) (ite x2239 (x34 x2173) (ite x591 (x34 x2173) (ite x234 (x604 x2173) (x34 x2173)))))))
(define-fun x3130 ((x2173 x1716)) Int (ite (= x2930 x2173) x2164 (x604 x2173)))
(define-fun x2314 ((x2173 x1716)) Int (ite x4015 (x34 x2173) (ite x2444 (ite x144 (x3761 x2173) (x3130 x2173)) (x34 x2173))))
(define-fun x1067 ((x2173 x1716)) Int (ite x1905 (x2314 x2173) (ite x3275 (x1846 x2173) (ite x383 (x1846 x2173) (ite x1480 (x1846 x2173) (ite x47 (x1846 x2173) (ite x806 (x1846 x2173) (ite x91 (x1846 x2173) (x2314 x2173)))))))))
(define-fun x1195 ((x2173 x1716)) Int (ite (= x2173 x2117) x1943 (x1846 x2173)))
(define-fun x2898 ((x2173 x1716)) Int (ite x1585 (x1195 x2173) (ite x2061 (x1846 x2173) (ite x2257 (x1846 x2173) (ite x4251 (x1846 x2173) (ite x1425 (x1195 x2173) (x1846 x2173)))))))
(define-fun x3273 ((x2173 x1716)) Int (ite (= x4128 x2173) x2685 (x1195 x2173)))
(define-fun x4158 ((x2173 x1716)) Int (ite x670 (x1846 x2173) (ite x697 (ite x654 (x2898 x2173) (x3273 x2173)) (x1846 x2173))))
(define-fun x36 ((x2173 x1716)) Int (ite x245 (x4158 x2173) (ite x1775 (x1846 x2173) (ite x870 (x1846 x2173) (ite x2914 (x1846 x2173) (ite x1461 (x1846 x2173) (ite x1335 (x1846 x2173) (ite x4256 (x1846 x2173) (x4158 x2173)))))))))
(define-fun x608 ((x2173 x1716)) Int (ite (= x756 x2173) x3436 (x1846 x2173)))
(define-fun x2582 ((x2173 x1716)) Int (ite (= x2173 x3959) x878 (x608 x2173)))
(define-fun x3908 ((x2173 x1716)) Int (ite x4156 (x2582 x2173) (ite x2677 (x608 x2173) (ite x1208 (x608 x2173) (ite x372 (x608 x2173) (ite x1191 (x2582 x2173) (x608 x2173)))))))
(define-fun x4389 ((x2173 x1716)) Int (ite (= x2173 x277) x42 (x2582 x2173)))
(define-fun x1159 ((x2173 x1716)) Int (ite x1430 (x608 x2173) (ite x2727 (ite x1554 (x3908 x2173) (x4389 x2173)) (x608 x2173))))
(define-fun x3148 ((x2173 x1716)) Int (ite x1185 (x1159 x2173) (ite x2761 (x1846 x2173) (ite x3612 (x1846 x2173) (ite x5 (x1846 x2173) (ite x1689 (x1846 x2173) (ite x3562 (x1846 x2173) (ite x3106 (x1846 x2173) (x1159 x2173)))))))))
(define-fun x1457 ((x2173 x1716)) Int (ite x1329 (ite x556 (x36 x2173) (x4158 x2173)) (ite x696 (ite x952 (x3148 x2173) (x1159 x2173)) (x1846 x2173))))
(define-fun x1967 ((x2173 x1716)) Int (ite (= x2173 x801) x3443 (x1457 x2173)))
(define-fun x2769 ((x2173 x1716)) Int (ite x2242 (x1967 x2173) (ite x2345 (x1457 x2173) (ite x2538 (x1457 x2173) (ite x909 (x1457 x2173) (ite x1413 (x1967 x2173) (x1457 x2173)))))))
(define-fun x4349 ((x2173 x1716)) Int (ite (= x2173 x239) x536 (x1967 x2173)))
(define-fun x2170 ((x2173 x1716)) Int (ite x561 (x1457 x2173) (ite x388 (ite x2289 (x2769 x2173) (x4349 x2173)) (x1457 x2173))))
(define-fun x3293 ((x2173 x1716)) Int (ite x148 (x1846 x2173) (ite x4281 (x1846 x2173) (ite x629 (x2170 x2173) (ite x1540 (x2170 x2173) (ite x2752 (x2170 x2173) (ite x4398 (x2170 x2173) (ite x2446 (x1457 x2173) (x1846 x2173)))))))))
(define-fun x958 ((x2173 x1716)) Int (ite x2016 (ite x1339 (x988 x2173) (x4384 x2173)) (ite x1853 (ite x3938 (x1067 x2173) (x2314 x2173)) (ite x1397 (x3293 x2173) (x2170 x2173)))))
(define-fun x222 ((x2173 x1716)) Int (ite (= x2173 x2140) x3368 (x958 x2173)))
(define-fun x1449 ((x2173 x1716)) Int (ite (= x2173 x963) x2115 (x222 x2173)))
(define-fun x3864 ((x2173 x1716)) Int (ite x505 (x2675 x2173) (ite x1753 (ite x1592 (x2675 x2173) (x4217 x2173)) (x2675 x2173))))
(define-fun x1167 ((x2173 Int)) Int (ite (= x2173 0) 1 (x773 x2173)))
(define-fun x3020 ((x2173 x1716)) Int (ite (= x2173 x126) x497 (x1648 x2173)))
(define-fun x4188 ((x2173 x1716)) Int (ite x886 (x3020 x2173) (ite x1674 (x1648 x2173) (ite x4100 (x1648 x2173) (ite x2890 (x1648 x2173) (ite x4307 (x3020 x2173) (x1648 x2173)))))))
(define-fun x247 ((x2173 x1716)) Int (ite (= x2173 x1396) x1739 (x3020 x2173)))
(define-fun x3783 ((x2173 x1716)) Int (ite x4178 (x1648 x2173) (ite x1108 (x1648 x2173) (ite x3915 (ite x315 (x4188 x2173) (x247 x2173)) (x1648 x2173)))))
(define-fun x3723 ((x2173 x1716)) Int (ite x2232 (x3783 x2173) (ite x3800 (x1648 x2173) (ite x444 (x1648 x2173) (ite x2147 (x1648 x2173) (ite x1076 (x1648 x2173) (ite x1740 (x1648 x2173) (ite x4025 (x1648 x2173) (x3783 x2173)))))))))
(define-fun x4154 ((x2173 x1716)) Int (ite (= x2173 x1870) x1544 (x1648 x2173)))
(define-fun x3946 ((x2173 x1716)) Int (ite x3808 (x4154 x2173) (ite x1865 (x1648 x2173) (ite x3050 (x1648 x2173) (ite x1676 (x1648 x2173) (ite x3358 (x4154 x2173) (x1648 x2173)))))))
(define-fun x3875 ((x2173 x1716)) Int (ite (= x2173 x825) x3968 (x4154 x2173)))
(define-fun x2096 ((x2173 x1716)) Int (ite x4015 (x1648 x2173) (ite x2444 (x1648 x2173) (ite x3118 (ite x4400 (x3946 x2173) (x3875 x2173)) (x1648 x2173)))))
(define-fun x3401 ((x2173 x1716)) Int (ite x1905 (x2096 x2173) (ite x3275 (x1648 x2173) (ite x383 (x1648 x2173) (ite x1480 (x1648 x2173) (ite x47 (x1648 x2173) (ite x806 (x1648 x2173) (ite x91 (x1648 x2173) (x2096 x2173)))))))))
(define-fun x1975 ((x2173 x1716)) Int (ite (= x2173 x2937) x434 (x1648 x2173)))
(define-fun x894 ((x2173 x1716)) Int (ite x3846 (x1975 x2173) (ite x1156 (x1648 x2173) (ite x237 (x1648 x2173) (ite x2860 (x1648 x2173) (ite x2231 (x1975 x2173) (x1648 x2173)))))))
(define-fun x740 ((x2173 x1716)) Int (ite (= x1000 x2173) x1270 (x1975 x2173)))
(define-fun x2202 ((x2173 x1716)) Int (ite x670 (x1648 x2173) (ite x697 (x1648 x2173) (ite x2074 (ite x2597 (x894 x2173) (x740 x2173)) (x1648 x2173)))))
(define-fun x2877 ((x2173 x1716)) Int (ite x245 (x2202 x2173) (ite x1775 (x1648 x2173) (ite x870 (x1648 x2173) (ite x2914 (x1648 x2173) (ite x1461 (x1648 x2173) (ite x1335 (x1648 x2173) (ite x4256 (x1648 x2173) (x2202 x2173)))))))))
(define-fun x781 ((x2173 x1716)) Int (ite (= x2173 x337) x2406 (x1648 x2173)))
(define-fun x3335 ((x2173 x1716)) Int (ite x1527 (x781 x2173) (ite x391 (x1648 x2173) (ite x1044 (x1648 x2173) (ite x2789 (x1648 x2173) (ite x1406 (x781 x2173) (x1648 x2173)))))))
(define-fun x990 ((x2173 x1716)) Int (ite (= x2173 x1254) x2282 (x781 x2173)))
(define-fun x2415 ((x2173 x1716)) Int (ite x1430 (x1648 x2173) (ite x2727 (x1648 x2173) (ite x3089 (ite x4051 (x3335 x2173) (x990 x2173)) (x1648 x2173)))))
(define-fun x821 ((x2173 x1716)) Int (ite x1185 (x2415 x2173) (ite x2761 (x1648 x2173) (ite x3612 (x1648 x2173) (ite x5 (x1648 x2173) (ite x1689 (x1648 x2173) (ite x3562 (x1648 x2173) (ite x3106 (x1648 x2173) (x2415 x2173)))))))))
(define-fun x2368 ((x2173 x1716)) Int (ite x1329 (ite x556 (x2877 x2173) (x2202 x2173)) (ite x696 (ite x952 (x821 x2173) (x2415 x2173)) (x1648 x2173))))
(define-fun x3232 ((x2173 x1716)) Int (ite (= x2173 x3741) x2135 (x2368 x2173)))
(define-fun x3482 ((x2173 x1716)) Int (ite x3830 (x3232 x2173) (ite x2947 (x2368 x2173) (ite x935 (x2368 x2173) (ite x3385 (x2368 x2173) (ite x1638 (x3232 x2173) (x2368 x2173)))))))
(define-fun x2335 ((x2173 x1716)) Int (ite (= x2173 x3377) x928 (x3232 x2173)))
(define-fun x3700 ((x2173 x1716)) Int (ite x561 (x2368 x2173) (ite x388 (x2368 x2173) (ite x1075 (ite x596 (x3482 x2173) (x2335 x2173)) (x2368 x2173)))))
(define-fun x4105 ((x2173 x1716)) Int (ite x148 (x1648 x2173) (ite x4281 (x1648 x2173) (ite x629 (x3700 x2173) (ite x1540 (x3700 x2173) (ite x2752 (x3700 x2173) (ite x4398 (x3700 x2173) (ite x2446 (x2368 x2173) (x1648 x2173)))))))))
(define-fun x215 ((x2173 x1716)) Int (ite x2016 (ite x1339 (x3723 x2173) (x3783 x2173)) (ite x1853 (ite x3938 (x3401 x2173) (x2096 x2173)) (ite x1397 (x4105 x2173) (x3700 x2173)))))
(define-fun x1727 ((x2173 x1716)) Int (ite (= x2173 x1814) x1463 (x215 x2173)))
(define-fun x2326 ((x2173 x1716)) Int (ite x505 (x1629 x2173) (ite x1753 (x1629 x2173) (ite x2718 (ite x2280 (x1629 x2173) (x682 x2173)) (x1629 x2173)))))
(define-fun x1357 ((x2173 Int)) Int (ite (= x2173 0) 1 (x773 x2173)))
(define-fun x2464 ((x2173 x1716)) Int (ite (= x3333 x2173) x355 (x150 x2173)))
(define-fun x2050 ((x2173 x1716)) Int (ite x1936 (x2464 x2173) (ite x2542 (x150 x2173) (ite x1639 (x150 x2173) (ite x1644 (x150 x2173) (ite x3891 (x2464 x2173) (x150 x2173)))))))
(define-fun x411 ((x2173 x1716)) Int (ite (= x3629 x2173) x76 (x2464 x2173)))
(define-fun x525 ((x2173 x1716)) Int (ite x4178 (x150 x2173) (ite x1108 (x150 x2173) (ite x3915 (x150 x2173) (ite x3685 (ite x3556 (x2050 x2173) (x411 x2173)) (x150 x2173))))))
(define-fun x2674 ((x2173 x1716)) Int (ite x2232 (x525 x2173) (ite x3800 (x150 x2173) (ite x444 (x150 x2173) (ite x2147 (x150 x2173) (ite x1076 (x150 x2173) (ite x1740 (x150 x2173) (ite x4025 (x150 x2173) (x525 x2173)))))))))
(define-fun x1458 ((x2173 x1716)) Int (ite (= x902 x2173) x1995 (x150 x2173)))
(define-fun x3458 ((x2173 x1716)) Int (ite x291 (x1458 x2173) (ite x3383 (x150 x2173) (ite x3002 (x150 x2173) (ite x1792 (x150 x2173) (ite x2456 (x1458 x2173) (x150 x2173)))))))
(define-fun x2551 ((x2173 x1716)) Int (ite (= x828 x2173) x2352 (x1458 x2173)))
(define-fun x3708 ((x2173 x1716)) Int (ite x4015 (x150 x2173) (ite x2444 (x150 x2173) (ite x3118 (x150 x2173) (ite x135 (ite x959 (x3458 x2173) (x2551 x2173)) (x150 x2173))))))
(define-fun x4013 ((x2173 x1716)) Int (ite x1905 (x3708 x2173) (ite x3275 (x150 x2173) (ite x383 (x150 x2173) (ite x1480 (x150 x2173) (ite x47 (x150 x2173) (ite x806 (x150 x2173) (ite x91 (x150 x2173) (x3708 x2173)))))))))
(define-fun x975 ((x2173 x1716)) Int (ite (= x550 x2173) x3798 (x150 x2173)))
(define-fun x983 ((x2173 x1716)) Int (ite x4235 (x975 x2173) (ite x4111 (x150 x2173) (ite x285 (x150 x2173) (ite x1442 (x150 x2173) (ite x2631 (x975 x2173) (x150 x2173)))))))
(define-fun x3133 ((x2173 x1716)) Int (ite (= x2206 x2173) x4233 (x975 x2173)))
(define-fun x2399 ((x2173 x1716)) Int (ite x670 (x150 x2173) (ite x697 (x150 x2173) (ite x2074 (x150 x2173) (ite x1237 (ite x3540 (x983 x2173) (x3133 x2173)) (x150 x2173))))))
(define-fun x2978 ((x2173 x1716)) Int (ite x245 (x2399 x2173) (ite x1775 (x150 x2173) (ite x870 (x150 x2173) (ite x2914 (x150 x2173) (ite x1461 (x150 x2173) (ite x1335 (x150 x2173) (ite x4256 (x150 x2173) (x2399 x2173)))))))))
(define-fun x2611 ((x2173 x1716)) Int (ite (= x2173 x3852) x2831 (x150 x2173)))
(define-fun x2133 ((x2173 x1716)) Int (ite x1828 (x2611 x2173) (ite x619 (x150 x2173) (ite x824 (x150 x2173) (ite x892 (x150 x2173) (ite x3226 (x2611 x2173) (x150 x2173)))))))
(define-fun x905 ((x2173 x1716)) Int (ite (= x471 x2173) x3317 (x2611 x2173)))
(define-fun x867 ((x2173 x1716)) Int (ite x1430 (x150 x2173) (ite x2727 (x150 x2173) (ite x3089 (x150 x2173) (ite x3689 (ite x3410 (x2133 x2173) (x905 x2173)) (x150 x2173))))))
(define-fun x1627 ((x2173 x1716)) Int (ite x1185 (x867 x2173) (ite x2761 (x150 x2173) (ite x3612 (x150 x2173) (ite x5 (x150 x2173) (ite x1689 (x150 x2173) (ite x3562 (x150 x2173) (ite x3106 (x150 x2173) (x867 x2173)))))))))
(define-fun x2109 ((x2173 x1716)) Int (ite x1329 (ite x556 (x2978 x2173) (x2399 x2173)) (ite x696 (ite x952 (x1627 x2173) (x867 x2173)) (x150 x2173))))
(define-fun x1174 ((x2173 x1716)) Int (ite (= x2173 x3345) x1443 (x2109 x2173)))
(define-fun x2784 ((x2173 x1716)) Int (ite x714 (x1174 x2173) (ite x1591 (x2109 x2173) (ite x1440 (x2109 x2173) (ite x2403 (x2109 x2173) (ite x526 (x1174 x2173) (x2109 x2173)))))))
(define-fun x4374 ((x2173 x1716)) Int (ite (= x3044 x2173) x2383 (x1174 x2173)))
(define-fun x2134 ((x2173 x1716)) Int (ite x561 (x2109 x2173) (ite x388 (x2109 x2173) (ite x1075 (x2109 x2173) (ite x3055 (ite x564 (x2784 x2173) (x4374 x2173)) (x2109 x2173))))))
(define-fun x1551 ((x2173 x1716)) Int (ite x148 (x150 x2173) (ite x4281 (x150 x2173) (ite x629 (x2134 x2173) (ite x1540 (x2134 x2173) (ite x2752 (x2134 x2173) (ite x4398 (x2134 x2173) (ite x2446 (x2109 x2173) (x150 x2173)))))))))
(define-fun x1983 ((x2173 x1716)) Int (ite x2016 (ite x1339 (x2674 x2173) (x525 x2173)) (ite x1853 (ite x3938 (x4013 x2173) (x3708 x2173)) (ite x1397 (x1551 x2173) (x2134 x2173)))))
(define-fun x2906 ((x2173 x1716)) Int (ite (= x3925 x2173) x1784 (x1983 x2173)))
(define-fun x734 ((x2173 x1716)) Int (ite (= x3752 x2173) x3294 (x2906 x2173)))
(define-fun x308 ((x2173 x1716)) Int (ite x505 (x151 x2173) (ite x1753 (x151 x2173) (ite x2718 (x151 x2173) (ite x4302 (ite x199 (x151 x2173) (x955 x2173)) (x151 x2173))))))
(define-fun x1787 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x773 x2173)))
(define-fun x2055 ((x2173 x1716)) Int (ite (= x1417 x2173) x595 (x1035 x2173)))
(define-fun x1223 ((x2173 x1716)) Int (ite x3258 (x2055 x2173) (ite x1173 (x1035 x2173) (ite x4272 (x1035 x2173) (ite x2484 (x1035 x2173) (ite x2151 (x2055 x2173) (x1035 x2173)))))))
(define-fun x3984 ((x2173 x1716)) Int (ite (= x2173 x1474) x4357 (x2055 x2173)))
(define-fun x833 ((x2173 x1716)) Int (ite x4178 (x1035 x2173) (ite x1108 (x1035 x2173) (ite x3915 (x1035 x2173) (ite x3685 (x1035 x2173) (ite x4286 (ite x2818 (x1223 x2173) (x3984 x2173)) (x1035 x2173)))))))
(define-fun x2521 ((x2173 x1716)) Int (ite x2232 (x833 x2173) (ite x3800 (x1035 x2173) (ite x444 (x1035 x2173) (ite x2147 (x1035 x2173) (ite x1076 (x1035 x2173) (ite x1740 (x1035 x2173) (ite x4025 (x1035 x2173) (x833 x2173)))))))))
(define-fun x658 ((x2173 x1716)) Int (ite (= x2173 x643) x2390 (x1035 x2173)))
(define-fun x3325 ((x2173 x1716)) Int (ite x2991 (x658 x2173) (ite x542 (x1035 x2173) (ite x3255 (x1035 x2173) (ite x2127 (x1035 x2173) (ite x1176 (x658 x2173) (x1035 x2173)))))))
(define-fun x1566 ((x2173 x1716)) Int (ite (= x2173 x4362) x4047 (x658 x2173)))
(define-fun x2208 ((x2173 x1716)) Int (ite x4015 (x1035 x2173) (ite x2444 (x1035 x2173) (ite x3118 (x1035 x2173) (ite x135 (x1035 x2173) (ite x3945 (ite x1003 (x3325 x2173) (x1566 x2173)) (x1035 x2173)))))))
(define-fun x1205 ((x2173 x1716)) Int (ite x1905 (x2208 x2173) (ite x3275 (x1035 x2173) (ite x383 (x1035 x2173) (ite x1480 (x1035 x2173) (ite x47 (x1035 x2173) (ite x806 (x1035 x2173) (ite x91 (x1035 x2173) (x2208 x2173)))))))))
(define-fun x2740 ((x2173 x1716)) Int (ite (= x1545 x2173) x206 (x1035 x2173)))
(define-fun x520 ((x2173 x1716)) Int (ite x3989 (x2740 x2173) (ite x671 (x1035 x2173) (ite x3816 (x1035 x2173) (ite x2841 (x1035 x2173) (ite x4336 (x2740 x2173) (x1035 x2173)))))))
(define-fun x2499 ((x2173 x1716)) Int (ite (= x2742 x2173) x1154 (x2740 x2173)))
(define-fun x771 ((x2173 x1716)) Int (ite x670 (x1035 x2173) (ite x697 (x1035 x2173) (ite x2074 (x1035 x2173) (ite x1237 (x1035 x2173) (ite x2063 (ite x2570 (x520 x2173) (x2499 x2173)) (x1035 x2173)))))))
(define-fun x1153 ((x2173 x1716)) Int (ite x245 (x771 x2173) (ite x1775 (x1035 x2173) (ite x870 (x1035 x2173) (ite x2914 (x1035 x2173) (ite x1461 (x1035 x2173) (ite x1335 (x1035 x2173) (ite x4256 (x1035 x2173) (x771 x2173)))))))))
(define-fun x3544 ((x2173 x1716)) Int (ite (= x2173 x2695) x491 (x1035 x2173)))
(define-fun x2176 ((x2173 x1716)) Int (ite x1022 (x3544 x2173) (ite x309 (x1035 x2173) (ite x677 (x1035 x2173) (ite x3079 (x1035 x2173) (ite x1961 (x3544 x2173) (x1035 x2173)))))))
(define-fun x645 ((x2173 x1716)) Int (ite (= x2515 x2173) x1453 (x3544 x2173)))
(define-fun x4296 ((x2173 x1716)) Int (ite x1430 (x1035 x2173) (ite x2727 (x1035 x2173) (ite x3089 (x1035 x2173) (ite x3689 (x1035 x2173) (ite x4171 (ite x3103 (x2176 x2173) (x645 x2173)) (x1035 x2173)))))))
(define-fun x1400 ((x2173 x1716)) Int (ite x1185 (x4296 x2173) (ite x2761 (x1035 x2173) (ite x3612 (x1035 x2173) (ite x5 (x1035 x2173) (ite x1689 (x1035 x2173) (ite x3562 (x1035 x2173) (ite x3106 (x1035 x2173) (x4296 x2173)))))))))
(define-fun x407 ((x2173 x1716)) Int (ite x1329 (ite x556 (x1153 x2173) (x771 x2173)) (ite x696 (ite x952 (x1400 x2173) (x4296 x2173)) (x1035 x2173))))
(define-fun x1737 ((x2173 x1716)) Int (ite (= x3167 x2173) x2477 (x407 x2173)))
(define-fun x748 ((x2173 x1716)) Int (ite x1360 (x1737 x2173) (ite x3712 (x407 x2173) (ite x386 (x407 x2173) (ite x789 (x407 x2173) (ite x1025 (x1737 x2173) (x407 x2173)))))))
(define-fun x2635 ((x2173 x1716)) Int (ite (= x2173 x1490) x1928 (x1737 x2173)))
(define-fun x3196 ((x2173 x1716)) Int (ite x561 (x407 x2173) (ite x388 (x407 x2173) (ite x1075 (x407 x2173) (ite x3055 (x407 x2173) (ite x4294 (ite x240 (x748 x2173) (x2635 x2173)) (x407 x2173)))))))
(define-fun x2447 ((x2173 x1716)) Int (ite x148 (x1035 x2173) (ite x4281 (x1035 x2173) (ite x629 (x3196 x2173) (ite x1540 (x3196 x2173) (ite x2752 (x3196 x2173) (ite x4398 (x3196 x2173) (ite x2446 (x407 x2173) (x1035 x2173)))))))))
(define-fun x3451 ((x2173 x1716)) Int (ite x2016 (ite x1339 (x2521 x2173) (x833 x2173)) (ite x1853 (ite x3938 (x1205 x2173) (x2208 x2173)) (ite x1397 (x2447 x2173) (x3196 x2173)))))
(define-fun x4262 ((x2173 x1716)) Int (ite (= x2729 x2173) x2162 (x3451 x2173)))
(define-fun x464 ((x2173 x1716)) Int (ite (= x2173 x418) x4002 (x4262 x2173)))
(define-fun x260 ((x2173 x1716)) Int (ite x505 (x211 x2173) (ite x1753 (x211 x2173) (ite x2718 (x211 x2173) (ite x4302 (x211 x2173) (ite x651 (ite x3902 (x211 x2173) (x1778 x2173)) (x211 x2173)))))))
(define-fun x1468 ((x2173 Int)) Int (ite (= x2173 0) 1 (x773 x2173)))
(define-fun x2829 ((x2173 x1716)) Int (ite (= x3843 x2173) x2863 (x466 x2173)))
(define-fun x1562 ((x2173 x1716)) Int (ite x2137 (x2829 x2173) (ite x1574 (x466 x2173) (ite x1646 (x466 x2173) (ite x3209 (x466 x2173) (ite x762 (x2829 x2173) (x466 x2173)))))))
(define-fun x4149 ((x2173 x1716)) Int (ite (= x770 x2173) x52 (x2829 x2173)))
(define-fun x305 ((x2173 x1716)) Int (ite x4178 (x466 x2173) (ite x1108 (x466 x2173) (ite x3915 (x466 x2173) (ite x3685 (x466 x2173) (ite x4286 (x466 x2173) (ite x1381 (ite x182 (x1562 x2173) (x4149 x2173)) (x466 x2173))))))))
(define-fun x4282 ((x2173 x1716)) Int (ite x2232 (x305 x2173) (ite x3800 (x466 x2173) (ite x444 (x466 x2173) (ite x2147 (x466 x2173) (ite x1076 (x466 x2173) (ite x1740 (x466 x2173) (ite x4025 (x466 x2173) (x305 x2173)))))))))
(define-fun x3619 ((x2173 x1716)) Int (ite (= x3806 x2173) x2142 (x466 x2173)))
(define-fun x4219 ((x2173 x1716)) Int (ite x3813 (x3619 x2173) (ite x3252 (x466 x2173) (ite x1127 (x466 x2173) (ite x4241 (x466 x2173) (ite x257 (x3619 x2173) (x466 x2173)))))))
(define-fun x613 ((x2173 x1716)) Int (ite (= x2942 x2173) x3862 (x3619 x2173)))
(define-fun x3930 ((x2173 x1716)) Int (ite x4015 (x466 x2173) (ite x2444 (x466 x2173) (ite x3118 (x466 x2173) (ite x135 (x466 x2173) (ite x3945 (x466 x2173) (ite x3657 (ite x4202 (x4219 x2173) (x613 x2173)) (x466 x2173))))))))
(define-fun x1762 ((x2173 x1716)) Int (ite x1905 (x3930 x2173) (ite x3275 (x466 x2173) (ite x383 (x466 x2173) (ite x1480 (x466 x2173) (ite x47 (x466 x2173) (ite x806 (x466 x2173) (ite x91 (x466 x2173) (x3930 x2173)))))))))
(define-fun x317 ((x2173 x1716)) Int (ite (= x3105 x2173) x131 (x466 x2173)))
(define-fun x1598 ((x2173 x1716)) Int (ite x661 (x317 x2173) (ite x872 (x466 x2173) (ite x1850 (x466 x2173) (ite x3762 (x466 x2173) (ite x2049 (x317 x2173) (x466 x2173)))))))
(define-fun x684 ((x2173 x1716)) Int (ite (= x1272 x2173) x3051 (x317 x2173)))
(define-fun x1521 ((x2173 x1716)) Int (ite x670 (x466 x2173) (ite x697 (x466 x2173) (ite x2074 (x466 x2173) (ite x1237 (x466 x2173) (ite x2063 (x466 x2173) (ite x1323 (ite x3466 (x1598 x2173) (x684 x2173)) (x466 x2173))))))))
(define-fun x2653 ((x2173 x1716)) Int (ite x245 (x1521 x2173) (ite x1775 (x466 x2173) (ite x870 (x466 x2173) (ite x2914 (x466 x2173) (ite x1461 (x466 x2173) (ite x1335 (x466 x2173) (ite x4256 (x466 x2173) (x1521 x2173)))))))))
(define-fun x3774 ((x2173 x1716)) Int (ite (= x2173 x426) x4371 (x466 x2173)))
(define-fun x3074 ((x2173 x1716)) Int (ite x3515 (x3774 x2173) (ite x2278 (x466 x2173) (ite x2771 (x466 x2173) (ite x3111 (x466 x2173) (ite x2437 (x3774 x2173) (x466 x2173)))))))
(define-fun x2296 ((x2173 x1716)) Int (ite (= x2173 x1944) x4303 (x3774 x2173)))
(define-fun x3018 ((x2173 x1716)) Int (ite x1430 (x466 x2173) (ite x2727 (x466 x2173) (ite x3089 (x466 x2173) (ite x3689 (x466 x2173) (ite x4171 (x466 x2173) (ite x2810 (ite x850 (x3074 x2173) (x2296 x2173)) (x466 x2173))))))))
(define-fun x3348 ((x2173 x1716)) Int (ite x1185 (x3018 x2173) (ite x2761 (x466 x2173) (ite x3612 (x466 x2173) (ite x5 (x466 x2173) (ite x1689 (x466 x2173) (ite x3562 (x466 x2173) (ite x3106 (x466 x2173) (x3018 x2173)))))))))
(define-fun x1696 ((x2173 x1716)) Int (ite x1329 (ite x556 (x2653 x2173) (x1521 x2173)) (ite x696 (ite x952 (x3348 x2173) (x3018 x2173)) (x466 x2173))))
(define-fun x733 ((x2173 x1716)) Int (ite (= x2959 x2173) x290 (x1696 x2173)))
(define-fun x638 ((x2173 x1716)) Int (ite x3313 (x733 x2173) (ite x2689 (x1696 x2173) (ite x363 (x1696 x2173) (ite x187 (x1696 x2173) (ite x2223 (x733 x2173) (x1696 x2173)))))))
(define-fun x1132 ((x2173 x1716)) Int (ite (= x2382 x2173) x2168 (x733 x2173)))
(define-fun x2547 ((x2173 x1716)) Int (ite x561 (x1696 x2173) (ite x388 (x1696 x2173) (ite x1075 (x1696 x2173) (ite x3055 (x1696 x2173) (ite x4294 (x1696 x2173) (ite x1128 (ite x4339 (x638 x2173) (x1132 x2173)) (x1696 x2173))))))))
(define-fun x616 ((x2173 x1716)) Int (ite x148 (x466 x2173) (ite x4281 (x466 x2173) (ite x629 (x2547 x2173) (ite x1540 (x2547 x2173) (ite x2752 (x2547 x2173) (ite x4398 (x2547 x2173) (ite x2446 (x1696 x2173) (x466 x2173)))))))))
(define-fun x2916 ((x2173 x1716)) Int (ite x2016 (ite x1339 (x4282 x2173) (x305 x2173)) (ite x1853 (ite x3938 (x1762 x2173) (x3930 x2173)) (ite x1397 (x616 x2173) (x2547 x2173)))))
(define-fun x1907 ((x2173 x1716)) Int (ite (= x2173 x4258) x404 (x2916 x2173)))
(define-fun x710 ((x2173 x1716)) Int (ite x505 (x4223 x2173) (ite x1753 (x4223 x2173) (ite x2718 (x4223 x2173) (ite x4302 (x4223 x2173) (ite x651 (x4223 x2173) (ite x1146 (ite x600 (x4223 x2173) (x1720 x2173)) (x4223 x2173))))))))
(define-fun x3419 ((x2173 Int)) Int (ite (= x2173 0) 1 (x773 x2173)))
(define-fun x754 ((x2173 x1716)) Int (ite (= x2173 x852) x3949 (x2317 x2173)))
(define-fun x1909 ((x2173 x1716)) Int (ite x3334 (x754 x2173) (ite x2336 (x2317 x2173) (ite x2098 (x2317 x2173) (ite x213 (x2317 x2173) (ite x2647 (x754 x2173) (x2317 x2173)))))))
(define-fun x2596 ((x2173 x1716)) Int (ite (= x2019 x2173) x4393 (x754 x2173)))
(define-fun x4095 ((x2173 x1716)) Int (ite x4178 (x2317 x2173) (ite x1108 (x2317 x2173) (ite x3915 (x2317 x2173) (ite x3685 (x2317 x2173) (ite x4286 (x2317 x2173) (ite x1381 (x2317 x2173) (ite x3681 (x1909 x2173) (x2596 x2173)))))))))
(define-fun x2846 ((x2173 x1716)) Int (ite x2232 (x4095 x2173) (ite x3800 (x2317 x2173) (ite x444 (x2317 x2173) (ite x2147 (x2317 x2173) (ite x1076 (x2317 x2173) (ite x1740 (x2317 x2173) (ite x4025 (x2317 x2173) (x4095 x2173)))))))))
(define-fun x4212 ((x2173 x1716)) Int (ite (= x2173 x4003) x2445 (x2317 x2173)))
(define-fun x3917 ((x2173 x1716)) Int (ite x3190 (x4212 x2173) (ite x158 (x2317 x2173) (ite x1064 (x2317 x2173) (ite x3169 (x2317 x2173) (ite x577 (x4212 x2173) (x2317 x2173)))))))
(define-fun x405 ((x2173 x1716)) Int (ite (= x2173 x749) x1347 (x4212 x2173)))
(define-fun x3845 ((x2173 x1716)) Int (ite x4015 (x2317 x2173) (ite x2444 (x2317 x2173) (ite x3118 (x2317 x2173) (ite x135 (x2317 x2173) (ite x3945 (x2317 x2173) (ite x3657 (x2317 x2173) (ite x4309 (x3917 x2173) (x405 x2173)))))))))
(define-fun x785 ((x2173 x1716)) Int (ite x1905 (x3845 x2173) (ite x3275 (x2317 x2173) (ite x383 (x2317 x2173) (ite x1480 (x2317 x2173) (ite x47 (x2317 x2173) (ite x806 (x2317 x2173) (ite x91 (x2317 x2173) (x3845 x2173)))))))))
(define-fun x31 ((x2173 x1716)) Int (ite (= x4315 x2173) x374 (x2317 x2173)))
(define-fun x784 ((x2173 x1716)) Int (ite x3632 (x31 x2173) (ite x3493 (x2317 x2173) (ite x1496 (x2317 x2173) (ite x3082 (x2317 x2173) (ite x1926 (x31 x2173) (x2317 x2173)))))))
(define-fun x1908 ((x2173 x1716)) Int (ite (= x2173 x4129) x1255 (x31 x2173)))
(define-fun x845 ((x2173 x1716)) Int (ite x670 (x2317 x2173) (ite x697 (x2317 x2173) (ite x2074 (x2317 x2173) (ite x1237 (x2317 x2173) (ite x2063 (x2317 x2173) (ite x1323 (x2317 x2173) (ite x2026 (x784 x2173) (x1908 x2173)))))))))
(define-fun x2550 ((x2173 x1716)) Int (ite x245 (x845 x2173) (ite x1775 (x2317 x2173) (ite x870 (x2317 x2173) (ite x2914 (x2317 x2173) (ite x1461 (x2317 x2173) (ite x1335 (x2317 x2173) (ite x4256 (x2317 x2173) (x845 x2173)))))))))
(define-fun x4059 ((x2173 x1716)) Int (ite (= x2432 x2173) x3470 (x2317 x2173)))
(define-fun x1824 ((x2173 x1716)) Int (ite x606 (x4059 x2173) (ite x1663 (x2317 x2173) (ite x3642 (x2317 x2173) (ite x2600 (x2317 x2173) (ite x2971 (x4059 x2173) (x2317 x2173)))))))
(define-fun x229 ((x2173 x1716)) Int (ite (= x2173 x3586) x1378 (x4059 x2173)))
(define-fun x2 ((x2173 x1716)) Int (ite x1430 (x2317 x2173) (ite x2727 (x2317 x2173) (ite x3089 (x2317 x2173) (ite x3689 (x2317 x2173) (ite x4171 (x2317 x2173) (ite x2810 (x2317 x2173) (ite x1084 (x1824 x2173) (x229 x2173)))))))))
(define-fun x2480 ((x2173 x1716)) Int (ite x1185 (x2 x2173) (ite x2761 (x2317 x2173) (ite x3612 (x2317 x2173) (ite x5 (x2317 x2173) (ite x1689 (x2317 x2173) (ite x3562 (x2317 x2173) (ite x3106 (x2317 x2173) (x2 x2173)))))))))
(define-fun x3898 ((x2173 x1716)) Int (ite x1329 (ite x556 (x2550 x2173) (x845 x2173)) (ite x696 (ite x952 (x2480 x2173) (x2 x2173)) (x2317 x2173))))
(define-fun x223 ((x2173 x1716)) Int (ite (= x2173 x1679) x2758 (x3898 x2173)))
(define-fun x1228 ((x2173 x1716)) Int (ite x243 (x223 x2173) (ite x1380 (x3898 x2173) (ite x2332 (x3898 x2173) (ite x3879 (x3898 x2173) (ite x1420 (x223 x2173) (x3898 x2173)))))))
(define-fun x1927 ((x2173 x1716)) Int (ite (= x2173 x4335) x1584 (x223 x2173)))
(define-fun x2565 ((x2173 x1716)) Int (ite x561 (x3898 x2173) (ite x388 (x3898 x2173) (ite x1075 (x3898 x2173) (ite x3055 (x3898 x2173) (ite x4294 (x3898 x2173) (ite x1128 (x3898 x2173) (ite x1896 (x1228 x2173) (x1927 x2173)))))))))
(define-fun x1033 ((x2173 x1716)) Int (ite x148 (x2317 x2173) (ite x4281 (x2317 x2173) (ite x629 (x2565 x2173) (ite x1540 (x2565 x2173) (ite x2752 (x2565 x2173) (ite x4398 (x2565 x2173) (ite x2446 (x3898 x2173) (x2317 x2173)))))))))
(define-fun x67 ((x2173 x1716)) Int (ite x2016 (ite x1339 (x2846 x2173) (x4095 x2173)) (ite x1853 (ite x3938 (x785 x2173) (x3845 x2173)) (ite x1397 (x1033 x2173) (x2565 x2173)))))
(define-fun x266 ((x2173 x1716)) Int (ite (= x2173 x1552) x941 (x67 x2173)))
(define-fun x3815 ((x2173 x1716)) Int (ite (= x2395 x2173) x50 (x266 x2173)))
(define-fun x1234 ((x2173 x1716)) Int (ite x505 (x863 x2173) (ite x1753 (x863 x2173) (ite x2718 (x863 x2173) (ite x4302 (x863 x2173) (ite x651 (x863 x2173) (ite x1146 (x863 x2173) (ite x3673 (x863 x2173) (x1175 x2173)))))))))
(define-fun x1053 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x773 x2173)))
(define-fun x3793 ((x2173 x1716)) Int (ite (= x366 x2173) x948 (x958 x2173)))
(define-fun x2834 ((x2173 Int)) Int (ite (= x2173 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x554 x2173)))
(define-fun x2719 ((x2173 Int)) Int (ite (= 132 x2173) x275 (x2834 x2173)))
(define-fun x484 ((x2173 Int)) Int (ite (= 164 x2173) x4269 (x2719 x2173)))
(define-fun x3672 ((x2173 Int)) Int (ite (= x2173 196) x302 (x484 x2173)))
(define-fun x4109 ((x2173 x1716)) Int (ite (= x2173 x1513) x3480 (x1050 x2173)))
(define-fun x2196 ((x2173 Int)) Int (ite (= x2173 0) 1 (x224 x2173)))
(define-fun x74 ((x2173 x1716)) Int (ite (= x2173 x2389) x3906 (x3793 x2173)))
(define-fun x3859 ((x2173 x1716)) Int (ite (= x2173 x876) x2878 (x74 x2173)))
(define-fun x3520 ((x2173 Int)) Int (ite (= x2173 0) 1 (x224 x2173)))
(define-fun x378 ((x2173 x1716)) Int (ite (= x2173 x1704) x1586 (x215 x2173)))
(define-fun x254 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x224 x2173)))
(define-fun x2180 ((x2173 x1716)) Int (ite (= x2173 x2698) x2479 (x1983 x2173)))
(define-fun x4084 ((x2173 x1716)) Int (ite (= x2173 x482) x2588 (x2180 x2173)))
(define-fun x3198 ((x2173 Int)) Int (ite (= x2173 0) 1 (x224 x2173)))
(define-fun x1596 ((x2173 x1716)) Int (ite (= x3136 x2173) x3387 (x3451 x2173)))
(define-fun x2075 ((x2173 x1716)) Int (ite (= x2672 x2173) x358 (x1596 x2173)))
(define-fun x3461 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x224 x2173)))
(define-fun x1113 ((x2173 x1716)) Int (ite (= x2173 x1543) x2435 (x2916 x2173)))
(define-fun x1143 ((x2173 Int)) Int (ite (= x2173 0) 1 (x224 x2173)))
(define-fun x2124 ((x2173 x1716)) Int (ite (= x1014 x2173) x1183 (x67 x2173)))
(define-fun x1129 ((x2173 x1716)) Int (ite (= x2173 x3119) x1361 (x2124 x2173)))
(define-fun x2969 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x224 x2173)))
(define-fun x1633 ((x2173 x1716)) Int (ite x1606 (x3815 x2173) (ite x1099 (x266 x2173) (ite x1481 (x67 x2173) (ite x2378 (x67 x2173) (ite x1010 (x67 x2173) (ite x2714 (x67 x2173) (ite x1216 (x266 x2173) (ite x995 (x3815 x2173) (x67 x2173))))))))))
(define-fun x1437 ((x2173 x1716)) Int (ite x3932 (x67 x2173) (ite x2249 (x67 x2173) (ite x177 (x67 x2173) (ite x502 (x67 x2173) (ite x1730 (x67 x2173) (ite x287 (x67 x2173) (ite x1665 (x1633 x2173) (x3815 x2173)))))))))
(define-fun x3282 ((x2173 x1716)) Int (ite x2188 (x1437 x2173) (ite x4011 (x67 x2173) (ite x2881 (x67 x2173) (ite x3851 (x1437 x2173) (x67 x2173))))))
(define-fun x2366 ((x2173 x1716)) Int (ite x2461 (x1129 x2173) (ite x2121 (x2124 x2173) (ite x3040 (x67 x2173) (ite x3347 (x67 x2173) (ite x2772 (x67 x2173) (ite x3289 (x67 x2173) (ite x1423 (x2124 x2173) (ite x3392 (x1129 x2173) (x67 x2173))))))))))
(define-fun x1343 ((x2173 x1716)) Int (ite x504 (x67 x2173) (ite x1037 (x67 x2173) (ite x3827 (x67 x2173) (ite x2271 (x67 x2173) (ite x3264 (x67 x2173) (ite x1893 (x67 x2173) (ite x2783 (x2366 x2173) (x1129 x2173)))))))))
(define-fun x1275 ((x2173 x1716)) Int (ite x3617 (x1343 x2173) (ite x1832 (x67 x2173) (ite x2717 (x67 x2173) (ite x2556 (x1343 x2173) (x67 x2173))))))
(define-fun x2573 ((x2173 x1716)) Int (ite x2879 (ite x1885 (x3282 x2173) (x1437 x2173)) (ite x1162 (x1275 x2173) (x1343 x2173))))
(define-fun x1875 ((x2173 x1716)) Int (ite x610 (x1449 x2173) (ite x2852 (x222 x2173) (ite x2315 (x958 x2173) (ite x389 (x958 x2173) (ite x59 (x958 x2173) (ite x294 (x958 x2173) (ite x2956 (x222 x2173) (ite x32 (x1449 x2173) (x958 x2173))))))))))
(define-fun x4271 ((x2173 x1716)) Int (ite x3932 (x958 x2173) (ite x2249 (ite x2537 (x1875 x2173) (x1449 x2173)) (x958 x2173))))
(define-fun x1168 ((x2173 x1716)) Int (ite x2188 (x4271 x2173) (ite x4011 (x958 x2173) (ite x2881 (x958 x2173) (ite x3851 (x4271 x2173) (x958 x2173))))))
(define-fun x1236 ((x2173 x1716)) Int (ite x2128 (x3859 x2173) (ite x2017 (x74 x2173) (ite x720 (x3793 x2173) (ite x2033 (x3793 x2173) (ite x269 (x3793 x2173) (ite x891 (x3793 x2173) (ite x2199 (x74 x2173) (ite x1886 (x3859 x2173) (x3793 x2173))))))))))
(define-fun x3829 ((x2173 x1716)) Int (ite x504 (x3793 x2173) (ite x1037 (ite x142 (x1236 x2173) (x3859 x2173)) (x3793 x2173))))
(define-fun x3486 ((x2173 x1716)) Int (ite x3617 (x3829 x2173) (ite x1832 (x958 x2173) (ite x2717 (x958 x2173) (ite x2556 (x3829 x2173) (x958 x2173))))))
(define-fun x3268 ((x2173 x1716)) Int (ite x2879 (ite x1885 (x1168 x2173) (x4271 x2173)) (ite x1162 (x3486 x2173) (x3829 x2173))))
(define-fun x2935 ((x2173 x1716)) Int (ite x1610 (x734 x2173) (ite x4215 (x2906 x2173) (ite x1193 (x1983 x2173) (ite x1981 (x1983 x2173) (ite x3492 (x1983 x2173) (ite x1466 (x1983 x2173) (ite x1673 (x2906 x2173) (ite x2354 (x734 x2173) (x1983 x2173))))))))))
(define-fun x1382 ((x2173 x1716)) Int (ite x3932 (x1983 x2173) (ite x2249 (x1983 x2173) (ite x177 (x1983 x2173) (ite x502 (ite x1782 (x2935 x2173) (x734 x2173)) (x1983 x2173))))))
(define-fun x1011 ((x2173 x1716)) Int (ite x2188 (x1382 x2173) (ite x4011 (x1983 x2173) (ite x2881 (x1983 x2173) (ite x3851 (x1382 x2173) (x1983 x2173))))))
(define-fun x1966 ((x2173 x1716)) Int (ite x1925 (x4084 x2173) (ite x3420 (x2180 x2173) (ite x3847 (x1983 x2173) (ite x149 (x1983 x2173) (ite x1048 (x1983 x2173) (ite x896 (x1983 x2173) (ite x2081 (x2180 x2173) (ite x3497 (x4084 x2173) (x1983 x2173))))))))))
(define-fun x346 ((x2173 x1716)) Int (ite x504 (x1983 x2173) (ite x1037 (x1983 x2173) (ite x3827 (x1983 x2173) (ite x2271 (ite x3620 (x1966 x2173) (x4084 x2173)) (x1983 x2173))))))
(define-fun x2113 ((x2173 x1716)) Int (ite x3617 (x346 x2173) (ite x1832 (x1983 x2173) (ite x2717 (x1983 x2173) (ite x2556 (x346 x2173) (x1983 x2173))))))
(define-fun x2216 ((x2173 x1716)) Int (ite x2879 (ite x1885 (x1011 x2173) (x1382 x2173)) (ite x1162 (x2113 x2173) (x346 x2173))))
(define-fun x1256 ((x2173 x1716)) Int (ite x2992 (x464 x2173) (ite x125 (x4262 x2173) (ite x1408 (x3451 x2173) (ite x1918 (x3451 x2173) (ite x3869 (x3451 x2173) (ite x2592 (x3451 x2173) (ite x1806 (x4262 x2173) (ite x2520 (x464 x2173) (x3451 x2173))))))))))
(define-fun x2350 ((x2173 x1716)) Int (ite x3932 (x3451 x2173) (ite x2249 (x3451 x2173) (ite x177 (x3451 x2173) (ite x502 (x3451 x2173) (ite x1730 (ite x4209 (x1256 x2173) (x464 x2173)) (x3451 x2173)))))))
(define-fun x594 ((x2173 x1716)) Int (ite x2188 (x2350 x2173) (ite x4011 (x3451 x2173) (ite x2881 (x3451 x2173) (ite x3851 (x2350 x2173) (x3451 x2173))))))
(define-fun x1994 ((x2173 x1716)) Int (ite x1934 (x2075 x2173) (ite x2394 (x1596 x2173) (ite x3805 (x3451 x2173) (ite x2936 (x3451 x2173) (ite x3484 (x3451 x2173) (ite x2777 (x3451 x2173) (ite x2730 (x1596 x2173) (ite x2804 (x2075 x2173) (x3451 x2173))))))))))
(define-fun x2309 ((x2173 x1716)) Int (ite x504 (x3451 x2173) (ite x1037 (x3451 x2173) (ite x3827 (x3451 x2173) (ite x2271 (x3451 x2173) (ite x3264 (ite x433 (x1994 x2173) (x2075 x2173)) (x3451 x2173)))))))
(define-fun x3740 ((x2173 x1716)) Int (ite x3617 (x2309 x2173) (ite x1832 (x3451 x2173) (ite x2717 (x3451 x2173) (ite x2556 (x2309 x2173) (x3451 x2173))))))
(define-fun x2439 ((x2173 x1716)) Int (ite x2879 (ite x1885 (x594 x2173) (x2350 x2173)) (ite x1162 (x3740 x2173) (x2309 x2173))))
(define-fun x3670 ((x2173 Int)) Int (ite (= x2173 128) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x3349 x2173)))
(define-fun x3217 ((x2173 Int)) Int (ite (= x2173 132) x275 (x3670 x2173)))
(define-fun x3049 ((x2173 Int)) Int (ite (= 164 x2173) x628 (x3217 x2173)))
(define-fun x121 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x3107 x2173)))
(define-fun x1766 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x3107 x2173)))
(define-fun x207 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x3107 x2173)))
(define-fun x2402 ((x2173 Int)) Int (ite (= x2173 0) 1 (x3107 x2173)))
(define-fun x827 ((x2173 Int)) Int (ite (= x2173 0) 1 (x3107 x2173)))
(define-fun x2284 ((x2173 Int)) Int (ite (= x2173 0) 1 (x3107 x2173)))
(define-fun x2823 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x3107 x2173)))
(define-fun x509 ((x2173 Int)) Int (ite (= 128 x2173) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1499 x2173)))
(define-fun x3512 ((x2173 Int)) Int (ite (= 132 x2173) x275 (x509 x2173)))
(define-fun x1001 ((x2173 Int)) Int (ite (= 164 x2173) x1895 (x3512 x2173)))
(define-fun x219 ((x2173 Int)) Int (ite (= x2173 0) 1 (x4045 x2173)))
(define-fun x3926 ((x2173 Int)) Int (ite (= x2173 0) 1 (x4045 x2173)))
(define-fun x1528 ((x2173 Int)) Int (ite (= x2173 0) 1 (x4045 x2173)))
(define-fun x1713 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x4045 x2173)))
(define-fun x804 ((x2173 Int)) Int (ite (= x2173 0) 1 (x4045 x2173)))
(define-fun x1331 ((x2173 Int)) Int (ite (= x2173 0) 1 (x4045 x2173)))
(define-fun x1375 ((x2173 Int)) Int (ite (= x2173 0) 1 (x4045 x2173)))
(define-fun x1104 ((x2173 Int)) Int (ite (= x2173 128) 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x3746 x2173)))
(define-fun x2039 ((x2173 Int)) Int (ite (= x2173 132) x56 (x1104 x2173)))
(define-fun x84 ((x2173 Int)) Int (ite (= x2173 128) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x3662 x2173)))
(define-fun x4284 ((x2173 Int)) Int (ite (= 132 x2173) x275 (x84 x2173)))
(define-fun x585 ((x2173 Int)) Int (ite (= x2173 164) x4197 (x4284 x2173)))
(define-fun x2728 ((x2173 Int)) Int (ite (= x2173 0) 1 (x132 x2173)))
(define-fun x2534 ((x2173 Int)) Int (ite (= x2173 0) 1 (x132 x2173)))
(define-fun x3541 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x132 x2173)))
(define-fun x1815 ((x2173 Int)) Int (ite (= x2173 0) 1 (x132 x2173)))
(define-fun x3788 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x132 x2173)))
(define-fun x2010 ((x2173 Int)) Int (ite (= x2173 0) 1 (x132 x2173)))
(define-fun x4072 ((x2173 Int)) Int (ite (= x2173 0) 1 (x132 x2173)))
(define-fun x2886 ((x2173 Int)) Int (ite (= 128 x2173) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x3194 x2173)))
(define-fun x2918 ((x2173 Int)) Int (ite (= x2173 132) x275 (x2886 x2173)))
(define-fun x1471 ((x2173 Int)) Int (ite (= 164 x2173) x331 (x2918 x2173)))
(define-fun x3369 ((x2173 Int)) Int (ite (= x2173 0) 1 (x2722 x2173)))
(define-fun x4108 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x2722 x2173)))
(define-fun x2960 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x2722 x2173)))
(define-fun x3256 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x2722 x2173)))
(define-fun x3899 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x2722 x2173)))
(define-fun x688 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x2722 x2173)))
(define-fun x176 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x2722 x2173)))
(define-fun x100 ((x2173 Int)) Int (ite (= x2173 128) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x2039 x2173)))
(define-fun x3697 ((x2173 Int)) Int (ite (= x2173 132) x275 (x100 x2173)))
(define-fun x1613 ((x2173 Int)) Int (ite (= x2173 164) x56 (x3697 x2173)))
(define-fun x2276 ((x2173 Int)) Int (ite (= x2173 0) 1 (x3553 x2173)))
(define-fun x3070 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x3553 x2173)))
(define-fun x4376 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x3553 x2173)))
(define-fun x2497 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x3553 x2173)))
(define-fun x2950 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x3553 x2173)))
(define-fun x3706 ((x2173 Int)) Int (ite (= 0 x2173) 1 (x3553 x2173)))
(define-fun x4287 ((x2173 Int)) Int (ite (= x2173 0) 1 (x3553 x2173)))
(define-fun x209 ((x2173 Int)) Int (ite x1578 (x3553 x2173) (x2276 x2173)))
(define-fun x2298 ((x2173 Int)) Int (ite x2289 (x3553 x2173) (x3070 x2173)))
(define-fun x293 ((x2173 Int)) Int (ite x596 (x3553 x2173) (x4376 x2173)))
(define-fun x2029 ((x2173 Int)) Int (ite x564 (x3553 x2173) (x2497 x2173)))
(define-fun x3954 ((x2173 Int)) Int (ite x240 (x3553 x2173) (x2950 x2173)))
(define-fun x1973 ((x2173 Int)) Int (ite x4339 (x3553 x2173) (x3706 x2173)))
(define-fun x3351 ((x2173 Int)) Int (ite x1896 (x3553 x2173) (x4287 x2173)))
(define-fun x1080 ((x2173 Int)) Int (ite x561 (x209 x2173) (ite x388 (x2298 x2173) (ite x1075 (x293 x2173) (ite x3055 (x2029 x2173) (ite x4294 (x3954 x2173) (ite x1128 (x1973 x2173) (x3351 x2173))))))))
(define-fun x4210 ((x2173 Int)) Int (ite x3144 (x4045 x2173) (x219 x2173)))
(define-fun x2627 ((x2173 Int)) Int (ite x144 (x4045 x2173) (x3926 x2173)))
(define-fun x1024 ((x2173 Int)) Int (ite x4400 (x4045 x2173) (x1528 x2173)))
(define-fun x2265 ((x2173 Int)) Int (ite x959 (x4045 x2173) (x1713 x2173)))
(define-fun x3004 ((x2173 Int)) Int (ite x1003 (x4045 x2173) (x804 x2173)))
(define-fun x3987 ((x2173 Int)) Int (ite x4202 (x4045 x2173) (x1331 x2173)))
(define-fun x4238 ((x2173 Int)) Int (ite x4309 (x4045 x2173) (x1375 x2173)))
(define-fun x897 ((x2173 Int)) Int (ite x4015 (x4210 x2173) (ite x2444 (x2627 x2173) (ite x3118 (x1024 x2173) (ite x135 (x2265 x2173) (ite x3945 (x3004 x2173) (ite x3657 (x3987 x2173) (x4238 x2173))))))))
(define-fun x2915 ((x2173 Int)) Int (ite x944 (x3107 x2173) (x121 x2173)))
(define-fun x709 ((x2173 Int)) Int (ite x2322 (x3107 x2173) (x1766 x2173)))
(define-fun x888 ((x2173 Int)) Int (ite x315 (x3107 x2173) (x207 x2173)))
(define-fun x3168 ((x2173 Int)) Int (ite x3556 (x3107 x2173) (x2402 x2173)))
(define-fun x2377 ((x2173 Int)) Int (ite x2818 (x3107 x2173) (x827 x2173)))
(define-fun x1398 ((x2173 Int)) Int (ite x182 (x3107 x2173) (x2284 x2173)))
(define-fun x980 ((x2173 Int)) Int (ite x3681 (x3107 x2173) (x2823 x2173)))
(define-fun x746 ((x2173 Int)) Int (ite x4178 (x2915 x2173) (ite x1108 (x709 x2173) (ite x3915 (x888 x2173) (ite x3685 (x3168 x2173) (ite x4286 (x2377 x2173) (ite x1381 (x1398 x2173) (x980 x2173))))))))
(define-fun x1668 ((x2173 Int)) Int (ite x3504 (x224 x2173) (x2196 x2173)))
(define-fun x2512 ((x2173 Int)) Int (ite x142 (x224 x2173) (x3520 x2173)))
(define-fun x3001 ((x2173 Int)) Int (ite x336 (x224 x2173) (x254 x2173)))
(define-fun x2420 ((x2173 Int)) Int (ite x3620 (x224 x2173) (x3198 x2173)))
(define-fun x3158 ((x2173 Int)) Int (ite x433 (x224 x2173) (x3461 x2173)))
(define-fun x3452 ((x2173 Int)) Int (ite x3262 (x224 x2173) (x1143 x2173)))
(define-fun x1812 ((x2173 Int)) Int (ite x2783 (x224 x2173) (x2969 x2173)))
(define-fun x997 ((x2173 Int)) Int (ite x504 (x1668 x2173) (ite x1037 (x2512 x2173) (ite x3827 (x3001 x2173) (ite x2271 (x2420 x2173) (ite x3264 (x3158 x2173) (ite x1893 (x3452 x2173) (x1812 x2173))))))))
(define-fun x1412 ((x2173 Int)) Int (ite x961 (x773 x2173) (x620 x2173)))
(define-fun x2372 ((x2173 Int)) Int (ite x2537 (x773 x2173) (x1167 x2173)))
(define-fun x2781 ((x2173 Int)) Int (ite x3364 (x773 x2173) (x1357 x2173)))
(define-fun x1803 ((x2173 Int)) Int (ite x1782 (x773 x2173) (x1787 x2173)))
(define-fun x729 ((x2173 Int)) Int (ite x4209 (x773 x2173) (x1468 x2173)))
(define-fun x1788 ((x2173 Int)) Int (ite x2419 (x773 x2173) (x3419 x2173)))
(define-fun x2393 ((x2173 Int)) Int (ite x1665 (x773 x2173) (x1053 x2173)))
(define-fun x15 ((x2173 Int)) Int (ite x3932 (x1412 x2173) (ite x2249 (x2372 x2173) (ite x177 (x2781 x2173) (ite x502 (x1803 x2173) (ite x1730 (x729 x2173) (ite x287 (x1788 x2173) (x2393 x2173))))))))
(define-fun x3664 ((x2173 Int)) Int (ite x3176 (x2722 x2173) (x3369 x2173)))
(define-fun x1287 ((x2173 Int)) Int (ite x1554 (x2722 x2173) (x4108 x2173)))
(define-fun x2379 ((x2173 Int)) Int (ite x4051 (x2722 x2173) (x2960 x2173)))
(define-fun x2492 ((x2173 Int)) Int (ite x3410 (x2722 x2173) (x3256 x2173)))
(define-fun x3554 ((x2173 Int)) Int (ite x3103 (x2722 x2173) (x3899 x2173)))
(define-fun x2431 ((x2173 Int)) Int (ite x850 (x2722 x2173) (x688 x2173)))
(define-fun x2002 ((x2173 Int)) Int (ite x1084 (x2722 x2173) (x176 x2173)))
(define-fun x2190 ((x2173 Int)) Int (ite x1430 (x3664 x2173) (ite x2727 (x1287 x2173) (ite x3089 (x2379 x2173) (ite x3689 (x2492 x2173) (ite x4171 (x3554 x2173) (ite x2810 (x2431 x2173) (x2002 x2173))))))))
(define-fun x3389 ((x2173 Int)) Int (ite x66 (x132 x2173) (x2728 x2173)))
(define-fun x3416 ((x2173 Int)) Int (ite x654 (x132 x2173) (x2534 x2173)))
(define-fun x3297 ((x2173 Int)) Int (ite x2597 (x132 x2173) (x3541 x2173)))
(define-fun x2237 ((x2173 Int)) Int (ite x3540 (x132 x2173) (x1815 x2173)))
(define-fun x1030 ((x2173 Int)) Int (ite x2570 (x132 x2173) (x3788 x2173)))
(define-fun x2083 ((x2173 Int)) Int (ite x3466 (x132 x2173) (x2010 x2173)))
(define-fun x58 ((x2173 Int)) Int (ite x2026 (x132 x2173) (x4072 x2173)))
(define-fun x4239 ((x2173 Int)) Int (ite x670 (x3389 x2173) (ite x697 (x3416 x2173) (ite x2074 (x3297 x2173) (ite x1237 (x2237 x2173) (ite x2063 (x1030 x2173) (ite x1323 (x2083 x2173) (x58 x2173))))))))
(define-fun x1304 ((x2173 Int)) Int (ite (= 0 x2173) x2254 (x2067 x2173)))
(define-fun x3425 ((x2173 Int)) Int (ite (= 0 x2173) x3579 (x2067 x2173)))
(define-fun x1942 ((x2173 Int)) Int (ite (= 0 x2173) x1233 (x2067 x2173)))
(define-fun x3526 ((x2173 Int)) Int (ite (= 0 x2173) x1511 (x2067 x2173)))
(define-fun x571 ((x2173 Int)) Int (ite (= x2173 0) x1568 (x2067 x2173)))
(define-fun x3669 ((x2173 Int)) Int (ite (= x2173 0) x3551 (x2067 x2173)))
(define-fun x3028 ((x2173 Int)) Int (ite (= 0 x2173) x2064 (x2067 x2173)))
(define-fun x2808 ((x2888 Int)) Bool (=> (and (not (= 117300739 x2888)) (not (= 157198259 x2888)) (not (= 1461501637330902918203684832716283019655932542976 x2888)) (not (= x2888 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x2888 3065339685)) (not (= 3645313523 x2888)) (not (= x2888 599290589)) (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2888)) (not (= 1086394137 x2888)) (not (= x2888 2737736067)) (not (= x2888 2952933380)) (not (= 2678909723 x2888)) (not (= x2888 1461501637330902918203684832716283019655932542975)) (not (= x2888 872247156)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2888)) (not (= 649617121 x2888)) (not (= x2888 4238056678808933066457772256406219440718756300954938350892797929791311314944)) (not (= x2888 50942633119752846454219349998365661925608737367104304655302372697894809501696)) (not (= x2888 2376452955)) (not (= 85927964219764727760667161919810921830953265369826564066086284937368273158144 x2888)) (not (= x2888 1889567281)) (not (= 2753274959 x2888)) (not (= 545886713 x2888)) (not (= x2888 773487949)) (not (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 x2888)) (not (= x2888 76450787359836037641860180984291677749980919077056822294353438043884394381312)) (not (= x2888 2766140528)) (not (= 893399075 x2888)) (not (= x2888 2514000705)) (not (= x2888 826074471)) (not (= 3187245334 x2888)) (not (= x2888 76402721711080721455099699717775724453355902399574518144543212547937138638848)) (not (= 404098525 x2888)) (> x2888 10000) (not (= x2888 1422172137)) (not (= x2888 2569309863)) (not (= x2888 579358252)) (not (= 2835717307 x2888)) (not (= x2888 82641394424300342035733052706735002277943222088490025348945809093694544936960))) (not ((_ is x3241) (x2376 x2888)))))
(assert (x4106 x4168))
(assert (= (and (not x475) x1906) x2575))
(assert (x4106 x3573))
(assert (x4106 x268))
(assert (= (and x1603 x3668) x4111))
(assert (= x490 (and x3724 (not x1460))))
(assert (= x1948 (and x1680 x256)))
(assert (= x2249 (or x2537 x1659)))
(assert (= x173 (and x2661 x3421)))
(assert (= (=> (and (= x3794 x2619) (= x3244 0)) x1446) x4323))
(assert (= (x2376 649617121) (x3241 649617121)))
(assert (x4106 x2238))
(assert (x4106 x2421))
(assert (x4106 x1078))
(assert (x4106 x4392))
(assert (x4106 x2386))
(assert (x4106 x1438))
(assert (x2808 x1503))
(assert (= x2714 (and x4391 x4301)))
(assert (= (and (not x1921) x1863) x3106))
(assert (= (and x2034 (not x4067)) x2538))
(assert (x4106 x3250))
(assert (= (x1262 (x2376 x1522)) x1522))
(assert (= (or x3626 (and x569 (not x3916))) x3543))
(assert (= (and x1821 x3479) x2278))
(assert (x4106 x4365))
(assert (= x258 (=> (and (= x653 x3563) (= x2299 x2706)) x200)))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x1181) (= (x1249 (- x1889 x2467)) x707) (<= 0 x1877) (= x2467 (x461 (+ x2673 x264))) (= x2308 (= x1181 x2882)) x489 (= x2584 (x461 (+ 31 x2299))) (= (or x12 x141) x2617) (<= 0 x1181) (= (= x2882 x1877) x2370) (= x141 (= x1877 x3371)) (= x1761 (x461 (+ x2467 4))) (= (x461 (+ 32 x1761)) x4115) (not (or (> x2299 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x2299) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2299))))) (= (x105 x1313) x1181) (= (x4048 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2584) x2673) x2617 (> 1461501637330902918203684832716283019655932542976 x1877) (>= 1461501637330902918203684832716283019655932542975 x1877) (> 1461501637330902918203684832716283019655932542976 x1181) (= x489 (or x2308 x903)) (= x1877 (x106 x4318)) (= x1889 (x461 (+ 64 x1761))) (not (= 0 x3563)) (= x12 (= x1877 x864)) (= x903 (= x4269 x1181))) (and (=> (and x2370 (and (not (> 4 x4096)) (= (x2388 (x2376 x2882)) x2993) (= x4096 68) (> 2376452955 x701) (= x701 157198259) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x1306) (= x4313 (or (> x4198 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x4198) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4198) true)))) (= x707 x4096) (= x4198 (x1249 (- x4096 4))) (< x701 649617121) (= x1172 x1181) (not (< x701 157198259)) (> x2993 0))) (and (=> (and (and (= x1172 x1670) (= x3014 (= x1181 x1172))) (not x4313)) (and (=> (and (and (= (x4257 (x2376 x275) (x3241 3) 0) x4373) (= x1489 (x4257 (x2376 x1172) x4373 0)) (= 1 x153) (= 32 x1473)) x3014) x4083) (=> (not x3014) x3059))) (=> x4313 x3059))) (=> (and (not x2370) (= (= x1877 x4269) x3328)) (and (=> (and (= x2401 (= x864 x1877)) (not x3328)) (and (=> (and (and (= x2104 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= x3003 (or (and (> 64 x1857) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1857))) (> x1857 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= 157198259 x668) (= 68 x794) (not (= 117300739 x668)) (= x1857 (x1249 (- x794 4))) (= x1286 (x2388 (x2376 x864))) (> x1286 0) (= x1181 x2053) (< x668 826074471) (not (< x794 4)) (= x794 x707)) x2401) (and (=> x3003 x957) (=> (and (and (= (= x2053 x1181) x880) (= x2053 x3135)) (not x3003)) (and (=> (and x880 (and (= 1 x1667) (= 32 x267) (= x2255 (x4257 (x2376 x2053) x3753 0)) (= x3753 (x4257 (x2376 x275) (x3241 3) 0)))) x859) (=> (not x880) x957))))) (=> (and (= x2785 (= x3371 x1877)) (not x2401)) (and (=> (and (= x17 (= x1877 x2311)) (not x2785)) (and (=> (and (and (= (x2388 (x2376 x2311)) x836) (< x1699 1086394137) (= x2861 (x1249 (- x2552 4))) (= x1181 x3736) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x4347) (= x53 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2861) (and (= true (<= x2861 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2861 64)))) (not (= x1699 117300739)) (= x707 x2552) (not (< x2552 4)) (< 0 x836) (= x2552 68) (= 157198259 x1699)) x17) (and (=> (and (not x53) (and (= (= x1181 x3736) x1383) (= x698 x3736))) (and (=> (and (and (= (x4257 (x2376 x3736) x822 0) x3359) (= x4021 1) (= 32 x2545) (= x822 (x4257 (x2376 x275) (x3241 3) 0))) x1383) x2408) (=> (not x1383) x687))) (=> x53 x687))) (=> (and (= x4237 (= x1877 x3880)) (not x17)) (and (=> (and x4237 (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2607) (and (= true (<= x2607 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2607 64))) x120) (= x1377 x707) (= 157198259 x2411) (= x367 x1181) (= x2607 (x1249 (- x1377 4))) (= x1273 (x2388 (x2376 x3880))) (> x1273 0) (< x2411 826074471) (not (< x1377 4)) (= 68 x1377) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x228) (not (= x2411 117300739)))) (and (=> (and (not x120) (and (= x2051 (= x1181 x367)) (= x637 x367))) (and (=> (and (and (= (x4257 (x2376 x275) (x3241 3) 0) x3384) (= 1 x2759) (= x2995 (x4257 (x2376 x367) x3384 0)) (= 32 x3500)) x2051) x3618) (=> (not x2051) x3962))) (=> x120 x3962))) (=> (and (and (and x1359 (and (not (= 117300739 x2020)) (= x493 4238056678808933066457772256406219440718756300954938350892797929791311314944) (< 0 x4081) (= (x1249 (- x3921 4)) x4010) (= x707 x3921) (= x738 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4010) (and (= (<= x4010 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x4010 64)))) (not (> 4 x3921)) (= x2020 157198259) (= x4081 (x2388 (x2376 x706))) (= x4388 x1181) (> 826074471 x2020) (= 68 x3921))) (= x1359 (= x706 x1877))) (not x4237)) (and (=> (and (not x738) (and (= (= x4388 x1181) x1825) (= x3942 x4388))) (and (=> (and (and (= 1 x4255) (= x26 (x4257 (x2376 x4388) x4195 0)) (= (x4257 (x2376 x275) (x3241 3) 0) x4195) (= x4146 32)) x1825) x759) (=> (not x1825) x2939))) (=> x738 x2939))))))) (=> (and (and (= x1181 x1571) (= 68 x3477) (= x164 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1505) (and (= (<= x1505 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1505 64)))) (= (x1249 (- x3477 4)) x1505) (< 0 x2440) (not (= 117300739 x1434)) (not (> 4 x3477)) (= 157198259 x1434) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x338) (= x3477 x707) (= x2440 (x2388 (x2376 x3371))) (< x1434 826074471)) x2785) (and (=> (and (not x164) (and (= x94 x1571) (= x3734 (= x1571 x1181)))) (and (=> (not x3734) x3737) (=> (and (and (= 32 x2699) (= x2945 (x4257 (x2376 x1571) x4175 0)) (= 1 x989) (= x4175 (x4257 (x2376 x275) (x3241 3) 0))) x3734) x4222))) (=> x164 x3737))))))) (=> (and x3328 (and (= x102 x707) (not (< x102 4)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x449) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x449)) (< x449 64))) x3388) (< 0 x1706) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x2097) (< x1258 649617121) (= x102 68) (= (x2388 (x2376 x4269)) x1706) (= x1181 x3518) (> 2376452955 x1258) (not (> 157198259 x1258)) (= x449 (x1249 (- x102 4))) (= 157198259 x1258))) (and (=> x3388 x639) (=> (and (and (= x1345 (= x1181 x3518)) (= x2397 x3518)) (not x3388)) (and (=> (and x1345 (and (= x4190 (x4257 (x2376 x3518) x2690 0)) (= 1 x1862) (= x2690 (x4257 (x2376 x275) (x3241 3) 0)) (= 32 x1092))) x2156) (=> (not x1345) x639))))))))) x79))
(assert (= (and (not x1789) x2532) x3710))
(assert (x2808 x1804))
(assert (x4106 x1385))
(assert (x2808 x2827))
(assert (x2808 x1694))
(assert (= (and (not x107) x2344) x1390))
(assert (= x2337 (and x2680 x2780)))
(assert (x4106 x4330))
(assert (= x3497 (and x3983 x2974)))
(assert (= (and (not x3270) x2798) x3206))
(assert (x4106 x1402))
(assert (= (=> (and (= x3881 x3337) (= x2031 x1595)) x440) x1130))
(assert (x4106 x4047))
(assert (x4106 x2705))
(assert (x4106 x3801))
(assert (= x3238 (and x1433 x3895)))
(assert (x4106 x387))
(assert (= (and x4038 x795) x2407))
(assert (x4106 x1123))
(assert (= x2271 (or x2001 x3620)))
(assert (x4106 x321))
(assert (x4106 x1760))
(assert (= (and x507 x2757) x3811))
(assert (x4106 x1899))
(assert (x4106 x854))
(assert (= (and x377 x4) x1663))
(assert (= x3962 (=> (and (= x2759 0) (= x3547 x3500)) x3618)))
(assert (x4106 x2054))
(assert (=> (<= x1662 10000) (= (x2376 x1662) (x3241 x1662))))
(assert (x4106 x2642))
(assert (= (and (not x2996) x2911) x2811))
(assert (x4106 x1407))
(assert (x4106 x3558))
(assert (= (x2376 579358252) (x3241 579358252)))
(assert (=> (<= x2827 10000) (= (x3241 x2827) (x2376 x2827))))
(assert (x4106 x3182))
(assert (= x191 (or x3643 x1665)))
(assert (x2808 x3518))
(assert (x4106 x4305))
(assert (= (or x3082 x3493 x1926 x1496 x3632 x4353) x2026))
(assert (x4106 x2857))
(assert (x4106 x2522))
(assert (= (=> (and (= x1246 x3024) (= x8 x3507)) x3029) x2967))
(assert (= (x1262 (x2376 x921)) x921))
(assert (= (and x1219 (not x55)) x1569))
(assert (= x2637 (and x2303 (not x602))))
(assert (x4106 x27))
(assert (= (or x3343 x1606 x2378 x1099 x1010 x995 x1216 x1481 x2714) x1665))
(assert (= x1947 (and x2057 (not x923))))
(assert (x4106 x406))
(assert (x4106 x2667))
(assert (= x3564 (and (not x2540) x3363)))
(assert (x4106 x1378))
(assert (x4106 x2622))
(assert (x4106 x3149))
(assert (= (and x2875 x347) x2172))
(assert (= (x2376 2678909723) (x3241 2678909723)))
(assert (x4106 x3596))
(assert (= (and x2932 (not x161)) x152))
(assert (= (and (not x3757) x3773) x2246))
(assert (= x543 (=> (and (= x241 x344) (= 0 x1391)) x3439)))
(assert (= x2747 (and x3677 x1582)))
(assert (x2808 x1497))
(assert (x2808 x3454))
(assert (x4106 x3749))
(assert (= x3591 (and (not x4367) x4246)))
(assert (= x1076 (and x3300 x609)))
(assert (x4106 x1943))
(assert (x4106 x4293))
(assert (= x1823 (and x2321 x2102)))
(assert (= x1905 (and x2529 x691)))
(assert (= x1138 (and x1845 x3429)))
(assert (= (and x3239 x3295) x1610))
(assert (= (and (not x2655) x3161) x68))
(assert (x4106 x2650))
(assert (x4106 x1463))
(assert (= x639 (=> (and (= 0 x1862) (= x3547 x1092)) x2156)))
(assert (= (or x1896 x1541) x2293))
(assert (= (and x1316 (not x4094)) x2822))
(assert (x4106 x165))
(assert (=> (>= 10000 x4275) (= (x3241 x4275) (x2376 x4275))))
(assert (= (x1262 (x2376 x4006)) x4006))
(assert (= x3691 (and x1120 x1263)))
(assert (= x3478 (and (not x1695) x2934)))
(assert (= (x1262 (x2376 x633)) x633))
(assert (= (or (and x991 x3560) x1188 (and x4131 x1354) (and (not x103) x2405) (and x3432 x2518) x3810 x3963 (and x3393 x4078) (and (not x3398) x877)) x3262))
(assert (x4106 x3329))
(assert (= (and x3391 x3791) x2600))
(assert (= (and x1089 (not x2489)) x1800))
(assert (= x1887 (and x808 x488)))
(assert (x2808 x1522))
(assert (= x1916 (and x723 x3442)))
(assert (= x3860 (and x3065 x652)))
(assert (= (or x2847 x1764) x782))
(assert (= (and x119 (not x4237)) x1965))
(assert (= x1902 (and x3257 x2222)))
(assert (x4106 x4218))
(assert (= (and x2465 x3844) x4245))
(assert (x4106 x4125))
(assert (= (or x3308 x2239 x519 x591 x234 x1917) x144))
(assert (= x1906 (and (not x4234) x2793)))
(assert (= x3538 (and x3502 (not x3649))))
(assert (x4106 x4177))
(assert (= (and x28 x2482) x1040))
(assert (= x2853 (and x3776 x882)))
(assert (x4106 x3824))
(assert (= x1334 (and x3038 (not x3947))))
(assert (= (and x78 (not x618)) x2072))
(assert (= x2471 (and (not x1476) x4232)))
(assert (and (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x2008 x3114 1461501637330902918203684832716283019655932542976) (* (x2799 x3114 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x3114)) (x1418 x3114 1461501637330902918203684832716283019655932542976) (x4174 x3114 1461501637330902918203684832716283019655932542976) (x3919 x3114 1461501637330902918203684832716283019655932542976)))
(assert (= x3580 (and (not x914) x3405)))
(assert (= x3117 (and x3201 (not x1767))))
(assert (x2808 x3692))
(assert (= (and x1852 (not x3298)) x1541))
(assert (x4106 x1723))
(assert (x4106 x826))
(assert (= x2144 (x1262 (x2376 x2144))))
(assert (x4106 x3874))
(assert (x4106 x3406))
(assert (= x4112 (and x3061 (not x1245))))
(assert (= x530 (=> (= x3631 (= x1362 0)) (and (=> (and (and (= (= x3692 x3371) x679) (= x847 128) (<= 0 x3692) (= x2681 (or x679 x929)) (= (= x2882 x3692) x3272) (> 1461501637330902918203684832716283019655932542976 x3692) (>= 1461501637330902918203684832716283019655932542975 x3692) (= (x106 x2347) x3692) x2681 (= (= x864 x3692) x929)) (not x3631)) (and (=> (and (and (= (x1249 (- x2371 4)) x1364) (> x2470 0) (= 2835717307 x1297) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2883) (not (> 2678909723 x1297)) (not (< x2371 4)) (= (x2388 (x2376 x2882)) x2470) (> 3065339685 x1297) (not (> 2376452955 x1297)) (not (= 2678909723 x1297)) (= x2371 68) (= x371 (or (and (< x1364 64) (= (<= x1364 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1364 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x328 x2264) (= x3454 x275)) x3272) (and (=> (and (not x371) (and (= x3454 x4055) (= x1433 (= x3454 x275)))) (and (=> (not x1433) x3529) (=> (and (and (<= 0 x2178) (<= x2178 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4257 (x2376 x275) (x3241 2) 0) x642) (= (< x2178 x328) x3021) (= (x4041 x642) x2178) (= x2264 x1342)) x1433) (and (=> (and (not x3021) (= x347 (> x2264 x2178))) (and (=> x347 x3529) (=> (and (not x347) (and (= x2973 (x1249 (- x2178 x2264))) (= x3150 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2264))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4273) (= (x3353 x2842) x4273) (= (x4257 (x2376 x3454) (x3241 2) 0) x2842) (<= 0 x4273) (= x723 (> x4273 x3150)) (= x586 (x4257 (x2376 x275) (x3241 2) 0)))) (and (=> x723 x3529) (=> (and (and (= (x461 (+ x4273 x2264)) x1536) (= (> x4273 x1536) x43)) (not x723)) (and (=> x43 x3529) (=> (and (and (= x218 1) (= x589 (x4257 (x2376 x3454) (x3241 2) 0)) (= x4165 32)) (not x43)) x3904))))))) (=> x3021 x3529))))) (=> x371 x3529))) (=> (and (not x3272) (= (= x3692 x4269) x1904)) (and (=> (and x1904 (and (= (x2388 (x2376 x4269)) x2374) (= x1836 x275) (= x1758 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (< x179 2376452955)) (not (= 2678909723 x179)) (= 68 x2507) (not (> 4 x2507)) (= x328 x3081) (= x3882 (or (and (< x4270 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4270))) (> x4270 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x2374 0) (not (< x179 2678909723)) (= x179 2835717307) (= x4270 (x1249 (- x2507 4))) (> 3065339685 x179))) (and (=> (and (not x3882) (and (= x1836 x3801) (= x4067 (= x1836 x275)))) (and (=> (not x4067) x2623) (=> (and (and (= (x4257 (x2376 x275) (x3241 2) 0) x395) (= (> x328 x311) x2241) (<= x311 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x311 0) (= (x1457 x395) x311) (= x3081 x1708)) x4067) (and (=> (and (= x3395 (< x311 x3081)) (not x2241)) (and (=> (and (and (= x2251 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3081))) (= x3326 (x1967 x2865)) (<= x3326 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x546 (> x3326 x2251)) (= x2865 (x4257 (x2376 x1836) (x3241 2) 0)) (= (x1249 (- x311 x3081)) x3443) (= (x4257 (x2376 x275) (x3241 2) 0) x801) (<= 0 x3326)) (not x3395)) (and (=> x546 x2623) (=> (and (and (= x536 (x461 (+ x3081 x3326))) (= x1348 (< x536 x3326))) (not x546)) (and (=> (and (and (= x239 (x4257 (x2376 x1836) (x3241 2) 0)) (= 32 x1465) (= x1749 1)) (not x1348)) x2524) (=> x1348 x2623))))) (=> x3395 x2623))) (=> x2241 x2623))))) (=> x3882 x2623))) (=> (and (= (= x3692 x864) x3042) (not x1904)) (and (=> (and (not x3042) (= x602 (= x3692 x3371))) (and (=> (and (= x1366 (= x3692 x2311)) (not x602)) (and (=> (and (not x1366) (= x271 (= x3880 x3692))) (and (=> (and (and (= (= x706 x3692) x2972) (and (and (= x1301 (x1249 (- x1781 4))) (= (or (and (< x1301 64) (= (<= x1301 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1301)) x1271) (= x1426 x275) (= (x2388 (x2376 x706)) x2256) (= x1073 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (< x1933 826074471)) (= 68 x1781) (not (= 2514000705 x1933)) (> x2256 0) (not (= x1933 2376452955)) (= 2835717307 x1933) (not (= x1933 1889567281)) (= x1553 x328) (not (> 4 x1781)) (not (= x1933 826074471))) x2972)) (not x271)) (and (=> x1271 x415) (=> (and (not x1271) (and (= x3065 (= x1426 x275)) (= x1125 x1426))) (and (=> (and (and (= (x3898 x1888) x1267) (= x776 x1553) (= (< x1267 x328) x3675) (<= x1267 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4257 (x2376 x275) (x3241 2) 0) x1888) (>= x1267 0)) x3065) (and (=> (and (= (< x1267 x1553) x3184) (not x3675)) (and (=> x3184 x415) (=> (and (and (= x3164 (x4257 (x2376 x1426) (x3241 2) 0)) (= x1257 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1553))) (= x1679 (x4257 (x2376 x275) (x3241 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3285) (= (x223 x3164) x3285) (= x713 (> x3285 x1257)) (= (x1249 (- x1267 x1553)) x2758) (>= x3285 0)) (not x3184)) (and (=> (and (and (= (> x3285 x1584) x3298) (= (x461 (+ x3285 x1553)) x1584)) (not x713)) (and (=> x3298 x415) (=> (and (and (= (x4257 (x2376 x1426) (x3241 2) 0) x4335) (= x2174 32) (= x1136 1)) (not x3298)) x1734))) (=> x713 x415))))) (=> x3675 x415))) (=> (not x3065) x415))))) (=> (and (and (= 68 x3787) (= x3717 (x2388 (x2376 x3880))) (not (< x3787 4)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4204) true) (< x4204 64)) (> x4204 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3572) (= x4204 (x1249 (- x3787 4))) (not (> 826074471 x2500)) (= x3532 x275) (not (= x2500 1889567281)) (= x1555 x328) (= x2500 2835717307) (not (= x2500 826074471)) (not (= 2376452955 x2500)) (> x3717 0) (not (= 2514000705 x2500)) (= x910 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x271) (and (=> x3572 x4368) (=> (and (not x3572) (and (= (= x275 x3532) x4247) (= x3532 x244))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2022) (= (x1696 x3035) x2022) (= (x4257 (x2376 x275) (x3241 2) 0) x3035) (= x1555 x774) (>= x2022 0) (= (< x2022 x328) x2498)) x4247) (and (=> x2498 x4368) (=> (and (not x2498) (= (< x2022 x1555) x1705)) (and (=> (and (and (= x4065 (x733 x2263)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4065) (<= 0 x4065) (= (< x788 x4065) x1919) (= x2263 (x4257 (x2376 x3532) (x3241 2) 0)) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1555)) x788) (= x290 (x1249 (- x2022 x1555))) (= x2959 (x4257 (x2376 x275) (x3241 2) 0))) (not x1705)) (and (=> (and (not x1919) (and (= (x461 (+ x4065 x1555)) x2168) (= x3259 (< x2168 x4065)))) (and (=> (and (and (= 32 x38) (= 1 x868) (= x2382 (x4257 (x2376 x3532) (x3241 2) 0))) (not x3259)) x40) (=> x3259 x4368))) (=> x1919 x4368))) (=> x1705 x4368))))) (=> (not x4247) x4368))))))) (=> (and (and (< 0 x3866) (not (= x2686 2376452955)) (= x3594 x328) (= x250 (or (and (= (<= x1750 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1750)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1750))) (= x275 x841) (= (x2388 (x2376 x2311)) x3866) (not (= 1889567281 x2686)) (= x470 68) (= x2160 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x1249 (- x470 4)) x1750) (not (= x2686 1086394137)) (not (< x470 4)) (not (= 2514000705 x2686)) (= 2835717307 x2686) (not (> 1086394137 x2686))) x1366) (and (=> (and (not x250) (and (= (= x275 x841) x2702) (= x3173 x841))) (and (=> (not x2702) x3376) (=> (and x2702 (and (>= x2089 0) (<= x2089 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2089 (x407 x435)) (= (< x2089 x328) x3760) (= (x4257 (x2376 x275) (x3241 2) 0) x435) (= x1164 x3594))) (and (=> (and (not x3760) (= x127 (< x2089 x3594))) (and (=> x127 x3376) (=> (and (and (= x3167 (x4257 (x2376 x275) (x3241 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2858) (= x1785 (< x4330 x2858)) (= x4330 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3594))) (= (x1737 x3890) x2858) (<= 0 x2858) (= x2477 (x1249 (- x2089 x3594))) (= (x4257 (x2376 x841) (x3241 2) 0) x3890)) (not x127)) (and (=> (and (not x1785) (and (= x1928 (x461 (+ x2858 x3594))) (= x3128 (< x1928 x2858)))) (and (=> (and (not x3128) (and (= x4227 32) (= (x4257 (x2376 x841) (x3241 2) 0) x1490) (= x3230 1))) x4300) (=> x3128 x3376))) (=> x1785 x3376))))) (=> x3760 x3376))))) (=> x250 x3376))))) (=> (and (and (= x1522 x275) (not (= x3517 2376452955)) (not (> 826074471 x3517)) (> x2857 0) (= x328 x3267) (= x3978 (x1249 (- x4194 4))) (= x2857 (x2388 (x2376 x3371))) (= (or (> x3978 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3978)) (> 64 x3978))) x4075) (not (= 1889567281 x3517)) (= 68 x4194) (= x3517 2835717307) (not (< x4194 4)) (not (= x3517 2514000705)) (not (= 826074471 x3517)) (= x568 76450787359836037641860180984291677749980919077056822294353438043884394381312)) x602) (and (=> x4075 x3686) (=> (and (not x4075) (and (= (= x1522 x275) x1399) (= x169 x1522))) (and (=> (not x1399) x3686) (=> (and x1399 (and (= x2809 (x4257 (x2376 x275) (x3241 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3094) (= x3267 x1654) (= (< x3094 x328) x354) (= x3094 (x2109 x2809)) (<= 0 x3094))) (and (=> (and (= (> x3267 x3094) x2625) (not x354)) (and (=> (and (not x2625) (and (= x2240 (x1174 x35)) (= (< x3725 x2240) x1677) (= x1443 (x1249 (- x3094 x3267))) (= x3345 (x4257 (x2376 x275) (x3241 2) 0)) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3267)) x3725) (>= x2240 0) (= x35 (x4257 (x2376 x1522) (x3241 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2240))) (and (=> x1677 x3686) (=> (and (and (= (x461 (+ x3267 x2240)) x2383) (= (> x2240 x2383) x669)) (not x1677)) (and (=> (and (and (= (x4257 (x2376 x1522) (x3241 2) 0) x3044) (= 1 x3645) (= x429 32)) (not x669)) x869) (=> x669 x3686))))) (=> x2625 x3686))) (=> x354 x3686))))))))) (=> (and (and (= x328 x3012) (= x1827 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x275 x2666) (= (or (and (= (<= x2517 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x2517)) (> x2517 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2119) (not (> 4 x4369)) (not (= x1683 826074471)) (not (< x1683 826074471)) (= x4369 68) (= x2517 (x1249 (- x4369 4))) (= (x2388 (x2376 x864)) x2339) (not (= x1683 2514000705)) (= x1683 2835717307) (< 0 x2339) (not (= 2376452955 x1683)) (not (= 1889567281 x1683))) x3042) (and (=> x2119 x986) (=> (and (and (= (= x2666 x275) x2285) (= x2666 x2386)) (not x2119)) (and (=> (not x2285) x986) (=> (and x2285 (and (<= 0 x2425) (= (x4257 (x2376 x275) (x3241 2) 0) x667) (= x1327 (> x328 x2425)) (= (x2368 x667) x2425) (= x3012 x1748) (<= x2425 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x1327 x986) (=> (and (= x777 (< x2425 x3012)) (not x1327)) (and (=> x777 x986) (=> (and (not x777) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3730) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3012)) x226) (= x2603 (> x3730 x226)) (>= x3730 0) (= x3730 (x3232 x4046)) (= x4046 (x4257 (x2376 x2666) (x3241 2) 0)) (= (x4257 (x2376 x275) (x3241 2) 0) x3741) (= (x1249 (- x2425 x3012)) x2135))) (and (=> x2603 x986) (=> (and (not x2603) (and (= (x461 (+ x3730 x3012)) x928) (= x1998 (< x928 x3730)))) (and (=> x1998 x986) (=> (and (not x1998) (and (= x1065 32) (= (x4257 (x2376 x2666) (x3241 2) 0) x3377) (= 1 x2391))) x1793))))))))))))))))))) (=> (and x3631 (and (= x1415 x2650) (= x4172 x2245))) x4338)))))
(assert (= (or x762 x2137 x3146 x1646 x1574 x3209) x182))
(assert (= (or x3307 x4039 x1515 x3047 x970 x2125) x3176))
(assert (x4106 x2895))
(assert (= (x2376 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x3241 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (= x2132 (=> (and (= 0 x2267) (= x3537 x3992)) x2568)))
(assert (x4106 x2103))
(assert (x4106 x4394))
(assert (= x2436 (and x1371 (not x2086))))
(assert (x4106 x3779))
(assert (= (and x1614 (not x3003)) x993))
(assert (= x235 (and (not x2785) x732)))
(assert (x4106 x1224))
(assert (x4106 x4233))
(assert (x4106 x1972))
(assert (= (and x3085 (not x3979)) x4246))
(assert (x4106 x928))
(assert (= (x1262 (x2376 x2181)) x2181))
(assert (x4106 x820))
(assert (= x177 (or x3364 x1742)))
(assert (x4106 x2045))
(assert (x2808 x779))
(assert (= (and (not x1479) x4268) x700))
(assert (x4106 x1492))
(assert (x4106 x565))
(assert (x4106 x2046))
(assert (= (and x634 (not x4155)) x70))
(assert (x4106 x1982))
(assert (= (and x4107 x425) x1185))
(assert (= 893399075 (x1262 (x3241 893399075))))
(assert (= (and (not x777) x4278) x1560))
(assert (x4106 x3537))
(assert (= x3439 (=> (and (= x344 x3507) (= x1391 x3024)) x3029)))
(assert (= x3739 (or (and (not x195) x1094) (and x3013 x197))))
(assert (= (and (not x457) x3795) x3255))
(assert (x4106 x1311))
(assert (= x640 (and (not x942) x1645)))
(assert (x4106 x2756))
(assert (= x3920 (and x3608 (not x2092))))
(assert (x4106 x52))
(assert (x4106 x2356))
(assert (= x2332 (and x652 (not x3065))))
(assert (x2808 x660))
(assert (= (and (not x3695) x3319) x1623))
(assert (x4106 x446))
(assert (x4106 x3078))
(assert (= 1086394137 (x1262 (x3241 1086394137))))
(assert (= x870 (and x3590 x1623)))
(assert (x2808 x1763))
(assert (= x1529 (=> (and (= x3639 x3024) (= x2919 x3507)) x3029)))
(assert (= x505 (or x3912 x3418)))
(assert (= (and x1074 x1911) x1425))
(assert (x4106 x4043))
(assert (= x848 (and (not x1031) x979)))
(assert (= (and x889 x3075) x3562))
(assert (x4106 x3191))
(assert (x4106 x4388))
(assert (x1189 x2710))
(assert (x4106 x401))
(assert (x4106 x4332))
(assert (x4106 x1930))
(assert (= (=> (and (= 0 x1197) (= x1655 x2709)) x2544) x1341))
(assert (=> (>= 10000 x2148) (= (x3241 x2148) (x2376 x2148))))
(assert (x4106 x3648))
(assert (x2808 x3532))
(assert (= (x1262 (x3241 599290589)) 599290589))
(assert (= x2214 (and (not x3017) x2077)))
(assert (x4106 x3832))
(assert (= x3856 (or x4290 x2626)))
(assert (x4106 x2068))
(assert (x4106 x2020))
(assert (= (and x3178 x4396) x2761))
(assert (x4106 x1503))
(assert (= (=> (and (= 0 x2252) (= x2594 x3779)) x2502) x1632))
(assert (x4106 x2794))
(assert (=> (<= x1265 10000) (= (x2376 x1265) (x3241 x1265))))
(assert (x4106 x4146))
(assert (x4106 x1073))
(assert (= x154 (and (not x1117) x4167)))
(assert (=> (<= x1694 10000) (= (x2376 x1694) (x3241 x1694))))
(assert (x4106 x1186))
(assert (x2808 x2713))
(assert (x4106 x376))
(assert (= (x1262 (x2376 x2616)) x2616))
(assert (= x1118 (and x2917 (not x3631))))
(assert (x4106 x3254))
(assert (= x3141 (x1262 (x2376 x3141))))
(assert (= x3076 (and x474 (not x3269))))
(assert (x4106 x2998))
(assert (x4106 x1748))
(assert (x4106 x2993))
(assert (= (and (not x1859) x2325) x4379))
(assert (= (and x4087 (not x2334)) x4397))
(assert (x4106 x2184))
(assert (x4106 x2160))
(assert (x4106 x965))
(assert (= (and x2748 (not x1500)) x937))
(assert (x4106 x4196))
(assert (= (and x832 x263) x995))
(assert (= (=> (and (= x349 x2288) (= x1607 x437)) x2495) x2816))
(assert (= x2727 (or x3008 x1554)))
(assert (= x414 (=> (= x2998 x2899) x1045)))
(assert (= (and x647 x1880) x4215))
(assert (x4106 x741))
(assert (x4106 x921))
(assert (x4106 x3532))
(assert (= x159 (and x2980 x3785)))
(assert (x4106 x2567))
(assert (x4106 x2555))
(assert (= x3895 (and x767 (not x371))))
(assert (x4106 x1525))
(assert (x4106 x2767))
(assert (= (and x4101 x286) x720))
(assert (x4106 x528))
(assert (x4106 x267))
(assert (x4106 x2328))
(assert (= x3449 (and x1604 x3318)))
(assert (= (x1262 (x3241 3065339685)) 3065339685))
(assert (= x3671 (and (not x4101) x286)))
(assert (x4106 x4351))
(assert (= (and x2775 x2290) x3953))
(assert (x4106 x1974))
(assert (x4106 x2012))
(assert (= x1780 (and x225 (not x1102))))
(assert (= x71 (and x3838 x2141)))
(assert (= (and x838 x2260) x3415))
(assert (x4106 x1660))
(assert (= x2061 (and x88 x2513)))
(assert (x4106 x3390))
(assert (= (and (not x1526) x1987) x3724))
(assert (= x656 (and x2191 x4031)))
(assert (x4106 x2517))
(assert (x4106 x702))
(assert (= x3812 (and x1825 x1144)))
(assert (= x3518 (x1262 (x2376 x3518))))
(assert (x4106 x3267))
(assert (= x2908 (and x3091 x1097)))
(assert (x4106 x3322))
(assert (x2808 x3993))
(assert (= x3678 (and x1780 (not x3197))))
(assert (x4106 x864))
(assert (= x3171 (and x1488 (not x3440))))
(assert (= (or x2212 (and x3301 (not x4052)) (and x4378 x1912) (and (not x3407) x3386) x3159 (and x2668 x3084) (and x3578 x4170) (and x2086 x1371) x3153) x961))
(assert (x4106 x3352))
(assert (x4106 x695))
(assert (x4106 x3123))
(assert (x4106 x3763))
(assert (x4106 x1049))
(assert (= x3067 (and (not x4364) x1947)))
(assert (x4106 x3135))
(assert (x4106 x2071))
(assert (= (and x1214 x3778) x649))
(assert (x4106 x3991))
(assert (= x1939 (x1262 (x2376 x1939))))
(assert (x4106 x726))
(assert (= x2984 (and x3396 x3206)))
(assert (x4106 x2559))
(assert (= x1454 (and x501 x3786)))
(assert (x4106 x1889))
(assert (x4106 x4176))
(assert (= (and x3494 x1922) x2161))
(assert (= (=> (and (= x4133 x4123) (= x2866 0)) x3143) x4399))
(assert (= x1883 (and x2077 x3017)))
(assert (= x3363 (and (not x63) x3710)))
(assert (= x3693 (=> (and (= x2021 x1101) (= 0 x4092)) x1556)))
(assert (= (=> (and (= x1972 x45) (= x3972 x1991)) x977) x2830))
(assert (x4106 x2578))
(assert (x4106 x1698))
(assert (= x1680 (and (not x3967) x2407)))
(assert (x4106 x996))
(assert (= (and x1821 (not x3479)) x4372))
(assert (= (or x2364 x3891 x1644 x2542 x1936 x1639) x3556))
(assert (x4106 x4138))
(assert (x4106 x549))
(assert (= (and (not x2997) x2659) x4121))
(assert (x4106 x4270))
(assert (x4106 x2815))
(assert (= x1038 (and x1116 x1427)))
(assert (= x1059 (and x4036 (not x1643))))
(assert (x4106 x2252))
(assert (x4106 x583))
(assert (x2808 x3141))
(assert (= (x1262 (x2376 x1508)) x1508))
(assert (= x951 (or x1902 x1397)))
(assert (x4106 x1183))
(assert (=> (>= 10000 x2882) (= (x3241 x2882) (x2376 x2882))))
(assert (= x3775 (and x271 x1855)))
(assert (= (and x2359 x1913) x3153))
(assert (= x1900 (=> (and (= x1991 x2153) (= x45 x303)) x977)))
(assert (= x605 (and (not x1433) x3895)))
(assert (x4106 x1671))
(assert (x4106 x2703))
(assert (x4106 x3913))
(assert (x4106 x2768))
(assert (x4106 x3408))
(assert (= (and x4331 x4023) x3808))
(assert (x4106 x303))
(assert (x4106 x2281))
(assert (x4106 x1251))
(assert (x4106 x1970))
(assert (= (or x909 x2345 x1413 x2242 x3630 x2538) x2289))
(assert (= x3237 (and x1070 x3042)))
(assert (= x593 (and x923 x2057)))
(assert (x4106 x275))
(assert (x4106 x2961))
(assert (x4106 x881))
(assert (= x4339 (or x2223 x1577 x187 x3313 x363 x2689)))
(assert (= x600 (or (and x2357 x120) (and x2301 (not x2051)))))
(assert (x4106 x3039))
(assert (x4106 x2724))
(assert (= x3797 (and (not x3032) x2801)))
(assert (= (and x1985 x1518) x2841))
(assert (= x1669 (and x2634 x1170)))
(assert (= x2943 (and x631 (not x3290))))
(assert (= (x1262 (x2376 x3766)) x3766))
(assert (= (and x1951 x2355) x1480))
(assert (= (and (not x3388) x1278) x1682))
(assert (= (and x3985 (not x630)) x2000))
(assert (= x1202 (x1262 (x2376 x1202))))
(assert (x4106 x4056))
(assert (= (and (not x92) x603) x1044))
(assert (= x1006 (and x246 x2262)))
(assert (=> (>= 10000 x2907) (= (x3241 x2907) (x2376 x2907))))
(assert (x4106 x3283))
(assert (=> (<= x2491 10000) (= (x2376 x2491) (x3241 x2491))))
(assert (= x4068 (and x427 (not x4075))))
(assert (x4106 x4186))
(assert (x4106 x340))
(assert (= (and x890 (not x368)) x2239))
(assert (x1036 x2584))
(assert (x4106 x925))
(assert (= (and x3956 x3189) x2228))
(assert (= x496 (=> (and (= x792 0) (= x1112 x3100)) x3381)))
(assert (= (and x2040 (not x2158)) x3513))
(assert (x4106 x1101))
(assert (= x2691 (and x3543 x2370)))
(assert (x4106 x4220))
(assert (x4106 x2416))
(assert (x4106 x2391))
(assert (=> (>= 10000 x1426) (= (x2376 x1426) (x3241 x1426))))
(assert (x4106 x1963))
(assert (= x2362 (and x4054 x2869)))
(assert (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1262 (x3241 50942633119752846454219349998365661925608737367104304655302372697894809501696))))
(assert (= (and (not x2340) x2851) x940))
(assert (x4106 x1015))
(assert (x4106 x1774))
(assert (= (and x265 (not x1020)) x4039))
(assert (x4106 x2848))
(assert (x4106 x185))
(assert (x4106 x2909))
(assert (= (and (not x3850) x4397) x2226))
(assert (x4106 x314))
(assert (= x1556 (=> (and (= x4092 x2043) (= x1101 x1931)) x2333)))
(assert (x4106 x1619))
(assert (x4106 x2018))
(assert (x4106 x4073))
(assert (x4106 x2759))
(assert (x4106 x3871))
(assert (x4106 x1831))
(assert (x4106 x3120))
(assert (x4106 x3205))
(assert (x4106 x4325))
(assert (x4106 x3360))
(assert (x4106 x1658))
(assert (= x4243 (and x2748 x1500)))
(assert (= (or x2278 x2771 x1986 x2437 x3515 x3111) x850))
(assert (x4106 x1739))
(assert (x4106 x3222))
(assert (x4106 x1202))
(assert (= x415 (=> (and (= 0 x1136) (= x2174 x3193)) x1734)))
(assert (= (or (and x3003 x1614) (and (not x880) x993)) x2280))
(assert (x4106 x2533))
(assert (= x309 (and x130 x2553)))
(assert (x4106 x668))
(assert (= x2444 (or x144 x1575)))
(assert (x4106 x1693))
(assert (= x561 (or x1578 x2651)))
(assert (= (x1262 (x2376 x3986)) x3986))
(assert (x1036 x3991))
(assert (x2808 x3970))
(assert (= (and (not x3034) x1690) x900))
(assert (x4106 x298))
(assert (x4106 x1517))
(assert (x4106 x2491))
(assert (= (=> (and (= x2292 x1991) (= x45 x2707)) x977) x409))
(assert (x4106 x2745))
(assert (= (and x2813 x4145) x2198))
(assert (x4106 x2796))
(assert (= x3089 (or x1083 x4051)))
(assert (= (and x2513 (not x88)) x2634))
(assert (= (and x3985 x630) x664))
(assert (=> (<= x633 10000) (= (x3241 x633) (x2376 x633))))
(assert (= x2310 (x1262 (x2376 x2310))))
(assert (= (x3241 545886713) (x2376 545886713)))
(assert (= x3702 (and (not x4254) x798)))
(assert (= (and (not x1724) x2989) x357))
(assert (= (and x1868 x1790) x3694))
(assert (x4106 x2060))
(assert (x4106 x1196))
(assert (= x779 (x1262 (x2376 x779))))
(assert (= x1853 (or x3938 x2884)))
(assert (= (x1262 (x2376 x3888)) x3888))
(assert (= (and (not x1957) x793) x22))
(assert (x4106 x1166))
(assert (= (and x2921 x4183) x3047))
(assert (= (or x596 x1984) x1075))
(assert (= x629 (and x3834 (not x4225))))
(assert (= (or x2076 x4150) x3102))
(assert (= (and (not x1300) x248) x1575))
(assert (x4106 x3193))
(assert (= x1936 (and x906 x3584)))
(assert (= x3023 (or x2444 x3945 x3118 x135 x4277 x3657 x4015)))
(assert (x4106 x369))
(assert (= (and x3734 x3296) x2900))
(assert (= x2622 (x1262 (x2376 x2622))))
(assert (= x1958 (and (not x904) x2111)))
(assert (= x3571 (or x3602 x477)))
(assert (x4106 x3031))
(assert (= (and x2351 x2409) x2316))
(assert (x4106 x1997))
(assert (x4106 x3303))
(assert (= x4386 (and x544 x416)))
(assert (= (or (and x2488 (not x145)) x686) x2966))
(assert (= x3854 (or x3129 x398)))
(assert (= x3528 (=> (= x133 x1279) x330)))
(assert (x4106 x568))
(assert (x4106 x4185))
(assert (x4106 x311))
(assert (=> (>= 10000 x2006) (= (x3241 x2006) (x2376 x2006))))
(assert (= (x2376 404098525) (x3241 404098525)))
(assert (= (and x93 x871) x3163))
(assert (x1189 x3961))
(assert (= x64 (=> (and (= x349 x306) (= x1438 x1607)) x2495)))
(assert (= (=> (and (= x1798 x3024) (= x3507 x1444)) x3029) x862))
(assert (x4106 x1291))
(assert (= (=> (= x3868 (= x1243 0)) (and (=> (and (= (or (> x1997 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1997 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1997 32))) x2059) (not x3868)) (and (=> (and (= 1 x1279) (not x2059)) x3528) (=> x2059 x2902))) (=> x3868 x2902))) x423))
(assert (x4106 x2523))
(assert (= x3447 (x1262 (x2376 x3447))))
(assert (= x2234 (and x1817 x114)))
(assert (x4106 x1112))
(assert (x4106 x3174))
(assert (= x3902 (or (and x518 (not x1383)) (and x53 x3835))))
(assert (x4106 x2352))
(assert (x4106 x1419))
(assert (x4106 x2707))
(assert (x4106 x241))
(assert (x4106 x2835))
(assert (=> (<= x1726 10000) (= (x3241 x1726) (x2376 x1726))))
(assert (= (and x3555 (not x3933)) x2733))
(assert (x4106 x1347))
(assert (= (and x2351 (not x2409)) x4099))
(assert (= x564 (or x1625 x2403 x1591 x526 x1440 x714)))
(assert (= (and x1623 (not x3590)) x1203))
(assert (= x1122 (and x4372 (not x1365))))
(assert (= (x1262 (x2376 x2885)) x2885))
(assert (= x3818 (=> (and (= x1525 x349) (= x1607 x1953)) x2495)))
(assert (= x3175 (and x3417 x3667)))
(assert (x4106 x2288))
(assert (x4106 x112))
(assert (= x3300 (and (not x3463) x1467)))
(assert (x4106 x3645))
(assert (= (and x3542 x274) x2513))
(assert (x4106 x4173))
(assert (x4106 x2174))
(assert (= (and x460 x632) x2166))
(assert (x2808 x2053))
(assert (= x1085 (and x2774 x451)))
(assert (= x4356 (and x578 x1455)))
(assert (x4106 x2041))
(assert (= x1289 (and x830 (not x1055))))
(assert (x4106 x3794))
(assert (= x1442 (and x4214 x4034)))
(assert (= (and (not x2285) x3399) x935))
(assert (= x3780 (and x3688 (not x4207))))
(assert (= x2032 (and x2493 (not x1017))))
(assert (= 1461501637330902918203684832716283019655932542976 (x1262 (x3241 1461501637330902918203684832716283019655932542976))))
(assert (= x2456 (and x4060 x1935)))
(assert (= x1339 (or x4025 x1076 x3800 x2232 x599 x2147 x444 x1740)))
(assert (= (and x3086 (not x3550)) x4064))
(assert (x4106 x3500))
(assert (x4106 x3769))
(assert (x4106 x374))
(assert (= x3945 (or x1003 x3219)))
(assert (x4106 x2882))
(assert (= x2375 (x1262 (x2376 x2375))))
(assert (x4106 x3011))
(assert (= (x2376 157198259) (x3241 157198259)))
(assert (x4106 x3306))
(assert (= x3453 (and x4068 x1399)))
(assert (= (=> (and (= x3625 x4073) (= x860 x373)) x883) x3109))
(assert (= x3276 (or x2604 x1590)))
(assert (= x2231 (and x3101 x644)))
(assert (=> (<= x2622 10000) (= (x2376 x2622) (x3241 x2622))))
(assert (= (and (not x1230) x3914) x2519))
(assert (= x2491 (x1262 (x2376 x2491))))
(assert (= x1430 (or x3674 x3176)))
(assert (= (x1262 (x2760 x1313 1)) (+ (x1262 x1313) 1)))
(assert (= (and x1800 x463) x4290))
(assert (= (and x1102 x225) x3287))
(assert (x4106 x3714))
(assert (=> (<= x529 10000) (= (x2376 x529) (x3241 x529))))
(assert (x4106 x2552))
(assert (= (and x129 x3694) x4001))
(assert (x2808 x1634))
(assert (= (=> (and (or x2530 (not x2530)) (= x2530 (= x2815 0))) x1797) x3098))
(assert (and (= (* 2 (x2799 x328 2)) (- x328 (x4048 1 x328))) (x2725 x328 2) (x2838 x328 2) (x768 x328 2) (=> (and (< 0 x328) (< 0 2)) (and (<= (* (x2799 x328 2) 2) x328) (> (* (x2799 x328 2) 2) (- x328 2)))) (x4328 x328 2)))
(assert (= x4378 (and (not x797) x982)))
(assert (x2808 x181))
(assert (= (and (not x2498) x3063) x1988))
(assert (x4106 x2682))
(assert (x4106 x3341))
(assert (= (or x2026 x2300) x503))
(assert (x4106 x3828))
(assert (x4106 x2951))
(assert (= x4088 (or x1367 x1084)))
(assert (= x1427 (and (not x908) x4243)))
(assert (x4106 x1125))
(assert (= (=> (and (= x2815 x1136) (= x2174 x3182)) x3098) x1734))
(assert (= x3800 (and x3330 x1772)))
(assert (= x3755 (and x186 x1628)))
(assert (x4106 x1393))
(assert (= (and (not x560) x3117) x2217))
(assert (= (=> (and (or x2630 (not x2630)) (= x2630 (= 0 x1243))) x423) x4360))
(assert (= x1792 (and x2236 x553)))
(assert (= (and x3979 x3085) x5))
(assert (x4106 x2348))
(assert (x4106 x3412))
(assert (x1189 x1478))
(assert (= x652 (and x930 (not x1271))))
(assert (= (and x1346 x2030) x606))
(assert (=> (<= x3993 10000) (= (x2376 x3993) (x3241 x3993))))
(assert (x4069 2))
(assert (x4106 x1296))
(assert (= x2434 (and x3131 (not x622))))
(assert (x4106 x555))
(assert (x4106 x721))
(assert (x4106 x4387))
(assert (x4106 x2136))
(assert (= x982 (and x1913 (not x2359))))
(assert (x4106 x595))
(assert (x4106 x1284))
(assert (x4106 x3534))
(assert (x4106 x2423))
(assert (x4106 x500))
(assert (x4106 x1392))
(assert (x4106 x2233))
(assert (= (and x3395 x1833) x3630))
(assert (x4106 x1864))
(assert (x4106 x1505))
(assert (x4106 x3485))
(assert (= x1201 (=> (and (= x2933 x2021) (= x2548 0)) x1114)))
(assert (x4106 x707))
(assert (x4106 x1389))
(assert (= x2033 (and x3124 (not x2275))))
(assert (x4106 x3202))
(assert (x4106 x3923))
(assert (= x1697 (or x699 x4240)))
(assert (= x3075 (and x1863 x1921)))
(assert (x4106 x3609))
(assert (x4106 x1071))
(assert (x4106 x1079))
(assert (x4106 x3974))
(assert (= (or x1792 x2145 x2456 x3002 x291 x3383) x959))
(assert (x4106 x1605))
(assert (x4106 x2110))
(assert (x4106 x2561))
(assert (x1189 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (and (not x3983) x2974) x2001))
(assert (= x2783 (or x2461 x2772 x1423 x3392 x3347 x1416 x3289 x2121 x3040)))
(assert (x4106 x3709))
(assert (x4106 x573))
(assert (x4106 x4033))
(assert (= x3834 (and x971 x976)))
(assert (= (and x567 (not x3782)) x2373))
(assert (= x4334 (and x111 x2612)))
(assert (= (and x1880 (not x647)) x3239))
(assert (= (x1262 (x2376 x2827)) x2827))
(assert (x4106 x1729))
(assert (x4106 x2327))
(assert (= (and x68 (not x3121)) x1048))
(assert (= x436 (and x1949 x113)))
(assert (x4106 x3007))
(assert (x4106 x3715))
(assert (x4106 x3455))
(assert (= (and x1744 x508) x3339))
(assert (= x3632 (and x3624 x3235)))
(assert (x4106 x818))
(assert (= 2376452955 (x1262 (x3241 2376452955))))
(assert (= x513 (and x1789 x2532)))
(assert (= (or x245 x2161 x1775 x1461 x870 x4256 x2914 x1335) x556))
(assert (= x1806 (and x1901 x2247)))
(assert (= (and (not x539) x576) x3219))
(assert (= x1406 (and x2457 x716)))
(assert (x4106 x1243))
(assert (= (and x1363 (not x2800)) x4025))
(assert (= (and (not x3101) x644) x731))
(assert (x4106 x1749))
(assert (= x2053 (x1262 (x2376 x2053))))
(assert (= (and (not x3235) x3624) x2300))
(assert (=> (>= 10000 x1058) (= (x2376 x1058) (x3241 x1058))))
(assert (x4106 x637))
(assert (= x1426 (x1262 (x2376 x1426))))
(assert (= (and x2955 x1411) x920))
(assert (x4106 x3057))
(assert (x4106 x3597))
(assert (= (or x3252 x3813 x4241 x257 x1937 x1127) x4202))
(assert (x2808 x2885))
(assert (= (and x4298 (not x375)) x1736))
(assert (x4106 x1822))
(assert (= (=> (and (= 0 x917) (= x2949 x2084)) x2845) x4148))
(assert (x4106 x190))
(assert (x2808 x3888))
(assert (= x3762 (and x572 x1242)))
(assert (x4106 x2487))
(assert (= x3655 (x1262 (x2376 x3655))))
(assert (x4106 x4157))
(assert (=> (<= x1349 10000) (= (x3241 x1349) (x2376 x1349))))
(assert (x4106 x941))
(assert (x4106 x2273))
(assert (x2808 x1836))
(assert (x1189 x2584))
(assert (x4106 x1667))
(assert (x4106 x3787))
(assert (x4106 x4055))
(assert (x4106 x329))
(assert (x4106 x467))
(assert (= (and x4082 x2123) x3847))
(assert (= (=> (and (= x3340 x2982) (= x617 x2667)) x2987) x2762))
(assert (x4106 x2272))
(assert (x4106 x3577))
(assert (= (or x3742 x823) x4375))
(assert (= x3131 (and x3878 (not x233))))
(assert (x4106 x1217))
(assert (= x1008 (and x2688 x188)))
(assert (x4106 x2584))
(assert (= x451 (and x2175 (not x2880))))
(assert (x4106 x3863))
(assert (x4106 x843))
(assert (= (x2376 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x3241 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x4106 x2644))
(assert (= x2357 (and x119 x4237)))
(assert (= (and x488 (not x808)) x3878))
(assert (x4106 x3265))
(assert (x4106 x1473))
(assert (x4106 x2736))
(assert (= x2524 (=> (and (= x3182 x1465) (= x1749 x2815)) x3098)))
(assert (x4106 x306))
(assert (x4106 x1607))
(assert (x4106 x1796))
(assert (x4106 x614))
(assert (x4106 x360))
(assert (x4106 x2052))
(assert (= (and (not x4022) x1165) x2659))
(assert (= (and x334 (not x4110)) x2680))
(assert (x4106 x1854))
(assert (= (or x1534 x939) x89))
(assert (x4106 x3614))
(assert (x4106 x2685))
(assert (x2808 x3715))
(assert (= (and (not x2154) x1844) x832))
(assert (x1036 x3763))
(assert (x4106 x866))
(assert (x4106 x3152))
(assert (x4106 x1928))
(assert (x4106 x1884))
(assert (= x2147 (and x2334 x4087)))
(assert (= (and x430 (not x2009)) x4329))
(assert (x4106 x4343))
(assert (= x2286 (and x1085 (not x3750))))
(assert (= x2615 (=> (and (= (= 0 x4324) x2640) (or (not x2640) x2640)) x533)))
(assert (=> (>= 10000 x3371) (= (x2376 x3371) (x3241 x3371))))
(assert (= (and x3941 x283) x1656))
(assert (x4106 x324))
(assert (=> (>= 10000 x2375) (= (x2376 x2375) (x3241 x2375))))
(assert (x4106 x54))
(assert (x4106 x1261))
(assert (x4106 x3498))
(assert (=> (>= 10000 x1804) (= (x3241 x1804) (x2376 x1804))))
(assert (= x372 (and x4370 x2583)))
(assert (x4106 x4086))
(assert (= x2647 (and x1962 x193)))
(assert (= (and x1333 x911) x524))
(assert (= (and (not x1985) x1518) x3676))
(assert (= (and x3702 (not x1759)) x4136))
(assert (x4106 x3315))
(assert (= x1917 (and x4193 x3644)))
(assert (x4106 x1124))
(assert (= (and x3442 (not x723)) x48))
(assert (x4106 x836))
(assert (x4106 x304))
(assert (= (or (and x164 x4340) (and x3296 (not x3734))) x199))
(assert (x4106 x2549))
(assert (= x3620 (or x1048 x149 x2081 x3420 x2362 x896 x3497 x3847 x1925)))
(assert (x4106 x3931))
(assert (= (and x178 x2824) x676))
(assert (x2808 x1265))
(assert (= x1145 (and (not x1666) x2000)))
(assert (x4106 x3471))
(assert (= (and (not x1620) x3394) x4120))
(assert (x4106 x153))
(assert (= x686 (and x145 x2488)))
(assert (= (=> (and (= x3412 x2043) (= x1650 x1931)) x2333) x3242))
(assert (= (and x1645 x942) x3394))
(assert (= (and x2092 x3608) x3111))
(assert (x4106 x2277))
(assert (= (x3241 2835717307) (x2376 2835717307)))
(assert (x4106 x2182))
(assert (x2808 x167))
(assert (x4106 x1137))
(assert (= (and (not x3699) x540) x460))
(assert (x4106 x3454))
(assert (= x2111 (and (not x1949) x113)))
(assert (= x3795 (and (not x2211) x2908)))
(assert (= (and (not x3403) x2802) x1572))
(assert (= (and x4019 (not x1783)) x1319))
(assert (= (and x1479 x4268) x3813))
(assert (= x326 (and x777 x4278)))
(assert (= x3743 (=> (and (= x3340 0) (= x2667 x3779)) x2762)))
(assert (x4106 x1836))
(assert (x2808 x864))
(assert (x4106 x1861))
(assert (= (and (not x4312) x4314) x3509))
(assert (= (and x4316 x570) x2078))
(assert (= (and x757 (not x3901)) x911))
(assert (x4069 x3250))
(assert (x4106 x3218))
(assert (= (and x2028 x2079) x1242))
(assert (x4106 x1286))
(assert (x4106 x2933))
(assert (= x3778 (and x2236 (not x553))))
(assert (= (and x501 (not x3786)) x2378))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1262 (x3241 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (= (x2376 82641394424300342035733052706735002277943222088490025348945809093694544936960) (x3241 82641394424300342035733052706735002277943222088490025348945809093694544936960)))
(assert (x4106 x2248))
(assert (x4106 x341))
(assert (x4106 x590))
(assert (=> (>= 10000 x4138) (= (x3241 x4138) (x2376 x4138))))
(assert (x4106 x3100))
(assert (x4106 x1584))
(assert (= x2946 (=> (and (= (or x2528 x744) x3770) (<= x529 1461501637330902918203684832716283019655932542975) (= x1509 (x1249 (- x2106 x3397))) (= x2638 (x4257 (x2376 x2616) (x3241 4) 0)) x3770 (> 1461501637330902918203684832716283019655932542976 x529) (= x3397 (x461 (+ 128 x3508))) (<= 0 x4261) (= (or x2450 x1290) x3565) (= x1326 false) (not (= 0 x2616)) (= x4042 (= 0 x3609)) (>= x529 0) (= (= x529 x2882) x1263) (= (x432 x1313) x529) (= x2616 (x4352 128)) (>= 1461501637330902918203684832716283019655932542975 x2616) x3565 (= x214 1) (= (x380 x2638) x3609) (= x2895 (x461 (+ 4 x3397))) (> 256 x3609) (not (= x214 0)) (= x744 (= x529 x2882)) (= (= x4269 x529) x2528) (< x4261 1461501637330902918203684832716283019655932542976) (= x2106 (x461 (+ 32 x2895))) (= x413 32) (>= 255 x3609) (= x2450 (= x4261 x864)) (= x1313 (x2760 x4318 1)) (not (= x4261 0)) (= x4261 (x106 x4318)) (<= 0 x3609) (>= 1461501637330902918203684832716283019655932542975 x4261) (= x3508 (x4048 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3991)) (= 63 x3991) (= (= x4261 x3371) x1290) (not (or (> x413 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x413)) (< x413 32)))) (= (not x4042) x1326)) (and (=> (and (not x1263) (= (= x4269 x529) x1949)) (and (=> (and (and (not (= x2893 1422172137)) (not (< x3430 4)) (< 0 x590) (= 1889567281 x2893) (= (x1249 (- x3430 4)) x2018) (= x590 (x2388 (x2376 x4269))) (= x275 x1714) (not (< x2893 872247156)) (= 36 x3430) (not (= x2893 1086394137)) (= (or (and (= (<= x2018 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2018 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2018)) x2149) (> 2376452955 x2893) (not (= x2893 872247156)) (not (< x2893 649617121)) (= x4130 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x1509 x3430)) x1949) (and (=> x2149 x2025) (=> (and (and (= x3831 (= x1714 x275)) (= x1714 x2712)) (not x2149)) (and (=> (not x3831) x2025) (=> (and (and (<= x3579 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3579 0) (= x2919 32) (= 1 x3639) (= x3579 (x1846 x693)) (= x693 (x4257 (x2376 x1714) (x3241 2) 0))) x3831) x1529))))) (=> (and (not x1949) (= x904 (= x529 x864))) (and (=> (and (= x1745 (= x3371 x529)) (not x904)) (and (=> (and (not x1745) (= (= x2311 x529) x719)) (and (=> (and x719 (and (= x2525 x275) (= 1889567281 x112) (not (< x112 1086394137)) (not (= 1086394137 x112)) (= x1509 x3876) (= x1729 (x2388 (x2376 x2311))) (= (x1249 (- x3876 4)) x1355) (not (< x3876 4)) (= x4080 (or (and (> 32 x1355) (= true (<= x1355 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1355))) (> x1729 0) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x1884) (= 36 x3876))) (and (=> x4080 x494) (=> (and (not x4080) (and (= (= x275 x2525) x2716) (= x10 x2525))) (and (=> (not x2716) x494) (=> (and x2716 (and (<= 0 x1568) (= x1568 (x1035 x2516)) (= (x4257 (x2376 x2525) (x3241 2) 0) x2516) (= 32 x2416) (<= x1568 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2313 1))) x3179))))) (=> (and (not x719) (= x659 (= x3880 x529))) (and (=> (and (not x659) (and (= (= x529 x706) x1709) (and (and (not (> 826074471 x2721)) (= x2849 x275) (> x854 0) (not (= x2721 826074471)) (= (x2388 (x2376 x706)) x854) (= x168 36) (not (> 4 x168)) (= (or (and (> 32 x39) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x39) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x39)) x2443) (= x2721 1889567281) (= x1509 x168) (= (x1249 (- x168 4)) x39) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x695)) x1709))) (and (=> (and (and (= (= x2849 x275) x4346) (= x2849 x3958)) (not x2443)) (and (=> (not x4346) x3764) (=> (and x4346 (and (= 1 x1864) (= x2064 (x2317 x1029)) (>= x2064 0) (= (x4257 (x2376 x2849) (x3241 2) 0) x1029) (= x4358 32) (<= x2064 115792089237316195423570985008687907853269984665640564039457584007913129639935))) x3090))) (=> x2443 x3764))) (=> (and x659 (and (= 36 x858) (= x858 x1509) (= (or (> x2281 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2281 32) (= (<= x2281 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x712) (= x2281 (x1249 (- x858 4))) (= 1889567281 x4382) (not (> 4 x858)) (not (= 826074471 x4382)) (= x275 x1694) (not (> 826074471 x4382)) (< 0 x4016) (= (x2388 (x2376 x3880)) x4016) (= x1395 50942633119752846454219349998365661925608737367104304655302372697894809501696))) (and (=> (and (not x712) (and (= x2233 x1694) (= (= x1694 x275) x162))) (and (=> (and (and (= x3551 (x466 x3937)) (= 1 x2476) (<= 0 x3551) (= x3937 (x4257 (x2376 x1694) (x3241 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3551) (= x3722 32)) x162) x1539) (=> (not x162) x2116))) (=> x712 x2116))))))) (=> (and (and (= x3530 (or (and (= true (<= x2304 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2304 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2304))) (not (= x1309 826074471)) (not (< x2643 4)) (= 1889567281 x1309) (= 36 x2643) (= (x1249 (- x2643 4)) x2304) (not (> 826074471 x1309)) (= x3567 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x3423 (x2388 (x2376 x3371))) (= x2643 x1509) (= x167 x275) (> x3423 0)) x1745) (and (=> (and (not x3530) (and (= (= x167 x275) x111) (= x4319 x167))) (and (=> (not x111) x3684) (=> (and x111 (and (= (x150 x3338) x1511) (= x3338 (x4257 (x2376 x167) (x3241 2) 0)) (= 1 x1246) (>= x1511 0) (<= x1511 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 32 x8))) x2967))) (=> x3530 x3684))))) (=> (and x904 (and (= x3202 1889567281) (= x4274 36) (not (< x4274 4)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x4392) (= x3849 (x1249 (- x4274 4))) (not (< x3202 826074471)) (= x4274 x1509) (> x549 0) (= x2424 x275) (not (= x3202 826074471)) (= x2489 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3849)) (< x3849 32)) (> x3849 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x2388 (x2376 x864)) x549))) (and (=> x2489 x543) (=> (and (and (= x2424 x2664) (= x463 (= x2424 x275))) (not x2489)) (and (=> (not x463) x543) (=> (and (and (= 1 x1391) (= (x1648 x2554) x1233) (= 32 x344) (<= 0 x1233) (= (x4257 (x2376 x2424) (x3241 2) 0) x2554) (<= x1233 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x463) x3439))))))))) (=> (and (and (not (= 1422172137 x1605)) (not (< x1605 649617121)) (= x1605 1889567281) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x402) (not (> 4 x2331)) (= (x2388 (x2376 x2882)) x1686) (< 0 x1686) (not (= 1086394137 x1605)) (> 2376452955 x1605) (not (= 872247156 x1605)) (= x1517 (x1249 (- x2331 4))) (not (> 872247156 x1605)) (= x1509 x2331) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1517)) (< x1517 32)) (> x1517 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3524) (= x2331 36) (= x2907 x275)) x1263) (and (=> x3524 x2924) (=> (and (not x3524) (and (= x2907 x1977) (= x1384 (= x2907 x275)))) (and (=> (not x1384) x2924) (=> (and x1384 (and (= 32 x1444) (= (x3951 x1531) x2254) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2254) (= (x4257 (x2376 x2907) (x3241 2) 0) x1531) (= 1 x1798) (<= 0 x2254))) x862)))))))))
(assert (= x3172 (and x265 x1020)))
(assert (= (=> (and (= 0 x1593) (= x1112 x2052)) x1932) x2244))
(assert (= x1676 (and x3967 x2407)))
(assert (x4106 x4213))
(assert (x4106 x2874))
(assert (= x1176 (and x598 x1253)))
(assert (= (and x2806 x1027) x1992))
(assert (x4106 x2313))
(assert (= (and x1038 (not x280)) x2936))
(assert (= x1354 (and (not x3393) x4078)))
(assert (= x1554 (or x372 x1208 x4156 x3980 x1191 x2677)))
(assert (x4106 x259))
(assert (= x2305 (or x1701 x2797)))
(assert (x4106 x1654))
(assert (x4106 x912))
(assert (x4106 x307))
(assert (x4106 x1232))
(assert (= x732 (and (not x2401) x2157)))
(assert (= (and x3850 x4397) x444))
(assert (= x3805 (and x3550 x3086)))
(assert (=> (<= x3888 10000) (= (x2376 x3888) (x3241 x3888))))
(assert (= x4341 (and (not x1512) x3204)))
(assert (x4106 x4020))
(assert (= x952 (or x3562 x5 x2761 x4184 x3106 x1689 x3612 x1185)))
(assert (= (and x334 x4110) x2315))
(assert (x4106 x485))
(assert (=> (>= 10000 x1106) (= (x2376 x1106) (x3241 x1106))))
(assert (= x1518 (and x1351 x2373)))
(assert (=> (<= x3766 10000) (= (x2376 x3766) (x3241 x3766))))
(assert (x4106 x169))
(assert (x4106 x753))
(assert (x4106 x452))
(assert (= x3226 (and x2325 x1859)))
(assert (= x1631 (and (not x250) x627)))
(assert (not x3058))
(assert (= x193 (and x421 (not x1207))))
(assert (x4106 x3456))
(assert (= x2057 (or x4381 (and x1608 (not x2455)))))
(assert (= x1165 (and x1955 x3580)))
(assert (= (and x562 x663) x1220))
(assert (= (and x1978 (not x846)) x2748))
(assert (x4106 x2043))
(assert (= x1019 (=> (= (= 0 x1607) x3900) (and (=> (and (not x3900) (= x1805 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x349) true) (< x349 32)) (> x349 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> (and (= x2904 x1640) x1805) x2744) (=> (and (not x1805) (and (= x2904 x1081) (= 1 x3952))) x1134))) (=> (and x3900 (= x1640 x2904)) x2744)))))
(assert (= x3410 (or x892 x3604 x619 x824 x3226 x1828)))
(assert (= x1083 (and x2663 (not x86))))
(assert (x4106 x3511))
(assert (x4106 x4065))
(assert (= x1926 (and x2850 x1472)))
(assert (x4106 x1691))
(assert (x4106 x2205))
(assert (x4106 x4350))
(assert (x4106 x3982))
(assert (= (and (not x2004) x2990) x1918))
(assert (= (and x252 (not x1403)) x3542))
(assert (x4106 x3711))
(assert (x4106 x10))
(assert (x4106 x226))
(assert (= (and (not x1366) x2637) x1855))
(assert (= (and x3162 (not x1652)) x3642))
(assert (x4106 x3636))
(assert (x4106 x3304))
(assert (x4106 x1873))
(assert (x4106 x402))
(assert (x4106 x1301))
(assert (and (=> (< 0 1461501637330902918203684832716283019655932542976) (= (+ (x2008 x2710 1461501637330902918203684832716283019655932542976) (* (x2799 x2710 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)) x2710)) (x1418 x2710 1461501637330902918203684832716283019655932542976) (x4174 x2710 1461501637330902918203684832716283019655932542976) (x3919 x2710 1461501637330902918203684832716283019655932542976)))
(assert (= (and x938 x1903) x650))
(assert (= (and x2897 (not x659)) x110))
(assert (x4106 x3559))
(assert (x4106 x320))
(assert (x2808 x3048))
(assert (x4106 x3825))
(assert (x2808 x2523))
(assert (= x3385 (and x2119 x3237)))
(assert (= x1871 (and (not x2490) x4291)))
(assert (= (and x1373 x3676) x1651))
(assert (x4106 x2873))
(assert (= (or (and x757 x3901) (and x513 x134) x1394 x524 (and x3606 x3966) (and (not x1868) x1790) (and x4001 x2042) x920 (and (not x129) x3694)) x3364))
(assert (= (and x2268 x546) x1413))
(assert (= (and x48 (not x43)) x2651))
(assert (= x1570 (and x3287 (not x7))))
(assert (= x1833 (and (not x2241) x2200)))
(assert (= (x3241 872247156) (x2376 872247156)))
(assert (= x563 (and x2535 (not x2625))))
(assert (= x3737 (=> (and (= 0 x989) (= x2699 x3547)) x4222)))
(assert (= (and (not x1405) x70) x2457))
(assert (= (or (and x2920 (not x1718)) (and x1869 x4363)) x2076))
(assert (= (and x2920 x1718) x4150))
(assert (= (and x3299 (not x3413)) x3758))
(assert (= (and x1179 x1485) x531))
(assert (= (or x3755 x1601) x2847))
(assert (x4106 x428))
(assert (x4106 x506))
(assert (x4106 x355))
(assert (= x2049 (and x403 x2483)))
(assert (= (=> (= x4043 0) x1602) x352))
(assert (x4106 x968))
(assert (x4106 x3501))
(assert (= (x1262 (x2376 x2683)) x2683))
(assert (x4106 x1801))
(assert (x2808 x2882))
(assert (= (x2376 773487949) (x3241 773487949)))
(assert (x4106 x3973))
(assert (= x1349 (x1262 (x2376 x1349))))
(assert (= (=> (and (= 0 x956) (= x1655 x3754)) x3533) x4361))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x2008 x3991 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x2799 x3991 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x3991)) (x1418 x3991 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4174 x3991 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3919 x3991 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x4106 x2894))
(assert (x4106 x2153))
(assert (= x1157 (and x3494 (not x1922))))
(assert (= x1466 (and x3142 x390)))
(assert (= x3129 (and x1849 x2422)))
(assert (= (=> (and (= x2292 x689) (= x2707 0)) x409) x2189))
(assert (x4106 x429))
(assert (x4106 x2107))
(assert (x4106 x2245))
(assert (= x40 (=> (and (= x38 x3182) (= x868 x2815)) x3098)))
(assert (x4106 x3993))
(assert (x2808 x1662))
(assert (= x2394 (and x3909 x95)))
(assert (= (and x587 x1570) x2793))
(assert (= x551 (or x1095 x3965)))
(assert (x4106 x1090))
(assert (x4106 x2441))
(assert (= (and x603 x92) x634))
(assert (= (x1262 (x2376 x2666)) x2666))
(assert (= (or x3902 x1060) x651))
(assert (x4106 x73))
(assert (= x4036 (and x1813 (not x725))))
(assert (x4106 x4371))
(assert (= x2405 (and x3398 x877)))
(assert (= x1813 (and (not x1941) x154)))
(assert (x4106 x3939))
(assert (= (and x3976 x4259) x1838))
(assert (x4106 x2148))
(assert (x4106 x1953))
(assert (= (and x3671 x1336) x2458))
(assert (x4106 x3849))
(assert (x2808 x706))
(assert (= x886 (and x2504 x1879)))
(assert (= x864 (x1262 (x2376 x864))))
(assert (= x610 (and x3702 x1759)))
(assert (= x363 (and (not x4247) x1940)))
(assert (x4106 x2106))
(assert (= (and x1903 (not x938)) x1845))
(assert (= (and x3445 (not x511)) x1978))
(assert (= x2852 (and x4254 x798)))
(assert (= (x3241 1086394137) (x2376 1086394137)))
(assert (x4106 x2721))
(assert (x4106 x4275))
(assert (x4106 x1535))
(assert (x4106 x840))
(assert (= (=> (and (= x3754 x2299) (= x3563 x956)) x200) x3533))
(assert (x4106 x2892))
(assert (x4106 x4164))
(assert (= (and (not x127) x4098) x2994))
(assert (x4106 x2220))
(assert (x4106 x1267))
(assert (= (=> (and (= x4320 0) (= x735 x1655)) x1594) x1043))
(assert (x4106 x3187))
(assert (x4106 x3180))
(assert (= (x3241 893399075) (x2376 893399075)))
(assert (x4106 x2712))
(assert (x4106 x1007))
(assert (x4106 x4096))
(assert (=> (<= x2843 10000) (= (x2376 x2843) (x3241 x2843))))
(assert (x4106 x1032))
(assert (= (and x2004 x2990) x109))
(assert (x4106 x2666))
(assert (= x2232 (and x3745 x1805)))
(assert (= x1127 (and (not x3792) x3593)))
(assert (= x3082 (and x745 x3907)))
(assert (= x2199 (and x456 x2658)))
(assert (= (and (not x2342) x4263) x399))
(assert (= (and (not x2102) x2321) x1981))
(assert (x4106 x3048))
(assert (x4106 x998))
(assert (= x1609 (and x3538 (not x3248))))
(assert (x4106 x689))
(assert (x4106 x2478))
(assert (x4106 x2616))
(assert (= x1880 (and x900 (not x1580))))
(assert (x2808 x2487))
(assert (= x3073 (or x829 (and x857 (not x2640)))))
(assert (= x3289 (and x3394 x1620)))
(assert (x4106 x1649))
(assert (x4106 x4310))
(assert (= x3347 (and (not x2980) x3785)))
(assert (= x2321 (and x419 x681)))
(assert (x2808 x1641))
(assert (= x3370 (or x2811 x2783)))
(assert (x4106 x1297))
(assert (= x1903 (and (not x4166) x364)))
(assert (= x3869 (and x2090 (not x4159))))
(assert (= (x1262 (x2376 x3970)) x3970))
(assert (x4106 x4208))
(assert (x4106 x299))
(assert (= x2058 (=> (and (= x881 x2031) (= x2754 x3881)) x440)))
(assert (x4106 x167))
(assert (= (and (not x932) x2964) x3677))
(assert (x4106 x4030))
(assert (= x3420 (and x442 x1736)))
(assert (= x403 (and x2246 (not x2715))))
(assert (x2808 x3655))
(assert (= (and x3015 x974) x2121))
(assert (x4106 x1283))
(assert (= x416 (and x2747 (not x760))))
(assert (= (=> (and (= x3137 x3779) (= x2767 0)) x992) x3488))
(assert (x4106 x3292))
(assert (= x1740 (and x3463 x1467)))
(assert (= x1308 (and x914 x3405)))
(assert (= x1504 (and (not x532) x1733)))
(assert (x4106 x3093))
(assert (= x3626 (and x3916 x569)))
(assert (= x4291 (and x622 x3131)))
(assert (x1227 x2710))
(assert (= (and (not x3868) x2410) x33))
(assert (= (x1262 (x3241 2678909723)) 2678909723))
(assert (x2808 x1726))
(assert (x4106 x4102))
(assert (x4106 x2360))
(assert (x4106 x678))
(assert (=> (<= x4000 10000) (= (x2376 x4000) (x3241 x4000))))
(assert (= (and x3374 (not x579)) x3853))
(assert (= (and x2504 (not x1879)) x2270))
(assert (x4106 x3375))
(assert (x4106 x2006))
(assert (x4106 x4299))
(assert (= x2917 (or x2636 (and (not x2066) x2418))))
(assert (x4106 x3227))
(assert (= (x1262 (x3241 2569309863)) 2569309863))
(assert (= (and x559 (not x1685)) x3374))
(assert (= (x2376 3645313523) (x3241 3645313523)))
(assert (=> (<= x1641 10000) (= (x3241 x1641) (x2376 x1641))))
(assert (x4106 x2261))
(assert (x4106 x3569))
(assert (x4106 x138))
(assert (x4106 x2548))
(assert (x2808 x721))
(assert (= x1604 (and x1062 x3181)))
(assert (x4106 x45))
(assert (= (=> (and (= x1622 x4021) (= x2545 x3154)) x2632) x2408))
(assert (= (and x1403 x252) x4251))
(assert (= (and x1817 (not x114)) x57))
(assert (= (or x2752 x4281 x2446 x2905 x148 x1540 x4398 x629) x1397))
(assert (x4106 x541))
(assert (= (x1262 (x2376 x3569)) x3569))
(assert (= (and (not x2481) x1929) x798))
(assert (= x2730 (and x1642 x810)))
(assert (= (and x2169 x399) x1027))
(assert (= (and x3459 x2436) x3159))
(assert (x4106 x491))
(assert (x4106 x4008))
(assert (x4069 x328))
(assert (=> (<= x1212 10000) (= (x3241 x1212) (x2376 x1212))))
(assert (= x1146 (or x600 x1012)))
(assert (= x1064 (and x3677 (not x1582))))
(assert (x4106 x648))
(assert (x4106 x972))
(assert (x4106 x2358))
(assert (= x3040 (and x159 x1268)))
(assert (x4106 x2562))
(assert (x4106 x1005))
(assert (= x1946 (and (not x2443) x1956)))
(assert (x4106 x2207))
(assert (x4106 x516))
(assert (x4106 x3942))
(assert (x4106 x1960))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x2008 x2584 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x2799 x2584 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2584)) (x1418 x2584 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4174 x2584 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3919 x2584 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (and x7 x3287) x3209))
(assert (= (and x1609 (not x1379)) x3008))
(assert (= (and x3415 (not x4090)) x890))
(assert (= (x1262 (x2376 x3585)) x3585))
(assert (x4106 x1791))
(assert (= x476 (and (not x3295) x3239)))
(assert (= x1193 (and x1823 x3683)))
(assert (= (and x2575 (not x3361)) x2138))
(assert (= (=> (and (= x2299 x735) (= x4320 x3563)) x200) x1594))
(assert (= (and x719 x1516) x2463))
(assert (= (and x3271 (not x1088)) x603))
(assert (= x834 (=> (= 0 x299) x574)))
(assert (x4106 x3732))
(assert (x4106 x2901))
(assert (= x1086 (and x4022 x1165)))
(assert (x4106 x4324))
(assert (= x243 (and x3298 x1852)))
(assert (x4106 x2746))
(assert (= x1772 (and x2805 x3726)))
(assert (and (=> (< 0 32) (= (+ (x2008 x3961 32) (* (x2799 x3961 32) 32)) x3961)) (x1418 x3961 32) (x4174 x3961 32) (x3919 x3961 32)))
(assert (= (and x3738 x396) x1832))
(assert (= x2845 (=> (and (= x2245 x2610) (= x917 x1362) (= x2650 x2084)) x3284)))
(assert (= (or x1128 x3055 x1075 x388 x2293 x561 x4294) x3971))
(assert (= (and (not x3727) x3803) x2451))
(assert (= (and x4231 x3171) x2344))
(assert (= (=> (and (= x3507 x3722) (= x3024 x2476)) x3029) x1539))
(assert (x4106 x2307))
(assert (x2808 x262))
(assert (= (and x365 x3591) x155))
(assert (= (=> (and (= x349 x220) (= x1607 x2782)) x2495) x1277))
(assert (= (=> (= x299 x2998) x1045) x574))
(assert (x4106 x802))
(assert (x4106 x660))
(assert (x4106 x1178))
(assert (x4106 x2179))
(assert (and (=> (< 0 32) (= (+ (x2008 x3991 32) (* (x2799 x3991 32) 32)) x3991)) (x1418 x3991 32) (x4174 x3991 32) (x3919 x3991 32)))
(assert (=> (>= 10000 x3772) (= (x3241 x3772) (x2376 x3772))))
(assert (x4106 x893))
(assert (x4106 x2424))
(assert (= x1775 (and x2340 x2851)))
(assert (x4106 x1377))
(assert (x4106 x325))
(assert (x4106 x4358))
(assert (= (and x3172 (not x2929)) x4183))
(assert (= x2488 (or x2879 x1834)))
(assert (= x2803 (and (not x175) x3234)))
(assert (= x3915 (or x315 x2270)))
(assert (= x3319 (and (not x1820) x1664)))
(assert (= x3313 (and x3259 x2913)))
(assert (x4106 x1061))
(assert (x4106 x3918))
(assert (= (or x359 x2597) x2074))
(assert (= (=> (and (= 0 x325) (= x2250 x24)) x1840) x438))
(assert (= x2424 (x1262 (x2376 x2424))))
(assert (= (and x1989 x782) x3545))
(assert (x4106 x1447))
(assert (= x986 (=> (and (= x2391 0) (= x3193 x1065)) x1793)))
(assert (= (x3241 1889567281) (x2376 1889567281)))
(assert (= (and x3184 x3701) x1211))
(assert (= x1701 (or (and x1621 x1282) (and x3600 (not x3214)))))
(assert (= x1455 (or x2810 x3089 x3689 x2727 x1430 x4171 x4088)))
(assert (x4106 x264))
(assert (= x1757 (and x1118 (not x3272))))
(assert (= (and x2417 (not x316)) x2247))
(assert (x4106 x3081))
(assert (x4106 x1439))
(assert (= x386 (and (not x2702) x1631)))
(assert (= (and x967 (not x3781)) x78))
(assert (= x2990 (and x4159 x2090)))
(assert (x4106 x1950))
(assert (= x183 (x1262 (x2376 x183))))
(assert (= x2165 (=> (and (= 0 x2782) (= x3794 x220)) x1277)))
(assert (x4106 x3326))
(assert (=> (>= 10000 x2873) (= (x2376 x2873) (x3241 x2873))))
(assert (x2808 x1571))
(assert (x4106 x811))
(assert (x4106 x3080))
(assert (= x1446 (=> (and (= x349 x2619) (= x1607 x3244)) x2495)))
(assert (x4106 x2576))
(assert (= (x1262 (x2376 x2525)) x2525))
(assert (=> (<= x1508 10000) (= (x3241 x1508) (x2376 x1508))))
(assert (x2808 x1212))
(assert (x4106 x1588))
(assert (= x2724 (x1262 (x2376 x2724))))
(assert (x4106 x527))
(assert (x2808 x275))
(assert (x4106 x2595))
(assert (x4106 x3427))
(assert (=> (>= 10000 x841) (= (x2376 x841) (x3241 x841))))
(assert (= (and x1512 x3204) x2197))
(assert (=> (<= x660 10000) (= (x2376 x660) (x3241 x660))))
(assert (x4106 x701))
(assert (= x1381 (or x182 x3362)))
(assert (= (and (not x3177) x4379) x1851))
(assert (= x2537 (or x389 x294 x2337 x2956 x610 x32 x2852 x2315 x59)))
(assert (x4106 x2428))
(assert (x4106 x3499))
(assert (x2291 x2710))
(assert (= x2757 (and (not x3036) x1059)))
(assert (= (and x2275 x3124) x286))
(assert (x4106 x4200))
(assert (= x3271 (and x2175 x2880)))
(assert (=> (>= 10000 x2136) (= (x2376 x2136) (x3241 x2136))))
(assert (= x3055 (or x564 x453)))
(assert (= x3029 (=> (and (= (x1249 (- x3263 x2726)) x324) (not (= x3024 0)) (= (x2388 (x2376 x529)) x1506) (= x2726 (x461 (+ x3397 x1328))) (not (= 0 x1506)) (= (x461 (+ x3507 31)) x3961) (= (= x2882 x529) x2805) (= (x4048 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3961) x1328) (= (x1835 x3397) x3250) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3507) true) (> 32 x3507)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3507))) (= x626 (x461 (+ x2726 4))) (= x3263 (x461 (+ x626 32)))) (and (=> (and x2805 (and (> x441 0) (= x441 (x2388 (x2376 x2882))) (= (x1249 (- x2642 4)) x1071) (= x3236 20853193852723734048814770637610870652489083209607696777694672748161462697984) (= x628 x3250) (not (> 649617121 x1971)) (> 872247156 x1971) (= x1971 773487949) (= (or (and (< x1071 32) (= true (<= x1071 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1071)) x3330) (not (= 649617121 x1971)) (= 36 x2642) (= x324 x2642) (not (> 4 x2642)) (> 2376452955 x1971))) (and (=> (and (= x2184 x1640) x3330) x2744) (=> (and (not x3330) (and (<= x814 1461501637330902918203684832716283019655932542975) (= x1897 x628) (> 1461501637330902918203684832716283019655932542976 x814) (= (= x275 x814) x2800) (<= 0 x814) (= x934 (x2799 x3250 2)))) (and (=> (and (not x2800) (= x2184 x1640)) x2744) (=> (and x2800 (= x3463 (= 0 x275))) (and (=> (and (not x3463) (= (= 0 x934) x609)) (and (=> (and (not x609) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2184) (>= x2184 0) (= x2334 (> x934 x2184)))) (and (=> (and (not x2334) (and (>= x3871 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3871) (= x3850 (< x3871 x934)) (= (x3951 x2013) x3871) (= (x4257 (x2376 x275) (x3241 2) 0) x2013) (= x2904 (x1249 (- x2184 x934))) (= (x1249 (- x2184 x934)) x575))) (and (=> (and x3850 (= x1640 x2904)) x2744) (=> (and (not x3850) (and (> 1461501637330902918203684832716283019655932542976 x2561) (= (= x2561 x2882) x2963) (= (x1249 (- x3871 x934)) x1774) (<= x2561 1461501637330902918203684832716283019655932542975) (= (x4257 (x2376 x275) (x3241 2) 0) x2741) (= 128 x3867) (<= 0 x2561))) (and (=> (and (= (= x2561 x4269) x4359) (not x2963)) (and (=> (and (and (= x1770 2835717307) (not (< x3342 4)) (= x275 x1726) (= x1002 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x786 (x1249 (- x3342 4))) (= x1897 x1376) (not (> 2376452955 x1770)) (= x914 (or (> x786 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x786) true) (> 64 x786)))) (> x2953 0) (= x3342 68) (= 68 x3342) (= (x2388 (x2376 x4269)) x2953) (> 3065339685 x1770) (not (> 2678909723 x1770)) (not (= 2678909723 x1770))) x4359) (and (=> (and (not x914) (and (= x1955 (= x1726 x275)) (= x2591 x1726))) (and (=> (not x1955) x2165) (=> (and x1955 (and (= (x1846 x462) x1587) (<= x1587 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1376 x4355) (<= 0 x1587) (= x4022 (> x1897 x1587)) (= (x4257 (x2376 x2882) (x3241 2) 0) x462))) (and (=> x4022 x2165) (=> (and (not x4022) (= x2997 (> x1376 x1587))) (and (=> x2997 x2165) (=> (and (not x2997) (and (= (x3228 x157) x3303) (= (x1249 (- x1587 x1376)) x2957) (= x1692 (x4257 (x2376 x2882) (x3241 2) 0)) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1376)) x3510) (<= x3303 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3303 0) (= x157 (x4257 (x2376 x1726) (x3241 2) 0)) (= x192 (> x3303 x3510)))) (and (=> (and (and (= (> x3303 x2508) x2141) (= (x461 (+ x1376 x3303)) x2508)) (not x192)) (and (=> x2141 x2165) (=> (and (not x2141) (and (= x2782 1) (= (x4257 (x2376 x1726) (x3241 2) 0) x2968) (= 32 x220))) x1277))) (=> x192 x2165))))))))) (=> x914 x2165))) (=> (and (not x4359) (= (= x2561 x864) x3440)) (and (=> (and x3440 (and (= (x1249 (- x3928 4)) x4033) (< 0 x3006) (= x3933 (or (> x4033 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4033)) (< x4033 64)))) (= (x2388 (x2376 x864)) x3006) (not (> 826074471 x3123)) (= x275 x2567) (= 2835717307 x3123) (not (= 1889567281 x3123)) (not (= x3123 826074471)) (not (= 2376452955 x3123)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3877) (= x2952 x1897) (not (< x3928 4)) (= x3928 68) (not (= x3123 2514000705)) (= x3928 68))) (and (=> (and (not x3933) (and (= (= x2567 x275) x4135) (= x3495 x2567))) (and (=> (not x4135) x534) (=> (and (and (= x2952 x3679) (<= x4218 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x216 (x4257 (x2376 x2882) (x3241 2) 0)) (<= 0 x4218) (= x4218 (x1648 x216)) (= x2732 (< x4218 x1897))) x4135) (and (=> (and (= x666 (> x2952 x4218)) (not x2732)) (and (=> x666 x534) (=> (and (not x666) (and (= x2266 (< x2581 x778)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x778) (<= 0 x778) (= (x1249 (- x4218 x2952)) x497) (= (x4257 (x2376 x2567) (x3241 2) 0) x2676) (= (x3020 x2676) x778) (= x126 (x4257 (x2376 x2882) (x3241 2) 0)) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2952)) x2581))) (and (=> x2266 x534) (=> (and (not x2266) (and (= x1879 (> x778 x1739)) (= x1739 (x461 (+ x778 x2952))))) (and (=> (and (and (= x3125 1) (= x1396 (x4257 (x2376 x2567) (x3241 2) 0)) (= 32 x3855)) (not x1879)) x581) (=> x1879 x534))))))) (=> x2732 x534))))) (=> x3933 x534))) (=> (and (= x4231 (= x2561 x3371)) (not x3440)) (and (=> (and (not x4231) (= x246 (= x2311 x2561))) (and (=> (and (not x246) (= (= x2561 x3880) x1102)) (and (=> (and (and (= x2375 x275) (not (= x2576 2514000705)) (= x528 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x2576 2835717307) (not (> 826074471 x2576)) (not (= x2576 1889567281)) (= x7 (or (> x2696 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2696)) (> 64 x2696)))) (> x3323 0) (= x3997 68) (not (= 2376452955 x2576)) (not (= 826074471 x2576)) (= x2870 x1897) (not (> 4 x3997)) (= x2696 (x1249 (- x3997 4))) (= x3997 68) (= x3323 (x2388 (x2376 x3880)))) x1102) (and (=> (and (and (= x2375 x1186) (= x587 (= x2375 x275))) (not x7)) (and (=> (and x587 (and (<= x3355 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3355 (x466 x1451)) (= x1451 (x4257 (x2376 x2882) (x3241 2) 0)) (>= x3355 0) (= (> x1897 x3355) x4234) (= x3007 x2870))) (and (=> (and (not x4234) (= x475 (< x3355 x2870))) (and (=> x475 x2095) (=> (and (and (>= x968 0) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2870)) x1292) (<= x968 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x115 (x4257 (x2376 x2375) (x3241 2) 0)) (= x968 (x2829 x115)) (= x3843 (x4257 (x2376 x2882) (x3241 2) 0)) (= x3361 (< x1292 x968)) (= (x1249 (- x3355 x2870)) x2863)) (not x475)) (and (=> x3361 x2095) (=> (and (and (= x1565 (> x968 x52)) (= (x461 (+ x2870 x968)) x52)) (not x3361)) (and (=> (and (and (= x1564 1) (= (x4257 (x2376 x2375) (x3241 2) 0) x770) (= x2931 32)) (not x1565)) x1794) (=> x1565 x2095))))))) (=> x4234 x2095))) (=> (not x587) x2095))) (=> x7 x2095))) (=> (and (and (= x3197 (= x2561 x706)) (and (and (not (> 826074471 x1356)) (> x3222 0) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x566) (= x1693 x1897) (= x1641 x275) (not (= x1356 2376452955)) (= x1356 2835717307) (= x761 68) (not (= 826074471 x1356)) (= x212 (x1249 (- x761 4))) (not (< x761 4)) (= x3665 (or (> x212 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x212 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x212)))) (not (= 2514000705 x1356)) (not (= 1889567281 x1356)) (= 68 x761) (= (x2388 (x2376 x706)) x3222)) x3197)) (not x1102)) (and (=> x3665 x4093) (=> (and (and (= x775 (= x1641 x275)) (= x552 x1641)) (not x3665)) (and (=> (not x775) x4093) (=> (and x775 (and (= x1599 (x2317 x3309)) (= x1187 x1693) (<= x1599 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1599) (= (x4257 (x2376 x2882) (x3241 2) 0) x3309) (= (> x1897 x1599) x1678))) (and (=> x1678 x4093) (=> (and (not x1678) (= (< x1599 x1693) x1207)) (and (=> x1207 x4093) (=> (and (and (= x3406 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1693))) (= x3949 (x1249 (- x1599 x1693))) (= x2807 (x4257 (x2376 x1641) (x3241 2) 0)) (= x3321 (x754 x2807)) (= x852 (x4257 (x2376 x2882) (x3241 2) 0)) (= x1962 (< x3406 x3321)) (<= 0 x3321) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3321)) (not x1207)) (and (=> (and (and (= (> x3321 x4393) x161) (= x4393 (x461 (+ x1693 x3321)))) (not x1962)) (and (=> x161 x4093) (=> (and (not x161) (and (= 32 x1525) (= 1 x1953) (= (x4257 (x2376 x1641) (x3241 2) 0) x2019))) x3818))) (=> x1962 x4093))))))))))))) (=> (and x246 (and (= x925 (x1249 (- x4395 4))) (not (= x1276 1086394137)) (= x4395 68) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x925) (and (< x925 64) (= (<= x925 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x523) (= x147 x1897) (= x1779 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (< x1276 1086394137)) (> x1281 0) (not (< x4395 4)) (not (= 1889567281 x1276)) (not (= x1276 2514000705)) (not (= 2376452955 x1276)) (= x275 x1899) (= x4395 68) (= x1276 2835717307) (= x1281 (x2388 (x2376 x2311))))) (and (=> x523 x4323) (=> (and (not x523) (and (= x1899 x2348) (= (= x275 x1899) x499))) (and (=> (not x499) x4323) (=> (and (and (= x3346 (x4257 (x2376 x2882) (x3241 2) 0)) (= x147 x2192) (<= x2788 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2788) (= (x1035 x3346) x2788) (= x1476 (> x1897 x2788))) x499) (and (=> (and (not x1476) (= (> x147 x2788) x1999)) (and (=> x1999 x4323) (=> (and (and (= x3682 (x4257 (x2376 x1899) (x3241 2) 0)) (<= 0 x3935) (= (x1249 (- x2788 x147)) x595) (= x1732 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x147))) (= (> x3935 x1732) x4327) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3935) (= x1417 (x4257 (x2376 x2882) (x3241 2) 0)) (= (x2055 x3682) x3935)) (not x1999)) (and (=> x4327 x4323) (=> (and (not x4327) (and (= (x461 (+ x3935 x147)) x4357) (= (< x4357 x3935) x3960))) (and (=> (and (not x3960) (and (= x1474 (x4257 (x2376 x1899) (x3241 2) 0)) (= 32 x2619) (= x3244 1))) x1446) (=> x3960 x4323))))))) (=> x1476 x4323))))))))) (=> (and x4231 (and (not (= 826074471 x3464)) (= x3464 2835717307) (= (x1249 (- x4113 4)) x3292) (= x624 (x2388 (x2376 x3371))) (< 0 x624) (= x4113 68) (not (= 2376452955 x3464)) (not (= x3464 2514000705)) (= x107 (or (and (= (<= x3292 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x3292)) (> x3292 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (> 4 x4113)) (not (> 826074471 x3464)) (= x4113 68) (not (= 1889567281 x3464)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1799) (= x1561 x275) (= x583 x1897))) (and (=> x107 x1213) (=> (and (not x107) (and (= x2735 x1561) (= x2586 (= x275 x1561)))) (and (=> (not x2586) x1213) (=> (and x2586 (and (>= x4189 0) (<= x4189 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4257 (x2376 x2882) (x3241 2) 0) x1976) (= x743 x583) (= (> x1897 x4189) x4205) (= x4189 (x150 x1976)))) (and (=> (and (= (> x583 x4189) x3211) (not x4205)) (and (=> (and (not x3211) (and (= (x1249 (- x4189 x583)) x355) (= x1177 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x583))) (= (< x1177 x2779) x692) (= x3333 (x4257 (x2376 x2882) (x3241 2) 0)) (>= x2779 0) (<= x2779 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2779 (x2464 x3354)) (= (x4257 (x2376 x1561) (x3241 2) 0) x3354))) (and (=> (and (and (= x76 (x461 (+ x583 x2779))) (= (< x76 x2779) x3584)) (not x692)) (and (=> (and (and (= x1438 1) (= x306 32) (= x3629 (x4257 (x2376 x1561) (x3241 2) 0))) (not x3584)) x64) (=> x3584 x1213))) (=> x692 x1213))) (=> x3211 x1213))) (=> x4205 x1213))))))))))))) (=> (and x2963 (and (= x275 x1212) (not (< x2786 2376452955)) (= x1624 68) (= x1330 (x2388 (x2376 x2882))) (not (< x2786 2678909723)) (not (= x2786 2678909723)) (= x2833 x1897) (not (> 4 x1624)) (= x2496 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x2786 2835717307) (> 3065339685 x2786) (= x1026 (or (> x2107 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2107 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2107 64)))) (> x1330 0) (= 68 x1624) (= x2107 (x1249 (- x1624 4))))) (and (=> x1026 x3707) (=> (and (and (= x3043 x1212) (= (= x275 x1212) x562)) (not x1026)) (and (=> (and x562 (and (>= x3637 0) (= x2859 (< x3637 x1897)) (= x3732 x2833) (= (x2122 x4342) x3637) (<= x3637 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4342 (x4257 (x2376 x2882) (x3241 2) 0)))) (and (=> (and (not x2859) (= (< x3637 x2833) x3976)) (and (=> x3976 x3707) (=> (and (not x3976) (and (= x1152 (x3621 x1303)) (= x2763 (x4257 (x2376 x2882) (x3241 2) 0)) (= x1915 (> x1152 x1392)) (= (x4257 (x2376 x1212) (x3241 2) 0) x1303) (<= 0 x1152) (<= x1152 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1502 (x1249 (- x3637 x2833))) (= x1392 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2833))))) (and (=> x1915 x3707) (=> (and (and (= x2046 (x461 (+ x1152 x2833))) (= x1512 (> x1152 x2046))) (not x1915)) (and (=> x1512 x3707) (=> (and (not x1512) (and (= x437 1) (= x2608 (x4257 (x2376 x1212) (x3241 2) 0)) (= x2288 32))) x2816))))))) (=> x2859 x3707))) (=> (not x562) x3707))))))))) (=> (and (= x2184 x1640) x2334) x2744))) (=> (and x609 (= x2184 x1640)) x2744))) (=> (and (= x2184 x1640) x3463) x2744))))))) (=> (and (= x737 (= x529 x4269)) (not x2805)) (and (=> (and (and (> 872247156 x1741) (= x1140 x324) (not (= 649617121 x1741)) (< 0 x818) (= x1140 36) (= (x2388 (x2376 x4269)) x818) (not (> 4 x1140)) (= x1895 x3250) (not (< x1741 649617121)) (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 x2562) (= 773487949 x1741) (= x1091 (x1249 (- x1140 4))) (< x1741 2376452955) (= x662 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1091)) (> 32 x1091)) (> x1091 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x737) (and (=> (and (= x4133 x2610) x662) x4399) (=> (and (not x662) (and (= x3616 x1895) (> 1461501637330902918203684832716283019655932542976 x4186) (= (x2799 x3250 2) x345) (= (= x4186 x275) x2925) (>= x4186 0) (>= 1461501637330902918203684832716283019655932542975 x4186))) (and (=> (and (= x2610 x4133) (not x2925)) x4399) (=> (and (= x3424 (= 0 x275)) x2925) (and (=> (and (= (= x345 0) x2505) (not x3424)) (and (=> (and (not x2505) (and (<= 0 x2610) (= (< x2610 x345) x1951) (<= x2610 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (= x4133 x2610) x1951) x4399) (=> (and (not x1951) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x376) (= (x1249 (- x2610 x345)) x3187) (= (x1846 x1200) x376) (= (< x376 x345) x978) (= x1200 (x4257 (x2376 x275) (x3241 2) 0)) (= x2139 (x1249 (- x2610 x345))) (<= 0 x376))) (and (=> (and x978 (= x3187 x4133)) x4399) (=> (and (not x978) (and (>= x3885 0) (>= 1461501637330902918203684832716283019655932542975 x3885) (= 128 x72) (< x3885 1461501637330902918203684832716283019655932542976) (= x3473 (x4257 (x2376 x275) (x3241 2) 0)) (= (= x2882 x3885) x2527) (= x1671 (x1249 (- x376 x345))))) (and (=> (and x2527 (and (not (< x495 2678909723)) (= (x1249 (- x1881 4)) x446) (= x1881 68) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3716) (not (< x1881 4)) (not (< x495 2376452955)) (= x655 (or (> x446 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x446) true) (< x446 64)))) (= x3986 x275) (= (x2388 (x2376 x2882)) x452) (< 0 x452) (= 68 x1881) (not (= 2678909723 x495)) (= x538 x3616) (= 2835717307 x495) (< x495 3065339685))) (and (=> (and (and (= x360 x3986) (= x1230 (= x275 x3986))) (not x655)) (and (=> (and x1230 (and (= x538 x3288) (<= 0 x3223) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3223) (= (x3951 x966) x3223) (= x2158 (< x3223 x3616)) (= x966 (x4257 (x2376 x4269) (x3241 2) 0)))) (and (=> (and (not x2158) (= x4250 (> x538 x3223))) (and (=> x4250 x1811) (=> (and (and (= x2243 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x538))) (<= 0 x3614) (= (< x2243 x3614) x3404) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3614) (= x2976 (x1249 (- x3223 x538))) (= (x2024 x1756) x3614) (= x1756 (x4257 (x2376 x3986) (x3241 2) 0)) (= (x4257 (x2376 x4269) (x3241 2) 0) x4127)) (not x4250)) (and (=> (and (not x3404) (and (= (x461 (+ x3614 x538)) x1015) (= x871 (< x1015 x3614)))) (and (=> (and (and (= x3735 (x4257 (x2376 x3986) (x3241 2) 0)) (= 1 x3031) (= x2412 32)) (not x871)) x279) (=> x871 x1811))) (=> x3404 x1811))))) (=> x2158 x1811))) (=> (not x1230) x1811))) (=> x655 x1811))) (=> (and (= (= x3885 x4269) x2260) (not x2527)) (and (=> (and x2260 (and (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2466) (not (> 2678909723 x950)) (not (< x950 2376452955)) (not (> 4 x2230)) (= 68 x2230) (< 0 x726) (= x3616 x949) (not (= x950 2678909723)) (= x183 x275) (> 3065339685 x950) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x747) true) (> 64 x747)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x747)) x4090) (= (x1249 (- x2230 4)) x747) (= 68 x2230) (= x726 (x2388 (x2376 x4269))) (= x950 2835717307))) (and (=> x4090 x496) (=> (and (and (= x368 (= x275 x183)) (= x4332 x183)) (not x4090)) (and (=> (and (and (= (> x3616 x3870) x3644) (= (x34 x2889) x3870) (>= x3870 0) (= (x4257 (x2376 x4269) (x3241 2) 0) x2889) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3870) (= x949 x1421)) x368) (and (=> (and (= x3208 (< x3870 x949)) (not x3644)) (and (=> x3208 x496) (=> (and (not x3208) (and (<= 0 x268) (= x4057 (< x1178 x268)) (= (x1249 (- x3870 x949)) x4151) (= (x4257 (x2376 x183) (x3241 2) 0) x2155) (<= x268 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x268 (x604 x2155)) (= x140 (x4257 (x2376 x4269) (x3241 2) 0)) (= x1178 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x949))))) (and (=> (and (not x4057) (and (= (x461 (+ x268 x949)) x2164) (= (> x268 x2164) x1300))) (and (=> (and (and (= x3100 32) (= x2930 (x4257 (x2376 x183) (x3241 2) 0)) (= 1 x792)) (not x1300)) x3381) (=> x1300 x496))) (=> x4057 x496))))) (=> x3644 x496))) (=> (not x368) x496))))) (=> (and (= x4038 (= x864 x3885)) (not x2260)) (and (=> (and (and (= x2307 2835717307) (= x3967 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2751)) (< x2751 64)) (> x2751 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x4196 76450787359836037641860180984291677749980919077056822294353438043884394381312) (< 0 x2103) (= x275 x779) (= x3616 x2835) (= (x2388 (x2376 x864)) x2103) (not (> 826074471 x2307)) (not (= x2307 2514000705)) (not (< x826 4)) (not (= x2307 1889567281)) (not (= 2376452955 x2307)) (= x826 68) (not (= 826074471 x2307)) (= x826 68) (= x2751 (x1249 (- x826 4)))) x4038) (and (=> x3967 x400) (=> (and (not x3967) (and (= x256 (= x275 x779)) (= x779 x1698))) (and (=> (and x256 (and (>= x128 0) (= x128 (x1648 x1298)) (= x2835 x4185) (<= x128 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x128 x3616) x3465) (= x1298 (x4257 (x2376 x4269) (x3241 2) 0)))) (and (=> (and (not x3465) (= (> x2835 x128) x4141)) (and (=> (and (not x4141) (and (= x2566 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2835))) (= x1870 (x4257 (x2376 x4269) (x3241 2) 0)) (<= x1712 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1712) (= x2944 (< x2566 x1712)) (= (x4154 x1456) x1712) (= x1456 (x4257 (x2376 x779) (x3241 2) 0)) (= x1544 (x1249 (- x128 x2835))))) (and (=> (and (and (= x4331 (< x3968 x1712)) (= (x461 (+ x1712 x2835)) x3968)) (not x2944)) (and (=> (and (and (= (x4257 (x2376 x779) (x3241 2) 0) x825) (= 32 x4073) (= x860 1)) (not x4331)) x3109) (=> x4331 x400))) (=> x2944 x400))) (=> x4141 x400))) (=> x3465 x400))) (=> (not x256) x400))))) (=> (and (= (= x3885 x3371) x342) (not x4038)) (and (=> (and (and (= x3616 x2421) (= x553 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3927)) (< x3927 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3927))) (not (> 826074471 x3041)) (= x3041 2835717307) (= (x2388 (x2376 x3371)) x327) (= 68 x2448) (not (= 1889567281 x3041)) (not (= x3041 826074471)) (not (= 2376452955 x3041)) (> x327 0) (= x3927 (x1249 (- x2448 4))) (not (> 4 x2448)) (= 68 x2448) (= x275 x3585) (= x3127 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x3041 2514000705))) x342) (and (=> (and (not x553) (and (= (= x3585 x275) x1214) (= x3496 x3585))) (and (=> (not x1214) x2244) (=> (and x1214 (and (<= 0 x3599) (= (x4257 (x2376 x4269) (x3241 2) 0) x916) (= x2100 (< x3599 x3616)) (= x3599 (x150 x916)) (= x2745 x2421) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3599))) (and (=> (and (= (< x3599 x2421) x3771) (not x2100)) (and (=> (and (not x3771) (and (= (x1458 x2795) x3802) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3802) (= (x1249 (- x3599 x2421)) x1995) (= (x4257 (x2376 x3585) (x3241 2) 0) x2795) (= x1935 (< x259 x3802)) (= (x4257 (x2376 x4269) (x3241 2) 0) x902) (>= x3802 0) (= x259 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2421))))) (and (=> (and (and (= (> x3802 x2352) x1530) (= (x461 (+ x2421 x3802)) x2352)) (not x1935)) (and (=> (and (and (= x1593 1) (= 32 x2052) (= x828 (x4257 (x2376 x3585) (x3241 2) 0))) (not x1530)) x1932) (=> x1530 x2244))) (=> x1935 x2244))) (=> x3771 x2244))) (=> x2100 x2244))))) (=> x553 x2244))) (=> (and (= x1097 (= x2311 x3885)) (not x342)) (and (=> (and (and (not (= x3310 1889567281)) (not (= x3310 2376452955)) (not (= x3310 2514000705)) (= x1320 x3616) (= x758 (x2388 (x2376 x2311))) (= 2835717307 x3310) (= x2211 (or (> x4201 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x4201) (= true (<= x4201 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= 68 x1501) (not (> 1086394137 x3310)) (= x4201 (x1249 (- x1501 4))) (= x275 x2006) (not (= 1086394137 x3310)) (> x758 0) (not (> 4 x1501)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1722) (= 68 x1501)) x1097) (and (=> (and (and (= x2006 x1970) (= (= x275 x2006) x457)) (not x2211)) (and (=> (not x457) x3767) (=> (and (and (= (< x3535 x3616) x469) (= x1320 x1109) (= x4050 (x4257 (x2376 x4269) (x3241 2) 0)) (<= 0 x3535) (= x3535 (x1035 x4050)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3535)) x457) (and (=> (and (not x469) (= (< x3535 x1320) x188)) (and (=> (and (and (= x2390 (x1249 (- x3535 x1320))) (= x3911 (x658 x2177)) (<= x3911 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x3558 x3911) x1253) (<= 0 x3911) (= x3558 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1320))) (= x2177 (x4257 (x2376 x2006) (x3241 2) 0)) (= (x4257 (x2376 x4269) (x3241 2) 0) x643)) (not x188)) (and (=> x1253 x3767) (=> (and (not x1253) (and (= x539 (< x4047 x3911)) (= (x461 (+ x3911 x1320)) x4047))) (and (=> (and (not x539) (and (= x4362 (x4257 (x2376 x2006) (x3241 2) 0)) (= x2068 1) (= x3996 32))) x2253) (=> x539 x3767))))) (=> x188 x3767))) (=> x469 x3767))))) (=> x2211 x3767))) (=> (and (= x3421 (= x3880 x3885)) (not x1097)) (and (=> (and x3421 (and (= x3641 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= x3549 826074471)) (= x81 (x1249 (- x2318 4))) (= x2318 68) (= 2835717307 x3549) (= x3616 x2750) (not (= x3549 1889567281)) (not (= x3549 2376452955)) (= x448 (or (and (< x81 64) (= true (<= x81 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x81))) (= x2213 (x2388 (x2376 x3880))) (= x2318 68) (= x1202 x275) (< 0 x2213) (not (= x3549 2514000705)) (not (< x3549 826074471)) (not (> 4 x2318)))) (and (=> (and (not x448) (and (= (= x1202 x275) x3792) (= x18 x1202))) (and (=> (not x3792) x60) (=> (and x3792 (and (<= 0 x96) (= (x4257 (x2376 x4269) (x3241 2) 0) x2711) (= x1589 (< x96 x3616)) (= x2750 x3380) (= x96 (x466 x2711)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x96))) (and (=> x1589 x60) (=> (and (= x1115 (> x2750 x96)) (not x1589)) (and (=> (and (not x1115) (and (= x2142 (x1249 (- x96 x2750))) (= x1079 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2750))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1993) (= (x3619 x4191) x1993) (= (x4257 (x2376 x1202) (x3241 2) 0) x4191) (= x3806 (x4257 (x2376 x4269) (x3241 2) 0)) (>= x1993 0) (= (< x1079 x1993) x4169))) (and (=> x4169 x60) (=> (and (and (= x3862 (x461 (+ x1993 x2750))) (= x1479 (> x1993 x3862))) (not x4169)) (and (=> x1479 x60) (=> (and (not x1479) (and (= x811 1) (= x1385 32) (= x2942 (x4257 (x2376 x1202) (x3241 2) 0)))) x3220))))) (=> x1115 x60))))))) (=> x448 x60))) (=> (and (and (and x4180 (and (< 0 x922) (= x4285 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (< x2749 826074471)) (= x2749 2835717307) (not (= x2749 826074471)) (= x4163 68) (= (or (> x3306 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x3306) (= (<= x3306 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x932) (not (= 2514000705 x2749)) (not (< x4163 4)) (not (= 1889567281 x2749)) (= x3306 (x1249 (- x4163 4))) (= x2130 x3616) (= x275 x1634) (= 68 x4163) (not (= x2749 2376452955)) (= (x2388 (x2376 x706)) x922))) (= x4180 (= x706 x3885))) (not x3421)) (and (=> (and (and (= x1582 (= x1634 x275)) (= x2423 x1634)) (not x932)) (and (=> (not x1582) x3521) (=> (and x1582 (and (<= 0 x1809) (= x1310 (x4257 (x2376 x4269) (x3241 2) 0)) (<= x1809 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2130 x2621) (= x760 (< x1809 x3616)) (= (x2317 x1310) x1809))) (and (=> x760 x3521) (=> (and (not x760) (= (> x2130 x1809) x544)) (and (=> x544 x3521) (=> (and (not x544) (and (= x1248 (x4257 (x2376 x1634) (x3241 2) 0)) (<= 0 x3360) (= x4226 (> x3360 x3116)) (= x3116 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2130))) (= x4003 (x4257 (x2376 x4269) (x3241 2) 0)) (<= x3360 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3360 (x4212 x1248)) (= (x1249 (- x1809 x2130)) x2445))) (and (=> (and (and (= (< x1347 x3360) x4312) (= (x461 (+ x2130 x3360)) x1347)) (not x4226)) (and (=> (and (and (= x749 (x4257 (x2376 x1634) (x3241 2) 0)) (= x2874 1) (= x3185 32)) (not x4312)) x394) (=> x4312 x3521))) (=> x4226 x3521))))))))) (=> x932 x3521))))))))))))))))))) (=> (and x2505 (= x4133 x2610)) x4399))) (=> (and (= x4133 x2610) x3424) x4399))))))) (=> (and (not x737) (and (= (= x529 x275) x3483) (and (and (< x1155 893399075) (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 x1520) (< x1155 2376452955) (= 773487949 x1155) (= (x2388 (x2376 x275)) x855) (not (= 545886713 x1155)) (not (< x1735 4)) (not (> 545886713 x1155)) (= 36 x1735) (= x1685 (or (> x2453 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x2453 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x2453)))) (= x1735 x324) (= x2453 (x1249 (- x1735 4))) (= x56 x3250) (< 0 x855) (not (= 579358252 x1155))) x3483))) (and (=> (and (and (> 1461501637330902918203684832716283019655932542976 x320) (= x56 x328) (= (= x320 x3371) x227) (= x320 (x106 x1142)) (= (= 0 x320) x579) x592 (= x592 (or x227 x3088)) (>= x320 0) (>= 1461501637330902918203684832716283019655932542975 x320) (= x3088 (= x864 x320)) (= x1142 (x4257 (x2376 x275) (x3241 3) 0))) (not x1685)) (and (=> (and x579 (and (= x2184 x1415) (= x2610 x4172))) x4338) (=> (and (and (>= x4006 0) (= x809 (x2388 (x2376 x4006))) (< x4006 1461501637330902918203684832716283019655932542976) (= x1338 (= 0 x809)) (<= x4006 1461501637330902918203684832716283019655932542975) (= (x105 x4139) x4006) (= x139 (or x2646 x3857)) (= 128 x3936) (= (= x4006 x2882) x2646) (= x3857 (= x4006 x4269)) (= x2347 (x4257 (x2376 x275) (x3241 3) 0)) (= (x2760 x2347 1) x4139) x139) (not x579)) (and (=> (and (= x2413 (= x4006 x2882)) (not x1338)) (and (=> (and (not x2413) (= x2563 (= x4006 x4269))) (and (=> (and x2563 (and (= x2684 36) (> 2376452955 x2203) (= x4396 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3573)) (> 32 x3573)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3573))) (= x3573 (x1249 (- x2684 4))) (= x328 x331) (not (= x2203 649617121)) (= x4348 20853193852723734048814770637610870652489083209607696777694672748161462697984) (not (< x2203 649617121)) (= x2203 773487949) (= (x2388 (x2376 x4269)) x4288) (< 0 x4288) (not (> 4 x2684)) (< x2203 872247156) (= x2684 36))) (and (=> (and x4396 (= x2250 x2610)) x438) (=> (and (and (= x3511 x331) (<= x4186 1461501637330902918203684832716283019655932542975) (<= 0 x4186) (= (x2799 x328 2) x2473) (= (= x4186 x275) x1921) (> 1461501637330902918203684832716283019655932542976 x4186)) (not x4396)) (and (=> (and (= (= x275 0) x889) x1921) (and (=> (and x889 (= x2610 x2250)) x438) (=> (and (not x889) (= (= x2473 0) x1422)) (and (=> (and (= x2610 x2250) x1422) x438) (=> (and (and (= x3979 (> x2473 x2610)) (<= 0 x2610) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2610)) (not x1422)) (and (=> (and x3979 (= x2250 x2610)) x438) (=> (and (and (<= 0 x406) (= (x4257 (x2376 x275) (x3241 2) 0) x99) (= (< x406 x2473) x4367) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x406) (= x1148 (x1249 (- x2610 x2473))) (= (x1249 (- x2610 x2473)) x1950) (= x406 (x1846 x99))) (not x3979)) (and (=> (and (= x1950 x2250) x4367) x438) (=> (and (and (= (x1249 (- x406 x2473)) x3436) (= x3375 128) (>= 1461501637330902918203684832716283019655932542975 x3885) (< x3885 1461501637330902918203684832716283019655932542976) (<= 0 x3885) (= (= x2882 x3885) x365) (= (x4257 (x2376 x275) (x3241 2) 0) x756)) (not x4367)) (and (=> (and (and (not (= x3955 2678909723)) (= x4333 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= 2835717307 x3955) (= x3511 x1131) (not (< x2580 4)) (= x2487 x275) (not (> 2376452955 x3955)) (not (< x3955 2678909723)) (= x2110 (x1249 (- x2580 4))) (= (x2388 (x2376 x2882)) x2041) (< 0 x2041) (< x3955 3065339685) (= x2580 68) (= x3240 (or (and (< x2110 64) (= true (<= x2110 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2110))) (= x2580 68)) x365) (and (=> x3240 x3372) (=> (and (not x3240) (and (= x4076 x2487) (= (= x2487 x275) x1020))) (and (=> (not x1020) x3372) (=> (and x1020 (and (= (x4257 (x2376 x4269) (x3241 2) 0) x180) (= x1051 (x3951 x180)) (= x2929 (< x1051 x3511)) (<= 0 x1051) (= x943 x1131) (<= x1051 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x2929 x3372) (=> (and (= x2921 (> x1131 x1051)) (not x2929)) (and (=> (and (and (= x4085 (x4257 (x2376 x4269) (x3241 2) 0)) (= x3269 (< x2533 x2469)) (>= x2469 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2469) (= (x4257 (x2376 x2487) (x3241 2) 0) x4058) (= (x1249 (- x1051 x1131)) x1510) (= x2533 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1131))) (= x2469 (x2739 x4058))) (not x2921)) (and (=> x3269 x3372) (=> (and (not x3269) (and (= (x461 (+ x2469 x1131)) x3749) (= (< x3749 x2469) x4162))) (and (=> (and (not x4162) (and (= x3581 (x4257 (x2376 x2487) (x3241 2) 0)) (= 1 x1972) (= 32 x3972))) x2830) (=> x4162 x3372))))) (=> x2921 x3372))))))))) (=> (and (not x365) (= x1635 (= x4269 x3885))) (and (=> (and (not x1635) (= x2880 (= x864 x3885))) (and (=> (and (not x2880) (= x2774 (= x3371 x3885))) (and (=> (and (= x630 (= x2311 x3885)) (not x2774)) (and (=> (and (= x1666 (= x3880 x3885)) (not x630)) (and (=> (and x1666 (and (= (x1249 (- x4027 4)) x3016) (not (< x4027 4)) (= x275 x3715) (not (= 2376452955 x3840)) (not (= 826074471 x3840)) (= x4018 (x2388 (x2376 x3880))) (= x2092 (or (and (< x3016 64) (= true (<= x3016 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3016))) (= x1558 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 826074471 x3840)) (not (= 2514000705 x3840)) (not (= 1889567281 x3840)) (> x4018 0) (= 2835717307 x3840) (= 68 x4027) (= 68 x4027) (= x3511 x678))) (and (=> x2092 x2094) (=> (and (not x2092) (and (= x387 x3715) (= (= x3715 x275) x1264))) (and (=> (not x1264) x2094) (=> (and x1264 (and (<= x3892 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3892 0) (= (x4257 (x2376 x4269) (x3241 2) 0) x1856) (= x3479 (> x3511 x3892)) (= x2948 x678) (= (x466 x1856) x3892))) (and (=> (and (= x1365 (> x678 x3892)) (not x3479)) (and (=> x1365 x2094) (=> (and (and (= (x4257 (x2376 x4269) (x3241 2) 0) x426) (= x4371 (x1249 (- x3892 x678))) (= (x3774 x3652) x3097) (= (x4257 (x2376 x3715) (x3241 2) 0) x3652) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x678)) x1435) (<= 0 x3097) (= (< x1435 x3097) x160) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3097)) (not x1365)) (and (=> x160 x2094) (=> (and (not x160) (and (= x4303 (x461 (+ x3097 x678))) (= (< x4303 x3097) x4216))) (and (=> x4216 x2094) (=> (and (not x4216) (and (= 32 x3180) (= 1 x4173) (= x1944 (x4257 (x2376 x3715) (x3241 2) 0)))) x2970))))))) (=> x3479 x2094))))))) (=> (and (and (= (= x3885 x706) x895) (and (and (= x275 x2622) (= (x1249 (- x3077 4)) x1032) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1032) (and (< x1032 64) (= true (<= x1032 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x3791) (= x1760 x3511) (not (= x3152 826074471)) (= x2652 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x3077 68) (not (= 2376452955 x3152)) (= x3152 2835717307) (not (< x3152 826074471)) (= x1021 (x2388 (x2376 x706))) (< 0 x1021) (not (= x3152 1889567281)) (= x3077 68) (not (= x3152 2514000705)) (not (< x3077 4))) x895)) (not x1666)) (and (=> (and (and (= (= x2622 x275) x1652) (= x1419 x2622)) (not x3791)) (and (=> (not x1652) x4321) (=> (and (and (= x2839 x1760) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2569) (= (x2317 x4012) x2569) (= x4012 (x4257 (x2376 x4269) (x3241 2) 0)) (<= 0 x2569) (= (> x3511 x2569) x4)) x1652) (and (=> (and (not x4) (= x2274 (> x1760 x2569))) (and (=> x2274 x4321) (=> (and (not x2274) (and (>= x3357 0) (= (< x108 x3357) x238) (= (x4257 (x2376 x2622) (x3241 2) 0) x2539) (= (x4257 (x2376 x4269) (x3241 2) 0) x2432) (= (x4059 x2539) x3357) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1760)) x108) (= x3470 (x1249 (- x2569 x1760))) (<= x3357 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x238) (and (= (> x3357 x1378) x2030) (= (x461 (+ x1760 x3357)) x1378))) (and (=> (and (and (= (x4257 (x2376 x2622) (x3241 2) 0) x3586) (= 1 x853) (= x2794 32)) (not x2030)) x2778) (=> x2030 x4321))) (=> x238 x4321))))) (=> x4 x4321))))) (=> x3791 x4321))))) (=> (and (and (not (> 1086394137 x3705)) (not (= 1889567281 x3705)) (= x517 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= (x2388 (x2376 x2311)) x2428) (= x3705 2835717307) (= x3825 (x1249 (- x803 4))) (not (= x3705 2514000705)) (not (= 1086394137 x3705)) (= 68 x803) (not (= 2376452955 x3705)) (= x803 68) (= x840 x3511) (= x275 x2181) (not (< x803 4)) (= x739 (or (and (< x3825 64) (= (<= x3825 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x3825 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 0 x2428)) x630) (and (=> x739 x3195) (=> (and (not x739) (and (= (= x275 x2181) x4134) (= x2181 x547))) (and (=> (not x4134) x3195) (=> (and (and (= x1240 (x4257 (x2376 x4269) (x3241 2) 0)) (<= 0 x146) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x146) (= x2553 (> x3511 x146)) (= (x1035 x1240) x146) (= x840 x3462)) x4134) (and (=> (and (not x2553) (= (> x840 x146) x3589)) (and (=> (and (and (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x840)) x2248) (<= 0 x2207) (= x2207 (x3544 x4326)) (= x2695 (x4257 (x2376 x4269) (x3241 2) 0)) (= (x1249 (- x146 x840)) x491) (<= x2207 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x2248 x2207) x3727) (= (x4257 (x2376 x2181) (x3241 2) 0) x4326)) (not x3589)) (and (=> (and (and (= (x461 (+ x2207 x840)) x1453) (= x3056 (< x1453 x2207))) (not x3727)) (and (=> x3056 x3195) (=> (and (and (= 32 x2153) (= 1 x303) (= x2515 (x4257 (x2376 x2181) (x3241 2) 0))) (not x3056)) x1900))) (=> x3727 x3195))) (=> x3589 x3195))) (=> x2553 x3195))))))))) (=> (and x2774 (and (not (= x996 2514000705)) (not (> 826074471 x996)) (= (x1249 (- x4292 4)) x369) (not (= x996 1889567281)) (> x1389 0) (= (x2388 (x2376 x3371)) x1389) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x369) (and (= (<= x369 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x369 64))) x3750) (= x4292 68) (= x3324 x3511) (= 68 x4292) (not (< x4292 4)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x3823) (not (= x996 2376452955)) (= x275 x1503) (not (= x996 826074471)) (= 2835717307 x996))) (and (=> x3750 x19) (=> (and (and (= x2229 (= x1503 x275)) (= x1503 x318)) (not x3750)) (and (=> (and x2229 (and (= x2009 (< x3316 x3511)) (<= x3316 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3316 (x150 x2035)) (= x2035 (x4257 (x2376 x4269) (x3241 2) 0)) (= x2442 x3324) (>= x3316 0))) (and (=> (and (= (< x3316 x3324) x1559) (not x2009)) (and (=> x1559 x19) (=> (and (and (= x1514 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3324))) (= x4203 (x4257 (x2376 x1503) (x3241 2) 0)) (= (x4257 (x2376 x4269) (x3241 2) 0) x3852) (= (x2611 x4203) x1723) (= (> x1723 x1514) x1859) (<= 0 x1723) (= x2831 (x1249 (- x3316 x3324))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1723)) (not x1559)) (and (=> x1859 x19) (=> (and (not x1859) (and (= x3317 (x461 (+ x3324 x1723))) (= (> x1723 x3317) x3177))) (and (=> (and (and (= x2302 32) (= 1 x3729) (= (x4257 (x2376 x1503) (x3241 2) 0) x471)) (not x3177)) x1573) (=> x3177 x19))))))) (=> x2009 x19))) (=> (not x2229) x19))))))) (=> (and x2880 (and (= x2644 68) (= x1542 x275) (not (< x2644 4)) (< 0 x4220) (not (= x893 2376452955)) (not (< x893 826074471)) (= (or (> x2503 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x2503 64) (= (<= x2503 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x1088) (= x4220 (x2388 (x2376 x864))) (not (= x893 2514000705)) (= 68 x2644) (not (= x893 826074471)) (= (x1249 (- x2644 4)) x2503) (= x3511 x2981) (not (= 1889567281 x893)) (= x893 2835717307) (= x4276 76450787359836037641860180984291677749980919077056822294353438043884394381312))) (and (=> (and (and (= x3894 x1542) (= (= x1542 x275) x92)) (not x1088)) (and (=> (not x92) x2189) (=> (and x92 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2522) (= x2981 x2618) (= x1410 (x4257 (x2376 x4269) (x3241 2) 0)) (= (x1648 x1410) x2522) (<= 0 x2522) (= x4155 (> x3511 x2522)))) (and (=> (and (= x1405 (< x2522 x2981)) (not x4155)) (and (=> x1405 x2189) (=> (and (not x1405) (and (= (x781 x2506) x3718) (= x2555 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2981))) (= (< x2555 x3718) x716) (= (x1249 (- x2522 x2981)) x2406) (= (x4257 (x2376 x1542) (x3241 2) 0) x2506) (<= 0 x3718) (= (x4257 (x2376 x4269) (x3241 2) 0) x337) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3718))) (and (=> (and (not x716) (and (= (x461 (+ x3718 x2981)) x2282) (= x86 (< x2282 x3718)))) (and (=> (and (and (= x1254 (x4257 (x2376 x1542) (x3241 2) 0)) (= 32 x2292) (= 1 x2707)) (not x86)) x409) (=> x86 x2189))) (=> x716 x2189))))) (=> x4155 x2189))))) (=> x1088 x2189))))) (=> (and x1635 (and (= x3110 x3511) (not (< x1151 2376452955)) (< 0 x4020) (= x333 68) (= x3170 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x4020 (x2388 (x2376 x4269))) (not (< x1151 2678909723)) (= x333 68) (= x275 x3048) (not (< x333 4)) (= (x1249 (- x333 4)) x2979) (not (= x1151 2678909723)) (= (or (> x2979 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2979)) (> 64 x2979))) x2583) (> 3065339685 x1151) (= x1151 2835717307))) (and (=> (and (and (= x820 x3048) (= (= x3048 x275) x283)) (not x2583)) (and (=> (and (and (= (< x3149 x3511) x4179) (<= 0 x3149) (= x1133 (x4257 (x2376 x4269) (x3241 2) 0)) (= x3149 (x608 x1133)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3149) (= x3110 x98)) x283) (and (=> x4179 x2723) (=> (and (= x3649 (> x3110 x3149)) (not x4179)) (and (=> x3649 x2723) (=> (and (and (>= x873 0) (= x1843 (x4257 (x2376 x3048) (x3241 2) 0)) (= x3248 (< x879 x873)) (= x879 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3110))) (= x3959 (x4257 (x2376 x4269) (x3241 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x873) (= x873 (x2582 x1843)) (= x878 (x1249 (- x3149 x3110)))) (not x3649)) (and (=> (and (not x3248) (and (= (x461 (+ x873 x3110)) x42) (= x1379 (> x873 x42)))) (and (=> x1379 x2723) (=> (and (and (= x1098 32) (= 1 x4007) (= (x4257 (x2376 x3048) (x3241 2) 0) x277)) (not x1379)) x3628))) (=> x3248 x2723))))))) (=> (not x283) x2723))) (=> x2583 x2723))))))))))))))) (=> (and (= x2610 x2250) (not x1921)) x438))))) (=> (and (and (= (= x4006 x275) x1695) x1695) (not x2563)) x4104))) (=> (and x2413 (and (= 36 x2756) (= 36 x2756) (not (= x1222 649617121)) (= x328 x4197) (< x1222 872247156) (not (< x1222 649617121)) (= x3115 20853193852723734048814770637610870652489083209607696777694672748161462697984) (= x2340 (or (> x2909 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x2909) (= true (<= x2909 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (< x1222 2376452955) (= (x1249 (- x2756 4)) x2909) (< 0 x800) (= 773487949 x1222) (= (x2388 (x2376 x2882)) x800) (not (< x2756 4)))) (and (=> (and (not x2340) (and (>= x814 0) (= x4197 x3205) (<= x814 1461501637330902918203684832716283019655932542975) (= (x2799 x328 2) x382) (= x2429 (= x275 x814)) (< x814 1461501637330902918203684832716283019655932542976))) (and (=> (and (= x1119 (= 0 x275)) x2429) (and (=> (and x1119 (= x2184 x2949)) x4148) (=> (and (not x1119) (= x1820 (= 0 x382))) (and (=> (and (not x1820) (and (<= 0 x2184) (= (> x382 x2184) x3695) (<= x2184 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (= x3590 (> x382 x319)) (= x97 (x1249 (- x2184 x382))) (= (x3951 x4322) x319) (= x4322 (x4257 (x2376 x275) (x3241 2) 0)) (= (x1249 (- x2184 x382)) x467) (<= x319 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x319)) (not x3695)) (and (=> (and x3590 (= x97 x2949)) x4148) (=> (and (not x3590) (and (= x3408 128) (= x1280 (= x2882 x2561)) (< x2561 1461501637330902918203684832716283019655932542976) (<= x2561 1461501637330902918203684832716283019655932542975) (= (x1249 (- x319 x382)) x1822) (>= x2561 0) (= x4097 (x4257 (x2376 x275) (x3241 2) 0)))) (and (=> (and x1280 (and (not (> 2678909723 x1847)) (= x3205 x1288) (not (> 4 x3910)) (= (x1249 (- x3910 4)) x3265) (= x114 (or (and (= (<= x3265 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3265 64)) (> x3265 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1847 2835717307) (not (< x1847 2376452955)) (= x1291 76450787359836037641860180984291677749980919077056822294353438043884394381312) (> 3065339685 x1847) (= 68 x3910) (= x181 x275) (= x3910 68) (not (= 2678909723 x1847)) (< 0 x4350) (= x4350 (x2388 (x2376 x2882))))) (and (=> x114 x3488) (=> (and (and (= x181 x3485) (= (= x275 x181) x2639)) (not x114)) (and (=> (not x2639) x3488) (=> (and (and (>= x351 0) (= x3327 (x4257 (x2376 x2882) (x3241 2) 0)) (<= x351 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1288 x1100) (= x351 (x3873 x3327)) (= (< x351 x3205) x3413)) x2639) (and (=> x3413 x3488) (=> (and (= x3155 (> x1288 x351)) (not x3413)) (and (=> (and (not x3155) (and (= (x1249 (- x351 x1288)) x1842) (= (x4257 (x2376 x181) (x3241 2) 0) x844) (= (x4257 (x2376 x2882) (x3241 2) 0) x3460) (= x3068 (x1431 x844)) (= (< x3704 x3068) x3667) (>= x3068 0) (<= x3068 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1288)) x3704))) (and (=> (and (not x3667) (and (= x2482 (< x307 x3068)) (= (x461 (+ x1288 x3068)) x307))) (and (=> (and (not x2482) (and (= x4040 (x4257 (x2376 x181) (x3241 2) 0)) (= 32 x3137) (= x2767 1))) x992) (=> x2482 x3488))) (=> x3667 x3488))) (=> x3155 x3488))))))))) (=> (and (not x1280) (= x2965 (= x2561 x4269))) (and (=> (and (not x2965) (= (= x864 x2561) x4126)) (and (=> (and x4126 (and (= 68 x1314) (not (= 2514000705 x3711)) (= x3711 2835717307) (not (= 826074471 x3711)) (not (= 2376452955 x3711)) (> x2867 0) (= 68 x1314) (= x2867 (x2388 (x2376 x864))) (= x1055 (or (and (= (<= x1816 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x1816)) (> x1816 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x275 x1508) (= x4208 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (> 4 x1314)) (not (< x3711 826074471)) (= x3769 x3205) (= (x1249 (- x1314 4)) x1816) (not (= 1889567281 x3711)))) (and (=> (and (not x1055) (and (= x2844 (= x275 x1508)) (= x314 x1508))) (and (=> (not x2844) x1632) (=> (and (and (= (> x3205 x3474) x3699) (= x3999 x3769) (= (x1648 x1938) x3474) (= x1938 (x4257 (x2376 x2882) (x3241 2) 0)) (>= x3474 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3474)) x2844) (and (=> x3699 x1632) (=> (and (not x3699) (= x632 (< x3474 x3769))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x329) (= x4310 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3769))) (= (x4257 (x2376 x1508) (x3241 2) 0) x2187) (= (> x329 x4310) x3101) (= x434 (x1249 (- x3474 x3769))) (= (x1975 x2187) x329) (= x2937 (x4257 (x2376 x2882) (x3241 2) 0)) (<= 0 x329)) (not x632)) (and (=> (and (and (= x1270 (x461 (+ x3769 x329))) (= x2577 (> x329 x1270))) (not x3101)) (and (=> x2577 x1632) (=> (and (not x2577) (and (= 1 x2252) (= (x4257 (x2376 x1508) (x3241 2) 0) x1000) (= 32 x2594))) x2502))) (=> x3101 x1632))) (=> x632 x1632))))))) (=> x1055 x1632))) (=> (and (= (= x3371 x2561) x3782) (not x4126)) (and (=> (and (= x1351 (= x2311 x2561)) (not x3782)) (and (=> (and (and (not (> 1086394137 x2360)) (= x3205 x965) (= 2835717307 x2360) (= 68 x1082) (not (< x1082 4)) (= x1985 (or (and (> 64 x361) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x361) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x361))) (= x275 x3993) (not (= x2360 2376452955)) (= x1082 68) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x2703) (= x361 (x1249 (- x1082 4))) (not (= x2360 1889567281)) (= x450 (x2388 (x2376 x2311))) (not (= 2514000705 x2360)) (< 0 x450) (not (= x2360 1086394137))) x1351) (and (=> x1985 x2209) (=> (and (and (= x1373 (= x3993 x275)) (= x3993 x2224)) (not x1985)) (and (=> (and (and (= x1259 (x1035 x1717)) (= x1232 x965) (= (x4257 (x2376 x2882) (x3241 2) 0) x1717) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1259) (<= 0 x1259) (= (< x1259 x3205) x3516)) x1373) (and (=> (and (= (> x965 x1259) x646) (not x3516)) (and (=> (and (and (= x206 (x1249 (- x1259 x965))) (= x3093 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x965))) (= x1545 (x4257 (x2376 x2882) (x3241 2) 0)) (= x2056 (> x4147 x3093)) (<= x4147 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2740 x1235) x4147) (<= 0 x4147) (= (x4257 (x2376 x3993) (x3241 2) 0) x1235)) (not x646)) (and (=> (and (and (= x4207 (< x1154 x4147)) (= x1154 (x461 (+ x965 x4147)))) (not x2056)) (and (=> x4207 x2209) (=> (and (not x4207) (and (= x2742 (x4257 (x2376 x3993) (x3241 2) 0)) (= x535 32) (= 1 x3455))) x1483))) (=> x2056 x2209))) (=> x646 x2209))) (=> x3516 x2209))) (=> (not x1373) x2209))))) (=> (and (not x1351) (= x2079 (= x2561 x3880))) (and (=> (and (not x2079) (and (= (= x2561 x706) x175) (and x175 (and (< 0 x485) (not (> 826074471 x118)) (= 68 x1311) (= x118 2835717307) (= (x2388 (x2376 x706)) x485) (not (< x1311 4)) (not (= 1889567281 x118)) (not (= x118 826074471)) (= (x1249 (- x1311 4)) x2541) (= x745 (or (and (= true (<= x2541 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x2541)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2541))) (not (= x118 2376452955)) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x384) (not (= x118 2514000705)) (= x2387 x3205) (= x275 x2144) (= x1311 68))))) (and (=> (and (not x745) (and (= x3939 x2144) (= x3883 (= x275 x2144)))) (and (=> (and (and (<= x4164 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3809 (x4257 (x2376 x2882) (x3241 2) 0)) (<= 0 x4164) (= (< x4164 x3205) x1493) (= x516 x2387) (= (x2317 x3809) x4164)) x3883) (and (=> x1493 x3743) (=> (and (= x3784 (< x4164 x2387)) (not x1493)) (and (=> (and (and (= x2850 (< x4157 x1647)) (>= x1647 0) (= (x31 x3687) x1647) (= x4157 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2387))) (= (x4257 (x2376 x2144) (x3241 2) 0) x3687) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1647) (= (x4257 (x2376 x2882) (x3241 2) 0) x4315) (= (x1249 (- x4164 x2387)) x374)) (not x3784)) (and (=> x2850 x3743) (=> (and (not x2850) (and (= x1255 (x461 (+ x1647 x2387))) (= x3235 (> x1647 x1255)))) (and (=> (and (not x3235) (and (= x2667 32) (= x4129 (x4257 (x2376 x2144) (x3241 2) 0)) (= 1 x3340))) x2762) (=> x3235 x3743))))) (=> x3784 x3743))))) (=> (not x3883) x3743))) (=> x745 x3743))) (=> (and x2079 (and (not (< x156 4)) (= x170 2835717307) (= x3696 (x1249 (- x156 4))) (not (= 2514000705 x170)) (not (< x170 826074471)) (not (= 826074471 x170)) (= x156 68) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x4283) (< 0 x1728) (= x3772 x275) (= 68 x156) (not (= 1889567281 x170)) (= (x2388 (x2376 x3880)) x1728) (not (= 2376452955 x170)) (= x572 (or (and (> 64 x3696) (= true (<= x3696 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x3696 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x3205 x1105))) (and (=> x572 x2814) (=> (and (not x572) (and (= x3659 (= x3772 x275)) (= x3772 x1049))) (and (=> (and x3659 (and (<= x1299 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x1299 x3205) x3757) (= (x4257 (x2376 x2882) (x3241 2) 0) x1252) (<= 0 x1299) (= (x466 x1252) x1299) (= x1105 x3527))) (and (=> x3757 x2814) (=> (and (= x2715 (> x1105 x1299)) (not x3757)) (and (=> x2715 x2814) (=> (and (and (= (> x657 x2045) x2483) (= (x1249 (- x1299 x1105)) x131) (<= 0 x657) (<= x657 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1105)) x2045) (= x3105 (x4257 (x2376 x2882) (x3241 2) 0)) (= x3525 (x4257 (x2376 x3772) (x3241 2) 0)) (= (x317 x3525) x657)) (not x2715)) (and (=> x2483 x2814) (=> (and (and (= x1724 (< x3051 x657)) (= (x461 (+ x1105 x657)) x3051)) (not x2483)) (and (=> x1724 x2814) (=> (and (and (= x3490 1) (= 32 x1548) (= (x4257 (x2376 x3772) (x3241 2) 0) x1272)) (not x1724)) x478))))))))) (=> (not x3659) x2814))))))))) (=> (and (and (> x1315 0) (not (= x1801 2514000705)) (not (> 4 x3120)) (= x3120 68) (not (= x1801 826074471)) (not (= 2376452955 x1801)) (= 2835717307 x1801) (= x3120 68) (= (x2388 (x2376 x3371)) x1315) (not (< x1801 826074471)) (not (= 1889567281 x1801)) (= x2258 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x4034 (or (and (> 64 x2005) (= (<= x2005 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2005))) (= x275 x2724) (= (x1249 (- x3120 4)) x2005) (= x1180 x3205)) x3782) (and (=> (and (and (= x1537 (= x2724 x275)) (= x2400 x2724)) (not x4034)) (and (=> (and (and (<= 0 x2693) (= x1603 (> x3205 x2693)) (= x1180 x1691) (<= x2693 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x953 (x4257 (x2376 x2882) (x3241 2) 0)) (= x2693 (x150 x953))) x1537) (and (=> (and (not x1603) (= x3598 (< x2693 x1180))) (and (=> x3598 x20) (=> (and (and (= (x975 x2609) x3062) (= (> x3062 x4176) x3032) (<= x3062 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3062) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1180)) x4176) (= (x1249 (- x2693 x1180)) x3798) (= x2609 (x4257 (x2376 x2724) (x3241 2) 0)) (= (x4257 (x2376 x2882) (x3241 2) 0) x550)) (not x3598)) (and (=> (and (not x3032) (and (= x2606 (> x3062 x4233)) (= (x461 (+ x3062 x1180)) x4233))) (and (=> x2606 x20) (=> (and (and (= (x4257 (x2376 x2724) (x3241 2) 0) x2206) (= x3083 32) (= 1 x428)) (not x2606)) x3200))) (=> x3032 x20))))) (=> x1603 x20))) (=> (not x1537) x20))) (=> x4034 x20))))))) (=> (and x2965 (and (= x3799 76450787359836037641860180984291677749980919077056822294353438043884394381312) (not (= 2678909723 x1393)) (= x4244 (x2388 (x2376 x4269))) (> x4244 0) (= x1923 x3205) (not (< x1393 2678909723)) (= 2835717307 x1393) (= x1403 (or (and (< x2330 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2330))) (> x2330 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1752 x275) (= 68 x1861) (not (< x1393 2376452955)) (> 3065339685 x1393) (= 68 x1861) (= x2330 (x1249 (- x1861 4))) (not (> 4 x1861)))) (and (=> (and (not x1403) (and (= (= x275 x1752) x274) (= x3332 x1752))) (and (=> (and x274 (and (= (x4257 (x2376 x2882) (x3241 2) 0) x1004) (= (x1846 x1004) x232) (= x1611 x1923) (<= x232 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x232 0) (= x88 (> x3205 x232)))) (and (=> x88 x29) (=> (and (not x88) (= x1170 (> x1923 x232))) (and (=> (and (not x1170) (and (= x1072 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1923))) (= (x4257 (x2376 x1752) (x3241 2) 0) x812) (= (x1249 (- x232 x1923)) x1943) (>= x408 0) (= x2117 (x4257 (x2376 x2882) (x3241 2) 0)) (= x408 (x1195 x812)) (= (> x408 x1072) x1911) (<= x408 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x1911 x29) (=> (and (not x1911) (and (= (x461 (+ x1923 x408)) x2685) (= x4144 (> x408 x2685)))) (and (=> x4144 x29) (=> (and (and (= x249 1) (= x356 32) (= x4128 (x4257 (x2376 x1752) (x3241 2) 0))) (not x4144)) x2977))))) (=> x1170 x29))))) (=> (not x274) x29))) (=> x1403 x29))))))))) (=> (and (= x2949 x2184) x3695) x4148))) (=> (and x1820 (= x2949 x2184)) x4148))))) (=> (and (= x2184 x2949) (not x2429)) x4148))) (=> (and x2340 (= x2949 x2184)) x4148))))) (=> (and (and (= x1415 x2184) (= x2610 x4172)) x1338) x4338))))) (=> (and x1685 (and (= x1415 x2184) (= x4172 x2610))) x4338)))))))))
(assert (= x4161 (and x392 x3216)))
(assert (= x3019 (and x3021 x3238)))
(assert (x2808 x2311))
(assert (x4106 x97))
(assert (= x838 (and x3820 (not x2527))))
(assert (x4106 x3132))
(assert (= x1134 (=> (and (= x4324 x3952) (= x341 x1081) (= x931 x2610)) x2615)))
(assert (x4106 x1939))
(assert (= x644 (and (not x632) x460)))
(assert (x4106 x9))
(assert (= (and x974 (not x3015)) x2854))
(assert (x4106 x2999))
(assert (x4106 x2022))
(assert (= (and x1945 x2972) x930))
(assert (= (and x2036 x1747) x2881))
(assert (x4106 x1231))
(assert (= (and (not x3584) x906) x1293))
(assert (= (and x3441 x1171) x1099))
(assert (= x2077 true))
(assert (x4106 x2861))
(assert (= (and x1550 (not x1818)) x4398))
(assert (x4106 x1131))
(assert (x4106 x1561))
(assert (= (or x961 x962) x3932))
(assert (x4106 x2979))
(assert (x4106 x1121))
(assert (x4106 x4089))
(assert (= x3245 (and x2381 (not x2413))))
(assert (= (x2376 2737736067) (x3241 2737736067)))
(assert (x4106 x2292))
(assert (x4106 x50))
(assert (x4106 x1340))
(assert (= (and x1560 x2603) x1638))
(assert (= (or x2660 x4209) x1730))
(assert (= (and x2691 (not x4313)) x3247))
(assert (x4106 x722))
(assert (= (and x2000 x1666) x3608))
(assert (= (and x1965 (not x1359)) x443))
(assert (x4106 x473))
(assert (x4106 x3720))
(assert (= x2992 (and x1524 x4311)))
(assert (x4106 x2387))
(assert (=> (<= x1836 10000) (= (x3241 x1836) (x2376 x1836))))
(assert (x4106 x2240))
(assert (= (x2376 3187245334) (x3241 3187245334)))
(assert (x2808 x2567))
(assert (x2808 x2616))
(assert (= (x1262 (x3241 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (= x2989 (and (not x2483) x403)))
(assert (= x83 (=> (and (= x2021 x2796) (= x1523 0)) x184)))
(assert (x4106 x3215))
(assert (= (=> (and (or (not x1989) x1989) (= (= 0 x2998) x1989)) x3188) x1045))
(assert (= x3086 (and x280 x1038)))
(assert (= (and x999 x692) x3891))
(assert (= x665 (and x3701 (not x3184))))
(assert (x4106 x3068))
(assert (= x581 (=> (and (= x349 x3855) (= x3125 x1607)) x2495)))
(assert (= (x1262 (x2376 x841)) x841))
(assert (x4106 x1273))
(assert (x4106 x1098))
(assert (x4106 x4382))
(assert (= (x2376 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x3241 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x4106 x3892))
(assert (x2808 x2525))
(assert (x4106 x1081))
(assert (= x1563 (and x3834 x4225)))
(assert (= x44 (and x4229 x742)))
(assert (= (and x3245 (not x2563)) x2934))
(assert (=> (>= 10000 x3518) (= (x3241 x3518) (x2376 x3518))))
(assert (x4106 x1299))
(assert (= x1763 (x1262 (x2376 x1763))))
(assert (= (or x2900 x199) x4302))
(assert (x4106 x2692))
(assert (x4106 x4006))
(assert (x4106 x3261))
(assert (= (and x1559 x4329) x3604))
(assert (= x1581 (or x4354 x2790)))
(assert (x4106 x3387))
(assert (x4106 x558))
(assert (x4106 x860))
(assert (= x275 (x1262 (x2376 x275))))
(assert (= x2701 (and x130 (not x2553))))
(assert (x4106 x617))
(assert (x4106 x2411))
(assert (= x2215 (and x3491 x2032)))
(assert (x4106 x1497))
(assert (= (or x1866 x1339) x2016))
(assert (x4106 x220))
(assert (= x3532 (x1262 (x2376 x3532))))
(assert (x4106 x1506))
(assert (x4106 x1312))
(assert (= (and (not x2903) x3623) x2813))
(assert (x4106 x3337))
(assert (= (x3241 2569309863) (x2376 2569309863)))
(assert (= x3050 (and x1680 (not x256))))
(assert (x4106 x424))
(assert (x2808 x2261))
(assert (x4106 x300))
(assert (= x4275 (x1262 (x2376 x4275))))
(assert (x4106 x1501))
(assert (= (and x3726 (not x2805)) x2734))
(assert (x4106 x2430))
(assert (= (and x1122 x160) x2437))
(assert (x4106 x2135))
(assert (= (and x2229 x2286) x430))
(assert (= x2128 (and x1469 x2943)))
(assert (x2808 x841))
(assert (x4106 x3880))
(assert (x2808 x2491))
(assert (x4106 x3185))
(assert (x4106 x2885))
(assert (=> (>= 10000 x3026) (= (x3241 x3026) (x2376 x3026))))
(assert (= (and x3270 x2798) x3084))
(assert (x4106 x2507))
(assert (= x2495 (=> (and (or (not x4316) x4316) (= x4316 (= x1607 0))) x1019)))
(assert (x4106 x2099))
(assert (x4106 x3157))
(assert (x4106 x1395))
(assert (= (and (not x3457) x2605) x601))
(assert (x4106 x1453))
(assert (= (x1262 (x2376 x1641)) x1641))
(assert (= (and (not x3976) x4259) x4390))
(assert (= (=> (and (= x3601 x3881) (= x2031 x753)) x440) x1491))
(assert (= x3965 (or (and x2770 x712) (and x3703 (not x162)))))
(assert (= (and x3803 x3727) x1961))
(assert (x4106 x4227))
(assert (= x1012 (and x2301 x2051)))
(assert (x4106 x2230))
(assert (= (=> (and (= 0 x1039) (= x4221 x3519)) x947) x2602))
(assert (x4106 x1344))
(assert (= (and x1915 x4390) x783))
(assert (x4106 x778))
(assert (= x315 (or x4100 x763 x1674 x886 x2890 x4307)))
(assert (= x200 (=> (and (or (not x3916) x3916) (= (= x3563 0) x3916)) x79)))
(assert (x4106 x794))
(assert (x4106 x2837))
(assert (= (and x1802 (not x2385)) x2614))
(assert (x4106 x2887))
(assert (x4106 x1895))
(assert (= x2253 (=> (and (= x373 x2068) (= x3625 x3996)) x883)))
(assert (x2808 x2148))
(assert (=> (>= 10000 x1542) (= (x3241 x1542) (x2376 x1542))))
(assert (x4106 x3280))
(assert (= (and x3465 x1948) x1865))
(assert (x4106 x206))
(assert (x4106 x497))
(assert (x4106 x1372))
(assert (= (and x4359 x1018) x3405))
(assert (= (and x1783 x4019) x891))
(assert (= (or x1173 x2151 x4272 x3258 x3434 x2484) x2818))
(assert (x4106 x4283))
(assert (= x93 (and x3045 (not x3404))))
(assert (=> (<= x706 10000) (= (x2376 x706) (x3241 x706))))
(assert (x4106 x2709))
(assert (= x37 (and (not x4107) x425)))
(assert (= x3570 (=> (and (= x2299 x3658) (= x4132 x3563)) x200)))
(assert (=> (<= x2259 10000) (= (x3241 x2259) (x2376 x2259))))
(assert (x1036 x1478))
(assert (= x2017 (and x3290 x631)))
(assert (= (and x1733 x532) x4301))
(assert (x4106 x3943))
(assert (x4106 x2282))
(assert (= x3446 (and x3363 x2540)))
(assert (= x2303 (and x1070 (not x3042))))
(assert (= x4256 (and (not x2429) x940)))
(assert (= x3606 (and (not x4295) x4266)))
(assert (x4106 x18))
(assert (= (and (not x4327) x1484) x2027))
(assert (x4106 x2696))
(assert (= (and x3108 x3760) x3712))
(assert (x4106 x4273))
(assert (=> (<= x1634 10000) (= (x3241 x1634) (x2376 x1634))))
(assert (x4106 x3051))
(assert (x4106 x3437))
(assert (x4106 x3213))
(assert (x4106 x3804))
(assert (= (and (not x2574) x1980) x974))
(assert (= (or (and (not x3318) x1604) (and x3449 x3557) (and x1147 x4308) (and x2903 x3623) (and x1062 (not x3181)) x2853 x2198 (and x1754 x4402) x3953) x336))
(assert (x4106 x3150))
(assert (x2291 x3763))
(assert (x2808 x4388))
(assert (x4106 x3355))
(assert (= x391 (and x634 x4155)))
(assert (= x3618 (=> (and (= x1622 x2759) (= x3500 x3154)) x2632)))
(assert (x4106 x3661))
(assert (= (x2376 1461501637330902918203684832716283019655932542976) (x3241 1461501637330902918203684832716283019655932542976)))
(assert (= x1367 (and x1346 (not x2030))))
(assert (x4106 x4132))
(assert (= (x1262 (x2376 x1836)) x1836))
(assert (= (or x1549 x2380 x3156 x783 x2197 x1838) x944))
(assert (x4106 x1257))
(assert (x4106 x94))
(assert (x2808 x3447))
(assert (x4106 x2144))
(assert (= x359 (and x731 (not x2577))))
(assert (= (=> (and (= x1523 x2043) (= x2796 x1931)) x2333) x184))
(assert (x4106 x4306))
(assert (= x2040 (and x1230 x3914)))
(assert (= x2419 (or x4236 x422 (and x907 x297) (and (not x2806) x1027) x2316 (and x399 (not x2169)) (and x4263 x2342) (and x490 x202) (and x1992 x1826))))
(assert (x4106 x4255))
(assert (x2808 x3026))
(assert (x4106 x2957))
(assert (x4106 x4140))
(assert (x4106 x3718))
(assert (x4106 x2369))
(assert (= x2771 (and x3920 (not x1264))))
(assert (x4106 x2353))
(assert (= x706 (x1262 (x2376 x706))))
(assert (x4106 x626))
(assert (x4106 x38))
(assert (x2291 x3961))
(assert (= x125 (and x3583 x3640)))
(assert (x4106 x3986))
(assert (= x3156 (and x2859 x1220)))
(assert (x4106 x1842))
(assert (= x1840 (=> (and (= x1362 x325) (= x24 x2245) (= x2184 x2650)) x3284)))
(assert (x4106 x4348))
(assert (= x59 (and (not x3216) x392)))
(assert (= (and x4298 x375) x2081))
(assert (=> (>= 10000 x3048) (= (x2376 x3048) (x3241 x3048))))
(assert (= x1866 (and x3745 (not x1805))))
(assert (x2808 x3880))
(assert (= (and (not x3424) x2656) x2564))
(assert (= x1914 (x1262 (x2376 x1914))))
(assert (= x1885 (or x2188 x4011 x3653 x3851 x3748 x2215 x2881 x1068)))
(assert (= (x1262 (x2376 x1561)) x1561))
(assert (x4106 x1862))
(assert (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1262 (x3241 16156842317565293874272834530371880720966471053262404558597773956279093428224))))
(assert (= (and (not x2844) x1289) x237))
(assert (= x225 (and (not x246) x2262)))
(assert (= (x1262 (x2376 x4138)) x4138))
(assert (= (and x1635 x3796) x4370))
(assert (x4106 x1593))
(assert (= (or (and x2443 x1956) (and (not x4346) x1946)) x936))
(assert (= (and x848 x1612) x2188))
(assert (= (and x1316 x4094) x1188))
(assert (x4106 x3531))
(assert (= (x3241 2952933380) (x2376 2952933380)))
(assert (= (and x2535 x2625) x1625))
(assert (= (and (not x164) x4340) x3296))
(assert (x4106 x1435))
(assert (= x3010 (and x618 x78)))
(assert (x2808 x633))
(assert (= x3820 (and (not x978) x1432)))
(assert (= x4340 (and x732 x2785)))
(assert (x4106 x2466))
(assert (x4106 x2021))
(assert (= (and (not x2123) x4082) x4054))
(assert (x4106 x2843))
(assert (= x1753 (or x87 x1592)))
(assert (x2291 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x2527 x3820) x2679))
(assert (x4106 x2084))
(assert (= x1208 (and (not x283) x3941)))
(assert (x2808 x2136))
(assert (x4106 x4081))
(assert (x2808 x4000))
(assert (x4106 x492))
(assert (= x4308 (and x511 x3445)))
(assert (x2808 x3986))
(assert (x4106 x168))
(assert (= x3521 (=> (and (= x2874 0) (= x1112 x3185)) x394)))
(assert (= x1484 (and (not x1999) x2471)))
(assert (= (and (not x2965) x899) x945))
(assert (= (x1262 (x2376 x2136)) x2136))
(assert (= (and x436 (not x2149)) x926))
(assert (x4106 x1977))
(assert (x4106 x2297))
(assert (x4106 x1136))
(assert (= (and x663 (not x562)) x1549))
(assert (x2808 x3736))
(assert (x4106 x3244))
(assert (x4106 x1630))
(assert (= (or x1851 x3410) x3689))
(assert (x4106 x85))
(assert (= (and x2463 (not x4080)) x2872))
(assert (x4106 x2210))
(assert (= (=> (= x1279 0) x3528) x2902))
(assert (x4106 x2442))
(assert (=> (<= x864 10000) (= (x2376 x864) (x3241 x864))))
(assert (x4106 x3436))
(assert (x4106 x4347))
(assert (= x501 (and x2120 x1786)))
(assert (= x4278 (and (not x1327) x2163)))
(assert (x4106 x1155))
(assert (x4106 x3435))
(assert (= x294 (and x1077 x2984)))
(assert (= (and (not x480) x3887) x3956))
(assert (x4106 x1511))
(assert (x4106 x2919))
(assert (x4106 x3316))
(assert (= (and x474 x3269) x2125))
(assert (x4106 x172))
(assert (= (and x3402 (not x2732)) x1052))
(assert (= (and x430 x2009) x619))
(assert (x4106 x1065))
(assert (x4106 x61))
(assert (=> (>= 10000 x3715) (= (x3241 x3715) (x2376 x3715))))
(assert (= x2590 (=> (= x2899 0) x414)))
(assert (= x3612 (and x4367 x4246)))
(assert (= x142 (or x2458 x891 x269 x2017 x2128 x720 x2199 x1886 x2033)))
(assert (x4106 x3958))
(assert (= x2336 (and x332 x1678)))
(assert (= (and (not x2260) x838) x795))
(assert (= x2671 (=> (and (= x1296 x2031) (= x3166 x3881)) x440)))
(assert (= (=> (and (= 0 x1667) (= x3547 x267)) x859) x957))
(assert (= x533 (=> (and (= (= x3371 x4299) x1990) (= (x106 x4318) x4299) (>= 1461501637330902918203684832716283019655932542975 x4299) (= x479 (x461 (+ x4267 64))) (= (or x1636 x1990) x3286) (>= x4299 0) (= (= x2882 x4299) x3104) x3286 (< x4299 1461501637330902918203684832716283019655932542976) (= (x1249 (- x479 x2726)) x304) (= x4267 (x461 (+ x2726 4))) (not (= 0 x4324)) (= x3607 (x461 (+ x4267 32))) (= (= x4299 x864) x1636)) (and (=> (and (= x808 (= x4299 x4269)) (not x3104)) (and (=> (and (and (> 2376452955 x3365) (= x3837 68) (< x3365 649617121) (not (> 157198259 x3365)) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x3923) (= (x2388 (x2376 x4269)) x4077) (= x529 x3569) (= 157198259 x3365) (= x764 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2060) (and (> 64 x2060) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2060) true)))) (not (> 4 x3837)) (= x3837 x304) (> x4077 0) (= (x1249 (- x3837 4)) x2060)) x808) (and (=> (and (not x764) (and (= x3569 x3536) (= (= x529 x3569) x455))) (and (=> (not x455) x2602) (=> (and (and (= (x4257 (x2376 x275) (x3241 3) 0) x2599) (= x1039 1) (= x3519 32) (= (x4257 (x2376 x3569) x2599 0) x3627)) x455) x947))) (=> x764 x2602))) (=> (and (= x233 (= x4299 x864)) (not x808)) (and (=> (and x233 (and (= x529 x2843) (= x3819 (or (> x2441 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2441 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x2441)))) (= (x2388 (x2376 x864)) x439) (= x3531 x304) (= x1269 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= x2441 (x1249 (- x3531 4))) (not (= x819 117300739)) (< x819 826074471) (= 68 x3531) (not (> 4 x3531)) (= x819 157198259) (< 0 x439))) (and (=> x3819 x2587) (=> (and (and (= x2843 x4253) (= x522 (= x2843 x529))) (not x3819)) (and (=> (and (and (= 32 x2687) (= (x4257 (x2376 x2843) x521 0) x3224) (= (x4257 (x2376 x275) (x3241 3) 0) x521) (= x1321 1)) x522) x1637) (=> (not x522) x2587))))) (=> (and (= (= x3371 x4299) x622) (not x233)) (and (=> (and (= x2312 (= x4299 x2311)) (not x622)) (and (=> (and x2312 (and (> x1462 0) (= x2091 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2613) (and (> 64 x2613) (= true (<= x2613 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (< x3341 1086394137) (= 157198259 x3341) (= x1462 (x2388 (x2376 x2311))) (= x3382 68) (= (x1249 (- x3382 4)) x2613) (= x304 x3382) (not (> 4 x3382)) (= x2821 x529) (not (= x3341 117300739)) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x1854))) (and (=> x2091 x3373) (=> (and (not x2091) (and (= (= x2821 x529) x2306) (= x3988 x2821))) (and (=> (and x2306 (and (= (x4257 (x2376 x2821) x3896 0) x1576) (= x1296 32) (= x3166 1) (= (x4257 (x2376 x275) (x3241 3) 0) x3896))) x2671) (=> (not x2306) x3373))))) (=> (and (= x1767 (= x4299 x3880)) (not x2312)) (and (=> (and (and (= 68 x715) (> 826074471 x3596) (= x2705 (x1249 (- x715 4))) (= 157198259 x3596) (not (= 117300739 x3596)) (= (x2388 (x2376 x3880)) x2205) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2705)) (< x2705 64)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2705)) x480) (= x529 x1450) (< 0 x2205) (= x715 x304) (not (> 4 x715)) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x2892)) x1767) (and (=> (and (not x480) (and (= x1450 x3913) (= (= x1450 x529) x3189))) (and (=> (not x3189) x4014) (=> (and x3189 (and (= 32 x753) (= x1711 (x4257 (x2376 x1450) x1414 0)) (= (x4257 (x2376 x275) (x3241 3) 0) x1414) (= x3601 1))) x1491))) (=> x480 x4014))) (=> (and (not x1767) (and (and (and (not (> 4 x4160)) (> x705 0) (> 826074471 x3213) (= x529 x2683) (= x4160 x304) (= x1245 (or (and (< x85 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x85))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x85))) (= x4160 68) (not (= 117300739 x3213)) (= x85 (x1249 (- x4160 4))) (= x3213 157198259) (= (x2388 (x2376 x706)) x705) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x913)) x560) (= x560 (= x706 x4299)))) (and (=> (and (not x1245) (and (= x994 (= x2683 x529)) (= x2683 x3027))) (and (=> (and x994 (and (= x1595 32) (= x1952 (x4257 (x2376 x2683) x2694 0)) (= (x4257 (x2376 x275) (x3241 3) 0) x2694) (= x3337 1))) x1130) (=> (not x994) x2398))) (=> x1245 x2398))))))) (=> (and x622 (and (= x4260 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2864) (and (= (<= x2864 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x2864))) x2490) (= x2349 x529) (< x835 826074471) (not (= 117300739 x835)) (< 0 x780) (not (> 4 x4029)) (= x2864 (x1249 (- x4029 4))) (= 157198259 x835) (= x304 x4029) (= x4029 68) (= x780 (x2388 (x2376 x3371))))) (and (=> (and (and (= (= x2349 x529) x683) (= x3215 x2349)) (not x2490)) (and (=> (and (and (= x3450 32) (= x2320 (x4257 (x2376 x2349) x3302 0)) (= 1 x473) (= (x4257 (x2376 x275) (x3241 3) 0) x3302)) x683) x77) (=> (not x683) x969))) (=> x2490 x969))))))))) (=> (and x3104 (and (= x4305 (x2388 (x2376 x2882))) (> 2376452955 x492) (= x3588 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= x529 x4293) (= 68 x3227) (= x304 x3227) (= 157198259 x492) (not (< x3227 4)) (< 0 x4305) (= x1869 (or (and (= (<= x2430 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x2430)) (> x2430 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2430 (x1249 (- x3227 4))) (not (> 157198259 x492)) (< x492 649617121))) (and (=> x1869 x2433) (=> (and (not x1869) (and (= (= x529 x4293) x1718) (= x3218 x4293))) (and (=> (and (and (= x1773 (x4257 (x2376 x4293) x1238 0)) (= x1238 (x4257 (x2376 x275) (x3241 3) 0)) (= 1 x2754) (= 32 x881)) x1718) x2058) (=> (not x1718) x2433)))))))))
(assert (x4106 x181))
(assert (x4106 x1595))
(assert (x4106 x2975))
(assert (x4106 x278))
(assert (= x569 (or x4375 x3854 x2167 x711 x2305 x16 x3276)))
(assert (x4106 x2855))
(assert (x4106 x3637))
(assert (= x410 (and x2701 x3589)))
(assert (x4106 x3263))
(assert (= (=> (and (= x1564 0) (= x3794 x2931)) x1794) x2095))
(assert (= x2875 (and x3238 (not x3021))))
(assert (= x2868 (and x514 x1597)))
(assert (x4106 x3380))
(assert (= (and x4068 (not x1399)) x1440))
(assert (= (and x2194 x23) x4184))
(assert (= x383 (and x978 x1432)))
(assert (= x4354 (and x2872 x2716)))
(assert (= (and x107 x2344) x1644))
(assert (x4106 x3311))
(assert (= (and x1550 x1818) x976))
(assert (x4106 x1897))
(assert (x4106 x1670))
(assert (x4106 x2304))
(assert (= (and (not x745) x3907) x985))
(assert (= (=> (and (= x3957 x2021) (= 0 x1196)) x4401) x2294))
(assert (x4106 x1388))
(assert (x4106 x913))
(assert (= x1496 (and x985 (not x3883))))
(assert (x4106 x3083))
(assert (x4106 x2786))
(assert (x4106 x3719))
(assert (x4106 x3994))
(assert (= x3844 (or (and x3023 (not x3747)) x1626)))
(assert (x2808 x3569))
(assert (x4106 x2329))
(assert (x4106 x3027))
(assert (x4106 x3575))
(assert (x2808 x2724))
(assert (= x494 (=> (and (= x2313 0) (= x2416 x241)) x3179)))
(assert (x4106 x1072))
(assert (x4106 x3935))
(assert (x4106 x244))
(assert (x4106 x1259))
(assert (= (and x390 (not x3142)) x681))
(assert (= (=> (and (= x2043 x2548) (= x2933 x1931)) x2333) x1114))
(assert (=> (<= x1522 10000) (= (x2376 x1522) (x3241 x1522))))
(assert (x4106 x2448))
(assert (= (and x1906 x475) x3146))
(assert (x4106 x2773))
(assert (x1189 1461501637330902918203684832716283019655932542975))
(assert (x4106 x2952))
(assert (x4106 x2259))
(assert (= x2947 (and x2163 x1327)))
(assert (x4106 x4153))
(assert (= x1018 (and x2226 (not x2963))))
(assert (x4106 x1777))
(assert (= x872 (and x3757 x3773)))
(assert (x4106 x1553))
(assert (= x570 (or x1108 x4286 x4178 x545 x3915 x1381 x3685)))
(assert (x4106 x2893))
(assert (= (and (not x1898) x584) x1150))
(assert (= (or x11 (and (not x1179) x1485) (and x3036 x1059) (and x3010 x672) (and x1643 x4036) (and x1117 x4167) (and x531 (not x4062)) x3811 x2526) x3504))
(assert (x2808 x1899))
(assert (= (and x4180 x4152) x2964))
(assert (x4106 x2863))
(assert (= x3200 (=> (and (= x428 x2982) (= x3083 x617)) x2987)))
(assert (= x1516 (and x1958 (not x1745))))
(assert (x4106 x1784))
(assert (x4106 x1356))
(assert (x4106 x3356))
(assert (x4106 x2571))
(assert (= (and x3695 x3319) x2914))
(assert (= x2974 (and (not x82) x2324)))
(assert (= (x1262 (x2376 x3994)) x3994))
(assert (= (and x2303 x602) x427))
(assert (= (x1262 (x2376 x262)) x262))
(assert (x4106 x3115))
(assert (= x2939 (=> (and (= x4255 0) (= x3547 x4146)) x759)))
(assert (x2808 x2821))
(assert (x4106 x4267))
(assert (x4106 x147))
(assert (x4106 x1672))
(assert (= x4368 (=> (and (= x3193 x38) (= x868 0)) x40)))
(assert (= x887 (and x3121 x68)))
(assert (x4106 x3233))
(assert (x4106 x2883))
(assert (x4106 x356))
(assert (= (=> (and (= x1465 x3193) (= 0 x1749)) x2524) x2623))
(assert (= (and x3948 x2306) x1475))
(assert (= (x1262 (x2376 x2006)) x2006))
(assert (x4106 x1361))
(assert (x4106 x1151))
(assert (= (or x282 x2820) x711))
(assert (x4106 x3927))
(assert (= false x4104))
(assert (= x119 (and (not x17) x235)))
(assert (x4106 x790))
(assert (x4106 x81))
(assert (= x287 (or x4099 x2419)))
(assert (= (and x2917 x3631) x2446))
(assert (x4106 x612))
(assert (x4106 x290))
(assert (x4106 x575))
(assert (x4106 x1514))
(assert (x2291 x3114))
(assert (= x3283 (x1262 (x2376 x3283))))
(assert (x4106 x2224))
(assert (x4106 x653))
(assert (x4106 x2070))
(assert (= x2814 (=> (and (= 0 x3490) (= x1548 x3779)) x478)))
(assert (= (and x1157 x1848) x245))
(assert (x4106 x2112))
(assert (= x3924 (and x195 x1094)))
(assert (= (and (not x4179) x1656) x3502))
(assert (x4106 x1258))
(assert (= (and (not x4057) x2836) x248))
(assert (x4106 x2543))
(assert (x4106 x1564))
(assert (= 2835717307 (x1262 (x3241 2835717307))))
(assert (= (and x499 x2195) x4232))
(assert (= x1752 (x1262 (x2376 x1752))))
(assert (= x851 (and (not x646) x1810)))
(assert (= x2798 (and x2036 (not x1747))))
(assert (= (=> (and (= x689 x3972) (= 0 x1972)) x2830) x3372))
(assert (= x3736 (x1262 (x2376 x3736))))
(assert (= (or x4341 x944) x4178))
(assert (x4106 x1039))
(assert (x4106 x1135))
(assert (= (and x3013 (not x197)) x1094))
(assert (= x4277 (or x3509 x4309)))
(assert (=> (<= x275 10000) (= (x3241 x275) (x2376 x275))))
(assert (= (and (not x4162) x3076) x3674))
(assert (= (x3241 2514000705) (x2376 2514000705)))
(assert (x4106 x4010))
(assert (= (or x1352 x3540) x1237))
(assert (= (and x1460 x3724) x422))
(assert (= x2856 (and x2997 x2659)))
(assert (x4106 x3866))
(assert (= (and x3328 x2704) x1278))
(assert (= x2717 (and x3781 x967)))
(assert (x2808 x3994))
(assert (x4106 x96))
(assert (x4106 x1931))
(assert (x4106 x1808))
(assert (= (and x3758 x3155) x3889))
(assert (= (and (not x481) x2072) x3445))
(assert (= (x2376 1422172137) (x3241 1422172137)))
(assert (= x3143 (=> (and (= x2184 x341) (= x2866 x4324) (= x4123 x931)) x2615)))
(assert (= x3343 (and x1487 x3731)))
(assert (= (and (not x4311) x1524) x1107))
(assert (= x3201 (and (not x2312) x2434)))
(assert (= (and x4279 x2614) x4053))
(assert (= (=> (and (= x1862 x1622) (= x1092 x3154)) x2632) x2156))
(assert (x4106 x3722))
(assert (x4106 x2953))
(assert (x4106 x4261))
(assert (x4106 x2331))
(assert (= (x1262 (x2376 x2567)) x2567))
(assert (= x1797 (=> (= (> x2815 0) x1818) (and (=> (and (not x1818) (and (= x2245 x4172) (= x2650 x1415))) x4338) (=> (and x1818 (= x971 (= x3182 0))) (and (=> (and (= x2191 (= 32 x3182)) (not x971)) (and (=> (and (and (= x4172 x2245) (= x2650 x1415)) (not x2191)) x4338) (=> (and x2191 (and (= (ite x3897 1 0) x3336) (= (not x946) x3897) (= (= 0 x275) x946))) x708))) (=> (and x971 (and (= (< 0 x3356) x4225) (= x3356 (x2388 (x2376 x3692))))) (and (=> (and (not x4225) (and (= x1415 x2650) (= x2245 x4172))) x4338) (=> (and (= x3336 1) x4225) x708)))))))))
(assert (x4106 x1712))
(assert (= x1411 (and (not x2042) x4001)))
(assert (= (and x2436 (not x3459)) x962))
(assert (= (and x4141 x1507) x362))
(assert (x4106 x535))
(assert (x4106 x24))
(assert (x4106 x3725))
(assert (x4106 x2085))
(assert (x4106 x4037))
(assert (x4106 x717))
(assert (= (=> (and (= x989 x1622) (= x3154 x2699)) x2632) x4222))
(assert (x4106 x3870))
(assert (x4106 x249))
(assert (= (and x2451 (not x3056)) x1229))
(assert (=> (<= x500 10000) (= (x3241 x500) (x2376 x500))))
(assert (= (and x4057 x2836) x234))
(assert (= (x1262 (x3241 773487949)) 773487949))
(assert (= x187 (and x3775 x3572)))
(assert (x2808 x2144))
(assert (= x1874 (and x767 x371)))
(assert (=> (<= x183 10000) (= (x3241 x183) (x2376 x183))))
(assert (= x2568 (=> (and (= x2267 x1243) (= x1997 x3537)) x4360)))
(assert (= (and (not x1678) x332) x421))
(assert (= x1811 (=> (and (= x3031 0) (= x2412 x1112)) x279)))
(assert (x4106 x1241))
(assert (x4106 x715))
(assert (= (and (not x3491) x2032) x1894))
(assert (x4106 x855))
(assert (= x2744 (=> (and (= x1081 x1640) (= 0 x3952)) x1134)))
(assert (= x2532 (and x3206 (not x3396))))
(assert (x2808 x4143))
(assert (= x2579 (and x4026 x3807)))
(assert (x4106 x302))
(assert (x4106 x4253))
(assert (= x3431 (and x1138 (not x124))))
(assert (x4106 x2037))
(assert (= (and x22 x4211) x2493))
(assert (= (and x3104 x3073) x4363))
(assert (=> (>= 10000 x3880) (= (x2376 x3880) (x3241 x3880))))
(assert (= x1764 (or x3739 x3924)))
(assert (= x148 (and x1338 x3853)))
(assert (= x4289 (and x1122 (not x160))))
(assert (= x3045 (and x3513 (not x4250))))
(assert (= (and x2965 x899) x252))
(assert (= (and x2143 x238) x2971))
(assert (= x2836 (and (not x3208) x270)))
(assert (= x1852 (and (not x713) x665)))
(assert (= x3663 (and x2598 x1184)))
(assert (= x213 (and x3665 x2186)))
(assert (= x3685 (or x1293 x3556)))
(assert (x4106 x2749))
(assert (= x2897 (and x1516 (not x719))))
(assert (=> (>= 10000 x4143) (= (x3241 x4143) (x2376 x4143))))
(assert (x4106 x2269))
(assert (x4106 x1508))
(assert (= (and x2812 (not x4226)) x4314))
(assert (= x2790 (or (and x4080 x2463) (and x2872 (not x2716)))))
(assert (x4106 x2891))
(assert (x4106 x4000))
(assert (= (=> (and (= x4146 x3154) (= x4255 x1622)) x2632) x759))
(assert (x4106 x861))
(assert (x4106 x2686))
(assert (x4106 x3862))
(assert (x4106 x2496))
(assert (= (and x4378 (not x1912)) x1371))
(assert (= (or (and x3691 x3524) (and (not x1384) x2678)) x3602))
(assert (= x627 (and x2637 x1366)))
(assert (x4106 x3634))
(assert (x4106 x4115))
(assert (x4106 x2720))
(assert (x4106 x989))
(assert (x4106 x1163))
(assert (= x789 (and x627 x250)))
(assert (= x91 (and x3096 (not x2925))))
(assert (x4106 x3430))
(assert (x2808 x2349))
(assert (= (and (not x3155) x3758) x3417))
(assert (x4106 x4333))
(assert (= (=> (and (= x2594 x617) (= x2252 x2982)) x2987) x2502))
(assert (= (and (not x1998) x3210) x1984))
(assert (x4106 x703))
(assert (= x1010 (and x2120 (not x1786))))
(assert (= x1726 (x1262 (x2376 x1726))))
(assert (x4106 x1318))
(assert (= x515 (=> (and (= (x461 (+ x3154 31)) x3763) (< x4387 1461501637330902918203684832716283019655932542976) (not (= 0 x2015)) (= x4387 (x105 x1313)) (not (= 0 x1622)) (>= x4387 0) (>= 1461501637330902918203684832716283019655932542975 x4387) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3154) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3154) true) (< x3154 32)))) (= x2015 (x2388 (x2376 x4387))) (= x933 (x1249 (- x3191 x3322))) (= x3322 (x461 (+ x4089 x2467))) (= (or x3817 x65) x3981) (= x1630 (x461 (+ x3322 4))) x3981 (= x3817 (= x4387 x4269)) (= (= x2882 x4387) x2791) (= (x461 (+ x1630 32)) x3191) (= x65 (= x2882 x4387)) (= (x4048 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3763) x4089)) (and (=> (and x2791 (and (< x2062 3645313523) (not (> 4 x3973)) (> x2204 0) (= (x2388 (x2376 x2882)) x2204) (= (x1249 (- x3973 4)) x2628) (= x3250 x3174) (= x2578 82641394424300342035733052706735002277943222088490025348945809093694544936960) (= x2062 3065339685) (not (> 2376452955 x2062)) (= x3973 x933) (not (> 3065339685 x2062)) (= x3973 36) (= (or (and (> 32 x2628) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2628))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2628)) x1957))) (and (=> x1957 x352) (=> (and (and (= x1776 (x2799 x3250 2)) (< x814 1461501637330902918203684832716283019655932542976) (= x3174 x2369) (>= 1461501637330902918203684832716283019655932542975 x814) (<= 0 x814) (= (= x814 x275) x4211)) (not x1957)) (and (=> (and (= (= 0 x275) x1017) x4211) (and (=> x1017 x352) (=> (and (= (= 0 x1776) x3491) (not x1017)) (and (=> (and (not x3491) (and (= x1305 (> x341 x1007)) (<= x341 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x341 0) (= x1007 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1776))))) (and (=> (and (not x1305) (and (= (> x3352 x1007) x1747) (= (x461 (+ x341 x1776)) x2112) (= (x1050 x2460) x3352) (= (x4257 (x2376 x275) (x3241 2) 0) x2460) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3352) (>= x3352 0))) (and (=> (and (and (<= x2561 1461501637330902918203684832716283019655932542975) (>= x2561 0) (= (x461 (+ x1776 x3352)) x984) (= x1283 1) (= x2840 (x4257 (x2376 x275) (x3241 2) 0)) (> 1461501637330902918203684832716283019655932542976 x2561) (= x2070 128) (= x3270 (= x2882 x2561))) (not x1747)) (and (=> (and (= (= x4269 x2561) x3396) (not x3270)) (and (=> (and (not x3396) (= (= x2561 x864) x1789)) (and (=> (and (not x1789) (= (= x2561 x3371) x63)) (and (=> (and (and (= x1210 (x2388 (x2376 x3371))) (= 100 x611) (not (< x611 4)) (not (= x884 404098525)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4168) (> x1210 0) (= x1557 (x1249 (- x611 4))) (= x275 x2148) (not (= 117300739 x884)) (= x2369 x1121) (= x884 599290589) (= x2882 x1251) (< x884 826074471) (not (= 157198259 x884)) (= x3142 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1557) (and (> 96 x1557) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1557) true)))) (= x611 100)) x63) (and (=> (and (and (= (= x2148 x275) x419) (= x2148 x3231)) (not x3142)) (and (=> (not x419) x2294) (=> (and x419 (and (= (= x2882 x1251) x2102) (= x1251 x4385))) (and (=> (not x2102) x2294) (=> (and (and (<= 0 x1317) (= x3683 (> x2369 x1317)) (= x1445 x1121) (= x4248 (x4257 (x2376 x2148) (x3241 2) 0)) (= x1317 (x1983 x4248)) (<= x1317 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x2102) (and (=> (and (= (> x1121 x1317) x3034) (not x3683)) (and (=> x3034 x2294) (=> (and (not x3034) (and (= x1784 (x1249 (- x1317 x1121))) (= (x4257 (x2376 x2148) (x3241 2) 0) x3925) (<= x4008 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4008 (x2906 x3582)) (= x1580 (< x276 x4008)) (= (x4257 (x2376 x1251) (x3241 2) 0) x3582) (>= x4008 0) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1121)) x276))) (and (=> x1580 x2294) (=> (and (not x1580) (and (= (> x4008 x3294) x647) (= (x461 (+ x4008 x1121)) x3294))) (and (=> (and (not x647) (and (= x2044 (x4257 (x2376 x2882) x3291 0)) (<= 0 x612) (<= x612 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x308 x2044) x612) (= (< x612 x1121) x3295) (= x3291 (x4257 (x2376 x2148) (x3241 3) 0)) (= x3752 (x4257 (x2376 x1251) (x3241 2) 0)))) (and (=> (and (not x3295) (= x4044 (> x1121 x612))) (and (=> (and (and (= 32 x3957) (= (x1249 (- x612 x1121)) x117) (= 1 x1196)) (not x4044)) x4401) (=> x4044 x2294))) (=> x3295 x2294))) (=> x647 x2294))))))) (=> x3683 x2294))))))) (=> x3142 x2294))) (=> (and (not x63) (= (= x2561 x2311) x2540)) (and (=> (and (= (= x3880 x2561) x1719) (not x2540)) (and (=> (and (and (= x3229 x2369) (not (= x4140 157198259)) (not (= x4140 117300739)) (< 0 x1777) (not (> 4 x312)) (= x275 x1662) (< x4140 826074471) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3039) (= x2882 x4275) (= 100 x312) (= (x1249 (- x312 4)) x54) (= x312 100) (= x4140 599290589) (not (= 404098525 x4140)) (= (x2388 (x2376 x3880)) x1777) (= x2342 (or (> x54 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x54 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x54 96))))) x1719) (and (=> x2342 x987) (=> (and (and (= x1662 x1796) (= (= x275 x1662) x2169)) (not x2342)) (and (=> (and x2169 (and (= x4275 x221) (= (= x2882 x4275) x2806))) (and (=> (not x2806) x987) (=> (and x2806 (and (<= x3005 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2916 x3839) x3005) (= x3229 x1839) (= x1826 (> x2369 x3005)) (= x3839 (x4257 (x2376 x1662) (x3241 2) 0)) (<= 0 x3005))) (and (=> (and (not x1826) (= (> x3229 x3005) x1526)) (and (=> (and (not x1526) (and (<= 0 x2297) (= x1460 (> x2297 x3000)) (= (x4257 (x2376 x1662) (x3241 2) 0) x4258) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2297) (= x2297 (x1907 x3893)) (= x3893 (x4257 (x2376 x4275) (x3241 2) 0)) (= (x1249 (- x3005 x3229)) x404) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3229)) x3000))) (and (=> (and (not x1460) (and (= (> x2297 x4091) x202) (= x4091 (x461 (+ x3229 x2297))))) (and (=> (and (and (= x297 (< x506 x3229)) (= x506 (x710 x2665)) (<= 0 x506) (= (x4257 (x2376 x1662) (x3241 3) 0) x420) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x506) (= x2665 (x4257 (x2376 x2882) x420 0))) (not x202)) (and (=> (and (not x297) (= (< x506 x3229) x2409)) (and (=> x2409 x987) (=> (and (not x2409) (and (= x4125 1) (= x3698 (x1249 (- x506 x3229))) (= 32 x648))) x196))) (=> x297 x987))) (=> x202 x987))) (=> x1460 x987))) (=> x1526 x987))) (=> x1826 x987))))) (=> (not x2169) x987))))) (=> (and (not x1719) (and (and x532 (and (= x1078 599290589) (= x4325 (x2388 (x2376 x706))) (not (= 157198259 x1078)) (not (= x1078 117300739)) (= x2882 x660) (= (x1249 (- x2999 4)) x839) (= x4391 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x839) (and (= true (<= x839 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x839 96)))) (= x2999 100) (= x2369 x703) (= x1808 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< 0 x4325) (> 826074471 x1078) (not (= x1078 404098525)) (= x1106 x275) (= x2999 100) (not (> 4 x2999)))) (= (= x706 x2561) x532))) (and (=> x4391 x1201) (=> (and (and (= (= x275 x1106) x1786) (= x1090 x1106)) (not x4391)) (and (=> (not x1786) x1201) (=> (and (and (= x3786 (= x660 x2882)) (= x660 x3990)) x1786) (and (=> (not x3786) x1201) (=> (and x3786 (and (= x2071 x703) (<= 0 x3132) (= (x67 x750) x3132) (= x750 (x4257 (x2376 x1106) (x3241 2) 0)) (= x3095 (< x3132 x2369)) (<= x3132 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x3095) (= (> x703 x3132) x1487)) (and (=> (and (and (= (x4257 (x2376 x1106) (x3241 2) 0) x1552) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4306) (= x2662 (> x4306 x3277)) (= (x266 x1226) x4306) (>= x4306 0) (= (x4257 (x2376 x660) (x3241 2) 0) x1226) (= (x1249 (- x3132 x703)) x941) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x703)) x3277)) (not x1487)) (and (=> x2662 x1201) (=> (and (and (= x3441 (> x4306 x50)) (= x50 (x461 (+ x703 x4306)))) (not x2662)) (and (=> x3441 x1201) (=> (and (not x3441) (and (= (x1234 x3331) x3329) (<= 0 x3329) (= x2154 (< x3329 x703)) (<= x3329 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4257 (x2376 x2882) x4119 0) x3331) (= (x4257 (x2376 x660) (x3241 2) 0) x2395) (= (x4257 (x2376 x1106) (x3241 3) 0) x4119))) (and (=> (and (not x2154) (= (< x3329 x703) x263)) (and (=> x263 x1201) (=> (and (not x263) (and (= x1123 (x1249 (- x3329 x703))) (= 1 x2548) (= x2933 32))) x1114))) (=> x2154 x1201))))))) (=> x1487 x1201))) (=> x3095 x1201))))))))))) (=> (and (and (not (= x1688 404098525)) (= (or (and (= (<= x401 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x401)) (> x401 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3253) (= x401 (x1249 (- x717 4))) (= x275 x1497) (= x1439 x2369) (= x1494 (x2388 (x2376 x2311))) (= x717 100) (= x1688 599290589) (= x2940 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> x1494 0) (< x1688 1086394137) (= x1914 x2882) (not (= x1688 157198259)) (not (= 117300739 x1688)) (= 100 x717) (not (< x717 4))) x2540) (and (=> x3253 x2601) (=> (and (not x3253) (and (= x1190 x1497) (= (= x1497 x275) x4159))) (and (=> (and (and (= x964 x1914) (= (= x1914 x2882) x2004)) x4159) (and (=> (and (and (= (> x2369 x3777) x3350) (= x861 x1439) (<= x3777 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3777 (x3451 x1023)) (= (x4257 (x2376 x1497) (x3241 2) 0) x1023) (>= x3777 0)) x2004) (and (=> x3350 x2601) (=> (and (= (> x1439 x3777) x316) (not x3350)) (and (=> (and (not x316) (and (>= x49 0) (= (x4257 (x2376 x1914) (x3241 2) 0) x1294) (= x4056 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1439))) (= (> x49 x4056) x1901) (= (x1249 (- x3777 x1439)) x2162) (= x2729 (x4257 (x2376 x1497) (x3241 2) 0)) (= x49 (x4262 x1294)) (<= x49 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x1901 x2601) (=> (and (and (= (< x4002 x49) x3640) (= (x461 (+ x1439 x49)) x4002)) (not x1901)) (and (=> (and (not x3640) (and (= (x4257 (x2376 x1497) (x3241 3) 0) x3426) (<= 0 x1519) (= (x4257 (x2376 x1914) (x3241 2) 0) x418) (= (< x1519 x1439) x4311) (= x1519 (x260 x3203)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1519) (= x3203 (x4257 (x2376 x2882) x3426 0)))) (and (=> x4311 x2601) (=> (and (not x4311) (= (> x1439 x1519) x588)) (and (=> x588 x2601) (=> (and (not x588) (and (= x1873 (x1249 (- x1519 x1439))) (= x3969 32) (= 1 x321))) x2928))))) (=> x3640 x2601))))) (=> x316 x2601))))) (=> (not x2004) x2601))) (=> (not x4159) x2601))))))))) (=> (and (and (> 826074471 x3140) (= x510 (x1249 (- x230 4))) (= x230 100) (= x3140 599290589) (> x3931 0) (= x1763 x2882) (not (= 404098525 x3140)) (not (= 117300739 x3140)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x796) (not (> 4 x230)) (= x2369 x4344) (= 100 x230) (= x275 x2261) (= (x2388 (x2376 x864)) x3931) (not (= x3140 157198259)) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x510)) (< x510 96)) (> x510 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x134)) x1789) (and (=> x134 x3693) (=> (and (and (= x1436 x2261) (= x1868 (= x2261 x275))) (not x134)) (and (=> (and x1868 (and (= x129 (= x1763 x2882)) (= x1876 x1763))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3832) (= (x4257 (x2376 x2261) (x3241 2) 0) x2225) (= (x215 x2225) x3832) (= x2543 x4344) (<= 0 x3832) (= (< x3832 x2369) x2042)) x129) (and (=> (and (not x2042) (= x2955 (< x3832 x4344))) (and (=> (and (not x2955) (and (= x4009 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4344))) (= (> x755 x4009) x4295) (= (x4257 (x2376 x2261) (x3241 2) 0) x1814) (= (x1249 (- x3832 x4344)) x1463) (= x755 (x1727 x2038)) (= x2038 (x4257 (x2376 x1763) (x3241 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x755) (<= 0 x755))) (and (=> (and (and (= x1284 (x461 (+ x4344 x755))) (= x3966 (> x755 x1284))) (not x4295)) (and (=> x3966 x3693) (=> (and (and (= x3901 (> x4344 x1261)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1261) (<= 0 x1261) (= (x2326 x1498) x1261) (= x1498 (x4257 (x2376 x2882) x203 0)) (= x203 (x4257 (x2376 x2261) (x3241 3) 0))) (not x3966)) (and (=> (and (not x3901) (= x1333 (> x4344 x1261))) (and (=> x1333 x3693) (=> (and (and (= 32 x1101) (= x1464 (x1249 (- x1261 x4344))) (= x4092 1)) (not x1333)) x1556))) (=> x3901 x3693))))) (=> x4295 x3693))) (=> x2955 x3693))) (=> x2042 x3693))) (=> (not x129) x3693))) (=> (not x1868) x3693))))))) (=> (and (and (= x912 x275) (= x901 x2369) (= 100 x1979) (not (< x1979 4)) (not (> 157198259 x459)) (= 599290589 x459) (= x431 (x2388 (x2376 x4269))) (= 100 x1979) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3597)) (< x3597 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3597)) x1077) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x298) (< x459 2376452955) (= x4000 x2882) (not (= 157198259 x459)) (< 0 x431) (= (x1249 (- x1979 4)) x3597) (not (= 404098525 x459)) (< x459 649617121)) x3396) (and (=> (and (and (= x2549 x912) (= (= x275 x912) x3216)) (not x1077)) (and (=> (not x3216) x3025) (=> (and x3216 (and (= x4000 x4049) (= x2876 (= x4000 x2882)))) (and (=> (and (and (= x3078 (x958 x3433)) (= x4110 (< x3078 x2369)) (<= x3078 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x901 x3030) (>= x3078 0) (= x3433 (x4257 (x2376 x912) (x3241 2) 0))) x2876) (and (=> (and (not x4110) (= x2780 (< x3078 x901))) (and (=> (and (not x2780) (and (= x3368 (x1249 (- x3078 x901))) (= (x222 x189) x1882) (= x2328 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x901))) (= x2481 (< x2328 x1882)) (= x189 (x4257 (x2376 x4000) (x3241 2) 0)) (= (x4257 (x2376 x912) (x3241 2) 0) x2140) (<= x1882 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1882))) (and (=> (and (and (= x2115 (x461 (+ x1882 x901))) (= (> x1882 x2115) x4254)) (not x2481)) (and (=> (and (and (= (x3864 x537) x1968) (= (x4257 (x2376 x4000) (x3241 2) 0) x963) (= (> x901 x1968) x1759) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1968) (= x537 (x4257 (x2376 x2882) x30 0)) (<= 0 x1968) (= (x4257 (x2376 x912) (x3241 3) 0) x30)) (not x4254)) (and (=> x1759 x3025) (=> (and (not x1759) (= x1404 (< x1968 x901))) (and (=> x1404 x3025) (=> (and (and (= x3412 1) (= (x1249 (- x1968 x901)) x4182) (= 32 x1650)) (not x1404)) x3242))))) (=> x4254 x3025))) (=> x2481 x3025))) (=> x2780 x3025))) (=> x4110 x3025))) (=> (not x2876) x3025))))) (=> x1077 x3025))))) (=> (and x3270 (and (< 0 x843) (= x2882 x1349) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1231) (> 649617121 x3709) (= x2765 x2369) (not (> 157198259 x3709)) (= (x2388 (x2376 x2882)) x843) (= x2827 x275) (= x1618 100) (= x1618 100) (= (x1249 (- x1618 4)) x972) (not (= 404098525 x3709)) (> 2376452955 x3709) (not (< x1618 4)) (= (or (> x972 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x972 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x972) true))) x2668) (= 599290589 x3709) (not (= 157198259 x3709)))) (and (=> (and (not x2668) (and (= (= x275 x2827) x4052) (= x2827 x1538))) (and (=> (not x4052) x83) (=> (and (and (= x2837 x1349) (= x3407 (= x1349 x2882))) x4052) (and (=> (not x3407) x83) (=> (and x3407 (and (= x3578 (> x2369 x1340)) (>= x1340 0) (= x2765 x3546) (= (x4257 (x2376 x2827) (x3241 2) 0) x2404) (<= x1340 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4070 x2404) x1340))) (and (=> (and (= x2359 (< x1340 x2765)) (not x3578)) (and (=> x2359 x83) (=> (and (not x2359) (and (>= x1137 0) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2765)) x4066) (= (< x4066 x1137) x797) (= (x1249 (- x1340 x2765)) x1005) (= x498 (x4257 (x2376 x2827) (x3241 2) 0)) (= (x623 x4366) x1137) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1137) (= (x4257 (x2376 x1349) (x3241 2) 0) x4366))) (and (=> (and (and (= x1912 (< x2392 x1137)) (= (x461 (+ x2765 x1137)) x2392)) (not x797)) (and (=> (and (and (<= x3998 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x385 x2323) x3998) (= x4024 (x4257 (x2376 x2827) (x3241 3) 0)) (= (< x3998 x2765) x2086) (= x2323 (x4257 (x2376 x2882) x4024 0)) (<= 0 x3998)) (not x1912)) (and (=> (and (not x2086) (= x3459 (< x3998 x2765))) (and (=> x3459 x83) (=> (and (and (= x1523 1) (= (x1249 (- x3998 x2765)) x1224) (= 32 x2796)) (not x3459)) x184))) (=> x2086 x83))) (=> x1912 x83))) (=> x797 x83))))) (=> x3578 x83))))))) (=> x2668 x83))))) (=> x1747 x352))) (=> x1305 x352))) (=> x3491 x352))))) (=> (not x4211) x352))))) (=> (and (not x2791) (and (and (and (= 82641394424300342035733052706735002277943222088490025348945809093694544936960 x3160) (not (> 3065339685 x885)) (= x885 3065339685) (not (> 4 x1600)) (= x1215 (x1249 (- x1600 4))) (not (> 2376452955 x885)) (= x1600 36) (= x302 x3250) (= x1600 x933) (< x885 3645313523) (= x396 (or (and (= (<= x1215 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1215 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1215))) (< 0 x3548) (= x3548 (x2388 (x2376 x4269)))) x3457) (= (= x4387 x4269) x3457))) (and (=> (and (not x396) (and (= x3522 (= x4186 x275)) (>= x4186 0) (= x3157 (x2799 x3250 2)) (= x302 x2238) (<= x4186 1461501637330902918203684832716283019655932542975) (< x4186 1461501637330902918203684832716283019655932542976))) (and (=> (not x3522) x2902) (=> (and (= (= x275 0) x3475) x3522) (and (=> x3475 x2902) (=> (and (= x1969 (= x3157 0)) (not x3475)) (and (=> (and (and (= (< x9 x931) x2598) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x931) (>= x931 0) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3157)) x9)) (not x1969)) (and (=> x2598 x2902) (=> (and (not x2598) (and (<= 0 x3315) (= x3781 (> x3315 x9)) (= (x461 (+ x931 x3157)) x2105) (= x3315 (x958 x1725)) (<= x3315 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4257 (x2376 x275) (x3241 2) 0) x1725))) (and (=> x3781 x2902) (=> (and (not x3781) (and (<= 0 x3885) (= x1034 1) (= 128 x1672) (>= 1461501637330902918203684832716283019655932542975 x3885) (< x3885 1461501637330902918203684832716283019655932542976) (= x618 (= x3885 x2882)) (= x948 (x461 (+ x3157 x3315))) (= (x4257 (x2376 x275) (x3241 2) 0) x366))) (and (=> (and (not x618) (= x481 (= x3885 x4269))) (and (=> (and (= x511 (= x864 x3885)) (not x481)) (and (=> (and (not x511) (= x846 (= x3885 x3371))) (and (=> (and x846 (and (= x275 x3283) (= x2238 x1241) (not (= 404098525 x1660)) (= x4269 x1058) (= x2655 (or (> x3943 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x3943 96) (= true (<= x3943 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (= x1660 117300739)) (= 100 x3575) (not (> 4 x3575)) (= x1660 599290589) (< 0 x4177) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x205) (= x3943 (x1249 (- x3575 4))) (= (x2388 (x2376 x3371)) x4177) (not (= x1660 157198259)) (= x3575 100) (< x1660 826074471))) (and (=> x2655 x2766) (=> (and (and (= x4304 x3283) (= x3121 (= x275 x3283))) (not x2655)) (and (=> (and x3121 (and (= x3523 x1058) (= (= x1058 x4269) x4004))) (and (=> (and (and (>= x198 0) (= x198 (x1983 x2832)) (= (> x2238 x198) x2123) (= x1241 x1715) (= x2832 (x4257 (x2376 x3283) (x3241 2) 0)) (<= x198 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x4004) (and (=> x2123 x2766) (=> (and (not x2123) (= (< x198 x1241) x2869)) (and (=> (and (and (= (x4257 (x2376 x3283) (x3241 2) 0) x2698) (<= x3824 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3824) (= (x4257 (x2376 x1058) (x3241 2) 0) x1567) (= x3824 (x2180 x1567)) (= x1831 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1241))) (= x375 (< x1831 x3824)) (= (x1249 (- x198 x1241)) x2479)) (not x2869)) (and (=> x375 x2766) (=> (and (not x375) (and (= x442 (> x3824 x2588)) (= x2588 (x461 (+ x3824 x1241))))) (and (=> (and (and (= (< x2501 x1241) x82) (<= x2501 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4257 (x2376 x1058) (x3241 2) 0) x482) (= (x308 x353) x2501) (= (x4257 (x2376 x4269) x2426 0) x353) (= (x4257 (x2376 x3283) (x3241 3) 0) x2426) (<= 0 x2501)) (not x442)) (and (=> x82 x2766) (=> (and (not x82) (= x3983 (< x2501 x1241))) (and (=> x3983 x2766) (=> (and (and (= 1 x2358) (= (x1249 (- x2501 x1241)) x3874) (= x1239 32)) (not x3983)) x273))))) (=> x442 x2766))))) (=> x2869 x2766))))) (=> (not x4004) x2766))) (=> (not x3121) x2766))))) (=> (and (= (= x3885 x2311) x1500) (not x846)) (and (=> (and (not x1500) (= x3448 (= x3880 x3885))) (and (=> (and (and (= x3344 100) (= x4143 x275) (not (> 4 x3344)) (= x4269 x607) (< x4351 826074471) (= x4394 x2238) (= x3344 100) (= 599290589 x4351) (< 0 x2571) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2101) (= (or (> x2454 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2454)) (< x2454 96))) x3560) (= (x2388 (x2376 x3880)) x2571) (not (= 404098525 x4351)) (= (x1249 (- x3344 4)) x2454) (not (= x4351 157198259)) (not (= 117300739 x4351))) x3448) (and (=> x3560 x137) (=> (and (not x3560) (and (= x4143 x2118) (= (= x4143 x275) x3398))) (and (=> (not x3398) x137) (=> (and (and (= x1872 x607) (= x103 (= x4269 x607))) x3398) (and (=> (and x103 (and (<= x3977 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x3977 x2238) x3432) (= x3977 (x2916 x3060)) (= x3060 (x4257 (x2376 x4143) (x3241 2) 0)) (= x973 x4394) (<= 0 x3977))) (and (=> (and (not x3432) (= (< x3977 x4394) x1898)) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1061) (= x1353 (x4257 (x2376 x607) (x3241 2) 0)) (= (< x527 x1061) x3066) (>= x1061 0) (= x527 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4394))) (= x2435 (x1249 (- x3977 x4394))) (= (x1113 x1353) x1061) (= x1543 (x4257 (x2376 x4143) (x3241 2) 0))) (not x1898)) (and (=> x3066 x137) (=> (and (not x3066) (and (= (x461 (+ x4394 x1061)) x2560) (= (< x2560 x1061) x3393))) (and (=> x3393 x137) (=> (and (not x3393) (and (>= x3534 0) (<= x3534 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4257 (x2376 x4269) x1158 0) x3199) (= (< x3534 x4394) x4131) (= (x4257 (x2376 x4143) (x3241 3) 0) x1158) (= x3534 (x710 x3199)))) (and (=> x4131 x137) (=> (and (= (< x3534 x4394) x4094) (not x4131)) (and (=> (and (not x4094) (and (= x3145 32) (= x512 1) (= x61 (x1249 (- x3534 x4394))))) x2828) (=> x4094 x137))))))))) (=> x1898 x137))) (=> x3432 x137))) (=> (not x103) x137))))))) (=> (and (and (and (and (> 826074471 x1619) (= x2238 x3092) (not (= 404098525 x1619)) (= (x1249 (- x3138 4)) x3499) (= x3138 100) (not (< x3138 4)) (= x1619 599290589) (= x3138 100) (= (x2388 (x2376 x706)) x3974) (= x275 x3026) (not (= 117300739 x1619)) (not (= 157198259 x1619)) (= x424 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x1620 (or (and (= true (<= x3499 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3499 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3499))) (= x4269 x633) (< 0 x3974)) x942) (= (= x3885 x706) x942)) (not x3448)) (and (=> x1620 x4114) (=> (and (not x1620) (and (= x3026 x2037) (= (= x275 x3026) x1710))) (and (=> (and (and (= (= x4269 x633) x2980) (= x2927 x633)) x1710) (and (=> (not x2980) x4114) (=> (and (and (>= x580 0) (= x1268 (< x580 x2238)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x580) (= (x4257 (x2376 x3026) (x3241 2) 0) x2023) (= (x67 x2023) x580) (= x3092 x2776)) x2980) (and (=> (and (= x636 (< x580 x3092)) (not x1268)) (and (=> (and (and (<= 0 x2891) (= (x2124 x2700) x2891) (= x2700 (x4257 (x2376 x633) (x3241 2) 0)) (= x1183 (x1249 (- x580 x3092))) (= x1014 (x4257 (x2376 x3026) (x3241 2) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2891) (= (> x2891 x1161) x2574) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3092)) x1161)) (not x636)) (and (=> (and (not x2574) (and (= x1361 (x461 (+ x3092 x2891))) (= x3015 (< x1361 x2891)))) (and (=> x3015 x4114) (=> (and (not x3015) (and (= x2365 (x4257 (x2376 x3026) (x3241 3) 0)) (= (< x3789 x3092) x3842) (<= x3789 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3789 0) (= (x1234 x548) x3789) (= (x4257 (x2376 x633) (x3241 2) 0) x3119) (= x548 (x4257 (x2376 x4269) x2365 0)))) (and (=> x3842 x4114) (=> (and (not x3842) (= (< x3789 x3092) x2996)) (and (=> (and (and (= x3183 1) (= 32 x2129) (= x3311 (x1249 (- x3789 x3092)))) (not x2996)) x2221) (=> x2996 x4114))))))) (=> x2574 x4114))) (=> x636 x4114))) (=> x1268 x4114))))) (=> (not x1710) x4114))))))) (=> (and x1500 (and (= x908 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3559) (and (> 96 x3559) (= (<= x3559 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not (= 117300739 x2887)) (= 100 x1768) (= 599290589 x2887) (= x4086 x2238) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x614) (not (= x2887 404098525)) (= 100 x1768) (> 1086394137 x2887) (= x3636 (x2388 (x2376 x2311))) (= x3559 (x1249 (- x1768 4))) (< 0 x3636) (not (= x2887 157198259)) (= x805 x4269) (not (< x1768 4)) (= x275 x4138))) (and (=> x908 x615) (=> (and (not x908) (and (= x4138 x104) (= (= x275 x4138) x1116))) (and (=> (and (and (= x805 x1583) (= (= x805 x4269) x280)) x1116) (and (=> (and (and (<= 0 x3080) (= x1372 x4086) (<= x3080 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3550 (> x2238 x3080)) (= x1244 (x4257 (x2376 x4138) (x3241 2) 0)) (= (x3451 x1244) x3080)) x280) (and (=> x3550 x615) (=> (and (= x1687 (> x4086 x3080)) (not x3550)) (and (=> x1687 x615) (=> (and (and (= x810 (< x3233 x582)) (= (x4257 (x2376 x4138) (x3241 2) 0) x3136) (= (x4257 (x2376 x805) (x3241 2) 0) x2792) (= (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4086)) x3233) (<= 0 x582) (= (x1596 x2792) x582) (= x3387 (x1249 (- x3080 x4086))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x582)) (not x1687)) (and (=> x810 x615) (=> (and (not x810) (and (= (> x582 x358) x95) (= x358 (x461 (+ x582 x4086))))) (and (=> x95 x615) (=> (and (not x95) (and (>= x231 0) (= (x260 x163) x231) (= x4380 (x4257 (x2376 x4138) (x3241 3) 0)) (<= x231 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x163 (x4257 (x2376 x4269) x4380 0)) (= x472 (< x231 x4086)) (= (x4257 (x2376 x805) (x3241 2) 0) x2672))) (and (=> x472 x615) (=> (and (= x55 (< x231 x4086)) (not x472)) (and (=> (and (not x55) (and (= 32 x3651) (= x1124 1) (= (x1249 (- x231 x4086)) x2459))) x1751) (=> x55 x615))))))))))))) (=> (not x280) x615))) (=> (not x1116) x615))))))))) (=> (and x511 (and (= x3661 (x1249 (- x3576 4))) (not (> 4 x3576)) (= x1204 x2238) (< 0 x799) (not (= 117300739 x3826)) (not (= 404098525 x3826)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3661) (and (< x3661 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3661) true))) x1147) (= 100 x3576) (= 599290589 x3826) (= x799 (x2388 (x2376 x864))) (= x3576 100) (= x3456 x4269) (= x2873 x275) (not (= 157198259 x3826)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x856) (> 826074471 x3826))) (and (=> x1147 x2361) (=> (and (not x1147) (and (= (= x275 x2873) x3181) (= x3037 x2873))) (and (=> (and x3181 (and (= x3318 (= x3456 x4269)) (= x3456 x2894))) (and (=> (and x3318 (and (<= 0 x1386) (= x3759 x1204) (= (> x2238 x1386) x3557) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1386) (= (x4257 (x2376 x2873) (x3241 2) 0) x3929) (= x1386 (x215 x3929)))) (and (=> x3557 x2361) (=> (and (= (> x1204 x1386) x2775) (not x3557)) (and (=> x2775 x2361) (=> (and (not x2775) (and (= (x4257 (x2376 x2873) (x3241 2) 0) x1704) (<= 0 x143) (= (x378 x1260) x143) (<= x143 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3057 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1204))) (= x1586 (x1249 (- x1386 x1204))) (= (x4257 (x2376 x3456) (x3241 2) 0) x1260) (= x3776 (< x3057 x143)))) (and (=> x3776 x2361) (=> (and (and (= x4402 (> x143 x555)) (= x555 (x461 (+ x1204 x143)))) (not x3776)) (and (=> (and (not x4402) (and (= (x4257 (x2376 x4269) x1547 0) x339) (= (x4257 (x2376 x2873) (x3241 3) 0) x1547) (= x4192 (x2326 x339)) (= x2903 (> x1204 x4192)) (<= x4192 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4192 0))) (and (=> (and (not x2903) (= x4145 (< x4192 x1204))) (and (=> x4145 x2361) (=> (and (not x4145) (and (= x2273 32) (= (x1249 (- x4192 x1204)) x2054) (= x2692 1))) x4142))) (=> x2903 x2361))) (=> x4402 x2361))))))))) (=> (not x3318) x2361))) (=> (not x3181) x2361))))))) (=> (and (and (= x2238 x2329) (< 0 x172) (not (< x702 4)) (= x2014 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 157198259 x4200)) (= 599290589 x4200) (= x1804 x4269) (< x4200 2376452955) (= x172 (x2388 (x2376 x4269))) (not (= x4200 404098525)) (= 100 x702) (= x702 100) (> 649617121 x4200) (not (= x4200 157198259)) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x597) true) (< x597 96)) (> x597 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1783) (= (x1249 (- x702 4)) x597) (= x3141 x275)) x481) (and (=> x1783 x2132) (=> (and (and (= (= x3141 x275) x3279) (= x1318 x3141)) (not x1783)) (and (=> (not x3279) x2132) (=> (and x3279 (and (= x27 x1804) (= (= x4269 x1804) x2275))) (and (=> (not x2275) x2132) (=> (and (and (<= 0 x1930) (= (x4257 (x2376 x3141) (x3241 2) 0) x3822) (= x4101 (< x1930 x2238)) (= x1344 x2329) (= x1930 (x3793 x3822)) (<= x1930 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x2275) (and (=> x4101 x2132) (=> (and (= (> x2329 x1930) x1336) (not x4101)) (and (=> (and (and (= x2736 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2329))) (= (x1249 (- x1930 x2329)) x3906) (= (x74 x1765) x565) (= x2658 (< x2736 x565)) (= x2389 (x4257 (x2376 x3141) (x3241 2) 0)) (= x1765 (x4257 (x2376 x1804) (x3241 2) 0)) (<= x565 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x565 0)) (not x1336)) (and (=> (and (not x2658) (and (= (> x565 x2878) x3290) (= x2878 (x461 (+ x565 x2329))))) (and (=> x3290 x2132) (=> (and (and (= (x3864 x2159) x2108) (= (x4257 (x2376 x1804) (x3241 2) 0) x876) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2108) (= x14 (x4257 (x2376 x3141) (x3241 3) 0)) (>= x2108 0) (= x2159 (x4257 (x2376 x4269) x14 0)) (= (> x2329 x2108) x1469)) (not x3290)) (and (=> (and (= x2011 (< x2108 x2329)) (not x1469)) (and (=> x2011 x2132) (=> (and (and (= x2088 (x1249 (- x2108 x2329))) (= 32 x3537) (= 1 x2267)) (not x2011)) x2568))) (=> x1469 x2132))))) (=> x2658 x2132))) (=> x1336 x2132))))))))))))) (=> (and (and (not (> 157198259 x3863)) (not (= x3863 157198259)) (= x1194 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x672 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1535) (and (< x1535 96) (= (<= x1535 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (> 2376452955 x3863) (= x4269 x1588) (= x300 100) (> x2958 0) (> 649617121 x3863) (= (x2388 (x2376 x2882)) x2958) (= x3863 599290589) (= x300 100) (not (< x300 4)) (= x2670 x2238) (= x275 x3655) (= (x1249 (- x300 4)) x1535) (not (= x3863 404098525))) x618) (and (=> x672 x3656) (=> (and (not x672) (and (= x3655 x741) (= x1179 (= x275 x3655)))) (and (=> (not x1179) x3656) (=> (and (and (= x4062 (= x4269 x1588)) (= x1588 x2356)) x1179) (and (=> (and (and (= x2670 x1063) (= (x4257 (x2376 x3655) (x3241 2) 0) x2624) (= x1117 (< x1707 x2238)) (<= 0 x1707) (<= x1707 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1707 (x1050 x2624))) x4062) (and (=> (and (= x1941 (< x1707 x2670)) (not x1117)) (and (=> x1941 x3656) (=> (and (and (= x4343 (x1249 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2670))) (<= x1295 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4109 x674) x1295) (= x3480 (x1249 (- x1707 x2670))) (= x725 (> x1295 x4343)) (>= x1295 0) (= (x4257 (x2376 x1588) (x3241 2) 0) x674) (= (x4257 (x2376 x3655) (x3241 2) 0) x1513)) (not x1941)) (and (=> (and (not x725) (and (= x3151 (x461 (+ x2670 x1295))) (= (< x3151 x1295) x1643))) (and (=> (and (not x1643) (and (= (x4257 (x2376 x3655) (x3241 3) 0) x875) (<= x1218 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x385 x724) x1218) (<= 0 x1218) (= x724 (x4257 (x2376 x4269) x875 0)) (= x3036 (< x1218 x2670)))) (and (=> x3036 x3656) (=> (and (= x507 (> x2670 x1218)) (not x3036)) (and (=> x507 x3656) (=> (and (and (= 1 x288) (= (x1249 (- x1218 x2670)) x292) (= 32 x185)) (not x507)) x1139))))) (=> x1643 x3656))) (=> x725 x3656))))) (=> x1117 x3656))) (=> (not x4062) x3656))))))))))))) (=> x1969 x2902))))))) (=> x396 x2902)))))))
(assert (= (and x3600 x3214) x2797))
(assert (= x3026 (x1262 (x2376 x3026))))
(assert (= x1646 (and x1570 (not x587))))
(assert (x4106 x2467))
(assert (= x25 (or x3673 x3812)))
(assert (= (and x2324 x82) x1925))
(assert (= x2346 (and x421 x1207)))
(assert (x4106 x552))
(assert (x4106 x2508))
(assert (x4106 x580))
(assert (= (and x1705 x1988) x1577))
(assert (= x3785 (and x4120 x1710)))
(assert (x4106 x262))
(assert (= x2663 (and (not x716) x2457)))
(assert (= (=> (and (= x3193 x429) (= x3645 0)) x869) x3686))
(assert (x4106 x2476))
(assert (x4106 x3510))
(assert (= (and x1589 x2988) x3252))
(assert (x4106 x2258))
(assert (= x621 (or x3827 x2271 x3264 x1037 x3370 x504 x1893)))
(assert (x4106 x3696))
(assert (x4106 x3072))
(assert (x4106 x1478))
(assert (= (and (not x1603) x3668) x3052))
(assert (= (x1262 (x2376 x3772)) x3772))
(assert (= (and x43 x48) x3886))
(assert (= x2592 (and x3446 x3253)))
(assert (x4106 x3826))
(assert (= (and x3424 x2656) x806))
(assert (= (and x3691 (not x3524)) x2678))
(assert (x4106 x2912))
(assert (= x1037 (or x3922 x142)))
(assert (x4106 x3944))
(assert (x4106 x328))
(assert (= (and x3171 (not x4231)) x2262))
(assert (x4106 x1746))
(assert (=> (>= 10000 x2724) (= (x2376 x2724) (x3241 x2724))))
(assert (x4106 x803))
(assert (= (x1262 (x2376 x4269)) x4269))
(assert (= x2209 (=> (and (= x3779 x535) (= x3455 0)) x1483)))
(assert (x4106 x1320))
(assert (= x2884 (and x2529 (not x691))))
(assert (= (and x882 (not x3776)) x1754))
(assert (= x2025 (=> (and (= x2919 x241) (= 0 x3639)) x1529)))
(assert (= x1212 (x1262 (x2376 x1212))))
(assert (= (x3241 2766140528) (x2376 2766140528)))
(assert (= (and x2274 x2557) x1495))
(assert (= x899 (and (not x1280) x1203)))
(assert (= (x1262 (x2376 x3880)) x3880))
(assert (x4106 x3823))
(assert (= x2157 (and x2704 (not x3328))))
(assert (x4106 x3447))
(assert (x4106 x3568))
(assert (x4106 x3336))
(assert (x4106 x948))
(assert (x2291 32))
(assert (x4106 x349))
(assert (x4106 x3998))
(assert (=> (>= 10000 x721) (= (x2376 x721) (x3241 x721))))
(assert (x1189 x3991))
(assert (= x2116 (=> (and (= x241 x3722) (= 0 x2476)) x1539)))
(assert (x4106 x3921))
(assert (x4106 x2779))
(assert (=> (<= x3532 10000) (= (x3241 x3532) (x2376 x3532))))
(assert (x4106 x495))
(assert (= (and x3831 x926) x2509))
(assert (x4106 x3536))
(assert (x4106 x3729))
(assert (= (and (not x1336) x3671) x456))
(assert (= (and x2734 (not x737)) x80))
(assert (x4106 x1502))
(assert (= (and x1946 x4346) x2743))
(assert (= (or x158 x3169 x1064 x577 x4386 x3190) x4309))
(assert (x4106 x1239))
(assert (= x2656 (and x3096 x2925)))
(assert (x2808 x1914))
(assert (= (=> (and (= (= x2982 0) x3807) (or (not x3807) x3807)) x727) x2987))
(assert (x4106 x3988))
(assert (= (and (not x514) x1597) x364))
(assert (x4106 x3639))
(assert (= x2193 (and x2434 x2312)))
(assert (= (or x44 x1819) x2167))
(assert (x4106 x1536))
(assert (x4106 x3961))
(assert (x4106 x3789))
(assert (x2291 x2584))
(assert (x4106 x779))
(assert (x4106 x2713))
(assert (x4106 x1194))
(assert (= (and (not x2194) x23) x425))
(assert (= x977 (=> (and (= x578 (= 0 x45)) (or (not x578) x578)) x3872)))
(assert (=> (>= 10000 x2523) (= (x2376 x2523) (x3241 x2523))))
(assert (= (=> (and (= x2313 x3024) (= x2416 x3507)) x3029) x3179))
(assert (= (x2376 2753274959) (x3241 2753274959)))
(assert (=> (<= x1503 10000) (= (x3241 x1503) (x2376 x1503))))
(assert (x4106 x3507))
(assert (=> (>= 10000 x1914) (= (x2376 x1914) (x3241 x1914))))
(assert (= x762 (and x2575 x3361)))
(assert (= (x1262 (x2376 x2311)) x2311))
(assert (= x3358 (and x831 x2944)))
(assert (x4106 x1542))
(assert (x4106 x319))
(assert (= (=> (and (= x2794 x1991) (= x45 x853)) x977) x2778))
(assert (= (and x1184 (not x2598)) x967))
(assert (= (or x4053 x4249) x16))
(assert (x4106 x1827))
(assert (= x2593 (and (not x1705) x1988)))
(assert (x4106 x3736))
(assert (x4106 x2330))
(assert (= (and x3192 x4205) x2542))
(assert (x4106 x327))
(assert (x4106 x117))
(assert (x4106 x2146))
(assert (x4106 x1968))
(assert (x4106 x2005))
(assert (x4106 x170))
(assert (=> (>= 10000 x3456) (= (x3241 x3456) (x2376 x3456))))
(assert (x4106 x292))
(assert (= x1461 (and x1664 x1820)))
(assert (x4106 x2031))
(assert (= x830 (and x4126 x945)))
(assert (x4106 x1587))
(assert (x4106 x3496))
(assert (x4106 x3450))
(assert (x4106 x3548))
(assert (x4106 x3506))
(assert (x4106 x2581))
(assert (= (and x2932 x161) x3334))
(assert (= x1481 (and x3095 x1454)))
(assert (x4106 x1279))
(assert (= x526 (and x1677 x563)))
(assert (= x2418 (or x2787 x1329 x696)))
(assert (x4106 x1768))
(assert (= x4240 (or (and x1245 x3061) (and (not x994) x4112))))
(assert (= x2518 (and x103 x2405)))
(assert (= x3728 (and x1904 x1757)))
(assert (= (or x487 x3144) x4015))
(assert (= (or x2468 x2856 x1086 x2087 x71 x1308) x2322))
(assert (= x1597 (or (and x782 (not x1989)) x3545)))
(assert (x4106 x4016))
(assert (= (and (not x3791) x3391) x3162))
(assert (= (and (not x3421) x2661) x4152))
(assert (= x2871 (and x2040 x2158)))
(assert (= x598 (and x2688 (not x188))))
(assert (x4106 x434))
(assert (x4106 x3566))
(assert (x4106 x2082))
(assert (= x1070 (and (not x1904) x1757)))
(assert (= (and x2514 x4377) x2826))
(assert (x4106 x1444))
(assert (x4106 x3127))
(assert (x4106 x2839))
(assert (x4106 x4288))
(assert (=> (<= x1899 10000) (= (x2376 x1899) (x3241 x1899))))
(assert (= (and (not x2780) x2680) x1929))
(assert (x4106 x1109))
(assert (x4106 x3759))
(assert (= (and x322 x2266) x4307))
(assert (= x2688 (and (not x469) x1924)))
(assert (= (and (not x120) x2357) x2301))
(assert (x4106 x3599))
(assert (= (and x3775 (not x3572)) x1940))
(assert (= x3190 (and x4314 x4312)))
(assert (x4106 x1215))
(assert (=> (<= x2311 10000) (= (x2376 x2311) (x3241 x2311))))
(assert (= (and (not x3066) x1150) x4078))
(assert (x4106 x2907))
(assert (x4106 x3744))
(assert (x4106 x901))
(assert (=> (>= 10000 x3141) (= (x2376 x3141) (x3241 x3141))))
(assert (x4106 x128))
(assert (= (x1262 (x2376 x2849)) x2849))
(assert (x4106 x984))
(assert (x4106 x2878))
(assert (= (and (not x1621) x1282) x3600))
(assert (= 3187245334 (x1262 (x3241 3187245334))))
(assert (x4106 x1809))
(assert (= (x1262 (x2376 x2873)) x2873))
(assert (= (and x3457 x2605) x3738))
(assert (= x2605 (and x412 (not x2791))))
(assert (= x999 (and x2219 (not x3211))))
(assert (x4106 x2684))
(assert (x4106 x1558))
(assert (x4106 x964))
(assert (= x3492 (and (not x419) x681)))
(assert (x4106 x3490))
(assert (x2808 x2849))
(assert (x4106 x4357))
(assert (x4106 x884))
(assert (= x1432 (and (not x1951) x2355)))
(assert (x4106 x1779))
(assert (x4106 x1225))
(assert (x4106 x2735))
(assert (= (and x3738 (not x396)) x3865))
(assert (= (x3241 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x2376 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x2529 (and (not x2465) x3844)))
(assert (=> (>= 10000 x4293) (= (x2376 x4293) (x3241 x4293))))
(assert (x4106 x2610))
(assert (= x1591 (and x3453 x354)))
(assert (= x2597 (or x2860 x2231 x2166 x1156 x3846 x237)))
(assert (x4106 x743))
(assert (x4106 x2858))
(assert (= (and (not x2079) x2028) x3234))
(assert (= x1790 (and (not x134) x513)))
(assert (= x1714 (x1262 (x2376 x1714))))
(assert (x4106 x3840))
(assert (= x970 (and x4162 x3076)))
(assert (x4106 x179))
(assert (x4106 x3223))
(assert (x4106 x3579))
(assert (x4106 x408))
(assert (= x3848 (or x2093 x41)))
(assert (= x1423 (and x1980 x2574)))
(assert (= (x1262 (x2376 x2843)) x2843))
(assert (x4106 x1292))
(assert (x4106 x2062))
(assert (x4106 x2545))
(assert (x4106 x404))
(assert (x4106 x3977))
(assert (x4106 x1735))
(assert (= (and x2634 (not x1170)) x1074))
(assert (x4106 x807))
(assert (= (and (not x636) x3721) x1980))
(assert (x4106 x1522))
(assert (x4106 x1568))
(assert (= (and x1370 x1572) x282))
(assert (x4106 x21))
(assert (x4106 x1920))
(assert (x4106 x1830))
(assert (x4106 x3317))
(assert (= x3748 (and x2493 x1017)))
(assert (x4106 x2986))
(assert (x4106 x201))
(assert (= (and x1958 x1745) x1057))
(assert (= x906 (and (not x692) x999)))
(assert (= (=> (and (= x3992 x185) (= x288 0)) x1139) x3656))
(assert (x4106 x3547))
(assert (x4106 x611))
(assert (x4106 x1082))
(assert (x2291 x3991))
(assert (x4106 x1586))
(assert (= (and x1107 (not x588)) x2660))
(assert (= (and x2844 x1289) x540))
(assert (= (and x2396 (not x2662)) x1171))
(assert (x2808 x1058))
(assert (x1189 x3763))
(assert (= x389 (and x4161 (not x2876))))
(assert (x4106 x2412))
(assert (x4106 x2470))
(assert (x4106 x4143))
(assert (x4106 x4395))
(assert (= x2175 (and x3796 (not x1635))))
(assert (x4106 x3567))
(assert (= (and x2994 (not x1785)) x960))
(assert (= x4209 (or x718 x125 x1408 x2592 x2992 x2520 x3869 x1806 x1918)))
(assert (x4106 x3517))
(assert (= (and x960 x3128) x1360))
(assert (=> (>= 10000 x1763) (= (x2376 x1763) (x3241 x1763))))
(assert (= (or x951 x1853 x2016) x857))
(assert (x4106 x1246))
(assert (= (and (not x3432) x2518) x584))
(assert (= x13 (and x178 (not x2824))))
(assert (= x3192 (and x1390 x2586)))
(assert (x4106 x3030))
(assert (= (and x1242 (not x572)) x3646))
(assert (= (and x1651 (not x3516)) x1810))
(assert (= (=> (and (= x2129 x1997) (= x3183 x1243)) x4360) x2221))
(assert (= (and x2111 x904) x1089))
(assert (= x2090 (and (not x3253) x3446)))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x2008 x3961 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x2799 x3961 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x3961)) (x1418 x3961 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4174 x3961 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3919 x3961 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x3362 (and x2138 (not x1565))))
(assert (= (and (not x1915) x4390) x3204))
(assert (x4106 x1523))
(assert (x4106 x4076))
(assert (x4106 x382))
(assert (=> (>= 10000 x3447) (= (x3241 x3447) (x2376 x3447))))
(assert (= (x1262 (x2376 x1899)) x1899))
(assert (= (and x3909 (not x95)) x3975))
(assert (x4106 x2931))
(assert (x4106 x2243))
(assert (x4106 x1152))
(assert (= (=> (and (= x3992 x3145) (= x512 0)) x2828) x137))
(assert (x4106 x3514))
(assert (= (and x2757 (not x507)) x1))
(assert (x4106 x1882))
(assert (x4106 x3277))
(assert (x4106 x1798))
(assert (= (or x4356 (and (not x578) x1455)) x23))
(assert (= (x1262 (x3241 2753274959)) 2753274959))
(assert (x4106 x3754))
(assert (= (and (not x1677) x563) x2319))
(assert (x4106 x3658))
(assert (= (or (and x436 x2149) (and x926 (not x3831))) x3487))
(assert (= x2422 (and x676 (not x1579))))
(assert (x2808 x4275))
(assert (= x2821 (x1262 (x2376 x2821))))
(assert (x4106 x2922))
(assert (x4106 x459))
(assert (= x4286 (or x2818 x2697)))
(assert (= x1173 (and x4232 x1476)))
(assert (= (and x576 x539) x2991))
(assert (= (and x2854 x3842) x2461))
(assert (= x3773 (and x3659 x3646)))
(assert (x4106 x2510))
(assert (x4106 x2453))
(assert (= (and x2186 (not x3665)) x1350))
(assert (= (or x4118 x2234 x3889 x3175 x1040 x3053) x66))
(assert (x4106 x3344))
(assert (x4106 x2310))
(assert (= x3264 (or x1569 x433)))
(assert (=> (<= x167 10000) (= (x3241 x167) (x2376 x167))))
(assert (= (and (not x3350) x109) x2417))
(assert (x4106 x1295))
(assert (= 579358252 (x1262 (x3241 579358252))))
(assert (x4106 x1464))
(assert (x4106 x3154))
(assert (= (=> (and (= x373 x792) (= x3625 x3100)) x883) x3381))
(assert (= (or (and x2422 (not x1849)) (and x1579 x676)) x398))
(assert (x4106 x3110))
(assert (x4106 x1761))
(assert (= x1394 (and x4295 x4266)))
(assert (x4106 x2178))
(assert (= x3673 (or (and (not x1825) x1144) (and x738 x1615))))
(assert (x2808 x2424))
(assert (x4106 x3323))
(assert (x4106 x1688))
(assert (x2808 x1426))
(assert (= (or (and x3403 x2802) (and x1572 (not x1370))) x2820))
(assert (x4106 x3730))
(assert (= (and x3865 (not x3522)) x4061))
(assert (= (x1262 (x2376 x2682)) x2682))
(assert (x4106 x878))
(assert (x4106 x1106))
(assert (= (and x3073 (not x3104)) x488))
(assert (= (and x4152 (not x4180)) x1250))
(assert (x4106 x1600))
(assert (= x2345 (and x2241 x2200)))
(assert (= (and x795 (not x4038)) x236))
(assert (= (and x3900 x4265) x599))
(assert (x4106 x3285))
(assert (= x1046 (and x1945 (not x2972))))
(assert (= x2036 (and (not x1305) x1894)))
(assert (= 2514000705 (x1262 (x3241 2514000705))))
(assert (x2808 x1939))
(assert (=> (<= x3736 10000) (= (x3241 x3736) (x2376 x3736))))
(assert (= (or x3886 x605 x2172 x1874 x3019 x1916) x1578))
(assert (= x3048 (x1262 (x2376 x3048))))
(assert (x4106 x3837))
(assert (x4106 x1445))
(assert (x4106 x2267))
(assert (x4106 x3138))
(assert (= x2131 (or (and x3956 (not x3189)) (and x480 x3887))))
(assert (x4106 x3097))
(assert (x4106 x2302))
(assert (x4106 x3768))
(assert (= (and x2505 x2564) x47))
(assert (x4106 x2427))
(assert (x4106 x2397))
(assert (=> (<= x2525 10000) (= (x2376 x2525) (x3241 x2525))))
(assert (= x1645 (and (not x3448) x937)))
(assert (= x1828 (and x4379 x3177)))
(assert (x4106 x1599))
(assert (=> (<= x2181 10000) (= (x2376 x2181) (x3241 x2181))))
(assert (= (x1262 (x2376 x4388)) x4388))
(assert (= (and x2564 (not x2505)) x2355))
(assert (x4106 x1172))
(assert (x4106 x2473))
(assert (= x4381 (and x1608 x2455)))
(assert (= (and x1157 (not x1848)) x242))
(assert (= (=> (and (= x1225 0) (= x1655 x1217)) x2338) x2753))
(assert (x2808 x921))
(assert (x4106 x493))
(assert (= (or x348 (and (not x2530) x3971)) x1550))
(assert (= (and x2373 (not x1351)) x2028))
(assert (x4106 x2311))
(assert (x4106 x1923))
(assert (x4106 x3006))
(assert (x4106 x4280))
(assert (= x4235 (and x2606 x3797)))
(assert (= x3922 (and (not x2011) x685)))
(assert (x4106 x76))
(assert (= x1103 (or x3995 x3903)))
(assert (= (and x3032 x2801) x2631))
(assert (x4106 x1105))
(assert (x4106 x3970))
(assert (x4106 x4165))
(assert (= x2034 (and (not x3882) x3728)))
(assert (x4106 x3799))
(assert (= (and x2429 x940) x2825))
(assert (x4106 x2927))
(assert (x2808 x4006))
(assert (= x500 (x1262 (x2376 x500))))
(assert (= (or x4215 x1981 x2354 x1193 x1657 x1610 x3492 x1466 x1673) x1782))
(assert (x4106 x4192))
(assert (x4106 x3246))
(assert (x2808 x2843))
(assert (x4106 x3094))
(assert (= (x1262 (x2376 x1450)) x1450))
(assert (x4106 x2585))
(assert (x4106 x3444))
(assert (= x1424 (and x4023 (not x4331))))
(assert (x4106 x3288))
(assert (x4106 x3877))
(assert (=> (<= x779 10000) (= (x2376 x779) (x3241 x779))))
(assert (= x2290 (and (not x3557) x3449)))
(assert (= (=> (and (= x881 x4221) (= x2754 0)) x2058) x2433))
(assert (x4106 x2788))
(assert (=> (>= 10000 x2849) (= (x2376 x2849) (x3241 x2849))))
(assert (= (or x242 x556) x1329))
(assert (= x135 (or x959 x1369)))
(assert (= (x1262 (x3241 117300739)) 117300739))
(assert (= x4353 (and x3784 x1617)))
(assert (= (and x1891 (not x3771)) x4060))
(assert (= x2514 (or x25 x2718 x1146 x651 x4302 x505 x1753)))
(assert (x4106 x3894))
(assert (x4106 x2866))
(assert (= (and x192 x4121) x2087))
(assert (x4106 x1096))
(assert (x4106 x3183))
(assert (= (x2376 76402721711080721455099699717775724453355902399574518144543212547937138638848) (x3241 76402721711080721455099699717775724453355902399574518144543212547937138638848)))
(assert (x4106 x2445))
(assert (x4106 x296))
(assert (x2808 x2310))
(assert (= x1634 (x1262 (x2376 x1634))))
(assert (x2808 x3766))
(assert (=> (<= x3994 10000) (= (x3241 x3994) (x2376 x3994))))
(assert (x4106 x1872))
(assert (= (x1262 (x2376 x2012)) x2012))
(assert (x4106 x1465))
(assert (= (=> (and (or x145 (not x145)) (= x145 (= x133 0))) x3489) x330))
(assert (= x3284 (=> (and (or x2066 (not x2066)) (= x2066 (= 0 x1362))) x530)))
(assert (x4106 x470))
(assert (= x2324 (and (not x442) x1736)))
(assert (=> (>= 10000 x3454) (= (x3241 x3454) (x2376 x3454))))
(assert (x4106 x1706))
(assert (= x3063 (and x1940 x4247)))
(assert (= (and x70 x1405) x3858))
(assert (x4106 x2981))
(assert (= x1674 (and x2732 x3402)))
(assert (x4106 x3610))
(assert (x2808 x1561))
(assert (= x1025 (and x2994 x1785)))
(assert (x4106 x4244))
(assert (= x2410 (or (and (not x2630) x621) x3064)))
(assert (x4106 x1190))
(assert (= x3476 (=> (= x2465 (= 0 x373)) (and (=> (and (= x3187 x4133) x2465) x4399) (=> (and (not x2465) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3625) (and (> 32 x3625) (= (<= x3625 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x691)) (and (=> (and (not x691) (and (= x2866 1) (= x4123 x3187))) x3143) (=> (and (= x4133 x3187) x691) x4399)))))))
(assert (x4106 x2400))
(assert (x4106 x2501))
(assert (= x1637 (=> (and (= x1321 x3881) (= x2031 x2687)) x440)))
(assert (x4106 x657))
(assert (= (=> (= x1031 (= 0 x2043)) (and (=> x1031 x352) (=> (and (= (or (and (< x1931 32) (= (<= x1931 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1931)) x1612) (not x1031)) (and (=> x1612 x352) (=> (and (= x4043 1) (not x1612)) x1602))))) x1182))
(assert (=> (<= x2424 10000) (= (x3241 x2424) (x2376 x2424))))
(assert (= (and x4250 x3513) x772))
(assert (x4106 x706))
(assert (x4106 x3888))
(assert (= x2629 (and x985 x3883)))
(assert (x4106 x198))
(assert (x4106 x1034))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x2008 x1478 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x2799 x1478 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1478)) (x1418 x1478 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4174 x1478 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3919 x1478 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x4106 x3563))
(assert (= (and (not x1333) x911) x1742))
(assert (x4106 x351))
(assert (x4106 x439))
(assert (= x2777 (and x908 x4243)))
(assert (= (and x1472 (not x2850)) x3624))
(assert (= x4263 (and x3564 x1719)))
(assert (= (x1262 (x3241 649617121)) 649617121))
(assert (x4106 x1100))
(assert (x4106 x597))
(assert (= x1184 (and x4071 (not x1969))))
(assert (x4106 x3397))
(assert (=> (>= 10000 x2012) (= (x3241 x2012) (x2376 x2012))))
(assert (= (and (not x971) x976) x4031))
(assert (x4106 x214))
(assert (x4106 x2619))
(assert (= (and (not x2274) x2557) x2143))
(assert (x4106 x1758))
(assert (x2808 x912))
(assert (x4106 x1436))
(assert (=> (>= 10000 x1714) (= (x3241 x1714) (x2376 x1714))))
(assert (x4106 x3978))
(assert (x4106 x221))
(assert (= (and x725 x1813) x11))
(assert (x4106 x2754))
(assert (= (or x2743 x936) x3033))
(assert (x4106 x1795))
(assert (x4106 x547))
(assert (= x831 (and (not x4141) x1507)))
(assert (= (and (not x192) x4121) x3838))
(assert (x4106 x1662))
(assert (= x791 (and x233 x3878)))
(assert (x4106 x218))
(assert (= x2200 (and x4067 x2034)))
(assert (= (x1262 (x3241 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (and (not x1487) x3731) x2396))
(assert (x4106 x680))
(assert (= x1588 (x1262 (x2376 x1588))))
(assert (x2291 1461501637330902918203684832716283019655932542976))
(assert (= x663 (and (not x1026) x397)))
(assert (=> (<= x4388 10000) (= (x3241 x4388) (x2376 x4388))))
(assert (x4106 x2560))
(assert (= (x1262 (x2376 x660)) x660))
(assert (x2808 x3371))
(assert (= (and x2747 x760) x158))
(assert (= (or x2983 x2289) x388))
(assert (x4106 x2867))
(assert (x2808 x1251))
(assert (x4106 x3140))
(assert (= x3013 (and x4364 x1947)))
(assert (x4106 x2693))
(assert (x4106 x2392))
(assert (x4106 x1847))
(assert (= (or x1041 x4334) x3611))
(assert (x4106 x2618))
(assert (= (=> (and (= (= x1622 0) x4377) (or x4377 (not x4377))) x515) x2632))
(assert (x4106 x1324))
(assert (x4106 x331))
(assert (= (and x2662 x2396) x1216))
(assert (x4106 x1571))
(assert (x4106 x1342))
(assert (= 2766140528 (x1262 (x3241 2766140528))))
(assert (x4106 x1362))
(assert (= x1316 (and (not x4131) x1354)))
(assert (= x793 (and x412 x2791)))
(assert (= (and (not x1373) x3676) x3816))
(assert (=> (<= x262 10000) (= (x2376 x262) (x3241 x262))))
(assert (= x1657 (and x3034 x1690)))
(assert (=> (>= 10000 x2713) (= (x3241 x2713) (x2376 x2713))))
(assert (= x3299 (and x2639 x57)))
(assert (x4106 x4303))
(assert (x4106 x3969))
(assert (x4106 x1728))
(assert (= (=> (and (= x2767 x2982) (= x617 x3137)) x2987) x992))
(assert (x4106 x2105))
(assert (= (=> (and (= x3794 x306) (= x1438 0)) x64) x1213))
(assert (x4106 x4320))
(assert (= (and (not x1869) x4363) x2920))
(assert (= x687 (=> (and (= 0 x4021) (= x2545 x3547)) x2408)))
(assert (x4106 x2139))
(assert (= x504 (or x3504 x1)))
(assert (= x3493 (and x1493 x2629)))
(assert (x4106 x1233))
(assert (= (and x3792 x3593) x2988))
(assert (= x3745 (and (not x3900) x4265)))
(assert (x4106 x431))
(assert (x4106 x2299))
(assert (= x284 (and (not x3128) x960)))
(assert (x4106 x3833))
(assert (= x3308 (and x3208 x270)))
(assert (= (=> (= x2194 (= x45 0)) (and (=> (and (= x2250 x1950) x2194) x438) (=> (and (not x2194) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1991) true) (> 32 x1991)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1991)) x4107)) (and (=> (and (and (= x24 x1950) (= 1 x325)) (not x4107)) x1840) (=> (and (= x1950 x2250) x4107) x438))))) x3872))
(assert (x4106 x1544))
(assert (x4106 x1546))
(assert (x4106 x2607))
(assert (= x2718 (or x1126 x2280)))
(assert (= (=> (and (= x3547 x1473) (= 0 x153)) x4083) x3059))
(assert (x4106 x3549))
(assert (x4106 x3551))
(assert (x4106 x2621))
(assert (x4106 x1877))
(assert (x4106 x1349))
(assert (= x1602 (=> (= x4043 x133) x330)))
(assert (x4106 x607))
(assert (= (=> (and (= x1243 x1124) (= x3651 x1997)) x4360) x1751))
(assert (=> (<= x2349 10000) (= (x2376 x2349) (x3241 x2349))))
(assert (x4106 x934))
(assert (= x1807 (=> (and (= x1996 (= x4269 x2885)) (= (x2388 (x2376 x2885)) x2272) (= (x461 (+ x2048 32)) x3134) (= x1533 (x2760 x1313 1)) (<= 0 x842) (= (x1249 (- x3134 x264)) x2182) (<= x2885 1461501637330902918203684832716283019655932542975) (= (or x1996 x2708) x166) (= (x1616 x1533) x842) (not (or (> x2031 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2031)) (> 32 x2031)))) (not (= 0 x2272)) (= x923 (= x2885 x2882)) (= (x105 x1313) x2885) (= x1478 (x461 (+ x2031 31))) (= x2048 (x461 (+ x264 4))) (= (= x2885 x2882) x2708) x166 (= x264 (x461 (+ x2726 x4199))) (not (= x3881 0)) (<= x842 1461501637330902918203684832716283019655932542975) (< x842 1461501637330902918203684832716283019655932542976) (<= 0 x2885) (= x4199 (x4048 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1478)) (> 1461501637330902918203684832716283019655932542976 x2885)) (and (=> (and (and (< x2669 3645313523) (not (= 3065339685 x2669)) (= x2472 x2182) (= (x1249 (- x2472 4)) x165) (= x842 x2773) (> x3561 0) (not (< x2472 4)) (= x2472 36) (= 3187245334 x2669) (= x1974 85927964219764727760667161919810921830953265369826564066086284937368273158144) (= x3751 (or (> x165 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x165 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x165)))) (= (x2388 (x2376 x2882)) x3561) (not (< x2669 2376452955)) (not (< x2669 3065339685))) x923) (and (=> x3751 x2590) (=> (and (and (= (= x842 x2773) x1628) (= x3719 x2773)) (not x3751)) (and (=> (and x1628 (= x2899 1)) x414) (=> (not x1628) x2590))))) (=> (and (not x923) (and (and x4364 (and (= x1649 (x1249 (- x4252 4))) (not (< x3046 3065339685)) (= x2182 x4252) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1649) (and (> 32 x1649) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1649)))) x197) (= x4280 85927964219764727760667161919810921830953265369826564066086284937368273158144) (= 36 x4252) (not (< x3046 2376452955)) (= x3046 3187245334) (= (x2388 (x2376 x4269)) x2511) (< x3046 3645313523) (not (< x4252 4)) (not (= 3065339685 x3046)) (= x842 x3506) (< 0 x2511))) (= (= x2885 x4269) x4364))) (and (=> (and (not x197) (and (= (= x3506 x842) x195) (= x3246 x3506))) (and (=> (and (= 1 x299) x195) x574) (=> (not x195) x834))) (=> x197 x834)))))))
(assert (x4106 x1148))
(assert (x4106 x1255))
(assert (x4106 x3588))
(assert (x4106 x3368))
(assert (= x892 (and x3750 x1085)))
(assert (x4106 x2817))
(assert (x4106 x2053))
(assert (= (and x490 (not x202)) x907))
(assert (= x2812 (and x416 (not x544))))
(assert (= (or x2570 x3780) x2063))
(assert (= (and (not x3465) x1948) x1507))
(assert (x4106 x2406))
(assert (x4106 x4130))
(assert (= x3108 (and x1631 x2702)))
(assert (x4106 x1993))
(assert (x4106 x1426))
(assert (= x2236 (and x342 x236)))
(assert (x4106 x102))
(assert (x4106 x2664))
(assert (x4106 x922))
(assert (= x1659 (and x4136 (not x1404))))
(assert (x4106 x2104))
(assert (= (=> (and (= x1655 x340) (= x2862 0)) x454) x2073))
(assert (= (=> (and (= x753 x4221) (= x3601 0)) x1491) x4014))
(assert (and (= (* 2 (x2799 x3250 2)) (- x3250 (x4048 1 x3250))) (x2725 x3250 2) (x2838 x3250 2) (x768 x3250 2) (=> (and (< 0 x3250) (< 0 2)) (and (<= (* (x2799 x3250 2) 2) x3250) (> (* (x2799 x3250 2) 2) (- x3250 2)))) (x4328 x3250 2)))
(assert (= (and x3112 (not x1348)) x2983))
(assert (x4106 x2683))
(assert (x4106 x2827))
(assert (= x3692 (x1262 (x2376 x3692))))
(assert (x4106 x1857))
(assert (= (and (not x53) x3835) x518))
(assert (= x3103 (or x309 x410 x3079 x1022 x677 x1961)))
(assert (x1036 x3961))
(assert (= (x1262 (x3241 20853193852723734048814770637610870652489083209607696777694672748161462697984)) 20853193852723734048814770637610870652489083209607696777694672748161462697984))
(assert (= (and x155 x3240) x1515))
(assert (x4106 x2580))
(assert (= x4156 (and x1609 x1379)))
(assert (x4106 x1386))
(assert (= x4118 (and x3299 x3413)))
(assert (x4106 x3016))
(assert (x4106 x1557))
(assert (x4106 x3999))
(assert (x4106 x3037))
(assert (x4106 x323))
(assert (= (=> (and (= x2692 x1243) (= x2273 x1997)) x4360) x4142))
(assert (= x3653 (and x1305 x1894)))
(assert (x4106 x2706))
(assert (x4106 x1199))
(assert (x2808 x2181))
(assert (x4106 x3041))
(assert (= (and x2193 (not x2091)) x3948))
(assert (= (or x37 x952) x696))
(assert (x4106 x3043))
(assert (= x869 (=> (and (= x2815 x3645) (= x3182 x429)) x3098)))
(assert (x4106 x143))
(assert (= (and x3475 x3615) x4117))
(assert (= x2954 (and (not x1911) x1074)))
(assert (= (=> (and (= x3855 x3794) (= x3125 0)) x581) x534))
(assert (x4106 x4027))
(assert (x4106 x933))
(assert (= x3091 (and (not x342) x236)))
(assert (x4106 x1218))
(assert (x4106 x3651))
(assert (= (=> (and (and (= (or x1322 x2126) x1738) (not (= x133 0)) (= x3648 x379) (= (x2573 x1858) x379) (> 1461501637330902918203684832716283019655932542976 x2975) (= x2768 (x2388 (x2376 x706))) (>= x2975 0) (= (x4257 (x2376 x721) (x3241 2) 0) x1858) (not (= 826074471 x1830)) x1738 (>= x379 0) (>= 1461501637330902918203684832716283019655932542975 x721) (not (< x1830 826074471)) (= (x105 x1313) x2975) (= 1889567281 x1830) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x379) (>= 1461501637330902918203684832716283019655932542975 x2975) (= x721 x2427) (= (= x4269 x2975) x1322) (< 0 x2768) (= x2126 (= x2882 x2975))) (and (and (and (<= 0 x3501) (= x3467 (x4257 (x2376 x3888) (x3241 2) 0)) (= x924 x2559) (>= 1461501637330902918203684832716283019655932542975 x3888) (not (< x1388 826074471)) (<= x3501 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x3207) (= x3207 (x2388 (x2376 x3371))) (= x3501 x3427) (not (= x1388 826074471)) (= x3501 (x2216 x3467)) (= x3888 x2427) (= 1889567281 x1388)) (and (and (= x3411 x1428) (= x4230 x2620) (= x673 (= x3411 x2620)) (= x3312 x1447)) (and (< 0 x2641) (<= 0 x1312) (= (x2439 x4124) x1312) (= x2641 (x2388 (x2376 x2311))) (= x500 x2427) (= x1312 x1447) (= x4124 (x4257 (x2376 x500) (x3241 2) 0)) (not (= 1086394137 x954)) (>= 1461501637330902918203684832716283019655932542975 x500) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1312) (= x3427 x690) (not (< x954 1086394137)) (= 1889567281 x954)))) (and (= x4230 x3648) (not (= 1422172137 x1963)) (> 2376452955 x1963) (= x2427 x2259) (= (x4257 (x2376 x2259) (x3241 2) 0) x4206) (= (x3268 x4206) x3828) (>= x3828 0) (not (= 1086394137 x1963)) (not (< x1963 649617121)) (<= x2259 1461501637330902918203684832716283019655932542975) (not (= x1963 872247156)) (not (> 872247156 x1963)) (< 0 x3314) (= x3314 (x2388 (x2376 x4269))) (<= x3828 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3828 x2559) (= x1963 1889567281)))) (and (=> (and (= x924 x2923) (= x3841 x343) (= (= x2923 x343) x1302)) (and x1302 (=> (and (= x3113 x3266) (= (= x765 x3266) x3009) (= x690 x765)) (and x3009 (=> (and (= x3312 x2438) (= x1111 (= x1221 x2438)) (= x1221 x1056)) x1111))))) x673)) x3489))
(assert (x4106 x1914))
(assert (x4106 x4194))
(assert (x4106 x3716))
(assert (x4106 x46))
(assert (x4106 x228))
(assert (= x4019 (and x481 x2072)))
(assert (x4106 x333))
(assert (= (and (not x2606) x3797) x1352))
(assert (x4106 x4204))
(assert (x4106 x1092))
(assert (= (or x1860 x654) x697))
(assert (=> (<= x1588 10000) (= (x3241 x1588) (x2376 x1588))))
(assert (= x727 (=> (= x1922 (= 0 x2982)) (and (=> (and x1922 (= x2949 x97)) x4148) (=> (and (= (or (> x617 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x617 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x617 32))) x1848) (not x1922)) (and (=> (and x1848 (= x2949 x97)) x4148) (=> (and (not x1848) (and (= x917 1) (= x97 x2084))) x2845)))))))
(assert (x4106 x3443))
(assert (= (or x4061 x2556 x2717 x3617 x4117 x1832 x3638 x3663) x1162))
(assert (= (=> (and (= x3969 x1931) (= x2043 x321)) x2333) x2928))
(assert (= (=> (and (= x1243 x288) (= x1997 x185)) x4360) x1139))
(assert (= (=> (and (= x3625 x1385) (= x373 x811)) x883) x3220))
(assert (= x240 (or x3712 x386 x3281 x789 x1025 x1360)))
(assert (= (and x2793 x4234) x1574))
(assert (x4106 x4160))
(assert (= (and x2286 (not x2229)) x824))
(assert (= x3980 (and x3502 x3649)))
(assert (x4106 x1839))
(assert (= (and x3483 x80) x559))
(assert (x4106 x4113))
(assert (x4106 x2479))
(assert (x2808 x1752))
(assert (x4106 x133))
(assert (x4106 x3635))
(assert (x4106 x3679))
(assert (x4106 x1180))
(assert (= x377 (and x1652 x3162)))
(assert (= (=> (and (= 0 x3166) (= x4221 x1296)) x2671) x3373))
(assert (= (or (and (not x1744) x508) x3339) x979))
(assert (= 826074471 (x1262 (x3241 826074471))))
(assert (x4106 x2192))
(assert (=> (>= 10000 x1571) (= (x2376 x1571) (x3241 x1571))))
(assert (x4106 x3698))
(assert (x4106 x628))
(assert (= x3846 (and x2577 x731)))
(assert (x4106 x1161))
(assert (x4106 x361))
(assert (= 3645313523 (x1262 (x3241 3645313523))))
(assert (x2808 x1508))
(assert (= x4400 (or x3050 x3808 x3358 x1676 x362 x1865)))
(assert (x4106 x2628))
(assert (= x3909 (and (not x810) x1642)))
(assert (= x1156 (and x540 x3699)))
(assert (x4106 x1699))
(assert (x4106 x512))
(assert (x4106 x3802))
(assert (= x1472 (and (not x3784) x1617)))
(assert (x4106 x2130))
(assert (x4106 x2776))
(assert (= (x1262 (x2376 x2487)) x2487))
(assert (=> (<= x2821 10000) (= (x2376 x2821) (x3241 x2821))))
(assert (= x4321 (=> (and (= x2794 x689) (= 0 x853)) x2778)))
(assert (x4106 x1509))
(assert (x4106 x3230))
(assert (= x1819 (or (and x3592 x2868) (and x4229 (not x742)))))
(assert (= x1614 (and x2401 x2157)))
(assert (= (and (not x4135) x2733) x4100))
(assert (x4106 x4091))
(assert (=> (<= x805 10000) (= (x3241 x805) (x2376 x805))))
(assert (= x3989 (and x3688 x4207)))
(assert (= x4214 (and x3782 x567)))
(assert (x4106 x3968))
(assert (=> (<= x607 10000) (= (x2376 x607) (x3241 x607))))
(assert (x4106 x582))
(assert (x4106 x1281))
(assert (x4106 x809))
(assert (= x3650 (and x2715 x2246)))
(assert (= (x2376 20853193852723734048814770637610870652489083209607696777694672748161462697984) (x3241 20853193852723734048814770637610870652489083209607696777694672748161462697984)))
(assert (x4106 x3772))
(assert (x4106 x4009))
(assert (x4106 x3955))
(assert (x2808 x4293))
(assert (= (x1262 (x2376 x1172)) x1172))
(assert (= (and x887 x4004) x4082))
(assert (= x3583 (and x2247 (not x1901))))
(assert (= (or (and x4291 x2490) (and (not x683) x1871)) x1534))
(assert (x4106 x8))
(assert (x2808 x1588))
(assert (x4106 x4151))
(assert (x4106 x4319))
(assert (x4106 x3546))
(assert (x4106 x625))
(assert (x2808 x1172))
(assert (x4106 x1881))
(assert (= (x3241 3065339685) (x2376 3065339685)))
(assert (= x454 (=> (and (= x3563 x2862) (= x2299 x340)) x200)))
(assert (=> (>= 10000 x3970) (= (x2376 x3970) (x3241 x3970))))
(assert (x4106 x1971))
(assert (x4106 x1555))
(assert (=> (<= x2682 10000) (= (x2376 x2682) (x3241 x2682))))
(assert (= (=> (and (= x2982 x249) (= x617 x356)) x2987) x2977))
(assert (x4106 x232))
(assert (x4106 x350))
(assert (x2808 x3283))
(assert (x4106 x4304))
(assert (= (and (not x764) x1887) x1337))
(assert (= (and x1319 x3279) x3124))
(assert (x2808 x183))
(assert (= (x1262 (x2376 x4000)) x4000))
(assert (x4106 x1655))
(assert (x4106 x373))
(assert (x4106 x1154))
(assert (x4106 x3186))
(assert (= (and (not x2944) x831) x4023))
(assert (= x1282 (and x3038 x3947)))
(assert (= (x2376 826074471) (x3241 826074471)))
(assert (= x3169 (and x932 x2964)))
(assert (= (x1262 (x2376 x3454)) x3454))
(assert (= x1860 (and x2954 (not x4144))))
(assert (x4106 x2097))
(assert (= (and x1924 x469) x542))
(assert (x4106 x3125))
(assert (x4106 x1058))
(assert (x2808 x2375))
(assert (= x60 (=> (and (= x1385 x1112) (= 0 x811)) x3220)))
(assert (x4106 x3428))
(assert (= x4401 (=> (and (= x1931 x3957) (= x1196 x2043)) x2333)))
(assert (x4106 x1816))
(assert (=> (<= x1939 10000) (= (x2376 x1939) (x3241 x1939))))
(assert (x4106 x879))
(assert (= x3715 (x1262 (x2376 x3715))))
(assert (x4106 x3160))
(assert (x4106 x885))
(assert (= x909 (and x3728 x3882)))
(assert (= (or x1782 x3654) x502))
(assert (x4106 x1391))
(assert (= x1689 (and x1422 x4017)))
(assert (x4106 x4224))
(assert (=> (<= x4269 10000) (= (x3241 x4269) (x2376 x4269))))
(assert (= (=> (and (= x3992 x2273) (= x2692 0)) x4142) x2361))
(assert (x4106 x3949))
(assert (x4106 x72))
(assert (=> (<= x3569 10000) (= (x2376 x3569) (x3241 x3569))))
(assert (x4106 x2015))
(assert (x4106 x2064))
(assert (= x991 (and x3448 x937)))
(assert (x4106 x2652))
(assert (= (and x3555 x3933) x2890))
(assert (x4106 x318))
(assert (= x2227 (and x3838 (not x2141))))
(assert (= x3938 (or x4245 x383 x3275 x1480 x47 x1905 x91 x806)))
(assert (= (and (not x2370) x3543) x2704))
(assert (x4106 x379))
(assert (= x474 (and (not x2921) x4183)))
(assert (= (and (not x3429) x1845) x178))
(assert (= x3188 (=> (and (= (x461 (+ x281 32)) x4102) (>= x3982 0) (= (x105 x1313) x3982) (= x1702 (= x3982 x2882)) (= x4079 (or x1702 x1867)) (= (= x3982 x4269) x1867) (not (= 0 x2998)) (> 1461501637330902918203684832716283019655932542976 x2179) (= (or x3622 x1141) x1482) (= x3622 (= x2179 x864)) (= x281 (x461 (+ 4 x264))) x4079 (= (x106 x4318) x2179) (>= 1461501637330902918203684832716283019655932542975 x2179) (= (x1249 (- x866 x264)) x46) (= (= x2882 x2179) x514) (= (x461 (+ x281 64)) x866) (< x3982 1461501637330902918203684832716283019655932542976) (= (= x2179 x3371) x1141) (>= x2179 0) (>= 1461501637330902918203684832716283019655932542975 x3982) x1482) (and (=> (and x514 (and (< x3304 649617121) (not (> 4 x1492)) (= x46 x1492) (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x1837) (= x1492 68) (> x3566 0) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1096) (and (> 64 x1096) (= true (<= x1096 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x3592) (not (> 157198259 x3304)) (= x3982 x2523) (= (x1249 (- x1492 4)) x1096) (= x3304 157198259) (> 2376452955 x3304) (= (x2388 (x2376 x2882)) x3566))) (and (=> (and (and (= (= x3982 x2523) x742) (= x2523 x3647)) (not x3592)) (and (=> (and (and (= x3099 (x4257 (x2376 x275) (x3241 3) 0)) (= 32 x735) (= 1 x4320) (= (x4257 (x2376 x2523) x3099 0) x2485)) x742) x1594) (=> (not x742) x1043))) (=> x3592 x1043))) (=> (and (= x4166 (= x4269 x2179)) (not x514)) (and (=> (and (not x4166) (= x938 (= x2179 x864))) (and (=> (and (not x938) (= (= x3371 x2179) x3429)) (and (=> (and (not x3429) (= (= x2179 x2311) x2824)) (and (=> (and (= x816 (= x2179 x3880)) (not x2824)) (and (=> (and (and (= x1163 (x1249 (- x73 4))) (not (< x73 4)) (= x73 x46) (= x4224 (x2388 (x2376 x3880))) (> x4224 0) (= x3744 4238056678808933066457772256406219440718756300954938350892797929791311314944) (< x2510 826074471) (= x3403 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1163) true) (> 64 x1163)) (> x1163 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x2713 x3982) (= x2510 157198259) (not (= 117300739 x2510)) (= 68 x73)) x816) (and (=> (and (and (= x2713 x3186) (= x1370 (= x2713 x3982))) (not x3403)) (and (=> (and x1370 (and (= x1197 1) (= x4345 (x4257 (x2376 x2713) x468 0)) (= (x4257 (x2376 x275) (x3241 3) 0) x468) (= 32 x2709))) x2544) (=> (not x1370) x1341))) (=> x3403 x1341))) (=> (and (and (and (and (< x1407 826074471) (= x46 x3804) (= x1621 (or (and (> 64 x1960) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1960))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1960))) (= (x1249 (- x3804 4)) x1960) (= x1407 157198259) (not (> 4 x3804)) (= x3994 x3982) (> x4213 0) (not (= x1407 117300739)) (= x2922 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= 68 x3804) (= x4213 (x2388 (x2376 x706)))) x3947) (= x3947 (= x2179 x706))) (not x816)) (and (=> x1621 x2753) (=> (and (not x1621) (and (= x3214 (= x3982 x3994)) (= x3918 x3994))) (and (=> (and (and (= x3122 (x4257 (x2376 x275) (x3241 3) 0)) (= (x4257 (x2376 x3994) x3122 0) x2819) (= 32 x1217) (= 1 x1225)) x3214) x2338) (=> (not x3214) x2753))))))) (=> (and (and (not (< x2082 4)) (= x46 x2082) (< 0 x2986) (= x3833 (x1249 (- x2082 4))) (= x2341 157198259) (= x3280 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= (or (> x3833 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x3833 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3833 64))) x1579) (not (= 117300739 x2341)) (= x3982 x2491) (= 68 x2082) (= x2986 (x2388 (x2376 x2311))) (< x2341 1086394137)) x2824) (and (=> (and (not x1579) (and (= x635 x2491) (= (= x2491 x3982) x1849))) (and (=> (not x1849) x4361) (=> (and x1849 (and (= x483 (x4257 (x2376 x275) (x3241 3) 0)) (= x956 1) (= 32 x3754) (= x2654 (x4257 (x2376 x2491) x483 0)))) x3533))) (=> x1579 x4361))))) (=> (and (and (= x998 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= x417 x46) (< 0 x3768) (= x3768 (x2388 (x2376 x3371))) (= (x1249 (- x417 4)) x1920) (> 826074471 x790) (not (> 4 x417)) (= 68 x417) (= 157198259 x790) (= x2012 x3982) (not (= 117300739 x790)) (= x124 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1920) (and (= true (<= x1920 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1920 64))))) x3429) (and (=> x124 x2363) (=> (and (and (= x2012 x2183) (= (= x3982 x2012) x1387)) (not x124)) (and (=> (not x1387) x2363) (=> (and x1387 (and (= x3658 32) (= (x4257 (x2376 x275) (x3241 3) 0) x217) (= x3469 (x4257 (x2376 x2012) x217 0)) (= 1 x4132))) x3570))))))) (=> (and (and (< 0 x3610) (= 157198259 x1746) (= (or (and (< x1546 64) (= (<= x1546 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1546 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4116) (not (= 117300739 x1746)) (= (x2388 (x2376 x864)) x3610) (= x2938 68) (= x458 4238056678808933066457772256406219440718756300954938350892797929791311314944) (> 826074471 x1746) (= x3982 x3766) (= x1546 (x1249 (- x2938 4))) (not (< x2938 4)) (= x46 x2938)) x938) (and (=> x4116 x3320) (=> (and (not x4116) (and (= x3766 x813) (= x2546 (= x3982 x3766)))) (and (=> (and (and (= x653 1) (= (x4257 (x2376 x3766) x769 0) x295) (= x769 (x4257 (x2376 x275) (x3241 3) 0)) (= 32 x2706)) x2546) x258) (=> (not x2546) x3320))))))) (=> (and x4166 (and (= x3539 4238056678808933066457772256406219440718756300954938350892797929791311314944) (> x3011 0) (< x1402 2376452955) (< x1402 649617121) (= x1459 x46) (= x2385 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3587) (and (< x3587 64) (= true (<= x3587 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x3587 (x1249 (- x1459 4))) (not (> 157198259 x1402)) (not (< x1459 4)) (= x3011 (x2388 (x2376 x4269))) (= 68 x1459) (= 157198259 x1402) (= x3982 x2136))) (and (=> x2385 x2073) (=> (and (and (= x4279 (= x3982 x2136)) (= x2136 x3468)) (not x2385)) (and (=> (and (and (= x340 32) (= (x4257 (x2376 x2136) x3836 0) x2486) (= (x4257 (x2376 x275) (x3241 3) 0) x3836) (= x2862 1)) x4279) x454) (=> (not x4279) x2073)))))))))))
(assert (x4106 x2833))
(assert (= x3307 (and x2929 x3172)))
(assert (= x1068 (and (not x4211) x22)))
(assert (x4106 x2765))
(assert (=> (>= 10000 x1251) (= (x2376 x1251) (x3241 x1251))))
(assert (= x3617 (and x2059 x33)))
(assert (=> (<= x3655 10000) (= (x2376 x3655) (x3241 x3655))))
(assert (x4106 x2525))
(assert (x4106 x2566))
(assert (= (x1262 (x3241 404098525)) 404098525))
(assert (x4106 x2183))
(assert (x4106 x1309))
(assert (= x3178 (and x2563 x3245)))
(assert (= x291 (and x1530 x2737)))
(assert (x4106 x2541))
(assert (= x1615 (and x1359 x1965)))
(assert (= x2381 (and x3853 (not x1338))))
(assert (x4106 x1069))
(assert (x2808 x500))
(assert (= x1834 (or x3503 x1162)))
(assert (x4106 x1624))
(assert (x2808 x2006))
(assert (x4106 x1376))
(assert (x4106 x4189))
(assert (= x3195 (=> (and (= x303 0) (= x689 x2153)) x1900)))
(assert (= (=> (and (= x2358 x1243) (= x1239 x1997)) x4360) x273))
(assert (x4106 x1270))
(assert (x4106 x624))
(assert (= x661 (and x2989 x1724)))
(assert (= (and x4170 (not x3578)) x1913))
(assert (x4106 x4369))
(assert (x4106 x2726))
(assert (x4106 x2472))
(assert (=> (>= 10000 x1561) (= (x3241 x1561) (x2376 x1561))))
(assert (x4106 x231))
(assert (= (x1262 (x2376 x2349)) x2349))
(assert (= (and x3407 x3386) x4170))
(assert (= x3301 (and x3084 (not x2668))))
(assert (x4106 x1618))
(assert (= (and (not x354) x3453) x2535))
(assert (x4106 x437))
(assert (= x113 (and (not x1263) x1120)))
(assert (= (=> (and (= x267 x3154) (= x1622 x1667)) x2632) x859))
(assert (x4106 x1355))
(assert (x2808 x1450))
(assert (x4106 x3990))
(assert (x4106 x230))
(assert (x4106 x4198))
(assert (=> (<= x2487 10000) (= (x3241 x2487) (x2376 x2487))))
(assert (x4106 x1462))
(assert (x4106 x156))
(assert (= (or x2227 x2322) x1108))
(assert (x4106 x949))
(assert (= x4338 (=> (and (= x3498 x4172) (= x1415 x3514) (= x21 0)) x393)))
(assert (= (=> (and (or (not x2455) x2455) (= x2455 (= x3881 0))) x1807) x440))
(assert (= (and x2219 x3211) x2364))
(assert (x4106 x1314))
(assert (x4106 x841))
(assert (= 157198259 (x1262 (x3241 157198259))))
(assert (x4106 x413))
(assert (= (x2376 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x3241 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x4106 x4133))
(assert (= (or x3487 x2509) x4074))
(assert (= x4268 (and (not x4169) x3379)))
(assert (x1227 x3114))
(assert (x4106 x874))
(assert (x4106 x2048))
(assert (x4106 x3587))
(assert (x4106 x3145))
(assert (= (=> (and (= x689 x1098) (= 0 x4007)) x3628) x2723))
(assert (= x2098 (and x1350 (not x775))))
(assert (= x2697 (and (not x3960) x2027)))
(assert (= x1673 (and x900 x1580)))
(assert (x4106 x2118))
(assert (x4106 x2831))
(assert (= x487 (and x93 (not x871))))
(assert (x4106 x1799))
(assert (x4106 x2643))
(assert (= x2557 (and x377 (not x4))))
(assert (x4106 x3236))
(assert (x4106 x566))
(assert (= x3275 (and x51 x662)))
(assert (= x2587 (=> (and (= x4221 x2687) (= x1321 0)) x1637)))
(assert (x4106 x1021))
(assert (= x576 (and (not x1253) x598)))
(assert (x2808 x2622))
(assert (x4106 x2687))
(assert (x4106 x3012))
(assert (x4106 x3766))
(assert (= x167 (x1262 (x2376 x167))))
(assert (= (and x3045 x3404) x3414))
(assert (x4106 x774))
(assert (x4106 x755))
(assert (x2808 x529))
(assert (x4106 x1328))
(assert (= (and (not x662) x51) x3096))
(assert (= x4017 (and (not x889) x3075)))
(assert (x4106 x1770))
(assert (x4106 x384))
(assert (= x4083 (=> (and (= x3154 x1473) (= x153 x1622)) x2632)))
(assert (= (or (and x570 (not x4316)) x2078) x4265))
(assert (x4106 x3062))
(assert (= (and x559 x1685) x4281))
(assert (= (x1262 (x2376 x3456)) x3456))
(assert (= x2544 (=> (and (= x2709 x2299) (= x1197 x3563)) x200)))
(assert (x4106 x1210))
(assert (x4106 x39))
(assert (=> (<= x2144 10000) (= (x3241 x2144) (x2376 x2144))))
(assert (x4106 x786))
(assert (= x2257 (and (not x274) x3542)))
(assert (= (and (not x3441) x1171) x1844))
(assert (x4106 x4077))
(assert (x4106 x917))
(assert (= x3529 (=> (and (= x218 0) (= x3193 x4165)) x3904)))
(assert (x4106 x1276))
(assert (= (and x173 x448) x4241))
(assert (x4106 x3468))
(assert (= x3379 (and x335 (not x1115))))
(assert (= x1642 (and (not x1687) x4064)))
(assert (x4106 x3885))
(assert (x2808 x1202))
(assert (x4106 x1317))
(assert (x4106 x1647))
(assert (= (and x2268 (not x546)) x3112))
(assert (x4106 x1459))
(assert (= x4300 (=> (and (= x4227 x3182) (= x3230 x2815)) x3098)))
(assert (= x1821 (and x3920 x1264)))
(assert (= (and x2546 x3260) x823))
(assert (x4106 x2390))
(assert (x4106 x758))
(assert (= x3726 (or x3856 x3611 x1581 x4074 x3033 x3571 x551)))
(assert (= (x3241 2376452955) (x2376 2376452955)))
(assert (= (x1262 (x2376 x1571)) x1571))
(assert (= x1363 (and x1772 (not x3330))))
(assert (x4106 x3928))
(assert (= x2195 (and (not x523) x1006)))
(assert (= x1452 (or (and (not x2306) x3948) (and x2193 x2091))))
(assert (= x1924 (and x3795 x457)))
(assert (= x3064 (and x2630 x621)))
(assert (= x2802 (and x13 x816)))
(assert (= x763 (and x1052 x666)))
(assert (= (=> (and (= x1246 0) (= x241 x8)) x2967) x3684))
(assert (x2808 x2873))
(assert (= x2612 (and x1057 (not x3530))))
(assert (= (or x2519 x3414 x2871 x465 x3163 x772) x3144))
(assert (= (=> (and (= x2931 x349) (= x1607 x1564)) x2495) x1794))
(assert (x4106 x529))
(assert (= x3731 (and x1454 (not x3095))))
(assert (x4106 x3992))
(assert (= x4294 (or x240 x284)))
(assert (x4106 x3046))
(assert (x4106 x1330))
(assert (= (and (not x1097) x3091) x2661))
(assert (= (or x2826 (and x2514 (not x4377))) x412))
(assert (=> (>= 10000 x2310) (= (x2376 x2310) (x3241 x2310))))
(assert (x4106 x1212))
(assert (x2808 x4269))
(assert (= x433 (or x2941 x3805 x2936 x3484 x2777 x2730 x2394 x1934 x2804)))
(assert (= (=> (and (= x1065 x3182) (= x2391 x2815)) x3098) x1793))
(assert (= x3721 (and (not x1268) x159)))
(assert (x4106 x2536))
(assert (x4106 x4197))
(assert (x4106 x3294))
(assert (x4106 x800))
(assert (= x2363 (=> (and (= x1655 x3658) (= x4132 0)) x3570)))
(assert (= (and x1771 x1537) x3668))
(assert (= x2261 (x1262 (x2376 x2261))))
(assert (x4106 x4035))
(assert (= (and x887 (not x4004)) x149))
(assert (=> (>= 10000 x4006) (= (x3241 x4006) (x2376 x4006))))
(assert (x4106 x56))
(assert (x4106 x2870))
(assert (= x3593 (and x173 (not x448))))
(assert (x4106 x1707))
(assert (= x1934 (and x472 x3975)))
(assert (x4106 x2204))
(assert (= x714 (and x2319 x669)))
(assert (= x3742 (or (and x3260 (not x2546)) (and x650 x4116))))
(assert (x4106 x2168))
(assert (x4106 x1415))
(assert (x4106 x1776))
(assert (x4106 x3382))
(assert (x4106 x1140))
(assert (= x883 (=> (and (= x3747 (= 0 x373)) (or x3747 (not x3747))) x3476)))
(assert (= x2351 (and x907 (not x297))))
(assert (= x1503 (x1262 (x2376 x1503))))
(assert (x4106 x633))
(assert (= (or x2822 x3262) x1893))
(assert (x4106 x2477))
(assert (x4106 x2710))
(assert (x4106 x3365))
(assert (= (and x3161 x2655) x896))
(assert (= (and x1337 x455) x2093))
(assert (x4106 x3594))
(assert (x4106 x3625))
(assert (= x181 (x1262 (x2376 x181))))
(assert (= (and x3066 x1150) x3810))
(assert (=> (<= x3283 10000) (= (x3241 x3283) (x2376 x3283))))
(assert (x4106 x3952))
(assert (= (or (and x186 (not x1628)) (and x593 x3751)) x1601))
(assert (x4106 x3692))
(assert (= (or x2631 x285 x4111 x3126 x4235 x1442) x3540))
(assert (= x2259 (x1262 (x2376 x2259))))
(assert (x4106 x3134))
(assert (x4106 x3906))
(assert (= x3392 (and x2911 x2996)))
(assert (x4106 x813))
(assert (x4106 x4172))
(assert (= (and x127 x4098) x3281))
(assert (= x4193 (and x890 x368)))
(assert (= x3681 (or x2336 x2647 x2098 x2346 x213 x3334)))
(assert (x4106 x1611))
(assert (x4106 x4182))
(assert (x2808 x3456))
(assert (= (and x1957 x793) x4011))
(assert (= x805 (x1262 (x2376 x805))))
(assert (x4106 x441))
(assert (x4106 x458))
(assert (x4106 x973))
(assert (= 545886713 (x1262 (x3241 545886713))))
(assert (x4106 x4393))
(assert (= (and x1088 x3271) x2789))
(assert (= (or x1585 x2257 x1425 x2061 x4251 x1669) x654))
(assert (= x1606 (and x1844 x2154)))
(assert (= x3038 (and (not x816) x13)))
(assert (x4106 x536))
(assert (= (and x1941 x154) x2526))
(assert (x4106 x3229))
(assert (=> (<= x921 10000) (= (x3241 x921) (x2376 x921))))
(assert (= (and x3431 x1387) x1590))
(assert (x4106 x3855))
(assert (x4106 x3997))
(assert (= 1422172137 (x1262 (x3241 1422172137))))
(assert (= x3025 (=> (and (= x3412 0) (= x1650 x2021)) x3242)))
(assert (x4106 x792))
(assert (= (and (not x271) x1855) x1945))
(assert (x4106 x1306))
(assert (= (x1262 (x3241 2737736067)) 2737736067))
(assert (x4106 x2751))
(assert (x2808 x2683))
(assert (= (and x2854 (not x3842)) x2911))
(assert (= x2398 (=> (and (= x4221 x1595) (= x3337 0)) x1130)))
(assert (= (and x1404 x4136) x32))
(assert (= x3701 (and x3860 (not x3675))))
(assert (= x1540 (and (not x2191) x4031)))
(assert (= (or x1176 x3255 x1008 x2991 x2127 x542) x1003))
(assert (x4106 x910))
(assert (= (and (not x499) x2195) x4272))
(assert (= (and x1363 x2800) x1467))
(assert (= 2952933380 (x1262 (x3241 2952933380))))
(assert (x4106 x2459))
(assert (x4106 x3139))
(assert (x4106 x747))
(assert (x4106 x1781))
(assert (= (x1262 (x2376 x3993)) x3993))
(assert (x4106 x2318))
(assert (x4106 x3821))
(assert (= x1206 (and x80 (not x3483))))
(assert (= (x1262 (x2376 x1662)) x1662))
(assert (x4106 x4221))
(assert (= x2504 (and x322 (not x2266))))
(assert (x4106 x3717))
(assert (= (and x4134 x3666) x130))
(assert (x4106 x345))
(assert (=> (<= x1752 10000) (= (x2376 x1752) (x3241 x1752))))
(assert (x4106 x108))
(assert (x4106 x1177))
(assert (x4106 x2899))
(assert (x4106 x2349))
(assert (= 1889567281 (x1262 (x3241 1889567281))))
(assert (x4106 x3321))
(assert (= x1497 (x1262 (x2376 x1497))))
(assert (x4106 x3798))
(assert (and (=> (< 0 32) (= (+ (x2008 x3763 32) (* (x2799 x3763 32) 32)) x3763)) (x1418 x3763 32) (x4174 x3763 32) (x3919 x3763 32)))
(assert (= x4293 (x1262 (x2376 x4293))))
(assert (x4106 x3423))
(assert (x4106 x3480))
(assert (= (and x848 (not x1612)) x313))
(assert (= (and x3112 x1348) x2242))
(assert (x4106 x42))
(assert (x4106 x4018))
(assert (x4106 x1995))
(assert (x4106 x538))
(assert (x4106 x2864))
(assert (= x3085 (and x4017 (not x1422))))
(assert (x4106 x104))
(assert (= (and x110 x1709) x1956))
(assert (x4106 x4021))
(assert (x4106 x2014))
(assert (= (x2376 117300739) (x3241 117300739)))
(assert (x4106 x3881))
(assert (x2808 x3585))
(assert (= (and x1350 x775) x332))
(assert (= x41 (or (and x1337 (not x455)) (and x764 x1887))))
(assert (x4106 x1804))
(assert (x4106 x3054))
(assert (= (=> (and (= x45 x3729) (= x2302 x1991)) x977) x1573))
(assert (x4106 x367))
(assert (= (and x2027 x3960) x3258))
(assert (= (and x3197 x1780) x2186))
(assert (x4106 x1714))
(assert (x4106 x2264))
(assert (= x3688 (and x851 (not x2056))))
(assert (x4106 x796))
(assert (x4106 x954))
(assert (= (and x4161 x2876) x334))
(assert (= (and (not x3259) x2913) x3765))
(assert (= x1690 (and x1823 (not x3683))))
(assert (= (and (not x4402) x1754) x3623))
(assert (= (and x4327 x1484) x2151))
(assert (= x3503 (and x33 (not x2059))))
(assert (x4106 x3342))
(assert (= x3061 (and x560 x3117)))
(assert (x2808 x4138))
(assert (x4106 x705))
(assert (x4106 x3876))
(assert (= x3118 (or x1424 x4400)))
(assert (= x2556 (and x2410 x3868)))
(assert (x4106 x3087))
(assert (= x3666 (and (not x739) x664)))
(assert (= (x1262 (x2376 x721)) x721))
(assert (= x2380 (and x1026 x397)))
(assert (= x3995 (and x522 x2218)))
(assert (x4106 x146))
(assert (= x3654 (and x476 (not x4044))))
(assert (= x2737 (and (not x1935) x4060)))
(assert (= (and x2100 x649) x3383))
(assert (x4106 x1683))
(assert (= x394 (=> (and (= x2874 x373) (= x3625 x3185)) x883)))
(assert (= x699 (and x994 x4112)))
(assert (= (and x3971 x2530) x348))
(assert (= x2354 (and x4044 x476)))
(assert (x2808 x367))
(assert (x4106 x2670))
(assert (= (and x3257 (not x2222)) x2752))
(assert (= (and x2285 x3399) x2163))
(assert (= x2677 (and x4179 x1656)))
(assert (x4106 x873))
(assert (x4106 x2594))
(assert (= x3827 (or x336 x1054)))
(assert (x4106 x4260))
(assert (x4106 x3166))
(assert (x4106 x4066))
(assert (= x1886 (and x685 x2011)))
(assert (x4106 x2591))
(assert (= x2913 (and x2593 (not x1919))))
(assert (x4106 x3462))
(assert (x4106 x2115))
(assert (x4106 x2164))
(assert (x4106 x805))
(assert (= x3963 (and x584 x1898)))
(assert (= (and (not x4034) x4214) x1771))
(assert (= x829 (and x2640 x857)))
(assert (= x1009 (or x2131 x2228)))
(assert (= (or x3762 x3650 x872 x661 x1850 x2049) x3466))
(assert (= (and x1615 (not x738)) x1144))
(assert (= (and x930 x1271) x3879))
(assert (x4106 x2699))
(assert (x4106 x2474))
(assert (x4106 x3957))
(assert (= (and x3675 x3860) x1380))
(assert (= x545 (or x3681 x152)))
(assert (x4106 x1622))
(assert (x4106 x4252))
(assert (x4106 x819))
(assert (x2808 x2907))
(assert (= x19 (=> (and (= x3729 0) (= x689 x2302)) x1573)))
(assert (= x477 (and x2678 x1384)))
(assert (x4106 x3655))
(assert (x4106 x635))
(assert (x4106 x3616))
(assert (= (and x3703 x162) x1095))
(assert (= (and x636 x3721) x1416))
(assert (= (and x4054 (not x2869)) x4298))
(assert (x4106 x1364))
(assert (x4106 x2435))
(assert (x4106 x2949))
(assert (= x285 (and (not x1537) x1771)))
(assert (= x615 (=> (and (= 0 x1124) (= x3651 x3992)) x1751)))
(assert (x2808 x4387))
(assert (= (=> (and (and (not (= x3880 x3371)) (= x1325 false) (not (= x706 x3970)) (>= 1461501637330902918203684832716283019655932542975 x275) (not (= x2882 x4269)) (< 0 x706) (= x2536 x2311) (<= x2746 1461501637330902918203684832716283019655932542975) (<= 0 x3885) (<= 0 x730) (<= 0 x2962) (not (= x706 x1939)) (not (= x3371 x1265)) (= x3139 x2311) (not (= x1265 x4269)) (= x2595 (x2295 (x2376 x2311))) (= (> (x2388 (x2376 x3371)) 0) x3505) (< 0 x1265) (>= x3720 0) (>= 1461501637330902918203684832716283019655932542975 x706) (>= 1461501637330902918203684832716283019655932542975 x3880) (= (< 0 (x2388 (x2376 x706))) x1448) (= x1166 x1324) (= (x2295 (x2376 x1939)) x730) (>= 1461501637330902918203684832716283019655932542975 x4186) (not (= x2882 x3880)) (not (= x1939 x3371)) (<= x2961 1461501637330902918203684832716283019655932542975) (not (= x1265 x2882)) (= false x1959) (not (= x864 x706)) (not (= x3880 x4269)) (= x3435 x3114) (= (< 0 (x2388 (x2376 x4269))) x381) (not (= x3371 x2311)) (not (= x2882 x3371)) (>= x2961 0) (<= x3139 1461501637330902918203684832716283019655932542975) (not (= x3970 x3880)) (= x1069 (x4048 1461501637330902918203684832716283019655932542975 x2710)) (= x3720 x2311) (not (= x706 x1265)) x2007 (not (= x1939 x3880)) x3660 (<= 0 x2595) (= x261 (> (x2388 (x2376 x2882)) 0)) (>= x3944 0) (>= x1166 0) (<= x3254 1461501637330902918203684832716283019655932542975) (> x4122 0) (not (= x4269 x3371)) (= x3595 (> (x2388 (x2376 x1265)) 0)) x261 (<= x814 1461501637330902918203684832716283019655932542975) (not (= x2311 x275)) (= x807 x3880) x122 (= (x2295 (x2376 x4269)) x4030) (= x3422 (> (x2388 (x2376 x3880)) 0)) x3595 (>= x680 0) (> x3371 0) (not (= x3970 x1265)) (= 2569309863 x2353) (not (= x2311 x3880)) (not (= x1939 x1265)) (not (= x706 x4269)) (<= 0 x4030) (not (= x3880 x864)) (<= x2311 1461501637330902918203684832716283019655932542975) (not (= x3970 x1939)) (= x3821 (x2295 (x2376 x275))) (<= x3970 1461501637330902918203684832716283019655932542975) (not (= x2311 x1939)) (not (= x864 x1939)) (= x1069 x3249) (<= 0 x4365) (= x3254 x3880) (> x1939 0) (= x706 x2961) (not (= x3970 x4269)) (= (x2295 (x2376 x3880)) x2474) (>= x2269 0) (not (= x706 x2311)) (< 0 x3970) (not (= x3970 x2311)) (>= 1461501637330902918203684832716283019655932542975 x3054) (= (x2295 (x2376 x3371)) x3444) (>= 1461501637330902918203684832716283019655932542975 x3885) (<= 0 x4035) (>= x814 0) x3733 (not (= x864 x2311)) (= false x1066) (not (= x275 x3970)) (= (x2295 (x2376 x706)) x201) (<= 0 x2746) (<= 0 x3444) (not (= x2311 x1265)) (<= x3944 1461501637330902918203684832716283019655932542975) (= x3733 (< 0 (x2388 (x2376 x2311)))) (<= x2146 1461501637330902918203684832716283019655932542975) (>= x201 0) (< 0 x2311) (= x2962 (x2295 (x2376 x1265))) (<= 0 x2474) (= x3660 (< 0 (x2388 (x2376 x1939)))) (= x2146 x706) (not (= x2882 x1939)) (>= x3821 0) (not (= x275 x4269)) (not (= x3880 x275)) (not (= x864 x3970)) (>= 1461501637330902918203684832716283019655932542975 x680) (> x3880 0) (= x3756 (x2295 (x2376 x864))) (not (= x3970 x3371)) (>= x2536 0) (not (= x706 x3371)) (not (= x275 x3371)) (= x1703 (> (x2388 (x2376 x864)) 0)) (<= x864 1461501637330902918203684832716283019655932542975) (> x864 0) (not (= x1265 x864)) (<= 0 x1791) (> x4269 0) (>= 1461501637330902918203684832716283019655932542975 x1265) (not (= x864 x3371)) (>= x3139 0) (> x2882 0) (not (> 2376452955 x2353)) (<= 0 x2561) (<= x2536 1461501637330902918203684832716283019655932542975) (<= 0 x4186) x381 (= x2007 (> (x2388 (x2376 x3970)) 0)) (> x275 0) (not (= x1939 x4269)) (not (= x2882 x3970)) (<= 0 x1199) (>= x3756 0) (>= 1461501637330902918203684832716283019655932542975 x1409) (<= x3435 1461501637330902918203684832716283019655932542975) (not (< x2353 2569309863)) (<= x2561 1461501637330902918203684832716283019655932542975) (not (= x864 x4269)) (not (= x275 x1939)) (>= 1461501637330902918203684832716283019655932542975 x3720) (not (= x864 x275)) (= (x2295 (x2376 x3970)) x2269) (<= x3371 1461501637330902918203684832716283019655932542975) (= x4122 (x2388 (x2376 x275))) (>= 1461501637330902918203684832716283019655932542975 x1939) x1448 (not (= x864 x2882)) (not (= x275 x2882)) (= 1 x558) (>= x807 0) (not (= x3880 x706)) (>= x3054 0) (<= x2882 1461501637330902918203684832716283019655932542975) (= x3437 2766140528) (>= x3254 0) (= (< 0 (x2388 (x2376 x275))) x122) (not (= x275 x1265)) (<= x4035 1461501637330902918203684832716283019655932542975) (<= 0 x1409) (<= x4269 1461501637330902918203684832716283019655932542975) (= x1199 (x2295 (x2376 x2882))) (not (= x4269 x2311)) x3505 (>= x2146 0) (<= 0 x3435) (not (= x706 x2882)) (< x2353 2952933380) x3422 (<= x4365 1461501637330902918203684832716283019655932542975) (not (= x1265 x3880)) (<= x1791 1461501637330902918203684832716283019655932542975) (not (= x706 x275)) (= x1429 false) (>= 1461501637330902918203684832716283019655932542975 x1166) (>= 1461501637330902918203684832716283019655932542975 x807) x1703 (not (= x2882 x2311))) (and (and (not (> 2569309863 x138)) (= x138 2569309863) (= x3249 x1795) (> x2951 0) (= x3471 (x4048 1461501637330902918203684832716283019655932542975 x2710)) (= x1192 (= x1795 x190)) (= x3471 x874) (< x138 2952933380) (= x2951 (x2388 (x2376 x275))) (= x706 x190) (not (< x138 2376452955))) (and (and (<= x3447 1461501637330902918203684832716283019655932542975) (= x2848 x874) (= x69 1889567281) (> x3072 0) (= x3880 x3714) (not (= 826074471 x69)) (<= 0 x2427) (= (x2317 x3940) x3367) (= x1769 (or x1192 x62)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3367) (<= x2427 1461501637330902918203684832716283019655932542975) (= x3367 x3861) (<= 0 x3367) (= x3940 (x4257 (x2376 x3447) (x3241 2) 0)) (= (x2388 (x2376 x706)) x3072) (= (= x3714 x2848) x62) (not (> 826074471 x69)) (= x2427 x3447) x1769) (and (and (= x802 (x1846 x3251)) (not (= x3428 1422172137)) (= x1428 x3861) (< x3428 2376452955) (= x921 x2427) (= 1889567281 x3428) (= x3251 (x4257 (x2376 x921) (x3241 2) 0)) (>= x802 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x802) (>= 1461501637330902918203684832716283019655932542975 x921) (not (< x3428 872247156)) (> x2912 0) (not (= x3428 872247156)) (not (< x3428 649617121)) (= (x2388 (x2376 x4269)) x2912) (not (= 1086394137 x3428)) (= x2817 x802)) (and (and (and (= x2427 x262) (> x3087 0) (not (= 1086394137 x2220)) (= x3635 (x1035 x3)) (= x3635 x3577) (= x3087 (x2388 (x2376 x2311))) (= x3 (x4257 (x2376 x262) (x3241 2) 0)) (= x2220 1889567281) (<= 0 x3635) (<= x3635 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 1461501637330902918203684832716283019655932542975 x262) (not (< x2220 1086394137)) (= x3113 x573)) (and (and (>= 1461501637330902918203684832716283019655932542975 x1791) (= x541 (x4048 1461501637330902918203684832716283019655932542975 x3114)) (< x4037 1461501637330902918203684832716283019655932542976) (= x2085 x4037) (> x2720 0) (= x3069 x3017) (< x3944 1461501637330902918203684832716283019655932542976) (<= x4037 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x3944) (>= x204 0) (<= x204 1461501637330902918203684832716283019655932542975) (not (or (and (= true (<= x3261 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x3261)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3261))) (= x1675 (= x3371 x4037)) (= x4153 x323) (= (x4257 (x2376 x2682) (x3241 3) 0) x4318) (>= x1982 0) (= x4187 (= x864 x4037)) (<= x3390 1461501637330902918203684832716283019655932542975) (= x4153 0) (= x4037 (x106 x4318)) (<= 0 x4037) (>= 1461501637330902918203684832716283019655932542975 x2682) (not (< x1658 2569309863)) (not (= x1658 2737736067)) (and (< 35 x2855) (= (<= x2855 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (not (< x2855 4)) (= x541 x1791) (not (= x1658 2753274959)) (not (> 2376452955 x1658)) (= x2478 x350) (<= 0 x1791) (= x2478 x1982) (= (x2388 (x2376 x275)) x2720) x4228 (= x2531 x2682) (>= x3944 0) (= x2682 x75) (>= x3390 0) (= x3114 x3390) (not (= x1658 2569309863)) (= x1056 x3577) (>= 1461501637330902918203684832716283019655932542975 x1982) (> 1461501637330902918203684832716283019655932542976 x1791) (< x1658 2952933380) (= x4228 (or x4187 x1675)) (= x3261 (x1249 (- x2855 4))) (= x1658 2766140528)) (or (and x3017 (and (= x4269 x3568) x3017 (= x3568 x2585))) (and (and (= x2201 (not x1016)) (= x3017 x1016) (= x815 x2585) (= x2882 x815) x2201) (not x3017))))) (and (> x2901 0) (<= 0 x296) (= (x4257 (x2376 x2310) (x3241 2) 0) x2279) (= (x150 x2279) x296) (= x2817 x3841) (= x2310 x2427) (= 1889567281 x278) (not (< x278 826074471)) (= x573 x296) (not (= 826074471 x278)) (>= 1461501637330902918203684832716283019655932542975 x2310) (= x2901 (x2388 (x2376 x3371))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x296))))))) x2946) x3058))
(assert (x4106 x2181))
(assert (x4106 x3777))
(assert (x4106 x2938))
(assert (x2808 x1106))
(assert (= (or x1638 x326 x935 x3385 x3830 x2947) x596))
(assert (x4106 x2383))
(assert (= (x2376 1461501637330902918203684832716283019655932542975) (x3241 1461501637330902918203684832716283019655932542975)))
(assert (x4106 x2142))
(assert (= (and x2963 x2226) x397))
(assert (x4106 x853))
(assert (x4106 x98))
(assert (= x3305 (and x28 (not x2482))))
(assert (x4106 x4344))
(assert (x2808 x2012))
(assert (x4106 x3314))
(assert (= (or x1229 x3103) x4171))
(assert (= x1626 (and x3747 x3023)))
(assert (x4106 x2213))
(assert (= x1058 (x1262 (x2376 x1058))))
(assert (=> (<= x1497 10000) (= (x2376 x1497) (x3241 x1497))))
(assert (x4106 x49))
(assert (x4106 x3114))
(assert (x4106 x3231))
(assert (= (and x1319 (not x3279)) x269))
(assert (x4106 x1265))
(assert (= x2468 (and (not x1955) x3580)))
(assert (x4106 x1421))
(assert (= x2338 (=> (and (= x1217 x2299) (= x1225 x3563)) x200)))
(assert (x4106 x868))
(assert (= x1219 (and (not x472) x3975)))
(assert (x2808 x1542))
(assert (= x390 (and x3710 x63)))
(assert (x4106 x3601))
(assert (= (=> (and (= x648 x1931) (= x2043 x4125)) x2333) x196))
(assert (= (=> (= x2222 (> x3336 0)) (and (=> (and x2222 (and (= x3514 x2650) (= 1 x21) (= x2245 x3498))) x393) (=> (and (not x2222) (and (= x4172 x2245) (= x2650 x1415))) x4338))) x708))
(assert (x4106 x1269))
(assert (= (and x1115 x335) x1937))
(assert (= (=> (and (= x617 x535) (= x3455 x2982)) x2987) x1483))
(assert (= x685 (and x2943 (not x1469))))
(assert (= (and x1390 (not x2586)) x1639))
(assert (x4106 x312))
(assert (= x3002 (and (not x1214) x3778)))
(assert (= x1323 (or x3466 x357)))
(assert (= x3851 (and x979 x1031)))
(assert (= x4098 (and (not x3760) x3108)))
(assert (= x1420 (and x713 x665)))
(assert (= x2636 (and x2418 x2066)))
(assert (x4106 x839))
(assert (x4106 x2821))
(assert (= x2127 (and x2908 x2211)))
(assert (x4106 x276))
(assert (x4106 x1002))
(assert (x2808 x607))
(assert (= x757 (and x3606 (not x3966))))
(assert (x4106 x3077))
(assert (= (and x3234 x175) x3907))
(assert (= (and (not x3592) x2868) x4229))
(assert (x4106 x3523))
(assert (= (or x313 x1885) x2879))
(assert (x4106 x3585))
(assert (x4106 x4123))
(assert (x4106 x3867))
(assert (x4106 x3756))
(assert (= (and x4329 (not x1559)) x2325))
(assert (= (and x1919 x2593) x2223))
(assert (= x1891 (and (not x2100) x649)))
(assert (x4106 x338))
(assert (x4106 x2101))
(assert (=> (>= 10000 x2567) (= (x2376 x2567) (x3241 x2567))))
(assert (= x1477 (and x4289 (not x4216))))
(assert (x4106 x1640))
(assert (= x947 (=> (and (= x3881 x1039) (= x2031 x3519)) x440)))
(assert (x4106 x3005))
(assert (x4106 x3249))
(assert (x4106 x1204))
(assert (x4106 x3607))
(assert (x4106 x4201))
(assert (= x3803 (and (not x3589) x2701)))
(assert (x4106 x2948))
(assert (= (x1262 (x2376 x529)) x529))
(assert (x4106 x1288))
(assert (x4106 x1450))
(assert (= (=> (and (= x648 x2021) (= x4125 0)) x196) x987))
(assert (= x1335 (and x2825 x1119)))
(assert (x4106 x1876))
(assert (= (and (not x1709) x110) x1755))
(assert (x4106 x1519))
(assert (x2808 x1714))
(assert (= x4114 (=> (and (= x2129 x3992) (= 0 x3183)) x2221)))
(assert (x4106 x1510))
(assert (x4106 x417))
(assert (x4106 x3137))
(assert (= x1408 (and x3350 x109)))
(assert (x4106 x344))
(assert (x4106 x1650))
(assert (= x508 (or x287 x502 x3932 x191 x177 x1730 x2249)))
(assert (x4106 x761))
(assert (x4106 x1164))
(assert (= x1128 (or x4339 x3765)))
(assert (= x3903 (or (and (not x522) x2218) (and x3819 x791))))
(assert (x4106 x449))
(assert (= (and x3300 (not x609)) x4087))
(assert (x4106 x3535))
(assert (x4106 x1187))
(assert (= (and x1929 x2481) x2956))
(assert (= x2484 (and x1006 x523)))
(assert (= x3835 (and x17 x235)))
(assert (x4106 x2613))
(assert (x4106 x3576))
(assert (= (or (and x3431 (not x1387)) (and x1138 x124)) x2604))
(assert (= x1817 (and x1280 x1203)))
(assert (= x1804 (x1262 (x2376 x1804))))
(assert (x4106 x1538))
(assert (x4106 x780))
(assert (x4106 x3641))
(assert (x4106 x450))
(assert (x4106 x735))
(assert (= (and x737 x2734) x51))
(assert (x4106 x2162))
(assert (= (x1262 (x2376 x1265)) x1265))
(assert (= (and x3646 (not x3659)) x1850))
(assert (= (and x3564 (not x1719)) x1733))
(assert (= (=> (and (= x473 x3881) (= x3450 x2031)) x440) x77))
(assert (= (and (not x4145) x2813) x1054))
(assert (= (and (not x4134) x3666) x677))
(assert (= (=> (and (= x2412 x3625) (= x3031 x373)) x883) x279))
(assert (= x718 (and x316 x2417)))
(assert (x4106 x788))
(assert (x4106 x776))
(assert (= (=> (and (= x3507 x4358) (= x3024 x1864)) x3029) x3090))
(assert (x4106 x1732))
(assert (x4106 x4199))
(assert (x4106 x2958))
(assert (= (x3241 85927964219764727760667161919810921830953265369826564066086284937368273158144) (x2376 85927964219764727760667161919810921830953265369826564066086284937368273158144)))
(assert (= x3126 (and x3598 x3052)))
(assert (x4106 x118))
(assert (= x577 (and x2812 x4226)))
(assert (= (and x945 (not x4126)) x567))
(assert (x4106 x2500))
(assert (= (or (and x1802 x2385) (and x2614 (not x4279))) x4249))
(assert (= x270 (and (not x3644) x4193)))
(assert (x4106 x212))
(assert (= x465 (and x2679 x655)))
(assert (= x3376 (=> (and (= x3230 0) (= x3193 x4227)) x4300)))
(assert (=> (<= x1450 10000) (= (x3241 x1450) (x2376 x1450))))
(assert (and (=> (< 0 32) (= (+ (x2008 x2584 32) (* (x2799 x2584 32) 32)) x2584)) (x1418 x2584 32) (x4174 x2584 32) (x3919 x2584 32)))
(assert (= (or x66 x3305) x670))
(assert (= (and x991 (not x3560)) x877))
(assert (x4106 x847))
(assert (x4106 x1409))
(assert (= (and x579 x3374) x2905))
(assert (x4106 x4292))
(assert (x4106 x1991))
(assert (= x2570 (or x2841 x3790 x3816 x4336 x671 x3989)))
(assert (x4106 x1434))
(assert (= (and x3379 x4169) x257))
(assert (= x2148 (x1262 (x2376 x2148))))
(assert (= (x1262 (x2376 x3371)) x3371))
(assert (= (x1262 (x2376 x1251)) x1251))
(assert (x4106 x2454))
(assert (x4106 x3495))
(assert (x4106 x3861))
(assert (x4106 x358))
(assert (= x3260 (and (not x4116) x650)))
(assert (= x1896 (or x3879 x2332 x1420 x1380 x243 x1211)))
(assert (= (and x646 x1810) x3790))
(assert (= x1346 (and (not x238) x2143)))
(assert (= (and x86 x2663) x1527))
(assert (x4106 x2251))
(assert (x4106 x956))
(assert (= x2094 (=> (and (= x689 x3180) (= x4173 0)) x2970)))
(assert (x4106 x1708))
(assert (= x2145 (and x3771 x1891)))
(assert (=> (>= 10000 x1202) (= (x3241 x1202) (x2376 x1202))))
(assert (= 82641394424300342035733052706735002277943222088490025348945809093694544936960 (x1262 (x3241 82641394424300342035733052706735002277943222088490025348945809093694544936960))))
(assert (=> (<= x2261 10000) (= (x3241 x2261) (x2376 x2261))))
(assert (= x3278 (and (not x895) x1145)))
(assert (x4106 x1715))
(assert (=> (>= 10000 x4387) (= (x2376 x4387) (x3241 x4387))))
(assert (= (and x2897 x659) x2770))
(assert (x4106 x3704))
(assert (x4106 x2641))
(assert (x4106 x1051))
(assert (x4106 x4385))
(assert (=> (<= x181 10000) (= (x3241 x181) (x2376 x181))))
(assert (x4106 x3519))
(assert (x4106 x943))
(assert (= x2941 (and x4064 x1687)))
(assert (x4106 x1063))
(assert (x4106 x2511))
(assert (=> (<= x3986 10000) (= (x2376 x3986) (x3241 x3986))))
(assert (= (and x3615 (not x3475)) x4071))
(assert (x4106 x2782))
(assert (= (x1262 (x2376 x4143)) x4143))
(assert (x4106 x3539))
(assert (x4106 x1686))
(assert (x4106 x4147))
(assert (x4106 x3340))
(assert (x4106 x2254))
(assert (= (and x2875 (not x347)) x3442))
(assert (x4106 x842))
(assert (= x3555 (and x3440 x1488)))
(assert (x4106 x3024))
(assert (x4106 x3527))
(assert (= (and (not x1710) x4120) x2772))
(assert (= x2626 (or (and x1800 (not x463)) (and x1089 x2489))))
(assert (x4106 x1315))
(assert (x4106 x2256))
(assert (x4106 x281))
(assert (= x3079 (and x739 x664)))
(assert (x2808 x2666))
(assert (= (=> (and (= x1798 0) (= x241 x1444)) x862) x2924))
(assert (= (and x1219 x55) x2804))
(assert (= (and x797 x982) x2212))
(assert (x4106 x2531))
(assert (x4106 x2374))
(assert (= x1542 (x1262 (x2376 x1542))))
(assert (= (or (and (not x1345) x1682) (and x1278 x3388)) x1592))
(assert (= x4236 (and x1987 x1526)))
(assert (= x3161 (and x1978 x846)))
(assert (x4106 x4049))
(assert (x4106 x2962))
(assert (x4106 x2089))
(assert (= x939 (and x1871 x683)))
(assert (x4106 x931))
(assert (x4106 x2669))
(assert (= x3399 (and x3237 (not x2119))))
(assert (x2808 x805))
(assert (= x2970 (=> (and (= x1991 x3180) (= x45 x4173)) x977)))
(assert (x4106 x2940))
(assert (x4106 x3000))
(assert (= (and x3865 x3522) x3615))
(assert (x4106 x4029))
(assert (x4106 x1520))
(assert (x4106 x856))
(assert (= (and (not x2774) x451) x3985))
(assert (= x4167 (and x4062 x531)))
(assert (= (and x2679 (not x655)) x3914))
(assert (= (and (not x4396) x3178) x1863))
(assert (x4106 x4002))
(assert (= (x1262 (x2376 x4387)) x4387))
(assert (x4106 x2862))
(assert (x4106 x3026))
(assert (= x1106 (x1262 (x2376 x1106))))
(assert (= (=> (and (= x428 0) (= x3779 x3083)) x3200) x20))
(assert (x4106 x3332))
(assert (x4106 x3705))
(assert (= (x1262 (x2760 x2347 1)) (+ 1 (x1262 x2347))))
(assert (x4106 x1837))
(assert (x4106 x4092))
(assert (= (x1262 (x2376 x367)) x367))
(assert (= (and x3248 x3538) x1191))
(assert (x4106 x288))
(assert (x4106 x3972))
(assert (x4106 x510))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (x2008 x3763 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x2799 x3763 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x3763)) (x1418 x3763 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4174 x3763 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3919 x3763 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x4106 x3092))
(assert (x4106 x1222))
(assert (x4106 x2758))
(assert (x4106 x3647))
(assert (= x3515 (and x4216 x4289)))
(assert (= (and (not x3640) x3583) x1524))
(assert (x4106 x1583))
(assert (= (and (not x2658) x456) x631))
(assert (x4106 x2108))
(assert (x4106 x2904))
(assert (= (or x2579 (and (not x3807) x4026)) x3494))
(assert (x4106 x2469))
(assert (x4106 x4274))
(assert (= (and x155 (not x3240)) x265))
(assert (= (or x700 x4202) x3657))
(assert (= x1485 (and (not x672) x3010)))
(assert (= x3320 (=> (and (= x1655 x2706) (= x653 0)) x258)))
(assert (= x2403 (and x4075 x427)))
(assert (=> (<= x2053 10000) (= (x2376 x2053) (x3241 x2053))))
(assert (x4106 x3207))
(assert (x4106 x2569))
(assert (= (x1262 (x2760 x4318 1)) (+ (x1262 x4318) 1)))
(assert (x2808 x2259))
(assert (= (x1262 (x3241 85927964219764727760667161919810921830953265369826564066086284937368273158144)) 85927964219764727760667161919810921830953265369826564066086284937368273158144))
(assert (= (=> (and (= x1997 x3145) (= x512 x1243)) x4360) x2828))
(assert (= x2601 (=> (and (= 0 x321) (= x2021 x3969)) x2928)))
(assert (x4106 x204))
(assert (x4106 x2375))
(assert (= x2689 (and x3063 x2498)))
(assert (x4106 x3357))
(assert (= (and (not x1589) x2988) x335))
(assert (= (x1262 (x2376 x2523)) x2523))
(assert (x4106 x1979))
(assert (= (and x3056 x2451) x1022))
(assert (= x4051 (or x2789 x1406 x3858 x391 x1527 x1044)))
(assert (= (and (not x4205) x3192) x2219))
(assert (x4106 x1741))
(assert (x4106 x730))
(assert (= (and x4372 x1365) x1986))
(assert (= x1488 (and (not x4359) x1018)))
(assert (= x2801 (and (not x3598) x3052)))
(assert (x4106 x517))
(assert (= (=> (and (= 0 x249) (= x3779 x356)) x2977) x29))
(assert (= (and x1969 x4071) x3638))
(assert (x4106 x2203))
(assert (= x1084 (or x2600 x2971 x606 x3642 x1663 x1495)))
(assert (= (and x4301 (not x4391)) x2120))
(assert (= (and (not x2603) x1560) x3210))
(assert (= x3764 (=> (and (= x1864 0) (= x4358 x241)) x3090)))
(assert (= x4026 (or x2074 x670 x503 x697 x1237 x1323 x2063)))
(assert (x4106 x3310))
(assert (x4106 x2129))
(assert (=> (<= x2885 10000) (= (x3241 x2885) (x2376 x2885))))
(assert (x4106 x1494))
(assert (x4106 x799))
(assert (= (and x2825 (not x1119)) x1664))
(assert (x4106 x4007))
(assert (x4106 x2250))
(assert (= (or x1697 x2414 x89 x1103 x3848 x3102 x1009) x1608))
(assert (x4106 x2750))
(assert (= x2520 (and x588 x1107)))
(assert (= x87 (and x1345 x1682)))
(assert (x4106 x2982))
(assert (= (and x851 x2056) x4336))
(assert (x4106 x4285))
(assert (x4106 x4163))
(assert (= (=> (and (= x4073 x1112) (= x860 0)) x3109) x400))
(assert (=> (>= 10000 x367) (= (x2376 x367) (x3241 x367))))
(assert (= (and x791 (not x3819)) x2218))
(assert (= x478 (=> (and (= x3490 x2982) (= x1548 x617)) x2987)))
(assert (x4106 x1694))
(assert (x4106 x2673))
(assert (x4106 x2339))
(assert (x4106 x3116))
(assert (x4106 x3561))
(assert (= x2333 (=> (and (or x1744 (not x1744)) (= (= 0 x2043) x1744)) x1182)))
(assert (= (x1262 (x2376 x2882)) x2882))
(assert (x4106 x69))
(assert (x4106 x3151))
(assert (x4106 x1933))
(assert (x4106 x3367))
(assert (x4106 x3936))
(assert (x4106 x4276))
(assert (= (x3241 4238056678808933066457772256406219440718756300954938350892797929791311314944) (x2376 4238056678808933066457772256406219440718756300954938350892797929791311314944)))
(assert (=> (<= x1172 10000) (= (x3241 x1172) (x2376 x1172))))
(assert (= x3391 (and x895 x1145)))
(assert (x4106 x698))
(assert (x4106 x835))
(assert (x4106 x1722))
(assert (= (and (not x669) x2319) x453))
(assert (= x3257 (or x656 x1563)))
(assert (= (or (and x2612 (not x111)) (and x1057 x3530)) x1041))
(assert (= x2907 (x1262 (x2376 x2907))))
(assert (x4106 x2371))
(assert (x4106 x3173))
(assert (x4106 x1641))
(assert (= x1617 (and x2629 (not x1493))))
(assert (= x3707 (=> (and (= x437 0) (= x2288 x3794)) x2816)))
(assert (= (=> (and (= 0 x2068) (= x3996 x1112)) x2253) x3767))
(assert (= (x1262 (x2376 x607)) x607))
(assert (x4106 x3464))
(assert (= x322 (and (not x666) x1052)))
(assert (= x3941 (and (not x2583) x4370)))
(assert (=> (>= 10000 x912) (= (x3241 x912) (x2376 x912))))
(assert (= x3887 (and x3201 x1767)))
(assert (= x4266 (and (not x2955) x1411)))
(assert (= x392 (and (not x1077) x2984)))
(assert (=> (<= x2616 10000) (= (x2376 x2616) (x3241 x2616))))
(assert (x4106 x2976))
(assert (x4106 x1091))
(assert (= (and x2381 x2413) x2851))
(assert (x4106 x1726))
(assert (= (and x1999 x2471) x3434))
(assert (x4106 x3170))
(assert (= x2713 (x1262 (x2376 x2713))))
(assert (= (x1262 (x2376 x1694)) x1694))
(assert (x4106 x815))
(assert (= x186 (and x593 (not x3751))))
(assert (= (or (and x3247 (not x3014)) (and x4313 x2691)) x3912))
(assert (= (and x193 (not x1962)) x2932))
(assert (= x3643 (and x832 (not x263))))
(assert (= x2766 (=> (and (= x2358 0) (= x3992 x1239)) x273)))
(assert (=> (<= x2666 10000) (= (x3241 x2666) (x2376 x2666))))
(assert (= x3402 (and x2733 x4135)))
(assert (= (and (not x2639) x57) x3053))
(assert (= (and x4166 x364) x1802))
(assert (= x2137 (and x1565 x2138)))
(assert (= x2860 (and x1055 x830)))
(assert (= (=> (and (= x1991 x1098) (= x45 x4007)) x977) x3628))
(assert (x2808 x2682))
(assert (= x1987 (and x1992 (not x1826))))
(assert (x4106 x4355))
(assert (= (x1262 (x3241 4238056678808933066457772256406219440718756300954938350892797929791311314944)) 4238056678808933066457772256406219440718756300954938350892797929791311314944))
(assert (x4106 x4122))
(assert (= (and x1651 x3516) x671))
(assert (x4106 x3474))
(assert (= (and x1118 x3272) x767))
(assert (x2808 x3772))
(assert (= (and x993 x880) x1126))
(assert (= x3830 (and x1998 x3210)))
(assert (= x591 (and x4090 x3415)))
(assert (= (x3241 599290589) (x2376 599290589)))
(assert (x4106 x3477))
(assert (= x3484 (and (not x1116) x1427)))
(assert (=> (<= x2683 10000) (= (x3241 x2683) (x2376 x2683))))
(assert (x4106 x3996))
(assert (x4106 x1634))
(assert (x4106 x183))
(assert (and (=> (< 0 32) (= (+ (x2008 x1478 32) (* (x2799 x1478 32) 32)) x1478)) (x1418 x1478 32) (x4174 x1478 32) (x3919 x1478 32)))
(assert (= (=> (and (= x1593 x373) (= x2052 x3625)) x883) x1932))
(assert (x2808 x1349))
(assert (= (x1262 (x3241 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (= x912 (x1262 (x2376 x912))))
(assert (x4106 x205))
(assert (x4106 x479))
(assert (= (and x4308 (not x1147)) x1062))
(assert (x4106 x2425))
(assert (= x2414 (or x1452 x1475)))
(assert (= (and x2954 x4144) x1585))
(assert (x4106 x1181))
(assert (x4106 x1321))
(assert (x4106 x3518))
(assert (= x3904 (=> (and (= x2815 x218) (= x3182 x4165)) x3098)))
(assert (= x1120 (or x1883 x2214)))
(assert (= 872247156 (x1262 (x3241 872247156))))
(assert (= x519 (and x1300 x248)))
(assert (x4106 x2503))
(assert (= (and x518 x1383) x1060))
(assert (x4106 x1197))
(assert (x4106 x2973))
(assert (x4106 x1752))
(assert (= x3703 (and (not x712) x2770)))
(assert (x4106 x2341))
(assert (x4106 x3324))
(assert (x4106 x814))
(assert (= (and x3301 x4052) x3386))
(assert (= (and x2290 (not x2775)) x882))
(assert (x4106 x75))
(assert (x4106 x1443))
(assert (= x3796 (and x3591 (not x365))))
(assert (and (= 27 (x2080 9 3)) (= 81 (x2080 27 3)) (= 81 (x2080 9 9)) (= (x2080 3 3) 9)))
(assert (= x4259 (and x1220 (not x2859))))
(assert (= (=> (and (= 0 x1953) (= x3794 x1525)) x3818) x4093))
(assert (x2291 x1478))
(assert (x4106 x3508))
(assert (= 76402721711080721455099699717775724453355902399574518144543212547937138638848 (x1262 (x3241 76402721711080721455099699717775724453355902399574518144543212547937138638848))))
(assert (x4106 x131))
(assert (= (and x1833 (not x3395)) x2268))
(assert (x4106 x1763))
(assert (x4106 x3141))
(assert (x4106 x1750))
(assert (x4106 x3934))
(assert (x4106 x2588))
(assert (x4106 x2088))
(assert (x4106 x858))
(assert (= x2810 (or x850 x1477)))
(assert (= x2787 (and x2934 x1695)))
(assert (x4106 x3470))
(assert (x4106 x4269))
(assert (= (and (not x1530) x2737) x1369))
(assert (x4106 x3371))
(assert (= x393 (=> (and (= x3514 x341) (= x931 x3498) (= x4324 x21)) x2615)))
(assert (x4106 x3910))
(assert (= (=> (and (= x4221 x3450) (= x473 0)) x77) x969))
(assert (= x28 (and (not x3667) x3417)))
(assert (x4106 x1548))
(assert (x1189 x3114))
(assert (= (and x3247 x3014) x3418))
(assert (=> (<= x3692 10000) (= (x3241 x3692) (x2376 x3692))))
(assert (x4106 x2849))
(assert (x4106 x3911))
(assert (x4106 x950))
(assert (=> (<= x3585 10000) (= (x2376 x3585) (x3241 x3585))))
(assert (x4106 x2440))
(check-sat)
(exit)
