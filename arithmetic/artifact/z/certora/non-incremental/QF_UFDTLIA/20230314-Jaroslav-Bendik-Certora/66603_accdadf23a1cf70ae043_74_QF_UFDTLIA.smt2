(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x1536 0)) (((x4810 (x739 x1536) (x3168 x1536) (x4256 Int)) (x1116 (x2726 Int)) (x4923 (x3771 x1536) (x4588 Int)))))
(declare-fun x3048 () Bool)
(declare-fun x1954 () Bool)
(declare-fun x4123 () Int)
(declare-fun x4145 () Bool)
(declare-fun x3914 () Bool)
(declare-fun x4131 () Int)
(declare-fun x2766 () Int)
(declare-fun x1971 () Bool)
(declare-fun x2249 () Bool)
(declare-fun x4052 () Bool)
(declare-fun x649 () Int)
(declare-fun x1879 () Int)
(declare-fun x664 () Int)
(declare-fun x77 () Int)
(declare-fun x1179 () Bool)
(declare-fun x4638 () Int)
(declare-fun x1375 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x757 () x1536)
(declare-fun x241 () Bool)
(declare-fun x2316 () Int)
(declare-fun x4899 () Bool)
(declare-fun x3816 (Int) Int)
(declare-fun x3167 () Int)
(declare-fun x684 () Bool)
(declare-fun x3269 () Bool)
(declare-fun x4382 () Bool)
(declare-fun x177 () Bool)
(declare-fun x2764 () Int)
(declare-fun x4816 () Bool)
(declare-fun x1112 () Int)
(declare-fun x2347 () Bool)
(declare-fun x4361 () Int)
(declare-fun x2220 () x1536)
(declare-fun x2548 () Bool)
(declare-fun x4251 () Bool)
(declare-fun x4825 () Bool)
(declare-fun x3600 () Int)
(declare-fun x681 () Int)
(declare-fun x3717 () x1536)
(declare-fun x4505 () Bool)
(declare-fun x1490 () Int)
(declare-fun x3597 () Bool)
(declare-fun x4377 () Int)
(declare-fun x449 () Bool)
(declare-fun x4851 () Bool)
(declare-fun x1324 () Bool)
(declare-fun x3473 () Int)
(declare-fun x2447 () Int)
(declare-fun x3538 () Bool)
(declare-fun x3097 () Int)
(declare-fun x4079 () Bool)
(declare-fun x3616 () Bool)
(declare-fun x2720 () Bool)
(declare-fun x1682 () x1536)
(declare-fun x584 () Int)
(declare-fun x1574 () Int)
(declare-fun x891 () Bool)
(declare-fun x2439 () Int)
(declare-fun x643 () Bool)
(declare-fun x4621 () Bool)
(declare-fun x3136 () x1536)
(declare-fun x2868 () Bool)
(declare-fun x3370 () Int)
(declare-fun x4115 () Int)
(declare-fun x955 () x1536)
(declare-fun x1616 () x1536)
(declare-fun x4054 () Bool)
(declare-fun x2027 () Int)
(declare-fun x2945 () Int)
(declare-fun x961 () Bool)
(declare-fun x3299 () Int)
(declare-fun x2931 () Bool)
(declare-fun x4479 () Bool)
(declare-fun x3291 () Bool)
(declare-fun x3067 () Int)
(declare-fun x4154 () Int)
(declare-fun x3884 () Int)
(declare-fun x2778 () Int)
(declare-fun x510 () Bool)
(declare-fun x2996 () Int)
(declare-fun x3819 () Bool)
(declare-fun x277 () Int)
(declare-fun x1199 () Int)
(declare-fun x1182 () Bool)
(declare-fun x2880 () Bool)
(declare-fun x4854 () Int)
(declare-fun x35 () Int)
(declare-fun x3455 () Bool)
(declare-fun x2428 () Int)
(declare-fun x2800 () Bool)
(declare-fun x2493 () Int)
(declare-fun x1556 () Bool)
(declare-fun x4263 () Bool)
(declare-fun x3001 () Int)
(declare-fun x3978 () x1536)
(declare-fun x1538 () x1536)
(declare-fun x4509 () Int)
(declare-fun x3602 () Int)
(declare-fun x3506 () x1536)
(declare-fun x3737 () Bool)
(declare-fun x1576 () Int)
(declare-fun x1588 () x1536)
(declare-fun x1504 () Bool)
(declare-fun x3651 () Bool)
(declare-fun x3457 () Bool)
(declare-fun x1865 () Bool)
(declare-fun x4910 () Int)
(declare-fun x224 () Bool)
(declare-fun x2916 () x1536)
(declare-fun x3435 () Bool)
(declare-fun x1317 () Bool)
(declare-fun x1901 () Bool)
(declare-fun x1164 () Bool)
(declare-fun x938 () Int)
(declare-fun x2480 () Int)
(declare-fun x3977 () Int)
(declare-fun x869 () Bool)
(declare-fun x4684 () Bool)
(declare-fun x551 () x1536)
(declare-fun x3096 () Bool)
(declare-fun x112 () x1536)
(declare-fun x3190 () Int)
(declare-fun x3898 () x1536)
(declare-fun x442 () Int)
(declare-fun x657 () Int)
(declare-fun x4853 () Bool)
(declare-fun x3356 () Int)
(declare-fun x1750 () Bool)
(declare-fun x1487 () x1536)
(declare-fun x3018 () Int)
(declare-fun x4626 () Int)
(declare-fun x1953 () Int)
(declare-fun x3196 () Int)
(declare-fun x4963 () Bool)
(declare-fun x1210 () Bool)
(declare-fun x4170 () Bool)
(declare-fun x4938 () Int)
(declare-fun x2779 () Bool)
(declare-fun x409 () Int)
(declare-fun x155 () Int)
(declare-fun x2229 () Int)
(declare-fun x4648 () Int)
(declare-fun x4615 () Bool)
(declare-fun x3521 () Bool)
(declare-fun x4951 () Int)
(declare-fun x329 () Bool)
(declare-fun x3166 () Bool)
(declare-fun x4105 () Int)
(declare-fun x2078 () Int)
(declare-fun x1272 () Bool)
(declare-fun x4771 () Int)
(declare-fun x3988 () Int)
(declare-fun x3761 () x1536)
(declare-fun x1546 () Bool)
(declare-fun x2839 () Int)
(declare-fun x2584 () Bool)
(declare-fun x3847 () Int)
(declare-fun x2488 () Bool)
(declare-fun x3438 () Bool)
(declare-fun x909 () Bool)
(declare-fun x142 () Bool)
(declare-fun x3301 () Int)
(declare-fun x2948 () Bool)
(declare-fun x2619 () Bool)
(declare-fun x3912 () Bool)
(declare-fun x2418 () x1536)
(declare-fun x4273 () Bool)
(declare-fun x4132 () Int)
(declare-fun x621 () Bool)
(declare-fun x4387 () Int)
(declare-fun x3235 () x1536)
(declare-fun x1845 () Bool)
(declare-fun x1786 () Bool)
(declare-fun x1647 () Bool)
(declare-fun x3466 () Int)
(declare-fun x4772 () Bool)
(declare-fun x4625 () Int)
(declare-fun x1979 () Int)
(declare-fun x2434 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x3327 () Int)
(declare-fun x3410 () Bool)
(declare-fun x2373 () x1536)
(declare-fun x2424 () Int)
(declare-fun x3918 () Int)
(declare-fun x214 () Int)
(declare-fun x2513 () Bool)
(declare-fun x4646 () Bool)
(declare-fun x3778 () x1536)
(declare-fun x2966 () Bool)
(declare-fun x4785 () Int)
(declare-fun x2655 () Bool)
(declare-fun x1307 () x1536)
(declare-fun x948 () Bool)
(declare-fun x1544 () Bool)
(declare-fun x3143 () Int)
(declare-fun x1480 () Bool)
(declare-fun x3066 () Int)
(declare-fun x1373 () Int)
(declare-fun x1826 () Bool)
(declare-fun x1470 () Bool)
(declare-fun x4261 () Bool)
(declare-fun x3660 () Int)
(declare-fun x2270 () Int)
(declare-fun x2552 () x1536)
(declare-fun x1228 () Bool)
(declare-fun x2677 () x1536)
(declare-fun x3757 () Int)
(declare-fun x1671 () Int)
(declare-fun x3730 () Bool)
(declare-fun x2563 () Bool)
(declare-fun x3905 () Bool)
(declare-fun x804 () x1536)
(declare-fun x559 () Int)
(declare-fun x435 () Int)
(declare-fun x1093 () Bool)
(declare-fun x1295 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x2246 () Bool)
(declare-fun x461 () Int)
(declare-fun x2884 () Bool)
(declare-fun x353 () Int)
(declare-fun x3083 (Int) Int)
(declare-fun x1050 () Int)
(declare-fun x3122 () Bool)
(declare-fun x2466 () Bool)
(declare-fun x4460 () x1536)
(declare-fun x428 () Bool)
(declare-fun x2020 () Bool)
(declare-fun x2121 () Int)
(declare-fun x1316 () Bool)
(declare-fun x701 () Int)
(declare-fun x4502 () Bool)
(declare-fun x1 () Int)
(declare-fun x589 () Bool)
(declare-fun x4374 () Bool)
(declare-fun x924 () x1536)
(declare-fun x3176 () x1536)
(declare-fun x4746 () Bool)
(declare-fun x2403 () Bool)
(declare-fun x2215 () Bool)
(declare-fun x1833 () Int)
(declare-fun x3569 () Int)
(declare-fun x3559 () Int)
(declare-fun x1848 () Int)
(declare-fun x3103 () Int)
(declare-fun x1699 () x1536)
(declare-fun x2005 () Int)
(declare-fun x1102 () Bool)
(declare-fun x1326 () Bool)
(declare-fun x2443 () x1536)
(declare-fun x72 () Int)
(declare-fun x3505 () Bool)
(declare-fun x2399 () Int)
(declare-fun x4335 () Int)
(declare-fun x671 () Int)
(declare-fun x3366 () Int)
(declare-fun x3194 () Int)
(declare-fun x4295 () Int)
(declare-fun x1769 () Int)
(declare-fun x492 () Int)
(declare-fun x972 () Int)
(declare-fun x2510 () Int)
(declare-fun x4283 () x1536)
(declare-fun x4939 () Bool)
(declare-fun x1173 () x1536)
(declare-fun x3057 () Bool)
(declare-fun x362 () Bool)
(declare-fun x18 () Int)
(declare-fun x4792 () Bool)
(declare-fun x2467 () Bool)
(declare-fun x2717 () Int)
(declare-fun x3399 () Bool)
(declare-fun x3147 () Int)
(declare-fun x3059 () Bool)
(declare-fun x325 () Bool)
(declare-fun x3413 () Bool)
(declare-fun x78 () x1536)
(declare-fun x4908 () Int)
(declare-fun x26 () Int)
(declare-fun x2319 () x1536)
(declare-fun x4645 () Int)
(declare-fun x1675 () Bool)
(declare-fun x4144 () Bool)
(declare-fun x345 () Int)
(declare-fun x3260 () Bool)
(declare-fun x2079 () Int)
(declare-fun x4877 () Int)
(declare-fun x3842 () x1536)
(declare-fun x2496 () Bool)
(declare-fun x1434 () Int)
(declare-fun x1642 () Int)
(declare-fun x1341 () Bool)
(declare-fun x532 () Int)
(declare-fun x2258 () Int)
(declare-fun x4855 () Int)
(declare-fun x4102 () Int)
(declare-fun x1162 () Bool)
(declare-fun x4466 () Int)
(declare-fun x865 () x1536)
(declare-fun x3878 () x1536)
(declare-fun x204 () Int)
(declare-fun x2209 () Int)
(declare-fun x901 () x1536)
(declare-fun x3997 () Bool)
(declare-fun x3446 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x3774 () Int)
(declare-fun x1846 () Int)
(declare-fun x3462 () Bool)
(declare-fun x1390 () Bool)
(declare-fun x4682 () Int)
(declare-fun x3890 () Int)
(declare-fun x1965 () Bool)
(declare-fun x1579 () Bool)
(declare-fun x4278 () Int)
(declare-fun x3353 () Int)
(declare-fun x4732 () Int)
(declare-fun x3266 () Bool)
(declare-fun x1354 () Bool)
(declare-fun x965 () Int)
(declare-fun x1643 () Bool)
(declare-fun x4240 () Bool)
(declare-fun x4926 () Int)
(declare-fun x3312 () Int)
(declare-fun x2298 () Int)
(declare-fun x3739 () Bool)
(declare-fun x2051 () Int)
(declare-fun x2621 () x1536)
(declare-fun x2274 () Bool)
(declare-fun x1611 () Int)
(declare-fun x933 () Bool)
(declare-fun x4418 () Bool)
(declare-fun x400 () Bool)
(declare-fun x2024 () Bool)
(declare-fun x59 () Int)
(declare-fun x1364 () Bool)
(declare-fun x4873 () Bool)
(declare-fun x4647 () Int)
(declare-fun x4765 () Bool)
(declare-fun x1707 () x1536)
(declare-fun x496 () Bool)
(declare-fun x1143 () Bool)
(declare-fun x2444 () Int)
(declare-fun x2331 () x1536)
(declare-fun x2163 () Bool)
(declare-fun x2662 () Bool)
(declare-fun x4567 () Bool)
(declare-fun x1036 () Bool)
(declare-fun x631 () Int)
(declare-fun x1486 () Int)
(declare-fun x4827 () Int)
(declare-fun x3886 () Bool)
(declare-fun x3976 () Int)
(declare-fun x2308 () Int)
(declare-fun x3068 () Int)
(declare-fun x2536 () Int)
(declare-fun x4202 () Bool)
(declare-fun x1329 () Bool)
(declare-fun x3513 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x957 () Int)
(declare-fun x2774 () Int)
(declare-fun x835 () Bool)
(declare-fun x772 () Bool)
(declare-fun x4802 () x1536)
(declare-fun x1218 () Bool)
(declare-fun x4701 () Bool)
(declare-fun x2978 () Int)
(declare-fun x3553 () Int)
(declare-fun x15 () Int)
(declare-fun x181 () Bool)
(declare-fun x2752 () Int)
(declare-fun x2362 () Int)
(declare-fun x1160 () Bool)
(declare-fun x4835 () Int)
(declare-fun x2371 () Bool)
(declare-fun x3945 () Int)
(declare-fun x4147 () Bool)
(declare-fun x384 () Bool)
(declare-fun x383 () Int)
(declare-fun x4535 () Bool)
(declare-fun x314 () Bool)
(declare-fun x3439 () Bool)
(declare-fun x3674 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x3432 () Bool)
(declare-fun x111 () Int)
(declare-fun x1829 () Bool)
(declare-fun x4903 () Int)
(declare-fun x4001 () Bool)
(declare-fun x2132 () Int)
(declare-fun x2033 () x1536)
(declare-fun x2848 () x1536)
(declare-fun x3566 () Int)
(declare-fun x3047 () Bool)
(declare-fun x1572 () Int)
(declare-fun x2080 () Bool)
(declare-fun x752 () Int)
(declare-fun x1614 () Bool)
(declare-fun x2802 () Bool)
(declare-fun x4857 () Int)
(declare-fun x95 () Bool)
(declare-fun x4642 () Bool)
(declare-fun x2299 () Int)
(declare-fun x1056 () Bool)
(declare-fun x871 () Bool)
(declare-fun x3714 () Bool)
(declare-fun x3031 () Bool)
(declare-fun x3268 () Int)
(declare-fun x4519 () Int)
(declare-fun x3712 () Int)
(declare-fun x4289 () Int)
(declare-fun x2580 () Bool)
(declare-fun x2784 () Int)
(declare-fun x3532 () Int)
(declare-fun x4367 () Bool)
(declare-fun x3495 () Bool)
(declare-fun x1597 () Bool)
(declare-fun x1882 () x1536)
(declare-fun x4658 () Bool)
(declare-fun x558 () Bool)
(declare-fun x1584 () Int)
(declare-fun x2697 () Bool)
(declare-fun x2279 () Int)
(declare-fun x2167 () x1536)
(declare-fun x1577 () Int)
(declare-fun x2244 () Bool)
(declare-fun x4863 () Int)
(declare-fun x4294 () Bool)
(declare-fun x554 () Bool)
(declare-fun x70 () Int)
(declare-fun x4296 () Bool)
(declare-fun x1047 () Int)
(declare-fun x1132 () Bool)
(declare-fun x4242 () Int)
(declare-fun x92 () Bool)
(declare-fun x815 (Int) Int)
(declare-fun x1197 () x1536)
(declare-fun x4326 () Bool)
(declare-fun x3689 () Bool)
(declare-fun x2826 () Bool)
(declare-fun x1813 () Bool)
(declare-fun x1412 () Int)
(declare-fun x3350 () Int)
(declare-fun x478 () x1536)
(declare-fun x1974 () Int)
(declare-fun x1046 () Int)
(declare-fun x205 () Bool)
(declare-fun x1722 () Int)
(declare-fun x594 () Bool)
(declare-fun x233 () Bool)
(declare-fun x4964 () Bool)
(declare-fun x128 () Bool)
(declare-fun x4731 () x1536)
(declare-fun x3141 () Bool)
(declare-fun x4782 () x1536)
(declare-fun x3807 () x1536)
(declare-fun x20 () Bool)
(declare-fun x3758 () Bool)
(declare-fun x4070 () Int)
(declare-fun x4452 () Int)
(declare-fun x416 () Bool)
(declare-fun x884 () Int)
(declare-fun x3310 () Bool)
(declare-fun x1793 () x1536)
(declare-fun x4700 () Bool)
(declare-fun x1023 () Bool)
(declare-fun x4068 () Bool)
(declare-fun x3158 () Int)
(declare-fun x1465 () Int)
(declare-fun x506 () Int)
(declare-fun x3290 () Bool)
(declare-fun x3956 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x1726 () Int)
(declare-fun x2504 () Int)
(declare-fun x1622 () Bool)
(declare-fun x103 (x1536) Int)
(declare-fun x3705 () x1536)
(declare-fun x3687 () Int)
(declare-fun x569 () Bool)
(declare-fun x3800 () Int)
(declare-fun x2014 () Int)
(declare-fun x4413 () Bool)
(declare-fun x3911 () Int)
(declare-fun x4053 () Bool)
(declare-fun x439 () Int)
(declare-fun x2684 () Bool)
(declare-fun x497 () Bool)
(declare-fun x618 () Int)
(declare-fun x2365 () Int)
(declare-fun x1922 () x1536)
(declare-fun x4086 () Int)
(declare-fun x807 () Int)
(declare-fun x4883 () Int)
(declare-fun x4634 () Bool)
(declare-fun x3271 () Bool)
(declare-fun x2187 () Bool)
(declare-fun x4454 (Int) Int)
(declare-fun x3222 () Bool)
(declare-fun x885 () Bool)
(declare-fun x3902 () Int)
(declare-fun x3763 () Int)
(declare-fun x211 () Bool)
(declare-fun x1267 () Bool)
(declare-fun x1600 () Bool)
(declare-fun x1187 () Int)
(declare-fun x2263 () Bool)
(declare-fun x3027 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x395 () Int)
(declare-fun x421 () x1536)
(declare-fun x792 () Int)
(declare-fun x4297 () Int)
(declare-fun x784 () Int)
(declare-fun x790 () Bool)
(declare-fun x745 () Int)
(declare-fun x2199 () Int)
(declare-fun x4768 () Int)
(declare-fun x4799 () Int)
(declare-fun x94 () Bool)
(declare-fun x4311 () Int)
(declare-fun x612 () Int)
(declare-fun x3181 (x1536) Int)
(declare-fun x3947 () Int)
(declare-fun x1661 () Bool)
(declare-fun x2075 () Int)
(declare-fun x3879 () Bool)
(declare-fun x2179 () Bool)
(declare-fun x33 () Bool)
(declare-fun x3708 () Int)
(declare-fun x985 () Bool)
(declare-fun x287 () Int)
(declare-fun x326 () Bool)
(declare-fun x2226 () Bool)
(declare-fun x3277 () Int)
(declare-fun x2735 () Bool)
(declare-fun x1592 () Bool)
(declare-fun x1139 () Bool)
(declare-fun x4385 () x1536)
(declare-fun x327 () Bool)
(declare-fun x2256 () Int)
(declare-fun x3877 () Bool)
(declare-fun x3394 () Int)
(declare-fun x794 () Int)
(declare-fun x2562 () Int)
(declare-fun x3111 () Bool)
(declare-fun x3165 () x1536)
(declare-fun x2142 () Bool)
(declare-fun x3780 () Bool)
(declare-fun x895 () Int)
(declare-fun x4028 () x1536)
(declare-fun x4500 () Bool)
(declare-fun x1842 () Int)
(declare-fun x3323 () Bool)
(declare-fun x3561 () Bool)
(declare-fun x4233 () Int)
(declare-fun x622 () x1536)
(declare-fun x3813 () Int)
(declare-fun x2192 () Bool)
(declare-fun x4562 () Bool)
(declare-fun x238 () Bool)
(declare-fun x2433 () Bool)
(declare-fun x2437 () Bool)
(declare-fun x2398 () Bool)
(declare-fun x261 () Int)
(declare-fun x3985 () Int)
(declare-fun x4343 () Int)
(declare-fun x1033 () Int)
(declare-fun x3272 () Bool)
(declare-fun x1297 () Bool)
(declare-fun x3304 () Int)
(declare-fun x104 () Int)
(declare-fun x408 () Bool)
(declare-fun x1183 () Int)
(declare-fun x562 () x1536)
(declare-fun x2070 () Bool)
(declare-fun x1589 () Int)
(declare-fun x4258 () Bool)
(declare-fun x4356 () x1536)
(declare-fun x2553 () Bool)
(declare-fun x2321 () x1536)
(declare-fun x467 () Bool)
(declare-fun x4167 () Int)
(declare-fun x4820 () Bool)
(declare-fun x1811 () Bool)
(declare-fun x4602 () Int)
(declare-fun x773 () Bool)
(declare-fun x1384 () Int)
(declare-fun x4443 () x1536)
(declare-fun x4664 () Bool)
(declare-fun x4158 () Bool)
(declare-fun x221 () Int)
(declare-fun x2724 () Bool)
(declare-fun x2499 (x1536) Int)
(declare-fun x4575 () Bool)
(declare-fun x690 () Bool)
(declare-fun x498 () Int)
(declare-fun x3936 () Bool)
(declare-fun x785 () Bool)
(declare-fun x3175 () Int)
(declare-fun x4221 () Bool)
(declare-fun x4046 () Int)
(declare-fun x3484 () Int)
(declare-fun x1663 () x1536)
(declare-fun x4773 () Bool)
(declare-fun x4113 () Int)
(declare-fun x335 () x1536)
(declare-fun x1950 () Bool)
(declare-fun x4142 () Int)
(declare-fun x660 () Bool)
(declare-fun x2162 () Bool)
(declare-fun x1844 () x1536)
(declare-fun x4691 () Int)
(declare-fun x3211 () Int)
(declare-fun x2569 () Int)
(declare-fun x4909 () Int)
(declare-fun x1587 () Bool)
(declare-fun x4231 () Int)
(declare-fun x2853 () Bool)
(declare-fun x4551 () Int)
(declare-fun x2242 () Bool)
(declare-fun x367 () Bool)
(declare-fun x2715 () Int)
(declare-fun x1137 () Int)
(declare-fun x3733 () Bool)
(declare-fun x1633 () Int)
(declare-fun x4088 () Int)
(declare-fun x4146 () Int)
(declare-fun x3238 () Bool)
(declare-fun x4165 () Bool)
(declare-fun x4953 () Bool)
(declare-fun x715 () Bool)
(declare-fun x1435 () Int)
(declare-fun x3102 () Bool)
(declare-fun x2344 () Bool)
(declare-fun x2409 () Bool)
(declare-fun x2942 () Int)
(declare-fun x2992 () Int)
(declare-fun x2558 () Int)
(declare-fun x4937 () Int)
(declare-fun x3626 () x1536)
(declare-fun x696 () Int)
(declare-fun x635 () Bool)
(declare-fun x2505 () Bool)
(declare-fun x4006 () Bool)
(declare-fun x3706 () Int)
(declare-fun x4109 () Bool)
(declare-fun x4574 () Int)
(declare-fun x2497 () Bool)
(declare-fun x4721 () Bool)
(declare-fun x4897 () x1536)
(declare-fun x3331 () Int)
(declare-fun x3239 () Bool)
(declare-fun x2938 () Bool)
(declare-fun x2968 () Bool)
(declare-fun x2492 () Bool)
(declare-fun x266 () Bool)
(declare-fun x2575 () Bool)
(declare-fun x4017 () Bool)
(declare-fun x2651 () Int)
(declare-fun x4730 () Int)
(declare-fun x3510 () Int)
(declare-fun x2657 () Bool)
(declare-fun x3827 () Bool)
(declare-fun x3149 () Bool)
(declare-fun x4348 () Int)
(declare-fun x4478 () Bool)
(declare-fun x2616 () Bool)
(declare-fun x4410 () Int)
(declare-fun x333 () Int)
(declare-fun x2377 () Bool)
(declare-fun x1399 () Bool)
(declare-fun x1969 () Bool)
(declare-fun x4541 () Bool)
(declare-fun x1534 () Int)
(declare-fun x4457 () Int)
(declare-fun x620 () Int)
(declare-fun x1911 () Int)
(declare-fun x486 () Int)
(declare-fun x4002 () Int)
(declare-fun x239 () Bool)
(declare-fun x3229 () Int)
(declare-fun x3082 () x1536)
(declare-fun x198 () Bool)
(declare-fun x2336 () x1536)
(declare-fun x4836 () Int)
(declare-fun x2730 () Bool)
(declare-fun x4561 () x1536)
(declare-fun x826 () Int)
(declare-fun x4309 () Bool)
(declare-fun x2650 () Bool)
(declare-fun x3578 () Bool)
(declare-fun x3537 () Int)
(declare-fun x1492 () Bool)
(declare-fun x3427 () Int)
(declare-fun x2745 () Bool)
(declare-fun x3391 () Bool)
(declare-fun x4162 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x1163 () Bool)
(declare-fun x2887 () Int)
(declare-fun x4180 () Int)
(declare-fun x1203 () Int)
(declare-fun x4007 () Bool)
(declare-fun x3316 () Int)
(declare-fun x553 () Bool)
(declare-fun x1376 () Int)
(declare-fun x1039 () Bool)
(declare-fun x2990 () Int)
(declare-fun x2431 () Bool)
(declare-fun x1337 () Int)
(declare-fun x2909 () Int)
(declare-fun x159 () Int)
(declare-fun x4879 () Int)
(declare-fun x3219 () Int)
(declare-fun x2576 () Int)
(declare-fun x3232 () Bool)
(declare-fun x426 () Int)
(declare-fun x42 () Bool)
(declare-fun x2118 () Int)
(declare-fun x2623 () Int)
(declare-fun x3754 () Bool)
(declare-fun x1291 () Bool)
(declare-fun x4184 () Bool)
(declare-fun x8 () Bool)
(declare-fun x138 () Bool)
(declare-fun x3935 () Int)
(declare-fun x2544 () Int)
(declare-fun x877 () x1536)
(declare-fun x4762 () Int)
(declare-fun x3486 () Bool)
(declare-fun x4581 () Bool)
(declare-fun x3164 () Bool)
(declare-fun x4496 () Bool)
(declare-fun x4868 () Bool)
(declare-fun x2394 () Int)
(declare-fun x2893 () Int)
(declare-fun x3283 () Bool)
(declare-fun x4665 () Bool)
(declare-fun x3519 () Int)
(declare-fun x3942 () Bool)
(declare-fun x4755 () Bool)
(declare-fun x683 () Bool)
(declare-fun x1667 () Bool)
(declare-fun x2054 () Bool)
(declare-fun x2369 () Bool)
(declare-fun x4310 () Int)
(declare-fun x130 () Int)
(declare-fun x3923 () Int)
(declare-fun x269 () Int)
(declare-fun x3442 () Bool)
(declare-fun x2588 () Int)
(declare-fun x410 () Bool)
(declare-fun x4962 () Int)
(declare-fun x1020 () Int)
(declare-fun x4833 () Int)
(declare-fun x656 () x1536)
(declare-fun x4790 () Bool)
(declare-fun x742 () Int)
(declare-fun x1345 () Int)
(declare-fun x4346 () Bool)
(declare-fun x3137 () Int)
(declare-fun x989 () Bool)
(declare-fun x1703 () Bool)
(declare-fun x3861 () Int)
(declare-fun x1089 () Int)
(declare-fun x2028 () Bool)
(declare-fun x593 () Bool)
(declare-fun x4462 () Bool)
(declare-fun x3128 () Int)
(declare-fun x3533 () Bool)
(declare-fun x4839 () Int)
(declare-fun x121 () Int)
(declare-fun x892 () x1536)
(declare-fun x1999 () x1536)
(declare-fun x1350 () Int)
(declare-fun x4074 () x1536)
(declare-fun x4643 () Int)
(declare-fun x3185 () Bool)
(declare-fun x4733 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x3934 () Int)
(declare-fun x1042 () Int)
(declare-fun x2972 () Int)
(declare-fun x1109 () Bool)
(declare-fun x860 () Int)
(declare-fun x165 () Bool)
(declare-fun x308 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x75 () Int)
(declare-fun x1243 () Int)
(declare-fun x1532 () Bool)
(declare-fun x848 () Bool)
(declare-fun x4275 () Bool)
(declare-fun x3572 () Bool)
(declare-fun x227 () Bool)
(declare-fun x2674 () Bool)
(declare-fun x407 () Bool)
(declare-fun x3727 () Bool)
(declare-fun x3844 () Bool)
(declare-fun x2281 () Int)
(declare-fun x3749 () Int)
(declare-fun x4805 () Bool)
(declare-fun x3541 () Bool)
(declare-fun x1827 () Bool)
(declare-fun x4314 () Bool)
(declare-fun x2797 () Bool)
(declare-fun x3764 () Int)
(declare-fun x4303 () Bool)
(declare-fun x3070 () Bool)
(declare-fun x2722 () Bool)
(declare-fun x2230 () Bool)
(declare-fun x273 () Bool)
(declare-fun x1048 () Int)
(declare-fun x2687 () Int)
(declare-fun x3526 () Bool)
(declare-fun x1747 () Bool)
(declare-fun x4394 () Int)
(declare-fun x893 () Int)
(declare-fun x1568 () Int)
(declare-fun x549 () Int)
(declare-fun x283 () Int)
(declare-fun x1765 () Bool)
(declare-fun x944 () Bool)
(declare-fun x454 () Int)
(declare-fun x3115 () Bool)
(declare-fun x2340 () Bool)
(declare-fun x331 () Int)
(declare-fun x4652 () Bool)
(declare-fun x3357 () Bool)
(declare-fun x2106 () x1536)
(declare-fun x4011 () Bool)
(declare-fun x4710 () Int)
(declare-fun x109 () Int)
(declare-fun x3347 () Bool)
(declare-fun x320 () Int)
(declare-fun x4763 () Int)
(declare-fun x2288 () Int)
(declare-fun x1804 () Int)
(declare-fun x1474 () x1536)
(declare-fun x4902 () Bool)
(declare-fun x4933 () Int)
(declare-fun x4655 () Int)
(declare-fun x31 () Bool)
(declare-fun x3039 () Int)
(declare-fun x2604 () Bool)
(declare-fun x2191 () Int)
(declare-fun x2707 () Bool)
(declare-fun x494 () Int)
(declare-fun x3112 () Int)
(declare-fun x3140 () Int)
(declare-fun x206 () Int)
(declare-fun x1026 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x3536 (x1536) Int)
(declare-fun x4515 () Bool)
(declare-fun x3273 () Int)
(declare-fun x3983 () Int)
(declare-fun x956 () Bool)
(declare-fun x4119 () Int)
(declare-fun x2235 () x1536)
(declare-fun x4334 () Bool)
(declare-fun x4949 () Bool)
(declare-fun x3864 () Int)
(declare-fun x2775 () Int)
(declare-fun x2971 () Bool)
(declare-fun x1852 () Int)
(declare-fun x2953 () x1536)
(declare-fun x4153 () Int)
(declare-fun x1353 () Int)
(declare-fun x2828 () x1536)
(declare-fun x1431 () Bool)
(declare-fun x3110 () Int)
(declare-fun x2194 () Bool)
(declare-fun x1030 () x1536)
(declare-fun x2899 () Bool)
(declare-fun x2148 () Int)
(declare-fun x2877 () Int)
(declare-fun x2958 () Int)
(declare-fun x355 () Int)
(declare-fun x2212 () Int)
(declare-fun x2046 () Bool)
(declare-fun x12 () Bool)
(declare-fun x6 () Bool)
(declare-fun x2758 (Int) x1536)
(declare-fun x2747 () x1536)
(declare-fun x2617 () Bool)
(declare-fun x2382 () Bool)
(declare-fun x170 () Bool)
(declare-fun x3961 () Int)
(declare-fun x2134 () Bool)
(declare-fun x762 () Int)
(declare-fun x2883 () x1536)
(declare-fun x2782 () Bool)
(declare-fun x1296 () Bool)
(declare-fun x3522 () Int)
(declare-fun x2234 () Int)
(declare-fun x1874 () Int)
(declare-fun x1973 () Bool)
(declare-fun x935 () Bool)
(declare-fun x4406 () Bool)
(declare-fun x1795 () x1536)
(declare-fun x143 () Bool)
(declare-fun x1713 () x1536)
(declare-fun x1873 () Bool)
(declare-fun x2665 () Int)
(declare-fun x2384 () x1536)
(declare-fun x3032 () Bool)
(declare-fun x3300 () Int)
(declare-fun x2526 () Bool)
(declare-fun x243 () Int)
(declare-fun x3880 () Int)
(declare-fun x4245 () Int)
(declare-fun x3728 () Bool)
(declare-fun x3422 () Bool)
(declare-fun x1549 () Int)
(declare-fun x902 () Int)
(declare-fun x2141 () Int)
(declare-fun x3770 () Bool)
(declare-fun x4445 () Int)
(declare-fun x87 () Bool)
(declare-fun x2166 () x1536)
(declare-fun x3174 () Int)
(declare-fun x680 () Int)
(declare-fun x3414 () Int)
(declare-fun x3262 () Bool)
(declare-fun x4774 () Bool)
(declare-fun x786 () Int)
(declare-fun x2641 () Int)
(declare-fun x158 () Bool)
(declare-fun x3094 () x1536)
(declare-fun x2995 () Bool)
(declare-fun x154 () Int)
(declare-fun x2053 () Bool)
(declare-fun x22 () Bool)
(declare-fun x1935 () Int)
(declare-fun x3528 () x1536)
(declare-fun x765 () Bool)
(declare-fun x3362 () Bool)
(declare-fun x4644 () Bool)
(declare-fun x1062 () Bool)
(declare-fun x3401 () Int)
(declare-fun x3636 () Int)
(declare-fun x2568 () Int)
(declare-fun x3313 () Bool)
(declare-fun x3750 () Bool)
(declare-fun x3101 () Bool)
(declare-fun x253 () Int)
(declare-fun x2808 () Int)
(declare-fun x1635 () x1536)
(declare-fun x1432 () Bool)
(declare-fun x1215 () Int)
(declare-fun x1798 () Bool)
(declare-fun x4313 () Int)
(declare-fun x1521 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x1012 () Int)
(declare-fun x527 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x88 () Bool)
(declare-fun x1513 () Bool)
(declare-fun x1075 () Int)
(declare-fun x1799 () Int)
(declare-fun x900 () Bool)
(declare-fun x3317 () x1536)
(declare-fun x1752 () Bool)
(declare-fun x150 () Bool)
(declare-fun x4018 () Int)
(declare-fun x4564 () Bool)
(declare-fun x1607 () x1536)
(declare-fun x4030 () Bool)
(declare-fun x369 () Int)
(declare-fun x1906 () Int)
(declare-fun x4587 () x1536)
(declare-fun x4186 () Bool)
(declare-fun x3051 () Bool)
(declare-fun x3015 () Int)
(declare-fun x313 () Bool)
(declare-fun x148 () Int)
(declare-fun x4293 () Bool)
(declare-fun x3261 () Int)
(declare-fun x1709 () Bool)
(declare-fun x3355 () Bool)
(declare-fun x1810 () Int)
(declare-fun x1284 () x1536)
(declare-fun x811 () Bool)
(declare-fun x4497 () Bool)
(declare-fun x4463 () Bool)
(declare-fun x3766 () Bool)
(declare-fun x3287 () x1536)
(declare-fun x180 () Int)
(declare-fun x3776 () Int)
(declare-fun x625 () Bool)
(declare-fun x3741 () x1536)
(declare-fun x4081 () Bool)
(declare-fun x2391 (x1536) Int)
(declare-fun x3798 (x1536) Int)
(declare-fun x3109 () Bool)
(declare-fun x1318 () Bool)
(declare-fun x280 () Int)
(declare-fun x2367 () x1536)
(declare-fun x3405 () Int)
(declare-fun x1940 () Int)
(declare-fun x1477 () Int)
(declare-fun x603 () Int)
(declare-fun x4498 () Bool)
(declare-fun x1858 () Bool)
(declare-fun x1802 () x1536)
(declare-fun x1840 () Int)
(declare-fun x3200 () Bool)
(declare-fun x1451 () x1536)
(declare-fun x183 () Bool)
(declare-fun x2130 () Int)
(declare-fun x1204 () Bool)
(declare-fun x4489 () Int)
(declare-fun x1411 () Bool)
(declare-fun x3208 () Bool)
(declare-fun x4351 () Bool)
(declare-fun x4544 () Int)
(declare-fun x3170 () Bool)
(declare-fun x4968 () Int)
(declare-fun x896 () Bool)
(declare-fun x285 () Bool)
(declare-fun x3220 () Bool)
(declare-fun x3535 () Bool)
(declare-fun x1418 () Int)
(declare-fun x1894 () Int)
(declare-fun x3802 () Bool)
(declare-fun x1417 () Bool)
(declare-fun x4522 () x1536)
(declare-fun x2341 () Bool)
(declare-fun x1476 () Int)
(declare-fun x3475 () Int)
(declare-fun x264 (x1536) Int)
(declare-fun x4415 () Int)
(declare-fun x2013 () Int)
(declare-fun x2542 () x1536)
(declare-fun x4065 () Bool)
(declare-fun x2224 () Int)
(declare-fun x4272 () Bool)
(declare-fun x3449 () Bool)
(declare-fun x3071 () Int)
(declare-fun x1361 () Bool)
(declare-fun x23 () Bool)
(declare-fun x3314 (x1536) Int)
(declare-fun x3113 () Bool)
(declare-fun x1262 () Int)
(declare-fun x3719 () Int)
(declare-fun x4916 () Bool)
(declare-fun x2484 () Int)
(declare-fun x3074 () Int)
(declare-fun x2221 () Int)
(declare-fun x923 () x1536)
(declare-fun x1819 () x1536)
(declare-fun x4694 () Bool)
(declare-fun x3348 () Bool)
(declare-fun x1391 () Int)
(declare-fun x3289 () Int)
(declare-fun x3419 () Bool)
(declare-fun x1618 () Bool)
(declare-fun x3550 () Bool)
(declare-fun x4656 () Bool)
(declare-fun x3752 () Int)
(declare-fun x4140 () Bool)
(declare-fun x4961 () Bool)
(declare-fun x2077 () Int)
(declare-fun x193 () Bool)
(declare-fun x4893 () Bool)
(declare-fun x352 () Int)
(declare-fun x1831 () Bool)
(declare-fun x4950 () Bool)
(declare-fun x4804 () Bool)
(declare-fun x1883 () Bool)
(declare-fun x3619 () Int)
(declare-fun x3162 () Bool)
(declare-fun x1264 () Int)
(declare-fun x2827 () Int)
(declare-fun x4212 () Bool)
(declare-fun x4526 () Bool)
(declare-fun x1626 () Int)
(declare-fun x1632 () Bool)
(declare-fun x3078 () Bool)
(declare-fun x4590 () Bool)
(declare-fun x2642 () Bool)
(declare-fun x781 () Bool)
(declare-fun x4849 () Bool)
(declare-fun x4920 () Int)
(declare-fun x2487 () Int)
(declare-fun x4089 (Int) Int)
(declare-fun x3040 () Int)
(declare-fun x519 () x1536)
(declare-fun x135 () Int)
(declare-fun x1945 () Int)
(declare-fun x210 () Bool)
(declare-fun x796 () Bool)
(declare-fun x132 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x2744 () Bool)
(declare-fun x464 () Bool)
(declare-fun x2345 () Int)
(declare-fun x4834 () Bool)
(declare-fun x64 () Bool)
(declare-fun x3058 () Int)
(declare-fun x4124 () Bool)
(declare-fun x3990 () Bool)
(declare-fun x988 () x1536)
(declare-fun x13 () Int)
(declare-fun x1832 () Bool)
(declare-fun x2404 () x1536)
(declare-fun x3560 () Bool)
(declare-fun x3595 () Int)
(declare-fun x4844 () x1536)
(declare-fun x1507 () Bool)
(declare-fun x2965 () Int)
(declare-fun x2092 () Bool)
(declare-fun x3069 () x1536)
(declare-fun x845 () Int)
(declare-fun x4536 () x1536)
(declare-fun x1972 () x1536)
(declare-fun x2898 () Bool)
(declare-fun x743 () Int)
(declare-fun x4247 () Int)
(declare-fun x4265 () x1536)
(declare-fun x4934 () Bool)
(declare-fun x4301 () Int)
(declare-fun x2408 () Int)
(declare-fun x798 () Bool)
(declare-fun x3187 () Int)
(declare-fun x2300 () Int)
(declare-fun x2219 () Int)
(declare-fun x3335 () x1536)
(declare-fun x2123 () Int)
(declare-fun x679 () Int)
(declare-fun x1681 () Int)
(declare-fun x2512 () Int)
(declare-fun x1087 () Int)
(declare-fun x1731 () Bool)
(declare-fun x3953 () Bool)
(declare-fun x1370 () Int)
(declare-fun x4913 () Bool)
(declare-fun x3700 () Bool)
(declare-fun x2111 () Bool)
(declare-fun x4366 () Bool)
(declare-fun x429 () Bool)
(declare-fun x4449 () Bool)
(declare-fun x777 () Int)
(declare-fun x3281 () Int)
(declare-fun x2182 () Int)
(declare-fun x1270 () Int)
(declare-fun x3381 () Bool)
(declare-fun x96 () Bool)
(declare-fun x571 () Int)
(declare-fun x564 () Int)
(declare-fun x2927 () Bool)
(declare-fun x4654 () Bool)
(declare-fun x3900 () x1536)
(declare-fun x2560 () Bool)
(declare-fun x1088 () Bool)
(declare-fun x3614 () Bool)
(declare-fun x1872 () x1536)
(declare-fun x1862 () Int)
(declare-fun x1828 () Bool)
(declare-fun x3962 () Int)
(declare-fun x3972 () Bool)
(declare-fun x3643 (x1536) Int)
(declare-fun x873 () Int)
(declare-fun x3456 () Int)
(declare-fun x3556 () Bool)
(declare-fun x2905 () Bool)
(declare-fun x1386 () Int)
(declare-fun x1442 () Bool)
(declare-fun x1937 () x1536)
(declare-fun x100 () Bool)
(declare-fun x2406 () Bool)
(declare-fun x2949 () Bool)
(declare-fun x863 () Bool)
(declare-fun x3901 (Int) Int)
(declare-fun x3952 () Int)
(declare-fun x2709 () Bool)
(declare-fun x2474 () x1536)
(declare-fun x3677 () Bool)
(declare-fun x907 () Int)
(declare-fun x3974 () Bool)
(declare-fun x524 () Bool)
(declare-fun x191 () Int)
(declare-fun x4039 () Int)
(declare-fun x2491 () Bool)
(declare-fun x4196 () Bool)
(declare-fun x4736 () Bool)
(declare-fun x4758 () Int)
(declare-fun x501 () Bool)
(declare-fun x4512 () Bool)
(declare-fun x1557 () Int)
(declare-fun x3775 () Int)
(declare-fun x1551 () Bool)
(declare-fun x521 () Bool)
(declare-fun x2109 () Int)
(declare-fun x4032 () x1536)
(declare-fun x2869 () Bool)
(declare-fun x1704 () Bool)
(declare-fun x296 () Int)
(declare-fun x720 () Int)
(declare-fun x1146 () Int)
(declare-fun x946 () x1536)
(declare-fun x2144 () Bool)
(declare-fun x3666 () Bool)
(declare-fun x648 () Bool)
(declare-fun x1077 () x1536)
(declare-fun x4249 () Int)
(declare-fun x3138 () Bool)
(declare-fun x459 () Bool)
(declare-fun x2445 () Bool)
(declare-fun x212 () Int)
(declare-fun x2837 () x1536)
(declare-fun x3483 () Int)
(declare-fun x2159 () Bool)
(declare-fun x3919 () Bool)
(declare-fun x2084 (Int) Int)
(declare-fun x1898 () Bool)
(declare-fun x4234 () Bool)
(declare-fun x4290 () Int)
(declare-fun x4405 () Bool)
(declare-fun x2699 () Bool)
(declare-fun x3423 () Bool)
(declare-fun x2153 () Int)
(declare-fun x576 () Bool)
(declare-fun x2337 () Int)
(declare-fun x3617 () x1536)
(declare-fun x666 () Int)
(declare-fun x4754 () Bool)
(declare-fun x1803 () Int)
(declare-fun x3544 () Bool)
(declare-fun x2876 () Bool)
(declare-fun x1426 () Int)
(declare-fun x3275 () Int)
(declare-fun x235 () Bool)
(declare-fun x2050 () Bool)
(declare-fun x3681 () Bool)
(declare-fun x3256 () Int)
(declare-fun x3562 () Bool)
(declare-fun x3671 () Int)
(declare-fun x3646 () Bool)
(declare-fun x2643 () x1536)
(declare-fun x4304 () Bool)
(declare-fun x1382 () Int)
(declare-fun x2218 () Bool)
(declare-fun x3949 (x1536) Int)
(declare-fun x1293 () Bool)
(declare-fun x1175 () Int)
(declare-fun x1673 () x1536)
(declare-fun x2824 () Bool)
(declare-fun x4967 () x1536)
(declare-fun x3064 () x1536)
(declare-fun x1660 () Bool)
(declare-fun x484 () Int)
(declare-fun x1755 () x1536)
(declare-fun x530 () Bool)
(declare-fun x209 () x1536)
(declare-fun x2711 () x1536)
(declare-fun x2805 () Int)
(declare-fun x4919 () Int)
(declare-fun x4407 () Bool)
(declare-fun x289 () Int)
(declare-fun x304 () Bool)
(declare-fun x3367 () Bool)
(declare-fun x3349 () Int)
(declare-fun x823 () Int)
(declare-fun x2704 () Bool)
(declare-fun x764 () Bool)
(declare-fun x1650 () Int)
(declare-fun x2977 () Int)
(declare-fun x2138 () Bool)
(declare-fun x2799 () Bool)
(declare-fun x4248 () Bool)
(declare-fun x3226 () Bool)
(declare-fun x3796 () Bool)
(declare-fun x2086 () Bool)
(declare-fun x265 () Int)
(declare-fun x2430 () Bool)
(declare-fun x583 () Int)
(declare-fun x2372 () Bool)
(declare-fun x760 () x1536)
(declare-fun x3742 () Int)
(declare-fun x1993 () Bool)
(declare-fun x1934 () Bool)
(declare-fun x4690 () Bool)
(declare-fun x3154 () x1536)
(declare-fun x1723 () Int)
(declare-fun x3917 () x1536)
(declare-fun x1433 () Bool)
(declare-fun x246 () Bool)
(declare-fun x1342 () x1536)
(declare-fun x854 () Int)
(declare-fun x4737 () Bool)
(declare-fun x1875 () Bool)
(declare-fun x4788 () Bool)
(declare-fun x4870 () Bool)
(declare-fun x3833 () Int)
(declare-fun x2019 () Bool)
(declare-fun x2335 () Int)
(declare-fun x1298 () Bool)
(declare-fun x1689 () Bool)
(declare-fun x129 () Bool)
(declare-fun x1985 () x1536)
(declare-fun x1054 () Bool)
(declare-fun x4025 () Bool)
(declare-fun x4928 () Bool)
(declare-fun x48 () Bool)
(declare-fun x2507 () Bool)
(declare-fun x2058 () Int)
(declare-fun x393 () Bool)
(declare-fun x1303 () Bool)
(declare-fun x334 () Bool)
(declare-fun x4571 () Bool)
(declare-fun x729 () Int)
(declare-fun x968 () Int)
(declare-fun x1910 () Bool)
(declare-fun x4137 () Bool)
(declare-fun x1963 () Int)
(declare-fun x2197 () Bool)
(declare-fun x1157 () Bool)
(declare-fun x2047 () Int)
(declare-fun x2731 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x3604 () Bool)
(declare-fun x4306 (x1536) Int)
(declare-fun x2314 () x1536)
(declare-fun x1225 () Int)
(declare-fun x4429 () Int)
(declare-fun x1748 () Bool)
(declare-fun x1015 () Bool)
(declare-fun x3054 () Bool)
(declare-fun x1355 () Bool)
(declare-fun x3688 (x1536) Int)
(declare-fun x207 () Int)
(declare-fun x2213 () Bool)
(declare-fun x2096 () Int)
(declare-fun x1510 () Bool)
(declare-fun x4069 () Bool)
(declare-fun x16 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x4016 () Bool)
(declare-fun x1881 () Bool)
(declare-fun x1782 () x1536)
(declare-fun x3627 () Int)
(declare-fun x3286 () Bool)
(declare-fun x1237 () Int)
(declare-fun x3119 (Int Int) Int)
(declare-fun x542 () x1536)
(declare-fun x2849 () Bool)
(declare-fun x4482 () Int)
(declare-fun x4471 () x1536)
(declare-fun x3212 () Bool)
(declare-fun x3957 () Int)
(declare-fun x1114 () Bool)
(declare-fun x2490 () x1536)
(declare-fun x1708 () Int)
(declare-fun x1651 () Bool)
(declare-fun x3659 () Int)
(declare-fun x2847 () Bool)
(declare-fun x1738 () Int)
(declare-fun x805 () Bool)
(declare-fun x2502 () Bool)
(declare-fun x4723 () x1536)
(declare-fun x4267 () Bool)
(declare-fun x4706 () Int)
(declare-fun x284 () x1536)
(declare-fun x1669 () Int)
(declare-fun x4852 () Int)
(declare-fun x1202 () Bool)
(declare-fun x3871 () Bool)
(declare-fun x3711 () Int)
(declare-fun x3517 () Int)
(declare-fun x1367 () Int)
(declare-fun x1742 () x1536)
(declare-fun x2065 () Bool)
(declare-fun x1595 () Int)
(declare-fun x2986 () Int)
(declare-fun x1739 () Bool)
(declare-fun x4114 () x1536)
(declare-fun x733 () Bool)
(declare-fun x4614 () Bool)
(declare-fun x98 () Bool)
(declare-fun x2222 () Bool)
(declare-fun x1697 () Bool)
(declare-fun x4050 () Int)
(declare-fun x4533 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x178 () Int)
(declare-fun x851 (Int) Int)
(declare-fun x1586 () Int)
(declare-fun x833 () Int)
(declare-fun x3514 () Bool)
(declare-fun x2988 () Bool)
(declare-fun x4257 () Bool)
(declare-fun x3889 () Int)
(declare-fun x4862 () Int)
(declare-fun x868 () Bool)
(declare-fun x3583 () Int)
(declare-fun x2540 () Int)
(declare-fun x789 () Int)
(declare-fun x1068 () Bool)
(declare-fun x4043 () Int)
(declare-fun x914 () Int)
(declare-fun x3197 () Int)
(declare-fun x3865 () Bool)
(declare-fun x3696 () Int)
(declare-fun x709 () Int)
(declare-fun x662 () Bool)
(declare-fun x282 () x1536)
(declare-fun x1977 () Int)
(declare-fun x3409 () Bool)
(declare-fun x3546 () Bool)
(declare-fun x3476 () Bool)
(declare-fun x2330 () Bool)
(declare-fun x3710 () Bool)
(declare-fun x4966 () Bool)
(declare-fun x4739 () Int)
(declare-fun x1044 () Bool)
(declare-fun x4791 () Bool)
(declare-fun x1512 () Bool)
(declare-fun x3321 () x1536)
(declare-fun x2664 () Bool)
(declare-fun x3148 () x1536)
(declare-fun x4060 () Int)
(declare-fun x1011 () Int)
(declare-fun x3146 () Bool)
(declare-fun x2339 () Int)
(declare-fun x1428 () Int)
(declare-fun x480 () Int)
(declare-fun x1942 () Bool)
(declare-fun x4271 () x1536)
(declare-fun x727 () Int)
(declare-fun x412 () Bool)
(declare-fun x4095 () Int)
(declare-fun x1117 () Int)
(declare-fun x540 (x1536) Int)
(declare-fun x4451 () Bool)
(declare-fun x2094 () Bool)
(declare-fun x1323 () Int)
(declare-fun x1565 () Int)
(declare-fun x723 () Int)
(declare-fun x4892 () Bool)
(declare-fun x4051 () Int)
(declare-fun x4817 () Int)
(declare-fun x1063 () Int)
(declare-fun x3203 () Bool)
(declare-fun x3607 () Int)
(declare-fun x2448 () Int)
(declare-fun x2352 () Int)
(declare-fun x3906 () Bool)
(declare-fun x50 () Bool)
(declare-fun x2506 () Int)
(declare-fun x3571 () Int)
(declare-fun x315 () Bool)
(declare-fun x4308 () Bool)
(declare-fun x2463 () Bool)
(declare-fun x2101 () Int)
(declare-fun x52 () Int)
(declare-fun x3820 () Int)
(declare-fun x3127 () Int)
(declare-fun x3805 () Int)
(declare-fun x4506 () Bool)
(declare-fun x768 () Int)
(declare-fun x1010 () Bool)
(declare-fun x4094 () Int)
(declare-fun x911 () Bool)
(declare-fun x4133 () Bool)
(declare-fun x2561 () x1536)
(declare-fun x3744 () Int)
(declare-fun x364 () Int)
(declare-fun x495 () Bool)
(declare-fun x3216 () Bool)
(declare-fun x1441 () Bool)
(declare-fun x1081 () Bool)
(declare-fun x697 () Int)
(declare-fun x659 () Int)
(declare-fun x387 () Int)
(declare-fun x4217 () Bool)
(declare-fun x2271 () Int)
(declare-fun x2217 () Int)
(declare-fun x433 () Bool)
(declare-fun x4830 () Bool)
(declare-fun x1601 () Bool)
(declare-fun x1868 () Int)
(declare-fun x3464 () Bool)
(declare-fun x3407 () Int)
(declare-fun x4459 () Bool)
(declare-fun x2640 () Bool)
(declare-fun x3090 () Int)
(declare-fun x801 (x1536) Int)
(declare-fun x3834 () Bool)
(declare-fun x4856 () Bool)
(declare-fun x2698 () Int)
(declare-fun x2127 () Bool)
(declare-fun x3658 () Bool)
(declare-fun x604 () x1536)
(declare-fun x596 () Int)
(declare-fun x2644 () Int)
(declare-fun x829 () Int)
(declare-fun x3875 () Int)
(declare-fun x1665 () Int)
(declare-fun x2004 () Int)
(declare-fun x2278 () Bool)
(declare-fun x838 () Int)
(declare-fun x756 (Int) Int)
(declare-fun x1171 () Int)
(declare-fun x3570 () x1536)
(declare-fun x3841 () Bool)
(declare-fun x824 () Bool)
(declare-fun x1620 () Bool)
(declare-fun x678 () Bool)
(declare-fun x2924 () Bool)
(declare-fun x1968 () Int)
(declare-fun x1634 () x1536)
(declare-fun x2186 () Int)
(declare-fun x2668 () Bool)
(declare-fun x90 () Int)
(declare-fun x2343 () Int)
(declare-fun x1558 () Bool)
(declare-fun x2116 () Int)
(declare-fun x4869 () Int)
(declare-fun x3303 () x1536)
(declare-fun x3253 () Int)
(declare-fun x1774 () x1536)
(declare-fun x1438 () Int)
(declare-fun x4697 () Int)
(declare-fun x1542 () Int)
(declare-fun x1260 () Bool)
(declare-fun x897 () Bool)
(declare-fun x4381 () Bool)
(declare-fun x2694 () Bool)
(declare-fun x2325 () x1536)
(declare-fun x966 () Int)
(declare-fun x146 () Bool)
(declare-fun x475 () Int)
(declare-fun x3868 () Bool)
(declare-fun x783 () Int)
(declare-fun x1471 () Int)
(declare-fun x692 () Int)
(declare-fun x1822 () Int)
(declare-fun x1450 () Int)
(declare-fun x1288 () x1536)
(declare-fun x1759 () Int)
(declare-fun x539 () Int)
(declare-fun x627 () Int)
(declare-fun x2535 () Bool)
(declare-fun x225 () Bool)
(declare-fun x4188 () Bool)
(declare-fun x2102 () Bool)
(declare-fun x1815 () Int)
(declare-fun x3662 () x1536)
(declare-fun x1936 () Bool)
(declare-fun x4041 (x1536) Int)
(declare-fun x1443 () Int)
(declare-fun x2374 () Bool)
(declare-fun x332 () Bool)
(declare-fun x1631 () Bool)
(declare-fun x1200 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x2719 () Int)
(declare-fun x4946 () x1536)
(declare-fun x2302 () x1536)
(declare-fun x4860 () Int)
(declare-fun x2523 () Bool)
(declare-fun x229 () Bool)
(declare-fun x2904 () Int)
(declare-fun x2609 () Bool)
(declare-fun x1098 () Bool)
(declare-fun x4026 () x1536)
(declare-fun x2042 () x1536)
(declare-fun x4720 () Bool)
(declare-fun x1917 () Int)
(declare-fun x4384 () Bool)
(declare-fun x4027 () Int)
(declare-fun x2960 () Bool)
(declare-fun x4420 () Int)
(declare-fun x2936 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x359 () Int)
(declare-fun x441 () Int)
(declare-fun x1990 () Int)
(declare-fun x3767 () x1536)
(declare-fun x3574 () Bool)
(declare-fun x2240 () Bool)
(declare-fun x2485 () Int)
(declare-fun x793 () Bool)
(declare-fun x2875 () Bool)
(declare-fun x4566 () Int)
(declare-fun x1002 () Int)
(declare-fun x1493 () Bool)
(declare-fun x1734 () Int)
(declare-fun x1767 () Bool)
(declare-fun x1725 () Int)
(declare-fun x4734 () Int)
(declare-fun x2566 () Bool)
(declare-fun x887 () x1536)
(declare-fun x2067 () Bool)
(declare-fun x131 () Bool)
(declare-fun x2740 () Bool)
(declare-fun x2151 () Bool)
(declare-fun x4948 () Int)
(declare-fun x705 () Bool)
(declare-fun x4527 () Bool)
(declare-fun x3172 () Int)
(declare-fun x4092 () Bool)
(declare-fun x3967 () Bool)
(declare-fun x4264 () Bool)
(declare-fun x3224 () Int)
(declare-fun x3177 () Int)
(declare-fun x3789 () Int)
(declare-fun x1333 () Int)
(declare-fun x3346 () Bool)
(declare-fun x2083 () Int)
(declare-fun x753 () Int)
(declare-fun x24 () Int)
(declare-fun x4226 () Int)
(declare-fun x4083 () Int)
(declare-fun x1347 () Int)
(declare-fun x2549 () Int)
(declare-fun x156 () Int)
(declare-fun x1764 () x1536)
(declare-fun x2635 () Int)
(declare-fun x4911 () Bool)
(declare-fun x4759 () Int)
(declare-fun x3620 () Bool)
(declare-fun x4229 () Bool)
(declare-fun x377 () Bool)
(declare-fun x3554 () Bool)
(declare-fun x2647 () Int)
(declare-fun x3701 () x1536)
(declare-fun x4787 () Bool)
(declare-fun x1573 () Bool)
(declare-fun x2183 () Int)
(declare-fun x1141 () Int)
(declare-fun x1564 () Int)
(declare-fun x1408 () Int)
(declare-fun x2866 () Int)
(declare-fun x3623 () Bool)
(declare-fun x2291 () x1536)
(declare-fun x2680 () Int)
(declare-fun x3306 () Int)
(declare-fun x4493 () Int)
(declare-fun x2928 () Bool)
(declare-fun x1506 () x1536)
(declare-fun x3324 () Int)
(declare-fun x2267 () Bool)
(declare-fun x300 () Int)
(declare-fun x3330 () Bool)
(declare-fun x830 () Int)
(declare-fun x3787 () Int)
(declare-fun x4537 () Int)
(declare-fun x3150 () Bool)
(declare-fun x153 () Int)
(declare-fun x2389 () Bool)
(declare-fun x1578 () Bool)
(declare-fun x2423 () Int)
(declare-fun x2633 () Bool)
(declare-fun x472 () Bool)
(declare-fun x1843 () x1536)
(declare-fun x1371 () x1536)
(declare-fun x4552 () Bool)
(declare-fun x4009 () Bool)
(declare-fun x606 () Bool)
(declare-fun x4014 () Bool)
(declare-fun x4476 () Bool)
(declare-fun x2489 () Int)
(declare-fun x4628 () x1536)
(declare-fun x2073 () Bool)
(declare-fun x3756 () x1536)
(declare-fun x1593 () Bool)
(declare-fun x4510 () Bool)
(declare-fun x1684 () Bool)
(declare-fun x976 () Bool)
(declare-fun x1797 () Int)
(declare-fun x1208 () Bool)
(declare-fun x4034 () Bool)
(declare-fun x849 () Int)
(declare-fun x3596 () Bool)
(declare-fun x2941 () Int)
(declare-fun x4444 (x1536) Int)
(declare-fun x469 () Bool)
(declare-fun x4422 () Int)
(declare-fun x3721 () Bool)
(declare-fun x2791 () Bool)
(declare-fun x425 () Bool)
(declare-fun x2546 () Int)
(declare-fun x3635 () Int)
(declare-fun x1018 () Int)
(declare-fun x2189 (x1536) Int)
(declare-fun x755 () Int)
(declare-fun x3233 () Int)
(declare-fun x3065 () Int)
(declare-fun x2 (Int) Int)
(declare-fun x4198 () Bool)
(declare-fun x3061 () Int)
(declare-fun x3795 () Bool)
(declare-fun x3549 () Bool)
(declare-fun x316 () Int)
(declare-fun x310 () Int)
(declare-fun x4686 () Int)
(declare-fun x4724 () Bool)
(declare-fun x981 () Int)
(declare-fun x669 () x1536)
(declare-fun x4770 () Int)
(declare-fun x3926 () Bool)
(declare-fun x2595 () Int)
(declare-fun x1960 () Int)
(declare-fun x3933 () Int)
(declare-fun x17 () Int)
(declare-fun x4668 () Int)
(declare-fun x4118 () Bool)
(declare-fun x4941 () Int)
(declare-fun x881 () Bool)
(declare-fun x19 () Int)
(declare-fun x196 () Int)
(declare-fun x4363 () Int)
(declare-fun x1861 () Bool)
(declare-fun x3908 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x97 () Int)
(declare-fun x4711 () Int)
(declare-fun x4904 () Int)
(declare-fun x4213 () Int)
(declare-fun x4352 () Bool)
(declare-fun x2361 () Bool)
(declare-fun x3496 () Int)
(declare-fun x2069 () Bool)
(declare-fun x2859 () Bool)
(declare-fun x38 () Bool)
(declare-fun x1274 () Int)
(declare-fun x1754 () Bool)
(declare-fun x1158 () x1536)
(declare-fun x3874 () x1536)
(declare-fun x4207 () Int)
(declare-fun x3856 () Int)
(declare-fun x2537 () x1536)
(declare-fun x144 () x1536)
(declare-fun x118 () Bool)
(declare-fun x508 () Bool)
(declare-fun x3013 () Bool)
(declare-fun x4099 () Bool)
(declare-fun x3810 () Bool)
(declare-fun x2261 () Int)
(declare-fun x3195 () Bool)
(declare-fun x1034 () Bool)
(declare-fun x3002 () Bool)
(declare-fun x3309 () Int)
(declare-fun x4798 () Int)
(declare-fun x4424 () Bool)
(declare-fun x2790 () x1536)
(declare-fun x373 () Bool)
(declare-fun x728 () Int)
(declare-fun x260 () Bool)
(declare-fun x3123 () Bool)
(declare-fun x2292 () x1536)
(declare-fun x145 () Int)
(declare-fun x1334 () Int)
(declare-fun x1745 () Bool)
(declare-fun x855 () Bool)
(declare-fun x4077 () Bool)
(declare-fun x3077 () x1536)
(declare-fun x4584 () Int)
(declare-fun x1396 () x1536)
(declare-fun x4475 () Bool)
(declare-fun x2000 () Int)
(declare-fun x880 () x1536)
(declare-fun x4464 () Bool)
(declare-fun x3713 () x1536)
(declare-fun x3946 () Bool)
(declare-fun x371 () Int)
(declare-fun x1071 () Int)
(declare-fun x4719 () Int)
(declare-fun x113 () Int)
(declare-fun x2307 () Int)
(declare-fun x3049 () Bool)
(declare-fun x3615 () Int)
(declare-fun x1623 () Int)
(declare-fun x2911 () Bool)
(declare-fun x1069 () x1536)
(declare-fun x1779 () Int)
(declare-fun x691 () Bool)
(declare-fun x1529 () Bool)
(declare-fun x2950 () Int)
(declare-fun x1076 () Bool)
(declare-fun x3630 () Int)
(declare-fun x141 () Bool)
(declare-fun x3472 () Int)
(declare-fun x2539 () Bool)
(declare-fun x3217 () Bool)
(declare-fun x1156 () Int)
(declare-fun x4197 () Int)
(declare-fun x4232 () Bool)
(declare-fun x390 () Int)
(declare-fun x5 () Bool)
(declare-fun x3400 () Bool)
(declare-fun x4831 () Int)
(declare-fun x1305 () Bool)
(declare-fun x4738 () Bool)
(declare-fun x4592 () Int)
(declare-fun x60 () Bool)
(declare-fun x4173 () Bool)
(declare-fun x4040 () Int)
(declare-fun x164 () Bool)
(declare-fun x1869 () Int)
(declare-fun x2892 () Bool)
(declare-fun x4523 () Bool)
(declare-fun x708 () Int)
(declare-fun x4174 () Bool)
(declare-fun x2739 () Bool)
(declare-fun x2251 () Bool)
(declare-fun x632 () Bool)
(declare-fun x3320 () Int)
(declare-fun x36 () Int)
(declare-fun x4127 () Int)
(declare-fun x4214 () Bool)
(declare-fun x203 () Bool)
(declare-fun x4556 () Int)
(declare-fun x3352 () Int)
(declare-fun x4250 () Bool)
(declare-fun x1458 () Int)
(declare-fun x2360 () Int)
(declare-fun x2364 () x1536)
(declare-fun x2946 () Bool)
(declare-fun x2672 () Int)
(declare-fun x1456 () Int)
(declare-fun x3838 () Bool)
(declare-fun x1893 () Int)
(declare-fun x1385 () Int)
(declare-fun x1561 () Bool)
(declare-fun x4840 () Int)
(declare-fun x47 () Int)
(declare-fun x2351 () Int)
(declare-fun x861 () Bool)
(declare-fun x1847 () Bool)
(declare-fun x405 () Int)
(declare-fun x2956 () Int)
(declare-fun x1400 () x1536)
(declare-fun x322 () Int)
(declare-fun x3909 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x4843 () Bool)
(declare-fun x1753 () Int)
(declare-fun x1294 (Int) Int)
(declare-fun x3653 () Bool)
(declare-fun x250 () Bool)
(declare-fun x608 () Int)
(declare-fun x2076 () Int)
(declare-fun x2236 () Bool)
(declare-fun x953 () Bool)
(declare-fun x1439 () Int)
(declare-fun x1191 () Bool)
(declare-fun x2018 () Int)
(declare-fun x2309 () x1536)
(declare-fun x1129 () Bool)
(declare-fun x3895 () Int)
(declare-fun x566 () Bool)
(declare-fun x3315 () Int)
(declare-fun x1449 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x4029 () Int)
(declare-fun x1311 () Int)
(declare-fun x2032 () Bool)
(declare-fun x913 () Bool)
(declare-fun x730 () Bool)
(declare-fun x3823 () Int)
(declare-fun x859 () x1536)
(declare-fun x1686 () Int)
(declare-fun x2472 () x1536)
(declare-fun x2550 (x1536) Int)
(declare-fun x1032 () Bool)
(declare-fun x1393 () Int)
(declare-fun x3558 () Int)
(declare-fun x3004 () x1536)
(declare-fun x4735 () Int)
(declare-fun x2388 () Int)
(declare-fun x236 () Bool)
(declare-fun x4372 (Int) Int)
(declare-fun x3081 () Int)
(declare-fun x2629 () Bool)
(declare-fun x595 () Bool)
(declare-fun x1065 () Bool)
(declare-fun x4848 () Bool)
(declare-fun x2863 () Int)
(declare-fun x2154 () Int)
(declare-fun x3202 () Int)
(declare-fun x2713 () Int)
(declare-fun x4563 () Int)
(declare-fun x2453 (x1536) Int)
(declare-fun x3322 () Bool)
(declare-fun x2508 () Int)
(declare-fun x1245 () Int)
(declare-fun x4333 () Bool)
(declare-fun x4901 () x1536)
(declare-fun x2320 () Int)
(declare-fun x2783 () Bool)
(declare-fun x3523 () x1536)
(declare-fun x2816 () Int)
(declare-fun x3155 () Bool)
(declare-fun x2746 () Int)
(declare-fun x1310 () Bool)
(declare-fun x1996 () Int)
(declare-fun x1453 () Int)
(declare-fun x1892 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x4936 () x1536)
(declare-fun x744 () Bool)
(declare-fun x3493 () Bool)
(declare-fun x2756 () Bool)
(declare-fun x465 () Int)
(declare-fun x4532 () x1536)
(declare-fun x4793 () Bool)
(declare-fun x2882 () Int)
(declare-fun x58 () Int)
(declare-fun x1045 () Int)
(declare-fun x3955 () Int)
(declare-fun x4365 () Bool)
(declare-fun x1452 () x1536)
(declare-fun x1312 () Int)
(declare-fun x2667 () Int)
(declare-fun x152 () Int)
(declare-fun x4813 () Bool)
(declare-fun x347 () Bool)
(declare-fun x447 () Bool)
(declare-fun x2529 () Int)
(declare-fun x4769 () Bool)
(declare-fun x2247 () Int)
(declare-fun x661 () Int)
(declare-fun x2823 () Int)
(declare-fun x3772 () Bool)
(declare-fun x463 () Int)
(declare-fun x1781 () Int)
(declare-fun x3916 () x1536)
(declare-fun x2689 () Int)
(declare-fun x2888 () Bool)
(declare-fun x1569 () Bool)
(declare-fun x4368 () Bool)
(declare-fun x2530 () Int)
(declare-fun x4259 () Bool)
(declare-fun x2850 () Bool)
(declare-fun x3361 () Bool)
(declare-fun x1608 () Bool)
(declare-fun x4604 () Int)
(declare-fun x3745 () Bool)
(declare-fun x1304 () Bool)
(declare-fun x3458 () Bool)
(declare-fun x1300 () Int)
(declare-fun x378 () Int)
(declare-fun x3863 () Int)
(declare-fun x167 () Bool)
(declare-fun x3183 () Int)
(declare-fun x3444 () Bool)
(declare-fun x2582 () Bool)
(declare-fun x4419 () x1536)
(declare-fun x4015 () Bool)
(declare-fun x2585 () x1536)
(declare-fun x4756 () Int)
(declare-fun x354 () Bool)
(declare-fun x1570 () Int)
(declare-fun x3243 () Int)
(declare-fun x3883 () Bool)
(declare-fun x274 () Bool)
(declare-fun x1836 () Bool)
(declare-fun x443 () Int)
(declare-fun x585 () Int)
(declare-fun x3198 () Int)
(declare-fun x4945 () Bool)
(declare-fun x1981 () Int)
(declare-fun x4078 () Bool)
(declare-fun x2587 () Int)
(declare-fun x1460 () Int)
(declare-fun x2573 () Int)
(declare-fun x3613 () Bool)
(declare-fun x770 () Bool)
(declare-fun x3088 () x1536)
(declare-fun x4633 () Int)
(declare-fun x995 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x4617 () Bool)
(declare-fun x4177 () Bool)
(declare-fun x4239 () Bool)
(declare-fun x4935 () Int)
(declare-fun x3664 () Int)
(declare-fun x2210 () x1536)
(declare-fun x4292 () Bool)
(declare-fun x3629 () Int)
(declare-fun x4545 () Bool)
(declare-fun x2522 () Bool)
(declare-fun x3358 () x1536)
(declare-fun x268 () Bool)
(declare-fun x220 () Int)
(declare-fun x534 () Bool)
(declare-fun x2250 () Int)
(declare-fun x674 () Bool)
(declare-fun x3025 () Int)
(declare-fun x2653 () Int)
(declare-fun x1659 () Int)
(declare-fun x1897 () Bool)
(declare-fun x4252 () Bool)
(declare-fun x2630 () Bool)
(declare-fun x1330 (Int) Int)
(declare-fun x3207 () Bool)
(declare-fun x3491 () Bool)
(declare-fun x4433 () Bool)
(declare-fun x2957 (x1536) Int)
(declare-fun x446 () x1536)
(declare-fun x1155 () Bool)
(declare-fun x906 () Int)
(declare-fun x3994 () Bool)
(declare-fun x1055 () Bool)
(declare-fun x3848 () Bool)
(declare-fun x3461 () Bool)
(declare-fun x1602 () Int)
(declare-fun x1198 () Bool)
(declare-fun x1454 () Bool)
(declare-fun x4915 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x1619 () Bool)
(declare-fun x2772 () x1536)
(declare-fun x2043 () Int)
(declare-fun x693 () Bool)
(declare-fun x1702 () Int)
(declare-fun x2105 () Bool)
(declare-fun x2161 () Bool)
(declare-fun x4601 () Bool)
(declare-fun x3005 () Bool)
(declare-fun x3675 () Int)
(declare-fun x3378 () Bool)
(declare-fun x3028 (x1536) Int)
(declare-fun x4692 () Bool)
(declare-fun x3937 (Int) Int)
(declare-fun x922 () Bool)
(declare-fun x380 () Bool)
(declare-fun x748 () Int)
(declare-fun x1594 () Int)
(declare-fun x2164 () Int)
(declare-fun x1099 () Bool)
(declare-fun x3386 () Bool)
(declare-fun x1580 () Int)
(declare-fun x3297 () Bool)
(declare-fun x3732 () Bool)
(declare-fun x1445 () Bool)
(declare-fun x4223 () Bool)
(declare-fun x1918 () Int)
(declare-fun x2503 () Bool)
(declare-fun x2793 () Bool)
(declare-fun x3487 () Bool)
(declare-fun x3587 () Bool)
(declare-fun x7 () Int)
(declare-fun x619 () x1536)
(declare-fun x1377 () Bool)
(declare-fun x2915 () Bool)
(declare-fun x1629 () Bool)
(declare-fun x2921 () Bool)
(declare-fun x4559 () Bool)
(declare-fun x3557 () Int)
(declare-fun x3573 () Int)
(declare-fun x1161 () Int)
(declare-fun x2895 () Int)
(declare-fun x1780 () Int)
(declare-fun x2862 () Bool)
(declare-fun x1639 () Bool)
(declare-fun x3160 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x535 () Bool)
(declare-fun x4760 () Bool)
(declare-fun x3333 () Bool)
(declare-fun x3107 () Int)
(declare-fun x2003 () Int)
(declare-fun x2654 () Bool)
(declare-fun x1275 () x1536)
(declare-fun x699 () Int)
(declare-fun x640 () Int)
(declare-fun x4518 () Bool)
(declare-fun x2081 () Bool)
(declare-fun x2873 () Int)
(declare-fun x3425 () Int)
(declare-fun x597 () Bool)
(declare-fun x4931 () Bool)
(declare-fun x1740 () Bool)
(declare-fun x2693 () Int)
(declare-fun x2324 () Int)
(declare-fun x116 () Int)
(declare-fun x1997 () Bool)
(declare-fun x1394 () x1536)
(declare-fun x1853 () Bool)
(declare-fun x401 () x1536)
(declare-fun x4120 () x1536)
(declare-fun x1958 () x1536)
(declare-fun x1135 () Int)
(declare-fun x2462 () Int)
(declare-fun x3731 () Bool)
(declare-fun x767 () x1536)
(declare-fun x2252 () Bool)
(declare-fun x2919 () Bool)
(declare-fun x2881 () Int)
(declare-fun x1131 () Bool)
(declare-fun x2400 () Bool)
(declare-fun x1469 () Int)
(declare-fun x1057 () Bool)
(declare-fun x4753 () Int)
(declare-fun x2108 () Int)
(declare-fun x3612 (x1536) Int)
(declare-fun x4925 () Int)
(declare-fun x3891 () x1536)
(declare-fun x4000 () Bool)
(declare-fun x389 () Bool)
(declare-fun x1461 () Int)
(declare-fun x668 () Int)
(declare-fun x4474 () Bool)
(declare-fun x4375 () Int)
(declare-fun x3649 () x1536)
(declare-fun x546 () Int)
(declare-fun x1877 () Bool)
(declare-fun x686 () Int)
(declare-fun x2413 () Int)
(declare-fun x2762 () Bool)
(declare-fun x4829 () Bool)
(declare-fun x1518 () Int)
(declare-fun x3144 () Int)
(declare-fun x4671 () Bool)
(declare-fun x3415 () Int)
(declare-fun x3632 () Bool)
(declare-fun x628 () x1536)
(declare-fun x2773 () Bool)
(declare-fun x1952 () Int)
(declare-fun x3829 () Bool)
(declare-fun x4952 () x1536)
(declare-fun x3870 () Bool)
(declare-fun x4353 () Bool)
(declare-fun x2297 () Bool)
(declare-fun x2509 () Int)
(declare-fun x3130 () Bool)
(declare-fun x2442 () Bool)
(declare-fun x3542 () x1536)
(declare-fun x4577 () Int)
(declare-fun x646 () Bool)
(declare-fun x1749 () Int)
(declare-fun x4591 () Int)
(declare-fun x1571 () Bool)
(declare-fun x667 () Bool)
(declare-fun x3799 () Bool)
(declare-fun x217 () Bool)
(declare-fun x3215 () Bool)
(declare-fun x1908 () Int)
(declare-fun x2272 () Int)
(declare-fun x1165 () Int)
(declare-fun x2376 () Int)
(declare-fun x1830 () Int)
(declare-fun x4583 () Bool)
(declare-fun x2438 () Bool)
(declare-fun x973 () x1536)
(declare-fun x1628 () Int)
(declare-fun x3785 () Int)
(declare-fun x3584 () Bool)
(declare-fun x1939 () Bool)
(declare-fun x1184 () Int)
(declare-fun x3036 () Bool)
(declare-fun x3734 () x1536)
(declare-fun x4312 () Bool)
(declare-fun x1715 () Int)
(declare-fun x912 () Bool)
(declare-fun x2991 () Int)
(declare-fun x2313 () Bool)
(declare-fun x187 () Bool)
(declare-fun x3644 () Int)
(declare-fun x1983 () Int)
(declare-fun x160 () Bool)
(declare-fun x4943 () Int)
(declare-fun x2275 () Int)
(declare-fun x4426 () x1536)
(declare-fun x769 () Bool)
(declare-fun x3981 () Bool)
(declare-fun x2140 () Int)
(declare-fun x685 () Int)
(declare-fun x4023 () Int)
(declare-fun x4608 () Bool)
(declare-fun x1970 () Bool)
(declare-fun x4112 () Int)
(declare-fun x3494 () Int)
(declare-fun x4373 () Int)
(declare-fun x2975 () Int)
(declare-fun x2135 () Bool)
(declare-fun x3869 () Bool)
(declare-fun x1352 () Bool)
(declare-fun x65 () Int)
(declare-fun x1637 () Bool)
(declare-fun x791 () Bool)
(declare-fun x928 () Int)
(declare-fun x3638 () Int)
(declare-fun x4569 () Bool)
(declare-fun x93 () Bool)
(declare-fun x1429 () Bool)
(declare-fun x4241 () Bool)
(declare-fun x1758 () Int)
(declare-fun x962 () Bool)
(declare-fun x2825 (x1536) Int)
(declare-fun x3343 () Int)
(declare-fun x1415 () Bool)
(declare-fun x4436 () Bool)
(declare-fun x3980 () x1536)
(declare-fun x4918 () Bool)
(declare-fun x735 () Int)
(declare-fun x2607 () Int)
(declare-fun x102 () Int)
(declare-fun x83 () Int)
(declare-fun x3228 () Bool)
(declare-fun x1860 (x1536) Int)
(declare-fun x4098 () Bool)
(declare-fun x903 () x1536)
(declare-fun x1733 () Bool)
(declare-fun x2435 () Int)
(declare-fun x3205 () Bool)
(declare-fun x46 () Int)
(declare-fun x1499 () x1536)
(declare-fun x688 () Int)
(declare-fun x290 () x1536)
(declare-fun x4956 () Int)
(declare-fun x4134 () Bool)
(declare-fun x2777 () Bool)
(declare-fun x2534 () Bool)
(declare-fun x53 () Bool)
(declare-fun x2412 () Bool)
(declare-fun x2788 () Bool)
(declare-fun x1277 () Int)
(declare-fun x1314 () Int)
(declare-fun x541 () Bool)
(declare-fun x1962 () Int)
(declare-fun x2114 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x1193 () Bool)
(declare-fun x1119 () Int)
(declare-fun x4192 () Int)
(declare-fun x2060 () Int)
(declare-fun x263 () Int)
(declare-fun x1700 () Bool)
(declare-fun x2185 () Bool)
(declare-fun x4547 () Int)
(declare-fun x3173 () Bool)
(declare-fun x4138 () Bool)
(declare-fun x4775 () Bool)
(declare-fun x945 () Bool)
(declare-fun x3839 () x1536)
(declare-fun x875 () Int)
(declare-fun x687 () Bool)
(declare-fun x149 () Bool)
(declare-fun x2896 () Bool)
(declare-fun x4411 (x1536) Int)
(declare-fun x3118 () Int)
(declare-fun x2894 () Bool)
(declare-fun x30 () Int)
(declare-fun x341 () x1536)
(declare-fun x2290 () Bool)
(declare-fun x2021 () Bool)
(declare-fun x2370 () Int)
(declare-fun x4796 () Bool)
(declare-fun x4397 () Bool)
(declare-fun x2813 () x1536)
(declare-fun x3509 () Bool)
(declare-fun x2780 () Bool)
(declare-fun x3904 () Bool)
(declare-fun x1522 () Bool)
(declare-fun x3469 () Int)
(declare-fun x1336 () Int)
(declare-fun x4236 () Int)
(declare-fun x4262 () Int)
(declare-fun x779 () Int)
(declare-fun x406 () Int)
(declare-fun x2055 () Bool)
(declare-fun x610 () x1536)
(declare-fun x3014 () Bool)
(declare-fun x4323 () x1536)
(declare-fun x3824 (x1536) Int)
(declare-fun x99 () Bool)
(declare-fun x2415 () Bool)
(declare-fun x1796 () Int)
(declare-fun x2098 () Int)
(declare-fun x4055 () Bool)
(declare-fun x726 () Int)
(declare-fun x3178 () Bool)
(declare-fun x1177 () Int)
(declare-fun x706 () Int)
(declare-fun x4922 () Int)
(declare-fun x28 () Int)
(declare-fun x479 () Bool)
(declare-fun x3003 () Int)
(declare-fun x1205 () Bool)
(declare-fun x2564 () Bool)
(declare-fun x1095 () Int)
(declare-fun x1405 (x1536) Int)
(declare-fun x2692 () Bool)
(declare-fun x1902 () Int)
(declare-fun x4403 () Bool)
(declare-fun x1497 () Int)
(declare-fun x3790 () x1536)
(declare-fun x2461 () Int)
(declare-fun x3468 () Bool)
(declare-fun x3640 () Bool)
(declare-fun x3478 () Bool)
(declare-fun x1194 (x1536) Int)
(declare-fun x4959 () Bool)
(declare-fun x2002 () x1536)
(declare-fun x2574 () Bool)
(declare-fun x3225 () Bool)
(declare-fun x3832 () x1536)
(declare-fun x1259 () Int)
(declare-fun x2147 () Int)
(declare-fun x964 () x1536)
(declare-fun x4747 () Int)
(declare-fun x775 () Int)
(declare-fun x1255 () Bool)
(declare-fun x110 () Bool)
(declare-fun x1841 () Int)
(declare-fun x1540 () Bool)
(declare-fun x4705 () Int)
(declare-fun x1246 () Bool)
(declare-fun x3609 () Int)
(declare-fun x3718 () x1536)
(declare-fun x1527 () Bool)
(declare-fun x567 () Int)
(declare-fun x1003 () Int)
(declare-fun x2937 () Bool)
(declare-fun x3709 () x1536)
(declare-fun x2211 () x1536)
(declare-fun x3319 () Bool)
(declare-fun x820 () Int)
(declare-fun x1924 () Bool)
(declare-fun x270 () Bool)
(declare-fun x570 () Bool)
(declare-fun x2810 () Int)
(declare-fun x3206 () Bool)
(declare-fun x1021 () Bool)
(declare-fun x1806 () Int)
(declare-fun x488 () Bool)
(declare-fun x2294 () Int)
(declare-fun x665 () x1536)
(declare-fun x1690 () Bool)
(declare-fun x3384 () Int)
(declare-fun x1437 () Bool)
(declare-fun x3846 () Int)
(declare-fun x2750 () Int)
(declare-fun x3753 () Bool)
(declare-fun x4619 () x1536)
(declare-fun x1809 () Int)
(declare-fun x2781 () Bool)
(declare-fun x843 () Bool)
(declare-fun x4881 () Bool)
(declare-fun x3897 () Bool)
(declare-fun x2333 () x1536)
(declare-fun x605 () Int)
(declare-fun x959 () Int)
(declare-fun x3450 () Bool)
(declare-fun x1590 () Int)
(declare-fun x2137 () Int)
(declare-fun x3531 () Int)
(declare-fun x2387 () Int)
(declare-fun x4685 () Int)
(declare-fun x2836 () Bool)
(declare-fun x3608 () Bool)
(declare-fun x4048 () Bool)
(declare-fun x927 () Bool)
(declare-fun x477 () Bool)
(declare-fun x1398 () x1536)
(declare-fun x2671 () x1536)
(declare-fun x1094 () Int)
(declare-fun x3989 () Int)
(declare-fun x4106 (Int) Int)
(declare-fun x4325 () x1536)
(declare-fun x750 () Int)
(declare-fun x3930 () Int)
(declare-fun x2776 () Int)
(declare-fun x2262 () Int)
(declare-fun x4193 () Bool)
(declare-fun x4135 () Int)
(declare-fun x2736 () x1536)
(declare-fun x4071 () Int)
(declare-fun x599 () x1536)
(declare-fun x3582 () Int)
(declare-fun x574 () Bool)
(declare-fun x4329 () x1536)
(declare-fun x3672 () Bool)
(declare-fun x2245 () Int)
(declare-fun x3026 () Bool)
(declare-fun x4453 () x1536)
(declare-fun x759 () Bool)
(declare-fun x1816 () Int)
(declare-fun x1867 () Bool)
(declare-fun x2440 () x1536)
(declare-fun x357 () Int)
(declare-fun x2885 () Bool)
(declare-fun x971 () Int)
(declare-fun x1014 () Bool)
(declare-fun x3021 () Bool)
(declare-fun x3292 () Bool)
(declare-fun x114 () Bool)
(declare-fun x2010 () Bool)
(declare-fun x123 () Int)
(declare-fun x117 () Bool)
(declare-fun x3667 () Int)
(declare-fun x4696 () x1536)
(declare-fun x1760 () Bool)
(declare-fun x3637 () Int)
(declare-fun x4662 () Bool)
(declare-fun x3508 () x1536)
(declare-fun x2385 () x1536)
(declare-fun x3992 () x1536)
(declare-fun x3575 () Int)
(declare-fun x1124 () Bool)
(declare-fun x3465 () Bool)
(declare-fun x890 () Bool)
(declare-fun x436 () Bool)
(declare-fun x3593 () Int)
(declare-fun x4477 () Bool)
(declare-fun x1516 () Int)
(declare-fun x4230 (Int) Int)
(declare-fun x3085 () Bool)
(declare-fun x3336 () Bool)
(declare-fun x3555 () Bool)
(declare-fun x1560 () x1536)
(declare-fun x4595 () Bool)
(declare-fun x4049 () Bool)
(declare-fun x958 () Bool)
(declare-fun x1805 () Int)
(declare-fun x4379 () x1536)
(declare-fun x1366 () Bool)
(declare-fun x568 () Int)
(declare-fun x1388 () Bool)
(declare-fun x1946 () Bool)
(declare-fun x4957 () Int)
(declare-fun x3489 () x1536)
(declare-fun x391 () Bool)
(declare-fun x2565 () Bool)
(declare-fun x3443 () Bool)
(declare-fun x1824 () Int)
(declare-fun x4401 () Int)
(declare-fun x778 () Int)
(declare-fun x2097 () x1536)
(declare-fun x2208 () Bool)
(declare-fun x2867 () Int)
(declare-fun x2088 () Bool)
(declare-fun x1494 (x1536) Int)
(declare-fun x1031 () x1536)
(declare-fun x714 () Bool)
(declare-fun x4339 () Int)
(declare-fun x1903 () Bool)
(declare-fun x4246 () x1536)
(declare-fun x1090 () Int)
(declare-fun x4084 () Int)
(declare-fun x950 () Bool)
(declare-fun x4832 () Int)
(declare-fun x4801 () Bool)
(declare-fun x4637 () Int)
(declare-fun x2059 () Int)
(declare-fun x1511 () Bool)
(declare-fun x3611 () Int)
(declare-fun x1676 () Int)
(declare-fun x952 () Bool)
(declare-fun x2481 () Int)
(declare-fun x303 () Bool)
(declare-fun x2310 () Int)
(declare-fun x998 () Bool)
(declare-fun x2417 () Int)
(declare-fun x4521 () Int)
(declare-fun x2727 () Bool)
(declare-fun x2511 () Bool)
(declare-fun x2342 () Int)
(declare-fun x4408 () Bool)
(declare-fun x3760 () Bool)
(declare-fun x1531 () Int)
(declare-fun x4780 () Int)
(declare-fun x711 () Int)
(declare-fun x1035 () Int)
(declare-fun x4681 (x1536) Int)
(declare-fun x572 () Int)
(declare-fun x2656 (Int Int) Int)
(declare-fun x2742 () Int)
(declare-fun x432 () Bool)
(declare-fun x403 () Int)
(declare-fun x4280 () x1536)
(declare-fun x4143 () Bool)
(declare-fun x25 () Int)
(declare-fun x2645 () Bool)
(declare-fun x4524 () Bool)
(declare-fun x2998 () Bool)
(declare-fun x3941 () Bool)
(declare-fun x3648 () Int)
(declare-fun x2615 () Int)
(declare-fun x2932 () Bool)
(declare-fun x451 () Int)
(declare-fun x4542 () Bool)
(declare-fun x262 () Int)
(declare-fun x2728 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x1789 () Bool)
(declare-fun x4437 () x1536)
(declare-fun x376 () Bool)
(declare-fun x4101 () Bool)
(declare-fun x4517 () Bool)
(declare-fun x2686 () Int)
(declare-fun x49 () Bool)
(declare-fun x999 () Bool)
(declare-fun x2517 () Bool)
(declare-fun x4013 () x1536)
(declare-fun x3814 () Int)
(declare-fun x3845 () Int)
(declare-fun x3126 () x1536)
(declare-fun x1253 () Int)
(declare-fun x1517 () Int)
(declare-fun x600 () x1536)
(declare-fun x925 () Bool)
(declare-fun x3060 (x1536) Int)
(declare-fun x3516 () Bool)
(declare-fun x2947 () Int)
(declare-fun x536 () Int)
(declare-fun x3804 () Int)
(declare-fun x579 () Bool)
(declare-fun x3670 () Int)
(declare-fun x2556 () Int)
(declare-fun x4076 (Int) Int)
(declare-fun x1006 () Int)
(declare-fun x2846 () Bool)
(declare-fun x4004 () x1536)
(declare-fun x4865 () Int)
(declare-fun x4600 () Bool)
(declare-fun x2525 () Int)
(declare-fun x4328 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x4228 () Int)
(declare-fun x3783 () Bool)
(declare-fun x4821 () Bool)
(declare-fun x1118 () Bool)
(declare-fun x1279 () Bool)
(declare-fun x2500 () Bool)
(declare-fun x485 () Int)
(declare-fun x3788 () Bool)
(declare-fun x689 () Bool)
(declare-fun x4744 () Bool)
(declare-fun x4045 () Int)
(declare-fun x2871 () Bool)
(declare-fun x751 () Bool)
(declare-fun x3567 () x1536)
(declare-fun x4520 () Bool)
(declare-fun x3815 () Bool)
(declare-fun x1414 () x1536)
(declare-fun x2155 () Bool)
(declare-fun x3663 () Int)
(declare-fun x4750 (x1536) Int)
(declare-fun x3403 () Int)
(declare-fun x3029 () Int)
(declare-fun x1463 () Bool)
(declare-fun x4886 () Bool)
(declare-fun x2048 () Bool)
(declare-fun x4659 () Int)
(declare-fun x2660 () Int)
(declare-fun x2334 () Int)
(declare-fun x4390 () Bool)
(declare-fun x1009 () Int)
(declare-fun x1154 () Int)
(declare-fun x4752 () Int)
(declare-fun x2923 () x1536)
(declare-fun x1905 () Bool)
(declare-fun x4284 () Bool)
(declare-fun x3342 () Int)
(declare-fun x4093 () Bool)
(declare-fun x700 () Int)
(declare-fun x4885 () Bool)
(declare-fun x1701 () Int)
(declare-fun x2559 () Int)
(declare-fun x3959 () Bool)
(declare-fun x3502 () Bool)
(declare-fun x2349 () Int)
(declare-fun x1696 () Bool)
(declare-fun x3835 () Int)
(declare-fun x1880 () Bool)
(declare-fun x3840 () Bool)
(declare-fun x3073 () Int)
(declare-fun x929 () Int)
(declare-fun x2458 () Int)
(declare-fun x732 () x1536)
(declare-fun x1606 () Int)
(declare-fun x2833 () Int)
(declare-fun x3135 () x1536)
(declare-fun x1363 () Bool)
(declare-fun x3360 () Bool)
(declare-fun x3563 () Int)
(declare-fun x1144 () Int)
(declare-fun x2198 () Int)
(declare-fun x291 () Bool)
(declare-fun x3213 () Bool)
(declare-fun x2322 () Int)
(declare-fun x2426 () Int)
(declare-fun x2172 () Bool)
(declare-fun x119 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x4487 () Bool)
(declare-fun x866 () Int)
(declare-fun x3628 () Bool)
(declare-fun x3694 () Bool)
(declare-fun x4954 () Int)
(declare-fun x2011 () x1536)
(declare-fun x1053 () x1536)
(declare-fun x2757 () Int)
(declare-fun x1625 () Int)
(declare-fun x4725 () Int)
(declare-fun x4513 () Bool)
(declare-fun x2926 () Bool)
(declare-fun x3581 () Bool)
(declare-fun x1185 () Bool)
(declare-fun x1548 () Int)
(declare-fun x2195 () Int)
(declare-fun x2963 () Bool)
(declare-fun x1508 () Bool)
(declare-fun x511 () x1536)
(declare-fun x324 () Bool)
(declare-fun x223 () Bool)
(declare-fun x2603 () Int)
(declare-fun x4716 () Bool)
(declare-fun x1773 () Bool)
(declare-fun x4298 () Int)
(declare-fun x4380 () Int)
(declare-fun x4597 () Bool)
(declare-fun x2987 () Int)
(declare-fun x1239 () Bool)
(declare-fun x4631 () Int)
(declare-fun x2532 () Bool)
(declare-fun x4208 () Int)
(declare-fun x1315 () Int)
(declare-fun x2056 () Bool)
(declare-fun x1369 () Int)
(declare-fun x1670 () Int)
(declare-fun x2156 () Int)
(declare-fun x245 () Int)
(declare-fun x580 () Bool)
(declare-fun x2954 () Bool)
(declare-fun x4047 (Int) Int)
(declare-fun x2855 () Int)
(declare-fun x415 () Bool)
(declare-fun x4063 () Bool)
(declare-fun x267 () Int)
(declare-fun x1692 () Bool)
(declare-fun x795 () Bool)
(declare-fun x2254 () Bool)
(declare-fun x62 () Bool)
(declare-fun x2358 () Bool)
(declare-fun x4104 () Int)
(declare-fun x3368 () Int)
(declare-fun x2289 () Int)
(declare-fun x2578 () Int)
(declare-fun x4864 () Int)
(declare-fun x4781 () Bool)
(declare-fun x3120 () Int)
(declare-fun x1271 () Bool)
(declare-fun x919 () Int)
(declare-fun x240 () Bool)
(declare-fun x2729 () x1536)
(declare-fun x9 () Bool)
(declare-fun x2840 () Bool)
(declare-fun x2099 () Bool)
(declare-fun x3822 () Bool)
(declare-fun x1887 () Bool)
(declare-fun x4336 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x1989 () Bool)
(declare-fun x1771 () Bool)
(declare-fun x4636 () Int)
(declare-fun x2093 () Int)
(declare-fun x4818 () Int)
(declare-fun x552 () Bool)
(declare-fun x336 () Bool)
(declare-fun x3599 () Bool)
(declare-fun x1091 () Int)
(declare-fun x3751 () Int)
(declare-fun x1850 () Bool)
(declare-fun x3010 () Bool)
(declare-fun x3308 () Bool)
(declare-fun x4209 () Int)
(declare-fun x518 () Bool)
(declare-fun x2030 () x1536)
(declare-fun x1646 () Int)
(declare-fun x2515 () Bool)
(declare-fun x4291 () Int)
(declare-fun x4900 () Int)
(declare-fun x1106 () Bool)
(declare-fun x916 () Bool)
(declare-fun x4276 () Bool)
(declare-fun x4538 () Bool)
(declare-fun x40 () Bool)
(declare-fun x1896 () Int)
(declare-fun x3825 () Bool)
(declare-fun x440 () Bool)
(declare-fun x1028 () Bool)
(declare-fun x4845 () Bool)
(declare-fun x4623 () Int)
(declare-fun x951 () Bool)
(declare-fun x3447 () x1536)
(declare-fun x1653 () Int)
(declare-fun x4872 () x1536)
(declare-fun x2012 () Int)
(declare-fun x3598 () Int)
(declare-fun x2675 () Int)
(declare-fun x173 () Int)
(declare-fun x4440 () Bool)
(declare-fun x4709 () Bool)
(declare-fun x624 () Int)
(declare-fun x3424 () Int)
(declare-fun x3052 () Int)
(declare-fun x1440 () x1536)
(declare-fun x3214 () Bool)
(declare-fun x3246 () Int)
(declare-fun x4511 () Bool)
(declare-fun x3104 () Bool)
(declare-fun x2169 () Bool)
(declare-fun x876 () Int)
(declare-fun x3527 () Int)
(declare-fun x4359 () Int)
(declare-fun x831 () Bool)
(declare-fun x2969 () Int)
(declare-fun x1933 () Int)
(declare-fun x1230 () x1536)
(declare-fun x4305 () Int)
(declare-fun x2177 (Int) Int)
(declare-fun x493 () Int)
(declare-fun x2795 () Int)
(declare-fun x2935 () Bool)
(declare-fun x4058 () Bool)
(declare-fun x4610 () Bool)
(declare-fun x4894 () Bool)
(declare-fun x3515 () Bool)
(declare-fun x3460 () Bool)
(declare-fun x3849 () Bool)
(declare-fun x1467 () Bool)
(declare-fun x3019 () Int)
(declare-fun x809 () Bool)
(declare-fun x716 () Bool)
(declare-fun x2737 () Int)
(declare-fun x3038 () Bool)
(declare-fun x2733 () Int)
(declare-fun x3161 () Int)
(declare-fun x3371 () Int)
(declare-fun x1849 () Bool)
(declare-fun x2567 () Bool)
(declare-fun x305 () x1536)
(declare-fun x4789 () Bool)
(declare-fun x1120 () Bool)
(declare-fun x1489 () Int)
(declare-fun x797 () Bool)
(declare-fun x2714 () Bool)
(declare-fun x2498 () Int)
(declare-fun x4932 () x1536)
(declare-fun x2626 () Int)
(declare-fun x3151 () Bool)
(declare-fun x4824 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x888 () Int)
(declare-fun x2821 () Bool)
(declare-fun x4695 () Bool)
(declare-fun x4494 () x1536)
(declare-fun x1980 (x1536) Int)
(declare-fun x2628 () Bool)
(declare-fun x3007 (x1536) Int)
(declare-fun x2922 () Bool)
(declare-fun x251 () Bool)
(declare-fun x1986 () Bool)
(declare-fun x1078 () Bool)
(declare-fun x2471 () Bool)
(declare-fun x3716 () Bool)
(declare-fun x3012 () Bool)
(declare-fun x232 () Int)
(declare-fun x3364 () Bool)
(declare-fun x878 () Bool)
(declare-fun x1652 () Int)
(declare-fun x2225 () Int)
(declare-fun x4534 (Int) Int)
(declare-fun x4764 () Bool)
(declare-fun x350 () Int)
(declare-fun x3437 () Int)
(declare-fun x4707 () Bool)
(declare-fun x517 () Int)
(declare-fun x1212 () x1536)
(declare-fun x3369 () Bool)
(declare-fun x4287 () Bool)
(declare-fun x471 () Int)
(declare-fun x272 () Int)
(declare-fun x2669 () Int)
(declare-fun x3830 () Bool)
(declare-fun x4255 () Bool)
(declare-fun x2383 () Int)
(declare-fun x1127 () Int)
(declare-fun x894 () Int)
(declare-fun x45 () Bool)
(declare-fun x2984 () Int)
(declare-fun x4641 () Bool)
(declare-fun x394 () Bool)
(declare-fun x960 () Bool)
(declare-fun x2089 () Bool)
(declare-fun x4689 () Bool)
(declare-fun x4195 () Int)
(declare-fun x1679 () Bool)
(declare-fun x917 () Bool)
(declare-fun x2276 () Int)
(declare-fun x3254 () Int)
(declare-fun x4274 () x1536)
(declare-fun x4169 () x1536)
(declare-fun x490 () Bool)
(declare-fun x1025 () x1536)
(declare-fun x1502 () Bool)
(declare-fun x1372 () Int)
(declare-fun x340 (x1536) Int)
(declare-fun x3328 () Bool)
(declare-fun x2178 () Int)
(declare-fun x1368 () Int)
(declare-fun x1603 () Int)
(declare-fun x4819 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x2451 () Int)
(declare-fun x1482 () Bool)
(declare-fun x2202 () Bool)
(declare-fun x803 () Bool)
(declare-fun x4955 () Int)
(declare-fun x528 () Int)
(declare-fun x4357 () Int)
(declare-fun x4125 () x1536)
(declare-fun x645 () x1536)
(declare-fun x771 () Int)
(declare-fun x1598 () Bool)
(declare-fun x4663 () Int)
(declare-fun x2734 () Bool)
(declare-fun x509 () Int)
(declare-fun x1413 () Int)
(declare-fun x1921 () Int)
(declare-fun x3294 () Int)
(declare-fun x3396 () Int)
(declare-fun x4594 () Bool)
(declare-fun x2531 () x1536)
(declare-fun x2359 () Bool)
(declare-fun x4421 () Bool)
(declare-fun x4501 () Bool)
(declare-fun x3241 () Bool)
(declare-fun x4693 () x1536)
(declare-fun x4178 () x1536)
(declare-fun x3852 () Bool)
(declare-fun x2663 () Int)
(declare-fun x1174 () Int)
(declare-fun x3454 () x1536)
(declare-fun x926 () Bool)
(declare-fun x311 () Int)
(declare-fun x255 (x1536) Int)
(declare-fun x1617 () Int)
(declare-fun x1101 () Bool)
(declare-fun x4580 () Bool)
(declare-fun x3389 () Int)
(declare-fun x1988 () Bool)
(declare-fun x4579 () Bool)
(declare-fun x513 () Int)
(declare-fun x538 () Bool)
(declare-fun x655 () Bool)
(declare-fun x1528 () x1536)
(declare-fun x1059 () x1536)
(declare-fun x3565 () Bool)
(declare-fun x3076 () Int)
(declare-fun x1854 () x1536)
(declare-fun x452 () Bool)
(declare-fun x695 () Int)
(declare-fun x2301 () Int)
(declare-fun x2658 () Int)
(declare-fun x392 () Bool)
(declare-fun x3692 () Bool)
(declare-fun x4794 () Int)
(declare-fun x3398 () x1536)
(declare-fun x1648 () Int)
(declare-fun x2908 () Int)
(declare-fun x2695 () Int)
(declare-fun x4670 () Bool)
(declare-fun x3374 () Bool)
(declare-fun x2396 () Int)
(declare-fun x4350 () Int)
(declare-fun x2890 () Bool)
(declare-fun x3470 () Int)
(declare-fun x2129 () Bool)
(declare-fun x1455 () Bool)
(declare-fun x1605 () Int)
(declare-fun x4618 () Int)
(declare-fun x120 () Int)
(declare-fun x3075 () Int)
(declare-fun x910 () Int)
(declare-fun x216 () x1536)
(declare-fun x4206 () Bool)
(declare-fun x581 () Int)
(declare-fun x2239 () Bool)
(declare-fun x676 () Bool)
(declare-fun x3129 () Int)
(declare-fun x4446 () Bool)
(declare-fun x2090 () Bool)
(declare-fun x84 () Int)
(declare-fun x4062 () Bool)
(declare-fun x4698 () Int)
(declare-fun x2397 () Bool)
(declare-fun x3665 () Bool)
(declare-fun x125 () Int)
(declare-fun x197 () Int)
(declare-fun x941 () Int)
(declare-fun x2897 () Bool)
(declare-fun x319 () Bool)
(declare-fun x3393 () x1536)
(declare-fun x1638 (x1536) Int)
(declare-fun x1176 () Int)
(declare-fun x937 () Int)
(declare-fun x1254 () x1536)
(declare-fun x2425 () Int)
(declare-fun x3624 () Bool)
(declare-fun x4412 () Int)
(declare-fun x2402 () Int)
(declare-fun x2001 () Bool)
(declare-fun x3920 () Int)
(declare-fun x1147 () Int)
(declare-fun x1328 () Int)
(declare-fun x1313 () Int)
(declare-fun x630 () Bool)
(declare-fun x3539 () Int)
(declare-fun x4898 () Int)
(declare-fun x4930 () Int)
(declare-fun x2355 () Int)
(declare-fun x992 () Int)
(declare-fun x3279 () Int)
(declare-fun x4884 () Int)
(declare-fun x1732 () Bool)
(declare-fun x4010 () Int)
(declare-fun x1870 () Bool)
(declare-fun x4612 () x1536)
(declare-fun x1043 () Int)
(declare-fun x3794 () x1536)
(declare-fun x188 () Int)
(declare-fun x613 () Bool)
(declare-fun x879 () Bool)
(declare-fun x4417 () Int)
(declare-fun x2830 () Bool)
(declare-fun x1483 () Bool)
(declare-fun x4557 () Bool)
(declare-fun x4814 () Bool)
(declare-fun x889 () Bool)
(declare-fun x1746 () x1536)
(declare-fun x29 () Bool)
(declare-fun x3451 () Int)
(declare-fun x2091 () Bool)
(declare-fun x2243 () Int)
(declare-fun x841 () Int)
(declare-fun x1943 () Int)
(declare-fun x3045 () Bool)
(declare-fun x2765 () Bool)
(declare-fun x4607 () Int)
(declare-fun x1818 () Bool)
(declare-fun x1223 () Int)
(declare-fun x3024 () Bool)
(declare-fun x3524 () Int)
(declare-fun x1785 () Bool)
(declare-fun x2822 () Int)
(declare-fun x2410 () Int)
(declare-fun x2457 () x1536)
(declare-fun x4912 () Int)
(declare-fun x1321 () x1536)
(declare-fun x4458 () Int)
(declare-fun x2170 () Bool)
(declare-fun x74 () Bool)
(declare-fun x2241 () Int)
(declare-fun x4151 () x1536)
(declare-fun x601 () Bool)
(declare-fun x2107 () Int)
(declare-fun x978 () Bool)
(declare-fun x1978 () Bool)
(declare-fun x2044 () Bool)
(declare-fun x4565 () Int)
(declare-fun x3928 () Int)
(declare-fun x1866 () Int)
(declare-fun x2113 () Int)
(declare-fun x4812 () Bool)
(declare-fun x3296 (x1536) Int)
(declare-fun x840 () Int)
(declare-fun x3338 () Bool)
(declare-fun x1582 () Bool)
(declare-fun x1915 () Bool)
(declare-fun x4204 () Bool)
(declare-fun x4629 () Int)
(declare-fun x3843 () Int)
(declare-fun x936 () Int)
(declare-fun x1084 () x1536)
(declare-fun x3345 () Bool)
(declare-fun x3702 () Bool)
(declare-fun x3801 () Int)
(declare-fun x3529 () Int)
(declare-fun x844 () Int)
(declare-fun x168 () x1536)
(declare-fun x3876 () Int)
(declare-fun x996 () x1536)
(declare-fun x1695 () Bool)
(declare-fun x4669 () Bool)
(declare-fun x4067 () Bool)
(declare-fun x2878 () Bool)
(declare-fun x529 () Int)
(declare-fun x1362 () Int)
(declare-fun x1049 () Int)
(declare-fun x3418 () Int)
(declare-fun x1485 () Int)
(declare-fun x3186 () Bool)
(declare-fun x3448 () Int)
(declare-fun x547 () Bool)
(declare-fun x3188 () x1536)
(declare-fun x4175 () Bool)
(declare-fun x3105 () x1536)
(declare-fun x4270 () Bool)
(declare-fun x4160 () Int)
(declare-fun x4414 () Bool)
(declare-fun x3826 () Bool)
(declare-fun x1851 () Int)
(declare-fun x4841 () Bool)
(declare-fun x813 () Bool)
(declare-fun x339 () Bool)
(declare-fun x1710 () x1536)
(declare-fun x505 () Int)
(declare-fun x115 () Bool)
(declare-fun x3893 () Int)
(declare-fun x299 () Int)
(declare-fun x4480 () Bool)
(declare-fun x3 () Bool)
(declare-fun x21 () Int)
(declare-fun x430 () Int)
(declare-fun x4281 () Int)
(declare-fun x1724 () x1536)
(declare-fun x3209 () Int)
(declare-fun x4393 () Bool)
(declare-fun x3125 () Int)
(declare-fun x481 () Int)
(declare-fun x1741 () Int)
(declare-fun x1229 () Bool)
(declare-fun x2725 () Bool)
(declare-fun x4130 () Bool)
(declare-fun x4082 () Bool)
(declare-fun x3285 () Bool)
(declare-fun x4024 () Bool)
(declare-fun x4485 () x1536)
(declare-fun x295 () x1536)
(declare-fun x1258 () Bool)
(declare-fun x1309 () Int)
(declare-fun x2738 () Int)
(declare-fun x2767 () Int)
(declare-fun x2460 () Int)
(declare-fun x1269 () Bool)
(declare-fun x4 () x1536)
(declare-fun x2554 () Bool)
(declare-fun x2305 () Bool)
(declare-fun x3201 () Bool)
(declare-fun x2646 () Int)
(declare-fun x489 () Bool)
(declare-fun x2982 () x1536)
(declare-fun x2951 () Int)
(declare-fun x3055 () Bool)
(declare-fun x2017 () x1536)
(declare-fun x2732 (Int) Int)
(declare-fun x4776 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x4199 () Int)
(declare-fun x3293 () Int)
(declare-fun x4850 () Int)
(declare-fun x2378 () Int)
(declare-fun x2025 () Bool)
(declare-fun x3156 () Bool)
(declare-fun x91 () Bool)
(declare-fun x4842 () Bool)
(declare-fun x3311 () x1536)
(declare-fun x1509 () Bool)
(declare-fun x4354 () Int)
(declare-fun x2841 () Int)
(declare-fun x2679 (Int) Int)
(declare-fun x1488 () x1536)
(declare-fun x1236 () Int)
(declare-fun x2925 () x1536)
(declare-fun x806 () Int)
(declare-fun x1188 () Bool)
(declare-fun x2940 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x2282 () x1536)
(declare-fun x4568 () Int)
(declare-fun x1416 () Bool)
(declare-fun x4573 () Int)
(declare-fun x2103 () x1536)
(declare-fun x3817 () Int)
(declare-fun x3812 () Bool)
(declare-fun x63 () Int)
(declare-fun x1533 () Bool)
(declare-fun x1928 () Bool)
(declare-fun x1335 () x1536)
(declare-fun x317 () Int)
(declare-fun x379 () Int)
(declare-fun x2464 () Int)
(declare-fun x2600 () Int)
(declare-fun x3191 () Bool)
(declare-fun x4182 () Int)
(declare-fun x4136 () Int)
(declare-fun x4425 () Bool)
(declare-fun x1152 () Int)
(declare-fun x4940 () Int)
(declare-fun x3850 () Bool)
(declare-fun x4402 () Bool)
(declare-fun x1286 () Bool)
(declare-fun x3543 () Bool)
(declare-fun x2171 () Int)
(declare-fun x2541 () Int)
(declare-fun x515 () Bool)
(declare-fun x3851 () Int)
(declare-fun x1688 () Bool)
(declare-fun x3163 () Int)
(declare-fun x2583 () Int)
(declare-fun x650 () x1536)
(declare-fun x1886 () Int)
(declare-fun x1167 () Int)
(declare-fun x4807 () Int)
(declare-fun x3987 () Int)
(declare-fun x592 () Bool)
(declare-fun x4847 () Bool)
(declare-fun x1332 () Bool)
(declare-fun x3020 () x1536)
(declare-fun x4635 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x1419 () Bool)
(declare-fun x4166 () Int)
(declare-fun x4651 () Int)
(declare-fun x3467 () Int)
(declare-fun x172 () Bool)
(declare-fun x4488 () Bool)
(declare-fun x703 () Int)
(declare-fun x3193 () Bool)
(declare-fun x1444 () x1536)
(declare-fun x1658 () Bool)
(declare-fun x710 () Int)
(declare-fun x4808 () Bool)
(declare-fun x853 () Bool)
(declare-fun x2175 () Int)
(declare-fun x2354 () Bool)
(declare-fun x2266 () Int)
(declare-fun x76 () Int)
(declare-fun x1130 () Bool)
(declare-fun x4322 () Bool)
(declare-fun x466 () Bool)
(declare-fun x1410 () Bool)
(declare-fun x363 () Bool)
(declare-fun x171 () Bool)
(declare-fun x4605 () Bool)
(declare-fun x1825 () Bool)
(declare-fun x4155 () Bool)
(declare-fun x3698 () Int)
(declare-fun x89 () Bool)
(declare-fun x943 (Int) Int)
(declare-fun x2231 () Int)
(declare-fun x2253 () Bool)
(declare-fun x1420 () Bool)
(declare-fun x4332 () Bool)
(declare-fun x984 () Bool)
(declare-fun x1654 () Int)
(declare-fun x1820 () Int)
(declare-fun x4238 () Bool)
(declare-fun x1821 () Int)
(declare-fun x4679 () x1536)
(declare-fun x3363 () Int)
(declare-fun x4320 () Int)
(declare-fun x101 () Bool)
(declare-fun x3445 () Bool)
(declare-fun x1423 () x1536)
(declare-fun x414 () Bool)
(declare-fun x883 () Int)
(declare-fun x947 () Int)
(declare-fun x3964 () Int)
(declare-fun x4181 () Bool)
(declare-fun x520 () Int)
(declare-fun x970 () Bool)
(declare-fun x4491 () x1536)
(declare-fun x366 () Bool)
(declare-fun x1151 () Int)
(declare-fun x4456 () Bool)
(declare-fun x2879 () Bool)
(declare-fun x1481 () Bool)
(declare-fun x3373 () x1536)
(declare-fun x4447 () Bool)
(declare-fun x882 () Int)
(declare-fun x3276 () Bool)
(declare-fun x4468 () Bool)
(declare-fun x3605 () x1536)
(declare-fun x2639 () Int)
(declare-fun x975 () Bool)
(declare-fun x1716 () Bool)
(declare-fun x1308 () Bool)
(declare-fun x399 () Int)
(declare-fun x4398 () Int)
(declare-fun x3270 () Int)
(declare-fun x1772 () Bool)
(declare-fun x4441 () Int)
(declare-fun x1404 () Int)
(declare-fun x1278 () Bool)
(declare-fun x2456 () Int)
(declare-fun x2363 () Int)
(declare-fun x974 () Bool)
(declare-fun x3811 () Bool)
(declare-fun x1666 () Int)
(declare-fun x1265 () Bool)
(declare-fun x3084 () Int)
(declare-fun x1612 () Int)
(declare-fun x1768 () Bool)
(declare-fun x2368 () x1536)
(declare-fun x602 () Int)
(declare-fun x10 () Int)
(declare-fun x3080 () Bool)
(declare-fun x4282 () Bool)
(declare-fun x3642 () Int)
(declare-fun x3703 () Int)
(declare-fun x575 () Bool)
(declare-fun x2907 () x1536)
(declare-fun x292 () Int)
(declare-fun x4639 () Int)
(declare-fun x1349 () Bool)
(declare-fun x3329 () Bool)
(declare-fun x1728 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x502 () x1536)
(declare-fun x4543 () Bool)
(declare-fun x3011 () Int)
(declare-fun x3512 () Int)
(declare-fun x1503 () Int)
(declare-fun x1957 () Int)
(declare-fun x828 () x1536)
(declare-fun x3092 () Int)
(declare-fun x837 () x1536)
(declare-fun x2441 () Bool)
(declare-fun x231 () Int)
(declare-fun x3645 () x1536)
(declare-fun x3657 (Int Int) Int)
(declare-fun x2346 () Bool)
(declare-fun x4037 () Bool)
(declare-fun x1788 () Int)
(declare-fun x3676 () Bool)
(declare-fun x4392 () Int)
(declare-fun x1189 () Bool)
(declare-fun x133 () Int)
(declare-fun x2930 () Int)
(declare-fun x256 () x1536)
(declare-fun x3380 () Bool)
(declare-fun x4321 () x1536)
(declare-fun x2280 () Bool)
(declare-fun x3420 () Int)
(declare-fun x346 () Bool)
(declare-fun x1072 () Int)
(declare-fun x360 () Bool)
(declare-fun x898 () Int)
(declare-fun x1133 () Int)
(declare-fun x1668 () Bool)
(declare-fun x2128 () Bool)
(declare-fun x3913 () Bool)
(declare-fun x1885 () Bool)
(declare-fun x1290 () Int)
(declare-fun x2985 () x1536)
(declare-fun x190 () Bool)
(declare-fun x4340 () Bool)
(declare-fun x1899 () Bool)
(declare-fun x4929 () Bool)
(declare-fun x2622 () Int)
(declare-fun x1649 () x1536)
(declare-fun x1762 () Bool)
(declare-fun x4529 () Bool)
(declare-fun x523 () Bool)
(declare-fun x1495 () Bool)
(declare-fun x3634 () Int)
(declare-fun x1207 () x1536)
(declare-fun x776 () Int)
(declare-fun x1926 () Int)
(declare-fun x1543 () Bool)
(declare-fun x1266 () Int)
(declare-fun x3265 () x1536)
(declare-fun x3831 () Int)
(declare-fun x827 () Bool)
(declare-fun x3114 () Int)
(declare-fun x4748 () Bool)
(declare-fun x215 () Int)
(declare-fun x4503 () x1536)
(declare-fun x1283 () Int)
(declare-fun x799 () Int)
(declare-fun x2227 () Int)
(declare-fun x2264 () Bool)
(declare-fun x192 () Bool)
(declare-fun x738 () Bool)
(declare-fun x507 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x673 () Int)
(declare-fun x3124 () Bool)
(declare-fun x525 () x1536)
(declare-fun x2357 () Bool)
(declare-fun x3650 () Bool)
(declare-fun x1473 () Bool)
(declare-fun x1751 () x1536)
(declare-fun x1348 () x1536)
(declare-fun x2681 () Int)
(declare-fun x4528 () Int)
(declare-fun x3921 () Bool)
(declare-fun x3545 () Int)
(declare-fun x3641 () Bool)
(declare-fun x565 () x1536)
(declare-fun x2501 () Bool)
(declare-fun x3099 () Int)
(declare-fun x4944 () Int)
(declare-fun x1966 () Bool)
(declare-fun x3929 () Bool)
(declare-fun x637 () Bool)
(declare-fun x788 () Int)
(declare-fun x3340 () Int)
(declare-fun x1982 () Int)
(declare-fun x4553 () x1536)
(declare-fun x2188 () Bool)
(declare-fun x2625 () Bool)
(declare-fun x4867 () Bool)
(declare-fun x2811 () Int)
(declare-fun x4742 () Bool)
(declare-fun x2449 (Int) Int)
(declare-fun x288 () Bool)
(declare-fun x1448 () Bool)
(declare-fun x3341 () Bool)
(declare-fun x3117 () x1536)
(declare-fun x2970 () Int)
(declare-fun x577 () x1536)
(declare-fun x1585 () Int)
(declare-fun x2594 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x2659 () Bool)
(declare-fun x749 () x1536)
(declare-fun x2851 () Int)
(declare-fun x675 () Int)
(declare-fun x3507 () Bool)
(declare-fun x4803 () Bool)
(declare-fun x4800 () Int)
(declare-fun x800 () Bool)
(declare-fun x1927 () Bool)
(declare-fun x3862 () Bool)
(declare-fun x3656 () Int)
(declare-fun x3255 () Int)
(declare-fun x1425 () Int)
(declare-fun x822 () Int)
(declare-fun x368 () Bool)
(declare-fun x4718 () Bool)
(declare-fun x3395 () Bool)
(declare-fun x1834 () Bool)
(declare-fun x2232 () Bool)
(declare-fun x4369 () x1536)
(declare-fun x2815 () Int)
(declare-fun x3062 () Bool)
(declare-fun x2035 () Bool)
(declare-fun x349 (Int) Int)
(declare-fun x4622 () Int)
(declare-fun x4376 () Bool)
(declare-fun x736 () Bool)
(declare-fun x3089 () Int)
(declare-fun x2618 () Bool)
(declare-fun x4345 () Int)
(declare-fun x2676 () Bool)
(declare-fun x3429 () Bool)
(declare-fun x4003 () Bool)
(declare-fun x1301 () Int)
(declare-fun x3580 () Int)
(declare-fun x3738 () Int)
(declare-fun x2993 () Int)
(declare-fun x297 () Int)
(declare-fun x3781 () x1536)
(declare-fun x3736 () x1536)
(declare-fun x3511 () Int)
(declare-fun x4216 () x1536)
(declare-fun x2379 () Bool)
(declare-fun x2205 () Bool)
(declare-fun x4139 () Int)
(declare-fun x2427 () Bool)
(declare-fun x3376 () Bool)
(declare-fun x4220 () Int)
(declare-fun x455 () Int)
(declare-fun x2572 () Bool)
(declare-fun x983 () Bool)
(declare-fun x3881 () Int)
(declare-fun x4108 () Int)
(declare-fun x582 () Bool)
(declare-fun x2929 () Bool)
(declare-fun x4362 () Bool)
(declare-fun x3204 () Bool)
(declare-fun x1190 () Int)
(declare-fun x3377 () Bool)
(declare-fun x2100 () x1536)
(declare-fun x522 () Bool)
(declare-fun x4554 () Int)
(declare-fun x4715 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x2085 () Int)
(declare-fun x3951 () Int)
(declare-fun x413 () Bool)
(declare-fun x2465 () Int)
(declare-fun x4254 () Bool)
(declare-fun x2997 () Int)
(declare-fun x4866 () Int)
(declare-fun x590 (Int) Int)
(declare-fun x175 () Int)
(declare-fun x3359 () Bool)
(declare-fun x3480 () Int)
(declare-fun x3008 () Bool)
(declare-fun x3488 () Int)
(declare-fun x1687 () Bool)
(declare-fun x4598 () Bool)
(declare-fun x3724 () Int)
(declare-fun x2323 () Int)
(declare-fun x4887 () Int)
(declare-fun x4347 () Bool)
(declare-fun x3436 () Bool)
(declare-fun x4778 () Int)
(declare-fun x2038 (x1536) Int)
(declare-fun x3227 () Int)
(declare-fun x2074 () Int)
(declare-fun x2295 () Int)
(declare-fun x106 () Int)
(declare-fun x39 () Int)
(declare-fun x2082 () x1536)
(declare-fun x3873 () Bool)
(declare-fun x1984 () Bool)
(declare-fun x1863 () Bool)
(declare-fun x2160 () Int)
(declare-fun x2586 () Int)
(declare-fun x161 () Bool)
(declare-fun x4286 () Bool)
(declare-fun x3808 (x1536) Int)
(declare-fun x712 () Int)
(declare-fun x1889 () Int)
(declare-fun x2771 () Int)
(declare-fun x4677 () Bool)
(declare-fun x388 () Int)
(declare-fun x1537 () Bool)
(declare-fun x1757 () Bool)
(declare-fun x2040 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x847 () Int)
(declare-fun x424 () x1536)
(declare-fun x2913 () Int)
(declare-fun x3302 () Int)
(declare-fun x1552 () Bool)
(declare-fun x3159 () Int)
(declare-fun x1964 () Int)
(declare-fun x2959 () Bool)
(declare-fun x1424 () Int)
(declare-fun x2864 () Int)
(declare-fun x707 () Int)
(declare-fun x2608 () Int)
(declare-fun x4888 () Bool)
(declare-fun x2741 () Bool)
(declare-fun x4269 () Bool)
(declare-fun x3086 () Bool)
(declare-fun x4176 () Bool)
(declare-fun x2606 () Int)
(declare-fun x980 () Bool)
(declare-fun x578 () Int)
(declare-fun x1268 () Bool)
(declare-fun x4042 () Int)
(declare-fun x4395 () Bool)
(declare-fun x4091 () x1536)
(declare-fun x1941 () Int)
(declare-fun x2652 () Bool)
(declare-fun x258 () Int)
(declare-fun x4450 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x4890 () Bool)
(declare-fun x1357 () Bool)
(declare-fun x4225 () Bool)
(declare-fun x4080 () Bool)
(declare-fun x3056 () Int)
(declare-fun x323 () Int)
(declare-fun x500 () Int)
(declare-fun x213 () Bool)
(declare-fun x1110 () Bool)
(declare-fun x4555 () Int)
(declare-fun x126 () Bool)
(declare-fun x4921 () Int)
(declare-fun x4589 () Bool)
(declare-fun x2395 () Bool)
(declare-fun x766 () x1536)
(declare-fun x2723 () Bool)
(declare-fun x949 () Bool)
(declare-fun x2962 () Int)
(declare-fun x4530 () Int)
(declare-fun x3915 () Int)
(declare-fun x4678 () Int)
(declare-fun x4484 () Bool)
(declare-fun x3033 () Bool)
(declare-fun x3704 () Bool)
(declare-fun x2061 (x1536) Int)
(declare-fun x3121 () Int)
(declare-fun x1662 () x1536)
(declare-fun x4815 () Int)
(declare-fun x2683 () Int)
(declare-fun x2976 () x1536)
(declare-fun x3258 () Bool)
(declare-fun x2543 () Int)
(declare-fun x3564 () x1536)
(declare-fun x4056 () Bool)
(declare-fun x3252 () Bool)
(declare-fun x722 () x1536)
(declare-fun x2064 () Bool)
(declare-fun x3440 () Int)
(declare-fun x4163 () Bool)
(declare-fun x1523 () Int)
(declare-fun x4660 () Bool)
(declare-fun x487 () Int)
(declare-fun x3669 () x1536)
(declare-fun x1992 () x1536)
(declare-fun x2483 () Bool)
(declare-fun x1113 () Bool)
(declare-fun x2380 () Bool)
(declare-fun x4316 (Int) Int)
(declare-fun x3683 () Int)
(declare-fun x1407 () Int)
(declare-fun x108 () Bool)
(declare-fun x1104 () Int)
(declare-fun x4148 () Int)
(declare-fun x1498 () x1536)
(declare-fun x4318 () Bool)
(declare-fun x1142 () Int)
(declare-fun x1241 () Int)
(declare-fun x4344 () Int)
(declare-fun x4215 () Bool)
(declare-fun x4958 () x1536)
(declare-fun x1931 () Bool)
(declare-fun x2112 () x1536)
(declare-fun x3417 () Bool)
(declare-fun x3106 () Int)
(declare-fun x4235 () Int)
(declare-fun x1024 () Bool)
(declare-fun x79 () Bool)
(declare-fun x856 () Bool)
(declare-fun x4187 () x1536)
(declare-fun x1339 () Int)
(declare-fun x397 () x1536)
(declare-fun x740 () x1536)
(declare-fun x457 () Int)
(declare-fun x2311 () Int)
(declare-fun x3379 () Int)
(declare-fun x2912 (x1536) Int)
(declare-fun x774 () Int)
(declare-fun x1959 () Bool)
(declare-fun x717 () Int)
(declare-fun x4005 () x1536)
(declare-fun x4391 () Int)
(declare-fun x2139 () Bool)
(declare-fun x3481 (Int) Int)
(declare-fun x2685 () Bool)
(declare-fun x4338 () Int)
(declare-fun x166 () x1536)
(declare-fun x4661 () Bool)
(declare-fun x2557 () Bool)
(declare-fun x1136 () Bool)
(declare-fun x27 () Bool)
(declare-fun x3958 () Int)
(declare-fun x2551 () Bool)
(declare-fun x3639 () x1536)
(declare-fun x2486 () Bool)
(declare-fun x151 () Bool)
(declare-fun x3416 () Bool)
(declare-fun x2293 () Bool)
(declare-fun x734 () Int)
(declare-fun x140 () Int)
(declare-fun x741 () Int)
(declare-fun x80 () Bool)
(declare-fun x1206 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x4243 () Int)
(declare-fun x1539 () Int)
(declare-fun x3968 () Bool)
(declare-fun x1640 () Bool)
(declare-fun x1406 () Int)
(declare-fun x4266 () Bool)
(declare-fun x2961 () Bool)
(declare-fun x1563 () Bool)
(declare-fun x2031 () Bool)
(declare-fun x252 () Bool)
(declare-fun x704 () Int)
(declare-fun x986 () x1536)
(declare-fun x3402 () x1536)
(declare-fun x4337 (Int) Int)
(declare-fun x821 () Bool)
(declare-fun x4728 () Bool)
(declare-fun x4152 () Bool)
(declare-fun x2269 () x1536)
(declare-fun x2421 () Bool)
(declare-fun x3740 () Bool)
(declare-fun x746 () Bool)
(declare-fun x124 () Int)
(declare-fun x1214 () Bool)
(declare-fun x2478 (x1536) Int)
(declare-fun x3809 () Int)
(declare-fun x4683 () Int)
(declare-fun x3735 () Int)
(declare-fun x4341 () Bool)
(declare-fun x3777 () Int)
(declare-fun x450 () Int)
(declare-fun x4319 () Int)
(declare-fun x1839 () Bool)
(declare-fun x780 () Bool)
(declare-fun x127 () Bool)
(declare-fun x543 () Bool)
(declare-fun x3501 () Bool)
(declare-fun x2803 () Bool)
(declare-fun x4168 () Bool)
(declare-fun x254 () Int)
(declare-fun x3836 () Int)
(declare-fun x1955 () Bool)
(declare-fun x607 () Bool)
(declare-fun x3009 () Bool)
(declare-fun x1475 () Bool)
(declare-fun x694 () Int)
(declare-fun x1327 () Int)
(declare-fun x1794 () Bool)
(declare-fun x1150 () Bool)
(declare-fun x761 () Bool)
(declare-fun x2994 () Bool)
(declare-fun x3230 () Int)
(declare-fun x3326 () Int)
(declare-fun x1231 () Bool)
(declare-fun x587 () Bool)
(declare-fun x3759 () Bool)
(declare-fun x2518 () Int)
(declare-fun x3385 () Int)
(declare-fun x2838 () Int)
(declare-fun x2528 () Bool)
(declare-fun x4279 () Bool)
(declare-fun x3280 () Int)
(declare-fun x1678 () Bool)
(declare-fun x4499 () Bool)
(declare-fun x3016 () Bool)
(declare-fun x1029 () Int)
(declare-fun x4432 () Bool)
(declare-fun x61 () Int)
(declare-fun x3691 () Int)
(declare-fun x808 () Int)
(declare-fun x445 () Bool)
(declare-fun x4388 () Bool)
(declare-fun x1998 () Bool)
(declare-fun x4650 () Int)
(declare-fun x4033 () Int)
(declare-fun x3855 () Bool)
(declare-fun x2006 () Bool)
(declare-fun x563 () Int)
(declare-fun x4838 () Int)
(declare-fun x4157 () Int)
(declare-fun x4675 () Bool)
(declare-fun x482 () Bool)
(declare-fun x1248 () Bool)
(declare-fun x1801 (x1536) Int)
(declare-fun x2914 () Int)
(declare-fun x3944 () Bool)
(declare-fun x3497 () Int)
(declare-fun x512 () x1536)
(declare-fun x2593 () Int)
(declare-fun x1219 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x3050 () Bool)
(declare-fun x4194 () Int)
(declare-fun x2835 () Bool)
(declare-fun x1787 (x1536) Int)
(declare-fun x4448 () Bool)
(declare-fun x3973 () Int)
(declare-fun x3579 () Bool)
(declare-fun x629 () Int)
(declare-fun x3547 () Int)
(declare-fun x3603 () Bool)
(declare-fun x4560 () Int)
(declare-fun x1604 () Bool)
(declare-fun x2416 () Bool)
(declare-fun x638 () Bool)
(declare-fun x1169 () Bool)
(declare-fun x2785 () x1536)
(declare-fun x4558 () Int)
(declare-fun x1126 () Bool)
(declare-fun x1929 () x1536)
(declare-fun x4942 () Int)
(declare-fun x81 () Int)
(declare-fun x1691 () Int)
(declare-fun x954 () x1536)
(declare-fun x4891 () Int)
(declare-fun x4858 () Bool)
(declare-fun x3100 () Int)
(declare-fun x2688 () Int)
(declare-fun x105 () Bool)
(declare-fun x4546 () Int)
(declare-fun x2918 () Int)
(declare-fun x4779 () Bool)
(declare-fun x1891 () Bool)
(declare-fun x4548 () Int)
(declare-fun x54 () Bool)
(declare-fun x2943 () Bool)
(declare-fun x385 (Int) Int)
(declare-fun x839 () Bool)
(declare-fun x987 () Int)
(declare-fun x1004 () x1536)
(declare-fun x2057 () Bool)
(declare-fun x4486 () Int)
(declare-fun x2405 () x1536)
(declare-fun x2527 () Int)
(declare-fun x1250 () Bool)
(declare-fun x1148 () Int)
(declare-fun x3907 () Bool)
(declare-fun x2475 () Int)
(declare-fun x2857 () Int)
(declare-fun x4189 () Int)
(declare-fun x825 () Int)
(declare-fun x2022 (Int Int) Int)
(declare-fun x434 () Int)
(declare-fun x818 () Bool)
(declare-fun x1718 () Bool)
(declare-fun x526 () Int)
(declare-fun x1107 () Bool)
(declare-fun x1674 () Bool)
(declare-fun x1812 () Int)
(declare-fun x2206 () Int)
(declare-fun x3237 () Int)
(declare-fun x4743 () Bool)
(declare-fun x3722 () Bool)
(declare-fun x598 () Bool)
(declare-fun x4260 () Int)
(declare-fun x2952 () Bool)
(declare-fun x1387 () Int)
(declare-fun x2494 () Int)
(declare-fun x404 () Int)
(declare-fun x2751 () Int)
(declare-fun x4378 () Int)
(declare-fun x997 () Bool)
(declare-fun x4434 () Int)
(declare-fun x4490 () Int)
(declare-fun x1209 () Bool)
(declare-fun x2312 () Bool)
(declare-fun x1562 () Int)
(declare-fun x1500 () Bool)
(declare-fun x3030 () Bool)
(declare-fun x2422 () Bool)
(declare-fun x4400 () Bool)
(declare-fun x372 () Bool)
(declare-fun x870 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x4680 () x1536)
(declare-fun x2974 () x1536)
(declare-fun x3406 () Int)
(declare-fun x4786 () x1536)
(declare-fun x4116 () Int)
(declare-fun x3577 () Bool)
(declare-fun x4965 () Int)
(declare-fun x862 () Bool)
(declare-fun x918 () Int)
(declare-fun x4012 () Bool)
(declare-fun x4190 () Int)
(declare-fun x3887 () x1536)
(declare-fun x557 () Bool)
(declare-fun x66 () Int)
(declare-fun x3625 () Bool)
(declare-fun x931 () Int)
(declare-fun x56 () x1536)
(declare-fun x503 () Int)
(declare-fun x1051 () Int)
(declare-fun x2479 () Bool)
(declare-fun x2392 () Bool)
(declare-fun x2649 () Int)
(declare-fun x43 () Int)
(declare-fun x846 () Bool)
(declare-fun x2886 () Int)
(declare-fun x4097 () Bool)
(declare-fun x4727 () Int)
(declare-fun x920 () x1536)
(declare-fun x2143 () Bool)
(declare-fun x3372 () Bool)
(declare-fun x2436 () Int)
(declare-fun x663 () Int)
(declare-fun x55 () Int)
(declare-fun x176 () Bool)
(declare-fun x1547 () Int)
(declare-fun x230 () Int)
(declare-fun x2854 () Bool)
(declare-fun x4688 () Bool)
(declare-fun x3576 () Bool)
(declare-fun x810 () Int)
(declare-fun x3654 () Int)
(declare-fun x2636 () Bool)
(declare-fun x2419 () Int)
(declare-fun x4200 () x1536)
(declare-fun x228 () Bool)
(declare-fun x1479 () Int)
(declare-fun x3586 () Int)
(declare-fun x448 () Bool)
(declare-fun x2023 () Int)
(declare-fun x4022 () Int)
(declare-fun x4360 () Bool)
(declare-fun x3431 () x1536)
(declare-fun x107 () x1536)
(declare-fun x4253 () Bool)
(declare-fun x3408 () Int)
(declare-fun x3383 () Bool)
(declare-fun x4222 () Bool)
(declare-fun x1001 () Bool)
(declare-fun x3594 () Bool)
(declare-fun x342 () Int)
(declare-fun x3647 () Bool)
(declare-fun x4806 () Int)
(declare-fun x2597 () Bool)
(declare-fun x1378 () Int)
(declare-fun x3318 () Int)
(declare-fun x2181 () Bool)
(declare-fun x4795 () Int)
(declare-fun x4159 () Bool)
(declare-fun x2401 () Int)
(declare-fun x1524 () Bool)
(declare-fun x4409 () x1536)
(declare-fun x4876 () Int)
(declare-fun x2071 () Bool)
(declare-fun x2934 () Int)
(declare-fun x86 () Int)
(declare-fun x4649 () Int)
(declare-fun x4797 () Bool)
(declare-fun x2029 () Int)
(declare-fun x2874 () Bool)
(declare-fun x4465 () Bool)
(declare-fun x814 () x1536)
(declare-fun x3210 () Bool)
(declare-fun x312 () Int)
(declare-fun x1807 (Int Int) Int)
(declare-fun x474 () Int)
(declare-fun x2459 () Bool)
(declare-fun x4874 () Int)
(declare-fun x763 () Bool)
(declare-fun x3518 () Bool)
(declare-fun x4268 () Bool)
(declare-fun x4613 () Int)
(declare-fun x3818 () Int)
(declare-fun x2196 () Int)
(declare-fun x306 () Bool)
(declare-fun x1784 () Bool)
(declare-fun x1976 () Bool)
(declare-fun x2612 () Bool)
(declare-fun x4871 () Bool)
(declare-fun x4469 () Int)
(declare-fun x163 () Int)
(declare-fun x758 () Bool)
(declare-fun x51 () Int)
(declare-fun x2842 () Int)
(declare-fun x2068 () x1536)
(declare-fun x4606 () Bool)
(declare-fun x939 () x1536)
(declare-fun x2754 () Int)
(declare-fun x4396 () Int)
(declare-fun x2792 () Int)
(declare-fun x1672 () Int)
(declare-fun x3006 () Int)
(declare-fun x3282 () Bool)
(declare-fun x2611 () Int)
(declare-fun x34 () Int)
(declare-fun x3866 () Int)
(declare-fun x3685 () Int)
(declare-fun x2411 () Bool)
(declare-fun x2706 () Int)
(declare-fun x702 () Int)
(declare-fun x185 () Int)
(declare-fun x3927 () Bool)
(declare-fun x309 (x1536) Int)
(declare-fun x2861 () Bool)
(declare-fun x1775 () Bool)
(declare-fun x3249 () Int)
(declare-fun x2193 () Int)
(declare-fun x3382 () Int)
(declare-fun x1365 () x1536)
(declare-fun x3729 () Bool)
(declare-fun x817 () Bool)
(declare-fun x3534 () Bool)
(declare-fun x2476 () Int)
(declare-fun x3247 () Int)
(declare-fun x3499 () Bool)
(declare-fun x1835 () Int)
(declare-fun x2973 () x1536)
(declare-fun x4349 () Bool)
(declare-fun x647 () Bool)
(declare-fun x41 () Int)
(declare-fun x586 () Int)
(declare-fun x2648 () Int)
(declare-fun x3679 (x1536) Int)
(declare-fun x787 () Int)
(declare-fun x473 () Int)
(declare-fun x1895 () Int)
(declare-fun x1770 () Int)
(declare-fun x4430 () Int)
(declare-fun x3242 () Bool)
(declare-fun x4021 () Int)
(declare-fun x417 (Int) Int)
(declare-fun x2917 () Bool)
(declare-fun x276 () Bool)
(declare-fun x3786 () Int)
(declare-fun x2524 () Bool)
(declare-fun x2637 () Int)
(declare-fun x2126 () x1536)
(declare-fun x3924 () Bool)
(declare-fun x365 () Int)
(declare-fun x476 () x1536)
(declare-fun x2599 () Bool)
(declare-fun x3585 () Bool)
(declare-fun x2390 () Int)
(declare-fun x3145 () Bool)
(declare-fun x2702 () Int)
(declare-fun x1514 () Bool)
(declare-fun x1108 () Bool)
(declare-fun x4111 () Bool)
(declare-fun x3284 () Bool)
(declare-fun x32 () Int)
(declare-fun x639 () Int)
(declare-fun x1930 () Bool)
(declare-fun x2613 () Int)
(declare-fun x2596 () Bool)
(declare-fun x1256 () Int)
(declare-fun x386 () Int)
(declare-fun x1591 () Bool)
(declare-fun x2999 () Int)
(declare-fun x3652 () Int)
(declare-fun x2470 () Bool)
(declare-fun x2338 () Bool)
(declare-fun x4324 () Bool)
(declare-fun x3390 () Int)
(declare-fun x1948 () Int)
(declare-fun x2122 () x1536)
(declare-fun x1401 () Int)
(declare-fun x73 () Bool)
(declare-fun x1596 () Int)
(declare-fun x420 () Bool)
(declare-fun x247 () x1536)
(declare-fun x1837 () Bool)
(declare-fun x226 () Bool)
(declare-fun x3134 () Int)
(declare-fun x1791 () Int)
(declare-fun x2820 () Bool)
(declare-fun x617 () Bool)
(declare-fun x3171 () Int)
(declare-fun x1995 () Int)
(declare-fun x122 () Bool)
(declare-fun x1125 () Int)
(declare-fun x4784 () Int)
(declare-fun x4540 () Int)
(declare-fun x850 () Bool)
(declare-fun x4861 () Bool)
(declare-fun x1403 () Int)
(declare-fun x4947 () Int)
(declare-fun x1238 () Int)
(declare-fun x658 () Int)
(declare-fun x4399 () Int)
(declare-fun x4035 () x1536)
(declare-fun x3152 () Bool)
(declare-fun x2273 () Bool)
(declare-fun x1913 () Bool)
(declare-fun x2149 () Bool)
(declare-fun x990 () Int)
(declare-fun x1790 () Int)
(declare-fun x3697 () Int)
(declare-fun x237 () Int)
(declare-fun x1134 () Int)
(declare-fun x979 () Bool)
(declare-fun x3723 () Int)
(declare-fun x3500 () Int)
(declare-fun x2870 () Bool)
(declare-fun x147 () Bool)
(declare-fun x2131 () Bool)
(declare-fun x2117 () Int)
(declare-fun x531 () Bool)
(declare-fun x423 () Bool)
(declare-fun x1947 () Bool)
(declare-fun x1192 () Int)
(declare-fun x4117 (Int) Int)
(declare-fun x2052 () Bool)
(declare-fun x398 () Bool)
(declare-fun x1496 () Int)
(declare-fun x3970 () Int)
(declare-fun x3806 () Int)
(declare-fun x857 () Int)
(declare-fun x1756 () Int)
(declare-fun x2700 () Bool)
(declare-fun x3996 () Int)
(declare-fun x1884 () Bool)
(declare-fun x1655 () Int)
(declare-fun x1007 () Bool)
(declare-fun x3939 () Int)
(declare-fun x616 () Bool)
(declare-fun x4875 () Bool)
(declare-fun x1234 () Bool)
(declare-fun x3661 () Int)
(declare-fun x3525 () x1536)
(declare-fun x2760 () Int)
(declare-fun x4327 () Bool)
(declare-fun x4057 () Bool)
(declare-fun x812 () Int)
(declare-fun x1216 () Int)
(declare-fun x1519 () Bool)
(declare-fun x1070 () Int)
(declare-fun x2062 () x1536)
(declare-fun x3034 () Int)
(declare-fun x3234 () Int)
(declare-fun x1624 () Bool)
(declare-fun x1744 () Int)
(declare-fun x2718 () Int)
(declare-fun x2348 () Bool)
(declare-fun x2796 () Int)
(declare-fun x2812 () Int)
(declare-fun x4370 () Bool)
(declare-fun x3471 () Bool)
(declare-fun x222 () Bool)
(declare-fun x82 () Bool)
(declare-fun x886 () Int)
(declare-fun x1299 () Bool)
(declare-fun x456 () Int)
(declare-fun x2900 () Bool)
(declare-fun x2265 () Int)
(declare-fun x4277 () Bool)
(declare-fun x3940 () Bool)
(declare-fun x4514 () x1536)
(declare-fun x3762 () Bool)
(declare-fun x4342 () Bool)
(declare-fun x2119 () Int)
(declare-fun x4164 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x2703 () Bool)
(declare-fun x4712 () Bool)
(declare-fun x195 () Int)
(declare-fun x375 () Int)
(declare-fun x2545 () Int)
(declare-fun x682 () x1536)
(declare-fun x381 () Bool)
(declare-fun x2152 () Int)
(declare-fun x2981 (x1536) Int)
(declare-fun x1201 () Bool)
(declare-fun x3568 () Int)
(declare-fun x1472 () Bool)
(declare-fun x2858 () Bool)
(declare-fun x1680 () Int)
(declare-fun x2284 () Bool)
(declare-fun x4439 (Int) Int)
(declare-fun x1222 () Bool)
(declare-fun x3387 () Bool)
(declare-fun x257 () Int)
(declare-fun x2818 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x1520 () Int)
(declare-fun x2009 () Bool)
(declare-fun x3098 () Int)
(declare-fun x3236 () Bool)
(declare-fun x2598 () Bool)
(declare-fun x2216 () Bool)
(declare-fun x2095 () Int)
(declare-fun x1916 () Int)
(declare-fun x3828 () Int)
(declare-fun x4149 () Int)
(declare-fun x2039 () Bool)
(declare-fun x2473 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x2204 () Bool)
(declare-fun x3954 () Int)
(declare-fun x2514 () Bool)
(declare-fun x427 () x1536)
(declare-fun x3899 () Int)
(declare-fun x351 () Int)
(declare-fun x199 () Bool)
(declare-fun x4531 () Bool)
(declare-fun x3459 () Int)
(declare-fun x2120 () Int)
(declare-fun x4285 () Bool)
(declare-fun x370 () Int)
(declare-fun x2110 () Int)
(declare-fun x3298 () Bool)
(declare-fun x609 () Bool)
(declare-fun x67 () Int)
(declare-fun x4666 () Bool)
(declare-fun x3592 () Int)
(declare-fun x4516 () Int)
(declare-fun x634 () Int)
(declare-fun x2016 () Int)
(declare-fun x623 () Bool)
(declare-fun x4467 () Bool)
(declare-fun x1466 () x1536)
(declare-fun x3263 () Bool)
(declare-fun x1559 () Int)
(declare-fun x219 () Int)
(declare-fun x3231 () Bool)
(declare-fun x3821 () Bool)
(declare-fun x1714 () Bool)
(declare-fun x1583 () Int)
(declare-fun x4596 () Int)
(declare-fun x3180 () x1536)
(declare-fun x3305 () x1536)
(declare-fun x3858 () Bool)
(declare-fun x2145 () Bool)
(declare-fun x1550 () x1536)
(declare-fun x2533 () Bool)
(declare-fun x967 () Int)
(declare-fun x3948 () Bool)
(declare-fun x1864 () Bool)
(declare-fun x4103 () Int)
(declare-fun x2176 () Int)
(declare-fun x2133 () Int)
(declare-fun x4330 () Int)
(declare-fun x2238 () Int)
(declare-fun x4717 () Bool)
(declare-fun x2469 () Bool)
(declare-fun x963 () Int)
(declare-fun x2477 () Bool)
(declare-fun x611 () Int)
(declare-fun x1961 () Bool)
(declare-fun x1817 () x1536)
(declare-fun x4150 () Bool)
(declare-fun x4895 () Int)
(declare-fun x591 () x1536)
(declare-fun x4495 () Bool)
(declare-fun x1555 () Bool)
(declare-fun x3932 () Bool)
(declare-fun x234 () Bool)
(declare-fun x1951 () Int)
(declare-fun x1340 () x1536)
(declare-fun x1331 () Bool)
(declare-fun x3888 () Int)
(declare-fun x2329 () Int)
(declare-fun x2832 () Int)
(declare-fun x3332 () Bool)
(declare-fun x2701 () Int)
(declare-fun x3434 () x1536)
(declare-fun x37 () Int)
(declare-fun x3139 () x1536)
(declare-fun x4121 () Bool)
(declare-fun x4549 () Int)
(declare-fun x2696 () Bool)
(declare-fun x4777 () Int)
(declare-fun x2547 () Int)
(declare-fun x337 () Bool)
(declare-fun x3037 () Int)
(declare-fun x872 () Bool)
(declare-fun x1705 () Int)
(declare-fun x516 (Int Int) Int)
(declare-fun x2268 () Int)
(declare-fun x44 () Bool)
(declare-fun x4766 () Bool)
(declare-fun x1730 () Bool)
(declare-fun x4428 () Int)
(declare-fun x718 () Bool)
(declare-fun x721 () Int)
(declare-fun x652 () Bool)
(declare-fun x1263 () x1536)
(declare-fun x2255 () Bool)
(declare-fun x3882 () Int)
(declare-fun x2579 () Int)
(declare-fun x4423 () Int)
(declare-fun x4302 () Bool)
(declare-fun x169 () Int)
(declare-fun x4442 () Bool)
(declare-fun x4438 () Int)
(declare-fun x1987 () x1536)
(declare-fun x343 () x1536)
(declare-fun x4386 () Int)
(declare-fun x2634 () Bool)
(declare-fun x4203 () Int)
(declare-fun x1778 () Bool)
(declare-fun x3991 () Int)
(declare-fun x4811 () Int)
(declare-fun x174 () Bool)
(declare-fun x3690 () Int)
(declare-fun x4128 () Bool)
(declare-fun x3240 () Bool)
(declare-fun x2806 () Int)
(declare-fun x3699 () Int)
(declare-fun x4708 () Int)
(declare-fun x3023 () Bool)
(declare-fun x453 () Bool)
(declare-fun x4307 () Bool)
(declare-fun x4783 () Bool)
(declare-fun x1694 () Bool)
(declare-fun x4404 () Bool)
(declare-fun x184 () Int)
(declare-fun x4837 () Int)
(declare-fun x2980 () Int)
(declare-fun x1346 () Int)
(declare-fun x3979 () Int)
(declare-fun x4427 () Bool)
(declare-fun x2759 () Int)
(declare-fun x3295 () Bool)
(declare-fun x3337 () Int)
(declare-fun x1857 () x1536)
(declare-fun x4713 (Int) Int)
(declare-fun x3784 () Int)
(declare-fun x4156 (x1536) Int)
(declare-fun x2452 () Bool)
(declare-fun x4757 (x1536) Int)
(declare-fun x4472 () Int)
(declare-fun x2814 () Bool)
(declare-fun x636 () Int)
(declare-fun x2748 () Bool)
(declare-fun x731 () Bool)
(declare-fun x3042 () Bool)
(declare-fun x418 () Int)
(declare-fun x545 () x1536)
(declare-fun x1677 () Bool)
(declare-fun x1224 () Int)
(declare-fun x1859 () Bool)
(declare-fun x2610 () Bool)
(declare-fun x330 () Int)
(declare-fun x2753 () x1536)
(declare-fun x3860 () Bool)
(declare-fun x555 () Bool)
(declare-fun x4586 () Bool)
(declare-fun x1233 () Bool)
(declare-fun x940 () Int)
(declare-fun x3872 () Int)
(declare-fun x908 () Bool)
(declare-fun x2203 () Int)
(declare-fun x4703 () Bool)
(declare-fun x2789 () x1536)
(declare-fun x3339 () Bool)
(declare-fun x3108 () Bool)
(declare-fun x934 () Bool)
(declare-fun x1627 () Bool)
(declare-fun x1888 () Int)
(declare-fun x2063 () Bool)
(declare-fun x3344 () Bool)
(declare-fun x3182 () Int)
(declare-fun x4191 () Bool)
(declare-fun x4676 () x1536)
(declare-fun x4882 () Bool)
(declare-fun x3551 () Bool)
(declare-fun x69 () Int)
(declare-fun x1016 () Int)
(declare-fun x1380 () x1536)
(declare-fun x3223 () Int)
(declare-fun x1232 () Bool)
(declare-fun x3668 () Int)
(declare-fun x4859 () Bool)
(declare-fun x1287 () Int)
(declare-fun x2429 () Bool)
(declare-fun x4914 (x1536) Int)
(declare-fun x3000 () Bool)
(declare-fun x3485 () Bool)
(declare-fun x2786 () Bool)
(declare-fun x1599 () Int)
(declare-fun x2350 () Int)
(declare-fun x2769 () Int)
(declare-fun x3192 () x1536)
(declare-fun x3621 () Int)
(declare-fun x1338 () Int)
(define-fun x1008 ((x1536 x1536) (x994 Int)) x1536 (ite ((_ is x4923) x1536) (x4923 (x3771 x1536) (+ (x4588 x1536) x994)) (ite ((_ is x4810) x1536) (x4810 (x739 x1536) (x3168 x1536) (+ x994 (x4256 x1536))) (x1116 (+ x994 (x2726 x1536))))))
(define-fun x2066 ((x4880 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4880) (<= 0 x4880)) x4880 (- x4880 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x672 ((x4880 Int)) Int (ite (and (> 0 x4880) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4880)) (+ x4880 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4880))
(define-fun x1421 ((x4880 Int)) Int (ite (and (<= 0 x4880) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4880)) x4880 (ite (and (< x4880 231584178474632390847141970017375815706539969331281128078915168015826259279872) (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4880)) (- x4880 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (< x4880 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4880)) (+ x4880 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3657 x4880 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x4620 ((x3892 Int)) Bool (and (>= x3892 0) (< x3892 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1389 ((x3892 Int)) Bool (and (= (x2022 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3892) x3892) (= (x2022 x3892 115792089237316195423570985008687907853269984665640564039457584007913129639935) x3892)))
(define-fun x3411 ((x3892 Int)) Bool (and (= 0 (x2022 0 x3892)) (= (x2022 x3892 0) 0)))
(define-fun x1712 ((x3892 Int)) Bool (= x3892 (x2022 x3892 x3892)))
(define-fun x3867 ((x3892 Int)) Bool (and (x3411 x3892) (x1712 x3892) (x1389 x3892)))
(define-fun x2605 ((x3892 Int) (x834 Int)) Bool (= (x2022 x3892 x834) (x2022 x834 x3892)))
(define-fun x1085 ((x3892 Int) (x834 Int)) Bool (and (=> (>= x3892 0) (>= x3892 (x2022 x3892 x834))) (<= 0 (x2022 x3892 x834)) (=> (>= x834 0) (>= x834 (x2022 x3892 x834)))))
(define-fun x431 ((x3892 Int) (x834 Int)) Bool (and (x2605 x3892 x834) (x1085 x3892 x834)))
(define-fun x162 ((x3892 Int)) Bool (= (x2022 x3892 26959946667150639794667015087019630673637144422540572481103610249215) (x3657 x3892 26959946667150639794667015087019630673637144422540572481103610249216)))
(define-fun x444 ((x3892 Int)) Bool (and (x431 x3892 26959946667150639794667015087019630673637144422540572481103610249215) (x162 x3892)))
(define-fun x588 ((x3892 Int) (x834 Int)) Bool (and (> x834 (x3657 x3892 x834)) (>= (x3657 x3892 x834) 0)))
(define-fun x4906 ((x3892 Int) (x834 Int)) Bool (=> (and (<= 0 x3892) (< 0 x834)) (= (< x3892 x834) (= (x3657 x3892 x834) x3892))))
(define-fun x1645 ((x3892 Int) (x834 Int)) Bool (=> (and (> x834 0) (and (<= x834 x3892) (> (+ x834 x834) x3892))) (= (x3657 x3892 x834) (- x3892 x834))))
(define-fun x1991 ((x3892 Int)) Bool (= 0 (x3657 0 x3892)))
(define-fun x2749 ((x3892 Int)) Bool (= 0 (x3657 x3892 1)))
(define-fun x864 ((x3892 Int)) Bool (= (x3657 x3892 x3892) 0))
(define-fun x3601 ((x3892 Int)) Bool (and (x864 x3892) (x1991 x3892) (x2749 x3892)))
(define-fun x724 ((x3892 Int)) Bool (= (x3657 x3892 1461501637330902918203684832716283019655932542976) (x2022 x3892 1461501637330902918203684832716283019655932542975)))
(define-fun x3063 ((x3892 Int)) Bool (and (x724 x3892) (x431 x3892 1461501637330902918203684832716283019655932542975)))
(define-fun x1213 ((x3892 Int) (x834 Int)) Bool (=> (and (> x834 0) (> x3892 0)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1807 x3892 x834)) (= (x2656 (x1421 (x1807 x3892 x834)) x3892) x834))))
(define-fun x2296 ((x3892 Int) (x834 Int)) Bool (=> (and (not (= x3892 0)) (not (= x834 0))) (and (= x3892 (x2656 (x1807 x3892 x834) x834)) (= (x2656 (x1807 x3892 x834) x3892) x834))))
(define-fun x4064 ((x3892 Int) (x834 Int)) Bool (=> (and (> x3892 0) (> x834 0)) (= (< (x2656 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3892) x834) (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1807 x3892 x834)))))
(define-fun x3684 ((x3892 Int) (x834 Int)) Bool (and (= (x1421 (x1807 x3892 x834)) (x1421 (x1807 (- x3892 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x834 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x1421 (x1807 x3892 x834)) (x1421 (x1807 x3892 (- x834 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x1421 (x1807 x3892 x834)) (x1421 (x1807 (- x3892 115792089237316195423570985008687907853269984665640564039457584007913129639936) x834)))))
(define-fun x218 ((x3892 Int) (x834 Int)) Bool (and (=> (and (and (<= x3892 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x3892 0)) (and (<= x834 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x834 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x1807 x3892 (- x834 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x834) (x2656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x3892)))) (=> (and (and (<= x3892 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3892)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x834) (< 0 x834))) (= (>= (x1807 (- x3892 115792089237316195423570985008687907853269984665640564039457584007913129639936) x834) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892) (x2656 57896044618658097711785492504343953926634992332820282019728792003956564819968 x834)))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3892) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3892)) (and (> x834 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x834))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1807 (- x3892 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x834 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (>= (x2656 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x834)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3892)))) (=> (and (and (< 0 x3892) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3892)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x834) (> x834 0))) (= (<= x3892 (x2656 57896044618658097711785492504343953926634992332820282019728792003956564819967 x834)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x1807 x3892 x834))))))
(define-fun x3747 ((x3892 Int)) Bool (and (= (x1807 0 x3892) 0) (= 0 (x1807 x3892 0))))
(define-fun x4525 ((x3892 Int)) Bool (and (= x3892 (x1807 1 x3892)) (= x3892 (x1807 x3892 1))))
(define-fun x2538 ((x3892 Int)) Bool (and (x4525 x3892) (x3747 x3892)))
(define-fun x2891 ((x3892 Int) (x834 Int)) Bool (=> (and (< 0 x3892) (> x834 0)) (and (>= (x2656 x3892 x834) 0) (>= x3892 (x2656 x3892 x834)))))
(define-fun x3017 ((x3892 Int) (x834 Int)) Bool (=> (and (and (< x3892 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x3892 0)) (and (<= 1 x834) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x834))) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2656 x3892 x834)) (<= 0 (x2656 x3892 x834)))))
(define-fun x2026 ((x3892 Int) (x834 Int)) Bool (=> (and (< x834 x3892) (> x834 1)) (< (x2656 x3892 x834) x3892)))
(define-fun x2201 ((x3892 Int) (x834 Int)) Bool (=> (and (< 0 x834) (> x3892 0)) (= (= 0 (x2656 x3892 x834)) (< x3892 x834))))
(define-fun x1306 ((x3892 Int) (x834 Int)) Bool (=> (and (> x834 0) (> x3892 0)) (and (>= x3892 (x1807 (x2656 x3892 x834) x834)) (> (x1807 (x2656 x3892 x834) x834) (- x3892 x834)))))
(define-fun x4640 ((x3892 Int) (x834 Int)) Bool (and (x2891 x3892 x834) (x2201 x3892 x834) (x1306 x3892 x834) (x2026 x3892 x834) (x3017 x3892 x834)))
(define-fun x202 ((x3892 Int)) Bool (= (x2656 0 x3892) 0))
(define-fun x3365 ((x3892 Int)) Bool (= x3892 (x2656 x3892 1)))
(define-fun x3189 ((x3892 Int)) Bool (=> (not (= x3892 0)) (= (x2656 x3892 x3892) 1)))
(define-fun x4244 ((x3892 Int)) Bool (and (x3365 x3892) (x202 x3892) (x3189 x3892)))
(define-fun x2761 ((x3892 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3119 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3892)) (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x3119 x3892 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x991 ((x3892 Int)) Bool (and (= (x3119 x3892 0) x3892) (= x3892 (x3119 0 x3892))))
(define-fun x802 ((x3892 Int)) Bool (= (x3119 x3892 x3892) x3892))
(define-fun x3251 ((x3892 Int)) Bool (and (x991 x3892) (x2761 x3892) (x802 x3892)))
(define-fun x2983 ((x3892 Int) (x834 Int)) Bool (= (x3119 x834 x3892) (x3119 x3892 x834)))
(define-fun x3622 ((x3892 Int) (x834 Int)) Bool (and (<= (x3119 x3892 x834) (+ x834 x3892)) (=> (>= x3892 0) (<= x3892 (x3119 x3892 x834))) (=> (>= x834 0) (<= x834 (x3119 x3892 x834)))))
(define-fun x2519 ((x3892 Int) (x834 Int)) Bool (and (x3622 x3892 x834) (x2983 x3892 x834)))
(define-fun x1103 ((x3892 Int) (x834 Int)) Bool (= (x1807 x834 x3892) (x1807 x3892 x834)))
(define-fun x134 ((x3892 Int) (x834 Int)) Bool (and (=> (and (< x3892 0) (< x834 0)) (< 0 (x1807 x3892 x834))) (=> (and (> 0 x3892) (> x834 0)) (> 0 (x1807 x3892 x834))) (=> (and (< 0 x3892) (< 0 x834)) (< 0 (x1807 x3892 x834))) (=> (and (> x3892 0) (> 0 x834)) (< (x1807 x3892 x834) 0))))
(define-fun x3257 ((x3892 Int) (x834 Int)) Bool (and (x1103 x3892 x834) (x218 x3892 x834) (x3684 x3892 x834) (x2296 x3892 x834) (x1213 x3892 x834) (x134 x3892 x834) (x4064 x3892 x834)))
(define-fun x2614 ((x3892 Int)) Bool (= (+ (x3657 x3892 32) (x2022 x3892 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (x1421 x3892)))
(define-fun x1838 ((x3892 Int)) Bool (and (x431 x3892 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2614 x3892)))
(define-fun x4383 ((x294 Int)) Int (ite (= x294 128) (ite x601 1 0) (x4106 x294)))
(define-fun x2407 ((x294 Int)) Int (ite (= x294 160) (ite x1775 1 0) (x4383 x294)))
(define-fun x4749 ((x294 Int)) Int (ite (= 192 x294) (ite x3762 1 0) (x2407 x294)))
(define-fun x3931 ((x294 Int)) Int (ite (= 224 x294) (ite x4465 1 0) (x4749 x294)))
(define-fun x4315 ((x294 Int)) Int (ite (= x294 256) (ite x1354 1 0) (x3931 x294)))
(define-fun x1657 ((x294 Int)) Int (ite (= x294 288) (ite x337 1 0) (x4315 x294)))
(define-fun x1535 ((x294 Int)) Int (ite (= 320 x294) (ite x1853 1 0) (x1657 x294)))
(define-fun x3492 ((x294 Int)) Int (ite (= x294 352) (ite x2921 1 0) (x1535 x294)))
(define-fun x3474 ((x294 Int)) Int (ite (= 420 x294) x2695 (x3492 x294)))
(define-fun x3590 ((x294 Int)) Int (ite (= x294 384) 36 (x3474 x294)))
(define-fun x4185 ((x294 Int)) Int (ite (= 416 x294) x2941 (x3590 x294)))
(define-fun x2087 ((x294 x1536)) Int (ite (= x3188 x294) x4941 (x2825 x294)))
(define-fun x1721 ((x294 x1536)) Int (ite x4475 (x2825 x294) (x2087 x294)))
(define-fun x4073 ((x294 x1536)) Int (ite (= x3878 x294) 0 (x1721 x294)))
(define-fun x1763 ((x294 x1536)) Int (ite x4484 (x4073 x294) (x1721 x294)))
(define-fun x1808 ((x294 x1536)) Int (ite x4652 (x1763 x294) (ite x4155 (x1763 x294) (ite x4497 (x2825 x294) (ite x79 (x2825 x294) (ite x1155 (x2825 x294) (x1763 x294)))))))
(define-fun x1381 ((x294 x1536)) Int (ite (= x294 x1972) x3194 (x1980 x294)))
(define-fun x2455 ((x294 x1536)) Int (ite x1884 (x1980 x294) (x1381 x294)))
(define-fun x930 ((x294 x1536)) Int (ite (= x294 x2103) 0 (x2455 x294)))
(define-fun x3392 ((x294 x1536)) Int (ite x1166 (x930 x294) (x2455 x294)))
(define-fun x1541 ((x294 x1536)) Int (ite x4652 (x3392 x294) (ite x4155 (x2455 x294) (ite x4497 (x1980 x294) (ite x79 (x1980 x294) (ite x1155 (x1980 x294) (x3392 x294)))))))
(define-fun x2214 ((x294 Int)) Int (ite (= 128 x294) x2578 (x4454 x294)))
(define-fun x3079 ((x294 Int)) Int (ite (= 160 x294) x3881 (x2214 x294)))
(define-fun x1178 ((x294 x1536)) Int (ite (= x294 x1724) 0 (x2391 x294)))
(define-fun x2602 ((x294 x1536)) Int (ite (= x1724 x294) x1835 (x2391 x294)))
(define-fun x2158 ((x294 x1536)) Int (ite x976 (x1178 x294) (x2602 x294)))
(define-fun x189 ((x294 Int)) Int (ite (= 452 x294) 50292402827334880472107169365697159231523039388532301717704428044325102813184 (x4185 x294)))
(define-fun x1251 ((x294 Int)) Int (ite (= x294 452) x959 (x189 x294)))
(define-fun x816 ((x294 Int)) Int (ite (= 452 x294) x2378 (x189 x294)))
(define-fun x208 ((x294 Int)) Int (ite (= x294 452) x2059 (x189 x294)))
(define-fun x1005 ((x294 Int)) Int (ite x1690 (x1251 x294) (ite x354 (x816 x294) (x208 x294))))
(define-fun x1575 ((x294 Int)) Int (ite x4034 (x1005 x294) (x4185 x294)))
(define-fun x644 ((x294 Int)) Int (ite (= x1701 x294) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1575 x294)))
(define-fun x4470 ((x294 Int)) Int (ite (= x1035 x294) x1144 (x644 x294)))
(define-fun x4431 ((x294 Int)) Int (ite (= x3331 x294) x3996 (x4470 x294)))
(define-fun x4657 ((x294 Int)) Int (ite (= x294 x3893) x3539 (x4431 x294)))
(define-fun x3982 ((x294 Int)) Int (ite (= 0 x294) 1 (x4657 x294)))
(define-fun x4809 ((x294 Int)) Int (ite (= 0 x294) 1 (x4657 x294)))
(define-fun x4917 ((x294 Int)) Int (ite (= 0 x294) 1 (x4657 x294)))
(define-fun x698 ((x294 Int)) Int (ite (= 0 x294) 1 (x4657 x294)))
(define-fun x1083 ((x294 Int)) Int (ite x8 (ite x1422 (x4657 x294) (x3982 x294)) (ite x1947 (ite x4212 (x4657 x294) (x4809 x294)) (ite x3766 (ite x2557 (x4657 x294) (x4917 x294)) (ite x1219 (x4657 x294) (x698 x294))))))
(define-fun x422 ((x294 Int)) Int (ite (= x294 x300) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x1083 x294)))
(define-fun x137 ((x294 Int)) Int (ite (= x300 x294) x1087 (x422 x294)))
(define-fun x3986 ((x294 Int)) Int (ite (= x294 x300) x4643 (x422 x294)))
(define-fun x2834 ((x294 Int)) Int (ite (= x300 x294) x1367 (x422 x294)))
(define-fun x4299 ((x294 Int)) Int (ite x4308 (x137 x294) (ite x935 (x3986 x294) (x2834 x294))))
(define-fun x3116 ((x294 Int)) Int (ite (= x294 x2085) x4940 (x4299 x294)))
(define-fun x4210 ((x294 Int)) Int (ite x1931 (x4299 x294) (x3116 x294)))
(define-fun x1111 ((x294 Int)) Int (ite (= x294 x1009) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x4210 x294)))
(define-fun x460 ((x294 Int)) Int (ite (= 0 x294) x1087 (x2084 x294)))
(define-fun x4435 ((x294 Int)) Int (ite (= x1009 x294) x1087 (x1111 x294)))
(define-fun x1227 ((x294 Int)) Int (ite (= x294 0) x4643 (x2084 x294)))
(define-fun x3388 ((x294 Int)) Int (ite (= x1009 x294) x4643 (x1111 x294)))
(define-fun x1792 ((x294 Int)) Int (ite (= x294 0) x1367 (x2084 x294)))
(define-fun x1641 ((x294 Int)) Int (ite (= x294 x1009) x1367 (x1111 x294)))
(define-fun x293 ((x294 x1536)) Int (ite (= x3992 x294) x2148 (x1860 x294)))
(define-fun x3142 ((x294 x1536)) Int (ite x1168 (x1860 x294) (ite x4269 (x1860 x294) (x293 x294))))
(define-fun x677 ((x294 Int)) Int (ite x2344 (x4435 x294) (ite x4188 (x3388 x294) (x1641 x294))))
(define-fun x2705 ((x294 Int)) Int (ite (= x294 x345) 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x677 x294)))
(define-fun x4603 ((x294 Int)) Int (ite (= x294 x894) x3255 (x2705 x294)))
(define-fun x3803 ((x294 Int)) Int (ite (= x4139 x294) x1006 (x4603 x294)))
(define-fun x1630 ((x294 Int)) Int (ite (= x4565 x294) x2152 (x3803 x294)))
(define-fun x4674 ((x294 Int)) Int (ite (and (> (+ x345 0) x294) (>= x294 x345)) (x943 (+ 0 (- x294 x345))) (x1630 x294)))
(define-fun x4729 ((x294 Int)) Int (ite x2445 (x677 x294) (x4674 x294)))
(define-fun x1052 ((x294 Int)) Int (ite (= x294 x345) x727 (x4729 x294)))
(define-fun x4066 ((x294 Int)) Int (ite (= x1895 x294) x771 (x1052 x294)))
(define-fun x2315 ((x294 Int)) Int (ite x464 (x4066 x294) (x677 x294)))
(define-fun x3686 ((x294 Int)) Int (ite x1168 (x4210 x294) (ite x3152 (x2315 x294) (x4210 x294))))
(define-fun x3504 ((x294 x1536)) Int (ite (= x4216 x294) x4546 (x4041 x294)))
(define-fun x560 ((x294 Int)) Int (ite (= x294 x3243) 10742207464693106059581744854972325794081737850190833080250671788038469713920 (x3686 x294)))
(define-fun x3631 ((x294 Int)) Int (ite (= x294 x786) x3996 (x560 x294)))
(define-fun x670 ((x294 Int)) Int (ite (= 0 x294) x3320 (x4316 x294)))
(define-fun x2691 ((x294 Int)) Int (ite (= x3243 x294) x3320 (x3631 x294)))
(define-fun x3053 ((x294 Int)) Int (ite (= 0 x294) x3545 (x4316 x294)))
(define-fun x4019 ((x294 Int)) Int (ite (= x294 x3243) x3545 (x3631 x294)))
(define-fun x3540 ((x294 Int)) Int (ite (= x294 0) x3183 (x4316 x294)))
(define-fun x2228 ((x294 Int)) Int (ite (= x294 x3243) x3183 (x3631 x294)))
(define-fun x4702 ((x294 Int)) Int (ite x3513 (ite x1305 (x3631 x294) (x2691 x294)) (ite x4459 (ite x1433 (x3631 x294) (x4019 x294)) (ite x3914 (x3631 x294) (x2228 x294)))))
(define-fun x4036 ((x294 Int)) Int (ite (= x572 x294) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x4702 x294)))
(define-fun x3726 ((x294 Int)) Int (ite (= x294 x1594) x2695 (x4036 x294)))
(define-fun x4667 ((x294 Int)) Int (ite (= x3420 x294) x1779 (x3726 x294)))
(define-fun x2045 ((x294 Int)) Int (ite (= 0 x294) 1 (x4667 x294)))
(define-fun x3857 ((x294 Int)) Int (ite x3323 (x4667 x294) (x2045 x294)))
(define-fun x633 ((x294 Int)) Int (ite (= x294 x572) 6539370208772218570076773595062200405109424842860869254164860851635934461952 (x3857 x294)))
(define-fun x4126 ((x294 Int)) Int (ite (= x294 x2693) x1779 (x633 x294)))
(define-fun x2157 ((x294 Int)) Int (ite (= x294 x572) 0 (x4126 x294)))
(define-fun x651 ((x294 Int)) Int (ite (= x294 x572) 0 (x4126 x294)))
(define-fun x275 ((x294 Int)) Int (ite (= x572 x294) 0 (x4126 x294)))
(define-fun x2223 ((x294 Int)) Int (ite x4792 (ite x4789 (x4126 x294) (x2157 x294)) (ite x440 (ite x758 (x4126 x294) (x651 x294)) (ite x1519 (x4126 x294) (x275 x294)))))
(define-fun x1226 ((x294 Int)) Int (ite (= x572 x294) 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x4702 x294)))
(define-fun x11 ((x294 Int)) Int (ite (= x3911 x294) x1779 (x1226 x294)))
(define-fun x3169 ((x294 Int)) Int (ite (and (> (+ 0 x572) x294) (<= x572 x294)) (x4713 (+ (- x294 x572) 0)) (x11 x294)))
(define-fun x2860 ((x294 Int)) Int (ite (= x294 x572) 35417553099779373699389112480655434059402432070290151981503827724506945814528 (x3169 x294)))
(define-fun x2801 ((x294 Int)) Int (ite (= x294 x572) x2339 (x2860 x294)))
(define-fun x2906 ((x294 Int)) Int (ite x3374 (x2860 x294) (x2801 x294)))
(define-fun x4355 ((x294 Int)) Int (ite (= x294 x572) x4560 (x2860 x294)))
(define-fun x3910 ((x294 Int)) Int (ite x2522 (x2860 x294) (x4355 x294)))
(define-fun x2845 ((x294 Int)) Int (ite (= x572 x294) x1756 (x2860 x294)))
(define-fun x1938 ((x294 Int)) Int (ite x2994 (x2860 x294) (x2845 x294)))
(define-fun x2590 ((x294 Int)) Int (ite x4868 (x2906 x294) (ite x222 (x3910 x294) (x1938 x294))))
(define-fun x2581 ((x294 Int)) Int (ite x1993 (x4702 x294) (ite x3844 (x2223 x294) (x2590 x294))))
(define-fun x3091 ((x294 Int)) Int (ite (= x294 x69) x2992 (x2581 x294)))
(define-fun x4924 ((x294 Int)) Int (ite (= x294 x3304) x441 (x3091 x294)))
(define-fun x2393 ((x294 Int)) Int (ite x1884 (x3686 x294) (x4924 x294)))
(define-fun x1856 ((x294 x1536)) Int (ite (= x4723 x294) x663 (x3808 x294)))
(define-fun x2721 ((x294 x1536)) Int (ite (= x2042 x294) x2426 (x1856 x294)))
(define-fun x2843 ((x294 x1536)) Int (ite x1054 (x2721 x294) (ite x3733 (x1856 x294) (ite x3650 (x3808 x294) (ite x360 (x3808 x294) (ite x4193 (x3808 x294) (ite x3997 (x3808 x294) (ite x662 (x1856 x294) (ite x2293 (x2721 x294) (x3808 x294))))))))))
(define-fun x4059 ((x294 x1536)) Int (ite x8 (ite x1422 (x2843 x294) (x2721 x294)) (x3808 x294)))
(define-fun x3441 ((x294 x1536)) Int (ite (= x294 x4696) x2914 (x4059 x294)))
(define-fun x3044 ((x294 x1536)) Int (ite (= x4952 x294) x849 (x3441 x294)))
(define-fun x396 ((x294 x1536)) Int (ite x1959 (x3044 x294) (ite x192 (x3441 x294) (ite x2966 (x4059 x294) (ite x1375 (x4059 x294) (ite x3009 (x4059 x294) (ite x4366 (x4059 x294) (ite x260 (x3441 x294) (ite x1966 (x3044 x294) (x4059 x294))))))))))
(define-fun x2468 ((x294 x1536)) Int (ite x100 (ite x3521 (x396 x294) (x3044 x294)) (x4059 x294)))
(define-fun x3035 ((x294 x1536)) Int (ite x1527 (x2468 x294) (ite x3909 (x4059 x294) (ite x4307 (x4059 x294) (ite x2720 (x4059 x294) (ite x524 (x2468 x294) (x4059 x294)))))))
(define-fun x2690 ((x294 x1536)) Int (ite x4789 (x3035 x294) (x2468 x294)))
(define-fun x2910 ((x294 x1536)) Int (ite (= x294 x2457) x3512 (x4059 x294)))
(define-fun x2716 ((x294 x1536)) Int (ite (= x294 x4901) x369 (x2910 x294)))
(define-fun x3397 ((x294 x1536)) Int (ite x2139 (x2716 x294) (ite x1268 (x2910 x294) (ite x3770 (x4059 x294) (ite x3834 (x4059 x294) (ite x3178 (x4059 x294) (ite x1204 (x4059 x294) (ite x4564 (x2910 x294) (ite x978 (x2716 x294) (x4059 x294))))))))))
(define-fun x3588 ((x294 x1536)) Int (ite x4418 (ite x1114 (x3397 x294) (x2716 x294)) (x4059 x294)))
(define-fun x2903 ((x294 x1536)) Int (ite x980 (x3588 x294) (ite x3750 (x4059 x294) (ite x3391 (x4059 x294) (ite x1668 (x4059 x294) (ite x2040 (x3588 x294) (x4059 x294)))))))
(define-fun x1343 ((x294 x1536)) Int (ite x758 (x2903 x294) (x3588 x294)))
(define-fun x1800 ((x294 x1536)) Int (ite (= x2364 x294) x258 (x4059 x294)))
(define-fun x1123 ((x294 x1536)) Int (ite (= x294 x2333) x3961 (x1800 x294)))
(define-fun x4599 ((x294 x1536)) Int (ite x1709 (x1123 x294) (ite x2564 (x1800 x294) (ite x4915 (x4059 x294) (ite x1162 (x4059 x294) (ite x3672 (x4059 x294) (ite x2922 (x4059 x294) (ite x1750 (x1800 x294) (ite x4198 (x1123 x294) (x4059 x294))))))))))
(define-fun x4179 ((x294 x1536)) Int (ite x334 (ite x3541 (x4599 x294) (x1123 x294)) (x4059 x294)))
(define-fun x1909 ((x294 x1536)) Int (ite x2650 (x4179 x294) (ite x4859 (x4059 x294) (ite x4580 (x4059 x294) (ite x3936 (x4059 x294) (ite x2071 (x4179 x294) (x4059 x294)))))))
(define-fun x3589 ((x294 x1536)) Int (ite x1519 (x1909 x294) (x4179 x294)))
(define-fun x2865 ((x294 x1536)) Int (ite x4792 (x2690 x294) (ite x440 (x1343 x294) (x3589 x294))))
(define-fun x356 ((x294 x1536)) Int (ite (= x294 x4114) x686 (x4059 x294)))
(define-fun x2306 ((x294 x1536)) Int (ite (= x4274 x294) x4864 (x356 x294)))
(define-fun x68 ((x294 x1536)) Int (ite x1675 (x2306 x294) (ite x4881 (x356 x294) (ite x4764 (x4059 x294) (ite x3632 (x4059 x294) (ite x3562 (x4059 x294) (ite x4406 (x4059 x294) (ite x2528 (x356 x294) (ite x3104 (x2306 x294) (x4059 x294))))))))))
(define-fun x4889 ((x294 x1536)) Int (ite x4669 (ite x2249 (x68 x294) (x2306 x294)) (x4059 x294)))
(define-fun x3746 ((x294 x1536)) Int (ite x908 (x4889 x294) (ite x4134 (x4059 x294) (ite x2501 (x4059 x294) (ite x1949 (x4889 x294) (x4059 x294))))))
(define-fun x1525 ((x294 x1536)) Int (ite x3374 (x3746 x294) (x4889 x294)))
(define-fun x3267 ((x294 x1536)) Int (ite (= x3718 x294) x1373 (x4059 x294)))
(define-fun x2146 ((x294 x1536)) Int (ite (= x294 x1440) x1979 (x3267 x294)))
(define-fun x4300 ((x294 x1536)) Int (ite x2192 (x2146 x294) (ite x3291 (x3267 x294) (ite x613 (x4059 x294) (ite x1432 (x4059 x294) (ite x1640 (x4059 x294) (ite x2961 (x4059 x294) (ite x1865 (x3267 x294) (ite x239 (x2146 x294) (x4059 x294))))))))))
(define-fun x1967 ((x294 x1536)) Int (ite x985 (ite x33 (x4300 x294) (x2146 x294)) (x4059 x294)))
(define-fun x71 ((x294 x1536)) Int (ite x715 (x1967 x294) (ite x3815 (x4059 x294) (ite x4069 (x4059 x294) (ite x132 (x1967 x294) (x4059 x294))))))
(define-fun x1374 ((x294 x1536)) Int (ite x2522 (x71 x294) (x1967 x294)))
(define-fun x1904 ((x294 x1536)) Int (ite (= x2017 x294) x3784 (x4059 x294)))
(define-fun x2184 ((x294 x1536)) Int (ite (= x401 x294) x2107 (x1904 x294)))
(define-fun x3288 ((x294 x1536)) Int (ite x3012 (x2184 x294) (ite x3546 (x1904 x294) (ite x1939 (x4059 x294) (ite x821 (x4059 x294) (ite x1492 (x4059 x294) (ite x4133 (x4059 x294) (ite x149 (x1904 x294) (ite x974 (x2184 x294) (x4059 x294))))))))))
(define-fun x905 ((x294 x1536)) Int (ite x4225 (ite x3263 (x3288 x294) (x2184 x294)) (x4059 x294)))
(define-fun x3720 ((x294 x1536)) Int (ite x1260 (x905 x294) (ite x2063 (x4059 x294) (ite x4748 (x4059 x294) (ite x1473 (x905 x294) (x4059 x294))))))
(define-fun x4699 ((x294 x1536)) Int (ite x2994 (x3720 x294) (x905 x294)))
(define-fun x2366 ((x294 x1536)) Int (ite x4868 (x1525 x294) (ite x222 (x1374 x294) (x4699 x294))))
(define-fun x2287 ((x294 x1536)) Int (ite x3844 (x2865 x294) (x2366 x294)))
(define-fun x3755 ((x294 x1536)) Int (ite x1884 (x4059 x294) (ite x1993 (x4059 x294) (x2287 x294))))
(define-fun x3782 ((x294 x1536)) Int (ite (= x294 (x2758 x3996)) x4043 (x3296 x294)))
(define-fun x4896 ((x294 x1536)) Int (ite (= (x2758 x1893) x294) x966 (x3782 x294)))
(define-fun x1735 ((x294 x1536)) Int (ite (= (x2758 x1893) x294) x748 (x4896 x294)))
(define-fun x1609 ((x294 x1536)) Int (ite (= x294 (x2758 x3996)) x4375 (x1735 x294)))
(define-fun x1783 ((x294 x1536)) Int (ite x4929 (x4896 x294) (x1609 x294)))
(define-fun x2661 ((x294 x1536)) Int (ite x3844 (x3296 x294) (x1783 x294)))
(define-fun x2666 ((x294 x1536)) Int (ite x1884 (x3296 x294) (ite x1993 (x3296 x294) (x2661 x294))))
(define-fun x1876 ((x294 x1536)) Int (ite (= x294 x767) x4937 (x340 x294)))
(define-fun x3903 ((x294 x1536)) Int (ite x4152 (x340 x294) (ite x227 (x340 x294) (ite x4254 (x340 x294) (ite x1765 (x340 x294) (ite x2616 (x1876 x294) (x340 x294)))))))
(define-fun x3421 ((x294 x1536)) Int (ite (= x2314 x294) x4558 (x1876 x294)))
(define-fun x4905 ((x294 x1536)) Int (ite x8 (x340 x294) (ite x1947 (x340 x294) (ite x3766 (x340 x294) (ite x1219 (x3903 x294) (x3421 x294))))))
(define-fun x1235 ((x294 x1536)) Int (ite (= x4932 x294) x4486 (x4905 x294)))
(define-fun x344 ((x294 x1536)) Int (ite x1873 (x4905 x294) (ite x3409 (x4905 x294) (ite x412 (x4905 x294) (ite x268 (x4905 x294) (ite x4851 (x1235 x294) (x4905 x294)))))))
(define-fun x4481 ((x294 x1536)) Int (ite (= x397 x294) x379 (x1235 x294)))
(define-fun x3618 ((x294 x1536)) Int (ite x100 (x4905 x294) (ite x3628 (x4905 x294) (ite x1296 (x4905 x294) (ite x4689 (x344 x294) (x4481 x294))))))
(define-fun x3274 ((x294 x1536)) Int (ite x1527 (x3618 x294) (ite x3909 (x4905 x294) (ite x4307 (x4905 x294) (ite x2720 (x4905 x294) (ite x524 (x3618 x294) (x4905 x294)))))))
(define-fun x2375 ((x294 x1536)) Int (ite x4789 (x3274 x294) (x3618 x294)))
(define-fun x754 ((x294 x1536)) Int (ite (= x282 x294) x706 (x4905 x294)))
(define-fun x4087 ((x294 x1536)) Int (ite x4707 (x4905 x294) (ite x2818 (x4905 x294) (ite x827 (x4905 x294) (ite x96 (x4905 x294) (ite x1545 (x754 x294) (x4905 x294)))))))
(define-fun x1319 ((x294 x1536)) Int (ite (= x294 x4522) x2119 (x754 x294)))
(define-fun x1356 ((x294 x1536)) Int (ite x4418 (x4905 x294) (ite x1480 (x4905 x294) (ite x1124 (x4905 x294) (ite x3929 (x4087 x294) (x1319 x294))))))
(define-fun x3250 ((x294 x1536)) Int (ite x980 (x1356 x294) (ite x3750 (x4905 x294) (ite x3391 (x4905 x294) (ite x1668 (x4905 x294) (ite x2040 (x1356 x294) (x4905 x294)))))))
(define-fun x2889 ((x294 x1536)) Int (ite x758 (x3250 x294) (x1356 x294)))
(define-fun x1664 ((x294 x1536)) Int (ite (= x294 x2282) x506 (x4905 x294)))
(define-fun x1855 ((x294 x1536)) Int (ite x4402 (x4905 x294) (ite x4867 (x4905 x294) (ite x4327 (x4905 x294) (ite x2802 (x4905 x294) (ite x3471 (x1664 x294) (x4905 x294)))))))
(define-fun x3503 ((x294 x1536)) Int (ite (= x294 x1635) x3440 (x1664 x294)))
(define-fun x1766 ((x294 x1536)) Int (ite x334 (x4905 x294) (ite x3565 (x4905 x294) (ite x3166 (x4905 x294) (ite x2264 (x1855 x294) (x3503 x294))))))
(define-fun x242 ((x294 x1536)) Int (ite x2650 (x1766 x294) (ite x4859 (x4905 x294) (ite x4580 (x4905 x294) (ite x3936 (x4905 x294) (ite x2071 (x1766 x294) (x4905 x294)))))))
(define-fun x2124 ((x294 x1536)) Int (ite x1519 (x242 x294) (x1766 x294)))
(define-fun x201 ((x294 x1536)) Int (ite x4792 (x2375 x294) (ite x440 (x2889 x294) (x2124 x294))))
(define-fun x4171 ((x294 x1536)) Int (ite (= x294 x1958) x1315 (x4905 x294)))
(define-fun x4593 ((x294 x1536)) Int (ite x238 (x4905 x294) (ite x400 (x4905 x294) (ite x1556 (x4905 x294) (ite x3262 (x4905 x294) (ite x1036 (x4171 x294) (x4905 x294)))))))
(define-fun x1220 ((x294 x1536)) Int (ite (= x294 x3525) x2193 (x4171 x294)))
(define-fun x321 ((x294 x1536)) Int (ite x4669 (x4905 x294) (ite x236 (x4905 x294) (ite x1829 (x4905 x294) (ite x4150 (x4593 x294) (x1220 x294))))))
(define-fun x4585 ((x294 x1536)) Int (ite x908 (x321 x294) (ite x4134 (x4905 x294) (ite x2501 (x4905 x294) (ite x1949 (x321 x294) (x4905 x294))))))
(define-fun x458 ((x294 x1536)) Int (ite x3374 (x4585 x294) (x321 x294)))
(define-fun x1153 ((x294 x1536)) Int (ite (= x3756 x294) x4361 (x4905 x294)))
(define-fun x468 ((x294 x1536)) Int (ite x2284 (x4905 x294) (ite x3295 (x4905 x294) (ite x4666 (x4905 x294) (ite x4720 (x4905 x294) (ite x1971 (x1153 x294) (x4905 x294)))))))
(define-fun x1878 ((x294 x1536)) Int (ite (= x294 x3528) x1225 (x1153 x294)))
(define-fun x4219 ((x294 x1536)) Int (ite x985 (x4905 x294) (ite x27 (x4905 x294) (ite x3658 (x4905 x294) (ite x1897 (x468 x294) (x1878 x294))))))
(define-fun x1554 ((x294 x1536)) Int (ite x715 (x4219 x294) (ite x3815 (x4905 x294) (ite x4069 (x4905 x294) (ite x132 (x4219 x294) (x4905 x294))))))
(define-fun x1468 ((x294 x1536)) Int (ite x2522 (x1554 x294) (x4219 x294)))
(define-fun x2332 ((x294 x1536)) Int (ite (= x294 x3701) x1868 (x4905 x294)))
(define-fun x3552 ((x294 x1536)) Int (ite x3225 (x4905 x294) (ite x1660 (x4905 x294) (ite x648 (x4905 x294) (ite x4109 (x4905 x294) (ite x3023 (x2332 x294) (x4905 x294)))))))
(define-fun x483 ((x294 x1536)) Int (ite (= x837 x294) x1243 (x2332 x294)))
(define-fun x2577 ((x294 x1536)) Int (ite x4225 (x4905 x294) (ite x1231 (x4905 x294) (ite x4464 (x4905 x294) (ite x2312 (x3552 x294) (x483 x294))))))
(define-fun x2920 ((x294 x1536)) Int (ite x1260 (x2577 x294) (ite x2063 (x4905 x294) (ite x4748 (x4905 x294) (ite x1473 (x2577 x294) (x4905 x294))))))
(define-fun x1427 ((x294 x1536)) Int (ite x2994 (x2920 x294) (x2577 x294)))
(define-fun x3975 ((x294 x1536)) Int (ite x4868 (x458 x294) (ite x222 (x1468 x294) (x1427 x294))))
(define-fun x1252 ((x294 x1536)) Int (ite x3844 (x201 x294) (x3975 x294)))
(define-fun x1912 ((x294 x1536)) Int (ite x1884 (x4905 x294) (ite x1993 (x4905 x294) (x1252 x294))))
(define-fun x1610 ((x294 x1536)) Int (ite (= x294 x3734) x2484 (x3949 x294)))
(define-fun x932 ((x294 x1536)) Int (ite x4016 (x3949 x294) (ite x2793 (x3949 x294) (ite x4821 (x3949 x294) (ite x1903 (x3949 x294) (ite x1130 (x1610 x294) (x3949 x294)))))))
(define-fun x3995 ((x294 x1536)) Int (ite (= x4026 x294) x1516 (x1610 x294)))
(define-fun x3412 ((x294 x1536)) Int (ite x8 (x3949 x294) (ite x1947 (ite x4212 (x932 x294) (x3995 x294)) (x3949 x294))))
(define-fun x3950 ((x294 x1536)) Int (ite (= x294 x3447) x1313 (x3412 x294)))
(define-fun x2037 ((x294 x1536)) Int (ite x1969 (x3412 x294) (ite x1442 (x3412 x294) (ite x4374 (x3412 x294) (ite x3146 (x3412 x294) (ite x4446 (x3950 x294) (x3412 x294)))))))
(define-fun x3606 ((x294 x1536)) Int (ite (= x4453 x294) x4591 (x3950 x294)))
(define-fun x2710 ((x294 x1536)) Int (ite x100 (x3412 x294) (ite x3628 (ite x3445 (x2037 x294) (x3606 x294)) (x3412 x294))))
(define-fun x942 ((x294 x1536)) Int (ite x1527 (x2710 x294) (ite x3909 (x3412 x294) (ite x4307 (x3412 x294) (ite x2720 (x3412 x294) (ite x524 (x2710 x294) (x3412 x294)))))))
(define-fun x3969 ((x294 x1536)) Int (ite x4789 (x942 x294) (x2710 x294)))
(define-fun x514 ((x294 x1536)) Int (ite (= x294 x740) x3196 (x3412 x294)))
(define-fun x2809 ((x294 x1536)) Int (ite x3848 (x3412 x294) (ite x4834 (x3412 x294) (ite x4856 (x3412 x294) (ite x3313 (x3412 x294) (ite x4512 (x514 x294) (x3412 x294)))))))
(define-fun x2804 ((x294 x1536)) Int (ite (= x294 x1616) x3598 (x514 x294)))
(define-fun x4211 ((x294 x1536)) Int (ite x4418 (x3412 x294) (ite x1480 (ite x1145 (x2809 x294) (x2804 x294)) (x3412 x294))))
(define-fun x1013 ((x294 x1536)) Int (ite x980 (x4211 x294) (ite x3750 (x3412 x294) (ite x3391 (x3412 x294) (ite x1668 (x3412 x294) (ite x2040 (x4211 x294) (x3412 x294)))))))
(define-fun x4461 ((x294 x1536)) Int (ite x758 (x1013 x294) (x4211 x294)))
(define-fun x1553 ((x294 x1536)) Int (ite (= x502 x294) x3667 (x3412 x294)))
(define-fun x3482 ((x294 x1536)) Int (ite x1359 (x3412 x294) (ite x313 (x3412 x294) (ite x4017 (x3412 x294) (ite x3754 (x3412 x294) (ite x3727 (x1553 x294) (x3412 x294)))))))
(define-fun x653 ((x294 x1536)) Int (ite (= x294 x1394) x3140 (x1553 x294)))
(define-fun x4627 ((x294 x1536)) Int (ite x334 (x3412 x294) (ite x3565 (ite x4621 (x3482 x294) (x653 x294)) (x3412 x294))))
(define-fun x2967 ((x294 x1536)) Int (ite x2650 (x4627 x294) (ite x4859 (x3412 x294) (ite x4580 (x3412 x294) (ite x3936 (x3412 x294) (ite x2071 (x4627 x294) (x3412 x294)))))))
(define-fun x1344 ((x294 x1536)) Int (ite x1519 (x2967 x294) (x4627 x294)))
(define-fun x3748 ((x294 x1536)) Int (ite x4792 (x3969 x294) (ite x440 (x4461 x294) (x1344 x294))))
(define-fun x4224 ((x294 x1536)) Int (ite (= x3705 x294) x627 (x3412 x294)))
(define-fun x499 ((x294 x1536)) Int (ite x4014 (x3412 x294) (ite x4118 (x3412 x294) (ite x878 (x3412 x294) (ite x1614 (x3412 x294) (ite x2694 (x4224 x294) (x3412 x294)))))))
(define-fun x2356 ((x294 x1536)) Int (ite (= x294 x1030) x2120 (x4224 x294)))
(define-fun x1000 ((x294 x1536)) Int (ite x4669 (x3412 x294) (ite x236 (ite x4442 (x499 x294) (x2356 x294)) (x3412 x294))))
(define-fun x2902 ((x294 x1536)) Int (ite x908 (x1000 x294) (ite x4134 (x3412 x294) (ite x2501 (x3412 x294) (ite x1949 (x1000 x294) (x3412 x294))))))
(define-fun x1180 ((x294 x1536)) Int (ite x3374 (x2902 x294) (x1000 x294)))
(define-fun x1196 ((x294 x1536)) Int (ite (= x294 x3626) x3575 (x3412 x294)))
(define-fun x2670 ((x294 x1536)) Int (ite x4890 (x3412 x294) (ite x1218 (x3412 x294) (ite x3870 (x3412 x294) (ite x73 (x3412 x294) (ite x2094 (x1196 x294) (x3412 x294)))))))
(define-fun x2570 ((x294 x1536)) Int (ite (= x294 x3434) x2298 (x1196 x294)))
(define-fun x641 ((x294 x1536)) Int (ite x985 (x3412 x294) (ite x27 (ite x1778 (x2670 x294) (x2570 x294)) (x3412 x294))))
(define-fun x2768 ((x294 x1536)) Int (ite x715 (x641 x294) (ite x3815 (x3412 x294) (ite x4069 (x3412 x294) (ite x132 (x641 x294) (x3412 x294))))))
(define-fun x1693 ((x294 x1536)) Int (ite x2522 (x2768 x294) (x641 x294)))
(define-fun x2353 ((x294 x1536)) Int (ite (= x294 x4074) x3671 (x3412 x294)))
(define-fun x279 ((x294 x1536)) Int (ite x1159 (x3412 x294) (ite x4400 (x3412 x294) (ite x3021 (x3412 x294) (ite x2232 (x3412 x294) (ite x384 (x2353 x294) (x3412 x294)))))))
(define-fun x3530 ((x294 x1536)) Int (ite (= x294 x3069) x568 (x2353 x294)))
(define-fun x747 ((x294 x1536)) Int (ite x4225 (x3412 x294) (ite x1231 (ite x538 (x279 x294) (x3530 x294)) (x3412 x294))))
(define-fun x3452 ((x294 x1536)) Int (ite x1260 (x747 x294) (ite x2063 (x3412 x294) (ite x4748 (x3412 x294) (ite x1473 (x747 x294) (x3412 x294))))))
(define-fun x2150 ((x294 x1536)) Int (ite x2994 (x3452 x294) (x747 x294)))
(define-fun x85 ((x294 x1536)) Int (ite x4868 (x1180 x294) (ite x222 (x1693 x294) (x2150 x294))))
(define-fun x4632 ((x294 x1536)) Int (ite x3844 (x3748 x294) (x85 x294)))
(define-fun x2328 ((x294 x1536)) Int (ite x1884 (x3412 x294) (ite x1993 (x3412 x294) (x4632 x294))))
(define-fun x1242 ((x294 x1536)) Int (ite (= x3105 x294) x1089 (x2038 x294)))
(define-fun x4371 ((x294 x1536)) Int (ite x2151 (x2038 x294) (ite x4506 (x2038 x294) (ite x2917 (x2038 x294) (ite x1415 (x2038 x294) (ite x3361 (x1242 x294) (x2038 x294)))))))
(define-fun x3943 ((x294 x1536)) Int (ite (= x2269 x294) x261 (x1242 x294)))
(define-fun x4100 ((x294 x1536)) Int (ite x8 (x2038 x294) (ite x1947 (x2038 x294) (ite x3766 (ite x2557 (x4371 x294) (x3943 x294)) (x2038 x294)))))
(define-fun x1115 ((x294 x1536)) Int (ite (= x3669 x294) x1477 (x4100 x294)))
(define-fun x2555 ((x294 x1536)) Int (ite x3799 (x4100 x294) (ite x1771 (x4100 x294) (ite x4716 (x4100 x294) (ite x472 (x4100 x294) (ite x217 (x1115 x294) (x4100 x294)))))))
(define-fun x3428 ((x294 x1536)) Int (ite (= x294 x3713) x1799 (x1115 x294)))
(define-fun x3984 ((x294 x1536)) Int (ite x100 (x4100 x294) (ite x3628 (x4100 x294) (ite x1296 (ite x228 (x2555 x294) (x3428 x294)) (x4100 x294)))))
(define-fun x1743 ((x294 x1536)) Int (ite x1527 (x3984 x294) (ite x3909 (x4100 x294) (ite x4307 (x4100 x294) (ite x2720 (x4100 x294) (ite x524 (x3984 x294) (x4100 x294)))))))
(define-fun x301 ((x294 x1536)) Int (ite x4789 (x1743 x294) (x3984 x294)))
(define-fun x4767 ((x294 x1536)) Int (ite (= x4782 x294) x283 (x4100 x294)))
(define-fun x186 ((x294 x1536)) Int (ite x2799 (x4100 x294) (ite x477 (x4100 x294) (ite x2187 (x4100 x294) (ite x2931 (x4100 x294) (ite x1875 (x4767 x294) (x4100 x294)))))))
(define-fun x1656 ((x294 x1536)) Int (ite (= x1371 x294) x1759 (x4767 x294)))
(define-fun x328 ((x294 x1536)) Int (ite x4418 (x4100 x294) (ite x1480 (x4100 x294) (ite x1124 (ite x171 (x186 x294) (x1656 x294)) (x4100 x294)))))
(define-fun x4761 ((x294 x1536)) Int (ite x980 (x328 x294) (ite x3750 (x4100 x294) (ite x3391 (x4100 x294) (ite x1668 (x4100 x294) (ite x2040 (x328 x294) (x4100 x294)))))))
(define-fun x2798 ((x294 x1536)) Int (ite x758 (x4761 x294) (x328 x294)))
(define-fun x1282 ((x294 x1536)) Int (ite (= x294 x1451) x640 (x4100 x294)))
(define-fun x2304 ((x294 x1536)) Int (ite x1363 (x4100 x294) (ite x1214 (x4100 x294) (ite x3372 (x4100 x294) (ite x1563 (x4100 x294) (ite x925 (x1282 x294) (x4100 x294)))))))
(define-fun x2036 ((x294 x1536)) Int (ite (= x1288 x294) x492 (x1282 x294)))
(define-fun x2638 ((x294 x1536)) Int (ite x334 (x4100 x294) (ite x3565 (x4100 x294) (ite x3166 (ite x4143 (x2304 x294) (x2036 x294)) (x4100 x294)))))
(define-fun x2631 ((x294 x1536)) Int (ite x2650 (x2638 x294) (ite x4859 (x4100 x294) (ite x4580 (x4100 x294) (ite x3936 (x4100 x294) (ite x2071 (x2638 x294) (x4100 x294)))))))
(define-fun x2482 ((x294 x1536)) Int (ite x1519 (x2631 x294) (x2638 x294)))
(define-fun x200 ((x294 x1536)) Int (ite x4792 (x301 x294) (ite x440 (x2798 x294) (x2482 x294))))
(define-fun x57 ((x294 x1536)) Int (ite (= x4004 x294) x2958 (x4100 x294)))
(define-fun x1383 ((x294 x1536)) Int (ite x2655 (x4100 x294) (ite x1416 (x4100 x294) (ite x3740 (x4100 x294) (ite x2885 (x4100 x294) (ite x4791 (x57 x294) (x4100 x294)))))))
(define-fun x2856 ((x294 x1536)) Int (ite (= x600 x294) x3315 (x57 x294)))
(define-fun x2901 ((x294 x1536)) Int (ite x4669 (x4100 x294) (ite x236 (x4100 x294) (ite x1829 (ite x1978 (x1383 x294) (x2856 x294)) (x4100 x294)))))
(define-fun x14 ((x294 x1536)) Int (ite x908 (x2901 x294) (ite x4134 (x4100 x294) (ite x2501 (x4100 x294) (ite x1949 (x2901 x294) (x4100 x294))))))
(define-fun x832 ((x294 x1536)) Int (ite x3374 (x14 x294) (x2901 x294)))
(define-fun x842 ((x294 x1536)) Int (ite (= x294 x923) x1804 (x4100 x294)))
(define-fun x3430 ((x294 x1536)) Int (ite x1718 (x4100 x294) (ite x2697 (x4100 x294) (ite x3272 (x4100 x294) (ite x3574 (x4100 x294) (ite x1618 (x842 x294) (x4100 x294)))))))
(define-fun x2817 ((x294 x1536)) Int (ite (= x4693 x294) x1741 (x842 x294)))
(define-fun x4020 ((x294 x1536)) Int (ite x985 (x4100 x294) (ite x27 (x4100 x294) (ite x3658 (ite x1482 (x3430 x294) (x2817 x294)) (x4100 x294)))))
(define-fun x548 ((x294 x1536)) Int (ite x715 (x4020 x294) (ite x3815 (x4100 x294) (ite x4069 (x4100 x294) (ite x132 (x4020 x294) (x4100 x294))))))
(define-fun x338 ((x294 x1536)) Int (ite x2522 (x548 x294) (x4020 x294)))
(define-fun x713 ((x294 x1536)) Int (ite (= x2973 x294) x3934 (x4100 x294)))
(define-fun x3490 ((x294 x1536)) Int (ite x150 (x4100 x294) (ite x398 (x4100 x294) (ite x1102 (x4100 x294) (ite x793 (x4100 x294) (ite x632 (x713 x294) (x4100 x294)))))))
(define-fun x2257 ((x294 x1536)) Int (ite (= x294 x599) x1171 (x713 x294)))
(define-fun x4582 ((x294 x1536)) Int (ite x4225 (x4100 x294) (ite x1231 (x4100 x294) (ite x4464 (ite x1185 (x3490 x294) (x2257 x294)) (x4100 x294)))))
(define-fun x2964 ((x294 x1536)) Int (ite x1260 (x4582 x294) (ite x2063 (x4100 x294) (ite x4748 (x4100 x294) (ite x1473 (x4582 x294) (x4100 x294))))))
(define-fun x614 ((x294 x1536)) Int (ite x2994 (x2964 x294) (x4582 x294)))
(define-fun x1737 ((x294 x1536)) Int (ite x4868 (x832 x294) (ite x222 (x338 x294) (x614 x294))))
(define-fun x1932 ((x294 x1536)) Int (ite x3844 (x200 x294) (x1737 x294)))
(define-fun x3610 ((x294 x1536)) Int (ite x1884 (x4100 x294) (ite x1993 (x4100 x294) (x1932 x294))))
(define-fun x2317 ((x294 x1536)) Int (ite (= x294 x2848) x3280 (x1405 x294)))
(define-fun x1273 ((x294 x1536)) Int (ite x8 (ite x1422 (x1405 x294) (x2317 x294)) (x1405 x294)))
(define-fun x2624 ((x294 x1536)) Int (ite (= x1275 x294) x3249 (x1273 x294)))
(define-fun x3673 ((x294 x1536)) Int (ite x3323 (x1273 x294) (x2624 x294)))
(define-fun x3184 ((x294 x1536)) Int (ite (= x294 x2002) x1051 (x3673 x294)))
(define-fun x4726 ((x294 x1536)) Int (ite x100 (ite x3521 (x3673 x294) (x3184 x294)) (x3673 x294)))
(define-fun x2632 ((x294 x1536)) Int (ite x1527 (x4726 x294) (ite x3909 (x3673 x294) (ite x4307 (x3673 x294) (ite x2720 (x3673 x294) (ite x524 (x4726 x294) (x3673 x294)))))))
(define-fun x2049 ((x294 x1536)) Int (ite x4789 (x2632 x294) (x4726 x294)))
(define-fun x3477 ((x294 x1536)) Int (ite (= x294 x3265) x1726 (x3673 x294)))
(define-fun x2283 ((x294 x1536)) Int (ite x4418 (ite x1114 (x3673 x294) (x3477 x294)) (x3673 x294)))
(define-fun x3264 ((x294 x1536)) Int (ite x980 (x2283 x294) (ite x3750 (x3673 x294) (ite x3391 (x3673 x294) (ite x1668 (x3673 x294) (ite x2040 (x2283 x294) (x3673 x294)))))))
(define-fun x318 ((x294 x1536)) Int (ite x758 (x3264 x294) (x2283 x294)))
(define-fun x1217 ((x294 x1536)) Int (ite (= x294 x1528) x794 (x3673 x294)))
(define-fun x2770 ((x294 x1536)) Int (ite x334 (ite x3541 (x3673 x294) (x1217 x294)) (x3673 x294)))
(define-fun x3837 ((x294 x1536)) Int (ite x2650 (x2770 x294) (ite x4859 (x3673 x294) (ite x4580 (x3673 x294) (ite x3936 (x3673 x294) (ite x2071 (x2770 x294) (x3673 x294)))))))
(define-fun x615 ((x294 x1536)) Int (ite x1519 (x3837 x294) (x2770 x294)))
(define-fun x3153 ((x294 x1536)) Int (ite x4792 (x2049 x294) (ite x440 (x318 x294) (x615 x294))))
(define-fun x819 ((x294 x1536)) Int (ite (= x294 x2440) x1820 (x1273 x294)))
(define-fun x249 ((x294 x1536)) Int (ite x4669 (ite x2249 (x1273 x294) (x819 x294)) (x1273 x294)))
(define-fun x1727 ((x294 x1536)) Int (ite x908 (x249 x294) (ite x4134 (x1273 x294) (ite x2501 (x1273 x294) (ite x1949 (x249 x294) (x1273 x294))))))
(define-fun x899 ((x294 x1536)) Int (ite x3374 (x1727 x294) (x249 x294)))
(define-fun x139 ((x294 x1536)) Int (ite (= x4676 x294) x2029 (x1273 x294)))
(define-fun x4550 ((x294 x1536)) Int (ite x985 (ite x33 (x1273 x294) (x139 x294)) (x1273 x294)))
(define-fun x1644 ((x294 x1536)) Int (ite x715 (x4550 x294) (ite x3815 (x1273 x294) (ite x4069 (x1273 x294) (ite x132 (x4550 x294) (x1273 x294))))))
(define-fun x4878 ((x294 x1536)) Int (ite x2522 (x1644 x294) (x4550 x294)))
(define-fun x921 ((x294 x1536)) Int (ite (= x519 x294) x3764 (x1273 x294)))
(define-fun x2712 ((x294 x1536)) Int (ite x4225 (ite x3263 (x1273 x294) (x921 x294)) (x1273 x294)))
(define-fun x3221 ((x294 x1536)) Int (ite x1260 (x2712 x294) (ite x2063 (x1273 x294) (ite x4748 (x1273 x294) (ite x1473 (x2712 x294) (x1273 x294))))))
(define-fun x4227 ((x294 x1536)) Int (ite x2994 (x3221 x294) (x2712 x294)))
(define-fun x3093 ((x294 x1536)) Int (ite x4868 (x899 x294) (ite x222 (x4878 x294) (x4227 x294))))
(define-fun x1289 ((x294 x1536)) Int (ite x3844 (x3153 x294) (x3093 x294)))
(define-fun x4183 ((x294 x1536)) Int (ite x1884 (x1273 x294) (ite x1993 (x1273 x294) (x1289 x294))))
(define-fun x1092 ((x294 Int)) Int (ite (= x294 x2746) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x2393 x294)))
(define-fun x544 ((x294 Int)) Int (ite (= x294 0) 1 (x590 x294)))
(define-fun x4389 ((x294 Int)) Int (ite (= x2746 x294) 1 (x1092 x294)))
(define-fun x1530 ((x294 Int)) Int (ite (= x294 0) 1 (x590 x294)))
(define-fun x1409 ((x294 Int)) Int (ite (= x2746 x294) 1 (x1092 x294)))
(define-fun x2944 ((x294 Int)) Int (ite (= 0 x294) 1 (x590 x294)))
(define-fun x3773 ((x294 Int)) Int (ite (= x2746 x294) 1 (x1092 x294)))
(define-fun x2454 ((x294 Int)) Int (ite (= 0 x294) 1 (x1330 x294)))
(define-fun x1761 ((x294 Int)) Int (ite (= 0 x294) 1 (x1330 x294)))
(define-fun x4508 ((x294 Int)) Int (ite (= 0 x294) 1 (x1330 x294)))
(define-fun x3157 ((x294 Int)) Int (ite (= 0 x294) 1 (x1330 x294)))
(define-fun x1944 ((x294 Int)) Int (ite x1150 (x4389 x294) (ite x3941 (x1409 x294) (x3773 x294))))
(define-fun x4141 ((x294 Int)) Int (ite (= x3568 x294) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x1944 x294)))
(define-fun x1302 ((x294 Int)) Int (ite (= x294 x3470) x2695 (x4141 x294)))
(define-fun x3791 ((x294 Int)) Int (ite (= x1407 x294) x2586 (x1302 x294)))
(define-fun x358 ((x294 Int)) Int (ite (= x294 0) 1 (x3791 x294)))
(define-fun x4714 ((x294 Int)) Int (ite x160 (x3791 x294) (x358 x294)))
(define-fun x2627 ((x294 Int)) Int (ite (= x3568 x294) 72570022874062638528011751457397263716769196454539065078543251854057308946432 (x4714 x294)))
(define-fun x438 ((x294 Int)) Int (ite (= x215 x294) x2586 (x2627 x294)))
(define-fun x3354 ((x294 Int)) Int (ite (= x294 x3568) 0 (x438 x294)))
(define-fun x2190 ((x294 Int)) Int (ite (= x294 x3568) 0 (x438 x294)))
(define-fun x4237 ((x294 Int)) Int (ite (= x3568 x294) 0 (x438 x294)))
(define-fun x2248 ((x294 Int)) Int (ite x2896 (ite x3149 (x438 x294) (x3354 x294)) (ite x325 (ite x4449 (x438 x294) (x2190 x294)) (ite x616 (x438 x294) (x4237 x294)))))
(define-fun x2708 ((x294 Int)) Int (ite (= x294 0) x959 (x417 x294)))
(define-fun x561 ((x294 Int)) Int (ite (= 0 x294) x2378 (x417 x294)))
(define-fun x2852 ((x294 Int)) Int (ite (= 0 x294) x2059 (x417 x294)))
(define-fun x4673 ((x294 Int)) Int (ite (= x294 0) x1087 (x756 x294)))
(define-fun x904 ((x294 Int)) Int (ite (= 0 x294) x4643 (x756 x294)))
(define-fun x3548 ((x294 Int)) Int (ite (= 0 x294) x1367 (x756 x294)))
(define-fun x4358 ((x294 x1536)) Int (ite (= x294 x1207) x727 (x1194 x294)))
(define-fun x1685 ((x294 x1536)) Int (ite (= x294 x892) 0 (x4358 x294)))
(define-fun x2414 ((x294 x1536)) Int (ite x4755 (x1685 x294) (x4358 x294)))
(define-fun x3963 ((x294 x1536)) Int (ite (= x294 x2112) x771 (x4444 x294)))
(define-fun x3885 ((x294 x1536)) Int (ite (= x294 x107) 0 (x3963 x294)))
(define-fun x4122 ((x294 x1536)) Int (ite x3780 (x3885 x294) (x3963 x294)))
(define-fun x4201 ((x294 x1536)) Int (ite (= x628 x294) x3586 (x2414 x294)))
(define-fun x3707 ((x294 x1536)) Int (ite (= x294 x4967) x403 (x4122 x294)))
(define-fun x1325 ((x294 x1536)) Int (ite (= x294 x1707) 0 (x4914 x294)))
(define-fun x1919 ((x294 x1536)) Int (ite x291 (x4914 x294) (x1325 x294)))
(define-fun x4672 ((x294 x1536)) Int (ite (= x294 x3570) x603 (x1919 x294)))
(define-fun x2115 ((x294 x1536)) Int (ite (= x3373 x294) x603 (x1919 x294)))
(define-fun x982 ((x294 x1536)) Int (ite (= x294 x814) x603 (x1919 x294)))
(define-fun x2173 ((x294 x1536)) Int (ite (= x294 x3508) x603 (x1919 x294)))
(define-fun x2008 ((x294 x1536)) Int (ite x1989 (x4672 x294) (ite x91 (x2115 x294) (ite x3122 (x982 x294) (x2173 x294)))))
(define-fun x2516 ((x294 x1536)) Int (ite x1558 (x4914 x294) (ite x276 (x1919 x294) (x2008 x294))))
(define-fun x3695 ((x294 x1536)) Int (ite (= x294 x4587) 0 (x4757 x294)))
(define-fun x1181 ((x294 x1536)) Int (ite x1229 (x4757 x294) (x3695 x294)))
(define-fun x1706 ((x294 x1536)) Int (ite (= x112 x294) x2965 (x1181 x294)))
(define-fun x2521 ((x294 x1536)) Int (ite (= x4 x294) x2965 (x1181 x294)))
(define-fun x1041 ((x294 x1536)) Int (ite (= x604 x294) x2965 (x1181 x294)))
(define-fun x4492 ((x294 x1536)) Int (ite (= x2643 x294) x2965 (x1181 x294)))
(define-fun x1923 ((x294 x1536)) Int (ite x592 (x1706 x294) (ite x2618 (x2521 x294) (ite x598 (x1041 x294) (x4492 x294)))))
(define-fun x858 ((x294 x1536)) Int (ite x501 (x4757 x294) (ite x1138 (x1181 x294) (x1923 x294))))
(define-fun x2285 ((x294 Int)) Int (ite (= x294 0) 1 (x4089 x294)))
(define-fun x3325 ((x294 Int)) Int (ite (= x294 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x349 x294)))
(define-fun x4653 ((x294 Int)) Int (ite (= x294 132) x3996 (x3325 x294)))
(define-fun x3993 ((x294 Int)) Int (ite (= 164 x294) x3097 (x4653 x294)))
(define-fun x3404 ((x294 Int)) Int (ite (= x294 196) x2541 (x3993 x294)))
(define-fun x1871 ((x294 Int)) Int (ite (= x294 0) 1 (x2 x294)))
(define-fun x402 ((x294 Int)) Int (ite (= x294 0) 1 (x2 x294)))
(define-fun x2007 ((x294 Int)) Int (ite (= x294 0) 1 (x2 x294)))
(define-fun x3426 ((x294 Int)) Int (ite (= 0 x294) 1 (x2 x294)))
(define-fun x2303 ((x294 Int)) Int (ite (= x294 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3083 x294)))
(define-fun x1777 ((x294 Int)) Int (ite (= x294 132) x3996 (x2303 x294)))
(define-fun x1975 ((x294 Int)) Int (ite (= 164 x294) x3253 (x1777 x294)))
(define-fun x1379 ((x294 Int)) Int (ite (= 196 x294) x24 (x1975 x294)))
(define-fun x1019 ((x294 Int)) Int (ite (= 0 x294) 1 (x4439 x294)))
(define-fun x4578 ((x294 Int)) Int (ite (= x294 0) 1 (x4439 x294)))
(define-fun x2386 ((x294 Int)) Int (ite (= 0 x294) 1 (x4439 x294)))
(define-fun x271 ((x294 Int)) Int (ite (= 0 x294) 1 (x4439 x294)))
(define-fun x556 ((x294 Int)) Int (ite (= x294 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x4372 x294)))
(define-fun x4822 ((x294 Int)) Int (ite (= 132 x294) x3996 (x556 x294)))
(define-fun x2763 ((x294 Int)) Int (ite (= x294 164) x696 (x4822 x294)))
(define-fun x1890 ((x294 Int)) Int (ite (= 196 x294) x2209 (x2763 x294)))
(define-fun x993 ((x294 Int)) Int (ite (= x294 0) 1 (x3816 x294)))
(define-fun x3433 ((x294 Int)) Int (ite (= x294 0) 1 (x3816 x294)))
(define-fun x836 ((x294 Int)) Int (ite (= 0 x294) 1 (x3816 x294)))
(define-fun x3479 ((x294 Int)) Int (ite (= x294 0) 1 (x3816 x294)))
(define-fun x2034 ((x294 x1536)) Int (ite (= x294 x903) x2827 (x264 x294)))
(define-fun x3259 ((x294 x1536)) Int (ite (= x2711 x294) x2827 (x3314 x294)))
(define-fun x182 ((x294 x1536)) Int (ite (= x3431 x294) 0 (x2981 x294)))
(define-fun x3769 ((x294 x1536)) Int (ite x4241 (x2981 x294) (x182 x294)))
(define-fun x1221 ((x294 x1536)) Int (ite x764 (x3314 x294) (x3259 x294)))
(define-fun x4826 ((x294 x1536)) Int (ite (= x2621 x294) 0 (x1221 x294)))
(define-fun x348 ((x294 x1536)) Int (ite x4241 (x3314 x294) (x4826 x294)))
(define-fun x4008 ((x294 x1536)) Int (ite x4241 (x264 x294) (ite x764 (x2034 x294) (x264 x294))))
(define-fun x504 ((x294 x1536)) Int (ite (= x294 x1254) x4602 (x2453 x294)))
(define-fun x3925 ((x294 x1536)) Int (ite x4241 (x2453 x294) (ite x3042 (x504 x294) (x2453 x294))))
(define-fun x3797 ((x294 x1536)) Int (ite (= x3523 x294) x4602 (x4411 x294)))
(define-fun x3453 ((x294 x1536)) Int (ite x3042 (x4411 x294) (x3797 x294)))
(define-fun x4823 ((x294 x1536)) Int (ite (= x3335 x294) 0 (x3453 x294)))
(define-fun x1736 ((x294 x1536)) Int (ite x4241 (x4411 x294) (x4823 x294)))
(define-fun x4572 ((x294 x1536)) Int (ite (= x2100 x294) x820 (x540 x294)))
(define-fun x2620 ((x294 x1536)) Int (ite (= x294 x343) x820 (x3798 x294)))
(define-fun x2286 ((x294 x1536)) Int (ite x4098 (x3798 x294) (x2620 x294)))
(define-fun x2165 ((x294 x1536)) Int (ite (= x955 x294) 0 (x2286 x294)))
(define-fun x3095 ((x294 x1536)) Int (ite x2598 (x3798 x294) (x2165 x294)))
(define-fun x4129 ((x294 x1536)) Int (ite (= x294 x3781) x1686 (x4750 x294)))
(define-fun x3682 ((x294 x1536)) Int (ite x2598 (x4750 x294) (ite x1462 (x4129 x294) (x4750 x294))))
(define-fun x4317 ((x294 x1536)) Int (ite (= x3117 x294) 0 (x3688 x294)))
(define-fun x278 ((x294 x1536)) Int (ite x2598 (x3688 x294) (x4317 x294)))
(define-fun x2327 ((x294 x1536)) Int (ite (= x294 x924) x1686 (x3181 x294)))
(define-fun x3463 ((x294 x1536)) Int (ite x1462 (x3181 x294) (x2327 x294)))
(define-fun x3087 ((x294 x1536)) Int (ite (= x2677 x294) 0 (x3463 x294)))
(define-fun x1037 ((x294 x1536)) Int (ite x2598 (x3181 x294) (x3087 x294)))
(define-fun x2125 ((x294 x1536)) Int (ite x2598 (x540 x294) (ite x4098 (x4572 x294) (x540 x294))))
(define-fun x3938 ((x294 x1536)) Int (ite (= x1872 x294) x4396 (x2189 x294)))
(define-fun x281 ((x294 x1536)) Int (ite x1818 (x2189 x294) (x3938 x294)))
(define-fun x1505 ((x294 x1536)) Int (ite (= x3088 x294) 0 (x281 x294)))
(define-fun x1823 ((x294 x1536)) Int (ite x291 (x2189 x294) (x1505 x294)))
(define-fun x3853 ((x294 x1536)) Int (ite (= x4120 x294) x2301 (x1823 x294)))
(define-fun x737 ((x294 x1536)) Int (ite (= x1550 x294) 0 (x1823 x294)))
(define-fun x3307 ((x294 x1536)) Int (ite (= x682 x294) x807 (x1823 x294)))
(define-fun x4609 ((x294 x1536)) Int (ite (= x2367 x294) x3255 (x3307 x294)))
(define-fun x3072 ((x294 x1536)) Int (ite (= x1673 x294) 0 (x1823 x294)))
(define-fun x3655 ((x294 x1536)) Int (ite (= x294 x1197) x3255 (x3072 x294)))
(define-fun x1613 ((x294 x1536)) Int (ite x1989 (x3853 x294) (ite x91 (x737 x294) (ite x3122 (x4609 x294) (x3655 x294)))))
(define-fun x382 ((x294 x1536)) Int (ite x1558 (x2189 x294) (ite x276 (x1823 x294) (x1613 x294))))
(define-fun x2136 ((x294 x1536)) Int (ite (= x2985 x294) x2527 (x3643 x294)))
(define-fun x4096 ((x294 x1536)) Int (ite x4709 (x3643 x294) (x2136 x294)))
(define-fun x4846 ((x294 x1536)) Int (ite (= x645 x294) 0 (x4096 x294)))
(define-fun x2381 ((x294 x1536)) Int (ite x291 (x3643 x294) (x4846 x294)))
(define-fun x1478 ((x294 x1536)) Int (ite (= x4561 x294) 0 (x2381 x294)))
(define-fun x1322 ((x294 x1536)) Int (ite (= x665 x294) x3255 (x1478 x294)))
(define-fun x307 ((x294 x1536)) Int (ite (= x294 x3139) 0 (x2381 x294)))
(define-fun x1397 ((x294 x1536)) Int (ite (= x1682 x294) x2759 (x2381 x294)))
(define-fun x2041 ((x294 x1536)) Int (ite (= x294 x1634) x3255 (x1397 x294)))
(define-fun x3218 ((x294 x1536)) Int (ite (= x2068 x294) x2759 (x2381 x294)))
(define-fun x654 ((x294 x1536)) Int (ite x1989 (x1322 x294) (ite x91 (x307 x294) (ite x3122 (x2041 x294) (x3218 x294)))))
(define-fun x4687 ((x294 x1536)) Int (ite x1558 (x3643 x294) (ite x276 (x2381 x294) (x654 x294))))
(define-fun x437 ((x294 x1536)) Int (ite (= x294 x2837) x2527 (x3679 x294)))
(define-fun x3779 ((x294 x1536)) Int (ite x291 (x3679 x294) (ite x4709 (x437 x294) (x3679 x294))))
(define-fun x491 ((x294 x1536)) Int (ite (= x2309 x294) x3255 (x3779 x294)))
(define-fun x4483 ((x294 x1536)) Int (ite (= x2309 x294) x3255 (x3779 x294)))
(define-fun x3792 ((x294 x1536)) Int (ite x1989 (x3779 x294) (ite x91 (x491 x294) (ite x3122 (x3779 x294) (x4483 x294)))))
(define-fun x4616 ((x294 x1536)) Int (ite x1558 (x3679 x294) (ite x276 (x3779 x294) (x3792 x294))))
(define-fun x1061 ((x294 x1536)) Int (ite (= x4325 x294) x2462 (x4616 x294)))
(define-fun x462 ((x294 x1536)) Int (ite (= x294 x1987) x2462 (x4687 x294)))
(define-fun x3894 ((x294 x1536)) Int (ite x4252 (x4687 x294) (x462 x294)))
(define-fun x2432 ((x294 x1536)) Int (ite (= x4013 x294) 0 (x3894 x294)))
(define-fun x2015 ((x294 x1536)) Int (ite x1772 (x4687 x294) (x2432 x294)))
(define-fun x361 ((x294 x1536)) Int (ite x1772 (x4616 x294) (ite x4252 (x1061 x294) (x4616 x294))))
(define-fun x4038 ((x294 x1536)) Int (ite (= x478 x294) x4396 (x3007 x294)))
(define-fun x3859 ((x294 x1536)) Int (ite x291 (x3007 x294) (ite x1818 (x4038 x294) (x3007 x294))))
(define-fun x2260 ((x294 x1536)) Int (ite (= x3489 x294) x3255 (x3859 x294)))
(define-fun x1066 ((x294 x1536)) Int (ite (= x294 x4200) x3255 (x3859 x294)))
(define-fun x2233 ((x294 x1536)) Int (ite x1989 (x2260 x294) (ite x91 (x1066 x294) (x3859 x294))))
(define-fun x1240 ((x294 x1536)) Int (ite x1558 (x3007 x294) (ite x276 (x3859 x294) (x2233 x294))))
(define-fun x4110 ((x294 x1536)) Int (ite (= x2033 x294) x3864 (x1240 x294)))
(define-fun x1027 ((x294 x1536)) Int (ite x1772 (x1240 x294) (ite x4263 (x4110 x294) (x1240 x294))))
(define-fun x2673 ((x294 x1536)) Int (ite (= x2747 x294) 0 (x2516 x294)))
(define-fun x1925 ((x294 x1536)) Int (ite x1772 (x2516 x294) (x2673 x294)))
(define-fun x3725 ((x294 x1536)) Int (ite (= x294 x4612) x3864 (x382 x294)))
(define-fun x3041 ((x294 x1536)) Int (ite x4263 (x382 x294) (x3725 x294)))
(define-fun x1121 ((x294 x1536)) Int (ite (= x4443 x294) 0 (x3041 x294)))
(define-fun x3278 ((x294 x1536)) Int (ite x1772 (x382 x294) (x1121 x294)))
(define-fun x4218 ((x294 x1536)) Int (ite (= x294 x3398) x1896 (x309 x294)))
(define-fun x4611 ((x294 x1536)) Int (ite x674 (x309 x294) (x4218 x294)))
(define-fun x1501 ((x294 x1536)) Int (ite (= x2828 x294) 0 (x4611 x294)))
(define-fun x2180 ((x294 x1536)) Int (ite x1229 (x309 x294) (x1501 x294)))
(define-fun x3248 ((x294 x1536)) Int (ite (= x3564 x294) x2352 (x2180 x294)))
(define-fun x4504 ((x294 x1536)) Int (ite (= x294 x3235) 0 (x2180 x294)))
(define-fun x2844 ((x294 x1536)) Int (ite (= x294 x887) x3659 (x2180 x294)))
(define-fun x4960 ((x294 x1536)) Int (ite (= x2062 x294) x3255 (x2844 x294)))
(define-fun x4416 ((x294 x1536)) Int (ite (= x2916 x294) 0 (x2180 x294)))
(define-fun x3896 ((x294 x1536)) Int (ite (= x294 x2982) x3255 (x4416 x294)))
(define-fun x3793 ((x294 x1536)) Int (ite x592 (x3248 x294) (ite x2618 (x4504 x294) (ite x598 (x4960 x294) (x3896 x294)))))
(define-fun x4507 ((x294 x1536)) Int (ite x501 (x309 x294) (ite x1138 (x2180 x294) (x3793 x294))))
(define-fun x1719 ((x294 x1536)) Int (ite (= x294 x2106) x3547 (x3824 x294)))
(define-fun x4473 ((x294 x1536)) Int (ite x1429 (x3824 x294) (x1719 x294)))
(define-fun x136 ((x294 x1536)) Int (ite (= x3980 x294) 0 (x4473 x294)))
(define-fun x1172 ((x294 x1536)) Int (ite x1229 (x3824 x294) (x136 x294)))
(define-fun x3244 ((x294 x1536)) Int (ite (= x294 x2753) 0 (x1172 x294)))
(define-fun x874 ((x294 x1536)) Int (ite (= x294 x1764) x3255 (x3244 x294)))
(define-fun x719 ((x294 x1536)) Int (ite (= x3454 x294) 0 (x1172 x294)))
(define-fun x4205 ((x294 x1536)) Int (ite (= x4553 x294) x2950 (x1172 x294)))
(define-fun x2259 ((x294 x1536)) Int (ite (= x1663 x294) x3255 (x4205 x294)))
(define-fun x2592 ((x294 x1536)) Int (ite (= x2925 x294) x2950 (x1172 x294)))
(define-fun x4075 ((x294 x1536)) Int (ite x592 (x874 x294) (ite x2618 (x719 x294) (ite x598 (x2259 x294) (x2592 x294)))))
(define-fun x3971 ((x294 x1536)) Int (ite x501 (x3824 x294) (ite x1138 (x1172 x294) (x4075 x294))))
(define-fun x2571 ((x294 x1536)) Int (ite (= x2385 x294) x3547 (x1801 x294)))
(define-fun x4704 ((x294 x1536)) Int (ite x1229 (x1801 x294) (ite x1429 (x2571 x294) (x1801 x294))))
(define-fun x4539 ((x294 x1536)) Int (ite (= x1774 x294) x3255 (x4704 x294)))
(define-fun x1914 ((x294 x1536)) Int (ite (= x1774 x294) x3255 (x4704 x294)))
(define-fun x1621 ((x294 x1536)) Int (ite x592 (x4704 x294) (ite x2618 (x4539 x294) (ite x598 (x4704 x294) (x1914 x294)))))
(define-fun x4751 ((x294 x1536)) Int (ite x501 (x1801 x294) (ite x1138 (x4704 x294) (x1621 x294))))
(define-fun x4630 ((x294 x1536)) Int (ite (= x2490 x294) x221 (x4751 x294)))
(define-fun x573 ((x294 x1536)) Int (ite (= x920 x294) x221 (x3971 x294)))
(define-fun x1698 ((x294 x1536)) Int (ite x2888 (x3971 x294) (x573 x294)))
(define-fun x3680 ((x294 x1536)) Int (ite (= x78 x294) 0 (x1698 x294)))
(define-fun x1566 ((x294 x1536)) Int (ite x4276 (x3971 x294) (x3680 x294)))
(define-fun x533 ((x294 x1536)) Int (ite (= x1710 x294) x2428 (x4507 x294)))
(define-fun x1776 ((x294 x1536)) Int (ite x3085 (x4507 x294) (x533 x294)))
(define-fun x2237 ((x294 x1536)) Int (ite (= x1817 x294) 0 (x1776 x294)))
(define-fun x4072 ((x294 x1536)) Int (ite x4276 (x4507 x294) (x2237 x294)))
(define-fun x2277 ((x294 x1536)) Int (ite x4276 (x4751 x294) (ite x2888 (x4630 x294) (x4751 x294))))
(define-fun x3999 ((x294 x1536)) Int (ite (= x421 x294) x1896 (x3060 x294)))
(define-fun x2743 ((x294 x1536)) Int (ite x1229 (x3060 x294) (ite x674 (x3999 x294) (x3060 x294))))
(define-fun x259 ((x294 x1536)) Int (ite (= x294 x766) x3255 (x2743 x294)))
(define-fun x2601 ((x294 x1536)) Int (ite (= x294 x335) x3255 (x2743 x294)))
(define-fun x3768 ((x294 x1536)) Int (ite x592 (x259 x294) (ite x2618 (x2601 x294) (x2743 x294))))
(define-fun x3633 ((x294 x1536)) Int (ite x501 (x3060 x294) (ite x1138 (x2743 x294) (x3768 x294))))
(define-fun x302 ((x294 x1536)) Int (ite (= x294 x4872) x2428 (x3633 x294)))
(define-fun x969 ((x294 x1536)) Int (ite x4276 (x3633 x294) (ite x3085 (x302 x294) (x3633 x294))))
(define-fun x244 ((x294 x1536)) Int (ite (= x4151 x294) 0 (x858 x294)))
(define-fun x1247 ((x294 x1536)) Int (ite x4276 (x858 x294) (x244 x294)))
(define-fun x298 ((x294 Int)) Int (ite (= x294 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x851 x294)))
(define-fun x2420 ((x294 Int)) Int (ite (= 132 x294) x3996 (x298 x294)))
(define-fun x3960 ((x294 Int)) Int (ite (= 164 x294) x3097 (x2420 x294)))
(define-fun x642 ((x294 Int)) Int (ite (= 196 x294) x2075 (x3960 x294)))
(define-fun x1060 ((x294 Int)) Int (ite (= x294 0) 1 (x4076 x294)))
(define-fun x2589 ((x294 Int)) Int (ite (= x294 0) 1 (x4076 x294)))
(define-fun x1447 ((x294 Int)) Int (ite (= 0 x294) 1 (x4076 x294)))
(define-fun x3678 ((x294 Int)) Int (ite (= 0 x294) 1 (x4076 x294)))
(define-fun x248 ((x294 Int)) Int (ite (= x294 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3901 x294)))
(define-fun x2807 ((x294 Int)) Int (ite (= x294 132) x3996 (x248 x294)))
(define-fun x3498 ((x294 Int)) Int (ite (= x294 164) x3253 (x2807 x294)))
(define-fun x3743 ((x294 Int)) Int (ite (= x294 196) x3158 (x3498 x294)))
(define-fun x2831 ((x294 Int)) Int (ite (= 0 x294) 1 (x815 x294)))
(define-fun x4576 ((x294 Int)) Int (ite (= 0 x294) 1 (x815 x294)))
(define-fun x2939 ((x294 Int)) Int (ite (= x294 0) 1 (x815 x294)))
(define-fun x3715 ((x294 Int)) Int (ite (= x294 0) 1 (x815 x294)))
(define-fun x3022 ((x294 Int)) Int (ite (= 128 x294) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x4534 x294)))
(define-fun x782 ((x294 Int)) Int (ite (= x294 132) x3996 (x3022 x294)))
(define-fun x1729 ((x294 Int)) Int (ite (= 164 x294) x696 (x782 x294)))
(define-fun x2072 ((x294 Int)) Int (ite (= 196 x294) x2715 (x1729 x294)))
(define-fun x3043 ((x294 Int)) Int (ite (= 0 x294) 1 (x4230 x294)))
(define-fun x1082 ((x294 Int)) Int (ite (= 0 x294) 1 (x4230 x294)))
(define-fun x2819 ((x294 Int)) Int (ite (= 0 x294) 1 (x4230 x294)))
(define-fun x4927 ((x294 Int)) Int (ite (= x294 0) 1 (x4230 x294)))
(define-fun x3132 ((x294 Int)) Int (ite (= 128 x294) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x385 x294)))
(define-fun x2678 ((x294 Int)) Int (ite (= x294 132) x3996 (x3132 x294)))
(define-fun x2104 ((x294 Int)) Int (ite (= x294 164) x3097 (x2678 x294)))
(define-fun x4828 ((x294 Int)) Int (ite (= 196 x294) x2586 (x2104 x294)))
(define-fun x3693 ((x294 x1536)) Int (ite (= x294 x3165) x2444 (x3755 x294)))
(define-fun x3854 ((x294 x1536)) Int (ite (= x545 x294) x783 (x4183 x294)))
(define-fun x4745 ((x294 x1536)) Int (ite x160 (x4183 x294) (x3854 x294)))
(define-fun x3922 ((x294 Int)) Int (ite (= 0 x294) 1 (x4337 x294)))
(define-fun x4172 ((x294 x1536)) Int (ite (= x294 x2384) x1894 (x2328 x294)))
(define-fun x2446 ((x294 x1536)) Int (ite (= x294 x1400) x486 (x4172 x294)))
(define-fun x4107 ((x294 Int)) Int (ite (= 0 x294) 1 (x4337 x294)))
(define-fun x4624 ((x294 x1536)) Int (ite (= x2373 x294) x990 (x3610 x294)))
(define-fun x3998 ((x294 Int)) Int (ite (= 0 x294) 1 (x4337 x294)))
(define-fun x550 ((x294 x1536)) Int (ite (= x294 x2211) x2137 (x1912 x294)))
(define-fun x1281 ((x294 Int)) Int (ite (= 0 x294) 1 (x4337 x294)))
(define-fun x2495 ((x294 Int)) Int (ite (= 128 x294) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2449 x294)))
(define-fun x1140 ((x294 Int)) Int (ite (= 132 x294) x3996 (x2495 x294)))
(define-fun x179 ((x294 Int)) Int (ite (= 164 x294) x3253 (x1140 x294)))
(define-fun x3245 ((x294 Int)) Int (ite (= 196 x294) x2586 (x179 x294)))
(define-fun x1814 ((x294 x1536)) Int (ite (= x1158 x294) x4148 (x3755 x294)))
(define-fun x4907 ((x294 Int)) Int (ite (= 0 x294) 1 (x4047 x294)))
(define-fun x1956 ((x294 x1536)) Int (ite (= x294 x4091) x2962 (x2328 x294)))
(define-fun x1392 ((x294 Int)) Int (ite (= x294 0) 1 (x4047 x294)))
(define-fun x286 ((x294 x1536)) Int (ite (= x3645 x294) x3933 (x3610 x294)))
(define-fun x2207 ((x294 x1536)) Int (ite (= x4032 x294) x3370 (x286 x294)))
(define-fun x411 ((x294 Int)) Int (ite (= x294 0) 1 (x4047 x294)))
(define-fun x3966 ((x294 x1536)) Int (ite (= x294 x565) x888 (x1912 x294)))
(define-fun x1920 ((x294 Int)) Int (ite (= x294 0) 1 (x4047 x294)))
(define-fun x3199 ((x294 Int)) Int (ite (= x294 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x4117 x294)))
(define-fun x4044 ((x294 Int)) Int (ite (= 132 x294) x3996 (x3199 x294)))
(define-fun x1276 ((x294 Int)) Int (ite (= 164 x294) x696 (x4044 x294)))
(define-fun x4161 ((x294 Int)) Int (ite (= x294 196) x2586 (x1276 x294)))
(define-fun x3179 ((x294 x1536)) Int (ite (= x294 x3605) x4807 (x3755 x294)))
(define-fun x3375 ((x294 Int)) Int (ite (= 0 x294) 1 (x3481 x294)))
(define-fun x867 ((x294 x1536)) Int (ite (= x1506 x294) x3861 (x2328 x294)))
(define-fun x1994 ((x294 Int)) Int (ite (= 0 x294) 1 (x3481 x294)))
(define-fun x2755 ((x294 x1536)) Int (ite (= x3135 x294) x3843 (x3610 x294)))
(define-fun x1105 ((x294 Int)) Int (ite (= 0 x294) 1 (x3481 x294)))
(define-fun x470 ((x294 x1536)) Int (ite (= x294 x2785) x395 (x1912 x294)))
(define-fun x3591 ((x294 x1536)) Int (ite (= x294 x3649) x4441 (x470 x294)))
(define-fun x725 ((x294 Int)) Int (ite (= 0 x294) 1 (x3481 x294)))
(define-fun x2955 ((x294 x1536)) Int (ite x1600 (x2015 x294) (x2381 x294)))
(define-fun x537 ((x294 x1536)) Int (ite x3944 (x1566 x294) (x1172 x294)))
(define-fun x2591 ((x294 Int)) Int (ite (= 0 x294) 0 (x3937 x294)))
(define-fun x4331 ((x294 Int)) Int (ite (= 0 x294) 0 (x3937 x294)))
(define-fun x2174 ((x294 Int)) Int (ite (= x294 0) 0 (x3937 x294)))
(define-fun x1360 ((x294 Int)) Int (ite (= 0 x294) 0 (x1294 x294)))
(define-fun x3046 ((x294 Int)) Int (ite (= 0 x294) 0 (x1294 x294)))
(define-fun x1430 ((x294 Int)) Int (ite (= x294 0) 0 (x1294 x294)))
(define-fun x2872 ((x294 x1536)) Int (ite x3200 (x1912 x294) (ite x582 (x1912 x294) (ite x531 (x1912 x294) (ite x3417 (x1912 x294) (ite x4581 (x470 x294) (x1912 x294)))))))
(define-fun x2450 ((x294 x1536)) Int (ite x252 (x1912 x294) (ite x4312 (x1912 x294) (ite x4063 (x1912 x294) (ite x730 (x2872 x294) (x3591 x294))))))
(define-fun x2989 ((x294 Int)) Int (ite (= x294 0) 0 (x2732 x294)))
(define-fun x626 ((x294 x1536)) Int (ite x570 (x3610 x294) (ite x2469 (x3610 x294) (ite x1483 (x3610 x294) (ite x4367 (x3610 x294) (ite x2791 (x286 x294) (x3610 x294)))))))
(define-fun x915 ((x294 x1536)) Int (ite x2131 (x3610 x294) (ite x3207 (x3610 x294) (ite x3010 (ite x6 (x626 x294) (x2207 x294)) (x3610 x294)))))
(define-fun x1526 ((x294 Int)) Int (ite (= x294 0) 0 (x2732 x294)))
(define-fun x1170 ((x294 x1536)) Int (ite x4597 (x2328 x294) (ite x958 (x2328 x294) (ite x2640 (x2328 x294) (ite x607 (x2328 x294) (ite x1110 (x4172 x294) (x2328 x294)))))))
(define-fun x4061 ((x294 x1536)) Int (ite x2081 (x2328 x294) (ite x4468 (ite x950 (x1170 x294) (x2446 x294)) (x2328 x294))))
(define-fun x4364 ((x294 Int)) Int (ite (= 0 x294) 0 (x2732 x294)))
(define-fun x4288 ((x294 Int)) Int (ite x3263 (x3816 x294) (x993 x294)))
(define-fun x1074 ((x294 Int)) Int (ite x538 (x3816 x294) (x3433 x294)))
(define-fun x3351 ((x294 Int)) Int (ite x1185 (x3816 x294) (x836 x294)))
(define-fun x2787 ((x294 Int)) Int (ite x2312 (x3816 x294) (x3479 x294)))
(define-fun x1186 ((x294 Int)) Int (ite x4225 (x4288 x294) (ite x1231 (x1074 x294) (ite x4464 (x3351 x294) (x2787 x294)))))
(define-fun x2829 ((x294 Int)) Int (ite x33 (x4439 x294) (x1019 x294)))
(define-fun x1484 ((x294 Int)) Int (ite x1778 (x4439 x294) (x4578 x294)))
(define-fun x3520 ((x294 Int)) Int (ite x1482 (x4439 x294) (x2386 x294)))
(define-fun x3131 ((x294 Int)) Int (ite x1897 (x4439 x294) (x271 x294)))
(define-fun x1257 ((x294 Int)) Int (ite x985 (x2829 x294) (ite x27 (x1484 x294) (ite x3658 (x3520 x294) (x3131 x294)))))
(define-fun x1615 ((x294 Int)) Int (ite x2249 (x2 x294) (x1871 x294)))
(define-fun x374 ((x294 Int)) Int (ite x4442 (x2 x294) (x402 x294)))
(define-fun x852 ((x294 Int)) Int (ite x1978 (x2 x294) (x2007 x294)))
(define-fun x1515 ((x294 Int)) Int (ite x4150 (x2 x294) (x3426 x294)))
(define-fun x4085 ((x294 Int)) Int (ite x4669 (x1615 x294) (ite x236 (x374 x294) (ite x1829 (x852 x294) (x1515 x294)))))
(define-fun x3965 ((x294 Int)) Int (ite x3541 (x4230 x294) (x3043 x294)))
(define-fun x2520 ((x294 Int)) Int (ite x4621 (x4230 x294) (x1082 x294)))
(define-fun x3765 ((x294 Int)) Int (ite x4143 (x4230 x294) (x2819 x294)))
(define-fun x4740 ((x294 Int)) Int (ite x2264 (x4230 x294) (x4927 x294)))
(define-fun x4455 ((x294 Int)) Int (ite x334 (x3965 x294) (ite x3565 (x2520 x294) (ite x3166 (x3765 x294) (x4740 x294)))))
(define-fun x1100 ((x294 Int)) Int (ite x1114 (x815 x294) (x2831 x294)))
(define-fun x4722 ((x294 Int)) Int (ite x1145 (x815 x294) (x4576 x294)))
(define-fun x1464 ((x294 Int)) Int (ite x171 (x815 x294) (x2939 x294)))
(define-fun x4090 ((x294 Int)) Int (ite x3929 (x815 x294) (x3715 x294)))
(define-fun x977 ((x294 Int)) Int (ite x4418 (x1100 x294) (ite x1480 (x4722 x294) (ite x1124 (x1464 x294) (x4090 x294)))))
(define-fun x4570 ((x294 Int)) Int (ite x3521 (x4076 x294) (x1060 x294)))
(define-fun x2326 ((x294 Int)) Int (ite x3445 (x4076 x294) (x2589 x294)))
(define-fun x419 ((x294 Int)) Int (ite x228 (x4076 x294) (x1447 x294)))
(define-fun x2794 ((x294 Int)) Int (ite x4689 (x4076 x294) (x3678 x294)))
(define-fun x2979 ((x294 Int)) Int (ite x100 (x4570 x294) (ite x3628 (x2326 x294) (ite x1296 (x419 x294) (x2794 x294)))))
(define-fun x3133 ((x294 Int)) Int (ite (= 0 x294) 1 (x2679 x294)))
(define-fun x4031 ((x294 x1536)) Int (ite (= x294 (x2758 x3996)) x3973 (x2666 x294)))
(define-fun x2933 ((x3892 Int) (x834 Int) (x2168 Int) (x3334 Int)) Bool (=> (and (<= x3892 x2168) (<= x834 x3334) (<= 0 x3892) (>= x834 0)) (<= (x1807 x3892 x834) (x1807 x2168 x3334))))
(define-fun x157 ((x3892 Int) (x834 Int) (x2168 Int) (x3334 Int)) Bool (=> (= x2168 x3892) (= (x1807 x3892 (- x834 x3334)) (- (x1807 x3892 x834) (x1807 x2168 x3334)))))
(define-fun x2318 ((x3892 Int)) Bool (=> (and (not (= 4294967296 x3892)) (not (= x3892 2835717307)) (not (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x3892)) (not (= 1857877511 x3892)) (not (= 989455977 x3892)) (not (= 1461501637330902918203684832716283019655932542976 x3892)) (not (= 242558722 x3892)) (not (= x3892 1856199391)) (not (= x3892 35417553099779373699389112480655434059402432070290151981503827724506945814528)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3892)) (not (= x3892 599290589)) (not (= x3892 2134560854)) (not (= 18446744073709551615 x3892)) (not (= 2858086653 x3892)) (not (= 2929553584 x3892)) (not (= 1461501637330902918203684832716283019655932542975 x3892)) (not (= 2030502250 x3892)) (not (= x3892 3583811254)) (not (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 x3892)) (not (= 2678788150 x3892)) (not (= 1313710058 x3892)) (not (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x3892)) (not (= 2217467699 x3892)) (not (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x3892)) (not (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 x3892)) (not (= 2796547477 x3892)) (not (= 1038142104 x3892)) (> x3892 10000) (not (= x3892 1000000000000000000)) (not (= 2236579515 x3892)) (not (= x3892 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= 1865448899 x3892)) (not (= 405663989 x3892)) (not (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x3892)) (not (= x3892 76833804140862540057647519496925185374644862498684814347804924264468996685824)) (not (= x3892 2362143243)) (not (= x3892 115792089237316195423570985008687907853269984665640564039457)) (not (= x3892 26959946667150639794667015087019630673637144422540572481103610249215)) (not (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x3892)) (not (= x3892 2245473101)) (not (= x3892 178855970)) (not (= x3892 10742207464693106059581744854972325794081737850190833080250671788038469713920)) (not (= x3892 547091486)) (not (= x3892 1466279372)) (not (= x3892 75483562)) (not (= x3892 2691771752)) (not (= 157198259 x3892)) (not (= 988262939 x3892)) (not (= x3892 2023533118)) (not (= x3892 16156842317565293874272834530371880720966471053262404558597773956279093428224)) (not (= 117300739 x3892)) (not (= 398450620 x3892)) (not (= 3842108676 x3892)) (not (= x3892 24044834009420335638544845215851342251227478490780828673611325350056707489792))) (not ((_ is x1116) (x2758 x3892)))))
(assert (= (or x1138 x1129) x3458))
(assert (x4620 x2323))
(assert (= (+ (x4681 x1335) 2) (x4681 (x1008 x1335 2))))
(assert (x4620 x776))
(assert (x3063 x3983))
(assert (= x2803 (and x1551 x2636)))
(assert (x4620 x1090))
(assert (= x1717 (and x3578 x2143)))
(assert (= (or x4496 x1986 x1961 x4529) x3535))
(assert (= (and x5 x3367) x3812))
(assert (x2538 x2227))
(assert (= (and (not x2477) x1034) x2382))
(assert (x3867 x1612))
(assert (=> (<= x399 10000) (= (x1116 x399) (x2758 x399))))
(assert (= (+ (x4681 x4178) 2) (x4681 (x1008 x4178 2))))
(assert (x4620 x475))
(assert (x4620 x2588))
(assert (=> (<= x1203 10000) (= (x2758 x1203) (x1116 x1203))))
(assert (= x3849 (=> (and (= x3945 x3389) (= x4391 x1165)) x3908)))
(assert (x4640 x4659 x3742))
(assert (x4620 x3517))
(assert (= x464 (and (not x3599) x4738)))
(assert (x4620 x844))
(assert (= x4669 (or x4744 x2249)))
(assert (= x105 (or x985 x3658 x27 x4144)))
(assert (= (and x4346 x1658) x891))
(assert (x4620 x2095))
(assert (= x193 (and x911 x541)))
(assert (= (and x1667 x3024) x4597))
(assert (= (=> (and (= x2401 x3775) (= x929 x10)) x3868) x151))
(assert (= (and x811 (not x655)) x1898))
(assert (x2318 x895))
(assert (x4620 x4415))
(assert (x4620 x771))
(assert (= (=> (and (= x4866 x2117) (= x2116 x4863)) x3653) x638))
(assert (x4620 x4806))
(assert (x4620 x375))
(assert (x4620 x124))
(assert (x4620 x1309))
(assert (= x1716 (and (not x1399) x1299)))
(assert (x2318 x388))
(assert (x4620 x1125))
(assert (x2538 x3691))
(assert (= (and x2255 x1509) x161))
(assert (= (x4681 (x2758 x762)) x762))
(assert (x4620 x3961))
(assert (x4620 x1595))
(assert (x4620 x1104))
(assert (x4620 x404))
(assert (x4620 x230))
(assert (x4620 x2349))
(assert (= x4403 (=> (and (= 0 x1177) (= x685 x3177)) x2092)))
(assert (= (and x3560 x508) x995))
(assert (= (+ (x4681 x1929) 2) (x4681 (x1008 x1929 2))))
(assert (= (and x2477 x1034) x598))
(assert (x2318 x1889))
(assert (x4620 x1654))
(assert (x4620 x1144))
(assert (=> (<= x2527 10000) (= (x1116 x2527) (x2758 x2527))))
(assert (x4620 x2769))
(assert (= (and x1831 x507) x4652))
(assert (x4620 x1548))
(assert (= x1026 (and (not x3232) x2397)))
(assert (=> (>= 10000 x3407) (= (x2758 x3407) (x1116 x3407))))
(assert (x2318 x4921))
(assert (= x2919 (and (not x744) x1122)))
(assert (x2318 x762))
(assert (= x780 (and (not x1304) x3156)))
(assert (x4620 x106))
(assert (x4620 x3983))
(assert (x4620 x1453))
(assert (= (and (not x119) x2226) x4781))
(assert (= (and (not x4451) x2995) x4501))
(assert (= x4755 (and x1200 (not x4395))))
(assert (x4620 x3289))
(assert (x4620 x3947))
(assert (x4620 x849))
(assert (x4620 x529))
(assert (=> (<= x3553 10000) (= (x2758 x3553) (x1116 x3553))))
(assert (x4620 x3566))
(assert (= (and (=> (and (and (= x2978 x2323) (= 0 x702)) (not x3550)) x1695) (=> (and x3550 (and (or (and x4646 (and (= (x4810 (x2758 x2383) x1414 0) x1340) (= x1228 (not x3730)) (= x3730 (> x1403 x3711)) (= x3711 (x3769 x2976)) (= x2976 (x1008 x1340 2)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3711) (<= 0 x3711))) (and (= x4646 x1228) (not x4646))) (and (> 1461501637330902918203684832716283019655932542976 x2383) (= x2383 (x348 x4409)) (>= x2383 0) (= (x4810 (x2758 x2323) x1414 0) x939) (= (x1008 x939 1) x4409) (>= 1461501637330902918203684832716283019655932542975 x2383) (= (ite (> x882 1) (not (= x2383 0)) (> x882 1)) x4646)))) x2523)) x22))
(assert (= x4815 (x4681 (x2758 x4815))))
(assert (= (x4681 (x2758 x2428)) x2428))
(assert (x4620 x938))
(assert (x4620 x3158))
(assert (= x2563 (and (not x4222) x1267)))
(assert (x4620 x2811))
(assert (x4620 x3872))
(assert (x4620 x487))
(assert (= x2535 (and (not x4662) x1578)))
(assert (x4620 x1225))
(assert (x4620 x4521))
(assert (x4620 x4832))
(assert (= (x4681 (x2758 x4655)) x4655))
(assert (x4620 x3243))
(assert (x4620 x2776))
(assert (= (and x3005 x769) x1600))
(assert (x2318 x500))
(assert (x4620 x3081))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x4681 (x1116 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (x4620 x2481))
(assert (x4620 x1669))
(assert (x4620 x2265))
(assert (=> (<= x4149 10000) (= (x1116 x4149) (x2758 x4149))))
(assert (and (and (= (- (* (- x2586 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x2586 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x2586 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x2586) (- (* x2586 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2586))) (= (x1807 1000000000000000000 (- x2586 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x2586 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x2586) (x2296 1000000000000000000 x2586) (= (x1807 1000000000000000000 x2586) (* x2586 1000000000000000000)) (x4064 1000000000000000000 x2586) (x218 1000000000000000000 x2586) (x1213 1000000000000000000 x2586)))
(assert (= (and x4805 x1331) x2232))
(assert (= (+ 1 (x4681 x887)) (x4681 (x1008 x887 1))))
(assert (= 2858086653 (x4681 (x1116 2858086653))))
(assert (x4620 x1370))
(assert (x4244 x2003))
(assert (x4620 x1852))
(assert (= (and x3038 x4261) x1864))
(assert (x4620 x680))
(assert (= (and x1026 (not x4204)) x3436))
(assert (x4620 x140))
(assert (=> (<= x1926 10000) (= (x2758 x1926) (x1116 x1926))))
(assert (x4620 x3302))
(assert (x4620 x3270))
(assert (x4620 x3019))
(assert (= x3010 (or x3443 x6)))
(assert (= x1971 (and x4614 x1010)))
(assert (x4620 x4711))
(assert (=> (<= x1003 10000) (= (x2758 x1003) (x1116 x1003))))
(assert (= (and x4240 (not x4174)) x510))
(assert (x4620 x4566))
(assert (= (x4681 (x1008 x1335 1)) (+ (x4681 x1335) 1)))
(assert (x4620 x3719))
(assert (x4620 x965))
(assert (= (x4681 (x1008 x511 2)) (+ (x4681 x511) 2)))
(assert (x4620 x581))
(assert (=> (<= x1353 10000) (= (x1116 x1353) (x2758 x1353))))
(assert (=> (>= 10000 x1346) (= (x1116 x1346) (x2758 x1346))))
(assert (x4640 x4574 x2227))
(assert (x4620 x3902))
(assert (= x1203 (x4681 (x2758 x1203))))
(assert (x4620 x2245))
(assert (= x4341 (and x4961 x2700)))
(assert (= (=> (and (= (x2066 (+ x2058 x3243)) x572) (= (> x1779 0) x2762) (= (x2066 (+ 31 x3163)) x2153) (not (or (> x3163 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x3163) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3163))))) (= (x2022 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2153) x2058) (= (ite (> x4021 x4891) x4891 x4021) x1779) (= (x4702 x3243) x4021) (not (= x4908 0))) (and (=> (and (and (<= 0 x4415) (>= 1461501637330902918203684832716283019655932542975 x4415) (< x4415 1461501637330902918203684832716283019655932542976) (= x4613 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (= (< 0 x135) x1512) (= (x672 (- x4613 x4415)) x135)) x2762) (and (=> (and x1512 (and (and x3493 (and (= x3500 (x3612 (x2758 x2424))) (= x2695 x2784) (= 68 x4951) (not (< x4951 4)) (= x130 4238056678808933066457772256406219440718756300954938350892797929791311314944) (not (= 117300739 x3899)) (< 0 x3500) (= x1779 x3249) (= x3899 157198259) (= x3381 (or (and (> 64 x2881) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2881) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2881))) (= (x672 (- x4951 4)) x2881) (< x3899 599290589) (> 1466279372 x3899))) (and (= (= x2424 x2951) x3493) (= x1594 (x2066 (+ 4 x572))) (= (x2066 (+ 32 x1594)) x3420)))) (and (=> (and (not x3381) (and (= (= x4795 x2695) x452) (= x4795 (x2022 1461501637330902918203684832716283019655932542975 x2695)))) (and (=> (not x452) x3487) (=> (and x452 (and (= (x4810 (x2758 x671) x1499 0) x1275) (= x1499 (x4810 (x2758 x3996) (x1116 2) 0)) (= x3895 1) (= x1314 x3249) (= x3703 32) (= (x2022 1461501637330902918203684832716283019655932542975 x2784) x671))) x2940))) (=> x3381 x3487))) (=> (and (not x1512) (and (<= 0 x2975) x4257 (= (x2022 1461501637330902918203684832716283019655932542975 x2695) x1893) (>= 1461501637330902918203684832716283019655932542975 x2975) (not (= 0 x4647)) x900 (= x2822 (x3782 (x2758 x1893))) (= (x3612 (x2758 x2975)) x4647) (< (+ x1779 x2822) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x4257 (<= x1779 x1497)) (= (x3296 (x2758 x3996)) x845) (= x1497 (x3296 (x2758 x3996))) (= (- x845 x1779) x4043) (= x966 (x2066 (+ x1779 x2822))) (not (= 0 x4046)) (= x900 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1943 x1779))) (= 4 x4363) (= (= x1893 x3097) x3620) (> 4294967296 x3161) (> 1461501637330902918203684832716283019655932542976 x2975) (= (x2066 (+ x572 4)) x3911) (= x4046 (x3612 (x2758 x1893))) (= x1943 (x3296 (x2758 x1893))))) (and (=> (and (and (= x1426 35417553099779373699389112480655434059402432070290151981503827724506945814528) (> x1918 0) (= x1953 x4363) (= (= x1779 0) x3413) (= (x3612 (x2758 x3097)) x1918) (= 4 x1953)) x3620) (and (=> (and (= x1840 x4127) (not x3413)) x869) (=> (and x3413 (and (not (> 4 x1953)) (= (x2957 x986) x1585) (= x3222 (< x1585 x2541)) (not (= x634 1038142104)) (<= 0 x2541) (<= x1585 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4810 (x2758 x3996) (x1116 6) 0) x4844) (not (= 989455977 x634)) (> 1856199391 x634) (= x986 (x4810 (x2758 x3996) (x1116 6) 0)) (>= x1585 0) (= x634 1313710058) (not (= x634 988262939)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2541) (= x2541 (x2957 x4844)) (< x634 2217467699) (not (< x634 988262939)))) (and (=> (and (and (= x1002 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2541))) (<= 0 x1840) (<= x1840 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3531 (x672 (- x1585 x2541))) (= x4600 (< x1002 x1840))) (not x3222)) (and (=> (and (= x1840 x4127) x4600) x869) (=> (and (not x4600) (and (= (= x959 x2424) x2204) (> 1461501637330902918203684832716283019655932542976 x959) (= x4650 (x2066 (+ x2541 x1840))) (>= x959 0) (= (x2066 (+ x1840 x2541)) x2387) (>= 1461501637330902918203684832716283019655932542975 x959) (= x2365 128))) (and (=> (and (not x2204) (= (= x959 x3097) x553)) (and (=> (and (= (= x3253 x959) x393) (not x553)) (and (=> (and x393 (and (not (= x4249 405663989)) (= x1175 x2541) (= x4817 (x3612 (x2758 x3253))) (= x3996 x3524) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x383) (= x906 x3097) (< x4249 988262939) (not (= x4249 547091486)) (< 0 x4817) (not (> 405663989 x4249)) (= (x672 (- x3698 4)) x2525) (= x3698 100) (= x4249 599290589) (not (< x3698 4)) (= x3204 (or (> x2525 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2525) true) (> 96 x2525)))) (> 2217467699 x4249) (= x3698 100))) (and (=> x3204 x2674) (=> (and (not x3204) (and (= x2512 x3524) (= (= x3996 x3524) x3231))) (and (=> (not x3231) x2674) (=> (and x3231 (and (= x906 x3114) (= x4541 (= x906 x3097)))) (and (=> (and x4541 (and (<= x2176 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4810 (x2758 x3524) (x1116 5) 0) x209) (= x4399 x1175) (= (x4100 x209) x2176) (<= 0 x2176) (= (< x2176 x2541) x308))) (and (=> (and (not x308) (and (= (x4810 (x2758 x3524) (x1116 5) 0) x4004) (= x3804 (x4100 x4004)) (>= x3804 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3804) (= (> x1175 x3804) x2853))) (and (=> (and (and (= x1549 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1175))) (= (> x32 x1549) x88) (= (x4810 (x2758 x906) (x1116 5) 0) x600) (= (x672 (- x3804 x1175)) x2958) (= (x57 x600) x32) (>= x32 0) (<= x32 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x2853)) (and (=> (and (and (= 32 x2866) (= (x2066 (+ x32 x1175)) x3315) (= x3571 1) (= x1833 1)) (not x88)) x1431) (=> x88 x2674))) (=> x2853 x2674))) (=> x308 x2674))) (=> (not x4541) x2674))))))) (=> (and (and (and x2628 (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2867) (= x180 x2541) (not (< x941 4)) (not (= x3187 547091486)) (not (= x3187 405663989)) (= x1646 (x672 (- x941 4))) (= x3654 (x3612 (x2758 x696))) (= x3000 (or (and (= true (<= x1646 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x1646)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1646))) (= x938 x3996) (< x3187 988262939) (= x941 100) (< 0 x3654) (= 100 x941) (= x3786 x3097) (< x3187 2217467699) (= x3187 599290589) (not (> 405663989 x3187)))) (= (= x959 x696) x2628)) (not x393)) (and (=> (and (not x3000) (and (= (= x3996 x938) x4130) (= x938 x1270))) (and (=> (not x4130) x4015) (=> (and x4130 (and (= x527 (= x3786 x3097)) (= x3121 x3786))) (and (=> (and x527 (and (= x4877 x180) (<= x4678 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2728 (< x4678 x2541)) (>= x4678 0) (= (x4810 (x2758 x938) (x1116 5) 0) x3874) (= x4678 (x4905 x3874)))) (and (=> (and (and (= x3972 (< x3326 x180)) (<= 0 x3326) (= x3326 (x4905 x1958)) (= (x4810 (x2758 x938) (x1116 5) 0) x1958) (<= x3326 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x2728)) (and (=> x3972 x4015) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2639) (= (x672 (- x3326 x180)) x1315) (<= 0 x2639) (= (x4171 x3525) x2639) (= x1007 (> x2639 x1301)) (= x3525 (x4810 (x2758 x3786) (x1116 5) 0)) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x180)) x1301)) (not x3972)) (and (=> (and (not x1007) (and (= 1 x4947) (= x1382 1) (= x2193 (x2066 (+ x180 x2639))) (= x2719 32))) x718) (=> x1007 x4015))))) (=> x2728 x4015))) (=> (not x527) x4015))))) (=> x3000 x4015))))) (=> (and x553 (and (= x1095 100) (not (< x3964 405663989)) (< 0 x3366) (not (= x3964 405663989)) (not (< x1095 4)) (= (or (and (> 96 x712) (= true (<= x712 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x712)) x2884) (= (x3612 (x2758 x3097)) x3366) (= x2541 x2370) (not (= 547091486 x3964)) (= x4378 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< x3964 2217467699) (= x3964 599290589) (< x3964 988262939) (= x712 (x672 (- x1095 4))) (= x3996 x1559) (= x1095 100) (= x365 x3097))) (and (=> x2884 x2067) (=> (and (and (= x1559 x1071) (= (= x1559 x3996) x4145)) (not x2884)) (and (=> (not x4145) x2067) (=> (and x4145 (and (= x365 x2635) (= x2185 (= x3097 x365)))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1602) (= x2472 (x4810 (x2758 x1559) (x1116 5) 0)) (= (< x1602 x2541) x1687) (= x3107 x2370) (>= x1602 0) (= x1602 (x3412 x2472))) x2185) (and (=> x1687 x2067) (=> (and (not x1687) (and (<= x4837 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2330 (< x4837 x2370)) (= x3705 (x4810 (x2758 x1559) (x1116 5) 0)) (= (x3412 x3705) x4837) (>= x4837 0))) (and (=> x2330 x2067) (=> (and (and (<= 0 x159) (= (< x3600 x159) x1250) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2370)) x3600) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x159) (= x1030 (x4810 (x2758 x365) (x1116 5) 0)) (= (x672 (- x4837 x2370)) x627) (= x159 (x4224 x1030))) (not x2330)) (and (=> x1250 x2067) (=> (and (not x1250) (and (= x2120 (x2066 (+ x2370 x159))) (= 1 x13) (= 1 x1496) (= x2121 32))) x3220))))))) (=> (not x2185) x2067))))))))) (=> (and (and (= x145 100) (= x3415 x2541) (= (x672 (- x145 4)) x3273) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3273)) (< x3273 96)) (> x3273 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3886) (= 599290589 x451) (= x2895 x3996) (not (> 4 x145)) (= x3097 x1983) (= x1418 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (> 599290589 x451)) (= 100 x145) (> 1466279372 x451) (< 0 x1781) (= (x3612 (x2758 x2424)) x1781)) x2204) (and (=> x3886 x327) (=> (and (and (= (= x2895 x3996) x115) (= x618 x2895)) (not x3886)) (and (=> (and x115 (and (= x443 x1983) (= x488 (= x1983 x3097)))) (and (=> (not x488) x327) (=> (and (and (>= x825 0) (= (> x2541 x825) x3101) (= (x4810 (x2758 x2895) (x1116 1) 0) x3136) (= x3415 x3558) (<= x825 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x825 (x4059 x3136))) x488) (and (=> (and (= (< x825 x3415) x652) (not x3101)) (and (=> (and (not x652) (and (= x4114 (x4810 (x2758 x2895) (x1116 1) 0)) (= (x356 x3542) x195) (>= x195 0) (<= x195 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3542 (x4810 (x2758 x1983) (x1116 1) 0)) (= (> x195 x3281) x1730) (= x686 (x672 (- x825 x3415))) (= x3281 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3415))))) (and (=> x1730 x327) (=> (and (and (= (< x4864 x195) x1877) (= (x2066 (+ x195 x3415)) x4864)) (not x1730)) (and (=> x1877 x327) (=> (and (and (= x4274 (x4810 (x2758 x1983) (x1116 1) 0)) (<= x3987 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1273 x2405) x3987) (<= 0 x3987) (= x2503 (< x3987 x3415)) (= (x4810 (x2758 x3097) x3917 0) x2405) (= x3917 (x4810 (x2758 x2895) (x1116 2) 0))) (not x1877)) (and (=> x2503 x327) (=> (and (not x2503) (= (< x3987 x3415) x2574)) (and (=> (and (and (= x2540 1) (= x1342 (x4810 (x2758 x2895) (x1116 2) 0)) (= x4298 32) (= x2440 (x4810 (x2758 x3097) x1342 0)) (= x1820 (x672 (- x3987 x3415)))) (not x2574)) x2526) (=> x2574 x327))))))))) (=> x652 x327))) (=> x3101 x327))))) (=> (not x115) x327))))))))) (=> (and x3222 (= x4127 x1840)) x869))))) (=> (and (not x3620) (= x3913 (= x3253 x1893))) (and (=> (and (not x3913) (and (= x1825 (= x1893 x696)) (and x1825 (and (= x2000 (x3612 (x2758 x696))) (< 0 x2000) (= x350 x4363) (= x350 4) (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x4926) (= x80 (= x1779 0)))))) (and (=> (and (not x80) (= x1347 x3642)) x1552) (=> (and x80 (and (> 2217467699 x3356) (not (= x3356 988262939)) (= (x4810 (x2758 x3996) (x1116 6) 0) x996) (= 1313710058 x3356) (not (< x350 4)) (= (< x4685 x2209) x1399) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4685) (= (x1787 x996) x4685) (>= x2209 0) (= x2209 (x1787 x424)) (not (> 988262939 x3356)) (< x3356 1856199391) (not (= x3356 989455977)) (not (= 1038142104 x3356)) (>= x4685 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2209) (= x424 (x4810 (x2758 x3996) (x1116 6) 0)))) (and (=> (and x1399 (= x3642 x1347)) x1552) (=> (and (and (<= 0 x1347) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1347) (= (> x1347 x1338) x1355) (= (x672 (- x4685 x2209)) x4422) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2209)) x1338)) (not x1399)) (and (=> (and (and (= (x2066 (+ x1347 x2209)) x387) (<= 0 x2059) (< x2059 1461501637330902918203684832716283019655932542976) (= 128 x2509) (= (= x2059 x2424) x555) (= (x2066 (+ x2209 x1347)) x3497) (<= x2059 1461501637330902918203684832716283019655932542975)) (not x1355)) (and (=> (and (and (= x2800 (or (and (> 96 x4771) (= (<= x4771 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4771))) (= x3996 x895) (= x1702 x696) (= x2209 x1424) (> 1466279372 x3706) (not (< x3706 599290589)) (not (> 4 x1935)) (= 100 x1935) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2969) (= x1589 (x3612 (x2758 x2424))) (= (x672 (- x1935 4)) x4771) (= x3706 599290589) (= 100 x1935) (< 0 x1589)) x555) (and (=> x2800 x839) (=> (and (and (= x2811 x895) (= (= x895 x3996) x4352)) (not x2800)) (and (=> (and x4352 (and (= x4820 (= x1702 x696)) (= x4345 x1702))) (and (=> (not x4820) x839) (=> (and (and (= (x4810 (x2758 x895) (x1116 1) 0) x1588) (= (x4059 x1588) x2229) (= x1424 x2461) (= (> x2209 x2229) x2216) (>= x2229 0) (<= x2229 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x4820) (and (=> (and (not x2216) (= (< x2229 x1424) x1913)) (and (=> (and (and (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1424)) x2579) (>= x59 0) (= (x672 (- x2229 x1424)) x3784) (= x3506 (x4810 (x2758 x1702) (x1116 1) 0)) (= x646 (< x2579 x59)) (= x59 (x1904 x3506)) (= (x4810 (x2758 x895) (x1116 1) 0) x2017) (<= x59 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1913)) (and (=> (and (and (= (x2066 (+ x59 x1424)) x2107) (= (< x2107 x59) x306)) (not x646)) (and (=> x306 x839) (=> (and (and (= (x4810 (x2758 x895) (x1116 2) 0) x1937) (= x1985 (x4810 (x2758 x696) x1937 0)) (<= x1047 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1273 x1985) x1047) (<= 0 x1047) (= (x4810 (x2758 x1702) (x1116 1) 0) x401) (= x1211 (< x1047 x1424))) (not x306)) (and (=> (and (= (< x1047 x1424) x1976) (not x1211)) (and (=> x1976 x839) (=> (and (not x1976) (and (= 1 x28) (= (x672 (- x1047 x1424)) x3764) (= (x4810 (x2758 x696) x1084 0) x519) (= x2737 32) (= (x4810 (x2758 x895) (x1116 2) 0) x1084))) x4816))) (=> x1211 x839))))) (=> x646 x839))) (=> x1913 x839))) (=> x2216 x839))))) (=> (not x4352) x839))))) (=> (and (not x555) (= (= x3097 x2059) x49)) (and (=> (and (and (= x26 (x672 (- x1029 4))) (= x2669 x696) (= x2518 x2209) (= x1029 100) (< x3851 2217467699) (not (< x3851 405663989)) (= x4410 (x3612 (x2758 x3097))) (> x4410 0) (< x3851 988262939) (not (= 405663989 x3851)) (= x3809 x3996) (not (= 547091486 x3851)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2733) (not (> 4 x1029)) (= 599290589 x3851) (= x4805 (or (> x26 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x26) true) (> 96 x26)))) (= x1029 100)) x49) (and (=> x4805 x1828) (=> (and (and (= x3809 x2757) (= x2473 (= x3809 x3996))) (not x4805)) (and (=> (and x2473 (and (= x3078 (= x696 x2669)) (= x2669 x2345))) (and (=> (and (and (= x4604 (x3412 x4503)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4604) (= (> x2209 x4604) x4259) (= x2518 x254) (>= x4604 0) (= (x4810 (x2758 x3809) (x1116 5) 0) x4503)) x3078) (and (=> x4259 x1828) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x585) (= (> x2518 x585) x1891) (= x4074 (x4810 (x2758 x3809) (x1116 5) 0)) (<= 0 x585) (= x585 (x3412 x4074))) (not x4259)) (and (=> (and (and (= x3671 (x672 (- x585 x2518))) (= x4898 (x2353 x3069)) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2518)) x3920) (<= x4898 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3069 (x4810 (x2758 x2669) (x1116 5) 0)) (= (> x4898 x3920) x862) (<= 0 x4898)) (not x1891)) (and (=> (and (and (= x1133 32) (= (x2066 (+ x4898 x2518)) x568) (= x2663 1) (= x4377 1)) (not x862)) x1696) (=> x862 x1828))) (=> x1891 x1828))))) (=> (not x3078) x1828))) (=> (not x2473) x1828))))) (=> (and (not x49) (= (= x3253 x2059) x3115)) (and (=> (and (and (and (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1469) (= x269 599290589) (not (> 405663989 x269)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3582) (and (= (<= x3582 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x3582))) x2359) (= x2209 x2977) (< 0 x3683) (= 100 x4860) (not (< x4860 4)) (= x280 x696) (= 100 x4860) (not (= x269 547091486)) (= x4051 x3996) (< x269 2217467699) (< x269 988262939) (= (x3612 (x2758 x696)) x3683) (= x3582 (x672 (- x4860 4))) (not (= x269 405663989))) x2584) (= x2584 (= x2059 x696))) (not x3115)) (and (=> x2359 x211) (=> (and (not x2359) (and (= (= x4051 x3996) x3383) (= x4051 x4350))) (and (=> (and (and (= x4194 x280) (= x4535 (= x280 x696))) x3383) (and (=> (and x4535 (and (= x111 x2977) (= x3593 (x4905 x4619)) (= x4619 (x4810 (x2758 x4051) (x1116 5) 0)) (>= x3593 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3593) (= x1910 (< x3593 x2209)))) (and (=> x1910 x211) (=> (and (and (<= 0 x480) (= x4478 (> x2977 x480)) (= x480 (x4905 x3701)) (<= x480 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4810 (x2758 x4051) (x1116 5) 0) x3701)) (not x1910)) (and (=> (and (not x4478) (and (>= x4732 0) (= x2028 (< x1283 x4732)) (= x837 (x4810 (x2758 x280) (x1116 5) 0)) (= (x672 (- x480 x2977)) x1868) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2977)) x1283) (<= x4732 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2332 x837) x4732))) (and (=> x2028 x211) (=> (and (not x2028) (and (= 1 x679) (= x1243 (x2066 (+ x2977 x4732))) (= x2027 1) (= x3182 32))) x2020))) (=> x4478 x211))))) (=> (not x4535) x211))) (=> (not x3383) x211))))) (=> (and (and (not (= 405663989 x3066)) (= x3066 599290589) (= x3537 (x672 (- x4780 4))) (not (> 405663989 x3066)) (= (or (and (= (<= x3537 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x3537)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3537)) x3345) (= 100 x4780) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3856) (not (> 4 x4780)) (> 2217467699 x3066) (< x3066 988262939) (not (= x3066 547091486)) (= x2402 x2209) (= (x3612 (x2758 x3253)) x3789) (= x3996 x838) (= x696 x3175) (= x4780 100) (< 0 x3789)) x3115) (and (=> x3345 x3336) (=> (and (not x3345) (and (= x838 x4862) (= x2704 (= x3996 x838)))) (and (=> (not x2704) x3336) (=> (and (and (= x2928 (= x3175 x696)) (= x3175 x2750)) x2704) (and (=> (not x2928) x3336) (=> (and x2928 (and (<= x4136 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4369 (x4810 (x2758 x838) (x1116 5) 0)) (= x4848 (< x4136 x2209)) (= (x4100 x4369) x4136) (>= x4136 0) (= x3451 x2402))) (and (=> x4848 x3336) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2742) (= (< x2742 x2402) x1417) (= x2973 (x4810 (x2758 x838) (x1116 5) 0)) (= (x4100 x2973) x2742) (<= 0 x2742)) (not x4848)) (and (=> x1417 x3336) (=> (and (and (= x599 (x4810 (x2758 x3175) (x1116 5) 0)) (= x1625 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2402))) (= x434 (x713 x599)) (= x1126 (> x434 x1625)) (<= x434 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x434 0) (= (x672 (- x2742 x2402)) x3934)) (not x1417)) (and (=> (and (and (= x2675 1) (= x2934 32) (= x2182 1) (= (x2066 (+ x2402 x434)) x1171)) (not x1126)) x4562) (=> x1126 x3336))))))))))))))))))) (=> (and x1355 (= x1347 x3642)) x1552))))))) (=> (and x3913 (and (= x3294 4) (= x4445 (x3612 (x2758 x3253))) (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 x4596) (= x4363 x3294) (> x4445 0) (= x4701 (= x1779 0)))) (and (=> (and (not x4701) (= x2546 x43)) x40) (=> (and x4701 (and (= (x4810 (x2758 x3996) (x1116 6) 0) x577) (<= x24 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x485 (x2499 x577)) (<= 0 x485) (> 2217467699 x1968) (not (> 988262939 x1968)) (<= x485 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4810 (x2758 x3996) (x1116 6) 0) x1488) (<= 0 x24) (= (> x24 x485) x3581) (not (= 988262939 x1968)) (= x24 (x2499 x1488)) (not (> 4 x3294)) (> 1856199391 x1968) (not (= 989455977 x1968)) (not (= 1038142104 x1968)) (= 1313710058 x1968))) (and (=> (and x3581 (= x2546 x43)) x40) (=> (and (and (= (< x2118 x2546) x2684) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x24)) x2118) (<= 0 x2546) (= (x672 (- x485 x24)) x4104) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2546)) (not x3581)) (and (=> (and (= x43 x2546) x2684) x40) (=> (and (not x2684) (and (= x2984 (x2066 (+ x2546 x24))) (<= x2378 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x2378) (>= x2378 0) (= x835 (= x2378 x2424)) (= 128 x4428) (= x886 (x2066 (+ x24 x2546))))) (and (=> (and (not x835) (= x922 (= x3097 x2378))) (and (=> (and (and (= (x672 (- x1848 4)) x4530) (> x3363 0) (< x3061 988262939) (not (= 405663989 x3061)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1476) (= 100 x1848) (not (< x1848 4)) (= x3363 (x3612 (x2758 x3097))) (not (= x3061 547091486)) (= x3061 599290589) (= 100 x1848) (> 2217467699 x3061) (= x2918 x24) (= x3996 x1142) (= x3253 x4639) (= x170 (or (> x4530 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x4530 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x4530)))) (not (> 405663989 x3061))) x922) (and (=> (and (not x170) (and (= x2109 x1142) (= (= x1142 x3996) x3186))) (and (=> (and (and (= (= x4639 x3253) x1500) (= x4639 x695)) x3186) (and (=> (not x1500) x1954) (=> (and (and (= x3233 x2918) (<= 0 x1921) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1921) (= x1055 (> x24 x1921)) (= (x3412 x964) x1921) (= x964 (x4810 (x2758 x1142) (x1116 5) 0))) x1500) (and (=> x1055 x1954) (=> (and (not x1055) (and (= (x3412 x3626) x1691) (= x3626 (x4810 (x2758 x1142) (x1116 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1691) (= x1291 (> x2918 x1691)) (<= 0 x1691))) (and (=> x1291 x1954) (=> (and (and (<= 0 x4142) (= x4142 (x1196 x3434)) (= (< x4247 x4142) x3486) (= (x672 (- x1691 x2918)) x3575) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2918)) x4247) (<= x4142 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4810 (x2758 x4639) (x1116 5) 0) x3434)) (not x1291)) (and (=> x3486 x1954) (=> (and (and (= 32 x2401) (= x2606 1) (= 1 x929) (= (x2066 (+ x4142 x2918)) x2298)) (not x3486)) x151))))))))) (=> (not x3186) x1954))) (=> x170 x1954))) (=> (and (not x922) (= (= x3253 x2378) x4474)) (and (=> (and (and (= x2506 100) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2231) (not (< x2506 4)) (= x3996 x4921) (> 988262939 x3475) (not (= 547091486 x3475)) (= (x3612 (x2758 x3253)) x4338) (= x1758 (x672 (- x2506 4))) (= 599290589 x3475) (= 100 x2506) (not (< x3475 405663989)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1758) (and (= true (<= x1758 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x1758))) x3201) (not (= 405663989 x3475)) (= x3253 x67) (> 2217467699 x3475) (> x4338 0) (= x1948 x24)) x4474) (and (=> (and (not x3201) (and (= x1858 (= x3996 x4921)) (= x4921 x755))) (and (=> (and (and (= x620 x67) (= x3624 (= x67 x3253))) x1858) (and (=> (not x3624) x4871) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1369) (>= x1369 0) (= x1369 (x4100 x3900)) (= (x4810 (x2758 x4921) (x1116 5) 0) x3900) (= (< x1369 x24) x1624) (= x1948 x1810)) x3624) (and (=> x1624 x4871) (=> (and (not x1624) (and (<= x4883 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4883 0) (= (x4810 (x2758 x4921) (x1116 5) 0) x923) (= (x4100 x923) x4883) (= (> x1948 x4883) x853))) (and (=> x853 x4871) (=> (and (not x853) (and (= x2769 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1948))) (= (x842 x4693) x322) (= (> x322 x2769) x803) (<= 0 x322) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x322) (= (x672 (- x4883 x1948)) x1804) (= x4693 (x4810 (x2758 x67) (x1116 5) 0)))) (and (=> (and (not x803) (and (= x2334 1) (= (x2066 (+ x322 x1948)) x1741) (= x2141 1) (= x2547 32))) x3236) (=> x803 x4871))))))))) (=> (not x1858) x4871))) (=> x3201 x4871))) (=> (and (and (= (= x696 x2378) x4215) (and x4215 (and (= 599290589 x52) (> 2217467699 x52) (not (= x52 405663989)) (< x52 988262939) (not (> 405663989 x52)) (= x2588 (x3612 (x2758 x696))) (> x2588 0) (= x1669 x3996) (= (or (> x15 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x15 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x15 96))) x3228) (= x121 x24) (= x2224 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 100 x4759) (= (x672 (- x4759 4)) x15) (not (= x52 547091486)) (= x4759 100) (not (> 4 x4759)) (= x86 x3253)))) (not x4474)) (and (=> x3228 x1113) (=> (and (and (= x1669 x2123) (= (= x1669 x3996) x4505)) (not x3228)) (and (=> (not x4505) x1113) (=> (and (and (= x36 x86) (= (= x3253 x86) x3700)) x4505) (and (=> (and (and (= (x4810 (x2758 x1669) (x1116 5) 0) x1321) (<= 0 x3977) (= (x4905 x1321) x3977) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3977) (= x121 x1428) (= x2714 (< x3977 x24))) x3700) (and (=> x2714 x1113) (=> (and (not x2714) (and (>= x4417 0) (= (> x121 x4417) x3416) (= (x4810 (x2758 x1669) (x1116 5) 0) x3756) (= (x4905 x3756) x4417) (<= x4417 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x3416 x1113) (=> (and (not x3416) (and (<= 0 x2913) (= x3528 (x4810 (x2758 x86) (x1116 5) 0)) (= x4361 (x672 (- x4417 x121))) (= (x1153 x3528) x2913) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x121)) x4938) (= (> x2913 x4938) x1010) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2913))) (and (=> (and (not x1010) (and (= x1572 1) (= x1225 (x2066 (+ x121 x2913))) (= 1 x1048) (= x4735 32))) x2239) (=> x1010 x1113))))))) (=> (not x3700) x1113))))))))))) (=> (and (and (= (x672 (- x1049 4)) x898) (= x3298 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x898) (and (< x898 96) (= true (<= x898 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x779 x3253) (= x1049 100) (< 0 x3675) (= x1406 599290589) (= x3675 (x3612 (x2758 x2424))) (= x24 x745) (not (> 599290589 x1406)) (= x3996 x1003) (= 100 x1049) (not (> 4 x1049)) (= x2464 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> 1466279372 x1406)) x835) (and (=> x3298 x643) (=> (and (and (= (= x3996 x1003) x3054) (= x1003 x3037)) (not x3298)) (and (=> (and x3054 (and (= x1258 (= x779 x3253)) (= x779 x1167))) (and (=> (and (and (<= x1199 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x24 x1199) x2826) (<= 0 x1199) (= (x4059 x3094) x1199) (= x745 x1384) (= x3094 (x4810 (x2758 x1003) (x1116 1) 0))) x1258) (and (=> (and (not x2826) (= (> x745 x1199) x3883)) (and (=> (and (and (= (x3267 x166) x2751) (>= x2751 0) (= x659 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x745))) (= (x4810 (x2758 x1003) (x1116 1) 0) x3718) (= (x672 (- x1199 x745)) x1373) (= (x4810 (x2758 x779) (x1116 1) 0) x166) (<= x2751 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x879 (< x659 x2751))) (not x3883)) (and (=> x879 x643) (=> (and (not x879) (and (= (x2066 (+ x2751 x745)) x1979) (= x3282 (> x2751 x1979)))) (and (=> (and (and (= x1440 (x4810 (x2758 x779) (x1116 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4777) (= (< x4777 x745) x74) (= x4777 (x1273 x3082)) (<= 0 x4777) (= x804 (x4810 (x2758 x1003) (x1116 2) 0)) (= x3082 (x4810 (x2758 x3253) x804 0))) (not x3282)) (and (=> x74 x643) (=> (and (= (> x745 x4777) x4048) (not x74)) (and (=> x4048 x643) (=> (and (not x4048) (and (= x1753 32) (= 1 x3448) (= x4676 (x4810 (x2758 x3253) x610 0)) (= (x4810 (x2758 x1003) (x1116 2) 0) x610) (= (x672 (- x4777 x745)) x2029))) x3205))))) (=> x3282 x643))))) (=> x3883 x643))) (=> x2826 x643))) (=> (not x1258) x643))) (=> (not x3054) x643))))))))))))))))))) (=> (and (not x2762) (and (= x2546 x4584) (= x2648 x1347) (= x3293 x1840) (= x69 x572))) x1629))) x4432))
(assert (= (x1116 2023533118) (x2758 2023533118)))
(assert (= (and x926 (not x2998)) x4258))
(assert (x4620 x2059))
(assert (x4620 x1756))
(assert (x4620 x1676))
(assert (= (and (not x2735) x4191) x3860))
(assert (x4620 x4313))
(assert (=> (<= x3836 10000) (= (x1116 x3836) (x2758 x3836))))
(assert (= (and x1160 x393) x1532))
(assert (x4620 x297))
(assert (=> (<= x2396 10000) (= (x2758 x2396) (x1116 x2396))))
(assert (x4620 x4548))
(assert (= (x4681 (x2758 x2308)) x2308))
(assert (= (+ 2 (x4681 x4246)) (x4681 (x1008 x4246 2))))
(assert (x4620 x2586))
(assert (x4244 x3301))
(assert (= (and x2952 (not x2676)) x3123))
(assert (= (or x2254 (and x3759 (not x817))) x1768))
(assert (= (x4681 (x2758 x67)) x67))
(assert (x4620 x3757))
(assert (= x325 (or x4634 x4449)))
(assert (= x2086 (and (not x4569) x2946)))
(assert (= x2094 (and x3486 x3555)))
(assert (x4620 x3003))
(assert (x4620 x4139))
(assert (x4620 x2383))
(assert (=> (>= 10000 x914) (= (x2758 x914) (x1116 x914))))
(assert (x2318 x3809))
(assert (x4620 x342))
(assert (= x3322 (and (not x4259) x4787)))
(assert (x4620 x2754))
(assert (x4620 x4039))
(assert (x4620 x2947))
(assert (x157 x2227 x2832 x3888 x1223))
(assert (x4620 x957))
(assert (= (and x3266 x4513) x127))
(assert (x2318 x4434))
(assert (x157 x1223 x3888 x2832 x2227))
(assert (x4620 x3440))
(assert (x4620 x4189))
(assert (= x92 (=> (= x3585 (= x4623 0)) (and (=> (and (= x4127 x4650) x3585) x869) (=> (and (not x3585) (= x1984 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x41) (and (< x41 32) (= (<= x41 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))))) (and (=> (and x1984 (= x4127 x4650)) x869) (=> (and (and (= x1681 x4650) (= x2339 x481) (= 1 x267)) (not x1984)) x495)))))))
(assert (x4620 x3809))
(assert (x4620 x3273))
(assert (= x1703 (and (not x1182) x3346)))
(assert (= x2170 (and x4077 x246)))
(assert (= (and x482 x896) x2088))
(assert (= (x1116 1000000000000000000) (x2758 1000000000000000000)))
(assert (= x1453 (x4681 (x2758 x1453))))
(assert (x3867 x847))
(assert (=> (<= x4051 10000) (= (x1116 x4051) (x2758 x4051))))
(assert (x2318 x3018))
(assert (x4620 x3775))
(assert (= x1204 (and x1320 x1058)))
(assert (x4620 x810))
(assert (= (x4681 (x1008 x4628 2)) (+ (x4681 x4628) 2)))
(assert (x2318 x1203))
(assert (x4620 x2568))
(assert (= (x4681 (x1008 x3064 1)) (+ (x4681 x3064) 1)))
(assert (x4620 x1161))
(assert (x4620 x1722))
(assert (x2318 x2423))
(assert (= x4790 (and (not x1316) x2088)))
(assert (x4620 x1983))
(assert (x4620 x4023))
(assert (x4620 x1384))
(assert (x4620 x25))
(assert (x4620 x2978))
(assert (x4620 x500))
(assert (= (and (not x2554) x4661) x4515))
(assert (= (and (not x2055) x1419) x4277))
(assert (= x4063 (or x4870 x3438)))
(assert (= x389 (and x2114 (not x2142))))
(assert (= x1410 (and x4790 x3162)))
(assert (=> (>= 10000 x221) (= (x2758 x221) (x1116 x221))))
(assert (= x3435 (=> (and (= x3882 x668) (= x1012 x3456)) x1308)))
(assert (= x3850 (or x4057 x647)))
(assert (x4620 x1589))
(assert (x4620 x371))
(assert (= (and x4797 (not x3865)) x4393))
(assert (= x1120 (and x4124 x110)))
(assert (= x2898 (and (not x3070) x3208)))
(assert (x4620 x539))
(assert (=> (>= 10000 x2423) (= (x2758 x2423) (x1116 x2423))))
(assert (=> (<= x1669 10000) (= (x1116 x1669) (x2758 x1669))))
(assert (= (and x3829 (not x4873)) x4318))
(assert (x4620 x3277))
(assert (x4620 x3040))
(assert (x4620 x3470))
(assert (= x3565 (or x3442 x4621)))
(assert (= x958 (and (not x3206) x1205)))
(assert (x4620 x2689))
(assert (x4620 x3315))
(assert (x4620 x4127))
(assert (= x2491 (and x4082 (not x2875))))
(assert (= (and x3330 x4658) x2888))
(assert (x4620 x4029))
(assert (x4620 x4108))
(assert (x2318 x2352))
(assert (= x4276 (and (not x1697) x1463)))
(assert (= (=> (and (= x10 x1048) (= x4735 x3775)) x3868) x2239))
(assert (= (=> (and (= x3261 x2494) (= x4231 0)) x4498) x2135))
(assert (=> (<= x3809 10000) (= (x1116 x3809) (x2758 x3809))))
(assert (=> (>= 10000 x2945) (= (x2758 x2945) (x1116 x2945))))
(assert (= (and x2463 (not x1984)) x785))
(assert (= (x4681 (x2758 x2462)) x2462))
(assert (x4620 x3532))
(assert (x4620 x1803))
(assert (= x1762 (and (not x44) x2240)))
(assert (=> (>= 10000 x2975) (= (x2758 x2975) (x1116 x2975))))
(assert (= (=> (and (or x3193 (not x3193)) (= (= x4638 0) x3193)) x4253) x2709))
(assert (= x3018 (x4681 (x2758 x3018))))
(assert (= (x4681 (x1008 x3126 1)) (+ (x4681 x3126) 1)))
(assert (= (x4681 (x1008 x3077 1)) (+ (x4681 x3077) 1)))
(assert (= (and x3692 x4765) x4121))
(assert (= (=> (and (= x2630 (ite (< x3198 x882) (not (= 0 x2950)) (> x882 x3198))) (or (and (not x2630) (and (and (>= x666 0) (> 1461501637330902918203684832716283019655932542976 x666) (<= x666 1461501637330902918203684832716283019655932542975) (= x666 (x4704 x1774)) (= (= 0 x666) x1358)) (or (and x1358 (and (= (x4810 (x2758 x3255) x1335 0) x3235) (= x3454 (x1008 x3235 1)) (= (x1008 x1774 1) x335) (= x1574 x3350) (= x3350 (x2066 (+ 96 x4710))) (= x4 (x1008 x3454 1)))) (and (and (= x722 (x4810 (x2758 x2352) x1335 0)) (= x788 (x2066 (+ x4710 96))) (>= x2352 0) (< x2352 1461501637330902918203684832716283019655932542976) (= x788 x1574) (= (x1008 x3564 1) x2753) (= x766 (x1008 x1774 1)) (= (x4810 (x2758 x3255) x1335 0) x3564) (= (x2743 x766) x2352) (>= 1461501637330902918203684832716283019655932542975 x2352) (= x1764 (x1008 x722 1)) (= x112 (x1008 x2753 1))) (not x1358))))) (and (and (and (>= x3384 0) (> 1461501637330902918203684832716283019655932542976 x3384) (= (x4704 x1774) x3384) (= x2477 (< 0 x2815)) (= (x672 (- x2950 x3384)) x2815) (<= x3384 1461501637330902918203684832716283019655932542975)) (or (and (and (= x2982 (x4810 (x2758 x2950) x1335 0)) (= (x2066 (+ x4710 96)) x4592) (= (x4810 (x2758 x3255) x1335 0) x2916) (= x1574 x4592) (= x2643 (x1008 x2925 1)) (= x2925 (x1008 x2916 1))) (not x2477)) (and (and (< x3659 1461501637330902918203684832716283019655932542976) (= x4930 x1574) (<= x3659 1461501637330902918203684832716283019655932542975) (<= 0 x3659) (= x4553 (x1008 x887 1)) (= (x4810 (x2758 x2950) x1335 0) x4532) (= x2772 (x4810 (x2758 x3659) x1335 0)) (= (x2180 x4532) x3659) (= (x4810 (x2758 x2950) x1335 0) x2062) (= x887 (x4810 (x2758 x3255) x1335 0)) (= (x1008 x2772 1) x1663) (= (x1008 x4553 1) x604) (= (x2066 (+ x4710 96)) x4930)) x2477))) x2630))) x2897) x4479))
(assert (= (and (not x1255) x2515) x3721))
(assert (x4620 x2018))
(assert (x2318 x1702))
(assert (= (x4681 (x1116 398450620)) 398450620))
(assert (x4620 x2893))
(assert (x4620 x4359))
(assert (x4620 x3539))
(assert (= x2926 (or x2488 x3123)))
(assert (= x2187 (and x2927 (not x621))))
(assert (and (x1645 x3983 1461501637330902918203684832716283019655932542976) (x588 x3983 1461501637330902918203684832716283019655932542976) (x4906 x3983 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* 1461501637330902918203684832716283019655932542976 (x2656 x3983 1461501637330902918203684832716283019655932542976)) (x3657 x3983 1461501637330902918203684832716283019655932542976)) x3983))))
(assert (= (and x927 x530) x2861))
(assert (x4620 x768))
(assert (x4620 x1465))
(assert (x4620 x2675))
(assert (x4620 x272))
(assert (x2318 x3627))
(assert (= 1865448899 (x4681 (x1116 1865448899))))
(assert (=> (<= x2424 10000) (= (x2758 x2424) (x1116 x2424))))
(assert (= x4400 (and x1582 (not x3078))))
(assert (= x4360 (and x3210 x315)))
(assert (= (and x4248 (not x3138)) x960))
(assert (x4620 x898))
(assert (= (and x2280 x4474) x3499))
(assert (=> (>= 10000 x1094) (= (x2758 x1094) (x1116 x1094))))
(assert (= x2515 (or x3640 x1762)))
(assert (x4620 x4663))
(assert (= x1978 (or x4894 x3740 x2655 x4791 x1416 x2885)))
(assert (= (x4681 (x2758 x779)) x779))
(assert (x4620 x3074))
(assert (= x3215 (or (and x2397 x3232) (and x2422 x1950) (and x235 x2274) x4424 (and (not x4111) x373) (and x161 x998) x4296 (and (not x2411) x1789) x733)))
(assert (= (x4681 (x2758 x3864)) x3864))
(assert (=> (<= x1559 10000) (= (x1116 x1559) (x2758 x1559))))
(assert (= (or x1731 x2305) x4824))
(assert (= x4273 (and x4718 (not x835))))
(assert (x3063 x1822))
(assert (x4620 x4305))
(assert (x4620 x2774))
(assert (= x482 (and (not x1390) x3665)))
(assert (= x3970 (x4681 (x2758 x3970))))
(assert (= (=> (and (= x3134 x1548) (= x645 (x1008 x3088 1)) (= (x1008 x645 1) x1707) (= (x4810 (x2758 x3255) x1284 0) x3088)) x731) x909))
(assert (x4620 x3237))
(assert (x4620 x4445))
(assert (= x1129 (or x2382 x2618 x592 x598)))
(assert (= (and x1692 x580) x3059))
(assert (and (x2026 x2805 1000000000000000000) (x2201 x2805 1000000000000000000) (x2891 x2805 1000000000000000000) (=> (and (< 0 x2805) (< 0 1000000000000000000)) (and (< (- x2805 1000000000000000000) (* (x2656 x2805 1000000000000000000) 1000000000000000000)) (<= (* (x2656 x2805 1000000000000000000) 1000000000000000000) x2805))) (x3017 x2805 1000000000000000000)))
(assert (= x4184 (and x2441 (not x3269))))
(assert (= x2847 (and x2524 x2057)))
(assert (x4620 x2934))
(assert (= x4531 (and x2551 (not x3676))))
(assert (= (and x3555 (not x3486)) x177))
(assert (x4620 x1874))
(assert (= x1931 (and x114 (not x2937))))
(assert (x4620 x1262))
(assert (x4620 x1425))
(assert (= (and x1304 x3156) x607))
(assert (= x2398 (and (not x1131) x2633)))
(assert (= (and x2492 x3186) x1286))
(assert (x4620 x2518))
(assert (= x1475 (and x4658 (not x3330))))
(assert (x4620 x1117))
(assert (x4620 x4412))
(assert (x2318 x359))
(assert (x4620 x2402))
(assert (x4620 x15))
(assert (= x1509 (and x2652 (not x467))))
(assert (= (x4681 (x1116 157198259)) 157198259))
(assert (x4620 x1977))
(assert (= (and x1157 (not x1511)) x3665))
(assert (= x4744 (and x3213 (not x2574))))
(assert (x3867 x3983))
(assert (= (=> (and (= x4908 x4420) (= x1443 x3163)) x60) x3258))
(assert (x4620 x3304))
(assert (= x4608 (and x4024 x4175)))
(assert (x4620 x1469))
(assert (x4620 x1835))
(assert (x4620 x696))
(assert (x4620 x365))
(assert (= x916 (or x1179 x1229)))
(assert (x4620 x2436))
(assert (= x3731 (and x2928 x3429)))
(assert (x4620 x2171))
(assert (x4620 x2176))
(assert (x4620 x3511))
(assert (= 405663989 (x4681 (x1116 405663989))))
(assert (x4620 x571))
(assert (x4620 x838))
(assert (= (and x3501 x82) x4589))
(assert (x2318 x3255))
(assert (= (=> (and (= x806 x355) (= 0 x2667)) x3826) x1280))
(assert (= x850 (and (not x4684) x4140)))
(assert (= (x4681 (x1008 x1774 1)) (+ (x4681 x1774) 1)))
(assert (= x2445 (and x4918 x1537)))
(assert (= (or x1668 x2040 x3750 x980 x3391 x372) x758))
(assert (x4640 x58 x3888))
(assert (x4620 x1820))
(assert (= x1431 (=> (and (= x4623 x3571) (= x2866 x41)) x416)))
(assert (x2318 x2323))
(assert (x4620 x4394))
(assert (x4620 x2060))
(assert (x4620 x2686))
(assert (x4620 x2152))
(assert (x4620 x4104))
(assert (= 547091486 (x4681 (x1116 547091486))))
(assert (x4620 x1611))
(assert (= (x2758 2134560854) (x1116 2134560854)))
(assert (= (and x2032 x2471) x4859))
(assert (x4620 x2579))
(assert (x4620 x35))
(assert (= (and x3819 x4478) x210))
(assert (= x4775 (=> (and (and (= (x2066 (+ 96 x1701)) x300) (< 0 x2686) (= (x2022 x1599 x4863) x2686) (= (ite (= (x1116 1) x2552) 1 0) x2101) (= x363 (= x3097 x2275)) (= (x2022 1461501637330902918203684832716283019655932542975 x2695) x2930) (= (x4810 (x2758 x2930) (x1116 169) 0) x4494) (= 4 x1633) (= (ite (= x4866 0) 1 0) x1960) (= x2812 (ite (> x4866 31) 1 0)) (= x4778 (x2022 x2101 x2812)) (= x2275 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (= (x3119 x4778 x1960) x1599)) (or (and (and (not (> 2691771752 x2243)) (= x1183 (x3612 (x2758 x3097))) (> x1183 0) (= x4785 x1633) (= 1 x1824) (< x2243 2929553584) (not (= 2835717307 x2243)) (= x517 32) (not (= x2243 2796547477)) (<= 0 x1087) (not (> 4 x4785)) (= 4 x4785) (= x3663 77053863734975077137548456399560439977311721439096602559221323163398253314048) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1087) (= 2858086653 x2243) (not (= 2691771752 x2243)) (not (< x2243 2217467699))) x363) (and (and (or (and x368 (and (= 32 x517) (<= x4643 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2909 x1633) (< x316 2929553584) (not (< x2909 4)) (= x316 2858086653) (>= x4643 0) (= 1 x1824) (not (= x316 2691771752)) (not (= 2796547477 x316)) (= x3845 77053863734975077137548456399560439977311721439096602559221323163398253314048) (= x2909 4) (= (x3612 (x2758 x3253)) x3068) (not (> 2217467699 x316)) (< 0 x3068) (not (= x316 2835717307)) (not (< x316 2691771752)))) (and (not x368) (and (= x414 (= x2275 x696)) (and (and (> x1045 0) (= x2754 4) (= (x3612 (x2758 x696)) x1045) (not (= x3928 2835717307)) (<= 0 x1367) (= x517 32) (not (= x3928 2691771752)) (not (> 4 x2754)) (not (> 2217467699 x3928)) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x563) (= x1633 x2754) (<= x1367 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 2858086653 x3928) (not (= x3928 2796547477)) (not (< x3928 2691771752)) (= 1 x1824) (< x3928 2929553584)) x414)))) (= (= x3253 x2275) x368)) (not x363)))) x4314)))
(assert (x4620 x2706))
(assert (x4620 x2268))
(assert (x4620 x2506))
(assert (x4620 x2991))
(assert (x4620 x1653))
(assert (= (and x2226 x119) x4098))
(assert (= (=> (and (= x3387 (ite (< x1486 x882) (not (= x3685 0)) (> x882 x1486))) (or (and (and (or (not x4062) (and (and (= (x4810 (x2758 x3685) x1173 0) x669) (= (x3278 x669) x992) (<= 0 x992) (< x992 1461501637330902918203684832716283019655932542976) (<= x992 1461501637330902918203684832716283019655932542975)) x4062)) (and (= (< 0 x967) x4062) (>= x3480 0) (< x3480 1461501637330902918203684832716283019655932542976) (<= x3480 1461501637330902918203684832716283019655932542975) (= x3480 (x361 x1649)) (= (x672 (- x3685 x3480)) x967))) x3387) (and (not x3387) (and (or (and (not x4690) (and (<= x4167 1461501637330902918203684832716283019655932542975) (= x3891 (x1008 x1649 1)) (<= 0 x4167) (= x4167 (x1027 x3891)) (< x4167 1461501637330902918203684832716283019655932542976))) x4690) (and (= (= 0 x4833) x4690) (<= 0 x4833) (= x4833 (x361 x1649)) (> 1461501637330902918203684832716283019655932542976 x4833) (<= x4833 1461501637330902918203684832716283019655932542975)))))) x415) x1163))
(assert (= (and x2463 x1984) x908))
(assert (= x716 true))
(assert (= x3579 (and (not x3597) x1752)))
(assert (x4620 x4778))
(assert (= (and x2727 x1228) x4155))
(assert (x4620 x1009))
(assert (= x999 (and (not x3572) x2532)))
(assert (= (and x1295 x3897) x3518))
(assert (x2318 x777))
(assert (= (and x2028 x3013) x3023))
(assert (x4620 x563))
(assert (= x1346 (x4681 (x2758 x1346))))
(assert (= (and (not x82) x3501) x4506))
(assert (x4620 x61))
(assert (x4620 x4192))
(assert (=> (<= x4551 10000) (= (x2758 x4551) (x1116 x4551))))
(assert (= (or x3308 x1519) x2783))
(assert (x4620 x1701))
(assert (x4620 x1815))
(assert (x4620 x914))
(assert (= x3032 (and (not x393) x1160)))
(assert (= (and x655 x811) x978))
(assert (x4620 x4457))
(assert (x4620 x1386))
(assert (x4620 x1911))
(assert (= (and (not x1850) x2668) x4966))
(assert (= 18446744073709551615 (x4681 (x1116 18446744073709551615))))
(assert (x4620 x3777))
(assert (x3257 x3691 (- x3888 x2227)))
(assert (= (and (not x945) x2535) x574))
(assert (x4620 x1047))
(assert (= x3127 (x4681 (x2758 x3127))))
(assert (= x327 (=> (and (= x2376 x4298) (= 0 x2540)) x2526)))
(assert (x4620 x2556))
(assert (= x1837 (and x250 (not x2467))))
(assert (x4620 x987))
(assert (= (and x2707 (not x2503)) x3213))
(assert (x4244 x1119))
(assert (x4620 x2603))
(assert (= (+ (x4681 x2753) 1) (x4681 (x1008 x2753 1))))
(assert (= x3754 (and x3732 x1193)))
(assert (x4620 x2541))
(assert (=> (>= 10000 x2950) (= (x1116 x2950) (x2758 x2950))))
(assert (x4620 x3427))
(assert (x2318 x3836))
(assert (x4620 x2262))
(assert (= (or x3085 x705) x45))
(assert (= x2254 (and x817 x3759)))
(assert (x4620 x2771))
(assert (x4620 x4540))
(assert (x4620 x4249))
(assert (x4244 x2227))
(assert (= x3410 (and x863 (not x1250))))
(assert (x3257 x3888 (- x3691 x1223)))
(assert (x4620 x2016))
(assert (= x1880 (=> (and (= x612 x1165) (= x3389 x2388)) x3908)))
(assert (= (x4681 (x1008 x4460 1)) (+ (x4681 x4460) 1)))
(assert (x4620 x4930))
(assert (x3251 x4088))
(assert (x4620 x695))
(assert (= (and (not x2821) x3462) x4165))
(assert (= (and x3216 x3150) x1760))
(assert (x4620 x4725))
(assert (= (and x1088 (not x363)) x4292))
(assert (= (x1116 76833804140862540057647519496925185374644862498684814347804924264468996685824) (x2758 76833804140862540057647519496925185374644862498684814347804924264468996685824)))
(assert (= x1552 (=> (and (= x3353 x3642) (= x4023 0)) x1420)))
(assert (= (and x4068 (not x3416)) x4614))
(assert (= x2924 (=> (and (or (and (not x1899) (= x2965 0)) (and x1899 (= x2965 x4357))) (and (<= x4313 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4313) (= (< x4313 x4357) x1899))) x1740)))
(assert (x4620 x474))
(assert (x4620 x2276))
(assert (x2538 x450))
(assert (x4620 x1625))
(assert (x4620 x1089))
(assert (= x1357 (and x1206 (not x1661))))
(assert (=> (<= x3127 10000) (= (x2758 x3127) (x1116 x3127))))
(assert (x3257 x3691 (- x3888 x1223)))
(assert (= (+ 1 (x4681 x3978)) (x4681 (x1008 x3978 1))))
(assert (x4620 x3593))
(assert (= (x4681 (x1008 x3192 1)) (+ 1 (x4681 x3192))))
(assert (x4620 x2904))
(assert (= x979 (or x1357 x2371)))
(assert (x4620 x611))
(assert (= x2057 (and x1058 (not x1320))))
(assert (= (x2758 10742207464693106059581744854972325794081737850190833080250671788038469713920) (x1116 10742207464693106059581744854972325794081737850190833080250671788038469713920)))
(assert (=> (>= 10000 x4434) (= (x1116 x4434) (x2758 x4434))))
(assert (= x4000 (=> (and (= x572 x2307) (= x1738 x2279) (not (= 0 x3615)) (= x2234 x2774) (= x1770 x2130)) x4163)))
(assert (= x2775 (x4681 (x2758 x2775))))
(assert (x4620 x409))
(assert (=> (<= x3685 10000) (= (x2758 x3685) (x1116 x3685))))
(assert (= x4533 (and x2963 x2594)))
(assert (= x3391 (and x3641 x738)))
(assert (= (or x464 x2741) x3152))
(assert (x4620 x2295))
(assert (x4620 x287))
(assert (= x1955 (and (not x3883) x1208)))
(assert (= x190 (and x1579 (not x1608))))
(assert (x4620 x3106))
(assert (= (or x4543 x3941 x1150) x304))
(assert (x4620 x3067))
(assert (= (and (not x3913) x3956) x736))
(assert (= (and x4531 (not x2001)) x3372))
(assert (= x1733 (and x2943 (not x3298))))
(assert (= x2020 (=> (and (= x439 x2027) (= x2544 x3182)) x1210)))
(assert (= x2213 (=> (and (= x753 0) (= x2147 x2250)) x4450)))
(assert (x2318 x3902))
(assert (and (x2026 x2160 1000000000000000000) (x2201 x2160 1000000000000000000) (x2891 x2160 1000000000000000000) (=> (and (< 0 x2160) (< 0 1000000000000000000)) (and (< (- x2160 1000000000000000000) (* (x2656 x2160 1000000000000000000) 1000000000000000000)) (<= (* (x2656 x2160 1000000000000000000) 1000000000000000000) x2160))) (x3017 x2160 1000000000000000000)))
(assert (= (and x2359 x1022) x4109))
(assert (= x2878 (and x2756 (not x594))))
(assert (= (and (not x2028) x3013) x2507))
(assert (x4620 x3418))
(assert (= (x4681 (x2758 x854)) x854))
(assert (= x4661 (or x961 x913)))
(assert (=> (<= x3627 10000) (= (x1116 x3627) (x2758 x3627))))
(assert (= x1249 (and x3841 x1544)))
(assert (= (and x4239 (not x3364)) x3974))
(assert (= (+ 1 (x4681 x4536)) (x4681 (x1008 x4536 1))))
(assert (= (and x1028 (not x3972)) x962))
(assert (= (+ (x4681 x3287) 2) (x4681 (x1008 x3287 2))))
(assert (x4620 x4622))
(assert (= (and x3050 x3113) x4284))
(assert (= x500 (x4681 (x2758 x500))))
(assert (= (and x4959 x1739) x391))
(assert (=> (>= 10000 x2428) (= (x1116 x2428) (x2758 x2428))))
(assert (= (and x4003 (not x1521)) x4797))
(assert (x4620 x4046))
(assert (= x3026 (and x3241 x527)))
(assert (x4620 x2805))
(assert (= x609 (and x1271 x716)))
(assert (= (and x2491 x198) x4446))
(assert (x4620 x4735))
(assert (x4620 x4045))
(assert (= x3681 (or x4250 x4229)))
(assert (x4620 x3143))
(assert (= x2840 (and (not x518) x3292)))
(assert (x2318 x2573))
(assert (= x1162 (and x4605 (not x765))))
(assert (= (and x4511 (not x2244)) x805))
(assert (x4620 x603))
(assert (x2318 x221))
(assert (x4620 x1428))
(assert (x2318 x1812))
(assert (x4620 x387))
(assert (= (and x1532 (not x3204)) x2090))
(assert (= x1054 (and x2144 x2846)))
(assert (x4620 x578))
(assert (= (x4681 (x2758 x2424)) x2424))
(assert (= x2400 (=> (and (= x549 x2476) (= x4521 x4083)) x1015)))
(assert (x4620 x4857))
(assert (x4620 x3211))
(assert (= x2412 (and (not x88) x1863)))
(assert (x2318 x4815))
(assert (x4620 x221))
(assert (x4620 x83))
(assert (= (and x861 x2596) x1579))
(assert (x4620 x4207))
(assert (x4620 x2399))
(assert (= x1278 (and (not x408) x1757)))
(assert (=> (>= 10000 x2573) (= (x1116 x2573) (x2758 x2573))))
(assert (= (+ 1 (x4681 x4216)) (x4681 (x1008 x4216 1))))
(assert (x4244 x1617))
(assert (x2538 (- x2832 x3888)))
(assert (x3257 x3888 (- x3691 x2227)))
(assert (x3867 x2435))
(assert (= (and (not x1522) x2919) x827))
(assert (= (and x4776 x1683) x1310))
(assert (and (x2026 x3301 1000000000000000000) (x2201 x3301 1000000000000000000) (x2891 x3301 1000000000000000000) (=> (and (< 0 x3301) (< 0 1000000000000000000)) (and (< (- x3301 1000000000000000000) (* (x2656 x3301 1000000000000000000) 1000000000000000000)) (<= (* (x2656 x3301 1000000000000000000) 1000000000000000000) x3301))) (x3017 x3301 1000000000000000000)))
(assert (x2318 x1990))
(assert (x4620 x1368))
(assert (= (x4681 (x1008 x1414 1)) (+ 1 (x4681 x1414))))
(assert (= x1269 (and x4934 (not x1946))))
(assert (x2318 x4396))
(assert (=> (<= x1413 10000) (= (x1116 x1413) (x2758 x1413))))
(assert (x4620 x1655))
(assert (x4620 x2851))
(assert (= x2452 (and x3054 x1733)))
(assert (= (x4681 (x1008 x3741 2)) (+ (x4681 x3741) 2)))
(assert (x157 x3888 x3691 x3888 x1223))
(assert (= x2031 (or x4168 x3513 x4459)))
(assert (= (and x770 x3478) x268))
(assert (= x531 (and (not x3162) x4790)))
(assert (=> (>= 10000 x1393) (= (x2758 x1393) (x1116 x1393))))
(assert (x2318 x2396))
(assert (= x4425 (or x1679 x276)))
(assert (= x4821 (and x2594 (not x2963))))
(assert (x4620 x4900))
(assert (and (and (= (- (* (- x3275 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3275 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3275 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3275) (- (* x3275 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3275))) (= (x1807 1000000000000000000 (- x3275 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x3275 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x3275) (x2296 1000000000000000000 x3275) (= (x1807 1000000000000000000 x3275) (* x3275 1000000000000000000)) (x4064 1000000000000000000 x3275) (x218 1000000000000000000 x3275) (x1213 1000000000000000000 x3275)))
(assert (= x3811 (=> (and (or (and x2830 (= x1403 x4242)) (and (= 0 x1403) (not x2830))) (and (= (x1008 x2103 1) x3878) (= x1378 (x3688 x446)) (= (x2022 1461501637330902918203684832716283019655932542975 x847) x4434) (<= x4747 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3557) (= (x2022 1461501637330902918203684832716283019655932542975 x847) x4192) (<= x4242 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x4313 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2103 (x4810 (x2758 x2308) x3916 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1378) (= x1414 (x4810 (x2758 x1584) (x1116 155) 0)) (= x2308 (x2022 1461501637330902918203684832716283019655932542975 x847)) (>= x4747 0) (= (x2022 1461501637330902918203684832716283019655932542975 x2695) x1425) (= (x4810 (x2758 x4434) x1414 0) x1452) (= (x4810 (x2758 x1425) (x1116 154) 0) x2336) (= x3916 (x4810 (x2758 x3902) (x1116 158) 0)) (= (x1721 x3878) x4242) (= x4747 (x2981 x650)) (>= x4313 0) (<= 0 x4242) (= x1584 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (>= x1378 0) (= (x4810 (x2758 x4192) x2336 0) x3305) (= (< x4313 x4242) x2830) (= (x1008 x1452 2) x650) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3557) (= x446 (x1008 x3305 2)) (= x3557 (x2455 x2103)) (= x3902 (x2022 1461501637330902918203684832716283019655932542975 x2695)))) x4055)))
(assert (x4620 x4938))
(assert (= (x1116 2362143243) (x2758 2362143243)))
(assert (x4620 x3202))
(assert (x4620 x1951))
(assert (x4620 x3219))
(assert (x2318 x1142))
(assert (x4620 x76))
(assert (= (=> (and (= x2476 x253) (= x25 x4521)) x1015) x2242))
(assert (= x2159 (or x535 x303)))
(assert (x2538 (- x2227 x3691)))
(assert (= (and x3810 x4001) x4307))
(assert (x4620 x426))
(assert (x4620 x2950))
(assert (x4620 x1496))
(assert (= x2479 (and (not x117) x389)))
(assert (= (+ 1 (x4681 x3564)) (x4681 (x1008 x3564 1))))
(assert (= x2612 (and x2926 x3550)))
(assert (= x1942 (and x855 (not x4743))))
(assert (= x3292 (and x2415 x4899)))
(assert (= x4635 (and x3515 (not x4885))))
(assert (= (and x1684 (not x3556)) x4929))
(assert (x4620 x701))
(assert (= (and x1847 x3491) x1873))
(assert (x4620 x3475))
(assert (x4620 x711))
(assert (x2519 x4088 x3690))
(assert (= (x4681 (x2758 x3403)) x3403))
(assert (= 242558722 (x4681 (x1116 242558722))))
(assert (x4620 x4719))
(assert (x4620 x708))
(assert (x2933 x3888 x1223 x2832 x2227))
(assert (= x4916 (and x2634 (not x1892))))
(assert (x4620 x882))
(assert (x4620 x2544))
(assert (x3867 x4863))
(assert (= (and x2739 x3155) x4564))
(assert (x2318 x729))
(assert (= x3460 (and x660 x176)))
(assert (= (x4681 (x1116 2796547477)) 2796547477))
(assert (x4620 x4018))
(assert (= x1861 (and x4273 x922)))
(assert (= (and x2503 x2707) x1675))
(assert (x4620 x1840))
(assert (x4620 x3814))
(assert (x2318 x289))
(assert (= (and (not x4902) x1445) x3031))
(assert (x4620 x1174))
(assert (= (and x3647 (not x80)) x2063))
(assert (x4620 x3738))
(assert (= (x2758 2929553584) (x1116 2929553584)))
(assert (= x1267 (and x843 x380)))
(assert (= (or x3111 x4340) x3822))
(assert (x4620 x2857))
(assert (x4620 x4213))
(assert (= x1684 (or x4868 x222 x394)))
(assert (x4620 x1259))
(assert (x4620 x1586))
(assert (= (x2758 242558722) (x1116 242558722)))
(assert (= (and (not x4352) x1189) x1492))
(assert (x4620 x3312))
(assert (x4620 x4685))
(assert (x4620 x4386))
(assert (x2538 x2480))
(assert (= x893 (x4681 (x2758 x893))))
(assert (= x2383 (x4681 (x2758 x2383))))
(assert (x4620 x258))
(assert (= (and (not x2091) x3974) x4641))
(assert (x4620 x2660))
(assert (x2318 x2827))
(assert (= (x4681 (x2758 x3090)) x3090))
(assert (x4620 x3923))
(assert (= (x1116 989455977) (x2758 989455977)))
(assert (x4620 x3863))
(assert (x4620 x1542))
(assert (x4620 x2626))
(assert (= (or x1473 x3614 x1260 x2063 x4748) x2994))
(assert (x4620 x668))
(assert (x4620 x1705))
(assert (= x1375 (and x3841 (not x1544))))
(assert (x4620 x1583))
(assert (x3601 32))
(assert (= (or x73 x3870 x2094 x131 x1218 x4890) x1778))
(assert (x4620 x1369))
(assert (x4620 x2447))
(assert (x4620 x3609))
(assert (= (and x2429 x2553) x764))
(assert (x3063 x2784))
(assert (x4620 x807))
(assert (= (and x4873 x3829) x647))
(assert (x4620 x395))
(assert (x4620 x2355))
(assert (x157 x2227 x2832 x3691 x3888))
(assert (x4620 x3800))
(assert (= x2724 (and x2466 x4101)))
(assert (x2538 x4852))
(assert (= 1461501637330902918203684832716283019655932542976 (x4681 (x1116 1461501637330902918203684832716283019655932542976))))
(assert (x4620 x4948))
(assert (=> (<= x1686 10000) (= (x2758 x1686) (x1116 x1686))))
(assert (x4620 x2908))
(assert (and (x1645 x104 32) (x588 x104 32) (x4906 x104 32) (=> (> 32 0) (= (+ (* 32 (x2656 x104 32)) (x3657 x104 32)) x104))))
(assert (x4620 x4956))
(assert (x2318 x528))
(assert (x2318 x1435))
(assert (=> (>= 10000 x1812) (= (x1116 x1812) (x2758 x1812))))
(assert (= (x2758 1461501637330902918203684832716283019655932542975) (x1116 1461501637330902918203684832716283019655932542975)))
(assert (x4620 x2279))
(assert (= x4911 (or x2161 x3432)))
(assert (= x2573 (x4681 (x2758 x2573))))
(assert (= x1130 (and x2617 x4861)))
(assert (= x3672 (and (not x1169) x392)))
(assert (= x3443 (and (not x2850) x459)))
(assert (= x2247 (x4681 (x2758 x2247))))
(assert (x2318 x4045))
(assert (= (and x1836 x3444) x3501))
(assert (x4620 x857))
(assert (= (or x3535 x1269) x3432))
(assert (x3257 x2832 x2227))
(assert (= (and (not x4715) x3242) x2025))
(assert (= x1166 (and x4175 (not x4024))))
(assert (= (and (not x126) x4501) x3855))
(assert (= (and x3193 x1021) x3509))
(assert (= (and x1885 x3576) x4366))
(assert (x4620 x620))
(assert (= (and (not x3260) x3850) x2723))
(assert (x4620 x1842))
(assert (= (and (not x3381) x2127) x2065))
(assert (x4620 x2363))
(assert (x4620 x3789))
(assert (x1838 x2324))
(assert (= (or x1073 x4468 x2081 x4736) x790))
(assert (= (and x146 (not x4945)) x4397))
(assert (= (+ 2 (x4681 x3305)) (x4681 (x1008 x3305 2))))
(assert (= x3109 (and (not x1687) x1098)))
(assert (= x262 (x4681 (x2758 x262))))
(assert (= x1034 (and x2630 x4853)))
(assert (x4620 x694))
(assert (x4620 x1401))
(assert (x3867 x2695))
(assert (=> (>= 10000 x2778) (= (x2758 x2778) (x1116 x2778))))
(assert (= (or x238 x1556 x1036 x3262 x1040 x400) x4150))
(assert (= x1997 (or x4225 x4464 x1231 x3036)))
(assert (= (and x3362 x790) x4717))
(assert (= x2618 (and x1700 x1358)))
(assert (= (x4681 (x2758 x1584)) x1584))
(assert (x4620 x1821))
(assert (x4620 x3390))
(assert (= (x4681 (x2758 x2978)) x2978))
(assert (x2538 (- x3691 x3888)))
(assert (x4620 x2913))
(assert (x4620 x4763))
(assert (= (and x391 (not x3344)) x4080))
(assert (x4620 x3939))
(assert (x4620 x1372))
(assert (= x4845 (=> (or (and (not x408) (= x3926 x408)) (and x408 (and (= (< x1046 x1011) x3926) (not (< x77 x3073)) (= (x672 (- x77 x3073)) x1046)))) x1248)))
(assert (and (x1645 x4537 1461501637330902918203684832716283019655932542976) (x588 x4537 1461501637330902918203684832716283019655932542976) (x4906 x4537 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* 1461501637330902918203684832716283019655932542976 (x2656 x4537 1461501637330902918203684832716283019655932542976)) (x3657 x4537 1461501637330902918203684832716283019655932542976)) x4537))))
(assert (x4620 x2658))
(assert (x4620 x352))
(assert (x4620 x947))
(assert (x4620 x4203))
(assert (x4620 x43))
(assert (= x4450 (=> (and (= x2250 x4335) (= x2132 x753)) x3328)))
(assert (x4620 x4088))
(assert (= (x4681 (x1116 2678788150)) 2678788150))
(assert (= (or x472 x4716 x1771 x217 x3 x3799) x228))
(assert (= x4882 (=> (and (= x3556 (= x109 0)) (or (and (not x3556) (= x109 x3615)) (and x3556 (and (= (x1735 (x2758 x3996)) x3316) (= x748 (- x1300 x3947)) (< (+ x3947 x3316) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x4896 (x2758 x1893)) x1300) (= x3947 (ite (= x109 0) x1779 0)) (= x4375 (x2066 (+ x3947 x3316))) (= x109 x3615))))) x4000)))
(assert (= x2134 (=> (and (or (and (= x4827 x3557) x4024) (and (= x4827 0) (not x4024))) (and (<= x4313 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x3557 x4313) x4024) (<= 0 x4313))) x1870)))
(assert (x4620 x113))
(assert (= (x4681 (x1116 2236579515)) 2236579515))
(assert (x4620 x1367))
(assert (= x2070 (and x4395 x1200)))
(assert (x4620 x2456))
(assert (x4620 x1921))
(assert (= x3285 (and x1470 (not x1512))))
(assert (= x3578 (and x2069 (not x1064))))
(assert (= x1327 (x4681 (x2758 x1327))))
(assert (x3601 x2153))
(assert (x2318 x4192))
(assert (= x2650 (and x1080 x3603)))
(assert (x4620 x4123))
(assert (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 (x4681 (x1116 6539370208772218570076773595062200405109424842860869254164860851635934461952))))
(assert (x4620 x1456))
(assert (= (and x2859 (not x49)) x4808))
(assert (x4620 x4925))
(assert (= (and x4234 x2433) x662))
(assert (= (and x114 x2937) x3604))
(assert (x4620 x3140))
(assert (= (=> (and (= x3071 x2476) (= x4521 x3459)) x1015) x4037))
(assert (x4620 x1534))
(assert (x4620 x430))
(assert (x2538 x1821))
(assert (x4620 x175))
(assert (x4620 x3706))
(assert (= (x1116 2236579515) (x2758 2236579515)))
(assert (x4620 x4357))
(assert (x4620 x536))
(assert (and (and (= (- (* (- x4236 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x4236 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x4236 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x4236) (- (* x4236 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4236))) (= (x1807 1000000000000000000 (- x4236 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x4236 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x4236) (x2296 1000000000000000000 x4236) (= (x1807 1000000000000000000 x4236) (* x4236 1000000000000000000)) (x4064 1000000000000000000 x4236) (x218 1000000000000000000 x4236) (x1213 1000000000000000000 x4236)))
(assert (x4620 x2637))
(assert (=> (<= x895 10000) (= (x1116 x895) (x2758 x895))))
(assert (x4620 x3494))
(assert (= (x4681 (x2758 x1425)) x1425))
(assert (x2318 x681))
(assert (x157 x3888 x1223 x3691 x3888))
(assert (x4620 x941))
(assert (= (and x4334 (not x593)) x4511))
(assert (= (and x3045 x4847) x4402))
(assert (= x2377 (and x2878 (not x3400))))
(assert (= x1789 (and x373 x4111)))
(assert (x4620 x3531))
(assert (x4620 x4378))
(assert (and (x2026 x2320 1000000000000000000) (x2201 x2320 1000000000000000000) (x2891 x2320 1000000000000000000) (=> (and (< 0 x2320) (< 0 1000000000000000000)) (and (< (- x2320 1000000000000000000) (* (x2656 x2320 1000000000000000000) 1000000000000000000)) (<= (* (x2656 x2320 1000000000000000000) 1000000000000000000) x2320))) (x3017 x2320 1000000000000000000)))
(assert (x2318 x399))
(assert (= (x1116 4238056678808933066457772256406219440718756300954938350892797929791311314944) (x2758 4238056678808933066457772256406219440718756300954938350892797929791311314944)))
(assert (x4620 x1666))
(assert (= (and x676 (not x2662)) x360))
(assert (x4620 x4874))
(assert (= (+ (x4681 x3717) 1) (x4681 (x1008 x3717 1))))
(assert (= x1563 (and x2551 x3676)))
(assert (x4620 x585))
(assert (= x4308 (and x363 x1088)))
(assert (=> (<= x4921 10000) (= (x1116 x4921) (x2758 x4921))))
(assert (x3867 x1144))
(assert (x4620 x1941))
(assert (= (+ (x4681 x2790) 1) (x4681 (x1008 x2790 1))))
(assert (= (=> (= x1574 x3003) x948) x2897))
(assert (= (and x1182 x3346) x2006))
(assert (= x3262 (and x3000 x4255)))
(assert (= x2960 (or x4221 x1883)))
(assert (x4620 x3112))
(assert (=> (<= x1983 10000) (= (x1116 x1983) (x2758 x1983))))
(assert (x4620 x2148))
(assert (=> (>= 10000 x2759) (= (x1116 x2759) (x2758 x2759))))
(assert (= x885 (and x1143 (not x1211))))
(assert (x4620 x2342))
(assert (= (and x1910 x1062) x3225))
(assert (= x1138 (and (not x2936) x916)))
(assert (= (and x635 x1410) x429))
(assert (= (and x3879 x2685) x2421))
(assert (x4620 x3828))
(assert (=> (>= 10000 x4602) (= (x2758 x4602) (x1116 x4602))))
(assert (x4620 x4235))
(assert (= x1480 (or x1145 x4966)))
(assert (x4620 x735))
(assert (= (+ (x4681 x1724) 1) (x4681 (x1008 x1724 1))))
(assert (= (and (not x3758) x4849) x2927))
(assert (x4620 x442))
(assert (= (=> (and (= x1182 (ite (> x882 x702) (not (= 0 x2978)) (< x702 x882))) (or (and (and (and (<= 0 x2316) (< x2316 1461501637330902918203684832716283019655932542976) (= (x4008 x757) x2316) (<= x2316 1461501637330902918203684832716283019655932542975) (= x2197 (= 0 x2316))) (or (and (and (<= 0 x4554) (<= x4554 1461501637330902918203684832716283019655932542975) (= (x3925 x988) x4554) (> 1461501637330902918203684832716283019655932542976 x4554) (= x602 (x2022 1461501637330902918203684832716283019655932542975 x847)) (= x297 (x2022 1461501637330902918203684832716283019655932542975 x847)) (= x2795 (x2022 1461501637330902918203684832716283019655932542975 x847)) (= x988 (x1008 x757 1))) (not x2197)) (and x2197 (and (= (x2022 1461501637330902918203684832716283019655932542975 x847) x4207) (= (x2022 1461501637330902918203684832716283019655932542975 x847) x1063) (= x1465 (x2022 1461501637330902918203684832716283019655932542975 x847)))))) (not x1182)) (and (and (and (= x4116 (x672 (- x2978 x833))) (= x833 (x4008 x757)) (= x428 (> x4116 0)) (>= x833 0) (> 1461501637330902918203684832716283019655932542976 x833) (>= 1461501637330902918203684832716283019655932542975 x833)) (or (and x428 (and (= x2587 (x2022 1461501637330902918203684832716283019655932542975 x847)) (= x1439 (x2022 1461501637330902918203684832716283019655932542975 x847)) (= x3159 (x1736 x4323)) (>= x3159 0) (= x4323 (x4810 (x2758 x2978) x1414 0)) (= x4636 (x2022 1461501637330902918203684832716283019655932542975 x847)) (> 1461501637330902918203684832716283019655932542976 x3159) (<= x3159 1461501637330902918203684832716283019655932542975))) (and (not x428) (and (= x717 (x2022 1461501637330902918203684832716283019655932542975 x847)) (= (x2022 1461501637330902918203684832716283019655932542975 x847) x1215) (= x4493 (x2022 1461501637330902918203684832716283019655932542975 x847)))))) x1182))) x3297) x1695))
(assert (= (and x336 (not x3714)) x4774))
(assert (=> (<= x3097 10000) (= (x1116 x3097) (x2758 x3097))))
(assert (= (and (not x1915) x3677) x3516))
(assert (x2318 x789))
(assert (= x648 (and (not x3383) x2442)))
(assert (=> (>= 10000 x1584) (= (x2758 x1584) (x1116 x1584))))
(assert (= x1295 (or x291 x1745)))
(assert (x2318 x2272))
(assert (x4620 x4860))
(assert (x4620 x3861))
(assert (x4620 x3484))
(assert (= (and x4830 x413) x1581))
(assert (= (and x3677 x1915) x1524))
(assert (= (=> (and (= x2389 (< 0 x2480)) (or (and (and (= x4281 x4199) (= (x1860 x3992) x4199) (= (x2022 1461501637330902918203684832716283019655932542975 x2695) x3820) (= (< 115792089237316195423570985008687907853269984665640564039457 x2480) x270) (= x4852 (x1421 (* 1000000000000000000 x2480))) (<= 0 x4199) (= x2603 (ite x270 1 0)) (= (* x4852 1000000000000000000) x4659) (= (x4810 (x2758 x3820) (x1116 165) 0) x2813) (= x2148 (+ x4281 x3635)) (<= x3742 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> x2480 x1659)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x4852)) (= x2760 x2480) (= 0 x2603) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3517 x4199)) (= x3635 x3517) (= (x672 (- x1659 x2480)) x21) (> x3742 0) (= x3106 x3519) (= x3742 (x4306 x2813)) (= (x2656 x4659 x3742) x2543) (= x3519 (+ x3327 x2760)) (= x1042 x3327) (= x3517 (x2656 x2543 1000000000000000000)) (<= x4199 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3992 (x1008 x4494 3)) (< (+ x2480 x1042) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x3742) (= x3619 x21)) x2389) (and (and (= x1042 x3106) (= x1659 x3619)) (not x2389)))) x4825) x3549))
(assert (x4620 x1450))
(assert (x4620 x1805))
(assert (x4620 x4233))
(assert (x4620 x2752))
(assert (x4620 x51))
(assert (x3601 x4537))
(assert (= x2727 (or x12 x1234)))
(assert (x4620 x3823))
(assert (= x3632 (and x1507 (not x488))))
(assert (= (and (not x3879) x2685) x1229))
(assert (x2538 (- x2832 x1223)))
(assert (x4620 x4060))
(assert (= (x4681 (x2758 x2644)) x2644))
(assert (x4620 x1559))
(assert (=> (>= 10000 x86) (= (x2758 x86) (x1116 x86))))
(assert (x4620 x1002))
(assert (x4620 x1236))
(assert (=> (>= 10000 x768) (= (x1116 x768) (x2758 x768))))
(assert (x4620 x2997))
(assert (x4620 x4840))
(assert (= x1073 (or x449 x314)))
(assert (= x2911 (and (not x38) x1581)))
(assert (x2318 x3996))
(assert (and (x1645 x2695 1461501637330902918203684832716283019655932542976) (x588 x2695 1461501637330902918203684832716283019655932542976) (x4906 x2695 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* 1461501637330902918203684832716283019655932542976 (x2656 x2695 1461501637330902918203684832716283019655932542976)) (x3657 x2695 1461501637330902918203684832716283019655932542976)) x2695))))
(assert (= x1079 (and x2263 x3594)))
(assert (x3251 x3690))
(assert (= x2071 (and x3919 x1349)))
(assert (= x4754 (or x764 x2273)))
(assert (= (x4681 (x2758 x3809)) x3809))
(assert (x4620 x1327))
(assert (x4620 x3161))
(assert (= x252 (or x534 x1639)))
(assert (x3867 x3895))
(assert (x2318 x1584))
(assert (x4620 x1312))
(assert (x4620 x1862))
(assert (= (x4681 (x1008 x551 2)) (+ 2 (x4681 x551))))
(assert (x4620 x3275))
(assert (= (and x1169 x392) x4605))
(assert (= (and x2338 x2252) x1966))
(assert (x4620 x3935))
(assert (= x2416 (and x3613 x2748)))
(assert (x4620 x3006))
(assert (x157 x3691 x3888 x2227 x2832))
(assert (= (and x1099 (not x3461)) x2532))
(assert (x4620 x2738))
(assert (x4620 x1916))
(assert (= (and (not x2879) x3310) x1068))
(assert (x4620 x1670))
(assert (x4620 x2476))
(assert (x4620 x710))
(assert (= (and x1455 x1352) x738))
(assert (= (or x1109 x575 x2409 x2208) x3953))
(assert (= (+ (x4681 x4561) 1) (x4681 (x1008 x4561 1))))
(assert (x4620 x1337))
(assert (x2318 x2863))
(assert (x4620 x1816))
(assert (= x4787 (and x1582 x3078)))
(assert (x4620 x2424))
(assert (x4620 x3466))
(assert (x4620 x4466))
(assert (x2538 x4236))
(assert (x2318 x365))
(assert (and (and (= (- (* (- x4706 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x4706 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x4706 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x4706) (- (* x4706 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4706))) (= (x1807 1000000000000000000 (- x4706 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x4706 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x4706) (x2296 1000000000000000000 x4706) (= (x1807 1000000000000000000 x4706) (* x4706 1000000000000000000)) (x4064 1000000000000000000 x4706) (x218 1000000000000000000 x4706) (x1213 1000000000000000000 x4706)))
(assert (x4620 x3976))
(assert (x3867 x3469))
(assert (x4620 x2093))
(assert (x4620 x624))
(assert (= x4868 (or x3374 x785)))
(assert (x4620 x2118))
(assert (= x1001 (=> (and (= x876 x4040) (= x3738 x4800) (= x520 x571) (= x1840 x4752) (= x4146 x2546)) x490)))
(assert (x4620 x3866))
(assert (= x4464 (or x1185 x129)))
(assert (= (and x1849 x3217) x501))
(assert (x4620 x3385))
(assert (x4620 x2316))
(assert (x4620 x2969))
(assert (x4620 x1070))
(assert (=> (>= 10000 x3403) (= (x2758 x3403) (x1116 x3403))))
(assert (= x1881 (=> (and (or x2554 (and (and (< x4874 4294967296) (= x4727 (x3612 (x2758 x3831))) (>= 1461501637330902918203684832716283019655932542975 x3831) (not (= 0 x4727)) (<= 0 x3831) (> 1461501637330902918203684832716283019655932542976 x3831)) (not x2554))) (and (< x3831 1461501637330902918203684832716283019655932542976) (<= x3831 1461501637330902918203684832716283019655932542975) (= x2554 (= 0 x3831)) (>= x3831 0))) x1632)))
(assert (= x2423 (x4681 (x2758 x2423))))
(assert (x4620 x723))
(assert (x4620 x4691))
(assert (= (or x2922 x4198 x1709 x1750 x1162 x2564 x2871 x3672 x4915) x3541))
(assert (= (and x4583 x1366) x4251))
(assert (x4620 x3818))
(assert (= (and x759 (not x970)) x1076))
(assert (= (x4681 (x1008 x2585 1)) (+ 1 (x4681 x2585))))
(assert (x4620 x4289))
(assert (= (+ 1 (x4681 x4246)) (x4681 (x1008 x4246 1))))
(assert (x4620 x657))
(assert (x4620 x3690))
(assert (x4620 x206))
(assert (= (x4681 (x1116 24044834009420335638544845215851342251227478490780828673611325350056707489792)) 24044834009420335638544845215851342251227478490780828673611325350056707489792))
(assert (= (and x48 (not x3228)) x2129))
(assert (= x4552 (and (not x1730) x3086)))
(assert (= x3417 (and x2088 x1316)))
(assert (= (and x4353 x555) x4264))
(assert (x2318 x2428))
(assert (x4620 x1648))
(assert (= x2009 (and x2181 x3516)))
(assert (x4620 x4027))
(assert (= x3650 (and x881 x2459)))
(assert (= (and (not x2216) x597) x165))
(assert (x4620 x4438))
(assert (x4620 x2209))
(assert (and (x1645 x2784 1461501637330902918203684832716283019655932542976) (x588 x2784 1461501637330902918203684832716283019655932542976) (x4906 x2784 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* 1461501637330902918203684832716283019655932542976 (x2656 x2784 1461501637330902918203684832716283019655932542976)) (x3657 x2784 1461501637330902918203684832716283019655932542976)) x2784))))
(assert (x4620 x1142))
(assert (= 1857877511 (x4681 (x1116 1857877511))))
(assert (= (x4681 (x1116 117300739)) 117300739))
(assert (and (x1645 x104 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x588 x104 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4906 x104 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2656 x104 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x3657 x104 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x104))))
(assert (= x2616 (and x4641 x1023)))
(assert (x4620 x4645))
(assert (x4620 x4596))
(assert (= x31 (=> (and (= x2147 x3828) (= 0 x2043)) x2968)))
(assert (x2318 x2695))
(assert (= (and (not x2181) x3516) x975))
(assert (x4620 x3668))
(assert (x2538 x3539))
(assert (x4620 x3735))
(assert (= (=> (and (= x734 x1753) (= x3448 0)) x3205) x643))
(assert (= (x4681 (x2758 x3279)) x3279))
(assert (x3867 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x4620 x2984))
(assert (= x3291 (and x2427 x3282)))
(assert (x4620 x4887))
(assert (= 4294967296 (x4681 (x1116 4294967296))))
(assert (x2318 x3547))
(assert (= x3830 (and x2636 (not x1551))))
(assert (x4620 x320))
(assert (= (=> (and (= x2719 x2376) (= x1382 0)) x718) x4015))
(assert (x3867 x2812))
(assert (x4620 x1216))
(assert (x4620 x1407))
(assert (= x798 (and x1571 x3959)))
(assert (x4620 x4962))
(assert (x4620 x4142))
(assert (= x3272 (and x944 (not x1858))))
(assert (x4620 x1788))
(assert (= (and x3395 x3014) x2824))
(assert (= (or x1905 x3780) x1849))
(assert (= x2486 (and x4177 (not x523))))
(assert (x4620 x4734))
(assert (= (and x2625 x2421) x1429))
(assert (= x2557 (or x4049 x1415 x4506 x2917 x2151 x3361)))
(assert (x4620 x583))
(assert (x2933 x2227 x2832 x1223 x3888))
(assert (x4620 x4262))
(assert (x4620 x2401))
(assert (x444 x526))
(assert (x4620 x4777))
(assert (= (and x240 (not x714)) x1989))
(assert (= (x4681 (x1008 x1673 1)) (+ 1 (x4681 x1673))))
(assert (x4620 x1796))
(assert (x4620 x3602))
(assert (x2318 x902))
(assert (= (and x3226 x693) x4814))
(assert (x4620 x4637))
(assert (x4620 x4560))
(assert (x4620 x263))
(assert (= x2052 (and (not x870) x1942)))
(assert (= (or (and x1120 (not x4232)) (and (not x4124) x110) x2357 x2163 (and x3507 x2645) (and x2010 x4695)) x2406))
(assert (= (and x3533 x552) x2868))
(assert (=> (>= 10000 x484) (= (x2758 x484) (x1116 x484))))
(assert (x4620 x586))
(assert (= (x1116 398450620) (x2758 398450620)))
(assert (= (and x3802 x574) x3271))
(assert (= x3932 (and (not x4346) x1658)))
(assert (= (and (not x108) x489) x1728))
(assert (= (+ (x4681 x216) 1) (x4681 (x1008 x216 1))))
(assert (x4620 x47))
(assert (= (and (not x2496) x4078) x4495))
(assert (x4620 x1134))
(assert (x1838 x931))
(assert (x157 x3691 x3888 x3888 x1223))
(assert (= x4567 (and (not x1201) x3514)))
(assert (x4620 x3300))
(assert (x3867 x1822))
(assert (and (and (= (- (* (- x2098 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x2098 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x2098 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x2098) (- (* x2098 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2098))) (= (x1807 1000000000000000000 (- x2098 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x2098 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x2098) (x2296 1000000000000000000 x2098) (= (x1807 1000000000000000000 x2098) (* x2098 1000000000000000000)) (x4064 1000000000000000000 x2098) (x218 1000000000000000000 x2098) (x1213 1000000000000000000 x2098)))
(assert (x4620 x3401))
(assert (x4620 x1050))
(assert (=> (<= x388 10000) (= (x2758 x388) (x1116 x388))))
(assert (=> (<= x762 10000) (= (x2758 x762) (x1116 x762))))
(assert (= (x4681 (x2758 x178)) x178))
(assert (= (and (not x3038) x4261) x1884))
(assert (x4620 x3776))
(assert (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 (x4681 (x1116 72570022874062638528011751457397263716769196454539065078543251854057308946432))))
(assert (x4620 x4398))
(assert (x4620 x513))
(assert (x4620 x3234))
(assert (= (and x652 x3419) x2278))
(assert (x4620 x3557))
(assert (x4620 x4811))
(assert (x4620 x830))
(assert (x4620 x4344))
(assert (x4620 x2272))
(assert (=> (>= 10000 x188) (= (x2758 x188) (x1116 x188))))
(assert (= (x4681 (x2758 x4311)) x4311))
(assert (x3601 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x4620 x3001))
(assert (x4620 x1680))
(assert (x4620 x3699))
(assert (=> (>= 10000 x906) (= (x2758 x906) (x1116 x906))))
(assert (x4620 x4197))
(assert (x4244 x726))
(assert (= (or x91 x3122 x1989 x3608) x1679))
(assert (x431 x2101 x2812))
(assert (= (and x80 x3647) x1299))
(assert (= x557 (and x1839 x479)))
(assert (= x777 (x4681 (x2758 x777))))
(assert (x4620 x3349))
(assert (x4620 x2164))
(assert (x4620 x3472))
(assert (= x3827 (and x4801 (not x224))))
(assert (x157 x3888 x3691 x1223 x3888))
(assert (=> (>= 10000 x1043) (= (x2758 x1043) (x1116 x1043))))
(assert (= (and (not x2628) x3032) x4054))
(assert (= x4888 (=> (and (= x1739 (= x2951 x2424)) (= (x2066 (+ x1701 4)) x1035) (= x3893 (x2066 (+ x3331 32))) (= (x2066 (+ 32 x1035)) x3331)) (and (=> (and (not x1739) (= (= x3097 x2951) x1832)) (and (=> (and x1832 (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4070) (= x4472 x3996) (= 100 x3247) (> x2408 0) (not (< x3247 4)) (= x2408 (x3612 (x2758 x3097))) (= 599290589 x207) (> 988262939 x207) (not (> 405663989 x207)) (= x1888 (x672 (- x3247 4))) (not (= 547091486 x207)) (= (or (and (> 96 x1888) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1888) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1888)) x1998) (= x1611 x1951) (< x207 2217467699) (not (= 405663989 x207)) (= x1144 x463))) (and (=> (and (not x1998) (and (= x463 x1134) (= x2963 (= x1580 x1144)) (= (x2022 1461501637330902918203684832716283019655932542975 x1144) x1580))) (and (=> (and x2963 (and (= x1917 x4472) (= (= x4472 x3996) x4642))) (and (=> (and (and (= (x4810 (x2758 x2096) (x1116 5) 0) x4005) (= (> x1611 x3835) x997) (= (x2022 1461501637330902918203684832716283019655932542975 x463) x2096) (= x1951 x3847) (= (x3949 x4005) x3835) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3835) (<= 0 x3835)) x4642) (and (=> (and (and (= (x2022 1461501637330902918203684832716283019655932542975 x463) x4655) (= x3734 (x4810 (x2758 x4655) (x1116 5) 0)) (>= x265 0) (<= x265 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3949 x3734) x265) (= (< x265 x1951) x4388)) (not x997)) (and (=> (and (not x4388) (and (= (x1610 x4026) x3001) (= (> x3001 x1680) x2617) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3001) (>= x3001 0) (= (x4810 (x2758 x4472) (x1116 5) 0) x4026) (= x1680 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1951))) (= (x672 (- x265 x1951)) x2484))) (and (=> x2617 x4403) (=> (and (and (= 1 x1177) (= (x2066 (+ x3001 x1951)) x1516) (= 1 x1886) (= 32 x3177)) (not x2617)) x2092))) (=> x4388 x4403))) (=> x997 x4403))) (=> (not x4642) x4403))) (=> (not x2963) x4403))) (=> x1998 x4403))) (=> (and (not x1832) (= (= x3253 x2951) x3852)) (and (=> (and x3852 (and (= x1822 x1144) (< x4753 988262939) (= x3580 100) (not (= x4753 405663989)) (= x3996 x1982) (not (> 405663989 x4753)) (= x4648 (x672 (- x3580 4))) (< 0 x2738) (not (< x3580 4)) (not (= 547091486 x4753)) (= x3476 (or (> x4648 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x4648 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x4648 96)))) (= x3118 x1611) (= x697 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x2738 (x3612 (x2758 x3253))) (= x4753 599290589) (< x4753 2217467699))) (and (=> (and (and (= x2281 x1822) (= x1370 (x2022 1461501637330902918203684832716283019655932542975 x1144)) (= x3444 (= x1144 x1370))) (not x3476)) (and (=> (not x3444) x4099) (=> (and x3444 (and (= x1982 x1596) (= (= x1982 x3996) x82))) (and (=> (not x82) x4099) (=> (and x82 (and (<= x3144 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1365 (x4810 (x2758 x188) (x1116 5) 0)) (= (< x3144 x1611) x579) (>= x3144 0) (= x709 x3118) (= x3144 (x2038 x1365)) (= (x2022 1461501637330902918203684832716283019655932542975 x1822) x188))) (and (=> x579 x4099) (=> (and (not x579) (and (= (x4810 (x2758 x262) (x1116 5) 0) x3105) (= (x2022 1461501637330902918203684832716283019655932542975 x1822) x262) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x257) (= x4390 (< x257 x3118)) (= (x2038 x3105) x257) (>= x257 0))) (and (=> x4390 x4099) (=> (and (and (= x1089 (x672 (- x257 x3118))) (= x116 (x1242 x2269)) (= (< x2289 x116) x108) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3118)) x2289) (= x2269 (x4810 (x2758 x1982) (x1116 5) 0)) (>= x116 0) (<= x116 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x4390)) (and (=> x108 x4099) (=> (and (not x108) (and (= 32 x3563) (= 1 x4103) (= x2651 1) (= x261 (x2066 (+ x116 x3118))))) x4030))))))))))) (=> x3476 x4099))) (=> (and (and (and (and (= x2322 x1611) (not (< x608 405663989)) (= x3983 x1144) (not (> 4 x230)) (> 2217467699 x608) (not (= 405663989 x608)) (not (= x608 547091486)) (= x81 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (or (> x826 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x826) true) (> 96 x826))) x1608) (< x608 988262939) (= x4725 (x3612 (x2758 x696))) (= x2423 x3996) (= (x672 (- x230 4)) x826) (= 100 x230) (> x4725 0) (= x608 599290589)) x861) (= x861 (= x696 x2951))) (not x3852)) (and (=> x1608 x62) (=> (and (and (= x3355 (= x1144 x2855)) (= (x2022 1461501637330902918203684832716283019655932542975 x1144) x2855) (= x884 x3983)) (not x1608)) (and (=> (not x3355) x62) (=> (and (and (= x1567 (= x3996 x2423)) (= x2133 x2423)) x3355) (and (=> (and (and (= x2493 (x2022 1461501637330902918203684832716283019655932542975 x3983)) (= x1212 (x4810 (x2758 x2493) (x1116 5) 0)) (<= 0 x1224) (= x3364 (< x1224 x1611)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1224) (= x2322 x701) (= x1224 (x340 x1212))) x1567) (and (=> x3364 x62) (=> (and (and (= (x2022 1461501637330902918203684832716283019655932542975 x3983) x1654) (= x767 (x4810 (x2758 x1654) (x1116 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2623) (>= x2623 0) (= x2623 (x340 x767)) (= x2091 (< x2623 x2322))) (not x3364)) (and (=> x2091 x62) (=> (and (not x2091) (and (= (< x4887 x2016) x1023) (= (x672 (- x2623 x2322)) x4937) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2016) (= x4887 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2322))) (<= 0 x2016) (= x2314 (x4810 (x2758 x2423) (x1116 5) 0)) (= x2016 (x1876 x2314)))) (and (=> x1023 x62) (=> (and (and (= 32 x2117) (= x2116 1) (= x1590 1) (= (x2066 (+ x2322 x2016)) x4558)) (not x1023)) x638))))))) (=> (not x1567) x62))))))))))) (=> (and x1739 (and (< 0 x2947) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3751) (= x1611 x3382) (< x947 1466279372) (= 100 x3011) (= x3344 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4651) (and (< x4651 96) (= true (<= x4651 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= 599290589 x947) (not (< x947 599290589)) (= x1612 x1144) (= x3996 x1203) (not (< x3011 4)) (= x2947 (x3612 (x2758 x2424))) (= x4651 (x672 (- x3011 4))))) (and (=> (and (not x3344) (and (= x2394 (x2022 1461501637330902918203684832716283019655932542975 x1144)) (= x362 (= x2394 x1144)))) (and (=> (not x362) x4448) (=> (and (and (= x1203 x1705) (= (= x1203 x3996) x2662)) x362) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1184) (= (x3808 x4280) x1184) (= x3553 (x2022 1461501637330902918203684832716283019655932542975 x1612)) (>= x1184 0) (= (< x1184 x1611) x881) (= x3382 x3075) (= (x4810 (x2758 x3553) (x1116 1) 0) x4280)) x2662) (and (=> (and (= (< x1184 x3382) x927) (not x881)) (and (=> (and (and (= (x2022 1461501637330902918203684832716283019655932542975 x1612) x4815) (= (x672 (- x1184 x3382)) x663) (<= 0 x3401) (<= x3401 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3401 (x1856 x4680)) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3382)) x4295) (= (> x3401 x4295) x4234) (= x4723 (x4810 (x2758 x4815) (x1116 1) 0)) (= (x4810 (x2758 x1203) (x1116 1) 0) x4680)) (not x927)) (and (=> (and (not x4234) (and (= (> x3401 x2426) x2971) (= x2426 (x2066 (+ x3382 x3401))))) (and (=> x2971 x4448) (=> (and (and (= (x4810 (x2758 x3996) x1059 0) x256) (= x2846 (< x1964 x3382)) (= x1059 (x4810 (x2758 x484) (x1116 2) 0)) (= (x4810 (x2758 x1203) (x1116 1) 0) x2042) (= (x1405 x256) x1964) (<= x1964 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2022 1461501637330902918203684832716283019655932542975 x1612) x484) (<= 0 x1964)) (not x2971)) (and (=> x2846 x4448) (=> (and (= x2664 (> x3382 x1964)) (not x2846)) (and (=> x2664 x4448) (=> (and (not x2664) (and (= (x4810 (x2758 x3996) x3402 0) x2848) (= (x4810 (x2758 x289) (x1116 2) 0) x3402) (= (x2022 1461501637330902918203684832716283019655932542975 x1612) x289) (= x3280 (x672 (- x1964 x3382))) (= x2698 32) (= x4115 1))) x4510))))))) (=> x4234 x4448))) (=> x927 x4448))) (=> x881 x4448))) (=> (not x2662) x4448))))) (=> x3344 x4448)))))))
(assert (x4620 x3331))
(assert (= (and x2024 x689) x2777))
(assert (= x2077 (x4681 (x2758 x2077))))
(assert (x4620 x1596))
(assert (x2318 x2301))
(assert (x4620 x4884))
(assert (= (x4681 (x1116 50292402827334880472107169365697159231523039388532301717704428044325102813184)) 50292402827334880472107169365697159231523039388532301717704428044325102813184))
(assert (x4620 x311))
(assert (x4620 x893))
(assert (= (and x518 x3292) x2799))
(assert (and (x2026 x1617 1000000000000000000) (x2201 x1617 1000000000000000000) (x2891 x1617 1000000000000000000) (=> (and (< 0 x1617) (< 0 1000000000000000000)) (and (< (- x1617 1000000000000000000) (* (x2656 x1617 1000000000000000000) 1000000000000000000)) (<= (* (x2656 x1617 1000000000000000000) 1000000000000000000) x1617))) (x3017 x1617 1000000000000000000)))
(assert (= (and x2915 x1647) x4214))
(assert (x2318 x1654))
(assert (= (x4681 (x1008 x3358 1)) (+ 1 (x4681 x3358))))
(assert (x4620 x2623))
(assert (= x3339 x3297))
(assert (= x799 (x4681 (x2758 x799))))
(assert (x3867 x2784))
(assert (= (x4681 (x2758 x102)) x102))
(assert (x4620 x178))
(assert (x2318 x280))
(assert (x4620 x331))
(assert (= x820 (x4681 (x2758 x820))))
(assert (x4620 x403))
(assert (x4620 x2702))
(assert (x4620 x3820))
(assert (= (and x522 (not x4601)) x4082))
(assert (x4620 x2993))
(assert (= (and x3344 x391) x3997))
(assert (x2519 x4778 x1960))
(assert (= x4016 (and x997 x2835)))
(assert (= x2968 (=> (and (= x4335 x3828) (= x2043 x2132)) x3328)))
(assert (= x1757 (or x3399 x4184)))
(assert (x3063 x1612))
(assert (= (+ 1 (x4681 x1396)) (x4681 (x1008 x1396 1))))
(assert (x4244 x2320))
(assert (= (+ 1 (x4681 x901)) (x4681 (x1008 x901 1))))
(assert (= x2217 (x4681 (x2758 x2217))))
(assert (= x2280 (and x4273 (not x922))))
(assert (x4620 x4625))
(assert (x4620 x121))
(assert (= (and x2159 x1794) x3515))
(assert (= x1593 (and x2782 x3625)))
(assert (x4620 x3198))
(assert (x4620 x2428))
(assert (x4620 x2154))
(assert (x2318 x2424))
(assert (= x372 (and x4140 x4684)))
(assert (x4620 x1531))
(assert (= x1831 (or x4803 x2619)))
(assert (x4620 x2833))
(assert (= x4158 (and x1298 x2780)))
(assert (= x86 (x4681 (x2758 x86))))
(assert (= (and (not x183) x4332) x3692))
(assert (= x95 (and x251 x2567)))
(assert (x3601 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x4620 x1063))
(assert (= x4484 (and x1927 (not x2830))))
(assert (x2318 x18))
(assert (x2318 x2895))
(assert (= (=> (and (= 0 x4033) (= x1333 x4320)) x1973) x1592))
(assert (= x2900 (and x324 x3464)))
(assert (= (and x89 x1132) x4349))
(assert (x2538 (- x1223 x3888)))
(assert (= (and (not x4097) x2935) x3014))
(assert (x4620 x3527))
(assert (= (or x3574 x3272 x1718 x241 x1618 x2697) x1482))
(assert (x4620 x3522))
(assert (= x2272 (x4681 (x2758 x2272))))
(assert (x2318 x1623))
(assert (= (=> (and (= x2675 0) (= x3174 x2934)) x4562) x3336))
(assert (x4620 x2307))
(assert (x4620 x3553))
(assert (x4620 x3763))
(assert (= x3905 (and x3852 x2246)))
(assert (x4620 x1599))
(assert (= (=> (and (or x868 (not x868)) (= x868 (= x4623 0))) x92) x416))
(assert (= x2053 (or x2138 x118 x3130 x205)))
(assert (x4620 x2864))
(assert (x4620 x3638))
(assert (x2318 x1896))
(assert (x4620 x2023))
(assert (x4620 x1461))
(assert (= (and x432 (not x2599)) x89))
(assert (= x871 (and (not x1504) x2398)))
(assert (x4620 x721))
(assert (= x2343 (x4681 (x2758 x2343))))
(assert (= x1454 (or x1993 x2230)))
(assert (= (x4681 (x1116 1313710058)) 1313710058))
(assert (x4620 x1393))
(assert (x4620 x1071))
(assert (and (x2026 x2451 1000000000000000000) (x2201 x2451 1000000000000000000) (x2891 x2451 1000000000000000000) (=> (and (< 0 x2451) (< 0 1000000000000000000)) (and (< (- x2451 1000000000000000000) (* (x2656 x2451 1000000000000000000) 1000000000000000000)) (<= (* (x2656 x2451 1000000000000000000) 1000000000000000000) x2451))) (x3017 x2451 1000000000000000000)))
(assert (x4620 x19))
(assert (x4620 x704))
(assert (= x3220 (=> (and (= x2121 x41) (= x1496 x4623)) x416)))
(assert (= (+ (x4681 x562) 1) (x4681 (x1008 x562 1))))
(assert (= (or x1728 x2557) x3766))
(assert (= x4921 (x4681 (x2758 x4921))))
(assert (= (=> (and (= x2866 x2376) (= x3571 0)) x1431) x2674))
(assert (x4620 x4113))
(assert (= (and (not x4388) x4270) x4861))
(assert (= (and x1913 x165) x3378))
(assert (= (x4681 (x1116 2134560854)) 2134560854))
(assert (x4620 x498))
(assert (= x1686 (x4681 (x2758 x1686))))
(assert (x4620 x1095))
(assert (x4620 x1154))
(assert (x4620 x4519))
(assert (x2933 x3691 x3888 x2832 x2227))
(assert (= (or (and x2467 x250) (and (not x1493) x1837)) x3914))
(assert (x4620 x2229))
(assert (= x1096 (and (=> (and (not x4067) (and (= x1353 x3685) (= 0 x1486))) x1163) (=> (and x4067 (and (and (= x2292 (x4810 (x2758 x1353) x1173 0)) (<= x940 1461501637330902918203684832716283019655932542975) (= (ite (< 1 x882) (not (= 0 x940)) (> x882 1)) x1201) (= (x1008 x2292 1) x4035) (= x940 (x2015 x4035)) (< x940 1461501637330902918203684832716283019655932542976) (>= x940 0)) (or (and (not x1201) (= x3005 x1201)) (and (and (<= 0 x2261) (= (x1925 x542) x2261) (= (x1008 x1466 2) x542) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2261) (= x3005 (not x1233)) (= x1233 (< x2261 x3394)) (= (x4810 (x2758 x940) x1173 0) x1466)) x1201)))) x3990))))
(assert (x4620 x675))
(assert (= (x4681 (x2758 x84)) x84))
(assert (x4620 x351))
(assert (= x2274 (and x1789 x2411)))
(assert (x4620 x3744))
(assert (x2538 x4002))
(assert (x4620 x2334))
(assert (= x2441 (or x1107 x2344 x4188)))
(assert (x4620 x4291))
(assert (x4620 x152))
(assert (= x2230 (or x630 x3844)))
(assert (x2318 x2950))
(assert (x4620 x3660))
(assert (x4620 x3076))
(assert (= x4079 (and x2862 (not x646))))
(assert (= (x4681 (x1008 x2112 1)) (+ (x4681 x2112) 1)))
(assert (x4620 x77))
(assert (x3601 1461501637330902918203684832716283019655932542976))
(assert (= (or x758 x999) x440))
(assert (= x4362 (and x3050 (not x3113))))
(assert (x4620 x3071))
(assert (= x3323 (or (and (not x452) x2065) (and x3381 x2127))))
(assert (x4620 x1574))
(assert (x4620 x2842))
(assert (x4620 x3224))
(assert (= x289 (x4681 (x2758 x289))))
(assert (= x4202 (and x3322 (not x1891))))
(assert (x4620 x2573))
(assert (= x831 (and x1786 x2657)))
(assert (x4620 x2583))
(assert (= x2035 (and x2515 x1255)))
(assert (= x4769 (=> (= (= 0 x2476) x158) (and (=> (and (= (or (and (= true (<= x4521 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x4521 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4521)) x795) (not x158)) (and (=> x795 x4590) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1981) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4876)) x1583) (= (< x1583 x1981) x479) (>= x1981 0)) (not x795)) (and (=> (and (and (= (< x1583 x4153) x587) (= (x915 x4946) x4153) (= x3752 (x2066 (+ x1981 x4876))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4153) (<= 0 x4153) (= (x4810 (x2758 x3996) (x1116 5) 0) x4946)) (not x479)) (and (=> (and (not x587) (and (= x2191 (x2066 (+ x4153 x4876))) (= 1 x4637) (= x1238 32))) x3185) (=> x587 x4590))) (=> x479 x4590))))) (=> x158 x4590)))))
(assert (x4620 x4877))
(assert (x4620 x840))
(assert (= (and (not x1228) x2727) x64))
(assert (= x4579 (and x4376 x2089)))
(assert (x4620 x4558))
(assert (= (and x1825 x736) x3647))
(assert (x4620 x1165))
(assert (= (+ 2 (x4681 x3180)) (x4681 (x1008 x3180 2))))
(assert (= x1897 (or x4773 x3295 x2284 x4666 x4720 x1971)))
(assert (x4620 x3563))
(assert (= (and x1463 x1697) x4658))
(assert (x2318 x2644))
(assert (= x413 (or x2470 x1748)))
(assert (= (and (not x3033) x2911) x855))
(assert (x4620 x3197))
(assert (= x1062 (and x4535 x2744)))
(assert (= x1395 (and x3871 (not x2884))))
(assert (= x1573 (and x1201 x3514)))
(assert (x4620 x312))
(assert (= x1435 (x4681 (x2758 x1435))))
(assert (= (+ 2 (x4681 x247)) (x4681 (x1008 x247 2))))
(assert (= (x4681 (x2758 x2863)) x2863))
(assert (= x3002 (and (not x4513) x3266)))
(assert (x4620 x3637))
(assert (x3257 x2227 (- x2832 x3691)))
(assert (x2519 x2882 x1962))
(assert (=> (<= x4396 10000) (= (x1116 x4396) (x2758 x4396))))
(assert (=> (<= x2352 10000) (= (x2758 x2352) (x1116 x2352))))
(assert (x4620 x418))
(assert (x4620 x3764))
(assert (x4620 x1981))
(assert (x2318 x1926))
(assert (x4620 x4752))
(assert (= x3449 (and x1507 x488)))
(assert (x3601 x1144))
(assert (x4620 x2241))
(assert (x4620 x3644))
(assert (x4620 x3989))
(assert (= (x4681 (x1116 3842108676)) 3842108676))
(assert (=> (>= 10000 x777) (= (x2758 x777) (x1116 x777))))
(assert (= (and x4145 x1395) x2403))
(assert (= (x1116 3583811254) (x2758 3583811254)))
(assert (=> (>= 10000 x807) (= (x2758 x807) (x1116 x807))))
(assert (x4620 x4132))
(assert (x4620 x195))
(assert (= x432 (and (not x4001) x3810)))
(assert (x4620 x2227))
(assert (= (and x2971 x2514) x3733))
(assert (= x2551 (and x4594 x3739)))
(assert (= x4523 (and x3974 x2091)))
(assert (x4620 x4933))
(assert (x4620 x4921))
(assert (= (and (not x4690) x1467) x3130))
(assert (= (or x4950 x3541) x334))
(assert (= x1317 (and (not x1271) x716)))
(assert (= (and x3252 x2868) x174))
(assert (x4620 x1612))
(assert (= (+ 1 (x4681 x4028)) (x4681 (x1008 x4028 1))))
(assert (x4620 x299))
(assert (= x2995 (or x4717 (and (not x3362) x790))))
(assert (= (and x3269 x2441) x3399))
(assert (x4620 x3190))
(assert (x3601 x2324))
(assert (= x1902 (x4681 (x2758 x1902))))
(assert (x4620 x4050))
(assert (x4620 x4686))
(assert (= x3796 (and x3341 x2539)))
(assert (x4620 x2498))
(assert (= (=> (and (= x806 x4799) (= 0 x148)) x288) x4286))
(assert (x4620 x2719))
(assert (x4620 x4591))
(assert (x4620 x3279))
(assert (= (and (not x306) x4079) x1143))
(assert (x2318 x3970))
(assert (= (x4681 (x2758 x2993)) x2993))
(assert (= (and x1437 (not x1495)) x4327))
(assert (= x388 (x4681 (x2758 x388))))
(assert (x4620 x564))
(assert (= (x4681 (x2758 x1559)) x1559))
(assert (x2318 x3831))
(assert (x2318 x938))
(assert (= (and x429 (not x4294)) x3341))
(assert (=> (>= 10000 x729) (= (x2758 x729) (x1116 x729))))
(assert (= (and (=> (and (and (= x2217 x500) (= x4228 1)) (not x3561)) x1044) (=> (and (and (= x509 x528) (= x4246 x295) (= x2217 x2573)) x3561) x4688)) x1907))
(assert (and (x1645 x3025 32) (x588 x3025 32) (x4906 x3025 32) (=> (> 32 0) (= (+ (* 32 (x2656 x3025 32)) (x3657 x3025 32)) x3025))))
(assert (x2318 x262))
(assert (x4620 x3991))
(assert (= x3021 (and x98 (not x2473))))
(assert (= (and x1472 (not x1637)) x3608))
(assert (x4620 x3670))
(assert (x3601 x2784))
(assert (x4620 x546))
(assert (= (+ (x4681 x3088) 1) (x4681 (x1008 x3088 1))))
(assert (x4620 x4245))
(assert (x2538 x4909))
(assert (= (or x3166 x4322 x3565 x334) x4368))
(assert (x4620 x253))
(assert (= (+ (x4681 x3454) 1) (x4681 (x1008 x3454 1))))
(assert (x2318 x1425))
(assert (= (=> (and (= x4443 (x4810 (x2758 x2272) x1173 0)) (= x4013 (x1008 x4443 1)) (= x2747 (x1008 x4013 1))) x3048) x3284))
(assert (= (or x3944 x2035) x4497))
(assert (= x2438 (or x174 x453)))
(assert (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x4681 (x1116 16156842317565293874272834530371880720966471053262404558597773956279093428224))))
(assert (= (and x4928 x2853) x4894))
(assert (x4620 x3510))
(assert (= (=> (and (= x4760 (= 0 x830)) (or (not x4760) x4760)) x761) x4285))
(assert (= (and x88 x1863) x4791))
(assert (= x3016 (and x4724 x1747)))
(assert (x157 x2832 x2227 x3888 x3691))
(assert (= x4255 (and x3032 x2628)))
(assert (x4620 x3568))
(assert (and (x2026 x750 1000000000000000000) (x2201 x750 1000000000000000000) (x2891 x750 1000000000000000000) (=> (and (< 0 x750) (< 0 1000000000000000000)) (and (< (- x750 1000000000000000000) (* (x2656 x750 1000000000000000000) 1000000000000000000)) (<= (* (x2656 x750 1000000000000000000) 1000000000000000000) x750))) (x3017 x750 1000000000000000000)))
(assert (x4620 x3545))
(assert (= x199 (=> (and (= (= 0 x3469) x1502) (or x1502 (not x1502))) x949)))
(assert (x2538 x2586))
(assert (x4620 x2751))
(assert (x2318 x3097))
(assert (= (x4681 (x1008 x2883 2)) (+ (x4681 x2883) 2)))
(assert (x4620 x3831))
(assert (= (=> (and (= x10 x3448) (= x3775 x1753)) x3868) x3205))
(assert (= (and x593 x4334) x354))
(assert (= (and x1928 (not x983)) x4476))
(assert (x4620 x3118))
(assert (x2318 x2383))
(assert (= x2930 (x4681 (x2758 x2930))))
(assert (= (and x2102 x4092) x1260))
(assert (= (x4681 (x1008 x1340 2)) (+ (x4681 x1340) 2)))
(assert (= (=> (and (= x3243 x2266) (= x3106 x4891) (= x2586 x3619)) x809) x4825))
(assert (= x2935 (and x1448 x445)))
(assert (x4620 x3817))
(assert (x4620 x1011))
(assert (x2318 x3524))
(assert (= (and x1834 x871) x2564))
(assert (= x715 (and x117 x389)))
(assert (= (and x4754 x3967) x3042))
(assert (= (and x4518 x3222) x3862))
(assert (= (x2758 4294967296) (x1116 4294967296)))
(assert (x4620 x4354))
(assert (= (and x4240 x4174) x2572))
(assert (x4620 x454))
(assert (x2318 x3935))
(assert (x4620 x2110))
(assert (= (and (not x889) x285) x4196))
(assert (= x890 (or x4484 x4586)))
(assert (= (and x3387 x2960) x1326))
(assert (x4620 x1274))
(assert (= (and x1811 x3827) x217))
(assert (x4620 x4537))
(assert (= x3047 x4721))
(assert (x4620 x1287))
(assert (x4620 x4940))
(assert (x4620 x3915))
(assert (= (and x4451 x2995) x203))
(assert (x4620 x1879))
(assert (x4620 x1091))
(assert (= (=> (and (= x4863 x4115) (= x2698 x4866)) x3653) x4510))
(assert (x4620 x1141))
(assert (= (x4681 (x2758 x1940)) x1940))
(assert (x4620 x232))
(assert (= x592 (and (not x1358) x1700)))
(assert (x4620 x4655))
(assert (= (x4681 (x2758 x2171)) x2171))
(assert (= x589 (and (not x3641) x738)))
(assert (x1838 x1570))
(assert (=> (>= 10000 x289) (= (x2758 x289) (x1116 x289))))
(assert (=> (<= x2993 10000) (= (x1116 x2993) (x2758 x2993))))
(assert (= x324 (and (not x50) x3386)))
(assert (= (x1116 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x2758 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (+ (x4681 x722) 1) (x4681 (x1008 x722 1))))
(assert (x4620 x2475))
(assert (x4620 x388))
(assert (= x1324 (=> (and (= x1945 x1547) (= x830 x1125)) x4285)))
(assert (= (x4681 (x2758 x787)) x787))
(assert (x2318 x3103))
(assert (x4620 x4195))
(assert (x4620 x720))
(assert (= x4959 (or x4034 x1457)))
(assert (x4620 x1277))
(assert (x2933 x1223 x3888 x2832 x2227))
(assert (x4620 x4768))
(assert (= x4841 (=> (and (or (and x3674 (and (and (>= 1461501637330902918203684832716283019655932542975 x1192) (= (< 0 x3979) x1637) (= (x3779 x2309) x1192) (<= 0 x1192) (= (x672 (- x2759 x1192)) x3979) (< x1192 1461501637330902918203684832716283019655932542976)) (or (and (and (= (x1008 x682 1) x1682) (> 1461501637330902918203684832716283019655932542976 x807) (>= x807 0) (>= 1461501637330902918203684832716283019655932542975 x807) (= (x4810 (x2758 x2759) x1284 0) x2367) (= (x1823 x4471) x807) (= x4319 x3890) (= x1634 (x1008 x2302 1)) (= (x4810 (x2758 x3255) x1284 0) x682) (= x4471 (x4810 (x2758 x2759) x1284 0)) (= x3890 (x2066 (+ x3134 96))) (= (x4810 (x2758 x807) x1284 0) x2302) (= x814 (x1008 x1682 1))) x1637) (and (and (= (x4810 (x2758 x2759) x1284 0) x1197) (= (x4810 (x2758 x3255) x1284 0) x1673) (= x4770 x4319) (= x3508 (x1008 x2068 1)) (= (x2066 (+ x3134 96)) x4770) (= x2068 (x1008 x1673 1))) (not x1637))))) (and (and (and (<= x1020 1461501637330902918203684832716283019655932542975) (= x1020 (x3779 x2309)) (= (= 0 x1020) x714) (< x1020 1461501637330902918203684832716283019655932542976) (>= x1020 0)) (or (and (and (= x1174 x4319) (= (x1008 x1550 1) x3139) (= x4200 (x1008 x2309 1)) (= (x4810 (x2758 x3255) x1284 0) x1550) (= (x2066 (+ 96 x3134)) x1174) (= (x1008 x3139 1) x3373)) x714) (and (not x714) (and (= (x4810 (x2758 x2301) x1284 0) x3192) (= (x4810 (x2758 x3255) x1284 0) x4120) (= x3489 (x1008 x2309 1)) (= x4561 (x1008 x4120 1)) (>= x2301 0) (= (x1008 x3192 1) x665) (= (x2066 (+ x3134 96)) x4869) (= x4319 x4869) (>= 1461501637330902918203684832716283019655932542975 x2301) (< x2301 1461501637330902918203684832716283019655932542976) (= (x1008 x4561 1) x3570) (= x2301 (x3859 x3489)))))) (not x3674))) (= x3674 (ite (> x882 x3800) (not (= 0 x2759)) (> x882 x3800)))) x4712)))
(assert (= x4049 (and x4390 x912)))
(assert (= (x4681 (x1008 x1649 1)) (+ (x4681 x1649) 1)))
(assert (x4620 x2225))
(assert (x4620 x2266))
(assert (x4620 x3667))
(assert (x4620 x1135))
(assert (= (x1116 988262939) (x2758 988262939)))
(assert (= (and (not x1126) x3623) x129))
(assert (= x4801 (and (not x381) x4579)))
(assert (=> (<= x2827 10000) (= (x2758 x2827) (x1116 x2827))))
(assert (= x1017 (and x4270 x4388)))
(assert (x4620 x1048))
(assert (x4620 x3254))
(assert (x4620 x3970))
(assert (= x3045 (and x2696 x1388)))
(assert (x4620 x1557))
(assert (= x4487 (=> (and (= x17 x3884) (= x457 0)) x2575)))
(assert (= (or x662 x2861 x4193 x3997 x360 x3650 x1054 x2293 x3733) x1422))
(assert (x3867 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x2318 x1094))
(assert (x1838 x104))
(assert (x4620 x1642))
(assert (= (and x3008 x637) x4263))
(assert (= (or x1949 x3862 x4134 x908 x2501) x3374))
(assert (x4620 x2651))
(assert (x4620 x2141))
(assert (= x1639 (and (not x956) x3544)))
(assert (= x3904 (and (not x176) x660)))
(assert (x4620 x2530))
(assert (=> (<= x4548 10000) (= (x2758 x4548) (x1116 x4548))))
(assert (x2318 x3976))
(assert (= x266 (and x2874 (not x3694))))
(assert (= x1970 (and x3694 x2874)))
(assert (= x4309 (and x3692 (not x4765))))
(assert (=> (>= 10000 x3524) (= (x2758 x3524) (x1116 x3524))))
(assert (= (and x983 x1928) x229))
(assert (x4620 x3414))
(assert (x4620 x4710))
(assert (x2933 x2832 x2227 x3691 x3888))
(assert (x4620 x4146))
(assert (x4620 x116))
(assert (x4620 x2992))
(assert (= (x4681 (x1008 x1466 2)) (+ 2 (x4681 x1466))))
(assert (= x3940 (and (not x3150) x3216)))
(assert (x4620 x3396))
(assert (= x3124 (and x2740 (not x4347))))
(assert (not x3994))
(assert (= (=> (and (= 0 x4377) (= x3174 x1133)) x1696) x1828))
(assert (x4620 x4343))
(assert (= (+ 1 (x4681 x656)) (x4681 (x1008 x656 1))))
(assert (x4620 x3619))
(assert (x4620 x4033))
(assert (x4620 x1933))
(assert (= (and (not x3576) x1885) x447))
(assert (=> (<= x2695 10000) (= (x1116 x2695) (x2758 x2695))))
(assert (= (and x1850 x2668) x4512))
(assert (x4620 x1744))
(assert (x4620 x494))
(assert (x4620 x3299))
(assert (= (or x2111 x730) x4664))
(assert (x2318 x1669))
(assert (= x2114 (or x213 (and (not x326) x105))))
(assert (= (and x1892 x2634) x1110))
(assert (x4620 x463))
(assert (x4620 x2462))
(assert (= x3009 (and x447 (not x1293))))
(assert (= 1000000000000000000 (x4681 (x1116 1000000000000000000))))
(assert (x4620 x4794))
(assert (= x239 (and x4048 x684)))
(assert (= (and (=> (and x1255 (and (= x4311 x509) (= x295 x1335) (= x2573 x4149))) x4688) (=> (and (and (= x4149 x2950) (= 1 x3198)) (not x1255)) x4479)) x4275))
(assert (= (x4681 (x2758 x3659)) x3659))
(assert (= x4223 (=> (and (= x4146 x2546) (= x520 x3660) (= x4752 x2238) (= x2294 x3738) (= x4040 x1347)) x490)))
(assert (x4620 x277))
(assert (x4620 x2005))
(assert (x4620 x1426))
(assert (x4620 x1646))
(assert (x4620 x4942))
(assert (x4620 x3962))
(assert (x4620 x4298))
(assert (x4620 x3368))
(assert (= (and x2240 x44) x3640))
(assert (x4620 x2512))
(assert (x3251 x1962))
(assert (= x4261 (or x1168 x2430)))
(assert (x4620 x612))
(assert (x4620 x3952))
(assert (= (x4681 (x2758 x710)) x710))
(assert (= x3546 (and x306 x4079)))
(assert (x4620 x1809))
(assert (x4620 x2595))
(assert (= x878 (and x1395 (not x4145))))
(assert (= x3380 (=> (= (> x4827 0) x1946) (and (=> (and (and (or (and (and (<= x3648 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4786 (x1008 x4178 2)) (= x4178 (x4810 (x2758 x2362) x2336 0)) (= (> x4827 x3648) x2513) (<= 0 x3648) (= x3648 (x278 x4786)) (= (not x2513) x4324)) x1661) (and (not x1661) (= x4324 x1661))) (and (not (= x1952 0)) (= 0 x191) (= x1094 (x2022 1461501637330902918203684832716283019655932542975 x847)) (<= x882 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x882 0) (<= x191 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x191 0) (= (x1008 x3741 2) x3736) (> 1461501637330902918203684832716283019655932542976 x2362) (>= x2362 0) (= x2362 (x2125 x3567)) (= (x278 x3736) x191) (= (ite (< 0 x882) (not (= x2362 0)) (< 0 x882)) x1661) (= x3741 (x4810 (x2758 x1094) x2336 0)) (= x1952 (x2022 1461501637330902918203684832716283019655932542975 x847)) (= (x1008 x2336 1) x3567) (<= x2362 1461501637330902918203684832716283019655932542975))) x1946) x2560) (=> (not x1946) x3047)))))
(assert (x4620 x2027))
(assert (x4620 x1006))
(assert (x4620 x2841))
(assert (x4620 x2987))
(assert (= x543 (or x1704 (and (not x87) x2892) x2890 (and x2858 x4370) (and x4654 x4433) (and (not x625) x3096))))
(assert (= (and x2491 (not x198)) x576))
(assert (= (and x3704 x2820) x1885))
(assert (x4620 x3675))
(assert (= x2782 (and x3191 x2563)))
(assert (= (=> (and (= x1209 (= x4863 0)) (or (not x1209) x1209)) x4775) x3653))
(assert (= (or x4217 x3830) x2081))
(assert (x4620 x3058))
(assert (x4620 x72))
(assert (x4620 x1516))
(assert (x4620 x1215))
(assert (x4620 x706))
(assert (= x3263 (or x821 x1492 x4133 x3546 x3012 x3378 x149 x1939 x974)))
(assert (= x4332 (and x1593 (not x138))))
(assert (x4244 x1565))
(assert (x4620 x2396))
(assert (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x4681 (x1116 77053863734975077137548456399560439977311721439096602559221323163398253314048))))
(assert (and (x2026 x2543 1000000000000000000) (x2201 x2543 1000000000000000000) (x2891 x2543 1000000000000000000) (=> (and (< 0 x2543) (< 0 1000000000000000000)) (and (< (- x2543 1000000000000000000) (* (x2656 x2543 1000000000000000000) 1000000000000000000)) (<= (* (x2656 x2543 1000000000000000000) 1000000000000000000) x2543))) (x3017 x2543 1000000000000000000)))
(assert (x4620 x3098))
(assert (= x2569 (x4681 (x2758 x2569))))
(assert (x4620 x231))
(assert (=> (>= 10000 x1702) (= (x2758 x1702) (x1116 x1702))))
(assert (= (and x3271 (not x4819)) x392))
(assert (and (x1645 x847 1461501637330902918203684832716283019655932542976) (x588 x847 1461501637330902918203684832716283019655932542976) (x4906 x847 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* 1461501637330902918203684832716283019655932542976 (x2656 x847 1461501637330902918203684832716283019655932542976)) (x3657 x847 1461501637330902918203684832716283019655932542976)) x847))))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x1722) (= x931 (x2066 (+ x55 31))) (= x2951 x1722) (not (= 0 x2608)) (not (or (and (> 32 x55) (= true (<= x55 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x55 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1722 (x1005 452)) (= x1701 x320) (= (x2066 (+ 452 x2310)) x320) (= x2310 (x2022 115792089237316195423570985008687907853269984665640564039457584007913129639904 x931))) x4888) x2502))
(assert (=> (>= 10000 x76) (= (x1116 x76) (x2758 x76))))
(assert (x4620 x774))
(assert (= (and (not x2730) x3855) x4886))
(assert (= (x4681 (x1008 x1414 2)) (+ (x4681 x1414) 2)))
(assert (= x1136 (and x3700 x569)))
(assert (= (x2758 2796547477) (x1116 2796547477)))
(assert (x4620 x4428))
(assert (x4620 x292))
(assert (x3257 x3691 x3888))
(assert (= (or x2497 x4150) x4813))
(assert (x2318 x3659))
(assert (x4620 x1623))
(assert (x4620 x1438))
(assert (= (x2758 2678788150) (x1116 2678788150)))
(assert (x4620 x971))
(assert (= x315 (or x609 x1317)))
(assert (x4620 x3664))
(assert (x4620 x1895))
(assert (= x2354 (=> (and (= x17 x2186) (= 0 x2838)) x101)))
(assert (x4620 x634))
(assert (= x4893 (=> (and (= x3089 0) (= x237 x1333)) x1813)))
(assert (x4620 x4380))
(assert (x2538 (- x2227 x3888)))
(assert (= (=> (and (= 0 x2549) (= x2494 x1075)) x2880) x3646))
(assert (x4620 x1403))
(assert (x4620 x1990))
(assert (= (=> (= x1591 (> x1403 0)) (and (=> (and (and (or (and (not x2676) (= x2676 x3550)) (and x2676 (and (>= x4649 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4649) (= (x1008 x1746 2) x290) (= (x4810 (x2758 x2323) x1414 0) x1746) (= x1441 (< x4649 x1403)) (= x4649 (x3769 x290)) (= x3550 (not x1441))))) (and (not (= 0 x2796)) (= x2323 (x4008 x757)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x882) (= (x2022 1461501637330902918203684832716283019655932542975 x847) x3018) (= x2676 (ite (< 0 x882) (not (= x2323 0)) (< 0 x882))) (>= x1161 0) (> 1461501637330902918203684832716283019655932542976 x2323) (= (x1008 x1025 2) x3303) (<= 0 x2323) (= 0 x1161) (= x757 (x1008 x1414 1)) (>= x882 0) (<= x2323 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1161) (= x1025 (x4810 (x2758 x3018) x1414 0)) (= x2796 (x2022 1461501637330902918203684832716283019655932542975 x847)) (= (x3769 x3303) x1161))) x1591) x22) (=> (not x1591) x3339))) x4282))
(assert (x4620 x1045))
(assert (x4620 x386))
(assert (x4620 x2980))
(assert (= (or (and x4788 (not x1502)) x3981) x4191))
(assert (= (=> (and (= x2130 x3293) (= x69 x2307) (= x2648 x2234) (= x4584 x1738)) x1629) x4163))
(assert (= x3946 (and x1578 x4662)))
(assert (= (x4681 (x2758 x1983)) x1983))
(assert (=> (>= 10000 x4192) (= (x1116 x4192) (x2758 x4192))))
(assert (x2538 x4891))
(assert (x4620 x2667))
(assert (x4620 x3547))
(assert (x4620 x2613))
(assert (x4620 x2298))
(assert (= x3829 (or x2724 x3722)))
(assert (= (and x1849 (not x3217)) x2685))
(assert (x4620 x3573))
(assert (x4620 x1177))
(assert (x4620 x3582))
(assert (x4620 x2183))
(assert (x4620 x383))
(assert (= (and x3359 x1232) x250))
(assert (= x4003 (and (not x3704) x2820)))
(assert (x2318 x2771))
(assert (= (x4681 (x2758 x3627)) x3627))
(assert (= x3819 (and x1062 (not x1910))))
(assert (x4620 x4194))
(assert (x2538 x3275))
(assert (x4620 x1413))
(assert (= x4695 (and x1511 x1157)))
(assert (x4620 x1606))
(assert (= (+ 1 (x4681 x3980)) (x4681 (x1008 x3980 1))))
(assert (= x1088 (or (and x346 (not x1209)) x2580)))
(assert (= x3840 (and x4557 x1867)))
(assert (x4620 x3110))
(assert (x4620 x2990))
(assert (= (and x4949 x115) x1507))
(assert (= (and x1936 x2840) x1303))
(assert (x4620 x4260))
(assert (= x1039 (=> (and (= x3967 (= x2827 0)) (or (and (= x1254 (x1008 x1414 2)) x3967) (and (= (x4810 (x2758 x2827) x1414 0) x3523) (not x3967)))) x1677)))
(assert (x4620 x1926))
(assert (x4620 x69))
(assert (x4620 x4784))
(assert (x4620 x1603))
(assert (x4620 x2484))
(assert (= (x4681 (x1008 x4443 1)) (+ (x4681 x4443) 1)))
(assert (x4620 x4115))
(assert (= x1185 (or x150 x793 x632 x4500 x398 x1102)))
(assert (x4620 x2649))
(assert (= (and x3551 x4277) x4198))
(assert (x2318 x4149))
(assert (x4620 x3037))
(assert (x4620 x3175))
(assert (= (and (not x4847) x3045) x1658))
(assert (= (and x4436 x781) x472))
(assert (= (and x94 (not x4598)) x1986))
(assert (x4620 x4705))
(assert (= x225 (and x2597 (not x1901))))
(assert (x4620 x2120))
(assert (x4620 x4010))
(assert (= (and x979 x4324) x4524))
(assert (x4620 x907))
(assert (= x1149 (and x3526 (not x1619))))
(assert (x4620 x1035))
(assert (= (and (not x2024) x689) x291))
(assert (x4620 x18))
(assert (= x4421 (and (not x1246) x53)))
(assert (= x1647 (and (not x1193) x3732)))
(assert (x4620 x1848))
(assert (= (x4681 (x1008 x2828 1)) (+ 1 (x4681 x2828))))
(assert (= (=> (= x420 (= x4827 x1378)) (and (=> x420 x1188) (=> (and (= x3554 (> x1378 0)) (not x420)) (and (=> (not x3554) x3380) (=> (and (and (or (and (not x119) (and (= x3717 (x4810 (x2758 x1686) x2336 0)) (= x343 (x1008 x3717 1)))) (and x119 (= (x1008 x2336 1) x2100))) (and (= x3630 (x3688 x144)) (= (x1008 x4187 1) x144) (< x1686 1461501637330902918203684832716283019655932542976) (= x119 (= 0 x1686)) (>= x1686 0) (= x820 (x3798 x4187)) (> 1461501637330902918203684832716283019655932542976 x820) (>= x820 0) (<= 0 x3630) (= (x3181 x2082) x1686) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3630) (= (x2022 1461501637330902918203684832716283019655932542975 x847) x18) (<= x1686 1461501637330902918203684832716283019655932542975) (<= x820 1461501637330902918203684832716283019655932542975) (not (= 0 x3630)) (= (x1008 x2082 1) x4187) (= x2082 (x4810 (x2758 x18) x2336 0)))) x3554) x3543))))) x1870))
(assert (x4620 x823))
(assert (x4620 x3089))
(assert (x4620 x4912))
(assert (= (=> (and (= (> x1659 0) x3597) (or (and (= x989 x3597) (not x3597)) (and (and (= (x1494 x3767) x3211) (= x4466 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (= x3767 (x4810 (x2758 x4466) (x1116 163) 0)) (= (= x3211 0) x989) (>= 255 x3211) (<= 0 x3211) (< x3211 256)) x3597))) x4456) x3753))
(assert (= x4406 (and x3886 x3450)))
(assert (x4620 x3129))
(assert (x4620 x1345))
(assert (= (and (not x3252) x2868) x453))
(assert (x4620 x702))
(assert (x4620 x4770))
(assert (= (or x3940 x1760) x3666))
(assert (x4620 x3056))
(assert (x4620 x671))
(assert (x4620 x219))
(assert (= (and x2500 (not x3624)) x2697))
(assert (= x3062 (and x234 (not x1988))))
(assert (x4620 x1458))
(assert (= (and (not x2044) x4742) x791))
(assert (x4620 x918))
(assert (x157 x2227 x2832 x3888 x3691))
(assert (x4620 x3316))
(assert (x2318 x2945))
(assert (x4620 x4458))
(assert (x4620 x2394))
(assert (= (=> (and (= x1333 x494) (= x4955 0)) x606) x1272))
(assert (x4620 x4643))
(assert (= (x1116 35417553099779373699389112480655434059402432070290151981503827724506945814528) (x2758 35417553099779373699389112480655434059402432070290151981503827724506945814528)))
(assert (= x630 (or x1078 x4929)))
(assert (= (and x1647 (not x2915)) x4017))
(assert (x4620 x3459))
(assert (= x2396 (x4681 (x2758 x2396))))
(assert (= (and x846 x4600) x2501))
(assert (x4620 x2713))
(assert (= (and x190 (not x3355)) x4254))
(assert (x4620 x2109))
(assert (x4620 x3784))
(assert (x4620 x1315))
(assert (x4620 x762))
(assert (=> (<= x2978 10000) (= (x2758 x2978) (x1116 x2978))))
(assert (x4620 x1691))
(assert (= (=> (and (= x830 x4190) (= x1547 x2299)) x4285) x4408))
(assert (= x2938 (=> (and (= false x3049) (>= x4166 0) (= x3813 (x3392 x1972)) (= x4166 (x1763 x3020)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4166) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3813) (= x3027 false) (<= 0 x3813) (= (x1008 x1972 1) x3020)) x187)))
(assert (= x4101 (or x1164 x3124)))
(assert (x2318 x854))
(assert (= (and x4746 x3413) x4518))
(assert (= x100 (or x3521 x1598)))
(assert (x4620 x4417))
(assert (= x4746 (and x3620 x3285)))
(assert (x2318 x1327))
(assert (x4620 x333))
(assert (= (and (not x3345) x4007) x141))
(assert (= (and (not x4701) x4053) x3815))
(assert (x4620 x4350))
(assert (x4620 x509))
(assert (x2318 x3708))
(assert (x4620 x4320))
(assert (x4620 x120))
(assert (= (+ 1 (x4681 x2068)) (x4681 (x1008 x2068 1))))
(assert (x2318 x2276))
(assert (x4620 x1290))
(assert (x4620 x3697))
(assert (x2318 x4392))
(assert (x2538 (- x3691 x2832)))
(assert (x4620 x4954))
(assert (= (x4681 (x1008 x56 1)) (+ (x4681 x56) 1)))
(assert (= (x1116 2691771752) (x2758 2691771752)))
(assert (= (x1116 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x2758 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= (and x4414 x2847) x2313))
(assert (= (and (not x803) x376) x4351))
(assert (= x1543 (not (and (= x694 (x3095 x3311)) (> 1461501637330902918203684832716283019655932542976 x694) (<= 0 x694) (= x3311 (x1008 x56 1)) (<= x694 1461501637330902918203684832716283019655932542975) (= x56 (x4810 (x2758 x4392) x2336 0))))))
(assert (= (and x3534 (not x2959)) x2634))
(assert (= x132 (and x2142 x2114)))
(assert (x4620 x1270))
(assert (= (x4681 (x2758 x4051)) x4051))
(assert (x4620 x2672))
(assert (x4620 x779))
(assert (x4620 x707))
(assert (= (and x489 x108) x3361))
(assert (x4620 x1406))
(assert (x4620 x2014))
(assert (= (x4681 (x1008 x4553 1)) (+ 1 (x4681 x4553))))
(assert (x4620 x4051))
(assert (x4620 x1943))
(assert (= (or x4279 x4308 x935) x114))
(assert (=> (>= 10000 x2895) (= (x1116 x2895) (x2758 x2895))))
(assert (= (and x4695 (not x2010)) x110))
(assert (x4620 x2593))
(assert (x4620 x473))
(assert (= (and x2434 x2826) x613))
(assert (= (=> (and (= x612 0) (= x4330 x2388)) x1880) x4858))
(assert (= (or (and x2533 x1436) x2610 x203 x3716 (and x4501 x126)) x3149))
(assert (x4620 x2600))
(assert (=> (<= x2258 10000) (= (x2758 x2258) (x1116 x2258))))
(assert (= x3487 (=> (and (= 0 x3895) (= x3703 x1557)) x2940)))
(assert (=> (>= 10000 x2247) (= (x1116 x2247) (x2758 x2247))))
(assert (x3257 x3888 (- x1223 x2227)))
(assert (= (or x3914 x4128) x4168))
(assert (= x2163 (and x4025 x2505)))
(assert (x4620 x296))
(assert (= x933 (and x846 (not x4600))))
(assert (= (and x2919 x1522) x2073))
(assert (= x2372 (or x2236 x976)))
(assert (x4620 x4903))
(assert (x2318 x2096))
(assert (=> (<= x262 10000) (= (x1116 x262) (x2758 x262))))
(assert (x4620 x3864))
(assert (= x4177 (and x1249 (not x872))))
(assert (= x948 (=> (= x3003 x345) x4009)))
(assert (= x807 (x4681 (x2758 x807))))
(assert (x4620 x2766))
(assert (=> (<= x938 10000) (= (x1116 x938) (x2758 x938))))
(assert (= (and x2369 (not x128)) x142))
(assert (= x373 (and (not x998) x161)))
(assert (x4620 x2301))
(assert (= (and (not x4025) x2505) x4384))
(assert (and (x2026 x2489 1000000000000000000) (x2201 x2489 1000000000000000000) (x2891 x2489 1000000000000000000) (=> (and (< 0 x2489) (< 0 1000000000000000000)) (and (< (- x2489 1000000000000000000) (* (x2656 x2489 1000000000000000000) 1000000000000000000)) (<= (* (x2656 x2489 1000000000000000000) 1000000000000000000) x2489))) (x3017 x2489 1000000000000000000)))
(assert (x4620 x133))
(assert (x4620 x3306))
(assert (x4620 x1245))
(assert (x4620 x503))
(assert (x4620 x2918))
(assert (x4620 x2378))
(assert (x4620 x2543))
(assert (x4244 x3742))
(assert (=> (<= x3976 10000) (= (x2758 x3976) (x1116 x3976))))
(assert (= x1231 (or x1446 x538)))
(assert (= x2226 (and x2188 x3554)))
(assert (x2538 x3467))
(assert (= x1305 (or (and x791 (not x1032)) (and x4742 x2044))))
(assert (x2318 x67))
(assert (= (x4681 (x2758 x3786)) x3786))
(assert (= x1331 (and x2859 x49)))
(assert (x4620 x2212))
(assert (= (and (not x3000) x4255) x2629))
(assert (= x1157 (and x4520 (not x3942))))
(assert (= (and x3597 x1752) x4304))
(assert (= (or x4931 (and (not x3912) x746)) x1099))
(assert (= x1752 (or x2372 x1931)))
(assert (=> (>= 10000 x789) (= (x2758 x789) (x1116 x789))))
(assert (x2318 x3039))
(assert (= x1954 (=> (and (= x2401 x734) (= 0 x929)) x151)))
(assert (x4620 x2996))
(assert (x4620 x2569))
(assert (x4620 x3233))
(assert (x2933 x2227 x2832 x3691 x3888))
(assert (= x3702 (and (not x2567) x251)))
(assert (= x181 (=> (and (= 0 x3469) (= x1797 x2841)) x199)))
(assert (x4620 x4509))
(assert (x4620 x4153))
(assert (= (or x2416 x160) x4788))
(assert (x4620 x3382))
(assert (= x3240 (=> (and (= x2147 x2999) (= x1648 0)) x4766)))
(assert (x4620 x1072))
(assert (and (and (= (- (* (- x4891 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x4891 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x4891 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x4891) (- (* x4891 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4891))) (= (x1807 1000000000000000000 (- x4891 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x4891 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x4891) (x2296 1000000000000000000 x4891) (= (x1807 1000000000000000000 x4891) (* x4891 1000000000000000000)) (x4064 1000000000000000000 x4891) (x218 1000000000000000000 x4891) (x1213 1000000000000000000 x4891)))
(assert (= x2105 (and x890 x2929)))
(assert (x4620 x3121))
(assert (= x4137 (or x2888 x1475)))
(assert (= x484 (x4681 (x2758 x484))))
(assert (= x1790 (x4681 (x2758 x1790))))
(assert (= (and x4843 x4447) x4707))
(assert (= x1765 (and x1608 x1579)))
(assert (x4620 x180))
(assert (x4620 x1996))
(assert (= (x1116 1038142104) (x2758 1038142104)))
(assert (= (and x1390 x3665) x4181))
(assert (x4620 x1184))
(assert (= (and x4733 x2313) x3770))
(assert (= (and (not x555) x4353) x2859))
(assert (x4620 x1051))
(assert (x4620 x4839))
(assert (= (x4681 (x1008 x1682 1)) (+ (x4681 x1682) 1)))
(assert (x4620 x3881))
(assert (= x1160 (and (not x553) x4463)))
(assert (= x1393 (x4681 (x2758 x1393))))
(assert (= x683 (and x1198 x3376)))
(assert (= x1636 (=> (and (= x1841 x3595) (= 0 x2647)) x2039)))
(assert (x4620 x4937))
(assert (x4620 x2986))
(assert (x4620 x2294))
(assert (= x2566 (and (not x1976) x885)))
(assert (x4620 x3629))
(assert (= x4225 (or x3263 x2566)))
(assert (x4620 x2324))
(assert (= (=> (and (= x1622 (= x820 0)) (or (and (not x1622) (= x924 (x4810 (x2758 x820) x2336 0))) (and x1622 (= (x1008 x2336 2) x3781)))) x1093) x3543))
(assert (x4620 x742))
(assert (x4620 x4795))
(assert (= x980 (and x2532 x3572)))
(assert (x4620 x2509))
(assert (= (and x4433 (not x4654)) x3347))
(assert (x4620 x159))
(assert (= x1950 (and x3031 (not x4302))))
(assert (= (and x3581 x934) x4779))
(assert (x4620 x353))
(assert (= x3241 (and x4130 x2629)))
(assert (= x4373 (x4681 (x2758 x4373))))
(assert (x4620 x2423))
(assert (= x1036 (and x962 x1007)))
(assert (x4620 x4556))
(assert (= (and x3476 x3905) x1415))
(assert (x4620 x3659))
(assert (=> (>= 10000 x4815) (= (x2758 x4815) (x1116 x4815))))
(assert (= (x4681 (x2758 x902)) x902))
(assert (x4620 x3683))
(assert (= (and x496 x3518) x535))
(assert (= x2604 (or x1462 x2205)))
(assert (x4620 x237))
(assert (x4620 x3389))
(assert (x4620 x688))
(assert (=> (<= x838 10000) (= (x1116 x838) (x2758 x838))))
(assert (x4244 x58))
(assert (=> (<= x18 10000) (= (x2758 x18) (x1116 x18))))
(assert (= x4143 (or x683 x3372 x1363 x1214 x925 x1563)))
(assert (= x1845 (or x4155 x4824 x1155 x4497 x4652 x79)))
(assert (= x797 (and (not x1689) x2170)))
(assert (= (and x2943 x3298) x2961))
(assert (= (x2758 117300739) (x1116 117300739)))
(assert (= (and (=> (and (and (= x1650 1) (= x4392 x1990)) (not x507)) x4170) (=> x507 x1543)) x3203))
(assert (= (and x625 x3096) x2892))
(assert (x4620 x4727))
(assert (x4620 x262))
(assert (= (x2758 1461501637330902918203684832716283019655932542976) (x1116 1461501637330902918203684832716283019655932542976)))
(assert (= x691 (=> (and (= x1683 (= x774 0)) (or x1683 (not x1683))) x1402)))
(assert (x4620 x2300))
(assert (x4620 x1176))
(assert (x4620 x1945))
(assert (= x384 (and x862 x4202)))
(assert (x4620 x3183))
(assert (x3257 x2227 (- x2832 x3888)))
(assert (= x2975 (x4681 (x2758 x2975))))
(assert (= (+ (x4681 x1793) 2) (x4681 (x1008 x1793 2))))
(assert (= (=> (and (= 0 x3071) (= x4027 x3459)) x4037) x4267))
(assert (x4620 x3785))
(assert (x4620 x4387))
(assert (x2318 x2343))
(assert (x4620 x700))
(assert (x4620 x1253))
(assert (and (x1645 x2153 32) (x588 x2153 32) (x4906 x2153 32) (=> (> 32 0) (= (+ (* 32 (x2656 x2153 32)) (x3657 x2153 32)) x2153))))
(assert (x4620 x4920))
(assert (= x4548 (x4681 (x2758 x4548))))
(assert (= x4776 (or x100 x1296 x1773 x3628)))
(assert (x4620 x1723))
(assert (=> (>= 10000 x696) (= (x1116 x696) (x2758 x696))))
(assert (and (x1645 x1570 32) (x588 x1570 32) (x4906 x1570 32) (=> (> 32 0) (= (+ (* 32 (x2656 x1570 32)) (x3657 x1570 32)) x1570))))
(assert (x4244 1000000000000000000))
(assert (x4620 x2956))
(assert (= (or x4677 x4709) x3310))
(assert (= (or x4737 x3953) x4093))
(assert (x4620 x4102))
(assert (= x1555 (and x4575 (not x3238))))
(assert (= x131 (and x1291 x1601)))
(assert (= (and x1687 x1098) x4014))
(assert (= (not (and (<= x711 1461501637330902918203684832716283019655932542975) (= (x4810 (x2758 x2573) x295 0) x760) (= (x1008 x760 1) x973) (<= 0 x711) (< x711 1461501637330902918203684832716283019655932542976) (= (x537 x973) x711))) x4688))
(assert (x4620 x967))
(assert (= (=> (= x4268 (= 0 x1012)) (and (=> (and (= x3160 (or (and (< x668 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x668))) (> x668 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not x4268)) (and (=> (and (not x3160) (and (>= x154 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x154) (= x1404 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4850))) (= (< x1404 x154) x1915))) (and (=> x1915 x2354) (=> (and (and (= (x2450 x591) x2074) (= (< x1404 x2074) x2181) (>= x2074 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2074) (= x591 (x4810 (x2758 x3996) (x1116 5) 0)) (= x3099 (x2066 (+ x154 x4850)))) (not x1915)) (and (=> (and (not x2181) (and (= 1 x2838) (= x2212 (x2066 (+ x2074 x4850))) (= x2186 32))) x101) (=> x2181 x2354))))) (=> x3160 x2354))) (=> x4268 x2354))) x558))
(assert (x4244 x2543))
(assert (x4620 x788))
(assert (x4620 x2074))
(assert (= (=> (and (or (not x817) x817) (= (= 0 x1012) x817)) x558) x1308))
(assert (= (=> (and (= x2376 x2121) (= 0 x1496)) x3220) x2067))
(assert (= (=> (and (or (and (not x2080) (and (or x2849 (and (and (>= 1461501637330902918203684832716283019655932542975 x4310) (= (x969 x1423) x4310) (= x1423 (x1008 x3064 1)) (<= 0 x4310) (> 1461501637330902918203684832716283019655932542976 x4310)) (not x2849))) (and (= (x2277 x3064) x2023) (< x2023 1461501637330902918203684832716283019655932542976) (>= x2023 0) (<= x2023 1461501637330902918203684832716283019655932542975) (= (= x2023 0) x2849)))) (and x2080 (and (or (and (and (<= x1603 1461501637330902918203684832716283019655932542975) (= (x4072 x1444) x1603) (<= 0 x1603) (= x1444 (x4810 (x2758 x500) x4246 0)) (< x1603 1461501637330902918203684832716283019655932542976)) x2998) (not x2998)) (and (= x3052 (x672 (- x500 x406))) (= (x2277 x3064) x406) (>= 1461501637330902918203684832716283019655932542975 x406) (<= 0 x406) (> 1461501637330902918203684832716283019655932542976 x406) (= x2998 (< 0 x3052)))))) (= (ite (> x882 x4228) (not (= x500 0)) (< x4228 x882)) x2080)) x1108) x1044))
(assert (= x2869 (or x4081 x1278)))
(assert (=> (<= x857 10000) (= (x1116 x857) (x2758 x857))))
(assert (x4620 x2051))
(assert (x2318 x3553))
(assert (x4620 x992))
(assert (= (and x3904 (not x1900)) x4078))
(assert (x4620 x4157))
(assert (= x1812 (x4681 (x2758 x1812))))
(assert (= x3944 (and x3561 x1329)))
(assert (x3257 x1223 (- x3888 x2832)))
(assert (x2318 x4551))
(assert (x4620 x3018))
(assert (x4620 x4103))
(assert (= x1519 (or x2650 x4859 x3946 x2071 x4580 x3936)))
(assert (x4620 x4852))
(assert (x2318 x1983))
(assert (= (and (=> (and (and (= x3607 x1256) (= x2460 0)) (not x3926)) x3772) (=> (and (and (or (and (not x2567) (and (= x4430 x539) (= x2154 x4180) (< (* x3137 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x2098 x4180) (<= x2688 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2688 (x4444 x2112)) (>= x2688 0) (not (< x4831 0)) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2098)) x4831) (= x539 (x2656 x2451 1000000000000000000)) (= (* 1000000000000000000 x3137) x3337) (= x771 x7) (= x4675 (> x2098 115792089237316195423570985008687907853269984665640564039457)) (> x4836 0) (= x7 (+ x4430 x4401)) (= x2451 (x2656 x3337 x4836)) (= x4401 x2688) (= (x1421 (* 1000000000000000000 x2098)) x3137) (= 0 x727) (= 0 x3634) (= (ite x4675 1 0) x3634) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2688 x539)))) (and (and (< 0 x4836) (= (* x2810 1000000000000000000) x2360) (= x771 x4895) (<= x3029 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x727 x2718) (not (> x465 x3029)) (= (x4444 x2112) x1520) (<= x1520 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 0 x311) (= (x1421 (* x4909 1000000000000000000)) x3484) (= x3029 (x1194 x1207)) (>= x1520 0) (= x2154 x1659) (= x2810 (x1421 (* x4909 1000000000000000000))) (= x351 0) (> x3888 0) (= (x2656 x3301 1000000000000000000) x465) (< (* 1000000000000000000 x3484) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x311 (ite x2149 1 0)) (= (> x4909 115792089237316195423570985008687907853269984665640564039457) x1038) (= (ite x1038 1 0) x351) (= x3473 x2504) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* 1000000000000000000 x2810)) (= x2504 (x2656 x2160 1000000000000000000)) (<= 0 x3029) (= (x2656 x2003 x4836) x2160) (= x1520 x1479) (= x4895 (+ x1479 x3473)) (< (+ x1520 x2504) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x672 (- x3029 x465)) x2718) (= x2149 (< 115792089237316195423570985008687907853269984665640564039457 x4909)) (= (x2656 x2360 x3888) x3301) (= (* 1000000000000000000 x3484) x2003)) x2567)) (and (= x2567 (> x2098 x4909)) (= (x4810 (x2758 x2863) (x1116 159) 0) x3393) (= x1207 (x1008 x2112 1)) (= x1659 x4909) (= x3691 (x1194 x1207)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3691) (= x2098 (x2656 x750 1000000000000000000)) (= x2863 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1807 x3691 x3888)) (>= x3691 0) (= x2112 (x4810 (x2758 x3255) x3393 0)) (not (< x1659 0)) (= x750 (x1807 x3691 x3888)))) x3926) x3795)) x1248))
(assert (x4620 x888))
(assert (= (x4681 (x2758 x4396)) x4396))
(assert (x4620 x3324))
(assert (x4620 x2275))
(assert (x4620 x712))
(assert (= x3873 (=> (= (= x2152 x603) x16) (and (=> (and (not x16) (= (> x2152 0) x2024)) (and (=> (and (and (and (>= x4396 0) (= x3358 (x1008 x2011 1)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4912) (= x1548 (x2066 (+ x3607 96))) (<= 0 x4912) (= x1826 (= x4396 0)) (> 1461501637330902918203684832716283019655932542976 x4396) (= x4396 (x2189 x2011)) (>= x2527 0) (>= 1461501637330902918203684832716283019655932542975 x2527) (not (= 0 x4912)) (= x2527 (x3643 x3358)) (>= 1461501637330902918203684832716283019655932542975 x4396) (> 1461501637330902918203684832716283019655932542976 x2527) (= x946 (x1008 x3358 1)) (= (x4810 (x2758 x3255) x1284 0) x2011) (= x4912 (x4914 x946))) (or (and x1826 (= (x1008 x1284 1) x2837)) (and (not x1826) (and (= x901 (x4810 (x2758 x4396) x1284 0)) (= (x1008 x901 1) x2985))))) x2024) x2099) (=> (and (= x3607 x3134) (not x2024)) x731))) (=> (and x16 (= x3607 x3223)) x2924)))))
(assert (= x1668 (and x850 x800)))
(assert (x4620 x825))
(assert (x4620 x1391))
(assert (x4620 x505))
(assert (x4620 x1256))
(assert (= (and x4405 x497) x4915))
(assert (x4620 x4338))
(assert (x4620 x1439))
(assert (= x2636 (and (not x763) x4538)))
(assert (= x2099 (=> (and (= (= x2527 0) x2879) (or (and (not x2879) (= x1872 (x4810 (x2758 x2527) x1284 0))) (and x2879 (= x478 (x1008 x1284 2))))) x909)))
(assert (= x4816 (=> (and (= x2737 x2544) (= x28 x439)) x1210)))
(assert (x4620 x2547))
(assert (= (+ 2 (x4681 x859)) (x4681 (x1008 x859 2))))
(assert (= (and (not x1877) x4552) x2707))
(assert (x4620 x2823))
(assert (x4620 x1822))
(assert (x4620 x873))
(assert (= x4069 (and x3921 x2684)))
(assert (x4620 x4862))
(assert (x4620 x4756))
(assert (= (=> (and (= x43 x1328) (= 0 x1187)) x2021) x40))
(assert (= (x4681 (x2758 x729)) x729))
(assert (x4620 x2941))
(assert (x4620 x1594))
(assert (= (x4681 (x2758 x3253)) x3253))
(assert (x157 x2832 x2227 x3691 x3888))
(assert (x2318 x2140))
(assert (= x4436 (and x3865 x4797)))
(assert (x4620 x3880))
(assert (= x906 (x4681 (x2758 x906))))
(assert (= (and x780 x547) x1205))
(assert (x4620 x4668))
(assert (= x3367 (or x1454 x1884)))
(assert (x4620 x1167))
(assert (x4620 x1336))
(assert (= (and (not x4899) x2415) x477))
(assert (x4620 x196))
(assert (= x730 (or x3200 x582 x3417 x3796 x531 x4581)))
(assert (x4620 x787))
(assert (= (and x3214 (not x3729)) x2870))
(assert (= (or x607 x2640 x1195 x4597 x958 x1110) x950))
(assert (x4620 x3687))
(assert (= x1627 (or x2155 (and x3906 (not x951)))))
(assert (x4620 x2559))
(assert (= x3929 (or x96 x1545 x2818 x4707 x827 x3360)))
(assert (= x3941 (and x3729 x3214)))
(assert (x4620 x2426))
(assert (x4620 x32))
(assert (= (=> (and (= x2544 x2934) (= x439 x2675)) x1210) x4562))
(assert (= (x4681 (x2758 x4639)) x4639))
(assert (x4620 x1075))
(assert (x4620 x4909))
(assert (= (x4681 (x2758 x2600)) x2600))
(assert (=> (<= x3786 10000) (= (x1116 x3786) (x2758 x3786))))
(assert (x4640 x2562 x4836))
(assert (x3063 x463))
(assert (= (=> (and (= x3117 (x1008 x955 1)) (= (x4810 (x2758 x710) x2336 0) x2677) (= (x2022 1461501637330902918203684832716283019655932542975 x847) x710) (= x955 (x1008 x2677 1))) x3380) x1093))
(assert (= (and x3026 (not x2728)) x1028))
(assert (= x3772 (=> (and (= x2480 x2460) (= x2266 x1256) (not (< x77 x4925))) x3549)))
(assert (x4620 x1650))
(assert (=> (<= x854 10000) (= (x1116 x854) (x2758 x854))))
(assert (x4620 x4084))
(assert (= x1513 (=> (= x1674 (= 0 x439)) (and (=> (and (= x2102 (or (and (> 32 x2544) (= true (<= x2544 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2544))) (not x1674)) (and (=> (and (not x2102) (and (= x3353 x3497) (= x1606 x1756) (= x4023 1))) x1420) (=> (and x2102 (= x3497 x3642)) x1552))) (=> (and x1674 (= x3642 x3497)) x1552)))))
(assert (x4620 x86))
(assert (x4620 x2339))
(assert (x4620 x1328))
(assert (= (and x1244 (not x1591)) x4737))
(assert (x4620 x4807))
(assert (x4620 x1957))
(assert (x4620 x4095))
(assert (x4620 x1112))
(assert (= (=> (and (or (not x951) x951) (= x951 (= 0 x2476))) x4769) x1015))
(assert (= (or (and x3840 (not x848)) (and x1867 (not x4557)) x4571 x831 (and x1619 x3526) (and x4181 x4164)) x4870))
(assert (= (and x1627 x158) x2340))
(assert (= x2943 (and x4718 x835)))
(assert (x4620 x2525))
(assert (x4620 x4944))
(assert (= x3308 (and x3603 (not x1080))))
(assert (= (or x4476 x229) x1329))
(assert (= (and x4259 x4787) x1159))
(assert (= x3462 (and x3651 x2253)))
(assert (= (x4681 (x2758 x4472)) x4472))
(assert (x4620 x289))
(assert (x2318 x1346))
(assert (= x2096 (x4681 (x2758 x2096))))
(assert (x2538 x2098))
(assert (= x3831 (x4681 (x2758 x3831))))
(assert (= x236 (or x3410 x4442)))
(assert (= (x4681 (x2758 x3039)) x3039))
(assert (= (+ (x4681 x682) 1) (x4681 (x1008 x682 1))))
(assert (x3867 x463))
(assert (x2538 (- x3691 x2227)))
(assert (x4620 x3114))
(assert (= (and x803 x376) x1618))
(assert (= x1189 (and x4264 (not x2800))))
(assert (= (and x2597 x1901) x4851))
(assert (x4620 x2388))
(assert (= x1629 (=> (and (= x2992 (x3504 x4216)) (= x2746 x69) (= x3279 x2808) (= x2404 (x1008 x4216 1)) (>= x441 0) (= x1981 x4584) (= x39 x3293) (= x441 (x3142 x2404)) (= (x2066 (+ x69 32)) x3304) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2992) (<= 0 x2992) (<= x441 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x154 x2648)) x3080)))
(assert (x4620 x3630))
(assert (x4620 x1156))
(assert (= x2369 (and x1198 (not x3376))))
(assert (x4620 x2737))
(assert (= (and x843 (not x380)) x23))
(assert (x4620 x4516))
(assert (x2318 x1117))
(assert (= x811 (and x2086 (not x172))))
(assert (= x449 (and x3108 (not x4892))))
(assert (=> (>= 10000 x1337) (= (x1116 x1337) (x2758 x1337))))
(assert (x2318 x857))
(assert (= (and (not x2252) x2338) x1598))
(assert (x4620 x3656))
(assert (= (x1116 2030502250) (x2758 2030502250)))
(assert (x4620 x4604))
(assert (= (x2758 72570022874062638528011751457397263716769196454539065078543251854057308946432) (x1116 72570022874062638528011751457397263716769196454539065078543251854057308946432)))
(assert (= (and x2172 x4011) x1261))
(assert (x4620 x1460))
(assert (= x4241 (and x2431 (not x2899))))
(assert (x4620 x2527))
(assert (x4620 x4649))
(assert (x2538 (- x3888 x2832)))
(assert (= (and x1861 (not x170)) x2492))
(assert (x4620 x3246))
(assert (x4620 x2058))
(assert (= (and x4393 (not x3468)) x2145))
(assert (x4620 x1283))
(assert (= (and (not x1859) x2786) x54))
(assert (= (or x3152 x3057) x2297))
(assert (x4620 x2958))
(assert (x2538 (- x3691 x1223)))
(assert (x4620 x4042))
(assert (=> (<= x2775 10000) (= (x2758 x2775) (x1116 x2775))))
(assert (= x4459 (or x1433 x2194)))
(assert (= (or x1480 x1101 x4418 x1124) x746))
(assert (x4620 x2107))
(assert (= x4526 (and x2048 x1832)))
(assert (= (and (not x3926) x2869) x2741))
(assert (x4620 x1477))
(assert (x4620 x2320))
(assert (x4620 x2308))
(assert (x3251 x1960))
(assert (x4620 x618))
(assert (x4620 x2646))
(assert (= (and x3449 x3101) x4764))
(assert (x2538 (- x2832 x3691)))
(assert (x4620 x173))
(assert (= x2896 (or x3149 x2814)))
(assert (x4620 x2669))
(assert (= x1411 (and (not x3728) x42)))
(assert (x4620 x330))
(assert (= (x4681 (x2758 x153)) x153))
(assert (=> (<= x3018 10000) (= (x2758 x3018) (x1116 x3018))))
(assert (= x616 (or x3377 (and x3907 x4694) x2009 x1524 (and x3160 x1678))))
(assert (x4620 x3985))
(assert (x4620 x2792))
(assert (x2318 x906))
(assert (x4620 x2153))
(assert (x4620 x1049))
(assert (and (x1645 x2324 32) (x588 x2324 32) (x4906 x2324 32) (=> (> 32 0) (= (+ (* 32 (x2656 x2324 32)) (x3657 x2324 32)) x2324))))
(assert (x4620 x1147))
(assert (= x2305 (and x2374 x4911)))
(assert (= x2144 (and (not x2971) x2514)))
(assert (x4620 x3309))
(assert (= (x4681 (x1008 x2677 1)) (+ (x4681 x2677) 1)))
(assert (= x4250 (and (not x3561) x1329)))
(assert (= (x4681 (x1008 x2321 1)) (+ 1 (x4681 x2321))))
(assert (x4620 x2258))
(assert (x3601 x1822))
(assert (= x171 (or x2187 x2931 x1303 x1875 x2799 x477)))
(assert (= x122 (and x4502 (not x4488))))
(assert (x4620 x697))
(assert (x2318 x2975))
(assert (x4620 x3882))
(assert (x4620 x4573))
(assert (x2538 x3484))
(assert (x4620 x3343))
(assert (=> (>= 10000 x2077) (= (x1116 x2077) (x2758 x2077))))
(assert (x4620 x2281))
(assert (x4620 x3172))
(assert (= (or x3283 x4515) x1155))
(assert (= (and x2584 x273) x1022))
(assert (= (and x1837 x1493) x4128))
(assert (x4620 x1443))
(assert (= (or x2445 x4427) x3050))
(assert (x4244 x3337))
(assert (x4620 x741))
(assert (= (x2758 1856199391) (x1116 1856199391)))
(assert (x4620 x4528))
(assert (x2318 x4639))
(assert (x4620 x1003))
(assert (= (and (not x2565) x4251) x4529))
(assert (= (=> (and (= x4857 x4027) (= x2613 0)) x1191) x824))
(assert (x4620 x2715))
(assert (x2318 x2669))
(assert (x4620 x4396))
(assert (= (=> (and (= 0 x3456) (= x2494 x3882)) x3435) x319))
(assert (= x949 (=> (and (> x4555 0) (= (x2066 (+ x215 32)) x3234) (= x2882 (x2022 x2435 x390)) (= (ite (= x2808 1) 1 0) x2435) (= (ite (= x1797 0) 1 0) x1962) (= (x672 (- x3234 x3568)) x4457) (= x215 (x2066 (+ x3568 4))) (= (ite (> x1797 31) 1 0) x390) (= (x2022 1461501637330902918203684832716283019655932542975 x2695) x3609) (= x2735 (= x3609 x3097)) (= x34 (x3119 x2882 x1962)) (= (x2022 x34 x3469) x4555)) (and (=> (and (and (= x4226 36) (= x4226 x4457) (< 0 x4626) (not (< x4226 4)) (= 2691771752 x2660) (< x2660 2929553584) (= x2533 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1908) (and (> 32 x1908) (= (<= x1908 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x1908 (x672 (- x4226 4))) (not (< x2660 2217467699)) (= x2568 x2586) (= (x3612 (x2758 x3097)) x4626) (= x4711 72570022874062638528011751457397263716769196454539065078543251854057308946432) (not (> 2691771752 x2660))) x2735) (and (=> (and (and (= x2568 x2018) (= x1571 (= x2424 x959)) (>= x959 0) (> 1461501637330902918203684832716283019655932542976 x959) (= x629 128) (>= 1461501637330902918203684832716283019655932542975 x959)) (not x2533)) (and (=> (and (= (= x3097 x959) x3710) (not x1571)) (and (=> (and (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x454) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4386) (and (= (<= x4386 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x4386))) x1304) (= x4386 (x672 (- x455 4))) (= x3559 (x3612 (x2758 x3097))) (= x658 x2018) (not (= 405663989 x513)) (= x455 100) (not (= x513 547091486)) (= x513 599290589) (not (< x513 405663989)) (= x3996 x2600) (< x513 988262939) (= 100 x455) (> 2217467699 x513) (= x399 x3097) (< 0 x3559) (not (< x455 4))) x3710) (and (=> (and (and (= x1216 x2600) (= x547 (= x2600 x3996))) (not x1304)) (and (=> (not x547) x4858) (=> (and x547 (and (= x866 x399) (= (= x3097 x399) x3206))) (and (=> (not x3206) x4858) (=> (and x3206 (and (= x3024 (< x4547 x2018)) (= x4547 (x2328 x3842)) (= (x4810 (x2758 x2600) (x1116 5) 0) x3842) (= x4904 x658) (<= x4547 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4547))) (and (=> x3024 x4858) (=> (and (not x3024) (and (= x2384 (x4810 (x2758 x2600) (x1116 5) 0)) (= (< x792 x658) x2959) (<= 0 x792) (<= x792 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2328 x2384) x792))) (and (=> x2959 x4858) (=> (and (not x2959) (and (<= x352 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1894 (x672 (- x792 x658))) (= x352 (x4172 x1400)) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x658)) x4900) (<= 0 x352) (= x1892 (< x4900 x352)) (= x1400 (x4810 (x2758 x399) (x1116 5) 0)))) (and (=> x1892 x4858) (=> (and (and (= 1 x612) (= 1 x66) (= 32 x2388) (= x486 (x2066 (+ x658 x352)))) (not x1892)) x1880))))))))))) (=> x1304 x4858))) (=> (and (not x3710) (= (= x959 x3253) x594)) (and (=> (and (and (and (and (< x3084 2217467699) (= x581 (x672 (- x3776 4))) (= x3097 x681) (= 599290589 x3084) (> x4108 0) (< x3084 988262939) (= x2018 x4933) (not (= 405663989 x3084)) (= x3776 100) (not (< x3776 4)) (= x4370 (or (and (= true (<= x581 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x581 96)) (> x581 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x3996 x2171) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1018) (not (< x3084 405663989)) (= (x3612 (x2758 x696)) x4108) (= 100 x3776) (not (= x3084 547091486))) x3400) (= (= x959 x696) x3400)) (not x594)) (and (=> x4370 x2948) (=> (and (not x4370) (and (= x3040 x2171) (= (= x3996 x2171) x625))) (and (=> (and x625 (and (= x87 (= x3097 x681)) (= x2268 x681))) (and (=> (and x87 (and (= x3302 x4933) (= x1851 (x1912 x305)) (= x305 (x4810 (x2758 x2171) (x1116 5) 0)) (<= x1851 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x2018 x1851) x4654) (<= 0 x1851))) (and (=> x4654 x2948) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1334) (>= x1334 0) (= (> x4933 x1334) x2609) (= (x4810 (x2758 x2171) (x1116 5) 0) x2211) (= x1334 (x1912 x2211))) (not x4654)) (and (=> (and (and (<= 0 x1576) (= (x4810 (x2758 x681) (x1116 5) 0) x1307) (= x426 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4933))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1576) (= x889 (< x426 x1576)) (= (x550 x1307) x1576) (= (x672 (- x1334 x4933)) x2137)) (not x2609)) (and (=> x889 x2948) (=> (and (and (= x2448 1) (= 32 x1672) (= 1 x4622) (= (x2066 (+ x4933 x1576)) x2583)) (not x889)) x3422))) (=> x2609 x2948))))) (=> (not x87) x2948))) (=> (not x625) x2948))))) (=> (and x594 (and (= (or (and (< x4884 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4884) true)) (> x4884 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2358) (= x2877 100) (= x4573 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (< x3098 405663989)) (< x3098 2217467699) (not (= 547091486 x3098)) (< x3098 988262939) (= x3097 x2644) (= (x3612 (x2758 x3253)) x1791) (= x3996 x1623) (< 0 x1791) (not (= 405663989 x3098)) (= 100 x2877) (not (< x2877 4)) (= (x672 (- x2877 4)) x4884) (= 599290589 x3098) (= x3602 x2018))) (and (=> x2358 x4665) (=> (and (and (= x1720 (= x1623 x3996)) (= x1311 x1623)) (not x2358)) (and (=> (and (and (= (= x3097 x2644) x4077) (= x2576 x2644)) x1720) (and (=> (and x4077 (and (= x3602 x3125) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x378) (= x378 (x3610 x3807)) (= x1689 (< x378 x2018)) (>= x378 0) (= (x4810 (x2758 x1623) (x1116 5) 0) x3807))) (and (=> (and (and (<= 0 x3875) (<= x3875 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3610 x2373) x3875) (= x2373 (x4810 (x2758 x1623) (x1116 5) 0)) (= x4700 (< x3875 x3602))) (not x1689)) (and (=> (and (not x4700) (and (<= 0 x3957) (= x1050 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3602))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3957) (= x3321 (x4810 (x2758 x2644) (x1116 5) 0)) (= x3957 (x4624 x3321)) (= x4892 (< x1050 x3957)) (= x990 (x672 (- x3875 x3602))))) (and (=> (and (and (= x3945 32) (= 1 x4391) (= 1 x4260) (= (x2066 (+ x3957 x3602)) x3744)) (not x4892)) x3849) (=> x4892 x4665))) (=> x4700 x4665))) (=> x1689 x4665))) (=> (not x4077) x4665))) (=> (not x1720) x4665))))))))) (=> (and x1571 (and (= x3300 100) (= 100 x3300) (= (x3612 (x2758 x2424)) x4832) (= x1780 (x672 (- x3300 4))) (= x4663 599290589) (= x3127 x3097) (= x418 x2018) (> 1466279372 x4663) (not (> 599290589 x4663)) (not (> 4 x3300)) (= x3996 x857) (= x623 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1780)) (< x1780 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1780))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3699) (< 0 x4832))) (and (=> (and (not x623) (and (= x829 x857) (= x4159 (= x3996 x857)))) (and (=> (not x4159) x1377) (=> (and (and (= x4354 x3127) (= (= x3127 x3097) x2172)) x4159) (and (=> (and x2172 (and (= x3737 (> x2018 x2265)) (= x1742 (x4810 (x2758 x857) (x1116 1) 0)) (<= 0 x2265) (= (x3755 x1742) x2265) (= x418 x4865) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2265))) (and (=> (and (not x3737) (= (< x2265 x418) x50)) (and (=> (and (and (= x1263 (x4810 (x2758 x3127) (x1116 1) 0)) (= x2641 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x418))) (= x3464 (> x1830 x2641)) (= (x672 (- x2265 x418)) x2444) (= x3165 (x4810 (x2758 x857) (x1116 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1830) (= (x3693 x1263) x1830) (<= 0 x1830)) (not x50)) (and (=> x3464 x1377) (=> (and (not x3464) (and (= x4668 (x2066 (+ x418 x1830))) (= x4413 (> x1830 x4668)))) (and (=> (and (and (= x3814 (x4745 x3617)) (<= x3814 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x828 (x4810 (x2758 x857) (x1116 2) 0)) (<= 0 x3814) (= x763 (< x3814 x418)) (= x3617 (x4810 (x2758 x3097) x828 0))) (not x4413)) (and (=> (and (not x763) (= (< x3814 x418) x1551)) (and (=> (and (not x1551) (and (= 1 x2701) (= x4556 (x672 (- x3814 x418))) (= 32 x51))) x3276) (=> x1551 x1377))) (=> x763 x1377))) (=> x4413 x1377))))) (=> x50 x1377))) (=> x3737 x1377))) (=> (not x2172) x1377))))) (=> x623 x1377))))) (=> x2533 x4487))) (=> (and (= (= x3609 x3253) x4499) (not x2735)) (and (=> (and x4499 (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x808) (and (= (<= x808 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x808 32))) x467) (< 0 x743) (= x4876 x2586) (= x808 (x672 (- x4209 4))) (not (> 2217467699 x364)) (= 2691771752 x364) (= x4457 x4209) (not (> 2691771752 x364)) (not (> 4 x4209)) (= x567 72570022874062638528011751457397263716769196454539065078543251854057308946432) (= (x3612 (x2758 x3253)) x743) (> 2929553584 x364) (= 36 x4209))) (and (=> x467 x4590) (=> (and (and (< x2378 1461501637330902918203684832716283019655932542976) (= x4876 x3219) (= x2255 (= x2378 x2424)) (= 128 x1190) (<= x2378 1461501637330902918203684832716283019655932542975) (>= x2378 0)) (not x467)) (and (=> (and (not x2255) (= (= x2378 x3097) x380)) (and (=> (and (not x380) (= x4804 (= x2378 x3253))) (and (=> (and (not x4804) (and (and (and (not (> 405663989 x1806)) (= 599290589 x1806) (not (= 547091486 x1806)) (= x4568 100) (= x3763 (x3612 (x2758 x696))) (not (= 405663989 x1806)) (= x854 x3996) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x699) (< 0 x3763) (= 100 x4568) (= (x672 (- x4568 4)) x2349) (not (< x4568 4)) (= x4469 x3219) (= (or (> x2349 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x2349 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x2349))) x3238) (< x1806 2217467699) (< x1806 988262939) (= x3253 x787)) x4793) (= (= x2378 x696) x4793))) (and (=> (and (not x3238) (and (= x854 x3566) (= x3290 (= x3996 x854)))) (and (=> (not x3290) x2290) (=> (and (and (= x3246 x787) (= x693 (= x3253 x787))) x3290) (and (=> (and x693 (and (>= x1803 0) (= (> x3219 x1803) x4671) (= x386 x4469) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1803) (= x1803 (x1912 x1487)) (= x1487 (x4810 (x2758 x854) (x1116 5) 0)))) (and (=> (and (not x4671) (and (= x3357 (< x4182 x4469)) (>= x4182 0) (<= x4182 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4182 (x1912 x565)) (= (x4810 (x2758 x854) (x1116 5) 0) x565))) (and (=> x3357 x2290) (=> (and (and (<= x3991 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3991) (= (x4810 (x2758 x787) (x1116 5) 0) x1069) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4469)) x4095) (= x1298 (< x4095 x3991)) (= (x3966 x1069) x3991) (= x888 (x672 (- x4182 x4469)))) (not x3357)) (and (=> (and (and (= 1 x253) (= 1 x3427) (= x1809 (x2066 (+ x4469 x3991))) (= x25 32)) (not x1298)) x2242) (=> x1298 x2290))))) (=> x4671 x2290))) (=> (not x693) x2290))))) (=> x3238 x2290))) (=> (and x4804 (and (> 2217467699 x3015) (not (= x3015 405663989)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3638) (= x3522 (x672 (- x631 4))) (= (or (and (> 96 x3522) (= (<= x3522 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x3522 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1246) (not (< x631 4)) (= x3253 x729) (> x3656 0) (= x631 100) (= 100 x631) (= x1327 x3996) (not (< x3015 405663989)) (= x1151 x3219) (= x3656 (x3612 (x2758 x3253))) (= x3015 599290589) (< x3015 988262939) (not (= 547091486 x3015)))) (and (=> (and (not x1246) (and (= x661 x1327) (= (= x1327 x3996) x2179))) (and (=> (and (and (= x445 (= x3253 x729)) (= x156 x729)) x2179) (and (=> (and (and (= (x3610 x2167) x4042) (= x1151 x1568) (= (x4810 (x2758 x1327) (x1116 5) 0) x2167) (= (> x3219 x4042) x4097) (<= x4042 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4042 0)) x445) (and (=> (and (not x4097) (and (= x3645 (x4810 (x2758 x1327) (x1116 5) 0)) (>= x357 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x357) (= x3395 (> x1151 x357)) (= x357 (x3610 x3645)))) (and (=> (and (and (= x3120 (x286 x4032)) (= x2702 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1151))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3120) (>= x3120 0) (= x4032 (x4810 (x2758 x729) (x1116 5) 0)) (= (x672 (- x357 x1151)) x3933) (= x2850 (> x3120 x2702))) (not x3395)) (and (=> (and (and (= x3370 (x2066 (+ x1151 x3120))) (= x3071 1) (= 1 x3644) (= x3459 32)) (not x2850)) x4037) (=> x2850 x4267))) (=> x3395 x4267))) (=> x4097 x4267))) (=> (not x445) x4267))) (=> (not x2179) x4267))) (=> x1246 x4267))))) (=> (and (and (= x3954 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= x1016 547091486)) (< 0 x928) (= x777 x3253) (not (< x1016 405663989)) (not (> 4 x4339)) (= x4222 (or (and (> 96 x1642) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1642) true)) (> x1642 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x4339 100) (= 599290589 x1016) (> 2217467699 x1016) (= x2658 x3996) (= 100 x4339) (not (= x1016 405663989)) (= (x672 (- x4339 4)) x1642) (> 988262939 x1016) (= x928 (x3612 (x2758 x3097))) (= x775 x3219)) x380) (and (=> x4222 x4963) (=> (and (and (= x3191 (= x3996 x2658)) (= x2658 x3405)) (not x4222)) (and (=> (not x3191) x4963) (=> (and x3191 (and (= x4438 x777) (= x3625 (= x777 x3253)))) (and (=> (and x3625 (and (= x4679 (x4810 (x2758 x2658) (x1116 5) 0)) (= x138 (> x3219 x2508)) (= x775 x3034) (= (x2328 x4679) x2508) (<= x2508 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2508 0))) (and (=> (and (not x138) (and (= x4091 (x4810 (x2758 x2658) (x1116 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x918) (= (x2328 x4091) x918) (= (< x918 x775) x183) (>= x918 0))) (and (=> x183 x4963) (=> (and (not x183) (and (<= x4910 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x775)) x3863) (= (> x4910 x3863) x4765) (<= 0 x4910) (= (x4810 (x2758 x777) (x1116 5) 0) x3709) (= (x1956 x3709) x4910) (= x2962 (x672 (- x918 x775))))) (and (=> x4765 x4963) (=> (and (and (= 1 x3424) (= 1 x549) (= x3915 (x2066 (+ x4910 x775))) (= x4083 32)) (not x4765)) x2400))))) (=> x138 x4963))) (=> (not x3625) x4963))))))))) (=> (and x2255 (and (= 100 x2646) (not (< x2646 4)) (= x2646 100) (= x4394 (x3612 (x2758 x2424))) (= x3219 x272) (> 1466279372 x2198) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4195) (= x700 (x672 (- x2646 4))) (= x4954 x3996) (> x4394 0) (= 599290589 x2198) (= x3253 x3090) (not (> 599290589 x2198)) (= x998 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x700) (and (= true (<= x700 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x700 96)))))) (and (=> x998 x824) (=> (and (not x998) (and (= x4111 (= x3996 x4954)) (= x1033 x4954))) (and (=> (and x4111 (and (= (= x3090 x3253) x2411) (= x3090 x1090))) (and (=> (and (and (= x235 (< x840 x3219)) (= x272 x4220) (= x877 (x4810 (x2758 x4954) (x1116 1) 0)) (>= x840 0) (<= x840 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x840 (x3755 x877))) x2411) (and (=> (and (not x235) (= (> x272 x840) x4902)) (and (=> x4902 x824) (=> (and (not x4902) (and (= (> x2823 x4528) x4302) (= (x1814 x2443) x2823) (= x4528 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x272))) (= x4148 (x672 (- x840 x272))) (= x1158 (x4810 (x2758 x4954) (x1116 1) 0)) (= (x4810 (x2758 x3090) (x1116 1) 0) x2443) (<= 0 x2823) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2823))) (and (=> (and (not x4302) (and (= (< x776 x2823) x2422) (= x776 (x2066 (+ x2823 x272))))) (and (=> (and (and (= x4419 (x4810 (x2758 x3253) x3778 0)) (= x4243 (x4745 x4419)) (= x3232 (> x272 x4243)) (<= 0 x4243) (= (x4810 (x2758 x4954) (x1116 2) 0) x3778) (<= x4243 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x2422)) (and (=> x3232 x824) (=> (and (= x4204 (> x272 x4243)) (not x3232)) (and (=> x4204 x824) (=> (and (not x4204) (and (= (x672 (- x4243 x272)) x4697) (= x4857 32) (= 1 x2613))) x1191))))) (=> x2422 x824))) (=> x4302 x824))))) (=> x235 x824))) (=> (not x2411) x824))) (=> (not x4111) x824))))))))) (=> (and (and (and (and (not (< x2241 4)) (= (x672 (- x2241 4)) x3846) (not (< x2864 2691771752)) (not (< x2864 2217467699)) (= x2241 36) (= 2691771752 x2864) (< 0 x2060) (= x2060 (x3612 (x2758 x696))) (= x2586 x4850) (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 x3056) (< x2864 2929553584) (= x2241 x4457) (= x3907 (or (> x3846 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x3846 32) (= true (<= x3846 57896044618658097711785492504343953926634992332820282019728792003956564819967)))))) x3170) (= (= x3609 x696) x3170)) (not x4499)) (and (=> (and (not x3907) (and (< x2059 1461501637330902918203684832716283019655932542976) (<= 0 x2059) (>= 1461501637330902918203684832716283019655932542975 x2059) (= x4705 128) (= x4850 x1412) (= x3942 (= x2059 x2424)))) (and (=> (and (and (= (x672 (- x1237 4)) x2079) (not (> 599290589 x2288)) (= 599290589 x2288) (< x2288 1466279372) (= (x3612 (x2758 x2424)) x3872) (= x1262 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 100 x1237) (= x4516 x1412) (not (> 4 x1237)) (= x696 x3403) (= x1237 100) (= x2019 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2079) true) (< x2079 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2079))) (= x1413 x3996) (> x3872 0)) x3942) (and (=> (and (not x2019) (and (= x310 x1413) (= x1065 (= x3996 x1413)))) (and (=> (not x1065) x319) (=> (and (and (= x353 x3403) (= x2700 (= x696 x3403))) x1065) (and (=> (and x2700 (and (= x1097 (> x1412 x47)) (>= x47 0) (<= x47 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x47 (x3755 x1713)) (= x342 x4516) (= (x4810 (x2758 x1413) (x1116 1) 0) x1713))) (and (=> (and (= (< x47 x4516) x1064) (not x1097)) (and (=> (and (and (= x529 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4516))) (= (< x529 x1605) x2143) (<= x1605 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x476 (x4810 (x2758 x3403) (x1116 1) 0)) (= x3605 (x4810 (x2758 x1413) (x1116 1) 0)) (= x1605 (x3179 x476)) (= (x672 (- x47 x4516)) x4807) (>= x1605 0)) (not x1064)) (and (=> x2143 x319) (=> (and (not x2143) (and (= (x2066 (+ x1605 x4516)) x2093) (= x4488 (< x2093 x1605)))) (and (=> x4488 x319) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2776) (= x2776 (x4745 x341)) (= (> x4516 x2776) x4772) (= x341 (x4810 (x2758 x696) x1795 0)) (>= x2776 0) (= (x4810 (x2758 x1413) (x1116 2) 0) x1795)) (not x4488)) (and (=> x4772 x319) (=> (and (not x4772) (= (> x4516 x2776) x956)) (and (=> (and (and (= x63 (x672 (- x2776 x4516))) (= x3456 1) (= x3882 32)) (not x956)) x3435) (=> x956 x319))))))))) (=> x1064 x319))) (=> x1097 x319))) (=> (not x2700) x319))))) (=> x2019 x319))) (=> (and (= (= x3097 x2059) x1511) (not x3942)) (and (=> (and (not x1511) (= (= x2059 x3253) x1390)) (and (=> (and (not x1390) (and (and (and (= x3836 x3996) (not (= x4289 547091486)) (= (x672 (- x728 4)) x812) (= 599290589 x4289) (< x4289 2217467699) (= x721 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3406 x1412) (< x4289 988262939) (not (> 405663989 x4289)) (= x728 100) (= (x3612 (x2758 x696)) x2833) (= x1316 (or (> x812 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x812) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x812))))) (not (= x4289 405663989)) (not (> 4 x728)) (= x1926 x696) (= x728 100) (> x2833 0)) x896) (= x896 (= x2059 x696)))) (and (=> (and (not x1316) (and (= x263 x3836) (= x3162 (= x3836 x3996)))) (and (=> (not x3162) x1529) (=> (and (and (= (= x1926 x696) x635) (= x1926 x664)) x3162) (and (=> (not x635) x1529) (=> (and x635 (and (= (x4810 (x2758 x3836) (x1116 5) 0) x2331) (= x3749 (x1912 x2331)) (= x3406 x4835) (<= x3749 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x3749 0) (= x4294 (> x1412 x3749)))) (and (=> (and (and (= x2539 (> x3406 x4010)) (= x4010 (x1912 x2785)) (<= x4010 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4810 (x2758 x3836) (x1116 5) 0) x2785) (<= 0 x4010)) (not x4294)) (and (=> (and (not x2539) (and (= x3877 (< x2417 x3529)) (<= 0 x3529) (= (x470 x3649) x3529) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3529) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3406)) x2417) (= (x672 (- x4010 x3406)) x395) (= x3649 (x4810 (x2758 x1926) (x1116 5) 0)))) (and (=> (and (not x3877) (and (= x4441 (x2066 (+ x3406 x3529))) (= x1517 1) (= 1 x4398) (= 32 x1127))) x4796) (=> x3877 x1529))) (=> x2539 x1529))) (=> x4294 x1529))))))) (=> x1316 x1529))) (=> (and (and (= x2764 100) (= (x3612 (x2758 x3253)) x3661) (not (= x704 405663989)) (= x2945 x3996) (= x1412 x1387) (not (< x704 405663989)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4935) (and (= true (<= x4935 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x4935))) x4164) (= x696 x4135) (< x704 988262939) (> x3661 0) (= 100 x2764) (> 2217467699 x704) (= x1531 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x704 599290589) (= (x672 (- x2764 4)) x4935) (not (< x2764 4)) (not (= 547091486 x704))) x1390) (and (=> (and (not x4164) (and (= x197 x2945) (= (= x2945 x3996) x4557))) (and (=> (not x4557) x3646) (=> (and (and (= (= x696 x4135) x848) (= x2615 x4135)) x4557) (and (=> (not x848) x3646) (=> (and (and (= x1619 (> x1412 x3229)) (= x4903 x1387) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3229) (= x865 (x4810 (x2758 x2945) (x1116 5) 0)) (<= 0 x3229) (= (x3610 x865) x3229)) x848) (and (=> (and (and (<= 0 x4262) (= (x3610 x3135) x4262) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4262) (= x3135 (x4810 (x2758 x2945) (x1116 5) 0)) (= x2046 (> x1387 x4262))) (not x1619)) (and (=> (and (not x2046) (and (= (> x3172 x3227) x1786) (<= 0 x3172) (= x1560 (x4810 (x2758 x4135) (x1116 5) 0)) (= x3843 (x672 (- x4262 x1387))) (= x3172 (x2755 x1560)) (= x3227 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1387))) (<= x3172 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x1786 x3646) (=> (and (and (= 1 x2549) (= x4618 1) (= x65 (x2066 (+ x3172 x1387))) (= x1075 32)) (not x1786)) x2880))) (=> x2046 x3646))) (=> x1619 x3646))))))) (=> x4164 x3646))))) (=> (and x1511 (and (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4189) (= x2990 100) (= x2569 x696) (= x3996 x2343) (= (x672 (- x2990 4)) x1723) (< x4359 988262939) (= x4359 599290589) (not (> 4 x2990)) (not (= 405663989 x4359)) (not (< x4359 405663989)) (= x2990 100) (< x4359 2217467699) (= x2010 (or (> x1723 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1723) true) (> 96 x1723)))) (= x1412 x3670) (= (x3612 (x2758 x3097)) x2456) (not (= 547091486 x4359)) (> x2456 0))) (and (=> x2010 x2135) (=> (and (not x2010) (and (= x2343 x936) (= (= x3996 x2343) x4124))) (and (=> (and x4124 (and (= x2569 x2972) (= x4232 (= x696 x2569)))) (and (=> (not x4232) x2135) (=> (and (and (= x2645 (< x778 x1412)) (= x2012 x3670) (= x778 (x2328 x4514)) (<= x778 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x778) (= x4514 (x4810 (x2758 x2343) (x1116 5) 0))) x4232) (and (=> (and (and (= x4025 (> x3670 x3340)) (>= x3340 0) (= (x2328 x1506) x3340) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3340) (= (x4810 (x2758 x2343) (x1116 5) 0) x1506)) (not x2645)) (and (=> (and (not x4025) (and (= (x867 x1699) x70) (= (< x2886 x70) x2854) (= x3861 (x672 (- x3340 x3670))) (>= x70 0) (<= x70 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1699 (x4810 (x2758 x2569) (x1116 5) 0)) (= x2886 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3670))))) (and (=> x2854 x2135) (=> (and (not x2854) (and (= 1 x4231) (= x3261 32) (= (x2066 (+ x3670 x70)) x2196) (= 1 x1846))) x4498))) (=> x4025 x2135))) (=> x2645 x2135))))) (=> (not x4124) x2135))))))))) (=> x3907 x2354)))))))))
(assert (x4620 x1810))
(assert (x4620 x4863))
(assert (x4620 x4955))
(assert (= (and x23 (not x4804)) x4238))
(assert (x4620 x4021))
(assert (x4620 x3229))
(assert (x4620 x1577))
(assert (= x4928 (and (not x308) x4728)))
(assert (x4620 x1918))
(assert (= (or x1305 x4615) x3513))
(assert (x4244 x2805))
(assert (= (=> (and (= x3806 0) (= x1333 x4948)) x3102) x3485))
(assert (= (not (and (= (x4810 (x2758 x2383) x1414 0) x3978) (= (x348 x2729) x2076) (<= x2076 1461501637330902918203684832716283019655932542975) (<= 0 x2076) (> 1461501637330902918203684832716283019655932542976 x2076) (= (x1008 x3978 1) x2729))) x1965))
(assert (x4620 x2238))
(assert (x4620 x4739))
(assert (= x1446 (and (not x862) x4202)))
(assert (x4620 x2965))
(assert (= x2293 (and x332 x2664)))
(assert (= x1433 (or (and x4165 (not x3927)) (and x2821 x3462))))
(assert (x4620 x2895))
(assert (x2318 x2778))
(assert (x2318 x3279))
(assert (x4620 x3752))
(assert (x4620 x1738))
(assert (= (and x1900 x3904) x4849))
(assert (x4620 x2147))
(assert (x2318 x2493))
(assert (= (and x1239 x3348) x674))
(assert (= (x4681 (x1116 1466279372)) 1466279372))
(assert (x4620 x212))
(assert (= (and (not x4700) x797) x3108))
(assert (= (x4681 (x1116 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (= (and (not x3585) x2949) x2463))
(assert (x4620 x4633))
(assert (x157 x2832 x2227 x3888 x1223))
(assert (= (and x4292 x368) x935))
(assert (and (x1645 x1612 1461501637330902918203684832716283019655932542976) (x588 x1612 1461501637330902918203684832716283019655932542976) (x4906 x1612 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* 1461501637330902918203684832716283019655932542976 (x2656 x1612 1461501637330902918203684832716283019655932542976)) (x3657 x1612 1461501637330902918203684832716283019655932542976)) x1612))))
(assert (= (or x171 x1076) x1124))
(assert (x3063 x1144))
(assert (x4620 x1952))
(assert (x4620 x2288))
(assert (x4620 x3407))
(assert (= (=> (and (= x3163 x3595) (= x4908 x2647)) x60) x2039))
(assert (= (and x2253 (not x3651)) x1232))
(assert (= x2021 (=> (and (= x2279 x1328) (= x1187 x109) (= x1840 x1770) (= x1347 x2774)) x4882)))
(assert (x4620 x4373))
(assert (x4620 x3928))
(assert (= x566 (=> (= (= x10 0) x2142) (and (=> (and (not x2142) (= (or (> x3775 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3775) true) (> 32 x3775))) x117)) (and (=> (and (not x117) (and (= x1187 1) (= x2984 x1328) (= x4943 x4560))) x2021) (=> (and x117 (= x2984 x43)) x40))) (=> (and x2142 (= x2984 x43)) x40)))))
(assert (= x4030 (=> (and (= x4863 x2651) (= x3563 x4866)) x3653)))
(assert (x4620 x2540))
(assert (x4620 x1424))
(assert (x4620 x457))
(assert (x3867 x2101))
(assert (x4620 x2113))
(assert (= x227 (and (not x1567) x4517)))
(assert (x4620 x2098))
(assert (= (+ (x4681 x939) 1) (x4681 (x1008 x939 1))))
(assert (x4620 x1033))
(assert (x2318 x178))
(assert (x2318 x3407))
(assert (x4620 x2004))
(assert (x4620 x1790))
(assert (= x2348 (or (and (not x407) x2031) x1118)))
(assert (x4620 x847))
(assert (= (=> (and (= 0 x2510) (= x1385 x1841)) x377) x4147))
(assert (= x2050 (and x3515 x4885)))
(assert (x4620 x3685))
(assert (x4620 x3835))
(assert (x4620 x2075))
(assert (x4620 x1886))
(assert (x4620 x63))
(assert (= x1745 (or x1818 x1068)))
(assert (x2318 x584))
(assert (x2318 x1043))
(assert (= (=> (and (and (= x1895 (x2066 (+ 32 x345))) (= (> x1659 x2154) x3113)) (or (and (not x3113) (and (= x3694 x3113) (= x2272 x3255))) (and (and (= (x1008 x2790 1) x3154) (= (x4810 (x2758 x3976) (x1116 157) 0) x2790) (= (x4616 x3154) x605) (= x605 x2272) (>= x605 0) (>= 1461501637330902918203684832716283019655932542975 x605) (= x3694 (not x772)) (< x605 1461501637330902918203684832716283019655932542976) (= x772 (= 0 x605)) (= (x2022 1461501637330902918203684832716283019655932542975 x2695) x3976)) x3113))) x1688) x3455))
(assert (= (and x1502 x4788) x3981))
(assert (x4620 x3230))
(assert (= x769 (or x1573 x4567)))
(assert (x4620 x627))
(assert (=> (>= 10000 x1940) (= (x1116 x1940) (x2758 x1940))))
(assert (x4620 x41))
(assert (x4620 x3092))
(assert (= x3442 (and (not x436) x54)))
(assert (= (and x1555 x3290) x3226))
(assert (=> (>= 10000 x1902) (= (x1116 x1902) (x2758 x1902))))
(assert (x4620 x2178))
(assert (= (=> (or (and x989 (and (= (x1008 x656 1) x1802) (= (not x667) x4830) (= (x3679 x1802) x4762) (= x656 (x4810 (x2758 x1902) (x1116 157) 0)) (< x4762 1461501637330902918203684832716283019655932542976) (= x1902 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (<= 0 x4762) (>= 1461501637330902918203684832716283019655932542975 x4762) (= x667 (= x4762 0)))) (and (= x4830 x989) (not x989))) x4545) x4456))
(assert (= x4270 (and x2835 (not x997))))
(assert (x4620 x2043))
(assert (= (+ (x4681 x1817) 1) (x4681 (x1008 x1817 1))))
(assert (=> (>= 10000 x3368) (= (x1116 x3368) (x2758 x3368))))
(assert (x4640 x726 x4836))
(assert (x4620 x1151))
(assert (= x1128 x99))
(assert (x4620 x1953))
(assert (x4620 x3654))
(assert (x4620 x966))
(assert (= (and x1720 x448) x246))
(assert (= (x4681 (x2758 x3103)) x3103))
(assert (= (x4681 (x1116 10936679508223583803006762266923565500374401145016910147028117655998246682624)) 10936679508223583803006762266923565500374401145016910147028117655998246682624))
(assert (x4620 x55))
(assert (= (and x1419 x2055) x1709))
(assert (x2318 x153))
(assert (= (x4681 (x2758 x3836)) x3836))
(assert (x4620 x4762))
(assert (= x1514 (and (=> (and (and (and (> 1461501637330902918203684832716283019655932542976 x1117) (<= 0 x1117) (= x1117 (x2381 x954)) (= x954 (x1008 x1396 1)) (<= x1117 1461501637330902918203684832716283019655932542975) (= x1396 (x4810 (x2758 x789) x1284 0)) (= (ite (< 1 x882) (not (= x1117 0)) (< 1 x882)) x4885)) (or (and (= x4885 x4174) (not x4885)) (and (and (<= 0 x1542) (= (x1008 x1929 2) x3761) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1542) (= x1542 (x1919 x3761)) (= (x4810 (x2758 x1117) x1284 0) x1929) (= x4174 (not x4527)) (= x4527 (> x603 x1542))) x4885))) x1794) x4328) (=> (and (not x1794) (and (= x789 x2759) (= 0 x3800))) x4841))))
(assert (x4620 x4827))
(assert (x4244 x4836))
(assert (=> (>= 10000 x2343) (= (x2758 x2343) (x1116 x2343))))
(assert (= (x4681 (x2758 x789)) x789))
(assert (x4620 x2439))
(assert (x4620 x727))
(assert (x3601 x526))
(assert (x4620 x2137))
(assert (x4620 x169))
(assert (= (and (not x3359) x1232) x4404))
(assert (x4620 x3356))
(assert (= (+ (x4681 x2772) 1) (x4681 (x1008 x2772 1))))
(assert (= x339 (and x4641 (not x1023))))
(assert (x4620 x2639))
(assert (x2318 x2362))
(assert (x2318 x4954))
(assert (x4620 x1489))
(assert (= (or x2783 x4792 x440) x4724))
(assert (= x1865 (and x879 x1955)))
(assert (= (x4681 (x2758 x2637)) x2637))
(assert (=> (>= 10000 x3058) (= (x2758 x3058) (x1116 x3058))))
(assert (x4620 x17))
(assert (x4620 x3611))
(assert (x4620 x4086))
(assert (=> (<= x1654 10000) (= (x1116 x1654) (x2758 x1654))))
(assert (= x2140 (x4681 (x2758 x2140))))
(assert (x4620 x184))
(assert (= (or x950 x4916) x4468))
(assert (x4620 x2487))
(assert (x4620 x895))
(assert (= (and x2341 (not x3333)) x3739))
(assert (x4620 x3090))
(assert (x4620 x1869))
(assert (= (and x367 (not x1674)) x4092))
(assert (x4620 x4392))
(assert (x4620 x4904))
(assert (x4620 x1964))
(assert (x2318 x4051))
(assert (x4620 x2425))
(assert (= (and x4181 (not x4164)) x1867))
(assert (x4620 x1199))
(assert (x4620 x4799))
(assert (x4620 x822))
(assert (= (and x3031 x4302) x4424))
(assert (= x696 (x4681 (x2758 x696))))
(assert (x4620 x2417))
(assert (= x4447 (and x2073 x1067)))
(assert (x4620 x2465))
(assert (= x4890 (and x1597 x1055)))
(assert (= (x4681 (x2758 x528)) x528))
(assert (x4620 x4554))
(assert (x4620 x686))
(assert (= x3457 (and x4214 x2251)))
(assert (= (x4106 416) 0))
(assert (x4620 x1868))
(assert (x4620 x2970))
(assert (x4620 x3187))
(assert (= x2040 (and x3461 x1099)))
(assert (= (=> (and (= x876 x3785) (= x571 0) (= x4800 x4839)) x1001) x1643))
(assert (x2318 x3685))
(assert (= x521 (=> (= (= x2132 0) x3461) (and (=> (and x3461 (= x4629 x4102)) x2932) (=> (and (not x3461) (= x3572 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4335) true) (< x4335 32)) (> x4335 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> (and (= x4102 x4629) x3572) x2932) (=> (and (not x3572) (and (= x2219 1) (= x971 32) (= x124 x4629))) x1631)))))))
(assert (= (and x1472 x1637) x3122))
(assert (x4620 x2413))
(assert (x3257 x3888 (- x3691 x2832)))
(assert (= x1191 (=> (and (= x4857 x4521) (= x2613 x2476)) x1015)))
(assert (x4620 x2489))
(assert (= x4575 (and x4238 x4793)))
(assert (x2318 x4373))
(assert (x4620 x1602))
(assert (x4620 x3159))
(assert (=> (<= x359 10000) (= (x2758 x359) (x1116 x359))))
(assert (x4620 x75))
(assert (= x3759 (or x252 x4312 x4063 x4664)))
(assert (x2318 x3090))
(assert (x4620 x1347))
(assert (x4620 x1753))
(assert (x4620 x1749))
(assert (=> (>= 10000 x2276) (= (x1116 x2276) (x2758 x2276))))
(assert (= (or x4608 x1166) x2703))
(assert (= (and x970 x759) x1875))
(assert (x4244 x1539))
(assert (=> (<= x528 10000) (= (x1116 x528) (x2758 x528))))
(assert (x4620 x1094))
(assert (x4620 x3598))
(assert (x4620 x659))
(assert (x2318 x2930))
(assert (= (and (not x4805) x1331) x98))
(assert (x4620 x526))
(assert (= (=> (= x2350 x3223) x2924) x2548))
(assert (x4620 x135))
(assert (= (x4681 (x2758 x914)) x914))
(assert (= x1122 (and x2496 x4078)))
(assert (x4620 x1224))
(assert (x4620 x2250))
(assert (= x160 (or (and x3613 (not x2748)) (and x687 x4336))))
(assert (x4620 x3353))
(assert (x4620 x370))
(assert (= (x4681 (x1008 x4967 1)) (+ (x4681 x4967) 1)))
(assert (and (x1645 x1144 1461501637330902918203684832716283019655932542976) (x588 x1144 1461501637330902918203684832716283019655932542976) (x4906 x1144 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* 1461501637330902918203684832716283019655932542976 (x2656 x1144 1461501637330902918203684832716283019655932542976)) (x3657 x1144 1461501637330902918203684832716283019655932542976)) x1144))))
(assert (x4620 x3342))
(assert (x4244 x2360))
(assert (x4620 x1523))
(assert (x4620 x786))
(assert (= (and (=> (and (and (= x2335 x1435) (= x1751 x1284) (= x1117 x102)) x4174) x4287) (=> (and (not x4174) (and (= 1 x3800) (= x1117 x2759))) x4841)) x4328))
(assert (= (and x1286 x1500) x1597))
(assert (= (and (not x3357) x3145) x2780))
(assert (x4620 x4818))
(assert (x4620 x3955))
(assert (= (and x4520 x3942) x4703))
(assert (= (and x944 x1858) x2500))
(assert (x4620 x1518))
(assert (x4620 x1781))
(assert (= x2720 (and x818 x3495)))
(assert (x4620 x4648))
(assert (x4620 x3147))
(assert (= x4913 (and x770 (not x3478))))
(assert (= (and (=> (and (and (= x762 x500) (= 0 x4228)) (not x223)) x1044) (=> (and x223 (and (and (<= 0 x2217) (= (x1008 x3077 1) x1857) (= x2217 (x1566 x1857)) (> 1461501637330902918203684832716283019655932542976 x2217) (= (ite (> x882 1) (not (= 0 x2217)) (> x882 1)) x983) (= x3077 (x4810 (x2758 x762) x4246 0)) (>= 1461501637330902918203684832716283019655932542975 x2217)) (or (and (not x983) (= x3561 x983)) (and x983 (and (= x3561 (not x1297)) (<= 0 x1345) (= x1398 (x1008 x3639 2)) (<= x1345 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3639 (x4810 (x2758 x2217) x4246 0)) (= (x1247 x1398) x1345) (= x1297 (> x1725 x1345))))))) x1907)) x3948))
(assert (x4620 x1517))
(assert (x4620 x3326))
(assert (x4620 x316))
(assert (x4620 x3845))
(assert (= x3207 (or x1481 x4309)))
(assert (= x2202 (and x146 x4945)))
(assert (= x365 (x4681 (x2758 x365))))
(assert (= (and x1567 x4517) x4239))
(assert (x4620 x3174))
(assert (= (x4681 (x2758 x1337)) x1337))
(assert (= (x4681 (x1116 2245473101)) 2245473101))
(assert (= (and x3871 x2884) x1614))
(assert (= (and x2762 x2348) x1470))
(assert (= (and x1106 x1624) x1718))
(assert (x4620 x1376))
(assert (= x1893 (x4681 (x2758 x1893))))
(assert (= (or x4475 x3822) x1927))
(assert (= (and (not x547) x780) x2640))
(assert (= 1038142104 (x4681 (x1116 1038142104))))
(assert (x4244 x2160))
(assert (= (x4681 (x2758 x1982)) x1982))
(assert (x4620 x3571))
(assert (x157 x3888 x3691 x2227 x2832))
(assert (= (and (not x3907) x4694) x4520))
(assert (x2318 x914))
(assert (x4620 x2101))
(assert (x4620 x2665))
(assert (= x1654 (x4681 (x2758 x1654))))
(assert (x4620 x4247))
(assert (= (x4681 (x2758 x3708)) x3708))
(assert (= x1455 (and (not x167) x274)))
(assert (= x2253 (and x1864 (not x953))))
(assert (x4620 x1572))
(assert (x4620 x2199))
(assert (x4620 x4941))
(assert (= (and x1716 x1355) x4748))
(assert (= x150 (and x3731 x4848)))
(assert (= x4728 (and x4541 x1024)))
(assert (x3257 x2832 (- x2227 x3888)))
(assert (=> (<= x4311 10000) (= (x1116 x4311) (x2758 x4311))))
(assert (x2318 x2600))
(assert (x4620 x2839))
(assert (x4620 x1948))
(assert (= x164 (=> (and (= x3006 x2147) (= 0 x2665)) x4542)))
(assert (= (x4681 (x1008 x645 1)) (+ (x4681 x645) 1)))
(assert (x4620 x441))
(assert (x4620 x2191))
(assert (x3257 x3888 (- x1223 x3691)))
(assert (and (x1645 x2324 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x588 x2324 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4906 x2324 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2656 x2324 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x3657 x2324 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2324))))
(assert (x4620 x1564))
(assert (x4620 x4136))
(assert (= x2397 (and (not x2422) x1950)))
(assert (x3601 x931))
(assert (x4620 x1520))
(assert (x4620 x2855))
(assert (= (and x87 x2892) x4433))
(assert (x4620 x123))
(assert (= (=> (and (= x2116 0) (= x685 x2117)) x638) x62))
(assert (x4620 x3847))
(assert (= x617 (and x183 x4332)))
(assert (x4620 x2681))
(assert (x2318 x1003))
(assert (= (x4681 (x1116 2217467699)) 2217467699))
(assert (x431 x4094 x3895))
(assert (x4620 x215))
(assert (x4620 x2510))
(assert (= x1702 (x4681 (x2758 x1702))))
(assert (x4620 x3469))
(assert (= (or x4867 x2802 x3471 x4402 x891 x4327) x2264))
(assert (x4620 x745))
(assert (x4620 x4647))
(assert (= (x4681 (x1008 x2309 1)) (+ 1 (x4681 x2309))))
(assert (= x1108 x226))
(assert (= (and x429 x4294) x3200))
(assert (= (and x3493 x1081) x2127))
(assert (= (=> (and (= x4623 x1382) (= x41 x2719)) x416) x718))
(assert (=> (<= x1117 10000) (= (x2758 x1117) (x1116 x1117))))
(assert (x4620 x3804))
(assert (x4620 x679))
(assert (= (and x2330 x3109) x2346))
(assert (x4620 x3366))
(assert (= (and (not x3550) x2926) x3051))
(assert (x4640 x1119 x1933))
(assert (= x1332 (and x3260 x3850)))
(assert (= x3058 (x4681 (x2758 x3058))))
(assert (= x2056 (and x2297 x2389)))
(assert (= (and (not x410) x2486) x856))
(assert (and (x1645 x526 26959946667150639794667015087019630673637144422540572481103610249216) (x588 x526 26959946667150639794667015087019630673637144422540572481103610249216) (x4906 x526 26959946667150639794667015087019630673637144422540572481103610249216) (=> (> 26959946667150639794667015087019630673637144422540572481103610249216 0) (= (+ (* 26959946667150639794667015087019630673637144422540572481103610249216 (x2656 x526 26959946667150639794667015087019630673637144422540572481103610249216)) (x3657 x526 26959946667150639794667015087019630673637144422540572481103610249216)) x526))))
(assert (=> (>= 10000 x178) (= (x2758 x178) (x1116 x178))))
(assert (= (and (=> (and (not x4830) (and (= x1659 x2586) (= x3243 x2085) (= x1042 x4891))) x809) (=> (and (= (= 0 x4719) x38) x4830) (and (=> (and (not x38) (and (or (and (and (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x1461) (< 0 x3757) (not (> 2691771752 x2300)) (not (= 2691771752 x2300)) (not (< x2687 4)) (= x4962 x2687) (= x2390 32) (not (= x2300 2796547477)) (> 2929553584 x2300) (not (> 2217467699 x2300)) (= 2858086653 x2300) (= 1 x1534) (not (= 2835717307 x2300)) (>= x1087 0) (= 4 x2687) (= x3757 (x3612 (x2758 x3097))) (<= x1087 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x3033) (and (not x3033) (and (or (and (and (and x870 (and (> x4698 0) (not (= 2796547477 x2498)) (= 32 x2390) (not (< x2498 2691771752)) (not (= 2835717307 x2498)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1367) (not (= x2498 2691771752)) (not (> 4 x3268)) (not (< x2498 2217467699)) (= x4962 x3268) (= x4698 (x3612 (x2758 x696))) (= x2175 77053863734975077137548456399560439977311721439096602559221323163398253314048) (= x1534 1) (= 4 x3268) (= 2858086653 x2498) (< x2498 2929553584) (<= 0 x1367))) (= (= x1676 x696) x870)) (not x4743)) (and x4743 (and (not (= 2796547477 x2996)) (not (= 2835717307 x2996)) (= 32 x2390) (= 4 x1362) (not (> 2217467699 x2996)) (not (< x1362 4)) (not (= 2691771752 x2996)) (= x1534 1) (= (x3612 (x2758 x3253)) x1259) (= 2858086653 x2996) (<= x4643 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x1259) (> 2929553584 x2996) (= x4840 77053863734975077137548456399560439977311721439096602559221323163398253314048) (not (> 2691771752 x2996)) (= x1362 x4962) (<= 0 x4643)))) (= (= x1676 x3253) x4743)))) (and (= x1676 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (= x4962 4) (= x1009 (x2066 (+ 160 x2085))) (= x3033 (= x1676 x3097))))) x2215) (=> (and (and (= x2085 x2266) (= 0 x2480)) x38) x3549)))) x4545))
(assert (= (=> (and (= x1945 x806) (= 0 x1125)) x1324) x1827))
(assert (x4620 x928))
(assert (= x1219 (or x1765 x4152 x4523 x2616 x4254 x227)))
(assert (= (x4681 (x2758 x3547)) x3547))
(assert (x4620 x2419))
(assert (x4620 x728))
(assert (= (or x1959 x2966 x260 x3009 x4366 x192 x1375 x1966 x3319) x3521))
(assert (x4620 x3255))
(assert (x4620 x2832))
(assert (=> (<= x3708 10000) (= (x1116 x3708) (x2758 x3708))))
(assert (x4620 x220))
(assert (= (and (not x2788) x3812) x3214))
(assert (= x4192 (x4681 (x2758 x4192))))
(assert (= x251 (and x3926 x2869)))
(assert (x4620 x3875))
(assert (= (and x1455 (not x1352)) x1692))
(assert (=> (<= x940 10000) (= (x1116 x940) (x2758 x940))))
(assert (x4620 x2130))
(assert (x2318 x779))
(assert (= (and x2659 x4913) x2773))
(assert (= x813 (and x4092 (not x2102))))
(assert (x4620 x4297))
(assert (= (=> (= (= x830 0) x1349) (and (=> (and (not x1349) (= (or (> x1547 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1547)) (> 32 x1547))) x1080)) (and (=> (and (= x3785 x2530) x1080) x1643) (=> (and (not x1080) (and (= x876 x2530) (= 32 x4800) (= x571 1))) x1001))) (=> (and (= x2530 x3785) x1349) x1643))) x761))
(assert (x4620 x4166))
(assert (x4620 x97))
(assert (x4620 x2644))
(assert (= (and (not x3710) x3286) x2756))
(assert (= x2744 (and x2442 x3383)))
(assert (= x1445 (and x2274 (not x235))))
(assert (x4620 x2687))
(assert (= (and x1149 x2046) x4571))
(assert (x4620 x59))
(assert (x4620 x3437))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x4681 (x1116 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x4620 x2121))
(assert (= (and (not x2330) x3109) x863))
(assert (= (and x1361 x3666) x2240))
(assert (x4620 x4747))
(assert (= (x4681 (x1008 x2292 1)) (+ (x4681 x2292) 1)))
(assert (x4620 x631))
(assert (x4620 x1590))
(assert (x2538 x3888))
(assert (x4620 x2873))
(assert (x2933 x1223 x3888 x3691 x3888))
(assert (x4620 x1769))
(assert (x4620 x4626))
(assert (x4620 x2914))
(assert (x4620 x4650))
(assert (x3257 x2832 (- x2227 x1223)))
(assert (x4620 x1568))
(assert (= x2357 (and x2854 x4384)))
(assert (x3257 x2227 (- x2832 x1223)))
(assert (= (x2758 599290589) (x1116 599290589)))
(assert (x4620 x3652))
(assert (= (and x4505 x2129) x569))
(assert (= x490 (=> (and (or (not x1747) x1747) (= x1747 (= x520 0))) x1222)))
(assert (x4620 x3223))
(assert (x4620 x2117))
(assert (= (or (and x1997 (not x2218)) x1934) x367))
(assert (= x3996 (x4681 (x2758 x3996))))
(assert (and (x2026 x1626 1000000000000000000) (x2201 x1626 1000000000000000000) (x2891 x1626 1000000000000000000) (=> (and (< 0 x1626) (< 0 1000000000000000000)) (and (< (- x1626 1000000000000000000) (* (x2656 x1626 1000000000000000000) 1000000000000000000)) (<= (* (x2656 x1626 1000000000000000000) 1000000000000000000) x1626))) (x3017 x1626 1000000000000000000)))
(assert (x4620 x2119))
(assert (= x2092 (=> (and (= x4866 x3177) (= x1177 x4863)) x3653)))
(assert (= (and x1410 (not x635)) x582))
(assert (x4620 x2329))
(assert (x4620 x2196))
(assert (x4620 x350))
(assert (x3251 x2882))
(assert (= x3553 (x4681 (x2758 x3553))))
(assert (x2318 x2308))
(assert (x4620 x3403))
(assert (x4620 x4607))
(assert (x4620 x1237))
(assert (= (or x3436 x3215) x2131))
(assert (x4620 x940))
(assert (and (and (= (- (* (- x3137 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3137 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3137 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3137) (- (* x3137 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3137))) (= (x1807 1000000000000000000 (- x3137 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x3137 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x3137) (x2296 1000000000000000000 x3137) (= (x1807 1000000000000000000 x3137) (* x3137 1000000000000000000)) (x4064 1000000000000000000 x3137) (x218 1000000000000000000 x3137) (x1213 1000000000000000000 x3137)))
(assert (= x1928 (and x1540 x223)))
(assert (x4620 x2480))
(assert (= x2527 (x4681 (x2758 x2527))))
(assert (x4620 x4922))
(assert (= x4961 (and x984 x1065)))
(assert (= x2575 (=> (and (= x457 x4638) (= x1104 x3884)) x2709)))
(assert (x4620 x364))
(assert (= (+ 1 (x4681 x2011)) (x4681 (x1008 x2011 1))))
(assert (= (=> (or (and (= x3694 x3599) (not x3694)) (and (and (= (x672 (- x77 x1879)) x3637) (not (< x77 x1879)) (= (> x1011 x3637) x3599)) x3694)) x1604) x1688))
(assert (x4620 x860))
(assert (= x2890 (and x2609 x3347)))
(assert (= x524 (and x3208 x3070)))
(assert (= x347 (and x4065 x1411)))
(assert (x4620 x559))
(assert (x4620 x3352))
(assert (= x3104 (and x2574 x3213)))
(assert (= (and x3556 x1684) x1078))
(assert (x4620 x596))
(assert (= 2835717307 (x4681 (x1116 2835717307))))
(assert (= (x4681 (x2758 x3368)) x3368))
(assert (x2318 x1337))
(assert (x4620 x3127))
(assert (= x1150 (and x3812 x2788)))
(assert (= (x1116 24044834009420335638544845215851342251227478490780828673611325350056707489792) (x2758 24044834009420335638544845215851342251227478490780828673611325350056707489792)))
(assert (= x4152 (and x4239 x3364)))
(assert (x4620 x10))
(assert (= (and x3449 (not x3101)) x3419))
(assert (and (and (= (- (* (- x450 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x450 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x450 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x450) (- (* x450 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x450))) (= (x1807 1000000000000000000 (- x450 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x450 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x450) (x2296 1000000000000000000 x450) (= (x1807 1000000000000000000 x450) (* x450 1000000000000000000)) (x4064 1000000000000000000 x450) (x218 1000000000000000000 x450) (x1213 1000000000000000000 x450)))
(assert (x4620 x26))
(assert (=> (>= 10000 x1435) (= (x2758 x1435) (x1116 x1435))))
(assert (= (=> (= (> x2586 0) x5) (and (=> (not x5) x3811) (=> (and x5 (and (or (and (and (> 988262939 x3989) (= 4 x4683) (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x2558) (= x4683 x4645) (= x4957 32) (not (< x3989 405663989)) (not (> 4 x4683)) (< 0 x4084) (= x3254 1) (= (x3612 (x2758 x3097)) x4084) (= 405663989 x3989) (< x3989 2217467699)) x2788) (and (and (or (and (not x3729) (and (= x4365 (= x692 x696)) (and (and (not (> 405663989 x3952)) (< x3952 988262939) (= 405663989 x3952) (= 32 x4957) (= x4645 x1245) (= x3930 (x3612 (x2758 x696))) (= x75 10936679508223583803006762266923565500374401145016910147028117655998246682624) (> x3930 0) (= x3254 1) (> 2217467699 x3952) (= 4 x1245) (not (< x1245 4))) x4365))) (and (and (= x4429 4) (= x957 10936679508223583803006762266923565500374401145016910147028117655998246682624) (not (< x3230 405663989)) (= (x3612 (x2758 x3253)) x1916) (= 32 x4957) (> 988262939 x3230) (< x3230 2217467699) (= x4645 x4429) (= x3254 1) (= 405663989 x3230) (not (< x4429 4)) (< 0 x1916)) x3729)) (= (= x692 x3253) x3729)) (not x2788))) (and (= x2788 (= x3097 x692)) (= 4 x4645) (= (x2022 1461501637330902918203684832716283019655932542975 x2695) x692)))) x1364))) x3080))
(assert (= (x4681 (x1008 x2103 1)) (+ 1 (x4681 x2103))))
(assert (= x376 (and x143 (not x853))))
(assert (x2318 x768))
(assert (x4620 x692))
(assert (x4620 x2343))
(assert (and (and (= (- (* (- x2810 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x2810 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x2810 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x2810) (- (* x2810 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2810))) (= (x1807 1000000000000000000 (- x2810 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x2810 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x2810) (x2296 1000000000000000000 x2810) (= (x1807 1000000000000000000 x2810) (* x2810 1000000000000000000)) (x4064 1000000000000000000 x2810) (x218 1000000000000000000 x2810) (x1213 1000000000000000000 x2810)))
(assert (= (x4681 (x2758 x2695)) x2695))
(assert (= x497 (and x765 x4605)))
(assert (x4620 x845))
(assert (= (or x4939 x1873 x3409 x268 x4851 x412) x4689))
(assert (=> (>= 10000 x3996) (= (x2758 x3996) (x1116 x3996))))
(assert (= (and x4853 (not x2630)) x1700))
(assert (=> (>= 10000 x893) (= (x1116 x893) (x2758 x893))))
(assert (= x4949 (and x3450 (not x3886))))
(assert (x4620 x1549))
(assert (=> (>= 10000 x779) (= (x1116 x779) (x2758 x779))))
(assert (x2318 x1413))
(assert (=> (<= x1327 10000) (= (x2758 x1327) (x1116 x1327))))
(assert (x4620 x2435))
(assert (= (and x4447 (not x4843)) x952))
(assert (= (x4681 (x2758 x359)) x359))
(assert (x4620 x2808))
(assert (= x1195 (and x2959 x3534)))
(assert (= (and x4264 x2800) x4133))
(assert (and (= (x1807 9 9) 81) (= 81 (x1807 27 3)) (= 9 (x1807 3 3)) (= (x1807 9 3) 27)))
(assert (x4620 x3015))
(assert (=> (<= x3279 10000) (= (x2758 x3279) (x1116 x3279))))
(assert (x4620 x4613))
(assert (= x3255 (x4681 (x2758 x3255))))
(assert (= (and x4760 x4368) x4382))
(assert (=> (<= x153 10000) (= (x2758 x153) (x1116 x153))))
(assert (x4620 x4551))
(assert (x4620 x1974))
(assert (x4620 x789))
(assert (= (and x432 x2599) x3909))
(assert (x1838 x3025))
(assert (= (and x1891 x3322) x4138))
(assert (= (and x1930 x20) x4939))
(assert (=> (<= x84 10000) (= (x1116 x84) (x2758 x84))))
(assert (x4620 x1846))
(assert (= (and x3728 x42) x3848))
(assert (x4620 x3301))
(assert (x4620 x2116))
(assert (= x4058 (and x850 (not x800))))
(assert (x4620 x102))
(assert (x4620 x1628))
(assert (= x1934 (and x2218 x1997)))
(assert (= (=> (and (= x2828 (x4810 (x2758 x3255) x1335 0)) (= x4587 (x1008 x3980 1)) (= x3980 (x1008 x2828 1)) (= x4710 x4922)) x4783) x1279))
(assert (=> (<= x671 10000) (= (x1116 x671) (x2758 x671))))
(assert (=> (<= x4045 10000) (= (x1116 x4045) (x2758 x4045))))
(assert (x4620 x37))
(assert (=> (>= 10000 x3103) (= (x1116 x3103) (x2758 x3103))))
(assert (= (and x4165 x3927) x2194))
(assert (= x1773 (or x4689 x225)))
(assert (x4620 x902))
(assert (x4620 x3320))
(assert (x4620 x3774))
(assert (x4620 x104))
(assert (x4620 x435))
(assert (x4620 x4209))
(assert (= x1740 (=> (= (= x2965 x3629) x3217) (and (=> (and (= x3879 (> x3629 0)) (not x3217)) (and (=> (and (and (and (= (= x1896 0) x2625) (= x3074 (x4757 x3004)) (= x4922 (x2066 (+ 96 x3223))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3074) (= x1662 (x4810 (x2758 x3255) x1335 0)) (>= 1461501637330902918203684832716283019655932542975 x3547) (>= x3547 0) (<= 0 x3074) (= x1896 (x309 x1662)) (= (x3824 x4460) x3547) (not (= x3074 0)) (<= x1896 1461501637330902918203684832716283019655932542975) (= (x1008 x4460 1) x3004) (>= x1896 0) (= x4460 (x1008 x1662 1)) (< x1896 1461501637330902918203684832716283019655932542976) (> 1461501637330902918203684832716283019655932542976 x3547)) (or (and (and (= x2106 (x1008 x1538 1)) (= x1538 (x4810 (x2758 x1896) x1335 0))) (not x2625)) (and x2625 (= (x1008 x1335 1) x2385)))) x3879) x678) (=> (and (= x4710 x3223) (not x3879)) x4783))) (=> (and x3217 (= x3223 x345)) x4009)))))
(assert (and (x2026 x1523 1000000000000000000) (x2201 x1523 1000000000000000000) (x2891 x1523 1000000000000000000) (=> (and (< 0 x1523) (< 0 1000000000000000000)) (and (< (- x1523 1000000000000000000) (* (x2656 x1523 1000000000000000000) 1000000000000000000)) (<= (* (x2656 x1523 1000000000000000000) 1000000000000000000) x1523))) (x3017 x1523 1000000000000000000)))
(assert (x4620 x4800))
(assert (x4620 x2546))
(assert (x4620 x2536))
(assert (= x2597 (and (not x1930) x20)))
(assert (and (and (= (- (* (- x2480 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x2480 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x2480 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x2480) (- (* x2480 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2480))) (= (x1807 1000000000000000000 (- x2480 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x2480 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x2480) (x2296 1000000000000000000 x2480) (= (x1807 1000000000000000000 x2480) (* x2480 1000000000000000000)) (x4064 1000000000000000000 x2480) (x218 1000000000000000000 x2480) (x1213 1000000000000000000 x2480)))
(assert (x4620 x4965))
(assert (x4620 x3895))
(assert (= (or x4789 x4266) x4792))
(assert (x4620 x434))
(assert (x4620 x4926))
(assert (= (x1116 405663989) (x2758 405663989)))
(assert (x4620 x2827))
(assert (= (or x1429 x2692) x3348))
(assert (x4620 x1659))
(assert (x4620 x1385))
(assert (x4620 x2663))
(assert (x4620 x4698))
(assert (= (and x2001 x4531) x541))
(assert (= x1813 (=> (and (= x4071 x237) (= x774 x3089)) x691)))
(assert (= (=> (= (> x3394 0) x3533) (and (=> (and x3533 (and (or (and (and (= x1793 (x4810 (x2758 x1353) x1173 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x133) (= (x1008 x1793 2) x4897) (<= 0 x133) (= (< x133 x3394) x3760) (= (not x3760) x4067) (= (x1925 x4897) x133)) x3252) (and (= x3252 x4067) (not x3252))) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x882) (>= 1461501637330902918203684832716283019655932542975 x1353) (>= x1353 0) (= 0 x3823) (= (ite (< 0 x882) (not (= x1353 0)) (> x882 0)) x3252) (= x1649 (x1008 x1173 1)) (not (= 0 x2272)) (> 1461501637330902918203684832716283019655932542976 x1353) (= x1353 (x361 x1649)) (= (x1925 x2166) x3823) (>= x3823 0) (<= x3823 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x882 0) (= (x4810 (x2758 x2272) x1173 0) x619) (= (x1008 x619 2) x2166)))) x1096) (=> (not x3533) x1128))) x3048))
(assert (= (or x4374 x1442 x1969 x3146 x3151 x4446) x3445))
(assert (x4620 x4182))
(assert (= x1218 (and x1286 (not x1500))))
(assert (x4620 x4363))
(assert (= (and x2159 (not x1794)) x466))
(assert (x4620 x3888))
(assert (= x53 (and x4804 x23)))
(assert (x4620 x4836))
(assert (x4620 x549))
(assert (= (x4681 (x2758 x2301)) x2301))
(assert (x4620 x3256))
(assert (= x2778 (x4681 (x2758 x2778))))
(assert (x4620 x1979))
(assert (= (x4681 (x1008 x2925 1)) (+ 1 (x4681 x2925))))
(assert (x4620 x1734))
(assert (= (and x367 x1674) x1473))
(assert (x4620 x4530))
(assert (=> (>= 10000 x4466) (= (x1116 x4466) (x2758 x4466))))
(assert (x4620 x4968))
(assert (= (=> (and (= x971 x4839) (= x4102 x124) (= x2219 0)) x1631) x2932))
(assert (x4620 x3749))
(assert (=> (>= 10000 x584) (= (x2758 x584) (x1116 x584))))
(assert (= (and x4715 x3242) x4336))
(assert (x4620 x1404))
(assert (x4620 x2977))
(assert (x4620 x1963))
(assert (= 2929553584 (x4681 (x1116 2929553584))))
(assert (x4620 x109))
(assert (= x1784 (and (not x2539) x3341)))
(assert (x4620 x3134))
(assert (and (and (= (- (* (- x3539 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3539 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3539 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3539) (- (* x3539 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3539))) (= (x1807 1000000000000000000 (- x3539 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x3539 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x3539) (x2296 1000000000000000000 x3539) (= (x1807 1000000000000000000 x3539) (* x3539 1000000000000000000)) (x4064 1000000000000000000 x3539) (x218 1000000000000000000 x3539) (x1213 1000000000000000000 x3539)))
(assert (= (=> (and (= x4735 x734) (= 0 x1048)) x2239) x1113))
(assert (x3257 x1223 (- x3888 x2227)))
(assert (x4620 x1042))
(assert (x4620 x3806))
(assert (= (and x2612 (not x4646)) x1234))
(assert (x4620 x1152))
(assert (x4620 x2866))
(assert (= x1690 (and x29 x4360)))
(assert (x4620 x4876))
(assert (x4620 x963))
(assert (x4620 x4190))
(assert (x4620 x1806))
(assert (= x2596 (and (not x3852) x2246)))
(assert (x4620 x1314))
(assert (x4620 x191))
(assert (x4620 x1133))
(assert (x4620 x2695))
(assert (x4620 x1334))
(assert (= (and x4436 (not x781)) x4610))
(assert (x4620 x3751))
(assert (= (and (not x1097) x4341) x2069))
(assert (x4620 x283))
(assert (=> (>= 10000 x1893) (= (x2758 x1893) (x1116 x1893))))
(assert (x4620 x3786))
(assert (x4620 x4278))
(assert (x4620 x30))
(assert (x4620 x2784))
(assert (x431 x1135 x3719))
(assert (x4620 x257))
(assert (x4620 x2999))
(assert (= x4462 (and (not x2080) x3681)))
(assert (x4620 x2587))
(assert (=> (>= 10000 x2863) (= (x1116 x2863) (x2758 x2863))))
(assert (= (x4681 (x1116 2023533118)) 2023533118))
(assert (x4620 x2576))
(assert (x4620 x2558))
(assert (= (and x3599 x4738) x2740))
(assert (x4620 x3957))
(assert (= (and x979 (not x4324)) x4006))
(assert (= x3628 (or x576 x3445)))
(assert (x4620 x3843))
(assert (x4620 x1917))
(assert (x4620 x3281))
(assert (x4620 x4947))
(assert (= (and (not x3231) x2090) x3740))
(assert (x4620 x3061))
(assert (x4620 x3934))
(assert (x4620 x3249))
(assert (= x4045 (x4681 (x2758 x4045))))
(assert (x4620 x3405))
(assert (= x1926 (x4681 (x2758 x1926))))
(assert (= (or x3016 (and x4724 (not x1747))) x3844))
(assert (x2318 x4311))
(assert (x4620 x4919))
(assert (= (and x2452 x1258) x2434))
(assert (x2318 x671))
(assert (= x6 (or x4367 x570 x2469 x2791 x1483 x2824)))
(assert (= x1058 (and x2725 x4058)))
(assert (= (x2758 157198259) (x1116 157198259)))
(assert (x4620 x1681))
(assert (= x146 (and (not x4594) x3739)))
(assert (=> (<= x280 10000) (= (x1116 x280) (x2758 x280))))
(assert (= (and x1449 x3460) x3313))
(assert (= (and x2065 x452) x433))
(assert (= (and (not x4234) x2433) x2514))
(assert (= (=> (and (= x1659 x3466) (>= x4940 0) (= (x2158 x1724) x4940) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4940) (= x2245 x1042)) x3753) x1202))
(assert (x4620 x4623))
(assert (= x3047 x1188))
(assert (= (and (=> (and (not x3005) (and (= 1 x1486) (= x940 x3685))) x1163) (=> (and (and (= x1751 x1173) (= x940 x102) (= x2335 x3103)) x3005) x4287)) x3990))
(assert (x4620 x3075))
(assert (= x2692 (and (not x2625) x2421)))
(assert (= (+ (x4681 x2916) 1) (x4681 (x1008 x2916 1))))
(assert (x4620 x1362))
(assert (x4620 x1171))
(assert (= (and (not x1067) x2073) x2818))
(assert (x4620 x3483))
(assert (= (and (not x3282) x2427) x1569))
(assert (= (and (not x4365) x2870) x3195))
(assert (= x3623 (and x2169 (not x1417))))
(assert (= (and x3033 x2911) x2344))
(assert (= x4586 (and x2830 x1927)))
(assert (= (and x3108 x4892) x4342))
(assert (= x1420 (=> (and (= x3353 x2774) (= x109 x4023) (= x2546 x2279) (= x1840 x1770)) x4882)))
(assert (= x3722 (and (not x2466) x4101)))
(assert (x4620 x3958))
(assert (= (=> (= x4319 x2350) x2548) x4712))
(assert (x4620 x3724))
(assert (x4620 x2408))
(assert (= (or x9 x2131 x3207 x3010) x3906))
(assert (= x2523 (and (=> (and (and (= x2978 x2383) (= x702 1)) (not x1228)) x1695) (=> x1228 x1965))))
(assert (x4620 x936))
(assert (= (and x2188 (not x3554)) x2598))
(assert (= x1448 (and x2179 x4421)))
(assert (x2318 x2527))
(assert (= x4796 (=> (and (= x1517 x1012) (= x668 x1127)) x1308)))
(assert (x4620 x2410))
(assert (= x671 (x4681 (x2758 x671))))
(assert (x4620 x528))
(assert (= x4718 (and x3921 (not x2684))))
(assert (=> (<= x1142 10000) (= (x2758 x1142) (x1116 x1142))))
(assert (= x3178 (and x2057 (not x2524))))
(assert (x4244 x1523))
(assert (x4620 x4565))
(assert (=> (>= 10000 x3253) (= (x1116 x3253) (x2758 x3253))))
(assert (= (and (not x4793) x4238) x2894))
(assert (x2318 x3253))
(assert (x4620 x1968))
(assert (= (or x3502 x3141) x9))
(assert (= x4314 (=> (and (= x2085 (x2066 (+ x4686 x300))) (= x4686 (x2022 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1570)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x37) (= (x2391 x1724) x37) (= (x1008 x4494 1) x1724) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x517) (and (> 32 x517) (= (<= x517 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not (= x1824 0)) (<= 0 x37) (= (x2066 (+ 31 x517)) x1570) (= (x4299 x300) x2227) (= x2937 (< 0 x37))) (and (=> (and (not x2937) (and (= 0 x1042) (= x3539 x1659))) x3753) (=> (and (and (and (= x152 (x2656 x1485 1000000000000000000)) (<= x2832 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2391 x1724) x2832) (= x4617 (> x152 x3539)) (< (x1807 x2832 x2227) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1485 (x1807 x2832 x2227)) (>= x2832 0)) (or (and x4617 (and (= (x2656 x4574 x2227) x1617) (= x4574 (* 1000000000000000000 x4236)) (not (> 0 x1438)) (= (x2391 x1724) x4944) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x4236 1000000000000000000)) (< 0 x2227) (= x1438 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3539))) (= x2245 x3539) (= x3212 (< 115792089237316195423570985008687907853269984665640564039457 x1611)) (= 0 x3466) (= x3299 (ite x3212 1 0)) (= (x672 (- x4944 x649)) x1835) (= x3299 0) (= (x1421 (* 1000000000000000000 x3539)) x4236) (<= 0 x4944) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4944) (= (x2656 x1617 1000000000000000000) x649) (not (> x649 x4944)))) (and (and (not (< x1611 x152)) (not (< x1995 0)) (= x3466 x1796) (= x152 x2245) (= (x672 (- x3539 x152)) x1796) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x152)) x1995)) (not x4617)))) x2937) x1202)))))
(assert (x4620 x1652))
(assert (= (and x4642 x4533) x2835))
(assert (= x1731 (and (not x2374) x4911)))
(assert (x4620 x1))
(assert (x4620 x1585))
(assert (x4620 x2243))
(assert (x4620 x2810))
(assert (x4620 x2345))
(assert (x4620 x3370))
(assert (x4620 x1476))
(assert (x4620 x2746))
(assert (= x2442 (and x1022 (not x2359))))
(assert (x4620 x153))
(assert (= (x4681 (x1008 x4494 1)) (+ 1 (x4681 x4494))))
(assert (= x4009 (=> (and (and (> 1461501637330902918203684832716283019655932542976 x3831) (= x4918 (= 0 x3831)) (<= 0 x3831) (<= x3831 1461501637330902918203684832716283019655932542975)) (or x4918 (and (not x4918) (and (> 1461501637330902918203684832716283019655932542976 x3831) (not (= 0 x1628)) (= (x3612 (x2758 x3831)) x1628) (= (x2022 1461501637330902918203684832716283019655932542975 x2695) x1006) (> 4294967296 x2481) (= (x2066 (+ x345 4)) x894) (<= 0 x3831) (= x4139 (x2066 (+ x894 32))) (= (x2066 (+ 32 x4139)) x4565) (>= 1461501637330902918203684832716283019655932542975 x3831))))) x3455)))
(assert (= (and (not x3493) x1081) x1546))
(assert (x4620 x1758))
(assert (x4620 x894))
(assert (= (and x1032 x791) x4615))
(assert (= (and (not x4660) x2483) x1351))
(assert (x4620 x4584))
(assert (x2538 (- x3888 x1223)))
(assert (x4244 x2997))
(assert (x4620 x2504))
(assert (= x2048 (and x4959 (not x1739))))
(assert (= x1537 (or x3458 x501)))
(assert (x4620 x3893))
(assert (x4620 x2693))
(assert (= (x4681 (x1116 599290589)) 599290589))
(assert (= x314 (or x4342 (and x2358 x3968) (and x246 (not x4077)) (and x1689 x2170) x3838 (and x448 (not x1720)))))
(assert (= x1416 (and (not x4541) x1024)))
(assert (x4620 x4891))
(assert (= (and (not x3054) x1733) x1640))
(assert (x4620 x2322))
(assert (= (x4681 (x1008 x3567 1)) (+ (x4681 x3567) 1)))
(assert (= x3677 (and (not x3160) x1678)))
(assert (= x20 (and x1847 (not x3491))))
(assert (x3867 x931))
(assert (x4620 x3851))
(assert (x4620 x4636))
(assert (x1838 x2153))
(assert (x4620 x3583))
(assert (x4244 x2489))
(assert (x3257 x3888 (- x1223 x3888)))
(assert (x4620 x70))
(assert (x4620 x794))
(assert (x4620 x2485))
(assert (x4620 x1830))
(assert (x4620 x3945))
(assert (x2538 (- x3888 x2227)))
(assert (x4620 x2606))
(assert (= (and x1205 x3206) x1667))
(assert (x4620 x1187))
(assert (= (and x190 x3355) x4517))
(assert (= (or x266 x1970) x4738))
(assert (= x3151 (and x2875 x4082)))
(assert (= (or x2222 x3721) x4853))
(assert (x3601 x2695))
(assert (=> (>= 10000 x2217) (= (x1116 x2217) (x2758 x2217))))
(assert (= 1856199391 (x4681 (x1116 1856199391))))
(assert (= (and x4589 (not x579)) x912))
(assert (= x238 (and x2728 x3026)))
(assert (x4620 x1779))
(assert (= x3266 (and x4660 x2483)))
(assert (= x869 (=> (and (= x4127 x1681) (= 0 x267)) x495)))
(assert (x4620 x3163))
(assert (= (and (not x1349) x3919) x3603))
(assert (= x1969 (and x4601 x522)))
(assert (=> (<= x102 10000) (= (x1116 x102) (x2758 x102))))
(assert (= (x4681 (x1008 x4013 1)) (+ 1 (x4681 x4013))))
(assert (= (or x1533 x4212) x1947))
(assert (x4620 x1894))
(assert (= (x4681 (x2758 x2658)) x2658))
(assert (x4620 x4452))
(assert (x3601 x463))
(assert (x2318 x76))
(assert (= (=> (and (= (ite (> x882 x1650) (not (= 0 x1990)) (> x882 x1650)) x4583) (or (and (and (or (and (not x4598) (and (= (x2022 1461501637330902918203684832716283019655932542975 x847) x2051) (= (x1008 x3567 1) x2235) (>= 1461501637330902918203684832716283019655932542975 x578) (= (x3682 x2235) x578) (> 1461501637330902918203684832716283019655932542976 x578) (= (x2022 1461501637330902918203684832716283019655932542975 x847) x968) (= x720 (x2022 1461501637330902918203684832716283019655932542975 x847)) (<= 0 x578))) (and x4598 (and (= x2536 (x2022 1461501637330902918203684832716283019655932542975 x847)) (= (x2022 1461501637330902918203684832716283019655932542975 x847) x3805) (= x30 (x2022 1461501637330902918203684832716283019655932542975 x847))))) (and (>= 1461501637330902918203684832716283019655932542975 x212) (= (x2125 x3567) x212) (= x4598 (= 0 x212)) (>= x212 0) (< x212 1461501637330902918203684832716283019655932542976))) (not x4583)) (and (and (or (and x2565 (and (<= 0 x3349) (= x4119 (x2022 1461501637330902918203684832716283019655932542975 x847)) (<= x3349 1461501637330902918203684832716283019655932542975) (= (x2022 1461501637330902918203684832716283019655932542975 x847) x2987) (= (x4810 (x2758 x1990) x2336 0) x2097) (> 1461501637330902918203684832716283019655932542976 x3349) (= x4291 (x2022 1461501637330902918203684832716283019655932542975 x847)) (= (x1037 x2097) x3349))) (and (and (= x1518 (x2022 1461501637330902918203684832716283019655932542975 x847)) (= x4838 (x2022 1461501637330902918203684832716283019655932542975 x847)) (= x972 (x2022 1461501637330902918203684832716283019655932542975 x847))) (not x2565))) (and (= (x672 (- x1990 x277)) x4794) (>= 1461501637330902918203684832716283019655932542975 x277) (= x277 (x2125 x3567)) (= x2565 (> x4794 0)) (<= 0 x277) (> 1461501637330902918203684832716283019655932542976 x277))) x4583))) x4721) x4170))
(assert (x4620 x2881))
(assert (x4620 x4866))
(assert (x4620 x3742))
(assert (x4620 x1471))
(assert (x4620 x2653))
(assert (= x4374 (and (not x3745) x3062)))
(assert (= x4149 (x4681 (x2758 x4149))))
(assert (x4620 x4180))
(assert (x4620 x2289))
(assert (= (and x1569 x74) x2192))
(assert (= x72 (x4681 (x2758 x72))))
(assert (x4620 x1408))
(assert (x4620 x784))
(assert (= (and x2739 (not x3155)) x2946))
(assert (x4620 x1311))
(assert (x4620 x3884))
(assert (x4620 x2083))
(assert (= (and x1839 (not x479)) x2361))
(assert (x4620 x3661))
(assert (= x3908 (=> (and (or x3362 (not x3362)) (= x3362 (= 0 x1165))) x4326)))
(assert (=> (>= 10000 x3831) (= (x2758 x3831) (x1116 x3831))))
(assert (= (and x1326 x4062) x205))
(assert (x4620 x1960))
(assert (= (and x3465 x4524) x4803))
(assert (= (and x3145 x3357) x4480))
(assert (x4620 x1866))
(assert (x4620 x2648))
(assert (x4620 x4683))
(assert (x2318 x2247))
(assert (x4620 x3097))
(assert (and (and (= (- (* (- x1821 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1821 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1821 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1821) (- (* x1821 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1821))) (= (x1807 1000000000000000000 (- x1821 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x1821 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x1821) (x2296 1000000000000000000 x1821) (= (x1807 1000000000000000000 x1821) (* x1821 1000000000000000000)) (x4064 1000000000000000000 x1821) (x218 1000000000000000000 x1821) (x1213 1000000000000000000 x1821)))
(assert (= x4665 (=> (and (= x4391 0) (= x4330 x3945)) x3849)))
(assert (= x1529 (=> (and (= x1517 0) (= x2494 x1127)) x4796)))
(assert (= (and (not x4130) x2629) x1556))
(assert (=> (<= x2600 10000) (= (x2758 x2600) (x1116 x2600))))
(assert (=> (<= x1623 10000) (= (x2758 x1623) (x1116 x1623))))
(assert (x4620 x1896))
(assert (x4620 x130))
(assert (x4620 x1797))
(assert (x4620 x1759))
(assert (x4620 x1791))
(assert (= (and x870 x1942) x1107))
(assert (= (and (not x115) x4949) x3562))
(assert (x4620 x52))
(assert (= (and x1299 x1399) x3614))
(assert (= x1467 (and x2960 (not x3387))))
(assert (x2538 x3137))
(assert (= x4333 (and x1887 (not x4215))))
(assert (= (x4681 (x2758 x2827)) x2827))
(assert (x4620 x3415))
(assert (x4620 x1313))
(assert (x4620 x1418))
(assert (x4620 x2615))
(assert (= (and (not x1899) x2836) x3780))
(assert (=> (>= 10000 x1788) (= (x1116 x1788) (x2758 x1788))))
(assert (x4620 x3318))
(assert (x4620 x1238))
(assert (x4620 x2951))
(assert (x4620 x28))
(assert (= x2379 (and x736 (not x1825))))
(assert (= x1678 (and (not x4268) x1768)))
(assert (= x1021 (or x2896 x3616 x325)))
(assert (x4620 x269))
(assert (= (and x4499 x3860) x2652))
(assert (= (x4681 (x1008 x1538 1)) (+ (x4681 x1538) 1)))
(assert (= x4135 (x4681 (x2758 x4135))))
(assert (= x4551 (x4681 (x2758 x4551))))
(assert (= (and x4421 (not x2179)) x1483))
(assert (= (x4681 (x1008 x955 1)) (+ 1 (x4681 x955))))
(assert (x4620 x2376))
(assert (= (and x143 x853) x241))
(assert (= x660 (and (not x2725) x4058)))
(assert (x4620 x3615))
(assert (x4620 x2838))
(assert (x4620 x2387))
(assert (= (x4681 (x1008 x2474 1)) (+ (x4681 x2474) 1)))
(assert (= x495 (=> (and (= x2546 x2279) (= x109 x267) (= x2774 x1347) (= x1770 x1681)) x4882)))
(assert (= 2691771752 (x4681 (x1116 2691771752))))
(assert (x4620 x1350))
(assert (x4620 x471))
(assert (x3867 x2324))
(assert (x4620 x1812))
(assert (x4620 x13))
(assert (= (x4681 (x1008 x4426 1)) (+ 1 (x4681 x4426))))
(assert (x4620 x2096))
(assert (= (=> (and (= x148 x830) (= x4799 x1547)) x4285) x288))
(assert (= x3013 (and (not x4478) x3819)))
(assert (x4620 x826))
(assert (= x3534 (and (not x3024) x1667)))
(assert (x4620 x4112))
(assert (= x1366 (or x2988 x4006)))
(assert (x3601 x3983))
(assert (x4620 x1490))
(assert (= (and x3604 (not x4617)) x976))
(assert (x4620 x2822))
(assert (x4620 x2195))
(assert (x4620 x3805))
(assert (x2318 x72))
(assert (x4620 x399))
(assert (x4620 x4682))
(assert (= x1481 (or (and x2782 (not x3625)) (and x1593 x138) (and (not x3191) x2563) x617 x4121 (and x4222 x1267))))
(assert (= (=> (and (= x2141 x10) (= x3775 x2547)) x3868) x3236))
(assert (= (or x3291 x2192 x1432 x1014 x239 x2961 x1865 x613 x1640) x33))
(assert (= (+ 1 (x4681 x1972)) (x4681 (x1008 x1972 1))))
(assert (x4620 x3787))
(assert (x4620 x2350))
(assert (x4244 x1485))
(assert (x4620 x799))
(assert (= x1014 (and x1208 x3883)))
(assert (= (or x3509 (and x1021 (not x3193))) x3111))
(assert (x4620 x2975))
(assert (= x3141 (and (not x1298) x2780)))
(assert (= (and (not x1998) x4526) x2594))
(assert (= x4634 (and x2361 (not x587))))
(assert (= x4279 (and x690 x414)))
(assert (= (x4681 (x2758 x18)) x18))
(assert (x4620 x4651))
(assert (x4620 x608))
(assert (= x3146 (and x234 x1988)))
(assert (x4620 x664))
(assert (= x2347 (or x4755 x2070)))
(assert (= (and (not x1510) x3059) x2471))
(assert (x4620 x3128))
(assert (x4620 x2635))
(assert (= (and (not x4065) x1411) x2668))
(assert (= (x4681 (x2758 x1043)) x1043))
(assert (x4620 x2688))
(assert (x4620 x3846))
(assert (x4620 x2047))
(assert (x4620 x866))
(assert (= (and x3505 x3674) x1472))
(assert (x4620 x2742))
(assert (= (and x2735 x4191) x1436))
(assert (x4620 x4835))
(assert (x4620 x3698))
(assert (= x2876 (and x1692 (not x580))))
(assert (= (and (not x4499) x3860) x3164))
(assert (x4620 x2461))
(assert (x4620 x990))
(assert (x4620 x1902))
(assert (=> (>= 10000 x2362) (= (x1116 x2362) (x2758 x2362))))
(assert (= x2409 (and (not x2197) x1703)))
(assert (= x1214 (and x541 (not x911))))
(assert (= x399 (x4681 (x2758 x399))))
(assert (= x3968 (and x594 x2756)))
(assert (= (x4681 (x1008 x4120 1)) (+ (x4681 x4120) 1)))
(assert (x4620 x520))
(assert (= (=> (and (= x1443 x1841) (= x4420 0)) x3258) x4842))
(assert (=> (>= 10000 x2383) (= (x1116 x2383) (x2758 x2383))))
(assert (= x4140 (and (not x2734) x589)))
(assert (= x3959 (and x1436 (not x2533))))
(assert (and (x1645 x1570 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x588 x1570 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4906 x1570 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2656 x1570 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x3657 x1570 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1570))))
(assert (x4620 x2887))
(assert (x4620 x322))
(assert (= (and x4292 (not x368)) x690))
(assert (= (and (not x4414) x2847) x3834))
(assert (= x4789 (or x4307 x524 x1527 x2720 x3909 x4349)))
(assert (= x4011 (and x917 x4159)))
(assert (x4620 x2549))
(assert (x4620 x876))
(assert (= x3716 (and x3423 x4886)))
(assert (x3867 x4094))
(assert (= (and (not x4505) x2129) x4666))
(assert (= x731 (=> (= x3897 (> x603 0)) (and (=> (and x3897 (and (or (and x496 (and (= x3577 (> x603 x475)) (>= x475 0) (= x475 (x1919 x2542)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x475) (= (not x3577) x1794) (= (x1008 x3180 2) x2542) (= (x4810 (x2758 x789) x1284 0) x3180))) (and (= x1794 x496) (not x496))) (and (= x2309 (x1008 x1284 1)) (= x844 0) (<= 0 x882) (= (x1008 x168 2) x2974) (<= 0 x789) (= (x1919 x2974) x844) (not (= 0 x3255)) (= (x3779 x2309) x789) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x844) (>= x844 0) (= (x4810 (x2758 x3255) x1284 0) x168) (= x496 (ite (< 0 x882) (not (= 0 x789)) (< 0 x882))) (< x789 1461501637330902918203684832716283019655932542976) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x882) (>= 1461501637330902918203684832716283019655932542975 x789)))) x1514) (=> (and (not x3897) (= x2350 x3134)) x2548)))))
(assert (x4620 x3996))
(assert (= (and (not x16) x2347) x689))
(assert (= (x4681 (x1116 3583811254)) 3583811254))
(assert (x2318 x2258))
(assert (= (and (not x1132) x89) x3495))
(assert (= (and x497 (not x4405)) x2633))
(assert (= x4253 (=> (and (= x1309 (x2248 x3568)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1104) (and (= (<= x1104 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x1104)))) (= 0 x1309) (not (= x4638 0))) x3369)))
(assert (x4620 x1982))
(assert (x4620 x1708))
(assert (x4620 x3103))
(assert (= x400 (and x3241 (not x527))))
(assert (= (and x2185 x2403) x1098))
(assert (x4620 x4638))
(assert (= (or x4241 x2797) x1244))
(assert (x4620 x1702))
(assert (= (x4681 (x2758 x188)) x188))
(assert (x4620 x493))
(assert (=> (>= 10000 x3175) (= (x1116 x3175) (x2758 x3175))))
(assert (=> (>= 10000 x3039) (= (x1116 x3039) (x2758 x3039))))
(assert (x4620 x2962))
(assert (x4620 x3034))
(assert (x2318 x1393))
(assert (x4620 x3467))
(assert (= x1117 (x4681 (x2758 x1117))))
(assert (= (and x2744 (not x4535)) x1660))
(assert (x4620 x1412))
(assert (and (x1645 x463 1461501637330902918203684832716283019655932542976) (x588 x463 1461501637330902918203684832716283019655932542976) (x4906 x463 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* 1461501637330902918203684832716283019655932542976 (x2656 x463 1461501637330902918203684832716283019655932542976)) (x3657 x463 1461501637330902918203684832716283019655932542976)) x463))))
(assert (x4620 x3856))
(assert (= (x4681 (x2758 x2669)) x2669))
(assert (= (and x4820 x3538) x597))
(assert (= (and x4067 x2438) x3514))
(assert (= x4720 (and x3228 x48)))
(assert (= (and x1537 (not x4918)) x4427))
(assert (=> (<= x2644 10000) (= (x2758 x2644) (x1116 x2644))))
(assert (x2318 x4135))
(assert (= x2657 (and x1149 (not x2046))))
(assert (= (or x1114 x1898) x4418))
(assert (= x99 (=> (and (or (and (= 0 x1725) (not x3260)) (and x3260 (= x1725 x1490))) (and (<= x4313 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x1490 x4313) x3260) (<= 0 x4313))) x4407)))
(assert (=> (<= x72 10000) (= (x1116 x72) (x2758 x72))))
(assert (= (x4681 (x1116 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x4620 x21))
(assert (x2318 x2171))
(assert (= (and (not x4390) x912) x489))
(assert (= x3526 (and x848 x3840)))
(assert (= x1732 (and x482 (not x896))))
(assert (x2318 x1982))
(assert (x4620 x81))
(assert (x4620 x729))
(assert (=> (<= x1889 10000) (= (x1116 x1889) (x2758 x1889))))
(assert (x4620 x2795))
(assert (=> (>= 10000 x4392) (= (x2758 x4392) (x1116 x4392))))
(assert (= (=> (and (or (and x2466 (= x155 x3394)) (and (not x2466) (= 0 x3394))) (and (<= x173 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2923 (x1008 x859 2)) (>= x1490 0) (= x1173 (x4810 (x2758 x3103) (x1116 157) 0)) (= x2077 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (= x427 (x1008 x1474 2)) (= (x4810 (x2758 x528) (x1116 156) 0) x4246) (= x4798 (x2516 x427)) (= x1474 (x4810 (x2758 x2272) x1173 0)) (= (x4810 (x2758 x2077) (x1116 159) 0) x1077) (= (x4810 (x2758 x2272) x4246 0) x859) (= (x4201 x284) x155) (= (x2022 1461501637330902918203684832716283019655932542975 x2695) x3103) (= (x858 x2923) x173) (= (x3707 x4485) x1490) (>= x155 0) (<= x4798 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x4313 x155) x2466) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4313) (>= x4313 0) (= x284 (x1008 x4485 1)) (>= x173 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x155) (= (x4810 (x2758 x2272) x1077 0) x4485) (<= x1490 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2022 1461501637330902918203684832716283019655932542975 x2695) x528) (<= 0 x4798))) x2745) x2380))
(assert (x4620 x532))
(assert (= x1651 (and (not x2854) x4384)))
(assert (= (and (not x1258) x2452) x1432))
(assert (x2538 (- x1223 x2227)))
(assert (= (x4681 (x2758 x1990)) x1990))
(assert (x2318 x2759))
(assert (x4620 x3558))
(assert (x4620 x1378))
(assert (x4620 x3524))
(assert (x4620 x4208))
(assert (x4620 x317))
(assert (= x3422 (=> (and (= x4622 x1165) (= x3389 x1672)) x3908)))
(assert (x4620 x1665))
(assert (= (and (not x3584) x2202) x1437))
(assert (= x3956 (and (not x3620) x3285)))
(assert (= (or x2694 x2346 x878 x4118 x4014 x1614) x4442))
(assert (x4620 x197))
(assert (= x2940 (=> (and (= (= x3895 0) x3594) (or x3594 (not x3594))) x2731)))
(assert (x4620 x4730))
(assert (= (and x3758 x4849) x2931))
(assert (x4620 x2545))
(assert (= (x4681 (x2758 x4954)) x4954))
(assert (x4620 x4022))
(assert (x4620 x3073))
(assert (x4620 x2464))
(assert (= x4376 (and x4610 x773)))
(assert (= (and (not x3239) x3457) x2786))
(assert (= x3409 (and x2773 (not x3446))))
(assert (x3867 x34))
(assert (x157 x3888 x1223 x2227 x2832))
(assert (= (x1116 2245473101) (x2758 2245473101)))
(assert (x4620 x2198))
(assert (= x4068 (and (not x2714) x1136)))
(assert (x4620 x2972))
(assert (x4620 x3137))
(assert (=> (>= 10000 x2658) (= (x2758 x2658) (x1116 x2658))))
(assert (x4620 x36))
(assert (x4620 x84))
(assert (x4620 x3899))
(assert (= x2885 (and x3204 x1532)))
(assert (= x2791 (and x459 x2850)))
(assert (x4620 x4697))
(assert (x4620 x4420))
(assert (x4620 x4242))
(assert (x4620 x2335))
(assert (and (and (= (- (* (- x4852 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x4852 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x4852 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x4852) (- (* x4852 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4852))) (= (x1807 1000000000000000000 (- x4852 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x4852 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x4852) (x2296 1000000000000000000 x4852) (= (x1807 1000000000000000000 x4852) (* x4852 1000000000000000000)) (x4064 1000000000000000000 x4852) (x218 1000000000000000000 x4852) (x1213 1000000000000000000 x4852)))
(assert (x4620 x1893))
(assert (= (x4681 (x1008 x2210 1)) (+ (x4681 x2210) 1)))
(assert (= (and (not x3533) x552) x515))
(assert (= x2155 (and x951 x3906)))
(assert (= (=> (and (and (= x2839 x1564) (= x3668 x2873) (= x3202 0) (= x2413 x2839) (= x4186 (< 0 x2413)) (= x2887 0) (= x3668 x883) (= x796 (> x2873 0)) (= (or x4186 x796) x2162)) (and (< 0 x471) (= x3687 x3935) (= (x4810 (x2758 x404) x4283 0) x4356) (not (> 2678788150 x822)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3881) (= 3842108676 x822) (= x622 (x1008 x4356 1)) (not x3049) (= x471 (x3612 (x2758 x3996))) (not (< x822 3842108676)) (>= 1461501637330902918203684832716283019655932542975 x3935) (= x404 x3343) (= x2578 (x1541 x4356)) (not x3027) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2578) (= x1564 (x3079 160)) (>= x3881 0) (= (x1808 x622) x3881) (= (x3079 128) x883) (<= x404 1461501637330902918203684832716283019655932542975) (<= 0 x2578) (not (> 3583811254 x822)) (= (x4810 (x2758 x3935) (x1116 158) 0) x4283))) x2162) x187))
(assert (= (and x744 x1122) x96))
(assert (x4620 x405))
(assert (= (and x2169 x1417) x4500))
(assert (x4244 x3888))
(assert (x4620 x2299))
(assert (x4620 x4898))
(assert (= x1057 (and (not x861) x2596)))
(assert (x4620 x2867))
(assert (= (and x332 (not x2664)) x4176))
(assert (x4620 x2622))
(assert (= x4580 (and x1510 x3059)))
(assert (= x4162 (=> (and (= x1714 (= x221 0)) (or (and (= (x4810 (x2758 x221) x4246 0) x1710) (not x1714)) (and (= x4872 (x1008 x4246 2)) x1714))) x4559)))
(assert (x2318 x3058))
(assert (x4620 x156))
(assert (= (x2758 50292402827334880472107169365697159231523039388532301717704428044325102813184) (x1116 50292402827334880472107169365697159231523039388532301717704428044325102813184)))
(assert (x4620 x1906))
(assert (and (and (= (- (* (- x3484 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3484 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3484 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3484) (- (* x3484 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3484))) (= (x1807 1000000000000000000 (- x3484 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x3484 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x3484) (x2296 1000000000000000000 x3484) (= (x1807 1000000000000000000 x3484) (* x3484 1000000000000000000)) (x4064 1000000000000000000 x3484) (x218 1000000000000000000 x3484) (x1213 1000000000000000000 x3484)))
(assert (= (and (not x1786) x2657) x3438))
(assert (x4244 x2451))
(assert (= x3030 (and x3745 x3062)))
(assert (x4620 x66))
(assert (= (+ 1 (x4681 x760)) (x4681 (x1008 x760 1))))
(assert (x4620 x323))
(assert (x4620 x1580))
(assert (= (=> (and (= x4638 x2838) (= x2186 x1104)) x2709) x101))
(assert (=> (<= x2493 10000) (= (x1116 x2493) (x2758 x2493))))
(assert (= (and x885 x1976) x974))
(assert (= x1145 (or x3848 x4856 x4834 x4512 x347 x3313)))
(assert (= (and x2840 (not x1936)) x759))
(assert (= (and x995 x425) x42))
(assert (= (x4681 (x1008 x1284 1)) (+ (x4681 x1284) 1)))
(assert (= x4881 (and x1877 x4552)))
(assert (= (or x132 x4779 x715 x4069 x3815) x2522))
(assert (x4620 x931))
(assert (x4620 x3363))
(assert (x4620 x2812))
(assert (= x2431 (and x890 (not x2929))))
(assert (x4620 x4482))
(assert (=> (<= x2272 10000) (= (x2758 x2272) (x1116 x2272))))
(assert (= x1268 (and x2946 x4569)))
(assert (= (and x4393 x3468) x770))
(assert (= (and x1470 x1512) x1081))
(assert (x4620 x709))
(assert (x4620 x2680))
(assert (x4620 x2764))
(assert (= x3555 (and (not x1291) x1601)))
(assert (x4620 x3424))
(assert (= x3185 (=> (and (= x4638 x4637) (= x1238 x1104)) x2709)))
(assert (x4620 x3607))
(assert (x4620 x485))
(assert (= 1461501637330902918203684832716283019655932542975 (x4681 (x1116 1461501637330902918203684832716283019655932542975))))
(assert (x4620 x775))
(assert (= x4296 (and x4204 x1026)))
(assert (= x280 (x4681 (x2758 x280))))
(assert (x4620 x2362))
(assert (= (and (not x2204) x933) x4463))
(assert (x4620 x649))
(assert (= x1623 (x4681 (x2758 x1623))))
(assert (x4620 x4105))
(assert (x4620 x4348))
(assert (= (and x684 (not x4048)) x3587))
(assert (x4620 x4116))
(assert (= (=> (= (= 0 x1165) x4451) (and (=> (and (= (or (> x3389 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x3389 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3389) true))) x126) (not x4451)) (and (=> x126 x4487) (=> (and (and (= (> x39 x860) x2730) (<= 0 x39) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2568)) x860) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x39)) (not x126)) (and (=> (and (not x2730) (and (= x3423 (< x860 x3472)) (= (x2066 (+ x2568 x39)) x2410) (= (x4810 (x2758 x3996) (x1116 5) 0) x4271) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3472) (<= 0 x3472) (= (x4061 x4271) x3472))) (and (=> (and (not x3423) (and (= 1 x457) (= 32 x3884) (= (x2066 (+ x3472 x2568)) x1112))) x2575) (=> x3423 x4487))) (=> x2730 x4487))))) (=> x4451 x4487))) x4326))
(assert (x4620 x4167))
(assert (x4620 x484))
(assert (x4620 x2529))
(assert (x4620 x1889))
(assert (= x240 (and (not x3674) x3505)))
(assert (= (and x1861 x170) x73))
(assert (x4620 x2877))
(assert (= (or x95 x3702) x1200))
(assert (= x1587 (and x324 (not x3464))))
(assert (x4620 x379))
(assert (= 989455977 (x4681 (x1116 989455977))))
(assert (= (x4681 (x1008 x1025 2)) (+ 2 (x4681 x1025))))
(assert (= x4736 (or x4196 x543)))
(assert (= (+ (x4681 x2336) 2) (x4681 (x1008 x2336 2))))
(assert (= (and x4248 x3138) x1545))
(assert (x4620 x4951))
(assert (x4620 x1626))
(assert (x4620 x1486))
(assert (= x4590 (=> (and (= x4637 0) (= x1238 x17)) x3185)))
(assert (x2318 x3368))
(assert (= (x2758 26959946667150639794667015087019630673637144422540572481103610249215) (x1116 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x4620 x1333))
(assert (= (and x3310 x2879) x1818))
(assert (x4620 x2778))
(assert (x4620 x4290))
(assert (x4620 x4399))
(assert (= x2290 (=> (and (= x253 0) (= x25 x4027)) x2242)))
(assert (= x2161 (and x420 x2703)))
(assert (x4620 x450))
(assert (x4620 x2271))
(assert (= x4498 (=> (and (= x1012 x4231) (= x3261 x668)) x1308)))
(assert (=> (>= 10000 x1453) (= (x1116 x1453) (x2758 x1453))))
(assert (=> (<= x3902 10000) (= (x1116 x3902) (x2758 x3902))))
(assert (= x2759 (x4681 (x2758 x2759))))
(assert (= x149 (and x646 x2862)))
(assert (x2318 x3175))
(assert (x4620 x1087))
(assert (= x1704 (and x889 x285)))
(assert (x3601 x847))
(assert (= x1142 (x4681 (x2758 x1142))))
(assert (x4620 x2701))
(assert (x2318 x3306))
(assert (= x3175 (x4681 (x2758 x3175))))
(assert (= (and x2870 x4365) x4543))
(assert (= (and x3170 x3164) x4694))
(assert (x4620 x4391))
(assert (= x332 (and (not x2846) x2144)))
(assert (x3257 x3888 (- x1223 x2832)))
(assert (x2318 x2217))
(assert (= x934 (and x4053 x4701)))
(assert (= (and x2676 x2952) x2488))
(assert (= x2988 (and (not x507) x1831)))
(assert (= x1785 (and x3386 x50)))
(assert (= (x1116 18446744073709551615) (x2758 18446744073709551615)))
(assert (x4620 x111))
(assert (= (and (not x425) x995) x4834))
(assert (x4620 x4706))
(assert (x4620 x3488))
(assert (x4620 x378))
(assert (= (x4681 (x2758 x838)) x838))
(assert (= x94 (and x1366 (not x4583))))
(assert (x4620 x681))
(assert (x3257 x2832 (- x2227 x3691)))
(assert (= (x2758 1466279372) (x1116 1466279372)))
(assert (= (and x1139 (not x1561)) x2338))
(assert (x4620 x4489))
(assert (= (and x2777 x1826) x4709))
(assert (= (and x2492 (not x3186)) x3870))
(assert (x2318 x2978))
(assert (x4620 x1373))
(assert (= (and x3578 (not x2143)) x4502))
(assert (x2318 x2658))
(assert (x2318 x2462))
(assert (= (x2758 178855970) (x1116 178855970)))
(assert (x4620 x3011))
(assert (x4620 x1888))
(assert (x4620 x3711))
(assert (x4620 x3987))
(assert (x4620 x3025))
(assert (= (+ (x4681 x3235) 1) (x4681 (x1008 x3235 1))))
(assert (= x4559 (=> (and (= x4151 (x1008 x78 1)) (= x78 (x1008 x1817 1)) (= x1817 (x4810 (x2758 x2272) x4246 0))) x1754)))
(assert (x4620 x3586))
(assert (= x3838 (and x797 x4700)))
(assert (= x3858 (and x3164 (not x3170))))
(assert (x3867 x104))
(assert (= (and x1946 x4934) x1206))
(assert (x4620 x4131))
(assert (=> (<= x500 10000) (= (x2758 x500) (x1116 x500))))
(assert (x4620 x3496))
(assert (= (and x1261 (not x3737)) x3386))
(assert (x4620 x1833))
(assert (x2318 x696))
(assert (= x1754 (=> (= x4660 (< 0 x1725)) (and (=> (not x4660) x226) (=> (and x4660 (and (and (>= x4806 0) (> 1461501637330902918203684832716283019655932542976 x762) (= (ite (< 0 x882) (not (= 0 x762)) (< 0 x882)) x4513) (>= 1461501637330902918203684832716283019655932542975 x762) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x882) (not (= x2272 0)) (= (x1247 x4802) x4806) (= x247 (x4810 (x2758 x2272) x4246 0)) (<= x4806 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4806 0) (= (x1008 x4246 1) x3064) (>= x882 0) (<= 0 x762) (= x762 (x2277 x3064)) (= x4802 (x1008 x247 2))) (or (and (and (= x223 (not x3783)) (= (< x1963 x1725) x3783) (= x1963 (x1247 x3317)) (= x3287 (x4810 (x2758 x762) x4246 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1963) (<= 0 x1963) (= (x1008 x3287 2) x3317)) x4513) (and (not x4513) (= x223 x4513))))) x3948)))))
(assert (x4620 x699))
(assert (x4620 x937))
(assert (x4620 x806))
(assert (= x1188 (=> (and (or x2374 (and (not x2374) (and (<= x3831 1461501637330902918203684832716283019655932542975) (<= 0 x3831) (> 1461501637330902918203684832716283019655932542976 x3831) (< x474 4294967296) (not (= 0 x1670)) (= (x3612 (x2758 x3831)) x1670)))) (and (< x3831 1461501637330902918203684832716283019655932542976) (<= 0 x3831) (<= x3831 1461501637330902918203684832716283019655932542975) (= (= x3831 0) x2374))) x2938)))
(assert (x2538 x4706))
(assert (x4620 x2231))
(assert (= (x1116 10936679508223583803006762266923565500374401145016910147028117655998246682624) (x2758 10936679508223583803006762266923565500374401145016910147028117655998246682624)))
(assert (= x1881 x226))
(assert (= (and x193 x2765) x1363))
(assert (x4620 x3988))
(assert (= (and x4661 x2554) x3283))
(assert (= (and x2781 x304) x3242))
(assert (= (or x3766 x2779 x8 x1947) x346))
(assert (x4620 x2221))
(assert (x4620 x2458))
(assert (x4620 x3918))
(assert (x4620 x254))
(assert (= (x1116 1313710058) (x2758 1313710058)))
(assert (= x681 (x4681 (x2758 x681))))
(assert (x4620 x1715))
(assert (x4620 x3723))
(assert (x4620 x4549))
(assert (x4620 x3691))
(assert (= (and x2500 x3624) x1106))
(assert (x4620 x884))
(assert (= (and (not x445) x1448) x2469))
(assert (= x1168 (and x413 (not x4830))))
(assert (x4620 x640))
(assert (= (and (not x2617) x4861) x1533))
(assert (x3063 x4537))
(assert (= (x2758 1865448899) (x1116 1865448899)))
(assert (= x2820 (and (not x818) x3495)))
(assert (x4620 x4486))
(assert (= (or x4272 x3825 x4258 x1341) x4477))
(assert (x4620 x4422))
(assert (x4620 x24))
(assert (= (and x690 (not x414)) x1798))
(assert (= (and x4303 x2898) x1527))
(assert (x4620 x4935))
(assert (= (and x4589 x579) x2151))
(assert (= (and x3239 x3457) x1359))
(assert (= (and x2086 x172) x2139))
(assert (x4620 x443))
(assert (=> (<= x3970 10000) (= (x1116 x3970) (x2758 x3970))))
(assert (=> (>= 10000 x2308) (= (x1116 x2308) (x2758 x2308))))
(assert (= (=> (and (= x4549 x2307) (= x2130 x4752) (= x2234 x4040) (= (x2066 (+ x3833 x572)) x4549) (= (x2223 x572) x1874) (not (= 0 x520)) (= x3833 (x2022 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3025)) (= x1874 0) (not (or (and (< x3738 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3738) true)) (> x3738 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1738 x4146) (= x3025 (x2066 (+ x3738 31)))) x4163) x1222))
(assert (= (x4681 (x1116 2030502250)) 2030502250))
(assert (x2318 x940))
(assert (= x2430 (or x4269 x2056)))
(assert (x4620 x359))
(assert (= x4963 (=> (and (= x549 0) (= x4083 x4027)) x2400)))
(assert (= x2739 (and (not x2392) x4440)))
(assert (x4620 x972))
(assert (x4620 x3580))
(assert (= x3502 (or (and x4575 x3238) x4158 (and (not x693) x3226) x4480 (and x4671 x4814) (and (not x3290) x1555))))
(assert (=> (>= 10000 x2569) (= (x1116 x2569) (x2758 x2569))))
(assert (x4620 x1301))
(assert (= x2745 (=> (= (= x4798 x3394) x4873) (and (=> x4873 x99) (=> (and (not x4873) (= x4467 (< 0 x4798))) (and (=> (not x4467) x3048) (=> (and (and (or (and (not x3714) (and (= x2474 (x4810 (x2758 x3864) x1173 0)) (= x1987 (x1008 x2474 1)))) (and (= x4325 (x1008 x1173 1)) x3714)) (and (> 1461501637330902918203684832716283019655932542976 x2462) (= x3864 (x382 x216)) (= (x1008 x216 1) x2953) (< x3864 1461501637330902918203684832716283019655932542976) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x140) (<= x2462 1461501637330902918203684832716283019655932542975) (<= 0 x3864) (<= 0 x2462) (= (x4810 (x2758 x2272) x1173 0) x216) (= x512 (x1008 x2953 1)) (>= x140 0) (= (= x3864 0) x3714) (= (x2516 x512) x140) (not (= 0 x140)) (= x2462 (x4687 x2953)) (>= 1461501637330902918203684832716283019655932542975 x3864))) x4467) x3821)))))))
(assert (x4620 x2816))
(assert (x4620 x1605))
(assert (x4620 x4199))
(assert (= (x1116 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x2758 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (or x142 x4143) x3166))
(assert (x4620 x406))
(assert (=> (>= 10000 x2771) (= (x2758 x2771) (x1116 x2771))))
(assert (= (x4681 (x1008 x1173 1)) (+ 1 (x4681 x1173))))
(assert (x4620 x910))
(assert (x157 x2227 x2832 x1223 x3888))
(assert (x4620 x4429))
(assert (x2538 x3510))
(assert (x4620 x4070))
(assert (= x3471 (and x3932 x1292)))
(assert (= x3616 (or x616 x975)))
(assert (x4620 x3247))
(assert (= (x4681 (x1008 x2082 1)) (+ (x4681 x2082) 1)))
(assert (= x4538 (and (not x4413) x1587)))
(assert (x4620 x267))
(assert (=> (>= 10000 x3306) (= (x2758 x3306) (x1116 x3306))))
(assert (= (x4681 (x2758 x1003)) x1003))
(assert (x4620 x3512))
(assert (= (=> (and (= x4908 x2510) (= x1385 x3163)) x60) x377))
(assert (= (+ (x4681 x3639) 2) (x4681 (x1008 x3639 2))))
(assert (x4620 x185))
(assert (x4620 x4335))
(assert (x4620 x1127))
(assert (x4620 x4798))
(assert (= x2699 (=> (and (= x3660 0) (= x2294 x4839) (= x3019 x2238)) x4223)))
(assert (= x917 (and (not x623) x798)))
(assert (x4620 x2863))
(assert (x4620 x245))
(assert (= (x4681 (x2758 x3685)) x3685))
(assert (x4620 x2607))
(assert (x4620 x1137))
(assert (x4620 x4310))
(assert (x4620 x265))
(assert (= (and (not x3222) x4518) x846))
(assert (= (or x236 x4813 x1829 x4669) x2654))
(assert (and (x1645 x2153 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x588 x2153 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4906 x2153 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2656 x2153 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x3657 x2153 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2153))))
(assert (= (and x2722 (not x1622)) x2205))
(assert (=> (<= x3659 10000) (= (x1116 x3659) (x2758 x3659))))
(assert (x4620 x3066))
(assert (x4620 x4319))
(assert (= (and x953 x1864) x4742))
(assert (=> (<= x1982 10000) (= (x2758 x1982) (x1116 x1982))))
(assert (= (or x2522 x2479) x222))
(assert (x4620 x39))
(assert (x4620 x752))
(assert (= (=> (and (or (and (not x3008) (= (x4810 (x2758 x2462) x1173 0) x4612)) (and x3008 (= (x1008 x1173 2) x2033))) (= (= x2462 0) x3008)) x3284) x3821))
(assert (= (and x1714 x4137) x3085))
(assert (x4620 x1908))
(assert (x4620 x605))
(assert (= (and x4214 (not x2251)) x313))
(assert (= (and (not x2255) x1509) x843))
(assert (= x1889 (x4681 (x2758 x1889))))
(assert (x4620 x1192))
(assert (x2318 x4472))
(assert (= (and (not x3924) x856) x1139))
(assert (x4620 x3384))
(assert (=> (>= 10000 x2140) (= (x1116 x2140) (x2758 x2140))))
(assert (x4620 x663))
(assert (= (and (not x3802) x574) x2341))
(assert (x4620 x3350))
(assert (x4620 x2133))
(assert (= (or x1422 x4176) x8))
(assert (x4620 x2012))
(assert (x4620 x2219))
(assert (x4620 x3979))
(assert (x2318 x1353))
(assert (x4620 x602))
(assert (x4620 x2444))
(assert (= (and x856 x3924) x192))
(assert (= x508 (and (not x1449) x3460)))
(assert (= x839 (=> (and (= x2737 x3174) (= 0 x28)) x4816)))
(assert (= (and (=> (and (and (and (<= x4149 1461501637330902918203684832716283019655932542975) (= (x1172 x2736) x4149) (>= x4149 0) (= x2736 (x1008 x4536 1)) (= x44 (ite (> x882 1) (not (= 0 x4149)) (< 1 x882))) (< x4149 1461501637330902918203684832716283019655932542976) (= x4536 (x4810 (x2758 x3970) x1335 0))) (or (and (not x44) (= x1255 x44)) (and x44 (and (= (x1181 x2671) x1744) (<= 0 x1744) (= x3338 (> x2965 x1744)) (= (x4810 (x2758 x4149) x1335 0) x2883) (= (x1008 x2883 2) x2671) (= x1255 (not x3338)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1744))))) x1361) x4275) (=> (and (and (= x3970 x2950) (= 0 x3198)) (not x1361)) x4479)) x4692))
(assert (= (and x1627 (not x158)) x1924))
(assert (x4620 x3120))
(assert (x4620 x4678))
(assert (x4620 x1570))
(assert (x157 x3888 x3691 x2832 x2227))
(assert (= (and (not x4671) x4814) x3145))
(assert (x2318 x1453))
(assert (=> (<= x3547 10000) (= (x1116 x3547) (x2758 x3547))))
(assert (= (or x3051 x64) x3346))
(assert (x4620 x717))
(assert (= x1364 (=> (and (< 0 x2997) (< (* x450 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x4235 (x672 (- x3390 x4415))) (= x3611 (x2656 x1626 1000000000000000000)) (= (< 0 x4235) x2781) (= x1460 0) (= (+ x2156 x456) x4941) (= x2156 x4278) (= x1565 (* x450 1000000000000000000)) (= x104 (x2066 (+ x4957 31))) (= (x2022 115792089237316195423570985008687907853269984665640564039457584007913129639904 x104) x430) (= (< 115792089237316195423570985008687907853269984665640564039457 x2586) x4953) (>= x4278 0) (<= 0 x4415) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4957) (and (< x4957 32) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4957))))) (= x456 x3611) (= x3568 (x2066 (+ x430 x2746))) (= x3390 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (not (= 0 x3254)) (= (x2656 x1565 x2997) x1626) (= x1460 (ite x4953 1 0)) (= x450 (x1421 (* x2586 1000000000000000000))) (= x3188 (x1008 x1972 1)) (= x4278 (x2825 x3188)) (<= x4278 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2997 (x1944 x2746)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3611 x4278)) (< x4415 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x4415)) (and (=> (and (not x2781) (and (not (= x3817 0)) (= x3817 (x3612 (x2758 x2975))) (> 4294967296 x708) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2586 x2351)) (>= 1461501637330902918203684832716283019655932542975 x2975) x469 (= x2351 (x4031 (x2758 x1940))) (= x1070 (x2666 (x2758 x3996))) (= (>= x1070 x2586) x4606) (= x3973 (- x2183 x2586)) (= x4763 (x3612 (x2758 x1940))) (= x4348 (x2666 (x2758 x1940))) (< x2975 1461501637330902918203684832716283019655932542976) (= (x2666 (x2758 x3996)) x2183) x4606 (<= 0 x2975) (= (x2066 (+ x2586 x2351)) x1391) (= x469 (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4348 x2586))) (> 4294967296 x3081) (not (= x4763 0)) (= x1940 (x2022 1461501637330902918203684832716283019655932542975 x2695)))) x3369) (=> (and x2781 (and (and (= (x2066 (+ 32 x3470)) x1407) (= (x2066 (+ 4 x3568)) x3470) (= x4715 (= x2424 x2951))) (and x4715 (and (= x2695 x4537) (= x2556 4238056678808933066457772256406219440718756300954938350892797929791311314944) (< x723 1466279372) (< 0 x163) (= (x3612 (x2758 x2424)) x163) (= (x672 (- x46 4)) x4380) (= (or (and (= (<= x4380 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x4380 64)) (> x4380 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x687) (= x46 68) (not (> 4 x46)) (not (= x723 117300739)) (= 157198259 x723) (> 599290589 x723) (= x2586 x783))))) (and (=> x687 x181) (=> (and (and (= x1277 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (= x2748 (= x2695 x1277))) (not x687)) (and (=> (and (and (= 32 x1797) (= x3469 1) (= x783 x752) (= (x4810 (x2758 x3996) (x1116 2) 0) x1922) (= x1346 (x2022 1461501637330902918203684832716283019655932542975 x4537)) (= x545 (x4810 (x2758 x1346) x1922 0))) x2748) x199) (=> (not x2748) x181)))))))))
(assert (x4620 x355))
(assert (x4620 x3621))
(assert (x4620 x666))
(assert (x4620 x4957))
(assert (= (x4681 (x2758 x221)) x221))
(assert (x4620 x4375))
(assert (x4620 x1841))
(assert (= x2258 (x4681 (x2758 x2258))))
(assert (= (x2758 20853193852723734048814770637610870652489083209607696777694672748161462697984) (x1116 20853193852723734048814770637610870652489083209607696777694672748161462697984)))
(assert (= x2263 (or x433 x3323)))
(assert (x4620 x4602))
(assert (= (and x871 (not x1834)) x1419))
(assert (x4620 x4361))
(assert (x4620 x568))
(assert (= (=> (and (= x2095 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (= (x672 (- x2095 x4415)) x3511) (<= 0 x4415) (= (< 0 x3511) x3210) (>= 1461501637330902918203684832716283019655932542975 x4415) (> 1461501637330902918203684832716283019655932542976 x4415)) (and (=> (and x3210 (and (and (= x2626 452) (= x4233 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (= (= x4233 x3097) x29)) (or (and (and (or (and (and (= (= x696 x4233) x2244) (and (and (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x1816) (>= x2059 0) (> x3939 0) (= x2608 1) (= x219 4) (>= 1461501637330902918203684832716283019655932542975 x2059) (= x3939 (x3612 (x2758 x696))) (= x219 4) (not (> 988262939 x1769)) (> 2217467699 x1769) (not (= 1857877511 x1769)) (> 1461501637330902918203684832716283019655932542976 x2059) (= x55 32) (= 1865448899 x1769) (not (> 1856199391 x1769)) (not (= 1856199391 x1769)) (not (< x219 4))) x2244)) (not x593)) (and (and (<= 0 x2378) (not (< x536 1856199391)) (< x536 2217467699) (= 1865448899 x536) (= 32 x55) (not (= 1856199391 x536)) (> x1241 0) (= (x3612 (x2758 x3253)) x1241) (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x1586) (= 4 x2203) (not (< x536 988262939)) (not (< x2203 4)) (= x2608 1) (not (= 1857877511 x536)) (< x2378 1461501637330902918203684832716283019655932542976) (<= x2378 1461501637330902918203684832716283019655932542975) (= 4 x2203)) x593)) (= x593 (= x3253 x4233))) (not x29)) (and (and (>= 1461501637330902918203684832716283019655932542975 x959) (= x2713 4) (< 0 x2262) (not (> 1856199391 x4305)) (= x55 32) (= x4305 1865448899) (= x2262 (x3612 (x2758 x3097))) (= 4 x2713) (not (= 1857877511 x4305)) (> 1461501637330902918203684832716283019655932542976 x959) (not (> 4 x2713)) (= 1 x2608) (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x3876) (not (< x4305 988262939)) (not (= x4305 1856199391)) (< x4305 2217467699) (<= 0 x959)) x29)))) x2502) (=> (and (and (> 1461501637330902918203684832716283019655932542976 x2975) (>= x2975 0) (= x2951 x2975) (= 452 x1701) (>= 1461501637330902918203684832716283019655932542975 x2975)) (not x3210)) x4888))) x4656))
(assert (= x2731 (=> (and (= x3923 (x2022 x4094 x3895)) (= x4094 (x3119 x4088 x3690)) (= (ite (= x3703 0) 1 0) x3690) (= x3719 (ite (< 31 x3703) 1 0)) (= x4879 (x672 (- x2980 x572))) (= (x2066 (+ 32 x2693)) x2980) (= x4088 (x2022 x1135 x3719)) (= x1135 (ite (= 1 x3279) 1 0)) (= x2693 (x2066 (+ 4 x572))) (= (= x3097 x2225) x167) (= (x2022 1461501637330902918203684832716283019655932542975 x2695) x2225) (< 0 x3923)) (and (=> (and x167 (and (not (> 4 x2908)) (< x1408 988262939) (= x4879 x2908) (= 242558722 x1408) (< 0 x2221) (= x2221 (x3612 (x2758 x3097))) (> 2217467699 x1408) (= x2908 36) (= x2004 6539370208772218570076773595062200405109424842860869254164860851635934461952) (= x4197 (x672 (- x2908 4))) (= x1779 x2075) (not (= x1408 178855970)) (= x4001 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4197)) (< x4197 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4197))) (> 405663989 x1408) (not (= 75483562 x1408)))) (and (=> (and (not x4001) (and (= x810 x2075) (<= x331 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x331 (x2957 x1843)) (>= x331 0) (= (> x1779 x331) x2599) (= (x4810 (x2758 x3996) (x1116 6) 0) x1843))) (and (=> (and x2599 (= x1840 x3019)) x2699) (=> (and (not x2599) (and (= (< x1290 x2075) x1132) (>= x1290 0) (= x1290 (x2957 x2368)) (= (x4810 (x2758 x3996) (x1116 6) 0) x2368) (<= x1290 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (= x3019 x1840) x1132) x2699) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1840) (>= x1840 0) (= x4563 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2075))) (= (> x1840 x4563) x818) (= (x672 (- x1290 x2075)) x4811)) (not x1132)) (and (=> (and x818 (= x3019 x1840)) x2699) (=> (and (not x818) (and (= x3592 (x2066 (+ x2075 x1840))) (= 128 x1287) (>= x959 0) (< x959 1461501637330902918203684832716283019655932542976) (= x3704 (= x959 x2424)) (>= 1461501637330902918203684832716283019655932542975 x959) (= (x2066 (+ x1840 x2075)) x4387))) (and (=> (and (= x1521 (= x3097 x959)) (not x3704)) (and (=> (and (and (= x3097 x178) (= (x3612 (x2758 x3097)) x1176) (= 100 x4734) (> x1176 0) (= x4734 100) (= x1453 x3996) (= 599290589 x2956) (not (> 405663989 x2956)) (= (x672 (- x4734 4)) x3289) (> 988262939 x2956) (not (= x2956 405663989)) (not (> 4 x4734)) (not (= 547091486 x2956)) (> 2217467699 x2956) (= x810 x206) (= x1988 (or (> x3289 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x3289 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3289 96)))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x323)) x1521) (and (=> x1988 x3485) (=> (and (and (= x4154 x1453) (= (= x3996 x1453) x3745)) (not x1988)) (and (=> (not x3745) x3485) (=> (and x3745 (and (= x3723 x178) (= (= x178 x3097) x2267))) (and (=> (and (and (= (x4810 (x2758 x1453) (x1116 5) 0) x3898) (= x206 x963) (<= x4577 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x4577 x810) x4601) (>= x4577 0) (= (x3412 x3898) x4577)) x2267) (and (=> (and (not x4601) (and (= x2875 (< x4855 x206)) (= x4855 (x3412 x3447)) (<= x4855 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4855 0) (= (x4810 (x2758 x1453) (x1116 5) 0) x3447))) (and (=> x2875 x3485) (=> (and (not x2875) (and (= x1313 (x672 (- x4855 x206))) (= (x4810 (x2758 x178) (x1116 5) 0) x4453) (<= 0 x1577) (= x1577 (x3950 x4453)) (= (< x2681 x1577) x198) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x206)) x2681) (<= x1577 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (= x4948 32) (= x4631 1) (= (x2066 (+ x206 x1577)) x4591) (= x3806 1)) (not x198)) x3102) (=> x198 x3485))))) (=> x4601 x3485))) (=> (not x2267) x3485))))))) (=> (and (not x1521) (= (= x3253 x959) x3865)) (and (=> (and (and (= (= x696 x959) x3468) (and x3468 (and (= (or (and (= true (<= x3483 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x3483 96)) (> x3483 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3478) (= x810 x1708) (= x3483 (x672 (- x1471 4))) (< x2607 988262939) (not (> 4 x1471)) (= 599290589 x2607) (= x1471 100) (= x1471 100) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x83) (< x2607 2217467699) (not (= x2607 405663989)) (= (x3612 (x2758 x696)) x907) (> x907 0) (not (= x2607 547091486)) (not (> 405663989 x2607)) (= x3996 x1337) (= x72 x3097)))) (not x3865)) (and (=> (and (not x3478) (and (= x2659 (= x3996 x1337)) (= x1337 x1815))) (and (=> (not x2659) x1272) (=> (and x2659 (and (= x72 x3256) (= (= x3097 x72) x3446))) (and (=> (not x3446) x1272) (=> (and x3446 (and (= x1708 x4213) (= x3491 (> x810 x2439)) (= (x4905 x2418) x2439) (= (x4810 (x2758 x1337) (x1116 5) 0) x2418) (<= x2439 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2439))) (and (=> x3491 x1272) (=> (and (not x3491) (and (<= x1 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1930 (> x1708 x1)) (= x1 (x4905 x4932)) (= x4932 (x4810 (x2758 x1337) (x1116 5) 0)) (>= x1 0))) (and (=> x1930 x1272) (=> (and (and (= x397 (x4810 (x2758 x72) (x1116 5) 0)) (= x1503 (x1235 x397)) (>= x1503 0) (= x3652 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1708))) (= x1901 (> x1503 x3652)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1503) (= x4486 (x672 (- x1 x1708)))) (not x1930)) (and (=> x1901 x1272) (=> (and (not x1901) (and (= 1 x4955) (= x379 (x2066 (+ x1503 x1708))) (= 32 x494) (= 1 x1941))) x606))))))))))) (=> x3478 x1272))) (=> (and x3865 (and (= x3996 x4548) (< 0 x4768) (= x781 (or (> x3352 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x3352) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3352) true)))) (= 100 x3110) (not (> 405663989 x487)) (> 2217467699 x487) (not (= 405663989 x487)) (= x2475 x810) (not (> 4 x3110)) (= (x3612 (x2758 x3253)) x4768) (not (= 547091486 x487)) (= x3352 (x672 (- x3110 4))) (= x84 x3097) (= x3110 100) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2110) (= x487 599290589) (< x487 988262939))) (and (=> (and (and (= x4548 x4458) (= x773 (= x4548 x3996))) (not x781)) (and (=> (not x773) x4893) (=> (and (and (= x2089 (= x3097 x84)) (= x84 x498)) x773) (and (=> (and (and (= (< x1458 x810) x381) (<= 0 x1458) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1458) (= x1458 (x4100 x3148)) (= x3148 (x4810 (x2758 x4548) (x1116 5) 0)) (= x2475 x2178)) x2089) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1974) (<= 0 x1974) (= (x4100 x3669) x1974) (= x224 (> x2475 x1974)) (= x3669 (x4810 (x2758 x4548) (x1116 5) 0))) (not x381)) (and (=> x224 x4893) (=> (and (and (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2475)) x4965) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x741) (= x1477 (x672 (- x1974 x2475))) (= (x1115 x3713) x741) (= x3713 (x4810 (x2758 x84) (x1116 5) 0)) (<= 0 x741) (= (< x4965 x741) x1811)) (not x224)) (and (=> (and (not x1811) (and (= x3089 1) (= 32 x237) (= x3664 1) (= x1799 (x2066 (+ x741 x2475))))) x1813) (=> x1811 x4893))))) (=> x381 x4893))) (=> (not x2089) x4893))))) (=> x781 x4893))))))) (=> (and (and (= x4203 100) (> x2047 0) (= (x3612 (x2758 x2424)) x2047) (= x3306 x3097) (not (> 599290589 x1274)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x657) (= x1274 599290589) (= x810 x3167) (= x4551 x3996) (= (or (and (< x532 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x532))) (> x532 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3576) (= (x672 (- x4203 4)) x532) (not (> 4 x4203)) (= 100 x4203) (< x1274 1466279372)) x3704) (and (=> x3576 x1592) (=> (and (not x3576) (and (= x1293 (= x4551 x3996)) (= x2447 x4551))) (and (=> (and (and (= x1544 (= x3097 x3306)) (= x3306 x4029)) x1293) (and (=> (not x1544) x1592) (=> (and x1544 (and (= x2529 x3167) (= (> x810 x965) x872) (= (x4810 (x2758 x4551) (x1116 1) 0) x4437) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x965) (= x965 (x4059 x4437)) (<= 0 x965))) (and (=> x872 x1592) (=> (and (not x872) (= (> x3167 x965) x523)) (and (=> x523 x1592) (=> (and (and (= (x4810 (x2758 x3306) (x1116 1) 0) x4385) (= (> x673 x4920) x410) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3167)) x4920) (= x673 (x3441 x4385)) (<= x673 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4696 (x4810 (x2758 x4551) (x1116 1) 0)) (= (x672 (- x965 x3167)) x2914) (<= 0 x673)) (not x523)) (and (=> (and (and (= x849 (x2066 (+ x673 x3167))) (= (< x849 x673) x3924)) (not x410)) (and (=> (and (and (= (< x1996 x3167) x1561) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1996) (= (x3673 x1031) x1996) (>= x1996 0) (= (x4810 (x2758 x3306) (x1116 1) 0) x4952) (= x2907 (x4810 (x2758 x4551) (x1116 2) 0)) (= (x4810 (x2758 x3097) x2907 0) x1031)) (not x3924)) (and (=> x1561 x1592) (=> (and (not x1561) (= (< x1996 x3167) x2252)) (and (=> (and (not x2252) (and (= x2002 (x4810 (x2758 x3097) x2531 0)) (= x4033 1) (= x2531 (x4810 (x2758 x4551) (x1116 2) 0)) (= (x672 (- x1996 x3167)) x1051) (= 32 x4320))) x1973) (=> x2252 x1592))))) (=> x3924 x1592))) (=> x410 x1592))))))))) (=> (not x1293) x1592))))))))))))) (=> (and x4001 (= x3019 x1840)) x2699))) (=> (and (not x167) (= x1352 (= x2225 x3253))) (and (=> (and (and (= (= x696 x2225) x580) (and (and (= 36 x841) (not (< x841 4)) (< x4566 2217467699) (> x3147 0) (= x2425 (x672 (- x841 4))) (> 988262939 x4566) (= x742 6539370208772218570076773595062200405109424842860869254164860851635934461952) (= x1779 x2715) (= x3147 (x3612 (x2758 x696))) (not (= 178855970 x4566)) (= 242558722 x4566) (= x841 x4879) (not (= x4566 75483562)) (= x1510 (or (and (< x2425 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2425) true)) (> x2425 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> 405663989 x4566)) x580)) (not x1352)) (and (=> (and (and (= x880 (x4810 (x2758 x3996) (x1116 6) 0)) (<= 0 x371) (= x2032 (< x371 x1779)) (= (x1787 x880) x371) (= x2715 x3237) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x371)) (not x1510)) (and (=> (and (not x2032) (and (= x4662 (> x2715 x2767)) (= x2767 (x1787 x1999)) (= x1999 (x4810 (x2758 x3996) (x1116 6) 0)) (>= x2767 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2767))) (and (=> (and (= x3785 x1347) x4662) x1643) (=> (and (and (<= x1347 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2715)) x2295) (<= 0 x1347) (= (x672 (- x2767 x2715)) x3735) (= (> x1347 x2295) x945)) (not x4662)) (and (=> (and (= x3785 x1347) x945) x1643) (=> (and (and (= (= x2424 x2059) x3802) (= x232 128) (= x2530 (x2066 (+ x1347 x2715))) (>= 1461501637330902918203684832716283019655932542975 x2059) (< x2059 1461501637330902918203684832716283019655932542976) (= (x2066 (+ x1347 x2715)) x2487) (>= x2059 0)) (not x945)) (and (=> (and (not x3802) (= (= x3097 x2059) x3333)) (and (=> (and (= (= x2059 x3253) x4594) (not x3333)) (and (=> (and (and (= (x672 (- x317 4)) x2270) (> 988262939 x214) (< 0 x2680) (not (> 4 x317)) (= (or (> x2270 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x2270) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2270) true))) x3676) (not (> 405663989 x214)) (< x214 2217467699) (= (x3612 (x2758 x3253)) x2680) (= x3627 x3996) (= 599290589 x214) (not (= x214 405663989)) (= x1866 x3237) (= x1889 x696) (not (= x214 547091486)) (= x3951 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x317 100) (= x317 100)) x4594) (and (=> x3676 x1280) (=> (and (not x3676) (and (= x3627 x4423) (= (= x3996 x3627) x2001))) (and (=> (and x2001 (and (= x1889 x823) (= x911 (= x1889 x696)))) (and (=> (not x911) x1280) (=> (and (and (<= 0 x2653) (= x1866 x1456) (= (> x3237 x2653) x2765) (<= x2653 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4100 x2561) x2653) (= x2561 (x4810 (x2758 x3627) (x1116 5) 0))) x911) (and (=> (and (and (= x3376 (> x1866 x3143)) (= (x4810 (x2758 x3627) (x1116 5) 0) x1451) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3143) (= (x4100 x1451) x3143) (<= 0 x3143)) (not x2765)) (and (=> x3376 x1280) (=> (and (and (<= 0 x2842) (<= x2842 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x672 (- x3143 x1866)) x640) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1866)) x3958) (= (> x2842 x3958) x128) (= (x1282 x1288) x2842) (= x1288 (x4810 (x2758 x1889) (x1116 5) 0))) (not x3376)) (and (=> x128 x1280) (=> (and (not x128) (and (= x2667 1) (= x492 (x2066 (+ x1866 x2842))) (= 32 x355) (= 1 x196))) x3826))))) (=> x2765 x1280))))) (=> (not x2001) x1280))))) (=> (and (and (= x4945 (= x2059 x696)) (and x4945 (and (= x3724 599290589) (not (> 4 x1137)) (not (= 547091486 x3724)) (= x3237 x3621) (< x3724 2217467699) (= x3584 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1336) (and (= true (<= x1336 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x1336)))) (= x596 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (x672 (- x1137 4)) x1336) (= x359 x696) (not (= 405663989 x3724)) (= x2355 (x3612 (x2758 x696))) (= x1137 100) (< 0 x2355) (= 100 x1137) (not (> 405663989 x3724)) (= x153 x3996) (> 988262939 x3724)))) (not x4594)) (and (=> x3584 x1827) (=> (and (and (= x1495 (= x153 x3996)) (= x153 x3171)) (not x3584)) (and (=> (not x1495) x1827) (=> (and (and (= (= x359 x696) x2696) (= x359 x1734)) x1495) (and (=> (not x2696) x1827) (=> (and x2696 (and (>= x3527 0) (= (> x3237 x3527) x4847) (= x333 x3621) (= x1004 (x4810 (x2758 x153) (x1116 5) 0)) (<= x3527 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3527 (x4905 x1004)))) (and (=> x4847 x1827) (=> (and (and (= (x4810 (x2758 x153) (x1116 5) 0) x2282) (= (< x3224 x3621) x4346) (= (x4905 x2282) x3224) (<= 0 x3224) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3224)) (not x4847)) (and (=> x4346 x1827) (=> (and (and (= (< x3065 x3312) x1292) (>= x3312 0) (= (x1664 x1635) x3312) (= x3065 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3621))) (= x506 (x672 (- x3224 x3621))) (= x1635 (x4810 (x2758 x359) (x1116 5) 0)) (<= x3312 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x4346)) (and (=> x1292 x1827) (=> (and (not x1292) (and (= x1125 1) (= 1 x3100) (= 32 x1945) (= (x2066 (+ x3621 x3312)) x3440))) x1324))))))))))))))) (=> (and x3333 (and (= 599290589 x292) (not (> 405663989 x292)) (not (= x292 547091486)) (= x3996 x3039) (= x3067 100) (= (or (> x4489 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4489)) (< x4489 96))) x1193) (= x559 (x3612 (x2758 x3097))) (not (> 4 x3067)) (< 0 x559) (= x696 x2258) (< x292 2217467699) (> 988262939 x292) (= (x672 (- x3067 4)) x4489) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1368) (= 100 x3067) (= x4105 x3237) (not (= 405663989 x292)))) (and (=> x1193 x4286) (=> (and (and (= x707 x3039) (= x2915 (= x3996 x3039))) (not x1193)) (and (=> (and (and (= x2258 x3396) (= x2251 (= x2258 x696))) x2915) (and (=> (not x2251) x4286) (=> (and (and (= x2164 (x3412 x3176)) (= (x4810 (x2758 x3039) (x1116 5) 0) x3176) (>= x2164 0) (= x4105 x120) (<= x2164 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3239 (< x2164 x3237))) x2251) (and (=> (and (not x3239) (and (= (x3412 x502) x703) (<= 0 x703) (= (x4810 (x2758 x3039) (x1116 5) 0) x502) (= x1859 (> x4105 x703)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x703))) (and (=> (and (not x1859) (and (= x3342 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4105))) (= (< x3342 x1147) x436) (= x3667 (x672 (- x703 x4105))) (= x1147 (x1553 x1394)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1147) (<= 0 x1147) (= x1394 (x4810 (x2758 x2258) (x1116 5) 0)))) (and (=> x436 x4286) (=> (and (and (= x3140 (x2066 (+ x1147 x4105))) (= 1 x148) (= x3309 1) (= 32 x4799)) (not x436)) x288))) (=> x1859 x4286))) (=> x3239 x4286))))) (=> (not x2915) x4286))))))) (=> (and (and (= x2991 x3237) (= x442 100) (< x1852 1466279372) (not (> 4 x442)) (= x3996 x914) (< 0 x4942) (= 100 x442) (= x3368 x696) (not (< x1852 599290589)) (= x1852 599290589) (= x4942 (x3612 (x2758 x2424))) (= x3918 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (x672 (- x442 4)) x1253) (= (or (and (> 96 x1253) (= (<= x1253 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1253 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4819)) x3802) (and (=> (and (and (= x2078 x914) (= x1169 (= x914 x3996))) (not x4819)) (and (=> (and (and (= (= x696 x3368) x765) (= x3371 x3368)) x1169) (and (=> (not x765) x93) (=> (and x765 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4607) (= (< x4607 x3237) x4405) (= (x4059 x3794) x4607) (= (x4810 (x2758 x914) (x1116 1) 0) x3794) (>= x4607 0) (= x2991 x287))) (and (=> (and (= x1131 (> x2991 x4607)) (not x4405)) (and (=> x1131 x93) (=> (and (and (= x2789 (x4810 (x2758 x3368) (x1116 1) 0)) (= x258 (x672 (- x4607 x2991))) (<= 0 x2816) (= (< x1655 x2816) x1504) (= (x4810 (x2758 x914) (x1116 1) 0) x2364) (= (x1800 x2789) x2816) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2991)) x1655) (<= x2816 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1131)) (and (=> (and (and (= x1834 (< x3961 x2816)) (= (x2066 (+ x2991 x2816)) x3961)) (not x1504)) (and (=> x1834 x93) (=> (and (not x1834) (and (= (x4810 (x2758 x3368) (x1116 1) 0) x2333) (= (x4810 (x2758 x696) x4169 0) x1348) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4540) (= x4540 (x3673 x1348)) (>= x4540 0) (= x4169 (x4810 (x2758 x914) (x1116 2) 0)) (= x2055 (> x2991 x4540)))) (and (=> x2055 x93) (=> (and (not x2055) (= x3551 (> x2991 x4540))) (and (=> (and (not x3551) (and (= 1 x4190) (= 32 x2299) (= x1528 (x4810 (x2758 x696) x4936 0)) (= x794 (x672 (- x4540 x2991))) (= x4936 (x4810 (x2758 x914) (x1116 2) 0)))) x4408) (=> x3551 x93))))))) (=> x1504 x93))))) (=> x4405 x93))))) (=> (not x1169) x93))) (=> x4819 x93))))))))) (=> (and (= x1347 x3785) x2032) x1643))) (=> (and (= x1347 x3785) x1510) x1643))) (=> (and (and (= x231 (x672 (- x2595 4))) (= x1595 6539370208772218570076773595062200405109424842860869254164860851635934461952) (< x3209 988262939) (not (> 4 x2595)) (= x1779 x3158) (> 2217467699 x3209) (= 242558722 x3209) (not (= 178855970 x3209)) (= x2595 x4879) (< x3209 405663989) (= x2595 36) (= (x3612 (x2758 x3253)) x4112) (< 0 x4112) (= (or (and (< x231 32) (= true (<= x231 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x231 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3641) (not (= x3209 75483562))) x1352) (and (=> (and x3641 (= x4102 x2546)) x2932) (=> (and (and (= x2734 (> x1779 x2649)) (= x2649 (x2499 x732)) (= x2399 x3158) (<= x2649 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2649) (= (x4810 (x2758 x3996) (x1116 6) 0) x732)) (not x3641)) (and (=> (and x2734 (= x2546 x4102)) x2932) (=> (and (not x2734) (and (= x4208 (x2499 x1992)) (= x4684 (> x3158 x4208)) (<= x4208 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4208) (= x1992 (x4810 (x2758 x3996) (x1116 6) 0)))) (and (=> (and x4684 (= x4102 x2546)) x2932) (=> (and (and (= x123 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3158))) (<= 0 x2546) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2546) (= x800 (< x123 x2546)) (= (x672 (- x4208 x3158)) x2706)) (not x4684)) (and (=> (and (= x4102 x2546) x800) x2932) (=> (and (not x800) (and (= x2725 (= x2424 x2378)) (<= x2378 1461501637330902918203684832716283019655932542975) (= (x2066 (+ x2546 x3158)) x4629) (< x2378 1461501637330902918203684832716283019655932542976) (= x4919 128) (<= 0 x2378) (= x639 (x2066 (+ x2546 x3158))))) (and (=> (and (and (= x3996 x2637) (= x2399 x2752) (= 100 x1154) (= x35 (x672 (- x1154 4))) (= x1154 100) (= x688 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> x3318 0) (= x4131 599290589) (not (> 599290589 x4131)) (= (x3612 (x2758 x2424)) x3318) (> 1466279372 x4131) (not (< x1154 4)) (= x1320 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x35)) (< x35 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x35))) (= x3253 x1812)) x2725) (and (=> x1320 x3240) (=> (and (not x1320) (and (= (= x3996 x2637) x2524) (= x3190 x2637))) (and (=> (and x2524 (and (= x1812 x4708) (= x4414 (= x1812 x3253)))) (and (=> (and (and (= x243 (x4059 x2325)) (= x2752 x4633) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x243) (<= 0 x243) (= (< x243 x2399) x4733) (= x2325 (x4810 (x2758 x2637) (x1116 1) 0))) x4414) (and (=> (and (not x4733) (= (> x2752 x243) x2392)) (and (=> (and (not x2392) (and (= (x672 (- x243 x2752)) x3512) (= x2457 (x4810 (x2758 x2637) (x1116 1) 0)) (= (< x1653 x106) x3155) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x106) (= x3839 (x4810 (x2758 x1812) (x1116 1) 0)) (>= x106 0) (= (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2752)) x1653) (= (x2910 x3839) x106))) (and (=> x3155 x3240) (=> (and (and (= x4569 (< x369 x106)) (= x369 (x2066 (+ x106 x2752)))) (not x3155)) (and (=> x4569 x3240) (=> (and (and (>= x245 0) (= (< x245 x2752) x172) (= (x4810 (x2758 x2637) (x1116 2) 0) x3887) (= (x3673 x3832) x245) (= x4901 (x4810 (x2758 x1812) (x1116 1) 0)) (<= x245 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3832 (x4810 (x2758 x3253) x3887 0))) (not x4569)) (and (=> (and (not x172) (= x655 (< x245 x2752))) (and (=> (and (and (= (x4810 (x2758 x3253) x1498 0) x3265) (= x1726 (x672 (- x245 x2752))) (= 32 x2999) (= (x4810 (x2758 x2637) (x1116 2) 0) x1498) (= x1648 1)) (not x655)) x4766) (=> x655 x3240))) (=> x172 x3240))))))) (=> x2392 x3240))) (=> x4733 x3240))) (=> (not x4414) x3240))) (=> (not x2524) x3240))))) (=> (and (not x2725) (= x176 (= x2378 x3097))) (and (=> (and x176 (and (= x1450 (x3612 (x2758 x3097))) (> 2217467699 x2683) (= x2247 x3996) (= x1156 100) (not (< x1156 4)) (< 0 x1450) (= x3253 x2140) (= x2399 x4113) (not (= 405663989 x2683)) (= x1449 (or (> x4132 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x4132) (= true (<= x4132 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (not (= 547091486 x2683)) (= x1156 100) (not (< x2683 405663989)) (= x4132 (x672 (- x1156 4))) (> 988262939 x2683) (= x505 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 599290589 x2683))) (and (=> x1449 x164) (=> (and (and (= x3560 (= x2247 x3996)) (= x2247 x4343)) (not x1449)) (and (=> (and (and (= (= x3253 x2140) x425) (= x2140 x1862)) x3560) (and (=> (and x425 (and (= x2857 x4113) (= x2122 (x4810 (x2758 x2247) (x1116 5) 0)) (<= x4301 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3412 x2122) x4301) (<= 0 x4301) (= (< x4301 x2399) x3728))) (and (=> x3728 x164) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4756) (= x4756 (x3412 x740)) (<= 0 x4756) (= (< x4756 x4113) x4065) (= x740 (x4810 (x2758 x2247) (x1116 5) 0))) (not x3728)) (and (=> (and (not x4065) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3414) (= x2559 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4113))) (>= x3414 0) (= x1616 (x4810 (x2758 x2140) (x1116 5) 0)) (= x3414 (x514 x1616)) (= x3196 (x672 (- x4756 x4113))) (= (> x3414 x2559) x1850))) (and (=> (and (and (= x3006 32) (= x2665 1) (= (x2066 (+ x3414 x4113)) x3598) (= x3197 1)) (not x1850)) x4542) (=> x1850 x164))) (=> x4065 x164))))) (=> (not x425) x164))) (=> (not x3560) x164))))) (=> (and (= x1900 (= x2378 x3253)) (not x176)) (and (=> (and (and (< x2206 2217467699) (not (< x2206 405663989)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1805) (= (x3612 (x2758 x3253)) x2436) (> x2436 0) (not (= 547091486 x2206)) (not (> 4 x3636)) (not (= 405663989 x2206)) (= x893 x3253) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2271) (and (> 96 x2271) (= true (<= x2271 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x3758) (= x2206 599290589) (= 100 x3636) (= x3636 100) (= x3996 x902) (> 988262939 x2206) (= x2271 (x672 (- x3636 4))) (= x2399 x624)) x1900) (and (=> (and (not x3758) (and (= (= x902 x3996) x621) (= x1091 x902))) (and (=> (not x621) x31) (=> (and x621 (and (= x893 x1152) (= x4899 (= x3253 x893)))) (and (=> (and (and (= x624 x4290) (= (< x3889 x2399) x518) (>= x3889 0) (<= x3889 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1782 (x4810 (x2758 x902) (x1116 5) 0)) (= x3889 (x4100 x1782))) x4899) (and (=> x518 x31) (=> (and (not x518) (and (= (> x624 x3962) x1936) (<= x3962 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3962 (x4100 x4782)) (<= 0 x3962) (= x4782 (x4810 (x2758 x902) (x1116 5) 0)))) (and (=> x1936 x31) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3774) (= x283 (x672 (- x3962 x624))) (= (x4767 x1371) x3774) (= x2311 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x624))) (= x970 (> x3774 x2311)) (= x1371 (x4810 (x2758 x893) (x1116 5) 0)) (>= x3774 0)) (not x1936)) (and (=> (and (and (= (x2066 (+ x624 x3774)) x1759) (= x4691 1) (= x3828 32) (= x2043 1)) (not x970)) x2968) (=> x970 x31))))))) (=> (not x4899) x31))))) (=> x3758 x31))) (=> (and (and (and x2496 (and (= x3996 x2993) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1072) (= 100 x2458) (= (x672 (- x2458 4)) x19) (not (> 4 x2458)) (= 100 x2458) (= 599290589 x2363) (> x1957 0) (> 2217467699 x2363) (= x1393 x3253) (not (= x2363 547091486)) (not (= 405663989 x2363)) (= (x3612 (x2758 x696)) x1957) (= x2399 x61) (not (> 405663989 x2363)) (= x744 (or (> x19 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x19) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x19) true)))) (< x2363 988262939))) (= (= x2378 x696) x2496)) (not x1900)) (and (=> x744 x2213) (=> (and (and (= x735 x2993) (= (= x2993 x3996) x1522)) (not x744)) (and (=> (and (and (= x1067 (= x3253 x1393)) (= x1393 x1266)) x1522) (and (=> (not x1067) x2213) (=> (and (and (= (x4905 x2220) x435) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x435) (>= x435 0) (= x61 x875) (= x4843 (< x435 x2399)) (= x2220 (x4810 (x2758 x2993) (x1116 5) 0))) x1067) (and (=> x4843 x2213) (=> (and (and (= (> x61 x586) x3788) (<= x586 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4905 x282) x586) (= (x4810 (x2758 x2993) (x1116 5) 0) x282) (>= x586 0)) (not x4843)) (and (=> (and (not x3788) (and (= (x672 (- x586 x61)) x706) (<= x3866 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x754 x4522) x3866) (= x175 (x672 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x61))) (>= x3866 0) (= (x4810 (x2758 x1393) (x1116 5) 0) x4522) (= x3138 (> x3866 x175)))) (and (=> x3138 x2213) (=> (and (and (= 1 x2342) (= x753 1) (= x2119 (x2066 (+ x3866 x61))) (= x2250 32)) (not x3138)) x4450))) (=> x3788 x2213))))))) (=> (not x1522) x2213)))))))))))))))))))))))))
(assert (= x4188 (and x855 x4743)))
(assert (x4620 x883))
(assert (=> (<= x2637 10000) (= (x2758 x2637) (x1116 x2637))))
(assert (= (=> (and (= x1972 (x4810 (x2758 x388) x4731 0)) (= (x2022 1461501637330902918203684832716283019655932542975 x2695) x1043) (= x388 (x2022 1461501637330902918203684832716283019655932542975 x847)) (= (> x4891 0) x3038) (= x4731 (x4810 (x2758 x1043) (x1116 158) 0))) (and (=> (and (not x3038) (and (= x1347 x154) (= x2546 x1981) (= x2746 x3243) (= x1840 x39) (= x388 x2808))) x3080) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2970) (< 0 x1933) (= x2970 (x4041 x4216)) (= x2256 x2329) (= (+ x1339 x2256) x3194) (<= x1933 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4086 (ite x2054 1 0)) (< (+ x2970 x873) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x2329 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x873 x1339) (= x1933 (x2478 x1844)) (= x2005 (x2066 (+ 32 x786))) (= (x4810 (x2758 x3279) (x1116 164) 0) x1844) (= x2970 x2013) (<= 0 x2970) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x3510 1000000000000000000)) (= (+ x4854 x2013) x4546) (= (x2066 (+ 4 x3243)) x786) (= x3510 (x1421 (* 1000000000000000000 x4891))) (= x873 (x2656 x2320 1000000000000000000)) (= (x672 (- x2005 x3243)) x3425) (= x2054 (< 115792089237316195423570985008687907853269984665640564039457 x4891)) (= (x1980 x1972) x2329) (= x953 (= x4758 x3097)) (= x4758 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x2329 x873)) (= (x2022 1461501637330902918203684832716283019655932542975 x2695) x3279) (= (* x3510 1000000000000000000) x1119) (= x4086 0) (= x2320 (x2656 x1119 x1933)) (<= 0 x1933) (>= x2329 0) (= (x1008 x1724 1) x4216) (= x873 x4854)) x3038) (and (=> (and x953 (and (not (< x370 4)) (not (= x97 75483562)) (= 36 x370) (= x97 398450620) (= x3996 x2775) (not (= 242558722 x97)) (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x1652) (= x370 x3425) (> 405663989 x97) (= x493 (x3612 (x2758 x3097))) (not (= x97 178855970)) (> 988262939 x97) (= x4968 (x672 (- x370 4))) (= (or (> x4968 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x4968 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x4968 32))) x2044) (< x97 2217467699) (< 0 x493))) (and (=> x2044 x4147) (=> (and (and (= x1148 x2775) (= (= x2775 x3996) x1032)) (not x2044)) (and (=> (not x1032) x4147) (=> (and (and (= (x4810 (x2758 x2775) (x1116 6) 0) x2319) (= x3320 (x2957 x2319)) (= 1 x2510) (<= x3320 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1385 32) (<= 0 x3320)) x1032) x377))))) (=> (and (= (= x3253 x4758) x3651) (not x953)) (and (=> (and x3651 (and (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x2689) (> x2485 0) (not (= x3092 242558722)) (not (= x3092 75483562)) (= x2821 (or (> x2337 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x2337) (= (<= x2337 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (not (= x3092 178855970)) (= (x672 (- x1372 4)) x2337) (not (< x1372 4)) (< x3092 988262939) (= x1372 36) (< x3092 405663989) (= x2485 (x3612 (x2758 x3253))) (= x3996 x3058) (> 2217467699 x3092) (= x3425 x1372) (= 398450620 x3092))) (and (=> (and (and (= x2893 x3058) (= (= x3996 x3058) x3927)) (not x2821)) (and (=> (and x3927 (and (= x3545 (x2499 x749)) (= 32 x1443) (= x749 (x4810 (x2758 x3058) (x1116 6) 0)) (<= x3545 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3545) (= x4420 1))) x3258) (=> (not x3927) x4842))) (=> x2821 x4842))) (=> (and (not x3651) (and (and x3359 (and (> 2217467699 x3988) (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x3532) (= (x3612 (x2758 x696)) x405) (< x3988 405663989) (not (< x299 4)) (> x405 0) (= x799 x3996) (= x299 x3425) (not (= 242558722 x3988)) (> 988262939 x3988) (not (= 178855970 x3988)) (not (= x3988 75483562)) (= x299 36) (= (or (> x2593 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x2593 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x2593))) x2467) (= x3988 398450620) (= x2593 (x672 (- x299 4))))) (= (= x4758 x696) x3359))) (and (=> x2467 x1636) (=> (and (and (= x3712 x799) (= (= x799 x3996) x1493)) (not x2467)) (and (=> (and (and (= x4321 (x4810 (x2758 x799) (x1116 6) 0)) (= 1 x2647) (= x3183 (x1787 x4321)) (= x3595 32) (<= 0 x3183) (<= x3183 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1493) x2039) (=> (not x1493) x1636))))))))))) x809))
(assert (= x2246 (and (not x1832) x2048)))
(assert (x157 x1223 x3888 x3888 x3691))
(assert (=> (<= x4472 10000) (= (x2758 x4472) (x1116 x4472))))
(assert (= (and x54 x436) x3727))
(assert (= x2208 (and (not x428) x2006)))
(assert (x4244 x4574))
(assert (= x1631 (=> (and (= x4146 x124) (= x1840 x4752) (= x3738 x971) (= x520 x2219) (= x4040 x1347)) x490)))
(assert (= (and x2403 (not x2185)) x4118))
(assert (x4620 x673))
(assert (= (or x4362 x4284) x2874))
(assert (= x961 (and x2642 x2437)))
(assert (x4620 x854))
(assert (x4620 x2206))
(assert (x4620 x2311))
(assert (= (and x165 (not x1913)) x2862))
(assert (x4620 x3930))
(assert (x4620 x2508))
(assert (= x2505 (and x3507 (not x2645))))
(assert (x4620 x2270))
(assert (= (and x1899 x2836) x1905))
(assert (x4620 x4236))
(assert (= x2138 (and (not x4062) x1326)))
(assert (x4620 x2493))
(assert (= (+ (x4681 x1882) 1) (x4681 (x1008 x1882 1))))
(assert (x4620 x1241))
(assert (x2318 x3820))
(assert (= (x4681 (x1008 x4494 3)) (+ (x4681 x4494) 3)))
(assert (= (and x1064 x2069) x3329))
(assert (= (=> (and (or (and (not x1239) (= (x4810 (x2758 x3547) x1335 0) x3398)) (and x1239 (= (x1008 x1335 2) x421))) (= x1239 (= x3547 0))) x1279) x678))
(assert (x2538 (- x3888 x3691)))
(assert (x4620 x3876))
(assert (= x3360 (and x3788 x952)))
(assert (= x2169 (and (not x4848) x3731)))
(assert (x2318 x404))
(assert (x3601 x1570))
(assert (and (and (= (- (* (- x3467 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3467 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3467 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3467) (- (* x3467 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3467))) (= (x1807 1000000000000000000 (- x3467 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x3467 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x3467) (x2296 1000000000000000000 x3467) (= (x1807 1000000000000000000 x3467) (* x3467 1000000000000000000)) (x4064 1000000000000000000 x3467) (x218 1000000000000000000 x3467) (x1213 1000000000000000000 x3467)))
(assert (x4620 x3280))
(assert (= x3086 (and x3419 (not x652))))
(assert (= (x4681 (x2758 x3935)) x3935))
(assert (x4620 x3406))
(assert (x4620 x4490))
(assert (= x913 (or x4477 x1351)))
(assert (x4620 x734))
(assert (= (or x2604 x2598) x4934))
(assert (= (and x4928 (not x2853)) x1863))
(assert (x4620 x1962))
(assert (x4620 x3712))
(assert (x4620 x455))
(assert (x2318 x1790))
(assert (x4620 x369))
(assert (x4620 x4817))
(assert (x4620 x3029))
(assert (=> (<= x681 10000) (= (x1116 x681) (x2758 x681))))
(assert (x4620 x4908))
(assert (= (and x1467 x4690) x118))
(assert (= (and x3932 (not x1292)) x3055))
(assert (x4620 x2079))
(assert (= x1101 (or x960 x3929)))
(assert (x4620 x90))
(assert (x157 x3691 x3888 x2832 x2227))
(assert (= (x4681 (x2758 x4602)) x4602))
(assert (x4620 x1686))
(assert (= x2528 (and x1730 x3086)))
(assert (=> (<= x820 10000) (= (x2758 x820) (x1116 x820))))
(assert (x4620 x34))
(assert (= (=> (and (or x326 (not x326)) (= (= 0 x10) x326)) x566) x3868))
(assert (= x1829 (or x1978 x2412)))
(assert (= x944 (and (not x3201) x3499)))
(assert (= (or x1482 x4351) x3658))
(assert (x3257 x1223 x3888))
(assert (= (x4681 (x1008 x1550 1)) (+ (x4681 x1550) 1)))
(assert (x4620 x3575))
(assert (x4620 x3636))
(assert (x4620 x3671))
(assert (= (+ 2 (x4681 x4958)) (x4681 (x1008 x4958 2))))
(assert (= 2362143243 (x4681 (x1116 2362143243))))
(assert (x4620 x3592))
(assert (= x606 (=> (and (= x4071 x494) (= x774 x4955)) x691)))
(assert (= (=> (and (= x3335 (x4810 (x2758 x4045) x1414 0)) (= (x2022 1461501637330902918203684832716283019655932542975 x847) x4045) (= x2621 (x1008 x3335 1)) (= x3431 (x1008 x2621 1))) x4282) x1677))
(assert (= (and x3030 x2267) x522))
(assert (x3867 x1599))
(assert (x4620 x2451))
(assert (= x584 (x4681 (x2758 x584))))
(assert (= x2949 (or (and x2654 (not x868)) x1767)))
(assert (x4620 x2698))
(assert (x3867 x390))
(assert (= (and x2734 x589) x3750))
(assert (= x213 (and x105 x326)))
(assert (= (=> (and (and (not (= x2276 x696)) (= x3496 0) (<= x4490 255) (= x4812 (not x1694)) (>= x1323 0) (>= x937 0) (> 256 x4039) (<= x959 1461501637330902918203684832716283019655932542975) (not (= x2199 2236579515)) (<= x4018 1461501637330902918203684832716283019655932542975) (<= x4344 255) (<= 0 x296) (not (= x3996 x2771)) (<= x3569 1461501637330902918203684832716283019655932542975) (not (= x2276 x3253)) (<= 0 x1146) (= (x255 x2030) x4039) (not (= x2771 x696)) (>= 18446744073709551615 x3955) (not (= x2771 x3708)) (not (= x3253 x1788)) (= (x4156 x2030) x4344) (= x1611 x3539) (= (x2022 1461501637330902918203684832716283019655932542975 x847) x768) (= x4482 x113) (>= x1842 0) (<= x3494 1461501637330902918203684832716283019655932542975) (<= 0 x330) (= (< 0 (x3612 (x2758 x1788))) x4012) (>= 255 x1489) (= x987 x473) (>= x1386 0) (>= 1461501637330902918203684832716283019655932542975 x847) (= x4682 (x2912 x2030)) (not (= x1788 x696)) (>= x4039 0) (>= x2792 0) (>= x2975 0) (= x2545 (x3536 x2030)) (>= 255 x2792) (not (= x2771 x2276)) (= (x3296 (x2758 x696)) x3418) (= x4293 (not x1508)) (> x3996 0) (<= x2083 255) (<= x330 1461501637330902918203684832716283019655932542975) (not (= x3097 x2276)) (<= 0 x3437) x2582 (not (= x696 x3996)) (>= 1461501637330902918203684832716283019655932542975 x3343) (<= 0 x3488) x366 (= x1819 (x4810 (x2758 x768) x4125 0)) x1056 (<= 0 x4625) (>= x4490 0) (>= 1461501637330902918203684832716283019655932542975 x784) (<= x1911 255) (>= x4739 0) (<= x3996 1461501637330902918203684832716283019655932542975) (<= 0 x3880) (>= 1461501637330902918203684832716283019655932542975 x3880) (= (not x2128) x1318) (= (= x2545 0) x1508) (not (= x3996 x1788)) (> x3097 0) (>= 1461501637330902918203684832716283019655932542975 x3385) (<= 0 x1434) (>= 1461501637330902918203684832716283019655932542975 x3253) (<= 0 x3831) (= x526 (x3590 416)) (>= 1461501637330902918203684832716283019655932542975 x4297) (= x2986 x2195) (= x1775 x4644) x4206 (= (x2022 26959946667150639794667015087019630673637144422540572481103610249215 x526) x3697) (>= 1461501637330902918203684832716283019655932542975 x2611) (= x1842 (x3296 (x2758 x3996))) (>= 18446744073709551615 x1236) (>= 1461501637330902918203684832716283019655932542975 x1141) (<= 0 x4519) (<= 0 x4018) (>= 1461501637330902918203684832716283019655932542975 x2695) (not (= 0 x3539)) (= x423 (< 0 (x3612 (x2758 x2276)))) (>= x3955 0) (>= x3494 0) (<= 0 x3408) (= (< 0 (x3612 (x2758 x3996))) x554) (= x4829 (> (x3612 (x2758 x2771)) 0)) (>= x4050 0) (= 0 x1665) (<= 0 x2195) (= x1056 (> (x3612 (x2758 x3097)) 0)) (<= x583 18446744073709551615) (<= x2378 1461501637330902918203684832716283019655932542975) (not (= 2030502250 x2199)) (= x3596 (> (x3612 (x2758 x696)) 0)) (>= x1911 0) (not (= x3253 x2771)) (= x2695 x3687) (>= x1715 0) (= x2771 x4060) (> x2771 0) (not (= x1788 x3097)) (= x2942 x3343) (>= x3324 0) (<= x1146 255) (>= x3818 0) (<= x4519 255) (>= 1461501637330902918203684832716283019655932542975 x3437) (<= x4039 255) (= x1788 x675) (= x1671 (x3296 (x2758 x3097))) (>= x169 0) x4829 (<= 0 x2611) (<= 0 x2766) (<= 0 x675) (>= x784 0) (< 0 x3708) (not (= x2424 x2276)) (not (= x2276 x3996)) (not (= x3708 x3996)) (= x1146 (x2550 x2030)) (not (= x3097 x3996)) (= x1401 (x3612 (x2758 x3996))) (<= x2419 1461501637330902918203684832716283019655932542975) (<= 0 x4415) (= (x3296 (x2758 x1788)) x2904) (<= x2975 1461501637330902918203684832716283019655932542975) (<= 0 x1906) (= (x3296 (x2758 x3708)) x296) (= 2245473101 x2199) (= x4818 (x3296 (x2758 x2771))) (= x3270 0) (>= 1461501637330902918203684832716283019655932542975 x2195) (< 0 x3253) (<= 0 x546) (>= x2622 0) (<= 0 x2378) (>= x3343 0) (>= 1461501637330902918203684832716283019655932542975 x2622) (> x1788 0) x3596 (not (= x2424 x3097)) (>= x1141 0) (<= 0 x113) (<= x2424 1461501637330902918203684832716283019655932542975) (<= 0 x583) (>= x2059 0) (not (< x2199 2023533118)) (= (> (x3612 (x2758 x3708)) 0) x2582) (<= x3128 1461501637330902918203684832716283019655932542975) (= x897 (< 0 (x3612 (x2758 x3253)))) (= x3439 (= 0 x1906)) (not (= x3708 x3097)) (> 256 x4682) (= (= x4344 0) x1694) (>= x4344 0) (>= 1461501637330902918203684832716283019655932542975 x113) (not (= x696 x3253)) (<= 0 x3787) (<= 0 x3569) (>= 255 x4625) (= (not x3439) x4644) (<= x1144 1461501637330902918203684832716283019655932542975) (= x2517 (not x4875)) (<= x4730 18446744073709551615) (>= 1461501637330902918203684832716283019655932542975 x2771) (>= 1461501637330902918203684832716283019655932542975 x3097) (not (= x3097 x696)) (>= 255 x1906) (not (= x3253 x3097)) (>= x3385 0) (= (= x1146 0) x1265) (= x4465 x4293) (= x4719 x1011) x4012 (< x2545 256) (<= 0 x4157) (= x4784 x3437) (<= x937 255) (< x1911 256) (>= x2672 0) (= x3762 x1086) (< x1146 256) (<= x2806 255) (= x1271 (< 0 x1911)) (= x4625 (x801 x2030)) x554 (= (x103 x2030) x1906) (not (= x2771 x3097)) (>= 1461501637330902918203684832716283019655932542975 x2672) (= x2851 x409) (>= x2419 0) (= x847 x2942) (= (not x3332) x4173) (not (= x1788 x3708)) (= x2128 (= x4039 0)) (= x220 x3270) (<= x1434 1461501637330902918203684832716283019655932542975) (< x4344 256) (= x1911 (x3028 x1819)) (<= x4060 1461501637330902918203684832716283019655932542975) (< 0 x2276) (>= 1461501637330902918203684832716283019655932542975 x2059) (<= 0 x4818) (not (= x2199 2023533118)) (= (< 0 x1977) x4206) (<= 0 x1671) (= x184 x847) (>= x3112 0) (not (= x2276 x3708)) (= x337 x4964) (= (x3492 128) x3573) (<= 0 x4297) (> 256 x4625) (>= x2904 0) (not (= x3708 x2424)) (= x366 (< 0 (x3612 (x2758 x2424)))) (= (x3296 (x2758 x2424)) x3488) (<= x3408 1461501637330902918203684832716283019655932542975) (= x4784 x784) (= x3332 (= 0 x2792)) (not (= x3253 x3708)) (<= 0 x959) (>= x3777 0) (= (x3296 (x2758 x2276)) x2766) (= x2921 x2517) (<= 0 x90) (<= x4415 1461501637330902918203684832716283019655932542975) (<= x1323 255) (>= 1461501637330902918203684832716283019655932542975 x696) (not (= 2134560854 x2199)) (>= 1461501637330902918203684832716283019655932542975 x3787) (= x4125 (x4810 (x2758 x3407) (x1116 160) 0)) (> x696 0) (> x3573 0) (>= x2545 0) (> 2678788150 x2199) (not (= x2424 x696)) x423 (>= 255 x4682) (<= x2545 255) (= x987 x1977) (>= x4730 0) (>= 255 x680) (> 2362143243 x2199) (<= x3112 255) (not (= x3996 x2424)) (not (= x3708 x696)) (not (= x3253 x3996)) (= (x2061 x2030) x2792) x897 (not (= x184 0)) (>= 1461501637330902918203684832716283019655932542975 x1788) (< x2792 256) (= x1853 x4173) (>= 255 x3076) (= x2030 (x4810 (x2758 x2695) (x1116 168) 0)) (>= 255 x4050) (>= 255 x3324) (<= x3831 1461501637330902918203684832716283019655932542975) (<= x3708 1461501637330902918203684832716283019655932542975) (>= 18446744073709551615 x1386) (<= x3818 18446744073709551615) (<= x169 1461501637330902918203684832716283019655932542975) (>= x3076 0) (= x2941 (x2066 (+ 24044834009420335638544845215851342251227478490780828673611325350056707489792 x3697))) (= x4812 x1354) (<= x4739 18446744073709551615) (>= x680 0) (<= x3687 1461501637330902918203684832716283019655932542975) (>= x4682 0) (= x1086 (not x1265)) (= (x2022 1461501637330902918203684832716283019655932542975 x2695) x3407) (<= 0 x1236) (>= x2083 0) (>= 18446744073709551615 x1715) (not (= x2276 x1788)) (= x147 (= 0 x4625)) (<= 0 x2806) (< 0 x2424) (< 0 x1401) (= x2986 x4245) (= x409 x4719) (<= 0 x3687) (<= x675 1461501637330902918203684832716283019655932542975) (not (= x3253 x2424)) (= x473 x3539) (= x3777 (x3296 (x2758 x3253))) (not (= x2771 x2424)) (= (x3492 160) x3496) (> 256 x1906) (>= 1461501637330902918203684832716283019655932542975 x90) (<= 0 x3418) (= (= 0 x4682) x4875) (not (= x2771 x1788)) (<= 0 x1489) (= x601 x1318) (= x1144 x3569) (>= x4060 0) (= (not x147) x4964) (>= 1461501637330902918203684832716283019655932542975 x4157) (<= x2276 1461501637330902918203684832716283019655932542975) (<= 0 x3128) (not (= x2424 x1788)) (>= 1461501637330902918203684832716283019655932542975 x546)) (or (and (not x1271) (and (= x1854 x2552) (= (x2066 (+ 1 x919)) x4956) (= x1869 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (= x919 (x1638 x1854)) (= x76 (x2022 1461501637330902918203684832716283019655932542975 x847)) (= x1666 (x2022 1461501637330902918203684832716283019655932542975 x847)) (= (x4810 (x2758 x76) (x1116 161) 0) x1854) (= x461 (x2022 1461501637330902918203684832716283019655932542975 x2695)))) (and (= x2552 (x2758 x768)) x1271))) x4656) x3994))
(assert (=> (>= 10000 x2669) (= (x1116 x2669) (x2758 x2669))))
(assert (= x4287 (not (and (<= x4509 1461501637330902918203684832716283019655932542975) (= (x1008 x4028 1) x1053) (< x4509 1461501637330902918203684832716283019655932542976) (<= 0 x4509) (= x4028 (x4810 (x2758 x102) x1751 0)) (= (x2955 x1053) x4509)))))
(assert (= (and (not x773) x4610) x4716))
(assert (x4620 x1203))
(assert (x4620 x886))
(assert (x2538 (- x1223 x3691)))
(assert (x4620 x2224))
(assert (= x4052 (and x4754 (not x3967))))
(assert (x4620 x1353))
(assert (=> (>= 10000 x4373) (= (x1116 x4373) (x2758 x4373))))
(assert (x157 x3888 x1223 x3888 x3691))
(assert (x4620 x1148))
(assert (x2318 x2993))
(assert (x2318 x3786))
(assert (= (and x4598 x94) x4496))
(assert (x4620 x1018))
(assert (x4620 x155))
(assert (x4620 x584))
(assert (= (and x381 x4579) x3799))
(assert (x4620 x743))
(assert (x4620 x3951))
(assert (x4620 x4493))
(assert (= x3841 (and x1293 x447)))
(assert (= x1604 (and (=> (and (not x3599) (and (= x2154 x2460) (= x1256 x345))) x3772) (=> (and (and (or (and x4347 (and (= x1821 (x1421 (* x4706 1000000000000000000))) (= x3586 x1264) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x4160 x1562)) (= (* x4002 1000000000000000000) x726) (= x564 0) (= x233 (< 115792089237316195423570985008687907853269984665640564039457 x4706)) (<= x2014 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< 0 x3888) (= (x2656 x58 x3888) x2805) (= x1562 (x4122 x4967)) (= (* x1821 1000000000000000000) x58) (= x2014 (x2414 x628)) (< (* x4002 1000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x2656 x726 x4836) x2489) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1562) (= x4056 (> x4706 115792089237316195423570985008687907853269984665640564039457)) (not (< x2014 x3985)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x1821 1000000000000000000)) (= x204 x4160) (< 0 x4836) (= x503 0) (= x1264 (x672 (- x2014 x3985))) (= (x2656 x2805 1000000000000000000) x3985) (<= 0 x1562) (= (x1421 (* x4706 1000000000000000000)) x4002) (= x4544 (+ x3379 x204)) (= x564 (ite x4056 1 0)) (>= x2014 0) (= x403 x4544) (= (x2656 x2489 1000000000000000000) x4160) (= x3379 x1562) (= (ite x233 1 0) x503))) (and (and (= x1312 (x4122 x4967)) (<= x1312 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 0 x3586) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1312 x611)) (= x636 x611) (= (+ x636 x3696) x2108) (= x2562 (* 1000000000000000000 x3275)) (= 0 x3583) (= x3696 x1312) (= x3275 (x1421 (* x3467 1000000000000000000))) (< (+ x2154 x3467) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1523 (x2656 x2562 x4836)) (= x2108 x403) (<= 0 x1312) (< (* 1000000000000000000 x3275) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x2656 x1523 1000000000000000000) x611) (= x3583 (ite x2534 1 0)) (< 0 x4836) (= x2534 (< 115792089237316195423570985008687907853269984665640564039457 x3467))) (not x4347))) (and (<= 0 x1223) (= x4706 (x672 (- x1659 x2154))) (= x2396 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (= x1539 (x1807 x1223 x3888)) (= (x2656 x1539 1000000000000000000) x3467) (= (x1008 x4967 1) x628) (<= x1223 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4967 (x4810 (x2758 x2272) x525 0)) (not (< x1659 x2154)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1807 x1223 x3888)) (= (x2414 x628) x1223) (= x4347 (< x4706 x3467)) (= (x4810 (x2758 x2396) (x1116 159) 0) x525))) x3599) x2380))))
(assert (= x705 (and x4137 (not x1714))))
(assert (= (and x1246 x53) x4367))
(assert (= x4766 (=> (and (= x2132 x1648) (= x2999 x4335)) x3328)))
(assert (x4620 x4555))
(assert (x4620 x2942))
(assert (= x3936 (and x945 x2535)))
(assert (= (and (not x2032) x2471) x1578))
(assert (x4620 x1387))
(assert (x4620 x1190))
(assert (x157 x1223 x3888 x2227 x2832))
(assert (= (x4681 (x1008 x4356 1)) (+ 1 (x4681 x4356))))
(assert (x4620 x4469))
(assert (x4620 x3294))
(assert (and (x1645 x931 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x588 x931 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4906 x931 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2656 x931 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x3657 x931 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x931))))
(assert (x4620 x1741))
(assert (x2318 x1686))
(assert (= x285 (and (not x2609) x3347)))
(assert (= x3369 x3811))
(assert (= x3328 (=> (and (= x3912 (= 0 x2132)) (or (not x3912) x3912)) x521)))
(assert (= (and (not x2704) x141) x1102))
(assert (= (or x466 x510) x3505))
(assert (= x2511 (and (not x1010) x4614)))
(assert (= 178855970 (x4681 (x1116 178855970))))
(assert (x4620 x3125))
(assert (= (and x1139 x1561) x1959))
(assert (x4620 x3977))
(assert (x4620 x4148))
(assert (= x2895 (x4681 (x2758 x2895))))
(assert (x4620 x4708))
(assert (x4620 x261))
(assert (= x1179 (or x751 x674)))
(assert (x4620 x3634))
(assert (x4620 x3425))
(assert (=> (<= x4655 10000) (= (x1116 x4655) (x2758 x4655))))
(assert (= (and x2313 (not x4733)) x4440))
(assert (= x1669 (x4681 (x2758 x1669))))
(assert (x4620 x1264))
(assert (x431 x34 x3469))
(assert (= x1377 (=> (and (= x4330 x51) (= 0 x2701)) x3276)))
(assert (x4620 x1935))
(assert (= x1208 (and x2434 (not x2826))))
(assert (=> (>= 10000 x2171) (= (x2758 x2171) (x1116 x2171))))
(assert (= (x2758 6539370208772218570076773595062200405109424842860869254164860851635934461952) (x1116 6539370208772218570076773595062200405109424842860869254164860851635934461952)))
(assert (x4620 x4850))
(assert (x4620 x2717))
(assert (= x2771 (x4681 (x2758 x2771))))
(assert (x4620 x4119))
(assert (= (and x315 (not x3210)) x1457))
(assert (x4620 x1770))
(assert (= (and x304 (not x2781)) x4340))
(assert (= (or x339 x1219) x2779))
(assert (x4620 x3448))
(assert (x4620 x1503))
(assert (x4620 x65))
(assert (= (and x746 x3912) x4931))
(assert (= (and (not x2358) x3968) x448))
(assert (x4620 x3177))
(assert (x4620 x661))
(assert (x4620 x3209))
(assert (x4620 x3833))
(assert (= (x2758 2835717307) (x1116 2835717307)))
(assert (x4620 x833))
(assert (x4620 x2175))
(assert (x157 x2832 x2227 x1223 x3888))
(assert (x4620 x390))
(assert (x2538 (- x1223 x2832)))
(assert (= x3339 x2134))
(assert (= (and x4440 x2392) x2954))
(assert (x2318 x188))
(assert (x4620 x968))
(assert (= (and x1569 (not x74)) x684))
(assert (x4620 x4441))
(assert (= x4867 (and (not x2696) x1388)))
(assert (x4620 x919))
(assert (= (and x3333 x2341) x3732))
(assert (x4620 x3889))
(assert (x4620 x3836))
(assert (= (x4681 (x2758 x3524)) x3524))
(assert (= (x4681 (x2758 x3407)) x3407))
(assert (= x4475 (and (not x5) x3367)))
(assert (x4620 x2076))
(assert (= (=> (and (= x2701 x1165) (= x51 x3389)) x3908) x3276))
(assert (x4620 x2767))
(assert (= (and x2348 (not x2762)) x1993))
(assert (x4620 x3595))
(assert (x4620 x3261))
(assert (x4620 x2641))
(assert (x4620 x3559))
(assert (x4620 x3371))
(assert (= (and x407 x2031) x1118))
(assert (x2318 x2775))
(assert (= x1491 (and x637 (not x3008))))
(assert (= (and x1136 x2714) x2284))
(assert (x4620 x2351))
(assert (= x4099 (=> (and (= 0 x2651) (= x685 x3563)) x4030)))
(assert (= (and (not x2389) x2297) x4269))
(assert (= x1164 (and x2740 x4347)))
(assert (x2538 x1223))
(assert (x4620 x2750))
(assert (x4620 x3890))
(assert (x4620 x755))
(assert (= x4621 (or x313 x1620 x1359 x3727 x3754 x4017)))
(assert (= (and x410 x2486) x260))
(assert (= x4134 (and (not x3413) x4746)))
(assert (x4620 x3253))
(assert (= (or x2511 x1897) x4144))
(assert (x4620 x67))
(assert (= (+ (x4681 x1284) 2) (x4681 (x1008 x1284 2))))
(assert (= (and x362 x4080) x676))
(assert (x4620 x959))
(assert (= x415 x1128))
(assert (x4620 x3954))
(assert (= (or x4635 x2050) x4240))
(assert (=> (>= 10000 x4135) (= (x1116 x4135) (x2758 x4135))))
(assert (= x3689 (or x3579 x4304)))
(assert (= (x1116 2858086653) (x2758 2858086653)))
(assert (x3063 x2695))
(assert (= x3216 (and x916 x2936)))
(assert (x4620 x280))
(assert (=> (>= 10000 x3255) (= (x2758 x3255) (x1116 x3255))))
(assert (= (and x1661 x1206) x2371))
(assert (= (and x4886 (not x3423)) x2814))
(assert (= x48 (and x4215 x1887)))
(assert (= (+ 1 (x4681 x2336)) (x4681 (x1008 x2336 1))))
(assert (x4620 x481))
(assert (=> (<= x1990 10000) (= (x1116 x1990) (x2758 x1990))))
(assert (x4620 x4833))
(assert (= x2797 (or x4052 x3042)))
(assert (x2318 x1902))
(assert (x3867 x3719))
(assert (x4620 x4410))
(assert (x4620 x3408))
(assert (and (x2026 x1539 1000000000000000000) (x2201 x1539 1000000000000000000) (x2891 x1539 1000000000000000000) (=> (and (< 0 x1539) (< 0 1000000000000000000)) (and (< (- x1539 1000000000000000000) (* (x2656 x1539 1000000000000000000) 1000000000000000000)) (<= (* (x2656 x1539 1000000000000000000) 1000000000000000000) x1539))) (x3017 x1539 1000000000000000000)))
(assert (x4620 x1435))
(assert (x4620 x3100))
(assert (= (and x273 (not x2584)) x2905))
(assert (x4620 x2261))
(assert (= (+ (x4681 x1662) 1) (x4681 (x1008 x1662 1))))
(assert (x4620 x188))
(assert (= (and x4003 x1521) x234))
(assert (x2318 x3127))
(assert (x2318 x4602))
(assert (x4620 x517))
(assert (x4620 x3065))
(assert (=> (<= x1425 10000) (= (x1116 x1425) (x2758 x1425))))
(assert (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 (x4681 (x1116 10742207464693106059581744854972325794081737850190833080250671788038469713920))))
(assert (= (and x4703 (not x2019)) x984))
(assert (= (=> (= x2929 (= x1403 x4747)) (and (=> (and (= (< 0 x4747) x2899) (not x2929)) (and (=> (not x2899) x4282) (=> (and x2899 (and (or (and x2429 (= x903 (x1008 x1414 1))) (and (and (= x4426 (x4810 (x2758 x4602) x1414 0)) (= x2711 (x1008 x4426 1))) (not x2429))) (and (= x4412 (x2981 x2537)) (= x2537 (x1008 x2210 1)) (= (x4810 (x2758 x584) x1414 0) x2321) (>= 1461501637330902918203684832716283019655932542975 x4602) (< x4602 1461501637330902918203684832716283019655932542976) (= x2210 (x1008 x2321 1)) (= x4602 (x4411 x2321)) (< x2827 1461501637330902918203684832716283019655932542976) (<= 0 x4412) (= (= x4602 0) x2429) (<= 0 x2827) (>= x4602 0) (not (= x4412 0)) (= x584 (x2022 1461501637330902918203684832716283019655932542975 x847)) (= (x3314 x2210) x2827) (>= 1461501637330902918203684832716283019655932542975 x2827) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4412)))) x1039))) (=> x2929 x2134))) x4055))
(assert (= (and (not x2928) x3429) x398))
(assert (x4620 x2683))
(assert (x4620 x3529))
(assert (= x12 (and x2612 x4646)))
(assert (x4620 x2182))
(assert (= x2553 (and x2431 x2899)))
(assert (x4620 x3911))
(assert (= (and x553 x4463) x3871))
(assert (=> (<= x4954 10000) (= (x2758 x4954) (x1116 x4954))))
(assert (x4620 x3227))
(assert (= (or x3055 x2264) x4322))
(assert (x4620 x3663))
(assert (= x3902 (x4681 (x2758 x3902))))
(assert (= (=> (and (= x830 x2667) (= x1547 x355)) x4285) x3826))
(assert (= (and x128 x2369) x925))
(assert (x4620 x4577))
(assert (x4620 x1020))
(assert (x4620 x506))
(assert (=> (<= x2462 10000) (= (x1116 x2462) (x2758 x2462))))
(assert (= (=> (and (= x1133 x2544) (= x439 x4377)) x1210) x1696))
(assert (x2933 x3888 x3691 x2832 x2227))
(assert (x4620 x2310))
(assert (x4620 x1547))
(assert (= x4595 (and x2244 x4511)))
(assert (=> (<= x3820 10000) (= (x2758 x3820) (x1116 x3820))))
(assert (x4620 x4311))
(assert (= (x2758 115792089237316195423570985008687907853269984665640564039457) (x1116 115792089237316195423570985008687907853269984665640564039457)))
(assert (x3867 1461501637330902918203684832716283019655932542975))
(assert (= x793 (and x4007 x3345)))
(assert (x4620 x820))
(assert (x4620 x812))
(assert (=> (>= 10000 x902) (= (x2758 x902) (x1116 x902))))
(assert (=> (>= 10000 x710) (= (x1116 x710) (x2758 x710))))
(assert (x2933 x3691 x3888 x1223 x3888))
(assert (x4620 x1672))
(assert (x4620 x145))
(assert (= (and x956 x3544) x4670))
(assert (x2538 (- x2227 x1223)))
(assert (= (x2758 3842108676) (x1116 3842108676)))
(assert (= x143 (and (not x1624) x1106)))
(assert (x4620 x1940))
(assert (= x211 (=> (and (= x3174 x3182) (= 0 x2027)) x2020)))
(assert (x4620 x2578))
(assert (x4620 x778))
(assert (= 988262939 (x4681 (x1116 988262939))))
(assert (= (or x4276 x45) x2483))
(assert (x2318 x2569))
(assert (=> (<= x404 10000) (= (x1116 x404) (x2758 x404))))
(assert (x4620 x2759))
(assert (x4620 x4094))
(assert (x4620 x2806))
(assert (x2318 x799))
(assert (= x2276 (x4681 (x2758 x2276))))
(assert (x4620 x3627))
(assert (x4620 x1434))
(assert (= (=> (and (= x2218 (= 0 x439)) (or (not x2218) x2218)) x1513) x1210))
(assert (= x2433 (and x530 (not x927))))
(assert (= x4175 (or x2105 x4093)))
(assert (x4620 x1338))
(assert (x4620 x703))
(assert (x4620 x345))
(assert (and (x1645 x1822 1461501637330902918203684832716283019655932542976) (x588 x1822 1461501637330902918203684832716283019655932542976) (x4906 x1822 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* 1461501637330902918203684832716283019655932542976 (x2656 x1822 1461501637330902918203684832716283019655932542976)) (x3657 x1822 1461501637330902918203684832716283019655932542976)) x1822))))
(assert (x4620 x480))
(assert (= (and x1445 x4902) x733))
(assert (x4620 x981))
(assert (x2318 x838))
(assert (x4620 x2945))
(assert (x4620 x4780))
(assert (= x1939 (and x2216 x597)))
(assert (x2318 x1940))
(assert (= (x1116 1857877511) (x2758 1857877511)))
(assert (x4620 x4865))
(assert (x4620 x3394))
(assert (x4620 x3537))
(assert (x4620 x2930))
(assert (x3601 x1612))
(assert (= x79 (or x1600 x2572)))
(assert (= 75483562 (x4681 (x1116 75483562))))
(assert (= x404 (x4681 (x2758 x404))))
(assert (= (=> (and (= x4298 x41) (= x2540 x4623)) x416) x2526))
(assert (x2318 x84))
(assert (= (=> (and (and (= (> x185 x4313) x4395) (= x2152 (x4914 x1607)) (= x1230 (x4810 (x2758 x1790) (x1116 159) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4357) (<= 0 x3629) (= (x1008 x4628 2) x1607) (= x107 (x4810 (x2758 x3255) x1230 0)) (= (x3963 x107) x4357) (= (x2022 1461501637330902918203684832716283019655932542975 x2695) x1435) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4313) (= x1790 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (= x185 (x4358 x892)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x185) (<= 0 x4357) (= (x1008 x107 1) x892) (<= 0 x185) (= (x4810 (x2758 x1435) (x1116 157) 0) x1284) (= (x4757 x3662) x3629) (<= x3629 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4810 (x2758 x4311) (x1116 156) 0) x1335) (= x2126 (x4810 (x2758 x3255) x1335 0)) (= x4311 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (= x4628 (x4810 (x2758 x3255) x1284 0)) (>= x4313 0) (>= x2152 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2152) (= x3662 (x1008 x2126 2))) (or (and (= 0 x603) (not x4395)) (and x4395 (= x603 x185)))) x3873) x3795))
(assert (x4620 x3293))
(assert (= (and (not x3551) x4277) x4950))
(assert (= (and x2473 x98) x1582))
(assert (= (=> (and (= x4033 x774) (= x4320 x4071)) x691) x1973))
(assert (x4620 x685))
(assert (x4620 x2882))
(assert (x4620 x3569))
(assert (x4620 x2352))
(assert (x4620 x2608))
(assert (x4620 x2365))
(assert (= (and x4318 x4467) x336))
(assert (x4620 x2337))
(assert (=> (>= 10000 x365) (= (x1116 x365) (x2758 x365))))
(assert (x4640 x3337 x4836))
(assert (x4620 x3167))
(assert (x4620 x2140))
(assert (= (and x868 x2654) x1767))
(assert (x4620 x1175))
(assert (= (and x3348 (not x1239)) x751))
(assert (x4620 x629))
(assert (x4620 x486))
(assert (x4620 x3813))
(assert (= x1949 (and x3585 x2949)))
(assert (=> (<= x2096 10000) (= (x1116 x2096) (x2758 x2096))))
(assert (x4620 x1046))
(assert (= (and (not x879) x1955) x2427))
(assert (= x3810 (and x274 x167)))
(assert (x4620 x1584))
(assert (x4620 x154))
(assert (x2933 x2832 x2227 x1223 x3888))
(assert (= (and x4177 x523) x3319))
(assert (= x4034 (or x4595 x354 x1690)))
(assert (x2318 x787))
(assert (= (and x2361 x587) x595))
(assert (x3063 x847))
(assert (= (or x4138 x4400 x2232 x1159 x384 x3021) x538))
(assert (x4620 x2085))
(assert (x4620 x4837))
(assert (= x4229 (and (not x223) x1540)))
(assert (x4620 x2203))
(assert (x4620 x906))
(assert (x4640 x1565 x2997))
(assert (=> (<= x2301 10000) (= (x2758 x2301) (x1116 x2301))))
(assert (x4620 x4753))
(assert (x4620 x3268))
(assert (x4620 x3708))
(assert (= (or x1332 x2723) x2437))
(assert (= (+ 1 (x4681 x757)) (x4681 (x1008 x757 1))))
(assert (= x2945 (x4681 (x2758 x2945))))
(assert (x4620 x1382))
(assert (= (or x2064 x1772) x552))
(assert (x4620 x125))
(assert (x2318 x2077))
(assert (= (and x3286 x3710) x3156))
(assert (= x2922 (and x4819 x3271)))
(assert (= (or x4098 x4781) x2722))
(assert (= x1836 (and (not x3476) x3905)))
(assert (= x1353 (x4681 (x2758 x1353))))
(assert (= (x4681 (x1008 x78 1)) (+ 1 (x4681 x78))))
(assert (= (x4681 (x1008 x1746 2)) (+ (x4681 x1746) 2)))
(assert (=> (>= 10000 x787) (= (x2758 x787) (x1116 x787))))
(assert (= (+ 2 (x4681 x1452)) (x4681 (x1008 x1452 2))))
(assert (= x459 (and x3014 (not x3395))))
(assert (x4620 x1576))
(assert (x3601 x104))
(assert (x4620 x4220))
(assert (x4620 x4547))
(assert (x4620 x1300))
(assert (= (and x2565 x4251) x1961))
(assert (x4620 x2494))
(assert (= (+ 1 (x4681 x2621)) (x4681 (x1008 x2621 1))))
(assert (= 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x4681 (x1116 76833804140862540057647519496925185374644862498684814347804924264468996685824))))
(assert (= (x4681 (x2758 x2362)) x2362))
(assert (= (or x4263 x1491) x2064))
(assert (x4620 x2390))
(assert (x4620 x4785))
(assert (x2318 x820))
(assert (x4620 x808))
(assert (x4620 x2886))
(assert (= (x1116 77053863734975077137548456399560439977311721439096602559221323163398253314048) (x2758 77053863734975077137548456399560439977311721439096602559221323163398253314048)))
(assert (x4620 x1671))
(assert (x4620 x2796))
(assert (x4620 x1799))
(assert (=> (<= x4639 10000) (= (x1116 x4639) (x2758 x4639))))
(assert (= x1750 (and x2398 x1504)))
(assert (x4620 x4831))
(assert (= (and x4808 (not x3115)) x273))
(assert (= (and (not x4772) x122) x3544))
(assert (x4620 x3052))
(assert (x4620 x4910))
(assert (= (or x1778 x177) x27))
(assert (= x4312 (or x2406 x1651)))
(assert (x4620 x4243))
(assert (= (and x38 x1581) x3057))
(assert (= (x2758 2217467699) (x1116 2217467699)))
(assert (= (and x934 (not x3581)) x3921))
(assert (= (and x3913 x3956) x4053))
(assert (= (x4681 (x1116 4238056678808933066457772256406219440718756300954938350892797929791311314944)) 4238056678808933066457772256406219440718756300954938350892797929791311314944))
(assert (= (x4681 (x2758 x895)) x895))
(assert (= (and x2197 x1703) x1109))
(assert (x4244 x2562))
(assert (x4620 x875))
(assert (=> (>= 10000 x3935) (= (x2758 x3935) (x1116 x3935))))
(assert (= x3295 (and x569 (not x3700))))
(assert (= (and x2633 x1131) x2871))
(assert (= (+ 2 (x4681 x619)) (x4681 (x1008 x619 2))))
(assert (= x2312 (or x648 x4109 x3225 x3023 x210 x1660)))
(assert (= (and x408 x1757) x4081))
(assert (= x4266 (and x2898 (not x4303))))
(assert (x4620 x2000))
(assert (= (and x1143 x1211) x3012))
(assert (= x4448 (=> (and (= x685 x2698) (= 0 x4115)) x4510)))
(assert (= (or x2340 x595 (and x1924 x795) x557 (and x467 x2652)) x4449))
(assert (x4620 x214))
(assert (x4620 x2647))
(assert (x4620 x3480))
(assert (= (and x3518 (not x496)) x303))
(assert (= (x4681 (x2758 x1413)) x1413))
(assert (= x1094 (x4681 (x2758 x1094))))
(assert (x4620 x1029))
(assert (= (and x2858 (not x4370)) x3096))
(assert (x4620 x1346))
(assert (=> (>= 10000 x3090) (= (x2758 x3090) (x1116 x3090))))
(assert (= (x4681 (x2758 x2950)) x2950))
(assert (=> (<= x2323 10000) (= (x2758 x2323) (x1116 x2323))))
(assert (x4620 x4071))
(assert (x4620 x4295))
(assert (x4620 x4226))
(assert (x4620 x4377))
(assert (= x1903 (and x4526 x1998)))
(assert (= (and x3231 x2090) x1024))
(assert (x4620 x4592))
(assert (= x2493 (x4681 (x2758 x2493))))
(assert (x4620 x4083))
(assert (x2318 x484))
(assert (x4620 x841))
(assert (x4620 x1562))
(assert (x4620 x492))
(assert (x4620 x1851))
(assert (x4620 x3182))
(assert (= (and x4728 x308) x2655))
(assert (x3867 x2153))
(assert (x4620 x3340))
(assert (x4620 x783))
(assert (= x1462 (and x2722 x1622)))
(assert (x4620 x2186))
(assert (x2538 x2810))
(assert (= x926 (and x3681 x2080)))
(assert (= x2880 (=> (and (= x668 x1075) (= x2549 x1012)) x1308)))
(assert (x4620 x4629))
(assert (x4620 x658))
(assert (= x2966 (and x872 x1249)))
(assert (= (and x4268 x1768) x3377))
(assert (x4620 x4759))
(assert (= x276 (and (not x3897) x1295)))
(assert (x4620 x3099))
(assert (x4620 x3196))
(assert (= (and x3623 x1126) x632))
(assert (= x3919 (or (and (not x4760) x4368) x4382)))
(assert (x4620 x2757))
(assert (x431 x2435 x390))
(assert (x4620 x3920))
(assert (= x1540 (or x127 x3002)))
(assert (x2318 x4466))
(assert (= (+ 2 (x4681 x2126)) (x4681 (x1008 x2126 2))))
(assert (x4620 x4883))
(assert (x4620 x4855))
(assert (=> (>= 10000 x799) (= (x1116 x799) (x2758 x799))))
(assert (x4620 x2611))
(assert (x3257 x3888 (- x3691 x3888)))
(assert (x4244 x1626))
(assert (=> (>= 10000 x1896) (= (x2758 x1896) (x1116 x1896))))
(assert (= x4252 (and x3714 x336)))
(assert (= x2415 (and x621 x2927)))
(assert (= (and x2280 (not x4474)) x1887))
(assert (x4620 x3703))
(assert (x4620 x3933))
(assert (= (and x926 x2998) x4272))
(assert (= x1388 (and x1495 x1437)))
(assert (= x76 (x4681 (x2758 x76))))
(assert (x3867 x4537))
(assert (x4620 x439))
(assert (= x2222 (and (not x1361) x3666)))
(assert (= x1620 (and x1859 x2786)))
(assert (= x274 (or (and (not x3594) x2263) x1079)))
(assert (x4620 x357))
(assert (= (or x2507 x2312) x3036))
(assert (= (x4681 (x2758 x857)) x857))
(assert (x3867 x1570))
(assert (x4620 x4434))
(assert (x4620 x639))
(assert (= (and x4533 (not x4642)) x2793))
(assert (x4620 x1146))
(assert (x4620 x2193))
(assert (= x4581 (and x3877 x1784)))
(assert (x4620 x1995))
(assert (x3257 x1223 (- x3888 x3691)))
(assert (= (and x2662 x676) x2459))
(assert (= x530 (and x2459 (not x881))))
(assert (x4620 x4002))
(assert (x4620 x4815))
(assert (x4620 x4339))
(assert (x4620 x4301))
(assert (and (and (= (- (* (- x3510 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3510 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3510 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3510) (- (* x3510 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x3510))) (= (x1807 1000000000000000000 (- x3510 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x3510 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x3510) (x2296 1000000000000000000 x3510) (= (x1807 1000000000000000000 x3510) (* x3510 1000000000000000000)) (x4064 1000000000000000000 x3510) (x218 1000000000000000000 x3510) (x1213 1000000000000000000 x3510)))
(assert (= x394 (or x813 x2994)))
(assert (x4620 x1726))
(assert (x4620 x1016))
(assert (x4620 x4618))
(assert (= (+ (x4681 x168) 2) (x4681 (x1008 x168 2))))
(assert (x4620 x2123))
(assert (x4620 x1223))
(assert (= (+ (x4681 x3139) 1) (x4681 (x1008 x3139 1))))
(assert (x4620 x829))
(assert (x2318 x2637))
(assert (x4620 x2217))
(assert (x4620 x4639))
(assert (= x3613 (and x4336 (not x687))))
(assert (and (and (= (- (* (- x4909 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x4909 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x4909 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x4909) (- (* x4909 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4909))) (= (x1807 1000000000000000000 (- x4909 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x4909 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x4909) (x2296 1000000000000000000 x4909) (= (x1807 1000000000000000000 x4909) (* x4909 1000000000000000000)) (x4064 1000000000000000000 x4909) (x218 1000000000000000000 x4909) (x1213 1000000000000000000 x4909)))
(assert (x3257 x3691 (- x3888 x2832)))
(assert (= x2858 (and x2878 x3400)))
(assert (= (=> (and (and (= x2778 (x2022 1461501637330902918203684832716283019655932542975 x2695)) (= x4836 (x4306 x3790)) (= (< 0 x1659) x3269) (= (x2066 (+ x1009 x312)) x3607) (= (x2022 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2324) x312) (<= 0 x4836) (= x2324 (x2066 (+ x2390 31))) (not (= x1534 0)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2390) (and (= (<= x2390 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2390 32)))) (= (x4810 (x2758 x2778) (x1116 165) 0) x3790) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4836) (= (x677 x1009) x3888)) (or (and x3269 (and (>= 1461501637330902918203684832716283019655932542975 x2465) (= x2465 (x3679 x4329)) (< x2465 1461501637330902918203684832716283019655932542976) (= (not x3869) x408) (= (= 0 x2465) x3869) (= (x4810 (x2758 x4373) (x1116 157) 0) x3126) (>= x2465 0) (= x2465 x3255) (= x4329 (x1008 x3126 1)) (= x4373 (x2022 1461501637330902918203684832716283019655932542975 x2695)))) (and (not x3269) (and (= 0 x3255) (= x408 x3269))))) x4845) x2215))
(assert (x3867 x526))
(assert (x4640 x2003 x4836))
(assert (x2933 x3888 x1223 x3691 x3888))
(assert (= x1788 (x4681 (x2758 x1788))))
(assert (= (x4681 (x2758 x2352)) x2352))
(assert (= (and x4068 x3416) x4773))
(assert (= x1883 (and x2438 (not x4067))))
(assert (x4620 x4943))
(assert (= x2249 (or x3104 x4406 x4764 x2278 x1675 x3632 x4881 x2528 x3562)))
(assert (= x412 (and x4913 (not x2659))))
(assert (= x1040 (and x1028 x3972)))
(assert (= x2580 (and x346 x1209)))
(assert (= x1402 (=> (= x3070 (= x774 0)) (and (=> (and (= x3019 x4387) x3070) x2699) (=> (and (not x3070) (= (or (> x4071 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x4071 32) (= (<= x4071 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x4303)) (and (=> (and (= x3019 x4387) x4303) x2699) (=> (and (not x4303) (and (= x2294 32) (= x2238 x4387) (= 1 x3660))) x4223)))))))
(assert (= x1442 (and x3030 (not x2267))))
(assert (x4620 x2775))
(assert (x2318 x710))
(assert (= x3306 (x4681 (x2758 x3306))))
(assert (x4620 x4040))
(assert (= (x4681 (x2758 x1896)) x1896))
(assert (x4620 x1183))
(assert (x4620 x2077))
(assert (= x2560 (and (=> (and x4324 (and (and (= (x4810 (x2758 x2362) x2336 0) x2585) (= x4392 (x3095 x4265)) (<= x4392 1461501637330902918203684832716283019655932542975) (< x4392 1461501637330902918203684832716283019655932542976) (= x3465 (ite (> x882 1) (not (= x4392 0)) (> x882 1))) (<= 0 x4392) (= x4265 (x1008 x2585 1))) (or (and (and (<= 0 x1749) (= (x4810 (x2758 x4392) x2336 0) x511) (= (x1008 x511 2) x2291) (= (x278 x2291) x1749) (= x329 (< x1749 x4827)) (= (not x329) x507) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1749)) x3465) (and (not x3465) (= x507 x3465))))) x3203) (=> (and (and (= x1990 x2362) (= x1650 0)) (not x4324)) x4170))))
(assert (= (or x1785 (and x4538 x763) x2900 (and x798 x623) (and x3737 x1261) (and x4011 (not x2172)) (and x1587 x4413) (and x917 (not x4159)) x2803) x4217))
(assert (x2318 x86))
(assert (= x93 (=> (and (= x806 x2299) (= x4190 0)) x4408)))
(assert (= (and x4376 (not x2089)) x1771))
(assert (x4620 x3451))
(assert (= (+ 1 (x4681 x4491)) (x4681 (x1008 x4491 1))))
(assert (x4620 x4732))
(assert (x4620 x1243))
(assert (= (=> (and (= x1672 x4330) (= 0 x4622)) x3422) x2948))
(assert (= x570 (and x2935 x4097)))
(assert (x4620 x207))
(assert (x4620 x310))
(assert (= (or x515 x2053) x4057))
(assert (=> (>= 10000 x67) (= (x1116 x67) (x2758 x67))))
(assert (= (and x1244 x1591) x2952))
(assert (x2318 x4655))
(assert (= (and x3201 x3499) x3574))
(assert (= x2497 (and (not x1007) x962)))
(assert (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x4681 (x1116 20853193852723734048814770637610870652489083209607696777694672748161462697984))))
(assert (x4620 x4563))
(assert (x4620 x1043))
(assert (= x1463 (and (not x2642) x2437)))
(assert (x4620 x2247))
(assert (= false x1632))
(assert (= (=> (and (= (= x4908 0) x407) (or (not x407) x407)) x4432) x60))
(assert (= (and x4360 (not x29)) x4334))
(assert (= x3450 (and x933 x2204)))
(assert (x4620 x4838))
(assert (x4620 x753))
(assert (x4620 x2029))
(assert (= (x4681 (x1116 35417553099779373699389112480655434059402432070290151981503827724506945814528)) 35417553099779373699389112480655434059402432070290151981503827724506945814528))
(assert (x4620 x4631))
(assert (x4620 x1012))
(assert (x4244 x1933))
(assert (= x938 (x4681 (x2758 x938))))
(assert (= x3538 (and x4352 x1189)))
(assert (x4620 x3420))
(assert (x4620 x3107))
(assert (= (and (not x3444) x1836) x2917))
(assert (= (+ (x4681 x1474) 2) (x4681 (x1008 x1474 2))))
(assert (= (or x3329 (and x4341 x1097) (and x4772 x122) (and x4961 (not x2700)) (and x984 (not x1065)) x1717 (and x2019 x4703) (and x4488 x4502) x4670) x534))
(assert (x4620 x1824))
(assert (x4620 x3171))
(assert (x4620 x2815))
(assert (x4620 x4231))
(assert (= x575 (and x428 x2006)))
(assert (and (x1645 x931 32) (x588 x931 32) (x4906 x931 32) (=> (> 32 0) (= (+ (* 32 (x2656 x931 32)) (x3657 x931 32)) x931))))
(assert (= (and (not x1571) x3959) x3286))
(assert (x4620 x4568))
(assert (x4620 x451))
(assert (= (x4681 (x2758 x3097)) x3097))
(assert (x4620 x2160))
(assert (x2538 x2832))
(assert (= x4212 (or x4016 x1130 x1017 x1903 x4821 x2793)))
(assert (x4620 x46))
(assert (= x985 (or x3587 x33)))
(assert (x4620 x1780))
(assert (x2318 x893))
(assert (x4620 x2460))
(assert (x4620 x3194))
(assert (= x1748 (and (not x989) x3689)))
(assert (x4620 x4160))
(assert (=> (<= x2930 10000) (= (x1116 x2930) (x2758 x2930))))
(assert (= (x2758 75483562) (x1116 75483562)))
(assert (= (and x2773 x3446) x1847))
(assert (x4620 x163))
(assert (= x2188 (and x2703 (not x420))))
(assert (x4620 x243))
(assert (x4620 x1617))
(assert (x2933 x3888 x3691 x1223 x3888))
(assert (= (and (not x2429) x2553) x2273))
(assert (and (x1645 x3025 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x588 x3025 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4906 x3025 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x2656 x3025 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x3657 x3025 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x3025))))
(assert (= (and x1784 (not x3877)) x2111))
(assert (x4620 x777))
(assert (x4620 x2448))
(assert (= (and x16 x2347) x1558))
(assert (= x4677 (and x2777 (not x1826))))
(assert (x4620 x4879))
(assert (x4620 x2078))
(assert (x4620 x567))
(assert (x2318 x807))
(assert (x2538 1000000000000000000))
(assert (x3867 x1135))
(assert (x4620 x2132))
(assert (= (+ (x4681 x1173) 2) (x4681 (x1008 x1173 2))))
(assert (x4620 x4154))
(assert (x4620 x2234))
(assert (x4620 x1266))
(assert (x2318 x3864))
(assert (x431 x1599 x4863))
(assert (= (and (not x362) x4080) x4193))
(assert (= x821 (and (not x4820) x3538)))
(assert (x4244 x4659))
(assert (= (and (not x2849) x4462) x3825))
(assert (x4620 x4135))
(assert (= (=> (and (= x734 x2547) (= x2141 0)) x3236) x4871))
(assert (x4620 x1804))
(assert (x4620 x1633))
(assert (x4620 x465))
(assert (= (x4681 (x2758 x4434)) x4434))
(assert (x4640 x2360 x3888))
(assert (x4620 x3456))
(assert (= (x4681 (x2758 x4392)) x4392))
(assert (= x4783 (=> (= x2936 (> x2965 0)) (and (=> (and (not x2936) (= x3003 x4710)) x948) (=> (and (and (or (and x3150 (and (= x4958 (x4810 (x2758 x3970) x1335 0)) (<= x4452 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2395 (< x4452 x2965)) (= (not x2395) x1361) (>= x4452 0) (= (x1181 x1755) x4452) (= x1755 (x1008 x4958 2)))) (and (not x3150) (= x3150 x1361))) (and (>= x910 0) (>= x3970 0) (<= x910 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= x3970 1461501637330902918203684832716283019655932542975) (= (x1181 x1380) x910) (= 0 x910) (= (x1008 x1335 1) x1774) (> 1461501637330902918203684832716283019655932542976 x3970) (= x3970 (x4704 x1774)) (not (= x3255 0)) (= (x1008 x551 2) x1380) (<= 0 x882) (= x3150 (ite (> x882 0) (not (= x3970 0)) (< 0 x882))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x882) (= (x4810 (x2758 x3255) x1335 0) x551))) x2936) x4692)))))
(assert (= x1341 (and x4462 x2849)))
(assert (x4620 x3039))
(assert (x4620 x1725))
(assert (and (x2026 x1485 1000000000000000000) (x2201 x1485 1000000000000000000) (x2891 x1485 1000000000000000000) (=> (and (< 0 x1485) (< 0 1000000000000000000)) (and (< (- x1485 1000000000000000000) (* (x2656 x1485 1000000000000000000) 1000000000000000000)) (<= (* (x2656 x1485 1000000000000000000) 1000000000000000000) x1485))) (x3017 x1485 1000000000000000000)))
(assert (= (and x714 x240) x91))
(assert (= x2323 (x4681 (x2758 x2323))))
(assert (x2318 x1893))
(assert (= (and x4801 x224) x3))
(assert (= (+ (x4681 x4187) 1) (x4681 (x1008 x4187 1))))
(assert (x4620 x461))
(assert (x4620 x3144))
(assert (= (x4681 (x1008 x2302 1)) (+ (x4681 x2302) 1)))
(assert (x4620 x148))
(assert (= x2470 (and x989 x3689)))
(assert (and (and (= (- (* (- x4002 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x4002 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x4002 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x1807 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x4002) (- (* x4002 1000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4002))) (= (x1807 1000000000000000000 (- x4002 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x4002 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x3684 1000000000000000000 x4002) (x2296 1000000000000000000 x4002) (= (x1807 1000000000000000000 x4002) (* x4002 1000000000000000000)) (x4064 1000000000000000000 x4002) (x218 1000000000000000000 x4002) (x1213 1000000000000000000 x4002)))
(assert (= (or x3173 x228) x1296))
(assert (x4620 x2909))
(assert (= (and x1597 (not x1055)) x1601))
(assert (x3601 x3025))
(assert (x4620 x4758))
(assert (x4620 x300))
(assert (x4620 x4330))
(assert (x4620 x2718))
(assert (= x4856 (and (not x3560) x508)))
(assert (= (x4681 (x1008 x4485 1)) (+ 1 (x4681 x4485))))
(assert (= x3820 (x4681 (x2758 x3820))))
(assert (x4620 x3964))
(assert (x4620 x3642))
(assert (= (x4681 (x1008 x3335 1)) (+ 1 (x4681 x3335))))
(assert (x3251 x4778))
(assert (= (x4681 (x2758 x940)) x940))
(assert (x4620 x4869))
(assert (= (and x193 (not x2765)) x1198))
(assert (x4620 x3500))
(assert (x2318 x4548))
(assert (= (and (not x795) x1924) x1839))
(assert (= (+ (x4681 x107) 1) (x4681 (x1008 x107 1))))
(assert (x4620 x4771))
(assert (x4620 x4345))
(assert (x4620 x4472))
(assert (x4620 x3648))
(assert (= x2619 (and (not x3465) x4524)))
(assert (= (and x141 x2704) x3429))
(assert (= (or x3178 x1268 x978 x3770 x2139 x1204 x3834 x4564 x2954) x1114))
(assert (=> (>= 10000 x1790) (= (x2758 x1790) (x1116 x1790))))
(assert (x4620 x2370))
(assert (= (and x1120 x4232) x3507))
(assert (= (=> (and (= x3806 x774) (= x4948 x4071)) x691) x3102))
(assert (= x768 (x4681 (x2758 x768))))
(assert (x4620 x3801))
(assert (x4620 x792))
(assert (x4620 x572))
(assert (= (and x1250 x863) x2694))
(assert (x4620 x3068))
(assert (= (and (not x4467) x4318) x1772))
(assert (= (x4681 (x1008 x2953 1)) (+ 1 (x4681 x2953))))
(assert (x157 x3888 x1223 x2832 x2227))
(assert (= x2610 (and x2730 x3855)))
(assert (x4620 x3084))
(assert (= (and x3115 x4808) x4007))
(assert (= x637 (or x4252 x4774)))
(assert (x4244 x750))
(assert (x2318 x102))
(assert (= (and (not x3788) x952) x4248))
(assert (x4620 x3497))
(assert (=> (>= 10000 x3864) (= (x1116 x3864) (x2758 x3864))))
(assert (x4620 x2733))
(assert (= x2802 (and x3584 x2202)))
(assert (x4620 x1323))
(assert (x4620 x4546))
(assert (= x4407 (=> (= x2642 (= x1725 x173)) (and (=> x2642 x1881) (=> (and (not x2642) (= (> x173 0) x1697)) (and (=> (and x1697 (and (and (>= x221 0) (= (x1008 x4491 1) x1882) (> 1461501637330902918203684832716283019655932542976 x221) (< x2428 1461501637330902918203684832716283019655932542976) (<= 0 x2717) (not (= 0 x2717)) (= (= 0 x2428) x3330) (>= 1461501637330902918203684832716283019655932542975 x2428) (= x4379 (x1008 x1882 1)) (= x4491 (x4810 (x2758 x2272) x4246 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2717) (<= 0 x2428) (= (x4507 x4491) x2428) (= x221 (x3971 x1882)) (= (x858 x4379) x2717) (<= x221 1461501637330902918203684832716283019655932542975)) (or (and (not x3330) (and (= x562 (x4810 (x2758 x2428) x4246 0)) (= (x1008 x562 1) x920))) (and x3330 (= x2490 (x1008 x4246 1)))))) x4162) (=> (not x1697) x1754)))))))
(assert (x4620 x929))
(assert (x2318 x3403))
(assert (= x3976 (x4681 (x2758 x3976))))
(assert (x4620 x1497))
(assert (= (x1116 547091486) (x2758 547091486)))
(assert (x4620 x4228))
(assert (= (or x4425 x1558) x2836))
(assert (x2318 x1559))
(assert (x3867 x3025))
(assert (= x4353 (and x1716 (not x1355))))
(assert (= (or (and (not x1683) x4776) x1310) x3208))
(assert (= x4466 (x4681 (x2758 x4466))))
(assert (= x3173 (and x3827 (not x1811))))
(assert (= (=> (and (= x2132 x2665) (= x3006 x4335)) x3328) x4542))
(assert (x4620 x4864))
(assert (= (and (not x3005) x769) x4221))
(assert (= x2236 (and x3604 x4617)))
(assert (x2318 x1788))
(assert (x4620 x4423))
(assert (x4620 x4149))
(assert (x4620 x3600))
(check-sat)
(exit)
