(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x442 0)) (((x56 (x420 Int)) (x284 (x18 x442) (x375 x442) (x240 x442) (x429 x442) (x244 Int)) (x9 (x301 x442) (x298 Int)) (x414 (x207 x442) (x106 x442) (x345 Int)))))
(declare-fun x306 () Int)
(declare-fun x191 () Int)
(declare-fun x12 () Int)
(declare-fun x287 () Int)
(declare-fun x19 () Int)
(declare-fun x164 () Bool)
(declare-fun x31 () Int)
(declare-fun x180 () Bool)
(declare-fun x251 () Bool)
(declare-fun x103 () Int)
(declare-fun x413 () Int)
(declare-fun x131 () Bool)
(declare-fun x110 (Int Int) Int)
(declare-fun x478 () Int)
(declare-fun x140 () Int)
(declare-fun x234 () Bool)
(declare-fun x129 () Int)
(declare-fun x316 () Int)
(declare-fun x421 () Int)
(declare-fun x174 () Int)
(declare-fun x202 () Bool)
(declare-fun x10 () Bool)
(declare-fun x360 () Int)
(declare-fun x380 () Int)
(declare-fun x229 () Int)
(declare-fun x433 () Int)
(declare-fun x194 () Int)
(declare-fun x283 () Int)
(declare-fun x410 () Bool)
(declare-fun x273 (Int Int) Int)
(declare-fun x321 () Bool)
(declare-fun x264 () Int)
(declare-fun x96 () Int)
(declare-fun x432 () Int)
(declare-fun x200 () Int)
(declare-fun x361 () Int)
(declare-fun x346 () Int)
(declare-fun x436 (x442) Int)
(declare-fun x188 () Int)
(declare-fun x329 () Int)
(declare-fun x277 () Int)
(declare-fun x311 () Int)
(declare-fun x136 () Int)
(declare-fun x220 () Int)
(declare-fun x230 () Int)
(declare-fun x78 () Int)
(declare-fun x441 (Int) Int)
(declare-fun x384 () Int)
(declare-fun x309 () Int)
(declare-fun x63 () Int)
(declare-fun x317 () Int)
(declare-fun x356 () Int)
(declare-fun x326 () Bool)
(declare-fun x460 () Bool)
(declare-fun x149 () Int)
(declare-fun x99 () Bool)
(declare-fun x448 () Int)
(declare-fun x274 () Int)
(declare-fun x132 () Bool)
(declare-fun x111 () Int)
(declare-fun x376 () Bool)
(declare-fun x225 () Bool)
(declare-fun x369 () Int)
(declare-fun x269 () Int)
(declare-fun x344 (Int Int) Int)
(declare-fun x271 () Int)
(declare-fun x328 () Bool)
(declare-fun x476 () Int)
(declare-fun x76 () Int)
(declare-fun x467 () Bool)
(declare-fun x150 () Bool)
(declare-fun x27 (Int) Int)
(declare-fun x104 () Int)
(declare-fun x60 () Int)
(declare-fun x219 () Int)
(declare-fun x447 () Int)
(declare-fun x339 () Bool)
(declare-fun x472 () x442)
(declare-fun x250 () Int)
(declare-fun x227 () Int)
(declare-fun x69 () Int)
(declare-fun x378 () Int)
(declare-fun x24 (x442) Int)
(declare-fun x5 () Int)
(declare-fun x459 () Int)
(declare-fun x419 () Int)
(declare-fun x304 () Bool)
(declare-fun x55 () Int)
(declare-fun x303 () Int)
(declare-fun x118 (x442) Int)
(declare-fun x270 () Int)
(declare-fun x357 () Int)
(declare-fun x153 () Int)
(declare-fun x33 () Int)
(declare-fun x293 () Bool)
(declare-fun x272 () Bool)
(declare-fun x137 () Int)
(declare-fun x151 () Int)
(declare-fun x291 () Int)
(declare-fun x248 () Int)
(declare-fun x181 () Bool)
(declare-fun x427 () Int)
(declare-fun x289 () Int)
(declare-fun x423 () Int)
(declare-fun x1 () Int)
(declare-fun x114 () Int)
(declare-fun x338 () Int)
(declare-fun x409 () Int)
(declare-fun x39 () Int)
(declare-fun x351 () Int)
(declare-fun x166 () Int)
(declare-fun x267 () Int)
(declare-fun x48 () Int)
(declare-fun x302 () Bool)
(declare-fun x193 () Bool)
(declare-fun x154 () Int)
(declare-fun x275 () Int)
(declare-fun x394 () Int)
(declare-fun x171 () Int)
(declare-fun x405 () Bool)
(declare-fun x142 () Int)
(declare-fun x146 () Int)
(declare-fun x214 () Bool)
(declare-fun x389 () Bool)
(declare-fun x334 () Bool)
(declare-fun x469 () Bool)
(declare-fun x213 () Bool)
(declare-fun x100 () Int)
(declare-fun x426 () Int)
(declare-fun x418 () Int)
(declare-fun x141 () Int)
(declare-fun x318 () Int)
(declare-fun x358 () Int)
(declare-fun x109 () Int)
(declare-fun x14 () Bool)
(declare-fun x255 () Bool)
(declare-fun x352 () Bool)
(declare-fun x38 () Int)
(declare-fun x80 () Int)
(declare-fun x290 () Int)
(declare-fun x119 () Int)
(declare-fun x391 () Int)
(declare-fun x347 (Int Int) Int)
(declare-fun x458 () Int)
(declare-fun x30 () Int)
(declare-fun x477 () Int)
(declare-fun x108 () Int)
(declare-fun x437 () Int)
(declare-fun x226 () Int)
(declare-fun x308 () Bool)
(declare-fun x156 () Int)
(declare-fun x481 () Int)
(declare-fun x232 () Int)
(declare-fun x157 () Int)
(declare-fun x65 () Int)
(declare-fun x239 () Int)
(declare-fun x64 () Int)
(declare-fun x398 () Int)
(declare-fun x82 () Int)
(declare-fun x17 () Int)
(declare-fun x393 () Int)
(declare-fun x325 () Bool)
(declare-fun x158 () Bool)
(declare-fun x208 () Int)
(declare-fun x471 () Int)
(declare-fun x49 (Int Int) Int)
(declare-fun x8 () Int)
(declare-fun x7 () Bool)
(declare-fun x81 () Int)
(declare-fun x212 () Int)
(declare-fun x155 () Int)
(declare-fun x184 () Int)
(declare-fun x126 () Int)
(declare-fun x44 () Int)
(declare-fun x237 () Int)
(declare-fun x13 () Int)
(declare-fun x25 () Int)
(declare-fun x463 () Bool)
(declare-fun x117 () x442)
(declare-fun x115 () Int)
(declare-fun x330 () Int)
(declare-fun x315 () Int)
(declare-fun x36 () Bool)
(declare-fun x238 () Bool)
(declare-fun x453 () Int)
(declare-fun x288 () Bool)
(declare-fun x395 () Bool)
(declare-fun x143 () Int)
(declare-fun x23 () Int)
(declare-fun x85 () Int)
(declare-fun x379 () Bool)
(declare-fun x260 () Bool)
(declare-fun x138 () Int)
(declare-fun x204 () Bool)
(declare-fun x297 () Int)
(declare-fun x430 () Int)
(declare-fun x94 (Int Int) Int)
(declare-fun x120 () Int)
(declare-fun x32 () Int)
(declare-fun x196 () Int)
(declare-fun x313 () Int)
(declare-fun x57 () Int)
(declare-fun x246 () Int)
(declare-fun x314 () Bool)
(declare-fun x176 (Int) x442)
(declare-fun x445 () Int)
(declare-fun x457 () Int)
(declare-fun x401 () Int)
(declare-fun x406 () Int)
(declare-fun x61 () Int)
(declare-fun x209 () Int)
(declare-fun x133 () Int)
(declare-fun x386 () Bool)
(declare-fun x160 () Int)
(declare-fun x134 () Int)
(declare-fun x79 () Bool)
(declare-fun x73 () Bool)
(declare-fun x223 () Int)
(declare-fun x402 () Int)
(declare-fun x59 () Int)
(declare-fun x199 () Bool)
(declare-fun x40 () Bool)
(declare-fun x84 () Bool)
(declare-fun x373 () Int)
(declare-fun x217 () Int)
(declare-fun x41 () Int)
(declare-fun x261 () Int)
(declare-fun x107 () Int)
(declare-fun x265 () Int)
(declare-fun x342 () Bool)
(declare-fun x443 () Int)
(declare-fun x407 () Bool)
(declare-fun x454 () Int)
(declare-fun x6 () Int)
(declare-fun x364 () Bool)
(declare-fun x52 () Int)
(declare-fun x128 () Bool)
(declare-fun x29 () Int)
(declare-fun x162 () Int)
(declare-fun x203 () Int)
(declare-fun x101 () Int)
(declare-fun x466 () Int)
(declare-fun x400 () Int)
(declare-fun x300 () Int)
(declare-fun x178 () Bool)
(declare-fun x46 () Int)
(declare-fun x322 () Int)
(declare-fun x371 () Int)
(declare-fun x403 () Bool)
(declare-fun x185 () Bool)
(declare-fun x253 () Bool)
(declare-fun x35 () Int)
(declare-fun x349 () Int)
(declare-fun x299 () Int)
(declare-fun x333 () Int)
(declare-fun x192 () Int)
(declare-fun x387 () Bool)
(declare-fun x144 () Int)
(declare-fun x77 () Bool)
(declare-fun x279 () Bool)
(declare-fun x320 () Int)
(declare-fun x231 () Int)
(declare-fun x205 () Bool)
(declare-fun x58 () Int)
(declare-fun x370 () Bool)
(declare-fun x97 () Bool)
(declare-fun x262 () Int)
(declare-fun x222 () Int)
(declare-fun x348 () Int)
(declare-fun x473 () Int)
(declare-fun x98 () Bool)
(declare-fun x381 () x442)
(declare-fun x83 () Int)
(declare-fun x461 () x442)
(declare-fun x444 () Int)
(declare-fun x278 () Bool)
(declare-fun x449 () Int)
(declare-fun x396 () Int)
(declare-fun x327 () Int)
(declare-fun x186 () Int)
(declare-fun x281 () Int)
(declare-fun x341 () Bool)
(declare-fun x475 () Bool)
(declare-fun x465 () Bool)
(declare-fun x439 () Bool)
(declare-fun x417 () Int)
(declare-fun x195 () Int)
(declare-fun x340 () Bool)
(declare-fun x245 () Int)
(declare-fun x50 () Bool)
(declare-fun x67 () Bool)
(declare-fun x365 () Int)
(declare-fun x474 () Int)
(declare-fun x294 () Int)
(declare-fun x183 () Int)
(declare-fun x87 () Int)
(declare-fun x266 () x442)
(declare-fun x412 () Bool)
(declare-fun x86 () Int)
(declare-fun x377 () Int)
(declare-fun x2 () Int)
(declare-fun x390 () Int)
(declare-fun x374 () Int)
(declare-fun x372 () Int)
(declare-fun x482 () Int)
(declare-fun x446 () Int)
(declare-fun x268 () Int)
(declare-fun x201 (Int) Int)
(declare-fun x324 () Int)
(declare-fun x416 () Bool)
(declare-fun x165 () Int)
(declare-fun x167 () Int)
(declare-fun x456 () Int)
(declare-fun x415 () Bool)
(declare-fun x70 () Int)
(declare-fun x211 (Int) Int)
(declare-fun x125 () Bool)
(declare-fun x247 () x442)
(declare-fun x91 () Int)
(declare-fun x95 () Bool)
(declare-fun x127 () Int)
(declare-fun x310 () Int)
(declare-fun x411 () Int)
(declare-fun x135 () Int)
(declare-fun x179 () Int)
(declare-fun x228 () Int)
(declare-fun x89 () Int)
(declare-fun x336 () Int)
(declare-fun x90 () Int)
(declare-fun x241 () Int)
(declare-fun x292 () Int)
(declare-fun x397 () Int)
(declare-fun x113 () Int)
(declare-fun x170 () Bool)
(declare-fun x130 () Int)
(declare-fun x263 () Int)
(declare-fun x256 () Bool)
(declare-fun x257 () Int)
(declare-fun x480 () Int)
(declare-fun x42 () Int)
(declare-fun x450 () Bool)
(declare-fun x37 () Int)
(declare-fun x438 () Int)
(declare-fun x16 () Int)
(declare-fun x343 () Int)
(declare-fun x163 () Int)
(declare-fun x88 () Int)
(declare-fun x282 () Int)
(declare-fun x198 () Int)
(declare-fun x62 () Int)
(declare-fun x259 () Bool)
(declare-fun x355 () Int)
(declare-fun x431 () Int)
(declare-fun x233 () Int)
(declare-fun x175 () Int)
(declare-fun x152 () Int)
(declare-fun x93 () Int)
(declare-fun x425 () Int)
(declare-fun x75 () Bool)
(declare-fun x210 () Bool)
(declare-fun x28 () Bool)
(declare-fun x187 () Int)
(declare-fun x122 () Bool)
(declare-fun x236 () Int)
(declare-fun x464 () Int)
(declare-fun x11 () Int)
(declare-fun x363 () Int)
(declare-fun x332 () Bool)
(declare-fun x399 () Int)
(declare-fun x168 () Int)
(declare-fun x252 () Int)
(declare-fun x147 () Int)
(declare-fun x483 () Bool)
(declare-fun x368 () Bool)
(declare-fun x221 () Bool)
(declare-fun x206 (x442) Int)
(declare-fun x47 () Int)
(declare-fun x148 () Int)
(declare-fun x385 () Int)
(declare-fun x285 () Int)
(declare-fun x468 () Bool)
(declare-fun x280 () Int)
(declare-fun x216 () Int)
(declare-fun x367 () Int)
(declare-fun x66 () Int)
(declare-fun x404 () Bool)
(declare-fun x112 () Bool)
(declare-fun x105 () Int)
(declare-fun x215 () Int)
(declare-fun x116 () Int)
(declare-fun x51 () Bool)
(declare-fun x479 () Int)
(define-fun x382 ((x442 x442) (x353 Int)) x442 (ite ((_ is x414) x442) (x414 (x207 x442) (x106 x442) (+ x353 (x345 x442))) (ite ((_ is x9) x442) (x9 (x301 x442) (+ (x298 x442) x353)) (ite ((_ is x284) x442) (x284 (x18 x442) (x375 x442) (x240 x442) (x429 x442) (+ x353 (x244 x442))) (x56 (+ (x420 x442) x353))))))
(define-fun x102 ((x392 Int)) Int (ite (and (<= 0 x392) (< x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x392 (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x258 ((x392 Int)) Int (ite (and (> 0 x392) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x392)) (+ x392 115792089237316195423570985008687907853269984665640564039457584007913129639936) x392))
(define-fun x74 ((x392 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x392) (<= 0 x392)) x392 (ite (and (>= x392 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< x392 231584178474632390847141970017375815706539969331281128078915168015826259279872)) (- x392 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (< x392 0) (>= x392 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x392 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x94 x392 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x177 ((x296 Int)) Bool (and (< x296 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x296)))
(define-fun x22 ((x296 Int) (x159 Int)) Bool (= (x347 x159 x296) (x347 x296 x159)))
(define-fun x428 ((x296 Int) (x159 Int)) Bool (and (=> (and (< 0 x159) (> 0 x296)) (> 0 (x347 x296 x159))) (=> (and (< x159 0) (< x296 0)) (> (x347 x296 x159) 0)) (=> (and (> 0 x159) (> x296 0)) (< (x347 x296 x159) 0)) (=> (and (< 0 x296) (> x159 0)) (< 0 (x347 x296 x159)))))
(define-fun x388 ((x296 Int) (x159 Int)) Bool (=> (and (> x296 0) (> x159 0)) (= (< (x347 x296 x159) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x159 (x110 (x74 (x347 x296 x159)) x296)))))
(define-fun x452 ((x296 Int) (x159 Int)) Bool (=> (and (not (= 0 x296)) (not (= 0 x159))) (and (= x296 (x110 (x347 x296 x159) x159)) (= x159 (x110 (x347 x296 x159) x296)))))
(define-fun x169 ((x296 Int) (x159 Int)) Bool (=> (and (> x159 0) (> x296 0)) (= (> (x347 x296 x159) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x159 (x110 115792089237316195423570985008687907853269984665640564039457584007913129639935 x296)))))
(define-fun x434 ((x296 Int) (x159 Int)) Bool (and (= (x74 (x347 (- x296 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x159 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x74 (x347 x296 x159))) (= (x74 (x347 x296 x159)) (x74 (x347 x296 (- x159 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x74 (x347 x296 x159)) (x74 (x347 (- x296 115792089237316195423570985008687907853269984665640564039457584007913129639936) x159)))))
(define-fun x337 ((x296 Int) (x159 Int)) Bool (and (=> (and (and (<= x296 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x296 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x159) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x159))) (= (>= (x110 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x159)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x296)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x347 (- x296 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x159 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (< 0 x159) (<= x159 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x296 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x296 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x347 (- x296 115792089237316195423570985008687907853269984665640564039457584007913129639936) x159)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x296) (x110 57896044618658097711785492504343953926634992332820282019728792003956564819968 x159)))) (=> (and (and (<= x159 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x159 0)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x296) (> x296 0))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x347 x296 x159)) (<= x296 (x110 57896044618658097711785492504343953926634992332820282019728792003956564819967 x159)))) (=> (and (and (< 0 x296) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x296)) (and (<= x159 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x159 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x110 57896044618658097711785492504343953926634992332820282019728792003956564819968 x296) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x159)) (>= (x347 x296 (- x159 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968))))))
(define-fun x161 ((x296 Int) (x159 Int)) Bool (and (x434 x296 x159) (x22 x296 x159) (x388 x296 x159) (x169 x296 x159) (x337 x296 x159) (x428 x296 x159) (x452 x296 x159)))
(define-fun x172 ((x296 Int)) Bool (and (= 0 (x347 0 x296)) (= 0 (x347 x296 0))))
(define-fun x319 ((x296 Int)) Bool (and (= x296 (x347 1 x296)) (= x296 (x347 x296 1))))
(define-fun x139 ((x296 Int)) Bool (and (x319 x296) (x172 x296)))
(define-fun x224 ((x296 Int) (x159 Int)) Bool (=> (and (> x159 0) (> x296 0)) (and (<= (x110 x296 x159) x296) (<= 0 (x110 x296 x159)))))
(define-fun x3 ((x296 Int) (x159 Int)) Bool (=> (and (and (<= 1 x159) (< x159 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x296) (<= 0 x296))) (and (< (x110 x296 x159) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= (x110 x296 x159) 0))))
(define-fun x335 ((x296 Int) (x159 Int)) Bool (=> (and (< x159 x296) (< 1 x159)) (< (x110 x296 x159) x296)))
(define-fun x124 ((x296 Int) (x159 Int)) Bool (=> (and (< 0 x159) (> x296 0)) (= (= (x110 x296 x159) 0) (< x296 x159))))
(define-fun x323 ((x296 Int) (x159 Int)) Bool (=> (and (< 0 x159) (> x296 0)) (and (< (- x296 x159) (x347 (x110 x296 x159) x159)) (<= (x347 (x110 x296 x159) x159) x296))))
(define-fun x72 ((x296 Int) (x159 Int)) Bool (and (x124 x296 x159) (x224 x296 x159) (x335 x296 x159) (x3 x296 x159) (x323 x296 x159)))
(define-fun x462 ((x296 Int)) Bool (= (x110 0 x296) 0))
(define-fun x123 ((x296 Int)) Bool (= (x110 x296 1) x296))
(define-fun x383 ((x296 Int)) Bool (=> (not (= x296 0)) (= (x110 x296 x296) 1)))
(define-fun x366 ((x296 Int)) Bool (and (x462 x296) (x383 x296) (x123 x296)))
(define-fun x182 ((x296 Int)) Bool (and (= (x344 115792089237316195423570985008687907853269984665640564039457584007913129639935 x296) x296) (= (x344 x296 115792089237316195423570985008687907853269984665640564039457584007913129639935) x296)))
(define-fun x470 ((x296 Int)) Bool (and (= (x344 0 x296) 0) (= 0 (x344 x296 0))))
(define-fun x45 ((x296 Int)) Bool (= x296 (x344 x296 x296)))
(define-fun x354 ((x296 Int)) Bool (and (x470 x296) (x45 x296) (x182 x296)))
(define-fun x53 ((x296 Int) (x159 Int)) Bool (= (x344 x159 x296) (x344 x296 x159)))
(define-fun x20 ((x296 Int) (x159 Int)) Bool (and (=> (<= 0 x159) (>= x159 (x344 x296 x159))) (=> (<= 0 x296) (>= x296 (x344 x296 x159))) (>= (x344 x296 x159) 0)))
(define-fun x71 ((x296 Int) (x159 Int)) Bool (and (x20 x296 x159) (x53 x296 x159)))
(define-fun x286 ((x296 Int)) Bool (= (x344 x296 1461501637330902918203684832716283019655932542975) (x94 x296 1461501637330902918203684832716283019655932542976)))
(define-fun x451 ((x296 Int)) Bool (and (x71 x296 1461501637330902918203684832716283019655932542975) (x286 x296)))
(define-fun x21 ((x296 Int) (x159 Int)) Bool (and (<= 0 (x94 x296 x159)) (> x159 (x94 x296 x159))))
(define-fun x307 ((x296 Int) (x159 Int)) Bool (=> (and (<= 0 x296) (< 0 x159)) (= (= x296 (x94 x296 x159)) (> x159 x296))))
(define-fun x331 ((x296 Int) (x159 Int)) Bool (=> (and (and (>= x296 x159) (> (+ x159 x159) x296)) (> x159 0)) (= (x94 x296 x159) (- x296 x159))))
(define-fun x362 ((x296 Int)) Bool (= 0 (x94 0 x296)))
(define-fun x43 ((x296 Int)) Bool (= (x94 x296 1) 0))
(define-fun x435 ((x296 Int)) Bool (= (x94 x296 x296) 0))
(define-fun x235 ((x296 Int)) Bool (and (x43 x296) (x362 x296) (x435 x296)))
(define-fun x68 ((x249 x442)) Int (ite (= (x56 13) x249) x219 (x24 x249)))
(define-fun x243 ((x249 x442)) Int (ite (= x249 (x56 14)) x432 (x68 x249)))
(define-fun x312 ((x249 x442)) Int (ite (= x249 (x56 15)) x372 (x243 x249)))
(define-fun x4 ((x249 x442)) Int (ite (= (x56 16) x249) x449 (x312 x249)))
(define-fun x408 ((x249 Int)) Int (ite (= x249 128) x248 (x441 x249)))
(define-fun x54 ((x249 Int)) Int (ite (= x249 160) (ite x202 1 0) (x408 x249)))
(define-fun x242 ((x249 Int)) Int (ite (= 128 x249) x93 (x27 x249)))
(define-fun x218 ((x249 Int)) Int (ite (= x249 160) (ite x158 1 0) (x242 x249)))
(define-fun x440 ((x249 Int)) Int (ite (= x348 x249) 77196514420459877940035116867124998943289115686762304616657918434777787006976 (x201 x249)))
(define-fun x276 ((x249 Int)) Int (ite (= x249 x348) 0 (x440 x249)))
(define-fun x305 ((x249 Int)) Int (ite (= x249 x453) 70508962019145425934951811999677760319478833095128838543097651878529435959296 (x276 x249)))
(define-fun x15 ((x249 Int)) Int (ite (= x52 x249) (x206 x381) (x305 x249)))
(define-fun x254 ((x249 Int)) Int (ite (= x249 x23) x198 (x15 x249)))
(define-fun x173 ((x249 Int)) Int (ite (= x249 x101) x41 (x254 x249)))
(define-fun x190 ((x249 Int)) Int (ite (= x249 x453) (ite true 1 0) (x173 x249)))
(define-fun x189 ((x296 Int) (x159 Int) (x34 Int) (x145 Int)) Bool (=> (and (<= 0 x159) (<= x159 x145) (<= 0 x296) (>= x34 x296)) (>= (x347 x34 x145) (x347 x296 x159))))
(define-fun x26 ((x296 Int) (x159 Int) (x34 Int) (x145 Int)) Bool (=> (= x34 x296) (= (- (x347 x296 x159) (x347 x34 x145)) (x347 x296 (- x159 x145)))))
(define-fun x121 ((x296 Int)) Bool (=> (and (not (= 36576266130383907740409294828766280552204369950469466485900666250106563985408 x296)) (not (= x296 1738207182)) (not (= 1871194811 x296)) (not (= 3890975986 x296)) (not (= x296 1531409238)) (not (= 25742203781880459408941457317362166305709681742799472914177068605934923677696 x296)) (not (= x296 1984976886)) (not (= x296 922701707)) (> x296 10000) (not (= 21304723245256853039595661774342629002073543191790936201937503064778531143680 x296)) (not (= x296 1356689113)) (not (= 15314092380000 x296)) (not (= x296 1461501637330902918203684832716283019655932542975)) (not (= x296 3996650231)) (not (= x296 110688705405039355050572217931781119515373813223972846963051619115990310191104)) (not (= 2039265891 x296)) (not (= x296 822145385)) (not (= 77196514420459877940035116867124998943289115686762304616657918434777787006976 x296)) (not (= x296 1862597803)) (not (= 3812870723 x296)) (not (= 2580288415 x296)) (not (= 3871629458 x296)) (not (= 100000 x296)) (not (= 3002540418 x296)) (not (= x296 86400)) (not (= x296 1816029635)) (not (= 2876725745 x296)) (not (= 910484757 x296)) (not (= x296 686821956)) (not (= 4105672269 x296)) (not (= x296 106320276355336348263208190817157392285036095892762275362566149969828045127680)) (not (= 519173431 x296)) (not (= 26959946667150639794667015087019630673637144422540572481103610249216 x296)) (not (= x296 2127478272)) (not (= x296 596258137)) (not (= 954831406 x296)) (not (= x296 1062488491900878629424266116482631147622884293147)) (not (= 500647658 x296)) (not (= 3051865383 x296)) (not (= 2064814097 x296)) (not (= x296 3224796394)) (not (= x296 70508962019145425934951811999677760319478833095128838543097651878529435959296)) (not (= x296 503383097)) (not (= 3567393941 x296)) (not (= 599290589 x296)) (not (= 3249860859 x296)) (not (= x296 2863377861)) (not (= x296 1840041978)) (not (= 3008386744 x296)) (not (= 770885568 x296)) (not (= 2966737888 x296)) (not (= x296 3366849169)) (not (= 790236105 x296)) (not (= x296 3943638230)) (not (= x296 1439069736)) (not (= 743225245 x296)) (not (= 826074471 x296)) (not (= 3506505391 x296))) (not ((_ is x56) (x176 x296)))))
(assert (x139 x219))
(assert (x26 x290 x473 x69 x432))
(assert (x161 x303 (- x100 x219)))
(assert (x139 (- x290 x432)))
(assert (= (x56 3002540418) (x176 3002540418)))
(assert (x26 x153 x157 x69 x219))
(assert (x139 (- x432 x283)))
(assert (x139 (- x219 x153)))
(assert (x26 x76 x283 x69 x219))
(assert (x177 x108))
(assert (x161 x473 (- x290 x153)))
(assert (x26 x81 x103 x65 x60))
(assert (x26 x69 x219 x76 x283))
(assert (x26 x219 x69 x65 x60))
(assert (x354 1461501637330902918203684832716283019655932542975))
(assert (x26 x69 x219 x283 x76))
(assert (x139 (- x153 x103)))
(assert (x161 x303 (- x100 x153)))
(assert (= (and x36 x389) x468))
(assert (x366 x179))
(assert (x161 x290 (- x473 x153)))
(assert (x177 x85))
(assert (= (x176 2863377861) (x56 2863377861)))
(assert (x177 x374))
(assert (x139 (- x290 x60)))
(assert (x177 x482))
(assert (=> (<= x233 10000) (= (x176 x233) (x56 x233))))
(assert (x26 x303 x100 x432 x69))
(assert (x177 x167))
(assert (x177 x252))
(assert (x26 x303 x100 x290 x473))
(assert (x177 x209))
(assert (x139 (- x60 x69)))
(assert (= (x56 822145385) (x176 822145385)))
(assert (x161 x103 (- x81 x65)))
(assert (x161 x69 (- x219 x157)))
(assert (x139 (- x100 x290)))
(assert (x139 (- x81 x290)))
(assert (x26 x60 x65 x100 x303))
(assert (= x213 (=> (and (and (and (= x365 x281) (= x406 790236105) (not (> 743225245 x406)) (= (< x183 5000) x14) (= x196 x417) (= x63 x37) (= x417 x449) (= 5000 x401) (> 2127478272 x406) (<= x88 1461501637330902918203684832716283019655932542975) (>= x88 0) (>= 1461501637330902918203684832716283019655932542975 x471) (= x142 x313) (= (not (= x270 1062488491900878629424266116482631147622884293147)) x340) (= x372 x113) (= (x284 (x56 36) (x56 32) (x176 x237) (x176 (x49 x292 224)) 0) x381) (= x292 (x74 (* 26959946667150639794667015087019630673637144422540572481103610249216 x406))) (not (< x406 500647658)) (> 954831406 x406) (< 0 x231) (= x270 (x344 1461501637330902918203684832716283019655932542975 x245)) (<= x365 1461501637330902918203684832716283019655932542975) (= x198 x471) (<= 0 x365) (>= x471 0) (not (= 770885568 x406)) x14 (= x184 x311) (= (x436 (x176 x41)) x231) (= x184 0) (> 822145385 x406) (not (= x406 743225245)) (= x313 x37) (= x222 x449) (= x281 x70)) (and (= x78 (x436 (x176 x41))) x255 (< 0 x78) (= 5000 x209) (= x128 x205) (not (= 500647658 x252)) (not (< x252 500647658)) (= x156 x183) (= 519173431 x252) (= (not x128) x255) (= x156 x162) (> 743225245 x252) (= x416 (not (= 0 x8))) (= x205 x416) (< x252 2127478272) (> 954831406 x252) (not (= 503383097 x252)) (< x252 596258137) (= x306 5000))) (and (= x8 (x54 160)) (= (not (= 0 x174)) x202) (= x162 (x54 128)))) (and (=> (and (and (= x269 110688705405039355050572217931781119515373813223972846963051619115990310191104) (= x325 (= x381 x472)) (= (x284 (x56 36) (x56 32) (x176 x237) (x176 4105672269) 0) x472)) x340) (and (=> (and (not x325) (and (= x477 21304723245256853039595661774342629002073543191790936201937503064778531143680) (= x266 (x284 (x56 36) (x56 32) (x176 x237) (x176 790236105) 0)) (= (= x266 x381) x79))) (and (=> (and x79 (and (= 332 x262) (= x171 (ite x79 1 0)))) x279) (=> (and (and (= (= x381 x461) x36) (= 106320276355336348263208190817157392285036095892762275362566149969828045127680 x136) (= (x284 (x56 36) (x56 32) (x176 x237) (x176 3943638230) 0) x461)) (not x79)) (and (=> (and (and (= x171 (ite x36 1 0)) (= 400 x262)) x36) x279) (=> (and (and (and (= (x284 (x56 36) (x56 32) (x176 x237) (x176 954831406) 0) x247) (= 25742203781880459408941457317362166305709681742799472914177068605934923677696 x42) (= (= x247 x381) x439)) (or (and x439 (and (= x59 (ite x439 1 0)) (= 468 x152))) (and (not x439) (and (or (and (and (= 536 x152) (= x59 0) (= 0 x277)) (not x178)) (and (and (= x152 536) (= (ite x178 1 0) x59)) x178)) (and (= x178 (= x117 x381)) (= 36576266130383907740409294828766280552204369950469466485900666250106563985408 x448) (= x117 (x284 (x56 36) (x56 32) (x176 x237) (x176 1356689113) 0))))))) (not x36)) x386))))) (=> (and (and (= x90 264) (= x456 (ite x325 1 0))) x325) x99))) (=> (and (and (= (ite x340 1 0) x31) (= x348 196)) (not x340)) x460)))))
(assert (x139 (- x76 x65)))
(assert (x161 x100 x303))
(assert (x177 x418))
(assert (x177 x423))
(assert (x26 x69 x219 x65 x60))
(assert (x26 x153 x157 x303 x100))
(assert (x161 x432 (- x69 x303)))
(assert (x139 (- x473 x69)))
(assert (x189 x219 x69 x76 x283))
(assert (x177 x357))
(assert (x189 x153 x157 x100 x303))
(assert (x161 x153 (- x157 x473)))
(assert (x161 x157 (- x153 x283)))
(assert (x366 (x258 (- x426 1))))
(assert (= (x56 596258137) (x176 596258137)))
(assert (= (and x150 x95) x221))
(assert (x161 x76 (- x283 x60)))
(assert (= (x206 (x56 3224796394)) 3224796394))
(assert (x161 x290 (- x473 x303)))
(assert (= (x56 3366849169) (x176 3366849169)))
(assert (x189 x69 x432 x76 x283))
(assert (x366 x285))
(assert (x26 x81 x103 x76 x283))
(assert (= x469 (or x339 x412)))
(assert (x177 x100))
(assert (x139 (- x60 x100)))
(assert (= 954831406 (x206 (x56 954831406))))
(assert (x161 x219 (- x69 x76)))
(assert (x26 x283 x76 x69 x432))
(assert (x177 x80))
(assert (x177 x153))
(assert (x26 x100 x303 x473 x290))
(assert (x161 x81 (- x103 x432)))
(assert (x161 x69 (- x219 x76)))
(assert (x139 (- x103 x153)))
(assert (x26 x283 x76 x69 x219))
(assert (x177 x351))
(assert (x161 x100 (- x303 x473)))
(assert (= (x206 (x56 2127478272)) 2127478272))
(assert (= (x176 3871629458) (x56 3871629458)))
(assert (x161 x153 (- x157 x290)))
(assert (x26 x290 x473 x103 x81))
(assert (x189 x290 x473 x100 x303))
(assert (= 2863377861 (x206 (x56 2863377861))))
(assert (x177 x338))
(assert (x177 x65))
(assert (= (x206 (x56 15314092380000)) 15314092380000))
(assert (x189 x103 x81 x153 x157))
(assert (x177 x361))
(assert (x26 x283 x76 x103 x81))
(assert (x189 x65 x60 x219 x69))
(assert (x139 x157))
(assert (= x193 (or x164 x77)))
(assert (x139 x406))
(assert (= 3506505391 (x206 (x56 3506505391))))
(assert (x139 (- x153 x219)))
(assert (x177 x187))
(assert (x26 x60 x65 x76 x283))
(assert (x177 x310))
(assert (x177 x120))
(assert (x161 x69 (- x432 x153)))
(assert (x161 x432 (- x69 x76)))
(assert (x161 x219 (- x69 x103)))
(assert (x161 x60 (- x65 x283)))
(assert (x366 x219))
(assert (x26 x432 x69 x103 x81))
(assert (x177 x426))
(assert (x177 x37))
(assert (x139 (- x157 x103)))
(assert (x177 x64))
(assert (= (x206 (x176 3943638230)) 3943638230))
(assert (x177 x398))
(assert (x189 x76 x283 x60 x65))
(assert (x177 x320))
(assert (x26 x219 x69 x103 x81))
(assert (x177 x12))
(assert (= x7 (or x342 x468 x403)))
(assert (x177 x107))
(assert (x26 x157 x153 x103 x81))
(assert (x177 x23))
(assert (x161 x76 (- x283 x100)))
(assert (x26 x473 x290 x60 x65))
(assert (x139 (- x65 x283)))
(assert (x177 x356))
(assert (x189 x153 x157 x76 x283))
(assert (x26 x81 x103 x283 x76))
(assert (x26 x76 x283 x157 x153))
(assert (x161 x69 (- x432 x283)))
(assert (x139 (- x65 x290)))
(assert (x189 x473 x290 x432 x69))
(assert (x139 (- x283 x219)))
(assert (x139 (- x303 x65)))
(assert (x161 x283 (- x76 x219)))
(assert (not x259))
(assert (= (or x469 x131) x225))
(assert (x177 x76))
(assert (= 21304723245256853039595661774342629002073543191790936201937503064778531143680 (x206 (x56 21304723245256853039595661774342629002073543191790936201937503064778531143680))))
(assert (x139 (- x290 x103)))
(assert (x26 x69 x432 x100 x303))
(assert (x189 x283 x76 x103 x81))
(assert (x177 x155))
(assert (x26 x303 x100 x69 x219))
(assert (x161 x60 (- x65 x103)))
(assert (x177 x30))
(assert (x177 x360))
(assert (x26 x153 x157 x473 x290))
(assert (x139 (- x473 x153)))
(assert (x161 x157 (- x153 x81)))
(assert (x161 x76 (- x283 x103)))
(assert (x177 x239))
(assert (= (x176 2966737888) (x56 2966737888)))
(assert (x26 x283 x76 x100 x303))
(assert (x26 x153 x157 x432 x69))
(assert (x26 x219 x69 x157 x153))
(assert (x161 x69 (- x432 x76)))
(assert (= (or x253 x7) x10))
(assert (x139 (- x65 x473)))
(assert (x26 x103 x81 x153 x157))
(assert (x177 x91))
(assert (x139 (- x103 x157)))
(assert (= x379 (and x170 x439)))
(assert (x177 x280))
(assert (= (x206 (x56 3943638230)) 3943638230))
(assert (x189 x153 x157 x103 x81))
(assert (x26 x432 x69 x157 x153))
(assert (= (x56 826074471) (x176 826074471)))
(assert (x161 x60 (- x65 x473)))
(assert (x26 x103 x81 x65 x60))
(assert (x26 x473 x290 x153 x157))
(assert (x177 x144))
(assert (x26 x103 x81 x473 x290))
(assert (x139 (- x69 x157)))
(assert (x26 x290 x473 x81 x103))
(assert (x177 x119))
(assert (x72 x394 x191))
(assert (x139 (- x100 x473)))
(assert (x189 x69 x432 x60 x65))
(assert (x177 x88))
(assert (x139 (- x303 x283)))
(assert (x161 x290 (- x473 x100)))
(assert (x161 x100 (- x303 x219)))
(assert (x26 x81 x103 x69 x432))
(assert (x366 x17))
(assert (x139 (- x76 x60)))
(assert (x139 (- x69 x81)))
(assert (= (x206 (x56 1439069736)) 1439069736))
(assert (x161 x69 (- x432 x60)))
(assert (x139 (- x69 x103)))
(assert (x26 x65 x60 x219 x69))
(assert (= (x56 77196514420459877940035116867124998943289115686762304616657918434777787006976) (x176 77196514420459877940035116867124998943289115686762304616657918434777787006976)))
(assert (x26 x303 x100 x283 x76))
(assert (x139 (- x103 x76)))
(assert (x26 x81 x103 x69 x219))
(assert (x177 x29))
(assert (x177 x322))
(assert (x139 (- x283 x303)))
(assert (x26 x69 x219 x157 x153))
(assert (x177 x154))
(assert (= (x176 500647658) (x56 500647658)))
(assert (x139 (- x103 x69)))
(assert (x366 x229))
(assert (x139 (- x219 x76)))
(assert (= 596258137 (x206 (x56 596258137))))
(assert (x26 x219 x69 x100 x303))
(assert (= (and x389 (not x36)) x170))
(assert (x26 x76 x283 x303 x100))
(assert (x177 x35))
(assert (x177 x179))
(assert (x26 x60 x65 x283 x76))
(assert (= 770885568 (x206 (x56 770885568))))
(assert (x189 x60 x65 x290 x473))
(assert (x177 x269))
(assert (= (x176 3224796394) (x56 3224796394)))
(assert (x161 x100 (- x303 x283)))
(assert (x177 x175))
(assert (x177 x261))
(assert (x161 x100 (- x303 x76)))
(assert (x139 (- x100 x76)))
(assert (x26 x81 x103 x219 x69))
(assert (x177 x438))
(assert (x189 x76 x283 x103 x81))
(assert (x26 x432 x69 x473 x290))
(assert (x161 x283 (- x76 x60)))
(assert (x72 x444 x229))
(assert (x26 x283 x76 x153 x157))
(assert (x26 x290 x473 x69 x219))
(assert (x161 x283 (- x76 x65)))
(assert (x161 x103 (- x81 x157)))
(assert (x139 (- x157 x290)))
(assert (x177 x411))
(assert (x189 x69 x219 x100 x303))
(assert (x161 x283 (- x76 x432)))
(assert (x139 (- x432 x157)))
(assert (x26 x76 x283 x60 x65))
(assert (x26 x473 x290 x100 x303))
(assert (x139 x76))
(assert (x139 (- x81 x473)))
(assert (x177 x402))
(assert (x177 x109))
(assert (= 1356689113 (x206 (x56 1356689113))))
(assert (x177 x157))
(assert (x366 x367))
(assert (x139 (- x473 x65)))
(assert (x161 x473 (- x290 x100)))
(assert (x161 x69 (- x219 x283)))
(assert (x26 x100 x303 x157 x153))
(assert (x189 x432 x69 x103 x81))
(assert (= (x206 (x56 106320276355336348263208190817157392285036095892762275362566149969828045127680)) 106320276355336348263208190817157392285036095892762275362566149969828045127680))
(assert (x139 (- x219 x65)))
(assert (x139 (- x100 x219)))
(assert (x177 x42))
(assert (x177 x268))
(assert (x177 x127))
(assert (x139 (- x153 x283)))
(assert (x177 x262))
(assert (x26 x69 x432 x473 x290))
(assert (x139 (- x219 x283)))
(assert (x161 x69 (- x432 x100)))
(assert (= x403 (and x79 x185)))
(assert (x189 x81 x103 x290 x473))
(assert (x26 x65 x60 x100 x303))
(assert (x177 x58))
(assert (= (x56 86400) (x176 86400)))
(assert (x177 x443))
(assert (= x98 (and x67 x467)))
(assert (x139 (- x60 x103)))
(assert (x139 (- x81 x65)))
(assert (x177 x270))
(assert (x177 x162))
(assert (x161 x103 (- x81 x153)))
(assert (x177 x246))
(assert (= (x176 3890975986) (x56 3890975986)))
(assert (x189 x473 x290 x103 x81))
(assert (x139 (- x157 x219)))
(assert (and (x169 26959946667150639794667015087019630673637144422540572481103610249216 x406) (x337 26959946667150639794667015087019630673637144422540572481103610249216 x406) (x434 26959946667150639794667015087019630673637144422540572481103610249216 x406) (x452 26959946667150639794667015087019630673637144422540572481103610249216 x406) (x388 26959946667150639794667015087019630673637144422540572481103610249216 x406) (and (= (- (* x406 26959946667150639794667015087019630673637144422540572481103610249216) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x406)) (x347 (- 115792089210356248756420345214020892766250353992003419616917011526809519390720) x406)) (= (x347 (- 115792089210356248756420345214020892766250353992003419616917011526809519390720) (- x406 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x406 115792089237316195423570985008687907853269984665640564039457584007913129639936) 26959946667150639794667015087019630673637144422540572481103610249216) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x406 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* (- x406 115792089237316195423570985008687907853269984665640564039457584007913129639936) 26959946667150639794667015087019630673637144422540572481103610249216) (x347 26959946667150639794667015087019630673637144422540572481103610249216 (- x406 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* x406 26959946667150639794667015087019630673637144422540572481103610249216) (x347 26959946667150639794667015087019630673637144422540572481103610249216 x406))))
(assert (x161 x100 (- x303 x290)))
(assert (= (and (not x95) x150) x131))
(assert (x139 (- x65 x100)))
(assert (= (x56 100000) (x176 100000)))
(assert (x161 x153 (- x157 x100)))
(assert (= 954831406 (x206 (x176 954831406))))
(assert (x366 x82))
(assert (x177 x194))
(assert (= 3051865383 (x206 (x56 3051865383))))
(assert (x161 x153 (- x157 x81)))
(assert (x177 x32))
(assert (x161 x157 (- x153 x290)))
(assert (x161 x153 (- x157 x219)))
(assert (= (x56 3249860859) (x176 3249860859)))
(assert (x177 x200))
(assert (x161 x65 (- x60 x432)))
(assert (x161 x157 (- x153 x76)))
(assert (x177 x219))
(assert (x139 (- x283 x65)))
(assert (x139 x69))
(assert (x177 x184))
(assert (x177 x60))
(assert (x177 x477))
(assert (x26 x153 x157 x81 x103))
(assert (x189 x290 x473 x219 x69))
(assert (x177 x130))
(assert (x139 (- x153 x290)))
(assert (x189 x157 x153 x103 x81))
(assert (x121 1356689113))
(assert (x161 x153 (- x157 x283)))
(assert (x161 x157 (- x153 x473)))
(assert (x177 x396))
(assert (x26 x81 x103 x60 x65))
(assert (x177 x46))
(assert (x26 x60 x65 x473 x290))
(assert (= (x206 (x56 3812870723)) 3812870723))
(assert (x26 x76 x283 x100 x303))
(assert (x161 x303 (- x100 x60)))
(assert (x189 x65 x60 x76 x283))
(assert (x161 x65 (- x60 x81)))
(assert (x177 x48))
(assert (= 3366849169 (x206 (x56 3366849169))))
(assert (x177 x306))
(assert (x161 x153 (- x157 x76)))
(assert (x177 x186))
(assert (= (x56 1816029635) (x176 1816029635)))
(assert (x161 x473 (- x290 x157)))
(assert (x26 x157 x153 x76 x283))
(assert (x177 x62))
(assert (x161 x157 (- x153 x69)))
(assert (= 3002540418 (x206 (x56 3002540418))))
(assert (x177 x453))
(assert (x177 x282))
(assert (x121 x316))
(assert (x121 x149))
(assert (x161 x290 x473))
(assert (x177 x399))
(assert (x161 x303 (- x100 x76)))
(assert (= (x206 (x56 36576266130383907740409294828766280552204369950469466485900666250106563985408)) 36576266130383907740409294828766280552204369950469466485900666250106563985408))
(assert (x121 x41))
(assert (x177 x16))
(assert (x177 x237))
(assert (= (x176 3943638230) (x56 3943638230)))
(assert (x26 x100 x303 x60 x65))
(assert (x177 x373))
(assert (= 4105672269 (x206 (x176 4105672269))))
(assert (x139 (- x303 x432)))
(assert (= (x206 (x56 3890975986)) 3890975986))
(assert (x161 x432 (- x69 x157)))
(assert (= x364 (or x210 x10)))
(assert (x177 x466))
(assert (x26 x100 x303 x65 x60))
(assert (x26 x100 x303 x76 x283))
(assert (x177 x136))
(assert (x139 (- x76 x157)))
(assert (x177 x333))
(assert (x26 x103 x81 x69 x219))
(assert (x189 x219 x69 x100 x303))
(assert (x161 x283 (- x76 x303)))
(assert (x189 x69 x432 x100 x303))
(assert (x161 x432 (- x69 x473)))
(assert (x177 x317))
(assert (x161 x219 (- x69 x157)))
(assert (x161 x103 (- x81 x219)))
(assert (x26 x69 x432 x60 x65))
(assert (x139 (- x303 x69)))
(assert (x189 x81 x103 x153 x157))
(assert (x139 (- x81 x432)))
(assert (x189 x303 x100 x219 x69))
(assert (x189 x100 x303 x76 x283))
(assert (x139 (- x81 x76)))
(assert (x177 x471))
(assert (= (x206 (x56 2876725745)) 2876725745))
(assert (x139 (- x157 x81)))
(assert (x366 x163))
(assert (= (and x325 x387) x253))
(assert (= (x176 519173431) (x56 519173431)))
(assert (= (x206 (x56 3996650231)) 3996650231))
(assert (x177 x166))
(assert (x139 (- x290 x100)))
(assert (x189 x60 x65 x219 x69))
(assert (x139 (- x103 x60)))
(assert (x177 x231))
(assert (= (x56 790236105) (x176 790236105)))
(assert (x26 x65 x60 x103 x81))
(assert (x189 x76 x283 x153 x157))
(assert (= 86400 (x206 (x56 86400))))
(assert (= x339 (and x221 x251)))
(assert (x161 x81 (- x103 x283)))
(assert (x161 x473 (- x290 x103)))
(assert (x139 (- x157 x100)))
(assert (x139 (- x432 x60)))
(assert (x177 x458))
(assert (x26 x157 x153 x303 x100))
(assert (x161 x432 (- x69 x65)))
(assert (= (x206 (x56 1062488491900878629424266116482631147622884293147)) 1062488491900878629424266116482631147622884293147))
(assert (x139 (- x432 x153)))
(assert (x26 x81 x103 x473 x290))
(assert (x139 (- x65 x81)))
(assert (x161 x65 (- x60 x103)))
(assert (x26 x303 x100 x157 x153))
(assert (= (x206 (x56 26959946667150639794667015087019630673637144422540572481103610249216)) 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x139 (- x303 x153)))
(assert (x177 x245))
(assert (x177 x57))
(assert (x177 x473))
(assert (= x272 (=> (and (= 1 x116) (= x219 x457)) x132)))
(assert (x177 x196))
(assert (x26 x81 x103 x290 x473))
(assert (x161 x219 (- x69 x153)))
(assert (x161 x283 (- x76 x69)))
(assert (x177 x217))
(assert (x139 (- x219 x290)))
(assert (x161 x103 (- x81 x60)))
(assert (= x233 (x206 (x176 x233))))
(assert (= 1461501637330902918203684832716283019655932542975 (x206 (x56 1461501637330902918203684832716283019655932542975))))
(assert (x139 (- x219 x473)))
(assert (= 790236105 (x206 (x56 790236105))))
(assert (x139 (- x81 x283)))
(assert (= (x206 (x56 2966737888)) 2966737888))
(assert (= (x176 3567393941) (x56 3567393941)))
(assert (x139 (- x157 x76)))
(assert (x177 x229))
(assert (and (x307 x245 1461501637330902918203684832716283019655932542976) (=> (< 0 1461501637330902918203684832716283019655932542976) (= x245 (+ (x94 x245 1461501637330902918203684832716283019655932542976) (* (x110 x245 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976)))) (x331 x245 1461501637330902918203684832716283019655932542976) (x21 x245 1461501637330902918203684832716283019655932542976)))
(assert (x177 x274))
(assert (= (and (not x439) x170) x352))
(assert (x139 (- x473 x303)))
(assert (x366 x444))
(assert (x139 (- x432 x303)))
(assert (x161 x81 (- x103 x473)))
(assert (x161 x219 (- x69 x303)))
(assert (x189 x290 x473 x153 x157))
(assert (and (x3 x292 26959946667150639794667015087019630673637144422540572481103610249216) (=> (and (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (< 0 x292)) (and (<= (* 26959946667150639794667015087019630673637144422540572481103610249216 (x110 x292 26959946667150639794667015087019630673637144422540572481103610249216)) x292) (< (- x292 26959946667150639794667015087019630673637144422540572481103610249216) (* (x110 x292 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)))) (= (- x292 (x344 26959946667150639794667015087019630673637144422540572481103610249215 x292)) (* (x110 x292 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)) (x224 x292 26959946667150639794667015087019630673637144422540572481103610249216) (x124 x292 26959946667150639794667015087019630673637144422540572481103610249216) (x335 x292 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x177 x300))
(assert (x177 x271))
(assert (= (x176 1984976886) (x56 1984976886)))
(assert (x26 x60 x65 x69 x219))
(assert (x161 x432 (- x69 x81)))
(assert (x26 x65 x60 x290 x473))
(assert (x177 x134))
(assert (= x293 (or x332 x238)))
(assert (x189 x303 x100 x290 x473))
(assert (x26 x290 x473 x157 x153))
(assert (x177 x309))
(assert (x26 x69 x432 x76 x283))
(assert (= (x56 26959946667150639794667015087019630673637144422540572481103610249216) (x176 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x161 x103 x81))
(assert (x189 x473 x290 x153 x157))
(assert (x26 x432 x69 x81 x103))
(assert (x161 x153 (- x157 x103)))
(assert (x26 x103 x81 x157 x153))
(assert (x26 x100 x303 x290 x473))
(assert (x139 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x177 x183))
(assert (= (x176 1356689113) (x56 1356689113)))
(assert (x177 x481))
(assert (x26 x69 x219 x100 x303))
(assert (= (=> (and (and (= x112 (< 0 (x436 (x176 x149)))) (not (= x149 x396)) (>= 1461501637330902918203684832716283019655932542975 x316) (>= x360 0) (= 3249860859 x413) (<= 0 x374) x97 (<= 0 x315) (= (< 0 (x436 (x176 x396))) x97) (= (x118 (x176 x327)) x315) (= x204 (< 0 (x436 (x176 x316)))) (> x149 0) (= x360 (x118 (x176 x41))) (<= x41 1461501637330902918203684832716283019655932542975) (not (= x316 x41)) (<= x149 1461501637330902918203684832716283019655932542975) (not (= x149 x41)) (= x395 (> (x436 (x176 x41)) 0)) (= x410 (> (x436 (x176 x327)) 0)) (>= x226 0) (= (x118 (x176 x396)) x154) x395 (not (> 2127478272 x413)) (not (= x149 x327)) (not (= x396 x316)) (not (= x149 x316)) (> x327 0) (= x226 (x118 (x176 x316))) (not (< x413 3224796394)) (not (= x41 x396)) (not (= x316 x327)) (< 0 x41) x204 (< x413 3812870723) (<= 0 x154) (= 86400 x250) (<= x327 1461501637330902918203684832716283019655932542975) (> 3567393941 x413) (> x430 0) (not (= x327 x396)) x410 (< x413 3366849169) (> x396 0) (not (= x41 x327)) x112 (<= x396 1461501637330902918203684832716283019655932542975) (not (= 3224796394 x413)) (= (x436 (x176 x41)) x430) (= (x118 (x176 x149)) x374) (< 0 x316)) (and (and (= x431 86400) (< x192 3812870723) (= x137 86400) (< 0 x378) (= x378 (x436 (x176 x41))) (= x192 3249860859) (= x227 1531409238) (not (> 3224796394 x192)) (not (= 3224796394 x192)) (> 3567393941 x192) (not (< x192 2127478272)) (> 3366849169 x192)) (and (and (< 0 x12) (not (= 910484757 x30)) (not (= x30 822145385)) (= (x436 (x176 x41)) x12) (= x257 0) (= 2 x447) (not (< x30 822145385)) (> 2127478272 x30) (= x148 86400) (= 922701707 x30) (not (= x30 826074471)) (not (> 743225245 x30)) (not (> 500647658 x30)) (> 954831406 x30)) (and (and (not (< x443 954831406)) (not (> 1439069736 x443)) (= true x278) (not (> 1738207182 x443)) (< 0 x96) (> 2127478272 x443) (= 1816029635 x443) (not (= x443 1738207182)) (= x397 2) (< x443 1871194811) (= (x436 (x176 x41)) x96) (= 2 x134) (= x309 1000)) (and (and (and (and (and (> 596258137 x418) (= x195 5000) (> 743225245 x418) (< x418 2127478272) (> x16 0) (= 1 x215) (= x16 (x436 (x176 x41))) (= 519173431 x418) (= 0 x160) (not (= x418 503383097)) (not (> 500647658 x418)) (= x239 5000) (not (= 500647658 x418)) (< x418 954831406)) (and (and (and (and (and (and (and (< 0 x55) (= x147 1871194811) (< x147 2127478272) (= x260 true) (= x217 64) (> 1984976886 x147) (not (> 1439069736 x147)) (not (< x147 1871194811)) (= x200 64) (= x322 64) (= (x436 (x176 x41)) x55) (not (> 954831406 x147))) (and (and (= x104 x411) (= x155 (x24 (x56 13))) (not (< x236 2863377861)) (= x107 x198) (= x70 x411) (= x236 3051865383) (= x138 (x24 (x56 16))) (= 5000 x333) (= x438 0) (>= 1461501637330902918203684832716283019655932542975 x458) (not (= 3008386744 x236)) (not (< x236 2580288415)) (= 100000 x421) (> 3224796394 x236) (<= 0 x107) (not (< x236 2127478272)) (= x320 (x436 (x176 x41))) (= x311 x438) (<= 0 x458) (<= x107 1461501637330902918203684832716283019655932542975) (not (< x236 3008386744)) (>= 1461501637330902918203684832716283019655932542975 x104) (<= 0 x104) (= x223 (x24 (x56 14))) (= x57 (x24 (x56 15))) (< 0 x320) (= x95 (< x372 x138))) (and (> 596258137 x478) (= x232 x297) (= x271 5000) (>= x232 0) (= x479 5000) (> x357 0) (not (= 503383097 x478)) (>= x48 0) (= x357 (x436 (x176 x41))) (= x478 519173431) (not (> 500647658 x478)) (> 954831406 x478) (not (= x478 500647658)) (= 64 x133) (< x478 743225245) (= 64 x427) (> 2127478272 x478) (= x48 x198) (= true x73) (>= 1461501637330902918203684832716283019655932542975 x232) (>= 1461501637330902918203684832716283019655932542975 x48)))) (and (= true x483) (not (< x356 3224796394)) (= x356 3890975986) (< x356 3996650231) (not (> 3812870723 x356)) (= 192 x11) (not (> 3890975986 x356)) (< 0 x384) (not (< x356 2127478272)) (= x261 192) (= 64 x377) (= (x436 (x176 x41)) x384))) (and (not (= x369 1840041978)) (not (= x369 1738207182)) (not (= 1816029635 x369)) (= x289 (x436 (x176 x41))) (> x289 0) (< x369 1871194811) (= x267 128) (= x328 true) (not (< x369 954831406)) (not (> 1738207182 x369)) (= x433 128) (= x380 192) (= x369 1862597803) (> 2127478272 x369) (not (> 1439069736 x369)))) (and (not (< x80 3366849169)) (not (< x80 3224796394)) (= 3506505391 x80) (> 3567393941 x80) (= true x326) (= (x436 (x176 x41)) x371) (< x80 3812870723) (> x371 0) (not (> 2127478272 x80)) (= 64 x423) (not (= 3366849169 x80)) (= 64 x32) (= x141 128))) (and (= 64 x329) (not (< x166 1439069736)) (> 2127478272 x166) (= 0 x393) (= x135 0) (not (< x166 1871194811)) (not (= 1984976886 x166)) (= x166 2064814097) (not (< x166 954831406)) (< 0 x361) (not (= 2039265891 x166)) (= true x302) (= x361 (x436 (x176 x41))) (not (> 1984976886 x166)))) (and (not (> 2580288415 x481)) (= 0 x29) (not (= 2876725745 x481)) (= 100000 x482) (not (= x481 2863377861)) (= 5000 x355) (not (> 2127478272 x481)) (< x481 3224796394) (= 3002540418 x481) (= x216 (x436 (x176 x41))) (> x216 0) (< x481 3008386744) (not (< x481 2863377861)) (not (= 2966737888 x481))))) (and (not (> 596258137 x108)) (< x108 743225245) (not (= x108 599290589)) (= (x436 (x176 x41)) x263) (= 1 x343) (> 954831406 x108) (< 0 x263) (not (= x108 596258137)) (= x108 686821956) (= 1 x336) (= 1 x220) (not (> 500647658 x108)) (< x108 2127478272))) (and (= 1 x167) (< x399 954831406) (> 2127478272 x399) (= 686821956 x399) (= x91 (x436 (x176 x41))) (not (> 500647658 x399)) (not (= x399 596258137)) (< 0 x91) (not (= x399 599290589)) (= 5000 x351) (not (< x399 596258137)) (= 1 x1) (< x399 743225245))) (and (< x274 596258137) (not (= x274 503383097)) (= x300 5000) (< x274 954831406) (= 1000 x402) (not (= x274 500647658)) (= x274 519173431) (> 743225245 x274) (= 5000 x317) (not (> 500647658 x274)) (< x274 2127478272) (> x246 0) (= x13 1000) (= (x436 (x176 x41)) x246) (= true x314))))))) (and (=> (and (and (= x248 x223) (= x174 0)) (not x95)) x213) (=> (and (and (= (> x223 x155) x251) (or (and (not x251) (and (= x409 (x110 x394 x191)) (> x191 0) (= (x258 (- x138 x57)) x191) (= x89 x291) (= (x258 (- x372 x57)) x81) (= (x258 (- x155 x223)) x103) (= x394 (x74 (x347 x103 x81))) (= x89 (x258 (- x155 x409))))) (and (and (= (x258 (- x138 x57)) x82) (> x82 0) (= x282 (x110 x17 x82)) (= (x258 (- x223 x155)) x100) (= x425 (x102 (+ x282 x155))) (= x291 x425) (= x303 (x258 (- x372 x57))) (= (x74 (x347 x100 x303)) x17)) x251))) x95) x51))) x259))
(assert (x177 x444))
(assert (= (x56 21304723245256853039595661774342629002073543191790936201937503064778531143680) (x176 21304723245256853039595661774342629002073543191790936201937503064778531143680)))
(assert (x189 x219 x69 x60 x65))
(assert (= (x201 x140) 0))
(assert (x177 x70))
(assert (x161 x283 (- x76 x81)))
(assert (x366 x64))
(assert (x177 x171))
(assert (x161 x290 (- x473 x69)))
(assert (= (x201 x129) 0))
(assert (x139 x283))
(assert (x26 x76 x283 x432 x69))
(assert (x189 x283 x76 x100 x303))
(assert (x177 x142))
(assert (x161 x290 (- x473 x60)))
(assert (x177 x103))
(assert (x26 x65 x60 x81 x103))
(assert (x26 x290 x473 x60 x65))
(assert (x139 (- x432 x100)))
(assert (x177 x115))
(assert (x161 x153 (- x157 x303)))
(assert (x189 x100 x303 x60 x65))
(assert (= (x176 1531409238) (x56 1531409238)))
(assert (x26 x65 x60 x69 x432))
(assert (x161 x473 (- x290 x219)))
(assert (= x308 (and x352 x178)))
(assert (x161 x432 x69))
(assert (x26 x76 x283 x65 x60))
(assert (x139 (- x290 x303)))
(assert (x161 x157 (- x153 x103)))
(assert (= (x56 770885568) (x176 770885568)))
(assert (x139 (- x60 x81)))
(assert (x26 x60 x65 x103 x81))
(assert (= (x206 (x176 x237)) x237))
(assert (x161 x60 (- x65 x81)))
(assert (x366 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x139 (- x103 x473)))
(assert (= (x176 1862597803) (x56 1862597803)))
(assert (= x334 (and x28 (not x475))))
(assert (x177 x168))
(assert (x177 x454))
(assert (= (x206 (x56 1840041978)) 1840041978))
(assert (x189 x69 x219 x103 x81))
(assert (x26 x69 x219 x473 x290))
(assert (x139 (- x432 x65)))
(assert (x139 (- x65 x76)))
(assert (x177 x431))
(assert (x26 x69 x432 x103 x81))
(assert (x177 x283))
(assert (x26 x69 x432 x157 x153))
(assert (x139 (- x69 x290)))
(assert (x161 x69 (- x219 x103)))
(assert (x139 (- x65 x103)))
(assert (x177 x233))
(assert (x189 x60 x65 x432 x69))
(assert (= (x56 3051865383) (x176 3051865383)))
(assert (x139 (- x153 x432)))
(assert (x366 x265))
(assert (= (x206 (x56 500647658)) 500647658))
(assert (x139 (- x290 x81)))
(assert (x26 x69 x432 x65 x60))
(assert (x177 x421))
(assert (x161 x69 (- x219 x303)))
(assert (x177 x372))
(assert (=> (>= 10000 (x49 x292 224)) (= (x56 (x49 x292 224)) (x176 (x49 x292 224)))))
(assert (x139 (- x219 x103)))
(assert (x161 x303 (- x100 x69)))
(assert (x161 x157 (- x153 x303)))
(assert (x161 x303 (- x100 x157)))
(assert (x26 x283 x76 x81 x103))
(assert (x189 x219 x69 x153 x157))
(assert (x161 x103 (- x81 x76)))
(assert (x177 x198))
(assert (x161 x100 (- x303 x153)))
(assert (= (x56 2064814097) (x176 2064814097)))
(assert (x26 x69 x219 x290 x473))
(assert (x177 x263))
(assert (x26 x76 x283 x103 x81))
(assert (x161 x69 (- x219 x60)))
(assert (x177 x192))
(assert (= (x206 (x56 3008386744)) 3008386744))
(assert (x161 x103 (- x81 x283)))
(assert (x177 x41))
(assert (x177 x33))
(assert (x177 x371))
(assert (x161 x473 (- x290 x69)))
(assert (x26 x432 x69 x303 x100))
(assert (x139 (- x81 x219)))
(assert (= (x206 (x176 x327)) x327))
(assert (x121 x396))
(assert (x161 x103 (- x81 x69)))
(assert (x177 x417))
(assert (x26 x290 x473 x65 x60))
(assert (x177 x250))
(assert (x177 x355))
(assert (x139 x290))
(assert (x177 x390))
(assert (= x67 (or x40 x199)))
(assert (x161 x432 (- x69 x290)))
(assert (x177 x31))
(assert (= 3871629458 (x206 (x56 3871629458))))
(assert (x177 x281))
(assert (x26 x283 x76 x60 x65))
(assert (= 1356689113 (x206 (x176 1356689113))))
(assert (x161 x290 (- x473 x432)))
(assert (= (x176 910484757) (x56 910484757)))
(assert (x161 x219 (- x69 x283)))
(assert (= (x206 (x176 x316)) x316))
(assert (x161 x76 x283))
(assert (= (x206 (x56 2039265891)) 2039265891))
(assert (x189 x473 x290 x60 x65))
(assert (x189 x303 x100 x432 x69))
(assert (x139 (- x103 x432)))
(assert (x161 x432 (- x69 x103)))
(assert (x189 x157 x153 x432 x69))
(assert (x189 x283 x76 x432 x69))
(assert (x189 x283 x76 x219 x69))
(assert (x177 x479))
(assert (x161 x219 (- x69 x290)))
(assert (x177 x464))
(assert (x177 x358))
(assert (x189 x69 x432 x153 x157))
(assert (x139 (- x219 x100)))
(assert (x139 x37))
(assert (x139 (- x65 x219)))
(assert (x26 x69 x432 x153 x157))
(assert (x26 x303 x100 x65 x60))
(assert (x161 x157 (- x153 x100)))
(assert (x161 x473 (- x290 x432)))
(assert (x26 x290 x473 x432 x69))
(assert (x139 (- x303 x473)))
(assert (x26 x473 x290 x69 x219))
(assert (x189 x81 x103 x219 x69))
(assert (x72 x6 x285))
(assert (x26 x153 x157 x100 x303))
(assert (= (x56 1840041978) (x176 1840041978)))
(assert (= (x206 (x56 910484757)) 910484757))
(assert (x139 (- x219 x81)))
(assert (x177 x433))
(assert (x26 x81 x103 x432 x69))
(assert (x177 x348))
(assert (x121 4105672269))
(assert (x177 x377))
(assert (x26 x219 x69 x303 x100))
(assert (x189 x100 x303 x153 x157))
(assert (= (x176 2876725745) (x56 2876725745)))
(assert (x161 x69 (- x432 x290)))
(assert (x26 x473 x290 x157 x153))
(assert (x139 x103))
(assert (x177 x459))
(assert (x139 (- x473 x60)))
(assert (x26 x157 x153 x290 x473))
(assert (x26 x153 x157 x103 x81))
(assert (x161 x100 (- x303 x157)))
(assert (x139 (- x219 x60)))
(assert (x26 x157 x153 x69 x219))
(assert (x139 (- x100 x432)))
(assert (= (x56 1738207182) (x176 1738207182)))
(assert (x189 x303 x100 x76 x283))
(assert (x161 x69 (- x219 x65)))
(assert (x139 (- x60 x473)))
(assert (x139 86400))
(assert (= (x206 (x56 599290589)) 599290589))
(assert (= (x56 36576266130383907740409294828766280552204369950469466485900666250106563985408) (x176 36576266130383907740409294828766280552204369950469466485900666250106563985408)))
(assert (x26 x157 x153 x283 x76))
(assert (x177 x17))
(assert (x161 x60 (- x65 x303)))
(assert (x177 x329))
(assert (x139 (- x100 x157)))
(assert (= (x176 1439069736) (x56 1439069736)))
(assert (x161 x283 (- x76 x103)))
(assert (x161 x290 (- x473 x219)))
(assert (x139 (- x283 x157)))
(assert (= (x56 15314092380000) (x176 15314092380000)))
(assert (x161 x303 (- x100 x473)))
(assert (x161 x219 (- x69 x100)))
(assert (x26 x76 x283 x69 x432))
(assert (= (x206 (x56 3249860859)) 3249860859))
(assert (= (and x293 (not x125)) x304))
(assert (x177 x1))
(assert (x139 (- x473 x103)))
(assert (x26 x153 x157 x76 x283))
(assert (x139 x153))
(assert (x177 x226))
(assert (= x404 (and x475 x28)))
(assert (x26 x432 x69 x65 x60))
(assert (x121 x327))
(assert (x139 (- x103 x283)))
(assert (x177 x343))
(assert (= (or x370 x379 x308) x342))
(assert (x26 x290 x473 x219 x69))
(assert (x177 x129))
(assert (x26 x153 x157 x219 x69))
(assert (x189 x69 x432 x103 x81))
(assert (x26 x153 x157 x283 x76))
(assert (x161 x303 (- x100 x283)))
(assert (x26 x69 x219 x81 x103))
(assert (x26 x69 x432 x81 x103))
(assert (= (x56 3506505391) (x176 3506505391)))
(assert (= x150 true))
(assert (x26 x103 x81 x283 x76))
(assert (x26 x303 x100 x76 x283))
(assert (x139 (- x60 x303)))
(assert (x189 x157 x153 x290 x473))
(assert (x139 (- x100 x283)))
(assert (x161 x432 (- x69 x153)))
(assert (x139 (- x290 x157)))
(assert (x26 x303 x100 x473 x290))
(assert (x177 x287))
(assert (x139 (- x153 x69)))
(assert (x161 x100 (- x303 x69)))
(assert (x177 x311))
(assert (x26 x303 x100 x219 x69))
(assert (x177 x141))
(assert (x177 x78))
(assert (x177 x290))
(assert (x366 x58))
(assert (x177 x66))
(assert (x177 x83))
(assert (x177 x380))
(assert (x177 x446))
(assert (x161 x81 (- x103 x60)))
(assert (x177 x47))
(assert (x121 x237))
(assert (x139 (- x219 x303)))
(assert (x139 (- x69 x100)))
(assert (x177 x397))
(assert (x161 x76 (- x283 x432)))
(assert (x26 x283 x76 x65 x60))
(assert (= 743225245 (x206 (x56 743225245))))
(assert (x189 x60 x65 x103 x81))
(assert (x26 x103 x81 x69 x432))
(assert (x177 x232))
(assert (x189 x69 x219 x290 x473))
(assert (x161 x65 (- x60 x290)))
(assert (x189 x100 x303 x219 x69))
(assert (x177 x39))
(assert (x177 x63))
(assert (x139 (- x157 x283)))
(assert (x161 x283 (- x76 x157)))
(assert (x161 x100 (- x303 x65)))
(assert (x177 x61))
(assert (x177 x146))
(assert (x177 x156))
(assert (x121 x233))
(assert (x161 x69 (- x219 x153)))
(assert (x177 x413))
(assert (x26 x157 x153 x219 x69))
(assert (x177 x96))
(assert (x177 x330))
(assert (x177 x447))
(assert (x161 x60 (- x65 x219)))
(assert (= 686821956 (x206 (x56 686821956))))
(assert (x26 x65 x60 x76 x283))
(assert (x161 x103 (- x81 x290)))
(assert (= (x176 922701707) (x56 922701707)))
(assert (x177 x291))
(assert (x26 x60 x65 x219 x69))
(assert (x177 x419))
(assert (x177 x25))
(assert (x26 x283 x76 x157 x153))
(assert (x177 x165))
(assert (x189 x473 x290 x219 x69))
(assert (x177 x126))
(assert (x161 x65 (- x60 x76)))
(assert (x177 x163))
(assert (= (=> (and (not (< x143 2863377861)) (<= x330 1461501637330902918203684832716283019655932542975) (not (= 3008386744 x143)) (not (< x143 2127478272)) (= 15314092380000 x454) (= x127 x25) (= (> x476 x2) x376) (<= 0 x330) (= x476 x459) (= x187 (x4 (x56 15))) x376 (not (> x390 2)) (>= 1461501637330902918203684832716283019655932542975 x25) (= x143 3051865383) (= (x4 (x56 13)) x165) (= x446 x144) (= x125 (< x459 x358)) (>= 1461501637330902918203684832716283019655932542975 x446) (= x194 x62) (= 0 x466) (> 3224796394 x143) (= x208 x466) (>= x203 0) (<= x212 1461501637330902918203684832716283019655932542975) (= (+ 15314092380000 x105) x2) (= (x4 (x56 16)) x358) (= x62 x212) (not (< x143 3008386744)) (> x287 0) (>= 1461501637330902918203684832716283019655932542975 x203) (= (x436 (x176 x41)) x287) (= x372 x105) (= x127 x203) (>= x212 0) (<= 0 x25) (= x87 (x4 (x56 14))) (not (< x143 2580288415)) (>= x446 0)) (and (=> (and (and (= x83 0) (= x87 x93)) (not x125)) x180) (=> (and x125 (and (= x475 (> x87 x165)) (or (and x475 (and (= x290 (x258 (- x87 x165))) (= x163 (x74 (x347 x290 x473))) (= (x258 (- x459 x187)) x473) (= x367 (x258 (- x358 x187))) (= (x102 (+ x165 x66)) x228) (= (x110 x163 x367) x66) (> x367 0) (= x294 x228))) (and (and (= (x74 (x347 x76 x283)) x6) (= x294 x119) (= (x110 x6 x285) x35) (= x283 (x258 (- x459 x187))) (= (x258 (- x358 x187)) x285) (> x285 0) (= x76 (x258 (- x165 x87))) (= (x258 (- x165 x35)) x119)) (not x475))))) x341))) x463))
(assert (x177 x52))
(assert (x177 x82))
(assert (x177 x448))
(assert (x139 (- x283 x81)))
(assert (x189 x76 x283 x100 x303))
(assert (x161 x153 (- x157 x69)))
(assert (x161 x60 (- x65 x76)))
(assert (x177 x222))
(assert (x26 x103 x81 x290 x473))
(assert (x139 (- x157 x473)))
(assert (= x99 (=> (and (= x90 x348) (= x31 x456)) x460)))
(assert (x26 x290 x473 x100 x303))
(assert (x121 954831406))
(assert (x161 x81 (- x103 x69)))
(assert (x26 x100 x303 x69 x432))
(assert (x26 x473 x290 x303 x100))
(assert (x177 x393))
(assert (x139 (- x432 x81)))
(assert (x177 x223))
(assert (x139 (- x81 x153)))
(assert (x177 x318))
(assert (= x210 (and (not x340) x225)))
(assert (x139 (- x60 x76)))
(assert (x177 x324))
(assert (= x387 (and x340 x225)))
(assert (x161 x81 (- x103 x65)))
(assert (x72 x64 x111))
(assert (x189 x219 x69 x103 x81))
(assert (x177 x148))
(assert (x177 x13))
(assert (x161 x69 (- x219 x473)))
(assert (x366 x6))
(assert (x177 x430))
(assert (x161 x153 x157))
(assert (x161 x290 (- x473 x81)))
(assert (x177 x303))
(assert (x161 x432 (- x69 x283)))
(assert (x177 x86))
(assert (x366 x394))
(assert (x26 x283 x76 x219 x69))
(assert (x177 x378))
(assert (x177 x248))
(assert (x161 x69 (- x432 x65)))
(assert (x161 x76 (- x283 x81)))
(assert (x139 (- x290 x153)))
(assert (x139 (- x60 x219)))
(assert (x26 x219 x69 x283 x76))
(assert (x177 x315))
(assert (x177 x289))
(assert (= 519173431 (x206 (x56 519173431))))
(assert (x189 x65 x60 x100 x303))
(assert (x177 x6))
(assert (x161 x290 (- x473 x157)))
(assert (x189 x81 x103 x60 x65))
(assert (x189 x303 x100 x153 x157))
(assert (x177 x137))
(assert (x139 (- x303 x290)))
(assert (x161 x432 (- x69 x100)))
(assert (x121 3943638230))
(assert (x139 (- x303 x76)))
(assert (x177 x457))
(assert (x189 x100 x303 x432 x69))
(assert (x26 x432 x69 x283 x76))
(assert (x161 x473 (- x290 x303)))
(assert (x177 x257))
(assert (x189 x69 x219 x60 x65))
(assert (x161 x60 (- x65 x290)))
(assert (x177 x299))
(assert (x26 x69 x432 x303 x100))
(assert (= (x56 1871194811) (x176 1871194811)))
(assert (x26 x303 x100 x153 x157))
(assert (= 822145385 (x206 (x56 822145385))))
(assert (x139 (- x473 x432)))
(assert (= (x49 x292 224) (x206 (x176 (x49 x292 224)))))
(assert (x161 x65 (- x60 x219)))
(assert (x139 (- x432 x103)))
(assert (x177 x294))
(assert (x26 x432 x69 x76 x283))
(assert (x139 (- x76 x100)))
(assert (= x370 (and (not x178) x352)))
(assert (x189 x473 x290 x100 x303))
(assert (= 110688705405039355050572217931781119515373813223972846963051619115990310191104 (x206 (x56 110688705405039355050572217931781119515373813223972846963051619115990310191104))))
(assert (x177 x478))
(assert (x139 (- x153 x81)))
(assert (x139 (- x65 x432)))
(assert (x161 x219 (- x69 x473)))
(assert (x139 (- x69 x283)))
(assert (= x389 (and x185 (not x79))))
(assert (x161 x81 (- x103 x157)))
(assert (x177 x111))
(assert (x189 x157 x153 x219 x69))
(assert (x139 x65))
(assert (x26 x432 x69 x100 x303))
(assert (x177 x349))
(assert (x177 x265))
(assert (x26 x103 x81 x76 x283))
(assert (x177 x385))
(assert (= (x176 2039265891) (x56 2039265891)))
(assert (x161 x76 (- x283 x157)))
(assert (x177 x474))
(assert (x177 x406))
(assert (x26 x69 x219 x60 x65))
(assert (x26 x219 x69 x60 x65))
(assert (x26 x473 x290 x103 x81))
(assert (x26 x157 x153 x100 x303))
(assert (x177 x116))
(assert (= (x206 (x176 x149)) x149))
(assert (x26 x157 x153 x473 x290))
(assert (x26 x157 x153 x69 x432))
(assert (x161 x81 (- x103 x290)))
(assert (= (x176 2127478272) (x56 2127478272)))
(assert (= x279 (=> (and (= x456 x171) (= x90 x262)) x99)))
(assert (= x412 (and x221 (not x251))))
(assert (x177 x480))
(assert (x177 x264))
(assert (x177 x38))
(assert (x177 x445))
(assert (x139 x303))
(assert (x177 x391))
(assert (x189 x76 x283 x432 x69))
(assert (x177 x292))
(assert (x161 x76 (- x283 x153)))
(assert (x26 x153 x157 x69 x432))
(assert (x139 (- x153 x100)))
(assert (= (x206 (x56 100000)) 100000))
(assert (x26 x69 x432 x290 x473))
(assert (x139 (- x283 x60)))
(assert (x189 x153 x157 x290 x473))
(assert (x177 x336))
(assert (x139 (- x290 x219)))
(assert (x139 (- x81 x69)))
(assert (x177 x114))
(assert (= x386 (=> (and (= x171 x59) (= x152 x262)) x279)))
(assert (= (x206 (x56 503383097)) 503383097))
(assert (x139 (- x103 x219)))
(assert (=> (>= 10000 x237) (= (x176 x237) (x56 x237))))
(assert (x161 x303 (- x100 x432)))
(assert (= (x206 (x176 790236105)) 790236105))
(assert (= 826074471 (x206 (x56 826074471))))
(assert (x26 x100 x303 x432 x69))
(assert (x189 x303 x100 x60 x65))
(assert (x26 x65 x60 x283 x76))
(assert (x161 x290 (- x473 x65)))
(assert (x139 (- x100 x153)))
(assert (x177 x427))
(assert (x26 x153 x157 x290 x473))
(assert (x121 (x49 x292 224)))
(assert (x177 x215))
(assert (x139 (- x81 x157)))
(assert (x161 x219 x69))
(assert (x139 (- x303 x219)))
(assert (x189 x60 x65 x76 x283))
(assert (= (x56 954831406) (x176 954831406)))
(assert (x177 x230))
(assert (x177 x147))
(assert (= x77 (or x50 x181)))
(assert (x189 x81 x103 x432 x69))
(assert (x177 x437))
(assert (x177 x216))
(assert (x177 x203))
(assert (x139 (- x432 x290)))
(assert (x177 x113))
(assert (x26 x473 x290 x219 x69))
(assert (x161 x219 (- x69 x81)))
(assert (x26 x60 x65 x432 x69))
(assert (x177 x236))
(assert (x26 x283 x76 x303 x100))
(assert (x139 (- x283 x432)))
(assert (x177 x297))
(assert (x177 x104))
(assert (= x180 (=> (and (and (= x405 (not x450)) (= x122 x288) (= x288 (not (= 0 x474))) (= x122 x450)) (and (= x474 (x218 160)) (= x158 (not (= x83 0))) (= x373 (x218 128)))) x405)))
(assert (x161 x65 (- x60 x303)))
(assert (x177 x456))
(assert (x26 x432 x69 x60 x65))
(assert (x177 x174))
(assert (x26 x69 x219 x153 x157))
(assert (x177 x409))
(assert (= x181 (and (not x465) x98)))
(assert (x177 x151))
(assert (x26 x69 x219 x303 x100))
(assert (x177 x93))
(assert (x189 x69 x432 x290 x473))
(assert (x161 x81 (- x103 x153)))
(assert (x161 x69 (- x432 x103)))
(assert (x161 x76 (- x283 x69)))
(assert (x189 x65 x60 x290 x473))
(assert (x26 x473 x290 x81 x103))
(assert (x177 x191))
(assert (x139 x81))
(assert (x139 (- x60 x432)))
(assert (x161 x65 (- x60 x100)))
(assert (x72 x17 x82))
(assert (x161 x103 (- x81 x473)))
(assert (x161 x76 (- x283 x219)))
(assert (x177 x152))
(assert (x72 (x258 (- x426 1)) x265))
(assert (x26 x283 x76 x432 x69))
(assert (x139 (- x76 x69)))
(assert (= 1871194811 (x206 (x56 1871194811))))
(assert (x139 (- x290 x65)))
(assert (= (x56 2580288415) (x176 2580288415)))
(assert (x26 x81 x103 x157 x153))
(assert (x177 x400))
(assert (x26 x290 x473 x303 x100))
(assert (=> (<= x149 10000) (= (x56 x149) (x176 x149))))
(assert (= x332 (and x321 x193)))
(assert (x177 x363))
(assert (= 4105672269 (x206 (x56 4105672269))))
(assert (x161 x65 (- x60 x283)))
(assert (x26 x219 x69 x153 x157))
(assert (x177 x140))
(assert (x139 (- x76 x81)))
(assert (= (x176 743225245) (x56 743225245)))
(assert (= 25742203781880459408941457317362166305709681742799472914177068605934923677696 (x206 (x56 25742203781880459408941457317362166305709681742799472914177068605934923677696))))
(assert (= (x56 1062488491900878629424266116482631147622884293147) (x176 1062488491900878629424266116482631147622884293147)))
(assert (and (= 27 (x347 9 3)) (= 9 (x347 3 3)) (= (x347 27 3) 81) (= (x347 9 9) 81)))
(assert (x189 x432 x69 x100 x303))
(assert (x139 (- x100 x69)))
(assert (x161 x473 (- x290 x60)))
(assert (x177 x316))
(assert (x26 x81 x103 x153 x157))
(assert (=> (<= x327 10000) (= (x56 x327) (x176 x327))))
(assert (x139 1000))
(assert (x161 x65 (- x60 x69)))
(assert (x72 x163 x367))
(assert (x26 x473 x290 x432 x69))
(assert (x139 (- x65 x69)))
(assert (x121 790236105))
(assert (x189 x65 x60 x103 x81))
(assert (x139 (- x153 x303)))
(assert (x177 x327))
(assert (x139 (- x219 x157)))
(assert (x139 (- x303 x60)))
(assert (x177 x208))
(assert (= (=> (and (or (and (not x256) (and (= x214 (= x126 x471)) (= (x344 1461501637330902918203684832716283019655932542975 x245) x126) (= (ite x214 1 0) x85))) (and (and (= (x436 (x176 x327)) x19) (= x129 x453) (= x23 (x102 (+ 32 x52))) (not (> 4 x175)) (= (x276 x140) x233) (> 3871629458 x188) (= x188 2863377861) (= x346 (x436 (x176 x233))) (= x299 (x190 x129)) (= (not x415) x368) (= 4 x175) (= x120 x299) (= x348 x140) (= x280 (x102 (+ 4 x453))) (not (> 2863377861 x188)) (>= 1461501637330902918203684832716283019655932542975 x233) (= (= x299 0) x415) (= x120 (ite x368 1 0)) (= (x102 (+ x23 32)) x101) (= x175 x115) (= x115 4) (< 0 x19) (= x280 x52) (= (x102 (+ 32 x348)) x453) (not (= 0 x346)) (= x85 x299) (not (= x168 0)) (= x168 (x436 (x176 x327))) (= x146 77196514420459877940035116867124998943289115686762304616657918434777787006976)) x256)) (= x256 (= 0 x31))) x234) x460))
(assert (x26 x76 x283 x153 x157))
(assert (x177 x8))
(assert (x26 x60 x65 x290 x473))
(assert (x189 x103 x81 x76 x283))
(assert (= x234 (=> (and (< 0 x85) (= (x24 (x56 16)) x363) (not (< x69 86400)) (= (< x372 x363) x467) (not (> x113 x222)) (= x69 (x258 (- x449 x372))) (not (< 5000 x63)) (not (< x63 1)) (= x86 (x24 (x56 15))) (= (x24 (x56 13)) x61) (= (x24 (x56 14)) x310)) (and (=> (and (and (= (< x61 x310) x465) (or (and (not x465) (and (> x111 0) (= x111 (x258 (- x363 x86))) (= (x110 x64 x111) x437) (= x47 x457) (= x157 (x258 (- x372 x86))) (= x47 (x258 (- x61 x437))) (= x153 (x258 (- x61 x310))) (= (x74 (x347 x153 x157)) x64))) (and (and (= x275 x457) (= x65 (x258 (- x372 x86))) (= x60 (x258 (- x310 x61))) (= (x74 (x347 x60 x65)) x444) (= (x110 x444 x229) x391) (= x275 (x102 (+ x61 x391))) (< 0 x229) (= (x258 (- x363 x86)) x229)) x465))) x467) x272) (=> (and (and (= x310 x219) (= x116 0)) (not x467)) x132)))))
(assert (x189 x283 x76 x60 x65))
(assert (and (x169 86400 x219) (x337 86400 x219) (x434 86400 x219) (x452 86400 x219) (x388 86400 x219) (and (= (- (* x219 86400) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x219)) (x347 (- 115792089237316195423570985008687907853269984665640564039457584007913129553536) x219)) (= (x347 (- 115792089237316195423570985008687907853269984665640564039457584007913129553536) (- x219 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x219 115792089237316195423570985008687907853269984665640564039457584007913129639936) 86400) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x219 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* (- x219 115792089237316195423570985008687907853269984665640564039457584007913129639936) 86400) (x347 86400 (- x219 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* x219 86400) (x347 86400 x219))))
(assert (x161 x76 (- x283 x303)))
(assert (x72 x58 x219))
(assert (x177 x449))
(assert (x26 x100 x303 x219 x69))
(assert (x161 x60 (- x65 x100)))
(assert (x161 x103 (- x81 x432)))
(assert (= 1984976886 (x206 (x56 1984976886))))
(assert (x26 x100 x303 x283 x76))
(assert (x139 (- x473 x100)))
(assert (= 2064814097 (x206 (x56 2064814097))))
(assert (x26 x219 x69 x81 x103))
(assert (x26 x69 x219 x103 x81))
(assert (= (x176 4105672269) (x56 4105672269)))
(assert (x177 x19))
(assert (x177 x346))
(assert (x139 (- x81 x60)))
(assert (x161 x69 (- x432 x81)))
(assert (x189 x65 x60 x432 x69))
(assert (x177 x81))
(assert (x26 x60 x65 x69 x432))
(assert (x177 x160))
(assert (= (or x304 x84) x407))
(assert (x139 (- x283 x100)))
(assert (x139 (- x69 x473)))
(assert (=> (>= 10000 x316) (= (x176 x316) (x56 x316))))
(assert (x139 (- x76 x303)))
(assert (x161 x432 (- x69 x60)))
(assert (x177 x241))
(assert (x189 x81 x103 x76 x283))
(assert (x139 (- x69 x153)))
(assert (x189 x69 x219 x153 x157))
(assert (x139 (- x76 x219)))
(assert (x139 (- x69 x60)))
(assert (x177 x267))
(assert (= (x206 (x176 x396)) x396))
(assert (x177 x87))
(assert (x139 (- x283 x69)))
(assert (= (x110 x292 26959946667150639794667015087019630673637144422540572481103610249216) (x49 x292 224)))
(assert (x26 x65 x60 x69 x219))
(assert (x139 (- x65 x303)))
(assert (= (and (not x256) x364) x40))
(assert (x161 x60 x65))
(assert (x26 x76 x283 x219 x69))
(assert (x177 x432))
(assert (x26 x103 x81 x60 x65))
(assert (x177 x188))
(assert (x177 x133))
(assert (= (and x293 x125) x28))
(assert (= (x56 110688705405039355050572217931781119515373813223972846963051619115990310191104) (x176 110688705405039355050572217931781119515373813223972846963051619115990310191104)))
(assert (x161 x60 (- x65 x69)))
(assert (x177 x135))
(assert (x177 x69))
(assert (x139 (- x153 x473)))
(assert (x161 x303 (- x100 x290)))
(assert (x177 x228))
(assert (x161 x69 (- x432 x157)))
(assert (x177 x220))
(assert (x161 x100 (- x303 x60)))
(assert (x139 x100))
(assert (x189 x157 x153 x100 x303))
(assert (x139 (- x290 x69)))
(assert (x139 (- x103 x290)))
(assert true)
(assert (x189 x69 x219 x76 x283))
(assert (x139 (- x157 x303)))
(assert (= (x56 1461501637330902918203684832716283019655932542975) (x176 1461501637330902918203684832716283019655932542975)))
(assert (x161 x100 (- x303 x432)))
(assert (x161 x69 (- x219 x81)))
(assert (x139 (- x157 x432)))
(assert (and (x169 1000 x37) (x337 1000 x37) (x434 1000 x37) (x452 1000 x37) (x388 1000 x37) (and (= (- (* x37 1000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x37)) (x347 (- 115792089237316195423570985008687907853269984665640564039457584007913129638936) x37)) (= (x347 (- 115792089237316195423570985008687907853269984665640564039457584007913129638936) (- x37 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x37 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x37 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* (- x37 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000) (x347 1000 (- x37 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* x37 1000) (x347 1000 x37))))
(assert (= (x206 (x56 2580288415)) 2580288415))
(assert (x189 x283 x76 x153 x157))
(assert (= (and x67 (not x467)) x164))
(assert (x26 x65 x60 x473 x290))
(assert (x177 x5))
(assert (x189 x290 x473 x60 x65))
(assert (x189 x432 x69 x60 x65))
(assert (= (x206 (x56 77196514420459877940035116867124998943289115686762304616657918434777787006976)) 77196514420459877940035116867124998943289115686762304616657918434777787006976))
(assert (x366 x191))
(assert (= (x176 106320276355336348263208190817157392285036095892762275362566149969828045127680) (x56 106320276355336348263208190817157392285036095892762275362566149969828045127680)))
(assert (= (x56 503383097) (x176 503383097)))
(assert (x139 (- x76 x432)))
(assert (x177 x44))
(assert (x189 x432 x69 x76 x283))
(assert (= (x56 3996650231) (x176 3996650231)))
(assert (x161 x65 (- x60 x473)))
(assert (= x341 (=> (and (= x83 1) (= x93 x294)) x180)))
(assert (x177 x367))
(assert (x189 x157 x153 x76 x283))
(assert (x161 x81 (- x103 x219)))
(assert (x26 x219 x69 x473 x290))
(assert (x235 x245))
(assert (x161 x81 (- x103 x76)))
(assert (= (=> (and (or (and (and (= (x102 (+ x230 1)) x186) (= x480 (x74 (* 86400 x432))) (= (x74 (x347 x219 x69)) x58) (= (x110 x179 x58) x230) (= (x258 (- x480 1)) x179) (ite x75 x75 (= (x110 x58 x219) x69)) (< (* x432 86400) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x75 (= x219 0)) (not (= 0 x58)) (= x398 86400) (= x186 x390)) x321) (and (and (not (= x265 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x347 x432 x69)) (= (x74 (* x219 86400)) x426) (= x390 x338) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (* x219 86400)) (= 86400 x400) (= (ite (= 0 x426) 0 (x102 (+ 1 (x74 (x110 (x258 (- x426 1)) x265))))) x338) (= x265 (x74 (x347 x432 x69)))) (not x321))) (and (= 0 x116) (< (* x63 1000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (< x219 x432) x321) (= x419 1000) (= x432 (x74 (* 1000 x37))))) x463) x132))
(assert (x177 x101))
(assert (x161 x69 (- x219 x290)))
(assert (x26 x60 x65 x81 x103))
(assert (x139 (- x69 x76)))
(assert (x161 x219 (- x69 x65)))
(assert (x177 x275))
(assert (x26 x65 x60 x303 x100))
(assert (x139 (- x76 x103)))
(assert (x26 x100 x303 x69 x219))
(assert (= (x56 3812870723) (x176 3812870723)))
(assert (= (and (not x325) x387) x185))
(assert (x139 (- x473 x219)))
(assert (x161 x60 (- x65 x432)))
(assert (x26 x103 x81 x219 x69))
(assert (x189 x100 x303 x290 x473))
(assert (x177 x143))
(assert (x177 x285))
(assert (x161 x153 (- x157 x432)))
(assert (x177 x212))
(assert (x139 (- x60 x290)))
(assert (x177 x55))
(assert (x139 (- x473 x81)))
(assert (x189 x103 x81 x60 x65))
(assert (x189 x103 x81 x432 x69))
(assert (= (x56 3008386744) (x176 3008386744)))
(assert (x26 x473 x290 x65 x60))
(assert (x189 x290 x473 x103 x81))
(assert (x139 (- x69 x303)))
(assert (x235 1461501637330902918203684832716283019655932542976))
(assert (= (x206 (x56 70508962019145425934951811999677760319478833095128838543097651878529435959296)) 70508962019145425934951811999677760319478833095128838543097651878529435959296))
(assert (x139 (- x303 x157)))
(assert (x161 x473 (- x290 x81)))
(assert (x189 x76 x283 x219 x69))
(assert (x139 (- x473 x157)))
(assert (= x41 (x206 (x176 x41))))
(assert (x161 x157 (- x153 x219)))
(assert (x139 (- x432 x473)))
(assert (= (x206 (x56 3567393941)) 3567393941))
(assert (and (x169 86400 x432) (x337 86400 x432) (x434 86400 x432) (x452 86400 x432) (x388 86400 x432) (and (= (- (* x432 86400) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 x432)) (x347 (- 115792089237316195423570985008687907853269984665640564039457584007913129553536) x432)) (= (x347 (- 115792089237316195423570985008687907853269984665640564039457584007913129553536) (- x432 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x432 115792089237316195423570985008687907853269984665640564039457584007913129639936) 86400) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x432 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* (- x432 115792089237316195423570985008687907853269984665640564039457584007913129639936) 86400) (x347 86400 (- x432 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (* x432 86400) (x347 86400 x432))))
(assert (x189 x432 x69 x153 x157))
(assert (x177 x90))
(assert (x26 x432 x69 x290 x473))
(assert (x189 x103 x81 x219 x69))
(assert (x26 x473 x290 x69 x432))
(assert (x26 x60 x65 x303 x100))
(assert (x139 (- x283 x103)))
(assert (x26 x103 x81 x432 x69))
(assert (x139 (- x100 x60)))
(assert (x139 (- x153 x76)))
(assert (= x84 (or x334 x404)))
(assert (= (x176 (x206 x381)) x381))
(assert (= (x206 (x56 1816029635)) 1816029635))
(assert (x177 x369))
(assert (x177 x11))
(assert (x161 x69 (- x219 x100)))
(assert (x177 x394))
(assert (x161 x69 (- x432 x303)))
(assert (=> (>= 10000 x396) (= (x176 x396) (x56 x396))))
(assert (x139 (- x283 x153)))
(assert (x189 x153 x157 x219 x69))
(assert (x26 x303 x100 x60 x65))
(assert (x161 x473 (- x290 x65)))
(assert (x177 x425))
(assert (= (and x256 x364) x199))
(assert (x177 x149))
(assert (x26 x303 x100 x69 x432))
(assert (= 1531409238 (x206 (x56 1531409238))))
(assert (x26 x100 x303 x153 x157))
(assert (= (x176 599290589) (x56 599290589)))
(assert (= (x176 70508962019145425934951811999677760319478833095128838543097651878529435959296) (x56 70508962019145425934951811999677760319478833095128838543097651878529435959296)))
(assert (= 922701707 (x206 (x56 922701707))))
(assert (x177 x227))
(assert (x161 x219 (- x69 x60)))
(assert (x139 (- x103 x65)))
(assert (x177 x195))
(assert (x177 x313))
(assert (x139 (- x76 x153)))
(assert (= 1738207182 (x206 (x56 1738207182))))
(assert (x161 x283 (- x76 x100)))
(assert (x72 x179 x58))
(assert (x354 x245))
(assert (x26 x157 x153 x432 x69))
(assert (x451 x245))
(assert (x139 (- x60 x283)))
(assert (x177 x138))
(assert (x161 x76 (- x283 x65)))
(assert (x161 x69 (- x432 x473)))
(assert (x139 (- x432 x76)))
(assert (x177 x365))
(assert (x26 x69 x432 x283 x76))
(assert (x161 x283 (- x76 x153)))
(assert (= (and x193 (not x321)) x238))
(assert (x161 x290 (- x473 x103)))
(assert (x139 (- x157 x69)))
(assert (= (x56 686821956) (x176 686821956)))
(assert (x26 x65 x60 x432 x69))
(assert (x189 x219 x69 x290 x473))
(assert (x177 x384))
(assert (x26 x219 x69 x76 x283))
(assert (x189 x60 x65 x100 x303))
(assert (=> (>= 10000 x41) (= (x56 x41) (x176 x41))))
(assert (= (=> (and (= 1 x174) (= x248 x291)) x213) x51))
(assert (x139 x432))
(assert (x177 x401))
(assert (x177 x59))
(assert (x26 x432 x69 x153 x157))
(assert (x189 x153 x157 x432 x69))
(assert (x26 x219 x69 x290 x473))
(assert (x189 x103 x81 x290 x473))
(assert (= (x56 25742203781880459408941457317362166305709681742799472914177068605934923677696) (x176 25742203781880459408941457317362166305709681742799472914177068605934923677696)))
(assert (x139 (- x100 x65)))
(assert (x177 x89))
(assert (x26 x157 x153 x81 x103))
(assert (x26 x290 x473 x153 x157))
(assert (x161 x157 (- x153 x432)))
(assert (x139 x473))
(assert (= (and x465 x98) x50))
(assert (x366 x111))
(assert (x139 (- x69 x65)))
(assert (x189 x290 x473 x432 x69))
(assert (x366 x292))
(assert (= (x206 (x56 1862597803)) 1862597803))
(assert (x161 x303 (- x100 x65)))
(assert (x177 x277))
(assert (x139 x60))
(assert (x26 x76 x283 x81 x103))
(assert (x189 x432 x69 x290 x473))
(check-sat)
(exit)