(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x2432 0)) (((x2760 (x2321 x2432) (x2002 x2432) (x3617 Int)) (x3059 (x4572 Int)) (x3248 (x4130 x2432) (x1005 Int)))))
(declare-fun x504 () Bool)
(declare-fun x483 () x2432)
(declare-fun x3629 () Bool)
(declare-fun x105 () Bool)
(declare-fun x4180 () Bool)
(declare-fun x2509 () Int)
(declare-fun x291 () Int)
(declare-fun x1105 () Bool)
(declare-fun x2689 () Int)
(declare-fun x1449 () Bool)
(declare-fun x2951 () Bool)
(declare-fun x3712 () Bool)
(declare-fun x3902 () Bool)
(declare-fun x3690 () Bool)
(declare-fun x3474 () Bool)
(declare-fun x629 () Int)
(declare-fun x5259 () Bool)
(declare-fun x3240 () Int)
(declare-fun x4425 () Int)
(declare-fun x140 (x2432) Int)
(declare-fun x3638 (Int) Int)
(declare-fun x4383 () Bool)
(declare-fun x212 () Int)
(declare-fun x1792 () Bool)
(declare-fun x2377 () Bool)
(declare-fun x339 () Bool)
(declare-fun x1696 () Bool)
(declare-fun x3542 () Int)
(declare-fun x484 () Bool)
(declare-fun x2311 () Int)
(declare-fun x3204 () Bool)
(declare-fun x3660 (Int) Int)
(declare-fun x2072 () Bool)
(declare-fun x4287 () Int)
(declare-fun x83 () Int)
(declare-fun x5233 () Int)
(declare-fun x3081 () Bool)
(declare-fun x433 () x2432)
(declare-fun x4625 () Int)
(declare-fun x2613 () Bool)
(declare-fun x1876 (x2432) Int)
(declare-fun x3395 () Bool)
(declare-fun x3302 () Bool)
(declare-fun x3688 () Bool)
(declare-fun x2130 () Int)
(declare-fun x2556 () Int)
(declare-fun x3348 () Int)
(declare-fun x150 () Int)
(declare-fun x828 () x2432)
(declare-fun x2070 () Int)
(declare-fun x791 () Int)
(declare-fun x932 () Int)
(declare-fun x616 () Int)
(declare-fun x5282 () Int)
(declare-fun x4803 () Bool)
(declare-fun x572 () x2432)
(declare-fun x5146 () Int)
(declare-fun x5285 () Bool)
(declare-fun x303 () Bool)
(declare-fun x230 () Bool)
(declare-fun x5426 () Bool)
(declare-fun x1278 () Bool)
(declare-fun x4033 () Int)
(declare-fun x1562 () Int)
(declare-fun x379 () Int)
(declare-fun x5268 () Int)
(declare-fun x35 () Int)
(declare-fun x823 () Bool)
(declare-fun x2688 () Int)
(declare-fun x4587 () Int)
(declare-fun x3863 () Bool)
(declare-fun x4463 () Bool)
(declare-fun x5321 () Int)
(declare-fun x4977 () Bool)
(declare-fun x1890 () Int)
(declare-fun x383 () Bool)
(declare-fun x3582 () x2432)
(declare-fun x4774 () Bool)
(declare-fun x1088 () Int)
(declare-fun x2028 () Int)
(declare-fun x3967 () Bool)
(declare-fun x3919 () Bool)
(declare-fun x3550 () x2432)
(declare-fun x4500 () Bool)
(declare-fun x4050 () Int)
(declare-fun x3009 () Int)
(declare-fun x2544 () Bool)
(declare-fun x203 () Bool)
(declare-fun x5409 () Int)
(declare-fun x4628 () Int)
(declare-fun x3399 () Int)
(declare-fun x3875 () Bool)
(declare-fun x4527 () Bool)
(declare-fun x4962 () Int)
(declare-fun x1630 () Bool)
(declare-fun x64 () Int)
(declare-fun x3560 () Bool)
(declare-fun x4701 () x2432)
(declare-fun x2268 () Int)
(declare-fun x5209 () Bool)
(declare-fun x205 () Bool)
(declare-fun x2016 () Bool)
(declare-fun x3449 () x2432)
(declare-fun x1438 () Bool)
(declare-fun x2615 () Bool)
(declare-fun x2721 () Bool)
(declare-fun x1872 () Bool)
(declare-fun x4471 () Int)
(declare-fun x2781 () Int)
(declare-fun x4750 () Bool)
(declare-fun x1357 () x2432)
(declare-fun x4024 () Int)
(declare-fun x4495 () Bool)
(declare-fun x2666 () Int)
(declare-fun x729 () Bool)
(declare-fun x341 () Bool)
(declare-fun x3456 () Int)
(declare-fun x2947 () Bool)
(declare-fun x3785 () Bool)
(declare-fun x335 () Bool)
(declare-fun x2240 () Bool)
(declare-fun x4401 () Int)
(declare-fun x2822 () Int)
(declare-fun x941 () Int)
(declare-fun x2910 () Int)
(declare-fun x2950 () Int)
(declare-fun x1952 () Bool)
(declare-fun x3530 () Int)
(declare-fun x3154 () Bool)
(declare-fun x3591 () Int)
(declare-fun x4127 () Bool)
(declare-fun x3385 () x2432)
(declare-fun x4847 () Int)
(declare-fun x492 () Bool)
(declare-fun x268 () x2432)
(declare-fun x1032 () Int)
(declare-fun x413 () Bool)
(declare-fun x331 () Bool)
(declare-fun x5434 () Bool)
(declare-fun x4280 () Bool)
(declare-fun x3205 () Int)
(declare-fun x4101 () Int)
(declare-fun x5336 () Int)
(declare-fun x2757 () Bool)
(declare-fun x4995 () Bool)
(declare-fun x2880 () Int)
(declare-fun x2961 () Int)
(declare-fun x3551 () Bool)
(declare-fun x225 () Bool)
(declare-fun x357 (Int) Int)
(declare-fun x3012 () Int)
(declare-fun x221 () Bool)
(declare-fun x1814 () Int)
(declare-fun x2410 () Int)
(declare-fun x1594 () Bool)
(declare-fun x1343 () Int)
(declare-fun x3815 () Int)
(declare-fun x1772 () Bool)
(declare-fun x4727 () Bool)
(declare-fun x1481 () Bool)
(declare-fun x3562 () Int)
(declare-fun x1871 () Bool)
(declare-fun x3472 () Bool)
(declare-fun x4802 () Int)
(declare-fun x3315 () Bool)
(declare-fun x2548 () Bool)
(declare-fun x3133 () x2432)
(declare-fun x5273 () Bool)
(declare-fun x2214 () Bool)
(declare-fun x1599 () Int)
(declare-fun x3311 (x2432) Int)
(declare-fun x4571 () Bool)
(declare-fun x115 () Bool)
(declare-fun x3805 () Bool)
(declare-fun x2405 () Bool)
(declare-fun x4695 () Int)
(declare-fun x1968 () x2432)
(declare-fun x2168 () Int)
(declare-fun x3658 (Int Int) Int)
(declare-fun x1996 () Bool)
(declare-fun x795 () Int)
(declare-fun x1056 () Int)
(declare-fun x4066 () Bool)
(declare-fun x2913 () Int)
(declare-fun x1739 () Int)
(declare-fun x1322 () Bool)
(declare-fun x2081 () Bool)
(declare-fun x914 () Bool)
(declare-fun x1267 () Int)
(declare-fun x621 () Bool)
(declare-fun x4991 () Int)
(declare-fun x3070 () Bool)
(declare-fun x1031 () Bool)
(declare-fun x4232 () Int)
(declare-fun x2476 () Bool)
(declare-fun x3378 () Bool)
(declare-fun x4139 () Bool)
(declare-fun x5041 () Bool)
(declare-fun x2442 () x2432)
(declare-fun x925 () Int)
(declare-fun x2399 () Int)
(declare-fun x3039 () x2432)
(declare-fun x3652 () Bool)
(declare-fun x3787 () Bool)
(declare-fun x3057 () Bool)
(declare-fun x3482 () x2432)
(declare-fun x4475 () Int)
(declare-fun x2140 () Int)
(declare-fun x2210 () Bool)
(declare-fun x1761 () Bool)
(declare-fun x1628 () Bool)
(declare-fun x5162 () Int)
(declare-fun x226 () Int)
(declare-fun x2200 () x2432)
(declare-fun x3286 () Bool)
(declare-fun x1891 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x1769 () Bool)
(declare-fun x923 () Int)
(declare-fun x1725 () Int)
(declare-fun x3611 () Int)
(declare-fun x848 () Int)
(declare-fun x1518 () Bool)
(declare-fun x2050 () Bool)
(declare-fun x4634 () Int)
(declare-fun x1913 () Bool)
(declare-fun x1709 () Bool)
(declare-fun x2326 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x5224 () x2432)
(declare-fun x319 () Bool)
(declare-fun x969 () Bool)
(declare-fun x5138 () x2432)
(declare-fun x597 () Bool)
(declare-fun x2012 () x2432)
(declare-fun x3697 () Bool)
(declare-fun x2958 () Bool)
(declare-fun x4948 () Bool)
(declare-fun x2401 () Int)
(declare-fun x439 () Int)
(declare-fun x1415 () Bool)
(declare-fun x4204 () x2432)
(declare-fun x1625 () Bool)
(declare-fun x1430 () x2432)
(declare-fun x4503 () Bool)
(declare-fun x2899 () x2432)
(declare-fun x5013 () Bool)
(declare-fun x2347 () Bool)
(declare-fun x4626 () Bool)
(declare-fun x2420 () Bool)
(declare-fun x416 () Int)
(declare-fun x5100 () Bool)
(declare-fun x4648 () Bool)
(declare-fun x4413 () Int)
(declare-fun x915 () Int)
(declare-fun x4205 () Bool)
(declare-fun x3529 () Bool)
(declare-fun x76 () Bool)
(declare-fun x5331 () Int)
(declare-fun x4550 () Bool)
(declare-fun x1293 () Bool)
(declare-fun x3981 () Bool)
(declare-fun x1912 () Bool)
(declare-fun x2744 () Bool)
(declare-fun x4505 () Bool)
(declare-fun x4843 () Bool)
(declare-fun x2664 () Int)
(declare-fun x2446 () Bool)
(declare-fun x4924 () Int)
(declare-fun x4020 () Int)
(declare-fun x822 () Bool)
(declare-fun x679 () Bool)
(declare-fun x1826 () Int)
(declare-fun x4661 () Bool)
(declare-fun x2645 () x2432)
(declare-fun x1684 () Int)
(declare-fun x5171 () Int)
(declare-fun x408 () Int)
(declare-fun x3255 () Int)
(declare-fun x3245 () Bool)
(declare-fun x2387 () Bool)
(declare-fun x448 () Int)
(declare-fun x3324 () Int)
(declare-fun x1638 () Int)
(declare-fun x2742 () Bool)
(declare-fun x4240 () Int)
(declare-fun x4470 () Bool)
(declare-fun x1832 () Bool)
(declare-fun x5137 () Bool)
(declare-fun x2497 () Int)
(declare-fun x2225 () Int)
(declare-fun x2671 () Bool)
(declare-fun x994 () Int)
(declare-fun x3623 () Bool)
(declare-fun x1859 () Bool)
(declare-fun x4008 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x3433 () Int)
(declare-fun x1194 () Int)
(declare-fun x2440 () x2432)
(declare-fun x590 () Bool)
(declare-fun x3873 () Int)
(declare-fun x854 () Int)
(declare-fun x580 () Bool)
(declare-fun x850 () Int)
(declare-fun x1370 () Int)
(declare-fun x3330 () Int)
(declare-fun x2717 () Bool)
(declare-fun x2296 () Bool)
(declare-fun x5144 () Bool)
(declare-fun x2141 () Bool)
(declare-fun x5396 () Bool)
(declare-fun x2367 () x2432)
(declare-fun x2982 () Int)
(declare-fun x3223 () Bool)
(declare-fun x2525 () Bool)
(declare-fun x4619 () Bool)
(declare-fun x1834 () Bool)
(declare-fun x3236 () Bool)
(declare-fun x3811 () Int)
(declare-fun x4984 () Int)
(declare-fun x1825 () Int)
(declare-fun x5219 () Int)
(declare-fun x2957 () Bool)
(declare-fun x1429 () Int)
(declare-fun x3851 () Bool)
(declare-fun x2849 () Int)
(declare-fun x2714 () Int)
(declare-fun x84 (x2432) Int)
(declare-fun x530 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x353 () Int)
(declare-fun x4615 () Bool)
(declare-fun x1520 () Bool)
(declare-fun x2114 () Bool)
(declare-fun x3518 () Bool)
(declare-fun x1641 () Bool)
(declare-fun x20 () Int)
(declare-fun x671 () Int)
(declare-fun x4965 () x2432)
(declare-fun x3308 () Int)
(declare-fun x3471 () Bool)
(declare-fun x620 () Int)
(declare-fun x510 () Bool)
(declare-fun x386 () Bool)
(declare-fun x3075 () x2432)
(declare-fun x1905 () Bool)
(declare-fun x1299 () Bool)
(declare-fun x3468 () Bool)
(declare-fun x3585 () x2432)
(declare-fun x3152 () Bool)
(declare-fun x1787 () x2432)
(declare-fun x4099 () Int)
(declare-fun x739 () Bool)
(declare-fun x4458 () Int)
(declare-fun x4918 () Bool)
(declare-fun x3128 () Int)
(declare-fun x1671 () Bool)
(declare-fun x4230 () Int)
(declare-fun x1332 () Int)
(declare-fun x1773 () x2432)
(declare-fun x4434 () Int)
(declare-fun x673 () Bool)
(declare-fun x370 () Int)
(declare-fun x4350 () Bool)
(declare-fun x3748 () Bool)
(declare-fun x3094 () Int)
(declare-fun x2578 (Int) Int)
(declare-fun x11 () Bool)
(declare-fun x4006 () Int)
(declare-fun x5071 () Bool)
(declare-fun x2634 () Int)
(declare-fun x4686 () Int)
(declare-fun x5023 () Int)
(declare-fun x3959 () Bool)
(declare-fun x2814 () Bool)
(declare-fun x3222 () Bool)
(declare-fun x2793 () Int)
(declare-fun x3423 () Bool)
(declare-fun x1023 () Int)
(declare-fun x4467 () Bool)
(declare-fun x1657 () Bool)
(declare-fun x2290 () Bool)
(declare-fun x5161 () Int)
(declare-fun x1525 () Bool)
(declare-fun x3149 () x2432)
(declare-fun x418 () Bool)
(declare-fun x4307 () Int)
(declare-fun x656 () Bool)
(declare-fun x467 () x2432)
(declare-fun x4284 () Bool)
(declare-fun x778 () x2432)
(declare-fun x4546 () Int)
(declare-fun x4300 () Int)
(declare-fun x2479 () Int)
(declare-fun x3435 () Bool)
(declare-fun x1914 () x2432)
(declare-fun x1359 (Int) Int)
(declare-fun x2089 () Bool)
(declare-fun x4712 () Int)
(declare-fun x3895 () Bool)
(declare-fun x3676 () Int)
(declare-fun x3774 () Bool)
(declare-fun x5261 () Bool)
(declare-fun x4209 () Int)
(declare-fun x4421 () Bool)
(declare-fun x5253 () Bool)
(declare-fun x3473 () Bool)
(declare-fun x1694 () Int)
(declare-fun x4025 () Int)
(declare-fun x3853 () Int)
(declare-fun x3730 () x2432)
(declare-fun x2871 () Bool)
(declare-fun x5211 () Int)
(declare-fun x897 () Int)
(declare-fun x4140 () Bool)
(declare-fun x3115 () Int)
(declare-fun x2127 () Bool)
(declare-fun x3108 () Int)
(declare-fun x900 () Bool)
(declare-fun x1000 () Int)
(declare-fun x3069 () Int)
(declare-fun x2482 () Bool)
(declare-fun x3144 () Int)
(declare-fun x3309 () Int)
(declare-fun x1981 () Bool)
(declare-fun x5302 () Bool)
(declare-fun x4217 () Bool)
(declare-fun x2684 () Int)
(declare-fun x2621 () Bool)
(declare-fun x2022 () Bool)
(declare-fun x491 () x2432)
(declare-fun x3590 () Int)
(declare-fun x4857 () Int)
(declare-fun x4279 () Bool)
(declare-fun x1351 () Int)
(declare-fun x3035 () Int)
(declare-fun x2496 () Int)
(declare-fun x1538 () Int)
(declare-fun x2457 () Int)
(declare-fun x1892 () Bool)
(declare-fun x5097 () Bool)
(declare-fun x4990 () Int)
(declare-fun x147 () Bool)
(declare-fun x3519 () Int)
(declare-fun x3084 () Int)
(declare-fun x78 () Bool)
(declare-fun x3195 () Bool)
(declare-fun x2334 () Int)
(declare-fun x3536 () x2432)
(declare-fun x796 () Bool)
(declare-fun x280 () Bool)
(declare-fun x809 () Bool)
(declare-fun x4144 () Int)
(declare-fun x5425 () Bool)
(declare-fun x942 () Bool)
(declare-fun x2147 (Int) x2432)
(declare-fun x1690 () Bool)
(declare-fun x4267 () Bool)
(declare-fun x3025 () Bool)
(declare-fun x4158 () Bool)
(declare-fun x2834 () Bool)
(declare-fun x2373 () Bool)
(declare-fun x4699 () Bool)
(declare-fun x3310 () Bool)
(declare-fun x5352 () Bool)
(declare-fun x327 () Int)
(declare-fun x3150 () Bool)
(declare-fun x4544 () Bool)
(declare-fun x3145 () Bool)
(declare-fun x1480 () Bool)
(declare-fun x797 () Int)
(declare-fun x1011 () Bool)
(declare-fun x4530 () Bool)
(declare-fun x2125 () Int)
(declare-fun x298 () x2432)
(declare-fun x2494 () Bool)
(declare-fun x5378 () Int)
(declare-fun x3934 () Int)
(declare-fun x603 () x2432)
(declare-fun x2046 () x2432)
(declare-fun x229 () Int)
(declare-fun x4100 () Bool)
(declare-fun x5264 () Bool)
(declare-fun x4358 () Bool)
(declare-fun x2949 () Int)
(declare-fun x2561 () x2432)
(declare-fun x1509 () Bool)
(declare-fun x1987 () Bool)
(declare-fun x624 () Bool)
(declare-fun x2231 () Int)
(declare-fun x959 () x2432)
(declare-fun x4629 () Bool)
(declare-fun x1199 () Bool)
(declare-fun x5003 () Int)
(declare-fun x4899 () Int)
(declare-fun x168 () Bool)
(declare-fun x527 () Int)
(declare-fun x3287 () Bool)
(declare-fun x5132 () Bool)
(declare-fun x3565 (x2432) Int)
(declare-fun x3022 () Int)
(declare-fun x1019 () x2432)
(declare-fun x4007 () x2432)
(declare-fun x66 () Int)
(declare-fun x1582 () Int)
(declare-fun x346 () x2432)
(declare-fun x3890 () Bool)
(declare-fun x4879 () Bool)
(declare-fun x1414 () Bool)
(declare-fun x2176 () Bool)
(declare-fun x5274 () Int)
(declare-fun x288 () Bool)
(declare-fun x2693 () Bool)
(declare-fun x4176 () x2432)
(declare-fun x5092 () Bool)
(declare-fun x642 () Int)
(declare-fun x689 () Bool)
(declare-fun x4107 () Bool)
(declare-fun x1686 () Int)
(declare-fun x4522 () Int)
(declare-fun x3414 () Bool)
(declare-fun x1191 () Bool)
(declare-fun x3990 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x1223 () x2432)
(declare-fun x1163 () Bool)
(declare-fun x2560 () Bool)
(declare-fun x2873 () Int)
(declare-fun x5358 () Int)
(declare-fun x4705 () Int)
(declare-fun x1115 () Int)
(declare-fun x2877 () Bool)
(declare-fun x4286 () Int)
(declare-fun x5448 () x2432)
(declare-fun x878 () Int)
(declare-fun x272 () Int)
(declare-fun x2532 () Bool)
(declare-fun x3705 () Bool)
(declare-fun x3889 () x2432)
(declare-fun x1230 () Bool)
(declare-fun x2270 () x2432)
(declare-fun x4631 () Int)
(declare-fun x4 () Bool)
(declare-fun x2488 () x2432)
(declare-fun x2912 () Bool)
(declare-fun x5228 () Int)
(declare-fun x3819 () Int)
(declare-fun x2604 () Bool)
(declare-fun x5283 () Bool)
(declare-fun x992 () Bool)
(declare-fun x1924 () Bool)
(declare-fun x957 () Bool)
(declare-fun x375 () Bool)
(declare-fun x1585 () Bool)
(declare-fun x3136 () Bool)
(declare-fun x4102 () Bool)
(declare-fun x3971 () x2432)
(declare-fun x4498 () x2432)
(declare-fun x4228 () x2432)
(declare-fun x4766 () Int)
(declare-fun x4330 () Int)
(declare-fun x4136 () Int)
(declare-fun x1127 () Bool)
(declare-fun x4397 () Int)
(declare-fun x5449 () Int)
(declare-fun x5198 () Int)
(declare-fun x1001 () Int)
(declare-fun x4870 () Bool)
(declare-fun x4819 () Int)
(declare-fun x3034 () Int)
(declare-fun x1806 (Int) Int)
(declare-fun x4186 () Bool)
(declare-fun x2806 () x2432)
(declare-fun x1369 () Int)
(declare-fun x4109 () Int)
(declare-fun x3155 () Bool)
(declare-fun x3055 () Int)
(declare-fun x68 () Bool)
(declare-fun x1921 () Bool)
(declare-fun x1660 () Int)
(declare-fun x1403 () Int)
(declare-fun x1160 () Int)
(declare-fun x4791 () Bool)
(declare-fun x3888 () x2432)
(declare-fun x471 (x2432) Int)
(declare-fun x1747 () Bool)
(declare-fun x636 () Bool)
(declare-fun x4873 () Bool)
(declare-fun x1418 () Bool)
(declare-fun x4150 () Bool)
(declare-fun x4015 () Int)
(declare-fun x3340 () Bool)
(declare-fun x3592 (x2432) Int)
(declare-fun x5381 () Int)
(declare-fun x4416 () Bool)
(declare-fun x4687 () Int)
(declare-fun x3110 () Int)
(declare-fun x4063 () Int)
(declare-fun x4351 () Bool)
(declare-fun x762 () Bool)
(declare-fun x2676 () Int)
(declare-fun x2221 () Bool)
(declare-fun x4540 () Int)
(declare-fun x844 () Int)
(declare-fun x1862 () Bool)
(declare-fun x1317 () x2432)
(declare-fun x4106 () x2432)
(declare-fun x982 () Bool)
(declare-fun x2332 () Bool)
(declare-fun x534 () x2432)
(declare-fun x1333 () Bool)
(declare-fun x978 () Bool)
(declare-fun x984 () Bool)
(declare-fun x2591 () Bool)
(declare-fun x3769 () Int)
(declare-fun x3687 () x2432)
(declare-fun x3648 () Int)
(declare-fun x63 () Bool)
(declare-fun x3684 () Bool)
(declare-fun x3332 () Int)
(declare-fun x3325 () x2432)
(declare-fun x974 () Bool)
(declare-fun x2515 () Bool)
(declare-fun x669 () x2432)
(declare-fun x1616 () Int)
(declare-fun x4769 () Bool)
(declare-fun x285 () Int)
(declare-fun x4551 () Bool)
(declare-fun x1554 () Int)
(declare-fun x3568 () Bool)
(declare-fun x3166 () Bool)
(declare-fun x3538 () Bool)
(declare-fun x1879 () x2432)
(declare-fun x1148 () Int)
(declare-fun x847 () Int)
(declare-fun x541 () Int)
(declare-fun x2345 () Bool)
(declare-fun x2879 () Bool)
(declare-fun x3031 () Int)
(declare-fun x243 () Bool)
(declare-fun x3007 () Bool)
(declare-fun x211 () Int)
(declare-fun x3182 () Int)
(declare-fun x2303 () Bool)
(declare-fun x1025 (Int Int) Int)
(declare-fun x4098 () Bool)
(declare-fun x727 () Bool)
(declare-fun x3983 () x2432)
(declare-fun x1521 () Bool)
(declare-fun x3739 () Bool)
(declare-fun x4507 () x2432)
(declare-fun x3997 () Bool)
(declare-fun x830 () Int)
(declare-fun x2523 () Bool)
(declare-fun x1371 () Bool)
(declare-fun x3042 () Int)
(declare-fun x950 () Bool)
(declare-fun x1824 () Int)
(declare-fun x5341 () Bool)
(declare-fun x2528 () Int)
(declare-fun x2568 () Bool)
(declare-fun x5375 () Int)
(declare-fun x498 () Int)
(declare-fun x5231 () Bool)
(declare-fun x1251 () Bool)
(declare-fun x5390 () Bool)
(declare-fun x2946 () Bool)
(declare-fun x743 () Bool)
(declare-fun x2122 () Int)
(declare-fun x2896 () Int)
(declare-fun x2328 () Bool)
(declare-fun x598 () Bool)
(declare-fun x4828 () Int)
(declare-fun x1467 () Bool)
(declare-fun x2157 () x2432)
(declare-fun x3122 () Bool)
(declare-fun x3505 () Int)
(declare-fun x2776 () Int)
(declare-fun x2398 () Int)
(declare-fun x1526 () Bool)
(declare-fun x5062 () Int)
(declare-fun x1945 () x2432)
(declare-fun x1139 () Bool)
(declare-fun x710 () Int)
(declare-fun x3047 () Bool)
(declare-fun x3626 (x2432) Int)
(declare-fun x3598 () Bool)
(declare-fun x5398 () Bool)
(declare-fun x813 () Bool)
(declare-fun x3657 () Bool)
(declare-fun x5058 () Bool)
(declare-fun x1839 () Int)
(declare-fun x2581 () Bool)
(declare-fun x2363 () Bool)
(declare-fun x5109 () Bool)
(declare-fun x2390 () x2432)
(declare-fun x4920 () Bool)
(declare-fun x365 () Int)
(declare-fun x1803 () Int)
(declare-fun x2056 () Bool)
(declare-fun x926 () Int)
(declare-fun x880 () Bool)
(declare-fun x4604 () Int)
(declare-fun x2131 () x2432)
(declare-fun x3214 () Bool)
(declare-fun x4154 () Bool)
(declare-fun x3709 () Int)
(declare-fun x3620 () Bool)
(declare-fun x1348 () Int)
(declare-fun x3508 () x2432)
(declare-fun x2006 () Int)
(declare-fun x507 () Bool)
(declare-fun x5257 () Bool)
(declare-fun x3671 () Bool)
(declare-fun x2819 () Int)
(declare-fun x1178 () Bool)
(declare-fun x3649 () Bool)
(declare-fun x4131 () Bool)
(declare-fun x5182 () Int)
(declare-fun x3893 () Bool)
(declare-fun x246 () Int)
(declare-fun x2161 () Int)
(declare-fun x2239 () Bool)
(declare-fun x3856 (x2432) Int)
(declare-fun x2762 () Bool)
(declare-fun x931 () Int)
(declare-fun x2989 () Bool)
(declare-fun x4775 () Bool)
(declare-fun x5185 () Bool)
(declare-fun x988 () Int)
(declare-fun x1232 () Int)
(declare-fun x4037 () Int)
(declare-fun x693 () Bool)
(declare-fun x1296 () Int)
(declare-fun x1165 () Bool)
(declare-fun x2411 () Int)
(declare-fun x3564 () Bool)
(declare-fun x2295 () Bool)
(declare-fun x2156 () Bool)
(declare-fun x5431 () Bool)
(declare-fun x2187 () Int)
(declare-fun x4913 () Bool)
(declare-fun x2219 () Bool)
(declare-fun x424 () Bool)
(declare-fun x5005 () Bool)
(declare-fun x4649 () Bool)
(declare-fun x4218 () Bool)
(declare-fun x3481 () Int)
(declare-fun x1294 () x2432)
(declare-fun x315 () Bool)
(declare-fun x4414 () Bool)
(declare-fun x3409 () Bool)
(declare-fun x4281 () Bool)
(declare-fun x528 () Int)
(declare-fun x2633 () Bool)
(declare-fun x2096 () Int)
(declare-fun x2309 () Bool)
(declare-fun x2521 () Bool)
(declare-fun x2197 () Int)
(declare-fun x2529 () Bool)
(declare-fun x2692 () Int)
(declare-fun x2865 () Int)
(declare-fun x5196 () Int)
(declare-fun x4354 () Bool)
(declare-fun x5360 () Int)
(declare-fun x4811 () Int)
(declare-fun x1644 () Bool)
(declare-fun x1845 () Bool)
(declare-fun x468 () Bool)
(declare-fun x4708 () Int)
(declare-fun x1109 () Bool)
(declare-fun x3922 () Bool)
(declare-fun x1547 () Bool)
(declare-fun x3827 () Int)
(declare-fun x4980 () Bool)
(declare-fun x2862 () Int)
(declare-fun x2418 () Int)
(declare-fun x1404 () Int)
(declare-fun x896 () Int)
(declare-fun x4597 () Int)
(declare-fun x3342 () Int)
(declare-fun x3803 () Int)
(declare-fun x2616 () Bool)
(declare-fun x464 () Int)
(declare-fun x191 () Bool)
(declare-fun x4978 () Int)
(declare-fun x1259 () Bool)
(declare-fun x2341 () Int)
(declare-fun x269 () Int)
(declare-fun x3882 () Bool)
(declare-fun x3224 () Int)
(declare-fun x4192 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x2922 () Bool)
(declare-fun x4578 () Int)
(declare-fun x129 () Int)
(declare-fun x5024 () Int)
(declare-fun x4846 () Bool)
(declare-fun x2058 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x3046 () Bool)
(declare-fun x1210 () Int)
(declare-fun x4554 () Bool)
(declare-fun x4116 () x2432)
(declare-fun x3566 () Int)
(declare-fun x1134 () x2432)
(declare-fun x2143 () Bool)
(declare-fun x2662 () Bool)
(declare-fun x2063 () Int)
(declare-fun x966 () Bool)
(declare-fun x3911 () Bool)
(declare-fun x156 (x2432) Int)
(declare-fun x2107 () Bool)
(declare-fun x1714 () Bool)
(declare-fun x2746 () Bool)
(declare-fun x3051 () Bool)
(declare-fun x599 () Bool)
(declare-fun x4072 () Bool)
(declare-fun x72 () x2432)
(declare-fun x5193 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x3651 () Bool)
(declare-fun x267 () x2432)
(declare-fun x198 () Bool)
(declare-fun x2661 () x2432)
(declare-fun x4942 () Bool)
(declare-fun x4663 () Bool)
(declare-fun x3933 () Bool)
(declare-fun x3958 () Bool)
(declare-fun x2683 () Bool)
(declare-fun x4620 () Bool)
(declare-fun x4399 () Bool)
(declare-fun x1196 () Int)
(declare-fun x3181 () Int)
(declare-fun x4034 () Bool)
(declare-fun x422 () Int)
(declare-fun x214 () Int)
(declare-fun x4617 () Bool)
(declare-fun x2569 () Bool)
(declare-fun x4266 () x2432)
(declare-fun x2000 () Bool)
(declare-fun x3048 () Int)
(declare-fun x3833 () Bool)
(declare-fun x3106 () Int)
(declare-fun x5222 () Bool)
(declare-fun x4591 () Int)
(declare-fun x3764 () Bool)
(declare-fun x3085 () x2432)
(declare-fun x4688 () Int)
(declare-fun x2427 () Bool)
(declare-fun x1368 () Int)
(declare-fun x687 () Bool)
(declare-fun x293 () Bool)
(declare-fun x3491 () Bool)
(declare-fun x5281 () Bool)
(declare-fun x4752 () Int)
(declare-fun x2077 () Bool)
(declare-fun x1781 () Bool)
(declare-fun x75 () Int)
(declare-fun x5432 () Int)
(declare-fun x2470 () Bool)
(declare-fun x3284 () Bool)
(declare-fun x5315 () Int)
(declare-fun x4178 () Int)
(declare-fun x2959 () Bool)
(declare-fun x1117 () x2432)
(declare-fun x3129 () Int)
(declare-fun x3917 () Bool)
(declare-fun x2817 () Bool)
(declare-fun x2510 () Bool)
(declare-fun x3001 () Int)
(declare-fun x999 () Int)
(declare-fun x1512 () Bool)
(declare-fun x4972 () Bool)
(declare-fun x322 () Int)
(declare-fun x5322 () Bool)
(declare-fun x5191 () Bool)
(declare-fun x359 () Bool)
(declare-fun x4270 () Int)
(declare-fun x3369 () Bool)
(declare-fun x476 () Int)
(declare-fun x4052 () Bool)
(declare-fun x4596 () Bool)
(declare-fun x3741 () Int)
(declare-fun x428 () Int)
(declare-fun x651 () Int)
(declare-fun x369 () Bool)
(declare-fun x5236 () Int)
(declare-fun x983 () Int)
(declare-fun x783 () Bool)
(declare-fun x3111 () Bool)
(declare-fun x1756 () Bool)
(declare-fun x4256 () Bool)
(declare-fun x5417 () x2432)
(declare-fun x1377 () Bool)
(declare-fun x1468 () Bool)
(declare-fun x3343 () Int)
(declare-fun x973 () Int)
(declare-fun x3312 () Int)
(declare-fun x5190 () Bool)
(declare-fun x4825 () Int)
(declare-fun x4904 () Int)
(declare-fun x192 () Int)
(declare-fun x3672 () x2432)
(declare-fun x3036 () Int)
(declare-fun x1180 () Bool)
(declare-fun x4485 () Int)
(declare-fun x4194 () Int)
(declare-fun x3123 () Bool)
(declare-fun x342 () Bool)
(declare-fun x1446 () Int)
(declare-fun x3745 () Bool)
(declare-fun x4486 () Int)
(declare-fun x1941 () Bool)
(declare-fun x252 () x2432)
(declare-fun x1985 () Int)
(declare-fun x4009 () Bool)
(declare-fun x3976 () Bool)
(declare-fun x816 () Int)
(declare-fun x5348 () x2432)
(declare-fun x2389 () Bool)
(declare-fun x1836 () Bool)
(declare-fun x2925 () Int)
(declare-fun x2128 () Bool)
(declare-fun x4086 () x2432)
(declare-fun x3097 () Bool)
(declare-fun x2073 () x2432)
(declare-fun x103 () Int)
(declare-fun x1068 () Bool)
(declare-fun x2194 () Bool)
(declare-fun x4373 () x2432)
(declare-fun x2167 () x2432)
(declare-fun x2344 (x2432) Int)
(declare-fun x5101 () Bool)
(declare-fun x3776 () x2432)
(declare-fun x3267 () Int)
(declare-fun x5270 () Bool)
(declare-fun x4257 () Bool)
(declare-fun x2953 () Int)
(declare-fun x2705 () x2432)
(declare-fun x4852 () Int)
(declare-fun x1307 () Int)
(declare-fun x2859 () Int)
(declare-fun x2044 () Bool)
(declare-fun x4912 () Bool)
(declare-fun x1591 () Int)
(declare-fun x2084 () Int)
(declare-fun x4200 () Int)
(declare-fun x2275 () Int)
(declare-fun x4664 () Bool)
(declare-fun x177 () Int)
(declare-fun x480 () Int)
(declare-fun x4494 () Int)
(declare-fun x4862 () Bool)
(declare-fun x5094 () Bool)
(declare-fun x275 () Int)
(declare-fun x4231 () x2432)
(declare-fun x2020 () Int)
(declare-fun x1459 () x2432)
(declare-fun x1882 () Bool)
(declare-fun x1543 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x4483 () Int)
(declare-fun x5203 () Int)
(declare-fun x3439 () Bool)
(declare-fun x3266 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x5142 () Int)
(declare-fun x193 () Bool)
(declare-fun x5033 () Bool)
(declare-fun x1147 () Bool)
(declare-fun x595 () Int)
(declare-fun x1911 () Int)
(declare-fun x209 () Bool)
(declare-fun x3682 () Bool)
(declare-fun x4581 () Int)
(declare-fun x180 () Int)
(declare-fun x1008 () Bool)
(declare-fun x4004 () Bool)
(declare-fun x1425 () Int)
(declare-fun x2386 () Int)
(declare-fun x3723 () x2432)
(declare-fun x2764 () Bool)
(declare-fun x1933 () Bool)
(declare-fun x3525 () Int)
(declare-fun x2499 () Int)
(declare-fun x307 () Int)
(declare-fun x834 () Bool)
(declare-fun x5000 () Bool)
(declare-fun x2329 () Bool)
(declare-fun x5320 () x2432)
(declare-fun x4418 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x576 () Bool)
(declare-fun x1528 () x2432)
(declare-fun x2250 () Bool)
(declare-fun x2037 () x2432)
(declare-fun x3470 () Bool)
(declare-fun x2033 () x2432)
(declare-fun x92 () Bool)
(declare-fun x5303 () x2432)
(declare-fun x2492 () Int)
(declare-fun x1804 () Int)
(declare-fun x1321 () Int)
(declare-fun x1779 () Bool)
(declare-fun x4119 () Bool)
(declare-fun x102 () Bool)
(declare-fun x5213 () Int)
(declare-fun x2475 () Bool)
(declare-fun x321 () Bool)
(declare-fun x4292 () Bool)
(declare-fun x2926 () Bool)
(declare-fun x131 () Int)
(declare-fun x146 () Bool)
(declare-fun x2749 () Bool)
(declare-fun x1887 () Int)
(declare-fun x4689 () Int)
(declare-fun x1908 () Int)
(declare-fun x3043 () Bool)
(declare-fun x2999 () Bool)
(declare-fun x4877 () Int)
(declare-fun x4069 () Int)
(declare-fun x4646 () Int)
(declare-fun x4734 () Bool)
(declare-fun x1717 () Bool)
(declare-fun x485 () Bool)
(declare-fun x5325 () Int)
(declare-fun x1390 () Int)
(declare-fun x767 () Bool)
(declare-fun x1751 (x2432) Int)
(declare-fun x2706 () Int)
(declare-fun x2993 () Bool)
(declare-fun x5355 () Bool)
(declare-fun x4489 () Int)
(declare-fun x3795 () Int)
(declare-fun x4603 () Bool)
(declare-fun x2887 () Bool)
(declare-fun x3065 () x2432)
(declare-fun x3631 () Int)
(declare-fun x4836 () Bool)
(declare-fun x4976 () Bool)
(declare-fun x2232 () Bool)
(declare-fun x4508 () Bool)
(declare-fun x4460 () Bool)
(declare-fun x4032 () Bool)
(declare-fun x2506 () Int)
(declare-fun x4468 () Bool)
(declare-fun x367 () Bool)
(declare-fun x5393 () Int)
(declare-fun x5327 () Bool)
(declare-fun x1503 () Bool)
(declare-fun x1899 () Int)
(declare-fun x14 () Int)
(declare-fun x2535 () Bool)
(declare-fun x3903 () Int)
(declare-fun x3701 () Int)
(declare-fun x3436 () x2432)
(declare-fun x3768 () Bool)
(declare-fun x2212 () Bool)
(declare-fun x1236 () Bool)
(declare-fun x3743 () Bool)
(declare-fun x2861 () Int)
(declare-fun x3758 () x2432)
(declare-fun x1488 () Bool)
(declare-fun x2820 () Bool)
(declare-fun x3213 () Int)
(declare-fun x760 () Bool)
(declare-fun x2936 () Bool)
(declare-fun x5433 () Int)
(declare-fun x3143 () Int)
(declare-fun x4311 () Bool)
(declare-fun x2005 () Int)
(declare-fun x2931 () Int)
(declare-fun x3054 () Bool)
(declare-fun x4722 () Int)
(declare-fun x4018 () Int)
(declare-fun x556 () x2432)
(declare-fun x2249 () Int)
(declare-fun x1791 () Bool)
(declare-fun x2339 () x2432)
(declare-fun x4881 () Int)
(declare-fun x3930 () Int)
(declare-fun x1375 () Bool)
(declare-fun x4982 () Int)
(declare-fun x1457 () Bool)
(declare-fun x549 () Bool)
(declare-fun x4533 () Int)
(declare-fun x4171 () Bool)
(declare-fun x3722 () Int)
(declare-fun x1226 () Bool)
(declare-fun x1581 () Int)
(declare-fun x4273 () Int)
(declare-fun x2184 () Int)
(declare-fun x118 () Bool)
(declare-fun x4347 (x2432) Int)
(declare-fun x678 () Bool)
(declare-fun x967 () Bool)
(declare-fun x109 () Bool)
(declare-fun x1689 () Int)
(declare-fun x32 () Int)
(declare-fun x3826 () Bool)
(declare-fun x3092 () Bool)
(declare-fun x2852 () Bool)
(declare-fun x2352 () Bool)
(declare-fun x1460 () Int)
(declare-fun x328 () Int)
(declare-fun x3870 () Int)
(declare-fun x94 () Bool)
(declare-fun x4173 () Bool)
(declare-fun x840 () Bool)
(declare-fun x402 () Int)
(declare-fun x1850 () Int)
(declare-fun x838 () Bool)
(declare-fun x399 () Int)
(declare-fun x1507 () Int)
(declare-fun x4241 () Bool)
(declare-fun x4081 (x2432) Int)
(declare-fun x4341 () Bool)
(declare-fun x2614 () Int)
(declare-fun x475 () Int)
(declare-fun x4616 () Int)
(declare-fun x3355 () Bool)
(declare-fun x1523 () Int)
(declare-fun x869 () Bool)
(declare-fun x10 () Bool)
(declare-fun x4430 () Bool)
(declare-fun x457 () Bool)
(declare-fun x1484 () Int)
(declare-fun x4541 () Bool)
(declare-fun x579 () Bool)
(declare-fun x1994 () Int)
(declare-fun x826 () Int)
(declare-fun x4821 () Int)
(declare-fun x2170 () Bool)
(declare-fun x4745 () Bool)
(declare-fun x1607 () Bool)
(declare-fun x631 () Bool)
(declare-fun x3251 () Int)
(declare-fun x2144 () x2432)
(declare-fun x3389 () Int)
(declare-fun x3761 () Bool)
(declare-fun x2123 () x2432)
(declare-fun x1156 () x2432)
(declare-fun x1819 () Bool)
(declare-fun x1711 () x2432)
(declare-fun x1108 () x2432)
(declare-fun x4703 () Bool)
(declare-fun x4191 () Int)
(declare-fun x5215 () Bool)
(declare-fun x502 () Int)
(declare-fun x361 () Int)
(declare-fun x2713 () Bool)
(declare-fun x2036 () Bool)
(declare-fun x1950 () Bool)
(declare-fun x2637 () Bool)
(declare-fun x5160 () Bool)
(declare-fun x1138 () Bool)
(declare-fun x1659 () Bool)
(declare-fun x2914 () Int)
(declare-fun x4190 () Int)
(declare-fun x446 () Bool)
(declare-fun x176 () Int)
(declare-fun x4359 () Int)
(declare-fun x594 () x2432)
(declare-fun x3547 () Int)
(declare-fun x3295 () Int)
(declare-fun x59 () Bool)
(declare-fun x4268 () Bool)
(declare-fun x2979 () Bool)
(declare-fun x4670 () Bool)
(declare-fun x1188 (Int) Int)
(declare-fun x2335 () Int)
(declare-fun x2658 () Bool)
(declare-fun x4945 (x2432) Int)
(declare-fun x2657 () Int)
(declare-fun x306 () Bool)
(declare-fun x3716 () Bool)
(declare-fun x956 () x2432)
(declare-fun x3026 () Int)
(declare-fun x3016 () Bool)
(declare-fun x4111 () Int)
(declare-fun x4285 () Bool)
(declare-fun x2075 () Int)
(declare-fun x2678 () Int)
(declare-fun x496 () x2432)
(declare-fun x4067 () Bool)
(declare-fun x2291 () Bool)
(declare-fun x2770 () Bool)
(declare-fun x5114 () Bool)
(declare-fun x4704 () Int)
(declare-fun x1589 () x2432)
(declare-fun x4979 () Int)
(declare-fun x125 () Bool)
(declare-fun x2419 () Int)
(declare-fun x219 () Bool)
(declare-fun x4781 () Bool)
(declare-fun x1323 () Int)
(declare-fun x672 () Bool)
(declare-fun x1931 () Bool)
(declare-fun x2213 () Bool)
(declare-fun x5069 () Bool)
(declare-fun x1380 () Bool)
(declare-fun x4671 () Int)
(declare-fun x571 () Bool)
(declare-fun x2875 () Int)
(declare-fun x330 () Bool)
(declare-fun x5172 () Bool)
(declare-fun x1519 () Bool)
(declare-fun x356 () Int)
(declare-fun x2682 () Int)
(declare-fun x3489 (Int) Int)
(declare-fun x2481 () Int)
(declare-fun x3847 () Int)
(declare-fun x4656 () Int)
(declare-fun x207 () Bool)
(declare-fun x3579 () Bool)
(declare-fun x5216 () Int)
(declare-fun x3462 () Int)
(declare-fun x1524 () Int)
(declare-fun x1918 () Bool)
(declare-fun x1664 () Int)
(declare-fun x459 () Int)
(declare-fun x2371 () Int)
(declare-fun x1417 () Int)
(declare-fun x1270 () Int)
(declare-fun x612 () x2432)
(declare-fun x1615 () Bool)
(declare-fun x3234 () Bool)
(declare-fun x3138 () Int)
(declare-fun x951 () Int)
(declare-fun x2919 () x2432)
(declare-fun x503 () Bool)
(declare-fun x2799 () Bool)
(declare-fun x1103 () Bool)
(declare-fun x99 () x2432)
(declare-fun x95 () Bool)
(declare-fun x1681 () Bool)
(declare-fun x2534 () Int)
(declare-fun x1966 () Int)
(declare-fun x1864 (Int) Int)
(declare-fun x3854 () Bool)
(declare-fun x1365 () Bool)
(declare-fun x1162 () Int)
(declare-fun x2051 () Bool)
(declare-fun x1224 () Int)
(declare-fun x3382 () Int)
(declare-fun x3510 () Int)
(declare-fun x856 () Int)
(declare-fun x1501 () Bool)
(declare-fun x3303 () Int)
(declare-fun x1124 () Int)
(declare-fun x2752 () Int)
(declare-fun x862 () x2432)
(declare-fun x3947 () Int)
(declare-fun x2550 () Int)
(declare-fun x1679 () Bool)
(declare-fun x3608 () Bool)
(declare-fun x4058 () x2432)
(declare-fun x2408 () x2432)
(declare-fun x2015 () Bool)
(declare-fun x4203 () x2432)
(declare-fun x3514 () Bool)
(declare-fun x3254 () Bool)
(declare-fun x2780 () Int)
(declare-fun x2670 () Bool)
(declare-fun x1492 () Int)
(declare-fun x3972 (x2432) Int)
(declare-fun x4613 () Bool)
(declare-fun x1802 () Bool)
(declare-fun x4412 () Bool)
(declare-fun x134 (Int Int) Int)
(declare-fun x4318 () Int)
(declare-fun x3273 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x4073 () Bool)
(declare-fun x112 () Int)
(declare-fun x1372 () Bool)
(declare-fun x5278 (Int) Int)
(declare-fun x676 () Int)
(declare-fun x3501 () Bool)
(declare-fun x3466 () Bool)
(declare-fun x2351 () Bool)
(declare-fun x4224 () Bool)
(declare-fun x1325 () Bool)
(declare-fun x2747 () Bool)
(declare-fun x258 (x2432) Int)
(declare-fun x4716 () Bool)
(declare-fun x360 () Bool)
(declare-fun x3062 () Bool)
(declare-fun x4160 () Int)
(declare-fun x3645 () Bool)
(declare-fun x968 () Bool)
(declare-fun x2039 () Bool)
(declare-fun x722 () Int)
(declare-fun x4684 () Bool)
(declare-fun x3364 () Int)
(declare-fun x578 () Int)
(declare-fun x2643 () Bool)
(declare-fun x86 () Bool)
(declare-fun x770 () Int)
(declare-fun x248 () Int)
(declare-fun x3208 () Bool)
(declare-fun x4138 () Int)
(declare-fun x2129 () Bool)
(declare-fun x5295 () Int)
(declare-fun x3261 () Int)
(declare-fun x4557 () Bool)
(declare-fun x3511 () Int)
(declare-fun x2858 () Int)
(declare-fun x329 (x2432) Int)
(declare-fun x3218 () Int)
(declare-fun x1800 () Int)
(declare-fun x3678 () Bool)
(declare-fun x3476 () Bool)
(declare-fun x1198 () Int)
(declare-fun x4667 () Int)
(declare-fun x116 () Int)
(declare-fun x548 () x2432)
(declare-fun x954 () x2432)
(declare-fun x3506 (x2432) Int)
(declare-fun x2823 () Int)
(declare-fun x5437 () Int)
(declare-fun x3357 () Int)
(declare-fun x130 () Int)
(declare-fun x2424 () Bool)
(declare-fun x1658 () Bool)
(declare-fun x4476 () Int)
(declare-fun x4885 () Int)
(declare-fun x4334 () Int)
(declare-fun x372 () Int)
(declare-fun x3451 () Bool)
(declare-fun x4379 () Bool)
(declare-fun x3950 () Bool)
(declare-fun x2756 () Int)
(declare-fun x1472 () Int)
(declare-fun x4282 () Bool)
(declare-fun x3666 () Bool)
(declare-fun x5218 () Int)
(declare-fun x4794 () Bool)
(declare-fun x1398 () Int)
(declare-fun x3924 () Bool)
(declare-fun x4748 () Int)
(declare-fun x3206 () x2432)
(declare-fun x531 () Bool)
(declare-fun x170 () Bool)
(declare-fun x5079 () x2432)
(declare-fun x4455 () Bool)
(declare-fun x2794 () Bool)
(declare-fun x3209 () Bool)
(declare-fun x5265 () Bool)
(declare-fun x2991 () Int)
(declare-fun x3194 () Int)
(declare-fun x3925 () x2432)
(declare-fun x2346 () Bool)
(declare-fun x2540 () Int)
(declare-fun x5151 () Bool)
(declare-fun x81 () x2432)
(declare-fun x4569 () Bool)
(declare-fun x4916 () Bool)
(declare-fun x3846 () Int)
(declare-fun x5368 () Bool)
(declare-fun x390 () Bool)
(declare-fun x296 () Bool)
(declare-fun x2261 () Bool)
(declare-fun x3900 () Int)
(declare-fun x222 () Bool)
(declare-fun x4027 () Int)
(declare-fun x2551 () Int)
(declare-fun x1853 () Bool)
(declare-fun x5420 () Bool)
(declare-fun x1170 () Int)
(declare-fun x3052 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x2608 () Bool)
(declare-fun x2592 () Bool)
(declare-fun x1118 () Int)
(declare-fun x1089 () Bool)
(declare-fun x454 () Bool)
(declare-fun x4263 () Bool)
(declare-fun x1852 () Bool)
(declare-fun x395 () Int)
(declare-fun x940 () Bool)
(declare-fun x174 () Int)
(declare-fun x3265 () x2432)
(declare-fun x4941 () Bool)
(declare-fun x3190 () Int)
(declare-fun x4283 () x2432)
(declare-fun x4045 () Int)
(declare-fun x186 () Bool)
(declare-fun x2134 () Bool)
(declare-fun x3909 () Int)
(declare-fun x3112 () Bool)
(declare-fun x5141 () Int)
(declare-fun x49 () Bool)
(declare-fun x790 () Int)
(declare-fun x2207 () Int)
(declare-fun x605 () Bool)
(declare-fun x2406 () Int)
(declare-fun x4987 () Bool)
(declare-fun x2428 () Bool)
(declare-fun x577 () Bool)
(declare-fun x635 () Bool)
(declare-fun x1875 () Int)
(declare-fun x1726 () Int)
(declare-fun x1400 () Int)
(declare-fun x1713 () Bool)
(declare-fun x2748 () Bool)
(declare-fun x4940 () Int)
(declare-fun x2443 () Bool)
(declare-fun x3939 () Int)
(declare-fun x2921 () Bool)
(declare-fun x4915 () Int)
(declare-fun x4387 () x2432)
(declare-fun x2839 () Bool)
(declare-fun x610 () Bool)
(declare-fun x2831 () Int)
(declare-fun x3276 () x2432)
(declare-fun x5070 () Bool)
(declare-fun x1755 () Int)
(declare-fun x3792 () Int)
(declare-fun x4833 () Int)
(declare-fun x5067 () Bool)
(declare-fun x2847 () Bool)
(declare-fun x4910 () Bool)
(declare-fun x1925 () Int)
(declare-fun x1964 () Int)
(declare-fun x1408 () Bool)
(declare-fun x1930 () Int)
(declare-fun x1477 () Bool)
(declare-fun x117 () Bool)
(declare-fun x260 () Bool)
(declare-fun x3992 () Bool)
(declare-fun x2292 () Int)
(declare-fun x4118 () Int)
(declare-fun x4780 () Bool)
(declare-fun x2969 () Int)
(declare-fun x2677 () x2432)
(declare-fun x407 () Int)
(declare-fun x215 () Int)
(declare-fun x5407 () Int)
(declare-fun x3095 () Bool)
(declare-fun x4971 () Int)
(declare-fun x4076 () Int)
(declare-fun x1473 () Bool)
(declare-fun x3464 () Int)
(declare-fun x3783 () x2432)
(declare-fun x1483 () Bool)
(declare-fun x675 () Int)
(declare-fun x3567 (Int) Int)
(declare-fun x870 () Int)
(declare-fun x4789 () Bool)
(declare-fun x5380 () Int)
(declare-fun x2685 () Bool)
(declare-fun x4700 () Int)
(declare-fun x1479 () Int)
(declare-fun x4928 () Int)
(declare-fun x5254 () Int)
(declare-fun x144 () Int)
(declare-fun x2178 () Int)
(declare-fun x555 () Int)
(declare-fun x2109 () Bool)
(declare-fun x4860 (Int Int) Int)
(declare-fun x3125 () Bool)
(declare-fun x5418 () Bool)
(declare-fun x2394 () Int)
(declare-fun x3445 () Bool)
(declare-fun x3753 () Int)
(declare-fun x4012 () Bool)
(declare-fun x3751 () x2432)
(declare-fun x4198 () Int)
(declare-fun x2149 () Int)
(declare-fun x4792 () x2432)
(declare-fun x1991 () Bool)
(declare-fun x5189 () x2432)
(declare-fun x2441 (x2432) Int)
(declare-fun x3859 () x2432)
(declare-fun x601 () x2432)
(declare-fun x700 () Bool)
(declare-fun x1856 () Bool)
(declare-fun x1794 () Bool)
(declare-fun x4838 () Bool)
(declare-fun x592 () Int)
(declare-fun x1893 () Int)
(declare-fun x4954 () Bool)
(declare-fun x276 () Int)
(declare-fun x3077 () Bool)
(declare-fun x2126 () Bool)
(declare-fun x5329 () Bool)
(declare-fun x4353 () Bool)
(declare-fun x508 () Bool)
(declare-fun x4564 () Int)
(declare-fun x2145 () Int)
(declare-fun x3725 () Bool)
(declare-fun x2330 () Int)
(declare-fun x1123 () x2432)
(declare-fun x789 () Int)
(declare-fun x417 () Int)
(declare-fun x1721 () Int)
(declare-fun x2182 () Bool)
(declare-fun x660 () Bool)
(declare-fun x894 () Bool)
(declare-fun x5038 () Int)
(declare-fun x3058 () Int)
(declare-fun x4406 () x2432)
(declare-fun x1688 () Bool)
(declare-fun x3304 () Bool)
(declare-fun x3289 () Bool)
(declare-fun x2465 () Int)
(declare-fun x4645 () Int)
(declare-fun x3371 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x5309 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x1212 () Int)
(declare-fun x283 () Bool)
(declare-fun x2251 () Bool)
(declare-fun x4859 () Int)
(declare-fun x1760 () x2432)
(declare-fun x4323 () Int)
(declare-fun x639 () x2432)
(declare-fun x4428 () Int)
(declare-fun x1795 () Bool)
(declare-fun x1654 () Bool)
(declare-fun x4132 () Int)
(declare-fun x2574 () Bool)
(declare-fun x4031 () Bool)
(declare-fun x4501 () Bool)
(declare-fun x4089 () Bool)
(declare-fun x1039 () Int)
(declare-fun x477 () x2432)
(declare-fun x3292 () Int)
(declare-fun x2117 (x2432) Int)
(declare-fun x2503 () Bool)
(declare-fun x553 () Bool)
(declare-fun x3257 () Bool)
(declare-fun x2935 () Int)
(declare-fun x3402 () Bool)
(declare-fun x3297 () Bool)
(declare-fun x5297 () Int)
(declare-fun x2021 () Int)
(declare-fun x1305 () Int)
(declare-fun x143 () Bool)
(declare-fun x961 () Bool)
(declare-fun x5001 () Bool)
(declare-fun x2916 () Int)
(declare-fun x4534 () Bool)
(declare-fun x500 () Bool)
(declare-fun x4315 (Int) Int)
(declare-fun x2699 () Bool)
(declare-fun x5334 () Bool)
(declare-fun x707 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x2413 () x2432)
(declare-fun x4362 () Int)
(declare-fun x5019 () Bool)
(declare-fun x4214 () Bool)
(declare-fun x1754 () Bool)
(declare-fun x4436 () Bool)
(declare-fun x694 () Bool)
(declare-fun x2923 () Int)
(declare-fun x1574 () Bool)
(declare-fun x495 () Bool)
(declare-fun x441 () Bool)
(declare-fun x5414 () Int)
(declare-fun x4223 () Int)
(declare-fun x4135 () Bool)
(declare-fun x2045 () Bool)
(declare-fun x4592 () x2432)
(declare-fun x4243 () Int)
(declare-fun x1942 () Int)
(declare-fun x4314 () Bool)
(declare-fun x4908 () Bool)
(declare-fun x5205 () Bool)
(declare-fun x5229 () Bool)
(declare-fun x1798 () x2432)
(declare-fun x4808 () Int)
(declare-fun x3998 () Int)
(declare-fun x358 () Bool)
(declare-fun x3225 () Int)
(declare-fun x4871 () Int)
(declare-fun x4784 () Bool)
(declare-fun x1016 () Int)
(declare-fun x2029 () Bool)
(declare-fun x2641 () Bool)
(declare-fun x119 () x2432)
(declare-fun x3220 () x2432)
(declare-fun x2241 () Bool)
(declare-fun x584 () Int)
(declare-fun x4265 () Int)
(declare-fun x295 () Int)
(declare-fun x3050 () Bool)
(declare-fun x3417 () Bool)
(declare-fun x647 () Int)
(declare-fun x5244 () Int)
(declare-fun x821 () Bool)
(declare-fun x2188 () Bool)
(declare-fun x800 () Int)
(declare-fun x812 () Int)
(declare-fun x3845 () Bool)
(declare-fun x2369 () Bool)
(declare-fun x3809 () Bool)
(declare-fun x1539 () Bool)
(declare-fun x4793 () Int)
(declare-fun x1181 () Int)
(declare-fun x1013 () Int)
(declare-fun x746 () Bool)
(declare-fun x3667 () x2432)
(declare-fun x3142 () Bool)
(declare-fun x4195 () Bool)
(declare-fun x4371 () Int)
(declare-fun x2434 () Bool)
(declare-fun x979 () Int)
(declare-fun x5018 () Int)
(declare-fun x5184 () Bool)
(declare-fun x2133 () Int)
(declare-fun x2774 () Int)
(declare-fun x259 () Int)
(declare-fun x3486 () x2432)
(declare-fun x4720 () x2432)
(declare-fun x5306 () Bool)
(declare-fun x1379 () Bool)
(declare-fun x3914 () Bool)
(declare-fun x4735 () Int)
(declare-fun x766 () Int)
(declare-fun x5020 () Bool)
(declare-fun x3775 () Int)
(declare-fun x1536 () Bool)
(declare-fun x62 () Bool)
(declare-fun x4955 () Bool)
(declare-fun x2228 () Int)
(declare-fun x5435 () Int)
(declare-fun x4297 () Int)
(declare-fun x3632 () Bool)
(declare-fun x5126 () Int)
(declare-fun x930 () Bool)
(declare-fun x2788 () Int)
(declare-fun x2458 () Bool)
(declare-fun x1021 (Int) Int)
(declare-fun x4560 () x2432)
(declare-fun x4598 () Bool)
(declare-fun x1969 () Bool)
(declare-fun x1759 () Bool)
(declare-fun x4030 () Bool)
(declare-fun x4409 () x2432)
(declare-fun x3421 () Int)
(declare-fun x1600 () Int)
(declare-fun x4337 () Bool)
(declare-fun x426 () Bool)
(declare-fun x3789 () Bool)
(declare-fun x2208 () Bool)
(declare-fun x4202 () x2432)
(declare-fun x3241 () Bool)
(declare-fun x56 () Bool)
(declare-fun x4146 () Bool)
(declare-fun x2438 () Int)
(declare-fun x3852 () Bool)
(declare-fun x1563 () Bool)
(declare-fun x4762 () Bool)
(declare-fun x3319 () Int)
(declare-fun x4064 () Bool)
(declare-fun x1886 () Bool)
(declare-fun x4400 () Bool)
(declare-fun x677 () Int)
(declare-fun x4250 () x2432)
(declare-fun x3406 () Int)
(declare-fun x1248 () x2432)
(declare-fun x2599 () Bool)
(declare-fun x420 () Int)
(declare-fun x3526 () Bool)
(declare-fun x2647 () Int)
(declare-fun x4403 () Int)
(declare-fun x4624 () Bool)
(declare-fun x2259 () Int)
(declare-fun x1937 () Bool)
(declare-fun x2477 () Int)
(declare-fun x811 () Bool)
(declare-fun x566 () Bool)
(declare-fun x2403 () Bool)
(declare-fun x5192 () Int)
(declare-fun x5078 () Bool)
(declare-fun x5046 () Bool)
(declare-fun x233 () Bool)
(declare-fun x340 () Int)
(declare-fun x1416 () Bool)
(declare-fun x387 () Int)
(declare-fun x3366 () Bool)
(declare-fun x628 () x2432)
(declare-fun x2631 () Bool)
(declare-fun x37 () Bool)
(declare-fun x4293 () Bool)
(declare-fun x5312 () Int)
(declare-fun x3977 () Int)
(declare-fun x913 () Bool)
(declare-fun x1870 () Bool)
(declare-fun x4561 () Bool)
(declare-fun x3637 () Int)
(declare-fun x5258 () Int)
(declare-fun x1740 () Int)
(declare-fun x460 () Int)
(declare-fun x2505 () Int)
(declare-fun x2454 () Int)
(declare-fun x4742 () Int)
(declare-fun x596 () Int)
(declare-fun x3019 () Bool)
(declare-fun x2601 () Int)
(declare-fun x3797 () Bool)
(declare-fun x3576 () Bool)
(declare-fun x3405 () Bool)
(declare-fun x4921 () Int)
(declare-fun x509 () Int)
(declare-fun x2695 () Bool)
(declare-fun x2278 () Int)
(declare-fun x2407 () Bool)
(declare-fun x2691 () Bool)
(declare-fun x1092 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x380 () Bool)
(declare-fun x4644 () Int)
(declare-fun x1310 () Bool)
(declare-fun x2357 () Int)
(declare-fun x1796 () Int)
(declare-fun x2539 () Bool)
(declare-fun x2478 () Bool)
(declare-fun x2415 () Bool)
(declare-fun x4933 () Int)
(declare-fun x3578 () x2432)
(declare-fun x947 () Bool)
(declare-fun x3028 () Bool)
(declare-fun x3393 () Bool)
(declare-fun x1889 () Bool)
(declare-fun x2844 () Bool)
(declare-fun x2011 () Bool)
(declare-fun x754 () Int)
(declare-fun x4586 () Int)
(declare-fun x1336 () Bool)
(declare-fun x641 () x2432)
(declare-fun x5157 () Int)
(declare-fun x505 () Bool)
(declare-fun x88 () Int)
(declare-fun x1884 () Int)
(declare-fun x5133 () Bool)
(declare-fun x5408 () Int)
(declare-fun x948 () Bool)
(declare-fun x3388 (x2432) Int)
(declare-fun x2772 () Bool)
(declare-fun x4041 () Int)
(declare-fun x3835 () Int)
(declare-fun x4355 () Int)
(declare-fun x2750 () Bool)
(declare-fun x1637 () Bool)
(declare-fun x5234 () Bool)
(declare-fun x449 () Int)
(declare-fun x2462 () Bool)
(declare-fun x4234 () Bool)
(declare-fun x173 () Bool)
(declare-fun x166 () Bool)
(declare-fun x455 () Int)
(declare-fun x3215 () Bool)
(declare-fun x2189 () Int)
(declare-fun x4424 () x2432)
(declare-fun x2996 () Bool)
(declare-fun x3397 () Int)
(declare-fun x3661 () Int)
(declare-fun x1944 () Int)
(declare-fun x2272 () Int)
(declare-fun x5175 () Bool)
(declare-fun x4242 () Int)
(declare-fun x4448 () Bool)
(declare-fun x437 () Bool)
(declare-fun x4247 () Bool)
(declare-fun x697 () Int)
(declare-fun x4717 () Int)
(declare-fun x886 () Bool)
(declare-fun x1910 () Int)
(declare-fun x2281 () Int)
(declare-fun x1602 () x2432)
(declare-fun x1649 () Bool)
(declare-fun x1590 () x2432)
(declare-fun x3082 () Int)
(declare-fun x4122 () Int)
(declare-fun x2533 () Bool)
(declare-fun x1775 () Bool)
(declare-fun x2681 () x2432)
(declare-fun x2514 () Bool)
(declare-fun x1387 () Bool)
(declare-fun x3117 () Int)
(declare-fun x3072 () Bool)
(declare-fun x157 () Bool)
(declare-fun x2864 () Bool)
(declare-fun x2965 () x2432)
(declare-fun x5416 () x2432)
(declare-fun x4456 () Int)
(declare-fun x3937 () Bool)
(declare-fun x4841 () Bool)
(declare-fun x681 () Bool)
(declare-fun x4213 () x2432)
(declare-fun x1962 () Bool)
(declare-fun x1254 () Int)
(declare-fun x5226 () Bool)
(declare-fun x1651 () Bool)
(declare-fun x3548 () Int)
(declare-fun x2889 () Int)
(declare-fun x237 () Bool)
(declare-fun x1746 () x2432)
(declare-fun x2395 () Bool)
(declare-fun x3703 () Bool)
(declare-fun x2512 () Int)
(declare-fun x4199 () Bool)
(declare-fun x4573 () Int)
(declare-fun x2995 () Bool)
(declare-fun x1376 () Int)
(declare-fun x2032 () Bool)
(declare-fun x736 () Bool)
(declare-fun x1087 () Bool)
(declare-fun x691 () Bool)
(declare-fun x962 () Int)
(declare-fun x5438 () Int)
(declare-fun x971 () Int)
(declare-fun x588 () Bool)
(declare-fun x1556 () Bool)
(declare-fun x3956 () Int)
(declare-fun x2763 () Int)
(declare-fun x735 () Int)
(declare-fun x3653 () Bool)
(declare-fun x2431 () Int)
(declare-fun x4993 () Bool)
(declare-fun x841 () Bool)
(declare-fun x3018 () Int)
(declare-fun x695 () Int)
(declare-fun x195 () Int)
(declare-fun x1167 () Int)
(declare-fun x4429 () Bool)
(declare-fun x2546 () Int)
(declare-fun x3955 () Int)
(declare-fun x3211 () Int)
(declare-fun x3428 () Int)
(declare-fun x750 () Bool)
(declare-fun x4676 () Int)
(declare-fun x405 () Int)
(declare-fun x4422 () Bool)
(declare-fun x486 () Bool)
(declare-fun x533 () Int)
(declare-fun x4512 () Bool)
(declare-fun x5066 (x2432) Int)
(declare-fun x4702 () Bool)
(declare-fun x160 () Bool)
(declare-fun x1440 () Int)
(declare-fun x2927 () Bool)
(declare-fun x2246 () Bool)
(declare-fun x2085 () Int)
(declare-fun x2135 () Bool)
(declare-fun x4509 () x2432)
(declare-fun x2602 () Int)
(declare-fun x3989 () Int)
(declare-fun x2437 () Int)
(declare-fun x1396 () Bool)
(declare-fun x706 () Bool)
(declare-fun x5150 () Int)
(declare-fun x773 () Bool)
(declare-fun x2177 () Int)
(declare-fun x5379 () Int)
(declare-fun x5415 () Int)
(declare-fun x721 () Bool)
(declare-fun x1448 () Int)
(declare-fun x2712 (x2432) Int)
(declare-fun x4166 () Int)
(declare-fun x737 () x2432)
(declare-fun x1249 () Int)
(declare-fun x456 () Bool)
(declare-fun x4739 () x2432)
(declare-fun x3078 () Bool)
(declare-fun x1447 () x2432)
(declare-fun x3807 () Bool)
(declare-fun x2711 () Bool)
(declare-fun x4275 () Int)
(declare-fun x1231 () Bool)
(declare-fun x3351 () Bool)
(declare-fun x1532 () x2432)
(declare-fun x4000 () x2432)
(declare-fun x4878 () Bool)
(declare-fun x749 () Bool)
(declare-fun x3171 () Int)
(declare-fun x2549 () x2432)
(declare-fun x5370 () Int)
(declare-fun x2915 () Bool)
(declare-fun x3318 () Bool)
(declare-fun x199 () Int)
(declare-fun x3926 () Bool)
(declare-fun x3670 () Bool)
(declare-fun x2642 () Bool)
(declare-fun x882 () Int)
(declare-fun x758 () Int)
(declare-fun x1289 () Int)
(declare-fun x4092 () Bool)
(declare-fun x3361 () Bool)
(declare-fun x5424 () Bool)
(declare-fun x2526 () Bool)
(declare-fun x634 () Int)
(declare-fun x718 () x2432)
(declare-fun x3681 () Bool)
(declare-fun x5290 () Int)
(declare-fun x4078 () Int)
(declare-fun x2315 () Int)
(declare-fun x4084 () Int)
(declare-fun x2061 () Bool)
(declare-fun x4419 () Bool)
(declare-fun x3686 () Bool)
(declare-fun x842 () Bool)
(declare-fun x2597 () Bool)
(declare-fun x4410 () Bool)
(declare-fun x1511 () Bool)
(declare-fun x377 () Bool)
(declare-fun x2934 () Int)
(declare-fun x1858 () Int)
(declare-fun x2650 () Bool)
(declare-fun x2092 () Bool)
(declare-fun x905 () Bool)
(declare-fun x4090 () x2432)
(declare-fun x2076 () Bool)
(declare-fun x4658 () Bool)
(declare-fun x489 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x1183 () Int)
(declare-fun x4235 () Bool)
(declare-fun x217 () Bool)
(declare-fun x2098 () Bool)
(declare-fun x4309 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x4754 () Bool)
(declare-fun x4943 () Bool)
(declare-fun x4523 () Bool)
(declare-fun x3502 () Bool)
(declare-fun x2585 () Bool)
(declare-fun x3759 () Bool)
(declare-fun x550 () Int)
(declare-fun x5225 () Bool)
(declare-fun x3812 () Bool)
(declare-fun x2372 () Bool)
(declare-fun x4777 () Bool)
(declare-fun x3277 () Bool)
(declare-fun x615 () Bool)
(declare-fun x135 () Bool)
(declare-fun x1863 () x2432)
(declare-fun x2180 () Int)
(declare-fun x3049 () Int)
(declare-fun x463 () Bool)
(declare-fun x810 () Bool)
(declare-fun x4155 () Bool)
(declare-fun x4730 () Int)
(declare-fun x3625 () Int)
(declare-fun x1136 () Bool)
(declare-fun x1530 () Int)
(declare-fun x4937 () Bool)
(declare-fun x3605 () Bool)
(declare-fun x2932 () Bool)
(declare-fun x3837 () Bool)
(declare-fun x2753 () Int)
(declare-fun x289 () Int)
(declare-fun x1172 () Bool)
(declare-fun x5181 () Int)
(declare-fun x366 () Int)
(declare-fun x4290 () Int)
(declare-fun x3374 () Int)
(declare-fun x3740 () Bool)
(declare-fun x3913 () Bool)
(declare-fun x4816 () Int)
(declare-fun x933 () Bool)
(declare-fun x3172 () Bool)
(declare-fun x1197 () Bool)
(declare-fun x3574 () Int)
(declare-fun x3643 () Int)
(declare-fun x1041 () Bool)
(declare-fun x2779 () Int)
(declare-fun x4630 () Bool)
(declare-fun x4576 () Bool)
(declare-fun x4394 () Bool)
(declare-fun x1829 () Int)
(declare-fun x1132 () Bool)
(declare-fun x4385 () Int)
(declare-fun x1907 () Bool)
(declare-fun x820 (x2432) Int)
(declare-fun x3879 () Bool)
(declare-fun x2042 () Int)
(declare-fun x875 () Bool)
(declare-fun x836 (Int) Int)
(declare-fun x4653 () Bool)
(declare-fun x5180 () x2432)
(declare-fun x2217 () Int)
(declare-fun x1339 () Int)
(declare-fun x1613 () Int)
(declare-fun x817 () Bool)
(declare-fun x97 () Int)
(declare-fun x4804 () Bool)
(declare-fun x4161 () Int)
(declare-fun x2316 () Int)
(declare-fun x1086 () Bool)
(declare-fun x4432 (x2432) Int)
(declare-fun x4559 () Int)
(declare-fun x419 () Int)
(declare-fun x3063 () Bool)
(declare-fun x4778 () Int)
(declare-fun x4637 () Bool)
(declare-fun x5441 () Int)
(declare-fun x5124 () Bool)
(declare-fun x2153 () Int)
(declare-fun x755 () Bool)
(declare-fun x3441 () Bool)
(declare-fun x3808 () Bool)
(declare-fun x5156 () x2432)
(declare-fun x3779 () x2432)
(declare-fun x3020 () Bool)
(declare-fun x719 () Bool)
(declare-fun x5053 () Int)
(declare-fun x3535 (Int) Int)
(declare-fun x4584 () Bool)
(declare-fun x535 () Int)
(declare-fun x570 (Int Int) Int)
(declare-fun x2300 () Bool)
(declare-fun x3010 () x2432)
(declare-fun x4352 () Int)
(declare-fun x279 () Bool)
(declare-fun x271 () x2432)
(declare-fun x3577 () Bool)
(declare-fun x1437 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x4105 () Int)
(declare-fun x1529 () Int)
(declare-fun x3500 () Bool)
(declare-fun x5280 () Int)
(declare-fun x3271 () x2432)
(declare-fun x4796 (x2432) Int)
(declare-fun x5054 () Int)
(declare-fun x2115 () Bool)
(declare-fun x3127 () Bool)
(declare-fun x4091 () Int)
(declare-fun x4868 () Bool)
(declare-fun x3804 () Int)
(declare-fun x2491 () Int)
(declare-fun x2365 () Bool)
(declare-fun x3717 () Bool)
(declare-fun x2409 () Int)
(declare-fun x1227 () Int)
(declare-fun x5436 () x2432)
(declare-fun x1036 () x2432)
(declare-fun x343 () Int)
(declare-fun x3646 () Bool)
(declare-fun x2445 () Bool)
(declare-fun x2325 () Int)
(declare-fun x1902 () Int)
(declare-fun x546 () Int)
(declare-fun x3425 () Bool)
(declare-fun x5333 () Bool)
(declare-fun x3109 () Bool)
(declare-fun x1703 () Bool)
(declare-fun x5060 () Bool)
(declare-fun x5353 () Int)
(declare-fun x2837 () Bool)
(declare-fun x3233 () Int)
(declare-fun x4973 () Bool)
(declare-fun x4147 () Bool)
(declare-fun x625 () Int)
(declare-fun x2175 () Bool)
(declare-fun x2137 () Bool)
(declare-fun x4674 () Int)
(declare-fun x554 () Bool)
(declare-fun x2966 () Int)
(declare-fun x120 () Bool)
(declare-fun x4110 () Bool)
(declare-fun x4884 () Int)
(declare-fun x1691 () Int)
(declare-fun x2855 () Int)
(declare-fun x1340 () Bool)
(declare-fun x690 () x2432)
(declare-fun x4647 () Bool)
(declare-fun x2164 () Bool)
(declare-fun x2111 () Int)
(declare-fun x2018 () Bool)
(declare-fun x4815 () Int)
(declare-fun x5016 () Int)
(declare-fun x5127 () Bool)
(declare-fun x2648 () Int)
(declare-fun x3770 () Int)
(declare-fun x1592 () Int)
(declare-fun x4570 () Int)
(declare-fun x2733 () Int)
(declare-fun x3887 () Int)
(declare-fun x893 () Bool)
(declare-fun x2473 () Int)
(declare-fun x685 () Int)
(declare-fun x4388 () Bool)
(declare-fun x1205 () Int)
(declare-fun x4506 () Int)
(declare-fun x3329 () Bool)
(declare-fun x5103 () Int)
(declare-fun x200 () Bool)
(declare-fun x478 (x2432) Int)
(declare-fun x1382 () Int)
(declare-fun x5048 () Bool)
(declare-fun x985 () Bool)
(declare-fun x5279 () Int)
(declare-fun x3640 () Bool)
(declare-fun x890 () Bool)
(declare-fun x3738 () Bool)
(declare-fun x2813 () Bool)
(declare-fun x2040 () Int)
(declare-fun x4763 (Int) Int)
(declare-fun x3655 (x2432) Int)
(declare-fun x5047 () x2432)
(declare-fun x4239 () Bool)
(declare-fun x1553 () Int)
(declare-fun x400 () Bool)
(declare-fun x1476 () Int)
(declare-fun x4650 () Bool)
(declare-fun x165 () Bool)
(declare-fun x5119 () Int)
(declare-fun x4967 () Bool)
(declare-fun x2223 () Int)
(declare-fun x1045 () Int)
(declare-fun x3635 () Bool)
(declare-fun x4737 () Bool)
(declare-fun x3484 () Int)
(declare-fun x1050 () Bool)
(declare-fun x19 () Bool)
(declare-fun x5012 () Int)
(declare-fun x1268 () Bool)
(declare-fun x39 () Int)
(declare-fun x1394 () Int)
(declare-fun x3060 () x2432)
(declare-fun x264 () Bool)
(declare-fun x2288 () Int)
(declare-fun x1487 () Bool)
(declare-fun x1081 () Int)
(declare-fun x4134 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x4481 () x2432)
(declare-fun x2185 () Int)
(declare-fun x906 () Int)
(declare-fun x3885 () x2432)
(declare-fun x5197 () Bool)
(declare-fun x2836 () Bool)
(declare-fun x1702 () Bool)
(declare-fun x266 () Int)
(declare-fun x3810 () Bool)
(declare-fun x2638 () Bool)
(declare-fun x1542 () Int)
(declare-fun x3168 () Int)
(declare-fun x2542 () Int)
(declare-fun x5174 () Int)
(declare-fun x2166 () Bool)
(declare-fun x1934 () Int)
(declare-fun x3788 () x2432)
(declare-fun x4175 () Bool)
(declare-fun x3360 () x2432)
(declare-fun x1758 () Int)
(declare-fun x3320 () Bool)
(declare-fun x1955 () Int)
(declare-fun x2255 () Int)
(declare-fun x5201 () Int)
(declare-fun x2243 () Bool)
(declare-fun x5262 () Bool)
(declare-fun x3735 () Int)
(declare-fun x501 () Int)
(declare-fun x2298 () Bool)
(declare-fun x3727 () Bool)
(declare-fun x1491 () Bool)
(declare-fun x1353 () Bool)
(declare-fun x4710 () Int)
(declare-fun x1727 () Int)
(declare-fun x3994 () Bool)
(declare-fun x898 () Bool)
(declare-fun x2672 () Bool)
(declare-fun x4994 () Bool)
(declare-fun x591 () Bool)
(declare-fun x5153 () x2432)
(declare-fun x4520 () Bool)
(declare-fun x542 () Bool)
(declare-fun x917 () Bool)
(declare-fun x3087 () Bool)
(declare-fun x4951 () Int)
(declare-fun x1074 () Int)
(declare-fun x901 () Int)
(declare-fun x976 () Bool)
(declare-fun x5342 () Int)
(declare-fun x777 () Bool)
(declare-fun x3496 () Bool)
(declare-fun x2433 () Int)
(declare-fun x3299 () Bool)
(declare-fun x178 () Int)
(declare-fun x3872 () x2432)
(declare-fun x473 () Int)
(declare-fun x4952 () Bool)
(declare-fun x4961 () Bool)
(declare-fun x4296 () Bool)
(declare-fun x3569 () Int)
(declare-fun x5298 () Int)
(declare-fun x2888 () Bool)
(declare-fun x2171 () Bool)
(declare-fun x155 () Bool)
(declare-fun x4402 () Bool)
(declare-fun x1604 () Bool)
(declare-fun x2466 () Int)
(declare-fun x1578 () Int)
(declare-fun x945 () Int)
(declare-fun x1352 () Bool)
(declare-fun x4324 () Bool)
(declare-fun x3432 () Int)
(declare-fun x4755 () Int)
(declare-fun x4115 () Int)
(declare-fun x2356 () Bool)
(declare-fun x569 () Int)
(declare-fun x3407 () Bool)
(declare-fun x4479 () Bool)
(declare-fun x4917 () Bool)
(declare-fun x4679 () Bool)
(declare-fun x2751 () x2432)
(declare-fun x4254 () Int)
(declare-fun x3386 () Bool)
(declare-fun x1992 () Bool)
(declare-fun x650 () Bool)
(declare-fun x4986 () Bool)
(declare-fun x3654 () x2432)
(declare-fun x1646 () Bool)
(declare-fun x952 () Bool)
(declare-fun x1928 () Bool)
(declare-fun x2094 () x2432)
(declare-fun x1841 () Bool)
(declare-fun x3346 () Int)
(declare-fun x827 () Bool)
(declare-fun x792 () Bool)
(declare-fun x4732 () Int)
(declare-fun x4968 () Int)
(declare-fun x849 () Bool)
(declare-fun x5099 () x2432)
(declare-fun x1979 () x2432)
(declare-fun x3838 () Bool)
(declare-fun x2486 () Bool)
(declare-fun x5304 () Bool)
(declare-fun x4513 () Bool)
(declare-fun x4947 () Int)
(declare-fun x2784 () Bool)
(declare-fun x1745 () x2432)
(declare-fun x865 () Bool)
(declare-fun x4579 () Bool)
(declare-fun x1784 () Int)
(declare-fun x4143 () Bool)
(declare-fun x2490 () Bool)
(declare-fun x4623 () Bool)
(declare-fun x5287 () x2432)
(declare-fun x344 () Int)
(declare-fun x2942 () Int)
(declare-fun x3832 () Bool)
(declare-fun x3448 () Int)
(declare-fun x2890 () Bool)
(declare-fun x1960 () Int)
(declare-fun x1225 () Int)
(declare-fun x2775 () Bool)
(declare-fun x126 () Int)
(declare-fun x2828 () Bool)
(declare-fun x2570 () Bool)
(declare-fun x2618 () Bool)
(declare-fun x5155 () x2432)
(declare-fun x937 () Bool)
(declare-fun x5087 () Int)
(declare-fun x876 () Bool)
(declare-fun x74 () Int)
(declare-fun x24 () Int)
(declare-fun x2299 () Int)
(declare-fun x4760 () Bool)
(declare-fun x1360 () Int)
(declare-fun x2901 () Int)
(declare-fun x299 () Bool)
(declare-fun x4477 () Int)
(declare-fun x3627 (x2432) Int)
(declare-fun x2985 () x2432)
(declare-fun x423 () Bool)
(declare-fun x3720 () Int)
(declare-fun x2669 () Bool)
(declare-fun x2818 () Bool)
(declare-fun x1632 () Int)
(declare-fun x1303 () Bool)
(declare-fun x4317 () Int)
(declare-fun x270 () x2432)
(declare-fun x2940 () Int)
(declare-fun x1705 () Bool)
(declare-fun x67 () Bool)
(declare-fun x161 () Bool)
(declare-fun x1514 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x232 () Bool)
(declare-fun x3412 () Bool)
(declare-fun x4249 () x2432)
(declare-fun x3160 () Int)
(declare-fun x2654 () Bool)
(declare-fun x2007 () Bool)
(declare-fun x4719 () x2432)
(declare-fun x373 () Bool)
(declare-fun x3974 () Bool)
(declare-fun x1298 () Bool)
(declare-fun x3175 () Bool)
(declare-fun x3728 () x2432)
(declare-fun x4478 () Bool)
(declare-fun x1286 () Int)
(declare-fun x4989 () x2432)
(declare-fun x5405 () Int)
(declare-fun x3790 () Int)
(declare-fun x2082 () Int)
(declare-fun x5402 () Bool)
(declare-fun x872 () Bool)
(declare-fun x513 () Int)
(declare-fun x5364 () x2432)
(declare-fun x2826 () Int)
(declare-fun x5345 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x604 () Bool)
(declare-fun x3534 () Bool)
(declare-fun x3532 () Bool)
(declare-fun x5081 () Bool)
(declare-fun x4888 () Bool)
(declare-fun x5075 () Int)
(declare-fun x2516 () Bool)
(declare-fun x5330 () Int)
(declare-fun x4744 () Bool)
(declare-fun x1797 () Bool)
(declare-fun x801 () x2432)
(declare-fun x658 () Bool)
(declare-fun x1783 () Bool)
(declare-fun x5149 () Bool)
(declare-fun x574 () Int)
(declare-fun x3871 () Int)
(declare-fun x1428 () x2432)
(declare-fun x4635 () Int)
(declare-fun x3899 () Bool)
(declare-fun x4566 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x2796 () Bool)
(declare-fun x3173 () Bool)
(declare-fun x255 () x2432)
(declare-fun x1799 () Bool)
(declare-fun x3936 () Int)
(declare-fun x5116 () Bool)
(declare-fun x5284 () Int)
(declare-fun x3624 () Int)
(declare-fun x5300 () Bool)
(declare-fun x3940 () Int)
(declare-fun x1017 () Bool)
(declare-fun x5199 () Bool)
(declare-fun x5221 () Int)
(declare-fun x1029 () Bool)
(declare-fun x617 () Int)
(declare-fun x4167 () Bool)
(declare-fun x3689 (x2432) Int)
(declare-fun x3420 () Bool)
(declare-fun x4800 () Int)
(declare-fun x4985 () Bool)
(declare-fun x3664 () Bool)
(declare-fun x1506 () Int)
(declare-fun x4612 () x2432)
(declare-fun x2759 () Int)
(declare-fun x414 () Int)
(declare-fun x314 () Bool)
(declare-fun x720 () Bool)
(declare-fun x2732 () x2432)
(declare-fun x91 () Bool)
(declare-fun x1367 () Int)
(declare-fun x345 () Int)
(declare-fun x3159 () Int)
(declare-fun x3760 () Bool)
(declare-fun x1499 () Int)
(declare-fun x815 () Int)
(declare-fun x1342 () Bool)
(declare-fun x1733 () Bool)
(declare-fun x2980 () Int)
(declare-fun x4082 () Bool)
(declare-fun x5163 () Int)
(declare-fun x4216 () Int)
(declare-fun x562 () Bool)
(declare-fun x1500 () Bool)
(declare-fun x2485 () Bool)
(declare-fun x3964 () Int)
(declare-fun x908 () Bool)
(declare-fun x3457 () Bool)
(declare-fun x3633 () Int)
(declare-fun x5042 () Int)
(declare-fun x3121 () Bool)
(declare-fun x799 () Int)
(declare-fun x1823 () Int)
(declare-fun x351 () Bool)
(declare-fun x297 () Int)
(declare-fun x3086 () Bool)
(declare-fun x5373 (Int) Int)
(declare-fun x1391 () Bool)
(declare-fun x3467 () Int)
(declare-fun x1035 () Bool)
(declare-fun x1040 () Bool)
(declare-fun x1904 () Bool)
(declare-fun x606 () Bool)
(declare-fun x2522 () Int)
(declare-fun x1110 () Bool)
(declare-fun x3377 () Int)
(declare-fun x2508 () Int)
(declare-fun x4599 () Int)
(declare-fun x188 () x2432)
(declare-fun x1788 () Bool)
(declare-fun x2224 () x2432)
(declare-fun x5072 () Bool)
(declare-fun x2439 () Int)
(declare-fun x1164 () Bool)
(declare-fun x4677 () Int)
(declare-fun x4830 () Bool)
(declare-fun x1965 () Int)
(declare-fun x1216 () Bool)
(declare-fun x440 () Bool)
(declare-fun x3440 () Int)
(declare-fun x5220 () Int)
(declare-fun x1586 () Bool)
(declare-fun x5007 () Bool)
(declare-fun x4652 () Bool)
(declare-fun x4832 () Bool)
(declare-fun x4818 () Bool)
(declare-fun x1077 () Int)
(declare-fun x807 () Int)
(declare-fun x4751 () Bool)
(declare-fun x3685 () Int)
(declare-fun x2701 () Bool)
(declare-fun x852 () Bool)
(declare-fun x4621 () Bool)
(declare-fun x1120 () Int)
(declare-fun x2891 () Int)
(declare-fun x3941 () Int)
(declare-fun x4810 () Bool)
(declare-fun x5423 () x2432)
(declare-fun x2758 () Int)
(declare-fun x1274 (Int) Int)
(declare-fun x1389 () Bool)
(declare-fun x1028 () Bool)
(declare-fun x523 () Int)
(declare-fun x28 () Int)
(declare-fun x4914 () Int)
(declare-fun x2142 () Bool)
(declare-fun x1346 () Bool)
(declare-fun x4211 () Bool)
(declare-fun x3831 () Bool)
(declare-fun x3718 () x2432)
(declare-fun x2148 () Bool)
(declare-fun x2053 () Int)
(declare-fun x5386 () Int)
(declare-fun x1782 () Bool)
(declare-fun x1280 () x2432)
(declare-fun x247 () Bool)
(declare-fun x1235 () Bool)
(declare-fun x600 () Bool)
(declare-fun x1735 () Int)
(declare-fun x5266 () Int)
(declare-fun x4697 () Bool)
(declare-fun x1697 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x1490 () Bool)
(declare-fun x1959 () Bool)
(declare-fun x2391 () Int)
(declare-fun x4545 () Bool)
(declare-fun x2610 () Bool)
(declare-fun x381 () Bool)
(declare-fun x837 () Int)
(declare-fun x2010 () Bool)
(declare-fun x846 () Int)
(declare-fun x5388 () Bool)
(declare-fun x4474 () Int)
(declare-fun x965 () Int)
(declare-fun x1263 () Bool)
(declare-fun x4673 () Int)
(declare-fun x871 () Bool)
(declare-fun x1776 () Bool)
(declare-fun x2530 () Int)
(declare-fun x1208 () x2432)
(declare-fun x4236 () Bool)
(declare-fun x4459 () Int)
(declare-fun x3469 () Bool)
(declare-fun x3504 () Int)
(declare-fun x1104 () Bool)
(declare-fun x4518 () Int)
(declare-fun x2920 () Bool)
(declare-fun x585 () Int)
(declare-fun x4504 () Int)
(declare-fun x3113 () Int)
(declare-fun x2348 () Int)
(declare-fun x5128 () Int)
(declare-fun x1426 () Int)
(declare-fun x4164 () x2432)
(declare-fun x2795 () Int)
(declare-fun x431 () Bool)
(declare-fun x382 () Int)
(declare-fun x1888 () Int)
(declare-fun x3091 () Bool)
(declare-fun x1943 () Bool)
(declare-fun x5349 () Bool)
(declare-fun x3134 () Bool)
(declare-fun x1046 () x2432)
(declare-fun x1054 () Bool)
(declare-fun x2181 () Int)
(declare-fun x4482 () Bool)
(declare-fun x2710 () Int)
(declare-fun x1012 () Bool)
(declare-fun x1558 () Int)
(declare-fun x2297 () Int)
(declare-fun x2644 () Bool)
(declare-fun x2430 () Int)
(declare-fun x5238 () Int)
(declare-fun x3702 () Int)
(declare-fun x3253 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x614 () Int)
(declare-fun x4443 () Bool)
(declare-fun x2417 () Bool)
(declare-fun x3985 () Int)
(declare-fun x4749 () Int)
(declare-fun x3884 () Int)
(declare-fun x1144 () Int)
(declare-fun x2928 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x5026 () Bool)
(declare-fun x4260 () Bool)
(declare-fun x1315 () x2432)
(declare-fun x558 () x2432)
(declare-fun x1680 () Int)
(declare-fun x4227 () Bool)
(declare-fun x4660 () Bool)
(declare-fun x4555 () Bool)
(declare-fun x2426 () Bool)
(declare-fun x4872 () Int)
(declare-fun x1661 () Bool)
(declare-fun x79 () Bool)
(declare-fun x22 () Int)
(declare-fun x3963 () Bool)
(declare-fun x4445 () x2432)
(declare-fun x3185 () Int)
(declare-fun x4923 () Int)
(declare-fun x1833 () Int)
(declare-fun x1867 () Bool)
(declare-fun x1929 () Bool)
(declare-fun x5340 () Int)
(declare-fun x1643 () Int)
(declare-fun x1677 () Int)
(declare-fun x3650 () x2432)
(declare-fun x5029 () Int)
(declare-fun x2841 () Bool)
(declare-fun x124 () Int)
(declare-fun x4366 () Int)
(declare-fun x1240 () Bool)
(declare-fun x3817 () Bool)
(declare-fun x2318 () Bool)
(declare-fun x5410 () Bool)
(declare-fun x3799 () Int)
(declare-fun x1972 () Bool)
(declare-fun x1734 () Bool)
(declare-fun x450 (x2432) Int)
(declare-fun x4950 () Int)
(declare-fun x1187 () Int)
(declare-fun x2668 () Int)
(declare-fun x3242 () Int)
(declare-fun x323 () Int)
(declare-fun x4141 () Bool)
(declare-fun x1141 () Int)
(declare-fun x4517 () Bool)
(declare-fun x3781 () Bool)
(declare-fun x4370 () Bool)
(declare-fun x250 (x2432) Int)
(declare-fun x2265 () x2432)
(declare-fun x861 () Int)
(declare-fun x1569 () Bool)
(declare-fun x4083 () Bool)
(declare-fun x1622 () Int)
(declare-fun x4426 () Bool)
(declare-fun x3239 () Int)
(declare-fun x1601 () Bool)
(declare-fun x2898 () Bool)
(declare-fun x4867 () Bool)
(declare-fun x301 () Int)
(declare-fun x4988 () x2432)
(declare-fun x2198 () Bool)
(declare-fun x4339 () Bool)
(declare-fun x2059 () Bool)
(declare-fun x1022 () Bool)
(declare-fun x4325 () x2432)
(declare-fun x2469 () Bool)
(declare-fun x2471 () Bool)
(declare-fun x3570 () Bool)
(declare-fun x4690 () Bool)
(declare-fun x2728 () Int)
(declare-fun x995 () Bool)
(declare-fun x2885 () Int)
(declare-fun x1176 () Int)
(declare-fun x5096 () x2432)
(declare-fun x1881 () Bool)
(declare-fun x2870 () Int)
(declare-fun x189 () Bool)
(declare-fun x2869 () Int)
(declare-fun x3056 () Int)
(declare-fun x1967 () Int)
(declare-fun x763 () Int)
(declare-fun x3915 () Bool)
(declare-fun x1822 () x2432)
(declare-fun x1186 () Int)
(declare-fun x1744 () Int)
(declare-fun x3675 (Int) Int)
(declare-fun x249 () Bool)
(declare-fun x3013 () Int)
(declare-fun x2754 () Int)
(declare-fun x2933 () Int)
(declare-fun x2264 () Int)
(declare-fun x4363 () Int)
(declare-fun x1102 () Bool)
(declare-fun x524 () Int)
(declare-fun x975 () Bool)
(declare-fun x1003 () Int)
(declare-fun x803 () Int)
(declare-fun x1764 () Bool)
(declare-fun x4997 () Bool)
(declare-fun x682 () Bool)
(declare-fun x1364 () Int)
(declare-fun x1252 () Int)
(declare-fun x1409 () Bool)
(declare-fun x1090 () Bool)
(declare-fun x3733 () Int)
(declare-fun x3984 () x2432)
(declare-fun x3452 () Bool)
(declare-fun x3706 () Bool)
(declare-fun x4187 () Bool)
(declare-fun x4601 () Int)
(declare-fun x5183 () x2432)
(declare-fun x1350 () Int)
(declare-fun x1495 () Bool)
(declare-fun x2132 () x2432)
(declare-fun x5113 () x2432)
(declare-fun x1857 () x2432)
(declare-fun x4696 () Bool)
(declare-fun x3966 () Bool)
(declare-fun x2043 () Int)
(declare-fun x4611 () Int)
(declare-fun x2649 () Int)
(declare-fun x122 () Int)
(declare-fun x1593 () Bool)
(declare-fun x396 () Bool)
(declare-fun x4608 () Int)
(declare-fun x2280 () Bool)
(declare-fun x3680 () Int)
(declare-fun x4439 () Bool)
(declare-fun x2598 () Int)
(declare-fun x2524 () Bool)
(declare-fun x4184 () Bool)
(declare-fun x1094 () Int)
(declare-fun x3314 () Int)
(declare-fun x2003 () Int)
(declare-fun x2375 () x2432)
(declare-fun x4875 () Bool)
(declare-fun x4922 () Bool)
(declare-fun x4925 () Bool)
(declare-fun x1207 () Bool)
(declare-fun x2848 () Bool)
(declare-fun x2939 () Int)
(declare-fun x2520 () Int)
(declare-fun x1685 () Int)
(declare-fun x2374 () Bool)
(declare-fun x3581 () Int)
(declare-fun x4724 () Bool)
(declare-fun x2382 () Int)
(declare-fun x918 () x2432)
(declare-fun x802 () Int)
(declare-fun x462 () Bool)
(declare-fun x2986 () Bool)
(declare-fun x5343 () x2432)
(declare-fun x2908 () Int)
(declare-fun x3531 () Int)
(declare-fun x715 () Bool)
(declare-fun x1699 () Bool)
(declare-fun x1880 () Bool)
(declare-fun x3272 () x2432)
(declare-fun x1993 () x2432)
(declare-fun x3089 () Int)
(declare-fun x5294 () Int)
(declare-fun x618 () Bool)
(declare-fun x2572 () x2432)
(declare-fun x1982 () Bool)
(declare-fun x2703 () Bool)
(declare-fun x3767 () Bool)
(declare-fun x1762 () Int)
(declare-fun x3483 () Int)
(declare-fun x2690 () Int)
(declare-fun x3679 () Int)
(declare-fun x1313 () Bool)
(declare-fun x337 () Bool)
(declare-fun x3698 () Bool)
(declare-fun x2517 () Int)
(declare-fun x5098 () Int)
(declare-fun x41 () Bool)
(declare-fun x488 () Int)
(declare-fun x2941 () Int)
(declare-fun x4103 () Int)
(declare-fun x3278 () Int)
(declare-fun x5145 () Bool)
(declare-fun x3927 () Bool)
(declare-fun x4466 () Int)
(declare-fun x1665 () Bool)
(declare-fun x5187 () Bool)
(declare-fun x5399 () Bool)
(declare-fun x997 () Bool)
(declare-fun x5301 () Bool)
(declare-fun x1287 () Int)
(declare-fun x1978 () x2432)
(declare-fun x1513 () x2432)
(declare-fun x2707 () Bool)
(declare-fun x3347 () Bool)
(declare-fun x5347 () Bool)
(declare-fun x5117 () Int)
(declare-fun x4453 () Int)
(declare-fun x2632 () Bool)
(declare-fun x4822 () Bool)
(declare-fun x903 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x438 () Bool)
(declare-fun x1243 () Bool)
(declare-fun x518 () Int)
(declare-fun x668 () Bool)
(declare-fun x5049 () x2432)
(declare-fun x3700 () Bool)
(declare-fun x3942 () Int)
(declare-fun x3140 () Int)
(declare-fun x4725 () Int)
(declare-fun x4393 () Int)
(declare-fun x2651 () Bool)
(declare-fun x2511 () Bool)
(declare-fun x5035 () x2432)
(declare-fun x3170 () Int)
(declare-fun x1065 () Bool)
(declare-fun x3713 () x2432)
(declare-fun x5051 () Bool)
(declare-fun x3333 () Int)
(declare-fun x2215 () Bool)
(declare-fun x3823 () Int)
(declare-fun x788 () Int)
(declare-fun x4040 () Bool)
(declare-fun x256 () Bool)
(declare-fun x4181 () Int)
(declare-fun x4835 () Int)
(declare-fun x4420 () Int)
(declare-fun x4193 () x2432)
(declare-fun x2068 () Int)
(declare-fun x860 () Bool)
(declare-fun x1770 () x2432)
(declare-fun x3876 () Bool)
(declare-fun x3259 () Bool)
(declare-fun x5328 () Bool)
(declare-fun x3561 () Int)
(declare-fun x5073 () Bool)
(declare-fun x3897 () x2432)
(declare-fun x4548 () Bool)
(declare-fun x4743 () Int)
(declare-fun x644 () Int)
(declare-fun x3820 () Bool)
(declare-fun x3083 () Int)
(declare-fun x4795 () Bool)
(declare-fun x769 () Bool)
(declare-fun x4823 () Bool)
(declare-fun x1402 () Int)
(declare-fun x3260 () Bool)
(declare-fun x5074 () Bool)
(declare-fun x3951 () Int)
(declare-fun x2342 () Int)
(declare-fun x278 () Int)
(declare-fun x5206 () Bool)
(declare-fun x2656 () Bool)
(declare-fun x3076 () Bool)
(declare-fun x704 () Int)
(declare-fun x785 () Bool)
(declare-fun x1874 () Bool)
(declare-fun x2093 () Bool)
(declare-fun x4824 () Bool)
(declare-fun x1450 () Int)
(declare-fun x2827 () Bool)
(declare-fun x3543 () Int)
(declare-fun x2195 () Bool)
(declare-fun x1541 () Bool)
(declare-fun x3948 () Bool)
(declare-fun x1218 () Int)
(declare-fun x3860 () Bool)
(declare-fun x3969 () Bool)
(declare-fun x1771 () Bool)
(declare-fun x709 () x2432)
(declare-fun x4552 () Bool)
(declare-fun x3053 () Bool)
(declare-fun x1347 () Bool)
(declare-fun x2981 () Bool)
(declare-fun x2743 () Int)
(declare-fun x1291 () Int)
(declare-fun x4128 () Bool)
(declare-fun x2429 () Bool)
(declare-fun x752 () Bool)
(declare-fun x401 () Int)
(declare-fun x3401 () Bool)
(declare-fun x638 () x2432)
(declare-fun x2620 (Int) Int)
(declare-fun x2205 () x2432)
(declare-fun x1676 () Bool)
(declare-fun x3836 () Bool)
(declare-fun x4433 () Int)
(declare-fun x2381 () Bool)
(declare-fun x5167 () Bool)
(declare-fun x1260 () Int)
(declare-fun x2815 () Int)
(declare-fun x1142 () Bool)
(declare-fun x4936 () Bool)
(declare-fun x1861 () Int)
(declare-fun x481 () Bool)
(declare-fun x187 () Int)
(declare-fun x3604 () Int)
(declare-fun x2495 () Bool)
(declare-fun x1281 () Bool)
(declare-fun x5139 () Bool)
(declare-fun x4074 () Bool)
(declare-fun x1059 () Int)
(declare-fun x3986 () Bool)
(declare-fun x2766 () Int)
(declare-fun x2385 () Bool)
(declare-fun x5088 () Bool)
(declare-fun x4411 () Bool)
(declare-fun x3750 () x2432)
(declare-fun x1724 () Bool)
(declare-fun x2448 () Bool)
(declare-fun x1464 () Bool)
(declare-fun x2307 () Bool)
(declare-fun x2083 () x2432)
(declare-fun x2558 () Int)
(declare-fun x5106 () Int)
(declare-fun x5086 () Int)
(declare-fun x3139 () Int)
(declare-fun x2262 () Bool)
(declare-fun x4452 () Int)
(declare-fun x2080 () Bool)
(declare-fun x1522 () Bool)
(declare-fun x924 () Bool)
(declare-fun x2095 () Bool)
(declare-fun x4319 () Bool)
(declare-fun x1220 () Bool)
(declare-fun x197 () Int)
(declare-fun x3907 () Bool)
(declare-fun x1516 () Bool)
(declare-fun x4152 () Bool)
(declare-fun x1932 () Bool)
(declare-fun x1374 () Int)
(declare-fun x3232 () x2432)
(declare-fun x4642 () Bool)
(declare-fun x254 () Bool)
(declare-fun x1393 () Bool)
(declare-fun x3368 () Bool)
(declare-fun x3584 () Int)
(declare-fun x26 () Int)
(declare-fun x374 () Int)
(declare-fun x5025 () Bool)
(declare-fun x3665 () x2432)
(declare-fun x3766 () Int)
(declare-fun x1155 () Bool)
(declare-fun x1399 () Int)
(declare-fun x5 () Bool)
(declare-fun x884 () Int)
(declare-fun x4865 () Int)
(declare-fun x3869 () Int)
(declare-fun x5188 () Bool)
(declare-fun x1974 () Int)
(declare-fun x1748 () Int)
(declare-fun x3103 () Int)
(declare-fun x960 () Bool)
(declare-fun x2902 () Bool)
(declare-fun x4813 () Bool)
(declare-fun x2595 () Int)
(declare-fun x2319 () Int)
(declare-fun x2872 () Bool)
(declare-fun x3442 () Bool)
(declare-fun x1820 () Int)
(declare-fun x1126 () Bool)
(declare-fun x855 () Bool)
(declare-fun x3601 () x2432)
(declare-fun x2905 () Int)
(declare-fun x3101 () Bool)
(declare-fun x3515 () Bool)
(declare-fun x5442 () Bool)
(declare-fun x2211 () Bool)
(declare-fun x1808 () Int)
(declare-fun x904 () Bool)
(declare-fun x1073 () Int)
(declare-fun x4974 () Bool)
(declare-fun x2646 () Bool)
(declare-fun x696 () Bool)
(declare-fun x3597 () Bool)
(declare-fun x3747 () Bool)
(declare-fun x2227 () Bool)
(declare-fun x152 () Int)
(declare-fun x3367 () Bool)
(declare-fun x4269 (Int) Int)
(declare-fun x1557 () x2432)
(declare-fun x1765 () Bool)
(declare-fun x4451 () Bool)
(declare-fun x3765 () Bool)
(declare-fun x48 () Bool)
(declare-fun x1285 () x2432)
(declare-fun x4953 () Bool)
(declare-fun x4580 () Int)
(declare-fun x442 () Bool)
(declare-fun x3699 () x2432)
(declare-fun x4060 () Bool)
(declare-fun x2106 () Bool)
(declare-fun x3996 () Int)
(declare-fun x206 () Int)
(declare-fun x1137 () Int)
(declare-fun x1290 () Bool)
(declare-fun x2857 () x2432)
(declare-fun x3726 () Bool)
(declare-fun x2547 () x2432)
(declare-fun x891 () Int)
(declare-fun x27 () Int)
(declare-fun x516 () Bool)
(declare-fun x33 () Int)
(declare-fun x1125 () Int)
(declare-fun x5084 () Int)
(declare-fun x444 () Bool)
(declare-fun x1531 () Int)
(declare-fun x3424 () x2432)
(declare-fun x559 () Bool)
(declare-fun x4207 () Int)
(declare-fun x3923 () Int)
(declare-fun x3200 () Int)
(declare-fun x167 () Bool)
(declare-fun x2619 () Int)
(declare-fun x5412 () Bool)
(declare-fun x3356 () Bool)
(declare-fun x111 () Int)
(declare-fun x4145 () Int)
(declare-fun x318 () Bool)
(declare-fun x4539 () Int)
(declare-fun x326 () Bool)
(declare-fun x1242 () Bool)
(declare-fun x4390 () Bool)
(declare-fun x171 () Int)
(declare-fun x1309 () Bool)
(declare-fun x2088 () Bool)
(declare-fun x3495 () Int)
(declare-fun x2034 () x2432)
(declare-fun x5168 () Int)
(declare-fun x3419 () Int)
(declare-fun x1471 () Bool)
(declare-fun x2640 () Bool)
(declare-fun x1451 () Bool)
(declare-fun x859 () Bool)
(declare-fun x2698 () Bool)
(declare-fun x2734 () Bool)
(declare-fun x3588 () Int)
(declare-fun x3264 () Int)
(declare-fun x3905 () Int)
(declare-fun x4606 () Bool)
(declare-fun x2977 () Int)
(declare-fun x3850 () Int)
(declare-fun x1844 () Int)
(declare-fun x4464 () Bool)
(declare-fun x425 () Bool)
(declare-fun x2674 () Bool)
(declare-fun x1061 () Int)
(declare-fun x4565 () Bool)
(declare-fun x2833 () x2432)
(declare-fun x316 () Int)
(declare-fun x4863 () Int)
(declare-fun x2204 () Bool)
(declare-fun x2790 () Int)
(declare-fun x3179 () Int)
(declare-fun x1037 () Bool)
(declare-fun x1977 () Bool)
(declare-fun x4515 () Int)
(declare-fun x61 () Bool)
(declare-fun x3341 () x2432)
(declare-fun x1605 () x2432)
(declare-fun x4682 () Int)
(declare-fun x4958 () Bool)
(declare-fun x1063 () Int)
(declare-fun x1753 () Int)
(declare-fun x734 () Int)
(declare-fun x3693 () Int)
(declare-fun x5305 (x2432) Int)
(declare-fun x409 () Int)
(declare-fun x4035 () Int)
(declare-fun x1848 () Bool)
(declare-fun x469 () Bool)
(declare-fun x3673 () Bool)
(declare-fun x2150 () Bool)
(declare-fun x661 () Bool)
(declare-fun x3228 () x2432)
(declare-fun x3704 () Int)
(declare-fun x82 () x2432)
(declare-fun x1128 () Int)
(declare-fun x5286 () Int)
(declare-fun x3147 () Bool)
(declare-fun x2730 () Int)
(declare-fun x987 () Bool)
(declare-fun x2686 () x2432)
(declare-fun x71 () Bool)
(declare-fun x3040 () Int)
(declare-fun x1258 () Int)
(declare-fun x3945 () Bool)
(declare-fun x1951 () Int)
(declare-fun x5194 () Bool)
(declare-fun x3952 () Int)
(declare-fun x3818 () Bool)
(declare-fun x1656 () Int)
(declare-fun x5091 () Int)
(declare-fun x1570 () Int)
(declare-fun x4057 () Bool)
(declare-fun x990 () Bool)
(declare-fun x30 () Bool)
(declare-fun x292 () Bool)
(declare-fun x1135 () Bool)
(declare-fun x3556 () Int)
(declare-fun x2276 () Bool)
(declare-fun x3437 () x2432)
(declare-fun x70 () Int)
(declare-fun x4248 () x2432)
(declare-fun x4442 () Bool)
(declare-fun x4930 () Int)
(declare-fun x242 () Int)
(declare-fun x733 () Bool)
(declare-fun x2821 () Bool)
(declare-fun x751 () Bool)
(declare-fun x3710 () Int)
(declare-fun x44 () Bool)
(declare-fun x4907 () x2432)
(declare-fun x4771 () Int)
(declare-fun x3552 () Int)
(declare-fun x1121 () Bool)
(declare-fun x2322 () Bool)
(declare-fun x853 () x2432)
(declare-fun x4221 () Int)
(declare-fun x4874 () Int)
(declare-fun x494 () Bool)
(declare-fun x1018 () Bool)
(declare-fun x3499 () Bool)
(declare-fun x3479 () Int)
(declare-fun x1214 (Int) Int)
(declare-fun x781 () Bool)
(declare-fun x2402 () Bool)
(declare-fun x3931 () Bool)
(declare-fun x4532 () Int)
(declare-fun x2393 () Bool)
(declare-fun x465 () Int)
(declare-fun x1614 () x2432)
(declare-fun x1805 () Int)
(declare-fun x1271 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x4776 () x2432)
(declare-fun x771 () Int)
(declare-fun x1897 () Int)
(declare-fun x2997 () Int)
(declare-fun x1545 () Bool)
(declare-fun x2461 () x2432)
(declare-fun x4342 () Bool)
(declare-fun x1412 () Bool)
(declare-fun x2937 () Int)
(declare-fun x919 () Int)
(declare-fun x4183 () Bool)
(declare-fun x714 () Bool)
(declare-fun x2035 () Int)
(declare-fun x645 () Bool)
(declare-fun x3438 () Bool)
(declare-fun x1682 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x1580 () Bool)
(declare-fun x3246 () x2432)
(declare-fun x3186 () Bool)
(declare-fun x654 () Int)
(declare-fun x5140 () Int)
(declare-fun x637 () Bool)
(declare-fun x1262 () Int)
(declare-fun x4094 () Int)
(declare-fun x3858 () Bool)
(declare-fun x699 () Int)
(declare-fun x4047 () Bool)
(declare-fun x4446 () Bool)
(declare-fun x2279 () Bool)
(declare-fun x2014 () Int)
(declare-fun x265 () Bool)
(declare-fun x2169 () Int)
(declare-fun x3317 () Bool)
(declare-fun x3786 () Int)
(declare-fun x3694 () Bool)
(declare-fun x4861 () Bool)
(declare-fun x2593 () Int)
(declare-fun x740 () Int)
(declare-fun x540 () Bool)
(declare-fun x4999 () Bool)
(declare-fun x3338 () Int)
(declare-fun x3305 () Bool)
(declare-fun x1723 () Bool)
(declare-fun x3533 (Int) Int)
(declare-fun x2886 () Int)
(declare-fun x1066 () Bool)
(declare-fun x3606 () Bool)
(declare-fun x2447 () Bool)
(declare-fun x1 () Bool)
(declare-fun x43 () Int)
(declare-fun x4427 () Int)
(declare-fun x3193 () x2432)
(declare-fun x4019 () Bool)
(declare-fun x2832 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x3731 () Bool)
(declare-fun x1752 () Bool)
(declare-fun x1314 () Int)
(declare-fun x3015 () Bool)
(declare-fun x2627 () Bool)
(declare-fun x5090 () x2432)
(declare-fun x2860 () Bool)
(declare-fun x1958 () Bool)
(declare-fun x4376 () Bool)
(declare-fun x581 () Bool)
(declare-fun x2041 () Bool)
(declare-fun x2283 () Int)
(declare-fun x1033 () Bool)
(declare-fun x5251 () Bool)
(declare-fun x4797 () Bool)
(declare-fun x939 () Int)
(declare-fun x2635 () Bool)
(declare-fun x2976 () Int)
(declare-fun x4391 () Bool)
(declare-fun x4854 () x2432)
(declare-fun x2983 () Int)
(declare-fun x4903 () Bool)
(declare-fun x5427 () Bool)
(declare-fun x1673 () Int)
(declare-fun x986 () x2432)
(declare-fun x4124 () Bool)
(declare-fun x5227 () Bool)
(declare-fun x2067 () Int)
(declare-fun x2868 () x2432)
(declare-fun x2017 () Int)
(declare-fun x2468 () Int)
(declare-fun x2091 () Int)
(declare-fun x2423 () Int)
(declare-fun x3557 () x2432)
(declare-fun x1648 () Int)
(declare-fun x4120 () Bool)
(declare-fun x780 () Bool)
(declare-fun x5445 () Int)
(declare-fun x4718 () Int)
(declare-fun x3935 () Bool)
(declare-fun x1885 () Int)
(declare-fun x1976 () Int)
(declare-fun x1319 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x4826 () Int)
(declare-fun x2414 () Int)
(declare-fun x680 () Int)
(declare-fun x2718 () Int)
(declare-fun x4654 () Bool)
(declare-fun x2500 () x2432)
(declare-fun x2203 () Bool)
(declare-fun x526 () x2432)
(declare-fun x5391 () Int)
(declare-fun x3192 () Int)
(declare-fun x521 () Int)
(declare-fun x194 () Int)
(declare-fun x391 () Bool)
(declare-fun x2992 () Int)
(declare-fun x5316 () Int)
(declare-fun x4215 () Bool)
(declare-fun x3107 () Bool)
(declare-fun x1233 () x2432)
(declare-fun x5395 () Bool)
(declare-fun x5308 () Int)
(declare-fun x4764 () x2432)
(declare-fun x5121 () Bool)
(declare-fun x4368 () Int)
(declare-fun x3344 () x2432)
(declare-fun x520 () Int)
(declare-fun x4538 () Int)
(declare-fun x3773 () Bool)
(declare-fun x4889 () Int)
(declare-fun x1173 () Int)
(declare-fun x2624 () Bool)
(declare-fun x532 () Bool)
(declare-fun x1540 () Int)
(declare-fun x1420 () Bool)
(declare-fun x3105 () Bool)
(declare-fun x363 () Int)
(declare-fun x4294 () x2432)
(declare-fun x4003 () Bool)
(declare-fun x5002 () Bool)
(declare-fun x4610 () Int)
(declare-fun x3212 () Bool)
(declare-fun x1666 () Int)
(declare-fun x3004 () Bool)
(declare-fun x3165 () Int)
(declare-fun x5317 () Bool)
(declare-fun x2493 () Bool)
(declare-fun x2274 () Bool)
(declare-fun x4289 () Bool)
(declare-fun x406 () Bool)
(declare-fun x46 () Int)
(declare-fun x805 () Bool)
(declare-fun x1413 () Bool)
(declare-fun x833 () Bool)
(declare-fun x2785 () Bool)
(declare-fun x4497 () Bool)
(declare-fun x525 (x2432) Int)
(declare-fun x2716 () Bool)
(declare-fun x1269 () Bool)
(declare-fun x2580 () Bool)
(declare-fun x632 () Bool)
(declare-fun x4514 () Bool)
(declare-fun x538 () Bool)
(declare-fun x4163 () Bool)
(declare-fun x4380 () Bool)
(declare-fun x2190 () Bool)
(declare-fun x3444 () Bool)
(declare-fun x858 () Bool)
(declare-fun x4741 () Bool)
(declare-fun x3282 () Bool)
(declare-fun x2955 () Bool)
(declare-fun x5361 () Bool)
(declare-fun x1670 () Bool)
(declare-fun x4900 () Bool)
(declare-fun x2761 () Int)
(declare-fun x2196 () x2432)
(declare-fun x1439 () Bool)
(declare-fun x4488 () Int)
(declare-fun x5350 () Int)
(declare-fun x2675 () Int)
(declare-fun x2639 () Bool)
(declare-fun x544 () Int)
(declare-fun x2074 () Int)
(declare-fun x4059 () Bool)
(declare-fun x1975 () Bool)
(declare-fun x2248 () x2432)
(declare-fun x3772 () Int)
(declare-fun x1100 () Bool)
(declare-fun x98 () Bool)
(declare-fun x3545 () Bool)
(declare-fun x2783 () Int)
(declare-fun x3988 () Int)
(declare-fun x529 () Bool)
(declare-fun x2583 () Bool)
(declare-fun x183 () Bool)
(declare-fun x4108 () Bool)
(declare-fun x5207 () Int)
(declare-fun x2353 () Bool)
(declare-fun x1015 () Int)
(declare-fun x4726 () Bool)
(declare-fun x201 () x2432)
(declare-fun x4876 () Bool)
(declare-fun x154 () Int)
(declare-fun x4786 () Int)
(declare-fun x2254 () Bool)
(declare-fun x3968 () Bool)
(declare-fun x2538 () Int)
(declare-fun x16 () Bool)
(declare-fun x352 () Int)
(declare-fun x652 () Int)
(declare-fun x2787 () Bool)
(declare-fun x3298 () Bool)
(declare-fun x5125 () Int)
(declare-fun x2854 () Bool)
(declare-fun x2994 () Bool)
(declare-fun x1130 () Int)
(declare-fun x889 () Bool)
(declare-fun x5319 () Int)
(declare-fun x4528 () Bool)
(declare-fun x657 () Bool)
(declare-fun x4622 () Bool)
(declare-fun x920 () Bool)
(declare-fun x2786 () Bool)
(declare-fun x121 () Bool)
(declare-fun x2740 () Bool)
(declare-fun x724 () Int)
(declare-fun x3639 () Int)
(declare-fun x2049 () Bool)
(declare-fun x701 () Int)
(declare-fun x1213 () x2432)
(declare-fun x3754 () Bool)
(declare-fun x5411 () x2432)
(declare-fun x4827 () Bool)
(declare-fun x756 () Bool)
(declare-fun x2964 () Int)
(declare-fun x4665 (x2432) Int)
(declare-fun x2060 () Bool)
(declare-fun x12 () Int)
(declare-fun x2605 () Int)
(declare-fun x2536 () Bool)
(declare-fun x5351 () Bool)
(declare-fun x522 () Int)
(declare-fun x216 () Bool)
(declare-fun x4848 () Int)
(declare-fun x3427 () Bool)
(declare-fun x4681 () Bool)
(declare-fun x3458 () Bool)
(declare-fun x2884 () Bool)
(declare-fun x239 () Bool)
(declare-fun x2810 () x2432)
(declare-fun x1206 () Bool)
(declare-fun x3235 () Bool)
(declare-fun x5313 () Int)
(declare-fun x1169 () Int)
(declare-fun x4343 () Bool)
(declare-fun x1301 () x2432)
(declare-fun x2108 () Bool)
(declare-fun x3528 () Int)
(declare-fun x1768 () Bool)
(declare-fun x3549 (Int) Int)
(declare-fun x5246 () Int)
(declare-fun x2285 () Bool)
(declare-fun x4759 () Bool)
(declare-fun x4892 () Bool)
(declare-fun x1953 () Bool)
(declare-fun x141 () Bool)
(declare-fun x290 () Int)
(declare-fun x4768 () Int)
(declare-fun x3957 () Int)
(declare-fun x2987 () Int)
(declare-fun x3404 () x2432)
(declare-fun x1010 () Bool)
(declare-fun x2218 () Int)
(declare-fun x3737 () Bool)
(declare-fun x1493 () Bool)
(declare-fun x2472 () Bool)
(declare-fun x2943 () Bool)
(declare-fun x4858 () Bool)
(declare-fun x1533 () Int)
(declare-fun x2302 () Bool)
(declare-fun x3586 () x2432)
(declare-fun x2452 () Bool)
(declare-fun x1204 () Bool)
(declare-fun x744 () Int)
(declare-fun x3061 () Int)
(declare-fun x169 () Int)
(declare-fun x5076 () Int)
(declare-fun x2238 () Int)
(declare-fun x163 () Int)
(declare-fun x2104 () Int)
(declare-fun x4179 () Bool)
(declare-fun x1510 () Int)
(declare-fun x4588 () Int)
(declare-fun x234 () Bool)
(declare-fun x42 () Bool)
(declare-fun x4491 () Int)
(declare-fun x4219 () Int)
(declare-fun x4536 () Int)
(declare-fun x4306 () Int)
(declare-fun x3522 () Int)
(declare-fun x2364 () Bool)
(declare-fun x5377 (x2432) Int)
(declare-fun x2360 () Bool)
(declare-fun x4698 () Bool)
(declare-fun x742 () Bool)
(declare-fun x793 () Bool)
(declare-fun x23 () Bool)
(declare-fun x4855 () x2432)
(declare-fun x712 () Int)
(declare-fun x3806 () Int)
(declare-fun x107 () Bool)
(declare-fun x1239 () Int)
(declare-fun x922 () Bool)
(declare-fun x2767 () Bool)
(declare-fun x5372 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x3137 () Bool)
(declare-fun x2930 () Bool)
(declare-fun x3961 () Bool)
(declare-fun x4112 () Bool)
(declare-fun x3177 () Bool)
(declare-fun x5202 () Bool)
(declare-fun x1610 () Bool)
(declare-fun x2582 () Bool)
(declare-fun x1611 () Bool)
(declare-fun x2455 () Bool)
(declare-fun x1411 () Bool)
(declare-fun x3006 () Bool)
(declare-fun x1998 () Int)
(declare-fun x2192 () Bool)
(declare-fun x4902 () Bool)
(declare-fun x1750 () Bool)
(declare-fun x2155 () Bool)
(declare-fun x4321 () Int)
(declare-fun x686 () Int)
(declare-fun x3450 () Bool)
(declare-fun x782 () Bool)
(declare-fun x5065 () Bool)
(declare-fun x128 () Bool)
(declare-fun x4484 () Bool)
(declare-fun x4329 () Bool)
(declare-fun x1612 () Bool)
(declare-fun x2160 () Bool)
(declare-fun x1816 () x2432)
(declare-fun x2663 () Bool)
(declare-fun x5230 () Int)
(declare-fun x4583 () Bool)
(declare-fun x2719 () Bool)
(declare-fun x4567 () Int)
(declare-fun x294 () Bool)
(declare-fun x1716 () Int)
(declare-fun x4364 () Bool)
(declare-fun x2116 () Bool)
(declare-fun x1112 () Bool)
(declare-fun x953 () Bool)
(declare-fun x1423 () Bool)
(declare-fun x2286 () Int)
(declare-fun x1983 () Int)
(declare-fun x302 () Bool)
(declare-fun x2769 () Int)
(declare-fun x3965 (x2432) Int)
(declare-fun x5419 () Int)
(declare-fun x4602 () Int)
(declare-fun x3339 () Int)
(declare-fun x786 () Bool)
(declare-fun x4840 () Int)
(declare-fun x717 () Bool)
(declare-fun x4502 () Int)
(declare-fun x4253 () Int)
(declare-fun x674 () Bool)
(declare-fun x2596 () Bool)
(declare-fun x2266 () Bool)
(declare-fun x2553 () Bool)
(declare-fun x384 () Bool)
(declare-fun x4929 () x2432)
(declare-fun x2609 () Bool)
(declare-fun x928 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x3176 () Bool)
(declare-fun x3539 () Int)
(declare-fun x1272 () Int)
(declare-fun x1497 () Int)
(declare-fun x1655 () Int)
(declare-fun x3993 () Int)
(declare-fun x4395 () Int)
(declare-fun x5204 () x2432)
(declare-fun x4812 () Bool)
(declare-fun x607 () Bool)
(declare-fun x362 () Int)
(declare-fun x3188 () Int)
(declare-fun x1809 () Bool)
(declare-fun x1956 () Bool)
(declare-fun x5443 () Int)
(declare-fun x208 () Bool)
(declare-fun x2811 () x2432)
(declare-fun x1261 () Bool)
(declare-fun x3512 () Int)
(declare-fun x3677 () Int)
(declare-fun x3883 () Bool)
(declare-fun x567 () Int)
(declare-fun x2258 () Int)
(declare-fun x784 () Bool)
(declare-fun x4121 () Bool)
(declare-fun x3544 () Int)
(declare-fun x196 () Int)
(declare-fun x2722 () Bool)
(declare-fun x4643 () Bool)
(declare-fun x3736 (x2432) Int)
(declare-fun x5178 () Bool)
(declare-fun x4882 () Int)
(declare-fun x3841 () Bool)
(declare-fun x5444 () x2432)
(declare-fun x1849 () Bool)
(declare-fun x1091 () Bool)
(declare-fun x38 () x2432)
(declare-fun x551 () Int)
(declare-fun x3503 () Bool)
(declare-fun x3814 () Int)
(declare-fun x1883 () Bool)
(declare-fun x470 () Int)
(declare-fun x404 () x2432)
(declare-fun x151 () Bool)
(declare-fun x1221 () Bool)
(declare-fun x4011 (x2432) Int)
(declare-fun x3463 () Int)
(declare-fun x1496 () Bool)
(declare-fun x935 () Bool)
(declare-fun x1860 () Bool)
(declare-fun x3916 () Int)
(declare-fun x515 () Int)
(declare-fun x3023 () Bool)
(declare-fun x1900 () Bool)
(declare-fun x1189 () Bool)
(declare-fun x829 () Int)
(declare-fun x4473 (Int) Int)
(declare-fun x2527 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x2362 () Bool)
(declare-fun x3613 () Int)
(declare-fun x4029 () Bool)
(declare-fun x3874 () Int)
(declare-fun x3975 () Int)
(declare-fun x4782 () Int)
(declare-fun x4039 () Bool)
(declare-fun x5212 () Bool)
(declare-fun x1596 () Bool)
(declare-fun x1111 () Int)
(declare-fun x3644 () Bool)
(declare-fun x4117 () Bool)
(declare-fun x3162 () Bool)
(declare-fun x3443 () Int)
(declare-fun x2586 () Bool)
(declare-fun x1406 () Bool)
(declare-fun x565 () Bool)
(declare-fun x4723 () Bool)
(declare-fun x2110 () Int)
(declare-fun x5401 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x1051 () x2432)
(declare-fun x1830 () Bool)
(declare-fun x1217 () x2432)
(declare-fun x3498 () Bool)
(declare-fun x4042 () Bool)
(declare-fun x5040 (Int) Int)
(declare-fun x4672 () Bool)
(declare-fun x3756 () Bool)
(declare-fun x1335 () Int)
(declare-fun x5148 () Bool)
(declare-fun x3093 () x2432)
(declare-fun x5056 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x273 () Bool)
(declare-fun x2778 () Int)
(declare-fun x3327 () Bool)
(declare-fun x3453 () Int)
(declare-fun x5335 () Bool)
(declare-fun x3960 () Bool)
(declare-fun x5169 () Bool)
(declare-fun x2771 () Int)
(declare-fun x5369 () Bool)
(declare-fun x1452 () x2432)
(declare-fun x2489 () Bool)
(declare-fun x3148 () Bool)
(declare-fun x3744 () Int)
(declare-fun x1606 () x2432)
(declare-fun x3791 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x2720 () Int)
(declare-fun x2105 () Bool)
(declare-fun x665 () Int)
(declare-fun x240 () Bool)
(declare-fun x96 () Int)
(declare-fun x4938 () Bool)
(declare-fun x1158 () Bool)
(declare-fun x3131 () Int)
(declare-fun x1273 () Int)
(declare-fun x3263 () Int)
(declare-fun x3073 () Bool)
(declare-fun x5022 () Bool)
(declare-fun x3207 () Int)
(declare-fun x684 () Bool)
(declare-fun x5082 () Bool)
(declare-fun x2425 () Bool)
(declare-fun x3558 () Bool)
(declare-fun x3030 () Int)
(declare-fun x3413 () x2432)
(declare-fun x3313 () Int)
(declare-fun x3157 () Bool)
(declare-fun x2487 () Bool)
(declare-fun x1363 () Int)
(declare-fun x4182 () Bool)
(declare-fun x2163 () Int)
(declare-fun x1618 () Bool)
(declare-fun x2273 () Int)
(declare-fun x1608 () x2432)
(declare-fun x4590 () Bool)
(declare-fun x5367 () Bool)
(declare-fun x3268 () Int)
(declare-fun x1583 () Int)
(declare-fun x1421 () Bool)
(declare-fun x2856 () Int)
(declare-fun x2237 () Int)
(declare-fun x5439 () x2432)
(declare-fun x309 () Bool)
(declare-fun x1621 () Bool)
(declare-fun x2008 () x2432)
(declare-fun x2026 () Int)
(declare-fun x2552 () Bool)
(declare-fun x1572 () Bool)
(declare-fun x1708 () Bool)
(declare-fun x2727 () Int)
(declare-fun x2652 () Int)
(declare-fun x4516 () Bool)
(declare-fun x3014 () x2432)
(declare-fun x3398 () Bool)
(declare-fun x2209 () Bool)
(declare-fun x4817 () Int)
(declare-fun x3383 () Int)
(declare-fun x4276 () Bool)
(declare-fun x3541 () x2432)
(declare-fun x5030 () x2432)
(declare-fun x4303 () x2432)
(declare-fun x4229 () Bool)
(declare-fun x2113 () Bool)
(declare-fun x2376 () Bool)
(declare-fun x2136 () Int)
(declare-fun x1668 () Bool)
(declare-fun x4880 () Bool)
(declare-fun x2588 () Int)
(declare-fun x3394 () Int)
(declare-fun x1984 () Bool)
(declare-fun x1790 () Int)
(declare-fun x4028 () Int)
(declare-fun x3116 () Bool)
(declare-fun x2565 () Int)
(declare-fun x698 () Bool)
(declare-fun x688 () Int)
(declare-fun x228 () Bool)
(declare-fun x3178 () Int)
(declare-fun x3373 () x2432)
(declare-fun x257 () Bool)
(declare-fun x2054 () Bool)
(declare-fun x3798 () Bool)
(declare-fun x3752 () Bool)
(declare-fun x4553 () Int)
(declare-fun x5122 () Bool)
(declare-fun x2867 () Int)
(declare-fun x1312 () Int)
(declare-fun x3477 () Bool)
(declare-fun x1866 (x2432) Int)
(declare-fun x1701 () Bool)
(declare-fun x3492 () Int)
(declare-fun x866 () Int)
(declare-fun x3238 () Bool)
(declare-fun x13 () Int)
(declare-fun x2782 (x2432) Int)
(declare-fun x393 () Bool)
(declare-fun x831 () x2432)
(declare-fun x3918 () Bool)
(declare-fun x4461 () Int)
(declare-fun x3187 () Int)
(declare-fun x1265 () x2432)
(declare-fun x4129 () Int)
(declare-fun x1843 () Bool)
(declare-fun x2100 () Bool)
(declare-fun x7 () Bool)
(declare-fun x3953 () Int)
(declare-fun x3219 () Int)
(declare-fun x4177 () Bool)
(declare-fun x3249 () Int)
(declare-fun x1838 () Int)
(declare-fun x1515 () Bool)
(declare-fun x3045 () Int)
(declare-fun x839 () Int)
(declare-fun x3099 () Bool)
(declare-fun x741 () Bool)
(declare-fun x1228 () Bool)
(declare-fun x4238 () Int)
(declare-fun x4756 () Bool)
(declare-fun x1277 () Int)
(declare-fun x608 () Bool)
(declare-fun x2396 () Bool)
(declare-fun x4327 () Bool)
(declare-fun x4809 () Bool)
(declare-fun x2623 () Bool)
(declare-fun x1048 () Int)
(declare-fun x202 () Bool)
(declare-fun x1946 () Int)
(declare-fun x1821 () Int)
(declare-fun x3867 () x2432)
(declare-fun x977 () Bool)
(declare-fun x1812 () Bool)
(declare-fun x3822 () Int)
(declare-fun x3896 () Bool)
(declare-fun x2812 () Int)
(declare-fun x3662 () x2432)
(declare-fun x2968 () Bool)
(declare-fun x1587 () Bool)
(declare-fun x1963 () Int)
(declare-fun x2397 () Int)
(declare-fun x1300 () Int)
(declare-fun x1619 () Bool)
(declare-fun x1455 () Bool)
(declare-fun x3326 () Bool)
(declare-fun x493 () Bool)
(declare-fun x3426 () Bool)
(declare-fun x5260 () Bool)
(declare-fun x5164 () Bool)
(declare-fun x2945 () Bool)
(declare-fun x3079 () Bool)
(declare-fun x972 () Bool)
(declare-fun x748 () Bool)
(declare-fun x5055 () x2432)
(declare-fun x4255 () Bool)
(declare-fun x4062 () Bool)
(declare-fun x2287 () x2432)
(declare-fun x3521 () Int)
(declare-fun x4357 () Int)
(declare-fun x3696 () Int)
(declare-fun x4170 () Bool)
(declare-fun x1442 () Bool)
(declare-fun x3669 () x2432)
(declare-fun x17 () Int)
(declare-fun x2573 () Int)
(declare-fun x3962 () Bool)
(declare-fun x4344 () Int)
(declare-fun x3120 () Int)
(declare-fun x4298 () x2432)
(declare-fun x1381 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x1997 () Bool)
(declare-fun x1129 () Bool)
(declare-fun x1846 () Bool)
(declare-fun x2988 () Int)
(declare-fun x2579 () Bool)
(declare-fun x4189 () x2432)
(declare-fun x1555 () Int)
(declare-fun x2289 () Bool)
(declare-fun x3599 () x2432)
(declare-fun x2229 () x2432)
(declare-fun x4887 () Bool)
(declare-fun x411 () Int)
(declare-fun x2519 () Bool)
(declare-fun x2317 () Bool)
(declare-fun x4814 () Int)
(declare-fun x5275 () Int)
(declare-fun x4261 () Bool)
(declare-fun x4558 () Int)
(declare-fun x5123 () Bool)
(declare-fun x1936 () Bool)
(declare-fun x31 () Bool)
(declare-fun x1143 () Int)
(declare-fun x1598 () Bool)
(declare-fun x3231 () Bool)
(declare-fun x726 () Int)
(declare-fun x1434 () Bool)
(declare-fun x4450 () Int)
(declare-fun x5263 () Bool)
(declare-fun x825 () x2432)
(declare-fun x5272 () Int)
(declare-fun x3828 () Int)
(declare-fun x3954 () Bool)
(declare-fun x3944 () Int)
(declare-fun x646 () Int)
(declare-fun x4093 () Int)
(declare-fun x2630 () Bool)
(declare-fun x4038 () Bool)
(declare-fun x4053 () x2432)
(declare-fun x4711 () Bool)
(declare-fun x4805 () Bool)
(declare-fun x4113 (x2432) Int)
(declare-fun x623 () Bool)
(declare-fun x4274 () Bool)
(declare-fun x3516 () Bool)
(declare-fun x845 () Bool)
(declare-fun x4338 () Int)
(declare-fun x633 () Bool)
(declare-fun x4262 () Int)
(declare-fun x320 () Bool)
(declare-fun x3430 () Int)
(declare-fun x3365 () Bool)
(declare-fun x3411 () x2432)
(declare-fun x1383 () Int)
(declare-fun x4378 () Bool)
(declare-fun x3262 () Bool)
(declare-fun x2154 () Int)
(declare-fun x179 () Bool)
(declare-fun x3982 () Bool)
(declare-fun x964 () Int)
(declare-fun x4021 () Int)
(declare-fun x4210 () Int)
(declare-fun x3843 () Bool)
(declare-fun x537 () Int)
(declare-fun x4944 () Int)
(declare-fun x667 () Bool)
(declare-fun x4575 () Int)
(declare-fun x3656 () x2432)
(declare-fun x2112 () Int)
(declare-fun x5430 () Int)
(declare-fun x4365 () Bool)
(declare-fun x2894 () Bool)
(declare-fun x1564 () Bool)
(declare-fun x2354 () x2432)
(declare-fun x4188 () Bool)
(declare-fun x4002 () Bool)
(declare-fun x1895 () Int)
(declare-fun x334 () Bool)
(declare-fun x5044 () Int)
(declare-fun x5130 () Int)
(declare-fun x5015 () Bool)
(declare-fun x3865 () Bool)
(declare-fun x3668 () Bool)
(declare-fun x4375 () Int)
(declare-fun x4746 () Bool)
(declare-fun x3169 () Int)
(declare-fun x2383 () x2432)
(declare-fun x2791 () Bool)
(declare-fun x3708 () Bool)
(declare-fun x4197 () Int)
(declare-fun x3537 () Int)
(declare-fun x1789 () Int)
(declare-fun x1710 () Bool)
(declare-fun x55 () x2432)
(declare-fun x5143 () Bool)
(declare-fun x3755 () Int)
(declare-fun x52 () Int)
(declare-fun x3621 () Int)
(declare-fun x1179 () Bool)
(declare-fun x142 (x2432) Int)
(declare-fun x5120 () Bool)
(declare-fun x429 () Bool)
(declare-fun x4850 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x5397 () Int)
(declare-fun x835 () Int)
(declare-fun x2724 () Int)
(declare-fun x3618 () Int)
(declare-fun x1316 () Int)
(declare-fun x3041 () Int)
(declare-fun x3987 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x4288 () Bool)
(declare-fun x354 () Bool)
(declare-fun x2277 () Int)
(declare-fun x4829 () Bool)
(declare-fun x4998 () Int)
(declare-fun x4693 () Bool)
(declare-fun x4369 () Int)
(declare-fun x482 () Int)
(declare-fun x3114 () Int)
(declare-fun x4295 () Int)
(declare-fun x3403 () Int)
(declare-fun x3928 () Int)
(declare-fun x1257 () Int)
(declare-fun x582 () Int)
(declare-fun x3762 () Int)
(declare-fun x4721 () Int)
(declare-fun x2729 () Bool)
(declare-fun x4975 () Bool)
(declare-fun x2271 () Int)
(declare-fun x1722 () Bool)
(declare-fun x3782 () Bool)
(declare-fun x3226 () Int)
(declare-fun x911 () x2432)
(declare-fun x3771 () Bool)
(declare-fun x3493 () Bool)
(declare-fun x305 () Bool)
(declare-fun x2392 () x2432)
(declare-fun x3017 () Int)
(declare-fun x5248 () Bool)
(declare-fun x3021 () Int)
(declare-fun x6 () Bool)
(declare-fun x3587 () x2432)
(declare-fun x4788 () Bool)
(declare-fun x776 () Bool)
(declare-fun x4165 () Bool)
(declare-fun x3793 () Bool)
(declare-fun x3829 () Bool)
(declare-fun x4159 () Int)
(declare-fun x759 () Bool)
(declare-fun x2612 () Bool)
(declare-fun x868 () Bool)
(declare-fun x4381 () x2432)
(declare-fun x1961 () Int)
(declare-fun x3485 () Bool)
(declare-fun x2577 () Int)
(declare-fun x705 () x2432)
(declare-fun x15 () x2432)
(declare-fun x3349 (x2432) Int)
(declare-fun x5241 () Int)
(declare-fun x2590 () x2432)
(declare-fun x4245 () Int)
(declare-fun x1971 () Int)
(declare-fun x731 () Bool)
(declare-fun x3647 () Bool)
(declare-fun x2450 () Int)
(declare-fun x4963 () Bool)
(declare-fun x613 () Bool)
(declare-fun x764 () Bool)
(declare-fun x5214 () Bool)
(declare-fun x2956 () Int)
(declare-fun x3290 () Bool)
(declare-fun x458 (x2432) Int)
(declare-fun x5006 () Int)
(declare-fun x1006 () x2432)
(declare-fun x4013 () Bool)
(declare-fun x1067 () Bool)
(declare-fun x4220 () Int)
(declare-fun x2704 () Bool)
(declare-fun x1202 () Int)
(declare-fun x1441 () Int)
(declare-fun x224 () x2432)
(declare-fun x640 () Bool)
(declare-fun x4935 () Bool)
(declare-fun x4549 () Bool)
(declare-fun x1957 () Int)
(declare-fun x4384 () Bool)
(declare-fun x3868 () Bool)
(declare-fun x2242 () Int)
(declare-fun x3602 () Bool)
(declare-fun x1219 () Bool)
(declare-fun x1552 () Bool)
(declare-fun x4511 () Bool)
(declare-fun x4104 () Int)
(declare-fun x5356 () x2432)
(declare-fun x3283 () Bool)
(declare-fun x3800 () Int)
(declare-fun x4469 () Bool)
(declare-fun x5032 () Bool)
(declare-fun x4767 () Bool)
(declare-fun x4328 () Int)
(declare-fun x236 () Int)
(declare-fun x1246 () Bool)
(declare-fun x664 () Bool)
(declare-fun x3227 () Bool)
(declare-fun x2013 () Bool)
(declare-fun x2628 () Int)
(declare-fun x3729 () Bool)
(declare-fun x5403 () Int)
(declare-fun x819 () Bool)
(declare-fun x4666 () Bool)
(declare-fun x4097 () Int)
(declare-fun x274 () Bool)
(declare-fun x4934 () Int)
(declare-fun x4946 () Int)
(declare-fun x127 () Int)
(declare-fun x4890 () Bool)
(declare-fun x3642 () Int)
(declare-fun x213 () Bool)
(declare-fun x2600 () Int)
(declare-fun x4404 () Int)
(declare-fun x2331 () Int)
(declare-fun x3802 () Int)
(declare-fun x2009 () Int)
(declare-fun x4126 () Int)
(declare-fun x3691 () Bool)
(declare-fun x3008 () Int)
(declare-fun x4014 () Bool)
(declare-fun x5323 () Int)
(declare-fun x946 () Bool)
(declare-fun x2162 () Int)
(declare-fun x2327 () Bool)
(declare-fun x4308 () Bool)
(declare-fun x3734 () Int)
(declare-fun x4519 () Int)
(declare-fun x1642 () Bool)
(declare-fun x3523 () Bool)
(declare-fun x304 () Bool)
(declare-fun x149 () Bool)
(declare-fun x2031 (Int) Int)
(declare-fun x2736 () Int)
(declare-fun x5004 () Int)
(declare-fun x1742 () Int)
(declare-fun x683 () Bool)
(declare-fun x3174 () Bool)
(declare-fun x2355 () Bool)
(declare-fun x136 () Bool)
(declare-fun x3906 () Int)
(declare-fun x2235 () Bool)
(declare-fun x5039 () Int)
(declare-fun x3391 () Int)
(declare-fun x2807 () Bool)
(declare-fun x867 () x2432)
(declare-fun x2057 () Int)
(declare-fun x1579 () Int)
(declare-fun x3487 () x2432)
(declare-fun x182 () Int)
(declare-fun x5059 () Bool)
(declare-fun x3610 () x2432)
(declare-fun x1256 () Bool)
(declare-fun x3707 (Int Int) Int)
(declare-fun x2851 () Bool)
(declare-fun x2829 () Bool)
(declare-fun x5376 () Int)
(declare-fun x3387 () Int)
(declare-fun x2694 () Int)
(declare-fun x5363 () Bool)
(declare-fun x474 () Int)
(declare-fun x1463 () Int)
(declare-fun x432 () Int)
(declare-fun x1505 () x2432)
(declare-fun x5105 (Int) Int)
(declare-fun x1099 () Bool)
(declare-fun x4638 () Int)
(declare-fun x3559 () Bool)
(declare-fun x34 () Bool)
(declare-fun x2653 () Int)
(declare-fun x108 () Bool)
(declare-fun x3418 () Bool)
(declare-fun x2904 () Int)
(declare-fun x5421 () Bool)
(declare-fun x3153 () Bool)
(declare-fun x4137 () x2432)
(declare-fun x4694 () Bool)
(declare-fun x4065 () Int)
(declare-fun x3132 () Int)
(declare-fun x1435 () Int)
(declare-fun x5326 () Bool)
(declare-fun x101 () Bool)
(declare-fun x1075 () Bool)
(declare-fun x2139 () Bool)
(declare-fun x110 () Bool)
(declare-fun x5102 () Int)
(declare-fun x3892 () Int)
(declare-fun x1811 () Bool)
(declare-fun x5112 () Bool)
(declare-fun x2001 () Bool)
(declare-fun x5406 () Bool)
(declare-fun x4526 () x2432)
(declare-fun x3184 () Bool)
(declare-fun x4336 () Bool)
(declare-fun x4983 () x2432)
(declare-fun x2907 () Bool)
(declare-fun x2416 () Bool)
(declare-fun x2504 () Int)
(declare-fun x4547 () Bool)
(declare-fun x2052 () x2432)
(declare-fun x1238 () Int)
(declare-fun x2805 () Bool)
(declare-fun x4438 () Int)
(declare-fun x1766 () Int)
(declare-fun x3037 () Bool)
(declare-fun x1275 () Int)
(declare-fun x3196 () Int)
(declare-fun x1851 () Bool)
(declare-fun x2030 () Bool)
(declare-fun x970 () Int)
(declare-fun x4787 () Int)
(declare-fun x2174 () Bool)
(declare-fun x4898 () Int)
(declare-fun x3580 () Bool)
(declare-fun x5052 () Bool)
(declare-fun x2244 () Int)
(declare-fun x3130 () Int)
(declare-fun x4521 () Bool)
(declare-fun x3857 () Bool)
(declare-fun x3252 () Bool)
(declare-fun x2183 () Int)
(declare-fun x2173 () Int)
(declare-fun x2102 () Bool)
(declare-fun x1432 () Int)
(declare-fun x2236 () Bool)
(declare-fun x4049 () Bool)
(declare-fun x2802 () Int)
(declare-fun x73 () Int)
(declare-fun x4960 () Bool)
(declare-fun x4382 () Int)
(declare-fun x4845 () Bool)
(declare-fun x2152 () Bool)
(declare-fun x4707 () Int)
(declare-fun x3480 () Bool)
(declare-fun x2252 () x2432)
(declare-fun x5129 () Bool)
(declare-fun x2863 () Bool)
(declare-fun x2911 () Bool)
(declare-fun x3757 () Int)
(declare-fun x1288 () Bool)
(declare-fun x1571 () Bool)
(declare-fun x4114 () Bool)
(declare-fun x4278 () Int)
(declare-fun x1704 () Bool)
(declare-fun x4313 () Bool)
(declare-fun x4678 () Int)
(declare-fun x2312 () Bool)
(declare-fun x3247 () Bool)
(declare-fun x9 () Bool)
(declare-fun x2320 () Int)
(declare-fun x1901 () Int)
(declare-fun x1465 () Bool)
(declare-fun x902 () x2432)
(declare-fun x2697 () Int)
(declare-fun x514 () Int)
(declare-fun x1534 () Bool)
(declare-fun x4709 () Bool)
(declare-fun x2502 () Int)
(declare-fun x2655 () Int)
(declare-fun x2963 () x2432)
(declare-fun x1034 () Bool)
(declare-fun x4348 () Bool)
(declare-fun x385 () Int)
(declare-fun x5179 () Int)
(declare-fun x2449 () Bool)
(declare-fun x5010 () Int)
(declare-fun x4609 () x2432)
(declare-fun x5447 () Bool)
(declare-fun x4851 () Bool)
(declare-fun x670 () Bool)
(declare-fun x779 () Bool)
(declare-fun x1386 () Bool)
(declare-fun x2222 () Bool)
(declare-fun x991 () Bool)
(declare-fun x286 () Int)
(declare-fun x1854 () Bool)
(declare-fun x738 () Int)
(declare-fun x1355 () Int)
(declare-fun x2878 () Bool)
(declare-fun x2226 () x2432)
(declare-fun x5346 () x2432)
(declare-fun x4472 () Bool)
(declare-fun x3390 () Int)
(declare-fun x2186 () Bool)
(declare-fun x5247 () Bool)
(declare-fun x3659 () Bool)
(declare-fun x3071 () Bool)
(declare-fun x1647 () Bool)
(declare-fun x998 () Bool)
(declare-fun x1675 () Bool)
(declare-fun x2738 () Int)
(declare-fun x5310 () Bool)
(declare-fun x1047 () Bool)
(declare-fun x5387 () Bool)
(declare-fun x1535 () Bool)
(declare-fun x2263 () Bool)
(declare-fun x3306 () x2432)
(declare-fun x3612 () Bool)
(declare-fun x3763 () Int)
(declare-fun x3855 () x2432)
(declare-fun x2159 () Int)
(declare-fun x1566 () Bool)
(declare-fun x2101 () Int)
(declare-fun x4061 (x2432) Int)
(declare-fun x2459 () Bool)
(declare-fun x3999 () Int)
(declare-fun x1304 () Bool)
(declare-fun x5339 () Bool)
(declare-fun x1222 () Int)
(declare-fun x2380 () Bool)
(declare-fun x804 () Int)
(declare-fun x164 () Bool)
(declare-fun x5307 () Bool)
(declare-fun x1989 () Int)
(declare-fun x2715 () Bool)
(declare-fun x2626 () Int)
(declare-fun x1894 () Bool)
(declare-fun x4593 () Int)
(declare-fun x184 () Int)
(declare-fun x1062 () Int)
(declare-fun x281 () Int)
(declare-fun x2562 () Bool)
(declare-fun x2301 () Bool)
(declare-fun x2531 () x2432)
(declare-fun x1973 () Bool)
(declare-fun x3334 () x2432)
(declare-fun x563 () x2432)
(declare-fun x2474 () Bool)
(declare-fun x1939 () Int)
(declare-fun x3124 () Int)
(declare-fun x1629 () Bool)
(declare-fun x3929 () Int)
(declare-fun x587 () Bool)
(declare-fun x85 () Bool)
(declare-fun x4864 () Bool)
(declare-fun x3198 () Bool)
(declare-fun x1793 () Bool)
(declare-fun x466 () Bool)
(declare-fun x1085 () Bool)
(declare-fun x1898 () Bool)
(declare-fun x1847 () Int)
(declare-fun x1453 () x2432)
(declare-fun x4454 () Bool)
(declare-fun x2900 () Bool)
(declare-fun x4758 () Bool)
(declare-fun x5371 () Int)
(declare-fun x133 () x2432)
(declare-fun x1007 () Bool)
(declare-fun x5008 () Bool)
(declare-fun x1349 (Int) Int)
(declare-fun x3622 () Bool)
(declare-fun x2673 () Bool)
(declare-fun x3849 () Int)
(declare-fun x883 () Int)
(declare-fun x4906 () Int)
(declare-fun x4738 () Bool)
(declare-fun x1559 () Bool)
(declare-fun x2193 () Int)
(declare-fun x175 () Bool)
(declare-fun x944 () Int)
(declare-fun x3777 () Int)
(declare-fun x3372 () Bool)
(declare-fun x4326 () Bool)
(declare-fun x123 () x2432)
(declare-fun x2659 () Int)
(declare-fun x3199 () Bool)
(declare-fun x1995 () Bool)
(declare-fun x4919 () Bool)
(declare-fun x3555 () Int)
(declare-fun x2220 () Bool)
(declare-fun x2777 () Bool)
(declare-fun x1427 () Bool)
(declare-fun x4834 () Bool)
(declare-fun x3663 () Int)
(declare-fun x1266 () Bool)
(declare-fun x1095 () Bool)
(declare-fun x1840 () Bool)
(declare-fun x2559 () x2432)
(declare-fun x4212 () Bool)
(declare-fun x2199 (Int) Int)
(declare-fun x4807 () Int)
(declare-fun x5362 () Int)
(declare-fun x5110 () Bool)
(declare-fun x3507 () Bool)
(declare-fun x4639 () Bool)
(declare-fun x4607 () Int)
(declare-fun x3527 () Int)
(declare-fun x1777 () Bool)
(declare-fun x3454 () Bool)
(declare-fun x1999 () Bool)
(declare-fun x3066 () Int)
(declare-fun x2464 () Bool)
(declare-fun x4680 () Int)
(declare-fun x2801 () Bool)
(declare-fun x2333 () x2432)
(declare-fun x1988 () x2432)
(declare-fun x703 () Bool)
(declare-fun x3796 () x2432)
(declare-fun x376 () Bool)
(declare-fun x627 () Bool)
(declare-fun x2882 () Bool)
(declare-fun x3594 () Bool)
(declare-fun x747 (x2432) Int)
(declare-fun x4156 () x2432)
(declare-fun x1719 () Bool)
(declare-fun x895 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x3801 () Int)
(declare-fun x3600 () Bool)
(declare-fun x4168 () Int)
(declare-fun x54 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x4226 () x2432)
(declare-fun x5357 () Bool)
(declare-fun x5154 () Bool)
(declare-fun x4246 () Bool)
(declare-fun x2816 () Bool)
(declare-fun x4333 () Bool)
(declare-fun x3151 () Bool)
(declare-fun x227 () Bool)
(declare-fun x2660 () Bool)
(declare-fun x5152 () Int)
(declare-fun x4123 () Int)
(declare-fun x557 () Bool)
(declare-fun x5036 () Bool)
(declare-fun x2388 () Int)
(declare-fun x1774 () Int)
(declare-fun x564 () Bool)
(declare-fun x3210 () Bool)
(declare-fun x2090 () x2432)
(declare-fun x892 () Bool)
(declare-fun x4377 () Int)
(declare-fun x1620 () Int)
(declare-fun x1707 () Bool)
(declare-fun x1915 () Bool)
(declare-fun x2025 () Int)
(declare-fun x2097 () Int)
(declare-fun x3614 () Bool)
(declare-fun x3003 () Bool)
(declare-fun x1072 () Int)
(declare-fun x2498 () Bool)
(declare-fun x412 () Bool)
(declare-fun x4185 () Int)
(declare-fun x1203 () Bool)
(declare-fun x4969 () x2432)
(declare-fun x916 () Bool)
(declare-fun x1767 () x2432)
(declare-fun x761 () Int)
(declare-fun x3258 () Bool)
(declare-fun x2269 () Int)
(declare-fun x5428 () Int)
(declare-fun x4594 () Int)
(declare-fun x3363 () Bool)
(declare-fun x2607 () Int)
(declare-fun x2843 () Bool)
(declare-fun x4685 () Int)
(declare-fun x132 (x2432) Int)
(declare-fun x5021 () Int)
(declare-fun x2361 () Bool)
(declare-fun x2972 (Int) Int)
(declare-fun x5118 () Int)
(declare-fun x1700 () Int)
(declare-fun x4457 () Int)
(declare-fun x3141 () Bool)
(declare-fun x3321 () x2432)
(declare-fun x728 () Int)
(declare-fun x2048 () Bool)
(declare-fun x2257 () Bool)
(declare-fun x5031 () Bool)
(declare-fun x3301 () Int)
(declare-fun x3593 () Bool)
(declare-fun x159 () Bool)
(declare-fun x649 () Bool)
(declare-fun x3973 () Bool)
(declare-fun x2294 () Bool)
(declare-fun x3 () Bool)
(declare-fun x3362 (Int) Int)
(declare-fun x313 () Int)
(declare-fun x2881 () Bool)
(declare-fun x1916 () Bool)
(declare-fun x4691 () Bool)
(declare-fun x843 () Bool)
(declare-fun x3375 () Bool)
(declare-fun x3607 () Bool)
(declare-fun x3167 () Int)
(declare-fun x4153 () Bool)
(declare-fun x1667 () Bool)
(declare-fun x4927 () Bool)
(declare-fun x4931 () Int)
(declare-fun x324 () Bool)
(declare-fun x5332 () Int)
(declare-fun x3794 () Int)
(declare-fun x3546 () Bool)
(declare-fun x2099 () Int)
(declare-fun x3641 () Int)
(declare-fun x80 () Int)
(declare-fun x2739 () Bool)
(declare-fun x1064 () Int)
(declare-fun x1146 () Bool)
(declare-fun x3422 () Bool)
(declare-fun x1327 () x2432)
(declare-fun x53 () x2432)
(declare-fun x1785 () x2432)
(declare-fun x1560 () Bool)
(declare-fun x1419 () Int)
(declare-fun x536 () Bool)
(declare-fun x2179 () Int)
(declare-fun x4010 () x2432)
(declare-fun x630 () Bool)
(declare-fun x5293 () Bool)
(declare-fun x5135 () Bool)
(declare-fun x1935 () Bool)
(declare-fun x2897 () Int)
(declare-fun x993 () x2432)
(declare-fun x511 () x2432)
(declare-fun x4992 () x2432)
(declare-fun x1909 () Bool)
(declare-fun x2973 () Bool)
(declare-fun x1692 () Int)
(declare-fun x3429 () Bool)
(declare-fun x1184 () Int)
(declare-fun x3274 () x2432)
(declare-fun x5440 () Bool)
(declare-fun x1549 () Int)
(declare-fun x1720 () Int)
(declare-fun x4080 () Bool)
(declare-fun x2876 () x2432)
(declare-fun x818 () Bool)
(declare-fun x5037 () x2432)
(declare-fun x2629 () Bool)
(declare-fun x4600 () Bool)
(declare-fun x158 () Bool)
(declare-fun x4895 () Int)
(declare-fun x2978 () Bool)
(declare-fun x2124 () Int)
(declare-fun x958 () Bool)
(declare-fun x3415 () Bool)
(declare-fun x1575 () Int)
(declare-fun x364 () Bool)
(declare-fun x3636 () x2432)
(declare-fun x4055 () x2432)
(declare-fun x4574 () Bool)
(declare-fun x3596 () Int)
(declare-fun x2323 () Bool)
(declare-fun x4837 () Bool)
(declare-fun x3064 () Int)
(declare-fun x3335 () Bool)
(declare-fun x3243 () Bool)
(declare-fun x2543 () Int)
(declare-fun x4487 () Int)
(declare-fun x1026 () Int)
(declare-fun x2480 () Int)
(declare-fun x1318 () Int)
(declare-fun x730 () Int)
(declare-fun x519 () Int)
(declare-fun x325 () Bool)
(declare-fun x4271 () Int)
(declare-fun x1466 () x2432)
(declare-fun x1603 () Int)
(declare-fun x561 () Bool)
(declare-fun x5288 () Bool)
(declare-fun x2310 () Bool)
(declare-fun x943 () Int)
(declare-fun x1919 () Int)
(declare-fun x3293 () x2432)
(declare-fun x3285 () Bool)
(declare-fun x4706 () Bool)
(declare-fun x4839 () Bool)
(declare-fun x3358 () Int)
(declare-fun x241 () Int)
(declare-fun x300 () Int)
(declare-fun x1827 () Bool)
(declare-fun x3100 () Bool)
(declare-fun x5080 () Bool)
(declare-fun x371 () Bool)
(declare-fun x2998 () Bool)
(declare-fun x3158 () Int)
(declare-fun x4713 () Bool)
(declare-fun x3446 () Int)
(declare-fun x4790 () Bool)
(declare-fun x1869 () x2432)
(declare-fun x1807 () x2432)
(declare-fun x2384 () Int)
(declare-fun x2866 () Bool)
(declare-fun x4981 () Bool)
(declare-fun x3380 () Bool)
(declare-fun x4001 () Bool)
(declare-fun x3431 () Int)
(declare-fun x3920 () Bool)
(declare-fun x3949 () Int)
(declare-fun x602 () Int)
(declare-fun x338 () Bool)
(declare-fun x4632 () Int)
(declare-fun x1485 () Int)
(declare-fun x2617 () Int)
(declare-fun x3603 () x2432)
(declare-fun x3381 () Int)
(declare-fun x5242 () Bool)
(declare-fun x3991 () Bool)
(declare-fun x3749 () Int)
(declare-fun x1878 () Int)
(declare-fun x139 () x2432)
(declare-fun x3517 () Int)
(declare-fun x768 () Int)
(declare-fun x4765 () Bool)
(declare-fun x1653 () Int)
(declare-fun x1728 () Bool)
(declare-fun x1475 () Int)
(declare-fun x5043 () Bool)
(declare-fun x5176 () Bool)
(declare-fun x5134 () Bool)
(declare-fun x263 () Int)
(declare-fun x4959 () Bool)
(declare-fun x3490 () Int)
(declare-fun x4449 () Bool)
(declare-fun x3711 () Bool)
(declare-fun x4729 () Bool)
(declare-fun x1763 () Bool)
(declare-fun x3881 () Int)
(declare-fun x1650 () Int)
(declare-fun x148 () Int)
(declare-fun x1584 () Int)
(declare-fun x4312 (Int) Int)
(declare-fun x1116 () Bool)
(declare-fun x888 () x2432)
(declare-fun x220 () Bool)
(declare-fun x1071 () Int)
(declare-fun x3842 () Bool)
(declare-fun x1345 () Bool)
(declare-fun x1366 () Bool)
(declare-fun x1385 () Bool)
(declare-fun x851 () Bool)
(declare-fun x1080 () Int)
(declare-fun x1732 () Bool)
(declare-fun x3615 () Int)
(declare-fun x452 () Bool)
(declare-fun x4222 () Int)
(declare-fun x3067 () Bool)
(declare-fun x1626 () Int)
(declare-fun x2284 () x2432)
(declare-fun x4556 () Int)
(declare-fun x4869 () Bool)
(declare-fun x1106 () Int)
(declare-fun x5338 () Bool)
(declare-fun x3459 () x2432)
(declare-fun x4408 () Int)
(declare-fun x5085 () Int)
(declare-fun x4386 () Int)
(declare-fun x1922 () Bool)
(declare-fun x3461 () Bool)
(declare-fun x3345 () Int)
(declare-fun x4291 () Bool)
(declare-fun x1247 () Int)
(declare-fun x253 () Bool)
(declare-fun x1640 () Bool)
(declare-fun x794 () x2432)
(declare-fun x2563 () Bool)
(declare-fun x5267 () Bool)
(declare-fun x5337 () x2432)
(declare-fun x2773 () Bool)
(declare-fun x2883 () Bool)
(declare-fun x772 () Bool)
(declare-fun x4911 () Int)
(declare-fun x2798 () x2432)
(declare-fun x1712 () Int)
(declare-fun x3408 () Int)
(declare-fun x1831 () x2432)
(declare-fun x3816 () Bool)
(declare-fun x231 () Bool)
(declare-fun x2700 () x2432)
(declare-fun x2606 () Bool)
(declare-fun x311 () Int)
(declare-fun x5017 () Int)
(declare-fun x593 () Int)
(declare-fun x1627 () Bool)
(declare-fun x5009 () Int)
(declare-fun x1718 () Bool)
(declare-fun x1055 () Int)
(declare-fun x3275 () Int)
(declare-fun x2370 () Bool)
(declare-fun x1663 () x2432)
(declare-fun x4043 () Bool)
(declare-fun x5314 () Int)
(declare-fun x2603 () Int)
(declare-fun x4736 () Bool)
(declare-fun x1652 () Int)
(declare-fun x3164 () x2432)
(declare-fun x5186 () Bool)
(declare-fun x5027 () Int)
(declare-fun x2948 () Bool)
(declare-fun x3634 () Int)
(declare-fun x4733 () Int)
(declare-fun x4367 (Int) Int)
(declare-fun x312 () Int)
(declare-fun x89 () Bool)
(declare-fun x3104 () Bool)
(declare-fun x5195 () Int)
(declare-fun x1229 () Int)
(declare-fun x2723 () Int)
(declare-fun x3866 () Bool)
(declare-fun x3714 () Bool)
(declare-fun x3337 () Int)
(declare-fun x2172 () Int)
(declare-fun x4866 () Int)
(declare-fun x1502 () Bool)
(declare-fun x5089 () Bool)
(declare-fun x1544 () Int)
(declare-fun x5107 () Bool)
(declare-fun x4831 () Int)
(declare-fun x69 () Bool)
(declare-fun x1244 () Bool)
(declare-fun x2055 () Bool)
(declare-fun x4731 () Int)
(declare-fun x4332 () Bool)
(declare-fun x5250 () x2432)
(declare-fun x1456 () Bool)
(declare-fun x2576 () Int)
(declare-fun x1326 () x2432)
(declare-fun x4493 () Bool)
(declare-fun x1192 () Int)
(declare-fun x2483 () Int)
(declare-fun x3488 () Bool)
(declare-fun x4022 () Int)
(declare-fun x3891 () Bool)
(declare-fun x4335 () Bool)
(declare-fun x104 () x2432)
(declare-fun x1157 () Bool)
(declare-fun x4563 () Int)
(declare-fun x5011 () Int)
(declare-fun x5158 () Bool)
(declare-fun x5239 () x2432)
(declare-fun x1550 () x2432)
(declare-fun x4036 () Bool)
(declare-fun x3180 () Int)
(declare-fun x5382 () Bool)
(declare-fun x2079 () Int)
(declare-fun x774 () Bool)
(declare-fun x1384 () Bool)
(declare-fun x4299 () Bool)
(declare-fun x4017 () Int)
(declare-fun x4757 () Bool)
(declare-fun x1737 () x2432)
(declare-fun x543 () Bool)
(declare-fun x573 () Bool)
(declare-fun x1508 () Bool)
(declare-fun x666 () Bool)
(declare-fun x3995 () Bool)
(declare-fun x3434 () Int)
(declare-fun x4957 () Int)
(declare-fun x1729 () Bool)
(declare-fun x1842 () Bool)
(declare-fun x3118 () Bool)
(declare-fun x4462 () Bool)
(declare-fun x5165 () Int)
(declare-fun x4349 () Int)
(declare-fun x1354 (Int) Int)
(declare-fun x5249 () x2432)
(declare-fun x938 () Int)
(declare-fun x2975 () Bool)
(declare-fun x5354 () Int)
(declare-fun x2665 () Bool)
(declare-fun x4044 () Bool)
(declare-fun x1561 () Bool)
(declare-fun x648 () Int)
(declare-fun x1284 () Bool)
(declare-fun x113 () Bool)
(declare-fun x4820 () Bool)
(declare-fun x3494 () Bool)
(declare-fun x4492 () Bool)
(declare-fun x4252 () Bool)
(declare-fun x5324 () Bool)
(declare-fun x1818 () Bool)
(declare-fun x2611 () Bool)
(declare-fun x757 () Bool)
(declare-fun x60 () Bool)
(declare-fun x4772 () Int)
(declare-fun x218 () Bool)
(declare-fun x1669 () Int)
(declare-fun x4201 () Bool)
(declare-fun x3183 () Bool)
(declare-fun x4096 () Int)
(declare-fun x798 () Bool)
(declare-fun x3216 () Int)
(declare-fun x2893 () Bool)
(declare-fun x368 () x2432)
(declare-fun x4441 () Bool)
(declare-fun x3156 () Bool)
(declare-fun x5256 () Bool)
(declare-fun x4728 () Bool)
(declare-fun x1245 () Bool)
(declare-fun x1810 () Bool)
(declare-fun x1597 () Int)
(declare-fun x3595 () Bool)
(declare-fun x1201 () Int)
(declare-fun x2924 () Bool)
(declare-fun x1949 () Bool)
(declare-fun x4568 () Int)
(declare-fun x3554 () Int)
(declare-fun x308 () Int)
(declare-fun x4233 () Bool)
(declare-fun x5311 () Int)
(declare-fun x461 () Bool)
(declare-fun x2062 () Int)
(declare-fun x4537 () Bool)
(declare-fun x1927 (x2432) Int)
(declare-fun x4392 () Bool)
(declare-fun x2463 () Bool)
(declare-fun x2324 (Int) Int)
(declare-fun x814 () Int)
(declare-fun x4026 () x2432)
(declare-fun x2842 () Int)
(declare-fun x4174 () Bool)
(declare-fun x3328 () Int)
(declare-fun x1778 () Int)
(declare-fun x1161 () Bool)
(declare-fun x3384 () Int)
(declare-fun x2726 () Bool)
(declare-fun x1940 () Bool)
(declare-fun x4340 () Bool)
(declare-fun x1433 () Int)
(declare-fun x3910 () Bool)
(declare-fun x753 () Bool)
(declare-fun x472 () Bool)
(declare-fun x1706 () Bool)
(declare-fun x4618 () Int)
(declare-fun x2066 () Bool)
(declare-fun x3370 () Bool)
(declare-fun x5384 () Int)
(declare-fun x3901 () x2432)
(declare-fun x2895 () Bool)
(declare-fun x5240 () Bool)
(declare-fun x879 () Bool)
(declare-fun x3090 () Int)
(declare-fun x238 () Bool)
(declare-fun x434 () Int)
(declare-fun x5014 () Int)
(declare-fun x4322 () x2432)
(declare-fun x3044 () Bool)
(declare-fun x1683 () Bool)
(declare-fun x5111 () Int)
(declare-fun x3938 () Int)
(declare-fun x5385 (x2432) Int)
(declare-fun x1749 () Int)
(declare-fun x3000 () Bool)
(declare-fun x1193 () Bool)
(declare-fun x1623 () Bool)
(declare-fun x1730 () Bool)
(declare-fun x3821 () Int)
(declare-fun x2400 () Bool)
(declare-fun x190 () Bool)
(declare-fun x5374 () x2432)
(declare-fun x1027 () Int)
(declare-fun x1635 () x2432)
(declare-fun x1731 () Int)
(declare-fun x3002 () Int)
(declare-fun x2087 () Int)
(declare-fun x1693 () Bool)
(declare-fun x4148 () Int)
(declare-fun x284 () Int)
(declare-fun x4585 () Bool)
(declare-fun x874 () Bool)
(declare-fun x2518 () Bool)
(declare-fun x3080 () Int)
(declare-fun x1443 () Int)
(declare-fun x4659 () Bool)
(declare-fun x4524 () Int)
(declare-fun x2118 () Int)
(declare-fun x2004 () Bool)
(declare-fun x1715 () Bool)
(declare-fun x3715 () Bool)
(declare-fun x4525 () Int)
(declare-fun x4301 () Bool)
(declare-fun x980 () Int)
(declare-fun x2971 () Int)
(declare-fun x223 () Int)
(declare-fun x4331 () Int)
(declare-fun x3336 () Int)
(declare-fun x1906 () Int)
(declare-fun x2853 () Int)
(declare-fun x1634 () Bool)
(declare-fun x398 () Bool)
(declare-fun x622 () Int)
(declare-fun x716 () Bool)
(declare-fun x4668 () Int)
(declare-fun x4079 () Int)
(declare-fun x1276 () Int)
(declare-fun x5064 () Bool)
(declare-fun x5359 () Bool)
(declare-fun x1837 (Int) Int)
(declare-fun x4169 () Int)
(define-fun x4345 ((x2432 x2432) (x2337 Int)) x2432 (ite ((_ is x3248) x2432) (x3248 (x4130 x2432) (+ x2337 (x1005 x2432))) (ite ((_ is x2760) x2432) (x2760 (x2321 x2432) (x2002 x2432) (+ x2337 (x3617 x2432))) (x3059 (+ (x4572 x2432) x2337)))))
(define-fun x3589 ((x4651 Int)) Int (ite (and (>= x4651 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x4651)) x4651 (- x4651 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x4761 ((x4651 Int)) Int (ite (and (> 0 x4651) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4651)) (+ x4651 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4651))
(define-fun x1741 ((x4651 Int)) Int (ite (and (<= 0 x4651) (< x4651 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x4651 (ite (and (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x4651) (>= x4651 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- x4651 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (> 0 x4651) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x4651)) (+ x4651 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x570 x4651 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x5093 ((x2444 Int)) Bool (and (<= 0 x2444) (< x2444 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1038 ((x2444 Int)) Bool (and (= (x1025 x2444 115792089237316195423570985008687907853269984665640564039457584007913129639935) x2444) (= x2444 (x1025 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2444))))
(define-fun x1947 ((x2444 Int)) Bool (and (= 0 (x1025 x2444 0)) (= (x1025 0 x2444) 0)))
(define-fun x5237 ((x2444 Int)) Bool (= (x1025 x2444 x2444) x2444))
(define-fun x4437 ((x2444 Int)) Bool (and (x1038 x2444) (x5237 x2444) (x1947 x2444)))
(define-fun x3719 ((x2444 Int) (x153 Int)) Bool (= (x1025 x2444 x153) (x1025 x153 x2444)))
(define-fun x775 ((x2444 Int) (x153 Int)) Bool (and (=> (>= x153 0) (<= (x1025 x2444 x153) x153)) (=> (<= 0 x2444) (<= (x1025 x2444 x153) x2444)) (>= (x1025 x2444 x153) 0)))
(define-fun x3294 ((x2444 Int) (x153 Int)) Bool (and (x775 x2444 x153) (x3719 x2444 x153)))
(define-fun x4305 ((x2444 Int)) Bool (= (x1025 x2444 1461501637330902918203684832716283019655932542975) (x570 x2444 1461501637330902918203684832716283019655932542976)))
(define-fun x1405 ((x2444 Int)) Bool (and (x3294 x2444 1461501637330902918203684832716283019655932542975) (x4305 x2444)))
(define-fun x355 ((x2444 Int) (x153 Int)) Bool (and (>= (x570 x2444 x153) 0) (> x153 (x570 x2444 x153))))
(define-fun x4162 ((x2444 Int) (x153 Int)) Bool (=> (and (< 0 x153) (>= x2444 0)) (= (< x2444 x153) (= x2444 (x570 x2444 x153)))))
(define-fun x3825 ((x2444 Int) (x153 Int)) Bool (=> (and (> x153 0) (and (>= x2444 x153) (> (+ x153 x153) x2444))) (= (x570 x2444 x153) (- x2444 x153))))
(define-fun x2086 ((x2444 Int)) Bool (= 0 (x570 0 x2444)))
(define-fun x4496 ((x2444 Int)) Bool (= 0 (x570 x2444 1)))
(define-fun x732 ((x2444 Int)) Bool (= (x570 x2444 x2444) 0))
(define-fun x479 ((x2444 Int)) Bool (and (x4496 x2444) (x732 x2444) (x2086 x2444)))
(define-fun x1920 ((x2444 Int)) Bool (= (x570 x2444 26959946667150639794667015087019630673637144422540572481103610249216) (x1025 x2444 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x4208 ((x2444 Int)) Bool (and (x1920 x2444) (x3294 x2444 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x2358 ((x2444 Int) (x153 Int)) Bool (=> (and (> x153 0) (< 0 x2444)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x4860 x2444 x153)) (= (x3658 (x1741 (x4860 x2444 x153)) x2444) x153))))
(define-fun x4259 ((x2444 Int) (x153 Int)) Bool (=> (and (not (= x153 0)) (not (= x2444 0))) (and (= (x3658 (x4860 x2444 x153) x2444) x153) (= (x3658 (x4860 x2444 x153) x153) x2444))))
(define-fun x887 ((x2444 Int) (x153 Int)) Bool (=> (and (< 0 x153) (> x2444 0)) (= (< (x3658 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2444) x153) (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x4860 x2444 x153)))))
(define-fun x4075 ((x2444 Int) (x153 Int)) Bool (and (= (x1741 (x4860 x2444 x153)) (x1741 (x4860 x2444 (- x153 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x1741 (x4860 (- x2444 115792089237316195423570985008687907853269984665640564039457584007913129639936) x153)) (x1741 (x4860 x2444 x153))) (= (x1741 (x4860 (- x2444 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x153 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1741 (x4860 x2444 x153)))))
(define-fun x244 ((x2444 Int) (x153 Int)) Bool (and (=> (and (and (> x153 0) (<= x153 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x2444 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2444))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x4860 x2444 x153)) (>= (x3658 57896044618658097711785492504343953926634992332820282019728792003956564819967 x153) x2444))) (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x153) (<= x153 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (> x2444 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2444 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2444) (x3658 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x153))) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x4860 (- x2444 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x153 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (<= x153 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x153 0)) (and (> x2444 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x2444 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x4860 (- x2444 115792089237316195423570985008687907853269984665640564039457584007913129639936) x153)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2444) (x3658 57896044618658097711785492504343953926634992332820282019728792003956564819968 x153)))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x153) (> x153 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x2444 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2444))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x153) (x3658 57896044618658097711785492504343953926634992332820282019728792003956564819968 x2444)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x4860 x2444 (- x153 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(define-fun x4023 ((x2444 Int)) Bool (and (= (x4860 x2444 0) 0) (= (x4860 0 x2444) 0)))
(define-fun x4435 ((x2444 Int)) Bool (and (= x2444 (x4860 1 x2444)) (= x2444 (x4860 x2444 1))))
(define-fun x3331 ((x2444 Int)) Bool (and (x4435 x2444) (x4023 x2444)))
(define-fun x1458 ((x2444 Int) (x153 Int)) Bool (=> (and (< 0 x2444) (> x153 0)) (and (>= x2444 (x3658 x2444 x153)) (<= 0 (x3658 x2444 x153)))))
(define-fun x2792 ((x2444 Int) (x153 Int)) Bool (=> (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x2444) (>= x2444 0)) (and (< x153 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 1 x153))) (and (<= 0 (x3658 x2444 x153)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x3658 x2444 x153)))))
(define-fun x5235 ((x2444 Int) (x153 Int)) Bool (=> (and (< x153 x2444) (> x153 1)) (> x2444 (x3658 x2444 x153))))
(define-fun x1175 ((x2444 Int) (x153 Int)) Bool (=> (and (> x153 0) (< 0 x2444)) (= (= 0 (x3658 x2444 x153)) (< x2444 x153))))
(define-fun x2078 ((x2444 Int) (x153 Int)) Bool (=> (and (< 0 x2444) (< 0 x153)) (and (< (- x2444 x153) (x4860 (x3658 x2444 x153) x153)) (>= x2444 (x4860 (x3658 x2444 x153) x153)))))
(define-fun x5131 ((x2444 Int) (x153 Int)) Bool (and (x1175 x2444 x153) (x2078 x2444 x153) (x5235 x2444 x153) (x1458 x2444 x153) (x2792 x2444 x153)))
(define-fun x451 ((x2444 Int)) Bool (= (x3658 0 x2444) 0))
(define-fun x4970 ((x2444 Int)) Bool (= (x3658 x2444 1) x2444))
(define-fun x909 ((x2444 Int)) Bool (=> (not (= x2444 0)) (= (x3658 x2444 x2444) 1)))
(define-fun x348 ((x2444 Int)) Bool (and (x909 x2444) (x4970 x2444) (x451 x2444)))
(define-fun x3296 ((x2444 Int)) Bool (and (= (x3707 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2444) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3707 x2444 115792089237316195423570985008687907853269984665640564039457584007913129639935) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x4396 ((x2444 Int)) Bool (and (= (x3707 x2444 0) x2444) (= x2444 (x3707 0 x2444))))
(define-fun x4785 ((x2444 Int)) Bool (= x2444 (x3707 x2444 x2444)))
(define-fun x2929 ((x2444 Int)) Bool (and (x4396 x2444) (x3296 x2444) (x4785 x2444)))
(define-fun x881 ((x2444 Int) (x153 Int)) Bool (= (x3707 x153 x2444) (x3707 x2444 x153)))
(define-fun x58 ((x2444 Int) (x153 Int)) Bool (and (>= (+ x153 x2444) (x3707 x2444 x153)) (=> (<= 0 x153) (>= (x3707 x2444 x153) x153)) (=> (<= 0 x2444) (<= x2444 (x3707 x2444 x153)))))
(define-fun x185 ((x2444 Int) (x153 Int)) Bool (and (x58 x2444 x153) (x881 x2444 x153)))
(define-fun x583 ((x2444 Int) (x153 Int)) Bool (= (x4860 x2444 x153) (x4860 x153 x2444)))
(define-fun x899 ((x2444 Int) (x153 Int)) Bool (and (=> (and (> 0 x153) (< 0 x2444)) (> 0 (x4860 x2444 x153))) (=> (and (> 0 x2444) (> x153 0)) (< (x4860 x2444 x153) 0)) (=> (and (< 0 x153) (> x2444 0)) (< 0 (x4860 x2444 x153))) (=> (and (> 0 x2444) (> 0 x153)) (< 0 (x4860 x2444 x153)))))
(define-fun x3513 ((x2444 Int) (x153 Int)) Bool (and (x899 x2444 x153) (x4259 x2444 x153) (x4075 x2444 x153) (x244 x2444 x153) (x583 x2444 x153) (x887 x2444 x153) (x2358 x2444 x153)))
(define-fun x1478 ((x2444 Int)) Bool (= (+ (x570 x2444 32) (x1025 x2444 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (x1741 x2444)))
(define-fun x4783 ((x2444 Int)) Bool (and (x3294 x2444 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1478 x2444)))
(define-fun x2422 ((x3460 Int)) Int (ite (= 128 x3460) (ite x1848 1 0) (x3362 x3460)))
(define-fun x981 ((x3460 Int)) Int (ite (= x3460 160) (ite x4584 1 0) (x2422 x3460)))
(define-fun x3288 ((x3460 Int)) Int (ite (= x3460 192) (ite x3355 1 0) (x981 x3460)))
(define-fun x3400 ((x3460 Int)) Int (ite (= 224 x3460) (ite x253 1 0) (x3288 x3460)))
(define-fun x864 ((x3460 Int)) Int (ite (= x3460 256) (ite x1221 1 0) (x3400 x3460)))
(define-fun x2314 ((x3460 Int)) Int (ite (= 288 x3460) (ite x2807 1 0) (x864 x3460)))
(define-fun x2874 ((x3460 Int)) Int (ite (= x3460 320) (ite x4296 1 0) (x2314 x3460)))
(define-fun x332 ((x3460 Int)) Int (ite (= x3460 352) (ite x1834 1 0) (x2874 x3460)))
(define-fun x5277 ((x3460 Int)) Int (ite (= 128 x3460) (ite x4119 1 0) (x1359 x3460)))
(define-fun x2435 ((x3460 Int)) Int (ite (= 160 x3460) (ite x3883 1 0) (x5277 x3460)))
(define-fun x4172 ((x3460 Int)) Int (ite (= x3460 192) (ite x3422 1 0) (x2435 x3460)))
(define-fun x713 ((x3460 Int)) Int (ite (= x3460 224) (ite x4212 1 0) (x4172 x3460)))
(define-fun x2023 ((x3460 Int)) Int (ite (= 256 x3460) (ite x1791 1 0) (x713 x3460)))
(define-fun x4417 ((x3460 Int)) Int (ite (= x3460 288) (ite x1149 1 0) (x2023 x3460)))
(define-fun x2745 ((x3460 Int)) Int (ite (= 320 x3460) (ite x683 1 0) (x4417 x3460)))
(define-fun x4715 ((x3460 Int)) Int (ite (= x3460 352) (ite x5007 1 0) (x2745 x3460)))
(define-fun x2944 ((x3460 Int)) Int (ite (= 420 x3460) x2406 (x4715 x3460)))
(define-fun x2412 ((x3460 Int)) Int (ite (= 384 x3460) 36 (x2944 x3460)))
(define-fun x1986 ((x3460 Int)) Int (ite (= x3460 416) x2914 (x2412 x3460)))
(define-fun x611 ((x3460 x2432)) Int (ite (= x3901 x3460) 0 (x525 x3460)))
(define-fun x1517 ((x3460 x2432)) Int (ite (= x3460 x3901) x2971 (x525 x3460)))
(define-fun x3279 ((x3460 x2432)) Int (ite x1931 (x611 x3460) (x1517 x3460)))
(define-fun x2047 ((x3460 Int)) Int (ite (= x3460 452) 50292402827334880472107169365697159231523039388532301717704428044325102813184 (x1986 x3460)))
(define-fun x4360 ((x3460 Int)) Int (ite (= x3460 452) x5325 (x2047 x3460)))
(define-fun x589 ((x3460 Int)) Int (ite (= 452 x3460) x3544 (x2047 x3460)))
(define-fun x4405 ((x3460 Int)) Int (ite (= x3460 452) x4076 (x2047 x3460)))
(define-fun x4346 ((x3460 Int)) Int (ite x1211 (x4360 x3460) (ite x4916 (x589 x3460) (x4405 x3460))))
(define-fun x2571 ((x3460 Int)) Int (ite x2580 (x4346 x3460) (x1986 x3460)))
(define-fun x586 ((x3460 Int)) Int (ite (= x3460 x362) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2571 x3460)))
(define-fun x3379 ((x3460 Int)) Int (ite (= x3460 x5102) x4178 (x586 x3460)))
(define-fun x1076 ((x3460 Int)) Int (ite (= x3460 x3143) x4078 (x3379 x3460)))
(define-fun x282 ((x3460 Int)) Int (ite (= x2292 x3460) x5179 (x1076 x3460)))
(define-fun x1743 ((x3460 Int)) Int (ite (= x3460 0) 1 (x282 x3460)))
(define-fun x5365 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x282 x3460)))
(define-fun x3280 ((x3460 Int)) Int (ite (= x3460 0) 1 (x282 x3460)))
(define-fun x3281 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x282 x3460)))
(define-fun x5296 ((x3460 Int)) Int (ite x3368 (ite x2285 (x282 x3460) (x1743 x3460)) (ite x3445 (ite x3502 (x282 x3460) (x5365 x3460)) (ite x4179 (ite x1566 (x282 x3460) (x3280 x3460)) (ite x213 (x282 x3460) (x3281 x3460))))))
(define-fun x4770 ((x3460 Int)) Int (ite (= x3753 x3460) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x5296 x3460)))
(define-fun x162 ((x3460 Int)) Int (ite (= x3460 x3753) x4161 (x4770 x3460)))
(define-fun x3630 ((x3460 Int)) Int (ite (= x3753 x3460) x4580 (x4770 x3460)))
(define-fun x5061 ((x3460 Int)) Int (ite (= x3460 x3753) x4782 (x4770 x3460)))
(define-fun x4440 ((x3460 Int)) Int (ite x1251 (x162 x3460) (ite x1952 (x3630 x3460) (x5061 x3460))))
(define-fun x506 ((x3460 Int)) Int (ite (= x192 x3460) x1998 (x4440 x3460)))
(define-fun x2984 ((x3460 Int)) Int (ite x3104 (x4440 x3460) (x506 x3460)))
(define-fun x1151 ((x3460 Int)) Int (ite (= x835 x3460) 77053863734975077137548456399560439977311721439096602559221323163398253314048 (x2984 x3460)))
(define-fun x3197 ((x3460 Int)) Int (ite (= 0 x3460) x4161 (x1214 x3460)))
(define-fun x45 ((x3460 Int)) Int (ite (= x835 x3460) x4161 (x1151 x3460)))
(define-fun x3005 ((x3460 Int)) Int (ite (= 0 x3460) x4580 (x1214 x3460)))
(define-fun x4051 ((x3460 Int)) Int (ite (= x3460 x835) x4580 (x1151 x3460)))
(define-fun x251 ((x3460 Int)) Int (ite (= 0 x3460) x4782 (x1214 x3460)))
(define-fun x907 ((x3460 Int)) Int (ite (= x835 x3460) x4782 (x1151 x3460)))
(define-fun x2584 ((x3460 Int)) Int (ite x243 (x45 x3460) (ite x2503 (x4051 x3460) (x907 x3460))))
(define-fun x2069 ((x3460 Int)) Int (ite (= x2439 x3460) 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x2584 x3460)))
(define-fun x3932 ((x3460 Int)) Int (ite (= x3460 x2180) x4357 (x2069 x3460)))
(define-fun x927 ((x3460 Int)) Int (ite (= x3460 x766) x2406 (x3932 x3460)))
(define-fun x138 ((x3460 Int)) Int (ite (= x4222 x3460) x1307 (x927 x3460)))
(define-fun x5318 ((x3460 Int)) Int (ite (and (<= x2439 x3460) (> (+ x2439 0) x3460)) (x4312 (+ (- x3460 x2439) 0)) (x138 x3460)))
(define-fun x4747 ((x3460 Int)) Int (ite x1352 (x2584 x3460) (x5318 x3460)))
(define-fun x4996 ((x3460 Int)) Int (ite (= x2439 x3460) x3264 (x4747 x3460)))
(define-fun x2960 ((x3460 Int)) Int (ite (= x616 x3460) x1484 (x4996 x3460)))
(define-fun x4675 ((x3460 Int)) Int (ite x1245 (x2960 x3460) (x2584 x3460)))
(define-fun x2970 ((x3460 Int)) Int (ite x2113 (x2984 x3460) (ite x446 (x4675 x3460) (x2984 x3460))))
(define-fun x725 ((x3460 x2432)) Int (ite (= x3065 x3460) x2607 (x4011 x3460)))
(define-fun x5034 ((x3460 x2432)) Int (ite x2113 (x4011 x3460) (ite x875 (x4011 x3460) (x725 x3460))))
(define-fun x1009 ((x3460 x2432)) Int (ite (= x3460 x888) x4486 (x4796 x3460)))
(define-fun x3011 ((x3460 x2432)) Int (ite (= x3460 x3750) x4831 (x5066 x3460)))
(define-fun x4806 ((x3460 Int)) Int (ite (= x465 x3460) 10742207464693106059581744854972325794081737850190833080250671788038469713920 (x2970 x3460)))
(define-fun x1185 ((x3460 Int)) Int (ite (= x2067 x3460) x4078 (x4806 x3460)))
(define-fun x2121 ((x3460 Int)) Int (ite (= x3460 0) x3680 (x1021 x3460)))
(define-fun x2918 ((x3460 Int)) Int (ite (= x3460 x465) x3680 (x1185 x3460)))
(define-fun x3563 ((x3460 Int)) Int (ite (= 0 x3460) x214 (x1021 x3460)))
(define-fun x172 ((x3460 Int)) Int (ite (= x465 x3460) x214 (x1185 x3460)))
(define-fun x2451 ((x3460 Int)) Int (ite (= x3460 0) x1260 (x1021 x3460)))
(define-fun x1200 ((x3460 Int)) Int (ite (= x465 x3460) x1260 (x1185 x3460)))
(define-fun x2564 ((x3460 x2432)) Int (ite (= x3460 (x2147 x4078)) x2040 (x4945 x3460)))
(define-fun x1395 ((x3460 x2432)) Int (ite (= x3460 (x2147 x2406)) x122 (x2564 x3460)))
(define-fun x1736 ((x3460 x2432)) Int (ite (= (x2147 x2406) x3460) x4847 (x1395 x3460)))
(define-fun x1645 ((x3460 x2432)) Int (ite (= x3460 (x2147 x4078)) x4933 (x1736 x3460)))
(define-fun x3135 ((x3460 x2432)) Int (ite x1235 (x1395 x3460) (ite x4089 (x4945 x3460) (x1645 x3460))))
(define-fun x1624 ((x3460 x2432)) Int (ite x3302 (x4945 x3460) (x3135 x3460)))
(define-fun x3616 ((x3460 x2432)) Int (ite x4057 (x4945 x3460) (ite x1843 (x4945 x3460) (x1624 x3460))))
(define-fun x3746 ((x3460 x2432)) Int (ite (= x3460 x201) x1276 (x747 x3460)))
(define-fun x4842 ((x3460 x2432)) Int (ite x3044 (x747 x3460) (ite x3706 (x747 x3460) (ite x2369 (x747 x3460) (ite x2102 (x747 x3460) (ite x1775 (x3746 x3460) (x747 x3460)))))))
(define-fun x568 ((x3460 x2432)) Int (ite (= x3460 x15) x1394 (x3746 x3460)))
(define-fun x1150 ((x3460 x2432)) Int (ite x3368 (x747 x3460) (ite x3445 (x747 x3460) (ite x4179 (x747 x3460) (ite x213 (x4842 x3460) (x568 x3460))))))
(define-fun x1098 ((x3460 x2432)) Int (ite (= x3460 x5411) x2925 (x1150 x3460)))
(define-fun x4662 ((x3460 x2432)) Int (ite x383 (x1150 x3460) (ite x4049 (x1150 x3460) (ite x5347 (x1150 x3460) (ite x3214 (x1150 x3460) (ite x3731 (x1098 x3460) (x1150 x3460)))))))
(define-fun x2687 ((x3460 x2432)) Int (ite (= x1315 x3460) x1198 (x1098 x3460)))
(define-fun x3032 ((x3460 x2432)) Int (ite x5369 (x1150 x3460) (ite x377 (x1150 x3460) (ite x703 (x1150 x3460) (ite x1754 (x4662 x3460) (x2687 x3460))))))
(define-fun x2267 ((x3460 x2432)) Int (ite x1099 (x3032 x3460) (ite x693 (x1150 x3460) (ite x1845 (x1150 x3460) (ite x1769 (x1150 x3460) (ite x1763 (x3032 x3460) (x1150 x3460)))))))
(define-fun x3784 ((x3460 x2432)) Int (ite x4155 (x2267 x3460) (x3032 x3460)))
(define-fun x1302 ((x3460 x2432)) Int (ite (= x3460 x4387) x2795 (x1150 x3460)))
(define-fun x3119 ((x3460 x2432)) Int (ite x220 (x1150 x3460) (ite x3235 (x1150 x3460) (ite x2126 (x1150 x3460) (ite x4760 (x1150 x3460) (ite x4713 (x1302 x3460) (x1150 x3460)))))))
(define-fun x4277 ((x3460 x2432)) Int (ite (= x1036 x3460) x800 (x1302 x3460)))
(define-fun x4531 ((x3460 x2432)) Int (ite x1230 (x1150 x3460) (ite x120 (x1150 x3460) (ite x3681 (x1150 x3460) (ite x442 (x3119 x3460) (x4277 x3460))))))
(define-fun x4640 ((x3460 x2432)) Int (ite x4890 (x4531 x3460) (ite x2139 (x1150 x3460) (ite x5322 (x1150 x3460) (ite x5051 (x1150 x3460) (ite x1095 (x4531 x3460) (x1150 x3460)))))))
(define-fun x3353 ((x3460 x2432)) Int (ite x3752 (x4640 x3460) (x4531 x3460)))
(define-fun x1662 ((x3460 x2432)) Int (ite (= x3460 x641) x290 (x1150 x3460)))
(define-fun x3161 ((x3460 x2432)) Int (ite x2828 (x1150 x3460) (ite x3902 (x1150 x3460) (ite x4985 (x1150 x3460) (ite x4032 (x1150 x3460) (ite x4074 (x1662 x3460) (x1150 x3460)))))))
(define-fun x3886 ((x3460 x2432)) Int (ite (= x3460 x104) x3604 (x1662 x3460)))
(define-fun x2304 ((x3460 x2432)) Int (ite x1719 (x1150 x3460) (ite x457 (x1150 x3460) (ite x149 (x1150 x3460) (ite x5144 (x3161 x3460) (x3886 x3460))))))
(define-fun x1873 ((x3460 x2432)) Int (ite x1284 (x2304 x3460) (ite x3107 (x1150 x3460) (ite x3500 (x1150 x3460) (ite x4418 (x1150 x3460) (ite x1358 (x2304 x3460) (x1150 x3460)))))))
(define-fun x1588 ((x3460 x2432)) Int (ite x1105 (x1873 x3460) (x2304 x3460)))
(define-fun x3839 ((x3460 x2432)) Int (ite x924 (x3784 x3460) (ite x5048 (x3353 x3460) (x1588 x3460))))
(define-fun x4753 ((x3460 x2432)) Int (ite (= x3460 x1223) x5076 (x1150 x3460)))
(define-fun x3269 ((x3460 x2432)) Int (ite x3907 (x1150 x3460) (ite x4621 (x1150 x3460) (ite x2612 (x1150 x3460) (ite x2926 (x1150 x3460) (ite x2204 (x4753 x3460) (x1150 x3460)))))))
(define-fun x4779 ((x3460 x2432)) Int (ite (= x548 x3460) x1026 (x4753 x3460)))
(define-fun x4582 ((x3460 x2432)) Int (ite x4177 (x1150 x3460) (ite x56 (x1150 x3460) (ite x2093 (x1150 x3460) (ite x3310 (x3269 x3460) (x4779 x3460))))))
(define-fun x1855 ((x3460 x2432)) Int (ite x4165 (x4582 x3460) (ite x3785 (x1150 x3460) (ite x781 (x1150 x3460) (ite x1034 (x4582 x3460) (x1150 x3460))))))
(define-fun x2293 ((x3460 x2432)) Int (ite x68 (x1855 x3460) (x4582 x3460)))
(define-fun x3027 ((x3460 x2432)) Int (ite (= x3460 x4204) x3940 (x1150 x3460)))
(define-fun x3217 ((x3460 x2432)) Int (ite x3415 (x1150 x3460) (ite x1491 (x1150 x3460) (ite x2884 (x1150 x3460) (ite x4281 (x1150 x3460) (ite x2066 (x3027 x3460) (x1150 x3460)))))))
(define-fun x1917 ((x3460 x2432)) Int (ite (= x3460 x252) x5198 (x3027 x3460)))
(define-fun x1237 ((x3460 x2432)) Int (ite x2872 (x1150 x3460) (ite x304 (x1150 x3460) (ite x4353 (x1150 x3460) (ite x2251 (x3217 x3460) (x1917 x3460))))))
(define-fun x2765 ((x3460 x2432)) Int (ite x2611 (x1237 x3460) (ite x1984 (x1150 x3460) (ite x1953 (x1150 x3460) (ite x34 (x1237 x3460) (x1150 x3460))))))
(define-fun x4909 ((x3460 x2432)) Int (ite x412 (x2765 x3460) (x1237 x3460)))
(define-fun x5063 ((x3460 x2432)) Int (ite (= x2919 x3460) x3709 (x1150 x3460)))
(define-fun x2338 ((x3460 x2432)) Int (ite x2791 (x1150 x3460) (ite x4727 (x1150 x3460) (ite x4390 (x1150 x3460) (ite x4153 (x1150 x3460) (ite x2018 (x5063 x3460) (x1150 x3460)))))))
(define-fun x2696 ((x3460 x2432)) Int (ite (= x3436 x3460) x4991 (x5063 x3460)))
(define-fun x1373 ((x3460 x2432)) Int (ite x714 (x1150 x3460) (ite x4100 (x1150 x3460) (ite x4948 (x1150 x3460) (ite x5135 (x2338 x3460) (x2696 x3460))))))
(define-fun x3359 ((x3460 x2432)) Int (ite x700 (x1373 x3460) (ite x2912 (x1150 x3460) (ite x3372 (x1150 x3460) (ite x2445 (x1373 x3460) (x1150 x3460))))))
(define-fun x106 ((x3460 x2432)) Int (ite x5184 (x3359 x3460) (x1373 x3460)))
(define-fun x3322 ((x3460 x2432)) Int (ite x238 (x2293 x3460) (ite x4977 (x4909 x3460) (x106 x3460))))
(define-fun x4316 ((x3460 x2432)) Int (ite x1235 (x3322 x3460) (ite x4089 (x1150 x3460) (x3322 x3460))))
(define-fun x4798 ((x3460 x2432)) Int (ite x3302 (x3839 x3460) (x4316 x3460)))
(define-fun x4149 ((x3460 x2432)) Int (ite x4057 (x1150 x3460) (ite x1843 (x1150 x3460) (x4798 x3460))))
(define-fun x210 ((x3460 Int)) Int (ite x5440 (ite x4551 (x1185 x3460) (x2918 x3460)) (ite x813 (ite x2656 (x1185 x3460) (x172 x3460)) (ite x4918 (x1185 x3460) (x1200 x3460)))))
(define-fun x287 ((x3460 Int)) Int (ite (= x3460 x2980) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x210 x3460)))
(define-fun x3861 ((x3460 Int)) Int (ite (= x3460 x1669) x2406 (x287 x3460)))
(define-fun x1410 ((x3460 Int)) Int (ite (= x3460 x3301) x2057 (x3861 x3460)))
(define-fun x1546 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x1410 x3460)))
(define-fun x3912 ((x3460 Int)) Int (ite x1412 (x1410 x3460) (x1546 x3460)))
(define-fun x1153 ((x3460 Int)) Int (ite (= x3460 x2980) 6539370208772218570076773595062200405109424842860869254164860851635934461952 (x3912 x3460)))
(define-fun x3674 ((x3460 Int)) Int (ite (= x1622 x3460) x2057 (x1153 x3460)))
(define-fun x497 ((x3460 Int)) Int (ite (= x3460 x2980) 0 (x3674 x3460)))
(define-fun x3540 ((x3460 Int)) Int (ite (= x3460 x2980) 0 (x3674 x3460)))
(define-fun x245 ((x3460 Int)) Int (ite (= x3460 x2980) 0 (x3674 x3460)))
(define-fun x4692 ((x3460 Int)) Int (ite x924 (ite x4155 (x3674 x3460) (x497 x3460)) (ite x5048 (ite x3752 (x3674 x3460) (x3540 x3460)) (ite x1105 (x3674 x3460) (x245 x3460)))))
(define-fun x1868 ((x3460 Int)) Int (ite (= x3460 x2980) 20853193852723734048814770637610870652489083209607696777694672748161462697984 (x210 x3460)))
(define-fun x2938 ((x3460 Int)) Int (ite (= x4634 x3460) x2057 (x1868 x3460)))
(define-fun x4926 ((x3460 Int)) Int (ite (and (> (+ 0 x2980) x3460) (>= x3460 x2980)) (x4367 (+ 0 (- x3460 x2980))) (x2938 x3460)))
(define-fun x1970 ((x3460 Int)) Int (ite (= x3460 x2980) 35417553099779373699389112480655434059402432070290151981503827724506945814528 (x4926 x3460)))
(define-fun x4048 ((x3460 Int)) Int (ite (= x3460 x2980) x1902 (x1970 x3460)))
(define-fun x4431 ((x3460 Int)) Int (ite x68 (x1970 x3460) (x4048 x3460)))
(define-fun x430 ((x3460 Int)) Int (ite (= x3460 x2980) x3811 (x1970 x3460)))
(define-fun x2233 ((x3460 Int)) Int (ite x412 (x1970 x3460) (x430 x3460)))
(define-fun x1329 ((x3460 Int)) Int (ite (= x3460 x2980) x2085 (x1970 x3460)))
(define-fun x4490 ((x3460 Int)) Int (ite x5184 (x1970 x3460) (x1329 x3460)))
(define-fun x3410 ((x3460 Int)) Int (ite x238 (x4431 x3460) (ite x4977 (x2233 x3460) (x4490 x3460))))
(define-fun x4853 ((x3460 Int)) Int (ite x1235 (x3410 x3460) (ite x4089 (x1970 x3460) (x3410 x3460))))
(define-fun x1279 ((x3460 Int)) Int (ite x1843 (x210 x3460) (ite x3302 (x4692 x3460) (x4853 x3460))))
(define-fun x1813 ((x3460 Int)) Int (ite (= x3460 x1382) x901 (x1279 x3460)))
(define-fun x421 ((x3460 Int)) Int (ite (= x4538 x3460) x3947 (x1813 x3460)))
(define-fun x5166 ((x3460 Int)) Int (ite x4057 (x2970 x3460) (x421 x3460)))
(define-fun x499 ((x3460 x2432)) Int (ite (= x3460 x572) x3527 (x258 x3460)))
(define-fun x2282 ((x3460 x2432)) Int (ite x922 (x258 x3460) (ite x4745 (x258 x3460) (ite x3176 (x258 x3460) (ite x2036 (x258 x3460) (ite x3183 (x499 x3460) (x258 x3460)))))))
(define-fun x655 ((x3460 x2432)) Int (ite (= x3206 x3460) x2382 (x499 x3460)))
(define-fun x5170 ((x3460 x2432)) Int (ite x3368 (x258 x3460) (ite x3445 (x258 x3460) (ite x4179 (ite x1566 (x2282 x3460) (x655 x3460)) (x258 x3460)))))
(define-fun x350 ((x3460 x2432)) Int (ite (= x3460 x4053) x4710 (x5170 x3460)))
(define-fun x3029 ((x3460 x2432)) Int (ite x2637 (x5170 x3460) (ite x2498 (x5170 x3460) (ite x3298 (x5170 x3460) (ite x335 (x5170 x3460) (ite x4952 (x350 x3460) (x5170 x3460)))))))
(define-fun x873 ((x3460 x2432)) Int (ite (= x1608 x3460) x567 (x350 x3460)))
(define-fun x2158 ((x3460 x2432)) Int (ite x5369 (x5170 x3460) (ite x377 (x5170 x3460) (ite x703 (ite x2059 (x3029 x3460) (x873 x3460)) (x5170 x3460)))))
(define-fun x2256 ((x3460 x2432)) Int (ite x1099 (x2158 x3460) (ite x693 (x5170 x3460) (ite x1845 (x5170 x3460) (ite x1769 (x5170 x3460) (ite x1763 (x2158 x3460) (x5170 x3460)))))))
(define-fun x1283 ((x3460 x2432)) Int (ite x4155 (x2256 x3460) (x2158 x3460)))
(define-fun x1209 ((x3460 x2432)) Int (ite (= x3460 x2677) x2457 (x5170 x3460)))
(define-fun x4070 ((x3460 x2432)) Int (ite x2007 (x5170 x3460) (ite x4293 (x5170 x3460) (ite x3284 (x5170 x3460) (ite x852 (x5170 x3460) (ite x3195 (x1209 x3460) (x5170 x3460)))))))
(define-fun x4773 ((x3460 x2432)) Int (ite (= x4719 x3460) x4533 (x1209 x3460)))
(define-fun x1020 ((x3460 x2432)) Int (ite x1230 (x5170 x3460) (ite x120 (x5170 x3460) (ite x3681 (ite x5339 (x4070 x3460) (x4773 x3460)) (x5170 x3460)))))
(define-fun x1337 ((x3460 x2432)) Int (ite x4890 (x1020 x3460) (ite x2139 (x5170 x3460) (ite x5322 (x5170 x3460) (ite x5051 (x5170 x3460) (ite x1095 (x1020 x3460) (x5170 x3460)))))))
(define-fun x2587 ((x3460 x2432)) Int (ite x3752 (x1337 x3460) (x1020 x3460)))
(define-fun x5255 ((x3460 x2432)) Int (ite (= x3460 x133) x807 (x5170 x3460)))
(define-fun x3396 ((x3460 x2432)) Int (ite x822 (x5170 x3460) (ite x749 (x5170 x3460) (ite x360 (x5170 x3460) (ite x2527 (x5170 x3460) (ite x1427 (x5255 x3460) (x5170 x3460)))))))
(define-fun x1069 ((x3460 x2432)) Int (ite (= x3508 x3460) x112 (x5255 x3460)))
(define-fun x4304 ((x3460 x2432)) Int (ite x1719 (x5170 x3460) (ite x457 (x5170 x3460) (ite x149 (ite x5345 (x3396 x3460) (x1069 x3460)) (x5170 x3460)))))
(define-fun x4683 ((x3460 x2432)) Int (ite x1284 (x4304 x3460) (ite x3107 (x5170 x3460) (ite x3500 (x5170 x3460) (ite x4418 (x5170 x3460) (ite x1358 (x4304 x3460) (x5170 x3460)))))))
(define-fun x1320 ((x3460 x2432)) Int (ite x1105 (x4683 x3460) (x4304 x3460)))
(define-fun x317 ((x3460 x2432)) Int (ite x924 (x1283 x3460) (ite x5048 (x2587 x3460) (x1320 x3460))))
(define-fun x4939 ((x3460 x2432)) Int (ite (= x3460 x5035) x2035 (x5170 x3460)))
(define-fun x349 ((x3460 x2432)) Int (ite x4746 (x5170 x3460) (ite x3429 (x5170 x3460) (ite x1416 (x5170 x3460) (ite x2670 (x5170 x3460) (ite x756 (x4939 x3460) (x5170 x3460)))))))
(define-fun x1954 ((x3460 x2432)) Int (ite (= x3557 x3460) x4680 (x4939 x3460)))
(define-fun x1482 ((x3460 x2432)) Int (ite x4177 (x5170 x3460) (ite x56 (x5170 x3460) (ite x2093 (ite x4953 (x349 x3460) (x1954 x3460)) (x5170 x3460)))))
(define-fun x1631 ((x3460 x2432)) Int (ite x4165 (x1482 x3460) (ite x3785 (x5170 x3460) (ite x781 (x5170 x3460) (ite x1034 (x1482 x3460) (x5170 x3460))))))
(define-fun x5446 ((x3460 x2432)) Int (ite x68 (x1631 x3460) (x1482 x3460)))
(define-fun x4465 ((x3460 x2432)) Int (ite (= x3728 x3460) x4474 (x5170 x3460)))
(define-fun x1190 ((x3460 x2432)) Int (ite x3304 (x5170 x3460) (ite x209 (x5170 x3460) (ite x5388 (x5170 x3460) (ite x4794 (x5170 x3460) (ite x4880 (x4465 x3460) (x5170 x3460)))))))
(define-fun x490 ((x3460 x2432)) Int (ite (= x3460 x5079) x2697 (x4465 x3460)))
(define-fun x1573 ((x3460 x2432)) Int (ite x2872 (x5170 x3460) (ite x304 (x5170 x3460) (ite x4353 (ite x4256 (x1190 x3460) (x490 x3460)) (x5170 x3460)))))
(define-fun x5269 ((x3460 x2432)) Int (ite x2611 (x1573 x3460) (ite x1984 (x5170 x3460) (ite x1953 (x5170 x3460) (ite x34 (x1573 x3460) (x5170 x3460))))))
(define-fun x1392 ((x3460 x2432)) Int (ite x412 (x5269 x3460) (x1573 x3460)))
(define-fun x4891 ((x3460 x2432)) Int (ite (= x3460 x2205) x163 (x5170 x3460)))
(define-fun x1980 ((x3460 x2432)) Int (ite x1724 (x5170 x3460) (ite x4380 (x5170 x3460) (ite x845 (x5170 x3460) (ite x2262 (x5170 x3460) (ite x4758 (x4891 x3460) (x5170 x3460)))))))
(define-fun x2349 ((x3460 x2432)) Int (ite (= x3672 x3460) x1013 (x4891 x3460)))
(define-fun x57 ((x3460 x2432)) Int (ite x714 (x5170 x3460) (ite x4100 (x5170 x3460) (ite x4948 (ite x5273 (x1980 x3460) (x2349 x3460)) (x5170 x3460)))))
(define-fun x2557 ((x3460 x2432)) Int (ite x700 (x57 x3460) (ite x2912 (x5170 x3460) (ite x3372 (x5170 x3460) (ite x2445 (x57 x3460) (x5170 x3460))))))
(define-fun x653 ((x3460 x2432)) Int (ite x5184 (x2557 x3460) (x57 x3460)))
(define-fun x2594 ((x3460 x2432)) Int (ite x238 (x5446 x3460) (ite x4977 (x1392 x3460) (x653 x3460))))
(define-fun x1328 ((x3460 x2432)) Int (ite x1235 (x2594 x3460) (ite x4089 (x5170 x3460) (x2594 x3460))))
(define-fun x2537 ((x3460 x2432)) Int (ite x3302 (x317 x3460) (x1328 x3460)))
(define-fun x3098 ((x3460 x2432)) Int (ite x4057 (x5170 x3460) (ite x1843 (x5170 x3460) (x2537 x3460))))
(define-fun x4444 ((x3460 x2432)) Int (ite (= x3460 x477) x2790 (x1751 x3460)))
(define-fun x2245 ((x3460 x2432)) Int (ite x3368 (ite x2285 (x1751 x3460) (x4444 x3460)) (x1751 x3460)))
(define-fun x910 ((x3460 x2432)) Int (ite (= x3460 x1606) x5360 (x2245 x3460)))
(define-fun x2 ((x3460 x2432)) Int (ite x1412 (x2245 x3460) (x910 x3460)))
(define-fun x4949 ((x3460 x2432)) Int (ite (= x3460 x1968) x3517 (x2 x3460)))
(define-fun x4251 ((x3460 x2432)) Int (ite x5369 (ite x23 (x2 x3460) (x4949 x3460)) (x2 x3460)))
(define-fun x4856 ((x3460 x2432)) Int (ite x1099 (x4251 x3460) (ite x693 (x2 x3460) (ite x1845 (x2 x3460) (ite x1769 (x2 x3460) (ite x1763 (x4251 x3460) (x2 x3460)))))))
(define-fun x5217 ((x3460 x2432)) Int (ite x4155 (x4856 x3460) (x4251 x3460)))
(define-fun x1698 ((x3460 x2432)) Int (ite (= x3460 x2123) x2255 (x2 x3460)))
(define-fun x3978 ((x3460 x2432)) Int (ite x1230 (ite x1598 (x2 x3460) (x1698 x3460)) (x2 x3460)))
(define-fun x2119 ((x3460 x2432)) Int (ite x4890 (x3978 x3460) (ite x2139 (x2 x3460) (ite x5322 (x2 x3460) (ite x5051 (x2 x3460) (ite x1095 (x3978 x3460) (x2 x3460)))))))
(define-fun x2567 ((x3460 x2432)) Int (ite x3752 (x2119 x3460) (x3978 x3460)))
(define-fun x447 ((x3460 x2432)) Int (ite (= x3460 x1557) x3964 (x2 x3460)))
(define-fun x4423 ((x3460 x2432)) Int (ite x1719 (ite x4029 (x2 x3460) (x447 x3460)) (x2 x3460)))
(define-fun x4157 ((x3460 x2432)) Int (ite x1284 (x4423 x3460) (ite x3107 (x2 x3460) (ite x3500 (x2 x3460) (ite x4418 (x2 x3460) (ite x1358 (x4423 x3460) (x2 x3460)))))))
(define-fun x4589 ((x3460 x2432)) Int (ite x1105 (x4157 x3460) (x4423 x3460)))
(define-fun x1444 ((x3460 x2432)) Int (ite x924 (x5217 x3460) (ite x5048 (x2567 x3460) (x4589 x3460))))
(define-fun x2378 ((x3460 x2432)) Int (ite (= x3460 x3610) x2983 (x2245 x3460)))
(define-fun x4636 ((x3460 x2432)) Int (ite x4177 (ite x2623 (x2245 x3460) (x2378 x3460)) (x2245 x3460)))
(define-fun x262 ((x3460 x2432)) Int (ite x4165 (x4636 x3460) (ite x3785 (x2245 x3460) (ite x781 (x2245 x3460) (ite x1034 (x4636 x3460) (x2245 x3460))))))
(define-fun x3946 ((x3460 x2432)) Int (ite x68 (x262 x3460) (x4636 x3460)))
(define-fun x2892 ((x3460 x2432)) Int (ite (= x224 x3460) x2964 (x2245 x3460)))
(define-fun x5159 ((x3460 x2432)) Int (ite x2872 (ite x2616 (x2245 x3460) (x2892 x3460)) (x2245 x3460)))
(define-fun x4893 ((x3460 x2432)) Int (ite x2611 (x5159 x3460) (ite x1984 (x2245 x3460) (ite x1953 (x2245 x3460) (ite x34 (x5159 x3460) (x2245 x3460))))))
(define-fun x2343 ((x3460 x2432)) Int (ite x412 (x4893 x3460) (x5159 x3460)))
(define-fun x21 ((x3460 x2432)) Int (ite (= x3665 x3460) x4631 (x2245 x3460)))
(define-fun x8 ((x3460 x2432)) Int (ite x714 (ite x4174 (x2245 x3460) (x21 x3460)) (x2245 x3460)))
(define-fun x1903 ((x3460 x2432)) Int (ite x700 (x8 x3460) (ite x2912 (x2245 x3460) (ite x3372 (x2245 x3460) (ite x2445 (x8 x3460) (x2245 x3460))))))
(define-fun x1378 ((x3460 x2432)) Int (ite x5184 (x1903 x3460) (x8 x3460)))
(define-fun x4577 ((x3460 x2432)) Int (ite x238 (x3946 x3460) (ite x4977 (x2343 x3460) (x1378 x3460))))
(define-fun x2840 ((x3460 x2432)) Int (ite x1235 (x4577 x3460) (ite x4089 (x2245 x3460) (x4577 x3460))))
(define-fun x4054 ((x3460 x2432)) Int (ite x3302 (x1444 x3460) (x2840 x3460)))
(define-fun x2555 ((x3460 x2432)) Int (ite x4057 (x2245 x3460) (ite x1843 (x2245 x3460) (x4054 x3460))))
(define-fun x4595 ((x3460 x2432)) Int (ite (= x3460 x4481) x4599 (x4665 x3460)))
(define-fun x427 ((x3460 x2432)) Int (ite (= x3460 x4058) x206 (x4595 x3460)))
(define-fun x2845 ((x3460 x2432)) Int (ite x3125 (x427 x3460) (ite x342 (x4595 x3460) (ite x314 (x4665 x3460) (ite x2900 (x4665 x3460) (ite x4789 (x4665 x3460) (ite x1387 (x4665 x3460) (ite x283 (x4595 x3460) (ite x1053 (x427 x3460) (x4665 x3460))))))))))
(define-fun x3943 ((x3460 x2432)) Int (ite x3368 (ite x2285 (x2845 x3460) (x427 x3460)) (x4665 x3460)))
(define-fun x2974 ((x3460 x2432)) Int (ite (= x3460 x1787) x3766 (x3943 x3460)))
(define-fun x1182 ((x3460 x2432)) Int (ite (= x3460 x5287) x1686 (x2974 x3460)))
(define-fun x3904 ((x3460 x2432)) Int (ite x2569 (x1182 x3460) (ite x4500 (x2974 x3460) (ite x3386 (x3943 x3460) (ite x4850 (x3943 x3460) (ite x559 (x3943 x3460) (ite x1809 (x3943 x3460) (ite x3097 (x2974 x3460) (ite x11 (x1182 x3460) (x3943 x3460))))))))))
(define-fun x181 ((x3460 x2432)) Int (ite x5369 (ite x23 (x3904 x3460) (x1182 x3460)) (x3943 x3460)))
(define-fun x3609 ((x3460 x2432)) Int (ite x1099 (x181 x3460) (ite x693 (x3943 x3460) (ite x1845 (x3943 x3460) (ite x1769 (x3943 x3460) (ite x1763 (x181 x3460) (x3943 x3460)))))))
(define-fun x2507 ((x3460 x2432)) Int (ite x4155 (x3609 x3460) (x181 x3460)))
(define-fun x517 ((x3460 x2432)) Int (ite (= x3460 x1248) x2020 (x3943 x3460)))
(define-fun x1504 ((x3460 x2432)) Int (ite (= x4989 x3460) x1579 (x517 x3460)))
(define-fun x3813 ((x3460 x2432)) Int (ite x3532 (x1504 x3460) (ite x664 (x517 x3460) (ite x997 (x3943 x3460) (ite x5176 (x3943 x3460) (ite x3781 (x3943 x3460) (ite x2227 (x3943 x3460) (ite x2921 (x517 x3460) (ite x886 (x1504 x3460) (x3943 x3460))))))))))
(define-fun x3979 ((x3460 x2432)) Int (ite x1230 (ite x1598 (x3813 x3460) (x1504 x3460)) (x3943 x3460)))
(define-fun x5077 ((x3460 x2432)) Int (ite x4890 (x3979 x3460) (ite x2139 (x3943 x3460) (ite x5322 (x3943 x3460) (ite x5051 (x3943 x3460) (ite x1095 (x3979 x3460) (x3943 x3460)))))))
(define-fun x5083 ((x3460 x2432)) Int (ite x3752 (x5077 x3460) (x3979 x3460)))
(define-fun x5413 ((x3460 x2432)) Int (ite (= x3460 x2284) x2901 (x3943 x3460)))
(define-fun x4480 ((x3460 x2432)) Int (ite (= x2751 x3460) x2647 (x5413 x3460)))
(define-fun x3921 ((x3460 x2432)) Int (ite x855 (x4480 x3460) (ite x3241 (x5413 x3460) (ite x3405 (x3943 x3460) (ite x4606 (x3943 x3460) (ite x2936 (x3943 x3460) (ite x4449 (x3943 x3460) (ite x5112 (x5413 x3460) (ite x2843 (x4480 x3460) (x3943 x3460))))))))))
(define-fun x2625 ((x3460 x2432)) Int (ite x1719 (ite x4029 (x3921 x3460) (x4480 x3460)) (x3943 x3460)))
(define-fun x4310 ((x3460 x2432)) Int (ite x1284 (x2625 x3460) (ite x3107 (x3943 x3460) (ite x3500 (x3943 x3460) (ite x4418 (x3943 x3460) (ite x1358 (x2625 x3460) (x3943 x3460)))))))
(define-fun x3475 ((x3460 x2432)) Int (ite x1105 (x4310 x3460) (x2625 x3460)))
(define-fun x3840 ((x3460 x2432)) Int (ite x924 (x2507 x3460) (ite x5048 (x5083 x3460) (x3475 x3460))))
(define-fun x3695 ((x3460 x2432)) Int (ite (= x3460 x2876) x1885 (x3943 x3460)))
(define-fun x1923 ((x3460 x2432)) Int (ite (= x267 x3460) x1727 (x3695 x3460)))
(define-fun x235 ((x3460 x2432)) Int (ite x1718 (x1923 x3460) (ite x2494 (x3695 x3460) (ite x879 (x3943 x3460) (ite x4869 (x3943 x3460) (ite x2703 (x3943 x3460) (ite x3891 (x3943 x3460) (ite x2155 (x3695 x3460) (ite x2563 (x1923 x3460) (x3943 x3460))))))))))
(define-fun x3724 ((x3460 x2432)) Int (ite x4177 (ite x2623 (x235 x3460) (x1923 x3460)) (x3943 x3460)))
(define-fun x1195 ((x3460 x2432)) Int (ite x4165 (x3724 x3460) (ite x3785 (x3943 x3460) (ite x781 (x3943 x3460) (ite x1034 (x3724 x3460) (x3943 x3460))))))
(define-fun x1014 ((x3460 x2432)) Int (ite x68 (x1195 x3460) (x3724 x3460)))
(define-fun x2138 ((x3460 x2432)) Int (ite (= x3274 x3460) x5233 (x3943 x3460)))
(define-fun x4844 ((x3460 x2432)) Int (ite (= x53 x3460) x2183 (x2138 x3460)))
(define-fun x2064 ((x3460 x2432)) Int (ite x580 (x4844 x3460) (ite x2219 (x2138 x3460) (ite x1601 (x3943 x3460) (ite x2160 (x3943 x3460) (ite x916 (x3943 x3460) (ite x2326 (x3943 x3460) (ite x1471 (x2138 x3460) (ite x4513 (x4844 x3460) (x3943 x3460))))))))))
(define-fun x2846 ((x3460 x2432)) Int (ite x2872 (ite x2616 (x2064 x3460) (x4844 x3460)) (x3943 x3460)))
(define-fun x2566 ((x3460 x2432)) Int (ite x2611 (x2846 x3460) (ite x1984 (x3943 x3460) (ite x1953 (x3943 x3460) (ite x34 (x2846 x3460) (x3943 x3460))))))
(define-fun x2456 ((x3460 x2432)) Int (ite x412 (x2566 x3460) (x2846 x3460)))
(define-fun x5208 ((x3460 x2432)) Int (ite (= x3599 x3460) x3481 (x3943 x3460)))
(define-fun x1568 ((x3460 x2432)) Int (ite (= x3460 x72) x4079 (x5208 x3460)))
(define-fun x4133 ((x3460 x2432)) Int (ite x2662 (x1568 x3460) (ite x2986 (x5208 x3460) (ite x3764 (x3943 x3460) (ite x2280 (x3943 x3460) (ite x1269 (x3943 x3460) (ite x2968 (x3943 x3460) (ite x3666 (x5208 x3460) (ite x423 (x1568 x3460) (x3943 x3460))))))))))
(define-fun x2636 ((x3460 x2432)) Int (ite x714 (ite x4174 (x4133 x3460) (x1568 x3460)) (x3943 x3460)))
(define-fun x1154 ((x3460 x2432)) Int (ite x700 (x2636 x3460) (ite x2912 (x3943 x3460) (ite x3372 (x3943 x3460) (ite x2445 (x2636 x3460) (x3943 x3460))))))
(define-fun x4302 ((x3460 x2432)) Int (ite x5184 (x1154 x3460) (x2636 x3460)))
(define-fun x4068 ((x3460 x2432)) Int (ite x238 (x1014 x3460) (ite x4977 (x2456 x3460) (x4302 x3460))))
(define-fun x4071 ((x3460 x2432)) Int (ite x1235 (x4068 x3460) (ite x4089 (x3943 x3460) (x4068 x3460))))
(define-fun x3307 ((x3460 x2432)) Int (ite x3302 (x3840 x3460) (x4071 x3460)))
(define-fun x547 ((x3460 x2432)) Int (ite x4057 (x3943 x3460) (ite x1843 (x3943 x3460) (x3307 x3460))))
(define-fun x40 ((x3460 x2432)) Int (ite (= x3460 x496) x1796 (x2117 x3460)))
(define-fun x410 ((x3460 x2432)) Int (ite x990 (x2117 x3460) (ite x2631 (x2117 x3460) (ite x1158 (x2117 x3460) (ite x2058 (x2117 x3460) (ite x1659 (x40 x3460) (x2117 x3460)))))))
(define-fun x808 ((x3460 x2432)) Int (ite (= x3460 x3601) x1570 (x40 x3460)))
(define-fun x4964 ((x3460 x2432)) Int (ite x3368 (x2117 x3460) (ite x3445 (ite x3502 (x410 x3460) (x808 x3460)) (x2117 x3460))))
(define-fun x4389 ((x3460 x2432)) Int (ite (= x3460 x4213) x2688 (x4964 x3460)))
(define-fun x3074 ((x3460 x2432)) Int (ite x1723 (x4964 x3460) (ite x3857 (x4964 x3460) (ite x1520 (x4964 x3460) (ite x561 (x4964 x3460) (ite x3559 (x4389 x3460) (x4964 x3460)))))))
(define-fun x4641 ((x3460 x2432)) Int (ite (= x3460 x2806) x1212 (x4389 x3460)))
(define-fun x1938 ((x3460 x2432)) Int (ite x5369 (x4964 x3460) (ite x377 (ite x190 (x3074 x3460) (x4641 x3460)) (x4964 x3460))))
(define-fun x3038 ((x3460 x2432)) Int (ite x1099 (x1938 x3460) (ite x693 (x4964 x3460) (ite x1845 (x4964 x3460) (ite x1769 (x4964 x3460) (ite x1763 (x1938 x3460) (x4964 x3460)))))))
(define-fun x2731 ((x3460 x2432)) Int (ite x4155 (x3038 x3460) (x1938 x3460)))
(define-fun x65 ((x3460 x2432)) Int (ite (= x3460 x5180) x1273 (x4964 x3460)))
(define-fun x2903 ((x3460 x2432)) Int (ite x10 (x4964 x3460) (ite x1527 (x4964 x3460) (ite x1414 (x4964 x3460) (ite x3109 (x4964 x3460) (ite x2715 (x65 x3460) (x4964 x3460)))))))
(define-fun x5389 ((x3460 x2432)) Int (ite (= x3460 x2390) x4363 (x65 x3460)))
(define-fun x1445 ((x3460 x2432)) Int (ite x1230 (x4964 x3460) (ite x120 (ite x4327 (x2903 x3460) (x5389 x3460)) (x4964 x3460))))
(define-fun x1338 ((x3460 x2432)) Int (ite x4890 (x1445 x3460) (ite x2139 (x4964 x3460) (ite x5322 (x4964 x3460) (ite x5051 (x4964 x3460) (ite x1095 (x1445 x3460) (x4964 x3460)))))))
(define-fun x1948 ((x3460 x2432)) Int (ite x3752 (x1338 x3460) (x1445 x3460)))
(define-fun x3202 ((x3460 x2432)) Int (ite (= x3460 x4424) x4458 (x4964 x3460)))
(define-fun x5147 ((x3460 x2432)) Int (ite x741 (x4964 x3460) (ite x1710 (x4964 x3460) (ite x2650 (x4964 x3460) (ite x3466 (x4964 x3460) (ite x2463 (x3202 x3460) (x4964 x3460)))))))
(define-fun x1114 ((x3460 x2432)) Int (ite (= x5343 x3460) x646 (x3202 x3460)))
(define-fun x2830 ((x3460 x2432)) Int (ite x1719 (x4964 x3460) (ite x457 (ite x3961 (x5147 x3460) (x1114 x3460)) (x4964 x3460))))
(define-fun x2467 ((x3460 x2432)) Int (ite x1284 (x2830 x3460) (ite x3107 (x4964 x3460) (ite x3500 (x4964 x3460) (ite x4418 (x4964 x3460) (ite x1358 (x2830 x3460) (x4964 x3460)))))))
(define-fun x2835 ((x3460 x2432)) Int (ite x1105 (x2467 x3460) (x2830 x3460)))
(define-fun x955 ((x3460 x2432)) Int (ite x924 (x2731 x3460) (ite x5048 (x1948 x3460) (x2835 x3460))))
(define-fun x3878 ((x3460 x2432)) Int (ite (= x3460 x628) x3383 (x4964 x3460)))
(define-fun x4264 ((x3460 x2432)) Int (ite x3418 (x4964 x3460) (ite x5191 (x4964 x3460) (ite x3558 (x4964 x3460) (ite x4774 (x4964 x3460) (ite x4561 (x3878 x3460) (x4964 x3460)))))))
(define-fun x1362 ((x3460 x2432)) Int (ite (= x3010 x3460) x2334 (x3878 x3460)))
(define-fun x1002 ((x3460 x2432)) Int (ite x4177 (x4964 x3460) (ite x56 (ite x4470 (x4264 x3460) (x1362 x3460)) (x4964 x3460))))
(define-fun x2024 ((x3460 x2432)) Int (ite x4165 (x1002 x3460) (ite x3785 (x4964 x3460) (ite x781 (x4964 x3460) (ite x1034 (x1002 x3460) (x4964 x3460))))))
(define-fun x4633 ((x3460 x2432)) Int (ite x68 (x2024 x3460) (x1002 x3460)))
(define-fun x5200 ((x3460 x2432)) Int (ite (= x3460 x2037) x5332 (x4964 x3460)))
(define-fun x662 ((x3460 x2432)) Int (ite x5302 (x4964 x3460) (ite x1704 (x4964 x3460) (ite x3186 (x4964 x3460) (ite x3142 (x4964 x3460) (ite x1761 (x5200 x3460) (x4964 x3460)))))))
(define-fun x2622 ((x3460 x2432)) Int (ite (= x3460 x534) x4575 (x5200 x3460)))
(define-fun x4542 ((x3460 x2432)) Int (ite x2872 (x4964 x3460) (ite x304 (ite x1042 (x662 x3460) (x2622 x3460)) (x4964 x3460))))
(define-fun x2725 ((x3460 x2432)) Int (ite x2611 (x4542 x3460) (ite x1984 (x4964 x3460) (ite x1953 (x4964 x3460) (ite x34 (x4542 x3460) (x4964 x3460))))))
(define-fun x4095 ((x3460 x2432)) Int (ite x412 (x2725 x3460) (x4542 x3460)))
(define-fun x921 ((x3460 x2432)) Int (ite (= x3460 x1208) x5437 (x4964 x3460)))
(define-fun x2825 ((x3460 x2432)) Int (ite x4274 (x4964 x3460) (ite x755 (x4964 x3460) (ite x3254 (x4964 x3460) (ite x2654 (x4964 x3460) (ite x6 (x921 x3460) (x4964 x3460)))))))
(define-fun x4272 ((x3460 x2432)) Int (ite (= x3460 x2488) x3391 (x921 x3460)))
(define-fun x3970 ((x3460 x2432)) Int (ite x714 (x4964 x3460) (ite x4100 (ite x2928 (x2825 x3460) (x4272 x3460)) (x4964 x3460))))
(define-fun x723 ((x3460 x2432)) Int (ite x700 (x3970 x3460) (ite x2912 (x4964 x3460) (ite x3372 (x4964 x3460) (ite x2445 (x3970 x3460) (x4964 x3460))))))
(define-fun x5136 ((x3460 x2432)) Int (ite x5184 (x723 x3460) (x3970 x3460)))
(define-fun x1060 ((x3460 x2432)) Int (ite x238 (x4633 x3460) (ite x4977 (x4095 x3460) (x5136 x3460))))
(define-fun x347 ((x3460 x2432)) Int (ite x1235 (x1060 x3460) (ite x4089 (x4964 x3460) (x1060 x3460))))
(define-fun x2404 ((x3460 x2432)) Int (ite x3302 (x955 x3460) (x347 x3460)))
(define-fun x2824 ((x3460 x2432)) Int (ite x4057 (x4964 x3460) (ite x1843 (x4964 x3460) (x2404 x3460))))
(define-fun x619 ((x3460 x2432)) Int (ite x4057 (x5066 x3460) (x3011 x3460)))
(define-fun x2755 ((x3460 Int)) Int (ite (= x3460 x365) 10936679508223583803006762266923565500374401145016910147028117655998246682624 (x5166 x3460)))
(define-fun x1926 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x2031 x3460)))
(define-fun x5292 ((x3460 Int)) Int (ite (= x3460 x365) 1 (x2755 x3460)))
(define-fun x1044 ((x3460 Int)) Int (ite (= x3460 0) 1 (x2031 x3460)))
(define-fun x4320 ((x3460 Int)) Int (ite (= x365 x3460) 1 (x2755 x3460)))
(define-fun x2808 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x2031 x3460)))
(define-fun x1250 ((x3460 Int)) Int (ite (= x365 x3460) 1 (x2755 x3460)))
(define-fun x1835 ((x3460 x2432)) Int (ite (= x3460 x2046) x399 (x2782 x3460)))
(define-fun x2789 ((x3460 x2432)) Int (ite x189 (x2782 x3460) (x1835 x3460)))
(define-fun x3352 ((x3460 x2432)) Int (ite (= x1914 x3460) 0 (x2789 x3460)))
(define-fun x2737 ((x3460 Int)) Int (ite (= x3460 0) 1 (x4473 x3460)))
(define-fun x3244 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x4473 x3460)))
(define-fun x5104 ((x3460 Int)) Int (ite (= x3460 0) 1 (x4473 x3460)))
(define-fun x4361 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x4473 x3460)))
(define-fun x2120 ((x3460 Int)) Int (ite x4308 (x2972 x3460) (x357 x3460)))
(define-fun x4087 ((x3460 Int)) Int (ite x3765 (x5292 x3460) (ite x1037 (x4320 x3460) (x1250 x3460))))
(define-fun x824 ((x3460 Int)) Int (ite (= x4578 x3460) 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x4087 x3460)))
(define-fun x3068 ((x3460 Int)) Int (ite (= x4825 x3460) x2406 (x824 x3460)))
(define-fun x3572 ((x3460 Int)) Int (ite (= x4990 x3460) x2509 (x3068 x3460)))
(define-fun x1084 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x3572 x3460)))
(define-fun x4801 ((x3460 Int)) Int (ite x5070 (x3572 x3460) (x1084 x3460)))
(define-fun x3096 ((x3460 Int)) Int (ite (= x4578 x3460) 72570022874062638528011751457397263716769196454539065078543251854057308946432 (x4801 x3460)))
(define-fun x1282 ((x3460 Int)) Int (ite (= x3460 x3846) x2509 (x3096 x3460)))
(define-fun x2305 ((x3460 Int)) Int (ite (= x3460 x4578) 0 (x1282 x3460)))
(define-fun x5173 ((x3460 Int)) Int (ite (= x4578 x3460) 0 (x1282 x3460)))
(define-fun x1757 ((x3460 Int)) Int (ite (= x4578 x3460) 0 (x1282 x3460)))
(define-fun x5095 ((x3460 Int)) Int (ite x4698 (ite x751 (x1282 x3460) (x2305 x3460)) (ite x5399 (ite x2695 (x1282 x3460) (x5173 x3460)) (ite x1569 (x1282 x3460) (x1757 x3460)))))
(define-fun x4088 ((x3460 Int)) Int (ite (= 0 x3460) x5325 (x3567 x3460)))
(define-fun x1815 ((x3460 Int)) Int (ite (= 0 x3460) x3544 (x3567 x3460)))
(define-fun x3256 ((x3460 Int)) Int (ite (= x3460 0) x4076 (x3567 x3460)))
(define-fun x2103 ((x3460 Int)) Int (ite (= 0 x3460) x4161 (x4269 x3460)))
(define-fun x1551 ((x3460 Int)) Int (ite (= 0 x3460) x4580 (x4269 x3460)))
(define-fun x3583 ((x3460 Int)) Int (ite (= x3460 0) x4782 (x4269 x3460)))
(define-fun x445 ((x3460 x2432)) Int (ite (= x5416 x3460) x3264 (x3689 x3460)))
(define-fun x4614 ((x3460 x2432)) Int (ite (= x3460 x4507) 0 (x445 x3460)))
(define-fun x2202 ((x3460 x2432)) Int (ite x2907 (x4614 x3460) (x445 x3460)))
(define-fun x877 ((x3460 x2432)) Int (ite (= x3460 x3888) x1484 (x471 x3460)))
(define-fun x545 ((x3460 x2432)) Int (ite (= x3859 x3460) 0 (x877 x3460)))
(define-fun x4356 ((x3460 x2432)) Int (ite x339 (x545 x3460) (x877 x3460)))
(define-fun x1174 ((x3460 x2432)) Int (ite (= x3460 x5356) x771 (x2202 x3460)))
(define-fun x4905 ((x3460 x2432)) Int (ite (= x4189 x3460) x4881 (x4356 x3460)))
(define-fun x1049 ((x3460 x2432)) Int (ite (= x3460 x2157) 0 (x3627 x3460)))
(define-fun x2797 ((x3460 x2432)) Int (ite x3748 (x3627 x3460) (x1049 x3460)))
(define-fun x1107 ((x3460 x2432)) Int (ite (= x4701 x3460) x2897 (x2797 x3460)))
(define-fun x2165 ((x3460 x2432)) Int (ite (= x1046 x3460) x2897 (x2797 x3460)))
(define-fun x1595 ((x3460 x2432)) Int (ite (= x2132 x3460) x2897 (x2797 x3460)))
(define-fun x3447 ((x3460 x2432)) Int (ite (= x3460 x2811) x2897 (x2797 x3460)))
(define-fun x1079 ((x3460 x2432)) Int (ite x63 (x1107 x3460) (ite x1087 (x2165 x3460) (ite x3454 (x1595 x3460) (x3447 x3460)))))
(define-fun x2680 ((x3460 x2432)) Int (ite x1456 (x3627 x3460) (ite x1068 (x2797 x3460) (x1079 x3460))))
(define-fun x2191 ((x3460 x2432)) Int (ite (= x1879 x3460) 0 (x84 x3460)))
(define-fun x5245 ((x3460 x2432)) Int (ite x1730 (x84 x3460) (x2191 x3460)))
(define-fun x1324 ((x3460 x2432)) Int (ite (= x794 x3460) x211 (x5245 x3460)))
(define-fun x4897 ((x3460 x2432)) Int (ite (= x3460 x690) x211 (x5245 x3460)))
(define-fun x2359 ((x3460 x2432)) Int (ite (= x1213 x3460) x211 (x5245 x3460)))
(define-fun x4398 ((x3460 x2432)) Int (ite (= x3667 x3460) x211 (x5245 x3460)))
(define-fun x5276 ((x3460 x2432)) Int (ite x2476 (x1324 x3460) (ite x4823 (x4897 x3460) (ite x2128 (x2359 x3460) (x4398 x3460)))))
(define-fun x2589 ((x3460 x2432)) Int (ite x3810 (x84 x3460) (ite x818 (x5245 x3460) (x5276 x3460))))
(define-fun x3126 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x5278 x3460)))
(define-fun x3250 ((x3460 Int)) Int (ite (= x3460 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x5373 x3460)))
(define-fun x333 ((x3460 Int)) Int (ite (= x3460 132) x4078 (x3250 x3460)))
(define-fun x5422 ((x3460 Int)) Int (ite (= 164 x3460) x2179 (x333 x3460)))
(define-fun x5068 ((x3460 Int)) Int (ite (= 196 x3460) x3648 (x5422 x3460)))
(define-fun x2575 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x2620 x3460)))
(define-fun x1639 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x2620 x3460)))
(define-fun x3478 ((x3460 Int)) Int (ite (= x3460 0) 1 (x2620 x3460)))
(define-fun x3571 ((x3460 Int)) Int (ite (= x3460 0) 1 (x2620 x3460)))
(define-fun x1617 ((x3460 Int)) Int (ite (= 128 x3460) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x836 x3460)))
(define-fun x2906 ((x3460 Int)) Int (ite (= x3460 132) x4078 (x1617 x3460)))
(define-fun x3189 ((x3460 Int)) Int (ite (= 164 x3460) x4721 (x2906 x3460)))
(define-fun x4407 ((x3460 Int)) Int (ite (= x3460 196) x3339 (x3189 x3460)))
(define-fun x4046 ((x3460 Int)) Int (ite (= x3460 0) 1 (x4763 x3460)))
(define-fun x963 ((x3460 Int)) Int (ite (= x3460 0) 1 (x4763 x3460)))
(define-fun x77 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x4763 x3460)))
(define-fun x1469 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x4763 x3460)))
(define-fun x3848 ((x3460 Int)) Int (ite (= 128 x3460) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3660 x3460)))
(define-fun x4447 ((x3460 Int)) Int (ite (= x3460 132) x4078 (x3848 x3460)))
(define-fun x4562 ((x3460 Int)) Int (ite (= x3460 164) x4287 (x4447 x3460)))
(define-fun x3573 ((x3460 Int)) Int (ite (= 196 x3460) x1160 (x4562 x3460)))
(define-fun x3191 ((x3460 Int)) Int (ite (= x3460 0) 1 (x3535 x3460)))
(define-fun x3270 ((x3460 Int)) Int (ite (= x3460 0) 1 (x3535 x3460)))
(define-fun x1234 ((x3460 Int)) Int (ite (= x3460 0) 1 (x3535 x3460)))
(define-fun x3221 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x3535 x3460)))
(define-fun x3692 ((x3460 Int)) Int (ite (= x3460 0) 0 (x1837 x3460)))
(define-fun x2541 ((x3460 Int)) Int (ite x68 (x1837 x3460) (x3692 x3460)))
(define-fun x3316 ((x3460 Int)) Int (ite (= 0 x3460) 0 (x1837 x3460)))
(define-fun x1253 ((x3460 Int)) Int (ite x412 (x1837 x3460) (x3316 x3460)))
(define-fun x1877 ((x3460 Int)) Int (ite (= x3460 0) 0 (x1837 x3460)))
(define-fun x5050 ((x3460 Int)) Int (ite x5184 (x1837 x3460) (x1877 x3460)))
(define-fun x711 ((x3460 Int)) Int (ite x238 (x2541 x3460) (ite x4977 (x1253 x3460) (x5050 x3460))))
(define-fun x5210 ((x3460 Int)) Int (ite x1235 (x711 x3460) (ite x4089 (x1354 x3460) (x711 x3460))))
(define-fun x3203 ((x3460 x2432)) Int (ite x4333 (x3352 x3460) (x2789 x3460)))
(define-fun x2436 ((x3460 x2432)) Int (ite (= x3437 x3460) x3233 (x4061 x3460)))
(define-fun x5177 ((x3460 x2432)) Int (ite (= x3662 x3460) x3233 (x4347 x3460)))
(define-fun x1131 ((x3460 x2432)) Int (ite x4311 (x4061 x3460) (ite x341 (x2436 x3460) (x4061 x3460))))
(define-fun x2065 ((x3460 x2432)) Int (ite (= x3460 x4373) 0 (x156 x3460)))
(define-fun x2501 ((x3460 x2432)) Int (ite x4311 (x156 x3460) (x2065 x3460)))
(define-fun x204 ((x3460 x2432)) Int (ite (= x3460 x959) x2908 (x142 x3460)))
(define-fun x2850 ((x3460 x2432)) Int (ite x4311 (x142 x3460) (ite x203 (x204 x3460) (x142 x3460))))
(define-fun x36 ((x3460 x2432)) Int (ite (= x4176 x3460) x2908 (x3655 x3460)))
(define-fun x4901 ((x3460 x2432)) Int (ite x203 (x3655 x3460) (x36 x3460)))
(define-fun x4849 ((x3460 x2432)) Int (ite (= x3460 x2287) 0 (x4901 x3460)))
(define-fun x436 ((x3460 x2432)) Int (ite x4311 (x3655 x3460) (x4849 x3460)))
(define-fun x3230 ((x3460 x2432)) Int (ite x341 (x4347 x3460) (x5177 x3460)))
(define-fun x4932 ((x3460 x2432)) Int (ite (= x3460 x5448) 0 (x3230 x3460)))
(define-fun x2554 ((x3460 x2432)) Int (ite x4311 (x4347 x3460) (x4932 x3460)))
(define-fun x609 ((x3460 x2432)) Int (ite (= x2383 x3460) 0 (x619 x3460)))
(define-fun x453 ((x3460 x2432)) Int (ite x4555 (x609 x3460) (x619 x3460)))
(define-fun x5299 ((x3460 x2432)) Int (ite (= x3460 x4907) x3022 (x1927 x3460)))
(define-fun x2453 ((x3460 x2432)) Int (ite (= x2705 x3460) x3022 (x329 x3460)))
(define-fun x5252 ((x3460 x2432)) Int (ite x5097 (x1927 x3460) (ite x4455 (x5299 x3460) (x1927 x3460))))
(define-fun x2206 ((x3460 x2432)) Int (ite (= x404 x3460) x4778 (x140 x3460)))
(define-fun x3146 ((x3460 x2432)) Int (ite x5097 (x140 x3460) (ite x577 (x2206 x3460) (x140 x3460))))
(define-fun x4142 ((x3460 x2432)) Int (ite (= x1614 x3460) 0 (x3506 x3460)))
(define-fun x5392 ((x3460 x2432)) Int (ite x5097 (x3506 x3460) (x4142 x3460)))
(define-fun x2019 ((x3460 x2432)) Int (ite x4455 (x329 x3460) (x2453 x3460)))
(define-fun x5108 ((x3460 x2432)) Int (ite (= x4298 x3460) 0 (x2019 x3460)))
(define-fun x1171 ((x3460 x2432)) Int (ite x5097 (x329 x3460) (x5108 x3460)))
(define-fun x1264 ((x3460 x2432)) Int (ite (= x3460 x3060) x4778 (x3972 x3460)))
(define-fun x2484 ((x3460 x2432)) Int (ite x577 (x3972 x3460) (x1264 x3460)))
(define-fun x3455 ((x3460 x2432)) Int (ite (= x5099 x3460) 0 (x2484 x3460)))
(define-fun x5271 ((x3460 x2432)) Int (ite x5097 (x3972 x3460) (x3455 x3460)))
(define-fun x3980 ((x3460 x2432)) Int (ite (= x2572 x3460) x1227 (x2712 x3460)))
(define-fun x3033 ((x3460 x2432)) Int (ite x982 (x2712 x3460) (x3980 x3460)))
(define-fun x5383 ((x3460 x2432)) Int (ite (= x1051 x3460) 0 (x3033 x3460)))
(define-fun x3864 ((x3460 x2432)) Int (ite x3748 (x2712 x3460) (x5383 x3460)))
(define-fun x1401 ((x3460 x2432)) Int (ite (= x3460 x4929) x64 (x3864 x3460)))
(define-fun x4374 ((x3460 x2432)) Int (ite (= x3460 x2868) 0 (x3864 x3460)))
(define-fun x1687 ((x3460 x2432)) Int (ite (= x3460 x3925) x2940 (x3864 x3460)))
(define-fun x512 ((x3460 x2432)) Int (ite (= x3788 x3460) x4357 (x1687 x3460)))
(define-fun x1334 ((x3460 x2432)) Int (ite (= x3460 x483) 0 (x3864 x3460)))
(define-fun x5366 ((x3460 x2432)) Int (ite (= x3460 x4193) x4357 (x1334 x3460)))
(define-fun x863 ((x3460 x2432)) Int (ite x63 (x1401 x3460) (ite x1087 (x4374 x3460) (ite x3454 (x512 x3460) (x5366 x3460)))))
(define-fun x3024 ((x3460 x2432)) Int (ite x1456 (x2712 x3460) (ite x1068 (x3864 x3460) (x863 x3460))))
(define-fun x3392 ((x3460 x2432)) Int (ite (= x3460 x2681) x2043 (x3856 x3460)))
(define-fun x3088 ((x3460 x2432)) Int (ite x4927 (x3856 x3460) (x3392 x3460)))
(define-fun x2230 ((x3460 x2432)) Int (ite (= x3460 x1123) 0 (x3088 x3460)))
(define-fun x2709 ((x3460 x2432)) Int (ite x3748 (x3856 x3460) (x2230 x3460)))
(define-fun x2216 ((x3460 x2432)) Int (ite (= x3460 x3587) 0 (x2709 x3460)))
(define-fun x1633 ((x3460 x2432)) Int (ite (= x3460 x2963) x4357 (x2216 x3460)))
(define-fun x1140 ((x3460 x2432)) Int (ite (= x3460 x4612) 0 (x2709 x3460)))
(define-fun x4237 ((x3460 x2432)) Int (ite (= x3460 x1447) x5140 (x2709 x3460)))
(define-fun x4005 ((x3460 x2432)) Int (ite (= x4592 x3460) x4357 (x4237 x3460)))
(define-fun x989 ((x3460 x2432)) Int (ite (= x3460 x5204) x5140 (x2709 x3460)))
(define-fun x4799 ((x3460 x2432)) Int (ite x63 (x1633 x3460) (ite x1087 (x1140 x3460) (ite x3454 (x4005 x3460) (x989 x3460)))))
(define-fun x2800 ((x3460 x2432)) Int (ite x1456 (x3856 x3460) (ite x1068 (x2709 x3460) (x4799 x3460))))
(define-fun x4125 ((x3460 x2432)) Int (ite (= x3460 x3885) x2043 (x2344 x3460)))
(define-fun x5115 ((x3460 x2432)) Int (ite x3748 (x2344 x3460) (ite x4927 (x4125 x3460) (x2344 x3460))))
(define-fun x2708 ((x3460 x2432)) Int (ite (= x993 x3460) x4357 (x5115 x3460)))
(define-fun x5394 ((x3460 x2432)) Int (ite (= x993 x3460) x4357 (x5115 x3460)))
(define-fun x90 ((x3460 x2432)) Int (ite x63 (x5115 x3460) (ite x1087 (x2708 x3460) (ite x3454 (x5115 x3460) (x5394 x3460)))))
(define-fun x3683 ((x3460 x2432)) Int (ite x1456 (x2344 x3460) (ite x1068 (x5115 x3460) (x90 x3460))))
(define-fun x5289 ((x3460 x2432)) Int (ite (= x3460 x3449) x5376 (x3683 x3460)))
(define-fun x1057 ((x3460 x2432)) Int (ite (= x298 x3460) x5376 (x2800 x3460)))
(define-fun x4415 ((x3460 x2432)) Int (ite x4150 (x2800 x3460) (x1057 x3460)))
(define-fun x936 ((x3460 x2432)) Int (ite (= x1798 x3460) 0 (x4415 x3460)))
(define-fun x2234 ((x3460 x2432)) Int (ite x3100 (x2800 x3460) (x936 x3460)))
(define-fun x261 ((x3460 x2432)) Int (ite (= x3460 x1466) 0 (x2680 x3460)))
(define-fun x4077 ((x3460 x2432)) Int (ite x3100 (x2680 x3460) (x261 x3460)))
(define-fun x3834 ((x3460 x2432)) Int (ite (= x4090 x3460) x1227 (x4081 x3460)))
(define-fun x4535 ((x3460 x2432)) Int (ite x3748 (x4081 x3460) (ite x982 (x3834 x3460) (x4081 x3460))))
(define-fun x1990 ((x3460 x2432)) Int (ite (= x669 x3460) x4357 (x4535 x3460)))
(define-fun x3830 ((x3460 x2432)) Int (ite (= x123 x3460) x4357 (x4535 x3460)))
(define-fun x3323 ((x3460 x2432)) Int (ite x63 (x1990 x3460) (ite x1087 (x3830 x3460) (x4535 x3460))))
(define-fun x3416 ((x3460 x2432)) Int (ite x1456 (x4081 x3460) (ite x1068 (x4535 x3460) (x3323 x3460))))
(define-fun x1356 ((x3460 x2432)) Int (ite (= x3460 x2392) x4656 (x3416 x3460)))
(define-fun x560 ((x3460 x2432)) Int (ite x3100 (x3416 x3460) (ite x4878 (x1356 x3460) (x3416 x3460))))
(define-fun x2962 ((x3460 x2432)) Int (ite (= x3460 x119) x4656 (x3024 x3460)))
(define-fun x3862 ((x3460 x2432)) Int (ite x4878 (x3024 x3460) (x2962 x3460)))
(define-fun x1865 ((x3460 x2432)) Int (ite (= x1589 x3460) 0 (x3862 x3460)))
(define-fun x1431 ((x3460 x2432)) Int (ite x3100 (x3024 x3460) (x1865 x3460)))
(define-fun x3575 ((x3460 x2432)) Int (ite x3100 (x3683 x3460) (ite x4150 (x5289 x3460) (x3683 x3460))))
(define-fun x1896 ((x3460 x2432)) Int (ite (= x3460 x594) x3094 (x3565 x3460)))
(define-fun x912 ((x3460 x2432)) Int (ite x1644 (x3565 x3460) (x1896 x3460)))
(define-fun x3894 ((x3460 x2432)) Int (ite (= x3460 x825) 0 (x912 x3460)))
(define-fun x929 ((x3460 x2432)) Int (ite x1730 (x3565 x3460) (x3894 x3460)))
(define-fun x2247 ((x3460 x2432)) Int (ite (= x3460 x2375) x1653 (x929 x3460)))
(define-fun x443 ((x3460 x2432)) Int (ite (= x4283 x3460) 0 (x929 x3460)))
(define-fun x2460 ((x3460 x2432)) Int (ite (= x3460 x3321) x730 (x929 x3460)))
(define-fun x25 ((x3460 x2432)) Int (ite (= x1459 x3460) x4357 (x2460 x3460)))
(define-fun x2253 ((x3460 x2432)) Int (ite (= x3404 x3460) 0 (x929 x3460)))
(define-fun x1330 ((x3460 x2432)) Int (ite (= x1770 x3460) x4357 (x2253 x3460)))
(define-fun x4258 ((x3460 x2432)) Int (ite x2476 (x2247 x3460) (ite x4823 (x443 x3460) (ite x2128 (x25 x3460) (x1330 x3460)))))
(define-fun x552 ((x3460 x2432)) Int (ite x3810 (x3565 x3460) (ite x818 (x929 x3460) (x4258 x3460))))
(define-fun x5344 ((x3460 x2432)) Int (ite (= x3460 x4409) x4884 (x820 x3460)))
(define-fun x277 ((x3460 x2432)) Int (ite x903 (x820 x3460) (x5344 x3460)))
(define-fun x18 ((x3460 x2432)) Int (ite (= x3460 x1134) 0 (x277 x3460)))
(define-fun x692 ((x3460 x2432)) Int (ite x1730 (x820 x3460) (x18 x3460)))
(define-fun x626 ((x3460 x2432)) Int (ite (= x3460 x2200) 0 (x692 x3460)))
(define-fun x3844 ((x3460 x2432)) Int (ite (= x3578 x3460) x4357 (x626 x3460)))
(define-fun x4372 ((x3460 x2432)) Int (ite (= x2090 x3460) 0 (x692 x3460)))
(define-fun x3742 ((x3460 x2432)) Int (ite (= x2144 x3460) x1318 (x692 x3460)))
(define-fun x403 ((x3460 x2432)) Int (ite (= x1590 x3460) x4357 (x3742 x3460)))
(define-fun x100 ((x3460 x2432)) Int (ite (= x2265 x3460) x1318 (x692 x3460)))
(define-fun x1576 ((x3460 x2432)) Int (ite x2476 (x3844 x3460) (ite x4823 (x4372 x3460) (ite x2128 (x403 x3460) (x100 x3460)))))
(define-fun x388 ((x3460 x2432)) Int (ite x3810 (x820 x3460) (ite x818 (x692 x3460) (x1576 x3460))))
(define-fun x2340 ((x3460 x2432)) Int (ite (= x5348 x3460) x4884 (x2441 x3460)))
(define-fun x4085 ((x3460 x2432)) Int (ite x1730 (x2441 x3460) (ite x903 (x2340 x3460) (x2441 x3460))))
(define-fun x4886 ((x3460 x2432)) Int (ite (= x3889 x3460) x4357 (x4085 x3460)))
(define-fun x4714 ((x3460 x2432)) Int (ite (= x3889 x3460) x4357 (x4085 x3460)))
(define-fun x2954 ((x3460 x2432)) Int (ite x2476 (x4085 x3460) (ite x4823 (x4886 x3460) (ite x2128 (x4085 x3460) (x4714 x3460)))))
(define-fun x1052 ((x3460 x2432)) Int (ite x3810 (x2441 x3460) (ite x818 (x4085 x3460) (x2954 x3460))))
(define-fun x1295 ((x3460 x2432)) Int (ite (= x3460 x3360) x4601 (x1052 x3460)))
(define-fun x1828 ((x3460 x2432)) Int (ite (= x3460 x1663) x4601 (x388 x3460)))
(define-fun x4883 ((x3460 x2432)) Int (ite (= x4231 x3460) 0 (x2589 x3460)))
(define-fun x3732 ((x3460 x2432)) Int (ite x1799 (x2589 x3460) (x4883 x3460)))
(define-fun x310 ((x3460 x2432)) Int (ite x3070 (x388 x3460) (x1828 x3460)))
(define-fun x2368 ((x3460 x2432)) Int (ite (= x4055 x3460) 0 (x310 x3460)))
(define-fun x4196 ((x3460 x2432)) Int (ite x1799 (x388 x3460) (x2368 x3460)))
(define-fun x4543 ((x3460 x2432)) Int (ite (= x2899 x3460) x1222 (x552 x3460)))
(define-fun x3354 ((x3460 x2432)) Int (ite x3843 (x552 x3460) (x4543 x3460)))
(define-fun x1361 ((x3460 x2432)) Int (ite (= x3460 x1233) 0 (x3354 x3460)))
(define-fun x50 ((x3460 x2432)) Int (ite x1799 (x552 x3460) (x1361 x3460)))
(define-fun x3497 ((x3460 x2432)) Int (ite (= x3460 x4325) x3094 (x3388 x3460)))
(define-fun x2917 ((x3460 x2432)) Int (ite x1730 (x3388 x3460) (ite x1644 (x3497 x3460) (x3388 x3460))))
(define-fun x3201 ((x3460 x2432)) Int (ite (= x3460 x4983) x4357 (x2917 x3460)))
(define-fun x137 ((x3460 x2432)) Int (ite (= x4000 x3460) x4357 (x2917 x3460)))
(define-fun x1004 ((x3460 x2432)) Int (ite x2476 (x3201 x3460) (ite x4823 (x137 x3460) (x2917 x3460))))
(define-fun x2379 ((x3460 x2432)) Int (ite x3810 (x3388 x3460) (ite x818 (x2917 x3460) (x1004 x3460))))
(define-fun x4499 ((x3460 x2432)) Int (ite (= x3344 x3460) x1222 (x2379 x3460)))
(define-fun x5028 ((x3460 x2432)) Int (ite x1799 (x2379 x3460) (ite x3843 (x4499 x3460) (x2379 x3460))))
(define-fun x1078 ((x3460 x2432)) Int (ite x1799 (x1052 x3460) (ite x3070 (x1295 x3460) (x1052 x3460))))
(define-fun x5404 ((x3460 Int)) Int (ite (= x3460 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x2199 x3460)))
(define-fun x3619 ((x3460 Int)) Int (ite (= 132 x3460) x4078 (x5404 x3460)))
(define-fun x2804 ((x3460 Int)) Int (ite (= x3460 164) x2179 (x3619 x3460)))
(define-fun x4244 ((x3460 Int)) Int (ite (= x3460 196) x850 (x2804 x3460)))
(define-fun x3520 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x1188 x3460)))
(define-fun x3237 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x1188 x3460)))
(define-fun x4225 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x1188 x3460)))
(define-fun x4740 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x1188 x3460)))
(define-fun x2146 ((x3460 Int)) Int (ite (= x3460 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1806 x3460)))
(define-fun x4056 ((x3460 Int)) Int (ite (= x3460 132) x4078 (x2146 x3460)))
(define-fun x3898 ((x3460 Int)) Int (ite (= x3460 164) x4721 (x4056 x3460)))
(define-fun x643 ((x3460 Int)) Int (ite (= x3460 196) x5128 (x3898 x3460)))
(define-fun x3300 ((x3460 Int)) Int (ite (= x3460 0) 1 (x2324 x3460)))
(define-fun x2679 ((x3460 Int)) Int (ite (= x3460 0) 1 (x2324 x3460)))
(define-fun x5429 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x2324 x3460)))
(define-fun x2702 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x2324 x3460)))
(define-fun x397 ((x3460 Int)) Int (ite (= x3460 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x1349 x3460)))
(define-fun x659 ((x3460 Int)) Int (ite (= 132 x3460) x4078 (x397 x3460)))
(define-fun x2308 ((x3460 Int)) Int (ite (= 164 x3460) x4287 (x659 x3460)))
(define-fun x1786 ((x3460 Int)) Int (ite (= 196 x3460) x4519 (x2308 x3460)))
(define-fun x2909 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x1864 x3460)))
(define-fun x2336 ((x3460 Int)) Int (ite (= x3460 0) 1 (x1864 x3460)))
(define-fun x3721 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x1864 x3460)))
(define-fun x3553 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x1864 x3460)))
(define-fun x1801 ((x3460 Int)) Int (ite (= x3460 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3675 x3460)))
(define-fun x114 ((x3460 Int)) Int (ite (= x3460 132) x4078 (x1801 x3460)))
(define-fun x378 ((x3460 Int)) Int (ite (= x3460 164) x2179 (x114 x3460)))
(define-fun x3778 ((x3460 Int)) Int (ite (= 196 x3460) x2509 (x378 x3460)))
(define-fun x4657 ((x3460 x2432)) Int (ite (= x3460 x2559) x1620 (x547 x3460)))
(define-fun x2545 ((x3460 x2432)) Int (ite (= x956 x3460) x2759 (x2555 x3460)))
(define-fun x3908 ((x3460 x2432)) Int (ite x5070 (x2555 x3460) (x2545 x3460)))
(define-fun x5223 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x5105 x3460)))
(define-fun x2838 ((x3460 x2432)) Int (ite (= x831 x3460) x259 (x2824 x3460)))
(define-fun x996 ((x3460 x2432)) Int (ite (= x3460 x255) x2479 (x2838 x3460)))
(define-fun x575 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x5105 x3460)))
(define-fun x2809 ((x3460 x2432)) Int (ite (= x3460 x737) x3226 (x3098 x3460)))
(define-fun x1678 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x5105 x3460)))
(define-fun x708 ((x3460 x2432)) Int (ite (= x3460 x5037) x3815 (x4149 x3460)))
(define-fun x2038 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x5105 x3460)))
(define-fun x702 ((x3460 Int)) Int (ite (= x3460 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x5040 x3460)))
(define-fun x2952 ((x3460 Int)) Int (ite (= x3460 132) x4078 (x702 x3460)))
(define-fun x5045 ((x3460 Int)) Int (ite (= x3460 164) x4721 (x2952 x3460)))
(define-fun x1297 ((x3460 Int)) Int (ite (= x3460 196) x2509 (x5045 x3460)))
(define-fun x4896 ((x3460 x2432)) Int (ite (= x5189 x3460) x116 (x547 x3460)))
(define-fun x3824 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x3549 x3460)))
(define-fun x2741 ((x3460 x2432)) Int (ite (= x3460 x3459) x3853 (x2824 x3460)))
(define-fun x389 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x3549 x3460)))
(define-fun x487 ((x3460 x2432)) Int (ite (= x3460 x4303) x1433 (x3098 x3460)))
(define-fun x2967 ((x3460 x2432)) Int (ite (= x4609 x3460) x983 (x487 x3460)))
(define-fun x4669 ((x3460 Int)) Int (ite (= x3460 0) 1 (x3549 x3460)))
(define-fun x93 ((x3460 x2432)) Int (ite (= x3460 x3541) x2101 (x4149 x3460)))
(define-fun x4966 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x3549 x3460)))
(define-fun x394 ((x3460 Int)) Int (ite (= x3460 128) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3533 x3460)))
(define-fun x2350 ((x3460 Int)) Int (ite (= x3460 132) x4078 (x394 x3460)))
(define-fun x29 ((x3460 Int)) Int (ite (= x3460 164) x4287 (x2350 x3460)))
(define-fun x4510 ((x3460 Int)) Int (ite (= 196 x3460) x2509 (x29 x3460)))
(define-fun x1780 ((x3460 x2432)) Int (ite (= x3460 x3582) x199 (x547 x3460)))
(define-fun x3780 ((x3460 Int)) Int (ite (= x3460 0) 1 (x3638 x3460)))
(define-fun x4956 ((x3460 x2432)) Int (ite (= x3460 x2367) x3309 (x2824 x3460)))
(define-fun x145 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x3638 x3460)))
(define-fun x2151 ((x3460 x2432)) Int (ite (= x3460 x3536) x3548 (x3098 x3460)))
(define-fun x949 ((x3460 Int)) Int (ite (= 0 x3460) 1 (x3638 x3460)))
(define-fun x1306 ((x3460 x2432)) Int (ite (= x3460 x801) x1575 (x4149 x3460)))
(define-fun x832 ((x3460 x2432)) Int (ite (= x5250 x3460) x3179 (x1306 x3460)))
(define-fun x1462 ((x3460 Int)) Int (ite (= x3460 0) 1 (x3638 x3460)))
(define-fun x3350 ((x3460 x2432)) Int (ite x2851 (x2234 x3460) (x2709 x3460)))
(define-fun x1113 ((x3460 x2432)) Int (ite x543 (x4196 x3460) (x692 x3460)))
(define-fun x3628 ((x3460 Int)) Int (ite (= 0 x3460) 0 (x3489 x3460)))
(define-fun x1388 ((x3460 Int)) Int (ite x4155 (x3489 x3460) (x3628 x3460)))
(define-fun x3163 ((x3460 Int)) Int (ite (= 0 x3460) 0 (x3489 x3460)))
(define-fun x1565 ((x3460 Int)) Int (ite x3752 (x3489 x3460) (x3163 x3460)))
(define-fun x4655 ((x3460 Int)) Int (ite (= x3460 0) 0 (x3489 x3460)))
(define-fun x2071 ((x3460 Int)) Int (ite x1105 (x3489 x3460) (x4655 x3460)))
(define-fun x4605 ((x3460 Int)) Int (ite x924 (x1388 x3460) (ite x5048 (x1565 x3460) (x2071 x3460))))
(define-fun x1024 ((x3460 Int)) Int (ite (= 0 x3460) 0 (x4315 x3460)))
(define-fun x87 ((x3460 Int)) Int (ite x751 (x4315 x3460) (x1024 x3460)))
(define-fun x3376 ((x3460 Int)) Int (ite (= 0 x3460) 0 (x4315 x3460)))
(define-fun x4151 ((x3460 Int)) Int (ite x2695 (x4315 x3460) (x3376 x3460)))
(define-fun x3877 ((x3460 Int)) Int (ite (= x3460 0) 0 (x4315 x3460)))
(define-fun x435 ((x3460 Int)) Int (ite x1569 (x4315 x3460) (x3877 x3460)))
(define-fun x5232 ((x3460 Int)) Int (ite x4698 (x87 x3460) (ite x5399 (x4151 x3460) (x435 x3460))))
(define-fun x3524 ((x3460 Int)) Int (ite x4551 (x1021 x3460) (x2121 x3460)))
(define-fun x765 ((x3460 Int)) Int (ite x2656 (x1021 x3460) (x3563 x3460)))
(define-fun x2768 ((x3460 Int)) Int (ite x4918 (x1021 x3460) (x2451 x3460)))
(define-fun x1308 ((x3460 Int)) Int (ite x5440 (x3524 x3460) (ite x813 (x765 x3460) (x2768 x3460))))
(define-fun x806 ((x3460 x2432)) Int (ite x3154 (x4149 x3460) (ite x1385 (x4149 x3460) (ite x900 (x4149 x3460) (ite x4822 (x4149 x3460) (ite x3151 (x1306 x3460) (x4149 x3460)))))))
(define-fun x1341 ((x3460 x2432)) Int (ite x3426 (x4149 x3460) (ite x3700 (x4149 x3460) (ite x1477 (x4149 x3460) (ite x4734 (x806 x3460) (x832 x3460))))))
(define-fun x1674 ((x3460 x2432)) Int (ite x2246 (x3098 x3460) (ite x2672 (x3098 x3460) (ite x3286 (x3098 x3460) (ite x117 (x3098 x3460) (ite x1509 (x487 x3460) (x3098 x3460)))))))
(define-fun x1461 ((x3460 x2432)) Int (ite x5214 (x3098 x3460) (ite x1797 (x3098 x3460) (ite x4335 (ite x1340 (x1674 x3460) (x2967 x3460)) (x3098 x3460)))))
(define-fun x2667 ((x3460 x2432)) Int (ite x3514 (x2824 x3460) (ite x3347 (x2824 x3460) (ite x869 (x2824 x3460) (ite x4548 (x2824 x3460) (ite x1596 (x2838 x3460) (x2824 x3460)))))))
(define-fun x857 ((x3460 x2432)) Int (ite x254 (x2824 x3460) (ite x727 (ite x2015 (x2667 x3460) (x996 x3460)) (x2824 x3460))))
(define-fun x4627 ((x3460 Int)) Int (ite x4174 (x3535 x3460) (x3191 x3460)))
(define-fun x2421 ((x3460 Int)) Int (ite x2928 (x3535 x3460) (x3270 x3460)))
(define-fun x2313 ((x3460 Int)) Int (ite x5273 (x3535 x3460) (x1234 x3460)))
(define-fun x5057 ((x3460 Int)) Int (ite x5135 (x3535 x3460) (x3221 x3460)))
(define-fun x4529 ((x3460 Int)) Int (ite x714 (x4627 x3460) (ite x4100 (x2421 x3460) (ite x4948 (x2313 x3460) (x5057 x3460)))))
(define-fun x3509 ((x3460 Int)) Int (ite x2616 (x4763 x3460) (x4046 x3460)))
(define-fun x2260 ((x3460 Int)) Int (ite x1042 (x4763 x3460) (x963 x3460)))
(define-fun x3102 ((x3460 Int)) Int (ite x4256 (x4763 x3460) (x77 x3460)))
(define-fun x415 ((x3460 Int)) Int (ite x2251 (x4763 x3460) (x1469 x3460)))
(define-fun x1241 ((x3460 Int)) Int (ite x2872 (x3509 x3460) (ite x304 (x2260 x3460) (ite x4353 (x3102 x3460) (x415 x3460)))))
(define-fun x539 ((x3460 Int)) Int (ite x2623 (x2620 x3460) (x2575 x3460)))
(define-fun x3465 ((x3460 Int)) Int (ite x4470 (x2620 x3460) (x1639 x3460)))
(define-fun x5291 ((x3460 Int)) Int (ite x4953 (x2620 x3460) (x3478 x3460)))
(define-fun x1577 ((x3460 Int)) Int (ite x3310 (x2620 x3460) (x3571 x3460)))
(define-fun x787 ((x3460 Int)) Int (ite x4177 (x539 x3460) (ite x56 (x3465 x3460) (ite x2093 (x5291 x3460) (x1577 x3460)))))
(define-fun x2990 ((x3460 Int)) Int (ite x4029 (x1864 x3460) (x2909 x3460)))
(define-fun x663 ((x3460 Int)) Int (ite x3961 (x1864 x3460) (x2336 x3460)))
(define-fun x1255 ((x3460 Int)) Int (ite x5345 (x1864 x3460) (x3721 x3460)))
(define-fun x4016 ((x3460 Int)) Int (ite x5144 (x1864 x3460) (x3553 x3460)))
(define-fun x1215 ((x3460 Int)) Int (ite x1719 (x2990 x3460) (ite x457 (x663 x3460) (ite x149 (x1255 x3460) (x4016 x3460)))))
(define-fun x745 ((x3460 Int)) Int (ite x1598 (x2324 x3460) (x3300 x3460)))
(define-fun x2027 ((x3460 Int)) Int (ite x4327 (x2324 x3460) (x2679 x3460)))
(define-fun x47 ((x3460 Int)) Int (ite x5339 (x2324 x3460) (x5429 x3460)))
(define-fun x5400 ((x3460 Int)) Int (ite x442 (x2324 x3460) (x2702 x3460)))
(define-fun x2803 ((x3460 Int)) Int (ite x1230 (x745 x3460) (ite x120 (x2027 x3460) (ite x3681 (x47 x3460) (x5400 x3460)))))
(define-fun x392 ((x3460 Int)) Int (ite x23 (x1188 x3460) (x3520 x3460)))
(define-fun x336 ((x3460 Int)) Int (ite x190 (x1188 x3460) (x3237 x3460)))
(define-fun x1738 ((x3460 Int)) Int (ite x2059 (x1188 x3460) (x4225 x3460)))
(define-fun x2735 ((x3460 Int)) Int (ite x1754 (x1188 x3460) (x4740 x3460)))
(define-fun x51 ((x3460 Int)) Int (ite x5369 (x392 x3460) (ite x377 (x336 x3460) (ite x703 (x1738 x3460) (x2735 x3460)))))
(define-fun x2306 ((x3460 Int)) Int (ite x3765 (x1926 x3460) (ite x1037 (x1044 x3460) (x2808 x3460))))
(define-fun x3880 ((x3460 Int)) Int (ite (= x3460 0) 1 (x1274 x3460)))
(define-fun x1454 ((x3460 x2432)) Int (ite (= (x2147 x4078) x3460) x3066 (x3616 x3460)))
(define-fun x1470 ((x3460 Int)) Int (ite x1211 (x4088 x3460) (ite x4916 (x1815 x3460) (x3256 x3460))))
(define-fun x934 ((x3460 Int)) Int (ite x1251 (x2103 x3460) (ite x1952 (x1551 x3460) (x3583 x3460))))
(define-fun x2201 ((x3460 Int)) Int (ite x243 (x3197 x3460) (ite x2503 (x3005 x3460) (x251 x3460))))
(define-fun x885 ((x2444 Int) (x153 Int) (x5243 Int) (x3229 Int)) Bool (=> (and (>= x153 0) (>= x3229 x153) (>= x2444 0) (>= x5243 x2444)) (>= (x4860 x5243 x3229) (x4860 x2444 x153))))
(define-fun x2366 ((x2444 Int) (x153 Int) (x5243 Int) (x3229 Int)) Bool (=> (= x2444 x5243) (= (x4860 x2444 (- x153 x3229)) (- (x4860 x2444 x153) (x4860 x5243 x3229)))))
(define-fun x1311 ((x2444 Int)) Bool (=> (and (not (= x2444 75483562)) (not (= 2929553584 x2444)) (not (= 2835717307 x2444)) (not (= x2444 178855970)) (not (= 24044834009420335638544845215851342251227478490780828673611325350056707489792 x2444)) (not (= x2444 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 1857877511 x2444)) (not (= x2444 398450620)) (not (= 10936679508223583803006762266923565500374401145016910147028117655998246682624 x2444)) (not (= x2444 1461501637330902918203684832716283019655932542976)) (not (= x2444 115792089237316195423570985008687907853269984665640564039457)) (not (= 2678788150 x2444)) (not (= 2796547477 x2444)) (not (= x2444 2245473101)) (not (= x2444 6539370208772218570076773595062200405109424842860869254164860851635934461952)) (not (= x2444 2134560854)) (not (= x2444 35417553099779373699389112480655434059402432070290151981503827724506945814528)) (not (= 1000000000000000000 x2444)) (not (= 157198259 x2444)) (not (= 242558722 x2444)) (not (= 1313710058 x2444)) (not (= x2444 76833804140862540057647519496925185374644862498684814347804924264468996685824)) (not (= 4294967296 x2444)) (not (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 x2444)) (not (= x2444 2217467699)) (not (= 3842108676 x2444)) (not (= 2362143243 x2444)) (not (= 2858086653 x2444)) (not (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x2444)) (not (= x2444 10742207464693106059581744854972325794081737850190833080250671788038469713920)) (> x2444 10000) (not (= x2444 599290589)) (not (= 547091486 x2444)) (not (= x2444 77053863734975077137548456399560439977311721439096602559221323163398253314048)) (not (= x2444 1461501637330902918203684832716283019655932542975)) (not (= 988262939 x2444)) (not (= x2444 2030502250)) (not (= x2444 405663989)) (not (= 1865448899 x2444)) (not (= 3583811254 x2444)) (not (= 1856199391 x2444)) (not (= x2444 117300739)) (not (= 1038142104 x2444)) (not (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 x2444)) (not (= x2444 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x2444 2691771752)) (not (= 20853193852723734048814770637610870652489083209607696777694672748161462697984 x2444)) (not (= x2444 2236579515)) (not (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2444)) (not (= x2444 2023533118)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x2444)) (not (= 989455977 x2444)) (not (= 18446744073709551615 x2444)) (not (= x2444 1466279372))) (not ((_ is x3059) (x2147 x2444)))))
(assert (x5093 x502))
(assert (= (and x3580 x2610) x5015))
(assert (x5093 x1902))
(assert (x5093 x1499))
(assert (= (and x5260 x4961) x4383))
(assert (= (and x320 (not x5205)) x3598))
(assert (x5093 x3343))
(assert (x5093 x4459))
(assert (x5093 x4688))
(assert (x348 x3330))
(assert (x5093 x617))
(assert (x1311 x419))
(assert (= (and (not x1921) x4661) x125))
(assert (= (and x2866 x4411) x2129))
(assert (x5093 x289))
(assert (x5093 x5313))
(assert (x5093 x411))
(assert (= x4154 (and x4446 x1163)))
(assert (= x3107 (and x16 x381)))
(assert (x5093 x43))
(assert (x5093 x3312))
(assert (x5093 x1578))
(assert (= x1414 (and (not x4666) x1256)))
(assert (x1311 x1778))
(assert (= x1667 (or x3546 x875)))
(assert (x5093 x4793))
(assert (= (and x1467 x3054) x4548))
(assert (= x937 (and x3234 x1623)))
(assert (x5093 x2522))
(assert (=> (<= x710 10000) (= (x3059 x710) (x2147 x710))))
(assert (= x4885 (x3311 (x2147 x4885))))
(assert (x479 x4731))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x3658 x2512 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x570 x2512 1461501637330902918203684832716283019655932542976)) x2512)) (x355 x2512 1461501637330902918203684832716283019655932542976) (x3825 x2512 1461501637330902918203684832716283019655932542976) (x4162 x2512 1461501637330902918203684832716283019655932542976)))
(assert (= x4158 (=> (= x1628 (= x919 0)) (and (=> (and (not x1628) (= (or (> x2508 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2508) true) (> 32 x2508))) x4629)) (and (=> (and (and (= (x5095 x4578) x4318) (= (= 0 x4318) x5067)) (not x4629)) (and (=> x5067 x2143) (=> (not x5067) x1172))) (=> (and (= true x4986) x4629) x4001))) (=> x1628 x1172)))))
(assert (= (or x2095 x510) x2428))
(assert (x5093 x3634))
(assert (= (and x2922 x1407) x4530))
(assert (x5093 x3815))
(assert (= (or x1211 x4916 x1018) x4289))
(assert (x5093 x322))
(assert (x5093 x4161))
(assert (x5093 x2779))
(assert (x5093 x5258))
(assert (x3331 x1368))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x3658 x1784 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x570 x1784 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1784)) (x355 x1784 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3825 x1784 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4162 x1784 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (and x4282 x1142) x2611))
(assert (x5093 x3929))
(assert (x5093 x2187))
(assert (= (x3311 (x2147 x856)) x856))
(assert (= x4520 (and (not x3212) x3477)))
(assert (x5093 x2084))
(assert (= x3340 (and (not x249) x1794)))
(assert (x5093 x4611))
(assert (= x2955 (and x3526 (not x2195))))
(assert (x4437 x3328))
(assert (x5093 x761))
(assert (x5093 x4971))
(assert (= x4370 (or x3997 x2274)))
(assert (= (x3311 (x2147 x2728)) x2728))
(assert (x5093 x278))
(assert (x5093 x2398))
(assert (= x2323 (and x3145 x4511)))
(assert (x5093 x116))
(assert (= (+ (x3311 x601) 1) (x3311 (x4345 x601 1))))
(assert (x5093 x3775))
(assert (= x3154 (and x3818 x4583)))
(assert (x5093 x1804))
(assert (x5093 x2231))
(assert (x5093 x4911))
(assert (= x5222 (and (=> (and (not x2674) (= x1109 x2674)) x716) (=> (and x2674 (= x2000 (> x2068 x519))) (and (=> (and (not x2000) (and (= x1109 (> x3581 x1224)) (= x1224 (x4761 (- x519 x2068))))) x716) (=> x2000 x2585))))))
(assert (x1311 x3140))
(assert (x5093 x1562))
(assert (= (and x5412 (not x76)) x2221))
(assert (x5093 x4979))
(assert (x5093 x3562))
(assert (x5093 x622))
(assert (x5093 x3648))
(assert (x5093 x2125))
(assert (= (x3059 2858086653) (x2147 2858086653)))
(assert (= (or x4291 x5388 x4880 x4794 x3304 x209) x4256))
(assert (=> (>= 10000 x5181) (= (x3059 x5181) (x2147 x5181))))
(assert (x5093 x735))
(assert (= (and x4469 x5333) x4153))
(assert (= x3962 (and x2562 (not x2000))))
(assert (= x3711 (=> (and (= x312 x2042) (= x111 x2730)) x2300)))
(assert (= (and (not x4442) x792) x4681))
(assert (x5093 x3108))
(assert (=> (>= 10000 x1032) (= (x3059 x1032) (x2147 x1032))))
(assert (x5093 x2017))
(assert (x5093 x4300))
(assert (= (and (not x4830) x4603) x2633))
(assert (= x5304 (or x858 x3632)))
(assert (= (x3311 (x2147 x1825)) x1825))
(assert (x5093 x2889))
(assert (= (and x2813 x757) x1089))
(assert (= x1344 (and x2164 x3086)))
(assert (= (and x821 x2081) x2715))
(assert (x5093 x4962))
(assert (x5093 x2942))
(assert (= (or x2039 x2888) x2276))
(assert (x5093 x1277))
(assert (= x1487 (or x2049 (and (not x1665) x4329))))
(assert (= x1982 (and x2114 x4337)))
(assert (x5093 x1160))
(assert (= (and x2719 x2298) x4500))
(assert (= x2994 (and x736 (not x3602))))
(assert (= (or x581 x2166) x3700))
(assert (x5093 x962))
(assert (x1311 x1653))
(assert (x5093 x4568))
(assert (=> (>= 10000 x4287) (= (x3059 x4287) (x2147 x4287))))
(assert (x5093 x4951))
(assert (= x3480 (=> (and (= 0 x1144) (= x2542 x3219)) x5226)))
(assert (= (=> (and (or x380 (not x380)) (= x380 (= x1963 0))) x777) x1696))
(assert (x5093 x4906))
(assert (x1311 x1613))
(assert (= x3282 (and x3698 x2393)))
(assert (= (=> (and (= 0 x1479) (= x1162 x5011)) x4341) x3198))
(assert (x5093 x3802))
(assert (x5093 x4238))
(assert (= x4758 (and x1495 x1706)))
(assert (x5093 x2849))
(assert (x4783 x3328))
(assert (= (x2147 547091486) (x3059 547091486)))
(assert (x5093 x1443))
(assert (x5093 x1850))
(assert (= x1812 (and x5133 x3468)))
(assert (x5093 x3757))
(assert (x5093 x328))
(assert (x5093 x3853))
(assert (x348 x4022))
(assert (= x254 (or x3166 x3754)))
(assert (x5093 x4254))
(assert (x5093 x2904))
(assert (= x2640 (and (not x369) x4439)))
(assert (x5093 x3530))
(assert (= x2353 (and (not x5072) x937)))
(assert (x5093 x1930))
(assert (x5093 x1825))
(assert (= (and x1467 (not x3054)) x4511))
(assert (x5093 x4536))
(assert (x5093 x129))
(assert (x5093 x3115))
(assert (= x296 (and x2030 x1309)))
(assert (x5093 x3167))
(assert (=> (>= 10000 x1254) (= (x3059 x1254) (x2147 x1254))))
(assert (= x3243 (and x4879 x239)))
(assert (= x4959 (and (not x4876) x4574)))
(assert (x5093 x3709))
(assert (x5093 x1893))
(assert (x5093 x4625))
(assert (=> (>= 10000 x4588) (= (x2147 x4588) (x3059 x4588))))
(assert (x5093 x846))
(assert (x5093 x2815))
(assert (x348 x5362))
(assert (x5093 x4515))
(assert (x5093 x1181))
(assert (x5093 x4602))
(assert (x4437 x313))
(assert (= x2894 (=> (and (<= x901 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2406 x3167) (= x285 x4471) (<= x3947 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1858 x2783) (= (x5034 x705) x3947) (<= 0 x901) (= x365 x1382) (= x901 (x1009 x888)) (= (x4345 x888 1) x705) (>= x3947 0) (= x5042 x3324) (= (x3589 (+ x1382 32)) x4538)) x3095)))
(assert (=> (<= x4357 10000) (= (x3059 x4357) (x2147 x4357))))
(assert (= (and x1707 x2222) x3052))
(assert (= (or x2739 x466) x3620))
(assert (x5093 x979))
(assert (= x2148 (and (not x2327) x1030)))
(assert (x5093 x616))
(assert (= x3067 (=> (and (or (and (and (or (and x3712 (and (>= 1461501637330902918203684832716283019655932542975 x5084) (= (x1431 x3585) x5084) (<= 0 x5084) (> 1461501637330902918203684832716283019655932542976 x5084) (= x3585 (x2760 (x2147 x4265) x1711 0)))) (not x3712)) (and (>= x790 0) (< x790 1461501637330902918203684832716283019655932542976) (= x4084 (x4761 (- x4265 x790))) (= x3712 (> x4084 0)) (= x790 (x3575 x2224)) (<= x790 1461501637330902918203684832716283019655932542975))) x334) (and (not x334) (and (or (and (and (= x4248 (x4345 x2224 1)) (<= x1660 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x1660) (= (x560 x4248) x1660) (<= 0 x1660)) (not x2746)) x2746) (and (> 1461501637330902918203684832716283019655932542976 x4852) (= (= x4852 0) x2746) (>= 1461501637330902918203684832716283019655932542975 x4852) (<= 0 x4852) (= (x3575 x2224) x4852))))) (= x334 (ite (< x4597 x4748) (not (= 0 x4265)) (< x4597 x4748)))) x969)))
(assert (x5093 x2026))
(assert (x5093 x5381))
(assert (= (=> (and (= (= x3382 0) x2922) (or (not x2922) x2922)) x623) x1676))
(assert (= (and x3507 x121) x564))
(assert (x5093 x1906))
(assert (= x3091 (and x4784 x3236)))
(assert (= x4179 (or x1566 x1571)))
(assert (x5093 x1829))
(assert (x5093 x926))
(assert (x5093 x1417))
(assert (x1311 x3384))
(assert (= x412 (or x34 x4967 x2611 x1953 x1984)))
(assert (= x225 (and x5447 (not x5363))))
(assert (=> (<= x3094 10000) (= (x2147 x3094) (x3059 x3094))))
(assert (x5093 x4275))
(assert (x5093 x4817))
(assert (x5093 x901))
(assert (= x2395 (=> (and (= x5165 x474) (= 0 x5358)) x4975)))
(assert (x885 x520 x1194 x2299 x1368))
(assert (x5093 x4525))
(assert (= x531 (and (not x1891) x3809)))
(assert (x5093 x4638))
(assert (= x4566 (not (and (= x5441 (x1171 x1280)) (= x1280 (x4345 x5113 1)) (= (x2760 (x2147 x1971) x2810 0) x5113) (<= x5441 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x5441) (<= 0 x5441)))))
(assert (= (and x2877 x2148) x2175))
(assert (= (or x3469 x1846 x3963 x1905) x3215))
(assert (= x4554 (and x418 (not x5326))))
(assert (x5093 x3903))
(assert (x5093 x3022))
(assert (x5093 x3249))
(assert (x5093 x4328))
(assert (x5093 x1425))
(assert (= (=> (and (= x3485 (= x596 0)) (or (and (and (= x5315 x4290) (= x2969 x3884) (= x3115 x2017) (= x596 x1186)) (not x3485)) (and (and (= (x1395 (x2147 x2406)) x4386) (= x1262 (x1736 (x2147 x4078))) (= x5315 x4290) (= (x3589 (+ x5146 x1262)) x4933) (= x596 x1186) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1262 x5146)) (= x2969 x3884) (= x2017 x3115) (= (- x4386 x5146) x4847) (= x5146 (ite (= 0 x596) x2057 0))) x3485))) x1668) x2415))
(assert (= x2722 (and x4039 x2848)))
(assert (= x2089 (or x1493 x1754)))
(assert (x5093 x3596))
(assert (= x1112 (=> (and (= x3936 x3944) (= x276 x5350)) x4052)))
(assert (= x473 (x3311 (x2147 x473))))
(assert (= 35417553099779373699389112480655434059402432070290151981503827724506945814528 (x3311 (x3059 35417553099779373699389112480655434059402432070290151981503827724506945814528))))
(assert (x5093 x3348))
(assert (x5093 x4368))
(assert (x1311 x3144))
(assert (= (and (not x2701) x2707) x1593))
(assert (= x4993 (or (and x1386 (not x3974)) x5145)))
(assert (and (x4259 1000000000000000000 x1884) (x887 1000000000000000000 x1884) (x4075 1000000000000000000 x1884) (and (= (x4860 1000000000000000000 (- x1884 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x1884 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1884) (- (* x1884 1000000000000000000) (* x1884 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1884 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x1884 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1884 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x1884) (* x1884 1000000000000000000)) (x2358 1000000000000000000 x1884) (x244 1000000000000000000 x1884)))
(assert (= (or x5345 x3393) x149))
(assert (= (and x3141 x4082) x1298))
(assert (= (or x1563 x5361) x538))
(assert (x5093 x4825))
(assert (= x3286 (and x3651 (not x4224))))
(assert (x5093 x4450))
(assert (x5093 x2292))
(assert (= x3945 (and (not x164) x4520)))
(assert (= (and (not x2784) x1413) x2360))
(assert (and (x4259 1000000000000000000 x1106) (x887 1000000000000000000 x1106) (x4075 1000000000000000000 x1106) (and (= (x4860 1000000000000000000 (- x1106 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x1106 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1106) (- (* x1106 1000000000000000000) (* x1106 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1106 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x1106 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1106 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x1106) (* x1106 1000000000000000000)) (x2358 1000000000000000000 x1106) (x244 1000000000000000000 x1106)))
(assert (x5093 x2543))
(assert (= x1490 (and x4110 x3121)))
(assert (x2366 x1368 x2299 x520 x1194))
(assert (x5093 x3964))
(assert (= x1881 (and (not x3968) x1096)))
(assert (= (and x3172 x1772) x3967))
(assert (x5093 x5011))
(assert (x5093 x4037))
(assert (= x756 (and x2365 x2837)))
(assert (= (+ (x3311 x5096) 1) (x3311 (x4345 x5096 1))))
(assert (= x3843 (and x160 x4565)))
(assert (= x3948 (and (not x5031) x5069)))
(assert (= (and (=> (and (= x2698 x1854) (not x2698)) x1191) (=> (and x2698 (= (< x519 x5091) x202)) (and (=> x202 x2585) (=> (and (and (= (x4761 (- x519 x5091)) x1716) (= x1854 (> x3581 x1716))) (not x202)) x1191)))) x1636))
(assert (= x4388 (=> (and (= x4451 (= x3999 0)) (or x4451 (not x4451))) x4617)))
(assert (=> (>= 10000 x17) (= (x2147 x17) (x3059 x17))))
(assert (x5093 x4533))
(assert (x5093 x4198))
(assert (x5093 x2480))
(assert (x5093 x688))
(assert (x5093 x2730))
(assert (= (x3311 (x4345 x3872 2)) (+ (x3311 x3872) 2)))
(assert (x5093 x2756))
(assert (x348 x1124))
(assert (= (and x234 x4143) x437))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x3658 x4607 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x570 x4607 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x4607)) (x355 x4607 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3825 x4607 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4162 x4607 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (and (x1458 x2761 1000000000000000000) (x1175 x2761 1000000000000000000) (=> (and (> x2761 0) (< 0 1000000000000000000)) (and (> (* (x3658 x2761 1000000000000000000) 1000000000000000000) (- x2761 1000000000000000000)) (<= (* 1000000000000000000 (x3658 x2761 1000000000000000000)) x2761))) (x5235 x2761 1000000000000000000) (x2792 x2761 1000000000000000000)))
(assert (= x600 (and x3568 x2109)))
(assert (= x4301 (and x3427 x4199)))
(assert (= (and x2150 x2532) x2022))
(assert (= x2882 (and x3473 x4541)))
(assert (=> (>= 10000 x4099) (= (x3059 x4099) (x2147 x4099))))
(assert (= x829 (x3311 (x2147 x829))))
(assert (= x4513 (and x232 x739)))
(assert (= (x3059 6539370208772218570076773595062200405109424842860869254164860851635934461952) (x2147 6539370208772218570076773595062200405109424842860869254164860851635934461952)))
(assert (= (and x627 (not x158)) x4124))
(assert (= (and (not x3716) x1812) x4326))
(assert (= x2639 (and (not x3401) x5257)))
(assert (x5093 x1143))
(assert (= (and x468 (not x1381)) x5261))
(assert (x5093 x4126))
(assert (x5093 x4021))
(assert (x3513 x520 (- x1194 x2299)))
(assert (x1311 x1946))
(assert (x5093 x1964))
(assert (x1311 x3159))
(assert (x5093 x5230))
(assert (x5093 x223))
(assert (= x1492 (x3311 (x2147 x1492))))
(assert (x5093 x2659))
(assert (= (or x400 x1042) x304))
(assert (x5093 x14))
(assert (x5093 x3391))
(assert (= (or x2351 x1598) x1230))
(assert (x5093 x4686))
(assert (x3294 x4921 x1592))
(assert (= (and x2951 x3935) x598))
(assert (x5093 x275))
(assert (= (and x2717 x200) x1714))
(assert (x5093 x2183))
(assert (= (and x315 x1145) x1082))
(assert (= (or x2426 x1340) x4335))
(assert (= (+ 2 (x3311 x188)) (x3311 (x4345 x188 2))))
(assert (x3294 x2595 x3205))
(assert (x5093 x4111))
(assert (= (and (not x2373) x2632) x3186))
(assert (= (=> (and (or (and (and (or (and (not x239) (and (< x2099 1461501637330902918203684832716283019655932542976) (= x2099 (x3146 x1317)) (>= x2099 0) (= (x4345 x2270 1) x1317) (<= x2099 1461501637330902918203684832716283019655932542975) (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x3462) (= x4735 (x1025 1461501637330902918203684832716283019655932542975 x1015)) (= x4132 (x1025 1461501637330902918203684832716283019655932542975 x1015)))) (and (and (= x3881 (x1025 1461501637330902918203684832716283019655932542975 x1015)) (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x1023) (= x4461 (x1025 1461501637330902918203684832716283019655932542975 x1015))) x239)) (and (= (= 0 x297) x239) (>= x297 0) (> 1461501637330902918203684832716283019655932542976 x297) (= x297 (x5252 x2270)) (<= x297 1461501637330902918203684832716283019655932542975))) (not x485)) (and (and (and (>= x4434 0) (= x4549 (< 0 x241)) (= x4434 (x5252 x2270)) (> 1461501637330902918203684832716283019655932542976 x4434) (= (x4761 (- x2178 x4434)) x241) (<= x4434 1461501637330902918203684832716283019655932542975)) (or (and (and (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x3624) (= x3790 (x1025 1461501637330902918203684832716283019655932542975 x1015)) (= x2169 (x1025 1461501637330902918203684832716283019655932542975 x1015))) (not x4549)) (and (and (> 1461501637330902918203684832716283019655932542976 x4821) (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x5174) (= x1472 (x1025 1461501637330902918203684832716283019655932542975 x1015)) (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x1441) (= x4821 (x5271 x81)) (<= 0 x4821) (= x81 (x2760 (x2147 x2178) x2810 0)) (<= x4821 1461501637330902918203684832716283019655932542975)) x4549))) x485)) (= x485 (ite (> x4748 x4951) (not (= 0 x2178)) (< x4951 x4748)))) x1586) x5178))
(assert (= x689 (and x1436 x2452)))
(assert (x5093 x4050))
(assert (x5093 x4331))
(assert (= x4233 x4247))
(assert (= x2641 (and x1353 x748)))
(assert (x5093 x2873))
(assert (x1311 x5192))
(assert (x5093 x4408))
(assert (x1311 x1492))
(assert (x1311 x3823))
(assert (= (and (=> (and (not x613) (and (= x537 x4786) (= x2565 0))) x4443) (=> (and x613 (and (and (> 1461501637330902918203684832716283019655932542976 x4093) (= (x2554 x3983) x4093) (<= 0 x4093) (= (x2760 (x2147 x537) x1117 0) x1528) (>= 1461501637330902918203684832716283019655932542975 x4093) (= x3983 (x4345 x1528 1)) (= x4887 (ite (> x4748 1) (not (= x4093 0)) (> x4748 1)))) (or (and (= x4887 x135) (not x4887)) (and x4887 (and (= (< x4911 x197) x3019) (= x4911 (x2501 x902)) (<= 0 x4911) (= (not x3019) x135) (= (x2760 (x2147 x4093) x1117 0) x3246) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4911) (= (x4345 x3246 2) x902)))))) x5427)) x303))
(assert (x1311 x4656))
(assert (= x2791 (and x2591 x5032)))
(assert (= x4653 (and x5080 x3600)))
(assert (= x3735 (x3311 (x2147 x3735))))
(assert (and (=> (> 32 0) (= (+ (* (x3658 x4607 32) 32) (x570 x4607 32)) x4607)) (x355 x4607 32) (x3825 x4607 32) (x4162 x4607 32)))
(assert (x5093 x1432))
(assert (x5093 x535))
(assert (x5093 x5354))
(assert (= (and (not x605) x2927) x2076))
(assert (= x4643 (and (not x4887) x5418)))
(assert (x5093 x2162))
(assert (x5093 x1000))
(assert (x5131 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1106))
(assert (= x2058 (and x431 x4723)))
(assert (x3513 x1194 (- x520 x2299)))
(assert (= (+ 1 (x3311 x1123)) (x3311 (x4345 x1123 1))))
(assert (= x607 (and x2407 x4767)))
(assert (x5093 x2124))
(assert (x5093 x2025))
(assert (= x3095 (=> (= x4358 (> x2509 0)) (and (=> (not x4358) x1304) (=> (and x4358 (and (or (and (and (= x5157 1) (< x5213 988262939) (not (< x5168 4)) (= x4344 10936679508223583803006762266923565500374401145016910147028117655998246682624) (> 2217467699 x5213) (= x4487 x5168) (not (< x5213 405663989)) (= 4 x5168) (= x5213 405663989) (> x4181 0) (= x4181 (x3736 (x2147 x2179))) (= x4602 32)) x1768) (and (and (= (= x2406 x4721) x1781) (or (and x1781 (and (< x5009 2217467699) (not (> 4 x3190)) (= x5009 405663989) (= x3190 x4487) (< 0 x1749) (= x3905 10936679508223583803006762266923565500374401145016910147028117655998246682624) (< x5009 988262939) (= (x3736 (x2147 x4721)) x1749) (= 4 x3190) (not (> 405663989 x5009)) (= 1 x5157) (= x4602 32))) (and (and (and (and (= x3543 10936679508223583803006762266923565500374401145016910147028117655998246682624) (= x4375 4) (< x3128 2217467699) (> x4111 0) (< x3128 988262939) (= 405663989 x3128) (= 32 x4602) (= x5157 1) (= x4375 x4487) (not (< x3128 405663989)) (= (x3736 (x2147 x4287)) x4111) (not (> 4 x4375))) x3614) (= x3614 (= x4287 x2406))) (not x1781)))) (not x1768))) (and (= x4487 4) (= x1768 (= x2406 x2179))))) x390)))))
(assert (= (and x5020 (not x1675)) x1527))
(assert (= x1928 (or x4089 x4818 x1235)))
(assert (x2366 x520 x1194 x340 x520))
(assert (x5093 x2607))
(assert (x1311 x4786))
(assert (x4783 x1784))
(assert (= x1398 (x3311 (x2147 x1398))))
(assert (x5093 x2655))
(assert (= (=> (and (= x4198 x2859) (= 0 x1115)) x3726) x1474))
(assert (= x2010 (and (=> (and (and (and (= (x4345 x1452 1) x3699) (<= 0 x1558) (= (ite (> x4748 1) (not (= 0 x1558)) (> x4748 1)) x4236) (< x1558 1461501637330902918203684832716283019655932542976) (<= x1558 1461501637330902918203684832716283019655932542975) (= (x2760 (x2147 x2414) x4855 0) x1452) (= x1558 (x692 x3699))) (or (and (= x4236 x1874) (not x4236)) (and (and (<= x352 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2798 (x2760 (x2147 x1558) x4855 0)) (= x4266 (x4345 x2798 2)) (>= x352 0) (= (not x4670) x1874) (= x352 (x5245 x4266)) (= (> x211 x352) x4670)) x4236))) x3782) x1299) (=> (and (and (= 0 x4017) (= x2414 x1318)) (not x3782)) x4351))))
(assert (x5093 x2193))
(assert (= x3457 (=> (and (= x2153 0) (= x5165 x5331)) x3451)))
(assert (x1311 x1603))
(assert (= x684 (and (not x4544) x85)))
(assert (= (x3059 2691771752) (x2147 2691771752)))
(assert (= x120 (or x658 x4327)))
(assert (x5093 x187))
(assert (x5093 x5376))
(assert (= (+ (x3311 x1711) 1) (x3311 (x4345 x1711 1))))
(assert (= (x3311 (x2147 x64)) x64))
(assert (= x3147 (and (not x305) x4107)))
(assert (= (and x3791 x3407) x3109))
(assert (= (and x2632 x2373) x5260))
(assert (=> (<= x3562 10000) (= (x3059 x3562) (x2147 x3562))))
(assert (= x3092 (and x3184 (not x2232))))
(assert (x5093 x4045))
(assert (x5093 x2477))
(assert (x5093 x4874))
(assert (= x1495 (and (not x4147) x2979)))
(assert (= (and (not x717) x3282) x4399))
(assert (= x159 (or x31 x793)))
(assert (= (and x1067 x4379) x1206))
(assert (x5093 x2465))
(assert (x5093 x1032))
(assert (= (x3059 2236579515) (x2147 2236579515)))
(assert (x5093 x524))
(assert (x5093 x4359))
(assert (x5093 x1735))
(assert (x5093 x4253))
(assert (x5093 x883))
(assert (= x3597 (and (not x5309) x3523)))
(assert (x5093 x4093))
(assert (= (or x5382 x4470) x56))
(assert (x5093 x509))
(assert (x5093 x652))
(assert (= (and x1281 x917) x2881))
(assert (= (=> (and (= (= x4884 0) x5248) (or (and x5248 (= (x4345 x4855 2) x4325)) (and (not x5248) (= (x2760 (x2147 x4884) x4855 0) x594)))) x1418) x4547))
(assert (= x3260 (and x5424 x4629)))
(assert (= x5129 (and x762 x3231)))
(assert (x5093 x405))
(assert (= x608 (and x1457 x3153)))
(assert (= (x2147 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x3059 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (= x1511 (and (not x893) x4557)))
(assert (= x1672 (and (not x3688) x928)))
(assert (= x3140 (x3311 (x2147 x3140))))
(assert (x5093 x3130))
(assert (=> (>= 10000 x3874) (= (x3059 x3874) (x2147 x3874))))
(assert (= x3911 (=> (and (and (= x5312 x2468) (= x83 x5419) (= x60 x4757) (= (not (= x999 0)) x2775) (= x2515 x4173) (= (not (= x1073 0)) x1515) (<= x3505 1461501637330902918203684832716283019655932542975) (= x1987 (= 0 x1323)) (> x2950 0) (= x5314 x88) (= (not (= x3733 0)) x2816) (= x4567 x2087) (= x1827 x1515) (= x3851 (= 0 x5054)) (= x2001 x4214) (= x1811 (or x5402 x1987)) (= x4457 x738) (= x1015 x2087) (= x4512 (not (= x1167 0))) (= x4178 x416) (= x2733 x5195) (<= x622 1461501637330902918203684832716283019655932542975) (= x3676 x4457) (= x416 x5312) (= x4814 x4567) x5121 (= x4512 x2669) (= x635 x2775) (= x1683 x2243) (= x2237 0) (= x500 (= 0 x2916)) (= x2950 (x3736 (x2147 x4078))) (= x726 x3676) (= x622 x2733) (>= 1461501637330902918203684832716283019655932542975 x2187) (= x2406 x5419) (= x2243 (not (= 0 x3009))) (= (not (= 0 x882)) x4173) (= x5285 x4846) (>= x622 0) (= x88 x5179) (= x60 (not (= x3012 0))) (= (or x2660 x4846) x5402) (>= x2187 0) (= x4546 0) (= x4814 x1323) (= x2916 x754) (<= 0 x3505) (= x754 x5314) (= x1476 x3505) (= (not (= x3130 0)) x4214) (= x2748 x1683) (= x2816 x5285) (= x2660 (not x2748)) (= x5121 (or x1811 x500))) (and x2420 (<= x2286 1461501637330902918203684832716283019655932542975) (>= x473 0) (<= x4091 255) (= x1476 x289) (<= 0 x1656) (<= 0 x3002) (>= 18446744073709551615 x4872) (not (= x1893 x2179)) (= x2807 (not (= x4502 0))) (not (= x2179 x4078)) (<= 0 x5241) (<= 0 x3058) (<= x3544 1461501637330902918203684832716283019655932542975) (= (x332 256) x882) (not (= x4078 x2496)) (= x3058 (x4113 x2052)) (<= x1300 1461501637330902918203684832716283019655932542975) (>= x5087 0) (<= 0 x5325) (<= x4076 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x2112) (not (= x5181 x4078)) (<= x3389 255) (not (= x2330 x5181)) (<= 0 x1901) (<= x4413 255) (= x2159 (x3736 (x2147 x4078))) (<= 0 x4091) (>= 1461501637330902918203684832716283019655932542975 x434) (<= 0 x4485) (<= 0 x4502) (>= 18446744073709551615 x4160) (<= x2330 1461501637330902918203684832716283019655932542975) (>= x1355 0) (< 0 x1893) (= x316 (x1866 x2052)) (>= x5445 0) (not (= x2496 x5181)) (>= x3483 0) (>= x4814 0) (= (x2760 (x2147 x1369) (x3059 168) 0) x2052) (= (not (= x4091 0)) x253) (>= x4898 0) (<= x2189 255) (= x3009 (x332 128)) (not (< x242 3583811254)) (<= x2628 1461501637330902918203684832716283019655932542975) x3895 (not (= x5181 x617)) (= x4191 (x4945 (x2147 x1893))) (= x1369 x83) (>= x3069 0) (<= 0 x3569) (>= 1461501637330902918203684832716283019655932542975 x4287) (> x2330 0) (<= x4962 18446744073709551615) (not (= x4287 x4721)) (not (= x2330 x1893)) (>= 255 x3251) (< x242 3842108676) (<= x1374 1461501637330902918203684832716283019655932542975) (<= 0 x3634) (>= 1461501637330902918203684832716283019655932542975 x4721) (>= x4160 0) (< x3058 256) (<= 0 x523) (< 0 x2179) (>= x2112 0) (>= 255 x2766) (<= x2264 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x4483) (>= 1461501637330902918203684832716283019655932542975 x617) (<= x4278 255) (= (x450 x2052) x3389) (= (x332 224) x3130) (> 256 x4502) (not (= x2179 x5181)) (<= x5241 1461501637330902918203684832716283019655932542975) (<= 0 x3251) (< x4091 256) (<= x5181 1461501637330902918203684832716283019655932542975) (<= 0 x316) (>= 255 x3463) (>= 1461501637330902918203684832716283019655932542975 x83) (>= x4506 0) (not (= x1893 x4287)) (not (= x1893 x2496)) (>= 1461501637330902918203684832716283019655932542975 x3069) (<= x5319 255) (< 0 x4287) (= x4252 (< 0 (x3736 (x2147 x2330)))) (= (x458 x2052) x3251) (>= x3741 0) (not (= x2496 x4721)) (= (x4945 (x2147 x5181)) x1911) (<= 0 x2189) (>= x965 0) x3879 (>= 1461501637330902918203684832716283019655932542975 x2496) (<= 0 x846) (<= x1173 1461501637330902918203684832716283019655932542975) (= (x4945 (x2147 x2179)) x3569) (not (= x2330 x4721)) x2604 (not (= x5181 x1893)) (<= 0 x1446) (not (= x2330 x4078)) (= (x332 192) x1167) (<= 0 x3213) (>= 18446744073709551615 x2619) (>= 1461501637330902918203684832716283019655932542975 x846) x3461 (>= x3463 0) (= (> (x3736 (x2147 x2179)) 0) x3879) (>= x2320 0) (not (= x617 x2496)) (not (= x2330 x617)) (>= 1461501637330902918203684832716283019655932542975 x272) (not (> 2678788150 x242)) (>= x1911 0) (<= 0 x83) (>= 1461501637330902918203684832716283019655932542975 x4078) (= (x4945 (x2147 x2496)) x4485) (>= x3408 0) (= x1834 (not (= x3058 0))) (<= 0 x1712) (<= 0 x925) x4252 (= (x332 320) x1073) (>= x3547 0) (<= 0 x4076) (< x2766 256) (>= 1461501637330902918203684832716283019655932542975 x5325) (<= 0 x4413) (< 0 x2159) (>= 1461501637330902918203684832716283019655932542975 x289) (< 0 x4078) (>= 1461501637330902918203684832716283019655932542975 x965) (= x2604 (> (x3736 (x2147 x2496)) 0)) (not (= x1893 x4721)) (>= 1461501637330902918203684832716283019655932542975 x1355) (= (x4945 (x2147 x617)) x1446) (= x3483 (x4945 (x2147 x2330))) (not (= x1893 x4078)) (>= 1461501637330902918203684832716283019655932542975 x3408) (= (< 0 (x3736 (x2147 x617))) x3461) (>= x2766 0) x783 (not (= x617 x2179)) (<= x5445 18446744073709551615) (not (= x2496 x2179)) (>= x289 0) (not (= x4721 x5181)) (not (= x4078 x4287)) (<= x2468 1461501637330902918203684832716283019655932542975) (>= x434 0) x4663 (<= 0 x80) (= x1656 (x4945 (x2147 x4078))) (<= x2320 255) (= (x332 288) x3012) (<= 0 x1934) (<= x634 18446744073709551615) (<= 0 x2628) (= x5181 x1173) (>= x4833 0) (= x272 x617) (>= 1461501637330902918203684832716283019655932542975 x523) (<= 0 x1296) (> x5181 0) (not (= x2179 x4287)) (>= x1300 0) (>= 18446744073709551615 x1934) (>= 1461501637330902918203684832716283019655932542975 x473) (>= 255 x3741) (<= x4502 255) (>= 255 x316) (= x4091 (x3965 x2052)) (<= x4506 1461501637330902918203684832716283019655932542975) (>= x2264 0) (= (not (= x3251 0)) x3355) (<= 0 x4483) x3420 (not (= x4287 x617)) (<= x5087 255) (= x1300 x5313) (>= 1461501637330902918203684832716283019655932542975 x3002) (< 0 x4721) (> 256 x3251) (= x2420 (> (x3736 (x2147 x4721)) 0)) (>= x634 0) (>= x4962 0) (>= 18446744073709551615 x3547) (not (= x2179 x4721)) (= x999 (x332 352)) (> 256 x3389) (< 0 x617) (= (< 0 (x3736 (x2147 x4287))) x783) (= (not (= 0 x3463)) x4584) (= (x5377 x2052) x2766) (<= 0 x272) (not (= x4287 x5181)) (not (= x4287 x2496)) (<= 0 x4872) (>= x4278 0) (>= x3389 0) (<= 0 x4191) (< 0 x2496) (= (not (= x316 0)) x1221) (>= x1374 0) (> 256 x316) (<= 0 x2619) (<= 0 x3873) (= x1296 (x4945 (x2147 x4721))) (<= 0 x2468) (= (not (= 0 x3389)) x4296) (= x3420 (> (x3736 (x2147 x5181)) 0)) (not (= x617 x1893)) (>= x2286 0) (>= 1461501637330902918203684832716283019655932542975 x2179) (>= 255 x4833) (= (x332 160) x3733) (not (= x2179 x2330)) (>= x5319 0) (<= 0 x1173) (<= x1901 255) (>= 1461501637330902918203684832716283019655932542975 x4814) (<= x3058 255) (not (= x4078 x617)) (>= 1461501637330902918203684832716283019655932542975 x1369) (= x4663 (> (x3736 (x2147 x4078)) 0)) (= x3895 (< 0 (x3736 (x2147 x1893)))) (<= x3873 1461501637330902918203684832716283019655932542975) (not (= x2496 x2330)) (not (= x4078 x4721)) (>= 255 x951) (= (not (= x2766 0)) x1848) (<= x3634 1461501637330902918203684832716283019655932542975) (= (x4945 (x2147 x4287)) x3213) (<= x4898 1461501637330902918203684832716283019655932542975) (< x3463 256) (not (= x4287 x2330)) (<= 0 x3544) (>= 1461501637330902918203684832716283019655932542975 x1893) (not (= x4721 x617)) (>= x951 0) (>= 255 x1712) (>= 1461501637330902918203684832716283019655932542975 x925) (= 3583811254 x242) (= (x478 x2052) x3463) (>= 255 x80) (= x4502 (x5385 x2052)))) (and (=> (and x3851 (and (not (< x2477 2023533118)) (not (= x2477 2023533118)) (not (= x2477 2030502250)) (> 2362143243 x2477) (= 2245473101 x2477) (< x2477 2678788150) (not (= 2236579515 x2477)) (= x4836 (= x2406 x5419)) (= x2406 x439) (not (= x2477 2134560854)))) (and (=> (and (= true x4986) (not x4836)) x4001) (=> (and x4836 (and (= (= x416 x4021) x805) (= (x1025 1461501637330902918203684832716283019655932542975 x416) x4021) (= x4731 x4178))) (and (=> (and x805 (and (= (x1025 1461501637330902918203684832716283019655932542975 x2087) x2935) (= (= x2935 x2087) x3959))) (and (=> (and (not x3959) (= x4986 true)) x4001) (=> (and x3959 (and (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x1258) (= x3136 (= 0 x1258)) (= x4069 x5179) (= x3581 x726))) (and (=> (and (not x3136) (= x493 (= x5179 0))) (and (=> x493 x1172) (=> (and (and (<= x1343 255) (<= x361 255) (= x35 (x4113 x1831)) (> 256 x35) (= x5007 x5306) (= x1791 x3836) (= (x1866 x1831) x1343) (= (= x5443 0) x4114) (<= 0 x361) (<= x3343 255) (= x5352 (= x614 0)) (> 256 x5443) (> 256 x614) (>= x5443 0) (> 256 x361) (= x361 (x5377 x1831)) (< x1343 256) (= x4805 (not x1654)) (= x4392 (not x5234)) (= (= x1908 0) x1654) (= x2346 x1149) (= x3249 (x4715 128)) (= x1831 (x2760 (x2147 x2406) (x3059 168) 0)) (= x5234 (= 0 x4695)) (>= x3343 0) (>= x614 0) (= x3883 x4392) (>= x1908 0) (= x2317 (not x5263)) (< x1908 256) (= (x458 x1831) x614) (>= 255 x1908) (= (x478 x1831) x4695) (= x3343 (x5385 x1831)) (= (not x4114) x1136) (<= 0 x1343) (= x5306 (not x1164)) (= (not x4441) x2346) (= (not x5352) x4903) (<= x614 255) (= (= x1343 0) x4736) (= x2044 (< 0 x3249)) (>= 255 x35) (< x3343 256) (> 256 x4695) (>= x4695 0) (<= x4695 255) (= x2317 x4119) (<= 0 x35) (= (x3965 x1831) x1908) (= x1136 x683) (= (not x4736) x3836) (= x4212 x4805) (= x1164 (= x35 0)) (<= x5443 255) (= x4441 (= 0 x3343)) (= x5263 (= x361 0)) (= x4903 x3422) (= (x450 x1831) x5443)) (not x493)) (and (=> (and x2044 (and (= x1964 (x4715 160)) (= x5199 (= x1964 0)))) (and (=> (and (and (or (and (not x1956) (and (= (x3592 x4086) x2242) (= (x3589 (+ 1 x2242)) x3083) (= x4086 (x2760 (x2147 x4099) (x3059 161) 0)) (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x1774) (= x4099 (x1025 1461501637330902918203684832716283019655932542975 x1015)) (= x4776 x4086))) (and x1956 (= x4776 (x2147 x3430)))) (and (= (x3589 (+ x3929 24044834009420335638544845215851342251227478490780828673611325350056707489792)) x2914) (= (x2412 416) x3996) (<= x3406 255) (= x1956 (< 0 x3406)) (= (x2760 (x2147 x2406) (x3059 160) 0) x1988) (= (x1025 26959946667150639794667015087019630673637144422540572481103610249215 x3996) x3929) (= x828 (x2760 (x2147 x3430) x1988 0)) (= x3406 (x1876 x828)) (> 256 x3406) (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x3430) (<= 0 x3406))) x5199) x4261) (=> (not x5199) x1172))) (=> (not x2044) x1172))))) (=> x3136 x1172))))) (=> (and (= true x4986) (not x805)) x4001))))) (=> (and (not x3851) (= true x4986)) x4001)))))
(assert (x5131 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4766))
(assert (x5093 x1321))
(assert (x5093 x5182))
(assert (= (=> (= x5281 (> x5284 0)) (and (=> (and (and (= x3694 (< x5024 x2771)) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5284)) x5024)) x5281) (and (=> x3694 x4233) (=> (and (not x3694) (and (= (x3589 (+ x5284 x2771)) x2091) (= (> x5284 x527) x5197))) (and (=> (and (and (= x4568 (x5305 x2408)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4568) (= (x2760 (x2147 x2406) (x3059 165) 0) x2408) (>= x4568 0) (= (= (ite x2852 1 0) 0) x5187) (= (x4761 (- x527 x5284)) x482) (= (< 115792089237316195423570985008687907853269984665640564039457 x5284) x2852)) (not x5197)) (and (=> (not x5187) x4233) (=> (and (and (= x4271 (x1025 x4686 x2225)) (= x4686 (ite (not x71) 1 0)) (= x5064 (= x4271 0)) (= x2225 (ite (< x1530 1000000000000000000) 1 0)) (= x1530 (x3658 115792089237316195423570985008687907853269984665640564039457584007913129639935 x712)) (= x71 (= 0 x712)) (= x712 (x1741 (* 1000000000000000000 x5284)))) x5187) (and (=> (not x5064) x4233) (=> (and (and (= x731 (> x4568 0)) (= (x1741 (* x712 1000000000000000000)) x4971)) x5064) (and (=> (not x731) x2525) (=> (and (and (>= x1448 0) (= x3394 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x945))) (= x288 (< x3394 x1448)) (= x1448 (x4011 x3065)) (= x945 (x3658 x4857 1000000000000000000)) (= x3065 (x4345 x601 3)) (<= x1448 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x3658 x4971 x4568) x4857)) x731) (and (=> x288 x4233) (=> (and (and (= x2607 (x3589 (+ x945 x1448))) (= x482 x2331) (= x3887 x2091)) (not x288)) x4436))))))))) (=> x5197 x4233))))) (=> (and (and (= x3887 x2771) (= x527 x2331)) (not x5281)) x4436))) x4299))
(assert (x5093 x4924))
(assert (x5093 x3040))
(assert (= x2296 (and (not x2785) x228)))
(assert (x5093 x3308))
(assert (x5093 x3744))
(assert (x5093 x4338))
(assert (x5093 x1976))
(assert (x4437 x2718))
(assert (= (or x2629 x5399 x4698) x1386))
(assert (x1311 x3871))
(assert (x3294 x4686 x2225))
(assert (x5093 x5241))
(assert (x5093 x2538))
(assert (= x4648 (or x5070 x3708)))
(assert (x5093 x2275))
(assert (= x2487 (and x4236 x2482)))
(assert (= (and x2553 x1611) x4967))
(assert (= (=> (and (or x764 (not x764)) (= (= x2398 0) x764)) x3737) x1941))
(assert (= (and (not x1022) x3986) x4057))
(assert (x5093 x3539))
(assert (= (and x1991 (not x5001)) x1730))
(assert (= x3871 (x3311 (x2147 x3871))))
(assert (= (and (=> (and (and (= 1 x4017) (= x1558 x1318)) (not x1874)) x4351) (=> (and (and (= x4855 x2034) (= x551 x1558) (= x3720 x2406)) x1874) x3223)) x1299))
(assert (x5093 x5435))
(assert (x5093 x4991))
(assert (x5093 x3364))
(assert (= (and x1690 (not x4067)) x4912))
(assert (= (+ 1 (x3311 x5448)) (x3311 (x4345 x5448 1))))
(assert (= x1912 (or x4864 x4679)))
(assert (x5093 x3188))
(assert (= x1090 (or x5144 x3644)))
(assert (= x1159 x2525))
(assert (= (and x3851 x4464) x618))
(assert (x2366 x520 x340 x520 x1194))
(assert (x1311 x5098))
(assert (x5093 x2769))
(assert (x5093 x5332))
(assert (= x1670 (=> (and (= x353 x480) (= x32 x3504)) x325)))
(assert (x5093 x1332))
(assert (x5093 x5441))
(assert (= (and x3629 (not x5410)) x4598))
(assert (=> (>= 10000 x2940) (= (x3059 x2940) (x2147 x2940))))
(assert (x5093 x4220))
(assert (= (=> (and (= x2603 x2542) (= 0 x5010)) x1637) x4492))
(assert (x5093 x592))
(assert (x1311 x4771))
(assert (x1311 x1222))
(assert (x4437 x1875))
(assert (=> (<= x1048 10000) (= (x2147 x1048) (x3059 x1048))))
(assert (= (=> (and (= 0 x4245) (= x2859 x4700)) x2821) x5089))
(assert (= x292 (and (not x1747) x1973)))
(assert (=> (>= 10000 x4408) (= (x2147 x4408) (x3059 x4408))))
(assert (= (and x3967 x4590) x3576))
(assert (x5093 x2988))
(assert (= (x3311 (x2147 x3384)) x3384))
(assert (= x4246 (and x5398 x3043)))
(assert (x5093 x4334))
(assert (= x2445 (and x950 x4)))
(assert (= x4746 (and x4661 x1921)))
(assert (= (and (not x4726) x4289) x2646))
(assert (x5093 x2508))
(assert (x5093 x2053))
(assert (= (=> (= x2934 x2675) x2989) x5052))
(assert (x5093 x169))
(assert (= (and x5025 x5307) x5368))
(assert (x348 x5403))
(assert (x5093 x4578))
(assert (= (and x5088 x606) x3514))
(assert (= x2011 (and x468 x1381)))
(assert (x5093 x3171))
(assert (= (=> (= (= x3338 x211) x4922) (and (=> (and (= x2439 x1507) x4922) x4788) (=> (and (= (> x3338 0) x5001) (not x4922)) (and (=> (and x5001 (and (> 1461501637330902918203684832716283019655932542976 x3094) (>= x1081 0) (= (x3589 (+ x1507 96)) x75) (<= x1081 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x4884 1461501637330902918203684832716283019655932542976) (= x4884 (x820 x3039)) (= x221 (= 0 x1081)) (>= x3094 0) (= x3039 (x4345 x1357 1)) (= (x84 x2686) x1081) (= (x2760 (x2147 x4357) x4855 0) x1357) (<= 0 x4884) (= (x4345 x3039 1) x2686) (= x3094 (x3565 x1357)) (<= x3094 1461501637330902918203684832716283019655932542975) (<= x4884 1461501637330902918203684832716283019655932542975))) (and (=> (and (not x221) (and (or (and (= x5348 (x4345 x4855 1)) x2516) (and (and (= (x4345 x346 1) x4409) (= x346 (x2760 (x2147 x3094) x4855 0))) (not x2516))) (= x2516 (= 0 x3094)))) x4547) (=> x221 x1729))) (=> (and (not x5001) (= x1507 x3704)) x1849))))) x3798))
(assert (x5093 x2939))
(assert (= (or x4985 x3902 x4032 x1705 x2828 x4074) x5144))
(assert (x1311 x856))
(assert (x5093 x4438))
(assert (= x1571 (and (not x1498) x2449)))
(assert (= x3398 (and x2920 (not x1977))))
(assert (= (and x3653 x776) x942))
(assert (= (x3311 (x2147 x2802)) x2802))
(assert (x5093 x2136))
(assert (= (x3311 (x2147 x2025)) x2025))
(assert (x5093 x3406))
(assert (x3294 x226 x2430))
(assert (= (x3059 1038142104) (x2147 1038142104)))
(assert (= (and x1397 x1231) x4419))
(assert (= x928 (and x2685 (not x4738))))
(assert (= (and x4728 x904) x3118))
(assert (= x2805 (and x935 (not x1819))))
(assert (x5093 x2997))
(assert (x348 x4766))
(assert (= (and x1728 (not x5151)) x4102))
(assert (x3331 x5179))
(assert (x5093 x4485))
(assert (= x5048 (or x3752 x4691)))
(assert (= (x2147 1461501637330902918203684832716283019655932542976) (x3059 1461501637330902918203684832716283019655932542976)))
(assert (x5093 x4138))
(assert (= (+ (x3311 x2810) 2) (x3311 (x4345 x2810 2))))
(assert (x5093 x3165))
(assert (= (+ 1 (x3311 x5090)) (x3311 (x4345 x5090 1))))
(assert (x5093 x3295))
(assert (x5093 x1314))
(assert (= x3013 (x3311 (x2147 x3013))))
(assert (x1311 x5181))
(assert (= (and (not x1102) x2764) x3361))
(assert (= (and (=> (and x2032 (and (and (<= 0 x3794) (> 1461501637330902918203684832716283019655932542976 x3794) (= x3794 (x2234 x4226)) (= (x2760 (x2147 x4588) x1711 0) x4992) (= x5205 (ite (> x4748 1) (not (= x3794 0)) (< 1 x4748))) (>= 1461501637330902918203684832716283019655932542975 x3794) (= x4226 (x4345 x4992 1))) (or (and (= x5349 x5205) (not x5205)) (and (and (= x5349 (not x4696)) (<= x2104 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2104) (= (x4345 x709 2) x5364) (= (x2760 (x2147 x3794) x1711 0) x709) (= (x4077 x5364) x2104) (= (> x266 x2104) x4696)) x5205)))) x3560) (=> (and (and (= x4265 x4588) (= 0 x4597)) (not x2032)) x3067)) x2171))
(assert (= x1047 (and (not x2214) x4711)))
(assert (x5093 x4148))
(assert (= (and x2609 x1483) x396))
(assert (= (and (not x118) x1480) x147))
(assert (= x3442 (=> (and (= x2904 0) (= x3777 x2249)) x743)))
(assert (= x3997 (and x186 x4694)))
(assert (= (and x576 x1031) x466))
(assert (x5093 x263))
(assert (= (or x5135 x1830) x1310))
(assert (= (x3311 (x2147 x3168)) x3168))
(assert (x5093 x2588))
(assert (x4437 x154))
(assert (x5093 x2790))
(assert (x5093 x3048))
(assert (x5093 x2244))
(assert (= x1491 (and (not x121) x3507)))
(assert (x5093 x4570))
(assert (= x5097 (and x4598 (not x859))))
(assert (= x886 (and x1393 x2533)))
(assert (x4437 x2430))
(assert (x5093 x2074))
(assert (= x3958 (or x2742 x1068)))
(assert (= (and x4664 (not x3729)) x2449))
(assert (x3331 (- x520 x1194)))
(assert (= x875 (and x1619 (not x5281))))
(assert (x1311 x2406))
(assert (= (and x5242 x3875) x1856))
(assert (= (and (not x141) x2176) x5406))
(assert (= (and x4479 x4959) x3195))
(assert (= x1100 (and x4348 x960)))
(assert (= 1856199391 (x3311 (x3059 1856199391))))
(assert (= x4953 (or x5227 x4746 x756 x2670 x3429 x1416)))
(assert (x1405 x2087))
(assert (x5093 x945))
(assert (= (=> (and (= x353 x1061) (= x1232 x32)) x325) x3933))
(assert (= x5338 (and x3705 (not x1455))))
(assert (=> (<= x699 10000) (= (x3059 x699) (x2147 x699))))
(assert (x5093 x799))
(assert (x4437 x416))
(assert (x5093 x4895))
(assert (x348 x4857))
(assert (= (and (not x1924) x318) x4622))
(assert (x5093 x501))
(assert (= (and x5283 (not x41)) x3785))
(assert (= (and x4994 x1129) x4713))
(assert (x5093 x4145))
(assert (= x4379 (and x2360 (not x3990))))
(assert (= (x2147 1865448899) (x3059 1865448899)))
(assert (x5093 x4136))
(assert (x5093 x2473))
(assert (= (and x1220 x4809) x2092))
(assert (x5093 x5228))
(assert (= (or x3452 x1092) x1950))
(assert (=> (>= 10000 x1558) (= (x2147 x1558) (x3059 x1558))))
(assert (= (and (not x1609) x4399) x299))
(assert (= x4845 (=> (and (and (= x3341 (x4345 x2857 1)) (<= 0 x2858) (= x1006 (x4345 x526 2)) (= x3193 (x2760 (x2147 x2682) x1711 0)) (<= x2858 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2589 x1006) x2873) (= (x2760 (x2147 x2406) (x3059 157) 0) x1711) (= (x2760 (x2147 x2682) x1326 0) x2857) (= (x2760 (x2147 x2406) (x3059 159) 0) x1326) (= (x2760 (x2147 x2406) (x3059 156) 0) x5090) (= x1316 (x1174 x3341)) (= (< x4397 x1316) x2975) (<= 0 x1316) (<= 0 x2231) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2873) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2231) (<= x4397 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4345 x3193 2) x3669) (<= 0 x2873) (<= 0 x4397) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1316) (= x2231 (x4905 x2857)) (= (x2680 x3669) x2858) (= x526 (x2760 (x2147 x2682) x5090 0))) (or (and (= x266 x1316) x2975) (and (not x2975) (= x266 0)))) x1936)))
(assert (= x3469 (and x759 (not x1423))))
(assert (x3331 x847))
(assert (= (and (not x3690) x2946) x3176))
(assert (= x4003 (and (not x805) x1771)))
(assert (x5093 x1382))
(assert (x5093 x2933))
(assert (x5093 x3511))
(assert (=> (<= x1720 10000) (= (x2147 x1720) (x3059 x1720))))
(assert (=> (>= 10000 x4885) (= (x2147 x4885) (x3059 x4885))))
(assert (x885 x520 x340 x2299 x1368))
(assert (x5093 x4848))
(assert (x5093 x3216))
(assert (x5093 x73))
(assert (and (=> (> 32 0) (= (+ (* (x3658 x4230 32) 32) (x570 x4230 32)) x4230)) (x355 x4230 32) (x3825 x4230 32) (x4162 x4230 32)))
(assert (= x3991 (and x4044 x1371)))
(assert (= (=> (and (= x652 x1888) (= 0 x455)) x1246) x2417))
(assert (x5093 x2388))
(assert (x1311 x4632))
(assert (= x2940 (x3311 (x2147 x2940))))
(assert (= x2738 (x3311 (x2147 x2738))))
(assert (= x3966 (and x3320 (not x3649))))
(assert (=> (>= 10000 x3178) (= (x3059 x3178) (x2147 x3178))))
(assert (= x2615 (and (not x1535) x1526)))
(assert (= (=> (and (= x3124 x1553) (= x5297 x1731)) x1121) x1271))
(assert (x5093 x52))
(assert (= x5186 (and x3 (not x4031))))
(assert (x5093 x266))
(assert (= x3963 (and x759 x1423)))
(assert (x5093 x152))
(assert (= (x3311 (x2147 x2414)) x2414))
(assert (x5093 x4732))
(assert (x5093 x2595))
(assert (x5093 x5125))
(assert (= (x3311 (x4345 x3859 1)) (+ (x3311 x3859) 1)))
(assert (= x751 (or x4684 (and x318 x1924) x2947 (and x2895 x2624) x231)))
(assert (x5093 x2690))
(assert (= (x3311 (x4345 x709 2)) (+ 2 (x3311 x709))))
(assert (= x1093 (and (not x4350) x1406)))
(assert (x5093 x1184))
(assert (= (and x1658 x1714) x117))
(assert (= (x3311 (x4345 x3246 2)) (+ (x3311 x3246) 2)))
(assert (x5093 x2666))
(assert (= (and x3716 x1812) x1211))
(assert (x5093 x1497))
(assert (x348 x5393))
(assert (x5093 x126))
(assert (x479 32))
(assert (x5093 x3811))
(assert (= x843 (and x4378 (not x4127))))
(assert (= (and x4171 x302) x1177))
(assert (= x729 (=> (= x3148 (> x3528 x519)) (and (=> (and (not x3148) (and (= x1583 x4317) (= x5284 x4459))) x4299) (=> x3148 x4233)))))
(assert (x5093 x3631))
(assert (= x3629 (or x4555 x566)))
(assert (=> (>= 10000 x3802) (= (x2147 x3802) (x3059 x3802))))
(assert (= (+ 1 (x3311 x2270)) (x3311 (x4345 x2270 1))))
(assert (x5093 x4872))
(assert (x5093 x3419))
(assert (= (x3059 988262939) (x2147 988262939)))
(assert (x5093 x515))
(assert (= x1314 (x3311 (x2147 x1314))))
(assert (x5093 x2577))
(assert (= x1418 (=> (and (= (x2760 (x2147 x4357) x4855 0) x825) (= x1134 (x4345 x825 1)) (= x75 x3704) (= (x4345 x1134 1) x1879)) x1849)))
(assert (= x4141 (and x796 x4936)))
(assert (x5093 x2483))
(assert (x5093 x434))
(assert (= x3764 (and x2290 x5357)))
(assert (= (or x377 x703 x5369 x2089) x762))
(assert (x5093 x5312))
(assert (= (x3059 2023533118) (x2147 2023533118)))
(assert (= x1158 (and x1500 (not x5154))))
(assert (x5093 x3892))
(assert (= (x3311 (x4345 x3889 1)) (+ 1 (x3311 x3889))))
(assert (x5093 x5221))
(assert (= x3570 (=> (and (= x2391 0) (= x4957 x528)) x5185)))
(assert (x5093 x2242))
(assert (x5093 x1523))
(assert (x5093 x2657))
(assert (= x757 (and x746 x2583)))
(assert (x5093 x365))
(assert (x5093 x182))
(assert (= x1561 (or x120 x3681 x1230 x2930)))
(assert (x5093 x1023))
(assert (x5093 x2357))
(assert (= x2989 (=> (= x2439 x2675) x4788)))
(assert (x5093 x3083))
(assert (= (or x1672 x4927) x2135))
(assert (x1311 x1720))
(assert (x5093 x1620))
(assert (=> (>= 10000 x5126) (= (x2147 x5126) (x3059 x5126))))
(assert (= x9 (or x1521 x1412)))
(assert (= (x3311 (x4345 x1134 1)) (+ 1 (x3311 x1134))))
(assert (= (and x2329 x2820) x2527))
(assert (= (=> (and (= x973 x1888) (= x1725 0)) x5335) x1070))
(assert (= x4954 (and x2772 x1219)))
(assert (= x3910 (or x3147 x2429)))
(assert (x1311 x4428))
(assert (= (and x5326 x418) x543))
(assert (= (=> (and (or x3974 (not x3974)) (= x3974 (= x919 0))) x4158) x183))
(assert (x5093 x3179))
(assert (= (and (not x2152) x260) x2612))
(assert (x5093 x3061))
(assert (x5093 x2335))
(assert (= (and x5293 x396) x1489))
(assert (x5093 x3034))
(assert (x1311 x3094))
(assert (x5093 x2320))
(assert (x5093 x2278))
(assert (x1311 x3874))
(assert (= (x3311 (x2147 x1946)) x1946))
(assert (= x1385 (and (not x3876) x5215)))
(assert (x5093 x5179))
(assert (x5093 x3677))
(assert (= x2644 (and x779 x109)))
(assert (= (x2147 2030502250) (x3059 2030502250)))
(assert (x5093 x3336))
(assert (= x2932 (or x424 x600)))
(assert (x5093 x5438))
(assert (= (and x5020 x1675) x630))
(assert (= (and x4812 x4141) x4281))
(assert (= x330 (and (not x565) x495)))
(assert (= x4339 (and (not x2364) x1110)))
(assert (x5093 x241))
(assert (x5093 x4076))
(assert (= x4100 (or x2928 x604)))
(assert (x5093 x1441))
(assert (x5093 x5298))
(assert (= (and x3841 (not x202)) x5))
(assert (x5093 x5403))
(assert (x3513 x340 x520))
(assert (= (and x2658 x3832) x4823))
(assert (= (x3311 (x4345 x2090 1)) (+ 1 (x3311 x2090))))
(assert (x5093 x2169))
(assert (x5093 x4957))
(assert (x5093 x4755))
(assert (x3294 x697 x728))
(assert (= (or x948 x4256) x4353))
(assert (x5093 x212))
(assert (=> (>= 10000 x2956) (= (x3059 x2956) (x2147 x2956))))
(assert (x5093 x2600))
(assert (= (+ (x3311 x888) 1) (x3311 (x4345 x888 1))))
(assert (x885 x520 x340 x1194 x520))
(assert (and (x4259 1000000000000000000 x5284) (x887 1000000000000000000 x5284) (x4075 1000000000000000000 x5284) (and (= (x4860 1000000000000000000 (- x5284 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x5284 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x5284) (- (* x5284 1000000000000000000) (* x5284 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x5284 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x5284 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x5284 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x5284) (* x5284 1000000000000000000)) (x2358 1000000000000000000 x5284) (x244 1000000000000000000 x5284)))
(assert (x1311 x2769))
(assert (x5093 x1169))
(assert (x5093 x4990))
(assert (= x3395 (and x2651 x3837)))
(assert (= (and (not x3329) x1840) x1799))
(assert (= x2821 (=> (and (= x322 x4700) (= x4245 x4978)) x503)))
(assert (= (and x3918 (not x1244)) x4002))
(assert (x5093 x455))
(assert (x5093 x2676))
(assert (x5093 x2075))
(assert (= (x3059 4294967296) (x2147 4294967296)))
(assert (x5093 x3002))
(assert (= x1913 (and x1109 x3209)))
(assert (= (or (and x598 x1422) x5229 x2011 (and x3982 x4972) x2722) x2695))
(assert (x5093 x174))
(assert (= (and (not x5425) x4004) x2650))
(assert (= x4997 (=> (and (= x1963 x2865) (= x861 x3625)) x1696)))
(assert (= x2568 (and x42 x1379)))
(assert (x5093 x2530))
(assert (= (or x2665 (and (not x380) x1788)) x950))
(assert (x5093 x4222))
(assert (x3331 (- x520 x1368)))
(assert (x1405 x4731))
(assert (x5093 x327))
(assert (=> (<= x4778 10000) (= (x2147 x4778) (x3059 x4778))))
(assert (x5093 x4946))
(assert (=> (>= 10000 x2025) (= (x2147 x2025) (x3059 x2025))))
(assert (x5093 x2479))
(assert (= (x3311 (x2147 x3233)) x3233))
(assert (x5093 x3814))
(assert (x5093 x3383))
(assert (x5093 x3314))
(assert (x4437 x595))
(assert (x5131 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4522))
(assert (x5093 x5207))
(assert (= x2682 (x3311 (x2147 x2682))))
(assert (= (and x3913 x4422) x990))
(assert (= (=> (and (= x480 0) (= x1229 x3504)) x1670) x2621))
(assert (= x2301 (=> (and (= x3631 0) (= x2933 x654)) x2156)))
(assert (x5093 x1479))
(assert (= x1451 (or x3417 x1245)))
(assert (x5093 x2875))
(assert (= x1034 (and x1487 x1657)))
(assert (= (x3311 (x3059 18446744073709551615)) 18446744073709551615))
(assert (= x2662 (and x1012 x3051)))
(assert (= (x3311 (x4345 x603 1)) (+ (x3311 x603) 1)))
(assert (x5093 x2217))
(assert (=> (>= 10000 x4632) (= (x2147 x4632) (x3059 x4632))))
(assert (= (and x3910 x86) x3155))
(assert (x5093 x1446))
(assert (= 2236579515 (x3311 (x3059 2236579515))))
(assert (= (x3311 (x2147 x2125)) x2125))
(assert (x5093 x5295))
(assert (x5093 x4656))
(assert (x5093 x3939))
(assert (= (or x3368 x3445 x1203 x4179) x3580))
(assert (= (and x1365 (not x4910)) x581))
(assert (x348 x4645))
(assert (= (and (not x1010) x2924) x339))
(assert (x5093 x4632))
(assert (= x1996 (and (not x4537) x4622)))
(assert (= (and x4073 x3071) x2947))
(assert (x5093 x2145))
(assert (= (and (not x2762) x4170) x2307))
(assert (= (and x5247 (not x3981)) x1353))
(assert (x5093 x1073))
(assert (= (x3059 1466279372) (x2147 1466279372)))
(assert (x3331 x340))
(assert (= x3290 (and x4301 (not x694))))
(assert (x5093 x1626))
(assert (= (and x1126 x4478) x2693))
(assert (= (x3311 (x2147 x2178)) x2178))
(assert (x1311 x3131))
(assert (= (and x605 x2927) x3760))
(assert (x5093 x3110))
(assert (= (and (not x5197) x5110) x5065))
(assert (x1311 x3802))
(assert (x1311 x1440))
(assert (= x2757 x4376))
(assert (x5093 x2316))
(assert (= x3890 (and x3982 (not x4972))))
(assert (x5093 x301))
(assert (x5093 x1652))
(assert (= x2137 (and x5283 x41)))
(assert (=> (<= x4884 10000) (= (x3059 x4884) (x2147 x4884))))
(assert (x5093 x4306))
(assert (x5093 x3704))
(assert (= (and x326 (not x5421)) x4004))
(assert (= x222 (or x4878 x721)))
(assert (x348 x4568))
(assert (x5093 x1115))
(assert (x5093 x5254))
(assert (x5131 x3330 x70))
(assert (= x425 (and (not x3468) x5133)))
(assert (x5093 x5353))
(assert (= (and (not x1587) x3414) x3320))
(assert (= x743 (=> (and (= x919 x2904) (= x3777 x2508)) x183)))
(assert (x5093 x1861))
(assert (= (or x3640 x4639) x3072))
(assert (= x3829 (and x2054 x1832)))
(assert (= x2136 (x3311 (x2147 x2136))))
(assert (x5093 x3792))
(assert (x5093 x994))
(assert (x5093 x5027))
(assert (x5093 x3955))
(assert (= (x3059 989455977) (x2147 989455977)))
(assert (= (or x4737 x4744) x4703))
(assert (=> (<= x3827 10000) (= (x3059 x3827) (x2147 x3827))))
(assert (= x4615 (and x1956 x1473)))
(assert (= x189 (and x5190 (not x4358))))
(assert (x5093 x26))
(assert (x5093 x1753))
(assert (x1311 x1497))
(assert (= (x3311 (x4345 x3413 1)) (+ 1 (x3311 x3413))))
(assert (= x4952 (and x1102 x2764)))
(assert (x5093 x3120))
(assert (x5093 x584))
(assert (x5093 x1716))
(assert (= x2535 (and (not x796) x4936)))
(assert (x5093 x177))
(assert (x5093 x2551))
(assert (and (=> (> 32 0) (= (+ (* (x3658 x3328 32) 32) (x570 x3328 32)) x3328)) (x355 x3328 32) (x3825 x3328 32) (x4162 x3328 32)))
(assert (x5093 x3900))
(assert (x5093 x1965))
(assert (x5093 x5023))
(assert (= (x2147 10742207464693106059581744854972325794081737850190833080250671788038469713920) (x3059 10742207464693106059581744854972325794081737850190833080250671788038469713920)))
(assert (x5093 x1307))
(assert (= (and x3157 (not x3920)) x2211))
(assert (x5093 x1484))
(assert (= (and x2405 (not x880)) x673))
(assert (x1311 x2496))
(assert (= (and x2210 x3006) x1216))
(assert (x5131 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2299))
(assert (x5093 x4132))
(assert (x5093 x4597))
(assert (x5093 x3953))
(assert (= x1464 (and x2092 (not x786))))
(assert (= x1358 (and x2911 x4062)))
(assert (= (x3311 (x2147 x699)) x699))
(assert (x5093 x1653))
(assert (x5093 x286))
(assert (= (and x3425 x2746) x1268))
(assert (= x767 (and x5088 (not x606))))
(assert (= (and x1665 x4329) x2049))
(assert (= (and (not x86) x3910) x668))
(assert (x5093 x3432))
(assert (= (and (not x217) x3402) x2294))
(assert (= (=> (and (= x5171 x5435) (= x5294 x5354) (= x2075 x3382) (= x476 x3744) (= x3267 x43)) x1676) x2613))
(assert (= (x2147 2678788150) (x3059 2678788150)))
(assert (x3331 (- x340 x520)))
(assert (= (x3311 (x2147 x1600)) x1600))
(assert (x5093 x2668))
(assert (= (+ 2 (x3311 x3867)) (x3311 (x4345 x3867 2))))
(assert (= x2539 x1193))
(assert (x5093 x3481))
(assert (x4437 x1015))
(assert (= (and x3797 x3966) x3532))
(assert (x5093 x1402))
(assert (x5093 x1350))
(assert (x4437 x4628))
(assert (= (=> (and (= (= 0 x3124) x5188) (or (not x5188) x5188)) x484) x1121))
(assert (x5093 x1064))
(assert (x5093 x3556))
(assert (= x4569 (and x3959 x1548)))
(assert (= x819 (and (not x4943) x1867)))
(assert (x1311 x617))
(assert (= (and x1561 x780) x3262))
(assert (= (+ 1 (x3311 x2224)) (x3311 (x4345 x2224 1))))
(assert (x5093 x550))
(assert (x3331 x3440))
(assert (= x1313 (and x2717 (not x200))))
(assert (x5131 x5393 x70))
(assert (x5093 x2014))
(assert (x5093 x4286))
(assert (x5093 x2319))
(assert (= (x3311 (x2147 x3957)) x3957))
(assert (= (and x2844 x94) x2637))
(assert (x5093 x4519))
(assert (= (and x141 x2176) x1607))
(assert (x5093 x475))
(assert (x5093 x2401))
(assert (x5093 x1579))
(assert (= (and x841 (not x485)) x4879))
(assert (= (x3311 (x4345 x1117 2)) (+ 2 (x3311 x1117))))
(assert (x5093 x154))
(assert (x5093 x4705))
(assert (x5093 x131))
(assert (= (x3311 (x3059 2030502250)) 2030502250))
(assert (= (and x2137 x2279) x1437))
(assert (x5093 x596))
(assert (x5093 x2043))
(assert (x5093 x3749))
(assert (x5093 x5014))
(assert (x5093 x4486))
(assert (x5093 x4518))
(assert (x5093 x22))
(assert (= x260 (and (not x1243) x4008)))
(assert (x5093 x939))
(assert (x5093 x915))
(assert (x348 x1402))
(assert (= (x3311 (x2147 x2406)) x2406))
(assert (x5093 x2819))
(assert (x5093 x470))
(assert (x1311 x4721))
(assert (x5093 x1305))
(assert (= (and x4868 (not x810)) x3474))
(assert (= (and x2644 x4861) x4760))
(assert (and (=> (> 32 0) (= (+ (* (x3658 x154 32) 32) (x570 x154 32)) x154)) (x355 x154 32) (x3825 x154 32) (x4162 x154 32)))
(assert (=> (>= 10000 x2136) (= (x2147 x2136) (x3059 x2136))))
(assert (=> (>= 10000 x2634) (= (x2147 x2634) (x3059 x2634))))
(assert (= (or x5327 x1165) x1949))
(assert (= x4329 (or x4177 x3073 x56 x2093)))
(assert (x5093 x870))
(assert (x2366 x520 x1194 x520 x340))
(assert (= (and x4224 x3651) x2407))
(assert (and (x1458 x1055 1000000000000000000) (x1175 x1055 1000000000000000000) (=> (and (> x1055 0) (< 0 1000000000000000000)) (and (> (* (x3658 x1055 1000000000000000000) 1000000000000000000) (- x1055 1000000000000000000)) (<= (* 1000000000000000000 (x3658 x1055 1000000000000000000)) x1055))) (x5235 x1055 1000000000000000000) (x2792 x1055 1000000000000000000)))
(assert (= x4565 (or x4098 x3070)))
(assert (x5093 x2684))
(assert (= x95 (and x1907 (not x5265))))
(assert (x5093 x5428))
(assert (= (and x3340 x5123) x1375))
(assert (and (x4259 1000000000000000000 x3108) (x887 1000000000000000000 x3108) (x4075 1000000000000000000 x3108) (and (= (x4860 1000000000000000000 (- x3108 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x3108 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3108) (- (* x3108 1000000000000000000) (* x3108 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3108 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x3108 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3108 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x3108) (* x3108 1000000000000000000)) (x2358 1000000000000000000 x3108) (x244 1000000000000000000 x3108)))
(assert (x5093 x5084))
(assert (x5093 x4685))
(assert (x5093 x428))
(assert (x1311 x699))
(assert (x5093 x837))
(assert (x5093 x27))
(assert (= (and x1166 x920) x2458))
(assert (= x3105 (and x3915 x968)))
(assert (=> (<= x2228 10000) (= (x3059 x2228) (x2147 x2228))))
(assert (x5093 x2758))
(assert (= (=> (and (= x854 x2398) (= x3448 x1130)) x1941) x2372))
(assert (= x5056 (and x2307 (not x977))))
(assert (x4437 x3537))
(assert (x5093 x4169))
(assert (x5093 x5350))
(assert (= x2160 (and x3715 (not x624))))
(assert (= 3842108676 (x3311 (x3059 3842108676))))
(assert (= (and x995 x1511) x2510))
(assert (= (x3311 (x3059 72570022874062638528011751457397263716769196454539065078543251854057308946432)) 72570022874062638528011751457397263716769196454539065078543251854057308946432))
(assert (= (x3311 (x4345 x601 3)) (+ 3 (x3311 x601))))
(assert (x5093 x5238))
(assert (x3331 (- x1194 x2299)))
(assert (= (and x2814 (not x3227)) x3051))
(assert (x5093 x4159))
(assert (x5093 x4262))
(assert (x1311 x537))
(assert (= x1793 (and x2711 x105)))
(assert (= (or x3843 x1715) x667))
(assert (x5093 x5111))
(assert (= (and x1819 x935) x3927))
(assert (x5093 x804))
(assert (x5093 x5017))
(assert (x5093 x1296))
(assert (x5093 x2628))
(assert (= (and x493 x3315) x1133))
(assert (x5093 x1355))
(assert (= x2493 (and x4358 x5190)))
(assert (= (or x2015 x3605) x727))
(assert (x5093 x1080))
(assert (= (and x3838 x221) x2887))
(assert (= (x3311 (x3059 20853193852723734048814770637610870652489083209607696777694672748161462697984)) 20853193852723734048814770637610870652489083209607696777694672748161462697984))
(assert (x5093 x1656))
(assert (x5093 x4604))
(assert (= x2291 x1172))
(assert (= (or x2805 x4257) x841))
(assert (x5093 x313))
(assert (x5093 x3239))
(assert (x4783 x4607))
(assert (x5093 x4539))
(assert (x5093 x551))
(assert (x5093 x3421))
(assert (x4437 x728))
(assert (x5093 x3702))
(assert (= x3222 (=> (and (or (and (not x4694) (and (= x4694 x2698) (= x4357 x2682))) (and x4694 (and (>= 1461501637330902918203684832716283019655932542975 x1744) (< x1744 1461501637330902918203684832716283019655932542976) (>= x1744 0) (= x1894 (= x1744 0)) (= x1744 x2682) (= (x3683 x1428) x1744) (= (x2760 (x2147 x2406) (x3059 157) 0) x5346) (= x2698 (not x1894)) (= (x4345 x5346 1) x1428)))) (and (= x616 (x3589 (+ x2439 32))) (= (< x5162 x527) x4694))) x1636)))
(assert (x1311 x2025))
(assert (=> (>= 10000 x3637) (= (x3059 x3637) (x2147 x3637))))
(assert (x4437 x1003))
(assert (= (and x564 (not x4042)) x736))
(assert (= x4032 (and x2864 x2721)))
(assert (= (and x5202 x1928) x733))
(assert (x479 x1015))
(assert (= (=> (= x4986 true) x4001) x4233))
(assert (= (and (not x2883) x413) x1904))
(assert (= x4564 (x3311 (x2147 x4564))))
(assert (x5093 x569))
(assert (= x4384 (or x668 x4554)))
(assert (x5093 x2112))
(assert (= x3526 (and x1933 x240)))
(assert (x4437 x4816))
(assert (= x4165 (and x3954 x4072)))
(assert (= (x3311 (x4345 x2590 2)) (+ 2 (x3311 x2590))))
(assert (= (and x2054 (not x1832)) x2996))
(assert (x5093 x4567))
(assert (= (and x5359 (not x1634)) x92))
(assert (x5093 x3192))
(assert (x348 x4866))
(assert (= (and (not x4986) x2734) x3551))
(assert (= x4280 (and x4102 (not x974))))
(assert (= (and x167 (not x4528)) x324))
(assert (x5093 x2956))
(assert (= x3681 (or x5339 x4059)))
(assert (= (and x1882 x2045) x151))
(assert (= x2921 (and x3414 x1587)))
(assert (= x1999 (or x3122 x19)))
(assert (= (x3311 (x3059 24044834009420335638544845215851342251227478490780828673611325350056707489792)) 24044834009420335638544845215851342251227478490780828673611325350056707489792))
(assert (=> (<= x2728 10000) (= (x3059 x2728) (x2147 x2728))))
(assert (x5093 x402))
(assert (= (and x3004 x3488) x5215))
(assert (x5093 x399))
(assert (x5093 x2325))
(assert (x5093 x5294))
(assert (x5093 x3446))
(assert (x5093 x4618))
(assert (x5093 x3226))
(assert (x5093 x1677))
(assert (x5093 x2649))
(assert (x5093 x178))
(assert (x348 x24))
(assert (= (and x2310 x3116) x4958))
(assert (= (and x784 x1501) x431))
(assert (=> (<= x1825 10000) (= (x3059 x1825) (x2147 x1825))))
(assert (= x4343 (=> (and (= (= 0 x3519) x2077) (or (not x2077) x2077)) x2890)))
(assert (x5093 x4914))
(assert (= (and (not x1860) x4280) x4478))
(assert (= x3491 (or x203 x1881)))
(assert (x5093 x4223))
(assert (x479 x4025))
(assert (= (and x3371 x3623) x5206))
(assert (= x3914 (and (not x1621) x2744)))
(assert (= x2658 (and x1166 (not x920))))
(assert (x5093 x3517))
(assert (x5093 x3611))
(assert (and (x4259 1000000000000000000 x847) (x887 1000000000000000000 x847) (x4075 1000000000000000000 x847) (and (= (x4860 1000000000000000000 (- x847 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x847 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x847) (- (* x847 1000000000000000000) (* x847 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x847 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x847 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x847 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x847) (* x847 1000000000000000000)) (x2358 1000000000000000000 x847) (x244 1000000000000000000 x847)))
(assert (x5093 x3906))
(assert (= (x2147 1461501637330902918203684832716283019655932542975) (x3059 1461501637330902918203684832716283019655932542975)))
(assert (x5093 x4065))
(assert (=> (>= 10000 x2601) (= (x3059 x2601) (x2147 x2601))))
(assert (x5093 x3240))
(assert (x5093 x4808))
(assert (= x3545 (and (not x3494) x2322)))
(assert (x5093 x3399))
(assert (= (and (not x4400) x151) x4380))
(assert (= (or x749 x360 x264 x822 x1427 x2527) x5345))
(assert (=> (>= 10000 x2867) (= (x2147 x2867) (x3059 x2867))))
(assert (x348 x1194))
(assert (= x4581 (x3311 (x2147 x4581))))
(assert (x1311 x2297))
(assert (= (and x4726 x4289) x4146))
(assert (= (and x1559 x4014) x4654))
(assert (x5093 x1476))
(assert (x5093 x3975))
(assert (x5093 x291))
(assert (x5093 x3313))
(assert (x5093 x2099))
(assert (x185 x4611 x2409))
(assert (x4437 x3205))
(assert (x5093 x4371))
(assert (x5093 x1570))
(assert (= x2322 (and (not x5396) x1161)))
(assert (x5093 x4950))
(assert (x5093 x323))
(assert (x4783 x4230))
(assert (x5093 x1343))
(assert (= x3053 (and (not x2683) x159)))
(assert (x5093 x3211))
(assert (x3331 (- x1194 x520)))
(assert (x5093 x906))
(assert (= (and x1424 (not x2716)) x5120))
(assert (= x3438 (=> (and (= x5161 x4382) (= 0 x5006)) x1567)))
(assert (=> (>= 10000 x2982) (= (x2147 x2982) (x3059 x2982))))
(assert (= x823 (=> (and (= x3999 x3421) (= x4717 x236)) x4388)))
(assert (= (and x1155 x3123) x1322))
(assert (= (x3311 (x3059 50292402827334880472107169365697159231523039388532301717704428044325102813184)) 50292402827334880472107169365697159231523039388532301717704428044325102813184))
(assert (x1311 x1971))
(assert (= x4601 (x3311 (x2147 x4601))))
(assert (x5093 x1616))
(assert (x5093 x5087))
(assert (x5093 x449))
(assert (x5093 x4295))
(assert (x4437 x4025))
(assert (= (or x3491 x4311) x1157))
(assert (x5093 x4457))
(assert (x1311 x5432))
(assert (= (x3311 (x2147 x5098)) x5098))
(assert (x5093 x1238))
(assert (x5093 x2035))
(assert (= (and x597 (not x1512)) x3078))
(assert (= x4734 (or x1385 x3087 x900 x3151 x3154 x4822)))
(assert (x5093 x4673))
(assert (x3331 (- x1368 x1194)))
(assert (=> (<= x1440 10000) (= (x2147 x1440) (x3059 x1440))))
(assert (x5093 x3263))
(assert (x5093 x4587))
(assert (x5093 x5039))
(assert (= (or (and (not x809) x2529) (and x1040 x4012)) x1412))
(assert (x5093 x3710))
(assert (x5093 x46))
(assert (= (and (not x679) x719) x1933))
(assert (x5093 x300))
(assert (= (+ 1 (x3311 x1945)) (x3311 (x4345 x1945 1))))
(assert (x5093 x374))
(assert (x5131 x1766 x520))
(assert (x1311 x2738))
(assert (= (and (not x3926) x4867) x1543))
(assert (= x331 x481))
(assert (x4437 x4686))
(assert (x3294 x4816 x2736))
(assert (x5093 x248))
(assert (= x3562 (x3311 (x2147 x3562))))
(assert (x5093 x1951))
(assert (= x3368 (or x2817 x2285)))
(assert (x5093 x4668))
(assert (= x4174 (or x3764 x1269 x2968 x2662 x4516 x2280 x2986 x3666 x423)))
(assert (x3513 x2299 (- x1368 x520)))
(assert (= x1408 (and x4664 x3729)))
(assert (x5093 x1774))
(assert (= x3162 (and x3395 (not x4791))))
(assert (x5093 x1712))
(assert (and (x4259 1000000000000000000 x970) (x887 1000000000000000000 x970) (x4075 1000000000000000000 x970) (and (= (x4860 1000000000000000000 (- x970 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x970 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x970) (- (* x970 1000000000000000000) (* x970 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x970 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x970 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x970 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x970) (* x970 1000000000000000000)) (x2358 1000000000000000000 x970) (x244 1000000000000000000 x970)))
(assert (= (x2147 178855970) (x3059 178855970)))
(assert (= (x3311 (x4345 x2144 1)) (+ 1 (x3311 x2144))))
(assert (x5093 x2228))
(assert (= (+ 1 (x3311 x4988)) (x3311 (x4345 x4988 1))))
(assert (x5093 x1739))
(assert (= (and x2516 x265) x903))
(assert (x5093 x2528))
(assert (x5093 x5443))
(assert (x5093 x528))
(assert (x5093 x3464))
(assert (x5093 x744))
(assert (x5093 x308))
(assert (x5093 x3531))
(assert (= (and (=> (and (= x930 (= 0 x726)) x960) (and (=> (and (and (or (and (and (= x2762 (= x2406 x4721)) (or (and x2762 (and (not (= 2796547477 x3850)) (> 2929553584 x3850) (= 1 x789) (= x2335 32) (not (= 2691771752 x3850)) (not (< x3850 2691771752)) (<= 0 x4580) (= 4 x4536) (> x402 0) (not (< x3850 2217467699)) (not (< x4536 4)) (= x3132 x4536) (= x3850 2858086653) (not (= 2835717307 x3850)) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x1351) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4580) (= (x3736 (x2147 x4721)) x402))) (and (and (and (and (not (= 2691771752 x4895)) (> x4755 0) (not (> 2691771752 x4895)) (not (< x4895 2217467699)) (= x4755 (x3736 (x2147 x4287))) (not (> 4 x1677)) (= 4 x1677) (<= 0 x4782) (= x4895 2858086653) (= x2348 77053863734975077137548456399560439977311721439096602559221323163398253314048) (not (= x4895 2835717307)) (= x1677 x3132) (< x4895 2929553584) (= 32 x2335) (not (= x4895 2796547477)) (= x789 1) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4782)) x977) (= x977 (= x4287 x2406))) (not x2762)))) (not x2750)) (and x2750 (and (not (= 2691771752 x3139)) (= x4515 (x3736 (x2147 x2179))) (= x1417 4) (<= 0 x4161) (< x3139 2929553584) (not (< x3139 2691771752)) (not (< x1417 4)) (not (= 2796547477 x3139)) (< 0 x4515) (= 1 x789) (= 32 x2335) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x1080) (= x3132 x1417) (<= x4161 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= 2835717307 x3139)) (not (< x3139 2217467699)) (= 2858086653 x3139)))) (and (= (= x2179 x2406) x2750) (= x835 (x3589 (+ x192 160))) (= x3132 4))) (not x930)) x1697) (=> (and (and (= x1583 x192) (= x5284 0)) x930) x4299))) (=> (and (not x960) (and (= x2509 x527) (= x2771 x3440) (= x192 x465))) x489)) x440))
(assert (= (+ (x3311 x1233) 1) (x3311 (x4345 x1233 1))))
(assert (= x3503 (and x257 (not x2879))))
(assert (= x2744 (and x444 x4112)))
(assert (x5093 x3934))
(assert (= (and x2615 (not x1331)) x5259))
(assert (x1311 x4357))
(assert (= x2298 (and (not x2740) x5120)))
(assert (= (x3311 (x2147 x4778)) x4778))
(assert (x4437 x2473))
(assert (= (x2147 35417553099779373699389112480655434059402432070290151981503827724506945814528) (x3059 35417553099779373699389112480655434059402432070290151981503827724506945814528)))
(assert (x5093 x2042))
(assert (x5093 x5216))
(assert (x5093 x2391))
(assert (x5093 x297))
(assert (x5093 x850))
(assert (= (+ (x3311 x2810) 1) (x3311 (x4345 x2810 1))))
(assert (= x1984 (and (not x1502) x3691)))
(assert (= x4795 (and x324 x1777)))
(assert (x5093 x4194))
(assert (x1311 x3762))
(assert (= (and x3184 x2232) x231))
(assert (= (and x5060 x2606) x2471))
(assert (x5093 x1582))
(assert (= x3287 (=> (and (= x4986 false) (= (x4345 x3750 1) x4739) (= (x3203 x4739) x2690) (<= x2976 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2690) (<= 0 x2976) (= (x453 x3750) x2976) (<= 0 x2690)) x4001)))
(assert (x4437 x3089))
(assert (x5093 x4707))
(assert (= x423 (and x2405 x880)))
(assert (x5093 x3036))
(assert (=> (>= 10000 x3233) (= (x2147 x3233) (x3059 x3233))))
(assert (x5093 x2743))
(assert (x5093 x4831))
(assert (x5093 x2977))
(assert (= (and x3199 x1765) x1724))
(assert (x5093 x1638))
(assert (x5093 x3384))
(assert (= (and x247 (not x3622)) x2474))
(assert (= (and x5418 x4887) x4493))
(assert (= x1596 (and x661 x1545)))
(assert (= (and x1100 (not x930)) x5401))
(assert (= x842 (and x1514 x3793)))
(assert (x3513 x1194 (- x520 x1368)))
(assert (= x1794 (or x1037 x3765 x1266)))
(assert (x5093 x194))
(assert (= x2959 (and x4873 x2544)))
(assert (= x3743 (and (not x1457) x3153)))
(assert (x5093 x2605))
(assert (= x3747 (and x2472 (not x3335))))
(assert (= (and x691 x1841) x1261))
(assert (= x4576 (and (not x4870) x309)))
(assert (= (and x1029 x4517) x2574))
(assert (= x1266 (and x3614 x1333)))
(assert (x1311 x4287))
(assert (x5093 x2752))
(assert (= x2829 (and x1179 x1082)))
(assert (x5093 x2399))
(assert (= (or x2596 x2887) x2827))
(assert (= (=> (and (= x3035 x1399) (= x5378 0) (= x4742 x4028)) x5041) x2240))
(assert (x5093 x5162))
(assert (x5093 x1899))
(assert (= (=> (= x4109 x3048) x492) x3807))
(assert (= (and x456 x5008) x3686))
(assert (x5093 x1227))
(assert (= (and x2376 x3833) x1718))
(assert (x5093 x3180))
(assert (x5093 x1597))
(assert (x5093 x5236))
(assert (= (or x760 x238 x4977) x798))
(assert (x5093 x2556))
(assert (= x5158 (=> (and (= x919 x578) (= x2508 x33)) x183)))
(assert (x5093 x1063))
(assert (x5093 x316))
(assert (x5093 x1369))
(assert (= (x3311 (x3059 2858086653)) 2858086653))
(assert (=> (<= x3131 10000) (= (x3059 x3131) (x2147 x3131))))
(assert (x5093 x5003))
(assert (x5093 x2812))
(assert (x3331 x3108))
(assert (= (and x4765 x2106) x342))
(assert (= x759 (and x4900 (not x557))))
(assert (x1311 x4197))
(assert (= x273 (and x3920 x3157)))
(assert (x5093 x1339))
(assert (= (and x2957 x4908) x1981))
(assert (= 2023533118 (x3311 (x3059 2023533118))))
(assert (x5093 x2140))
(assert (x5093 x5192))
(assert (x5093 x3909))
(assert (x5093 x730))
(assert (= (and (not x3204) x3678) x1836))
(assert (= (+ 1 (x3311 x2383)) (x3311 (x4345 x2383 1))))
(assert (= x420 (x3311 (x2147 x420))))
(assert (x5093 x3928))
(assert (x5093 x5380))
(assert (x5093 x5163))
(assert (x5093 x4885))
(assert (= (and x5078 x2175) x3214))
(assert (x5093 x4826))
(assert (x1311 x3637))
(assert (x5093 x770))
(assert (= x2355 (=> (and (= x3064 (x1025 x3239 x1000)) (= x3239 (x3707 x3521 x130)) (= (x1025 x1071 x1875) x3521) (= x1071 (ite (= x3167 1) 1 0)) (= (ite (= x150 0) 1 0) x130) (= (< 0 x3064) x605) (= (ite (> x150 31) 1 0) x1875)) (and (=> (not x605) x1172) (=> (and (and (= x3846 (x3589 (+ 4 x4578))) (= (x3589 (+ x3846 32)) x5408) (= x4122 (x4761 (- x5408 x4578))) (= x1916 (= x2406 x2179))) x605) (and (=> (and (and (= x4122 x1680) (= x1924 (or (and (= (<= x3446 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3446 32)) (> x3446 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1680 36) (= x1755 2691771752) (> x4708 0) (= x3446 (x4761 (- x1680 4))) (< x1755 2929553584) (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 x2217) (= x2509 x5039) (= (x3736 (x2147 x2179)) x4708) (not (> 4 x1680)) (not (< x1755 2217467699)) (not (< x1755 2691771752))) x1916) (and (=> (and (and (= (= x5325 x2330) x4537) (< x5325 1461501637330902918203684832716283019655932542976) (= x2939 x5039) (>= x5325 0) (<= x5325 1461501637330902918203684832716283019655932542975) (= 128 x4772)) (not x1924)) (and (=> (and (= x1103 (= x5325 x2179)) (not x4537)) (and (=> (and (and (= x281 x2939) (= x3561 (x4761 (- x4677 4))) (= x3054 (or (> x3561 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x3561) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3561))))) (= x2678 599290589) (= x4594 x4078) (not (= x2678 547091486)) (not (= 405663989 x2678)) (= x4677 100) (= (x3736 (x2147 x2179)) x1404) (> 988262939 x2678) (= 100 x4677) (not (> 4 x4677)) (< 0 x1404) (= x2179 x5228) (not (> 405663989 x2678)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3120) (< x2678 2217467699)) x1103) (and (=> (and (and (= x2763 x4594) (= x3145 (= x4594 x4078))) (not x3054)) (and (=> (and (and (= x5228 x1555) (= x4454 (= x5228 x2179))) x3145) (and (=> (not x4454) x554) (=> (and (and (= x606 (< x2885 x2939)) (>= x2885 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2885) (= x281 x3332) (= x2885 (x2824 x467)) (= x467 (x2760 (x2147 x4594) (x3059 5) 0))) x4454) (and (=> x606 x554) (=> (and (and (= (x2824 x831) x395) (= x2100 (> x281 x395)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x395) (<= 0 x395) (= x831 (x2760 (x2147 x4594) (x3059 5) 0))) (not x606)) (and (=> x2100 x554) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5211) (= x259 (x4761 (- x395 x281))) (= x5211 (x2838 x255)) (= x255 (x2760 (x2147 x5228) (x3059 5) 0)) (= (< x3591 x5211) x1545) (<= 0 x5211) (= x3591 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x281)))) (not x2100)) (and (=> x1545 x554) (=> (and (and (= 1 x3181) (= x2479 (x3589 (+ x5211 x281))) (= 1 x194) (= 32 x3799)) (not x1545)) x1909))))))))) (=> (not x3145) x554))) (=> x3054 x554))) (=> (and (not x1103) (= x3837 (= x4721 x5325))) (and (=> (and (and (not (> 405663989 x1652)) (= x4078 x4428) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4828)) (> 96 x4828)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4828)) x4791) (> 2217467699 x1652) (= 100 x4300) (= x2179 x4632) (not (= 547091486 x1652)) (= x4828 (x4761 (- x4300 4))) (= x4300 100) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3952) (= 599290589 x1652) (= (x3736 (x2147 x4721)) x1143) (not (= 405663989 x1652)) (> x1143 0) (not (< x4300 4)) (< x1652 988262939) (= x2577 x2939)) x3837) (and (=> x4791 x3423) (=> (and (not x4791) (and (= x4428 x2694) (= x958 (= x4078 x4428)))) (and (=> (and (and (= x648 x4632) (= x2469 (= x2179 x4632))) x958) (and (=> (not x2469) x3423) (=> (and x2469 (and (>= x1499 0) (= (x3098 x1550) x1499) (<= x1499 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1550 (x2760 (x2147 x4428) (x3059 5) 0)) (= x2577 x2185) (= (< x1499 x2939) x2832))) (and (=> (and (and (= x2544 (> x2577 x2588)) (>= x2588 0) (<= x2588 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2760 (x2147 x4428) (x3059 5) 0) x737) (= x2588 (x3098 x737))) (not x2832)) (and (=> x2544 x3423) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1808) (= x3220 (x2760 (x2147 x4632) (x3059 5) 0)) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2577)) x4425) (<= 0 x1808) (= (x4761 (- x2588 x2577)) x3226) (= (x2809 x3220) x1808) (= x2523 (> x1808 x4425))) (not x2544)) (and (=> (and (and (= 1 x409) (= 32 x5298) (= x2399 (x3589 (+ x1808 x2577))) (= 1 x3180)) (not x2523)) x230) (=> x2523 x3423))))) (=> x2832 x3423))))) (=> (not x958) x3423))))) (=> (and (and (= x1366 (= x5325 x4287)) (and x1366 (and (= 100 x2822) (not (= 547091486 x4286)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1542) (> x1120 0) (= x3989 x2939) (= (x4761 (- x2822 4)) x1910) (= x4286 599290589) (not (> 4 x2822)) (< x4286 2217467699) (not (= 405663989 x4286)) (= x1120 (x3736 (x2147 x4287))) (> 988262939 x4286) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1910) true) (< x1910 96)) (> x1910 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4550) (= x4078 x1549) (not (< x4286 405663989)) (= x2822 100) (= x2179 x4408)))) (not x3837)) (and (=> (and (and (= x768 x1549) (= x3172 (= x4078 x1549))) (not x4550)) (and (=> (not x3172) x4495) (=> (and (and (= x2371 x4408) (= x4590 (= x4408 x2179))) x3172) (and (=> (and x4590 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2992) (<= 0 x2992) (= x3989 x5062) (= x4781 (> x2939 x2992)) (= x38 (x2760 (x2147 x1549) (x3059 5) 0)) (= (x4149 x38) x2992))) (and (=> x4781 x4495) (=> (and (not x4781) (and (= x5037 (x2760 (x2147 x1549) (x3059 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2815) (>= x2815 0) (= (> x3989 x2815) x3920) (= x2815 (x4149 x5037)))) (and (=> x3920 x4495) (=> (and (and (<= x3584 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3989)) x4138) (= x3815 (x4761 (- x2815 x3989))) (= (> x3584 x4138) x3816) (<= 0 x3584) (= x3487 (x2760 (x2147 x4408) (x3059 5) 0)) (= (x708 x3487) x3584)) (not x3920)) (and (=> (and (and (= x923 1) (= x2079 1) (= 32 x2855) (= (x3589 (+ x3584 x3989)) x1919)) (not x3816)) x306) (=> x3816 x4495))))))) (=> (not x4590) x4495))))) (=> x4550 x4495))))))) (=> (and (and (< x1925 1466279372) (= 100 x3835) (= 100 x3835) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1599)) (> 96 x1599)) (> x1599 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x5137) (= x2939 x5086) (not (> 4 x3835)) (= x4078 x2988) (= (x3736 (x2147 x2330)) x1762) (= x1925 599290589) (= x2179 x1497) (> x1762 0) (not (< x1925 599290589)) (= x1599 (x4761 (- x3835 4))) (= x3722 16156842317565293874272834530371880720966471053262404558597773956279093428224)) x4537) (and (=> (and (and (= x3432 x2988) (= x1231 (= x4078 x2988))) (not x5137)) (and (=> (not x1231) x3198) (=> (and (and (= x2931 x1497) (= x1075 (= x2179 x1497))) x1231) (and (=> (and (and (= (x547 x2252) x3041) (= x2214 (< x3041 x2939)) (= x5086 x3336) (>= x3041 0) (= x2252 (x2760 (x2147 x2988) (x3059 1) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3041)) x1075) (and (=> x2214 x3198) (=> (and (= x2490 (> x5086 x3041)) (not x2214)) (and (=> x2490 x3198) (=> (and (and (= x1620 (x4761 (- x3041 x5086))) (= (< x3464 x2193) x4999) (= x2193 (x4657 x3796)) (<= x2193 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x2193) (= (x2760 (x2147 x2988) (x3059 1) 0) x2559) (= x3796 (x2760 (x2147 x1497) (x3059 1) 0)) (= x3464 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5086)))) (not x2490)) (and (=> x4999 x3198) (=> (and (not x4999) (and (= (x3589 (+ x5086 x2193)) x5117) (= (> x2193 x5117) x351))) (and (=> (and (not x351) (and (= (x2760 (x2147 x2179) x3713 0) x4381) (= (x2760 (x2147 x2988) (x3059 2) 0) x3713) (= (x3908 x4381) x5106) (>= x5106 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5106) (= (< x5106 x5086) x170))) (and (=> x170 x3198) (=> (and (not x170) (= (> x5086 x5106) x4960)) (and (=> x4960 x3198) (=> (and (and (= x1162 32) (= x4704 (x4761 (- x5106 x5086))) (= x1479 1)) (not x4960)) x4341))))) (=> x351 x3198))))))))) (=> (not x1075) x3198))))) (=> x5137 x3198))))) (=> x1924 x4858))) (=> (and (= x3935 (= x4721 x2406)) (not x1916)) (and (=> (and x3935 (and (= 36 x2788) (< 0 x4330) (not (< x2788 4)) (= (x4761 (- x2788 4)) x3643) (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 x4667) (= (x3736 (x2147 x4721)) x4330) (not (> 2691771752 x3770)) (= x979 x2509) (= x2788 x4122) (> 2929553584 x3770) (= x3770 2691771752) (= x1422 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3643) (and (> 32 x3643) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3643) true)))) (not (> 2217467699 x3770)))) (and (=> x1422 x4600) (=> (and (not x1422) (and (= 128 x215) (= x179 (= x3544 x2330)) (> 1461501637330902918203684832716283019655932542976 x3544) (= x3800 x979) (>= 1461501637330902918203684832716283019655932542975 x3544) (>= x3544 0))) (and (=> (and (= (= x3544 x2179) x4775) (not x179)) (and (=> (and (= (= x3544 x4721) x200) (not x4775)) (and (=> (and x200 (and (not (< x278 4)) (= 100 x278) (= 599290589 x3346) (not (= x3346 547091486)) (not (= 405663989 x3346)) (= x1506 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x3800 x680) (= (x3736 (x2147 x4721)) x2779) (not (< x3346 405663989)) (= x1658 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5384) (and (= (<= x5384 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x5384 96)))) (< x3346 988262939) (= x5384 (x4761 (- x278 4))) (< 0 x2779) (= x4721 x420) (= 100 x278) (> 2217467699 x3346) (= x3869 x4078))) (and (=> x1658 x588) (=> (and (and (= x3869 x1957) (= x4224 (= x3869 x4078))) (not x1658)) (and (=> (not x4224) x588) (=> (and x4224 (and (= x420 x3639) (= x4767 (= x4721 x420)))) (and (=> (not x4767) x588) (=> (and x4767 (and (= x5444 (x2760 (x2147 x3869) (x3059 5) 0)) (= (< x5196 x3800) x1278) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5196) (= x5196 (x3098 x5444)) (>= x5196 0) (= x2433 x680))) (and (=> (and (not x1278) (and (= (x2760 (x2147 x3869) (x3059 5) 0) x4303) (= x223 (x3098 x4303)) (<= 0 x223) (= x2029 (> x680 x223)) (<= x223 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x2029 x588) (=> (and (and (= x1433 (x4761 (- x223 x680))) (>= x422 0) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x680)) x4707) (= (x487 x4609) x422) (= (< x4707 x422) x1889) (= (x2760 (x2147 x420) (x3059 5) 0) x4609) (<= x422 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x2029)) (and (=> (and (and (= 1 x3421) (= x236 32) (= x3530 1) (= (x3589 (+ x680 x422)) x983)) (not x1889)) x823) (=> x1889 x588))))) (=> x1278 x588))))))))) (=> (and (and (= (= x4287 x3544) x321) (and (and (= x4195 (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1821)) (> 96 x1821)) (> x1821 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 0 x5023) (> 2217467699 x3939) (not (> 4 x4882)) (not (< x3939 405663989)) (= x4078 x1946) (> 988262939 x3939) (= x3384 x4721) (= x1821 (x4761 (- x4882 4))) (= x3939 599290589) (= x4815 x3800) (not (= x3939 405663989)) (= x5023 (x3736 (x2147 x4287))) (= x4882 100) (not (= 547091486 x3939)) (= x3696 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 100 x4882)) x321)) (not x200)) (and (=> x4195 x3480) (=> (and (not x4195) (and (= x1946 x3906) (= (= x4078 x1946) x2403))) (and (=> (not x2403) x3480) (=> (and x2403 (and (= x46 x3384) (= (= x3384 x4721) x5242))) (and (=> (and x5242 (and (= x3101 (< x2466 x3800)) (>= x2466 0) (= x2466 (x4149 x3334)) (= x4815 x2097) (= x3334 (x2760 (x2147 x1946) (x3059 5) 0)) (<= x2466 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> x3101 x3480) (=> (and (and (= (< x459 x4815) x3622) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x459) (= (x4149 x3541) x459) (>= x459 0) (= x3541 (x2760 (x2147 x1946) (x3059 5) 0))) (not x3101)) (and (=> x3622 x3480) (=> (and (and (= x2073 (x2760 (x2147 x3384) (x3059 5) 0)) (<= x2397 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4815)) x802) (>= x2397 0) (= (x93 x2073) x2397) (= x2101 (x4761 (- x459 x4815))) (= x4699 (> x2397 x802))) (not x3622)) (and (=> x4699 x3480) (=> (and (and (= x3219 32) (= 1 x1383) (= x1144 1) (= x535 (x3589 (+ x2397 x4815)))) (not x4699)) x5226))))))) (=> (not x5242) x3480))))))))) (=> (and x4775 (and (= x1666 100) (> 2217467699 x4200) (= x5414 x3800) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4979) (and (< x4979 96) (= (<= x4979 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x4987) (> 988262939 x4200) (= x2769 x4078) (not (= x4200 405663989)) (= x1823 x4721) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1790) (= 599290589 x4200) (not (= x4200 547091486)) (= x4979 (x4761 (- x1666 4))) (= x1666 100) (= x148 (x3736 (x2147 x2179))) (not (> 405663989 x4200)) (> x148 0) (not (< x1666 4)))) (and (=> x4987 x4492) (=> (and (and (= x3381 x2769) (= x3236 (= x4078 x2769))) (not x4987)) (and (=> (not x3236) x4492) (=> (and (and (= x1823 x4944) (= x905 (= x1823 x4721))) x3236) (and (=> (not x905) x4492) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3056) (>= x3056 0) (= x4322 (x2760 (x2147 x2769) (x3059 5) 0)) (= (x2824 x4322) x3056) (= x1360 x5414) (= (> x3800 x3056) x2108)) x905) (and (=> (and (not x2108) (and (<= x212 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x212 0) (= (x2824 x3459) x212) (= x3459 (x2760 (x2147 x2769) (x3059 5) 0)) (= (< x212 x5414) x3671))) (and (=> x3671 x4492) (=> (and (not x3671) (and (<= 0 x4027) (= (x2760 (x2147 x1823) (x3059 5) 0) x139) (<= x4027 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2741 x139) x4027) (= x3668 (< x2534 x4027)) (= (x4761 (- x212 x5414)) x3853) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5414)) x2534))) (and (=> (and (and (= (x3589 (+ x4027 x5414)) x2664) (= 1 x5010) (= x2603 32) (= x3018 1)) (not x3668)) x1637) (=> x3668 x4492))))) (=> x2108 x4492))))))))))) (=> (and (and (= x2124 x3800) (= 100 x3949) (= (x3736 (x2147 x2330)) x1063) (= x3822 (x4761 (- x3949 4))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2062) (= x3949 100) (= x4078 x1048) (= x3701 599290589) (not (< x3701 599290589)) (> x1063 0) (= (or (> x3822 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x3822 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3822)))) x118) (= x4721 x4668) (not (> 4 x3949)) (> 1466279372 x3701)) x179) (and (=> (and (and (= x4063 x1048) (= x4702 (= x4078 x1048))) (not x118)) (and (=> (not x4702) x3917) (=> (and (and (= (= x4668 x4721) x3698) (= x4668 x5433)) x4702) (and (=> (not x3698) x3917) (=> (and (and (= x2124 x4638) (<= x891 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x891) (= (> x3800 x891) x717) (= (x2760 (x2147 x1048) (x3059 1) 0) x1760) (= x891 (x547 x1760))) x3698) (and (=> x717 x3917) (=> (and (not x717) (= (> x2124 x891) x1609)) (and (=> x1609 x3917) (=> (and (and (= (x2760 (x2147 x1048) (x3059 1) 0) x5189) (>= x169 0) (= x116 (x4761 (- x891 x2124))) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2124)) x1626) (= x3409 (> x169 x1626)) (= x169 (x4896 x82)) (= x82 (x2760 (x2147 x4668) (x3059 1) 0)) (<= x169 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1609)) (and (=> x3409 x3917) (=> (and (and (= (x3589 (+ x2124 x169)) x177) (= (> x169 x177) x2785)) (not x3409)) (and (=> (and (not x2785) (and (<= 0 x1829) (= (x3908 x5249) x1829) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1829) (= (x2760 (x2147 x1048) (x3059 2) 0) x5303) (= (> x2124 x1829) x5209) (= x5249 (x2760 (x2147 x4721) x5303 0)))) (and (=> x5209 x3917) (=> (and (= x1155 (< x1829 x2124)) (not x5209)) (and (=> (and (not x1155) (and (= x3495 32) (= (x4761 (- x1829 x2124)) x3333) (= x5219 1))) x5059) (=> x1155 x3917))))) (=> x2785 x3917))))))))))))) (=> x118 x3917))))))) (=> (and (not x3935) (and (and (and (not (< x4476 4)) (= x4123 (x4761 (- x4476 4))) (= x4476 36) (= (x3736 (x2147 x4287)) x4689) (= 72570022874062638528011751457397263716769196454539065078543251854057308946432 x2384) (= x3607 (or (> x4123 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x4123) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4123))))) (not (< x405 2691771752)) (= x4476 x4122) (= x2509 x5321) (> 2929553584 x405) (not (< x405 2217467699)) (= x405 2691771752) (> x4689 0)) x1309) (= (= x2406 x4287) x1309))) (and (=> (and (and (> 1461501637330902918203684832716283019655932542976 x4076) (= x1119 (= x2330 x4076)) (= 128 x5274) (= x5321 x3993) (<= 0 x4076) (>= 1461501637330902918203684832716283019655932542975 x4076)) (not x3607)) (and (=> (and (not x1119) (= x679 (= x2179 x4076))) (and (=> (and x679 (and (= x4287 x1032) (not (= 547091486 x722)) (not (< x722 405663989)) (= x4078 x3178) (< 0 x1238) (not (> 4 x3849)) (not (= 405663989 x722)) (= x938 (x4761 (- x3849 4))) (= x1238 (x3736 (x2147 x2179))) (= x3993 x3679) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x915) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x938)) (< x938 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x938)) x4350) (= 100 x3849) (= x722 599290589) (> 988262939 x722) (= x3849 100) (< x722 2217467699))) (and (=> x4350 x1409) (=> (and (and (= x3178 x4924) (= x1035 (= x3178 x4078))) (not x4350)) (and (=> (not x1035) x1409) (=> (and x1035 (and (= (= x1032 x4287) x3412) (= x4914 x1032))) (and (=> (not x3412) x1409) (=> (and x3412 (and (<= 0 x4065) (= x3679 x5380) (= (> x3993 x4065) x1752) (<= x4065 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2824 x1822) x4065) (= (x2760 (x2147 x3178) (x3059 5) 0) x1822))) (and (=> x1752 x1409) (=> (and (and (= x2367 (x2760 (x2147 x3178) (x3059 5) 0)) (<= x4733 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x3679 x4733) x2470) (= x4733 (x2824 x2367)) (<= 0 x4733)) (not x1752)) (and (=> x2470 x1409) (=> (and (and (= (> x4732 x2009) x4910) (<= 0 x4732) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3679)) x2009) (= (x4761 (- x4733 x3679)) x3309) (= (x2760 (x2147 x1032) (x3059 5) 0) x3373) (<= x4732 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4956 x3373) x4732)) (not x2470)) (and (=> x4910 x1409) (=> (and (and (= (x3589 (+ x4732 x3679)) x4404) (= x2910 1) (= x1553 1) (= 32 x1731)) (not x4910)) x1271))))))))))))) (=> (and (not x679) (= (= x4076 x4721) x240)) (and (=> (and (not x240) (and (= (= x4287 x4076) x2194) (and x2194 (and (not (= 547091486 x2181)) (= 100 x1591) (= x3292 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (< x1591 4)) (not (= 405663989 x2181)) (= x4287 x724) (< x2181 2217467699) (= (x4761 (- x1591 4)) x2288) (= 100 x1591) (= x1906 x4078) (> 988262939 x2181) (> x4136 0) (not (< x2181 405663989)) (= 599290589 x2181) (= (x3736 (x2147 x4287)) x4136) (= x3993 x3160) (= (or (and (= true (<= x2288 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x2288 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2288)) x4184))))) (and (=> x4184 x2417) (=> (and (and (= x3488 (= x1906 x4078)) (= x2961 x1906)) (not x4184)) (and (=> (and x3488 (and (= (= x4287 x724) x3876) (= x3185 x724))) (and (=> (not x3876) x2417) (=> (and x3876 (and (>= x4743 0) (= x3818 (< x4743 x3993)) (= x4352 x3160) (= x4743 (x4149 x3306)) (= x3306 (x2760 (x2147 x1906) (x3059 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4743))) (and (=> (and (and (= (x2760 (x2147 x1906) (x3059 5) 0) x801) (<= 0 x1989) (= (> x3160 x1989) x3366) (= (x4149 x801) x1989) (<= x1989 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x3818)) (and (=> x3366 x2417) (=> (and (not x3366) (and (<= x5075 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1306 x5250) x5075) (= (> x5075 x1275) x838) (<= 0 x5075) (= x5250 (x2760 (x2147 x724) (x3059 5) 0)) (= x1275 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3160))) (= (x4761 (- x1989 x3160)) x1575))) (and (=> (and (and (= (x3589 (+ x5075 x3160)) x3179) (= x3313 1) (= 32 x652) (= x455 1)) (not x838)) x1246) (=> x838 x2417))))) (=> x3818 x2417))))) (=> (not x3488) x2417))))) (=> (and x240 (and (= x1196 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x1899 (x3736 (x2147 x4721))) (not (= x3348 405663989)) (not (< x2021 4)) (= (or (and (= true (<= x4488 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x4488 96)) (> x4488 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x2195) (= x4287 x2598) (< x3348 988262939) (> x1899 0) (= 100 x2021) (= 100 x2021) (= x4488 (x4761 (- x2021 4))) (not (< x3348 405663989)) (not (= 547091486 x3348)) (= x1403 x4078) (= x3348 599290589) (= x3993 x5342) (> 2217467699 x3348))) (and (=> x2195 x1070) (=> (and (not x2195) (and (= x1403 x896) (= (= x1403 x4078) x4658))) (and (=> (and (and (= x2593 x2598) (= x4505 (= x4287 x2598))) x4658) (and (=> (not x4505) x1070) (=> (and (and (= (x3098 x4526) x1475) (<= 0 x1475) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1475) (= x4127 (> x3993 x1475)) (= x26 x5342) (= (x2760 (x2147 x1403) (x3059 5) 0) x4526)) x4505) (and (=> (and (not x4127) (and (>= x1201 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1201) (= x1201 (x3098 x3536)) (= (< x1201 x5342) x1733) (= (x2760 (x2147 x1403) (x3059 5) 0) x3536))) (and (=> x1733 x1070) (=> (and (and (= x4014 (> x4253 x5016)) (>= x4253 0) (= (x2760 (x2147 x2598) (x3059 5) 0) x5374) (= (x4761 (- x1201 x5342)) x3548) (= x5016 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5342))) (= (x2151 x5374) x4253) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4253)) (not x1733)) (and (=> (and (not x4014) (and (= x3977 (x3589 (+ x5342 x4253))) (= 32 x973) (= x1286 1) (= x1725 1))) x5335) (=> x4014 x1070))))) (=> x4127 x1070))))) (=> (not x4658) x1070))))))))) (=> (and x1119 (and (= x4166 (x3736 (x2147 x2330))) (= x763 100) (= (x4761 (- x763 4)) x2053) (= x2125 x4078) (> x4166 0) (= x2684 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (or (> x2053 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x2053 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 96 x2053))) x2370) (not (> 4 x763)) (= 100 x763) (= x699 x4287) (> 1466279372 x5207) (= x4018 x3993) (= 599290589 x5207) (not (> 599290589 x5207)))) (and (=> x2370 x933) (=> (and (and (= (= x4078 x2125) x4175) (= x2125 x3900)) (not x2370)) (and (=> (and (and (= x4199 (= x4287 x699)) (= x3955 x699)) x4175) (and (=> (not x4199) x933) (=> (and x4199 (and (<= x2172 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2172 (x547 x3971)) (= x4018 x4811) (= (x2760 (x2147 x2125) (x3059 1) 0) x3971) (<= 0 x2172) (= (< x2172 x3993) x694))) (and (=> (and (= (< x2172 x4018) x486) (not x694)) (and (=> x486 x933) (=> (and (not x486) (and (<= 0 x3040) (= x199 (x4761 (- x2172 x4018))) (= x3582 (x2760 (x2147 x2125) (x3059 1) 0)) (= (x2760 (x2147 x699) (x3059 1) 0) x4156) (= (x1780 x4156) x3040) (= (< x2823 x3040) x2943) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4018)) x2823) (<= x3040 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x2943) (and (= x5182 (x3589 (+ x4018 x3040))) (= (> x3040 x5182) x3444))) (and (=> (and (not x3444) (and (= x4969 (x2760 (x2147 x4287) x558 0)) (<= x2283 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2283 (x3908 x4969)) (= x2548 (> x4018 x2283)) (= (x2760 (x2147 x2125) (x3059 2) 0) x558) (>= x2283 0))) (and (=> (and (= x5265 (> x4018 x2283)) (not x2548)) (and (=> (and (and (= 32 x3749) (= (x4761 (- x2283 x4018)) x1985) (= x2394 1)) (not x5265)) x359) (=> x5265 x933))) (=> x2548 x933))) (=> x3444 x933))) (=> x2943 x933))))) (=> x694 x933))))) (=> (not x4175) x933))))))) (=> x3607 x3442)))))))))))
(assert (= (+ 1 (x3311 x3276)) (x3311 (x4345 x3276 1))))
(assert (= x4880 (and x4391 x4339)))
(assert (= (and x4937 (not x4960)) x3754))
(assert (x5093 x3642))
(assert (x1311 x4884))
(assert (x348 x5220))
(assert (= (x3311 (x2147 x4357)) x4357))
(assert (x5093 x465))
(assert (x5093 x4748))
(assert (x5093 x1273))
(assert (x5093 x4020))
(assert (x5093 x1404))
(assert (= x31 (and x4703 (not x3992))))
(assert (= x1563 (and x4790 (not x5349))))
(assert (= x5043 (or x1931 x715)))
(assert (x5093 x2264))
(assert (= (+ (x3311 x1745) 1) (x3311 (x4345 x1745 1))))
(assert (= (and x5110 x5197) x1396))
(assert (=> (>= 10000 x730) (= (x2147 x730) (x3059 x730))))
(assert (and (x1458 x2259 1000000000000000000) (x1175 x2259 1000000000000000000) (=> (and (> x2259 0) (< 0 1000000000000000000)) (and (> (* (x3658 x2259 1000000000000000000) 1000000000000000000) (- x2259 1000000000000000000)) (<= (* 1000000000000000000 (x3658 x2259 1000000000000000000)) x2259))) (x5235 x2259 1000000000000000000) (x2792 x2259 1000000000000000000)))
(assert (= (or x2443 x446) x1619))
(assert (= x2539 (=> (and (or (and (not x774) (= 0 x187)) (and (= x187 x2231) x774)) (and (<= 0 x4397) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4397) (= x774 (> x2231 x4397)))) x2303)))
(assert (= (and x1783 (not x3028)) x2884))
(assert (= (and (not x4875) x1871) x2055))
(assert (x3513 x1368 (- x2299 x340)))
(assert (x348 x2758))
(assert (= x1303 (=> (and (= x1538 x2042) (= x3938 x2730)) x2300)))
(assert (x5093 x3696))
(assert (= (or x2597 x3435 x4255 x678 x851 x4813 x4229 x1396 x2041 x3684 x2294 x3327 x3072 x1999 x827 x1344 x1610 x5304 x3277 x5406 x4954 x940 x3686 x5301 x1197 x1981 x1949 x1883 x205 x4797 x1651 x4267 x4652) x3529))
(assert (= (and x2579 x3037) x5256))
(assert (x5093 x738))
(assert (= 1313710058 (x3311 (x3059 1313710058))))
(assert (= x2525 x1135))
(assert (= (x3311 (x3059 989455977)) 989455977))
(assert (x885 x1194 x520 x340 x520))
(assert (x5093 x1364))
(assert (x5093 x3835))
(assert (= x4233 x876))
(assert (= x2900 (and x3793 (not x1514))))
(assert (= x2839 (and x2844 (not x94))))
(assert (=> (>= 10000 x3794) (= (x2147 x3794) (x3059 x3794))))
(assert (= (and x208 x1228) x4422))
(assert (x5093 x2733))
(assert (= (and x1298 (not x590)) x3235))
(assert (= (=> (and (= x2508 x4749) (= x919 x2522)) x183) x1693))
(assert (= (and (not x742) x1101) x257))
(assert (= x4029 (or x2936 x4606 x2843 x3405 x4449 x5112 x5256 x3241 x855)))
(assert (x5093 x3504))
(assert (x5093 x4270))
(assert (= (x3311 (x2147 x4078)) x4078))
(assert (= x3062 (and x681 (not x2975))))
(assert (= x4709 (and x5065 x5187)))
(assert (= (and x3227 x2814) x2986))
(assert (x5093 x2218))
(assert (x2929 x3521))
(assert (x5093 x2982))
(assert (x5131 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1402))
(assert (= (x3311 (x2147 x3022)) x3022))
(assert (= (and x5139 (not x135)) x49))
(assert (x5093 x5053))
(assert (= (and x1 x4175) x3427))
(assert (= (and x1342 (not x1226)) x2817))
(assert (= (and x4650 (not x3534)) x721))
(assert (x5093 x4904))
(assert (x5093 x4921))
(assert (= (or x314 x1387 x3125 x283 x2900 x4789 x2471 x1053 x342) x2285))
(assert (x5093 x2931))
(assert (= (or x845 x2262 x4527 x4380 x4758 x1724) x5273))
(assert (and (x4259 1000000000000000000 x3440) (x887 1000000000000000000 x3440) (x4075 1000000000000000000 x3440) (and (= (x4860 1000000000000000000 (- x3440 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x3440 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3440) (- (* x3440 1000000000000000000) (* x3440 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3440 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x3440 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3440 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x3440) (* x3440 1000000000000000000)) (x2358 1000000000000000000 x3440) (x244 1000000000000000000 x3440)))
(assert (= (and x2148 (not x2877)) x4976))
(assert (x5093 x2675))
(assert (= x3831 (and x2701 x2707)))
(assert (= (and x3791 (not x3407)) x1256))
(assert (x348 x1753))
(assert (= (and x2635 x2470) x2691))
(assert (= (and (not x4039) x2848) x3982))
(assert (x5093 x925))
(assert (x5093 x971))
(assert (=> (<= x1653 10000) (= (x3059 x1653) (x2147 x1653))))
(assert (x5093 x2987))
(assert (= (or x2580 x425) x2643))
(assert (= x4794 (and x1442 x4571)))
(assert (x4437 x1000))
(assert (= (and x961 x4756) x4430))
(assert (= (and x4795 x4626) x3670))
(assert (x5093 x1700))
(assert (x5093 x1740))
(assert (x5093 x2795))
(assert (= x3577 (and x2077 x4843)))
(assert (x5093 x5407))
(assert (x5093 x1824))
(assert (= (or x2088 x3243 x2836 x532) x3771))
(assert (= (and (not x4034) x3210) x2866))
(assert (x5093 x2774))
(assert (x5093 x3663))
(assert (x5093 x3357))
(assert (= x3050 (and (not x2170) x5270)))
(assert (= (x2147 20853193852723734048814770637610870652489083209607696777694672748161462697984) (x3059 20853193852723734048814770637610870652489083209607696777694672748161462697984)))
(assert (= x1764 (and (not x3671) x2356)))
(assert (= x2106 (and (not x4585) x219)))
(assert (x3331 (- x1368 x340)))
(assert (= (x3311 (x4345 x2965 1)) (+ (x3311 x2965) 1)))
(assert (x5093 x3977))
(assert (x5093 x1720))
(assert (= (and x107 x4620) x3020))
(assert (x3513 x520 (- x340 x2299)))
(assert (= x2828 (and x2854 x872)))
(assert (= (=> (= true x4986) x4001) x2525))
(assert (x5093 x4735))
(assert (x5093 x1202))
(assert (= (x3311 (x2147 x2956)) x2956))
(assert (x5093 x3330))
(assert (=> (>= 10000 x3869) (= (x3059 x3869) (x2147 x3869))))
(assert (x5093 x1694))
(assert (x5093 x1692))
(assert (= x1251 (and x5288 x2796)))
(assert (x5093 x1141))
(assert (x5093 x1971))
(assert (= x3787 (=> (and (= 0 x3080) (= x97 x2859)) x4324)))
(assert (= (and x2570 x4066) x2347))
(assert (= x5399 (or x2695 x5261)))
(assert (= x4062 (or (and x1547 (not x764)) x1065)))
(assert (x5093 x5311))
(assert (= x4606 (and x3006 (not x2210))))
(assert (= x3327 (and x4337 (not x2114))))
(assert (= x1893 (x3311 (x2147 x1893))))
(assert (x5093 x4506))
(assert (= x3144 (x3311 (x2147 x3144))))
(assert (x5093 x1919))
(assert (x5093 x236))
(assert (= (and (not x2222) x1707) x3516))
(assert (x5093 x3026))
(assert (x5093 x4616))
(assert (x5093 x3591))
(assert (x5093 x2992))
(assert (x2366 x1194 x520 x2299 x1368))
(assert (= (and x2474 x4699) x834))
(assert (= (x2147 50292402827334880472107169365697159231523039388532301717704428044325102813184) (x3059 50292402827334880472107169365697159231523039388532301717704428044325102813184)))
(assert (x5093 x2576))
(assert (x5093 x2720))
(assert (x5093 x2179))
(assert (x5093 x1808))
(assert (x5093 x192))
(assert (x5093 x3001))
(assert (= x4661 (and x2377 x2302)))
(assert (= x2239 (and x2639 x894)))
(assert (= x1172 x874))
(assert (and (x4259 1000000000000000000 x24) (x887 1000000000000000000 x24) (x4075 1000000000000000000 x24) (and (= (x4860 1000000000000000000 (- x24 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x24 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x24) (- (* x24 1000000000000000000) (* x24 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x24 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x24 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x24 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x24) (* x24 1000000000000000000)) (x2358 1000000000000000000 x24) (x244 1000000000000000000 x24)))
(assert (x5093 x2178))
(assert (= (or x2016 x2486) x4697))
(assert (= (x3059 76833804140862540057647519496925185374644862498684814347804924264468996685824) (x2147 76833804140862540057647519496925185374644862498684814347804924264468996685824)))
(assert (x5093 x1838))
(assert (= (and x2072 (not x5167)) x604))
(assert (x5093 x4866))
(assert (= (and x2050 x3092) x4684))
(assert (x5093 x4667))
(assert (x5093 x3869))
(assert (= (and x1519 x62) x98))
(assert (= (x3311 (x4345 x5030 1)) (+ (x3311 x5030) 1)))
(assert (x2366 x1194 x520 x1368 x2299))
(assert (x5093 x5091))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x3658 x2889 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x570 x2889 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x2889)) (x355 x2889 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3825 x2889 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4162 x2889 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x5093 x3168))
(assert (= (=> (and (= x387 x3357) (= x4456 x4450)) x2236) x4724))
(assert (=> (<= x1398 10000) (= (x3059 x1398) (x2147 x1398))))
(assert (=> (>= 10000 x2297) (= (x2147 x2297) (x3059 x2297))))
(assert (= x1377 (and x750 x3023)))
(assert (= (and (not x4836) x618) x4810))
(assert (= (=> (= (= 0 x3382) x1701) (and (=> x1701 x1172) (=> (and (not x1701) (and (= x5336 (x1025 115792089237316195423570985008687907853269984665640564039457584007913129639904 x154)) (= x565 (or (> x5435 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x5435 32) (= (<= x5435 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x154 (x3589 (+ 31 x5435))) (= (x3589 (+ x5336 x2980)) x1443))) (and (=> (and (not x565) (and (= (x4692 x2980) x184) (= x4188 (= 0 x184)))) (and (=> (not x4188) x1172) (=> (and (and (= x3685 x5354) (= x2418 x43) (= x2780 x3744) (= x4674 x1443)) x4188) x2188))) (=> (and (= x4986 true) x565) x4001))))) x623))
(assert (x5093 x1821))
(assert (=> (>= 10000 x4428) (= (x3059 x4428) (x2147 x4428))))
(assert (= (x3311 (x2147 x3874)) x3874))
(assert (= (and x3326 (not x288)) x3546))
(assert (= x948 (and (not x4391) x4339)))
(assert (x5093 x112))
(assert (= x5100 (and (not x779) x109)))
(assert (= (=> (and (= x2249 x4749) (= 0 x2522)) x1693) x4600))
(assert (x5093 x2546))
(assert (= x2563 (and x3664 x3063)))
(assert (= x1203 (or x4038 x213)))
(assert (and (x4259 1000000000000000000 x3539) (x887 1000000000000000000 x3539) (x4075 1000000000000000000 x3539) (and (= (x4860 1000000000000000000 (- x3539 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x3539 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x3539) (- (* x3539 1000000000000000000) (* x3539 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x3539 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x3539 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x3539 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x3539) (* x3539 1000000000000000000)) (x2358 1000000000000000000 x3539) (x244 1000000000000000000 x3539)))
(assert (=> (>= 10000 x856) (= (x2147 x856) (x3059 x856))))
(assert (= (x3311 (x2147 x3637)) x3637))
(assert (= x1778 (x3311 (x2147 x1778))))
(assert (= (and x2364 x1110) x4291))
(assert (x5093 x3942))
(assert (x348 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x5093 x1291))
(assert (x5093 x4488))
(assert (= x2893 (and (not x233) x2115)))
(assert (= (or (and x1083 (not x2469)) (and (not x958) x3162) (and x4791 x3395) (and x294 x2832) x1556 x2959) x1997))
(assert (= x845 (and x1882 (not x2045))))
(assert (= (and (not x731) x4186) x4235))
(assert (x348 x2410))
(assert (x5093 x1125))
(assert (= (and x2627 x4135) x2254))
(assert (= x341 (and x1634 x5359)))
(assert (= x1809 (and x309 x4870)))
(assert (x5093 x5152))
(assert (x185 x4718 x1740))
(assert (x1311 x2908))
(assert (x5093 x4833))
(assert (x1311 x3430))
(assert (= (or x1491 x2066 x4281 x2884 x3173 x3415) x2251))
(assert (x5093 x20))
(assert (= x4416 x4233))
(assert (= (and x4439 x369) x1387))
(assert (x5093 x1287))
(assert (= (and x5069 x5031) x2219))
(assert (x5093 x4240))
(assert (x1311 x64))
(assert (= (x3311 (x2147 x17)) x17))
(assert (x5093 x4772))
(assert (x5093 x2087))
(assert (x5093 x541))
(assert (x1311 x4668))
(assert (= (x2147 405663989) (x3059 405663989)))
(assert (= x1467 (and x1103 x1996)))
(assert (= (and x1747 x1973) x4603))
(assert (= x2663 (and x1536 (not x1481))))
(assert (x5093 x2653))
(assert (= x4916 (and x4326 x2402)))
(assert (x5093 x3080))
(assert (= (and x2644 (not x4861)) x4082))
(assert (x5093 x2619))
(assert (= x4131 (=> (and (= x1233 (x2760 (x2147 x2682) x5090 0)) (= (x4345 x1233 1) x4055) (= (x4345 x4055 1) x4231)) x610)))
(assert (= x5126 (x3311 (x2147 x5126))))
(assert (x5093 x1581))
(assert (x5093 x1613))
(assert (= x4340 (and x5188 x3756)))
(assert (x3294 x1202 x797))
(assert (x1311 x2598))
(assert (x5093 x1275))
(assert (= (and (not x3099) x4108) x128))
(assert (x5093 x2110))
(assert (x5093 x2971))
(assert (x5093 x4209))
(assert (= x3070 (and x3597 x3047)))
(assert (x5093 x1196))
(assert (= x3473 (or x2241 x4412)))
(assert (= x3077 (and x4205 x3150)))
(assert (x5093 x3569))
(assert (x5093 x3261))
(assert (x5093 x2949))
(assert (=> (<= x3022 10000) (= (x2147 x3022) (x3059 x3022))))
(assert (= x1045 (x3311 (x2147 x1045))))
(assert (= (and x3398 x1647) x1031))
(assert (= (x3311 (x2147 x2297)) x2297))
(assert (x5093 x5409))
(assert (x5093 x3799))
(assert (x5093 x2678))
(assert (= (or x1509 x117 x1702 x3286 x2672 x2246) x1340))
(assert (x5093 x1748))
(assert (= x2631 (and x1228 (not x208))))
(assert (= (and x4102 x974) x4652))
(assert (= (and x1313 (not x321)) x3252))
(assert (= (x3311 (x3059 157198259)) 157198259))
(assert (x5093 x771))
(assert (x5093 x3268))
(assert (x5093 x4865))
(assert (x5093 x2009))
(assert (=> (>= 10000 x1045) (= (x3059 x1045) (x2147 x1045))))
(assert (= x4134 (=> (and (= x527 x5103) (= x2771 x2517) (>= x1998 0) (= x1998 (x3279 x3901)) (<= x1998 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1494)))
(assert (= (and (not x3782) x2932) x4919))
(assert (x5093 x4099))
(assert (x5093 x3542))
(assert (x885 x340 x520 x1194 x520))
(assert (x5093 x2688))
(assert (x5093 x3941))
(assert (x5093 x1648))
(assert (x5093 x1660))
(assert (x348 x340))
(assert (x5093 x4934))
(assert (= x2924 (or x1456 x3958)))
(assert (= x4583 (and x3876 x5215)))
(assert (x5093 x5141))
(assert (x5093 x1400))
(assert (= x2004 (and (not x1422) x598)))
(assert (x5093 x1419))
(assert (= x4977 (or x4534 x412)))
(assert (= x1627 (and x4031 x3)))
(assert (x5093 x4385))
(assert (x5093 x3846))
(assert (= x2485 (and (not x2516) x265)))
(assert (x2366 x2299 x1368 x1194 x520))
(assert (x2929 x4611))
(assert (x885 x340 x520 x2299 x1368))
(assert (= (or x3706 x3044 x2102 x2312 x1775 x2369) x213))
(assert (x5093 x2652))
(assert (= (x3311 (x2147 x1222)) x1222))
(assert (x5093 x4558))
(assert (= x4044 (and x2400 x1661)))
(assert (x5093 x5075))
(assert (=> (>= 10000 x724) (= (x2147 x724) (x3059 x724))))
(assert (= (and x3738 x4263) x4274))
(assert (= (and x367 x842) x314))
(assert (x5093 x1789))
(assert (= (x3311 (x2147 x4586)) x4586))
(assert (x5093 x932))
(assert (x5093 x2502))
(assert (= x1193 x969))
(assert (= x872 (and x5206 x1572)))
(assert (x348 1000000000000000000))
(assert (x5093 x2330))
(assert (= (or x143 x1251 x1952) x5094))
(assert (x5131 x5362 x2758))
(assert (= x1191 (and (=> (and x1854 (and (= (x2760 (x2147 x2682) x1785 0) x4189) (= x3419 (ite (< x3870 x520) 1 0)) (= x5415 (ite (not x868) 1 0)) (= (x3658 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1194) x3870) (<= 0 x1194) (= x5356 (x4345 x4189 1)) (= (x1025 x5415 x3419) x5004) (= x1481 (= 0 x5004)) (= x1194 (x2202 x5356)) (= (= x1194 0) x868) (= (x2760 (x2147 x2406) (x3059 159) 0) x1785) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1194))) (and (=> (not x1481) x947) (=> (and x1481 (and (= x2410 (x1741 (x4860 x1194 x520))) (= (< x527 x5162) x62) (= x847 (x3658 x2410 1000000000000000000)))) (and (=> (and (and (= (x4761 (- x527 x5162)) x1884) (= x904 (< x1884 x847))) (not x62)) (and (=> (and (not x904) (and (= (= 0 (ite x44 1 0)) x785) (= (> x847 115792089237316195423570985008687907853269984665640564039457) x44))) (and (=> (and (and (= x2056 (= x144 0)) (= x328 (x1741 (* x847 1000000000000000000))) (= x3390 (x3658 115792089237316195423570985008687907853269984665640564039457584007913129639935 x328)) (= x1688 (= x328 0)) (= (x1025 x4168 x1726) x144) (= x4168 (ite (not x1688) 1 0)) (= x1726 (ite (> 1000000000000000000 x3390) 1 0))) x785) (and (=> (not x2056) x2699) (=> (and (and (= x1457 (> x70 0)) (= x5393 (x1741 (* x328 1000000000000000000)))) x2056) (and (=> (not x1457) x1135) (=> (and (and (= x571 (> x171 x3374)) (= (x3658 x5393 x70) x3769) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x171) (= x171 (x4356 x4189)) (<= 0 x171) (= (x3658 x3769 1000000000000000000) x3821) (= x3374 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3821)))) x1457) (and (=> (and (not x571) (and (= (x3589 (+ x3821 x171)) x2145) (= (> x5162 x3187) x4660) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x847)) x3187))) (and (=> (and (and (= x2145 x4881) (= 0 x771)) (not x4660)) x4845) (=> x4660 x876))) (=> x571 x4421))))))) (=> (not x785) x773))) (=> (and (and (= x1646 (> x1884 115792089237316195423570985008687907853269984665640564039457)) (= (= (ite x1646 1 0) 0) x1574)) x904) (and (=> (and x1574 (and (= (= x2530 0) x1518) (= (x3658 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2530) x4678) (= x546 (ite (> 1000000000000000000 x4678) 1 0)) (= x4043 (= 0 x1291)) (= x1291 (x1025 x3224 x546)) (= (x1741 (* 1000000000000000000 x1884)) x2530) (= x3224 (ite (not x1518) 1 0)))) (and (=> (and (and (= (x1741 (* 1000000000000000000 x2530)) x5021) (= x3234 (< 0 x520))) x4043) (and (=> (and x3234 (and (= (< x4553 x4349) x5072) (<= 0 x4553) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4553) (= x4349 (x3658 x3001 1000000000000000000)) (= x4553 (x2202 x5356)) (= x3001 (x3658 x5021 x520)))) (and (=> x5072 x462) (=> (and (not x5072) (and (= x2915 (= 0 (ite x720 1 0))) (= x3998 (x4761 (- x4553 x4349))) (= (> x1884 115792089237316195423570985008687907853269984665640564039457) x720))) (and (=> (and x2915 (and (= x1111 (x1025 x1694 x2718)) (= (= 0 x1111) x3635) (= x1694 (ite (not x2309) 1 0)) (= (x3658 115792089237316195423570985008687907853269984665640564039457584007913129639935 x24) x22) (= (= x24 0) x2309) (= (ite (> 1000000000000000000 x22) 1 0) x2718) (= x24 (x1741 (* 1000000000000000000 x1884))))) (and (=> (not x3635) x4416) (=> (and (and (= (x1741 (* 1000000000000000000 x24)) x1124) (= x3351 (> x70 0))) x3635) (and (=> (not x3351) x1159) (=> (and x3351 (and (= x1753 (x3658 x1124 x70)) (= (x3658 x1753 1000000000000000000) x688) (<= x2197 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2003 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x688))) (= (x4356 x4189) x2197) (= (< x2003 x2197) x660) (<= 0 x2197))) (and (=> x660 x4247) (=> (and (and (= x3998 x771) (= x5130 (x3589 (+ x2197 x688))) (= x5130 x4881)) (not x660)) x4845))))))) (=> (not x2915) x5328))))) (=> (not x3234) x5033))) (=> (not x4043) x2257))) (=> (not x1574) x4642))))) (=> x62 x3493))))) (=> (and (and (= x4317 x2439) (= x4459 x5162)) (not x1854)) x729))))
(assert (= (x3311 (x4345 x3586 1)) (+ 1 (x3311 x3586))))
(assert (= (and x4569 x3136) x5101))
(assert (x3294 x4168 x1726))
(assert (x5093 x2067))
(assert (=> (>= 10000 x4242) (= (x2147 x4242) (x3059 x4242))))
(assert (x5093 x3479))
(assert (=> (<= x2988 10000) (= (x3059 x2988) (x2147 x2988))))
(assert (= x860 (and x3043 (not x5398))))
(assert (= (and (not x4812) x4141) x1783))
(assert (x5093 x2867))
(assert (= (and x2323 x4454) x5088))
(assert (= (+ (x3311 x1117) 1) (x3311 (x4345 x1117 1))))
(assert (= (and (not x4072) x3954) x1288))
(assert (= x413 (or (and (not x5251) x9) x1346)))
(assert (x5093 x964))
(assert (x5093 x1429))
(assert (x5093 x2419))
(assert (= (and (not x1759) x2263) x2749))
(assert (= (and x4623 (not x5058)) x2250))
(assert (x5093 x847))
(assert (= (or x682 x3645) x678))
(assert (x5093 x2754))
(assert (x5093 x3641))
(assert (= x3919 (and (=> (and (and (= 0 x1983) (= x5140 x5192)) (not x3992)) x1935) (=> (and (and (and (<= 0 x411) (> 1461501637330902918203684832716283019655932542976 x411) (= (ite (< 1 x4748) (not (= 0 x411)) (< 1 x4748)) x2638) (= (x4345 x3776 1) x3133) (<= x411 1461501637330902918203684832716283019655932542975) (= (x2709 x3133) x411) (= (x2760 (x2147 x5192) x3872 0) x3776)) (or (and (and (= (not x4973) x3652) (<= x3170 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4973 (< x3170 x2897)) (<= 0 x3170) (= x1453 (x4345 x2590 2)) (= x3170 (x2797 x1453)) (= (x2760 (x2147 x411) x3872 0) x2590)) x2638) (and (= x3652 x2638) (not x2638)))) x3992) x1054))))
(assert (= (and (not x5064) x4709) x1610))
(assert (=> (>= 10000 x2118) (= (x3059 x2118) (x2147 x2118))))
(assert (x5093 x2063))
(assert (x5093 x923))
(assert (x5093 x2842))
(assert (x5093 x422))
(assert (= (and x1852 (not x562)) x4630))
(assert (x1311 x1549))
(assert (= (+ 1 (x3311 x5423)) (x3311 (x4345 x5423 1))))
(assert (x5093 x2491))
(assert (x5093 x2901))
(assert (= 988262939 (x3311 (x3059 988262939))))
(assert (= x1719 (or x2213 x4029)))
(assert (x1405 x2512))
(assert (x5093 x4197))
(assert (x5093 x522))
(assert (x1311 x1032))
(assert (x5093 x1731))
(assert (x5093 x1257))
(assert (x3331 x2299))
(assert (x5093 x803))
(assert (x5093 x3264))
(assert (x5093 x2520))
(assert (= (x3311 (x2147 x1440)) x1440))
(assert (x5093 x97))
(assert (= x5181 (x3311 (x2147 x5181))))
(assert (= (=> (and (= x5358 x4628) (= x474 x701)) x4613) x4975))
(assert (x2366 x520 x1194 x2299 x1368))
(assert (= (and x3340 (not x5123)) x2176))
(assert (= x760 (or x5355 x5184)))
(assert (= (+ (x3311 x1447) 1) (x3311 (x4345 x1447 1))))
(assert (x5093 x1059))
(assert (x5093 x3881))
(assert (x1311 x2168))
(assert (x5093 x4491))
(assert (x5093 x3741))
(assert (= (and x3037 (not x2579)) x890))
(assert (= x1849 (=> (= x3896 (> x211 0)) (and (=> (and (not x3896) (= x2675 x3704)) x2989) (=> (and (and (>= x4748 0) (= x354 (= 0 x4357)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4748)) x3896) (and (=> (and (not x354) (and (>= x3434 0) (= (x2760 (x2147 x4357) x4855 0) x3867) (= (x4345 x3867 2) x5156) (= (x5245 x5156) x3434) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3434) (= (= 0 x3434) x562))) (and (=> (and (and (or (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5003) (= (> x211 x5003) x4288) (<= 0 x5003) (= x2985 (x4345 x491 2)) (= x491 (x2760 (x2147 x2414) x4855 0)) (= (x5245 x2985) x5003) (= (not x4288) x3782)) x3568) (and (not x3568) (= x3782 x3568))) (and (>= 1461501637330902918203684832716283019655932542975 x2414) (= x3889 (x4345 x4855 1)) (= x2414 (x4085 x3889)) (> 1461501637330902918203684832716283019655932542976 x2414) (= (ite (< 0 x4748) (not (= x2414 0)) (> x4748 0)) x3568) (<= 0 x2414))) x562) x2010) (=> (not x562) x874))) (=> x354 x173)))))))
(assert (= (and x2996 (not x2511)) x2016))
(assert (x5093 x2694))
(assert (= x849 (and x4217 x2978)))
(assert (= x3258 (and (not x5080) x3600)))
(assert (and (x1458 x3985 1000000000000000000) (x1175 x3985 1000000000000000000) (=> (and (> x3985 0) (< 0 1000000000000000000)) (and (> (* (x3658 x3985 1000000000000000000) 1000000000000000000) (- x3985 1000000000000000000)) (<= (* 1000000000000000000 (x3658 x3985 1000000000000000000)) x3985))) (x5235 x3985 1000000000000000000) (x2792 x3985 1000000000000000000)))
(assert (x5093 x4944))
(assert (x5093 x3777))
(assert (x5093 x3828))
(assert (= x1823 (x3311 (x2147 x1823))))
(assert (x5093 x795))
(assert (= (and x953 x4862) x4744))
(assert (x5093 x4599))
(assert (x5093 x646))
(assert (= x2895 (and x4073 (not x3071))))
(assert (x5093 x2913))
(assert (= (and x5251 x9) x1346))
(assert (x5093 x2880))
(assert (= (and (not x2464) x1372) x792))
(assert (= (x3311 (x2147 x1435)) x1435))
(assert (= (and x2107 (not x386)) x4621))
(assert (x3294 x533 x3803))
(assert (x1311 x1581))
(assert (x5093 x788))
(assert (= (x3311 (x4345 x3411 1)) (+ (x3311 x3411) 1)))
(assert (= (and x4313 x3476) x3125))
(assert (= (and x1086 (not x2523)) x5002))
(assert (x479 x154))
(assert (= x3425 (and (not x334) x538)))
(assert (x5093 x5266))
(assert (= x4672 (=> (= x398 (> x197 0)) (and (=> (and x398 (and (= x4355 (x1025 1461501637330902918203684832716283019655932542975 x1015)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4748) (<= 0 x4748) (= x2150 (= x4355 0)))) (and (=> x2150 x1172) (=> (and (and (= x2196 (x4345 x1327 2)) (= (x2501 x2196) x2277) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2277) (= x4995 (= x2277 0)) (= (x2760 (x2147 x4559) x1117 0) x1327) (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x4559) (>= x2277 0)) (not x2150)) (and (=> (not x4995) x1172) (=> (and x4995 (and (and (= x537 (x1131 x853)) (= x853 (x4345 x1117 1)) (<= x537 1461501637330902918203684832716283019655932542975) (>= x537 0) (= x4943 (ite (> x4748 0) (not (= x537 0)) (> x4748 0))) (> 1461501637330902918203684832716283019655932542976 x537)) (or (and x4943 (and (= (< x5353 x197) x4234) (= x2354 (x4345 x3783 2)) (= x3783 (x2760 (x2147 x537) x1117 0)) (<= 0 x5353) (= (not x4234) x613) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5353) (= x5353 (x2501 x2354)))) (and (= x613 x4943) (not x4943))))) x303))))) (=> (not x398) x481)))))
(assert (= (=> (and (= x4593 x3936) (= x276 x1942)) x4052) x2519))
(assert (= (and x3329 x1840) x3523))
(assert (= x3647 (and (not x774) x640)))
(assert (= x5122 (or x2051 x2770)))
(assert (= x4324 (=> (and (= x3080 x4978) (= x322 x97)) x503)))
(assert (= x664 (and x3320 x3649)))
(assert (= (and x4917 x4124) x3608))
(assert (= (and x2135 (not x4955)) x707))
(assert (= x811 (and x128 (not x4013))))
(assert (x5093 x797))
(assert (= x5112 (and x3238 x890)))
(assert (x5093 x3947))
(assert (= x426 (or (and x5143 x752) (and x280 x587))))
(assert (= (or x3079 x5273) x4948))
(assert (x5093 x710))
(assert (= (and (not x3623) x3371) x4985))
(assert (= x1975 (and x859 x4598)))
(assert (= 1865448899 (x3311 (x3059 1865448899))))
(assert (= x2907 (and x2428 (not x1236))))
(assert (= (=> (= x2701 (= 0 x789)) (and (=> (and (not x2701) (and (= x3934 (x1025 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1784)) (= x1784 (x3589 (+ 31 x2335))) (= (x3589 (+ x835 x3934)) x4591) (= x1116 (or (> x2335 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x2335 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x2335)))))) (and (=> (and (and (or (and x1281 (and (>= x2223 0) (> 1461501637330902918203684832716283019655932542976 x2223) (= (not x2860) x2674) (= (x2760 (x2147 x2406) (x3059 157) 0) x5439) (= x4357 x2223) (>= 1461501637330902918203684832716283019655932542975 x2223) (= x268 (x4345 x5439 1)) (= (x2344 x268) x2223) (= x2860 (= 0 x2223)))) (and (not x1281) (and (= 0 x4357) (= x1281 x2674)))) (and (= (x2584 x835) x520) (<= x70 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4010 (x2760 (x2147 x2406) (x3059 165) 0)) (= (> x527 0) x1281) (<= 0 x70) (= x70 (x5305 x4010)))) (not x1116)) x5222) (=> (and (= true x4986) x1116) x4001))) (=> x2701 x1172))) x1697))
(assert (= (or x4980 x1352) x186))
(assert (x5131 x4645 x5403))
(assert (= (x3311 (x2147 x4408)) x4408))
(assert (x5093 x861))
(assert (x5093 x697))
(assert (x5093 x3722))
(assert (x5093 x3847))
(assert (x5093 x3680))
(assert (= x917 (and (not x1116) x1593)))
(assert (x5093 x4815))
(assert (= x1104 (=> (and (= x2118 (x1025 1461501637330902918203684832716283019655932542975 x1015)) (= x5099 (x2760 (x2147 x2118) x2810 0)) (= (x4345 x4298 1) x1614) (= (x4345 x5099 1) x4298)) x2416)))
(assert (x4437 x2512))
(assert (= (x3311 (x2147 x3795)) x3795))
(assert (x5093 x4594))
(assert (= x167 (and x1379 (not x42))))
(assert (= (x3311 (x4345 x4855 1)) (+ (x3311 x4855) 1)))
(assert (= x5387 (and (not x1874) x1389)))
(assert (x5093 x2504))
(assert (= (=> (and (= x4450 x3641) (= x3357 x1277)) x2236) x391))
(assert (= x2312 (and x3470 x2221)))
(assert (= (=> (and (= x701 x5331) (= x2153 x4628)) x4613) x3451))
(assert (= x617 (x3311 (x2147 x617))))
(assert (= x1690 (and (not x256) x2829)))
(assert (x2366 x1368 x2299 x1194 x520))
(assert (x4437 x1184))
(assert (x5093 x1426))
(assert (and (x4259 1000000000000000000 x2509) (x887 1000000000000000000 x2509) (x4075 1000000000000000000 x2509) (and (= (x4860 1000000000000000000 (- x2509 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x2509 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x2509) (- (* x2509 1000000000000000000) (* x2509 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x2509 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x2509 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x2509 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x2509) (* x2509 1000000000000000000)) (x2358 1000000000000000000 x2509) (x244 1000000000000000000 x2509)))
(assert (= (and x5270 x2170) x2920))
(assert (x5093 x4708))
(assert (x5093 x2068))
(assert (x5093 x3998))
(assert (x5093 x4721))
(assert (=> (<= x473 10000) (= (x3059 x473) (x2147 x473))))
(assert (= x2629 (or x4935 x1569)))
(assert (= (x3311 (x2147 x2228)) x2228))
(assert (x4437 x226))
(assert (= (or x553 x2713) x1862))
(assert (= x2227 (and x4963 x437)))
(assert (= (+ 2 (x3311 x4855)) (x3311 (x4345 x4855 2))))
(assert (= (and x1028 (not x5067)) x2799))
(assert (x5093 x1176))
(assert (x5093 x5268))
(assert (x5093 x1270))
(assert (= (and (not x579) x4912) x3393))
(assert (= x1413 (and (not x2553) x1611)))
(assert (x3331 x2509))
(assert (and (x1458 x5220 1000000000000000000) (x1175 x5220 1000000000000000000) (=> (and (> x5220 0) (< 0 1000000000000000000)) (and (> (* (x3658 x5220 1000000000000000000) 1000000000000000000) (- x5220 1000000000000000000)) (<= (* 1000000000000000000 (x3658 x5220 1000000000000000000)) x5220))) (x5235 x5220 1000000000000000000) (x2792 x5220 1000000000000000000)))
(assert (= (and x1870 x3365) x494))
(assert (= (and (not x1393) x2533) x2351))
(assert (x5093 x148))
(assert (x5093 x1045))
(assert (= (=> (and (= x4477 x353) (= x32 x3342)) x325) x4402))
(assert (=> (>= 10000 x2179) (= (x2147 x2179) (x3059 x2179))))
(assert (= x2489 (and x3595 x373)))
(assert (x3331 x520))
(assert (x5093 x4752))
(assert (= (and x4622 x4537) x3318))
(assert (x5093 x2858))
(assert (= (and (not x769) x2786) x650))
(assert (= x3882 (=> (and (= x4209 0) (= x3892 x2491)) x5114)))
(assert (x5093 x2617))
(assert (x5131 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2880))
(assert (x479 x1184))
(assert (x1311 x1758))
(assert (= (and x2635 (not x2470)) x1365))
(assert (x3331 x712))
(assert (= x3253 (and x1129 (not x4994))))
(assert (x5093 x1323))
(assert (x5093 x2207))
(assert (x5093 x5157))
(assert (= (and x4995 x469) x1867))
(assert (= (and x4576 (not x1679)) x559))
(assert (x5093 x2853))
(assert (x5093 x2028))
(assert (= x4463 (and x413 x2883)))
(assert (= (+ 1 (x3311 x4612)) (x3311 (x4345 x4612 1))))
(assert (x5093 x83))
(assert (= x1630 (=> (and (= 0 x103) (= x2271 x2491)) x5036)))
(assert (= (and x3315 (not x493)) x4284))
(assert (x1311 x3869))
(assert (= (+ 2 (x3311 x3783)) (x3311 (x4345 x3783 2))))
(assert (= (or (and x3960 x1627) (and x3121 (not x4110))) x4918))
(assert (x5093 x2565))
(assert (x1311 x3827))
(assert (x479 x4607))
(assert (x5093 x1727))
(assert (x5093 x1318))
(assert (x5093 x2964))
(assert (= (+ (x3311 x5090) 2) (x3311 (x4345 x5090 2))))
(assert (x2366 x340 x520 x1368 x2299))
(assert (= (and x4284 x2044) x2459))
(assert (= (and x2820 (not x2329)) x1145))
(assert (= x5372 (and x4319 (not x838))))
(assert (x5093 x3505))
(assert (x4437 x2595))
(assert (x5093 x2225))
(assert (= (and x1671 x2116) x4649))
(assert (x4437 x697))
(assert (x5093 x180))
(assert (= x1284 (and x2993 x4047)))
(assert (x5093 x4403))
(assert (= (+ (x3311 x3723) 1) (x3311 (x4345 x3723 1))))
(assert (x5093 x3342))
(assert (x5093 x665))
(assert (x5093 x555))
(assert (x5093 x2937))
(assert (= x4428 (x3311 (x2147 x4428))))
(assert (= (and x3816 x2211) x2495))
(assert (x5093 x1533))
(assert (x5093 x2793))
(assert (x5093 x5342))
(assert (= (and (not x351) x670) x2521))
(assert (= (and (=> (and x1043 (and (or (and (and (<= 0 x980) (= x3579 (< x980 x275)) (<= x980 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5392 x2012) x980) (= (not x3579) x1819) (= x271 (x2760 (x2147 x1971) x2810 0)) (= x2012 (x4345 x271 2))) x961) (and (= x1819 x961) (not x961))) (and (= x3325 (x4345 x5030 1)) (>= x1971 0) (= x5030 (x2760 (x2147 x2297) x2810 0)) (= (x1171 x3325) x1971) (>= 1461501637330902918203684832716283019655932542975 x1971) (< x1971 1461501637330902918203684832716283019655932542976) (= (ite (> x4748 1) (not (= 0 x1971)) (> x4748 1)) x961)))) x3893) (=> (and (and (= x2178 x2297) (= x4951 0)) (not x1043)) x5178)) x908))
(assert (= (x3311 (x4345 x5204 1)) (+ (x3311 x5204) 1)))
(assert (= x1416 (and (not x5341) x1937)))
(assert (= x4837 (=> (and (= 0 x585) (= x2997 x1426)) x4637)))
(assert (x5093 x758))
(assert (x5093 x4349))
(assert (=> (>= 10000 x3806) (= (x3059 x3806) (x2147 x3806))))
(assert (x1311 x2942))
(assert (x5093 x150))
(assert (x5093 x2648))
(assert (x5093 x585))
(assert (x2929 x4718))
(assert (x5093 x5146))
(assert (x5093 x3996))
(assert (= x4377 (x3311 (x2147 x4377))))
(assert (= x2095 (and (not x3015) x2345)))
(assert (x5093 x527))
(assert (x4437 x2225))
(assert (= (x2147 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x3059 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= x4797 (and (not x2192) x1066)))
(assert (x5093 x4018))
(assert (x5093 x5330))
(assert (= x173 x1172))
(assert (x1311 x1893))
(assert (= x1707 (and x4384 x4120)))
(assert (x5093 x3795))
(assert (x5093 x2682))
(assert (x5093 x1963))
(assert (=> (<= x4786 10000) (= (x3059 x4786) (x2147 x4786))))
(assert (= x615 (and (not x3653) x776)))
(assert (x1311 x4377))
(assert (and (x1458 x3769 1000000000000000000) (x1175 x3769 1000000000000000000) (=> (and (> x3769 0) (< 0 1000000000000000000)) (and (> (* (x3658 x3769 1000000000000000000) 1000000000000000000) (- x3769 1000000000000000000)) (<= (* 1000000000000000000 (x3658 x3769 1000000000000000000)) x3769))) (x5235 x3769 1000000000000000000) (x2792 x3769 1000000000000000000)))
(assert (x5093 x2908))
(assert (x5093 x839))
(assert (x5093 x3734))
(assert (x5093 x32))
(assert (= (+ 2 (x3311 x1711)) (x3311 (x4345 x1711 2))))
(assert (x5093 x1187))
(assert (= x4099 (x3311 (x2147 x4099))))
(assert (= (and x3498 (not x1366)) x4839))
(assert (= (and x4690 x2674) x2562))
(assert (= (and (not x4963) x437) x2609))
(assert (= x2536 (or x3104 x5043)))
(assert (x3294 x2473 x1003))
(assert (x348 x1689))
(assert (x5093 x1666))
(assert (= (=> (and (= x4471 x2780) (= x1382 x4674) (= x2418 x2783) (= x3324 x3685)) x2894) x2188))
(assert (= x2968 (and x1891 x3809)))
(assert (x5093 x3390))
(assert (= x1411 (or x3215 x5225)))
(assert (x5093 x5233))
(assert (= x1728 (and x786 x2092)))
(assert (= x2912 (and x2518 (not x649))))
(assert (= (or x3361 x2059) x703))
(assert (= (and x564 x4042) x3415))
(assert (x479 x1784))
(assert (= x2820 (and x742 x1101)))
(assert (= (or x818 x3007) x3297))
(assert (x1311 x2867))
(assert (= x2927 (or (and x4648 (not x4759)) x1900)))
(assert (x5093 x1942))
(assert (x5093 x13))
(assert (= x2713 (and x1244 x3918)))
(assert (= x1493 (and (not x3808) x3659)))
(assert (= x2843 (and x1007 x1240)))
(assert (x5093 x1554))
(assert (x5093 x1258))
(assert (= (and x1050 (not x3444)) x5109))
(assert (x5093 x2104))
(assert (= (x3311 (x2147 x2168)) x2168))
(assert (x5093 x3685))
(assert (x5093 x3225))
(assert (x2366 x340 x520 x520 x1194))
(assert (x5093 x2185))
(assert (x2366 x520 x340 x1194 x520))
(assert (= (and x3629 x5410) x2241))
(assert (= (x3311 (x3059 398450620)) 398450620))
(assert (x5093 x5085))
(assert (x1311 x2982))
(assert (= x1011 (and x1625 x1438)))
(assert (x5131 x4971 x4568))
(assert (= (x3311 (x2147 x4594)) x4594))
(assert (=> (<= x1581 10000) (= (x2147 x1581) (x3059 x1581))))
(assert (= (and (=> (and (not x1819) (and (= 1 x4951) (= x2178 x1971))) x5178) (=> x1819 x4566)) x3893))
(assert (x5093 x5195))
(assert (= 2796547477 (x3311 (x3059 2796547477))))
(assert (x348 x4971))
(assert (x1405 x595))
(assert (x5093 x5044))
(assert (x5093 x1762))
(assert (= (and x4986 x2734) x1384))
(assert (x5093 x1591))
(assert (= (x3311 (x4345 x853 1)) (+ 1 (x3311 x853))))
(assert (x3331 (- x340 x1368)))
(assert (x5093 x3786))
(assert (=> (>= 10000 x3168) (= (x2147 x3168) (x3059 x3168))))
(assert (x5093 x1957))
(assert (= x5351 (and x4364 (not x1263))))
(assert (x5093 x2961))
(assert (= x3006 (and x1541 x2055)))
(assert (= (=> (and (= x465 x1583) (= x3887 x3440) (= x2331 x2509)) x489) x4436))
(assert (= (x3311 (x2147 x4242)) x4242))
(assert (= x3538 (and x296 (not x3607))))
(assert (x5093 x5076))
(assert (= (and (not x37) x2673) x2946))
(assert (x3513 x520 (- x1194 x340)))
(assert (= x2598 (x3311 (x2147 x2598))))
(assert (x5093 x1368))
(assert (= (and x2749 (not x4309)) x3600))
(assert (= x2174 (and x4211 x507)))
(assert (x5093 x1370))
(assert (= (and x2490 x1047) x108))
(assert (x5093 x2466))
(assert (x5093 x5360))
(assert (x5093 x3618))
(assert (= (or x393 x95) x3426))
(assert (= (or x1872 x751) x4698))
(assert (=> (>= 10000 x3957) (= (x2147 x3957) (x3059 x3957))))
(assert (x5093 x3584))
(assert (= (and x958 x3162) x1083))
(assert (x5093 x24))
(assert (= x5361 (and x5122 (not x2032))))
(assert (x5093 x4889))
(assert (= (and x3703 x2839) x3285))
(assert (= x2739 (and x1031 (not x576))))
(assert (= x687 (and x5396 x1161)))
(assert (= (and x4505 x3003) x4378))
(assert (=> (>= 10000 x1823) (= (x3059 x1823) (x2147 x1823))))
(assert (= (x3311 (x4345 x3901 1)) (+ (x3311 x3901) 1)))
(assert (x1311 x411))
(assert (= (and x3077 x3727) x3891))
(assert (x5093 x1225))
(assert (= x309 (and x2582 x3208)))
(assert (x5093 x3242))
(assert (x5093 x5325))
(assert (= x48 (or x494 (and (not x3365) x1870))))
(assert (x5093 x2394))
(assert (= (x2147 157198259) (x3059 157198259)))
(assert (= x3063 (and (not x2376) x3833)))
(assert (= (and (not x3134) x4545) x4780))
(assert (x5093 x5319))
(assert (= x1333 (and x1629 (not x1781))))
(assert (= (=> (and (or (and (and (or (and (not x3832) (and (>= 1461501637330902918203684832716283019655932542975 x1653) (= x1653 (x2917 x4983)) (= x2375 (x2760 (x2147 x4357) x4855 0)) (<= 0 x1653) (= x3578 (x4345 x3276 1)) (= (x2760 (x2147 x1653) x4855 0) x3276) (= (x4345 x3889 1) x4983) (> 1461501637330902918203684832716283019655932542976 x1653) (= x2626 (x3589 (+ 96 x3704))) (= x2934 x2626) (= x794 (x4345 x2200 1)) (= (x4345 x2375 1) x2200))) (and x3832 (and (= (x4345 x4283 1) x2090) (= (x4345 x3889 1) x4000) (= x5246 (x3589 (+ 96 x3704))) (= (x4345 x2090 1) x690) (= x5246 x2934) (= x4283 (x2760 (x2147 x4357) x4855 0))))) (and (>= x4385 0) (= (x4085 x3889) x4385) (> 1461501637330902918203684832716283019655932542976 x4385) (>= 1461501637330902918203684832716283019655932542975 x4385) (= x3832 (= x4385 0)))) (not x920)) (and (and (or (and (and (= x3321 (x2760 (x2147 x4357) x4855 0)) (= x1213 (x4345 x2144 1)) (= (x4345 x3321 1) x2144) (<= x730 1461501637330902918203684832716283019655932542975) (= x1590 (x4345 x3723 1)) (< x730 1461501637330902918203684832716283019655932542976) (= x1459 (x2760 (x2147 x1318) x4855 0)) (= x2934 x2130) (<= 0 x730) (= x3723 (x2760 (x2147 x730) x4855 0)) (= (x3589 (+ x3704 96)) x2130) (= (x2760 (x2147 x1318) x4855 0) x4202) (= (x929 x4202) x730)) x706) (and (not x706) (and (= (x3589 (+ x3704 96)) x2111) (= x2934 x2111) (= x3667 (x4345 x2265 1)) (= x1770 (x2760 (x2147 x1318) x4855 0)) (= (x4345 x3404 1) x2265) (= x3404 (x2760 (x2147 x4357) x4855 0))))) (and (= (x4085 x3889) x4254) (>= 1461501637330902918203684832716283019655932542975 x4254) (< x4254 1461501637330902918203684832716283019655932542976) (= (> x3484 0) x706) (= x3484 (x4761 (- x1318 x4254))) (>= x4254 0))) x920)) (= (ite (< x4017 x4748) (not (= 0 x1318)) (< x4017 x4748)) x920)) x5052) x4351))
(assert (= (+ 2 (x3311 x556)) (x3311 (x4345 x556 2))))
(assert (x1311 x3794))
(assert (= (and x5154 x1500) x1228))
(assert (x5093 x3806))
(assert (=> (>= 10000 x5376) (= (x2147 x5376) (x3059 x5376))))
(assert (x5093 x4474))
(assert (= (and (not x2374) x1922) x1585))
(assert (= (=> (and (or x1665 (not x1665)) (= x1665 (= 0 x2730))) x2818) x2300))
(assert (x5093 x2886))
(assert (x5093 x4863))
(assert (= (or (and x4987 x4619) (and x4784 (not x3236)) (and (not x905) x3091) x4365 (and x2108 x2186) x3127) x166))
(assert (= (and (not x3703) x2839) x2764))
(assert (x5093 x3049))
(assert (x5093 x3625))
(assert (=> (>= 10000 x1906) (= (x2147 x1906) (x3059 x1906))))
(assert (x5093 x1111))
(assert (x5093 x5445))
(assert (= (=> (and (= x1838 0) (= x3956 x2491)) x3773) x2948))
(assert (x5093 x2118))
(assert (x1311 x1691))
(assert (x4437 x1694))
(assert (= (and (not x3797) x3966) x2533))
(assert (x4783 x2889))
(assert (= (=> (and (= x3115 x5294) (= x1897 x5315) (= x2969 x686) (= x1523 x596)) x2415) x1525))
(assert (= (x3311 (x3059 77053863734975077137548456399560439977311721439096602559221323163398253314048)) 77053863734975077137548456399560439977311721439096602559221323163398253314048))
(assert (x5093 x4884))
(assert (x5093 x4871))
(assert (x5093 x533))
(assert (= x3507 (and x1783 x3028)))
(assert (=> (<= x5432 10000) (= (x3059 x5432) (x2147 x5432))))
(assert (x5093 x4940))
(assert (= (and x431 (not x4723)) x1500))
(assert (= (and (not x160) x4565) x1715))
(assert (= x4619 (and x4775 x1434)))
(assert (= (=> (or (and x3335 (and (= (x2344 x563) x3345) (>= 1461501637330902918203684832716283019655932542975 x3345) (< x3345 1461501637330902918203684832716283019655932542976) (<= 0 x3345) (= x1516 (= x3345 0)) (= x563 (x4345 x3687 1)) (= (not x1516) x960) (= (x2760 (x2147 x2406) (x3059 157) 0) x3687))) (and (not x3335) (= x3335 x960))) x440) x3081))
(assert (= x3793 (and x2640 x4314)))
(assert (x2366 x2299 x1368 x340 x520))
(assert (x1311 x804))
(assert (= x472 (and (not x5329) x3924)))
(assert (x5093 x1814))
(assert (= x1509 (and x4777 x1889)))
(assert (x5093 x3871))
(assert (= x3016 (and x1085 (not x3995))))
(assert (= x2416 (=> (= x2170 (> x275 0)) (and (=> (not x2170) x2448) (=> (and (and (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x2546) (= (= x2546 0) x1977) (<= x4748 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4748 0)) x2170) (and (=> (and (and (= (= x4321 0) x1647) (= x4321 (x5392 x2645)) (= (x4345 x2033 2) x2645) (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x2802) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4321) (>= x4321 0) (= (x2760 (x2147 x2802) x2810 0) x2033)) (not x1977)) (and (=> (not x1647) x1172) (=> (and x1647 (and (or (and (not x576) (= x576 x1043)) (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3941) (<= 0 x3941) (= x4498 (x2760 (x2147 x2297) x2810 0)) (= x1043 (not x3283)) (= x3283 (> x275 x3941)) (= x3941 (x5392 x3265)) (= (x4345 x4498 2) x3265)) x576)) (and (= (x5252 x2270) x2297) (>= x2297 0) (= x576 (ite (> x4748 0) (not (= 0 x2297)) (< 0 x4748))) (<= x2297 1461501637330902918203684832716283019655932542975) (= x2270 (x4345 x2810 1)) (> 1461501637330902918203684832716283019655932542976 x2297)))) x908))) (=> x1977 x1172)))))))
(assert (x5093 x285))
(assert (= x5262 (and (not x660) x1969)))
(assert (= x2699 x4233))
(assert (x5093 x5126))
(assert (= x5335 (=> (and (= x973 x5297) (= x3124 x1725)) x1121)))
(assert (x5093 x414))
(assert (= x2951 (and x3760 (not x1916))))
(assert (x5093 x4425))
(assert (x5093 x3993))
(assert (x5093 x1583))
(assert (x5093 x1555))
(assert (x5093 x2079))
(assert (x3294 x1930 x962))
(assert (= (and x1325 x3564) x2447))
(assert (= x481 x3137))
(assert (= x1615 (and x2428 x1236)))
(assert (= (and x146 x2455) x5322))
(assert (= (and x1977 x2920) x4716))
(assert (= x3706 (and x2347 (not x1147))))
(assert (= (and x4004 x5425) x1649))
(assert (=> (<= x1778 10000) (= (x2147 x1778) (x3059 x1778))))
(assert (x5093 x988))
(assert (x5093 x35))
(assert (x5093 x3952))
(assert (= x3917 (=> (and (= x5219 0) (= x3495 x2542)) x5059)))
(assert (= (and (not x972) x2478) x4574))
(assert (x5093 x4375))
(assert (= (and x4384 (not x4120)) x4171))
(assert (x5093 x1800))
(assert (x5093 x4434))
(assert (= x4664 (and (not x1892) x5310)))
(assert (=> (>= 10000 x4586) (= (x3059 x4586) (x2147 x4586))))
(assert (x5093 x5161))
(assert (x5093 x3643))
(assert (= (x3311 (x2147 x3794)) x3794))
(assert (x5093 x3158))
(assert (= (x3311 (x2147 x4632)) x4632))
(assert (x5093 x4115))
(assert (x3513 x1194 x520))
(assert (x5093 x1348))
(assert (= x1421 (and x78 x3714)))
(assert (x5093 x2411))
(assert (x348 x1055))
(assert (= x976 (=> (and (= (> x2140 0) x2747) (= (ite (< 31 x701) 1 0) x3205) (= (x1025 x2595 x3205) x4611) (= (ite (= (x3059 1) x4776) 1 0) x2595) (= (x3707 x4611 x2409) x2842) (= x2140 (x1025 x2842 x4628)) (= x2409 (ite (= x701 0) 1 0))) (and (=> (and x2747 (and (or (and (not x2796) (and (= x3305 (= x2406 x4721)) (or (and (not x3305) (and (= (= x2406 x4287) x1455) (and (and (not (= x812 2796547477)) (not (= x812 2691771752)) (= 1 x286) (not (> 2691771752 x812)) (= x943 (x3736 (x2147 x4287))) (not (> 4 x1700)) (= x2720 77053863734975077137548456399560439977311721439096602559221323163398253314048) (<= x4782 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x812 2858086653) (>= x4782 0) (> 2929553584 x812) (> x943 0) (= x3308 32) (not (= 2835717307 x812)) (not (< x812 2217467699)) (= x1700 4) (= x1700 x2273)) x1455))) (and x3305 (and (= x4570 4) (not (= x791 2835717307)) (>= x4580 0) (not (= 2796547477 x791)) (not (< x4570 4)) (<= x4580 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x791 2691771752)) (= x3308 32) (= 2858086653 x791) (< 0 x4950) (= x4950 (x3736 (x2147 x4721))) (not (> 2217467699 x791)) (= 1 x286) (not (= 2691771752 x791)) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x366) (< x791 2929553584) (= x2273 x4570)))))) (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4161) (= 1 x286) (= 32 x3308) (not (= x1803 2796547477)) (= x4103 4) (= x4103 x2273) (not (= 2691771752 x1803)) (>= x4161 0) (not (> 2691771752 x1803)) (not (< x4103 4)) (= x4573 (x3736 (x2147 x2179))) (not (< x1803 2217467699)) (= 77053863734975077137548456399560439977311721439096602559221323163398253314048 x2861) (= 2858086653 x1803) (> 2929553584 x1803) (< 0 x4573) (not (= 2835717307 x1803))) x2796)) (and (= (x3589 (+ 96 x362)) x3753) (= (= x2406 x2179) x2796) (= x601 (x2760 (x2147 x2406) (x3059 169) 0)) (= x2273 4)))) x840) (=> (not x2747) x1172)))))
(assert (= (and (not x1371) x4044) x3452))
(assert (x5093 x4828))
(assert (x5093 x582))
(assert (x348 x1368))
(assert (= x4685 (x3311 (x2147 x4685))))
(assert (= x5324 (and x785 x621)))
(assert (= (and x3725 (not x2266)) x3632))
(assert (x5093 x5397))
(assert (= x5424 (and (not x1628) x4993)))
(assert (= (and x636 x1206) x3142))
(assert (x5093 x1205))
(assert (x5093 x1955))
(assert (= x279 (and x1424 x2716)))
(assert (=> (<= x39 10000) (= (x3059 x39) (x2147 x39))))
(assert (x5093 x4802))
(assert (x5093 x1448))
(assert (x5093 x1162))
(assert (= x320 (and x5122 x2032)))
(assert (= x2614 (x3311 (x2147 x2614))))
(assert (= (and x1043 x3620) x4756))
(assert (= (or x4803 x984) x4187))
(assert (= (or x3514 x4548 x1596 x2328 x869 x3347) x2015))
(assert (x5093 x1599))
(assert (x5093 x3790))
(assert (x5093 x677))
(assert (x5093 x5272))
(assert (= (x3311 (x2147 x4884)) x4884))
(assert (= (or x3247 x3378) x4813))
(assert (= x1127 (and x3118 x1574)))
(assert (x3331 (- x1194 x340)))
(assert (x3513 x520 (- x340 x1194)))
(assert (x5093 x3490))
(assert (x5093 x1144))
(assert (x5093 x5275))
(assert (x5093 x2096))
(assert (= (and x3725 x2266) x1973))
(assert (= x4364 (and (not x4834) x5253)))
(assert (x5093 x4877))
(assert (x1311 x1403))
(assert (= x1918 (and x630 (not x645))))
(assert (= x4639 (and x540 x2361)))
(assert (=> (<= x3430 10000) (= (x3059 x3430) (x2147 x3430))))
(assert (= x5070 (or (and (not x4938) x4841) (and x3289 x849))))
(assert (= (and x914 (not x991)) x4333))
(assert (= (and (not x2813) x757) x4218))
(assert (x5093 x4024))
(assert (= (and x2175 (not x5078)) x3714))
(assert (= (and x3688 x928) x4927))
(assert (= (and x2978 (not x4217)) x1008))
(assert (= (and x2459 (not x5199)) x165))
(assert (x5093 x2189))
(assert (= x68 (or x4165 x781 x1437 x3785 x1034)))
(assert (= (and x3714 (not x78)) x5347))
(assert (=> (>= 10000 x1691) (= (x3059 x1691) (x2147 x1691))))
(assert (x5093 x464))
(assert (= (and x5046 (not x4410)) x3208))
(assert (= x1519 (and x1481 x1536)))
(assert (x5093 x2085))
(assert (= (and x4121 (not x384)) x2703))
(assert (x5093 x3615))
(assert (x5093 x800))
(assert (= (and x2449 x1498) x3183))
(assert (x5093 x171))
(assert (x5093 x4768))
(assert (x5093 x695))
(assert (= x371 (and (not x4354) x3991)))
(assert (= (or x1408 x3176 x3183 x4745 x922 x2036) x1566))
(assert (x5093 x269))
(assert (x5093 x229))
(assert (x5093 x3182))
(assert (x5093 x2706))
(assert (= x777 (=> (= x4 (= x1963 0)) (and (=> (and (not x4) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3625) (and (< x3625 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3625) true))) x3363)) (and (=> (and (= x1597 x3103) x3363) x5334) (=> (and (and (= x1523 1) (= x686 x1597) (= x4688 x2085)) (not x3363)) x1525))) (=> (and x4 (= x1597 x3103)) x5334)))))
(assert (x5093 x1272))
(assert (= x577 (and x2190 x998)))
(assert (= (and x3820 x4002) x4150))
(assert (x5093 x1485))
(assert (=> (<= x2168 10000) (= (x2147 x2168) (x3059 x2168))))
(assert (x5093 x3041))
(assert (x5093 x3055))
(assert (x5093 x1252))
(assert (x3331 x1106))
(assert (= x444 (and (not x4205) x3150)))
(assert (= x4348 (or x3747 x516)))
(assert (x5093 x474))
(assert (x5093 x4710))
(assert (= (and x5324 x2056) x3153))
(assert (x348 x2299))
(assert (x5093 x361))
(assert (x5093 x2259))
(assert (= x3493 x4233))
(assert (= x4163 (and x3409 x299)))
(assert (x5093 x2724))
(assert (x4437 x3803))
(assert (= 4238056678808933066457772256406219440718756300954938350892797929791311314944 (x3311 (x3059 4238056678808933066457772256406219440718756300954938350892797929791311314944))))
(assert (x5093 x1335))
(assert (= (and x2794 (not x4184)) x3004))
(assert (= x5020 (and x4666 x1256)))
(assert (x5093 x4006))
(assert (=> (<= x4685 10000) (= (x3059 x4685) (x2147 x4685))))
(assert (x5093 x2923))
(assert (= x2597 (and (not x4809) x1220)))
(assert (= (x2147 117300739) (x3059 117300739)))
(assert (x5093 x3521))
(assert (x5093 x3017))
(assert (x5093 x3030))
(assert (= (or x2729 x5214 x4335 x1797) x3174))
(assert (= (and x338 x1290) x5310))
(assert (x5093 x2710))
(assert (x5131 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1194))
(assert (=> (<= x2682 10000) (= (x3059 x2682) (x2147 x2682))))
(assert (x4208 x3996))
(assert (x3513 x1194 (- x520 x340)))
(assert (= (=> (and (= x4101 x1305) (= x1951 0)) x3969) x4336))
(assert (x3331 (- x1368 x520)))
(assert (x5093 x1669))
(assert (= (x3311 (x2147 x5192)) x5192))
(assert (x5093 x5219))
(assert (x885 x2299 x1368 x1194 x520))
(assert (= (and x1086 x2523) x1556))
(assert (= (and x838 x4319) x3151))
(assert (x1311 x17))
(assert (x5093 x4471))
(assert (= (=> (or (not x4986) x4986) x1242) x4001))
(assert (= (+ 2 (x3311 x1217)) (x3311 (x4345 x1217 2))))
(assert (x5093 x2856))
(assert (x5093 x4628))
(assert (=> (<= x4656 10000) (= (x3059 x4656) (x2147 x4656))))
(assert (= x2902 (=> (and (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x2136) (= x2287 (x2760 (x2147 x2136) x1117 0)) (= (x4345 x2287 1) x5448) (= (x4345 x5448 1) x4373)) x4672)))
(assert (= (and x1640 x2332) x3043))
(assert (x5093 x1878))
(assert (x5093 x1137))
(assert (x5093 x2869))
(assert (= x4691 (and (not x2773) x2250)))
(assert (x5093 x5103))
(assert (x5093 x2409))
(assert (x5093 x4743))
(assert (x5093 x3069))
(assert (x5093 x5358))
(assert (= (+ (x3311 x2798) 2) (x3311 (x4345 x2798 2))))
(assert (x5093 x3200))
(assert (= x238 (or x1288 x68)))
(assert (= (and (not x170) x2521) x4937))
(assert (x5093 x4458))
(assert (=> (>= 10000 x2769) (= (x2147 x2769) (x3059 x2769))))
(assert (= x377 (or x3945 x190)))
(assert (x5093 x2664))
(assert (x1311 x1339))
(assert (= x3715 (and x650 x4769)))
(assert (= (and x4756 (not x961)) x54))
(assert (x5093 x521))
(assert (= (and x2396 x3496) x2080))
(assert (= (and x798 x3485) x4818))
(assert (x5093 x1039))
(assert (=> (<= x1314 10000) (= (x3059 x1314) (x2147 x1314))))
(assert (x3294 x4725 x2727))
(assert (x2929 x1740))
(assert (= (x3059 1856199391) (x2147 1856199391)))
(assert (x5093 x2728))
(assert (x5093 x5244))
(assert (= x1339 (x3311 (x2147 x1339))))
(assert (x5093 x2271))
(assert (x5093 x1939))
(assert (= (and x972 x2478) x2007))
(assert (= x4900 (or x4888 x49)))
(assert (x5093 x1374))
(assert (= (x3311 (x3059 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= (x3311 (x4345 x1327 2)) (+ 2 (x3311 x1327))))
(assert (= x1325 (and (not x5212) x4383)))
(assert (= (and x5412 x76) x3044))
(assert (x5093 x5290))
(assert (= (x3311 (x4345 x1589 1)) (+ 1 (x3311 x1589))))
(assert (=> (<= x1600 10000) (= (x2147 x1600) (x3059 x1600))))
(assert (x5093 x2057))
(assert (= (and x2879 x257) x2864))
(assert (= x5191 (and (not x2116) x1671)))
(assert (= (and x5081 x2475) x1845))
(assert (x5093 x1170))
(assert (x5093 x4079))
(assert (= x5169 (=> (= x3259 (= x353 0)) (and (=> (and (= x1056 x2933) x3259) x2301) (=> (and (= x4282 (or (> x32 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 32 x32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x32) true)))) (not x3259)) (and (=> (and (and (= x654 x1056) (= x4232 x3811) (= x3631 1)) (not x4282)) x2156) (=> (and x4282 (= x1056 x2933)) x2301)))))))
(assert (x5093 x2914))
(assert (x5093 x4644))
(assert (x5093 x3870))
(assert (= (and x5351 (not x2767)) x3866))
(assert (x5093 x3819))
(assert (= (x3311 (x2147 x804)) x804))
(assert (x5093 x3387))
(assert (x5093 x3957))
(assert (= x5228 (x3311 (x2147 x5228))))
(assert (x5093 x2315))
(assert (= (and x1604 x7) x3918))
(assert (x5093 x1061))
(assert (x5093 x498))
(assert (x5093 x2283))
(assert (= x5071 (=> (and (= x353 x574) (= x32 x870)) x325)))
(assert (= (or x714 x4100 x1310 x4948) x1788))
(assert (=> (<= x5244 10000) (= (x3059 x5244) (x2147 x5244))))
(assert (x5093 x3800))
(assert (x5093 x1081))
(assert (= (=> (and (= x4243 (x4761 (- x2406 x965))) (>= 1461501637330902918203684832716283019655932542975 x965) (>= x965 0) (= x3468 (> x4243 0)) (< x965 1461501637330902918203684832716283019655932542976)) (and (=> (and (not x3468) (and (<= x473 1461501637330902918203684832716283019655932542975) (= x513 x473) (= x362 452) (<= 0 x473) (< x473 1461501637330902918203684832716283019655932542976))) x5148) (=> (and (and (or (and (not x3716) (and (= x2402 (= x4721 x2406)) (or (and (and (> 1461501637330902918203684832716283019655932542976 x3544) (not (> 4 x4491)) (= x1632 1865448899) (not (< x1632 988262939)) (= x2272 32) (= 4 x4491) (> 2217467699 x1632) (not (= x1632 1856199391)) (>= x3544 0) (> x770 0) (not (= 1857877511 x1632)) (= (x3736 (x2147 x4721)) x770) (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x14) (= x5027 1) (>= 1461501637330902918203684832716283019655932542975 x3544) (= x4491 4) (not (< x1632 1856199391))) x2402) (and (and (= x4544 (= x4287 x2406)) (and (and (= x5027 1) (> x2006 0) (= 4 x2831) (not (< x2752 1856199391)) (not (= x2752 1857877511)) (= 1865448899 x2752) (not (< x2831 4)) (= x2831 4) (= (x3736 (x2147 x4287)) x2006) (= 50292402827334880472107169365697159231523039388532301717704428044325102813184 x3930) (= 32 x2272) (< x4076 1461501637330902918203684832716283019655932542976) (not (< x2752 988262939)) (>= x4076 0) (< x2752 2217467699) (>= 1461501637330902918203684832716283019655932542975 x4076) (not (= x2752 1856199391))) x4544)) (not x2402))))) (and (and (= 4 x932) (= x5027 1) (= x2272 32) (> 1461501637330902918203684832716283019655932542976 x5325) (<= 0 x5325) (not (= 1857877511 x994)) (> x385 0) (not (> 1856199391 x994)) (not (> 4 x932)) (< x994 2217467699) (= x932 4) (not (< x994 988262939)) (= 1865448899 x994) (= x1118 50292402827334880472107169365697159231523039388532301717704428044325102813184) (= x385 (x3736 (x2147 x2179))) (not (= 1856199391 x994)) (>= 1461501637330902918203684832716283019655932542975 x5325)) x3716)) (and (= 452 x3988) (= (= x2406 x2179) x3716))) x3468) x5267))) x4261))
(assert (x5093 x4321))
(assert (x5093 x1286))
(assert (= x840 (=> (= x1259 (= x286 0)) (and (=> x1259 x1172) (=> (and (and (= x1684 (x1025 115792089237316195423570985008687907853269984665640564039457584007913129639904 x2889)) (= x3472 (or (and (< x3308 32) (= (<= x3308 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3308))) (= (x3589 (+ x1684 x3753)) x192) (= (x3589 (+ 31 x3308)) x2889)) (not x1259)) (and (=> (and (and (<= x2556 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2556 (x525 x3901)) (>= x2556 0) (= (x4440 x3753) x1368) (= x5149 (< 0 x2556)) (= x3901 (x4345 x601 1))) (not x3472)) (and (=> (and (not x5149) (and (= x2771 0) (= x5179 x527))) x1494) (=> (and x5149 (and (= (= 0 x2543) x2114) (= x2543 (x1025 x1202 x797)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2299) (= x2299 (x525 x3901)) (= x797 (ite (> x1368 x4871) 1 0)) (>= x2299 0) (= (ite (not x175) 1 0) x1202) (= x175 (= x2299 0)) (= (x3658 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2299) x4871))) (and (=> (not x2114) x4233) (=> (and x2114 (and (= x3985 (x1741 (x4860 x2299 x1368))) (= (x3658 x3985 1000000000000000000) x5150) (= x91 (> x5150 x5179)))) (and (=> (and (and (= (< x1529 0) x4908) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5179)) x1529)) x91) (and (=> (and (and (= (= 0 (ite x4762 1 0)) x217) (= x4762 (< 115792089237316195423570985008687907853269984665640564039457 x4069))) (not x4908)) (and (=> (and (and (= (x1741 (* 1000000000000000000 x5179)) x1106) (= (x3658 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1106) x4015) (= x226 (ite (not x3245) 1 0)) (= x1640 (= x263 0)) (= x3245 (= x1106 0)) (= (ite (< x4015 1000000000000000000) 1 0) x2430) (= (x1025 x226 x2430) x263)) x217) (and (=> (not x1640) x4233) (=> (and x1640 (and (= x5282 (x1741 (* 1000000000000000000 x1106))) (= x5398 (< 0 x1368)))) (and (=> (not x5398) x2525) (=> (and (and (= (> x1335 x4219) x3025) (= (x525 x3901) x4219) (<= x4219 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4219) (= (x3658 x5282 x1368) x13) (= x1335 (x3658 x13 1000000000000000000))) x5398) (and (=> x3025 x4233) (=> (and (not x3025) (and (= x5179 x2517) (= x5103 0) (= x2971 (x4761 (- x4219 x1335))))) x4134))))))) (=> (not x217) x4233))) (=> x4908 x4233))) (=> (and (not x91) (and (= (> 0 x2657) x456) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5150)) x2657))) (and (=> (and (= x2772 (> x5150 x5179)) (not x456)) (and (=> (and (and (= x3512 x5103) (= (x4761 (- x5179 x5150)) x3512) (= x5150 x2517)) (not x2772)) x4134) (=> x2772 x4233))) (=> x456 x4233))))))))) (=> (and x3472 (= true x4986)) x4001)))))))
(assert (x5093 x983))
(assert (= x1068 (and (not x1041) x772)))
(assert (= (or x5048 x4448 x924) x1407))
(assert (= (and x1240 (not x1007)) x2213))
(assert (x5093 x4733))
(assert (= x4788 (=> (and (>= x1355 0) (= x2871 (= 0 x1355)) (>= 1461501637330902918203684832716283019655932542975 x1355) (> 1461501637330902918203684832716283019655932542976 x1355)) (and (=> x2871 x3222) (=> (and (and (= (x3589 (+ 32 x2180)) x766) (<= x1355 1461501637330902918203684832716283019655932542975) (>= x1355 0) (< x1355 1461501637330902918203684832716283019655932542976) (= x2180 (x3589 (+ 4 x2439))) (= x4222 (x3589 (+ x766 32))) (= (= x2163 0) x5143) (= x2163 (x3736 (x2147 x1355)))) (not x2871)) (and (=> x5143 x1594) (=> (and (> 4294967296 x4393) (not x5143)) x3222)))))))
(assert (= (x3311 (x3059 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x5093 x1684))
(assert (= (x2147 2362143243) (x3059 2362143243)))
(assert (x1311 x1390))
(assert (= (x3059 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x2147 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= (and x1649 x3740) x1168))
(assert (= x5032 (and x689 x61)))
(assert (x5093 x4307))
(assert (x5093 x199))
(assert (= x2115 (and x2327 x1030)))
(assert (x5093 x3874))
(assert (= (x3059 4238056678808933066457772256406219440718756300954938350892797929791311314944) (x2147 4238056678808933066457772256406219440718756300954938350892797929791311314944)))
(assert (x5093 x2831))
(assert (x5093 x980))
(assert (=> (<= x3013 10000) (= (x2147 x3013) (x3059 x3013))))
(assert (x3294 x3224 x546))
(assert (=> (<= x4532 10000) (= (x2147 x4532) (x3059 x4532))))
(assert (= x549 (or x3551 x1384)))
(assert (= (or x319 x913) x1477))
(assert (x1311 x1369))
(assert (x479 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (= (and x1508 x4832) x3273))
(assert (= (and x2510 x3863) x2400))
(assert (= (or x3253 x442) x2930))
(assert (=> (<= x1946 10000) (= (x3059 x1946) (x2147 x1946))))
(assert (x5093 x1367))
(assert (x5093 x4243))
(assert (= (or x3673 x4083) x5301))
(assert (= x1438 (and x16 (not x381))))
(assert (x5093 x1538))
(assert (= (and (not x2586) x3258) x3682))
(assert (x5093 x4466))
(assert (= (and x998 (not x2190)) x698))
(assert (x5093 x176))
(assert (x5093 x4718))
(assert (x5093 x2133))
(assert (x5093 x602))
(assert (= x4207 (x3311 (x2147 x4207))))
(assert (x3331 x1402))
(assert (= (x3311 (x2147 x1390)) x1390))
(assert (x1311 x1398))
(assert (= x1953 (and x1413 x2784)))
(assert (x5093 x2505))
(assert (x5093 x1056))
(assert (x5093 x4601))
(assert (= (x3311 (x2147 x710)) x710))
(assert (x5093 x938))
(assert (= x4829 (or x3739 x4192)))
(assert (x5131 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2530))
(assert (x5093 x4022))
(assert (x5093 x2273))
(assert (x5093 x941))
(assert (x5093 x3949))
(assert (= x1795 (and x1933 (not x240))))
(assert (= x1409 (=> (and (= x1888 x1731) (= 0 x1553)) x1271)))
(assert (x5093 x2776))
(assert (= (x3059 2245473101) (x2147 2245473101)))
(assert (= (and x905 x3091) x2186))
(assert (x1311 x4408))
(assert (= (and x5116 x4218) x4107))
(assert (x5093 x2111))
(assert (= x4064 (and x946 x1204)))
(assert (x5093 x2781))
(assert (x5093 x2626))
(assert (x5093 x3527))
(assert (x5093 x4717))
(assert (= x1166 (or x4919 x5387)))
(assert (= (and x452 x3450) x4484))
(assert (x5093 x625))
(assert (x5093 x1450))
(assert (x5093 x5378))
(assert (x5093 x353))
(assert (x2366 x520 x1194 x1368 x2299))
(assert (x5093 x766))
(assert (= x4824 (and (=> (and x5326 (and (= x1440 x551) (= x3720 x2406) (= x5090 x2034))) x3223) (=> (and (and (= 1 x2666) (= x1440 x3129)) (not x5326)) x5300))))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x3658 x4025 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x570 x4025 1461501637330902918203684832716283019655932542976)) x4025)) (x355 x4025 1461501637330902918203684832716283019655932542976) (x3825 x4025 1461501637330902918203684832716283019655932542976) (x4162 x4025 1461501637330902918203684832716283019655932542976)))
(assert (= (and x3053 (not x237)) x63))
(assert (x5093 x2861))
(assert (x3331 1000000000000000000))
(assert (x5093 x1506))
(assert (x5093 x3042))
(assert (x5093 x3094))
(assert (x5093 x2410))
(assert (x5093 x3255))
(assert (= (and (not x631) x3317) x3595))
(assert (= (and x2385 x1564) x855))
(assert (= (=> (and (= x1000 0) (= x150 x3775)) x3852) x1682))
(assert (= (or x4918 x1490) x1958))
(assert (x5093 x4230))
(assert (= x1142 (and (not x3259) x48)))
(assert (x348 x2259))
(assert (x5093 x3090))
(assert (= x468 (and (not x529) x3890)))
(assert (x5093 x1048))
(assert (x4437 x533))
(assert (= x1132 (=> (and (= x4094 x3641) (= 0 x1277)) x391)))
(assert (x4437 x5415))
(assert (= (=> (and (= x5219 x3999) (= x3495 x4717)) x4388) x5059))
(assert (x1405 x4025))
(assert (x4437 x1592))
(assert (x5093 x680))
(assert (= x2030 (and (not x3935) x2951)))
(assert (x4437 x4725))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x3311 (x3059 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (= x4850 (and x452 (not x3450))))
(assert (= x3827 (x3311 (x2147 x3827))))
(assert (= (and x1932 x3854) x2673))
(assert (x5093 x3453))
(assert (= 2678788150 (x3311 (x3059 2678788150))))
(assert (x5093 x5274))
(assert (x5093 x3827))
(assert (x5093 x2197))
(assert (= x2051 (and x4523 x4180)))
(assert (x5093 x3555))
(assert (x5093 x3548))
(assert (= (=> (and (= x780 (= x3936 0)) (or (not x780) x780)) x599) x4052))
(assert (x5093 x5168))
(assert (= (+ (x3311 x3750) 1) (x3311 (x4345 x3750 1))))
(assert (= x2670 (and x4239 x5124)))
(assert (= (=> (and (>= x1355 0) (= x4541 (= x1355 0)) (<= x1355 1461501637330902918203684832716283019655932542975) (< x1355 1461501637330902918203684832716283019655932542976)) (and (=> (and (and (<= x1355 1461501637330902918203684832716283019655932542975) (= x1655 (x3736 (x2147 x1355))) (> 1461501637330902918203684832716283019655932542976 x1355) (>= x1355 0) (= (= 0 x1655) x3653)) (not x4541)) (and (=> (and (not x3653) (< x4097 4294967296)) x3287) (=> (and (= x4986 true) x3653) x4001))) (=> x4541 x3287))) x193))
(assert (= (or x2907 x1615) x168))
(assert (x5093 x3621))
(assert (= x1473 (and x5199 x2459)))
(assert (=> (<= x3554 10000) (= (x3059 x3554) (x2147 x3554))))
(assert (= x5440 (or x4551 x2574)))
(assert (= x2405 (and x3051 (not x1012))))
(assert (x348 x5021))
(assert (= (or x3454 x2581 x63 x1087) x2742))
(assert (x5093 x3543))
(assert (x5093 x830))
(assert (= (and x1522 x4754) x2888))
(assert (= x335 (and x2115 x233)))
(assert (x5093 x290))
(assert (x5093 x1026))
(assert (= x2220 (and x2030 (not x1309))))
(assert (x5093 x3377))
(assert (= x3717 (and x3678 x3204)))
(assert (x5093 x1460))
(assert (x1311 x3233))
(assert (x5093 x4923))
(assert (= (x3311 (x4345 x3925 1)) (+ (x3311 x3925) 1)))
(assert (= (=> (and (= x2398 x4209) (= x3892 x1130)) x1941) x5114))
(assert (= x1818 (=> (and (= x5354 x5294) (= x1839 x3382) (= x5435 x3194) (= x4946 x43) (= x3744 x1897)) x1676)))
(assert (x5093 x1967))
(assert (x2366 x520 x340 x2299 x1368))
(assert (= x2494 (and x4036 x3866)))
(assert (= (and x3896 x4260) x1580))
(assert (x1311 x3957))
(assert (x5093 x4556))
(assert (= (and (not x4922) x5367) x1991))
(assert (x1311 x839))
(assert (x5093 x931))
(assert (= (x3311 (x4345 x1978 2)) (+ (x3311 x1978) 2)))
(assert (x5093 x2003))
(assert (x5093 x4200))
(assert (x5093 x2268))
(assert (= (x3059 1857877511) (x2147 1857877511)))
(assert (x5093 x1680))
(assert (x5093 x4928))
(assert (x4437 x546))
(assert (x5093 x1540))
(assert (x5093 x3463))
(assert (x5093 x4096))
(assert (= (and x4326 (not x2402)) x85))
(assert (x5093 x4982))
(assert (= x1172 x4501))
(assert (= (and (not x706) x2458) x4741))
(assert (x5093 x3358))
(assert (= x4822 (and x4184 x2794)))
(assert (x5093 x1062))
(assert (= (=> (and (= 0 x1061) (= x1229 x1232)) x3933) x2898))
(assert (x5093 x2172))
(assert (x5093 x919))
(assert (= (x1359 416) 0))
(assert (x5093 x1077))
(assert (= x2102 (and x1842 x463)))
(assert (x1311 x4685))
(assert (= (or x5005 x2445 x700 x2912 x3372) x5184))
(assert (= x1018 (and x85 x4544)))
(assert (= (and x4571 (not x1442)) x753))
(assert (= x4754 (or x1539 x3647)))
(assert (x5093 x4028))
(assert (= (+ (x3311 x2833) 1) (x3311 (x4345 x2833 1))))
(assert (= (=> (= x249 (= x5157 0)) (and (=> (and (not x249) (and (= x897 (x1025 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4230)) (= x5123 (or (> x4602 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x4602 32) (= (<= x4602 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) (= x4578 (x3589 (+ x365 x897))) (= x4230 (x3589 (+ 31 x4602))))) (and (=> (and x5123 (= true x4986)) x4001) (=> (and (and (= (< 115792089237316195423570985008687907853269984665640564039457 x2509) x2801) (= (= 0 (ite x2801 1 0)) x141) (= x2758 (x4087 x365))) (not x5123)) (and (=> (not x141) x4233) (=> (and (and (= (= x2880 0) x4276) (= (= x2481 0) x3175) (= (x3658 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2880) x4968) (= x2481 (x1025 x2473 x1003)) (= x1003 (ite (< x4968 1000000000000000000) 1 0)) (= x2880 (x1741 (* x2509 1000000000000000000))) (= x2473 (ite (not x4276) 1 0))) x141) (and (=> (not x3175) x4233) (=> (and (and (= x5362 (x1741 (* 1000000000000000000 x2880))) (= x4332 (> x2758 0))) x3175) (and (=> (and (and (= x4022 (x3658 x5362 x2758)) (<= x1210 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3086 (< x4899 x1210)) (= (x3658 x4022 1000000000000000000) x174) (= (x4345 x3750 1) x2046) (>= x1210 0) (= x1210 (x2782 x2046)) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x174)) x4899)) x4332) (and (=> x3086 x4233) (=> (and (and (>= x965 0) (= x399 (x3589 (+ x1210 x174))) (= x4552 (< 0 x524)) (> 1461501637330902918203684832716283019655932542976 x965) (<= x965 1461501637330902918203684832716283019655932542975) (= x524 (x4761 (- x2406 x965)))) (not x3086)) (and (=> (and x4552 (and (and x4217 (and (= x4295 (x4761 (- x629 4))) (> 599290589 x4194) (not (= 117300739 x4194)) (< x4194 1466279372) (= x1895 4238056678808933066457772256406219440718756300954938350892797929791311314944) (= 157198259 x4194) (= 68 x629) (= (x3736 (x2147 x2330)) x4331) (< 0 x4331) (= x439 x1758) (= x2509 x2759) (= x3289 (or (and (< x4295 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4295) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4295))) (not (> 4 x629)))) (and (= x4990 (x3589 (+ 32 x4825))) (= (= x2330 x513) x4217) (= x4825 (x3589 (+ 4 x4578)))))) (and (=> x3289 x1682) (=> (and (and (= x20 x1758) (= (= x1758 x439) x4938)) (not x3289)) (and (=> (not x4938) x1682) (=> (and x4938 (and (= x2759 x432) (= x5049 (x2760 (x2147 x4078) (x3059 2) 0)) (= 1 x1000) (= (x2760 (x2147 x1758) x5049 0) x956) (= x150 32))) x3852))))) (=> (and (and (<= x473 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x473) (= (x3736 (x2147 x473)) x939) (= (= x939 0) x3981) (>= x473 0)) (not x4552)) (and (=> (and x3981 (= true x4986)) x4001) (=> (and (not x3981) (and (= (x3736 (x2147 x2406)) x4904) (< x176 4294967296) (= (= x4904 0) x748))) (and (=> (and x748 (= x4986 true)) x4001) (=> (and (not x748) (and (or (and (and (= x5141 1) (> 4294967296 x3525) (= (x3616 (x2147 x4078)) x1148) (= x3066 (- x1148 x2509)) (= (x3589 (+ x676 x2509)) x1804) (= x676 (x1454 (x2147 x2406))) (< (+ x676 x2509) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1915) (and (= 0 x5141) (not x1915))) (and (= (x3616 (x2147 x4078)) x2913) (= x4006 (x3616 (x2147 x2406))) (= x1915 (and (>= x2913 x2509) (< (+ x4006 x2509) 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))) x4467))))))))) (=> (not x4332) x2525))))))))) (=> x249 x1172))) x390))
(assert (= x4215 (and x1047 (not x2490))))
(assert (= (+ 1 (x3311 x3321)) (x3311 (x4345 x3321 1))))
(assert (= x4711 (and x1075 x4419)))
(assert (x5093 x5336))
(assert (x1405 x1015))
(assert (= (and x1336 (not x952)) x5327))
(assert (x5093 x790))
(assert (x479 x3328))
(assert (x1311 x3562))
(assert (= x3284 (and (not x2396) x3496)))
(assert (= x4229 (or x1345 x2777)))
(assert (= (x3311 (x4345 x1505 1)) (+ (x3311 x1505) 1)))
(assert (x5093 x3328))
(assert (x5093 x4420))
(assert (x1311 x2414))
(assert (= (x3311 (x3059 1038142104)) 1038142104))
(assert (= x4470 (or x4268 x3418 x4561 x5191 x3558 x4774)))
(assert (x5093 x1805))
(assert (x5093 x1071))
(assert (x5093 x1839))
(assert (=> (<= x3762 10000) (= (x2147 x3762) (x3059 x3762))))
(assert (= x59 (or x5 x2552)))
(assert (= (and (not x3858) x5442) x2498))
(assert (x1311 x3806))
(assert (= x2235 (and x406 (not x3472))))
(assert (x1311 x3554))
(assert (x5093 x3056))
(assert (x5093 x654))
(assert (x5093 x2692))
(assert (= (+ 2 (x3311 x3228)) (x3311 (x4345 x3228 2))))
(assert (= x2818 (=> (= (= x2730 0) x1657) (and (=> (and x1657 (= x2689 x1305)) x4336) (=> (and (= x4072 (or (and (< x2042 32) (= true (<= x2042 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2042))) (not x1657)) (and (=> (and x4072 (= x1305 x2689)) x4336) (=> (and (and (= x2689 x4101) (= x1951 1) (= x1902 x2483)) (not x4072)) x3969)))))))
(assert (x5093 x5415))
(assert (x5093 x3448))
(assert (= x1797 (or x536 x166)))
(assert (x5093 x4786))
(assert (x5093 x4819))
(assert (x4437 x3224))
(assert (x479 x2512))
(assert (x5093 x4840))
(assert (= (and x3622 x247) x1091))
(assert (x5093 x409))
(assert (x5093 x2006))
(assert (= (=> (and (or (and x2787 (and (<= 0 x2953) (>= 255 x2953) (> 256 x2953) (= x867 (x2760 (x2147 x2406) (x3059 163) 0)) (= x3335 (= x2953 0)) (= x2953 (x3349 x867)))) (and (= x2787 x3335) (not x2787))) (= (< 0 x527) x2787)) x3081) x1494))
(assert (= x3817 (and (not x1932) x3854)))
(assert (x2366 x520 x340 x1368 x2299))
(assert (= (and x2895 (not x2624)) x3184))
(assert (x5093 x64))
(assert (x5093 x856))
(assert (= x247 (and (not x3101) x1856)))
(assert (= (or x1465 x3302) x3774))
(assert (x5093 x2223))
(assert (= (and x843 x1733) x3367))
(assert (= (+ (x3311 x3888) 1) (x3311 (x4345 x3888 1))))
(assert (x5093 x3129))
(assert (x1311 x1227))
(assert (= x3937 (=> (and (or (and (= x2899 (x2760 (x2147 x4601) x5090 0)) (not x160)) (and (= (x4345 x5090 2) x3344) x160)) (= x160 (= 0 x4601))) x4131)))
(assert (= (and x4780 x274) x672))
(assert (= x913 (or (and (not x4658) x2955) (and x4378 x4127) (and (not x4505) x3003) x3367 x4654 (and x2195 x3526))))
(assert (= (x3311 (x2147 x1613)) x1613))
(assert (x5093 x2020))
(assert (= (+ 1 (x3311 x1357)) (x3311 (x4345 x1357 1))))
(assert (= x4771 (x3311 (x2147 x4771))))
(assert (= x1406 (and x679 x719)))
(assert (x5093 x1600))
(assert (x348 x1766))
(assert (x5093 x3720))
(assert (= (and x2943 x898) x3761))
(assert (= x1723 (and x101 x3105)))
(assert (x5093 x4483))
(assert (= (and x4912 x579) x1427))
(assert (= x2018 (and x967 x1468)))
(assert (= (and x1585 x657) x5026))
(assert (x5093 x3346))
(assert (x5131 x1124 x70))
(assert (x479 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x3116 (not x2310)) x4508))
(assert (= (and x486 x3290) x3759))
(assert (= x3302 (and x4188 x330)))
(assert (= (x3311 (x2147 x2179)) x2179))
(assert (= (and x640 x774) x1539))
(assert (x5093 x3169))
(assert (x5093 x2969))
(assert (x5093 x4265))
(assert (x1311 x2988))
(assert (= (and x3134 x4545) x383))
(assert (x3331 x1884))
(assert (x3513 x340 (- x520 x1368)))
(assert (x5093 x4771))
(assert (= (and x3694 x1734) x1883))
(assert (= (and x1585 (not x657)) x1449))
(assert (= (=> (and (= x103 x2398) (= x2271 x1130)) x1941) x5036))
(assert (=> (<= x4207 10000) (= (x2147 x4207) (x3059 x4207))))
(assert (= (=> (and (or (and x4120 (and (and (= (> x2706 0) x2222) (= x2706 (x4761 (- x3129 x3618))) (> 1461501637330902918203684832716283019655932542976 x3618) (= (x1078 x3855) x3618) (>= x3618 0) (>= 1461501637330902918203684832716283019655932542975 x3618)) (or (not x2222) (and (and (<= x1878 1461501637330902918203684832716283019655932542975) (= x4228 (x2760 (x2147 x3129) x5090 0)) (>= x1878 0) (< x1878 1461501637330902918203684832716283019655932542976) (= x1878 (x50 x4228))) x2222)))) (and (and (and (= (x1078 x3855) x3017) (< x3017 1461501637330902918203684832716283019655932542976) (<= x3017 1461501637330902918203684832716283019655932542975) (<= 0 x3017) (= x302 (= 0 x3017))) (or x302 (and (and (< x4768 1461501637330902918203684832716283019655932542976) (= (x5028 x5337) x4768) (= (x4345 x3855 1) x5337) (<= x4768 1461501637330902918203684832716283019655932542975) (<= 0 x4768)) (not x302)))) (not x4120))) (= x4120 (ite (> x4748 x2666) (not (= 0 x3129)) (< x2666 x4748)))) x2757) x5300))
(assert (= x3315 (and (not x3136) x4569)))
(assert (= x3994 (and x1593 x1116)))
(assert (= x115 (and x2994 (not x2560))))
(assert (= (x3311 (x4345 x1452 1)) (+ 1 (x3311 x1452))))
(assert (= x1705 (and x1898 x1782)))
(assert (x5093 x439))
(assert (x5093 x370))
(assert (= x1995 (and x330 (not x4188))))
(assert (x5093 x407))
(assert (= x4390 (and (not x1436) x2452)))
(assert (x5093 x4933))
(assert (x5093 x281))
(assert (x5093 x1316))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x3658 x1015 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x570 x1015 1461501637330902918203684832716283019655932542976)) x1015)) (x355 x1015 1461501637330902918203684832716283019655932542976) (x3825 x1015 1461501637330902918203684832716283019655932542976) (x4162 x1015 1461501637330902918203684832716283019655932542976)))
(assert (x5093 x33))
(assert (x5093 x2778))
(assert (= x4365 (and x2356 x3671)))
(assert (x5093 x3552))
(assert (x5093 x340))
(assert (= x109 (and (not x2711) x105)))
(assert (= (and x4309 x2749) x627))
(assert (x5093 x4091))
(assert (= x1853 (or x2851 x2060)))
(assert (x5093 x518))
(assert (x5093 x5297))
(assert (x5093 x3103))
(assert (x5093 x5284))
(assert (= x2156 (=> (and (= x5294 x3115) (= x2969 x3267) (= x596 x3631) (= x5315 x654)) x2415)))
(assert (= (and x4624 (not x2370)) x1))
(assert (= (=> (and (= (x2760 (x2147 x2406) (x3059 158) 0) x4294) (= x3874 (x1025 1461501637330902918203684832716283019655932542975 x1015)) (= x3750 (x2760 (x2147 x3874) x4294 0)) (= (> x3440 0) x1022)) (and (=> (and (and (= x5042 x5294) (= x1897 x285) (= x3267 x1858) (= x3874 x3167) (= x465 x365)) (not x1022)) x3095) (=> (and x1022 (and (= x2599 (> x3440 115792089237316195423570985008687907853269984665640564039457)) (= (x4432 x3232) x5403) (= x3232 (x2760 (x2147 x2406) (x3059 164) 0)) (<= 0 x5403) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5403) (= x2192 (= (ite x2599 1 0) 0)))) (and (=> (not x2192) x4233) (=> (and (and (= (= 0 x2710) x4809) (= (x1025 x4725 x2727) x2710) (= (= x4522 0) x1292) (= (x1741 (* x3440 1000000000000000000)) x4522) (= x4725 (ite (not x1292) 1 0)) (= (ite (> 1000000000000000000 x685) 1 0) x2727) (= x685 (x3658 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4522))) x2192) (and (=> (and (and (= (> x5403 0) x786) (= (x1741 (* x4522 1000000000000000000)) x4645)) x4809) (and (=> (not x786) x2525) (=> (and (and (= (x4345 x3901 1) x888) (= x544 (x4796 x888)) (= x3555 (x3658 x2761 1000000000000000000)) (<= x544 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5151 (> x544 x4240)) (= (x3658 x4645 x5403) x2761) (>= x544 0) (= x4240 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3555)))) x786) (and (=> x5151 x4233) (=> (and (and (>= x2781 0) (= x4486 (x3589 (+ x544 x3555))) (<= x2781 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5066 x3750) x2781) (= x974 (> x2781 x4240))) (not x5151)) (and (=> (and (and (= (x3589 (+ 32 x2067)) x521) (= x2067 (x3589 (+ x465 4))) (= (x4761 (- x521 x465)) x417) (= x1860 (= x2406 x2179)) (= (x3589 (+ x3555 x2781)) x4831)) (not x974)) (and (=> (and (and (= (or (> x4118 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4118) true) (< x4118 32))) x89) (= 36 x4646) (= (x3736 (x2147 x2179)) x5268) (not (= x4223 75483562)) (< x4223 2217467699) (= (x4761 (- x4646 4)) x4118) (< 0 x5268) (not (> 4 x4646)) (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 x3240) (= x4223 398450620) (not (= x4223 178855970)) (not (= x4223 242558722)) (> 405663989 x4223) (= x4078 x3168) (< x4223 988262939) (= x4646 x417)) x1860) (and (=> (and (and (= x2454 x3168) (= (= x3168 x4078) x1029)) (not x89)) (and (=> (and (and (<= 0 x3680) (= x4007 (x2760 (x2147 x3168) (x3059 6) 0)) (= (x250 x4007) x3680) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3680) (= x4700 32) (= x4245 1)) x1029) x2821) (=> (not x1029) x5089))) (=> x89 x5089))) (=> (and (not x1860) (= (= x2406 x4721) x1126)) (and (=> (and (and (= (x3736 (x2147 x4721)) x131) (> 405663989 x2063) (> 2217467699 x2063) (not (= 178855970 x2063)) (> 988262939 x2063) (not (= x2063 75483562)) (= x3942 (x4761 (- x2505 4))) (= x3637 x4078) (not (< x2505 4)) (not (= 242558722 x2063)) (= x5381 10742207464693106059581744854972325794081737850190833080250671788038469713920) (< 0 x131) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3942) true) (> 32 x3942)) (> x3942 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x4942) (= x2505 36) (= 398450620 x2063) (= x2505 x417)) x1126) (and (=> x4942 x3787) (=> (and (and (= (= x3637 x4078) x985) (= x5311 x3637)) (not x4942)) (and (=> (not x985) x3787) (=> (and x985 (and (= x2083 (x2760 (x2147 x3637) (x3059 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x214) (= x97 32) (= x3080 1) (>= x214 0) (= x214 (x3626 x2083)))) x4324))))) (=> (and (and (and x4031 (and (= 398450620 x124) (> x4427 0) (= x2659 (x4761 (- x1257 4))) (= 36 x1257) (= x4427 (x3736 (x2147 x4287))) (not (= x124 178855970)) (= x3960 (or (and (< x2659 32) (= true (<= x2659 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x2659 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x417 x1257) (not (= 75483562 x124)) (> 405663989 x124) (not (= x124 242558722)) (> 988262939 x124) (= x4078 x3957) (not (> 4 x1257)) (> 2217467699 x124) (= x2676 10742207464693106059581744854972325794081737850190833080250671788038469713920))) (= (= x2406 x4287) x4031)) (not x1126)) (and (=> (and (not x3960) (and (= x3957 x4452) (= (= x3957 x4078) x4110))) (and (=> (not x4110) x1474) (=> (and x4110 (and (= x1260 (x132 x1156)) (<= 0 x1260) (= x1156 (x2760 (x2147 x3957) (x3059 6) 0)) (= x4198 32) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1260) (= 1 x1115))) x3726))) (=> x3960 x1474))))))) (=> x974 x4233))))))) (=> (not x4809) x4233))))))) x489))
(assert (x5093 x3804))
(assert (x5093 x2384))
(assert (x5093 x2855))
(assert (=> (>= 10000 x2598) (= (x3059 x2598) (x2147 x2598))))
(assert (x5093 x1433))
(assert (x5093 x3544))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x3658 x2087 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x570 x2087 1461501637330902918203684832716283019655932542976)) x2087)) (x355 x2087 1461501637330902918203684832716283019655932542976) (x3825 x2087 1461501637330902918203684832716283019655932542976) (x4162 x2087 1461501637330902918203684832716283019655932542976)))
(assert (x5093 x2154))
(assert (=> (>= 10000 x2125) (= (x3059 x2125) (x2147 x2125))))
(assert (= x2426 (and (not x1889) x4777)))
(assert (x5093 x675))
(assert (= (and x4108 x3099) x3691))
(assert (= x3076 (and x1907 x5265)))
(assert (= x4620 (and (not x2591) x5032)))
(assert (= x2208 (and x1874 x1389)))
(assert (= x3210 (and x2455 (not x146))))
(assert (x5093 x4477))
(assert (x5093 x999))
(assert (x5093 x2763))
(assert (= (and x5401 (not x2750)) x4170))
(assert (x5093 x1744))
(assert (x5093 x2558))
(assert (= (and x1607 (not x3175)) x1651))
(assert (= x3209 (or x4706 x3962)))
(assert (= x3518 (=> (and (= x2692 0) (= x4094 x2341)) x4892)))
(assert (x5093 x3590))
(assert (= x2262 (and x1681 x4653)))
(assert (x3513 x520 (- x340 x1368)))
(assert (= (and x1764 (not x3668)) x536))
(assert (= x3137 (=> (and (or (and (= x275 x815) x3868) (and (= 0 x275) (not x3868))) (and (<= 0 x4397) (<= x4397 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x4397 x815) x3868))) x2671)))
(assert (x5093 x4559))
(assert (x5093 x1128))
(assert (= x858 (and (not x785) x621)))
(assert (x5093 x3434))
(assert (= x3726 (=> (and (= x4978 x1115) (= x4198 x322)) x503)))
(assert (= x2486 (and x461 (not x4201))))
(assert (x5093 x4428))
(assert (x3331 x4766))
(assert (= (and (not x5187) x5065) x940))
(assert (= x3223 (not (and (= (x4345 x3586 1) x2461) (< x740 1461501637330902918203684832716283019655932542976) (<= x740 1461501637330902918203684832716283019655932542975) (>= x740 0) (= x740 (x1113 x2461)) (= (x2760 (x2147 x551) x2034 0) x3586)))))
(assert (x5093 x2940))
(assert (= x1138 (and (not x739) x232)))
(assert (x5093 x3084))
(assert (= x2088 (and (not x239) x4879)))
(assert (= (and x3305 x113) x1952))
(assert (x5093 x629))
(assert (x5093 x3522))
(assert (=> (>= 10000 x1390) (= (x2147 x1390) (x3059 x1390))))
(assert (x5093 x1575))
(assert (= x3841 (and x4370 x2698)))
(assert (= (x3311 (x4345 x4189 1)) (+ (x3311 x4189) 1)))
(assert (x1311 x4594))
(assert (= (and x4649 x2704) x3418))
(assert (= x1293 (and x4583 (not x3818))))
(assert (x5093 x4166))
(assert (x5093 x5437))
(assert (= (and (not x968) x3915) x3857))
(assert (= (+ 1 (x3311 x3687)) (x3311 (x4345 x3687 1))))
(assert (x5093 x1148))
(assert (x5093 x2870))
(assert (x5093 x4749))
(assert (= x2608 (and x5247 x3981)))
(assert (= (and x1451 (not x3148)) x446))
(assert (= (and x3602 x736) x3173))
(assert (x5093 x2542))
(assert (x5093 x382))
(assert (= x4267 (and x288 x3326)))
(assert (= (and (not x274) x4780) x3659))
(assert (= x4008 (and x889 x4139)))
(assert (= (and (not x1681) x4653) x1882))
(assert (x5093 x519))
(assert (x5093 x459))
(assert (x5093 x3138))
(assert (= (and x2866 (not x4411)) x358))
(assert (x5093 x1558))
(assert (x5093 x3823))
(assert (= (x3059 2835717307) (x2147 2835717307)))
(assert (= x2332 (and x217 x3402)))
(assert (= (and x2878 x1975) x3812))
(assert (= x5134 (and x2646 x1779)))
(assert (x3513 x340 (- x520 x2299)))
(assert (= (or x30 x4140 x3369 x1268) x1713))
(assert (= (and (not x540) x2361) x2345))
(assert (= (x3311 (x4345 x2033 2)) (+ 2 (x3311 x2033))))
(assert (x5093 x648))
(assert (x5093 x4105))
(assert (x5093 x3185))
(assert (=> (<= x3823 10000) (= (x3059 x3823) (x2147 x3823))))
(assert (x5093 x3117))
(assert (= x2274 (and (not x4694) x186)))
(assert (and (x4259 1000000000000000000 x4766) (x887 1000000000000000000 x4766) (x4075 1000000000000000000 x4766) (and (= (x4860 1000000000000000000 (- x4766 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x4766 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x4766) (- (* x4766 1000000000000000000) (* x4766 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x4766 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x4766 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x4766 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x4766) (* x4766 1000000000000000000)) (x2358 1000000000000000000 x4766) (x244 1000000000000000000 x4766)))
(assert (x5093 x4502))
(assert (x5093 x416))
(assert (x5093 x3525))
(assert (= (x3311 (x4345 x2442 1)) (+ 1 (x3311 x2442))))
(assert (x5093 x2097))
(assert (x479 x3996))
(assert (=> (>= 10000 x3735) (= (x3059 x3735) (x2147 x3735))))
(assert (x5093 x3930))
(assert (= x4038 (and (not x1756) x966)))
(assert (= (=> (= x5058 (= 0 x3936)) (and (=> (and (= x1531 x1376) x5058) x505) (=> (and (not x5058) (= x2773 (or (and (< x276 32) (= (<= x276 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x276 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> (and (= x1376 x1531) x2773) x505) (=> (and (and (= x476 x1531) (= 1 x2075) (= 32 x5171)) (not x2773)) x2613))))) x599))
(assert (= x2958 (and (not x3863) x2510)))
(assert (x5093 x4330))
(assert (x3331 (- x2299 x520)))
(assert (= (=> (= x5202 (= x1186 0)) (and (=> x5202 x1172) (=> (and (not x5202) (and (= x2980 x4674) (= x2418 x3884) (= x2780 x4290) (= x2017 x3685))) x2188))) x1668))
(assert (= (and x3363 x3826) x700))
(assert (= (and x4955 x2135) x982))
(assert (x5093 x2238))
(assert (= (or x1763 x693 x3593 x1099 x1845 x1769) x4155))
(assert (=> (<= x804 10000) (= (x3059 x804) (x2147 x804))))
(assert (= x2957 (and x91 x1982)))
(assert (= (and x3077 (not x3727)) x4121))
(assert (= x2166 (or x2209 x2691 (and (not x3412) x4596) (and x4350 x1406) (and (not x1035) x1093) (and x1752 x1992))))
(assert (= x3000 (and x4528 x167)))
(assert (x3294 x2842 x4628))
(assert (x5093 x4273))
(assert (x5093 x2822))
(assert (= x1488 (or x707 x982)))
(assert (= (+ (x3311 x1869) 1) (x3311 (x4345 x1869 1))))
(assert (x5093 x2697))
(assert (= (and (not x2363) x2893) x3298))
(assert (x5093 x1784))
(assert (= (x3311 (x2147 x1558)) x1558))
(assert (x3331 (- x520 x340)))
(assert (x479 x595))
(assert (x5093 x214))
(assert (x5093 x2766))
(assert (= x4233 x4642))
(assert (= x3731 (and x3808 x3659)))
(assert (= (and x1022 x3986) x1066))
(assert (= (x3059 2134560854) (x2147 2134560854)))
(assert (x5093 x1911))
(assert (x5093 x127))
(assert (x5093 x246))
(assert (= (and x2773 x2250) x4890))
(assert (x5093 x2249))
(assert (= x4446 (and (not x4693) x2387)))
(assert (x4437 x4168))
(assert (=> (<= x2802 10000) (= (x3059 x2802) (x2147 x2802))))
(assert (= x3375 (=> (and (= 0 x4848) (= x5161 x307)) x376)))
(assert (= (and x4092 x1486) x5005))
(assert (= (and x469 (not x4995)) x5426))
(assert (x5093 x2601))
(assert (x5093 x2371))
(assert (x5093 x1742))
(assert (x5093 x3333))
(assert (= (and (not x4523) x4180) x2770))
(assert (x5093 x3693))
(assert (= (x2147 10936679508223583803006762266923565500374401145016910147028117655998246682624) (x3059 10936679508223583803006762266923565500374401145016910147028117655998246682624)))
(assert (= x3502 (or x1158 x990 x2631 x2058 x2174 x1659)))
(assert (=> (<= x5098 10000) (= (x2147 x5098) (x3059 x5098))))
(assert (x5093 x734))
(assert (x1311 x829))
(assert (= x3347 (and (not x4454) x2323)))
(assert (= (and x3817 x2526) x1842))
(assert (= x1586 x2448))
(assert (= x1900 (and x4759 x4648)))
(assert (x1311 x473))
(assert (= (and (not x4521) x5107) x833))
(assert (=> (>= 10000 x4078) (= (x2147 x4078) (x3059 x4078))))
(assert (x4437 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (and x2863 x3266) x5124))
(assert (x5093 x4369))
(assert (= x2581 (and x508 (not x4925))))
(assert (= x5082 (and x810 x4868)))
(assert (x5093 x4730))
(assert (= (or x1997 x5002) x5172))
(assert (= x1922 (and x4463 (not x2425))))
(assert (= x376 (=> (and (= x4848 x2730) (= x307 x2042)) x2300)))
(assert (= x5145 (and x3974 x1386)))
(assert (= x3756 (or x1122 x3426 x1477 x3700)))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x3658 x154 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x570 x154 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x154)) (x355 x154 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3825 x154 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4162 x154 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x5093 x1749))
(assert (x5093 x4671))
(assert (x5093 x3613))
(assert (x885 x1368 x2299 x1194 x520))
(assert (= x1468 (and x4620 (not x107))))
(assert (= (and x4215 (not x4999)) x670))
(assert (= (and x2100 x767) x2328))
(assert (x5093 x2738))
(assert (x348 x70))
(assert (= (or x2616 x1138) x2872))
(assert (x5093 x2468))
(assert (x5093 x4123))
(assert (x5093 x3988))
(assert (= x1085 (and x2290 (not x5357))))
(assert (= (x3311 (x3059 2217467699)) 2217467699))
(assert (= (x3311 (x2147 x1254)) x1254))
(assert (x5093 x4915))
(assert (= (=> (and (or (and (not x1010) (= x211 0)) (and x1010 (= x4220 x211))) (and (= x1010 (< x4397 x4220)) (<= x4397 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x4397))) x3798) x4460))
(assert (= (and x5067 x1028) x5194))
(assert (= (x3311 (x4345 x2857 1)) (+ 1 (x3311 x2857))))
(assert (x5093 x574))
(assert (x5093 x4317))
(assert (x1311 x2682))
(assert (= (and x3366 x1293) x3087))
(assert (x5093 x4591))
(assert (x5093 x763))
(assert (= (and x4834 x5253) x879))
(assert (= x3277 (and x1451 x3148)))
(assert (x5093 x1961))
(assert (=> (<= x4668 10000) (= (x2147 x4668) (x3059 x4668))))
(assert (x1311 x1318))
(assert (=> (<= x2738 10000) (= (x3059 x2738) (x2147 x2738))))
(assert (x5093 x3676))
(assert (= (=> (and (and (= (x2760 (x2147 x2406) (x3059 158) 0) x1635) (= x3424 (x4345 x188 2)) (= (x4345 x2383 1) x1914) (<= x1272 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1272) (= x3762 (x1025 1461501637330902918203684832716283019655932542975 x1015)) (= x2810 (x2760 (x2147 x2406) (x3059 154) 0)) (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x3735) (= (x3506 x3271) x4618) (<= x3510 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2760 (x2147 x3735) x1117 0) x188) (= x2383 (x2760 (x2147 x2738) x1635 0)) (<= 0 x815) (= x3271 (x4345 x1978 2)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x815) (>= x4618 0) (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x2738) (= (x156 x3424) x3510) (<= x4397 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x619 x2383) x815) (= (x2789 x1914) x1272) (= (x2760 (x2147 x2406) (x3059 155) 0) x1117) (>= x4397 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4618) (= x991 (< x4397 x1272)) (= x1978 (x2760 (x2147 x3762) x2810 0)) (>= x3510 0)) (or (and (= x197 x1272) x991) (and (not x991) (= 0 x197)))) x3768) x1304))
(assert (x5093 x2593))
(assert (= (and x4143 (not x234)) x5074))
(assert (= x4745 (and (not x338) x1290)))
(assert (= x827 (and (not x1640) x2332)))
(assert (x5093 x4704))
(assert (x5093 x1247))
(assert (x5093 x2331))
(assert (= (+ (x3311 x2339) 1) (x3311 (x4345 x2339 1))))
(assert (x1311 x4885))
(assert (= (and (not x3851) x4464) x4913))
(assert (x5093 x4682))
(assert (x5093 x2506))
(assert (x1311 x4564))
(assert (x5093 x3292))
(assert (= x530 (and x681 x2975)))
(assert (x5093 x2783))
(assert (= (=> (and (= 0 x194) (= x3799 x5011)) x1909) x554))
(assert (and (x1458 x2410 1000000000000000000) (x1175 x2410 1000000000000000000) (=> (and (> x2410 0) (< 0 1000000000000000000)) (and (> (* (x3658 x2410 1000000000000000000) 1000000000000000000) (- x2410 1000000000000000000)) (<= (* 1000000000000000000 (x3658 x2410 1000000000000000000)) x2410))) (x5235 x2410 1000000000000000000) (x2792 x2410 1000000000000000000)))
(assert (x5093 x395))
(assert (x5093 x3462))
(assert (x5093 x3337))
(assert (x5093 x4564))
(assert (=> (<= x1222 10000) (= (x3059 x1222) (x2147 x1222))))
(assert (x4437 x1071))
(assert (= (x3311 (x2147 x2634)) x2634))
(assert (= x4293 (and (not x69) x2080)))
(assert (x5093 x4494))
(assert (= (and x3105 (not x101)) x3477))
(assert (= x588 (=> (and (= 0 x3421) (= x2542 x236)) x823)))
(assert (x5093 x866))
(assert (= x4233 x947))
(assert (x3331 (- x1194 x1368)))
(assert (= (and x1496 x3899) x3593))
(assert (= x393 (or x3761 x3076 x3759 (and (not x4175) x1) (and x694 x4301) (and x1050 x3444) (and (not x4199) x3427) (and x2370 x4624) (and x5109 x2548))))
(assert (= (and (not x4541) x3473) x776))
(assert (x5093 x754))
(assert (= (=> (= (> x2897 0) x1041) (and (=> (and (and (<= x4748 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1832 (= x4357 0)) (>= x4748 0)) x1041) (and (=> (and (not x1832) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2891) (= (x2760 (x2147 x4357) x3872 0) x3093) (= x2891 (x2797 x954)) (= x2511 (= 0 x2891)) (>= x2891 0) (= (x4345 x3093 2) x954))) (and (=> (and x2511 (and (and (= (x4345 x3872 1) x993) (<= x5192 1461501637330902918203684832716283019655932542975) (<= 0 x5192) (= x5192 (x5115 x993)) (= x953 (ite (< 0 x4748) (not (= 0 x5192)) (< 0 x4748))) (> 1461501637330902918203684832716283019655932542976 x5192)) (or (and (and (<= x1176 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3293 (x2760 (x2147 x5192) x3872 0)) (= x1176 (x2797 x1265)) (= (x4345 x3293 2) x1265) (= x3057 (< x1176 x2897)) (= x3992 (not x3057)) (>= x1176 0)) x953) (and (not x953) (= x3992 x953))))) x3919) (=> (not x2511) x4501))) (=> x1832 x5264))) (=> (and (= x3048 x284) (not x1041)) x492))) x5092))
(assert (x5093 x1632))
(assert (= (=> (and (= x2419 x5165) (= 0 x4129)) x2524) x102))
(assert (x5093 x685))
(assert (= x4981 (and (not x4942) x2693)))
(assert (x5093 x1072))
(assert (=> (<= x4601 10000) (= (x3059 x4601) (x2147 x4601))))
(assert (=> (>= 10000 x4197) (= (x3059 x4197) (x2147 x4197))))
(assert (x5093 x2101))
(assert (= (and x2472 x3335) x516))
(assert (= x1086 (and x4873 (not x2544))))
(assert (= (x3311 (x2147 x2982)) x2982))
(assert (x5093 x4069))
(assert (= 76833804140862540057647519496925185374644862498684814347804924264468996685824 (x3311 (x3059 76833804140862540057647519496925185374644862498684814347804924264468996685824))))
(assert (= x5022 (or x1843 x3774)))
(assert (x5093 x5165))
(assert (= (x3311 (x2147 x1971)) x1971))
(assert (= x4751 (or x1152 x4514)))
(assert (x5093 x4930))
(assert (and (x4259 1000000000000000000 x4522) (x887 1000000000000000000 x4522) (x4075 1000000000000000000 x4522) (and (= (x4860 1000000000000000000 (- x4522 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x4522 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x4522) (- (* x4522 1000000000000000000) (* x4522 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x4522 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x4522 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x4522 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x4522) (* x4522 1000000000000000000)) (x2358 1000000000000000000 x4522) (x244 1000000000000000000 x4522)))
(assert (= (=> (and (= x2683 (ite (> x4748 x1983) (not (= 0 x5140)) (> x4748 x1983))) (or (and x2683 (and (and (= x3613 (x5115 x993)) (>= 1461501637330902918203684832716283019655932542975 x3613) (< x3613 1461501637330902918203684832716283019655932542976) (<= 0 x3613) (= (< 0 x5279) x4925) (= (x4761 (- x5140 x3613)) x5279)) (or (and (and (= (x2760 (x2147 x5140) x3872 0) x3751) (= (x4345 x2833 1) x4592) (= x5216 x4109) (= (x3589 (+ x284 96)) x5216) (= x3788 (x2760 (x2147 x5140) x3872 0)) (<= x2940 1461501637330902918203684832716283019655932542975) (= x2833 (x2760 (x2147 x2940) x3872 0)) (= x3925 (x2760 (x2147 x4357) x3872 0)) (= x1447 (x4345 x3925 1)) (>= x2940 0) (= (x3864 x3751) x2940) (= (x4345 x1447 1) x2132) (< x2940 1461501637330902918203684832716283019655932542976)) x4925) (and (not x4925) (and (= x483 (x2760 (x2147 x4357) x3872 0)) (= x4193 (x2760 (x2147 x5140) x3872 0)) (= x5029 x4109) (= x5029 (x3589 (+ x284 96))) (= (x4345 x483 1) x5204) (= (x4345 x5204 1) x2811)))))) (and (and (and (= x4104 (x5115 x993)) (= x237 (= x4104 0)) (<= x4104 1461501637330902918203684832716283019655932542975) (<= 0 x4104) (< x4104 1461501637330902918203684832716283019655932542976)) (or (and (and (= x2868 (x2760 (x2147 x4357) x3872 0)) (= (x4345 x993 1) x123) (= (x3589 (+ x284 96)) x1814) (= x4109 x1814) (= (x4345 x4612 1) x1046) (= (x4345 x2868 1) x4612)) x237) (and (and (= (x4345 x3587 1) x4701) (= (x4345 x993 1) x669) (< x64 1461501637330902918203684832716283019655932542976) (= x64 (x4535 x669)) (= x2875 x4109) (= x1737 (x2760 (x2147 x64) x3872 0)) (<= x64 1461501637330902918203684832716283019655932542975) (= (x2760 (x2147 x4357) x3872 0) x4929) (= x2963 (x4345 x1737 1)) (= (x3589 (+ x284 96)) x2875) (= (x4345 x4929 1) x3587) (<= 0 x64)) (not x237)))) (not x2683)))) x3807) x1935))
(assert (= (and x3866 (not x4036)) x3833))
(assert (= (or x2623 x5240) x4177))
(assert (x5093 x1260))
(assert (x5093 x1173))
(assert (x5093 x4323))
(assert (= (x2147 26959946667150639794667015087019630673637144422540572481103610249215) (x3059 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (x5093 x4722))
(assert (= x561 (and x696 x5317)))
(assert (= (and (=> (and (not x5349) (and (= x3794 x4265) (= x4597 1))) x3067) (=> (and (and (= x3755 x2406) (= x3794 x1825) (= x1711 x1532)) x5349) x4429)) x3560))
(assert (x5093 x3794))
(assert (= (and (not x4135) x2627) x5359))
(assert (x1311 x39))
(assert (x5093 x4386))
(assert (x5093 x4097))
(assert (x5093 x4631))
(assert (x4437 x1784))
(assert (x5093 x4393))
(assert (x5093 x4816))
(assert (x5093 x4413))
(assert (x2366 x1194 x520 x520 x340))
(assert (= x2654 (and x158 x627)))
(assert (= x3414 (and (not x1841) x691)))
(assert (= x4073 (or x3577 (and (not x2077) x4843))))
(assert (x5093 x2980))
(assert (= 1461501637330902918203684832716283019655932542976 (x3311 (x3059 1461501637330902918203684832716283019655932542976))))
(assert (= x4233 x773))
(assert (= (and (not x3289) x849) x4841))
(assert (x5093 x2603))
(assert (=> (<= x1549 10000) (= (x3059 x1549) (x2147 x1549))))
(assert (= (and x4709 x5064) x4186))
(assert (= x537 (x3311 (x2147 x537))))
(assert (x5093 x2433))
(assert (= x2072 (and x4832 (not x1508))))
(assert (x5093 x4586))
(assert (x2366 x1368 x2299 x340 x520))
(assert (= (=> (and (= x3625 x74) (= x1963 x2357)) x1696) x1929))
(assert (= (and (=> (and (not x3652) (and (= x5140 x411) (= 1 x1983))) x1935) (=> (and (and (= x411 x1825) (= x2406 x3755) (= x3872 x1532)) x3652) x4429)) x1054))
(assert (x5093 x4144))
(assert (x5093 x4190))
(assert (= 10742207464693106059581744854972325794081737850190833080250671788038469713920 (x3311 (x3059 10742207464693106059581744854972325794081737850190833080250671788038469713920))))
(assert (x5093 x2311))
(assert (= x4066 (and (not x463) x1842)))
(assert (= (x2147 115792089237316195423570985008687907853269984665640564039457) (x3059 115792089237316195423570985008687907853269984665640564039457)))
(assert (x5093 x829))
(assert (x885 x2299 x1368 x340 x520))
(assert (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 (x3311 (x3059 6539370208772218570076773595062200405109424842860869254164860851635934461952))))
(assert (x479 x4230))
(assert (= x1161 (and (not x1959) x1168)))
(assert (= (x3311 (x4345 x3872 1)) (+ 1 (x3311 x3872))))
(assert (x5093 x4404))
(assert (= (and x321 x1313) x1703))
(assert (x5093 x4645))
(assert (x5093 x1998))
(assert (x5093 x3801))
(assert (= x5395 (=> (= (= x4978 0) x42) (and (=> (and (and (= (or (> x322 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x322 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x322))) x4528) (= x2161 (x1025 115792089237316195423570985008687907853269984665640564039457584007913129639904 x4607)) (= (x3589 (+ x465 x2161)) x2980) (= x4607 (x3589 (+ x322 31)))) (not x42)) (and (=> (and (and (= (ite (< x3440 x1643) x3440 x1643) x2057) (= (< 0 x2057) x1777) (= x1643 (x210 x465))) (not x4528)) (and (=> (and x1777 (and (>= 1461501637330902918203684832716283019655932542975 x965) (<= 0 x965) (= x4626 (> x5409 0)) (= (x4761 (- x2406 x965)) x5409) (< x965 1461501637330902918203684832716283019655932542976))) (and (=> (and (not x4626) (and (>= 1461501637330902918203684832716283019655932542975 x473) (> 1461501637330902918203684832716283019655932542976 x473) (<= 0 x473) (= x3828 (x3736 (x2147 x473))) (= (= 0 x3828) x2310) (= (x3589 (+ x2980 4)) x4634))) (and (=> (and (= x4986 true) x2310) x4001) (=> (and (and (= 4 x5272) (> 4294967296 x1170) (= (x3736 (x2147 x2406)) x4604) (= (= x4604 0) x1391)) (not x2310)) (and (=> (and (and (= (x4945 (x2147 x4078)) x2386) (= x3566 (x4945 (x2147 x2406))) (= x817 (and (<= x2057 x2386) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x3566 x2057))))) (not x1391)) (and (=> (and (not x817) (and (= x3267 x3884) (= x1897 x4290) (= 0 x1186) (= x5294 x2017))) x1668) (=> (and (and (= (- x1578 x2057) x2040) (< (+ x2057 x704) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x122 (x3589 (+ x704 x2057))) (= x704 (x2564 (x2147 x2406))) (= (x4945 (x2147 x4078)) x1578) (= x1199 (= x2406 x2179))) x817) (and (=> (and (not x1199) (= x3099 (= x4721 x2406))) (and (=> (and (and (= x2275 (x3736 (x2147 x4721))) (= x4889 35417553099779373699389112480655434059402432070290151981503827724506945814528) (= 4 x1616) (= x1616 x5272) (< 0 x2275) (= (= 0 x2057) x1502)) x3099) (and (=> (and x1502 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4525) (= 1313710058 x4362) (not (= x4362 988262939)) (= (x3626 x2094) x3339) (= (x2760 (x2147 x4078) (x3059 6) 0) x2094) (not (> 4 x1616)) (> 2217467699 x4362) (= (> x3339 x4525) x2553) (>= x3339 0) (<= 0 x4525) (not (< x4362 988262939)) (= x4525 (x3626 x2661)) (< x4362 1856199391) (= (x2760 (x2147 x4078) (x3059 6) 0) x2661) (not (= x4362 989455977)) (not (= 1038142104 x4362)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3339))) (and (=> (and (= x2933 x1897) x2553) x2301) (=> (and (not x2553) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1897) (>= x1897 0) (= (< x1187 x1897) x2784) (= x1187 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3339))) (= (x4761 (- x4525 x3339)) x735))) (and (=> (and x2784 (= x1897 x2933)) x2301) (=> (and (and (= x5152 (x3589 (+ x3339 x1897))) (= 128 x96) (= x1056 (x3589 (+ x3339 x1897))) (> 1461501637330902918203684832716283019655932542976 x3544) (<= x3544 1461501637330902918203684832716283019655932542975) (= (= x2330 x3544) x3990) (>= x3544 0)) (not x2784)) (and (=> (and x3990 (and (= x2096 100) (= x4928 (x3736 (x2147 x2330))) (= x3339 x4453) (= x4078 x1435) (= x4721 x4377) (> 1466279372 x2617) (= x4270 (x4761 (- x2096 4))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1072) (= x2617 599290589) (> x4928 0) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4270) (and (= (<= x4270 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x4270))) x769) (= x2096 100) (not (> 4 x2096)) (not (> 599290589 x2617)))) (and (=> (and (and (= (= x1435 x4078) x4769) (= x4297 x1435)) (not x769)) (and (=> (not x4769) x4472) (=> (and (and (= (= x4377 x4721) x624) (= x4438 x4377)) x4769) (and (=> (and (and (= x1016 (x3943 x986)) (<= x1016 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x1016 x3339) x631) (>= x1016 0) (= x4453 x1169) (= (x2760 (x2147 x1435) (x3059 1) 0) x986)) x624) (and (=> (and (not x631) (= (> x4453 x1016) x373)) (and (=> (and (and (= x744 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4453))) (= (x2138 x3650) x944) (= (x2760 (x2147 x4377) (x3059 1) 0) x3650) (<= x944 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2760 (x2147 x1435) (x3059 1) 0) x3274) (>= x944 0) (= (< x744 x944) x1851) (= (x4761 (- x1016 x4453)) x5233)) (not x373)) (and (=> (and (and (= (x3589 (+ x944 x4453)) x2183) (= (> x944 x2183) x5031)) (not x1851)) (and (=> x5031 x4472) (=> (and (and (<= 0 x4673) (= (x2760 (x2147 x4377) (x3059 1) 0) x53) (<= x4673 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2760 (x2147 x1435) (x3059 2) 0) x5047) (= x2834 (< x4673 x4453)) (= x3779 (x2760 (x2147 x4721) x5047 0)) (= x4673 (x2245 x3779))) (not x5031)) (and (=> x2834 x4472) (=> (and (= (< x4673 x4453) x739) (not x2834)) (and (=> (and (not x739) (and (= 32 x870) (= (x2760 (x2147 x4721) x1602 0) x224) (= x574 1) (= x1602 (x2760 (x2147 x1435) (x3059 2) 0)) (= (x4761 (- x4673 x4453)) x2964))) x5071) (=> x739 x4472))))))) (=> x1851 x4472))) (=> x373 x4472))) (=> x631 x4472))) (=> (not x624) x4472))))) (=> x769 x4472))) (=> (and (not x3990) (= (= x3544 x2179) x1067)) (and (=> (and (= x2847 (= x3544 x4721)) (not x1067)) (and (=> (and (and (= (= x4287 x3544) x796) (and (and (< x5085 2217467699) (not (= 547091486 x5085)) (= x3339 x4020) (= x5085 599290589) (not (< x5085 405663989)) (> 988262939 x5085) (= x498 (x3736 (x2147 x4287))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2319) (= x4812 (or (> x1027 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x1027 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x1027 96)))) (= x593 100) (= x4078 x2849) (not (= x5085 405663989)) (= x1027 (x4761 (- x593 4))) (= x2942 x4721) (not (< x593 4)) (= 100 x593) (> x498 0)) x796)) (not x2847)) (and (=> x4812 x1139) (=> (and (not x4812) (and (= x1363 x2849) (= (= x2849 x4078) x3028))) (and (=> (not x3028) x1139) (=> (and (and (= x152 x2942) (= (= x4721 x2942) x121)) x3028) (and (=> (not x121) x1139) (=> (and (and (= (x1150 x2531) x4395) (= x4042 (> x3339 x4395)) (= x2531 (x2760 (x2147 x2849) (x3059 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4395) (= x5308 x4020) (>= x4395 0)) x121) (and (=> x4042 x1139) (=> (and (not x4042) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1739) (= x3602 (> x4020 x1739)) (>= x1739 0) (= (x2760 (x2147 x2849) (x3059 5) 0) x4204) (= x1739 (x1150 x4204)))) (and (=> x3602 x1139) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2207) (= (x2760 (x2147 x2942) (x3059 5) 0) x252) (= (x3027 x252) x2207) (= x3940 (x4761 (- x1739 x4020))) (>= x2207 0) (= (> x2207 x66) x2560) (= x66 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4020)))) (not x3602)) (and (=> (and (and (= x5198 (x3589 (+ x4020 x2207))) (= 1 x5221) (= 1 x4477) (= x3342 32)) (not x2560)) x4402) (=> x2560 x1139))))))))))))) (=> (and (and (not (= 547091486 x3693)) (= x4210 100) (not (> 4 x4210)) (not (= 405663989 x3693)) (= 599290589 x3693) (= x5397 (x3736 (x2147 x4721))) (= x1442 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2438) (and (> 96 x2438) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2438) true)))) (= x4721 x804) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x5203) (= 100 x4210) (= x3339 x2826) (= x4078 x1778) (> x5397 0) (> 988262939 x3693) (= x2438 (x4761 (- x4210 4))) (> 2217467699 x3693) (not (< x3693 405663989))) x2847) (and (=> x1442 x2621) (=> (and (not x1442) (and (= x2362 (= x4078 x1778)) (= x182 x1778))) (and (=> (not x2362) x2621) (=> (and x2362 (and (= x2434 (= x4721 x804)) (= x804 x4563))) (and (=> (and (and (= x5153 (x2760 (x2147 x1778) (x3059 5) 0)) (= (< x4940 x3339) x3657) (>= x4940 0) (= x4940 (x5170 x5153)) (= x2826 x2520) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4940)) x2434) (and (=> x3657 x2621) (=> (and (and (= (x2760 (x2147 x1778) (x3059 5) 0) x3728) (<= x4494 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5170 x3728) x4494) (>= x4494 0) (= (> x2826 x4494) x2364)) (not x3657)) (and (=> x2364 x2621) (=> (and (not x2364) (and (= (x4761 (- x4494 x2826)) x4474) (= x4391 (< x4334 x3552)) (<= 0 x3552) (= (x4465 x5079) x3552) (= x5079 (x2760 (x2147 x804) (x3059 5) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3552) (= x4334 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2826))))) (and (=> (and (not x4391) (and (= x1064 1) (= 1 x480) (= 32 x3504) (= (x3589 (+ x2826 x3552)) x2697))) x1670) (=> x4391 x2621))))))) (=> (not x2434) x2621))))))))) (=> (and (and (not (= x3923 547091486)) (= (x4761 (- x4934 4)) x1944) (> 988262939 x3923) (> 2217467699 x3923) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1582) (not (< x4934 4)) (= x1664 (x3736 (x2147 x2179))) (= x4078 x3802) (= 100 x4934) (= x3923 599290589) (= (or (> x1944 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1944 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1944)))) x636) (= x3633 x3339) (= x2168 x4721) (= x4934 100) (not (< x3923 405663989)) (< 0 x1664) (not (= 405663989 x3923))) x1067) (and (=> (and (and (= (= x3802 x4078) x2373) (= x3295 x3802)) (not x636)) (and (=> (and x2373 (and (= x5386 x2168) (= x4961 (= x4721 x2168)))) (and (=> (and x4961 (and (= x5212 (> x3339 x1429)) (= x4026 (x2760 (x2147 x3802) (x3059 5) 0)) (= x1429 (x4964 x4026)) (= x4045 x3633) (>= x1429 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1429))) (and (=> (and (and (= x2037 (x2760 (x2147 x3802) (x3059 5) 0)) (= x3084 (x4964 x2037)) (= (> x3633 x3084) x3564) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3084) (<= 0 x3084)) (not x5212)) (and (=> x3564 x2898) (=> (and (not x3564) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5405) (= (x2760 (x2147 x2168) (x3059 5) 0) x534) (= x5405 (x5200 x534)) (= x4504 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3633))) (>= x5405 0) (= (> x5405 x4504) x79) (= (x4761 (- x3084 x3633)) x5332))) (and (=> (and (and (= x4575 (x3589 (+ x5405 x3633))) (= 32 x1232) (= x1061 1) (= x1312 1)) (not x79)) x3933) (=> x79 x2898))))) (=> x5212 x2898))) (=> (not x4961) x2898))) (=> (not x2373) x2898))) (=> x636 x2898))))))))))) (=> (and (= x2933 x1897) (not x1502)) x2301))) (=> (and (and (and (and (= (x3736 (x2147 x4287)) x4793) (= x1463 35417553099779373699389112480655434059402432070290151981503827724506945814528) (> x4793 0) (= x5272 x4807) (= x4807 4) (= (= 0 x2057) x649)) x4013) (= (= x4287 x2406) x4013)) (not x3099)) (and (=> (and (= x3267 x3103) (not x649)) x5334) (=> (and (and (= (x132 x4116) x1160) (<= 0 x514) (>= x1160 0) (= (> x1160 x514) x4092) (not (< x3467 988262939)) (not (= x3467 1038142104)) (not (= x3467 989455977)) (<= x514 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x3467 988262939)) (= x514 (x132 x862)) (> 2217467699 x3467) (not (> 4 x4807)) (= x862 (x2760 (x2147 x4078) (x3059 6) 0)) (<= x1160 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4116 (x2760 (x2147 x4078) (x3059 6) 0)) (< x3467 1856199391) (= 1313710058 x3467)) x649) (and (=> (and (not x4092) (and (<= x3267 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1180 (> x3267 x3819)) (= x3819 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1160))) (>= x3267 0) (= x5316 (x4761 (- x514 x1160))))) (and (=> (and x1180 (= x3267 x3103)) x5334) (=> (and (not x1180) (and (= (= x2330 x4076) x1759) (< x4076 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x4076) (= 128 x816) (= (x3589 (+ x3267 x1160)) x1597) (<= 0 x4076) (= (x3589 (+ x3267 x1160)) x3757))) (and (=> (and x1759 (and (= (or (and (> 96 x3158) (= true (<= x3158 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3158)) x1891) (= x4287 x4262) (= (x4761 (- x2026 4)) x3158) (= 599290589 x4610) (= 100 x2026) (= 100 x2026) (> 1466279372 x4610) (= x1160 x3928) (= x4078 x2228) (< 0 x1540) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2576) (not (> 4 x2026)) (not (> 599290589 x4610)) (= (x3736 (x2147 x2330)) x1540))) (and (=> (and (not x1891) (and (= (= x2228 x4078) x1972) (= x4835 x2228))) (and (=> (not x1972) x4837) (=> (and x1972 (and (= x3177 (= x4287 x4262)) (= x4262 x3611))) (and (=> (not x3177) x4837) (=> (and (and (= x3490 (x3943 x3486)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3490) (= (> x1160 x3490) x5357) (>= x3490 0) (= x3928 x515) (= (x2760 (x2147 x2228) (x3059 1) 0) x3486)) x3177) (and (=> x5357 x4837) (=> (and (not x5357) (= (< x3490 x3928) x3995)) (and (=> x3995 x4837) (=> (and (not x3995) (and (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3928)) x3114) (>= x3433 0) (= x3599 (x2760 (x2147 x2228) (x3059 1) 0)) (= (> x3433 x3114) x3501) (= x3550 (x2760 (x2147 x4262) (x3059 1) 0)) (= x3481 (x4761 (- x3490 x3928))) (= (x5208 x3550) x3433) (<= x3433 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (not x3501) (and (= (> x3433 x4079) x3227) (= (x3589 (+ x3928 x3433)) x4079))) (and (=> (and (not x3227) (and (= (x2760 (x2147 x4262) (x3059 1) 0) x72) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5014) (= x5014 (x2245 x2500)) (>= x5014 0) (= (x2760 (x2147 x4287) x3482 0) x2500) (= (> x3928 x5014) x1012) (= x3482 (x2760 (x2147 x2228) (x3059 2) 0)))) (and (=> x1012 x4837) (=> (and (= x880 (< x5014 x3928)) (not x1012)) (and (=> (and (and (= (x2760 (x2147 x2228) (x3059 2) 0) x1746) (= x2997 32) (= (x4761 (- x5014 x3928)) x4631) (= x3665 (x2760 (x2147 x4287) x1746 0)) (= 1 x585)) (not x880)) x4637) (=> x880 x4837))))) (=> x3227 x4837))) (=> x3501 x4837))))))))))) (=> x1891 x4837))) (=> (and (= (= x4076 x2179) x4309) (not x1759)) (and (=> (and x4309 (and (= 599290589 x1192) (not (= 405663989 x1192)) (= x2025 x4078) (not (< x1192 405663989)) (= x5111 (x3736 (x2147 x2179))) (not (> 4 x2149)) (= x1160 x4524) (> x5111 0) (= (x4761 (- x2149 4)) x4433) (< x1192 2217467699) (= x2149 100) (= (or (and (> 96 x4433) (= (<= x4433 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x4433 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x158) (not (= x1192 547091486)) (= 100 x2149) (= x4287 x1691) (< x1192 988262939) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x5142))) (and (=> x158 x2514) (=> (and (not x158) (and (= x1400 x2025) (= x4917 (= x2025 x4078)))) (and (=> (not x4917) x2514) (=> (and (and (= x1432 x1691) (= x3111 (= x4287 x1691))) x4917) (and (=> (and x3111 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x308) (= (< x308 x1160) x4263) (= x308 (x4964 x2008)) (<= 0 x308) (= x4524 x4401) (= (x2760 (x2147 x2025) (x3059 5) 0) x2008))) (and (=> (and (not x4263) (and (= x2506 (x4964 x1208)) (= x1208 (x2760 (x2147 x2025) (x3059 5) 0)) (<= x2506 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1508 (> x4524 x2506)) (>= x2506 0))) (and (=> x1508 x2514) (=> (and (not x1508) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x52) (= (x2760 (x2147 x1691) (x3059 5) 0) x2488) (<= 0 x52) (= (> x52 x2723) x5167) (= x2723 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4524))) (= (x921 x2488) x52) (= x5437 (x4761 (- x2506 x4524))))) (and (=> (and (and (= x428 1) (= (x3589 (+ x4524 x52)) x3391) (= 32 x3786) (= 1 x382)) (not x5167)) x155) (=> x5167 x2514))))) (=> x4263 x2514))) (=> (not x3111) x2514))))))) (=> (and (= (= x4076 x4721) x5080) (not x4309)) (and (=> (and x5080 (and (< 0 x3042) (= (x4761 (- x2082 4)) x501) (= (x3736 (x2147 x4721)) x3042) (= x518 599290589) (not (= 547091486 x518)) (= x2634 x4287) (= x1681 (or (> x501 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x501 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x501 96)))) (not (= x518 405663989)) (= 100 x2082) (= x3588 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< x518 2217467699) (not (< x518 405663989)) (= x4078 x4581) (= 100 x2082) (< x518 988262939) (not (< x2082 4)) (= x1160 x3916))) (and (=> (and (not x1681) (and (= x4581 x584) (= x2045 (= x4078 x4581)))) (and (=> (not x2045) x865) (=> (and (and (= x4400 (= x4287 x2634)) (= x2634 x370)) x2045) (and (=> (not x4400) x865) (=> (and x4400 (and (= x2869 x3916) (>= x3031 0) (= (x5170 x1019) x3031) (<= x3031 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1765 (> x1160 x3031)) (= x1019 (x2760 (x2147 x4581) (x3059 5) 0)))) (and (=> (and (not x1765) (and (= (x5170 x2205) x5375) (>= x5375 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5375) (= (x2760 (x2147 x4581) (x3059 5) 0) x2205) (= (> x3916 x5375) x4147))) (and (=> (and (not x4147) (and (= x2504 (x4891 x3672)) (= x163 (x4761 (- x5375 x3916))) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3916)) x644) (>= x2504 0) (<= x2504 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3672 (x2760 (x2147 x2634) (x3059 5) 0)) (= (> x2504 x644) x1706))) (and (=> x1706 x865) (=> (and (and (= x2357 1) (= x4126 1) (= x1013 (x3589 (+ x3916 x2504))) (= 32 x74)) (not x1706)) x1929))) (=> x4147 x865))) (=> x1765 x865))))))) (=> x1681 x865))) (=> (and (not x5080) (and (and x2586 (and (= x2184 (x3736 (x2147 x4287))) (= x5098 x4287) (= x1720 x4078) (not (< x1239 4)) (< x1128 988262939) (= x799 x1160) (= 100 x1239) (not (= x1128 405663989)) (< x1128 2217467699) (= (or (and (< x4371 96) (= (<= x4371 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4371)) x4469) (= 599290589 x1128) (= x1287 16156842317565293874272834530371880720966471053262404558597773956279093428224) (< 0 x2184) (= x1239 100) (not (< x1128 405663989)) (= (x4761 (- x1239 4)) x4371) (not (= x1128 547091486)))) (= x2586 (= x4287 x4076)))) (and (=> (and (and (= x522 x1720) (= (= x4078 x1720) x1436)) (not x4469)) (and (=> (not x1436) x3356) (=> (and (and (= x61 (= x4287 x5098)) (= x5098 x5201)) x1436) (and (=> (not x61) x3356) (=> (and x61 (and (<= x2074 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x1160 x2074) x2591) (= x4720 (x2760 (x2147 x1720) (x3059 5) 0)) (>= x2074 0) (= (x1150 x4720) x2074) (= x2528 x799))) (and (=> x2591 x3356) (=> (and (not x2591) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1648) (= (> x799 x1648) x107) (<= 0 x1648) (= (x2760 (x2147 x1720) (x3059 5) 0) x2919) (= x1648 (x1150 x2919)))) (and (=> x107 x3356) (=> (and (and (= (x4761 (- x1648 x799)) x3709) (<= x2756 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2756 (x5063 x3436)) (= (x2760 (x2147 x5098) (x3059 5) 0) x3436) (= (< x301 x2756) x967) (<= 0 x2756) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x799)) x301)) (not x107)) (and (=> (and (not x967) (and (= x2865 1) (= (x3589 (+ x2756 x799)) x4991) (= x2388 1) (= x861 32))) x4997) (=> x967 x3356))))))))))) (=> x4469 x3356))))))))))) (=> (and (= x3103 x3267) x4092) x5334))))))) (=> (and (and (= (x3736 (x2147 x2179)) x3556) (> x3556 0) (= x5266 35417553099779373699389112480655434059402432070290151981503827724506945814528) (= (= 0 x2057) x41) (= x2499 x5272) (= x2499 4)) x1199) (and (=> (and (not x41) (= x1305 x5294)) x4336) (=> (and x41 (and (not (< x2084 988262939)) (= x814 (x250 x3718)) (= x2084 1313710058) (= (< x814 x3648) x2279) (<= 0 x3648) (= x3648 (x250 x5055)) (= (x2760 (x2147 x4078) (x3059 6) 0) x5055) (= (x2760 (x2147 x4078) (x3059 6) 0) x3718) (<= x814 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x2499 4)) (<= x3648 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (= x2084 1038142104)) (> 2217467699 x2084) (not (= 988262939 x2084)) (not (= x2084 989455977)) (<= 0 x814) (> 1856199391 x2084))) (and (=> (and (not x2279) (and (= (x4761 (- x814 x3648)) x28) (= x4148 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3648))) (<= 0 x5294) (<= x5294 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3973 (< x4148 x5294)))) (and (=> (and (and (<= 0 x5325) (= (x3589 (+ x5294 x3648)) x1748) (= x2689 (x3589 (+ x3648 x5294))) (<= x5325 1461501637330902918203684832716283019655932542975) (= x4558 128) (= x4205 (= x5325 x2330)) (< x5325 1461501637330902918203684832716283019655932542976)) (not x3973)) (and (=> (and (= x4112 (= x5325 x2179)) (not x4205)) (and (=> (and (not x4112) (= x3266 (= x4721 x5325))) (and (=> (and (and (and (and (= 100 x4865) (not (= x1039 405663989)) (= x4275 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4865 100) (> x5238 0) (= (x4761 (- x4865 4)) x5118) (not (> 405663989 x1039)) (= (or (> x5118 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x5118) (= true (<= x5118 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x1243) (not (= 547091486 x1039)) (= x1039 599290589) (< x1039 988262939) (not (< x4865 4)) (= x2728 x2179) (= x3648 x2653) (> 2217467699 x1039) (= (x3736 (x2147 x4287)) x5238) (= x4078 x2614)) x889) (= (= x4287 x5325) x889)) (not x3266)) (and (=> x1243 x3375) (=> (and (not x1243) (and (= x2152 (= x4078 x2614)) (= x5275 x2614))) (and (=> (not x2152) x3375) (=> (and (and (= x2728 x3909) (= (= x2179 x2728) x386)) x2152) (and (=> (and x386 (and (= x3515 (< x295 x3648)) (= (x2760 (x2147 x2614) (x3059 5) 0) x1767) (<= 0 x295) (= x2653 x3242) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x295) (= (x1150 x1767) x295))) (and (=> (and (and (= x810 (< x2162 x2653)) (= (x1150 x1223) x2162) (<= 0 x2162) (= (x2760 (x2147 x2614) (x3059 5) 0) x1223) (<= x2162 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x3515)) (and (=> (and (and (= x3953 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2653))) (= x1017 (< x3953 x4475)) (<= x4475 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5076 (x4761 (- x2162 x2653))) (= x4475 (x4753 x548)) (>= x4475 0) (= (x2760 (x2147 x2728) (x3059 5) 0) x548)) (not x810)) (and (=> x1017 x3375) (=> (and (and (= 1 x1183) (= x307 32) (= (x3589 (+ x2653 x4475)) x1026) (= x4848 1)) (not x1017)) x376))) (=> x810 x3375))) (=> x3515 x3375))) (=> (not x386) x3375))))))) (=> (and (and (not (< x1367 4)) (= (x4761 (- x1367 4)) x5119) (not (< x3225 405663989)) (= 100 x1367) (= x1267 x3648) (= x5290 (x3736 (x2147 x4721))) (= x1390 x2179) (> x5290 0) (= 100 x1367) (= x4078 x856) (not (= 405663989 x3225)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x541) (> 988262939 x3225) (> 2217467699 x3225) (= x4239 (or (and (= (<= x5119 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x5119)) (> x5119 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (= 547091486 x3225)) (= 599290589 x3225)) x3266) (and (=> x4239 x2981) (=> (and (and (= (= x4078 x856) x5341) (= x856 x582)) (not x4239)) (and (=> (not x5341) x2981) (=> (and (and (= x1390 x1692) (= x2302 (= x2179 x1390))) x5341) (and (=> (and x2302 (and (= (x2760 (x2147 x856) (x3059 5) 0) x2547) (= (x5170 x2547) x2238) (<= x2238 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1921 (< x2238 x3648)) (= x374 x1267) (>= x2238 0))) (and (=> (and (not x1921) (and (= (x2760 (x2147 x856) (x3059 5) 0) x5035) (= x5371 (x5170 x5035)) (<= 0 x5371) (<= x5371 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x1267 x5371) x5132))) (and (=> x5132 x2981) (=> (and (not x5132) (and (>= x2886 0) (= (< x2652 x2886) x2365) (= (x2760 (x2147 x1390) (x3059 5) 0) x3557) (= (x4761 (- x5371 x1267)) x2035) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1267)) x2652) (<= x2886 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4939 x3557) x2886))) (and (=> x2365 x2981) (=> (and (not x2365) (and (= x111 1) (= x3117 1) (= 32 x312) (= (x3589 (+ x2886 x1267)) x4680))) x3711))))) (=> x1921 x2981))) (=> (not x2302) x2981))))))))) (=> (and x4112 (and (< x5017 2217467699) (= 100 x2558) (= x1125 (x3736 (x2147 x2179))) (= x2558 100) (> 988262939 x5017) (not (> 405663989 x5017)) (= (x4761 (- x2558 4)) x3192) (= x1621 (or (and (= (<= x3192 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x3192 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3192))) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1332) (not (< x2558 4)) (= x5017 599290589) (not (= x5017 547091486)) (= x2179 x5432) (< 0 x1125) (= x3648 x180) (not (= x5017 405663989)) (= x3131 x4078))) (and (=> (and (and (= x3131 x4930) (= (= x3131 x4078) x4579)) (not x1621)) (and (=> (and x4579 (and (= x2116 (= x2179 x5432)) (= x5432 x4144))) (and (=> (not x2116) x1802) (=> (and x2116 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x647) (= x2704 (> x3648 x647)) (= (x4964 x3758) x647) (= x3758 (x2760 (x2147 x3131) (x3059 5) 0)) (<= 0 x647) (= x1850 x180))) (and (=> x2704 x1802) (=> (and (and (= x5363 (< x3196 x180)) (<= x3196 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4964 x628) x3196) (<= 0 x3196) (= (x2760 (x2147 x3131) (x3059 5) 0) x628)) (not x2704)) (and (=> (and (and (>= x1967 0) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x180)) x2311) (= x3010 (x2760 (x2147 x5432) (x3059 5) 0)) (= (x4761 (- x3196 x180)) x3383) (= (< x2311 x1967) x4182) (= (x3878 x3010) x1967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1967)) (not x5363)) (and (=> x4182 x1802) (=> (and (not x4182) (and (= x1533 1) (= 1 x3938) (= 32 x1538) (= (x3589 (+ x180 x1967)) x2334))) x1303))) (=> x5363 x1802))))))) (=> (not x4579) x1802))) (=> x1621 x1802))))) (=> (and (and (< 0 x4238) (= x4078 x4685) (= x3364 599290589) (= x3337 16156842317565293874272834530371880720966471053262404558597773956279093428224) (> 1466279372 x3364) (not (< x3364 599290589)) (= x4197 x2179) (not (< x4338 4)) (= x4338 100) (= 100 x4338) (= x3648 x4923) (= x3727 (or (and (= true (<= x4307 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x4307 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4307))) (= (x3736 (x2147 x2330)) x4238) (= (x4761 (- x4338 4)) x4307)) x4205) (and (=> x3727 x3438) (=> (and (and (= x384 (= x4685 x4078)) (= x3110 x4685)) (not x3727)) (and (=> (and (and (= x4804 (= x2179 x4197)) (= x665 x4197)) x384) (and (=> (not x4804) x3438) (=> (and x4804 (and (= (> x3648 x12) x4834) (<= 0 x12) (= x1510 x4923) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x12) (= (x2760 (x2147 x4685) (x3059 1) 0) x3164) (= x12 (x3943 x3164)))) (and (=> (and (not x4834) (= (> x4923 x12) x1263)) (and (=> x1263 x3438) (=> (and (and (= (x2760 (x2147 x4197) (x3059 1) 0) x918) (= (x3695 x918) x5230) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5230) (>= x5230 0) (= (x2760 (x2147 x4685) (x3059 1) 0) x2876) (= (> x5230 x2411) x2767) (= x2411 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4923))) (= x1885 (x4761 (- x12 x4923)))) (not x1263)) (and (=> (and (not x2767) (and (= x4036 (< x1727 x5230)) (= (x3589 (+ x4923 x5230)) x1727))) (and (=> x4036 x3438) (=> (and (and (= x1742 (x2245 x3075)) (= x3075 (x2760 (x2147 x2179) x5239 0)) (= (x2760 (x2147 x4685) (x3059 2) 0) x5239) (<= x1742 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1742 0) (= x2376 (< x1742 x4923)) (= (x2760 (x2147 x4197) (x3059 1) 0) x267)) (not x4036)) (and (=> (and (= (< x1742 x4923) x3664) (not x2376)) (and (=> x3664 x3438) (=> (and (and (= (x2760 (x2147 x2179) x638 0) x3610) (= 1 x5006) (= 32 x4382) (= x638 (x2760 (x2147 x4685) (x3059 2) 0)) (= x2983 (x4761 (- x1742 x4923)))) (not x3664)) x1567))) (=> x2376 x3438))))) (=> x2767 x3438))))) (=> x4834 x3438))))) (=> (not x384) x3438))))))) (=> (and x3973 (= x1305 x5294)) x4336))) (=> (and x2279 (= x1305 x5294)) x4336))))))))) (=> (and x1391 (= true x4986)) x4001))))) (=> (and x4626 (and (and (and (= x2315 4238056678808933066457772256406219440718756300954938350892797929791311314944) (> 1466279372 x830) (= (x3736 (x2147 x2330)) x1685) (not (< x926 4)) (= x5360 x2057) (= x710 x439) (= 68 x926) (> 599290589 x830) (not (= 117300739 x830)) (= 157198259 x830) (< 0 x1685) (= (x4761 (- x926 4)) x2154) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2154) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2154)) (> 64 x2154))) x4012)) x3646) (and (= (x3589 (+ x2980 4)) x1669) (= x3646 (= x513 x2330)) (= (x3589 (+ x1669 32)) x3301)))) (and (=> (and (and (= x809 (= x710 x439)) (= x3403 x710)) (not x4012)) (and (=> (and x809 (and (= (x2760 (x2147 x710) x3603 0) x1606) (= x356 x5360) (= x3603 (x2760 (x2147 x4078) (x3059 2) 0)) (= x2028 32) (= 1 x1592))) x666) (=> (not x809) x3606))) (=> x4012 x3606))))) (=> (and (and (= x2980 x1382) (= x3267 x2783) (= x3324 x5294) (= x1897 x4471)) (not x1777)) x2894))) (=> (and (= x4986 true) x4528) x4001))) (=> x42 x1172)))))
(assert (= (and x4410 x5046) x1769))
(assert (= x4059 (and (not x4479) x4959)))
(assert (x3294 x1694 x2718))
(assert (x5093 x295))
(assert (= (x2147 398450620) (x3059 398450620)))
(assert (= (x3311 (x2147 x3129)) x3129))
(assert (x5093 x1124))
(assert (x5093 x2614))
(assert (x5093 x1890))
(assert (x1311 x1254))
(assert (x5093 x671))
(assert (x5093 x12))
(assert (= x110 (and x2353 x2915)))
(assert (x3331 x4522))
(assert (x5093 x3113))
(assert (x5093 x614))
(assert (= x3852 (=> (and (= x4759 (= 0 x1000)) (or (not x4759) x4759)) x2355)))
(assert (= x283 (and x4585 x219)))
(assert (= (and x3477 x3212) x2642))
(assert (x5093 x363))
(assert (= (x3311 (x2147 x3823)) x3823))
(assert (= 242558722 (x3311 (x3059 242558722))))
(assert (x5093 x4033))
(assert (x5093 x1983))
(assert (= x442 (or x3235 x2126 x4154 x220 x4713 x4760)))
(assert (=> (<= x2043 10000) (= (x2147 x2043) (x3059 x2043))))
(assert (x1311 x3168))
(assert (=> (<= x839 10000) (= (x2147 x839) (x3059 x839))))
(assert (x1311 x3795))
(assert (= (x3311 (x4345 x3039 1)) (+ (x3311 x3039) 1)))
(assert (x5093 x5140))
(assert (x5093 x3887))
(assert (= (and x2999 x4851) x4418))
(assert (x5093 x5102))
(assert (x5093 x4094))
(assert (x348 x3001))
(assert (= (and x3112 (not x3351)) x4864))
(assert (x4437 x2087))
(assert (x479 x2087))
(assert (x348 x3769))
(assert (= (or x3771 x3050) x4412))
(assert (x5093 x3884))
(assert (x5093 x4695))
(assert (x3331 (- x520 x2299)))
(assert (= x2514 (=> (and (= x1426 x3786) (= x382 0)) x155)))
(assert (x5093 x4377))
(assert (x5093 x3554))
(assert (x5093 x3637))
(assert (x479 x416))
(assert (x3513 x520 (- x340 x520)))
(assert (= x4862 (and x2996 x2511)))
(assert (= (and (not x4263) x3738) x4832))
(assert (x5093 x2297))
(assert (x5093 x4366))
(assert (= (and (not x1204) x946) x5390))
(assert (= x3745 (or x4394 x5164 x3831 x4716 x992 x3812 x1995 x733 x198 x2827 x438 x504 x2380 x1642 x4820 x2568 x5101 x5426 x165 x1862 x4482 x4697 x454 x1133 x2076 x2799 x1904 x2254 x2022 x4146)))
(assert (x5093 x4489))
(assert (= (and x978 (not x3156)) x3644))
(assert (x1311 x2849))
(assert (x1311 x1048))
(assert (= x3915 (and x4750 x1415)))
(assert (x3513 x2299 (- x1368 x340)))
(assert (= (x3311 (x3059 405663989)) 405663989))
(assert (x5093 x2382))
(assert (x5093 x311))
(assert (x5093 x5106))
(assert (x5093 x3009))
(assert (= x113 (and (not x2796) x5288)))
(assert (x2366 x1368 x2299 x520 x340))
(assert (x5093 x544))
(assert (x5093 x634))
(assert (= x681 (or x5262 x5434)))
(assert (x5093 x5054))
(assert (x1311 x5126))
(assert (x5093 x2859))
(assert (= (x2147 2929553584) (x3059 2929553584)))
(assert (= (and x4836 x618) x1771))
(assert (x5093 x1289))
(assert (x4437 x3996))
(assert (= (and x2004 (not x179)) x1434))
(assert (=> (>= 10000 x4377) (= (x3059 x4377) (x2147 x4377))))
(assert (= (and x752 (not x5143)) x4980))
(assert (= (and x1535 x1526) x2569))
(assert (x5093 x488))
(assert (x5093 x595))
(assert (= (and (not x398) x1157) x5225))
(assert (= x1603 (x3311 (x2147 x1603))))
(assert (= (x3311 (x2147 x3159)) x3159))
(assert (x5093 x1966))
(assert (= (x3311 (x3059 2245473101)) 2245473101))
(assert (= (and x731 x4186) x3326))
(assert (= x2630 (or x3062 x530)))
(assert (=> (>= 10000 x1893) (= (x3059 x1893) (x2147 x1893))))
(assert (= (=> (= x746 (> x187 0)) (and (=> (and (and (>= x4748 0) (= (= 0 x2682) x2813) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4748)) x746) (and (=> x2813 x173) (=> (and (and (<= 0 x1137) (= x4106 (x4345 x3636 2)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1137) (= (x3732 x4106) x1137) (= (= 0 x1137) x5116) (= (x2760 (x2147 x2682) x5090 0) x3636)) (not x2813)) (and (=> (and x5116 (and (and (= x305 (ite (< 0 x4748) (not (= 0 x1613)) (< 0 x4748))) (= (x4345 x5090 1) x3855) (= (x1078 x3855) x1613) (>= 1461501637330902918203684832716283019655932542975 x1613) (< x1613 1461501637330902918203684832716283019655932542976) (>= x1613 0)) (or (and (= x86 x305) (not x305)) (and x305 (and (<= 0 x2649) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2649) (= x86 (not x157)) (= x2649 (x3732 x2440)) (= x2549 (x2760 (x2147 x1613) x5090 0)) (= x2440 (x4345 x2549 2)) (= (> x187 x2649) x157)))))) x3931) (=> (not x5116) x874))))) (=> (not x746) x4376))) x610))
(assert (= (=> (= x2911 (= 0 x2398)) (and (=> (and x2911 (= x2853 x2070)) x3865) (=> (and (= x4047 (or (and (< x1130 32) (= (<= x1130 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1130 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not x2911)) (and (=> (and (= x2853 x2070) x4047) x3865) (=> (and (and (= x2853 x4946) (= x1839 1) (= x3194 32)) (not x4047)) x1818))))) x3737))
(assert (= (and x2847 x5231) x4571))
(assert (x5093 x1725))
(assert (x5093 x1650))
(assert (x5093 x3483))
(assert (x5093 x3181))
(assert (x5093 x2130))
(assert (x5093 x2896))
(assert (= x2330 (x3311 (x2147 x2330))))
(assert (= x1099 (and x792 x4442)))
(assert (= (and x1082 (not x1179)) x749))
(assert (x5093 x3018))
(assert (x5093 x130))
(assert (x5093 x3940))
(assert (= (x3311 (x2147 x2769)) x2769))
(assert (x5093 x2062))
(assert (= (+ (x3311 x491) 2) (x3311 (x4345 x491 2))))
(assert (= (and x1502 x3691) x1611))
(assert (x5093 x4573))
(assert (x5093 x5018))
(assert (x5093 x882))
(assert (= x1870 (or x304 x4353 x2872 x3458)))
(assert (= x839 (x3311 (x2147 x839))))
(assert (x5093 x4456))
(assert (= (x3311 (x2147 x1758)) x1758))
(assert (= x3116 (and (not x4626) x4795)))
(assert (x1311 x1906))
(assert (x5093 x724))
(assert (= x4545 (and x2134 x1421)))
(assert (= x105 (and x5074 (not x4285))))
(assert (= x5227 (and x5132 x125)))
(assert (= x542 (=> (and (= x3008 x5165) (= x3792 0)) x1750)))
(assert (= (and x987 x1199) x5283))
(assert (= x1560 (and x1913 (not x3152))))
(assert (= x2632 (and (not x636) x1206)))
(assert (= x752 (and x1810 (not x2871))))
(assert (x5093 x4118))
(assert (x5093 x473))
(assert (= (or x4418 x1358 x3500 x1011 x3107 x1284) x1105))
(assert (x5093 x2718))
(assert (x5093 x1262))
(assert (x5093 x2540))
(assert (= (and (not x3614) x1333) x4167))
(assert (x5093 x4687))
(assert (x5093 x215))
(assert (x5093 x5181))
(assert (= (or x561 x1723 x1520 x2642 x3857 x3559) x190))
(assert (= x1240 (and (not x1564) x2385)))
(assert (x5093 x815))
(assert (x5093 x4084))
(assert (= (=> (and (= x5297 x3749) (= x3124 x2394)) x1121) x359))
(assert (x5093 x5280))
(assert (x5093 x3008))
(assert (x5093 x4221))
(assert (= x3122 (and x4354 x3991)))
(assert (x5093 x1198))
(assert (= x4128 (and x3670 (not x3646))))
(assert (x5093 x1055))
(assert (x5093 x2497))
(assert (= 2929553584 (x3311 (x3059 2929553584))))
(assert (= x992 (and x1794 x249)))
(assert (x5131 x5282 x1368))
(assert (= (and (not x1701) x2618) x495))
(assert (x5093 x5340))
(assert (x1405 x416))
(assert (x5093 x2714))
(assert (x5093 x4852))
(assert (x5093 x2723))
(assert (= x4706 (and x4690 (not x2674))))
(assert (= (and x3299 (not x3515)) x4868))
(assert (= (and x4623 x5058) x1095))
(assert (= (x3059 2796547477) (x2147 2796547477)))
(assert (x5093 x2761))
(assert (x5093 x1897))
(assert (=> (>= 10000 x3129) (= (x2147 x3129) (x3059 x3129))))
(assert (x5093 x884))
(assert (x5093 x1530))
(assert (x5093 x5308))
(assert (x5093 x2771))
(assert (x5093 x3207))
(assert (x5093 x1229))
(assert (= (=> (= (= 0 x3519) x3071) (and (=> x3071 x4858) (=> (and (= x2624 (or (and (= (<= x379 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x379)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x379))) (not x3071)) (and (=> x2624 x4858) (=> (and (not x2624) (and (<= 0 x5042) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5039)) x4216) (<= x5042 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2232 (> x5042 x4216)))) (and (=> x2232 x4858) (=> (and (and (= x2050 (< x4216 x502)) (<= 0 x502) (= x4947 (x3589 (+ x5039 x5042))) (= (x857 x4250) x502) (= (x2760 (x2147 x4078) (x3059 5) 0) x4250) (<= x502 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x2232)) (and (=> (and (and (= 1 x578) (= x33 32) (= (x3589 (+ x5039 x502)) x3428)) (not x2050)) x5158) (=> x2050 x4858))))))))) x2890))
(assert (= (and (not x2044) x4284) x454))
(assert (= (or x1464 x1950 x4235 x3697 x1912 x429 x860) x5073))
(assert (x5093 x2288))
(assert (x5093 x284))
(assert (x5093 x5150))
(assert (x1311 x2601))
(assert (x5093 x3319))
(assert (x5093 x3251))
(assert (= x4143 (and x358 (not x4647))))
(assert (= (and x2643 (not x1943)) x1501))
(assert (x5131 115792089237316195423570985008687907853269984665640564039457584007913129639935 x24))
(assert (x5093 x1643))
(assert (x5093 x3484))
(assert (x5093 x4610))
(assert (x5093 x2414))
(assert (x5093 x5171))
(assert (x5093 x2180))
(assert (x5093 x2934))
(assert (= x5264 x1172))
(assert (x5093 x1212))
(assert (x5093 x1925))
(assert (x5093 x4676))
(assert (= x155 (=> (and (= x3786 x3625) (= x382 x1963)) x1696)))
(assert (x5093 x5314))
(assert (= x5008 (and x1982 (not x91))))
(assert (x5093 x3187))
(assert (= x5427 (and (=> (and (and (= 1 x2565) (= x4093 x4786)) (not x135)) x4443) (=> x135 x3439))))
(assert (x5093 x5362))
(assert (and (x1458 x4857 1000000000000000000) (x1175 x4857 1000000000000000000) (=> (and (> x4857 0) (< 0 1000000000000000000)) (and (> (* (x3658 x4857 1000000000000000000) 1000000000000000000) (- x4857 1000000000000000000)) (<= (* 1000000000000000000 (x3658 x4857 1000000000000000000)) x4857))) (x5235 x4857 1000000000000000000) (x2792 x4857 1000000000000000000)))
(assert (= x2113 (and x4348 (not x960))))
(assert (= (+ (x3311 x2287) 1) (x3311 (x4345 x2287 1))))
(assert (= (x2147 3842108676) (x3059 3842108676)))
(assert (x1311 x5376))
(assert (x2366 x2299 x1368 x520 x1194))
(assert (x5093 x4742))
(assert (= (x3311 (x2147 x4588)) x4588))
(assert (= x5231 (and x4379 (not x1067))))
(assert (= x207 (and x5139 x135)))
(assert (= (and (not x3712) x957) x4140))
(assert (= x3079 (and x1495 (not x1706))))
(assert (= (and x2381 (not x3177)) x2280))
(assert (= x3865 (=> (and (= x4946 x2070) (= 0 x1839) (= x3035 x3194)) x1818)))
(assert (x5093 x2602))
(assert (x5093 x2184))
(assert (= x5339 (or x1618 x852 x3195 x2007 x3284 x4293)))
(assert (x1311 x4099))
(assert (x5093 x4210))
(assert (= x750 (and x597 x1512)))
(assert (x5093 x3431))
(assert (= x4941 (and x485 x841)))
(assert (x5093 x4787))
(assert (= x1503 (=> (= (> x266 0) x1512) (and (=> (and x1512 (and (<= x4748 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x2682) x3023) (<= 0 x4748))) (and (=> x3023 x5264) (=> (and (not x3023) (and (<= 0 x4840) (= (= 0 x4840) x4201) (= x2732 (x4345 x3228 2)) (= (x4077 x2732) x4840) (= (x2760 (x2147 x2682) x1711 0) x3228) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4840))) (and (=> (and (and (and (< x4588 1461501637330902918203684832716283019655932542976) (<= x4588 1461501637330902918203684832716283019655932542975) (>= x4588 0) (= (x3575 x2224) x4588) (= (ite (> x4748 0) (not (= 0 x4588)) (> x4748 0)) x4523) (= x2224 (x4345 x1711 1))) (or (and (and (<= 0 x1249) (= x911 (x4345 x556 2)) (= (not x1612) x2032) (= (x4077 x911) x1249) (<= x1249 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2760 (x2147 x4588) x1711 0) x556) (= (< x1249 x266) x1612)) x4523) (and (not x4523) (= x2032 x4523)))) x4201) x2171) (=> (not x4201) x4501))))) (=> (not x1512) x1193)))))
(assert (x5093 x2153))
(assert (x5093 x1844))
(assert (x5093 x4881))
(assert (x5093 x2991))
(assert (x1311 x3735))
(assert (= x3554 (x3311 (x2147 x3554))))
(assert (x5093 x4674))
(assert (= x716 (and (=> (and (and (= 0 x4459) (= x4591 x4317)) (not x1109)) x729) (=> (and x1109 (and (= x3152 (= x2753 0)) (= x340 (x3689 x5416)) (>= x340 0) (= (ite (not x1347) 1 0) x3537) (= x2753 (x1025 x3537 x313)) (= (= 0 x340) x1347) (= (x3658 115792089237316195423570985008687907853269984665640564039457584007913129639935 x340) x1974) (= x1294 (x2760 (x2147 x2406) (x3059 159) 0)) (= x313 (ite (> x520 x1974) 1 0)) (<= x340 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3888 (x2760 (x2147 x4357) x1294 0)) (= (x4345 x3888 1) x5416))) (and (=> (not x3152) x947) (=> (and x3152 (and (= (> 0 x527) x893) (= x4866 (x1741 (x4860 x340 x520))) (= (x3658 x4866 1000000000000000000) x3539))) (and (=> x893 x3493) (=> (and (not x893) (and (= x970 x527) (= x995 (< x970 x3539)))) (and (=> (and (and (= (= 0 (ite x1859 1 0)) x3863) (= (> x970 115792089237316195423570985008687907853269984665640564039457) x1859)) x995) (and (=> (and x3863 (and (= x1930 (ite (not x5160) 1 0)) (= x677 (x3658 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4766)) (= x4766 (x1741 (* x970 1000000000000000000))) (= (= 0 x4766) x5160) (= (ite (> 1000000000000000000 x677) 1 0) x962) (= (x1025 x1930 x962) x1844) (= (= 0 x1844) x1661))) (and (=> (and (and (= (> x520 0) x1371) (= (x1741 (* 1000000000000000000 x4766)) x1766)) x1661) (and (=> (and x1371 (and (= x5220 (x3658 x1766 x520)) (= x4817 (x3689 x5416)) (>= x4817 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4817) (= (x3658 x5220 1000000000000000000) x2269) (= (> x2269 x4817) x4354))) (and (=> (and (and (= (= (ite x5127 1 0) 0) x871) (= x2423 (x4761 (- x4817 x2269))) (= (< 115792089237316195423570985008687907853269984665640564039457 x970) x5127)) (not x4354)) (and (=> (not x871) x5328) (=> (and (and (= x878 (x3658 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1402)) (= x952 (= 0 x3387)) (= (x1025 x4816 x2736) x3387) (= (= x1402 0) x4183) (= x2736 (ite (< x878 1000000000000000000) 1 0)) (= (x1741 (* x970 1000000000000000000)) x1402) (= x4816 (ite (not x4183) 1 0))) x871) (and (=> (and x952 (and (= (> x70 0) x2424) (= (x1741 (* 1000000000000000000 x1402)) x1689))) (and (=> (and x2424 (and (= x2316 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2724))) (<= x3596 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x3596 x2316) x5307) (= (x3658 x2259 1000000000000000000) x2724) (= x3596 (x471 x3888)) (>= x3596 0) (= (x3658 x1689 x70) x2259))) (and (=> x5307 x4247) (=> (and (not x5307) (and (= (x3589 (+ x2724 x3596)) x1939) (= x1484 x1939) (= x3264 x2423) (= x527 x5162))) x782))) (=> (not x2424) x1159))) (=> (not x952) x4416))))) (=> x4354 x462))) (=> (not x1371) x5033))) (=> (not x1661) x2257))) (=> (not x3863) x4642))) (=> (and (not x995) (and (= (< 115792089237316195423570985008687907853269984665640564039457 x3539) x1699) (= x2266 (= 0 (ite x1699 1 0))))) (and (=> (and x2266 (and (= (= x3108 0) x4659) (= (x3658 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3108) x4096) (= x1747 (= 0 x788)) (= (x1741 (* 1000000000000000000 x3539)) x3108) (= x3803 (ite (< x4096 1000000000000000000) 1 0)) (= x533 (ite (not x4659) 1 0)) (= (x1025 x533 x3803) x788))) (and (=> (and (and (= (> x70 0) x4830) (= x3330 (x1741 (* 1000000000000000000 x3108)))) x1747) (and (=> (and x4830 (and (= (> x4190 x1094) x540) (= x1094 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3511))) (= (x3658 x3330 x70) x1055) (= x3511 (x3658 x1055 1000000000000000000)) (<= 0 x4190) (<= x4190 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x471 x3888) x4190))) (and (=> x540 x4421) (=> (and (and (= (x3589 (+ x4190 x3511)) x4906) (= x1141 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3539))) (= x3015 (< x1141 0))) (not x540)) (and (=> x3015 x876) (=> (and (and (= x3539 x3061) (= x5162 x3061) (= x1484 x4906) (= x3264 0)) (not x3015)) x782))))) (=> (not x4830) x1135))) (=> (not x1747) x2699))) (=> (not x2266) x773))))))))))))
(assert (x5093 x2759))
(assert (x5093 x4355))
(assert (= (and (not x1768) x2493) x1629))
(assert (x5093 x1758))
(assert (= (and x159 x2683) x508))
(assert (and (x1458 x4866 1000000000000000000) (x1175 x4866 1000000000000000000) (=> (and (> x4866 0) (< 0 1000000000000000000)) (and (> (* (x3658 x4866 1000000000000000000) 1000000000000000000) (- x4866 1000000000000000000)) (<= (* 1000000000000000000 (x3658 x4866 1000000000000000000)) x4866))) (x5235 x4866 1000000000000000000) (x2792 x4866 1000000000000000000)))
(assert (= (and (not x4908) x2957) x3402))
(assert (= (and x937 x5072) x19))
(assert (x1311 x2179))
(assert (=> (>= 10000 x3795) (= (x3059 x3795) (x2147 x3795))))
(assert (x5093 x80))
(assert (= (and x1764 x3668) x3127))
(assert (= x326 (and x1708 x4241)))
(assert (x4437 x2736))
(assert (x5093 x1673))
(assert (= 4294967296 (x3311 (x3059 4294967296))))
(assert (= x4668 (x3311 (x2147 x4668))))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x3658 x4230 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x570 x4230 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x4230)) (x355 x4230 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3825 x4230 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4162 x4230 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x5093 x5286))
(assert (x5093 x366))
(assert (=> (<= x411 10000) (= (x3059 x411) (x2147 x411))))
(assert (x5093 x1210))
(assert (= (=> (and (= x585 x1963) (= x3625 x2997)) x1696) x4637))
(assert (= (and x3635 x110) x3112))
(assert (= x2981 (=> (and (= x111 0) (= x312 x5161)) x3711)))
(assert (= x3806 (x3311 (x2147 x3806))))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x3658 x4731 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x570 x4731 1461501637330902918203684832716283019655932542976)) x4731)) (x355 x4731 1461501637330902918203684832716283019655932542976) (x3825 x4731 1461501637330902918203684832716283019655932542976) (x4162 x4731 1461501637330902918203684832716283019655932542976)))
(assert (x5093 x124))
(assert (x1311 x2136))
(assert (x5093 x460))
(assert (= x632 (and x985 x4981)))
(assert (x5093 x2598))
(assert (x5093 x2341))
(assert (x5093 x5042))
(assert (x5093 x4882))
(assert (x5093 x1592))
(assert (= x2303 (=> (= x1522 (= x187 x2873)) (and (=> (and (not x1522) (= (< 0 x2873) x3329)) (and (=> (and x3329 (and (= x5309 (= x3522 0)) (< x4601 1461501637330902918203684832716283019655932542976) (>= x4601 0) (<= x3522 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2226 (x4345 x4792 1)) (= (x4345 x603 1) x4792) (<= x4601 1461501637330902918203684832716283019655932542975) (= x603 (x2760 (x2147 x2682) x5090 0)) (>= x3522 0) (>= x1222 0) (= (x2589 x2226) x3522) (< x1222 1461501637330902918203684832716283019655932542976) (= (x552 x603) x1222) (>= 1461501637330902918203684832716283019655932542975 x1222) (= x4601 (x388 x4792)))) (and (=> x5309 x1729) (=> (and (not x5309) (and (= (= 0 x1222) x3047) (or (and (= (x4345 x5090 1) x3360) x3047) (and (and (= x3413 (x2760 (x2147 x1222) x5090 0)) (= (x4345 x3413 1) x1663)) (not x3047))))) x3937))) (=> (not x3329) x610))) (=> x1522 x1792)))))
(assert (= x4503 (and x4999 x4215)))
(assert (x5093 x2457))
(assert (x5093 x343))
(assert (= x3405 (and x1058 x1216)))
(assert (x5093 x3574))
(assert (= x136 (and x565 x495)))
(assert (= (and (not x995) x1511) x3725))
(assert (= (x3311 (x2147 x1048)) x1048))
(assert (x5093 x2177))
(assert (x5093 x2255))
(assert (= x957 (and x538 x334)))
(assert (x5093 x66))
(assert (x5093 x3433))
(assert (x5093 x5024))
(assert (= (and (not x3238) x890) x3370))
(assert (= (x3311 (x4345 x4792 1)) (+ (x3311 x4792) 1)))
(assert (= (and x5206 (not x1572)) x3902))
(assert (x5093 x5430))
(assert (x5093 x1224))
(assert (= x3748 (and (not x1732) x4414)))
(assert (x5093 x5009))
(assert (= (and x4703 x3992) x4838))
(assert (= (x3311 (x2147 x2908)) x2908))
(assert (x5093 x1944))
(assert (x5093 x3381))
(assert (x1311 x2228))
(assert (= x3150 (and (not x3973) x3046)))
(assert (= (x3311 (x4345 x368 1)) (+ (x3311 x368) 1)))
(assert (x5093 x2437))
(assert (= x4429 (not (and (<= x1955 1461501637330902918203684832716283019655932542975) (<= 0 x1955) (= (x3350 x3656) x1955) (> 1461501637330902918203684832716283019655932542976 x1955) (= x3656 (x4345 x2339 1)) (= (x2760 (x2147 x1825) x1532 0) x2339)))))
(assert (x5093 x3124))
(assert (x5093 x4287))
(assert (= x682 (and x2345 x3015)))
(assert (= x2107 (and x2152 x260)))
(assert (x1311 x3129))
(assert (x5093 x480))
(assert (= (or x1322 (and x118 x1480) (and x228 x2785) (and (not x3698) x2393) (and x2296 x5209) (and x3282 x717) x2389 x4163 (and x147 (not x4702))) x2212))
(assert (= x510 (and x5025 (not x5307))))
(assert (x1311 x1314))
(assert (= (and x562 x1852) x2109))
(assert (x5093 x482))
(assert (= x2707 (or x243 x4279 x2503)))
(assert (= x3738 (and x3608 x3111)))
(assert (x5093 x5279))
(assert (= (and x3259 x48) x34))
(assert (= (=> (and (= x3938 0) (= x1538 x5161)) x1303) x1802))
(assert (x5093 x420))
(assert (x5093 x4363))
(assert (x5093 x195))
(assert (= x922 (and x1892 x5310)))
(assert (x5093 x1403))
(assert (x2929 x130))
(assert (= (and x4693 x2387) x220))
(assert (x5093 x4357))
(assert (x5093 x5218))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x3658 x595 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x570 x595 1461501637330902918203684832716283019655932542976)) x595)) (x355 x595 1461501637330902918203684832716283019655932542976) (x3825 x595 1461501637330902918203684832716283019655932542976) (x4162 x595 1461501637330902918203684832716283019655932542976)))
(assert (x5093 x3021))
(assert (= (x3311 (x4345 x2265 1)) (+ 1 (x3311 x2265))))
(assert (= x3810 (and x5367 x4922)))
(assert (x5093 x3661))
(assert (= x4843 (or x254 x5172 x4751 x727)))
(assert (= (x3311 (x2147 x4532)) x4532))
(assert (x5093 x1376))
(assert (= (=> (and (= (x3589 (+ x362 4)) x5102) (= (x3589 (+ 32 x5102)) x3143) (= (= x2330 x513) x1943) (= (x3589 (+ x3143 32)) x2292)) (and (=> (and (= (= x2179 x513) x784) (not x1943)) (and (=> (and (and (> x2793 0) (= x4025 x4731) (not (< x3036 4)) (= x4671 599290589) (> 2217467699 x4671) (= x4730 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4078 x2982) (not (< x4671 405663989)) (not (= 547091486 x4671)) (= x3049 x4069) (= x4800 (x4761 (- x3036 4))) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4800) (and (< x4800 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4800) true))) x4723) (not (= 405663989 x4671)) (< x4671 988262939) (= x2793 (x3736 (x2147 x2179))) (= 100 x3036)) x784) (and (=> (and (not x4723) (and (= (x1025 1461501637330902918203684832716283019655932542975 x4731) x4826) (= (= x4731 x4826) x5154) (= x4025 x5323))) (and (=> (and x5154 (and (= x2982 x1966) (= (= x2982 x4078) x208))) (and (=> (not x208) x542) (=> (and (and (= (x2117 x1605) x1425) (>= x1425 0) (= x3913 (< x1425 x4069)) (= x3806 (x1025 1461501637330902918203684832716283019655932542975 x4025)) (= x3218 x3049) (= (x2760 (x2147 x3806) (x3059 5) 0) x1605) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1425)) x208) (and (=> (and (not x3913) (and (= (x1025 1461501637330902918203684832716283019655932542975 x4025) x4207) (= x4211 (< x3319 x3049)) (= x496 (x2760 (x2147 x4207) (x3059 5) 0)) (>= x3319 0) (= x3319 (x2117 x496)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3319))) (and (=> x4211 x542) (=> (and (and (<= x4050 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x4050 0) (= x4521 (> x4050 x4931)) (= (x4761 (- x3319 x3049)) x1796) (= (x40 x3601) x4050) (= x3601 (x2760 (x2147 x2982) (x3059 5) 0)) (= x4931 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3049)))) (not x4211)) (and (=> x4521 x542) (=> (and (not x4521) (and (= x3008 32) (= 1 x3792) (= x4616 1) (= (x3589 (+ x4050 x3049)) x1570))) x1750))))) (=> x3913 x542))))) (=> (not x5154) x542))) (=> x4723 x542))) (=> (and (not x784) (= x1932 (= x513 x4721))) (and (=> (and (and (= x2526 (= x4287 x513)) (and (and (= x964 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= (x3736 (x2147 x4287)) x5330) (not (= x475 405663989)) (> 2217467699 x475) (= 599290589 x475) (= x4105 (x4761 (- x3542 4))) (< 0 x5330) (= x4078 x5126) (= x4731 x1184) (not (< x475 405663989)) (= (or (> x4105 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x4105 96) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4105)))) x463) (< x475 988262939) (not (< x3542 4)) (= x3542 100) (not (= 547091486 x475)) (= x4466 x4069)) x2526)) (not x1932)) (and (=> x463 x102) (=> (and (and (= (= x4625 x4731) x2570) (= x3702 x1184) (= x4625 (x1025 1461501637330902918203684832716283019655932542975 x4731))) (not x463)) (and (=> (not x2570) x102) (=> (and (and (= x5126 x988) (= (= x5126 x4078) x1147)) x2570) (and (=> (and (and (= x2867 (x1025 1461501637330902918203684832716283019655932542975 x1184)) (<= 0 x5254) (= (x2760 (x2147 x2867) (x3059 5) 0) x511) (= x2754 x4466) (= x76 (< x5254 x4069)) (= x5254 (x747 x511)) (<= x5254 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1147) (and (=> (and (not x76) (and (= (x1025 1461501637330902918203684832716283019655932542975 x1184) x4242) (<= 0 x5407) (= x201 (x2760 (x2147 x4242) (x3059 5) 0)) (= x5407 (x747 x201)) (<= x5407 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3470 (< x5407 x4466)))) (and (=> x3470 x102) (=> (and (and (= x15 (x2760 (x2147 x5126) (x3059 5) 0)) (= (x4761 (- x5407 x4466)) x1276) (<= 0 x620) (= x5018 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4466))) (= (x3746 x15) x620) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x620) (= (< x5018 x620) x1756)) (not x3470)) (and (=> (and (not x1756) (and (= x311 1) (= (x3589 (+ x4466 x620)) x1394) (= x2419 32) (= 1 x4129))) x2524) (=> x1756 x102))))) (=> x76 x102))) (=> (not x1147) x102))))))) (=> (and (and (> 988262939 x2173) (> 2217467699 x2173) (= (or (> x4368 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4368) true) (> 96 x4368))) x37) (not (= x2173 547091486)) (= x2173 599290589) (< 0 x734) (= x1960 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= 405663989 x2173)) (not (> 4 x126)) (= x4069 x2550) (= 100 x126) (not (< x2173 405663989)) (= x4731 x2512) (= x4078 x1492) (= (x4761 (- x126 4)) x4368) (= x734 (x3736 (x2147 x4721)))) x1932) (and (=> (and (and (= (= x5125 x4731) x3690) (= x5125 (x1025 1461501637330902918203684832716283019655932542975 x4731)) (= x2512 x4306)) (not x37)) (and (=> (not x3690) x3457) (=> (and x3690 (and (= x1492 x1824) (= x338 (= x1492 x4078)))) (and (=> (and (and (= x2778 x2550) (>= x3975 0) (= x2248 (x2760 (x2147 x2601) (x3059 5) 0)) (= (x258 x2248) x3975) (= x2601 (x1025 1461501637330902918203684832716283019655932542975 x2512)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3975) (= x1892 (< x3975 x4069))) x338) (and (=> (and (and (>= x509 0) (= (x2760 (x2147 x1398) (x3059 5) 0) x572) (= x509 (x258 x572)) (= x1398 (x1025 1461501637330902918203684832716283019655932542975 x2512)) (<= x509 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x509 x2550) x3729)) (not x1892)) (and (=> (and (and (= x3206 (x2760 (x2147 x1492) (x3059 5) 0)) (= (x4761 (- x509 x2550)) x3527) (= x372 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2550))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2870) (= x2870 (x499 x3206)) (= x1498 (> x2870 x372)) (<= 0 x2870)) (not x3729)) (and (=> x1498 x3457) (=> (and (and (= x5331 32) (= x2153 1) (= (x3589 (+ x2870 x2550)) x2382) (= x300 1)) (not x1498)) x3451))) (=> x3729 x3457))) (=> x1892 x3457))) (=> (not x338) x3457))))) (=> x37 x3457))))))) (=> (and (and (= (or (and (< x1820 96) (= (<= x1820 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1820 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x369) (= x248 599290589) (= x4069 x2941) (< 0 x2133) (not (< x4982 4)) (= x4982 100) (= x1820 (x4761 (- x4982 4))) (= x4731 x595) (> 1466279372 x248) (not (< x248 599290589)) (= (x3736 (x2147 x2330)) x2133) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x3026) (= x4078 x1254)) x1943) (and (=> (and (not x369) (and (= x4314 (= x344 x4731)) (= x344 (x1025 1461501637330902918203684832716283019655932542975 x4731)))) (and (=> (not x4314) x2395) (=> (and (and (= x758 x1254) (= (= x1254 x4078) x1514)) x4314) (and (=> (and (and (= (x2760 (x2147 x3159) (x3059 1) 0) x2229) (>= x2923 0) (= x367 (> x4069 x2923)) (= x3159 (x1025 1461501637330902918203684832716283019655932542975 x595)) (= x2923 (x4665 x2229)) (= x2941 x1544) (<= x2923 115792089237316195423570985008687907853269984665640564039457584007913129639935)) x1514) (and (=> (and (= (< x2923 x2941) x2606) (not x367)) (and (=> x2606 x2395) (=> (and (and (<= 0 x4687) (= (< x5428 x4687) x4585) (= x2956 (x1025 1461501637330902918203684832716283019655932542975 x595)) (= (x2760 (x2147 x1254) (x3059 1) 0) x2413) (= (x2760 (x2147 x2956) (x3059 1) 0) x4481) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2941)) x5428) (= (x4595 x2413) x4687) (<= x4687 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4599 (x4761 (- x2923 x2941)))) (not x2606)) (and (=> x4585 x2395) (=> (and (not x4585) (and (= (x3589 (+ x2941 x4687)) x206) (= x4765 (< x206 x4687)))) (and (=> x4765 x2395) (=> (and (and (= x4564 (x1025 1461501637330902918203684832716283019655932542975 x595)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2218) (>= x2218 0) (= (x2760 (x2147 x1254) (x3059 1) 0) x4058) (= (x1751 x3385) x2218) (= x4313 (< x2218 x2941)) (= x433 (x2760 (x2147 x4564) (x3059 2) 0)) (= (x2760 (x2147 x4078) x433 0) x3385)) (not x4765)) (and (=> x4313 x2395) (=> (and (not x4313) (= x1226 (> x2941 x2218))) (and (=> x1226 x2395) (=> (and (and (= x474 32) (= x2790 (x4761 (- x2218 x2941))) (= x4203 (x2760 (x2147 x3562) (x3059 2) 0)) (= 1 x5358) (= x3562 (x1025 1461501637330902918203684832716283019655932542975 x595)) (= x477 (x2760 (x2147 x4078) x4203 0))) (not x1226)) x4975))))))))))) (=> x367 x2395))) (=> (not x1514) x2395))))) (=> x369 x2395))))) x5148))
(assert (= x3781 (and (not x1483) x2609)))
(assert (= (=> (and (= x276 x1348) (= x3936 x803)) x4052) x2973))
(assert (x5093 x3985))
(assert (x5093 x4078))
(assert (= x2978 (and x4552 x656)))
(assert (x5093 x1686))
(assert (= (and x630 x645) x10))
(assert (= x5257 (and (not x2462) x5390)))
(assert (= (and x4520 x164) x3559))
(assert (x5093 x2925))
(assert (= (=> (and (or x3231 (not x3231)) (= x3231 (= x3357 0))) x2182) x2236))
(assert (x5093 x4546))
(assert (= (=> (and (= x276 x4957) (= x3936 x2391)) x4052) x5185))
(assert (= x621 (and (not x904) x4728)))
(assert (= (and x1342 x1226) x1053))
(assert (= x1763 (and x1372 x2464)))
(assert (= (x3311 (x2147 x1691)) x1691))
(assert (x5093 x4680))
(assert (x5093 x4122))
(assert (= x4986 x1242))
(assert (x5093 x1531))
(assert (= (and x892 x4117) x1905))
(assert (= x1887 (x3311 (x2147 x1887))))
(assert (x5093 x704))
(assert (x5093 x1383))
(assert (x1311 x2330))
(assert (= (x3311 (x4345 x3293 2)) (+ (x3311 x3293) 2)))
(assert (x5093 x2517))
(assert (= (and x2107 x386) x3299))
(assert (= (x3311 (x2147 x730)) x730))
(assert (= x4443 (=> (and (or (and (and (or (and x1423 (and (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x1562) (= x2668 (x1025 1461501637330902918203684832716283019655932542975 x1015)) (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x795))) (and (and (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x1077) (<= x2991 1461501637330902918203684832716283019655932542975) (= (x4345 x853 1) x4137) (= (x2850 x4137) x2991) (<= 0 x2991) (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x1976) (< x2991 1461501637330902918203684832716283019655932542976) (= x401 (x1025 1461501637330902918203684832716283019655932542975 x1015))) (not x1423))) (and (> 1461501637330902918203684832716283019655932542976 x3377) (= (= x3377 0) x1423) (= x3377 (x1131 x853)) (<= x3377 1461501637330902918203684832716283019655932542975) (<= 0 x3377))) (not x557)) (and x557 (and (or (and (not x4117) (and (= x4587 (x1025 1461501637330902918203684832716283019655932542975 x1015)) (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x2937) (= x4420 (x1025 1461501637330902918203684832716283019655932542975 x1015)))) (and x4117 (and (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x2600) (= (x2760 (x2147 x4786) x1117 0) x612) (< x3207 1461501637330902918203684832716283019655932542976) (= x5258 (x1025 1461501637330902918203684832716283019655932542975 x1015)) (= x4712 (x1025 1461501637330902918203684832716283019655932542975 x1015)) (<= 0 x3207) (>= 1461501637330902918203684832716283019655932542975 x3207) (= (x436 x612) x3207)))) (and (<= 0 x4819) (= x4117 (> x3030 0)) (>= 1461501637330902918203684832716283019655932542975 x4819) (< x4819 1461501637330902918203684832716283019655932542976) (= x3030 (x4761 (- x4786 x4819))) (= x4819 (x1131 x853)))))) (= (ite (< x2565 x4748) (not (= x4786 0)) (< x2565 x4748)) x557)) x331)))
(assert (= x360 (and (not x315) x1145)))
(assert (x5093 x3735))
(assert (x5093 x2181))
(assert (= 547091486 (x3311 (x3059 547091486))))
(assert (= (and (not x1625) x1438) x4851))
(assert (= x3371 (and x2864 (not x2721))))
(assert (= (and x4066 (not x2570)) x2369))
(assert (x4437 x2727))
(assert (= false x216))
(assert (= (and x4147 x2979) x4527))
(assert (= x2837 (and (not x5132) x125)))
(assert (= x4197 (x3311 (x2147 x4197))))
(assert (= (+ 2 (x3311 x3636)) (x3311 (x4345 x3636 2))))
(assert (x5093 x4899))
(assert (x5093 x345))
(assert (x1311 x4207))
(assert (x5093 x567))
(assert (x5093 x448))
(assert (x5093 x4103))
(assert (= (or x457 x149 x1719 x1090) x1547))
(assert (=> (>= 10000 x1971) (= (x2147 x1971) (x3059 x1971))))
(assert (= x3094 (x3311 (x2147 x3094))))
(assert (x1311 x5228))
(assert (= x1581 (x3311 (x2147 x1581))))
(assert (= x2048 (or x615 x2882)))
(assert (= (and x3472 x406) x573))
(assert (x5093 x4807))
(assert (= x2443 (and x1100 x930)))
(assert (= x691 (and x1489 (not x3471))))
(assert (x5093 x111))
(assert (= (or x4426 x227) x2472))
(assert (x3294 x1071 x1875))
(assert (=> (<= x5228 10000) (= (x3059 x5228) (x2147 x5228))))
(assert (= (and x5019 x1180) x3372))
(assert (= (x3311 (x2147 x3131)) x3131))
(assert (x1311 x1045))
(assert (x5093 x1510))
(assert (= x1604 (and x2630 (not x3987))))
(assert (= x3705 (and (not x3305) x113)))
(assert (x3331 x5284))
(assert (x5093 x5038))
(assert (=> (>= 10000 x1800) (= (x3059 x1800) (x2147 x1800))))
(assert (= x1871 (and x2592 x191)))
(assert (= (x3311 (x3059 115792089237316195423570985008687907853269984665640564039457)) 115792089237316195423570985008687907853269984665640564039457))
(assert (= x4551 (or (and x89 x4019) (and x4517 (not x1029)))))
(assert (= x1352 (and x1810 x2871)))
(assert (x5093 x2431))
(assert (x5093 x1858))
(assert (= 2835717307 (x3311 (x3059 2835717307))))
(assert (x1311 x2118))
(assert (x5093 x1655))
(assert (x5093 x2386))
(assert (= x1220 (and x1066 x2192)))
(assert (= (x2147 1000000000000000000) (x3059 1000000000000000000)))
(assert (x5093 x4109))
(assert (x5093 x3762))
(assert (= (=> (and (= x1942 x528) (= x4593 0)) x2519) x3845))
(assert (= (or x3598 x3380) x4790))
(assert (x1311 x1800))
(assert (x5093 x4712))
(assert (= x6 (and x2072 x5167)))
(assert (x5093 x4168))
(assert (x5093 x2348))
(assert (=> (<= x2614 10000) (= (x2147 x2614) (x3059 x2614))))
(assert (= (and (not x354) x1580) x1852))
(assert (= x2261 (and x917 (not x1281))))
(assert (= (and x1293 (not x3366)) x4319))
(assert (= x5226 (=> (and (= x4717 x3219) (= x1144 x3999)) x4388)))
(assert (= x5190 (or x5022 x4057)))
(assert (x5093 x2976))
(assert (= (+ (x3311 x3193) 2) (x3311 (x4345 x3193 2))))
(assert (= x16 (and x5026 (not x5000))))
(assert (= (and (not x1522) x4754) x1840))
(assert (= (and x1547 x764) x1065))
(assert (= (and x5341 x1937) x2377))
(assert (= x3899 (and x5420 (not x3594))))
(assert (= x4482 (and x5094 x1259)))
(assert (x4437 x3419))
(assert (x1311 x4559))
(assert (= x2623 (or x879 x2563 x4468 x2703 x3891 x1718 x4869 x2494 x2155)))
(assert (= x1465 (and x1928 (not x5202))))
(assert (x4437 x2842))
(assert (x5093 x2916))
(assert (x5093 x4207))
(assert (= (and x5094 (not x1259)) x406))
(assert (= x227 (and x2536 (not x2787))))
(assert (= (x3311 (x2147 x1227)) x1227))
(assert (x5093 x3989))
(assert (= x2141 (and x4451 x3174)))
(assert (x5093 x1120))
(assert (= x793 (and (not x3652) x4829)))
(assert (x5093 x5142))
(assert (x5093 x3394))
(assert (= (and x767 (not x2100)) x661))
(assert (= (x3311 (x2147 x419)) x419))
(assert (x5093 x2935))
(assert (x3513 x520 (- x1194 x520)))
(assert (x5093 x2454))
(assert (x5093 x4700))
(assert (= (+ (x3311 x3855) 1) (x3311 (x4345 x3855 1))))
(assert (= x3104 (and (not x5149) x2235)))
(assert (= (and x2560 x2994) x2066))
(assert (x5093 x2430))
(assert (= (=> (and (= x701 x3008) (= x4628 x3792)) x4613) x1750))
(assert (x5093 x4035))
(assert (x5093 x2885))
(assert (= x2836 (and x4941 x4549)))
(assert (= (and x966 x1756) x1775))
(assert (= (and (not x2194) x1795) x4152))
(assert (= x4030 (and (not x4699) x2474)))
(assert (= (and (not x5317) x696) x1415))
(assert (=> (<= x537 10000) (= (x2147 x537) (x3059 x537))))
(assert (x5093 x2438))
(assert (x5093 x4532))
(assert (= (=> (and (= x379 x2855) (= x923 x3519)) x4343) x306))
(assert (x5093 x5198))
(assert (x5093 x1934))
(assert (x5093 x3045))
(assert (x5093 x1360))
(assert (= x205 (or x2958 x161)))
(assert (= x591 (or x813 x1958 x5440)))
(assert (= (and x168 (not x1380)) x4414))
(assert (x1311 x4581))
(assert (x5093 x896))
(assert (x1311 x4093))
(assert (= (or x5175 x1730) x4260))
(assert (= (and x2434 x1207) x1722))
(assert (x5093 x2499))
(assert (= (=> (and (= (= x2043 0) x4955) (or (and (not x4955) (= (x2760 (x2147 x2043) x3872 0) x2572)) (and (= (x4345 x3872 2) x4090) x4955))) x2198) x1439))
(assert (= x1880 (and (not x3959) x1548)))
(assert (x5093 x3624))
(assert (x5093 x1267))
(assert (= x1318 (x3311 (x2147 x1318))))
(assert (= (x2147 77053863734975077137548456399560439977311721439096602559221323163398253314048) (x3059 77053863734975077137548456399560439977311721439096602559221323163398253314048)))
(assert (= (or x3516 x3950 x1177 x3052) x1641))
(assert (x5093 x3389))
(assert (= (x3311 (x2147 x4265)) x4265))
(assert (x5093 x4800))
(assert (= (and (not x4239) x5124) x1937))
(assert (= x865 (=> (and (= x1426 x74) (= x2357 0)) x1929)))
(assert (x5093 x70))
(assert (x1311 x1600))
(assert (= x1644 (and x5248 x4227)))
(assert (x5093 x1492))
(assert (x5093 x2897))
(assert (x5093 x593))
(assert (x5093 x1249))
(assert (= (+ (x3311 x993) 1) (x3311 (x4345 x993 1))))
(assert (x5093 x3128))
(assert (x5093 x3430))
(assert (x1311 x3178))
(assert (x5093 x5282))
(assert (x4437 x3239))
(assert (x5093 x3190))
(assert (= (and x2221 (not x3470)) x966))
(assert (= x5442 (and x2363 x2893)))
(assert (=> (>= 10000 x2406) (= (x3059 x2406) (x2147 x2406))))
(assert (= x3773 (=> (and (= x3956 x1130) (= x2398 x1838)) x1941)))
(assert (x5093 x2496))
(assert (= x1379 (or (and (not x4902) x591) x4974)))
(assert (x5093 x2342))
(assert (= (and x4511 (not x3145)) x869))
(assert (= x1372 (or x5129 (and (not x3231) x762))))
(assert (x5093 x5316))
(assert (= (and (not x3023) x750) x461))
(assert (=> (<= x1887 10000) (= (x3059 x1887) (x2147 x1887))))
(assert (=> (>= 10000 x3384) (= (x3059 x3384) (x2147 x3384))))
(assert (= (+ (x3311 x271) 2) (x3311 (x4345 x271 2))))
(assert (= (or x23 x5259) x5369))
(assert (x5093 x408))
(assert (x5093 x1901))
(assert (= x895 (and x3123 (not x1155))))
(assert (= x1520 (and x1415 (not x4750))))
(assert (x5093 x1118))
(assert (= x1567 (=> (and (= x2730 x5006) (= x2042 x4382)) x2300)))
(assert (= x4337 (and x2235 x5149)))
(assert (= x1810 (or x3810 x3297)))
(assert (= (and x1623 (not x3234)) x1092))
(assert (x5093 x3194))
(assert (= x4421 x4233))
(assert (= (or x4292 x1105) x4448))
(assert (= x1369 (x3311 (x2147 x1369))))
(assert (= x3673 (and (not x2915) x2353)))
(assert (= (and x508 x4925) x3454))
(assert (x5093 x3519))
(assert (= (or x279 x3386 x2569 x4850 x1809 x11 x3097 x559 x4500) x23))
(assert (= (and x753 (not x2362)) x5388))
(assert (x5093 x1726))
(assert (x5093 x3566))
(assert (x5093 x2509))
(assert (= x1342 (and x3476 (not x4313))))
(assert (x3331 (- x2299 x1194)))
(assert (= x2671 (=> (= (= x275 x4618) x5410) (and (=> x5410 x193) (=> (and (= x859 (> x4618 0)) (not x5410)) (and (=> (not x859) x2416) (=> (and x859 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5430) (>= x4778 0) (<= x4778 1461501637330902918203684832716283019655932542975) (<= 0 x3022) (= (= 0 x5430) x2878) (>= 1461501637330902918203684832716283019655932542975 x3022) (= (x2760 (x2147 x4586) x2810 0) x1869) (< x3022 1461501637330902918203684832716283019655932542976) (= x5430 (x3506 x4445)) (> 1461501637330902918203684832716283019655932542976 x4778) (= x4988 (x4345 x1869 1)) (= (x3972 x1869) x4778) (<= 0 x5430) (= (x1025 1461501637330902918203684832716283019655932542975 x1015) x4586) (= (x329 x4988) x3022) (= (x4345 x4988 1) x4445))) (and (=> (and (not x2878) (and (or (and (and (= x2705 (x4345 x1745 1)) (= (x2760 (x2147 x4778) x2810 0) x1745)) (not x375)) (and (= x4907 (x4345 x2810 1)) x375)) (= (= x4778 0) x375))) x2098) (=> x2878 x1172)))))))))
(assert (x5093 x1312))
(assert (= (=> (and (= x2028 x4802) (= x1592 0)) x666) x3606))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x3311 (x3059 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (x5093 x1106))
(assert (x348 x5282))
(assert (x5093 x4160))
(assert (= (and x1867 x4943) x633))
(assert (= (x3311 (x2147 x724)) x724))
(assert (x5093 x276))
(assert (= x3439 (not (and (>= 1461501637330902918203684832716283019655932542975 x470) (< x470 1461501637330902918203684832716283019655932542976) (= x470 (x2554 x5436)) (>= x470 0) (= x5436 (x4345 x55 1)) (= (x2760 (x2147 x4093) x1117 0) x55)))))
(assert (= x4467 (=> (= (= x5141 0) x3926) (and (=> (not x3926) x2143) (=> x3926 x1172)))))
(assert (= (and x5333 (not x4469)) x2452))
(assert (= x2290 (and x2381 x3177)))
(assert (x5093 x1664))
(assert (= (and x2532 (not x2150)) x469))
(assert (x479 1461501637330902918203684832716283019655932542976))
(assert (= x714 (or x673 x4174)))
(assert (x5093 x1475))
(assert (= x2257 x4233))
(assert (x5093 x3012))
(assert (x4437 x1726))
(assert (x5093 x1584))
(assert (x5093 x3766))
(assert (and (x1458 x1753 1000000000000000000) (x1175 x1753 1000000000000000000) (=> (and (> x1753 0) (< 0 1000000000000000000)) (and (> (* (x3658 x1753 1000000000000000000) 1000000000000000000) (- x1753 1000000000000000000)) (<= (* 1000000000000000000 (x3658 x1753 1000000000000000000)) x1753))) (x5235 x1753 1000000000000000000) (x2792 x1753 1000000000000000000)))
(assert (and (x4259 1000000000000000000 x328) (x887 1000000000000000000 x328) (x4075 1000000000000000000 x328) (and (= (x4860 1000000000000000000 (- x328 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x328 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x328) (- (* x328 1000000000000000000) (* x328 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x328 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x328 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x328 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x328) (* x328 1000000000000000000)) (x2358 1000000000000000000 x328) (x244 1000000000000000000 x328)))
(assert (x5093 x726))
(assert (x5093 x546))
(assert (x5093 x379))
(assert (x5093 x4782))
(assert (x5093 x3849))
(assert (= x3558 (and x3914 (not x4579))))
(assert (= (x3311 (x2147 x5140)) x5140))
(assert (= x3645 (and x4660 x1717)))
(assert (x5093 x2021))
(assert (x5093 x2983))
(assert (x5093 x3382))
(assert (x5093 x3213))
(assert (= x30 (and x3712 x957)))
(assert (x4437 x4607))
(assert (= x1129 (and x4446 (not x1163))))
(assert (x5093 x1276))
(assert (x5093 x1875))
(assert (= x1110 (and x1722 (not x3657))))
(assert (= x293 (and (not x3820) x4002)))
(assert (x348 x520))
(assert (x5093 x1803))
(assert (=> (>= 10000 x551) (= (x3059 x551) (x2147 x551))))
(assert (x5093 x2406))
(assert (x1311 x3022))
(assert (x5093 x1074))
(assert (x5093 x1015))
(assert (x5093 x2423))
(assert (= x813 (or x632 x2656)))
(assert (= (and (not x4781) x3576) x3157))
(assert (x5093 x1254))
(assert (x5093 x1796))
(assert (= (and x2318 x2276) x984))
(assert (=> (>= 10000 x829) (= (x3059 x829) (x2147 x829))))
(assert (x5093 x1524))
(assert (x3331 x2880))
(assert (= x5135 (or x4153 x2018 x2791 x4727 x4390 x3020)))
(assert (x1311 x724))
(assert (x5093 x4318))
(assert (= x3310 (or x2204 x2926 x4621 x5082 x3907 x2612)))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x3658 x416 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x570 x416 1461501637330902918203684832716283019655932542976)) x416)) (x355 x416 1461501637330902918203684832716283019655932542976) (x3825 x416 1461501637330902918203684832716283019655932542976) (x4162 x416 1461501637330902918203684832716283019655932542976)))
(assert (= (and x3155 x2998) x3922))
(assert (= (or x2498 x3285 x335 x3298 x4952 x2637) x2059))
(assert (x5093 x1239))
(assert (= (and (not x817) x975) x4089))
(assert (= (+ 2 (x3311 x3897)) (x3311 (x4345 x3897 2))))
(assert (= x3466 (and x326 x5421)))
(assert (= (x3311 (x2147 x2496)) x2496))
(assert (= x5110 (and x1734 (not x3694))))
(assert (x1311 x710))
(assert (x5093 x4104))
(assert (x5093 x1721))
(assert (= x1403 (x3311 (x2147 x1403))))
(assert (= (and x3398 (not x1647)) x504))
(assert (x5093 x701))
(assert (x2929 x2409))
(assert (= x3304 (and x3657 x1722)))
(assert (= (and (not x5293) x396) x5176))
(assert (= (or x293 x4150) x4650))
(assert (= x4974 (and x4902 x591)))
(assert (x5093 x802))
(assert (= (and x1728 x5151) x2041))
(assert (= (and x952 x1336) x1940))
(assert (x5093 x3850))
(assert (x3294 x3537 x313))
(assert (= x2503 (and x4170 x2762)))
(assert (= x3762 (x3311 (x2147 x3762))))
(assert (= (or x54 x4430) x935))
(assert (x5093 x3140))
(assert (x5093 x4178))
(assert (x5093 x3267))
(assert (= (or x2227 x664 x5176 x886 x3781 x2921 x997 x1261 x3532) x1598))
(assert (= (and x2137 (not x2279)) x3046))
(assert (= x3739 (and x4838 x2638)))
(assert (x5093 x789))
(assert (= x4497 (=> (and (= x3448 x2491) (= 0 x854)) x2372)))
(assert (x1311 x4532))
(assert (x5093 x3639))
(assert (x5093 x1989))
(assert (x5093 x4608))
(assert (= x4920 (=> (and (= (ite (> x2028 31) 1 0) x728) (= x2465 (x1025 x4921 x1592)) (= x4718 (x1025 x697 x728)) (= (x3707 x4718 x1740) x4921) (= (> x2465 0) x2883) (= x697 (ite (= x439 1) 1 0)) (= (ite (= 0 x2028) 1 0) x1740)) (and (=> (not x2883) x1172) (=> (and (and (= (x3589 (+ x2980 4)) x1622) (= x1270 (x3589 (+ 32 x1622))) (= (= x2179 x2406) x2425) (= x1890 (x4761 (- x1270 x2980)))) x2883) (and (=> (and (and (not (= 178855970 x4035)) (< x4035 988262939) (= 242558722 x4035) (= x3574 (x4761 (- x4033 4))) (= x850 x2057) (= (or (> x3574 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3574)) (> 32 x3574))) x5081) (= x1890 x4033) (= 6539370208772218570076773595062200405109424842860869254164860851635934461952 x4877) (< 0 x2014) (< x4035 405663989) (not (> 4 x4033)) (> 2217467699 x4035) (= (x3736 (x2147 x2179)) x2014) (= x4033 36) (not (= 75483562 x4035))) x2425) (and (=> (and (and (>= x414 0) (= x3730 (x2760 (x2147 x4078) (x3059 6) 0)) (= x3594 (< x414 x2057)) (= x2258 x850) (<= x414 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x250 x3730) x414)) (not x5081)) (and (=> (and (= x4742 x5294) x3594) x2240) (=> (and (not x3594) (and (= x848 (x250 x639)) (>= x848 0) (= x639 (x2760 (x2147 x4078) (x3059 6) 0)) (<= x848 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x848 x850) x1496))) (and (=> (and x1496 (= x5294 x4742)) x2240) (=> (and (and (<= 0 x5294) (<= x5294 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x4328 x5294) x4410) (= x2401 (x4761 (- x848 x850))) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x850)) x4328)) (not x1496)) (and (=> (and (and (> 1461501637330902918203684832716283019655932542976 x5325) (= x2582 (= x2330 x5325)) (= x1826 128) (= (x3589 (+ x850 x5294)) x3034) (<= 0 x5325) (= x127 (x3589 (+ x5294 x850))) (>= 1461501637330902918203684832716283019655932542975 x5325)) (not x4410)) (and (=> (and (not x2582) (= x1178 (= x2179 x5325))) (and (=> (and (and (> 988262939 x1833) (> x4369 0) (= (x4761 (- x269 4)) x555) (= x269 100) (= x3399 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x2179 x17) (= x269 100) (> 2217467699 x1833) (not (= 405663989 x1833)) (= x4369 (x3736 (x2147 x2179))) (= (or (> x555 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (<= x555 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x555))) x5317) (= x2258 x449) (not (= 547091486 x1833)) (= 599290589 x1833) (not (> 4 x269)) (= x4078 x1887) (not (> 405663989 x1833))) x1178) (and (=> (and (and (= x4750 (= x1887 x4078)) (= x2281 x1887)) (not x5317)) (and (=> (not x4750) x3805) (=> (and x4750 (and (= x17 x4539) (= x968 (= x17 x2179)))) (and (=> (not x968) x3805) (=> (and (and (= x2905 x449) (= (> x2258 x4159) x101) (<= 0 x4159) (= x4406 (x2760 (x2147 x1887) (x3059 5) 0)) (= x4159 (x4964 x4406)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4159)) x968) (and (=> (and (not x101) (and (= (x2760 (x2147 x1887) (x3059 5) 0) x4213) (<= x4998 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x4998 x449) x3212) (= (x4964 x4213) x4998) (>= x4998 0))) (and (=> (and (and (= (x2760 (x2147 x17) (x3059 5) 0) x2806) (= (< x4984 x592) x164) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x449)) x4984) (>= x592 0) (= (x4761 (- x4998 x449)) x2688) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x592) (= (x4389 x2806) x592)) (not x3212)) (and (=> x164 x3805) (=> (and (and (= 1 x906) (= 1 x3106) (= x1289 32) (= x1212 (x3589 (+ x449 x592)))) (not x164)) x674))) (=> x3212 x3805))) (=> x101 x3805))))))) (=> x5317 x3805))) (=> (and (= (= x5325 x4721) x2327) (not x1178)) (and (=> (and (and (= (= x5325 x4287) x2877) (and x2877 (and (= x4489 599290589) (> 988262939 x4489) (= x408 x2258) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x675) (= x829 x4078) (not (= 547091486 x4489)) (not (= x4489 405663989)) (= x3144 x2179) (not (> 405663989 x4489)) (= (x3736 (x2147 x4287)) x3055) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4808) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4808) true) (> 96 x4808))) x5078) (> 2217467699 x4489) (= x1450 100) (= 100 x1450) (> x3055 0) (not (< x1450 4)) (= x4808 (x4761 (- x1450 4)))))) (not x2327)) (and (=> (and (and (= x78 (= x4078 x829)) (= x829 x5295)) (not x5078)) (and (=> (not x78) x2295) (=> (and x78 (and (= (= x3144 x2179) x2134) (= x3677 x3144))) (and (=> (not x2134) x2295) (=> (and x2134 (and (<= 0 x2977) (= x2812 x408) (= x3134 (< x2977 x2258)) (= (x2760 (x2147 x829) (x3059 5) 0) x5183) (<= x2977 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x2977 (x1150 x5183)))) (and (=> (and (not x3134) (and (= x5379 (x1150 x5411)) (<= x5379 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5411 (x2760 (x2147 x829) (x3059 5) 0)) (<= 0 x5379) (= (< x5379 x408) x274))) (and (=> x274 x2295) (=> (and (not x274) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x363) (>= x363 0) (= (x2760 (x2147 x3144) (x3059 5) 0) x1315) (= x2122 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x408))) (= x2925 (x4761 (- x5379 x408))) (= x363 (x1098 x1315)) (= (< x2122 x363) x3808))) (and (=> (and (not x3808) (and (= x2856 1) (= x4456 32) (= x1198 (x3589 (+ x363 x408))) (= x387 1))) x4724) (=> x3808 x2295))))) (=> x3134 x2295))))))) (=> x5078 x2295))) (=> (and x2327 (and (= x3795 x4078) (= x3278 599290589) (= x2278 (x3736 (x2147 x4721))) (not (= 547091486 x3278)) (not (> 4 x4752)) (not (> 405663989 x3278)) (= 100 x4752) (= (or (> x4185 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4185)) (< x4185 96))) x233) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2862) (= x4752 100) (not (= 405663989 x3278)) (< x3278 988262939) (< 0 x2278) (> 2217467699 x3278) (= x4185 (x4761 (- x4752 4))) (= x2179 x1603) (= x2258 x178))) (and (=> x233 x3518) (=> (and (and (= (= x3795 x4078) x2363) (= x3795 x1650)) (not x233)) (and (=> (not x2363) x3518) (=> (and x2363 (and (= x3858 (= x1603 x2179)) (= x1364 x1603))) (and (=> (and x3858 (and (= x3654 (x2760 (x2147 x3795) (x3059 5) 0)) (>= x651 0) (<= x651 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3169 x178) (= (< x651 x2258) x94) (= x651 (x5170 x3654)))) (and (=> (and (not x94) (and (= (> x178 x3261) x3703) (<= x3261 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4053 (x2760 (x2147 x3795) (x3059 5) 0)) (<= 0 x3261) (= x3261 (x5170 x4053)))) (and (=> (and (and (= (x350 x1608) x2605) (= x1608 (x2760 (x2147 x1603) (x3059 5) 0)) (<= 0 x2605) (= x1485 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x178))) (= (< x1485 x2605) x1102) (= (x4761 (- x3261 x178)) x4710) (<= x2605 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x3703)) (and (=> (and (and (= x2692 1) (= x4518 1) (= 32 x2341) (= (x3589 (+ x178 x2605)) x567)) (not x1102)) x4892) (=> x1102 x3518))) (=> x3703 x3518))) (=> x94 x3518))) (=> (not x3858) x3518))))))))))) (=> (and (and (= 100 x2502) (not (< x2502 4)) (= 599290589 x1074) (= x2258 x4273) (= x419 x4078) (< x1074 1466279372) (= x4676 (x4761 (- x2502 4))) (= x4722 (x3736 (x2147 x2330))) (= x4532 x2179) (= x3443 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 100 x2502) (= (or (> x4676 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x4676) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4676)))) x4870) (not (> 599290589 x1074)) (> x4722 0)) x2582) (and (=> x4870 x1132) (=> (and (and (= x2573 x419) (= x1679 (= x4078 x419))) (not x4870)) (and (=> (and x1679 (and (= x3450 (= x4532 x2179)) (= x4532 x3903))) (and (=> (and (and (= (< x1721 x2258) x3789) (= x4273 x3531) (= x2131 (x2760 (x2147 x419) (x3059 1) 0)) (= x1721 (x3943 x2131)) (>= x1721 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1721)) x3450) (and (=> x3789 x1132) (=> (and (= x2716 (> x4273 x1721)) (not x3789)) (and (=> (and (not x2716) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1059) (= x2740 (> x1059 x3268)) (<= 0 x1059) (= (x2974 x4509) x1059) (= x3766 (x4761 (- x1721 x4273))) (= (x2760 (x2147 x4532) (x3059 1) 0) x4509) (= x1787 (x2760 (x2147 x419) (x3059 1) 0)) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4273)) x3268))) (and (=> x2740 x1132) (=> (and (not x2740) (and (= x1686 (x3589 (+ x4273 x1059))) (= (> x1059 x1686) x2719))) (and (=> (and (and (= x4965 (x2760 (x2147 x2179) x778 0)) (= (x2760 (x2147 x4532) (x3059 1) 0) x5287) (= (x2 x4965) x1205) (<= x1205 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x4273 x1205) x1535) (>= x1205 0) (= x778 (x2760 (x2147 x419) (x3059 2) 0))) (not x2719)) (and (=> x1535 x1132) (=> (and (= x1331 (> x4273 x1205)) (not x1535)) (and (=> (and (and (= x3517 (x4761 (- x1205 x4273))) (= (x2760 (x2147 x419) (x3059 2) 0) x3272) (= 32 x3641) (= x1277 1) (= (x2760 (x2147 x2179) x3272 0) x1968)) (not x1331)) x391) (=> x1331 x1132))))) (=> x2719 x1132))))) (=> x2716 x1132))))) (=> (not x3450) x1132))) (=> (not x1679) x1132))))))) (=> (and x4410 (= x5294 x4742)) x2240))))))) (=> (and x5081 (= x4742 x5294)) x2240))) (=> (and (= (= x4721 x2406) x2374) (not x2425)) (and (=> (and (and (and x657 (and (= x4556 6539370208772218570076773595062200405109424842860869254164860851635934461952) (< x1419 405663989) (not (= 178855970 x1419)) (= 242558722 x1419) (not (= 75483562 x1419)) (= (or (and (< x3456 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3456) true)) (> x3456 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x5000) (= x2177 36) (< x1419 2217467699) (= x1001 (x3736 (x2147 x4287))) (< x1419 988262939) (> x1001 0) (= x2177 x1890) (not (> 4 x2177)) (= x2057 x4519) (= x3456 (x4761 (- x2177 4))))) (= x657 (= x4287 x2406))) (not x2374)) (and (=> (and (and (= (x2760 (x2147 x4078) (x3059 6) 0) x1816) (= x4519 x488) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1181) (= (< x1181 x2057) x381) (= x1181 (x132 x1816)) (<= 0 x1181)) (not x5000)) (and (=> (and (= x2070 x3267) x381) x3865) (=> (and (and (= x2655 (x132 x4854)) (= x1625 (< x2655 x4519)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2655) (= x4854 (x2760 (x2147 x4078) (x3059 6) 0)) (<= 0 x2655)) (not x381)) (and (=> (and x1625 (= x3267 x2070)) x3865) (=> (and (not x1625) (and (= x3090 (x4761 (- x2655 x4519))) (<= 0 x3267) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4519)) x1584) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3267) (= x2999 (< x1584 x3267)))) (and (=> (and (= x3267 x2070) x2999) x3865) (=> (and (and (= x2853 (x3589 (+ x4519 x3267))) (<= 0 x4076) (< x4076 1461501637330902918203684832716283019655932542976) (= x2268 (x3589 (+ x3267 x4519))) (= x3314 128) (>= 1461501637330902918203684832716283019655932542975 x4076) (= x2592 (= x2330 x4076))) (not x2999)) (and (=> (and (and (= x5163 (x3736 (x2147 x2330))) (= x4078 x3554) (= x488 x1350) (= 100 x3188) (= x4771 x4287) (= 599290589 x2714) (= x4875 (or (> x1847 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1847)) (< x1847 96)))) (= 100 x3188) (= x1847 (x4761 (- x3188 4))) (not (< x2714 599290589)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x4863) (< x2714 1466279372) (< 0 x5163) (not (< x3188 4))) x2592) (and (=> x4875 x2948) (=> (and (not x4875) (and (= x1541 (= x3554 x4078)) (= x3554 x3847))) (and (=> (and (and (= x4771 x4540) (= (= x4287 x4771) x2210)) x1541) (and (=> (and x2210 (and (= (x2760 (x2147 x3554) (x3059 1) 0) x99) (= (x3943 x99) x3663) (<= x3663 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4359 x1350) (<= 0 x3663) (= x1058 (> x488 x3663)))) (and (=> (and (= x2579 (< x3663 x1350)) (not x1058)) (and (=> x2579 x2948) (=> (and (and (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1350)) x1247) (= (x2760 (x2147 x4771) (x3059 1) 0) x2700) (<= x2776 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x5413 x2700) x2776) (= x2901 (x4761 (- x3663 x1350))) (>= x2776 0) (= (x2760 (x2147 x3554) (x3059 1) 0) x2284) (= (< x1247 x2776) x3238)) (not x2579)) (and (=> (and (not x3238) (and (= (x3589 (+ x1350 x2776)) x2647) (= (> x2776 x2647) x4827))) (and (=> x4827 x2948) (=> (and (not x4827) (and (<= 0 x2431) (= (x2 x1993) x2431) (<= x2431 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1564 (< x2431 x1350)) (= (x2760 (x2147 x4771) (x3059 1) 0) x2751) (= x1993 (x2760 (x2147 x4287) x1285 0)) (= (x2760 (x2147 x3554) (x3059 2) 0) x1285))) (and (=> (and (= x1007 (> x1350 x2431)) (not x1564)) (and (=> (and (not x1007) (and (= x1557 (x2760 (x2147 x4287) x270 0)) (= x1838 1) (= (x4761 (- x2431 x1350)) x3964) (= x3956 32) (= x270 (x2760 (x2147 x3554) (x3059 2) 0)))) x3773) (=> x1007 x2948))) (=> x1564 x2948))))) (=> x3238 x2948))))) (=> x1058 x2948))) (=> (not x2210) x2948))) (=> (not x1541) x2948))))) (=> (and (not x2592) (= (= x2179 x4076) x1708)) (and (=> (and x1708 (and (= 599290589 x2450) (< x2450 988262939) (= 100 x4874) (= x5280 x488) (= x5421 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1218) (and (= true (<= x1218 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1218 96)))) (= x4078 x1314) (not (> 4 x4874)) (> 2217467699 x2450) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2005) (= x602 (x3736 (x2147 x2179))) (= 100 x4874) (= x4287 x1600) (> x602 0) (not (= x2450 547091486)) (not (= 405663989 x2450)) (not (< x2450 405663989)) (= (x4761 (- x4874 4)) x1218))) (and (=> x5421 x1630) (=> (and (and (= x3590 x1314) (= (= x4078 x1314) x5425)) (not x5421)) (and (=> (not x5425) x1630) (=> (and (and (= (= x1600 x4287) x3740) (= x1600 x3734)) x5425) (and (=> (not x3740) x1630) (=> (and (and (= x3021 (x4964 x1301)) (= (x2760 (x2147 x1314) (x3059 5) 0) x1301) (= x1959 (< x3021 x488)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3021) (>= x3021 0) (= x345 x5280)) x3740) (and (=> (and (and (= (x2760 (x2147 x1314) (x3059 5) 0) x4424) (>= x27 0) (= x27 (x4964 x4424)) (= (< x27 x5280) x5396) (<= x27 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x1959)) (and (=> (and (not x5396) (and (= (x4761 (- x27 x5280)) x4458) (<= 0 x3951) (= (x2760 (x2147 x1600) (x3059 5) 0) x5343) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3951) (= (< x3772 x3951) x3494) (= x3772 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5280))) (= (x3202 x5343) x3951))) (and (=> (and (and (= x2271 32) (= x646 (x3589 (+ x3951 x5280))) (= 1 x103) (= x2966 1)) (not x3494)) x5036) (=> x3494 x1630))) (=> x5396 x1630))) (=> x1959 x1630))))))))) (=> (and (not x1708) (= x742 (= x4076 x4721))) (and (=> (and x742 (and (not (= x5053 405663989)) (not (= x5053 547091486)) (= (x4761 (- x4608 4)) x1252) (= x4608 100) (= x5053 599290589) (not (< x4608 4)) (= x625 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x4078 x39) (< 0 x3763) (= (or (and (< x1252 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1252) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1252)) x2329) (< x5053 2217467699) (not (< x5053 405663989)) (> 988262939 x5053) (= x488 x5044) (= (x3736 (x2147 x4721)) x3763) (= x1045 x4287) (= x4608 100))) (and (=> x2329 x3882) (=> (and (not x2329) (and (= (= x4078 x39) x315) (= x3397 x39))) (and (=> (not x315) x3882) (=> (and (and (= (= x1045 x4287) x1179) (= x1045 x4635)) x315) (and (=> (and x1179 (and (= x256 (> x488 x3045)) (= (x2760 (x2147 x39) (x3059 5) 0) x4560) (= x3045 (x5170 x4560)) (<= x3045 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x5044 x884) (>= x3045 0))) (and (=> x256 x3882) (=> (and (and (= (x2760 (x2147 x39) (x3059 5) 0) x133) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3710) (>= x3710 0) (= (< x3710 x5044) x4067) (= (x5170 x133) x3710)) (not x256)) (and (=> (and (and (= (x4761 (- x3710 x5044)) x807) (= x3508 (x2760 (x2147 x1045) (x3059 5) 0)) (<= x2342 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5044)) x3804) (= (x5255 x3508) x2342) (>= x2342 0) (= (< x3804 x2342) x579)) (not x4067)) (and (=> x579 x3882) (=> (and (not x579) (and (= 1 x3165) (= 32 x3892) (= (x3589 (+ x5044 x2342)) x112) (= x4209 1))) x5114))) (=> x4067 x3882))))) (=> (not x1179) x3882))))))) (=> (and (and (and (and (not (< x3431 4)) (= x488 x2437) (> x5449 0) (= (x4761 (- x3431 4)) x3216) (not (= x3275 547091486)) (not (< x3275 405663989)) (= x2721 (or (and (< x3216 96) (= (<= x3216 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x3216 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x4078 x839) (= (x3736 (x2147 x4287)) x5449) (= 100 x3431) (not (= 405663989 x3275)) (= x4287 x1581) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x343) (> 988262939 x3275) (> 2217467699 x3275) (= 100 x3431) (= x3275 599290589)) x2879) (= (= x4076 x4287) x2879)) (not x742)) (and (=> (and (and (= x839 x1225) (= (= x4078 x839) x3623)) (not x2721)) (and (=> (not x3623) x4497) (=> (and (and (= x1581 x1861) (= (= x4287 x1581) x1572)) x3623) (and (=> (and x1572 (and (= x2437 x4787) (= x1773 (x2760 (x2147 x839) (x3059 5) 0)) (= x2854 (> x488 x2743)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2743) (<= 0 x2743) (= x2743 (x1150 x1773)))) (and (=> x2854 x4497) (=> (and (and (= (x1150 x641) x2551) (<= x2551 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (< x2551 x2437) x1898) (<= 0 x2551) (= (x2760 (x2147 x839) (x3059 5) 0) x641)) (not x2854)) (and (=> (and (and (= x3814 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2437))) (<= 0 x883) (= (< x3814 x883) x3156) (<= x883 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x2760 (x2147 x1581) (x3059 5) 0) x104) (= x290 (x4761 (- x2551 x2437))) (= x883 (x1662 x104))) (not x1898)) (and (=> x3156 x4497) (=> (and (not x3156) (and (= x3604 (x3589 (+ x883 x2437))) (= x854 1) (= x3358 1) (= x3448 32))) x2372))) (=> x1898 x4497))))) (=> (not x1572) x4497))))) (=> x2721 x4497))))))))))))))) (=> (and (= x3267 x2070) x5000) x3865))) (=> (and x2374 (and (= x146 (or (and (< x1805 32) (= true (<= x1805 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x1805 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1805 (x4761 (- x4024 4))) (= 242558722 x4859) (= (x3736 (x2147 x4721)) x3621) (> x3621 0) (> 988262939 x4859) (not (= x4859 178855970)) (= 36 x4024) (not (= 75483562 x4859)) (> 405663989 x4859) (= x1890 x4024) (< x4859 2217467699) (= x826 6539370208772218570076773595062200405109424842860869254164860851635934461952) (= x5128 x2057) (not (< x4024 4)))) (and (=> (and x146 (= x1376 x1897)) x505) (=> (and (and (= x1863 (x2760 (x2147 x4078) (x3059 6) 0)) (= x4221 x5128) (= x1321 (x3626 x1863)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1321) (>= x1321 0) (= (> x2057 x1321) x4034)) (not x146)) (and (=> (and (and (= x1673 (x3626 x718)) (= x4411 (> x5128 x1673)) (<= 0 x1673) (= x718 (x2760 (x2147 x4078) (x3059 6) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1673)) (not x4034)) (and (=> (and (and (>= x1897 0) (<= x1897 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x448 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5128))) (= x4647 (< x448 x1897)) (= x5038 (x4761 (- x1673 x5128)))) (not x4411)) (and (=> (and x4647 (= x1376 x1897)) x505) (=> (and (and (= x2538 (x3589 (+ x5128 x1897))) (= x1531 (x3589 (+ x1897 x5128))) (<= x3544 1461501637330902918203684832716283019655932542975) (= x3492 128) (= x234 (= x3544 x2330)) (>= x3544 0) (< x3544 1461501637330902918203684832716283019655932542976)) (not x4647)) (and (=> (and (and (> x569 0) (= x2540 100) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1735) (= 100 x2540) (= x3615 599290589) (= (x3736 (x2147 x2330)) x569) (= (x4761 (- x2540 4)) x3255) (= x3827 x4078) (= x4963 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3255) (and (< x3255 96) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x3255) true)))) (= x4721 x4885) (= x73 x4221) (not (> 4 x2540)) (not (< x3615 599290589)) (> 1466279372 x3615)) x234) (and (=> (and (and (= x3827 x2896) (= (= x3827 x4078) x1483)) (not x4963)) (and (=> (not x1483) x4009) (=> (and (and (= x4885 x1994) (= (= x4885 x4721) x5293)) x1483) (and (=> (not x5293) x4009) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x2480) (<= 0 x2480) (= x73 x931) (= (> x4221 x2480) x3471) (= (x3943 x5417) x2480) (= x5417 (x2760 (x2147 x3827) (x3059 1) 0))) x5293) (and (=> (and (not x3471) (= (> x73 x2480) x1841)) (and (=> x1841 x4009) (=> (and (not x1841) (and (= (x517 x2167) x1088) (= (x4761 (- x2480 x73)) x2020) (= x5370 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x73))) (= (x2760 (x2147 x3827) (x3059 1) 0) x1248) (= (> x1088 x5370) x1587) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1088) (>= x1088 0) (= (x2760 (x2147 x4885) (x3059 1) 0) x2167))) (and (=> (and (and (= x3649 (< x1579 x1088)) (= (x3589 (+ x1088 x73)) x1579)) (not x1587)) (and (=> (and (and (= (x2760 (x2147 x4721) x5138 0) x1513) (= (< x129 x73) x3797) (= (x2760 (x2147 x4885) (x3059 1) 0) x4989) (<= 0 x129) (= x5138 (x2760 (x2147 x3827) (x3059 2) 0)) (= (x2 x1513) x129) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x129)) (not x3649)) (and (=> x3797 x4009) (=> (and (not x3797) (= x1393 (> x73 x129))) (and (=> x1393 x4009) (=> (and (not x1393) (and (= 1 x3944) (= x2123 (x2760 (x2147 x4721) x2333 0)) (= 32 x5350) (= x2255 (x4761 (- x129 x73))) (= (x2760 (x2147 x3827) (x3059 2) 0) x2333))) x1112))))) (=> x3649 x4009))) (=> x1587 x4009))))) (=> x3471 x4009))))))) (=> x4963 x4009))) (=> (and (not x234) (= x4285 (= x3544 x2179))) (and (=> (and (not x4285) (= (= x3544 x4721) x2711)) (and (=> (and (and (= x4221 x1062) (= 100 x4323) (not (= 547091486 x2774)) (= x4323 100) (= x2819 (x3736 (x2147 x4721))) (= x1339 x4078) (= x4721 x3823) (not (< x2774 405663989)) (not (= x2774 405663989)) (= 599290589 x2774) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x2492) (> 2217467699 x2774) (= (x4761 (- x4323 4)) x5286) (= (or (and (= (<= x5286 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 96 x5286)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5286)) x4040) (< x2774 988262939) (not (< x4323 4)) (< 0 x2819)) x2711) (and (=> x4040 x3845) (=> (and (and (= (= x4078 x1339) x2396) (= x1339 x761)) (not x4040)) (and (=> (not x2396) x3845) (=> (and (and (= x3823 x5218) (= (= x4721 x3823) x69)) x2396) (and (=> (and (and (= (x5170 x2561) x460) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x460) (= (> x4221 x460) x972) (<= 0 x460) (= x1062 x4915) (= (x2760 (x2147 x1339) (x3059 5) 0) x2561)) x69) (and (=> (and (not x972) (and (>= x3138 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3138) (= x4876 (> x1062 x3138)) (= x2677 (x2760 (x2147 x1339) (x3059 5) 0)) (= (x5170 x2677) x3138))) (and (=> (and (not x4876) (and (<= x1554 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1554 (x1209 x4719)) (= x2457 (x4761 (- x3138 x1062))) (= x3479 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1062))) (= x4479 (< x3479 x1554)) (<= 0 x1554) (= (x2760 (x2147 x3823) (x3059 5) 0) x4719))) (and (=> (and (not x4479) (and (= (x3589 (+ x1554 x1062)) x4533) (= 1 x4593) (= 1 x866) (= 32 x1942))) x2519) (=> x4479 x3845))) (=> x4876 x3845))) (=> x972 x3845))) (=> (not x69) x3845))))))) (=> (and (not x2711) (and (= x779 (= x3544 x4287)) (and x779 (and (= x2949 (x4761 (- x1460 4))) (= x1460 100) (= x2648 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (< x291 405663989)) (= x4721 x5244) (not (= 547091486 x291)) (= (or (and (= (<= x2949 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x2949 96)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2949)) x4861) (= x4221 x407) (not (> 4 x1460)) (= x4078 x3013) (= 599290589 x291) (< 0 x3200) (< x291 988262939) (= x3200 (x3736 (x2147 x4287))) (< x291 2217467699) (not (= 405663989 x291)) (= x1460 100))))) (and (=> x4861 x2995) (=> (and (not x4861) (and (= x3141 (= x4078 x3013)) (= x3013 x4682))) (and (=> (and x3141 (and (= x590 (= x4721 x5244)) (= x4366 x5244))) (and (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3801) (= (x2760 (x2147 x3013) (x3059 5) 0) x5224) (= (x1150 x5224) x3801) (= x4115 x407) (= x4693 (> x4221 x3801)) (<= 0 x3801)) x590) (and (=> x4693 x2995) (=> (and (not x4693) (and (= x323 (x1150 x4387)) (<= x323 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1163 (> x407 x323)) (= x4387 (x2760 (x2147 x3013) (x3059 5) 0)) (<= 0 x323))) (and (=> (and (and (>= x4644 0) (= (x4761 (- x323 x407)) x2795) (= x4994 (> x4644 x4145)) (= x1036 (x2760 (x2147 x5244) (x3059 5) 0)) (<= x4644 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x4145 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x407))) (= (x1302 x1036) x4644)) (not x1163)) (and (=> x4994 x2995) (=> (and (not x4994) (and (= x1348 32) (= 1 x803) (= x800 (x3589 (+ x4644 x407))) (= 1 x3182))) x2973))) (=> x1163 x2995))))) (=> (not x590) x2995))) (=> (not x3141) x2995))))))) (=> (and x4285 (and (= (x4761 (- x5438 4)) x4403) (> 2217467699 x3263) (= 599290589 x3263) (= (x3736 (x2147 x2179)) x3642) (= 100 x5438) (= x4078 x1800) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x941) (not (= 547091486 x3263)) (< 0 x3642) (= x4221 x550) (= x3871 x4721) (not (< x5438 4)) (= x5438 100) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4403) true) (> 96 x4403)) (> x4403 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x3407) (not (> 405663989 x3263)) (> 988262939 x3263) (not (= x3263 405663989)))) (and (=> x3407 x3570) (=> (and (not x3407) (and (= (= x1800 x4078) x4666) (= x229 x1800))) (and (=> (and x4666 (and (= x3871 x3453) (= x1675 (= x4721 x3871)))) (and (=> (and (and (= x645 (> x4221 x4041)) (= (x4964 x1979) x4041) (<= 0 x4041) (= x550 x3082) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4041) (= x1979 (x2760 (x2147 x1800) (x3059 5) 0))) x1675) (and (=> (and (and (= x5180 (x2760 (x2147 x1800) (x3059 5) 0)) (= x2013 (< x3661 x550)) (= (x4964 x5180) x3661) (<= x3661 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x3661)) (not x645)) (and (=> (and (not x2013) (and (= x1273 (x4761 (- x3661 x550))) (= (> x1965 x844) x821) (= (x65 x2390) x1965) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x550)) x844) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1965) (<= 0 x1965) (= x2390 (x2760 (x2147 x3871) (x3059 5) 0)))) (and (=> (and (not x821) (and (= x4957 32) (= 1 x2391) (= 1 x195) (= (x3589 (+ x550 x1965)) x4363))) x5185) (=> x821 x3570))) (=> x2013 x3570))) (=> x645 x3570))) (=> (not x1675) x3570))) (=> (not x4666) x3570))))))))))) (=> (and (= x1376 x1897) x4411) x505))) (=> (and (= x1376 x1897) x4034) x505)))))))))))))
(assert (= x4561 (and x4182 x225)))
(assert (= x2844 (and x3858 x5442)))
(assert (= (or x3976 x5097) x5270))
(assert (= (and x3652 x4829) x2060))
(assert (x5093 x3467))
(assert (= (and (not x4660) x1717) x5434))
(assert (x1311 x2178))
(assert (x5093 x2634))
(assert (x5093 x3428))
(assert (x5093 x385))
(assert (= x3651 (and x1714 (not x1658))))
(assert (= x2061 (or x1411 x3717)))
(assert (= (and x607 x1278) x2246))
(assert (= (and x2639 (not x894)) x4935))
(assert (= (and x1421 (not x2134)) x4049))
(assert (x5093 x4540))
(assert (x5093 x3218))
(assert (=> (<= x3140 10000) (= (x2147 x3140) (x3059 x3140))))
(assert (= x1962 (and x3987 x2630)))
(assert (x3513 x1368 (- x2299 x520)))
(assert (= (and (not x1733) x843) x1559))
(assert (x5093 x3131))
(assert (= (or x4060 x4308) x4867))
(assert (= x1717 (and (not x571) x608)))
(assert (= x5046 (and (not x1496) x3899)))
(assert (= (and x3258 x2586) x5333))
(assert (x5093 x3769))
(assert (x5093 x1218))
(assert (= (x3311 (x2147 x3178)) x3178))
(assert (x5093 x5414))
(assert (x5093 x3440))
(assert (= (and x1916 x3760) x318))
(assert (= (and x2536 x2787) x4426))
(assert (= (and x660 x1969) x1146))
(assert (= (or x3273 x755 x2654 x4274 x6 x3254) x2928))
(assert (= x1843 (and (not x1777) x324)))
(assert (x348 x2880))
(assert (x5093 x2966))
(assert (x5093 x4041))
(assert (= 1000000000000000000 (x3311 (x3059 1000000000000000000))))
(assert (x5093 x3324))
(assert (= x1709 (and x3155 (not x2998))))
(assert (= x2429 (and x305 x4107)))
(assert (= (+ (x3311 x2375) 1) (x3311 (x4345 x2375 1))))
(assert (x5093 x2891))
(assert (x5093 x1186))
(assert (x5093 x1440))
(assert (x5093 x651))
(assert (x5093 x644))
(assert (= x2726 (and (not x2365) x2837)))
(assert (= (=> (and (= 0 x2075) (= x476 x1376) (= x3035 x5171)) x2613) x505))
(assert (= x4555 (and (not x3868) x2061)))
(assert (= (and x613 x1189) x5418))
(assert (x1311 x5140))
(assert (x5093 x3492))
(assert (= x3429 (and (not x2302) x2377)))
(assert (x5093 x28))
(assert (x5093 x1994))
(assert (= (and x1703 (not x4195)) x3499))
(assert (= (and x608 x571) x3640))
(assert (x5093 x3905))
(assert (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x3311 (x3059 16156842317565293874272834530371880720966471053262404558597773956279093428224))))
(assert (= x2093 (or x4953 x2726)))
(assert (= (x2147 2217467699) (x3059 2217467699)))
(assert (= x1618 (and x4574 x4876)))
(assert (x5093 x1974))
(assert (x5093 x1895))
(assert (x5093 x3604))
(assert (= (and x2529 x809) x1521))
(assert (= (x2147 3583811254) (x3059 3583811254)))
(assert (= (and x2061 x3868) x566))
(assert (= x3100 (and x1604 (not x7))))
(assert (x5093 x163))
(assert (= (x3311 (x2147 x1032)) x1032))
(assert (= x5247 (and (not x4552) x656)))
(assert (x348 x3985))
(assert (x5093 x122))
(assert (= (and x2164 (not x3086)) x656))
(assert (= x1734 (and x5281 x1619)))
(assert (x5093 x417))
(assert (= (and x817 x975) x987))
(assert (x5093 x5029))
(assert (= (x3059 75483562) (x2147 75483562)))
(assert (= (and x2993 (not x4047)) x4292))
(assert (= (and (not x79) x2203) x400))
(assert (= x2427 (and x1353 (not x748))))
(assert (= (or x3502 x833) x3445))
(assert (= x3003 (and x2955 x4658)))
(assert (= (+ (x3311 x5113) 1) (x3311 (x4345 x5113 1))))
(assert (= x1122 (or x4734 x5372)))
(assert (= (x3311 (x4345 x3093 2)) (+ (x3311 x3093) 2)))
(assert (= (and x4414 x1732) x2685))
(assert (= x5164 (or x1377 x3829)))
(assert (x5093 x3679))
(assert (= x1761 (and x2203 x79)))
(assert (= x1165 (and (not x3635) x110)))
(assert (= (+ (x3311 x2549) 2) (x3311 (x4345 x2549 2))))
(assert (= (and x3515 x3299) x3907))
(assert (= (x3311 (x2147 x2043)) x2043))
(assert (= x4394 (and x2618 x1701)))
(assert (= x3809 (and x1759 x2263)))
(assert (x5093 x3205))
(assert (= x1033 (and (not x746) x2583)))
(assert (= (x2147 599290589) (x3059 599290589)))
(assert (x5093 x4395))
(assert (x5093 x3701))
(assert (= x2448 x193))
(assert (x5093 x5432))
(assert (= (=> (and (= x3357 x906) (= x4450 x1289)) x2236) x674))
(assert (= x5013 (and x607 (not x1278))))
(assert (= x364 (=> (and (or (and (not x3534) (= (x2760 (x2147 x5376) x1711 0) x119)) (and (= (x4345 x1711 2) x2392) x3534)) (= x3534 (= x5376 0))) x2142)))
(assert (x5093 x1394))
(assert (x5093 x1685))
(assert (= x2945 (and x1366 x3498)))
(assert (= x484 (=> (= (= 0 x3124) x1204) (and (=> (and (not x1204) (= (or (and (< x5297 32) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5297) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5297)) x2462)) (and (=> (and (not x2462) (and (>= x1858 0) (= (> x1858 x671) x3401) (<= x1858 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x671 (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x5321))))) (and (=> x3401 x3442) (=> (and (not x3401) (and (<= x3312 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x3312 (x1341 x1108)) (= (x3589 (+ x1858 x5321)) x1961) (= (< x671 x3312) x894) (= (x2760 (x2147 x4078) (x3059 5) 0) x1108) (>= x3312 0))) (and (=> (and (and (= 1 x2904) (= (x3589 (+ x5321 x3312)) x3171) (= 32 x3777)) (not x894)) x743) (=> x894 x3442))))) (=> x2462 x3442))) (=> x1204 x3442)))))
(assert (x5093 x520))
(assert (x5093 x2269))
(assert (x5093 x3753))
(assert (x5093 x4232))
(assert (= (and x3789 x4484) x3386))
(assert (x3513 x340 (- x520 x1194)))
(assert (=> (>= 10000 x1758) (= (x3059 x1758) (x2147 x1758))))
(assert (= (or x5015 (and (not x2610) x3580)) x637))
(assert (x5093 x537))
(assert (x5093 x5433))
(assert (x5093 x4452))
(assert (= (x3311 (x2147 x1906)) x1906))
(assert (= x4341 (=> (and (= x3519 x1479) (= x1162 x379)) x4343)))
(assert (x5093 x578))
(assert (x5093 x4607))
(assert (x5093 x1472))
(assert (= (and x1473 (not x1956)) x3257))
(assert (= (+ 2 (x3311 x1857)) (x3311 (x4345 x1857 2))))
(assert (= (and x1325 (not x3564)) x2203))
(assert (= x2155 (and x2767 x5351)))
(assert (= (and x1486 (not x4092)) x5019))
(assert (x3331 x328))
(assert (= (x3311 (x4345 x346 1)) (+ (x3311 x346) 1)))
(assert (= (and (not x2526) x3817) x4080))
(assert (x5093 x3303))
(assert (x5093 x5211))
(assert (x5093 x259))
(assert (= x2585 x4233))
(assert (= (x3311 (x2147 x1800)) x1800))
(assert (x5093 x1529))
(assert (x5093 x3064))
(assert (= (x3311 (x4345 x55 1)) (+ 1 (x3311 x55))))
(assert (= (+ 2 (x3311 x4498)) (x3311 (x4345 x4498 2))))
(assert (x1405 x3089))
(assert (=> (<= x420 10000) (= (x3059 x420) (x2147 x420))))
(assert (x5093 x973))
(assert (x5131 x1689 x70))
(assert (x5093 x740))
(assert (= x2475 (and x4463 x2425)))
(assert (= (and x4738 x2685) x553))
(assert (= (and (not x4) x950) x3826))
(assert (x3513 x2299 (- x1368 x1194)))
(assert (x5093 x5016))
(assert (=> (<= x2942 10000) (= (x2147 x2942) (x3059 x2942))))
(assert (= (+ (x3311 x4764) 1) (x3311 (x4345 x4764 1))))
(assert (= (and x2834 x3948) x580))
(assert (= (and x2347 x1147) x5412))
(assert (= (=> (= x1507 x3048) x4460) x492))
(assert (x5093 x5220))
(assert (= x4083 (and x371 (not x871))))
(assert (= x741 (and x1959 x1168)))
(assert (=> (<= x4564 10000) (= (x2147 x4564) (x3059 x4564))))
(assert (= x3768 (=> (= (= x3510 x197) x3204) (and (=> x3204 x3137) (=> (and (= (> x3510 0) x2289) (not x3204)) (and (=> (not x2289) x4672) (=> (and (and (<= x2908 1461501637330902918203684832716283019655932542975) (= (x3655 x5320) x2908) (= (x4347 x5096) x3233) (= (= 0 x1524) x4135) (<= 0 x1524) (<= 0 x3233) (<= x3233 1461501637330902918203684832716283019655932542975) (= x5096 (x4345 x5320 1)) (< x3233 1461501637330902918203684832716283019655932542976) (= x1524 (x156 x5155)) (<= x1524 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x2908 0) (= (x4345 x5096 1) x5155) (< x2908 1461501637330902918203684832716283019655932542976) (= x3140 (x1025 1461501637330902918203684832716283019655932542975 x1015)) (= (x2760 (x2147 x3140) x1117 0) x5320)) x2289) (and (=> (and (and (= (= 0 x2908) x1634) (or (and x1634 (= x3437 (x4345 x1117 1))) (and (not x1634) (and (= x1945 (x2760 (x2147 x2908) x1117 0)) (= (x4345 x1945 1) x3662))))) (not x4135)) x337) (=> x4135 x1172)))))))))
(assert (x5093 x3581))
(assert (x5093 x103))
(assert (= (+ (x3311 x1798) 1) (x3311 (x4345 x1798 1))))
(assert (= x2583 (or x1799 x667)))
(assert (x5093 x816))
(assert (x1311 x1558))
(assert (x5093 x3999))
(assert (x5093 x2865))
(assert (= (and x1940 (not x2424)) x4679))
(assert (= (x3311 (x3059 2362143243)) 2362143243))
(assert (x5093 x1622))
(assert (= (and x2186 (not x2108)) x2356))
(assert (= x2482 (and x2932 x3782)))
(assert (= x424 (and x2109 (not x3568))))
(assert (= x4777 (and (not x2029) x5013)))
(assert (= x2381 (and x1972 x531)))
(assert (x5093 x226))
(assert (x5093 x2286))
(assert (= x5244 (x3311 (x2147 x5244))))
(assert (x5093 x3031))
(assert (= x781 (and x3973 x3046)))
(assert (x5093 x3633))
(assert (= (or x339 x2105) x5367))
(assert (= x1792 (=> (and (< x1355 1461501637330902918203684832716283019655932542976) (= (= x1355 0) x2318) (<= x1355 1461501637330902918203684832716283019655932542975) (>= x1355 0)) (and (=> (and (and (<= x1355 1461501637330902918203684832716283019655932542975) (= (= x5236 0) x280) (<= 0 x1355) (= (x3736 (x2147 x1355)) x5236) (< x1355 1461501637330902918203684832716283019655932542976)) (not x2318)) (and (=> (and (not x280) (> 4294967296 x5012)) x216) (=> x280 x1594))) (=> x2318 x216)))))
(assert (x5093 x1946))
(assert (x5093 x2161))
(assert (x5093 x3873))
(assert (x5093 x2091))
(assert (x5093 x2534))
(assert (x5093 x372))
(assert (= x4279 (and x2307 x977)))
(assert (= x3166 (or (and x670 x351) x108 (and x2521 x170) (and x3318 x5137) x2446 x4503 (and x2214 x4711) (and (not x1231) x1397) (and (not x1075) x4419))))
(assert (= (=> (and (= x2855 x5011) (= 0 x923)) x306) x4495))
(assert (= x2942 (x3311 (x2147 x2942))))
(assert (x5093 x1884))
(assert (= x2651 (and (not x1103) x1996)))
(assert (x5093 x1885))
(assert (= (and x5060 (not x2606)) x219))
(assert (= (=> (and (= 0 x803) (= x1348 x528)) x2973) x2995))
(assert (= (or x577 x698) x3976))
(assert (= (and x631 x3317) x1601))
(assert (= x782 (=> (and (or (and x1236 (= x2897 x1638)) (and (= 0 x2897) (not x1236))) (and (<= 0 x1638) (<= x3338 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x1307) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1307) (<= 0 x4220) (= (x877 x3859) x4220) (= (x4345 x3897 2) x1807) (= x3897 (x2760 (x2147 x4357) x3872 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4397) (= x3338 (x84 x3014)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1638) (<= 0 x3338) (= (x4345 x3859 1) x4507) (= x3859 (x2760 (x2147 x4357) x3085 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x4220) (= (x2760 (x2147 x2406) (x3059 159) 0) x3085) (= x1857 (x2760 (x2147 x4357) x4855 0)) (= x1638 (x445 x4507)) (= x1307 (x3627 x1807)) (= x1236 (< x4397 x1638)) (= x3872 (x2760 (x2147 x2406) (x3059 157) 0)) (>= x4397 0) (= (x4345 x1857 2) x3014) (= (x2760 (x2147 x2406) (x3059 156) 0) x4855))) x1534)))
(assert (= (and x1142 (not x4282)) x4534))
(assert (x5093 x642))
(assert (x3331 x970))
(assert (= (and x1690 x4067) x264))
(assert (= (+ (x3311 x4283) 1) (x3311 (x4345 x4283 1))))
(assert (x348 x3108))
(assert (x5093 x3822))
(assert (= x1659 (and x4521 x5107)))
(assert (= (x3059 18446744073709551615) (x2147 18446744073709551615)))
(assert (=> (>= 10000 x64) (= (x3059 x64) (x2147 x64))))
(assert (= x2596 (and x3523 x5309)))
(assert (= (x3311 (x4345 x5320 1)) (+ 1 (x3311 x5320))))
(assert (x5093 x3916))
(assert (x348 x1106))
(assert (x1311 x4778))
(assert (= x4727 (and x689 (not x61))))
(assert (x5093 x2788))
(assert (= x3037 (and x1216 (not x1058))))
(assert (x3331 (- x340 x1194)))
(assert (= (or x1527 x4342 x1414 x3109 x10 x2715) x4327))
(assert (= (and x1010 x2924) x2105))
(assert (x5093 x3338))
(assert (x1311 x2614))
(assert (x5093 x1463))
(assert (= x2036 (and x2673 x37)))
(assert (x5093 x951))
(assert (x5093 x1778))
(assert (x5093 x1544))
(assert (= (x3311 (x4345 x4929 1)) (+ 1 (x3311 x4929))))
(assert (x5093 x1908))
(assert (= x658 (and (not x821) x2081)))
(assert (= x4262 (x3311 (x2147 x4262))))
(assert (x5093 x4362))
(assert (= (and x1795 x2194) x2794))
(assert (= (=> (and (= x3103 x686) (= 0 x1523)) x1525) x5334))
(assert (= x2926 (and x1243 x4008)))
(assert (x5093 x1689))
(assert (x5093 x2753))
(assert (= x4472 (=> (and (= 0 x574) (= x1229 x870)) x5071)))
(assert (= (and x4851 (not x2999)) x191))
(assert (x5093 x2272))
(assert (x5093 x5386))
(assert (= x2295 (=> (and (= x4456 x4094) (= 0 x387)) x4724)))
(assert (= (and x3646 x3670) x1040))
(assert (x5093 x4634))
(assert (= x2849 (x3311 (x2147 x2849))))
(assert (x5093 x4931))
(assert (=> (<= x1497 10000) (= (x2147 x1497) (x3059 x1497))))
(assert (and (=> (> 32 0) (= (+ (* (x3658 x2889 32) 32) (x570 x2889 32)) x2889)) (x355 x2889 32) (x3825 x2889 32) (x4162 x2889 32)))
(assert (x5093 x4397))
(assert (x5093 x3301))
(assert (x185 x3521 x130))
(assert (x3294 x3239 x1000))
(assert (x5093 x2736))
(assert (x5093 x5119))
(assert (= (x3311 (x4345 x2200 1)) (+ (x3311 x2200) 1)))
(assert (x5093 x1910))
(assert (= (x3311 (x4345 x483 1)) (+ 1 (x3311 x483))))
(assert (= (and x4579 x3914) x1671))
(assert (x5093 x1833))
(assert (=> (>= 10000 x1603) (= (x3059 x1603) (x2147 x1603))))
(assert (= (+ (x3311 x4298) 1) (x3311 (x4345 x4298 1))))
(assert (x5093 x2149))
(assert (x5093 x242))
(assert (= x3476 (and (not x4765) x2106)))
(assert (= (and x1434 (not x4775)) x2717))
(assert (= (and x4900 x557) x892))
(assert (x5093 x1888))
(assert (= (and x2945 (not x4550)) x1772))
(assert (= x1219 (and x5008 (not x456))))
(assert (=> (<= x4262 10000) (= (x2147 x4262) (x3059 x4262))))
(assert (x5093 x2512))
(assert (x5093 x5315))
(assert (=> (>= 10000 x419) (= (x3059 x419) (x2147 x419))))
(assert (= x1702 (and x5013 x2029)))
(assert (= (and (not x3789) x4484) x1424))
(assert (and (x1458 x13 1000000000000000000) (x1175 x13 1000000000000000000) (=> (and (> x13 0) (< 0 1000000000000000000)) (and (> (* (x3658 x13 1000000000000000000) 1000000000000000000) (- x13 1000000000000000000)) (<= (* 1000000000000000000 (x3658 x13 1000000000000000000)) x13))) (x5235 x13 1000000000000000000) (x2792 x13 1000000000000000000)))
(assert (= (and x1455 x3705) x143))
(assert (x5093 x3443))
(assert (x5093 x5130))
(assert (x5093 x4588))
(assert (= (x3311 (x2147 x4656)) x4656))
(assert (x5093 x2418))
(assert (= x2867 (x3311 (x2147 x2867))))
(assert (= x4342 (and x2013 x1918)))
(assert (=> (<= x4559 10000) (= (x3059 x4559) (x2147 x4559))))
(assert (= x3241 (and x3370 x4827)))
(assert (=> (>= 10000 x2414) (= (x3059 x2414) (x2147 x2414))))
(assert (= x2478 (and x69 x2080)))
(assert (= x2863 (and x444 (not x4112))))
(assert (= (and x893 x4557) x5431))
(assert (x1311 x1823))
(assert (= (and x1189 (not x613)) x4888))
(assert (x5093 x2439))
(assert (x5093 x2823))
(assert (= (+ 1 (x3311 x1051)) (x3311 (x4345 x1051 1))))
(assert (x1311 x1355))
(assert (= x2128 (and x706 x2458)))
(assert (= x2142 (=> (and (= x1798 (x4345 x1589 1)) (= (x4345 x1798 1) x1466) (= x1589 (x2760 (x2147 x2682) x1711 0))) x1503)))
(assert (= x4559 (x3311 (x2147 x4559))))
(assert (= (and x5120 x2740) x3097))
(assert (x348 x2530))
(assert (and (x4259 1000000000000000000 x2530) (x887 1000000000000000000 x2530) (x4075 1000000000000000000 x2530) (and (= (x4860 1000000000000000000 (- x2530 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x2530 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x2530) (- (* x2530 1000000000000000000) (* x2530 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x2530 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x2530 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x2530 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x2530) (* x2530 1000000000000000000)) (x2358 1000000000000000000 x2530) (x244 1000000000000000000 x2530)))
(assert (x5093 x4947))
(assert (x1311 x4262))
(assert (= x3369 (and (not x2746) x3425)))
(assert (= x4617 (=> (= (= 0 x3999) x4039) (and (=> x4039 x4600) (=> (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4717) (and (< x4717 32) (= (<= x4717 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))) x4972) (not x4039)) (and (=> (and (and (<= x285 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x529 (< x971 x285)) (= (x4761 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x979)) x971) (>= x285 0)) (not x4972)) (and (=> (and (and (<= x2987 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1381 (> x2987 x971)) (>= x2987 0) (= (x3589 (+ x979 x285)) x2497) (= (x2760 (x2147 x4078) (x3059 5) 0) x4164) (= (x1461 x4164) x2987)) (not x529)) (and (=> x1381 x4600) (=> (and (not x1381) (and (= x2522 1) (= 32 x4749) (= (x3589 (+ x2987 x979)) x3113))) x1693))) (=> x529 x4600))) (=> x4972 x4600)))))))
(assert (=> (>= 10000 x1613) (= (x3059 x1613) (x2147 x1613))))
(assert (= x852 (and x1793 x4040)))
(assert (x5093 x2727))
(assert (= x1776 (and x1580 x354)))
(assert (x5093 x3397))
(assert (= x2525 x5033))
(assert (x5093 x476))
(assert (x5093 x4433))
(assert (x5093 x3510))
(assert (x1311 x4078))
(assert (=> (>= 10000 x1355) (= (x3059 x1355) (x2147 x1355))))
(assert (x5093 x4984))
(assert (= (and x4062 (not x2911)) x2993))
(assert (= (and (not x2747) x637) x438))
(assert (= x2635 (and x1992 (not x1752))))
(assert (x5093 x2573))
(assert (= (and (not x1178) x4462) x1030))
(assert (= x1872 (and (not x2050) x3092)))
(assert (= (and x2651 (not x3837)) x3498))
(assert (and (= 9 (x4860 3 3)) (= 81 (x4860 9 9)) (= 27 (x4860 9 3)) (= (x4860 27 3) 81)))
(assert (= (and (not x1574) x3118) x161))
(assert (x5093 x3170))
(assert (x1311 x2802))
(assert (= (and x3826 (not x3363)) x5355))
(assert (x5093 x3178))
(assert (x885 x520 x1194 x340 x520))
(assert (x5093 x1755))
(assert (x5093 x96))
(assert (x5093 x5006))
(assert (= (and x1836 x2289) x2627))
(assert (x5093 x5323))
(assert (x5093 x3770))
(assert (= x1345 (and (not x1661) x2400)))
(assert (x5093 x1201))
(assert (= (and (not x5248) x4227) x218))
(assert (= x4287 (x3311 (x2147 x4287))))
(assert (x5093 x3159))
(assert (x5131 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3108))
(assert (= (or x292 x3767) x3435))
(assert (= (and x5257 x3401) x2352))
(assert (x1311 x4588))
(assert (x5093 x4191))
(assert (= (and (not x4827) x3370) x2385))
(assert (=> (<= x1435 10000) (= (x3059 x1435) (x2147 x1435))))
(assert (= (x3311 (x2147 x4721)) x4721))
(assert (x4437 x4731))
(assert (= x1830 (and (not x967) x1468)))
(assert (= (and x987 (not x1199)) x4108))
(assert (x5093 x5203))
(assert (= x4690 (or x2261 x2881)))
(assert (x5093 x4580))
(assert (= x411 (x3311 (x2147 x411))))
(assert (= (and x2403 x3499) x3875))
(assert (x5093 x5118))
(assert (x3294 x5415 x3419))
(assert (= x4439 (and x1943 x2643)))
(assert (x5093 x4778))
(assert (= (and x1489 x3471) x997))
(assert (=> (<= x1339 10000) (= (x3059 x1339) (x2147 x1339))))
(assert (= (and x1975 (not x2878)) x1097))
(assert (x5093 x4563))
(assert (x5093 x5408))
(assert (x5093 x5371))
(assert (and (x1458 x4022 1000000000000000000) (x1175 x4022 1000000000000000000) (=> (and (> x4022 0) (< 0 1000000000000000000)) (and (> (* (x3658 x4022 1000000000000000000) 1000000000000000000) (- x4022 1000000000000000000)) (<= (* 1000000000000000000 (x3658 x4022 1000000000000000000)) x4022))) (x5235 x4022 1000000000000000000) (x2792 x4022 1000000000000000000)))
(assert (x5093 x2237))
(assert (= (and x1871 x4875) x4449))
(assert (= (and x805 x1771) x1548))
(assert (x5093 x4344))
(assert (x5093 x4575))
(assert (= (and x5193 (not x4332)) x3697))
(assert (x5093 x3132))
(assert (= (and x3474 x1017) x2204))
(assert (= x3869 (x3311 (x2147 x3869))))
(assert (= x3254 (and x4124 (not x4917))))
(assert (x5093 x1003))
(assert (x5093 x807))
(assert (=> (>= 10000 x3144) (= (x3059 x3144) (x2147 x3144))))
(assert (= x551 (x3311 (x2147 x551))))
(assert (= x2393 (and x4702 x147)))
(assert (x5093 x3058))
(assert (x5093 x5004))
(assert (= (and x358 x4647) x5051))
(assert (= x3924 (and x2646 (not x1779))))
(assert (= (or x3748 x1488) x772))
(assert (= (and x5447 x5363) x4268))
(assert (=> (>= 10000 x4093) (= (x3059 x4093) (x2147 x4093))))
(assert (x1311 x1435))
(assert (= (x3311 (x4345 x3404 1)) (+ 1 (x3311 x3404))))
(assert (= x5041 (=> (and (= x5378 x3382) (= x1399 x5435) (= x43 x3267) (= x4028 x5354) (= x1897 x3744)) x1676)))
(assert (= (or x2139 x5051 x4890 x5322 x1095 x2129) x3752))
(assert (x5093 x312))
(assert (=> (<= x2330 10000) (= (x3059 x2330) (x2147 x2330))))
(assert (= (=> (and (= x2865 0) (= x861 x1426)) x4997) x3356))
(assert (x5093 x4487))
(assert (x5093 x4731))
(assert (x1311 x2940))
(assert (x5093 x1549))
(assert (= (and (not x2582) x3208) x4462))
(assert (x5093 x3106))
(assert (= (and (not x3896) x4260) x818))
(assert (= x1526 (and (not x2719) x2298)))
(assert (= (and (not x302) x4171) x3950))
(assert (x5093 x2481))
(assert (= (and x1263 x4364) x4468))
(assert (= x11 (and x2615 x1331)))
(assert (= x1969 (and x3112 x3351)))
(assert (= x1480 (and x179 x2004)))
(assert (x5093 x2910))
(assert (x5093 x2950))
(assert (= (x3311 (x2147 x5376)) x5376))
(assert (x5093 x5375))
(assert (x885 x1368 x2299 x340 x520))
(assert (= (or x3100 x222) x597))
(assert (x5093 x4678))
(assert (= (or x92 x341) x1096))
(assert (x5093 x3089))
(assert (= (and (not x3816) x2211) x4514))
(assert (x5093 x4978))
(assert (x5093 x4181))
(assert (= (and (not x4211) x507) x5107))
(assert (x5093 x1691))
(assert (x5093 x3219))
(assert (= x2734 (or x3260 x426 x2641 x1886 x942 x3745 x4810 x1880 x207 x4187 x3000 x3927 x4913 x4003 x573 x2048 x4729 x4958 x472 x5134 x136 x1375 x2608 x5073 x3994 x3529 x1853)))
(assert (x4437 x1930))
(assert (= x1172 (=> (= x4986 true) x4001)))
(assert (x5093 x4271))
(assert (= x507 (and (not x3913) x4422)))
(assert (= x2532 (and x398 x1157)))
(assert (= (and x649 x2518) x1486))
(assert (x5093 x3938))
(assert (x5093 x3082))
(assert (x5093 x699))
(assert (x5093 x4352))
(assert (= x715 (and x4246 (not x3025))))
(assert (= (and x753 x2362) x1207))
(assert (= x2729 (or x4030 x1420)))
(assert (x348 x13))
(assert (x479 x3089))
(assert (= (and (not x4043) x1127) x2777))
(assert (= x719 (and x3538 (not x1119))))
(assert (x5093 x4538))
(assert (x5093 x5021))
(assert (x5093 x4553))
(assert (= x2209 (and x1365 x4910)))
(assert (x5093 x3013))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (* (x3658 x3328 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x570 x3328 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x3328)) (x355 x3328 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x3825 x3328 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x4162 x3328 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1405 x1184))
(assert (= x503 (=> (and (or x4902 (not x4902)) (= (= x4978 0) x4902)) x5395)))
(assert (= (and x1035 x1093) x4596))
(assert (x5093 x5010))
(assert (= x2039 (or x1641 x1033)))
(assert (x3331 x2530))
(assert (x5093 x4101))
(assert (= (and x4383 x5212) x5302))
(assert (= (and (not x4236) x2482) x67))
(assert (=> (>= 10000 x4721) (= (x3059 x4721) (x2147 x4721))))
(assert (x5093 x5086))
(assert (x5093 x897))
(assert (x5093 x3547))
(assert (= x232 (and x3948 (not x2834))))
(assert (= x2164 (and x4332 x5193)))
(assert (= (and x5420 x3594) x693))
(assert (x5093 x4401))
(assert (x5093 x2163))
(assert (x5093 x523))
(assert (x5093 x2277))
(assert (and (x4259 1000000000000000000 x2880) (x887 1000000000000000000 x2880) (x4075 1000000000000000000 x2880) (and (= (x4860 1000000000000000000 (- x2880 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x2880 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x2880) (- (* x2880 1000000000000000000) (* x2880 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x2880 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x2880 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x2880 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x2880) (* x2880 1000000000000000000)) (x2358 1000000000000000000 x2880) (x244 1000000000000000000 x2880)))
(assert (x5093 x4898))
(assert (= x1552 (and (not x889) x4139)))
(assert (= (and (not x4117) x892) x1846))
(assert (x5093 x3278))
(assert (x5093 x4814))
(assert (= (or x4823 x2476 x2128 x4741) x3007))
(assert (x5093 x3951))
(assert (= (and x3025 x4246) x4255))
(assert (x5093 x197))
(assert (x885 x1194 x520 x2299 x1368))
(assert (=> (<= x1227 10000) (= (x3059 x1227) (x2147 x1227))))
(assert (x5093 x17))
(assert (= x1042 (or x1761 x1704 x2447 x3186 x3142 x5302)))
(assert (= (and (not x2548) x5109) x1907))
(assert (x5131 115792089237316195423570985008687907853269984665640564039457584007913129639935 x712))
(assert (x5093 x2905))
(assert (x5093 x514))
(assert (= (x3059 24044834009420335638544845215851342251227478490780828673611325350056707489792) (x2147 24044834009420335638544845215851342251227478490780828673611325350056707489792)))
(assert (x5093 x848))
(assert (= (x3059 1313710058) (x2147 1313710058)))
(assert (x4437 x797))
(assert (x1311 x5244))
(assert (x5093 x4245))
(assert (= (and x4399 x1609) x2389))
(assert (x5093 x3456))
(assert (x348 x712))
(assert (x1311 x2043))
(assert (and (x4259 1000000000000000000 x5179) (x887 1000000000000000000 x5179) (x4075 1000000000000000000 x5179) (and (= (x4860 1000000000000000000 (- x5179 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x5179 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x5179) (- (* x5179 1000000000000000000) (* x5179 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x5179 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x5179 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x5179 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x5179) (* x5179 1000000000000000000)) (x2358 1000000000000000000 x5179) (x244 1000000000000000000 x5179)))
(assert (= x2665 (and x1788 x380)))
(assert (x5093 x1542))
(assert (x5093 x4461))
(assert (x5093 x4475))
(assert (= (or x1709 x3922) x418))
(assert (and (x1458 x3001 1000000000000000000) (x1175 x3001 1000000000000000000) (=> (and (> x3001 0) (< 0 1000000000000000000)) (and (> (* (x3658 x3001 1000000000000000000) 1000000000000000000) (- x3001 1000000000000000000)) (<= (* 1000000000000000000 (x3658 x3001 1000000000000000000)) x3001))) (x5235 x3001 1000000000000000000) (x2792 x3001 1000000000000000000)))
(assert (x5093 x2334))
(assert (x4437 x962))
(assert (= (x3311 (x4345 x3587 1)) (+ (x3311 x3587) 1)))
(assert (=> (<= x4594 10000) (= (x2147 x4594) (x3059 x4594))))
(assert (= (and (not x62) x1519) x4728))
(assert (x5093 x5321))
(assert (= (and (not x2056) x5324) x3767))
(assert (= (and x5401 x2750) x243))
(assert (x5093 x5117))
(assert (= x1139 (=> (and (= x4477 0) (= x1229 x3342)) x4402)))
(assert (= x4516 (and x1085 x3995)))
(assert (x1311 x420))
(assert (x5093 x5370))
(assert (and (=> (> 32 0) (= (+ (* (x3658 x1784 32) 32) (x570 x1784 32)) x1784)) (x355 x1784 32) (x3825 x1784 32) (x4162 x1784 32)))
(assert (= (and x3990 x2360) x2786))
(assert (= x228 (and (not x3409) x299)))
(assert (x5093 x620))
(assert (and (=> (> 26959946667150639794667015087019630673637144422540572481103610249216 0) (= (+ (* (x3658 x3996 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) (x570 x3996 26959946667150639794667015087019630673637144422540572481103610249216)) x3996)) (x355 x3996 26959946667150639794667015087019630673637144422540572481103610249216) (x3825 x3996 26959946667150639794667015087019630673637144422540572481103610249216) (x4162 x3996 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x5093 x39))
(assert (x5093 x1300))
(assert (x5093 x4766))
(assert (x5093 x3143))
(assert (=> (>= 10000 x617) (= (x3059 x617) (x2147 x617))))
(assert (= x5382 (and x225 (not x4182))))
(assert (= (or x115 x2251) x3458))
(assert (= (or x2463 x2650 x3466 x687 x741 x1710) x3961))
(assert (= x4311 (and (not x2289) x1836)))
(assert (= x1355 (x3311 (x2147 x1355))))
(assert (= x4729 (and x1391 x4508)))
(assert (= (x3311 (x3059 75483562)) 75483562))
(assert (= x5193 (and x3175 x1607)))
(assert (= (x3311 (x4345 x2868 1)) (+ (x3311 x2868) 1)))
(assert (= x1497 (x3311 (x2147 x1497))))
(assert (x5093 x1363))
(assert (= x198 (and x4993 x1628)))
(assert (x5093 x144))
(assert (=> (<= x5192 10000) (= (x2147 x5192) (x3059 x5192))))
(assert (x5093 x1826))
(assert (= (x2147 242558722) (x3059 242558722)))
(assert (= (and x1991 x5001) x3838))
(assert (x4437 x2889))
(assert (x5093 x2168))
(assert (= (=> (and (= x578 0) (= x33 x2249)) x5158) x4858))
(assert (x5093 x5246))
(assert (= x924 (or x4681 x4155)))
(assert (=> (>= 10000 x5140) (= (x3059 x5140) (x2147 x5140))))
(assert (= (x3311 (x3059 178855970)) 178855970))
(assert (= x666 (=> (and (= x5251 (= x1592 0)) (or x5251 (not x5251))) x4920)))
(assert (x5093 x5201))
(assert (= (and x1096 x3968) x203))
(assert (x5093 x944))
(assert (= (and (not x2847) x5231) x4936))
(assert (= x3854 (and x1501 (not x784))))
(assert (= x4774 (and x1621 x2744)))
(assert (x5093 x3196))
(assert (x5093 x1790))
(assert (= (and (not x3501) x3016) x2814))
(assert (= x3684 (or x1146 x5368)))
(assert (= x4192 (and x4838 (not x2638))))
(assert (= x2127 (and x991 x914)))
(assert (= x4376 x1792))
(assert (= (x3311 (x3059 3583811254)) 3583811254))
(assert (= (=> (and (= x5297 x652) (= x455 x3124)) x1121) x1246))
(assert (x4437 x1202))
(assert (=> (>= 10000 x2908) (= (x2147 x2908) (x3059 x2908))))
(assert (= (and (not x1180) x5019) x2263))
(assert (x1311 x4242))
(assert (x5093 x3821))
(assert (x5093 x4725))
(assert (x5093 x3561))
(assert (= (or x3214 x383 x3731 x672 x4049 x5347) x1754))
(assert (x1311 x2125))
(assert (x1311 x2956))
(assert (= x4737 (and (not x953) x4862)))
(assert (x5093 x2299))
(assert (x5093 x891))
(assert (x5093 x878))
(assert (= x5133 (or x4615 x3257)))
(assert (x5093 x1766))
(assert (= (and x2427 (not x1915)) x4308))
(assert (= (x3059 72570022874062638528011751457397263716769196454539065078543251854057308946432) (x2147 72570022874062638528011751457397263716769196454539065078543251854057308946432)))
(assert (x5093 x4835))
(assert (x3331 x24))
(assert (x3513 x520 (- x1194 x1368)))
(assert (= x914 (or x189 x2841)))
(assert (= x5229 (and x529 x3890)))
(assert (x5093 x3588))
(assert (= x2580 (and x3924 x5329)))
(assert (x5093 x5213))
(assert (x5093 x4522))
(assert (x5093 x4998))
(assert (= x1290 (and x3690 x2946)))
(assert (= x587 (and x2276 (not x2318))))
(assert (= x1456 (and x168 x1380)))
(assert (x5093 x4677))
(assert (= x4789 (and x2640 (not x4314))))
(assert (= (x3311 (x4345 x526 2)) (+ (x3311 x526) 2)))
(assert (x5093 x4015))
(assert (= (=> (and (= x1289 x4094) (= x906 0)) x674) x3805))
(assert (x5093 x768))
(assert (= (x3311 (x3059 1466279372)) 1466279372))
(assert (= x3496 (and (not x4040) x1793)))
(assert (x1311 x4265))
(assert (= x2936 (and (not x1541) x2055)))
(assert (= (or (and x296 x3607) x4064 x2352 x2239 (and x5390 x2462)) x1569))
(assert (= (=> (and (= (= 0 x3022) x2190) (or (and (= (x4345 x2810 2) x404) x2190) (and (not x2190) (= (x2760 (x2147 x3022) x2810 0) x3060)))) x1104) x2098))
(assert (= x5069 (and x3612 (not x1851))))
(assert (x5093 x3309))
(assert (=> (>= 10000 x2849) (= (x3059 x2849) (x2147 x2849))))
(assert (= (and x3412 x4596) x1992))
(assert (= (and x3474 (not x1017)) x1319))
(assert (x2366 x340 x520 x2299 x1368))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x3658 x1184 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x570 x1184 1461501637330902918203684832716283019655932542976)) x1184)) (x355 x1184 1461501637330902918203684832716283019655932542976) (x3825 x1184 1461501637330902918203684832716283019655932542976) (x4162 x1184 1461501637330902918203684832716283019655932542976)))
(assert (= (or x903 x2485) x4227))
(assert (x1311 x1887))
(assert (= x2656 (or (and (not x985) x4981) (and x2693 x4942))))
(assert (x5093 x5379))
(assert (= (and x3494 x2322) x2463))
(assert (x5093 x88))
(assert (x5093 x3755))
(assert (x5093 x5331))
(assert (= (x3311 (x2147 x2601)) x2601))
(assert (x1311 x1825))
(assert (x5093 x970))
(assert (= (and x371 x871) x1336))
(assert (x5093 x5391))
(assert (x5093 x3233))
(assert (= (or x4530 (and (not x2922) x1407)) x2618))
(assert (x3331 x3539))
(assert (= x4241 (and x191 (not x2592))))
(assert (x5093 x3035))
(assert (x5093 x3114))
(assert (x5093 x2005))
(assert (x5093 x3403))
(assert (= (and x4576 x1679) x452))
(assert (= 599290589 (x3311 (x3059 599290589))))
(assert (x5093 x3772))
(assert (= x2118 (x3311 (x2147 x2118))))
(assert (x5093 x4821))
(assert (x5093 x75))
(assert (x5093 x206))
(assert (= (x3311 (x2147 x1720)) x1720))
(assert (= (and x5000 x5026) x3500))
(assert (x5093 x1399))
(assert (= x3423 (=> (and (= x5298 x5011) (= 0 x409)) x230)))
(assert (x5093 x184))
(assert (x5093 x3495))
(assert (x5093 x5062))
(assert (= (or x2208 x543) x1886))
(assert (x5093 x401))
(assert (x5093 x3332))
(assert (= x2851 (and x5349 x4790)))
(assert (= x4557 (and x1913 x3152)))
(assert (x5093 x4504))
(assert (x5093 x4689))
(assert (= (and x2424 x1940) x5025))
(assert (= x4613 (=> (and (or x2610 (not x2610)) (= (= x4628 0) x2610)) x976)))
(assert (= (x3311 (x3059 2691771752)) 2691771752))
(assert (x5093 x356))
(assert (x5093 x1094))
(assert (x5093 x1351))
(assert (x5093 x4185))
(assert (x1311 x730))
(assert (= x5288 (and x2747 x637)))
(assert (= (and (not x5116) x4218) x3441))
(assert (= (and x1559 (not x4014)) x319))
(assert (x5093 x307))
(assert (x1311 x551))
(assert (x3331 (- x2299 x340)))
(assert (= x4233 x5328))
(assert (= (and x3156 x978) x4074))
(assert (x1311 x4586))
(assert (x2366 x2299 x1368 x520 x340))
(assert (= (+ 1 (x3311 x3776)) (x3311 (x4345 x3776 1))))
(assert (x5093 x4857))
(assert (= (and x3209 (not x1109)) x3417))
(assert (x5093 x4129))
(assert (not x3911))
(assert (= x2672 (and x2407 (not x4767))))
(assert (x5093 x4811))
(assert (= x457 (or x3545 x3961)))
(assert (x5093 x4476))
(assert (= x1235 (and (not x3485) x798)))
(assert (x5093 x5012))
(assert (x5093 x3224))
(assert (= x4869 (and x441 (not x4804))))
(assert (x5093 x2159))
(assert (x5093 x791))
(assert (x5093 x4581))
(assert (= (or x1319 x3310) x3073))
(assert (= (x3311 (x2147 x1653)) x1653))
(assert (= (and x3838 (not x221)) x265))
(assert (= x39 (x3311 (x2147 x39))))
(assert (= (x3311 (x2147 x1549)) x1549))
(assert (x5093 x432))
(assert (x5093 x4242))
(assert (x3331 x1194))
(assert (= x429 (or x2633 x3743)))
(assert (= (and x3597 (not x3047)) x4098))
(assert (x5093 x3339))
(assert (x5093 x1553))
(assert (= x3430 (x3311 (x2147 x3430))))
(assert (= (and x4285 x5074) x3791))
(assert (x5093 x5128))
(assert (x5093 x4524))
(assert (= (or x4340 (and x3756 (not x5188))) x946))
(assert (= (and x1097 (not x375)) x3842))
(assert (x5093 x4453))
(assert (= (=> (= x4726 (= 0 x5027)) (and (=> (and (not x4726) (and (= x3328 (x3589 (+ x2272 31))) (= x1779 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x2272) (and (> 32 x2272) (= true (<= x2272 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x4037 (x1025 115792089237316195423570985008687907853269984665640564039457584007913129639904 x3328)) (= (x3589 (+ 452 x4037)) x5391))) (and (=> (and (not x1779) (and (= (x1025 1461501637330902918203684832716283019655932542975 x3089) x464) (= x3089 (x4346 452)) (= (= x3089 x464) x5329))) (and (=> (and (and (= x362 x5391) (= x513 x3089)) x5329) x5148) (=> (and (= x4986 true) (not x5329)) x4001))) (=> (and (= true x4986) x1779) x4001))) (=> x4726 x1172))) x5267))
(assert (x5093 x5174))
(assert (= (and x4508 (not x1391)) x975))
(assert (x5093 x3512))
(assert (= x3317 (and x624 x3715)))
(assert (= x5447 (and (not x2704) x4649)))
(assert (x5093 x722))
(assert (x4437 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (x4783 x154))
(assert (x1311 x2728))
(assert (x5093 x2550))
(assert (= x1637 (=> (and (= x3999 x5010) (= x4717 x2603)) x4388)))
(assert (x5093 x4427))
(assert (x5093 x5384))
(assert (= x1729 x1172))
(assert (= (and x1219 (not x2772)) x1931))
(assert (= (and x1627 (not x3960)) x3121))
(assert (x5093 x3956))
(assert (= x3860 (or x1713 x3078)))
(assert (x5093 x362))
(assert (= x294 (and x1083 x2469)))
(assert (and (x4259 1000000000000000000 x1402) (x887 1000000000000000000 x1402) (x4075 1000000000000000000 x1402) (and (= (x4860 1000000000000000000 (- x1402 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x1402 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x1402) (- (* x1402 1000000000000000000) (* x1402 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x1402 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x1402 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1402 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x1402) (* x1402 1000000000000000000)) (x2358 1000000000000000000 x1402) (x244 1000000000000000000 x1402)))
(assert (= (and x531 (not x1972)) x1269))
(assert (= x3199 (and x4400 x151)))
(assert (=> (<= x1492 10000) (= (x2147 x1492) (x3059 x1492))))
(assert (= (and x4650 x3534) x4878))
(assert (= x5175 (or x218 x1644)))
(assert (= x1197 (or x98 x5431)))
(assert (x5093 x1435))
(assert (= x3612 (and (not x373) x3595)))
(assert (= x5214 (or x2212 x895)))
(assert (x5093 x826))
(assert (x5093 x5449))
(assert (x5093 x211))
(assert (= (=> (and (= 0 x3944) (= x5350 x528)) x1112) x4009))
(assert (x5093 x812))
(assert (x5093 x352))
(assert (= x1037 (and x1629 x1781)))
(assert (x5093 x5419))
(assert (x5093 x1960))
(assert (x5093 x4027))
(assert (= x3931 (and (=> (and x86 (and (or (and x2998 (and (>= x3303 0) (= x5326 (not x2215)) (= x2215 (> x187 x3303)) (= (x3732 x3984) x3303) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x3303) (= x1217 (x2760 (x2147 x1440) x5090 0)) (= x3984 (x4345 x1217 2)))) (and (not x2998) (= x5326 x2998))) (and (>= x1440 0) (= (x4196 x4249) x1440) (= (x2760 (x2147 x1613) x5090 0) x368) (< x1440 1461501637330902918203684832716283019655932542976) (>= 1461501637330902918203684832716283019655932542975 x1440) (= (x4345 x368 1) x4249) (= x2998 (ite (> x4748 1) (not (= x1440 0)) (> x4748 1)))))) x4824) (=> (and (not x86) (and (= x3129 x1613) (= x2666 0))) x5300))))
(assert (= x1101 (and x4241 (not x1708))))
(assert (x5093 x3803))
(assert (x5093 x4297))
(assert (x5093 x1013))
(assert (= x4464 true))
(assert (= x325 (=> (and (= (= 0 x353) x3365) (or x3365 (not x3365))) x5169)))
(assert (= x2081 (and x1918 (not x2013))))
(assert (= x2616 (or x1601 x2219 x1471 x4513 x2489 x580 x916 x2160 x2326)))
(assert (= (or x273 (and (not x3172) x1772) (and x3576 x4781) (and x4550 x2945) x2495 (and (not x4590) x3967)) x1152))
(assert (x348 x2761))
(assert (x5093 x2258))
(assert (x5093 x1823))
(assert (x5093 x1027))
(assert (= x2143 x1304))
(assert (x5093 x2826))
(assert (= (and (not x486) x3290) x898))
(assert (= x2552 (and x4370 (not x2698))))
(assert (= x5240 (and (not x3664) x3063)))
(assert (= (x3311 (x3059 2134560854)) 2134560854))
(assert (= (and x4841 x4938) x3708))
(assert (=> (<= x3159 10000) (= (x2147 x3159) (x3059 x3159))))
(assert (x5093 x272))
(assert (= (or x819 x633) x1189))
(assert (x5093 x1016))
(assert (= (and x1040 (not x4012)) x2529))
(assert (x5093 x3733))
(assert (= (and x4280 x1860) x4019))
(assert (= x2126 (and (not x3141) x4082)))
(assert (x5093 x4859))
(assert (= (or x2113 x1667) x3986))
(assert (x5093 x1088))
(assert (x1311 x3013))
(assert (= (or x2127 x4333) x3678))
(assert (x5093 x2802))
(assert (x5131 x5021 x520))
(assert (=> (>= 10000 x3871) (= (x3059 x3871) (x2147 x3871))))
(assert (x5093 x854))
(assert (x5093 x1603))
(assert (= (and x2562 x2000) x3247))
(assert (x5093 x4025))
(assert (= (=> (and (= x1051 (x2760 (x2147 x4357) x3872 0)) (= (x4345 x1123 1) x2157) (= x284 x4169) (= (x4345 x1051 1) x1123)) x5092) x2198))
(assert (x3331 (- x340 x2299)))
(assert (= x4517 (and (not x89) x4019)))
(assert (x5093 x2173))
(assert (= x4139 (and x2863 (not x3266))))
(assert (x5093 x3374))
(assert (= (and x1127 x4043) x1623))
(assert (x5093 x5393))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= (+ (* (x3658 x3089 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x570 x3089 1461501637330902918203684832716283019655932542976)) x3089)) (x355 x3089 1461501637330902918203684832716283019655932542976) (x3825 x3089 1461501637330902918203684832716283019655932542976) (x4162 x3089 1461501637330902918203684832716283019655932542976)))
(assert (x1311 x2634))
(assert (= (and x256 x2829) x822))
(assert (= x2326 (and x2786 x769)))
(assert (= x462 x4233))
(assert (= (and x3210 x4034) x2139))
(assert (x3513 x1368 (- x2299 x1194)))
(assert (= (and x3199 (not x1765)) x2979))
(assert (= x1050 (and x898 (not x2943))))
(assert (= x998 (or x4455 x3842)))
(assert (= (and (not x1126) x4478) x3))
(assert (x4437 x4921))
(assert (x5093 x2941))
(assert (x5093 x4017))
(assert (x5093 x3923))
(assert (= (x3311 (x4345 x1737 1)) (+ (x3311 x1737) 1)))
(assert (x5093 x2689))
(assert (x5093 x4593))
(assert (=> (>= 10000 x4771) (= (x2147 x4771) (x3059 x4771))))
(assert (x5093 x387))
(assert (= (and x3538 x1119) x4624))
(assert (=> (>= 10000 x1403) (= (x3059 x1403) (x2147 x1403))))
(assert (x348 x328))
(assert (= x933 (=> (and (= x1888 x3749) (= x2394 0)) x359)))
(assert (= (x3311 (x4345 x825 1)) (+ (x3311 x825) 1)))
(assert (x5093 x74))
(assert (x4437 1461501637330902918203684832716283019655932542975))
(assert (x5093 x4968))
(assert (x5093 x3537))
(assert (x5093 x1887))
(assert (= x1087 (and x3053 x237)))
(assert (x5093 x2082))
(assert (=> (>= 10000 x2496) (= (x2147 x2496) (x3059 x2496))))
(assert (= x696 (and x4462 x1178)))
(assert (x5093 x344))
(assert (= x1642 (or x4630 x3441)))
(assert (x5093 x419))
(assert (= (x3311 (x2147 x5432)) x5432))
(assert (= x3954 (and (not x1657) x1487)))
(assert (= x2455 (and x2374 x1922)))
(assert (= x4455 (and x375 x1097)))
(assert (= (and (not x2854) x872) x1782))
(assert (x5093 x4216))
(assert (= (and x650 (not x4769)) x916))
(assert (x5131 115792089237316195423570985008687907853269984665640564039457584007913129639935 x340))
(assert (x5093 x1232))
(assert (= (x3311 (x4345 x1528 1)) (+ 1 (x3311 x1528))))
(assert (= x1710 (and (not x3740) x1649)))
(assert (x5093 x3275))
(assert (= (and x2427 x1915) x4060))
(assert (x5093 x1183))
(assert (x5093 x728))
(assert (= x5420 (and (not x5081) x2475)))
(assert (x5093 x1847))
(assert (= (x3311 (x2147 x3802)) x3802))
(assert (= x1594 (=> (= x4986 true) x4001)))
(assert (= (=> (= (= x2897 x1307) x1380) (and (=> (and x1380 (= x1507 x4591)) x4460) (=> (and (not x1380) (= (< 0 x1307) x1732)) (and (=> (and x1732 (and (= (x4345 x2965 1) x1505) (<= x2043 1461501637330902918203684832716283019655932542975) (= (x3589 (+ 96 x4591)) x4169) (= (x2712 x2965) x1227) (= x2965 (x2760 (x2147 x4357) x3872 0)) (= x2043 (x3856 x1505)) (<= x695 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (= 0 x695) x4738) (>= x1227 0) (= (x4345 x1505 1) x1430) (>= 1461501637330902918203684832716283019655932542975 x1227) (>= x695 0) (> 1461501637330902918203684832716283019655932542976 x1227) (> 1461501637330902918203684832716283019655932542976 x2043) (= x695 (x3627 x1430)) (<= 0 x2043))) (and (=> (and (and (= (= 0 x1227) x3688) (or (and x3688 (= x3885 (x4345 x3872 1))) (and (not x3688) (and (= x4764 (x2760 (x2147 x1227) x3872 0)) (= (x4345 x4764 1) x2681))))) (not x4738)) x1439) (=> x4738 x2291))) (=> (and (not x1732) (= x4591 x284)) x5092))))) x1534))
(assert (= (and x1782 (not x1898)) x978))
(assert (= (and (not x5137) x3318) x1397))
(assert (x5093 x3936))
(assert (= x1389 (or x67 x2487)))
(assert (=> (>= 10000 x4581) (= (x2147 x4581) (x3059 x4581))))
(assert (= x1936 (=> (= (= x2858 x266) x3987) (and (=> x3987 x2539) (=> (and (not x3987) (= x7 (< 0 x2858))) (and (=> (and x7 (and (>= 1461501637330902918203684832716283019655932542975 x5376) (>= x4656 0) (<= x2244 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x5376 1461501637330902918203684832716283019655932542976) (= x5376 (x2800 x2442)) (= (x2760 (x2147 x2682) x1711 0) x3411) (= (x3024 x3411) x4656) (= (x2680 x3149) x2244) (> 1461501637330902918203684832716283019655932542976 x4656) (= (= 0 x2244) x1244) (= (x4345 x2442 1) x3149) (>= 1461501637330902918203684832716283019655932542975 x4656) (= x2442 (x4345 x3411 1)) (>= x5376 0) (<= 0 x2244))) (and (=> x1244 x2291) (=> (and (not x1244) (and (or (and x3820 (= x3449 (x4345 x1711 1))) (and (and (= x298 (x4345 x5423 1)) (= x5423 (x2760 (x2147 x4656) x1711 0))) (not x3820))) (= x3820 (= x4656 0)))) x364))) (=> (not x7) x1503)))))))
(assert (= x1536 (and x59 x1854)))
(assert (= (x3311 (x4345 x5346 1)) (+ (x3311 x5346) 1)))
(assert (x5093 x4219))
(assert (= (and (not x4629) x5424) x1028))
(assert (= x230 (=> (and (= x5298 x379) (= x409 x3519)) x4343)))
(assert (= x5060 (and x842 (not x367))))
(assert (= (and (not x4549) x4941) x532))
(assert (= (and x2658 (not x3832)) x2476))
(assert (x5093 x712))
(assert (= (x3311 (x2147 x2988)) x2988))
(assert (x5093 x1001))
(assert (x5093 x4382))
(assert (x5093 x3139))
(assert (x5093 x2070))
(assert (= x4093 (x3311 (x2147 x4093))))
(assert (= (and (not x1043) x3620) x4257))
(assert (x5131 115792089237316195423570985008687907853269984665640564039457584007913129639935 x328))
(assert (= x2182 (=> (= x2464 (= 0 x3357)) (and (=> (and (= x4442 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4450) true) (> 32 x4450)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x4450))) (not x2464)) (and (=> (and x4442 (= x4742 x3034)) x2240) (=> (and (not x4442) (and (= x4028 x3034) (= 32 x1399) (= x5378 1))) x5041))) (=> (and x2464 (= x3034 x4742)) x2240)))))
(assert (x5093 x1820))
(assert (x5093 x1398))
(assert (x5093 x5098))
(assert (= (or x2141 (and (not x4451) x3174)) x2848))
(assert (x5093 x4635))
(assert (x5093 x1507))
(assert (x5093 x513))
(assert (x5093 x5196))
(assert (x5093 x2450))
(assert (x3513 x2299 x1368))
(assert (and (x4259 1000000000000000000 x712) (x887 1000000000000000000 x712) (x4075 1000000000000000000 x712) (and (= (x4860 1000000000000000000 (- x712 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 1000000000000000000 (- x712 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) x712) (- (* x712 1000000000000000000) (* x712 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x4860 (- 115792089237316195423570985008687907853269984665640564039456584007913129639936) (- x712 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* 1000000000000000000 (- x712 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x712 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (x4860 1000000000000000000 x712) (* x712 1000000000000000000)) (x2358 1000000000000000000 x712) (x244 1000000000000000000 x712)))
(assert (= (x3311 (x3059 1857877511)) 1857877511))
(assert (= x4180 (and x461 x4201)))
(assert (= (and x59 (not x1854)) x1245))
(assert (= x441 (and x4121 x384)))
(assert (x5093 x4290))
(assert (= (or x1543 x5194) x2841))
(assert (x5093 x196))
(assert (= x5139 (or x4643 x4493)))
(assert (x5093 x5405))
(assert (= x1704 (and x5260 (not x4961))))
(assert (x1311 x4601))
(assert (x5093 x1985))
(assert (= (and x772 x1041) x2054))
(assert (= (and x587 (not x280)) x4803))
(assert (x5093 x835))
(assert (x5093 x1194))
(assert (x5093 x2281))
(assert (x5093 x1390))
(assert (=> (>= 10000 x2178) (= (x2147 x2178) (x3059 x2178))))
(assert (= x851 (or x2663 x1560)))
(assert (= x3378 (and x3841 x202)))
(assert (= (x3311 (x4345 x4055 1)) (+ 1 (x3311 x4055))))
(assert (=> (>= 10000 x1369) (= (x2147 x1369) (x3059 x1369))))
(assert (x348 x4522))
(assert (= (and x1298 x590) x2387))
(assert (= x209 (and x1207 (not x2434))))
(assert (= x3666 (and x3016 x3501)))
(assert (x5093 x2953))
(assert (= (and x4603 x4830) x2361))
(assert (= x3123 (and (not x5209) x2296)))
(assert (= (+ (x3311 x5099) 1) (x3311 (x4345 x5099 1))))
(assert (x5093 x1192))
(assert (x5093 x814))
(assert (x5093 x3144))
(assert (= x755 (and x3608 (not x3111))))
(assert (= x640 (or x1962 x3860)))
(assert (x479 x2889))
(assert (x5093 x943))
(assert (= (and x5205 x320) x3380))
(assert (x5093 x1167))
(assert (x5093 x965))
(assert (= x3605 (and x661 (not x1545))))
(assert (x5093 x4063))
(assert (= x3969 (=> (and (= x3267 x2969) (= x1897 x5315) (= x3115 x4101) (= x1951 x596)) x2415)))
(assert (=> (>= 10000 x4265) (= (x3059 x4265) (x2147 x4265))))
(assert (x5093 x2397))
(assert (= x4892 (=> (and (= x2341 x4450) (= x2692 x3357)) x2236)))
(assert (= x337 (=> (and (or (and (not x3968) (= (x2760 (x2147 x3233) x1117 0) x4176)) (and (= (x4345 x1117 2) x959) x3968)) (= (= x3233 0) x3968)) x2902)))
(assert (x5093 x3944))
(assert (=> (>= 10000 x1318) (= (x2147 x1318) (x3059 x1318))))
(assert (= x2380 (or x1089 x1776)))
(assert (x5093 x2780))
(assert (= x900 (and x3004 (not x3488))))
(assert (x5093 x1222))
(assert (= x4784 (and (not x4987) x4619)))
(assert (= x4786 (x3311 (x2147 x4786))))
(assert (= x1420 (or (and x3499 (not x2403)) x834 x1091 (and x3875 (not x5242)) (and x1856 x3101) (and x4195 x1703))))
(assert (= (=> (and (= x701 x2419) (= x4628 x4129)) x4613) x2524))
(assert (x5093 x3160))
(assert (= (and x441 x4804) x5253))
(assert (= (=> (and (= x3799 x379) (= x194 x3519)) x4343) x1909))
(assert (x5093 x3408))
(assert (x5093 x844))
(assert (= (x3311 (x3059 10936679508223583803006762266923565500374401145016910147028117655998246682624)) 10936679508223583803006762266923565500374401145016910147028117655998246682624))
(assert (= (+ (x3311 x5439) 1) (x3311 (x4345 x5439 1))))
(assert (x5093 x686))
(assert (x5093 x3528))
(assert (= 117300739 (x3311 (x3059 117300739))))
(assert (= (or x3262 (and x1561 (not x780))) x4623))
(assert (x5093 x3763))
(assert (x5093 x676))
(assert (= x4873 (and x294 (not x2832))))
(assert (x5093 x2122))
(assert (x5093 x2647))
(assert (x5093 x4278))
(assert (= (+ (x3311 x4992) 1) (x3311 (x4345 x4992 1))))
(assert (= x1471 (and x3612 x1851)))
(assert (x5093 x3345))
(assert (= (and x3926 x4867) x4820))
(assert (x5093 x4646))
(assert (x5093 x647))
(assert (x5093 x1130))
(assert (= x2446 (and x4960 x4937)))
(assert (x5093 x2492))
(assert (x5093 x2862))
(assert (= (and x4013 x128) x2518))
(assert (= x3765 (and x1768 x2493)))
(assert (x4437 x4230))
(check-sat)
(exit)
