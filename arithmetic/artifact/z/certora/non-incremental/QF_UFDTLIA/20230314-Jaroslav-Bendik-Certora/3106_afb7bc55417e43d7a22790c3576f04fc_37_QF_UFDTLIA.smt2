(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x567 0)) (((x202 (x100 Int)) (x1269 (x597 x567) (x609 x567) (x421 x567) (x3 x567) (x10 Int)) (x137 (x158 x567) (x1362 Int)) (x1338 (x394 x567) (x754 x567) (x1368 Int)))))
(declare-fun x483 () x567)
(declare-fun x116 () Int)
(declare-fun x787 () Int)
(declare-fun x199 () Bool)
(declare-fun x1043 () Int)
(declare-fun x1074 () Int)
(declare-fun x188 () Int)
(declare-fun x545 () Int)
(declare-fun x195 () Int)
(declare-fun x1088 () Bool)
(declare-fun x504 () Bool)
(declare-fun x1203 () x567)
(declare-fun x524 () Int)
(declare-fun x261 () Bool)
(declare-fun x1394 () Bool)
(declare-fun x942 () Bool)
(declare-fun x1302 () Int)
(declare-fun x1202 () Bool)
(declare-fun x1294 () Bool)
(declare-fun x218 () Int)
(declare-fun x482 () Bool)
(declare-fun x505 () Int)
(declare-fun x65 () Int)
(declare-fun x1229 () Int)
(declare-fun x786 () x567)
(declare-fun x729 () Int)
(declare-fun x583 () x567)
(declare-fun x1035 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x49 () Bool)
(declare-fun x1432 () Bool)
(declare-fun x1473 () x567)
(declare-fun x890 () Int)
(declare-fun x645 () Int)
(declare-fun x242 () Bool)
(declare-fun x24 () Bool)
(declare-fun x1167 () Int)
(declare-fun x96 () Int)
(declare-fun x730 () Int)
(declare-fun x1393 () Int)
(declare-fun x36 () Int)
(declare-fun x33 () Bool)
(declare-fun x103 () Int)
(declare-fun x1242 () Int)
(declare-fun x697 () Bool)
(declare-fun x1214 () Bool)
(declare-fun x345 () Int)
(declare-fun x1206 () Int)
(declare-fun x1429 () Int)
(declare-fun x832 () Bool)
(declare-fun x424 () x567)
(declare-fun x1182 () Int)
(declare-fun x152 () Bool)
(declare-fun x95 () Int)
(declare-fun x1225 () Int)
(declare-fun x104 (Int) Int)
(declare-fun x201 () x567)
(declare-fun x1418 () Bool)
(declare-fun x469 () Bool)
(declare-fun x1447 () Bool)
(declare-fun x498 () Int)
(declare-fun x943 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x377 () Bool)
(declare-fun x236 () Int)
(declare-fun x910 () Int)
(declare-fun x441 () Bool)
(declare-fun x446 () Int)
(declare-fun x767 () Bool)
(declare-fun x295 () Int)
(declare-fun x1204 () Bool)
(declare-fun x317 () Bool)
(declare-fun x68 () Int)
(declare-fun x315 () Int)
(declare-fun x516 () x567)
(declare-fun x89 () Int)
(declare-fun x738 () Int)
(declare-fun x464 () Bool)
(declare-fun x468 () Int)
(declare-fun x128 () Bool)
(declare-fun x1278 () Int)
(declare-fun x669 () Bool)
(declare-fun x124 (Int) Int)
(declare-fun x1103 () Bool)
(declare-fun x1000 () Int)
(declare-fun x590 () Int)
(declare-fun x535 () Bool)
(declare-fun x420 () Int)
(declare-fun x887 () x567)
(declare-fun x185 () Bool)
(declare-fun x778 () Int)
(declare-fun x648 () Int)
(declare-fun x433 () Bool)
(declare-fun x986 (Int Int) Int)
(declare-fun x1372 () x567)
(declare-fun x166 () Bool)
(declare-fun x228 () Int)
(declare-fun x5 () Int)
(declare-fun x655 () Int)
(declare-fun x38 () Int)
(declare-fun x1323 () Bool)
(declare-fun x1183 () Bool)
(declare-fun x467 () Bool)
(declare-fun x1026 () Int)
(declare-fun x798 () Int)
(declare-fun x26 () Bool)
(declare-fun x700 () Int)
(declare-fun x6 (Int) Int)
(declare-fun x865 () Int)
(declare-fun x824 () x567)
(declare-fun x1055 () Int)
(declare-fun x1433 (Int) Int)
(declare-fun x191 (Int Int) Int)
(declare-fun x998 () x567)
(declare-fun x106 () Bool)
(declare-fun x1108 () Int)
(declare-fun x42 () Int)
(declare-fun x1495 () Int)
(declare-fun x658 () Bool)
(declare-fun x706 () Bool)
(declare-fun x344 () Bool)
(declare-fun x121 () Int)
(declare-fun x1063 () Bool)
(declare-fun x937 () Bool)
(declare-fun x457 () Int)
(declare-fun x1306 () Int)
(declare-fun x785 () Int)
(declare-fun x328 () Bool)
(declare-fun x812 () Int)
(declare-fun x1307 () Int)
(declare-fun x1454 () Int)
(declare-fun x320 () Int)
(declare-fun x1 () Bool)
(declare-fun x1264 () Bool)
(declare-fun x1342 () Int)
(declare-fun x439 () Bool)
(declare-fun x925 () Bool)
(declare-fun x558 () Int)
(declare-fun x226 () Int)
(declare-fun x961 () Int)
(declare-fun x187 () Bool)
(declare-fun x1389 (Int Int) Int)
(declare-fun x434 () Bool)
(declare-fun x1111 () Int)
(declare-fun x310 () Bool)
(declare-fun x1424 () Int)
(declare-fun x1271 () Bool)
(declare-fun x1234 () Int)
(declare-fun x324 () Int)
(declare-fun x1217 () Int)
(declare-fun x1497 () Int)
(declare-fun x605 () Int)
(declare-fun x1248 () Int)
(declare-fun x364 () x567)
(declare-fun x169 (Int) Int)
(declare-fun x363 () Bool)
(declare-fun x418 () Bool)
(declare-fun x32 () x567)
(declare-fun x732 () Int)
(declare-fun x1371 () Int)
(declare-fun x1018 () Int)
(declare-fun x811 () Bool)
(declare-fun x7 () Int)
(declare-fun x981 () Int)
(declare-fun x256 () Int)
(declare-fun x1388 (Int) Int)
(declare-fun x884 () Bool)
(declare-fun x1399 () Int)
(declare-fun x594 () Int)
(declare-fun x1508 (Int Int) Int)
(declare-fun x566 () Bool)
(declare-fun x572 () Int)
(declare-fun x1143 () Int)
(declare-fun x675 () Bool)
(declare-fun x983 () Bool)
(declare-fun x1221 () Int)
(declare-fun x598 () x567)
(declare-fun x1384 () Int)
(declare-fun x1158 () x567)
(declare-fun x940 () Int)
(declare-fun x718 () Bool)
(declare-fun x1089 () Bool)
(declare-fun x900 (Int) Int)
(declare-fun x837 () Bool)
(declare-fun x599 () Int)
(declare-fun x1240 () Int)
(declare-fun x829 () Bool)
(declare-fun x253 () Int)
(declare-fun x1472 () Bool)
(declare-fun x717 () Int)
(declare-fun x410 () Int)
(declare-fun x57 () Int)
(declare-fun x691 () Int)
(declare-fun x1268 (Int) Int)
(declare-fun x830 () Bool)
(declare-fun x280 () Bool)
(declare-fun x209 () x567)
(declare-fun x596 () Int)
(declare-fun x748 () Int)
(declare-fun x1416 () Bool)
(declare-fun x254 () x567)
(declare-fun x822 () Int)
(declare-fun x1071 () x567)
(declare-fun x615 () Bool)
(declare-fun x12 () Bool)
(declare-fun x562 () Int)
(declare-fun x564 () Int)
(declare-fun x1015 () Bool)
(declare-fun x211 () Bool)
(declare-fun x676 () Bool)
(declare-fun x1320 () Bool)
(declare-fun x1312 () Int)
(declare-fun x1378 () Int)
(declare-fun x58 () Int)
(declare-fun x1050 () Int)
(declare-fun x1038 () x567)
(declare-fun x1128 () Bool)
(declare-fun x1356 () Bool)
(declare-fun x376 () Int)
(declare-fun x402 () Int)
(declare-fun x1222 () Bool)
(declare-fun x755 () Int)
(declare-fun x386 () Int)
(declare-fun x637 () Int)
(declare-fun x110 () Int)
(declare-fun x995 () Bool)
(declare-fun x1387 () x567)
(declare-fun x107 () Int)
(declare-fun x779 () Bool)
(declare-fun x1252 () Bool)
(declare-fun x1308 () Int)
(declare-fun x1406 () Int)
(declare-fun x73 () Int)
(declare-fun x1325 () Bool)
(declare-fun x1503 () Int)
(declare-fun x991 () Bool)
(declare-fun x414 () Int)
(declare-fun x819 () x567)
(declare-fun x244 () Int)
(declare-fun x1241 () x567)
(declare-fun x98 () Int)
(declare-fun x1292 () Bool)
(declare-fun x367 () Int)
(declare-fun x488 () Bool)
(declare-fun x788 (Int) Int)
(declare-fun x792 () Int)
(declare-fun x922 () Bool)
(declare-fun x1045 () x567)
(declare-fun x438 () Int)
(declare-fun x148 () Bool)
(declare-fun x114 () Int)
(declare-fun x1436 () Bool)
(declare-fun x422 () Int)
(declare-fun x550 (x567) Int)
(declare-fun x791 () Bool)
(declare-fun x164 () Int)
(declare-fun x1505 () Int)
(declare-fun x501 () Bool)
(declare-fun x519 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x1099 () Int)
(declare-fun x1112 () Int)
(declare-fun x470 () Int)
(declare-fun x1016 () Bool)
(declare-fun x44 () Int)
(declare-fun x1141 () x567)
(declare-fun x1148 () Bool)
(declare-fun x941 () Bool)
(declare-fun x1313 () Bool)
(declare-fun x1189 () Bool)
(declare-fun x585 () Bool)
(declare-fun x1272 () Int)
(declare-fun x920 () Int)
(declare-fun x70 () x567)
(declare-fun x400 () Int)
(declare-fun x472 () Int)
(declare-fun x606 () x567)
(declare-fun x300 (x567) Int)
(declare-fun x478 () Int)
(declare-fun x996 () Bool)
(declare-fun x661 () Bool)
(declare-fun x1481 () Int)
(declare-fun x197 (Int) Int)
(declare-fun x306 () Int)
(declare-fun x531 () Bool)
(declare-fun x1152 () Bool)
(declare-fun x442 () Int)
(declare-fun x618 () Int)
(declare-fun x958 () Int)
(declare-fun x1345 () Int)
(declare-fun x577 () Int)
(declare-fun x757 () Bool)
(declare-fun x603 () Int)
(declare-fun x461 () Bool)
(declare-fun x939 () x567)
(declare-fun x1520 () Bool)
(declare-fun x895 (Int) Int)
(declare-fun x880 () Int)
(declare-fun x1224 () Bool)
(declare-fun x224 () Bool)
(declare-fun x509 () Int)
(declare-fun x740 () Bool)
(declare-fun x15 () Bool)
(declare-fun x1124 () x567)
(declare-fun x1487 (Int) Int)
(declare-fun x1408 () Bool)
(declare-fun x677 () Bool)
(declare-fun x78 () Bool)
(declare-fun x871 () Bool)
(declare-fun x1285 () Int)
(declare-fun x1486 () Bool)
(declare-fun x919 () Bool)
(declare-fun x813 () Int)
(declare-fun x1316 () Int)
(declare-fun x1064 () Int)
(declare-fun x1444 () Int)
(declare-fun x1032 () Int)
(declare-fun x1367 () Int)
(declare-fun x873 () x567)
(declare-fun x1502 () Int)
(declare-fun x668 () x567)
(declare-fun x1115 () Int)
(declare-fun x875 () Bool)
(declare-fun x696 () Int)
(declare-fun x1072 () Bool)
(declare-fun x842 () Int)
(declare-fun x877 () Int)
(declare-fun x1398 () Bool)
(declare-fun x1331 () Int)
(declare-fun x1199 () Bool)
(declare-fun x820 () Int)
(declare-fun x1439 (Int) Int)
(declare-fun x1129 () Int)
(declare-fun x115 () Int)
(declare-fun x205 () x567)
(declare-fun x1109 () Int)
(declare-fun x614 () Int)
(declare-fun x542 () Int)
(declare-fun x1456 () Int)
(declare-fun x135 () Bool)
(declare-fun x87 () Bool)
(declare-fun x1017 () Bool)
(declare-fun x427 () Int)
(declare-fun x647 () Int)
(declare-fun x206 () Int)
(declare-fun x945 () Bool)
(declare-fun x1475 () Int)
(declare-fun x99 () Int)
(declare-fun x368 () Bool)
(declare-fun x639 () Bool)
(declare-fun x1083 () Int)
(declare-fun x157 () Bool)
(declare-fun x976 () Bool)
(declare-fun x279 () Int)
(declare-fun x814 () Int)
(declare-fun x570 () Int)
(declare-fun x161 () Int)
(declare-fun x283 () Int)
(declare-fun x214 () Int)
(declare-fun x352 () Int)
(declare-fun x1052 () Int)
(declare-fun x204 () Int)
(declare-fun x845 () Int)
(declare-fun x835 () Int)
(declare-fun x1379 () x567)
(declare-fun x388 () Int)
(declare-fun x29 () Bool)
(declare-fun x200 () Bool)
(declare-fun x584 () Bool)
(declare-fun x502 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x156 () Int)
(declare-fun x63 () Int)
(declare-fun x134 () Int)
(declare-fun x782 () Bool)
(declare-fun x41 () Int)
(declare-fun x807 () Bool)
(declare-fun x1363 () Int)
(declare-fun x616 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x476 () Bool)
(declare-fun x621 () Bool)
(declare-fun x346 () Bool)
(declare-fun x886 () Int)
(declare-fun x359 () Int)
(declare-fun x1421 () Int)
(declare-fun x1319 () Int)
(declare-fun x1438 () Int)
(declare-fun x969 () Bool)
(declare-fun x330 () Int)
(declare-fun x231 () Int)
(declare-fun x1230 () Bool)
(declare-fun x1091 () Int)
(declare-fun x698 () Int)
(declare-fun x213 () Bool)
(declare-fun x882 () Bool)
(declare-fun x631 (x567) Int)
(declare-fun x849 () Bool)
(declare-fun x964 () Bool)
(declare-fun x357 () Bool)
(declare-fun x761 () Bool)
(declare-fun x1232 () Int)
(declare-fun x276 () Int)
(declare-fun x853 () Int)
(declare-fun x289 () Int)
(declare-fun x234 () Int)
(declare-fun x1220 () Bool)
(declare-fun x45 () Int)
(declare-fun x1510 () Int)
(declare-fun x66 () Int)
(declare-fun x1440 () Bool)
(declare-fun x744 () x567)
(declare-fun x1340 () Bool)
(declare-fun x272 () Int)
(declare-fun x62 () x567)
(declare-fun x1176 () Int)
(declare-fun x1373 () Bool)
(declare-fun x67 () Int)
(declare-fun x1073 () Bool)
(declare-fun x653 () Bool)
(declare-fun x1139 () Int)
(declare-fun x592 () Int)
(declare-fun x521 () Int)
(declare-fun x1518 () Int)
(declare-fun x146 () Int)
(declare-fun x1403 () Bool)
(declare-fun x93 () Bool)
(declare-fun x804 () Int)
(declare-fun x797 () Int)
(declare-fun x859 () Bool)
(declare-fun x1485 () Bool)
(declare-fun x301 () Int)
(declare-fun x322 () Bool)
(declare-fun x1096 () Bool)
(declare-fun x726 () Int)
(declare-fun x1291 () Bool)
(declare-fun x408 () Int)
(declare-fun x1011 () Int)
(declare-fun x1236 () Int)
(declare-fun x673 () Int)
(declare-fun x576 () Bool)
(declare-fun x473 () x567)
(declare-fun x805 () Int)
(declare-fun x556 () Int)
(declare-fun x1317 () Bool)
(declare-fun x720 () x567)
(declare-fun x665 () Bool)
(declare-fun x1057 () x567)
(declare-fun x881 () Bool)
(declare-fun x560 () Bool)
(declare-fun x1101 () Int)
(declare-fun x770 () Bool)
(declare-fun x689 () Bool)
(declare-fun x1386 () Int)
(declare-fun x429 () Bool)
(declare-fun x948 () Bool)
(declare-fun x304 () Int)
(declare-fun x120 () Int)
(declare-fun x1227 () x567)
(declare-fun x1082 () Bool)
(declare-fun x216 () Int)
(declare-fun x1351 () Int)
(declare-fun x233 () Int)
(declare-fun x565 () Bool)
(declare-fun x537 () Int)
(declare-fun x921 () Int)
(declare-fun x282 () Int)
(declare-fun x450 () Int)
(declare-fun x485 () Int)
(declare-fun x581 () Int)
(declare-fun x912 () Int)
(declare-fun x751 () Int)
(declare-fun x1070 (Int) Int)
(declare-fun x1324 () x567)
(declare-fun x1239 () x567)
(declare-fun x250 () Int)
(declare-fun x568 () Bool)
(declare-fun x266 () Bool)
(declare-fun x1155 () x567)
(declare-fun x903 () Bool)
(declare-fun x610 () Int)
(declare-fun x1187 () Bool)
(declare-fun x366 () Bool)
(declare-fun x175 () Int)
(declare-fun x999 () Int)
(declare-fun x1135 () Int)
(declare-fun x55 () Int)
(declare-fun x801 () Bool)
(declare-fun x857 () Int)
(declare-fun x980 () Bool)
(declare-fun x382 () x567)
(declare-fun x1138 () x567)
(declare-fun x383 () Int)
(declare-fun x768 () Int)
(declare-fun x1326 () Int)
(declare-fun x514 () Int)
(declare-fun x1303 () Bool)
(declare-fun x1469 () Int)
(declare-fun x466 () Int)
(declare-fun x219 () x567)
(declare-fun x225 (Int) Int)
(declare-fun x783 () Int)
(declare-fun x1009 () Bool)
(declare-fun x1178 () Int)
(declare-fun x860 () Int)
(declare-fun x491 () Int)
(declare-fun x552 () Bool)
(declare-fun x149 () Bool)
(declare-fun x918 () x567)
(declare-fun x898 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x163 () Int)
(declare-fun x81 () Bool)
(declare-fun x1296 () Int)
(declare-fun x741 () Bool)
(declare-fun x1427 () Int)
(declare-fun x932 () Int)
(declare-fun x1159 () Bool)
(declare-fun x417 () x567)
(declare-fun x745 () Int)
(declare-fun x885 () Int)
(declare-fun x861 () Bool)
(declare-fun x957 () Int)
(declare-fun x389 () Int)
(declare-fun x997 () Int)
(declare-fun x1085 () Bool)
(declare-fun x1172 () Bool)
(declare-fun x538 () Int)
(declare-fun x291 () Bool)
(declare-fun x582 () Int)
(declare-fun x1466 () x567)
(declare-fun x1337 () Int)
(declare-fun x365 () Bool)
(declare-fun x1031 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x1186 () Int)
(declare-fun x1084 () Int)
(declare-fun x680 () Int)
(declare-fun x930 () Bool)
(declare-fun x221 (Int Int Int Int) Int)
(declare-fun x1106 () x567)
(declare-fun x160 () Int)
(declare-fun x776 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x1370 () Bool)
(declare-fun x170 () Int)
(declare-fun x1149 () Int)
(declare-fun x632 () Int)
(declare-fun x1519 () Int)
(declare-fun x1397 () Int)
(declare-fun x1420 () Int)
(declare-fun x1376 () Int)
(declare-fun x448 () Int)
(declare-fun x1492 () Int)
(declare-fun x1213 () Bool)
(declare-fun x21 () Bool)
(declare-fun x896 () Bool)
(declare-fun x353 () Bool)
(declare-fun x318 () Int)
(declare-fun x2 () Int)
(declare-fun x1123 () Int)
(declare-fun x412 () Int)
(declare-fun x112 () Int)
(declare-fun x1453 () Int)
(declare-fun x1361 () Bool)
(declare-fun x1087 () Bool)
(declare-fun x790 () Bool)
(declare-fun x1105 () Bool)
(declare-fun x1484 () Int)
(declare-fun x190 () Bool)
(declare-fun x1461 () Bool)
(declare-fun x839 () Int)
(declare-fun x923 () Int)
(declare-fun x657 () Int)
(declare-fun x701 () Int)
(declare-fun x354 () Bool)
(declare-fun x874 () Bool)
(declare-fun x825 () Int)
(declare-fun x627 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x809 () Bool)
(declare-fun x503 () Int)
(declare-fun x1274 () Int)
(declare-fun x411 () Bool)
(declare-fun x14 () Int)
(declare-fun x288 () Bool)
(declare-fun x1094 () Bool)
(declare-fun x1237 () Bool)
(declare-fun x607 () Int)
(declare-fun x497 () Bool)
(declare-fun x340 () Bool)
(declare-fun x1455 () Int)
(declare-fun x1383 () Bool)
(declare-fun x938 () Int)
(declare-fun x265 () Bool)
(declare-fun x759 () x567)
(declare-fun x1349 () Int)
(declare-fun x625 () Int)
(declare-fun x297 () Int)
(declare-fun x762 (Int) Int)
(declare-fun x1049 () Int)
(declare-fun x444 () Bool)
(declare-fun x293 () Bool)
(declare-fun x1215 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x551 () Int)
(declare-fun x454 () Bool)
(declare-fun x459 () Bool)
(declare-fun x167 (Int) Int)
(declare-fun x8 () Int)
(declare-fun x864 (x567) Int)
(declare-fun x876 () x567)
(declare-fun x118 () Int)
(declare-fun x828 () Int)
(declare-fun x527 () Bool)
(declare-fun x1180 () Int)
(declare-fun x780 () Int)
(declare-fun x154 () Int)
(declare-fun x1452 () x567)
(declare-fun x1463 () Int)
(declare-fun x989 () Int)
(declare-fun x659 () Int)
(declare-fun x20 () Int)
(declare-fun x64 () Int)
(declare-fun x1401 () Int)
(declare-fun x171 () Int)
(declare-fun x1346 () Int)
(declare-fun x176 (Int) Int)
(declare-fun x1321 () Bool)
(declare-fun x1179 (Int Int) Int)
(declare-fun x1154 () Int)
(declare-fun x826 () Int)
(declare-fun x752 () Bool)
(declare-fun x660 () Int)
(declare-fun x1293 () Bool)
(declare-fun x850 () Int)
(declare-fun x17 () Bool)
(declare-fun x9 () Bool)
(declare-fun x492 () Int)
(declare-fun x1044 () Int)
(declare-fun x123 () Bool)
(declare-fun x392 () Int)
(declare-fun x47 () Int)
(declare-fun x230 () Bool)
(declare-fun x587 () Int)
(declare-fun x1414 () Int)
(declare-fun x927 () Bool)
(declare-fun x1022 (Int) Int)
(declare-fun x1441 () Int)
(declare-fun x97 () Int)
(declare-fun x94 () Int)
(declare-fun x773 () Int)
(declare-fun x71 () x567)
(declare-fun x480 () Int)
(declare-fun x409 () Int)
(declare-fun x1491 () Bool)
(declare-fun x1195 () Int)
(declare-fun x1131 () Int)
(declare-fun x374 () Int)
(declare-fun x1391 () Int)
(declare-fun x1280 () Int)
(declare-fun x74 () Bool)
(declare-fun x973 () Bool)
(declare-fun x314 () Int)
(declare-fun x138 () Bool)
(declare-fun x35 () x567)
(declare-fun x870 () Int)
(declare-fun x1161 () Int)
(declare-fun x1490 () Int)
(declare-fun x361 () Int)
(declare-fun x182 () Int)
(declare-fun x952 () Int)
(declare-fun x1216 () Bool)
(declare-fun x693 () Bool)
(declare-fun x263 () Bool)
(declare-fun x326 () Int)
(declare-fun x1460 () Int)
(declare-fun x844 () Bool)
(declare-fun x1333 () Int)
(declare-fun x1039 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x471 () Int)
(declare-fun x84 () Bool)
(declare-fun x510 () Bool)
(declare-fun x924 () Int)
(declare-fun x143 () Bool)
(declare-fun x1504 () Bool)
(declare-fun x1107 () Int)
(declare-fun x296 () Int)
(declare-fun x252 () Bool)
(declare-fun x1435 () Bool)
(declare-fun x1029 () Int)
(declare-fun x911 () Int)
(declare-fun x1243 () Int)
(declare-fun x1118 () x567)
(declare-fun x144 () Int)
(declare-fun x113 () Int)
(declare-fun x838 () Int)
(declare-fun x905 () x567)
(declare-fun x548 () Int)
(declare-fun x695 () Int)
(declare-fun x1266 (x567) Int)
(declare-fun x656 () Int)
(declare-fun x305 () Int)
(declare-fun x277 () Int)
(declare-fun x1516 () Bool)
(declare-fun x827 () Bool)
(declare-fun x646 () Int)
(declare-fun x189 () Bool)
(declare-fun x843 () Bool)
(declare-fun x713 () Bool)
(declare-fun x1048 () Int)
(declare-fun x145 () Int)
(declare-fun x848 () Bool)
(declare-fun x34 () Bool)
(declare-fun x1494 () Int)
(declare-fun x415 (Int) Int)
(declare-fun x262 () Int)
(declare-fun x227 () Int)
(declare-fun x760 () Int)
(declare-fun x1298 () Int)
(declare-fun x172 () Bool)
(declare-fun x846 () Bool)
(declare-fun x462 () Int)
(declare-fun x1507 () Bool)
(declare-fun x105 () Int)
(declare-fun x650 () x567)
(declare-fun x687 () Bool)
(declare-fun x1382 () Int)
(declare-fun x712 () Int)
(declare-fun x955 () Bool)
(declare-fun x1173 () Bool)
(declare-fun x1231 () Int)
(declare-fun x540 () Bool)
(declare-fun x1314 () Int)
(declare-fun x725 (Int) Int)
(declare-fun x1210 () Int)
(declare-fun x1281 () Bool)
(declare-fun x1174 () Bool)
(declare-fun x816 () Int)
(declare-fun x546 () Int)
(declare-fun x151 () Int)
(declare-fun x1315 () Int)
(declare-fun x1299 () Bool)
(declare-fun x1318 () x567)
(declare-fun x862 () Int)
(declare-fun x343 () Int)
(declare-fun x728 () Int)
(declare-fun x1209 () Bool)
(declare-fun x396 () Bool)
(declare-fun x511 () Int)
(declare-fun x946 () Int)
(declare-fun x1078 () x567)
(declare-fun x1360 () Bool)
(declare-fun x1069 () Int)
(declare-fun x1020 () Int)
(declare-fun x92 () Bool)
(declare-fun x302 () Bool)
(declare-fun x61 () Bool)
(declare-fun x1005 () x567)
(declare-fun x428 () Bool)
(declare-fun x561 () x567)
(declare-fun x522 () Int)
(declare-fun x1077 () x567)
(declare-fun x1300 () Int)
(declare-fun x994 (Int) Int)
(declare-fun x1244 () Int)
(declare-fun x529 () Bool)
(declare-fun x40 () Bool)
(declare-fun x356 () Bool)
(declare-fun x628 () Int)
(declare-fun x623 () Bool)
(declare-fun x894 () Int)
(declare-fun x1081 () Int)
(declare-fun x1434 () Bool)
(declare-fun x155 () Bool)
(declare-fun x1477 () x567)
(declare-fun x451 (Int) Int)
(declare-fun x569 () Bool)
(declare-fun x1247 () x567)
(declare-fun x1390 () Bool)
(declare-fun x1198 () Int)
(declare-fun x694 () Int)
(declare-fun x384 () Int)
(declare-fun x80 () Int)
(declare-fun x1309 () Bool)
(declare-fun x1290 () Int)
(declare-fun x267 () Int)
(declare-fun x908 () Int)
(declare-fun x1095 () Bool)
(declare-fun x423 () Bool)
(declare-fun x984 () Int)
(declare-fun x1117 () Bool)
(declare-fun x1184 () Bool)
(declare-fun x327 () Bool)
(declare-fun x1201 (Int) x567)
(declare-fun x613 () Bool)
(declare-fun x765 () Bool)
(declare-fun x525 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x707 () Int)
(declare-fun x316 () Int)
(declare-fun x1410 () Int)
(declare-fun x286 () Bool)
(declare-fun x141 () Bool)
(declare-fun x407 () Int)
(declare-fun x1524 () Int)
(declare-fun x238 () Bool)
(declare-fun x604 () Int)
(declare-fun x251 () Int)
(declare-fun x237 () Int)
(declare-fun x575 () Int)
(declare-fun x1428 () Bool)
(declare-fun x784 () Bool)
(declare-fun x1008 () Bool)
(declare-fun x1501 () Int)
(declare-fun x1028 () x567)
(declare-fun x349 () Bool)
(declare-fun x489 () Int)
(declare-fun x1121 () Bool)
(declare-fun x1051 () Bool)
(declare-fun x959 () Int)
(declare-fun x893 () Int)
(declare-fun x303 () Int)
(declare-fun x703 () Int)
(declare-fun x1041 () Bool)
(declare-fun x681 () Int)
(declare-fun x889 () Bool)
(declare-fun x258 () Bool)
(declare-fun x947 () Int)
(declare-fun x749 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x904 () Int)
(declare-fun x179 () Int)
(declare-fun x1385 () Int)
(declare-fun x852 () Int)
(declare-fun x611 () Bool)
(declare-fun x255 () Int)
(declare-fun x1001 () Bool)
(declare-fun x1113 () Bool)
(declare-fun x247 () Int)
(declare-fun x711 () Bool)
(declare-fun x1448 () Int)
(declare-fun x833 () Bool)
(declare-fun x1500 () Int)
(declare-fun x1493 () Int)
(declare-fun x275 () Int)
(declare-fun x269 () Bool)
(declare-fun x1160 () Int)
(declare-fun x1127 () Bool)
(declare-fun x635 () Int)
(declare-fun x28 () Int)
(declare-fun x1450 () Int)
(declare-fun x1165 () Bool)
(declare-fun x541 () Bool)
(declare-fun x186 () Int)
(declare-fun x1166 () Bool)
(declare-fun x86 () Bool)
(declare-fun x246 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x629 (Int) Int)
(declare-fun x31 () Int)
(declare-fun x602 () Int)
(declare-fun x654 () Bool)
(declare-fun x11 (Int) Int)
(declare-fun x855 () Int)
(declare-fun x1092 () Bool)
(declare-fun x323 () Bool)
(declare-fun x739 () Int)
(declare-fun x1521 () Int)
(declare-fun x965 () x567)
(declare-fun x960 () Int)
(declare-fun x866 () Int)
(declare-fun x1263 () Bool)
(declare-fun x559 () Int)
(declare-fun x915 () Int)
(declare-fun x926 () Int)
(declare-fun x1283 () Bool)
(declare-fun x962 () Bool)
(declare-fun x795 () Int)
(declare-fun x579 () Int)
(declare-fun x477 () Int)
(declare-fun x192 () Int)
(declare-fun x413 () Int)
(declare-fun x666 () x567)
(declare-fun x600 () Bool)
(declare-fun x452 () x567)
(declare-fun x271 () x567)
(declare-fun x963 () Bool)
(declare-fun x1330 () Int)
(declare-fun x401 () Int)
(declare-fun x458 () Bool)
(declare-fun x781 () Bool)
(declare-fun x678 () x567)
(declare-fun x642 () Int)
(declare-fun x77 () Int)
(declare-fun x109 () Int)
(declare-fun x1212 () Bool)
(declare-fun x1446 () Bool)
(declare-fun x177 () Int)
(declare-fun x241 () Bool)
(declare-fun x931 () Int)
(declare-fun x142 () Bool)
(declare-fun x337 () Int)
(declare-fun x985 () Bool)
(declare-fun x129 () Int)
(declare-fun x1061 () Int)
(declare-fun x1164 () Bool)
(declare-fun x1086 () x567)
(declare-fun x1013 () Int)
(declare-fun x1425 () Bool)
(declare-fun x1255 () Bool)
(declare-fun x369 () Int)
(declare-fun x178 () Bool)
(declare-fun x360 () Bool)
(declare-fun x793 () Bool)
(declare-fun x133 () Bool)
(declare-fun x705 () Int)
(declare-fun x951 () Int)
(declare-fun x1374 () Bool)
(declare-fun x183 () Bool)
(declare-fun x264 () Bool)
(declare-fun x532 () Bool)
(declare-fun x1140 () Bool)
(declare-fun x1354 () Int)
(declare-fun x1004 () Bool)
(declare-fun x139 () Bool)
(declare-fun x716 () Int)
(declare-fun x1350 () Int)
(declare-fun x273 () Bool)
(declare-fun x1381 (Int Int) Int)
(declare-fun x194 () Int)
(declare-fun x380 () Bool)
(declare-fun x799 () Int)
(declare-fun x153 () Bool)
(declare-fun x1136 () Int)
(declare-fun x634 () Bool)
(declare-fun x212 () Int)
(declare-fun x387 () x567)
(declare-fun x1163 () Int)
(declare-fun x371 () Int)
(declare-fun x1343 () Bool)
(declare-fun x574 () Bool)
(declare-fun x774 () Bool)
(declare-fun x232 () Bool)
(declare-fun x426 () Int)
(declare-fun x22 () Bool)
(declare-fun x636 () Int)
(declare-fun x578 () Int)
(declare-fun x789 () Int)
(declare-fun x355 () Int)
(declare-fun x311 () Bool)
(declare-fun x1059 () Bool)
(declare-fun x1146 () Int)
(declare-fun x978 () Int)
(declare-fun x1125 () Int)
(declare-fun x1270 () x567)
(declare-fun x342 () Bool)
(declare-fun x372 () x567)
(declare-fun x1205 () Bool)
(declare-fun x453 () Int)
(declare-fun x1133 () Int)
(declare-fun x108 () Int)
(declare-fun x235 () Int)
(declare-fun x168 () Int)
(declare-fun x851 () Int)
(declare-fun x395 () Bool)
(declare-fun x1191 () x567)
(declare-fun x954 () Int)
(declare-fun x763 () Bool)
(declare-fun x406 () x567)
(declare-fun x831 () Int)
(declare-fun x455 () Int)
(declare-fun x1208 () Int)
(declare-fun x25 () Bool)
(declare-fun x1402 () Int)
(declare-fun x682 () Bool)
(declare-fun x1192 () Int)
(declare-fun x608 () Int)
(declare-fun x335 () Int)
(declare-fun x1100 () Int)
(declare-fun x1458 () Bool)
(declare-fun x1327 () Int)
(declare-fun x702 () Int)
(declare-fun x287 () x567)
(declare-fun x136 () Bool)
(declare-fun x891 () Bool)
(declare-fun x709 () Int)
(declare-fun x260 () Int)
(declare-fun x1104 () Bool)
(declare-fun x117 () Bool)
(declare-fun x46 () Int)
(declare-fun x672 () Int)
(declare-fun x52 () Bool)
(declare-fun x869 () Int)
(declare-fun x775 () Bool)
(declare-fun x432 () Int)
(declare-fun x970 () Int)
(declare-fun x1151 () Int)
(declare-fun x284 () Bool)
(declare-fun x1522 () Bool)
(declare-fun x463 () Int)
(declare-fun x1060 () Int)
(declare-fun x1305 () Bool)
(declare-fun x734 () Int)
(declare-fun x111 () Int)
(declare-fun x76 () Int)
(declare-fun x1065 () x567)
(declare-fun x1413 () Int)
(declare-fun x771 () Int)
(declare-fun x1228 () Int)
(declare-fun x393 () Int)
(declare-fun x85 () Int)
(declare-fun x1171 () Int)
(declare-fun x1357 () Bool)
(declare-fun x742 () Bool)
(declare-fun x953 () Int)
(declare-fun x312 () Int)
(declare-fun x43 () Int)
(declare-fun x1076 () Int)
(declare-fun x708 (x567) Int)
(declare-fun x1459 () Int)
(declare-fun x48 () Int)
(declare-fun x1119 () Int)
(declare-fun x1334 () Int)
(declare-fun x968 () Int)
(declare-fun x1423 () Bool)
(declare-fun x180 () x567)
(declare-fun x1257 () Bool)
(declare-fun x892 () Int)
(declare-fun x671 () Int)
(declare-fun x362 () Int)
(declare-fun x508 () Bool)
(declare-fun x704 () Int)
(declare-fun x1250 () Bool)
(declare-fun x971 () Int)
(declare-fun x796 () x567)
(declare-fun x643 () Int)
(declare-fun x1377 () Bool)
(declare-fun x443 () Int)
(declare-fun x982 () Bool)
(declare-fun x479 () x567)
(declare-fun x906 () Int)
(declare-fun x956 () Int)
(declare-fun x127 () Int)
(declare-fun x1405 () Int)
(declare-fun x1193 () Int)
(declare-fun x1024 () Bool)
(declare-fun x810 () Bool)
(declare-fun x1304 () Bool)
(declare-fun x332 () x567)
(declare-fun x162 () Int)
(declare-fun x974 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x802 () Int)
(declare-fun x398 (x567) Int)
(declare-fun x75 () Int)
(declare-fun x1246 () Int)
(declare-fun x122 () Int)
(declare-fun x465 () Bool)
(declare-fun x1027 () Bool)
(declare-fun x431 () Bool)
(declare-fun x878 () Int)
(declare-fun x907 () Int)
(declare-fun x101 () Int)
(declare-fun x313 () Int)
(declare-fun x88 () Int)
(declare-fun x196 () Int)
(declare-fun x373 () Int)
(declare-fun x1056 () x567)
(declare-fun x1068 () Int)
(declare-fun x270 () Int)
(declare-fun x966 () Bool)
(declare-fun x1470 () Int)
(declare-fun x731 () Int)
(declare-fun x523 () Int)
(declare-fun x1286 () Int)
(declare-fun x1188 () x567)
(declare-fun x358 () x567)
(declare-fun x125 () Int)
(declare-fun x243 () Bool)
(declare-fun x1080 () Bool)
(declare-fun x1431 () Bool)
(declare-fun x1301 () Bool)
(declare-fun x1067 () Int)
(declare-fun x1116 () Int)
(declare-fun x1348 () Int)
(declare-fun x856 () Bool)
(declare-fun x534 () Int)
(declare-fun x899 () Int)
(declare-fun x990 () Int)
(declare-fun x499 () Bool)
(declare-fun x222 () Bool)
(declare-fun x733 () Bool)
(declare-fun x1262 () Int)
(declare-fun x1332 () Int)
(declare-fun x268 () Int)
(declare-fun x308 () Bool)
(declare-fun x19 () Bool)
(declare-fun x1025 () Bool)
(declare-fun x641 () Int)
(declare-fun x27 () Bool)
(declare-fun x1366 () Bool)
(declare-fun x281 () Int)
(declare-fun x405 () x567)
(declare-fun x1336 () Int)
(declare-fun x662 () Int)
(declare-fun x1075 () Bool)
(declare-fun x1153 () Int)
(declare-fun x1003 () Int)
(declare-fun x334 () Int)
(declare-fun x1276 (Int) Int)
(declare-fun x54 () Bool)
(declare-fun x571 () Bool)
(declare-fun x338 () x567)
(declare-fun x512 () x567)
(declare-fun x573 () Bool)
(declare-fun x30 () Bool)
(declare-fun x686 () Int)
(declare-fun x588 () Int)
(declare-fun x90 () Int)
(declare-fun x803 () Bool)
(declare-fun x1058 () Bool)
(declare-fun x23 () Int)
(declare-fun x1457 () Int)
(declare-fun x1395 () Int)
(declare-fun x456 () Bool)
(declare-fun x1156 () Int)
(declare-fun x140 () Bool)
(declare-fun x620 () Int)
(declare-fun x1396 () Int)
(declare-fun x350 () Bool)
(declare-fun x1392 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x1132 () Int)
(declare-fun x37 () Bool)
(declare-fun x683 () Bool)
(declare-fun x1226 () Int)
(declare-fun x841 () Bool)
(declare-fun x624 () Bool)
(declare-fun x490 () Int)
(declare-fun x131 () Int)
(declare-fun x1275 () Int)
(declare-fun x1251 () Bool)
(declare-fun x794 () Int)
(declare-fun x917 () Int)
(declare-fun x902 () Int)
(declare-fun x1134 () x567)
(declare-fun x1090 () Int)
(declare-fun x617 () Bool)
(declare-fun x528 () Bool)
(declare-fun x766 () Bool)
(declare-fun x1335 () Int)
(declare-fun x321 () Bool)
(declare-fun x888 () Int)
(declare-fun x1467 () Int)
(declare-fun x1400 () Bool)
(declare-fun x203 () Int)
(declare-fun x975 () Int)
(declare-fun x1097 () Int)
(declare-fun x1509 () Int)
(declare-fun x612 () Int)
(declare-fun x626 () Int)
(declare-fun x1150 () x567)
(declare-fun x249 () Bool)
(declare-fun x1498 () Bool)
(declare-fun x336 () Bool)
(declare-fun x1464 () Int)
(declare-fun x913 () Int)
(declare-fun x1515 () Int)
(declare-fun x496 () Bool)
(declare-fun x1177 () Int)
(declare-fun x1445 () x567)
(declare-fun x1014 () Int)
(declare-fun x1130 () Int)
(declare-fun x883 () Int)
(declare-fun x993 () Int)
(declare-fun x644 () Int)
(declare-fun x208 () Int)
(declare-fun x808 () Int)
(declare-fun x1422 () Bool)
(declare-fun x447 () Bool)
(declare-fun x1002 () Bool)
(declare-fun x557 () Bool)
(declare-fun x1054 (Int Int) Int)
(declare-fun x1006 () Int)
(declare-fun x69 () Int)
(declare-fun x1185 () Bool)
(declare-fun x440 () Bool)
(declare-fun x50 () x567)
(declare-fun x333 () x567)
(declare-fun x1476 () Bool)
(declare-fun x1310 () Bool)
(declare-fun x1375 () Int)
(declare-fun x126 () Int)
(declare-fun x1380 () Bool)
(declare-fun x309 () Int)
(declare-fun x223 () Int)
(declare-fun x520 () Int)
(declare-fun x1411 (Int) Int)
(declare-fun x159 () Int)
(declare-fun x319 () Bool)
(declare-fun x18 () Bool)
(declare-fun x351 () Int)
(declare-fun x1157 () Bool)
(declare-fun x484 () Bool)
(declare-fun x758 () Int)
(declare-fun x403 () Bool)
(declare-fun x1417 () Int)
(declare-fun x147 () Bool)
(declare-fun x399 () x567)
(declare-fun x1120 () Int)
(declare-fun x1062 () Int)
(declare-fun x517 () Bool)
(declare-fun x419 () Int)
(declare-fun x1523 () Bool)
(declare-fun x1347 () x567)
(declare-fun x633 () Bool)
(declare-fun x1419 () Int)
(declare-fun x1168 () Int)
(declare-fun x1277 () x567)
(declare-fun x16 () Bool)
(declare-fun x1190 () x567)
(declare-fun x1478 () Bool)
(declare-fun x1468 () Int)
(declare-fun x1211 () Int)
(declare-fun x416 () Bool)
(declare-fun x619 () Int)
(declare-fun x736 () Bool)
(declare-fun x1047 () Int)
(declare-fun x259 () Int)
(declare-fun x722 () Int)
(declare-fun x764 () Int)
(declare-fun x692 () Int)
(declare-fun x688 () Int)
(declare-fun x1328 () x567)
(declare-fun x425 () Int)
(declare-fun x1040 () Bool)
(declare-fun x897 () Bool)
(declare-fun x1506 () Int)
(declare-fun x591 () Int)
(declare-fun x1465 () Int)
(declare-fun x370 () Int)
(declare-fun x475 () Bool)
(declare-fun x1256 () Bool)
(declare-fun x449 () Int)
(declare-fun x1513 () Int)
(declare-fun x944 () Bool)
(declare-fun x1126 () Bool)
(declare-fun x536 () Bool)
(declare-fun x555 () x567)
(declare-fun x863 () Int)
(declare-fun x210 () Bool)
(declare-fun x724 () Int)
(declare-fun x553 () Int)
(declare-fun x506 () Bool)
(declare-fun x854 () Bool)
(declare-fun x1042 () Bool)
(declare-fun x1512 () Bool)
(declare-fun x595 () Int)
(declare-fun x1426 () Int)
(declare-fun x193 () Bool)
(declare-fun x1169 () Int)
(declare-fun x690 () Bool)
(declare-fun x1284 () Int)
(declare-fun x379 () Bool)
(declare-fun x934 () x567)
(declare-fun x1170 () Bool)
(declare-fun x1339 () Bool)
(declare-fun x79 () Int)
(declare-fun x723 () Bool)
(declare-fun x735 () Bool)
(define-fun x743 ((x567 x567) (x916 Int)) x567 (ite ((_ is x137) x567) (x137 (x158 x567) (+ (x1362 x567) x916)) (ite ((_ is x1269) x567) (x1269 (x597 x567) (x609 x567) (x421 x567) (x3 x567) (+ x916 (x10 x567))) (ite ((_ is x1338) x567) (x1338 (x394 x567) (x754 x567) (+ (x1368 x567) x916)) (x202 (+ x916 (x100 x567)))))))
(define-fun x1259 ((x229 Int)) Int (ite (and (< x229 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x229)) x229 (- x229 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1295 ((x229 Int)) Int (ite (and (< x229 0) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x229)) (+ x229 115792089237316195423570985008687907853269984665640564039457584007913129639936) x229))
(define-fun x547 ((x229 Int)) Int (ite (and (>= x229 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x229)) x229 (ite (and (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 x229) (< x229 231584178474632390847141970017375815706539969331281128078915168015826259279872)) (- x229 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (> 0 x229) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x229)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x229) (x1381 x229 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x53 ((x630 Int)) Bool (and (<= 0 x630) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x630)))
(define-fun x173 ((x630 Int)) Bool (and (= (x1389 x630 115792089237316195423570985008687907853269984665640564039457584007913129639935) x630) (= (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639935 x630) x630)))
(define-fun x1355 ((x630 Int)) Bool (and (= 0 (x1389 0 x630)) (= (x1389 x630 0) 0)))
(define-fun x513 ((x630 Int)) Bool (= x630 (x1389 x630 x630)))
(define-fun x1297 ((x630 Int)) Bool (and (x1355 x630) (x173 x630) (x513 x630)))
(define-fun x1093 ((x630 Int) (x391 Int)) Bool (= (x1389 x391 x630) (x1389 x630 x391)))
(define-fun x1451 ((x630 Int) (x391 Int)) Bool (and (=> (>= x391 0) (<= (x1389 x630 x391) x391)) (<= 0 (x1389 x630 x391)) (=> (<= 0 x630) (>= x630 (x1389 x630 x391)))))
(define-fun x817 ((x630 Int) (x391 Int)) Bool (and (x1451 x630 x391) (x1093 x630 x391)))
(define-fun x325 ((x630 Int)) Bool (= (x1389 x630 1461501637330902918203684832716283019655932542975) (x1381 x630 1461501637330902918203684832716283019655932542976)))
(define-fun x1499 ((x630 Int)) Bool (and (x325 x630) (x817 x630 1461501637330902918203684832716283019655932542975)))
(define-fun x1253 ((x630 Int) (x391 Int)) Bool (and (<= 0 (x1381 x630 x391)) (< (x1381 x630 x391) x391)))
(define-fun x298 ((x630 Int) (x391 Int)) Bool (=> (and (< 0 x391) (<= 0 x630)) (= (= x630 (x1381 x630 x391)) (< x630 x391))))
(define-fun x1010 ((x630 Int) (x391 Int)) Bool (=> (and (and (< x630 (+ x391 x391)) (>= x630 x391)) (< 0 x391)) (= (x1381 x630 x391) (- x630 x391))))
(define-fun x39 ((x630 Int)) Bool (= (x1381 0 x630) 0))
(define-fun x815 ((x630 Int)) Bool (= 0 (x1381 x630 1)))
(define-fun x495 ((x630 Int)) Bool (= 0 (x1381 x630 x630)))
(define-fun x1369 ((x630 Int)) Bool (and (x815 x630) (x39 x630) (x495 x630)))
(define-fun x622 ((x630 Int)) Bool (= (x547 x630) (+ (x1389 x630 115792089237316195423570985007226406215939081747436879206741300988257197096960) (x1381 x630 1461501637330902918203684832716283019655932542976))))
(define-fun x1488 ((x630 Int)) Bool (and (x622 x630) (x817 x630 115792089237316195423570985007226406215939081747436879206741300988257197096960)))
(define-fun x1273 ((x630 Int) (x391 Int)) Bool (=> (and (> x630 0) (< 0 x391)) (= (= (x986 (x547 (x191 x630 x391)) x630) x391) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x191 x630 x391)))))
(define-fun x533 ((x630 Int) (x391 Int)) Bool (=> (and (not (= 0 x630)) (not (= 0 x391))) (and (= (x986 (x191 x630 x391) x630) x391) (= (x986 (x191 x630 x391) x391) x630))))
(define-fun x474 ((x630 Int) (x391 Int)) Bool (=> (and (> x391 0) (< 0 x630)) (= (< (x986 115792089237316195423570985008687907853269984665640564039457584007913129639935 x630) x391) (> (x191 x630 x391) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x174 ((x630 Int) (x391 Int)) Bool (and (= (x547 (x191 (- x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x391 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x547 (x191 x630 x391))) (= (x547 (x191 x630 (- x391 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x547 (x191 x630 x391))) (= (x547 (x191 x630 x391)) (x547 (x191 (- x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) x391)))))
(define-fun x987 ((x630 Int) (x391 Int)) Bool (and (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x630) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x630)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x391) (<= x391 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x630) (x986 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x391))) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x191 (- x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x391 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (<= x391 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x391 0)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x630) (> x630 0))) (= (>= (x986 57896044618658097711785492504343953926634992332820282019728792003956564819967 x391) x630) (<= (x191 x630 x391) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (> x391 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x391 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (> x630 0) (<= x630 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x391) (x986 57896044618658097711785492504343953926634992332820282019728792003956564819968 x630)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x191 x630 (- x391 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (> x391 0) (<= x391 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x630) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x630))) (= (>= (x986 57896044618658097711785492504343953926634992332820282019728792003956564819968 x391) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x630)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x191 (- x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) x391))))))
(define-fun x274 ((x630 Int)) Bool (and (= 0 (x191 x630 0)) (= 0 (x191 0 x630))))
(define-fun x1110 ((x630 Int)) Bool (and (= x630 (x191 1 x630)) (= x630 (x191 x630 1))))
(define-fun x481 ((x630 Int)) Bool (and (x274 x630) (x1110 x630)))
(define-fun x593 ((x630 Int) (x391 Int)) Bool (=> (and (> x391 0) (< 0 x630)) (and (<= (x986 x630 x391) x630) (>= (x986 x630 x391) 0))))
(define-fun x1517 ((x630 Int) (x391 Int)) Bool (=> (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x391) (<= 1 x391)) (and (>= x630 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x630))) (and (>= (x986 x630 x391) 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x986 x630 x391)))))
(define-fun x1412 ((x630 Int) (x391 Int)) Bool (=> (and (< x391 x630) (> x391 1)) (> x630 (x986 x630 x391))))
(define-fun x1287 ((x630 Int) (x391 Int)) Bool (=> (and (> x391 0) (< 0 x630)) (= (= 0 (x986 x630 x391)) (> x391 x630))))
(define-fun x1053 ((x630 Int)) Bool (= 0 (x986 0 x630)))
(define-fun x486 ((x630 Int)) Bool (= (x986 x630 1) x630))
(define-fun x56 ((x630 Int)) Bool (=> (not (= 0 x630)) (= (x986 x630 x630) 1)))
(define-fun x290 ((x630 Int)) Bool (and (x56 x630) (x1053 x630) (x486 x630)))
(define-fun x834 ((x630 Int)) Bool (= (x1381 x630 4294967296) (x1389 x630 4294967295)))
(define-fun x307 ((x630 Int)) Bool (and (x817 x630 4294967295) (x834 x630)))
(define-fun x1471 ((x630 Int) (x391 Int)) Bool (= (x191 x630 x391) (x191 x391 x630)))
(define-fun x664 ((x630 Int) (x391 Int)) Bool (and (=> (and (< x630 0) (< x391 0)) (< 0 (x191 x630 x391))) (=> (and (< 0 x630) (> x391 0)) (< 0 (x191 x630 x391))) (=> (and (< x391 0) (< 0 x630)) (< (x191 x630 x391) 0)) (=> (and (> x391 0) (> 0 x630)) (> 0 (x191 x630 x391)))))
(define-fun x1197 ((x630 Int) (x391 Int)) Bool (and (x174 x630 x391) (x1273 x630 x391) (x474 x630 x391) (x1471 x630 x391) (x664 x630 x391) (x533 x630 x391) (x987 x630 x391)))
(define-fun x714 ((x630 Int)) Bool (= (x547 x630) (+ (x1389 x630 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1381 x630 32))))
(define-fun x1496 ((x630 Int)) Bool (and (x714 x630) (x817 x630 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x515 ((x630 Int)) Bool (= (x1389 x630 255) (x1381 x630 256)))
(define-fun x685 ((x630 Int)) Bool (and (x515 x630) (x817 x630 255)))
(define-fun x430 ((x130 Int)) Int (x1276 x130))
(define-fun x1137 ((x130 Int)) Int (ite (= x130 128) 41880202175123281672023411390868823785620507377596298514233450382794225090560 (x788 x130)))
(define-fun x248 ((x130 Int)) Int (ite (and (> (+ 32 128) x130) (<= 128 x130)) (x895 (+ 0 (- x130 128))) (x1137 x130)))
(define-fun x493 ((x130 Int)) Int (ite x1051 (x248 x130) (x1137 x130)))
(define-fun x1147 ((x130 Int)) Int (ite (= x130 x1076) 111898140286184639627988011319402352826893257207651552004621811389633377861632 (x493 x130)))
(define-fun x663 ((x130 Int)) Int (ite (= x130 x816) x906 (x1147 x130)))
(define-fun x652 ((x130 Int)) Int (ite (and (<= x1076 x130) (> (+ 32 x1076) x130)) (x124 (+ (- x130 x1076) 0)) (x663 x130)))
(define-fun x1482 ((x130 Int)) Int (ite x966 (x652 x130) (x663 x130)))
(define-fun x132 ((x130 Int)) Int (ite x1002 (x1482 x130) (x493 x130)))
(define-fun x753 ((x130 Int)) Int (ite (= x130 x112) 12283247964407756808830995669474934993630555597489544120741799677115838234624 (x132 x130)))
(define-fun x239 ((x130 Int)) Int (ite (= x471 x130) x672 (x753 x130)))
(define-fun x530 ((x130 Int)) Int (ite (and (<= x112 x130) (> (+ x112 32) x130)) (x1439 (+ 0 (- x130 x112))) (x239 x130)))
(define-fun x1514 ((x130 Int)) Int (ite x1504 (x530 x130) (x239 x130)))
(define-fun x977 ((x130 Int)) Int (ite x246 (x1514 x130) (x493 x130)))
(define-fun x935 ((x130 Int)) Int (ite (= x981 x130) x1298 (x977 x130)))
(define-fun x507 ((x130 Int)) Int (ite (= x130 x1463) x932 (x935 x130)))
(define-fun x102 ((x130 Int)) Int (ite (= x130 x880) x1240 (x507 x130)))
(define-fun x1200 ((x130 Int)) Int (ite (= x548 x130) 11430537079145650693387304458692941425836787954612963690241153482819318579200 (x102 x130)))
(define-fun x331 ((x130 Int)) Int (ite (= x130 x1168) (x300 x598) (x1200 x130)))
(define-fun x772 ((x130 Int)) Int (ite (= x726 x130) x866 (x331 x130)))
(define-fun x1442 ((x130 Int)) Int (ite (= x797 x130) x579 (x772 x130)))
(define-fun x1175 ((x130 Int)) Int (ite (and (<= x1385 x130) (> (+ x1385 x579) x130)) (x1276 (+ x1465 (- x130 x1385))) (x1442 x130)))
(define-fun x988 ((x130 Int)) Int (ite (= x1497 x130) 0 (x1175 x130)))
(define-fun x1144 ((x130 Int)) Int (ite (= x1421 x130) 0 (x988 x130)))
(define-fun x1353 ((x130 Int)) Int (ite (= x472 x130) (x300 x666) (x1144 x130)))
(define-fun x285 ((x130 Int)) Int (ite (= x130 x1342) x591 (x1353 x130)))
(define-fun x375 ((x130 Int)) Int (ite (= x686 x130) x625 (x285 x130)))
(define-fun x51 ((x130 Int)) Int (ite (= x57 x130) x1044 (x375 x130)))
(define-fun x1483 ((x130 Int)) Int (ite (= x913 x130) x636 (x51 x130)))
(define-fun x1181 ((x130 Int)) Int (ite (= x88 x130) 111898140286184639627988011319402352826893257207651552004621811389633377861632 (x1483 x130)))
(define-fun x840 ((x130 Int)) Int (ite (= x130 x581) x906 (x1181 x130)))
(define-fun x727 ((x130 Int)) Int (ite (and (< x130 (+ x88 32)) (<= x88 x130)) (x415 (+ (- x130 x88) 0)) (x840 x130)))
(define-fun x601 ((x130 x567)) Int (ite (= x1473 x130) x643 (x864 x130)))
(define-fun x737 ((x130 x567)) Int (ite (= x130 x1318) x1363 (x601 x130)))
(define-fun x378 ((x130 x567)) Int (ite (= x372 x130) x282 (x737 x130)))
(define-fun x847 ((x130 x567)) Int (ite (= x130 x668) x722 (x378 x130)))
(define-fun x1162 ((x130 x567)) Int (ite (= x130 x1452) 0 (x847 x130)))
(define-fun x198 ((x130 x567)) Int (ite (= x130 x583) 0 (x1162 x130)))
(define-fun x1254 ((x130 x567)) Int (ite (= x130 x364) 0 (x198 x130)))
(define-fun x1102 ((x130 x567)) Int (ite (= x130 x424) x1296 (x1254 x130)))
(define-fun x150 ((x130 x567)) Int (ite (= x1134 x130) x1156 (x1102 x130)))
(define-fun x83 ((x130 Int)) Int (x11 x130))
(define-fun x823 ((x130 Int)) Int (ite (= 128 x130) 41880202175123281672023411390868823785620507377596298514233450382794225090560 (x197 x130)))
(define-fun x1235 ((x130 Int)) Int (ite (and (< x130 (+ 128 32)) (<= 128 x130)) (x1487 (+ 0 (- x130 128))) (x823 x130)))
(define-fun x1279 ((x130 Int)) Int (ite x360 (x727 x130) (x840 x130)))
(define-fun x1034 ((x130 Int)) Int (ite x1305 (x1279 x130) (x1483 x130)))
(define-fun x4 ((x130 Int)) Int (ite (= x130 x1153) 53555067238089503724735347336495418478014768613909373709225909316790851207168 (x1034 x130)))
(define-fun x1142 ((x130 Int)) Int (ite (and (>= x130 x1153) (< x130 (+ 32 x1153))) (x225 (+ 0 (- x130 x1153))) (x4 x130)))
(define-fun x385 ((x130 Int)) Int (ite x584 (x1142 x130) (x4 x130)))
(define-fun x580 ((x130 Int)) Int (ite (= x64 x130) 111898140286184639627988011319402352826893257207651552004621811389633377861632 (x385 x130)))
(define-fun x909 ((x130 Int)) Int (ite (= x130 x76) x65 (x580 x130)))
(define-fun x437 ((x130 Int)) Int (ite (and (>= x130 x64) (> (+ 32 x64) x130)) (x762 (+ 0 (- x130 x64))) (x909 x130)))
(define-fun x518 ((x130 Int)) Int (ite x682 (x437 x130) (x909 x130)))
(define-fun x1329 ((x130 Int)) Int (ite x1340 (x518 x130) (x385 x130)))
(define-fun x207 ((x130 Int)) Int (ite (= x130 x802) 107954783943672036892603255375593993710912147498776614820764573710931487358976 (x1329 x130)))
(define-fun x1480 ((x130 Int)) Int (ite (= x614 x130) x1363 (x207 x130)))
(define-fun x1007 ((x130 Int)) Int (ite (and (>= x130 x802) (> (+ x802 32) x130)) (x1022 (+ 0 (- x130 x802))) (x1480 x130)))
(define-fun x933 ((x130 Int)) Int (ite x884 (x1007 x130) (x1480 x130)))
(define-fun x215 ((x130 Int)) Int (ite x49 (x1235 x130) (x823 x130)))
(define-fun x348 ((x130 Int)) Int (ite (= x1500 x130) 111898140286184639627988011319402352826893257207651552004621811389633377861632 (x215 x130)))
(define-fun x390 ((x130 Int)) Int (ite (= x422 x130) x906 (x348 x130)))
(define-fun x1282 ((x130 Int)) Int (ite (and (< x130 (+ x1500 32)) (<= x1500 x130)) (x1411 (+ (- x130 x1500) 0)) (x390 x130)))
(define-fun x638 ((x130 Int)) Int (ite x801 (x1282 x130) (x390 x130)))
(define-fun x929 ((x130 Int)) Int (ite x416 (x638 x130) (x215 x130)))
(define-fun x119 ((x130 Int)) Int (ite (= x335 x130) 12283247964407756808830995669474934993630555597489544120741799677115838234624 (x929 x130)))
(define-fun x329 ((x130 Int)) Int (ite (= x130 x894) x642 (x119 x130)))
(define-fun x769 ((x130 Int)) Int (ite (and (>= x130 x335) (> (+ 32 x335) x130)) (x451 (+ (- x130 x335) 0)) (x329 x130)))
(define-fun x299 ((x130 Int)) Int (ite x565 (x769 x130) (x329 x130)))
(define-fun x1358 ((x130 Int)) Int (ite x1313 (x299 x130) (x215 x130)))
(define-fun x972 ((x130 Int)) Int (ite (= x289 x130) x376 (x1358 x130)))
(define-fun x858 ((x130 Int)) Int (ite (= x192 x130) x1243 (x972 x130)))
(define-fun x339 ((x130 Int)) Int (ite (= x130 x1333) x795 (x858 x130)))
(define-fun x750 ((x130 Int)) Int (ite (= x1000 x130) 11430537079145650693387304458692941425836787954612963690241153482819318579200 (x339 x130)))
(define-fun x445 ((x130 Int)) Int (ite (= x130 x812) (x300 x939) (x750 x130)))
(define-fun x91 ((x130 Int)) Int (ite (= x760 x130) x785 (x445 x130)))
(define-fun x341 ((x130 Int)) Int (ite (= x130 x45) x1246 (x91 x130)))
(define-fun x1258 ((x130 Int)) Int (ite (and (< x130 (+ x1350 x1246)) (>= x130 x1350)) (x11 (+ (- x130 x1350) x94)) (x341 x130)))
(define-fun x1261 ((x130 Int)) Int (ite (= x130 x1505) 0 (x1258 x130)))
(define-fun x1238 ((x130 Int)) Int (ite (= x130 x1484) 0 (x1261 x130)))
(define-fun x278 ((x130 Int)) Int (ite (= x1217 x130) (x300 x1065) (x1238 x130)))
(define-fun x901 ((x130 Int)) Int (ite (= x130 x455) x1441 (x278 x130)))
(define-fun x949 ((x130 Int)) Int (ite (= x1302 x130) x23 (x901 x130)))
(define-fun x872 ((x130 Int)) Int (ite (= x1475 x130) x419 (x949 x130)))
(define-fun x1365 ((x130 Int)) Int (ite (= x1186 x130) x268 (x872 x130)))
(define-fun x756 ((x130 Int)) Int (ite (= x130 x704) 111898140286184639627988011319402352826893257207651552004621811389633377861632 (x1365 x130)))
(define-fun x436 ((x130 Int)) Int (ite (= x130 x910) x906 (x756 x130)))
(define-fun x72 ((x130 Int)) Int (ite (and (<= x704 x130) (> (+ 32 x704) x130)) (x167 (+ 0 (- x130 x704))) (x436 x130)))
(define-fun x670 ((x130 x567)) Int (ite x1422 (x398 x130) (x631 x130)))
(define-fun x165 ((x130 x567)) Int (ite x1291 (ite x1087 (x670 x130) (x631 x130)) (x631 x130)))
(define-fun x1415 ((x130 x567)) Int (ite (= x130 x71) x1125 (x864 x130)))
(define-fun x818 ((x130 x567)) Int (ite (= x1118 x130) x509 (x1415 x130)))
(define-fun x1430 ((x130 x567)) Int (ite (= x1124 x130) x1490 (x818 x130)))
(define-fun x381 ((x130 x567)) Int (ite (= x720 x130) x842 (x1430 x130)))
(define-fun x563 ((x130 x567)) Int (ite (= x130 x819) 0 (x381 x130)))
(define-fun x1437 ((x130 x567)) Int (ite (= x130 x796) 0 (x563 x130)))
(define-fun x539 ((x130 x567)) Int (ite (= x130 x1203) 0 (x1437 x130)))
(define-fun x347 ((x130 x567)) Int (ite (= x130 x650) x1274 (x539 x130)))
(define-fun x543 ((x130 x567)) Int (ite (= x35 x130) x794 (x347 x130)))
(define-fun x867 ((x130 x567)) Int (ite (= x555 x130) x1074 (x543 x130)))
(define-fun x586 ((x130 x567)) Int (ite x87 (x347 x130) (x867 x130)))
(define-fun x979 ((x130 Int)) Int (x1276 x130))
(define-fun x1265 ((x130 Int)) Int (ite (= 128 x130) 41880202175123281672023411390868823785620507377596298514233450382794225090560 (x176 x130)))
(define-fun x1443 ((x130 Int)) Int (ite (and (> (+ 32 128) x130) (>= x130 128)) (x629 (+ (- x130 128) 0)) (x1265 x130)))
(define-fun x806 ((x130 Int)) Int (ite x639 (x72 x130) (x436 x130)))
(define-fun x220 ((x130 Int)) Int (ite x380 (x806 x130) (x1365 x130)))
(define-fun x1218 ((x130 Int)) Int (ite (= x130 x724) 53555067238089503724735347336495418478014768613909373709225909316790851207168 (x220 x130)))
(define-fun x1046 ((x130 Int)) Int (ite (and (< x130 (+ x724 32)) (<= x724 x130)) (x994 (+ (- x130 x724) 0)) (x1218 x130)))
(define-fun x1341 ((x130 Int)) Int (ite x711 (x1046 x130) (x1218 x130)))
(define-fun x487 ((x130 Int)) Int (ite (= x130 x853) 111898140286184639627988011319402352826893257207651552004621811389633377861632 (x1341 x130)))
(define-fun x1462 ((x130 Int)) Int (ite (= x522 x130) x65 (x487 x130)))
(define-fun x500 ((x130 Int)) Int (ite (and (< x130 (+ 32 x853)) (>= x130 x853)) (x1433 (+ 0 (- x130 x853))) (x1462 x130)))
(define-fun x1511 ((x130 Int)) Int (ite x1289 (x500 x130) (x1462 x130)))
(define-fun x746 ((x130 Int)) Int (ite x964 (x1511 x130) (x1341 x130)))
(define-fun x868 ((x130 Int)) Int (ite (= x852 x130) 107954783943672036892603255375593993710912147498776614820764573710931487358976 (x746 x130)))
(define-fun x1245 ((x130 Int)) Int (ite (= x130 x1375) x509 (x868 x130)))
(define-fun x777 ((x130 Int)) Int (ite (and (< x130 (+ 32 x852)) (>= x130 x852)) (x1268 (+ (- x130 x852) 0)) (x1245 x130)))
(define-fun x651 ((x130 Int)) Int (ite x1422 (x777 x130) (x1245 x130)))
(define-fun x936 ((x130 x567)) Int (ite (= x130 x332) x120 (x586 x130)))
(define-fun x240 ((x130 x567)) Int (ite (= x130 x1379) x234 (x936 x130)))
(define-fun x821 ((x130 x567)) Int (ite (= x1086 x130) x825 (x240 x130)))
(define-fun x950 ((x130 x567)) Int (ite (= x130 x876) x279 (x821 x130)))
(define-fun x181 ((x130 x567)) Int (ite (= x1038 x130) 0 (x950 x130)))
(define-fun x1219 ((x130 x567)) Int (ite (= x130 x824) 0 (x181 x130)))
(define-fun x992 ((x130 x567)) Int (ite (= x1477 x130) 0 (x1219 x130)))
(define-fun x435 ((x130 x567)) Int (ite (= x130 x1077) x857 (x992 x130)))
(define-fun x721 ((x130 x567)) Int (ite (= x678 x130) x588 (x435 x130)))
(define-fun x1233 ((x130 Int)) Int (ite x1072 (x1443 x130) (x1265 x130)))
(define-fun x667 ((x130 Int)) Int (ite (= x130 x1336) 111898140286184639627988011319402352826893257207651552004621811389633377861632 (x1233 x130)))
(define-fun x1352 ((x130 Int)) Int (ite (= x130 x1464) x906 (x667 x130)))
(define-fun x684 ((x130 Int)) Int (ite (and (>= x130 x1336) (> (+ x1336 32) x130)) (x1070 (+ (- x130 x1336) 0)) (x1352 x130)))
(define-fun x1023 ((x130 Int)) Int (ite x403 (x684 x130) (x1352 x130)))
(define-fun x679 ((x130 Int)) Int (ite x1063 (x1023 x130) (x1233 x130)))
(define-fun x13 ((x130 Int)) Int (ite (= x250 x130) 12283247964407756808830995669474934993630555597489544120741799677115838234624 (x679 x130)))
(define-fun x649 ((x130 Int)) Int (ite (= x130 x204) x1348 (x13 x130)))
(define-fun x1066 ((x130 Int)) Int (ite (and (<= x250 x130) (< x130 (+ 32 x250))) (x725 (+ (- x130 x250) 0)) (x649 x130)))
(define-fun x1322 ((x130 Int)) Int (ite x1184 (x1066 x130) (x649 x130)))
(define-fun x1033 ((x130 Int)) Int (ite x875 (x1322 x130) (x1233 x130)))
(define-fun x967 ((x130 Int)) Int (ite (= x130 x729) x731 (x1033 x130)))
(define-fun x1114 ((x130 Int)) Int (ite (= x489 x130) x1396 (x967 x130)))
(define-fun x1404 ((x130 Int)) Int (ite (= x130 x701) x160 (x1114 x130)))
(define-fun x710 ((x130 Int)) Int (ite (= x681 x130) 11430537079145650693387304458692941425836787954612963690241153482819318579200 (x1404 x130)))
(define-fun x82 ((x130 Int)) Int (ite (= x130 x1097) (x300 x1372) (x710 x130)))
(define-fun x544 ((x130 Int)) Int (ite (= x130 x188) x1210 (x82 x130)))
(define-fun x719 ((x130 Int)) Int (ite (= x130 x345) x738 (x544 x130)))
(define-fun x1036 ((x130 Int)) Int (ite (and (<= x1090 x130) (< x130 (+ x1090 x738))) (x1276 (+ x707 (- x130 x1090))) (x719 x130)))
(define-fun x59 ((x130 Int)) Int (ite (= x130 x703) 0 (x1036 x130)))
(define-fun x699 ((x130 Int)) Int (ite (= x787 x130) 0 (x59 x130)))
(define-fun x836 ((x130 Int)) Int (ite (= x542 x130) (x300 x338) (x699 x130)))
(define-fun x674 ((x130 Int)) Int (ite (= x130 x414) x885 (x836 x130)))
(define-fun x1409 ((x130 Int)) Int (ite (= x130 x413) x813 (x674 x130)))
(define-fun x554 ((x130 Int)) Int (ite (= x692 x130) x1018 (x1409 x130)))
(define-fun x1019 ((x130 Int)) Int (ite (= x1060 x130) x314 (x554 x130)))
(define-fun x494 ((x130 Int)) Int (ite (= x105 x130) 111898140286184639627988011319402352826893257207651552004621811389633377861632 (x1019 x130)))
(define-fun x245 ((x130 Int)) Int (ite (= x907 x130) x906 (x494 x130)))
(define-fun x1079 ((x130 Int)) Int (ite (and (<= x105 x130) (< x130 (+ x105 32))) (x104 (+ (- x130 x105) 0)) (x245 x130)))
(define-fun x404 ((x130 Int)) Int (ite x1432 (x1079 x130) (x245 x130)))
(define-fun x257 ((x130 Int)) Int (ite x1434 (x404 x130) (x1019 x130)))
(define-fun x1030 ((x130 Int)) Int (ite (= x546 x130) 53555067238089503724735347336495418478014768613909373709225909316790851207168 (x257 x130)))
(define-fun x589 ((x130 Int)) Int (ite (and (>= x130 x546) (< x130 (+ x546 32))) (x900 (+ (- x130 x546) 0)) (x1030 x130)))
(define-fun x715 ((x130 Int)) Int (ite x528 (x589 x130) (x1030 x130)))
(define-fun x879 ((x130 Int)) Int (ite (= x129 x130) 111898140286184639627988011319402352826893257207651552004621811389633377861632 (x715 x130)))
(define-fun x747 ((x130 Int)) Int (ite (= x130 x177) x65 (x879 x130)))
(define-fun x928 ((x130 Int)) Int (ite (and (> (+ 32 x129) x130) (>= x130 x129)) (x6 (+ (- x130 x129) 0)) (x747 x130)))
(define-fun x294 ((x130 Int)) Int (ite x252 (x928 x130) (x747 x130)))
(define-fun x292 ((x130 Int)) Int (ite x1215 (x294 x130) (x715 x130)))
(define-fun x800 ((x130 Int)) Int (ite (= x130 x68) 107954783943672036892603255375593993710912147498776614820764573710931487358976 (x292 x130)))
(define-fun x640 ((x130 Int)) Int (ite (= x130 x1099) x234 (x800 x130)))
(define-fun x184 ((x130 Int)) Int (ite (and (>= x130 x68) (< x130 (+ x68 32))) (x169 (+ (- x130 x68) 0)) (x640 x130)))
(define-fun x60 ((x130 Int)) Int (ite x896 (x184 x130) (x640 x130)))
(define-fun x397 ((x630 Int) (x391 Int) (x914 Int) (x1311 Int)) Bool (=> (and (>= x630 0) (<= x391 x1311) (>= x914 x630) (>= x391 0)) (>= (x191 x914 x1311) (x191 x630 x391))))
(define-fun x526 ((x630 Int) (x391 Int) (x914 Int) (x1311 Int)) Bool (=> (= x630 x914) (= (- (x191 x630 x391) (x191 x914 x1311)) (x191 x630 (- x391 x1311)))))
(define-fun x1223 ((x630 Int)) Bool (=> (and (not (= x630 4294967295)) (not (= 2661379305446904779734859349833089258949455794555359447896749126450 x630)) (not (= x630 107954783943672036892603255375593993710912147498776614820764573710931487358976)) (not (= x630 12283247964407756808830995669474934993630555597489544120741799677115838234624)) (not (= 79228162514264337593543950336 x630)) (not (= 4294967296 x630)) (not (= x630 1461501637330902918203684832716283019655932542975)) (not (= x630 115792089237316195423570985007226406215939081747436879206741300988257197096960)) (< 10000 x630) (not (= x630 53555067238089503724735347336495418478014768613909373709225909316790851207168)) (not (= x630 57896044618658097711785492504343953926418782139537452191302581570759080747168)) (not (= x630 2974191442)) (not (= 111898140286184639627988011319402352826893257207651552004621811389633377861632 x630)) (not (= x630 2543820636)) (not (= x630 3219105711)) (not (= x630 11430537079145650693387304458692941425836787954612963690241153482819318579200)) (not (= 18446744073709551615 x630)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x630)) (not (= 2794781754 x630)) (not (= x630 2801674539)) (not (= 41880202175123281672023411390868823785620507377596298514233450382794225090560 x630)) (not (= 2769337888 x630))) (not ((_ is x202) (x1201 x630)))))
(assert (x53 x352))
(assert (= (x176 x1029) 0))
(assert (= (x202 4294967295) (x1201 4294967295)))
(assert (= x844 (and x742 (not x288))))
(assert (x53 x828))
(assert (and (=> (> 32 0) (= x1284 (+ (* (x986 x1284 32) 32) (x1381 x1284 32)))) (x1253 x1284 32) (x298 x1284 32) (x1010 x1284 32)))
(assert (= (and x153 x1418) x801))
(assert (= x962 (=> (= x78 true) x280)))
(assert (= x658 (=> (and (= (x1259 (+ x728 256)) x88) (= x1149 (x1389 1461501637330902918203684832716283019655932542975 x108)) (= (x1338 (x1201 x906) (x202 1) 0) x786) (= (= 0 x1149) x749) (= (x864 x786) x108)) (and (=> (and (and (= x457 x1149) (= x88 x1153)) (not x749)) x615) (=> (and x749 (and (or (and (= x7 x700) (not x336)) (and (and (= 1 x7) (< x388 4294967296)) x336)) (and (= x336 (> x700 0)) (= x1429 (x1259 (+ x88 4))) (= (x708 (x1201 x1228)) x838) (= (x1389 1461501637330902918203684832716283019655932542975 x771) x1228) (= x1429 x581) (not (= x838 0)) (= (x864 (x202 0)) x771)))) x1472)))))
(assert (= (x300 (x743 x254 2)) (+ (x300 x254) 2)))
(assert (x1197 x1280 (- x961 x477)))
(assert (x53 x1419))
(assert (x53 x109))
(assert (= (x300 (x1201 x401)) x401))
(assert (x53 x505))
(assert (=> (>= 10000 (x1054 x1243 96)) (= (x202 (x1054 x1243 96)) (x1201 (x1054 x1243 96)))))
(assert (x53 x538))
(assert (x53 x234))
(assert (= (and (not x155) x356) x34))
(assert (= (x202 2794781754) (x1201 2794781754)))
(assert (= (and (not x183) x723) x1364))
(assert (x53 x915))
(assert (x53 x899))
(assert (x1369 256))
(assert (x1297 x95))
(assert (= x37 (and x1009 x1230)))
(assert (= (and x27 (not x1204)) x497))
(assert (= (and x1428 x476) x340))
(assert (x53 x705))
(assert (x1197 x427 (- x1119 x961)))
(assert (= (=> (and (or (not x230) (and x230 (and (= x1136 (x1102 x1134)) (= (x150 x32) x127) (= (x743 x271 1) x1134) (= (x1338 (x1201 x1062) (x202 14) 0) x271) (= x32 (x1338 (x1201 x1363) (x202 16) 0)) (= x1156 (x1259 (+ x1136 x282))) (not (>= (+ x277 x1136) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1259 (+ x282 x127)) x657) (not (>= (+ x127 x277) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (and (= (x743 x372 1) x668) (= (x1338 (x1201 x1248) (x202 15) 0) x1071) (= (x743 x1318 1) x372) (= (x743 x583 1) x364) (= (x743 x1452 1) x583) (= x424 (x743 x364 1)) (= (x864 x1473) x537) (= x1062 x695) (= x643 (x1259 (+ x695 x1133))) (= x1133 (x1389 115792089237316195423570985007226406215939081747436879206741300988257197096960 x537)) (= (x1389 1461501637330902918203684832716283019655932542975 x1337) x1248) (= x230 (< 0 x282)) (= x1318 (x743 x1071 1)) (= x1452 (x743 x668 1)) (= x1071 x1473))) x943) x1476))
(assert (x53 x1455))
(assert (= (x300 (x202 12283247964407756808830995669474934993630555597489544120741799677115838234624)) 12283247964407756808830995669474934993630555597489544120741799677115838234624))
(assert (x53 x1492))
(assert (x53 x778))
(assert (x53 x236))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x95 (+ (* (x986 x95 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x95 1461501637330902918203684832716283019655932542976)))) (x1253 x95 1461501637330902918203684832716283019655932542976) (x298 x95 1461501637330902918203684832716283019655932542976) (x1010 x95 1461501637330902918203684832716283019655932542976)))
(assert (= (or x1512 x1249) x15))
(assert (= (=> (and (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x231) (and (> 32 x231) (= true (<= x231 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= x908 x1153) (= x1221 (x1259 (+ 31 x231))) (= x722 (x385 x908)) (= x64 (x1259 (+ x1153 x899))) (not (= 0 x343)) (= (> x282 0) x1085) (= x899 (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1221))) (and (=> (and x1085 (and (= (= x449 0) x1260) (= (x864 x759) x595) (= (x1389 1461501637330902918203684832716283019655932542975 x595) x449) (= (x1338 (x1201 x65) (x202 1) 0) x759))) (and (=> (and (and (= x449 x851) (= x64 x802)) (not x1260)) x1189) (=> (and (and (or (and (= x599 x1495) (not x874)) (and (and (< x660 4294967296) (= x1495 1)) x874)) (and (= (x1259 (+ 4 x64)) x1262) (= x76 x1262) (= x1052 (x708 (x1201 x1083))) (= (< 0 x599) x874) (= x31 (x864 (x202 0))) (not (= 0 x1052)) (= (x1389 1461501637330902918203684832716283019655932542975 x31) x1083))) x1260) x379))) (=> (and (= 0 x1296) (not x1085)) x1476))) x458))
(assert (and (x174 32 x1513) (= (* x1513 32) (x191 32 x1513)) (x474 32 x1513) (x987 32 x1513) (and (= (- (* (- x1513 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x1513 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x191 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1513 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 32 (- x1513 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x191 32 (- x1513 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x1513 32) (* x1513 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x191 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1513))) (x533 32 x1513) (x1273 32 x1513)))
(assert (x53 x1438))
(assert (= (and (not x661) x1374) x927))
(assert (= x1041 (and x627 x242)))
(assert (= (and x1152 (not x140)) x396))
(assert (x53 x680))
(assert (x53 x1346))
(assert (x53 x694))
(assert (x53 x662))
(assert (= (=> (= (> x825 x97) x211) (and (=> (and (= x320 x970) (not x211)) x178) (=> x211 x962))) x687))
(assert (x53 x1132))
(assert (=> (>= 10000 (x1054 x376 96)) (= (x202 (x1054 x376 96)) (x1201 (x1054 x376 96)))))
(assert (x53 x814))
(assert (x53 x923))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x732 (+ (* (x986 x732 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x732 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x732 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x732 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x732 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (or x222 x925) x433))
(assert (= x1059 (and x22 x983)))
(assert (x53 x643))
(assert (x53 x401))
(assert (x397 x1280 x961 x427 x1119))
(assert (x1297 x108))
(assert (x53 x115))
(assert (x1496 x1221))
(assert (= x328 (and x1187 (not x1042))))
(assert (x53 x28))
(assert (x53 x1161))
(assert (x53 x1300))
(assert (x53 x1156))
(assert (x53 x161))
(assert (= x1303 (or x1263 x528)))
(assert (x53 x1107))
(assert (x53 x604))
(assert (x1223 x839))
(assert (x1499 x912))
(assert (= (and (not x1344) x261) x74))
(assert (x53 x5))
(assert (x53 x656))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x367 (+ (* (x986 x367 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x367 1461501637330902918203684832716283019655932542976)))) (x1253 x367 1461501637330902918203684832716283019655932542976) (x298 x367 1461501637330902918203684832716283019655932542976) (x1010 x367 1461501637330902918203684832716283019655932542976)))
(assert (x53 x1375))
(assert (x53 x641))
(assert (x1369 x926))
(assert (x53 x1441))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x1211 (+ (* (x986 x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x1211 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1223 x131))
(assert (x1297 x462))
(assert (x53 x798))
(assert (x53 x701))
(assert (x53 x523))
(assert (= x1088 (and x357 (not x78))))
(assert (x1223 x648))
(assert (= x903 (and x779 x810)))
(assert (x53 x838))
(assert (x53 x760))
(assert (x1297 x1284))
(assert (x481 (- x477 x961)))
(assert (x481 (- x227 x427)))
(assert (x1499 x993))
(assert (x53 x1333))
(assert (x53 x422))
(assert (= x1 (or x350 x832)))
(assert (x53 x910))
(assert (x1369 x1300))
(assert (x53 x316))
(assert (= x1035 (and x1121 x284)))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x594 (+ (* (x986 x594 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x594 1461501637330902918203684832716283019655932542976)))) (x1253 x594 1461501637330902918203684832716283019655932542976) (x298 x594 1461501637330902918203684832716283019655932542976) (x1010 x594 1461501637330902918203684832716283019655932542976)))
(assert (x53 x1139))
(assert (x53 x1217))
(assert (x1297 x425))
(assert (= (=> (and (not (= x758 0)) (= x351 x182) (= x182 (x933 x705)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x877) (and (= (<= x877 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x877)))) (= x802 x705)) x1173) x224))
(assert (x53 x785))
(assert (x53 x1225))
(assert (x481 (- x427 x1280)))
(assert (= (x1054 x1006 248) (x986 x1006 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (= (and x213 x52) x27))
(assert (= (x300 (x743 x50 1)) (+ (x300 x50) 1)))
(assert (x53 x880))
(assert (= (x202 4294967296) (x1201 4294967296)))
(assert (x53 x367))
(assert (x1297 x771))
(assert (x1297 x480))
(assert (x1297 x1109))
(assert (x1297 x383))
(assert (x53 x400))
(assert (x53 x802))
(assert (x1223 x1062))
(assert (x1369 x1109))
(assert (x53 x223))
(assert (x1369 x641))
(assert (x53 x268))
(assert (x53 x427))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x559 (+ (* (x986 x559 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x559 1461501637330902918203684832716283019655932542976)))) (x1253 x559 1461501637330902918203684832716283019655932542976) (x298 x559 1461501637330902918203684832716283019655932542976) (x1010 x559 1461501637330902918203684832716283019655932542976)))
(assert (x1369 x732))
(assert (and (= (x191 9 9) 81) (= 9 (x191 3 3)) (= (x191 9 3) 27) (= 81 (x191 27 3))))
(assert (x53 x577))
(assert (= x541 (and x249 x1089)))
(assert (= (and x1440 x439) x1377))
(assert (= (x300 (x1201 x975)) x975))
(assert (= x839 (x300 (x1201 x839))))
(assert (= x527 (=> (= x655 x1274) x1251)))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x537 (+ (* (x986 x537 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x537 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x537 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x537 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x537 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x53 x304))
(assert (= (=> (and (= x553 (x638 x534)) (= (x1259 (+ x116 31)) x425) (>= 1461501637330902918203684832716283019655932542975 x553) (= x164 x553) (= x534 x1500) (= (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x425) x318) (= (x1259 (+ x1500 x318)) x572) (= x572 x335) (not (= x313 0)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x116) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x116) true) (< x116 32))))) x973) x621))
(assert (x53 x361))
(assert (x53 x865))
(assert (x53 x85))
(assert (x53 x315))
(assert (and (x1517 x1314 32) (x1412 x1314 32) (= (* 32 (x986 x1314 32)) (- x1314 (x1389 31 x1314))) (=> (and (> 32 0) (> x1314 0)) (and (< (- x1314 32) (* 32 (x986 x1314 32))) (>= x1314 (* 32 (x986 x1314 32))))) (x1287 x1314 32) (x593 x1314 32)))
(assert (= (and x1256 x665) x440))
(assert (x53 x999))
(assert (= x152 (=> (and (not (= x620 0)) (= x103 x577) (= x171 x112) (= x118 x1076) (= x1146 (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x947)) (= (x1259 (+ x1146 x1076)) x171) (= x947 (x1259 (+ x1108 31))) (= (x1482 x118) x103) (<= x103 1461501637330902918203684832716283019655932542975) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1108) (and (= (<= x1108 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x1108))))) x735)))
(assert (x1297 x783))
(assert (x53 x853))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x946 (+ (* (x986 x946 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x946 1461501637330902918203684832716283019655932542976)))) (x1253 x946 1461501637330902918203684832716283019655932542976) (x298 x946 1461501637330902918203684832716283019655932542976) (x1010 x946 1461501637330902918203684832716283019655932542976)))
(assert (x53 x716))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x505 (+ (* (x986 x505 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x505 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x505 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x505 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x505 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x202 2801674539) (x1201 2801674539)))
(assert (x53 x388))
(assert (= x969 (or x859 x1063)))
(assert (x53 x1384))
(assert (x53 x1342))
(assert (= x577 (x300 (x1201 x577))))
(assert (= x1017 (and x1440 (not x439))))
(assert (x1499 x926))
(assert (x53 x8))
(assert (x1297 255))
(assert (= x499 (or x1015 x1339)))
(assert (x1499 x1469))
(assert (x53 x90))
(assert (x1369 x959))
(assert (= (+ (x300 x1203) 1) (x300 (x743 x1203 1))))
(assert (= x353 (and (not x342) x411)))
(assert (= (+ 3 (x300 x887)) (x300 (x743 x887 3))))
(assert (= (+ 3 (x300 x1466)) (x300 (x743 x1466 3))))
(assert (x53 x717))
(assert (x1223 (x1054 x1298 96)))
(assert (= (x300 (x1201 (x1054 x1243 96))) (x1054 x1243 96)))
(assert (x53 x542))
(assert (x1297 x814))
(assert (x53 x1109))
(assert (x53 x489))
(assert (= (and x1498 x467) x344))
(assert (x1297 x194))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x326 (+ (* (x986 x326 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x326 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x326 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x326 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x326 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= x428 (=> (and (or (not x779) x779) (= x779 (= x186 0))) x1128)))
(assert (= 0 (x197 (x1259 (+ x90 96)))))
(assert (= x1291 (or x1035 x1087)))
(assert (x53 x101))
(assert (x53 x1463))
(assert (x53 x425))
(assert (= x423 (and x882 x677)))
(assert (= (and x15 x1213) x627))
(assert (x53 x732))
(assert (x1297 x1391))
(assert (= (x176 x109) 0))
(assert (x53 x1226))
(assert (x53 x58))
(assert (x53 x231))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1300 (+ (* (x986 x1300 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x1300 1461501637330902918203684832716283019655932542976)))) (x1253 x1300 1461501637330902918203684832716283019655932542976) (x298 x1300 1461501637330902918203684832716283019655932542976) (x1010 x1300 1461501637330902918203684832716283019655932542976)))
(assert (x53 x619))
(assert (= x829 (and (not x1159) x837)))
(assert (= (x1054 x932 96) (x300 (x1201 (x1054 x932 96)))))
(assert (x53 x1180))
(assert (x685 x1198))
(assert (= (and x1310 x1103) x525))
(assert (= (and x569 x706) x535))
(assert (x53 x984))
(assert (x53 x883))
(assert (x526 x1280 x961 x477 x227))
(assert (= (and x948 (not x138)) x1075))
(assert (x53 x63))
(assert (x53 x113))
(assert (x53 x277))
(assert (x1297 x1198))
(assert (= (or x829 x1291) x166))
(assert (x53 x673))
(assert (= (and x1474 (not x1164)) x531))
(assert (= (and x969 (not x1027)) x1058))
(assert (= (or x34 x1215) x1390))
(assert (= (x300 (x743 x1379 1)) (+ 1 (x300 x1379))))
(assert (x53 x1274))
(assert (let ((x630 (* 79228162514264337593543950336 x1062))) (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x630 (+ (* (x986 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (= x54 (or x1113 x536)))
(assert (x526 x427 x1119 x961 x1280))
(assert (x53 x1112))
(assert (= (x1201 (x300 x338)) x338))
(assert (x53 x773))
(assert (x53 x1501))
(assert (x53 x362))
(assert (x53 x1285))
(assert (= x252 (and x1126 x1185)))
(assert (= (x197 x1468) 0))
(assert (x307 x1391))
(assert (x526 x1119 x427 x477 x227))
(assert (= x40 (or (and x861 (not x1522)) x346)))
(assert (= (=> (and (or (and (not x288) (and (= x596 x558) (= x596 (x1295 (- x121 x702))) (not (< x121 x702)))) (and x288 (= 0 x558))) (and (= x288 (> x702 x121)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x256 x208))) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1061 x146))) (= (x1259 (+ x146 x1061)) x702) (= x121 (x1259 (+ x208 x256))) (= x256 (ite (> x85 x716) x716 x85)))) x1507) x776))
(assert (x1369 x1221))
(assert (x53 x334))
(assert (x53 x588))
(assert (= x30 (and x1230 (not x1009))))
(assert (x1223 (x1054 x731 96)))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x480 (+ (* (x986 x480 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x480 1461501637330902918203684832716283019655932542976)))) (x1253 x480 1461501637330902918203684832716283019655932542976) (x298 x480 1461501637330902918203684832716283019655932542976) (x1010 x480 1461501637330902918203684832716283019655932542976)))
(assert (and (x174 32 x5) (= (* x5 32) (x191 32 x5)) (x474 32 x5) (x987 32 x5) (and (= (- (* (- x5 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x5 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x191 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x5 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 32 (- x5 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x191 32 (- x5 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x5 32) (* x5 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x191 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x5))) (x533 32 x5) (x1273 32 x5)))
(assert (x1369 x564))
(assert (x1197 x1280 (- x961 x227)))
(assert (x53 x524))
(assert (x1369 x892))
(assert (x1197 x477 (- x227 x961)))
(assert (x53 x886))
(assert (x53 x1154))
(assert (x1297 x1068))
(assert (x53 x218))
(assert (x53 x1500))
(assert (x53 x826))
(assert (x53 x1014))
(assert (= x1101 (x300 (x1201 x1101))))
(assert (= (x1201 2769337888) (x202 2769337888)))
(assert (x290 x886))
(assert (x290 x1396))
(assert (x1223 x151))
(assert (x526 x961 x1280 x427 x1119))
(assert (= x1343 (and x1516 x1321)))
(assert (x53 x855))
(assert (x1297 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x326 (+ (* (x986 x326 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x326 1461501637330902918203684832716283019655932542976)))) (x1253 x326 1461501637330902918203684832716283019655932542976) (x298 x326 1461501637330902918203684832716283019655932542976) (x1010 x326 1461501637330902918203684832716283019655932542976)))
(assert (= (+ 1 (x300 x1124)) (x300 (x743 x1124 1))))
(assert (= x1087 (or x903 (and x810 (not x779)))))
(assert (x53 x45))
(assert (x53 x1101))
(assert (x1499 x108))
(assert (x53 x314))
(assert (x1297 x99))
(assert (=> (<= x408 10000) (= (x202 x408) (x1201 x408))))
(assert (= x1340 (or x682 x945)))
(assert (x53 x244))
(assert (x1223 x1272))
(assert (= (and (not x1431) x1140) x1256))
(assert (= (=> (= x351 x1296) x1476) x1173))
(assert (x1297 4294967295))
(assert (x1297 x373))
(assert (x53 x116))
(assert (x53 x1484))
(assert (x1223 x1228))
(assert (= 0 (x176 (x1259 (+ x386 64)))))
(assert (x53 x917))
(assert (x53 x1307))
(assert (x53 x7))
(assert (x53 x696))
(assert (x53 x69))
(assert (x53 x462))
(assert (x53 x511))
(assert (x1223 x635))
(assert (x53 x620))
(assert (= x457 (x300 (x1201 x457))))
(assert (x1499 x384))
(assert (= (and (not x190) x1058) x431))
(assert (x1488 x326))
(assert (x53 x702))
(assert (x53 x1055))
(assert (and (=> (> 32 0) (= x58 (+ (* (x986 x58 32) 32) (x1381 x58 32)))) (x1253 x58 32) (x298 x58 32) (x1010 x58 32)))
(assert (= (x202 2543820636) (x1201 2543820636)))
(assert (x53 x145))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x144 (+ (* (x986 x144 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x144 1461501637330902918203684832716283019655932542976)))) (x1253 x144 1461501637330902918203684832716283019655932542976) (x298 x144 1461501637330902918203684832716283019655932542976) (x1010 x144 1461501637330902918203684832716283019655932542976)))
(assert (= 0 (x176 x75)))
(assert (x53 x503))
(assert (x53 x581))
(assert (x53 x686))
(assert (x1496 x947))
(assert (x1499 x95))
(assert (= (x300 (x743 x1106 1)) (+ (x300 x1106) 1)))
(assert (x53 x739))
(assert (x53 x1351))
(assert (= (and x1004 (not x465)) x706))
(assert (= (and x557 x241) x617))
(assert (x53 x212))
(assert (x53 x1395))
(assert (x290 452312848583266388373324160190187140051835877600158453279131187530910662656))
(assert (x481 (- x961 x427)))
(assert (x481 x863))
(assert (= x1170 (and x328 (not x600))))
(assert (x53 x67))
(assert (= (and x1364 x366) x1434))
(assert (x53 x57))
(assert (x1297 x114))
(assert (= (and x811 (not x1252)) x141))
(assert (x53 x700))
(assert (= x763 (and x733 x568)))
(assert (x53 x154))
(assert (=> (<= (x1054 x1298 96) 10000) (= (x1201 (x1054 x1298 96)) (x202 (x1054 x1298 96)))))
(assert (= x532 (and (not x52) x213)))
(assert (x53 x471))
(assert (= x1002 (or x74 x966)))
(assert (x53 x729))
(assert (= (x197 x214) 0))
(assert (= (x788 (x1259 (+ x161 32))) 0))
(assert (= (x300 (x743 x271 1)) (+ (x300 x271) 1)))
(assert (x53 x1234))
(assert (=> (<= x960 10000) (= (x202 x960) (x1201 x960))))
(assert (x1223 x65))
(assert (x1499 x641))
(assert (x53 x1406))
(assert (= (x202 53555067238089503724735347336495418478014768613909373709225909316790851207168) (x1201 53555067238089503724735347336495418478014768613909373709225909316790851207168)))
(assert (x1197 x227 (- x477 x961)))
(assert (x53 x1306))
(assert (x1369 x559))
(assert (x53 x1076))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1337 (+ (* (x986 x1337 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x1337 1461501637330902918203684832716283019655932542976)))) (x1253 x1337 1461501637330902918203684832716283019655932542976) (x298 x1337 1461501637330902918203684832716283019655932542976) (x1010 x1337 1461501637330902918203684832716283019655932542976)))
(assert (x53 x599))
(assert (= (x1201 (x300 x666)) x666))
(assert (= x848 (or x875 x1255 x423 x617)))
(assert (x53 x866))
(assert (x53 x343))
(assert (x53 x546))
(assert (x53 x99))
(assert (x53 x20))
(assert (= (or x676 x1408) x22))
(assert (= x735 (=> (and (or (and (= x1386 x798) (not x1122)) (and x1122 (and (< x511 4294967296) (= 1 x798)))) (and (not (= x196 0)) (= (x1259 (+ x112 4)) x206) (= x206 x471) (= (x708 (x1201 x577)) x196) (= (> x1386 0) x1122))) x395)))
(assert (x307 x99))
(assert (= x136 (and x517 x61)))
(assert (= (+ (x300 x399) 1) (x300 (x743 x399 1))))
(assert (x53 x724))
(assert (x1297 x595))
(assert (x1223 (x1054 x376 96)))
(assert (= (+ (x300 x1086) 1) (x300 (x743 x1086 1))))
(assert (= x906 (x300 (x1201 x906))))
(assert (x1297 x1221))
(assert (= x1140 (or x33 x1094)))
(assert (= (x300 (x202 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x481 x1119))
(assert (x1197 x1119 (- x427 x1280)))
(assert (x53 x281))
(assert (x1369 x432))
(assert (x53 x1111))
(assert (x53 x485))
(assert (x53 x850))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x947 (+ (* (x986 x947 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x947 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x947 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x947 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x947 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x202 12283247964407756808830995669474934993630555597489544120741799677115838234624) (x1201 12283247964407756808830995669474934993630555597489544120741799677115838234624)))
(assert (= x128 (and x793 (not x1073))))
(assert (and (x174 x1062 79228162514264337593543950336) (= (* 79228162514264337593543950336 x1062) (x191 x1062 79228162514264337593543950336)) (x474 x1062 79228162514264337593543950336) (x987 x1062 79228162514264337593543950336) (and (= (- (* (- 115792089237316195423570985008687907853269984665561335876943319670319585689600) x1062) (- 13407807929942597099574024998205846127479365820583219383259601157675320746492338629038688038210230303195081502828938359349399943579666495733993146259865600)) (x191 (- x1062 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089237316195423570985008687907853269984665561335876943319670319585689600))) (= (* x1062 (- 115792089237316195423570985008687907853269984665561335876943319670319585689600)) (x191 x1062 (- 115792089237316195423570985008687907853269984665561335876943319670319585689600))) (= (- (* 79228162514264337593543950336 x1062) 9173994463960286046443283581208347763186259956673124494950355357547691504353939232280074212440502746218496) (x191 (- x1062 115792089237316195423570985008687907853269984665640564039457584007913129639936) 79228162514264337593543950336))) (x533 x1062 79228162514264337593543950336) (x1273 x1062 79228162514264337593543950336)))
(assert (x53 x1296))
(assert (= x1370 (and x1204 x27)))
(assert (x1369 x1198))
(assert (= (and x1485 x37) x1289))
(assert (x1369 x1469))
(assert (= 53555067238089503724735347336495418478014768613909373709225909316790851207168 (x300 (x202 53555067238089503724735347336495418478014768613909373709225909316790851207168))))
(assert (= (x300 (x1201 x65)) x65))
(assert (= (and x497 x1016) x1360))
(assert (x53 x1099))
(assert (x53 x1326))
(assert (= 2661379305446904779734859349833089258949455794555359447896749126450 (x300 (x1201 2661379305446904779734859349833089258949455794555359447896749126450))))
(assert (x53 x235))
(assert (x53 x295))
(assert (= (x300 (x202 4294967295)) 4294967295))
(assert (x1197 x227 (- x477 x1119)))
(assert (= (x202 3219105711) (x1201 3219105711)))
(assert (and (x1517 x932 79228162514264337593543950336) (x1412 x932 79228162514264337593543950336) (= (* 79228162514264337593543950336 (x986 x932 79228162514264337593543950336)) (- x932 (x1389 79228162514264337593543950335 x932))) (=> (and (> 79228162514264337593543950336 0) (> x932 0)) (and (< (- x932 79228162514264337593543950336) (* 79228162514264337593543950336 (x986 x932 79228162514264337593543950336))) (>= x932 (* 79228162514264337593543950336 (x986 x932 79228162514264337593543950336))))) (x1287 x932 79228162514264337593543950336) (x593 x932 79228162514264337593543950336)))
(assert (= x1275 (x300 (x1201 x1275))))
(assert (= x939 (x1201 (x300 x939))))
(assert (= x509 (x300 (x1201 x509))))
(assert (= 18446744073709551615 (x300 (x202 18446744073709551615))))
(assert (x53 x1064))
(assert (= x598 (x1201 (x300 x598))))
(assert (x1297 x154))
(assert (x1297 x505))
(assert (x481 (- x477 x1280)))
(assert (= (x300 (x743 x1387 1)) (+ 1 (x300 x1387))))
(assert (x53 x758))
(assert (= (and x980 x1489) x265))
(assert (x53 x709))
(assert (x53 x95))
(assert (= (and x140 x1152) x81))
(assert (x1499 x691))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1351 (+ (* (x986 x1351 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x1351 1461501637330902918203684832716283019655932542976)))) (x1253 x1351 1461501637330902918203684832716283019655932542976) (x298 x1351 1461501637330902918203684832716283019655932542976) (x1010 x1351 1461501637330902918203684832716283019655932542976)))
(assert (x53 x64))
(assert (= (or x431 x1184) x517))
(assert (=> (<= x1049 10000) (= (x1201 x1049) (x202 x1049))))
(assert (x53 x1149))
(assert (x53 x44))
(assert (= (=> (and (>= x551 0) (= x693 (= 0 x1405)) (= x1176 x352) (>= x1419 0) (<= x14 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1419) (= x1419 x407) (= x478 (x708 (x1201 x839))) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x453)) (> x453 163)) (<= x551 1461501637330902918203684832716283019655932542975) (> x478 0) (= x1444 x1014) (= x492 x267) (= x551 x1062) (= x1116 x825) (<= 0 x14) (= x234 x799) (= x407 x1011)) (and (=> (not x693) x962) (=> (and x693 (and (= x1326 (x1295 (- x453 4))) (not (= 2794781754 x604)) (not (< x604 2543820636)) (not (< x604 2769337888)) (= x139 (or (> x1326 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1326) true) (< x1326 160)))) (< x604 3219105711) (not (> 4 x453)) (not (= 2769337888 x604)) (= x604 2801674539) (> 2974191442 x604))) (and (=> (and (not x139) (and (= x825 x38) (= x492 x1206) (= (= x267 x492) x273) (= x1332 x234))) (and (=> (and x273 (and (= x843 (< 18446744073709551615 x1176)) (= x739 x1444))) (and (=> x843 x962) (=> (and (not x843) (and (= (x1259 (+ x55 31)) x751) (= x55 (x1259 (+ x352 4))) (= x456 (or (and (<= x453 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x751)) (and (= (<= x751 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x453 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x751 x453)))))) (and (=> (not x456) x962) (=> (and (and (= (x1276 x55) x738) (= x1073 (< 18446744073709551615 x738))) x456) (and (=> (and (and (= (x1259 (+ x707 x738)) x371) (= (x1259 (+ x55 32)) x707) (= x441 (> x371 x453))) (not x1073)) (and (=> x441 x962) (=> (and (not x441) (and (= (x1389 1461501637330902918203684832716283019655932542975 x373) x401) (= x373 (x586 (x202 0))) (= (x708 (x1201 x401)) x1308) (= (= x1308 0) x302))) (and (=> x302 x962) (=> (and (not x302) (and (or (and (and (= 1 x923) (< x1306 4294967296)) x9) (and (= x923 x283) (not x9))) (= x9 (< 0 x283)))) x502))))) (=> x1073 x962))))))) (=> (not x273) x962))) (=> x139 x962))))) x418))
(assert (= (x300 (x743 x372 1)) (+ (x300 x372) 1)))
(assert (= (=> (and (= (x1259 (+ 32 x1421)) x161) (= 128 x1494) (= (x1259 (+ 32 x1342)) x686) (= x1132 (x1389 1461501637330902918203684832716283019655932542975 x912)) (= (x1259 (+ 32 x161)) x1342) (= x1410 (x51 x161)) (= x2 (x1295 (- x161 32))) (= x472 x161) (= x912 (x1483 x2)) (= x694 (x1389 1461501637330902918203684832716283019655932542975 x912)) (<= x636 1461501637330902918203684832716283019655932542975) (= (x51 (x1259 (+ x161 96))) x1453) (= (x51 (x1259 (+ 32 x161))) x971) (= x694 x389) (= (x221 x1410 x971 x865 x1453) x636) (= x833 (< 0 x282)) (= x913 (x1295 (- x161 32))) (= x865 (x51 (x1259 (+ x161 64)))) (not (= x1132 0)) (= (x1259 (+ 32 x686)) x57)) (and (=> (and (and (= x1161 (x1259 (+ 128 x161))) (not (< x920 x1130)) (not (> x466 x48)) (= x70 (x1338 (x1201 x1062) (x202 14) 0)) (= x70 x1141) (= x1130 (x864 x1188)) (= x1188 (x743 x399 1)) (= x920 (x864 x1141)) (= (x743 x70 1) x399) (= (x1295 (- x920 x1130)) x48) (= x1161 x728) (= (x864 (x202 12)) x466)) (not x833)) x658) (=> (and (and (or (and (and (= x924 x618) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x191 x427 x1119)) (= x924 (x547 (x191 x427 x1119)))) (not x467)) (and (= 0 x618) x467)) (and (= x1155 (x743 x333 1)) (= (x1259 (+ 128 x161)) x1345) (= (x864 x452) x556) (not (> x951 x1208)) (= (x743 x744 1) x333) (= (x743 x1241 2) x452) (= x36 (x864 x333)) (= (x1338 (x1201 x1062) (x202 14) 0) x744) (= (= 0 x427) x467) (= (x1338 (x1201 x1062) (x202 20) 0) x1241) (= x1119 (x1389 4294967295 x958)) (= (x864 x1155) x951) (= (x1295 (- x1208 x951)) x427) (= x958 (x864 (x202 19))) (= x1277 x744) (= x1208 (x864 x1277)))) x833) x1264))) x496))
(assert (x53 x1286))
(assert (x1297 x559))
(assert (= x1172 (and x148 x1104)))
(assert (= x411 (and x263 x535)))
(assert (x53 x1510))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x58 (+ (* (x986 x58 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x58 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x58 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x58 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x58 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (+ 1 (x300 x876)) (x300 (x743 x876 1))))
(assert (= (and (not x846) x1017) x327))
(assert (= x634 (and (not x982) x1257)))
(assert (= x178 (=> (and (= (x1338 (x1201 x906) (x202 1) 0) x561) (= x172 (= 0 x940)) (= (x1259 (+ x970 256)) x105) (= x940 (x1389 1461501637330902918203684832716283019655932542975 x1351)) (= x1351 (x586 x561))) (and (=> (and (and (= x105 x546) (= x940 x1275)) (not x172)) x849) (=> (and x172 (and (= (x1259 (+ 4 x105)) x442) (= x1092 (= x1091 0)) (= x907 x442) (= (x586 (x202 0)) x946) (= (x1389 1461501637330902918203684832716283019655932542975 x946) x1278) (= x1091 (x708 (x1201 x1278))))) (and (=> (and (not x1092) (and (= (< 0 x1043) x133) (or (and x133 (and (= 1 x303) (< x1107 4294967296))) (and (not x133) (= x303 x1043))))) x623) (=> x1092 x962)))))))
(assert (x53 x76))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x154 (+ (* (x986 x154 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x154 1461501637330902918203684832716283019655932542976)))) (x1253 x154 1461501637330902918203684832716283019655932542976) (x298 x154 1461501637330902918203684832716283019655932542976) (x1010 x154 1461501637330902918203684832716283019655932542976)))
(assert (= (and x706 (not x569)) x84))
(assert (= x368 (and x469 x574)))
(assert (x1369 x154))
(assert (= (x1054 x932 96) (x986 x932 79228162514264337593543950336)))
(assert (x53 x722))
(assert (x1197 x961 (- x1280 x1119)))
(assert (x1369 x912))
(assert (x53 x297))
(assert (= (=> (and (= x1270 x887) (not (= 0 x883)) x1283 (= (= 0 x468) x713) (= x993 (x864 x1270)) (= (x1389 1461501637330902918203684832716283019655932542975 x993) x468) (= (x1389 1461501637330902918203684832716283019655932542975 x1337) x490) (= (x1389 1461501637330902918203684832716283019655932542975 x1337) x883) (= x887 (x1338 (x1201 x490) (x202 15) 0))) (and (=> (and (and (= x219 (x743 x887 3)) (= x990 (x864 x219)) (= x982 (= 0 x990))) (not x713)) (and (=> (and (not x982) (and (= (= x672 0) x576) (= (x743 x219 1) x205) (= (x864 x205) x672))) (and (=> (and (and (= x1076 x880) (= x113 1)) x576) x258) (=> (and (not x576) (and (= x1005 (x1338 (x1201 x906) (x202 1) 0)) (= (x864 x1005) x1469) (= x1398 (= x1143 0)) (= (x1389 1461501637330902918203684832716283019655932542975 x1469) x1143))) (and (=> (and (and (and (= (< 0 x1448) x1344) (= x1467 x816) (not (= 0 x773)) (= (x1259 (+ 4 x1076)) x1467) (= x773 (x708 (x1201 x151))) (= x151 (x1389 1461501637330902918203684832716283019655932542975 x814)) (= (x864 (x202 0)) x814)) (or (and (= x1448 x620) (not x1344)) (and x1344 (and (= 1 x620) (< x1108 4294967296))))) x1398) x152) (=> (and (and (= x112 x1076) (= x1143 x577)) (not x1398)) x735))))) (=> (and x982 (and (= x880 x1076) (= x113 4))) x258))) (=> (and x713 (and (= x1076 x880) (= 0 x113))) x258))) x1212))
(assert (x53 x410))
(assert (= x624 (and x21 (not x1294))))
(assert (x53 x237))
(assert (x53 x960))
(assert (and (x174 x235 79228162514264337593543950336) (= (* 79228162514264337593543950336 x235) (x191 x235 79228162514264337593543950336)) (x474 x235 79228162514264337593543950336) (x987 x235 79228162514264337593543950336) (and (= (- (* (- 115792089237316195423570985008687907853269984665561335876943319670319585689600) x235) (- 13407807929942597099574024998205846127479365820583219383259601157675320746492338629038688038210230303195081502828938359349399943579666495733993146259865600)) (x191 (- x235 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089237316195423570985008687907853269984665561335876943319670319585689600))) (= (* x235 (- 115792089237316195423570985008687907853269984665561335876943319670319585689600)) (x191 x235 (- 115792089237316195423570985008687907853269984665561335876943319670319585689600))) (= (- (* 79228162514264337593543950336 x235) 9173994463960286046443283581208347763186259956673124494950355357547691504353939232280074212440502746218496) (x191 (- x235 115792089237316195423570985008687907853269984665640564039457584007913129639936) 79228162514264337593543950336))) (x533 x235 79228162514264337593543950336) (x1273 x235 79228162514264337593543950336)))
(assert (x53 x603))
(assert (= (x300 (x202 2769337888)) 2769337888))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x216 (+ (* (x986 x216 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x216 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x216 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x216 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x216 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1197 x961 (- x1280 x227)))
(assert (x53 x73))
(assert (x53 x1493))
(assert (= x380 (or x639 x1209)))
(assert (= (=> (= x1366 (= x960 0)) (and (=> (and (not x1366) (and (= x573 (= 0 x1454)) (= x632 (x1259 (+ 4 x68))) (= x1454 (x708 (x1201 x960))) (= x632 x1099))) (and (=> (and (not x573) (and (= (> x1167 0) x1271) (or (not x1271) (and (and x613 (= (= x20 (x550 (x1201 x960))) x613) (> 4294967296 x44) (= x20 (x165 (x1201 x960))) (= x47 (x165 (x1201 x839))) x461 (= x461 (<= x47 (x550 (x1201 x839))))) x1271)))) x317) (=> x573 x962))) (=> (and (= x644 0) x1366) x238))) x991))
(assert (= (=> (and (or x1104 (not x1104)) (= x1104 (= x1167 0))) x1224) x317))
(assert (x1369 x425))
(assert (= (and x941 x9) x1072))
(assert (= 0 (x788 x118)))
(assert (= (x1054 x1236 248) (x986 x1236 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (and (=> (> 32 0) (= x938 (+ (* (x986 x938 32) 32) (x1381 x938 32)))) (x1253 x938 32) (x298 x938 32) (x1010 x938 32)))
(assert (x53 x279))
(assert (= x736 (and x342 x411)))
(assert (x53 x878))
(assert (x53 x1506))
(assert (x53 x863))
(assert (x1369 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (= (and x26 x1127) x897))
(assert (x53 x412))
(assert (x481 x427))
(assert (= x925 (and x1366 x1390)))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x564 (+ (* (x986 x564 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x564 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x564 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x564 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x564 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (and x1260 x106) x697))
(assert (= x1216 (and (not x1320) x25)))
(assert (x53 x728))
(assert (= x1323 (and (not x1400) x1095)))
(assert (x53 x1410))
(assert (= x1263 (and x1323 (not x616))))
(assert (x53 x480))
(assert (= x1222 (and x1491 (not x211))))
(assert (x53 x734))
(assert (x1369 x480))
(assert (x1369 x993))
(assert (=> (>= 10000 x635) (= (x1201 x635) (x202 x635))))
(assert (= x723 (and (not x809) x529)))
(assert (x53 x208))
(assert (x53 x799))
(assert (x481 x1513))
(assert (= (and x273 x1037) x1403))
(assert (=> (>= 10000 x151) (= (x202 x151) (x1201 x151))))
(assert (and (x174 x1225 79228162514264337593543950336) (= (* 79228162514264337593543950336 x1225) (x191 x1225 79228162514264337593543950336)) (x474 x1225 79228162514264337593543950336) (x987 x1225 79228162514264337593543950336) (and (= (- (* (- 115792089237316195423570985008687907853269984665561335876943319670319585689600) x1225) (- 13407807929942597099574024998205846127479365820583219383259601157675320746492338629038688038210230303195081502828938359349399943579666495733993146259865600)) (x191 (- x1225 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089237316195423570985008687907853269984665561335876943319670319585689600))) (= (* x1225 (- 115792089237316195423570985008687907853269984665561335876943319670319585689600)) (x191 x1225 (- 115792089237316195423570985008687907853269984665561335876943319670319585689600))) (= (- (* 79228162514264337593543950336 x1225) 9173994463960286046443283581208347763186259956673124494950355357547691504353939232280074212440502746218496) (x191 (- x1225 115792089237316195423570985008687907853269984665640564039457584007913129639936) 79228162514264337593543950336))) (x533 x1225 79228162514264337593543950336) (x1273 x1225 79228162514264337593543950336)))
(assert (x53 x386))
(assert (= x1486 (=> (and (= x63 (ite (< x1521 x822) x1521 x822)) (= (< x1112 x393) x983) (= x1112 (x1259 (+ x393 x63)))) (and (=> (and (not x983) (and (= x1320 (< x637 x1382)) (= x637 (x1259 (+ x1131 x1382))))) (and (=> (and (= x995 (< x1112 x637)) (not x1320)) (and (=> (and (= 0 x97) x995) x687) (=> (and (not x995) (= (< x1112 x637) x140)) (and (=> x140 x962) (=> (and (not x140) (and (= (x1295 (- x1112 x637)) x463) (= x97 x463))) x687))))) (=> x1320 x962))) (=> x983 x962)))))
(assert (x53 x808))
(assert (x53 x579))
(assert (= (and x535 (not x263)) x26))
(assert (=> (>= 10000 x1272) (= (x202 x1272) (x1201 x1272))))
(assert (= (x197 x514) 0))
(assert (= (x176 x386) 0))
(assert (x53 x283))
(assert (x1369 x144))
(assert (x53 x111))
(assert (x53 x632))
(assert (x53 x591))
(assert (x53 x646))
(assert (x53 x857))
(assert (= x476 (or x856 x344)))
(assert (let ((x630 (* x235 79228162514264337593543950336))) (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x630 (+ (* (x986 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (x53 x1349))
(assert (and (=> (> 32 0) (= x1003 (+ (* (x986 x1003 32) 32) (x1381 x1003 32)))) (x1253 x1003 32) (x298 x1003 32) (x1010 x1003 32)))
(assert (x685 x783))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x912 (+ (* (x986 x912 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x912 1461501637330902918203684832716283019655932542976)))) (x1253 x912 1461501637330902918203684832716283019655932542976) (x298 x912 1461501637330902918203684832716283019655932542976) (x1010 x912 1461501637330902918203684832716283019655932542976)))
(assert (x1369 x505))
(assert (x53 x68))
(assert (= (and x1398 x690) x261))
(assert (x1297 x31))
(assert (and (=> (> 32 0) (= x1221 (+ (* (x986 x1221 32) 32) (x1381 x1221 32)))) (x1253 x1221 32) (x298 x1221 32) (x1010 x1221 32)))
(assert (= (and x627 (not x242)) x291))
(assert (= x1458 (and x142 x713)))
(assert (x53 x409))
(assert (x1369 x938))
(assert (x53 x907))
(assert (x53 x582))
(assert (x53 x105))
(assert (x1488 x537))
(assert (x1297 x768))
(assert (= x355 (x300 (x1201 x355))))
(assert (= (x547 (* x1062 79228162514264337593543950336)) (x1508 x1062 96)))
(assert (x526 x1280 x961 x427 x1119))
(assert (x53 x1308))
(assert (= (and (not x749) x1) x135))
(assert (=> (<= x244 10000) (= (x202 x244) (x1201 x244))))
(assert (= (x197 x619) 0))
(assert (=> (>= 10000 (x1054 x932 96)) (= (x1201 (x1054 x932 96)) (x202 (x1054 x932 96)))))
(assert (x53 x559))
(assert (x53 x602))
(assert (x53 x764))
(assert (x53 x1278))
(assert (x53 x23))
(assert (x53 x534))
(assert true)
(assert (x53 x556))
(assert (x1499 x559))
(assert (x53 x1397))
(assert (x53 x453))
(assert (x53 x953))
(assert (and (x1517 x1236 452312848583266388373324160190187140051835877600158453279131187530910662656) (x1412 x1236 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x986 x1236 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1236 (x1389 452312848583266388373324160190187140051835877600158453279131187530910662655 x1236))) (=> (and (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0) (> x1236 0)) (and (< (- x1236 452312848583266388373324160190187140051835877600158453279131187530910662656) (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x986 x1236 452312848583266388373324160190187140051835877600158453279131187530910662656))) (>= x1236 (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x986 x1236 452312848583266388373324160190187140051835877600158453279131187530910662656))))) (x1287 x1236 452312848583266388373324160190187140051835877600158453279131187530910662656) (x593 x1236 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (= x1065 (x1201 (x300 x1065))))
(assert (= (or x252 x1214) x733))
(assert (x481 (- x961 x1119)))
(assert (= x1113 (or x844 x675)))
(assert (x53 x1062))
(assert (and (x174 x1459 79228162514264337593543950336) (= (* 79228162514264337593543950336 x1459) (x191 x1459 79228162514264337593543950336)) (x474 x1459 79228162514264337593543950336) (x987 x1459 79228162514264337593543950336) (and (= (- (* (- 115792089237316195423570985008687907853269984665561335876943319670319585689600) x1459) (- 13407807929942597099574024998205846127479365820583219383259601157675320746492338629038688038210230303195081502828938359349399943579666495733993146259865600)) (x191 (- x1459 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089237316195423570985008687907853269984665561335876943319670319585689600))) (= (* x1459 (- 115792089237316195423570985008687907853269984665561335876943319670319585689600)) (x191 x1459 (- 115792089237316195423570985008687907853269984665561335876943319670319585689600))) (= (- (* 79228162514264337593543950336 x1459) 9173994463960286046443283581208347763186259956673124494950355357547691504353939232280074212440502746218496) (x191 (- x1459 115792089237316195423570985008687907853269984665640564039457584007913129639936) 79228162514264337593543950336))) (x533 x1459 79228162514264337593543950336) (x1273 x1459 79228162514264337593543950336)))
(assert (x53 x463))
(assert (= 2974191442 (x300 (x202 2974191442))))
(assert (= (+ 1 (x300 x1071)) (x300 (x743 x1071 1))))
(assert (x1369 32))
(assert (x1297 x326))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1068 (+ (* (x986 x1068 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x1068 1461501637330902918203684832716283019655932542976)))) (x1253 x1068 1461501637330902918203684832716283019655932542976) (x298 x1068 1461501637330902918203684832716283019655932542976) (x1010 x1068 1461501637330902918203684832716283019655932542976)))
(assert (= (or (and x1089 (not x249)) x1479) x123))
(assert (x53 x1524))
(assert (= (x300 (x1201 x1123)) x1123))
(assert (x1369 1461501637330902918203684832716283019655932542976))
(assert (x53 x1453))
(assert (x1223 x355))
(assert (let ((x630 (* 79228162514264337593543950336 x492))) (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x630 (+ (* (x986 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (x481 x235))
(assert (x53 x906))
(assert (x53 x1186))
(assert (= x1015 (and x86 (not x321))))
(assert (x53 x170))
(assert (x1297 x691))
(assert (= (+ (x300 x583) 1) (x300 (x743 x583 1))))
(assert (= (x300 (x202 79228162514264337593543950336)) 79228162514264337593543950336))
(assert (x1496 x505))
(assert (= x311 (=> (and (and (= (x1259 (+ 31 x1286)) x732) (not (= 0 x42)) (= x1076 (x1259 (+ x370 128))) (= 0 x1169) (= x1169 (x493 128)) (not (or (> x1286 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1286 32) (= true (<= x1286 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (= (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x732) x370) (= x1294 true)) (or (and (= x1283 x1294) x1294) (and (and (= x1283 (not x484)) (= x1150 (x1338 (x1201 x1062) x1324 0)) (= x484 (= 0 x1232)) (= (x864 x1150) x783) (= x1324 (x1338 (x1201 x1062) (x202 21) 0)) (= (x1389 255 x783) x1232)) (not x1294)))) x1212)))
(assert (x397 x961 x1280 x427 x1119))
(assert (= x1012 (and x444 x1166)))
(assert (x53 x970))
(assert (x290 x376))
(assert (= 2543820636 (x300 (x202 2543820636))))
(assert (x290 x359))
(assert (= (x202 2974191442) (x1201 2974191442)))
(assert (x53 x108))
(assert (= (x197 x90) 0))
(assert (= (x300 (x743 x918 1)) (+ (x300 x918) 1)))
(assert (= (=> (= (= 0 x923) x1103) (and (=> (and (and (= (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x194) x470) (= x194 (x1259 (+ x1306 31))) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1306) (and (< x1306 32) (= true (<= x1306 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x889) (= x1336 (x1259 (+ 128 x470)))) (not x1103)) (and (=> (and (and (= (= x392 0) x1447) (= x392 (x1233 128))) (not x889)) (and (=> (not x1447) x962) (=> (and (and (or (and x937 (= x1213 x937)) (and (not x937) (and (= x1247 (x1338 (x1201 x1062) x1045 0)) (= x1045 (x1338 (x1201 x1062) (x202 21) 0)) (= x193 (= x1395 0)) (= x1395 (x1389 255 x114)) (= x114 (x586 x1247)) (= (not x193) x1213)))) (= x937 true)) x1447) x1373))) (=> x889 x962))) (=> x1103 x962))) x502))
(assert (x1297 1461501637330902918203684832716283019655932542975))
(assert (x1499 x946))
(assert (= (and (not x557) x241) x574))
(assert (= x323 (and x1491 x211)))
(assert (= (and x200 x1447) x92))
(assert (x53 x912))
(assert (x53 x971))
(assert (x1496 x938))
(assert (= x1096 (=> (and (or (and x1105 (and (< x1417 4294967296) (= 1 x43))) (and (not x1105) (= x43 x820))) (and (= (< 0 x820) x1105) (not (= x545 0)) (= x545 (x708 (x1201 x680))))) x611)))
(assert (x53 x1319))
(assert (x1297 x58))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x1300 (+ (* (x986 x1300 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x1300 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x1300 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x1300 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x1300 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (or x1165 x1436) x210))
(assert (x1223 x851))
(assert (x53 x144))
(assert (x53 x1231))
(assert (x53 x1248))
(assert (x481 32))
(assert (= x1228 (x300 (x1201 x1228))))
(assert (= (+ 1 (x300 x1078)) (x300 (x743 x1078 1))))
(assert (= x1339 (and x86 x321)))
(assert (= x690 (and (not x576) x634)))
(assert (x53 x625))
(assert (= (or x49 x922) x266))
(assert (x53 x1386))
(assert (x53 x419))
(assert (x53 x1348))
(assert (x53 x163))
(assert (x526 x227 x477 x961 x1280))
(assert (x526 x227 x477 x427 x1119))
(assert (x53 x47))
(assert (x1499 x959))
(assert (x1223 (x1054 x1243 96)))
(assert (x53 x1049))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x31 (+ (* (x986 x31 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x31 1461501637330902918203684832716283019655932542976)))) (x1253 x31 1461501637330902918203684832716283019655932542976) (x298 x31 1461501637330902918203684832716283019655932542976) (x1010 x31 1461501637330902918203684832716283019655932542976)))
(assert (x53 x443))
(assert (and (x1517 x1298 79228162514264337593543950336) (x1412 x1298 79228162514264337593543950336) (= (* 79228162514264337593543950336 (x986 x1298 79228162514264337593543950336)) (- x1298 (x1389 79228162514264337593543950335 x1298))) (=> (and (> 79228162514264337593543950336 0) (> x1298 0)) (and (< (- x1298 79228162514264337593543950336) (* 79228162514264337593543950336 (x986 x1298 79228162514264337593543950336))) (>= x1298 (* 79228162514264337593543950336 (x986 x1298 79228162514264337593543950336))))) (x1287 x1298 79228162514264337593543950336) (x593 x1298 79228162514264337593543950336)))
(assert (x53 x938))
(assert (x53 x426))
(assert (and (=> (> 256 0) (= x783 (+ (* (x986 x783 256) 256) (x1381 x783 256)))) (x1253 x783 256) (x298 x783 256) (x1010 x783 256)))
(assert (x53 x1050))
(assert (x1369 (* 79228162514264337593543950336 x1062)))
(assert (= (and x1257 x982) x1449))
(assert (x53 x553))
(assert (x397 x427 x1119 x227 x477))
(assert (x53 x932))
(assert (=> (>= 10000 x975) (= (x1201 x975) (x202 x975))))
(assert (= (x300 (x202 3219105711)) 3219105711))
(assert (= x1095 (or x1434 x1250)))
(assert (x53 x272))
(assert (x53 x55))
(assert (= x529 (or x955 x1432)))
(assert (x53 x860))
(assert (x53 x707))
(assert (x53 x468))
(assert (= (x788 x161) 0))
(assert (x1496 x425))
(assert (x53 x276))
(assert (x53 x1000))
(assert (x1369 x1307))
(assert (x53 x175))
(assert (x53 x1116))
(assert (= x234 (x300 (x1201 x234))))
(assert (x53 x491))
(assert (x53 x438))
(assert (= 0 (x788 (x1259 (+ 64 x161)))))
(assert (and (=> (> 256 0) (= x114 (+ (* (x986 x114 256) 256) (x1381 x114 256)))) (x1253 x114 256) (x298 x114 256) (x1010 x114 256)))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x432 (+ (* (x986 x432 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x432 1461501637330902918203684832716283019655932542976)))) (x1253 x432 1461501637330902918203684832716283019655932542976) (x298 x432 1461501637330902918203684832716283019655932542976) (x1010 x432 1461501637330902918203684832716283019655932542976)))
(assert (= (and (not x1260) x106) x434))
(assert (= x21 (or x1039 x1051)))
(assert (x290 x1236))
(assert (= x1001 (or x718 (and x210 (not x230)))))
(assert (x307 x958))
(assert (= (=> (and (= x1460 (x1259 (+ 4 x250))) (= (x708 (x1201 x1101)) x1081) (= x1027 (= x1081 0)) (= x1460 x204)) (and (=> (and (and (or (and (= x605 x295) (not x190)) (and (and (= x605 1) (< x888 4294967296)) x190)) (= x190 (> x295 0))) (not x1027)) x310) (=> x1027 x962))) x752))
(assert (x1297 x1337))
(assert (and (=> (> 32 0) (= x1109 (+ (* (x986 x1109 32) 32) (x1381 x1109 32)))) (x1253 x1109 32) (x298 x1109 32) (x1010 x1109 32)))
(assert (x53 x226))
(assert (x53 x920))
(assert (x53 x359))
(assert (x53 x1337))
(assert (= x881 (and x985 x669)))
(assert (= (or x898 x1072) x1310))
(assert (x53 x1494))
(assert (x53 x1193))
(assert (= (and (not x232) x1423) x765))
(assert (x53 x107))
(assert (x1223 x234))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x156 (+ (* (x986 x156 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x156 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x156 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x156 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x156 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1297 x594))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x425 (+ (* (x986 x425 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x425 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x425 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x425 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x425 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (and x775 x166) x1194))
(assert (and (=> (> 32 0) (= x732 (+ (* (x986 x732 32) 32) (x1381 x732 32)))) (x1253 x732 32) (x298 x732 32) (x1010 x732 32)))
(assert (= x429 (and x1140 x1431)))
(assert (= x395 (=> (and (= (x1259 (+ x112 x855)) x1026) (= x361 (x986 x805 79228162514264337593543950336)) (= x1026 x880) (= x1455 (x1389 4294967295 x361)) (= x349 (> x1455 x1401)) (= (x1514 x410) x1401) (= (ite x349 2 3) x113) (not (= x798 0)) (= (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x505) x855) (not (or (and (< x511 32) (= (<= x511 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x511 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x410 x112) (= (x1259 (+ 31 x511)) x505) (= (x864 (x202 13)) x805)) x258)))
(assert (x481 (- x427 x477)))
(assert (= (and x809 x529) x1008))
(assert (x53 x289))
(assert (x53 x420))
(assert (x53 x203))
(assert (x1197 x1280 (- x961 x1119)))
(assert (= (=> (and (= x1407 (not x354)) (= x354 x78) (= x1407 x1357)) x1357) x1435))
(assert (x1499 x1068))
(assert (= 0 (x788 x410)))
(assert (x53 x1131))
(assert (=> (<= x1123 10000) (= (x202 x1123) (x1201 x1123))))
(assert (x397 x227 x477 x961 x1280))
(assert (x53 x472))
(assert (= x408 (x300 (x1201 x408))))
(assert (x1297 x156))
(assert (= (x788 x908) 0))
(assert (x1369 x156))
(assert (= x611 (=> (and (= (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1109) x1163) (not (or (and (= true (<= x1417 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 32 x1417)) (> x1417 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1159 (> x1490 0)) (not (= x43 0)) (= (x1259 (+ x1163 x724)) x853) (= (x1259 (+ 31 x1417)) x1109) (= x514 x724) (= (x1341 x514) x842)) (and (=> (and (= x1274 0) (not x1159)) x1251) (=> (and x1159 (and (= x1057 (x1338 (x1201 x65) (x202 1) 0)) (= (= 0 x1244) x1009) (= x1068 (x864 x1057)) (= x1244 (x1389 1461501637330902918203684832716283019655932542975 x1068)))) (and (=> (and (and (= x852 x853) (= x1244 x355)) (not x1009)) x1461) (=> (and (and (or (and x1485 (and (= 1 x400) (> 4294967296 x931))) (and (= x400 x831) (not x1485))) (and (not (= 0 x324)) (= x324 (x708 (x1201 x1123))) (= x1492 (x1259 (+ 4 x853))) (= x522 x1492) (= (< 0 x831) x1485) (= x1123 (x1389 1461501637330902918203684832716283019655932542975 x432)) (= (x864 (x202 0)) x432))) x1009) x1157)))))))
(assert (x1496 x1020))
(assert (= (=> (= x644 x857) x566) x238))
(assert (= (and (not x284) x1121) x504))
(assert (x481 (- x1280 x427)))
(assert (= (+ 1 (x300 x819)) (x300 (x743 x819 1))))
(assert (= (and (not x1024) x291) x882))
(assert (x481 79228162514264337593543950336))
(assert (and (=> (> 32 0) (= x216 (+ (* (x986 x216 32) 32) (x1381 x216 32)))) (x1253 x216 32) (x298 x216 32) (x1010 x216 32)))
(assert (x53 x1450))
(assert (x53 x112))
(assert (= (or x531 x433) x1089))
(assert (= x24 (and (not x1122) x1148)))
(assert (= x1250 (and x322 (not x172))))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x595 (+ (* (x986 x595 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x595 1461501637330902918203684832716283019655932542976)))) (x1253 x595 1461501637330902918203684832716283019655932542976) (x298 x595 1461501637330902918203684832716283019655932542976) (x1010 x595 1461501637330902918203684832716283019655932542976)))
(assert (= 0 (x176 (x1259 (+ 32 x386)))))
(assert (x1197 x427 x1119))
(assert (= x508 (and x661 x1374)))
(assert (x53 x885))
(assert (x53 x748))
(assert (x53 x301))
(assert (and (x1517 x270 79228162514264337593543950336) (x1412 x270 79228162514264337593543950336) (= (* 79228162514264337593543950336 (x986 x270 79228162514264337593543950336)) (- x270 (x1389 79228162514264337593543950335 x270))) (=> (and (> 79228162514264337593543950336 0) (> x270 0)) (and (< (- x270 79228162514264337593543950336) (* 79228162514264337593543950336 (x986 x270 79228162514264337593543950336))) (>= x270 (* 79228162514264337593543950336 (x986 x270 79228162514264337593543950336))))) (x1287 x270 79228162514264337593543950336) (x593 x270 79228162514264337593543950336)))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x1284 (+ (* (x986 x1284 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x1284 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x1284 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x1284 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x1284 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x53 x712))
(assert (= (or x396 x1304) x1491))
(assert (x481 (- x1119 x961)))
(assert (x53 x825))
(assert (=> (<= x490 10000) (= (x1201 x490) (x202 x490))))
(assert (x53 x1146))
(assert (x1297 x432))
(assert (x53 x831))
(assert (= (and x230 x210) x718))
(assert (x481 x1225))
(assert (x53 x1469))
(assert (x1297 x115))
(assert (=> (>= 10000 x457) (= (x1201 x457) (x202 x457))))
(assert (= (=> (and (or (and (not x560) (= x296 x1399)) (and x560 (and (> 4294967296 x159) (= x1399 1)))) (and (= x1459 x1069) (not (= x337 0)) (not (or (and (= (<= x369 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 160 x369)) (> x369 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x734 x509) (= x1384 x1180) (= (x1259 (+ x175 31)) x647) (= x1050 2801674539) (= (x1389 1461501637330902918203684832716283019655932542975 x384) x1272) (= x175 (x1259 (+ x1180 4))) (= 0 x203) (not (< 18446744073709551615 x1384)) (>= 1461501637330902918203684832716283019655932542975 x233) (= x1490 x334) (<= 0 x1069) (>= 1461501637330902918203684832716283019655932542975 x1242) (> 2974191442 x1050) (<= x1069 1461501637330902918203684832716283019655932542975) (< 0 x862) (>= 1461501637330902918203684832716283019655932542975 x1064) (= (x864 (x202 0)) x384) (not (< x1050 2769337888)) (= x450 x233) (= x952 x509) (not (> 2543820636 x1050)) (= x1246 (x11 x175)) (<= x954 1461501637330902918203684832716283019655932542975) (= x1064 x80) (= x157 (not (= x578 x101))) (and (> x1334 163) (= true (<= x1334 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (<= 0 x233) (= (x708 (x1201 x1272)) x337) (= x612 x260) (= x101 x1062) (= x1242 x1459) (<= 0 x954) (< x1050 3219105711) (<= 0 x1378) (= true x93) (= false x1361) (= (x1259 (+ x1246 x94)) x835) (= x362 x281) (= (x1295 (- x1334 4)) x369) (= x94 (x1259 (+ 32 x175))) (= x1490 x1424) (>= x1242 0) (not (= 2794781754 x1050)) (= x203 x1393) (not (= 2769337888 x1050)) (= x862 (x708 (x1201 x839))) (= x560 (< 0 x296)) (not (> x835 x1334)) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x647) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1334)) (and (< x647 x1334) (= (<= x647 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1334 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x1064 x443) (= x362 x870) (= x1459 x578) (not (< x1334 4)) x157 (not (> x1246 18446744073709551615)) (<= x1378 1461501637330902918203684832716283019655932542975) (= x260 x954))) x1117) x943))
(assert (x53 x131))
(assert (x53 x1011))
(assert (x481 (- x477 x427)))
(assert (x53 x795))
(assert (x397 x1119 x427 x961 x1280))
(assert (x53 x570))
(assert (= x147 (and x517 (not x61))))
(assert (x53 x703))
(assert (= (and (not x467) x1498) x856))
(assert (x1369 x194))
(assert (x53 x247))
(assert (x53 x42))
(assert (= (=> (and (not (< x558 x334)) (= x524 x1135)) x16) x1507))
(assert (x53 x1280))
(assert (and (x1517 x1243 79228162514264337593543950336) (x1412 x1243 79228162514264337593543950336) (= (* 79228162514264337593543950336 (x986 x1243 79228162514264337593543950336)) (- x1243 (x1389 79228162514264337593543950335 x1243))) (=> (and (> 79228162514264337593543950336 0) (> x1243 0)) (and (< (- x1243 79228162514264337593543950336) (* 79228162514264337593543950336 (x986 x1243 79228162514264337593543950336))) (>= x1243 (* 79228162514264337593543950336 (x986 x1243 79228162514264337593543950336))))) (x1287 x1243 79228162514264337593543950336) (x593 x1243 79228162514264337593543950336)))
(assert (x53 x1020))
(assert (=> (>= 10000 x1248) (= (x202 x1248) (x1201 x1248))))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x691 (+ (* (x986 x691 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x691 1461501637330902918203684832716283019655932542976)))) (x1253 x691 1461501637330902918203684832716283019655932542976) (x298 x691 1461501637330902918203684832716283019655932542976) (x1010 x691 1461501637330902918203684832716283019655932542976)))
(assert (x53 x1334))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x384 (+ (* (x986 x384 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x384 1461501637330902918203684832716283019655932542976)))) (x1253 x384 1461501637330902918203684832716283019655932542976) (x298 x384 1461501637330902918203684832716283019655932542976) (x1010 x384 1461501637330902918203684832716283019655932542976)))
(assert (x1297 x111))
(assert (x53 x1330))
(assert (= x832 (and x377 (not x833))))
(assert (= x16 (=> (and (= (= 0 x1402) x501) (= (x1389 1461501637330902918203684832716283019655932542975 x154) x1402) (= (x1338 (x1201 x906) (x202 1) 0) x606) (= x154 (x864 x606)) (= (x1259 (+ 256 x1135)) x704)) (and (=> (and (not x501) (and (= x680 x1402) (= x704 x724))) x1096) (=> (and x501 (and (and (not (= 0 x247)) (= x1301 (> x1519 0)) (= x408 (x1389 1461501637330902918203684832716283019655932542975 x641)) (= (x708 (x1201 x408)) x247) (= (x1259 (+ 4 x704)) x1231) (= (x864 (x202 0)) x641) (= x910 x1231)) (or (and (= x1519 x79) (not x1301)) (and x1301 (and (< x1290 4294967296) (= 1 x79)))))) x475)))))
(assert (= (x300 (x743 x1347 1)) (+ (x300 x1347) 1)))
(assert (= (+ 1 (x300 x219)) (x300 (x743 x219 1))))
(assert (x53 x607))
(assert (x53 x1167))
(assert (= (and x456 x187) x793))
(assert (x53 x1345))
(assert (= (and x1082 (not x1092)) x633))
(assert (x53 x787))
(assert (x1369 x595))
(assert (x53 x1457))
(assert (= (and (not x488) x871) x12))
(assert (= x654 (and (not x1516) x1321)))
(assert (x1369 x326))
(assert (x53 x1468))
(assert (x53 x313))
(assert (x481 x1459))
(assert (= (and x1380 (not x889)) x200))
(assert (= (x300 (x743 x744 1)) (+ 1 (x300 x744))))
(assert (x53 x1228))
(assert (x53 x642))
(assert (x526 x1280 x961 x227 x477))
(assert (x481 (- x227 x961)))
(assert (and (x1517 x592 452312848583266388373324160190187140051835877600158453279131187530910662656) (x1412 x592 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x986 x592 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x592 (x1389 452312848583266388373324160190187140051835877600158453279131187530910662655 x592))) (=> (and (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0) (> x592 0)) (and (< (- x592 452312848583266388373324160190187140051835877600158453279131187530910662656) (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x986 x592 452312848583266388373324160190187140051835877600158453279131187530910662656))) (>= x592 (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x986 x592 452312848583266388373324160190187140051835877600158453279131187530910662656))))) (x1287 x592 452312848583266388373324160190187140051835877600158453279131187530910662656) (x593 x592 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (= (and x985 (not x669)) x919))
(assert (x1369 x946))
(assert (= (and (not x761) x1237) x1474))
(assert (x53 x374))
(assert (= 4294967296 (x300 (x202 4294967296))))
(assert (= x1436 (or x40 x185)))
(assert (= 0 (x788 x1346)))
(assert (= (+ 1 (x300 x1191)) (x300 (x743 x1191 1))))
(assert (= (x300 (x202 2794781754)) 2794781754))
(assert (x1496 x58))
(assert (= x552 (or x1194 x87)))
(assert (x53 x648))
(assert (x1297 x1300))
(assert (x53 x355))
(assert (x53 x1091))
(assert (= (and (not x1301) x506) x1209))
(assert (x53 x36))
(assert (= x837 (or x711 x1325)))
(assert (x53 x780))
(assert (x53 x1481))
(assert (= (x176 (x1259 (+ 96 x386))) 0))
(assert (= (and x504 (not x19)) x790))
(assert (x397 x477 x227 x427 x1119))
(assert (x53 x975))
(assert (x53 x1018))
(assert (x1369 x1064))
(assert (x53 x216))
(assert (x53 x618))
(assert (x53 x413))
(assert (x53 x1074))
(assert (x1369 (* x235 79228162514264337593543950336)))
(assert (x53 x904))
(assert (x526 x477 x227 x1280 x961))
(assert (= (x300 (x743 x1452 1)) (+ 1 (x300 x1452))))
(assert (= (x300 (x743 x1227 1)) (+ 1 (x300 x1227))))
(assert (x53 x869))
(assert (= x379 (=> (and (= (x518 x162) x41) (>= 1461501637330902918203684832716283019655932542975 x41) (= x162 x64) (not (or (> x660 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x660)) (> 32 x660)))) (= x851 x41) (= x802 x997) (= x968 (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x938)) (= x938 (x1259 (+ 31 x660))) (= (x1259 (+ x968 x64)) x997) (not (= 0 x1495))) x1189)))
(assert (x53 x751))
(assert (= (or x327 x416) x1423))
(assert (= 0 (x197 x1350)))
(assert (x290 x805))
(assert (= (x788 x162) 0))
(assert (= x1512 (and x937 x92)))
(assert (x53 x449))
(assert (and (=> (> 32 0) (= x564 (+ (* (x986 x564 32) 32) (x1381 x564 32)))) (x1253 x564 32) (x298 x564 32) (x1010 x564 32)))
(assert (x53 x1061))
(assert (x53 x1208))
(assert (x1223 x1177))
(assert (= 107954783943672036892603255375593993710912147498776614820764573710931487358976 (x300 (x202 107954783943672036892603255375593993710912147498776614820764573710931487358976))))
(assert (= x1051 (and x1425 x1196)))
(assert (x1499 x1351))
(assert (= (+ 1 (x300 x201)) (x300 (x743 x201 1))))
(assert (x53 x1393))
(assert (= (x300 (x1201 x1272)) x1272))
(assert (= (and x504 x19) x1422))
(assert (x1223 (x1054 x1396 96)))
(assert (= 0 (x176 x878)))
(assert (= x416 (or x801 x854)))
(assert (= (x300 (x1201 x1278)) x1278))
(assert (x1297 x1307))
(assert (x53 x270))
(assert (= (x202 79228162514264337593543950336) (x1201 79228162514264337593543950336)))
(assert (x1369 x958))
(assert (x53 x551))
(assert (and (=> (> 32 0) (= x947 (+ (* (x986 x947 32) 32) (x1381 x947 32)))) (x1253 x947 32) (x298 x947 32) (x1010 x947 32)))
(assert (= (x1508 x1225 96) (x547 (* 79228162514264337593543950336 x1225))))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1064 (+ (* (x986 x1064 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x1064 1461501637330902918203684832716283019655932542976)))) (x1253 x1064 1461501637330902918203684832716283019655932542976) (x298 x1064 1461501637330902918203684832716283019655932542976) (x1010 x1064 1461501637330902918203684832716283019655932542976)))
(assert (and (x1517 x376 79228162514264337593543950336) (x1412 x376 79228162514264337593543950336) (= (* 79228162514264337593543950336 (x986 x376 79228162514264337593543950336)) (- x376 (x1389 79228162514264337593543950335 x376))) (=> (and (> 79228162514264337593543950336 0) (> x376 0)) (and (< (- x376 79228162514264337593543950336) (* 79228162514264337593543950336 (x986 x376 79228162514264337593543950336))) (>= x376 (* 79228162514264337593543950336 (x986 x376 79228162514264337593543950336))))) (x1287 x376 79228162514264337593543950336) (x593 x376 79228162514264337593543950336)))
(assert (x53 x250))
(assert (x481 (- x227 x1280)))
(assert (x53 x1168))
(assert (x53 x537))
(assert (x481 (- x961 x227)))
(assert (= (x1201 57896044618658097711785492504343953926418782139537452191302581570759080747168) (x202 57896044618658097711785492504343953926418782139537452191302581570759080747168)))
(assert (x53 x839))
(assert (x53 x129))
(assert (x481 (- x1280 x477)))
(assert (x53 x835))
(assert (not x891))
(assert (x1499 x66))
(assert (x1297 x1211))
(assert (x53 x548))
(assert (x53 x194))
(assert (x1223 x1278))
(assert (= (and x1403 (not x843)) x187))
(assert (x1223 x1459))
(assert (= 0 (x788 (x1259 (+ 96 x161)))))
(assert (x53 x164))
(assert (x1499 x367))
(assert (= (or (and (not x1104) x148) x1172) x1374))
(assert (= 0 (x176 x1154)))
(assert (= x639 (and x506 x1301)))
(assert (x53 x255))
(assert (and (x1517 x805 79228162514264337593543950336) (x1412 x805 79228162514264337593543950336) (= (* 79228162514264337593543950336 (x986 x805 79228162514264337593543950336)) (- x805 (x1389 79228162514264337593543950335 x805))) (=> (and (> 79228162514264337593543950336 0) (> x805 0)) (and (< (- x805 79228162514264337593543950336) (* 79228162514264337593543950336 (x986 x805 79228162514264337593543950336))) (>= x805 (* 79228162514264337593543950336 (x986 x805 79228162514264337593543950336))))) (x1287 x805 79228162514264337593543950336) (x593 x805 79228162514264337593543950336)))
(assert (= (x300 (x1201 (x1054 x1396 96))) (x1054 x1396 96)))
(assert (=> (>= 10000 x1459) (= (x1201 x1459) (x202 x1459))))
(assert (x1297 x66))
(assert (x1223 x960))
(assert (x53 x466))
(assert (= x1196 true))
(assert (x1297 x958))
(assert (x53 x1182))
(assert (= x519 (=> (and (or x1522 (not x1522)) (= x1522 (= x758 0))) x224)))
(assert (=> (<= (x1054 x731 96) 10000) (= (x1201 (x1054 x731 96)) (x202 (x1054 x731 96)))))
(assert (x53 x902))
(assert (and (=> (> 4294967296 0) (= x768 (+ (* (x986 x768 4294967296) 4294967296) (x1381 x768 4294967296)))) (x1253 x768 4294967296) (x298 x768 4294967296) (x1010 x768 4294967296)))
(assert (= (+ (x300 x796) 1) (x300 (x743 x796 1))))
(assert (x397 x477 x227 x961 x1280))
(assert (x53 x745))
(assert (= (or x565 x765) x1313))
(assert (x53 x792))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x938 (+ (* (x986 x938 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x938 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x938 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x938 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x938 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1223 x1123))
(assert (x53 x851))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x462 (+ (* (x986 x462 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x462 1461501637330902918203684832716283019655932542976)))) (x1253 x462 1461501637330902918203684832716283019655932542976) (x298 x462 1461501637330902918203684832716283019655932542976) (x1010 x462 1461501637330902918203684832716283019655932542976)))
(assert (= (x300 (x743 x382 3)) (+ (x300 x382) 3)))
(assert (= (and x791 x510) x1215))
(assert (x53 x951))
(assert (x53 x1236))
(assert (x53 x94))
(assert (= (and x827 (not x302)) x941))
(assert (=> (>= 10000 x1062) (= (x1201 x1062) (x202 x1062))))
(assert (x526 x1119 x427 x1280 x961))
(assert (x53 x1044))
(assert (x1197 x961 x1280))
(assert (x53 x695))
(assert (= x985 (or x1075 x403)))
(assert (x53 x797))
(assert (x53 x1495))
(assert (=> (<= x1177 10000) (= (x202 x1177) (x1201 x1177))))
(assert (x53 x1444))
(assert (x526 x477 x227 x961 x1280))
(assert (x53 x1515))
(assert (x53 x192))
(assert (x53 x66))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x1307 (+ (* (x986 x1307 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x1307 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x1307 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x1307 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x1307 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x53 x1240))
(assert (x1369 x66))
(assert (x53 x312))
(assert (x53 x564))
(assert (x53 x389))
(assert (= x680 (x300 (x1201 x680))))
(assert (= (and x1293 (not x1174)) x807))
(assert (= (and x942 x336) x360))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x1109 (+ (* (x986 x1109 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x1109 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x1109 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x1109 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x1109 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x53 x1275))
(assert (x53 x1108))
(assert (= x1248 (x300 (x1201 x1248))))
(assert (x53 x698))
(assert (x53 x448))
(assert (= (+ (x300 x333) 1) (x300 (x743 x333 1))))
(assert (x53 x1006))
(assert (x1197 x961 (- x1280 x477)))
(assert (x53 x738))
(assert (= (and x782 x1271) x896))
(assert (x53 x256))
(assert (= (x1054 x1298 96) (x300 (x1201 (x1054 x1298 96)))))
(assert (x53 x110))
(assert (x1369 x384))
(assert (=> (>= 10000 x1083) (= (x202 x1083) (x1201 x1083))))
(assert (x53 x335))
(assert (= (=> (and (not (= x79 0)) (= (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1307) x957) (= x214 x704) (>= 1461501637330902918203684832716283019655932542975 x1515) (= x680 x1515) (= x724 x67) (= (x1259 (+ x704 x957)) x67) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1290)) (> 32 x1290)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1290))) (= (x806 x214) x1515) (= (x1259 (+ x1290 31)) x1307)) x1096) x475))
(assert (x53 x303))
(assert (x53 x1459))
(assert (x53 x688))
(assert (x53 x659))
(assert (= (and (not x1271) x782) x774))
(assert (= x222 (and (not x264) x927)))
(assert (and (=> (> 32 0) (= x194 (+ (* (x986 x194 32) 32) (x1381 x194 32)))) (x1253 x194 32) (x298 x194 32) (x1010 x194 32)))
(assert (x53 x672))
(assert (x53 x594))
(assert (= x1063 (and x1383 x770)))
(assert (= (and x742 x288) x675))
(assert (x53 x1513))
(assert (=> (<= x509 10000) (= (x1201 x509) (x202 x509))))
(assert (x53 x1448))
(assert (let ((x630 (* 79228162514264337593543950336 x1459))) (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x630 (+ (* (x986 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (= (x1508 x492 96) (x547 (* x492 79228162514264337593543950336))))
(assert (= (x1201 115792089237316195423570985007226406215939081747436879206741300988257197096960) (x202 115792089237316195423570985007226406215939081747436879206741300988257197096960)))
(assert (= (x202 18446744073709551615) (x1201 18446744073709551615)))
(assert (= x811 (and x497 (not x1016))))
(assert (x53 x671))
(assert (= (=> (and (= (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x58) x1139) (= x212 (x299 x98)) (= x696 (ite x363 2 3)) (= x363 (< x212 x301)) (not (= 0 x69)) (= (x1259 (+ x1139 x335)) x236) (= (x1259 (+ x134 31)) x58) (= x99 (x986 x270 79228162514264337593543950336)) (= x301 (x1389 4294967295 x99)) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x134)) (> 32 x134)) (> x134 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x98 x335) (= x236 x1333) (= x270 (x864 (x202 13)))) x757) x1040))
(assert (= x241 (and x882 (not x677))))
(assert (x53 x521))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x194 (+ (* (x986 x194 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x194 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x194 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x194 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x194 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1469 (+ (* (x986 x1469 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x1469 1461501637330902918203684832716283019655932542976)))) (x1253 x1469 1461501637330902918203684832716283019655932542976) (x298 x1469 1461501637330902918203684832716283019655932542976) (x1010 x1469 1461501637330902918203684832716283019655932542976)))
(assert (x1297 x892))
(assert (= x29 (=> (= (= 0 x1367) x189) (and (=> x189 x962) (=> (and (and (= (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1003) x1330) (= x1003 (x1259 (+ x748 31))) (= x761 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x748) (and (= (<= x748 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x748 32)))) (= (x1259 (+ x1330 x546)) x129)) (not x189)) (and (=> (and (not x761) (and (= (x715 x109) x279) (= (> x825 0) x1164) (= x546 x109))) (and (=> (and (not x1164) (= x857 0)) x566) (=> (and (and (= x1406 (x1389 1461501637330902918203684832716283019655932542975 x95)) (= (x586 x1239) x95) (= (= 0 x1406) x155) (= (x1338 (x1201 x65) (x202 1) 0) x1239)) x1164) (and (=> (and x155 (and (= (x708 (x1201 x635)) x1100) (= (x1389 1461501637330902918203684832716283019655932542975 x594) x635) (= x308 (= 0 x1100)) (= x163 x177) (= (x586 (x202 0)) x594) (= (x1259 (+ 4 x129)) x163))) (and (=> (and (and (= (> x262 0) x1126) (or (and x1126 (and (> 4294967296 x1229) (= x228 1))) (and (not x1126) (= x262 x228)))) (not x308)) x1392) (=> x308 x962))) (=> (and (and (= x1406 x960) (= x68 x129)) (not x155)) x991))))) (=> x761 x962)))))))
(assert (= x711 (and x740 x1105)))
(assert (= x310 (=> (= x61 (= x605 0)) (and (=> (and (and (= x365 (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x888) true) (< x888 32)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x888))) (= x956 (x1259 (+ x8 x250))) (= (x1259 (+ x888 31)) x1284) (= x8 (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1284))) (not x61)) (and (=> x365 x962) (=> (and (not x365) (and (= x886 (x586 (x202 13))) (= x701 x956) (= (x1389 4294967295 x1391) x1457) (= (< x1032 x1457) x944) (= x250 x75) (= (ite x944 2 3) x1518) (= (x1322 x75) x1032) (= x1391 (x986 x886 79228162514264337593543950336)))) x464))) (=> x61 x962)))))
(assert (x53 x125))
(assert (x53 x1421))
(assert (= x757 (=> (and (and (= (x1389 1461501637330902918203684832716283019655932542975 x1064) x1225) (= (x1259 (+ 32 x812)) x45) (= x592 (x1261 x619)) (= (x1295 (- x45 x760)) x122) (= (x1259 (+ 32 x1350)) x1501) (= x521 x419) (= x1441 (x1054 x592 248)) (= (x1269 (x202 60) (x202 28) (x1201 2661379305446904779734859349833089258949455794555359447896749126450) x939 0) x1065) (= x869 (x1259 (+ 31 x1246))) (= (x1259 (+ 32 x45)) x1350) (= x289 (x1259 (+ 32 x1333))) (= x23 (x1261 x1350)) (= x795 (x1295 (- x73 32))) (= (x1261 x45) x253) (= x1505 (x1259 (+ x1350 x1246))) (= (x1259 (+ x192 20)) x760) (= (x986 x869 32) x863) (= x939 (x1269 (x202 40) (x202 20) (x1201 (x1054 x376 96)) (x1201 (x1054 x1243 96)) 0)) (= x619 (x1259 (+ x1501 32))) (= x602 (x547 (* 32 x863))) (= (x1295 (- x122 32)) x785) (= (x1259 (+ 28 x276)) x812) (= (x1508 x1459 96) x376) (= (x1261 x1501) x419) (= x1243 (x1508 x1225 96)) (= x276 (x1259 (+ x760 32))) (not (> x521 57896044618658097711785492504343953926418782139537452191302581570759080747168)) (= (x1259 (+ 20 x289)) x192) (= x1484 (x1259 (+ x45 x125))) (= (x1389 1461501637330902918203684832716283019655932542975 x1064) x420) (= x125 (x1259 (+ x602 32))) (= x1000 (x1259 (+ x760 32))) (= x73 (x1295 (- x760 x1333))) (= x321 (= x1441 27)) (= 0 x696) (= 65 x253)) (or (and (= 28 x1441) (not x321)) x321)) x1281)))
(assert (x290 x592))
(assert (= (or x1145 x380) x740))
(assert (= 2661379305446904779734859349833089258949455794555359447896749126450 (x300 (x202 2661379305446904779734859349833089258949455794555359447896749126450))))
(assert (x1197 x1119 (- x427 x961)))
(assert (x53 x97))
(assert (= (x202 1461501637330902918203684832716283019655932542975) (x1201 1461501637330902918203684832716283019655932542975)))
(assert (x53 x126))
(assert (x53 x1097))
(assert (= 0 (x197 x1501)))
(assert (x53 x1312))
(assert (x53 x1047))
(assert (= (and x633 (not x133)) x955))
(assert (= 0 (x197 x534)))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x959 (+ (* (x986 x959 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x959 1461501637330902918203684832716283019655932542976)))) (x1253 x959 1461501637330902918203684832716283019655932542976) (x298 x959 1461501637330902918203684832716283019655932542976) (x1010 x959 1461501637330902918203684832716283019655932542976)))
(assert (x1369 x361))
(assert (x481 x1280))
(assert (x53 x1284))
(assert (x1369 x947))
(assert (x53 x1032))
(assert (x1496 x194))
(assert (x53 x1026))
(assert (= (and x980 (not x1489)) x1479))
(assert (= (=> (= x809 (= x303 0)) (and (=> (and (and (= (or (and (< x1107 32) (= (<= x1107 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x1107 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x183) (= (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x564) x1331) (= (x1259 (+ 31 x1107)) x564) (= x145 (x1259 (+ x105 x1331)))) (not x809)) (and (=> (and (not x183) (and (= x659 (x1389 1461501637330902918203684832716283019655932542975 x959)) (= x105 x1029) (= (x404 x1029) x959) (= x366 (= x659 x959)))) (and (=> (not x366) x962) (=> (and x366 (and (= x145 x546) (= x959 x1275))) x849))) (=> x183 x962))) (=> x809 x962))) x623))
(assert (x53 x1331))
(assert (and (=> (> 32 0) (= x1211 (+ (* (x986 x1211 32) 32) (x1381 x1211 32)))) (x1253 x1211 32) (x298 x1211 32) (x1010 x1211 32)))
(assert (= (x300 (x743 x1241 2)) (+ 2 (x300 x1241))))
(assert (x1297 x1351))
(assert (= (x300 (x1201 x1083)) x1083))
(assert (x53 x227))
(assert (x53 x911))
(assert (x1499 x383))
(assert (x53 x156))
(assert (x53 x1420))
(assert (x53 x862))
(assert (= (x547 (* 79228162514264337593543950336 x1459)) (x1508 x1459 96)))
(assert (= x258 (=> (and (or (and (not x1166) (= x591 28)) x1166) (and (= x1298 (x1508 x1062 96)) (= (x1259 (+ x28 32)) x1346) (= (x547 (* 32 x1513)) x1327) (= (x1389 1461501637330902918203684832716283019655932542975 x1337) x235) (= (x1295 (- x726 x880)) x126) (= (x1269 (x202 60) (x202 28) (x1201 2661379305446904779734859349833089258949455794555359447896749126450) x598 0) x666) (= x1044 x845) (= x1168 (x1259 (+ 28 x1456))) (= x1240 (x1295 (- x126 32))) (= x1481 (x1295 (- x797 x726))) (= (x988 x1385) x625) (= (x1295 (- x1481 32)) x866) (= (x1259 (+ 32 x1168)) x797) (= (x986 x1314 32) x1513) (= x591 (x1054 x1006 248)) (= x1385 (x1259 (+ 32 x797))) (= (x1259 (+ x1327 32)) x237) (= (x1259 (+ x726 32)) x548) (= x113 0) (= x1166 (= 27 x591)) (= x1044 (x988 x28)) (= x726 (x1259 (+ x1463 20))) (= (x988 x797) x656) (= (x1259 (+ 32 x1385)) x28) (= (x1269 (x202 40) (x202 20) (x1201 (x1054 x1298 96)) (x1201 (x1054 x932 96)) 0) x598) (= x656 65) (= (x1259 (+ x880 32)) x981) (= x1006 (x988 x1346)) (= x389 (x1389 1461501637330902918203684832716283019655932542975 x1337)) (= (x1259 (+ x1385 x579)) x1497) (not (> x845 57896044618658097711785492504343953926418782139537452191302581570759080747168)) (= x1314 (x1259 (+ x579 31))) (= x1463 (x1259 (+ 20 x981))) (= x1456 (x1259 (+ 32 x726))) (= x932 (x1508 x235 96)) (= (x1259 (+ x237 x797)) x1421))) x496)))
(assert (x1223 x1275))
(assert (= (and (not x689) x919) x1383))
(assert (x1499 x814))
(assert (= (or x1504 x24) x246))
(assert (x1223 x509))
(assert (x1499 x594))
(assert (x481 (- x227 x1119)))
(assert (x53 x947))
(assert (x1369 x373))
(assert (x1369 (* x1225 79228162514264337593543950336)))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x383 (+ (* (x986 x383 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x383 1461501637330902918203684832716283019655932542976)))) (x1253 x383 1461501637330902918203684832716283019655932542976) (x298 x383 1461501637330902918203684832716283019655932542976) (x1010 x383 1461501637330902918203684832716283019655932542976)))
(assert (x53 x1169))
(assert (= (=> (and (and (= x1160 (x708 (x1201 x164))) (= x789 (x1259 (+ x335 4))) (= x232 (< 0 x312)) (= x789 x894) (not (= x1160 0))) (or (and (not x232) (= x69 x312)) (and x232 (and (= x69 1) (< x134 4294967296))))) x1040) x973))
(assert (x1499 x154))
(assert (= (x300 (x743 x1318 1)) (+ (x300 x1318) 1)))
(assert (x53 x681))
(assert (x53 x186))
(assert (x53 x259))
(assert (and (x174 x492 79228162514264337593543950336) (= (* 79228162514264337593543950336 x492) (x191 x492 79228162514264337593543950336)) (x474 x492 79228162514264337593543950336) (x987 x492 79228162514264337593543950336) (and (= (- (* (- 115792089237316195423570985008687907853269984665561335876943319670319585689600) x492) (- 13407807929942597099574024998205846127479365820583219383259601157675320746492338629038688038210230303195081502828938359349399943579666495733993146259865600)) (x191 (- x492 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089237316195423570985008687907853269984665561335876943319670319585689600))) (= (* x492 (- 115792089237316195423570985008687907853269984665561335876943319670319585689600)) (x191 x492 (- 115792089237316195423570985008687907853269984665561335876943319670319585689600))) (= (- (* 79228162514264337593543950336 x492) 9173994463960286046443283581208347763186259956673124494950355357547691504353939232280074212440502746218496) (x191 (- x492 115792089237316195423570985008687907853269984665640564039457584007913129639936) 79228162514264337593543950336))) (x533 x492 79228162514264337593543950336) (x1273 x492 79228162514264337593543950336)))
(assert (x53 x805))
(assert (x53 x1135))
(assert (x53 x1123))
(assert (= (x300 (x743 x1138 1)) (+ 1 (x300 x1138))))
(assert (x53 x794))
(assert (= x1039 (and x1196 (not x1425))))
(assert (and (=> (> 256 0) (= x1198 (+ (* (x986 x1198 256) 256) (x1381 x1198 256)))) (x1253 x1198 256) (x298 x1198 256) (x1010 x1198 256)))
(assert (x53 x1084))
(assert (x53 x330))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x115 (+ (* (x986 x115 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x115 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x115 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x115 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x115 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x53 x1192))
(assert (= (x300 (x743 x364 1)) (+ (x300 x364) 1)))
(assert (x53 x514))
(assert (x53 x921))
(assert (x53 x457))
(assert (= (x300 (x1201 x1363)) x1363))
(assert (= (and x482 x1520) x584))
(assert (= 0 (x197 x755)))
(assert (= x782 (and (not x573) x930)))
(assert (x53 x1454))
(assert (x53 x351))
(assert (= x891 (=> (and (and x17 (= x963 (= x1316 x168)) (< 0 x218) (>= 1461501637330902918203684832716283019655932542975 x170) (= x917 (x1259 (+ 4 x1176))) (= x170 x1062) (not (= x839 x1049)) (= x1363 x850) (not (= x839 x1177)) (<= x839 1461501637330902918203684832716283019655932542975) (= x1226 x1176) (= x607 x1316) (= false x319) (= false x1299) (= x1509 x412) (= x1062 x168) (not (> 2543820636 x1470)) x243 (= x1011 x904) (= (> (x708 (x1201 x648)) 0) x1199) (not (< 18446744073709551615 x579)) (>= x1509 0) (= x712 (x631 (x1201 x648))) (= x828 x1420) (>= 1461501637330902918203684832716283019655932542975 x1177) (not (< x1470 2769337888)) (= x1470 2801674539) (= x17 (< 0 (x708 (x1201 x1177)))) (= x989 x904) (<= 0 x316) (>= x1048 0) (= x579 (x1276 x917)) (= x1405 x1371) x1199 (= x46 (x864 (x202 0))) (= x1048 (x631 (x1201 x1049))) (= x781 false) (= false x1288) (= x282 x277) (<= x1509 1461501637330902918203684832716283019655932542975) (= (x1259 (+ x579 x1465)) x223) (> x648 0) (<= 0 x170) (not (= x1470 2769337888)) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x453)) (> x453 163)) (= x1524 (x1295 (- x453 4))) (= x1465 (x1259 (+ 32 x917))) (= x491 (x631 (x1201 x1177))) (= (< 0 x921) x1425) (not (= x1111 0)) (= x448 x1062) (>= 1461501637330902918203684832716283019655932542975 x1049) (= 0 x1371) (not (> 4 x453)) x963 (not (= x648 x1177)) (>= x607 0) (<= x1337 1461501637330902918203684832716283019655932542975) (< 0 x1177) (not (< x453 x223)) (= (x1259 (+ 31 x917)) x1192) (= x646 2801674539) (= x1337 x587) (not (= x1049 x1177)) (> 2974191442 x1470) (>= 1461501637330902918203684832716283019655932542975 x316) (= x199 (< 0 (x708 (x1201 x839)))) (<= 0 x712) x199 (<= 0 x730) (>= x989 0) (not (= 2794781754 x1470)) (= (> (x708 (x1201 x1049)) 0) x243) (not (= x839 x648)) (= (x631 (x1201 x839)) x730) (<= x648 1461501637330902918203684832716283019655932542975) (<= x989 1461501637330902918203684832716283019655932542975) (<= 0 x491) (= (x708 (x1201 x839)) x218) (= x282 x1116) (< 0 x839) (> 3219105711 x1470) (not (or (> x1524 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1524 160) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1524))))) (= x1420 x1014) (or (and (= (<= x1192 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x453 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1192 x453)) (and (<= x453 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1192))) (<= 0 x448) (> x1049 0) (= (x708 (x1201 x131)) x1111) (>= 1461501637330902918203684832716283019655932542975 x448) (not (< 18446744073709551615 x1226)) (not (= x648 x1049)) (= 5 x1193) (>= 1461501637330902918203684832716283019655932542975 x607) (= x799 x1363) (= (x1389 1461501637330902918203684832716283019655932542975 x46) x131) (= x267 x1337)) (or (and (not x1425) (= x921 x42)) (and (and (> 4294967296 x1286) (= x42 1)) x1425))) x311)))
(assert (= (or x964 x30) x1121))
(assert (= (+ (x300 x70) 1) (x300 (x743 x70 1))))
(assert (= x849 (=> (and (= x89 (x708 (x1201 x1275))) (= x1400 (= x89 0))) (and (=> (and (and (= x616 (> x1506 0)) (or (and (= x1367 x1506) (not x616)) (and x616 (and (= 1 x1367) (> 4294967296 x748))))) (not x1400)) x29) (=> x1400 x962)))))
(assert (x53 x924))
(assert (x53 x337))
(assert (x53 x1521))
(assert (x307 x111))
(assert (= x536 (and (not x1025) x499)))
(assert (= x966 (and x261 x1344)))
(assert (= x964 (or x1289 x766)))
(assert (and (x1517 x359 32) (x1412 x359 32) (= (* 32 (x986 x359 32)) (- x359 (x1389 31 x359))) (=> (and (> 32 0) (> x359 0)) (and (< (- x359 32) (* 32 (x986 x359 32))) (>= x359 (* 32 (x986 x359 32))))) (x1287 x359 32) (x593 x359 32)))
(assert (x53 x635))
(assert (x53 x940))
(assert (= (+ 1 (x300 x934)) (x300 (x743 x934 1))))
(assert (x53 x383))
(assert (x1297 x367))
(assert (x53 x262))
(assert (x481 x5))
(assert (=> (<= x648 10000) (= (x1201 x648) (x202 x648))))
(assert (= x1255 (and x291 x1024)))
(assert (x1223 x1083))
(assert (= x143 (and (not x1428) x476)))
(assert (x53 x1402))
(assert (= (and x266 (not x447)) x33))
(assert (x1297 x1003))
(assert (x1369 4294967296))
(assert (= (x300 (x743 x180 1)) (+ (x300 x180) 1)))
(assert (= (x986 x1396 79228162514264337593543950336) (x1054 x1396 96)))
(assert (x53 x958))
(assert (x53 x371))
(assert (x481 x477))
(assert (= (x788 x705) 0))
(assert (x53 x275))
(assert (x53 x610))
(assert (x53 x46))
(assert (and (=> (> 4294967296 0) (= x361 (+ (* (x986 x361 4294967296) 4294967296) (x1381 x361 4294967296)))) (x1253 x361 4294967296) (x298 x361 4294967296) (x1010 x361 4294967296)))
(assert (x1223 x1363))
(assert (x53 x492))
(assert (x53 x644))
(assert (= x346 (and x1522 x861)))
(assert (= x464 (=> (= (= x1518 0) x1356) (and (=> (and x1356 (and (= (x1259 (+ x1013 28)) x1097) (= (x1259 (+ 32 x188)) x1013) (= (x1259 (+ x345 x107)) x787) (= (x59 x345) x1120) (= x489 (x1259 (+ x729 20))) (= x5 (x986 x359 32)) (= x107 (x1259 (+ x255 32))) (= (x547 (* x5 32)) x255) (= x681 (x1259 (+ x188 32))) (= (x1295 (- x345 x188)) x890) (= x345 (x1259 (+ 32 x1097))) (= (= x1120 65) x52) (= (x1259 (+ x738 x1090)) x703) (= x729 (x1259 (+ 32 x701))) (= x359 (x1259 (+ x738 31))) (= (x1269 (x202 40) (x202 20) (x1201 (x1054 x731 96)) (x1201 (x1054 x1396 96)) 0) x1372) (= x188 (x1259 (+ x489 20))) (= (x1508 x492 96) x1396) (= x1090 (x1259 (+ 32 x345))) (= x338 (x1269 (x202 60) (x202 28) (x1201 2661379305446904779734859349833089258949455794555359447896749126450) x1372 0)) (= (x1508 x1062 96) x731) (= x160 (x1295 (- x688 32))) (= x1210 (x1295 (- x890 32))) (= (x1295 (- x188 x701)) x688))) (and (=> (not x52) x962) (=> (and (and (= x1236 (x59 x911)) (= x885 (x1054 x1236 248)) (= (x59 x1090) x813) (= x1204 (< 57896044618658097711785492504343953926418782139537452191302581570759080747168 x1018)) (= (x1259 (+ 32 x1090)) x709) (= (x1259 (+ 32 x709)) x911) (= (x59 x709) x1018)) x52) (and (=> (and (not x1204) (= (= x885 27) x1016)) (and (=> (and (not x1016) (= (= 28 x885) x1252)) (and (=> x1252 x1478) (=> (not x1252) x962))) (=> x1016 x1478))) (=> x1204 x962))))) (=> (not x1356) x962)))))
(assert (x53 x890))
(assert (x53 x1470))
(assert (x53 x228))
(assert (= (=> (= false x78) x280) x1183))
(assert (x53 x118))
(assert (x481 (- x1119 x227)))
(assert (x481 (- x477 x1119)))
(assert (x53 x1221))
(assert (x53 x1003))
(assert (= (and x501 x54) x506))
(assert (x53 x162))
(assert (x1499 x46))
(assert (= x492 (x300 (x1201 x492))))
(assert (x53 x660))
(assert (x53 x959))
(assert (x53 x755))
(assert (x53 x1090))
(assert (x53 x1401))
(assert (= (and x142 (not x713)) x1257))
(assert (x526 x1119 x427 x227 x477))
(assert (x481 (- x427 x227)))
(assert (x526 x961 x1280 x227 x477))
(assert (x1197 x427 (- x1119 x477)))
(assert (x1369 x691))
(assert (x526 x427 x1119 x477 x227))
(assert (x1297 x641))
(assert (= (x197 (x1259 (+ x90 32))) 0))
(assert (= (x300 (x1201 x490)) x490))
(assert (x53 x956))
(assert (x1369 x115))
(assert (= 2801674539 (x300 (x202 2801674539))))
(assert (x1223 x1101))
(assert (x53 x309))
(assert (= (=> (and (or (and (and (= x555 (x1338 (x1201 x509) (x202 16) 0)) (not (>= (+ x826 x334) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x272 (x543 x287)) (= (x1259 (+ x826 x1490)) x794) (= x35 (x743 x1387 1)) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x334 x272))) (= (x1338 (x1201 x509) (x202 16) 0) x287) (= x1074 (x1259 (+ x272 x1490))) (= x1387 (x1338 (x1201 x1459) (x202 14) 0)) (= x826 (x347 x35))) x775) (not x775)) (and (= x1203 (x743 x796 1)) (= x1118 (x743 x201 1)) (= x71 x201) (= x1315 (x1389 1461501637330902918203684832716283019655932542975 x1064)) (= (x1259 (+ x1502 x608)) x1125) (= x775 (< 0 x1490)) (= (x864 x71) x1300) (= x650 (x743 x1203 1)) (= x608 x1459) (= (x1338 (x1201 x1315) (x202 15) 0) x201) (= (x743 x1118 1) x1124) (= (x743 x1124 1) x720) (= x1502 (x1389 115792089237316195423570985007226406215939081747436879206741300988257197096960 x1300)) (= (x743 x819 1) x796) (= (x743 x720 1) x819))) x418) x1251))
(assert (x53 x822))
(assert (x1369 x31))
(assert (x526 x427 x1119 x227 x477))
(assert (= (=> (= x1042 (= 0 x851)) (and (=> (and (not x1042) (and (and (= (< 0 x758) x600) (= x614 x305) (= x305 (x1259 (+ x802 4))) (= x96 (x708 (x1201 x851))) (not (= 0 x96))) (or (not x600) (and x600 (and (= x1067 (x631 (x1201 x839))) (= x446 (x631 (x1201 x851))) (< x877 4294967296) (= x571 (>= (x1266 (x1201 x839)) x1067)) x293 (= (= (x1266 (x1201 x851)) x446) x293) x571))))) x519) (=> (and (= x351 0) x1042) x1173))) x1189))
(assert (x685 x114))
(assert (= x871 (and (not x1127) x26)))
(assert (x1197 x1280 (- x961 x427)))
(assert (x1496 x216))
(assert (x1369 x537))
(assert (x53 x1178))
(assert (x53 x894))
(assert (x53 x260))
(assert (= x459 (or x584 x269)))
(assert (=> (>= 10000 x65) (= (x1201 x65) (x202 x65))))
(assert (= (and (not x1126) x1185) x1214))
(assert (x53 x989))
(assert (x290 x932))
(assert (x1369 x114))
(assert (x1223 x1047))
(assert (x53 x1272))
(assert (x53 x952))
(assert (x53 x1464))
(assert (x53 x870))
(assert (= 0 (x788 x251)))
(assert (= x1440 (and x1256 (not x665))))
(assert (and (x1517 x1006 452312848583266388373324160190187140051835877600158453279131187530910662656) (x1412 x1006 452312848583266388373324160190187140051835877600158453279131187530910662656) (= (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x986 x1006 452312848583266388373324160190187140051835877600158453279131187530910662656)) (- x1006 (x1389 452312848583266388373324160190187140051835877600158453279131187530910662655 x1006))) (=> (and (> 452312848583266388373324160190187140051835877600158453279131187530910662656 0) (> x1006 0)) (and (< (- x1006 452312848583266388373324160190187140051835877600158453279131187530910662656) (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x986 x1006 452312848583266388373324160190187140051835877600158453279131187530910662656))) (>= x1006 (* 452312848583266388373324160190187140051835877600158453279131187530910662656 (x986 x1006 452312848583266388373324160190187140051835877600158453279131187530910662656))))) (x1287 x1006 452312848583266388373324160190187140051835877600158453279131187530910662656) (x593 x1006 452312848583266388373324160190187140051835877600158453279131187530910662656)))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x892 (+ (* (x986 x892 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x892 1461501637330902918203684832716283019655932542976)))) (x1253 x892 1461501637330902918203684832716283019655932542976) (x298 x892 1461501637330902918203684832716283019655932542976) (x1010 x892 1461501637330902918203684832716283019655932542976)))
(assert (= (x300 (x1201 (x1054 x731 96))) (x1054 x731 96)))
(assert (= (x986 x731 79228162514264337593543950336) (x1054 x731 96)))
(assert (= (x300 (x202 111898140286184639627988011319402352826893257207651552004621811389633377861632)) 111898140286184639627988011319402352826893257207651552004621811389633377861632))
(assert (x1369 x58))
(assert (x53 x121))
(assert (x53 x590))
(assert (x1499 x144))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x66 (+ (* (x986 x66 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x66 1461501637330902918203684832716283019655932542976)))) (x1253 x66 1461501637330902918203684832716283019655932542976) (x298 x66 1461501637330902918203684832716283019655932542976) (x1010 x66 1461501637330902918203684832716283019655932542976)))
(assert (= (x300 (x1201 x151)) x151))
(assert (= (or x12 x1222) x322))
(assert (= (or x1340 x434) x1187))
(assert (x53 x79))
(assert (x53 x1143))
(assert (x53 x373))
(assert (= (=> (= (= x355 0) x284) (and (=> (and (not x284) (and (or (and x19 (and (= x767 (= (x398 (x1201 x355)) x306)) (= (x631 (x1201 x355)) x306) x767 (= x1416 (<= x804 (x398 (x1201 x839)))) (> 4294967296 x1151) (= (x631 (x1201 x839)) x804) x1416)) (not x19)) (and (= (< 0 x186) x19) (= x1171 (x708 (x1201 x355))) (= x503 (x1259 (+ x852 4))) (= x1375 x503) (not (= x1171 0))))) x428) (=> (and (= x655 0) x284) x527))) x1461))
(assert (x53 x726))
(assert (= x1145 (and (not x501) x54)))
(assert (= (and x871 x488) x585))
(assert (x53 x478))
(assert (x53 x1465))
(assert (x53 x1198))
(assert (x526 x227 x477 x1119 x427))
(assert (x53 x1262))
(assert (x53 x1067))
(assert (= (x300 (x1201 x1459)) x1459))
(assert (= x164 (x300 (x1201 x164))))
(assert (= x566 (=> (and (= (x1338 (x1201 x492) (x202 15) 0) x918) (= x824 (x743 x1038 1)) (= x1379 (x743 x918 1)) (= (x743 x824 1) x1477) (= (> x825 0) x249) (= (x586 x332) x326) (= x876 (x743 x1086 1)) (= x1349 (x1389 115792089237316195423570985007226406215939081747436879206741300988257197096960 x326)) (= x1086 (x743 x1379 1)) (= x120 (x1259 (+ x1349 x304))) (= x1038 (x743 x876 1)) (= x1062 x304) (= x918 x332) (= x1077 (x743 x1477 1))) (and (=> (not x249) x1183) (=> (and (and (= (x1259 (+ x825 x1084)) x588) (= (x435 x678) x1084) (= x180 (x1338 (x1201 x1062) (x202 14) 0)) (= (x743 x180 1) x678) (= (< x588 x1084) x974)) x249) (and (=> x974 x962) (=> (and (and (= (> x978 x915) x1489) (= (x1338 (x1201 x234) (x202 16) 0) x479) (= x978 (x721 x479)) (= (x1259 (+ x825 x978)) x915)) (not x974)) (and (=> x1489 x962) (=> (not x1489) x1183)))))))))
(assert (x1496 x115))
(assert (x1369 x108))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x641 (+ (* (x986 x641 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x641 1461501637330902918203684832716283019655932542976)))) (x1253 x641 1461501637330902918203684832716283019655932542976) (x298 x641 1461501637330902918203684832716283019655932542976) (x1010 x641 1461501637330902918203684832716283019655932542976)))
(assert (= x1504 (and x1122 x1148)))
(assert (x53 x2))
(assert (x53 x892))
(assert (x1197 x477 (- x227 x1119)))
(assert (x1369 x1284))
(assert (= x1062 (x300 (x1201 x1062))))
(assert (= (x986 x1298 79228162514264337593543950336) (x1054 x1298 96)))
(assert (= (and x560 x1001) x49))
(assert (= (x986 x376 79228162514264337593543950336) (x1054 x376 96)))
(assert (= x106 (and x1085 x459)))
(assert (x53 x1354))
(assert (= x148 (or x896 x774)))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x108 (+ (* (x986 x108 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x108 1461501637330902918203684832716283019655932542976)))) (x1253 x108 1461501637330902918203684832716283019655932542976) (x298 x108 1461501637330902918203684832716283019655932542976) (x1010 x108 1461501637330902918203684832716283019655932542976)))
(assert (x53 x1503))
(assert (x53 x1490))
(assert (x290 x1314))
(assert (x53 x587))
(assert (and (=> (> 32 0) (= x425 (+ (* (x986 x425 32) 32) (x1381 x425 32)))) (x1253 x425 32) (x298 x425 32) (x1010 x425 32)))
(assert (x53 x558))
(assert (x53 x103))
(assert (x53 x407))
(assert (x53 x48))
(assert (x526 x1280 x961 x1119 x427))
(assert (= x482 (or x135 x1305)))
(assert (= x280 (=> (or x78 (not x78)) x1435)))
(assert (x53 x522))
(assert (x1499 x892))
(assert (x53 x1176))
(assert (= x784 (and x942 (not x336))))
(assert (x53 x320))
(assert (and (=> (> 4294967296 0) (= x1391 (+ (* (x986 x1391 4294967296) 4294967296) (x1381 x1391 4294967296)))) (x1253 x1391 4294967296) (x298 x1391 4294967296) (x1010 x1391 4294967296)))
(assert (x53 x168))
(assert (= (and x830 x353) x1408))
(assert (x53 x1048))
(assert (x53 x1502))
(assert (=> (<= x401 10000) (= (x202 x401) (x1201 x401))))
(assert (x53 x1399))
(assert (and (x1517 x1396 79228162514264337593543950336) (x1412 x1396 79228162514264337593543950336) (= (* 79228162514264337593543950336 (x986 x1396 79228162514264337593543950336)) (- x1396 (x1389 79228162514264337593543950335 x1396))) (=> (and (> 79228162514264337593543950336 0) (> x1396 0)) (and (< (- x1396 79228162514264337593543950336) (* 79228162514264337593543950336 (x986 x1396 79228162514264337593543950336))) (>= x1396 (* 79228162514264337593543950336 (x986 x1396 79228162514264337593543950336))))) (x1287 x1396 79228162514264337593543950336) (x593 x1396 79228162514264337593543950336)))
(assert (x53 x77))
(assert (= x350 (or x340 x143)))
(assert (x481 (- x1119 x477)))
(assert (= (=> (= (= 0 x1167) x661) (and (=> x661 x962) (=> (and (not x661) (= x264 (or (and (< x44 32) (= true (<= x44 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x44)))) (and (=> x264 x962) (=> (and (not x264) (and (= x1178 (x60 x628)) (= x68 x628) (= x1178 x644))) x238))))) x1224))
(assert (x53 x1151))
(assert (x53 x605))
(assert (= x1523 (and x15 (not x1213))))
(assert (x53 x171))
(assert (x53 x159))
(assert (= x377 (or x841 x1012)))
(assert (x1499 x462))
(assert (= (x1201 (x300 x1372)) x1372))
(assert (x53 x888))
(assert (x1197 x477 (- x227 x1280)))
(assert (x53 x655))
(assert (= (x300 (x1201 x1177)) x1177))
(assert (x1496 x564))
(assert (x53 x1081))
(assert (= x1128 (=> (and (= (x651 x1468) x764) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1151) true) (< x1151 32)) (> x1151 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x655 x764) (not (= 0 x186)) (= x1468 x852)) x527)))
(assert (x53 x596))
(assert (x53 x957))
(assert (= x1185 (and x1292 (not x308))))
(assert (x53 x1298))
(assert (x526 x427 x1119 x1280 x961))
(assert (x53 x214))
(assert (x53 x160))
(assert (x53 x1125))
(assert (x53 x96))
(assert (x53 x636))
(assert (= (and x465 x1004) x1031))
(assert (= x635 (x300 (x1201 x635))))
(assert (x1297 x361))
(assert (= (+ (x300 x873) 2) (x300 (x743 x873 2))))
(assert (= (x788 x2) 0))
(assert (= x87 (and x166 (not x775))))
(assert (= x454 (and x189 x1303)))
(assert (x53 x1327))
(assert (x53 x38))
(assert (= x213 (and x1356 x848)))
(assert (= x1432 (and x633 x133)))
(assert (x53 x1456))
(assert (x1496 x1211))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x771 (+ (* (x986 x771 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x771 1461501637330902918203684832716283019655932542976)))) (x1253 x771 1461501637330902918203684832716283019655932542976) (x298 x771 1461501637330902918203684832716283019655932542976) (x1010 x771 1461501637330902918203684832716283019655932542976)))
(assert (x481 x961))
(assert (x1223 x408))
(assert (= (x300 (x1201 x648)) x648))
(assert (x53 x253))
(assert (x53 x1429))
(assert (x1297 x993))
(assert (x53 x926))
(assert (x53 x455))
(assert (= x1293 (and (not x830) x353)))
(assert (x53 x1413))
(assert (= (=> (and (>= 1461501637330902918203684832716283019655932542975 x485) (= x610 (x1259 (+ x88 x523))) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x388) (and (= (<= x388 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x388 32)))) (= x1153 x610) (= x523 (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x115)) (= x88 x251) (= x485 (x1279 x251)) (= (x1259 (+ 31 x388)) x115) (= x457 x485) (not (= 0 x7))) x615) x1472))
(assert (x1488 x1300))
(assert (= 11430537079145650693387304458692941425836787954612963690241153482819318579200 (x300 (x202 11430537079145650693387304458692941425836787954612963690241153482819318579200))))
(assert (x53 x1163))
(assert (x397 x1280 x961 x227 x477))
(assert (= (and (not x469) x574) x859))
(assert (x290 32))
(assert (x53 x1426))
(assert (x53 x1497))
(assert (x1197 x961 (- x1280 x427)))
(assert (x53 x731))
(assert (= x1264 (=> (and (and (= (x1259 (+ x36 x951)) x498) (= (> x498 x1510) x1428) (not (>= (+ x36 x951) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= x1510 (x1259 (+ x662 x1208))) (not (>= (+ x1208 x662) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (ite (> x556 x618) x618 x556) x662)) (or (and x1428 (= 0 x673)) (and (and (= x673 x808) (= x808 (x1295 (- x1510 x498))) (not (> x498 x1510))) (not x1428)))) x1317)))
(assert (=> (<= x164 10000) (= (x202 x164) (x1201 x164))))
(assert (= (=> (and (= x590 x853) (= (x1259 (+ 31 x931)) x1020) (= x902 x852) (= x355 x195) (not (= x400 0)) (not (or (and (< x931 32) (= (<= x931 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (> x931 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (>= 1461501637330902918203684832716283019655932542975 x195) (= (x1259 (+ x1182 x853)) x902) (= (x1511 x590) x195) (= (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1020) x1182)) x1461) x1157))
(assert (x53 x572))
(assert (x53 x1100))
(assert (=> (>= 10000 x1363) (= (x1201 x1363) (x202 x1363))))
(assert (x53 x196))
(assert (= (and x368 (not x1205)) x948))
(assert (x1369 x1211))
(assert (= (and x92 (not x937)) x1249))
(assert (= (and x138 x948) x403))
(assert (x53 x31))
(assert (x1369 x383))
(assert (= (x197 x590) 0))
(assert (= (or x360 x784) x1305))
(assert (x53 x470))
(assert (x53 x783))
(assert (x1197 x227 (- x477 x427)))
(assert (x53 x1130))
(assert (x53 x1029))
(assert (= x510 (and x741 (not x803))))
(assert (x53 x498))
(assert (x53 x691))
(assert (=> (<= x906 10000) (= (x1201 x906) (x202 x906))))
(assert (x53 x177))
(assert (x53 x562))
(assert (and (x174 32 x863) (= (* x863 32) (x191 32 x863)) (x474 32 x863) (x987 32 x863) (and (= (- (* (- x863 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* (- x863 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x191 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x863 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 32 (- x863 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x191 32 (- x863 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x863 32) (* x863 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x191 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x863))) (x533 32 x863) (x1273 32 x863)))
(assert (x53 x1376))
(assert (= (x986 x592 452312848583266388373324160190187140051835877600158453279131187530910662656) (x1054 x592 248)))
(assert (x53 x730))
(assert (x53 x1350))
(assert (= x142 (or x540 x624)))
(assert (x1369 (* x1459 79228162514264337593543950336)))
(assert (= (and x1058 x190) x1184))
(assert (x526 x1119 x427 x961 x1280))
(assert (x53 x98))
(assert (x1496 x1307))
(assert (= x444 (or x246 x1449 x18 x1458)))
(assert (x1369 x99))
(assert (x290 x869))
(assert (= (x1054 x1243 96) (x986 x1243 79228162514264337593543950336)))
(assert (=> (<= x839 10000) (= (x1201 x839) (x202 x839))))
(assert (x53 x1314))
(assert (x1369 x783))
(assert (= x1037 (and (not x139) x653)))
(assert (x53 x1363))
(assert (x1197 x227 x477))
(assert (x53 x1427))
(assert (x53 x127))
(assert (x53 x1171))
(assert (x1297 x144))
(assert (x53 x41))
(assert (x53 x326))
(assert (= (x300 (x1201 x244)) x244))
(assert (x53 x1405))
(assert (x1297 x1469))
(assert (x1223 x490))
(assert (x1499 x1337))
(assert (x53 x1115))
(assert (x53 x88))
(assert (x290 x731))
(assert (x53 x1290))
(assert (x1369 x95))
(assert (= (x202 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1201 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x53 x789))
(assert (=> (<= x577 10000) (= (x1201 x577) (x202 x577))))
(assert (x481 (- x1280 x227)))
(assert (x53 x122))
(assert (and (x1517 x731 79228162514264337593543950336) (x1412 x731 79228162514264337593543950336) (= (* 79228162514264337593543950336 (x986 x731 79228162514264337593543950336)) (- x731 (x1389 79228162514264337593543950335 x731))) (=> (and (> 79228162514264337593543950336 0) (> x731 0)) (and (< (- x731 79228162514264337593543950336) (* 79228162514264337593543950336 (x986 x731 79228162514264337593543950336))) (>= x731 (* 79228162514264337593543950336 (x986 x731 79228162514264337593543950336))))) (x1287 x731 79228162514264337593543950336) (x593 x731 79228162514264337593543950336)))
(assert (x53 x1244))
(assert (x53 x1129))
(assert (= (x300 (x743 x1477 1)) (+ (x300 x1477) 1)))
(assert (x481 (- x1280 x1119)))
(assert (x53 x1210))
(assert (x53 x626))
(assert (= (x300 (x743 x1118 1)) (+ 1 (x300 x1118))))
(assert (= (x300 (x202 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= x1325 (and x740 (not x1105))))
(assert (x1197 x427 (- x1119 x1280)))
(assert (= (x176 x911) 0))
(assert (and (x1517 x886 79228162514264337593543950336) (x1412 x886 79228162514264337593543950336) (= (* 79228162514264337593543950336 (x986 x886 79228162514264337593543950336)) (- x886 (x1389 79228162514264337593543950335 x886))) (=> (and (> 79228162514264337593543950336 0) (> x886 0)) (and (< (- x886 79228162514264337593543950336) (* 79228162514264337593543950336 (x986 x886 79228162514264337593543950336))) (>= x886 (* 79228162514264337593543950336 (x986 x886 79228162514264337593543950336))))) (x1287 x886 79228162514264337593543950336) (x593 x886 79228162514264337593543950336)))
(assert (= (x788 x28) 0))
(assert (x481 (- x427 x961)))
(assert (x53 x1246))
(assert (x53 x804))
(assert (= x528 (and x616 x1323)))
(assert (= (and (not x1366) x1390) x930))
(assert (= (+ (x300 x62) 1) (x300 (x743 x62 1))))
(assert (x53 x509))
(assert (x53 x908))
(assert (= x18 (and x576 x634)))
(assert (x53 x14))
(assert (x53 x578))
(assert (x290 x1243))
(assert (x53 x1211))
(assert (= 0 (x176 x1090)))
(assert (x53 x1052))
(assert (= x861 (or x1170 x884)))
(assert (x53 x1475))
(assert (x397 x227 x477 x427 x1119))
(assert (x1369 x1351))
(assert (x1496 x156))
(assert (x307 x768))
(assert (x53 x195))
(assert (x1499 x432))
(assert (= (and x147 (not x365)) x875))
(assert (x53 x251))
(assert (= (and x541 (not x974)) x980))
(assert (x53 x968))
(assert (x53 x206))
(assert (x290 x270))
(assert (x1297 x216))
(assert (x53 x614))
(assert (= (x788 x1385) 0))
(assert (= x1152 (and x1216 (not x995))))
(assert (x53 x179))
(assert (x1197 x477 (- x227 x427)))
(assert (x53 x1382))
(assert (x1223 (x1054 x932 96)))
(assert (x53 x151))
(assert (x53 x369))
(assert (= (and (=> (and x1213 (= x242 (= 0 x492))) (and (=> (and (not x242) (and (= (= x745 0) x1024) (= x382 x1028) (= (x1338 (x1201 x492) (x202 15) 0) x382) (= x745 (x1389 1461501637330902918203684832716283019655932542975 x462)) (= x462 (x586 x1028)))) (and (=> (and (not x1024) (and (= x275 (x586 x1191)) (= x1191 (x743 x382 3)) (= (= 0 x275) x677))) (and (=> (and x677 (and (= x701 x1336) (= 4 x1518))) x464) (=> (and (and (= x557 (= 0 x1348)) (= x1348 (x586 x358)) (= (x743 x1191 1) x358)) (not x677)) (and (=> (and (and (= x701 x1336) (= 1 x1518)) x557) x464) (=> (and (and (= (x586 x405) x892) (= (= 0 x1376) x469) (= x1376 (x1389 1461501637330902918203684832716283019655932542975 x892)) (= (x1338 (x1201 x906) (x202 1) 0) x405)) (not x557)) (and (=> (and x469 (and (= (x1389 1461501637330902918203684832716283019655932542975 x367) x1047) (= (x708 (x1201 x1047)) x893) (= (x586 (x202 0)) x367) (= x1464 x297) (= (= 0 x893) x1205) (= (x1259 (+ x1336 4)) x297))) (and (=> x1205 x962) (=> (and (and (= (> x999 0) x138) (or (and (not x138) (= x1312 x999)) (and x138 (and (> 4294967296 x309) (= x1312 1))))) (not x1205)) x1080))) (=> (and (and (= x250 x1336) (= x1376 x1101)) (not x469)) x752))))))) (=> (and (and (= x1336 x701) (= 0 x1518)) x1024) x464))) (=> x242 x962))) (=> (not x1213) x962)) x1373))
(assert (x53 x628))
(assert (x53 x182))
(assert (= (x1508 x235 96) (x547 (* 79228162514264337593543950336 x235))))
(assert (= x766 (and (not x1485) x37)))
(assert (x53 x446))
(assert (= (+ (x300 x720) 1) (x300 (x743 x720 1))))
(assert (= x960 (x300 (x1201 x960))))
(assert (= (x176 x628) 0))
(assert (x53 x414))
(assert (= 0 (x197 x98)))
(assert (x1223 x457))
(assert (x1223 2661379305446904779734859349833089258949455794555359447896749126450))
(assert (x1223 x1049))
(assert (= x269 (and x482 (not x1520))))
(assert (x53 x392))
(assert (= (+ 1 (x300 x1038)) (x300 (x743 x1038 1))))
(assert (= 57896044618658097711785492504343953926418782139537452191302581570759080747168 (x300 (x202 57896044618658097711785492504343953926418782139537452191302581570759080747168))))
(assert (and (=> (> 4294967296 0) (= x111 (+ (* (x986 x111 4294967296) 4294967296) (x1381 x111 4294967296)))) (x1253 x111 4294967296) (x298 x111 4294967296) (x1010 x111 4294967296)))
(assert (= x540 (and x1294 x21)))
(assert (= x1082 (and x322 x172)))
(assert (x53 x146))
(assert (x53 x80))
(assert (x1297 x46))
(assert (x53 x647))
(assert (x53 x376))
(assert (x53 x370))
(assert (x1496 x1003))
(assert (x53 x704))
(assert (=> (>= 10000 (x1054 x1396 96)) (= (x1201 (x1054 x1396 96)) (x202 (x1054 x1396 96)))))
(assert (= (and (not x1166) x444) x841))
(assert (x1297 x537))
(assert (x53 x1243))
(assert (= x827 (and x128 (not x441))))
(assert (x53 x1069))
(assert (x53 x990))
(assert (x53 x1371))
(assert (x53 x1336))
(assert (x53 x1195))
(assert (x1369 x1003))
(assert (x53 x1518))
(assert (= (or x1360 (and x811 x1252)) x1004))
(assert (x1197 x1119 (- x427 x227)))
(assert (=> (<= x1047 10000) (= (x202 x1047) (x1201 x1047))))
(assert (x397 x1119 x427 x227 x477))
(assert (x53 x282))
(assert (x1297 x959))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x1003 (+ (* (x986 x1003 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x1003 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x1003 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x1003 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x1003 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x300 (x1201 x1047)) x1047))
(assert (x53 x771))
(assert (x53 x65))
(assert (x53 x408))
(assert (= 0 (x176 x709)))
(assert (x1496 x1109))
(assert (= x1498 (and x377 x833)))
(assert (x1297 x947))
(assert (x1369 x768))
(assert (= (x1201 111898140286184639627988011319402352826893257207651552004621811389633377861632) (x202 111898140286184639627988011319402352826893257207651552004621811389633377861632)))
(assert (x1499 x31))
(assert (x53 x393))
(assert (x53 x1460))
(assert (=> (>= 10000 x1315) (= (x1201 x1315) (x202 x1315))))
(assert (x53 x768))
(assert (= x742 (or x1343 x654)))
(assert (= x1094 (and x266 x447)))
(assert (x1297 x926))
(assert (x53 x1206))
(assert (x53 x608))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x537 (+ (* (x986 x537 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x537 1461501637330902918203684832716283019655932542976)))) (x1253 x537 1461501637330902918203684832716283019655932542976) (x298 x537 1461501637330902918203684832716283019655932542976) (x1010 x537 1461501637330902918203684832716283019655932542976)))
(assert (x1369 x367))
(assert (=> (<= x131 10000) (= (x1201 x131) (x202 x131))))
(assert (x1223 x975))
(assert (x53 x595))
(assert (x53 x1335))
(assert (= (and x1310 (not x1103)) x1380))
(assert (x53 x1177))
(assert (= (x300 (x1201 x131)) x131))
(assert (x1369 x771))
(assert (x53 x913))
(assert (= x1317 (=> (and (= x1345 x728) (not (< x673 x277))) x658)))
(assert (x1297 x384))
(assert (x53 x1378))
(assert (x53 x877))
(assert (x290 79228162514264337593543950336))
(assert (x1369 x1391))
(assert (x1223 x1248))
(assert (and (=> (> 4294967296 0) (= x99 (+ (* (x986 x99 4294967296) 4294967296) (x1381 x99 4294967296)))) (x1253 x99 4294967296) (x298 x99 4294967296) (x1010 x99 4294967296)))
(assert (x53 x1119))
(assert (= x996 (and (not x1447) x200)))
(assert (= x117 (or (and x368 x1205) x84 x81 x136 (and x139 x653) (and x1292 x308) x1523 (and (not x693) x552) x323 x1370 x1309 (and x741 x803) x286 (and x969 x1027) x265 x532 (and x723 x183) x976 (and x1364 (not x366)) (and (not x456) x187) (and x1082 x1092) x1031 x807 x585 x736 x1041 (and x1383 (not x770)) x763 x1059 (and (not x791) x510) (and x441 x128) x1008 x897 (and x793 x1073) x454 (and x147 x365) (and x573 x930) x141 (and x889 x1380) (and x927 x264) (and x1095 x1400) x525 (and x919 x689) x508 (and x1237 x761) x996 (and x302 x827) (and x1403 x843) x881 (and (not x273) x1037))))
(assert (=> (<= x680 10000) (= (x202 x680) (x1201 x680))))
(assert (x53 x233))
(assert (= (x300 (x743 x824 1)) (+ (x300 x824) 1)))
(assert (and (=> (> 32 0) (= x505 (+ (* (x986 x505 32) 32) (x1381 x505 32)))) (x1253 x505 32) (x298 x505 32) (x1010 x505 32)))
(assert (let ((x630 (* 79228162514264337593543950336 x1225))) (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x630 (+ (* (x986 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x630 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (and (=> (> 32 0) (= x156 (+ (* (x986 x156 32) 32) (x1381 x156 32)))) (x1253 x156 32) (x298 x156 32) (x1010 x156 32)))
(assert (= (x300 (x1201 (x1054 x376 96))) (x1054 x376 96)))
(assert (= (and x848 (not x1356)) x976))
(assert (= x86 (or x429 x440 x1313 x1377)))
(assert (=> (<= x355 10000) (= (x202 x355) (x1201 x355))))
(assert (x1297 x938))
(assert (= x1165 (and x459 (not x1085))))
(assert (x1223 x680))
(assert (x53 x324))
(assert (x1499 x595))
(assert (x53 x946))
(assert (= 0 (x197 (x1259 (+ 64 x90)))))
(assert (x397 x961 x1280 x227 x477))
(assert (x53 x204))
(assert (= (and x974 x541) x286))
(assert (= x942 (and x1 x749)))
(assert (x1223 x577))
(assert (= (x202 41880202175123281672023411390868823785620507377596298514233450382794225090560) (x1201 41880202175123281672023411390868823785620507377596298514233450382794225090560)))
(assert (x53 x1519))
(assert (x53 x1083))
(assert (x53 x188))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x373 (+ (* (x986 x373 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x373 1461501637330902918203684832716283019655932542976)))) (x1253 x373 1461501637330902918203684832716283019655932542976) (x298 x373 1461501637330902918203684832716283019655932542976) (x1010 x373 1461501637330902918203684832716283019655932542976)))
(assert (x53 x1229))
(assert (= (x300 (x202 41880202175123281672023411390868823785620507377596298514233450382794225090560)) 41880202175123281672023411390868823785620507377596298514233450382794225090560))
(assert (x1499 x373))
(assert (= x149 (and x78 x357)))
(assert (x53 x267))
(assert (= x1202 (and (not x1398) x690)))
(assert (x53 x1414))
(assert (x53 x1396))
(assert (x53 x637))
(assert (x53 x1060))
(assert (x53 x134))
(assert (x53 x120))
(assert (x1496 x1284))
(assert (x53 x612))
(assert (= x884 (and x328 x600)))
(assert (x1369 x46))
(assert (x53 x1467))
(assert (= (=> (and (and (= (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x156) x374) (= (x1259 (+ 128 x374)) x1500) (= x447 true) (= x156 (x1259 (+ x159 31))) (= (x215 128) x1234) (not (= 0 x1399)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x159) (and (= (<= x159 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x159)))) (= x1234 0)) (or (and x447 (= x447 x1220)) (and (not x447) (and (= x1220 (not x1394)) (= (= 0 x77) x1394) (= x387 (x1338 (x1201 x1459) x512 0)) (= (x1389 255 x1198) x77) (= x1198 (x864 x387)) (= (x1338 (x1201 x1459) (x202 21) 0) x512))))) x683) x1117))
(assert (= (=> (and (= x1302 (x1259 (+ x455 32))) (= x90 (x1259 (+ x1484 32))) (= x1186 (x1295 (- x90 32))) (= (x1259 (+ 32 x90)) x455) (= x179 (x1389 1461501637330902918203684832716283019655932542975 x480)) (= x90 x1217) (= x603 (x872 (x1259 (+ x90 96)))) (= x755 (x1295 (- x90 32))) (= (x1389 1461501637330902918203684832716283019655932542975 x480) x1129) (= 128 x780) (not (= x1129 0)) (= x626 (x872 x90)) (= x1285 (x872 (x1259 (+ x90 32)))) (= x179 x420) (= (x221 x626 x1285 x330 x603) x268) (<= x268 1461501637330902918203684832716283019655932542975) (= (x1365 x755) x480) (= x330 (x872 (x1259 (+ x90 64)))) (= x1475 (x1259 (+ x1302 32))) (= (> x1490 0) x1025)) (and (=> (and (and (and (= (= x227 0) x1516) (= x1190 (x743 x1138 1)) (= (x1338 (x1201 x1459) (x202 14) 0) x50) (= (x1259 (+ x90 128)) x524) (= (x864 x1138) x146) (= x208 (x864 x406)) (not (> x1061 x208)) (= (x1338 (x1201 x1459) (x202 20) 0) x873) (= x50 x406) (= (x1295 (- x208 x1061)) x227) (= (x864 x965) x85) (= x1061 (x864 x1190)) (= x477 (x1389 4294967295 x111)) (= (x743 x50 1) x1138) (= x965 (x743 x873 2)) (= (x864 (x202 19)) x111)) (or (and (not x1516) (and (< (x191 x227 x477) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x520 x716) (= x520 (x547 (x191 x227 x477))))) (and (= 0 x716) x1516))) x1025) x776) (=> (and (and (= (x864 x417) x426) (= x905 x934) (= x1445 (x743 x934 1)) (= x934 (x1338 (x1201 x1459) (x202 14) 0)) (= (x864 x905) x1427) (not (> x1195 x1438)) (= (x864 (x202 12)) x1195) (not (> x426 x1427)) (= x1135 x1493) (= x1438 (x1295 (- x1427 x426))) (= (x743 x1445 1) x417) (= (x1259 (+ x90 128)) x1493)) (not x1025)) x16))) x1281))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x926 (+ (* (x986 x926 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x926 1461501637330902918203684832716283019655932542976)))) (x1253 x926 1461501637330902918203684832716283019655932542976) (x298 x926 1461501637330902918203684832716283019655932542976) (x1010 x926 1461501637330902918203684832716283019655932542976)))
(assert (x1297 x1064))
(assert (=> (<= x234 10000) (= (x1201 x234) (x202 x234))))
(assert (= x1304 (and x995 x1216)))
(assert (x53 x1391))
(assert (=> (>= 10000 x1228) (= (x202 x1228) (x1201 x1228))))
(assert (x53 x1367))
(assert (x53 x1385))
(assert (x1369 x1068))
(assert (x53 x306))
(assert (x53 x402))
(assert (x53 x450))
(assert (x53 x1068))
(assert (x1369 x1337))
(assert (x1499 x1064))
(assert (x526 x477 x227 x427 x1119))
(assert (x53 x893))
(assert (x53 x1332))
(assert (x1297 x912))
(assert (x53 x981))
(assert (x481 x492))
(assert (= (x202 107954783943672036892603255375593993710912147498776614820764573710931487358976) (x1201 107954783943672036892603255375593993710912147498776614820764573710931487358976)))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x814 (+ (* (x986 x814 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x814 1461501637330902918203684832716283019655932542976)))) (x1253 x814 1461501637330902918203684832716283019655932542976) (x298 x814 1461501637330902918203684832716283019655932542976) (x1010 x814 1461501637330902918203684832716283019655932542976)))
(assert (x53 x820))
(assert (x53 x296))
(assert (x1499 x480))
(assert (x1223 x1315))
(assert (x53 x1120))
(assert (x1297 x732))
(assert (x53 x954))
(assert (x53 x432))
(assert (x1369 x1020))
(assert (x53 x318))
(assert (x53 x89))
(assert (x53 x592))
(assert (x307 x361))
(assert (x53 x1316))
(assert (x53 x1242))
(assert (x53 x384))
(assert (= (and x25 x1320) x1309))
(assert (= (and x1025 x499) x1321))
(assert (x290 x1006))
(assert (x53 x1315))
(assert (x53 x1302))
(assert (= x653 (and x693 x552)))
(assert (x53 x477))
(assert (x481 x227))
(assert (x53 x75))
(assert (= (or x1002 x1202) x1148))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x1020 (+ (* (x986 x1020 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x1020 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x1020 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x1020 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x1020 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x290 x1298))
(assert (= x851 (x300 (x1201 x851))))
(assert (= x185 (and x1187 x1042)))
(assert (x1297 115792089237316195423570985007226406215939081747436879206741300988257197096960))
(assert (= x1230 (and x837 x1159)))
(assert (= (x300 (x743 x1445 1)) (+ (x300 x1445) 1)))
(assert (x1197 x227 (- x477 x1280)))
(assert (x53 x961))
(assert (= (and x1174 x1293) x676))
(assert (x1369 x111))
(assert (x1223 x906))
(assert (x1369 x216))
(assert (x53 x305))
(assert (and (=> (> 4294967296 0) (= x958 (+ (* (x986 x958 4294967296) 4294967296) (x1381 x958 4294967296)))) (x1253 x958 4294967296) (x298 x958 4294967296) (x1010 x958 4294967296)))
(assert (x53 x1232))
(assert (x53 x1509))
(assert (=> (>= 10000 x1278) (= (x202 x1278) (x1201 x1278))))
(assert (= x922 (and x1001 (not x560))))
(assert (x53 x812))
(assert (x1297 x1020))
(assert (x53 x845))
(assert (x53 x842))
(assert (x53 x993))
(assert (= x1049 (x300 (x1201 x1049))))
(assert (x53 x520))
(assert (x1499 x771))
(assert (x53 x490))
(assert (x1369 (* x492 79228162514264337593543950336)))
(assert (= (and (not x9) x941) x898))
(assert (x53 x1424))
(assert (x53 x1417))
(assert (= (and x1423 x232) x565))
(assert (x53 x1133))
(assert (x53 x692))
(assert (= (x202 11430537079145650693387304458692941425836787954612963690241153482819318579200) (x1201 11430537079145650693387304458692941425836787954612963690241153482819318579200)))
(assert (x1369 x462))
(assert (x53 x345))
(assert (x481 (- x1119 x1280)))
(assert (x53 x114))
(assert (= (and x153 (not x1418)) x854))
(assert (x53 x931))
(assert (x53 x997))
(assert (= (=> (and (not (= 0 x259)) (= (x1389 1461501637330902918203684832716283019655932542975 x1064) x259) (= x538 (x1389 1461501637330902918203684832716283019655932542975 x144)) (= x1466 (x1338 (x1201 x975) (x202 15) 0)) (= x144 (x864 x483)) (= (= 0 x538) x1431) x1220 (= x975 (x1389 1461501637330902918203684832716283019655932542975 x1064)) (= x483 x1466)) (and (=> (and (not x1431) (and (= x778 (x864 x62)) (= (x743 x1466 3) x62) (= (= 0 x778) x665))) (and (=> (and x665 (and (= 4 x696) (= x1500 x1333))) x757) (=> (and (not x665) (and (= x439 (= x642 0)) (= (x864 x1158) x642) (= x1158 (x743 x62 1)))) (and (=> (and (not x439) (and (= (x1389 1461501637330902918203684832716283019655932542975 x66) x575) (= (x864 x473) x66) (= (= 0 x575) x846) (= (x1338 (x1201 x906) (x202 1) 0) x473))) (and (=> (and (not x846) (and (= x1500 x335) (= x164 x575))) x973) (=> (and (and (or (and x1418 (and (= x313 1) (> 4294967296 x116))) (and (= x313 x792) (not x1418))) (and (= x559 (x864 (x202 0))) (= x422 x1426) (= (x708 (x1201 x244)) x226) (not (= 0 x226)) (= x1426 (x1259 (+ 4 x1500))) (= x244 (x1389 1461501637330902918203684832716283019655932542975 x559)) (= x1418 (< 0 x792)))) x846) x621))) (=> (and x439 (and (= x1333 x1500) (= 1 x696))) x757))))) (=> (and x1431 (and (= 0 x696) (= x1333 x1500))) x757))) x683))
(assert (x397 x427 x1119 x961 x1280))
(assert (= (=> (= x669 (= x1312 0)) (and (=> (and (not x669) (and (= (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x216) x717) (= x216 (x1259 (+ 31 x309))) (= x1354 (x1259 (+ x717 x1336))) (= x689 (or (and (= (<= x309 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x309)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x309))))) (and (=> (and (not x689) (and (= (= x1450 x926) x770) (= (x1389 1461501637330902918203684832716283019655932542975 x926) x1450) (= x1336 x315) (= (x1023 x315) x926))) (and (=> (not x770) x962) (=> (and x770 (and (= x926 x1101) (= x250 x1354))) x752))) (=> x689 x962))) (=> x669 x962))) x1080))
(assert (x53 x1153))
(assert (x481 (- x961 x477)))
(assert (x526 x961 x1280 x1119 x427))
(assert (x1369 x594))
(assert (x53 x43))
(assert (x53 x978))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x46 (+ (* (x986 x46 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x46 1461501637330902918203684832716283019655932542976)))) (x1253 x46 1461501637330902918203684832716283019655932542976) (x298 x46 1461501637330902918203684832716283019655932542976) (x1010 x46 1461501637330902918203684832716283019655932542976)))
(assert (= x153 (and x846 x1017)))
(assert (= x741 (and x733 (not x568))))
(assert (= x945 (and x697 (not x874))))
(assert (= x25 (and (not x983) x22)))
(assert (x53 x545))
(assert (and (=> (> 1461501637330902918203684832716283019655932542976 0) (= x993 (+ (* (x986 x993 1461501637330902918203684832716283019655932542976) 1461501637330902918203684832716283019655932542976) (x1381 x993 1461501637330902918203684832716283019655932542976)))) (x1253 x993 1461501637330902918203684832716283019655932542976) (x298 x993 1461501637330902918203684832716283019655932542976) (x1010 x993 1461501637330902918203684832716283019655932542976)))
(assert (= x1315 (x300 (x1201 x1315))))
(assert (x1197 x1119 (- x427 x477)))
(assert (x53 x1505))
(assert (x1297 x946))
(assert (x1223 x401))
(assert (=> (>= 10000 x851) (= (x1201 x851) (x202 x851))))
(assert (and (=> (> 32 0) (= x1307 (+ (* (x986 x1307 32) 32) (x1381 x1307 32)))) (x1253 x1307 32) (x298 x1307 32) (x1010 x1307 32)))
(assert (x526 x227 x477 x1280 x961))
(assert (= x615 (=> (and (and (= (< 0 x984) x1520) (not (= x582 0)) (= x582 (x708 (x1201 x457)))) (or (and (not x1520) (= x984 x343)) (and x1520 (and (> 4294967296 x231) (= 1 x343))))) x458)))
(assert (= x1292 (and x155 x356)))
(assert (x1369 x814))
(assert (= (+ (x300 x668) 1) (x300 (x743 x668 1))))
(assert (x53 x852))
(assert (= x1446 (or x149 x1088)))
(assert (= (x176 x315) 0))
(assert (and (x1517 x869 32) (x1412 x869 32) (= (* 32 (x986 x869 32)) (- x869 (x1389 31 x869))) (=> (and (> 32 0) (> x869 0)) (and (< (- x869 32) (* 32 (x986 x869 32))) (>= x869 (* 32 (x986 x869 32))))) (x1287 x869 32) (x593 x869 32)))
(assert (x53 x813))
(assert (= x810 (or x790 x1422)))
(assert (x1223 x244))
(assert (x526 x961 x1280 x477 x227))
(assert (= (x1201 2661379305446904779734859349833089258949455794555359447896749126450) (x202 2661379305446904779734859349833089258949455794555359447896749126450)))
(assert (x1197 x427 (- x1119 x227)))
(assert (and (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x1221 (+ (* (x986 x1221 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1381 x1221 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x1253 x1221 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x298 x1221 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1010 x1221 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x53 x442))
(assert (= (=> (and (= x1414 (x1389 1461501637330902918203684832716283019655932542975 x691)) (= x860 (x554 (x1259 (+ 32 x386)))) (= x386 (x1259 (+ x787 32))) (= x691 (x1019 x878)) (= x465 (= 0 x1414)) (= (x221 x671 x860 x1335 x1503) x314) (= (x554 (x1259 (+ 96 x386))) x1503) (= 128 x110) (= x878 (x1295 (- x386 32))) (= x542 x386) (= x1060 (x1295 (- x386 32))) (<= x314 1461501637330902918203684832716283019655932542975) (= x414 (x1259 (+ x386 32))) (= (x1259 (+ x414 32)) x413) (= x692 (x1259 (+ 32 x413))) (= x671 (x554 x386)) (= (x554 (x1259 (+ x386 64))) x1335)) (and (=> (and (and (= x569 (= x1055 x492)) (= (x1389 1461501637330902918203684832716283019655932542975 x691) x1055)) (not x465)) (and (=> (not x569) x962) (=> (and (= (> x825 0) x263) x569) (and (=> (and (not x263) (and (= x1397 (x1259 (+ 128 x386))) (= x998 x1347) (= x1347 (x1338 (x1201 x1062) (x202 14) 0)) (= x1413 (x586 x998)) (= x1319 (x586 x1056)) (= (x743 x1106 1) x1056) (= (x743 x1347 1) x1106) (= (x586 (x202 12)) x645) (= (< x1413 x1319) x1127))) (and (=> (and (not x1127) (and (= x488 (> x645 x402)) (= (x1295 (- x1413 x1319)) x402))) (and (=> x488 x962) (=> (and (= x970 x1397) (not x488)) x178))) (=> x1127 x962))) (=> (and (and (= x209 (x743 x254 2)) (= x254 (x1338 (x1201 x1062) (x202 20) 0)) (= (x1389 4294967295 x768) x1280) (= (x1259 (+ 128 x386)) x320) (= (x586 x1078) x1382) (= (> x1131 x393) x342) (= x1227 (x1338 (x1201 x1062) (x202 14) 0)) (= (x586 x209) x822) (= x1227 x516) (= x1131 (x586 x1328)) (= x1328 (x743 x1078 1)) (= (x586 (x202 19)) x768) (= x1078 (x743 x1227 1)) (= (x586 x516) x393)) x263) (and (=> (and (not x342) (and (= x961 (x1295 (- x393 x1131))) (= x830 (= x961 0)))) (and (=> (and x830 (= 0 x1521)) x1486) (=> (and (and (= x562 (x547 (x191 x961 x1280))) (= x1174 (< (x191 x961 x1280) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (not x830)) (and (=> (not x1174) x962) (=> (and x1174 (= x1521 x562)) x1486))))) (=> x342 x962))))))) (=> x465 x962))) x1478))
(assert (= (and (not x189) x1303) x1237))
(assert (x53 x645))
(assert (and (=> (> 32 0) (= x115 (+ (* (x986 x115 32) 32) (x1381 x115 32)))) (x1253 x115 32) (x298 x115 32) (x1010 x115 32)))
(assert (= (x300 (x202 115792089237316195423570985007226406215939081747436879206741300988257197096960)) 115792089237316195423570985007226406215939081747436879206741300988257197096960))
(assert (x53 x575))
(assert (x1297 x564))
(assert (= (=> (= x568 (= x228 0)) (and (=> (and (not x568) (and (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1229) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1229)) (< x1229 32))) x803) (= (x1259 (+ x409 x129)) x1115) (= (x1259 (+ x1229 31)) x1211) (= (x1389 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1211) x409))) (and (=> x803 x962) (=> (and (not x803) (and (= x791 (= x570 x383)) (= (x1389 1461501637330902918203684832716283019655932542975 x383) x570) (= x383 (x294 x1154)) (= x129 x1154))) (and (=> (and (and (= x960 x383) (= x68 x1115)) x791) x991) (=> (not x791) x962))))) (=> x568 x962))) x1392))
(assert (x1496 x732))
(assert (= x357 (or x117 x123)))
(assert (x1223 x492))
(assert (x481 x1062))
(assert (=> (>= 10000 x1101) (= (x1201 x1101) (x202 x1101))))
(assert (x53 x1160))
(assert (x53 x816))
(assert (= x682 (and x697 x874)))
(assert (x53 x1043))
(assert (=> (<= x1275 10000) (= (x1201 x1275) (x202 x1275))))
(assert (= x356 (and x1164 x1474)))
(assert (x53 x657))
(assert (x526 x477 x227 x1119 x427))
(assert (and (=> (> 32 0) (= x1020 (+ (* (x986 x1020 32) 32) (x1381 x1020 32)))) (x1253 x1020 32) (x298 x1020 32) (x1010 x1020 32)))
(assert (x53 x1013))
(assert (=> (>= 10000 x492) (= (x202 x492) (x1201 x492))))
(assert (x1223 x164))
(assert (x53 x1136))
(check-sat)
(exit)
