(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x410 0)) (((x366 (x370 Int)) (x325 (x236 x410) (x102 Int)) (x137 (x139 x410) (x304 x410) (x15 Int)))))
(declare-fun x160 () Int)
(declare-fun x216 () Int)
(declare-fun x90 () Int)
(declare-fun x270 () Int)
(declare-fun x446 () Int)
(declare-fun x156 () Int)
(declare-fun x111 (Int) Int)
(declare-fun x172 () Int)
(declare-fun x403 () Bool)
(declare-fun x4 () Int)
(declare-fun x200 () Int)
(declare-fun x116 () Int)
(declare-fun x61 () x410)
(declare-fun x409 () Int)
(declare-fun x107 () Int)
(declare-fun x1 () Int)
(declare-fun x134 () Int)
(declare-fun x344 () Int)
(declare-fun x330 () Int)
(declare-fun x256 (x410) Int)
(declare-fun x213 () Int)
(declare-fun x33 () Int)
(declare-fun x404 () x410)
(declare-fun x278 () Int)
(declare-fun x248 () Int)
(declare-fun x224 () Int)
(declare-fun x354 () Int)
(declare-fun x5 (Int) Int)
(declare-fun x166 () x410)
(declare-fun x142 () Int)
(declare-fun x60 () Int)
(declare-fun x441 () Int)
(declare-fun x56 () Int)
(declare-fun x376 () Int)
(declare-fun x369 () Int)
(declare-fun x302 () Int)
(declare-fun x237 () Bool)
(declare-fun x27 () Int)
(declare-fun x117 () Int)
(declare-fun x361 () Int)
(declare-fun x420 () Int)
(declare-fun x394 () Int)
(declare-fun x292 () Int)
(declare-fun x214 () Bool)
(declare-fun x430 (Int) x410)
(declare-fun x372 () Int)
(declare-fun x199 () Int)
(declare-fun x449 () Int)
(declare-fun x64 (Int Int) Int)
(declare-fun x453 () Int)
(declare-fun x254 () Int)
(declare-fun x44 () Bool)
(declare-fun x341 () Int)
(declare-fun x346 () Int)
(declare-fun x401 () Int)
(declare-fun x89 () x410)
(declare-fun x114 () Int)
(declare-fun x402 () Int)
(declare-fun x397 () x410)
(declare-fun x10 () Int)
(declare-fun x104 (Int) Int)
(declare-fun x336 () Int)
(declare-fun x321 () Int)
(declare-fun x120 () Int)
(declare-fun x194 () Int)
(declare-fun x434 (Int) Int)
(declare-fun x203 () Bool)
(declare-fun x52 () Int)
(declare-fun x165 () Int)
(declare-fun x243 () Int)
(declare-fun x415 () Int)
(declare-fun x416 () Bool)
(declare-fun x43 () Int)
(declare-fun x329 () Int)
(declare-fun x305 () Int)
(declare-fun x286 () Int)
(declare-fun x38 () Int)
(declare-fun x447 (Int) Int)
(declare-fun x143 () Bool)
(declare-fun x455 () Int)
(declare-fun x93 () Int)
(declare-fun x334 () Int)
(declare-fun x399 () Int)
(declare-fun x345 () Int)
(declare-fun x221 () Int)
(declare-fun x332 () x410)
(declare-fun x175 () Int)
(declare-fun x450 () Int)
(declare-fun x408 () x410)
(declare-fun x128 () Int)
(declare-fun x21 () Int)
(declare-fun x121 (Int) Int)
(declare-fun x124 () x410)
(declare-fun x240 (Int) Int)
(declare-fun x210 () Bool)
(declare-fun x152 () Int)
(declare-fun x176 () Int)
(declare-fun x161 () Int)
(declare-fun x365 () Int)
(declare-fun x312 () Int)
(declare-fun x202 () Int)
(declare-fun x141 () Int)
(declare-fun x306 () Int)
(declare-fun x94 () Int)
(declare-fun x28 () Int)
(declare-fun x290 () Bool)
(declare-fun x389 (Int Int) Int)
(declare-fun x335 () Int)
(declare-fun x127 () Bool)
(declare-fun x429 () Int)
(declare-fun x70 () Int)
(declare-fun x77 (Int) Int)
(declare-fun x367 () Int)
(declare-fun x71 () Int)
(declare-fun x318 () Int)
(declare-fun x295 () Int)
(declare-fun x82 () Int)
(declare-fun x54 () Int)
(declare-fun x2 () Int)
(declare-fun x340 (Int Int) Int)
(declare-fun x457 () Int)
(declare-fun x282 () Int)
(declare-fun x396 () Int)
(declare-fun x363 () Int)
(declare-fun x182 () Bool)
(declare-fun x311 () Int)
(declare-fun x18 () Int)
(declare-fun x123 () Int)
(declare-fun x207 () Int)
(declare-fun x97 () Int)
(declare-fun x126 () Bool)
(declare-fun x42 () Bool)
(declare-fun x189 () Int)
(declare-fun x13 () Int)
(declare-fun x284 () Int)
(declare-fun x380 () Int)
(declare-fun x386 () Int)
(declare-fun x181 () Bool)
(declare-fun x239 () Int)
(declare-fun x426 () Int)
(declare-fun x247 () Int)
(declare-fun x9 () Bool)
(declare-fun x187 () Int)
(declare-fun x289 () Int)
(declare-fun x291 (Int Int) Int)
(declare-fun x87 () Bool)
(declare-fun x31 () x410)
(declare-fun x101 () Int)
(declare-fun x264 () Int)
(declare-fun x350 () Int)
(declare-fun x130 () Int)
(declare-fun x63 () Int)
(declare-fun x55 () Bool)
(declare-fun x208 () Int)
(declare-fun x452 () Int)
(declare-fun x98 () Bool)
(declare-fun x327 () Int)
(declare-fun x347 () Int)
(declare-fun x197 () Int)
(declare-fun x113 () Int)
(declare-fun x191 () Int)
(declare-fun x155 () Int)
(declare-fun x390 () Bool)
(declare-fun x16 () Int)
(declare-fun x145 () Int)
(declare-fun x316 () Bool)
(declare-fun x358 () Int)
(declare-fun x260 () x410)
(declare-fun x261 (Int) Int)
(declare-fun x425 () Int)
(declare-fun x249 () Int)
(declare-fun x218 () Int)
(declare-fun x65 () Int)
(declare-fun x75 () Int)
(declare-fun x148 () Int)
(declare-fun x460 () Int)
(declare-fun x352 () Int)
(declare-fun x324 () Int)
(declare-fun x225 () Int)
(declare-fun x406 () Int)
(declare-fun x80 () Int)
(declare-fun x413 () Int)
(declare-fun x309 (Int) Int)
(declare-fun x190 () Int)
(declare-fun x96 () Int)
(declare-fun x407 () Int)
(declare-fun x424 () Int)
(declare-fun x319 () Int)
(declare-fun x40 () Int)
(declare-fun x100 () x410)
(declare-fun x308 () Int)
(declare-fun x222 () Int)
(declare-fun x398 (Int Int) Int)
(declare-fun x349 () Bool)
(declare-fun x313 () Int)
(declare-fun x7 () Int)
(declare-fun x58 () Int)
(declare-fun x184 () Int)
(declare-fun x122 () Int)
(declare-fun x297 () Int)
(declare-fun x144 () Int)
(declare-fun x279 () Int)
(declare-fun x220 () Int)
(declare-fun x456 () Int)
(declare-fun x265 () Int)
(declare-fun x244 () Int)
(declare-fun x84 () Int)
(declare-fun x108 () Int)
(declare-fun x400 () x410)
(declare-fun x428 () Int)
(declare-fun x86 () Int)
(declare-fun x174 () Int)
(declare-fun x159 () Bool)
(declare-fun x356 (Int) Int)
(declare-fun x26 () Int)
(declare-fun x39 () Int)
(declare-fun x462 () x410)
(declare-fun x211 () x410)
(declare-fun x359 () Int)
(declare-fun x464 () Bool)
(declare-fun x293 () Int)
(declare-fun x412 () Int)
(declare-fun x355 () Int)
(declare-fun x229 () Int)
(declare-fun x375 () Bool)
(declare-fun x62 () Int)
(declare-fun x25 () Bool)
(declare-fun x173 () Int)
(declare-fun x343 () x410)
(declare-fun x41 () Bool)
(declare-fun x228 () Int)
(declare-fun x259 () Int)
(declare-fun x115 () Int)
(declare-fun x283 () Int)
(declare-fun x235 () Bool)
(declare-fun x387 () Int)
(declare-fun x186 () Int)
(declare-fun x384 () Int)
(declare-fun x188 () Int)
(declare-fun x364 () Int)
(declare-fun x315 () Int)
(declare-fun x185 () Int)
(declare-fun x68 () x410)
(declare-fun x147 () Int)
(declare-fun x423 () Int)
(declare-fun x362 () Int)
(declare-fun x314 (x410) Int)
(declare-fun x212 () Int)
(declare-fun x233 () Int)
(declare-fun x262 () Int)
(declare-fun x59 () Int)
(declare-fun x433 () Bool)
(declare-fun x331 () Bool)
(declare-fun x418 () Bool)
(declare-fun x427 () Int)
(declare-fun x246 () Int)
(declare-fun x419 () Int)
(declare-fun x381 () Int)
(declare-fun x73 () Int)
(declare-fun x3 () Int)
(declare-fun x153 () x410)
(declare-fun x112 () Int)
(declare-fun x280 (Int) Int)
(declare-fun x267 () Int)
(declare-fun x206 () Int)
(declare-fun x317 () Int)
(declare-fun x205 () Int)
(declare-fun x383 () Int)
(declare-fun x238 () Int)
(declare-fun x378 () Bool)
(declare-fun x454 () x410)
(declare-fun x263 () Int)
(declare-fun x234 (Int) Int)
(declare-fun x444 () Int)
(declare-fun x74 () Int)
(declare-fun x85 (x410) Int)
(declare-fun x287 () x410)
(declare-fun x274 () Int)
(declare-fun x294 () Int)
(declare-fun x129 () Int)
(declare-fun x348 () Int)
(declare-fun x451 () Int)
(declare-fun x245 () x410)
(declare-fun x51 () Int)
(declare-fun x19 () Bool)
(declare-fun x439 () x410)
(declare-fun x20 () Int)
(declare-fun x29 (Int) Int)
(declare-fun x414 () Int)
(declare-fun x50 () Int)
(declare-fun x79 () Int)
(declare-fun x301 () Int)
(declare-fun x298 () Int)
(declare-fun x310 (Int) Int)
(declare-fun x445 () Int)
(declare-fun x417 () Int)
(declare-fun x135 () x410)
(declare-fun x232 () Int)
(declare-fun x437 () Int)
(declare-fun x353 () Int)
(declare-fun x371 () Int)
(declare-fun x76 () Int)
(declare-fun x30 () Int)
(declare-fun x385 () Int)
(declare-fun x195 () Int)
(declare-fun x257 () Int)
(declare-fun x183 () x410)
(declare-fun x273 () Int)
(declare-fun x288 () Int)
(declare-fun x382 () Int)
(declare-fun x72 () Int)
(declare-fun x14 () Int)
(declare-fun x459 () Bool)
(declare-fun x435 () Int)
(declare-fun x337 (Int) Int)
(declare-fun x179 () x410)
(declare-fun x170 () Int)
(declare-fun x209 (x410) Int)
(declare-fun x357 () Int)
(declare-fun x46 () Int)
(declare-fun x252 () Int)
(declare-fun x405 () Int)
(declare-fun x360 () Int)
(declare-fun x342 () Int)
(declare-fun x374 () Int)
(declare-fun x131 () Int)
(declare-fun x333 () Int)
(declare-fun x157 () Int)
(declare-fun x37 () Int)
(declare-fun x171 () Int)
(declare-fun x296 () Int)
(declare-fun x463 () Bool)
(declare-fun x241 () Bool)
(declare-fun x377 () Int)
(declare-fun x322 () Bool)
(declare-fun x138 () Bool)
(declare-fun x8 () Int)
(declare-fun x177 () Int)
(declare-fun x106 () x410)
(declare-fun x140 (Int) Int)
(declare-fun x227 () Int)
(declare-fun x271 () Int)
(declare-fun x395 () Int)
(declare-fun x196 () Int)
(declare-fun x443 () Int)
(declare-fun x67 () Int)
(declare-fun x193 () Int)
(declare-fun x83 () Int)
(declare-fun x136 () Int)
(declare-fun x461 () Int)
(declare-fun x393 () Int)
(declare-fun x258 () Int)
(declare-fun x34 () Int)
(declare-fun x178 () Int)
(declare-fun x339 () Int)
(declare-fun x373 () Int)
(define-fun x251 ((x410 x410) (x12 Int)) x410 (ite ((_ is x325) x410) (x325 (x236 x410) (+ (x102 x410) x12)) (ite ((_ is x137) x410) (x137 (x139 x410) (x304 x410) (+ (x15 x410) x12)) (x366 (+ (x370 x410) x12)))))
(define-fun x91 ((x48 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x48) (<= 0 x48)) x48 (- x48 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x22 ((x48 Int)) Int (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x48) (> 0 x48)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x48) x48))
(define-fun x154 ((x48 Int)) Int (ite (and (< x48 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x48 0)) x48 (ite (and (< x48 231584178474632390847141970017375815706539969331281128078915168015826259279872) (>= x48 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- x48 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x48) (< x48 0)) (+ x48 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x291 x48 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x78 ((x125 Int)) Bool (and (< x125 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x125)))
(define-fun x326 ((x125 Int) (x95 Int)) Bool (=> (and (> x95 0) (> x125 0)) (and (<= 0 (x64 x125 x95)) (>= x125 (x64 x125 x95)))))
(define-fun x268 ((x125 Int) (x95 Int)) Bool (=> (and (and (<= 1 x95) (< x95 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (< x125 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x125))) (and (<= 0 (x64 x125 x95)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x64 x125 x95)))))
(define-fun x285 ((x125 Int) (x95 Int)) Bool (=> (and (< x95 x125) (> x95 1)) (< (x64 x125 x95) x125)))
(define-fun x24 ((x125 Int) (x95 Int)) Bool (=> (and (> x125 0) (> x95 0)) (= (< x125 x95) (= (x64 x125 x95) 0))))
(define-fun x379 ((x125 Int)) Bool (= (x64 0 x125) 0))
(define-fun x57 ((x125 Int)) Bool (= x125 (x64 x125 1)))
(define-fun x223 ((x125 Int)) Bool (=> (not (= x125 0)) (= (x64 x125 x125) 1)))
(define-fun x436 ((x125 Int)) Bool (and (x223 x125) (x57 x125) (x379 x125)))
(define-fun x255 ((x125 Int)) Bool (and (= (x340 115792089237316195423570985008687907853269984665640564039457584007913129639935 x125) x125) (= x125 (x340 x125 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x242 ((x125 Int)) Bool (and (= (x340 0 x125) 0) (= 0 (x340 x125 0))))
(define-fun x300 ((x125 Int)) Bool (= (x340 x125 x125) x125))
(define-fun x47 ((x125 Int)) Bool (and (x242 x125) (x255 x125) (x300 x125)))
(define-fun x368 ((x125 Int) (x95 Int)) Bool (= (x340 x125 x95) (x340 x95 x125)))
(define-fun x323 ((x125 Int) (x95 Int)) Bool (and (<= 0 (x340 x125 x95)) (=> (>= x125 0) (>= x125 (x340 x125 x95))) (=> (<= 0 x95) (>= x95 (x340 x125 x95)))))
(define-fun x198 ((x125 Int) (x95 Int)) Bool (and (x323 x125 x95) (x368 x125 x95)))
(define-fun x66 ((x125 Int)) Bool (= (x291 x125 4294967296) (x340 x125 4294967295)))
(define-fun x151 ((x125 Int)) Bool (and (x198 x125 4294967295) (x66 x125)))
(define-fun x391 ((x125 Int) (x95 Int)) Bool (and (< (x291 x125 x95) x95) (<= 0 (x291 x125 x95))))
(define-fun x303 ((x125 Int) (x95 Int)) Bool (=> (and (> x95 0) (<= 0 x125)) (= (= (x291 x125 x95) x125) (> x95 x125))))
(define-fun x169 ((x125 Int) (x95 Int)) Bool (=> (and (and (< x125 (+ x95 x95)) (>= x125 x95)) (< 0 x95)) (= (- x125 x95) (x291 x125 x95))))
(define-fun x226 ((x125 Int)) Bool (= (x291 0 x125) 0))
(define-fun x163 ((x125 Int)) Bool (= 0 (x291 x125 1)))
(define-fun x69 ((x125 Int)) Bool (= (x291 x125 x125) 0))
(define-fun x277 ((x125 Int)) Bool (and (x226 x125) (x163 x125) (x69 x125)))
(define-fun x411 ((x125 Int)) Bool (= (x291 x125 340282366920938463463374607431768211456) (x340 x125 340282366920938463463374607431768211455)))
(define-fun x421 ((x125 Int)) Bool (and (x411 x125) (x198 x125 340282366920938463463374607431768211455)))
(define-fun x168 ((x125 Int)) Bool (= (ite (> 170141183460469231731687303715884105728 (x340 x125 340282366920938463463374607431768211455)) (x340 x125 340282366920938463463374607431768211455) (+ 115792089237316195423570985008687907852929702298719625575994209400481361428480 (x340 x125 340282366920938463463374607431768211455))) (x309 x125)))
(define-fun x167 ((x125 Int)) Bool (= (+ (x340 x125 115792089237316195423570985008687907852929702298719625575994209400481361428480) (x291 x125 340282366920938463463374607431768211456)) (x154 x125)))
(define-fun x132 ((x125 Int)) Bool (and (x198 x125 115792089237316195423570985008687907852929702298719625575994209400481361428480) (x167 x125)))
(define-fun x105 ((x125 Int) (x95 Int)) Bool (=> (and (> x95 0) (< 0 x125)) (= (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x389 x125 x95)) (= x95 (x64 (x154 (x389 x125 x95)) x125)))))
(define-fun x49 ((x125 Int) (x95 Int)) Bool (=> (and (not (= 0 x95)) (not (= 0 x125))) (and (= x95 (x64 (x389 x125 x95) x125)) (= (x64 (x389 x125 x95) x95) x125))))
(define-fun x118 ((x125 Int) (x95 Int)) Bool (=> (and (< 0 x125) (< 0 x95)) (= (> (x389 x125 x95) 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x95 (x64 115792089237316195423570985008687907853269984665640564039457584007913129639935 x125)))))
(define-fun x250 ((x125 Int) (x95 Int)) Bool (and (= (x154 (x389 x125 x95)) (x154 (x389 x125 (- x95 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x154 (x389 x125 x95)) (x154 (x389 (- x125 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x95 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x154 (x389 (- x125 115792089237316195423570985008687907853269984665640564039457584007913129639936) x95)) (x154 (x389 x125 x95)))))
(define-fun x92 ((x125 Int) (x95 Int)) Bool (and (=> (and (and (> x125 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x125 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x95) (> x95 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x389 (- x125 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x95 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x125) (x64 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x95))))) (=> (and (and (> x95 0) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x95)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x125) (<= x125 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (>= (x64 57896044618658097711785492504343953926634992332820282019728792003956564819968 x95) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x125)) (>= (x389 (- x125 115792089237316195423570985008687907853269984665640564039457584007913129639936) x95) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (=> (and (and (<= x125 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x125)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x95) (> x95 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x64 57896044618658097711785492504343953926634992332820282019728792003956564819968 x125) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x95)) (>= (x389 x125 (- x95 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x125) (> x125 0)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x95) (> x95 0))) (= (<= (x389 x125 x95) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= (x64 57896044618658097711785492504343953926634992332820282019728792003956564819967 x95) x125)))))
(define-fun x36 ((x125 Int)) Bool (and (= 0 (x389 x125 0)) (= (x389 0 x125) 0)))
(define-fun x88 ((x125 Int)) Bool (and (= x125 (x389 1 x125)) (= (x389 x125 1) x125)))
(define-fun x432 ((x125 Int)) Bool (and (x36 x125) (x88 x125)))
(define-fun x23 ((x125 Int)) Bool (= (+ (x291 x125 4294967296) (x340 x125 115792089237316195423570985008687907853269984665640564039457584007908834672640)) (x154 x125)))
(define-fun x11 ((x125 Int)) Bool (and (x198 x125 115792089237316195423570985008687907853269984665640564039457584007908834672640) (x23 x125)))
(define-fun x231 ((x164 Int)) Int (ite (= x164 128) x189 (x29 x164)))
(define-fun x440 ((x164 Int)) Int (ite (= x164 160) x461 (x231 x164)))
(define-fun x320 ((x164 Int)) Int (ite (= x164 192) x414 (x440 x164)))
(define-fun x162 ((x164 Int)) Int (ite (= x164 224) x33 (x320 x164)))
(define-fun x219 ((x164 Int)) Int (ite (= 256 x164) x412 (x162 x164)))
(define-fun x133 ((x164 Int)) Int (ite (= x164 128) x213 (x337 x164)))
(define-fun x253 ((x164 Int)) Int (ite (= 160 x164) x350 (x240 x164)))
(define-fun x338 ((x164 Int)) Int (ite (= 192 x164) x172 (x280 x164)))
(define-fun x438 ((x164 Int)) Int (ite (= x164 224) x185 (x234 x164)))
(define-fun x149 ((x164 Int)) Int (ite (= x164 256) x43 (x356 x164)))
(define-fun x201 ((x164 Int)) Int (ite (= x164 288) x21 (x447 x164)))
(define-fun x17 ((x164 Int)) Int (ite (= x164 512) x341 (x77 x164)))
(define-fun x458 ((x164 Int)) Int (ite (= 544 x164) x435 (x17 x164)))
(define-fun x146 ((x164 Int)) Int (ite (= x164 576) x369 (x458 x164)))
(define-fun x269 ((x164 Int)) Int (ite (= x164 608) x282 (x146 x164)))
(define-fun x109 ((x164 Int)) Int (ite (= 640 x164) x246 (x269 x164)))
(define-fun x388 ((x164 Int)) Int (ite (= x164 672) x383 (x109 x164)))
(define-fun x422 ((x164 Int)) Int (ite (= 128 x164) x289 (x261 x164)))
(define-fun x217 ((x164 Int)) Int (ite (= 192 x164) x222 (x434 x164)))
(define-fun x158 ((x164 Int)) Int (ite (= 320 x164) 1 (x140 x164)))
(define-fun x230 ((x164 Int)) Int (ite (= 384 x164) 0 (x422 x164)))
(define-fun x431 ((x164 Int)) Int (ite (= 352 x164) 384 (x111 x164)))
(define-fun x392 ((x164 Int)) Int (ite (= 352 x164) 128 (x431 x164)))
(define-fun x45 ((x164 Int)) Int (ite (= 448 x164) 1 (x310 x164)))
(define-fun x192 ((x164 Int)) Int (ite (= 512 x164) 0 (x217 x164)))
(define-fun x119 ((x164 Int)) Int (ite (= x164 480) 512 (x121 x164)))
(define-fun x272 ((x164 Int)) Int (ite (= x164 480) 192 (x119 x164)))
(define-fun x110 ((x164 x410)) Int (ite (= x68 x164) x34 (x314 x164)))
(define-fun x266 ((x164 x410)) Int (ite (= x400 x164) x225 (x110 x164)))
(define-fun x442 ((x164 x410)) Int (ite (= x164 x106) x347 (x266 x164)))
(define-fun x103 ((x164 x410)) Int (ite x378 (x314 x164) (x442 x164)))
(define-fun x150 ((x164 x410)) Int (ite (= x124 x164) x113 (x103 x164)))
(define-fun x448 ((x164 x410)) Int (ite (= x211 x164) x8 (x150 x164)))
(define-fun x215 ((x164 x410)) Int (ite (= x164 x153) x14 (x448 x164)))
(define-fun x275 ((x164 x410)) Int (ite x349 (x103 x164) (x215 x164)))
(define-fun x299 ((x164 Int)) Int (ite (= x164 128) x157 (x5 x164)))
(define-fun x32 ((x164 Int)) Int (ite (= 160 x164) x452 (x299 x164)))
(define-fun x81 ((x164 Int)) Int (ite (= 192 x164) x420 (x32 x164)))
(define-fun x307 ((x164 Int)) Int (ite (= 224 x164) x258 (x81 x164)))
(define-fun x328 ((x164 Int)) Int (ite (= 256 x164) x345 (x307 x164)))
(define-fun x204 ((x125 Int)) Bool (=> (and (not (= 340282366920938463463374607431768211455 x125)) (not (= x125 2220280665)) (not (= 340282366920938463463374607431768211456 x125)) (not (= 1461501637330902918203684832716283019655932542975 x125)) (not (= x125 4294967296)) (not (= x125 3110348530)) (not (= x125 18446744073709551616)) (> x125 10000) (not (= x125 115792089237316195423570985008687907852929702298719625575994209400481361428480)) (not (= x125 115792089237316195423570985008687907853269984665640564039457584007908834672640)) (not (= 4294967295 x125)) (not (= x125 1408642612)) (not (= x125 1960641893)) (not (= x125 79228162514264337593543950336)) (not (= 1749768213 x125)) (not (= 1084754510 x125)) (not (= x125 1266268229)) (not (= x125 1145971871)) (not (= x125 170141183460469231731687303715884105727)) (not (= 115792089237316195423570985008687907853099843482180094807725896704197245534208 x125)) (not (= 3250587425 x125)) (not (= x125 2652930389)) (not (= x125 115792089237316195423570985008687907853099843482180094807725896704197245534209)) (not (= x125 3547226261)) (not (= x125 1272242479)) (not (= 1960939212 x125))) (not ((_ is x366) (x430 x125)))))
(assert (x78 x367))
(assert (x78 x461))
(assert (and (x303 x67 340282366920938463463374607431768211456) (x391 x67 340282366920938463463374607431768211456) (x169 x67 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x67 340282366920938463463374607431768211456) (* (x64 x67 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x67))))
(assert (x78 x451))
(assert (x78 x74))
(assert (x78 x354))
(assert (x78 x188))
(assert (x78 x72))
(assert (x78 x195))
(assert (x78 x380))
(assert (x78 x334))
(assert (= (x430 115792089237316195423570985008687907853099843482180094807725896704197245534209) (x366 115792089237316195423570985008687907853099843482180094807725896704197245534209)))
(assert (x78 x200))
(assert (x47 x202))
(assert (x47 x312))
(assert (x277 x202))
(assert (x436 18446744073709551616))
(assert (x204 x184))
(assert (x47 x161))
(assert (= (x256 (x251 x166 3)) (+ 3 (x256 x166))))
(assert (= (x256 (x366 1461501637330902918203684832716283019655932542975)) 1461501637330902918203684832716283019655932542975))
(assert (x78 x286))
(assert (= x321 (x256 (x430 x321))))
(assert (x78 x412))
(assert (x47 x380))
(assert (x78 x221))
(assert (x78 x339))
(assert (x78 x160))
(assert (x78 x373))
(assert (x78 x352))
(assert (x78 x205))
(assert (and (x303 x262 4294967296) (x391 x262 4294967296) (x169 x262 4294967296) (=> (> 4294967296 0) (= (+ (x291 x262 4294967296) (* (x64 x262 4294967296) 4294967296)) x262))))
(assert (x78 x208))
(assert (and (x303 x395 340282366920938463463374607431768211456) (x391 x395 340282366920938463463374607431768211456) (x169 x395 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x395 340282366920938463463374607431768211456) (* (x64 x395 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x395))))
(assert (x78 x443))
(assert (x78 x364))
(assert (x78 x76))
(assert (= x237 (and x463 x181)))
(assert (x436 x16))
(assert (x78 x130))
(assert (x78 x117))
(assert (x78 x157))
(assert (and (x285 x284 79228162514264337593543950336) (=> (and (> x284 0) (> 79228162514264337593543950336 0)) (and (>= x284 (* 79228162514264337593543950336 (x64 x284 79228162514264337593543950336))) (< (- x284 79228162514264337593543950336) (* 79228162514264337593543950336 (x64 x284 79228162514264337593543950336))))) (x24 x284 79228162514264337593543950336) (x268 x284 79228162514264337593543950336) (x326 x284 79228162514264337593543950336) (= (- x284 (x340 79228162514264337593543950335 x284)) (* 79228162514264337593543950336 (x64 x284 79228162514264337593543950336)))))
(assert (x421 x202))
(assert (x78 x222))
(assert (x78 x362))
(assert (x78 x333))
(assert (= (x256 (x430 x264)) x264))
(assert (x78 x142))
(assert (= (x256 (x430 x56)) x56))
(assert (x78 x265))
(assert (x421 x424))
(assert (x78 x194))
(assert (and (x303 x2 340282366920938463463374607431768211456) (x391 x2 340282366920938463463374607431768211456) (x169 x2 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x2 340282366920938463463374607431768211456) (* (x64 x2 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x2))))
(assert (x198 x455 x380))
(assert (x78 x294))
(assert (x436 x355))
(assert (x78 x43))
(assert (x277 x265))
(assert (x78 x311))
(assert (= x44 (or x349 x237)))
(assert (x277 x426))
(assert (x421 x426))
(assert (x78 x184))
(assert (x198 x354 x367))
(assert (x47 x367))
(assert (= (+ (x256 x343) 1) (x256 (x251 x343 1))))
(assert (x78 x178))
(assert (= x127 (=> (and (= (x45 448) x38) (= x463 (> x38 0))) (and (=> x463 x316) (=> (not x463) x235)))))
(assert (x78 x406))
(assert (x78 x319))
(assert (= (x430 2652930389) (x366 2652930389)))
(assert (x78 x347))
(assert (x436 x353))
(assert (= (=> (and (= (x314 x68) x294) (= x96 (x22 (- x74 1))) (= x100 x68) (= x34 (x91 (+ x446 x456))) (= x74 (x309 x395)) (= x395 (x64 x244 340282366920938463463374607431768211456)) (= (x251 x166 4) x61) (= (x110 x400) x202) (= (x340 115792089237316195423570985008687907853269984665640564039457584007908834672640 x262) x401) (= x335 (x340 340282366920938463463374607431768211455 x296)) (= x262 (x266 x106)) (= x89 (x137 (x366 0) x61 0)) (= x56 (x230 x70)) (= x159 (and (> 115792089237316195423570985008687907853099843482180094807725896704197245534209 x437) (= (<= x437 57896044618658097711785492504343953926634992332820282019728792003956564819967) false))) (> x112 0) (= (and (= false (<= x74 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x74 115792089237316195423570985008687907853099843482180094807725896704197245534209)) x126) (= x451 0) (= x225 (x91 (+ x155 x145))) (= x456 x396) (= x155 (x340 340282366920938463463374607431768211455 x202)) (= x89 x400) (= x446 (x340 115792089237316195423570985008687907852929702298719625575994209400481361428480 x294)) (= (x309 x312) x437) (= (x158 320) x112) (= x145 (x154 (* x335 340282366920938463463374607431768211456))) (= (x251 x166 3) x106) (= x415 0) (= (x137 (x366 0) x61 0) x100) (= x457 (x22 (- x437 1))) (= (x137 (x430 x56) x287 0) x166) (= x19 (not (< 1 x218))) (= x218 (x158 320)) (= x415 (ite x159 1 0)) (= (x309 x457) x426) (= x227 x70) (= x451 (ite x126 1 0)) (= (x314 x68) x312) (= (x91 (+ 1 x401)) x347) (= x227 (x392 352)) (= (x309 x96) x296) (= x396 (x340 340282366920938463463374607431768211455 x426)) (= x244 (x110 x400))) (and x127 x19)) x418))
(assert (x78 x358))
(assert (x78 x377))
(assert (and (= (x389 9 9) 81) (= 81 (x389 27 3)) (= (x389 3 3) 9) (= 27 (x389 9 3))))
(assert (=> (>= 10000 x206) (= (x366 x206) (x430 x206))))
(assert (x78 x174))
(assert (=> (<= x130 10000) (= (x430 x130) (x366 x130))))
(assert (= (x256 (x366 79228162514264337593543950336)) 79228162514264337593543950336))
(assert (x78 x13))
(assert (x204 x327))
(assert (x78 x37))
(assert (and (x303 x259 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x391 x259 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x169 x259 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x291 x259 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x64 x259 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x259))))
(assert (x78 x284))
(assert (x78 x129))
(assert (x78 x1))
(assert (x78 x123))
(assert (x78 x283))
(assert (x78 x67))
(assert (x78 x21))
(assert (x198 x376 x279))
(assert (= (x430 3250587425) (x366 3250587425)))
(assert (x78 x243))
(assert (x47 x426))
(assert (x78 x186))
(assert (x78 x218))
(assert (x78 x28))
(assert (x436 4294967296))
(assert (x78 x423))
(assert (= (x256 (x366 4294967295)) 4294967295))
(assert (x78 x40))
(assert (x78 x145))
(assert (x78 x38))
(assert (= (x430 4294967296) (x366 4294967296)))
(assert (x78 x172))
(assert (x436 x284))
(assert (x78 x58))
(assert (= (x256 (x366 170141183460469231731687303715884105727)) 170141183460469231731687303715884105727))
(assert (= (x256 (x251 x260 1)) (+ 1 (x256 x260))))
(assert (x78 x59))
(assert (= (x366 2220280665) (x430 2220280665)))
(assert (=> (>= 10000 x51) (= (x430 x51) (x366 x51))))
(assert (x78 x54))
(assert (= 3110348530 (x256 (x366 3110348530))))
(assert (= (x256 (x366 2220280665)) 2220280665))
(assert (x78 x171))
(assert (x78 x10))
(assert (x421 x457))
(assert (x78 x270))
(assert (x47 x197))
(assert (x78 x120))
(assert (and (x303 x83 340282366920938463463374607431768211456) (x391 x83 340282366920938463463374607431768211456) (x169 x83 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x83 340282366920938463463374607431768211456) (* (x64 x83 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x83))))
(assert (x47 x96))
(assert (x47 x252))
(assert (x204 x207))
(assert (x78 x207))
(assert (x78 x247))
(assert (x47 x128))
(assert (= (x430 1461501637330902918203684832716283019655932542975) (x366 1461501637330902918203684832716283019655932542975)))
(assert (x78 x229))
(assert (x47 x450))
(assert (x436 x20))
(assert (x78 x329))
(assert (x47 x424))
(assert (x47 4294967295))
(assert (x78 x128))
(assert (and (x285 x142 340282366920938463463374607431768211456) (=> (and (> x142 0) (> 340282366920938463463374607431768211456 0)) (and (>= x142 (* 340282366920938463463374607431768211456 (x64 x142 340282366920938463463374607431768211456))) (< (- x142 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x64 x142 340282366920938463463374607431768211456))))) (x24 x142 340282366920938463463374607431768211456) (x268 x142 340282366920938463463374607431768211456) (x326 x142 340282366920938463463374607431768211456) (= (- x142 (x340 340282366920938463463374607431768211455 x142)) (* 340282366920938463463374607431768211456 (x64 x142 340282366920938463463374607431768211456)))))
(assert (=> (>= 10000 x30) (= (x430 x30) (x366 x30))))
(assert (x11 x262))
(assert (x204 x97))
(assert (= (x256 (x366 1272242479)) 1272242479))
(assert (x78 x353))
(assert (x78 x396))
(assert (x78 x450))
(assert (x277 x96))
(assert (x47 x294))
(assert (x78 x46))
(assert (x78 x244))
(assert (x78 x318))
(assert (x78 x101))
(assert (x78 x155))
(assert (x78 x383))
(assert (x78 x116))
(assert (x78 x456))
(assert (x78 x293))
(assert (x78 x345))
(assert (x78 x131))
(assert (x277 340282366920938463463374607431768211456))
(assert (x47 340282366920938463463374607431768211455))
(assert (x47 x67))
(assert (x78 x350))
(assert (= (x430 115792089237316195423570985008687907853269984665640564039457584007908834672640) (x366 115792089237316195423570985008687907853269984665640564039457584007908834672640)))
(assert (x78 x292))
(assert (x277 x457))
(assert (x277 x2))
(assert (= (x256 (x430 x63)) x63))
(assert (= 115792089237316195423570985008687907853099843482180094807725896704197245534208 (x256 (x366 115792089237316195423570985008687907853099843482180094807725896704197245534208))))
(assert (x78 x107))
(assert (= (x256 (x251 x439 3)) (+ 3 (x256 x439))))
(assert (x277 x128))
(assert (x78 x190))
(assert (x78 x263))
(assert (x78 x306))
(assert (x78 x348))
(assert (= (x430 79228162514264337593543950336) (x366 79228162514264337593543950336)))
(assert (x78 x262))
(assert (x78 x376))
(assert (x78 x444))
(assert (= (x366 1408642612) (x430 1408642612)))
(assert (x277 x395))
(assert (x78 x114))
(assert (x421 x377))
(assert (x78 x90))
(assert (x78 x56))
(assert (and (x303 x426 340282366920938463463374607431768211456) (x391 x426 340282366920938463463374607431768211456) (x169 x426 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x426 340282366920938463463374607431768211456) (* (x64 x426 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x426))))
(assert (= (x366 1960939212) (x430 1960939212)))
(assert (x78 x414))
(assert (x78 x419))
(assert (= (x366 3110348530) (x430 3110348530)))
(assert (= (x256 (x366 1960939212)) 1960939212))
(assert (x78 x297))
(assert (x78 x449))
(assert (x78 x14))
(assert (and (x285 x353 4294967296) (=> (and (> x353 0) (> 4294967296 0)) (and (>= x353 (* 4294967296 (x64 x353 4294967296))) (< (- x353 4294967296) (* 4294967296 (x64 x353 4294967296))))) (x24 x353 4294967296) (x268 x353 4294967296) (x326 x353 4294967296) (= (- x353 (x340 4294967295 x353)) (* 4294967296 (x64 x353 4294967296)))))
(assert (and (x303 x450 340282366920938463463374607431768211456) (x391 x450 340282366920938463463374607431768211456) (x169 x450 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x450 340282366920938463463374607431768211456) (* (x64 x450 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x450))))
(assert (= 2652930389 (x256 (x366 2652930389))))
(assert (x78 x279))
(assert (x78 x4))
(assert (x78 x446))
(assert (= (x256 (x366 18446744073709551616)) 18446744073709551616))
(assert (= (x366 4294967295) (x430 4294967295)))
(assert (x78 x71))
(assert (x421 x67))
(assert (= 115792089237316195423570985008687907853099843482180094807725896704197245534209 (x256 (x366 115792089237316195423570985008687907853099843482180094807725896704197245534209))))
(assert (x78 x176))
(assert (= x459 true))
(assert (x78 x382))
(assert (x78 x428))
(assert (x277 x67))
(assert (x78 x405))
(assert (x277 x450))
(assert (x78 x97))
(assert (=> (<= x207 10000) (= (x430 x207) (x366 x207))))
(assert (x78 x224))
(assert (x78 x112))
(assert (x78 x227))
(assert (= 340282366920938463463374607431768211455 (x256 (x366 340282366920938463463374607431768211455))))
(assert (x78 x193))
(assert (x78 x402))
(assert (x78 x202))
(assert (x78 x7))
(assert (x436 340282366920938463463374607431768211456))
(assert (x421 x116))
(assert (x78 x249))
(assert (x78 x399))
(assert (x78 x225))
(assert (= (x256 (x251 x332 2)) (+ (x256 x332) 2)))
(assert (x47 x195))
(assert (and (x303 x296 340282366920938463463374607431768211456) (x391 x296 340282366920938463463374607431768211456) (x169 x296 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x296 340282366920938463463374607431768211456) (* (x64 x296 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x296))))
(assert (x204 x313))
(assert (= (x256 (x251 x166 4)) (+ (x256 x166) 4)))
(assert (x78 x144))
(assert (x78 x271))
(assert (x47 x259))
(assert (x47 x354))
(assert (x78 x302))
(assert (x78 x437))
(assert (and (and (= (* (- x59 115792089237316195423570985008687907853269984665640564039457584007913129639936) 340282366920938463463374607431768211456) (x389 340282366920938463463374607431768211456 (- x59 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* (- x59 115792089237316195423570985008687907853269984665640564039457584007913129639936) 340282366920938463463374607431768211456) (* (- x59 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x389 (- 115792089237316195423570985008687907852929702298719625575994209400481361428480) (- x59 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x59 340282366920938463463374607431768211456) (* x59 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x389 (- 115792089237316195423570985008687907852929702298719625575994209400481361428480) x59))) (x105 340282366920938463463374607431768211456 x59) (x92 340282366920938463463374607431768211456 x59) (= (x389 340282366920938463463374607431768211456 x59) (* x59 340282366920938463463374607431768211456)) (x49 340282366920938463463374607431768211456 x59) (x250 340282366920938463463374607431768211456 x59) (x118 340282366920938463463374607431768211456 x59)))
(assert (x277 x83))
(assert (= (=> (and (= (x154 (* 340282366920938463463374607431768211456 x59)) x382) (= (x91 (+ x444 x249)) x113) (= x174 (x22 (- 115792089237316195423570985008687907853099843482180094807725896704197245534208 x71))) (= x259 (x448 x153)) (= x93 (x22 (- 170141183460469231731687303715884105727 x238))) (= x274 (x45 448)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x71) (and (> 0 x71) (= true (<= x71 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x241) (= x380 (ite (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x54)) (> x54 1)) 1 0)) (= 0 x445) (= (x137 (x366 0) x183 0) x404) (= x238 (x309 x116)) (= (x22 (- 115792089237316195423570985008687907853099843482180094807725896704197245534208 x238)) x54) (= x455 (ite (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x238) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x238)) (> 0 x238))) 1 0)) (= (x137 (x366 0) x183 0) x462) (= x138 (not (< 1 x274))) (= x279 (ite (or (> x93 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x93 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x93 1))) 1 0)) (= x232 (x22 (- 170141183460469231731687303715884105727 x71))) (= x153 (x251 x439 3)) (= x249 x26) (= (x91 (+ x212 x382)) x8) (= 0 x186) (= (x192 x144) x184) (= (x64 x142 340282366920938463463374607431768211456) x116) (= x59 (x340 340282366920938463463374607431768211455 x265)) (= (x309 x450) x265) (= x297 (x340 x455 x380)) (> x134 0) (= x26 (x340 340282366920938463463374607431768211455 x67)) (= x2 (x91 (+ x71 1))) (= x354 (ite (not x241) 1 0)) (= x14 (x91 (+ 1 x333))) (= x4 x144) (= x367 (ite (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x232)) (< x232 1)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x232)) 1 0)) (= (x340 x354 x367) x186) (= x128 (x103 x124)) (= 0 x381) (= (x150 x211) x80) (= x124 x404) (= x444 (x340 115792089237316195423570985008687907852929702298719625575994209400481361428480 x83)) (= x333 (x340 115792089237316195423570985008687907853269984665640564039457584007908834672640 x259)) (= (x272 480) x4) (= x195 (ite (and (= (<= x174 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< 1 x174)) 1 0)) (= 0 x297) (= x183 (x251 x439 4)) (= x211 x462) (= (or (> x238 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x238 0) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x238) true))) x375) (= (x340 340282366920938463463374607431768211455 x80) x212) (= (x309 x2) x67) (= (x91 (+ 1 x238)) x450) (= (x137 (x430 x184) x287 0) x439) (= x83 (x103 x124)) (= (ite (or (> x71 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x71) true) (< x71 0))) 1 0) x197) (= x71 (x309 x128)) (= (x340 x197 x195) x445) (= (x340 x376 x279) x381) (= (ite (not x375) 1 0) x376) (= (x45 448) x134) (= (x150 x211) x142)) (and x138 x235)) x316))
(assert (x78 x295))
(assert (= (x256 (x366 1145971871)) 1145971871))
(assert (= (x430 1272242479) (x366 1272242479)))
(assert (x78 x369))
(assert (= x235 (=> (and (and (= (= x86 x178) x290) (= x190 x115) (= x263 x86) (= x152 x79) (= x178 x117)) (and (>= 4294967295 x160) (= (x328 128) x79) (>= 1461501637330902918203684832716283019655932542975 x248) (= x345 (x340 4294967295 x161)) (= x157 (x275 x260)) (= x267 x311) (<= 0 x248) (= (x275 x454) x3) (<= 0 x427) (= x332 x245) (= x355 (x275 x454)) (= x315 x30) (= x207 x1) (= (x64 x355 18446744073709551616) x161) (= (x328 224) x263) (not (< x330 2652930389)) (= x371 (x328 192)) (<= x419 4294967295) (not (> 1749768213 x330)) (= x260 (x251 x332 2)) (= x16 (x275 x454)) (<= x427 1461501637330902918203684832716283019655932542975) (<= x39 1461501637330902918203684832716283019655932542975) (= 0 x156) (= x135 (x137 (x430 x30) (x430 x97) 0)) (< 0 x423) (= x427 x267) (= (x251 x260 1) x454) (= (x340 4294967295 x252) x420) (= x37 x156) (= x384 x97) (not (> 3110348530 x330)) (>= 340282366920938463463374607431768211455 x453) (= (x328 256) x372) (>= x160 0) (= x377 (x64 x16 79228162514264337593543950336)) (= x452 (x275 x245)) (<= 0 x453) (= (x340 340282366920938463463374607431768211455 x377) x258) (= x248 x173) (= (x64 x3 4294967296) x252) (= (x137 (x430 x207) x135 0) x332) (> 3547226261 x330) (<= 0 x419) (not (= x330 3110348530)) (= (x328 160) x115) (= (x209 (x430 x130)) x423) (<= 0 x39) (= 3250587425 x330))) x290)))
(assert (=> (>= 10000 x313) (= (x430 x313) (x366 x313))))
(assert (x78 x185))
(assert (x78 x305))
(assert (x78 x136))
(assert (= (x256 (x430 x184)) x184))
(assert (x78 x60))
(assert (x132 x294))
(assert (x78 x232))
(assert (x204 x264))
(assert (and (x303 x252 4294967296) (x391 x252 4294967296) (x169 x252 4294967296) (=> (> 4294967296 0) (= (+ (x291 x252 4294967296) (* (x64 x252 4294967296) 4294967296)) x252))))
(assert (= (and x459 x416) x403))
(assert (x78 x189))
(assert (x198 x197 x195))
(assert (x78 x315))
(assert (= 1960641893 (x256 (x366 1960641893))))
(assert (x78 x148))
(assert (x204 x63))
(assert (x78 x365))
(assert (x78 x457))
(assert (x78 x152))
(assert (x47 x296))
(assert (x78 x289))
(assert (x78 x327))
(assert (x47 x377))
(assert (x78 x170))
(assert (x421 x2))
(assert (x168 x96))
(assert (x204 x30))
(assert (x421 x450))
(assert (and (x303 x265 340282366920938463463374607431768211456) (x391 x265 340282366920938463463374607431768211456) (x169 x265 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x265 340282366920938463463374607431768211456) (* (x64 x265 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x265))))
(assert (= 340282366920938463463374607431768211456 (x256 (x366 340282366920938463463374607431768211456))))
(assert (and (x303 x262 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x391 x262 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x169 x262 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x291 x262 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x64 x262 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x262))))
(assert (x78 x427))
(assert (x78 x417))
(assert (x78 x415))
(assert (x277 x312))
(assert (x78 x187))
(assert (= (x256 (x366 1408642612)) 1408642612))
(assert (x436 x244))
(assert (and (x285 x3 4294967296) (=> (and (> x3 0) (> 4294967296 0)) (and (>= x3 (* 4294967296 (x64 x3 4294967296))) (< (- x3 4294967296) (* 4294967296 (x64 x3 4294967296))))) (x24 x3 4294967296) (x268 x3 4294967296) (x326 x3 4294967296) (= (- x3 (x340 4294967295 x3)) (* 4294967296 (x64 x3 4294967296)))))
(assert (and (and (= (* (- x335 115792089237316195423570985008687907853269984665640564039457584007913129639936) 340282366920938463463374607431768211456) (x389 340282366920938463463374607431768211456 (- x335 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* (- x335 115792089237316195423570985008687907853269984665640564039457584007913129639936) 340282366920938463463374607431768211456) (* (- x335 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x389 (- 115792089237316195423570985008687907852929702298719625575994209400481361428480) (- x335 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* x335 340282366920938463463374607431768211456) (* x335 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x389 (- 115792089237316195423570985008687907852929702298719625575994209400481361428480) x335))) (x105 340282366920938463463374607431768211456 x335) (x92 340282366920938463463374607431768211456 x335) (= (x389 340282366920938463463374607431768211456 x335) (* x335 340282366920938463463374607431768211456)) (x49 340282366920938463463374607431768211456 x335) (x250 340282366920938463463374607431768211456 x335) (x118 340282366920938463463374607431768211456 x335)))
(assert (x78 x122))
(assert (x78 x424))
(assert (x78 x335))
(assert (= (+ 2 (x256 x31)) (x256 (x251 x31 2))))
(assert (x47 x83))
(assert (= (x430 340282366920938463463374607431768211456) (x366 340282366920938463463374607431768211456)))
(assert (x78 x401))
(assert (x78 x161))
(assert (= (x256 (x430 x30)) x30))
(assert (= (x366 1266268229) (x430 1266268229)))
(assert (= 4294967296 (x256 (x366 4294967296))))
(assert (x47 x279))
(assert (x78 x16))
(assert (x78 x355))
(assert (x78 x20))
(assert (x78 x346))
(assert (x78 x252))
(assert (x78 x73))
(assert (x277 x80))
(assert (x421 x395))
(assert (and (x303 x116 340282366920938463463374607431768211456) (x391 x116 340282366920938463463374607431768211456) (x169 x116 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x116 340282366920938463463374607431768211456) (* (x64 x116 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x116))))
(assert (x277 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x47 x405))
(assert (x168 x116))
(assert (x78 x216))
(assert (x432 x59))
(assert (x47 x262))
(assert (x78 x257))
(assert (and (x303 x312 340282366920938463463374607431768211456) (x391 x312 340282366920938463463374607431768211456) (x169 x312 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x312 340282366920938463463374607431768211456) (* (x64 x312 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x312))))
(assert (x78 x30))
(assert (= x206 (x256 (x430 x206))))
(assert (x78 x336))
(assert (x47 x2))
(assert (x78 x27))
(assert (x78 x363))
(assert (x78 x395))
(assert (x168 x2))
(assert (x78 x371))
(assert (= (x366 1084754510) (x430 1084754510)))
(assert (x78 x96))
(assert (and (x303 x80 340282366920938463463374607431768211456) (x391 x80 340282366920938463463374607431768211456) (x169 x80 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x80 340282366920938463463374607431768211456) (* (x64 x80 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x80))))
(assert (= 0 (x261 x70)))
(assert (x78 x445))
(assert (x277 4294967296))
(assert (x78 x374))
(assert (x78 x361))
(assert (= x313 (x256 (x430 x313))))
(assert (x78 x83))
(assert (x421 x96))
(assert (x168 x457))
(assert (x432 x335))
(assert (x78 x381))
(assert (= (x430 340282366920938463463374607431768211455) (x366 340282366920938463463374607431768211455)))
(assert (x78 x147))
(assert (=> (<= x321 10000) (= (x430 x321) (x366 x321))))
(assert (=> (<= x97 10000) (= (x430 x97) (x366 x97))))
(assert (x78 x274))
(assert (x421 x265))
(assert (x47 115792089237316195423570985008687907852929702298719625575994209400481361428480))
(assert (= (x430 170141183460469231731687303715884105727) (x366 170141183460469231731687303715884105727)))
(assert (x78 x26))
(assert (x204 x130))
(assert (= (x256 (x430 x207)) x207))
(assert (x78 x312))
(assert (x78 x51))
(assert (x78 x278))
(assert (x47 x75))
(assert (x78 x301))
(assert (x78 x313))
(assert (x78 x246))
(assert (x277 x75))
(assert (x78 x385))
(assert (x151 x405))
(assert (= (=> (and (and (= x301 x428) (<= 0 x359) (= x313 x315) (= x131 (x209 (x430 x130))) (= x384 x321) (not (< x170 3110348530)) (<= 0 x107) (= x117 (x219 224)) (not (= 3110348530 x170)) (>= x46 0) (= x405 (x64 x20 18446744073709551616)) (>= x339 0) (= x98 false) (<= x359 4294967295) (= x288 x220) (= x31 (x137 (x430 x51) x408 0)) (= (x340 340282366920938463463374607431768211455 x424) x33) (< 0 x206) (<= x342 340282366920938463463374607431768211455) (= x220 x13) (= (> (x209 (x430 x264)) 0) x433) (<= 0 x224) (= x224 (x85 (x430 x264))) (= x1 x51) (<= x107 1461501637330902918203684832716283019655932542975) (= x399 x193) (= (x314 x397) x353) x25 (< 0 x264) (< 0 x130) (= x308 (x219 128)) (= (x314 x397) x20) (= x179 x31) (= x406 x147) (>= x73 0) (<= x271 1461501637330902918203684832716283019655932542975) (= x271 x120) (<= 0 x348) (= x414 (x340 4294967295 x75)) x433 (= false x55) (> 3547226261 x170) (= (x314 x343) x189) (>= x101 0) (= (x85 (x430 x206)) x348) (>= x319 0) (= x397 (x251 x343 1)) (= x90 x129) (not (> 2652930389 x170)) (>= x406 0) (not (= x206 x264)) (= x424 (x64 x284 79228162514264337593543950336)) (not (= x130 x264)) x182 (= x25 (< 0 (x209 (x430 x206)))) (<= x101 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x264) (< 0 x131) (>= x288 0) (<= 0 x301) (= x182 (< 0 (x209 (x430 x130)))) (= x7 x107) (>= 1461501637330902918203684832716283019655932542975 x319) (= x75 (x64 x353 4294967296)) (= x292 5) (= (x251 x31 2) x343) (>= 1461501637330902918203684832716283019655932542975 x288) (= x464 false) (= x408 (x137 (x430 x313) (x430 x321) 0)) (= (x314 x179) x461) (= x101 x7) (= x143 false) (= x73 x173) (>= 1461501637330902918203684832716283019655932542975 x406) (>= 1461501637330902918203684832716283019655932542975 x193) (>= 1461501637330902918203684832716283019655932542975 x130) (<= x46 4294967295) (= (x314 x397) x284) (>= x171 0) (= 1266268229 x76) (<= 0 x342) (>= x193 0) (not (= x130 x206)) (= (x219 192) x270) (= (x340 4294967295 x405) x412) (= (x219 160) x108) (= x171 (x85 (x430 x130))) (= x199 (x219 256)) (>= 1461501637330902918203684832716283019655932542975 x339) (>= x271 0) (<= x301 1461501637330902918203684832716283019655932542975) (not (< x170 1749768213)) (>= 1461501637330902918203684832716283019655932542975 x73) (= 0 x90) (= 3250587425 x170) (<= x206 1461501637330902918203684832716283019655932542975)) (and (and (= (x149 256) x246) (not (or (and (= (<= x58 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 64 x58)) (> x58 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (>= x329 0) (= x369 (x338 192)) (= x318 192) (and (< 195 x62) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x62) true)) (= x308 x385) (= x221 x123) (= (x22 (- x62 4)) x165) (= (x22 (- x62 132)) x278) (= x417 192) (= x399 x141) (= (x388 512) x460) (< x273 2220280665) (= x329 x123) (= x393 (x388 608)) (= x334 x239) (>= 1461501637330902918203684832716283019655932542975 x141) (= x336 (x388 672)) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x278) (and (> 64 x278) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x278))))) (= (x438 224) x282) (<= x329 1461501637330902918203684832716283019655932542975) (> 2652930389 x273) (= (x388 640) x306) (= 128 x60) (= 1960939212 x273) (<= 0 x141) (= 256 x72) (= x383 (x201 288)) (= x341 (x133 128)) (= x177 x108) (>= x374 0) (= (x388 576) x443) (= x28 (x388 544)) (>= 1461501637330902918203684832716283019655932542975 x374) (not (< x273 1749768213)) (= (x253 160) x435) (not (= x273 1960641893)) (not (> 1960641893 x273)) (= (x22 (- x62 68)) x58) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x165) (and (< x165 192) (= true (<= x165 57896044618658097711785492504343953926634992332820282019728792003956564819967))))) (> x362 0) (= x334 0) (= 128 x257) (not (> 4 x62)) (= (x209 (x430 x130)) x362) (= 256 x136)) (and (= x42 (= x352 x364)) (= x205 0) (= (= x441 x361) x41) (= (not (= x196 x365)) x87) x210 (= x254 (x22 (- x62 4))) (< x18 1749768213) (= x386 448) x331 (= 320 x295) (not (= 1145971871 x18)) (>= x148 0) (= (x158 320) x65) (not (> 1084754510 x18)) (= (= x302 x191) x210) (= x114 x1) (not (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x254)) (> 256 x254)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x254))) (= x344 x336) (= x390 (= x283 x293)) (>= x194 0) (= x82 x441) (= x239 x50) (>= 1461501637330902918203684832716283019655932542975 x425) (= x175 x460) (= x216 x402) (= x293 x84) (= x1 x27) (= (= x216 x40) x203) (= x365 x1) (= x18 1266268229) (= x298 x191) (< x18 1272242479) (= x352 x449) (= x28 x200) (= x243 x196) (= 0 x94) x87 (>= 1461501637330902918203684832716283019655932542975 x194) (= x40 x243) (= x50 0) (<= 0 x425) (= x373 x302) (= (> x65 0) x416) (not (or (and (> 64 x187) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x187) true)) (> x187 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x84 x357) (= x361 x344) (= x393 x298) (= (x209 (x430 x130)) x363) (= (x137 (x430 x63) (x430 x327) 0) x287) x42 (>= 1461501637330902918203684832716283019655932542975 x148) (= x188 x221) x214 (= x214 (not (= x357 x114))) (= x443 x402) x41 (= x200 x229) (and (> x62 259) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x62) true)) x390 (= x188 x148) (= x331 (not (= x346 x27))) (= x10 0) (> x363 0) (= x384 x327) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x409) (and (< x409 64) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x409))))) (= x52 x122) (not (= 1084754510 x18)) (= x409 (x22 (- x62 68))) (not (> 4 x62)) (= x449 x306) (= x346 x233) (= x175 x283) (= (x22 (- x62 132)) x187) x9 (< x18 1408642612) (= x399 x194) (= (= x229 x122) x9) (= x233 x364) x203))) (and (=> (not x416) x127) (=> x416 x418))) x322))
(assert (x78 x34))
(assert (= 3250587425 (x256 (x366 3250587425))))
(assert (= x97 (x256 (x430 x97))))
(assert (x78 x359))
(assert (x151 x161))
(assert (= x181 (or x378 x403)))
(assert (and (x303 x294 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x391 x294 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x169 x294 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x291 x294 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x64 x294 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x294))))
(assert (x78 x455))
(assert (= (x430 115792089237316195423570985008687907853099843482180094807725896704197245534208) (x366 115792089237316195423570985008687907853099843482180094807725896704197245534208)))
(assert (x78 x425))
(assert (x78 x409))
(assert (x78 x413))
(assert (and (x303 x405 4294967296) (x391 x405 4294967296) (x169 x405 4294967296) (=> (> 4294967296 0) (= (+ (x291 x405 4294967296) (* (x64 x405 4294967296) 4294967296)) x405))))
(assert (x78 x238))
(assert (x78 x342))
(assert (x78 x18))
(assert (x78 x357))
(assert (x277 x161))
(assert (x204 x206))
(assert (x78 x113))
(assert (and (x285 x20 18446744073709551616) (=> (and (> x20 0) (> 18446744073709551616 0)) (and (>= x20 (* 18446744073709551616 (x64 x20 18446744073709551616))) (< (- x20 18446744073709551616) (* 18446744073709551616 (x64 x20 18446744073709551616))))) (x24 x20 18446744073709551616) (x268 x20 18446744073709551616) (x326 x20 18446744073709551616) (= (- x20 (x340 18446744073709551615 x20)) (* 18446744073709551616 (x64 x20 18446744073709551616)))))
(assert (x47 x457))
(assert (=> (>= 10000 x327) (= (x366 x327) (x430 x327))))
(assert (x151 x75))
(assert (x436 x142))
(assert (x78 x384))
(assert (= (x256 (x430 x130)) x130))
(assert (x78 x267))
(assert (= 3547226261 (x256 (x366 3547226261))))
(assert (x436 x3))
(assert (= (x430 1145971871) (x366 1145971871)))
(assert (x421 x128))
(assert (x277 x116))
(assert (x78 x213))
(assert (x78 x420))
(assert (x78 x52))
(assert (x168 x450))
(assert (x78 x386))
(assert (and (x303 x259 4294967296) (x391 x259 4294967296) (x169 x259 4294967296) (=> (> 4294967296 0) (= (+ (x291 x259 4294967296) (* (x64 x259 4294967296) 4294967296)) x259))))
(assert (x78 x239))
(assert (and (x303 x202 340282366920938463463374607431768211456) (x391 x202 340282366920938463463374607431768211456) (x169 x202 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x202 340282366920938463463374607431768211456) (* (x64 x202 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x202))))
(assert (x78 x233))
(assert (x78 x175))
(assert (x47 x455))
(assert (= 115792089237316195423570985008687907852929702298719625575994209400481361428480 (x256 (x366 115792089237316195423570985008687907852929702298719625575994209400481361428480))))
(assert (x78 x288))
(assert (x204 x321))
(assert (x78 x344))
(assert (and (x303 x424 340282366920938463463374607431768211456) (x391 x424 340282366920938463463374607431768211456) (x169 x424 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x424 340282366920938463463374607431768211456) (* (x64 x424 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x424))))
(assert (x78 x258))
(assert (= x327 (x256 (x430 x327))))
(assert (x277 x296))
(assert (x78 x372))
(assert (x432 340282366920938463463374607431768211456))
(assert (x78 x197))
(assert (x11 x259))
(assert (x78 x156))
(assert (x78 x393))
(assert (x168 x128))
(assert (x78 x65))
(assert (x78 x33))
(assert (x78 x341))
(assert (= (x256 (x251 x439 4)) (+ (x256 x439) 4)))
(assert (= (x434 x144) 0))
(assert (x78 x79))
(assert (x277 x405))
(assert (x78 x134))
(assert (x78 x86))
(assert (x78 x82))
(assert (x78 x80))
(assert (x168 x395))
(assert (x78 x141))
(assert (x78 x173))
(assert (=> (<= x184 10000) (= (x430 x184) (x366 x184))))
(assert (x78 x228))
(assert (= (x430 1749768213) (x366 1749768213)))
(assert (and (x285 x244 340282366920938463463374607431768211456) (=> (and (> x244 0) (> 340282366920938463463374607431768211456 0)) (and (>= x244 (* 340282366920938463463374607431768211456 (x64 x244 340282366920938463463374607431768211456))) (< (- x244 340282366920938463463374607431768211456) (* 340282366920938463463374607431768211456 (x64 x244 340282366920938463463374607431768211456))))) (x24 x244 340282366920938463463374607431768211456) (x268 x244 340282366920938463463374607431768211456) (x326 x244 340282366920938463463374607431768211456) (= (- x244 (x340 340282366920938463463374607431768211455 x244)) (* 340282366920938463463374607431768211456 (x64 x244 340282366920938463463374607431768211456)))))
(assert (x47 115792089237316195423570985008687907853269984665640564039457584007908834672640))
(assert (= (x256 (x366 1266268229)) 1266268229))
(assert (= (x366 3547226261) (x430 3547226261)))
(assert (x78 x50))
(assert (x277 x294))
(assert (=> (<= x56 10000) (= (x430 x56) (x366 x56))))
(assert (x47 x80))
(assert (x78 x387))
(assert (x78 x212))
(assert (x421 x296))
(assert (x78 x84))
(assert (x277 x252))
(assert (x78 x248))
(assert (x78 x435))
(assert (x78 x115))
(assert (x47 x376))
(assert (x78 x70))
(assert (x204 x51))
(assert (x78 x296))
(assert (x78 x441))
(assert (x78 x8))
(assert (x78 x75))
(assert (= x349 (and (not x463) x181)))
(assert (x78 x452))
(assert (x78 x39))
(assert (x78 x62))
(assert (and (x285 x16 79228162514264337593543950336) (=> (and (> x16 0) (> 79228162514264337593543950336 0)) (and (>= x16 (* 79228162514264337593543950336 (x64 x16 79228162514264337593543950336))) (< (- x16 79228162514264337593543950336) (* 79228162514264337593543950336 (x64 x16 79228162514264337593543950336))))) (x24 x16 79228162514264337593543950336) (x268 x16 79228162514264337593543950336) (x326 x16 79228162514264337593543950336) (= (- x16 (x340 79228162514264337593543950335 x16)) (* 79228162514264337593543950336 (x64 x16 79228162514264337593543950336)))))
(assert (x78 x429))
(assert (x78 x165))
(assert (and (x303 x377 340282366920938463463374607431768211456) (x391 x377 340282366920938463463374607431768211456) (x169 x377 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x377 340282366920938463463374607431768211456) (* (x64 x377 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x377))))
(assert (and (x303 x457 340282366920938463463374607431768211456) (x391 x457 340282366920938463463374607431768211456) (x169 x457 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x457 340282366920938463463374607431768211456) (* (x64 x457 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x457))))
(assert (x78 x407))
(assert (x436 79228162514264337593543950336))
(assert (and (x285 x355 18446744073709551616) (=> (and (> x355 0) (> 18446744073709551616 0)) (and (>= x355 (* 18446744073709551616 (x64 x355 18446744073709551616))) (< (- x355 18446744073709551616) (* 18446744073709551616 (x64 x355 18446744073709551616))))) (x24 x355 18446744073709551616) (x268 x355 18446744073709551616) (x326 x355 18446744073709551616) (= (- x355 (x340 18446744073709551615 x355)) (* 18446744073709551616 (x64 x355 18446744073709551616)))))
(assert (x78 x206))
(assert (= x51 (x256 (x430 x51))))
(assert (= 1749768213 (x256 (x366 1749768213))))
(assert (x421 x312))
(assert (x78 x317))
(assert (x78 x460))
(assert (x78 x199))
(assert (and (x303 x161 4294967296) (x391 x161 4294967296) (x169 x161 4294967296) (=> (> 4294967296 0) (= (+ (x291 x161 4294967296) (* (x64 x161 4294967296) 4294967296)) x161))))
(assert (= (x430 115792089237316195423570985008687907852929702298719625575994209400481361428480) (x366 115792089237316195423570985008687907852929702298719625575994209400481361428480)))
(assert (x151 x252))
(assert (x47 x116))
(assert (x78 x298))
(assert (= x378 (and (not x416) x459)))
(assert (x78 x63))
(assert (x78 x259))
(assert (x78 x94))
(assert (x277 x262))
(assert (= (x430 18446744073709551616) (x366 18446744073709551616)))
(assert (x204 x56))
(assert (and (x303 x83 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x391 x83 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x169 x83 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= (+ (x291 x83 115792089237316195423570985008687907853269984665640564039457584007913129639936) (* (x64 x83 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x83))))
(assert (x78 x264))
(assert (= 1084754510 (x256 (x366 1084754510))))
(assert (x78 x330))
(assert (= (x366 1960641893) (x430 1960641893)))
(assert (x78 x394))
(assert (x47 x265))
(assert (x277 x259))
(assert (x78 x3))
(assert (=> (>= 10000 x264) (= (x430 x264) (x366 x264))))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007908834672640 (x256 (x366 115792089237316195423570985008687907853269984665640564039457584007908834672640))))
(assert (x78 x2))
(assert (x78 x196))
(assert (x47 x395))
(assert (x168 x312))
(assert (and (x303 x128 340282366920938463463374607431768211456) (x391 x128 340282366920938463463374607431768211456) (x169 x128 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x128 340282366920938463463374607431768211456) (* (x64 x128 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x128))))
(assert (x277 x377))
(assert (x78 x220))
(assert (x277 x424))
(assert (x78 x273))
(assert (=> (>= 10000 x63) (= (x430 x63) (x366 x63))))
(assert (x78 x108))
(assert (x78 x254))
(assert (x78 x191))
(assert (and (x303 x96 340282366920938463463374607431768211456) (x391 x96 340282366920938463463374607431768211456) (x169 x96 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x96 340282366920938463463374607431768211456) (* (x64 x96 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x96))))
(assert (and (x303 x294 340282366920938463463374607431768211456) (x391 x294 340282366920938463463374607431768211456) (x169 x294 340282366920938463463374607431768211456) (=> (> 340282366920938463463374607431768211456 0) (= (+ (x291 x294 340282366920938463463374607431768211456) (* (x64 x294 340282366920938463463374607431768211456) 340282366920938463463374607431768211456)) x294))))
(assert (x78 x453))
(assert (x78 x308))
(assert (x78 x360))
(assert (x132 x83))
(assert (x78 x321))
(assert (x78 x93))
(assert (x421 x80))
(assert (x78 x282))
(assert (not x322))
(assert (x78 x177))
(assert (and (x303 x75 4294967296) (x391 x75 4294967296) (x169 x75 4294967296) (=> (> 4294967296 0) (= (+ (x291 x75 4294967296) (* (x64 x75 4294967296) 4294967296)) x75))))
(assert (x78 x324))
(assert (x78 x426))
(check-sat)
(exit)
