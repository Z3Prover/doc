(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x1073 0)) (((x714 (x31 x1073) (x300 Int)) (x1520 (x724 x1073) (x887 x1073) (x1881 x1073) (x997 x1073) (x1436 Int)) (x157 (x1078 x1073) (x1888 x1073) (x48 Int)) (x460 (x1803 Int)))))
(declare-fun x1403 () Bool)
(declare-fun x305 () Bool)
(declare-fun x1272 () Int)
(declare-fun x193 () Bool)
(declare-fun x1574 () Bool)
(declare-fun x675 () Int)
(declare-fun x659 () Int)
(declare-fun x1088 () Int)
(declare-fun x912 () Int)
(declare-fun x1631 () Int)
(declare-fun x1334 () Bool)
(declare-fun x10 () Int)
(declare-fun x1584 () Bool)
(declare-fun x796 () Bool)
(declare-fun x1494 () Int)
(declare-fun x1747 () Int)
(declare-fun x214 () Bool)
(declare-fun x73 () Int)
(declare-fun x1759 () Int)
(declare-fun x1485 () Int)
(declare-fun x1371 () Bool)
(declare-fun x1836 () Int)
(declare-fun x235 () Int)
(declare-fun x441 () Bool)
(declare-fun x924 () Bool)
(declare-fun x1359 () Bool)
(declare-fun x736 () Bool)
(declare-fun x7 () Bool)
(declare-fun x809 () Int)
(declare-fun x1649 () Bool)
(declare-fun x1906 () Bool)
(declare-fun x153 () Int)
(declare-fun x616 () x1073)
(declare-fun x1663 () Bool)
(declare-fun x204 () Bool)
(declare-fun x818 () Bool)
(declare-fun x688 () Int)
(declare-fun x1473 () Int)
(declare-fun x1061 () Int)
(declare-fun x716 (x1073) Int)
(declare-fun x86 () Int)
(declare-fun x1752 (Int) Int)
(declare-fun x1587 () Bool)
(declare-fun x491 () x1073)
(declare-fun x183 () Int)
(declare-fun x1098 (Int) Int)
(declare-fun x1659 () Int)
(declare-fun x1860 () Bool)
(declare-fun x1323 () Int)
(declare-fun x827 () Int)
(declare-fun x1586 (Int) Int)
(declare-fun x438 () Bool)
(declare-fun x1116 () Int)
(declare-fun x1287 () Int)
(declare-fun x704 () Bool)
(declare-fun x1377 () Int)
(declare-fun x1344 () Bool)
(declare-fun x531 () Int)
(declare-fun x1074 () Bool)
(declare-fun x1104 () Int)
(declare-fun x729 () Bool)
(declare-fun x1771 () Int)
(declare-fun x1782 () Bool)
(declare-fun x1618 () Int)
(declare-fun x1733 () Int)
(declare-fun x211 () Bool)
(declare-fun x1805 () Int)
(declare-fun x308 () Int)
(declare-fun x1549 () Int)
(declare-fun x894 () Int)
(declare-fun x1534 () Int)
(declare-fun x846 () Int)
(declare-fun x45 () Int)
(declare-fun x415 () Int)
(declare-fun x969 () Bool)
(declare-fun x608 () Int)
(declare-fun x343 () Bool)
(declare-fun x1871 () Bool)
(declare-fun x1540 () Bool)
(declare-fun x812 () Int)
(declare-fun x484 () Bool)
(declare-fun x508 () Int)
(declare-fun x1754 () Int)
(declare-fun x839 () Int)
(declare-fun x1217 () Int)
(declare-fun x1739 () Int)
(declare-fun x102 () Bool)
(declare-fun x1211 () Int)
(declare-fun x83 () Int)
(declare-fun x1697 (Int) Int)
(declare-fun x233 () Int)
(declare-fun x1897 (x1073) Int)
(declare-fun x1057 () Int)
(declare-fun x1600 () x1073)
(declare-fun x1575 () Bool)
(declare-fun x410 () Int)
(declare-fun x1777 () Int)
(declare-fun x116 () Int)
(declare-fun x751 () x1073)
(declare-fun x728 () Bool)
(declare-fun x683 () Int)
(declare-fun x151 () Int)
(declare-fun x1245 () Int)
(declare-fun x402 () Int)
(declare-fun x1311 () Bool)
(declare-fun x914 () Int)
(declare-fun x513 () Int)
(declare-fun x1744 () Int)
(declare-fun x870 () Bool)
(declare-fun x95 () Int)
(declare-fun x1379 () Int)
(declare-fun x380 () Int)
(declare-fun x1772 (Int Int) Int)
(declare-fun x335 () Int)
(declare-fun x1166 () Int)
(declare-fun x147 () Bool)
(declare-fun x1765 () Int)
(declare-fun x425 () Bool)
(declare-fun x1891 () Bool)
(declare-fun x854 () Bool)
(declare-fun x1866 () Int)
(declare-fun x638 () Bool)
(declare-fun x684 () Int)
(declare-fun x1035 () Int)
(declare-fun x19 () Bool)
(declare-fun x49 () Int)
(declare-fun x1221 () Bool)
(declare-fun x507 () Int)
(declare-fun x911 () x1073)
(declare-fun x767 () x1073)
(declare-fun x1352 () Int)
(declare-fun x1184 () Int)
(declare-fun x1464 () Bool)
(declare-fun x348 () Int)
(declare-fun x361 (Int Int) Int)
(declare-fun x131 () Bool)
(declare-fun x1511 () Int)
(declare-fun x311 () Bool)
(declare-fun x499 () Int)
(declare-fun x1682 () x1073)
(declare-fun x471 () Int)
(declare-fun x39 () Int)
(declare-fun x352 () Int)
(declare-fun x1726 () x1073)
(declare-fun x1337 () Int)
(declare-fun x1855 () x1073)
(declare-fun x1873 () Int)
(declare-fun x1022 () Bool)
(declare-fun x248 () Bool)
(declare-fun x1607 () x1073)
(declare-fun x215 () Bool)
(declare-fun x1390 () Bool)
(declare-fun x1356 () Int)
(declare-fun x40 () Bool)
(declare-fun x126 () Int)
(declare-fun x1274 () Int)
(declare-fun x1354 () Bool)
(declare-fun x1167 () Int)
(declare-fun x575 () Bool)
(declare-fun x875 () Bool)
(declare-fun x1338 () Int)
(declare-fun x1094 () Bool)
(declare-fun x1486 () Int)
(declare-fun x1447 () x1073)
(declare-fun x1899 () Int)
(declare-fun x1514 () Bool)
(declare-fun x1370 () Bool)
(declare-fun x1787 () Int)
(declare-fun x123 () Bool)
(declare-fun x516 () Bool)
(declare-fun x1137 () Int)
(declare-fun x1679 () Bool)
(declare-fun x742 () Int)
(declare-fun x1210 () Bool)
(declare-fun x617 (Int) Int)
(declare-fun x1847 () Int)
(declare-fun x1364 () x1073)
(declare-fun x1282 () Bool)
(declare-fun x1517 () x1073)
(declare-fun x597 () x1073)
(declare-fun x1518 () Int)
(declare-fun x697 () Bool)
(declare-fun x708 () Bool)
(declare-fun x781 () x1073)
(declare-fun x1062 () Bool)
(declare-fun x832 (x1073) Int)
(declare-fun x355 () Bool)
(declare-fun x884 () Int)
(declare-fun x366 () Int)
(declare-fun x953 () Int)
(declare-fun x58 () Int)
(declare-fun x1310 () Bool)
(declare-fun x1264 () Bool)
(declare-fun x1677 () Int)
(declare-fun x992 () Int)
(declare-fun x203 () Int)
(declare-fun x189 () Bool)
(declare-fun x1448 () Int)
(declare-fun x273 () Int)
(declare-fun x630 (Int) Int)
(declare-fun x1318 () Bool)
(declare-fun x1068 () Int)
(declare-fun x1030 () Bool)
(declare-fun x624 () Int)
(declare-fun x738 () Bool)
(declare-fun x1209 () Int)
(declare-fun x111 () Int)
(declare-fun x878 () Bool)
(declare-fun x1907 () Bool)
(declare-fun x923 () Int)
(declare-fun x364 () Bool)
(declare-fun x620 () Bool)
(declare-fun x330 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x1055 () Bool)
(declare-fun x1753 () Bool)
(declare-fun x66 () Bool)
(declare-fun x1183 (Int) Int)
(declare-fun x1727 () Int)
(declare-fun x104 () Bool)
(declare-fun x650 () Int)
(declare-fun x664 () Int)
(declare-fun x770 () Bool)
(declare-fun x1579 () Int)
(declare-fun x1187 () Int)
(declare-fun x114 () Bool)
(declare-fun x1720 () Bool)
(declare-fun x1691 () Bool)
(declare-fun x1770 () x1073)
(declare-fun x481 () Bool)
(declare-fun x949 () Int)
(declare-fun x819 () Bool)
(declare-fun x406 () Bool)
(declare-fun x579 (Int) Int)
(declare-fun x1345 () Int)
(declare-fun x258 () Bool)
(declare-fun x1148 () Int)
(declare-fun x121 () x1073)
(declare-fun x9 () Bool)
(declare-fun x489 () Int)
(declare-fun x1045 () Int)
(declare-fun x1571 () x1073)
(declare-fun x1714 () Int)
(declare-fun x749 () Bool)
(declare-fun x583 (x1073) Int)
(declare-fun x1566 (Int) Int)
(declare-fun x1115 (Int) Int)
(declare-fun x212 () Bool)
(declare-fun x1818 () Bool)
(declare-fun x176 () x1073)
(declare-fun x948 () Bool)
(declare-fun x1639 () Bool)
(declare-fun x621 () Bool)
(declare-fun x1767 () Bool)
(declare-fun x87 () x1073)
(declare-fun x1435 () Bool)
(declare-fun x537 () Int)
(declare-fun x777 () Bool)
(declare-fun x405 () Int)
(declare-fun x371 () Bool)
(declare-fun x331 () Bool)
(declare-fun x859 () Int)
(declare-fun x1443 () Int)
(declare-fun x1527 () Int)
(declare-fun x138 () Int)
(declare-fun x1626 () Int)
(declare-fun x1263 () Int)
(declare-fun x1199 () Bool)
(declare-fun x1342 () Bool)
(declare-fun x1774 () Bool)
(declare-fun x492 (Int) Int)
(declare-fun x536 () Int)
(declare-fun x543 () Bool)
(declare-fun x362 () Int)
(declare-fun x391 () Int)
(declare-fun x646 () Int)
(declare-fun x533 () Bool)
(declare-fun x1147 () Int)
(declare-fun x1139 () Int)
(declare-fun x1164 () Bool)
(declare-fun x271 () Bool)
(declare-fun x1072 () Int)
(declare-fun x1101 () Bool)
(declare-fun x1471 () Bool)
(declare-fun x1315 () Int)
(declare-fun x856 () Int)
(declare-fun x1488 () Int)
(declare-fun x369 () Int)
(declare-fun x1685 () Int)
(declare-fun x184 () Int)
(declare-fun x1325 () Bool)
(declare-fun x1820 () Bool)
(declare-fun x1063 () Bool)
(declare-fun x883 () Int)
(declare-fun x518 () Bool)
(declare-fun x1412 () Bool)
(declare-fun x551 () Bool)
(declare-fun x1749 () Int)
(declare-fun x455 () Bool)
(declare-fun x124 () Int)
(declare-fun x957 () Bool)
(declare-fun x1542 () Int)
(declare-fun x1336 () x1073)
(declare-fun x1269 () Int)
(declare-fun x107 () Int)
(declare-fun x1880 () Int)
(declare-fun x1498 () Bool)
(declare-fun x119 () Bool)
(declare-fun x1155 () Int)
(declare-fun x1730 () Int)
(declare-fun x1376 () Bool)
(declare-fun x1843 () Bool)
(declare-fun x1555 () Int)
(declare-fun x1507 () Bool)
(declare-fun x328 () Bool)
(declare-fun x434 () x1073)
(declare-fun x120 () Bool)
(declare-fun x655 () Int)
(declare-fun x687 () Int)
(declare-fun x524 () Bool)
(declare-fun x779 () Int)
(declare-fun x137 (Int) Int)
(declare-fun x1357 () Bool)
(declare-fun x610 () Int)
(declare-fun x1284 () Bool)
(declare-fun x1537 () Int)
(declare-fun x1297 () Int)
(declare-fun x133 () x1073)
(declare-fun x1461 () Bool)
(declare-fun x1254 () Int)
(declare-fun x1054 () Int)
(declare-fun x1206 () Int)
(declare-fun x899 (Int) Int)
(declare-fun x538 () Bool)
(declare-fun x855 () Int)
(declare-fun x530 () Bool)
(declare-fun x600 () Bool)
(declare-fun x1024 () Int)
(declare-fun x778 () Bool)
(declare-fun x1736 (Int) Int)
(declare-fun x988 () Bool)
(declare-fun x1595 () Bool)
(declare-fun x1565 () Bool)
(declare-fun x1696 () Int)
(declare-fun x1314 () Int)
(declare-fun x1118 () Int)
(declare-fun x52 () Int)
(declare-fun x385 () Bool)
(declare-fun x1811 () x1073)
(declare-fun x1010 () Bool)
(declare-fun x1431 () Int)
(declare-fun x468 () Bool)
(declare-fun x1612 () Int)
(declare-fun x1628 () Int)
(declare-fun x726 () x1073)
(declare-fun x1219 () Bool)
(declare-fun x386 (x1073) Int)
(declare-fun x379 () x1073)
(declare-fun x673 () Int)
(declare-fun x159 (Int) Int)
(declare-fun x6 () Bool)
(declare-fun x1523 () Int)
(declare-fun x558 () Bool)
(declare-fun x905 () Bool)
(declare-fun x895 () x1073)
(declare-fun x861 () Int)
(declare-fun x1801 () Bool)
(declare-fun x612 () Int)
(declare-fun x1194 () Int)
(declare-fun x1373 () Bool)
(declare-fun x1308 () Int)
(declare-fun x1188 () Int)
(declare-fun x1552 () Int)
(declare-fun x877 () Bool)
(declare-fun x946 () Bool)
(declare-fun x1672 () Bool)
(declare-fun x1112 () Int)
(declare-fun x966 () Bool)
(declare-fun x1226 () Int)
(declare-fun x634 () Int)
(declare-fun x873 () x1073)
(declare-fun x572 () Bool)
(declare-fun x1025 () Int)
(declare-fun x1335 () Int)
(declare-fun x521 () Int)
(declare-fun x692 () Int)
(declare-fun x1246 () Int)
(declare-fun x926 () Int)
(declare-fun x72 () Bool)
(declare-fun x1638 () Int)
(declare-fun x1676 () Int)
(declare-fun x1016 () Bool)
(declare-fun x1144 () x1073)
(declare-fun x1849 () Bool)
(declare-fun x354 () Int)
(declare-fun x1087 () x1073)
(declare-fun x1592 () Bool)
(declare-fun x55 () Int)
(declare-fun x1266 () Int)
(declare-fun x1138 () x1073)
(declare-fun x719 () Bool)
(declare-fun x762 () Int)
(declare-fun x615 () Int)
(declare-fun x1033 () Int)
(declare-fun x636 () Bool)
(declare-fun x1404 () Int)
(declare-fun x715 () Int)
(declare-fun x458 () Int)
(declare-fun x125 () Bool)
(declare-fun x586 () Int)
(declare-fun x717 () Bool)
(declare-fun x1850 () Bool)
(declare-fun x592 () x1073)
(declare-fun x642 () Bool)
(declare-fun x800 () x1073)
(declare-fun x255 () Bool)
(declare-fun x12 () Bool)
(declare-fun x346 () Int)
(declare-fun x53 () Int)
(declare-fun x1766 () Int)
(declare-fun x1291 () Bool)
(declare-fun x1825 () Int)
(declare-fun x643 () Int)
(declare-fun x1339 () Int)
(declare-fun x1041 () Bool)
(declare-fun x1449 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x722 () Int)
(declare-fun x286 () x1073)
(declare-fun x1734 (Int) Int)
(declare-fun x105 () Int)
(declare-fun x349 () Int)
(declare-fun x1313 () Int)
(declare-fun x414 () Int)
(declare-fun x1621 () Int)
(declare-fun x1005 () Bool)
(declare-fun x1289 () Bool)
(declare-fun x110 () Bool)
(declare-fun x965 () Int)
(declare-fun x932 () Bool)
(declare-fun x623 () x1073)
(declare-fun x167 () Int)
(declare-fun x1280 () x1073)
(declare-fun x1171 () Bool)
(declare-fun x1814 () Int)
(declare-fun x28 () x1073)
(declare-fun x1389 (x1073) Int)
(declare-fun x1833 () Int)
(declare-fun x423 () Bool)
(declare-fun x23 () Int)
(declare-fun x1568 () Bool)
(declare-fun x57 () Bool)
(declare-fun x1111 (Int) Int)
(declare-fun x1213 () Bool)
(declare-fun x436 () Bool)
(declare-fun x228 () Int)
(declare-fun x1014 () Int)
(declare-fun x373 () Bool)
(declare-fun x279 () x1073)
(declare-fun x299 () Bool)
(declare-fun x1815 () Int)
(declare-fun x1666 () Int)
(declare-fun x1802 () Int)
(declare-fun x1109 (Int) Int)
(declare-fun x919 () Int)
(declare-fun x291 () Bool)
(declare-fun x1786 () Int)
(declare-fun x920 () Int)
(declare-fun x820 () Int)
(declare-fun x1241 () Int)
(declare-fun x283 () Int)
(declare-fun x1135 () Int)
(declare-fun x494 () Int)
(declare-fun x461 () Bool)
(declare-fun x90 () Int)
(declare-fun x1103 () Bool)
(declare-fun x750 () Int)
(declare-fun x611 () Int)
(declare-fun x344 () Bool)
(declare-fun x1669 () Int)
(declare-fun x1003 () Bool)
(declare-fun x954 (x1073) Int)
(declare-fun x210 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x928 () Int)
(declare-fun x240 () Int)
(declare-fun x1329 () Bool)
(declare-fun x720 () Bool)
(declare-fun x196 (Int) Int)
(declare-fun x681 () Int)
(declare-fun x534 () Int)
(declare-fun x1237 () Int)
(declare-fun x761 () Int)
(declare-fun x633 () Int)
(declare-fun x239 () x1073)
(declare-fun x1290 () Int)
(declare-fun x265 () Int)
(declare-fun x1513 () Bool)
(declare-fun x978 () Int)
(declare-fun x836 () Int)
(declare-fun x408 () Int)
(declare-fun x132 () Int)
(declare-fun x1495 () x1073)
(declare-fun x1189 () Int)
(declare-fun x495 () Bool)
(declare-fun x1828 () Bool)
(declare-fun x315 () Bool)
(declare-fun x1524 () Bool)
(declare-fun x1172 () Int)
(declare-fun x161 () x1073)
(declare-fun x1396 () Bool)
(declare-fun x1560 () Int)
(declare-fun x1242 () Bool)
(declare-fun x880 () Int)
(declare-fun x961 () x1073)
(declare-fun x639 () Bool)
(declare-fun x1133 () Int)
(declare-fun x1589 () Int)
(declare-fun x46 () Int)
(declare-fun x1251 () Bool)
(declare-fun x1044 () Int)
(declare-fun x20 () Bool)
(declare-fun x392 () Int)
(declare-fun x735 () Int)
(declare-fun x267 () Bool)
(declare-fun x367 () Int)
(declare-fun x936 () Int)
(declare-fun x680 () Bool)
(declare-fun x178 () Bool)
(declare-fun x1220 () x1073)
(declare-fun x15 () Bool)
(declare-fun x824 () Bool)
(declare-fun x1053 () Int)
(declare-fun x245 () Bool)
(declare-fun x1840 () Bool)
(declare-fun x1316 () x1073)
(declare-fun x525 () Bool)
(declare-fun x785 () Int)
(declare-fun x26 () x1073)
(declare-fun x142 () Bool)
(declare-fun x676 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x312 () Bool)
(declare-fun x1293 () Int)
(declare-fun x181 () Bool)
(declare-fun x1253 () Bool)
(declare-fun x217 () Int)
(declare-fun x1207 () Int)
(declare-fun x1870 () Bool)
(declare-fun x1585 () Bool)
(declare-fun x96 () Bool)
(declare-fun x1798 () Int)
(declare-fun x595 () Bool)
(declare-fun x201 () Bool)
(declare-fun x148 () Int)
(declare-fun x753 () Bool)
(declare-fun x601 () Int)
(declare-fun x1037 () Bool)
(declare-fun x1034 () x1073)
(declare-fun x466 () Int)
(declare-fun x375 () Int)
(declare-fun x657 () Int)
(declare-fun x1822 () Int)
(declare-fun x109 () Int)
(declare-fun x232 () Bool)
(declare-fun x1156 () Bool)
(declare-fun x398 () Bool)
(declare-fun x407 () Bool)
(declare-fun x1813 (Int) Int)
(declare-fun x1231 () Int)
(declare-fun x622 () Bool)
(declare-fun x496 () Bool)
(declare-fun x449 () Bool)
(declare-fun x1402 () Bool)
(declare-fun x422 () x1073)
(declare-fun x1416 () Int)
(declare-fun x727 () Bool)
(declare-fun x433 () Int)
(declare-fun x1064 () Int)
(declare-fun x618 () Bool)
(declare-fun x986 () Int)
(declare-fun x1704 () Bool)
(declare-fun x1674 () Int)
(declare-fun x833 () Bool)
(declare-fun x1675 () Bool)
(declare-fun x825 () Int)
(declare-fun x588 () Int)
(declare-fun x292 () Int)
(declare-fun x892 () Int)
(declare-fun x1703 (x1073) Int)
(declare-fun x1460 () Bool)
(declare-fun x1247 () Int)
(declare-fun x454 () Int)
(declare-fun x1415 () Bool)
(declare-fun x269 () Bool)
(declare-fun x1008 () Int)
(declare-fun x535 () Bool)
(declare-fun x989 () Int)
(declare-fun x1 () Int)
(declare-fun x1606 () x1073)
(declare-fun x1875 () Bool)
(declare-fun x409 () Int)
(declare-fun x144 () x1073)
(declare-fun x744 () Int)
(declare-fun x1350 () Int)
(declare-fun x404 () Int)
(declare-fun x848 () Int)
(declare-fun x27 () Bool)
(declare-fun x913 () Bool)
(declare-fun x653 () x1073)
(declare-fun x1894 () Int)
(declare-fun x1824 () Int)
(declare-fun x577 () Bool)
(declare-fun x1648 () Int)
(declare-fun x1652 (Int Int) Int)
(declare-fun x1369 () x1073)
(declare-fun x1017 () Bool)
(declare-fun x999 () Int)
(declare-fun x503 () Int)
(declare-fun x702 () Bool)
(declare-fun x1123 () Int)
(declare-fun x1809 () Int)
(declare-fun x403 () Int)
(declare-fun x32 () Int)
(declare-fun x1047 () Int)
(declare-fun x1660 () Int)
(declare-fun x1067 () Bool)
(declare-fun x734 () Bool)
(declare-fun x560 () Int)
(declare-fun x33 () Int)
(declare-fun x1729 () Bool)
(declare-fun x463 () Bool)
(declare-fun x1418 () Bool)
(declare-fun x1026 () Bool)
(declare-fun x1601 () Bool)
(declare-fun x1650 () Bool)
(declare-fun x1330 () Int)
(declare-fun x968 () Int)
(declare-fun x393 () x1073)
(declare-fun x529 () Int)
(declare-fun x226 () Int)
(declare-fun x1215 () Bool)
(declare-fun x194 (Int) Int)
(declare-fun x1785 () Bool)
(declare-fun x1042 () Int)
(declare-fun x1294 () Int)
(declare-fun x1557 (Int) Int)
(declare-fun x1564 () Int)
(declare-fun x815 () Bool)
(declare-fun x1333 () Bool)
(declare-fun x117 () Int)
(declare-fun x1559 (Int) Int)
(declare-fun x759 () Bool)
(declare-fun x47 () Int)
(declare-fun x1065 () Bool)
(declare-fun x268 () x1073)
(declare-fun x826 () Int)
(declare-fun x2 () Bool)
(declare-fun x1288 () Bool)
(declare-fun x163 () Int)
(declare-fun x973 () Bool)
(declare-fun x1821 () x1073)
(declare-fun x288 () Bool)
(declare-fun x790 () Int)
(declare-fun x552 () Int)
(declare-fun x1060 () Int)
(declare-fun x1795 () x1073)
(declare-fun x1742 () Bool)
(declare-fun x442 () Int)
(declare-fun x1831 () Int)
(declare-fun x457 () Bool)
(declare-fun x200 () Int)
(declare-fun x1107 () Bool)
(declare-fun x213 () Bool)
(declare-fun x698 () x1073)
(declare-fun x1223 () Bool)
(declare-fun x347 () Bool)
(declare-fun x4 () x1073)
(declare-fun x1114 () Int)
(declare-fun x1636 () x1073)
(declare-fun x195 () Int)
(declare-fun x260 () Int)
(declare-fun x1437 () Bool)
(declare-fun x858 () Bool)
(declare-fun x587 () Int)
(declare-fun x1789 () Int)
(declare-fun x903 () Int)
(declare-fun x440 () Bool)
(declare-fun x1690 () Bool)
(declare-fun x927 () x1073)
(declare-fun x1038 () Bool)
(declare-fun x498 () Bool)
(declare-fun x769 () Bool)
(declare-fun x977 () Int)
(declare-fun x970 () Int)
(declare-fun x670 () Bool)
(declare-fun x885 () Int)
(declare-fun x1081 () Bool)
(declare-fun x1519 () Int)
(declare-fun x447 () Bool)
(declare-fun x92 () Int)
(declare-fun x77 () Int)
(declare-fun x187 () Bool)
(declare-fun x771 () x1073)
(declare-fun x1340 () Int)
(declare-fun x1004 () Int)
(declare-fun x1125 () Int)
(declare-fun x874 () Bool)
(declare-fun x1567 () Int)
(declare-fun x29 () Bool)
(declare-fun x1140 () Int)
(declare-fun x908 () Int)
(declare-fun x1629 () Bool)
(declare-fun x1532 () x1073)
(declare-fun x1842 () Bool)
(declare-fun x935 () Int)
(declare-fun x554 () Int)
(declare-fun x42 () Int)
(declare-fun x1203 () Int)
(declare-fun x136 () Int)
(declare-fun x1848 () Int)
(declare-fun x1780 () Bool)
(declare-fun x1654 () Int)
(declare-fun x672 () Int)
(declare-fun x879 () Int)
(declare-fun x1132 () Bool)
(declare-fun x1066 () Bool)
(declare-fun x416 () Bool)
(declare-fun x345 () Int)
(declare-fun x310 () Int)
(declare-fun x964 () Int)
(declare-fun x1193 (x1073) Int)
(declare-fun x510 () Bool)
(declare-fun x985 () Int)
(declare-fun x1361 () Bool)
(declare-fun x1862 () Bool)
(declare-fun x937 () Int)
(declare-fun x219 () Bool)
(declare-fun x79 () Int)
(declare-fun x752 () Bool)
(declare-fun x1806 () Int)
(declare-fun x766 () Int)
(declare-fun x1457 () Int)
(declare-fun x1141 (Int) Int)
(declare-fun x975 () Bool)
(declare-fun x1343 () Int)
(declare-fun x1229 () Bool)
(declare-fun x360 () Int)
(declare-fun x1793 () Bool)
(declare-fun x1684 () Int)
(declare-fun x464 () Int)
(declare-fun x976 () Int)
(declare-fun x479 () Int)
(declare-fun x1036 () Bool)
(declare-fun x50 () Bool)
(declare-fun x519 () x1073)
(declare-fun x411 () Int)
(declare-fun x1126 () Bool)
(declare-fun x450 () Bool)
(declare-fun x71 () Bool)
(declare-fun x1322 () Int)
(declare-fun x261 () Int)
(declare-fun x1012 () Bool)
(declare-fun x951 () Int)
(declare-fun x1347 () Int)
(declare-fun x737 () x1073)
(declare-fun x1185 () Int)
(declare-fun x459 () Bool)
(declare-fun x1635 () Bool)
(declare-fun x326 () Bool)
(declare-fun x1792 () Bool)
(declare-fun x869 () Int)
(declare-fun x437 () Bool)
(declare-fun x689 () Int)
(declare-fun x222 () Bool)
(declare-fun x166 (Int) Int)
(declare-fun x1651 () Int)
(declare-fun x1603 () Int)
(declare-fun x1102 () Int)
(declare-fun x1528 () Bool)
(declare-fun x831 () Bool)
(declare-fun x1324 () Int)
(declare-fun x1192 () Int)
(declare-fun x21 () Bool)
(declare-fun x1312 () Int)
(declare-fun x61 () Int)
(declare-fun x690 () Bool)
(declare-fun x263 () x1073)
(declare-fun x493 () Int)
(declare-fun x746 () Bool)
(declare-fun x143 () Bool)
(declare-fun x1487 () Bool)
(declare-fun x591 () Int)
(declare-fun x417 () Int)
(declare-fun x1048 () Bool)
(declare-fun x1476 () Int)
(declare-fun x974 () Int)
(declare-fun x1212 () x1073)
(declare-fun x1006 () Int)
(declare-fun x197 () Int)
(declare-fun x1399 () Int)
(declare-fun x394 () Bool)
(declare-fun x1664 () Int)
(declare-fun x395 () Int)
(declare-fun x1175 () Int)
(declare-fun x313 () Int)
(declare-fun x146 () Int)
(declare-fun x309 () Bool)
(declare-fun x1876 () Bool)
(declare-fun x1479 () Bool)
(declare-fun x1758 () Int)
(declare-fun x599 () Bool)
(declare-fun x1868 () Int)
(declare-fun x162 () Bool)
(declare-fun x1737 () Bool)
(declare-fun x1710 () Bool)
(declare-fun x1445 () Int)
(declare-fun x477 (Int) Int)
(declare-fun x1439 (Int) Int)
(declare-fun x370 () Bool)
(declare-fun x1846 () Int)
(declare-fun x420 () Int)
(declare-fun x1707 () Int)
(declare-fun x1076 () Bool)
(declare-fun x478 () Bool)
(declare-fun x314 () Bool)
(declare-fun x431 () Bool)
(declare-fun x789 () Int)
(declare-fun x944 () Int)
(declare-fun x1279 () Int)
(declare-fun x666 () Int)
(declare-fun x1130 () Int)
(declare-fun x1717 () Bool)
(declare-fun x445 () Int)
(declare-fun x817 () Int)
(declare-fun x1728 () Int)
(declare-fun x432 () Bool)
(declare-fun x419 () Bool)
(declare-fun x942 () Bool)
(declare-fun x1835 () Int)
(declare-fun x165 () Int)
(declare-fun x400 () Int)
(declare-fun x1029 () Int)
(declare-fun x1423 () Bool)
(declare-fun x1301 () Int)
(declare-fun x1506 () Bool)
(declare-fun x1105 () Int)
(declare-fun x1633 () Int)
(declare-fun x63 () Bool)
(declare-fun x1712 () Bool)
(declare-fun x1398 () Bool)
(declare-fun x1576 () Bool)
(declare-fun x192 () Int)
(declare-fun x721 () Int)
(declare-fun x1716 () Bool)
(declare-fun x1075 () Int)
(declare-fun x1572 () Bool)
(declare-fun x1348 () Int)
(declare-fun x1265 (Int) Int)
(declare-fun x523 () Int)
(declare-fun x1232 () x1073)
(declare-fun x173 () Int)
(declare-fun x1146 () Int)
(declare-fun x1176 () Int)
(declare-fun x1533 () Int)
(declare-fun x439 () Int)
(declare-fun x1296 () Int)
(declare-fun x792 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x1285 () Int)
(declare-fun x1129 () x1073)
(declare-fun x295 () Int)
(declare-fun x1561 () x1073)
(declare-fun x1240 () Int)
(declare-fun x1243 () Int)
(declare-fun x563 () Int)
(declare-fun x94 () Bool)
(declare-fun x1327 (Int) Int)
(declare-fun x1252 () x1073)
(declare-fun x562 () Int)
(declare-fun x1428 () Bool)
(declare-fun x275 () Bool)
(declare-fun x1644 () Int)
(declare-fun x1255 () Bool)
(declare-fun x1409 () Int)
(declare-fun x787 () Int)
(declare-fun x64 () Bool)
(declare-fun x243 () x1073)
(declare-fun x474 () Bool)
(declare-fun x1181 () Int)
(declare-fun x851 () Bool)
(declare-fun x1884 () Int)
(declare-fun x1673 () Int)
(declare-fun x811 () x1073)
(declare-fun x1249 () Bool)
(declare-fun x1665 () Bool)
(declare-fun x1678 () Bool)
(declare-fun x1624 () Int)
(declare-fun x1413 () Int)
(declare-fun x280 () Bool)
(declare-fun x81 (Int) Int)
(declare-fun x225 () Int)
(declare-fun x522 () Int)
(declare-fun x632 () Int)
(declare-fun x1794 () Int)
(declare-fun x843 () Int)
(declare-fun x640 () Int)
(declare-fun x1569 () Bool)
(declare-fun x700 () Bool)
(declare-fun x1740 () Bool)
(declare-fun x1236 () Int)
(declare-fun x1611 () Int)
(declare-fun x1168 () Int)
(declare-fun x1525 () Int)
(declare-fun x1205 () Bool)
(declare-fun x654 () Bool)
(declare-fun x838 () Bool)
(declare-fun x1732 (Int) Int)
(declare-fun x699 () Int)
(declare-fun x1778 () Bool)
(declare-fun x661 () Bool)
(declare-fun x287 () Int)
(declare-fun x1051 () Int)
(declare-fun x1386 () x1073)
(declare-fun x701 () Int)
(declare-fun x1366 () Int)
(declare-fun x604 () Bool)
(declare-fun x266 () Bool)
(declare-fun x1709 () Bool)
(declare-fun x327 () Int)
(declare-fun x156 () Int)
(declare-fun x1642 () Bool)
(declare-fun x528 () Int)
(declare-fun x428 () Int)
(declare-fun x1400 () Int)
(declare-fun x206 () Bool)
(declare-fun x363 () Bool)
(declare-fun x1702 () Bool)
(declare-fun x191 () Bool)
(declare-fun x1856 () Int)
(declare-fun x238 () Int)
(declare-fun x671 () Bool)
(declare-fun x1521 () Bool)
(declare-fun x84 () x1073)
(declare-fun x1706 () Int)
(declare-fun x1819 () Bool)
(declare-fun x1617 () Int)
(declare-fun x17 () Bool)
(declare-fun x901 () Bool)
(declare-fun x888 () Int)
(declare-fun x773 () Int)
(declare-fun x41 () Int)
(declare-fun x867 () Int)
(declare-fun x1827 () Int)
(declare-fun x446 () x1073)
(declare-fun x596 () Int)
(declare-fun x1616 () Int)
(declare-fun x1071 () Bool)
(declare-fun x1124 () Bool)
(declare-fun x1530 () x1073)
(declare-fun x452 () Int)
(declare-fun x808 () Int)
(declare-fun x242 () x1073)
(declare-fun x756 () Int)
(declare-fun x807 () Bool)
(declare-fun x1583 () Int)
(declare-fun x334 () Int)
(declare-fun x1165 () Bool)
(declare-fun x247 () Int)
(declare-fun x514 () Int)
(declare-fun x788 () Int)
(declare-fun x25 () Int)
(declare-fun x1382 () Bool)
(declare-fun x298 () Int)
(declare-fun x645 () Bool)
(declare-fun x1260 () Int)
(declare-fun x542 () Int)
(declare-fun x1372 () Int)
(declare-fun x930 () Bool)
(declare-fun x1630 () Int)
(declare-fun x958 () Bool)
(declare-fun x1367 () Int)
(declare-fun x1693 (x1073) Int)
(declare-fun x550 () Int)
(declare-fun x1763 () Int)
(declare-fun x960 () Int)
(declare-fun x741 () Int)
(declare-fun x1643 () Bool)
(declare-fun x797 () Bool)
(declare-fun x480 () x1073)
(declare-fun x694 (Int) Int)
(declare-fun x660 () Int)
(declare-fun x1799 () Bool)
(declare-fun x1182 () Int)
(declare-fun x1692 (Int) Int)
(declare-fun x747 () Int)
(declare-fun x237 () Int)
(declare-fun x1259 () x1073)
(declare-fun x396 () Bool)
(declare-fun x1440 () Int)
(declare-fun x590 () x1073)
(declare-fun x1890 () Int)
(declare-fun x152 () x1073)
(declare-fun x805 () Bool)
(declare-fun x1468 () Int)
(declare-fun x223 () Int)
(declare-fun x112 () x1073)
(declare-fun x556 () Int)
(declare-fun x384 () Int)
(declare-fun x1108 () Bool)
(declare-fun x644 (Int Int) Int)
(declare-fun x100 () Int)
(declare-fun x705 () Int)
(declare-fun x1031 () Bool)
(declare-fun x1427 () Bool)
(declare-fun x1695 () x1073)
(declare-fun x1863 () Int)
(declare-fun x1662 () Int)
(declare-fun x677 () Bool)
(declare-fun x1874 () Int)
(declare-fun x1775 () Int)
(declare-fun x220 () Int)
(declare-fun x553 () Bool)
(declare-fun x333 () Int)
(declare-fun x254 () Bool)
(declare-fun x539 () Bool)
(declare-fun x1429 () Int)
(declare-fun x1262 () x1073)
(declare-fun x1581 () Bool)
(declare-fun x1134 () Int)
(declare-fun x1671 () Int)
(declare-fun x1590 () Bool)
(declare-fun x82 () Bool)
(declare-fun x1332 (x1073) Int)
(declare-fun x1596 () Bool)
(declare-fun x1745 () x1073)
(declare-fun x941 () x1073)
(declare-fun x1197 () Int)
(declare-fun x693 () Int)
(declare-fun x981 () Int)
(declare-fun x971 () Bool)
(declare-fun x1456 () Bool)
(declare-fun x1484 () Bool)
(declare-fun x1723 () Int)
(declare-fun x938 () Int)
(declare-fun x182 () Bool)
(declare-fun x540 () Int)
(declare-fun x1224 () Bool)
(declare-fun x501 () Int)
(declare-fun x168 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x1023 () Int)
(declare-fun x1788 () Bool)
(declare-fun x8 () Bool)
(declare-fun x1483 () Bool)
(declare-fun x1143 () Bool)
(declare-fun x1117 (x1073) Int)
(declare-fun x1622 () Int)
(declare-fun x1722 () Int)
(declare-fun x1604 () Int)
(declare-fun x1258 (Int) Int)
(declare-fun x816 () Int)
(declare-fun x868 () Int)
(declare-fun x1375 () Int)
(declare-fun x1539 () Int)
(declare-fun x154 () Int)
(declare-fun x1021 () Bool)
(declare-fun x1489 () Int)
(declare-fun x155 () Int)
(declare-fun x547 () Int)
(declare-fun x418 () Int)
(declare-fun x1080 () x1073)
(declare-fun x1452 () Int)
(declare-fun x1283 () Bool)
(declare-fun x1761 () x1073)
(declare-fun x619 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x1305 () Bool)
(declare-fun x486 () Bool)
(declare-fun x939 () Int)
(declare-fun x569 () Int)
(declare-fun x256 () Bool)
(declare-fun x725 () Bool)
(declare-fun x984 () Int)
(declare-fun x1610 () Int)
(declare-fun x1363 () Bool)
(declare-fun x1598 () Int)
(declare-fun x259 () Int)
(declare-fun x793 () Bool)
(declare-fun x1391 () x1073)
(declare-fun x1235 () Bool)
(declare-fun x506 () Bool)
(declare-fun x568 () Bool)
(declare-fun x60 () Bool)
(declare-fun x732 () Bool)
(declare-fun x1500 () Int)
(declare-fun x1408 () Bool)
(declare-fun x1127 () Int)
(declare-fun x1769 () Bool)
(declare-fun x1570 () x1073)
(declare-fun x1526 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x234 () x1073)
(declare-fun x1823 () Bool)
(declare-fun x1043 () Int)
(declare-fun x1281 () Bool)
(declare-fun x743 () Bool)
(declare-fun x1238 () Int)
(declare-fun x1298 () Int)
(declare-fun x1902 () Int)
(declare-fun x760 () Bool)
(declare-fun x674 () Int)
(declare-fun x1384 () Bool)
(declare-fun x1853 () x1073)
(declare-fun x487 () Int)
(declare-fun x85 () Int)
(declare-fun x576 () Int)
(declare-fun x665 () Int)
(declare-fun x1446 () Int)
(declare-fun x1599 () Int)
(declare-fun x1541 () Int)
(declare-fun x668 () x1073)
(declare-fun x574 () Bool)
(declare-fun x1195 () Bool)
(declare-fun x889 () Int)
(declare-fun x679 () Int)
(declare-fun x512 () Bool)
(declare-fun x241 () Bool)
(declare-fun x1381 () Int)
(declare-fun x1331 () Int)
(declare-fun x1346 () Int)
(declare-fun x1085 () Bool)
(declare-fun x485 (x1073) Int)
(declare-fun x290 () Bool)
(declare-fun x426 () Int)
(declare-fun x1186 () Int)
(declare-fun x1421 () Int)
(declare-fun x952 () Int)
(declare-fun x80 () Int)
(declare-fun x706 () Int)
(declare-fun x1502 () Int)
(declare-fun x1406 () x1073)
(declare-fun x1841 () Bool)
(declare-fun x377 () Bool)
(declare-fun x1620 () Bool)
(declare-fun x1360 () Int)
(declare-fun x1700 () Int)
(declare-fun x451 () Bool)
(declare-fun x140 () Bool)
(declare-fun x1154 () Int)
(declare-fun x1594 () Bool)
(declare-fun x358 () Int)
(declare-fun x1908 () Int)
(declare-fun x598 () Bool)
(declare-fun x1903 () Bool)
(declare-fun x546 () Int)
(declare-fun x456 () Int)
(declare-fun x483 () Int)
(declare-fun x257 () Int)
(declare-fun x1546 () Bool)
(declare-fun x605 () Int)
(declare-fun x910 () Bool)
(declare-fun x1276 () Int)
(declare-fun x648 () Bool)
(declare-fun x387 () Int)
(declare-fun x1783 () Int)
(declare-fun x382 () Bool)
(declare-fun x1163 () Int)
(declare-fun x1683 () Int)
(declare-fun x246 () Bool)
(declare-fun x1553 () Int)
(declare-fun x1686 () Int)
(declare-fun x1228 () Bool)
(declare-fun x626 () Int)
(declare-fun x844 () Int)
(declare-fun x1011 (Int) Int)
(declare-fun x922 () Int)
(declare-fun x70 (x1073) Int)
(declare-fun x1872 () Int)
(declare-fun x637 () Int)
(declare-fun x651 () Int)
(declare-fun x730 () Int)
(declare-fun x1883 () Int)
(declare-fun x631 () Int)
(declare-fun x1040 () Bool)
(declare-fun x515 () Bool)
(declare-fun x424 () Bool)
(declare-fun x609 () Int)
(declare-fun x1222 () Bool)
(declare-fun x37 () Int)
(declare-fun x1002 () Bool)
(declare-fun x1300 () Int)
(declare-fun x500 () Int)
(declare-fun x845 () Int)
(declare-fun x1056 () Bool)
(declare-fun x849 () Int)
(declare-fun x1597 () Int)
(declare-fun x527 () Bool)
(declare-fun x1417 () Int)
(declare-fun x324 () Int)
(declare-fun x251 () Bool)
(declare-fun x582 () Bool)
(declare-fun x274 () Int)
(declare-fun x1764 () Int)
(declare-fun x1878 () Int)
(declare-fun x1433 () x1073)
(declare-fun x1256 () Int)
(declare-fun x1136 () Bool)
(declare-fun x1121 () Int)
(declare-fun x1493 () Int)
(declare-fun x427 () Int)
(declare-fun x443 () Bool)
(declare-fun x281 () Bool)
(declare-fun x1748 () Int)
(declare-fun x898 () Int)
(declare-fun x502 () Int)
(declare-fun x342 () Int)
(declare-fun x682 () Bool)
(declare-fun x1093 () Int)
(declare-fun x1358 () Bool)
(declare-fun x891 () Bool)
(declare-fun x1145 () Bool)
(declare-fun x1462 () Int)
(declare-fun x357 () Bool)
(declare-fun x1161 (x1073) Int)
(declare-fun x1430 () Bool)
(declare-fun x227 () Int)
(declare-fun x1267 () Int)
(declare-fun x1271 () Int)
(declare-fun x686 () Int)
(declare-fun x517 () Int)
(declare-fun x904 () Int)
(declare-fun x962 () Bool)
(declare-fun x1882 () Int)
(declare-fun x413 () Int)
(declare-fun x435 () Int)
(declare-fun x945 () Bool)
(declare-fun x297 () Int)
(declare-fun x34 () Bool)
(declare-fun x982 () Int)
(declare-fun x250 () Int)
(declare-fun x199 (Int) Int)
(declare-fun x852 () Int)
(declare-fun x1503 () x1073)
(declare-fun x1854 () Int)
(declare-fun x1099 () Int)
(declare-fun x56 () Int)
(declare-fun x1779 () Int)
(declare-fun x336 () Int)
(declare-fun x35 () x1073)
(declare-fun x871 () Bool)
(declare-fun x1637 () Int)
(declare-fun x1295 () Bool)
(declare-fun x54 () Int)
(declare-fun x1351 () Bool)
(declare-fun x1299 () Bool)
(declare-fun x16 (Int Int) Int)
(declare-fun x1032 () Int)
(declare-fun x1609 () Bool)
(declare-fun x996 () Bool)
(declare-fun x1309 () Int)
(declare-fun x1857 () Bool)
(declare-fun x1577 () Int)
(declare-fun x1887 () x1073)
(declare-fun x1368 () Int)
(declare-fun x1120 () Int)
(declare-fun x782 () Int)
(declare-fun x555 () Int)
(declare-fun x376 () Int)
(declare-fun x564 () Int)
(declare-fun x658 () Int)
(declare-fun x707 (Int) Int)
(declare-fun x902 () Bool)
(declare-fun x798 () Int)
(declare-fun x1434 () Int)
(declare-fun x284 (Int) Int)
(declare-fun x99 () x1073)
(declare-fun x1069 () Int)
(declare-fun x656 () Int)
(declare-fun x906 () x1073)
(declare-fun x718 () Int)
(declare-fun x1719 () Bool)
(declare-fun x141 () Int)
(declare-fun x249 () Int)
(declare-fun x1667 (Int) Int)
(declare-fun x482 () Bool)
(declare-fun x127 (x1073) Int)
(declare-fun x1015 () Int)
(declare-fun x994 () Int)
(declare-fun x1451 () Bool)
(declare-fun x1550 () Bool)
(declare-fun x1645 () Int)
(declare-fun x150 () Int)
(declare-fun x1467 () Int)
(declare-fun x303 () x1073)
(declare-fun x1027 () Int)
(declare-fun x1491 () Bool)
(declare-fun x1536 () Int)
(declare-fun x983 () x1073)
(declare-fun x862 () Bool)
(declare-fun x1083 () Bool)
(declare-fun x1738 () Int)
(declare-fun x1392 () Int)
(declare-fun x1756 () Bool)
(declare-fun x253 () Int)
(declare-fun x179 () Int)
(declare-fun x301 () Int)
(declare-fun x378 () Int)
(declare-fun x1378 () Int)
(declare-fun x1158 () x1073)
(declare-fun x164 () Bool)
(declare-fun x108 () Int)
(declare-fun x614 () Int)
(declare-fun x1613 () Int)
(declare-fun x1655 () Int)
(declare-fun x1904 () Bool)
(declare-fun x897 () Int)
(declare-fun x1898 () Int)
(declare-fun x65 (Int) Int)
(declare-fun x356 () Int)
(declare-fun x306 () Int)
(declare-fun x224 () Int)
(declare-fun x1110 () Bool)
(declare-fun x74 () Bool)
(declare-fun x1800 () Bool)
(declare-fun x1013 () Bool)
(declare-fun x1407 () Bool)
(declare-fun x1900 () Int)
(declare-fun x710 () Bool)
(declare-fun x1453 () Int)
(declare-fun x3 () Bool)
(declare-fun x1551 () Int)
(declare-fun x629 () Int)
(declare-fun x1879 () Bool)
(declare-fun x244 () Bool)
(declare-fun x774 () Int)
(declare-fun x584 () Int)
(declare-fun x850 () Int)
(declare-fun x757 () Int)
(declare-fun x1177 () Int)
(declare-fun x374 () Int)
(declare-fun x723 () Int)
(declare-fun x1839 () Int)
(declare-fun x106 () Int)
(declare-fun x1705 () x1073)
(declare-fun x412 () Bool)
(declare-fun x998 () Int)
(declare-fun x1632 () Int)
(declare-fun x1250 () Bool)
(declare-fun x1694 () Int)
(declare-fun x1808 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x822 () Int)
(declare-fun x893 () Int)
(declare-fun x1475 () Bool)
(declare-fun x1746 () Int)
(declare-fun x840 () Bool)
(declare-fun x678 () Int)
(declare-fun x1509 () Int)
(declare-fun x823 () Int)
(declare-fun x929 () x1073)
(declare-fun x1790 () Bool)
(declare-fun x68 () x1073)
(declare-fun x1711 () Bool)
(declare-fun x866 () Bool)
(declare-fun x98 () Int)
(declare-fun x627 () Bool)
(declare-fun x1501 () x1073)
(declare-fun x1791 () Int)
(declare-fun x185 () Int)
(declare-fun x389 () Int)
(declare-fun x972 () Bool)
(declare-fun x469 () Bool)
(declare-fun x545 () Int)
(declare-fun x1180 () Int)
(declare-fun x401 () x1073)
(declare-fun x1573 (Int) x1073)
(declare-fun x444 () Int)
(declare-fun x987 () Bool)
(declare-fun x594 () Bool)
(declare-fun x1441 () Int)
(declare-fun x589 () Bool)
(declare-fun x956 () Bool)
(declare-fun x462 () Int)
(declare-fun x1150 () Int)
(declare-fun x834 () Bool)
(declare-fun x1438 () Int)
(declare-fun x1159 () Int)
(declare-fun x548 () Bool)
(declare-fun x991 () Int)
(declare-fun x5 () Int)
(declare-fun x979 () Int)
(declare-fun x940 () Int)
(declare-fun x1380 () Int)
(declare-fun x662 () Int)
(declare-fun x209 () Bool)
(declare-fun x475 () Int)
(declare-fun x1784 () Bool)
(declare-fun x134 () x1073)
(declare-fun x1481 () Int)
(declare-fun x145 () Bool)
(declare-fun x1201 () Bool)
(declare-fun x202 () Int)
(declare-fun x1152 () Bool)
(declare-fun x765 () Int)
(declare-fun x828 () Int)
(declare-fun x1469 () x1073)
(declare-fun x947 () Int)
(declare-fun x1864 () Int)
(declare-fun x351 () Int)
(declare-fun x302 () Int)
(declare-fun x296 () Int)
(declare-fun x323 () Bool)
(declare-fun x520 () x1073)
(declare-fun x1470 () Bool)
(declare-fun x784 () Int)
(declare-fun x1588 () Bool)
(declare-fun x810 () Int)
(declare-fun x103 () Bool)
(declare-fun x1097 (x1073) Int)
(declare-fun x886 () Int)
(declare-fun x277 () Int)
(declare-fun x1861 (Int) Int)
(declare-fun x652 () Int)
(declare-fun x567 () Int)
(declare-fun x1179 () Int)
(declare-fun x319 () Int)
(declare-fun x1877 () Int)
(declare-fun x1886 () Bool)
(declare-fun x1619 () Int)
(declare-fun x1286 () Bool)
(declare-fun x1426 () Int)
(declare-fun x1049 () Bool)
(declare-fun x230 () Int)
(declare-fun x1091 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x602 () Int)
(declare-fun x1046 () Int)
(declare-fun x359 () Int)
(declare-fun x1578 () Bool)
(declare-fun x1522 () Int)
(declare-fun x1893 () Bool)
(declare-fun x1832 () Int)
(declare-fun x1688 () Bool)
(declare-fun x430 () Bool)
(declare-fun x350 () x1073)
(declare-fun x1355 () Int)
(declare-fun x1516 () Int)
(declare-fun x1414 () Bool)
(declare-fun x691 () Int)
(declare-fun x933 () Int)
(declare-fun x806 () Int)
(declare-fun x1497 () Bool)
(declare-fun x1170 () Int)
(declare-fun x733 () Int)
(declare-fun x128 () Bool)
(declare-fun x177 () Int)
(declare-fun x78 () Int)
(declare-fun x1797 () Int)
(declare-fun x959 () Int)
(declare-fun x160 () Int)
(declare-fun x1405 (Int) Int)
(declare-fun x67 () Int)
(declare-fun x390 () Int)
(declare-fun x663 () Bool)
(declare-fun x532 () Int)
(declare-fun x262 () Bool)
(declare-fun x1851 () x1073)
(declare-fun x1328 () Bool)
(declare-fun x218 () Bool)
(declare-fun x544 () Bool)
(declare-fun x158 () Bool)
(declare-fun x1090 (Int) Int)
(declare-fun x13 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x1050 () Int)
(declare-fun x1605 (Int) Int)
(declare-fun x1151 () x1073)
(declare-fun x473 () Int)
(declare-fun x709 () Int)
(declare-fun x69 () Bool)
(declare-fun x641 () Bool)
(declare-fun x1496 () Bool)
(declare-fun x907 () Bool)
(declare-fun x1640 () Int)
(declare-fun x135 () Bool)
(declare-fun x1397 () Bool)
(declare-fun x1889 () Bool)
(declare-fun x841 () Bool)
(declare-fun x758 () Bool)
(declare-fun x1119 () Bool)
(declare-fun x1623 () x1073)
(declare-fun x1689 () Int)
(declare-fun x504 () Int)
(declare-fun x764 () Bool)
(declare-fun x1544 () Int)
(declare-fun x801 () x1073)
(declare-fun x272 (x1073) Int)
(declare-fun x1248 () x1073)
(declare-fun x566 () Int)
(declare-fun x863 () Int)
(declare-fun x794 () Int)
(declare-fun x368 (Int) Int)
(declare-fun x1708 () Bool)
(declare-fun x1515 () Int)
(declare-fun x1018 () Bool)
(declare-fun x1422 () Bool)
(declare-fun x1725 () Int)
(declare-fun x1699 () Bool)
(declare-fun x448 () Int)
(declare-fun x93 () Bool)
(declare-fun x776 () Int)
(declare-fun x607 () Int)
(declare-fun x865 () Int)
(declare-fun x399 () Int)
(declare-fun x934 () Bool)
(declare-fun x925 () Int)
(declare-fun x115 () Int)
(declare-fun x1773 () Int)
(declare-fun x739 () Int)
(declare-fun x1454 () Bool)
(declare-fun x1459 () Bool)
(declare-fun x1531 () Bool)
(declare-fun x613 () Int)
(declare-fun x188 () Bool)
(declare-fun x1270 () Int)
(declare-fun x1869 () Bool)
(declare-fun x768 () Bool)
(declare-fun x1424 () Bool)
(declare-fun x216 () Int)
(declare-fun x1106 (x1073) Int)
(declare-fun x1261 () Int)
(declare-fun x465 () Bool)
(declare-fun x1735 () Bool)
(declare-fun x1200 () Bool)
(declare-fun x1743 () Int)
(declare-fun x1275 () Int)
(declare-fun x783 () Int)
(declare-fun x497 () Bool)
(declare-fun x1892 () Int)
(declare-fun x628 () Int)
(declare-fun x1505 () Int)
(declare-fun x1657 () Bool)
(declare-fun x1760 () Int)
(declare-fun x1419 () Int)
(declare-fun x754 () Bool)
(declare-fun x1757 () Bool)
(declare-fun x421 () x1073)
(declare-fun x1385 () Int)
(declare-fun x1277 () Int)
(declare-fun x1844 () x1073)
(declare-fun x731 () x1073)
(declare-fun x876 () Bool)
(declare-fun x1039 () Int)
(declare-fun x1142 () Int)
(declare-fun x205 () Int)
(declare-fun x1538 () Int)
(declare-fun x1656 () Int)
(declare-fun x780 () Int)
(declare-fun x1320 () Bool)
(declare-fun x1411 () Int)
(declare-fun x1174 () Int)
(declare-fun x1374 () Int)
(declare-fun x353 () Int)
(declare-fun x1178 () Int)
(declare-fun x332 (Int Int) Int)
(declare-fun x847 () Int)
(declare-fun x1410 () Int)
(declare-fun x559 () Int)
(declare-fun x14 () Bool)
(declare-fun x1545 () Int)
(declare-fun x921 () Int)
(declare-fun x294 () Int)
(declare-fun x372 () Int)
(declare-fun x1234 () x1073)
(declare-fun x365 () Int)
(declare-fun x1307 () Int)
(declare-fun x1450 () Int)
(declare-fun x745 () Bool)
(declare-fun x1865 () Bool)
(declare-fun x955 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x1169 () Bool)
(declare-fun x993 () Bool)
(declare-fun x1365 () x1073)
(declare-fun x169 () Bool)
(declare-fun x476 () Bool)
(declare-fun x1218 () Int)
(declare-fun x578 () Bool)
(declare-fun x1079 () Bool)
(declare-fun x490 () Bool)
(declare-fun x1885 () Bool)
(define-fun x278 ((x1073 x1073) (x1233 Int)) x1073 (ite ((_ is x714) x1073) (x714 (x31 x1073) (+ (x300 x1073) x1233)) (ite ((_ is x1520) x1073) (x1520 (x724 x1073) (x887 x1073) (x1881 x1073) (x997 x1073) (+ (x1436 x1073) x1233)) (ite ((_ is x157) x1073) (x157 (x1078 x1073) (x1888 x1073) (+ x1233 (x48 x1073))) (x460 (+ x1233 (x1803 x1073)))))))
(define-fun x1627 ((x890 Int)) Int (ite (and (>= x890 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x890)) x890 (- x890 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x775 ((x890 Int)) Int (ite (and (> 0 x890) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x890)) (+ x890 115792089237316195423570985008687907853269984665640564039457584007913129639936) x890))
(define-fun x1751 ((x890 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x890) (<= 0 x890)) x890 (ite (and (>= x890 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< x890 231584178474632390847141970017375815706539969331281128078915168015826259279872)) (- x890 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (>= x890 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (> 0 x890)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x890) (x1652 x890 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x786 ((x231 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231) (>= x231 0)))
(define-fun x488 ((x231 Int)) Bool (and (>= x231 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231)))
(define-fun x647 ((x231 Int) (x1653 Int)) Bool (= (x16 x1653 x231) (x16 x231 x1653)))
(define-fun x916 ((x231 Int) (x1653 Int)) Bool (and (=> (and (> 0 x1653) (> 0 x231)) (< 0 (x16 x231 x1653))) (=> (and (< 0 x231) (> x1653 0)) (> (x16 x231 x1653) 0)) (=> (and (< 0 x231) (< x1653 0)) (> 0 (x16 x231 x1653))) (=> (and (< 0 x1653) (< x231 0)) (> 0 (x16 x231 x1653)))))
(define-fun x59 ((x231 Int) (x1653 Int)) Bool (=> (and (> x231 0) (< 0 x1653)) (= (= x1653 (x1772 (x1751 (x16 x231 x1653)) x231)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x16 x231 x1653)))))
(define-fun x931 ((x231 Int) (x1653 Int)) Bool (=> (and (not (= x231 0)) (not (= 0 x1653))) (and (= x1653 (x1772 (x16 x231 x1653) x231)) (= (x1772 (x16 x231 x1653) x1653) x231))))
(define-fun x325 ((x231 Int) (x1653 Int)) Bool (=> (and (> x1653 0) (< 0 x231)) (= (< (x1772 115792089237316195423570985008687907853269984665640564039457584007913129639935 x231) x1653) (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x16 x231 x1653)))))
(define-fun x696 ((x231 Int) (x1653 Int)) Bool (and (= (x1751 (x16 x231 x1653)) (x1751 (x16 (- x231 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1653))) (= (x1751 (x16 x231 x1653)) (x1751 (x16 (- x231 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1653 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x1751 (x16 x231 (- x1653 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1751 (x16 x231 x1653)))))
(define-fun x317 ((x231 Int) (x1653 Int)) Bool (and (=> (and (and (> x1653 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1653 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (<= x231 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x231 0))) (= (>= (x16 x231 (- x1653 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (>= (x1772 57896044618658097711785492504343953926634992332820282019728792003956564819968 x231) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1653)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1653) (> x1653 0)) (and (< 0 x231) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x231))) (= (>= (x1772 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1653) x231) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x16 x231 x1653)))) (=> (and (and (> x231 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x231)) (and (<= x1653 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x1653 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x1772 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1653)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231)) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x16 (- x231 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1653 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (> x231 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x231 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (> x1653 0) (<= x1653 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x1772 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1653) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x231)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x16 (- x231 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1653))))))
(define-fun x1608 ((x231 Int) (x1653 Int)) Bool (and (x916 x231 x1653) (x317 x231 x1653) (x325 x231 x1653) (x647 x231 x1653) (x59 x231 x1653) (x931 x231 x1653) (x696 x231 x1653)))
(define-fun x1000 ((x231 Int)) Bool (and (= 0 (x16 0 x231)) (= 0 (x16 x231 0))))
(define-fun x38 ((x231 Int)) Bool (and (= x231 (x16 x231 1)) (= (x16 1 x231) x231)))
(define-fun x170 ((x231 Int)) Bool (and (x38 x231) (x1000 x231)))
(define-fun x1086 ((x231 Int) (x1653 Int)) Bool (=> (and (> x1653 0) (< 0 x231)) (and (>= x231 (x1772 x231 x1653)) (>= (x1772 x231 x1653) 0))))
(define-fun x270 ((x231 Int) (x1653 Int)) Bool (=> (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1653) (>= x1653 1)) (and (>= x231 0) (< x231 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (>= (x1772 x231 x1653) 0) (< (x1772 x231 x1653) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x1160 ((x231 Int) (x1653 Int)) Bool (=> (and (< x1653 x231) (> x1653 1)) (> x231 (x1772 x231 x1653))))
(define-fun x1383 ((x231 Int) (x1653 Int)) Bool (=> (and (> x231 0) (< 0 x1653)) (= (> x1653 x231) (= (x1772 x231 x1653) 0))))
(define-fun x881 ((x231 Int) (x1653 Int)) Bool (=> (and (< 0 x1653) (> x231 0)) (and (<= (x16 (x1772 x231 x1653) x1653) x231) (> (x16 (x1772 x231 x1653) x1653) (- x231 x1653)))))
(define-fun x1465 ((x231 Int) (x1653 Int)) Bool (and (x1086 x231 x1653) (x881 x231 x1653) (x270 x231 x1653) (x1160 x231 x1653) (x1383 x231 x1653)))
(define-fun x802 ((x231 Int)) Bool (= 0 (x1772 0 x231)))
(define-fun x282 ((x231 Int)) Bool (= (x1772 x231 1) x231))
(define-fun x1895 ((x231 Int)) Bool (=> (not (= 0 x231)) (= (x1772 x231 x231) 1)))
(define-fun x740 ((x231 Int)) Bool (and (x802 x231) (x1895 x231) (x282 x231)))
(define-fun x1647 ((x231 Int)) Bool (and (= x231 (x332 x231 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= x231 (x332 115792089237316195423570985008687907853269984665640564039457584007913129639935 x231))))
(define-fun x383 ((x231 Int)) Bool (and (= 0 (x332 x231 0)) (= 0 (x332 0 x231))))
(define-fun x1867 ((x231 Int)) Bool (= (x332 x231 x231) x231))
(define-fun x18 ((x231 Int)) Bool (and (x1867 x231) (x383 x231) (x1647 x231)))
(define-fun x695 ((x231 Int) (x1653 Int)) Bool (= (x332 x1653 x231) (x332 x231 x1653)))
(define-fun x1225 ((x231 Int) (x1653 Int)) Bool (and (=> (<= 0 x231) (<= (x332 x231 x1653) x231)) (=> (>= x1653 0) (<= (x332 x231 x1653) x1653)) (>= (x332 x231 x1653) 0)))
(define-fun x1796 ((x231 Int) (x1653 Int)) Bool (and (x1225 x231 x1653) (x695 x231 x1653)))
(define-fun x207 ((x231 Int)) Bool (= (x1652 x231 1461501637330902918203684832716283019655932542976) (x332 x231 1461501637330902918203684832716283019655932542975)))
(define-fun x1028 ((x231 Int)) Bool (and (x1796 x231 1461501637330902918203684832716283019655932542975) (x207 x231)))
(define-fun x713 ((x231 Int) (x1653 Int)) Bool (and (< (x1652 x231 x1653) x1653) (>= (x1652 x231 x1653) 0)))
(define-fun x1741 ((x231 Int) (x1653 Int)) Bool (=> (and (>= x231 0) (> x1653 0)) (= (= x231 (x1652 x231 x1653)) (> x1653 x231))))
(define-fun x1591 ((x231 Int) (x1653 Int)) Bool (=> (and (and (< x231 (+ x1653 x1653)) (<= x1653 x231)) (< 0 x1653)) (= (x1652 x231 x1653) (- x231 x1653))))
(define-fun x1387 ((x231 Int)) Bool (= (x1652 0 x231) 0))
(define-fun x1442 ((x231 Int)) Bool (= (x1652 x231 1) 0))
(define-fun x526 ((x231 Int)) Bool (= (x1652 x231 x231) 0))
(define-fun x198 ((x231 Int)) Bool (and (x526 x231) (x1442 x231) (x1387 x231)))
(define-fun x1816 ((x231 Int)) Bool (= (+ (x1652 x231 32) (x332 x231 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (x1751 x231)))
(define-fun x603 ((x231 Int)) Bool (and (x1816 x231) (x1796 x231 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x1052 ((x1001 Int)) Int (ite (> x107 x1001) (x137 x1001) 0))
(define-fun x1190 ((x1001 Int)) Int (ite (< x1001 x226) (x1736 x1001) 0))
(define-fun x1529 ((x1001 Int)) Int (ite (= 128 x1001) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x617 x1001)))
(define-fun x1273 ((x1001 Int)) Int (ite (= 132 x1001) x374 (x1529 x1001)))
(define-fun x860 ((x1001 Int)) Int (ite (= x1001 0) x359 (x159 x1001)))
(define-fun x857 ((x1001 Int)) Int (ite (= x1001 128) x359 (x1273 x1001)))
(define-fun x1444 ((x1001 Int)) Int (ite (= 0 x1001) x681 (x159 x1001)))
(define-fun x1670 ((x1001 Int)) Int (ite (= x1001 128) x681 (x1273 x1001)))
(define-fun x1268 ((x1001 x1073)) Int (ite (= x520 x1001) x1536 (x1703 x1001)))
(define-fun x1658 ((x1001 x1073)) Int (ite x119 (x1703 x1001) (ite x1005 (x1703 x1001) (ite x1101 (x1703 x1001) (ite x1205 (x1703 x1001) (ite x1524 (x1703 x1001) (ite x680 (x1703 x1001) (ite x14 (x1703 x1001) (ite x1119 (x1703 x1001) (ite x1665 (x1703 x1001) (ite x764 (x1703 x1001) (ite x1084 (x1703 x1001) (ite x1471 (x1703 x1001) (ite x1587 (x1268 x1001) (x1703 x1001)))))))))))))))
(define-fun x221 ((x1001 x1073)) Int (ite (= x1001 x1705) x1786 (x1703 x1001)))
(define-fun x625 ((x1001 x1073)) Int (ite (= x1001 x379) x1511 (x1703 x1001)))
(define-fun x236 ((x1001 x1073)) Int (ite (= x1001 x268) x1617 (x1268 x1001)))
(define-fun x1480 ((x1001 x1073)) Int (ite x147 (x236 x1001) (x1703 x1001)))
(define-fun x1508 ((x1001 x1073)) Int (ite x1136 (x625 x1001) (x1480 x1001)))
(define-fun x101 ((x1001 x1073)) Int (ite x1390 (x221 x1001) (x1508 x1001)))
(define-fun x1393 ((x1001 x1073)) Int (ite x1679 (x1703 x1001) (x101 x1001)))
(define-fun x1058 ((x1001 x1073)) Int (ite x430 (ite x622 (x1658 x1001) (x1393 x1001)) (x1703 x1001)))
(define-fun x1646 ((x1001 Int)) Int (ite (= 128 x1001) 50942633119752846454219349998365661925608737367104304655302372697894809501696 (x1752 x1001)))
(define-fun x950 ((x1001 Int)) Int (ite (= x1001 132) x1583 (x1646 x1001)))
(define-fun x1394 ((x1001 x1073)) Int (ite (= x1770 x1001) x612 (x832 x1001)))
(define-fun x341 ((x1001 x1073)) Int (ite x654 (x832 x1001) (ite x1251 (x832 x1001) (ite x1333 (x1394 x1001) (x832 x1001)))))
(define-fun x1499 ((x1001 x1073)) Int (ite (= x1336 x1001) x610 (x1394 x1001)))
(define-fun x397 ((x1001 x1073)) Int (ite x1818 (ite x1893 (x341 x1001) (x1499 x1001)) (x832 x1001)))
(define-fun x1326 ((x1001 x1073)) Int (ite (= x1262 x1001) x1102 (x832 x1001)))
(define-fun x129 ((x1001 x1073)) Int (ite (= x1001 x243) x977 (x1326 x1001)))
(define-fun x1353 ((x1001 x1073)) Int (ite x1800 (x832 x1001) (ite x436 (x832 x1001) (ite x396 (x129 x1001) (ite x1497 (x1326 x1001) (x832 x1001))))))
(define-fun x1173 ((x1001 x1073)) Int (ite x1903 (ite x575 (x1353 x1001) (x129 x1001)) (x832 x1001)))
(define-fun x1681 ((x1001 x1073)) Int (ite (= x771 x1001) x1806 (x832 x1001)))
(define-fun x293 ((x1001 x1073)) Int (ite (= x1001 x1530) x655 (x1681 x1001)))
(define-fun x1020 ((x1001 x1073)) Int (ite x600 (x832 x1001) (ite x69 (x832 x1001) (ite x463 (x293 x1001) (ite x1576 (x1681 x1001) (x832 x1001))))))
(define-fun x1615 ((x1001 x1073)) Int (ite x2 (ite x1021 (x1020 x1001) (x293 x1001)) (x832 x1001)))
(define-fun x509 ((x1001 x1073)) Int (ite (= x1001 x873) x1551 (x1615 x1001)))
(define-fun x1466 ((x1001 x1073)) Int (ite x1085 (x1615 x1001) (ite x474 (x1615 x1001) (ite x1483 (x509 x1001) (x1615 x1001)))))
(define-fun x1625 ((x1001 x1073)) Int (ite (= x1001 x112) x693 (x509 x1001)))
(define-fun x329 ((x1001 x1073)) Int (ite x1487 (ite x966 (x1466 x1001) (x1625 x1001)) (x1615 x1001)))
(define-fun x321 ((x1001 x1073)) Int (ite x119 (x832 x1001) (ite x1005 (x832 x1001) (ite x1101 (x832 x1001) (ite x1205 (x832 x1001) (ite x1524 (x832 x1001) (ite x680 (x832 x1001) (ite x14 (x832 x1001) (ite x1119 (x832 x1001) (ite x1665 (x832 x1001) (ite x764 (x832 x1001) (ite x1084 (x397 x1001) (ite x1471 (x1173 x1001) (ite x1587 (x832 x1001) (ite x93 (x329 x1001) (ite x344 (x329 x1001) (ite x484 (x1615 x1001) (ite x1255 (x1615 x1001) (ite x241 (x1615 x1001) (ite x1030 (x832 x1001) (ite x874 (x832 x1001) (ite x1067 (x832 x1001) (ite x690 (x832 x1001) (ite x996 (x832 x1001) (ite x1210 (x832 x1001) (ite x331 (x397 x1001) (ite x1474 (x397 x1001) (ite x1840 (x832 x1001) (ite x910 (x832 x1001) (ite x871 (x832 x1001) (ite x1650 (x1173 x1001) (ite x1108 (x1173 x1001) (x832 x1001)))))))))))))))))))))))))))))))))
(define-fun x276 ((x1001 x1073)) Int (ite x533 (x832 x1001) (x329 x1001)))
(define-fun x606 ((x1001 x1073)) Int (ite x147 (x832 x1001) (x276 x1001)))
(define-fun x1755 ((x1001 x1073)) Int (ite x1136 (x397 x1001) (x606 x1001)))
(define-fun x1153 ((x1001 x1073)) Int (ite x1390 (x1173 x1001) (x1755 x1001)))
(define-fun x804 ((x1001 x1073)) Int (ite x1679 (x832 x1001) (x1153 x1001)))
(define-fun x1292 ((x1001 x1073)) Int (ite x430 (ite x622 (x321 x1001) (x804 x1001)) (x832 x1001)))
(define-fun x1713 ((x1001 Int)) Int (ite (= 0 x1001) x1271 (x1439 x1001)))
(define-fun x388 ((x1001 Int)) Int (ite (= 128 x1001) x1271 (x950 x1001)))
(define-fun x1349 ((x1001 x1073)) Int (ite (= x1001 x519) x1533 (x272 x1001)))
(define-fun x882 ((x1001 x1073)) Int (ite x1370 (x272 x1001) (ite x266 (x272 x1001) (ite x627 (x1349 x1001) (x272 x1001)))))
(define-fun x1750 ((x1001 x1073)) Int (ite (= x1001 x1606) x273 (x1349 x1001)))
(define-fun x557 ((x1001 x1073)) Int (ite x1818 (x272 x1001) (ite x1793 (x882 x1001) (x1750 x1001))))
(define-fun x570 ((x1001 x1073)) Int (ite (= x590 x1001) x634 (x272 x1001)))
(define-fun x44 ((x1001 x1073)) Int (ite (= x1570 x1001) x1500 (x570 x1001)))
(define-fun x1504 ((x1001 x1073)) Int (ite x948 (x272 x1001) (ite x1581 (x272 x1001) (ite x1295 (x44 x1001) (ite x1195 (x570 x1001) (x272 x1001))))))
(define-fun x1191 ((x1001 x1073)) Int (ite x1903 (x272 x1001) (ite x1865 (x1504 x1001) (x44 x1001))))
(define-fun x581 ((x1001 x1073)) Int (ite (= x87 x1001) x1350 (x272 x1001)))
(define-fun x307 ((x1001 x1073)) Int (ite (= x1001 x1248) x336 (x581 x1001)))
(define-fun x571 ((x1001 x1073)) Int (ite x1289 (x272 x1001) (ite x291 (x272 x1001) (ite x901 (x307 x1001) (ite x1299 (x581 x1001) (x272 x1001))))))
(define-fun x791 ((x1001 x1073)) Int (ite x2 (x272 x1001) (ite x1414 (x571 x1001) (x307 x1001))))
(define-fun x1845 ((x1001 x1073)) Int (ite (= x1001 x1158) x782 (x791 x1001)))
(define-fun x1362 ((x1001 x1073)) Int (ite x638 (x791 x1001) (ite x946 (x791 x1001) (ite x1083 (x1845 x1001) (x791 x1001)))))
(define-fun x580 ((x1001 x1073)) Int (ite (= x1001 x1252) x402 (x1845 x1001)))
(define-fun x51 ((x1001 x1073)) Int (ite x1487 (x791 x1001) (ite x1869 (x1362 x1001) (x580 x1001))))
(define-fun x593 ((x1001 x1073)) Int (ite x119 (x272 x1001) (ite x1005 (x272 x1001) (ite x1101 (x272 x1001) (ite x1205 (x272 x1001) (ite x1524 (x272 x1001) (ite x680 (x272 x1001) (ite x14 (x272 x1001) (ite x1119 (x272 x1001) (ite x1665 (x272 x1001) (ite x764 (x272 x1001) (ite x1084 (x557 x1001) (ite x1471 (x1191 x1001) (ite x1587 (x272 x1001) (ite x93 (x51 x1001) (ite x344 (x51 x1001) (ite x484 (x791 x1001) (ite x1255 (x791 x1001) (ite x241 (x791 x1001) (ite x1030 (x272 x1001) (ite x874 (x272 x1001) (ite x1067 (x272 x1001) (ite x690 (x272 x1001) (ite x996 (x272 x1001) (ite x1210 (x272 x1001) (ite x331 (x557 x1001) (ite x1474 (x557 x1001) (ite x1840 (x272 x1001) (ite x910 (x272 x1001) (ite x871 (x272 x1001) (ite x1650 (x1191 x1001) (ite x1108 (x1191 x1001) (x272 x1001)))))))))))))))))))))))))))))))))
(define-fun x97 ((x1001 x1073)) Int (ite x533 (x272 x1001) (x51 x1001)))
(define-fun x1807 ((x1001 x1073)) Int (ite x147 (x272 x1001) (x97 x1001)))
(define-fun x1715 ((x1001 x1073)) Int (ite x1136 (x557 x1001) (x1807 x1001)))
(define-fun x190 ((x1001 x1073)) Int (ite x1390 (x1191 x1001) (x1715 x1001)))
(define-fun x322 ((x1001 x1073)) Int (ite x1679 (x272 x1001) (x190 x1001)))
(define-fun x821 ((x1001 x1073)) Int (ite x430 (ite x622 (x593 x1001) (x322 x1001)) (x272 x1001)))
(define-fun x338 ((x1001 Int)) Int (ite (= x1001 0) x1352 (x1439 x1001)))
(define-fun x814 ((x1001 Int)) Int (ite (= 128 x1001) x1352 (x950 x1001)))
(define-fun x171 ((x1001 x1073)) Int (ite (= x350 x1001) x1884 (x716 x1001)))
(define-fun x318 ((x1001 x1073)) Int (ite x1094 (x716 x1001) (x171 x1001)))
(define-fun x1157 ((x1001 x1073)) Int (ite (= x350 x1001) 0 (x318 x1001)))
(define-fun x1562 ((x1001 x1073)) Int (ite x1620 (x716 x1001) (ite x244 (x1157 x1001) (x318 x1001))))
(define-fun x1543 ((x1001 x1073)) Int (ite (= x1001 x422) x1744 (x1332 x1001)))
(define-fun x1401 ((x1001 x1073)) Int (ite x1620 (x1332 x1001) (ite x1094 (x1332 x1001) (x1543 x1001))))
(define-fun x1007 ((x1001 x1073)) Int (ite (= x1001 x446) x156 (x1117 x1001)))
(define-fun x1804 ((x1001 x1073)) Int (ite x1620 (x1117 x1001) (ite x1094 (x1117 x1001) (x1007 x1001))))
(define-fun x872 ((x1001 Int)) Int (ite (= 196 x1001) 77196514420459877940035116867124998943289115686762304616657918434777787006976 (x1011 x1001)))
(define-fun x1687 ((x1001 Int)) Int (ite (and (> (+ 32 196) x1001) (>= x1001 196)) (x1405 (+ (- x1001 196) 0)) (x872 x1001)))
(define-fun x1535 ((x1001 Int)) Int (ite x1792 (x1687 x1001) (x872 x1001)))
(define-fun x1317 ((x1001 Int)) Int (ite (= 196 x1001) 70508962019145425934951811999677760319478833095128838543097651878529435959296 (x1535 x1001)))
(define-fun x918 ((x1001 Int)) Int (ite (= 200 x1001) (x1897 x1364) (x1317 x1001)))
(define-fun x36 ((x1001 Int)) Int (ite (= x1001 232) x1759 (x918 x1001)))
(define-fun x1512 ((x1001 Int)) Int (ite (= 264 x1001) x1644 (x36 x1001)))
(define-fun x829 ((x1001 Int)) Int (ite (and (> (+ 32 196) x1001) (>= x1001 196)) (x81 (+ (- x1001 196) 0)) (x1512 x1001)))
(define-fun x1425 ((x1001 Int)) Int (ite x1876 (x829 x1001) (x1512 x1001)))
(define-fun x1388 ((x1001 Int)) Int (ite (= 196 x1001) 115242692596306546229572752729822789716416415832763348928132244437937602691072 (x1425 x1001)))
(define-fun x180 ((x1001 Int)) Int (ite (= x1001 200) x1112 (x1388 x1001)))
(define-fun x573 ((x1001 Int)) Int (ite (= x1001 232) x1759 (x180 x1001)))
(define-fun x172 ((x1001 Int)) Int (ite (and (<= 196 x1001) (< x1001 (+ 32 196))) (x1090 (+ 0 (- x1001 196))) (x573 x1001)))
(define-fun x1306 ((x1001 Int)) Int (ite x1572 (x172 x1001) (x573 x1001)))
(define-fun x649 ((x1001 Int)) Int (ite x164 (x1011 x1001) (x1306 x1001)))
(define-fun x1077 ((x1001 Int)) Int (ite (= x1001 x974) x1061 (x1605 x1001)))
(define-fun x1858 ((x1001 Int)) Int (x194 x1001))
(define-fun x1455 ((x1001 Int)) Int (ite (= 4 x1001) 128 (x1052 x1001)))
(define-fun x995 ((x1001 Int)) Int (ite (= 36 x1001) x83 (x1455 x1001)))
(define-fun x505 ((x1001 Int)) Int (ite (= 68 x1001) x52 (x995 x1001)))
(define-fun x1420 ((x1001 Int)) Int (ite (= 100 x1001) x1134 (x505 x1001)))
(define-fun x1724 ((x1001 Int)) Int (ite (= x1001 132) x1621 (x1420 x1001)))
(define-fun x1208 ((x1001 Int)) Int (ite (and (< x1001 (+ 164 x427)) (<= 164 x1001)) (x1858 (+ 0 (- x1001 164))) (x1724 x1001)))
(define-fun x1059 ((x1001 Int)) Int (ite (and (> (+ x1163 x265) x1001) (>= x1001 x265)) (x1208 (+ (- x1001 x265) x107)) (x1559 x1001)))
(define-fun x1089 ((x1001 x1073)) Int (ite (= x1212 x1001) x1744 (x583 x1001)))
(define-fun x1558 ((x1001 x1073)) Int (ite x1620 (x583 x1001) (ite x1094 (x583 x1001) (x1089 x1001))))
(define-fun x1319 ((x1001 Int)) Int (ite x1767 (x1559 x1001) (x1059 x1001)))
(define-fun x89 ((x1001 Int)) Int (ite (= x253 x1001) x1061 (x1141 x1001)))
(define-fun x130 ((x1001 Int)) Int (ite (and (>= x1001 x78) (< x1001 (+ x78 x880))) (x1208 (+ (- x1001 x78) x107)) (x1183 x1001)))
(define-fun x1230 ((x1001 Int)) Int (ite x219 (x1183 x1001) (x130 x1001)))
(define-fun x381 ((x1001 Int)) Int (ite (= x569 x1001) 0 (x1319 x1001)))
(define-fun x561 ((x1001 Int)) Int (ite (= x652 x1001) 0 (x1230 x1001)))
(define-fun x1701 ((x1001 Int)) Int (ite x1435 (x1230 x1001) (x561 x1001)))
(define-fun x511 ((x1001 Int)) Int (ite x1435 (x1319 x1001) (x381 x1001)))
(define-fun x842 ((x1001 Int)) Int (ite (= x1805 x1001) x684 (x1701 x1001)))
(define-fun x799 ((x1001 Int)) Int (ite (= x1001 x926) x295 (x511 x1001)))
(define-fun x1718 ((x1001 Int)) Int (ite (= x744 x1001) x308 (x1701 x1001)))
(define-fun x1556 ((x1001 Int)) Int (ite x1103 (x1718 x1001) (ite x323 (x842 x1001) (x1701 x1001))))
(define-fun x1304 ((x1001 Int)) Int (ite x1103 (x799 x1001) (x511 x1001)))
(define-fun x585 ((x1001 Int)) Int (ite (= x1001 x413) x308 (x649 x1001)))
(define-fun x669 ((x1001 Int)) Int (ite x1620 (x1701 x1001) (ite x244 (x1556 x1001) (x1701 x1001))))
(define-fun x340 ((x1001 Int)) Int (ite x1620 (x649 x1001) (ite x244 (x585 x1001) (x649 x1001))))
(define-fun x149 ((x1001 Int)) Int (ite x1620 (x511 x1001) (ite x244 (x1304 x1001) (x511 x1001))))
(define-fun x320 ((x1001 Int)) Int (ite (= x1001 x413) x1331 (x1861 x1001)))
(define-fun x1781 ((x1001 Int)) Int (ite (= x1001 x1846) 0 (x1557 x1001)))
(define-fun x1776 ((x1001 Int)) Int (ite (= x1603 x1001) 0 (x1667 x1001)))
(define-fun x900 ((x1001 Int)) Int (ite (= x935 x1001) 0 (x1734 x1001)))
(define-fun x470 ((x1001 Int)) Int (ite (= x1001 x1516) 0 (x1692 x1001)))
(define-fun x1901 ((x1001 Int)) Int (ite (= x1413 x1001) 0 (x694 x1001)))
(define-fun x264 ((x1001 Int)) Int (ite (= x1188 x1001) x1846 (x1813 x1001)))
(define-fun x1095 ((x1001 Int)) Int (ite (= x508 x1001) 0 (x1781 x1001)))
(define-fun x565 ((x1001 Int)) Int (ite (= x1001 x177) 0 (x1776 x1001)))
(define-fun x1812 ((x1001 Int)) Int (ite (= x1001 x1296) 0 (x900 x1001)))
(define-fun x1239 ((x1001 Int)) Int (ite (= x757 x1001) 0 (x470 x1001)))
(define-fun x467 ((x1001 Int)) Int (ite (= x358 x1001) 0 (x1901 x1001)))
(define-fun x1070 ((x1001 Int)) Int (ite (= x1001 x405) x508 (x264 x1001)))
(define-fun x1458 ((x1001 Int)) Int (ite x120 (x1734 x1001) (ite x516 (x1812 x1001) (x900 x1001))))
(define-fun x1227 ((x1001 Int)) Int (ite x120 (x1692 x1001) (ite x516 (x1239 x1001) (x470 x1001))))
(define-fun x748 ((x1001 Int)) Int (ite x120 (x1557 x1001) (ite x516 (x1095 x1001) (x1781 x1001))))
(define-fun x1432 ((x1001 Int)) Int (ite x120 (x1667 x1001) (ite x516 (x565 x1001) (x1776 x1001))))
(define-fun x1092 ((x1001 Int)) Int (ite x120 (x694 x1001) (ite x516 (x467 x1001) (x1901 x1001))))
(define-fun x990 ((x1001 Int)) Int (ite x120 (x1813 x1001) (ite x516 (x1070 x1001) (x264 x1001))))
(define-fun x43 ((x1001 Int)) Int (ite (= x1001 x1825) x1815 (x748 x1001)))
(define-fun x88 ((x1001 Int)) Int (ite (= x1159 x1001) x1434 (x1432 x1001)))
(define-fun x763 ((x1001 Int)) Int (ite (= x1001 x852) x992 (x1458 x1001)))
(define-fun x11 ((x1001 Int)) Int (ite (= x1847 x1001) x1644 (x1227 x1001)))
(define-fun x1214 ((x1001 Int)) Int (ite (= x1099 x1001) x692 (x1092 x1001)))
(define-fun x113 ((x1001 Int)) Int (ite (= x1001 x1409) x1825 (x990 x1001)))
(define-fun x1113 ((x1001 Int)) Int (ite x854 (x1432 x1001) (x88 x1001)))
(define-fun x1838 ((x1001 Int)) Int (ite x854 (x1458 x1001) (x763 x1001)))
(define-fun x174 ((x1001 Int)) Int (ite x854 (x748 x1001) (x43 x1001)))
(define-fun x1580 ((x1001 Int)) Int (ite x854 (x990 x1001) (x113 x1001)))
(define-fun x1721 ((x1001 Int)) Int (ite x854 (x1227 x1001) (x11 x1001)))
(define-fun x139 ((x1001 Int)) Int (ite x854 (x1092 x1001) (x1214 x1001)))
(define-fun x24 ((x1001 Int)) Int (ite (= x417 x1001) 6583703630350721090866640338677567052142505888617894577283092288194729738240 (x340 x1001)))
(define-fun x1830 ((x1001 Int)) Int (ite (= x1001 x789) 32 (x24 x1001)))
(define-fun x285 ((x1001 Int)) Int (ite (= x1001 x1172) x67 (x1830 x1001)))
(define-fun x541 ((x1001 Int)) Int (ite (= x1001 x825) x1854 (x285 x1001)))
(define-fun x76 ((x1001 Int)) Int (ite (= x1001 x522) x1835 (x541 x1001)))
(define-fun x1731 ((x1001 Int)) Int (ite (= x1001 x301) x951 (x76 x1001)))
(define-fun x1472 ((x1001 Int)) Int (ite (= x507 x1001) x98 (x1731 x1001)))
(define-fun x1244 ((x1001 Int)) Int (ite (= x1001 x1177) x646 (x1472 x1001)))
(define-fun x1492 ((x1001 Int)) Int (ite x1124 (x285 x1001) (x1244 x1001)))
(define-fun x62 ((x1001 Int)) Int (ite (and (< x1001 (+ 68 (x775 (- x414 68)))) (<= 68 x1001)) (x1492 (+ (x1627 (+ x417 68)) (- x1001 68))) (x1190 x1001)))
(define-fun x835 ((x1001 Int)) Int (ite (= x1001 128) x1348 (x1115 x1001)))
(define-fun x1482 ((x1001 Int)) Int (ite (= x1001 x418) x1534 (x1566 x1001)))
(define-fun x864 ((x1001 Int)) Int (ite (= x1001 x1116) x1485 (x1258 x1001)))
(define-fun x1477 ((x1001 Int)) Int (ite (= x1001 x1549) x501 (x1111 x1001)))
(define-fun x772 ((x1001 Int)) Int (ite (= x1001 x228) x1218 (x65 x1001)))
(define-fun x118 ((x1001 Int)) Int (ite (= x1001 x56) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x630 x1001)))
(define-fun x1563 ((x1001 Int)) Int (ite (= x1001 x150) x351 (x118 x1001)))
(define-fun x1762 ((x1001 Int)) Int (ite (= x1001 x205) x912 (x1563 x1001)))
(define-fun x915 ((x1001 Int)) Int (ite (= x1001 x1836) x1651 (x1762 x1001)))
(define-fun x453 ((x1001 Int)) Int (ite (= x56 x1001) x1864 (x915 x1001)))
(define-fun x549 ((x1001 Int)) Int (ite (= x56 x1001) x1632 (x915 x1001)))
(define-fun x1837 ((x1001 Int)) Int (ite x2 (ite x1021 (x915 x1001) (x453 x1001)) (ite x1414 (x915 x1001) (x549 x1001))))
(define-fun x1896 ((x1001 Int)) Int (ite (= x659 x1001) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x1837 x1001)))
(define-fun x1196 ((x1001 Int)) Int (ite (= x845 x1001) x216 (x1896 x1001)))
(define-fun x963 ((x1001 Int)) Int (ite (= x1001 x1032) x1651 (x1196 x1001)))
(define-fun x1548 ((x1001 Int)) Int (ite (= 128 x1001) x462 (x707 x1001)))
(define-fun x1680 ((x1001 Int)) Int (ite (= x1001 128) (ite true 1 0) (x1548 x1001)))
(define-fun x1826 ((x1001 Int)) Int (ite (= x1001 0) x132 (x166 x1001)))
(define-fun x1096 ((x1001 Int)) Int (ite (= x1001 128) x410 (x1697 x1001)))
(define-fun x635 ((x1001 Int)) Int (ite (= x1001 128) (ite true 1 0) (x1096 x1001)))
(define-fun x1661 ((x1001 Int)) Int (ite (= x1001 0) x537 (x166 x1001)))
(define-fun x917 ((x1001 Int)) Int (ite x1162 (x1566 x1001) (x1482 x1001)))
(define-fun x1634 ((x1001 Int)) Int (ite x1162 (x1258 x1001) (x864 x1001)))
(define-fun x755 ((x1001 Int)) Int (ite (= x1001 x1272) x1176 (x1732 x1001)))
(define-fun x208 ((x1001 Int)) Int (ite x1162 (x1732 x1001) (x755 x1001)))
(define-fun x1490 ((x1001 Int)) Int (ite x1162 (x1111 x1001) (x1477 x1001)))
(define-fun x685 ((x1001 Int)) Int (ite (= 160 x1001) x418 (x196 x1001)))
(define-fun x1149 ((x1001 Int)) Int (ite x1162 (x196 x1001) (x685 x1001)))
(define-fun x122 ((x1001 Int)) Int (ite x1162 (x65 x1001) (x772 x1001)))
(define-fun x186 ((x1001 Int)) Int (ite (= x1001 x56) 16156842317565293874272834530371880720966471053262404558597773956279093428224 (x630 x1001)))
(define-fun x1852 ((x1001 Int)) Int (ite (= x689 x1001) x404 (x186 x1001)))
(define-fun x429 ((x1001 Int)) Int (ite (= x1001 x1267) x912 (x1852 x1001)))
(define-fun x1321 ((x1001 Int)) Int (ite (= x1001 x514) x1651 (x429 x1001)))
(define-fun x1614 ((x1001 Int)) Int (ite (= x1001 128) x1515 (x1327 x1001)))
(define-fun x1257 ((x1001 Int)) Int (ite (= x1001 128) x1266 (x1614 x1001)))
(define-fun x1216 ((x1001 Int)) Int (ite (= x1001 128) (ite true 1 0) (x1257 x1001)))
(define-fun x1554 ((x1001 Int)) Int (ite (= x1001 0) x1263 (x1109 x1001)))
(define-fun x909 ((x1001 Int)) Int (ite (= 128 x1001) x1766 (x477 x1001)))
(define-fun x229 ((x1001 Int)) Int (ite (= x1001 128) x1684 (x909 x1001)))
(define-fun x1817 ((x1001 Int)) Int (ite (= x1001 128) (ite true 1 0) (x229 x1001)))
(define-fun x703 ((x1001 Int)) Int (ite (= x1001 0) x203 (x1109 x1001)))
(define-fun x943 ((x1001 Int)) Int (ite (= x1001 x56) 76450787359836037641860180984291677749980919077056822294353438043884394381312 (x630 x1001)))
(define-fun x30 ((x1001 Int)) Int (ite (= x1001 x1545) x185 (x943 x1001)))
(define-fun x1810 ((x1001 Int)) Int (ite (= x1001 x173) x1651 (x30 x1001)))
(define-fun x1582 ((x1001 Int)) Int (ite (= 128 x1001) x1552 (x1265 x1001)))
(define-fun x667 ((x1001 Int)) Int (ite (= x1001 128) (ite true 1 0) (x1582 x1001)))
(define-fun x1478 ((x1001 Int)) Int (ite (= 0 x1001) x1494 (x579 x1001)))
(define-fun x1204 ((x1001 Int)) Int (ite (= x1001 128) x1640 (x199 x1001)))
(define-fun x853 ((x1001 Int)) Int (ite (= x1001 128) (ite true 1 0) (x1204 x1001)))
(define-fun x896 ((x1001 Int)) Int (ite (= x1001 0) x1489 (x579 x1001)))
(define-fun x339 ((x1001 Int)) Int (ite (= x1001 128) x765 (x1098 x1001)))
(define-fun x803 ((x1001 Int)) Int (ite (= x1001 128) x1240 (x339 x1001)))
(define-fun x1859 ((x1001 Int)) Int (ite (= 128 x1001) (ite true 1 0) (x803 x1001)))
(define-fun x837 ((x1001 Int)) Int (ite (= x1001 0) x1599 (x492 x1001)))
(define-fun x1303 ((x1001 Int)) Int (ite (= x1001 128) x785 (x368 x1001)))
(define-fun x1278 ((x1001 Int)) Int (ite (= 128 x1001) x883 (x1303 x1001)))
(define-fun x75 ((x1001 Int)) Int (ite (= x1001 128) (ite true 1 0) (x1278 x1001)))
(define-fun x1668 ((x1001 Int)) Int (ite (= 0 x1001) x294 (x492 x1001)))
(define-fun x1602 ((x1001 Int)) Int (ite x1893 (x579 x1001) (x1478 x1001)))
(define-fun x1198 ((x1001 Int)) Int (ite x1793 (x579 x1001) (x896 x1001)))
(define-fun x1341 ((x1001 Int)) Int (ite x1818 (x1602 x1001) (x1198 x1001)))
(define-fun x967 ((x1001 Int)) Int (ite x1021 (x492 x1001) (x837 x1001)))
(define-fun x1698 ((x1001 Int)) Int (ite x1414 (x492 x1001) (x1668 x1001)))
(define-fun x289 ((x1001 Int)) Int (ite x2 (x967 x1001) (x1698 x1001)))
(define-fun x1905 ((x1001 Int)) Int (ite x966 (x166 x1001) (x1826 x1001)))
(define-fun x1641 ((x1001 Int)) Int (ite x1869 (x166 x1001) (x1661 x1001)))
(define-fun x252 ((x1001 Int)) Int (ite x1487 (x1905 x1001) (x1641 x1001)))
(define-fun x472 ((x1001 Int)) Int (ite x326 (x857 x1001) (ite x1886 (x1273 x1001) (ite x449 (x1670 x1001) (x1273 x1001)))))
(define-fun x830 ((x1001 Int)) Int (x899 x1001))
(define-fun x22 ((x1001 Int)) Int (x194 x1001))
(define-fun x1834 ((x1001 Int)) Int (x284 x1001))
(define-fun x1510 ((x1001 Int)) Int (x1858 x1001))
(define-fun x1019 ((x1001 Int)) Int (ite x222 (x388 x1001) (ite x907 (x950 x1001) (ite x1719 (x814 x1001) (x950 x1001)))))
(define-fun x795 ((x231 Int) (x1653 Int) (x175 Int) (x1768 Int)) Bool (=> (and (>= x1768 x1653) (>= x1653 0) (<= x231 x175) (>= x231 0)) (>= (x16 x175 x1768) (x16 x231 x1653))))
(define-fun x1547 ((x231 Int) (x1653 Int) (x175 Int) (x1768 Int)) Bool (=> (= x175 x231) (= (- (x16 x231 x1653) (x16 x175 x1768)) (x16 x231 (- x1653 x1768)))))
(define-fun x91 ((x231 Int)) Bool (=> (and (not (= x231 1461501637330902918203684832716283019655932542975)) (not (= x231 1520650183)) (not (= 77196514420459877940035116867124998943289115686762304616657918434777787006976 x231)) (not (= x231 2781097000)) (not (= 3019127319 x231)) (not (= x231 1242462222)) (not (= 1889567281 x231)) (not (= x231 26959946667150639794667015087019630673637144422540572481103610249216)) (not (= x231 2455663379)) (not (= 2835717307 x231)) (not (= x231 961581905)) (not (= 928407353 x231)) (not (= 2863377861 x231)) (not (= 3961236718 x231)) (not (= x231 4294967296)) (not (= 115242692596306546229572752729822789716416415832763348928132244437937602691072 x231)) (not (= x231 3138304935)) (not (= x231 4137353292)) (not (= x231 80076034)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x231)) (not (= x231 1896758387)) (not (= x231 2757214935)) (not (= 1001385071 x231)) (not (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x231)) (> x231 10000) (not (= x231 2992780654)) (not (= 2514000705 x231)) (not (= 1742540299 x231)) (not (= x231 1000000000000000000)) (not (= 599290589 x231)) (not (= 18446744073709551615 x231)) (not (= x231 244203140)) (not (= x231 450795052)) (not (= 1027062850 x231)) (not (= 2290148746 x231)) (not (= 3039079375 x231)) (not (= x231 16156842317565293874272834530371880720966471053262404558597773956279093428224)) (not (= 117300739 x231)) (not (= x231 4085545785)) (not (= x231 3248092328)) (not (= x231 1461501637330902918203684832716283019655932542976)) (not (= 157198259 x231)) (not (= 70508962019145425934951811999677760319478833095128838543097651878529435959296 x231)) (not (= 6583703630350721090866640338677567052142505888617894577283092288194729738240 x231)) (not (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x231)) (not (= 404098525 x231)) (not (= x231 706499883)) (not (= 2759752456 x231)) (not (= 1745213101 x231)) (not (= 85603218 x231)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x231)) (not (= 3921506749 x231))) (not ((_ is x460) (x1573 x231)))))
(assert (x170 (- x1637 x985)))
(assert (x786 x1134))
(assert (x786 x503))
(assert (x170 (- x563 x542)))
(assert (=> (<= x809 10000) (= (x460 x809) (x1573 x809))))
(assert (x1608 x1411 (- x542 x237)))
(assert (= x1065 (and x206 (not x271))))
(assert (x786 x1367))
(assert (x786 x466))
(assert (= x742 (x1897 (x1573 x742))))
(assert (x1608 x563 (- x1791 x1411)))
(assert (x786 x45))
(assert (= x797 (and x398 x6)))
(assert (x170 (- x237 x1791)))
(assert (= (and (not x670) x1885) x551))
(assert (x786 x715))
(assert (= (+ (x1897 x1745) 1) (x1897 (x278 x1745 1))))
(assert (x1547 x985 x46 x333 x884))
(assert (x786 x608))
(assert (= (x1897 (x460 85603218)) 85603218))
(assert (x740 x1166))
(assert (x786 x825))
(assert (x786 x531))
(assert (= (x1897 (x1573 x709)) x709))
(assert (= x1235 (=> (and (>= x925 0) (= (x1097 (x1573 x1644)) x1246) (= x1207 (x1193 x68)) (<= 0 x452) (= x384 x1046) (<= x452 1461501637330902918203684832716283019655932542975) (< 0 x1246) (not x539) (not x877) (= x452 x1908) (<= x978 1461501637330902918203684832716283019655932542975) (= x550 x1448) (< x978 1461501637330902918203684832716283019655932542976) (= x68 (x157 (x1573 x384) x1607 0)) (= x925 x691) (= x1313 x706) (>= 1461501637330902918203684832716283019655932542975 x925) (< x1775 928407353) (not (= 85603218 x1775)) (= x421 (x157 (x1573 x978) (x460 2) 0)) (= (x157 (x1573 x928) x421 0) x1503) (<= x928 1461501637330902918203684832716283019655932542975) (<= x32 1461501637330902918203684832716283019655932542975) (not (= 80076034 x1775)) (> 1520650183 x1775) (>= x32 0) (= x1760 x928) (= x1775 706499883) (= x623 (x157 (x1573 x384) (x460 1) 0)) (= x506 (= 0 x1207)) (= (x278 x1386 1) x1607) (<= 0 x978) (<= 0 x1207) (= (x127 x623) x978) (= x691 x741) (= (x278 x1503 1) x1386) (= x1532 (x278 x1503 3)) (<= x1207 115792089237316195423570985008687907853269984665640564039457584007913129639935) (< x1775 2290148746) (not (= 450795052 x1775)) (= x239 (x157 (x1573 x384) x1532 0)) (= 0 x1313)) (and (=> (and (and (= x227 (x1562 x239)) (>= x227 0) (<= x227 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1206 x227)) x506) x1427) (=> (and (and (or (and (not x330) (and (not (>= (+ x1611 x1247) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (>= x1611 0) (= (x1627 (+ x1611 x1247)) x1360) (= (x1751 (x16 x1411 x542)) x986) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x45) (= (ite (> x1053 x550) x1448 x1053) x306) (<= 0 x1053) (= x1053 (x1161 x434)) (= x542 (x386 x1369)) (<= 0 x45) (= x1691 (= x1411 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1611) (ite x1691 x1691 (= x542 (x1772 x986 x1411))) (= (x278 x623 5) x434) (>= x542 0) (= (x1772 x986 x1166) x1247) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1053) (= x1611 (x1401 x161)) (= x855 x1360) (= (x278 x434 1) x1369) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x542) (= (x1804 x800) x45) (= x161 (x278 x800 1)) (= (x278 x623 7) x800) (= x1411 (x775 (- x306 x45))))) (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x387) (= (x1401 x1853) x387) (>= x387 0) (= (x278 x623 8) x1853) (= x387 x855)) x330)) (and (<= 0 x1166) (= (x278 x623 3) x152) (<= x1166 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1166 (x1106 x152)) (= (= x1166 0) x330))) (not x506)) x671)))))
(assert (=> (<= x937 10000) (= (x460 x937) (x1573 x937))))
(assert (=> (>= 10000 x605) (= (x1573 x605) (x460 x605))))
(assert (x740 x1416))
(assert (=> (>= 10000 x1045) (= (x1573 x1045) (x460 x1045))))
(assert (=> (>= 10000 x335) (= (x1573 x335) (x460 x335))))
(assert (x786 x404))
(assert (x740 x342))
(assert (x786 x1494))
(assert (x786 x632))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1897 (x460 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(assert (x786 x1330))
(assert (= (and x818 (not x636)) x7))
(assert (= (=> (and (and (= (x1627 (+ x489 x253)) x413) (= (= 0 x1061) x719) (= (x1627 (+ x869 32)) x489) (= (x1751 (* x1061 32)) x869)) (or (and (not x719) (and (= (x1627 (+ 32 x253)) x78) (= (x1751 (* 32 x1061)) x880))) x719)) x1720) x1801))
(assert (x91 x640))
(assert (x786 x640))
(assert (x795 x46 x985 x563 x1791))
(assert (x1547 x563 x1791 x333 x884))
(assert (x786 x1185))
(assert (x786 x1723))
(assert (= (and x57 (not x15)) x1124))
(assert (= (x1897 (x1573 x346)) x346))
(assert (x786 x1552))
(assert (= (and x178 x1305) x654))
(assert (x786 x1379))
(assert (x786 x1127))
(assert (x786 x1102))
(assert (x1547 x46 x985 x1411 x542))
(assert (x1028 x1485))
(assert (x786 x658))
(assert (= (+ 5 (x1897 x623)) (x1897 (x278 x623 5))))
(assert (= x1288 (and x1491 x1521)))
(assert (= (=> (and (= x312 (= 0 x327)) (or (not x312) x312)) x64) x432))
(assert (= (x460 2863377861) (x1573 2863377861)))
(assert (x1608 x46 (- x985 x503)))
(assert (x786 x935))
(assert (= (and x1013 x719) x219))
(assert (= (x1573 2290148746) (x460 2290148746)))
(assert (x786 x319))
(assert (x786 x757))
(assert (x786 x1184))
(assert (x1608 x1791 (- x563 x985)))
(assert (= x533 (and (not x255) x1639)))
(assert (x1608 x985 (- x46 x1637)))
(assert (x170 (- x1411 x237)))
(assert (x1547 x542 x1411 x237 x1416))
(assert (x795 x563 x1791 x1416 x237))
(assert (x198 x260))
(assert (= (x1897 (x278 x1811 3)) (+ (x1897 x1811) 3)))
(assert (x786 x334))
(assert (x91 x1868))
(assert (= x1753 (or x1082 x1906)))
(assert (and (x1591 x1176 1461501637330902918203684832716283019655932542976) (x713 x1176 1461501637330902918203684832716283019655932542976) (x1741 x1176 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1176 (+ (* 1461501637330902918203684832716283019655932542976 (x1772 x1176 1461501637330902918203684832716283019655932542976)) (x1652 x1176 1461501637330902918203684832716283019655932542976))))))
(assert (x786 x1684))
(assert (= 0 (x65 x1308)))
(assert (x786 x1046))
(assert (= (x1573 1742540299) (x460 1742540299)))
(assert (x786 x151))
(assert (x91 x766))
(assert (x91 x292))
(assert (= x1644 (x1897 (x1573 x1644))))
(assert (x786 x390))
(assert (= (and (not x1907) x364) x1484))
(assert (= x1650 (and x818 x636)))
(assert (= (x1897 (x1573 x928)) x928))
(assert (x1608 x884 (- x333 x1411)))
(assert (x786 x920))
(assert (= (x1897 (x460 3961236718)) 3961236718))
(assert (x786 x747))
(assert (x786 x1714))
(assert (x170 x1348))
(assert (= (x1897 (x278 x623 7)) (+ 7 (x1897 x623))))
(assert (x786 x888))
(assert (x786 x1613))
(assert (x91 x559))
(assert (= x1904 (or x1818 x1550)))
(assert (and (x1591 x1749 1461501637330902918203684832716283019655932542976) (x713 x1749 1461501637330902918203684832716283019655932542976) (x1741 x1749 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1749 (+ (* 1461501637330902918203684832716283019655932542976 (x1772 x1749 1461501637330902918203684832716283019655932542976)) (x1652 x1749 1461501637330902918203684832716283019655932542976))))))
(assert (x786 x1347))
(assert (x91 x1112))
(assert (x786 x409))
(assert (x786 x637))
(assert (= x1370 (and x496 x958)))
(assert (x1547 x503 x1637 x1411 x542))
(assert (x786 x1309))
(assert (= (and x63 x621) x1699))
(assert (x786 x115))
(assert (x786 x883))
(assert (x786 x1121))
(assert (x786 x1754))
(assert (x1547 x333 x884 x1637 x503))
(assert (= (x460 2455663379) (x1573 2455663379)))
(assert (x1608 x503 (- x1637 x563)))
(assert (x786 x660))
(assert (x18 x1180))
(assert (x786 x124))
(assert (x786 x1014))
(assert (x786 x1238))
(assert (x786 x1314))
(assert (x786 x744))
(assert (x170 x542))
(assert (= (and (not x1704) x682) x1358))
(assert (x740 x986))
(assert (= x1071 (or x1063 x1903)))
(assert (x786 x399))
(assert (= (x1897 (x460 244203140)) 244203140))
(assert (x786 x395))
(assert (x91 x1583))
(assert (x786 x845))
(assert (= x291 (and x275 x1528)))
(assert (x786 x1061))
(assert (x786 x628))
(assert (= (x460 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1573 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x786 x528))
(assert (= (=> (= x924 (= x534 0)) (and (=> x924 x1408) (=> (and (not x924) (and (= (or (> x1044 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1044) true) (> 32 x1044))) x1229) (= (x1627 (+ x735 x56)) x659) (= (x332 115792089237316195423570985008687907853269984665640564039457584007913129639904 x260) x735) (= (x1627 (+ x1044 31)) x260))) (and (=> x1229 x1408) (=> (and (not x1229) (and (= x1802 (x1627 (+ 64 x845))) (= x216 (x332 1461501637330902918203684832716283019655932542975 x1749)) (= x845 (x1627 (+ 4 x659))) (= (x1627 (+ 32 x845)) x1032) (= x594 (= 0 x1648)) (= (x1097 (x1573 x1187)) x1648) (= x1187 (x332 1461501637330902918203684832716283019655932542975 x1300)) (= (x775 (- x1802 x659)) x798))) (and (=> x594 x1408) (=> (and (= (= x408 x1187) x1424) (not x594)) (and (=> (and (not x1424) (and (and (and (= 2835717307 x944) (= x827 (x1097 (x1573 x1868))) (= x1060 x798) (not (= 2757214935 x944)) (not (= 961581905 x944)) (not (< x1060 4)) (not (> 961581905 x944)) (< 0 x827) (= x169 (> 64 x531)) (= x1060 68) (not (= x944 2514000705)) (not (= 1889567281 x944)) (= x1147 x216) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x970) (= (x775 (- x1060 4)) x531) (= x1651 x410)) x135) (= (= x1187 x1868) x135))) (and (=> (and (not x169) (and (= x410 x33) (= x1147 x1254) (= x759 (= x912 0)))) (and (=> (and (= (= 0 x1147) x515) (not x759)) (and (=> (and (and (= 416 x513) (>= x1174 0) (<= x1174 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x157 (x1573 x912) (x460 0) 0) x1433) (= x1174 (x791 x1433)) (= (> x410 x1174) x465)) (not x515)) (and (=> x465 x1017) (=> (and (not x465) (and (= x402 (x1627 (+ x410 x1380))) (>= x1380 0) (= x1380 (x1845 x1636)) (= (x775 (- x1174 x410)) x782) (= x1158 (x157 (x1573 x912) (x460 0) 0)) (= x1147 x420) (<= x1380 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x851 (< x402 x1380)) (= (x157 (x1573 x1147) (x460 0) 0) x1636))) (and (=> x851 x1017) (=> (and (and (= 1 x952) (= (x157 (x1573 x1147) (x460 0) 0) x1252) (= x1809 x1147) (= x672 32) (= 1 x372) (= (x635 128) x537)) (not x851)) x288))))) (=> x515 x1017))) (=> x759 x1017))) (=> x169 x1017))) (=> (and x1424 (and (< 0 x1150) (= x1150 (x1097 (x1573 x408))) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1297) (= x798 x1831) (not (= x247 2514000705)) (not (= 2757214935 x247)) (= 68 x1831) (not (= x247 961581905)) (= x247 2835717307) (not (< x1831 4)) (= x937 x216) (not (< x247 961581905)) (not (= 1889567281 x247)) (= x1041 (< x816 64)) (= x816 (x775 (- x1831 4))) (= x462 x1651))) (and (=> (and (not x1041) (and (= (= x912 0) x749) (= x937 x1664) (= x1167 x462))) (and (=> x749 x1213) (=> (and (not x749) (= (= x937 0) x1062)) (and (=> x1062 x1213) (=> (and (not x1062) (and (>= x1050 0) (= x99 (x157 (x1573 x912) (x460 0) 0)) (= (> x462 x1050) x486) (= x1050 (x1615 x99)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1050) (= x1700 416))) (and (=> (and (and (<= x556 115792089237316195423570985008687907853269984665640564039457584007913129639935) (<= 0 x556) (= (> x556 x693) x162) (= (x157 (x1573 x937) (x460 0) 0) x1259) (= x1733 x937) (= (x775 (- x1050 x462)) x1551) (= x873 (x157 (x1573 x912) (x460 0) 0)) (= x556 (x509 x1259)) (= (x1627 (+ x462 x556)) x693)) (not x486)) (and (=> x162 x1213) (=> (and (and (= (x1680 128) x132) (= x823 1) (= x1 1) (= x1245 x937) (= (x157 (x1573 x937) (x460 0) 0) x112) (= 32 x445)) (not x162)) x1470))) (=> x486 x1213))))))) (=> x1041 x1213))))))))))) x777))
(assert (x795 x1411 x542 x985 x46))
(assert (= x1091 (and x1026 x1423)))
(assert (x786 x1468))
(assert (x1608 x503 (- x1637 x237)))
(assert (= (and x957 x123) x93))
(assert (= x461 (=> (and (= x458 x892) (= x53 x327)) x432)))
(assert (and (x1591 x260 32) (x713 x260 32) (x1741 x260 32) (=> (> 32 0) (= x260 (+ (* 32 (x1772 x260 32)) (x1652 x260 32))))))
(assert (= (and (not x862) x934) x621))
(assert (= (x1183 x1805) 0))
(assert (=> (<= x1112 10000) (= (x460 x1112) (x1573 x1112))))
(assert (x170 (- x884 x563)))
(assert (= x210 (=> (and (= (not (< 1 x1243)) x1782) (= x1243 (x835 128))) (and x840 x1782))))
(assert (= (+ (x1897 x1811) 5) (x1897 (x278 x1811 5))))
(assert (x786 x735))
(assert (= (x1111 x1618) 0))
(assert (x786 x483))
(assert (x170 (- x985 x563)))
(assert (x786 x662))
(assert (= x1840 (and x145 x1699)))
(assert (x786 x384))
(assert (= (and x12 (not x486)) x1031))
(assert (x786 x95))
(assert (= x1329 x210))
(assert (x786 x227))
(assert (= (x1573 961581905) (x460 961581905)))
(assert (x786 x741))
(assert (x170 x1637))
(assert (x786 x1123))
(assert (= x275 (and x1464 (not x1820))))
(assert (= (x1897 (x1573 x408)) x408))
(assert (x786 x1231))
(assert (= x1486 (x1897 (x1573 x1486))))
(assert (x786 x1015))
(assert (x1608 x1637 (- x503 x1411)))
(assert (x786 x1176))
(assert (x18 x1347))
(assert (x786 x880))
(assert (x786 x1025))
(assert (x786 x111))
(assert (x91 x1275))
(assert (= (and x1156 x1484) x1253))
(assert (= x1006 (x1897 (x1573 x1006))))
(assert (= (and x1091 x544) x1665))
(assert (= (and (not x749) x267) x82))
(assert (= (and x451 x551) x331))
(assert (= x1430 (=> (and (= x1902 x1366) (= x1051 x1042)) x71)))
(assert (x786 x301))
(assert (= x1885 (or x1601 (and (not x641) x1904))))
(assert (= (and x1521 (not x1491)) x1620))
(assert (= x1213 (=> (and (= x1 0) (= x1015 x445)) x1470)))
(assert (x786 x1))
(assert (= x1546 (and x72 (not x330))))
(assert (x786 x1285))
(assert (x786 x83))
(assert (x786 x389))
(assert (x786 x156))
(assert (= (and x1479 x924) x241))
(assert (x786 x39))
(assert (x1028 x1197))
(assert (= (x1573 244203140) (x460 244203140)))
(assert (x786 x1567))
(assert (= x1717 x1329))
(assert (x786 x177))
(assert (= (and x364 x1907) x3))
(assert (= x437 (and x1690 (not x1735))))
(assert (x786 x1374))
(assert (x786 x1410))
(assert (= (and x425 x204) x1402))
(assert (x1547 x985 x46 x1411 x542))
(assert (x786 x1771))
(assert (= (x1897 (x1573 x349)) x349))
(assert (x1608 x563 (- x1791 x985)))
(assert (x1547 x542 x1411 x985 x46))
(assert (x786 x566))
(assert (x786 x650))
(assert (x786 x1047))
(assert (x1547 x1791 x563 x1637 x503))
(assert (x786 x1254))
(assert (x1608 x503 (- x1637 x1416)))
(assert (x1608 x333 (- x884 x1637)))
(assert (x786 x683))
(assert (=> (>= 10000 x1583) (= (x460 x1583) (x1573 x1583))))
(assert (x795 x333 x884 x1416 x237))
(assert (x170 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x786 x1039))
(assert (= 115242692596306546229572752729822789716416415832763348928132244437937602691072 (x1897 (x460 115242692596306546229572752729822789716416415832763348928132244437937602691072))))
(assert (x91 x1006))
(assert (x786 x994))
(assert (x795 x503 x1637 x884 x333))
(assert (= x964 (x1897 (x1573 x964))))
(assert (x786 x1064))
(assert (x1547 x1411 x542 x884 x333))
(assert (x1547 x1411 x542 x237 x1416))
(assert (x1608 x884 (- x333 x1637)))
(assert (= (or x1871 (and x1071 (not x312))) x1107))
(assert (= (and x246 x1397) x1649))
(assert (x786 x808))
(assert (=> (>= 10000 x1486) (= (x460 x1486) (x1573 x1486))))
(assert (x786 x1880))
(assert (x795 x542 x1411 x1416 x237))
(assert (x91 x1148))
(assert (x1608 x503 x1637))
(assert (=> (<= x10 10000) (= (x1573 x10) (x460 x10))))
(assert (x786 x922))
(assert (and (x1591 x260 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x713 x260 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x1741 x260 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 0) (= x260 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x1772 x260 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x1652 x260 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(assert (=> (>= 10000 x1541) (= (x1573 x1541) (x460 x1541))))
(assert (x1547 x46 x985 x884 x333))
(assert (x786 x657))
(assert (x786 x787))
(assert (x795 x985 x46 x563 x1791))
(assert (x786 x656))
(assert (x91 x374))
(assert (x786 x1241))
(assert (x18 x1197))
(assert (x1608 x1416 (- x237 x333)))
(assert (x1465 x546 x563))
(assert (x786 x921))
(assert (= x598 (and x1171 x738)))
(assert (x786 x1175))
(assert (and (x1086 x546 1000000000000000000) (x1383 x546 1000000000000000000) (x1160 x546 1000000000000000000) (x270 x546 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x546)) (and (<= (* (x1772 x546 1000000000000000000) 1000000000000000000) x546) (> (* (x1772 x546 1000000000000000000) 1000000000000000000) (- x546 1000000000000000000))))))
(assert (x786 x1805))
(assert (= (or x1649 x948 x1295 x1581 x1224 x1195) x1865))
(assert (x786 x1485))
(assert (=> (>= 10000 x964) (= (x1573 x964) (x460 x964))))
(assert (= x697 (=> (and (= x259 x547) (= x79 0)) x131)))
(assert (x786 x1296))
(assert (= 0 (x1258 x1633)))
(assert (x786 x324))
(assert (x786 x261))
(assert (x1608 x563 (- x1791 x542)))
(assert (x1465 x986 x1166))
(assert (= (x1011 (x1627 (+ 68 x417))) 0))
(assert (x786 x1660))
(assert (x786 x1350))
(assert (= x1678 (=> (= (= x1042 0) x670) (and (=> (and (not x670) (= x451 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1902) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1902) true) (> 32 x1902))))) (and (=> (and (and (= (x157 (x1573 x502) (x460 0) 0) x983) (= x480 (x157 (x1573 x1577) x983 0)) (<= 0 x921) (= x502 (x332 1461501637330902918203684832716283019655932542975 x1300)) (= (x332 1461501637330902918203684832716283019655932542975 x674) x1577) (= (x1703 x480) x921) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x921) (= (< x921 x1651) x188)) (not x451)) (and (=> x188 x1408) (=> (and (and (= (x332 1461501637330902918203684832716283019655932542975 x674) x1676) (= (x775 (- x921 x1651)) x1511) (= (x332 1461501637330902918203684832716283019655932542975 x1300) x10) (= (x157 (x1573 x10) (x460 0) 0) x597) (= x379 (x157 (x1573 x1676) x597 0))) (not x188)) x1329))) (=> x451 x1408))) (=> x670 x1408)))))
(assert (x1547 x333 x884 x46 x985))
(assert (= (x694 x1476) 0))
(assert (x786 x1555))
(assert (= x407 (and (not x1403) x1065)))
(assert (= (and x1785 x1131) x269))
(assert (= (=> (and (= x812 x952) (= x672 x762)) x211) x288))
(assert (x786 x1538))
(assert (x786 x1651))
(assert (x1608 x542 (- x1411 x884)))
(assert (x1608 x46 (- x985 x1411)))
(assert (= (and x1710 (not x1575)) x1373))
(assert (= x1224 (and x443 x769)))
(assert (x786 x615))
(assert (= x807 (and x1790 x1784)))
(assert (x198 x1197))
(assert (x786 x136))
(assert (x1028 x1883))
(assert (= x902 (=> (= x1491 (< 0 x1061)) (and (=> (and (= x1331 0) (not x1491)) x1122) (=> (and (and (= x605 (x127 x1726)) (= x668 (x157 (x1573 x1112) x731 0)) (= (x278 x393 1) x961) (<= 0 x750) (= x616 (x157 (x1573 x709) x961 0)) (= x234 (x278 x668 3)) (= (x278 x668 1) x393) (= x731 (x157 (x1573 x605) (x460 2) 0)) (> x1061 0) (= (x1208 164) x709) (= x750 (x1193 x616)) (= (not (= 0 x750)) x969) (= x350 (x157 (x1573 x709) x234 0)) (= x1726 (x157 (x1573 x709) (x460 1) 0)) (>= x605 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x750) (>= 1461501637330902918203684832716283019655932542975 x605) (> 1461501637330902918203684832716283019655932542976 x605)) x1491) (and (=> (and (and (or (and x94 (and (<= 0 x444) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x444) (= (x1332 x1623) x444) (= (x278 x1726 8) x1623) (= x444 x1744))) (and (and (= x1655 (x1117 x1501)) (<= x1655 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x861 x1744) (<= x576 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1501 (x278 x1726 7)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x237) (= x401 (x278 x1726 5)) (= (x278 x1501 1) x1280) (>= x1075 0) (= x353 (ite (> x1075 x77) x938 x1075)) (<= 0 x237) (= (x386 x144) x237) (= (x1772 x167 x1525) x1538) (= (x775 (- x353 x1655)) x1416) (= x1075 (x1161 x401)) (= (x1627 (+ x576 x1538)) x861) (= (x1751 (x16 x1416 x237)) x167) (<= 0 x576) (= x576 (x1332 x1280)) (<= 0 x1655) (not (>= (+ x1538 x576) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (ite x708 x708 (= (x1772 x167 x1416) x237)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1075) (= x144 (x278 x401 1)) (= (= 0 x1416) x708)) (not x94))) (and (<= 0 x1525) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1525) (= x94 (= x1525 0)) (= x1600 (x278 x1726 3)) (= (x1106 x1600) x1525))) x969) x213) (=> (not x969) x66)))))))
(assert (x1608 x985 (- x46 x542)))
(assert (= (x1573 1520650183) (x460 1520650183)))
(assert (x198 x1218))
(assert (x786 x1827))
(assert (x786 x1902))
(assert (=> (<= x1324 10000) (= (x460 x1324) (x1573 x1324))))
(assert (= (and x1639 x255) x305))
(assert (= x1587 (and x1037 x1860)))
(assert (x786 x1416))
(assert (x170 (- x1791 x985)))
(assert (x795 x237 x1416 x1411 x542))
(assert (x786 x1825))
(assert (and (x325 160 x1348) (x931 160 x1348) (x317 160 x1348) (= (x16 160 x1348) (* x1348 160)) (x696 160 x1348) (x59 160 x1348) (and (= (* (- x1348 115792089237316195423570985008687907853269984665640564039457584007913129639936) 160) (x16 160 (- x1348 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 160 x1348) (* x1348 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x16 (- 115792089237316195423570985008687907853269984665640564039457584007913129639776) x1348)) (= (x16 (- 115792089237316195423570985008687907853269984665640564039457584007913129639776) (- x1348 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x1348 115792089237316195423570985008687907853269984665640564039457584007913129639936) 160) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1348 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(assert (= (+ (x1897 x1726) 8) (x1897 (x278 x1726 8))))
(assert (= x874 (and x1578 x1402)))
(assert (=> (<= x374 10000) (= (x460 x374) (x1573 x374))))
(assert (x1608 x503 (- x1637 x1411)))
(assert (= x663 (and x476 (not x1568))))
(assert (x1608 x237 (- x1416 x1791)))
(assert (x795 x1637 x503 x1416 x237))
(assert (x170 (- x503 x985)))
(assert (x170 (- x503 x884)))
(assert (x786 x540))
(assert (= x1128 (and x682 x1704)))
(assert (x786 x1237))
(assert (x795 x1411 x542 x1416 x237))
(assert (x1547 x1416 x237 x1637 x503))
(assert (x786 x445))
(assert (x198 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x786 x1748))
(assert (= (x1897 (x1573 x1324)) x1324))
(assert (x1547 x46 x985 x237 x1416))
(assert (= x1437 (and x1282 x1753)))
(assert (x1547 x985 x46 x884 x333))
(assert (x786 x183))
(assert (x91 x787))
(assert (= x430 (or (and x661 (not x363)) x1036)))
(assert (x91 x709))
(assert (x786 x926))
(assert (x795 x46 x985 x884 x333))
(assert (x170 (- x985 x237)))
(assert (x740 x546))
(assert (= (x460 50942633119752846454219349998365661925608737367104304655302372697894809501696) (x1573 50942633119752846454219349998365661925608737367104304655302372697894809501696)))
(assert (x1608 x237 (- x1416 x563)))
(assert (= (x1573 2835717307) (x460 2835717307)))
(assert (x198 x1368))
(assert (x786 x1637))
(assert (= x1474 (and x1885 x670)))
(assert (x786 x23))
(assert (x786 x1597))
(assert (x786 x1628))
(assert (x786 x1747))
(assert (x786 x868))
(assert (x1547 x1637 x503 x1791 x563))
(assert (x18 x1485))
(assert (= x457 (and x972 (not x1012))))
(assert (= (x1897 (x278 x134 1)) (+ 1 (x1897 x134))))
(assert (x786 x588))
(assert (= x1690 (and x1320 x256)))
(assert (= x787 (x1897 (x1573 x787))))
(assert (x170 (- x542 x503)))
(assert (=> (>= 10000 x1187) (= (x1573 x1187) (x460 x1187))))
(assert (= (x1897 (x460 450795052)) 450795052))
(assert (x786 x298))
(assert (x1608 x46 (- x985 x542)))
(assert (x786 x1542))
(assert (x170 (- x503 x46)))
(assert (x170 (- x46 x542)))
(assert (x795 x333 x884 x985 x46))
(assert (= (and x1145 x254) x1082))
(assert (= (x1897 (x460 1001385071)) 1001385071))
(assert (x1465 x167 x1416))
(assert (x786 x73))
(assert (x786 x250))
(assert (x740 x889))
(assert (= (=> (and (= x1298 (x1077 x974)) (= x652 (x1627 (+ x253 32))) (= x1033 (x89 x253)) (= x569 (x1627 (+ x974 32))) (< 0 x1298) (< 0 x1033) (= x704 (not (> x1061 1)))) (and x902 x704)) x440))
(assert (= x431 (=> (and (= x1044 x1443) (= x1863 x534)) x676)))
(assert (= x1222 (and x969 x1288)))
(assert (x1547 x1791 x563 x1416 x237))
(assert (= (x1897 (x460 404098525)) 404098525))
(assert (=> (>= 10000 x1644) (= (x1573 x1644) (x460 x1644))))
(assert (x786 x1445))
(assert (x740 x985))
(assert (= (x460 2781097000) (x1573 2781097000)))
(assert (x1547 x1411 x542 x1416 x237))
(assert (= 80076034 (x1897 (x460 80076034))))
(assert (x1547 x503 x1637 x563 x1791))
(assert (= x966 (or x510 x1702 x474 x1483 x1085)))
(assert (= x1487 (or x966 x727)))
(assert (x740 x884))
(assert (x786 x550))
(assert (x786 x1511))
(assert (x786 x664))
(assert (x1547 x542 x1411 x333 x884))
(assert (= (+ (x1897 x698) 1) (x1897 (x278 x698 1))))
(assert (and (x1086 x889 1000000000000000000) (x1383 x889 1000000000000000000) (x1160 x889 1000000000000000000) (x270 x889 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x889)) (and (<= (* (x1772 x889 1000000000000000000) 1000000000000000000) x889) (> (* (x1772 x889 1000000000000000000) 1000000000000000000) (- x889 1000000000000000000))))))
(assert (x786 x788))
(assert (x1608 x884 (- x333 x46)))
(assert (x786 x1448))
(assert (x786 x1603))
(assert (x1608 x985 (- x46 x503)))
(assert (x786 x785))
(assert (x786 x85))
(assert (= (and x1711 x1437) x1886))
(assert (= (x460 3019127319) (x1573 3019127319)))
(assert (x170 (- x542 x237)))
(assert (x786 x1440))
(assert (x795 x884 x333 x503 x1637))
(assert (= x1882 (x1897 (x1573 x1882))))
(assert (x170 (- x1416 x46)))
(assert (x786 x1509))
(assert (and (x1086 x342 1000000000000000000) (x1383 x342 1000000000000000000) (x1160 x342 1000000000000000000) (x270 x342 1000000000000000000) (=> (and (< 0 1000000000000000000) (< 0 x342)) (and (<= (* (x1772 x342 1000000000000000000) 1000000000000000000) x342) (> (* (x1772 x342 1000000000000000000) 1000000000000000000) (- x342 1000000000000000000))))))
(assert (= x901 (and x1688 x407)))
(assert (x1608 x46 (- x985 x1637)))
(assert (= (and x416 x1459) x14))
(assert (x786 x1598))
(assert (x786 x374))
(assert (x1547 x1411 x542 x333 x884))
(assert (x786 x1372))
(assert (x786 x1730))
(assert (and (x1591 x1180 1461501637330902918203684832716283019655932542976) (x713 x1180 1461501637330902918203684832716283019655932542976) (x1741 x1180 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1180 (+ (* 1461501637330902918203684832716283019655932542976 (x1772 x1180 1461501637330902918203684832716283019655932542976)) (x1652 x1180 1461501637330902918203684832716283019655932542976))))))
(assert (x795 x1416 x237 x985 x46))
(assert (x1547 x237 x1416 x985 x46))
(assert (x786 x688))
(assert (x786 x1301))
(assert (x786 x836))
(assert (x786 x1409))
(assert (= (x1573 3039079375) (x460 3039079375)))
(assert (x786 x687))
(assert (x1547 x333 x884 x542 x1411))
(assert (x786 x1516))
(assert (= (x460 18446744073709551615) (x1573 18446744073709551615)))
(assert (= (x1897 (x460 599290589)) 599290589))
(assert (x786 x554))
(assert (x91 x1377))
(assert (x795 x1416 x237 x1411 x542))
(assert (x1547 x563 x1791 x237 x1416))
(assert (x1608 x985 (- x46 x563)))
(assert (= (and x1757 x1253) x419))
(assert (x786 x1787))
(assert (= x1774 (and x60 (not x193))))
(assert (x786 x938))
(assert (x1608 x884 (- x333 x542)))
(assert (x786 x1429))
(assert (x198 1461501637330902918203684832716283019655932542976))
(assert (x795 x1791 x563 x503 x1637))
(assert (x786 x884))
(assert (and (x325 32 x1621) (x931 32 x1621) (x317 32 x1621) (= (x16 32 x1621) (* x1621 32)) (x696 32 x1621) (x59 32 x1621) (and (= (* (- x1621 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x16 32 (- x1621 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 32 x1621) (* x1621 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x16 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1621)) (= (x16 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1621 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x1621 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1621 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(assert (x786 x408))
(assert (and (x1591 x1261 1461501637330902918203684832716283019655932542976) (x713 x1261 1461501637330902918203684832716283019655932542976) (x1741 x1261 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1261 (+ (* 1461501637330902918203684832716283019655932542976 (x1772 x1261 1461501637330902918203684832716283019655932542976)) (x1652 x1261 1461501637330902918203684832716283019655932542976))))))
(assert (= (x1897 (x1573 x1878)) x1878))
(assert (x786 x965))
(assert (= (and (not x182) x746) x1524))
(assert (x786 x52))
(assert (= (and x1010 x1780) x875))
(assert (= x1205 (and (not x732) x1574)))
(assert (x786 x1669))
(assert (= (x1897 (x278 x239 1)) (+ (x1897 x239) 1)))
(assert (x786 x1560))
(assert (= x1720 (=> (= x1784 (> x1061 0)) (and (=> (not x1784) x902) (=> x1784 x440)))))
(assert (x1608 x985 (- x46 x1411)))
(assert (x786 x61))
(assert (x1547 x503 x1637 x542 x1411))
(assert (x786 x693))
(assert (x1608 x237 (- x1416 x333)))
(assert (= (x1897 (x460 6583703630350721090866640338677567052142505888617894577283092288194729738240)) 6583703630350721090866640338677567052142505888617894577283092288194729738240))
(assert (x1608 x1791 (- x563 x237)))
(assert (= x1382 (and x525 x642)))
(assert (x170 (- x503 x333)))
(assert (x786 x1604))
(assert (x170 x1621))
(assert (x786 x90))
(assert (x198 x1261))
(assert (x786 x789))
(assert (x170 (- x563 x503)))
(assert (x1465 x889 x884))
(assert (x170 (- x1416 x884)))
(assert (= (x1897 (x1573 x1583)) x1583))
(assert (x786 x1276))
(assert (= x1079 (and x1415 x1081)))
(assert (x786 x1610))
(assert (x786 x1671))
(assert (=> (>= 10000 x195) (= (x1573 x195) (x460 x195))))
(assert (= 0 (x1566 x981)))
(assert (x786 x828))
(assert (= (or x2 x728) x181))
(assert (x1547 x333 x884 x1416 x237))
(assert (= (and x661 x363) x1036))
(assert (x786 x1525))
(assert (= x1251 (and x663 x1132)))
(assert (x786 x417))
(assert (x786 x173))
(assert (= x315 x1717))
(assert (= 1896758387 (x1897 (x460 1896758387))))
(assert (x786 x886))
(assert (x1608 x1411 x542))
(assert (x18 x1192))
(assert (x786 x774))
(assert (x786 x294))
(assert (= x834 (and x958 (not x496))))
(assert (x786 x1883))
(assert (x91 x335))
(assert (x786 x1797))
(assert (x1608 x503 (- x1637 x1791)))
(assert (= (x1897 (x1573 x1748)) x1748))
(assert (and (= (x16 9 3) 27) (= (x16 9 9) 81) (= (x16 3 3) 9) (= 81 (x16 27 3))))
(assert (x786 x723))
(assert (x91 x1277))
(assert (= (x1897 (x460 77196514420459877940035116867124998943289115686762304616657918434777787006976)) 77196514420459877940035116867124998943289115686762304616657918434777787006976))
(assert (= x661 (or x1799 x622)))
(assert (x786 x41))
(assert (= (and x851 x1325) x1083))
(assert (x91 x1187))
(assert (x786 x444))
(assert (x170 x888))
(assert (x170 (- x1791 x503)))
(assert (= (and (not x1729) x1740) x680))
(assert (= (x1897 (x1573 x1377)) x1377))
(assert (x170 (- x333 x1791)))
(assert (x786 x812))
(assert (= (or x1719 x222 x797 x907) x385))
(assert (x786 x98))
(assert (x795 x542 x1411 x563 x1791))
(assert (x1547 x563 x1791 x985 x46))
(assert (= (x1573 16156842317565293874272834530371880720966471053262404558597773956279093428224) (x460 16156842317565293874272834530371880720966471053262404558597773956279093428224)))
(assert (x786 x1589))
(assert (x786 x155))
(assert (x1547 x1416 x237 x884 x333))
(assert (x786 x1088))
(assert (x786 x456))
(assert (x795 x884 x333 x563 x1791))
(assert (x1608 x985 (- x46 x333)))
(assert (x786 x1743))
(assert (x786 x733))
(assert (x786 x376))
(assert (= (x1897 (x1573 x1404)) x1404))
(assert (= x374 (x1897 (x1573 x374))))
(assert (= (and x956 x578) x1361))
(assert (= (x1897 (x1573 x937)) x937))
(assert (x786 x1878))
(assert (= 2863377861 (x1897 (x460 2863377861))))
(assert (x198 x1192))
(assert (x786 x1599))
(assert (= (and x158 x506) x648))
(assert (= x248 (or x1569 x1390)))
(assert (x786 x1023))
(assert (x1547 x985 x46 x1637 x503))
(assert (x786 x762))
(assert (=> (<= x1057 10000) (= (x1573 x1057) (x460 x1057))))
(assert (x170 (- x1637 x333)))
(assert (x1608 x46 (- x985 x884)))
(assert (x786 x1537))
(assert (x740 1000000000000000000))
(assert (x786 x1488))
(assert (=> (>= 10000 x391) (= (x460 x391) (x1573 x391))))
(assert (= x1003 (and x1513 x870)))
(assert (= x1435 (and x1790 (not x1784))))
(assert (x198 x1883))
(assert (x786 x681))
(assert (=> (>= 10000 x250) (= (x460 x250) (x1573 x250))))
(assert (x786 x1873))
(assert (x786 x1640))
(assert (=> (>= 10000 x640) (= (x460 x640) (x1573 x640))))
(assert (x170 (- x333 x542)))
(assert (= x459 (and (not x548) x1507)))
(assert (x786 x1260))
(assert (= (and x1585 x1128) x328))
(assert (x1547 x542 x1411 x884 x333))
(assert (= x250 (x1897 (x1573 x250))))
(assert (x91 x1644))
(assert (x1547 x542 x1411 x46 x985))
(assert (= (and (not x525) x642) x1101))
(assert (x1547 x333 x884 x503 x1637))
(assert (x740 x1367))
(assert (x786 x1266))
(assert (x91 x978))
(assert (x786 x587))
(assert (x786 x1733))
(assert (x786 x1727))
(assert (= (x1897 (x1573 x1773)) x1773))
(assert (x1608 x503 (- x1637 x985)))
(assert (x786 x1130))
(assert (x786 x501))
(assert (x786 x109))
(assert (x795 x1791 x563 x884 x333))
(assert (x786 x1847))
(assert (= (=> (= x128 (= x327 0)) (and (=> x128 x1408) (=> (and (= x636 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x892) (and (= (<= x892 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 32 x892)))) (not x128)) (and (=> x636 x1408) (=> (and (and (= x801 (x157 (x1573 x1404) x1447 0)) (= (x157 (x1573 x1541) (x460 0) 0) x1447) (= (x332 1461501637330902918203684832716283019655932542975 x1300) x1541) (= x366 (x1703 x801)) (= x1404 (x332 1461501637330902918203684832716283019655932542975 x1749)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x366) (= x1786 (x1627 (+ x366 x1651))) (= x1351 (< x1786 x366)) (<= 0 x366)) (not x636)) (and (=> (and (and (= (x157 (x1573 x809) x1220 0) x1705) (= x1220 (x157 (x1573 x195) (x460 0) 0)) (= x809 (x332 1461501637330902918203684832716283019655932542975 x1749)) (= x195 (x332 1461501637330902918203684832716283019655932542975 x1300))) (not x1351)) x210) (=> x1351 x1408))))))) x64))
(assert (x786 x1898))
(assert (x1547 x985 x46 x542 x1411))
(assert (x91 x982))
(assert (x786 x1696))
(assert (= (and (not x1221) x1588) x1398))
(assert (= (and x355 (not x1310)) x191))
(assert (x91 x1577))
(assert (x1547 x1411 x542 x985 x46))
(assert (= (=> (and (= x892 x259) (= x79 x327)) x432) x131))
(assert (x786 x413))
(assert (x786 x335))
(assert (x1547 x1637 x503 x985 x46))
(assert (x170 (- x1791 x542)))
(assert (x786 x400))
(assert (x1608 x1637 (- x503 x542)))
(assert (x786 x1043))
(assert (x786 x1027))
(assert (x91 x1057))
(assert (= (or x1842 x1200) x971))
(assert (x786 x442))
(assert (=> (>= 10000 x409) (= (x460 x409) (x1573 x409))))
(assert (x786 x1621))
(assert (= 1889567281 (x1897 (x460 1889567281))))
(assert (x786 x611))
(assert (x170 (- x1637 x563)))
(assert (x786 x1263))
(assert (x786 x1452))
(assert (x786 x277))
(assert (= (or x1850 x1487) x677))
(assert (x786 x369))
(assert (= (x1897 (x460 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (x786 x686))
(assert (= (x1897 (x460 76450787359836037641860180984291677749980919077056822294353438043884394381312)) 76450787359836037641860180984291677749980919077056822294353438043884394381312))
(assert (x1608 x1416 x237))
(assert (= (x460 2757214935) (x1573 2757214935)))
(assert (x795 x563 x1791 x985 x46))
(assert (x786 x1236))
(assert (= (x1897 (x278 x1503 3)) (+ 3 (x1897 x1503))))
(assert (= x323 (and x328 x19)))
(assert (x1608 x1411 (- x542 x1416)))
(assert (= (x1897 (x460 50942633119752846454219349998365661925608737367104304655302372697894809501696)) 50942633119752846454219349998365661925608737367104304655302372697894809501696))
(assert (x1547 x237 x1416 x1411 x542))
(assert (x786 x998))
(assert (x1547 x985 x46 x563 x1791))
(assert (x786 x487))
(assert (x786 x1054))
(assert (x786 x1180))
(assert (= x147 (and (not x1860) x1037)))
(assert (= x910 (and x934 x862)))
(assert (x786 x42))
(assert (x786 x1619))
(assert (= x1074 (and x1709 (not x343))))
(assert (x1608 x985 x46))
(assert (x1547 x1416 x237 x333 x884))
(assert (=> (>= 10000 x85) (= (x1573 x85) (x460 x85))))
(assert (x786 x839))
(assert (x170 (- x563 x985)))
(assert (x786 x295))
(assert (x18 x260))
(assert (x786 x1662))
(assert (= (x460 928407353) (x1573 928407353)))
(assert (x786 x546))
(assert (x786 x879))
(assert (x786 x410))
(assert (= x1357 (and x955 (not x481))))
(assert (x170 (- x1637 x46)))
(assert (= x125 (=> (and (= x105 x1044) (= x715 x534)) x676)))
(assert (x786 x643))
(assert (x786 x253))
(assert (= 2992780654 (x1897 (x460 2992780654))))
(assert (x786 x1125))
(assert (x1608 x503 (- x1637 x884)))
(assert (x1608 x1411 (- x542 x503)))
(assert (x1547 x563 x1791 x1637 x503))
(assert (x786 x1337))
(assert (= (or x778 x1461 x1083 x946 x638) x1869))
(assert (= (and x1418 x189) x1497))
(assert (= x589 (and x1780 (not x1010))))
(assert (x91 x912))
(assert (x786 x1765))
(assert (x786 x523))
(assert (x786 x1177))
(assert (x786 x1473))
(assert (= (and x1359 x1506) x833))
(assert (= x267 (and (not x1041) x1498)))
(assert (x1547 x1416 x237 x985 x46))
(assert (= (and x1041 x1498) x1085))
(assert (x91 x1175))
(assert (= (=> (and (= x595 (not (< 1 x1619))) (= (x1077 x974) x1619)) (and x595 x143)) x299))
(assert (= x251 (and x838 x27)))
(assert (x786 x464))
(assert (= (and x1540 (not x1376)) x209))
(assert (x170 (- x1416 x1637)))
(assert (x786 x776))
(assert (x786 x433))
(assert (= x1461 (and x759 x311)))
(assert (x786 x679))
(assert (x170 (- x985 x1637)))
(assert (x786 x1399))
(assert (= x1639 (and x1402 (not x1578))))
(assert (x786 x773))
(assert (x170 (- x563 x1411)))
(assert (x786 x138))
(assert (x170 (- x333 x237)))
(assert (= (and x1363 x796) x1066))
(assert (x786 x960))
(assert (x786 x1583))
(assert (x786 x944))
(assert (x795 x46 x985 x1411 x542))
(assert (x786 x1246))
(assert (= x1147 (x1897 (x1573 x1147))))
(assert (x786 x1822))
(assert (x786 x1135))
(assert (= (and (not x878) x9) x1593))
(assert (x786 x968))
(assert (x786 x1189))
(assert (x170 (- x985 x333)))
(assert (x1608 x1791 (- x563 x1637)))
(assert (x786 x1240))
(assert (x786 x1683))
(assert (x786 x402))
(assert (x786 x552))
(assert (x786 x1267))
(assert (=> (<= x1069 10000) (= (x460 x1069) (x1573 x1069))))
(assert (x1608 x1637 (- x503 x1416)))
(assert (x786 x1815))
(assert (= x1108 (and x128 x1107)))
(assert (x170 (- x1411 x985)))
(assert (x786 x536))
(assert (= (x1897 (x1573 x384)) x384))
(assert (x786 x1114))
(assert (x786 x150))
(assert (x170 (- x1411 x333)))
(assert (x786 x47))
(assert (x170 (- x1637 x1416)))
(assert (x170 32))
(assert (x786 x1759))
(assert (= (and x677 x438) x478))
(assert (x786 x534))
(assert (x740 x167))
(assert (x786 x1467))
(assert (= (x1897 (x1573 x1541)) x1541))
(assert (x786 x1763))
(assert (= x638 (and x424 x169)))
(assert (= (and x1514 x218) x753))
(assert (x91 x742))
(assert (= (x460 1889567281) (x1573 1889567281)))
(assert (x786 x1192))
(assert (x786 x810))
(assert (= (and x833 (not x1199)) x768))
(assert (= x1540 (and x1699 (not x145))))
(assert (x1547 x237 x1416 x884 x333))
(assert (x786 x1187))
(assert (x786 x521))
(assert (x740 x1104))
(assert (= 3019127319 (x1897 (x460 3019127319))))
(assert (= (x1897 (x460 2757214935)) 2757214935))
(assert (= (and (not x1282) x1753) x1590))
(assert (= (and x736 x181) x1584))
(assert (x786 x1794))
(assert (x795 x563 x1791 x884 x333))
(assert (= (=> (and (= x445 x762) (= x812 x1)) x211) x1470))
(assert (=> (<= x912 10000) (= (x1573 x912) (x460 x912))))
(assert (= x69 (and x1588 x1221)))
(assert (= (=> (and (= (= x534 0) x736) (or x736 (not x736))) x777) x676))
(assert (x786 x1654))
(assert (x786 x452))
(assert (= (and x74 x482) x1103))
(assert (x795 x237 x1416 x503 x1637))
(assert (x786 x1275))
(assert (x170 (- x884 x503)))
(assert (= x907 (and x598 x1756)))
(assert (= x256 (and (not x988) x305)))
(assert (x1547 x237 x1416 x1791 x563))
(assert (x786 x576))
(assert (x786 x414))
(assert (x786 x287))
(assert (x170 (- x884 x46)))
(assert (x1547 x1416 x237 x1411 x542))
(assert (and (x325 32 x633) (x931 32 x633) (x317 32 x633) (= (x16 32 x633) (* x633 32)) (x696 32 x633) (x59 32 x633) (and (= (* (- x633 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x16 32 (- x633 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 32 x633) (* x633 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x16 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x633)) (= (x16 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x633 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x633 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x633 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(assert (x786 x1877))
(assert (= (or x1103 x1675 x323) x244))
(assert (x1547 x985 x46 x1416 x237))
(assert (x786 x999))
(assert (x786 x1155))
(assert (= (and (not x851) x1325) x792))
(assert (= (and x1071 x312) x1871))
(assert (x1547 x1791 x563 x884 x333))
(assert (x786 x310))
(assert (=> (>= 10000 x1147) (= (x1573 x1147) (x460 x1147))))
(assert (x170 (- x1416 x563)))
(assert (= x1395 (and x957 (not x123))))
(assert (= (and x423 (not x1219)) x543))
(assert (x1608 x542 (- x1411 x503)))
(assert (= x1428 (and x1382 x1412)))
(assert (= x510 (and x267 x749)))
(assert (= (and x551 (not x451)) x357))
(assert (x786 x233))
(assert (= (x1573 2514000705) (x460 2514000705)))
(assert (= 2759752456 (x1897 (x460 2759752456))))
(assert (x786 x1874))
(assert (x786 x499))
(assert (x786 x192))
(assert (x795 x884 x333 x1411 x542))
(assert (x18 x1261))
(assert (= (+ 7 (x1897 x1726)) (x1897 (x278 x1726 7))))
(assert (x1547 x1791 x563 x46 x985))
(assert (= (=> (= x844 0) x535) x143))
(assert (= (=> (and (and (and (and (= 128 x678) (= x1378 x706) (= x780 x741) (= x730 3248092328) (= x929 (x157 (x1573 x374) x911 0)) (>= x631 0) (= x153 (x1097 (x1573 x912))) (<= x374 1461501637330902918203684832716283019655932542975) (<= x1274 1461501637330902918203684832716283019655932542975) (= (x1703 x929) x885) (<= x376 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x885) (<= x136 1461501637330902918203684832716283019655932542975) (<= x631 1461501637330902918203684832716283019655932542975) (= x780 x136) (= x146 x1747) (>= x885 0) (= x1282 (= x408 x376)) (= x376 x1294) (= x631 x1908) (= x374 x1760) (not (= 244203140 x730)) (>= x1274 0) (= (x157 (x1573 x376) (x460 0) 0) x911) (= (x1097 (x1573 x376)) x160) (>= x136 0) (not (= x160 0)) (= 0 x1378) (< 0 x153)) (or (and (not x1282) (and (and (and (and (> x588 0) (= 1889567281 x1309) (not (> 961581905 x1309)) (= x374 x1148) (= 36 x1399) (= 36 x1399) (not (> 4 x1399)) (= (> 32 x238) x218) (= x1043 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x238 (x775 (- x1399 4))) (= x588 (x1097 (x1573 x1868))) (not (= 961581905 x1309))) (or (and x218 (and (= 0 x849) (= x1154 x1707))) (and (not x218) (and (= 32 x1154) (= x1148 x1375) (= (x157 (x1573 x1148) (x460 0) 0) x1087) (= (x272 x1087) x681) (= x1686 x1148) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x681) (= 1 x849) (<= 0 x681))))) x1201) (= (= x1868 x376) x1201))) (and x1282 (and (or (and (and (= 0 x849) (= x1154 x1707)) x1711) (and (not x1711) (and (= x766 x1379) (= (x157 (x1573 x766) (x460 0) 0) x906) (= x359 (x832 x906)) (= x976 x766) (>= x359 0) (= x849 1) (= 32 x1154) (<= x359 115792089237316195423570985008687907853269984665640564039457584007913129639935)))) (and (not (< x257 961581905)) (= 50942633119752846454219349998365661925608737367104304655302372697894809501696 x718) (= 1889567281 x257) (= x766 x374) (= (x775 (- x1072 4)) x701) (> x554 0) (= (x1097 (x1573 x408)) x554) (not (= x257 961581905)) (= x1711 (> 32 x701)) (= x1072 36) (not (< x1072 4)) (= 36 x1072)))))) (and (> 1896758387 x1689) (<= x1137 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= 1745213101 x1689) (= x263 (x157 (x1573 x346) x26 0)) (= x1760 x346) (< x1689 2290148746) (= (x1097 (x1573 x1644)) x1505) (not (= 1742540299 x1689)) (not (= x1689 1520650183)) (not (> 1520650183 x1689)) (>= x1137 0) (<= x346 1461501637330902918203684832716283019655932542975) (= x1140 x1027) (>= 1461501637330902918203684832716283019655932542975 x742) (> x1505 0) (= x742 x939) (= (x1693 x263) x1137) (= x1747 x1137) (= (x157 (x1573 x742) (x460 2) 0) x26))) (= x1140 x1598)) x1076) x905))
(assert (x786 x1331))
(assert (x786 x529))
(assert (=> (<= x1882 10000) (= (x1573 x1882) (x460 x1882))))
(assert (x91 x964))
(assert (x786 x392))
(assert (x786 x1434))
(assert (= (and x1288 (not x969)) x1094))
(assert (= x1818 (or x258 x1893)))
(assert (x786 x1343))
(assert (x786 x418))
(assert (x786 x1060))
(assert (= (x1897 (x1573 x1127)) x1127))
(assert (x786 x500))
(assert (=> (>= 10000 x1006) (= (x1573 x1006) (x460 x1006))))
(assert (x170 (- x1411 x1637)))
(assert (x1608 x1411 (- x542 x333)))
(assert (x786 x1824))
(assert (x795 x1637 x503 x884 x333))
(assert (x786 x405))
(assert (=> (>= 10000 x1175) (= (x460 x1175) (x1573 x1175))))
(assert (x170 (- x1791 x1411)))
(assert (= 1242462222 (x1897 (x460 1242462222))))
(assert (= x1679 (and (not x1808) x104)))
(assert (x786 x1809))
(assert (x170 (- x333 x1411)))
(assert (x786 x591))
(assert (x1608 x237 (- x1416 x1411)))
(assert (x786 x205))
(assert (x1547 x542 x1411 x1416 x237))
(assert (x786 x847))
(assert (= (or x760 x266 x627 x314 x1370) x1793))
(assert (x1608 x503 (- x1637 x333)))
(assert (x786 x689))
(assert (=> (>= 10000 x349) (= (x1573 x349) (x460 x349))))
(assert (= 2455663379 (x1897 (x460 2455663379))))
(assert (x786 x982))
(assert (x786 x126))
(assert (x786 x673))
(assert (x1608 x542 (- x1411 x46)))
(assert (x91 x349))
(assert (x786 x633))
(assert (x198 x1176))
(assert (x786 x249))
(assert (= (+ 5 (x1897 x1726)) (x1897 (x278 x1726 5))))
(assert (= x1021 (or x1576 x1396 x600 x702 x463 x69)))
(assert (and (x1591 x626 1461501637330902918203684832716283019655932542976) (x713 x626 1461501637330902918203684832716283019655932542976) (x1741 x626 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x626 (+ (* 1461501637330902918203684832716283019655932542976 (x1772 x626 1461501637330902918203684832716283019655932542976)) (x1652 x626 1461501637330902918203684832716283019655932542976))))))
(assert (x786 x1882))
(assert (x170 (- x1791 x884)))
(assert (= (or x1119 x996 x1373 x119 x1474 x1587 x1210 x512 x484 x1524 x871 x680 x1084 x3 x764 x419 x406 x1108 x754 x1005 x1101 x1030 x993 x241 x93 x690 x1471 x344 x874 x1650 x717 x1665 x1067 x1205 x331 x1255 x1840 x910 x14) x622))
(assert (x795 x503 x1637 x563 x1791))
(assert (x786 x33))
(assert (x786 x1315))
(assert (= (x1897 (x1573 x163)) x163))
(assert (x198 x674))
(assert (x786 x1245))
(assert (x786 x1142))
(assert (x786 x986))
(assert (x1608 x884 (- x333 x985)))
(assert (x786 x1400))
(assert (x1547 x563 x1791 x46 x985))
(assert (= x1131 (and (not x1456) x8)))
(assert (=> (<= x384 10000) (= (x460 x384) (x1573 x384))))
(assert (=> (>= 10000 x1878) (= (x1573 x1878) (x460 x1878))))
(assert (x1608 x1791 (- x563 x1416)))
(assert (= (x1897 (x1573 x1112)) x1112))
(assert (=> (>= 10000 x1127) (= (x1573 x1127) (x460 x1127))))
(assert (x786 x701))
(assert (x786 x1894))
(assert (= (+ (x1897 x1745) 3) (x1897 (x278 x1745 3))))
(assert (x786 x265))
(assert (= (and x720 (not x577)) x993))
(assert (= (x1897 (x278 x1811 7)) (+ (x1897 x1811) 7)))
(assert (= (and x1222 x94) x1842))
(assert (x786 x1656))
(assert (x1608 x1411 (- x542 x884)))
(assert (x786 x545))
(assert (= x727 (and x1031 (not x162))))
(assert (x170 (- x503 x1411)))
(assert (x786 x55))
(assert (x786 x1611))
(assert (x170 (- x237 x333)))
(assert (x786 x1032))
(assert (and (=> (and (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (< 0 x1367)) (and (<= (* (x1772 x1367 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) x1367) (> (* (x1772 x1367 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) (- x1367 26959946667150639794667015087019630673637144422540572481103610249216)))) (= (- x1367 (x332 26959946667150639794667015087019630673637144422540572481103610249215 x1367)) (* (x1772 x1367 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216)) (x1086 x1367 26959946667150639794667015087019630673637144422540572481103610249216) (x1160 x1367 26959946667150639794667015087019630673637144422540572481103610249216) (x270 x1367 26959946667150639794667015087019630673637144422540572481103610249216) (x1383 x1367 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= (or x1358 x244) x1828))
(assert (=> (<= x928 10000) (= (x1573 x928) (x460 x928))))
(assert (x795 x503 x1637 x985 x46))
(assert (and (x325 32 x1061) (x931 32 x1061) (x317 32 x1061) (= (x16 32 x1061) (* x1061 32)) (x696 32 x1061) (x59 32 x1061) (and (= (* (- x1061 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x16 32 (- x1061 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 32 x1061) (* x1061 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x16 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1061)) (= (x16 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1061 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x1061 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1061 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(assert (x786 x532))
(assert (=> (<= x787 10000) (= (x460 x787) (x1573 x787))))
(assert (x795 x985 x46 x503 x1637))
(assert (x786 x889))
(assert (x1547 x985 x46 x1791 x563))
(assert (x786 x1194))
(assert (x786 x892))
(assert (= (or x753 x1886 x326 x449) x1110))
(assert (= (and (not x1026) x1423) x1162))
(assert (x786 x1515))
(assert (= (and x158 (not x506)) x72))
(assert (x170 (- x503 x542)))
(assert (x170 (- x1416 x985)))
(assert (x786 x655))
(assert (=> (<= x559 10000) (= (x460 x559) (x1573 x559))))
(assert (x170 (- x563 x1416)))
(assert (= (x1897 (x1573 (x361 x1367 224))) (x361 x1367 224)))
(assert (= (x460 77196514420459877940035116867124998943289115686762304616657918434777787006976) (x1573 77196514420459877940035116867124998943289115686762304616657918434777787006976)))
(assert (x786 x1355))
(assert (x786 x779))
(assert (x786 x559))
(assert (x786 x1545))
(assert (x795 x542 x1411 x884 x333))
(assert (x786 x742))
(assert (x1608 x563 (- x1791 x1637)))
(assert (x1608 x1416 (- x237 x1637)))
(assert (= (=> (and (= x458 x547) (= 0 x53)) x461) x1531))
(assert (= x1187 (x1897 (x1573 x1187))))
(assert (x1028 x1176))
(assert (= (x1897 (x1573 x1340)) x1340))
(assert (= (and (not x1788) x40) x119))
(assert (= x85 (x1897 (x1573 x85))))
(assert (x1547 x884 x333 x1637 x503))
(assert (= x497 (and x110 x1003)))
(assert (x786 x1738))
(assert (x91 x1147))
(assert (x786 x1700))
(assert (= x1286 (and x343 x1709)))
(assert (x795 x1637 x503 x1411 x542))
(assert (x1547 x884 x333 x1416 x237))
(assert (x1608 x563 (- x1791 x237)))
(assert (x18 x626))
(assert (= (and x988 x305) x1030))
(assert (x1608 x46 (- x985 x333)))
(assert (=> (<= x982 10000) (= (x460 x982) (x1573 x982))))
(assert (x786 x1633))
(assert (x786 x79))
(assert (x786 x306))
(assert (x1608 x542 (- x1411 x985)))
(assert (x786 x1802))
(assert (x786 x1137))
(assert (x786 x302))
(assert (x786 x240))
(assert (x1547 x503 x1637 x1791 x563))
(assert (x786 x1099))
(assert (x170 x389))
(assert (x786 x5))
(assert (x786 x415))
(assert (x170 (- x1637 x237)))
(assert (x786 x1380))
(assert (x795 x563 x1791 x503 x1637))
(assert (x170 (- x503 x237)))
(assert (x1547 x503 x1637 x985 x46))
(assert (x1608 x1411 (- x542 x1791)))
(assert (x786 x345))
(assert (x786 x1453))
(assert (x786 x1174))
(assert (=> (<= (x361 x1367 224) 10000) (= (x1573 (x361 x1367 224)) (x460 (x361 x1367 224)))))
(assert (= (x1573 1745213101) (x460 1745213101)))
(assert (x1547 x1637 x503 x542 x1411))
(assert (x1547 x884 x333 x46 x985))
(assert (x786 x684))
(assert (x786 x782))
(assert (x786 x1462))
(assert (x795 x985 x46 x1416 x237))
(assert (x786 x817))
(assert (= (+ (x1897 x668) 1) (x1897 (x278 x668 1))))
(assert (x786 x631))
(assert (x170 (- x884 x542)))
(assert (x91 x456))
(assert (x1608 x542 (- x1411 x237)))
(assert (x1608 x333 (- x884 x1411)))
(assert (x786 x235))
(assert (= x40 (and x1574 x732)))
(assert (= x958 (and x209 x21)))
(assert (x786 x555))
(assert (x786 x1421))
(assert (x1028 x1192))
(assert (= x1841 (and x1398 (not x370))))
(assert (= (x1897 (x1573 x908)) x908))
(assert (= (or x553 x147) x450))
(assert (x1465 x1104 x985))
(assert (x786 x1832))
(assert (= (and x188 x357) x1084))
(assert (x786 x1783))
(assert (= x1906 (or x168 x251)))
(assert (x786 x489))
(assert (x786 x132))
(assert (x786 x964))
(assert (x786 x1632))
(assert (= x1408 (=> (= x1008 0) x103)))
(assert (= (x460 85603218) (x1573 85603218)))
(assert (x786 x1764))
(assert (= 0 (x1183 x1797)))
(assert (= (or x412 x1021) x2))
(assert (x18 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (and x1351 x7) x1471))
(assert (= x1045 (x1897 (x1573 x1045))))
(assert (= x1596 (=> (and (and (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x5) true) (< x5 32)))) (= (x1019 128) x1374) (= x936 x233) (not (= 0 x61)) (not (>= (+ x334 x1374) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1627 (+ x334 x1374)) x233)) (and (= x1185 x324) (= (+ x1287 x1654) x790) (= x141 x848) (= x567 x1654) (= x936 x1185) (= (+ x324 x790) x848) (= x225 x666) (= (= x225 x141) x1250) (= x1287 x1450))) x1250)))
(assert (= (and x74 (not x482)) x1475))
(assert (x786 x308))
(assert (= (or x164 x793) x280))
(assert (= (x1897 (x278 x434 1)) (+ (x1897 x434) 1)))
(assert (= (x361 x1367 224) (x1772 x1367 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x786 x912))
(assert (= (x1897 (x1573 x1275)) x1275))
(assert (= x1067 (and x425 (not x204))))
(assert (= (x1897 (x1573 x1148)) x1148))
(assert (= (x1897 (x460 2781097000)) 2781097000))
(assert (x1547 x333 x884 x237 x1416))
(assert (x170 x503))
(assert (x1547 x563 x1791 x1416 x237))
(assert (x786 x692))
(assert (x1608 x1416 (- x237 x46)))
(assert (x786 x1766))
(assert (x786 x100))
(assert (x1608 x563 x1791))
(assert (x786 x105))
(assert (x1608 x563 (- x1791 x333)))
(assert (x786 x937))
(assert (x786 x372))
(assert (x786 x522))
(assert (x1608 x1411 (- x542 x46)))
(assert (x170 x884))
(assert (x786 x1786))
(assert (= (+ (x1897 x1811) 8) (x1897 (x278 x1811 8))))
(assert (x1028 x626))
(assert (x786 x1392))
(assert (= (and x768 (not x1663)) x425))
(assert (x786 x184))
(assert (x786 x202))
(assert (x786 x626))
(assert (x1547 x1416 x237 x1791 x563))
(assert (x786 x274))
(assert (x786 x1271))
(assert (= (and x82 (not x1062)) x12))
(assert (x786 x951))
(assert (x795 x542 x1411 x985 x46))
(assert (= x516 (and x102 x831)))
(assert (= (and x955 x481) x396))
(assert (x786 x475))
(assert (= (=> (and (= x672 x1015) (= 0 x952)) x288) x1017))
(assert (x786 x634))
(assert (x786 x1863))
(assert (x740 x563))
(assert (= x1056 (or x516 x1361)))
(assert (x786 x586))
(assert (and (x325 32 x1348) (x931 32 x1348) (x317 32 x1348) (= (x16 32 x1348) (* x1348 32)) (x696 32 x1348) (x59 32 x1348) (and (= (* (- x1348 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x16 32 (- x1348 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 32 x1348) (* x1348 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x16 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1348)) (= (x16 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1348 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x1348 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1348 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(assert (x786 x1044))
(assert (x91 x908))
(assert (= (x1897 (x460 961581905)) 961581905))
(assert (= (=> (and (= x1172 (x1627 (+ 32 x789))) (= x789 (x1627 (+ x417 4))) (= (x332 1461501637330902918203684832716283019655932542975 x1197) x456) (= x825 (x1627 (+ 32 x1172))) (= x1488 (x1627 (+ x413 32))) (= (x320 x413) x67) (= x15 (< 0 x67))) (and (=> (and (not x15) (= x1211 x825)) x1460) (=> x15 x187))) x1223))
(assert (= (x1897 (x278 x1887 1)) (+ 1 (x1897 x1887))))
(assert (x170 (- x333 x1416)))
(assert (x786 x1666))
(assert (= x793 (or x543 x1572)))
(assert (= x344 (and x1152 x201)))
(assert (x1028 x1368))
(assert (x786 x844))
(assert (x91 x1878))
(assert (x786 x426))
(assert (=> (>= 10000 x709) (= (x460 x709) (x1573 x709))))
(assert (x170 (- x884 x1416)))
(assert (x786 x739))
(assert (= (and x1110 x1249) x164))
(assert (= (x1897 (x278 x1726 3)) (+ (x1897 x1726) 3)))
(assert (= (and (not x1528) x275) x206))
(assert (= (and (not x1229) x114) x876))
(assert (x795 x1791 x563 x1416 x237))
(assert (x1608 x1791 (- x563 x884)))
(assert (x1608 x237 (- x1416 x503)))
(assert (x1608 x884 (- x333 x237)))
(assert (x786 x366))
(assert (= (or x1094 x971) x682))
(assert (x786 x226))
(assert (x786 x1298))
(assert (= (and x1376 x1540) x1305))
(assert (x786 x1777))
(assert (= x1069 (x1897 (x1573 x1069))))
(assert (and (x1591 x1883 1461501637330902918203684832716283019655932542976) (x713 x1883 1461501637330902918203684832716283019655932542976) (x1741 x1883 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1883 (+ (* 1461501637330902918203684832716283019655932542976 (x1772 x1883 1461501637330902918203684832716283019655932542976)) (x1652 x1883 1461501637330902918203684832716283019655932542976))))))
(assert (= x605 (x1897 (x1573 x605))))
(assert (x786 x1564))
(assert (x786 x765))
(assert (x1028 x1218))
(assert (x795 x237 x1416 x884 x333))
(assert (x786 x1775))
(assert (x1608 x1637 (- x503 x884)))
(assert (x795 x1791 x563 x985 x46))
(assert (= x490 (and (not x599) x441)))
(assert (= (x1573 70508962019145425934951811999677760319478833095128838543097651878529435959296) (x460 70508962019145425934951811999677760319478833095128838543097651878529435959296)))
(assert (x1608 x1416 (- x237 x1411)))
(assert (x1547 x542 x1411 x1791 x563))
(assert (=> (<= x163 10000) (= (x460 x163) (x1573 x163))))
(assert (= x972 (and x1110 (not x1249))))
(assert (x786 x855))
(assert (x786 x391))
(assert (= (x1897 (x1573 x978)) x978))
(assert (= (and (not x1165) x1074) x258))
(assert (x1547 x46 x985 x1637 x503))
(assert (x786 x1207))
(assert (x786 x602))
(assert (x786 x1835))
(assert (x1547 x1411 x542 x563 x1791))
(assert (x786 x699))
(assert (x786 x1385))
(assert (= (x1692 x1125) 0))
(assert (x786 x783))
(assert (x786 x1476))
(assert (x786 x709))
(assert (x786 x1269))
(assert (x1608 x1416 (- x237 x563)))
(assert (x170 x333))
(assert (x170 x985))
(assert (= (or x1869 x792) x1850))
(assert (x1608 x1637 (- x503 x237)))
(assert (x786 x894))
(assert (= (x460 1001385071) (x1573 1001385071)))
(assert (x786 x904))
(assert (= (=> (and (= x826 x1206) (and (and (and (= (= x408 x808) x738) (not (= x555 0)) (<= 0 x334) (>= 1461501637330902918203684832716283019655932542975 x613) (<= x95 1461501637330902918203684832716283019655932542975) (>= x95 0) (<= x1583 1461501637330902918203684832716283019655932542975) (= (x1097 (x1573 x912)) x1872) (= x706 x487) (= x1232 (x157 (x1573 x808) (x460 0) 0)) (= x334 (x1058 x592)) (= x1583 x1760) (= x567 x810) (= x592 (x157 (x1573 x1583) x1232 0)) (= x1294 x808) (<= x808 1461501637330902918203684832716283019655932542975) (= 0 x487) (= 3248092328 x362) (<= x1335 1461501637330902918203684832716283019655932542975) (= x555 (x1097 (x1573 x808))) (not (= x362 244203140)) (= x1908 x1335) (= x1392 128) (= x721 x741) (< 0 x1872) (= x721 x613) (<= 0 x1335) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x334) (>= x613 0)) (or (and (and (and (< 0 x953) (not (< x356 4)) (= 36 x356) (= x953 (x1097 (x1573 x408))) (= x1638 50942633119752846454219349998365661925608737367104304655302372697894809501696) (= x863 (x775 (- x356 4))) (= x1324 x1583) (= (> 32 x863) x1756) (not (> 961581905 x117)) (not (= 961581905 x117)) (= x117 1889567281) (= 36 x356)) (or (and (and (= x552 x1324) (= 32 x5) (= x242 (x157 (x1573 x1324) (x460 0) 0)) (<= x1271 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x1292 x242) x1271) (>= x1271 0) (= x839 x1324) (= 1 x61)) (not x1756)) (and x1756 (and (= x1260 x5) (= 0 x61))))) x738) (and (not x738) (and (= x548 (= x808 x1868)) (and x548 (and (and (= (x775 (- x614 4)) x1029) (not (> 4 x614)) (= x1878 x1583) (= x1238 50942633119752846454219349998365661925608737367104304655302372697894809501696) (not (= x1696 961581905)) (not (> 961581905 x1696)) (= x398 (> 32 x1029)) (> x1758 0) (= 36 x614) (= x614 36) (= (x1097 (x1573 x1868)) x1758) (= x1696 1889567281)) (or (and (and (= x1821 (x157 (x1573 x1878) (x460 0) 0)) (<= x1352 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x828 x1878) (>= x1352 0) (= x1878 x92) (= (x821 x1821) x1352) (= x61 1) (= x5 32)) (not x398)) (and x398 (and (= x61 0) (= x1260 x5)))))))))) (and (= x893 (x1097 (x1573 x1644))) (>= x1764 0) (= x939 x292) (< 0 x893) (< x1133 1896758387) (<= x964 1461501637330902918203684832716283019655932542975) (= x810 x1764) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1764) (= (x157 (x1573 x292) (x460 2) 0) x751) (<= x292 1461501637330902918203684832716283019655932542975) (not (= 1742540299 x1133)) (> 2290148746 x1133) (not (> 1520650183 x1133)) (= 1745213101 x1133) (= (x1693 x1234) x1764) (= (x157 (x1573 x964) x751 0) x1234) (= x964 x1760) (not (= 1520650183 x1133)) (= x1450 x826)))) x1596) x1427))
(assert (x1608 x237 (- x1416 x542)))
(assert (and (x1591 x1300 1461501637330902918203684832716283019655932542976) (x713 x1300 1461501637330902918203684832716283019655932542976) (x1741 x1300 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1300 (+ (* 1461501637330902918203684832716283019655932542976 (x1772 x1300 1461501637330902918203684832716283019655932542976)) (x1652 x1300 1461501637330902918203684832716283019655932542976))))))
(assert (x786 x1368))
(assert (x786 x859))
(assert (x786 x78))
(assert (= x1507 (and (not x738) x1171)))
(assert (x786 x1856))
(assert (= x1171 (or x648 x1712)))
(assert (= (x1897 (x278 x1501 1)) (+ 1 (x1897 x1501))))
(assert (x1608 x46 (- x985 x563)))
(assert (= (x1897 (x278 x623 3)) (+ 3 (x1897 x623))))
(assert (x170 (- x1791 x46)))
(assert (x786 x1226))
(assert (x786 x919))
(assert (x1547 x1416 x237 x563 x1791))
(assert (= x1299 (and x1403 x1065)))
(assert (x786 x354))
(assert (= (x1897 (x1573 x912)) x912))
(assert (x18 x674))
(assert (x786 x1203))
(assert (= x1550 (or x1793 x245)))
(assert (x786 x1313))
(assert (= (or x1828 x1620) x1463))
(assert (=> (>= 10000 x766) (= (x1573 x766) (x460 x766))))
(assert (x1608 x333 (- x884 x46)))
(assert (x786 x292))
(assert (x786 x850))
(assert (x1608 x1637 (- x503 x1791)))
(assert (x786 x1182))
(assert (x786 x56))
(assert (x170 (- x542 x333)))
(assert (x786 x1035))
(assert (x786 x167))
(assert (x1608 x1411 (- x542 x563)))
(assert (x786 x867))
(assert (x170 (- x46 x884)))
(assert (x786 x58))
(assert (= (and x1590 (not x1201)) x1164))
(assert (x786 x1148))
(assert (x786 x730))
(assert (x1547 x563 x1791 x1411 x542))
(assert (= (x1573 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x460 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= (x1573 6583703630350721090866640338677567052142505888617894577283092288194729738240) (x460 6583703630350721090866640338677567052142505888617894577283092288194729738240)))
(assert (x786 x1457))
(assert (x1547 x563 x1791 x542 x1411))
(assert (= (and (not x975) x1593) x245))
(assert (x795 x1411 x542 x563 x1791))
(assert (x786 x1779))
(assert (x1608 x884 (- x333 x1791)))
(assert (x786 x1616))
(assert (x1547 x542 x1411 x1637 x503))
(assert (x1608 x563 (- x1791 x884)))
(assert (x170 (- x1416 x1411)))
(assert (= x996 (and x1199 x833)))
(assert (= x1281 (=> (and (= x1130 x1042) (= x1902 x1666)) x71)))
(assert (x1608 x46 (- x985 x1791)))
(assert (= (x1897 (x1573 x292)) x292))
(assert (x786 x1323))
(assert (x786 x1791))
(assert (x786 x349))
(assert (= (and (not x102) x831) x1857))
(assert (x1547 x884 x333 x985 x46))
(assert (x91 x808))
(assert (x170 (- x237 x46)))
(assert (x786 x353))
(assert (= (and (not x1351) x7) x1390))
(assert (x170 (- x503 x563)))
(assert (x786 x148))
(assert (x1608 x333 (- x884 x237)))
(assert (x786 x1760))
(assert (x91 x1045))
(assert (= (x1897 (x460 2290148746)) 2290148746))
(assert (x786 x843))
(assert (x1547 x1411 x542 x46 x985))
(assert (x170 (- x563 x237)))
(assert (= x1498 (and x1424 x1302)))
(assert (x786 x179))
(assert (x91 x346))
(assert (x786 x1072))
(assert (x786 x1322))
(assert (x786 x1069))
(assert (x1608 x985 (- x46 x1416)))
(assert (x91 x605))
(assert (x1028 x674))
(assert (= x424 (and x135 x729)))
(assert (x1547 x1637 x503 x237 x1416))
(assert (x786 x1247))
(assert (x786 x908))
(assert (= x841 (=> (and (= x1779 (x835 128)) (= x1808 (> x1779 0))) (and (=> (and (and (= x249 (x835 128)) (= (< 0 x249) x870)) x1808) (and (=> (not x870) x1408) (=> (and (and (= (> x968 0) x110) (= (x1149 160) x1783) (= (x835 128) x968) (= (x1627 (+ 64 x1783)) x1618) (= x1651 (x1490 x1618))) x870) (and (=> (and x110 (and (= (x1149 160) x426) (= x1749 (x208 x1827)) (= x858 (> x1139 0)) (= (x835 128) x1139) (= (x1627 (+ 128 x426)) x1827))) (and (=> (and x858 (and (= (x1149 160) x933) (= (> x601 0) x577) (= x1308 (x1627 (+ 96 x933))) (= (x122 x1308) x674) (= (x835 128) x601))) (and (=> (and x577 (and (= x521 (x1149 160)) (= (x1627 (+ 32 x521)) x1633) (= x1694 (x835 128)) (= (> x1694 0) x1575) (= (x1634 x1633) x1300))) (and (=> (not x1575) x1408) (=> (and x1575 (and (= x722 (x917 x1728)) (= (< 3 x722) x1907) (= x1728 (x1149 160)))) (and (=> (and (= (= 0 x722) x1156) (not x1907)) (and (=> (and (and (= x689 (x1627 (+ x56 4))) (= x296 (x775 (- x1194 x56))) (= x1757 (= x108 0)) (= x335 (x332 1461501637330902918203684832716283019655932542975 x1300)) (= x1194 (x1627 (+ 96 x689))) (= (x1627 (+ 32 x689)) x1267) (= x108 (x1097 (x1573 x335))) (= (x332 1461501637330902918203684832716283019655932542975 x674) x404) (= (x1627 (+ 32 x1267)) x514)) x1156) (and (=> x1757 x1408) (=> (and (not x1757) (= x495 (= x335 x408))) (and (=> (and (and (= (> 96 x1256) x1823) (= x296 x903) (> x1553 0) (= 100 x903) (= x1515 x1651) (not (= x843 117300739)) (= x912 x1006) (= (x1097 (x1573 x408)) x1553) (= x1315 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= 599290589 x843) (< x843 961581905) (not (= x843 404098525)) (= (x775 (- x903 4)) x1256) (= x391 x404) (not (= x843 157198259)) (not (< x903 4))) x495) (and (=> (and (and (= x913 (= x391 0)) (= x106 x1515) (= x688 x1006) (= x391 x1184)) (not x1823)) (and (=> x913 x697) (=> (and (= x1456 (= 0 x1006)) (not x913)) (and (=> (and (not x1456) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x466) (= x391 x1613) (= (x832 x811) x466) (>= x466 0) (= 416 x560) (= x811 (x157 (x1573 x391) (x460 0) 0)) (= (< x466 x1515) x1785))) (and (=> (and (not x1785) (and (= x189 (< x977 x197)) (= x1006 x283) (= (x775 (- x466 x1515)) x1102) (>= x197 0) (= (x1326 x1391) x197) (<= x197 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x391 x1814) (= x1391 (x157 (x1573 x1006) (x460 0) 0)) (= (x1627 (+ x1515 x197)) x977) (= (x157 (x1573 x391) (x460 0) 0) x1262))) (and (=> (and (and (= (< x591 x1515) x481) (= x1356 x391) (= x1561 (x157 (x1573 x391) (x460 1) 0)) (= 414 x532) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x591) (= x243 (x157 (x1573 x1006) (x460 0) 0)) (= x1006 x632) (= x1080 (x157 (x1573 x912) x1561 0)) (<= 0 x591) (= x591 (x70 x1080))) (not x189)) (and (=> (and (and (= 1 x79) (= (x775 (- x591 x1515)) x1266) (= x47 1) (= x365 x391) (= x1263 (x1216 128)) (= x259 32)) (not x481)) x131) (=> x481 x697))) (=> x189 x697))) (=> x1785 x697))) (=> x1456 x697))))) (=> x1823 x697))) (=> (and (and (and x599 (and (= x1040 (> 96 x392)) (> 961581905 x979) (= x1039 100) (not (= x979 157198259)) (= 16156842317565293874272834530371880720966471053262404558597773956279093428224 x1542) (= x404 x375) (= x296 x1039) (= x392 (x775 (- x1039 4))) (= x1589 (x1097 (x1573 x1868))) (not (= 404098525 x979)) (= 599290589 x979) (= x912 x908) (> x1589 0) (= x1651 x1766) (not (> 4 x1039)) (not (= x979 117300739)))) (= (= x1868 x335) x599)) (not x495)) (and (=> x1040 x1531) (=> (and (and (= x1766 x1426) (= x1135 x375) (= x116 x908) (= (= 0 x375) x1397)) (not x1040)) (and (=> (and (not x1397) (= x1778 (= x908 0))) (and (=> (and (not x1778) (and (= x739 416) (= x375 x23) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1381) (= x769 (> x1766 x1381)) (= x1844 (x157 (x1573 x375) (x460 0) 0)) (<= 0 x1381) (= x1381 (x272 x1844)))) (and (=> (and (and (= x1457 (x570 x767)) (<= x1457 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1169 (> x1457 x1500)) (= x587 x375) (= (x157 (x1573 x375) (x460 0) 0) x590) (= (x157 (x1573 x908) (x460 0) 0) x767) (= (x775 (- x1381 x1766)) x634) (= x1500 (x1627 (+ x1766 x1457))) (= x586 x908) (<= 0 x1457)) (not x769)) (and (=> x1169 x1531) (=> (and (and (= x1034 (x157 (x1573 x375) (x460 1) 0)) (= x395 x375) (= x1453 (x485 x279)) (= x1310 (< x1453 x1766)) (= x279 (x157 (x1573 x912) x1034 0)) (<= x1453 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x908 x1142) (>= x1453 0) (= 414 x540) (= (x157 (x1573 x908) (x460 0) 0) x1570)) (not x1169)) (and (=> (and (not x1310) (and (= 1 x53) (= x458 32) (= x879 1) (= x375 x894) (= x203 (x1817 128)) (= x1684 (x775 (- x1453 x1766))))) x461) (=> x1310 x1531))))) (=> x769 x1531))) (=> x1778 x1531))) (=> x1397 x1531))))))))) (=> (and (not x1156) (and (= (> x302 0) x29) (= x302 (x835 128)))) (and (=> (not x29) x1408) (=> (and x29 (and (= x651 (x917 x919)) (= (x1149 160) x919) (= x862 (> x651 3)))) (and (=> (and (= x63 (= 1 x651)) (not x862)) (and (=> (and (not x63) (and (= (< 0 x1628) x1506) (= (x835 128) x1628))) (and (=> (and (and (= x1630 (x1149 160)) (= x1199 (< 3 x1445)) (= x1445 (x917 x1630))) x1506) (and (=> (and (= x1663 (= 2 x1445)) (not x1199)) (and (=> (and (not x1663) (and (= x1555 (x835 128)) (= x204 (> x1555 0)))) (and (=> (and x204 (and (= x981 (x1149 160)) (= x1900 (x917 x981)) (= (> x1900 3) x1578))) (and (=> x1578 x1408) (=> (and (= x255 (= 3 x1900)) (not x1578)) (and (=> (not x255) x315) (=> (and (and (= (x1627 (+ x56 4)) x150) (= (= x1269 0) x988) (= x1114 (x332 1461501637330902918203684832716283019655932542975 x1300)) (= (x1097 (x1573 x1114)) x1269) (= (x1627 (+ 32 x205)) x1836) (= (x775 (- x1714 x56)) x1462) (= (x1627 (+ x150 32)) x205) (= x1714 (x1627 (+ x150 96))) (= (x332 1461501637330902918203684832716283019655932542975 x674) x351)) x255) (and (=> x988 x1408) (=> (and (= (= x1114 x408) x1320) (not x988)) (and (=> (and (and (= x1010 (= x1114 x1868)) (and (and (= x806 16156842317565293874272834530371880720966471053262404558597773956279093428224) (= x232 (> 96 x109)) (= x433 x1462) (= 599290589 x1186) (= (x775 (- x433 4)) x109) (= x1127 x912) (= x319 (x1097 (x1573 x1868))) (= x433 100) (= x351 x1773) (not (= 157198259 x1186)) (not (= x1186 404098525)) (< 0 x319) (= x785 x1651) (> 961581905 x1186) (not (> 4 x433)) (not (= x1186 117300739))) x1010)) (not x1320)) (and (=> (and (and (= x1127 x230) (= x785 x1662) (= x662 x1773) (= (= x1773 0) x1820)) (not x232)) (and (=> x1820 x1875) (=> (and (not x1820) (= (= 0 x1127) x1528)) (and (=> (and (not x1528) (and (= x781 (x157 (x1573 x1773) (x460 0) 0)) (= (> x785 x1597) x271) (= x657 x1773) (= 416 x1182) (<= x1597 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x272 x781) x1597) (<= 0 x1597))) (and (=> (and (and (= (x775 (- x1597 x785)) x1350) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1023) (= (x157 (x1573 x1773) (x460 0) 0) x87) (= x1023 (x581 x1795)) (= (x157 (x1573 x1127) (x460 0) 0) x1795) (= x336 (x1627 (+ x1023 x785))) (= x1127 x1276) (<= 0 x1023) (= (> x1023 x336) x1403) (= x1773 x277)) (not x271)) (and (=> x1403 x1875) (=> (and (not x1403) (and (= x895 (x157 (x1573 x912) x1365 0)) (= x1248 (x157 (x1573 x1127) (x460 0) 0)) (= x1688 (> x785 x1226)) (= 414 x313) (= (x157 (x1573 x1773) (x460 1) 0) x1365) (>= x1226 0) (<= x1226 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1560 x1773) (= (x485 x895) x1226) (= x1127 x1025))) (and (=> x1688 x1875) (=> (and (not x1688) (and (= x608 x1773) (= (x75 128) x294) (= x1632 (x75 128)) (= x715 1) (= 1 x940) (= x883 (x775 (- x1226 x785))) (= x105 32))) x125))))) (=> x271 x1875))) (=> x1528 x1875))))) (=> x232 x1875))) (=> (and x1320 (and (not (= x494 117300739)) (= x54 16156842317565293874272834530371880720966471053262404558597773956279093428224) (not (= 404098525 x494)) (= x1340 x912) (not (< x1301 4)) (= x1069 x351) (= x1293 (x775 (- x1301 4))) (= (x1097 (x1573 x408)) x665) (< 0 x665) (= x1651 x765) (> 961581905 x494) (= x1301 x1462) (not (= x494 157198259)) (= (> 96 x1293) x1735) (= 599290589 x494) (= x1301 100))) (and (=> (and (not x1735) (and (= x442 x1069) (= x1340 x1899) (= (= x1069 0) x1055) (= x765 x1338))) (and (=> x1055 x574) (=> (and (= (= x1340 0) x1221) (not x1055)) (and (=> (and (and (= 416 x656) (= x1069 x58) (<= x55 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x55 0) (= x1129 (x157 (x1573 x1069) (x460 0) 0)) (= (> x765 x55) x370) (= x55 (x832 x1129))) (not x1221)) (and (=> (and (not x370) (and (= (x1681 x1316) x1722) (= x773 x1069) (= (x775 (- x55 x765)) x1806) (= x215 (> x1722 x655)) (= x771 (x157 (x1573 x1069) (x460 0) 0)) (= x655 (x1627 (+ x1722 x765))) (= (x157 (x1573 x1340) (x460 0) 0) x1316) (>= x1722 0) (= x1340 x643) (<= x1722 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (and (<= x1892 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (> x765 x1892) x639) (= x1340 x607) (= 414 x479) (<= 0 x1892) (= x596 x1069) (= x1892 (x70 x121)) (= (x157 (x1573 x912) x1851 0) x121) (= x1851 (x157 (x1573 x1069) (x460 1) 0)) (= x1530 (x157 (x1573 x1340) (x460 0) 0))) (not x215)) (and (=> x639 x574) (=> (and (not x639) (and (= 1 x1863) (= x1443 32) (= x1599 (x1859 128)) (= x761 x1069) (= x1240 (x775 (- x1892 x765))) (= (x1859 128) x1864) (= 1 x1624))) x431))) (=> x215 x574))) (=> x370 x574))) (=> x1221 x574))))) (=> x1735 x574))))))))))) (=> (not x204) x1408))) (=> (and x1663 (and (= x1468 (x1703 x1695)) (= x1695 (x157 (x1573 x409) x1151 0)) (= (x157 (x1573 x787) (x460 0) 0) x1151) (= x787 (x332 1461501637330902918203684832716283019655932542975 x1300)) (= (> x1651 x1468) x1242) (>= x1468 0) (<= x1468 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x332 1461501637330902918203684832716283019655932542975 x674) x409))) (and (=> (and (and (<= x994 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x726 (x157 (x1573 x1057) (x460 0) 0)) (>= x994 0) (= x994 (x1268 x1571)) (= x1057 (x332 1461501637330902918203684832716283019655932542975 x1300)) (= (x775 (- x1468 x1651)) x1536) (= (x332 1461501637330902918203684832716283019655932542975 x674) x1275) (= (x157 (x1573 x1275) x726 0) x520) (= x84 (x157 (x1573 x85) (x460 0) 0)) (= x1860 (< x1617 x994)) (= (x1627 (+ x1651 x994)) x1617) (= x1571 (x157 (x1573 x559) x84 0)) (= x559 (x332 1461501637330902918203684832716283019655932542975 x1749)) (= x85 (x332 1461501637330902918203684832716283019655932542975 x1300))) (not x1242)) (and (=> x1860 x1408) (=> (and (not x1860) (and (= x268 (x157 (x1573 x349) x1517 0)) (= (x332 1461501637330902918203684832716283019655932542975 x1300) x836) (= x349 (x332 1461501637330902918203684832716283019655932542975 x1749)) (= (x157 (x1573 x836) (x460 0) 0) x1517))) x1717))) (=> x1242 x1408))))) (=> x1199 x1408))) (=> (not x1506) x1408))) (=> (and x63 (and (= x185 (x332 1461501637330902918203684832716283019655932542975 x1749)) (= (x1627 (+ x1545 32)) x173) (= (x1627 (+ 4 x56)) x1545) (= x145 (= x991 0)) (= (x332 1461501637330902918203684832716283019655932542975 x1300) x1882) (= (x775 (- x794 x56)) x1564) (= (x1627 (+ x1545 64)) x794) (= (x1097 (x1573 x1882)) x991))) (and (=> x145 x1408) (=> (and (= (= x1882 x408) x1376) (not x145)) (and (=> (and (not x1376) (and (= (= x1882 x1868) x21) (and (and (= x1640 x1651) (= x500 68) (not (> 961581905 x399)) (not (= 2514000705 x399)) (not (> 4 x500)) (= x496 (> 64 x820)) (not (= x399 961581905)) (not (= 1889567281 x399)) (> x733 0) (= (x1097 (x1573 x1868)) x733) (= 76450787359836037641860180984291677749980919077056822294353438043884394381312 x1631) (= x820 (x775 (- x500 4))) (not (= 2757214935 x399)) (= x185 x163) (= x500 x1564) (= x399 2835717307)) x21))) (and (=> (and (and (= x1105 x1640) (= x1629 (= x912 0)) (= x1121 x163)) (not x496)) (and (=> x1629 x1049) (=> (and (not x1629) (= (= x163 0) x1018)) (and (=> (and (and (= x133 (x157 (x1573 x912) (x460 0) 0)) (= x1337 (x272 x133)) (= x624 416) (>= x1337 0) (= (< x1337 x1640) x878) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1337)) (not x1018)) (and (=> x878 x1049) (=> (and (and (= x273 (x1627 (+ x111 x1640))) (<= x111 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x157 (x1573 x912) (x460 0) 0) x519) (= (< x273 x111) x975) (= (x1349 x1495) x111) (= x163 x200) (= (x775 (- x1337 x1640)) x1533) (= (x157 (x1573 x163) (x460 0) 0) x1495) (<= 0 x111)) (not x878)) (and (=> (and (and (= x1130 1) (= x163 x287) (= x846 1) (= x1666 32) (= x1489 (x853 128)) (= (x157 (x1573 x163) (x460 0) 0) x1606)) (not x975)) x1281) (=> x975 x1049))))) (=> x1018 x1049))))) (=> x496 x1049))) (=> (and x1376 (and (= x1285 (x1097 (x1573 x408))) (not (= x403 2514000705)) (< 0 x1285) (not (< x1323 4)) (= x178 (< x1385 64)) (not (= x403 961581905)) (not (= 2757214935 x403)) (= 68 x1323) (not (< x403 961581905)) (= x1323 x1564) (= x403 2835717307) (= x439 76450787359836037641860180984291677749980919077056822294353438043884394381312) (= x185 x400) (= x1552 x1651) (= (x775 (- x1323 4)) x1385) (not (= 1889567281 x403)))) (and (=> (and (not x178) (and (= x124 x1552) (= (= 0 x912) x1568) (= x1659 x400))) (and (=> (and (not x1568) (= (= x400 0) x1132)) (and (=> (and (not x1132) (and (= x1739 (x832 x941)) (= x499 416) (= x941 (x157 (x1573 x912) (x460 0) 0)) (<= 0 x1739) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1739) (= (> x1552 x1739) x343))) (and (=> x343 x140) (=> (and (and (= x1165 (< x610 x367)) (= (x157 (x1573 x400) (x460 0) 0) x35) (<= 0 x367) (= x612 (x775 (- x1739 x1552))) (= x610 (x1627 (+ x367 x1552))) (= x1770 (x157 (x1573 x912) (x460 0) 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x367) (= (x1394 x35) x367) (= x1120 x400)) (not x343)) (and (=> x1165 x140) (=> (and (and (= 32 x1366) (= 1 x151) (= x1494 (x667 128)) (= x1336 (x157 (x1573 x400) (x460 0) 0)) (= 1 x1051) (= x400 x235)) (not x1165)) x1430))))) (=> x1132 x140))) (=> x1568 x140))) (=> x178 x140))))))))) (=> x862 x1408))))))) (=> x1907 x1408))))) (=> (not x577) x1408))) (=> (not x858) x1408))) (=> (not x110) x1408))))) (=> (not x1808) x840)))))
(assert (x786 x462))
(assert (= (x460 450795052) (x1573 450795052)))
(assert (= x559 (x1897 (x1573 x559))))
(assert (x786 x784))
(assert (x786 x1626))
(assert (x786 x77))
(assert (x786 x473))
(assert (x795 x1637 x503 x563 x1791))
(assert (x786 x952))
(assert (= (and x878 x9) x760))
(assert (= (x1573 1242462222) (x460 1242462222)))
(assert (= x1893 (or x1251 x1333 x17 x654 x1286)))
(assert (= (and x15 x57) x1283))
(assert (= (and x370 x1398) x1396))
(assert (x786 x705))
(assert (= (x1897 (x460 1742540299)) 1742540299))
(assert (= (and (not x232) x875) x1464))
(assert (= (x1573 1027062850) (x460 1027062850)))
(assert (= (x1897 (x460 26959946667150639794667015087019630673637144422540572481103610249216)) 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x1547 x542 x1411 x563 x1791))
(assert (= (and x34 x447) x764))
(assert (= (and (not x1412) x1382) x1005))
(assert (x1547 x884 x333 x237 x1416))
(assert (x786 x504))
(assert (x786 x1441))
(assert (= (and x357 (not x188)) x1136))
(assert (x1608 x542 (- x1411 x333)))
(assert (x170 (- x503 x1416)))
(assert (x786 x1147))
(assert (= (=> (and (= x1209 (x583 x1212)) (ite x819 x819 (= (x1772 x889 x884) x333)) (>= x348 0) (= x884 (x1693 x668)) (<= 0 x884) (= x889 (x1751 (x16 x884 x333))) (= (x278 x1726 8) x422) (= x1884 (x1627 (+ x1706 x348))) (= (x1161 x491) x1743) (<= x1743 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x1209 0) (<= x348 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x819 (= 0 x884)) (= x156 (ite (> x1743 x77) x938 x1743)) (= (x278 x1726 7) x446) (>= x1743 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x884) (= x491 (x278 x1726 5)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1209) (= (x716 x350) x348) (= (x1772 x889 1000000000000000000) x1706) (= (x278 x350 1) x1212) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x348 x1706))) (= x333 (x775 (- x1744 x1209)))) x66) x213))
(assert (x170 (- x542 x563)))
(assert (= (and x447 (not x34)) x1423))
(assert (x786 x984))
(assert (= (x1897 (x1573 x456)) x456))
(assert (x786 x508))
(assert (= (and x1418 (not x189)) x955))
(assert (x786 x1294))
(assert (= (x1573 599290589) (x460 599290589)))
(assert (x170 (- x333 x985)))
(assert (x786 x750))
(assert (x786 x1272))
(assert (x1608 x1791 (- x563 x333)))
(assert (x170 (- x542 x1416)))
(assert (x786 x216))
(assert (x786 x722))
(assert (x786 x1864))
(assert (x1547 x1637 x503 x46 x985))
(assert (= x409 (x1897 (x1573 x409))))
(assert (x786 x1773))
(assert (x1547 x1791 x563 x333 x884))
(assert (x786 x1154))
(assert (x786 x1179))
(assert (x786 x852))
(assert (x1608 x237 (- x1416 x46)))
(assert (x786 x863))
(assert (x786 x766))
(assert (x1547 x46 x985 x1416 x237))
(assert (x786 x1694))
(assert (= (x1573 3961236718) (x460 3961236718)))
(assert (x1608 x1791 (- x563 x542)))
(assert (x1547 x237 x1416 x542 x1411))
(assert (x786 x1725))
(assert (x786 x1624))
(assert (x740 x503))
(assert (x18 x1218))
(assert (x786 x197))
(assert (x170 (- x1411 x1416)))
(assert (x170 (- x503 x1791)))
(assert (x786 x1181))
(assert (= x854 (and x796 (not x1363))))
(assert (x170 (- x985 x1411)))
(assert (x786 x798))
(assert (x786 x1045))
(assert (x91 x10))
(assert (x786 x1287))
(assert (x1547 x1416 x237 x46 x985))
(assert (x786 x1140))
(assert (x786 x260))
(assert (x170 (- x1416 x542)))
(assert (x786 x547))
(assert (x170 (- x985 x503)))
(assert (x786 x1093))
(assert (x170 (- x46 x333)))
(assert (x786 x1500))
(assert (x1608 x237 (- x1416 x985)))
(assert (= x382 (=> (and (not (< x609 32)) (not (= 0 x1314)) (= x974 196) (< 0 x1890) (= x1890 (x1306 196))) x1126)))
(assert (= x1291 (and x311 (not x759))))
(assert (= x447 (and x182 x746)))
(assert (x170 (- x46 x1416)))
(assert (= (x196 160) 0))
(assert (x1465 x342 x503))
(assert (x786 x297))
(assert (x786 x826))
(assert (x786 x820))
(assert (x795 x333 x884 x503 x1637))
(assert (and (x325 32 x389) (x931 32 x389) (x317 32 x389) (= (x16 32 x389) (* x389 32)) (x696 32 x389) (x59 32 x389) (and (= (* (- x389 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x16 32 (- x389 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 32 x389) (* x389 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x16 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x389)) (= (x16 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x389 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x389 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x389 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(assert (x786 x1489))
(assert (x786 x1884))
(assert (x786 x80))
(assert (x740 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (= (and x256 (not x1320)) x1780))
(assert (x1608 x884 (- x333 x563)))
(assert (x786 x160))
(assert (x786 x439))
(assert (= x932 (and (not x215) x1841)))
(assert (x786 x1168))
(assert (x1547 x46 x985 x1791 x563))
(assert (x170 (- x333 x46)))
(assert (x91 x408))
(assert (x786 x569))
(assert (x786 x1899))
(assert (x18 x1883))
(assert (= (and x455 x465) x778))
(assert (= (x1897 (x278 x286 1)) (+ 1 (x1897 x286))))
(assert (= x1642 (and (not x1688) x407)))
(assert (x786 x53))
(assert (x170 (- x884 x985)))
(assert (x786 x1197))
(assert (= x1364 (x1573 (x1897 x1364))))
(assert (=> (<= x1277 10000) (= (x1573 x1277) (x460 x1277))))
(assert (x1547 x985 x46 x503 x1637))
(assert (x795 x1637 x503 x985 x46))
(assert (x170 x633))
(assert (= x1792 (and x1012 x972)))
(assert (= x1063 (or x1865 x191)))
(assert (= (and x824 (not x1823)) x604))
(assert (x1608 x1416 (- x237 x542)))
(assert (= x355 (and (not x1169) x962)))
(assert (x91 x1748))
(assert (= (+ 1 (x1897 x1726)) (x1897 (x278 x1726 1))))
(assert (= (and x1371 (not x1018)) x9))
(assert (x786 x981))
(assert (x786 x1836))
(assert (= x1318 (and (not x1757) x1253)))
(assert (x786 x1404))
(assert (x170 (- x542 x985)))
(assert (= 3039079375 (x1897 (x460 3039079375))))
(assert (x1547 x237 x1416 x333 x884))
(assert (= (and (not x1459) x416) x746))
(assert (x786 x380))
(assert (x786 x448))
(assert (x1608 x1411 (- x542 x985)))
(assert (x786 x217))
(assert (= (x1011 (+ (x1627 (+ 68 x417)) 96)) 0))
(assert (= 18446744073709551615 (x1897 (x460 18446744073709551615))))
(assert (x1608 x542 (- x1411 x563)))
(assert (=> (>= 10000 x456) (= (x460 x456) (x1573 x456))))
(assert (x786 x1706))
(assert (x786 x925))
(assert (x795 x503 x1637 x1416 x237))
(assert (x786 x1544))
(assert (x786 x1419))
(assert (= x1513 (and x104 x1808)))
(assert (x786 x560))
(assert (= (and x50 x1040) x948))
(assert (= (=> (and (and (= x414 (x775 (- x1211 x417))) (not (= 0 x1725)) (= x1725 (x1097 (x1573 x456))) (= (= x912 x456) x1415)) (and (and (= x414 x1446) (= x115 (x775 (- x1446 4))) x734 (= (or (and (< x115 32) (= true (<= x115 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (> x115 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x1407) (< 0 x868) (not (< x1446 4)) (= x517 244203140) (= (x1097 (x1573 x912)) x868) (= 6583703630350721090866640338677567052142505888617894577283092288194729738240 x155) (= x734 (= x67 (x1190 36))) (<= 68 x1446)) x1415)) (and (=> (and (not x1407) (= (and (= (<= x1446 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< 67 x1446)) x973)) (and (=> (not x973) x1408) (=> (and (and (= x1348 (x62 36)) (= x1459 (< 18446744073709551615 x1348))) x973) (and (=> (and (not x1459) (and (= x1339 (x1751 (* 32 x1348))) (= (x1627 (+ x1339 32)) x37) (= (< x418 128) x1038) (= x418 (x1627 (+ 128 x37))) (= (> x418 18446744073709551615) x468) (= x1496 (or x468 x1038)) (= (= 0 (ite x1496 1 0)) x182))) (and (=> (and x182 (and (= x34 (> x637 x1446)) (= (x1751 (* 160 x1348)) x705) (= x637 (x1627 (+ 68 x705))))) (and (=> x34 x1408) (=> (and (not x34) (= x1026 (< 0 x1348))) (and (=> (and x1026 (and (= (x775 (- x1446 68)) x1231) (= (or (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1231)) (< x1231 160)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1231)) x544))) (and (=> x544 x1408) (=> (and (not x544) (and (= (x1627 (+ x418 160)) x1656) (= (> x418 x1656) x815) (= x1729 (= 0 (ite x805 1 0))) (= x805 (or x815 x725)) (= (> x1656 18446744073709551615) x725))) (and (=> (not x1729) x1408) (=> (and x1729 (and (= (< x1534 4) x732) (= x1534 (x62 68)))) (and (=> (not x732) x1408) (=> (and (and (= x1622 (x332 1461501637330902918203684832716283019655932542975 x1485)) (= (= x1485 x1622) x1788) (= (x62 100) x1485)) x732) (and (=> (not x1788) x1408) (=> (and x1788 (and (= (x62 164) x1218) (= x1549 (x1627 (+ 32 x1116))) (= x525 (= x1218 x1539)) (= (x1627 (+ x418 32)) x1116) (= (x62 132) x501) (= (x332 1461501637330902918203684832716283019655932542975 x1218) x1539))) (and (=> (and x525 (and (= x228 (x1627 (+ 32 x1549))) (= (x332 1461501637330902918203684832716283019655932542975 x1176) x1189) (= (= x1189 x1176) x1412) (= (x62 196) x1176))) (and (=> (not x1412) x1408) (=> x1412 x568))) (=> (not x525) x1408))))))))))) (=> (and (not x1026) (= x56 x418)) x841))))) (=> (not x182) x1408))) (=> x1459 x1408))))) (=> x1407 x1408))) x1460))
(assert (x786 x1618))
(assert (x91 x1676))
(assert (= x1454 (=> (= x1825 x1527) x527)))
(assert (x786 x1645))
(assert (x786 x652))
(assert (x170 (- x1411 x563)))
(assert (x786 x1300))
(assert (=> (>= 10000 x1148) (= (x1573 x1148) (x460 x1148))))
(assert (x786 x1277))
(assert (x170 (- x46 x1411)))
(assert (= 1027062850 (x1897 (x460 1027062850))))
(assert (x1608 x985 (- x46 x1791)))
(assert (x786 x856))
(assert (x786 x479))
(assert (=> (>= 10000 x502) (= (x460 x502) (x1573 x502))))
(assert (= x441 (and (not x495) x1318)))
(assert (x786 x1057))
(assert (x1547 x237 x1416 x46 x985))
(assert (x786 x351))
(assert (x786 x49))
(assert (= (and x1841 x215) x1576))
(assert (= x942 (=> (= x1152 (= x812 0)) (and (=> (and (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x762) true) (< x762 32)) (> x762 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x123) (not x1152)) (and (=> x123 x1408) (=> (not x123) x315))) (=> x1152 x1408)))))
(assert (= (or x1767 x758) x1013))
(assert (x786 x1481))
(assert (x786 x1024))
(assert (x786 x1833))
(assert (x170 (- x985 x884)))
(assert (x786 x979))
(assert (x795 x333 x884 x563 x1791))
(assert (x786 x1612))
(assert (x1547 x1791 x563 x1411 x542))
(assert (x786 x1378))
(assert (= (and x1003 (not x110)) x754))
(assert (x170 (- x1411 x46)))
(assert (x795 x985 x46 x1411 x542))
(assert (x786 x562))
(assert (x91 x85))
(assert (= (x1566 x919) 0))
(assert (= (x460 80076034) (x1573 80076034)))
(assert (x786 x827))
(assert (x786 x596))
(assert (x786 x865))
(assert (x1547 x1791 x563 x503 x1637))
(assert (x786 x989))
(assert (x786 x420))
(assert (= x535 (=> (= x844 x1898) x1311)))
(assert (x795 x1416 x237 x503 x1637))
(assert (= x1175 (x1897 (x1573 x1175))))
(assert (= (or x854 x1066) x57))
(assert (x786 x454))
(assert (x786 x1846))
(assert (x1608 x563 (- x1791 x1416)))
(assert (x786 x247))
(assert (= x158 (or x1857 x430)))
(assert (x786 x1356))
(assert (= (and x443 (not x769)) x962))
(assert (x786 x756))
(assert (x1608 x333 (- x884 x503)))
(assert (x786 x1075))
(assert (= (x1897 (x460 1745213101)) 1745213101))
(assert (x170 (- x563 x46)))
(assert (x1547 x884 x333 x1411 x542))
(assert (x786 x1866))
(assert (x786 x537))
(assert (= (x1573 4137353292) (x460 4137353292)))
(assert (= x808 (x1897 (x1573 x808))))
(assert (= x1264 (=> (and (and (= x1377 (x332 1461501637330902918203684832716283019655932542975 x1197)) (> x1467 0) (= (x1425 196) x1467) (= (x1097 (x1573 x1377)) x179) (= (> x73 0) x1219) (not (= 0 x179)) (not (= 0 x898)) (not (> 32 x473))) (or (and (and (= x1314 1) (> 4294967296 x609)) x1219) (and (not x1219) (= x73 x1314)))) x382)))
(assert (= (and x1742 (not x29)) x871))
(assert (x786 x1579))
(assert (x1547 x333 x884 x1411 x542))
(assert (x786 x1431))
(assert (x1547 x46 x985 x563 x1791))
(assert (=> (<= x908 10000) (= (x1573 x908) (x460 x908))))
(assert (x786 x823))
(assert (x170 (- x333 x563)))
(assert (x786 x780))
(assert (x1608 x333 (- x884 x1791)))
(assert (x740 x1411))
(assert (x1028 x1300))
(assert (x786 x564))
(assert (x786 x1170))
(assert (x786 x1308))
(assert (x91 x1069))
(assert (x786 x1553))
(assert (= 3138304935 (x1897 (x460 3138304935))))
(assert (x795 x884 x333 x1416 x237))
(assert (x786 x861))
(assert (x786 x163))
(assert (=> (<= x1868 10000) (= (x460 x1868) (x1573 x1868))))
(assert (= x1577 (x1897 (x1573 x1577))))
(assert (x170 (- x1416 x333)))
(assert (= (x1011 (+ 64 (x1627 (+ 68 x417)))) 0))
(assert (= (and x577 x720) x1710))
(assert (=> (<= x1275 10000) (= (x460 x1275) (x1573 x1275))))
(assert (x91 x409))
(assert (x786 x494))
(assert (x786 x283))
(assert (x1547 x1637 x503 x1416 x237))
(assert (x91 x376))
(assert (x170 (- x237 x542)))
(assert (x1608 x1416 (- x237 x985)))
(assert (= (and (not x135) x729) x1342))
(assert (x786 x1519))
(assert (x786 x933))
(assert (x91 x1340))
(assert (x786 x706))
(assert (x786 x1150))
(assert (x786 x659))
(assert (x170 (- x1411 x1791)))
(assert (x786 x1051))
(assert (x786 x1438))
(assert (x786 x228))
(assert (x1608 x563 (- x1791 x46)))
(assert (x786 x1008))
(assert (and (x1591 x1197 1461501637330902918203684832716283019655932542976) (x713 x1197 1461501637330902918203684832716283019655932542976) (x1741 x1197 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1197 (+ (* 1461501637330902918203684832716283019655932542976 (x1772 x1197 1461501637330902918203684832716283019655932542976)) (x1652 x1197 1461501637330902918203684832716283019655932542976))))))
(assert (= (=> (and (= (x1627 (+ x1723 32)) x628) (= (x1751 (* x1331 32)) x1723) (= (= 0 x1331) x1002) (= x1846 (x1627 (+ x413 x628))) (not (> x1331 18446744073709551615))) (and (=> (and (= x1846 x1825) x1002) x527) (=> (and (not x1002) (and (= x1188 (x1627 (+ x413 32))) (= x1413 (x1627 (+ x1516 32))) (= (= 1 x1331) x578) (= x508 (x1627 (+ 160 x1846))) (= x1516 (x1627 (+ 32 x935))) (= x1603 (x1627 (+ x1846 32))) (= x405 (x1627 (+ x1188 32))) (= (x1627 (+ x1603 32)) x935) (= x1763 (x775 (- x1331 1))))) (and (=> (and (= x508 x1527) x578) x1454) (=> (and (not x578) (and (= (x1627 (+ 32 x177)) x1296) (= (= x1763 1) x102) (= (x1627 (+ x1296 32)) x757) (= (x1627 (+ x508 32)) x177) (= x1660 (x1627 (+ x508 160))) (= x358 (x1627 (+ x757 32))))) (and (=> (and x102 (= x1660 x1527)) x1454) (=> (not x102) x1592))))))) x1122))
(assert (x1608 x542 (- x1411 x1416)))
(assert (x786 x1413))
(assert (= x728 (or x1642 x1414)))
(assert (x1547 x542 x1411 x503 x1637))
(assert (=> (<= x292 10000) (= (x460 x292) (x1573 x292))))
(assert (x786 x117))
(assert (x786 x1549))
(assert (= (and x1359 (not x1506)) x1210))
(assert (= x104 (or x1162 x1428)))
(assert (= (x1573 26959946667150639794667015087019630673637144422540572481103610249216) (x460 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (and (x1591 x674 1461501637330902918203684832716283019655932542976) (x713 x674 1461501637330902918203684832716283019655932542976) (x1741 x674 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x674 (+ (* 1461501637330902918203684832716283019655932542976 (x1772 x674 1461501637330902918203684832716283019655932542976)) (x1652 x674 1461501637330902918203684832716283019655932542976))))))
(assert (x1547 x46 x985 x503 x1637))
(assert (x1547 x46 x985 x333 x884))
(assert (x198 x1485))
(assert (= (x1897 (x1573 x1868)) x1868))
(assert (x786 x360))
(assert (x786 x356))
(assert (x1547 x1637 x503 x563 x1791))
(assert (x91 x1404))
(assert (= x347 (and x1464 x1820)))
(assert (= x375 (x1897 (x1573 x375))))
(assert (x786 x1186))
(assert (= 0 (x1011 (+ (x1627 (+ 68 x417)) 32))))
(assert (=> (<= x1748 10000) (= (x1573 x1748) (x460 x1748))))
(assert (= x1742 (and (not x1156) x1484)))
(assert (x91 x928))
(assert (x786 x1622))
(assert (x786 x953))
(assert (x1547 x333 x884 x563 x1791))
(assert (= (x1573 4085545785) (x460 4085545785)))
(assert (= (x460 1896758387) (x1573 1896758387)))
(assert (x1608 x237 (- x1416 x884)))
(assert (x786 x1749))
(assert (x786 x1551))
(assert (= x818 (and x1107 (not x128))))
(assert (x786 x1644))
(assert (x786 x607))
(assert (= x1799 (or x1679 x248)))
(assert (x786 x1381))
(assert (and (x1591 x1485 1461501637330902918203684832716283019655932542976) (x713 x1485 1461501637330902918203684832716283019655932542976) (x1741 x1485 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1485 (+ (* 1461501637330902918203684832716283019655932542976 (x1772 x1485 1461501637330902918203684832716283019655932542976)) (x1652 x1485 1461501637330902918203684832716283019655932542976))))))
(assert (x1547 x503 x1637 x884 x333))
(assert (x786 x108))
(assert (x786 x605))
(assert (= x512 (and x1513 (not x870))))
(assert (x786 x678))
(assert (= (=> (and (and (= (x1627 (+ x1612 x885)) x184) (= x80 x184) (not (>= (+ x885 x1612) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (not (= x849 0)) (not (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1154) true) (< x1154 32)) (> x1154 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1612 (x472 128))) (and (>= 255 x1372) (<= 0 x660) (= true x645) (= (x1627 (+ 32 x1523)) x1118) (<= 0 x1203) (= 85603218 x545) (= x310 2455663379) (= x1330 1242462222) (= x52 x1355) (= x1384 x891) (= true x1708) (= x1746 x389) (>= 1461501637330902918203684832716283019655932542975 x692) (= x1024 1001385071) (= 1001385071 x675) (= x183 x1421) (= x938 x77) (= x658 x1088) (= x629 x389) (= x192 (x1097 (x1573 x1644))) (= x100 1001385071) (= (= x1856 1) x262) (= x1400 x1493) (= false x1228) (= x1671 1001385071) (= x1794 164) (= x945 false) (> 1461501637330902918203684832716283019655932542976 x49) (<= 0 x1771) (= x949 1001385071) (not (= 928407353 x888)) (= (x1751 (- (x1627 (+ (x1751 (* 32 x1621)) 32)) 32)) x427) (< 0 x192) (= x1908 x1759) (not (< x107 x1178)) (= x530 (= x360 x298)) (= (ite x891 1 0) x1322) (= 1001385071 x1237) (= x1203 x202) (= x523 4085545785) (= x817 x1683) (= 1001385071 x747) (= x1522 1027062850) (= x1322 x1345) (= (x775 (- x107 4)) x1168) (= x939 x454) (= (= x922 x49) x1048) (= x723 1001385071) x262 (= x1284 (= x788 (x1751 (* 32 x633)))) (= x1431 x202) (= x619 false) x618 (= 2992780654 x1346) (= x1567 x1400) (= (x1627 (+ 164 x1610)) x1178) (= x1737 false) (= x126 1520650183) (= false x558) (< x888 1520650183) x530 (= x1819 (= x1014 x1824)) (= x1610 (x1751 (* 32 x1061))) (= false x743) (= 0 x224) (= x706 x536) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1168) (and (< x1168 128) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1168))))) (= x1769 false) (= x1294 x1544) (= x1595 false) (= x1669 x1894) x1451 (= x469 (= 1 x629)) (= 1001385071 x1537) (= false x1354) (= true x1016) (= x1410 3138304935) (= x679 x1452) (= x1249 (= x1112 x1759)) (= x891 x538) (= 1001385071 x1839) (= x938 x1448) (= (ite x1202 1 0) x1345) x1819 (< x888 2290148746) (= (= x1421 0) x618) (= x1170 80076034) (= x1594 false) (= (ite x891 1 0) x83) (= (x1627 (+ 32 x223)) x914) (= x633 x1856) (= x1134 x1355) (= false x290) (= x297 x1046) (>= 1461501637330902918203684832716283019655932542975 x1112) (= (x1834 0) x49) (= (x1627 (+ 32 x1118)) x223) (= (= x1400 (x1751 (* 32 x389))) x1451) (= x1730 1) (<= 0 x90) (= x666 (+ x1683 x25)) (= x1891 false) (= x1429 x146) (= 1 x1604) (= x1134 x692) (= x1677 x536) (= x411 x692) (= x454 x922) (= (x1627 (+ (x1751 (* 32 x1621)) 36)) x1523) (= x1526 false) (= x1738 x1027) (= x582 false) (not (> x1061 18446744073709551615)) (= x1635 true) (= 1001385071 x699) (= x281 false) (= x1685 x984) (= x822 0) (= x1621 x389) (and (= true (<= x107 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< 163 x107)) (= x52 x1112) (= x1759 x90) (= x377 false) (= x107 (x1627 (+ x914 32))) (= x1355 x1760) (not (> 928407353 x888)) (= false x1716) (= (x22 0) x1824) x1048 (= true x1344) (<= 0 x1372) (= (x1208 132) x1061) (>= 1461501637330902918203684832716283019655932542975 x1771) (= 0 x1677) (>= 1461501637330902918203684832716283019655932542975 x660) (= x1419 0) (= 1001385071 x888) (not (< x107 4)) (= x1112 x369) (= (+ x1429 x1738) x25) x1284 (= x1202 (not x1849)) (= x817 x80) (= true x1334) (= x1322 x1473) (= x776 x154) (= x1014 x297) (= x1431 x741) (>= 1461501637330902918203684832716283019655932542975 x90) (= true x142) (<= x1203 1461501637330902918203684832716283019655932542975) (= x1657 true) (= true x518) (= x1787 x633) (= (= 0 x1322) x1849) (= false x1862) (= true x13) x469 (= x788 x1832))) (and (=> (and (not x1249) (and (and (= x1012 (> x989 0)) (= (x1097 (x1573 x1748)) x217) (= (x1520 (x460 36) (x460 32) (x1573 x982) (x1573 (x361 x1367 224)) 0) x1364) (= x1367 (x1751 (* 26959946667150639794667015087019630673637144422540572481103610249216 x888))) (= x1748 (x332 1461501637330902918203684832716283019655932542975 x1197)) (not (= x217 0))) (or (and (not x1012) (= x1438 x989)) (and x1012 (and (> 4294967296 x1270) (= 1 x1438)))))) x1022) (=> (and (= 128 x974) x1249) x1126))) x1076))
(assert (x786 x928))
(assert (= (x1897 (x460 928407353)) 928407353))
(assert (x786 x1892))
(assert (x170 (- x884 x1791)))
(assert (= (x1897 (x460 2835717307)) 2835717307))
(assert (x170 (- x884 x1411)))
(assert (= (x1897 (x460 3921506749)) 3921506749))
(assert (= x74 (and x328 (not x19))))
(assert (= (x460 1461501637330902918203684832716283019655932542975) (x1573 1461501637330902918203684832716283019655932542975)))
(assert (x786 x1307))
(assert (=> (<= x742 10000) (= (x1573 x742) (x460 x742))))
(assert (x786 x1655))
(assert (x1608 x46 (- x985 x237)))
(assert (x1547 x1411 x542 x1637 x503))
(assert (not x930))
(assert (= x436 (and x8 x1456)))
(assert (x786 x375))
(assert (x170 (- x46 x503)))
(assert (x1547 x884 x333 x542 x1411))
(assert (= (and (not x1629) x834) x1371))
(assert (= (x1897 (x460 4294967296)) 4294967296))
(assert (and (x1591 x1368 1461501637330902918203684832716283019655932542976) (x713 x1368 1461501637330902918203684832716283019655932542976) (x1741 x1368 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1368 (+ (* 1461501637330902918203684832716283019655932542976 (x1772 x1368 1461501637330902918203684832716283019655932542976)) (x1652 x1368 1461501637330902918203684832716283019655932542976))))))
(assert (= (x1897 (x278 x668 3)) (+ 3 (x1897 x668))))
(assert (=> (<= x808 10000) (= (x460 x808) (x1573 x808))))
(assert (x786 x165))
(assert (x786 x936))
(assert (= x553 (or x1395 x533)))
(assert (= (and x824 x1823) x1800))
(assert (x1608 x542 (- x1411 x1791)))
(assert (x1547 x46 x985 x542 x1411))
(assert (x786 x259))
(assert (x786 x1366))
(assert (x740 x1525))
(assert (= (and x1479 (not x924)) x114))
(assert (x786 x502))
(assert (= x1672 (and x1079 (not x1407))))
(assert (x786 x1217))
(assert (= (and x639 x932) x463))
(assert (x786 x327))
(assert (x1465 x167 x1525))
(assert (= x700 (and x1663 x768)))
(assert (= (x1573 3921506749) (x460 3921506749)))
(assert (x786 x1146))
(assert (x170 (- x237 x503)))
(assert (x170 (- x985 x1791)))
(assert (x786 x428))
(assert (x786 x612))
(assert (x91 x1127))
(assert (x1608 x1416 (- x237 x503)))
(assert (x786 x1908))
(assert (x1028 x1347))
(assert (=> (>= 10000 x978) (= (x460 x978) (x1573 x978))))
(assert (x488 x226))
(assert (x1547 x237 x1416 x1637 x503))
(assert (x786 x367))
(assert (x786 x1133))
(assert (x1608 x333 (- x884 x563)))
(assert (x786 x1872))
(assert (x1547 x1791 x563 x542 x1411))
(assert (x786 x116))
(assert (= (=> (and (or (not x641) x641) (= (= 0 x1042) x641)) x1678) x71))
(assert (x170 (- x1637 x1411)))
(assert (= (x460 115242692596306546229572752729822789716416415832763348928132244437937602691072) (x1573 115242692596306546229572752729822789716416415832763348928132244437937602691072)))
(assert (= (and x1735 x1690) x600))
(assert (x786 x1243))
(assert (= x671 (=> (and (= (x1562 x239) x774) (= (x1772 x342 1000000000000000000) x1047) (not (>= (+ x774 x1047) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (= (x1693 x1503) x503) (= (x1751 (x16 x503 x1637)) x342) (= x1579 (x1558 x1761)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1579) (= (x775 (- x855 x1579)) x1637) (= x960 x1206) (<= 0 x503) (>= x774 0) (= x960 (x1627 (+ x774 x1047))) (= x1761 (x278 x239 1)) (<= x503 115792089237316195423570985008687907853269984665640564039457584007913129639935) (ite x866 x866 (= (x1772 x342 x503) x1637)) (= x866 (= 0 x503)) (<= 0 x1579) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x774)) x1427)))
(assert (= x1333 (and x1165 x1074)))
(assert (x786 x1293))
(assert (x786 x914))
(assert (x1547 x1411 x542 x1791 x563))
(assert (=> (<= x1773 10000) (= (x1573 x1773) (x460 x1773))))
(assert (x170 (- x1416 x1791)))
(assert (= x1255 (and x1229 x114)))
(assert (x1547 x237 x1416 x503 x1637))
(assert (=> (<= x408 10000) (= (x1573 x408) (x460 x408))))
(assert (= (x1897 (x460 1000000000000000000)) 1000000000000000000))
(assert (x786 x471))
(assert (x786 x885))
(assert (= x311 (and x424 (not x169))))
(assert (x786 x1324))
(assert (x170 (- x46 x563)))
(assert (x786 x601))
(assert (x786 x672))
(assert (x786 x1068))
(assert (x786 x273))
(assert (x1547 x884 x333 x1791 x563))
(assert (= (and (not x218) x1514) x449))
(assert (x786 x1686))
(assert (= (x1897 (x278 x393 1)) (+ (x1897 x393) 1)))
(assert (x786 x517))
(assert (x786 x154))
(assert (x786 x1218))
(assert (= (and x495 x1318) x824))
(assert (x170 (- x237 x1637)))
(assert (x786 x897))
(assert (x786 x296))
(assert (= x476 (and (not x178) x1305)))
(assert (x91 x809))
(assert (x91 x391))
(assert (= (and x604 x913) x1215))
(assert (x786 x923))
(assert (x170 (- x542 x884)))
(assert (x170 (- x563 x1637)))
(assert (x786 x352))
(assert (x786 x1360))
(assert (= (x460 157198259) (x1573 157198259)))
(assert (x786 x1188))
(assert (= x758 (and (not x96) x280)))
(assert (x786 x614))
(assert (x786 x1446))
(assert (x786 x629))
(assert (x786 x991))
(assert (= 2514000705 (x1897 (x460 2514000705))))
(assert (= (x1557 x471) 0))
(assert (x1547 x503 x1637 x333 x884))
(assert (x786 x970))
(assert (x786 x584))
(assert (x786 x1536))
(assert (x1608 x1637 (- x503 x985)))
(assert (x1608 x542 (- x1411 x1637)))
(assert (x91 x384))
(assert (x786 x1346))
(assert (x786 x411))
(assert (x170 (- x237 x884)))
(assert (= x717 (and x497 (not x858))))
(assert (= x103 (=> (and (= x363 (= x1008 0)) (or (not x363) x363)) x1889)))
(assert (= (or (and x1128 (not x1585)) x1475) x1675))
(assert (= (+ 8 (x1897 x623)) (x1897 (x278 x623 8))))
(assert (= (and x1091 (not x544)) x1740))
(assert (x91 x163))
(assert (x170 (- x985 x1416)))
(assert (x786 x1029))
(assert (= (=> (= x1008 1) x103) x840))
(assert (x91 x1486))
(assert (= (=> (and (<= x428 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x563) (ite x1870 x1870 (= (x1772 x546 x563) x1791)) (>= x687 0) (= x867 (x1772 x546 1000000000000000000)) (= (x775 (- x1754 x428)) x1791) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x687) (= (x1627 (+ x867 x687)) x683) (>= x428 0) (= x563 (x1693 x1745)) (= x1406 (x278 x134 1)) (= (= 0 x563) x1870) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x687 x867))) (= x1598 x683) (= x687 (x716 x134)) (>= x563 0) (= x428 (x583 x1406)) (= (x1751 (x16 x563 x1791)) x546)) x905) x752))
(assert (x1608 x1411 (- x542 x1637)))
(assert (x786 x1676))
(assert (x91 x836))
(assert (x170 x237))
(assert (x198 x1749))
(assert (x786 x1340))
(assert (= x1114 (x1897 (x1573 x1114))))
(assert (x786 x348))
(assert (= 0 (x1667 x1093)))
(assert (= x412 (and (not x639) x932)))
(assert (x786 x556))
(assert (= x484 (and x876 x594)))
(assert (= x1574 (and x1740 x1729)))
(assert (= x140 (=> (and (= 0 x1051) (= x1366 x475)) x1430)))
(assert (x1608 x1791 (- x563 x503)))
(assert (x91 x195))
(assert (= (and x330 x72) x212))
(assert (x1547 x237 x1416 x563 x1791))
(assert (= x474 (and x1062 x82)))
(assert (= (x1897 (x460 1461501637330902918203684832716283019655932542976)) 1461501637330902918203684832716283019655932542976))
(assert (x786 x1533))
(assert (x786 x1502))
(assert (x18 x1300))
(assert (x786 x1527))
(assert (x786 x691))
(assert (= x391 (x1897 (x1573 x391))))
(assert (= (x1559 x926) 0))
(assert (x786 x721))
(assert (= (=> (and (< 0 x380) (= (x1627 (+ 32 x974)) x1873) (= (x320 x413) x1789) (= x378 (x1077 x974)) (= (x1627 (+ 32 x852)) x1847) (= (x332 1461501637330902918203684832716283019655932542975 x1261) x1434) (= x1159 (x1627 (+ x1825 32))) (= x380 (x89 x253)) (= (x149 x1873) x1261) (= (x1627 (+ x413 32)) x1409) (= (not (> x1331 1)) x309) (> x1789 0) (< 0 x378) (= (x1627 (+ 32 x1847)) x1099) (= x852 (x1627 (+ x1159 32))) (= (x669 x1797) x992) (= (x1627 (+ x1825 160)) x529) (= (x1627 (+ 32 x253)) x1797)) (and x309 (=> (= x417 x529) x1223))) x1143))
(assert (= (x1897 (x1573 x982)) x982))
(assert (x786 x67))
(assert (x786 x153))
(assert (= (=> (= x1565 (not (< 1 x1061))) (and x1565 (=> (= x1331 x1898) x1122))) x1311))
(assert (x786 x1339))
(assert (= (and x40 x1788) x642))
(assert (x786 x46))
(assert (x786 x1617))
(assert (x1028 x1261))
(assert (x170 (- x542 x1791)))
(assert (x795 x1791 x563 x1411 x542))
(assert (x1547 x1411 x542 x503 x1637))
(assert (x170 (- x333 x503)))
(assert (x786 x513))
(assert (x786 x185))
(assert (= (and x12 x486) x1702))
(assert (x786 x32))
(assert (x170 x1331))
(assert (x786 x195))
(assert (= (and x1031 x162) x1483))
(assert (x170 (- x1411 x503)))
(assert (x1608 x1791 (- x563 x46)))
(assert (x786 x92))
(assert (x786 x1274))
(assert (= (+ 1 (x1897 x401)) (x1897 (x278 x401 1))))
(assert (x1028 x1749))
(assert (x786 x362))
(assert (x786 x1375))
(assert (=> (>= 10000 x400) (= (x460 x400) (x1573 x400))))
(assert (and (x325 32 x1331) (x931 32 x1331) (x317 32 x1331) (= (x16 32 x1331) (* x1331 32)) (x696 32 x1331) (x59 32 x1331) (and (= (* (- x1331 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (x16 32 (- x1331 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 32 x1331) (* x1331 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x16 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1331)) (= (x16 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1331 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x1331 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1331 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(assert (x786 x106))
(assert (x786 x1053))
(assert (x786 x665))
(assert (x786 x1335))
(assert (= (+ (x1897 x1386) 1) (x1897 (x278 x1386 1))))
(assert (x170 (- x1416 x503)))
(assert (= x1601 (and x641 x1904)))
(assert (and (x325 26959946667150639794667015087019630673637144422540572481103610249216 x888) (x931 26959946667150639794667015087019630673637144422540572481103610249216 x888) (x317 26959946667150639794667015087019630673637144422540572481103610249216 x888) (= (x16 26959946667150639794667015087019630673637144422540572481103610249216 x888) (* x888 26959946667150639794667015087019630673637144422540572481103610249216)) (x696 26959946667150639794667015087019630673637144422540572481103610249216 x888) (x59 26959946667150639794667015087019630673637144422540572481103610249216 x888) (and (= (* (- x888 115792089237316195423570985008687907853269984665640564039457584007913129639936) 26959946667150639794667015087019630673637144422540572481103610249216) (x16 26959946667150639794667015087019630673637144422540572481103610249216 (- x888 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (- (* 26959946667150639794667015087019630673637144422540572481103610249216 x888) (* x888 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x16 (- 115792089210356248756420345214020892766250353992003419616917011526809519390720) x888)) (= (x16 (- 115792089210356248756420345214020892766250353992003419616917011526809519390720) (- x888 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x888 115792089237316195423570985008687907853269984665640564039457584007913129639936) 26959946667150639794667015087019630673637144422540572481103610249216) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x888 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))))
(assert (= 117300739 (x1897 (x460 117300739))))
(assert (x1608 x503 (- x1637 x542)))
(assert (x1547 x503 x1637 x237 x1416))
(assert (x18 x1176))
(assert (= x254 true))
(assert (x795 x237 x1416 x563 x1791))
(assert (= x1057 (x1897 (x1573 x1057))))
(assert (x786 x718))
(assert (= x957 (and x201 (not x1152))))
(assert (x18 x1368))
(assert (= x335 (x1897 (x1573 x335))))
(assert (x786 x1159))
(assert (x786 x493))
(assert (= x702 (and x1055 x437)))
(assert (x786 x1631))
(assert (x170 (- x237 x985)))
(assert (= (and x209 (not x21)) x1100))
(assert (x1608 x985 (- x46 x237)))
(assert (x786 x613))
(assert (x1547 x1791 x563 x985 x46))
(assert (x786 x1689))
(assert (x786 x1033))
(assert (= (and x1291 (not x515)) x455))
(assert (x795 x563 x1791 x1411 x542))
(assert (x786 x1178))
(assert (x170 x1061))
(assert (x795 x884 x333 x985 x46))
(assert (x170 (- x1791 x237)))
(assert (x170 (- x1637 x542)))
(assert (x786 x237))
(assert (= x766 (x1897 (x1573 x766))))
(assert (= (x1573 117300739) (x460 117300739)))
(assert (= x1119 (and (not x973) x1672)))
(assert (x786 x1522))
(assert (x170 x1791))
(assert (= x1572 (and x423 x1219)))
(assert (= x1643 (and x1081 (not x1415))))
(assert (x1465 x1104 x1481))
(assert (x786 x1854))
(assert (= (x460 2759752456) (x1573 2759752456)))
(assert (x198 x626))
(assert (x795 x542 x1411 x503 x1637))
(assert (x1608 x333 (- x884 x1416)))
(assert (= (and x598 (not x1756)) x222))
(assert (x786 x1848))
(assert (x786 x346))
(assert (= (or x1584 (and (not x736) x181)) x1479))
(assert (= (x1897 (x460 16156842317565293874272834530371880720966471053262404558597773956279093428224)) 16156842317565293874272834530371880720966471053262404558597773956279093428224))
(assert (x198 x1180))
(assert (x786 x1505))
(assert (= x314 (and x834 x1629)))
(assert (= (and (not x1711) x1437) x326))
(assert (= x1037 (and (not x1242) x700)))
(assert (= (x1732 x1827) 0))
(assert (=> (<= x346 10000) (= (x1573 x346) (x460 x346))))
(assert (x786 x1648))
(assert (x1547 x1637 x503 x884 x333))
(assert (= (x460 404098525) (x1573 404098525)))
(assert (x786 x542))
(assert (x1608 x884 (- x333 x1416)))
(assert (x786 x978))
(assert (x786 x107))
(assert (x786 x1722))
(assert (x170 (- x542 x1637)))
(assert (x795 x333 x884 x1411 x542))
(assert (= x946 (and x515 x1291)))
(assert (x1547 x985 x46 x237 x1416))
(assert (= x809 (x1897 (x1573 x809))))
(assert (= (and (not x1785) x1131) x1418))
(assert (= (x1566 x1630) 0))
(assert (x170 (- x1791 x1416)))
(assert (x1547 x1416 x237 x503 x1637))
(assert (x786 x939))
(assert (x91 x375))
(assert (x170 (- x46 x237)))
(assert (=> (<= x836 10000) (= (x1573 x836) (x460 x836))))
(assert (x1547 x503 x1637 x46 x985))
(assert (x1608 x884 (- x333 x503)))
(assert (= (and (not x63) x621) x1359))
(assert (= (x1897 (x460 4085545785)) 4085545785))
(assert (x786 x1211))
(assert (x786 x947))
(assert (x91 x1114))
(assert (= x201 (or x478 (and x677 (not x438)))))
(assert (= x266 (and x1371 x1018)))
(assert (= 157198259 (x1897 (x460 157198259))))
(assert (= 70508962019145425934951811999677760319478833095128838543097651878529435959296 (x1897 (x460 70508962019145425934951811999677760319478833095128838543097651878529435959296))))
(assert (x170 (- x1791 x333)))
(assert (x786 x898))
(assert (x18 x1749))
(assert (= x1588 (and x437 (not x1055))))
(assert (x786 x1486))
(assert (x786 x1839))
(assert (x786 x1450))
(assert (= 1461501637330902918203684832716283019655932542975 (x1897 (x460 1461501637330902918203684832716283019655932542975))))
(assert (x1547 x503 x1637 x1416 x237))
(assert (= (x1573 1000000000000000000) (x460 1000000000000000000)))
(assert (=> (>= 10000 x1114) (= (x1573 x1114) (x460 x1114))))
(assert (x786 x358))
(assert (= (and x50 (not x1040)) x246))
(assert (x786 x342))
(assert (x786 x1630))
(assert (x786 x675))
(assert (x1608 x1416 (- x237 x1791)))
(assert (x786 x1006))
(assert (x786 x1004))
(assert (x786 x1163))
(assert (x1608 x503 (- x1637 x46)))
(assert (x786 x846))
(assert (= x1790 (or x219 x1328)))
(assert (x198 x1347))
(assert (= (and x232 x875) x1289))
(assert (x786 x1707))
(assert (x1608 x1637 (- x503 x563)))
(assert (x786 x624))
(assert (x170 (- x985 x542)))
(assert (=> (<= x375 10000) (= (x1573 x375) (x460 x375))))
(assert (x170 (- x1791 x1637)))
(assert (x795 x237 x1416 x985 x46))
(assert (= x934 (and x29 x1742)))
(assert (=> (>= 10000 x1577) (= (x460 x1577) (x1573 x1577))))
(assert (x786 x1868))
(assert (= x1712 (or x1546 x212)))
(assert (=> (<= x1676 10000) (= (x460 x1676) (x1573 x1676))))
(assert (x786 x1348))
(assert (x786 x610))
(assert (x786 x435))
(assert (= (x460 4294967296) (x1573 4294967296)))
(assert (x603 x260))
(assert (x786 x238))
(assert (x786 x1120))
(assert (= (and x60 x193) x1876))
(assert (x170 (- x542 x46)))
(assert (= 0 (x1559 x1873)))
(assert (x786 x458))
(assert (x786 x1167))
(assert (x786 x1758))
(assert (= (and (not x578) x956) x831))
(assert (x1608 x46 (- x985 x1416)))
(assert (x786 x1139))
(assert (= x1709 (and x663 (not x1132))))
(assert (x91 x937))
(assert (x786 x1050))
(assert (x170 (- x1637 x1791)))
(assert (x786 x1118))
(assert (x786 x609))
(assert (x170 (- x46 x1791)))
(assert (= (and x1463 x1002) x120))
(assert (x786 x427))
(assert (x1547 x1637 x503 x1411 x542))
(assert (x786 x223))
(assert (= x376 (x1897 (x1573 x376))))
(assert (x786 x1443))
(assert (x91 x1773))
(assert (x786 x220))
(assert (= x1325 (and x455 (not x465))))
(assert (= (and x1593 x975) x627))
(assert (= (x1897 (x278 x737 1)) (+ (x1897 x737) 1)))
(assert (x786 x1042))
(assert (x786 x1338))
(assert (= (or x1136 x450) x1569))
(assert (x91 x1541))
(assert (= (or x1124 x1283) x1081))
(assert (= x1889 (=> (and (= false x539) (not (= x1008 0)) (= x877 false)) x1235)))
(assert (x786 x403))
(assert (x1547 x1791 x563 x237 x1416))
(assert (=> (<= x1404 10000) (= (x1573 x1404) (x460 x1404))))
(assert (x786 x1105))
(assert (= (and x548 x1507) x6))
(assert (x786 x1112))
(assert (x786 x1270))
(assert (= x838 (and x254 (not x1145))))
(assert (=> (>= 10000 x376) (= (x460 x376) (x1573 x376))))
(assert (x1547 x1637 x503 x333 x884))
(assert (x786 x959))
(assert (x786 x1789))
(assert (x786 x1746))
(assert (= (x460 76450787359836037641860180984291677749980919077056822294353438043884394381312) (x1573 76450787359836037641860180984291677749980919077056822294353438043884394381312)))
(assert (x786 x1659))
(assert (x786 x1518))
(assert (x786 x359))
(assert (x786 x794))
(assert (= x1022 (=> (and (and (= (x332 1461501637330902918203684832716283019655932542975 x1368) x1277) (= (> x1343 0) x193) (not (= x1440 0)) (not (= 0 x1438)) (= x1440 (x1097 (x1573 x1277))) (= x1368 (x1535 196)) (not (< x1270 32))) (or (and (not x193) (= x1343 x898)) (and (and (= x898 1) (< x473 4294967296)) x193))) x1264)))
(assert (x786 x761))
(assert (= 0 (x1566 x1728)))
(assert (x170 x1411))
(assert (= (and x96 x280) x1767))
(assert (= (x1897 (x460 1520650183)) 1520650183))
(assert (x1608 x1637 (- x503 x46)))
(assert (x786 x1166))
(assert (x1608 x985 (- x46 x884)))
(assert (= (x1897 (x1573 x640)) x640))
(assert (x786 x977))
(assert (= (and x1013 (not x719)) x1328))
(assert (x1608 x1416 (- x237 x884)))
(assert (x795 x46 x985 x503 x1637))
(assert (and (x1591 x1218 1461501637330902918203684832716283019655932542976) (x713 x1218 1461501637330902918203684832716283019655932542976) (x1741 x1218 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1218 (+ (* 1461501637330902918203684832716283019655932542976 (x1772 x1218 1461501637330902918203684832716283019655932542976)) (x1652 x1218 1461501637330902918203684832716283019655932542976))))))
(assert (x786 x1290))
(assert (= x406 (and x1407 x1079)))
(assert (x786 x1256))
(assert (x1608 x884 x333))
(assert (= 706499883 (x1897 (x460 706499883))))
(assert (x786 x146))
(assert (= (x1897 (x1573 x400)) x400))
(assert (x91 x1882))
(assert (x170 (- x333 x1637)))
(assert (= (+ 1 (x1897 x1503)) (x1897 (x278 x1503 1))))
(assert (x786 x985))
(assert (x786 x903))
(assert (x795 x503 x1637 x1411 x542))
(assert (x786 x563))
(assert (x170 (- x1411 x884)))
(assert (x786 x816))
(assert (x786 x378))
(assert (x786 x257))
(assert (x170 (- x1637 x884)))
(assert (x1608 x1791 (- x563 x1411)))
(assert (x795 x1411 x542 x884 x333))
(assert (x786 x1345))
(assert (x786 x1523))
(assert (= x527 (=> (= x1363 (> x1331 0)) (and (=> (and (= x417 x1825) (not x1363)) x1223) (=> x1363 x1143)))))
(assert (x786 x203))
(assert (=> (<= x1377 10000) (= (x460 x1377) (x1573 x1377))))
(assert (x786 x651))
(assert (= x373 (and x246 (not x1397))))
(assert (= x1521 (or x1435 x807)))
(assert (x786 x507))
(assert (= (=> (and (and (= (x1627 (+ x1880 32)) x562) (= x96 (= x1061 0)) (<= 0 x1217) (not (= x1217 2)) (= x253 (x1627 (+ x974 x562))) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1217) (= (x1751 (* x1061 32)) x1880) (= x1815 (ite (> x1473 0) 2 1))) (or x96 (and (and (= (x1751 (* x1061 32)) x1163) (= x265 (x1627 (+ 32 x974)))) (not x96)))) x1801) x1126))
(assert (x1547 x1416 x237 x542 x1411))
(assert (x170 (- x237 x563)))
(assert (x786 x1104))
(assert (= (or x457 x1792) x60))
(assert (x786 x10))
(assert (x786 x849))
(assert (= (x1011 (+ 128 (x1627 (+ 68 x417)))) 0))
(assert (x786 x1577))
(assert (x786 x1806))
(assert (x795 x1416 x237 x563 x1791))
(assert (x786 x1814))
(assert (x786 x1664))
(assert (x786 x1206))
(assert (= (x460 3138304935) (x1573 3138304935)))
(assert (= x195 (x1897 (x1573 x195))))
(assert (x91 x400))
(assert (x18 1461501637330902918203684832716283019655932542975))
(assert (= (and x700 x1242) x690))
(assert (= x1200 (and (not x94) x1222)))
(assert (= 3248092328 (x1897 (x460 3248092328))))
(assert (x786 x974))
(assert (x1608 x237 (- x1416 x1637)))
(assert (x198 x1300))
(assert (x786 x86))
(assert (= x214 (and x271 x206)))
(assert (x786 x1541))
(assert (x786 x1798))
(assert (x795 x46 x985 x1416 x237))
(assert (x786 x567))
(assert (= (+ 1 (x1897 x800)) (x1897 (x278 x800 1))))
(assert (x1608 x1637 (- x503 x333)))
(assert (= x443 (and x373 (not x1778))))
(assert (x786 x1674))
(assert (= x211 (=> (and (or x438 (not x438)) (= x438 (= 0 x812))) x942)))
(assert (x170 (- x563 x884)))
(assert (= x1049 (=> (and (= x1130 0) (= x1666 x475)) x1281)))
(assert (x1547 x333 x884 x1791 x563))
(assert (x795 x1416 x237 x884 x333))
(assert (= (and x838 (not x27)) x168))
(assert (x1547 x884 x333 x563 x1791))
(assert (x170 (- x237 x1411)))
(assert (x1608 x333 (- x884 x985)))
(assert (= x729 (and x1302 (not x1424))))
(assert (x786 x1493))
(assert (x786 x806))
(assert (x786 x1352))
(assert (= x1195 (and x1169 x962)))
(assert (x786 x230))
(assert (x786 x1417))
(assert (= x17 (and x476 x1568)))
(assert (x170 x1416))
(assert (x786 x976))
(assert (= x1719 (and x6 (not x398))))
(assert (x786 x1673))
(assert (x786 x822))
(assert (x786 x1890))
(assert (x786 x1728))
(assert (x786 x869))
(assert (x786 x940))
(assert (x170 160))
(assert (= (x460 3248092328) (x1573 3248092328)))
(assert (x1547 x563 x1791 x884 x333))
(assert (= (x1813 x1488) 0))
(assert (= x364 (and x1710 x1575)))
(assert (x786 x333))
(assert (x786 x365))
(assert (x1465 x986 x1411))
(assert (= x568 (=> (and (= (x1627 (+ 32 x228)) x1272) (= (not (> x1348 1)) x1609)) (and x1609 (=> (= x56 x1656) x841)))))
(assert (= x720 (and x497 x858)))
(assert (= (+ 1 (x1897 x350)) (x1897 (x278 x350 1))))
(assert (x786 x200))
(assert (= (or x575 x1357) x1903))
(assert (= x8 (and x604 (not x913))))
(assert (x786 x313))
(assert (x786 x1172))
(assert (= 4137353292 (x1897 (x460 4137353292))))
(assert (= (x1897 (x1573 x1676)) x1676))
(assert (= (and x1590 x1201) x1514))
(assert (x786 x387))
(assert (= x1592 false))
(assert (x786 x1261))
(assert (= x1302 (and (not x594) x876)))
(assert (x786 x514))
(assert (x786 x37))
(assert (= x1875 (=> (and (= x715 0) (= x1519 x105)) x125)))
(assert (= (or x120 x1056) x796))
(assert (= x10 (x1897 (x1573 x10))))
(assert (x170 x563))
(assert (= 0 (x1734 x1290)))
(assert (x786 x224))
(assert (x786 x1685))
(assert (= (=> (and (and (>= 1461501637330902918203684832716283019655932542975 x1294) (<= x939 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x408) x745 (<= x1307 1461501637330902918203684832716283019655932542975) (= x1236 3019127319) (>= x939 0) (> x1644 0) (not (= x408 x1868)) (= x303 (x278 x737 1)) (= x1673 x1760) (= (x954 (x1573 x1644)) x41) (not (= 2781097000 x1236)) x620 (= x165 x1181) (> 1461501637330902918203684832716283019655932542976 x165) (= 1001385071 x1035) (<= 0 x41) x1879 (= x1760 x1798) (<= 0 x1674) (= x354 x939) (= x524 (< 0 (x1097 (x1573 x912)))) (= 4 x504) (= x1644 x664) (<= 0 x999) (>= 1461501637330902918203684832716283019655932542975 x1760) x524 (<= x999 255) (not (= x1236 2759752456)) (= x498 (< 0 (x1097 (x1573 x408)))) (>= 1461501637330902918203684832716283019655932542975 x1644) (= (x954 (x1573 x408)) x148) (< 0 x408) (= x679 x261) (< 0 x912) (= (x1097 (x1573 x1644)) x1054) (not (= x408 x912)) (<= x261 1461501637330902918203684832716283019655932542975) (<= x1123 255) (>= x1294 0) (>= 1461501637330902918203684832716283019655932542975 x912) (= x1674 (x954 (x1573 x912))) (= x770 false) (>= x261 0) (< 0 x1868) (not (= x1644 x912)) (= x1307 x1908) (not (= 2992780654 x1236)) x572 (= x1294 x86) (not (= x1644 x408)) (> x1054 0) (<= x1868 1461501637330902918203684832716283019655932542975) (= x615 (x954 (x1573 x1868))) (< x1236 3039079375) (<= x165 1461501637330902918203684832716283019655932542975) (>= x1307 0) (not (= x1236 2863377861)) x20 (not (= x1868 x1644)) (= x987 false) (= x904 x912) (= (= x86 x354) x620) (= x640 x1046) (not (= x912 x1868)) (= (< 0 (x1097 (x1573 x1644))) x572) (= x1449 false) (<= 0 x1760) (= x745 (not (= x1673 x664))) (<= 0 x615) (not (< x1236 2290148746)) (>= x148 0) (>= x165 0) (= x20 (> (x1097 (x1573 x1868)) 0)) x498 (= (x1389 x303) x165) (not (< x1236 2759752456)) (>= x1123 0) (= (x157 (x1573 x640) (x460 1) 0) x737) (= x1422 false) (= x1879 (not (= x1798 x904)))) (and (and (= (x157 (x1573 x1175) (x460 1) 0) x1144) (not (= 3921506749 x897)) (>= 1461501637330902918203684832716283019655932542975 x1874) (<= 0 x1874) (< x1874 1461501637330902918203684832716283019655932542976) (not (< x897 3039079375)) (= x1874 (x127 x1144)) (not (< x897 2290148746)) (= x165 x1312) (not (= x897 4085545785)) (not (= x897 3961236718)) (= x1874 x1179) (> x42 0) (= x1175 x1046) x371 (= (= x1848 x1312) x371) (= (x1097 (x1573 x1644)) x42) (= x1848 x1294) (not (> 3921506749 x897)) (= x897 4137353292)) (and (= x1279 x673) (< x352 1520650183) (= x352 706499883) (not (= 80076034 x352)) (= x134 (x157 (x1573 x1486) x1682 0)) (<= 0 x779) (= x779 x1908) (= x756 0) (not (= 85603218 x352)) (> x1822 0) (= (x1193 x28) x1518) (>= x250 0) (<= x250 1461501637330902918203684832716283019655932542975) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1518) (= x1469 (x157 (x1573 x250) (x460 2) 0)) (= x706 x756) (= x1745 (x157 (x1573 x1045) x1469 0)) (< x352 928407353) (not (= 450795052 x352)) (= (x157 (x1573 x1486) (x460 1) 0) x1811) (> 2290148746 x352) (= (x278 x1745 3) x1682) (= x673 x741) (<= 0 x1518) (<= 0 x1279) (= (x127 x1811) x250) (= x1760 x1045) (= x1887 (x278 x1745 1)) (= x1843 (= x865 x1441)) x1843 (= x566 x1448) (= x4 (x278 x1887 1)) (<= x1045 1461501637330902918203684832716283019655932542975) (= x1441 x1874) (< x250 1461501637330902918203684832716283019655932542976) (= x1486 x1046) (= x939 x865) (= x1822 (x1097 (x1573 x1644))) (>= 1461501637330902918203684832716283019655932542975 x1777) (= (x157 (x1573 x1486) x4 0) x28) (<= x779 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1279) (>= x1777 0) (= (= x1518 0) x1145)))) (and (=> (and (and (>= x448 0) (= x1598 x448) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x448) (= x448 (x716 x134))) x1145) x905) (=> (and (and (or (and x27 (and (= x653 (x278 x1811 8)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x886) (= (x1332 x653) x886) (= x1754 x886) (<= 0 x886))) (and (and (>= x859 0) (= (x386 x927) x46) (<= 0 x856) (>= x965 0) (not (<= 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x859 x1616))) (<= 0 x46) (= (x278 x1811 5) x698) (= (= x985 0) x394) (<= x856 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x46) (= (x278 x286 1) x1855) (= x1616 (x1772 x1104 x1481)) (= (x278 x1811 7) x286) (= x859 (x1332 x1855)) (= (ite (< x566 x965) x1448 x965) x947) (= (x1161 x698) x965) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x859) (<= x965 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1104 (x1751 (x16 x985 x46))) (= x985 (x775 (- x947 x856))) (ite x394 x394 (= x46 (x1772 x1104 x985))) (= (x1117 x286) x856) (= x927 (x278 x698 1)) (= x1754 x1064) (= (x1627 (+ x859 x1616)) x1064)) (not x27))) (and (<= 0 x1481) (<= x1481 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1138 (x278 x1811 3)) (= (= x1481 0) x27) (= (x1106 x1138) x1481))) (not x1145)) x752))) x930))
(assert (x1608 x333 (- x884 x542)))
(assert (x1608 x563 (- x1791 x503)))
(assert (= x1277 (x1897 (x1573 x1277))))
(assert (x170 (- x884 x1637)))
(assert (x786 x1312))
(assert (= (and x441 x599) x50))
(assert (x786 x1279))
(assert (= (x1573 706499883) (x460 706499883)))
(assert (x786 x1900))
(assert (= x1581 (and x373 x1778)))
(assert (x786 x1638))
(assert (x786 x1411))
(assert (x786 x54))
(assert (x170 (- x884 x237)))
(assert (x198 32))
(assert (= x574 (=> (and (= x1519 x1443) (= x1863 0)) x431)))
(assert (x1547 x884 x333 x503 x1637))
(assert (x786 x1116))
(assert (x786 x674))
(assert (x786 x949))
(assert (and (x1591 x1192 1461501637330902918203684832716283019655932542976) (x713 x1192 1461501637330902918203684832716283019655932542976) (x1741 x1192 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1192 (+ (* 1461501637330902918203684832716283019655932542976 (x1772 x1192 1461501637330902918203684832716283019655932542976)) (x1652 x1192 1461501637330902918203684832716283019655932542976))))))
(assert (x786 x1744))
(assert (x786 x1297))
(assert (x786 x809))
(assert (x786 x1739))
(assert (= (x1573 1461501637330902918203684832716283019655932542976) (x460 1461501637330902918203684832716283019655932542976)))
(assert (x170 (- x46 x1637)))
(assert (= x1295 (and x355 x1310)))
(assert (= (x1897 (x1573 x502)) x502))
(assert (x795 x985 x46 x884 x333))
(assert (= (x1573 2992780654) (x460 2992780654)))
(assert (= (or x291 x901 x214 x1289 x347 x1299) x1414))
(assert (= x836 (x1897 (x1573 x836))))
(assert (= (or x1876 x1774) x423))
(assert (=> (>= 10000 x1340) (= (x460 x1340) (x1573 x1340))))
(assert (x786 x336))
(assert (x786 x1677))
(assert (x1028 x1180))
(assert (x786 x1534))
(assert (x91 (x361 x1367 224)))
(assert (x786 x992))
(assert (and (x1591 x1347 1461501637330902918203684832716283019655932542976) (x713 x1347 1461501637330902918203684832716283019655932542976) (x1741 x1347 1461501637330902918203684832716283019655932542976) (=> (> 1461501637330902918203684832716283019655932542976 0) (= x1347 (+ (* 1461501637330902918203684832716283019655932542976 (x1772 x1347 1461501637330902918203684832716283019655932542976)) (x1652 x1347 1461501637330902918203684832716283019655932542976))))))
(assert (x1547 x563 x1791 x503 x1637))
(assert (x91 x250))
(assert (x786 x1426))
(assert (x170 x46))
(assert (x786 x1377))
(assert (= (=> (and (= (x318 x350) x308) (<= 0 x308) (= x1704 (< 0 x308)) (<= x308 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (=> (and x1704 (and (>= 1461501637330902918203684832716283019655932542975 x295) (= (x278 x1726 1) x176) (= x920 (x1077 x974)) (>= x295 0) (> 1461501637330902918203684832716283019655932542976 x295) (= x1585 (< 0 x920)) (= (x1389 x176) x295))) (and (=> (and (and (= (= x998 x295) x19) (= (x511 x926) x1180) (= (x332 1461501637330902918203684832716283019655932542975 x1180) x998) (= x926 (x1627 (+ 32 x974))) (= (x1077 x974) x220) (< 0 x220)) x1585) (and (=> (and x19 (and (= 0 x844) (= (x1627 (+ x253 32)) x1805) (= (x1701 x1805) x1509) (> x923 0) (= (x89 x253) x923) (= (x1627 (+ x308 x1509)) x684))) x535) (=> (and (and (= (x332 1461501637330902918203684832716283019655932542975 x1192) x1417) (= (x1077 x974) x850) (= (= x1417 0) x482) (> x850 0) (= (x511 x926) x1192)) (not x19)) (and (=> (and x482 (and (> x483 0) (= 1 x844) (= (x1077 x974) x784) (= (x1627 (+ x253 32)) x744) (< 0 x784) (= x483 (x89 x253)))) x535) (=> (not x482) x299))))) (=> (not x1585) x143))) (=> (and (= 0 x1898) (not x1704)) x1311))) x66))
(assert (x795 x1411 x542 x503 x1637))
(assert (x740 x1481))
(assert (x170 (- x563 x333)))
(assert (x91 x502))
(assert (x786 x1831))
(assert (x786 x1539))
(assert (x1547 x333 x884 x985 x46))
(assert (= (and (not x1002) x1463) x956))
(assert (= (or x1215 x269 x1497 x1800 x396 x436) x575))
(assert (= x187 (=> (and (= x522 (x1627 (+ 32 x825))) (= x507 (x1627 (+ x301 32))) (= x1883 (x139 x1476)) (< x1854 4) (= (x1838 x1290) x951) (= x1347 (x1721 x1125)) (= x471 (x1580 x1488)) (= (x1627 (+ x522 32)) x301) (= x710 (not (< 1 x67))) (= (x1113 x1093) x626) (= x1290 (x1627 (+ x1093 32))) (= x1854 (x174 x471)) (= x98 (x332 1461501637330902918203684832716283019655932542975 x1347)) (= (x1627 (+ x507 32)) x1177) (= (x1627 (+ x1125 32)) x1476) (= x1835 (x332 1461501637330902918203684832716283019655932542975 x626)) (= (x1627 (+ x1177 32)) x686) (= (x1627 (+ 32 x1290)) x1125) (= x1093 (x1627 (+ 32 x471))) (= x646 (x332 1461501637330902918203684832716283019655932542975 x1883))) (and x710 (=> (= x686 x1211) x1460)))))
(assert (x786 x893))
(assert (x786 x646))
(assert (= x416 (and x973 x1672)))
(assert (x91 x1324))
(assert (x786 x1209))
(check-sat)
(exit)
