(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x107 0)) (((x173 (x327 x107) (x267 Int)) (x261 (x221 Int)) (x138 (x385 x107) (x395 x107) (x323 Int)))))
(declare-fun x240 () Bool)
(declare-fun x321 () Int)
(declare-fun x34 () Int)
(declare-fun x85 () Int)
(declare-fun x42 () Bool)
(declare-fun x335 () Bool)
(declare-fun x201 () Int)
(declare-fun x92 () Bool)
(declare-fun x129 () Int)
(declare-fun x429 () Int)
(declare-fun x345 () Int)
(declare-fun x384 () Bool)
(declare-fun x396 () Int)
(declare-fun x196 () Int)
(declare-fun x100 () Bool)
(declare-fun x277 (Int Int) Int)
(declare-fun x125 () Int)
(declare-fun x220 () Bool)
(declare-fun x236 () Bool)
(declare-fun x226 () Bool)
(declare-fun x280 () Int)
(declare-fun x53 () Int)
(declare-fun x307 () Int)
(declare-fun x140 () Int)
(declare-fun x18 () Bool)
(declare-fun x96 () Int)
(declare-fun x290 () Int)
(declare-fun x424 () Int)
(declare-fun x381 () Bool)
(declare-fun x409 () Bool)
(declare-fun x12 () Bool)
(declare-fun x127 () Bool)
(declare-fun x183 () Bool)
(declare-fun x73 () Int)
(declare-fun x282 () Int)
(declare-fun x97 () Bool)
(declare-fun x298 () Bool)
(declare-fun x432 () Int)
(declare-fun x376 () Int)
(declare-fun x306 () Bool)
(declare-fun x8 () Bool)
(declare-fun x66 () Bool)
(declare-fun x217 () Int)
(declare-fun x227 () Int)
(declare-fun x72 () Int)
(declare-fun x346 () Int)
(declare-fun x311 () Int)
(declare-fun x199 () Int)
(declare-fun x143 () Int)
(declare-fun x291 () Int)
(declare-fun x109 () Bool)
(declare-fun x294 () Int)
(declare-fun x147 () Bool)
(declare-fun x425 () Bool)
(declare-fun x45 () Bool)
(declare-fun x158 () Bool)
(declare-fun x259 () Int)
(declare-fun x137 () Int)
(declare-fun x139 () Int)
(declare-fun x263 () Int)
(declare-fun x71 () Bool)
(declare-fun x37 () Int)
(declare-fun x54 () Int)
(declare-fun x319 () Bool)
(declare-fun x192 () Int)
(declare-fun x421 () Bool)
(declare-fun x283 () Bool)
(declare-fun x13 () Bool)
(declare-fun x115 () Int)
(declare-fun x257 () Bool)
(declare-fun x150 () Int)
(declare-fun x99 () Bool)
(declare-fun x393 (Int) x107)
(declare-fun x266 () Int)
(declare-fun x145 () Bool)
(declare-fun x16 () Int)
(declare-fun x300 () Int)
(declare-fun x368 () Int)
(declare-fun x142 () Bool)
(declare-fun x246 () Int)
(declare-fun x187 () Int)
(declare-fun x430 () Bool)
(declare-fun x322 () Int)
(declare-fun x141 () Bool)
(declare-fun x268 (Int Int) Int)
(declare-fun x426 (Int Int) Int)
(declare-fun x180 () Bool)
(declare-fun x64 () Int)
(declare-fun x364 () Bool)
(declare-fun x116 () Bool)
(declare-fun x65 () Bool)
(declare-fun x63 () Int)
(declare-fun x233 () Bool)
(declare-fun x162 () Int)
(declare-fun x76 () Int)
(declare-fun x363 () Int)
(declare-fun x225 () Bool)
(declare-fun x84 () Int)
(declare-fun x195 () Int)
(declare-fun x299 () Bool)
(declare-fun x169 () Int)
(declare-fun x80 () Bool)
(declare-fun x106 () Int)
(declare-fun x276 () Int)
(declare-fun x46 () Bool)
(declare-fun x245 () Int)
(declare-fun x416 () Bool)
(declare-fun x17 () Bool)
(declare-fun x56 () Bool)
(declare-fun x334 () Bool)
(declare-fun x154 () Bool)
(declare-fun x207 () Int)
(declare-fun x373 () Bool)
(declare-fun x252 () Int)
(declare-fun x44 () Bool)
(declare-fun x51 () Int)
(declare-fun x60 () Bool)
(declare-fun x121 () Bool)
(declare-fun x431 () Bool)
(declare-fun x255 () Int)
(declare-fun x197 () Int)
(declare-fun x406 () Int)
(declare-fun x135 () Bool)
(declare-fun x177 () Bool)
(declare-fun x317 () Int)
(declare-fun x372 () Int)
(declare-fun x200 () Int)
(declare-fun x70 () Bool)
(declare-fun x41 () Int)
(declare-fun x67 () Bool)
(declare-fun x40 () Int)
(declare-fun x366 () Int)
(declare-fun x273 () Int)
(declare-fun x28 () Bool)
(declare-fun x89 () Bool)
(declare-fun x74 () Int)
(declare-fun x412 () Int)
(declare-fun x114 () Int)
(declare-fun x61 () Int)
(declare-fun x68 () Int)
(declare-fun x208 () Bool)
(declare-fun x33 () Int)
(declare-fun x69 () Int)
(declare-fun x50 () Bool)
(declare-fun x136 () Int)
(declare-fun x78 () Bool)
(declare-fun x182 () Bool)
(declare-fun x356 () Int)
(declare-fun x48 () Bool)
(declare-fun x120 () Int)
(declare-fun x184 (x107) Int)
(declare-fun x189 () Bool)
(declare-fun x386 () Int)
(declare-fun x101 () Int)
(declare-fun x211 () Bool)
(declare-fun x316 () Int)
(declare-fun x149 () Int)
(declare-fun x23 () Int)
(declare-fun x132 () Int)
(declare-fun x9 () Bool)
(declare-fun x206 () Int)
(declare-fun x248 () Bool)
(declare-fun x230 () Bool)
(declare-fun x185 () Bool)
(declare-fun x304 () Bool)
(declare-fun x222 () Int)
(declare-fun x110 () Bool)
(declare-fun x159 () Bool)
(declare-fun x3 () Int)
(declare-fun x392 () Int)
(declare-fun x223 () Int)
(declare-fun x128 () Bool)
(declare-fun x21 () Int)
(declare-fun x241 () Bool)
(declare-fun x271 () Bool)
(declare-fun x377 () Int)
(declare-fun x379 () Int)
(declare-fun x102 () Int)
(declare-fun x370 () Bool)
(declare-fun x219 () Bool)
(declare-fun x231 () Bool)
(declare-fun x238 () Bool)
(declare-fun x310 () Bool)
(declare-fun x104 (Int) Int)
(declare-fun x170 () Int)
(declare-fun x403 () Bool)
(declare-fun x228 () Int)
(declare-fun x47 () Int)
(declare-fun x256 () Int)
(declare-fun x87 () Bool)
(declare-fun x157 () Bool)
(declare-fun x186 () Bool)
(declare-fun x194 () Bool)
(declare-fun x181 () Int)
(declare-fun x287 (x107) Int)
(declare-fun x254 () Int)
(declare-fun x262 () Bool)
(declare-fun x212 () Bool)
(declare-fun x427 () Int)
(declare-fun x86 () Int)
(declare-fun x24 () Int)
(declare-fun x402 () Int)
(declare-fun x214 () Bool)
(declare-fun x286 () Int)
(declare-fun x119 () Bool)
(declare-fun x229 () Int)
(declare-fun x88 () Bool)
(declare-fun x380 () Int)
(declare-fun x112 () Bool)
(declare-fun x59 () Bool)
(declare-fun x324 () Bool)
(declare-fun x387 () Int)
(declare-fun x284 () Int)
(declare-fun x82 () Int)
(declare-fun x22 () Int)
(declare-fun x83 () Bool)
(declare-fun x168 () Int)
(declare-fun x325 () Bool)
(declare-fun x103 () Bool)
(declare-fun x394 () Int)
(declare-fun x10 () Bool)
(declare-fun x52 () Int)
(declare-fun x250 () Int)
(declare-fun x123 () Bool)
(declare-fun x270 () Int)
(declare-fun x79 () Bool)
(declare-fun x404 () Int)
(declare-fun x105 () Bool)
(declare-fun x308 () Int)
(declare-fun x348 () Bool)
(declare-fun x235 () Int)
(declare-fun x26 () Int)
(declare-fun x122 () Bool)
(declare-fun x151 () Int)
(declare-fun x15 () Int)
(declare-fun x57 () Bool)
(declare-fun x388 () Int)
(declare-fun x155 () Bool)
(declare-fun x390 () Int)
(declare-fun x174 () Bool)
(declare-fun x391 () Bool)
(declare-fun x285 () Bool)
(declare-fun x111 () Int)
(declare-fun x178 () Int)
(declare-fun x418 () Bool)
(declare-fun x398 () Bool)
(declare-fun x295 () Bool)
(declare-fun x369 () Int)
(declare-fun x113 () Bool)
(declare-fun x38 () Bool)
(declare-fun x49 () Int)
(declare-fun x332 () Bool)
(declare-fun x274 () Bool)
(declare-fun x336 () Bool)
(declare-fun x247 () Bool)
(declare-fun x31 () Bool)
(declare-fun x36 () Int)
(declare-fun x320 () Bool)
(declare-fun x14 () Int)
(declare-fun x244 () Int)
(declare-fun x253 () Bool)
(declare-fun x7 () Bool)
(declare-fun x148 () Bool)
(declare-fun x218 () Int)
(declare-fun x260 () Bool)
(declare-fun x179 () Bool)
(declare-fun x349 () Int)
(declare-fun x318 () Bool)
(declare-fun x400 () Int)
(declare-fun x281 () Bool)
(declare-fun x39 () Bool)
(declare-fun x338 () Int)
(declare-fun x237 () Bool)
(declare-fun x296 (Int Int) Int)
(declare-fun x358 () Int)
(declare-fun x198 () Int)
(declare-fun x43 () Int)
(declare-fun x355 () Int)
(declare-fun x374 () Int)
(declare-fun x165 () Bool)
(declare-fun x399 () Int)
(declare-fun x264 () Int)
(declare-fun x313 () Int)
(declare-fun x6 () Bool)
(declare-fun x130 () Int)
(declare-fun x297 () Int)
(declare-fun x209 () Bool)
(declare-fun x32 () Int)
(declare-fun x293 () Bool)
(declare-fun x95 () Bool)
(declare-fun x269 () Int)
(declare-fun x417 () Bool)
(declare-fun x411 () Int)
(declare-fun x341 () Int)
(declare-fun x371 () Int)
(declare-fun x224 () Bool)
(declare-fun x93 () Int)
(declare-fun x265 () Int)
(declare-fun x389 () Bool)
(declare-fun x134 () Bool)
(declare-fun x375 () Int)
(declare-fun x175 (Int Int) Int)
(declare-fun x397 () Bool)
(declare-fun x77 () Int)
(declare-fun x4 () Int)
(declare-fun x309 () Int)
(declare-fun x234 () Bool)
(declare-fun x422 (x107) Int)
(declare-fun x75 () Bool)
(declare-fun x360 () Bool)
(declare-fun x415 () Int)
(declare-fun x362 () Bool)
(declare-fun x279 () Int)
(declare-fun x352 () Int)
(declare-fun x357 () Bool)
(declare-fun x156 () Bool)
(declare-fun x242 () Int)
(declare-fun x29 () Int)
(declare-fun x407 () Int)
(declare-fun x361 () Int)
(declare-fun x413 () Int)
(declare-fun x410 () Bool)
(declare-fun x190 () Int)
(declare-fun x58 () Bool)
(declare-fun x171 () Int)
(declare-fun x11 () Bool)
(declare-fun x2 () Int)
(declare-fun x90 () Bool)
(declare-fun x210 () Bool)
(declare-fun x420 () Int)
(declare-fun x292 () Bool)
(declare-fun x81 () Bool)
(declare-fun x176 () Bool)
(declare-fun x353 () Bool)
(declare-fun x94 () Bool)
(declare-fun x405 () Int)
(declare-fun x30 () Bool)
(declare-fun x278 () Int)
(declare-fun x428 () Int)
(declare-fun x272 () Int)
(declare-fun x124 () Bool)
(declare-fun x19 () Bool)
(declare-fun x326 () Bool)
(declare-fun x312 () Int)
(declare-fun x340 () Int)
(declare-fun x215 () Int)
(declare-fun x98 () Int)
(declare-fun x303 () Int)
(declare-fun x118 () Bool)
(declare-fun x153 () Int)
(declare-fun x193 () Int)
(declare-fun x383 () Bool)
(declare-fun x347 () Bool)
(declare-fun x419 () Bool)
(declare-fun x160 () Int)
(declare-fun x333 () Bool)
(declare-fun x305 () Bool)
(declare-fun x163 () Int)
(declare-fun x55 () Int)
(declare-fun x337 () Bool)
(declare-fun x167 () Int)
(declare-fun x239 () Int)
(declare-fun x354 () Int)
(declare-fun x331 () Int)
(declare-fun x408 () Int)
(declare-fun x203 () Int)
(declare-fun x359 () Bool)
(declare-fun x166 () Int)
(declare-fun x378 () Int)
(declare-fun x344 () Int)
(declare-fun x330 () Int)
(declare-fun x188 () Int)
(declare-fun x202 () Int)
(declare-fun x315 () Bool)
(declare-fun x91 () Bool)
(declare-fun x164 () Bool)
(declare-fun x131 () Int)
(declare-fun x328 () Bool)
(declare-fun x343 () Bool)
(declare-fun x401 () Bool)
(declare-fun x205 () Int)
(declare-fun x367 () Int)
(define-fun x152 ((x107 x107) (x20 Int)) x107 (ite ((_ is x138) x107) (x138 (x385 x107) (x395 x107) (+ (x323 x107) x20)) (ite ((_ is x173) x107) (x173 (x327 x107) (+ x20 (x267 x107))) (x261 (+ x20 (x221 x107))))))
(define-fun x423 ((x126 Int)) Int (ite (and (<= 0 x126) (< x126 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x126 (- x126 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x329 ((x126 Int)) Int (ite (and (>= x126 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (< x126 0)) (+ x126 115792089237316195423570985008687907853269984665640564039457584007913129639936) x126))
(define-fun x365 ((x126 Int)) Int (ite (and (>= x126 0) (< x126 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x126 (ite (and (>= x126 115792089237316195423570985008687907853269984665640564039457584007913129639936) (> 231584178474632390847141970017375815706539969331281128078915168015826259279872 x126)) (- x126 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (> 0 x126) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x126)) (+ x126 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x268 x126 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x289 ((x339 Int)) Bool (and (>= x339 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x339)))
(define-fun x108 ((x339 Int) (x117 Int)) Bool (= (x296 x117 x339) (x296 x339 x117)))
(define-fun x62 ((x339 Int) (x117 Int)) Bool (and (=> (and (< x339 0) (< 0 x117)) (< (x296 x339 x117) 0)) (=> (and (< x339 0) (< x117 0)) (< 0 (x296 x339 x117))) (=> (and (< 0 x339) (< x117 0)) (> 0 (x296 x339 x117))) (=> (and (< 0 x339) (> x117 0)) (< 0 (x296 x339 x117)))))
(define-fun x216 ((x339 Int) (x117 Int)) Bool (=> (and (< 0 x339) (< 0 x117)) (= (= x117 (x277 (x365 (x296 x339 x117)) x339)) (< (x296 x339 x117) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x414 ((x339 Int) (x117 Int)) Bool (=> (and (not (= 0 x339)) (not (= x117 0))) (and (= x117 (x277 (x296 x339 x117) x339)) (= x339 (x277 (x296 x339 x117) x117)))))
(define-fun x191 ((x339 Int) (x117 Int)) Bool (=> (and (> x339 0) (< 0 x117)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x296 x339 x117)) (< (x277 115792089237316195423570985008687907853269984665640564039457584007913129639935 x339) x117))))
(define-fun x249 ((x339 Int) (x117 Int)) Bool (and (= (x365 (x296 (- x339 115792089237316195423570985008687907853269984665640564039457584007913129639936) x117)) (x365 (x296 x339 x117))) (= (x365 (x296 x339 (- x117 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x365 (x296 x339 x117))) (= (x365 (x296 (- x339 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x117 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x365 (x296 x339 x117)))))
(define-fun x258 ((x339 Int) (x117 Int)) Bool (and (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x117) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x117)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x339) (< 0 x339))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117) (x277 57896044618658097711785492504343953926634992332820282019728792003956564819968 x339)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x296 x339 (- x117 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x117) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x117)) (and (> x339 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x339 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (>= (x277 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117)) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x339)) (<= (x296 (- x339 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x117 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (< 0 x117) (<= x117 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x339) (<= x339 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x339) (x277 57896044618658097711785492504343953926634992332820282019728792003956564819968 x117)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x296 (- x339 115792089237316195423570985008687907853269984665640564039457584007913129639936) x117)))) (=> (and (and (> x339 0) (<= x339 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x117 0) (<= x117 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= (x277 57896044618658097711785492504343953926634992332820282019728792003956564819967 x117) x339) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x296 x339 x117))))))
(define-fun x382 ((x339 Int) (x117 Int)) Bool (and (x249 x339 x117) (x258 x339 x117) (x216 x339 x117) (x62 x339 x117) (x191 x339 x117) (x108 x339 x117) (x414 x339 x117)))
(define-fun x35 ((x339 Int)) Bool (and (= 0 (x296 0 x339)) (= (x296 x339 0) 0)))
(define-fun x133 ((x339 Int)) Bool (and (= (x296 x339 1) x339) (= (x296 1 x339) x339)))
(define-fun x146 ((x339 Int)) Bool (and (x35 x339) (x133 x339)))
(define-fun x251 ((x339 Int) (x117 Int)) Bool (=> (and (> x117 0) (> x339 0)) (and (>= x339 (x277 x339 x117)) (<= 0 (x277 x339 x117)))))
(define-fun x232 ((x339 Int) (x117 Int)) Bool (=> (and (and (>= x339 0) (< x339 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (>= x117 1) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x117))) (and (< (x277 x339 x117) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= (x277 x339 x117) 0))))
(define-fun x213 ((x339 Int) (x117 Int)) Bool (=> (and (> x339 x117) (> x117 1)) (< (x277 x339 x117) x339)))
(define-fun x302 ((x339 Int) (x117 Int)) Bool (=> (and (> x339 0) (< 0 x117)) (= (> x117 x339) (= 0 (x277 x339 x117)))))
(define-fun x243 ((x339 Int)) Bool (= 0 (x277 0 x339)))
(define-fun x301 ((x339 Int)) Bool (= x339 (x277 x339 1)))
(define-fun x5 ((x339 Int)) Bool (=> (not (= 0 x339)) (= 1 (x277 x339 x339))))
(define-fun x288 ((x339 Int)) Bool (and (x5 x339) (x243 x339) (x301 x339)))
(define-fun x144 ((x339 Int) (x117 Int) (x172 Int) (x27 Int)) Bool (=> (and (>= x27 x117) (>= x339 0) (>= x172 x339) (>= x117 0)) (<= (x296 x339 x117) (x296 x172 x27))))
(define-fun x314 ((x339 Int) (x117 Int) (x172 Int) (x27 Int)) Bool (=> (= x339 x172) (= (- (x296 x339 x117) (x296 x172 x27)) (x296 x339 (- x117 x27)))))
(define-fun x204 ((x339 Int)) Bool (=> (and (not (= 1461501637330902918203684832716283019655932542975 x339)) (not (= 1245370514 x339)) (not (= x339 149895259)) (> x339 10000) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x339)) (not (= x339 2685885107))) (not ((_ is x261) (x393 x339)))))
(assert (= 149895259 (x422 (x261 149895259))))
(assert (x382 x22 (- x102 x68)))
(assert (x314 x68 x125 x264 x63))
(assert (x289 x55))
(assert (x289 x163))
(assert (x146 500))
(assert (x289 x316))
(assert (and (x249 400 x150) (x191 400 x150) (= (x296 400 x150) (* x150 400)) (x414 400 x150) (and (= (- (* x150 400) (* x150 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x150)) (= (- (* 400 (- x150 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x150 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x150 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 400 (- x150 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 400 (- x150 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 400 x150) (x258 400 x150)))
(assert (x382 x125 (- x68 x22)))
(assert (x289 x203))
(assert (= x370 (and x182 (not x328))))
(assert (and (x249 2 x270) (x191 2 x270) (= (x296 2 x270) (* x270 2)) (x414 2 x270) (and (= (- (* x270 2) (* x270 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x270)) (= (- (* 2 (- x270 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x270 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x270 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 2 (- x270 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 2 (- x270 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 2 x270) (x258 2 x270)))
(assert (x289 x4))
(assert (x289 x308))
(assert (x289 x169))
(assert (x289 x22))
(assert (x146 x63))
(assert (= (=> (and (and (= x285 x194) (= x143 (x277 x49 3)) (= x143 x273)) (and (= x363 x49) (= x123 x236) (= x321 3) (= x230 false) x236)) x318) x325))
(assert (and (x249 10 x255) (x191 10 x255) (= (x296 10 x255) (* x255 10)) (x414 10 x255) (and (= (- (* x255 10) (* x255 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x255)) (= (- (* 10 (- x255 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x255 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x255 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 10 (- x255 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 10 (- x255 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 10 x255) (x258 10 x255)))
(assert (x289 x303))
(assert (x289 x428))
(assert (= x418 (=> (and (and (= x285 x194) (= x106 x273) (= (x277 x377 500) x106)) (and (= x97 false) (= x207 x377) (= x82 500) (= x60 x348) x60)) x318)))
(assert (= (and x12 x75) x292))
(assert (x146 (- x125 x264)))
(assert (x146 x280))
(assert (x314 x22 x102 x68 x125))
(assert (= (and x183 x71) x100))
(assert (x289 x96))
(assert (= (and x348 x416) x155))
(assert (x146 x322))
(assert (and (x302 x49 3) (x251 x49 3) (x232 x49 3) (=> (and (> 3 0) (< 0 x49)) (and (< (- x49 3) (* (x277 x49 3) 3)) (>= x49 (* 3 (x277 x49 3))))) (x213 x49 3)))
(assert (x289 x256))
(assert (x289 x279))
(assert (x289 x372))
(assert (x289 x51))
(assert (x289 x244))
(assert (x314 x22 x102 x125 x68))
(assert (= (=> (and (and (= false x417) (= x162 500) (= x363 x37) (= x305 x397) x305) (and (= x163 x273) (= x163 (x277 x37 500)) (= x194 x285))) x318) x401))
(assert (x289 x378))
(assert (= x220 (and (not x124) x247)))
(assert (x289 x115))
(assert (x289 x309))
(assert (and (x249 10 x203) (x191 10 x203) (= (x296 10 x203) (* x203 10)) (x414 10 x203) (and (= (- (* x203 10) (* x203 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x203)) (= (- (* 10 (- x203 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x203 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x203 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 10 (- x203 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 10 (- x203 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 10 x203) (x258 10 x203)))
(assert (x289 x222))
(assert (x289 x424))
(assert (= (and (not x189) x357) x359))
(assert (x289 x76))
(assert (= x421 (and x328 x182)))
(assert (not x335))
(assert (x289 x98))
(assert (x144 x63 x264 x68 x125))
(assert (x146 x380))
(assert (x289 x192))
(assert (and (x249 500 x139) (x191 500 x139) (= (x296 500 x139) (* x139 500)) (x414 500 x139) (and (= (- (* x139 500) (* x139 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x139)) (= (- (* 500 (- x139 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x139 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x139 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 500 (- x139 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 500 (- x139 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 500 x139) (x258 500 x139)))
(assert (= (x422 (x261 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x382 x264 x63))
(assert (x289 x193))
(assert (x289 x23))
(assert (x289 x402))
(assert (= (and x189 x357) x56))
(assert (x289 x340))
(assert (x146 x132))
(assert (x289 x377))
(assert (x289 x36))
(assert (x146 x390))
(assert (x289 x125))
(assert (x289 x149))
(assert (and (x249 500 x402) (x191 500 x402) (= (x296 500 x402) (* x402 500)) (x414 500 x402) (and (= (- (* x402 500) (* x402 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x402)) (= (- (* 500 (- x402 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x402 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x402 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 500 (- x402 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 500 (- x402 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 500 x402) (x258 500 x402)))
(assert (and (x249 400 x77) (x191 400 x77) (= (x296 400 x77) (* x77 400)) (x414 400 x77) (and (= (- (* x77 400) (* x77 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x77)) (= (- (* 400 (- x77 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x77 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x77 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 400 (- x77 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 400 (- x77 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 400 x77) (x258 400 x77)))
(assert (x146 (- x68 x63)))
(assert (x382 x68 x125))
(assert (x289 x341))
(assert (x289 x150))
(assert (x146 x73))
(assert (x146 x77))
(assert (and (x302 x377 500) (x251 x377 500) (x232 x377 500) (=> (and (> 500 0) (< 0 x377)) (and (< (- x377 500) (* (x277 x377 500) 500)) (>= x377 (* 500 (x277 x377 500))))) (x213 x377 500)))
(assert (x289 x131))
(assert (x289 x41))
(assert (x289 x199))
(assert (= (=> (and (and (= x256 x22) (= (x365 (x296 x102 x22)) x14) (= (>= x2 x303) x177) (= x63 x151) (= x264 x153) (= x102 x254) (= x239 (x329 (- x14 x396))) (= x396 (x365 (x296 x264 x63))) (= 1 x338) (= x153 x15) (= x2 (- x69 1)) (= x151 x69) (= x303 x239)) (and (= x188 x273) (= x15 x188) (= x297 x188) x285)) x177) x318))
(assert (x146 400))
(assert (x289 x405))
(assert (x289 x171))
(assert (= x364 (or x292 x67 x262 x100 x95 x113 x94 x80 x56 x31 x141 x50 x281 x6 x241 x59 x343 x155 x48 x209 x421 x362 x145 x157)))
(assert (x289 x242))
(assert (= x391 (=> (and (and (= x147 x17) (= 2 x52) (= false x425) x147 (= x371 x207)) (and (= (x277 x371 2) x72) (= x285 x194) (= x273 x72))) x318)))
(assert (= (and (not x12) x75) x109))
(assert (x289 x69))
(assert (and (x249 500 x280) (x191 500 x280) (= (x296 500 x280) (* x280 500)) (x414 500 x280) (and (= (- (* x280 500) (* x280 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x280)) (= (- (* 500 (- x280 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x280 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x280 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 500 (- x280 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 500 (- x280 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 500 x280) (x258 500 x280)))
(assert (x289 x33))
(assert (= x6 (and (not x148) x315)))
(assert (and (x249 3 x132) (x191 3 x132) (= (x296 3 x132) (* x132 3)) (x414 3 x132) (and (= (- (* x132 3) (* x132 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x132)) (= (- (* 3 (- x132 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x132 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x132 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 3 (- x132 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 3 (- x132 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 3 x132) (x258 3 x132)))
(assert (= x59 (and x233 x38)))
(assert (x146 x149))
(assert (x289 x371))
(assert (x289 x246))
(assert (x289 x420))
(assert (x289 x166))
(assert (and (x249 400 x322) (x191 400 x322) (= (x296 400 x322) (* x322 400)) (x414 400 x322) (and (= (- (* x322 400) (* x322 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x322)) (= (- (* 400 (- x322 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x322 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x322 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 400 (- x322 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 400 (- x322 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 400 x322) (x258 400 x322)))
(assert (x289 x153))
(assert (x146 x86))
(assert (x289 x255))
(assert (and (x249 3 x23) (x191 3 x23) (= (x296 3 x23) (* x23 3)) (x414 3 x23) (and (= (- (* x23 3) (* x23 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x23)) (= (- (* 3 (- x23 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x23 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x23 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 3 (- x23 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 3 (- x23 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 3 x23) (x258 3 x23)))
(assert (x289 x227))
(assert (x289 x412))
(assert (and (x249 2 x308) (x191 2 x308) (= (x296 2 x308) (* x308 2)) (x414 2 x308) (and (= (- (* x308 2) (* x308 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x308)) (= (- (* 2 (- x308 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x308 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x308 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 2 (- x308 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 2 (- x308 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 2 x308) (x258 2 x308)))
(assert (x146 x125))
(assert (x289 x198))
(assert (x146 (- x22 x68)))
(assert (x289 x77))
(assert (x146 x198))
(assert (x146 x250))
(assert (x289 x140))
(assert (x289 x291))
(assert (x289 x369))
(assert (x289 x345))
(assert (x289 x338))
(assert (x289 x93))
(assert (= (and x359 x90) x262))
(assert (x289 x32))
(assert (x314 x264 x63 x68 x125))
(assert (x144 x22 x102 x68 x125))
(assert (x289 x356))
(assert (x289 x82))
(assert (= x81 (and x332 (not x42))))
(assert (x289 x252))
(assert (x146 (- x125 x102)))
(assert (x289 x361))
(assert (x382 x125 (- x68 x63)))
(assert (and (x249 10 x198) (x191 10 x198) (= (x296 10 x198) (* x198 10)) (x414 10 x198) (and (= (- (* x198 10) (* x198 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x198)) (= (- (* 10 (- x198 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x198 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x198 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 10 (- x198 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 10 (- x198 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 10 x198) (x258 10 x198)))
(assert (x288 x49))
(assert (x382 x63 (- x264 x68)))
(assert (x144 x125 x68 x264 x63))
(assert (x146 (- x63 x68)))
(assert (x289 x43))
(assert (x314 x68 x125 x102 x22))
(assert (= x121 (=> (and (and (= 400 x54) (= x148 x238) x238 (= x47 x207) (= x240 false)) (and (= x192 x273) (= (x277 x47 400) x192) (= x194 x285))) x318)))
(assert (= x281 (and x19 x397)))
(assert (and (x249 10 x341) (x191 10 x341) (= (x296 10 x341) (* x341 10)) (x414 10 x341) (and (= (- (* x341 10) (* x341 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x341)) (= (- (* 10 (- x341 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x341 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x341 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 10 (- x341 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 10 (- x341 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 10 x341) (x258 10 x341)))
(assert (x146 x255))
(assert (x289 x349))
(assert (x289 x432))
(assert (= x241 (and x17 x324)))
(assert (= (and x81 (not x78)) x298))
(assert (x289 x269))
(assert (x146 x308))
(assert (x289 x190))
(assert (x289 x54))
(assert (x289 x86))
(assert (= (and x274 x293) x157))
(assert (= (x422 (x261 1245370514)) 1245370514))
(assert (x146 x195))
(assert (x289 x429))
(assert (x146 x23))
(assert (x289 x317))
(assert (x146 x427))
(assert (= 1461501637330902918203684832716283019655932542975 (x422 (x261 1461501637330902918203684832716283019655932542975))))
(assert (x146 x270))
(assert (x289 x272))
(assert (and (x302 x37 500) (x251 x37 500) (x232 x37 500) (=> (and (> 500 0) (< 0 x37)) (and (< (- x37 500) (* (x277 x37 500) 500)) (>= x37 (* 500 (x277 x37 500))))) (x213 x37 500)))
(assert (x289 x52))
(assert (x146 x16))
(assert (= (x261 1461501637330902918203684832716283019655932542975) (x393 1461501637330902918203684832716283019655932542975)))
(assert (x289 x162))
(assert (x289 x16))
(assert (x289 x139))
(assert (x146 x264))
(assert (and (x249 3 x222) (x191 3 x222) (= (x296 3 x222) (* x222 3)) (x414 3 x222) (and (= (- (* x222 3) (* x222 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x222)) (= (- (* 3 (- x222 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x222 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x222 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 3 (- x222 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 3 (- x222 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 3 x222) (x258 3 x222)))
(assert (= x214 (=> (and (and (= x394 2) x28 (= x28 x410) (= x196 x363) (= x283 false)) (and (= (x277 x196 2) x276) (= x194 x285) (= x276 x273))) x318)))
(assert (x289 x276))
(assert (x288 500))
(assert (x146 (- x63 x125)))
(assert (= (and x226 x179) x94))
(assert (x289 x201))
(assert (x289 x280))
(assert (x146 (- x68 x102)))
(assert (x289 x37))
(assert (x289 x297))
(assert (x289 x202))
(assert (x289 x282))
(assert (x146 2))
(assert (= (and x298 (not x13)) x39))
(assert (and (x249 400 x263) (x191 400 x263) (= (x296 400 x263) (* x263 400)) (x414 400 x263) (and (= (- (* x263 400) (* x263 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x263)) (= (- (* 400 (- x263 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x263 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x263 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 400 (- x263 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 400 (- x263 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 400 x263) (x258 400 x263)))
(assert (x314 x264 x63 x125 x68))
(assert (= x182 (and x57 (not x118))))
(assert (x289 x388))
(assert (x289 x427))
(assert (and (x249 400 x16) (x191 400 x16) (= (x296 400 x16) (* x16 400)) (x414 400 x16) (and (= (- (* x16 400) (* x16 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x16)) (= (- (* 400 (- x16 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x16 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x16 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 400 (- x16 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 400 (- x16 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 400 x16) (x258 400 x16)))
(assert (x289 x387))
(assert (and (x302 x371 2) (x232 x371 2) (x251 x371 2) (x213 x371 2) (= (- x371 (x175 1 x371)) (* (x277 x371 2) 2)) (=> (and (> 2 0) (< 0 x371)) (and (< (- x371 2) (* (x277 x371 2) 2)) (>= x371 (* 2 (x277 x371 2)))))))
(assert (and (x249 500 x86) (x191 500 x86) (= (x296 500 x86) (* x86 500)) (x414 500 x86) (and (= (- (* x86 500) (* x86 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x86)) (= (- (* 500 (- x86 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x86 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x86 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 500 (- x86 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 500 (- x86 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 500 x86) (x258 500 x86)))
(assert (= x332 (and x274 (not x293))))
(assert (x146 x68))
(assert (x289 x15))
(assert (= (and (not x233) x38) x226))
(assert (and (x249 2 x380) (x191 2 x380) (= (x296 2 x380) (* x380 2)) (x414 2 x380) (and (= (- (* x380 2) (* x380 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x380)) (= (- (* 2 (- x380 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x380 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x380 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 2 (- x380 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 2 (- x380 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 2 x380) (x258 2 x380)))
(assert (and (x249 3 x195) (x191 3 x195) (= (x296 3 x195) (* x195 3)) (x414 3 x195) (and (= (- (* x195 3) (* x195 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x195)) (= (- (* 3 (- x195 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x195 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x195 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 3 (- x195 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 3 (- x195 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 3 x195) (x258 3 x195)))
(assert (x146 x22))
(assert (x289 x197))
(assert (and (x249 2 x279) (x191 2 x279) (= (x296 2 x279) (* x279 2)) (x414 2 x279) (and (= (- (* x279 2) (* x279 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x279)) (= (- (* 2 (- x279 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x279 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x279 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 2 (- x279 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 2 (- x279 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 2 x279) (x258 2 x279)))
(assert (x144 x125 x68 x102 x22))
(assert (x289 x200))
(assert (x382 x68 (- x125 x63)))
(assert (x289 x263))
(assert (x204 x171))
(assert (x146 x222))
(assert (x146 x263))
(assert (x289 x363))
(assert (= x210 (=> (and (and (= x273 x170) (= (x277 x282 400) x170) (= x194 x285)) (and x320 (= x320 x71) (= x278 400) (= x134 false) (= x282 x363))) x318)))
(assert (= (and x260 (not x410)) x324))
(assert (x289 x355))
(assert (x289 x223))
(assert (x289 x415))
(assert (x288 x349))
(assert (x288 x377))
(assert (x289 x284))
(assert (= (and x220 (not x253)) x430))
(assert (x289 x386))
(assert (= x95 (and x124 x247)))
(assert (x289 x312))
(assert (x289 x132))
(assert (and (= (x296 27 3) 81) (= (x296 9 9) 81) (= (x296 3 3) 9) (= (x296 9 3) 27)))
(assert (x289 x399))
(assert (x289 x218))
(assert (x144 x264 x63 x68 x125))
(assert (and (x302 x282 400) (x251 x282 400) (x232 x282 400) (=> (and (> 400 0) (< 0 x282)) (and (< (- x282 400) (* (x277 x282 400) 400)) (>= x282 (* 400 (x277 x282 400))))) (x213 x282 400)))
(assert (= (and x39 x334) x145))
(assert (x382 x63 (- x264 x125)))
(assert (and (x249 500 x73) (x191 500 x73) (= (x296 500 x73) (* x73 500)) (x414 500 x73) (and (= (- (* x73 500) (* x73 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x73)) (= (- (* 500 (- x73 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x73 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x73 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 500 (- x73 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 500 (- x73 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 500 x73) (x258 500 x73)))
(assert (x289 x411))
(assert (x289 x250))
(assert (= x113 (and x332 x42)))
(assert (x289 x290))
(assert (x289 x375))
(assert (x314 x68 x125 x22 x102))
(assert (x289 x278))
(assert (x314 x125 x68 x264 x63))
(assert (and (x249 10 x51) (x191 10 x51) (= (x296 10 x51) (* x51 10)) (x414 10 x51) (and (= (- (* x51 10) (* x51 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x51)) (= (- (* 10 (- x51 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x51 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x51 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 10 (- x51 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 10 (- x51 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 10 x51) (x258 10 x51)))
(assert (x288 x282))
(assert (x382 x125 (- x68 x102)))
(assert (x314 x102 x22 x125 x68))
(assert (x146 x102))
(assert (x289 x322))
(assert (x288 400))
(assert (x289 x273))
(assert (x289 x300))
(assert (= (and (not x179) x226) x183))
(assert (= x315 (and x183 (not x71))))
(assert (x289 x376))
(assert (= (and (not x17) x324) x247))
(assert (x289 x63))
(assert (x146 x139))
(assert (x289 x331))
(assert (x289 x170))
(assert (x289 x407))
(assert (x382 x264 (- x63 x125)))
(assert (x289 x68))
(assert (x289 x178))
(assert (= (x261 149895259) (x393 149895259)))
(assert (x289 x73))
(assert (= (and x298 x13) x362))
(assert (x289 x259))
(assert (x146 (- x125 x63)))
(assert (x146 x150))
(assert (= x260 (and (not x90) x359)))
(assert (x382 x68 (- x125 x22)))
(assert (x289 x390))
(assert (x146 3))
(assert (and (x302 x47 400) (x251 x47 400) (x232 x47 400) (=> (and (> 400 0) (< 0 x47)) (and (< (- x47 400) (* (x277 x47 400) 400)) (>= x47 (* 400 (x277 x47 400))))) (x213 x47 400)))
(assert (and (x302 x196 2) (x232 x196 2) (x251 x196 2) (x213 x196 2) (= (- x196 (x175 1 x196)) (* (x277 x196 2) 2)) (=> (and (> 2 0) (< 0 x196)) (and (< (- x196 2) (* (x277 x196 2) 2)) (>= x196 (* 2 (x277 x196 2)))))))
(assert (x289 x181))
(assert (x146 (- x125 x22)))
(assert (and (x249 500 x187) (x191 500 x187) (= (x296 500 x187) (* x187 500)) (x414 500 x187) (and (= (- (* x187 500) (* x187 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) x187)) (= (- (* 500 (- x187 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x187 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639436) (- x187 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 500 (- x187 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 500 (- x187 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 500 x187) (x258 500 x187)))
(assert (x289 x188))
(assert (x289 x380))
(assert (= (and x315 x148) x67))
(assert (x288 10))
(assert (x382 x102 (- x22 x68)))
(assert (= x343 (and x57 x118)))
(assert (x289 x84))
(assert (x289 x354))
(assert (x314 x125 x68 x63 x264))
(assert (x289 x321))
(assert (= x335 (=> (and (= x428 x300) (= x379 x363) (= x74 x151) (= x217 x207) (= x207 x352) (= x217 x202) (= x228 (x287 (x393 x171))) (= x361 x372) (= x309 x361) (< 0 x171) (>= 1461501637330902918203684832716283019655932542975 x171) x122 (= x194 (and x383 x212)) (<= 0 x307) (= x352 x125) (= x4 1) (= x309 x229) (= x379 x68) (= x166 0) (= x252 x363) x381 (= (x184 (x393 x171)) x307) (not (= 149895259 x386)) (= x336 (= x356 0)) (= x383 x164) (= 400 x43) (= x202 x190) (= x207 x356) (= (= x252 0) x384) (= (>= x74 1) x122) (> x228 0) (= x256 x217) (= x355 x428) (= x21 0) (= x300 x363) (= (x296 x68 x125) x24) (= (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x24) x164) (not (= x386 1245370514)) (= x212 x431) (= x118 (or x336 x384)) (= 2685885107 x386) (= x300 x254) (= x136 0) (= (< 0 (x287 (x393 x171))) x381) (= (not (= x229 0)) x431) (= x32 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x151 x361) (= x115 x372)) (and (=> (and (and (= x311 x273) (= x89 x118) (= 0 x311) x89 (= x285 x194)) x118) x318) (=> (and (and (= x11 x118) (= (= x200 x366) x328) (= x309 x200) x347 (= x347 (not x11)) (= x366 x207)) (not x118)) (and (=> (and x328 (and (= x234 x328) (= x194 x285) x234 (= x317 x273) (= x363 x317))) x318) (=> (and (and (= (not x409) x186) (= x419 (= x340 x429)) (= x429 x363) (= x340 x309) (= x328 x409) x186) (not x328)) (and (=> (and x419 (and (= x285 x194) (= x142 x419) (= x273 x404) (= x404 x207) x142)) x318) (=> (and (and (= x308 x309) (= x193 x207) (= 2 x205) (= x419 x237) (= x189 (= x193 x294)) (= x119 (not x237)) (= x294 (* 2 x308)) x119) (not x419)) (and (=> (and x189 (and (= x176 x189) (= x316 (x365 (* 2 x270))) (= x285 x194) (= x286 2) x176 (= x273 x316) (= x363 x270))) x318) (=> (and (and (= x367 x363) x299 (= (* x408 2) x168) (= x90 (= x168 x367)) (= (not x224) x299) (= x408 x309) (= x291 2) (= x189 x224)) (not x189)) (and (=> (and x90 (and (= x160 x273) (= x194 x285) (= 2 x420) x304 (= x304 x90) (= (x365 (* 2 x279)) x160) (= x279 x207))) x318) (=> (and (not x90) (and (= x373 (not x112)) (= (* x380 2) x64) (= x207 x380) (= x90 x112) (= x309 x206) (= 2 x242) (= x410 (= x64 x206)) x373)) (and (=> (and (and (= (* x250 2) x61) x208 (= 2 x405) (= x363 x250) (= (not x389) x208) (= x309 x227) (= x410 x389) (= x17 (= x227 x61))) (not x410)) (and (=> (and (and (= x17 x403) (= x406 (* x195 3)) (= 3 x131) (= x207 x181) (= x124 (= x406 x181)) (= x185 (not x403)) (= x195 x309) x185) (not x17)) (and (=> (and (not x124) (and (= x30 x124) (= x26 (* 3 x23)) (= x23 x309) x110 (= x363 x399) (= x387 3) (= (not x30) x110) (= (= x26 x399) x253))) (and (=> (and x253 (and (= x369 x273) (= x128 x253) (= x285 x194) x128 (= x130 3) (= x207 x132) (= x369 (x365 (* x132 3))))) x318) (=> (and (and (= x114 (* 3 x137)) (= x253 x99) (= x309 x201) (= (= x201 x114) x123) (= x137 x207) (= (not x99) x231) (= 3 x272) x231) (not x253)) (and (=> x123 x325) (=> (and (and (= x363 x222) (= x123 x360) x92 (= (* x222 3) x344) (= x197 x309) (= (not x360) x92) (= x55 3) (= (= x197 x344) x293)) (not x123)) (and (=> (and (not x293) (and (= x309 x255) (= x207 x392) (= (= x40 x392) x42) x248 (= 10 x85) (= x45 x293) (= x248 (not x45)) (= (* x255 10) x40))) (and (=> (and (and (= x78 (= x29 x331)) (= x309 x198) (= x331 x363) (= x79 x42) x337 (= (not x79) x337) (= 10 x313) (= (* 10 x198) x29)) (not x42)) (and (=> (and (and x156 (= (* 10 x390) x346) (= x78 x10) (= 10 x330) (= x245 x309) (= (= x346 x245) x13) (= (not x10) x156) (= x207 x390)) (not x78)) (and (=> x13 x91) (=> (and (and (= 10 x111) (= x13 x319) (= x53 (* 10 x341)) (= (= x53 x290) x334) (= x310 (not x319)) (= x309 x290) (= x363 x341) x310) (not x13)) (and (=> x334 x9) (=> (and (not x334) (and (= 500 x265) (= (* 500 x187) x215) (= x187 x309) x83 (= x334 x219) (= x207 x269) (= (not x219) x83) (= (= x215 x269) x12))) (and (=> (and x12 (and (= x285 x194) (= 500 x388) (= x363 x402) (= x273 x374) (= (x365 (* x402 500)) x374) x271 (= x271 x12))) x318) (=> (and (not x12) (and (= x101 (* 500 x280)) (= x309 x280) (= (= x284 x101) x326) x103 (= 500 x375) (= x363 x284) (= x103 (not x105)) (= x105 x12))) (and (=> (and (not x326) (and (= x211 x326) (= x413 (* 500 x139)) (= x41 500) (= (not x211) x225) (= x397 (= x413 x412)) x225 (= x412 x309) (= x207 x139))) (and (=> (and (and (= x397 x46) (= (* 500 x73) x400) (= x73 x363) (= x295 (not x46)) (= x348 (= x415 x400)) x295 (= x309 x415) (= x169 500)) (not x397)) (and (=> x348 x418) (=> (and (not x348) (and x353 (= (not x8) x353) (= 400 x96) (= x8 x348) (= x3 (* 400 x16)) (= x309 x16) (= x233 (= x3 x140)) (= x207 x140))) (and (=> (and x233 (and (= x273 x199) (= x285 x194) (= x98 400) (= x233 x158) (= (x365 (* x77 400)) x199) x158 (= x77 x363))) x318) (=> (and (not x233) (and (= x309 x263) (= (* x263 400) x34) (= x432 x363) (= x66 x233) (= x159 (not x66)) x159 (= x84 400) (= (= x34 x432) x179))) (and (=> (and x179 (and x257 (= x273 x259) (= x207 x322) (= x167 400) (= x257 x179) (= x259 (x365 (* 400 x322))) (= x285 x194))) x318) (=> (and (and (= x179 x116) (= 400 x33) (= x150 x207) x180 (= (= x368 x244) x71) (= x244 x309) (= x368 (* 400 x150)) (= x180 (not x116))) (not x179)) (and (=> x71 x210) (=> (and (not x71) (and (= x71 x88) (= x148 (= x120 x93)) x18 (= (not x88) x18) (= (* x149 400) x120) (= x149 x363) (= x93 x309) (= x36 400))) (and (=> (and (not x148) (and (= x273 x358) (= (not x306) x70) (= x358 0) (= false x44) x70 (= x285 x44) (= x148 x306))) x318) (=> x148 x121))))))))))) (=> x397 x401))) (=> (and x326 (and (= x246 x273) (= x194 x285) (= x207 x86) (= x246 (x365 (* x86 500))) (= x378 500) x87 (= x87 x326))) x318))))))))) (=> (and x78 (and (= x194 x285) (= x345 10) (= x78 x7) x7 (= x376 x273) (= x207 x51) (= x376 (x365 (* x51 10))))) x318))) (=> (and x42 (and (= x129 (x365 (* 10 x203))) x58 (= x363 x203) (= x235 10) (= x129 x273) (= x42 x58) (= x194 x285))) x318))) (=> x293 x154))))))) (=> (and (and (= x363 x427) (= x285 x194) x165 (= 3 x312) (= x124 x165) (= x273 x411) (= x411 (x365 (* x427 3)))) x124) x318))) (=> x17 x391))) (=> x410 x214)))))))))))))))
(assert (x289 x235))
(assert (= x75 (and (not x334) x39)))
(assert (and (x249 10 x390) (x191 10 x390) (= (x296 10 x390) (* x390 10)) (x414 10 x390) (and (= (- (* x390 10) (* x390 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) x390)) (= (- (* 10 (- x390 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x390 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639926) (- x390 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 10 (- x390 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 10 (- x390 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 10 x390) (x258 10 x390)))
(assert (and (x249 400 x149) (x191 400 x149) (= (x296 400 x149) (* x149 400)) (x414 400 x149) (and (= (- (* x149 400) (* x149 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) x149)) (= (- (* 400 (- x149 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x149 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639536) (- x149 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 400 (- x149 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 400 (- x149 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 400 x149) (x258 400 x149)))
(assert (= x209 (and x123 x430)))
(assert (x289 x404))
(assert (= x91 (=> (and (and (= x285 x194) (= (x277 x349 10) x223) (= x223 x273)) (and (= x65 false) (= x349 x363) (= x333 x13) x333 (= x218 10))) x318)))
(assert (x289 x367))
(assert (x289 x102))
(assert (x289 x245))
(assert (= x171 (x422 (x393 x171))))
(assert (x288 x196))
(assert (= x50 (and x109 x326)))
(assert (x289 x14))
(assert (x289 x394))
(assert (x382 x68 (- x125 x264)))
(assert (x288 x37))
(assert (x382 x68 (- x125 x102)))
(assert (and (x302 x349 10) (x251 x349 10) (x232 x349 10) (=> (and (> 10 0) (< 0 x349)) (and (< (- x349 10) (* (x277 x349 10) 10)) (>= x349 (* 10 (x277 x349 10))))) (x213 x349 10)))
(assert (x289 x74))
(assert (x289 x106))
(assert (x289 x143))
(assert (= (and (not x123) x430) x274))
(assert (x146 x408))
(assert (x289 x196))
(assert (x146 (- x68 x22)))
(assert (x289 x266))
(assert (x289 x396))
(assert (x314 x63 x264 x68 x125))
(assert (= x57 true))
(assert (x289 x408))
(assert (x289 x47))
(assert (= (and x260 x410) x141))
(assert (x289 x330))
(assert (x144 x102 x22 x68 x125))
(assert (= (and x220 x253) x31))
(assert (x289 x136))
(assert (x146 (- x102 x125)))
(assert (and (x249 2 x408) (x191 2 x408) (= (x296 2 x408) (* x408 2)) (x414 2 x408) (and (= (- (* x408 2) (* x408 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x408)) (= (- (* 2 (- x408 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x408 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x408 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 2 (- x408 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 2 (- x408 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 2 x408) (x258 2 x408)))
(assert (x289 x49))
(assert (x146 x51))
(assert (x289 x195))
(assert (and (x249 3 x137) (x191 3 x137) (= (x296 3 x137) (* x137 3)) (x414 3 x137) (and (= (- (* x137 3) (* x137 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x137)) (= (- (* 3 (- x137 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x137 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x137 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 3 (- x137 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 3 (- x137 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 3 x137) (x258 3 x137)))
(assert (x314 x63 x264 x125 x68))
(assert (x289 x130))
(assert (x289 x217))
(assert (x314 x102 x22 x68 x125))
(assert (x146 (- x102 x68)))
(assert (x146 x402))
(assert (x289 x286))
(assert (and (x302 x424 3) (x251 x424 3) (x232 x424 3) (=> (and (> 3 0) (< 0 x424)) (and (< (- x424 3) (* (x277 x424 3) 3)) (>= x424 (* 3 (x277 x424 3))))) (x213 x424 3)))
(assert (x289 x366))
(assert (x289 x167))
(assert (x382 x22 (- x102 x125)))
(assert (x289 x151))
(assert (x289 x352))
(assert (x289 x311))
(assert (x146 x279))
(assert (x289 x137))
(assert (= (=> (and (and x174 (= false x135) (= x207 x407) (= x266 10) (= x174 x334)) (and (= x194 x285) (= x178 (x277 x407 10)) (= x178 x273))) x318) x9))
(assert (x314 x68 x125 x63 x264))
(assert (x289 x228))
(assert (x288 2))
(assert (x289 x313))
(assert (x146 x203))
(assert (x289 x392))
(assert (x146 (- x68 x264)))
(assert (x289 x85))
(assert (= (x393 1245370514) (x261 1245370514)))
(assert (x289 x307))
(assert (x144 x68 x125 x102 x22))
(assert (x289 x379))
(assert (x289 x254))
(assert (x288 3))
(assert (= (x422 (x261 2685885107)) 2685885107))
(assert (x289 x72))
(assert (x146 10))
(assert (= (x261 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x393 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x289 x264))
(assert (x382 x102 x22))
(assert (and (x249 3 x427) (x191 3 x427) (= (x296 3 x427) (* x427 3)) (x414 3 x427) (and (= (- (* x427 3) (* x427 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) x427)) (= (- (* 3 (- x427 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x427 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639933) (- x427 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 3 (- x427 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 3 (- x427 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 3 x427) (x258 3 x427)))
(assert (x288 x47))
(assert (=> (<= x171 10000) (= (x261 x171) (x393 x171))))
(assert (x289 x229))
(assert (= (=> (and (and (= x194 x285) (= x76 x273) (= (x277 x424 3) x76)) (and (= x207 x424) x127 (= x398 false) (= x293 x127) (= 3 x354))) x318) x154))
(assert (x289 x187))
(assert (x289 x205))
(assert (= (and x78 x81) x48))
(assert (x289 x270))
(assert (x289 x129))
(assert (x289 x265))
(assert (x289 x207))
(assert (x146 x187))
(assert (x289 x358))
(assert (x144 x68 x125 x264 x63))
(assert (= (x393 2685885107) (x261 2685885107)))
(assert (x146 (- x264 x125)))
(assert (= x80 (and x419 x370)))
(assert (x146 x137))
(assert (= (and x109 (not x326)) x19))
(assert (x289 x206))
(assert (and (x249 2 x250) (x191 2 x250) (= (x296 2 x250) (* x250 2)) (x414 2 x250) (and (= (- (* x250 2) (* x250 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) x250)) (= (- (* 2 (- x250 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (* (- x250 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 (- 115792089237316195423570985008687907853269984665640564039457584007913129639934) (- x250 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 2 (- x250 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x296 2 (- x250 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x216 2 x250) (x258 2 x250)))
(assert (x289 x239))
(assert (x289 x21))
(assert (x382 x125 (- x68 x264)))
(assert (and (x302 x407 10) (x251 x407 10) (x232 x407 10) (=> (and (> 10 0) (< 0 x407)) (and (< (- x407 10) (* (x277 x407 10) 10)) (>= x407 (* 10 (x277 x407 10))))) (x213 x407 10)))
(assert (= (and (not x419) x370) x357))
(assert (x146 (- x264 x68)))
(assert (x289 x111))
(assert (x146 x341))
(assert (x314 x125 x68 x22 x102))
(assert (x314 x125 x68 x102 x22))
(assert (x382 x102 (- x22 x125)))
(assert (= (and x416 (not x348)) x38))
(assert (x288 x424))
(assert (x289 x374))
(assert (x382 x264 (- x63 x68)))
(assert (= x416 (and (not x397) x19)))
(assert (x146 (- x22 x125)))
(assert (x288 x407))
(assert (x288 x371))
(assert (x289 x160))
(check-sat)
(exit)
