(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x102 0)) (((x1163 (x1350 Int)) (x419 (x896 x102) (x136 Int)) (x1186 (x869 x102) (x507 x102) (x148 Int)))))
(declare-fun x58 () Bool)
(declare-fun x203 (x102) Int)
(declare-fun x33 () Int)
(declare-fun x1156 () Int)
(declare-fun x1355 () Int)
(declare-fun x1345 () Bool)
(declare-fun x1283 () Int)
(declare-fun x333 () Int)
(declare-fun x464 () Int)
(declare-fun x925 () Int)
(declare-fun x1211 () Bool)
(declare-fun x403 () Bool)
(declare-fun x610 () Int)
(declare-fun x1250 () Bool)
(declare-fun x662 () Bool)
(declare-fun x1263 () Int)
(declare-fun x1073 () Int)
(declare-fun x1195 () Bool)
(declare-fun x1084 () Bool)
(declare-fun x846 () Bool)
(declare-fun x389 (x102) Int)
(declare-fun x1101 () Int)
(declare-fun x826 () Bool)
(declare-fun x786 () Int)
(declare-fun x581 () Int)
(declare-fun x1048 () Int)
(declare-fun x456 () Bool)
(declare-fun x517 () Int)
(declare-fun x959 () Bool)
(declare-fun x349 () Int)
(declare-fun x1243 () Int)
(declare-fun x1175 () Bool)
(declare-fun x131 () Int)
(declare-fun x792 () Int)
(declare-fun x898 () Int)
(declare-fun x957 () Int)
(declare-fun x397 () Int)
(declare-fun x1091 (x102) Int)
(declare-fun x149 () Int)
(declare-fun x598 () Int)
(declare-fun x944 () Int)
(declare-fun x974 () Int)
(declare-fun x74 () Int)
(declare-fun x66 () Int)
(declare-fun x1356 () Int)
(declare-fun x446 (x102) Int)
(declare-fun x385 () Int)
(declare-fun x41 () Bool)
(declare-fun x867 () Int)
(declare-fun x685 () Bool)
(declare-fun x1178 () Bool)
(declare-fun x698 () Int)
(declare-fun x1077 () Int)
(declare-fun x420 () Bool)
(declare-fun x630 () Int)
(declare-fun x1127 () Int)
(declare-fun x1003 () Bool)
(declare-fun x372 () Int)
(declare-fun x723 () Int)
(declare-fun x105 (x102) Int)
(declare-fun x1040 () Bool)
(declare-fun x204 () Int)
(declare-fun x516 () Bool)
(declare-fun x722 () Int)
(declare-fun x21 () x102)
(declare-fun x1325 () Int)
(declare-fun x844 () Int)
(declare-fun x1039 () Bool)
(declare-fun x1201 () Int)
(declare-fun x789 (Int) Int)
(declare-fun x611 () Int)
(declare-fun x637 () Int)
(declare-fun x368 () Bool)
(declare-fun x947 () Int)
(declare-fun x1150 () Bool)
(declare-fun x336 () Bool)
(declare-fun x1324 () Int)
(declare-fun x906 () Int)
(declare-fun x467 () Int)
(declare-fun x107 () Int)
(declare-fun x1105 () Int)
(declare-fun x733 () Bool)
(declare-fun x895 () Int)
(declare-fun x1339 () Int)
(declare-fun x1226 () Int)
(declare-fun x173 () Int)
(declare-fun x449 () Bool)
(declare-fun x642 () Int)
(declare-fun x144 () Int)
(declare-fun x292 (Int) Int)
(declare-fun x381 () Bool)
(declare-fun x511 () Int)
(declare-fun x866 () Int)
(declare-fun x1304 () Int)
(declare-fun x1197 () Bool)
(declare-fun x1343 () Int)
(declare-fun x996 () Bool)
(declare-fun x587 () Int)
(declare-fun x1253 () Int)
(declare-fun x575 () Int)
(declare-fun x495 () Bool)
(declare-fun x187 () Bool)
(declare-fun x672 () Int)
(declare-fun x625 () Int)
(declare-fun x579 () Int)
(declare-fun x245 () Int)
(declare-fun x50 () Int)
(declare-fun x239 () Int)
(declare-fun x1232 () Int)
(declare-fun x690 () Int)
(declare-fun x1221 () Bool)
(declare-fun x764 () Int)
(declare-fun x225 () Bool)
(declare-fun x212 () Bool)
(declare-fun x1068 () Int)
(declare-fun x183 () Bool)
(declare-fun x1208 () Bool)
(declare-fun x1273 () Bool)
(declare-fun x1271 () Int)
(declare-fun x7 () Bool)
(declare-fun x521 () Bool)
(declare-fun x167 () Int)
(declare-fun x1066 () Bool)
(declare-fun x265 () Bool)
(declare-fun x487 () Bool)
(declare-fun x1024 () Int)
(declare-fun x710 () Bool)
(declare-fun x832 () Bool)
(declare-fun x82 () Int)
(declare-fun x1309 () Int)
(declare-fun x429 () Bool)
(declare-fun x209 () Int)
(declare-fun x505 () x102)
(declare-fun x236 () Bool)
(declare-fun x1132 () x102)
(declare-fun x23 () Bool)
(declare-fun x542 () Int)
(declare-fun x123 () Bool)
(declare-fun x86 () x102)
(declare-fun x992 () Int)
(declare-fun x922 () Int)
(declare-fun x868 () Bool)
(declare-fun x63 () Int)
(declare-fun x1065 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x277 () Bool)
(declare-fun x1346 () Int)
(declare-fun x1176 () Int)
(declare-fun x737 () Bool)
(declare-fun x877 () Int)
(declare-fun x121 () Int)
(declare-fun x1332 () Bool)
(declare-fun x490 () x102)
(declare-fun x207 () Int)
(declare-fun x796 () Int)
(declare-fun x354 () Int)
(declare-fun x344 () Int)
(declare-fun x281 () Int)
(declare-fun x843 () Bool)
(declare-fun x676 () Int)
(declare-fun x463 () Int)
(declare-fun x534 () Bool)
(declare-fun x278 () Int)
(declare-fun x904 () Int)
(declare-fun x27 () Int)
(declare-fun x443 () Bool)
(declare-fun x751 () Int)
(declare-fun x497 () Bool)
(declare-fun x961 () x102)
(declare-fun x871 () Int)
(declare-fun x1323 () Int)
(declare-fun x560 () Bool)
(declare-fun x1116 () Bool)
(declare-fun x811 () Int)
(declare-fun x1279 () Bool)
(declare-fun x1204 () Int)
(declare-fun x280 () Int)
(declare-fun x221 () Bool)
(declare-fun x1314 () Int)
(declare-fun x399 () Bool)
(declare-fun x1185 () Bool)
(declare-fun x1230 () Bool)
(declare-fun x72 () Int)
(declare-fun x296 () Bool)
(declare-fun x52 () Bool)
(declare-fun x612 () Bool)
(declare-fun x1111 () Int)
(declare-fun x555 () Int)
(declare-fun x1333 () Int)
(declare-fun x348 () Int)
(declare-fun x178 () Int)
(declare-fun x480 () Int)
(declare-fun x55 () Bool)
(declare-fun x1053 () Int)
(declare-fun x669 () Bool)
(declare-fun x589 () Bool)
(declare-fun x591 () Bool)
(declare-fun x903 () Int)
(declare-fun x1167 () Int)
(declare-fun x1059 () Int)
(declare-fun x901 () Bool)
(declare-fun x1157 () Bool)
(declare-fun x769 () Bool)
(declare-fun x980 () Int)
(declare-fun x465 () Bool)
(declare-fun x530 () Bool)
(declare-fun x377 () Int)
(declare-fun x249 () Bool)
(declare-fun x520 () Int)
(declare-fun x98 () Int)
(declare-fun x1045 () Int)
(declare-fun x197 () Bool)
(declare-fun x1002 () Int)
(declare-fun x1152 () Bool)
(declare-fun x77 () Int)
(declare-fun x755 () Int)
(declare-fun x1102 () Int)
(declare-fun x308 () Int)
(declare-fun x1125 () Int)
(declare-fun x1225 () Int)
(declare-fun x921 () Bool)
(declare-fun x46 () Int)
(declare-fun x1137 () Int)
(declare-fun x473 () Int)
(declare-fun x528 () Int)
(declare-fun x288 () Bool)
(declare-fun x40 () Int)
(declare-fun x771 () Bool)
(declare-fun x217 () Bool)
(declare-fun x1249 () Bool)
(declare-fun x727 () Int)
(declare-fun x367 () Bool)
(declare-fun x619 () Bool)
(declare-fun x738 () Int)
(declare-fun x1173 () Int)
(declare-fun x132 () Int)
(declare-fun x916 () Bool)
(declare-fun x422 () Int)
(declare-fun x205 () Bool)
(declare-fun x1026 () Int)
(declare-fun x384 () Bool)
(declare-fun x969 () Int)
(declare-fun x67 () Int)
(declare-fun x53 () Int)
(declare-fun x432 () Int)
(declare-fun x1142 () Bool)
(declare-fun x609 () Bool)
(declare-fun x1169 () Int)
(declare-fun x1299 () Bool)
(declare-fun x194 () Int)
(declare-fun x1193 () Bool)
(declare-fun x635 () Int)
(declare-fun x967 () Bool)
(declare-fun x746 () Int)
(declare-fun x861 () Bool)
(declare-fun x1159 () Bool)
(declare-fun x629 () Int)
(declare-fun x986 () Int)
(declare-fun x418 () Bool)
(declare-fun x32 () Bool)
(declare-fun x894 () Int)
(declare-fun x188 () Int)
(declare-fun x804 () Int)
(declare-fun x1144 () Bool)
(declare-fun x435 () Int)
(declare-fun x380 () Int)
(declare-fun x667 () Bool)
(declare-fun x865 () Int)
(declare-fun x43 () Int)
(declare-fun x985 () Int)
(declare-fun x1316 () Int)
(declare-fun x1103 () Int)
(declare-fun x1311 () Int)
(declare-fun x47 () Int)
(declare-fun x412 () Bool)
(declare-fun x494 () Int)
(declare-fun x927 () Bool)
(declare-fun x408 () Bool)
(declare-fun x1067 () Int)
(declare-fun x553 () Int)
(declare-fun x306 () Int)
(declare-fun x159 () Bool)
(declare-fun x416 () Int)
(declare-fun x458 () Int)
(declare-fun x741 () Bool)
(declare-fun x1196 () Bool)
(declare-fun x845 () Int)
(declare-fun x756 () Int)
(declare-fun x171 () Int)
(declare-fun x355 () Int)
(declare-fun x317 () Int)
(declare-fun x5 () Int)
(declare-fun x1294 () Bool)
(declare-fun x406 () Bool)
(declare-fun x8 () Bool)
(declare-fun x568 () Bool)
(declare-fun x125 () Bool)
(declare-fun x817 () Bool)
(declare-fun x195 () Bool)
(declare-fun x1031 () Bool)
(declare-fun x558 () Int)
(declare-fun x215 () Bool)
(declare-fun x1049 () Bool)
(declare-fun x781 () Int)
(declare-fun x1353 () Int)
(declare-fun x1171 () Int)
(declare-fun x951 () Int)
(declare-fun x851 () Bool)
(declare-fun x1240 () Int)
(declare-fun x678 () Int)
(declare-fun x633 () Bool)
(declare-fun x1227 () Int)
(declare-fun x641 () Int)
(declare-fun x849 () Int)
(declare-fun x54 () Bool)
(declare-fun x100 () Bool)
(declare-fun x797 () Int)
(declare-fun x1078 () Bool)
(declare-fun x839 () Int)
(declare-fun x850 () Int)
(declare-fun x1136 () Int)
(declare-fun x1083 () Int)
(declare-fun x1303 () Int)
(declare-fun x646 () Int)
(declare-fun x199 () Bool)
(declare-fun x267 () Bool)
(declare-fun x556 () Int)
(declare-fun x411 () Bool)
(declare-fun x486 () Bool)
(declare-fun x387 () Bool)
(declare-fun x1158 () Int)
(declare-fun x276 () Int)
(declare-fun x65 () Bool)
(declare-fun x1082 () Bool)
(declare-fun x78 () Int)
(declare-fun x513 () Int)
(declare-fun x139 () Int)
(declare-fun x1364 () Bool)
(declare-fun x648 () Int)
(declare-fun x118 () Bool)
(declare-fun x1080 (Int) x102)
(declare-fun x400 () Int)
(declare-fun x660 () Int)
(declare-fun x147 () Bool)
(declare-fun x282 () Bool)
(declare-fun x1047 () Int)
(declare-fun x889 () Bool)
(declare-fun x1308 () Int)
(declare-fun x94 () Int)
(declare-fun x1085 () Int)
(declare-fun x108 () Bool)
(declare-fun x1113 () Int)
(declare-fun x1009 () Bool)
(declare-fun x1331 () Int)
(declare-fun x1086 () Int)
(declare-fun x310 () Int)
(declare-fun x964 () Int)
(declare-fun x259 () Int)
(declare-fun x680 () Int)
(declare-fun x923 () Bool)
(declare-fun x1160 () Int)
(declare-fun x628 () Int)
(declare-fun x152 () Bool)
(declare-fun x392 () Bool)
(declare-fun x266 () Int)
(declare-fun x18 () Int)
(declare-fun x803 () Int)
(declare-fun x182 () Int)
(declare-fun x1081 () Bool)
(declare-fun x476 () Int)
(declare-fun x1280 (Int) Int)
(declare-fun x356 () Int)
(declare-fun x506 () Int)
(declare-fun x322 () Int)
(declare-fun x470 () Int)
(declare-fun x772 () Bool)
(declare-fun x1179 () Int)
(declare-fun x518 () Bool)
(declare-fun x823 () Int)
(declare-fun x29 () Int)
(declare-fun x383 () Int)
(declare-fun x326 () Bool)
(declare-fun x852 () Bool)
(declare-fun x1146 () Int)
(declare-fun x847 () Bool)
(declare-fun x583 () Bool)
(declare-fun x1287 () Bool)
(declare-fun x971 () Bool)
(declare-fun x141 () Bool)
(declare-fun x1006 () Int)
(declare-fun x264 () Int)
(declare-fun x1245 () Int)
(declare-fun x533 () Bool)
(declare-fun x983 () Int)
(declare-fun x1055 () Int)
(declare-fun x185 () Int)
(declare-fun x807 () Bool)
(declare-fun x806 () Int)
(declare-fun x706 () Bool)
(declare-fun x995 () Int)
(declare-fun x342 () Int)
(declare-fun x401 () Int)
(declare-fun x177 () Int)
(declare-fun x602 () Int)
(declare-fun x331 () Int)
(declare-fun x1237 () Bool)
(declare-fun x801 () Int)
(declare-fun x708 () Int)
(declare-fun x876 () Int)
(declare-fun x729 () Int)
(declare-fun x1199 () Int)
(declare-fun x828 () Bool)
(declare-fun x813 () Int)
(declare-fun x1219 () Bool)
(declare-fun x56 () Int)
(declare-fun x1306 () Int)
(declare-fun x415 () Int)
(declare-fun x1007 () Bool)
(declare-fun x269 () Bool)
(declare-fun x168 () Bool)
(declare-fun x1041 () Int)
(declare-fun x428 () Int)
(declare-fun x175 () Int)
(declare-fun x988 () Bool)
(declare-fun x1138 () Int)
(declare-fun x186 () Bool)
(declare-fun x257 () Int)
(declare-fun x1269 () Bool)
(declare-fun x106 () Int)
(declare-fun x1302 () Bool)
(declare-fun x981 () Bool)
(declare-fun x430 () Bool)
(declare-fun x431 () Bool)
(declare-fun x3 () Bool)
(declare-fun x687 () Bool)
(declare-fun x1029 () Bool)
(declare-fun x666 () Bool)
(declare-fun x76 () Bool)
(declare-fun x661 () Bool)
(declare-fun x417 () Bool)
(declare-fun x794 () Bool)
(declare-fun x1018 () Int)
(declare-fun x702 () Bool)
(declare-fun x730 () Bool)
(declare-fun x294 () Bool)
(declare-fun x447 () Int)
(declare-fun x1051 () Int)
(declare-fun x650 () Int)
(declare-fun x287 () Int)
(declare-fun x1032 () Int)
(declare-fun x549 () Bool)
(declare-fun x618 () Int)
(declare-fun x735 () Bool)
(declare-fun x655 () Int)
(declare-fun x821 () Int)
(declare-fun x101 () Int)
(declare-fun x504 (Int) Int)
(declare-fun x1366 () Int)
(declare-fun x222 () Bool)
(declare-fun x364 () Bool)
(declare-fun x114 () Bool)
(declare-fun x940 () Bool)
(declare-fun x686 () Bool)
(declare-fun x808 () Int)
(declare-fun x878 () x102)
(declare-fun x539 () Bool)
(declare-fun x122 () Bool)
(declare-fun x145 () Int)
(declare-fun x594 () Bool)
(declare-fun x1154 () Int)
(declare-fun x783 () Int)
(declare-fun x61 () Bool)
(declare-fun x104 () Int)
(declare-fun x1270 () Int)
(declare-fun x1289 () Bool)
(declare-fun x1251 () Int)
(declare-fun x268 () Int)
(declare-fun x229 () Int)
(declare-fun x483 () Bool)
(declare-fun x501 () Int)
(declare-fun x683 () Int)
(declare-fun x378 () Bool)
(declare-fun x1244 () Int)
(declare-fun x1312 () Int)
(declare-fun x469 () Int)
(declare-fun x745 () Int)
(declare-fun x376 () Int)
(declare-fun x1074 () Int)
(declare-fun x1351 () Int)
(declare-fun x1315 () Bool)
(declare-fun x241 () Int)
(declare-fun x1200 () Bool)
(declare-fun x544 () Int)
(declare-fun x547 () Int)
(declare-fun x677 () Bool)
(declare-fun x2 () Int)
(declare-fun x907 () Int)
(declare-fun x604 () Int)
(declare-fun x155 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x371 () Int)
(declare-fun x126 () Bool)
(declare-fun x404 () Int)
(declare-fun x216 () Int)
(declare-fun x562 () Int)
(declare-fun x840 () Int)
(declare-fun x918 () Int)
(declare-fun x914 () Int)
(declare-fun x1348 () Bool)
(declare-fun x834 () Bool)
(declare-fun x510 () Bool)
(declare-fun x514 () Bool)
(declare-fun x790 () Int)
(declare-fun x460 () Int)
(declare-fun x42 () Bool)
(declare-fun x128 () Bool)
(declare-fun x312 () Bool)
(declare-fun x1075 () Int)
(declare-fun x1317 () Bool)
(declare-fun x438 () Int)
(declare-fun x1327 () Bool)
(declare-fun x260 () Bool)
(declare-fun x345 () Bool)
(declare-fun x932 () Int)
(declare-fun x1213 () Bool)
(declare-fun x218 () Bool)
(declare-fun x622 () Bool)
(declare-fun x498 () Int)
(declare-fun x573 () Int)
(declare-fun x1252 () Int)
(declare-fun x319 (x102) Int)
(declare-fun x454 () Int)
(declare-fun x314 () Int)
(declare-fun x461 () Int)
(declare-fun x1288 () Int)
(declare-fun x624 () Int)
(declare-fun x113 () Int)
(declare-fun x857 () Int)
(declare-fun x1228 () Bool)
(declare-fun x883 () Bool)
(declare-fun x890 () Bool)
(declare-fun x1218 () Int)
(declare-fun x1058 () x102)
(declare-fun x219 () Bool)
(declare-fun x855 () Int)
(declare-fun x535 () Int)
(declare-fun x725 () Bool)
(declare-fun x379 () Bool)
(declare-fun x471 () Bool)
(declare-fun x1118 (x102) Int)
(declare-fun x90 () Int)
(declare-fun x1165 () Bool)
(declare-fun x34 () Int)
(declare-fun x302 (Int) Int)
(declare-fun x1145 () Bool)
(declare-fun x289 () Int)
(declare-fun x1307 () Int)
(declare-fun x875 () Int)
(declare-fun x1035 () Bool)
(declare-fun x1255 () Bool)
(declare-fun x990 () Int)
(declare-fun x235 () x102)
(declare-fun x1365 () Bool)
(declare-fun x22 () Bool)
(declare-fun x28 () Bool)
(declare-fun x593 () Bool)
(declare-fun x238 () Bool)
(declare-fun x1298 () Int)
(declare-fun x120 () Int)
(declare-fun x321 () Bool)
(declare-fun x691 () Int)
(declare-fun x374 () Int)
(declare-fun x424 () Int)
(declare-fun x1231 () Bool)
(declare-fun x1124 () Int)
(declare-fun x1120 () Int)
(declare-fun x1044 () Bool)
(declare-fun x802 () Int)
(declare-fun x1265 () Int)
(declare-fun x1209 () Int)
(declare-fun x1060 () Int)
(declare-fun x158 () Int)
(declare-fun x623 () Int)
(declare-fun x571 () Int)
(declare-fun x202 () Bool)
(declare-fun x311 () Bool)
(declare-fun x214 () Int)
(declare-fun x1262 () Bool)
(declare-fun x112 () Int)
(declare-fun x115 () Bool)
(declare-fun x1330 () Int)
(declare-fun x561 () Bool)
(declare-fun x652 () Int)
(declare-fun x489 (Int) Int)
(declare-fun x57 () Bool)
(declare-fun x1141 () Int)
(declare-fun x724 () Int)
(declare-fun x559 () Bool)
(declare-fun x1282 () Int)
(declare-fun x1336 () Int)
(declare-fun x92 () Int)
(declare-fun x815 () Int)
(declare-fun x998 () Int)
(declare-fun x862 () Int)
(declare-fun x908 () Int)
(declare-fun x1014 () Int)
(declare-fun x945 () Int)
(declare-fun x1119 () Int)
(declare-fun x413 () Int)
(declare-fun x323 () Int)
(declare-fun x362 () Bool)
(declare-fun x782 () Int)
(declare-fun x536 () Bool)
(declare-fun x1257 () Int)
(declare-fun x712 () Int)
(declare-fun x68 () Int)
(declare-fun x44 () Int)
(declare-fun x60 () Int)
(declare-fun x950 () Bool)
(declare-fun x20 () Bool)
(declare-fun x181 () Int)
(declare-fun x647 () Bool)
(declare-fun x466 () Int)
(declare-fun x1079 () Int)
(declare-fun x758 () Int)
(declare-fun x481 () Bool)
(declare-fun x1326 () Int)
(declare-fun x515 () Int)
(declare-fun x337 () Int)
(declare-fun x1128 () Int)
(declare-fun x887 () Int)
(declare-fun x997 () Bool)
(declare-fun x984 () Int)
(declare-fun x1148 () Bool)
(declare-fun x920 () Int)
(declare-fun x89 () Int)
(declare-fun x1284 () Bool)
(declare-fun x973 () Bool)
(declare-fun x709 () Bool)
(declare-fun x757 () Bool)
(declare-fun x551 () Int)
(declare-fun x361 () Bool)
(declare-fun x1296 () Int)
(declare-fun x1215 () Int)
(declare-fun x955 () Bool)
(declare-fun x327 () Bool)
(declare-fun x499 () Int)
(declare-fun x1020 () x102)
(declare-fun x482 () Int)
(declare-fun x1092 () Bool)
(declare-fun x298 () Bool)
(declare-fun x742 () Int)
(declare-fun x206 () Bool)
(declare-fun x330 () Int)
(declare-fun x531 () Bool)
(declare-fun x137 () Int)
(declare-fun x546 () Int)
(declare-fun x1168 () Int)
(declare-fun x989 () Int)
(declare-fun x596 () Int)
(declare-fun x697 () Int)
(declare-fun x934 () Int)
(declare-fun x1008 (Int) Int)
(declare-fun x234 () Int)
(declare-fun x605 () Bool)
(declare-fun x243 () Int)
(declare-fun x570 () Bool)
(declare-fun x965 (Int Int) Int)
(declare-fun x1117 () Bool)
(declare-fun x358 () Int)
(declare-fun x863 () Int)
(declare-fun x324 () Bool)
(declare-fun x548 () Bool)
(declare-fun x30 () Int)
(declare-fun x784 () Bool)
(declare-fun x184 () Int)
(declare-fun x1264 () Int)
(declare-fun x1131 () Int)
(declare-fun x286 () Bool)
(declare-fun x550 () Bool)
(declare-fun x1130 () Int)
(declare-fun x1 () Int)
(declare-fun x192 () Int)
(declare-fun x452 () Int)
(declare-fun x457 () Int)
(declare-fun x1313 () Int)
(declare-fun x19 () Bool)
(declare-fun x754 () Int)
(declare-fun x1011 () Int)
(declare-fun x304 () Int)
(declare-fun x1038 () Bool)
(declare-fun x537 () Int)
(declare-fun x315 () Int)
(declare-fun x1276 () Bool)
(declare-fun x993 () Int)
(declare-fun x341 () Int)
(declare-fun x599 (Int Int) Int)
(declare-fun x603 () Int)
(declare-fun x35 () Int)
(declare-fun x1161 () Bool)
(declare-fun x1207 () Int)
(declare-fun x768 () x102)
(declare-fun x26 () Bool)
(declare-fun x485 () Int)
(declare-fun x936 () Bool)
(declare-fun x25 () Bool)
(declare-fun x1133 () Bool)
(declare-fun x97 () x102)
(declare-fun x1126 () Bool)
(declare-fun x799 () Bool)
(declare-fun x899 () Int)
(declare-fun x70 () Int)
(declare-fun x1337 () Int)
(declare-fun x939 () Int)
(declare-fun x713 () Bool)
(declare-fun x138 () Bool)
(declare-fun x1293 () Int)
(declare-fun x237 () Int)
(declare-fun x617 () x102)
(declare-fun x765 () Int)
(declare-fun x9 () Bool)
(declare-fun x255 () Bool)
(declare-fun x671 () Bool)
(declare-fun x290 () Int)
(declare-fun x350 () Int)
(declare-fun x937 () Bool)
(declare-fun x1188 () Int)
(declare-fun x656 () Int)
(declare-fun x318 () Bool)
(declare-fun x736 () Int)
(declare-fun x359 () Int)
(declare-fun x1347 () Int)
(declare-fun x1177 () Int)
(declare-fun x606 () Int)
(declare-fun x1001 () Int)
(declare-fun x909 () Bool)
(declare-fun x299 () Int)
(declare-fun x508 () Int)
(declare-fun x726 () Bool)
(declare-fun x576 () Bool)
(declare-fun x334 () Int)
(declare-fun x1281 () Int)
(declare-fun x142 () Int)
(declare-fun x1072 () Int)
(declare-fun x208 () Int)
(declare-fun x893 () Bool)
(declare-fun x824 () Int)
(declare-fun x701 () Bool)
(declare-fun x444 () Bool)
(declare-fun x166 () Bool)
(declare-fun x1164 () Int)
(declare-fun x538 () x102)
(declare-fun x223 () Int)
(declare-fun x770 () Int)
(declare-fun x858 () Bool)
(declare-fun x1274 () Bool)
(declare-fun x915 () Bool)
(declare-fun x391 () Bool)
(declare-fun x1115 () Int)
(declare-fun x1069 () Bool)
(declare-fun x976 () Bool)
(declare-fun x1258 () Int)
(declare-fun x1236 () Bool)
(declare-fun x365 () Bool)
(declare-fun x1275 () Int)
(declare-fun x626 () Bool)
(declare-fun x597 (x102) Int)
(declare-fun x1349 () Bool)
(declare-fun x1295 () Int)
(declare-fun x1192 () Bool)
(declare-fun x193 () Int)
(declare-fun x179 () Int)
(declare-fun x1318 () Int)
(declare-fun x1140 () Int)
(declare-fun x263 () Bool)
(declare-fun x1212 () Int)
(declare-fun x595 () Bool)
(declare-fun x1016 () Int)
(declare-fun x1277 () Bool)
(declare-fun x1352 () Bool)
(declare-fun x1063 () Int)
(declare-fun x643 () Int)
(declare-fun x831 () Bool)
(declare-fun x248 () Int)
(declare-fun x275 () Int)
(declare-fun x220 () Bool)
(declare-fun x1360 () Int)
(declare-fun x1256 () Bool)
(declare-fun x829 () Int)
(declare-fun x577 () Int)
(declare-fun x1292 () Bool)
(declare-fun x695 () Int)
(declare-fun x496 () Int)
(declare-fun x500 () Bool)
(declare-fun x793 () Bool)
(declare-fun x649 () Bool)
(declare-fun x154 () Int)
(declare-fun x1013 () Int)
(declare-fun x931 (Int) Int)
(declare-fun x1062 () Bool)
(declare-fun x1233 () Int)
(declare-fun x477 () Int)
(declare-fun x1239 () Int)
(declare-fun x117 () Int)
(declare-fun x10 () Int)
(declare-fun x816 () Int)
(declare-fun x1210 () Bool)
(declare-fun x99 () Int)
(declare-fun x956 () Bool)
(declare-fun x1012 () x102)
(declare-fun x885 () Int)
(declare-fun x748 () Bool)
(declare-fun x696 () x102)
(declare-fun x572 () Int)
(declare-fun x1320 () Int)
(declare-fun x156 () Bool)
(declare-fun x775 () Int)
(declare-fun x835 () Bool)
(declare-fun x651 () Bool)
(declare-fun x1052 () Int)
(declare-fun x929 () Int)
(declare-fun x825 () Bool)
(declare-fun x453 () Bool)
(declare-fun x615 () Bool)
(declare-fun x69 () Int)
(declare-fun x1107 () Int)
(declare-fun x658 () Int)
(declare-fun x1143 () Int)
(declare-fun x468 () Int)
(declare-fun x879 () Int)
(declare-fun x720 () Bool)
(declare-fun x4 () Int)
(declare-fun x1321 () Bool)
(declare-fun x423 () Bool)
(declare-fun x1015 () Int)
(declare-fun x1224 () Bool)
(declare-fun x1172 () Bool)
(declare-fun x675 () Int)
(declare-fun x95 () Int)
(declare-fun x1329 () Bool)
(declare-fun x393 (x102) Int)
(declare-fun x1268 () Int)
(declare-fun x445 () Int)
(declare-fun x1135 () Int)
(declare-fun x761 () Int)
(declare-fun x262 () Bool)
(declare-fun x912 () Int)
(declare-fun x532 () Bool)
(declare-fun x743 () Bool)
(declare-fun x1110 () Int)
(declare-fun x588 () Int)
(declare-fun x601 () Bool)
(declare-fun x1005 () Int)
(declare-fun x87 () Bool)
(declare-fun x1030 () Bool)
(declare-fun x841 () Int)
(declare-fun x798 () Bool)
(declare-fun x434 () Int)
(declare-fun x450 () Bool)
(declare-fun x809 () Int)
(declare-fun x884 () Int)
(declare-fun x15 () Int)
(declare-fun x740 () Bool)
(declare-fun x880 () Int)
(declare-fun x719 () Int)
(declare-fun x293 () Int)
(declare-fun x952 () Bool)
(declare-fun x201 () Int)
(declare-fun x11 () x102)
(declare-fun x313 () Int)
(declare-fun x405 () Int)
(declare-fun x632 () Int)
(declare-fun x169 () Int)
(declare-fun x552 () Int)
(declare-fun x1248 () Bool)
(declare-fun x370 () Bool)
(declare-fun x151 () Bool)
(declare-fun x1235 () Int)
(declare-fun x340 () Bool)
(declare-fun x160 () x102)
(declare-fun x739 () Int)
(declare-fun x176 () Bool)
(declare-fun x14 () Int)
(declare-fun x777 () Int)
(declare-fun x1342 () Bool)
(declare-fun x1033 () Int)
(declare-fun x1234 () Bool)
(declare-fun x960 () Bool)
(declare-fun x96 () Int)
(declare-fun x963 () Int)
(declare-fun x119 () Int)
(declare-fun x638 () Bool)
(declare-fun x987 () Bool)
(declare-fun x1129 () Int)
(declare-fun x140 () Int)
(declare-fun x80 () Int)
(declare-fun x563 () Int)
(declare-fun x991 (Int Int) Int)
(declare-fun x135 () Bool)
(declare-fun x715 () Int)
(declare-fun x814 () Bool)
(declare-fun x224 () Int)
(declare-fun x373 () Bool)
(declare-fun x716 () Bool)
(declare-fun x1361 () Bool)
(declare-fun x734 () Int)
(declare-fun x613 () Bool)
(declare-fun x226 () Bool)
(declare-fun x1247 () Bool)
(declare-fun x645 () Int)
(declare-fun x1134 () Int)
(declare-fun x84 () Int)
(declare-fun x705 () Int)
(declare-fun x242 () Bool)
(declare-fun x36 () Bool)
(declare-fun x493 () Bool)
(declare-fun x703 () Int)
(declare-fun x279 () Int)
(declare-fun x437 () Bool)
(declare-fun x283 () Bool)
(declare-fun x752 () Int)
(declare-fun x172 () Int)
(declare-fun x73 () Int)
(declare-fun x1061 () Bool)
(declare-fun x395 () Bool)
(declare-fun x608 () Bool)
(declare-fun x1344 () Bool)
(declare-fun x291 () Bool)
(declare-fun x707 () Int)
(declare-fun x688 () Int)
(declare-fun x39 () x102)
(declare-fun x592 () Int)
(declare-fun x888 () Int)
(declare-fun x316 () x102)
(declare-fun x684 () Int)
(declare-fun x509 (x102) Int)
(declare-fun x1021 () Bool)
(declare-fun x681 () Int)
(declare-fun x1259 () Int)
(declare-fun x1093 () Int)
(declare-fun x819 () Bool)
(declare-fun x1322 () Bool)
(declare-fun x837 () Int)
(declare-fun x472 (Int) Int)
(declare-fun x59 () Int)
(declare-fun x1089 () Int)
(declare-fun x1162 () Bool)
(declare-fun x565 (Int) Int)
(declare-fun x459 () Int)
(declare-fun x439 () Int)
(declare-fun x250 () Int)
(declare-fun x585 () Int)
(declare-fun x343 () Int)
(declare-fun x1057 () Int)
(declare-fun x759 () Int)
(declare-fun x627 () Int)
(declare-fun x1358 () Bool)
(declare-fun x231 () Bool)
(declare-fun x45 () Bool)
(declare-fun x787 () Bool)
(declare-fun x1025 () Int)
(declare-fun x1206 () Bool)
(declare-fun x639 () Int)
(declare-fun x1017 () Int)
(declare-fun x303 () Int)
(declare-fun x211 () Int)
(declare-fun x954 () Bool)
(declare-fun x285 () Bool)
(declare-fun x1216 () Int)
(declare-fun x1174 () Bool)
(declare-fun x812 () Bool)
(declare-fun x1328 () Int)
(declare-fun x1297 () Int)
(declare-fun x110 () Bool)
(declare-fun x339 () Int)
(declare-fun x653 () Int)
(declare-fun x773 () Bool)
(declare-fun x524 () Int)
(declare-fun x586 () Bool)
(declare-fun x854 () Bool)
(declare-fun x700 () Bool)
(declare-fun x842 (x102) Int)
(declare-fun x448 () Int)
(declare-fun x856 () Int)
(declare-fun x644 () Bool)
(declare-fun x636 () Int)
(declare-fun x1099 () Int)
(declare-fun x196 () Bool)
(declare-fun x475 () Bool)
(declare-fun x1203 () Bool)
(declare-fun x64 () Bool)
(declare-fun x1023 () Int)
(declare-fun x670 () Int)
(declare-fun x543 () Bool)
(declare-fun x338 () Int)
(declare-fun x1180 () Bool)
(declare-fun x1019 () Int)
(declare-fun x451 () Int)
(declare-fun x519 () Int)
(declare-fun x718 () Bool)
(declare-fun x360 () Int)
(declare-fun x1301 () Int)
(declare-fun x924 () Int)
(declare-fun x779 () Bool)
(declare-fun x1087 () Int)
(declare-fun x127 () Int)
(declare-fun x1090 () Int)
(declare-fun x491 () Int)
(declare-fun x254 () Bool)
(declare-fun x928 () Int)
(declare-fun x689 () Int)
(declare-fun x161 () Int)
(declare-fun x728 () Int)
(declare-fun x369 () Bool)
(declare-fun x776 () Bool)
(declare-fun x654 () Int)
(declare-fun x232 () Int)
(declare-fun x272 () Int)
(declare-fun x569 () Int)
(declare-fun x244 () Bool)
(declare-fun x900 () Bool)
(declare-fun x897 () Int)
(declare-fun x1189 () Int)
(declare-fun x1109 () Int)
(declare-fun x948 () Int)
(declare-fun x679 () Bool)
(declare-fun x942 () Bool)
(declare-fun x557 () Bool)
(declare-fun x749 () Int)
(declare-fun x1183 () Bool)
(declare-fun x766 () Int)
(declare-fun x165 () Bool)
(declare-fun x795 () Int)
(declare-fun x24 () Bool)
(declare-fun x394 () Bool)
(declare-fun x1286 () Bool)
(declare-fun x753 () Int)
(declare-fun x1246 () Int)
(declare-fun x1194 () Int)
(declare-fun x247 () Int)
(declare-fun x930 () Int)
(declare-fun x366 () Int)
(declare-fun x838 () Int)
(declare-fun x760 () Int)
(declare-fun x674 () Int)
(declare-fun x1121 () Int)
(declare-fun x409 (Int Int) Int)
(declare-fun x284 () Int)
(declare-fun x398 () Int)
(declare-fun x1000 () Int)
(declare-fun x462 () Int)
(declare-fun x853 () Int)
(declare-fun x827 () Bool)
(declare-fun x938 () Bool)
(declare-fun x810 () Int)
(declare-fun x85 () Bool)
(declare-fun x309 () Int)
(declare-fun x1034 () Bool)
(declare-fun x295 () Int)
(declare-fun x352 () Int)
(declare-fun x1242 () Int)
(declare-fun x1028 () Bool)
(declare-fun x233 () Bool)
(declare-fun x363 () Bool)
(declare-fun x763 () Int)
(declare-fun x1076 () Int)
(declare-fun x1114 () Bool)
(declare-fun x682 () Bool)
(declare-fun x335 () Int)
(declare-fun x16 () Int)
(declare-fun x566 () Bool)
(declare-fun x51 () Bool)
(declare-fun x325 () Bool)
(declare-fun x640 () Int)
(declare-fun x1149 () Int)
(declare-fun x943 () Bool)
(declare-fun x502 () Bool)
(declare-fun x584 () Bool)
(declare-fun x357 () Int)
(declare-fun x540 () Int)
(declare-fun x1300 () Bool)
(declare-fun x982 () Int)
(declare-fun x273 () Bool)
(declare-fun x1004 () Bool)
(declare-fun x390 () Int)
(declare-fun x731 () x102)
(declare-fun x455 () Bool)
(declare-fun x1291 () Int)
(declare-fun x848 () Bool)
(declare-fun x261 () Int)
(declare-fun x157 () Bool)
(declare-fun x174 () Int)
(declare-fun x198 () Int)
(declare-fun x1319 () Bool)
(declare-fun x1104 () Bool)
(declare-fun x31 () Int)
(declare-fun x744 () Bool)
(declare-fun x590 () Int)
(declare-fun x200 () Int)
(declare-fun x905 () Bool)
(declare-fun x911 () Bool)
(declare-fun x525 () Bool)
(declare-fun x704 (Int Int) Int)
(declare-fun x1205 () Int)
(declare-fun x396 () Bool)
(declare-fun x253 () Int)
(declare-fun x665 () Int)
(declare-fun x258 () Bool)
(declare-fun x492 () Int)
(declare-fun x567 () Int)
(declare-fun x872 () Bool)
(declare-fun x747 () Int)
(declare-fun x191 () Int)
(declare-fun x37 () Int)
(declare-fun x926 () Int)
(declare-fun x1266 () Int)
(declare-fun x129 () Bool)
(declare-fun x1037 () Bool)
(declare-fun x774 () Int)
(declare-fun x659 () Bool)
(declare-fun x1359 () Int)
(declare-fun x785 () Bool)
(declare-fun x818 () Int)
(declare-fun x1181 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x833 () Bool)
(declare-fun x873 () Int)
(declare-fun x305 () Bool)
(declare-fun x979 () Bool)
(declare-fun x93 () Int)
(declare-fun x1170 () Int)
(declare-fun x1285 () Bool)
(declare-fun x252 () Int)
(declare-fun x62 () Int)
(declare-fun x425 () Int)
(declare-fun x71 () Int)
(declare-fun x1155 () Int)
(declare-fun x968 () Bool)
(declare-fun x1088 () Int)
(declare-fun x240 () Bool)
(declare-fun x83 () Bool)
(declare-fun x953 () Int)
(declare-fun x663 () Int)
(declare-fun x933 () Int)
(declare-fun x274 () Bool)
(declare-fun x634 () Int)
(declare-fun x522 () Bool)
(declare-fun x6 () Bool)
(declare-fun x614 () Int)
(declare-fun x978 () Int)
(declare-fun x81 () Int)
(declare-fun x864 () Int)
(declare-fun x762 () Bool)
(declare-fun x1340 () Int)
(declare-fun x1222 () Bool)
(declare-fun x564 () Int)
(declare-fun x426 () Int)
(declare-fun x621 () Int)
(define-fun x1335 ((x102 x102) (x714 Int)) x102 (ite ((_ is x419) x102) (x419 (x896 x102) (+ (x136 x102) x714)) (ite ((_ is x1186) x102) (x1186 (x869 x102) (x507 x102) (+ (x148 x102) x714)) (x1163 (+ (x1350 x102) x714)))))
(define-fun x750 ((x527 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x527) (<= 0 x527)) x527 (- x527 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x124 ((x527 Int)) Int (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x527) (> 0 x527)) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x527) x527))
(define-fun x711 ((x527 Int)) Int (ite (and (< x527 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x527 0)) x527 (ite (and (< x527 231584178474632390847141970017375815706539969331281128078915168015826259279872) (>= x527 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- x527 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936) x527) (< x527 0)) (+ x527 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x409 x527 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x600 ((x1261 Int)) Bool (and (< x1261 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= 0 x1261)))
(define-fun x1071 ((x1261 Int) (x721 Int)) Bool (=> (and (> x721 0) (> x1261 0)) (= (= x721 (x965 (x711 (x991 x1261 x721)) x1261)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x991 x1261 x721)))))
(define-fun x1217 ((x1261 Int) (x721 Int)) Bool (=> (and (not (= x721 0)) (not (= 0 x1261))) (and (= (x965 (x991 x1261 x721) x1261) x721) (= x1261 (x965 (x991 x1261 x721) x721)))))
(define-fun x256 ((x1261 Int) (x721 Int)) Bool (=> (and (> x1261 0) (< 0 x721)) (= (< 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x991 x1261 x721)) (< (x965 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1261) x721))))
(define-fun x351 ((x1261 Int) (x721 Int)) Bool (and (= (x711 (x991 x1261 x721)) (x711 (x991 (- x1261 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x721 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x711 (x991 x1261 x721)) (x711 (x991 x1261 (- x721 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (= (x711 (x991 x1261 x721)) (x711 (x991 (- x1261 115792089237316195423570985008687907853269984665640564039457584007913129639936) x721)))))
(define-fun x732 ((x1261 Int) (x721 Int)) Bool (and (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x721) (<= x721 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (<= x1261 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x1261))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x721) (x965 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1261)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x991 x1261 (- x721 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (=> (and (and (< 0 x721) (<= x721 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (> x1261 0) (<= x1261 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x991 x1261 x721)) (>= (x965 57896044618658097711785492504343953926634992332820282019728792003956564819967 x721) x1261))) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1261) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1261)) (and (<= x721 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x721 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1261) (x965 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x721))) (<= (x991 (- x1261 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x721 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (=> (and (and (> x1261 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1261 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (<= x721 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x721 0))) (= (>= (x965 57896044618658097711785492504343953926634992332820282019728792003956564819968 x721) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1261)) (>= (x991 (- x1261 115792089237316195423570985008687907853269984665640564039457584007913129639936) x721) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968))))))
(define-fun x388 ((x1261 Int)) Bool (and (= (x991 x1261 0) 0) (= 0 (x991 0 x1261))))
(define-fun x230 ((x1261 Int)) Bool (and (= (x991 1 x1261) x1261) (= (x991 x1261 1) x1261)))
(define-fun x328 ((x1261 Int)) Bool (and (x230 x1261) (x388 x1261)))
(define-fun x657 ((x1261 Int)) Bool (and (= (x599 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1261) x1261) (= (x599 x1261 115792089237316195423570985008687907853269984665640564039457584007913129639935) x1261)))
(define-fun x999 ((x1261 Int)) Bool (and (= (x599 0 x1261) 0) (= (x599 x1261 0) 0)))
(define-fun x919 ((x1261 Int)) Bool (= x1261 (x599 x1261 x1261)))
(define-fun x436 ((x1261 Int)) Bool (and (x657 x1261) (x919 x1261) (x999 x1261)))
(define-fun x820 ((x1261 Int) (x721 Int)) Bool (= (x599 x721 x1261) (x599 x1261 x721)))
(define-fun x13 ((x1261 Int) (x721 Int)) Bool (and (=> (>= x721 0) (<= (x599 x1261 x721) x721)) (=> (>= x1261 0) (>= x1261 (x599 x1261 x721))) (>= (x599 x1261 x721) 0)))
(define-fun x133 ((x1261 Int) (x721 Int)) Bool (and (x820 x1261 x721) (x13 x1261 x721)))
(define-fun x902 ((x1261 Int)) Bool (= (x711 x1261) (+ (x409 x1261 32) (x599 x1261 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(define-fun x1050 ((x1261 Int)) Bool (and (x133 x1261 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x902 x1261)))
(define-fun x788 ((x1261 Int) (x721 Int)) Bool (and (< (x409 x1261 x721) x721) (>= (x409 x1261 x721) 0)))
(define-fun x800 ((x1261 Int) (x721 Int)) Bool (=> (and (<= 0 x1261) (< 0 x721)) (= (= (x409 x1261 x721) x1261) (< x1261 x721))))
(define-fun x664 ((x1261 Int) (x721 Int)) Bool (=> (and (> x721 0) (and (> (+ x721 x721) x1261) (<= x721 x1261))) (= (x409 x1261 x721) (- x1261 x721))))
(define-fun x693 ((x1261 Int)) Bool (= 0 (x409 0 x1261)))
(define-fun x1010 ((x1261 Int)) Bool (= 0 (x409 x1261 1)))
(define-fun x1147 ((x1261 Int)) Bool (= (x409 x1261 x1261) 0))
(define-fun x580 ((x1261 Int)) Bool (and (x1147 x1261) (x1010 x1261) (x693 x1261)))
(define-fun x103 ((x1261 Int)) Bool (= (x599 x1261 1461501637330902918203684832716283019655932542975) (x409 x1261 1461501637330902918203684832716283019655932542976)))
(define-fun x780 ((x1261 Int)) Bool (and (x103 x1261) (x133 x1261 1461501637330902918203684832716283019655932542975)))
(define-fun x246 ((x1261 Int)) Bool (= (x409 x1261 1099511627776) (x599 x1261 1099511627775)))
(define-fun x375 ((x1261 Int)) Bool (and (x133 x1261 1099511627775) (x246 x1261)))
(define-fun x972 ((x1261 Int) (x721 Int)) Bool (=> (and (< 0 x1261) (> x721 0)) (and (>= (x965 x1261 x721) 0) (<= (x965 x1261 x721) x1261))))
(define-fun x320 ((x1261 Int) (x721 Int)) Bool (=> (and (and (>= x1261 0) (< x1261 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x721) (>= x721 1))) (and (>= (x965 x1261 x721) 0) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x1261 x721)))))
(define-fun x49 ((x1261 Int) (x721 Int)) Bool (=> (and (> x1261 x721) (> x721 1)) (> x1261 (x965 x1261 x721))))
(define-fun x1022 ((x1261 Int) (x721 Int)) Bool (=> (and (< 0 x1261) (> x721 0)) (= (= 0 (x965 x1261 x721)) (> x721 x1261))))
(define-fun x130 ((x1261 Int) (x721 Int)) Bool (=> (and (> x721 0) (> x1261 0)) (and (< (- x1261 x721) (x991 (x965 x1261 x721) x721)) (<= (x991 (x965 x1261 x721) x721) x1261))))
(define-fun x164 ((x1261 Int) (x721 Int)) Bool (and (x130 x1261 x721) (x49 x1261 x721) (x972 x1261 x721) (x320 x1261 x721) (x1022 x1261 x721)))
(define-fun x523 ((x1261 Int)) Bool (= 0 (x965 0 x1261)))
(define-fun x870 ((x1261 Int)) Bool (= x1261 (x965 x1261 1)))
(define-fun x503 ((x1261 Int)) Bool (=> (not (= x1261 0)) (= 1 (x965 x1261 x1261))))
(define-fun x251 ((x1261 Int)) Bool (and (x523 x1261) (x870 x1261) (x503 x1261)))
(define-fun x410 ((x1261 Int) (x721 Int)) Bool (= (x991 x721 x1261) (x991 x1261 x721)))
(define-fun x163 ((x1261 Int) (x721 Int)) Bool (and (=> (and (> x721 0) (> x1261 0)) (< 0 (x991 x1261 x721))) (=> (and (< 0 x721) (> 0 x1261)) (> 0 (x991 x1261 x721))) (=> (and (< x721 0) (< 0 x1261)) (< (x991 x1261 x721) 0)) (=> (and (> 0 x721) (> 0 x1261)) (< 0 (x991 x1261 x721)))))
(define-fun x692 ((x1261 Int) (x721 Int)) Bool (and (x1071 x1261 x721) (x1217 x1261 x721) (x256 x1261 x721) (x351 x1261 x721) (x163 x1261 x721) (x732 x1261 x721) (x410 x1261 x721)))
(define-fun x616 ((x1098 Int)) Int (x504 x1098))
(define-fun x1054 ((x1098 x102)) Int (ite (= x1098 (x1080 x1140)) x1201 (x203 x1098)))
(define-fun x1354 ((x1098 x102)) Int (ite (= x1098 (x1080 x897)) x93 (x1054 x1098)))
(define-fun x1267 ((x1098 Int)) Int (ite (= x1098 288) x295 (x472 x1098)))
(define-fun x270 ((x1098 x102)) Int (x105 x1098))
(define-fun x1310 ((x1098 x102)) Int (x105 x1098))
(define-fun x227 ((x1098 x102)) Int (ite x1344 (x1310 x1098) (ite x1196 (x1310 x1098) (x105 x1098))))
(define-fun x427 ((x1098 x102)) Int (ite x277 (x105 x1098) (ite x166 (x270 x1098) (ite x1219 (x227 x1098) (x105 x1098)))))
(define-fun x79 ((x1098 x102)) Int (ite (= x97 x1098) x809 (x427 x1098)))
(define-fun x941 ((x1098 x102)) Int (ite (= x97 x1098) x1353 (x79 x1098)))
(define-fun x946 ((x1098 x102)) Int (ite x118 (x941 x1098) (x105 x1098)))
(define-fun x162 ((x1098 x102)) Int (x597 x1098))
(define-fun x1095 ((x1098 x102)) Int (x597 x1098))
(define-fun x917 ((x1098 x102)) Int (ite x1344 (x1095 x1098) (ite x1196 (x1095 x1098) (x597 x1098))))
(define-fun x116 ((x1098 x102)) Int (ite x277 (x597 x1098) (ite x166 (x162 x1098) (ite x1219 (x917 x1098) (x597 x1098)))))
(define-fun x1305 ((x1098 x102)) Int (ite (= x1098 x97) 3 (x116 x1098)))
(define-fun x1027 ((x1098 x102)) Int (ite x118 (x1305 x1098) (x597 x1098)))
(define-fun x994 ((x1098 Int)) Int (ite (= x404 x1098) x1134 (x1267 x1098)))
(define-fun x582 ((x1098 Int)) Int (ite (and (> (+ x1130 x1134) x1098) (<= x1130 x1098)) (x504 (+ x46 (- x1098 x1130))) (x994 x1098)))
(define-fun x836 ((x1098 Int)) Int (ite (= x214 x1098) 0 (x582 x1098)))
(define-fun x297 ((x1098 Int)) Int (ite (= 320 x1098) x404 (x836 x1098)))
(define-fun x1036 ((x1098 Int)) Int (ite x296 (x1267 x1098) (x297 x1098)))
(define-fun x1187 ((x1098 Int)) Int (ite (= x1149 x1098) x1047 (x1036 x1098)))
(define-fun x1241 ((x1098 Int)) Int (ite (= x1098 x1288) x658 (x1187 x1098)))
(define-fun x1112 ((x1098 Int)) Int (ite (and (< x1098 (+ x658 x499)) (<= x499 x1098)) (x504 (+ x1194 (- x1098 x499))) (x1241 x1098)))
(define-fun x1238 ((x1098 Int)) Int (ite (= x1098 x47) 0 (x1112 x1098)))
(define-fun x1191 ((x1098 Int)) Int (ite (= x813 x1098) x1288 (x1238 x1098)))
(define-fun x822 ((x1098 Int)) Int (ite x455 (x1187 x1098) (x1191 x1098)))
(define-fun x529 ((x1098 Int)) Int (ite (= x390 x1098) x763 (x822 x1098)))
(define-fun x442 ((x1098 Int)) Int (ite (= x1098 x1169) x145 (x529 x1098)))
(define-fun x346 ((x1098 Int)) Int (ite (and (< x1098 (+ x33 x145)) (>= x1098 x33)) (x504 (+ x1001 (- x1098 x33))) (x442 x1098)))
(define-fun x1190 ((x1098 Int)) Int (ite (= x1098 x746) 0 (x346 x1098)))
(define-fun x830 ((x1098 Int)) Int (ite (= x104 x1098) x1169 (x1190 x1098)))
(define-fun x478 ((x1098 Int)) Int (ite x367 (x529 x1098) (x830 x1098)))
(define-fun x1254 ((x1098 Int)) Int (ite (= x1098 x974) x30 (x478 x1098)))
(define-fun x271 ((x1098 Int)) Int (ite (= x1098 x304) x1264 (x1254 x1098)))
(define-fun x767 ((x1098 Int)) Int (ite (= x1098 x672) x727 (x271 x1098)))
(define-fun x38 ((x1098 Int)) Int (ite (= x1098 x1328) x498 (x767 x1098)))
(define-fun x1338 ((x1098 Int)) Int (ite (= x175 x1098) x422 (x38 x1098)))
(define-fun x329 ((x1098 Int)) Int (ite (= x1098 x978) x304 (x1338 x1098)))
(define-fun x1363 ((x1098 Int)) Int (ite x1183 (x1254 x1098) (x329 x1098)))
(define-fun x949 ((x1098 Int)) Int (ite (= x1098 x1067) x1177 (x1363 x1098)))
(define-fun x1198 ((x1098 Int)) Int (ite (= x1098 x653) x355 (x949 x1098)))
(define-fun x1070 ((x1098 Int)) Int (ite x1302 (x949 x1098) (x1198 x1098)))
(define-fun x488 ((x1098 Int)) Int (ite (= x1098 x239) x1121 (x1070 x1098)))
(define-fun x962 ((x1098 x102)) Int (ite (= x1098 (x1080 x1253)) x513 (x1354 x1098)))
(define-fun x1182 ((x1098 x102)) Int (ite (= x1098 (x1080 x383)) x1087 (x962 x1098)))
(define-fun x301 ((x1098 x102)) Int (x1182 x1098))
(define-fun x433 ((x1098 x102)) Int (ite (= x1098 (x1080 x383)) x982 (x301 x1098)))
(define-fun x541 ((x1098 x102)) Int (ite (= x1098 (x1080 x1253)) x734 (x433 x1098)))
(define-fun x88 ((x1098 x102)) Int (ite x1344 (x301 x1098) (ite x1196 (x541 x1098) (x1354 x1098))))
(define-fun x1362 ((x1098 x102)) Int (ite x277 (x1354 x1098) (ite x166 (x1354 x1098) (ite x1219 (x88 x1098) (x1354 x1098)))))
(define-fun x892 ((x1098 x102)) Int (x319 x1098))
(define-fun x332 ((x1098 x102)) Int (x319 x1098))
(define-fun x228 ((x1098 x102)) Int (ite x1344 (x332 x1098) (ite x1196 (x332 x1098) (x319 x1098))))
(define-fun x891 ((x1098 x102)) Int (ite x277 (x319 x1098) (ite x166 (x892 x1098) (ite x1219 (x228 x1098) (x319 x1098)))))
(define-fun x1153 ((x1098 Int)) Int (ite (= x252 x1098) x56 (x488 x1098)))
(define-fun x1056 ((x1098 Int)) Int (ite (and (>= x1098 x998) (> (+ x56 x998) x1098)) (x504 (+ x948 (- x1098 x998))) (x1153 x1098)))
(define-fun x694 ((x1098 Int)) Int (ite (= x990 x1098) 0 (x1056 x1098)))
(define-fun x1357 ((x1098 Int)) Int (ite (= x1098 x10) x252 (x694 x1098)))
(define-fun x545 ((x1098 Int)) Int (ite x1327 (x488 x1098) (x1357 x1098)))
(define-fun x441 ((x1098 Int)) Int (ite (= x1160 x1098) x755 (x545 x1098)))
(define-fun x1097 ((x1098 Int)) Int (ite (= x815 x1098) x1343 (x441 x1098)))
(define-fun x1166 ((x1098 Int)) Int (ite (and (>= x1098 x508) (> (+ x1343 x508) x1098)) (x504 (+ x400 (- x1098 x508))) (x1097 x1098)))
(define-fun x791 ((x1098 Int)) Int (ite (= x1098 x1311) 0 (x1166 x1098)))
(define-fun x75 ((x1098 Int)) Int (ite (= x1098 x628) x815 (x791 x1098)))
(define-fun x48 ((x1098 Int)) Int (ite x1180 (x441 x1098) (x75 x1098)))
(define-fun x170 ((x1098 Int)) Int (ite (= x1098 x795) x272 (x48 x1098)))
(define-fun x1272 ((x1098 Int)) Int (ite (= x675 x1098) x188 (x170 x1098)))
(define-fun x474 ((x1098 Int)) Int (ite (and (> (+ x1101 x188) x1098) (<= x1101 x1098)) (x504 (+ x209 (- x1098 x1101))) (x1272 x1098)))
(define-fun x673 ((x1098 Int)) Int (ite (= x1098 x782) 0 (x474 x1098)))
(define-fun x153 ((x1098 Int)) Int (ite (= x171 x1098) x675 (x673 x1098)))
(define-fun x913 ((x1098 Int)) Int (ite x363 (x170 x1098) (x153 x1098)))
(define-fun x554 ((x1098 Int)) Int (ite (= x1244 x1098) x1356 (x913 x1098)))
(define-fun x1290 ((x1098 Int)) Int (ite (= x1033 x1098) x303 (x554 x1098)))
(define-fun x620 ((x1098 Int)) Int (ite (= x1098 x1138) x98 (x1290 x1098)))
(define-fun x1184 ((x1098 Int)) Int (ite (= x1127 x1098) x837 (x620 x1098)))
(define-fun x111 ((x1098 Int)) Int (ite (= x1098 x1155) x352 (x1184 x1098)))
(define-fun x210 ((x1098 Int)) Int (ite (= x908 x1098) x1033 (x111 x1098)))
(define-fun x382 ((x1098 Int)) Int (ite x19 (x554 x1098) (x210 x1098)))
(define-fun x1123 ((x1098 Int)) Int (ite (= x257 x1098) x957 (x382 x1098)))
(define-fun x1108 ((x1098 Int)) Int (ite (= x1346 x1098) x237 (x1123 x1098)))
(define-fun x668 ((x1098 Int)) Int (ite x601 (x1123 x1098) (x1108 x1098)))
(define-fun x859 ((x1098 Int)) Int (ite (= x1098 x824) 101252785324535458888692376134782526488201703179675774606846032596167196409856 (x668 x1098)))
(define-fun x1100 ((x1098 Int)) Int (ite (= x1098 x1296) x280 (x859 x1098)))
(define-fun x881 ((x1098 Int)) Int (ite (= x774 x1098) 259200 (x1100 x1098)))
(define-fun x860 ((x1098 Int)) Int (ite (= x1098 x824) x1041 (x881 x1098)))
(define-fun x578 ((x1098 Int)) Int (ite (= x1098 x642) 49030629496366843004481757320339876143172005997263197338613197606857211904000 (x860 x1098)))
(define-fun x970 ((x1098 Int)) Int (ite (= x907 x1098) x1225 (x578 x1098)))
(define-fun x882 ((x1098 Int)) Int (ite (= x1098 x1164) x280 (x970 x1098)))
(define-fun x109 ((x1098 Int)) Int (ite (= x1098 x524) x897 (x882 x1098)))
(define-fun x1096 ((x1098 Int)) Int (ite x277 (x668 x1098) (x109 x1098)))
(define-fun x421 ((x1098 x102)) Int (x1091 x1098))
(define-fun x977 ((x1098 x102)) Int (x1091 x1098))
(define-fun x1202 ((x1098 x102)) Int (ite x1344 (x977 x1098) (ite x1196 (x977 x1098) (x1091 x1098))))
(define-fun x512 ((x1098 x102)) Int (ite x277 (x1091 x1098) (ite x166 (x421 x1098) (ite x1219 (x1202 x1098) (x1091 x1098)))))
(define-fun x213 ((x1098 Int)) Int (ite (= x1098 x96) 38731024311866695680078894486728619323467920029808689935542550702492038987776 (x1096 x1098)))
(define-fun x347 ((x1098 Int)) Int (ite (= x1098 x1340) x158 (x213 x1098)))
(define-fun x353 ((x1098 Int)) Int (ite (= x1098 x749) 288 (x347 x1098)))
(define-fun x407 ((x1098 Int)) Int (ite (= x1119 x1098) x425 (x353 x1098)))
(define-fun x699 ((x1098 Int)) Int (ite (= x1098 x247) x758 (x407 x1098)))
(define-fun x189 ((x1098 Int)) Int (ite (= x172 x1098) x1128 (x699 x1098)))
(define-fun x1278 ((x1098 Int)) Int (ite (= x1098 x929) x142 (x189 x1098)))
(define-fun x631 ((x1098 Int)) Int (ite (= x1098 x945) x643 (x1278 x1098)))
(define-fun x607 ((x1098 Int)) Int (ite x952 (x1278 x1098) (ite x244 (x189 x1098) (ite x1352 (x699 x1098) (ite x550 (x407 x1098) (x631 x1098))))))
(define-fun x1220 ((x1098 Int)) Int (ite (= x331 x1098) 0 (x607 x1098)))
(define-fun x180 ((x1098 Int)) Int (ite x155 (x607 x1098) (x1220 x1098)))
(define-fun x717 ((x1098 Int)) Int (ite (= x1098 x1266) x818 (x180 x1098)))
(define-fun x958 ((x1098 Int)) Int (ite (= x1098 x438) x264 (x717 x1098)))
(define-fun x1229 ((x1098 Int)) Int (ite (= x1136 x1098) x5 (x958 x1098)))
(define-fun x190 ((x1098 Int)) Int (ite (= x44 x1098) x469 (x1229 x1098)))
(define-fun x805 ((x1098 Int)) Int (ite (= x1098 x1124) x517 (x190 x1098)))
(define-fun x134 ((x1098 Int)) Int (ite (= x1098 x1218) x579 (x805 x1098)))
(define-fun x966 ((x1098 Int)) Int (ite x481 (x805 x1098) (ite x981 (x190 x1098) (ite x900 (x1229 x1098) (ite x710 (x958 x1098) (x134 x1098))))))
(define-fun x910 ((x1098 Int)) Int (ite (= x1098 x747) 0 (x966 x1098)))
(define-fun x484 ((x1098 Int)) Int (ite x444 (x966 x1098) (x910 x1098)))
(define-fun x17 ((x1098 Int)) Int (ite (= x1098 x1333) x646 (x484 x1098)))
(define-fun x143 ((x1098 x102)) Int (ite (= x1098 (x1080 x897)) x564 (x1362 x1098)))
(define-fun x440 ((x1098 x102)) Int (ite (= (x1080 x1360) x1098) x492 (x143 x1098)))
(define-fun x1106 ((x1098 Int)) Int (ite (= 128 x1098) 89953063794570797914675343120038501642627609741519254829220540789936042803200 (x302 x1098)))
(define-fun x300 ((x1098 Int)) Int (ite (= x1098 132) x1176 (x1106 x1098)))
(define-fun x146 ((x1098 Int)) Int (ite (= 164 x1098) x1306 (x300 x1098)))
(define-fun x1139 ((x1098 x102)) Int (ite x456 (x393 x1098) (x440 x1098)))
(define-fun x1042 ((x1098 x102)) Int (ite (= (x1080 x1360) x1098) x113 (x1139 x1098)))
(define-fun x935 ((x1098 Int)) Int (ite (= x1098 128) 89953063794570797914675343120038501642627609741519254829220540789936042803200 (x1008 x1098)))
(define-fun x874 ((x1098 Int)) Int (ite (= 132 x1098) x1176 (x935 x1098)))
(define-fun x975 ((x1098 Int)) Int (ite (= x1098 164) x1076 (x874 x1098)))
(define-fun x414 ((x1098 Int)) Int (ite (= x1098 128) x1011 (x975 x1098)))
(define-fun x1334 ((x1098 Int)) Int (ite x24 (x975 x1098) (x414 x1098)))
(define-fun x574 ((x1098 Int)) Int (ite (= 0 x1098) x1011 (x489 x1098)))
(define-fun x307 ((x1098 Int)) Int (ite x24 (x489 x1098) (x574 x1098)))
(define-fun x1151 ((x1098 Int)) Int (ite (= x243 x1098) (ite true 1 0) (x789 x1098)))
(define-fun x386 ((x1098 Int)) Int (ite (= x1098 128) x82 (x146 x1098)))
(define-fun x1046 ((x1098 Int)) Int (ite x667 (x146 x1098) (x386 x1098)))
(define-fun x1341 ((x1098 Int)) Int (ite (= 0 x1098) x82 (x565 x1098)))
(define-fun x150 ((x1261 Int) (x721 Int) (x1094 Int) (x886 Int)) Bool (=> (and (>= x1094 x1261) (<= 0 x1261) (<= x721 x886) (>= x721 0)) (>= (x991 x1094 x886) (x991 x1261 x721))))
(define-fun x526 ((x1261 Int) (x721 Int) (x1094 Int) (x886 Int)) Bool (=> (= x1094 x1261) (= (x991 x1261 (- x721 x886)) (- (x991 x1261 x721) (x991 x1094 x886)))))
(define-fun x479 ((x1261 Int)) Bool (=> (and (not (= 1099511627775 x1261)) (not (= 65536 x1261)) (not (= 65535 x1261)) (not (= x1261 3578229791)) (not (= 3414818225 x1261)) (not (= x1261 791671133)) (not (= 115792089237316195423570985008687907853269984665640 x1261)) (not (= x1261 418493994)) (not (= 2835717307 x1261)) (not (= 101252785324535458888692376134782526488201703179675774606846032596167196409856 x1261)) (not (= x1261 24000000000000000000)) (not (= 1008072988 x1261)) (not (= x1261 1381722888)) (not (= 3714247998 x1261)) (not (= 31536000 x1261)) (not (= 1818647125 x1261)) (not (= x1261 49030629496366843004481757320339876143172005997263197338613197606857211904000)) (not (= 1099511627776 x1261)) (not (= 89953063794570797914675343120038501642627609741519254829220540789936042803200 x1261)) (not (= x1261 2307130307)) (not (= 1461501637330902918203684832716283019655932542976 x1261)) (not (= 3629318494 x1261)) (not (= x1261 452312848583266388373324160190187140051835877600158453279131187530910662655)) (not (= x1261 3498358313)) (not (= 2961265839 x1261)) (not (= x1261 3755674541)) (not (= x1261 4294967296)) (not (= x1261 2446411860)) (not (= x1261 865950217)) (not (= x1261 1631253430)) (not (= 3336544575 x1261)) (not (= 18446744073709551615 x1261)) (not (= 38731024311866695680078894486728619323467920029808689935542550702492038987776 x1261)) (not (= x1261 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x1261 115792089237316195423570985008687907853269984665640564039457584007913129639904)) (not (= 1461501637330902918203684832716283019655932542975 x1261)) (not (= 31536000000000000000000000000000000 x1261)) (not (= 32000000000000000000 x1261)) (not (= x1261 1703538655)) (not (= x1261 1000000000000000000000000000)) (> x1261 10000) (not (= 1997499061 x1261)) (not (= x1261 259200)) (not (= x1261 3515665801)) (not (= 66268296141940672851042108147304593538321322149885339258387047461996478413388 x1261)) (not (= 428079936 x1261))) (not ((_ is x1163) (x1080 x1261)))))
(assert (= (x1163 2307130307) (x1080 2307130307)))
(assert (x251 31536000000000000000000000000000000))
(assert (x600 x1270))
(assert (x526 x816 x759 x211 x1158))
(assert (x251 x993))
(assert (x526 x211 x1158 x759 x816))
(assert (= (x1008 x69) 0))
(assert (= (and (not x135) x584) x1302))
(assert (x328 (- x34 x899)))
(assert (x328 (- x1303 x1125)))
(assert (x600 x1073))
(assert (x436 x293))
(assert (= x987 (and x274 x1228)))
(assert (= x1040 (and (not x779) x412)))
(assert (= x1122 (and x612 x971)))
(assert (x150 x1303 x899 x211 x1158))
(assert (x600 x1311))
(assert (x600 x995))
(assert (x600 x1121))
(assert (x600 x863))
(assert (x600 x188))
(assert (x328 (- x816 x857)))
(assert (x328 (- x759 x569)))
(assert (x150 x857 x630 x912 x569))
(assert (x600 x1002))
(assert (x692 x34 (- x1125 x211)))
(assert (x1050 x1298))
(assert (x328 (- x569 x759)))
(assert (= x550 (and (not x23) x589)))
(assert (x600 x71))
(assert (x600 x354))
(assert (x600 x432))
(assert (x328 (- x816 x323)))
(assert (x600 x1005))
(assert (x780 x161))
(assert (x692 x323 (- x16 x899)))
(assert (x328 (- x912 x816)))
(assert (= (=> (and (or (and x685 (and (= x722 (ite (= x184 0) 32000000000000000000 0)) (= (x1139 (x1080 x1360)) x397) (= x184 x1068) (= x969 (x750 (+ x482 x722))) (= x482 (x1042 (x1080 x897))) (= (- x397 x722) x113) (< (+ x722 x482) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (= x184 x1068) (not x685))) (= (= x184 0) x685)) x814) x1039))
(assert (x526 x1303 x899 x912 x569))
(assert (= (x1118 (x1163 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x600 x672))
(assert (x150 x630 x857 x912 x569))
(assert (x600 x252))
(assert (= x1140 (x1118 (x1080 x1140))))
(assert (x692 x211 (- x1158 x34)))
(assert (x328 (- x211 x569)))
(assert (x150 x912 x569 x1303 x899))
(assert (x164 x656 x736))
(assert (= (and x1157 x828) x430))
(assert (x328 (- x1158 x899)))
(assert (x526 x1303 x899 x16 x323))
(assert (x692 x211 (- x1158 x630)))
(assert (x526 x1125 x34 x899 x1303))
(assert (x600 x1135))
(assert (= x364 (=> (= x365 (= 0 x250)) (and (=> (and (not x365) (and (= x112 (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x934)) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1271) (and (= true (<= x1271 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1271 32))) x1277) (= x934 (x750 (+ x1271 31))) (= (x750 (+ x112 128)) x243))) (and (=> (and (not x1277) (and (= (x965 115792089237316195423570985008687907853269984665640564039457584007913129639935 x211) x602) (= (= x356 0) x340) (= x448 (ite (> x1158 x602) 1 0)) (= x356 (x599 x74 x448)) (= (ite (not x1044) 1 0) x74) (= (x1334 128) x211) (= (= 0 x211) x1044))) (and (=> (and (= 0 x1156) (not x340)) x835) (=> (and x340 (and (= x343 (x965 x596 31536000)) (= (< x1257 1000000000000000000000000000) x129) (= x1257 (x124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x343))) (= x596 (x711 (x991 x211 x1158))))) (and (=> (and (= 0 x1156) x129) x835) (=> (and (and (= (x965 115792089237316195423570985008687907853269984665640564039457584007913129639935 x34) x986) (<= x34 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (ite (not x218) 1 0) x855) (= x698 (ite (< x986 x1125) 1 0)) (= (x750 (+ x343 1000000000000000000000000000)) x1125) (= x154 (x599 x855 x698)) (<= 0 x34) (= (= x34 0) x218) (= (= 0 x154) x369)) (not x129)) (and (=> (and (and (> 256 x1090) (>= x1090 0) (= (x711 (x991 x34 x1125)) x993) (= (x389 x21) x1090) (<= x1090 255) (= x1285 (= 0 x1090)) (= x21 (x1186 (x1080 x1318) (x1163 15) 0)) (= (x965 x993 1000000000000000000000000000) x43) (= x983 (x965 x993 1000000000000000000000000000))) x369) (and (=> (and (not x1285) (= 0 x1156)) x835) (=> (and x1285 (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1076) (= (> x501 x1076) x682) (<= 0 x1076))) (and (=> (and x682 (= x1156 0)) x835) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x43) (= (x1151 x243) x435) (<= 0 x1076) (= x1317 (= x435 0)) (= x183 (> x501 x1137)) (= (ite (not x1317) 1 0) x1105) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1076) (>= x43 0) (= (x1354 (x1080 x1253)) x1137) (= (x124 (- x1076 x501)) x207) (= x69 (x750 (+ 96 x243)))) (not x682)) (and (=> (and (= 0 x1156) x183) x835) (=> (and (not x183) (and (= (x1354 (x1080 x1253)) x1189) (= x1002 (x1354 (x1080 x383))) (= (and (<= x1093 x1189) (< (+ x1093 x1002) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1230))) (and (=> (and x1230 (and (= x537 (x509 (x1080 x897))) (< (+ x790 x1093) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x750 (+ x501 x790)) x1087) (= x379 (= x447 (x1334 x69))) (= x790 (x962 (x1080 x383))) (= (- x764 x501) x513) (= (x1354 (x1080 x1253)) x764) (> x537 0) x379 (= x9 (< x1215 4)) (= 0 x1215))) (and (=> (and x9 (= (< 0 x1215) x858)) (and (=> x858 x536) (=> (and (not x858) (= x1148 true)) (and (=> (and (and (= x313 0) (= 1 x863)) x1148) x1195) (=> (not x1148) x536))))) (=> (and (and (not (= 3515665801 x339)) (not (< x339 2307130307)) (not (= x339 3629318494)) (not (> 2961265839 x339)) (not (< x339 3414818225)) (not (= x339 3414818225)) (not (= x339 3498358313)) (not (= x339 3578229791))) (not x9)) x536))) (=> (and (and (= 0 x1110) (= 0 x650)) (not x1230)) x151))))))))) (=> (and (not x369) (= x1156 0)) x835))))))) (=> (and (= 0 x1156) x1277) x835))) (=> (and (= x1156 0) x365) x835)))))
(assert (x600 x1244))
(assert (= x231 (and x1250 (not x1031))))
(assert (x600 x158))
(assert (x328 x34))
(assert (x692 x34 x1125))
(assert (= 3498358313 (x1118 (x1163 3498358313))))
(assert (x692 x816 (- x759 x323)))
(assert (= (x1080 865950217) (x1163 865950217)))
(assert (x328 (- x630 x323)))
(assert (x251 x78))
(assert (x600 x1306))
(assert (x692 x211 x1158))
(assert (x600 x1257))
(assert (= (x1163 65536) (x1080 65536)))
(assert (x526 x630 x857 x1125 x34))
(assert (= x406 (and x1148 x305)))
(assert (x600 x864))
(assert (x600 x1086))
(assert (x692 x630 (- x857 x34)))
(assert (x526 x857 x630 x16 x323))
(assert (= x418 (=> (and (= x1307 (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x371)) (not (< x875 x811)) (= (x750 (+ 32 x1307)) x107) (= (x750 (+ 32 x1173)) x654) (not (> x1343 18446744073709551615)) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875) (<= x445 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x875 x445)) (and (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x445))) (= (x750 (+ x1359 32)) x400) (= x1343 (x504 x1359)) (= x165 (not (> x92 x654))) (not (< 18446744073709551615 x177)) (= x1063 (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x590)) (= x168 (> x815 x1243)) (= x385 0) (= (x750 (+ x400 x1343)) x811) (= x263 (or x168 x1081)) (= x1081 (< 18446744073709551615 x1243)) (= (ite x263 1 0) x385) (= x1311 (x750 (+ x508 x1343))) (= (x750 (+ x815 x1063)) x1243) (= x508 (x750 (+ x815 32))) (= (x750 (+ x107 31)) x590) (= x445 (x750 (+ 31 x1359))) (= (x750 (+ x1173 x177)) x1359) (= x177 (x504 x1173)) (= x371 (x750 (+ x1343 31)))) (and x165 (=> (= x795 x1243) x1322)))))
(assert (x692 x1125 (- x34 x323)))
(assert (x692 x899 (- x1303 x1125)))
(assert (x600 x792))
(assert (x600 x746))
(assert (x600 x10))
(assert (x526 x816 x759 x1303 x899))
(assert (x133 x223 x770))
(assert (= x1192 (and x392 x487)))
(assert (x328 (- x899 x1158)))
(assert (= x834 (or x455 x1292)))
(assert (=> (<= x1312 10000) (= (x1163 x1312) (x1080 x1312))))
(assert (x600 x974))
(assert (x600 x72))
(assert (x436 x485))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x371 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x371 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x371 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x371 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x371 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x371 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x328 (- x912 x759)))
(assert (x328 (- x912 x1125)))
(assert (x600 x810))
(assert (x150 x1158 x211 x630 x857))
(assert (x251 x1089))
(assert (= (x1118 (x1163 3714247998)) 3714247998))
(assert (x600 x728))
(assert (x526 x211 x1158 x323 x16))
(assert (and (=> (< 0 32) (= x463 (+ (* 32 (x965 x463 32)) (x409 x463 32)))) (x788 x463 32) (x664 x463 32) (x800 x463 32)))
(assert (= (and (not x682) x1345) x713))
(assert (x600 x112))
(assert (x600 x850))
(assert (and (=> (< 0 1099511627776) (= x665 (+ (* 1099511627776 (x965 x665 1099511627776)) (x409 x665 1099511627776)))) (x788 x665 1099511627776) (x664 x665 1099511627776) (x800 x665 1099511627776)))
(assert (= (and (not x365) x123) x921))
(assert (x600 x448))
(assert (=> (<= x161 10000) (= (x1163 x161) (x1080 x161))))
(assert (x692 x1158 (- x211 x1125)))
(assert (x526 x1303 x899 x1125 x34))
(assert (x692 x569 (- x912 x1158)))
(assert (x600 x1324))
(assert (x600 x144))
(assert (x600 x491))
(assert (x328 (- x857 x569)))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x980 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x980 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x980 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x980 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x980 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x980 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1050 x980))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x922) (- (* x922 1000000000000000000000000000) (* x922 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000000000000 (- x922 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 1000000000000000000000000000 (- x922 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x922 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x922 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x922 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x922 1000000000000000000000000000) (x991 1000000000000000000000000000 x922)) (x256 1000000000000000000000000000 x922) (x1217 1000000000000000000000000000 x922) (x1071 1000000000000000000000000000 x922) (x732 1000000000000000000000000000 x922) (x351 1000000000000000000000000000 x922)))
(assert (= (x1118 (x1080 x1318)) x1318))
(assert (= (and x1230 x1049) x326))
(assert (x600 x581))
(assert (= (+ (x1118 x86) 1) (x1118 (x1335 x86 1))))
(assert (= (x472 x18) 0))
(assert (x479 x1253))
(assert (x526 x34 x1125 x16 x323))
(assert (x600 x120))
(assert (x600 x70))
(assert (and (=> (< 0 1461501637330902918203684832716283019655932542976) (= x121 (+ (* 1461501637330902918203684832716283019655932542976 (x965 x121 1461501637330902918203684832716283019655932542976)) (x409 x121 1461501637330902918203684832716283019655932542976)))) (x788 x121 1461501637330902918203684832716283019655932542976) (x664 x121 1461501637330902918203684832716283019655932542976) (x800 x121 1461501637330902918203684832716283019655932542976)))
(assert (x526 x759 x816 x16 x323))
(assert (= (and x968 x1004) x586))
(assert (x600 x1068))
(assert (x150 x899 x1303 x211 x1158))
(assert (x526 x630 x857 x16 x323))
(assert (x600 x330))
(assert (x600 x628))
(assert (x133 x855 x698))
(assert (x328 (- x211 x899)))
(assert (x580 x342))
(assert (x600 x603))
(assert (x600 x855))
(assert (x328 (- x816 x1303)))
(assert (x600 x742))
(assert (x164 x1297 x14))
(assert (x600 x1137))
(assert (= x161 (x1118 (x1080 x161))))
(assert (x150 x1125 x34 x211 x1158))
(assert (x328 (- x816 x912)))
(assert (x600 x101))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x494 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x494 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x494 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x494 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x494 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x494 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x600 x66))
(assert (= x273 (and x233 x1009)))
(assert (x328 x323))
(assert (x1050 x463))
(assert (= 418493994 (x1118 (x1163 418493994))))
(assert (= (and x833 (not x361)) x423))
(assert (x526 x34 x1125 x816 x759))
(assert (x600 x511))
(assert (x328 (- x630 x16)))
(assert (x600 x715))
(assert (= (and x960 x147) x61))
(assert (x600 x639))
(assert (= (or x861 x500 x61) x1165))
(assert (x600 x1160))
(assert (x692 x211 (- x1158 x857)))
(assert (x692 x816 (- x759 x34)))
(assert (x600 x1301))
(assert (x150 x759 x816 x211 x1158))
(assert (x600 x1209))
(assert (x600 x1288))
(assert (x580 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (x600 x551))
(assert (x600 x1318))
(assert (x600 x278))
(assert (=> (<= x1270 10000) (= (x1080 x1270) (x1163 x1270))))
(assert (= (x472 x464) 0))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665640564039433584007913129639936) x572) (- (* x572 24000000000000000000) (* x572 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 24000000000000000000 (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 24000000000000000000 (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665640564039433584007913129639936) (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936) 24000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x572 24000000000000000000) (x991 24000000000000000000 x572)) (x256 24000000000000000000 x572) (x1217 24000000000000000000 x572) (x1071 24000000000000000000 x572) (x732 24000000000000000000 x572) (x351 24000000000000000000 x572)))
(assert (x600 x29))
(assert (= x745 (x1118 (x1080 x745))))
(assert (x436 x121))
(assert (x692 x34 (- x1125 x899)))
(assert (x600 x1127))
(assert (x600 x1309))
(assert (= x1114 (and x1040 (not x532))))
(assert (x526 x759 x816 x1125 x34))
(assert (= (x1163 1818647125) (x1080 1818647125)))
(assert (x526 x1125 x34 x211 x1158))
(assert (= (and x996 x51) x1157))
(assert (x692 x16 (- x323 x816)))
(assert (x600 x1011))
(assert (x526 x899 x1303 x211 x1158))
(assert (= (x1080 2961265839) (x1163 2961265839)))
(assert (x526 x1158 x211 x759 x816))
(assert (x526 x211 x1158 x569 x912))
(assert (= (x1080 115792089237316195423570985008687907853269984665640) (x1163 115792089237316195423570985008687907853269984665640)))
(assert (x600 x1113))
(assert (x600 x645))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x562 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x562 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x562 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x562 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x562 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x562 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x1118 (x1080 x1253)) x1253))
(assert (x600 x643))
(assert (x600 x1297))
(assert (x328 (- x1125 x1158)))
(assert (x692 x857 (- x630 x211)))
(assert (= x1365 (=> (and (= (x750 (+ x749 32)) x1266) (= (x717 x1314) x264) (= (x750 (+ 32 x1314)) x871) (= x398 (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x253)) (= x253 (x750 (+ x425 31))) (= x1248 (< 0 x264)) (= x818 (x124 (- x438 x1340))) (= x849 (x750 (+ 32 x438))) (= (x750 (+ x278 x398)) x438)) (and (=> (and (and (= (> x264 32) x152) (= x871 x464) (= x1136 x849) (= x5 (x958 x464))) x1248) (and (=> (and (= 32 x40) (not x152)) x3) (=> (and x152 (and (= x469 (x1229 x357)) (= (> x264 64) x784) (= x44 (x750 (+ x849 32))) (= x357 (x750 (+ x871 32))))) (and (=> (and (not x784) (= 64 x40)) x3) (=> (and x784 (and (= x443 (> x264 96)) (= x888 (x750 (+ x871 64))) (= x517 (x190 x888)) (= (x750 (+ 64 x849)) x1124))) (and (=> x443 x453) (=> (and (not x443) (= 96 x40)) x3))))))) (=> (and (= x40 0) (not x1248)) x3)))))
(assert (x150 x857 x630 x759 x816))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1079 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x1079 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x1079 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x1079 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x1079 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x1079 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (and x22 x943) x1292))
(assert (x328 (- x569 x816)))
(assert (x150 x323 x16 x630 x857))
(assert (x1050 x838))
(assert (= (=> (and (= (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1079) x1330) (= x254 (> x432 18446744073709551615)) (= (x750 (+ x1169 x1170)) x432) (not (> x839 x875)) (= 0 x200) (= x1309 (x750 (+ x330 31))) (not (< 18446744073709551615 x145)) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1309) (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x1309 x875) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1309) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875)))) (= (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x753) x1170) (= x746 (x750 (+ x145 x33))) (= (ite x403 1 0) x200) (not (> x241 18446744073709551615)) (= (x504 x330) x145) (= (x750 (+ x330 32)) x1001) (= x645 (x750 (+ x1330 32))) (= (x750 (+ x645 31)) x753) (= x330 (x750 (+ x241 x173))) (= x1069 (< x432 x1169)) (= (x750 (+ x145 31)) x1079) (= (x504 x173) x241) (= x403 (or x254 x1069)) (= x839 (x750 (+ x1001 x145))) (= (x750 (+ 32 x1169)) x33) (= (not (< x137 x1291)) x927) (= x137 (x750 (+ x173 32)))) (and x927 (=> (= x974 x432) x662))) x825))
(assert (and (=> (< 0 32) (= x1015 (+ (* 32 (x965 x1015 32)) (x409 x1015 32)))) (x788 x1015 32) (x664 x1015 32) (x800 x1015 32)))
(assert (x600 x358))
(assert (x600 x177))
(assert (x600 x390))
(assert (= (and (not x1150) x1038) x568))
(assert (x328 (- x211 x857)))
(assert (x328 (- x1158 x34)))
(assert (= x872 (and (not x1294) x45)))
(assert (= (x1118 (x1163 18446744073709551615)) 18446744073709551615))
(assert (x600 x426))
(assert (and (=> (< 0 32) (= x603 (+ (* 32 (x965 x603 32)) (x409 x603 32)))) (x788 x603 32) (x664 x603 32) (x800 x603 32)))
(assert (x600 x366))
(assert (x600 x865))
(assert (x692 x1158 (- x211 x34)))
(assert (=> (>= 10000 x745) (= (x1163 x745) (x1080 x745))))
(assert (x600 x171))
(assert (x600 x519))
(assert (x479 x1360))
(assert (x600 x736))
(assert (= (or x1180 x431) x1161))
(assert (x692 x759 (- x816 x1158)))
(assert (and (=> (< 0 32) (= x253 (+ (* 32 (x965 x253 32)) (x409 x253 32)))) (x788 x253 32) (x664 x253 32) (x800 x253 32)))
(assert (x692 x1303 (- x899 x816)))
(assert (x692 x323 (- x16 x759)))
(assert (= (or x1142 x667) x1162))
(assert (x436 x590))
(assert (x164 115792089237316195423570985008687907853269984665640564039457584007913129639935 x912))
(assert (x600 x400))
(assert (= x926 (x1118 (x1080 x926))))
(assert (x526 x211 x1158 x816 x759))
(assert (= x3 (=> (and (= x28 (< x264 x40)) (or (not x28) (and x28 (= (x750 (+ x264 x849)) x747)))) x437)))
(assert (x692 x630 (- x857 x912)))
(assert (x526 x211 x1158 x630 x857))
(assert (x692 x857 (- x630 x816)))
(assert (x580 x980))
(assert (= 1099511627775 (x1118 (x1163 1099511627775))))
(assert (x133 x74 x448))
(assert (= (and x1159 x521) x25))
(assert (x1050 x753))
(assert (and (=> (< 0 32) (= x293 (+ (* 32 (x965 x293 32)) (x409 x293 32)))) (x788 x293 32) (x664 x293 32) (x800 x293 32)))
(assert (x600 x172))
(assert (x328 (- x759 x1303)))
(assert (x150 x1303 x899 x34 x1125))
(assert (x600 x614))
(assert (x251 x656))
(assert (x436 x223))
(assert (x600 x1179))
(assert (x328 (- x34 x630)))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x295) (- (* x295 32) (* x295 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 32 (- x295 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 32 (- x295 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x295 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x295 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x295 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x295 32) (x991 32 x295)) (x256 32 x295) (x1217 32 x295) (x1071 32 x295) (x732 32 x295) (x351 32 x295)))
(assert (x479 x926))
(assert (x600 x1337))
(assert (x328 (- x1158 x323)))
(assert (x600 x46))
(assert (= (x1080 3414818225) (x1163 3414818225)))
(assert (x692 x857 (- x630 x323)))
(assert (= x312 (or x1344 x1196 x901)))
(assert (x328 (- x630 x816)))
(assert (x328 (- x16 x816)))
(assert (x692 x34 (- x1125 x1303)))
(assert (x328 (- x34 x857)))
(assert (= x1133 (or x26 x936 x221)))
(assert (= x700 (and x1294 x45)))
(assert (x600 x1154))
(assert (x328 (- x1158 x912)))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1102 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x1102 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x1102 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x1102 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x1102 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x1102 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x600 x1169))
(assert (x600 x572))
(assert (x600 x473))
(assert (x479 x655))
(assert (x600 x1351))
(assert (x600 x498))
(assert (= (=> (and (and (and (= x867 x1141) (= (>= 1 x867) x1262) (= (= x726 x1262) x108) (= x879 1)) (and (= x1006 (x509 (x1080 x897))) (= (= x540 0) x726) (= (x1027 x878) x1204) (< 0 x1006) (not (= 418493994 x1018)) (not (< 3 x1204)) (= x1014 x67) (= x540 x216) (= x878 (x1335 x86 1)) (not (> 418493994 x1018)) (> 256 x1204) (= x1141 x1204) (= 0 x719) (<= x1014 1461501637330902918203684832716283019655932542975) (= 428079936 x1018) (> 791671133 x1018) (> 2307130307 x1018) (= (x1186 (x1080 x1014) (x1163 2) 0) x86))) (and (> 1461501637330902918203684832716283019655932542976 x1351) (<= x1351 1461501637330902918203684832716283019655932542975) (>= x1351 0) (< 0 x652) (not (> 2307130307 x624)) (not x1349) (not x659) (= x67 x926) (= x624 3414818225) (= x1012 (x1186 (x1080 x926) (x1163 2) 0)) (not (< x624 3414818225)) (= x768 (x1335 x1012 1)) (not (> 2961265839 x624)) (= (x509 (x1080 x897)) x652) (= x216 x1351) (= (x946 x768) x1351) (>= 1461501637330902918203684832716283019655932542975 x926))) x108) x260))
(assert (x692 x1125 (- x34 x759)))
(assert (x150 x759 x816 x630 x857))
(assert (= x1211 (or x166 x1219 x236)))
(assert (= (x1118 (x1335 x490 1)) (+ 1 (x1118 x490))))
(assert (= (x1163 66268296141940672851042108147304593538321322149885339258387047461996478413388) (x1080 66268296141940672851042108147304593538321322149885339258387047461996478413388)))
(assert (x692 x34 (- x1125 x816)))
(assert (x328 (- x16 x857)))
(assert (x526 x569 x912 x34 x1125))
(assert (x600 x932))
(assert (x600 x259))
(assert (x600 x884))
(assert (x600 x813))
(assert (x600 x93))
(assert (= 452312848583266388373324160190187140051835877600158453279131187530910662655 (x1118 (x1163 452312848583266388373324160190187140051835877600158453279131187530910662655))))
(assert (= x720 (and (not x613) x430)))
(assert (x600 x1330))
(assert (x600 x145))
(assert (x600 x56))
(assert (x251 x1303))
(assert (= (or x1092 x1183) x584))
(assert (x328 (- x323 x630)))
(assert (x692 x34 (- x1125 x857)))
(assert (= x1276 (=> (= (not (> x454 128)) x955) (and x955 (=> (= 128 x15) x100)))))
(assert (x1050 x1102))
(assert (x328 (- x1303 x16)))
(assert (x150 x34 x1125 x1303 x899))
(assert (x600 x1017))
(assert (= x118 (or (and x122 (not x787)) x1133)))
(assert (x328 x511))
(assert (x580 x634))
(assert (x600 x653))
(assert (= (x1163 3714247998) (x1080 3714247998)))
(assert (x328 x16))
(assert (x328 x899))
(assert (x526 x1125 x34 x759 x816))
(assert (= (x1118 (x1163 65536)) 65536))
(assert (x600 x492))
(assert (= (x1163 3629318494) (x1080 3629318494)))
(assert (x479 x951))
(assert (x692 x1158 (- x211 x899)))
(assert (x600 x602))
(assert (x692 x912 (- x569 x1125)))
(assert (x600 x44))
(assert (= x612 (or x601 x1255)))
(assert (x328 (- x912 x1158)))
(assert (x600 x154))
(assert (x251 x211))
(assert (x328 (- x569 x34)))
(assert (x133 x68 x1355))
(assert (x600 x990))
(assert (= (and (not x828) x1157) x32))
(assert (= x609 (and x576 x269)))
(assert (x150 x34 x1125 x211 x1158))
(assert (x692 x912 (- x569 x759)))
(assert (x692 x1303 (- x899 x16)))
(assert (= (and x826 (not x784)) x981))
(assert (= (and (not x521) x1159) x762))
(assert (x600 x652))
(assert (x600 x290))
(assert (x328 (- x1125 x1303)))
(assert (x600 x646))
(assert (x600 x546))
(assert (x600 x562))
(assert (= x655 (x1118 (x1080 x655))))
(assert (= (x1080 2446411860) (x1163 2446411860)))
(assert (x526 x630 x857 x816 x759))
(assert (= x381 (or x1327 x273)))
(assert (x526 x857 x630 x34 x1125))
(assert (x692 x899 (- x1303 x912)))
(assert (x150 x569 x912 x1303 x899))
(assert (= 38731024311866695680078894486728619323467920029808689935542550702492038987776 (x1118 (x1163 38731024311866695680078894486728619323467920029808689935542550702492038987776))))
(assert (x580 x753))
(assert (x692 x1125 (- x34 x630)))
(assert (x600 x470))
(assert (x600 x1105))
(assert (x526 x899 x1303 x569 x912))
(assert (x600 x606))
(assert (x526 x34 x1125 x211 x1158))
(assert (x526 x323 x16 x816 x759))
(assert (x600 x1130))
(assert (x692 x211 (- x1158 x759)))
(assert (x600 x1119))
(assert (x479 x897))
(assert (x479 x1140))
(assert (and (=> (< 0 32) (= x838 (+ (* 32 (x965 x838 32)) (x409 x838 32)))) (x788 x838 32) (x664 x838 32) (x800 x838 32)))
(assert (= (=> (and (= 1 x250) (= 32 x1271)) x364) x967))
(assert (x600 x763))
(assert (x328 x912))
(assert (x600 x335))
(assert (x600 x1047))
(assert (x692 x1158 (- x211 x759)))
(assert (x1050 x738))
(assert (x600 x1077))
(assert (x1050 x179))
(assert (x600 x930))
(assert (= (and x242 x340) x626))
(assert (= (+ 1 (x1118 x617)) (x1118 (x1335 x617 1))))
(assert (x600 x458))
(assert (= (x472 x1314) 0))
(assert (x600 x415))
(assert (= (=> (and (= x245 (x750 (+ 31 x308))) (= x549 (> x201 18446744073709551615)) (= (x750 (+ x56 31)) x1298) (= 0 x178) (= x181 (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x980)) (not (> x234 18446744073709551615)) (= (not (< x705 x473)) x220) (= (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1298) x546) (not (< x875 x754)) (= (x750 (+ 32 x546)) x553) (= (x504 x308) x56) (not (< 18446744073709551615 x56)) (= x754 (x750 (+ x948 x56))) (= x308 (x750 (+ x1072 x234))) (= (x504 x1072) x234) (= x785 (> x252 x201)) (= x990 (x750 (+ x998 x56))) (= x705 (x750 (+ 32 x1072))) (= (x750 (+ 32 x252)) x998) (= x948 (x750 (+ x308 32))) (= x201 (x750 (+ x181 x252))) (= x225 (or x549 x785)) (= x980 (x750 (+ x553 31))) (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x245) (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (< x245 x875) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x245) (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= (ite x225 1 0) x178)) (and (=> (= x201 x1160) x325) x220)) x336))
(assert (= x846 (and (not x1221) x872)))
(assert (x600 x357))
(assert (= 2307130307 (x1118 (x1163 2307130307))))
(assert (x692 x211 (- x1158 x16)))
(assert (= (and x381 x1315) x431))
(assert (x600 x804))
(assert (= 1818647125 (x1118 (x1163 1818647125))))
(assert (x600 x524))
(assert (x600 x280))
(assert (= x893 (and x368 x423)))
(assert (= (x1118 (x1163 31536000)) 31536000))
(assert (x150 x857 x630 x34 x1125))
(assert (= (x1118 (x1163 32000000000000000000)) 32000000000000000000))
(assert (x328 (- x759 x34)))
(assert (x600 x571))
(assert (x600 x1323))
(assert (x1050 x342))
(assert (= (x1080 89953063794570797914675343120038501642627609741519254829220540789936042803200) (x1163 89953063794570797914675343120038501642627609741519254829220540789936042803200)))
(assert (= x57 (and x940 x1364)))
(assert (x328 x1356))
(assert (x600 x334))
(assert (x1050 x371))
(assert (= x1322 (=> (and (= (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x494) x801) (= (x711 (* x272 32)) x1268) (= x803 (x750 (+ 31 x434))) (= x494 (x750 (+ 31 x259))) (= (x504 x434) x272) (= x866 (x750 (+ x248 x139))) (= (< 18446744073709551615 x675) x378) (not (< 18446744073709551615 x742)) (= (x750 (+ 32 x795)) x171) (= x675 (x750 (+ x795 x801))) (= x742 (x504 x476)) (= (x711 (* x272 32)) x139) (= (< x675 x795) x744) (= (or x378 x744) x65) (= (> x866 x248) x868) (= (ite x65 1 0) x640) (= 0 x640) (not (> x272 18446744073709551615)) (= (x750 (+ 32 x434)) x248) (or (and (> x803 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875)) (and (< x803 x875) (= (<= x803 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (= x259 (x750 (+ x1268 32))) (not (> x866 x875)) (= (x750 (+ x571 x742)) x434)) (and (=> x868 x42) (=> (and (= x1244 x675) (not x868)) x831)))))
(assert (x692 x857 (- x630 x1158)))
(assert (and (=> (< 0 32) (= x562 (+ (* 32 (x965 x562 32)) (x409 x562 32)))) (x788 x562 32) (x664 x562 32) (x800 x562 32)))
(assert (x600 x333))
(assert (x600 x904))
(assert (x600 x637))
(assert (and (=> (< 0 32) (= x1079 (+ (* 32 (x965 x1079 32)) (x409 x1079 32)))) (x788 x1079 32) (x664 x1079 32) (x800 x1079 32)))
(assert (= (and x487 (not x392)) x138))
(assert (x600 x875))
(assert (x600 x341))
(assert (= (or x937 x890 (and x686 x706) x1003 x159 x1114 x799 x916 x1299 x1348 x1174 x595 x267) x667))
(assert (= 24000000000000000000 (x1118 (x1163 24000000000000000000))))
(assert (x526 x857 x630 x816 x759))
(assert (x692 x857 (- x630 x16)))
(assert (x150 x816 x759 x323 x16))
(assert (x328 (- x857 x323)))
(assert (x328 (- x211 x34)))
(assert (x600 x463))
(assert (x600 x764))
(assert (= (or (and x1211 (not x559)) x725) x20))
(assert (x150 x34 x1125 x630 x857))
(assert (x600 x247))
(assert (x164 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1303))
(assert (= x1181 (and x1228 (not x274))))
(assert (x580 x1298))
(assert (x600 x211))
(assert (x600 x774))
(assert (x600 x482))
(assert (x600 x1188))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x253 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x253 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x253 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x253 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x253 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x253 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x328 (- x899 x1125)))
(assert (x600 x468))
(assert (x150 x34 x1125 x759 x816))
(assert (x526 x1125 x34 x1303 x899))
(assert (x600 x853))
(assert (x600 x544))
(assert (x479 x1318))
(assert (= (and x1345 x682) x1300))
(assert (x328 (- x211 x1125)))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x485 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x485 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x485 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x485 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x485 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x485 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x600 x688))
(assert (x133 x783 x459))
(assert (x1050 x1336))
(assert (= x493 (and x846 (not x530))))
(assert (x600 x185))
(assert (x526 x816 x759 x630 x857))
(assert (x328 (- x816 x630)))
(assert (x164 115792089237316195423570985008687907853269984665640564039457584007913129639935 x630))
(assert (x150 x899 x1303 x912 x569))
(assert (= x1286 (=> (and (< (* x572 32000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x127 (* 32000000000000000000 x572)) (= x971 (> x127 x581))) (and (=> (and (= x824 x96) (not x971)) x1269) (=> (and x971 (and (and x258 (and (= x14 x1176) (= 68 x90) (= x90 68) (= x1005 (x124 (- x90 4))) (= (or (> x1005 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (< x1005 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1005) true))) x706) (= x309 x1306) (= 89953063794570797914675343120038501642627609741519254829220540789936042803200 x918) (not (= 1008072988 x460)) (= x1013 (x509 (x1080 x1270))) (not (= x460 1997499061)) (not (> 4 x90)) (not (= 1703538655 x460)) (= x460 3336544575) (> x1013 0))) (and (= x376 68) (= x1329 (< x1076 x759)) (= x997 (> x898 x1076)) (= x862 128) (not x997) (not (< x1331 x575)) (= (x750 (+ 64 x1296)) x680) (not (> 1631253430 x120)) (not (< x120 2835717307)) (not (> 4 x376)) (= (x711 (* 32000000000000000000 x572)) x1331) (= (x599 x1326 x558) x712) (= x1306 (x124 (- x1076 x898))) (> x674 0) (<= 0 x1076) (= (x124 (- x1331 x581)) x280) (= x774 (x750 (+ 32 x1296))) (not (= 3629318494 x120)) (>= x1026 0) (= x258 (= x1270 x1026)) (= (ite (< x461 32000000000000000000) 1 0) x558) (= x408 (= x572 0)) (>= 1461501637330902918203684832716283019655932542975 x1026) (= x1326 (ite (not x408) 1 0)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1176) (= (x124 (- x680 x824)) x261) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1076) (= x703 101252785324535458888692376134782526488201703179675774606846032596167196409856) (not x748) (>= x1176 0) (= x280 x898) (not (= 3714247998 x120)) (= 0 x712) (>= x1076 0) (= (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1366) (and (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1366)) (> 64 x1366))) x748) (= x1296 (x750 (+ 4 x824))) (<= x1076 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x759 x898) (= (x124 (- x376 4)) x1366) (= 3755674541 x120) (not x1329) (= (x965 115792089237316195423570985008687907853269984665640564039457584007913129639935 x572) x461) (= (x509 (x1080 x1253)) x674) (= x261 x376) (not (> 3629318494 x120)) (> 1461501637330902918203684832716283019655932542976 x1026)))) (and (=> x706 x1061) (=> (and (not x706) (= x959 (= 0 x1176))) (and (=> (and (= x82 x359) x959) x1145) (=> (and (= x779 (> x309 x14)) (not x959)) (and (=> x779 x1061) (=> (and (not x779) (and (= x511 (x124 (- x14 x309))) (= (= 0 (ite x1200 1 0)) x532) (= x1200 (> x511 115792089237316195423570985008687907853269984665640)))) (and (=> (and (and (= x1297 (x711 (* 1000000000000000000000000000 x511))) (= (< x899 x736) x1294) (= (x965 x1297 x14) x899)) x532) (and (=> (and (= x1221 (> x736 1000000000000000000000000000)) (not x1294)) (and (=> (and (not x1221) (and (= (= x736 1000000000000000000000000000) x1031) (= (x124 (- 1000000000000000000000000000 x736)) x707) (= x530 (> x736 x899)))) (and (=> x530 x1061) (=> (and (not x530) (and (= (< x1265 x1154) x265) (= x857 (x124 (- x899 x736))))) (and (=> (and (not x265) (and (= (x124 (- x1265 x1154)) x630) (= (ite (not x396) 1 0) x783) (= (ite (< x29 x857) 1 0) x459) (= (= x697 0) x6) (= (x599 x783 x459) x697) (= (x965 115792089237316195423570985008687907853269984665640564039457584007913129639935 x630) x29) (= (= 0 x630) x396))) (and (=> (not x6) x1061) (=> (and (= (x711 (x991 x630 x857)) x708) x6) (and (=> x1031 x1061) (=> (and (not x1031) (and (= (x124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x567)) x621) (= x1319 (< x621 x1154)) (= x567 (x965 x708 x707)))) (and (=> x1319 x1061) (=> (and (and (= x1016 (x750 (+ x567 x1154))) (= x82 x1016)) (not x1319)) x1145))))))) (=> x265 x1061))))) (=> x1221 x1061))) (=> (and x1294 (= x1034 (< x1154 x359))) (and (=> x1034 x1061) (=> (and (not x1034) (and (= x68 (ite (not x988) 1 0)) (= (ite (< x1235 x899) 1 0) x1355) (= x1303 (x124 (- x1154 x359))) (= (= x1303 0) x988) (= x1004 (= x333 0)) (= (x599 x68 x1355) x333) (= (x965 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1303) x1235))) (and (=> (and (and (= (< 0 x736) x1030) (= x348 (x711 (x991 x1303 x899)))) x1004) (and (=> (not x1030) x1061) (=> (and x1030 (and (= (> x359 x1304) x1066) (= x72 (x965 x348 x736)) (= (x124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x72)) x1304))) (and (=> (and (not x1066) (and (= x35 (x750 (+ x72 x359))) (= x35 x82))) x1145) (=> x1066 x1061))))) (=> (not x1004) x1061))))))) (=> (not x532) x1061)))))))))))))
(assert (x600 x808))
(assert (x600 x1120))
(assert (= (and x613 x430) x518))
(assert (x328 (- x34 x569)))
(assert (x600 x1333))
(assert (x526 x899 x1303 x34 x1125))
(assert (x692 x816 (- x759 x1125)))
(assert (x526 x211 x1158 x16 x323))
(assert (x600 x964))
(assert (x328 (- x1158 x16)))
(assert (x526 x1125 x34 x816 x759))
(assert (x600 x745))
(assert (x328 (- x211 x816)))
(assert (= x831 (=> (and (= (x504 x739) x1135) (= (x750 (+ x606 x289)) x933) (not (> x933 x875)) (= 0 x1146) (= x463 (x750 (+ x95 31))) (= x174 (x750 (+ x571 x1135))) (= x1033 (x750 (+ x1244 x953))) (= (< x1033 x1244) x679) (= x887 (x711 (* 32 x1356))) (= (or x411 x679) x594) (not (< 18446744073709551615 x1356)) (not (< 18446744073709551615 x1135)) (or (and (= (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x275)) (< x275 x875)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x275))) (= x289 (x711 (* 128 x1356))) (= x953 (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x463)) (= (x750 (+ x174 32)) x606) (= x1146 (ite x594 1 0)) (= x275 (x750 (+ x174 31))) (= (> x1033 18446744073709551615) x411) (= x95 (x750 (+ x887 32))) (= x908 (x750 (+ 32 x1244))) (= (< x606 x933) x772) (= (x504 x174) x1356)) (and (=> (and (= x1033 x257) (not x772)) x619) (=> x772 x399)))))
(assert (x580 x1282))
(assert (=> (>= 10000 x926) (= (x1080 x926) (x1163 x926))))
(assert (x526 x912 x569 x1158 x211))
(assert (x600 x897))
(assert (x600 x355))
(assert (x600 x50))
(assert (= x205 (and x231 (not x1319))))
(assert (= 0 (x472 x806)))
(assert (= (x1163 1703538655) (x1080 1703538655)))
(assert (= x979 (and x312 x557)))
(assert (= x1236 (and x1150 x1038)))
(assert (x600 x174))
(assert (x600 x1060))
(assert (x600 x948))
(assert (x328 (- x816 x211)))
(assert (x600 x494))
(assert (x328 (- x1125 x16)))
(assert (= (and x1162 x1078) x236))
(assert (x600 x676))
(assert (x692 x816 (- x759 x16)))
(assert (x600 x1052))
(assert (x600 x845))
(assert (= (x1118 (x1163 115792089237316195423570985008687907853269984665640)) 115792089237316195423570985008687907853269984665640))
(assert (x600 x537))
(assert (x580 x665))
(assert (= 1099511627776 (x1118 (x1163 1099511627776))))
(assert (x328 (- x816 x1125)))
(assert (x600 x1128))
(assert (x600 x439))
(assert (x479 x745))
(assert (= x522 (=> (and (= (x991 x759 x816) x1216) (= x844 x821) (= x1164 (x750 (+ x907 32))) (= x362 (= 0 x229)) (= x1052 (x509 (x1080 x1253))) (< (x991 x759 x816) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x59 x1025) (= (+ x821 x681) x1025) (= (* 259200 x480) x78) (= x844 (x860 x824)) (< 0 x77) (= x681 x280) (= (x750 (+ x824 32)) x642) (= (x750 (+ x642 4)) x907) (= (x965 x78 31536000000000000000000000000000000) x1041) (= x816 (x1046 128)) (= (x750 (+ 32 x1164)) x524) (not (= 1631253430 x611)) (not x889) (not (> x59 x1107)) (= (or (> x290 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x290) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x290)))) x1078) (= x897 x383) (= x683 (x124 (- x880 x642))) (= 100 x1199) (= x577 x1107) (= x1199 x683) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x280 x844)) (not (> 4 x1199)) (= x1225 (x599 1461501637330902918203684832716283019655932542975 x161)) (< x611 2446411860) (= x290 (x124 (- x1199 4))) (= x577 (* 24000000000000000000 x572)) (not (> 1631253430 x611)) (= x501 x280) (= x1216 x480) (< (* 24000000000000000000 x572) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (< x611 2835717307) (= x611 1818647125) (= (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x372) true) (> 32 x372)) (> x372 57896044618658097711785492504343953926634992332820282019728792003956564819967)) x889) (not (= 0 x1052)) (not x362) (= 49030629496366843004481757320339876143172005997263197338613197606857211904000 x519) (= x880 (x750 (+ 96 x907))) (< (* 259200 x480) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1225 x1318) (= x77 (x509 (x1080 x1253)))) (and (=> (and (not x1078) (and (= x996 true) (= x723 x1318))) (and (=> (and (and (= x715 x383) (= x828 true) (= x501 x1093)) x996) (and (=> (and (not x828) (= 0 x1156)) x835) (=> (and (and (> 256 x63) (>= 255 x63) (= (= x63 0) x613) (>= x63 0)) x828) (and (=> (and x613 (and (= x924 (x446 x538)) (= (> x924 0) x199) (= (x1186 (x1080 x897) x316 0) x538) (<= x924 255) (= x316 (x1186 (x1080 66268296141940672851042108147304593538321322149885339258387047461996478413388) (x1163 0) 0)) (<= 0 x924) (< x924 256))) (and (=> (and x199 (and (= (< x665 x315) x114) (<= 0 x315) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x315))) (and (=> (and (not x114) (and (and (and (= x1103 (x124 (- x1167 4))) (= (x509 (x1080 x1270)) x374) (= x1167 68) (not (= 1008072988 x765)) (not (= x765 1997499061)) (> x374 0) (= x1176 x1212) (not (= x765 1703538655)) (= 89953063794570797914675343120038501642627609741519254829220540789936042803200 x1320) (= 3336544575 x765) (= (or (> x1103 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 64 x1103) (= true (<= x1103 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x702) (not (< x1167 4)) (= x1167 68) (= x542 x1076)) x1213) (and (>= 1461501637330902918203684832716283019655932542975 x1026) (<= 0 x1176) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1176) (<= 0 x1026) (<= 0 x1076) (= (x124 (- x665 x315)) x1158) (= 128 x989) (= (= x1270 x1026) x1213) (> 1461501637330902918203684832716283019655932542976 x1026) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1076)))) (and (=> (and (= (= x1176 0) x960) (not x702)) (and (=> (and (= x1011 x359) x960) x967) (=> (and (not x960) (= x318 (< x1212 x542))) (and (=> (and (not x318) (and (= (= 0 (ite x64 1 0)) x206) (= x64 (< 115792089237316195423570985008687907853269984665640 x922)) (= (x124 (- x1212 x542)) x922))) (and (=> (not x206) x848) (=> (and (and (= x126 (< x569 x736)) (= x569 (x965 x623 x1212)) (= x623 (x711 (* 1000000000000000000000000000 x922)))) x206) (and (=> (and (= (< 1000000000000000000000000000 x736) x757) (not x126)) (and (=> (and (and (= (= x736 1000000000000000000000000000) x669) (= x1150 (< x569 x736)) (= x192 (x124 (- 1000000000000000000000000000 x736)))) (not x757)) (and (=> x1150 x848) (=> (and (and (= (< x1265 x1154) x570) (= (x124 (- x569 x736)) x16)) (not x1150)) (and (=> x570 x848) (=> (and (and (= x323 (x124 (- x1265 x1154))) (= x268 (ite (not x370) 1 0)) (= x995 (x965 115792089237316195423570985008687907853269984665640564039457584007913129639935 x323)) (= (x599 x268 x1245) x695) (= x370 (= 0 x323)) (= (ite (< x995 x16) 1 0) x1245) (= x1104 (= 0 x695))) (not x570)) (and (=> (not x1104) x848) (=> (and x1104 (= x1089 (x711 (x991 x323 x16)))) (and (=> x669 x848) (=> (and (not x669) (and (= x677 (< x639 x1154)) (= x639 (x124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x341))) (= (x965 x1089 x192) x341))) (and (=> x677 x848) (=> (and (not x677) (and (= x781 x1011) (= (x750 (+ x341 x1154)) x781))) x967))))))))))) (=> x757 x848))) (=> (and x126 (= x622 (> x359 x1154))) (and (=> (and (not x622) (and (= (= 0 x912) x282) (= (ite (not x282) 1 0) x223) (= (x965 115792089237316195423570985008687907853269984665640564039457584007913129639935 x912) x802) (= (x124 (- x1154 x359)) x912) (= x769 (= 0 x380)) (= (x599 x223 x770) x380) (= (ite (> x569 x802) 1 0) x770))) (and (=> (not x769) x848) (=> (and (and (= (x711 (x991 x912 x569)) x656) (= x274 (< 0 x736))) x769) (and (=> (not x274) x848) (=> (and (and (= x394 (< x627 x359)) (= (x965 x656 x736) x458) (= (x124 (- 115792089237316195423570985008687907853269984665640564039457584007913129639935 x458)) x627)) x274) (and (=> (and (and (= x841 x1011) (= (x750 (+ x458 x359)) x841)) (not x394)) x967) (=> x394 x848))))))) (=> x622 x848))))))) (=> x318 x848))))) (=> x702 x848))) (=> (and (= x1156 0) x114) x835))) (=> (and (not x199) (= x1156 0)) x835))) (=> (and (= x1156 0) (not x613)) x835))))) (=> (and (not x996) (= x1156 0)) x835))) (=> (and x1078 (= 0 x804)) x387)))))
(assert (= (x1163 31536000) (x1080 31536000)))
(assert (= x1279 (and x141 (not x206))))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1298 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x1298 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x1298 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x1298 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x1298 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x1298 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x328 (- x1303 x323)))
(assert (= x444 (and x793 (not x28))))
(assert (x600 x89))
(assert (x600 x766))
(assert (= (x1080 31536000000000000000000000000000000) (x1163 31536000000000000000000000000000000)))
(assert (x600 x179))
(assert (x150 x1125 x34 x912 x569))
(assert (x328 (- x323 x1303)))
(assert (= x1180 (and x381 (not x1315))))
(assert (x600 x761))
(assert (x692 x323 (- x16 x630)))
(assert (x600 x1336))
(assert (x328 (- x759 x211)))
(assert (x600 x839))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129380736) x480) (- (* x480 259200) (* x480 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 259200 (- x480 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 259200 (- x480 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129380736) (- x480 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x480 115792089237316195423570985008687907853269984665640564039457584007913129639936) 259200) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x480 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x480 259200) (x991 259200 x480)) (x256 259200 x480) (x1217 259200 x480) (x1071 259200 x480) (x732 259200 x480) (x351 259200 x480)))
(assert (= x395 (and x772 x219)))
(assert (= (or x277 x20) x122))
(assert (= (x1163 3515665801) (x1080 3515665801)))
(assert (x526 x1158 x211 x899 x1303))
(assert (x692 x211 (- x1158 x323)))
(assert (x600 x727))
(assert (x251 x348))
(assert (x526 x899 x1303 x323 x16))
(assert (x526 x323 x16 x1303 x899))
(assert (x600 x654))
(assert (x600 x95))
(assert (= (and (not x199) x518) x812))
(assert (x328 (- x34 x816)))
(assert (x436 x603))
(assert (x150 x816 x759 x211 x1158))
(assert (= (x1118 (x1163 2835717307)) 2835717307))
(assert (= (and x1285 x593) x1345))
(assert (x600 x281))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x342 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x342 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x342 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x342 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x342 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x342 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x600 x765))
(assert (x328 x816))
(assert (x526 x912 x569 x1125 x34))
(assert (x328 (- x569 x1125)))
(assert (x600 x81))
(assert (x600 x563))
(assert (= (and x345 x25) x1064))
(assert (x150 x1125 x34 x630 x857))
(assert (x600 x1024))
(assert (x692 x1158 (- x211 x569)))
(assert (x600 x895))
(assert (x600 x1235))
(assert (x328 x755))
(assert (x328 (- x1125 x857)))
(assert (x600 x1171))
(assert (x133 x1326 x558))
(assert (x526 x569 x912 x1158 x211))
(assert (x328 (- x1303 x211)))
(assert (= (+ 1 (x1118 x1012)) (x1118 (x1335 x1012 1))))
(assert (x150 x1158 x211 x912 x569))
(assert (= (and x242 (not x340)) x716))
(assert (x526 x569 x912 x1303 x899))
(assert (x526 x816 x759 x323 x16))
(assert (x328 (- x569 x1303)))
(assert (x526 x1303 x899 x211 x1158))
(assert (= (x1080 791671133) (x1163 791671133)))
(assert (x600 x1355))
(assert (x600 x175))
(assert (= (x1080 3755674541) (x1163 3755674541)))
(assert (x600 x1149))
(assert (= (and x1211 x559) x725))
(assert (x328 x569))
(assert (=> (>= 10000 x1253) (= (x1163 x1253) (x1080 x1253))))
(assert (x692 x630 (- x857 x323)))
(assert true)
(assert (x526 x857 x630 x759 x816))
(assert (x692 x569 (- x912 x34)))
(assert (x600 x770))
(assert (= (x1118 (x1163 1997499061)) 1997499061))
(assert (x526 x323 x16 x1125 x34))
(assert (x600 x425))
(assert (= 3414818225 (x1118 (x1163 3414818225))))
(assert (x692 x630 (- x857 x211)))
(assert (x526 x1125 x34 x912 x569))
(assert (x692 x759 (- x816 x211)))
(assert (x328 (- x323 x34)))
(assert (x600 x182))
(assert (x600 x734))
(assert (x600 x648))
(assert (x600 x705))
(assert (= 0 (x472 x888)))
(assert (x600 x978))
(assert (x600 x753))
(assert (x600 x969))
(assert (x600 x27))
(assert (x526 x1158 x211 x569 x912))
(assert (x328 (- x1303 x1158)))
(assert (= x487 (and x1064 x1203)))
(assert (x600 x424))
(assert (x251 x1212))
(assert (= x1289 (=> (and (= (> x473 x1072) x1009) (= (x1335 x731 1) x696) (> 1099511627776 x766) (= x641 (x597 x696)) (= x572 x552) (= (x1070 x974) x637) (not (or (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1055) (<= x1059 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (<= x1055 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x1059 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x1055 x1059)))) (= x1185 (> x239 x252)) (>= 65535 x572) (= (x1070 x1067) x932) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1109) (and (= (<= x1109 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (> 160 x1109)))) (<= 0 x1353) (>= x766 0) (= x1121 (x504 x1263)) (<= 0 x401) (not (> x1316 18446744073709551615)) (= x1275 (x599 1461501637330902918203684832716283019655932542975 x161)) (> 256 x641) (= (x124 (- x875 x796)) x1055) (= x591 (> x252 18446744073709551615)) (= (x750 (+ x239 x1053)) x252) (= (ite x651 1 0) x1259) (= x1259 0) (not (> x552 18446744073709551615)) (= (x124 (- x1109 31)) x610) (= x735 (or x1185 x591)) (= x1258 (x750 (+ 31 x1263))) (= x1072 (x750 (+ 32 x1263))) (= (x750 (+ 31 x266)) x485) (= (x504 x571) x1000) (= x10 (x750 (+ x239 32))) (= x552 (x504 x963)) (= (x750 (+ 160 x829)) x239) (= x1263 (x750 (+ x1316 x571))) (= (x750 (+ x571 x1000)) x963) (= x928 0) (= (x1186 (x1080 x1275) (x1163 2) 0) x731) (= x473 (x750 (+ x1072 x1017))) (= (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x485) x1053) (= x766 (x1091 x696)) (not (< 18446744073709551615 x1121)) (< x572 65536) (= (x105 x696) x1353) (= (x750 (+ x963 32)) x1059) (= (> x239 18446744073709551615) x298) x186 (= (ite x735 1 0) x928) (= (x711 (* 32 x552)) x796) (= (> x829 x239) x671) (not (< x875 x473)) (<= x401 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x1017 (x711 (* 32 x1121))) (>= x572 0) (= x932 x637) (= x401 (x842 x731)) (not (> x641 3)) (= (or x671 x298) x651) (= (x711 (* 32 x1121)) x1242) (<= x766 1099511627775) (= (x504 x571) x1316) (< x1353 1461501637330902918203684832716283019655932542976) (= (x750 (+ 32 x1242)) x266) (or (and (< x1258 x875) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1258))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875) (> x1258 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (or (and (> x610 x1000) (= (<= x1000 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x610))) (and (<= x610 57896044618658097711785492504343953926634992332820282019728792003956564819967) (> x1000 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (<= x1353 1461501637330902918203684832716283019655932542975) (= x829 (x750 (+ x299 160))) (= x572 (x319 x696))) (and (=> (and (= x1160 x252) (not x1009)) x325) (=> x1009 x336)))))
(assert (= x296 (and x423 (not x368))))
(assert (x600 x264))
(assert (x600 x758))
(assert (= x195 (and (not x1066) x156)))
(assert (= (x1118 (x1335 x1058 1)) (+ (x1118 x1058) 1)))
(assert (x526 x857 x630 x569 x912))
(assert (x600 x499))
(assert (x526 x1303 x899 x1158 x211))
(assert (x600 x106))
(assert (x692 x569 (- x912 x899)))
(assert (= x1299 (and x741 (not x6))))
(assert (x164 115792089237316195423570985008687907853269984665640564039457584007913129639935 x34))
(assert (x600 x1111))
(assert (x600 x590))
(assert (= x666 (and x212 (not x1104))))
(assert (x692 x899 (- x1303 x569)))
(assert (x328 (- x34 x912)))
(assert (x600 x149))
(assert (x600 x1215))
(assert (= (=> (and (and (= (< 0 (x509 (x1080 x745))) x1117) (<= 0 x688) (> x897 0) (= x655 x67) (= (< 0 (x509 (x1080 x1253))) x1237) (> x1270 0) (= x391 true) (= x961 (x1335 x1058 1)) (<= 0 x67) (not (= x1270 x897)) (not (= x745 x1270)) (>= 1461501637330902918203684832716283019655932542975 x350) (= 865950217 x99) (not (= x1253 x1270)) (<= 0 x1227) (<= x897 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x1074) (= (x203 (x1080 x745)) x1060) (<= 0 x1074) (= (x203 (x1080 x1270)) x37) (= x354 (x203 (x1080 x1253))) x1117 (<= 0 x873) (<= x1270 1461501637330902918203684832716283019655932542975) (<= 0 x1026) (= x1058 (x1186 (x1080 x655) (x1163 2) 0)) x923 (< 0 x745) (>= 255 x63) (= x1074 x71) (= x556 3414818225) (not (> 2961265839 x556)) (= x1113 (x509 (x1080 x897))) (= x1233 x350) (= false x41) (= x321 false) (<= x67 1461501637330902918203684832716283019655932542975) x1237 (not (< x556 3414818225)) (<= x1253 1461501637330902918203684832716283019655932542975) (>= x350 0) (<= x1026 1461501637330902918203684832716283019655932542975) (<= 0 x354) (not (= x1253 x745)) (= (< 0 (x509 (x1080 x897))) x1274) (= x923 (> (x509 (x1080 x1270)) 0)) (= x1074 (x105 x961)) (>= x1337 0) (<= 0 x144) (not (= x1253 x897)) (= x1227 x1140) (<= 0 x1060) (<= 0 x37) (>= 1461501637330902918203684832716283019655932542975 x1227) (> x1113 0) (= 2 x614) (not (< x556 2307130307)) x1274 (<= x688 255) (<= 0 x63) (= (x203 (x1080 x897)) x1337) (> 1461501637330902918203684832716283019655932542976 x1074) (>= 255 x144) (< 0 x1253) (= 0 x775) (not (= x745 x897)) (= x495 false) (<= x655 1461501637330902918203684832716283019655932542975) (<= x745 1461501637330902918203684832716283019655932542975) (>= 1461501637330902918203684832716283019655932542975 x873)) (and (and (not (> 3414818225 x840)) (> x1120 0) (<= x360 1461501637330902918203684832716283019655932542975) (= x1143 x360) (= x67 x951) (= x1020 (x1335 x1132 1)) (<= 0 x360) (< x360 1461501637330902918203684832716283019655932542976) (not (< x840 2961265839)) (= x1111 x71) (= x1132 (x1186 (x1080 x951) (x1163 2) 0)) (not (> 2307130307 x840)) (= x1120 (x509 (x1080 x897))) (= 3414818225 x840) (= x360 (x105 x1020)) (<= x951 1461501637330902918203684832716283019655932542975)) (and (and (or x1029 x311) (= (<= x322 1) x543) (= x311 (> x1140 0)) x942 (= (> x581 x585) x361) (< x1140 1461501637330902918203684832716283019655932542976) (= (= x1140 0) x1029) (= x585 (x203 (x1080 x1140))) (= 1 x992) (= x942 (= x543 x497)) (= x322 x792)) (and (not (> x1240 3)) (= x1312 x67) (> x1295 0) (= x497 (= x884 0)) (= 428079936 x496) (> 791671133 x496) (= x884 x1143) (= x11 (x1186 (x1080 x1312) (x1163 2) 0)) (>= 1461501637330902918203684832716283019655932542975 x1312) (< x1240 256) (= x1295 (x509 (x1080 x897))) (= x1240 (x597 x235)) (not (= 418493994 x496)) (= x1240 x792) (= 0 x920) (not (< x496 418493994)) (= (x1335 x11 1) x235) (> 2307130307 x496))))) (and (=> (and (and (= true x659) (= false x1349)) x361) x260) (=> (and (not x361) (and (= x80 x581) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x80 x663)) (not (= 2 x728)) (= (x750 (+ x193 32)) x1347) (= (x105 x505) x70) (= (- x729 x581) x1201) (= x914 (x750 (+ x528 x571))) (not (< 3 x636)) (= x852 (> x404 18446744073709551615)) (> 1381722888 x885) (<= 0 x648) (<= 0 x728) (= (x1054 (x1080 x897)) x663) (= x185 0) (= x314 x161) (= (x504 x914) x295) (not (> x528 18446744073709551615)) (>= 1461501637330902918203684832716283019655932542975 x587) (= x729 (x203 (x1080 x1140))) (= x617 (x1186 (x1080 x161) (x1163 2) 0)) (not (or (and (= true (<= x1051 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 64 x1051)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1051))) (= x636 (x597 x160)) (= x575 x581) (> 256 x636) (= x490 (x1186 (x1080 x161) (x1163 2) 0)) (= x670 x587) (= x368 (< x618 x204)) (= (x750 (+ 31 x1347)) x634) (= (x504 x571) x528) (= (x1335 x490 1) x505) (not (< x875 x204)) (not (= x885 791671133)) (= (or x54 x852) x115) (= x1109 (x124 (- x875 x571))) (= (x124 (- x875 4)) x1051) (= x1323 x161) (= x66 (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x634)) (= x161 x1301) (= (ite x115 1 0) x185) (= x93 (x750 (+ x663 x581))) (= x632 x670) (= x665 x1339) (< x885 2307130307) (>= x689 0) (= x1140 x648) (= (x750 (+ x66 288)) x404) (>= 1461501637330902918203684832716283019655932542975 x70) (<= x728 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (< x885 791671133)) (= x885 865950217) (<= 0 x70) (not (or (and (> 160 x1109) (= true (<= x1109 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1109))) (= x856 x1140) (<= x161 1461501637330902918203684832716283019655932542975) (and (< 195 x875) (= true (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875))) (> x457 0) (= 128 x895) (= x1083 (x750 (+ 31 x914))) (= x618 (x750 (+ x914 32))) (= x457 (x509 (x1080 x897))) (= x160 (x1335 x617 1)) (not (or (> x1109 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (= true (<= x1109 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> 160 x1109)))) (>= 1461501637330902918203684832716283019655932542975 x689) (= x193 (x711 (* x295 32))) (= x648 x70) (not (< x875 4)) (not (> x295 18446744073709551615)) (< x70 1461501637330902918203684832716283019655932542976) (<= 0 x587) (= (x750 (+ 4 x413)) x571) (not (> x413 18446744073709551615)) (= x1293 (x711 (* x295 32))) (= x161 x864) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1083) (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x875 x1083)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875) (> x1083 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x54 (> 288 x404)) (= x204 (x750 (+ x1293 x618))) (= x636 2) (<= x648 1461501637330902918203684832716283019655932542975))) (and (=> (and (not x368) (= x1149 x404)) x55) (=> x368 x1224))))) x510))
(assert (= x516 (and (not x269) x576)))
(assert (= (or x138 x483 x608 x1192 x762) x819))
(assert (x600 x1356))
(assert (x692 x816 (- x759 x569)))
(assert (x600 x107))
(assert (x600 x558))
(assert (x600 x99))
(assert (x600 x894))
(assert (x600 x759))
(assert (and (=> (< 0 32) (= x1282 (+ (* 32 (x965 x1282 32)) (x409 x1282 32)))) (x788 x1282 32) (x664 x1282 32) (x800 x1282 32)))
(assert (and (=> (< 0 32) (= x903 (+ (* 32 (x965 x903 32)) (x409 x903 32)))) (x788 x903 32) (x664 x903 32) (x800 x903 32)))
(assert (x600 x169))
(assert (x328 (- x323 x1158)))
(assert (x600 x719))
(assert (x328 x630))
(assert (x526 x899 x1303 x1125 x34))
(assert (x150 x323 x16 x34 x1125))
(assert (x600 x348))
(assert (x526 x857 x630 x323 x16))
(assert (and (=> (< 0 32) (= x738 (+ (* 32 (x965 x738 32)) (x409 x738 32)))) (x788 x738 32) (x664 x738 32) (x800 x738 32)))
(assert (x600 x535))
(assert (x328 (- x1303 x912)))
(assert (x328 (- x857 x759)))
(assert (= x155 (and x940 (not x1364))))
(assert (x526 x899 x1303 x16 x323))
(assert (= (and x921 x1277) x827))
(assert (x328 (- x1303 x569)))
(assert (x328 (- x630 x1125)))
(assert (= x1195 (=> (and (= (= x863 0) x324) (or (and x324 (and (= x982 (- x877 x1088)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1088 x547)) (= (x750 (+ x1088 x547)) x734) (= x547 (x433 (x1080 x1253))) (= x863 x650) (= x877 (x301 (x1080 x383))) (= x1110 x313) (= x1088 (ite (= x863 0) x501 0)))) (and (not x324) (and (= x650 x863) (= x1110 x313))))) x151)))
(assert (x600 x618))
(assert (x526 x759 x816 x569 x912))
(assert (= x531 (and (not x129) x626)))
(assert (and (=> (< 0 32) (= x371 (+ (* 32 (x965 x371 32)) (x409 x371 32)))) (x788 x371 32) (x664 x371 32) (x800 x371 32)))
(assert (x600 x447))
(assert (x692 x1303 (- x899 x1125)))
(assert (x436 x903))
(assert (x600 x1328))
(assert (x600 x289))
(assert (= (x1118 (x1163 259200)) 259200))
(assert (x600 x873))
(assert (x600 x1023))
(assert (x526 x1158 x211 x1303 x899))
(assert (x600 x214))
(assert (x580 x179))
(assert (x328 (- x1158 x857)))
(assert (x328 (- x759 x1125)))
(assert (= (or x363 x533) x219))
(assert (x526 x759 x816 x857 x630))
(assert (x580 x253))
(assert (x600 x567))
(assert (x692 x16 (- x323 x1125)))
(assert (x600 x752))
(assert (x692 x899 (- x1303 x816)))
(assert (= x709 (and x1358 x834)))
(assert (= x1061 (=> (and (= x372 x752) (= x229 0)) x522)))
(assert (x692 x569 (- x912 x1303)))
(assert (x436 x1079))
(assert (x600 x1045))
(assert (= (+ 1 (x1118 x731)) (x1118 (x1335 x731 1))))
(assert (= (=> (and (= x1288 (x750 (+ x1086 x1149))) (= (or x249 x1178) x638) (= x894 (x750 (+ 32 x477))) (= (x750 (+ x84 32)) x761) (= x84 (x711 (* x1047 32))) (= (> x1149 x1288) x249) (= x1178 (> x1288 18446744073709551615)) (= x1086 (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x603)) (= (x750 (+ x1149 32)) x813) (not (> x1047 18446744073709551615)) (= x724 0) (not (> x1252 18446744073709551615)) (= (x711 (* 32 x1047)) x964) (= (x750 (+ x964 x894)) x73) (not (< x875 x73)) (= (x750 (+ 32 x571)) x947) (= x1047 (x504 x477)) (= x477 (x750 (+ x571 x1252))) (= x603 (x750 (+ 31 x761))) (or (and (< x1209 x875) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1209) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875))) (and (> x1209 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1252 (x504 x947)) (= (< x894 x73) x22) (= x1209 (x750 (+ x477 31))) (= (ite x638 1 0) x724)) (and (=> x22 x854) (=> (and (not x22) (= x1288 x390)) x465))) x55))
(assert (x580 1461501637330902918203684832716283019655932542976))
(assert (x436 1099511627775))
(assert (= (x1163 259200) (x1080 259200)))
(assert (x526 x211 x1158 x34 x1125))
(assert (x436 x459))
(assert (x600 x1312))
(assert (= (and x1066 x156) x890))
(assert (x328 x922))
(assert (x692 x323 (- x16 x34)))
(assert (x600 x751))
(assert (x600 x998))
(assert (x692 x16 (- x323 x899)))
(assert (x436 x562))
(assert (=> (>= 10000 x655) (= (x1080 x655) (x1163 x655))))
(assert (x600 x953))
(assert (x600 x801))
(assert (= x968 (and (not x1034) x700)))
(assert (x1050 x310))
(assert (x600 x1314))
(assert (= (and (not x318) x911) x141))
(assert (x164 x1089 x192))
(assert (= x159 (and x586 (not x1030))))
(assert (and (=> (< 0 1461501637330902918203684832716283019655932542976) (= x161 (+ (* 1461501637330902918203684832716283019655932542976 (x965 x161 1461501637330902918203684832716283019655932542976)) (x409 x161 1461501637330902918203684832716283019655932542976)))) (x788 x161 1461501637330902918203684832716283019655932542976) (x664 x161 1461501637330902918203684832716283019655932542976) (x800 x161 1461501637330902918203684832716283019655932542976)))
(assert (=> (<= x1014 10000) (= (x1080 x1014) (x1163 x1014))))
(assert (= 66268296141940672851042108147304593538321322149885339258387047461996478413388 (x1118 (x1163 66268296141940672851042108147304593538321322149885339258387047461996478413388))))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x30) (- (* x30 32) (* x30 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 32 (- x30 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 32 (- x30 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x30 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x30 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x30 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x30 32) (x991 32 x30)) (x256 32 x30) (x1217 32 x30) (x1071 32 x30) (x732 32 x30) (x351 32 x30)))
(assert (x328 (- x630 x912)))
(assert (x600 x413))
(assert (x692 x1303 (- x899 x569)))
(assert (= x589 (and x122 x787)))
(assert (x692 x16 (- x323 x630)))
(assert (x600 x634))
(assert (= x1116 (=> (and (and (= (= x338 x1283) x269) (= (x1070 288) x338) (= x1283 (x1070 x1149))) (or (and (not x269) (= x1249 x269)) (and x269 (and (= x1129 (x1070 x390)) (= (x1070 x1149) x337) (= x1249 (= x1129 x337)))))) x197)))
(assert (= x87 (and x669 x1222)))
(assert (= (x1163 1997499061) (x1080 1997499061)))
(assert (= (and (not x976) x1172) x1183))
(assert (= x486 (and (not x114) x525)))
(assert (x600 x1325))
(assert (x328 32))
(assert (x600 x457))
(assert (x328 (- x1125 x816)))
(assert (x600 x630))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x310 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x310 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x310 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x310 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x310 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x310 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (and x212 x1104) x1222))
(assert (= (and x1234 (not x702)) x147))
(assert (x600 x452))
(assert (x150 x759 x816 x1303 x899))
(assert (x600 x496))
(assert (= (=> (= (> x572 0) x787) (and (=> (not x787) x583) (=> (and (and (= x1075 (x1096 x239)) (> x1075 0) (= (x750 (+ 4 x96)) x1340) (= x515 (x1096 x1160)) (= (x1096 x806) x1314) (> x544 0) (= x278 (x750 (+ x1119 32))) (> x515 0) (< 0 x1168) (= x573 (x750 (+ 32 x795))) (= (x1096 x795) x451) (= (x750 (+ x1340 32)) x749) (= x467 (x1096 x424)) (= x544 (x1096 x257)) (= (< 0 x425) x23) (> x451 0) (= x425 (x353 x467)) (= (x599 1461501637330902918203684832716283019655932542975 x121) x1360) (= x806 (x750 (+ x1160 32))) (= (x750 (+ x239 32)) x424) (= (x750 (+ 32 x467)) x169) (= x1119 (x750 (+ x1340 288))) (= x1168 (x1096 x1244)) (= (x599 1461501637330902918203684832716283019655932542975 x161) x158) (= (x1096 x573) x149)) x787) (and (=> (and (not x23) (= 0 x140)) x1210) (=> (and x23 (and (= x247 x278) (= (> x425 32) x1287) (= x876 x169) (= (x407 x876) x758))) (and (=> (and (= 32 x140) (not x1287)) x1210) (=> (and x1287 (and (= x172 (x750 (+ 32 x278))) (= (< 64 x425) x1342) (= x4 (x750 (+ x169 32))) (= (x699 x4) x1128))) (and (=> (and (not x1342) (= 64 x140)) x1210) (=> (and (and (= (x189 x18) x142) (= (x750 (+ 64 x278)) x929) (= (> x425 96) x450) (= (x750 (+ x169 64)) x18)) x1342) (and (=> x450 x1321) (=> (and (not x450) (= 96 x140)) x1210))))))))))) x1269))
(assert (x600 x63))
(assert (x600 x707))
(assert (x526 x816 x759 x16 x323))
(assert (x328 (- x857 x34)))
(assert (= (x1118 (x1163 1381722888)) 1381722888))
(assert (= (=> (and (= (not (< x660 x204)) x647) (= x743 (or x730 x883)) (not (> x1207 x875)) (= x101 0) (= (x750 (+ 31 x1134)) x179) (not (> x598 18446744073709551615)) (= (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x562) x850) (= (< x930 x404) x883) (= x660 (x750 (+ 32 x618))) (= x46 (x750 (+ 32 x1077))) (= x1130 (x750 (+ x404 32))) (= (x504 x618) x598) (= x1207 (x750 (+ x46 x1134))) (= x344 (x750 (+ x506 32))) (= (x504 x1077) x1134) (= x214 (x750 (+ x1134 x1130))) (= x1077 (x750 (+ x598 x618))) (= (x750 (+ 31 x1077)) x167) (= x101 (ite x743 1 0)) (= (x750 (+ x344 31)) x562) (= (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x179) x506) (or (and (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x167)) (and (= (<= x167 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875)) (< x167 x875))) (= x730 (> x930 18446744073709551615)) (= (x750 (+ x404 x850)) x930) (not (> x1134 18446744073709551615))) (and (=> (= x1149 x930) x55) x647)) x1224))
(assert (x150 x630 x857 x34 x1125))
(assert (x580 x1079))
(assert (x526 x16 x323 x816 x759))
(assert (x600 x1308))
(assert (x600 x229))
(assert (x600 x1227))
(assert (x526 x323 x16 x1158 x211))
(assert (x436 1461501637330902918203684832716283019655932542975))
(assert (x600 x1053))
(assert (x600 x1353))
(assert (= (and (not x706) x686) x915))
(assert (x600 x1253))
(assert (x526 x323 x16 x857 x630))
(assert (x600 x303))
(assert (x692 x857 (- x630 x912)))
(assert (= (x1163 418493994) (x1080 418493994)))
(assert (= x217 (and x531 (not x369))))
(assert (x526 x1158 x211 x34 x1125))
(assert (= (x1118 (x1163 865950217)) 865950217))
(assert (x600 x1018))
(assert (= x255 (and x959 x915)))
(assert (x600 x1346))
(assert (= x799 (and x779 x412)))
(assert (x600 x747))
(assert (x436 x665))
(assert (x600 x1176))
(assert (x328 (- x1303 x759)))
(assert (x600 x1138))
(assert (= x42 (=> (and (= (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1282) x358) (= (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1336) x1281) (= (x750 (+ x358 x675)) x89) (= (x750 (+ 32 x675)) x1101) (= x566 (< 18446744073709551615 x89)) (= (x504 x248) x823) (= x276 0) (= (x750 (+ 32 x60)) x209) (not (> x452 x875)) (= x276 (ite x718 1 0)) (not (< 18446744073709551615 x188)) (= (x750 (+ x248 32)) x635) (= (x750 (+ 32 x1281)) x1325) (not (< 18446744073709551615 x823)) (= (x750 (+ x1325 31)) x1282) (= x1082 (> x675 x89)) (= x1361 (not (< x635 x866))) (= x718 (or x566 x1082)) (= x1336 (x750 (+ x188 31))) (or (and (< x555 x875) (= (<= x555 57896044618658097711785492504343953926634992332820282019728792003956564819967) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875))) (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x555) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875))) (= (x504 x60) x188) (= (x750 (+ 31 x60)) x555) (= (x750 (+ x209 x188)) x452) (= x60 (x750 (+ x823 x248))) (= (x750 (+ x1101 x188)) x782)) (and x1361 (=> (= x89 x1244) x831)))))
(assert (x526 x1303 x899 x323 x16))
(assert (x600 x237))
(assert (x600 x627))
(assert (= 1461501637330902918203684832716283019655932542975 (x1118 (x1163 1461501637330902918203684832716283019655932542975))))
(assert (x436 x310))
(assert (x133 x268 x1245))
(assert (x328 (- x34 x16)))
(assert (x692 x759 (- x816 x1125)))
(assert (x692 x569 (- x912 x630)))
(assert (x692 x1158 (- x211 x630)))
(assert (x436 x1245))
(assert (x526 x899 x1303 x912 x569))
(assert (= x455 (and x943 (not x22))))
(assert (x600 x939))
(assert (x600 x1103))
(assert (= (and x626 x129) x327))
(assert (x526 x16 x323 x1303 x899))
(assert (x526 x816 x759 x857 x630))
(assert (x328 x552))
(assert (x600 x724))
(assert (x600 x623))
(assert (= (and (not x1009) x233) x1327))
(assert (= 0 (x472 x426)))
(assert (x600 x786))
(assert (x692 x630 (- x857 x1125)))
(assert (x580 x494))
(assert (x600 x1125))
(assert (x328 x1121))
(assert (x692 x759 (- x816 x16)))
(assert (x692 x1303 (- x899 x759)))
(assert (= (x1118 (x1080 x1360)) x1360))
(assert (x600 x695))
(assert (x526 x34 x1125 x630 x857))
(assert (= (and (not x858) x215) x305))
(assert (x1050 x485))
(assert (x436 x698))
(assert (x328 (- x1158 x1125)))
(assert (x692 x323 (- x16 x211)))
(assert (= (and x76 (not x798)) x1028))
(assert (x600 x1057))
(assert (and (=> (and (< 0 1000000000000000000000000000) (> x993 0)) (and (<= (* (x965 x993 1000000000000000000000000000) 1000000000000000000000000000) x993) (> (* (x965 x993 1000000000000000000000000000) 1000000000000000000000000000) (- x993 1000000000000000000000000000)))) (x1022 x993 1000000000000000000000000000) (x972 x993 1000000000000000000000000000) (x320 x993 1000000000000000000000000000) (x49 x993 1000000000000000000000000000)))
(assert (x692 x857 (- x630 x569)))
(assert (= (x1118 (x1080 x1275)) x1275))
(assert (= (and x157 x1342) x605))
(assert (x692 x211 (- x1158 x816)))
(assert (= (=> (and (<= x1264 452312848583266388373324160190187140051835877600158453279131187530910662655) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x786) (and (< x786 128) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x786) true)))) (= x191 (ite x938 1 0)) (= (x504 x1324) x498) (= (x750 (+ x676 32)) x468) (= x1264 (x504 x676)) (= x938 (or x1126 x1037)) (= x690 (x750 (+ 128 x304))) (= x786 (x124 (- x875 x676))) (= 0 x191) (= x1328 (x750 (+ x672 32))) (= x1126 (> x304 x690)) (= (not (> x462 x208)) x373) (= x1324 (x750 (+ 32 x468))) (= (x504 x468) x727) (= x672 (x750 (+ x304 32))) (= (x750 (+ x1328 32)) x175) (= x422 (x504 x306)) (= x306 (x750 (+ x1324 32))) (>= 255 x727) (= (> x690 18446744073709551615) x1037) (= x208 (x750 (+ 32 x306)))) (and (=> (= x690 x1067) x1152) x373)) x1035))
(assert (x692 x1303 (- x899 x34)))
(assert (x328 1000000000000000000000000000))
(assert (x580 x485))
(assert (x600 x656))
(assert (x526 x1158 x211 x630 x857))
(assert (x600 x933))
(assert (x600 x610))
(assert (x436 x68))
(assert (x150 x16 x323 x34 x1125))
(assert (x328 (- x899 x912)))
(assert (x692 x816 (- x759 x1158)))
(assert (x600 x98))
(assert (x600 x1173))
(assert (x600 x1205))
(assert (= x833 true))
(assert (x526 x211 x1158 x899 x1303))
(assert (= (x1163 3336544575) (x1080 3336544575)))
(assert (x692 x34 (- x1125 x912)))
(assert (x600 x556))
(assert (= 4294967296 (x1118 (x1163 4294967296))))
(assert (x600 x5))
(assert (x328 (- x857 x211)))
(assert (x600 x1295))
(assert (=> (>= 10000 x383) (= (x1080 x383) (x1163 x383))))
(assert (= (and x326 x9) x215))
(assert (= (=> (and (or (not x557) x557) (= x557 (= x1110 0))) x950) x151))
(assert (x600 x80))
(assert (= (x1118 (x1163 49030629496366843004481757320339876143172005997263197338613197606857211904000)) 49030629496366843004481757320339876143172005997263197338613197606857211904000))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x738 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x738 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x738 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x738 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x738 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x738 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x600 x871))
(assert (x600 x856))
(assert (x150 x816 x759 x34 x1125))
(assert (x600 x1026))
(assert (x692 x1303 (- x899 x912)))
(assert (x526 x899 x1303 x1158 x211))
(assert (x600 x1016))
(assert (x600 x1340))
(assert (x692 x759 (- x816 x630)))
(assert (x692 x1158 (- x211 x16)))
(assert (= (x1118 (x1163 2961265839)) 2961265839))
(assert (= (=> (and (= (x750 (+ x1266 32)) x1333) (= x521 (> x454 0)) (= (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x903) x625) (= (x750 (+ x264 31)) x903) (= (x124 (- x1308 x1340)) x646) (= (x17 x149) x454) (= (x750 (+ x849 x625)) x1308)) (and (=> (and (= x15 0) (not x521)) x100) (=> (and x521 (= x345 (< 32 x454))) (and (=> (and (= x1203 (> x454 64)) x345) (and (=> (and (= (> x454 96) x392) x1203) (and (=> x392 x1276) (=> (and (not x392) (= 96 x15)) x100))) (=> (and (= x15 64) (not x1203)) x100))) (=> (and (= x15 32) (not x345)) x100))))) x437))
(assert (x526 x759 x816 x34 x1125))
(assert (= x285 (and (not x126) x1021)))
(assert (and (=> (< 0 32) (= x1336 (+ (* 32 (x965 x1336 32)) (x409 x1336 32)))) (x788 x1336 32) (x664 x1336 32) (x800 x1336 32)))
(assert (x600 x675))
(assert (= (x1118 (x1163 1703538655)) 1703538655))
(assert (x479 x439))
(assert (x600 x224))
(assert (x526 x1158 x211 x1125 x34))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x603 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x603 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x603 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x603 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x603 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x603 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x526 x1158 x211 x323 x16))
(assert (x600 x445))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x903 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x903 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x903 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x903 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x903 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x903 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x150 x912 x569 x211 x1158))
(assert (x328 (- x816 x899)))
(assert (x780 x121))
(assert (x600 x117))
(assert (= x943 (or x296 x893)))
(assert (x600 x655))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x753 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x753 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x753 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x753 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x753 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x753 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x600 x349))
(assert (x600 x838))
(assert (x692 x323 (- x16 x857)))
(assert (x600 x811))
(assert (= 1461501637330902918203684832716283019655932542976 (x1118 (x1163 1461501637330902918203684832716283019655932542976))))
(assert (x150 x1158 x211 x759 x816))
(assert (x600 x640))
(assert (x526 x912 x569 x211 x1158))
(assert (x328 (- x759 x630)))
(assert (x600 x501))
(assert (x526 x759 x816 x912 x569))
(assert (x600 x712))
(assert (x600 x925))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x463 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x463 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x463 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x463 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x463 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x463 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x600 x899))
(assert (= (x472 x4) 0))
(assert (= (x1118 (x1080 66268296141940672851042108147304593538321322149885339258387047461996478413388)) 66268296141940672851042108147304593538321322149885339258387047461996478413388))
(assert (x692 x1125 (- x34 x16)))
(assert (x251 x1297))
(assert (x692 x211 (- x1158 x1303)))
(assert (= (and (not x1230) x1049) x901))
(assert (= (and x784 x826) x176))
(assert (x600 x310))
(assert (= (x1118 (x1163 89953063794570797914675343120038501642627609741519254829220540789936042803200)) 89953063794570797914675343120038501642627609741519254829220540789936042803200))
(assert (x600 x139))
(assert (x600 x1110))
(assert (x526 x569 x912 x759 x816))
(assert (x600 x1291))
(assert (x600 x1))
(assert (x600 x397))
(assert (x436 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x1080 3498358313) (x1163 3498358313)))
(assert (= (=> (and (or (not x1144) x1144) (= (< x454 x15) x1144)) x502) x100))
(assert (x600 x1282))
(assert (x526 x857 x630 x1125 x34))
(assert (x328 (- x16 x630)))
(assert (= (x1163 101252785324535458888692376134782526488201703179675774606846032596167196409856) (x1080 101252785324535458888692376134782526488201703179675774606846032596167196409856)))
(assert (= x951 (x1118 (x1080 x951))))
(assert (x328 x1303))
(assert (x692 x630 (- x857 x759)))
(assert (x328 (- x899 x816)))
(assert (x600 x781))
(assert (x150 x211 x1158 x912 x569))
(assert (x150 x1125 x34 x323 x16))
(assert (x436 x463))
(assert (x692 x569 (- x912 x816)))
(assert (x600 x1134))
(assert (x692 x912 (- x569 x1158)))
(assert (x150 x630 x857 x211 x1158))
(assert (x600 x515))
(assert (x526 x816 x759 x912 x569))
(assert (x692 x759 (- x816 x323)))
(assert (x600 x985))
(assert (x150 x569 x912 x211 x1158))
(assert (= (x1118 (x1163 1000000000000000000000000000)) 1000000000000000000000000000))
(assert (= x536 (=> (and (= x313 x224) (= 0 x863)) x1195)))
(assert (x600 x67))
(assert (= (and x1250 x1031) x1003))
(assert (x600 x722))
(assert (x600 x59))
(assert (x328 (- x323 x1125)))
(assert (x600 x866))
(assert (x251 x630))
(assert (x600 x276))
(assert (x600 x824))
(assert (x600 x241))
(assert (= x125 (and x1144 x819)))
(assert (x600 x777))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1336 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x1336 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x1336 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x1336 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x1336 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x1336 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x580 x903))
(assert (= x128 (and x262 (not x769))))
(assert (x600 x739))
(assert (x328 (- x1158 x569)))
(assert (x600 x313))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x590 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x590 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x590 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x590 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x590 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x590 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x436 x934))
(assert (= x583 (=> (and (= (x599 1461501637330902918203684832716283019655932542975 x161) x439) (= (x427 x97) x809) (<= 0 x809) (= x117 (x599 1099511627775 x665)) (= x97 (x1335 x39 1)) (< x1024 1099511627776) (> 1461501637330902918203684832716283019655932542976 x809) (<= x809 1461501637330902918203684832716283019655932542975) (> 65536 x1246) (= x1246 (x891 x97)) (<= x1024 1099511627775) (= false x659) (>= 65535 x1246) (>= x1024 0) (= x1349 false) (<= 0 x1246) (= (x512 x97) x1024) (= (x1186 (x1080 x439) (x1163 2) 0) x39)) x260)))
(assert (= (and x1064 (not x1203)) x608))
(assert (x600 x796))
(assert (x526 x569 x912 x1125 x34))
(assert (x600 x35))
(assert (x600 x1207))
(assert (x526 x16 x323 x630 x857))
(assert (x600 x428))
(assert (x600 x989))
(assert (= x950 (=> (= (< 0 x650) x798) (and (=> (and (not x798) (= x1156 0)) x835) (=> (and (= 1 x804) x798) x387)))))
(assert (x600 x803))
(assert (x328 (- x1158 x1303)))
(assert (= (and x868 x1161) x533))
(assert (x328 (- x16 x759)))
(assert (x600 x1194))
(assert (x600 x1258))
(assert (x600 x40))
(assert (x436 x253))
(assert (x600 x1347))
(assert (x692 x759 (- x816 x1303)))
(assert (x436 x1015))
(assert (x600 x922))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1121) (- (* x1121 32) (* x1121 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 32 (- x1121 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 32 (- x1121 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1121 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x1121 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1121 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x1121 32) (x991 32 x1121)) (x256 32 x1121) (x1217 32 x1121) (x1071 32 x1121) (x732 32 x1121) (x351 32 x1121)))
(assert (x692 x912 (- x569 x211)))
(assert (= (and x450 x605) x560))
(assert (= 101252785324535458888692376134782526488201703179675774606846032596167196409856 (x1118 (x1163 101252785324535458888692376134782526488201703179675774606846032596167196409856))))
(assert (x251 x323))
(assert (x600 x1158))
(assert (x251 x912))
(assert (= (and x324 x1260) x1196))
(assert (x600 x1281))
(assert (x692 x1303 (- x899 x323)))
(assert (x150 x323 x16 x1303 x899))
(assert (x600 x829))
(assert (x692 x1303 (- x899 x1158)))
(assert (x328 (- x323 x211)))
(assert (x600 x257))
(assert (x600 x380))
(assert (= x399 (=> (and (= x303 (x504 x606)) (= x83 (not (> x933 x1131))) (= (x750 (+ x119 32)) x1239) (= x1155 (x750 (+ x1127 32))) (= x1032 (x750 (+ x1033 128))) (= 0 x629) (>= 255 x98) (not (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x50) (and (= (<= x50 57896044618658097711785492504343953926634992332820282019728792003956564819967) true) (< x50 128)))) (= x837 (x504 x1239)) (= (x750 (+ x1232 32)) x1131) (= x1232 (x750 (+ x1239 32))) (= (ite x58 1 0) x629) (<= x303 452312848583266388373324160190187140051835877600158453279131187530910662655) (= (> x1033 x1032) x843) (= (x504 x119) x98) (= (x124 (- x875 x606)) x50) (= (x504 x1232) x352) (= (or x36 x843) x58) (= (x750 (+ x1033 32)) x1138) (= x119 (x750 (+ x606 32))) (= (> x1032 18446744073709551615) x36) (= (x750 (+ 32 x1138)) x1127)) (and (=> (= x257 x1032) x619) x83))))
(assert (x600 x517))
(assert (= x911 (and (not x960) x147)))
(assert (x251 x707))
(assert (x600 x1245))
(assert (x328 (- x569 x630)))
(assert (x600 x980))
(assert (x526 x1125 x34 x630 x857))
(assert (x600 x69))
(assert (x692 x899 (- x1303 x34)))
(assert (x164 115792089237316195423570985008687907853269984665640564039457584007913129639935 x323))
(assert (= x1247 (and x584 x135)))
(assert (x600 x248))
(assert (= x576 (or x1302 x1247)))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1047) (- (* x1047 32) (* x1047 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 32 (- x1047 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 32 (- x1047 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1047 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x1047 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1047 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x1047 32) (x991 32 x1047)) (x256 32 x1047) (x1217 32 x1047) (x1071 32 x1047) (x732 32 x1047) (x351 32 x1047)))
(assert (= 3515665801 (x1118 (x1163 3515665801))))
(assert (x600 x30))
(assert (x251 x192))
(assert (x600 x579))
(assert (x600 x674))
(assert (x600 x621))
(assert (x600 x461))
(assert (x600 x1041))
(assert (x600 x1101))
(assert (x600 x1013))
(assert (x436 x980))
(assert (x526 x569 x912 x816 x759))
(assert (x600 x738))
(assert (x600 x131))
(assert (x600 x1109))
(assert (=> (<= x1140 10000) (= (x1163 x1140) (x1080 x1140))))
(assert (= 0 (x472 x357)))
(assert (x600 x918))
(assert (x600 x1085))
(assert (x600 x547))
(assert (x526 x630 x857 x912 x569))
(assert (x692 x899 (- x1303 x323)))
(assert (x692 x323 (- x16 x1158)))
(assert (x600 x121))
(assert (x692 x323 (- x16 x1125)))
(assert (= x226 (and x123 x365)))
(assert (x600 x756))
(assert (x600 x18))
(assert (x328 (- x16 x899)))
(assert (x600 x68))
(assert (x526 x759 x816 x1303 x899))
(assert (x600 x1006))
(assert (x436 x753))
(assert (= x854 (=> (and (= x1194 (x750 (+ 32 x132))) (= x132 (x750 (+ x845 x894))) (not (< x875 x925)) (= (x750 (+ x551 32)) x491) (= x925 (x750 (+ x658 x1194))) (= x954 (< x62 x1288)) (= x845 (x504 x894)) (= x1332 (not (< x1 x73))) (= x62 (x750 (+ x1226 x1288))) (= x1102 (x750 (+ 31 x658))) (= x1115 0) (= (x750 (+ x132 31)) x334) (= (or x471 x954) x615) (not (> x845 18446744073709551615)) (= x1226 (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x838)) (= x551 (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1102)) (= (x750 (+ x658 x499)) x47) (= (ite x615 1 0) x1115) (= x471 (> x62 18446744073709551615)) (= (x504 x132) x658) (= x499 (x750 (+ x1288 32))) (= (x750 (+ x491 31)) x838) (or (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875) (> x334 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x334)) (< x334 x875))) (not (< 18446744073709551615 x658)) (= x1 (x750 (+ x894 32)))) (and (=> (= x390 x62) x465) x1332))))
(assert (x600 x337))
(assert (x150 x34 x1125 x912 x569))
(assert (= (=> (and (= (x750 (+ x871 96)) x426) (= x1062 (not (> x264 128))) (= (x805 x426) x579) (= x1218 (x750 (+ 96 x849)))) (and x1062 (=> (= 128 x40) x3))) x453))
(assert (x526 x759 x816 x899 x1303))
(assert (x600 x344))
(assert (x600 x1093))
(assert (x150 x857 x630 x211 x1158))
(assert (and (=> (and (< 0 31536000) (> x596 0)) (and (<= (* (x965 x596 31536000) 31536000) x596) (> (* (x965 x596 31536000) 31536000) (- x596 31536000)))) (x1022 x596 31536000) (x972 x596 31536000) (x320 x596 31536000) (x49 x596 31536000)))
(assert (x328 (- x1125 x912)))
(assert (x692 x816 (- x759 x630)))
(assert (= x644 (=> (and (= (not (< x1313 x588)) x956) (= (x504 x53) x237) (= x1313 (x750 (+ 32 x53)))) (and x1286 x956))))
(assert (x692 x899 (- x1303 x1158)))
(assert (= (x1118 (x1080 x383)) x383))
(assert (x692 x569 (- x912 x1125)))
(assert (= (=> (or (and x1249 (and (= x279 (x1070 x390)) (= (x1070 x974) x232) (= (= x279 x232) x186))) (and (= x186 x1249) (not x1249))) x1289) x197))
(assert (= x244 (and (not x1342) x157)))
(assert (x436 x1282))
(assert (x328 (- x569 x1158)))
(assert (x328 (- x857 x912)))
(assert (= x267 (and x872 x1221)))
(assert (x600 x1102))
(assert (= (and x968 (not x1004)) x1348))
(assert (= x242 (and x921 (not x1277))))
(assert (= (and x532 x1040) x45))
(assert (x150 x759 x816 x912 x569))
(assert (x600 x1075))
(assert (x328 (- x912 x630)))
(assert (x526 x211 x1158 x857 x630))
(assert (x600 x476))
(assert (x526 x630 x857 x323 x16))
(assert (x692 x1125 (- x34 x1303)))
(assert (= (x1080 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1163 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (= x1255 (and x1065 x202)))
(assert (and (=> (and (< 0 31536000000000000000000000000000000) (> x78 0)) (and (<= (* (x965 x78 31536000000000000000000000000000000) 31536000000000000000000000000000000) x78) (> (* (x965 x78 31536000000000000000000000000000000) 31536000000000000000000000000000000) (- x78 31536000000000000000000000000000000)))) (x1022 x78 31536000000000000000000000000000000) (x972 x78 31536000000000000000000000000000000) (x320 x78 31536000000000000000000000000000000) (x49 x78 31536000000000000000000000000000000)))
(assert (x328 (- x211 x912)))
(assert (x600 x53))
(assert (x600 x641))
(assert (x436 x1336))
(assert (x580 x1336))
(assert (x328 x857))
(assert (= (and x530 x846) x1174))
(assert (x526 x630 x857 x1158 x211))
(assert (x150 x323 x16 x211 x1158))
(assert (x1050 x1015))
(assert (x580 x562))
(assert (x150 x816 x759 x630 x857))
(assert (x692 x857 (- x630 x34)))
(assert (x328 (- x323 x857)))
(assert (x600 x272))
(assert (x692 x759 (- x816 x569)))
(assert (x600 x944))
(assert (= x202 (or x19 x395)))
(assert (x328 (- x630 x34)))
(assert (x526 x816 x759 x899 x1303))
(assert (x150 x899 x1303 x34 x1125))
(assert (x600 x360))
(assert (x600 x760))
(assert (x600 x137))
(assert (x600 x284))
(assert (= x76 (or x1206 x979)))
(assert (x328 (- x34 x1158)))
(assert (x600 x464))
(assert (x479 66268296141940672851042108147304593538321322149885339258387047461996478413388))
(assert (and (=> (< 0 32) (= x934 (+ (* 32 (x965 x934 32)) (x409 x934 32)))) (x788 x934 32) (x664 x934 32) (x800 x934 32)))
(assert (= x1210 (=> (and (= (< x425 x140) x1364) (or (and (= x331 (x750 (+ x425 x278))) x1364) (not x1364))) x1365)))
(assert (x600 x181))
(assert (x692 x211 (- x1158 x569)))
(assert (x328 (- x630 x211)))
(assert (x600 x401))
(assert (= (x1163 1631253430) (x1080 1631253430)))
(assert (x600 x1141))
(assert (x328 (- x16 x211)))
(assert (x328 (- x816 x1158)))
(assert (= x420 (and x1122 (not x258))))
(assert (x251 x736))
(assert (x328 (- x569 x857)))
(assert (= x514 (and (not x1249) x909)))
(assert (x600 x876))
(assert (x600 x587))
(assert (x600 x934))
(assert (x526 x1158 x211 x816 x759))
(assert (x600 x438))
(assert (x600 x385))
(assert (x600 x680))
(assert (x150 x912 x569 x34 x1125))
(assert (x692 x1158 (- x211 x857)))
(assert (x600 x204))
(assert (x526 x1125 x34 x857 x630))
(assert (x328 (- x912 x211)))
(assert (x600 x239))
(assert (= (and x568 x570) x737))
(assert (x600 x689))
(assert (x328 (- x857 x16)))
(assert (x600 x207))
(assert (x526 x34 x1125 x912 x569))
(assert (x526 x34 x1125 x857 x630))
(assert (x600 x405))
(assert (= (and x561 (not x1287)) x1352))
(assert (x600 x867))
(assert (x600 x1014))
(assert (= (and x605 (not x450)) x952))
(assert (x600 x350))
(assert (x580 x603))
(assert (x600 x191))
(assert (x328 (- x34 x211)))
(assert (x600 x528))
(assert (x600 x173))
(assert (x692 x34 (- x1125 x1158)))
(assert (x600 x887))
(assert (x526 x34 x1125 x323 x16))
(assert (x600 x1233))
(assert (x600 x104))
(assert (and (=> (< 0 32) (= x310 (+ (* 32 (x965 x310 32)) (x409 x310 32)))) (x788 x310 32) (x664 x310 32) (x800 x310 32)))
(assert (x328 (- x912 x857)))
(assert (x328 (- x323 x899)))
(assert (x600 x1164))
(assert (x600 x506))
(assert (x600 x636))
(assert (x600 x1304))
(assert (x600 x1033))
(assert (x600 x1048))
(assert (x600 x223))
(assert (x600 x323))
(assert (x600 x658))
(assert (x328 (- x34 x759)))
(assert (x600 x1307))
(assert (= x619 (=> (and (= x824 (x750 (+ x349 x257))) (= x984 (x711 (* x957 32))) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x944) (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (> x875 x944)) (and (> x944 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= x1065 (> x588 x53)) (not (< x875 x588)) (= (ite x649 1 0) x592) (= x349 (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x310)) (= 0 x592) (= (or x807 x1007) x649) (= x1045 (x750 (+ 32 x428))) (= (x750 (+ x81 31)) x944) (not (> x1057 18446744073709551615)) (= x1057 (x504 x131)) (= x1007 (< 18446744073709551615 x824)) (not (> x957 18446744073709551615)) (= (x750 (+ x257 32)) x1346) (= x81 (x750 (+ x1057 x571))) (= (x750 (+ x53 x984)) x588) (= x310 (x750 (+ 31 x1045))) (= (x711 (* 32 x957)) x428) (= x957 (x504 x81)) (= x53 (x750 (+ 32 x81))) (= (> x257 x824) x807)) (and (=> x1065 x644) (=> (not x1065) x1286)))))
(assert (x328 (- x211 x1303)))
(assert (x600 x1099))
(assert (x150 x569 x912 x759 x816))
(assert (x692 x16 (- x323 x759)))
(assert (x600 x880))
(assert (x600 x398))
(assert (x600 x629))
(assert (x600 x588))
(assert (= x483 (and (not x345) x25)))
(assert (x600 x783))
(assert (= (x1080 1381722888) (x1163 1381722888)))
(assert (x600 x73))
(assert (= (x1118 (x1080 x1014)) x1014))
(assert (x600 x963))
(assert (x328 (- x16 x1125)))
(assert (= (and x1021 x126) x7))
(assert (x580 x371))
(assert (x150 x759 x816 x323 x16))
(assert (x600 x1131))
(assert (x251 x572))
(assert (x600 x992))
(assert (x436 x770))
(assert (x692 x34 (- x1125 x630)))
(assert (= (x1163 4294967296) (x1080 4294967296)))
(assert (x600 x877))
(assert (x328 (- x759 x899)))
(assert (x600 x485))
(assert (x600 x815))
(assert (x692 x630 x857))
(assert (x328 (- x323 x759)))
(assert (= (x1163 38731024311866695680078894486728619323467920029808689935542550702492038987776) (x1080 38731024311866695680078894486728619323467920029808689935542550702492038987776)))
(assert (x1050 x562))
(assert (x600 x1063))
(assert (and (=> (< 0 32) (= x634 (+ (* 32 (x965 x634 32)) (x409 x634 32)))) (x788 x634 32) (x664 x634 32) (x800 x634 32)))
(assert (x600 x903))
(assert (x600 x928))
(assert (x692 x34 (- x1125 x16)))
(assert (= x1344 (and x1260 (not x324))))
(assert (x1050 x603))
(assert (= (or x155 x57) x740))
(assert (x600 x232))
(assert (x328 (- x899 x34)))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639808) x1356) (- (* x1356 128) (* x1356 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 128 (- x1356 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 128 (- x1356 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639808) (- x1356 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x1356 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1356 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x1356 128) (x991 128 x1356)) (x256 128 x1356) (x1217 128 x1356) (x1071 128 x1356) (x732 128 x1356) (x351 128 x1356)))
(assert (x692 x1125 (- x34 x569)))
(assert (x600 x43))
(assert (= (and x834 (not x1358)) x367))
(assert (= (=> (= x804 x1156) x387) x835))
(assert (x600 x1076))
(assert (= (x1118 (x1163 1008072988)) 1008072988))
(assert (x692 x323 x16))
(assert (x526 x1125 x34 x1158 x211))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1015 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x1015 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x1015 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x1015 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x1015 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x1015 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x328 (- x759 x857)))
(assert (x526 x912 x569 x816 x759))
(assert (x526 x630 x857 x569 x912))
(assert (= x456 (and x817 x283)))
(assert (= (x1163 49030629496366843004481757320339876143172005997263197338613197606857211904000) (x1080 49030629496366843004481757320339876143172005997263197338613197606857211904000)))
(assert (x526 x323 x16 x211 x1158))
(assert (x600 x573))
(assert (x526 x323 x16 x630 x857))
(assert (x600 x1083))
(assert (= x848 (=> (and (= x250 0) (= x466 x1271)) x364)))
(assert (x526 x211 x1158 x912 x569))
(assert (x600 x755))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x552) (- (* x552 32) (* x552 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 32 (- x552 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 32 (- x552 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x552 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x552 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x552 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x552 32) (x991 32 x552)) (x256 32 x552) (x1217 32 x552) (x1071 32 x552) (x732 32 x552) (x351 32 x552)))
(assert (x600 x660))
(assert (x600 x806))
(assert (= x412 (and x915 (not x959))))
(assert (x328 128))
(assert (x479 x1312))
(assert (x328 259200))
(assert (= (or (and x858 x215) x1175 x832) x776))
(assert (x600 x184))
(assert (x600 x295))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x634 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x634 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x634 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x634 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x634 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x634 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x436 x342))
(assert (x600 x540))
(assert (x692 x857 (- x630 x759)))
(assert (x328 (- x899 x569)))
(assert (x600 x840))
(assert (x600 x372))
(assert (= x741 (and x493 (not x265))))
(assert (x328 (- x16 x1303)))
(assert (= x8 (=> (and (= (x750 (+ 32 x31)) x1179) (= x449 (not (< x1179 x865))) (= x355 (x504 x31))) (and x449 x1116))))
(assert (x1050 x494))
(assert (x600 x1326))
(assert (x600 x119))
(assert (x600 x1242))
(assert (x600 x338))
(assert (x600 x82))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x957) (- (* x957 32) (* x957 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 32 (- x957 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 32 (- x957 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x957 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x957 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x957 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x957 32) (x991 32 x957)) (x256 32 x957) (x1217 32 x957) (x1071 32 x957) (x732 32 x957) (x351 32 x957)))
(assert (x526 x759 x816 x323 x16))
(assert (= (or x516 x609) x909))
(assert (x600 x908))
(assert (x600 x1263))
(assert (x150 x323 x16 x759 x816))
(assert (x600 x670))
(assert (x526 x630 x857 x34 x1125))
(assert (x600 x253))
(assert (x692 x1125 (- x34 x857)))
(assert (x436 x268))
(assert (x600 x1177))
(assert (x436 x1355))
(assert (= (x1118 (x1163 1631253430)) 1631253430))
(assert (x328 x759))
(assert (x600 x250))
(assert (x600 x632))
(assert (x526 x912 x569 x857 x630))
(assert (x164 115792089237316195423570985008687907853269984665640564039457584007913129639935 x211))
(assert (x600 x1366))
(assert (= (=> (and (= x229 1) (= 32 x372)) x522) x1145))
(assert (x526 x16 x323 x211 x1158))
(assert (x600 x797))
(assert (x328 (- x1125 x323)))
(assert (x600 x167))
(assert (x692 x1303 (- x899 x211)))
(assert (x692 x759 (- x816 x912)))
(assert (x600 x422))
(assert (x526 x1125 x34 x569 x912))
(assert (= (or x195 x205 x255) x1142))
(assert (x600 x841))
(assert (x600 x1199))
(assert (x600 x1240))
(assert (x600 x1303))
(assert (x1050 x590))
(assert (x600 x802))
(assert (=> (>= 10000 x1275) (= (x1163 x1275) (x1080 x1275))))
(assert (x1050 x634))
(assert (x692 x912 (- x569 x857)))
(assert (x692 x630 (- x857 x16)))
(assert (x600 x906))
(assert (x692 x816 (- x759 x1303)))
(assert (x600 x469))
(assert (= (x1118 (x1335 x1132 1)) (+ 1 (x1118 x1132))))
(assert (x526 x816 x759 x34 x1125))
(assert (x600 x1271))
(assert (x150 x630 x857 x759 x816))
(assert (x600 x304))
(assert (x600 x454))
(assert (= 0 (x472 x467)))
(assert (x600 x585))
(assert (x150 x211 x1158 x1303 x899))
(assert (x526 x323 x16 x899 x1303))
(assert (x526 x211 x1158 x1303 x899))
(assert (x600 x1218))
(assert (x600 x480))
(assert (x328 (- x912 x34)))
(assert (x150 x211 x1158 x323 x16))
(assert (= (and x23 x589) x561))
(assert (x328 (- x1303 x34)))
(assert (= x1152 (=> (and (= (x750 (+ 32 x739)) x131) (= x1197 (or x548 x291)) (= x751 0) (= x548 (< 18446744073709551615 x299)) (= (< x299 x1067) x291) (= (x750 (+ 31 x797)) x738) (= x797 (x750 (+ x756 32))) (= x777 (x750 (+ x571 x1048))) (not (< x875 x865)) (= (x711 (* 32 x1177)) x756) (= (x750 (+ 31 x777)) x182) (= x653 (x750 (+ x1067 32))) (= (x504 x777) x1177) (not (< 18446744073709551615 x1048)) (= (x750 (+ x1205 x31)) x865) (= (x750 (+ 32 x777)) x31) (= x751 (ite x1197 1 0)) (= x1205 (x711 (* 32 x1177))) (= (x750 (+ x1067 x2)) x299) (not (> x1177 18446744073709551615)) (= (x504 x131) x1048) (= (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x738) x2) (= x135 (> x865 x31)) (or (and (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x182)) (and (= (<= x182 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (< x182 x875)))) (and (=> x135 x8) (=> (not x135) x1116)))))
(assert (x600 x299))
(assert (x526 x569 x912 x630 x857))
(assert (=> (<= x951 10000) (= (x1080 x951) (x1163 x951))))
(assert (x600 x703))
(assert (= x525 (and x199 x518)))
(assert (x150 x912 x569 x630 x857))
(assert (x600 x947))
(assert (x600 x708))
(assert (x600 x1293))
(assert (x150 x16 x323 x1303 x899))
(assert (x328 (- x912 x1303)))
(assert (= (=> (and (= x1019 (x750 (+ 31 x1085))) (= (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x293) x1099) (= (x750 (+ 32 x1085)) x173) (= 0 x520) (= (x750 (+ x317 32)) x684) (= (ite x238 1 0) x520) (= (x750 (+ x1251 x173)) x1291) (= (x750 (+ x947 32)) x476) (= (x711 (* 32 x763)) x1251) (or (and (> x875 x1019) (= (<= x1019 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (> x1019 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (not (< 18446744073709551615 x763)) (not (> x281 18446744073709551615)) (= (x750 (+ x1099 x390)) x1169) (= (x750 (+ 31 x684)) x293) (= (x504 x1085) x763) (= x238 (or x222 x633)) (= (x750 (+ x390 32)) x104) (= (x711 (* x763 32)) x317) (not (> x1291 x875)) (= x1085 (x750 (+ x281 x571))) (= (x504 x476) x281) (= (> x1169 18446744073709551615) x222) (= x633 (< x1169 x390)) (= (> x1291 x173) x1358)) (and (=> x1358 x825) (=> (and (= x1169 x974) (not x1358)) x662))) x465))
(assert (x526 x16 x323 x857 x630))
(assert (x692 x912 (- x569 x630)))
(assert (x1050 x1282))
(assert (x600 x1168))
(assert (x600 x596))
(assert (x600 x697))
(assert (x436 x494))
(assert (x692 x759 (- x816 x34)))
(assert (x328 x272))
(assert (x600 x690))
(assert (x600 x416))
(assert (x436 x161))
(assert (x328 x211))
(assert (x600 x1146))
(assert (x600 x795))
(assert (= x286 (or x701 x125)))
(assert (x580 32))
(assert (x600 x404))
(assert (x328 x1125))
(assert (x600 x665))
(assert (x328 (- x1125 x899)))
(assert (x600 x569))
(assert (x600 x650))
(assert (x328 x30))
(assert (x600 x268))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x838 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x838 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x838 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x838 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x838 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x838 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x328 x957))
(assert (x600 x1226))
(assert (= (x1118 (x1163 2446411860)) 2446411860))
(assert (x600 x1019))
(assert (x600 x611))
(assert (=> (<= x439 10000) (= (x1163 x439) (x1080 x439))))
(assert (x600 x553))
(assert (and (=> (< 0 32) (= x753 (+ (* 32 (x965 x753 32)) (x409 x753 32)))) (x788 x753 32) (x664 x753 32) (x800 x753 32)))
(assert (= 0 (x472 x876)))
(assert (x600 x1032))
(assert (x328 x1158))
(assert (x600 x31))
(assert (x328 (- x759 x912)))
(assert (x328 x572))
(assert (x692 x630 (- x857 x569)))
(assert (= (and x394 x987) x1273))
(assert (x328 (- x759 x16)))
(assert (x150 x211 x1158 x759 x816))
(assert (x328 (- x857 x1158)))
(assert (= x826 (and x152 x196)))
(assert (x600 x77))
(assert (= x1321 (=> (and (= (x1278 x106) x643) (= x1193 (not (> x425 128))) (= (x750 (+ 96 x278)) x945) (= (x750 (+ 96 x169)) x106)) (and x1193 (=> (= 128 x140) x1210)))))
(assert (x692 x16 (- x323 x1158)))
(assert (x580 x463))
(assert (= (x1163 1099511627775) (x1080 1099511627775)))
(assert (x600 x907))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x179 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x179 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x179 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x179 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x179 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x179 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1356) (- (* x1356 32) (* x1356 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 32 (- x1356 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 32 (- x1356 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1356 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x1356 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1356 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x1356 32) (x991 32 x1356)) (x256 32 x1356) (x1217 32 x1356) (x1071 32 x1356) (x732 32 x1356) (x351 32 x1356)))
(assert (x692 x759 (- x816 x857)))
(assert (x692 x34 (- x1125 x569)))
(assert (and (=> (< 0 32) (= x590 (+ (* 32 (x965 x590 32)) (x409 x590 32)))) (x788 x590 32) (x664 x590 32) (x800 x590 32)))
(assert (x600 x1067))
(assert (= x1256 (and x677 x417)))
(assert (x600 x749))
(assert (= x1206 (and x312 (not x557))))
(assert (x600 x1316))
(assert (x600 x1232))
(assert (x600 x342))
(assert (x526 x34 x1125 x759 x816))
(assert (x580 x1015))
(assert (= (or x24 x1165) x123))
(assert (x580 x293))
(assert (x600 x1136))
(assert (x150 x16 x323 x630 x857))
(assert (x600 x374))
(assert (x600 x1246))
(assert (= (x1080 452312848583266388373324160190187140051835877600158453279131187530910662655) (x1163 452312848583266388373324160190187140051835877600158453279131187530910662655)))
(assert (x526 x816 x759 x1158 x211))
(assert (x328 x1177))
(assert (x600 x782))
(assert (x692 x16 (- x323 x211)))
(assert (x436 x371))
(assert (= x1284 (=> (and (= x642 x96) (not (= x804 0))) x1269)))
(assert (x692 x569 (- x912 x211)))
(assert (= (and x793 x28) x1084))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) x511) (- (* x511 1000000000000000000000000000) (* x511 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 1000000000000000000000000000 (- x511 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 1000000000000000000000000000 (- x511 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665639564039457584007913129639936) (- x511 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x511 115792089237316195423570985008687907853269984665640564039457584007913129639936) 1000000000000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x511 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x511 1000000000000000000000000000) (x991 1000000000000000000000000000 x511)) (x256 1000000000000000000000000000 x511) (x1217 1000000000000000000000000000 x511) (x1071 1000000000000000000000000000 x511) (x732 1000000000000000000000000000 x511) (x351 1000000000000000000000000000 x511)))
(assert (x526 x1158 x211 x857 x630))
(assert (x600 x508))
(assert (= (and x305 (not x1148)) x1175))
(assert (= x773 (and x7 x622)))
(assert (x692 x630 (- x857 x1158)))
(assert (and (=> (< 0 32) (= x1298 (+ (* 32 (x965 x1298 32)) (x409 x1298 32)))) (x788 x1298 32) (x664 x1298 32) (x800 x1298 32)))
(assert (x479 x161))
(assert (x526 x1303 x899 x816 x759))
(assert (x600 x352))
(assert (x526 x211 x1158 x1125 x34))
(assert (x150 x816 x759 x1303 x899))
(assert (x600 x555))
(assert (x692 x912 (- x569 x899)))
(assert (x600 x993))
(assert (= x156 (and x1030 x586)))
(assert (x436 x74))
(assert (x479 x1270))
(assert (x692 x1125 (- x34 x912)))
(assert (x526 x16 x323 x899 x1303))
(assert (x580 x838))
(assert (x600 x322))
(assert (x600 x678))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1282 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x1282 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x1282 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x1282 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x1282 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x1282 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x600 x383))
(assert (x600 x1059))
(assert (and (=> (< 0 32) (= x485 (+ (* 32 (x965 x485 32)) (x409 x485 32)))) (x788 x485 32) (x664 x485 32) (x800 x485 32)))
(assert (x600 x1212))
(assert (x526 x323 x16 x34 x1125))
(assert (x600 x1360))
(assert (=> (<= x1360 10000) (= (x1163 x1360) (x1080 x1360))))
(assert (x600 x92))
(assert (x600 x243))
(assert (= 3755674541 (x1118 (x1163 3755674541))))
(assert (= (and x369 x531) x593))
(assert (x150 x899 x1303 x759 x816))
(assert (x600 x837))
(assert (x251 x708))
(assert (not x510))
(assert (x600 x84))
(assert (x164 x623 x1212))
(assert (x600 x809))
(assert (x600 x209))
(assert (x436 x783))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x272) (- (* x272 32) (* x272 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 32 (- x272 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 32 (- x272 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x272 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x272 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x272 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x272 32) (x991 32 x272)) (x256 32 x272) (x1217 32 x272) (x1071 32 x272) (x732 32 x272) (x351 32 x272)))
(assert (x600 x862))
(assert (x251 x34))
(assert (x600 x1107))
(assert (x526 x759 x816 x630 x857))
(assert (x328 (- x34 x1303)))
(assert (x600 x477))
(assert (x150 x816 x759 x912 x569))
(assert (x479 x1275))
(assert (x692 x34 (- x1125 x759)))
(assert (x600 x1225))
(assert (x600 x914))
(assert (x600 x1115))
(assert (x600 x729))
(assert (x479 x383))
(assert (x600 x14))
(assert (x150 x1125 x34 x1303 x899))
(assert (x692 x211 (- x1158 x899)))
(assert (x600 x359))
(assert (= x1159 (or x1084 x444)))
(assert (x600 x1074))
(assert (x600 x33))
(assert (x526 x1303 x899 x34 x1125))
(assert (x580 x310))
(assert (x600 x879))
(assert (= x1312 (x1118 (x1080 x1312))))
(assert (x150 x569 x912 x34 x1125))
(assert (x600 x198))
(assert (= (x1163 1461501637330902918203684832716283019655932542975) (x1080 1461501637330902918203684832716283019655932542975)))
(assert (= x814 (=> (and (= x1231 (not (> x572 1))) (not (= 0 x1068))) (and x1231 x583))))
(assert (= (or x1352 x244 x952 x550 x560) x940))
(assert (x600 x331))
(assert (= (x1080 1000000000000000000000000000) (x1163 1000000000000000000000000000)))
(assert (x600 x94))
(assert (x600 x266))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x755) (- (* x755 32) (* x755 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 32 (- x755 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 32 (- x755 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x755 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x755 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x755 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x755 32) (x991 32 x755)) (x256 32 x755) (x1217 32 x755) (x1071 32 x755) (x732 32 x755) (x351 32 x755)))
(assert (x692 x1158 (- x211 x323)))
(assert (x600 x2))
(assert (x526 x912 x569 x899 x1303))
(assert (and (=> (< 0 32) (= x179 (+ (* 32 (x965 x179 32)) (x409 x179 32)))) (x788 x179 32) (x664 x179 32) (x800 x179 32)))
(assert (x692 x899 (- x1303 x211)))
(assert (= (and x286 x661) x817))
(assert (x600 x575))
(assert (x328 (- x857 x1125)))
(assert (x600 x1189))
(assert (x164 x708 x707))
(assert (x251 x14))
(assert (x328 (- x1125 x211)))
(assert (x436 x738))
(assert (x251 x596))
(assert (= (or x288 x226 x1300 x827 x1208 x539 x812 x32 x475 x217 x1028 x716 x327 x720) x166))
(assert (x600 x192))
(assert (x600 x287))
(assert (x600 x1089))
(assert (x526 x16 x323 x759 x816))
(assert (x600 x684))
(assert (x692 x912 (- x569 x816)))
(assert (x436 x179))
(assert (x600 x462))
(assert (x526 x759 x816 x1158 x211))
(assert (x692 x211 (- x1158 x912)))
(assert (x600 x957))
(assert (x692 x569 (- x912 x759)))
(assert (= (and x568 (not x570)) x212))
(assert (x600 x4))
(assert (= 0 (x472 x106)))
(assert (and (=> (< 0 32) (= x1102 (+ (* 32 (x965 x1102 32)) (x409 x1102 32)))) (x788 x1102 32) (x664 x1102 32) (x800 x1102 32)))
(assert (x600 x194))
(assert (= (and x1319 x231) x916))
(assert (x580 x590))
(assert (x600 x466))
(assert (= (x472 x573) 0))
(assert (=> (>= 10000 x897) (= (x1163 x897) (x1080 x897))))
(assert (x600 x698))
(assert (x328 (- x16 x34)))
(assert (x328 x1047))
(assert (= 3336544575 (x1118 (x1163 3336544575))))
(assert (x600 x315))
(assert (x580 x121))
(assert (x328 (- x759 x323)))
(assert (x600 x1259))
(assert (x150 x759 x816 x34 x1125))
(assert (x600 x1155))
(assert (x375 x665))
(assert (= x701 (and (not x1144) x819)))
(assert (x600 x926))
(assert (x526 x16 x323 x1158 x211))
(assert (x600 x275))
(assert (x526 x857 x630 x211 x1158))
(assert (x150 x1125 x34 x759 x816))
(assert (x600 x1264))
(assert (x150 x34 x1125 x323 x16))
(assert (x600 x90))
(assert (x328 (- x211 x630)))
(assert (x600 x60))
(assert (x600 x234))
(assert (x692 x16 (- x323 x1303)))
(assert (x692 x1125 (- x34 x816)))
(assert (x600 x1251))
(assert (x526 x912 x569 x34 x1125))
(assert (x150 x1158 x211 x323 x16))
(assert (= 31536000000000000000000000000000000 (x1118 (x1163 31536000000000000000000000000000000))))
(assert (= x1260 (or x776 x406)))
(assert (= (x1080 65535) (x1163 65535)))
(assert (= (and x1162 (not x1078)) x51))
(assert (x692 x1125 (- x34 x1158)))
(assert (x150 x211 x1158 x34 x1125))
(assert (x600 x823))
(assert (x600 x1051))
(assert (x600 x1015))
(assert (x692 x912 x569))
(assert (x526 x34 x1125 x899 x1303))
(assert (x600 x945))
(assert (= x686 (and x258 x1122)))
(assert (x580 1099511627776))
(assert (= (and x183 x713) x288))
(assert (x600 x460))
(assert (x251 31536000))
(assert (= (x1163 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1080 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (x328 (- x16 x1158)))
(assert (x692 x211 (- x1158 x1125)))
(assert (= x387 (=> (and (= (= 0 x804) x559) (or (not x559) x559)) x1284)))
(assert (x692 x1125 (- x34 x899)))
(assert (= x662 (=> (and (= (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x342) x284) (not (< 18446744073709551615 x30)) (not (< x875 x462)) (= (x504 x739) x904) (= 0 x810) (not (< 18446744073709551615 x904)) (= (x750 (+ 31 x470)) x691) (= (x750 (+ 32 x377)) x985) (= (x750 (+ x470 32)) x676) (= (x750 (+ x27 x676)) x462) (= x978 (x750 (+ x974 32))) (= (ite x52 1 0) x810) (= x304 (x750 (+ x284 x974))) (= x771 (< x304 x974)) (= (x750 (+ x985 31)) x342) (= (x711 (* 32 x30)) x377) (= x30 (x504 x470)) (= (or x771 x847) x52) (= (> x462 x676) x976) (= x470 (x750 (+ x571 x904))) (= x847 (< 18446744073709551615 x304)) (= (x711 (* x30 128)) x27) (= x739 (x750 (+ 32 x476))) (or (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875) (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x691)) (< x691 x875)) (and (> x691 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) (and (=> x976 x1035) (=> (and (not x976) (= x1067 x304)) x1152)))))
(assert (x328 24000000000000000000))
(assert (x328 (- x1158 x630)))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x763) (- (* x763 32) (* x763 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 32 (- x763 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 32 (- x763 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x763 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x763 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x763 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x763 32) (x991 32 x763)) (x256 32 x763) (x1217 32 x763) (x1071 32 x763) (x732 32 x763) (x351 32 x763)))
(assert (x600 x343))
(assert (x436 x634))
(assert (= x187 (and x909 x1249)))
(assert (x600 x200))
(assert (x526 x630 x857 x759 x816))
(assert (x600 x62))
(assert (x692 x1158 (- x211 x912)))
(assert (x692 x1158 (- x211 x1303)))
(assert (x600 x467))
(assert (x692 x569 (- x912 x857)))
(assert (x600 x377))
(assert (x600 x1275))
(assert (x600 x1320))
(assert (x600 x261))
(assert (x600 x520))
(assert (x1050 x903))
(assert (x328 (- x630 x1158)))
(assert (x150 x899 x1303 x323 x16))
(assert (x600 x888))
(assert (x600 x1000))
(assert (x600 x434))
(assert (= x1219 (and x798 x76)))
(assert (x328 (- x1125 x569)))
(assert (= x196 (and x740 x1248)))
(assert (x526 x1158 x211 x912 x569))
(assert (x328 (- x899 x211)))
(assert (x600 x208))
(assert (x526 x1303 x899 x759 x816))
(assert (x600 x1313))
(assert (x164 115792089237316195423570985008687907853269984665640564039457584007913129639935 x572))
(assert (x526 x1158 x211 x16 x323))
(assert (x692 x899 (- x1303 x16)))
(assert (x526 x569 x912 x899 x1303))
(assert (x600 x818))
(assert (x692 x323 (- x16 x816)))
(assert (= x439 (x1118 (x1080 x439))))
(assert (x328 (- x857 x816)))
(assert (= (x1163 1008072988) (x1080 1008072988)))
(assert (x600 x142))
(assert (x692 x1303 x899))
(assert (x150 x16 x323 x211 x1158))
(assert (=> (<= x1318 10000) (= (x1080 x1318) (x1163 x1318))))
(assert (x692 x816 (- x759 x912)))
(assert (x600 x317))
(assert (x600 x245))
(assert (x600 x1343))
(assert (x600 x984))
(assert (= x277 (and (not x971) x612)))
(assert (x600 x691))
(assert (= x687 (and x486 (not x1213))))
(assert (x526 x16 x323 x1125 x34))
(assert (x600 x857))
(assert (x328 (- x569 x899)))
(assert (= (x1163 24000000000000000000) (x1080 24000000000000000000)))
(assert (x692 x323 (- x16 x1303)))
(assert (x692 x816 (- x759 x899)))
(assert (x692 x759 (- x816 x899)))
(assert (x150 x857 x630 x323 x16))
(assert (x526 x912 x569 x630 x857))
(assert (x600 x1140))
(assert (x600 x47))
(assert (x164 x348 x736))
(assert (x436 x1102))
(assert (x600 x924))
(assert (= (x1080 428079936) (x1163 428079936)))
(assert (x600 x1252))
(assert (x526 x34 x1125 x569 x912))
(assert (x436 x1298))
(assert (x600 x356))
(assert (= (x1118 (x1080 x1270)) x1270))
(assert (x600 x306))
(assert (x600 x37))
(assert (x328 32000000000000000000))
(assert (x600 x309))
(assert (x150 x912 x569 x759 x816))
(assert (x600 x308))
(assert (= x157 (and x1287 x561)))
(assert (x600 x1239))
(assert (x436 x855))
(assert (x328 (- x211 x16)))
(assert (= x937 (and x1034 x700)))
(assert (x600 x314))
(assert (x251 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (x328 (- x211 x759)))
(assert (x328 (- x816 x34)))
(assert (x328 (- x899 x759)))
(assert (x600 x1156))
(assert (x600 x459))
(assert (= (x1118 (x1080 x897)) x897))
(assert (= (and x1172 x976) x1092))
(assert (x436 x1326))
(assert (x600 x1124))
(assert (x600 x592))
(assert (x1050 x1079))
(assert (x600 x1055))
(assert (x328 (- x323 x816)))
(assert (x328 (- x912 x899)))
(assert (= x500 (and (not x677) x417)))
(assert (= (and x493 x265) x595))
(assert (x526 x857 x630 x912 x569))
(assert (x150 x211 x1158 x630 x857))
(assert (x600 x96))
(assert (x526 x912 x569 x1303 x899))
(assert (x600 x983))
(assert (= (x1118 (x1163 791671133)) 791671133))
(assert (= (x1080 1461501637330902918203684832716283019655932542976) (x1163 1461501637330902918203684832716283019655932542976)))
(assert (x600 x161))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x934 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x934 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x934 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x934 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x934 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x934 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x600 x552))
(assert (x600 x201))
(assert (= x363 (and x1161 (not x868))))
(assert (and (=> (< 0 32) (= x494 (+ (* 32 (x965 x494 32)) (x409 x494 32)))) (x788 x494 32) (x664 x494 32) (x800 x494 32)))
(assert (x150 x1303 x899 x912 x569))
(assert (x1050 x934))
(assert (x600 x279))
(assert (x600 x15))
(assert (x600 x542))
(assert (x600 x663))
(assert (x600 x1167))
(assert (x328 (- x899 x323)))
(assert (x150 x1158 x211 x34 x1125))
(assert (x251 1000000000000000000000000000))
(assert (x600 x816))
(assert (x600 x1359))
(assert (x600 x912))
(assert (x526 x34 x1125 x1303 x899))
(assert (x692 x1125 (- x34 x211)))
(assert (x328 (- x816 x569)))
(assert (= (=> (and (= (x1362 (x1080 x897)) x415) (= (x509 (x1080 x1360)) x808) (not (= x808 0)) (= (x1362 (x1080 x1360)) x416) (= (and (>= x415 32000000000000000000) (< (+ x416 32000000000000000000) 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x661)) (and (=> (and x661 (and (and (= x283 (> x184 0)) (= x564 (- x198 32000000000000000000)) (= (x750 (+ 32000000000000000000 x287)) x492) (< (+ 32000000000000000000 x287) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (x1362 (x1080 x897)) x198) (= x287 (x143 (x1080 x1360)))) (or (and x283 (and (= x851 (>= (x393 (x1080 x897)) x1171)) x794 (= x794 (= x94 (x393 (x1080 x1360)))) (> 4294967296 x604) (= x1171 (x440 (x1080 x897))) x851 (= x94 (x440 (x1080 x1360))))) (not x283)))) x1039) (=> (and (not x661) (= 0 x1068)) x814))) x502))
(assert (x526 x816 x759 x569 x912))
(assert (x580 x738))
(assert (x526 x16 x323 x34 x1125))
(assert (x600 x293))
(assert (= x325 (=> (and (= (x750 (+ x1173 x563)) x92) (= (x711 (* 32 x755)) x1023) (= x240 (or x384 x733)) (= (x750 (+ x535 x571)) x366) (not (> x92 x875)) (or (and (> x875 x1188) (= (<= x1188 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x875 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x875) (> x1188 57896044618658097711785492504343953926634992332820282019728792003956564819967))) (= (x750 (+ x1073 31)) x1015) (= x384 (< x815 x1160)) (not (> x535 18446744073709551615)) (= x755 (x504 x366)) (= x405 0) (= (< x1173 x92) x1315) (= (> x815 18446744073709551615) x733) (= x535 (x504 x947)) (= (x599 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1015) x906) (not (< 18446744073709551615 x755)) (= (x750 (+ x366 32)) x1173) (= (x750 (+ 32 x1160)) x628) (= (ite x240 1 0) x405) (= x1073 (x750 (+ 32 x1023))) (= (x750 (+ x906 x1160)) x815) (= x1188 (x750 (+ x366 31))) (= (x711 (* x755 32)) x563)) (and (=> (and (= x815 x795) (not x1315)) x1322) (=> x1315 x418)))))
(assert (x328 (- x569 x211)))
(assert (x600 x642))
(assert (x600 x376))
(assert (x328 (- x1303 x816)))
(assert (x526 x34 x1125 x1158 x211))
(assert (= (or x534 x456) x429))
(assert (x150 x1158 x211 x1303 x899))
(assert (= (x1163 2835717307) (x1080 2835717307)))
(assert (= (or x367 x709) x1172))
(assert (x600 x598))
(assert (x580 x161))
(assert (= (and (not x757) x285) x1038))
(assert (x600 x1266))
(assert (x328 (- x1125 x630)))
(assert (x328 (- x211 x323)))
(assert (= (x1080 3578229791) (x1163 3578229791)))
(assert (x600 x1087))
(assert (x526 x912 x569 x759 x816))
(assert (x600 x74))
(assert (x600 x34))
(assert (x580 x1102))
(assert (= x601 (and x202 (not x1065))))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639808) x30) (- (* x30 128) (* x30 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 128 (- x30 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 128 (- x30 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639808) (- x30 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x30 115792089237316195423570985008687907853269984665640564039457584007913129639936) 128) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x30 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x30 128) (x991 128 x30)) (x256 128 x30) (x1217 128 x30) (x1071 128 x30) (x732 128 x30) (x351 128 x30)))
(assert (x328 x763))
(assert (= (+ 1 (x1118 x11)) (x1118 (x1335 x11 1))))
(assert (and (=> (< 0 32) (= x342 (+ (* 32 (x965 x342 32)) (x409 x342 32)))) (x788 x342 32) (x664 x342 32) (x800 x342 32)))
(assert (= (and x262 x769) x1228))
(assert (x692 x1158 (- x211 x816)))
(assert (x328 (- x34 x323)))
(assert (x600 x1339))
(assert (and (=> (< 0 32) (= x980 (+ (* 32 (x965 x980 32)) (x409 x980 32)))) (x788 x980 32) (x664 x980 32) (x800 x980 32)))
(assert (x600 x16))
(assert (x600 x451))
(assert (x150 x569 x912 x630 x857))
(assert (x600 x140))
(assert (= x539 (and x525 x114)))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665640564039425584007913129639936) x572) (- (* x572 32000000000000000000) (* x572 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 32000000000000000000 (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 32000000000000000000 (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665640564039425584007913129639936) (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32000000000000000000) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x572 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x572 32000000000000000000) (x991 32000000000000000000 x572)) (x256 32000000000000000000 x572) (x1217 32000000000000000000 x572) (x1071 32000000000000000000 x572) (x732 32000000000000000000 x572) (x351 32000000000000000000 x572)))
(assert (= x905 (and x911 x318)))
(assert (x600 x604))
(assert (= (+ (x1118 x39) 1) (x1118 (x1335 x39 1))))
(assert (x600 x435))
(assert (x600 x951))
(assert (x600 x216))
(assert (= (x1080 32000000000000000000) (x1163 32000000000000000000)))
(assert (x526 x1303 x899 x569 x912))
(assert (= x1021 (and x141 x206)))
(assert (= x534 (and x817 (not x283))))
(assert (x328 (- x630 x569)))
(assert (= x861 (and (not x394) x987)))
(assert (x328 (- x630 x759)))
(assert (x526 x630 x857 x211 x1158))
(assert (= (and x285 x757) x973))
(assert (= (and x443 x176) x85))
(assert (x600 x898))
(assert (x526 x899 x1303 x816 x759))
(assert (x526 x1125 x34 x323 x16))
(assert (x600 x1090))
(assert (x526 x1125 x34 x16 x323))
(assert (x600 x1001))
(assert (x600 x790))
(assert (x692 x912 (- x569 x1303)))
(assert (x600 x1296))
(assert (x580 x934))
(assert (= x417 (and (not x669) x1222)))
(assert (x600 x1265))
(assert (x600 x1283))
(assert (= (and x685 x429) x26))
(assert (x600 x1170))
(assert (= (x472 x149) 0))
(assert (x526 x569 x912 x211 x1158))
(assert (= x294 (and x361 x833)))
(assert (x328 x480))
(assert (= (x1163 18446744073709551615) (x1080 18446744073709551615)))
(assert (= x475 (and x51 (not x996))))
(assert (x600 x723))
(assert (x600 x986))
(assert (x692 x16 (- x323 x857)))
(assert (x600 x625))
(assert (x526 x323 x16 x759 x816))
(assert (x692 x759 x816))
(assert (x692 x912 (- x569 x34)))
(assert (x600 x1298))
(assert (x692 x630 (- x857 x816)))
(assert (x692 x857 (- x630 x1125)))
(assert (x328 (- x1125 x759)))
(assert (x600 x1243))
(assert (x1050 x293))
(assert (= (x1118 (x1163 428079936)) 428079936))
(assert (x328 (- x759 x1158)))
(assert (and (= (x991 9 3) 27) (= (x991 3 3) 9) (= 81 (x991 27 3)) (= (x991 9 9) 81)))
(assert (= (and (not x152) x196) x900))
(assert (x692 x816 (- x759 x857)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 (x1118 (x1163 115792089237316195423570985008687907853269984665640564039457584007913129639904))))
(assert (= x936 (and x429 (not x685))))
(assert (x526 x816 x759 x1125 x34))
(assert (x600 x920))
(assert (= (and x713 (not x183)) x1049))
(assert (x1050 x253))
(assert (= x233 (or x187 x514)))
(assert (x526 x759 x816 x211 x1158))
(assert (and (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x293 (+ (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x965 x293 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x409 x293 115792089237316195423570985008687907853269984665640564039457584007913129639936)))) (x788 x293 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x664 x293 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x800 x293 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x600 x844))
(assert (x600 x775))
(assert (x150 x1303 x899 x759 x816))
(assert (x600 x635))
(assert (= (x1118 (x1163 3578229791)) 3578229791))
(assert (x436 x448))
(assert (x150 x16 x323 x759 x816))
(assert (x600 x683))
(assert (and (and (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) x1177) (- (* x1177 32) (* x1177 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (* 32 (- x1177 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (x991 32 (- x1177 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= (x991 (- 115792089237316195423570985008687907853269984665640564039457584007913129639904) (- x1177 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- (* (- x1177 115792089237316195423570985008687907853269984665640564039457584007913129639936) 32) (* 115792089237316195423570985008687907853269984665640564039457584007913129639936 (- x1177 115792089237316195423570985008687907853269984665640564039457584007913129639936))))) (= (* x1177 32) (x991 32 x1177)) (x256 32 x1177) (x1217 32 x1177) (x1071 32 x1177) (x732 32 x1177) (x351 32 x1177)))
(assert (x692 x16 (- x323 x34)))
(assert (x328 (- x816 x16)))
(assert (x600 x132))
(assert (x692 x816 (- x759 x211)))
(assert (x600 x1129))
(assert (x600 x371))
(assert (x692 x34 (- x1125 x323)))
(assert (x600 x1079))
(assert (= (x1080 1099511627776) (x1163 1099511627776)))
(assert (x328 x295))
(assert (= (x1118 (x1163 3629318494)) 3629318494))
(assert (x600 x849))
(assert (x328 (- x899 x16)))
(assert (x600 x178))
(assert (x479 x1014))
(assert (x150 x1303 x899 x323 x16))
(assert (x600 x885))
(assert (= x832 (and x326 (not x9))))
(assert (x436 x838))
(assert (= (or x1181 x1236 x1256 x737 x1279 x128 x1273 x666 (and x1234 x702) x973 x905 x773 x87) x24))
(assert (= x793 (or x900 x481 x85 x981 x710)))
(assert (x600 x1268))
(assert (x600 x1088))
(assert (x436 x558))
(assert (= (and (not x661) x286) x221))
(assert (= 65535 (x1118 (x1163 65535))))
(assert (x526 x569 x912 x857 x630))
(assert (x526 x899 x1303 x759 x816))
(assert (x600 x929))
(assert (x600 x339))
(assert (x600 x193))
(assert (x251 x623))
(assert (x600 x624))
(assert (= (and (not x622) x7) x262))
(assert (= x1250 (and x741 x6)))
(assert (= x481 (and x176 (not x443))))
(assert (= (and x486 x1213) x1234))
(assert (x600 x754))
(assert (= (and (not x1285) x593) x1208))
(assert (= x110 (or x294 x118)))
(assert (= (and (not x1248) x740) x710))
(assert (x328 (- x1158 x759)))
(assert (x600 x1331))
(assert (x526 x857 x630 x1158 x211))
(assert (= (and (not x772) x219) x19))
(assert (x600 x1072))
(assert (x600 x1143))
(assert (x328 (- x1158 x816)))
(assert (x600 x1204))
(assert (x692 x899 (- x1303 x759)))
(assert (= 0 (x472 x424)))
(assert (x150 x630 x857 x323 x16))
(check-sat)
(exit)
