(set-info :smt-lib-version 2.6)
(set-logic QF_UFDTLIA)
(set-info :source |
Generated by: Jaroslav Bendik
Generated on: 2023-03-14
Generator: Certora Prover
Application: Formal verification of Ethereum Smart Contracts
Target solver: z3, cvc4, cvc5
Publications: https://docs.certora.com/en/latest/docs/whitepaper/index.html
This benchmarkset was produced by the Certora Prover, i.e. a tool for
formal verification of Ethereum Smart Contracts.  The benchmarks encode
verification conditions for real Smart Contracts (programs) written by
Certora customers.

The Certora Prover uses various strategies and SMT encodings of the
underlying verification problem. In most cases, we use either LIA,
NIA or BV encodings, where:

1. LIA is typically an overapproximation of the underlying verification
   problem.
2. NIA is typically a precise encoding.
3. BV is required when the input contains non-trivial bitwise operations
   that we do not model precisely with NIA (i.e., in these cases, NIA
   is an overapproximation).

Note that our specification language allows unbounded integers
(i.e. mathints); this the reason why we need NIA and LIA instead of
using just BV.

We also use various encodings of "underlying hashing functions"; the
two main encodings we use rely on i) UF and ii) on UFDT. Therefore,
given a single input (a smart contract and a specification), we typically
produce 6 different encodings: QF_UFNIA, QF_UFLIA, QF_UFBV, QF_UFDTNIA,
QF_UFDTLIA, and QF_UFDTBV. The 462 benchmarks in this benchmark set
originate from 77 unique smart contracts and specifications (77*6 =
462) and can be mapped based on the common name-prefix of the files. For
instances:

./QF_UFBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFBV.smt2
./QF_UFDTLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTLIA.smt2
./QF_UFLIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFLIA.smt2
./QF_UFDTBV/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTBV.smt2
./QF_UFDTNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFDTNIA.smt2
./QF_UFNIA/20230314-Jaroslav-Bendik-Certora/940_590f27b1c3c800d3243e_33_QF_UFNIA.smt2
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-datatypes ((x474 0)) (((x476 (x1146 x474) (x1717 x474) (x335 x474) (x453 x474) (x1599 x474) (x1322 x474) (x421 x474) (x674 Int)) (x1429 (x1137 x474) (x196 Int)) (x1084 (x69 x474) (x1307 x474) (x938 x474) (x1569 x474) (x693 x474) (x174 Int)) (x1629 (x542 x474) (x995 x474) (x1520 x474) (x404 x474) (x1159 Int)) (x672 (x1574 Int)) (x902 (x304 x474) (x1728 x474) (x1691 Int)) (x1402 (x439 x474) (x1633 x474) (x640 x474) (x1407 x474) (x1706 x474) (x4 x474) (x328 Int)) (x730 (x1450 x474) (x1004 x474) (x622 x474) (x500 Int)))))
(declare-fun x648 () Int)
(declare-fun x1247 () Int)
(declare-fun x1479 () Bool)
(declare-fun x580 () Bool)
(declare-fun x1679 () Int)
(declare-fun x342 () Int)
(declare-fun x1314 () Bool)
(declare-fun x932 () Bool)
(declare-fun x288 () Bool)
(declare-fun x2 () Int)
(declare-fun x89 () Bool)
(declare-fun x1020 () Bool)
(declare-fun x1603 () Bool)
(declare-fun x814 () Bool)
(declare-fun x871 () Bool)
(declare-fun x1268 () Bool)
(declare-fun x1740 (x474) Int)
(declare-fun x1765 () Bool)
(declare-fun x1202 () Bool)
(declare-fun x383 (Int) Int)
(declare-fun x1015 () Bool)
(declare-fun x1527 () Bool)
(declare-fun x545 () Bool)
(declare-fun x1546 () Bool)
(declare-fun x1379 () Int)
(declare-fun x268 () Bool)
(declare-fun x457 () Bool)
(declare-fun x670 () Int)
(declare-fun x1596 () Bool)
(declare-fun x950 () Bool)
(declare-fun x1131 () Bool)
(declare-fun x146 () Int)
(declare-fun x43 () Int)
(declare-fun x1391 () Bool)
(declare-fun x1160 () Int)
(declare-fun x1588 () Int)
(declare-fun x379 () Bool)
(declare-fun x1100 () Bool)
(declare-fun x718 () Bool)
(declare-fun x481 () Bool)
(declare-fun x543 () Int)
(declare-fun x582 () Bool)
(declare-fun x143 () Int)
(declare-fun x629 () Int)
(declare-fun x188 () Int)
(declare-fun x1214 () Bool)
(declare-fun x1038 () Bool)
(declare-fun x1621 () Bool)
(declare-fun x1743 () Bool)
(declare-fun x533 () Bool)
(declare-fun x482 () Bool)
(declare-fun x602 () Bool)
(declare-fun x589 () Bool)
(declare-fun x1261 () Bool)
(declare-fun x1636 () Bool)
(declare-fun x1003 () Bool)
(declare-fun x1220 () Int)
(declare-fun x1227 () Bool)
(declare-fun x1573 () Bool)
(declare-fun x807 () Bool)
(declare-fun x1351 () Bool)
(declare-fun x668 () Int)
(declare-fun x781 () Bool)
(declare-fun x1359 () Int)
(declare-fun x749 () Int)
(declare-fun x673 () Int)
(declare-fun x233 () Bool)
(declare-fun x1151 () Int)
(declare-fun x341 () Int)
(declare-fun x677 () Bool)
(declare-fun x1481 () Bool)
(declare-fun x1097 () Bool)
(declare-fun x782 () Int)
(declare-fun x181 () Bool)
(declare-fun x1133 () Int)
(declare-fun x744 () Bool)
(declare-fun x284 () Bool)
(declare-fun x1469 () Bool)
(declare-fun x1567 () Bool)
(declare-fun x1242 () x474)
(declare-fun x1539 () Bool)
(declare-fun x1239 () Int)
(declare-fun x1448 () Bool)
(declare-fun x67 () Bool)
(declare-fun x1032 () x474)
(declare-fun x1098 () Bool)
(declare-fun x1357 () x474)
(declare-fun x681 () Bool)
(declare-fun x330 () Bool)
(declare-fun x1106 () Int)
(declare-fun x250 () Int)
(declare-fun x1140 () Int)
(declare-fun x1212 () Bool)
(declare-fun x1610 () Bool)
(declare-fun x555 () Bool)
(declare-fun x1164 () Int)
(declare-fun x738 () Int)
(declare-fun x193 () Int)
(declare-fun x1439 () Bool)
(declare-fun x27 () Bool)
(declare-fun x1026 () Int)
(declare-fun x745 () Int)
(declare-fun x176 () Bool)
(declare-fun x840 () Bool)
(declare-fun x117 () Bool)
(declare-fun x185 () Int)
(declare-fun x63 () Bool)
(declare-fun x29 () x474)
(declare-fun x475 () Bool)
(declare-fun x544 () Bool)
(declare-fun x1292 () Bool)
(declare-fun x854 () Bool)
(declare-fun x224 () Bool)
(declare-fun x1011 () Int)
(declare-fun x218 () Int)
(declare-fun x1233 () x474)
(declare-fun x1535 () Bool)
(declare-fun x923 () Bool)
(declare-fun x535 () Int)
(declare-fun x77 () Bool)
(declare-fun x339 () Bool)
(declare-fun x986 () Bool)
(declare-fun x403 () Bool)
(declare-fun x847 () Bool)
(declare-fun x1466 () Bool)
(declare-fun x1135 () Int)
(declare-fun x785 () Int)
(declare-fun x1708 () Bool)
(declare-fun x1634 () Int)
(declare-fun x1763 () Bool)
(declare-fun x409 () Int)
(declare-fun x735 () Int)
(declare-fun x1327 () Bool)
(declare-fun x1760 () Bool)
(declare-fun x786 () Bool)
(declare-fun x859 () Int)
(declare-fun x884 () Int)
(declare-fun x1372 () Bool)
(declare-fun x1014 () Bool)
(declare-fun x1441 () Int)
(declare-fun x530 () Bool)
(declare-fun x659 () x474)
(declare-fun x1286 () Bool)
(declare-fun x1632 () Int)
(declare-fun x436 () Int)
(declare-fun x614 () Int)
(declare-fun x1172 () Int)
(declare-fun x1275 () Int)
(declare-fun x1398 () Bool)
(declare-fun x346 () Bool)
(declare-fun x468 () Bool)
(declare-fun x198 () Bool)
(declare-fun x92 () Int)
(declare-fun x458 () Bool)
(declare-fun x873 () Bool)
(declare-fun x1109 () Bool)
(declare-fun x1756 () Bool)
(declare-fun x655 (x474) Int)
(declare-fun x1150 () Bool)
(declare-fun x1462 () Bool)
(declare-fun x698 () Bool)
(declare-fun x231 () Int)
(declare-fun x928 () Bool)
(declare-fun x1721 () Bool)
(declare-fun x1653 () Bool)
(declare-fun x1331 () Bool)
(declare-fun x1258 () Bool)
(declare-fun x1069 () Bool)
(declare-fun x1254 () Bool)
(declare-fun x99 () Bool)
(declare-fun x1339 () Int)
(declare-fun x1277 () x474)
(declare-fun x1105 () Bool)
(declare-fun x38 () Bool)
(declare-fun x1431 () Int)
(declare-fun x627 () Bool)
(declare-fun x865 () Bool)
(declare-fun x1660 () Int)
(declare-fun x529 () Bool)
(declare-fun x494 () Int)
(declare-fun x1171 () Bool)
(declare-fun x712 () Int)
(declare-fun x1435 () Bool)
(declare-fun x241 () Bool)
(declare-fun x426 () Int)
(declare-fun x1645 () Int)
(declare-fun x1065 () Int)
(declare-fun x171 () Int)
(declare-fun x480 () Bool)
(declare-fun x1635 () Int)
(declare-fun x376 () Int)
(declare-fun x1502 () Bool)
(declare-fun x1579 () Int)
(declare-fun x663 () Bool)
(declare-fun x965 () Bool)
(declare-fun x1661 () Bool)
(declare-fun x315 () x474)
(declare-fun x1188 () x474)
(declare-fun x1716 () Bool)
(declare-fun x516 () Int)
(declare-fun x162 () Bool)
(declare-fun x937 () Bool)
(declare-fun x1562 () Bool)
(declare-fun x883 () x474)
(declare-fun x822 () Bool)
(declare-fun x102 () Int)
(declare-fun x56 () Int)
(declare-fun x470 () Int)
(declare-fun x899 () Bool)
(declare-fun x1583 () Int)
(declare-fun x373 () Int)
(declare-fun x752 () Bool)
(declare-fun x613 () Bool)
(declare-fun x526 () Bool)
(declare-fun x713 () Int)
(declare-fun x939 () Int)
(declare-fun x1008 () x474)
(declare-fun x33 () Bool)
(declare-fun x701 () Int)
(declare-fun x996 () Int)
(declare-fun x1549 () Bool)
(declare-fun x810 () Bool)
(declare-fun x1149 () Bool)
(declare-fun x1655 () Bool)
(declare-fun x103 () Int)
(declare-fun x364 () Int)
(declare-fun x222 () Bool)
(declare-fun x1724 () Int)
(declare-fun x1031 () x474)
(declare-fun x122 () Bool)
(declare-fun x93 () Int)
(declare-fun x1141 () Int)
(declare-fun x1715 () Bool)
(declare-fun x90 () Int)
(declare-fun x147 () Bool)
(declare-fun x153 () Int)
(declare-fun x1689 () Bool)
(declare-fun x1053 () Bool)
(declare-fun x1370 () Bool)
(declare-fun x974 () Bool)
(declare-fun x1044 () Int)
(declare-fun x488 () Bool)
(declare-fun x727 () Bool)
(declare-fun x1016 () Bool)
(declare-fun x958 () Int)
(declare-fun x414 () Int)
(declare-fun x537 () Bool)
(declare-fun x1305 () Int)
(declare-fun x155 () Int)
(declare-fun x564 () Bool)
(declare-fun x1193 () Int)
(declare-fun x833 () Int)
(declare-fun x972 () Int)
(declare-fun x1440 () Int)
(declare-fun x1040 () Int)
(declare-fun x802 () Int)
(declare-fun x935 () Int)
(declare-fun x1 () Bool)
(declare-fun x650 () Int)
(declare-fun x964 () Bool)
(declare-fun x862 () Bool)
(declare-fun x1428 () Int)
(declare-fun x1155 () Bool)
(declare-fun x135 () Bool)
(declare-fun x447 () Int)
(declare-fun x95 () Int)
(declare-fun x306 () Bool)
(declare-fun x1509 () Bool)
(declare-fun x577 () Bool)
(declare-fun x62 () Int)
(declare-fun x1560 () Bool)
(declare-fun x1494 () Bool)
(declare-fun x1302 () Bool)
(declare-fun x1424 () Int)
(declare-fun x1618 () Int)
(declare-fun x998 () Bool)
(declare-fun x1388 () Bool)
(declare-fun x1627 () x474)
(declare-fun x1232 (Int) Int)
(declare-fun x992 () Bool)
(declare-fun x320 () Bool)
(declare-fun x187 () Int)
(declare-fun x1714 () Int)
(declare-fun x1299 () Bool)
(declare-fun x201 () Int)
(declare-fun x1417 () Bool)
(declare-fun x356 () Bool)
(declare-fun x531 () Int)
(declare-fun x631 () Bool)
(declare-fun x644 () Bool)
(declare-fun x1730 () Int)
(declare-fun x890 () Bool)
(declare-fun x1029 () Bool)
(declare-fun x21 (Int) Int)
(declare-fun x1468 () Bool)
(declare-fun x637 () Int)
(declare-fun x906 () Int)
(declare-fun x1437 () Bool)
(declare-fun x322 () Int)
(declare-fun x1433 () Bool)
(declare-fun x969 (x474) Int)
(declare-fun x141 () Bool)
(declare-fun x1378 () Bool)
(declare-fun x758 () Int)
(declare-fun x1495 () Bool)
(declare-fun x1563 () Bool)
(declare-fun x1727 () x474)
(declare-fun x1111 () Int)
(declare-fun x1637 () Int)
(declare-fun x540 () Int)
(declare-fun x818 () Bool)
(declare-fun x1670 () Bool)
(declare-fun x1414 (Int) Int)
(declare-fun x1601 () Bool)
(declare-fun x1256 () Int)
(declare-fun x1386 () Int)
(declare-fun x343 () Int)
(declare-fun x776 () Int)
(declare-fun x1731 () x474)
(declare-fun x1266 () Int)
(declare-fun x621 () Int)
(declare-fun x546 () Bool)
(declare-fun x1459 () Bool)
(declare-fun x1134 () Int)
(declare-fun x133 () Int)
(declare-fun x1631 () Bool)
(declare-fun x719 () Int)
(declare-fun x219 () Bool)
(declare-fun x765 () Bool)
(declare-fun x338 () Bool)
(declare-fun x1553 () Bool)
(declare-fun x1274 () Int)
(declare-fun x497 () Bool)
(declare-fun x943 () Bool)
(declare-fun x260 () Bool)
(declare-fun x1341 () Int)
(declare-fun x1422 () Bool)
(declare-fun x97 () Bool)
(declare-fun x724 () Bool)
(declare-fun x1463 () Bool)
(declare-fun x934 () Int)
(declare-fun x1522 () Int)
(declare-fun x489 () Int)
(declare-fun x876 () Int)
(declare-fun x705 () Int)
(declare-fun x517 () Int)
(declare-fun x777 () Bool)
(declare-fun x293 () Bool)
(declare-fun x948 () Int)
(declare-fun x1537 () Int)
(declare-fun x1334 () Bool)
(declare-fun x946 () Int)
(declare-fun x1295 () Bool)
(declare-fun x1055 () Bool)
(declare-fun x314 () x474)
(declare-fun x1362 () Int)
(declare-fun x1475 (Int) Int)
(declare-fun x1676 () Int)
(declare-fun x1145 () Int)
(declare-fun x1195 () Int)
(declare-fun x1283 (Int) Int)
(declare-fun x1311 () Bool)
(declare-fun x558 () Int)
(declare-fun x309 () Bool)
(declare-fun x1368 () Int)
(declare-fun x660 () Bool)
(declare-fun x1664 () x474)
(declare-fun x1340 () Int)
(declare-fun x46 () Bool)
(declare-fun x129 () Bool)
(declare-fun x508 () Int)
(declare-fun x408 () Bool)
(declare-fun x209 () Bool)
(declare-fun x858 () Int)
(declare-fun x1467 () Bool)
(declare-fun x519 () Bool)
(declare-fun x646 () Int)
(declare-fun x159 () Bool)
(declare-fun x1036 () Bool)
(declare-fun x825 () Bool)
(declare-fun x746 () Bool)
(declare-fun x1457 () Bool)
(declare-fun x294 () Bool)
(declare-fun x971 () Bool)
(declare-fun x1072 () Bool)
(declare-fun x469 () Int)
(declare-fun x1382 () Bool)
(declare-fun x1257 () Int)
(declare-fun x1500 () Bool)
(declare-fun x124 () Bool)
(declare-fun x872 () Int)
(declare-fun x1650 () Bool)
(declare-fun x438 () Bool)
(declare-fun x919 () Bool)
(declare-fun x874 () Int)
(declare-fun x1723 () Bool)
(declare-fun x1130 () Int)
(declare-fun x1739 () Bool)
(declare-fun x690 () Int)
(declare-fun x1607 () x474)
(declare-fun x1680 () Bool)
(declare-fun x667 () Bool)
(declare-fun x608 () x474)
(declare-fun x246 () Bool)
(declare-fun x547 () Int)
(declare-fun x274 () Bool)
(declare-fun x1088 () Bool)
(declare-fun x391 () Int)
(declare-fun x588 () Bool)
(declare-fun x573 () Int)
(declare-fun x1342 () Bool)
(declare-fun x1487 () Bool)
(declare-fun x867 () Int)
(declare-fun x616 () Bool)
(declare-fun x1096 () Int)
(declare-fun x366 () Int)
(declare-fun x375 () Int)
(declare-fun x121 () Bool)
(declare-fun x1559 () Int)
(declare-fun x1185 () Bool)
(declare-fun x1732 () Int)
(declare-fun x1057 (x474) Int)
(declare-fun x140 () Int)
(declare-fun x1452 () Bool)
(declare-fun x52 () Int)
(declare-fun x968 () Int)
(declare-fun x997 () Int)
(declare-fun x856 () Bool)
(declare-fun x280 () Bool)
(declare-fun x49 () Bool)
(declare-fun x98 () Int)
(declare-fun x1453 () Int)
(declare-fun x1217 (Int Int) Int)
(declare-fun x1102 (x474) Int)
(declare-fun x819 () Int)
(declare-fun x1034 () Bool)
(declare-fun x709 () Int)
(declare-fun x492 () Bool)
(declare-fun x261 () Bool)
(declare-fun x1754 () Bool)
(declare-fun x221 () Bool)
(declare-fun x1663 () Int)
(declare-fun x1048 () Int)
(declare-fun x1241 () Bool)
(declare-fun x269 () Bool)
(declare-fun x259 () Bool)
(declare-fun x664 () Bool)
(declare-fun x420 () Bool)
(declare-fun x1616 () Int)
(declare-fun x511 () Bool)
(declare-fun x978 () Bool)
(declare-fun x1496 () x474)
(declare-fun x980 () Int)
(declare-fun x368 () Bool)
(declare-fun x302 () Int)
(declare-fun x484 () Bool)
(declare-fun x603 () Int)
(declare-fun x1267 () Int)
(declare-fun x1244 () Bool)
(declare-fun x1486 () Bool)
(declare-fun x1170 () Int)
(declare-fun x399 () Bool)
(declare-fun x790 () Bool)
(declare-fun x754 () Int)
(declare-fun x685 () Int)
(declare-fun x303 () x474)
(declare-fun x1761 () Int)
(declare-fun x1330 () Int)
(declare-fun x1030 () Bool)
(declare-fun x113 () Bool)
(declare-fun x842 () Bool)
(declare-fun x1692 () Bool)
(declare-fun x830 () Int)
(declare-fun x711 () Bool)
(declare-fun x327 () Bool)
(declare-fun x779 () Bool)
(declare-fun x570 () Bool)
(declare-fun x846 () Int)
(declare-fun x1416 () Bool)
(declare-fun x1722 () Bool)
(declare-fun x41 () Int)
(declare-fun x32 () Int)
(declare-fun x1519 () Int)
(declare-fun x12 () Bool)
(declare-fun x352 () Bool)
(declare-fun x1269 () Bool)
(declare-fun x1240 () Int)
(declare-fun x1167 () Bool)
(declare-fun x1271 () Bool)
(declare-fun x107 () Bool)
(declare-fun x1703 () Bool)
(declare-fun x431 () Int)
(declare-fun x1210 () Bool)
(declare-fun x101 () Int)
(declare-fun x1644 () Int)
(declare-fun x72 () Bool)
(declare-fun x1624 () Int)
(declare-fun x333 () x474)
(declare-fun x451 () Bool)
(declare-fun x1234 () Bool)
(declare-fun x1081 () Bool)
(declare-fun x1337 () Bool)
(declare-fun x1406 (Int) Int)
(declare-fun x132 () Int)
(declare-fun x1347 () Bool)
(declare-fun x1325 () Int)
(declare-fun x658 () Bool)
(declare-fun x381 () Bool)
(declare-fun x210 () Int)
(declare-fun x841 () Bool)
(declare-fun x1262 () Bool)
(declare-fun x1168 () Bool)
(declare-fun x920 () Bool)
(declare-fun x19 () Bool)
(declare-fun x25 () Bool)
(declare-fun x877 () Bool)
(declare-fun x215 (Int) Int)
(declare-fun x192 () Int)
(declare-fun x1604 () Int)
(declare-fun x179 () Bool)
(declare-fun x180 () Bool)
(declare-fun x1121 () Int)
(declare-fun x460 () Bool)
(declare-fun x857 () Int)
(declare-fun x397 () Int)
(declare-fun x1390 () Bool)
(declare-fun x245 () x474)
(declare-fun x703 () Int)
(declare-fun x1288 () Bool)
(declare-fun x1461 () Int)
(declare-fun x740 () Bool)
(declare-fun x944 () x474)
(declare-fun x1420 () Bool)
(declare-fun x604 () Bool)
(declare-fun x1248 () x474)
(declare-fun x88 () Bool)
(declare-fun x821 () Int)
(declare-fun x244 () Bool)
(declare-fun x834 () Int)
(declare-fun x1611 () Bool)
(declare-fun x1501 () Bool)
(declare-fun x384 () Bool)
(declare-fun x45 () Bool)
(declare-fun x340 () Bool)
(declare-fun x988 () x474)
(declare-fun x1132 () Bool)
(declare-fun x641 () Bool)
(declare-fun x410 () Bool)
(declare-fun x18 () Bool)
(declare-fun x1045 () Bool)
(declare-fun x207 () Bool)
(declare-fun x186 () x474)
(declare-fun x1713 () Int)
(declare-fun x993 () Int)
(declare-fun x323 () Bool)
(declare-fun x525 () Int)
(declare-fun x1203 () Int)
(declare-fun x1568 (Int Int) Int)
(declare-fun x413 () Bool)
(declare-fun x1326 () Int)
(declare-fun x308 () x474)
(declare-fun x911 () Int)
(declare-fun x523 () Bool)
(declare-fun x110 () Int)
(declare-fun x751 () Bool)
(declare-fun x84 () Bool)
(declare-fun x286 () Int)
(declare-fun x1190 () Int)
(declare-fun x442 () Int)
(declare-fun x689 () Int)
(declare-fun x444 () Bool)
(declare-fun x168 () x474)
(declare-fun x1127 () Bool)
(declare-fun x487 () Int)
(declare-fun x1179 () Int)
(declare-fun x587 () Bool)
(declare-fun x30 () Int)
(declare-fun x541 () Int)
(declare-fun x361 () Int)
(declare-fun x1521 () Int)
(declare-fun x435 () Bool)
(declare-fun x360 () Int)
(declare-fun x678 (x474) Int)
(declare-fun x114 () Int)
(declare-fun x1580 () Bool)
(declare-fun x429 () Bool)
(declare-fun x1013 () Int)
(declare-fun x850 () Bool)
(declare-fun x1375 () Bool)
(declare-fun x1667 () Bool)
(declare-fun x312 () Bool)
(declare-fun x108 () Int)
(declare-fun x359 () x474)
(declare-fun x1531 () Bool)
(declare-fun x1064 () Bool)
(declare-fun x377 () Bool)
(declare-fun x157 () Int)
(declare-fun x1736 () Bool)
(declare-fun x623 () Bool)
(declare-fun x837 () Int)
(declare-fun x524 () Bool)
(declare-fun x446 () Bool)
(declare-fun x940 () Bool)
(declare-fun x355 () Bool)
(declare-fun x831 () Int)
(declare-fun x599 () Bool)
(declare-fun x1609 () Bool)
(declare-fun x1113 () Bool)
(declare-fun x1746 () Int)
(declare-fun x344 () Bool)
(declare-fun x1186 () Int)
(declare-fun x853 () Bool)
(declare-fun x105 () Bool)
(declare-fun x574 () Int)
(declare-fun x1252 () Bool)
(declare-fun x440 () Bool)
(declare-fun x1695 () Bool)
(declare-fun x1696 () Bool)
(declare-fun x1671 () Bool)
(declare-fun x254 () Bool)
(declare-fun x1677 () Int)
(declare-fun x780 () Bool)
(declare-fun x931 () Int)
(declare-fun x1617 () Int)
(declare-fun x882 () Bool)
(declare-fun x502 () Int)
(declare-fun x1759 () Int)
(declare-fun x721 () Bool)
(declare-fun x91 () Int)
(declare-fun x86 () Int)
(declare-fun x741 () Bool)
(declare-fun x1536 () x474)
(declare-fun x949 () Bool)
(declare-fun x212 () Bool)
(declare-fun x1308 () Int)
(declare-fun x1154 () Bool)
(declare-fun x1194 () Bool)
(declare-fun x975 () Bool)
(declare-fun x1709 () Int)
(declare-fun x1702 () Bool)
(declare-fun x1297 () Int)
(declare-fun x71 () Bool)
(declare-fun x671 (Int) Int)
(declare-fun x1704 () Int)
(declare-fun x1291 () Int)
(declare-fun x172 () Bool)
(declare-fun x1545 () Bool)
(declare-fun x1321 () Bool)
(declare-fun x1363 () Bool)
(declare-fun x1612 () Bool)
(declare-fun x283 () Bool)
(declare-fun x1265 () Bool)
(declare-fun x40 () Bool)
(declare-fun x1300 () Bool)
(declare-fun x1264 () Bool)
(declare-fun x459 () Int)
(declare-fun x1312 () Bool)
(declare-fun x653 () Bool)
(declare-fun x1306 (Int) Int)
(declare-fun x58 () Int)
(declare-fun x1173 (Int) Int)
(declare-fun x1374 () Int)
(declare-fun x568 () Bool)
(declare-fun x743 () Int)
(declare-fun x1083 () Int)
(declare-fun x702 () Bool)
(declare-fun x1755 () Bool)
(declare-fun x1505 () Int)
(declare-fun x1403 () Bool)
(declare-fun x561 () Bool)
(declare-fun x1571 () Bool)
(declare-fun x1054 () Int)
(declare-fun x389 () Int)
(declare-fun x1590 () Bool)
(declare-fun x197 () Int)
(declare-fun x1758 () Int)
(declare-fun x1354 () Bool)
(declare-fun x784 () Int)
(declare-fun x1318 () Bool)
(declare-fun x1595 () Int)
(declare-fun x1094 () Bool)
(declare-fun x571 () Int)
(declare-fun x79 () Int)
(declare-fun x1183 () Int)
(declare-fun x225 () Bool)
(declare-fun x1124 () Int)
(declare-fun x230 () Bool)
(declare-fun x1166 () Bool)
(declare-fun x1443 () Int)
(declare-fun x1534 () Bool)
(declare-fun x51 () Bool)
(declare-fun x1222 () Bool)
(declare-fun x1043 () Bool)
(declare-fun x1592 () Int)
(declare-fun x1747 () Bool)
(declare-fun x683 () Bool)
(declare-fun x437 () x474)
(declare-fun x908 () Int)
(declare-fun x1742 () Bool)
(declare-fun x96 () Int)
(declare-fun x220 (Int) Int)
(declare-fun x976 () Bool)
(declare-fun x148 () Int)
(declare-fun x331 () Int)
(declare-fun x126 () Bool)
(declare-fun x1181 () Bool)
(declare-fun x962 () Bool)
(declare-fun x576 () Int)
(declare-fun x1285 () Bool)
(declare-fun x1744 () Int)
(declare-fun x799 () Int)
(declare-fun x177 () Bool)
(declare-fun x1123 () Int)
(declare-fun x1344 () x474)
(declare-fun x691 () Int)
(declare-fun x760 () Int)
(declare-fun x625 () Int)
(declare-fun x1273 () Int)
(declare-fun x1750 () Bool)
(declare-fun x1586 () Int)
(declare-fun x679 () Bool)
(declare-fun x638 () Bool)
(declare-fun x16 () Bool)
(declare-fun x1720 (Int) Int)
(declare-fun x736 () Bool)
(declare-fun x1361 () Bool)
(declare-fun x1280 () Bool)
(declare-fun x191 () Bool)
(declare-fun x1023 () Bool)
(declare-fun x1734 () Int)
(declare-fun x827 () Bool)
(declare-fun x1626 () Int)
(declare-fun x1259 () x474)
(declare-fun x1204 () Bool)
(declare-fun x1260 () Bool)
(declare-fun x990 () Bool)
(declare-fun x1638 () Bool)
(declare-fun x695 () Bool)
(declare-fun x316 () Int)
(declare-fun x1192 () Bool)
(declare-fun x1317 () Bool)
(declare-fun x675 () Int)
(declare-fun x491 () Bool)
(declare-fun x270 () x474)
(declare-fun x886 () Bool)
(declare-fun x432 () Bool)
(declare-fun x845 () Int)
(declare-fun x160 () Bool)
(declare-fun x1324 () Int)
(declare-fun x1118 () Bool)
(declare-fun x924 (Int Int) Int)
(declare-fun x1353 () Bool)
(declare-fun x581 () Int)
(declare-fun x184 () x474)
(declare-fun x704 () Bool)
(declare-fun x369 () Int)
(declare-fun x665 () Int)
(declare-fun x755 () Int)
(declare-fun x708 () Int)
(declare-fun x1251 () Int)
(declare-fun x252 () Bool)
(declare-fun x552 () Bool)
(declare-fun x953 () Int)
(declare-fun x60 () Bool)
(declare-fun x472 () Int)
(declare-fun x1654 () Bool)
(declare-fun x1366 () Bool)
(declare-fun x1477 () Int)
(declare-fun x119 () Bool)
(declare-fun x398 () Int)
(declare-fun x256 () Int)
(declare-fun x134 () Bool)
(declare-fun x1099 () Bool)
(declare-fun x326 () Bool)
(declare-fun x1582 () Int)
(declare-fun x1276 () Bool)
(declare-fun x1092 () Int)
(declare-fun x527 () Bool)
(declare-fun x1405 () Bool)
(declare-fun x1019 () Bool)
(declare-fun x1228 () Int)
(declare-fun x1213 () Int)
(declare-fun x149 () Bool)
(declare-fun x1484 () Bool)
(declare-fun x382 () Bool)
(declare-fun x1554 () Int)
(declare-fun x1156 () Bool)
(declare-fun x214 () Int)
(declare-fun x869 () Bool)
(declare-fun x763 () Bool)
(declare-fun x1071 () Bool)
(declare-fun x190 () x474)
(declare-fun x248 () Bool)
(declare-fun x26 () Int)
(declare-fun x1543 () Int)
(declare-fun x120 () Int)
(declare-fun x1385 () Int)
(declare-fun x1304 () Bool)
(declare-fun x1445 () Int)
(declare-fun x1733 () Bool)
(declare-fun x509 () Bool)
(declare-fun x370 () Bool)
(declare-fun x112 () Int)
(declare-fun x628 () Bool)
(declare-fun x947 () Bool)
(declare-fun x1514 () Int)
(declare-fun x3 () Bool)
(declare-fun x1142 () Bool)
(declare-fun x400 () Int)
(declare-fun x407 () Int)
(declare-fun x766 () Bool)
(declare-fun x1446 (Int) Int)
(declare-fun x292 () Bool)
(declare-fun x372 () Int)
(declare-fun x226 () Bool)
(declare-fun x769 () Int)
(declare-fun x851 () Bool)
(declare-fun x1218 () Bool)
(declare-fun x1153 () Bool)
(declare-fun x166 () Bool)
(declare-fun x1698 () Bool)
(declare-fun x918 () Bool)
(declare-fun x1033 () Int)
(declare-fun x863 (x474) Int)
(declare-fun x916 () Bool)
(declare-fun x1158 () Bool)
(declare-fun x161 () Bool)
(declare-fun x596 () Int)
(declare-fun x797 () Bool)
(declare-fun x1412 () Int)
(declare-fun x396 () Bool)
(declare-fun x888 () Int)
(declare-fun x1551 () Bool)
(declare-fun x131 () Int)
(declare-fun x454 () Bool)
(declare-fun x1409 () Int)
(declare-fun x473 () Int)
(declare-fun x595 () Bool)
(declare-fun x1236 () Bool)
(declare-fun x1073 () Bool)
(declare-fun x386 (x474) Int)
(declare-fun x1735 () Bool)
(declare-fun x1474 () Bool)
(declare-fun x1231 () Bool)
(declare-fun x1063 () Int)
(declare-fun x739 (Int) Int)
(declare-fun x1640 () Bool)
(declare-fun x1056 () Int)
(declare-fun x1005 () Int)
(declare-fun x1675 () Int)
(declare-fun x1552 () Int)
(declare-fun x1333 () Bool)
(declare-fun x85 () Int)
(declare-fun x1352 () Bool)
(declare-fun x636 () Int)
(declare-fun x1451 () Int)
(declare-fun x1062 () Int)
(declare-fun x767 () Bool)
(declare-fun x979 () Bool)
(declare-fun x1367 () Bool)
(declare-fun x1200 () Int)
(declare-fun x1201 () Int)
(declare-fun x151 () Bool)
(declare-fun x1157 () Int)
(declare-fun x1176 () Int)
(declare-fun x1646 () Bool)
(declare-fun x1555 () Bool)
(declare-fun x1187 () Bool)
(declare-fun x243 () Bool)
(declare-fun x1444 () Int)
(declare-fun x208 () Bool)
(declare-fun x362 () Int)
(declare-fun x688 () Bool)
(declare-fun x351 () Int)
(declare-fun x337 (Int) Int)
(declare-fun x1566 () Int)
(declare-fun x1602 () Int)
(declare-fun x1517 () Int)
(declare-fun x1690 (x474) Int)
(declare-fun x607 () Int)
(declare-fun x1058 () Bool)
(declare-fun x353 () Bool)
(declare-fun x1436 () Bool)
(declare-fun x824 () Int)
(declare-fun x768 () Int)
(declare-fun x1749 () Bool)
(declare-fun x956 () Int)
(declare-fun x189 () Int)
(declare-fun x109 () Int)
(declare-fun x787 () Bool)
(declare-fun x412 () x474)
(declare-fun x78 () Int)
(declare-fun x557 () Int)
(declare-fun x1707 () Int)
(declare-fun x893 () Bool)
(declare-fun x927 () Bool)
(declare-fun x999 () x474)
(declare-fun x1377 () Bool)
(declare-fun x240 () Bool)
(declare-fun x1246 () Bool)
(declare-fun x792 () Int)
(declare-fun x1079 () Int)
(declare-fun x1120 () Bool)
(declare-fun x1110 () Bool)
(declare-fun x217 () Int)
(declare-fun x796 () Bool)
(declare-fun x981 () Bool)
(declare-fun x880 () Bool)
(declare-fun x1741 (Int) Int)
(declare-fun x1369 () Bool)
(declare-fun x1313 () Int)
(declare-fun x83 () Bool)
(declare-fun x522 () Int)
(declare-fun x809 () Int)
(declare-fun x870 () x474)
(declare-fun x14 () x474)
(declare-fun x1564 () Bool)
(declare-fun x313 () Bool)
(declare-fun x1693 () Int)
(declare-fun x747 () Int)
(declare-fun x1620 () Bool)
(declare-fun x1221 (Int) x474)
(declare-fun x319 () Bool)
(declare-fun x1489 () Bool)
(declare-fun x881 () Bool)
(declare-fun x1086 () Bool)
(declare-fun x1762 () Int)
(declare-fun x728 () Bool)
(declare-fun x47 () Bool)
(declare-fun x794 (x474) Int)
(declare-fun x229 () Int)
(declare-fun x1336 () Bool)
(declare-fun x697 () Bool)
(declare-fun x167 () Bool)
(declare-fun x1332 () Bool)
(declare-fun x452 () Bool)
(declare-fun x118 () Bool)
(declare-fun x513 () x474)
(declare-fun x909 () Int)
(declare-fun x553 () Int)
(declare-fun x1591 () Bool)
(declare-fun x1665 () Bool)
(declare-fun x1641 () x474)
(declare-fun x321 () Bool)
(declare-fun x433 () Int)
(declare-fun x562 () Bool)
(declare-fun x106 () Int)
(declare-fun x1710 () Bool)
(declare-fun x615 () Bool)
(declare-fun x1365 () Int)
(declare-fun x1293 () Int)
(declare-fun x467 () Int)
(declare-fun x714 () Bool)
(declare-fun x1136 () Bool)
(declare-fun x1606 () Bool)
(declare-fun x1719 () Bool)
(declare-fun x585 () Int)
(declare-fun x367 (Int Int) Int)
(declare-fun x1001 () Bool)
(declare-fun x897 () Int)
(declare-fun x392 () Bool)
(declare-fun x549 () Bool)
(declare-fun x1350 () Bool)
(declare-fun x418 () Int)
(declare-fun x878 () Int)
(declare-fun x1085 () Int)
(declare-fun x310 () Bool)
(declare-fun x281 (x474) Int)
(declare-fun x791 () Bool)
(declare-fun x1074 () Int)
(declare-fun x10 () Int)
(declare-fun x449 () Bool)
(declare-fun x694 () x474)
(declare-fun x1209 () Int)
(declare-fun x498 () Bool)
(declare-fun x125 () Bool)
(declare-fun x401 () Bool)
(declare-fun x1540 () Bool)
(declare-fun x1376 () Bool)
(declare-fun x1287 () Int)
(declare-fun x1674 () Int)
(declare-fun x817 () Bool)
(declare-fun x1548 () Bool)
(declare-fun x619 () Bool)
(declare-fun x1615 () Bool)
(declare-fun x1678 () Bool)
(declare-fun x300 () Bool)
(declare-fun x504 (Int) Int)
(declare-fun x836 () x474)
(declare-fun x879 () Bool)
(declare-fun x1492 () Int)
(declare-fun x424 () Bool)
(declare-fun x536 () Bool)
(declare-fun x1432 () Int)
(declare-fun x348 () Int)
(declare-fun x734 () Bool)
(declare-fun x1082 () Int)
(declare-fun x479 () Bool)
(declare-fun x1490 () Int)
(declare-fun x808 () Int)
(declare-fun x258 () Bool)
(declare-fun x1238 () Bool)
(declare-fun x520 () Bool)
(declare-fun x1310 () Bool)
(declare-fun x548 () Int)
(declare-fun x1421 () Int)
(declare-fun x417 () Int)
(declare-fun x1191 () Int)
(declare-fun x13 () Int)
(declare-fun x1488 () Int)
(declare-fun x578 () Bool)
(declare-fun x378 () Int)
(declare-fun x402 () Bool)
(declare-fun x336 () Int)
(declare-fun x236 () Int)
(declare-fun x227 () Int)
(declare-fun x1572 () Int)
(declare-fun x55 () Int)
(declare-fun x1659 () Bool)
(declare-fun x53 () Bool)
(declare-fun x1270 () Int)
(declare-fun x1383 () Int)
(declare-fun x1255 () Bool)
(declare-fun x832 () Int)
(declare-fun x1371 () Bool)
(declare-fun x380 (x474) Int)
(declare-fun x365 () Int)
(declare-fun x1752 () Bool)
(declare-fun x1381 () Int)
(declare-fun x1335 () Int)
(declare-fun x1077 () x474)
(declare-fun x1541 () x474)
(declare-fun x1161 () Int)
(declare-fun x357 () Int)
(declare-fun x1025 () Bool)
(declare-fun x1686 () Int)
(declare-fun x567 () Bool)
(declare-fun x1346 () Int)
(declare-fun x204 () Int)
(declare-fun x6 (Int) Int)
(declare-fun x710 () Int)
(declare-fun x1413 () Bool)
(declare-fun x1725 () Bool)
(declare-fun x612 () Int)
(declare-fun x199 () Bool)
(declare-fun x24 () Int)
(declare-fun x223 () Bool)
(declare-fun x142 () Int)
(declare-fun x1515 (Int) Int)
(declare-fun x15 () Bool)
(declare-fun x1427 () Int)
(declare-fun x239 () Int)
(declare-fun x812 () Int)
(declare-fun x1712 () Int)
(declare-fun x1628 () Int)
(declare-fun x282 () Int)
(declare-fun x756 () Bool)
(declare-fun x1078 () Int)
(declare-fun x128 () Int)
(declare-fun x875 () Int)
(declare-fun x1449 () Int)
(declare-fun x1148 () Bool)
(declare-fun x1180 () x474)
(declare-fun x387 () Bool)
(declare-fun x605 () Int)
(declare-fun x1143 () Bool)
(declare-fun x1594 () x474)
(declare-fun x1401 () Int)
(declare-fun x1766 () Bool)
(declare-fun x1729 () Bool)
(declare-fun x100 () Bool)
(declare-fun x945 () Bool)
(declare-fun x145 () Int)
(declare-fun x601 () Bool)
(declare-fun x661 () Bool)
(declare-fun x913 () Bool)
(declare-fun x1070 () Bool)
(declare-fun x1557 () Int)
(declare-fun x1415 () Int)
(declare-fun x297 () Bool)
(declare-fun x430 () Bool)
(declare-fun x1101 () Bool)
(declare-fun x1122 () Bool)
(declare-fun x572 () Bool)
(declare-fun x1699 () x474)
(declare-fun x1528 () Int)
(declare-fun x1662 () Int)
(declare-fun x461 () Int)
(declare-fun x1757 () Bool)
(declare-fun x1726 () Int)
(declare-fun x600 () Int)
(declare-fun x1059 () Int)
(declare-fun x1237 () Bool)
(declare-fun x559 () Bool)
(declare-fun x757 () Int)
(declare-fun x1380 () Int)
(declare-fun x455 () Bool)
(declare-fun x115 () Bool)
(declare-fun x205 () Bool)
(declare-fun x94 () x474)
(declare-fun x861 () Bool)
(declare-fun x803 () Bool)
(declare-fun x242 () Bool)
(declare-fun x7 () Bool)
(declare-fun x1364 () Bool)
(declare-fun x750 () Bool)
(declare-fun x892 () Int)
(declare-fun x866 () Bool)
(declare-fun x1530 () Bool)
(declare-fun x1230 (Int) Int)
(declare-fun x262 () Int)
(declare-fun x1507 () Int)
(declare-fun x1518 () Bool)
(declare-fun x477 () Bool)
(declare-fun x11 () Bool)
(declare-fun x1544 () Bool)
(declare-fun x443 () Bool)
(declare-fun x1575 () Bool)
(declare-fun x896 () Int)
(declare-fun x70 () Int)
(declare-fun x456 () Int)
(declare-fun x518 () Bool)
(declare-fun x1397 () Int)
(declare-fun x1089 () x474)
(declare-fun x1249 () Int)
(declare-fun x1399 () Bool)
(declare-fun x1410 () Int)
(declare-fun x983 () Bool)
(declare-fun x211 () Bool)
(declare-fun x1652 () Int)
(declare-fun x1290 () Bool)
(declare-fun x317 () Bool)
(declare-fun x1152 (Int) Int)
(declare-fun x1561 () Bool)
(declare-fun x960 () Bool)
(declare-fun x1411 () Bool)
(declare-fun x933 () Int)
(declare-fun x894 () Int)
(declare-fun x860 () Int)
(declare-fun x1282 (Int) Int)
(declare-fun x405 () Bool)
(declare-fun x1666 () Bool)
(declare-fun x1225 () Int)
(declare-fun x1229 () Bool)
(declare-fun x1476 () Int)
(declare-fun x1687 () Int)
(declare-fun x598 () Bool)
(declare-fun x275 () Bool)
(declare-fun x1199 () Int)
(declare-fun x1039 () Int)
(declare-fun x251 () Bool)
(declare-fun x1006 () Bool)
(declare-fun x1419 () Bool)
(declare-fun x764 () Bool)
(declare-fun x285 () Bool)
(declare-fun x289 () Bool)
(declare-fun x1673 () Bool)
(declare-fun x864 () Bool)
(declare-fun x849 () Bool)
(declare-fun x216 () Int)
(declare-fun x173 () Bool)
(declare-fun x889 () Int)
(declare-fun x1037 () Bool)
(declare-fun x267 () Int)
(declare-fun x350 () Bool)
(declare-fun x1027 () Bool)
(declare-fun x1162 () Bool)
(declare-fun x1748 () Int)
(declare-fun x127 () Bool)
(declare-fun x657 () Int)
(declare-fun x427 () Bool)
(declare-fun x82 () Int)
(declare-fun x1349 () Int)
(declare-fun x798 () Int)
(declare-fun x593 () Bool)
(declare-fun x66 () Bool)
(declare-fun x733 () Int)
(declare-fun x1224 () Int)
(declare-fun x682 () Int)
(declare-fun x263 () Bool)
(declare-fun x1456 () Int)
(declare-fun x1447 () Bool)
(declare-fun x977 () Int)
(declare-fun x499 (Int) Int)
(declare-fun x1253 () Bool)
(declare-fun x1430 () Bool)
(declare-fun x905 () Int)
(declare-fun x35 () Int)
(declare-fun x1508 () Bool)
(declare-fun x255 () Bool)
(declare-fun x1593 () Bool)
(declare-fun x1289 (Int) Int)
(declare-fun x318 () Int)
(declare-fun x1498 () Bool)
(declare-fun x811 () Int)
(declare-fun x1061 () Int)
(declare-fun x20 () Int)
(declare-fun x1050 () Int)
(declare-fun x1418 () Int)
(declare-fun x606 (Int) Int)
(declare-fun x266 () Bool)
(declare-fun x1301 () Int)
(declare-fun x1482 () Int)
(declare-fun x277 () Bool)
(declare-fun x563 () Int)
(declare-fun x59 () Int)
(declare-fun x1189 () Int)
(declare-fun x789 () Bool)
(declare-fun x415 () Bool)
(declare-fun x771 () Int)
(declare-fun x279 () Bool)
(declare-fun x1497 () Int)
(declare-fun x1751 () Int)
(declare-fun x347 () Bool)
(declare-fun x1465 () Int)
(declare-fun x1442 () Bool)
(declare-fun x75 () Int)
(declare-fun x1513 () Bool)
(declare-fun x74 () Bool)
(declare-fun x1197 () Bool)
(declare-fun x416 () Int)
(declare-fun x116 () Int)
(declare-fun x264 () Int)
(declare-fun x626 () Int)
(declare-fun x725 () Bool)
(declare-fun x1460 () Int)
(declare-fun x898 () Bool)
(declare-fun x1215 () Int)
(declare-fun x164 () Bool)
(declare-fun x639 () x474)
(declare-fun x42 () Bool)
(declare-fun x904 () Bool)
(declare-fun x987 () Bool)
(declare-fun x788 () Int)
(declare-fun x1510 () Bool)
(declare-fun x813 () Bool)
(declare-fun x1688 () Bool)
(declare-fun x1425 (Int) Int)
(declare-fun x486 () Int)
(declare-fun x843 () Int)
(declare-fun x1529 () Int)
(declare-fun x34 () Bool)
(declare-fun x1126 () Bool)
(declare-fun x495 () Int)
(declare-fun x528 () Bool)
(declare-fun x654 () Bool)
(declare-fun x554 () Bool)
(declare-fun x1012 () Bool)
(declare-fun x37 (x474) Int)
(declare-fun x773 () Bool)
(declare-fun x1470 () Int)
(declare-fun x1525 () Bool)
(declare-fun x1343 () Bool)
(declare-fun x493 () Int)
(declare-fun x490 () Int)
(declare-fun x1684 () Int)
(declare-fun x565 () Int)
(declare-fun x844 () Int)
(declare-fun x1556 () Bool)
(declare-fun x1393 (Int) Int)
(declare-fun x632 (Int Int) Int)
(declare-fun x1323 () Bool)
(declare-fun x1480 () Bool)
(declare-fun x774 () Int)
(declare-fun x1216 () Int)
(declare-fun x87 () Int)
(declare-fun x1076 () Bool)
(declare-fun x1396 () Bool)
(declare-fun x963 () Bool)
(declare-fun x249 () Bool)
(declare-fun x951 () Int)
(declare-fun x1046 () Bool)
(declare-fun x634 () Int)
(declare-fun x1068 () Bool)
(declare-fun x295 () Bool)
(declare-fun x272 () Int)
(declare-fun x1052 () Bool)
(declare-fun x1389 () Int)
(declare-fun x778 () Bool)
(declare-fun x278 () Int)
(declare-fun x961 () Bool)
(declare-fun x1355 () Int)
(declare-fun x163 () Bool)
(declare-fun x1338 () Int)
(declare-fun x1138 () Bool)
(declare-fun x686 () Int)
(declare-fun x1112 () Bool)
(declare-fun x393 () x474)
(declare-fun x1619 () Bool)
(declare-fun x1589 () Int)
(declare-fun x731 () Int)
(declare-fun x855 () Int)
(declare-fun x206 () Int)
(declare-fun x1681 () Bool)
(declare-fun x737 () Int)
(declare-fun x732 () Int)
(declare-fun x450 () Bool)
(declare-fun x1718 () Bool)
(declare-fun x970 () Bool)
(declare-fun x1348 () Bool)
(declare-fun x1021 () x474)
(declare-fun x1598 () Int)
(declare-fun x921 () Int)
(declare-fun x1745 () Bool)
(declare-fun x1648 (Int) Int)
(declare-fun x1657 () Int)
(declare-fun x643 () Bool)
(declare-fun x371 () Bool)
(declare-fun x61 () Bool)
(declare-fun x507 () Bool)
(declare-fun x1547 () Bool)
(declare-fun x1358 () Bool)
(declare-fun x1067 () Int)
(declare-fun x448 () Bool)
(declare-fun x253 () Bool)
(declare-fun x930 () Bool)
(declare-fun x1047 () Int)
(declare-fun x156 () Int)
(declare-fun x1711 () Int)
(declare-fun x914 () Bool)
(declare-fun x989 () Int)
(declare-fun x394 () Int)
(declare-fun x178 () Bool)
(declare-fun x1455 () Bool)
(declare-fun x706 () Bool)
(declare-fun x1485 () Int)
(declare-fun x123 () Int)
(declare-fun x611 () Bool)
(declare-fun x550 () Int)
(declare-fun x28 () Int)
(declare-fun x1454 () Int)
(declare-fun x1491 () Bool)
(declare-fun x1316 () Bool)
(declare-fun x772 () x474)
(declare-fun x1542 () Bool)
(declare-fun x1041 () Bool)
(declare-fun x1373 () Int)
(declare-fun x1499 () Bool)
(declare-fun x617 () Bool)
(declare-fun x804 () Int)
(declare-fun x887 () x474)
(declare-fun x680 () Bool)
(declare-fun x291 () Bool)
(declare-fun x1223 () Bool)
(declare-fun x1605 () Int)
(declare-fun x1115 () Bool)
(declare-fun x200 () Bool)
(declare-fun x635 () Int)
(declare-fun x1478 () Int)
(declare-fun x957 () Bool)
(declare-fun x539 (Int) Int)
(declare-fun x551 () Bool)
(declare-fun x1114 () Int)
(declare-fun x1532 () Int)
(declare-fun x1060 () Bool)
(declare-fun x1177 () Bool)
(declare-fun x388 (Int Int) Int)
(declare-fun x1658 () Int)
(declare-fun x982 () Bool)
(declare-fun x111 (Int) Int)
(declare-fun x195 () Int)
(declare-fun x1503 () Int)
(declare-fun x579 (Int Int) Int)
(declare-fun x1104 () Int)
(declare-fun x1672 () Bool)
(declare-fun x1178 () Int)
(declare-fun x609 () Bool)
(declare-fun x716 () Bool)
(declare-fun x1578 () Bool)
(declare-fun x912 () Bool)
(declare-fun x1116 () Int)
(declare-fun x759 () x474)
(declare-fun x1245 () Bool)
(declare-fun x707 () Bool)
(declare-fun x1198 () Int)
(declare-fun x465 () Bool)
(declare-fun x720 () Bool)
(declare-fun x395 () Int)
(declare-fun x823 () Int)
(declare-fun x762 () Int)
(declare-fun x610 () Bool)
(declare-fun x434 () Bool)
(declare-fun x1395 () Bool)
(declare-fun x828 () Int)
(declare-fun x1625 () Bool)
(declare-fun x726 () Bool)
(declare-fun x1007 () Bool)
(declare-fun x144 () Int)
(declare-fun x154 () Bool)
(declare-fun x868 () Bool)
(declare-fun x64 () Bool)
(declare-fun x649 () Bool)
(declare-fun x57 () Bool)
(declare-fun x910 () Bool)
(declare-fun x566 () Bool)
(declare-fun x597 () Bool)
(declare-fun x775 () Bool)
(declare-fun x591 () Bool)
(declare-fun x466 () Int)
(declare-fun x237 () Bool)
(declare-fun x1028 () Bool)
(declare-fun x521 () Bool)
(declare-fun x848 () Int)
(declare-fun x692 (x474) Int)
(declare-fun x1024 () Int)
(declare-fun x1483 () Int)
(declare-fun x1404 () Bool)
(declare-fun x411 () Int)
(declare-fun x642 () Bool)
(declare-fun x569 () x474)
(declare-fun x462 () Int)
(declare-fun x584 () Bool)
(declare-fun x652 () Bool)
(declare-fun x202 () Int)
(declare-fun x1614 () Int)
(declare-fun x1512 () x474)
(declare-fun x1319 () Bool)
(declare-fun x651 () Bool)
(declare-fun x560 () Bool)
(declare-fun x1651 () Int)
(declare-fun x1764 () Bool)
(declare-fun x1356 () Bool)
(declare-fun x936 () Bool)
(declare-fun x669 () Bool)
(declare-fun x1694 () Int)
(declare-fun x959 () Bool)
(declare-fun x1042 () Int)
(declare-fun x839 () Bool)
(declare-fun x1584 () Int)
(declare-fun x1250 () Int)
(declare-fun x463 () Int)
(declare-fun x390 () Int)
(declare-fun x152 () Bool)
(declare-fun x696 (Int) Int)
(declare-fun x182 () Bool)
(declare-fun x1284 () Bool)
(declare-fun x1093 () Bool)
(declare-fun x1685 () Bool)
(declare-fun x826 () Int)
(declare-fun x885 () Bool)
(declare-fun x374 () Bool)
(declare-fun x515 () Int)
(declare-fun x1668 () Int)
(declare-fun x247 () Bool)
(declare-fun x358 () Int)
(declare-fun x816 () Int)
(declare-fun x955 () Bool)
(declare-fun x984 () Bool)
(declare-fun x676 () Int)
(declare-fun x169 () x474)
(declare-fun x428 () Int)
(declare-fun x68 () Bool)
(declare-fun x1128 () Bool)
(declare-fun x534 () Bool)
(declare-fun x1649 () Bool)
(declare-fun x445 () Int)
(declare-fun x1524 () Int)
(declare-fun x1009 () Bool)
(declare-fun x363 () Bool)
(declare-fun x820 () Bool)
(declare-fun x1613 () Bool)
(declare-fun x806 () Bool)
(declare-fun x512 () x474)
(declare-fun x290 () Int)
(declare-fun x1208 () Bool)
(declare-fun x1493 () Bool)
(declare-fun x1581 () Bool)
(declare-fun x1738 () Bool)
(declare-fun x891 () Int)
(declare-fun x170 () Int)
(declare-fun x656 () Int)
(declare-fun x36 () x474)
(declare-fun x1737 () Bool)
(declare-fun x1438 () Bool)
(declare-fun x966 () Int)
(declare-fun x900 () Bool)
(declare-fun x1577 () Bool)
(declare-fun x425 () Bool)
(declare-fun x556 () Bool)
(declare-fun x311 () Int)
(declare-fun x345 () Bool)
(declare-fun x299 () Bool)
(declare-fun x829 () Int)
(declare-fun x1022 () Int)
(declare-fun x441 () Bool)
(declare-fun x1523 () Bool)
(declare-fun x1125 () Int)
(declare-fun x700 () Bool)
(declare-fun x800 () Int)
(declare-fun x228 () Bool)
(declare-fun x1464 () Int)
(declare-fun x257 () Bool)
(declare-fun x203 () Bool)
(declare-fun x684 () Bool)
(declare-fun x1211 () Bool)
(declare-fun x324 () Int)
(declare-fun x1296 () Int)
(declare-fun x1095 () Int)
(declare-fun x723 () Int)
(declare-fun x137 () Int)
(declare-fun x1090 () Bool)
(declare-fun x1235 () Int)
(declare-fun x1080 () Bool)
(define-fun x514 ((x474 x474) (x1163 Int)) x474 (ite ((_ is x476) x474) (x476 (x1146 x474) (x1717 x474) (x335 x474) (x453 x474) (x1599 x474) (x1322 x474) (x421 x474) (+ (x674 x474) x1163)) (ite ((_ is x1402) x474) (x1402 (x439 x474) (x1633 x474) (x640 x474) (x1407 x474) (x1706 x474) (x4 x474) (+ (x328 x474) x1163)) (ite ((_ is x1084) x474) (x1084 (x69 x474) (x1307 x474) (x938 x474) (x1569 x474) (x693 x474) (+ (x174 x474) x1163)) (ite ((_ is x1629) x474) (x1629 (x542 x474) (x995 x474) (x1520 x474) (x404 x474) (+ x1163 (x1159 x474))) (ite ((_ is x730) x474) (x730 (x1450 x474) (x1004 x474) (x622 x474) (+ (x500 x474) x1163)) (ite ((_ is x1429) x474) (x1429 (x1137 x474) (+ (x196 x474) x1163)) (ite ((_ is x902) x474) (x902 (x304 x474) (x1728 x474) (+ (x1691 x474) x1163)) (x672 (+ x1163 (x1574 x474)))))))))))
(define-fun x501 ((x81 Int)) Int (ite (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x81) (<= 0 x81)) x81 (- x81 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(define-fun x1278 ((x81 Int)) Int (ite (and (< x81 0) (>= x81 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ 115792089237316195423570985008687907853269984665640564039457584007913129639936 x81) x81))
(define-fun x1600 ((x81 Int)) Int (ite (and (<= 0 x81) (< x81 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x81 (ite (and (< x81 231584178474632390847141970017375815706539969331281128078915168015826259279872) (>= x81 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- x81 115792089237316195423570985008687907853269984665640564039457584007913129639936) (ite (and (< x81 0) (>= x81 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (+ x81 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x388 x81 115792089237316195423570985008687907853269984665640564039457584007913129639936)))))
(define-fun x1504 ((x17 Int)) Bool (and (< x17 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x17 0)))
(define-fun x1458 ((x17 Int)) Bool (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17) (<= 0 x17)))
(define-fun x276 ((x17 Int) (x1471 Int)) Bool (and (< (x388 x17 x1471) x1471) (>= (x388 x17 x1471) 0)))
(define-fun x624 ((x17 Int) (x1471 Int)) Bool (=> (and (> x1471 0) (>= x17 0)) (= (< x17 x1471) (= (x388 x17 x1471) x17))))
(define-fun x1320 ((x17 Int) (x1471 Int)) Bool (=> (> x1471 0) (= x17 (+ (x388 x17 x1471) (x367 (x579 x17 x1471) x1471)))))
(define-fun x907 ((x17 Int) (x1471 Int)) Bool (and (x276 x17 x1471) (x1320 x17 x1471) (x624 x17 x1471)))
(define-fun x1226 ((x17 Int)) Bool (= (x388 0 x17) 0))
(define-fun x1303 ((x17 Int)) Bool (= 0 (x388 x17 1)))
(define-fun x590 ((x17 Int)) Bool (= 0 (x388 x17 x17)))
(define-fun x1281 ((x17 Int)) Bool (and (x590 x17) (x1303 x17) (x1226 x17)))
(define-fun x22 ((x17 Int) (x1471 Int)) Bool (=> (and (< 0 x1471) (> x17 0)) (and (>= x17 (x579 x17 x1471)) (>= (x579 x17 x1471) 0))))
(define-fun x1182 ((x17 Int) (x1471 Int)) Bool (=> (and (and (< x1471 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x1471 1)) (and (<= 0 x17) (< x17 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (and (<= 0 (x579 x17 x1471)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (x579 x17 x1471)))))
(define-fun x213 ((x17 Int) (x1471 Int)) Bool (=> (and (> x17 x1471) (< 1 x1471)) (> x17 (x579 x17 x1471))))
(define-fun x332 ((x17 Int) (x1471 Int)) Bool (=> (and (> x1471 0) (> x17 0)) (= (= (x579 x17 x1471) 0) (< x17 x1471))))
(define-fun x1279 ((x17 Int) (x1471 Int)) Bool (=> (and (> x17 0) (< 0 x1471)) (and (< (- x17 x1471) (x367 (x579 x17 x1471) x1471)) (<= (x367 (x579 x17 x1471) x1471) x17))))
(define-fun x1119 ((x17 Int) (x1471 Int)) Bool (and (x213 x17 x1471) (x1279 x17 x1471) (x1182 x17 x1471) (x332 x17 x1471) (x22 x17 x1471)))
(define-fun x139 ((x17 Int)) Bool (= (x579 0 x17) 0))
(define-fun x31 ((x17 Int)) Bool (= x17 (x579 x17 1)))
(define-fun x1165 ((x17 Int)) Bool (=> (not (= 0 x17)) (= 1 (x579 x17 x17))))
(define-fun x464 ((x17 Int)) Bool (and (x1165 x17) (x31 x17) (x139 x17)))
(define-fun x666 ((x17 Int)) Bool (and (= (x632 115792089237316195423570985008687907853269984665640564039457584007913129639935 x17) x17) (= (x632 x17 115792089237316195423570985008687907853269984665640564039457584007913129639935) x17)))
(define-fun x1184 ((x17 Int)) Bool (and (= 0 (x632 0 x17)) (= 0 (x632 x17 0))))
(define-fun x1570 ((x17 Int)) Bool (= x17 (x632 x17 x17)))
(define-fun x770 ((x17 Int)) Bool (and (x1570 x17) (x1184 x17) (x666 x17)))
(define-fun x1705 ((x17 Int) (x1471 Int)) Bool (= (x632 x1471 x17) (x632 x17 x1471)))
(define-fun x901 ((x17 Int) (x1471 Int)) Bool (and (=> (<= 0 x1471) (>= x1471 (x632 x17 x1471))) (>= (x632 x17 x1471) 0) (=> (<= 0 x17) (<= (x632 x17 x1471) x17))))
(define-fun x506 ((x17 Int) (x1471 Int)) Bool (and (x901 x17 x1471) (x1705 x17 x1471)))
(define-fun x1506 ((x17 Int)) Bool (= (x632 x17 1) (x388 x17 2)))
(define-fun x793 ((x17 Int)) Bool (and (x506 x17 1) (x1506 x17)))
(define-fun x329 ((x17 Int) (x1471 Int)) Bool (=> (and (and (<= x1471 x17) (> (+ x1471 x1471) x17)) (> x1471 0)) (= (x388 x17 x1471) (- x17 x1471))))
(define-fun x575 ((x17 Int)) Bool (= (x388 x17 128) (x632 x17 127)))
(define-fun x973 ((x17 Int)) Bool (and (x506 x17 127) (x575 x17)))
(define-fun x925 ((x17 Int)) Bool (= (x1600 x17) (+ (x388 x17 256) (x632 x17 115792089237316195423570985008687907853269984665640564039457584007913129639680))))
(define-fun x1558 ((x17 Int)) Bool (and (x925 x17) (x506 x17 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(define-fun x903 ((x17 Int)) Bool (and (= 115792089237316195423570985008687907853269984665640564039457584007913129639935 (x1568 x17 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (= (x1568 115792089237316195423570985008687907853269984665640564039457584007913129639935 x17) 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(define-fun x273 ((x17 Int)) Bool (and (= (x1568 0 x17) x17) (= (x1568 x17 0) x17)))
(define-fun x385 ((x17 Int)) Bool (= (x1568 x17 x17) x17))
(define-fun x1701 ((x17 Int)) Bool (and (x903 x17) (x273 x17) (x385 x17)))
(define-fun x748 ((x17 Int) (x1471 Int)) Bool (= (x1568 x1471 x17) (x1568 x17 x1471)))
(define-fun x1533 ((x17 Int) (x1471 Int)) Bool (and (=> (>= x1471 0) (<= x1471 (x1568 x17 x1471))) (=> (>= x17 0) (<= x17 (x1568 x17 x1471))) (<= (x1568 x17 x1471) (+ x1471 x17))))
(define-fun x136 ((x17 Int) (x1471 Int)) Bool (and (x748 x17 x1471) (x1533 x17 x1471)))
(define-fun x1623 ((x17 Int) (x1471 Int)) Bool (=> (and (> x17 0) (< 0 x1471)) (= (= (x579 (x1600 (x367 x17 x1471)) x17) x1471) (< (x367 x17 x1471) 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(define-fun x1669 ((x17 Int) (x1471 Int)) Bool (=> (and (not (= x17 0)) (not (= x1471 0))) (and (= (x579 (x367 x17 x1471) x1471) x17) (= x1471 (x579 (x367 x17 x1471) x17)))))
(define-fun x422 ((x17 Int) (x1471 Int)) Bool (=> (and (> x17 0) (> x1471 0)) (= (> x1471 (x579 115792089237316195423570985008687907853269984665640564039457584007913129639935 x17)) (> (x367 x17 x1471) 115792089237316195423570985008687907853269984665640564039457584007913129639935))))
(define-fun x298 ((x17 Int) (x1471 Int)) Bool (and (= (x1600 (x367 x17 x1471)) (x1600 (x367 (- x17 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1471))) (= (x1600 (x367 x17 (- x1471 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (x1600 (x367 x17 x1471))) (= (x1600 (x367 x17 x1471)) (x1600 (x367 (- x17 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1471 115792089237316195423570985008687907853269984665640564039457584007913129639936))))))
(define-fun x194 ((x17 Int) (x1471 Int)) Bool (and (=> (and (and (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1471) (<= x1471 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (and (> x17 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= x17 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (= (<= (x367 (- x17 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- x1471 115792089237316195423570985008687907853269984665640564039457584007913129639936)) 57896044618658097711785492504343953926634992332820282019728792003956564819967) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17) (x579 57896044618658097711785492504343953926634992332820282019728792003956564819967 (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1471))))) (=> (and (and (<= x17 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x17 57896044618658097711785492504343953926634992332820282019728792003956564819967)) (and (<= x1471 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x1471))) (= (>= (x579 57896044618658097711785492504343953926634992332820282019728792003956564819968 x1471) (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x17)) (<= (- 57896044618658097711785492504343953926634992332820282019728792003956564819968) (x367 (- x17 115792089237316195423570985008687907853269984665640564039457584007913129639936) x1471)))) (=> (and (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x17) (> x17 0)) (and (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1471) (> x1471 0))) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 (x367 x17 x1471)) (<= x17 (x579 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1471)))) (=> (and (and (<= x17 57896044618658097711785492504343953926634992332820282019728792003956564819967) (< 0 x17)) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1471) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x1471))) (= (>= (x367 x17 (- x1471 115792089237316195423570985008687907853269984665640564039457584007913129639936)) (- 57896044618658097711785492504343953926634992332820282019728792003956564819968)) (<= (- 115792089237316195423570985008687907853269984665640564039457584007913129639936 x1471) (x579 57896044618658097711785492504343953926634992332820282019728792003956564819968 x17))))))
(define-fun x485 ((x17 Int)) Bool (and (= (x367 x17 0) 0) (= 0 (x367 0 x17))))
(define-fun x1298 ((x17 Int)) Bool (and (= x17 (x367 x17 1)) (= (x367 1 x17) x17)))
(define-fun x633 ((x17 Int)) Bool (and (x1298 x17) (x485 x17)))
(define-fun x805 ((x17 Int)) Bool (= (x388 x17 26959946667150639794667015087019630673637144422540572481103610249216) (x632 x17 26959946667150639794667015087019630673637144422540572481103610249215)))
(define-fun x334 ((x17 Int)) Bool (and (x506 x17 26959946667150639794667015087019630673637144422540572481103610249215) (x805 x17)))
(define-fun x594 ((x17 Int)) Bool (= (+ (x632 x17 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x388 x17 32)) (x1600 x17)))
(define-fun x1091 ((x17 Int)) Bool (and (x594 x17) (x506 x17 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(define-fun x354 ((x1587 Int)) Int (ite (< x1587 x855) (x1406 x1587) 0))
(define-fun x175 ((x1587 Int)) Int (ite (> x92 x1587) (x383 x1587) 0))
(define-fun x471 ((x1587 Int)) Int (ite (> x1133 x1587) (x337 x1587) 0))
(define-fun x1010 ((x1587 Int)) Int (ite (< x1587 x407) (x1414 x1587) 0))
(define-fun x1196 ((x1587 x474)) Int (ite (= x1587 (x1221 x1256)) x1453 (x386 x1587)))
(define-fun x50 ((x1587 x474)) Int (ite (= (x1221 x153) x1587) x1761 (x1196 x1587)))
(define-fun x419 ((x1587 Int)) Int (ite (and (> (+ 128 0) x1587) (>= x1587 128)) (x1232 (+ (- x1587 128) 0)) (x111 x1587)))
(define-fun x1000 ((x1587 x474)) Int (x794 x1587))
(define-fun x645 ((x1587 x474)) Int (ite x481 (x1000 x1587) (x794 x1587)))
(define-fun x1087 ((x1587 x474)) Int (x794 x1587))
(define-fun x687 ((x1587 x474)) Int (x794 x1587))
(define-fun x1392 ((x1587 x474)) Int (x794 x1587))
(define-fun x1169 ((x1587 x474)) Int (ite x551 (x1392 x1587) (ite x1619 (x645 x1587) (x794 x1587))))
(define-fun x496 ((x1587 x474)) Int (ite x350 (x380 x1587) (x50 x1587)))
(define-fun x1639 ((x1587 x474)) Int (ite (= x1587 (x1221 x153)) x1712 (x496 x1587)))
(define-fun x54 ((x1587 x474)) Int (ite (= x1587 (x1221 x1256)) x1293 (x1639 x1587)))
(define-fun x80 ((x1587 x474)) Int (ite x752 (x496 x1587) (ite x209 (x386 x1587) (x54 x1587))))
(define-fun x915 ((x1587 x474)) Int (ite (= (x1221 x1256) x1587) x428 (x80 x1587)))
(define-fun x1394 ((x1587 x474)) Int (ite (= (x1221 x1256) x1587) x1274 (x915 x1587)))
(define-fun x1642 ((x1587 x474)) Int (x1394 x1587))
(define-fun x423 ((x1587 x474)) Int (ite (= (x1221 x1256) x1587) x1125 (x1642 x1587)))
(define-fun x150 ((x1587 x474)) Int (ite (= x1587 (x1221 x1256)) x1744 (x423 x1587)))
(define-fun x1647 ((x1587 x474)) Int (ite x83 (x794 x1587) (x1087 x1587)))
(define-fun x183 ((x1587 x474)) Int (ite (= (x1221 x1256) x1587) x343 (x80 x1587)))
(define-fun x991 ((x1587 x474)) Int (ite (= x1587 (x1221 x1256)) x1313 (x183 x1587)))
(define-fun x538 ((x1587 x474)) Int (x991 x1587))
(define-fun x73 ((x1587 x474)) Int (ite (= (x1221 x1256) x1587) x1635 (x538 x1587)))
(define-fun x165 ((x1587 x474)) Int (ite (= (x1221 x1256) x1587) x1759 (x73 x1587)))
(define-fun x271 ((x1587 x474)) Int (ite x306 (x794 x1587) (x687 x1587)))
(define-fun x967 ((x1587 x474)) Int (ite (= x1587 (x1221 x1256)) x1675 (x80 x1587)))
(define-fun x1328 ((x1587 x474)) Int (ite (= (x1221 x1256) x1587) x550 (x967 x1587)))
(define-fun x722 ((x1587 x474)) Int (x1328 x1587))
(define-fun x478 ((x1587 x474)) Int (ite (= x1587 (x1221 x1256)) x272 (x722 x1587)))
(define-fun x1243 ((x1587 x474)) Int (ite (= (x1221 x1256) x1587) x389 (x478 x1587)))
(define-fun x1700 ((x1587 x474)) Int (x794 x1587))
(define-fun x1117 ((x1587 x474)) Int (ite (= x1587 (x1221 x1256)) x109 (x80 x1587)))
(define-fun x586 ((x1587 x474)) Int (ite (= x1587 (x1221 x1256)) x1595 (x1117 x1587)))
(define-fun x158 ((x1587 x474)) Int (x586 x1587))
(define-fun x296 ((x1587 x474)) Int (ite (= (x1221 x1256) x1587) x557 (x158 x1587)))
(define-fun x729 ((x1587 x474)) Int (ite (= x1587 (x1221 x1256)) x1209 (x296 x1587)))
(define-fun x795 ((x1587 Int)) Int (ite (= x1587 128) 78829575338057407266098799593532030895783219923606930547737006156155256307712 (x1648 x1587)))
(define-fun x1147 ((x1587 Int)) Int (ite (= 132 x1587) x1062 (x795 x1587)))
(define-fun x1538 ((x1587 Int)) Int (ite (= 164 x1587) x543 (x1147 x1587)))
(define-fun x1682 ((x1587 Int)) Int (ite (= 196 x1587) 96 (x1538 x1587)))
(define-fun x1683 ((x1587 Int)) Int (ite (= 228 x1587) x1711 (x1682 x1587)))
(define-fun x130 ((x1587 Int)) Int (ite (= x1587 260) x800 (x1683 x1587)))
(define-fun x1400 ((x1587 Int)) Int (ite x1749 (x1683 x1587) (x130 x1587)))
(define-fun x1472 ((x1587 Int)) Int (ite (= x128 x1587) 0 (x1400 x1587)))
(define-fun x76 ((x1587 Int)) Int (ite x1702 (x1400 x1587) (x1472 x1587)))
(define-fun x1511 ((x1587 Int)) Int (ite (and (<= 132 x1587) (> (+ (x1278 (- x1335 132)) 132) x1587)) (x76 (+ (- x1587 132) 260)) (x471 x1587)))
(define-fun x44 ((x1587 Int)) Int (ite (and (<= 128 x1587) (< x1587 (+ x686 128))) (x1511 (+ 132 (- x1587 128))) (x499 x1587)))
(define-fun x1263 ((x1587 Int)) Int (ite (= x1005 x1587) 0 (x44 x1587)))
(define-fun x852 ((x1587 Int)) Int (ite (= 128 x1587) x1686 (x1263 x1587)))
(define-fun x1066 ((x1587 Int)) Int (ite (= 128 x1587) 656247078515407326148355443760548300161286948278503429861414951787075469312 (x1306 x1587)))
(define-fun x801 ((x1587 Int)) Int (ite (= 132 x1587) x543 (x1066 x1587)))
(define-fun x1206 ((x1587 Int)) Int (ite (= 164 x1587) x799 (x801 x1587)))
(define-fun x48 ((x1587 Int)) Int (ite (= 196 x1587) 96 (x1206 x1587)))
(define-fun x954 ((x1587 Int)) Int (ite (= x1587 228) x889 (x48 x1587)))
(define-fun x265 ((x1587 Int)) Int (ite (= 260 x1587) x968 (x954 x1587)))
(define-fun x235 ((x1587 Int)) Int (ite x1763 (x954 x1587) (x265 x1587)))
(define-fun x715 ((x1587 Int)) Int (ite (= x470 x1587) 0 (x235 x1587)))
(define-fun x234 ((x1587 Int)) Int (ite x773 (x235 x1587) (x715 x1587)))
(define-fun x1585 ((x1587 Int)) Int (ite (and (> (+ (x1278 (- x1044 132)) 132) x1587) (<= 132 x1587)) (x234 (+ 260 (- x1587 132))) (x1010 x1587)))
(define-fun x301 ((x1587 Int)) Int (ite (and (< x1587 (+ 128 x35)) (<= 128 x1587)) (x1585 (+ 132 (- x1587 128))) (x21 x1587)))
(define-fun x39 ((x1587 Int)) Int (ite (= x1587 x1228) 0 (x301 x1587)))
(define-fun x835 ((x1587 Int)) Int (ite (= 128 x1587) x1478 (x39 x1587)))
(define-fun x1408 ((x1587 Int)) Int (ite (= x1587 128) 33277650900348105781121326340019631498405652329376380866381358124409588547584 (x1282 x1587)))
(define-fun x1103 ((x1587 Int)) Int (ite (= 132 x1587) x1062 (x1408 x1587)))
(define-fun x305 ((x1587 Int)) Int (ite (= 164 x1587) x799 (x1103 x1587)))
(define-fun x985 ((x1587 Int)) Int (ite (= x1587 196) 96 (x305 x1587)))
(define-fun x1360 ((x1587 Int)) Int (ite (= x1587 228) x357 (x985 x1587)))
(define-fun x1002 ((x1587 Int)) Int (ite (= 260 x1587) x1614 (x1360 x1587)))
(define-fun x895 ((x1587 Int)) Int (ite x430 (x1360 x1587) (x1002 x1587)))
(define-fun x1309 ((x1587 Int)) Int (ite (= x1190 x1587) 0 (x895 x1587)))
(define-fun x138 ((x1587 Int)) Int (ite x1252 (x895 x1587) (x1309 x1587)))
(define-fun x1107 ((x1587 Int)) Int (ite (and (> (+ 132 (x1278 (- x621 132))) x1587) (>= x1587 132)) (x138 (+ (- x1587 132) 260)) (x175 x1587)))
(define-fun x699 ((x1587 Int)) Int (ite (and (> (+ x1104 128) x1587) (>= x1587 128)) (x1107 (+ 132 (- x1587 128))) (x539 x1587)))
(define-fun x1108 ((x1587 Int)) Int (ite (= x685 x1587) 0 (x699 x1587)))
(define-fun x583 ((x1587 Int)) Int (ite (= x1587 128) x648 (x1108 x1587)))
(define-fun x1345 ((x1587 Int)) Int (ite x752 (ite x350 (x419 x1587) (x111 x1587)) (ite x209 (x111 x1587) (ite x350 (x419 x1587) (x111 x1587)))))
(define-fun x1516 ((x1587 Int)) Int (ite (= x156 x1587) x1220 (x1345 x1587)))
(define-fun x349 ((x1587 Int)) Int (ite x465 (x1345 x1587) (x1516 x1587)))
(define-fun x630 ((x1587 Int)) Int (ite (= x1587 x798) 0 (x349 x1587)))
(define-fun x1550 ((x1587 Int)) Int (ite x1238 (x349 x1587) (x630 x1587)))
(define-fun x942 ((x1587 Int)) Int (ite (and (>= x1587 100) (< x1587 (+ 100 (x1278 (- x1116 100))))) (x1550 (+ (x501 (+ 100 x62)) (- x1587 100))) (x354 x1587)))
(define-fun x1175 ((x1587 Int)) Int (ite (and (<= 128 x1587) (< x1587 (+ 128 x1492))) (x942 (+ (- x1587 128) 100)) (x606 x1587)))
(define-fun x926 ((x1587 Int)) Int (ite (= x1587 x844) 0 (x1175 x1587)))
(define-fun x1597 ((x1587 Int)) Int (ite (= 128 x1587) x1461 (x926 x1587)))
(define-fun x647 ((x1587 Int)) Int (ite (= x1503 x1587) x148 (x1152 x1587)))
(define-fun x742 ((x1587 Int)) Int (ite (= x87 x1587) x830 (x504 x1587)))
(define-fun x1018 ((x1587 Int)) Int (ite (= x1587 x1503) x442 (x1173 x1587)))
(define-fun x941 ((x1587 Int)) Int (ite (= x1587 x1176) x859 (x215 x1587)))
(define-fun x287 ((x1587 Int)) Int (ite (= x1587 x1503) x187 (x1283 x1587)))
(define-fun x5 ((x1587 Int)) Int (ite (= x1365 x1587) x1519 (x1741 x1587)))
(define-fun x1753 ((x1587 Int)) Int (ite (= x1587 x906) x799 (x1475 x1587)))
(define-fun x1315 ((x1587 Int)) Int (ite (= x573 x1587) 64 (x1753 x1587)))
(define-fun x1426 ((x1587 Int)) Int (ite (= x143 x1587) x576 (x1315 x1587)))
(define-fun x1129 ((x1587 Int)) Int (ite (= x1503 x1587) x934 (x6 x1587)))
(define-fun x922 ((x1587 Int)) Int (ite (= x1587 x703) x1340 (x1426 x1587)))
(define-fun x1294 ((x1587 x474)) Int (ite (= (x1221 x1256) x1587) x1687 (x80 x1587)))
(define-fun x1656 ((x1587 x474)) Int (ite (= (x1221 x1054) x1587) x1349 (x1294 x1587)))
(define-fun x104 ((x1587 x474)) Int (ite x1361 (x1740 x1587) (x1656 x1587)))
(define-fun x503 ((x1587 x474)) Int (ite (= x1587 (x1221 x1054)) x824 (x104 x1587)))
(define-fun x1622 ((x1587 x474)) Int (ite (= (x1221 x1256) x1587) x1421 (x503 x1587)))
(define-fun x406 ((x1587 x474)) Int (ite x1353 (x104 x1587) (ite x425 (x80 x1587) (x1622 x1587))))
(define-fun x618 ((x1587 x474)) Int (ite x698 (x1642 x1587) (ite x818 (x80 x1587) (x150 x1587))))
(define-fun x929 ((x1587 x474)) Int (ite x698 (x1169 x1587) (ite x818 (x794 x1587) (x1169 x1587))))
(define-fun x1207 ((x1587 x474)) Int (ite x1659 (x538 x1587) (ite x1563 (x80 x1587) (x165 x1587))))
(define-fun x1144 ((x1587 x474)) Int (ite x1659 (x1647 x1587) (ite x1563 (x794 x1587) (x1647 x1587))))
(define-fun x1473 ((x1587 x474)) Int (ite x529 (x271 x1587) (ite x1498 (x794 x1587) (x271 x1587))))
(define-fun x1526 ((x1587 x474)) Int (ite x529 (x722 x1587) (ite x1498 (x80 x1587) (x1243 x1587))))
(define-fun x1219 ((x1587 x474)) Int (ite x555 (x1700 x1587) (ite x1745 (x794 x1587) (x1700 x1587))))
(define-fun x23 ((x1587 x474)) Int (ite x555 (x158 x1587) (ite x1745 (x80 x1587) (x729 x1587))))
(define-fun x1423 ((x1587 x474)) Int (ite x1126 (x23 x1587) (x80 x1587)))
(define-fun x232 ((x1587 x474)) Int (ite x1126 (x1219 x1587) (x794 x1587)))
(define-fun x1434 ((x1587 x474)) Int (ite x284 (x232 x1587) (x1473 x1587)))
(define-fun x1697 ((x1587 x474)) Int (ite x284 (x1423 x1587) (x1526 x1587)))
(define-fun x783 ((x1587 x474)) Int (ite x1581 (x1697 x1587) (x1207 x1587)))
(define-fun x1565 ((x1587 x474)) Int (ite x1581 (x1434 x1587) (x1144 x1587)))
(define-fun x1035 ((x1587 x474)) Int (ite x1099 (x783 x1587) (x618 x1587)))
(define-fun x1576 ((x1587 x474)) Int (ite x374 (ite x1099 (x1565 x1587) (x929 x1587)) (x794 x1587)))
(define-fun x662 ((x1587 x474)) Int (ite x1012 (x80 x1587) (ite x374 (x1035 x1587) (x406 x1587))))
(define-fun x917 ((x1587 x474)) Int (ite x1575 (x386 x1587) (ite x163 (x80 x1587) (x662 x1587))))
(define-fun x994 ((x1587 Int)) Int (ite (= 128 x1587) x581 (x1263 x1587)))
(define-fun x1608 ((x1587 Int)) Int (ite (= 128 x1587) x1083 (x39 x1587)))
(define-fun x717 ((x1587 Int)) Int (ite (= 128 x1587) x108 (x1108 x1587)))
(define-fun x1643 ((x1587 Int)) Int (ite (= 128 x1587) x708 (x926 x1587)))
(define-fun x8 ((x1587 Int)) Int (ite x1525 (x1263 x1587) (x994 x1587)))
(define-fun x1630 ((x1587 Int)) Int (ite x1725 (x39 x1587) (x1608 x1587)))
(define-fun x9 ((x1587 Int)) Int (ite x1323 (x1108 x1587) (x717 x1587)))
(define-fun x483 ((x1587 Int)) Int (ite x554 (x926 x1587) (x1643 x1587)))
(define-fun x1387 ((x1587 Int)) Int (ite x974 (x8 x1587) (x852 x1587)))
(define-fun x1329 ((x1587 Int)) Int (ite x1211 (x1630 x1587) (x835 x1587)))
(define-fun x815 ((x1587 Int)) Int (ite x247 (x9 x1587) (x583 x1587)))
(define-fun x307 ((x1587 Int)) Int (ite x249 (x483 x1587) (x1597 x1587)))
(define-fun x1049 ((x1587 Int)) Int (ite (= x1587 x1529) x486 (x1345 x1587)))
(define-fun x1205 ((x1587 Int)) Int (ite (= x1587 x227) x1297 (x1345 x1587)))
(define-fun x952 ((x1587 Int)) Int (ite (= x1587 x826) x1709 (x1345 x1587)))
(define-fun x238 ((x1587 Int)) Int (ite x1666 (x1345 x1587) (x1049 x1587)))
(define-fun x325 ((x1587 Int)) Int (ite (= x1355 x1587) 0 (x238 x1587)))
(define-fun x65 ((x1587 Int)) Int (ite x744 (x1345 x1587) (x1205 x1587)))
(define-fun x1139 ((x1587 Int)) Int (ite (= x1587 x1734) 0 (x65 x1587)))
(define-fun x1174 ((x1587 Int)) Int (ite x1128 (x1345 x1587) (x952 x1587)))
(define-fun x1051 ((x1587 Int)) Int (ite (= x236 x1587) 0 (x1174 x1587)))
(define-fun x838 ((x1587 Int)) Int (ite x113 (x238 x1587) (x325 x1587)))
(define-fun x532 ((x1587 Int)) Int (ite x779 (x65 x1587) (x1139 x1587)))
(define-fun x1017 ((x1587 Int)) Int (ite x1115 (x1174 x1587) (x1051 x1587)))
(define-fun x1075 ((x17 Int)) Bool (=> (and (not (= 2923951457 x17)) (not (= 56965738197333823925951794324075424010313516842063129668313081903848242544640 x17)) (not (= x17 1991898891)) (not (= x17 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not (= x17 1946460669)) (not (= 115792089237316195423570985008687907853269984665640564039457484007913129639935 x17)) (not (= 106459005500898838667931598610041423549574964228674563513410788872267948359680 x17)) (not (= 2826133662 x17)) (not (= x17 50455196340412629536459377552246818957342304218644716315923982585962625499136)) (not (= x17 24341557)) (not (= x17 1844058622)) (not (= 3189536363 x17)) (not (= x17 1871487246)) (not (= 33277650900348105781121326340019631498405652329376380866381358124409588547584 x17)) (not (= 100641684887429822015232653770480429695213136867978658013931169090238473568256 x17)) (not (= 3632429537 x17)) (not (= x17 200511672)) (not (= 302407648 x17)) (not (= 1039635593 x17)) (not (= x17 1680813743)) (not (= x17 3694151790)) (not (= x17 3923945232)) (not (= 78829575338057407266098799593532030895783219923606930547737006156155256307712 x17)) (not (= x17 3727475225)) (not (= 839595567 x17)) (not (= 26959946667150639794667015087019630673637144422540572481103610249215 x17)) (not (= 115792089237316195423570985008687907853269984665640564039457584007913129639904 x17)) (not (= x17 1686547025)) (not (= x17 3948783980)) (not (= x17 656247078515407326148355443760548300161286948278503429861414951787075469312)) (not (= 2005628311 x17)) (not (= x17 1030951317)) (not (= x17 4294967295)) (not (= 3646176329 x17)) (not (= 100000000000000000 x17)) (not (= 3733007566 x17)) (not (= x17 115792089237316195423570985008687907853269984665640564039457584007913129639680)) (not (= x17 1461501637330902918203684832716283019655932542976)) (not (= 18446744073709551615 x17)) (not (= x17 3018310333)) (not (= x17 2112976665)) (not (= 1461501637330902918203684832716283019655932542975 x17)) (not (= x17 2196353862)) (not (= 4294967296 x17)) (not (= x17 2829837978)) (not (= x17 1234336674)) (not (= x17 656196706)) (not (= x17 88571590996395278321425588994396360096048694792728512562370458433322657775616)) (< 10000 x17) (not (= 604800 x17)) (not (= x17 2867924802)) (not (= x17 3815738821))) (not ((_ is x672) (x1221 x17)))))
(assert (= x107 (or x1158 x83)))
(assert (= (x1221 (x692 x437)) x437))
(assert (x1504 x1273))
(assert (x1504 x857))
(assert (= x401 (and (not x1733) x1255)))
(assert (x1504 x1124))
(assert (x1281 x1338))
(assert (and (x329 x1644 128) (=> (< 0 128) (= (+ (* (x579 x1644 128) 128) (x388 x1644 128)) x1644)) (x624 x1644 128) (x276 x1644 128)))
(assert (and (x329 x1092 2) (=> (< 0 2) (= (+ (* (x579 x1092 2) 2) (x388 x1092 2)) x1092)) (x624 x1092 2) (x276 x1092 2)))
(assert (= (x1221 (x692 x1259)) x1259))
(assert (x1504 x1662))
(assert (= x100 (or x1238 x950)))
(assert (x1281 x719))
(assert (= (x692 (x1221 (x815 192))) (x815 192)))
(assert (= (or x864 x61) x610))
(assert (= (and (not x1342) x667) x1754))
(assert (= 0 (x1306 324)))
(assert (x1504 x1291))
(assert (x1091 x735))
(assert (x1504 x1247))
(assert (= (+ 1 (x692 x1727)) (x692 (x514 x1727 1))))
(assert (x1504 x621))
(assert (= x1318 (or x310 x727)))
(assert (x1504 x91))
(assert (= 0 (x220 96)))
(assert (= x725 (or x1258 x1138)))
(assert (= (or x1544 x779) x965))
(assert (= (or x1372 x392) x721))
(assert (= x869 x97))
(assert (=> (>= 10000 x1330) (= (x1221 x1330) (x672 x1330))))
(assert (= x1621 (or (and (not x1350) x664) x706)))
(assert (= (x692 (x672 2005628311)) 2005628311))
(assert (= (x692 (x514 x1536 x1651)) (+ x1651 (x692 x1536))))
(assert (=> (<= (x815 160) 10000) (= (x1221 (x815 160)) (x672 (x815 160)))))
(assert (= x789 (=> (and (= (x514 x1512 1) x944) (= x1204 (not (< (x692 x944) (x692 x393))))) (and x613 x1204))))
(assert (= x865 (=> (and (= (>= 224 x553) x1155) (= (x1278 (- x1228 128)) x553) (= x1228 (x501 (+ 128 x35)))) (and x1155 (=> (and (= x26 (ite (< 0 x110) x1397 (x632 127 x1397))) (= (x632 1 x146) x110) (= x883 (ite (>= 32 x553) (x1429 (x1221 (x39 128)) 0) (ite (>= 64 x553) (x902 (x1221 (x39 128)) (x1221 (x39 160)) 0) (ite (>= 96 x553) (x730 (x1221 (x39 128)) (x1221 (x39 160)) (x1221 (x39 192)) 0) (ite (<= x553 128) (x1629 (x1221 (x39 128)) (x1221 (x39 160)) (x1221 (x39 192)) (x1221 (x39 224)) 0) (ite (<= x553 160) (x1084 (x1221 (x39 128)) (x1221 (x39 160)) (x1221 (x39 192)) (x1221 (x39 224)) (x1221 (x39 256)) 0) (ite (<= x553 192) (x1402 (x1221 (x39 128)) (x1221 (x39 160)) (x1221 (x39 192)) (x1221 (x39 224)) (x1221 (x39 256)) (x1221 (x39 288)) 0) (ite (<= x553 224) (x476 (x1221 (x39 128)) (x1221 (x39 160)) (x1221 (x39 192)) (x1221 (x39 224)) (x1221 (x39 256)) (x1221 (x39 288)) (x1221 (x39 320)) 0) (x1221 x1713))))))))) (= (x579 x146 2) x1397) (= x252 (= (ite x33 1 0) x110)) (= x33 (> 32 x26))) (and (=> x252 x1531) (=> (and (not x252) (and (= (x632 1 x146) x908) (= (= 0 x908) x695))) (and (=> (and (and (= (x501 (+ 128 x26)) x1249) (= (x632 115792089237316195423570985008687907853269984665640564039457584007913129639680 x146) x1478) (= x1191 x1249)) x695) x258) (=> (and (and (= x1625 (< 0 x26)) (= (x1429 (x672 5) 0) x694)) (not x695)) (and (=> (not x1625) x556) (=> x1625 x756)))))))))))
(assert (x1504 x1409))
(assert (=> (<= (x39 224) 10000) (= (x672 (x39 224)) (x1221 (x39 224)))))
(assert (= (x1221 1234336674) (x672 1234336674)))
(assert (= x403 (or (and (not x117) x741) x790)))
(assert (= (x692 (x1221 (x1263 288))) (x1263 288)))
(assert (= x1603 (=> (and (= x1464 x650) (= x314 x1731)) x277)))
(assert (x1075 (x1108 320)))
(assert (x1504 x1704))
(assert (= (x1221 (x692 x1077)) x1077))
(assert (= (and (not x1508) x960) x251))
(assert (= x740 (or x182 x1241)))
(assert (x1504 x256))
(assert (x1504 x1746))
(assert (= (and x1269 (not x1068)) x310))
(assert (x464 x348))
(assert (x464 x256))
(assert (x1504 x120))
(assert (x1504 x414))
(assert (x1504 x1116))
(assert (x1504 x541))
(assert (x1504 x394))
(assert (= x1236 (and x536 x434)))
(assert (x1281 256))
(assert (x1504 x760))
(assert (= (and x191 x1681) x379))
(assert (x1075 (x39 256)))
(assert (= (or x1439 x1763) x180))
(assert (x1281 x845))
(assert (x1504 x1054))
(assert (x1504 x1476))
(assert (= 0 (x539 192)))
(assert (x1075 (x815 288)))
(assert (x1504 x657))
(assert (= (x692 (x1221 (x1329 288))) (x1329 288)))
(assert (= x613 (=> (and (= (ite (> x626 0) x1301 (x632 127 x1301)) x502) (<= 0 x1067) (= (< x502 32) x1391) (= x1301 (x579 x447 2)) (= x599 (= (ite x1391 1 0) x626)) (= x626 (x632 1 x447)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x1067)) (and (=> (and x599 (and (= 0 x682) (= x13 x848))) x68) (=> (and (not x599) (and (= (x632 1 x447) x1412) (= x285 (= x1412 0)))) (and (=> x285 x593) (=> (and (= (> x502 0) x572) (not x285)) (and (=> (not x572) x1494) (=> x572 x564)))))))))
(assert (x464 x1092))
(assert (x1504 x70))
(assert (x1504 x187))
(assert (= x179 (=> (and (= (= 0 x933) x424) (or (not x424) x424)) x446)))
(assert (x1504 x650))
(assert (=> (>= 10000 (x1263 288)) (= (x1221 (x1263 288)) (x672 (x1263 288)))))
(assert (= x562 (=> (and (= x1114 x87) (= (x742 x1114) x486) (= (not (< 32 x1684)) x141) (= x1529 x1483)) (and x141 (=> (= x290 32) x293)))))
(assert (x1075 (x1263 320)))
(assert (and (x422 x170 26959946667150639794667015087019630673637144422540572481103610249216) (= (* 26959946667150639794667015087019630673637144422540572481103610249216 x170) (x367 x170 26959946667150639794667015087019630673637144422540572481103610249216)) (x298 x170 26959946667150639794667015087019630673637144422540572481103610249216) (x1669 x170 26959946667150639794667015087019630673637144422540572481103610249216) (x1623 x170 26959946667150639794667015087019630673637144422540572481103610249216) (and (= (* (- 115792089210356248756420345214020892766250353992003419616917011526809519390720) x170) (x367 x170 (- 115792089210356248756420345214020892766250353992003419616917011526809519390720))) (= (- (* 26959946667150639794667015087019630673637144422540572481103610249216 x170) 3121748550315992231381597229793166305748598142664971150859156959625371738819765620120306103063491971159826931121406622895447975679288285306290176) (x367 (- x170 115792089237316195423570985008687907853269984665640564039457584007913129639936) 26959946667150639794667015087019630673637144422540572481103610249216)) (= (x367 (- x170 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089210356248756420345214020892766250353992003419616917011526809519390720)) (- (* (- 115792089210356248756420345214020892766250353992003419616917011526809519390720) x170) (- 13407807926820848549258032766824248897686199514843795235058590292862607070448175237982108678046597324626539887026659119732347259916498594267145363699793920)))) (x194 x170 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x1504 x872))
(assert (x1504 x821))
(assert (= 1946460669 (x692 (x672 1946460669))))
(assert (and (x329 x701 32) (=> (< 0 32) (= (+ (* (x579 x701 32) 32) (x388 x701 32)) x701)) (x624 x701 32) (x276 x701 32)))
(assert (x1504 x535))
(assert (= (x692 (x514 x270 3)) (+ 3 (x692 x270))))
(assert (x770 x809))
(assert (x1504 x1266))
(assert (= (and x107 (not x534)) x1659))
(assert (= x176 (=> (and (or (not x1229) (and x1229 (= x1734 (x501 (+ x1677 x123))))) (= x1229 (> x875 x123))) x1377)))
(assert (= (and x1334 x1185) x1481))
(assert (=> (>= 10000 x1694) (= (x1221 x1694) (x672 x1694))))
(assert (=> (<= (x1108 192) 10000) (= (x672 (x1108 192)) (x1221 (x1108 192)))))
(assert (= (=> (and (= x1154 (>= 224 x607)) (= x607 (x1278 (- x522 128)))) (and x1154 (=> (and (= (= x1248 x1627) x1218) (= (not x1218) x240) (= (ite (>= 32 x607) (x1429 (x1221 (x1387 128)) 0) (ite (<= x607 64) (x902 (x1221 (x1387 128)) (x1221 (x1387 160)) 0) (ite (>= 96 x607) (x730 (x1221 (x1387 128)) (x1221 (x1387 160)) (x1221 (x1387 192)) 0) (ite (<= x607 128) (x1629 (x1221 (x1387 128)) (x1221 (x1387 160)) (x1221 (x1387 192)) (x1221 (x1387 224)) 0) (ite (>= 160 x607) (x1084 (x1221 (x1387 128)) (x1221 (x1387 160)) (x1221 (x1387 192)) (x1221 (x1387 224)) (x1221 (x1387 256)) 0) (ite (>= 192 x607) (x1402 (x1221 (x1387 128)) (x1221 (x1387 160)) (x1221 (x1387 192)) (x1221 (x1387 224)) (x1221 (x1387 256)) (x1221 (x1387 288)) 0) (ite (>= 224 x607) (x476 (x1221 (x1387 128)) (x1221 (x1387 160)) (x1221 (x1387 192)) (x1221 (x1387 224)) (x1221 (x1387 256)) (x1221 (x1387 288)) (x1221 (x1387 320)) 0) (x1221 x1330)))))))) x1627)) x167))) x1571))
(assert (x1091 x1160))
(assert (= x1702 (and (not x205) x1448)))
(assert (x1504 x466))
(assert (x1504 x322))
(assert (x1281 x250))
(assert (x1504 x75))
(assert (x1504 x1528))
(assert (= (x1221 (x692 x1512)) x1512))
(assert (= x1671 (or x750 x300)))
(assert (x1504 x685))
(assert (= (=> (and (= x1151 x459) (= x1250 x1598) (= x1130 x1050)) x46) x1631))
(assert (= (and x177 (not x680)) x1252))
(assert (= (x692 (x672 1461501637330902918203684832716283019655932542976)) 1461501637330902918203684832716283019655932542976))
(assert (= x1122 (or x1150 x974)))
(assert (x1504 x1445))
(assert (= x68 (=> (and (= (x388 x348 x848) x495) (= x682 x612) (= x1172 x13)) x847)))
(assert (= (=> (and (= (x37 x694) x1083) (= (not (< 32 x26)) x1280)) (and x1280 x556)) x756))
(assert (= (or x1148 x1122) x936))
(assert (= x1575 (and x842 (not x452))))
(assert (x1504 x812))
(assert (= (x1446 96) 0))
(assert (x1504 x1195))
(assert (= (=> (and (= x1664 (x514 x659 1)) (= x1479 (not (< 164 x1380)))) (and (=> (= x1664 x184) x1495) x1479)) x1573))
(assert (= x1710 (and x285 x1764)))
(assert (= 0 (x1648 356)))
(assert (=> (<= x1660 10000) (= (x672 x1660) (x1221 x1660))))
(assert (and (x329 x462 128) (=> (< 0 128) (= (+ (* (x579 x462 128) 128) (x388 x462 128)) x462)) (x624 x462 128) (x276 x462 128)))
(assert (= (=> (and (= x1068 (= 0 x358)) (or (and x1068 (= x1503 128)) (and (not x1068) (and (= (x501 (+ x1239 128)) x318) (= x1160 (x501 (+ 63 x358))) (= x1239 (x632 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1160)) (= x1503 x318))))) x1540) x890))
(assert (= x402 (and x1621 x642)))
(assert (x1504 x137))
(assert (x1504 x204))
(assert (x1504 x201))
(assert (= (or x1012 x631) x1376))
(assert (= (=> (and (= (>= 224 x860) x1370) (= x860 (x1278 (- x844 128))) (= (x501 (+ x1492 128)) x844)) (and x1370 (=> (and (= (x632 1 x146) x131) (= (x579 x146 2) x462) (= x1304 (= x131 (ite x159 1 0))) (= x245 (ite (<= x860 32) (x1429 (x1221 (x926 128)) 0) (ite (<= x860 64) (x902 (x1221 (x926 128)) (x1221 (x926 160)) 0) (ite (>= 96 x860) (x730 (x1221 (x926 128)) (x1221 (x926 160)) (x1221 (x926 192)) 0) (ite (<= x860 128) (x1629 (x1221 (x926 128)) (x1221 (x926 160)) (x1221 (x926 192)) (x1221 (x926 224)) 0) (ite (>= 160 x860) (x1084 (x1221 (x926 128)) (x1221 (x926 160)) (x1221 (x926 192)) (x1221 (x926 224)) (x1221 (x926 256)) 0) (ite (<= x860 192) (x1402 (x1221 (x926 128)) (x1221 (x926 160)) (x1221 (x926 192)) (x1221 (x926 224)) (x1221 (x926 256)) (x1221 (x926 288)) 0) (ite (<= x860 224) (x476 (x1221 (x926 128)) (x1221 (x926 160)) (x1221 (x926 192)) (x1221 (x926 224)) (x1221 (x926 256)) (x1221 (x926 288)) (x1221 (x926 320)) 0) (x1221 x1572))))))))) (= x1325 (ite (> x131 0) x462 (x632 127 x462))) (= (< x1325 32) x159)) (and (=> (and (and (= (x632 1 x146) x705) (= x1750 (= 0 x705))) (not x1304)) (and (=> (and (and (= x512 (x1429 (x672 5) 0)) (= x900 (> x1325 0))) (not x1750)) (and (=> (not x900) x1695) (=> x900 x25))) (=> (and (and (= x311 (x501 (+ 128 x1325))) (= x311 x1199) (= x1461 (x632 115792089237316195423570985008687907853269984665640564039457584007913129639680 x146))) x1750) x775))) (=> x1304 x604))))) x1268))
(assert (x1504 x1313))
(assert (x1504 x705))
(assert (x1504 x369))
(assert (= x1150 (and x1171 x226)))
(assert (= x971 (and (not x598) x740)))
(assert (x973 x1397))
(assert (x1504 x757))
(assert (= x1142 (and x408 x1438)))
(assert (x1504 x1042))
(assert (= x1764 (and x199 (not x599))))
(assert (x1504 x1454))
(assert (= (and x77 x237) x1138))
(assert (x1504 x1584))
(assert (x770 x447))
(assert (x1504 x486))
(assert (= x1319 (and x377 x289)))
(assert (x1504 x469))
(assert (x1504 x1189))
(assert (x1504 x1552))
(assert (= (or x551 x1619 x313) x767))
(assert (x1504 x1505))
(assert (x1504 x55))
(assert (x1504 x1483))
(assert (x1504 x635))
(assert (x1504 x210))
(assert (= 0 (x1282 388)))
(assert (x1504 x1492))
(assert (and (x329 x250 128) (=> (< 0 128) (= (+ (* (x579 x250 128) 128) (x388 x250 128)) x250)) (x624 x250 128) (x276 x250 128)))
(assert (x1504 x656))
(assert (x1075 (x1329 256)))
(assert (x1504 x860))
(assert (x1075 x461))
(assert (= x1343 (and x528 x492)))
(assert (= x1 (or x1212 x379)))
(assert (x1504 x1637))
(assert (= (and x598 x740) x74))
(assert (= (and x1403 x1420) x919))
(assert (= x1540 (=> (and (and (= x1465 (x969 x999)) (= (x1429 (x672 1) 0) x772) (>= 1461501637330902918203684832716283019655932542975 x1465) (= (= x1660 x1465) x1556) (= x999 x772) (> 1461501637330902918203684832716283019655932542976 x1465) (>= x1465 0) (< 0 x848)) (or (and (= x998 x1556) (not x1556)) (and x1556 (and (<= x170 4294967295) (= x998 (= 88571590996395278321425588994396360096048694792728512562370458433322657775616 x823)) (= (x924 x170 224) x823) (<= 0 x170) (< x170 4294967296))))) x1696)))
(assert (= (or x1211 x1535) x438))
(assert (= x1271 (=> (and (or (not x1295) x1295) (= x1295 (= 0 x1161))) x64)))
(assert (and (x213 x782 2) (x22 x782 2) (x1182 x782 2) (= (- x782 (x632 1 x782)) (* 2 (x579 x782 2))) (=> (and (> x782 0) (> 2 0)) (and (<= (* 2 (x579 x782 2)) x782) (> (* (x579 x782 2) 2) (- x782 2)))) (x332 x782 2)))
(assert (x770 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= 0 (x21 128)))
(assert (= (x1425 96) 0))
(assert (and (x329 x1301 128) (=> (< 0 128) (= (+ (* (x579 x1301 128) 128) (x388 x1301 128)) x1301)) (x624 x1301 128) (x276 x1301 128)))
(assert (x1504 x1456))
(assert (x1504 x1198))
(assert (x1504 x1062))
(assert (= (or x1486 x1367) x172))
(assert (= x1046 (and x601 x1227)))
(assert (x1504 x24))
(assert (= (or x777 x1046) x741))
(assert (= 302407648 (x692 (x672 302407648))))
(assert (= x1495 (=> (and (= x513 x184) (= x137 x1497)) x807)))
(assert (= x413 (and x326 x983)))
(assert (= (and x199 x599) x704))
(assert (= x1238 (and x1638 (not x1766))))
(assert (x1504 x85))
(assert (= x881 (and x1736 (not x1336))))
(assert (x1504 x934))
(assert (= (=> (= x644 (not (> x749 32))) (and x644 x724)) x1578))
(assert (x1504 x1257))
(assert (= x1719 (or x1548 x1128)))
(assert (x1504 x547))
(assert (x1504 x874))
(assert (= (and x913 x957) x882))
(assert (= (x692 (x514 x1512 1)) (+ 1 (x692 x1512))))
(assert (x1075 (x1263 128)))
(assert (x1504 x804))
(assert (x1504 x1537))
(assert (= (=> (and (= x341 (x501 (+ x1063 260))) (= (x632 115792089237316195423570985008687907853269984665640564039457584007913129639904 x735) x1063) (= (x281 (x1221 x1256)) x1042) (= (= x1042 0) x7) (= x735 (x501 (+ x357 31))) (= (x1278 (- x341 128)) x621) (= 128 x600)) (and (=> (and (and (<= 132 x188) (not (= x20 1039635593)) (not (> 4 x188)) (= (x281 (x1221 x1256)) x1582) (< x20 2196353862) (= x799 x1291) (= 1234336674 x20) (= x188 x621) (not (< x20 1030951317)) (= (x1278 (- x188 4)) x547) (= (= x357 (x175 100)) x66) (= x255 (or (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x547) (and (> 96 x547) (= (<= x547 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) x66 (not (> 839595567 x20)) (> x1582 0) (not (= x20 1030951317)) (= x558 33277650900348105781121326340019631498405652329376380866381358124409588547584) (> 1680813743 x20) (= x516 x1062)) (not x7)) (and (=> (and (and (= x682 0) (= x13 x848)) x255) x68) (=> (and (not x255) (and (= x1082 x516) (= x840 (= x516 x1062)))) (and (=> (and (and (= x1291 x1067) (= (and (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x188) true) (< 131 x188)) x63)) x840) (and (=> (and (and (= x682 0) (= x13 x848)) (not x63)) x68) (=> (and x63 (and (= (x1107 100) x1104) (= x340 (> x1104 18446744073709551615)))) (and (=> (and (not x340) (and (= (x501 (+ x1104 132)) x70) (= (> x70 x188) x243) (= 132 x1346))) (and (=> (and (= true x611) (not x243)) (and (=> (and (and (= (x1102 x759) x267) (= (< 0 x267) x384) (<= x267 255) (= (x902 (x1221 x516) (x672 2) 0) x759) (<= 0 x267) (> 256 x267)) x611) (and (=> (and x384 (= (< x848 1) x978)) (and (=> (and (not x978) (and (= (< 0 x316) x498) (= x316 (x1278 (- x848 1))))) (and (=> (and (= x1358 (< 0 x848)) x498) (and (=> (and (not x1358) (and (= x848 x13) (= 0 x682))) x68) (=> (and x1358 (and (= x1008 (x1429 (x672 1) 0)) (>= x95 0) (>= 1461501637330902918203684832716283019655932542975 x95) (= x95 (x969 x1031)) (= (= x95 x516) x468) (= x1008 x1031) (> 1461501637330902918203684832716283019655932542976 x95))) (and (=> (and x468 (= (> 1 x848) x1703)) (and (=> (and x1703 (and (= x13 x848) (= 0 x682))) x68) (=> (and (not x1703) (and (= (x1278 (- x848 1)) x816) (= x1523 (< x816 x848)))) (and (=> (and x1523 (and (= (x969 x1541) x768) (>= x768 0) (<= x768 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x768) (= (x514 x186 x816) x1541) (= x677 (> x848 0)) (= (x1429 (x672 1) 0) x186))) (and (=> (and (and (= 0 x682) (= x848 x13)) (not x677)) x68) (=> x677 x312))) (=> (and (not x1523) (and (= x848 x13) (= x682 0))) x68))))) (=> (not x468) x663))))) (=> (not x498) x312))) (=> x978 x1286))) (=> (and (not x384) (and (= 0 x682) (= x13 x848))) x68))) (=> (and (not x611) (and (= x13 x848) (= x682 0))) x68))) (=> (and (and (= x13 x848) (= 0 x682)) x243) x68))) (=> (and (and (= 0 x682) (= x13 x848)) x340) x68))))) (=> (and (and (= 0 x682) (= x13 x848)) (not x840)) x68))))) (=> (and (and (= x774 x142) (= x603 0) (= (x388 x348 x848) x1123) (= x1287 x848)) x7) x280))) x1545))
(assert (= (x692 (x672 24341557)) 24341557))
(assert (= x1367 (and x1435 (not x424))))
(assert (x1504 x625))
(assert (x1281 x1397))
(assert (x1504 x774))
(assert (x1091 x1040))
(assert (x1075 (x39 224)))
(assert (x1504 x1686))
(assert (= (and x936 x240) x1015))
(assert (x1504 x808))
(assert (x1504 x682))
(assert (x1504 x747))
(assert (and (x329 x701 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (* (x579 x701 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x388 x701 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x701)) (x624 x701 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x276 x701 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (or x429 x817) x1636))
(assert (= (x1282 260) 0))
(assert (x1504 x110))
(assert (x1504 x98))
(assert (= (or x1099 x1098) x374))
(assert (x1504 x953))
(assert (= x1037 (and (not x384) x72)))
(assert (= (and x664 x1350) x706))
(assert (= x299 x593))
(assert (= (x1221 (x692 x1180)) x1180))
(assert (= 1461501637330902918203684832716283019655932542975 (x692 (x672 1461501637330902918203684832716283019655932542975))))
(assert (= (x672 604800) (x1221 604800)))
(assert (= x1025 (and x18 x653)))
(assert (= 0 (x499 288)))
(assert (= (and x1556 x1318) x523))
(assert (= (x672 839595567) (x1221 839595567)))
(assert (= (and (not x347) x180) x773))
(assert (x1504 x637))
(assert (x1504 x948))
(assert (= x1612 x778))
(assert (and (x329 x146 2) (=> (< 0 2) (= (+ (* (x579 x146 2) 2) (x388 x146 2)) x146)) (x624 x146 2) (x276 x146 2)))
(assert (x1504 x1039))
(assert (x1504 x1652))
(assert (= (or x355 x1071 x1467) x38))
(assert (x1075 (x1387 192)))
(assert (x1504 x1079))
(assert (and (x213 x1189 32) (x22 x1189 32) (x1182 x1189 32) (= (- x1189 (x632 31 x1189)) (* 32 (x579 x1189 32))) (=> (and (> x1189 0) (> 32 0)) (and (<= (* 32 (x579 x1189 32)) x1189) (> (* (x579 x1189 32) 32) (- x1189 32)))) (x332 x1189 32)))
(assert (x1504 x324))
(assert (= (and x246 x457) x1654))
(assert (=> (<= (x1263 256) 10000) (= (x1221 (x1263 256)) (x672 (x1263 256)))))
(assert (= x16 (and x1030 (not x1310))))
(assert (= (and x707 x1719) x454))
(assert (x1504 x1074))
(assert (= (and x1698 x320) x1723))
(assert (= (and x42 (not x1523)) x856))
(assert (x464 2))
(assert (= x1743 x509))
(assert (= x509 x886))
(assert (x1504 x236))
(assert (x1504 x132))
(assert (= x561 (and x491 x861)))
(assert (x1075 (x1263 288)))
(assert (= x1312 (and (not x1076) x181)))
(assert (= x1738 (and x1601 (not x468))))
(assert (=> (>= 10000 x931) (= (x1221 x931) (x672 x931))))
(assert (= x556 (=> (and (= x1191 x1373) (= (x501 (+ 128 x26)) x1373)) x258)))
(assert (= (x606 320) 0))
(assert (x1281 x782))
(assert (x973 x845))
(assert (= (=> (and (or x1457 (not x1457)) (= x1457 (= x612 0))) x700) x847))
(assert (x1504 x977))
(assert (= x1649 (and x767 x1609)))
(assert (= 0 (x1446 128)))
(assert (x1504 x848))
(assert (x1075 (x1108 288)))
(assert (not x841))
(assert (= x619 (or x681 x523)))
(assert (x1504 x1694))
(assert (x1504 x1325))
(assert (= x628 (or x567 x549)))
(assert (= 0 (x499 160)))
(assert (= (x1282 356) 0))
(assert (= x616 (and (not x226) x1171)))
(assert (x1504 x755))
(assert (x1504 x1096))
(assert (x907 x348 x848))
(assert (x1281 x1092))
(assert (= (and (not x248) x382) x1372))
(assert (= x127 (and x243 x1014)))
(assert (= (and x370 x520) x1041))
(assert (= (x1221 3189536363) (x672 3189536363)))
(assert (and (x329 x469 26959946667150639794667015087019630673637144422540572481103610249216) (=> (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (= (+ (* (x579 x469 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) (x388 x469 26959946667150639794667015087019630673637144422540572481103610249216)) x469)) (x624 x469 26959946667150639794667015087019630673637144422540572481103610249216) (x276 x469 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= (and x1416 (not x1539)) x653))
(assert (= (or x1265 x1567) x88))
(assert (x1504 x758))
(assert (=> (>= 10000 (x1329 160)) (= (x672 (x1329 160)) (x1221 (x1329 160)))))
(assert (x1075 (x926 192)))
(assert (= (and x960 x1508) x198))
(assert (= 0 (x1393 96)))
(assert (x1504 x1013))
(assert (x1504 x156))
(assert (x1504 x264))
(assert (x1504 x980))
(assert (x1701 x56))
(assert (= x1045 (and x1009 x1737)))
(assert (=> (<= x153 10000) (= (x672 x153) (x1221 x153))))
(assert (= (and x961 (not x1703)) x42))
(assert (= x440 (and (not x488) x1105)))
(assert (= (x692 (x672 4294967295)) 4294967295))
(assert (= x1615 (=> (= (not (< 32 x1022)) x279) (and x279 x1743))))
(assert (= (=> (and (= x1704 (x388 x348 x848)) (= x848 x515) (= x808 0)) x1405) x1531))
(assert (= (and (=> (and (and (= (x579 x848 2) x760) (= (x501 (+ x760 1)) x395) (= (> x395 x1383) x18)) (not x1539)) (and (=> (and (and (<= x731 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x731 0) (= (not (= x112 x731)) x570)) (not x18)) (and (=> (and (= x19 x570) x570) x649) (=> (not x570) x1268))) (=> x18 x604))) (=> x1539 x604)) x1722))
(assert (x1504 x218))
(assert (= x752 (and (not x983) x326)))
(assert (= (+ (x692 x1699) 1) (x692 (x514 x1699 1))))
(assert (x1075 (x1387 128)))
(assert (= (+ x1432 (x692 x190)) (x692 (x514 x190 x1432))))
(assert (and (x329 x1386 128) (=> (< 0 128) (= (+ (* (x579 x1386 128) 128) (x388 x1386 128)) x1386)) (x624 x1386 128) (x276 x1386 128)))
(assert (= x663 (=> (= (< x848 1) x810) (and x1286 x810))))
(assert (= (x692 (x1221 (x1329 160))) (x1329 160)))
(assert (= (=> (= (< (x692 x168) (x692 x1077)) x913) (and (=> (not x913) x962) (=> x913 x530))) x1413))
(assert (= x944 (x1221 (x692 x944))))
(assert (x1504 x56))
(assert (x1504 x1067))
(assert (x1504 x1485))
(assert (x1504 x1713))
(assert (= (x926 256) (x692 (x1221 (x926 256)))))
(assert (x770 x462))
(assert (= 0 (x1741 x1048)))
(assert (= (x1263 160) (x692 (x1221 (x1263 160)))))
(assert (= x339 (and x1388 x677)))
(assert (x464 x1588))
(assert (= (or x403 x481) x544))
(assert (x1075 x1330))
(assert (= (or x1351 x122) x199))
(assert (= (x692 (x672 656247078515407326148355443760548300161286948278503429861414951787075469312)) 656247078515407326148355443760548300161286948278503429861414951787075469312))
(assert (and (x329 x1464 2) (=> (< 0 2) (= (+ (* (x579 x1464 2) 2) (x388 x1464 2)) x1464)) (x624 x1464 2) (x276 x1464 2)))
(assert (x1075 (x307 128)))
(assert (= (=> (and (or (and (and (= x933 x1193) (= x195 x487)) (not x408)) (and x408 (and (= (ite (= x487 0) x833 0) x1216) (= x824 (- x1275 x1216)) (= x933 x1193) (= (x501 (+ x1085 x1216)) x1421) (= x195 x487) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1216 x1085)) (= (x503 (x1221 x1256)) x1085) (= (x104 (x1221 x1054)) x1275)))) (= (= 0 x487) x408)) x179) x780))
(assert (= (=> (and (= x1056 x120) (= x1626 x1524) (= x1401 x1554)) x160) x1650))
(assert (x136 x738 x834))
(assert (x1281 x1386))
(assert (= (=> (and (= x563 (x80 (x1221 x1256))) (= (x80 (x1221 x1054)) x1074) (= x658 (and (< (+ x1074 x833) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (>= x563 x833)))) (and (=> (and (and (= x195 0) (= x933 0)) (not x658)) x179) (=> (and (and (or (not x1653) (and (and x899 (> 4294967296 x1193) (= (x1656 (x1221 x1256)) x1730) (= (<= x1730 (x1740 (x1221 x1256))) x899) (= (= (x1740 (x1221 x1054)) x1121) x1577) (= (x1656 (x1221 x1054)) x1121) x1577) x1653)) (and (= (x1294 (x1221 x1054)) x1454) (= (x80 (x1221 x1256)) x1726) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1454 x833)) (= (x501 (+ x1454 x833)) x1349) (= x1653 (< 0 x487)) (= (- x1726 x833) x1687))) x658) x780))) x869))
(assert (x1504 x1645))
(assert (= (=> (and (= x1680 (and (>= x629 x833) (< (+ x833 x90) 115792089237316195423570985008687907853269984665640564039457584007913129639936))) (= x629 (x80 (x1221 x1256))) (= x1116 x1164) (= (x80 (x1221 x1256)) x90)) (and (=> (and (and (<= 100 x1251) (< (+ x210 x833) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x1251 x1116) (= x1383 x799) (= (- x977 x833) x109) (= x977 (x80 (x1221 x1256))) (= x210 (x1117 (x1221 x1256))) (= (= x833 0) x533) x1546 (= x493 50455196340412629536459377552246818957342304218644716315923982585962625499136) (> x202 0) (= (= (x354 68) 0) x1546) (= (x281 (x1221 x1256)) x202) (= x1595 (x501 (+ x210 x833)))) x1680) (and (=> (not x533) x604) (=> (and x533 (and (= x1655 (or (and (< x673 64) (= (>= 57896044618658097711785492504343953926634992332820282019728792003956564819967 x673) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x673))) (> 2196353862 x231) (> 1946460669 x231) (not (= x231 1680813743)) (not (> 4 x1251)) (not (= 1844058622 x231)) (= x673 (x1278 (- x1251 4))) (not (= 1686547025 x231)) (not (< x231 839595567)) (not (> 1680813743 x231)) (= x231 1871487246))) (and (=> x1655 x604) (=> (and (not x1655) (and (= (and (> x1251 99) (= (<= x1251 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) x1420) (= x112 x1383))) (and (=> (not x1420) x604) (=> (and x1420 (and (= (x942 68) x1492) (= (< 18446744073709551615 x1492) x627))) (and (=> x627 x604) (=> (and (not x627) (and (= x1758 100) (= (x501 (+ x1492 100)) x1179) (= (> x1179 x1251) x1606))) (and (=> (and (= true x1442) (not x1606)) (and (=> (not x1442) x604) (=> (and (and (or (and (and (= x1539 (ite x791 x791 (= x848 0))) (= (= x112 0) x791)) (not x1718)) (and x1718 (= x1718 x1539))) (= x1718 (< x848 x1383))) x1442) x1722))) (=> x1606 x604))))))))))) (=> (and (not x1680) (and (= x145 x848) (= 0 x1161) (= x132 0) (= x86 x935))) x1271))) x1735))
(assert (= x228 (and (not x1551) x1246)))
(assert (x1504 x935))
(assert (x1504 x411))
(assert (and (x329 x719 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (* (x579 x719 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x388 x719 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x719)) (x624 x719 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x276 x719 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (=> (<= (x815 224) 10000) (= (x1221 (x815 224)) (x672 (x815 224)))))
(assert (= (and x853 x252) x135))
(assert (x1504 x859))
(assert (x1075 (x307 160)))
(assert (x1504 x442))
(assert (x1504 x636))
(assert (x1504 x1296))
(assert (= x1510 (and x566 x198)))
(assert (x1504 x1172))
(assert (x1504 x202))
(assert (x1281 x574))
(assert (x1281 x146))
(assert (x1504 x1335))
(assert (= x1290 (and x1029 (not x651))))
(assert (= x125 (and x166 (not x257))))
(assert (x1504 x686))
(assert (= (=> (and (< 0 x1552) (= (not (< 1 x1616)) x241)) (and x241 x309)) x208))
(assert (x1504 x128))
(assert (x1075 (x39 160)))
(assert (x1281 x1267))
(assert (= (=> (and (= (x501 (+ x1104 128)) x685) (= x414 (x1278 (- x685 128))) (= x338 (<= x414 224))) (and x338 (=> (and (= (ite (> x637 0) x845 (x632 127 x845)) x1714) (= (ite (>= 32 x414) (x1429 (x1221 (x1108 128)) 0) (ite (<= x414 64) (x902 (x1221 (x1108 128)) (x1221 (x1108 160)) 0) (ite (>= 96 x414) (x730 (x1221 (x1108 128)) (x1221 (x1108 160)) (x1221 (x1108 192)) 0) (ite (>= 128 x414) (x1629 (x1221 (x1108 128)) (x1221 (x1108 160)) (x1221 (x1108 192)) (x1221 (x1108 224)) 0) (ite (<= x414 160) (x1084 (x1221 (x1108 128)) (x1221 (x1108 160)) (x1221 (x1108 192)) (x1221 (x1108 224)) (x1221 (x1108 256)) 0) (ite (<= x414 192) (x1402 (x1221 (x1108 128)) (x1221 (x1108 160)) (x1221 (x1108 192)) (x1221 (x1108 224)) (x1221 (x1108 256)) (x1221 (x1108 288)) 0) (ite (<= x414 224) (x476 (x1221 (x1108 128)) (x1221 (x1108 160)) (x1221 (x1108 192)) (x1221 (x1108 224)) (x1221 (x1108 256)) (x1221 (x1108 288)) (x1221 (x1108 320)) 0) (x1221 x133)))))))) x608) (= x637 (x632 1 x146)) (= (x579 x146 2) x845) (= x1419 (< x1714 32)) (= (= (ite x1419 1 0) x637) x370)) (and (=> (and (and (= x13 x848) (= x682 0)) x370) x68) (=> (and (not x370) (and (= x874 (x632 1 x146)) (= x1237 (= 0 x874)))) (and (=> (and (and (= x1584 x531) (= x531 (x501 (+ 128 x1714))) (= x648 (x632 115792089237316195423570985008687907853269984665640564039457584007913129639680 x146))) x1237) x1715) (=> (and (and (= x988 (x1429 (x672 5) 0)) (= x151 (< 0 x1714))) (not x1237)) (and (=> (not x151) x524) (=> x151 x242))))))))) x1757))
(assert (= x3 (and x1244 x1718)))
(assert (x1504 x713))
(assert (= (or x1194 x1581) x1099))
(assert (x770 1))
(assert (= (and x1436 x1290) x1265))
(assert (x973 x1427))
(assert (x1504 x416))
(assert (= (x692 (x672 100641684887429822015232653770480429695213136867978658013931169090238473568256)) 100641684887429822015232653770480429695213136867978658013931169090238473568256))
(assert (= (and x839 x519) x441))
(assert (x1504 x1632))
(assert (x1504 x489))
(assert (x1075 x1694))
(assert (= (x672 115792089237316195423570985008687907853269984665640564039457584007913129639680) (x1221 115792089237316195423570985008687907853269984665640564039457584007913129639680)))
(assert (= (and x63 x1300) x497))
(assert (=> (<= (x1329 288) 10000) (= (x1221 (x1329 288)) (x672 (x1329 288)))))
(assert (= x105 (and x971 (not x162))))
(assert (x1504 x1190))
(assert (= (and (not x654) x683) x764))
(assert (= (x692 (x514 x190 1)) (+ 1 (x692 x190))))
(assert (= (and x448 (not x1673)) x1001))
(assert (= (x1263 192) (x692 (x1221 (x1263 192)))))
(assert (x1504 x831))
(assert (= 2867924802 (x692 (x672 2867924802))))
(assert (= (or x1654 x113) x873))
(assert (= (or x1319 x251) x551))
(assert (= x601 (and (not x1698) x320)))
(assert (= (x1221 2196353862) (x672 2196353862)))
(assert (= (and x879 x1003) x254))
(assert (x1504 x1477))
(assert (= x1572 (x692 (x1221 x1572))))
(assert (= (and (not x1110) x1343) x817))
(assert (= (and x498 x1131) x591))
(assert (x1504 x463))
(assert (= (and x1072 x125) x871))
(assert (x1504 x250))
(assert (and (x213 x848 2) (x22 x848 2) (x1182 x848 2) (= (- x848 (x632 1 x848)) (* 2 (x579 x848 2))) (=> (and (> x848 0) (> 2 0)) (and (<= (* 2 (x579 x848 2)) x848) (> (* (x579 x848 2) 2) (- x848 2)))) (x332 x848 2)))
(assert (x1504 x1424))
(assert (= (or x970 x224) x927))
(assert (= x1760 (=> (and (= x1704 x86) (= 1 x808) (= x515 x1679)) x1405)))
(assert (x1075 (x1108 128)))
(assert (=> (>= 10000 x133) (= (x672 x133) (x1221 x133))))
(assert (x1504 x1554))
(assert (x1504 x188))
(assert (and (x213 x146 2) (x22 x146 2) (x1182 x146 2) (= (- x146 (x632 1 x146)) (* 2 (x579 x146 2))) (=> (and (> x146 0) (> 2 0)) (and (<= (* 2 (x579 x146 2)) x146) (> (* (x579 x146 2) 2) (- x146 2)))) (x332 x146 2)))
(assert (=> (<= (x1263 320) 10000) (= (x1221 (x1263 320)) (x672 (x1263 320)))))
(assert (x1075 (x1329 160)))
(assert (x770 x837))
(assert (= x230 (and x344 x356)))
(assert (= (=> (and (= (x1425 128) x800) (= x1765 (not (> x1711 32)))) (and x1765 (=> (= 32 x96) x274))) x1260))
(assert (x1504 x1224))
(assert (= (and (not x212) x764) x981))
(assert (= (and x1088 (not x151)) x1323))
(assert (x1504 x58))
(assert (x1075 x931))
(assert (x1504 x733))
(assert (=> (<= (x926 192) 10000) (= (x672 (x926 192)) (x1221 (x926 192)))))
(assert (x1075 (x307 192)))
(assert (x1504 x784))
(assert (x136 x101 x1240))
(assert (x1504 x229))
(assert (x1075 x360))
(assert (= (x692 (x1221 (x307 160))) (x307 160)))
(assert (x1504 x1470))
(assert (= (x1387 128) (x692 (x1221 (x1387 128)))))
(assert (= (=> (and (= x831 x145) (= x394 x935) (= x132 x362)) x1375) x64))
(assert (= (x1108 288) (x692 (x1221 (x1108 288)))))
(assert (x1504 x958))
(assert (x1504 x1464))
(assert (x770 x574))
(assert (= 0 (x21 160)))
(assert (= (and (=> (and x117 (and (= (> 32 x1024) x368) (= (= (ite x368 1 0) x891) x1620) (= x1024 (ite (< 0 x891) x1427 (x632 127 x1427))) (= x891 (x632 1 x146)) (= (x579 x146 2) x1427))) (and (=> (and x1620 (and (= x682 0) (= x13 x848))) x68) (=> (and (not x1620) (and (= (x514 x1536 x1651) x393) (= x144 (x501 (+ x1024 31))) (= (x1429 (x672 5) 0) x1536) (= (x579 x144 32) x1651) (= x786 (< 0 x1104)))) (and (=> (and (= x1336 (< 31 x1104)) x786) (and (=> (and (not x1336) (and (= (x501 (+ x218 x1418)) x811) (= (>= 255 x1418) x1020) (= (x632 115792089237316195423570985008687907853269984665640564039457584007913129639680 x574) x218) (= x1183 (ite x1020 x821 x980)) (= (ite x734 x811 x1183) x447) (= x821 (x501 (+ x1418 x218))) (= x1418 (x501 (+ x1104 x1104))) (= x1512 x1536) (= x734 (>= 255 x1418)) (= x574 (x1107 132)) (= (x1568 x1418 x218) x980))) x652) (=> (and (and (= x1748 (x501 (+ x1443 1))) (= x1443 (x501 (+ x1104 x1104))) (= (x501 (+ x1104 132)) x710) (= (< 132 x710) x1681)) x1336) (and (=> x1681 x1729) (=> (and (not x1681) (= x1536 x1233)) x253))))) (=> (and (not x786) (and (= 0 x447) (= x1536 x1512))) x652))))) (=> (not x117) x299)) x885))
(assert (= (and x482 x233) x1364))
(assert (x1075 x98))
(assert (= x649 (and (=> (and (and (= x319 (< x1431 32)) (= (= (ite x319 1 0) x2) x12) (= (x632 1 x146) x2) (= (ite (> x2 0) x1339 (x632 127 x1339)) x1431) (= x1339 (x579 x146 2))) x19) (and (=> (and (and (= (x1429 (x672 5) 0) x190) (= (x579 x1588 32) x1432) (= x1752 (< 0 x1492)) (= (x501 (+ x1431 31)) x1588) (= x1242 (x514 x190 x1432))) (not x12)) (and (=> (and (not x1752) (and (= 0 x1464) (= x190 x1731))) x277) (=> (and (= (> x1492 31) x178) x1752) (and (=> (and x178 (and (= (x501 (+ x1492 100)) x331) (= x233 (< 100 x331)) (= x819 (x501 (+ x1492 x1492))) (= x650 (x501 (+ 1 x819))))) (and (=> (and (not x233) (= x190 x314)) x1603) (=> x233 x149))) (=> (and (and (= x1470 (x501 (+ x1492 x1492))) (= x1399 (>= 255 x1470)) (= x1589 (x501 (+ x56 x1470))) (= (ite x1399 x376 x828) x1532) (= x670 (x942 100)) (= x376 (x501 (+ x1470 x56))) (= (ite x716 x1589 x1532) x1464) (= (x632 115792089237316195423570985008687907853269984665640564039457584007913129639680 x670) x56) (= (>= 255 x1470) x716) (= x828 (x1568 x1470 x56)) (= x1731 x190)) (not x178)) x277))))) (=> x12 x604))) (=> (not x19) x886))))
(assert (= (and x269 x660) x410))
(assert (x1504 x362))
(assert (x1504 x829))
(assert (=> (<= x516 10000) (= (x672 x516) (x1221 x516))))
(assert (x1504 x939))
(assert (= (x1387 288) (x692 (x1221 (x1387 288)))))
(assert (=> (>= 10000 (x1329 256)) (= (x672 (x1329 256)) (x1221 (x1329 256)))))
(assert (= 3646176329 (x692 (x672 3646176329))))
(assert (= (=> (= x955 (< (x692 x1512) (x692 x393))) (and (=> (not x955) x613) (=> x955 x789))) x652))
(assert (= 0 (x1648 452)))
(assert (= x912 (and x1053 x134)))
(assert (= x1347 (and x1356 x1136)))
(assert (= x688 (=> (and (= x472 x792) (= (x388 x348 x848) x185) (= 0 x747) (= x754 x848)) x119)))
(assert (= x482 (and x1100 x178)))
(assert (x1504 x214))
(assert (= x1167 (or x744 x405)))
(assert (x1504 x189))
(assert (= x615 (and (not x1436) x1290)))
(assert (=> (<= (x1263 160) 10000) (= (x1221 (x1263 160)) (x672 (x1263 160)))))
(assert (= (x692 (x1221 (x815 224))) (x815 224)))
(assert (= x1006 (or x1115 x454)))
(assert (= (or (and x283 x1321) x1113) x851))
(assert (= x886 (=> (and (= x848 x1215) (= x86 x1460) (= x1078 1) (= x1157 0)) x1028)))
(assert (x1504 x1724))
(assert (x1504 x1660))
(assert (=> (>= 10000 (x39 128)) (= (x672 (x39 128)) (x1221 (x39 128)))))
(assert (x1504 x1380))
(assert (x1504 x1061))
(assert (= x443 (and x697 (not x1620))))
(assert (= (and (=> x121 x1531) (=> (and (not x121) (and (= x1061 (x501 (+ x489 1))) (= x154 (> x1061 x1273)) (= x489 (x579 x1679 2)))) (and (=> x154 x1531) (=> (and (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x731) (= (not (= x731 x614)) x1136) (<= 0 x731)) (not x154)) (and (=> (not x1136) x865) (=> (and x1136 (= x396 x1136)) x211)))))) x1354))
(assert (x1281 2))
(assert (= x1166 (and x945 (not x1606))))
(assert (x1504 x843))
(assert (=> (<= (x39 256) 10000) (= (x672 (x39 256)) (x1221 (x39 256)))))
(assert (x1504 x1203))
(assert (x1504 x470))
(assert (= x460 (and (not x1055) x725)))
(assert (= (=> (and (= x1186 x1013) (= (x80 (x1221 x1256)) x525) (= (and (< (+ x833 x525) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (<= x833 x758)) x1327) (= x758 (x80 (x1221 x1256)))) (and (=> (and (and (= x55 x86) (= 0 x1676) (= x709 x848) (= x1618 0)) (not x1327)) x420) (=> (and (and (= x1095 (x80 (x1221 x1256))) (= (x281 (x1221 x1256)) x1505) (< 0 x1505) (< (+ x1559 x833) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x407 x1186) (= 4 x407) (= (x967 (x1221 x1256)) x1559) (= 56965738197333823925951794324075424010313516842063129668313081903848242544640 x1059) (= (= x833 0) x1223) (= (x501 (+ x1559 x833)) x550) (= (- x1095 x833) x1675)) x1327) (and (=> (and (and (not (< x407 4)) (>= 1461501637330902918203684832716283019655932542975 x543) (not (= x1296 2005628311)) (> 2196353862 x1296) (not (= x1296 1991898891)) (not (> 1680813743 x1296)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x799) (not (< x1296 839595567)) (= x71 (> x889 0)) (not (< x1296 1946460669)) (not (= 1946460669 x1296)) (<= 0 x543) (<= 0 x799) (= x889 (x1393 96)) (< x543 1461501637330902918203684832716283019655932542976) (= x1296 2112976665)) x1223) (and (=> x71 x1234) (=> (and (not x71) (= x769 0)) x371))) (=> (not x1223) x34))))) x89))
(assert (x1504 x1386))
(assert (x1504 x1213))
(assert (x1281 x375))
(assert (= (x1648 324) 0))
(assert (x1504 x316))
(assert (= x392 (and x382 x248)))
(assert (= x1755 (and x957 (not x913))))
(assert (= x1390 (=> (and (= x391 x522) (= x391 (x501 (+ x668 128)))) x1571)))
(assert (x1504 x675))
(assert (= x484 (and x180 x347)))
(assert (= x53 (and x1105 x488)))
(assert (x1504 x1215))
(assert (x1281 x670))
(assert (x1504 x855))
(assert (x1504 x517))
(assert (= x449 (and x1015 x641)))
(assert (x1504 x993))
(assert (= (and x164 x561) x898))
(assert (= (x1263 256) (x692 (x1221 (x1263 256)))))
(assert (=> (<= (x1108 320) 10000) (= (x1221 (x1108 320)) (x672 (x1108 320)))))
(assert (= x1667 (and x1244 (not x1718))))
(assert (and (x329 x137 2) (=> (< 0 2) (= (+ (* (x579 x137 2) 2) (x388 x137 2)) x137)) (x624 x137 2) (x276 x137 2)))
(assert (x1504 x1040))
(assert (=> (>= 10000 (x1387 224)) (= (x1221 (x1387 224)) (x672 (x1387 224)))))
(assert (= x399 (and x1539 x1416)))
(assert (x1504 x1026))
(assert (= (or x163 x1376) x427))
(assert (= x1352 (and x1015 (not x641))))
(assert (= (and x928 x1288) x1398))
(assert (x1504 x1078))
(assert (x1504 x445))
(assert (x973 x809))
(assert (x1504 x800))
(assert (x1504 x1157))
(assert (x1504 x10))
(assert (x1504 x397))
(assert (= 0 (x1648 388)))
(assert (= (x692 (x672 2112976665)) 2112976665))
(assert (x1504 x646))
(assert (x1504 x447))
(assert (= x434 (and x134 (not x1053))))
(assert (x770 x1644))
(assert (=> (>= 10000 (x815 320)) (= (x672 (x815 320)) (x1221 (x815 320)))))
(assert (= (or x11 x84 x1459 x577 x475 x124 x714 x259 x704 x1723 x856 x588 x1469 x1037 x617 x552 x127 x1041 x1120) x481))
(assert (= (or x1555 x465) x1638))
(assert (= x779 (and (not x1229) x1167)))
(assert (= 0 (x606 128)))
(assert (= 0 (x1282 292)))
(assert (x1504 x1251))
(assert (x1504 x1668))
(assert (= x491 (and (not x839) x519)))
(assert (x1504 x1368))
(assert (=> (<= (x926 128) 10000) (= (x1221 (x926 128)) (x672 (x926 128)))))
(assert (x1504 x1383))
(assert (x1075 (x815 160)))
(assert (x1504 x112))
(assert (x1504 x286))
(assert (= x350 (and x173 x1314)))
(assert (= (x1263 224) (x692 (x1221 (x1263 224)))))
(assert (= x306 (or x402 (and x152 (not x1223)) (and x1023 x1463))))
(assert (x770 x146))
(assert (=> (>= 10000 (x1387 128)) (= (x1221 (x1387 128)) (x672 (x1387 128)))))
(assert (x1504 x629))
(assert (x1504 x768))
(assert (= (+ (x692 x513) 1) (x692 (x514 x513 1))))
(assert (= x261 (=> (and (or x1310 (not x1310)) (= (= 0 x1203) x1310)) x1332)))
(assert (= (x692 (x1221 (x1108 128))) (x1108 128)))
(assert (= x1060 (and x166 x257)))
(assert (= x1439 (and x71 x1553)))
(assert (x1504 x1488))
(assert (= (=> (and (= x1598 x1626) (= x1130 x1554) (= x120 x1151)) x1650) x46))
(assert (x1504 x1460))
(assert (= x549 (or x1069 (and x1316 (not x223)))))
(assert (= (x672 1030951317) (x1221 1030951317)))
(assert (x1504 x749))
(assert (= x1241 (and x38 x661)))
(assert (= (x1387 192) (x692 (x1221 (x1387 192)))))
(assert (x1504 x1275))
(assert (x1504 x1614))
(assert (= (x692 (x672 656196706)) 656196706))
(assert (x1075 (x1263 224)))
(assert (= (and x1336 x1736) x191))
(assert (and (x329 x418 26959946667150639794667015087019630673637144422540572481103610249216) (=> (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (= (+ (* (x579 x418 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) (x388 x418 26959946667150639794667015087019630673637144422540572481103610249216)) x418)) (x624 x418 26959946667150639794667015087019630673637144422540572481103610249216) (x276 x418 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= (x692 (x672 2196353862)) 2196353862))
(assert (x1504 x30))
(assert (x1504 x157))
(assert (x1504 x1326))
(assert (x1504 x612))
(assert (x1504 x395))
(assert (= 3923945232 (x692 (x672 3923945232))))
(assert (= (x672 3948783980) (x1221 3948783980)))
(assert (= (+ x816 (x692 x186)) (x692 (x514 x186 x816))))
(assert (x1281 128))
(assert (x1281 x1040))
(assert (= (x692 (x672 1030951317)) 1030951317))
(assert (x1504 x155))
(assert (= (x499 192) 0))
(assert (x1504 x571))
(assert (x1504 x1410))
(assert (x1504 x1431))
(assert (x1504 x731))
(assert (= (or x247 x949) x777))
(assert (x1075 x1713))
(assert (= (and x1352 (not x1487)) x1016))
(assert (= x1043 (and x1547 (not x260))))
(assert (x1504 x897))
(assert (= (x539 320) 0))
(assert (= x720 (=> (and (= x713 x1616) (= x282 x958) (= (x662 (x1221 x1256)) x282)) x208)))
(assert (x1504 x1497))
(assert (x1504 x626))
(assert (= (or (and (not x660) x269) x410) x976))
(assert (=> (>= 10000 (x1387 320)) (= (x1221 (x1387 320)) (x672 (x1387 320)))))
(assert (= (and (not x1422) x200) x850))
(assert (x1504 x1634))
(assert (= (x692 (x514 x1536 1)) (+ 1 (x692 x1536))))
(assert (= (=> (and (= x1379 (x501 (+ x635 260))) (= 128 x771) (= x1335 (x1278 (- x1379 128))) (= x1422 (= x369 0)) (= x1040 (x501 (+ x1711 31))) (= (x281 (x1221 x1256)) x369) (= x635 (x632 115792089237316195423570985008687907853269984665640564039457584007913129639904 x1040))) (and (=> x1422 x688) (=> (and (and (not (< x762 2826133662)) (not (= x762 2826133662)) (< 0 x1410) (= x1746 (x1278 (- x1668 4))) (= x1335 x1668) (not (= x762 2829837978)) (= x543 x1033) (not (> 4 x1668)) (= x762 2923951457) (not (> 2196353862 x762)) (< x762 3018310333) (< x762 3189536363) (= 78829575338057407266098799593532030895783219923606930547737006156155256307712 x946) (not (= 2867924802 x762)) (= x1094 (= x1711 (x471 100))) (= x480 (or (> x1746 57896044618658097711785492504343953926634992332820282019728792003956564819967) (and (> 96 x1746) (= (<= x1746 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)))) x1094 (<= 132 x1668) (= (x281 (x1221 x1256)) x1410) (= x1062 x360)) (not x1422)) (and (=> (and (not x480) (and (= x1685 (= x1062 x360)) (= x1488 x360))) (and (=> (not x1685) x203) (=> (and x1685 (and (= x444 (= x1033 x543)) (= x140 x1033))) (and (=> (not x444) x203) (=> (and (= x537 (and (> x1668 131) (= true (<= x1668 57896044618658097711785492504343953926634992332820282019728792003956564819967)))) x444) (and (=> (not x537) x203) (=> (and x537 (and (= (> x686 18446744073709551615) x260) (= (x1511 100) x686))) (and (=> (and (not x260) (and (= 132 x1522) (= x431 (x501 (+ x686 132))) (= x862 (> x431 x1668)))) (and (=> (and (= true x866) (not x862)) (and (=> (and (and (= (x1102 x1357) x857) (<= 0 x857) (< x857 256) (= (> x857 0) x796) (= (x902 (x1221 x360) (x672 2) 0) x1357) (<= x857 255)) x866) (and (=> (and (and (= x870 (x902 (x1221 x1033) (x672 2) 0)) (<= 0 x1490) (= x1382 (= 0 x1490)) (= (x1102 x870) x1490) (> 256 x1490) (<= x1490 255)) x796) (and (=> (not x1382) x203) (=> (and x1382 (= (= 0 x1033) x488)) (and (=> x488 x203) (=> (and (= (> x848 0) x1455) (not x488)) (and (=> (and (= x1673 (> x848 0)) x1455) (and (=> (and (and (= x409 (x969 x315)) (= x787 (= x360 x409)) (<= x409 1461501637330902918203684832716283019655932542975) (= x315 x94) (>= x409 0) (> 1461501637330902918203684832716283019655932542976 x409) (= (x1429 (x672 1) 0) x94)) x1673) (and (=> (and x787 (= (< 0 x848) x1551)) (and (=> (not x1551) x203) (=> x1551 x1509))) (=> (not x787) x1489))) (=> (not x1673) x203))) (=> (not x1455) x1689))))))) (=> (not x796) x203))) (=> (not x866) x203))) (=> x862 x203))) (=> x260 x203))))))))) (=> x480 x203))))) x1245))
(assert (= x822 (and x669 (not x787))))
(assert (= 3733007566 (x692 (x672 3733007566))))
(assert (= x555 (and x1671 (not x1371))))
(assert (= x868 (and x964 x1437)))
(assert (= (x672 3694151790) (x1221 3694151790)))
(assert (x1504 x665))
(assert (x1504 x689))
(assert (and (x329 x670 256) (=> (< 0 256) (= (+ (* (x579 x670 256) 256) (x388 x670 256)) x670)) (x624 x670 256) (x276 x670 256)))
(assert (= (and x589 x602) x528))
(assert (= (x1387 160) (x692 (x1221 (x1387 160)))))
(assert (x1504 x1330))
(assert (= 0 (x21 192)))
(assert (x1504 x433))
(assert (x1504 x79))
(assert (= x1468 (and x764 x212)))
(assert (x1504 x826))
(assert (x1504 x1679))
(assert (= (and x1455 x440) x448))
(assert (= (and (not x455) x728) x529))
(assert (=> (>= 10000 (x1329 224)) (= (x1221 (x1329 224)) (x672 (x1329 224)))))
(assert (x1504 x1658))
(assert (= (=> (and (or (and (not x1609) (and (= x603 x1617) (= x1203 x774) (= x743 x1123) (= x1287 x832))) (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1145 x445)) (= (x1642 (x1221 x1256)) x1213) (= (- x1213 x445) x1125) (= x603 x1617) (= x832 x1287) (= x743 x1123) (= x1203 x774) (= x1145 (x423 (x1221 x1256))) (= x445 (ite (= 0 x603) x833 0)) (= x1744 (x501 (+ x445 x1145)))) x1609)) (= (= x603 0) x1609)) x261) x280))
(assert (= x1463 (or x773 x484)))
(assert (x1281 32))
(assert (= (and x615 (not x1081)) x1276))
(assert (= x1555 (and x1480 x1378)))
(assert (= x293 (=> (and (or (not x246) (and (= x1355 (x501 (+ x1684 x1483))) x246)) (= x246 (< x1684 x290))) x1093)))
(assert (x1504 x1734))
(assert (= x299 (=> (and (= 1 x612) (= x256 x1172) (= x86 x495)) x847)))
(assert (x1504 x1193))
(assert (and (x329 x845 128) (=> (< 0 128) (= (+ (* (x579 x845 128) 128) (x388 x845 128)) x845)) (x624 x845 128) (x276 x845 128)))
(assert (x1504 x690))
(assert (= x393 (x1221 (x692 x393))))
(assert (x1504 x262))
(assert (= x1498 (and x1006 (not x1327))))
(assert (x1504 x771))
(assert (= x224 (or x1027 x401)))
(assert (= (x1263 128) (x692 (x1221 (x1263 128)))))
(assert (= x1105 (and x1382 x992)))
(assert (x1075 (x926 288)))
(assert (= (x672 26959946667150639794667015087019630673637144422540572481103610249215) (x1221 26959946667150639794667015087019630673637144422540572481103610249215)))
(assert (= x950 (and x1638 x1766)))
(assert (= (=> (= 0 x1270) x291) x1560))
(assert (and (x213 x897 32) (x22 x897 32) (x1182 x897 32) (= (- x897 (x632 31 x897)) (* 32 (x579 x897 32))) (=> (and (> x897 0) (> 32 0)) (and (<= (* 32 (x579 x897 32)) x897) (> (* (x579 x897 32) 32) (- x897 32)))) (x332 x897 32)))
(assert (x1075 (x1263 160)))
(assert (= (or x47 (and x254 (not x268)) (and x654 x683) x981 x135 (and (not x1003) x879) x595 (and x1534 x1311) x1038 x912 x222 (and x1284 x451) x441 x679) x266))
(assert (=> (<= x461 10000) (= (x672 x461) (x1221 x461))))
(assert (= x1071 (or x1364 x49)))
(assert (x1504 x1379))
(assert (= x1149 (and (=> (and (and (= x682 0) (= x13 x848)) x288) x68) (=> (and (and (= x1698 (> x286 x1291)) (= x286 (x501 (+ 1 x1440))) (= x1440 (x579 x256 2))) (not x288)) (and (=> (and x1698 (and (= x682 0) (= x848 x13))) x68) (=> (and (not x1698) (and (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x731) (= x1227 (not (= x731 x1067))) (<= 0 x731))) (and (=> (and x1227 (= x1227 x117)) x885) (=> (not x1227) x1757))))))))
(assert (x1504 x1385))
(assert (= x1194 (or x1118 x1754)))
(assert (x1504 x52))
(assert (x1504 x816))
(assert (= (x606 192) 0))
(assert (= (=> (and (<= 0 x614) (= (> 32 x749) x1177) (= (= (ite x1177 1 0) x732) x651) (= x732 (x632 1 x137)) (= (ite (< 0 x732) x1338 (x632 127 x1338)) x749) (<= x614 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= (x579 x137 2) x1338)) (and (=> x651 x1531) (=> (and (not x651) (and (= (x632 1 x137) x1409) (= x1436 (= 0 x1409)))) (and (=> x1436 x1404) (=> (and (= x1081 (> x749 0)) (not x1436)) (and (=> (not x1081) x724) (=> x1081 x1578))))))) x207))
(assert (x1075 x1660))
(assert (x1504 x140))
(assert (= (=> (and (= x836 x168) (= x1092 x1111)) x1413) x827))
(assert (= x475 (and x255 x1261)))
(assert (= (x111 (x501 (+ x62 100))) 0))
(assert (= 26959946667150639794667015087019630673637144422540572481103610249215 (x692 (x672 26959946667150639794667015087019630673637144422540572481103610249215))))
(assert (and (x329 x1040 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (* (x579 x1040 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x388 x1040 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1040)) (x624 x1040 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x276 x1040 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= 839595567 (x692 (x672 839595567))))
(assert (= x1611 (and x346 x147)))
(assert (x464 x897))
(assert (= (x692 (x672 2826133662)) 2826133662))
(assert (= (and x1721 x868) x825))
(assert (x1075 (x1263 256)))
(assert (x770 x719))
(assert (x1504 x360))
(assert (x1504 x170))
(assert (x1504 x1133))
(assert (= (x672 3923945232) (x1221 3923945232)))
(assert (= x1534 (and x1463 (not x1023))))
(assert (x1504 x495))
(assert (= x1019 (or x963 x1561)))
(assert (= (x692 (x672 1686547025)) 1686547025))
(assert (= x1736 (and x443 x786)))
(assert (= (and x381 (not x990)) x609))
(assert (x1504 x102))
(assert (= (=> (and (= x1233 x1512) (= x1748 x447)) x652) x253))
(assert (= (x672 115792089237316195423570985008687907853269984665640564039457584007913129639904) (x1221 115792089237316195423570985008687907853269984665640564039457584007913129639904)))
(assert (= x1601 (and x1358 x591)))
(assert (= 0 (x1306 452)))
(assert (x1281 x324))
(assert (x1504 x933))
(assert (= (and x1312 x1430) x914))
(assert (= x1353 (and (not x408) x1438)))
(assert (x1504 x951))
(assert (and (x329 x1339 128) (=> (< 0 128) (= (+ (* (x579 x1339 128) 128) (x388 x1339 128)) x1339)) (x624 x1339 128) (x276 x1339 128)))
(assert (x973 x1339))
(assert (x1504 x565))
(assert (= x326 (or x718 x350)))
(assert (= (=> (and (= x1259 (x514 x1731 1)) (= (not (< (x692 x1259) (x692 x1242))) x1331)) (and x1187 x1331)) x797))
(assert (= (and x561 (not x164)) x982))
(assert (x1701 x101))
(assert (= x1441 (x692 (x1221 x1441))))
(assert (x1075 (x1329 224)))
(assert (x770 x735))
(assert (x1281 x137))
(assert (x1075 x1033))
(assert (x1504 x738))
(assert (= (or x1231 x1666) x457))
(assert (= x974 (or x1525 x507)))
(assert (x1075 (x926 160)))
(assert (= (x672 115792089237316195423570985008687907853269984665640564039457484007913129639935) (x1221 115792089237316195423570985008687907853269984665640564039457484007913129639935)))
(assert (= x72 (and x803 x611)))
(assert (= x321 (and (not x121) x1262)))
(assert (and (x329 x146 256) (=> (< 0 256) (= (+ (* (x579 x146 256) 256) (x388 x146 256)) x146)) (x624 x146 256) (x276 x146 256)))
(assert (= x371 (=> (and (or (not x347) (and x347 (= x470 (x501 (+ 260 x889))))) (= x347 (< x889 x769))) x1285)))
(assert (x1504 x375))
(assert (= x1100 (and x1752 x937)))
(assert (= (=> (and (= x1626 x743) (= x832 x120) (= x1554 x1617)) x1650) x1332))
(assert (x464 x1189))
(assert (= x564 (=> (= (not (< 32 x502)) x1034) (and x1494 x1034))))
(assert (= (=> (and (or (not x205) (and (= (x501 (+ x1711 260)) x128) x205)) (= (> x96 x1711) x205)) x1245) x274))
(assert (= x1143 (=> (= x713 x1056) x720)))
(assert (= (x692 (x672 1871487246)) 1871487246))
(assert (= x1405 (=> (and (or (not x1350) x1350) (= (= 0 x808) x1350)) x1127)))
(assert (= (and x396 x1613) x134))
(assert (= (or x1659 x1563 x1348) x667))
(assert (and (x213 x1464 2) (x22 x1464 2) (x1182 x1464 2) (= (- x1464 (x632 1 x1464)) (* 2 (x579 x1464 2))) (=> (and (> x1464 0) (> 2 0)) (and (<= (* 2 (x579 x1464 2)) x1464) (> (* (x579 x1464 2) 2) (- x1464 2)))) (x332 x1464 2)))
(assert (x1504 x946))
(assert (x1504 x1583))
(assert (x1504 x96))
(assert (x1504 x1529))
(assert (= (and x1733 x1255) x1027))
(assert (x1504 x59))
(assert (= x1363 (and x1168 x1295)))
(assert (= x1109 (=> (and (= x55 x646) (= x709 x676) (= x193 x1676)) x1513)))
(assert (x464 x782))
(assert (= (x692 (x1221 (x1387 224))) (x1387 224)))
(assert (= x122 (and x57 x955)))
(assert (= (=> (= (= 0 x612) x289) (and (=> (and x289 (and (= 0 x997) (= x656 (x388 x348 x848)) (= x634 x848))) x1678) (=> (and (not x289) (and (= x603 1) (= x1123 x495) (= 0 x774) (= x1287 x1172))) x280))) x700))
(assert (= x962 (=> (and (= (= (ite x518 1 0) x378) x1076) (= x250 (x579 x1092 2)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x731) (<= 0 x731) (= x518 (< x58 32)) (= (ite (> x378 0) x250 (x632 127 x250)) x58) (= (x632 1 x1092) x378)) (and (=> x1076 x203) (=> (and (and (= x921 (x632 1 x1092)) (= (= x921 0) x1430)) (not x1076)) (and (=> x1430 x1612) (=> (and (= (< 0 x58) x1564) (not x1430)) (and (=> (not x1564) x751) (=> x1564 x1530)))))))))
(assert (x1504 x809))
(assert (x1504 x331))
(assert (=> (<= (x1263 192) 10000) (= (x672 (x1263 192)) (x1221 (x1263 192)))))
(assert (= (or x15 x1710) x790))
(assert (= true x842))
(assert (x1504 x1582))
(assert (x1504 x1176))
(assert (x633 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (x1504 x1287))
(assert (x464 x1679))
(assert (= x1499 (and x868 (not x1721))))
(assert (x1075 x1572))
(assert (= (and (not x178) x1100) x355))
(assert (x1504 x1503))
(assert (= (or x822 (and (not x1455) x440)) x225))
(assert (= (x692 (x1221 x133)) x133))
(assert (x1091 x375))
(assert (x1504 x548))
(assert (= x163 (and (not x998) x619)))
(assert (x1504 x1605))
(assert (= x1549 (and x766 x1625)))
(assert (= (x1221 4294967295) (x672 4294967295)))
(assert (x1075 (x1387 160)))
(assert (= (or x914 x1019) x450))
(assert (x1504 x908))
(assert (x1075 (x926 320)))
(assert (x1504 x106))
(assert (x1504 x1566))
(assert (=> (>= 10000 (x1387 160)) (= (x1221 (x1387 160)) (x672 (x1387 160)))))
(assert (x1504 x1482))
(assert (x1504 x348))
(assert (= 0 (x1306 292)))
(assert (= (=> (and (and (<= 0 x1674) (<= x1537 255) (>= x336 0) (= x905 (x281 (x1221 x1256))) (<= x336 255) (> 2196353862 x490) (not (> 302407648 x490)) (< x490 656196706) (= x1674 (x386 (x1221 x1256))) (>= x361 0) x582 (<= x1062 1461501637330902918203684832716283019655932542975) (>= x473 0) (<= x361 4294967295) (> 839595567 x490) (>= 1461501637330902918203684832716283019655932542975 x1256) (<= 0 x543) (= x1707 (x386 (x1221 x1256))) (<= x170 4294967295) (= (> (x281 (x1221 x1256)) 0) x582) (= x1707 x278) (= x490 302407648) (<= 0 x1062) (<= 0 x1537) (<= 0 x170) (< 0 x1256) (<= x473 1461501637330902918203684832716283019655932542975) (> x905 0) (>= 1461501637330902918203684832716283019655932542975 x543)) (and (and (and (> 3948783980 x1266) (= x989 x1662) (not (< x1266 3189536363)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x348) x1058 (not (= 3733007566 x1266)) (= 3923945232 x1266) (not (= 3815738821 x1266)) (= 0 x426) (= (x281 (x1221 x1256)) x1359) (= (> x1662 0) x1058) (= x989 x1566) (not (> 2196353862 x1266)) (< 0 x1359) (= x665 x348) (not (> 3733007566 x1266)) (<= 0 x348)) (and (and (not (= x1521 3733007566)) (> 3948783980 x1521) (< 0 x1762) (not (= 3815738821 x1521)) (>= x348 0) (not (> 3189536363 x1521)) (= x665 x204) (= (x281 (x1221 x1256)) x1762) (= 3923945232 x1521) (not (> 2196353862 x1521)) (<= x348 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x348 x712) (not (> 3733007566 x1521))) (and (= x353 (= x1134 0)) (= x1134 x989) (= x712 x1106)))) (and (= 3189536363 x675) (= x1566 x848) (= x278 x1135) (not (< x675 3189536363)) (= (x281 (x1221 x1256)) x867) (not (> 2196353862 x675)) (< 0 x867) (< x675 3632429537) (< x675 3733007566)))) (and (=> (and (not (< x953 2196353862)) (= x1374 (x1102 x1641)) (= x1444 (x1278 (- x204 x1732))) (= x1096 x1039) (= x953 3727475225) (>= x348 0) (not (< x953 3632429537)) (>= x1605 0) (<= x456 115792089237316195423570985008687907853269984665640564039457584007913129639935) (not (> 4 x467)) (>= x216 0) (not (> 3189536363 x953)) (not (< x993 604800)) (<= x1374 255) (> x848 0) (<= x348 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x302 (x579 x348 x848)) (= x737 (x281 (x1221 x1256))) (= x216 x1660) (< x953 3733007566) (<= x1449 1461501637330902918203684832716283019655932542975) (<= x1634 1461501637330902918203684832716283019655932542975) (= x1011 x1096) (= x1641 (x902 (x1221 x1660) (x672 2) 0)) (= x1634 x843) (= (> x848 0) x452) (not (= x953 3694151790)) (<= x348 115792089237316195423570985008687907853269984665640564039457584007913129639935) (> x848 0) (<= x216 1461501637330902918203684832716283019655932542975) (not (= x953 3646176329)) (<= x1605 1461501637330902918203684832716283019655932542975) (>= x1011 0) (= x966 0) (>= x348 0) (= (x388 x348 x848) x86) (>= 1461501637330902918203684832716283019655932542975 x1011) (< 0 x1374) (= x966 x1368) (= (x1278 (- x802 x456)) x993) (= x1605 x1660) (< 0 x737) (not (= x953 3632429537)) (<= 0 x456) (>= x1374 0) (= (x388 x1106 x1134) x1732) (and (< 3 x467) (= (<= x467 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (not (< x1632 x456)) (= x1632 x802) (< x1374 256) (>= x1634 0) (<= 0 x1449) (= x417 (x388 x348 x848))) (and (=> (not x452) x309) (=> (and (and (= x359 x1344) (<= x153 1461501637330902918203684832716283019655932542975) (> 1461501637330902918203684832716283019655932542976 x1225) (= (x1429 (x672 1) 0) x1607) (= (x386 (x1221 x1256)) x1517) (= (x969 x1594) x153) (= (x1429 (x672 1) 0) x359) (= x1594 x1607) (< 0 x848) (not (= x1225 x1256)) (< 0 x848) (= (x969 x1344) x1225) (>= x153 0) (= (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x1693 x302)) (<= x302 x1517)) x765) (= x1693 (x386 (x1221 x153))) (< x153 1461501637330902918203684832716283019655932542976) (<= x1225 1461501637330902918203684832716283019655932542975) (>= x1225 0)) x452) (and (=> (and (and (and (= x1314 (< 0 x91)) (= (x501 (+ x302 x1428)) x1761) (= (x386 (x1221 x1256)) x1047) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x302 x1428)) (= (- x1047 x302) x1453) (= (x1196 (x1221 x153)) x1428)) (or (not x1314) (and x1314 (and (= (x50 (x1221 x1256)) x436) x45 (< x322 4294967296) (= (>= (x380 (x1221 x1256)) x436) x45) x1747 (= (= (x380 (x1221 x153)) x1657) x1747) (= x1657 (x50 (x1221 x153))))))) x765) x1493) (=> (and (and (= 0 x1552) (= 0 x358)) (not x765)) x890))))) (not x353))) x841))
(assert (x1504 x1588))
(assert (= x203 (=> (and (= (x388 x348 x848) x1637) (= x848 x1141) (= 0 x939)) x1562)))
(assert (x1504 x819))
(assert (and (x329 x1160 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (* (x579 x1160 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x388 x1160 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x1160)) (x624 x1160 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x276 x1160 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1504 x123))
(assert (= (and x1088 x151) x1132))
(assert (x1504 x1200))
(assert (= x1210 (and x680 x177)))
(assert (x1504 x1324))
(assert (= (or x698 x818 x1649) x1030))
(assert (x1504 x1684))
(assert (x1504 x1160))
(assert (x1075 x1256))
(assert (x1504 x522))
(assert (x1504 x1412))
(assert (= (and x927 x658) x820))
(assert (= 0 (x539 256)))
(assert (= (x307 288) (x692 (x1221 (x307 288)))))
(assert (x770 127))
(assert (x1504 x888))
(assert (x1504 x1199))
(assert (= x593 x1494))
(assert (= x963 (and (not x1564) x1153)))
(assert (x1504 x351))
(assert (x1281 x701))
(assert (x1504 x1225))
(assert (x1558 x146))
(assert (=> (<= x755 10000) (= (x672 x755) (x1221 x755))))
(assert (x1119 x348 x848))
(assert (= (or x610 x1254) x940))
(assert (x1281 x1079))
(assert (= (or x53 x1447 x1001 x880 (and x260 x1547) x1398 x1518 x221 x449 (and x1043 x862) x228 (and x1052 (not x1685)) x294 x930 (and (not x537) x545) (and x850 x480) x1610 (and x813 (not x444))) x275))
(assert (=> (>= 10000 (x1263 224)) (= (x1221 (x1263 224)) (x672 (x1263 224)))))
(assert (x1504 x206))
(assert (= x1007 (and x1202 (not x932))))
(assert (= (and x1750 x814) x1417))
(assert (x1504 x472))
(assert (x1504 x776))
(assert (=> (<= x1713 10000) (= (x672 x1713) (x1221 x1713))))
(assert (= (x1600 (* x361 26959946667150639794667015087019630673637144422540572481103610249216)) (x924 x361 224)))
(assert (= (and x1433 x572) x1596))
(assert (= (=> (and (= 1 x939) (= x86 x1637) (= x1141 x848)) x1562) x778))
(assert (= (or x752 x413 x209) x1269))
(assert (x464 32))
(assert (= x959 (or x1542 x1007)))
(assert (= (and x1131 (not x498)) x327))
(assert (x1075 (x1387 288)))
(assert (= (and x920 (not x570)) x1317))
(assert (= x1388 (and x42 x1523)))
(assert (= (or x1596 x126) x15))
(assert (= (x1600 (* 26959946667150639794667015087019630673637144422540572481103610249216 x170)) (x924 x170 224)))
(assert (=> (<= (x307 256) 10000) (= (x672 (x307 256)) (x1221 (x307 256)))))
(assert (x1504 x1507))
(assert (=> (>= 10000 (x1329 192)) (= (x1221 (x1329 192)) (x672 (x1329 192)))))
(assert (x770 x1397))
(assert (= (x672 88571590996395278321425588994396360096048694792728512562370458433322657775616) (x1221 88571590996395278321425588994396360096048694792728512562370458433322657775616)))
(assert (x1075 (x39 128)))
(assert (x1075 x516))
(assert (=> (>= 10000 (x1387 256)) (= (x1221 (x1387 256)) (x672 (x1387 256)))))
(assert (= (and x910 x976) x849))
(assert (x1504 x145))
(assert (= x728 (or x306 x986)))
(assert (x770 x1079))
(assert (= x937 (and x1502 (not x12))))
(assert (= x1395 (and x979 (not x1112))))
(assert (= (x1108 224) (x692 (x1221 (x1108 224)))))
(assert (= 604800 (x692 (x672 604800))))
(assert (x1504 x1663))
(assert (x1504 x1626))
(assert (x1504 x1346))
(assert (x1504 x341))
(assert (= x1330 (x692 (x1221 x1330))))
(assert (= (or (and x544 (not x1457)) x643) x377))
(assert (x770 x845))
(assert (x1504 x357))
(assert (= (x692 (x672 115792089237316195423570985008687907853269984665640564039457584007913129639904)) 115792089237316195423570985008687907853269984665640564039457584007913129639904))
(assert (= (x926 192) (x692 (x1221 (x926 192)))))
(assert (= (and (not x283) x1321) x1113))
(assert (= (x21 288) 0))
(assert (=> (>= 10000 (x1108 256)) (= (x672 (x1108 256)) (x1221 (x1108 256)))))
(assert (= x1356 (and (not x154) x321)))
(assert (= (=> (and (or (and x1371 (and (= x1460 x935) (= x1078 x132) (= x1161 x1157) (= x557 (- x540 x10)) (= x1215 x145) (= (x158 (x1221 x1256)) x540) (< (+ x10 x745) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= x10 (ite (= x1078 0) x833 0)) (= (x501 (+ x745 x10)) x1209) (= (x296 (x1221 x1256)) x745))) (and (not x1371) (and (= x132 x1078) (= x1460 x935) (= x145 x1215) (= x1161 x1157)))) (= (= 0 x1078) x1371)) x1271) x1028))
(assert (x1504 x1759))
(assert (x334 x837))
(assert (x1504 x754))
(assert (= (and x1673 x448) x669))
(assert (x1504 x1201))
(assert (= x173 (and x947 x765)))
(assert (x1075 (x1387 320)))
(assert (x1504 x1220))
(assert (x1558 x574))
(assert (= x381 (and x1487 x1352)))
(assert (x1504 x896))
(assert (x1504 x1676))
(assert (= (and (not x862) x1043) x527))
(assert (= x1214 (=> (and (= x1162 (not (< 32 x357))) (= x1614 (x1446 128))) (and x1162 (=> (= x757 32) x1527)))))
(assert (x1504 x515))
(assert (x1504 x769))
(assert (x1504 x78))
(assert (and (x329 x447 2) (=> (< 0 2) (= (+ (* (x579 x447 2) 2) (x388 x447 2)) x447)) (x624 x447 2) (x276 x447 2)))
(assert (let ((x17 (* x361 26959946667150639794667015087019630673637144422540572481103610249216))) (and (x329 x17 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (* (x579 x17 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x388 x17 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x17)) (x624 x17 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x276 x17 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (= (x111 (+ 32 (x501 (+ 100 x62)))) 0))
(assert (= 0 (x215 x1198)))
(assert (x1504 x576))
(assert (= (x1108 192) (x692 (x1221 (x1108 192)))))
(assert (= 1991898891 (x692 (x672 1991898891))))
(assert (x1504 x487))
(assert (and (x329 x1305 128) (=> (< 0 128) (= (+ (* (x579 x1305 128) 128) (x388 x1305 128)) x1305)) (x624 x1305 128) (x276 x1305 128)))
(assert (= x775 (=> (and (= x1424 (x1278 (- x1199 128))) (= x1665 (<= x1424 224))) (and (=> (and (= (= x1277 x245) x60) (= x19 (not x60)) (= (ite (>= 32 x1424) (x1429 (x1221 (x307 128)) 0) (ite (<= x1424 64) (x902 (x1221 (x307 128)) (x1221 (x307 160)) 0) (ite (>= 96 x1424) (x730 (x1221 (x307 128)) (x1221 (x307 160)) (x1221 (x307 192)) 0) (ite (>= 128 x1424) (x1629 (x1221 (x307 128)) (x1221 (x307 160)) (x1221 (x307 192)) (x1221 (x307 224)) 0) (ite (>= 160 x1424) (x1084 (x1221 (x307 128)) (x1221 (x307 160)) (x1221 (x307 192)) (x1221 (x307 224)) (x1221 (x307 256)) 0) (ite (<= x1424 192) (x1402 (x1221 (x307 128)) (x1221 (x307 160)) (x1221 (x307 192)) (x1221 (x307 224)) (x1221 (x307 256)) (x1221 (x307 288)) 0) (ite (>= 224 x1424) (x476 (x1221 (x307 128)) (x1221 (x307 160)) (x1221 (x307 192)) (x1221 (x307 224)) (x1221 (x307 256)) (x1221 (x307 288)) (x1221 (x307 320)) 0) (x1221 x79)))))))) x1277)) x649) x1665))))
(assert (x1504 x735))
(assert (x1504 x956))
(assert (= x249 (or x587 x554)))
(assert (x907 x1106 x1134))
(assert (x1504 x217))
(assert (x1504 x1397))
(assert (x1504 x1522))
(assert (x1281 x1464))
(assert (= 3694151790 (x692 (x672 3694151790))))
(assert (= 0 (x111 (+ 128 (x501 (+ x62 100))))))
(assert (=> (>= 10000 (x1263 128)) (= (x1221 (x1263 128)) (x672 (x1263 128)))))
(assert (x1075 x153))
(assert (x1558 x670))
(assert (= x1168 (or x555 x295 x1745)))
(assert (x1504 x558))
(assert (= x751 x1612))
(assert (x1504 x1305))
(assert (= (and x961 x1703) x552))
(assert (= (or x1126 x904) x284))
(assert (and (x329 x1079 128) (=> (< 0 128) (= (+ (* (x579 x1079 128) 128) (x388 x1079 128)) x1079)) (x624 x1079 128) (x276 x1079 128)))
(assert (x1504 x1478))
(assert (= (and (not x1136) x1356) x853))
(assert (x1504 x358))
(assert (= (+ (x692 x1731) 1) (x692 (x514 x1731 1))))
(assert (x1504 x785))
(assert (=> (>= 10000 (x1329 320)) (= (x672 (x1329 320)) (x1221 (x1329 320)))))
(assert (x1504 x493))
(assert (= x1054 (x692 (x1221 x1054))))
(assert (= x1462 (and x1680 x100)))
(assert (= 0 (x111 (+ 192 (x501 (+ 100 x62))))))
(assert (x1504 x142))
(assert (x1075 (x815 256)))
(assert (= x1416 (or x3 x1667)))
(assert (= 1844058622 (x692 (x672 1844058622))))
(assert (= x1064 (=> (and (= (< x1164 x192) x1766) (or (and x1766 (= x798 (x501 (+ x1164 x62)))) (not x1766))) x1735)))
(assert (x1504 x1239))
(assert (x1504 x1033))
(assert (x1504 x35))
(assert (x1504 x1657))
(assert (= 0 (x606 288)))
(assert (= (and x356 (not x344)) x521))
(assert (x1281 x1160))
(assert (x1504 x378))
(assert (= (x692 (x672 3189536363)) 3189536363))
(assert (and (x329 x1397 128) (=> (< 0 128) (= (+ (* (x579 x1397 128) 128) (x388 x1397 128)) x1397)) (x624 x1397 128) (x276 x1397 128)))
(assert (= x1321 (and (not x1334) x1185)))
(assert (x1504 x1427))
(assert (x1504 x101))
(assert (x1504 x461))
(assert (x1504 x830))
(assert (= x697 (and x741 x117)))
(assert (= x1729 (=> (and (= x118 (not (> x710 164))) (= (x514 x1536 1) x29)) (and (=> (= x1233 x29) x253) x118))))
(assert (= (x1387 256) (x692 (x1221 (x1387 256)))))
(assert (= (x1221 100000000000000000) (x672 100000000000000000)))
(assert (x793 x1464))
(assert (= x479 (and x1030 x1310)))
(assert (= x61 (and (not x987) x105)))
(assert (= (x1648 420) 0))
(assert (= 0 (x504 x1114)))
(assert (= x893 (and x1246 x1551)))
(assert (x1504 x1209))
(assert (= x1563 (and x965 (not x877))))
(assert (x1504 x876))
(assert (x1504 x1693))
(assert (= (x692 (x672 1039635593)) 1039635593))
(assert (= x1646 (and x223 x1316)))
(assert (= (and x602 (not x589)) x11))
(assert (= (x692 (x1221 (x1329 256))) (x1329 256)))
(assert (= (=> (= x323 (not (> x103 32))) (and x323 x97)) x263))
(assert (x1504 x1624))
(assert (x793 x447))
(assert (= x1562 (=> (and (or x660 (not x660)) (= x660 (= 0 x939))) x763)))
(assert (x973 x1644))
(assert (x1504 x585))
(assert (= (x1108 320) (x692 (x1221 (x1108 320)))))
(assert (= (x692 (x1221 x1694)) x1694))
(assert (x1504 x1359))
(assert (x1504 x1461))
(assert (=> (>= 10000 (x1108 128)) (= (x672 (x1108 128)) (x1221 (x1108 128)))))
(assert (= (=> (and (= x227 x1677) (= x1176 x1198) (= (not (< 32 x123)) x1181) (= x1297 (x941 x1198))) (and x1181 (=> (= x875 32) x176))) x1466))
(assert (x1504 x709))
(assert (x1504 x875))
(assert (x1504 x1714))
(assert (= (and (not x584) x51) x1253))
(assert (= 0 (x1741 x1365)))
(assert (x1504 x845))
(assert (x1281 x1427))
(assert (x1504 x366))
(assert (x1504 x13))
(assert (x1504 x668))
(assert (x1504 x1726))
(assert (= (x1221 (x692 x513)) x513))
(assert (x1504 x1444))
(assert (x1504 x227))
(assert (= x1670 (and x1236 (not x711))))
(assert (= (and x1327 x1006) x152))
(assert (x1504 x670))
(assert (= x1553 (and x152 x1223)))
(assert (= 50455196340412629536459377552246818957342304218644716315923982585962625499136 (x692 (x672 50455196340412629536459377552246818957342304218644716315923982585962625499136))))
(assert (x1504 x1602))
(assert (x1504 x788))
(assert (= (and x803 (not x611)) x588))
(assert (x1075 (x926 224)))
(assert (x464 x137))
(assert (= x1158 (and (not x910) x976)))
(assert (= (x672 656196706) (x1221 656196706)))
(assert (= x1715 (=> (and (= x411 (x1278 (- x1584 128))) (= (>= 224 x411) x415)) (and x415 (=> (and (= (ite (>= 32 x411) (x1429 (x1221 (x815 128)) 0) (ite (>= 64 x411) (x902 (x1221 (x815 128)) (x1221 (x815 160)) 0) (ite (>= 96 x411) (x730 (x1221 (x815 128)) (x1221 (x815 160)) (x1221 (x815 192)) 0) (ite (<= x411 128) (x1629 (x1221 (x815 128)) (x1221 (x815 160)) (x1221 (x815 192)) (x1221 (x815 224)) 0) (ite (<= x411 160) (x1084 (x1221 (x815 128)) (x1221 (x815 160)) (x1221 (x815 192)) (x1221 (x815 224)) (x1221 (x815 256)) 0) (ite (<= x411 192) (x1402 (x1221 (x815 128)) (x1221 (x815 160)) (x1221 (x815 192)) (x1221 (x815 224)) (x1221 (x815 256)) (x1221 (x815 288)) 0) (ite (<= x411 224) (x476 (x1221 (x815 128)) (x1221 (x815 160)) (x1221 (x815 192)) (x1221 (x815 224)) (x1221 (x815 256)) (x1221 (x815 288)) (x1221 (x815 320)) 0) (x1221 x461)))))))) x1032) (= x117 (not x623)) (= (= x608 x1032) x623)) x885)))))
(assert (=> (>= 10000 (x1387 288)) (= (x1221 (x1387 288)) (x672 (x1387 288)))))
(assert (x1504 x911))
(assert (x1281 x462))
(assert (= x920 (and x653 (not x18))))
(assert (x1504 x1674))
(assert (= (or x1702 x1756) x200))
(assert (= (x1221 3727475225) (x672 3727475225)))
(assert (= (x1393 128) 0))
(assert (= (x307 320) (x692 (x1221 (x307 320)))))
(assert (x1504 x391))
(assert (= (and x1317 (not x1304)) x814))
(assert (= x1185 (or x374 x172)))
(assert (= (x692 (x1221 (x39 160))) (x39 160)))
(assert (x1504 x32))
(assert (= x554 (and x432 (not x900))))
(assert (= (=> (and (= (not (< 32 x668)) x1396) (= (x37 x1496) x581)) (and x1396 x1390)) x1292))
(assert (x1504 x131))
(assert (= x1518 (and x992 (not x1382))))
(assert (x770 x1339))
(assert (= (and (not x492) x528) x84))
(assert (= (x606 160) 0))
(assert (x1504 x828))
(assert (= (x815 160) (x692 (x1221 (x815 160)))))
(assert (x1504 x676))
(assert (= (x692 (x1221 (x1108 256))) (x1108 256)))
(assert (x1504 x1063))
(assert (x770 x670))
(assert (= x1725 (and x766 (not x1625))))
(assert (= x1696 (and (=> (and x998 (and (= x270 (x902 (x1221 x931) (x672 7) 0)) (= x308 (x514 x270 3)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x931) (>= x1724 0) (< x1724 256) (<= x1724 255) (= 0 x1724) (= (x655 x308) x1724) (= x223 (> x848 0)) (= x958 (x80 (x1221 x1256))) (<= 0 x931))) (and (=> (and x223 (and (= x219 (= x731 (ite x1716 0 1))) (>= x571 0) (= x169 x1188) (>= x731 0) (= (x902 (x1221 x931) (x672 9) 0) x1089) (= x333 (x902 (x1221 x1441) x1089 0)) (>= 255 x571) (= (x969 x169) x1441) (= (x863 x333) x571) (= (x1429 (x672 1) 0) x1188) (< x1441 1461501637330902918203684832716283019655932542976) (= (= 0 x571) x1716) (<= x1441 1461501637330902918203684832716283019655932542975) (< x571 256) (>= x1441 0) (< 0 x848) (<= x731 115792089237316195423570985008687907853269984665640564039457584007913129639935))) (and (=> (and (= x1270 1) x219) x291) (=> (not x219) x345))) (=> (not x223) x1560))) (=> (and (= x1616 x848) (not x998)) x208))))
(assert (= (x692 (x672 115792089237316195423570985008687907853269984665640564039457584007913129639935)) 115792089237316195423570985008687907853269984665640564039457584007913129639935))
(assert (= x1619 (and x377 (not x289))))
(assert (x1504 x1338))
(assert (x1504 x407))
(assert (= (x39 192) (x692 (x1221 (x39 192)))))
(assert (x1075 (x1387 224)))
(assert (= 0 (x499 128)))
(assert (x1504 x1022))
(assert (and (x329 x735 32) (=> (< 0 32) (= (+ (* (x579 x735 32) 32) (x388 x735 32)) x735)) (x624 x735 32) (x276 x735 32)))
(assert (x1504 x171))
(assert (= x1361 (and x1653 x820)))
(assert (= (=> (= (< (x692 x1731) (x692 x1242)) x661) (and (=> x661 x797) (=> (not x661) x1187))) x277))
(assert (x1504 x1216))
(assert (x1504 x1490))
(assert (= x1542 (and x932 x1202)))
(assert (= (or x1132 x1323) x247))
(assert (x1504 x195))
(assert (x1504 x1274))
(assert (x1504 x1056))
(assert (x1504 x573))
(assert (= x166 (and x725 x1055)))
(assert (= x1459 (and x1636 x288)))
(assert (= x1486 (and x1435 x424)))
(assert (= (and (not x578) x871) x744))
(assert (= x1093 (=> (and (= x1124 x1684) (= (and (<= x833 x1224) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x833 x342))) x1222) (= (x80 (x1221 x1256)) x342) (= x1224 (x80 (x1221 x1256)))) (and (=> (and (and (= (x281 (x1221 x1256)) x1381) (= 4 x92) (> x1381 0) (= x197 106459005500898838667931598610041423549574964228674563513410788872267948359680) (= x657 (x915 (x1221 x1256))) (= x114 (x80 (x1221 x1256))) (= x1124 x92) (= x1508 (= 0 x833)) (= (x501 (+ x657 x833)) x1274) (= x428 (- x114 x833)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x657 x833))) x1222) (and (=> (and x1508 (and (not (< x351 3733007566)) (not (< x351 3189536363)) (< x1062 1461501637330902918203684832716283019655932542976) (not (< x351 2196353862)) (not (< x351 3948783980)) (= x351 3948783980) (<= 0 x1062) (>= x799 0) (not (> 4 x92)) (<= x799 115792089237316195423570985008687907853269984665640564039457584007913129639935) (= x357 (x1446 96)) (<= x1062 1461501637330902918203684832716283019655932542975) (= x566 (> x357 0)))) (and (=> (and (= x757 0) (not x566)) x1527) (=> x566 x1214))) (=> (and (and (= (x388 x348 x848) x656) (= x997 0) (= x634 x848)) (not x1508)) x1678))) (=> (and (not x1222) (and (= x1203 0) (= x848 x832) (= x1617 0) (= x743 x86))) x261)))))
(assert (= (x672 33277650900348105781121326340019631498405652329376380866381358124409588547584) (x1221 33277650900348105781121326340019631498405652329376380866381358124409588547584)))
(assert (= x766 (and (not x695) x363)))
(assert (x1504 x473))
(assert (x793 x146))
(assert (x1504 x600))
(assert (=> (>= 10000 (x307 160)) (= (x672 (x307 160)) (x1221 (x307 160)))))
(assert (= (or x1670 x27 x721) x356))
(assert (and (x422 x361 26959946667150639794667015087019630673637144422540572481103610249216) (= (* 26959946667150639794667015087019630673637144422540572481103610249216 x361) (x367 x361 26959946667150639794667015087019630673637144422540572481103610249216)) (x298 x361 26959946667150639794667015087019630673637144422540572481103610249216) (x1669 x361 26959946667150639794667015087019630673637144422540572481103610249216) (x1623 x361 26959946667150639794667015087019630673637144422540572481103610249216) (and (= (* (- 115792089210356248756420345214020892766250353992003419616917011526809519390720) x361) (x367 x361 (- 115792089210356248756420345214020892766250353992003419616917011526809519390720))) (= (- (* 26959946667150639794667015087019630673637144422540572481103610249216 x361) 3121748550315992231381597229793166305748598142664971150859156959625371738819765620120306103063491971159826931121406622895447975679288285306290176) (x367 (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936) 26959946667150639794667015087019630673637144422540572481103610249216)) (= (x367 (- x361 115792089237316195423570985008687907853269984665640564039457584007913129639936) (- 115792089210356248756420345214020892766250353992003419616917011526809519390720)) (- (* (- 115792089210356248756420345214020892766250353992003419616917011526809519390720) x361) (- 13407807926820848549258032766824248897686199514843795235058590292862607070448175237982108678046597324626539887026659119732347259916498594267145363699793920)))) (x194 x361 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= (x1329 192) (x692 (x1221 (x1329 192)))))
(assert (x1504 x1595))
(assert (x770 x1338))
(assert (x1504 x342))
(assert (= x1254 (and x971 x162)))
(assert (x1504 x418))
(assert (x1504 x278))
(assert (= (x1282 420) 0))
(assert (= x387 (or x1499 x825)))
(assert (= (x1648 292) 0))
(assert (x1504 x1235))
(assert (= (=> (= (= 0 x1270) x736) (and (=> (and (not x736) (and (and (= (x514 x1699 1) x887) (= (x1690 x887) x972) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x972) (= (x794 x14) x217) (= (x514 x1699 3) x14) (>= 255 x217) (>= x972 0) (= (x902 (x1221 x931) (x672 7) 0) x1699) (>= x217 0) (< x217 256) (= x237 (= x217 0))) (or (and (and (not (> 100000000000000000 x972)) (= x833 x214) (= (x1278 (- x972 100000000000000000)) x214)) (not x237)) (and (= x972 x833) x237)))) x916) (=> (and x736 (= x848 x713)) x720))) x291))
(assert (= (or x450 (and x936 (not x240))) x546))
(assert (x1504 x1270))
(assert (= (x692 (x1221 (x926 224))) (x926 224)))
(assert (= x1530 (=> (= x1036 (not (> x58 32))) (and x751 x1036))))
(assert (x1504 x1592))
(assert (= (x307 256) (x692 (x1221 (x307 256)))))
(assert (x1504 x607))
(assert (= x1131 (and (not x978) x1474)))
(assert (x1504 x782))
(assert (= (and (not x1752) x937) x1467))
(assert (x1504 x1432))
(assert (and (x213 x1092 2) (x22 x1092 2) (x1182 x1092 2) (= (- x1092 (x632 1 x1092)) (* 2 (x579 x1092 2))) (=> (and (> x1092 0) (> 2 0)) (and (<= (* 2 (x579 x1092 2)) x1092) (> (* (x579 x1092 2) 2) (- x1092 2)))) (x332 x1092 2)))
(assert (= (x39 128) (x692 (x1221 (x39 128)))))
(assert (= (x692 (x1221 (x815 288))) (x815 288)))
(assert (= (x672 115792089237316195423570985008687907853269984665640564039457584007913129639935) (x1221 115792089237316195423570985008687907853269984665640564039457584007913129639935)))
(assert (x1075 (x1108 192)))
(assert (x1504 x1048))
(assert (x464 x1464))
(assert (= (and (not x964) x1437) x1447))
(assert (x633 x361))
(assert (= (and x1060 (not x1073)) x1666))
(assert (= x930 (and x527 (not x866))))
(assert (and (x329 x1427 128) (=> (< 0 128) (= (+ (* (x579 x1427 128) 128) (x388 x1427 128)) x1427)) (x624 x1427 128) (x276 x1427 128)))
(assert (x1504 x966))
(assert (= (and x1491 x1468) x519))
(assert (= (=> (and (= x526 (<= x1456 224)) (= (x1278 (- x1191 128)) x1456)) (and x526 (=> (and (= x1369 (= x639 x883)) (= x396 (not x1369)) (= (ite (<= x1456 32) (x1429 (x1221 (x1329 128)) 0) (ite (<= x1456 64) (x902 (x1221 (x1329 128)) (x1221 (x1329 160)) 0) (ite (>= 96 x1456) (x730 (x1221 (x1329 128)) (x1221 (x1329 160)) (x1221 (x1329 192)) 0) (ite (>= 128 x1456) (x1629 (x1221 (x1329 128)) (x1221 (x1329 160)) (x1221 (x1329 192)) (x1221 (x1329 224)) 0) (ite (>= 160 x1456) (x1084 (x1221 (x1329 128)) (x1221 (x1329 160)) (x1221 (x1329 192)) (x1221 (x1329 224)) (x1221 (x1329 256)) 0) (ite (<= x1456 192) (x1402 (x1221 (x1329 128)) (x1221 (x1329 160)) (x1221 (x1329 192)) (x1221 (x1329 224)) (x1221 (x1329 256)) (x1221 (x1329 288)) 0) (ite (<= x1456 224) (x476 (x1221 (x1329 128)) (x1221 (x1329 160)) (x1221 (x1329 192)) (x1221 (x1329 224)) (x1221 (x1329 256)) (x1221 (x1329 288)) (x1221 (x1329 320)) 0) (x1221 x1694)))))))) x639)) x211))) x258))
(assert (x1504 x1443))
(assert (=> (<= (x926 256) 10000) (= (x672 (x926 256)) (x1221 (x926 256)))))
(assert (x1504 x108))
(assert (= (and x1156 x7) x313))
(assert (x1504 x41))
(assert (x770 x375))
(assert (= (x692 (x1221 x1713)) x1713))
(assert (x770 x250))
(assert (x1075 (x1108 224)))
(assert (= x1591 (=> (and (= x625 x703) (= x62 x156) (= (x922 x625) x1220) (= x297 (not (> x1164 32)))) (and x297 (=> (= 32 x192) x1064)))))
(assert (= 3632429537 (x692 (x672 3632429537))))
(assert (and (x213 x1588 32) (x22 x1588 32) (x1182 x1588 32) (= (- x1588 (x632 31 x1588)) (* 32 (x579 x1588 32))) (=> (and (> x1588 0) (> 32 0)) (and (<= (* 32 (x579 x1588 32)) x1588) (> (* (x579 x1588 32) 32) (- x1588 32)))) (x332 x1588 32)))
(assert (x1075 (x307 256)))
(assert (= x992 (and x796 x781)))
(assert (= x702 (and x1166 (not x1442))))
(assert (x1504 x997))
(assert (= (and x568 x1045) x1548))
(assert (x1504 x837))
(assert (x793 x782))
(assert (= (x692 (x1221 x1256)) x1256))
(assert (= x597 (or x1575 x427)))
(assert (x1504 x550))
(assert (x1504 x811))
(assert (x1504 x1161))
(assert (x1504 x1240))
(assert (x1504 x114))
(assert (x1504 x892))
(assert (= x1088 (and x923 (not x1237))))
(assert (= (and x1168 (not x1295)) x1302))
(assert (= (x1221 18446744073709551615) (x672 18446744073709551615)))
(assert (= (or x940 (and (not x19) x1299)) x750))
(assert (= (x692 (x672 106459005500898838667931598610041423549574964228674563513410788872267948359680)) 106459005500898838667931598610041423549574964228674563513410788872267948359680))
(assert (and (x329 x324 256) (=> (< 0 256) (= (+ (* (x579 x324 256) 256) (x388 x324 256)) x324)) (x624 x324 256) (x276 x324 256)))
(assert (x1075 (x39 320)))
(assert (= x1547 (and x545 x537)))
(assert (= (and x1073 x1060) x1231))
(assert (= (x1221 4294967296) (x672 4294967296)))
(assert (x973 x1338))
(assert (x1504 x844))
(assert (=> (<= x1256 10000) (= (x1221 x1256) (x672 x1256))))
(assert (x1504 x921))
(assert (and (x329 x782 2) (=> (< 0 2) (= (+ (* (x579 x782 2) 2) (x388 x782 2)) x782)) (x624 x782 2) (x276 x782 2)))
(assert (x1504 x20))
(assert (x1075 (x1263 192)))
(assert (x1504 x1349))
(assert (= x221 (and x979 x1112)))
(assert (= (or x893 x225) x1437))
(assert (x1281 (* 26959946667150639794667015087019630673637144422540572481103610249216 x361)))
(assert (= (x111 (+ (x501 (+ 100 x62)) 64)) 0))
(assert (= (x692 (x1221 x755)) x755))
(assert (= 3815738821 (x692 (x672 3815738821))))
(assert (x1504 x1616))
(assert (x1504 x834))
(assert (x1504 x390))
(assert (=> (>= 10000 x79) (= (x672 x79) (x1221 x79))))
(assert (= x1366 (=> (and (or (not x707) (and (= x236 (x501 (+ x366 x1013))) x707)) (= x707 (> x463 x1013))) x89)))
(assert (= x1156 (or x1210 x1252)))
(assert (x1504 x1106))
(assert (= x681 (and (not x1556) x1318)))
(assert (x1504 x282))
(assert (= x818 (and x873 (not x1222))))
(assert (x1504 x1415))
(assert (= x643 (and x544 x1457)))
(assert (x1504 x1095))
(assert (x334 x469))
(assert (= x1452 (or x88 (and (not x396) x1613))))
(assert (=> (<= (x815 288) 10000) (= (x672 (x815 288)) (x1221 (x815 288)))))
(assert (= (x692 (x672 100000000000000000)) 100000000000000000))
(assert (= x1527 (=> (and (or (and (= x1190 (x501 (+ 260 x357))) x680) (not x680)) (= x680 (> x757 x357))) x1545)))
(assert (= x1660 (x692 (x1221 x1660))))
(assert (= (+ x155 (x692 x1727)) (x692 (x514 x1727 x155))))
(assert (= (or x1749 x1611) x1448))
(assert (=> (>= 10000 (x307 192)) (= (x672 (x307 192)) (x1221 (x307 192)))))
(assert (= (and x1045 (not x568)) x1128))
(assert (x1075 (x1329 128)))
(assert (x1504 x1141))
(assert (x1504 x426))
(assert (= (and (not x237) x77) x1258))
(assert (x1075 (x1108 160)))
(assert (= (x1221 2867924802) (x672 2867924802)))
(assert (x1504 x762))
(assert (x1504 x972))
(assert (= (or x1197 x1253) x1070))
(assert (x1504 x516))
(assert (and (x329 x670 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (* (x579 x670 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x388 x670 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x670)) (x624 x670 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x276 x670 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (x815 256) (x692 (x1221 (x815 256)))))
(assert (= x242 (=> (and (= (x37 x988) x108) (= x330 (not (> x1714 32)))) (and x330 x524))))
(assert (x1504 x1521))
(assert (x1504 x1134))
(assert (x1281 x848))
(assert (x1504 x1517))
(assert (= (x672 24341557) (x1221 24341557)))
(assert (= (x1329 320) (x692 (x1221 (x1329 320)))))
(assert (x1504 x1418))
(assert (= (and x205 x1448) x1756))
(assert (x1504 x1140))
(assert (= x1264 (and x1009 (not x1737))))
(assert (and (x329 x375 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (* (x579 x375 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x388 x375 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x375)) (x624 x375 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x276 x375 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1504 x1651))
(assert (= (or x230 x521) x1029))
(assert (= (and x1080 x1264) x1378))
(assert (x1504 x1732))
(assert (x1504 x290))
(assert (= (=> (and (> 1461501637330902918203684832716283019655932542976 x1543) (= (x1057 x1699) x1543) (= (= x1543 x1256) x1055) (>= x1543 0) (<= x1543 1461501637330902918203684832716283019655932542975)) (and (=> (and (not x1055) (and (= (ite (> x784 0) x1305 (x632 127 x1305)) x103) (= x1305 (x579 x782 2)) (not (= x784 x996)) (= (x1057 x1699) x1054) (= x782 (x678 x303)) (= x1195 (x632 1 x782)) (= x1090 (> 32 x103)) (> 1461501637330902918203684832716283019655932542976 x1054) (= x1593 (= x1195 0)) (<= 0 x1054) (<= x1054 1461501637330902918203684832716283019655932542975) (= x784 (x632 1 x782)) (= (ite x1090 1 0) x996) (= x303 (x514 x887 1)))) (and (=> (and (= (> x103 0) x1733) (not x1593)) (and (=> (not x1733) x97) (=> x1733 x263))) (=> x1593 x869))) (=> (and x1055 (and (<= x361 4294967295) (= x257 (= 106459005500898838667931598610041423549574964228674563513410788872267948359680 (x924 x361 224))) (> 4294967296 x361) (<= 0 x361))) (and (=> (and (and (= x1483 (x501 (+ 36 x1503))) (= (x632 26959946667150639794667015087019630673637144422540572481103610249215 x837) x896) (= x1073 (> x1684 0)) (= (x501 (+ 32 x1503)) x87) (= (x647 x1503) x1684) (= x837 (x504 x87)) (= x116 36) (= x830 (x501 (+ 106459005500898838667931598610041423549574964228674563513410788872267948359680 x896))) (= x148 (x1278 (- x116 32)))) x257) (and (=> (and (not x1073) (= x290 0)) x293) (=> x1073 x562))) (=> (and (not x257) (and (<= 0 x361) (> 4294967296 x361) (>= 4294967295 x361) (= x1072 (= 100641684887429822015232653770480429695213136867978658013931169090238473568256 (x924 x361 224))))) (and (=> (and (and (= (x501 (+ x1503 32)) x1176) (= x1477 (x632 26959946667150639794667015087019630673637144422540572481103610249215 x1267)) (= x442 (x1278 (- x1445 32))) (= x123 (x1018 x1503)) (= 36 x1445) (= (> x123 0) x578) (= x1677 (x501 (+ 36 x1503))) (= x859 (x501 (+ x1477 100641684887429822015232653770480429695213136867978658013931169090238473568256))) (= (x215 x1176) x1267)) x1072) (and (=> (and (= 0 x875) (not x578)) x176) (=> x578 x1466))) (=> (and (and (< x361 4294967296) (>= x361 0) (>= 4294967295 x361) (= (= 56965738197333823925951794324075424010313516842063129668313081903848242544640 (x924 x361 224)) x1737)) (not x1072)) (and (=> (and x1737 (and (= (x501 (+ x1503 32)) x1365) (= (x632 26959946667150639794667015087019630673637144422540572481103610249215 x469) x1140) (= 36 x1579) (= x366 (x501 (+ 36 x1503))) (= (x287 x1503) x1013) (= (x501 (+ x1140 56965738197333823925951794324075424010313516842063129668313081903848242544640)) x1519) (= (x1278 (- x1579 32)) x187) (= x568 (> x1013 0)) (= (x1741 x1365) x469))) (and (=> (and (= x463 0) (not x568)) x1366) (=> x568 x746))) (=> (and (not x1737) (and (>= 4294967295 x361) (= (= (x924 x361 224) 50455196340412629536459377552246818957342304218644716315923982585962625499136) x1080) (>= x361 0) (< x361 4294967296))) (and (=> (and (and (= 1 x362) (= x86 x394) (= x848 x831)) (not x1080)) x1375) (=> (and x1080 (and (<= 0 x799) (= x62 (x501 (+ x517 x30))) (= (x1278 (- x102 32)) x934) (= (x501 (+ 64 x906)) x143) (= (x1129 x1503) x1164) (= x906 (x501 (+ x1503 36))) (= x573 (x501 (+ x906 32))) (= x517 (x632 115792089237316195423570985008687907853269984665640564039457584007913129639904 x375)) (= (x632 26959946667150639794667015087019630673637144422540572481103610249215 x418) x416) (= x576 (x220 96)) (= (x501 (+ 31 x576)) x375) (= (x501 (+ x416 50455196340412629536459377552246818957342304218644716315923982585962625499136)) x1340) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x799) (= (x501 (+ 32 x1503)) x703) (= x1480 (< 0 x1164)) (= x102 (x1278 (- x62 x1503))) (= x418 (x1426 x703)) (= x30 (x501 (+ x143 32))))) (and (=> (and (not x1480) (= x192 0)) x1064) (=> x1480 x1591))))))))))))) x916))
(assert (x1075 (x1108 256)))
(assert (x1504 x28))
(assert (x1504 x1183))
(assert (= x295 (and x1371 x1671)))
(assert (x1281 x1301))
(assert (x1504 x148))
(assert (=> (<= (x926 160) 10000) (= (x672 (x926 160)) (x1221 (x926 160)))))
(assert (= (x499 256) 0))
(assert (x1701 x218))
(assert (= (x21 256) 0))
(assert (= x458 (and (not x1653) x820)))
(assert (and (x213 x447 2) (x22 x447 2) (x1182 x447 2) (= (- x447 (x632 1 x447)) (* 2 (x579 x447 2))) (=> (and (> x447 0) (> 2 0)) (and (<= (* 2 (x579 x447 2)) x447) (> (* (x579 x447 2) 2) (- x447 2)))) (x332 x447 2)))
(assert (x1504 x1104))
(assert (x1504 x732))
(assert (x1504 x1758))
(assert (= x1433 (and x1764 (not x285))))
(assert (x1504 x409))
(assert (= (and (not x796) x781) x1610))
(assert (x1701 x738))
(assert (= (and x455 x728) x317))
(assert (x1504 x1114))
(assert (=> (<= (x39 160) 10000) (= (x1221 (x39 160)) (x672 (x39 160)))))
(assert (= (=> (and (= x1604 x848) (= 0 x206) (= (x388 x348 x848) x951) (= x892 x1326)) x726) x34))
(assert (= x149 (=> (and (= (x514 x190 1) x569) (= (not (< 132 x331)) x129)) (and x129 (=> (= x569 x314) x1603)))))
(assert (= (and x927 (not x658)) x425))
(assert (x1504 x737))
(assert (x1458 x855))
(assert (= (and x1262 x121) x595))
(assert (x770 115792089237316195423570985008687907853269984665640564039457584007913129639680))
(assert (x1504 x1644))
(assert (= (and x511 (not x840)) x259))
(assert (and (x329 x375 32) (=> (< 0 32) (= (+ (* (x579 x375 32) 32) (x388 x375 32)) x375)) (x624 x375 32) (x276 x375 32)))
(assert (= x931 (x692 (x1221 x931))))
(assert (= 0 (x499 320)))
(assert (x770 x1305))
(assert (=> (<= (x1108 160) 10000) (= (x1221 (x1108 160)) (x672 (x1108 160)))))
(assert (= (and (not x233) x482) x49))
(assert (= (and x578 x871) x405))
(assert (=> (<= x1441 10000) (= (x1221 x1441) (x672 x1441))))
(assert (= (x1221 3646176329) (x672 3646176329)))
(assert (x1504 x1228))
(assert (x1504 x894))
(assert (= (x1221 (x692 x1242)) x1242))
(assert (= 0 (x1306 388)))
(assert (x1504 x1083))
(assert (= 0 (x1306 356)))
(assert (x1075 x755))
(assert (x1504 x1451))
(assert (= x1484 (and (=> (and (not x684) (and (= x59 (x579 x848 2)) (= (> x398 x731) x1112) (= x398 (x501 (+ 1 x59))))) (and (=> (and (and (= x1742 false) (>= x731 0) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x731)) (not x1112)) (and (=> (and x1742 (= x240 x1742)) x167) (=> (not x1742) x1501))) (=> x1112 x203))) (=> x684 x203))))
(assert (= x961 (and x468 x1601)))
(assert (= (and x460 (not x1593)) x1255))
(assert (= (x692 (x514 x887 1)) (+ 1 (x692 x887))))
(assert (= (+ x1557 (x692 x659)) (x692 (x514 x659 x1557))))
(assert (= (or x1333 x1 x881) x57))
(assert (= (x692 (x1221 (x815 320))) (x815 320)))
(assert (x1504 x1340))
(assert (= x222 (and x651 x1029)))
(assert (= x1613 (or x438 x1347)))
(assert (= x602 (or x327 x339)))
(assert (= x1262 (or x898 x982)))
(assert (= (and x181 x1076) x294))
(assert (= (x1221 656247078515407326148355443760548300161286948278503429861414951787075469312) (x672 656247078515407326148355443760548300161286948278503429861414951787075469312)))
(assert (= (=> (and (= x826 x366) (= x1048 x1365) (= x1709 (x5 x1048)) (= x99 (not (< 32 x1013)))) (and (=> (= x463 32) x1366) x99)) x746))
(assert (x1504 x708))
(assert (x1075 (x1329 320)))
(assert (x1504 x1249))
(assert (=> (<= (x1329 128) 10000) (= (x672 (x1329 128)) (x1221 (x1329 128)))))
(assert (x1504 x86))
(assert (= (and x1742 x1395) x1148))
(assert (= (x1221 200511672) (x672 200511672)))
(assert (x973 x1079))
(assert (= x807 (=> (= x344 (< (x692 x513) (x692 x1180))) (and (=> (not x344) x207) (=> x344 x1500)))))
(assert (x1504 x2))
(assert (x1075 x133))
(assert (x770 x1464))
(assert (x1504 x1339))
(assert (x1281 x1339))
(assert (x770 x1267))
(assert (x1701 x1240))
(assert (= (x926 160) (x692 (x1221 (x926 160)))))
(assert (= x244 (and x12 x1502)))
(assert (x1281 x1644))
(assert (=> (>= 10000 x1054) (= (x1221 x1054) (x672 x1054))))
(assert (= (and (not x1430) x1312) x1153))
(assert (x1504 x1267))
(assert (x1504 x1059))
(assert (= (x1648 260) 0))
(assert (x770 x1160))
(assert (= x1501 (=> (and (= (x1278 (- x1005 128)) x1026) (= x1580 (<= x1026 224)) (= x1005 (x501 (+ 128 x686)))) (and x1580 (=> (and (= (x632 1 x146) x846) (= x668 (ite (< 0 x846) x809 (x632 127 x809))) (= (> 32 x668) x806) (= (x579 x146 2) x809) (= x1248 (ite (<= x1026 32) (x1429 (x1221 (x1263 128)) 0) (ite (<= x1026 64) (x902 (x1221 (x1263 128)) (x1221 (x1263 160)) 0) (ite (>= 96 x1026) (x730 (x1221 (x1263 128)) (x1221 (x1263 160)) (x1221 (x1263 192)) 0) (ite (<= x1026 128) (x1629 (x1221 (x1263 128)) (x1221 (x1263 160)) (x1221 (x1263 192)) (x1221 (x1263 224)) 0) (ite (<= x1026 160) (x1084 (x1221 (x1263 128)) (x1221 (x1263 160)) (x1221 (x1263 192)) (x1221 (x1263 224)) (x1221 (x1263 256)) 0) (ite (<= x1026 192) (x1402 (x1221 (x1263 128)) (x1221 (x1263 160)) (x1221 (x1263 192)) (x1221 (x1263 224)) (x1221 (x1263 256)) (x1221 (x1263 288)) 0) (ite (<= x1026 224) (x476 (x1221 (x1263 128)) (x1221 (x1263 160)) (x1221 (x1263 192)) (x1221 (x1263 224)) (x1221 (x1263 256)) (x1221 (x1263 288)) (x1221 (x1263 320)) 0) (x1221 x755))))))))) (= x1288 (= (ite x806 1 0) x846))) (and (=> x1288 x203) (=> (and (not x1288) (and (= x585 (x632 1 x146)) (= x226 (= x585 0)))) (and (=> (and x226 (and (= (x632 115792089237316195423570985008687907853269984665640564039457584007913129639680 x146) x1686) (= (x501 (+ x668 128)) x1514) (= x522 x1514))) x1571) (=> (and (not x226) (and (= x1692 (> x668 0)) (= (x1429 (x672 5) 0) x1496))) (and (=> x1692 x1292) (=> (not x1692) x1390)))))))))))
(assert (x1504 x1401))
(assert (x1281 x418))
(assert (x1504 x87))
(assert (= (and x987 x105) x864))
(assert (x1504 x1572))
(assert (x1504 x197))
(assert (x1504 x311))
(assert (x1504 x1362))
(assert (= 0 (x21 320)))
(assert (= (=> (and (= (not (< (x692 x1021) (x692 x1180))) x943) (= (x514 x513 1) x1021)) (and x943 x207)) x1500))
(assert (= (and (not x707) x1719) x1115))
(assert (= (x1263 320) (x692 (x1221 (x1263 320)))))
(assert (= 0 (x21 224)))
(assert (= (=> (and (= x1628 x1584) (= (x501 (+ x1714 128)) x1628)) x1715) x524))
(assert (= x211 (and (=> (not x396) x1760) (=> (and x396 (and (= (x579 x146 2) x1386) (= x67 (< x171 32)) (= (= x1308 (ite x67 1 0)) x1053) (= x171 (ite (> x1308 0) x1386 (x632 127 x1386))) (= (x632 1 x146) x1308))) (and (=> (and (not x1053) (and (= x1557 (x579 x897 32)) (= (< 0 x35) x536) (= x1180 (x514 x659 x1557)) (= x897 (x501 (+ 31 x171))) (= x659 (x1429 (x672 5) 0)))) (and (=> (and (= x711 (< 31 x35)) x536) (and (=> (and (and (= x324 (x1585 132)) (= x1672 (>= 255 x738)) (= x911 (x501 (+ x834 x738))) (= (>= 255 x738) x854) (= x137 (ite x854 x911 x733)) (= x834 (x632 115792089237316195423570985008687907853269984665640564039457584007913129639680 x324)) (= (x1568 x738 x834) x1178) (= (x501 (+ x35 x35)) x738) (= x513 x659) (= x733 (ite x1672 x888 x1178)) (= (x501 (+ x738 x834)) x888)) (not x711)) x807) (=> (and x711 (and (= (> x1380 132) x248) (= (x501 (+ x35 x35)) x636) (= x1497 (x501 (+ 1 x636))) (= x1380 (x501 (+ 132 x35))))) (and (=> (and (not x248) (= x659 x184)) x1495) (=> x248 x1573))))) (=> (and (not x536) (and (= x659 x513) (= x137 0))) x807))) (=> x1053 x1531))))))
(assert (and (x329 x574 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (* (x579 x574 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x388 x574 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x574)) (x624 x574 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x276 x574 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1504 x799))
(assert (= x1489 (=> (= x352 (not (> x848 1))) (and x1689 x352))))
(assert (x1504 x1005))
(assert (= (x1221 2826133662) (x672 2826133662)))
(assert (= (x672 1844058622) (x1221 1844058622)))
(assert (x464 x146))
(assert (= 33277650900348105781121326340019631498405652329376380866381358124409588547584 (x692 (x672 33277650900348105781121326340019631498405652329376380866381358124409588547584))))
(assert (= (x815 128) (x692 (x1221 (x815 128)))))
(assert (x1504 x1618))
(assert (=> (>= 10000 (x1108 288)) (= (x1221 (x1108 288)) (x672 (x1108 288)))))
(assert (= 56965738197333823925951794324075424010313516842063129668313081903848242544640 (x692 (x672 56965738197333823925951794324075424010313516842063129668313081903848242544640))))
(assert (x1281 x735))
(assert (x1504 x373))
(assert (x1281 x1106))
(assert (x1504 x719))
(assert (= x168 (x1221 (x692 x168))))
(assert (x1281 115792089237316195423570985008687907853269984665640564039457584007913129639936))
(assert (and (x329 x1040 32) (=> (< 0 32) (= (+ (* (x579 x1040 32) 32) (x388 x1040 32)) x1040)) (x624 x1040 32) (x276 x1040 32)))
(assert (x1504 x231))
(assert (x1504 x146))
(assert (= (x1306 420) 0))
(assert (x1504 x931))
(assert (= (and x1388 (not x677)) x124))
(assert (x1504 x193))
(assert (x1504 x143))
(assert (x1504 x1617))
(assert (= 115792089237316195423570985008687907853269984665640564039457484007913129639935 (x692 (x672 115792089237316195423570985008687907853269984665640564039457484007913129639935))))
(assert (x1075 (x1387 256)))
(assert (= (and (not x246) x457) x113))
(assert (= (and (=> (and (and (= (= x1528 (ite x1708 1 0)) x641) (= x1528 (x632 1 x146)) (= (ite (> x1528 0) x1644 (x632 127 x1644)) x85) (= x1708 (> 32 x85)) (= (x579 x146 2) x1644)) x240) (and (=> x641 x203) (=> (and (not x641) (and (= x1189 (x501 (+ 31 x85))) (= (< 0 x686) x1487) (= x1077 (x514 x1727 x155)) (= x155 (x579 x1189 32)) (= x1727 (x1429 (x672 5) 0)))) (and (=> (and (not x1487) (and (= x1727 x168) (= 0 x1092))) x1413) (=> (and x1487 (= x990 (< 31 x686))) (and (=> (and (and (= (x501 (+ 132 x686)) x373) (= x932 (< 132 x373)) (= (x501 (+ 1 x372)) x1111) (= x372 (x501 (+ x686 x686)))) x990) (and (=> (and (= x1727 x836) (not x932)) x827) (=> x932 x1192))) (=> (and (not x990) (and (= (x632 115792089237316195423570985008687907853269984665640564039457584007913129639680 x719) x1240) (= x229 (ite x1337 x1065 x1583)) (= (x1511 132) x719) (= (ite x1086 x690 x229) x1092) (= (>= 255 x101) x1086) (= x168 x1727) (= x101 (x501 (+ x686 x686))) (= x690 (x501 (+ x1240 x101))) (= (>= 255 x101) x1337) (= (x1568 x101 x1240) x1583) (= (x501 (+ x1240 x101)) x1065))) x1413))))))) (=> (not x240) x778)) x167))
(assert (x1504 x1123))
(assert (x1504 x596))
(assert (= (x1221 3018310333) (x672 3018310333)))
(assert (x1504 x361))
(assert (= (=> (and (= x534 (= x747 0)) (or (and (and (= x472 x1200) (= x754 x459) (= x185 x1250) (= x1050 x747)) (not x534)) (and x534 (and (= x754 x459) (= x41 (ite (= x747 0) x833 0)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x41 x605)) (= x1635 (- x397 x41)) (= x397 (x538 (x1221 x1256))) (= x1050 x747) (= (x501 (+ x605 x41)) x1759) (= x1200 x472) (= (x73 (x1221 x1256)) x605) (= x1250 x185))))) x115) x119))
(assert (x1504 x1065))
(assert (= (x1221 3733007566) (x672 3733007566)))
(assert (x1075 (x815 320)))
(assert (x1504 x1586))
(assert (x1504 x1092))
(assert (and (x329 x574 256) (=> (< 0 256) (= (+ (* (x579 x574 256) 256) (x388 x574 256)) x574)) (x624 x574 256) (x276 x574 256)))
(assert (x1504 x364))
(assert (= x781 (and x866 x527)))
(assert (= 115792089237316195423570985008687907853269984665640564039457584007913129639680 (x692 (x672 115792089237316195423570985008687907853269984665640564039457584007913129639680))))
(assert (= (and x387 x684) x880))
(assert (= x724 x1404))
(assert (x1504 x1381))
(assert (= x1197 (and x51 x584)))
(assert (=> (>= 10000 (x39 320)) (= (x1221 (x39 320)) (x672 (x39 320)))))
(assert (= (x39 256) (x692 (x1221 (x39 256)))))
(assert (= (and x497 (not x340)) x1014))
(assert (=> (>= 10000 (x1387 192)) (= (x1221 (x1387 192)) (x672 (x1387 192)))))
(assert (= 0 (x539 288)))
(assert (x1504 x153))
(assert (x770 x418))
(assert (and (x329 x1160 32) (=> (< 0 32) (= (+ (* (x579 x1160 32) 32) (x388 x1160 32)) x1160)) (x624 x1160 32) (x276 x1160 32)))
(assert (= x960 (and x873 x1222)))
(assert (x1504 x372))
(assert (x1504 x1178))
(assert (x1504 x185))
(assert (x1504 x1365))
(assert (= x1678 (=> (and (= x634 x1287) (= x1123 x656) (= x774 x142) (= x997 x603)) x280)))
(assert (= (x692 (x1221 (x926 320))) (x926 320)))
(assert (=> (<= (x926 224) 10000) (= (x1221 (x926 224)) (x672 (x926 224)))))
(assert (= 3948783980 (x692 (x672 3948783980))))
(assert (x1701 x834))
(assert (= 0 (x1475 x703)))
(assert (= (=> (and (= x1739 (< x1022 32)) (= x1079 (x579 x1464 2)) (>= 115792089237316195423570985008687907853269984665640564039457584007913129639935 x112) (= (x632 1 x1464) x894) (= x598 (= x894 (ite x1739 1 0))) (>= x112 0) (= x1022 (ite (> x894 0) x1079 (x632 127 x1079)))) (and (=> x598 x604) (=> (and (and (= x162 (= 0 x1652)) (= x1652 (x632 1 x1464))) (not x598)) (and (=> x162 x509) (=> (and (= (> x1022 0) x987) (not x162)) (and (=> (not x987) x1743) (=> x987 x1615))))))) x1187))
(assert (= (and x1052 x1685) x813))
(assert (= x803 (and x1014 (not x243))))
(assert (x1504 x1050))
(assert (= x1404 x1760))
(assert (x1504 x1744))
(assert (x1504 x1135))
(assert (x1504 x267))
(assert (x1075 (x815 128)))
(assert (x1504 x431))
(assert (= x679 (and (not x861) x491)))
(assert (= (x1221 2005628311) (x672 2005628311)))
(assert (= (and (not x1227) x601) x520))
(assert (x770 x137))
(assert (= (x672 56965738197333823925951794324075424010313516842063129668313081903848242544640) (x1221 56965738197333823925951794324075424010313516842063129668313081903848242544640)))
(assert (x1504 x581))
(assert (= (x692 (x672 1234336674)) 1234336674))
(assert (= x1127 (=> (= x642 (= 0 x808)) (and (=> (and (not x642) (and (= x206 1) (= x892 0) (= x1704 x951) (= x515 x1604))) x726) (=> x642 x34)))))
(assert (x1504 x1514))
(assert (= (x672 2923951457) (x1221 2923951457)))
(assert (= (x692 (x1221 (x39 288))) (x39 288)))
(assert (= (x307 192) (x692 (x1221 (x307 192)))))
(assert (= (and (not x147) x346) x1749))
(assert (x770 x1427))
(assert (x1504 x92))
(assert (x1504 x389))
(assert (and (x329 x735 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (* (x579 x735 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x388 x735 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x735)) (x624 x735 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x276 x735 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x1504 x1543))
(assert (= (and x1229 x1167) x1544))
(assert (= x879 (and x1534 (not x1311))))
(assert (x973 x1301))
(assert (= x1351 (and (not x955) x57)))
(assert (= (=> (and (= x1507 x1199) (= x1507 (x501 (+ 128 x1325)))) x775) x1695))
(assert (= x27 (and (not x536) x434)))
(assert (= x1299 (or x1688 x1101)))
(assert (= (x1221 1991898891) (x672 1991898891)))
(assert (= (x499 224) 0))
(assert (= (=> (and (and (= (< x494 x1602) x984) (= x1485 x494) (= (or (not x638) x984) x580) (= x1135 x1602)) (and (< 0 x1482) (= x638 (not (= x535 0))) (> 839595567 x365) (= x1485 x1362) (> 2196353862 x365) (= x365 302407648) (= x535 x1444) (= (x281 (x1221 x1256)) x1482) (= x691 0) (= (x917 (x1221 x1256)) x1362) (not (> 302407648 x365)) (< x365 656196706))) x580) x309))
(assert (x1504 x1579))
(assert (= (x692 (x672 1680813743)) 1680813743))
(assert (and (x213 x144 32) (x22 x144 32) (x1182 x144 32) (= (- x144 (x632 31 x144)) (* 32 (x579 x144 32))) (=> (and (> x144 0) (> 32 0)) (and (<= (* 32 (x579 x144 32)) x144) (> (* (x579 x144 32) 32) (- x144 32)))) (x332 x144 32)))
(assert (x1504 x336))
(assert (= (=> (and (= (not (> x889 32)) x918) (= x968 (x1393 128))) (and (=> (= x769 32) x371) x918)) x1234))
(assert (x1504 x239))
(assert (x1504 x891))
(assert (=> (<= (x815 192) 10000) (= (x1221 (x815 192)) (x672 (x815 192)))))
(assert (x334 x418))
(assert (= 0 (x1306 260)))
(assert (x1075 (x926 128)))
(assert (= (=> (and (= x1342 (= x1200 0)) (or (not x1342) x1342)) x1631) x115))
(assert (= x904 (and (not x1080) x1264)))
(assert (x1504 x553))
(assert (x1504 x1761))
(assert (= x1300 (and x840 x511)))
(assert (x1504 x1373))
(assert (x1504 x1011))
(assert (= (or x1353 x425 x1142) x1435))
(assert (x1281 x447))
(assert (= (x692 (x1221 (x1329 224))) (x1329 224)))
(assert (= x382 (and x711 x1236)))
(assert (x1504 x823))
(assert (and (x329 x719 256) (=> (< 0 256) (= (+ (* (x579 x719 256) 256) (x388 x719 256)) x719)) (x624 x719 256) (x276 x719 256)))
(assert (x1504 x1707))
(assert (= x360 (x692 (x1221 x360))))
(assert (= x1021 (x1221 (x692 x1021))))
(assert (= (and x107 x534) x1348))
(assert (= x1763 (and (not x71) x1553)))
(assert (= (x692 (x1221 x153)) x153))
(assert (x1504 x1449))
(assert (= (and (not x566) x198) x430))
(assert (x1504 x1524))
(assert (= (x111 (+ (x501 (+ 100 x62)) 96)) 0))
(assert (= x1509 (=> (and (<= x731 115792089237316195423570985008687907853269984665640564039457584007913129639935) (>= x731 0) (= x964 true)) (and (=> (not x964) x203) (=> (and x964 (and (= (> x731 x848) x1721) (or (and (and (= x1411 (= x731 0)) (= (ite x1411 x1411 (= x848 0)) x684)) (not x1721)) (and x1721 (= x684 x1721))))) x1484)))))
(assert (x464 x144))
(assert (x1504 x1589))
(assert (x1075 (x39 288)))
(assert (= x947 (and x842 x452)))
(assert (= (x1221 1871487246) (x672 1871487246)))
(assert (= (x672 1461501637330902918203684832716283019655932542975) (x1221 1461501637330902918203684832716283019655932542975)))
(assert (=> (>= 10000 x1572) (= (x672 x1572) (x1221 x1572))))
(assert (= (and x1442 x1166) x1244))
(assert (= (=> (and (= x701 (x501 (+ x889 31))) (= x1663 (x501 (+ x239 260))) (= x239 (x632 115792089237316195423570985008687907853269984665640564039457584007913129639904 x701)) (= x1023 (= 0 x804)) (= (x1278 (- x1663 128)) x1044) (= x804 (x281 (x1221 x1256))) (= 128 x541)) (and (=> (and (not x1023) (and (> 302407648 x1389) (not (< x1170 4)) (= x292 (= (x1010 100) x889)) (< 0 x24) x292 (> 2196353862 x1389) (> 839595567 x1389) (= (x281 (x1221 x1256)) x24) (= x785 656247078515407326148355443760548300161286948278503429861414951787075469312) (>= x1170 132) (= 24341557 x1389) (= x1044 x1170) (> 200511672 x1389) (= (or (and (> 96 x689) (= (<= x689 57896044618658097711785492504343953926634992332820282019728792003956564819967) true)) (< 57896044618658097711785492504343953926634992332820282019728792003956564819967 x689)) x1311) (= x98 x543) (= x1273 x799) (= (x1278 (- x1170 4)) x689))) (and (=> (and (and (= (= x98 x543) x1003) (= x565 x98)) (not x1311)) (and (=> (not x1003) x1531) (=> (and x1003 (and (= x614 x1273) (= x268 (and (> x1170 131) (= (<= x1170 57896044618658097711785492504343953926634992332820282019728792003956564819967) true))))) (and (=> (not x268) x1531) (=> (and x268 (and (= (x1585 100) x35) (= x1284 (> x35 18446744073709551615)))) (and (=> (and (and (= (x501 (+ 132 x35)) x466) (= x956 132) (= (> x466 x1170) x654)) (not x1284)) (and (=> x654 x1531) (=> (and (= true x212) (not x654)) (and (=> (not x212) x1531) (=> (and x212 (and (= (x1102 x36) x1385) (= (= x1385 0) x1491) (> 256 x1385) (>= 255 x1385) (= (x902 (x1221 x98) (x672 2) 0) x36) (<= 0 x1385))) (and (=> (and x1491 (= (= x98 0) x839)) (and (=> x839 x1531) (=> (and (not x839) (and (= x1679 (x501 (+ x848 1))) (= true x861))) (and (=> (and x861 (and (or (and (= x164 x121) x164) (and (and (= x121 (ite x40 x40 (= 0 x1679))) (= x40 (= x614 0))) (not x164))) (= x164 (< x1679 x1273)))) x1354) (=> (not x861) x1531))))) (=> (not x1491) x1531))))))) (=> x1284 x1531))))))) (=> x1311 x1531))) (=> x1023 x34))) x1285))
(assert (and (x329 x809 128) (=> (< 0 128) (= (+ (* (x579 x809 128) 128) (x388 x809 128)) x809)) (x624 x809 128) (x276 x809 128)))
(assert (= x477 (and x1304 x1317)))
(assert (x1504 x1519))
(assert (= x714 (or x1738 (and x978 x1474))))
(assert (= (x1475 x625) 0))
(assert (= (and (not x1314) x173) x718))
(assert (x770 x324))
(assert (x1504 x95))
(assert (= (x307 224) (x692 (x1221 (x307 224)))))
(assert (x1504 x743))
(assert (x1504 x133))
(assert (x1504 x614))
(assert (x1504 x543))
(assert (= x1513 (=> (and (= x1598 x646) (= x193 x1130) (= x1151 x676)) x46)))
(assert (x1504 x889))
(assert (x1504 x673))
(assert (x973 x1305))
(assert (x1075 (x307 288)))
(assert (x1504 x1389))
(assert (x1281 x1305))
(assert (= (x1221 302407648) (x672 302407648)))
(assert (= (or x317 x1498 x529) x51))
(assert (x1504 x1186))
(assert (x1504 x508))
(assert (= 0 (x539 224)))
(assert (x1504 x712))
(assert (x1504 x376))
(assert (x770 x1301))
(assert (= (x692 (x1221 x98)) x98))
(assert (x1075 (x1329 288)))
(assert (x1075 (x815 224)))
(assert (and (x329 x146 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (* (x579 x146 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x388 x146 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x146)) (x624 x146 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x276 x146 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (= (=> (and (= x584 (= 0 x1618)) (or (not x584) x584)) x1109) x420))
(assert (x1504 x400))
(assert (= (or x1452 x266) x664))
(assert (=> (<= (x307 288) 10000) (= (x672 (x307 288)) (x1221 (x307 288)))))
(assert (x1504 x1465))
(assert (= (=> (and (= x1056 x848) (= x1524 x86) (= x195 x1401)) x160) x446))
(assert (x1504 x968))
(assert (x1504 x540))
(assert (= x1246 (and x787 x669)))
(assert (x1504 x858))
(assert (= (x1221 2829837978) (x672 2829837978)))
(assert (x1504 x1164))
(assert (x1504 x802))
(assert (x973 x1386))
(assert (= x1731 (x1221 (x692 x1731))))
(assert (x1504 x1428))
(assert (=> (>= 10000 (x926 320)) (= (x1221 (x926 320)) (x672 (x926 320)))))
(assert (= (and (not x288) x1636) x320))
(assert (= (x307 128) (x692 (x1221 (x307 128)))))
(assert (=> (<= (x39 288) 10000) (= (x672 (x39 288)) (x1221 (x39 288)))))
(assert (= (x1221 78829575338057407266098799593532030895783219923606930547737006156155256307712) (x672 78829575338057407266098799593532030895783219923606930547737006156155256307712)))
(assert (x136 x1470 x56))
(assert (x1504 x909))
(assert (x1504 x90))
(assert (x464 x447))
(assert (x1504 x1293))
(assert (x1504 x1308))
(assert (and (x213 x1679 2) (x22 x1679 2) (x1182 x1679 2) (= (- x1679 (x632 1 x1679)) (* 2 (x579 x1679 2))) (=> (and (> x1679 0) (> 2 0)) (and (<= (* 2 (x579 x1679 2)) x1679) (> (* (x579 x1679 2) 2) (- x1679 2)))) (x332 x1679 2)))
(assert (x1504 x1440))
(assert (= x1474 (and x72 x384)))
(assert (= x1052 (and x850 (not x480))))
(assert (= x1211 (or x1549 x1725)))
(assert (= x1118 (and x1342 x667)))
(assert (= (and x1269 x1068) x727))
(assert (= x560 (and x615 x1081)))
(assert (= (and (not x1680) x100) x1745))
(assert (= (+ 1 (x692 x168)) (x692 (x514 x168 1))))
(assert (x1504 x701))
(assert (= x945 (and (not x627) x919)))
(assert (= (+ (x692 x1699) 3) (x692 (x514 x1699 3))))
(assert (= 0 (x1282 452)))
(assert (= (and (not x1692) x616) x1525))
(assert (= (=> (and (= (not (> x373 164)) x1590) (= (x514 x1727 1) x412)) (and x1590 (=> (= x836 x412) x827))) x1192))
(assert (x1504 x43))
(assert (= x928 (and x1395 (not x1742))))
(assert (x1504 x1628))
(assert (x1504 x459))
(assert (x1504 x1598))
(assert (x1504 x1559))
(assert (= (x1221 1039635593) (x672 1039635593)))
(assert (x1504 x1604))
(assert (x136 x1418 x218))
(assert (= (and x570 x920) x1688))
(assert (x1504 x1082))
(assert (= 0 (x111 (+ 160 (x501 (+ 100 x62))))))
(assert (x1504 x996))
(assert (= x683 (and x451 (not x1284))))
(assert (= (and (not x1480) x1378) x465))
(assert (= x363 (and (not x252) x853)))
(assert (= (x1221 1686547025) (x672 1686547025)))
(assert (= x209 (and (not x765) x947)))
(assert (= x182 (and x38 (not x661))))
(assert (and (x213 x137 2) (x22 x137 2) (x1182 x137 2) (= (- x137 (x632 1 x137)) (* 2 (x579 x137 2))) (=> (and (> x137 0) (> 2 0)) (and (<= (* 2 (x579 x137 2)) x137) (> (* (x579 x137 2) 2) (- x137 2)))) (x332 x137 2)))
(assert (= 2923951457 (x692 (x672 2923951457))))
(assert (= (and x591 (not x1358)) x617))
(assert (x1504 x1355))
(assert (= (=> (= x910 (= x939 0)) (and (=> x910 x688) (=> (and (and (= x472 0) (= 1 x747) (= x185 x1637) (= x1141 x754)) (not x910)) x119))) x763))
(assert (x793 x137))
(assert (= (and x1156 (not x7)) x1261))
(assert (x1075 (x307 224)))
(assert (= 2829837978 (x692 (x672 2829837978))))
(assert (x1504 x846))
(assert (= x726 (=> (and (= (= 0 x206) x455) (or (and (and (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x364 x776)) (= x951 x55) (= x892 x1618) (= x1604 x709) (= (x722 (x1221 x1256)) x1476) (= (x478 (x1221 x1256)) x364) (= x776 (ite (= 0 x206) x833 0)) (= (- x1476 x776) x272) (= x1676 x206) (= x389 (x501 (+ x776 x364)))) x455) (and (not x455) (and (= x206 x1676) (= x709 x1604) (= x892 x1618) (= x55 x951))))) x420)))
(assert (x1504 x1085))
(assert (= (x215 x1176) 0))
(assert (= (and x444 x813) x545))
(assert (=> (>= 10000 (x1108 224)) (= (x1221 (x1108 224)) (x672 (x1108 224)))))
(assert (x1504 x82))
(assert (x1504 x691))
(assert (= 200511672 (x692 (x672 200511672))))
(assert (x770 x701))
(assert (= x1581 (or x284 x1070)))
(assert (x1281 x469))
(assert (= x979 (and x387 (not x684))))
(assert (x1504 x103))
(assert (x770 26959946667150639794667015087019630673637144422540572481103610249215))
(assert (= x79 (x692 (x1221 x79))))
(assert (= (x692 (x1221 (x1387 320))) (x1387 320)))
(assert (x1504 x989))
(assert (= x986 (and x1621 (not x642))))
(assert (= (x672 3632429537) (x1221 3632429537)))
(assert (= (x692 (x1221 x1033)) x1033))
(assert (= (x1221 2112976665) (x672 2112976665)))
(assert (= x1375 (=> (and (= x676 x831) (= x394 x646) (= x362 x193)) x1513)))
(assert (x770 x1040))
(assert (= x25 (=> (and (= (not (> x1325 32)) x161) (= x708 (x37 x512))) (and x161 x1695))))
(assert (=> (<= x98 10000) (= (x1221 x98) (x672 x98))))
(assert (x1075 x1054))
(assert (x1504 x502))
(assert (and (x329 x1267 26959946667150639794667015087019630673637144422540572481103610249216) (=> (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (= (+ (* (x579 x1267 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) (x388 x1267 26959946667150639794667015087019630673637144422540572481103610249216)) x1267)) (x624 x1267 26959946667150639794667015087019630673637144422540572481103610249216) (x276 x1267 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (x1281 x837))
(assert (= x1202 (and x990 x381)))
(assert (x1504 x494))
(assert (x1504 x192))
(assert (x1558 x719))
(assert (x1504 x878))
(assert (x1075 x1441))
(assert (= x516 (x692 (x1221 x516))))
(assert (= 0 (x504 x87)))
(assert (= (x692 (x1221 (x39 224))) (x39 224)))
(assert (= x83 (or (and x1422 x200) (and (not x1661) x1640) x849)))
(assert (= x160 (=> (= (= x1401 0) x1334) (and (=> x1334 x1143) (=> (and (and (or (and (and (>= x1524 0) (= (x501 (+ x1524 100000000000000000)) x878) (not (> x1524 115792089237316195423570985008687907853269984665640564039457484007913129639935)) (<= x1524 115792089237316195423570985008687907853269984665640564039457584007913129639935)) (not x283)) x283) (and (>= 255 x1586) (< x1586 256) (= (x1576 x14) x1586) (= x283 (= x1586 0)) (>= x1586 0))) (not x1334)) x975)))))
(assert (= (x672 1461501637330902918203684832716283019655932542976) (x1221 1461501637330902918203684832716283019655932542976)))
(assert (and (x329 x1338 128) (=> (< 0 128) (= (+ (* (x579 x1338 128) 128) (x388 x1338 128)) x1338)) (x624 x1338 128) (x276 x1338 128)))
(assert (= x507 (and x1692 x616)))
(assert (= x1535 (and x363 x695)))
(assert (x1504 x318))
(assert (x633 x170))
(assert (x1075 (x39 192)))
(assert (x1504 x1297))
(assert (=> (<= (x39 192) 10000) (= (x1221 (x39 192)) (x672 (x39 192)))))
(assert (= x957 (or x959 x1016 x609)))
(assert (= (and x928 (not x1288)) x1171))
(assert (=> (>= 10000 (x926 288)) (= (x1221 (x926 288)) (x672 (x926 288)))))
(assert (= x511 (and x1261 (not x255))))
(assert (= (x1221 3815738821) (x672 3815738821)))
(assert (= x1009 (and x125 (not x1072))))
(assert (x793 x1092))
(assert (= (x1425 128) 0))
(assert (= (and x1299 x19) x1502))
(assert (x1504 x1044))
(assert (= (or x399 (and x919 x627) (and (not x1420) x1403) (and x1606 x945) x1025 (and x435 x1655) x702 (and x1462 (not x533)) x477 x74 x244) x300))
(assert (x1504 x603))
(assert (=> (<= (x307 128) 10000) (= (x672 (x307 128)) (x1221 (x307 128)))))
(assert (= (x692 (x672 3727475225)) 3727475225))
(assert (x1504 x62))
(assert (x1504 x1748))
(assert (x1075 x79))
(assert (x1504 x634))
(assert (x770 x469))
(assert (= 0 (x606 256)))
(assert (x1504 x605))
(assert (x1504 x832))
(assert (x1504 x1121))
(assert (= (x1282 324) 0))
(assert (= (and x736 x628) x1012))
(assert (= (x672 106459005500898838667931598610041423549574964228674563513410788872267948359680) (x1221 106459005500898838667931598610041423549574964228674563513410788872267948359680)))
(assert (x1504 x1301))
(assert (= x1561 (and x1153 x1564)))
(assert (x1504 x1557))
(assert (x1075 (x815 192)))
(assert (= x1377 (=> (and (= (and (>= x1592 x833) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x262 x833))) x877) (= x1257 x123) (= x1592 (x80 (x1221 x1256))) (= (x80 (x1221 x1256)) x262)) (and (=> (and x877 (and (< 0 x829) (= x884 (x183 (x1221 x1256))) (= x343 (- x1201 x833)) (= (x501 (+ x884 x833)) x1313) (= x1133 4) (= (x80 (x1221 x1256)) x1201) (= x1661 (= 0 x833)) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x833 x884)) (= x1133 x1257) (= (x281 (x1221 x1256)) x829) (= x1451 100641684887429822015232653770480429695213136867978658013931169090238473568256))) (and (=> (not x1661) x688) (=> (and (and (= 3733007566 x390) (not (< x390 3733007566)) (<= 0 x543) (not (> 3189536363 x390)) (< x390 3948783980) (not (< x390 2196353862)) (< x1062 1461501637330902918203684832716283019655932542976) (>= x1062 0) (>= 1461501637330902918203684832716283019655932542975 x543) (< x543 1461501637330902918203684832716283019655932542976) (= (< 0 x1711) x147) (not (< x1133 4)) (= x1711 (x1425 96)) (>= 1461501637330902918203684832716283019655932542975 x1062)) x1661) (and (=> (and (not x147) (= x96 0)) x274) (=> x147 x1260))))) (=> (and (and (= x848 x459) (= x86 x1250) (= x1050 0) (= x1200 0)) (not x877)) x115)))))
(assert (= (and x767 (not x1609)) x698))
(assert (x1504 x1730))
(assert (x1504 x436))
(assert (x1504 x703))
(assert (x1504 x1145))
(assert (= (x606 224) 0))
(assert (x1504 x1441))
(assert (x1504 x462))
(assert (= (and x254 x268) x451))
(assert (x1504 x723))
(assert (x1504 x1191))
(assert (=> (<= x360 10000) (= (x672 x360) (x1221 x360))))
(assert (x1504 x648))
(assert (= (+ (x692 x659) 1) (x692 (x514 x659 1))))
(assert (x1075 (x1329 192)))
(assert (x1504 x144))
(assert (= x1212 (and (not x1681) x191)))
(assert (= x949 (and x923 x1237)))
(assert (= (and x900 x432) x587))
(assert (x1281 x1134))
(assert (= (x692 (x672 4294967296)) 4294967296))
(assert (x1504 x1256))
(assert (x973 x250))
(assert (= (and (not x1655) x435) x1403))
(assert (x1281 26959946667150639794667015087019630673637144422540572481103610249216))
(assert (= (x1221 50455196340412629536459377552246818957342304218644716315923982585962625499136) (x672 50455196340412629536459377552246818957342304218644716315923982585962625499136)))
(assert (= (or x1361 x458) x1438))
(assert (x1504 x1374))
(assert (x1504 x1751))
(assert (= x1640 (and x877 x965)))
(assert (x1504 x467))
(assert (x1504 x1250))
(assert (x1504 x1024))
(assert (= x1101 (or x249 x1417)))
(assert (x1504 x26))
(assert (x1504 x1532))
(assert (x464 x848))
(assert (and (x329 x837 26959946667150639794667015087019630673637144422540572481103610249216) (=> (< 0 26959946667150639794667015087019630673637144422540572481103610249216) (= (+ (* (x579 x837 26959946667150639794667015087019630673637144422540572481103610249216) 26959946667150639794667015087019630673637144422540572481103610249216) (x388 x837 26959946667150639794667015087019630673637144422540572481103610249216)) x837)) (x624 x837 26959946667150639794667015087019630673637144422540572481103610249216) (x276 x837 26959946667150639794667015087019630673637144422540572481103610249216)))
(assert (= (=> (and (or (and (and (= x358 x322) (= x91 x1552)) (not x983)) (and (and (= x1712 (- x82 x93)) (= x91 x1552) (= x1293 (x501 (+ x93 x1645))) (> 115792089237316195423570985008687907853269984665640564039457584007913129639936 (+ x93 x1645)) (= x1645 (x1639 (x1221 x1256))) (= x82 (x496 (x1221 x153))) (= x358 x322) (= (ite (= x91 0) x302 0) x93)) x983)) (= x983 (= 0 x91))) x890) x1493))
(assert (= (x692 (x672 3018310333)) 3018310333))
(assert (x1701 x1470))
(assert (x1504 x1711))
(assert (= (and x814 (not x1750)) x432))
(assert (x770 x782))
(assert (= (and x520 (not x370)) x923))
(assert (= x1143 x975))
(assert (= x1126 (or x1363 x1302)))
(assert (= (and x1343 x1110) x429))
(assert (x1701 x1418))
(assert (x1504 x1151))
(assert (and (= 81 (x367 27 3)) (= 9 (x367 3 3)) (= (x367 9 3) 27) (= 81 (x367 9 9))))
(assert (= (x692 (x1221 (x926 128))) (x926 128)))
(assert (x1504 x93))
(assert (= (and x219 x1646) x567))
(assert (=> (>= 10000 (x307 224)) (= (x672 (x307 224)) (x1221 (x307 224)))))
(assert (x1504 x1170))
(assert (= (and (not x786) x443) x1333))
(assert (x1504 x216))
(assert (= x461 (x692 (x1221 x461))))
(assert (let ((x17 (* 26959946667150639794667015087019630673637144422540572481103610249216 x170))) (and (x329 x17 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (* (x579 x17 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x388 x17 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x17)) (x624 x17 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x276 x17 115792089237316195423570985008687907853269984665640564039457584007913129639936))))
(assert (x1504 x1341))
(assert (x1504 x302))
(assert (x1504 x798))
(assert (x1504 x745))
(assert (= x1098 (or x16 x479)))
(assert (= x1316 (and x998 x619)))
(assert (= (and x1640 x1661) x346))
(assert (= (x692 (x1221 (x1329 128))) (x1329 128)))
(assert (x973 x462))
(assert (=> (>= 10000 (x307 320)) (= (x1221 (x307 320)) (x672 (x307 320)))))
(assert (x1504 x563))
(assert (x1504 x531))
(assert (x1281 x809))
(assert (= x435 (and x1462 x533)))
(assert (and (x329 x324 115792089237316195423570985008687907853269984665640564039457584007913129639936) (=> (< 0 115792089237316195423570985008687907853269984665640564039457584007913129639936) (= (+ (* (x579 x324 115792089237316195423570985008687907853269984665640564039457584007913129639936) 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x388 x324 115792089237316195423570985008687907853269984665640564039457584007913129639936)) x324)) (x624 x324 115792089237316195423570985008687907853269984665640564039457584007913129639936) (x276 x324 115792089237316195423570985008687907853269984665640564039457584007913129639936)))
(assert (x770 x1386))
(assert (= (x672 100641684887429822015232653770480429695213136867978658013931169090238473568256) (x1221 100641684887429822015232653770480429695213136867978658013931169090238473568256)))
(assert (= (x692 (x1221 (x1108 160))) (x1108 160)))
(assert (= (and x1593 x460) x970))
(assert (= x1567 (or x560 x1276)))
(assert (= (=> (and (= x1460 (x388 x348 x848)) (= x1215 x848) (= x1157 x909) (= 0 x1078)) x1028) x604))
(assert (x1504 x884))
(assert (= x269 (or x546 x275)))
(assert (= 0 (x539 128)))
(assert (= (x1221 1680813743) (x672 1680813743)))
(assert (x1504 x1111))
(assert (= (and x1300 (not x63)) x1469))
(assert (= x1069 (and (not x219) x1646)))
(assert (= (and x340 x497) x577))
(assert (= (x692 (x672 78829575338057407266098799593532030895783219923606930547737006156155256307712)) 78829575338057407266098799593532030895783219923606930547737006156155256307712))
(assert (= (x672 1946460669) (x1221 1946460669)))
(assert (= (x692 (x672 88571590996395278321425588994396360096048694792728512562370458433322657775616)) 88571590996395278321425588994396360096048694792728512562370458433322657775616))
(assert (= x631 (or x851 x1481)))
(assert (= (and x1468 (not x1491)) x1038))
(assert (x1504 x1762))
(assert (and (x213 x256 2) (x22 x256 2) (x1182 x256 2) (= (- x256 (x632 1 x256)) (* 2 (x579 x256 2))) (=> (and (> x256 0) (> 2 0)) (and (<= (* 2 (x579 x256 2)) x256) (> (* (x579 x256 2) 2) (- x256 2)))) (x332 x256 2)))
(assert (=> (<= (x815 256) 10000) (= (x1221 (x815 256)) (x672 (x815 256)))))
(assert (x1504 x1709))
(assert (x1091 x701))
(assert (x1504 x456))
(assert (= x77 (and (not x736) x628)))
(assert (= (x692 (x1221 (x39 320))) (x39 320)))
(assert (x1075 (x926 256)))
(assert (= (x692 (x672 18446744073709551615)) 18446744073709551615))
(assert (x770 x1092))
(assert (= (and x1620 x697) x1120))
(assert (x1504 x490))
(assert (x1504 x398))
(assert (x1504 x574))
(assert (= x177 (or x430 x1510)))
(assert (= (and x321 x154) x47))
(assert (x1504 x1179))
(assert (x1504 x833))
(assert (= x1509 x1689))
(assert (= (=> (and (= x1097 (not (> (x692 x1077) (x692 x437)))) (= (x514 x168 1) x437)) (and x1097 x962)) x530))
(assert (x1075 (x307 320)))
(assert (x1504 x1130))
(assert (= (=> (= (> x848 0) x589) (and (=> (and (not x589) (and (= x848 x13) (= 0 x682))) x68) (=> (and x589 (and (= (x1278 (- x848 1)) x1624) (= (x1278 (- x848 1)) x256) (= x492 true))) (and (=> (and (and (or (and (not x1110) (and (= x288 (ite x1208 x1208 (= 0 x256))) (= x1208 (= x1067 0)))) (and x1110 (= x1110 x288))) (= (< x256 x1291) x1110)) x492) x1149) (=> (and (not x492) (and (= 0 x682) (= x13 x848))) x68))))) x312))
(assert (=> (<= x1033 10000) (= (x1221 x1033) (x672 x1033))))
(assert (x1504 x906))
(assert (= (x926 288) (x692 (x1221 (x926 288)))))
(assert (x1504 x867))
(assert (x1281 (* 26959946667150639794667015087019630673637144422540572481103610249216 x170)))
(assert (x1504 x905))
(assert (x1504 x116))
(assert (x1504 x365))
(assert (x1504 x1677))
(assert (x1558 x324))
(assert (x1504 x1047))
(assert (= x345 (=> (= (not (> x848 1)) x559) (and x1560 x559))))
(assert (= (=> (and (= 0 x682) (= x848 x13)) x68) x1286))
(assert (=> (<= (x815 128) 10000) (= (x672 (x815 128)) (x1221 (x815 128)))))
(assert (= (and (not x572) x1433) x126))
(assert (x1504 x792))
(assert (x1504 x1421))
(assert (x1281 x348))
(assert (x1504 x525))
(assert (= 0 (x539 160)))
(assert (x1504 x710))
(assert (x1504 x417))
(assert (x334 x1267))
(assert (= x181 (or x1755 x882)))
(check-sat)
(exit)
